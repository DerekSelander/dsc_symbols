|| __DATA.__objc_data _OBJC_CLASS_$_AltitudeComplicationDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_AltitudeInclineComplicationDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_AltitudeModularSmallView
|| __DATA.__objc_data _OBJC_CLASS_$_AltitudeRichBezelDialView
|| __DATA.__objc_data _OBJC_CLASS_$_AltitudeRichCenterLabelDialView
|| __DATA.__objc_data _OBJC_CLASS_$_AltitudeRichCircularDialView
|| __DATA.__objc_data _OBJC_CLASS_$_AltitudeRichCornerDialView
|| __DATA.__objc_data _OBJC_CLASS_$_AltitudeRichDialView
|| __DATA.__objc_data _OBJC_CLASS_$_AltitudeRichXLDialView
|| __DATA.__objc_data _OBJC_CLASS_$_CompassAltitudeComplicationDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CompassBaseRichCircularDialView
|| __DATA.__objc_data _OBJC_CLASS_$_CompassBearingComplicationDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CompassComplicationDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CompassExtraLargeRichCircularDialView
|| __DATA.__objc_data _OBJC_CLASS_$_CompassRichBezelDialView
|| __DATA.__objc_data _OBJC_CLASS_$_CompassRichCircularDialView
|| __DATA.__objc_data _OBJC_CLASS_$_CompassRichCornerDialView
|| __DATA.__objc_data _OBJC_CLASS_$_CompassRichDialView
|| __DATA.__objc_data _OBJC_CLASS_$_CompassRichRectangularDialView
|| __DATA.__objc_data _OBJC_CLASS_$_NCAltitude
|| __DATA.__objc_data _OBJC_CLASS_$_NCBearing
|| __DATA.__objc_data _OBJC_CLASS_$_NCHeading
|| __DATA.__objc_data _OBJC_CLASS_$_NCIncline
|| __DATA.__objc_data _OBJC_CLASS_$_NCLocation
|| __DATA.__objc_data _OBJC_CLASS_$_NCManager
|| __DATA.__objc_data _OBJC_CLASS_$_NCManagerAltimeterToken
|| __DATA.__objc_data _OBJC_CLASS_$_NCManagerLocationToken
|| __DATA.__objc_data _OBJC_CLASS_$_NCManagerMotionToken
|| __DATA.__objc_data _OBJC_CLASS_$_NCManagerToken
|| __DATA.__objc_data _OBJC_CLASS_$_NanoCompassBaseComplicationDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_NanoCompassBaseRichView
|| __DATA.__objc_data _OBJC_CLASS_$_NanoCompassComplicationUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_NanoCompassComplicationsBundleDataSourceContainer
|| __DATA.__objc_data _OBJC_CLASS_$_NanoCompassUtilities
|| __DATA.__objc_data _OBJC_CLASS_$__NCManagerHandlerWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_AltitudeComplicationDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_AltitudeInclineComplicationDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_AltitudeModularSmallView
|| __DATA.__objc_data _OBJC_METACLASS_$_AltitudeRichBezelDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_AltitudeRichCenterLabelDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_AltitudeRichCircularDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_AltitudeRichCornerDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_AltitudeRichDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_AltitudeRichXLDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_CompassAltitudeComplicationDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CompassBaseRichCircularDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_CompassBearingComplicationDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CompassComplicationDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CompassExtraLargeRichCircularDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_CompassRichBezelDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_CompassRichCircularDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_CompassRichCornerDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_CompassRichDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_CompassRichRectangularDialView
|| __DATA.__objc_data _OBJC_METACLASS_$_NCAltitude
|| __DATA.__objc_data _OBJC_METACLASS_$_NCBearing
|| __DATA.__objc_data _OBJC_METACLASS_$_NCHeading
|| __DATA.__objc_data _OBJC_METACLASS_$_NCIncline
|| __DATA.__objc_data _OBJC_METACLASS_$_NCLocation
|| __DATA.__objc_data _OBJC_METACLASS_$_NCManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NCManagerAltimeterToken
|| __DATA.__objc_data _OBJC_METACLASS_$_NCManagerLocationToken
|| __DATA.__objc_data _OBJC_METACLASS_$_NCManagerMotionToken
|| __DATA.__objc_data _OBJC_METACLASS_$_NCManagerToken
|| __DATA.__objc_data _OBJC_METACLASS_$_NanoCompassBaseComplicationDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_NanoCompassBaseRichView
|| __DATA.__objc_data _OBJC_METACLASS_$_NanoCompassComplicationUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_NanoCompassComplicationsBundleDataSourceContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_NanoCompassUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$__NCManagerHandlerWrapper
|| __DATA_CONST.__const _NCComplicationAlphaShadows
|| __DATA_CONST.__const _NCComplicationAltitudeKey
|| __DATA_CONST.__const _NCComplicationBearingKey
|| __DATA_CONST.__const _NCComplicationHeadingKey
|| __DATA_CONST.__const _NCComplicationInclineKey
|| __DATA_CONST.__const _NCComplicationLocationKey
|| __DATA_CONST.__const _NCComplicationNoDataKey
|| __DATA_CONST.__const _NanoCompassLocationComponentLatitudeKey
|| __DATA_CONST.__const _NanoCompassLocationComponentLongitudeKey
|| __DATA_CONST.__const _NanoCompassLocationDMSKey
|| __DATA_CONST.__const _NanoCompassLocationDirectionKey
|| __TEXT.__const _AltimeterUpdateIntervalDefault
|| __TEXT.__const _MAXIMUM_VALUE_LENGTH_FOR_SMALL_COMPLICATION
|| __TEXT.__const _NCManagerLocationStaleTime
|| __TEXT.__text _NCLogForCategory
|| __TEXT.__text _NanoCompassAppTintColor
|| __TEXT.__text _NanoCompassBearingTintColor
|| __TEXT.__text _NanoCompassComplicationAltitudeInclineTextProvider
|| __TEXT.__text _NanoCompassComplicationAltitudeSmallCapsTextProvider
|| __TEXT.__text _NanoCompassComplicationHeadingDirectionBearingTextProvider
|| __TEXT.__text _NanoCompassComplicationImageNamed
|| __TEXT.__text _NanoCompassComplicationLayoutIsRTL
|| __TEXT.__text _NanoCompassDefaultValueFormat
|| __TEXT.__text _NanoCompassFormattedAltitude
|| __TEXT.__text _NanoCompassFormattedAltitudeAccuracy
|| __TEXT.__text _NanoCompassFormattedAltitudeUnits
|| __TEXT.__text _NanoCompassFormattedAltitudeUnitsInAbbr
|| __TEXT.__text _NanoCompassFormattedAltitudeValueAndUnits
|| __TEXT.__text _NanoCompassFormattedBearing
|| __TEXT.__text _NanoCompassFormattedBearingAndDirection
|| __TEXT.__text _NanoCompassFormattedBearingDirection
|| __TEXT.__text _NanoCompassFormattedDirection
|| __TEXT.__text _NanoCompassFormattedFullHeadingAndDirection
|| __TEXT.__text _NanoCompassFormattedHeading
|| __TEXT.__text _NanoCompassFormattedHeadingAndDirection
|| __TEXT.__text _NanoCompassFormattedHeadingDirection
|| __TEXT.__text _NanoCompassFormattedIncline
|| __TEXT.__text _NanoCompassFormattedLocationAndDirectionForComponent
|| __TEXT.__text _NanoCompassFormattedLocationComponentStrings
|| __TEXT.__text _NanoCompassFormattedUncalibrated
|| __TEXT.__text _NanoCompassGetAltitudeAbbreviationWithTargetLength
|| __TEXT.__text _NanoCompassLocalizedString
|| __TEXT.__text _NanoCompassValueAndUnit
|| __TEXT.__text _NanoCompassValueWithFormat
|| __TEXT.__text _hardwareSupportsAbsoluteAltimeter
|| __TEXT.__text _isInternalBuild
|| __TEXT.__text _supportAbsoluteAltimeterFeatures
|| __TEXT.__text _supportsAltimeterOverride
__ ClockComplications: _OBJC_CLASS_$_CLKCComplicationBundleDataSource
__ ClockComplications: _OBJC_CLASS_$_CLKCComplicationBundleDataSourceContainer
__ ClockComplications: _OBJC_METACLASS_$_CLKCComplicationBundleDataSource
__ ClockComplications: _OBJC_METACLASS_$_CLKCComplicationBundleDataSourceContainer
__ ClockKit: _CLKFloatEqualsFloat
__ ClockKit: _CLKInterpolateBetweenFloatsClipped
__ ClockKit: _CLKRectCenteredIntegralRectForDevice
__ ClockKit: _CLKRectCenteredXInRectForDevice
__ ClockKit: _CLKRoundedFontDesignName
__ ClockKit: _CLKValueForDeviceMetrics
__ ClockKit: _OBJC_CLASS_$_CLKComplicationTemplate
__ ClockKit: _OBJC_CLASS_$_CLKComplicationTemplateCircularSmallStackText
__ ClockKit: _OBJC_CLASS_$_CLKComplicationTemplateExtraLargeStackText
__ ClockKit: _OBJC_CLASS_$_CLKComplicationTemplateGraphicBezelCircularText
__ ClockKit: _OBJC_CLASS_$_CLKComplicationTemplateGraphicCircularImage
__ ClockKit: _OBJC_CLASS_$_CLKComplicationTemplateGraphicCornerTextImage
__ ClockKit: _OBJC_CLASS_$_CLKComplicationTemplateGraphicExtraLargeCircularImage
__ ClockKit: _OBJC_CLASS_$_CLKComplicationTemplateGraphicRectangularFull
__ ClockKit: _OBJC_CLASS_$_CLKComplicationTemplateModularLargeTallBody
__ ClockKit: _OBJC_CLASS_$_CLKComplicationTemplateModularSmallStackText
__ ClockKit: _OBJC_CLASS_$_CLKComplicationTemplateUtilitarianLargeFlat
__ ClockKit: _OBJC_CLASS_$_CLKComplicationTemplateUtilitarianSmallFlat
__ ClockKit: _OBJC_CLASS_$_CLKComplicationTimelineEntry
__ ClockKit: _OBJC_CLASS_$_CLKFont
__ ClockKit: _OBJC_CLASS_$_CLKFullColorImageProvider
__ ClockKit: _OBJC_CLASS_$_CLKSimpleTextProvider
__ ClockKit: _OBJC_CLASS_$_CLKTextProvider
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSLocaleUsesMetricSystem
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreLocation: _CLLocationCoordinate2DIsValid
__ CoreLocation: _CLLocationCoordinate2DMake
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _kCLErrorDomain
__ CoreLocation: _kCLLocationAccuracyBest
__ CoreLocation: _kCLLocationAccuracyBystander
__ CoreLocation: _kCLLocationAccuracyHundredMeters
__ CoreLocation: _kCLLocationAccuracyNearestTenMeters
__ CoreLocation: _kCLLocationCoordinate2DInvalid
__ CoreMotion: _CMErrorDomain
__ CoreMotion: _OBJC_CLASS_$_CMAltimeter
__ CoreMotion: _OBJC_CLASS_$_CMMotionManager
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSMeasurement
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUnitLength
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIRectGetCenter
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _acos
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
NCAltitude : NSObject /usr/lib/libSystem.B.dylib
 @property  double altitude
 @property  long long type
 @property  double accuracy
 @property  NSDate *timestamp
 @property  NSDate *reportedTimestamp
 @property  NSError *error
 @property  BOOL hasAltitudeReading
 @property  NSNumber *absoluteAltitudeAccuracy
 @property  NSNumber *absoluteAltitudePrecision
 @property  BOOL displayTildeForApp
 @property  BOOL displayTildeForComplication
 @property  long long statusInfo
 @property  BOOL hasReading

  // class methods
  +[NCAltitude altitudeWithLocation:error:]
  +[NCAltitude initAltitude:]
  +[NCAltitude idealizedAltitude]
  +[NCAltitude randomizedAltitude]

  // instance methods
  -[NCAltitude accuracy]
  -[NCAltitude altitude]
  -[NCAltitude setAltitude:]
  -[NCAltitude setError:]
  -[NCAltitude setType:]
  -[NCAltitude .cxx_destruct]
  -[NCAltitude timestamp]
  -[NCAltitude setAccuracy:]
  -[NCAltitude setTimestamp:]
  -[NCAltitude type]
  -[NCAltitude error]
  -[NCAltitude absoluteAltitudeAccuracy]
  -[NCAltitude absoluteAltitudePrecision]
  -[NCAltitude initWithAbsoluteAltitude:]
  -[NCAltitude setReportedTimestamp:]
  -[NCAltitude setStatusInfo:]
  -[NCAltitude _populateRoundedValue]
  -[NCAltitude setHasAltitudeReading:]
  -[NCAltitude initWithLocation:error:]
  -[NCAltitude hasAcceptibleAccuracy]
  -[NCAltitude setDisplayTildeForApp:]
  -[NCAltitude setDisplayTildeForComplication:]
  -[NCAltitude _convertMeterInFeet:]
  -[NCAltitude _getRoundedPrecisionWithValue:multiplier:]
  -[NCAltitude setAbsoluteAltitudePrecision:]
  -[NCAltitude _getRoundedValue:byRoundedPrecision:]
  -[NCAltitude _getRoundedAccuracy:byUnit:]
  -[NCAltitude setAbsoluteAltitudeAccuracy:]
  -[NCAltitude statusInfo]
  -[NCAltitude _getCloserValue:low:high:]
  -[NCAltitude hasReading]
  -[NCAltitude isBetterThan:]
  -[NCAltitude reportedTimestamp]
  -[NCAltitude displayTildeForApp]
  -[NCAltitude displayTildeForComplication]
  -[NCAltitude hasAltitudeReading]


AltitudeComplicationDataSource : NanoCompassBaseComplicationDataSource
  // class methods
  +[AltitudeComplicationDataSource acceptsComplicationFamily:forDevice:]
  +[AltitudeComplicationDataSource appNameLocalizationKey]
  +[AltitudeComplicationDataSource bundleIdentifierSuffix]

  // instance methods
  -[AltitudeComplicationDataSource alwaysOnTemplate]
  -[AltitudeComplicationDataSource initWithComplication:family:forDevice:]
  -[AltitudeComplicationDataSource sampleTemplate]
  -[AltitudeComplicationDataSource _templateNoData:altitude:]
  -[AltitudeComplicationDataSource newTemplate]
  -[AltitudeComplicationDataSource noDataTemplate]
  -[AltitudeComplicationDataSource randomizedTemplate]


AltitudeRichDialView : NanoCompassBaseRichView
 @property  UIView *topView
 @property  UIView *bottomView

  // instance methods
  -[AltitudeRichDialView topView]
  -[AltitudeRichDialView .cxx_destruct]
  -[AltitudeRichDialView bottomView]
  -[AltitudeRichDialView layoutSubviews]
  -[AltitudeRichDialView initFullColorImageViewWithDevice:]
  -[AltitudeRichDialView _newTopView]
  -[AltitudeRichDialView _newBottomView]
  -[AltitudeRichDialView monochromeAccentViews]
  -[AltitudeRichDialView monochromeOtherViews]


AltitudeRichCircularDialView : AltitudeRichCenterLabelDialView
  // instance methods
  -[AltitudeRichCircularDialView layoutSubviews]
  -[AltitudeRichCircularDialView initFullColorImageViewWithDevice:]
  -[AltitudeRichCircularDialView _newTopView]
  -[AltitudeRichCircularDialView _newBottomView]


AltitudeRichXLDialView : AltitudeRichCenterLabelDialView
  // instance methods
  -[AltitudeRichXLDialView layoutSubviews]
  -[AltitudeRichXLDialView initFullColorImageViewWithDevice:]
  -[AltitudeRichXLDialView _newTopView]
  -[AltitudeRichXLDialView _newBottomView]


NanoCompassBaseComplicationDataSource : CLKCComplicationBundleDataSource /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  NCManager *manager
 @property  NCManagerMotionToken *motionToken
 @property  NCHeading *heading
 @property  NCBearing *bearing
 @property  BOOL calibrated
 @property  NCIncline *incline
 @property  NCManagerLocationToken *locationToken
 @property  NCLocation *location
 @property  NCAltitude *altitude
 @property  NCManagerAltimeterToken *altimeterToken
 @property  BOOL paused
 @property  CLKComplicationTimelineEntry *timelineEntry
 @property  CLKComplicationTemplate *alwaysOnTemplate
 @property  BOOL usesMotion
 @property  BOOL usesLocation
 @property  BOOL useAltimeter
 @property  BOOL usesBearing

  // class methods
  +[NanoCompassBaseComplicationDataSource appIdentifier]
  +[NanoCompassBaseComplicationDataSource localizedAppName]
  +[NanoCompassBaseComplicationDataSource bundleIdentifier]
  +[NanoCompassBaseComplicationDataSource acceptsComplicationFamily:forDevice:]
  +[NanoCompassBaseComplicationDataSource appNameLocalizationKey]
  +[NanoCompassBaseComplicationDataSource bundleIdentifierSuffix]

  // instance methods
  -[NanoCompassBaseComplicationDataSource altitude]
  -[NanoCompassBaseComplicationDataSource setBearing:]
  -[NanoCompassBaseComplicationDataSource setHeading:]
  -[NanoCompassBaseComplicationDataSource heading]
  -[NanoCompassBaseComplicationDataSource setAltitude:]
  -[NanoCompassBaseComplicationDataSource paused]
  -[NanoCompassBaseComplicationDataSource timelineEntry]
  -[NanoCompassBaseComplicationDataSource dealloc]
  -[NanoCompassBaseComplicationDataSource .cxx_destruct]
  -[NanoCompassBaseComplicationDataSource bearing]
  -[NanoCompassBaseComplicationDataSource setLocation:]
  -[NanoCompassBaseComplicationDataSource _invalidate]
  -[NanoCompassBaseComplicationDataSource setPaused:]
  -[NanoCompassBaseComplicationDataSource manager]
  -[NanoCompassBaseComplicationDataSource motionToken]
  -[NanoCompassBaseComplicationDataSource becomeActive]
  -[NanoCompassBaseComplicationDataSource observeValueForKeyPath:ofObject:change:context:]
  -[NanoCompassBaseComplicationDataSource setManager:]
  -[NanoCompassBaseComplicationDataSource location]
  -[NanoCompassBaseComplicationDataSource incline]
  -[NanoCompassBaseComplicationDataSource getCurrentTimelineEntryWithHandler:]
  -[NanoCompassBaseComplicationDataSource alwaysOnTemplate]
  -[NanoCompassBaseComplicationDataSource currentSwitcherTemplate]
  -[NanoCompassBaseComplicationDataSource becomeInactive]
  -[NanoCompassBaseComplicationDataSource initWithComplication:family:forDevice:mode:]
  -[NanoCompassBaseComplicationDataSource newTemplate]
  -[NanoCompassBaseComplicationDataSource noDataTemplate]
  -[NanoCompassBaseComplicationDataSource randomizedTemplate]
  -[NanoCompassBaseComplicationDataSource setIncline:]
  -[NanoCompassBaseComplicationDataSource setCalibrated:]
  -[NanoCompassBaseComplicationDataSource _startObservingNotifications]
  -[NanoCompassBaseComplicationDataSource setMotionToken:]
  -[NanoCompassBaseComplicationDataSource setLocationToken:]
  -[NanoCompassBaseComplicationDataSource setAltimeterToken:]
  -[NanoCompassBaseComplicationDataSource _stopObservingNotifications]
  -[NanoCompassBaseComplicationDataSource setAlwaysOnTemplate:]
  -[NanoCompassBaseComplicationDataSource setTimelineEntry:]
  -[NanoCompassBaseComplicationDataSource getSupportedTimeTravelDirectionsWithHandler:]
  -[NanoCompassBaseComplicationDataSource tritium_randomizedPossibility]
  -[NanoCompassBaseComplicationDataSource tritium_randomizedComplicationTemplateForDate:prevTemplateDate:]
  -[NanoCompassBaseComplicationDataSource usesMotion]
  -[NanoCompassBaseComplicationDataSource calibrated]
  -[NanoCompassBaseComplicationDataSource usesLocation]
  -[NanoCompassBaseComplicationDataSource useAltimeter]
  -[NanoCompassBaseComplicationDataSource usesBearing]
  -[NanoCompassBaseComplicationDataSource locationToken]
  -[NanoCompassBaseComplicationDataSource altimeterToken]


NCBearing : NSObject /usr/lib/libSystem.B.dylib
 @property  double bearing

  // class methods
  +[NCBearing idealizedBearing]
  +[NCBearing randomizedBearing]

  // instance methods
  -[NCBearing setBearing:]
  -[NCBearing bearing]
  -[NCBearing initWithBearing:]
  -[NCBearing initWithHeading:]


NanoCompassUtilities : NSObject /usr/lib/libSystem.B.dylib

CompassRichRectangularDialView : UIView /System/Library/PrivateFrameworks/ClockComplications.framework/ClockComplications <CLKFullColorImageView>
 @property  <CLKMonochromeFilterProvider> *filterProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CompassRichRectangularDialView .cxx_destruct]
  -[CompassRichRectangularDialView layoutSubviews]
  -[CompassRichRectangularDialView setFilterProvider:]
  -[CompassRichRectangularDialView transitionToMonochromeWithFraction:]
  -[CompassRichRectangularDialView updateMonochromeColor]
  -[CompassRichRectangularDialView filterProvider]
  -[CompassRichRectangularDialView initFullColorImageViewWithDevice:]
  -[CompassRichRectangularDialView pauseLiveFullColorImageView]
  -[CompassRichRectangularDialView resumeLiveFullColorImageView]
  -[CompassRichRectangularDialView configureWithImageProvider:reason:]
  -[CompassRichRectangularDialView _createDirections]
  -[CompassRichRectangularDialView _createAngles]
  -[CompassRichRectangularDialView _createTicks]
  -[CompassRichRectangularDialView _createBearingTicks]
  -[CompassRichRectangularDialView _updateForMonochrome:]
  -[CompassRichRectangularDialView _filterForStyle:fraction:]
  -[CompassRichRectangularDialView _applyFilter:toViews:]
  -[CompassRichRectangularDialView _applyFilter:toLayers:]
  -[CompassRichRectangularDialView _newLabelWithFont:color:text:]


NCIncline : NSObject /usr/lib/libSystem.B.dylib
 @property  {?=ddd} gravity
 @property  long long orientation
 @property  double verticalTilt
 @property  {CGPoint=dd} horizontalOffset
 @property  double horizontalTilt
 @property  double timestamp
 @property  BOOL hasReading

  // class methods
  +[NCIncline idealizedIncline]
  +[NCIncline newIncline:]
  +[NCIncline randomizedIncline]

  // instance methods
  -[NCIncline horizontalOffset]
  -[NCIncline setHorizontalOffset:]
  -[NCIncline timestamp]
  -[NCIncline setTimestamp:]
  -[NCIncline gravity]
  -[NCIncline isEqual:]
  -[NCIncline setOrientation:]
  -[NCIncline setGravity:]
  -[NCIncline orientation]
  -[NCIncline hasReading]
  -[NCIncline verticalTilt]
  -[NCIncline horizontalTilt]
  -[NCIncline setHasReading:]
  -[NCIncline setHorizontalTilt:]
  -[NCIncline setVerticalTilt:]
  -[NCIncline updateHasSignificantChange:]


CompassRichCircularDialView : CompassBaseRichCircularDialView
  // instance methods
  -[CompassRichCircularDialView _supportedFamily]
  -[CompassRichCircularDialView _ticksImageName]
  -[CompassRichCircularDialView _needleNorthImageName]
  -[CompassRichCircularDialView _needleSouthImageName]
  -[CompassRichCircularDialView _needleShadowImageName]


AltitudeInclineComplicationDataSource : NanoCompassBaseComplicationDataSource
  // class methods
  +[AltitudeInclineComplicationDataSource acceptsComplicationFamily:forDevice:]
  +[AltitudeInclineComplicationDataSource appNameLocalizationKey]
  +[AltitudeInclineComplicationDataSource bundleIdentifierSuffix]

  // instance methods
  -[AltitudeInclineComplicationDataSource alwaysOnTemplate]
  -[AltitudeInclineComplicationDataSource initWithComplication:family:forDevice:]
  -[AltitudeInclineComplicationDataSource sampleTemplate]
  -[AltitudeInclineComplicationDataSource newTemplate]
  -[AltitudeInclineComplicationDataSource noDataTemplate]
  -[AltitudeInclineComplicationDataSource randomizedTemplate]
  -[AltitudeInclineComplicationDataSource _templateNoData:noIncline:calibrated:altitude:heading:incline:]


CompassAltitudeComplicationDataSource : NanoCompassBaseComplicationDataSource
  // class methods
  +[CompassAltitudeComplicationDataSource acceptsComplicationFamily:forDevice:]
  +[CompassAltitudeComplicationDataSource appNameLocalizationKey]
  +[CompassAltitudeComplicationDataSource bundleIdentifierSuffix]

  // instance methods
  -[CompassAltitudeComplicationDataSource alwaysOnTemplate]
  -[CompassAltitudeComplicationDataSource initWithComplication:family:forDevice:]
  -[CompassAltitudeComplicationDataSource sampleTemplate]
  -[CompassAltitudeComplicationDataSource newTemplate]
  -[CompassAltitudeComplicationDataSource noDataTemplate]
  -[CompassAltitudeComplicationDataSource randomizedTemplate]
  -[CompassAltitudeComplicationDataSource _templateNoData:noHeading:calibrated:altitude:heading:]


NanoCompassComplicationUtilities : NSObject /usr/lib/libSystem.B.dylib

AltitudeRichCenterLabelDialView : AltitudeRichDialView
  // instance methods
  -[AltitudeRichCenterLabelDialView .cxx_destruct]
  -[AltitudeRichCenterLabelDialView configureWithImageProvider:reason:]
  -[AltitudeRichCenterLabelDialView _newTopView]
  -[AltitudeRichCenterLabelDialView _newBottomView]
  -[AltitudeRichCenterLabelDialView initFullColorImageViewWithDevice:withLayoutConstants:]
  -[AltitudeRichCenterLabelDialView layoutLabelInCenterWithTopAndBottomAssets]


NanoCompassBaseRichView : UIView /System/Library/PrivateFrameworks/ClockComplications.framework/ClockComplications <CLKFullColorImageView>
 @property  <CLKMonochromeFilterProvider> *filterProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NanoCompassBaseRichView .cxx_destruct]
  -[NanoCompassBaseRichView layoutSubviews]
  -[NanoCompassBaseRichView setFilterProvider:]
  -[NanoCompassBaseRichView transitionToMonochromeWithFraction:]
  -[NanoCompassBaseRichView updateMonochromeColor]
  -[NanoCompassBaseRichView filterProvider]
  -[NanoCompassBaseRichView initFullColorImageViewWithDevice:]
  -[NanoCompassBaseRichView pauseLiveFullColorImageView]
  -[NanoCompassBaseRichView resumeLiveFullColorImageView]
  -[NanoCompassBaseRichView configureWithImageProvider:reason:]
  -[NanoCompassBaseRichView monochromeAccentViews]
  -[NanoCompassBaseRichView monochromeOtherViews]
  -[NanoCompassBaseRichView _applyFilter:toViews:]


NCManager : NSObject /usr/lib/libSystem.B.dylib <CLLocationManagerDelegate>
 @property  NCHeading *heading
 @property  NCIncline *incline
 @property  NCLocation *location
 @property  NCAltitude *altitude
 @property  NCBearing *bearing
 @property  BOOL usesTrueNorth
 @property  BOOL calibrated
 @property  BOOL paused
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NCManager sharedComplicationManager]
  +[NCManager showingIdealizedData]
  +[NCManager sharedAppManager]
  +[NCManager _showsElevationAccuracy]

  // instance methods
  -[NCManager locationManager:didChangeAuthorizationStatus:]
  -[NCManager altitude]
  -[NCManager setBearing:]
  -[NCManager setHeading:]
  -[NCManager heading]
  -[NCManager setAltitude:]
  -[NCManager paused]
  -[NCManager locationManager:didFailWithError:]
  -[NCManager .cxx_destruct]
  -[NCManager bearing]
  -[NCManager init:]
  -[NCManager setLocation:]
  -[NCManager setPaused:]
  -[NCManager observeValueForKeyPath:ofObject:change:context:]
  -[NCManager location]
  -[NCManager incline]
  -[NCManager _handlePrefsChanged]
  -[NCManager locationManager:didUpdateLocations:]
  -[NCManager _startLocationUpdates]
  -[NCManager stopLocationUpdatesForToken:]
  -[NCManager startLocationUpdatesWithHandler:]
  -[NCManager setIncline:]
  -[NCManager setCalibrated:]
  -[NCManager stopMotionUpdatesForToken:]
  -[NCManager isAbsoluteAltimeterAvailable]
  -[NCManager stopAltimeterUpdateForToken:]
  -[NCManager calibrated]
  -[NCManager _updateTrueNorthFromUserDefaults]
  -[NCManager _queue_motionUpdate]
  -[NCManager _queue_motionError:]
  -[NCManager _newAltimeter]
  -[NCManager startAltimeterUpdateWithUpdateRateAndHandler:handler:]
  -[NCManager _updateAltimeterRunning:]
  -[NCManager _updateAltimeterRunning]
  -[NCManager startMotionUpdatesWithUpdateRate:handler:calibratedHandler:]
  -[NCManager _updateMotionRunning]
  -[NCManager _updateLocationRunning]
  -[NCManager _isLocationServiceOff]
  -[NCManager _updateRunning]
  -[NCManager _startAbsoluteAltimterUpdate]
  -[NCManager _shouldChangeAltimeterUpdateRate:]
  -[NCManager _queue_altimeterUpdate:]
  -[NCManager _queue_altimeterError:]
  -[NCManager _queue_altimeterUpdate]
  -[NCManager _referenceFrameForDeviceMotion]
  -[NCManager _updateMotionTimerRate]
  -[NCManager _queue_updateMotion:]
  -[NCManager _stopLocationUpdates:]
  -[NCManager _updateLocationManagerWithCurrentAuthorizationStatus]
  -[NCManager _restartLocationTimeoutTimer]
  -[NCManager _notifyLocationUpdateHandlers]
  -[NCManager _requestBetterLocation]
  -[NCManager _startLocationTimeoutTimer]
  -[NCManager _defaultLocationAccuracy]
  -[NCManager _updateLocation:error:]
  -[NCManager setUsesTrueNorth:]
  -[NCManager startAltimeterUpdateWithHandler:]
  -[NCManager startMotionUpdatesWithHandler:calibratedHandler:]
  -[NCManager getLocationServiceUpdateWithHandler:]
  -[NCManager setPaused:forAltimeterToken:]
  -[NCManager setPaused:forMotionToken:]
  -[NCManager _locationTimeoutTimerFired:]
  -[NCManager _takeLocationAssertion]
  -[NCManager _cancelLocationAssertion]
  -[NCManager setValueForBearing:]
  -[NCManager clearValueForBearing]
  -[NCManager usesTrueNorth]


NCManagerToken : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  unsigned long value

  // class methods
  +[NCManagerToken tokenWithValue:]

  // instance methods
  -[NCManagerToken copyWithZone:]
  -[NCManagerToken isEqual:]
  -[NCManagerToken value]


NCManagerMotionToken : NCManagerToken

NCManagerLocationToken : NCManagerToken

NCManagerAltimeterToken : NCManagerToken

_NCManagerHandlerWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  double updateInterval
 @property  @? handler
 @property  @? calibratedHandler

  // class methods
  +[_NCManagerHandlerWrapper wrapperWithUpdateInterval:handler:calibratedHandler:]

  // instance methods
  -[_NCManagerHandlerWrapper updateInterval]
  -[_NCManagerHandlerWrapper setUpdateInterval:]
  -[_NCManagerHandlerWrapper .cxx_destruct]
  -[_NCManagerHandlerWrapper handler]
  -[_NCManagerHandlerWrapper setHandler:]
  -[_NCManagerHandlerWrapper calibratedHandler]
  -[_NCManagerHandlerWrapper setCalibratedHandler:]


CompassBaseRichCircularDialView : CompassRichDialView
  // instance methods
  -[CompassBaseRichCircularDialView .cxx_destruct]
  -[CompassBaseRichCircularDialView layoutSubviews]
  -[CompassBaseRichCircularDialView initFullColorImageViewWithDevice:]
  -[CompassBaseRichCircularDialView configureWithImageProvider:reason:]
  -[CompassBaseRichCircularDialView monochromeAccentViews]
  -[CompassBaseRichCircularDialView monochromeOtherViews]
  -[CompassBaseRichCircularDialView _supportedFamily]
  -[CompassBaseRichCircularDialView _ticksImageName]
  -[CompassBaseRichCircularDialView _needleNorthImageName]
  -[CompassBaseRichCircularDialView _needleSouthImageName]
  -[CompassBaseRichCircularDialView _needleShadowImageName]
  -[CompassBaseRichCircularDialView _newTicksView]
  -[CompassBaseRichCircularDialView _newNeedleView]


CompassExtraLargeRichCircularDialView : CompassBaseRichCircularDialView
  // instance methods
  -[CompassExtraLargeRichCircularDialView _supportedFamily]
  -[CompassExtraLargeRichCircularDialView _ticksImageName]
  -[CompassExtraLargeRichCircularDialView _needleNorthImageName]
  -[CompassExtraLargeRichCircularDialView _needleSouthImageName]
  -[CompassExtraLargeRichCircularDialView _needleShadowImageName]


NCLocation : NSObject /usr/lib/libSystem.B.dylib
 @property  {CLLocationCoordinate2D=dd} coordinate
 @property  double accuracy
 @property  NSDate *timestamp
 @property  NSDate *reportedTimestamp
 @property  NSError *error
 @property  BOOL hasReading

  // class methods
  +[NCLocation idealizedLocation]
  +[NCLocation locationWithLocation:error:]
  +[NCLocation randomizedLocation]

  // instance methods
  -[NCLocation accuracy]
  -[NCLocation setCoordinate:]
  -[NCLocation coordinate]
  -[NCLocation setError:]
  -[NCLocation .cxx_destruct]
  -[NCLocation timestamp]
  -[NCLocation setAccuracy:]
  -[NCLocation setTimestamp:]
  -[NCLocation error]
  -[NCLocation setReportedTimestamp:]
  -[NCLocation initWithLocation:error:]
  -[NCLocation hasAcceptibleAccuracy]
  -[NCLocation hasReading]
  -[NCLocation isBetterThan:]
  -[NCLocation reportedTimestamp]


CompassComplicationDataSource : NanoCompassBaseComplicationDataSource
  // class methods
  +[CompassComplicationDataSource localizedAppName]
  +[CompassComplicationDataSource acceptsComplicationFamily:forDevice:]
  +[CompassComplicationDataSource bundleIdentifierSuffix]

  // instance methods
  -[CompassComplicationDataSource initWithComplication:family:forDevice:]
  -[CompassComplicationDataSource sampleTemplate]
  -[CompassComplicationDataSource newTemplate]
  -[CompassComplicationDataSource noDataTemplate]
  -[CompassComplicationDataSource randomizedTemplate]
  -[CompassComplicationDataSource _templateNoData:calibrated:heading:]


AltitudeRichCornerDialView : AltitudeRichDialView
  // instance methods
  -[AltitudeRichCornerDialView _newTopView]
  -[AltitudeRichCornerDialView _newBottomView]


CompassRichCornerDialView : CompassRichDialView
  // instance methods
  -[CompassRichCornerDialView .cxx_destruct]
  -[CompassRichCornerDialView monochromeAccentViews]
  -[CompassRichCornerDialView monochromeOtherViews]
  -[CompassRichCornerDialView _newTicksView]
  -[CompassRichCornerDialView _newNeedleView]


AltitudeModularSmallView : UIView /System/Library/PrivateFrameworks/ClockComplications.framework/ClockComplications <CLKFullColorImageView>
 @property  CLKDevice *device
 @property  UIImageView *upperImage
 @property  UIImageView *lowerImage
 @property  UILabel *label
 @property  <CLKMonochromeFilterProvider> *filterProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AltitudeModularSmallView device]
  -[AltitudeModularSmallView .cxx_destruct]
  -[AltitudeModularSmallView label]
  -[AltitudeModularSmallView setDevice:]
  -[AltitudeModularSmallView setLabel:]
  -[AltitudeModularSmallView initFullColorImageViewWithDevice:]
  -[AltitudeModularSmallView pauseLiveFullColorImageView]
  -[AltitudeModularSmallView resumeLiveFullColorImageView]
  -[AltitudeModularSmallView configureWithImageProvider:reason:]
  -[AltitudeModularSmallView upperImage]
  -[AltitudeModularSmallView setUpperImage:]
  -[AltitudeModularSmallView lowerImage]
  -[AltitudeModularSmallView setLowerImage:]


CompassRichDialView : NanoCompassBaseRichView
 @property  UIView *ticksView
 @property  UIView *needleView

  // instance methods
  -[CompassRichDialView .cxx_destruct]
  -[CompassRichDialView layoutSubviews]
  -[CompassRichDialView initFullColorImageViewWithDevice:]
  -[CompassRichDialView configureWithImageProvider:reason:]
  -[CompassRichDialView _newTicksView]
  -[CompassRichDialView _newNeedleView]
  -[CompassRichDialView ticksView]
  -[CompassRichDialView needleView]


NCHeading : NSObject /usr/lib/libSystem.B.dylib
 @property  double heading
 @property  double accuracy
 @property  double timestamp
 @property  BOOL hasReading
 @property  BOOL isAccurate

  // class methods
  +[NCHeading idealizedHeading]
  +[NCHeading randomizedHeading]
  +[NCHeading newHeading:]

  // instance methods
  -[NCHeading accuracy]
  -[NCHeading setHeading:]
  -[NCHeading heading]
  -[NCHeading isAccurate]
  -[NCHeading timestamp]
  -[NCHeading setAccuracy:]
  -[NCHeading setTimestamp:]
  -[NCHeading isEqual:]
  -[NCHeading hasReading]
  -[NCHeading setHasReading:]
  -[NCHeading updateHasSignificantChange:]


AltitudeRichBezelDialView : AltitudeRichDialView
  // instance methods
  -[AltitudeRichBezelDialView _newTopView]
  -[AltitudeRichBezelDialView _newBottomView]


CompassRichBezelDialView : CompassRichDialView
  // instance methods
  -[CompassRichBezelDialView .cxx_destruct]
  -[CompassRichBezelDialView monochromeAccentViews]
  -[CompassRichBezelDialView monochromeOtherViews]
  -[CompassRichBezelDialView _newTicksView]
  -[CompassRichBezelDialView _newNeedleView]


CompassBearingComplicationDataSource : NanoCompassBaseComplicationDataSource
  // class methods
  +[CompassBearingComplicationDataSource localizedAppName]
  +[CompassBearingComplicationDataSource acceptsComplicationFamily:forDevice:]
  +[CompassBearingComplicationDataSource bundleIdentifierSuffix]

  // instance methods
  -[CompassBearingComplicationDataSource initWithComplication:family:forDevice:]
  -[CompassBearingComplicationDataSource sampleTemplate]
  -[CompassBearingComplicationDataSource newTemplate]
  -[CompassBearingComplicationDataSource noDataTemplate]
  -[CompassBearingComplicationDataSource randomizedTemplate]
  -[CompassBearingComplicationDataSource _templateNoData:calibrated:heading:bearing:useAlphaShadows:]
  -[CompassBearingComplicationDataSource _templateNoData:calibrated:heading:bearing:]


NanoCompassComplicationsBundleDataSourceContainer : CLKCComplicationBundleDataSourceContainer /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
  // class methods
  +[NanoCompassComplicationsBundleDataSourceContainer complicationBundleDataSources]


01 00 0c00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 0c00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0c00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0e00 /System/Library/PrivateFrameworks/ClockComplications.framework/ClockComplications: CLKCComplicationBundleDataSource 
01 00 0e00 /System/Library/PrivateFrameworks/ClockComplications.framework/ClockComplications: CLKCComplicationBundleDataSourceContainer 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKComplicationTemplate 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKComplicationTemplateCircularSmallStackText 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKComplicationTemplateExtraLargeStackText 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKComplicationTemplateGraphicBezelCircularText 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKComplicationTemplateGraphicCircularImage 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKComplicationTemplateGraphicCornerTextImage 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKComplicationTemplateGraphicExtraLargeCircularImage 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKComplicationTemplateGraphicRectangularFull 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKComplicationTemplateModularLargeTallBody 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKComplicationTemplateModularSmallStackText 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKComplicationTemplateUtilitarianLargeFlat 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKComplicationTemplateUtilitarianSmallFlat 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKComplicationTimelineEntry 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKFont 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKFullColorImageProvider 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKSimpleTextProvider 
01 00 0400 /System/Library/Frameworks/ClockKit.framework/ClockKit: CLKTextProvider 
01 00 0a00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0a00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0b00 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMAltimeter 
01 00 0b00 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMMotionManager 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMeasurement 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitLength 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
