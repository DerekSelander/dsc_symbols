|| __DATA.__common __skPerformanceData
|| __DATA.__objc_data _OBJC_CLASS_$_SK3DNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKActionTable
|| __DATA.__objc_data _OBJC_CLASS_$_SKAttribute
|| __DATA.__objc_data _OBJC_CLASS_$_SKAttributeValue
|| __DATA.__objc_data _OBJC_CLASS_$_SKButtonNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKButtonNodeSprite
|| __DATA.__objc_data _OBJC_CLASS_$_SKCameraNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_SKCustomFieldNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKDragFieldNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKElectricFieldNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKEmitterNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKFrameCaptureDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_SKKeyframeSequence
|| __DATA.__objc_data _OBJC_CLASS_$_SKLightNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKLinearGravityFieldNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKMagneticFieldNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKMutableTexture
|| __DATA.__objc_data _OBJC_CLASS_$_SKNoiseFieldNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKOpenGLNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKPhysicsContact
|| __DATA.__objc_data _OBJC_CLASS_$_SKPhysicsGrid
|| __DATA.__objc_data _OBJC_CLASS_$_SKPhysicsJoint
|| __DATA.__objc_data _OBJC_CLASS_$_SKPhysicsJointFixed
|| __DATA.__objc_data _OBJC_CLASS_$_SKPhysicsJointLimit
|| __DATA.__objc_data _OBJC_CLASS_$_SKPhysicsJointPin
|| __DATA.__objc_data _OBJC_CLASS_$_SKPhysicsJointSliding
|| __DATA.__objc_data _OBJC_CLASS_$_SKPhysicsJointSpring
|| __DATA.__objc_data _OBJC_CLASS_$_SKPhysicsWorld
|| __DATA.__objc_data _OBJC_CLASS_$_SKRadialGravityFieldNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKRange
|| __DATA.__objc_data _OBJC_CLASS_$_SKReachConstraints
|| __DATA.__objc_data _OBJC_CLASS_$_SKReferenceNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKReferencedAction
|| __DATA.__objc_data _OBJC_CLASS_$_SKRegion
|| __DATA.__objc_data _OBJC_CLASS_$_SKRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_SKShapeNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKSpringFieldNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKTileDefinition
|| __DATA.__objc_data _OBJC_CLASS_$_SKTileGroup
|| __DATA.__objc_data _OBJC_CLASS_$_SKTileGroupRule
|| __DATA.__objc_data _OBJC_CLASS_$_SKTileMapNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKTileSet
|| __DATA.__objc_data _OBJC_CLASS_$_SKTileStamp
|| __DATA.__objc_data _OBJC_CLASS_$_SKTransformNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKTransition
|| __DATA.__objc_data _OBJC_CLASS_$_SKTurbulenceFieldNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKVelocityFieldNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKVideoNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKVortexFieldNode
|| __DATA.__objc_data _OBJC_CLASS_$_SKWarpGeometry
|| __DATA.__objc_data _OBJC_CLASS_$_SKWarpGeometryGrid
|| __DATA.__objc_data _OBJC_METACLASS_$_SK3DNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKActionTable
|| __DATA.__objc_data _OBJC_METACLASS_$_SKAttribute
|| __DATA.__objc_data _OBJC_METACLASS_$_SKAttributeValue
|| __DATA.__objc_data _OBJC_METACLASS_$_SKButtonNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKButtonNodeSprite
|| __DATA.__objc_data _OBJC_METACLASS_$_SKCameraNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_SKCustomFieldNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKDragFieldNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKElectricFieldNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKEmitterNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKFrameCaptureDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_SKKeyframeSequence
|| __DATA.__objc_data _OBJC_METACLASS_$_SKLightNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKLinearGravityFieldNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKMagneticFieldNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKMutableTexture
|| __DATA.__objc_data _OBJC_METACLASS_$_SKNoiseFieldNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKOpenGLNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPhysicsContact
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPhysicsGrid
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPhysicsJoint
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPhysicsJointFixed
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPhysicsJointLimit
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPhysicsJointPin
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPhysicsJointSliding
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPhysicsJointSpring
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPhysicsWorld
|| __DATA.__objc_data _OBJC_METACLASS_$_SKRadialGravityFieldNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKRange
|| __DATA.__objc_data _OBJC_METACLASS_$_SKReachConstraints
|| __DATA.__objc_data _OBJC_METACLASS_$_SKReferenceNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKReferencedAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SKRegion
|| __DATA.__objc_data _OBJC_METACLASS_$_SKRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKShapeNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKSpringFieldNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKTileDefinition
|| __DATA.__objc_data _OBJC_METACLASS_$_SKTileGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_SKTileGroupRule
|| __DATA.__objc_data _OBJC_METACLASS_$_SKTileMapNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKTileSet
|| __DATA.__objc_data _OBJC_METACLASS_$_SKTileStamp
|| __DATA.__objc_data _OBJC_METACLASS_$_SKTransformNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_SKTurbulenceFieldNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKVelocityFieldNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKVideoNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKVortexFieldNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SKWarpGeometry
|| __DATA.__objc_data _OBJC_METACLASS_$_SKWarpGeometryGrid
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKAudioNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKCropNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKEffectNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKFieldNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKGlobalSharedContextRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKLabelNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKPhysicsBody
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKSCNRenderer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKScene
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKShader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKSpriteNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKTexture
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKTextureAtlas
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUniform
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKAudioNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKCropNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKEffectNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKFieldNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKGlobalSharedContextRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKLabelNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKPhysicsBody
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKSCNRenderer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKScene
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKShader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKSpriteNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKTexture
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKTextureAtlas
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUniform
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKView
|| __TEXT.__const _SKComponentRGBABlack
|| __TEXT.__const _SKComponentRGBABlue
|| __TEXT.__const _SKComponentRGBAClear
|| __TEXT.__const _SKComponentRGBAGreen
|| __TEXT.__const _SKComponentRGBARed
|| __TEXT.__const _SKComponentRGBAWhite
|| __TEXT.__text _SKGLPrintError
|| __TEXT.__text _SKGLPrintFramebufferStatus
|| __TEXT.__text _SKGLPrintState
|| __TEXT.__text _SKGLPrintVertexAttrib
|| __TEXT.__text _SKGenerateNormalMap
|| __TEXT.__text _SKGenerateNormalMapWithMultiSampling
|| __TEXT.__text _SKGetCoreAnimationFPS
|| __TEXT.__text _SKGetGraphicsDeviceUtilizationPercent
|| __TEXT.__text _SKGetGraphicsRendererUtilizationPercent
|| __TEXT.__text _SKGetGraphicsTilerUtilizationPercent
|| __TEXT.__text _SKGetIdleProcessorUtilizationPercent
|| __TEXT.__text _SKGetPrefersFloatFramebuffer
|| __TEXT.__text _SKGetPrefersLowPowerGPUs
|| __TEXT.__text _SKGetPrefersOpenGL
|| __TEXT.__text _SKGetResourceBundle
|| __TEXT.__text _SKGetSystemProcessorUtilizationPercent
|| __TEXT.__text _SKGetUserProcessorUtilizationPercent
|| __TEXT.__text _SKGetVersionString
|| __TEXT.__text _SKNodeNameMatches
|| __TEXT.__text _SKSetPrefersFloatFramebuffer
|| __TEXT.__text _SKSetPrefersLowPowerGPUs
|| __TEXT.__text _SKSetPrefersOpenGL
|| __TEXT.__text _SKSetResourceBundle
|| __TEXT.__text __SKGetPerformanceStatisticsForPid
|| __TEXT.__text __SKStartCollectingPerformanceStatisticsForPid
|| __TEXT.__text __SKStopCollectingPerformanceStatisticsForPid
|| __TEXT.__text __perfBeginActions
|| __TEXT.__text __perfBeginClientUpdate
|| __TEXT.__text __perfBeginConstraints
|| __TEXT.__text __perfBeginEmitters
|| __TEXT.__text __perfBeginPhysics
|| __TEXT.__text __perfBeginRender
|| __TEXT.__text __perfEndActions
|| __TEXT.__text __perfEndClientUpdate
|| __TEXT.__text __perfEndConstraints
|| __TEXT.__text __perfEndEmitters
|| __TEXT.__text __perfEndPhysics
|| __TEXT.__text __perfEndRender
|| __TEXT.__text __perfEndRequestDrawable
|| __TEXT.__text __perfMarkCADisplayLinkEnd
|| __TEXT.__text __perfMarkCADisplayLinkStart
|| __TEXT.__text __perfStartRequestDrawable
|| __TEXT.__text __perfUpdateStatistics
|| __TEXT.__text _skCurrentTime
|| __TEXT.__text _skSetTimeOffset
__ AVFoundation: _AVAudioEngineConfigurationChangeNotification
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAudioEngine
__ AVFoundation: _OBJC_CLASS_$_AVAudioEnvironmentNode
__ AVFoundation: _OBJC_CLASS_$_AVAudioFile
__ AVFoundation: _OBJC_CLASS_$_AVAudioFormat
__ AVFoundation: _OBJC_CLASS_$_AVAudioPlayerNode
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItemVideoOutput
__ AggregateDictionary: _ADClientSetValueForScalarKey
__ AudioToolbox: _AudioFileClose
__ AudioToolbox: _AudioFileGetProperty
__ AudioToolbox: _AudioFileOpenURL
__ AudioToolbox: _AudioFileReadBytes
__ AudioToolbox: _ExtAudioFileDispose
__ AudioToolbox: _ExtAudioFileGetProperty
__ AudioToolbox: _ExtAudioFileRead
__ AudioToolbox: _ExtAudioFileSetProperty
__ AudioToolbox: _ExtAudioFileWrapAudioFileID
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFAttributedStringCreate
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSURLContentModificationDateKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLNameKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorEqualToColor
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorSpaceCopyName
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceGetProcessColorModel
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGColorSpaceUsesExtendedRange
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetAllowsAntialiasing
__ CoreGraphics: _CGContextSetAllowsFontSmoothing
__ CoreGraphics: _CGContextSetAllowsFontSubpixelPositioning
__ CoreGraphics: _CGContextSetAllowsFontSubpixelQuantization
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextSetRenderingIntent
__ CoreGraphics: _CGContextSetShouldAntialias
__ CoreGraphics: _CGContextSetShouldSmoothFonts
__ CoreGraphics: _CGContextSetShouldSubpixelPositionFonts
__ CoreGraphics: _CGContextSetShouldSubpixelQuantizeFonts
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCopyData
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetAlphaInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetBytesPerRow
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetImageProvider
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageIsSubimage
__ CoreGraphics: _CGImageProviderCopyIOSurface
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPathAddCurveToPoint
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathApply
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathContainsPoint
__ CoreGraphics: _CGPathCreateCopy
__ CoreGraphics: _CGPathCreateCopyByStrokingPath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateMutableCopyByTransformingPath
__ CoreGraphics: _CGPathCreateWithEllipseInRect
__ CoreGraphics: _CGPathCreateWithRect
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathEqualToPath
__ CoreGraphics: _CGPathGetBoundingBox
__ CoreGraphics: _CGPathGetPathBoundingBox
__ CoreGraphics: _CGPathIsEmpty
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPathRetain
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceExtendedSRGB
__ CoreImage: _OBJC_CLASS_$_CIColor
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIFilter
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _OBJC_CLASS_$_CIVector
__ CoreImage: _kCIFormatBGRA8
__ CoreImage: _kCIFormatR8
__ CoreImage: _kCIFormatRG8
__ CoreImage: _kCIFormatRGBA16
__ CoreImage: _kCIFormatRGBA8
__ CoreImage: _kCIFormatRGBAh
__ CoreImage: _kCIFormatRf
__ CoreImage: _kCIInputImageKey
__ CoreImage: _kCIOutputImageKey
__ CoreServices: _kUTTypePNG
__ CoreServices: _kUTTypePlainText
__ CoreSymbolication: _CSIsNull
__ CoreSymbolication: _CSRelease
__ CoreSymbolication: _CSSymbolGetRange
__ CoreSymbolication: _CSSymbolicatorCreateWithPid
__ CoreSymbolication: _CSSymbolicatorForeachSymbolWithMangledNameAtTime
__ CoreSymbolication: _CSSymbolicatorGetTask
__ CoreSymbolication: _clear_mapped_memory
__ CoreSymbolication: _create_mapped_memory_cache_for_task
__ CoreSymbolication: _destroy_mapped_memory_cache
__ CoreSymbolication: _mapped_memory_read
__ CoreText: _CTFontCreateWithFontDescriptor
__ CoreText: _CTFontCreateWithName
__ CoreText: _CTFontDescriptorCreateMatchingFontDescriptor
__ CoreText: _CTFontDescriptorCreateWithNameAndSize
__ CoreText: _CTFrameDraw
__ CoreText: _CTFramesetterCreateFrame
__ CoreText: _CTFramesetterCreateWithAttributedString
__ CoreText: _CTFramesetterSuggestFrameSizeWithConstraints
__ CoreText: _CTLineDraw
__ CoreText: _CTLineGetBoundsWithOptions
__ CoreText: _CTTypesetterCreateLine
__ CoreText: _CTTypesetterCreateWithAttributedString
__ CoreText: _kCTFontAttributeName
__ CoreText: _kCTForegroundColorAttributeName
__ CoreUI: _OBJC_CLASS_$_CUICatalog
__ CoreVideo: _CVMetalTextureCacheCreate
__ CoreVideo: _CVMetalTextureCacheCreateTextureFromImage
__ CoreVideo: _CVMetalTextureCacheFlush
__ CoreVideo: _CVMetalTextureGetTexture
__ CoreVideo: _CVPixelBufferGetHeight
__ CoreVideo: _CVPixelBufferGetPlaneCount
__ CoreVideo: _CVPixelBufferGetWidth
__ CoreVideo: _CVPixelBufferRelease
__ CoreVideo: _CVPixelBufferRetain
__ CoreVideo: _kCVPixelBufferPixelFormatTypeKey
__ Foundation: _NSClassFromString
__ Foundation: _NSDefaultMallocZone
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_METACLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_METACLASS_$_NSKeyedUnarchiver
__ IOKit: _IOIteratorNext
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IOServiceGetMatchingServices
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMasterPortDefault
__ IOSurface: _IOSurfaceCreate
__ IOSurface: _IOSurfaceGetAllocSize
__ IOSurface: _IOSurfaceGetBaseAddress
__ IOSurface: _IOSurfaceGetHeight
__ IOSurface: _IOSurfaceGetID
__ IOSurface: _IOSurfaceGetPixelFormat
__ IOSurface: _IOSurfaceGetWidth
__ IOSurface: _IOSurfaceLock
__ IOSurface: _IOSurfaceLookup
__ IOSurface: _IOSurfaceUnlock
__ IOSurface: _kIOSurfaceAllocSize
__ IOSurface: _kIOSurfaceBytesPerElement
__ IOSurface: _kIOSurfaceBytesPerRow
__ IOSurface: _kIOSurfaceHeight
__ IOSurface: _kIOSurfacePixelFormat
__ IOSurface: _kIOSurfaceWidth
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _kCGImageDestinationLossyCompressionQuality
__ Jet: __Z16floatToHalfFloatf
__ Jet: __Z17jet_createContextv
__ Jet: __Z18jet_setClientLabelP8NSString
__ Jet: __Z20jet_isMetalSupportedv
__ Jet: __Z23jet_createSharedContextP11jet_context
__ Jet: __Z43jet_convert_pixel_data_rgb_565_to_rgba_8888PKvPvjj
__ Jet: __Z45jet_convert_pixel_data_rgba_4444_to_rgba_8888PKvPvjj
__ Jet: __Z45jet_convert_pixel_data_rgba_5551_to_rgba_8888PKvPvjj
__ Jet: __Z52jet_convert_pixel_data_rgba_fp32_to_argb64_xr10_srgbPKvPvjj
__ Jet: __ZN11jet_context17create_texture_2dEjj18jet_texture_formatPvb17jet_texture_usage
__ Jet: __ZN11jet_context21create_command_bufferEv
__ Jet: __ZN15jet_buffer_pool11commit_dataEjj
__ Jet: __ZN15jet_buffer_pool11next_bufferEb
__ Jet: __ZN15jet_buffer_pool8get_dataEv
__ Jet: __ZN17jet_context_Metal27override_Metal_render_stateEPU26objcproto15MTLCommandQueue11objc_objectPU34objcproto23MTLRenderCommandEncoder11objc_objectP15jet_framebuffer
__ Jet: __ZN17jet_context_MetalC1EPU19objcproto9MTLDevice11objc_object
__ Jet: __ZN17jet_context_MetalD1Ev
__ Jet: __ZN18jet_context_OpenGL24synchronize_OpenGL_stateEv
__ Jet: __ZN18jet_context_OpenGLC1EP11EAGLContext
__ Jet: __ZNK15jet_buffer_pool18get_current_bufferEv
__ Jet: __ZTI11jet_context
__ Jet: __ZTI17jet_context_Metal
__ Jet: __ZTI18jet_context_OpenGL
__ OpenAL: _alBufferData
__ OpenAL: _alDeleteBuffers
__ OpenAL: _alDeleteSources
__ OpenAL: _alGenBuffers
__ OpenAL: _alGenSources
__ OpenAL: _alGetError
__ OpenAL: _alGetListener3f
__ OpenAL: _alGetListenerf
__ OpenAL: _alGetSource3f
__ OpenAL: _alGetSourcef
__ OpenAL: _alGetSourcei
__ OpenAL: _alListener3f
__ OpenAL: _alListenerf
__ OpenAL: _alSource3f
__ OpenAL: _alSourcePause
__ OpenAL: _alSourcePlay
__ OpenAL: _alSourceQueueBuffers
__ OpenAL: _alSourceStop
__ OpenAL: _alSourceUnqueueBuffers
__ OpenAL: _alSourcef
__ OpenAL: _alSourcei
__ OpenAL: _alcCloseDevice
__ OpenAL: _alcCreateContext
__ OpenAL: _alcDestroyContext
__ OpenAL: _alcGetCurrentContext
__ OpenAL: _alcMakeContextCurrent
__ OpenAL: _alcOpenDevice
__ OpenAL: _alcProcessContext
__ OpenAL: _alcSuspendContext
__ OpenGLES: _OBJC_CLASS_$_EAGLContext
__ OpenGLES: _glBindFramebuffer
__ OpenGLES: _glBindRenderbuffer
__ OpenGLES: _glCheckFramebufferStatus
__ OpenGLES: _glClear
__ OpenGLES: _glClearColor
__ OpenGLES: _glDepthMask
__ OpenGLES: _glDisable
__ OpenGLES: _glEnable
__ OpenGLES: _glGenRenderbuffers
__ OpenGLES: _glGetError
__ OpenGLES: _glGetIntegerv
__ OpenGLES: _glGetRenderbufferParameteriv
__ OpenGLES: _glGetVertexAttribiv
__ OpenGLES: _glViewport
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsBody
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsContact
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsFieldCustomBlock
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsFieldDrag
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsFieldElectric
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsFieldLinearGravity
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsFieldMagnetic
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsFieldNoise
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsFieldRadialGravity
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsFieldSpring
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsFieldTurbulence
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsFieldVelocity
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsFieldVortex
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsGrid
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsJoint
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsJointDistance
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsJointPrismatic
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsJointRevolute
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsJointRope
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsJointWeld
__ PhysicsKit: _OBJC_CLASS_$_PKPhysicsWorld
__ PhysicsKit: _OBJC_CLASS_$_PKRegion
__ PhysicsKit: _PKArrayFromCGPath
__ PhysicsKit: _PKCGPathCreateFromArray
__ PhysicsKit: _PKGet_INV_PTM_RATIO
__ PhysicsKit: _PKGet_PTM_RATIO
__ PhysicsKit: _PKPathCreateFromCGPathWithOptions
__ PhysicsKit: __ZN6PKPath10createPathEv
__ PhysicsKit: __ZN9PKCAether9EvaluatorC1EPKS_
__ PhysicsKit: __ZNK9PKCAether9Evaluator14evalFieldsVec2EP17PKFieldSampleVec2i
__ PhysicsKit: _fieldRepresentedObject
__ PhysicsKit: _snoise2
__ PhysicsKit: _srdnoise3
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CARenderServerGetFrameCounter
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAEAGLLayer
__ QuartzCore: _OBJC_CLASS_$_CAMetalLayer
__ SceneKit: _OBJC_CLASS_$_SCNScene
__ UIKit: _CGPointFromString
__ UIKit: _CGRectFromString
__ UIKit: _CGSizeFromString
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStrokeWidthAttributeName
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIResponder
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITouch
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$__UIFocusItemRegion
__ UIKit: _OBJC_CLASS_$__UIFocusRegion
__ UIKit: _OBJC_METACLASS_$_UIResponder
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIImagePNGRepresentation
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___cxa_atexit
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___invert_f4
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: _acosf
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _asinf
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _atan2f
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _cosf
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _fmodf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _host_processor_info
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _mach_host_self
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _matrix_identity_float2x2
__ libSystem.B.dylib: _matrix_identity_float3x3
__ libSystem.B.dylib: _matrix_identity_float4x4
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _sinf
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt9exception4whatEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_
__ libc++.1.dylib: __ZNSt9exceptionD2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__119__shared_weak_countE
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTISt9exception
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv121__vmi_class_type_infoE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_rethrow
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___dynamic_cast
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
SKAction : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  BOOL finished
 @property  double duration
 @property  long long timingMode
 @property  @? timingFunction
 @property  double speed

  // class methods
  +[SKAction supportsSecureCoding]
  +[SKAction pause]
  +[SKAction stop]
  +[SKAction unarchiver:cannotDecodeObjectOfClassName:originalClasses:]
  +[SKAction setTexture:]
  +[SKAction play]
  +[SKAction fadeInWithDuration:]
  +[SKAction fadeOutWithDuration:]
  +[SKAction hide]
  +[SKAction runBlock:]
  +[SKAction sequence:]
  +[SKAction removeFromParent]
  +[SKAction unhide]
  +[SKAction runBlock:queue:]
  +[SKAction waitForDuration:withRange:]
  +[SKAction waitForDuration:]
  +[SKAction actionNamed:]
  +[SKAction performSelector:onTarget:]
  +[SKAction scaleBy:duration:]
  +[SKAction scaleTo:duration:]
  +[SKAction repeatAction:count:]
  +[SKAction repeatActionForever:]
  +[SKAction javaScriptActionWithDuration:script:]
  +[SKAction customActionWithDuration:actionBlock:]
  +[SKAction moveBy:duration:]
  +[SKAction moveTo:duration:]
  +[SKAction group:]
  +[SKAction recursivePathsForResourcesOfType:inDirectory:]
  +[SKAction warpTo:duration:]
  +[SKAction animateWithWarps:times:restore:]
  +[SKAction animateWithWarps:times:]
  +[SKAction moveByX:y:duration:]
  +[SKAction moveToX:duration:]
  +[SKAction moveToY:duration:]
  +[SKAction rotateByAngle:duration:]
  +[SKAction rotateToAngle:duration:]
  +[SKAction rotateToAngle:duration:shortestUnitArc:]
  +[SKAction scaleXBy:y:duration:]
  +[SKAction scaleXTo:y:duration:]
  +[SKAction scaleXTo:duration:]
  +[SKAction scaleYTo:duration:]
  +[SKAction scaleToSize:duration:]
  +[SKAction resizeByWidth:height:duration:]
  +[SKAction resizeToWidth:height:duration:]
  +[SKAction resizeToWidth:duration:]
  +[SKAction resizeToHeight:duration:]
  +[SKAction fadeAlphaBy:duration:]
  +[SKAction fadeAlphaTo:duration:]
  +[SKAction falloffTo:duration:]
  +[SKAction falloffBy:duration:]
  +[SKAction animateWithTextures:timePerFrame:resize:restore:]
  +[SKAction animateWithNormalTextures:timePerFrame:resize:restore:]
  +[SKAction playSoundFileNamed:atPosition:waitForCompletion:]
  +[SKAction colorizeWithColor:colorBlendFactor:duration:]
  +[SKAction colorizeWithColorBlendFactor:duration:]
  +[SKAction followPath:duration:]
  +[SKAction followPath:asOffset:orientToPath:duration:]
  +[SKAction followPath:speed:]
  +[SKAction followPath:asOffset:orientToPath:speed:]
  +[SKAction speedBy:duration:]
  +[SKAction speedTo:duration:]
  +[SKAction strengthTo:duration:]
  +[SKAction strengthBy:duration:]
  +[SKAction reachTo:rootNode:duration:]
  +[SKAction reachTo:rootNode:velocity:]
  +[SKAction findNamedActionInBundle:]
  +[SKAction convertAction:toDuration:]
  +[SKAction addActionsToCachedActionTable:]
  +[SKAction actionNamed:fromURL:]
  +[SKAction moveBY:duration:]
  +[SKAction setNormalTexture:]
  +[SKAction setTexture:resize:]
  +[SKAction setNormalTexture:resize:]
  +[SKAction animateWithTextures:timePerFrame:]
  +[SKAction animateWithNormalTextures:timePerFrame:]
  +[SKAction playSoundFileNamed:]
  +[SKAction playSoundFileNamed:waitForCompletion:]
  +[SKAction reachToNode:rootNode:duration:]
  +[SKAction reachToNode:rootNode:velocity:]
  +[SKAction runAction:onChildWithName:]
  +[SKAction actionNamed:duration:]
  +[SKAction actionNamed:fromURL:duration:]
  +[SKAction clearActionTableCache]
  +[SKAction changePlaybackRateTo:duration:]
  +[SKAction changePlaybackRateBy:duration:]
  +[SKAction changeVolumeTo:duration:]
  +[SKAction changeVolumeBy:duration:]
  +[SKAction stereoPanTo:duration:]
  +[SKAction stereoPanBy:duration:]
  +[SKAction changeReverbTo:duration:]
  +[SKAction changeReverbBy:duration:]
  +[SKAction changeObstructionTo:duration:]
  +[SKAction changeObstructionBy:duration:]
  +[SKAction changeOcclusionTo:duration:]
  +[SKAction changeOcclusionBy:duration:]
  +[SKAction applyImpulse:duration:]
  +[SKAction applyImpulse:atPoint:duration:]
  +[SKAction applyAngularImpulse:duration:]
  +[SKAction changeChargeTo:duration:]
  +[SKAction changeChargeBy:duration:]
  +[SKAction changeMassTo:duration:]
  +[SKAction changeMassBy:duration:]
  +[SKAction applyForce:duration:]
  +[SKAction applyForce:atPoint:duration:]
  +[SKAction applyTorque:duration:]

  // instance methods
  -[SKAction init]
  -[SKAction dealloc]
  -[SKAction copyWithZone:]
  -[SKAction copy]
  -[SKAction encodeWithCoder:]
  -[SKAction initWithCoder:]
  -[SKAction setFinished:]
  -[SKAction finished]
  -[SKAction duration]
  -[SKAction commonInit]
  -[SKAction setDuration:]
  -[SKAction timingFunction]
  -[SKAction setTimingFunction:]
  -[SKAction speed]
  -[SKAction setSpeed:]
  -[SKAction caction]
  -[SKAction setCppAction:]
  -[SKAction reversedAction]
  -[SKAction updateWithTarget:forTime:]
  -[SKAction timingMode]
  -[SKAction setTimingMode:]
  -[SKAction wasPausedWithTarget:atTime:]
  -[SKAction willResumeWithTarget:atTime:]
  -[SKAction ratioForTime:]
  -[SKAction wasAddedToTarget:atTime:]
  -[SKAction wasRemovedFromTarget:atTime:]
  -[SKAction willStartWithTarget:atTime:]
  -[SKAction isEqualToAction:]
  -[SKAction subactions]


SKActionTable : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDictionary *actionTableDictionary
 @property  NSMutableDictionary *_info

  // class methods
  +[SKActionTable supportsSecureCoding]
  +[SKActionTable actionTableWithContentsOfDictionary:]

  // instance methods
  -[SKActionTable _info]
  -[SKActionTable encodeWithCoder:]
  -[SKActionTable initWithCoder:]
  -[SKActionTable .cxx_destruct]
  -[SKActionTable set_info:]
  -[SKActionTable initWithContentsOfDictionary:]
  -[SKActionTable actionForName:]
  -[SKActionTable actionTableDictionary]
  -[SKActionTable isEqualToActionTable:]


SKReferencedAction : SKAction
  // class methods
  +[SKReferencedAction supportsSecureCoding]
  +[SKReferencedAction referenceActionWithName:duration:]

  // instance methods
  -[SKReferencedAction init]
  -[SKReferencedAction copyWithZone:]
  -[SKReferencedAction encodeWithCoder:]
  -[SKReferencedAction initWithCoder:]
  -[SKReferencedAction .cxx_destruct]
  -[SKReferencedAction setDuration:]
  -[SKReferencedAction setTimingFunction:]
  -[SKReferencedAction reversedAction]
  -[SKReferencedAction setTimingMode:]
  -[SKReferencedAction subactions]
  -[SKReferencedAction _ensureReferencedAction]


SKAnimate : SKAction
 @property  double timePerFrame

  // class methods
  +[SKAnimate supportsSecureCoding]
  +[SKAnimate animateWithTextures:timePerFrame:resize:restore:]
  +[SKAnimate animateWithNormalTextures:timePerFrame:resize:restore:]

  // instance methods
  -[SKAnimate init]
  -[SKAnimate copyWithZone:]
  -[SKAnimate encodeWithCoder:]
  -[SKAnimate initWithCoder:]
  -[SKAnimate .cxx_destruct]
  -[SKAnimate setDuration:]
  -[SKAnimate reversedAction]
  -[SKAnimate timePerFrame]
  -[SKAnimate setTimePerFrame:]


SKColorize : SKAction
  // class methods
  +[SKColorize supportsSecureCoding]
  +[SKColorize colorizeWithColor:colorBlendFactor:duration:]
  +[SKColorize colorizeWithColorBlendFactor:duration:]

  // instance methods
  -[SKColorize init]
  -[SKColorize copyWithZone:]
  -[SKColorize encodeWithCoder:]
  -[SKColorize initWithCoder:]
  -[SKColorize reversedAction]


SKAudioNode : SKNode <NSSecureCoding>
 @property  AVAudioNode *avAudioNode
 @property  BOOL autoplayLooped
 @property  BOOL positional

  // class methods
  +[SKAudioNode supportsSecureCoding]
  +[SKAudioNode _audioURLWithName:bundle:]

  // instance methods
  -[SKAudioNode init]
  -[SKAudioNode encodeWithCoder:]
  -[SKAudioNode initWithCoder:]
  -[SKAudioNode initWithURL:]
  -[SKAudioNode commonInit]
  -[SKAudioNode audioURL]
  -[SKAudioNode setAudioURL:]
  -[SKAudioNode initWithAVAudioNode:]
  -[SKAudioNode audioFile]
  -[SKAudioNode setPositional:]
  -[SKAudioNode isPositional]
  -[SKAudioNode initWithFileNamed:]
  -[SKAudioNode isEqualToNode:]
  -[SKAudioNode setAutoplayLooped:]
  -[SKAudioNode setAudioFileName:]
  -[SKAudioNode audioFileName]
  -[SKAudioNode _setAudioName:bundle:]
  -[SKAudioNode setAvAudioNode:]
  -[SKAudioNode autoplayLooped]
  -[SKAudioNode initWithFileNamed:bundle:]
  -[SKAudioNode avAudioNode]
  -[SKAudioNode _playLooped]
  -[SKAudioNode _connectToScene:]
  -[SKAudioNode _makeBackingNode]
  -[SKAudioNode _didMakeBackingNode]


SKSCNRenderer : NSObject /usr/lib/libc++.1.dylib
 @property  SKScene *scene
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  double backingScaleFactor
 @property  BOOL showsFPS
 @property  BOOL showsDrawCount
 @property  BOOL showsNodeCount
 @property  BOOL showsPhysics
 @property  BOOL showsFields
 @property  BOOL ignoresSiblingOrder

  // class methods
  +[SKSCNRenderer rendererWithContext:options:]
  +[SKSCNRenderer setPrefersOpenGL:]
  +[SKSCNRenderer rendererWithDevice:options:]
  +[SKSCNRenderer getOpenGLFramebuffer:]
  +[SKSCNRenderer restoreDefaultOpenGLState:frameBuffer:]

  // instance methods
  -[SKSCNRenderer init]
  -[SKSCNRenderer dealloc]
  -[SKSCNRenderer .cxx_destruct]
  -[SKSCNRenderer _update:]
  -[SKSCNRenderer bounds]
  -[SKSCNRenderer render:]
  -[SKSCNRenderer setBounds:]
  -[SKSCNRenderer scene]
  -[SKSCNRenderer _scene]
  -[SKSCNRenderer setScene:]
  -[SKSCNRenderer pixelSize]
  -[SKSCNRenderer _fps]
  -[SKSCNRenderer _initialize]
  -[SKSCNRenderer updateAtTime:]
  -[SKSCNRenderer renderToFramebuffer:shouldClear:]
  -[SKSCNRenderer renderToTexture:commandQueue:]
  -[SKSCNRenderer renderWithEncoder:pass:commandQueue:]
  -[SKSCNRenderer setBackingScaleFactor:]
  -[SKSCNRenderer settingsForTransition:atTime:renderIncomingToTexture:renderOutgoingToTexture:renderIncomingToScreen:renderOutgoingToScreen:]
  -[SKSCNRenderer renderTransition:withInputTexture:outputTexture:time:encoder:pass:commandQueue:]
  -[SKSCNRenderer renderTransition:withInputTexture:outputTexture:inputTextureSize:outputTextureSize:time:]
  -[SKSCNRenderer setupContext]
  -[SKSCNRenderer setShowsSpriteBounds:]
  -[SKSCNRenderer setShowsFPS:]
  -[SKSCNRenderer setShowsNodeCount:]
  -[SKSCNRenderer _getDestBounds]
  -[SKSCNRenderer _getViewport]
  -[SKSCNRenderer _getMatrix]
  -[SKSCNRenderer _getOptions]
  -[SKSCNRenderer renderTransition:toFramebuffer:withInputTexture:outputTexture:inputTextureSize:outputTextureSize:time:]
  -[SKSCNRenderer initWithSKCRenderer:]
  -[SKSCNRenderer setShowsDrawCount:]
  -[SKSCNRenderer setShowsQuadCount:]
  -[SKSCNRenderer set_showsCulledNodesInNodeCount:]
  -[SKSCNRenderer set_showsGPUStats:]
  -[SKSCNRenderer set_showsCPUStats:]
  -[SKSCNRenderer set_showsCoreAnimationFPS:]
  -[SKSCNRenderer set_showsTotalAreaRendered:]
  -[SKSCNRenderer setShowsPhysics:]
  -[SKSCNRenderer setShowsFields:]
  -[SKSCNRenderer backingScaleFactor]
  -[SKSCNRenderer setIgnoresSiblingOrder:]
  -[SKSCNRenderer ignoresSiblingOrder]
  -[SKSCNRenderer showsSpriteBounds]
  -[SKSCNRenderer showsFPS]
  -[SKSCNRenderer showsNodeCount]
  -[SKSCNRenderer showsQuadCount]
  -[SKSCNRenderer showsDrawCount]
  -[SKSCNRenderer showsPhysics]
  -[SKSCNRenderer set_showsOutlineInterior:]
  -[SKSCNRenderer _showsOutlineInterior]
  -[SKSCNRenderer showsFields]
  -[SKSCNRenderer set_showsSpriteBounds:]
  -[SKSCNRenderer _showsSpriteBounds]
  -[SKSCNRenderer set_shouldCenterStats:]
  -[SKSCNRenderer _shouldCenterStats]
  -[SKSCNRenderer _showsCoreAnimationFPS]
  -[SKSCNRenderer _showsCPUStats]
  -[SKSCNRenderer _showsGPUStats]
  -[SKSCNRenderer _showsCulledNodesInNodeCount]
  -[SKSCNRenderer _showsTotalAreaRendered]
  -[SKSCNRenderer _showAllStats]
  -[SKSCNRenderer _spriteRenderCount]
  -[SKSCNRenderer _spriteSubmitCount]


SKFade : SKAction
  // class methods
  +[SKFade supportsSecureCoding]
  +[SKFade fadeInWithDuration:]
  +[SKFade fadeOutWithDuration:]
  +[SKFade fadeAlphaBy:duration:]
  +[SKFade fadeAlphaTo:duration:]

  // instance methods
  -[SKFade init]
  -[SKFade copyWithZone:]
  -[SKFade encodeWithCoder:]
  -[SKFade initWithCoder:]
  -[SKFade reversedAction]


SKFieldNode : SKNode
 @property  SKRegion *region
 @property  float strength
 @property  float falloff
 @property  float minimumRadius
 @property  BOOL enabled
 @property  BOOL exclusive
 @property  unsigned int categoryBitMask
 @property  void direction
 @property  float smoothness
 @property  float animationSpeed
 @property  SKTexture *texture

  // class methods
  +[SKFieldNode supportsSecureCoding]
  +[SKFieldNode dragField]
  +[SKFieldNode vortexField]
  +[SKFieldNode linearGravityFieldWithVector:]
  +[SKFieldNode velocityFieldWithVector:]
  +[SKFieldNode noiseFieldWithSmoothness:animationSpeed:]
  +[SKFieldNode turbulenceFieldWithSmoothness:animationSpeed:]
  +[SKFieldNode springField]
  +[SKFieldNode electricField]
  +[SKFieldNode magneticField]
  +[SKFieldNode customFieldWithEvaluationBlock:]
  +[SKFieldNode radialGravityField]
  +[SKFieldNode velocityFieldWithTexture:]

  // instance methods
  -[SKFieldNode init]
  -[SKFieldNode copyWithZone:]
  -[SKFieldNode setEnabled:]
  -[SKFieldNode encodeWithCoder:]
  -[SKFieldNode initWithCoder:]
  -[SKFieldNode .cxx_destruct]
  -[SKFieldNode isEnabled]
  -[SKFieldNode region]
  -[SKFieldNode direction]
  -[SKFieldNode setDirection:]
  -[SKFieldNode setTexture:]
  -[SKFieldNode falloff]
  -[SKFieldNode setFalloff:]
  -[SKFieldNode texture]
  -[SKFieldNode setExclusive:]
  -[SKFieldNode categoryBitMask]
  -[SKFieldNode setCategoryBitMask:]
  -[SKFieldNode field]
  -[SKFieldNode setSmoothness:]
  -[SKFieldNode setAnimationSpeed:]
  -[SKFieldNode setRegion:]
  -[SKFieldNode setStrength:]
  -[SKFieldNode strength]
  -[SKFieldNode setMinimumRadius:]
  -[SKFieldNode minimumRadius]
  -[SKFieldNode smoothness]
  -[SKFieldNode animationSpeed]
  -[SKFieldNode isExclusive]
  -[SKFieldNode setPhysicsField:]
  -[SKFieldNode isEqualToNode:]
  -[SKFieldNode _descriptionClassName]
  -[SKFieldNode initWithCoder:field:]


SKDragFieldNode : SKFieldNode
  // class methods
  +[SKDragFieldNode supportsSecureCoding]

  // instance methods
  -[SKDragFieldNode init]
  -[SKDragFieldNode encodeWithCoder:]
  -[SKDragFieldNode initWithCoder:]
  -[SKDragFieldNode _initialize]
  -[SKDragFieldNode _descriptionClassName]


SKVortexFieldNode : SKFieldNode
  // class methods
  +[SKVortexFieldNode supportsSecureCoding]

  // instance methods
  -[SKVortexFieldNode init]
  -[SKVortexFieldNode encodeWithCoder:]
  -[SKVortexFieldNode initWithCoder:]
  -[SKVortexFieldNode _initialize]
  -[SKVortexFieldNode _descriptionClassName]


SKLinearGravityFieldNode : SKFieldNode
  // class methods
  +[SKLinearGravityFieldNode supportsSecureCoding]

  // instance methods
  -[SKLinearGravityFieldNode init]
  -[SKLinearGravityFieldNode encodeWithCoder:]
  -[SKLinearGravityFieldNode initWithCoder:]
  -[SKLinearGravityFieldNode _initialize]
  -[SKLinearGravityFieldNode _descriptionClassName]


SKRadialGravityFieldNode : SKFieldNode
  // class methods
  +[SKRadialGravityFieldNode supportsSecureCoding]

  // instance methods
  -[SKRadialGravityFieldNode init]
  -[SKRadialGravityFieldNode encodeWithCoder:]
  -[SKRadialGravityFieldNode initWithCoder:]
  -[SKRadialGravityFieldNode _initialize]
  -[SKRadialGravityFieldNode _descriptionClassName]


SKCustomFieldNode : SKFieldNode
 @property  @? block

  // class methods
  +[SKCustomFieldNode supportsSecureCoding]

  // instance methods
  -[SKCustomFieldNode init]
  -[SKCustomFieldNode encodeWithCoder:]
  -[SKCustomFieldNode initWithCoder:]
  -[SKCustomFieldNode block]
  -[SKCustomFieldNode setBlock:]
  -[SKCustomFieldNode _initialize]
  -[SKCustomFieldNode _descriptionClassName]
  -[SKCustomFieldNode setBatchBlock:]
  -[SKCustomFieldNode batchBlock]


SKVelocityFieldNode : SKFieldNode
 @property  SKTexture *velocityTexture
 @property  void velocity

  // class methods
  +[SKVelocityFieldNode supportsSecureCoding]

  // instance methods
  -[SKVelocityFieldNode init]
  -[SKVelocityFieldNode encodeWithCoder:]
  -[SKVelocityFieldNode initWithCoder:]
  -[SKVelocityFieldNode .cxx_destruct]
  -[SKVelocityFieldNode velocity]
  -[SKVelocityFieldNode setVelocity:]
  -[SKVelocityFieldNode _initialize]
  -[SKVelocityFieldNode _descriptionClassName]
  -[SKVelocityFieldNode setVelocityTexture:]
  -[SKVelocityFieldNode velocityTexture]


SKNoiseFieldNode : SKFieldNode
 @property  float smoothness
 @property  float animationSpeed

  // class methods
  +[SKNoiseFieldNode supportsSecureCoding]

  // instance methods
  -[SKNoiseFieldNode init]
  -[SKNoiseFieldNode encodeWithCoder:]
  -[SKNoiseFieldNode initWithCoder:]
  -[SKNoiseFieldNode setSmoothness:]
  -[SKNoiseFieldNode setAnimationSpeed:]
  -[SKNoiseFieldNode smoothness]
  -[SKNoiseFieldNode animationSpeed]
  -[SKNoiseFieldNode _initialize]
  -[SKNoiseFieldNode _descriptionClassName]


SKTurbulenceFieldNode : SKNoiseFieldNode
  // class methods
  +[SKTurbulenceFieldNode supportsSecureCoding]

  // instance methods
  -[SKTurbulenceFieldNode init]
  -[SKTurbulenceFieldNode encodeWithCoder:]
  -[SKTurbulenceFieldNode initWithCoder:]
  -[SKTurbulenceFieldNode _initialize]
  -[SKTurbulenceFieldNode _descriptionClassName]


SKSpringFieldNode : SKFieldNode
  // class methods
  +[SKSpringFieldNode supportsSecureCoding]

  // instance methods
  -[SKSpringFieldNode init]
  -[SKSpringFieldNode encodeWithCoder:]
  -[SKSpringFieldNode initWithCoder:]
  -[SKSpringFieldNode _initialize]
  -[SKSpringFieldNode _descriptionClassName]


SKMagneticFieldNode : SKFieldNode
  // class methods
  +[SKMagneticFieldNode supportsSecureCoding]

  // instance methods
  -[SKMagneticFieldNode init]
  -[SKMagneticFieldNode encodeWithCoder:]
  -[SKMagneticFieldNode initWithCoder:]
  -[SKMagneticFieldNode _initialize]
  -[SKMagneticFieldNode _descriptionClassName]


SKElectricFieldNode : SKFieldNode
  // class methods
  +[SKElectricFieldNode supportsSecureCoding]

  // instance methods
  -[SKElectricFieldNode init]
  -[SKElectricFieldNode encodeWithCoder:]
  -[SKElectricFieldNode initWithCoder:]
  -[SKElectricFieldNode _initialize]
  -[SKElectricFieldNode _descriptionClassName]


SKGroup : SKAction
  // class methods
  +[SKGroup supportsSecureCoding]
  +[SKGroup groupWithActions:]

  // instance methods
  -[SKGroup init]
  -[SKGroup copyWithZone:]
  -[SKGroup encodeWithCoder:]
  -[SKGroup initWithCoder:]
  -[SKGroup .cxx_destruct]
  -[SKGroup finished]
  -[SKGroup reversedAction]
  -[SKGroup subactions]


SKMove : SKAction
  // class methods
  +[SKMove supportsSecureCoding]
  +[SKMove moveBy:duration:]
  +[SKMove moveTo:duration:]
  +[SKMove moveByX:y:duration:]
  +[SKMove moveToX:duration:]
  +[SKMove moveToY:duration:]
  +[SKMove moveToX:y:duration:]
  +[SKMove moveByX:duration:]
  +[SKMove moveByY:duration:]

  // instance methods
  -[SKMove init]
  -[SKMove copyWithZone:]
  -[SKMove encodeWithCoder:]
  -[SKMove initWithCoder:]
  -[SKMove reversedAction]


SKRenderer : NSObject /usr/lib/libc++.1.dylib
 @property  SKScene *scene
 @property  BOOL ignoresSiblingOrder
 @property  BOOL shouldCullNonVisibleNodes
 @property  BOOL showsDrawCount
 @property  BOOL showsNodeCount
 @property  BOOL showsQuadCount
 @property  BOOL showsPhysics
 @property  BOOL showsFields

  // class methods
  +[SKRenderer rendererWithDevice:]

  // instance methods
  -[SKRenderer dealloc]
  -[SKRenderer .cxx_destruct]
  -[SKRenderer _update:]
  -[SKRenderer scene]
  -[SKRenderer setScene:]
  -[SKRenderer _initialize]
  -[SKRenderer updateAtTime:]
  -[SKRenderer setShowsNodeCount:]
  -[SKRenderer _getOptions]
  -[SKRenderer initWithSKCRenderer:]
  -[SKRenderer setShowsDrawCount:]
  -[SKRenderer setShowsQuadCount:]
  -[SKRenderer setShowsPhysics:]
  -[SKRenderer setShowsFields:]
  -[SKRenderer setIgnoresSiblingOrder:]
  -[SKRenderer ignoresSiblingOrder]
  -[SKRenderer showsNodeCount]
  -[SKRenderer showsQuadCount]
  -[SKRenderer showsDrawCount]
  -[SKRenderer showsPhysics]
  -[SKRenderer showsFields]
  -[SKRenderer _notifyWillRenderContent]
  -[SKRenderer renderWithViewport:renderCommandEncoder:renderPassDescriptor:commandQueue:]
  -[SKRenderer renderWithViewport:commandBuffer:renderPassDescriptor:]
  -[SKRenderer setShouldCullNonVisibleNodes:]
  -[SKRenderer shouldCullNonVisibleNodes]


SKParticleSystemNode : SKNode
  // instance methods
  -[SKParticleSystemNode _makeBackingNode]
  -[SKParticleSystemNode _didMakeBackingNode]


SKFalloff : SKAction
  // class methods
  +[SKFalloff supportsSecureCoding]
  +[SKFalloff falloffTo:duration:]
  +[SKFalloff falloffBy:duration:]

  // instance methods
  -[SKFalloff init]
  -[SKFalloff copyWithZone:]
  -[SKFalloff encodeWithCoder:]
  -[SKFalloff initWithCoder:]
  -[SKFalloff reversedAction]


SKRemove : SKAction
  // class methods
  +[SKRemove supportsSecureCoding]
  +[SKRemove removeFromParent]

  // instance methods
  -[SKRemove init]
  -[SKRemove copyWithZone:]
  -[SKRemove encodeWithCoder:]
  -[SKRemove initWithCoder:]
  -[SKRemove reversedAction]
  -[SKRemove updateWithTarget:forTime:]
  -[SKRemove willStartWithTarget:atTime:]


SKTileGroupRule : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSArray *tileDefinitionIDs
 @property  SKTileGroup *parentGroup
 @property  unsigned long adjacency
 @property  NSArray *tileDefinitions
 @property  NSString *name

  // class methods
  +[SKTileGroupRule supportsSecureCoding]
  +[SKTileGroupRule tileGroupRuleWithAdjacency:tileDefinitions:]

  // instance methods
  -[SKTileGroupRule name]
  -[SKTileGroupRule copyWithZone:]
  -[SKTileGroupRule copy]
  -[SKTileGroupRule encodeWithCoder:]
  -[SKTileGroupRule initWithCoder:]
  -[SKTileGroupRule .cxx_destruct]
  -[SKTileGroupRule setName:]
  -[SKTileGroupRule parentGroup]
  -[SKTileGroupRule setParentGroup:]
  -[SKTileGroupRule isEqualToNode:]
  -[SKTileGroupRule setTileDefinitionParentPointers]
  -[SKTileGroupRule adjacency]
  -[SKTileGroupRule setAdjacency:]
  -[SKTileGroupRule tileDefinitions]
  -[SKTileGroupRule setTileDefinitions:]
  -[SKTileGroupRule tileDefinitionIDs]
  -[SKTileGroupRule setTileDefinitionIDs:]
  -[SKTileGroupRule initWithAdjacency:tileDefinitions:]
  -[SKTileGroupRule calcTileDefinitionIDsWithTileSet:]
  -[SKTileGroupRule setTileDefinitionsFromIDsWithTileSet:]


SKTileGroup : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  SKTileSet *parentSet
 @property  unsigned long type
 @property  NSArray *rules
 @property  NSString *name

  // class methods
  +[SKTileGroup supportsSecureCoding]
  +[SKTileGroup tileGroupWithRules:]
  +[SKTileGroup tileGroupWithTileDefinition:]
  +[SKTileGroup emptyTileGroup]

  // instance methods
  -[SKTileGroup name]
  -[SKTileGroup copyWithZone:]
  -[SKTileGroup copy]
  -[SKTileGroup type]
  -[SKTileGroup setType:]
  -[SKTileGroup encodeWithCoder:]
  -[SKTileGroup initWithCoder:]
  -[SKTileGroup .cxx_destruct]
  -[SKTileGroup setName:]
  -[SKTileGroup rules]
  -[SKTileGroup setRules:]
  -[SKTileGroup isEqualToNode:]
  -[SKTileGroup setRuleParentPointers]
  -[SKTileGroup initWithTileDefinition:]
  -[SKTileGroup initWithRules:]
  -[SKTileGroup findTileDefinitionIndexForAdjacencyData:tileSetType:]
  -[SKTileGroup findTileDefinitionIDsForAdjacencyData:tileSetType:]
  -[SKTileGroup parentSet]
  -[SKTileGroup setParentSet:]


SKTileSet : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSArray *tileDefinitions
 @property  NSArray *stamps
 @property  NSArray *tileGroups
 @property  NSString *name
 @property  unsigned long type
 @property  SKTileGroup *defaultTileGroup
 @property  {CGSize=dd} defaultTileSize

  // class methods
  +[SKTileSet supportsSecureCoding]
  +[SKTileSet recursivePathsForResourcesOfType:inDirectory:]
  +[SKTileSet findTileSetInBundleNamed:]
  +[SKTileSet tileSetWithTileGroups:]
  +[SKTileSet tileSetWithTileGroups:tileSetType:]
  +[SKTileSet tileSetNamed:]
  +[SKTileSet tileSetFromURL:]
  +[SKTileSet clearTileSetTableCache]

  // instance methods
  -[SKTileSet init]
  -[SKTileSet dealloc]
  -[SKTileSet name]
  -[SKTileSet copyWithZone:]
  -[SKTileSet copy]
  -[SKTileSet type]
  -[SKTileSet setType:]
  -[SKTileSet encodeWithCoder:]
  -[SKTileSet initWithCoder:]
  -[SKTileSet .cxx_destruct]
  -[SKTileSet setName:]
  -[SKTileSet observeValueForKeyPath:ofObject:change:context:]
  -[SKTileSet commonInit]
  -[SKTileSet tileGroups]
  -[SKTileSet setTileGroups:]
  -[SKTileSet isEqualToNode:]
  -[SKTileSet tileDefinitions]
  -[SKTileSet unobserveAllTileDefinitions]
  -[SKTileSet lookForMissingDefinitionsInGroups]
  -[SKTileSet updateTileDefinitionIDsInGroupRules]
  -[SKTileSet setGroupParentPointers]
  -[SKTileSet defaultTileGroup]
  -[SKTileSet observeTileDefinition:]
  -[SKTileSet removeTileDefinitionObservers:]
  -[SKTileSet calcDefaultTileSize]
  -[SKTileSet initWithTileGroups:]
  -[SKTileSet initWithTileGroups:tileSetType:]
  -[SKTileSet setDefaultTileGroup:]
  -[SKTileSet defaultTileSize]
  -[SKTileSet setDefaultTileSize:]
  -[SKTileSet stamps]
  -[SKTileSet setStamps:]
  -[SKTileSet observeAllTileDefinitions]
  -[SKTileSet findTileDefinitionForGroup:withGroupAdjacency:]
  -[SKTileSet findTileDefinitionsForGroup:withGroupAdjacency:]
  -[SKTileSet getCenterTileDefinitionForGroup:withRequiredOutputGroupAdjacency:]


SKTileStamp : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  unsigned long numberOfColumns
 @property  unsigned long numberOfRows
 @property  ^I tileData

  // class methods
  +[SKTileStamp supportsSecureCoding]
  +[SKTileStamp tileStampWithWidth:height:tileData:]

  // instance methods
  -[SKTileStamp init]
  -[SKTileStamp dealloc]
  -[SKTileStamp encodeWithCoder:]
  -[SKTileStamp initWithCoder:]
  -[SKTileStamp numberOfColumns]
  -[SKTileStamp numberOfRows]
  -[SKTileStamp isEqualToNode:]
  -[SKTileStamp setTileData:size:]
  -[SKTileStamp initWithWidth:height:tileData:]
  -[SKTileStamp tileData]
  -[SKTileStamp tileDefinitionsForTileMap:]


SKRepeat : SKAction
  // class methods
  +[SKRepeat supportsSecureCoding]
  +[SKRepeat repeatAction:count:]
  +[SKRepeat repeatActionForever:]

  // instance methods
  -[SKRepeat init]
  -[SKRepeat copyWithZone:]
  -[SKRepeat encodeWithCoder:]
  -[SKRepeat initWithCoder:]
  -[SKRepeat .cxx_destruct]
  -[SKRepeat reversedAction]
  -[SKRepeat subactions]


SKReferenceNode : SKNode
 @property  NSString *referenceFileName
 @property  NSURL *referenceURL

  // class methods
  +[SKReferenceNode supportsSecureCoding]
  +[SKReferenceNode referenceNodeWithURL:]
  +[SKReferenceNode referenceNodeWithFileNamed:]
  +[SKReferenceNode nodeWithFileNamed:]

  // instance methods
  -[SKReferenceNode init]
  -[SKReferenceNode copyWithZone:]
  -[SKReferenceNode encodeWithCoder:]
  -[SKReferenceNode initWithCoder:]
  -[SKReferenceNode initWithURL:]
  -[SKReferenceNode .cxx_destruct]
  -[SKReferenceNode referenceURL]
  -[SKReferenceNode initWithFileNamed:]
  -[SKReferenceNode setReferenceURL:]
  -[SKReferenceNode setReferenceFileName:]
  -[SKReferenceNode referenceFileName]
  -[SKReferenceNode resolveReferenceNode]
  -[SKReferenceNode didLoadReferenceNode:]
  -[SKReferenceNode _resolveReferenceNode]
  -[SKReferenceNode resolveNodeFromArchiveData:]
  -[SKReferenceNode resolvedNode]


SKHide : SKAction
  // class methods
  +[SKHide supportsSecureCoding]
  +[SKHide hide]
  +[SKHide unhide]

  // instance methods
  -[SKHide init]
  -[SKHide copyWithZone:]
  -[SKHide encodeWithCoder:]
  -[SKHide initWithCoder:]
  -[SKHide reversedAction]


SKRotate : SKAction
  // class methods
  +[SKRotate supportsSecureCoding]
  +[SKRotate rotateByX:y:z:duration:]
  +[SKRotate rotateToX:y:z:duration:]
  +[SKRotate rotateByAngle:duration:]
  +[SKRotate rotateToAngle:duration:]
  +[SKRotate rotateToAngle:duration:shortestUnitArc:]
  +[SKRotate rotateByX:duration:]
  +[SKRotate rotateToX:duration:]
  +[SKRotate rotateByY:duration:]
  +[SKRotate rotateToY:duration:]

  // instance methods
  -[SKRotate init]
  -[SKRotate copyWithZone:]
  -[SKRotate encodeWithCoder:]
  -[SKRotate initWithCoder:]
  -[SKRotate reversedAction]


SKLightNode : SKNode
 @property  BOOL enabled
 @property  UIColor *lightColor
 @property  UIColor *ambientColor
 @property  UIColor *shadowColor
 @property  double falloff
 @property  unsigned int categoryBitMask

  // class methods
  +[SKLightNode supportsSecureCoding]
  +[SKLightNode debugHierarchyPropertyDescriptions]
  +[SKLightNode debugHierarchyValueForPropertyWithName:onObject:outOptions:outError:]

  // instance methods
  -[SKLightNode init]
  -[SKLightNode copyWithZone:]
  -[SKLightNode setEnabled:]
  -[SKLightNode encodeWithCoder:]
  -[SKLightNode initWithCoder:]
  -[SKLightNode isEnabled]
  -[SKLightNode falloff]
  -[SKLightNode setFalloff:]
  -[SKLightNode commonInit]
  -[SKLightNode shadowColor]
  -[SKLightNode setShadowColor:]
  -[SKLightNode categoryBitMask]
  -[SKLightNode setCategoryBitMask:]
  -[SKLightNode lightColor]
  -[SKLightNode setLightColor:]
  -[SKLightNode isEqualToNode:]
  -[SKLightNode _makeBackingNode]
  -[SKLightNode _didMakeBackingNode]
  -[SKLightNode setAmbientColor:]
  -[SKLightNode setLightCategoryBitMask:]
  -[SKLightNode setLightDecay:]
  -[SKLightNode ambientColor]
  -[SKLightNode lightDecay]
  -[SKLightNode lightCategoryBitMask]


SKRunAction : SKAction
  // class methods
  +[SKRunAction supportsSecureCoding]
  +[SKRunAction runAction:onFirstChildWithName:]
  +[SKRunAction runAction:afterActionWithKey:]

  // instance methods
  -[SKRunAction init]
  -[SKRunAction copyWithZone:]
  -[SKRunAction encodeWithCoder:]
  -[SKRunAction initWithCoder:]
  -[SKRunAction .cxx_destruct]
  -[SKRunAction reversedAction]
  -[SKRunAction updateWithTarget:forTime:]
  -[SKRunAction willStartWithTarget:atTime:]


SKThreadSafeMapTable : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding, NSFastEnumeration>
  // class methods
  +[SKThreadSafeMapTable supportsSecureCoding]

  // instance methods
  -[SKThreadSafeMapTable copyWithZone:]
  -[SKThreadSafeMapTable methodSignatureForSelector:]
  -[SKThreadSafeMapTable forwardInvocation:]
  -[SKThreadSafeMapTable .cxx_destruct]
  -[SKThreadSafeMapTable initWithNSMapTable:]


SKThreadSafeMutableArray : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>
 @property  NSArray *arrayRepresentation

  // instance methods
  -[SKThreadSafeMutableArray init]
  -[SKThreadSafeMutableArray copyWithZone:]
  -[SKThreadSafeMutableArray methodSignatureForSelector:]
  -[SKThreadSafeMutableArray forwardInvocation:]
  -[SKThreadSafeMutableArray removeObjectsInArray:]
  -[SKThreadSafeMutableArray .cxx_destruct]
  -[SKThreadSafeMutableArray arrayRepresentation]
  -[SKThreadSafeMutableArray initWithNSMutableArray:]


SKThreadSafeMutableDictionary : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>
  // instance methods
  -[SKThreadSafeMutableDictionary copyWithZone:]
  -[SKThreadSafeMutableDictionary methodSignatureForSelector:]
  -[SKThreadSafeMutableDictionary forwardInvocation:]
  -[SKThreadSafeMutableDictionary .cxx_destruct]
  -[SKThreadSafeMutableDictionary initWithNSMutableDictionary:]


SKCameraNode : SKNode
  // class methods
  +[SKCameraNode supportsSecureCoding]

  // instance methods
  -[SKCameraNode containsNode:]
  -[SKCameraNode cameraBoundingBox]
  -[SKCameraNode cameraBoundingBoxOverridingSceneSize:]
  -[SKCameraNode containedNodeSet]


SKScale : SKAction
  // class methods
  +[SKScale supportsSecureCoding]
  +[SKScale scaleBy:duration:]
  +[SKScale scaleTo:duration:]
  +[SKScale scaleXBy:y:duration:]
  +[SKScale scaleXTo:y:duration:]
  +[SKScale scaleXTo:duration:]
  +[SKScale scaleYTo:duration:]
  +[SKScale scaleToSize:duration:]
  +[SKScale scaleXBy:duration:]
  +[SKScale scaleYBy:duration:]

  // instance methods
  -[SKScale init]
  -[SKScale copyWithZone:]
  -[SKScale encodeWithCoder:]
  -[SKScale initWithCoder:]
  -[SKScale reversedAction]


SKSequence : SKAction
  // class methods
  +[SKSequence supportsSecureCoding]
  +[SKSequence sequenceWithActions:]

  // instance methods
  -[SKSequence init]
  -[SKSequence copyWithZone:]
  -[SKSequence encodeWithCoder:]
  -[SKSequence initWithCoder:]
  -[SKSequence .cxx_destruct]
  -[SKSequence reversedAction]
  -[SKSequence subactions]


SKWait : SKAction
  // class methods
  +[SKWait supportsSecureCoding]
  +[SKWait waitForDuration:withRange:]
  +[SKWait waitForDuration:]

  // instance methods
  -[SKWait init]
  -[SKWait encodeWithCoder:]
  -[SKWait initWithCoder:]
  -[SKWait reversedAction]


SKBitmapFont : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
  // class methods
  +[SKBitmapFont supportsSecureCoding]
  +[SKBitmapFont fontForFileNamed:]
  +[SKBitmapFont fontWithTexture:fontDataString:]
  +[SKBitmapFont _fontForFileNamed:]

  // instance methods
  -[SKBitmapFont init]
  -[SKBitmapFont encodeWithCoder:]
  -[SKBitmapFont initWithCoder:]
  -[SKBitmapFont .cxx_destruct]
  -[SKBitmapFont .cxx_construct]
  -[SKBitmapFont fontName]
  -[SKBitmapFont lineHeight]
  -[SKBitmapFont spriteForCharacterNamed:]
  -[SKBitmapFont kerningForCharacterNamed:followedBy:]
  -[SKBitmapFont advanceForCharacterNamed:]
  -[SKBitmapFont loadFontWithTexture:fontDataString:]


SKScene : SKEffectNode
 @property  BOOL _usesExplicitUpdate
 @property  BOOL _usesExplicitRender
 @property  BOOL _needsUpdate
 @property  BOOL _needsRender
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleRect
 @property  {CGSize=dd} visibleRectSize
 @property  {CGPoint=dd} visibleRectCenter
 @property  AVAudioEnvironmentNode *avAudioEnvironmentNode
 @property  PKPhysicsWorld *_pkPhysicsWorld
 @property  {CGSize=dd} size
 @property  long long scaleMode
 @property  SKCameraNode *camera
 @property  SKNode *listener
 @property  AVAudioEngine *audioEngine
 @property  UIColor *backgroundColor
 @property  <SKSceneDelegate> *delegate
 @property  {CGPoint=dd} anchorPoint
 @property  SKPhysicsWorld *physicsWorld
 @property  SKView *view

  // class methods
  +[SKScene supportsSecureCoding]
  +[SKScene debugHierarchyPropertyDescriptions]
  +[SKScene debugHierarchyValueForPropertyWithName:onObject:outOptions:outError:]
  +[SKScene sceneWithContentsOfFile:]
  +[SKScene sceneWithSize:]
  +[SKScene sceneWithContentsOfFile:size:]

  // instance methods
  -[SKScene init]
  -[SKScene dealloc]
  -[SKScene copyWithZone:]
  -[SKScene encodeWithCoder:]
  -[SKScene initWithCoder:]
  -[SKScene delegate]
  -[SKScene setDelegate:]
  -[SKScene listener]
  -[SKScene .cxx_destruct]
  -[SKScene size]
  -[SKScene _update:]
  -[SKScene position]
  -[SKScene setListener:]
  -[SKScene setSize:]
  -[SKScene frame]
  -[SKScene setScale:]
  -[SKScene setPosition:]
  -[SKScene _isDirty]
  -[SKScene setPaused:]
  -[SKScene visibleRect]
  -[SKScene view]
  -[SKScene initWithSize:]
  -[SKScene backgroundColor]
  -[SKScene setBackgroundColor:]
  -[SKScene anchorPoint]
  -[SKScene setAnchorPoint:]
  -[SKScene parentFocusEnvironment]
  -[SKScene setZPosition:]
  -[SKScene didMoveToView:]
  -[SKScene zPosition]
  -[SKScene _setDirty]
  -[SKScene setVisibleRect:]
  -[SKScene update:]
  -[SKScene _needsUpdate]
  -[SKScene setCamera:]
  -[SKScene camera]
  -[SKScene scaleMode]
  -[SKScene setScaleMode:]
  -[SKScene _setNeedsUpdate]
  -[SKScene physicsWorld]
  -[SKScene _notifyNextDirtyState]
  -[SKScene audioEngine]
  -[SKScene willMoveFromView:]
  -[SKScene _didMoveToView:]
  -[SKScene _getFocusNodes]
  -[SKScene isEqualToNode:]
  -[SKScene avAudioEnvironmentNode]
  -[SKScene _makeBackingNode]
  -[SKScene _didMakeBackingNode]
  -[SKScene didChangeSize:]
  -[SKScene _usesExplicitUpdate]
  -[SKScene set_needsUpdate:]
  -[SKScene _willMoveFromView:]
  -[SKScene set_pkPhysicsWorld:]
  -[SKScene set_usesExplicitRender:]
  -[SKScene set_usesExplicitUpdate:]
  -[SKScene sceneDidLoad]
  -[SKScene checkAudioEngine]
  -[SKScene setAvAudioEnvironmentNode:]
  -[SKScene handleAVAudioEngineInterruption:]
  -[SKScene didEvaluateActions]
  -[SKScene didSimulatePhysics]
  -[SKScene zRotation]
  -[SKScene setZRotation:]
  -[SKScene xScale]
  -[SKScene yScale]
  -[SKScene setXScale:]
  -[SKScene setYScale:]
  -[SKScene didApplyConstraints]
  -[SKScene didFinishUpdate]
  -[SKScene _hasConstraints]
  -[SKScene _registerConstraintsForNode:]
  -[SKScene _removeConstraintsForNode:]
  -[SKScene convertPointFromParent:]
  -[SKScene convertPointToParent:]
  -[SKScene set_anchorPoint:]
  -[SKScene convertPointFromView:]
  -[SKScene convertPointToView:]
  -[SKScene setVisibleRectSize:]
  -[SKScene visibleRectSize]
  -[SKScene setVisibleRectCenter:]
  -[SKScene visibleRectCenter]
  -[SKScene _needsRender]
  -[SKScene set_needsRender:]
  -[SKScene _pkPhysicsWorld]
  -[SKScene _usesExplicitRender]
  -[SKScene willRenderContent]
  -[SKScene didContinueContact:]
  -[SKScene _setNeedsRender]
  -[SKScene _setBackgroundContentsWithBuffer:]


SKTransformNode : SKNode
 @property  double xRotation
 @property  double yRotation

  // instance methods
  -[SKTransformNode quaternion]
  -[SKTransformNode setQuaternion:]
  -[SKTransformNode rotationMatrix]
  -[SKTransformNode eulerAngles]
  -[SKTransformNode setEulerAngles:]
  -[SKTransformNode _makeBackingNode]
  -[SKTransformNode _didMakeBackingNode]
  -[SKTransformNode zRotation]
  -[SKTransformNode setZRotation:]
  -[SKTransformNode setXRotation:]
  -[SKTransformNode setYRotation:]
  -[SKTransformNode xRotation]
  -[SKTransformNode yRotation]
  -[SKTransformNode setRotationMatrix:]


IKLink : NSObject /usr/lib/libc++.1.dylib
 @property  SKNode *node
 @property  (_GLKVector2={?=ff}{?=ff}[2f]) position
 @property  float angleInitial
 @property  float angle
 @property  float length
 @property  (_GLKVector2={?=ff}{?=ff}[2f]) size

  // instance methods
  -[IKLink length]
  -[IKLink setLength:]
  -[IKLink .cxx_destruct]
  -[IKLink size]
  -[IKLink position]
  -[IKLink node]
  -[IKLink setSize:]
  -[IKLink angle]
  -[IKLink setNode:]
  -[IKLink setPosition:]
  -[IKLink initWithNode:]
  -[IKLink rotateByAngle:]
  -[IKLink normalizeAngle:]
  -[IKLink angleInitial]
  -[IKLink setAngleInitial:]


SKReach : SKAction
  // class methods
  +[SKReach reachTo:rootNode:duration:]
  +[SKReach reachTo:rootNode:velocity:]
  +[SKReach reachTo:rootNode:zRotationSpeed:maxDuration:]
  +[SKReach reachTo:rootNode:duration:maxZRotationSpeed:]

  // instance methods
  -[SKReach init]
  -[SKReach copyWithZone:]
  -[SKReach .cxx_destruct]
  -[SKReach updateWithTarget:forTime:]
  -[SKReach willStartWithTarget:atTime:]
  -[SKReach solveIKWithTarget:]


SKButtonNode : SKLabelNode
 @property  NSObject<SKButtonNodeDelegate> *delegate
 @property  SKAction *downAction
 @property  SKAction *upAction

  // class methods
  +[SKButtonNode supportsSecureCoding]
  +[SKButtonNode buttonWithFontNamed:]

  // instance methods
  -[SKButtonNode init]
  -[SKButtonNode copyWithZone:]
  -[SKButtonNode encodeWithCoder:]
  -[SKButtonNode initWithCoder:]
  -[SKButtonNode delegate]
  -[SKButtonNode setDelegate:]
  -[SKButtonNode .cxx_destruct]
  -[SKButtonNode touchesBegan:withEvent:]
  -[SKButtonNode touchesEnded:withEvent:]
  -[SKButtonNode upAction]
  -[SKButtonNode setDownAction:]
  -[SKButtonNode setUpAction:]
  -[SKButtonNode touchBegan:location:]
  -[SKButtonNode touchEnded:location:]
  -[SKButtonNode touchMoved:location:]
  -[SKButtonNode onTouchUpInside:]
  -[SKButtonNode onTouchUp:]
  -[SKButtonNode onTouchDownInside:]
  -[SKButtonNode downAction]


SKButtonNodeSprite : SKSpriteNode
 @property  NSObject<SKButtonNodeSpriteDelegate> *delegate
 @property  SKAction *downAction
 @property  SKAction *upAction

  // class methods
  +[SKButtonNodeSprite supportsSecureCoding]
  +[SKButtonNodeSprite buttonWithFontNamed:]

  // instance methods
  -[SKButtonNodeSprite init]
  -[SKButtonNodeSprite copyWithZone:]
  -[SKButtonNodeSprite encodeWithCoder:]
  -[SKButtonNodeSprite initWithCoder:]
  -[SKButtonNodeSprite delegate]
  -[SKButtonNodeSprite setDelegate:]
  -[SKButtonNodeSprite .cxx_destruct]
  -[SKButtonNodeSprite touchesBegan:withEvent:]
  -[SKButtonNodeSprite touchesEnded:withEvent:]
  -[SKButtonNodeSprite upAction]
  -[SKButtonNodeSprite setDownAction:]
  -[SKButtonNodeSprite setUpAction:]
  -[SKButtonNodeSprite touchBegan:location:]
  -[SKButtonNodeSprite touchEnded:location:]
  -[SKButtonNodeSprite touchMoved:location:]
  -[SKButtonNodeSprite onTouchUpInside:]
  -[SKButtonNodeSprite onTouchUp:]
  -[SKButtonNodeSprite onTouchDownInside:]
  -[SKButtonNodeSprite downAction]


SKAttribute : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSString *name
 @property  long long type

  // class methods
  +[SKAttribute supportsSecureCoding]
  +[SKAttribute attributeWithName:type:]

  // instance methods
  -[SKAttribute init]
  -[SKAttribute name]
  -[SKAttribute type]
  -[SKAttribute encodeWithCoder:]
  -[SKAttribute initWithCoder:]
  -[SKAttribute .cxx_destruct]
  -[SKAttribute .cxx_construct]
  -[SKAttribute initWithName:type:]
  -[SKAttribute getNameString]
  -[SKAttribute isEqualToAttribute:]


SKAttributeValue : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  long long type
 @property  float floatValue
 @property  void vectorFloat2Value
 @property  void vectorFloat3Value
 @property  void vectorFloat4Value

  // class methods
  +[SKAttributeValue supportsSecureCoding]
  +[SKAttributeValue valueWithFloat:]
  +[SKAttributeValue valueWithVectorFloat2:]
  +[SKAttributeValue valueWithVectorFloat3:]
  +[SKAttributeValue valueWithVectorFloat4:]

  // instance methods
  -[SKAttributeValue floatValue]
  -[SKAttributeValue init]
  -[SKAttributeValue type]
  -[SKAttributeValue encodeWithCoder:]
  -[SKAttributeValue initWithCoder:]
  -[SKAttributeValue setFloatValue:]
  -[SKAttributeValue copyValueTo:type:count:]
  -[SKAttributeValue setVectorFloat2Value:]
  -[SKAttributeValue setVectorFloat3Value:]
  -[SKAttributeValue setVectorFloat4Value:]
  -[SKAttributeValue vectorFloat2Value]
  -[SKAttributeValue vectorFloat3Value]
  -[SKAttributeValue vectorFloat4Value]
  -[SKAttributeValue isEqualToAttributeValue:]


SKAnimateWarp : SKAction
  // class methods
  +[SKAnimateWarp supportsSecureCoding]
  +[SKAnimateWarp warpTo:duration:]
  +[SKAnimateWarp animateWithWarps:times:restore:]
  +[SKAnimateWarp animateWithWarps:times:]

  // instance methods
  -[SKAnimateWarp init]
  -[SKAnimateWarp copyWithZone:]
  -[SKAnimateWarp encodeWithCoder:]
  -[SKAnimateWarp initWithCoder:]


SKTextureCache : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned int textureFormat
 @property  {shared_ptr<jet_texture>=^{jet_texture}^{__shared_weak_count}} backingTexture
 @property  long long filteringMode
 @property  int wrapMode
 @property  {CGSize=dd} size
 @property  {CGSize=dd} pixelSize
 @property  BOOL hasAlpha
 @property  BOOL isPOT
 @property  char * pixelData
 @property  int state
 @property  ^{_opaque_pthread_mutex_t=q[56c]} lock

  // instance methods
  -[SKTextureCache init]
  -[SKTextureCache dealloc]
  -[SKTextureCache .cxx_destruct]
  -[SKTextureCache size]
  -[SKTextureCache state]
  -[SKTextureCache _reset]
  -[SKTextureCache .cxx_construct]
  -[SKTextureCache setState:]
  -[SKTextureCache setSize:]
  -[SKTextureCache wrapMode]
  -[SKTextureCache pixelSize]
  -[SKTextureCache setPixelSize:]
  -[SKTextureCache getLock]
  -[SKTextureCache textureFormat]
  -[SKTextureCache setTextureFormat:]
  -[SKTextureCache pixelData]
  -[SKTextureCache setPixelData:]
  -[SKTextureCache setHasAlpha:]
  -[SKTextureCache hasAlpha]
  -[SKTextureCache filteringMode]
  -[SKTextureCache isPOT]
  -[SKTextureCache setIsPOT:]
  -[SKTextureCache setFilteringMode:]
  -[SKTextureCache setWrapMode:]
  -[SKTextureCache backingTexture]
  -[SKTextureCache setBackingTexture:]


SKTexture : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  {CGSize=dd} pixelSize
 @property  unsigned int textureTarget
 @property  BOOL isRotated
 @property  BOOL isFlipped
 @property  BOOL hasAlpha
 @property  int wrapMode
 @property  NSString *imageNameOrPath
 @property  BOOL performFullCapture
 @property  BOOL isRepeatable
 @property  {CGPoint=dd} cropScale
 @property  {CGPoint=dd} cropOffset
 @property  NSString *originalAtlasName
 @property  SKTextureAtlas *rootAtlas
 @property  NSString *subTextureName
 @property  ^I alphaMap
 @property  {CGSize=dd} alphaMapSize
 @property  BOOL needsExtrusionWorkaround
 @property  long long filteringMode
 @property  BOOL usesMipmaps

  // class methods
  +[SKTexture supportsSecureCoding]
  +[SKTexture _textureByTransferingData:size:]
  +[SKTexture _textureWithImageNamed:]
  +[SKTexture textureWithImageNamed:]
  +[SKTexture textureWithRect:inTexture:]
  +[SKTexture preloadTextures:withCompletionHandler:]
  +[SKTexture preloadQueue]
  +[SKTexture lookupTextureCacheForName:]
  +[SKTexture registerTextureCache:forName:]
  +[SKTexture textureWithCGImage:pointSize:]
  +[SKTexture textureWithData:size:]
  +[SKTexture textureWithImageNamed:rect:]
  +[SKTexture textureVectorNoiseWithSmoothness:size:]
  +[SKTexture textureNoiseWithSmoothness:size:grayscale:]
  +[SKTexture textureWithCGImage:]
  +[SKTexture textureWithImage:]
  +[SKTexture textureWithData:size:flipped:]
  +[SKTexture textureWithData:size:rowLength:alignment:]
  +[SKTexture _reloadTextureCacheForImageNamed:]
  +[SKTexture _cachedTextureNames]
  +[SKTexture compressedTextureWithData:]
  +[SKTexture compressedTextureWithData:size:bitsPerPixel:hasAlpha:]
  +[SKTexture textureWithImagePath:]
  +[SKTexture _textureByTransferingData:size:rowLength:alignment:]
  +[SKTexture _textureWithGLTextureId:size:]
  +[SKTexture textureWithIOSurfaceID:width:height:format:]
  +[SKTexture textureWithMetalTexture:]

  // instance methods
  -[SKTexture init]
  -[SKTexture dealloc]
  -[SKTexture copyWithZone:]
  -[SKTexture encodeWithCoder:]
  -[SKTexture initWithCoder:]
  -[SKTexture .cxx_destruct]
  -[SKTexture size]
  -[SKTexture metalTexture]
  -[SKTexture CGImage]
  -[SKTexture isFlipped]
  -[SKTexture wrapMode]
  -[SKTexture commonInit]
  -[SKTexture pixelSize]
  -[SKTexture isRotated]
  -[SKTexture hasAlpha]
  -[SKTexture textureTarget]
  -[SKTexture filteringMode]
  -[SKTexture usesMipmaps]
  -[SKTexture glTextureId]
  -[SKTexture textureRect]
  -[SKTexture _textureCache]
  -[SKTexture imageNameOrPath]
  -[SKTexture _backingTexture]
  -[SKTexture cropOffset]
  -[SKTexture cropScale]
  -[SKTexture setFilteringMode:]
  -[SKTexture setWrapMode:]
  -[SKTexture imgName]
  -[SKTexture _createCGImage]
  -[SKTexture textureByGeneratingNormalMapWithSmoothness:contrast:]
  -[SKTexture _generateNormalMap:contrast:multiPass:]
  -[SKTexture loadImageDataFromPVRData:]
  -[SKTexture loadImageData]
  -[SKTexture initTextureCacheWithImageData]
  -[SKTexture _ensureImageData]
  -[SKTexture loadImageDataFromCGImage:pointsSize:]
  -[SKTexture loadImageDataFromPVRGZData:]
  -[SKTexture performFullCapture]
  -[SKTexture _copyImageData]
  -[SKTexture initWithImageNamed:]
  -[SKTexture _needsExtrusionWorkaround]
  -[SKTexture textureByGeneratingNormalMap]
  -[SKTexture setTextureDimension:withPixelSize:]
  -[SKTexture preloadWithCompletionHandler:]
  -[SKTexture initWithImagePath:]
  -[SKTexture isEqualToTexture:]
  -[SKTexture textureByApplyingCIFilter:]
  -[SKTexture setUsesMipmaps:]
  -[SKTexture setCropScale:]
  -[SKTexture setCropOffset:]
  -[SKTexture originalAtlasName]
  -[SKTexture setOriginalAtlasName:]
  -[SKTexture subTextureName]
  -[SKTexture setSubTextureName:]
  -[SKTexture setPerformFullCapture:]
  -[SKTexture isRepeatable]
  -[SKTexture rootAtlas]
  -[SKTexture setRootAtlas:]
  -[SKTexture alphaMap]
  -[SKTexture alphaMapSize]
  -[SKTexture setNeedsExtrusionWorkaround:]
  -[SKTexture initWithBackingTetxure:logicalWidth:height:]
  -[SKTexture initWithBackingTetxure:]
  -[SKTexture setIsData:]
  -[SKTexture _initWithGLTextureId:size:]
  -[SKTexture _newTextureFromGLCache]
  -[SKTexture _convert_jet_texture_format_to_ci_format:]
  -[SKTexture _setImageName:]
  -[SKTexture setIsRotated:]
  -[SKTexture setIsFlipped:]
  -[SKTexture setTextureTarget:]
  -[SKTexture _savePngFromGLCache:]


SKTextureAtlas : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSArray *textureNames

  // class methods
  +[SKTextureAtlas supportsSecureCoding]
  +[SKTextureAtlas lookupCachedTextureNamed:]
  +[SKTextureAtlas atlasNamed:]
  +[SKTextureAtlas createCGImageFromCUINamedImage:withSize:atRect:]
  +[SKTextureAtlas findTextureNamed:]
  +[SKTextureAtlas canUseObjectForAtlas:]
  +[SKTextureAtlas preloadTextureAtlases:withCompletionHandler:]
  +[SKTextureAtlas atlasFromCUIImageAtlas:withName:]
  +[SKTextureAtlas getSupportedPostfixes]
  +[SKTextureAtlas atlasWithDictionary:]
  +[SKTextureAtlas preloadTextureAtlasesNamed:withCompletionHandler:]
  +[SKTextureAtlas _exportAtlasWithDictionary:toFile:forcePOT:]
  +[SKTextureAtlas _exportAtlasWithDictionary:toFile:]

  // instance methods
  -[SKTextureAtlas init]
  -[SKTextureAtlas dealloc]
  -[SKTextureAtlas encodeWithCoder:]
  -[SKTextureAtlas initWithCoder:]
  -[SKTextureAtlas .cxx_destruct]
  -[SKTextureAtlas unload]
  -[SKTextureAtlas .cxx_construct]
  -[SKTextureAtlas commonInit]
  -[SKTextureAtlas textureNamed:]
  -[SKTextureAtlas loadTextures]
  -[SKTextureAtlas _copyImageData]
  -[SKTextureAtlas preloadWithCompletionHandler:]
  -[SKTextureAtlas _prePopulateCache]
  -[SKTextureAtlas parseAtlasPropertyList:withPath:]
  -[SKTextureAtlas loadTexturesFromCUIImageAtlas:]
  -[SKTextureAtlas createTextureFromProvider:andSource:]
  -[SKTextureAtlas createSubTextureFromTexture:andCUINamedImage:andOrigin:]
  -[SKTextureAtlas findTextureNamedFromAtlas:]
  -[SKTextureAtlas isEqualToTextureAtlas:]
  -[SKTextureAtlas textureNames]


SKView : UIView /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 @property  {CGSize=dd} pixelSize
 @property  ^{SKCRenderer=@f{shared_ptr<SKCRenderPass>=^{SKCRenderPass}^{__shared_weak_count}}I{shared_ptr<jet_command_buffer>=^{jet_command_buffer}^{__shared_weak_count}}{list<std::__1::shared_ptr<SKCRenderPass> _layerBackedRenderer
 @property  NSMutableDictionary *_info
 @property  NSMutableDictionary *options
 @property  double physicsDebugStrokeWidth
 @property  BOOL disableStencilBuffers
 @property  BOOL paused
 @property  BOOL showsFPS
 @property  BOOL showsDrawCount
 @property  BOOL showsNodeCount
 @property  BOOL showsQuadCount
 @property  BOOL showsPhysics
 @property  BOOL showsFields
 @property  BOOL asynchronous
 @property  BOOL allowsTransparency
 @property  BOOL ignoresSiblingOrder
 @property  BOOL shouldCullNonVisibleNodes
 @property  long long preferredFramesPerSecond
 @property  NSObject<SKViewDelegate> *delegate
 @property  long long frameInterval
 @property  float preferredFrameRate
 @property  SKScene *scene

  // class methods
  +[SKView supportsSecureCoding]
  +[SKView layerClass]
  +[SKView debugHierarchyPropertyDescriptions]
  +[SKView debugHierarchyValueForPropertyWithName:onObject:outOptions:outError:]
  +[SKView _setCurrentTime:]
  +[SKView debugHierarchyAdditionalGroupingIDs]
  +[SKView debugHierarchyObjectsInGroupWithID:onObject:outOptions:]

  // instance methods
  -[SKView dealloc]
  -[SKView options]
  -[SKView _info]
  -[SKView encodeWithCoder:]
  -[SKView initWithCoder:]
  -[SKView delegate]
  -[SKView setDelegate:]
  -[SKView .cxx_destruct]
  -[SKView _update:]
  -[SKView isAsynchronous]
  -[SKView isPaused]
  -[SKView .cxx_construct]
  -[SKView isOpaque]
  -[SKView setAsynchronous:]
  -[SKView snapshot]
  -[SKView frameInterval]
  -[SKView setFrameInterval:]
  -[SKView setPaused:]
  -[SKView _commonInit]
  -[SKView _viewScale]
  -[SKView initWithFrame:]
  -[SKView _preferredFocusMovementStyle]
  -[SKView layoutSubviews]
  -[SKView touchesBegan:withEvent:]
  -[SKView touchesMoved:withEvent:]
  -[SKView touchesEnded:withEvent:]
  -[SKView touchesCancelled:withEvent:]
  -[SKView scene]
  -[SKView didMoveToWindow]
  -[SKView drawRect:]
  -[SKView set_info:]
  -[SKView _searchForFocusRegionsInContext:]
  -[SKView _regionForFocusedItem:inCoordinateSpace:]
  -[SKView setPreferredFramesPerSecond:]
  -[SKView pixelSize]
  -[SKView _fps]
  -[SKView preferredFramesPerSecond]
  -[SKView setPreferredFrameRate:]
  -[SKView preferredFrameRate]
  -[SKView _focusedItemRegionContainer]
  -[SKView CBApplicationWillResignActive]
  -[SKView CBApplicationDidBecomeActive]
  -[SKView setShowsFPS:]
  -[SKView setShowsNodeCount:]
  -[SKView setShowsDrawCount:]
  -[SKView setShowsQuadCount:]
  -[SKView set_showsGPUStats:]
  -[SKView set_showsCPUStats:]
  -[SKView setShowsPhysics:]
  -[SKView setShowsFields:]
  -[SKView setIgnoresSiblingOrder:]
  -[SKView ignoresSiblingOrder]
  -[SKView showsFPS]
  -[SKView showsNodeCount]
  -[SKView showsQuadCount]
  -[SKView showsDrawCount]
  -[SKView showsPhysics]
  -[SKView showsFields]
  -[SKView _showsCPUStats]
  -[SKView _showsGPUStats]
  -[SKView _showAllStats]
  -[SKView _spriteRenderCount]
  -[SKView _spriteSubmitCount]
  -[SKView setShouldCullNonVisibleNodes:]
  -[SKView shouldCullNonVisibleNodes]
  -[SKView getViewTransform]
  -[SKView convertPoint:fromScene:]
  -[SKView willRenderContent]
  -[SKView textureFromNode:withOptions:]
  -[SKView archiveToFile:]
  -[SKView _getViewContentsScale]
  -[SKView debugPrint]
  -[SKView chooseViewRenderer]
  -[SKView getRenderOptions]
  -[SKView disableStencilBuffers]
  -[SKView onInit]
  -[SKView _ensureRenderer]
  -[SKView setUpRenderCallback]
  -[SKView startRenderCallbacks]
  -[SKView _renderSynchronouslyForTime:preRender:postRender:]
  -[SKView _getEffectivePreferredFramesPerSecond]
  -[SKView captureToFile:]
  -[SKView getRootNode]
  -[SKView hasValidViewFramebuffer]
  -[SKView nextFramebuffer]
  -[SKView getViewport]
  -[SKView _endFrameStats]
  -[SKView notifyWillRenderContent]
  -[SKView _renderSynchronouslyForTime:preRender:postRender:withMTLScheduleHandler:]
  -[SKView _renderToIOSurfaceID:scaleFactor:asynchronous:waitOnFence:preRender:postRender:]
  -[SKView runOnce]
  -[SKView _shouldRenderForTime:]
  -[SKView _vsyncRenderForTime:preRender:postRender:]
  -[SKView stopRenderCallbacks]
  -[SKView renderContent]
  -[SKView presentScene:]
  -[SKView _reshape]
  -[SKView setAllowsTransparency:]
  -[SKView allowsTransparency]
  -[SKView _renderToIOSurfaceID:scaleFactor:asynchronous:preRender:postRender:]
  -[SKView remakeFramebuffer]
  -[SKView _renderContent]
  -[SKView textureFromNode:crop:]
  -[SKView setDynamicRenderBlock:]
  -[SKView setDisableStencilBuffers:]
  -[SKView renderForTime:shouldBlock:]
  -[SKView _dispatchRenderToIOSurfaceID:async:onQueue:waitOnFence:preRender:postRender:]
  -[SKView set_usesAsyncUpdateQueue:]
  -[SKView _usesAsyncUpdateQueue]
  -[SKView _renderUpdateEnabled]
  -[SKView set_renderUpdateEnabled:]
  -[SKView convertPoint:toScene:]
  -[SKView remakeFramebuffer:]
  -[SKView alphaValue]
  -[SKView presentScene:transition:]
  -[SKView textureFromNode:]
  -[SKView initWithFrame:updateQueue:]
  -[SKView isEqualToView:]
  -[SKView writeContentsToPNG:]
  -[SKView renderToIOSurfaceID:withScaleFactor:]
  -[SKView _setUpdateQueue:]
  -[SKView set_viewScale:]
  -[SKView _viewTranslation]
  -[SKView set_viewTranslation:]
  -[SKView _getPerformanceStats]
  -[SKView _layerBackedRenderer]
  -[SKView set_layerBackedRenderer:]
  -[SKView physicsDebugStrokeWidth]
  -[SKView setPhysicsDebugStrokeWidth:]


SKStrength : SKAction
  // class methods
  +[SKStrength supportsSecureCoding]
  +[SKStrength strengthTo:duration:]
  +[SKStrength strengthBy:duration:]

  // instance methods
  -[SKStrength init]
  -[SKStrength copyWithZone:]
  -[SKStrength encodeWithCoder:]
  -[SKStrength initWithCoder:]
  -[SKStrength reversedAction]


SKGlobalSharedContextRegistry : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SKGlobalSharedContextRegistry globalGLSharedContext]
  +[SKGlobalSharedContextRegistry setGlobalGLSharedContext:]
  +[SKGlobalSharedContextRegistry globalMetalDevice]
  +[SKGlobalSharedContextRegistry setGlobalMetalDevice:]
  +[SKGlobalSharedContextRegistry setPrefersOpenGL:]
  +[SKGlobalSharedContextRegistry getPrefersOpenGL]


SKRegion : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  r^{CGPath=} path

  // class methods
  +[SKRegion supportsSecureCoding]
  +[SKRegion infiniteRegion]

  // instance methods
  -[SKRegion copyWithZone:]
  -[SKRegion isEmpty]
  -[SKRegion encodeWithCoder:]
  -[SKRegion initWithCoder:]
  -[SKRegion .cxx_destruct]
  -[SKRegion path]
  -[SKRegion initWithPath:]
  -[SKRegion initWithSize:]
  -[SKRegion containsPoint:]
  -[SKRegion initWithRadius:]
  -[SKRegion inverseRegion]
  -[SKRegion regionByUnionWithRegion:]
  -[SKRegion regionByDifferenceFromRegion:]
  -[SKRegion regionByIntersectionWithRegion:]
  -[SKRegion containsPoints:locationStride:results:resultsStride:count:]
  -[SKRegion isEqualToRegion:]
  -[SKRegion isInfinite]


SKSpeed : SKAction
  // class methods
  +[SKSpeed supportsSecureCoding]
  +[SKSpeed speedBy:duration:]
  +[SKSpeed speedTo:duration:]

  // instance methods
  -[SKSpeed init]
  -[SKSpeed copyWithZone:]
  -[SKSpeed encodeWithCoder:]
  -[SKSpeed initWithCoder:]
  -[SKSpeed reversedAction]


SKRunBlock : SKAction
  // class methods
  +[SKRunBlock supportsSecureCoding]
  +[SKRunBlock runBlock:queue:]

  // instance methods
  -[SKRunBlock init]
  -[SKRunBlock copyWithZone:]
  -[SKRunBlock encodeWithCoder:]
  -[SKRunBlock initWithCoder:]
  -[SKRunBlock .cxx_destruct]
  -[SKRunBlock reversedAction]
  -[SKRunBlock updateWithTarget:forTime:]


SKTileMapNode : SKNode <NSCopying, NSSecureCoding>
 @property  NSString *tileSetName
 @property  unsigned long numberOfColumns
 @property  unsigned long numberOfRows
 @property  {CGSize=dd} tileSize
 @property  {CGSize=dd} mapSize
 @property  SKTileSet *tileSet
 @property  double colorBlendFactor
 @property  UIColor *color
 @property  long long blendMode
 @property  {CGPoint=dd} anchorPoint
 @property  SKShader *shader
 @property  NSDictionary *attributeValues
 @property  unsigned int lightingBitMask
 @property  BOOL enableAutomapping

  // class methods
  +[SKTileMapNode supportsSecureCoding]
  +[SKTileMapNode debugHierarchyPropertyDescriptions]
  +[SKTileMapNode debugHierarchyValueForPropertyWithName:onObject:outOptions:outError:]
  +[SKTileMapNode tileMapNodeWithTileSet:columns:rows:tileSize:]
  +[SKTileMapNode tileMapNodeWithTileSet:columns:rows:tileSize:fillWithTileGroup:]
  +[SKTileMapNode tileMapNodeWithTileSet:columns:rows:tileSize:tileGroupLayout:]

  // instance methods
  -[SKTileMapNode init]
  -[SKTileMapNode dealloc]
  -[SKTileMapNode copyWithZone:]
  -[SKTileMapNode copy]
  -[SKTileMapNode encodeWithCoder:]
  -[SKTileMapNode initWithCoder:]
  -[SKTileMapNode .cxx_destruct]
  -[SKTileMapNode color]
  -[SKTileMapNode alpha]
  -[SKTileMapNode setColor:]
  -[SKTileMapNode commonInit]
  -[SKTileMapNode numberOfColumns]
  -[SKTileMapNode setNumberOfColumns:]
  -[SKTileMapNode anchorPoint]
  -[SKTileMapNode setAnchorPoint:]
  -[SKTileMapNode setAlpha:]
  -[SKTileMapNode setNumberOfRows:]
  -[SKTileMapNode numberOfRows]
  -[SKTileMapNode blendMode]
  -[SKTileMapNode setBlendMode:]
  -[SKTileMapNode removeAllTiles]
  -[SKTileMapNode setTileSize:]
  -[SKTileMapNode tileSize]
  -[SKTileMapNode setTileSet:]
  -[SKTileMapNode tileSet]
  -[SKTileMapNode mapSize]
  -[SKTileMapNode isEqualToNode:]
  -[SKTileMapNode _makeBackingNode]
  -[SKTileMapNode _didMakeBackingNode]
  -[SKTileMapNode tileDefinitionForTileID:]
  -[SKTileMapNode setColorBlendFactor:]
  -[SKTileMapNode setColumns:andRows:]
  -[SKTileMapNode calculateSize]
  -[SKTileMapNode rebuildTileSprites]
  -[SKTileMapNode shouldUnarchiveTileSet]
  -[SKTileMapNode setTileSetName:]
  -[SKTileMapNode tileSetName]
  -[SKTileMapNode setShader:]
  -[SKTileMapNode setLightingBitMask:]
  -[SKTileMapNode colorBlendFactor]
  -[SKTileMapNode shader]
  -[SKTileMapNode lightingBitMask]
  -[SKTileMapNode enableAutomapping]
  -[SKTileMapNode setStartData:rows:tileSize:tileSet:]
  -[SKTileMapNode fillWithTileGroup:]
  -[SKTileMapNode initWithTileSet:columns:rows:tileSize:]
  -[SKTileMapNode initWithTileSet:columns:rows:tileSize:fillWithTileGroup:]
  -[SKTileMapNode initWithTileSet:columns:rows:tileSize:tileGroupLayout:]
  -[SKTileMapNode updateTileGroupsAtX:y:]
  -[SKTileMapNode updateTileDefinitionWithoutAutomappingAtX:y:]
  -[SKTileMapNode getTileIDWithTileGroup:andTileDefinition:]
  -[SKTileMapNode valueForAttributeNamed:]
  -[SKTileMapNode setValue:forAttributeNamed:]
  -[SKTileMapNode setEnableAutomapping:]
  -[SKTileMapNode setRawTiles:rows:columns:]
  -[SKTileMapNode fillWithTileDefinition:]
  -[SKTileMapNode tileDefinitionAtColumn:row:]
  -[SKTileMapNode tileGroupAtColumn:row:]
  -[SKTileMapNode setTileGroup:forColumn:row:]
  -[SKTileMapNode setTileGroup:andTileDefinition:forColumn:row:]
  -[SKTileMapNode setTileGroupWithoutUpdate:forColumn:row:]
  -[SKTileMapNode setTileGroupWithoutUpdate:tileDefinition:forColumn:row:]
  -[SKTileMapNode setTileGroup:forTileIndicies:]
  -[SKTileMapNode setTileGroup:andTileDefinition:forTileIndicies:]
  -[SKTileMapNode validateAllTiles]
  -[SKTileMapNode fillArrayWithTiles:]
  -[SKTileMapNode fillArray:withTilesFromColumn:row:forWidth:height:]
  -[SKTileMapNode setTilesFromArray:]
  -[SKTileMapNode setTilesFromArray:fromColumn:row:forWidth:height:]
  -[SKTileMapNode clearModifiedTileTracking]
  -[SKTileMapNode getTileModifiedData:outMinRowModified:outMaxColumnModified:outmaxRowModified:]
  -[SKTileMapNode tileColumnIndexFromPosition:]
  -[SKTileMapNode tileRowIndexFromPosition:]
  -[SKTileMapNode centerOfTileAtColumn:row:]
  -[SKTileMapNode createTileStampFromColumn:row:withWidth:height:addToTileSet:]
  -[SKTileMapNode applyTileStamp:inColumn:row:]
  -[SKTileMapNode forceRedraw]


SKEmitterNode : SKNode
 @property  SKTexture *particleTexture
 @property  long long particleBlendMode
 @property  UIColor *particleColor
 @property  double particleColorRedRange
 @property  double particleColorGreenRange
 @property  double particleColorBlueRange
 @property  double particleColorAlphaRange
 @property  double particleColorRedSpeed
 @property  double particleColorGreenSpeed
 @property  double particleColorBlueSpeed
 @property  double particleColorAlphaSpeed
 @property  SKKeyframeSequence *particleColorSequence
 @property  double particleColorBlendFactor
 @property  double particleColorBlendFactorRange
 @property  double particleColorBlendFactorSpeed
 @property  SKKeyframeSequence *particleColorBlendFactorSequence
 @property  {CGPoint=dd} particlePosition
 @property  {CGVector=dd} particlePositionRange
 @property  double particleSpeed
 @property  double particleSpeedRange
 @property  double emissionAngle
 @property  double emissionAngleRange
 @property  double xAcceleration
 @property  double yAcceleration
 @property  double particleBirthRate
 @property  unsigned long numParticlesToEmit
 @property  double particleLifetime
 @property  double particleLifetimeRange
 @property  double particleRotation
 @property  double particleRotationRange
 @property  double particleRotationSpeed
 @property  {CGSize=dd} particleSize
 @property  double particleScale
 @property  double particleScaleRange
 @property  double particleScaleSpeed
 @property  SKKeyframeSequence *particleScaleSequence
 @property  double particleAlpha
 @property  double particleAlphaRange
 @property  double particleAlphaSpeed
 @property  SKKeyframeSequence *particleAlphaSequence
 @property  SKAction *particleAction
 @property  unsigned int fieldBitMask
 @property  SKNode *targetNode
 @property  SKShader *shader
 @property  NSDictionary *attributeValues
 @property  double particleZPosition
 @property  unsigned long particleRenderOrder
 @property  double particleZPositionRange
 @property  double particleZPositionSpeed

  // class methods
  +[SKEmitterNode supportsSecureCoding]
  +[SKEmitterNode debugHierarchyPropertyDescriptions]
  +[SKEmitterNode debugHierarchyValueForPropertyWithName:onObject:outOptions:outError:]

  // instance methods
  -[SKEmitterNode init]
  -[SKEmitterNode dealloc]
  -[SKEmitterNode copyWithZone:]
  -[SKEmitterNode encodeWithCoder:]
  -[SKEmitterNode initWithCoder:]
  -[SKEmitterNode .cxx_destruct]
  -[SKEmitterNode commonInit]
  -[SKEmitterNode setZPosition:]
  -[SKEmitterNode setFieldBitMask:]
  -[SKEmitterNode fieldBitMask]
  -[SKEmitterNode targetNode]
  -[SKEmitterNode xAcceleration]
  -[SKEmitterNode setXAcceleration:]
  -[SKEmitterNode yAcceleration]
  -[SKEmitterNode setYAcceleration:]
  -[SKEmitterNode setParticleSize:]
  -[SKEmitterNode setParticleRotation:]
  -[SKEmitterNode particleSize]
  -[SKEmitterNode particleRotation]
  -[SKEmitterNode physicsWorld]
  -[SKEmitterNode setParticleColor:]
  -[SKEmitterNode particleColor]
  -[SKEmitterNode isEqualToNode:]
  -[SKEmitterNode _makeBackingNode]
  -[SKEmitterNode _didMakeBackingNode]
  -[SKEmitterNode setShader:]
  -[SKEmitterNode shader]
  -[SKEmitterNode valueForAttributeNamed:]
  -[SKEmitterNode setValue:forAttributeNamed:]
  -[SKEmitterNode copyParticlePropertiesToNode:]
  -[SKEmitterNode particleBirthRate]
  -[SKEmitterNode numParticlesToEmit]
  -[SKEmitterNode particleLifetime]
  -[SKEmitterNode particleLifetimeRange]
  -[SKEmitterNode particlePosition]
  -[SKEmitterNode particlePositionRange]
  -[SKEmitterNode particleZPosition]
  -[SKEmitterNode particleSpeed]
  -[SKEmitterNode particleSpeedRange]
  -[SKEmitterNode emissionAngle]
  -[SKEmitterNode emissionAngleRange]
  -[SKEmitterNode particleRotationRange]
  -[SKEmitterNode particleRotationSpeed]
  -[SKEmitterNode particleTexture]
  -[SKEmitterNode particleColorSequence]
  -[SKEmitterNode particleColorAlphaRange]
  -[SKEmitterNode particleColorBlueRange]
  -[SKEmitterNode particleColorGreenRange]
  -[SKEmitterNode particleColorRedRange]
  -[SKEmitterNode particleColorAlphaSpeed]
  -[SKEmitterNode particleColorBlueSpeed]
  -[SKEmitterNode particleColorGreenSpeed]
  -[SKEmitterNode particleColorRedSpeed]
  -[SKEmitterNode particleColorBlendFactorSequence]
  -[SKEmitterNode particleColorBlendFactor]
  -[SKEmitterNode particleColorBlendFactorRange]
  -[SKEmitterNode particleColorBlendFactorSpeed]
  -[SKEmitterNode particleBlendMode]
  -[SKEmitterNode particleAlphaSequence]
  -[SKEmitterNode particleAlpha]
  -[SKEmitterNode particleAlphaRange]
  -[SKEmitterNode particleAlphaSpeed]
  -[SKEmitterNode particleSpeedSequence]
  -[SKEmitterNode setTargetNode:]
  -[SKEmitterNode setParticleTexture:]
  -[SKEmitterNode setParticlePosition:]
  -[SKEmitterNode setParticlePositionRange:]
  -[SKEmitterNode setParticleBlendMode:]
  -[SKEmitterNode setParticleBirthRate:]
  -[SKEmitterNode setParticleAction:]
  -[SKEmitterNode setNumParticlesToEmit:]
  -[SKEmitterNode setEmissionDistance:]
  -[SKEmitterNode setEmissionDistanceRange:]
  -[SKEmitterNode setParticleAlphaSequence:]
  -[SKEmitterNode setParticleColorSequence:]
  -[SKEmitterNode setParticleColorBlendFactorSequence:]
  -[SKEmitterNode setParticleScaleSequence:]
  -[SKEmitterNode setParticleRotationSequence:]
  -[SKEmitterNode setFieldInfluenceSequence:]
  -[SKEmitterNode setParticleSpeedSequence:]
  -[SKEmitterNode particleAction]
  -[SKEmitterNode emissionDistance]
  -[SKEmitterNode emissionDistanceRange]
  -[SKEmitterNode particleScaleSequence]
  -[SKEmitterNode particleRotationSequence]
  -[SKEmitterNode fieldInfluenceSequence]
  -[SKEmitterNode setParticleColorRedRange:]
  -[SKEmitterNode setParticleColorGreenRange:]
  -[SKEmitterNode setParticleColorBlueRange:]
  -[SKEmitterNode setParticleColorAlphaRange:]
  -[SKEmitterNode setParticleColorRedSpeed:]
  -[SKEmitterNode setParticleColorGreenSpeed:]
  -[SKEmitterNode setParticleColorBlueSpeed:]
  -[SKEmitterNode setParticleColorAlphaSpeed:]
  -[SKEmitterNode setParticleColorBlendFactor:]
  -[SKEmitterNode setParticleColorBlendFactorRange:]
  -[SKEmitterNode setParticleColorBlendFactorSpeed:]
  -[SKEmitterNode setParticleLifetime:]
  -[SKEmitterNode setParticleLifetimeRange:]
  -[SKEmitterNode setParticleRotationRange:]
  -[SKEmitterNode setParticleRotationSpeed:]
  -[SKEmitterNode particleScale]
  -[SKEmitterNode setParticleScale:]
  -[SKEmitterNode particleScaleRange]
  -[SKEmitterNode setParticleScaleRange:]
  -[SKEmitterNode particleScaleSpeed]
  -[SKEmitterNode setParticleScaleSpeed:]
  -[SKEmitterNode setParticleAlpha:]
  -[SKEmitterNode setParticleAlphaRange:]
  -[SKEmitterNode setParticleAlphaSpeed:]
  -[SKEmitterNode setParticleSpeed:]
  -[SKEmitterNode setParticleSpeedRange:]
  -[SKEmitterNode setEmissionAngle:]
  -[SKEmitterNode setEmissionAngleRange:]
  -[SKEmitterNode setParticleZPosition:]
  -[SKEmitterNode densityBased]
  -[SKEmitterNode setDensityBased:]
  -[SKEmitterNode particleDensity]
  -[SKEmitterNode setParticleDensity:]
  -[SKEmitterNode wantsNewParticles]
  -[SKEmitterNode setWantsNewParticles:]
  -[SKEmitterNode usesPointSprites]
  -[SKEmitterNode setUsesPointSprites:]
  -[SKEmitterNode addSubEmitterNode:]
  -[SKEmitterNode subEmitterNode]
  -[SKEmitterNode setPhysicsWorld:]
  -[SKEmitterNode activeParticleCount]
  -[SKEmitterNode particleZPositionSpeed]
  -[SKEmitterNode setParticleZPositionSpeed:]
  -[SKEmitterNode particleZPositionRange]
  -[SKEmitterNode setParticleZPositionRange:]
  -[SKEmitterNode resetSimulation]
  -[SKEmitterNode initWithMinimumParticleCapacity:]
  -[SKEmitterNode initWithMinimumParticleCapacity:minimumPositionBufferCapacity:]
  -[SKEmitterNode advanceSimulationTime:]
  -[SKEmitterNode particleRenderOrder]
  -[SKEmitterNode setParticleRenderOrder:]


SKReachConstraints : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  double lowerAngleLimit
 @property  double upperAngleLimit

  // class methods
  +[SKReachConstraints supportsSecureCoding]

  // instance methods
  -[SKReachConstraints init]
  -[SKReachConstraints copyWithZone:]
  -[SKReachConstraints encodeWithCoder:]
  -[SKReachConstraints initWithCoder:]
  -[SKReachConstraints setLowerAngleLimit:]
  -[SKReachConstraints setUpperAngleLimit:]
  -[SKReachConstraints lowerAngleLimit]
  -[SKReachConstraints upperAngleLimit]
  -[SKReachConstraints initWithLowerAngleLimit:upperAngleLimit:]


SKFollowPath : SKAction
  // class methods
  +[SKFollowPath supportsSecureCoding]
  +[SKFollowPath followPath:duration:]
  +[SKFollowPath followPath:asOffset:orientToPath:duration:]
  +[SKFollowPath followPath:speed:]
  +[SKFollowPath followPath:asOffset:orientToPath:speed:]

  // instance methods
  -[SKFollowPath init]
  -[SKFollowPath dealloc]
  -[SKFollowPath copyWithZone:]
  -[SKFollowPath encodeWithCoder:]
  -[SKFollowPath initWithCoder:]
  -[SKFollowPath reversedAction]


SKCaptureUnarchiverDelegate : NSObject /usr/lib/libc++.1.dylib <NSKeyedUnarchiverDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKCaptureUnarchiverDelegate sharedInstance]

  // instance methods
  -[SKCaptureUnarchiverDelegate unarchiver:cannotDecodeObjectOfClassName:originalClasses:]


SKNodeVisualRepresentationUnarchiver : NSKeyedUnarchiver /System/Library/Frameworks/IOSurface.framework/IOSurface

SKNode : UIResponder /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying, NSSecureCoding, UIFocusItem>
 @property  GKEntity *entity
 @property  {?=[4]} globalBoundingVerts
 @property  {?=[4]} globalAccumulatedBoundingVerts
 @property  r^{CGPath=} outline
 @property  BOOL _showBounds
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _untransformedBounds
 @property  {CGSize=dd} _untransformedSize
 @property  {CGPoint=dd} _anchorPoint
 @property  {CGSize=dd} _size
 @property  NSMutableDictionary *_info
 @property  NSArray *_allActions
 @property  {shared_ptr<PKCAether>=^{PKCAether}^{__shared_weak_count}} _aether
 @property  GKEntity *entity
 @property  BOOL performFullCapture
 @property  ^{SKCNode=^^?@B{unordered_map<std::__1::basic_string<char> _backingNode
 @property  double xRotation
 @property  double yRotation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  {CGPoint=dd} position
 @property  double zPosition
 @property  double zRotation
 @property  double xScale
 @property  double yScale
 @property  double speed
 @property  double alpha
 @property  BOOL paused
 @property  BOOL hidden
 @property  BOOL userInteractionEnabled
 @property  long long focusBehavior
 @property  SKNode *parent
 @property  NSArray *children
 @property  NSString *name
 @property  SKScene *scene
 @property  SKPhysicsBody *physicsBody
 @property  NSMutableDictionary *userData
 @property  SKReachConstraints *reachConstraints
 @property  NSArray *constraints
 @property  NSDictionary *attributeValues
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *preferredFocusEnvironments
 @property  <UIFocusEnvironment> *parentFocusEnvironment
 @property  <UIFocusItemContainer> *focusItemContainer
 @property  UIView *preferredFocusedView
 @property  BOOL canBecomeFocused

  // class methods
  +[SKNode supportsSecureCoding]
  +[SKNode node]
  +[SKNode nodeWithFileNamed:]
  +[SKNode debugHierarchyPropertyDescriptions]
  +[SKNode debugHierarchyValueForPropertyWithName:onObject:outOptions:outError:]
  +[SKNode debugHierarchyObjectsInGroupWithID:onObject:outOptions:]
  +[SKNode nodeWithFileNamed:securelyWithClasses:andError:]
  +[SKNode debugHierarchyChildGroupingID]
  +[SKNode nodeFromCaptureData:]

  // instance methods
  -[SKNode init]
  -[SKNode dealloc]
  -[SKNode name]
  -[SKNode copyWithZone:]
  -[SKNode copy]
  -[SKNode addChild:]
  -[SKNode parent]
  -[SKNode setParent:]
  -[SKNode _info]
  -[SKNode encodeWithCoder:]
  -[SKNode initWithCoder:]
  -[SKNode objectForKeyedSubscript:]
  -[SKNode .cxx_destruct]
  -[SKNode setName:]
  -[SKNode size]
  -[SKNode constraints]
  -[SKNode _size]
  -[SKNode _update:]
  -[SKNode removeAllActions]
  -[SKNode position]
  -[SKNode isPaused]
  -[SKNode needsUpdate]
  -[SKNode isHidden]
  -[SKNode alpha]
  -[SKNode setSize:]
  -[SKNode frame]
  -[SKNode setScale:]
  -[SKNode setEntity:]
  -[SKNode entity]
  -[SKNode setPosition:]
  -[SKNode speed]
  -[SKNode setSpeed:]
  -[SKNode setPaused:]
  -[SKNode children]
  -[SKNode setHidden:]
  -[SKNode containsPoint:]
  -[SKNode removeChild:]
  -[SKNode _anchorPoint]
  -[SKNode setNeedsFocusUpdate]
  -[SKNode updateFocusIfNeeded]
  -[SKNode shouldUpdateFocusInContext:]
  -[SKNode didUpdateFocusInContext:withAnimationCoordinator:]
  -[SKNode preferredFocusEnvironments]
  -[SKNode parentFocusEnvironment]
  -[SKNode canBecomeFocused]
  -[SKNode _isEligibleForFocusInteraction]
  -[SKNode setUserInteractionEnabled:]
  -[SKNode setAlpha:]
  -[SKNode setZPosition:]
  -[SKNode scene]
  -[SKNode isUserInteractionEnabled]
  -[SKNode set_info:]
  -[SKNode containingView]
  -[SKNode zPosition]
  -[SKNode outline]
  -[SKNode userData]
  -[SKNode setUserData:]
  -[SKNode _descendants]
  -[SKNode setConstraints:]
  -[SKNode actionForKey:]
  -[SKNode hasActions]
  -[SKNode attributeValues]
  -[SKNode hasChildren]
  -[SKNode setAttributeValues:]
  -[SKNode insertChild:atIndex:]
  -[SKNode removeFromParent]
  -[SKNode intersectsNode:]
  -[SKNode setPhysicsBody:]
  -[SKNode physicsBody]
  -[SKNode _untransformedBounds]
  -[SKNode nodeAtPoint:recursive:]
  -[SKNode runAction:]
  -[SKNode _aether]
  -[SKNode physicsField]
  -[SKNode focusBehavior]
  -[SKNode setFocusBehavior:]
  -[SKNode _isEffectivelyHidden]
  -[SKNode _isEligibleForFocus]
  -[SKNode removeActionForKey:]
  -[SKNode childNodeWithName:]
  -[SKNode _subnodeFromIndexPath:]
  -[SKNode _convertFrameToView:]
  -[SKNode _allActions]
  -[SKNode isEqualToNode:]
  -[SKNode _backingNode]
  -[SKNode _makeBackingNode]
  -[SKNode _didMakeBackingNode]
  -[SKNode removeChildrenInArray:]
  -[SKNode calculateAccumulatedFrame]
  -[SKNode _removeChild:]
  -[SKNode _removeAction:]
  -[SKNode enumerateChildNodesWithName:usingBlock:]
  -[SKNode convertPoint:fromNode:]
  -[SKNode zRotation]
  -[SKNode convertPoint:toNode:]
  -[SKNode setZRotation:]
  -[SKNode xScale]
  -[SKNode yScale]
  -[SKNode setXScale:]
  -[SKNode setYScale:]
  -[SKNode _descendantsWithPredicate:]
  -[SKNode createDebugHierarchyVisualRepresentation]
  -[SKNode convertPointFromParent:]
  -[SKNode convertPointToParent:]
  -[SKNode set_anchorPoint:]
  -[SKNode setXRotation:]
  -[SKNode setYRotation:]
  -[SKNode xRotation]
  -[SKNode yRotation]
  -[SKNode reachConstraints]
  -[SKNode runAction:withKey:]
  -[SKNode performFullCapture]
  -[SKNode _copyImageData]
  -[SKNode setPerformFullCapture:]
  -[SKNode archiveToFile:]
  -[SKNode debugPrint]
  -[SKNode valueForAttributeNamed:]
  -[SKNode setValue:forAttributeNamed:]
  -[SKNode _initAccessibility]
  -[SKNode swiftClassFromString:moduleName:]
  -[SKNode setReachConstraints:]
  -[SKNode _runAction:]
  -[SKNode addChild:withKey:]
  -[SKNode _enumerateChildNodesWithName:usingBlock:stopPointer:]
  -[SKNode _processSearchTokens:visited:usingBlock:stopPointer:]
  -[SKNode _descendantsToMutableArray:]
  -[SKNode _descendantsWithPredicate:toMutableArray:]
  -[SKNode intersectsNode:useAlphaTest:]
  -[SKNode _untransformedSize]
  -[SKNode moveToParent:]
  -[SKNode inParentHierarchy:]
  -[SKNode removeChildAtIndex:]
  -[SKNode removeAllChildren]
  -[SKNode _performCleanup]
  -[SKNode _scaleFactorChangedFrom:to:]
  -[SKNode _flippedChangedFrom:to:]
  -[SKNode runAction:completion:]
  -[SKNode containsPoint:withRadius:]
  -[SKNode nodeAtPoint:]
  -[SKNode nodesAtPoint:]
  -[SKNode hasUniformAlphaAndIsVisible]
  -[SKNode globalBoundingVerts]
  -[SKNode globalAccumulatedBoundingVerts]
  -[SKNode _debugPrint:mask:]
  -[SKNode _debugPrint:]
  -[SKNode childrenInRect:]
  -[SKNode createFullCaptureData]
  -[SKNode _getWorldTransform:positionY:rotation:xScale:yScale:]
  -[SKNode _getBasePhysicsScale:yScale:]
  -[SKNode updatePhysicsPositionAndScaleFromSprite]
  -[SKNode set_showBounds:]
  -[SKNode _showBounds]
  -[SKNode allIntersectionsWithNode:useAlphaTest:]
  -[SKNode _pathFromPhysicsBodyToPoints:outSize:]


SKNodeCustomClassUnarchiver : NSObject /usr/lib/libc++.1.dylib <NSKeyedUnarchiverDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKNodeCustomClassUnarchiver init]
  -[SKNodeCustomClassUnarchiver .cxx_destruct]
  -[SKNodeCustomClassUnarchiver unarchiver:cannotDecodeObjectOfClassName:originalClasses:]
  -[SKNodeCustomClassUnarchiver _currentAppModuleName]
  -[SKNodeCustomClassUnarchiver _mangledSwiftClassName:moduleName:]
  -[SKNodeCustomClassUnarchiver _findValidClassName:]


SKNodeVisualRepresentationArchiver : NSKeyedArchiver /System/Library/Frameworks/IOSurface.framework/IOSurface
  // instance methods
  -[SKNodeVisualRepresentationArchiver encodeObject:forKey:]


SKUniformInfo : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long seed
 @property  unsigned long textureTarget
 @property  SKUniform *uniform

  // instance methods
  -[SKUniformInfo init]
  -[SKUniformInfo .cxx_destruct]
  -[SKUniformInfo seed]
  -[SKUniformInfo setSeed:]
  -[SKUniformInfo textureTarget]
  -[SKUniformInfo setTextureTarget:]
  -[SKUniformInfo uniform]
  -[SKUniformInfo setUniform:]


SKShader : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSArray *_textureUniforms
 @property  ^{map<std::__1::basic_string<char> _attributeBuffers
 @property  {shared_ptr<jet_program>=^{jet_program}^{__shared_weak_count}} _backingProgram
 @property  {shared_ptr<jet_program>=^{jet_program}^{__shared_weak_count}} _backingProgramWithTransform
 @property  {shared_ptr<jet_command_buffer>=^{jet_command_buffer}^{__shared_weak_count}} _commands
 @property  BOOL performFullCapture
 @property  NSString *source
 @property  NSArray *uniforms
 @property  NSArray *attributes

  // class methods
  +[SKShader supportsSecureCoding]
  +[SKShader shader]
  +[SKShader shaderWithFileNamed:]
  +[SKShader shaderWithSource:uniforms:]
  +[SKShader shaderWithSource:]
  +[SKShader precompiledMetalShaderWithFile:uniforms:]

  // instance methods
  -[SKShader init]
  -[SKShader copyWithZone:]
  -[SKShader isValid]
  -[SKShader encodeWithCoder:]
  -[SKShader initWithCoder:]
  -[SKShader setSource:]
  -[SKShader .cxx_destruct]
  -[SKShader source]
  -[SKShader attributes]
  -[SKShader setAttributes:]
  -[SKShader .cxx_construct]
  -[SKShader initWithSource:]
  -[SKShader _commands]
  -[SKShader _attributeBuffers]
  -[SKShader _usesTimeUniform]
  -[SKShader performFullCapture]
  -[SKShader setPerformFullCapture:]
  -[SKShader _removeTargetNode:]
  -[SKShader _addTargetNode:]
  -[SKShader isEqualToShader:]
  -[SKShader initWithSource:uniforms:]
  -[SKShader setUniforms:]
  -[SKShader _getLegacyUniformData]
  -[SKShader _getMetalVertexOutDefinition]
  -[SKShader _fullVertexSourceWithImplementation:]
  -[SKShader generateVertexAttributeDeclares:statements:]
  -[SKShader generateFragmentAttributeDeclares:]
  -[SKShader fragmentPrelude]
  -[SKShader _fullMetalVertexSourceWithImplementation:]
  -[SKShader fragmentPreludeMetal]
  -[SKShader _generateMetalSource]
  -[SKShader _backingProgram]
  -[SKShader _makeBackingProgramWithImplementation:]
  -[SKShader fullMetalVertexSource]
  -[SKShader fullMetalVertexWithTransformSource]
  -[SKShader fullMetalFragmentSource]
  -[SKShader fullVertexSource]
  -[SKShader fullVertexWithTransformSource]
  -[SKShader fullFragmentSource]
  -[SKShader _commandsForBatchOffset:count:]
  -[SKShader _getMetalFragmentFunctionName]
  -[SKShader uniforms]
  -[SKShader addUniform:]
  -[SKShader uniformNamed:]
  -[SKShader removeUniformNamed:]
  -[SKShader _textureUniforms]
  -[SKShader _backingProgramIsDirty]
  -[SKShader _backingProgramWithTransform]
  -[SKShader _getShaderCompilationLog]
  -[SKShader _getMetalVertexShaderSource:]
  -[SKShader _getMetalFragmentShaderSource]
  -[SKShader _usesPathLengthUniform]
  -[SKShader _setUniformsDirty]


SKSpriteNode : SKNode <SKWarpable>
 @property  BOOL shouldRepeatTexture
 @property  {CGSize=dd} repeatTextureSize
 @property  SKTexture *texture
 @property  SKTexture *normalTexture
 @property  unsigned int lightingBitMask
 @property  unsigned int shadowCastBitMask
 @property  unsigned int shadowedBitMask
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} centerRect
 @property  double colorBlendFactor
 @property  UIColor *color
 @property  long long blendMode
 @property  {CGPoint=dd} anchorPoint
 @property  {CGSize=dd} size
 @property  SKShader *shader
 @property  NSDictionary *attributeValues
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SKWarpGeometry *warpGeometry
 @property  long long subdivisionLevels

  // class methods
  +[SKSpriteNode supportsSecureCoding]
  +[SKSpriteNode debugHierarchyPropertyDescriptions]
  +[SKSpriteNode debugHierarchyValueForPropertyWithName:onObject:outOptions:outError:]
  +[SKSpriteNode spriteNodeWithTexture:]
  +[SKSpriteNode spriteNodeWithImageNamed:]
  +[SKSpriteNode spriteNodeWithImageNamed:normalMapped:]
  +[SKSpriteNode spriteNodeWithTexture:size:]
  +[SKSpriteNode spriteNodeWithTexture:normalMap:]
  +[SKSpriteNode spriteNodeWithColor:size:]

  // instance methods
  -[SKSpriteNode init]
  -[SKSpriteNode copyWithZone:]
  -[SKSpriteNode copy]
  -[SKSpriteNode encodeWithCoder:]
  -[SKSpriteNode initWithCoder:]
  -[SKSpriteNode .cxx_destruct]
  -[SKSpriteNode size]
  -[SKSpriteNode color]
  -[SKSpriteNode setBounds:]
  -[SKSpriteNode setSize:]
  -[SKSpriteNode setColor:]
  -[SKSpriteNode setTexture:]
  -[SKSpriteNode texture]
  -[SKSpriteNode anchorPoint]
  -[SKSpriteNode setAnchorPoint:]
  -[SKSpriteNode blendMode]
  -[SKSpriteNode setBlendMode:]
  -[SKSpriteNode isEqualToNode:]
  -[SKSpriteNode setNormalTexture:]
  -[SKSpriteNode _makeBackingNode]
  -[SKSpriteNode _didMakeBackingNode]
  -[SKSpriteNode setColorBlendFactor:]
  -[SKSpriteNode setWarpGeometry:]
  -[SKSpriteNode warpGeometry]
  -[SKSpriteNode initWithImageNamed:]
  -[SKSpriteNode setShader:]
  -[SKSpriteNode setLightingBitMask:]
  -[SKSpriteNode colorBlendFactor]
  -[SKSpriteNode shader]
  -[SKSpriteNode lightingBitMask]
  -[SKSpriteNode valueForAttributeNamed:]
  -[SKSpriteNode setValue:forAttributeNamed:]
  -[SKSpriteNode setShadowCastBitMask:]
  -[SKSpriteNode setShadowedBitMask:]
  -[SKSpriteNode initWithTexture:color:size:]
  -[SKSpriteNode setCenterRect:]
  -[SKSpriteNode setSubdivisionLevels:]
  -[SKSpriteNode initWithTexture:]
  -[SKSpriteNode normalTexture]
  -[SKSpriteNode shadowCastBitMask]
  -[SKSpriteNode shadowedBitMask]
  -[SKSpriteNode centerRect]
  -[SKSpriteNode subdivisionLevels]
  -[SKSpriteNode initWithColor:size:]
  -[SKSpriteNode scaleToSize:]
  -[SKSpriteNode repeatTexture]
  -[SKSpriteNode setRepeatTexture:]
  -[SKSpriteNode repeatTextureSize]
  -[SKSpriteNode setRepeatTextureSize:]
  -[SKSpriteNode _pathFromTextureToPoints:outSize:accuracy:]
  -[SKSpriteNode shouldRepeatTexture]
  -[SKSpriteNode setShouldRepeatTexture:]


SKShapeNode : SKNode
 @property  double renderQualityRatio
 @property  r^{CGPath=} path
 @property  UIColor *strokeColor
 @property  UIColor *fillColor
 @property  long long blendMode
 @property  BOOL antialiased
 @property  double lineWidth
 @property  double glowWidth
 @property  int lineCap
 @property  int lineJoin
 @property  double miterLimit
 @property  double lineLength
 @property  SKTexture *fillTexture
 @property  SKShader *fillShader
 @property  SKTexture *strokeTexture
 @property  SKShader *strokeShader
 @property  NSDictionary *attributeValues

  // class methods
  +[SKShapeNode supportsSecureCoding]
  +[SKShapeNode debugHierarchyPropertyDescriptions]
  +[SKShapeNode debugHierarchyValueForPropertyWithName:onObject:outOptions:outError:]
  +[SKShapeNode shapeNodeWithPath:]
  +[SKShapeNode shapeNodeWithEllipseInRect:]
  +[SKShapeNode shapeNodeWithEllipseOfSize:]
  +[SKShapeNode shapeNodeWithRect:]
  +[SKShapeNode shapeNodeWithRect:cornerRadius:]
  +[SKShapeNode shapeNodeWithPath:centered:]
  +[SKShapeNode shapeNodeWithCircleOfRadius:]
  +[SKShapeNode shapeNodeWithRectOfSize:]
  +[SKShapeNode shapeNodeWithRectOfSize:cornerRadius:]
  +[SKShapeNode shapeNodeWithTriangleA:B:C:]
  +[SKShapeNode shapeNodeWithPoints:count:]
  +[SKShapeNode shapeNodeWithSplinePoints:count:]

  // instance methods
  -[SKShapeNode init]
  -[SKShapeNode copyWithZone:]
  -[SKShapeNode encodeWithCoder:]
  -[SKShapeNode initWithCoder:]
  -[SKShapeNode path]
  -[SKShapeNode setPath:]
  -[SKShapeNode setLineWidth:]
  -[SKShapeNode lineWidth]
  -[SKShapeNode containsPoint:]
  -[SKShapeNode fillColor]
  -[SKShapeNode setFillColor:]
  -[SKShapeNode setStrokeColor:]
  -[SKShapeNode miterLimit]
  -[SKShapeNode setMiterLimit:]
  -[SKShapeNode strokeColor]
  -[SKShapeNode setLineCap:]
  -[SKShapeNode setLineJoin:]
  -[SKShapeNode blendMode]
  -[SKShapeNode setBlendMode:]
  -[SKShapeNode lineJoin]
  -[SKShapeNode lineCap]
  -[SKShapeNode _initialize]
  -[SKShapeNode isEqualToNode:]
  -[SKShapeNode _makeBackingNode]
  -[SKShapeNode _didMakeBackingNode]
  -[SKShapeNode valueForAttributeNamed:]
  -[SKShapeNode setValue:forAttributeNamed:]
  -[SKShapeNode glowWidth]
  -[SKShapeNode isAntialiased]
  -[SKShapeNode setAntialiased:]
  -[SKShapeNode setGlowWidth:]
  -[SKShapeNode strokeTexture]
  -[SKShapeNode fillTexture]
  -[SKShapeNode setStrokeTexture:]
  -[SKShapeNode setFillTexture:]
  -[SKShapeNode renderQualityRatio]
  -[SKShapeNode setRenderQualityRatio:]
  -[SKShapeNode fillShader]
  -[SKShapeNode setFillShader:]
  -[SKShapeNode strokeShader]
  -[SKShapeNode setStrokeShader:]
  -[SKShapeNode lineLength]


SKEffectNode : SKNode <SKWarpable>
 @property  CIFilter *filter
 @property  BOOL shouldCenterFilter
 @property  BOOL shouldEnableEffects
 @property  BOOL shouldRasterize
 @property  long long blendMode
 @property  SKShader *shader
 @property  NSDictionary *attributeValues
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SKWarpGeometry *warpGeometry
 @property  long long subdivisionLevels

  // class methods
  +[SKEffectNode supportsSecureCoding]
  +[SKEffectNode debugHierarchyPropertyDescriptions]
  +[SKEffectNode debugHierarchyValueForPropertyWithName:onObject:outOptions:outError:]

  // instance methods
  -[SKEffectNode init]
  -[SKEffectNode encodeWithCoder:]
  -[SKEffectNode initWithCoder:]
  -[SKEffectNode setFilter:]
  -[SKEffectNode filter]
  -[SKEffectNode setShouldRasterize:]
  -[SKEffectNode shouldRasterize]
  -[SKEffectNode blendMode]
  -[SKEffectNode setBlendMode:]
  -[SKEffectNode isEqualToNode:]
  -[SKEffectNode _makeBackingNode]
  -[SKEffectNode _didMakeBackingNode]
  -[SKEffectNode setShouldEnableEffects:]
  -[SKEffectNode setWarpGeometry:]
  -[SKEffectNode warpGeometry]
  -[SKEffectNode setShader:]
  -[SKEffectNode shader]
  -[SKEffectNode valueForAttributeNamed:]
  -[SKEffectNode setValue:forAttributeNamed:]
  -[SKEffectNode _scaleFactorChangedFrom:to:]
  -[SKEffectNode _flippedChangedFrom:to:]
  -[SKEffectNode setSubdivisionLevels:]
  -[SKEffectNode subdivisionLevels]
  -[SKEffectNode shouldEnableEffects]
  -[SKEffectNode shouldCenterFilter]
  -[SKEffectNode setShouldCenterFilter:]


SKLabelNode : SKNode
 @property  long long verticalAlignmentMode
 @property  long long horizontalAlignmentMode
 @property  long long numberOfLines
 @property  long long lineBreakMode
 @property  double preferredMaxLayoutWidth
 @property  NSString *fontName
 @property  NSString *text
 @property  NSAttributedString *attributedText
 @property  double fontSize
 @property  UIColor *fontColor
 @property  double colorBlendFactor
 @property  UIColor *color
 @property  long long blendMode

  // class methods
  +[SKLabelNode supportsSecureCoding]
  +[SKLabelNode debugHierarchyPropertyDescriptions]
  +[SKLabelNode debugHierarchyValueForPropertyWithName:onObject:outOptions:outError:]
  +[SKLabelNode labelNodeWithFontNamed:]
  +[SKLabelNode labelNodeWithText:]
  +[SKLabelNode labelNodeWithAttributedText:]
  +[SKLabelNode _labelNodeWithFontNamed:]
  +[SKLabelNode _labelNodeWithFontTexture:fontDataString:]

  // instance methods
  -[SKLabelNode init]
  -[SKLabelNode copyWithZone:]
  -[SKLabelNode copy]
  -[SKLabelNode encodeWithCoder:]
  -[SKLabelNode initWithCoder:]
  -[SKLabelNode lineBreakMode]
  -[SKLabelNode setLineBreakMode:]
  -[SKLabelNode color]
  -[SKLabelNode setColor:]
  -[SKLabelNode frame]
  -[SKLabelNode text]
  -[SKLabelNode setText:]
  -[SKLabelNode fontName]
  -[SKLabelNode setFontName:]
  -[SKLabelNode fontSize]
  -[SKLabelNode setFontSize:]
  -[SKLabelNode attributedString]
  -[SKLabelNode setFont:]
  -[SKLabelNode setNumberOfLines:]
  -[SKLabelNode numberOfLines]
  -[SKLabelNode setAttributedText:]
  -[SKLabelNode attributedText]
  -[SKLabelNode setPreferredMaxLayoutWidth:]
  -[SKLabelNode preferredMaxLayoutWidth]
  -[SKLabelNode blendMode]
  -[SKLabelNode setBlendMode:]
  -[SKLabelNode setFontColor:]
  -[SKLabelNode fontColor]
  -[SKLabelNode _initialize]
  -[SKLabelNode isEqualToNode:]
  -[SKLabelNode _makeBackingNode]
  -[SKLabelNode _didMakeBackingNode]
  -[SKLabelNode setColorBlendFactor:]
  -[SKLabelNode colorBlendFactor]
  -[SKLabelNode _getTextSprites]
  -[SKLabelNode setUIFont:]
  -[SKLabelNode horizontalAlignmentMode]
  -[SKLabelNode verticalAlignmentMode]
  -[SKLabelNode setHorizontalAlignmentMode:]
  -[SKLabelNode setVerticalAlignmentMode:]
  -[SKLabelNode initWithFontNamed:]


SKCustomAction : SKAction
  // class methods
  +[SKCustomAction supportsSecureCoding]
  +[SKCustomAction customActionWithDuration:actionBlock:]

  // instance methods
  -[SKCustomAction init]
  -[SKCustomAction copyWithZone:]
  -[SKCustomAction encodeWithCoder:]
  -[SKCustomAction initWithCoder:]
  -[SKCustomAction reversedAction]


SKDisplayLink : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL paused
 @property  long long preferredFramesPerSecond
 @property  CADisplay *display

  // class methods
  +[SKDisplayLink displayLinkWithDisplay:handler:client:]

  // instance methods
  -[SKDisplayLink init]
  -[SKDisplayLink dealloc]
  -[SKDisplayLink invalidate]
  -[SKDisplayLink .cxx_destruct]
  -[SKDisplayLink isPaused]
  -[SKDisplayLink setPaused:]
  -[SKDisplayLink _setup]
  -[SKDisplayLink setPreferredFramesPerSecond:]
  -[SKDisplayLink setDisplay:]
  -[SKDisplayLink display]
  -[SKDisplayLink preferredFramesPerSecond]
  -[SKDisplayLink _teardown]
  -[SKDisplayLink _caDisplayLinkCallback]
  -[SKDisplayLink initWithDisplay:handler:client:]
  -[SKDisplayLink _callbackForNextFrame:]
  -[SKDisplayLink _callbackAlreadyInProgress]
  -[SKDisplayLink _setCallbackAlreadyInProgress:]


SKPlaySound : SKAction
  // class methods
  +[SKPlaySound supportsSecureCoding]
  +[SKPlaySound playSoundFileNamed:atPosition:waitForCompletion:]
  +[SKPlaySound _audioURLWithName:bundle:]

  // instance methods
  -[SKPlaySound init]
  -[SKPlaySound copyWithZone:]
  -[SKPlaySound encodeWithCoder:]
  -[SKPlaySound initWithCoder:]
  -[SKPlaySound .cxx_destruct]
  -[SKPlaySound reversedAction]


SKTransition : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  BOOL pausesIncomingScene
 @property  BOOL pausesOutgoingScene

  // class methods
  +[SKTransition revealDownWithDuration:]
  +[SKTransition revealUpWithDuration:]
  +[SKTransition revealLeftWithDuration:]
  +[SKTransition revealRightWithDuration:]
  +[SKTransition moveInDownWithDuration:]
  +[SKTransition moveInUpWithDuration:]
  +[SKTransition moveInLeftWithDuration:]
  +[SKTransition moveInRightWithDuration:]
  +[SKTransition pushDownWithDuration:]
  +[SKTransition pushUpWithDuration:]
  +[SKTransition pushLeftWithDuration:]
  +[SKTransition pushRightWithDuration:]
  +[SKTransition revealWithDirection:duration:]
  +[SKTransition moveInWithDirection:duration:]
  +[SKTransition pushWithDirection:duration:]
  +[SKTransition fadeWithDuration:]
  +[SKTransition fadeWithColor:duration:]
  +[SKTransition crossFadeWithDuration:]
  +[SKTransition flipHorizontalWithDuration:]
  +[SKTransition flipVerticalWithDuration:]
  +[SKTransition doorsOpenHorizontalWithDuration:]
  +[SKTransition doorsOpenVerticalWithDuration:]
  +[SKTransition doorsCloseHorizontalWithDuration:]
  +[SKTransition doorsCloseVerticalWithDuration:]
  +[SKTransition doorwayWithDuration:]
  +[SKTransition transitionWithCIFilter:duration:]

  // instance methods
  -[SKTransition init]
  -[SKTransition dealloc]
  -[SKTransition copyWithZone:]
  -[SKTransition _duration]
  -[SKTransition _filter]
  -[SKTransition pausesIncomingScene]
  -[SKTransition pausesOutgoingScene]
  -[SKTransition _backingNode]
  -[SKTransition setPausesIncomingScene:]
  -[SKTransition setPausesOutgoingScene:]


SKVideoNode : SKNode
 @property  AVPlayer *_player
 @property  {CGSize=dd} size
 @property  {CGPoint=dd} anchorPoint

  // class methods
  +[SKVideoNode supportsSecureCoding]
  +[SKVideoNode debugHierarchyPropertyDescriptions]
  +[SKVideoNode debugHierarchyValueForPropertyWithName:onObject:outOptions:outError:]
  +[SKVideoNode videoNodeWithFileNamed:]
  +[SKVideoNode videoNodeWithURL:]
  +[SKVideoNode videoNodeWithVideoFileNamed:]
  +[SKVideoNode videoNodeWithVideoURL:]
  +[SKVideoNode videoNodeWithAVPlayer:]

  // instance methods
  -[SKVideoNode init]
  -[SKVideoNode dealloc]
  -[SKVideoNode encodeWithCoder:]
  -[SKVideoNode initWithCoder:]
  -[SKVideoNode initWithURL:]
  -[SKVideoNode .cxx_destruct]
  -[SKVideoNode size]
  -[SKVideoNode pause]
  -[SKVideoNode observeValueForKeyPath:ofObject:change:context:]
  -[SKVideoNode setSize:]
  -[SKVideoNode commonInit]
  -[SKVideoNode setPaused:]
  -[SKVideoNode anchorPoint]
  -[SKVideoNode setAnchorPoint:]
  -[SKVideoNode play]
  -[SKVideoNode _player]
  -[SKVideoNode initWithVideoURL:]
  -[SKVideoNode initWithFileNamed:]
  -[SKVideoNode isEqualToNode:]
  -[SKVideoNode _makeBackingNode]
  -[SKVideoNode _didMakeBackingNode]
  -[SKVideoNode initWithAVPlayer:]
  -[SKVideoNode set_player:]
  -[SKVideoNode initWithVideoFileNamed:]


SKPhysicsGrid : NSObject /usr/lib/libc++.1.dylib
 @property  float width
 @property  float height

  // class methods
  +[SKPhysicsGrid vectorGridFromTexture:accuracy:]
  +[SKPhysicsGrid gridFromTexture:alphaThreshold:accuracy:]
  +[SKPhysicsGrid gridFromOccupancyArray:width:height:]

  // instance methods
  -[SKPhysicsGrid width]
  -[SKPhysicsGrid height]
  -[SKPhysicsGrid spritesFromGrid:gridSize:zPosition:edgeColor:interiorColor:spriteSize:physicsBody:]
  -[SKPhysicsGrid spritesFromGrid:xDivisions:zPosition:spriteSize:texture:physicsBody:]


SKKeyedUnarchiver : NSKeyedUnarchiver /System/Library/Frameworks/IOSurface.framework/IOSurface
 @property  NSArray *searchPaths

  // instance methods
  -[SKKeyedUnarchiver .cxx_destruct]
  -[SKKeyedUnarchiver searchPaths]
  -[SKKeyedUnarchiver setSearchPaths:]


SKCropNode : SKNode
 @property  BOOL prefersAlphaMask
 @property  BOOL invertMask
 @property  SKNode *maskNode

  // class methods
  +[SKCropNode supportsSecureCoding]

  // instance methods
  -[SKCropNode copyWithZone:]
  -[SKCropNode encodeWithCoder:]
  -[SKCropNode initWithCoder:]
  -[SKCropNode .cxx_destruct]
  -[SKCropNode isEqualToNode:]
  -[SKCropNode _makeBackingNode]
  -[SKCropNode _didMakeBackingNode]
  -[SKCropNode setMaskNode:]
  -[SKCropNode setPrefersAlphaMask:]
  -[SKCropNode setInvertMask:]
  -[SKCropNode prefersAlphaMask]
  -[SKCropNode invertMask]
  -[SKCropNode maskNode]
  -[SKCropNode useAlphaMask:]


SKUniformShaderReference : NSObject /usr/lib/libc++.1.dylib
 @property  SKShader *targetShader

  // instance methods
  -[SKUniformShaderReference .cxx_destruct]
  -[SKUniformShaderReference targetShader]
  -[SKUniformShaderReference setTargetShader:]


SKUniform : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  unsigned long _seed
 @property  NSString *name
 @property  long long uniformType
 @property  SKTexture *textureValue
 @property  float floatValue
 @property  void vectorFloat2Value
 @property  void vectorFloat3Value
 @property  void vectorFloat4Value
 @property  {?=[2]} matrixFloat2x2Value
 @property  {?=[3]} matrixFloat3x3Value
 @property  {?=[4]} matrixFloat4x4Value
 @property  (_GLKVector2={?=ff}{?=ff}[2f]) floatVector2Value
 @property  (_GLKVector3={?=fff}{?=fff}{?=fff}[3f]) floatVector3Value
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) floatVector4Value
 @property  (_GLKMatrix2={?=ffff}[2[2f]][4f]) floatMatrix2Value
 @property  (_GLKMatrix3={?=fffffffff}[9f]) floatMatrix3Value
 @property  (_GLKMatrix4={?=ffffffffffffffff}[16f]) floatMatrix4Value

  // class methods
  +[SKUniform supportsSecureCoding]
  +[SKUniform uniformWithName:vectorFloat2:]
  +[SKUniform uniformWithName:]
  +[SKUniform uniformWithName:float:]
  +[SKUniform uniformWithName:vectorFloat3:]
  +[SKUniform uniformWithName:vectorFloat4:]
  +[SKUniform uniformWithName:matrixFloat2x2:]
  +[SKUniform uniformWithName:matrixFloat3x3:]
  +[SKUniform uniformWithName:matrixFloat4x4:]
  +[SKUniform uniformWithName:floatVector2:]
  +[SKUniform uniformWithName:floatVector3:]
  +[SKUniform uniformWithName:floatVector4:]
  +[SKUniform uniformWithName:floatMatrix2:]
  +[SKUniform uniformWithName:floatMatrix3:]
  +[SKUniform uniformWithName:floatMatrix4:]
  +[SKUniform uniformWithName:texture:]

  // instance methods
  -[SKUniform floatValue]
  -[SKUniform name]
  -[SKUniform copyWithZone:]
  -[SKUniform encodeWithCoder:]
  -[SKUniform initWithCoder:]
  -[SKUniform .cxx_destruct]
  -[SKUniform initWithName:]
  -[SKUniform _seed]
  -[SKUniform setFloatValue:]
  -[SKUniform setVectorFloat2Value:]
  -[SKUniform setVectorFloat3Value:]
  -[SKUniform setVectorFloat4Value:]
  -[SKUniform vectorFloat2Value]
  -[SKUniform vectorFloat3Value]
  -[SKUniform vectorFloat4Value]
  -[SKUniform uniformType]
  -[SKUniform textureValue]
  -[SKUniform _addTargetShader:]
  -[SKUniform _removeTargetShader:]
  -[SKUniform matrixFloat2x2Value]
  -[SKUniform matrixFloat3x3Value]
  -[SKUniform matrixFloat4x4Value]
  -[SKUniform isEqualToUniform:]
  -[SKUniform set_seed:]
  -[SKUniform setTextureValue:]
  -[SKUniform setMatrixFloat2x2Value:]
  -[SKUniform setMatrixFloat3x3Value:]
  -[SKUniform setMatrixFloat4x4Value:]
  -[SKUniform setFloatVector2Value:]
  -[SKUniform setFloatVector3Value:]
  -[SKUniform setFloatVector4Value:]
  -[SKUniform setFloatMatrix2Value:]
  -[SKUniform setFloatMatrix3Value:]
  -[SKUniform setFloatMatrix4Value:]
  -[SKUniform initWithName:float:]
  -[SKUniform initWithName:vectorFloat2:]
  -[SKUniform initWithName:vectorFloat3:]
  -[SKUniform initWithName:vectorFloat4:]
  -[SKUniform initWithName:matrixFloat2x2:]
  -[SKUniform initWithName:matrixFloat3x3:]
  -[SKUniform initWithName:matrixFloat4x4:]
  -[SKUniform initWithName:floatVector2:]
  -[SKUniform initWithName:floatVector3:]
  -[SKUniform initWithName:floatVector4:]
  -[SKUniform initWithName:floatMatrix2:]
  -[SKUniform initWithName:floatMatrix3:]
  -[SKUniform initWithName:floatMatrix4:]
  -[SKUniform initWithName:texture:]
  -[SKUniform _propagateChange]
  -[SKUniform floatVector2Value]
  -[SKUniform floatVector3Value]
  -[SKUniform floatVector4Value]
  -[SKUniform floatMatrix2Value]
  -[SKUniform floatMatrix3Value]
  -[SKUniform floatMatrix4Value]


SKPerformSelector : SKAction
  // class methods
  +[SKPerformSelector supportsSecureCoding]
  +[SKPerformSelector perfromSelector:onTarget:]

  // instance methods
  -[SKPerformSelector init]
  -[SKPerformSelector dealloc]
  -[SKPerformSelector copyWithZone:]
  -[SKPerformSelector encodeWithCoder:]
  -[SKPerformSelector initWithCoder:]
  -[SKPerformSelector .cxx_destruct]
  -[SKPerformSelector reversedAction]
  -[SKPerformSelector updateWithTarget:forTime:]


SKJavaScriptAction : SKAction
  // class methods
  +[SKJavaScriptAction javaScriptActionWithDuration:script:]


SKTextureAtlasPacker : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SKTextureAtlasPacker copyProcessedImageSource:]

  // instance methods
  -[SKTextureAtlasPacker generateTextureAtlasImages:outputDictionary:forcePOT:]
  -[SKTextureAtlasPacker calcNonAlphaArea:]
  -[SKTextureAtlasPacker copyRotateCGImage:direction:]
  -[SKTextureAtlasPacker isFullyOpaque:]
  -[SKTextureAtlasPacker partitionTextureFilesByResolution:]
  -[SKTextureAtlasPacker generateMetaData]
  -[SKTextureAtlasPacker processPackedTextureAtlas:suffix:packer:sortedTrimArray:sortedTextureArray:]
  -[SKTextureAtlasPacker getTextureFileList:modDate:]


SKSoundBuffer : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned int bufferId
 @property  double duration

  // class methods
  +[SKSoundBuffer bufferWithFileNamed:]

  // instance methods
  -[SKSoundBuffer init]
  -[SKSoundBuffer dealloc]
  -[SKSoundBuffer .cxx_destruct]
  -[SKSoundBuffer duration]
  -[SKSoundBuffer bufferId]


SKSoundContext : NSObject /usr/lib/libc++.1.dylib
 @property  double gain
 @property  {CGPoint=dd} listenerPosition
 @property  BOOL suspended

  // class methods
  +[SKSoundContext context]
  +[SKSoundContext currentContext]

  // instance methods
  -[SKSoundContext init]
  -[SKSoundContext dealloc]
  -[SKSoundContext setSuspended:]
  -[SKSoundContext suspended]
  -[SKSoundContext setGain:]
  -[SKSoundContext gain]
  -[SKSoundContext setListenerPosition:]
  -[SKSoundContext listenerPosition]
  -[SKSoundContext makeCurrentContext]


SKFrameCaptureDelegate : NSObject /usr/lib/libc++.1.dylib <NSKeyedArchiverDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKFrameCaptureDelegate sharedInstance]

  // instance methods
  -[SKFrameCaptureDelegate archiver:didEncodeObject:]
  -[SKFrameCaptureDelegate archiver:willEncodeObject:]


SKSoundSource : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL shouldLoop
 @property  double gain
 @property  {CGPoint=dd} position
 @property  BOOL isPlaying
 @property  int completedBufferCount
 @property  int queuedBufferCount

  // class methods
  +[SKSoundSource source]
  +[SKSoundSource sourceWithBuffer:]

  // instance methods
  -[SKSoundSource init]
  -[SKSoundSource dealloc]
  -[SKSoundSource .cxx_destruct]
  -[SKSoundSource pause]
  -[SKSoundSource stop]
  -[SKSoundSource position]
  -[SKSoundSource setPosition:]
  -[SKSoundSource play]
  -[SKSoundSource isPlaying]
  -[SKSoundSource setGain:]
  -[SKSoundSource gain]
  -[SKSoundSource queueBuffer:]
  -[SKSoundSource completedBufferCount]
  -[SKSoundSource queuedBufferCount]
  -[SKSoundSource purgeCompletedBuffers]
  -[SKSoundSource shouldLoop]
  -[SKSoundSource setShouldLoop:]


SKSceneUnarchiveDummy : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
  // class methods
  +[SKSceneUnarchiveDummy supportsSecureCoding]

  // instance methods
  -[SKSceneUnarchiveDummy encodeWithCoder:]
  -[SKSceneUnarchiveDummy initWithCoder:]


SKResize : SKAction
  // class methods
  +[SKResize supportsSecureCoding]
  +[SKResize resizeByWidth:height:duration:]
  +[SKResize resizeToWidth:height:duration:]
  +[SKResize resizeToWidth:duration:]
  +[SKResize resizeToHeight:duration:]

  // instance methods
  -[SKResize init]
  -[SKResize copyWithZone:]
  -[SKResize encodeWithCoder:]
  -[SKResize initWithCoder:]
  -[SKResize reversedAction]


SKPhysicsBody : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  BOOL dynamic
 @property  BOOL usesPreciseCollisionDetection
 @property  BOOL allowsRotation
 @property  BOOL pinned
 @property  BOOL resting
 @property  double friction
 @property  double charge
 @property  double restitution
 @property  double linearDamping
 @property  double angularDamping
 @property  double density
 @property  double mass
 @property  double area
 @property  BOOL affectedByGravity
 @property  unsigned int fieldBitMask
 @property  unsigned int categoryBitMask
 @property  unsigned int collisionBitMask
 @property  unsigned int contactTestBitMask
 @property  NSArray *joints
 @property  SKNode *node
 @property  {CGVector=dd} velocity
 @property  double angularVelocity

  // class methods
  +[SKPhysicsBody allocWithZone:]
  +[SKPhysicsBody copyWithZone:]
  +[SKPhysicsBody supportsSecureCoding]
  +[SKPhysicsBody bodyWithCircleOfRadius:]
  +[SKPhysicsBody bodyWithRectangleOfSize:]
  +[SKPhysicsBody bodyWithRectangleOfSize:center:]
  +[SKPhysicsBody bodyWithEdgeFromPoint:toPoint:]
  +[SKPhysicsBody bodyWithPolygonFromPath:]
  +[SKPhysicsBody bodyWithEdgeChainFromPath:]
  +[SKPhysicsBody bodyWithEdgeLoopFromPath:]
  +[SKPhysicsBody bodyWithBodies:]
  +[SKPhysicsBody bodyWithTexture:alphaThreshold:size:accuracy:]
  +[SKPhysicsBody bodyWithCircleOfRadius:center:]
  +[SKPhysicsBody bodyWithTexture:alphaThreshold:size:]
  +[SKPhysicsBody bodyWithEdgeLoopFromRect:]
  +[SKPhysicsBody bodyWithTexture:size:]

  // instance methods
  -[SKPhysicsBody copyWithZone:]
  -[SKPhysicsBody encodeWithCoder:]
  -[SKPhysicsBody initWithCoder:]
  -[SKPhysicsBody .cxx_destruct]
  -[SKPhysicsBody node]
  -[SKPhysicsBody isDynamic]
  -[SKPhysicsBody velocity]
  -[SKPhysicsBody setVelocity:]
  -[SKPhysicsBody mass]
  -[SKPhysicsBody setMass:]
  -[SKPhysicsBody friction]
  -[SKPhysicsBody setFriction:]
  -[SKPhysicsBody setCharge:]
  -[SKPhysicsBody setPinned:]
  -[SKPhysicsBody pinned]
  -[SKPhysicsBody setDensity:]
  -[SKPhysicsBody density]
  -[SKPhysicsBody angularVelocity]
  -[SKPhysicsBody usesPreciseCollisionDetection]
  -[SKPhysicsBody allowsRotation]
  -[SKPhysicsBody isResting]
  -[SKPhysicsBody restitution]
  -[SKPhysicsBody affectedByGravity]
  -[SKPhysicsBody setResting:]
  -[SKPhysicsBody setDynamic:]
  -[SKPhysicsBody collisionBitMask]
  -[SKPhysicsBody setCollisionBitMask:]
  -[SKPhysicsBody categoryBitMask]
  -[SKPhysicsBody setCategoryBitMask:]
  -[SKPhysicsBody setContactTestBitMask:]
  -[SKPhysicsBody setAffectedByGravity:]
  -[SKPhysicsBody setFieldBitMask:]
  -[SKPhysicsBody setRestitution:]
  -[SKPhysicsBody setLinearDamping:]
  -[SKPhysicsBody setAngularDamping:]
  -[SKPhysicsBody setAllowsRotation:]
  -[SKPhysicsBody charge]
  -[SKPhysicsBody setAngularVelocity:]
  -[SKPhysicsBody linearDamping]
  -[SKPhysicsBody angularDamping]
  -[SKPhysicsBody applyImpulse:]
  -[SKPhysicsBody setUsesPreciseCollisionDetection:]
  -[SKPhysicsBody fieldBitMask]
  -[SKPhysicsBody area]
  -[SKPhysicsBody applyForce:]
  -[SKPhysicsBody joints]
  -[SKPhysicsBody contactTestBitMask]
  -[SKPhysicsBody applyForce:atPoint:]
  -[SKPhysicsBody applyTorque:]
  -[SKPhysicsBody applyImpulse:atPoint:]
  -[SKPhysicsBody applyAngularImpulse:]
  -[SKPhysicsBody allContactedBodies]


SKPhysicsContact : NSObject /usr/lib/libc++.1.dylib
 @property  SKPhysicsBody *bodyA
 @property  SKPhysicsBody *bodyB
 @property  {CGPoint=dd} contactPoint
 @property  {CGVector=dd} contactNormal
 @property  double collisionImpulse

  // class methods
  +[SKPhysicsContact allocWithZone:]
  +[SKPhysicsContact copyWithZone:]

  // instance methods
  -[SKPhysicsContact .cxx_destruct]
  -[SKPhysicsContact bodyA]
  -[SKPhysicsContact bodyB]
  -[SKPhysicsContact contactPoint]
  -[SKPhysicsContact contactNormal]
  -[SKPhysicsContact collisionImpulse]


SKPhysicsJoint : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  BOOL _implicit
 @property  SKPhysicsBody *bodyA
 @property  SKPhysicsBody *bodyB
 @property  {CGVector=dd} reactionForce
 @property  double reactionTorque

  // class methods
  +[SKPhysicsJoint allocWithZone:]
  +[SKPhysicsJoint supportsSecureCoding]

  // instance methods
  -[SKPhysicsJoint encodeWithCoder:]
  -[SKPhysicsJoint initWithCoder:]
  -[SKPhysicsJoint .cxx_destruct]
  -[SKPhysicsJoint _implicit]
  -[SKPhysicsJoint bodyA]
  -[SKPhysicsJoint bodyB]
  -[SKPhysicsJoint set_implicit:]
  -[SKPhysicsJoint setBodyA:]
  -[SKPhysicsJoint setBodyB:]
  -[SKPhysicsJoint reactionForce]
  -[SKPhysicsJoint reactionTorque]


SKPhysicsJointPin : SKPhysicsJoint
 @property  {CGPoint=dd} anchor
 @property  BOOL shouldEnableLimits
 @property  double lowerAngleLimit
 @property  double upperAngleLimit
 @property  double frictionTorque
 @property  double rotationSpeed

  // class methods
  +[SKPhysicsJointPin allocWithZone:]
  +[SKPhysicsJointPin supportsSecureCoding]
  +[SKPhysicsJointPin jointWithBodyA:bodyB:anchor:]

  // instance methods
  -[SKPhysicsJointPin anchor]
  -[SKPhysicsJointPin setShouldEnableLimits:]
  -[SKPhysicsJointPin setLowerAngleLimit:]
  -[SKPhysicsJointPin setUpperAngleLimit:]
  -[SKPhysicsJointPin setFrictionTorque:]
  -[SKPhysicsJointPin frictionTorque]
  -[SKPhysicsJointPin lowerAngleLimit]
  -[SKPhysicsJointPin upperAngleLimit]
  -[SKPhysicsJointPin shouldEnableLimits]
  -[SKPhysicsJointPin rotationSpeed]
  -[SKPhysicsJointPin setRotationSpeed:]


SKPhysicsJointSpring : SKPhysicsJoint
 @property  double damping
 @property  double frequency

  // class methods
  +[SKPhysicsJointSpring allocWithZone:]
  +[SKPhysicsJointSpring supportsSecureCoding]
  +[SKPhysicsJointSpring jointWithBodyA:bodyB:anchorA:anchorB:]

  // instance methods
  -[SKPhysicsJointSpring damping]
  -[SKPhysicsJointSpring setDamping:]
  -[SKPhysicsJointSpring frequency]
  -[SKPhysicsJointSpring setFrequency:]


SKPhysicsJointFixed : SKPhysicsJoint
  // class methods
  +[SKPhysicsJointFixed allocWithZone:]
  +[SKPhysicsJointFixed supportsSecureCoding]
  +[SKPhysicsJointFixed jointWithBodyA:bodyB:anchor:]


SKPhysicsJointSliding : SKPhysicsJoint
 @property  BOOL shouldEnableLimits
 @property  double lowerDistanceLimit
 @property  double upperDistanceLimit

  // class methods
  +[SKPhysicsJointSliding allocWithZone:]
  +[SKPhysicsJointSliding supportsSecureCoding]
  +[SKPhysicsJointSliding jointWithBodyA:bodyB:anchor:axis:]

  // instance methods
  -[SKPhysicsJointSliding setShouldEnableLimits:]
  -[SKPhysicsJointSliding setLowerDistanceLimit:]
  -[SKPhysicsJointSliding setUpperDistanceLimit:]
  -[SKPhysicsJointSliding shouldEnableLimits]
  -[SKPhysicsJointSliding lowerDistanceLimit]
  -[SKPhysicsJointSliding upperDistanceLimit]


SKPhysicsJointLimit : SKPhysicsJoint
 @property  double maxLength

  // class methods
  +[SKPhysicsJointLimit allocWithZone:]
  +[SKPhysicsJointLimit supportsSecureCoding]
  +[SKPhysicsJointLimit jointWithBodyA:bodyB:anchorA:anchorB:]

  // instance methods
  -[SKPhysicsJointLimit maxLength]
  -[SKPhysicsJointLimit setMaxLength:]


SKPhysicsWorld : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  {CGVector=dd} gravity
 @property  double speed
 @property  <SKPhysicsContactDelegate> *contactDelegate

  // class methods
  +[SKPhysicsWorld allocWithZone:]
  +[SKPhysicsWorld copyWithZone:]
  +[SKPhysicsWorld supportsSecureCoding]

  // instance methods
  -[SKPhysicsWorld encodeWithCoder:]
  -[SKPhysicsWorld initWithCoder:]
  -[SKPhysicsWorld gravity]
  -[SKPhysicsWorld fields]
  -[SKPhysicsWorld speed]
  -[SKPhysicsWorld setSpeed:]
  -[SKPhysicsWorld removeJoint:]
  -[SKPhysicsWorld addJoint:]
  -[SKPhysicsWorld addBody:]
  -[SKPhysicsWorld removeBody:]
  -[SKPhysicsWorld contactDelegate]
  -[SKPhysicsWorld setContactDelegate:]
  -[SKPhysicsWorld enumerateBodiesInRect:usingBlock:]
  -[SKPhysicsWorld stepWithTime:velocityIterations:positionIterations:]
  -[SKPhysicsWorld setGravity:]
  -[SKPhysicsWorld removeAllJoints]
  -[SKPhysicsWorld bodies]
  -[SKPhysicsWorld hasBodies]
  -[SKPhysicsWorld hasFields]
  -[SKPhysicsWorld removeAllBodies]
  -[SKPhysicsWorld enumerateBodiesAtPoint:usingBlock:]
  -[SKPhysicsWorld enumerateBodiesAlongRayStart:end:usingBlock:]
  -[SKPhysicsWorld bodyAtPoint:]
  -[SKPhysicsWorld bodyInRect:]
  -[SKPhysicsWorld bodyAlongRayStart:end:]
  -[SKPhysicsWorld sampleFields:]
  -[SKPhysicsWorld sampleFieldsAt:]


SKOpenGLNode : SKNode
 @property  {CGSize=dd} viewportSize

  // class methods
  +[SKOpenGLNode openGLNodeWithViewportSize:]

  // instance methods
  -[SKOpenGLNode init]
  -[SKOpenGLNode encodeWithCoder:]
  -[SKOpenGLNode initWithCoder:]
  -[SKOpenGLNode viewportSize]
  -[SKOpenGLNode initWithViewportSize:]
  -[SKOpenGLNode renderForTime:]
  -[SKOpenGLNode setViewportSize:]
  -[SKOpenGLNode needsRenderForTime:]
  -[SKOpenGLNode _renderForTime:]


SKTileDefinition : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  SKTileGroupRule *parentRule
 @property  NSString *uid
 @property  unsigned short currentFrameIndex
 @property  double lastTargetTime
 @property  float currentFrameTime
 @property  BOOL frameDidChange
 @property  BOOL nextFrameAffectsVertexBuffer
 @property  NSArray *textures
 @property  NSArray *normalTextures
 @property  NSMutableDictionary *userData
 @property  NSString *name
 @property  {CGSize=dd} size
 @property  double timePerFrame
 @property  unsigned long placementWeight
 @property  unsigned long rotation
 @property  BOOL flipVertically
 @property  BOOL flipHorizontally

  // class methods
  +[SKTileDefinition supportsSecureCoding]
  +[SKTileDefinition tileDefinitionWithTexture:]
  +[SKTileDefinition tileDefinitionWithTexture:size:]
  +[SKTileDefinition tileDefinitionWithTexture:normalTexture:size:]
  +[SKTileDefinition tileDefinitionWithTextures:size:timePerFrame:]
  +[SKTileDefinition tileDefinitionWithTextures:normalTextures:size:timePerFrame:]

  // instance methods
  -[SKTileDefinition init]
  -[SKTileDefinition name]
  -[SKTileDefinition copyWithZone:]
  -[SKTileDefinition copy]
  -[SKTileDefinition encodeWithCoder:]
  -[SKTileDefinition initWithCoder:]
  -[SKTileDefinition .cxx_destruct]
  -[SKTileDefinition setName:]
  -[SKTileDefinition size]
  -[SKTileDefinition uid]
  -[SKTileDefinition setSize:]
  -[SKTileDefinition rotation]
  -[SKTileDefinition setRotation:]
  -[SKTileDefinition setUid:]
  -[SKTileDefinition userData]
  -[SKTileDefinition setUserData:]
  -[SKTileDefinition textures]
  -[SKTileDefinition setTextures:]
  -[SKTileDefinition flipVertically]
  -[SKTileDefinition flipHorizontally]
  -[SKTileDefinition parentRule]
  -[SKTileDefinition currentFrameIndex]
  -[SKTileDefinition isEqualToNode:]
  -[SKTileDefinition timePerFrame]
  -[SKTileDefinition setTimePerFrame:]
  -[SKTileDefinition setParentRule:]
  -[SKTileDefinition placementWeight]
  -[SKTileDefinition initWithTexture:]
  -[SKTileDefinition lastTargetTime]
  -[SKTileDefinition frameDidChange]
  -[SKTileDefinition nextFrameAffectsVertexBuffer]
  -[SKTileDefinition setFrameDidChange:]
  -[SKTileDefinition setLastTargetTime:]
  -[SKTileDefinition currentFrameTime]
  -[SKTileDefinition setCurrentFrameTime:]
  -[SKTileDefinition setCurrentFrameIndex:]
  -[SKTileDefinition setNextFrameAffectsVertexBuffer:]
  -[SKTileDefinition normalTextures]
  -[SKTileDefinition setPlacementWeight:]
  -[SKTileDefinition setNormalTextures:]
  -[SKTileDefinition setDataWithTexture:normalTexture:tileName:size:]
  -[SKTileDefinition setDataWithTextures:normalTextures:timePerFrame:tileName:size:]
  -[SKTileDefinition initWithTexture:size:]
  -[SKTileDefinition initWithTexture:normalTexture:size:]
  -[SKTileDefinition initWithTextures:size:timePerFrame:]
  -[SKTileDefinition initWithTextures:normalTextures:size:timePerFrame:]
  -[SKTileDefinition setFlipVertically:]
  -[SKTileDefinition setFlipHorizontally:]


SK3DNode : SKNode
 @property  {CGSize=dd} viewportSize
 @property  SCNScene *scnScene
 @property  double sceneTime
 @property  BOOL playing
 @property  BOOL loops
 @property  SCNNode *pointOfView
 @property  BOOL autoenablesDefaultLighting

  // class methods
  +[SK3DNode supportsSecureCoding]
  +[SK3DNode nodeWithViewportSize:]

  // instance methods
  -[SK3DNode init]
  -[SK3DNode copyWithZone:]
  -[SK3DNode encodeWithCoder:]
  -[SK3DNode initWithCoder:]
  -[SK3DNode commonInit]
  -[SK3DNode isPlaying]
  -[SK3DNode setPlaying:]
  -[SK3DNode loops]
  -[SK3DNode setLoops:]
  -[SK3DNode hitTest:options:]
  -[SK3DNode pointOfView]
  -[SK3DNode setPointOfView:]
  -[SK3DNode sceneTime]
  -[SK3DNode setSceneTime:]
  -[SK3DNode autoenablesDefaultLighting]
  -[SK3DNode setAutoenablesDefaultLighting:]
  -[SK3DNode projectPoint:]
  -[SK3DNode unprojectPoint:]
  -[SK3DNode _makeBackingNode]
  -[SK3DNode _didMakeBackingNode]
  -[SK3DNode viewportSize]
  -[SK3DNode initWithViewportSize:]
  -[SK3DNode setViewportSize:]
  -[SK3DNode _renderForTime:]
  -[SK3DNode setScnScene:]
  -[SK3DNode scnScene]
  -[SK3DNode _scnSceneDidUpdate:]


SKWarpGeometry : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  BOOL isIdentityWarp

  // class methods
  +[SKWarpGeometry supportsSecureCoding]

  // instance methods
  -[SKWarpGeometry copyWithZone:]
  -[SKWarpGeometry encodeWithCoder:]
  -[SKWarpGeometry initWithCoder:]
  -[SKWarpGeometry isIdentityWarp]


SKWarpGeometryGrid : SKWarpGeometry <NSSecureCoding>
 @property  r^ sourcePositions
 @property  r^ destPositions
 @property  long long numberOfColumns
 @property  long long numberOfRows
 @property  long long vertexCount

  // class methods
  +[SKWarpGeometryGrid supportsSecureCoding]
  +[SKWarpGeometryGrid grid]
  +[SKWarpGeometryGrid gridWithColumns:rows:sourcePositions:destPositions:]
  +[SKWarpGeometryGrid gridWithColumns:rows:]

  // instance methods
  -[SKWarpGeometryGrid init]
  -[SKWarpGeometryGrid copyWithZone:]
  -[SKWarpGeometryGrid encodeWithCoder:]
  -[SKWarpGeometryGrid initWithCoder:]
  -[SKWarpGeometryGrid .cxx_destruct]
  -[SKWarpGeometryGrid .cxx_construct]
  -[SKWarpGeometryGrid numberOfColumns]
  -[SKWarpGeometryGrid numberOfRows]
  -[SKWarpGeometryGrid vertexCount]
  -[SKWarpGeometryGrid isIdentityWarp]
  -[SKWarpGeometryGrid destPositions]
  -[SKWarpGeometryGrid sourcePositions]
  -[SKWarpGeometryGrid initWithColumns:rows:sourcePositions:destPositions:]
  -[SKWarpGeometryGrid isEqualToGrid:]
  -[SKWarpGeometryGrid sourcePositionAtIndex:]
  -[SKWarpGeometryGrid destPositionAtIndex:]
  -[SKWarpGeometryGrid gridByReplacingSourcePositions:]
  -[SKWarpGeometryGrid gridByReplacingDestPositions:]


SKKeyframeSequence : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  long long interpolationMode
 @property  long long repeatMode

  // class methods
  +[SKKeyframeSequence supportsSecureCoding]

  // instance methods
  -[SKKeyframeSequence init]
  -[SKKeyframeSequence copyWithZone:]
  -[SKKeyframeSequence copy]
  -[SKKeyframeSequence initWithCapacity:]
  -[SKKeyframeSequence count]
  -[SKKeyframeSequence encodeWithCoder:]
  -[SKKeyframeSequence initWithCoder:]
  -[SKKeyframeSequence .cxx_destruct]
  -[SKKeyframeSequence initWithCount:]
  -[SKKeyframeSequence _valueClass]
  -[SKKeyframeSequence interpolationMode]
  -[SKKeyframeSequence repeatMode]
  -[SKKeyframeSequence setRepeatMode:]
  -[SKKeyframeSequence getKeyframeTimeForIndex:]
  -[SKKeyframeSequence getKeyframeValueForIndex:]
  -[SKKeyframeSequence initWithKeyframeValues:times:]
  -[SKKeyframeSequence setInterpolationMode:]
  -[SKKeyframeSequence _dirtySKCKeyframeSequence]
  -[SKKeyframeSequence setKeyframeValue:forIndex:]
  -[SKKeyframeSequence setKeyframeTime:forIndex:]
  -[SKKeyframeSequence _createSKCKeyframeSequence]
  -[SKKeyframeSequence addKeyframeValue:time:]
  -[SKKeyframeSequence removeLastKeyframe]
  -[SKKeyframeSequence removeAllKeyframes]
  -[SKKeyframeSequence removeKeyframeAtIndex:]
  -[SKKeyframeSequence setKeyframeValue:time:forIndex:]
  -[SKKeyframeSequence sampleAtTime:]
  -[SKKeyframeSequence isEqualToSequence:]


SKMutableTexture : SKTexture
  // class methods
  +[SKMutableTexture mutableTextureWithSize:]

  // instance methods
  -[SKMutableTexture dealloc]
  -[SKMutableTexture initWithSize:]
  -[SKMutableTexture _backingTexture]
  -[SKMutableTexture modifyPixelDataWithBlock:]
  -[SKMutableTexture initWithSize:ioSurfaceBacked:pixelFormat:]
  -[SKMutableTexture initWithSize:pixelFormat:]


SKRange : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  double lowerLimit
 @property  double upperLimit

  // class methods
  +[SKRange supportsSecureCoding]
  +[SKRange rangeWithLowerLimit:upperLimit:]
  +[SKRange rangeWithNoLimits]
  +[SKRange rangeWithLowerLimit:]
  +[SKRange rangeWithUpperLimit:]
  +[SKRange rangeWithConstantValue:]
  +[SKRange rangeWithValue:variance:]

  // instance methods
  -[SKRange init]
  -[SKRange copyWithZone:]
  -[SKRange encodeWithCoder:]
  -[SKRange initWithCoder:]
  -[SKRange lowerLimit]
  -[SKRange upperLimit]
  -[SKRange initWithLowerLimit:upperLimit:]
  -[SKRange setLowerLimit:]
  -[SKRange setUpperLimit:]
  -[SKRange isEqualToRange:]


SKConstraint : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  BOOL enabled
 @property  SKNode *referenceNode

  // class methods
  +[SKConstraint supportsSecureCoding]
  +[SKConstraint scaleX:scaleY:]
  +[SKConstraint scale:]
  +[SKConstraint positionX:]
  +[SKConstraint positionY:]
  +[SKConstraint positionX:Y:]
  +[SKConstraint distance:toNode:]
  +[SKConstraint distance:toPoint:]
  +[SKConstraint distance:toPoint:inNode:]
  +[SKConstraint zRotation:]
  +[SKConstraint orientToPoint:inNode:offset:]
  +[SKConstraint orientToNode:offset:]
  +[SKConstraint orientToPoint:offset:]
  +[SKConstraint width:]
  +[SKConstraint height:]
  +[SKConstraint width:height:]
  +[SKConstraint scaleX:]
  +[SKConstraint scaleY:]

  // instance methods
  -[SKConstraint init]
  -[SKConstraint copyWithZone:]
  -[SKConstraint enabled]
  -[SKConstraint setEnabled:]
  -[SKConstraint encodeWithCoder:]
  -[SKConstraint initWithCoder:]
  -[SKConstraint .cxx_destruct]
  -[SKConstraint referenceNode]
  -[SKConstraint setReferenceNode:]
  -[SKConstraint isEqualToConstraint:]


SKSizeConstraint : SKConstraint
 @property  SKRange *widthRange
 @property  SKRange *heightRange

  // class methods
  +[SKSizeConstraint supportsSecureCoding]
  +[SKSizeConstraint constraintWithWidthRange:]
  +[SKSizeConstraint constraintWithHeightRange:]
  +[SKSizeConstraint constraintWithWidthRange:heightRange:]

  // instance methods
  -[SKSizeConstraint copyWithZone:]
  -[SKSizeConstraint encodeWithCoder:]
  -[SKSizeConstraint initWithCoder:]
  -[SKSizeConstraint .cxx_destruct]
  -[SKSizeConstraint heightRange]
  -[SKSizeConstraint widthRange]
  -[SKSizeConstraint isEqualToSizeConstraint:]
  -[SKSizeConstraint setWidthRange:]
  -[SKSizeConstraint setHeightRange:]
  -[SKSizeConstraint initWithWidthRange:heightRange:]


SKScaleConstraint : SKConstraint
 @property  SKRange *xRange
 @property  SKRange *yRange

  // class methods
  +[SKScaleConstraint supportsSecureCoding]
  +[SKScaleConstraint constraintWithXRange:]
  +[SKScaleConstraint constraintWithYRange:]
  +[SKScaleConstraint constraintWithXRange:YRange:]
  +[SKScaleConstraint constraintWithScaleRange:]

  // instance methods
  -[SKScaleConstraint copyWithZone:]
  -[SKScaleConstraint encodeWithCoder:]
  -[SKScaleConstraint initWithCoder:]
  -[SKScaleConstraint .cxx_destruct]
  -[SKScaleConstraint xRange]
  -[SKScaleConstraint yRange]
  -[SKScaleConstraint isEqualToScaleConstraint:]
  -[SKScaleConstraint setXRange:]
  -[SKScaleConstraint setYRange:]
  -[SKScaleConstraint initWithXRange:YRange:]


SKRotationConstraint : SKConstraint
 @property  SKRange *zRotationRange

  // class methods
  +[SKRotationConstraint supportsSecureCoding]
  +[SKRotationConstraint constraintWithZRotationRange:]

  // instance methods
  -[SKRotationConstraint copyWithZone:]
  -[SKRotationConstraint encodeWithCoder:]
  -[SKRotationConstraint initWithCoder:]
  -[SKRotationConstraint .cxx_destruct]
  -[SKRotationConstraint zRotationRange]
  -[SKRotationConstraint isEqualToRotationConstraint:]
  -[SKRotationConstraint setZRotationRange:]
  -[SKRotationConstraint initWithZRotationRange:]


SKOrientationConstraint : SKConstraint
 @property  SKNode *node
 @property  {CGPoint=dd} point
 @property  SKRange *offset

  // class methods
  +[SKOrientationConstraint supportsSecureCoding]
  +[SKOrientationConstraint constraintOrientingToPoint:inNode:offset:]
  +[SKOrientationConstraint constraintOrientingToNode:offset:]
  +[SKOrientationConstraint constraintOrientingToPoint:offset:]

  // instance methods
  -[SKOrientationConstraint copyWithZone:]
  -[SKOrientationConstraint encodeWithCoder:]
  -[SKOrientationConstraint initWithCoder:]
  -[SKOrientationConstraint .cxx_destruct]
  -[SKOrientationConstraint node]
  -[SKOrientationConstraint setOffset:]
  -[SKOrientationConstraint point]
  -[SKOrientationConstraint setPoint:]
  -[SKOrientationConstraint offset]
  -[SKOrientationConstraint setNode:]
  -[SKOrientationConstraint isEqualToOrientationConstraint:]
  -[SKOrientationConstraint initWithNode:point:offset:]


SKDistanceConstraint : SKConstraint
 @property  SKRange *distanceRange
 @property  SKNode *node
 @property  {CGPoint=dd} point

  // class methods
  +[SKDistanceConstraint supportsSecureCoding]
  +[SKDistanceConstraint constraintWithNode:distanceRange:]
  +[SKDistanceConstraint constraintWithPoint:distanceRange:]
  +[SKDistanceConstraint constraintWithPoint:inNode:distanceRange:]

  // instance methods
  -[SKDistanceConstraint copyWithZone:]
  -[SKDistanceConstraint encodeWithCoder:]
  -[SKDistanceConstraint initWithCoder:]
  -[SKDistanceConstraint .cxx_destruct]
  -[SKDistanceConstraint node]
  -[SKDistanceConstraint point]
  -[SKDistanceConstraint setPoint:]
  -[SKDistanceConstraint setNode:]
  -[SKDistanceConstraint distanceRange]
  -[SKDistanceConstraint isEqualToDistanceConstraint:]
  -[SKDistanceConstraint setDistanceRange:]
  -[SKDistanceConstraint initWithPoint:inNode:distanceRange:]


SKPositionConstraint : SKConstraint
 @property  SKRange *xRange
 @property  SKRange *yRange

  // class methods
  +[SKPositionConstraint supportsSecureCoding]
  +[SKPositionConstraint constraintWithXRange:]
  +[SKPositionConstraint constraintWithYRange:]
  +[SKPositionConstraint constraintWithXRange:YRange:]

  // instance methods
  -[SKPositionConstraint copyWithZone:]
  -[SKPositionConstraint encodeWithCoder:]
  -[SKPositionConstraint initWithCoder:]
  -[SKPositionConstraint .cxx_destruct]
  -[SKPositionConstraint xRange]
  -[SKPositionConstraint yRange]
  -[SKPositionConstraint isEqualToPositionConstraint:]
  -[SKPositionConstraint setXRange:]
  -[SKPositionConstraint setYRange:]
  -[SKPositionConstraint initWithXRange:YRange:]


UITouch(SKNodeTouches)
	// instance methods
	-[UITouch(SKNodeTouches) locationInNode:]
	-[UITouch(SKNodeTouches) previousLocationInNode:]

NSData(GZip)
	// class methods
	+[NSData(GZip) makeArchive:length:level:]

	// instance methods
	-[NSData(GZip) gzipInflate]
	-[NSData(GZip) gzipDeflate:]

NSMutableArray(removeExactObject)
	// instance methods
	-[NSMutableArray(removeExactObject) removeExactObject:]
	-[NSMutableArray(removeExactObject) removeExactObjectsInArray:]

PKPhysicsBody(SKPhysicsBody)
	// instance methods
	-[PKPhysicsBody(SKPhysicsBody) isKindOfClass:]
	-[PKPhysicsBody(SKPhysicsBody) node]
	-[PKPhysicsBody(SKPhysicsBody) _descriptionClassName]

PKPhysicsJoint(SKPhysicsJoint)
	// class methods
	+[PKPhysicsJoint(SKPhysicsJoint) supportsSecureCoding]

	// instance methods
	-[PKPhysicsJoint(SKPhysicsJoint) isKindOfClass:]

PKPhysicsWorld(SKPhysicsWorld)
	// instance methods
	-[PKPhysicsWorld(SKPhysicsWorld) isKindOfClass:]

UIColor(UIColor)
	// class methods
	+[UIColor(UIColor) colorWithVectorRGBA:]
	+[UIColor(UIColor) colorWithComponentRGBA:]

	// instance methods
	-[UIColor(UIColor) red]
	-[UIColor(UIColor) green]
	-[UIColor(UIColor) blue]
	-[UIColor(UIColor) alpha]
	-[UIColor(UIColor) componentRGBA]
	-[UIColor(UIColor) vectorRGBA]

01 00 0f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 0f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioEngine 
01 00 0f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioEnvironmentNode 
01 00 0f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioFile 
01 00 0f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioFormat 
01 00 0f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioPlayerNode 
01 00 0f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 0f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItemVideoOutput 
01 00 1640 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1640 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAEAGLLayer 
01 00 1640 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMetalLayer 
01 00 1040 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIColor 
01 00 1040 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 1040 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIFilter 
01 00 1040 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 1040 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIVector 
01 00 0700 /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI: CUICatalog 
01 00 0100 /System/Library/Frameworks/OpenGLES.framework/OpenGLES: EAGLContext 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1800 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsBody 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsContact 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsFieldCustomBlock 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsFieldDrag 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsFieldElectric 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsFieldLinearGravity 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsFieldMagnetic 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsFieldNoise 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsFieldRadialGravity 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsFieldSpring 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsFieldTurbulence 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsFieldVelocity 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsFieldVortex 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsGrid 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsJoint 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsJointDistance 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsJointPrismatic 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsJointRevolute 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsJointRope 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsJointWeld 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKPhysicsWorld 
01 00 0d00 /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit: PKRegion 
01 00 0300 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNScene 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIResponder 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UITouch 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFocusItemRegion 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFocusRegion 
