|| __DATA.__data _VSFederatedTwoFeatureName
|| __DATA.__data _VSJSAppErrorDomain
|| __DATA.__objc_data _OBJC_CLASS_$_VSAccount
|| __DATA.__objc_data _OBJC_CLASS_$_VSAccountApplicationProvider
|| __DATA.__objc_data _OBJC_CLASS_$_VSAccountChannelsCenter
|| __DATA.__objc_data _OBJC_CLASS_$_VSAccountChannelsSaveOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSAccountManager
|| __DATA.__objc_data _OBJC_CLASS_$_VSAccountManagerResult
|| __DATA.__objc_data _OBJC_CLASS_$_VSAccountMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_VSAccountMetadataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_VSAccountProviderResponse
|| __DATA.__objc_data _OBJC_CLASS_$_VSAccountSaveOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSAccountSerializationCenter
|| __DATA.__objc_data _OBJC_CLASS_$_VSAppChannelsFilter
|| __DATA.__objc_data _OBJC_CLASS_$_VSAppInstallationInfoCenter
|| __DATA.__objc_data _OBJC_CLASS_$_VSApplicationBootURLOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSApplicationUserAccount
|| __DATA.__objc_data _OBJC_CLASS_$_VSBackgroundTask
|| __DATA.__objc_data _OBJC_CLASS_$_VSBlockBasedValueTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_VSCasePreservingString
|| __DATA.__objc_data _OBJC_CLASS_$_VSDelayOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSDeveloperIdentityProviderChangeOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSDeveloperSettingsUpdateOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSErrorRecoveryAttempterDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_VSErrorRecoveryOption
|| __DATA.__objc_data _OBJC_CLASS_$_VSExpressionEvaluator
|| __DATA.__objc_data _OBJC_CLASS_$_VSFileWriteOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSIdentityProviderInfoQueryResult
|| __DATA.__objc_data _OBJC_CLASS_$_VSIdentityProviderUserAccountFetchOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSIdentityProviderUserAccountUpdateOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSJSApp
|| __DATA.__objc_data _OBJC_CLASS_$_VSJSObject
|| __DATA.__objc_data _OBJC_CLASS_$_VSJSUserAccount
|| __DATA.__objc_data _OBJC_CLASS_$_VSKeyPathBasedTreeNode
|| __DATA.__objc_data _OBJC_CLASS_$_VSMetricsCenter
|| __DATA.__objc_data _OBJC_CLASS_$_VSOpaqueAuthenticationToken
|| __DATA.__objc_data _OBJC_CLASS_$_VSPersistentStorage
|| __DATA.__objc_data _OBJC_CLASS_$_VSPrivacyConsentVoucher
|| __DATA.__objc_data _OBJC_CLASS_$_VSPrivacyFacade
|| __DATA.__objc_data _OBJC_CLASS_$_VSPrivacyVoucherLockbox
|| __DATA.__objc_data _OBJC_CLASS_$_VSProxyDetector
|| __DATA.__objc_data _OBJC_CLASS_$_VSRestrictionsCenter
|| __DATA.__objc_data _OBJC_CLASS_$_VSReverseValueTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_VSSAMLAuthenticationToken
|| __DATA.__objc_data _OBJC_CLASS_$_VSSetTopBoxInfoQueryResult
|| __DATA.__objc_data _OBJC_CLASS_$_VSSetTopBoxProfile
|| __DATA.__objc_data _OBJC_CLASS_$_VSSingleThreadDispatchQueue
|| __DATA.__objc_data _OBJC_CLASS_$_VSStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_VSStateTransition
|| __DATA.__objc_data _OBJC_CLASS_$_VSStorefrontCodeLoadOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSTestSetupPreparationOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSTimeoutOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSTreeNode
|| __DATA.__objc_data _OBJC_CLASS_$_VSTrie
|| __DATA.__objc_data _OBJC_CLASS_$_VSUserAccount
|| __DATA.__objc_data _OBJC_CLASS_$_VSUserAccountManager
|| __DATA.__objc_data _OBJC_CLASS_$_VSUserAccountServiceConnection
|| __DATA.__objc_data _OBJC_CLASS_$_VSVerificationDataOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSVerificationStateResetOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSViewServiceXPCInterface
|| __DATA.__objc_data _OBJC_CLASS_$_VSWaitGroup
|| __DATA.__objc_data _OBJC_CLASS_$_VSWeakForwardingTarget
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAccountApplicationProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAccountChannelsCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAccountChannelsSaveOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAccountManager
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAccountManagerResult
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAccountMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAccountMetadataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAccountProviderResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAccountSaveOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAccountSerializationCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAppChannelsFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAppInstallationInfoCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_VSApplicationBootURLOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSApplicationUserAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_VSBackgroundTask
|| __DATA.__objc_data _OBJC_METACLASS_$_VSBlockBasedValueTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_VSCasePreservingString
|| __DATA.__objc_data _OBJC_METACLASS_$_VSDelayOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSDeveloperIdentityProviderChangeOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSDeveloperSettingsUpdateOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSErrorRecoveryAttempterDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_VSErrorRecoveryOption
|| __DATA.__objc_data _OBJC_METACLASS_$_VSExpressionEvaluator
|| __DATA.__objc_data _OBJC_METACLASS_$_VSFileWriteOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSIdentityProviderInfoQueryResult
|| __DATA.__objc_data _OBJC_METACLASS_$_VSIdentityProviderUserAccountFetchOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSIdentityProviderUserAccountUpdateOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSJSApp
|| __DATA.__objc_data _OBJC_METACLASS_$_VSJSObject
|| __DATA.__objc_data _OBJC_METACLASS_$_VSJSUserAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_VSKeyPathBasedTreeNode
|| __DATA.__objc_data _OBJC_METACLASS_$_VSMetricsCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_VSOpaqueAuthenticationToken
|| __DATA.__objc_data _OBJC_METACLASS_$_VSPersistentStorage
|| __DATA.__objc_data _OBJC_METACLASS_$_VSPrivacyConsentVoucher
|| __DATA.__objc_data _OBJC_METACLASS_$_VSPrivacyFacade
|| __DATA.__objc_data _OBJC_METACLASS_$_VSPrivacyVoucherLockbox
|| __DATA.__objc_data _OBJC_METACLASS_$_VSProxyDetector
|| __DATA.__objc_data _OBJC_METACLASS_$_VSRestrictionsCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_VSReverseValueTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_VSSAMLAuthenticationToken
|| __DATA.__objc_data _OBJC_METACLASS_$_VSSetTopBoxInfoQueryResult
|| __DATA.__objc_data _OBJC_METACLASS_$_VSSetTopBoxProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_VSSingleThreadDispatchQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_VSStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_VSStateTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_VSStorefrontCodeLoadOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSTestSetupPreparationOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSTimeoutOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSTreeNode
|| __DATA.__objc_data _OBJC_METACLASS_$_VSTrie
|| __DATA.__objc_data _OBJC_METACLASS_$_VSUserAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_VSUserAccountManager
|| __DATA.__objc_data _OBJC_METACLASS_$_VSUserAccountServiceConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_VSVerificationDataOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSVerificationStateResetOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSViewServiceXPCInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_VSWaitGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_VSWeakForwardingTarget
|| __DATA_CONST.__const _VSAMPProviderResponseAppsData
|| __DATA_CONST.__const _VSAMPProviderResponseKeyApps
|| __DATA_CONST.__const _VSAMPProviderResponseKeyRelationships
|| __DATA_CONST.__const _VSAMSBagKeyAppsMediaAPIHost
|| __DATA_CONST.__const _VSAMSBagKeyCountryCode
|| __DATA_CONST.__const _VSAMSBagKeyIdentityProviders
|| __DATA_CONST.__const _VSAMSBagKeyLanguageTag
|| __DATA_CONST.__const _VSAMSBagKeyMaxFeaturedProviders
|| __DATA_CONST.__const _VSAMSBagKeyShowMultiAppInstallForCaseAlwaysRequirePassword
|| __DATA_CONST.__const _VSAMSBagKeySoleProviderFeatureEnabled
|| __DATA_CONST.__const _VSAMSBagKeyVerificationStateReset
|| __DATA_CONST.__const _VSAMSHTTPMethodNameGET
|| __DATA_CONST.__const _VSAMSHTTPMethodNamePOST
|| __DATA_CONST.__const _VSAMSProviderResponseKeyAppPlacementPosition
|| __DATA_CONST.__const _VSAMSProviderResponseKeyAppStoreRoomURL
|| __DATA_CONST.__const _VSAMSProviderResponseKeyAttributes
|| __DATA_CONST.__const _VSAMSProviderResponseKeyAuthProtocols
|| __DATA_CONST.__const _VSAMSProviderResponseKeyAuthTemplates
|| __DATA_CONST.__const _VSAMSProviderResponseKeyAuthURL
|| __DATA_CONST.__const _VSAMSProviderResponseKeyDisplayName
|| __DATA_CONST.__const _VSAMSProviderResponseKeyIsSingleSignOnSupported
|| __DATA_CONST.__const _VSAMSProviderResponseKeyPrimaryIdentifier
|| __DATA_CONST.__const _VSAMSProviderResponseKeyProviderAppArtwork
|| __DATA_CONST.__const _VSAMSProviderResponseKeyProviderAppArtworkURL
|| __DATA_CONST.__const _VSAMSProviderResponseKeyProviderArtworkKey
|| __DATA_CONST.__const _VSAMSProviderResponseKeyProviderArtworkURL
|| __DATA_CONST.__const _VSAMSProviderResponseKeyProviderIdentifier
|| __DATA_CONST.__const _VSAMSProviderResponseKeyRoot
|| __DATA_CONST.__const _VSAMSProviderResponseKeySetTopBoxOptOutAllowed
|| __DATA_CONST.__const _VSAMSProviderResponseKeySetTopBoxSupported
|| __DATA_CONST.__const _VSAMSProviderResponseKeyShouldShowChannelApps
|| __DATA_CONST.__const _VSAMSProviderResponseKeyShouldShowSubscriptionApps
|| __DATA_CONST.__const _VSAMSProviderResponseKeyStorefrontIsFeatured
|| __DATA_CONST.__const _VSAMSProviderResponseKeyStorefrontSortOrdinal
|| __DATA_CONST.__const _VSAMSProviderResponseKeySupportedStorefrontsKey
|| __DATA_CONST.__const _VSAccountMonitorAccountStoreDidChange
|| __DATA_CONST.__const _VSAccountProviderAuthenticationSchemeAPI
|| __DATA_CONST.__const _VSAccountProviderAuthenticationSchemeSAML
|| __DATA_CONST.__const _VSAccountStoreDidChangeNotification
|| __DATA_CONST.__const _VSActiveSubscriptionsDidChangeNotification
|| __DATA_CONST.__const _VSAnalyticsMachServiceName
|| __DATA_CONST.__const _VSBuddyBundleID
|| __DATA_CONST.__const _VSCheckAccessOptionPrompt
|| __DATA_CONST.__const _VSDataCompressionValueTransformerName
|| __DATA_CONST.__const _VSDeveloperServiceDidChangeNotification
|| __DATA_CONST.__const _VSDeveloperServiceProvidersDidChangeNotification
|| __DATA_CONST.__const _VSDeveloperServiceSettingsDidChangeNotification
|| __DATA_CONST.__const _VSDidRegisterSubscriptionNotification
|| __DATA_CONST.__const _VSElementKeyAuthenticationTemplate
|| __DATA_CONST.__const _VSElementKeyAutoAuthenticationTemplate
|| __DATA_CONST.__const _VSElementKeyOnscreenCodeAuthenticationTemplate
|| __DATA_CONST.__const _VSElementKeyTwoFactorVerificationTemplate
|| __DATA_CONST.__const _VSElementKeyWebAuthenticationTemplate
|| __DATA_CONST.__const _VSEntitlementNameAnalyticsReportFederatedEvents
|| __DATA_CONST.__const _VSEntitlementNameAnalyticsService
|| __DATA_CONST.__const _VSEntitlementNameDeveloperService
|| __DATA_CONST.__const _VSEntitlementNameInternalSubscriptionService
|| __DATA_CONST.__const _VSEntitlementNameInternalUserAccountService
|| __DATA_CONST.__const _VSEntitlementNameInternalUserAccountServiceDelete
|| __DATA_CONST.__const _VSEntitlementNameInternalUserAccountServiceForceUpdate
|| __DATA_CONST.__const _VSEntitlementNamePrivacyService
|| __DATA_CONST.__const _VSEntitlementNameSingleSignOn
|| __DATA_CONST.__const _VSEntitlementNameSmootSubscriptionService
|| __DATA_CONST.__const _VSEntitlementNameSubscriptionRegistration
|| __DATA_CONST.__const _VSEntitlementNameSubscriptionServiceFetchFromAllSources
|| __DATA_CONST.__const _VSEntitlementNameSubscriptionServiceReadWriteWebSources
|| __DATA_CONST.__const _VSEntitlementNameSubscriptionServiceSubscriberIdentifierHashModifiers
|| __DATA_CONST.__const _VSEntitlementNameUserAccountService
|| __DATA_CONST.__const _VSErrorDestructiveRecoveryOptionIndexSet
|| __DATA_CONST.__const _VSErrorDomain
|| __DATA_CONST.__const _VSErrorInfoKeyAccountProviderResponse
|| __DATA_CONST.__const _VSErrorInfoKeySAMLResponse
|| __DATA_CONST.__const _VSErrorInfoKeySAMLResponseStatus
|| __DATA_CONST.__const _VSErrorInfoKeyUnsupportedProviderIdentifier
|| __DATA_CONST.__const _VSIdentityProviderAvailabilityDidChangeNotification
|| __DATA_CONST.__const _VSIdentityProviderInfoDidChangeNotification
|| __DATA_CONST.__const _VSJSAppObjectName
|| __DATA_CONST.__const _VSJSErrorDomain
|| __DATA_CONST.__const _VSJSONDataValueTransformerName
|| __DATA_CONST.__const _VSMetricClickTargetContinue
|| __DATA_CONST.__const _VSMetricClickTargetFindMoreApps
|| __DATA_CONST.__const _VSMetricClickTargetIdentityProvider
|| __DATA_CONST.__const _VSMetricClickTargetInstallApp
|| __DATA_CONST.__const _VSMetricClickTargetNotNow
|| __DATA_CONST.__const _VSMetricClickTargetOpenApp
|| __DATA_CONST.__const _VSMetricClickTargetSTBOptOut
|| __DATA_CONST.__const _VSMetricClickTargetSignIn
|| __DATA_CONST.__const _VSMetricClickTargetSignOut
|| __DATA_CONST.__const _VSMetricPageBuddyMain
|| __DATA_CONST.__const _VSMetricPageBuddySingleProvider
|| __DATA_CONST.__const _VSMetricPageBuddyZSO
|| __DATA_CONST.__const _VSMetricPageSettingsAccountInfo
|| __DATA_CONST.__const _VSMetricPageSettingsHome
|| __DATA_CONST.__const _VSMetricPageSettingsPicker
|| __DATA_CONST.__const _VSMetricPageTypeBuddy
|| __DATA_CONST.__const _VSMetricPageTypeSettings
|| __DATA_CONST.__const _VSMetricPageTypeViewService
|| __DATA_CONST.__const _VSMetricPageViewServiceMain
|| __DATA_CONST.__const _VSOpenTVProviderSettingsURLString
|| __DATA_CONST.__const _VSPrivacyUsageInfoPlistKey
|| __DATA_CONST.__const _VSRequiredDispatchQueueBindingOption
|| __DATA_CONST.__const _VSRequiredOperationQueueBindingOption
|| __DATA_CONST.__const _VSRequiredThreadBindingOption
|| __DATA_CONST.__const _VSSetTopBoxStateChangedNotification
|| __DATA_CONST.__const _VSSubscriptionFetchOptionCreationDateInterval
|| __DATA_CONST.__const _VSSubscriptionFetchOptionEarliestExpirationDate
|| __DATA_CONST.__const _VSSubscriptionFetchOptionExcludeUninstalledApps
|| __DATA_CONST.__const _VSSubscriptionFetchOptionSourceKind
|| __DATA_CONST.__const _VSSubscriptionFetchOptionSources
|| __DATA_CONST.__const _VSSubscriptionFetchOptionSubscriberIdentifierHashModifier
|| __DATA_CONST.__const _VSSubscriptionFetchOptionSubscriptionInfo
|| __DATA_CONST.__const _VSValueTransformerBindingOption
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSAMSBagLoadOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSAMSRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSAMSRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSAccountChannels
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSAccountMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSAnalyticsServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSAsyncOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSAuditToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSCompoundValueTransformer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSDeveloperIdentityProviderFetchAllOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSDeveloperSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSDeveloperSettingsFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSFailable
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSFailableValueTransformer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSFeatureManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSIdentityProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSIdentityProviderAvailabilityInfoCenter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSIdentityProviderInfoCenter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSIdentityProviderStorefrontMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSManagedProfileConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSOptional
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSRemoteNotifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSSecurityTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSSemaphore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSSubscription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSSubscriptionRegistrationCenter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSSubscriptionSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSValueType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSValueTypeProperty
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSViewServiceResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSAMSBagLoadOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSAMSRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSAMSRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSAccountChannels
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSAccountMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSAnalyticsServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSAsyncOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSAuditToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSCompoundValueTransformer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSDeveloperIdentityProviderFetchAllOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSDeveloperSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSDeveloperSettingsFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSFailable
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSFailableValueTransformer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSFeatureManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSIdentityProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSIdentityProviderAvailabilityInfoCenter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSIdentityProviderInfoCenter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSIdentityProviderStorefrontMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSManagedProfileConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSOptional
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSRemoteNotifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSSecurityTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSSemaphore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSSubscription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSSubscriptionRegistrationCenter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSSubscriptionSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSValueType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSValueTypeProperty
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSViewServiceResponse
|| __TEXT.__text _VSAllKnownTemplateElements
|| __TEXT.__text _VSAnalyticsServiceInterface
|| __TEXT.__text _VSAssertNotMainThread
|| __TEXT.__text _VSAssertWithMessage
|| __TEXT.__text _VSBundleURLForProcessIdentifier
|| __TEXT.__text _VSCheckEntitlementForTask
|| __TEXT.__text _VSDefaultLogObject
|| __TEXT.__text _VSDeveloperServiceInterface
|| __TEXT.__text _VSDisplayNameForBundleWithIdentifier
|| __TEXT.__text _VSEnqueueCompletionOperation
|| __TEXT.__text _VSErrorIsPrivateError
|| __TEXT.__text _VSErrorIsPublicError
|| __TEXT.__text _VSErrorLogObject
|| __TEXT.__text _VSInvalidVerificationTokenError
|| __TEXT.__text _VSLoadInterfaceFramework
|| __TEXT.__text _VSMainConcurrencyBindingOptions
|| __TEXT.__text _VSMainThreadOperationWithBlock
|| __TEXT.__text _VSOnceAndOnlyOnceBlock
|| __TEXT.__text _VSOpenURL
|| __TEXT.__text _VSPerformBlockOnMainThread
|| __TEXT.__text _VSPerformCompletionHandler
|| __TEXT.__text _VSPlatformTemplateElements
|| __TEXT.__text _VSPrivacyServiceInterface
|| __TEXT.__text _VSPrivateAccessUsageDescriptionMissing
|| __TEXT.__text _VSPrivateAccountDeletionErrorWithRecoveryHandler
|| __TEXT.__text _VSPrivateAccountLoadingErrorWithRecoveryHandler
|| __TEXT.__text _VSPrivateAccountValidationErrorWithRecoveryHandler
|| __TEXT.__text _VSPrivateError
|| __TEXT.__text _VSPrivateErrorWithRecoverySuggestion
|| __TEXT.__text _VSPrivateViewServiceCrashedErrorWithRecoveryHandler
|| __TEXT.__text _VSPublicError
|| __TEXT.__text _VSPublicErrorWithDetailedErrors
|| __TEXT.__text _VSPublicProviderRejectedError
|| __TEXT.__text _VSPublicServiceTemporarilyUnavailableError
|| __TEXT.__text _VSPublicUnsupportedProviderError
|| __TEXT.__text _VSRequireKeyedCoder
|| __TEXT.__text _VSRequireMainThread
|| __TEXT.__text _VSRequireUsageInfoPlistKey
|| __TEXT.__text _VSSharedSAMLParserController
|| __TEXT.__text _VSSubscriptionFetchOptionsForAppWithBundleIdentifier
|| __TEXT.__text _VSSubscriptionFetchOptionsForBundleIdentifiersAndDomainNames
|| __TEXT.__text _VSSubscriptionFetchOptionsForInfoFromAppWithBundleIdentifier
|| __TEXT.__text _VSSubscriptionFetchOptionsForWebSubscriptionsCreatedAfterDate
|| __TEXT.__text _VSSubscriptionServiceInterface
|| __TEXT.__text _VSUserAccountServiceInterface
|| __TEXT.__text _VSUserInfoForErrorRecoveryOptions
|| __TEXT.__text _VSValueTypeCopyWithZone
|| __TEXT.__text _VSValueTypeDescription
|| __TEXT.__text _VSValueTypeEncodeWithCoder
|| __TEXT.__text _VSValueTypeHash
|| __TEXT.__text _VSValueTypeInit
|| __TEXT.__text _VSValueTypeInitWithCoder
|| __TEXT.__text _VSValueTypeIsEqual
__ Accounts: _ACAccountTypeIdentifieriTunesStore
__ Accounts: _OBJC_CLASS_$_ACMonitoredAccountStore
__ AppleMediaServices: _AMSErrorDomain
__ AppleMediaServices: _OBJC_CLASS_$_AMSBag
__ AppleMediaServices: _OBJC_CLASS_$_AMSMediaProtocolHandler
__ AppleMediaServices: _OBJC_CLASS_$_AMSMediaRequestEncoder
__ AppleMediaServices: _OBJC_CLASS_$_AMSMediaTokenService
__ AppleMediaServices: _OBJC_CLASS_$_AMSURLSession
__ AuthKit: _OBJC_CLASS_$_AKAnisetteProvisioningController
__ AuthKit: _OBJC_CLASS_$_AKAppleIDSession
__ CFNetwork: _CFNetworkCopySystemProxySettings
__ CFNetwork: _kCFNetworkProxiesHTTPProxy
__ CoreData: _NSInferMappingModelAutomaticallyOption
__ CoreData: _NSMigratePersistentStoresAutomaticallyOption
__ CoreData: _NSOverwriteMergePolicy
__ CoreData: _NSPersistentStoreSaveConflictsErrorKey
__ CoreData: _NSReadOnlyPersistentStoreOption
__ CoreData: _NSSQLiteStoreType
__ CoreData: _NSStoreTypeKey
__ CoreData: _NSValidationKeyErrorKey
__ CoreData: _NSValidationObjectErrorKey
__ CoreData: _OBJC_CLASS_$_NSAtomicStore
__ CoreData: _OBJC_CLASS_$_NSAtomicStoreCacheNode
__ CoreData: _OBJC_CLASS_$_NSAttributeDescription
__ CoreData: _OBJC_CLASS_$_NSConstraintConflict
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSFetchIndexDescription
__ CoreData: _OBJC_CLASS_$_NSFetchIndexElementDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_CLASS_$_NSManagedObjectContext
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSMappingModel
__ CoreData: _OBJC_CLASS_$_NSMigrationManager
__ CoreData: _OBJC_CLASS_$_NSPersistentCloudKitContainer
__ CoreData: _OBJC_CLASS_$_NSPersistentContainer
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreCoordinator
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreDescription
__ CoreData: _OBJC_CLASS_$_NSPropertyDescription
__ CoreData: _OBJC_METACLASS_$_NSAtomicStore
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreData: _OBJC_METACLASS_$_NSPersistentCloudKitContainer
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryGetValueIfPresent
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopSourceSignal
__ CoreFoundation: _CFRunLoopStop
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: __CFBundleCreateUnique
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationIconURLKey
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSKeyValueChangeNotificationIsPriorKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedRecoveryOptionsErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSRecoveryAttempterErrorKey
__ Foundation: _NSSecureUnarchiveFromDataTransformerName
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLAuthenticationMethodServerTrust
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSURLFileScheme
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPCookieStorage
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLCredential
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValueTransformer
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSString
__ Foundation: _OBJC_METACLASS_$_NSValueTransformer
__ JavaScriptCore: _OBJC_CLASS_$_JSContext
__ JavaScriptCore: _OBJC_CLASS_$_JSManagedValue
__ JavaScriptCore: _OBJC_CLASS_$_JSValue
__ ManagedConfiguration: _MCFeatureAccountModificationAllowed
__ ManagedConfiguration: _MCFeatureAppAnalyticsAllowed
__ ManagedConfiguration: _MCFeatureAppInstallationAllowed
__ ManagedConfiguration: _MCFeatureMaximumAppsRating
__ ManagedConfiguration: _MCFeatureTVProviderModificationAllowed
__ ManagedConfiguration: _MCFeatureUIAppInstallationAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MetricsKit: _MTFieldNameOs
__ MetricsKit: _MTFieldNameTargetId
__ MetricsKit: _OBJC_CLASS_$_MTMetricsKit
__ MetricsKit: _OBJC_CLASS_$_MTUIKitStoreAMSBagDelegatePackage
__ OSAnalytics: _SimulateCrash
__ RunningBoardServices: _OBJC_CLASS_$_RBSAssertion
__ RunningBoardServices: _OBJC_CLASS_$_RBSDomainAttribute
__ RunningBoardServices: _OBJC_CLASS_$_RBSTarget
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecTaskCopySigningIdentifier
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTaskCreateWithAuditToken
__ Security: _SecTrustCopyCertificateChain
__ Security: _SecTrustCopyInfo
__ Security: _SecTrustEvaluateWithError
__ Security: _SecTrustStoreContains
__ Security: _SecTrustStoreForDomain
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccount
__ Security: _kSecAttrComment
__ Security: _kSecAttrCreationDate
__ Security: _kSecAttrCreator
__ Security: _kSecAttrDescription
__ Security: _kSecAttrGeneric
__ Security: _kSecAttrIsInvisible
__ Security: _kSecAttrIsNegative
__ Security: _kSecAttrLabel
__ Security: _kSecAttrModificationDate
__ Security: _kSecAttrService
__ Security: _kSecAttrSyncViewHint
__ Security: _kSecAttrSynchronizable
__ Security: _kSecAttrSynchronizableAny
__ Security: _kSecAttrType
__ Security: _kSecAttrViewHintLimitedPeersAllowed
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecReturnAttributes
__ Security: _kSecReturnData
__ Security: _kSecValueData
__ TCC: _TCCAccessCheckAuditToken
__ TCC: _TCCAccessCopyInformation
__ TCC: _TCCAccessCopyInformationForBundle
__ TCC: _TCCAccessReset
__ TCC: _TCCAccessSetForAuditToken
__ TCC: _TCCAccessSetForBundle
__ TCC: _kTCCInfoBundle
__ TCC: _kTCCInfoGranted
__ TCC: _kTCCInfoService
__ TCC: _kTCCServiceMSO
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: _CC_SHA256_Final
__ libSystem.B.dylib: _CC_SHA256_Init
__ libSystem.B.dylib: _CC_SHA256_Update
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: _OSAtomicCompareAndSwapIntBarrier
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _container_system_group_path_for_identifier
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_msg_destroy
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _mig_dealloc_reply_port
__ libSystem.B.dylib: _mig_get_reply_port
__ libSystem.B.dylib: _mig_put_reply_port
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_rwlock_destroy
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _pthread_rwlock_rdlock
__ libSystem.B.dylib: _pthread_rwlock_unlock
__ libSystem.B.dylib: _pthread_rwlock_wrlock
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: _vm_allocate
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _voucher_mach_msg_set
__ libcompression.dylib: _compression_stream_destroy
__ libcompression.dylib: _compression_stream_init
__ libcompression.dylib: _compression_stream_process
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x3
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_arrayInitWithTakeBackToFront
__ libswiftCore.dylib: _swift_arrayInitWithTakeFrontToBack
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_errorRetain
__ libswiftCore.dylib: _swift_getEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initStructMetadata
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_storeEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_willThrow
__ libswift_Concurrency.dylib: _swift_continuation_await
__ libswift_Concurrency.dylib: _swift_continuation_init
__ libswift_Concurrency.dylib: _swift_task_alloc
__ libswift_Concurrency.dylib: _swift_task_dealloc
__ libswift_Concurrency.dylib: _swift_task_switch
VSSubscriptionPredicateFactory : NSObject
 @property  VSAppInstallationInfoCenter *appInstallationInfoCenter

  // class methods
  +[VSSubscriptionPredicateFactory _subscriptionSourcePredicateTemplateValues]
  +[VSSubscriptionPredicateFactory _subscriptionSourceKindPredicateTemplateValues]
  +[VSSubscriptionPredicateFactory _subscriptionPredicateTemplateValues]

  // instance methods
  -[VSSubscriptionPredicateFactory _predicateTemplateForRequestKind:fromTask:]
  -[VSSubscriptionPredicateFactory setAppInstallationInfoCenter:]
  -[VSSubscriptionPredicateFactory _predicateTemplateForSourceKind:]
  -[VSSubscriptionPredicateFactory allowedSubscriptionSourceKindsPredicateForRequestKind:fromTask:]
  -[VSSubscriptionPredicateFactory .cxx_destruct]
  -[VSSubscriptionPredicateFactory subscriptionFetchPredicateForTask:withOptions:]
  -[VSSubscriptionPredicateFactory predicateByConvertingSubscriptionKeyPathsInPredicate:toAttributeKeysInEntity:]
  -[VSSubscriptionPredicateFactory _predicateTemplateForSourceOfTask:]
  -[VSSubscriptionPredicateFactory appInstallationInfoCenter]
  -[VSSubscriptionPredicateFactory _expressionByConvertingSubscriptionKeyPathInExpression:toAttributeKeysInEntity:]
  -[VSSubscriptionPredicateFactory allowedSubscriptionSourcesPredicateForRequestKind:fromTask:]
  -[VSSubscriptionPredicateFactory allowedSubscriptionsPredicateForRequestKind:fromTask:]
  -[VSSubscriptionPredicateFactory _predicateTemplateForSourceIdentifier:]
  -[VSSubscriptionPredicateFactory allowedSubscriptionsPredicateForTask:]
  -[VSSubscriptionPredicateFactory _predicateTemplateForAppPredicate:withTask:]
  -[VSSubscriptionPredicateFactory _topLevelAccessPredicateForRequestKind:fromTask:]


VSUserAccountServiceConnection : NSObject
 @property  NSXPCConnection *connection

  // instance methods
  -[VSUserAccountServiceConnection dealloc]
  -[VSUserAccountServiceConnection .cxx_destruct]
  -[VSUserAccountServiceConnection connection]
  -[VSUserAccountServiceConnection serviceWithErrorHandler:]
  -[VSUserAccountServiceConnection init]
  -[VSUserAccountServiceConnection setConnection:]


VSAppChannelsFilter : NSObject
 @property  NSSet *genericAppAdamIDs
 @property  NSSet *personalAppAdamIDs
 @property  NSSet *personalChannelIDs
 @property  NSArray *allChannelMappings
 @property  NSDictionary *appsByChannelID
 @property  NSArray *personalAppDescriptions

  // instance methods
  -[VSAppChannelsFilter .cxx_destruct]
  -[VSAppChannelsFilter init]
  -[VSAppChannelsFilter _updateAdamIDs]
  -[VSAppChannelsFilter setPersonalChannelIDs:]
  -[VSAppChannelsFilter setAllChannelMappings:]
  -[VSAppChannelsFilter personalAppDescriptions]
  -[VSAppChannelsFilter personalChannelIDs]
  -[VSAppChannelsFilter allChannelMappings]
  -[VSAppChannelsFilter personalAppAdamIDs]
  -[VSAppChannelsFilter setPersonalAppAdamIDs:]
  -[VSAppChannelsFilter genericAppAdamIDs]
  -[VSAppChannelsFilter setGenericAppAdamIDs:]
  -[VSAppChannelsFilter appsByChannelID]
  -[VSAppChannelsFilter setAppsByChannelID:]


VSAMSRequestOperation : VSAsyncOperation
 @property  VSOptional *result
 @property  NSOperationQueue *privateQueue
 @property  VSAMSRequest *request

  // instance methods
  -[VSAMSRequestOperation initWithRequest:]
  -[VSAMSRequestOperation setResult:]
  -[VSAMSRequestOperation setRequest:]
  -[VSAMSRequestOperation .cxx_destruct]
  -[VSAMSRequestOperation setPrivateQueue:]
  -[VSAMSRequestOperation privateQueue]
  -[VSAMSRequestOperation result]
  -[VSAMSRequestOperation request]
  -[VSAMSRequestOperation cancel]
  -[VSAMSRequestOperation init]
  -[VSAMSRequestOperation executionDidBegin]
  -[VSAMSRequestOperation urlForRequestType:completionHandler:]


VSStorefrontCodeLoadOperation : VSAsyncOperation
 @property  VSOptional *result
 @property  NSOperationQueue *privateQueue

  // instance methods
  -[VSStorefrontCodeLoadOperation setResult:]
  -[VSStorefrontCodeLoadOperation .cxx_destruct]
  -[VSStorefrontCodeLoadOperation setPrivateQueue:]
  -[VSStorefrontCodeLoadOperation privateQueue]
  -[VSStorefrontCodeLoadOperation result]
  -[VSStorefrontCodeLoadOperation init]
  -[VSStorefrontCodeLoadOperation executionDidBegin]


VSURLStringValueTransformer : NSValueTransformer
  // class methods
  +[VSURLStringValueTransformer transformedValueClass]
  +[VSURLStringValueTransformer allowsReverseTransformation]

  // instance methods
  -[VSURLStringValueTransformer transformedValue:]
  -[VSURLStringValueTransformer reverseTransformedValue:]


VSProxyDetector : NSObject
  // class methods
  +[VSProxyDetector isProxyConfigured]


VSDeveloperIdentityProviderChangeOperation : VSAsyncOperation
 @property  VSOptional *result
 @property  NSXPCConnection *connection
 @property  VSIdentityProvider *identityProvider
 @property  long long changeKind

  // instance methods
  -[VSDeveloperIdentityProviderChangeOperation setResult:]
  -[VSDeveloperIdentityProviderChangeOperation _serviceWithErrorHandler:]
  -[VSDeveloperIdentityProviderChangeOperation dealloc]
  -[VSDeveloperIdentityProviderChangeOperation .cxx_destruct]
  -[VSDeveloperIdentityProviderChangeOperation connection]
  -[VSDeveloperIdentityProviderChangeOperation result]
  -[VSDeveloperIdentityProviderChangeOperation init]
  -[VSDeveloperIdentityProviderChangeOperation executionDidBegin]
  -[VSDeveloperIdentityProviderChangeOperation setConnection:]
  -[VSDeveloperIdentityProviderChangeOperation identityProvider]
  -[VSDeveloperIdentityProviderChangeOperation setIdentityProvider:]
  -[VSDeveloperIdentityProviderChangeOperation changeKind]
  -[VSDeveloperIdentityProviderChangeOperation setChangeKind:]


VSJSEventTargetObject : VSJSObject <VSJSEventTargetObject>
 @property  NSMutableDictionary *listeners

  // instance methods
  -[VSJSEventTargetObject initWithContext:]
  -[VSJSEventTargetObject setListeners:]
  -[VSJSEventTargetObject listeners]
  -[VSJSEventTargetObject .cxx_destruct]
  -[VSJSEventTargetObject addEventListener:::]
  -[VSJSEventTargetObject removeEventListener::]
  -[VSJSEventTargetObject dispatchEvent:withInfo:]
  -[VSJSEventTargetObject _indexForListener:withEventType:]


VSAccountChannelsSaveOperation : VSAsyncOperation
 @property  VSAccountChannels *unsavedAccountChannels
 @property  VSAccountChannelsCenter *accountChannelsCenter
 @property  NSError *error

  // instance methods
  -[VSAccountChannelsSaveOperation error]
  -[VSAccountChannelsSaveOperation .cxx_destruct]
  -[VSAccountChannelsSaveOperation setError:]
  -[VSAccountChannelsSaveOperation init]
  -[VSAccountChannelsSaveOperation executionDidBegin]
  -[VSAccountChannelsSaveOperation initWithUnsavedAccountChannels:accountChannelsCenter:]
  -[VSAccountChannelsSaveOperation unsavedAccountChannels]
  -[VSAccountChannelsSaveOperation setUnsavedAccountChannels:]
  -[VSAccountChannelsSaveOperation accountChannelsCenter]
  -[VSAccountChannelsSaveOperation setAccountChannelsCenter:]


VSRemoteNotifier : NSObject
 @property  NSString *notificationObject
 @property  NSDistributedNotificationCenter *distributedNotificationCenter
 @property  NSString *remoteNotificationName
 @property  <VSRemoteNotifierDelegate> *delegate

  // class methods
  +[VSRemoteNotifier _currentProcessIdentifier]

  // instance methods
  -[VSRemoteNotifier postNotification]
  -[VSRemoteNotifier postNotificationWithUserInfo:]
  -[VSRemoteNotifier setDistributedNotificationCenter:]
  -[VSRemoteNotifier setDelegate:]
  -[VSRemoteNotifier delegate]
  -[VSRemoteNotifier dealloc]
  -[VSRemoteNotifier .cxx_destruct]
  -[VSRemoteNotifier initWithNotificationName:]
  -[VSRemoteNotifier remoteNotificationName]
  -[VSRemoteNotifier notificationObject]
  -[VSRemoteNotifier _didReceiveDistributedNotification:]
  -[VSRemoteNotifier distributedNotificationCenter]
  -[VSRemoteNotifier setNotificationObject:]
  -[VSRemoteNotifier init]


VSAccountStore : NSObject <VSRemoteNotifierDelegate>
 @property  VSAccount *cachedFirstAccount
 @property  BOOL needsUpdateCachedFirstAccount
 @property  VSKeychainEditingContext *keychainEditingContext
 @property  NSOperationQueue *keychainQueue
 @property  id changeObserver
 @property  VSRemoteNotifier *remoteNotifier
 @property  VSPreferences *preferences
 @property  NSArray *accounts
 @property  NSUndoManager *undoManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSAccountStore accountClass]
  +[VSAccountStore sharedAccountStore]

  // instance methods
  -[VSAccountStore accounts]
  -[VSAccountStore undoManager]
  -[VSAccountStore _sendRemoteNotification]
  -[VSAccountStore setUndoManager:]
  -[VSAccountStore changeObserver]
  -[VSAccountStore setPreferences:]
  -[VSAccountStore dealloc]
  -[VSAccountStore .cxx_destruct]
  -[VSAccountStore preferences]
  -[VSAccountStore remoteNotifier:didReceiveRemoteNotificationWithUserInfo:]
  -[VSAccountStore remoteNotifier]
  -[VSAccountStore setRemoteNotifier:]
  -[VSAccountStore setChangeObserver:]
  -[VSAccountStore init]
  -[VSAccountStore firstAccount]
  -[VSAccountStore _sendLocalNotification]
  -[VSAccountStore _uniqueIdentifierForKeychainItem:]
  -[VSAccountStore _accountForKeychainItem:]
  -[VSAccountStore _fetchAccountsSimulatingExpiredToken:forProviderIDs:completion:]
  -[VSAccountStore _insertModernKeychainItemForAccount:context:]
  -[VSAccountStore _insertLegacyKeychainItemForAccount:context:]
  -[VSAccountStore _keychainItemsWithLimit:]
  -[VSAccountStore isFirstAccountLoaded]
  -[VSAccountStore firstAccountIfLoaded]
  -[VSAccountStore _updateCachedFirstAccount]
  -[VSAccountStore fetchAccountsWithCompletionHandler:]
  -[VSAccountStore _insertAccount:inContext:error:]
  -[VSAccountStore saveAccounts:withCompletionHandler:]
  -[VSAccountStore removeAccounts:withCompletionHandler:]
  -[VSAccountStore cachedFirstAccount]
  -[VSAccountStore setCachedFirstAccount:]
  -[VSAccountStore needsUpdateCachedFirstAccount]
  -[VSAccountStore setNeedsUpdateCachedFirstAccount:]
  -[VSAccountStore keychainEditingContext]
  -[VSAccountStore setKeychainEditingContext:]
  -[VSAccountStore keychainQueue]
  -[VSAccountStore setKeychainQueue:]


VSValueTypeProperty : NSObject
 @property  NSString *name
 @property  unsigned long kind
 @property  NSSet *allowedClasses
 @property  id initialValue

  // class methods
  +[VSValueTypeProperty valueTypePropertyWithName:kind:allowedClasses:initialValue:]

  // instance methods
  -[VSValueTypeProperty kind]
  -[VSValueTypeProperty setInitialValue:]
  -[VSValueTypeProperty .cxx_destruct]
  -[VSValueTypeProperty initialValue]
  -[VSValueTypeProperty allowedClasses]
  -[VSValueTypeProperty setName:]
  -[VSValueTypeProperty setKind:]
  -[VSValueTypeProperty name]
  -[VSValueTypeProperty setAllowedClasses:]


VSValueType : NSObject
 @property  Class implementationClass
 @property  NSArray *properties

  // instance methods
  -[VSValueType setProperties:]
  -[VSValueType properties]
  -[VSValueType implementationClass]
  -[VSValueType .cxx_destruct]
  -[VSValueType isSuperclassAlsoValueType]
  -[VSValueType setImplementationClass:]


VSTimeoutOperation : VSAsyncOperation
 @property  NSOperationQueue *privateQueue
 @property  NSOperation *operation
 @property  double timeout

  // instance methods
  -[VSTimeoutOperation operation]
  -[VSTimeoutOperation .cxx_destruct]
  -[VSTimeoutOperation setPrivateQueue:]
  -[VSTimeoutOperation privateQueue]
  -[VSTimeoutOperation timeout]
  -[VSTimeoutOperation cancel]
  -[VSTimeoutOperation init]
  -[VSTimeoutOperation executionDidBegin]
  -[VSTimeoutOperation initWithOperation:timeout:]


VSPersistentSubscription : NSManagedObject
 @property  NSString *derivedSubscriptionInfo
 @property  NSDate *creationDate
 @property  NSDate *mostRecentSaveDate
 @property  NSNumber *sourceKind
 @property  NSString *sourceIdentifier
 @property  NSDate *expirationDate
 @property  NSNumber *accessLevel
 @property  NSArray *tierIdentifiers
 @property  NSString *subscriberIdentifierHash
 @property  NSString *billingIdentifier
 @property  NSString *providedSubscriptionInfo

  // class methods
  +[VSPersistentSubscription keyPathsForValuesAffectingDerivedSubscriptionInfo]

  // instance methods
  -[VSPersistentSubscription setAccessLevel:]
  -[VSPersistentSubscription awakeFromFetch]
  -[VSPersistentSubscription awakeFromInsert]
  -[VSPersistentSubscription setExpirationDate:]
  -[VSPersistentSubscription setCreationDate:]
  -[VSPersistentSubscription didChangeValueForKey:]
  -[VSPersistentSubscription _setNullResettableValue:forKey:]
  -[VSPersistentSubscription _validateNullableValue:forKey:error:]
  -[VSPersistentSubscription _updateDerivedSubscriptionInfo]
  -[VSPersistentSubscription _deriveValuesFromProvidedInfo:]
  -[VSPersistentSubscription setProvidedSubscriptionInfo:]
  -[VSPersistentSubscription setMostRecentSaveDate:]
  -[VSPersistentSubscription setSubscriberIdentifierHash:]
  -[VSPersistentSubscription setBillingIdentifier:]
  -[VSPersistentSubscription setTierIdentifiers:]
  -[VSPersistentSubscription validateAccessLevel:error:]
  -[VSPersistentSubscription validateCreationDate:error:]
  -[VSPersistentSubscription validateModificationDate:error:]
  -[VSPersistentSubscription validateExpirationDate:error:]
  -[VSPersistentSubscription validateSubscriberIdentifierHash:error:]
  -[VSPersistentSubscription validateTierIdentifiers:error:]
  -[VSPersistentSubscription validateBillingIdentifier:error:]


VSAccountSerializationCenter : NSObject
 @property  NSOperationQueue *serializationQueue
 @property  VSPersistentStorage *storage
 @property  NSUndoManager *undoManager

  // class methods
  +[VSAccountSerializationCenter defaultSerializationCenter]

  // instance methods
  -[VSAccountSerializationCenter setStorage:]
  -[VSAccountSerializationCenter undoManager]
  -[VSAccountSerializationCenter setUndoManager:]
  -[VSAccountSerializationCenter storage]
  -[VSAccountSerializationCenter .cxx_destruct]
  -[VSAccountSerializationCenter init]
  -[VSAccountSerializationCenter serializationQueue]
  -[VSAccountSerializationCenter exportDataWithCompletionHandler:]
  -[VSAccountSerializationCenter importData:withCompletionHandler:]
  -[VSAccountSerializationCenter setSerializationQueue:]


VSStateTransition : NSObject
 @property  VSOptional *previousState
 @property  VSOptional *triggeringEvent
 @property  VSOptional *nextState

  // instance methods
  -[VSStateTransition previousState]
  -[VSStateTransition .cxx_destruct]
  -[VSStateTransition setPreviousState:]
  -[VSStateTransition init]
  -[VSStateTransition triggeringEvent]
  -[VSStateTransition nextState]
  -[VSStateTransition setNextState:]
  -[VSStateTransition setTriggeringEvent:]


VSStateMachine : NSObject
 @property  NSOperationQueue *transitionQueue
 @property  VSOptional *currentState
 @property  NSMutableArray *enqueuedTransitions
 @property  NSMutableDictionary *transitionTable
 @property  NSMutableDictionary *ignoredEventsByState
 @property  NSString *name
 @property  <VSStateMachineDelegate> *delegate

  // instance methods
  -[VSStateMachine setCurrentState:]
  -[VSStateMachine setDelegate:]
  -[VSStateMachine delegate]
  -[VSStateMachine enqueueEvent:]
  -[VSStateMachine .cxx_destruct]
  -[VSStateMachine setName:]
  -[VSStateMachine name]
  -[VSStateMachine currentState]
  -[VSStateMachine init]
  -[VSStateMachine transitionTable]
  -[VSStateMachine _enteringState:]
  -[VSStateMachine _exitingState:]
  -[VSStateMachine _handleEnqueuedTransitions]
  -[VSStateMachine _setDestinationState:forEvent:inState:ignoringEvent:]
  -[VSStateMachine ignoreEvent:inState:]
  -[VSStateMachine setDestinationState:forEvent:inState:]
  -[VSStateMachine activateWithState:]
  -[VSStateMachine transitionQueue]
  -[VSStateMachine setTransitionQueue:]
  -[VSStateMachine enqueuedTransitions]
  -[VSStateMachine setEnqueuedTransitions:]
  -[VSStateMachine setTransitionTable:]
  -[VSStateMachine ignoredEventsByState]
  -[VSStateMachine setIgnoredEventsByState:]


VSFileReadOperation : VSAsyncOperation
 @property  VSOptional *result
 @property  NSURL *source

  // instance methods
  -[VSFileReadOperation source]
  -[VSFileReadOperation setSource:]
  -[VSFileReadOperation setResult:]
  -[VSFileReadOperation .cxx_destruct]
  -[VSFileReadOperation result]
  -[VSFileReadOperation init]
  -[VSFileReadOperation executionDidBegin]


VSBase64DataValueTransformer : NSValueTransformer
  // class methods
  +[VSBase64DataValueTransformer transformedValueClass]
  +[VSBase64DataValueTransformer allowsReverseTransformation]

  // instance methods
  -[VSBase64DataValueTransformer transformedValue:]
  -[VSBase64DataValueTransformer reverseTransformedValue:]


VSJSAppError : VSJSObject <VSJSAppError>
 @property  unsigned long code
 @property  NSString *message

  // instance methods
  -[VSJSAppError setMessage:]
  -[VSJSAppError .cxx_destruct]
  -[VSJSAppError setCode:]
  -[VSJSAppError code]
  -[VSJSAppError message]


VSDataCompressionValueTransformer : NSValueTransformer
  // class methods
  +[VSDataCompressionValueTransformer transformedValueClass]
  +[VSDataCompressionValueTransformer allowsReverseTransformation]

  // instance methods
  -[VSDataCompressionValueTransformer transformedValue:]
  -[VSDataCompressionValueTransformer reverseTransformedValue:]
  -[VSDataCompressionValueTransformer _dataByPerformingOperation:onData:]


VSPersistentContainer : NSObject
 @property  NSManagedObjectContext *viewContext
 @property  NSPersistentContainer *persistentContainer
 @property  long long modelVersion

  // class methods
  +[VSPersistentContainer directoryURL]
  +[VSPersistentContainer legacyDirectoryURL]

  // instance methods
  -[VSPersistentContainer performBlock:]
  -[VSPersistentContainer modelVersion]
  -[VSPersistentContainer viewContext]
  -[VSPersistentContainer persistentContainer]
  -[VSPersistentContainer initWithModelVersion:]
  -[VSPersistentContainer migrateContainerIfNecessary]
  -[VSPersistentContainer developerIdentityProviderFetchRequest]
  -[VSPersistentContainer .cxx_destruct]
  -[VSPersistentContainer setPersistentContainer:]
  -[VSPersistentContainer insertDeveloperIdentityProviderInContext:]
  -[VSPersistentContainer setViewContext:]
  -[VSPersistentContainer init]


VSRestrictionsCenter : NSObject <VSManagedProfileConnectionObserver>
 @property  VSManagedProfileConnection *profileConnection
 @property  BOOL accountModificationAllowed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSRestrictionsCenter defaultRestrictionsCenter]

  // instance methods
  -[VSRestrictionsCenter dealloc]
  -[VSRestrictionsCenter .cxx_destruct]
  -[VSRestrictionsCenter setProfileConnection:]
  -[VSRestrictionsCenter profileConnection]
  -[VSRestrictionsCenter init]
  -[VSRestrictionsCenter profileConnectionSettingsChanged:]
  -[VSRestrictionsCenter profileConnectionProfileChanged:]
  -[VSRestrictionsCenter _updateAccountModificationAllowed]
  -[VSRestrictionsCenter _canInstallAppsAtAll]
  -[VSRestrictionsCenter canInstallAppWithRating:]
  -[VSRestrictionsCenter isAcountModificationAllowed]
  -[VSRestrictionsCenter setAccountModificationAllowed:]


VSAccountManager : NSObject <VSViewServiceRequestOperationDelegate>
 @property  VSSecurityTask *securityTask
 @property  VSPrivacyInfoCenter *privacyInfoCenter
 @property  VSViewServiceRequestCenter *requestCenter
 @property  VSLinkedOnOrAfterChecker *linkedOnOrAfterChecker
 @property  <VSAccountManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSAccountManager setDelegate:]
  -[VSAccountManager delegate]
  -[VSAccountManager .cxx_destruct]
  -[VSAccountManager setLinkedOnOrAfterChecker:]
  -[VSAccountManager linkedOnOrAfterChecker]
  -[VSAccountManager init]
  -[VSAccountManager viewServiceRequestOperation:presentViewController:]
  -[VSAccountManager viewServiceRequestOperation:dismissViewController:]
  -[VSAccountManager viewServiceRequestOperation:shouldAuthenticateAccountProviderWithIdentifier:]
  -[VSAccountManager checkAccessStatusWithOptions:completionHandler:]
  -[VSAccountManager _enqueueViewServiceRequest:completionHandler:]
  -[VSAccountManager enqueueAccountMetadataRequest:completionHandler:]
  -[VSAccountManager securityTask]
  -[VSAccountManager setSecurityTask:]
  -[VSAccountManager privacyInfoCenter]
  -[VSAccountManager setPrivacyInfoCenter:]
  -[VSAccountManager requestCenter]
  -[VSAccountManager setRequestCenter:]


VSTreeNode : NSObject
 @property  VSTreeNode *parentNode
 @property  NSMutableArray *children
 @property  id representedObject
 @property  NSIndexPath *indexPath
 @property  BOOL leaf
 @property  NSArray *childNodes
 @property  NSMutableArray *mutableChildNodes

  // class methods
  +[VSTreeNode treeNodeWithRepresentedObject:]
  +[VSTreeNode keyPathsForValuesAffectingIndexPath]
  +[VSTreeNode keyPathsForValuesAffectingLeaf]

  // instance methods
  -[VSTreeNode children]
  -[VSTreeNode indexPath]
  -[VSTreeNode setChildren:]
  -[VSTreeNode .cxx_destruct]
  -[VSTreeNode init]
  -[VSTreeNode childNodes]
  -[VSTreeNode parentNode]
  -[VSTreeNode representedObject]
  -[VSTreeNode setParentNode:]
  -[VSTreeNode isLeaf]
  -[VSTreeNode initWithRepresentedObject:]
  -[VSTreeNode insertChildNodes:atIndexes:]
  -[VSTreeNode removeChildNodesAtIndexes:]
  -[VSTreeNode mutableChildNodes]
  -[VSTreeNode descendantNodeAtIndexPath:]
  -[VSTreeNode _descendantNodesAtDepth:]
  -[VSTreeNode enumerateDescendantsWithOptions:usingBlock:]


VSAccountApplicationProvider : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *displayName
 @property  NSString *identifier
 @property  NSString *localizedDisplayName

  // class methods
  +[VSAccountApplicationProvider new]
  +[VSAccountApplicationProvider supportsSecureCoding]

  // instance methods
  -[VSAccountApplicationProvider identifier]
  -[VSAccountApplicationProvider encodeWithCoder:]
  -[VSAccountApplicationProvider .cxx_destruct]
  -[VSAccountApplicationProvider setDisplayName:]
  -[VSAccountApplicationProvider localizedDisplayName]
  -[VSAccountApplicationProvider setIdentifier:]
  -[VSAccountApplicationProvider copyWithZone:]
  -[VSAccountApplicationProvider displayName]
  -[VSAccountApplicationProvider isEqual:]
  -[VSAccountApplicationProvider init]
  -[VSAccountApplicationProvider initWithCoder:]
  -[VSAccountApplicationProvider initWithLocalizedDisplayName:identifier:]


VSTrieNode : NSObject
 @property  NSMutableArray *objects
 @property  NSMutableDictionary *next

  // instance methods
  -[VSTrieNode .cxx_destruct]
  -[VSTrieNode setObjects:]
  -[VSTrieNode objects]
  -[VSTrieNode setNext:]
  -[VSTrieNode init]
  -[VSTrieNode next]


VSTrie : NSObject
 @property  VSTrieNode *root

  // instance methods
  -[VSTrie .cxx_destruct]
  -[VSTrie root]
  -[VSTrie init]
  -[VSTrie setRoot:]
  -[VSTrie insertString:withAssociatedObject:]
  -[VSTrie objectsMatchingPrefix:]


VSApplicationUserAccount : NSObject <VSApplicationUserAccount>
 @property  VSUserAccount *originatingUserAccount
 @property  NSString *updateURL
 @property  BOOL requiresSystemTrust
 @property  NSString *bundleId
 @property  NSString *identifier
 @property  long long accountType
 @property  BOOL deleted
 @property  NSDate *subscriptionBillingCycleEndDate
 @property  NSArray *tierIdentifiers
 @property  NSString *billingIdentifier
 @property  NSString *authenticationData
 @property  long long deviceCategory

  // class methods
  +[VSApplicationUserAccount nativeUserAccountsForJSUserAccounts:ForProviderID:allowedBundleIDs:]
  +[VSApplicationUserAccount userAccountsWithNativeUserAccounts:]

  // instance methods
  -[VSApplicationUserAccount isDeleted]
  -[VSApplicationUserAccount identifier]
  -[VSApplicationUserAccount setDeleted:]
  -[VSApplicationUserAccount setAccountType:]
  -[VSApplicationUserAccount .cxx_destruct]
  -[VSApplicationUserAccount setIdentifier:]
  -[VSApplicationUserAccount bundleId]
  -[VSApplicationUserAccount deviceCategory]
  -[VSApplicationUserAccount setBundleId:]
  -[VSApplicationUserAccount accountType]
  -[VSApplicationUserAccount setDeviceCategory:]
  -[VSApplicationUserAccount setBillingIdentifier:]
  -[VSApplicationUserAccount setTierIdentifiers:]
  -[VSApplicationUserAccount tierIdentifiers]
  -[VSApplicationUserAccount billingIdentifier]
  -[VSApplicationUserAccount initWithUserAcount:]
  -[VSApplicationUserAccount updateURL]
  -[VSApplicationUserAccount setUpdateURL:]
  -[VSApplicationUserAccount requiresSystemTrust]
  -[VSApplicationUserAccount setRequiresSystemTrust:]
  -[VSApplicationUserAccount subscriptionBillingCycleEndDate]
  -[VSApplicationUserAccount setSubscriptionBillingCycleEndDate:]
  -[VSApplicationUserAccount authenticationData]
  -[VSApplicationUserAccount setAuthenticationData:]
  -[VSApplicationUserAccount nativeUserAccountForProviderID:allowedBundleIDs:]
  -[VSApplicationUserAccount originatingUserAccount]
  -[VSApplicationUserAccount setOriginatingUserAccount:]


VSSubscriptionServiceConnection : NSObject
 @property  NSXPCConnection *connection

  // instance methods
  -[VSSubscriptionServiceConnection dealloc]
  -[VSSubscriptionServiceConnection .cxx_destruct]
  -[VSSubscriptionServiceConnection connection]
  -[VSSubscriptionServiceConnection serviceWithErrorHandler:]
  -[VSSubscriptionServiceConnection init]
  -[VSSubscriptionServiceConnection setConnection:]


VSAMSRequest : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *methodName
 @property  unsigned long requestType
 @property  NSString *providerIdentifier
 @property  NSDictionary *parameters
 @property  VSAuditToken *auditToken

  // class methods
  +[VSAMSRequest supportsSecureCoding]

  // instance methods
  -[VSAMSRequest parameters]
  -[VSAMSRequest providerIdentifier]
  -[VSAMSRequest encodeWithCoder:]
  -[VSAMSRequest requestType]
  -[VSAMSRequest setAuditToken:]
  -[VSAMSRequest .cxx_destruct]
  -[VSAMSRequest setRequestType:]
  -[VSAMSRequest auditToken]
  -[VSAMSRequest setParameters:]
  -[VSAMSRequest setProviderIdentifier:]
  -[VSAMSRequest copyWithZone:]
  -[VSAMSRequest isEqual:]
  -[VSAMSRequest init]
  -[VSAMSRequest initWithCoder:]
  -[VSAMSRequest methodName]
  -[VSAMSRequest setMethodName:]


VSJSAppResponsePayload : VSJSObject <VSJSAppResponsePayload>
 @property  NSArray *userAccounts

  // instance methods
  -[VSJSAppResponsePayload .cxx_destruct]
  -[VSJSAppResponsePayload userAccounts]
  -[VSJSAppResponsePayload setUserAccounts:]


VSJSUserAccount : VSJSObject <VSJSUserAccount>
 @property  VSUserAccount *originatingUserAccount
 @property  NSString *updateURL
 @property  BOOL requiresSystemTrust
 @property  NSString *bundleId
 @property  NSString *identifier
 @property  long long accountType
 @property  BOOL deleted
 @property  NSDate *subscriptionBillingCycleEndDate
 @property  NSArray *tierIdentifiers
 @property  NSString *billingIdentifier
 @property  NSString *authenticationData
 @property  long long deviceCategory

  // class methods
  +[VSJSUserAccount userAccountsWithNativeUserAccounts:]
  +[VSJSUserAccount nativeUserAccountsForJSUserAccounts:]

  // instance methods
  -[VSJSUserAccount isDeleted]
  -[VSJSUserAccount identifier]
  -[VSJSUserAccount setDeleted:]
  -[VSJSUserAccount setAccountType:]
  -[VSJSUserAccount .cxx_destruct]
  -[VSJSUserAccount setIdentifier:]
  -[VSJSUserAccount bundleId]
  -[VSJSUserAccount deviceCategory]
  -[VSJSUserAccount setBundleId:]
  -[VSJSUserAccount accountType]
  -[VSJSUserAccount setDeviceCategory:]
  -[VSJSUserAccount initWithUserAccount:]
  -[VSJSUserAccount setBillingIdentifier:]
  -[VSJSUserAccount setTierIdentifiers:]
  -[VSJSUserAccount tierIdentifiers]
  -[VSJSUserAccount billingIdentifier]
  -[VSJSUserAccount updateURL]
  -[VSJSUserAccount setUpdateURL:]
  -[VSJSUserAccount requiresSystemTrust]
  -[VSJSUserAccount setRequiresSystemTrust:]
  -[VSJSUserAccount subscriptionBillingCycleEndDate]
  -[VSJSUserAccount setSubscriptionBillingCycleEndDate:]
  -[VSJSUserAccount authenticationData]
  -[VSJSUserAccount setAuthenticationData:]
  -[VSJSUserAccount originatingUserAccount]
  -[VSJSUserAccount setOriginatingUserAccount:]
  -[VSJSUserAccount nativeUserAccount]


VSVerificationStateResetOperation : VSAsyncOperation
 @property  NSURLSessionTask *resetStateTask
 @property  NSOperationQueue *privateQueue
 @property  VSOptional *result
 @property  VSAuditToken *auditToken

  // instance methods
  -[VSVerificationStateResetOperation setResult:]
  -[VSVerificationStateResetOperation setAuditToken:]
  -[VSVerificationStateResetOperation .cxx_destruct]
  -[VSVerificationStateResetOperation setPrivateQueue:]
  -[VSVerificationStateResetOperation privateQueue]
  -[VSVerificationStateResetOperation auditToken]
  -[VSVerificationStateResetOperation result]
  -[VSVerificationStateResetOperation cancel]
  -[VSVerificationStateResetOperation init]
  -[VSVerificationStateResetOperation executionDidBegin]
  -[VSVerificationStateResetOperation _resetVerificationStateWithURL:]
  -[VSVerificationStateResetOperation resetStateTask]
  -[VSVerificationStateResetOperation setResetStateTask:]


VSViewServiceRequest : NSObject <NSCopying, NSSecureCoding>
 @property  VSOptional *requestingAppDisplayName
 @property  NSString *requestingAppAdamID
 @property  BOOL preAuthRequest
 @property  BOOL allowsPrivacyUI
 @property  BOOL requiresPrivacyUI
 @property  BOOL canVetoAuthentication
 @property  VSAccountMetadataRequest *accountMetadataRequest
 @property  BOOL allowsAuthenticationUI
 @property  NSArray *supportedIdentityProviderIdentifiers
 @property  NSArray *featuredIdentityProviderIdentifiers
 @property  NSArray *applicationAccountProviders
 @property  BOOL shouldInferFeaturedProviders
 @property  BOOL shouldReturnErrorOnTVProviderFeatureUnsupportedByStorefront
 @property  NSArray *supportedAccountProviderAuthenticationSchemes
 @property  NSString *localizedVideoTitle
 @property  NSString *accountProviderAuthenticationToken

  // class methods
  +[VSViewServiceRequest supportsSecureCoding]

  // instance methods
  -[VSViewServiceRequest encodeWithCoder:]
  -[VSViewServiceRequest .cxx_destruct]
  -[VSViewServiceRequest copyWithZone:]
  -[VSViewServiceRequest isEqual:]
  -[VSViewServiceRequest init]
  -[VSViewServiceRequest initWithCoder:]
  -[VSViewServiceRequest allowsAuthenticationUI]
  -[VSViewServiceRequest supportedIdentityProviderIdentifiers]
  -[VSViewServiceRequest featuredIdentityProviderIdentifiers]
  -[VSViewServiceRequest applicationAccountProviders]
  -[VSViewServiceRequest supportedAccountProviderAuthenticationSchemes]
  -[VSViewServiceRequest localizedVideoTitle]
  -[VSViewServiceRequest accountProviderAuthenticationToken]
  -[VSViewServiceRequest isPreAuthRequest]
  -[VSViewServiceRequest allowsPrivacyUI]
  -[VSViewServiceRequest setAllowsPrivacyUI:]
  -[VSViewServiceRequest requiresPrivacyUI]
  -[VSViewServiceRequest setRequiresPrivacyUI:]
  -[VSViewServiceRequest canVetoAuthentication]
  -[VSViewServiceRequest setCanVetoAuthentication:]
  -[VSViewServiceRequest accountMetadataRequest]
  -[VSViewServiceRequest setAccountMetadataRequest:]
  -[VSViewServiceRequest shouldInferFeaturedProviders]
  -[VSViewServiceRequest setShouldInferFeaturedProviders:]
  -[VSViewServiceRequest shouldReturnErrorOnTVProviderFeatureUnsupportedByStorefront]
  -[VSViewServiceRequest setShouldReturnErrorOnTVProviderFeatureUnsupportedByStorefront:]
  -[VSViewServiceRequest requestingAppDisplayName]
  -[VSViewServiceRequest setRequestingAppDisplayName:]
  -[VSViewServiceRequest requestingAppAdamID]
  -[VSViewServiceRequest setRequestingAppAdamID:]


VSLinkedOnOrAfterChecker : NSObject
  // instance methods
  -[VSLinkedOnOrAfterChecker _minimumVersionsForBehavior:]
  -[VSLinkedOnOrAfterChecker shouldPerformBehavior:]


VSDeveloperSettingsFetchOperation : VSAsyncOperation
 @property  VSOptional *result
 @property  VSDeveloperServiceConnection *connection

  // instance methods
  -[VSDeveloperSettingsFetchOperation setResult:]
  -[VSDeveloperSettingsFetchOperation .cxx_destruct]
  -[VSDeveloperSettingsFetchOperation connection]
  -[VSDeveloperSettingsFetchOperation result]
  -[VSDeveloperSettingsFetchOperation init]
  -[VSDeveloperSettingsFetchOperation executionDidBegin]
  -[VSDeveloperSettingsFetchOperation setConnection:]


VSUnbinder : NSObject
 @property  BOOL invalid
 @property  NSMapTable *bindingsByBinder

  // instance methods
  -[VSUnbinder isInvalid]
  -[VSUnbinder setInvalid:]
  -[VSUnbinder dealloc]
  -[VSUnbinder .cxx_destruct]
  -[VSUnbinder init]
  -[VSUnbinder binder:didEstablishBinding:]
  -[VSUnbinder binder:didTearDownBinding:]
  -[VSUnbinder bindingsByBinder]
  -[VSUnbinder setBindingsByBinder:]


VSSubscription : NSObject <NSCopying, NSSecureCoding>
 @property  NSDate *creationDate
 @property  NSDate *modificationDate
 @property  NSString *subscriptionInfo
 @property  NSString *derivedSubscriptionInfo
 @property  NSString *providedSubscriptionInfo
 @property  VSSubscriptionSource *source
 @property  NSData *versionHash
 @property  NSString *subscriberIdentifierHash
 @property  NSDate *expirationDate
 @property  long long accessLevel
 @property  NSArray *tierIdentifiers
 @property  NSString *billingIdentifier

  // class methods
  +[VSSubscription supportsSecureCoding]
  +[VSSubscription keyPathsForValuesAffectingSubscriptionInfo]
  +[VSSubscription keyPathsForValuesAffectingVersionHash]

  // instance methods
  -[VSSubscription source]
  -[VSSubscription setAccessLevel:]
  -[VSSubscription modificationDate]
  -[VSSubscription versionHash]
  -[VSSubscription setModificationDate:]
  -[VSSubscription expirationDate]
  -[VSSubscription setSource:]
  -[VSSubscription setExpirationDate:]
  -[VSSubscription encodeWithCoder:]
  -[VSSubscription setNilValueForKey:]
  -[VSSubscription .cxx_destruct]
  -[VSSubscription accessLevel]
  -[VSSubscription creationDate]
  -[VSSubscription setSubscriptionInfo:]
  -[VSSubscription copyWithZone:]
  -[VSSubscription setCreationDate:]
  -[VSSubscription isEqual:]
  -[VSSubscription init]
  -[VSSubscription initWithCoder:]
  -[VSSubscription subscriptionInfo]
  -[VSSubscription setProvidedSubscriptionInfo:]
  -[VSSubscription setSubscriberIdentifierHash:]
  -[VSSubscription setBillingIdentifier:]
  -[VSSubscription setTierIdentifiers:]
  -[VSSubscription derivedSubscriptionInfo]
  -[VSSubscription tierIdentifiers]
  -[VSSubscription subscriberIdentifierHash]
  -[VSSubscription billingIdentifier]
  -[VSSubscription providedSubscriptionInfo]
  -[VSSubscription _updateHash:withValueForProperty:]
  -[VSSubscription setDerivedSubscriptionInfo:]


VSDeveloperService : VSServiceListener
  // instance methods
  -[VSDeveloperService init]


VSSubscriptionAvailabilityTypeJSONValueTransformer : NSValueTransformer
  // class methods
  +[VSSubscriptionAvailabilityTypeJSONValueTransformer transformedValueClass]
  +[VSSubscriptionAvailabilityTypeJSONValueTransformer allowsReverseTransformation]

  // instance methods
  -[VSSubscriptionAvailabilityTypeJSONValueTransformer transformedValue:]
  -[VSSubscriptionAvailabilityTypeJSONValueTransformer reverseTransformedValue:]


VSMetricsCenter : NSObject <MTBaseEventDataProviderDelegate, VSRemoteNotifierDelegate, VSManagedProfileConnectionObserver>
 @property  MTMetricsKit *mainMetricsKit
 @property  AMSBag *bag
 @property  NSObject<OS_dispatch_queue> *eventQueue
 @property  VSPreferences *preferences
 @property  VSRemoteNotifier *remoteNotifier
 @property  NSOperationQueue *privateQueue
 @property  BOOL optedIn
 @property  VSIdentityProvider *currentIdentityProvider
 @property  BOOL currentIdentityProviderSupportsSTB
 @property  BOOL currentIdentityProviderIsFullySupported
 @property  BOOL fetchedSetTopBoxProfile
 @property  VSSetTopBoxProfile *stbProfile
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSMetricsCenter sharedMetricsCenter]

  // instance methods
  -[VSMetricsCenter eventQueue]
  -[VSMetricsCenter setEventQueue:]
  -[VSMetricsCenter setOptedIn:]
  -[VSMetricsCenter setBag:]
  -[VSMetricsCenter recordNowPlayingBrokenEventWithBundleID:]
  -[VSMetricsCenter setPreferences:]
  -[VSMetricsCenter userID]
  -[VSMetricsCenter .cxx_destruct]
  -[VSMetricsCenter setPrivateQueue:]
  -[VSMetricsCenter preferences]
  -[VSMetricsCenter privateQueue]
  -[VSMetricsCenter remoteNotifier:didReceiveRemoteNotificationWithUserInfo:]
  -[VSMetricsCenter bag]
  -[VSMetricsCenter remoteNotifier]
  -[VSMetricsCenter setRemoteNotifier:]
  -[VSMetricsCenter recordFederatedPunchoutEventWithError:metadata:]
  -[VSMetricsCenter optedIn]
  -[VSMetricsCenter init]
  -[VSMetricsCenter accountStoreDidChange]
  -[VSMetricsCenter profileConnectionSettingsChanged:]
  -[VSMetricsCenter profileConnectionProfileChanged:]
  -[VSMetricsCenter capacityData:]
  -[VSMetricsCenter capacityDataAvailable:]
  -[VSMetricsCenter capacityDisk:]
  -[VSMetricsCenter capacitySystem:]
  -[VSMetricsCenter capacitySystemAvailable:]
  -[VSMetricsCenter clientId:]
  -[VSMetricsCenter connection:]
  -[VSMetricsCenter dsId:]
  -[VSMetricsCenter hardwareModel:]
  -[VSMetricsCenter isSignedIn:]
  -[VSMetricsCenter pageUrl:]
  -[VSMetricsCenter pixelRatio:]
  -[VSMetricsCenter resourceRevNum:]
  -[VSMetricsCenter screenHeight:]
  -[VSMetricsCenter screenWidth:]
  -[VSMetricsCenter windowInnerHeight:]
  -[VSMetricsCenter windowInnerWidth:]
  -[VSMetricsCenter windowOuterHeight:]
  -[VSMetricsCenter windowOuterWidth:]
  -[VSMetricsCenter xpPostFrequency:]
  -[VSMetricsCenter xpSendMethod:]
  -[VSMetricsCenter recordSignInEventWithProviderIdentifier:supportedProvider:channelAdamID:error:]
  -[VSMetricsCenter recordSignOutEventWithProviderIdentifier:]
  -[VSMetricsCenter recordMetadataRequestWithProviderIdentifier:channelAdamID:error:]
  -[VSMetricsCenter recordSTBOptOutEventWithError:]
  -[VSMetricsCenter recordEnterEventWithPage:pageType:]
  -[VSMetricsCenter recordExitEventWithPage:pageType:]
  -[VSMetricsCenter recordClickEventWithPage:pageType:target:]
  -[VSMetricsCenter recordInvalidTemplateErrorWithProviderAppAdamID:]
  -[VSMetricsCenter fetchSetTopBoxProfile]
  -[VSMetricsCenter mutableBaseFields]
  -[VSMetricsCenter flexibleBaseFields]
  -[VSMetricsCenter currentProviderIsSetTopBoxProvider]
  -[VSMetricsCenter hasSetTopBoxProfile]
  -[VSMetricsCenter underlyingErrorsArray:]
  -[VSMetricsCenter mainMetricsKit]
  -[VSMetricsCenter setMainMetricsKit:]
  -[VSMetricsCenter currentIdentityProvider]
  -[VSMetricsCenter setCurrentIdentityProvider:]
  -[VSMetricsCenter currentIdentityProviderSupportsSTB]
  -[VSMetricsCenter setCurrentIdentityProviderSupportsSTB:]
  -[VSMetricsCenter currentIdentityProviderIsFullySupported]
  -[VSMetricsCenter setCurrentIdentityProviderIsFullySupported:]
  -[VSMetricsCenter fetchedSetTopBoxProfile]
  -[VSMetricsCenter setFetchedSetTopBoxProfile:]
  -[VSMetricsCenter stbProfile]
  -[VSMetricsCenter setStbProfile:]


VSObservance : NSObject
 @property  BOOL observing
 @property  id object
 @property  NSString *keyPath
 @property  unsigned long options
 @property  <VSObservanceDelegate> *delegate

  // instance methods
  -[VSObservance stopObserving]
  -[VSObservance startObserving]
  -[VSObservance setDelegate:]
  -[VSObservance delegate]
  -[VSObservance dealloc]
  -[VSObservance .cxx_destruct]
  -[VSObservance keyPath]
  -[VSObservance object]
  -[VSObservance options]
  -[VSObservance isObserving]
  -[VSObservance observeValueForKeyPath:ofObject:change:context:]
  -[VSObservance initWithObject:keyPath:options:]
  -[VSObservance setObserving:]
  -[VSObservance init]


VSAccountChannels : NSObject <NSCopying>
 @property  NSString *providerID
 @property  NSString *adamID
 @property  NSSet *channelIDs
 @property  NSDictionary *providerInfo

  // class methods
  +[VSAccountChannels deserializationResultWithData:]

  // instance methods
  -[VSAccountChannels providerID]
  -[VSAccountChannels channelIDs]
  -[VSAccountChannels .cxx_destruct]
  -[VSAccountChannels setChannelIDs:]
  -[VSAccountChannels copyWithZone:]
  -[VSAccountChannels adamID]
  -[VSAccountChannels isEqual:]
  -[VSAccountChannels init]
  -[VSAccountChannels setProviderID:]
  -[VSAccountChannels setAdamID:]
  -[VSAccountChannels providerInfo]
  -[VSAccountChannels setProviderInfo:]
  -[VSAccountChannels serializationResultWithFormat:]
  -[VSAccountChannels serializationResult]


VSCasePreservingString : NSString
  // instance methods
  -[VSCasePreservingString lowercaseString]
  -[VSCasePreservingString getCharacters:range:]
  -[VSCasePreservingString length]
  -[VSCasePreservingString .cxx_destruct]
  -[VSCasePreservingString initWithString:]
  -[VSCasePreservingString uppercaseString]
  -[VSCasePreservingString characterAtIndex:]
  -[VSCasePreservingString capitalizedString]
  -[VSCasePreservingString localizedCapitalizedString]
  -[VSCasePreservingString capitalizedStringWithLocale:]
  -[VSCasePreservingString localizedLowercaseString]
  -[VSCasePreservingString lowercaseStringWithLocale:]
  -[VSCasePreservingString localizedUppercaseString]
  -[VSCasePreservingString uppercaseStringWithLocale:]


VSIdentityProvider : NSObject <NSCopying, NSSecureCoding>
 @property  VSOptional *uniqueID
 @property  VSOptional *providerID
 @property  VSOptional *providerInfo
 @property  NSString *nameForSorting
 @property  NSNumber *rankForSorting
 @property  VSOptional *displayName
 @property  NSArray *supportedTemplates
 @property  NSArray *supportedAuthenticationSchemes
 @property  BOOL prohibitedByStore
 @property  BOOL developer
 @property  BOOL application
 @property  NSURL *authenticationURL
 @property  NSURL *appStoreRoomURL
 @property  NSArray *appAdamIDs
 @property  NSString *defaultAppId
 @property  NSString *providerArtworkTemplateURL
 @property  BOOL isSetTopBoxSupported
 @property  BOOL shouldShowChannelApps
 @property  BOOL shouldShowSubscriptionApps
 @property  BOOL isSTBOptOutAllowed
 @property  NSString *providerAppArtworkTemplateURL
 @property  NSNumber *appPlacementPosition
 @property  NSString *userToken
 @property  NSArray *allPersonalizedAppDescriptions
 @property  NSArray *nonChannelAppDescriptions
 @property  NSArray *storefronts

  // class methods
  +[VSIdentityProvider supportsSecureCoding]

  // instance methods
  -[VSIdentityProvider providerID]
  -[VSIdentityProvider uniqueID]
  -[VSIdentityProvider encodeWithCoder:]
  -[VSIdentityProvider initWithApplicationProvider:]
  -[VSIdentityProvider isApplication]
  -[VSIdentityProvider .cxx_destruct]
  -[VSIdentityProvider setApplication:]
  -[VSIdentityProvider userToken]
  -[VSIdentityProvider copyWithZone:]
  -[VSIdentityProvider setUniqueID:]
  -[VSIdentityProvider displayName]
  -[VSIdentityProvider setUserToken:]
  -[VSIdentityProvider isEqual:]
  -[VSIdentityProvider init]
  -[VSIdentityProvider setProviderID:]
  -[VSIdentityProvider initWithCoder:]
  -[VSIdentityProvider appAdamIDs]
  -[VSIdentityProvider providerInfo]
  -[VSIdentityProvider setProviderInfo:]
  -[VSIdentityProvider setNameForSorting:]
  -[VSIdentityProvider setDeveloper:]
  -[VSIdentityProvider supportedTemplates]
  -[VSIdentityProvider supportedAuthenticationSchemes]
  -[VSIdentityProvider supportsRequestsExpectingAuthenticationSchemes:]
  -[VSIdentityProvider isFullySupportedForRequestsExpectingAuthenticationSchemes:]
  -[VSIdentityProvider nameForSorting]
  -[VSIdentityProvider rankForSorting]
  -[VSIdentityProvider setRankForSorting:]
  -[VSIdentityProvider setSupportedTemplates:]
  -[VSIdentityProvider setSupportedAuthenticationSchemes:]
  -[VSIdentityProvider isProhibitedByStore]
  -[VSIdentityProvider setProhibitedByStore:]
  -[VSIdentityProvider isDeveloper]
  -[VSIdentityProvider authenticationURL]
  -[VSIdentityProvider setAuthenticationURL:]
  -[VSIdentityProvider appStoreRoomURL]
  -[VSIdentityProvider setAppStoreRoomURL:]
  -[VSIdentityProvider setAppAdamIDs:]
  -[VSIdentityProvider defaultAppId]
  -[VSIdentityProvider setDefaultAppId:]
  -[VSIdentityProvider providerArtworkTemplateURL]
  -[VSIdentityProvider setProviderArtworkTemplateURL:]
  -[VSIdentityProvider isSetTopBoxSupported]
  -[VSIdentityProvider setIsSetTopBoxSupported:]
  -[VSIdentityProvider shouldShowChannelApps]
  -[VSIdentityProvider setShouldShowChannelApps:]
  -[VSIdentityProvider shouldShowSubscriptionApps]
  -[VSIdentityProvider setShouldShowSubscriptionApps:]
  -[VSIdentityProvider isSTBOptOutAllowed]
  -[VSIdentityProvider setIsSTBOptOutAllowed:]
  -[VSIdentityProvider providerAppArtworkTemplateURL]
  -[VSIdentityProvider setProviderAppArtworkTemplateURL:]
  -[VSIdentityProvider appPlacementPosition]
  -[VSIdentityProvider setAppPlacementPosition:]
  -[VSIdentityProvider allPersonalizedAppDescriptions]
  -[VSIdentityProvider setAllPersonalizedAppDescriptions:]
  -[VSIdentityProvider nonChannelAppDescriptions]
  -[VSIdentityProvider setNonChannelAppDescriptions:]
  -[VSIdentityProvider storefronts]
  -[VSIdentityProvider setStorefronts:]


VSIdentityProviderStorefrontMetadata : NSObject
 @property  NSString *storefrontTwoCharCode
 @property  BOOL isFeatured
 @property  NSNumber *sortOrdinal

  // instance methods
  -[VSIdentityProviderStorefrontMetadata .cxx_destruct]
  -[VSIdentityProviderStorefrontMetadata isFeatured]
  -[VSIdentityProviderStorefrontMetadata setIsFeatured:]
  -[VSIdentityProviderStorefrontMetadata storefrontTwoCharCode]
  -[VSIdentityProviderStorefrontMetadata setStorefrontTwoCharCode:]
  -[VSIdentityProviderStorefrontMetadata sortOrdinal]
  -[VSIdentityProviderStorefrontMetadata setSortOrdinal:]


VSViewServiceRequestOperation : VSAsyncOperation <VSViewServiceHostViewControllerDelegate>
 @property  VSOptional *result
 @property  VSViewServiceHostViewController *viewServiceHostViewController
 @property  NSUUID *requestID
 @property  VSViewServiceRequest *viewServiceRequest
 @property  <VSViewServiceRequestOperationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSViewServiceRequestOperation setResult:]
  -[VSViewServiceRequestOperation setDelegate:]
  -[VSViewServiceRequestOperation delegate]
  -[VSViewServiceRequestOperation setRequestID:]
  -[VSViewServiceRequestOperation .cxx_destruct]
  -[VSViewServiceRequestOperation result]
  -[VSViewServiceRequestOperation requestID]
  -[VSViewServiceRequestOperation cancel]
  -[VSViewServiceRequestOperation init]
  -[VSViewServiceRequestOperation executionDidBegin]
  -[VSViewServiceRequestOperation _dismissViewController]
  -[VSViewServiceRequestOperation _presentViewController]
  -[VSViewServiceRequestOperation finishExecutionIfPossible]
  -[VSViewServiceRequestOperation presentViewServiceHostViewController:]
  -[VSViewServiceRequestOperation dismissViewServiceHostViewController:]
  -[VSViewServiceRequestOperation viewServiceHostViewController:request:didFinishWithResponse:]
  -[VSViewServiceRequestOperation viewServiceHostViewController:request:didFailWithError:]
  -[VSViewServiceRequestOperation viewServiceHostViewController:didChooseAdditionalProvidersForRequest:]
  -[VSViewServiceRequestOperation viewServiceHostViewController:didCancelRequest:]
  -[VSViewServiceRequestOperation viewServiceHostViewController:shouldAuthenticateAccountProviderWithIdentifier:]
  -[VSViewServiceRequestOperation initWithViewServiceRequest:]
  -[VSViewServiceRequestOperation _dismissViewControllerIfRequired]
  -[VSViewServiceRequestOperation viewServiceRequest]
  -[VSViewServiceRequestOperation viewServiceHostViewController]
  -[VSViewServiceRequestOperation setViewServiceHostViewController:]


VSSAMLAuthenticationToken : NSObject <VSAuthenticationToken>
 @property  NSData *serializedData
 @property  NSDate *simulatedExpirationDate
 @property  NSDate *expirationDate
 @property  NSString *body
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSSAMLAuthenticationToken serializedData]
  -[VSSAMLAuthenticationToken expirationDate]
  -[VSSAMLAuthenticationToken setSerializedData:]
  -[VSSAMLAuthenticationToken setExpirationDate:]
  -[VSSAMLAuthenticationToken setBody:]
  -[VSSAMLAuthenticationToken isValid]
  -[VSSAMLAuthenticationToken .cxx_destruct]
  -[VSSAMLAuthenticationToken isOpaque]
  -[VSSAMLAuthenticationToken body]
  -[VSSAMLAuthenticationToken isEqual:]
  -[VSSAMLAuthenticationToken initWithSerializedData:]
  -[VSSAMLAuthenticationToken isFromUnsupportedProvider]
  -[VSSAMLAuthenticationToken simulatedExpirationDate]
  -[VSSAMLAuthenticationToken setSimulatedExpirationDate:]


VSOpaqueAuthenticationToken : NSObject <VSAuthenticationToken>
 @property  NSDate *expirationDate
 @property  NSString *body
 @property  NSData *serializedData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSOpaqueAuthenticationToken serializedData]
  -[VSOpaqueAuthenticationToken expirationDate]
  -[VSOpaqueAuthenticationToken setExpirationDate:]
  -[VSOpaqueAuthenticationToken setBody:]
  -[VSOpaqueAuthenticationToken isValid]
  -[VSOpaqueAuthenticationToken .cxx_destruct]
  -[VSOpaqueAuthenticationToken isOpaque]
  -[VSOpaqueAuthenticationToken body]
  -[VSOpaqueAuthenticationToken isEqual:]
  -[VSOpaqueAuthenticationToken init]
  -[VSOpaqueAuthenticationToken initWithSerializedData:]
  -[VSOpaqueAuthenticationToken isFromUnsupportedProvider]


VSFailableValueTransformer : NSValueTransformer
 @property  NSValueTransformer *objectValueTransformer

  // class methods
  +[VSFailableValueTransformer transformedValueClass]
  +[VSFailableValueTransformer allowsReverseTransformation]

  // instance methods
  -[VSFailableValueTransformer transformedValue:]
  -[VSFailableValueTransformer .cxx_destruct]
  -[VSFailableValueTransformer objectValueTransformer]
  -[VSFailableValueTransformer setObjectValueTransformer:]


VSUserAccountService : VSServiceListener
 @property  VSPreferences *preferences
 @property  VSUserAccountRegistry *registry

  // instance methods
  -[VSUserAccountService registry]
  -[VSUserAccountService setPreferences:]
  -[VSUserAccountService .cxx_destruct]
  -[VSUserAccountService preferences]
  -[VSUserAccountService performMigrationWithCompletion:]
  -[VSUserAccountService _securityTaskForCurrentConnection]
  -[VSUserAccountService init]
  -[VSUserAccountService setRegistry:]


VSDeveloperServiceConnection : NSObject
 @property  NSXPCConnection *connection

  // instance methods
  -[VSDeveloperServiceConnection dealloc]
  -[VSDeveloperServiceConnection .cxx_destruct]
  -[VSDeveloperServiceConnection connection]
  -[VSDeveloperServiceConnection serviceWithErrorHandler:]
  -[VSDeveloperServiceConnection init]
  -[VSDeveloperServiceConnection setConnection:]


VSFailable : NSObject <NSSecureCoding>
 @property  long long kind
 @property  id object
 @property  NSError *error

  // class methods
  +[VSFailable supportsSecureCoding]
  +[VSFailable decodableClasses]
  +[VSFailable failableWithObject:]
  +[VSFailable failableWithError:]

  // instance methods
  -[VSFailable kind]
  -[VSFailable encodeWithCoder:]
  -[VSFailable error]
  -[VSFailable initWithObject:]
  -[VSFailable .cxx_destruct]
  -[VSFailable setError:]
  -[VSFailable initWithError:]
  -[VSFailable object]
  -[VSFailable unwrapObject:error:]
  -[VSFailable setKind:]
  -[VSFailable setObject:]
  -[VSFailable init]
  -[VSFailable initWithCoder:]


VSDeveloperSettings : NSObject <NSSecureCoding>
 @property  BOOL isInSetTopBoxMode
 @property  BOOL cacheBusterEnabled
 @property  BOOL requestTimeoutsDisabled
 @property  BOOL simulateExpiredToken
 @property  NSString *setTopBoxBundleIdentifier
 @property  NSString *setTopBoxUserToken
 @property  NSString *setTopBoxIdentityProviderID
 @property  BOOL setTopBoxUseDeviceProfile
 @property  BOOL setTopBoxSupportsOptOut

  // class methods
  +[VSDeveloperSettings supportsSecureCoding]

  // instance methods
  -[VSDeveloperSettings simulateExpiredToken]
  -[VSDeveloperSettings setTopBoxBundleIdentifier]
  -[VSDeveloperSettings setSetTopBoxUseDeviceProfile:]
  -[VSDeveloperSettings setSetTopBoxIdentityProviderID:]
  -[VSDeveloperSettings setDefaults]
  -[VSDeveloperSettings encodeWithCoder:]
  -[VSDeveloperSettings cacheBusterEnabled]
  -[VSDeveloperSettings .cxx_destruct]
  -[VSDeveloperSettings setTopBoxSupportsOptOut]
  -[VSDeveloperSettings requestTimeoutsDisabled]
  -[VSDeveloperSettings setTopBoxUserToken]
  -[VSDeveloperSettings setCacheBusterEnabled:]
  -[VSDeveloperSettings setTopBoxIdentityProviderID]
  -[VSDeveloperSettings setTopBoxUseDeviceProfile]
  -[VSDeveloperSettings copyWithZone:]
  -[VSDeveloperSettings setSetTopBoxSupportsOptOut:]
  -[VSDeveloperSettings setRequestTimeoutsDisabled:]
  -[VSDeveloperSettings setSetTopBoxBundleIdentifier:]
  -[VSDeveloperSettings setSimulateExpiredToken:]
  -[VSDeveloperSettings isInSetTopBoxMode]
  -[VSDeveloperSettings isEqual:]
  -[VSDeveloperSettings setIsInSetTopBoxMode:]
  -[VSDeveloperSettings setSetTopBoxUserToken:]
  -[VSDeveloperSettings init]
  -[VSDeveloperSettings initWithCoder:]


VSViewServiceXPCInterface : NSObject
  // class methods
  +[VSViewServiceXPCInterface viewServiceInterface]
  +[VSViewServiceXPCInterface viewServiceHostInterface]


VSUserAccountRegistry : NSObject <VSUserAccountUpdateManagerDelegate, VSUserAccountServiceProtocol>
 @property  NSOperationQueue *privateQueue
 @property  VSRemoteNotifier *remoteNotifier
 @property  VSUserAccountPersistentContainer *container
 @property  BOOL currentUpdateSessionIsForced
 @property  VSUserAccountUpdateManager *updateManager
 @property  VSPrivacyFacade *privacyFacade
 @property  NSDate *lastUpdateTime
 @property  NSObject<OS_dispatch_source> *timer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSUserAccountRegistry setUpdateManager:]
  -[VSUserAccountRegistry updateManager]
  -[VSUserAccountRegistry lastUpdateTime]
  -[VSUserAccountRegistry setContainer:]
  -[VSUserAccountRegistry resetTimer]
  -[VSUserAccountRegistry .cxx_destruct]
  -[VSUserAccountRegistry setTimer:]
  -[VSUserAccountRegistry fetchActiveSubscriptionsWithOptions:completionHandler:]
  -[VSUserAccountRegistry setPrivateQueue:]
  -[VSUserAccountRegistry privateQueue]
  -[VSUserAccountRegistry container]
  -[VSUserAccountRegistry timer]
  -[VSUserAccountRegistry registerSubscription:]
  -[VSUserAccountRegistry remoteNotifier]
  -[VSUserAccountRegistry setLastUpdateTime:]
  -[VSUserAccountRegistry setRemoteNotifier:]
  -[VSUserAccountRegistry removeSubscriptions:]
  -[VSUserAccountRegistry _update]
  -[VSUserAccountRegistry _securityTaskForCurrentConnection]
  -[VSUserAccountRegistry init]
  -[VSUserAccountRegistry updateManager:updateRequestDidFinish:]
  -[VSUserAccountRegistry updateManagerDidFinish:]
  -[VSUserAccountRegistry updateUserAccount:completion:]
  -[VSUserAccountRegistry queryUserAccountsWithOptions:completion:]
  -[VSUserAccountRegistry deleteUserAccount:completion:]
  -[VSUserAccountRegistry forceUpdateUserAccountsWithCompletion:]
  -[VSUserAccountRegistry insertLegacySubscription:completion:]
  -[VSUserAccountRegistry _insertUserAccount:completion:]
  -[VSUserAccountRegistry _deleteUserAccount:completion:]
  -[VSUserAccountRegistry _queryUserAccountsWithOptions:predicate:completion:]
  -[VSUserAccountRegistry _queryPersistentUserAccountsWithOptions:predicate:context:completion:]
  -[VSUserAccountRegistry _deviceCategoryFromDeviceType:]
  -[VSUserAccountRegistry _populatePersistentUserAccount:withUserAccount:]
  -[VSUserAccountRegistry _userAccountForLegacySubscription:]
  -[VSUserAccountRegistry _legacySubscriptionForUserAccount:]
  -[VSUserAccountRegistry _legacySubscriptionInfoForUserAccount:]
  -[VSUserAccountRegistry _userAccountForPersistentUserAccount:]
  -[VSUserAccountRegistry _isValidForUpdateQueryForCurrentTask]
  -[VSUserAccountRegistry _isValidForUpdateQueryForCurrentTask:]
  -[VSUserAccountRegistry _predicateForQueryRequestWithOptions:]
  -[VSUserAccountRegistry currentUpdateSessionIsForced]
  -[VSUserAccountRegistry setCurrentUpdateSessionIsForced:]
  -[VSUserAccountRegistry privacyFacade]
  -[VSUserAccountRegistry setPrivacyFacade:]


VSKeychainGenericPassword : VSKeychainItem
 @property  NSString *accessGroup
 @property  NSDate *creationDate
 @property  NSDate *modificationDate
 @property  NSString *itemDescription
 @property  NSString *comment
 @property  NSNumber *creatorCode
 @property  NSNumber *typeCode
 @property  NSString *label
 @property  BOOL synchronizable
 @property  NSString *viewHint
 @property  BOOL invisible
 @property  BOOL negative
 @property  NSString *account
 @property  NSString *service
 @property  NSString *generic

  // instance methods
  -[VSKeychainGenericPassword account]
  -[VSKeychainGenericPassword modificationDate]
  -[VSKeychainGenericPassword setAccount:]
  -[VSKeychainGenericPassword comment]
  -[VSKeychainGenericPassword itemDescription]
  -[VSKeychainGenericPassword isNegative]
  -[VSKeychainGenericPassword setNegative:]
  -[VSKeychainGenericPassword isInvisible]
  -[VSKeychainGenericPassword setLabel:]
  -[VSKeychainGenericPassword setService:]
  -[VSKeychainGenericPassword setAccessGroup:]
  -[VSKeychainGenericPassword setSynchronizable:]
  -[VSKeychainGenericPassword creationDate]
  -[VSKeychainGenericPassword service]
  -[VSKeychainGenericPassword setViewHint:]
  -[VSKeychainGenericPassword label]
  -[VSKeychainGenericPassword typeCode]
  -[VSKeychainGenericPassword setItemDescription:]
  -[VSKeychainGenericPassword accessGroup]
  -[VSKeychainGenericPassword viewHint]
  -[VSKeychainGenericPassword setComment:]
  -[VSKeychainGenericPassword setInvisible:]
  -[VSKeychainGenericPassword creatorCode]
  -[VSKeychainGenericPassword setCreatorCode:]
  -[VSKeychainGenericPassword setTypeCode:]
  -[VSKeychainGenericPassword _notifyWhileSettingPrimitiveValue:forKey:]
  -[VSKeychainGenericPassword _faultWhileAccessingPrimitiveValueForKey:]
  -[VSKeychainGenericPassword isSynchronizable]
  -[VSKeychainGenericPassword generic]
  -[VSKeychainGenericPassword setGeneric:]


VSKeychainItemAttribute : NSObject <NSCopying>
 @property  NSString *name
 @property  unsigned long attributeType
 @property  NSString *attributeValueClassName
 @property  r^{__CFString=} secItemAttributeKey
 @property  id defaultValue

  // instance methods
  -[VSKeychainItemAttribute defaultValue]
  -[VSKeychainItemAttribute setAttributeType:]
  -[VSKeychainItemAttribute setAttributeValueClassName:]
  -[VSKeychainItemAttribute setDefaultValue:]
  -[VSKeychainItemAttribute attributeType]
  -[VSKeychainItemAttribute dealloc]
  -[VSKeychainItemAttribute .cxx_destruct]
  -[VSKeychainItemAttribute setName:]
  -[VSKeychainItemAttribute copyWithZone:]
  -[VSKeychainItemAttribute name]
  -[VSKeychainItemAttribute attributeValueClassName]
  -[VSKeychainItemAttribute setSecItemAttributeKey:]
  -[VSKeychainItemAttribute secItemAttributeKey]


VSUserAccountUpdateRequest : NSObject
 @property  VSUserAccount *userAccount
 @property  VSUserAccount *updatedUserAccount
 @property  NSError *updateError

  // instance methods
  -[VSUserAccountUpdateRequest .cxx_destruct]
  -[VSUserAccountUpdateRequest initWithUserAccount:]
  -[VSUserAccountUpdateRequest userAccount]
  -[VSUserAccountUpdateRequest setUserAccount:]
  -[VSUserAccountUpdateRequest updatedUserAccount]
  -[VSUserAccountUpdateRequest setUpdatedUserAccount:]
  -[VSUserAccountUpdateRequest updateError]
  -[VSUserAccountUpdateRequest setUpdateError:]


VSUserAccountUpdateManager : NSObject <VSJSAppDelegate, VSStateMachineDelegate>
 @property  NSMutableSet *updateRequests
 @property  NSMutableArray *updatedUserAccounts
 @property  VSStateMachine *stateMachine
 @property  VSJSApp *currentApp
 @property  VSUserAccountUpdateRequest *currentUpdateRequest
 @property  NSObject<OS_dispatch_source> *watchdog
 @property  <VSUserAccountUpdateManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSUserAccountUpdateManager setStateMachine:]
  -[VSUserAccountUpdateManager stateMachine]
  -[VSUserAccountUpdateManager setDelegate:]
  -[VSUserAccountUpdateManager currentApp]
  -[VSUserAccountUpdateManager delegate]
  -[VSUserAccountUpdateManager .cxx_destruct]
  -[VSUserAccountUpdateManager updateRequests]
  -[VSUserAccountUpdateManager watchdog]
  -[VSUserAccountUpdateManager setWatchdog:]
  -[VSUserAccountUpdateManager app:prewarmWithContext:]
  -[VSUserAccountUpdateManager app:didFailToStartWithError:]
  -[VSUserAccountUpdateManager appDidStart:]
  -[VSUserAccountUpdateManager appDidStop:]
  -[VSUserAccountUpdateManager initWithUserAccountUpdateRequests:]
  -[VSUserAccountUpdateManager updateUserAccounts]
  -[VSUserAccountUpdateManager _requestOptionsWithUserAccounts:callback:]
  -[VSUserAccountUpdateManager _configureWatchdogWithSeconds:]
  -[VSUserAccountUpdateManager transitionToEnqueuingNextUserAccountSetState]
  -[VSUserAccountUpdateManager transitionToBootingAppState]
  -[VSUserAccountUpdateManager transitionToInvokingOnRequestCallbackState]
  -[VSUserAccountUpdateManager transitionToStoppingAppState]
  -[VSUserAccountUpdateManager transitionToNotifyingForUserAccountSetState]
  -[VSUserAccountUpdateManager transitionToNotifyingFinishState]
  -[VSUserAccountUpdateManager setUpdateRequests:]
  -[VSUserAccountUpdateManager updatedUserAccounts]
  -[VSUserAccountUpdateManager setUpdatedUserAccounts:]
  -[VSUserAccountUpdateManager setCurrentApp:]
  -[VSUserAccountUpdateManager currentUpdateRequest]
  -[VSUserAccountUpdateManager setCurrentUpdateRequest:]


VSWeakForwardingTarget : NSObject
 @property  id object

  // instance methods
  -[VSWeakForwardingTarget methodSignatureForSelector:]
  -[VSWeakForwardingTarget respondsToSelector:]
  -[VSWeakForwardingTarget .cxx_destruct]
  -[VSWeakForwardingTarget object]
  -[VSWeakForwardingTarget forwardingTargetForSelector:]
  -[VSWeakForwardingTarget setObject:]


VSFeatureManager : NSObject
 @property  VSPreferences *preferences

  // class methods
  +[VSFeatureManager sharedFeatureManager]

  // instance methods
  -[VSFeatureManager featureIsEnabled:]
  -[VSFeatureManager enableFeature:]
  -[VSFeatureManager disableFeature:]
  -[VSFeatureManager setPreferences:]
  -[VSFeatureManager .cxx_destruct]
  -[VSFeatureManager preferences]
  -[VSFeatureManager resetFeature:]
  -[VSFeatureManager init]


VSHash : NSObject
 @property  BOOL finalized
 @property  {CC_SHA256state_st=[2I][8I][16I]} ctx
 @property  NSData *finalData

  // instance methods
  -[VSHash updateWithString:]
  -[VSHash isFinalized]
  -[VSHash dealloc]
  -[VSHash .cxx_destruct]
  -[VSHash setFinalized:]
  -[VSHash setCtx:]
  -[VSHash ctx]
  -[VSHash updateWithData:]
  -[VSHash init]
  -[VSHash finalData]
  -[VSHash setFinalData:]
  -[VSHash updateWithDate:]
  -[VSHash updateWithInteger:]
  -[VSHash updateWithUUID:]


VSSubscriptionFetchOptionDescription : NSObject <NSCopying>
 @property  NSString *key
 @property  id defaultValue
 @property  BOOL container
 @property  unsigned long minCount
 @property  Class allowedClass
 @property  NSPredicate *allowedValuePredicate

  // instance methods
  -[VSSubscriptionFetchOptionDescription setMinCount:]
  -[VSSubscriptionFetchOptionDescription isContainer]
  -[VSSubscriptionFetchOptionDescription minCount]
  -[VSSubscriptionFetchOptionDescription setContainer:]
  -[VSSubscriptionFetchOptionDescription defaultValue]
  -[VSSubscriptionFetchOptionDescription setDefaultValue:]
  -[VSSubscriptionFetchOptionDescription allowedValuePredicate]
  -[VSSubscriptionFetchOptionDescription setAllowedValuePredicate:]
  -[VSSubscriptionFetchOptionDescription setAllowedClass:]
  -[VSSubscriptionFetchOptionDescription .cxx_destruct]
  -[VSSubscriptionFetchOptionDescription copyWithZone:]
  -[VSSubscriptionFetchOptionDescription key]
  -[VSSubscriptionFetchOptionDescription setKey:]
  -[VSSubscriptionFetchOptionDescription allowedClass]
  -[VSSubscriptionFetchOptionDescription init]


VSSubscriptionFetchOptionsValidator : NSObject
 @property  VSSubscriptionPredicateFactory *predicateFactory

  // instance methods
  -[VSSubscriptionFetchOptionsValidator predicateFactory]
  -[VSSubscriptionFetchOptionsValidator .cxx_destruct]
  -[VSSubscriptionFetchOptionsValidator subscriptionFetchOptionsAllowedForSecurityTask:]
  -[VSSubscriptionFetchOptionsValidator setPredicateFactory:]
  -[VSSubscriptionFetchOptionsValidator standardizedFetchOptionsFromOptions:withSecurityTask:]


VSAppChannelsMapping : NSObject
 @property  NSString *appAdamID
 @property  NSArray *channelIDs

  // class methods
  +[VSAppChannelsMapping supportsSecureCoding]

  // instance methods
  -[VSAppChannelsMapping channelIDs]
  -[VSAppChannelsMapping encodeWithCoder:]
  -[VSAppChannelsMapping .cxx_destruct]
  -[VSAppChannelsMapping setChannelIDs:]
  -[VSAppChannelsMapping copyWithZone:]
  -[VSAppChannelsMapping appAdamID]
  -[VSAppChannelsMapping isEqual:]
  -[VSAppChannelsMapping setAppAdamID:]
  -[VSAppChannelsMapping init]
  -[VSAppChannelsMapping initWithCoder:]


VSSingleThreadDispatchQueue : NSObject
 @property  ^{__CFRunLoopSource=} runLoopSource
 @property  NSMutableArray *blocks
 @property  @? startCompletionBlock
 @property  NSString *name
 @property  NSThread *underlyingThread
 @property  ^{__CFRunLoop=} underlyingRunLoop
 @property  long long state

  // class methods
  +[VSSingleThreadDispatchQueue currentQueue]

  // instance methods
  -[VSSingleThreadDispatchQueue setBlocks:]
  -[VSSingleThreadDispatchQueue underlyingRunLoop]
  -[VSSingleThreadDispatchQueue _threadMain]
  -[VSSingleThreadDispatchQueue state]
  -[VSSingleThreadDispatchQueue .cxx_destruct]
  -[VSSingleThreadDispatchQueue stop]
  -[VSSingleThreadDispatchQueue underlyingThread]
  -[VSSingleThreadDispatchQueue setName:]
  -[VSSingleThreadDispatchQueue initWithName:]
  -[VSSingleThreadDispatchQueue name]
  -[VSSingleThreadDispatchQueue startWithCompletionHandler:]
  -[VSSingleThreadDispatchQueue dispatchBlockSync:]
  -[VSSingleThreadDispatchQueue runLoopSource]
  -[VSSingleThreadDispatchQueue setRunLoopSource:]
  -[VSSingleThreadDispatchQueue blocks]
  -[VSSingleThreadDispatchQueue setState:]
  -[VSSingleThreadDispatchQueue dispatchBlock:]
  -[VSSingleThreadDispatchQueue setUnderlyingThread:]
  -[VSSingleThreadDispatchQueue setUnderlyingRunLoop:]
  -[VSSingleThreadDispatchQueue startCompletionBlock]
  -[VSSingleThreadDispatchQueue setStartCompletionBlock:]


VSAnalyticsService : VSServiceListener <VSAnalyticsServiceProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSAnalyticsService recordNowPlayingBrokenEventWithBundleID:]
  -[VSAnalyticsService recordFederatedPunchoutEventWithError:metadata:]
  -[VSAnalyticsService init]


VSOptional : NSObject <NSSecureCoding>
 @property  id object

  // class methods
  +[VSOptional supportsSecureCoding]
  +[VSOptional decodableClasses]
  +[VSOptional optionalWithObject:]

  // instance methods
  -[VSOptional forceUnwrapObject]
  -[VSOptional encodeWithCoder:]
  -[VSOptional initWithObject:]
  -[VSOptional conditionallyUnwrapObject:otherwise:]
  -[VSOptional .cxx_destruct]
  -[VSOptional unwrapWithFallback:]
  -[VSOptional object]
  -[VSOptional conditionallyUnwrapObject:]
  -[VSOptional setObject:]
  -[VSOptional isEqual:]
  -[VSOptional init]
  -[VSOptional initWithCoder:]


VSPrivacyFacade : NSObject <VSPrivacyServiceProtocol>
 @property  VSPrivacyVoucherLockbox *voucherLockbox
 @property  NSString *service
 @property  NSOperationQueue *privateQueue
 @property  NSArray *knownAppBundles
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSPrivacyFacade reset]
  -[VSPrivacyFacade setService:]
  -[VSPrivacyFacade .cxx_destruct]
  -[VSPrivacyFacade setPrivateQueue:]
  -[VSPrivacyFacade privateQueue]
  -[VSPrivacyFacade service]
  -[VSPrivacyFacade init]
  -[VSPrivacyFacade preflightCheckForProcessIdentifier:withCompletionHandler:]
  -[VSPrivacyFacade requestAccessForAuditToken:processIdentifier:identityProviderDisplayName:providerIsSupported:identityProviderID:allowUI:completionHandler:]
  -[VSPrivacyFacade initWithService:voucherLockbox:]
  -[VSPrivacyFacade initWithVoucherLockbox:]
  -[VSPrivacyFacade isAccessGrantedForAuditToken:]
  -[VSPrivacyFacade setAccessGranted:forAuditToken:]
  -[VSPrivacyFacade _voucherForProcess:providerID:]
  -[VSPrivacyFacade _promptForAccessUsingAuditToken:processIdentifier:identityProviderDisplayName:providerIsSupported:completionHandler:]
  -[VSPrivacyFacade isAccessGrantedForBundle:]
  -[VSPrivacyFacade setAccessGranted:forBundle:]
  -[VSPrivacyFacade knownAppBundles]
  -[VSPrivacyFacade voucherLockbox]
  -[VSPrivacyFacade setVoucherLockbox:]


VSCredentialSaveOperation : VSAsyncOperation
 @property  NSArray *unsavedAccounts
 @property  VSAccountStore *accountStore
 @property  VSOptional *result

  // instance methods
  -[VSCredentialSaveOperation setAccountStore:]
  -[VSCredentialSaveOperation accountStore]
  -[VSCredentialSaveOperation setResult:]
  -[VSCredentialSaveOperation .cxx_destruct]
  -[VSCredentialSaveOperation result]
  -[VSCredentialSaveOperation init]
  -[VSCredentialSaveOperation executionDidBegin]
  -[VSCredentialSaveOperation initWithUnsavedAccounts:accountStore:]
  -[VSCredentialSaveOperation _didSaveAccounts:withResult:error:]
  -[VSCredentialSaveOperation unsavedAccounts]
  -[VSCredentialSaveOperation setUnsavedAccounts:]


VSJSObject : NSObject
 @property  VSJSApp *context

  // instance methods
  -[VSJSObject initWithContext:]
  -[VSJSObject .cxx_destruct]
  -[VSJSObject context]
  -[VSJSObject init]


VSKeychainItem : NSObject
 @property  NSMutableDictionary *committedValues
 @property  VSKeychainEditingContext *editingContext
 @property  BOOL inserted
 @property  BOOL updated
 @property  BOOL deleted
 @property  NSMutableDictionary *primitiveValues
 @property  BOOL hasFaultForData
 @property  VSKeychainItemKind *itemKind
 @property  BOOL hasChanges
 @property  BOOL hasPersistentChangedValues
 @property  NSData *data

  // instance methods
  -[VSKeychainItem hasChanges]
  -[VSKeychainItem isDeleted]
  -[VSKeychainItem setDeleted:]
  -[VSKeychainItem setInserted:]
  -[VSKeychainItem setUpdated:]
  -[VSKeychainItem .cxx_destruct]
  -[VSKeychainItem isUpdated]
  -[VSKeychainItem itemKind]
  -[VSKeychainItem setData:]
  -[VSKeychainItem isInserted]
  -[VSKeychainItem init]
  -[VSKeychainItem data]
  -[VSKeychainItem willChangeValueForKey:]
  -[VSKeychainItem willAccessValueForKey:]
  -[VSKeychainItem didAccessValueForKey:]
  -[VSKeychainItem primitiveValueForKey:]
  -[VSKeychainItem setPrimitiveValue:forKey:]
  -[VSKeychainItem committedValuesForKeys:]
  -[VSKeychainItem changedValues]
  -[VSKeychainItem hasPersistentChangedValues]
  -[VSKeychainItem editingContext]
  -[VSKeychainItem setEditingContext:]
  -[VSKeychainItem committedValueForKey:]
  -[VSKeychainItem initWithItemKind:insertIntoEditingContext:]
  -[VSKeychainItem _setCommittedValues:registeringUndo:]
  -[VSKeychainItem setPrimitiveValues:]
  -[VSKeychainItem committedValues]
  -[VSKeychainItem setCommittedValues:]
  -[VSKeychainItem primitiveValues]
  -[VSKeychainItem hasFaultForData]
  -[VSKeychainItem setHasFaultForData:]


VSBackgroundTask : NSObject
 @property  RBSAssertion *assertion
 @property  NSString *name
 @property  <VSBackgroundTaskDelegate> *delegate

  // instance methods
  -[VSBackgroundTask begin]
  -[VSBackgroundTask setAssertion:]
  -[VSBackgroundTask setDelegate:]
  -[VSBackgroundTask delegate]
  -[VSBackgroundTask end]
  -[VSBackgroundTask .cxx_destruct]
  -[VSBackgroundTask assertion]
  -[VSBackgroundTask setName:]
  -[VSBackgroundTask name]
  -[VSBackgroundTask init]


VSAccountProviderResponse : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *authenticationScheme
 @property  NSString *status
 @property  NSString *body

  // class methods
  +[VSAccountProviderResponse supportsSecureCoding]

  // instance methods
  -[VSAccountProviderResponse setAuthenticationScheme:]
  -[VSAccountProviderResponse encodeWithCoder:]
  -[VSAccountProviderResponse status]
  -[VSAccountProviderResponse setBody:]
  -[VSAccountProviderResponse setStatus:]
  -[VSAccountProviderResponse .cxx_destruct]
  -[VSAccountProviderResponse body]
  -[VSAccountProviderResponse authenticationScheme]
  -[VSAccountProviderResponse copyWithZone:]
  -[VSAccountProviderResponse isEqual:]
  -[VSAccountProviderResponse init]
  -[VSAccountProviderResponse initWithCoder:]


VSPreferences : NSObject
 @property  NSUserDefaults *userDefaults
 @property  NSUserDefaults *globalUserDefaults
 @property  VSDevice *device
 @property  NSUndoManager *undoManager
 @property  NSURL *overridingAppBootURL
 @property  BOOL shouldDisableRequestTimeouts
 @property  BOOL shouldAlwaysAllowRemoteInspection
 @property  BOOL shouldSkipSetup
 @property  long long cachedAvailabilityStatus
 @property  long long cachedDeveloperProviderStatus
 @property  long long cachedStoreProviderStatus

  // instance methods
  -[VSPreferences setUserDefaults:]
  -[VSPreferences removeSkipSetupPreset]
  -[VSPreferences undoManager]
  -[VSPreferences setTopBoxInfoProviderDisplayNameOverride]
  -[VSPreferences cachedDeveloperProviderStatus]
  -[VSPreferences _updateShouldSkipSetupWithNumber:]
  -[VSPreferences overridingAppBootURL]
  -[VSPreferences userDefaults]
  -[VSPreferences setCachedStoreProviderStatus:]
  -[VSPreferences setIgnoreSetTopBoxProfile:]
  -[VSPreferences setGlobalUserDefaults:]
  -[VSPreferences setUndoManager:]
  -[VSPreferences enableFeature:]
  -[VSPreferences disableFeature:]
  -[VSPreferences metricUserIDLastGenerated]
  -[VSPreferences shouldSkipSetup]
  -[VSPreferences allowNonSystemTrust]
  -[VSPreferences metricUserID]
  -[VSPreferences noteDesiredApp:]
  -[VSPreferences _updateValue:forKey:]
  -[VSPreferences .cxx_destruct]
  -[VSPreferences allowInsecureAuthContext]
  -[VSPreferences globalUserDefaults]
  -[VSPreferences setTopBoxInfoIsSetTopBoxOverride]
  -[VSPreferences setCachedDeveloperProviderStatus:]
  -[VSPreferences setTopBoxInfoAppAdamIdOverride]
  -[VSPreferences setDevice:]
  -[VSPreferences setTopBoxInfoProviderIdOverride]
  -[VSPreferences device]
  -[VSPreferences shouldAlwaysAllowRemoteInspection]
  -[VSPreferences setTopBoxActivationTime]
  -[VSPreferences shouldDisableRequestTimeouts]
  -[VSPreferences setTopBoxInfoBundleIdentifierOverride]
  -[VSPreferences cachedAvailabilityStatus]
  -[VSPreferences noteIsInSTBMode:]
  -[VSPreferences isInSTBMode]
  -[VSPreferences noteShouldSkipSetup]
  -[VSPreferences cachedStoreProviderStatus]
  -[VSPreferences setCachedAvailabilityStatus:]
  -[VSPreferences setMetricUserID:]
  -[VSPreferences featureIsEnabled:present:]
  -[VSPreferences noteSetTopBoxActicationTime]
  -[VSPreferences performedSubcriptionToUserAccountMigration]
  -[VSPreferences hasChosenDesiredApp]
  -[VSPreferences clearFeature:]
  -[VSPreferences clearSetTopBoxActivationTime]
  -[VSPreferences notePerformedSubcriptionToUserAccountMigration]
  -[VSPreferences ignoreSetTopBoxProfile]


VSManagedProfileConnection : NSObject <MCProfileConnectionObserver>
 @property  MCProfileConnection *profileConnection
 @property  NSObject<OS_dispatch_queue> *notificationQueue
 @property  NSMutableSet *observers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSManagedProfileConnection sharedConnection]

  // instance methods
  -[VSManagedProfileConnection unregisterObserver:]
  -[VSManagedProfileConnection profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
  -[VSManagedProfileConnection appAnalyticsAllowed]
  -[VSManagedProfileConnection .cxx_destruct]
  -[VSManagedProfileConnection registerObserver:]
  -[VSManagedProfileConnection setProfileConnection:]
  -[VSManagedProfileConnection profileConnection]
  -[VSManagedProfileConnection setObservers:]
  -[VSManagedProfileConnection userToken]
  -[VSManagedProfileConnection setNotificationQueue:]
  -[VSManagedProfileConnection notificationQueue]
  -[VSManagedProfileConnection init]
  -[VSManagedProfileConnection observers]
  -[VSManagedProfileConnection accountModificationAllowed]
  -[VSManagedProfileConnection providerUniqueID]
  -[VSManagedProfileConnection refreshProfileWithCompletion:]
  -[VSManagedProfileConnection appInstallationAllowed]
  -[VSManagedProfileConnection UIAppInstallationAllowed]
  -[VSManagedProfileConnection TVProviderModificationAllowed]
  -[VSManagedProfileConnection maximumAppsRating]
  -[VSManagedProfileConnection boolForManagedConfigurationBool:]


VSSubscriptionSource : NSObject <NSCopying, NSSecureCoding>
 @property  long long kind
 @property  NSString *identifier

  // class methods
  +[VSSubscriptionSource supportsSecureCoding]
  +[VSSubscriptionSource subscriptionSourceForAppWithBundleID:]
  +[VSSubscriptionSource subscriptionSourceForWebsiteWithURL:]
  +[VSSubscriptionSource subscriptionSourceForWebsiteWithDomainName:]
  +[VSSubscriptionSource currentSource]

  // instance methods
  -[VSSubscriptionSource identifier]
  -[VSSubscriptionSource kind]
  -[VSSubscriptionSource encodeWithCoder:]
  -[VSSubscriptionSource .cxx_destruct]
  -[VSSubscriptionSource setIdentifier:]
  -[VSSubscriptionSource copyWithZone:]
  -[VSSubscriptionSource setKind:]
  -[VSSubscriptionSource isEqual:]
  -[VSSubscriptionSource init]
  -[VSSubscriptionSource initWithCoder:]


VSBinder : NSObject
 @property  id boundObject
 @property  BOOL establishmentProhibited
 @property  NSCountedSet *currentlyChangingBindings
 @property  NSMutableDictionary *establishedBindings

  // instance methods
  -[VSBinder dealloc]
  -[VSBinder .cxx_destruct]
  -[VSBinder observeValueForKeyPath:ofObject:change:context:]
  -[VSBinder init]
  -[VSBinder initWithBoundObject:]
  -[VSBinder _infoForBinding:]
  -[VSBinder establishBinding:withInfo:]
  -[VSBinder tearDownBinding:]
  -[VSBinder valueForBinding:]
  -[VSBinder setValue:forBinding:]
  -[VSBinder boundObject]
  -[VSBinder isEstablishmentProhibited]
  -[VSBinder setEstablishmentProhibited:]
  -[VSBinder currentlyChangingBindings]
  -[VSBinder setCurrentlyChangingBindings:]
  -[VSBinder establishedBindings]
  -[VSBinder setEstablishedBindings:]


VSIdentityProviderInfoQueryResult : NSObject
 @property  VSIdentityProvider *identityProvider
 @property  NSString *designatedAppBundleIdentifier

  // instance methods
  -[VSIdentityProviderInfoQueryResult .cxx_destruct]
  -[VSIdentityProviderInfoQueryResult identityProvider]
  -[VSIdentityProviderInfoQueryResult setIdentityProvider:]
  -[VSIdentityProviderInfoQueryResult designatedAppBundleIdentifier]
  -[VSIdentityProviderInfoQueryResult setDesignatedAppBundleIdentifier:]


VSSetTopBoxInfoQueryResult : NSObject
 @property  VSIdentityProvider *setTopBoxProvider
 @property  VSSetTopBoxProfile *profile

  // instance methods
  -[VSSetTopBoxInfoQueryResult setProfile:]
  -[VSSetTopBoxInfoQueryResult profile]
  -[VSSetTopBoxInfoQueryResult .cxx_destruct]
  -[VSSetTopBoxInfoQueryResult setTopBoxProvider]
  -[VSSetTopBoxInfoQueryResult setSetTopBoxProvider:]


VSIdentityProviderInfoCenter : NSObject <VSRemoteNotifierDelegate>
 @property  VSPreferences *preferences
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  NSOperationQueue *privateQueue
 @property  VSIdentityProvider *cachedIdentityProvider
 @property  NSString *cachedDesignatedAppBundleIdentifier
 @property  BOOL cachedIsSetTopBox
 @property  BOOL setupCompleted
 @property  BOOL ignoredFirstNotification
 @property  NSError *currentError
 @property  VSRemoteNotifier *remoteNotifier
 @property  VSDevice *device
 @property  VSAccountStore *accountStore
 @property  @? newIdentityProviderFetchAllOperationBlock
 @property  @? newIdentityProviderFetchOperationBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSIdentityProviderInfoCenter sharedCenter]

  // instance methods
  -[VSIdentityProviderInfoCenter setAccountStore:]
  -[VSIdentityProviderInfoCenter accountStore]
  -[VSIdentityProviderInfoCenter _refresh:]
  -[VSIdentityProviderInfoCenter setSerialQueue:]
  -[VSIdentityProviderInfoCenter serialQueue]
  -[VSIdentityProviderInfoCenter setPreferences:]
  -[VSIdentityProviderInfoCenter dealloc]
  -[VSIdentityProviderInfoCenter .cxx_destruct]
  -[VSIdentityProviderInfoCenter setPrivateQueue:]
  -[VSIdentityProviderInfoCenter preferences]
  -[VSIdentityProviderInfoCenter privateQueue]
  -[VSIdentityProviderInfoCenter remoteNotifier:didReceiveRemoteNotificationWithUserInfo:]
  -[VSIdentityProviderInfoCenter setDevice:]
  -[VSIdentityProviderInfoCenter device]
  -[VSIdentityProviderInfoCenter remoteNotifier]
  -[VSIdentityProviderInfoCenter setRemoteNotifier:]
  -[VSIdentityProviderInfoCenter _accountStoreDidChange]
  -[VSIdentityProviderInfoCenter currentError]
  -[VSIdentityProviderInfoCenter init]
  -[VSIdentityProviderInfoCenter setCurrentError:]
  -[VSIdentityProviderInfoCenter enqueueInfoQueryWithCompletion:]
  -[VSIdentityProviderInfoCenter enqueueSetTopBoxProfileProviderQueryWithCompletion:]
  -[VSIdentityProviderInfoCenter enqueueIdentityProviderAppsQueryWithCompletion:]
  -[VSIdentityProviderInfoCenter enqueueSetTopBoxInfoQueryWithCompletion:]
  -[VSIdentityProviderInfoCenter enqueueManagedSetTopBoxInfoQueryWithCompletion:]
  -[VSIdentityProviderInfoCenter _identityProviderForSetTopBoxProfile:completion:]
  -[VSIdentityProviderInfoCenter _developerSettingsDidChange]
  -[VSIdentityProviderInfoCenter _postdentityProviderInfoDidChangeNotification]
  -[VSIdentityProviderInfoCenter fetchAccountAndIdentityProvider:]
  -[VSIdentityProviderInfoCenter fetchIdentityProviderAppBundleIdFromDeveloperSettings:]
  -[VSIdentityProviderInfoCenter _value:withDefault:]
  -[VSIdentityProviderInfoCenter cachedIdentityProvider]
  -[VSIdentityProviderInfoCenter setCachedIdentityProvider:]
  -[VSIdentityProviderInfoCenter cachedDesignatedAppBundleIdentifier]
  -[VSIdentityProviderInfoCenter setCachedDesignatedAppBundleIdentifier:]
  -[VSIdentityProviderInfoCenter cachedIsSetTopBox]
  -[VSIdentityProviderInfoCenter setCachedIsSetTopBox:]
  -[VSIdentityProviderInfoCenter setupCompleted]
  -[VSIdentityProviderInfoCenter setSetupCompleted:]
  -[VSIdentityProviderInfoCenter ignoredFirstNotification]
  -[VSIdentityProviderInfoCenter setIgnoredFirstNotification:]
  -[VSIdentityProviderInfoCenter newIdentityProviderFetchAllOperationBlock]
  -[VSIdentityProviderInfoCenter setNewIdentityProviderFetchAllOperationBlock:]
  -[VSIdentityProviderInfoCenter newIdentityProviderFetchOperationBlock]
  -[VSIdentityProviderInfoCenter setNewIdentityProviderFetchOperationBlock:]


VSAccountsArchive : NSObject <NSSecureCoding>
 @property  NSArray *accounts
 @property  VSAccountChannels *channels

  // class methods
  +[VSAccountsArchive supportsSecureCoding]

  // instance methods
  -[VSAccountsArchive accounts]
  -[VSAccountsArchive encodeWithCoder:]
  -[VSAccountsArchive .cxx_destruct]
  -[VSAccountsArchive setAccounts:]
  -[VSAccountsArchive channels]
  -[VSAccountsArchive setChannels:]
  -[VSAccountsArchive init]
  -[VSAccountsArchive initWithCoder:]


VSBindingInfo : NSObject
 @property  NSValueTransformer *valueTransformer
 @property  id unsafeObservedObject
 @property  id weakObservedObject
 @property  NSString *keyPath
 @property  NSDictionary *options
 @property  id value

  // instance methods
  -[VSBindingInfo .cxx_destruct]
  -[VSBindingInfo keyPath]
  -[VSBindingInfo options]
  -[VSBindingInfo setValue:]
  -[VSBindingInfo setValueTransformer:]
  -[VSBindingInfo value]
  -[VSBindingInfo valueTransformer]
  -[VSBindingInfo init]
  -[VSBindingInfo initWithObservedObject:keyPath:options:]
  -[VSBindingInfo requireExpectedConcurrency]
  -[VSBindingInfo unsafeObservedObject]
  -[VSBindingInfo weakObservedObject]


VSDeveloperModeStore : NSObject <VSRemoteNotifierDelegate, VSDeveloperServiceProtocol>
 @property  VSPersistentContainer *persistentContainer
 @property  NSObject<OS_dispatch_queue> *settingsQueue
 @property  VSRemoteNotifier *serviceChangeRemoteNotifier
 @property  VSRemoteNotifier *settingsChangeRemoteNotifier
 @property  VSRemoteNotifier *providersChangeRemoteNotifier
 @property  VSRemoteNotifier *accountStoreChangeRemoteNotifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSDeveloperModeStore persistentContainer]
  -[VSDeveloperModeStore setServiceChangeRemoteNotifier:]
  -[VSDeveloperModeStore setAccountStoreChangeRemoteNotifier:]
  -[VSDeveloperModeStore providersChangeRemoteNotifier]
  -[VSDeveloperModeStore settingsChangeRemoteNotifier]
  -[VSDeveloperModeStore setSettingsQueue:]
  -[VSDeveloperModeStore .cxx_destruct]
  -[VSDeveloperModeStore setPersistentContainer:]
  -[VSDeveloperModeStore _noteProvidersDidChange]
  -[VSDeveloperModeStore legacySettingsPropertiesPath]
  -[VSDeveloperModeStore accountStoreChangeRemoteNotifier]
  -[VSDeveloperModeStore migrateSettingsPropertyFileIfNecessary]
  -[VSDeveloperModeStore _nullableObjectOrNSNull:]
  -[VSDeveloperModeStore _noteServiceDidChange]
  -[VSDeveloperModeStore _developerIdentityProviderInContext:]
  -[VSDeveloperModeStore serviceChangeRemoteNotifier]
  -[VSDeveloperModeStore fetchDeveloperIdentityProvidersWithCompletionHandler:]
  -[VSDeveloperModeStore _identityProviderFetchRequest]
  -[VSDeveloperModeStore updateExistingDeveloperIdentityProvider:completionHandler:]
  -[VSDeveloperModeStore settingsPropertiesURL]
  -[VSDeveloperModeStore fetchDeveloperSettingsWithCompletionHandler:]
  -[VSDeveloperModeStore updateDeveloperSettings:completionHandler:]
  -[VSDeveloperModeStore addDeveloperIdentityProvider:completionHandler:]
  -[VSDeveloperModeStore settingsQueue]
  -[VSDeveloperModeStore setSettingsChangeRemoteNotifier:]
  -[VSDeveloperModeStore _noteSettingsDidChange]
  -[VSDeveloperModeStore init]
  -[VSDeveloperModeStore setProvidersChangeRemoteNotifier:]
  -[VSDeveloperModeStore _performIdentityProviderBlock:]
  -[VSDeveloperModeStore removeDeveloperIdentityProviderWithUniqueID:completionHandler:]


VSExpressionEvaluator : NSObject <VSObservanceDelegate>
 @property  id value
 @property  BOOL monitoringForChanges
 @property  NSArray *observers
 @property  BOOL hasDeterminedValue
 @property  NSExpression *expression
 @property  id object
 @property  NSDictionary *substitutionVariables
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSExpressionEvaluator automaticallyNotifiesObserversOfValue]

  // instance methods
  -[VSExpressionEvaluator setExpression:]
  -[VSExpressionEvaluator expression]
  -[VSExpressionEvaluator substitutionVariables]
  -[VSExpressionEvaluator dealloc]
  -[VSExpressionEvaluator .cxx_destruct]
  -[VSExpressionEvaluator object]
  -[VSExpressionEvaluator setSubstitutionVariables:]
  -[VSExpressionEvaluator setValue:]
  -[VSExpressionEvaluator setObservers:]
  -[VSExpressionEvaluator value]
  -[VSExpressionEvaluator setObject:]
  -[VSExpressionEvaluator observers]
  -[VSExpressionEvaluator observeChange:forObservance:]
  -[VSExpressionEvaluator _observersForExpression:]
  -[VSExpressionEvaluator _observersForPredicate:]
  -[VSExpressionEvaluator _startMonitoringForChanges]
  -[VSExpressionEvaluator _stopMonitoringForChanges]
  -[VSExpressionEvaluator _updateComputedResult:]
  -[VSExpressionEvaluator _updateComputedResultIfNeeded]
  -[VSExpressionEvaluator isMonitoringForChanges]
  -[VSExpressionEvaluator setMonitoringForChanges:]
  -[VSExpressionEvaluator hasDeterminedValue]
  -[VSExpressionEvaluator setHasDeterminedValue:]


VSUserAccountPersistentContainer : NSPersistentCloudKitContainer
 @property  NSURL *storeURL

  // instance methods
  -[VSUserAccountPersistentContainer setStoreURL:]
  -[VSUserAccountPersistentContainer storeURL]
  -[VSUserAccountPersistentContainer .cxx_destruct]
  -[VSUserAccountPersistentContainer init]


VSSubscriptionRegistry : NSObject <VSSubscriptionServiceProtocol>
 @property  VSRemoteNotifier *remoteNotifier
 @property  VSSubscriptionPersistentContainer *persistentContainer
 @property  VSSubscriptionPredicateFactory *predicateFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSSubscriptionRegistry _performBlock:]
  -[VSSubscriptionRegistry _installedAppsDidChange:]
  -[VSSubscriptionRegistry persistentContainer]
  -[VSSubscriptionRegistry _sendRemoteNotification]
  -[VSSubscriptionRegistry _saveChangesToContext:withDate:]
  -[VSSubscriptionRegistry registerSubscription:withCompletionHandler:]
  -[VSSubscriptionRegistry _subscriptionEntity]
  -[VSSubscriptionRegistry removeSubscriptions:withCompletionHandler:]
  -[VSSubscriptionRegistry dealloc]
  -[VSSubscriptionRegistry predicateFactory]
  -[VSSubscriptionRegistry .cxx_destruct]
  -[VSSubscriptionRegistry fetchActiveSubscriptionsWithOptions:completionHandler:]
  -[VSSubscriptionRegistry setPersistentContainer:]
  -[VSSubscriptionRegistry _predicateForPersistentAttributesOfSubscriptions:withEntity:forFiltering:]
  -[VSSubscriptionRegistry _saveChangesToContext:]
  -[VSSubscriptionRegistry registerSubscription:]
  -[VSSubscriptionRegistry remoteNotifier]
  -[VSSubscriptionRegistry setRemoteNotifier:]
  -[VSSubscriptionRegistry removeSubscriptions:]
  -[VSSubscriptionRegistry setPredicateFactory:]
  -[VSSubscriptionRegistry _securityTaskForCurrentConnection]
  -[VSSubscriptionRegistry _predicateForCurrentConnectionWithRequestKind:]
  -[VSSubscriptionRegistry init]
  -[VSSubscriptionRegistry _fetchRequest]


VSDeveloperIdentityProviderFetchAllOperation : VSAsyncOperation
 @property  VSOptional *result
 @property  VSDeveloperServiceConnection *connection

  // instance methods
  -[VSDeveloperIdentityProviderFetchAllOperation setResult:]
  -[VSDeveloperIdentityProviderFetchAllOperation .cxx_destruct]
  -[VSDeveloperIdentityProviderFetchAllOperation connection]
  -[VSDeveloperIdentityProviderFetchAllOperation result]
  -[VSDeveloperIdentityProviderFetchAllOperation executionDidBegin]
  -[VSDeveloperIdentityProviderFetchAllOperation setConnection:]


VSServiceConnectionHandler : NSObject
 @property  NSXPCConnection *connection
 @property  <VSServiceConnectionHandlerDelegate> *delegate

  // instance methods
  -[VSServiceConnectionHandler setDelegate:]
  -[VSServiceConnectionHandler delegate]
  -[VSServiceConnectionHandler .cxx_destruct]
  -[VSServiceConnectionHandler connection]
  -[VSServiceConnectionHandler _didFinish]
  -[VSServiceConnectionHandler setConnection:]


VSAccountChannelsCenter : NSObject
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  NSURL *fileURL
 @property  VSAccountStore *accountStore
 @property  NSString *fileName
 @property  NSURL *directoryURL
 @property  @? identityProviderFetchOperationBlock
 @property  NSUndoManager *undoManager

  // class methods
  +[VSAccountChannelsCenter sharedCenter]
  +[VSAccountChannelsCenter _startOperationAndWaitForCompletion:]
  +[VSAccountChannelsCenter _accountChannelsWithProviderID:]
  +[VSAccountChannelsCenter _defaultDirectoryURL]
  +[VSAccountChannelsCenter _defaultFileName]

  // instance methods
  -[VSAccountChannelsCenter initWithAccountStore:]
  -[VSAccountChannelsCenter directoryURL]
  -[VSAccountChannelsCenter fileName]
  -[VSAccountChannelsCenter setAccountStore:]
  -[VSAccountChannelsCenter accountStore]
  -[VSAccountChannelsCenter undoManager]
  -[VSAccountChannelsCenter setSerialQueue:]
  -[VSAccountChannelsCenter setFileURL:]
  -[VSAccountChannelsCenter serialQueue]
  -[VSAccountChannelsCenter fileURL]
  -[VSAccountChannelsCenter setUndoManager:]
  -[VSAccountChannelsCenter setDirectoryURL:]
  -[VSAccountChannelsCenter .cxx_destruct]
  -[VSAccountChannelsCenter setFileName:]
  -[VSAccountChannelsCenter init]
  -[VSAccountChannelsCenter fetchAccountChannelsWithCompletionHandler:]
  -[VSAccountChannelsCenter _snapshotPreviousChannels]
  -[VSAccountChannelsCenter _storeIdentityProviderForAccount:]
  -[VSAccountChannelsCenter _savedAccountChannelsForIdentityProviderID:storeIdentityProvider:]
  -[VSAccountChannelsCenter _savedAccountChannels]
  -[VSAccountChannelsCenter _enqueueRemoveSavedAccountChannelsAndWait]
  -[VSAccountChannelsCenter _removeSavedAccountChannels]
  -[VSAccountChannelsCenter _enqueueSaveAccountChannelsAndWait:]
  -[VSAccountChannelsCenter _saveAccountChannels:]
  -[VSAccountChannelsCenter _saveAccountChannels:withCompletionHandler:]
  -[VSAccountChannelsCenter _removeSavedAccountChannelsWithCompletionHandler:]
  -[VSAccountChannelsCenter identityProviderFetchOperationBlock]
  -[VSAccountChannelsCenter setIdentityProviderFetchOperationBlock:]


VSUserAccountManager : NSObject <VSRemoteNotifierDelegate>
 @property  VSUserAccountServiceConnection *connection
 @property  VSRemoteNotifier *remoteNotifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSUserAccountManager sharedUserAccountManager]

  // instance methods
  -[VSUserAccountManager .cxx_destruct]
  -[VSUserAccountManager connection]
  -[VSUserAccountManager remoteNotifier:didReceiveRemoteNotificationWithUserInfo:]
  -[VSUserAccountManager remoteNotifier]
  -[VSUserAccountManager setRemoteNotifier:]
  -[VSUserAccountManager init]
  -[VSUserAccountManager setConnection:]
  -[VSUserAccountManager updateUserAccount:completion:]
  -[VSUserAccountManager queryUserAccountsWithOptions:completion:]
  -[VSUserAccountManager deleteUserAccount:completion:]


VSVerificationDataOperation : VSAsyncOperation
 @property  VSOptional *result
 @property  AKAnisetteProvisioningController *provisioningController

  // instance methods
  -[VSVerificationDataOperation setResult:]
  -[VSVerificationDataOperation .cxx_destruct]
  -[VSVerificationDataOperation result]
  -[VSVerificationDataOperation _finishWithError:]
  -[VSVerificationDataOperation _finishWithData:]
  -[VSVerificationDataOperation init]
  -[VSVerificationDataOperation executionDidBegin]
  -[VSVerificationDataOperation provisioningController]
  -[VSVerificationDataOperation setProvisioningController:]
  -[VSVerificationDataOperation _finishWithResult:bytes:length:]


VSAMSBagLoadOperation : VSAsyncOperation
 @property  id value
 @property  NSError *error
 @property  NSString *bagKey

  // instance methods
  -[VSAMSBagLoadOperation error]
  -[VSAMSBagLoadOperation bagKey]
  -[VSAMSBagLoadOperation .cxx_destruct]
  -[VSAMSBagLoadOperation setError:]
  -[VSAMSBagLoadOperation setValue:]
  -[VSAMSBagLoadOperation value]
  -[VSAMSBagLoadOperation setBagKey:]
  -[VSAMSBagLoadOperation executionDidBegin]


VSSubscriptionRegistrationCenter : NSObject <VSRemoteNotifierDelegate, VSSubscriptionServiceProtocol>
 @property  NSOperationQueue *privateQueue
 @property  NSMutableDictionary *subscriptionsByOptions
 @property  VSDelayOperation *expirationOperation
 @property  VSRemoteNotifier *remoteNotifier
 @property  VSSubscriptionServiceConnection *connection
 @property  VSSecurityTask *currentTask
 @property  VSLinkedOnOrAfterChecker *linkedOnOrAfterChecker
 @property  VSSubscriptionPredicateFactory *predicateFactory
 @property  VSSubscriptionFetchOptionsValidator *fetchOptionsValidator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSSubscriptionRegistrationCenter defaultSubscriptionRegistrationCenter]

  // instance methods
  -[VSSubscriptionRegistrationCenter _sendLocalNotificationWithUserInfo:]
  -[VSSubscriptionRegistrationCenter _shouldAllowAccessToSubscription:]
  -[VSSubscriptionRegistrationCenter _serviceWithErrorHandler:]
  -[VSSubscriptionRegistrationCenter expirationOperation]
  -[VSSubscriptionRegistrationCenter setCurrentTask:]
  -[VSSubscriptionRegistrationCenter _resetExpirationOperation]
  -[VSSubscriptionRegistrationCenter _refreshCachedSubscriptions]
  -[VSSubscriptionRegistrationCenter dealloc]
  -[VSSubscriptionRegistrationCenter setExpirationOperation:]
  -[VSSubscriptionRegistrationCenter predicateFactory]
  -[VSSubscriptionRegistrationCenter .cxx_destruct]
  -[VSSubscriptionRegistrationCenter fetchActiveSubscriptionsWithOptions:completionHandler:]
  -[VSSubscriptionRegistrationCenter setPrivateQueue:]
  -[VSSubscriptionRegistrationCenter _shouldRaiseExceptionsForMisuse]
  -[VSSubscriptionRegistrationCenter connection]
  -[VSSubscriptionRegistrationCenter privateQueue]
  -[VSSubscriptionRegistrationCenter subscriptionsByOptions]
  -[VSSubscriptionRegistrationCenter remoteNotifier:didReceiveRemoteNotificationWithUserInfo:]
  -[VSSubscriptionRegistrationCenter fetchOptionsValidator]
  -[VSSubscriptionRegistrationCenter setFetchOptionsValidator:]
  -[VSSubscriptionRegistrationCenter currentTask]
  -[VSSubscriptionRegistrationCenter registerSubscription:]
  -[VSSubscriptionRegistrationCenter remoteNotifier]
  -[VSSubscriptionRegistrationCenter setCurrentSubscription:]
  -[VSSubscriptionRegistrationCenter setRemoteNotifier:]
  -[VSSubscriptionRegistrationCenter setLinkedOnOrAfterChecker:]
  -[VSSubscriptionRegistrationCenter removeSubscriptions:]
  -[VSSubscriptionRegistrationCenter linkedOnOrAfterChecker]
  -[VSSubscriptionRegistrationCenter setPredicateFactory:]
  -[VSSubscriptionRegistrationCenter setSubscriptionsByOptions:]
  -[VSSubscriptionRegistrationCenter init]
  -[VSSubscriptionRegistrationCenter setConnection:]


VSAccountManagerResult : NSObject
 @property  NSOperation *operation

  // instance methods
  -[VSAccountManagerResult initWithOperation:]
  -[VSAccountManagerResult operation]
  -[VSAccountManagerResult setOperation:]
  -[VSAccountManagerResult .cxx_destruct]
  -[VSAccountManagerResult cancel]
  -[VSAccountManagerResult init]


VSKeyPathBasedTreeNode : VSTreeNode
 @property  NSString *keyPath

  // instance methods
  -[VSKeyPathBasedTreeNode .cxx_destruct]
  -[VSKeyPathBasedTreeNode keyPath]
  -[VSKeyPathBasedTreeNode init]
  -[VSKeyPathBasedTreeNode initWithRepresentedObject:]
  -[VSKeyPathBasedTreeNode initWithRepresentedObject:keyPath:]


VSViewServiceRequestCenter : NSObject
 @property  NSOperationQueue *requestQueue
 @property  NSOperationQueue *completionQueue

  // class methods
  +[VSViewServiceRequestCenter sharedViewServiceRequestCenter]

  // instance methods
  -[VSViewServiceRequestCenter requestQueue]
  -[VSViewServiceRequestCenter setRequestQueue:]
  -[VSViewServiceRequestCenter completionQueue]
  -[VSViewServiceRequestCenter setCompletionQueue:]
  -[VSViewServiceRequestCenter .cxx_destruct]
  -[VSViewServiceRequestCenter init]
  -[VSViewServiceRequestCenter enqueueCompletionHandlerBlock:]
  -[VSViewServiceRequestCenter enqueueRequest:withAccountManagerDelegate:operationDelegate:completionHandler:]


VSTestSetupPreparationOperation : VSAsyncOperation
 @property  NSOperationQueue *privateQueue
 @property  NSArray *errors

  // instance methods
  -[VSTestSetupPreparationOperation .cxx_destruct]
  -[VSTestSetupPreparationOperation setErrors:]
  -[VSTestSetupPreparationOperation setPrivateQueue:]
  -[VSTestSetupPreparationOperation privateQueue]
  -[VSTestSetupPreparationOperation errors]
  -[VSTestSetupPreparationOperation init]
  -[VSTestSetupPreparationOperation executionDidBegin]
  -[VSTestSetupPreparationOperation addError:]


VSSecurityTask : NSObject
 @property  NSString *signingIdentifier

  // class methods
  +[VSSecurityTask securityTaskWithAuditToken:]
  +[VSSecurityTask securityTaskForCurrentConnection]
  +[VSSecurityTask currentSecurityTask]
  +[VSSecurityTask setSecurityTaskForCurrentConnection:]

  // instance methods
  -[VSSecurityTask shouldAllowAccessForBooleanEntitlement:]
  -[VSSecurityTask initWithAuditToken:createWithAuditTokenProc:copyValueForEntitlementProc:]
  -[VSSecurityTask initWithCreateFromSelfProc:copyValueForEntitlementProc:]
  -[VSSecurityTask dealloc]
  -[VSSecurityTask _taskRef]
  -[VSSecurityTask _copySigningIdentifier]
  -[VSSecurityTask getValue:forEntitlement:error:]
  -[VSSecurityTask shouldAllowAccessToSubscriberIdentifierHashModifier:]
  -[VSSecurityTask signingIdentifier]
  -[VSSecurityTask init]


VSIdentityProviderUserAccountUpdateOperation : VSAsyncOperation
 @property  NSError *error
 @property  VSIdentityProvider *provider
 @property  NSArray *userAccounts

  // instance methods
  -[VSIdentityProviderUserAccountUpdateOperation error]
  -[VSIdentityProviderUserAccountUpdateOperation .cxx_destruct]
  -[VSIdentityProviderUserAccountUpdateOperation setError:]
  -[VSIdentityProviderUserAccountUpdateOperation provider]
  -[VSIdentityProviderUserAccountUpdateOperation executionDidBegin]
  -[VSIdentityProviderUserAccountUpdateOperation userAccounts]
  -[VSIdentityProviderUserAccountUpdateOperation initWithIdentityProvider:userAccounts:]
  -[VSIdentityProviderUserAccountUpdateOperation _userAccountsForJSUserAccounts]
  -[VSIdentityProviderUserAccountUpdateOperation _allowedBundleIDs]


VSPersistentStorage : NSObject
 @property  VSAccountStore *accountStore
 @property  VSAccountChannelsCenter *channelsCenter
 @property  VSPrivacyVoucherLockbox *voucherLockbox
 @property  VSPrivacyFacade *privacyFacade

  // class methods
  +[VSPersistentStorage defaultStorageDirectoryURL]

  // instance methods
  -[VSPersistentStorage initWithAccountStore:]
  -[VSPersistentStorage accountStore]
  -[VSPersistentStorage .cxx_destruct]
  -[VSPersistentStorage init]
  -[VSPersistentStorage privacyFacade]
  -[VSPersistentStorage voucherLockbox]
  -[VSPersistentStorage initWithAccountStore:channelsCenterClass:]
  -[VSPersistentStorage channelsCenter]


VSAccountMetadataRequest : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *channelIdentifier
 @property  NSArray *supportedAccountProviderIdentifiers
 @property  NSArray *featuredAccountProviderIdentifiers
 @property  NSString *verificationToken
 @property  BOOL includeAccountProviderIdentifier
 @property  BOOL includeAuthenticationExpirationDate
 @property  NSString *localizedVideoTitle
 @property  BOOL interruptionAllowed
 @property  BOOL forceAuthentication
 @property  NSArray *attributeNames
 @property  NSArray *supportedAuthenticationSchemes
 @property  NSString *accountProviderAuthenticationToken
 @property  NSArray *applicationAccountProviders

  // class methods
  +[VSAccountMetadataRequest supportsSecureCoding]

  // instance methods
  -[VSAccountMetadataRequest encodeWithCoder:]
  -[VSAccountMetadataRequest .cxx_destruct]
  -[VSAccountMetadataRequest copyWithZone:]
  -[VSAccountMetadataRequest isEqual:]
  -[VSAccountMetadataRequest init]
  -[VSAccountMetadataRequest initWithCoder:]
  -[VSAccountMetadataRequest attributeNames]
  -[VSAccountMetadataRequest channelIdentifier]
  -[VSAccountMetadataRequest setChannelIdentifier:]
  -[VSAccountMetadataRequest verificationToken]
  -[VSAccountMetadataRequest setVerificationToken:]
  -[VSAccountMetadataRequest applicationAccountProviders]
  -[VSAccountMetadataRequest localizedVideoTitle]
  -[VSAccountMetadataRequest accountProviderAuthenticationToken]
  -[VSAccountMetadataRequest supportedAuthenticationSchemes]
  -[VSAccountMetadataRequest setSupportedAuthenticationSchemes:]
  -[VSAccountMetadataRequest setAttributeNames:]
  -[VSAccountMetadataRequest setSupportedAccountProviderIdentifiers:]
  -[VSAccountMetadataRequest setFeaturedAccountProviderIdentifiers:]
  -[VSAccountMetadataRequest supportedAccountProviderIdentifiers]
  -[VSAccountMetadataRequest featuredAccountProviderIdentifiers]
  -[VSAccountMetadataRequest includeAccountProviderIdentifier]
  -[VSAccountMetadataRequest setIncludeAccountProviderIdentifier:]
  -[VSAccountMetadataRequest includeAuthenticationExpirationDate]
  -[VSAccountMetadataRequest setIncludeAuthenticationExpirationDate:]
  -[VSAccountMetadataRequest setLocalizedVideoTitle:]
  -[VSAccountMetadataRequest isInterruptionAllowed]
  -[VSAccountMetadataRequest setInterruptionAllowed:]
  -[VSAccountMetadataRequest forceAuthentication]
  -[VSAccountMetadataRequest setForceAuthentication:]
  -[VSAccountMetadataRequest setAccountProviderAuthenticationToken:]
  -[VSAccountMetadataRequest setApplicationAccountProviders:]


VSViewServiceResponse : NSObject <NSCopying, NSSecureCoding>
 @property  VSAccountMetadata *accountMetadata

  // class methods
  +[VSViewServiceResponse supportsSecureCoding]

  // instance methods
  -[VSViewServiceResponse encodeWithCoder:]
  -[VSViewServiceResponse .cxx_destruct]
  -[VSViewServiceResponse copyWithZone:]
  -[VSViewServiceResponse isEqual:]
  -[VSViewServiceResponse init]
  -[VSViewServiceResponse initWithCoder:]
  -[VSViewServiceResponse accountMetadata]
  -[VSViewServiceResponse setAccountMetadata:]


VSAccount : NSObject <NSSecureCoding>
 @property  VSAccountStore *accountStore
 @property  unsigned long version
 @property  VSKeychainGenericPassword *keychainItem
 @property  VSKeychainGenericPassword *legacyKeychainItem
 @property  NSNumber *legacyItemHash
 @property  NSString *accountTypeDescription
 @property  NSString *accountDescription
 @property  VSOptional *optionalIdentityProviderDisplayName
 @property  NSString *identityProviderDisplayName
 @property  VSOptional *identityProviderID
 @property  NSString *username
 @property  NSString *preferredAppID
 @property  VSOptional *authenticationToken
 @property  BOOL synchronizable

  // class methods
  +[VSAccount supportsSecureCoding]

  // instance methods
  -[VSAccount accountDescription]
  -[VSAccount setAccountStore:]
  -[VSAccount accountStore]
  -[VSAccount setAccountDescription:]
  -[VSAccount setUsername:]
  -[VSAccount encodeWithCoder:]
  -[VSAccount accountTypeDescription]
  -[VSAccount setAccountTypeDescription:]
  -[VSAccount setSynchronizable:]
  -[VSAccount .cxx_destruct]
  -[VSAccount authenticationToken]
  -[VSAccount username]
  -[VSAccount version]
  -[VSAccount setAuthenticationToken:]
  -[VSAccount setVersion:]
  -[VSAccount isEqual:]
  -[VSAccount init]
  -[VSAccount initWithCoder:]
  -[VSAccount identityProviderDisplayName]
  -[VSAccount contentsHash]
  -[VSAccount isSynchronizable]
  -[VSAccount effectiveModificationDate]
  -[VSAccount optionalIdentityProviderDisplayName]
  -[VSAccount setOptionalIdentityProviderDisplayName:]
  -[VSAccount identityProviderID]
  -[VSAccount setIdentityProviderID:]
  -[VSAccount preferredAppID]
  -[VSAccount setPreferredAppID:]
  -[VSAccount keychainItem]
  -[VSAccount setKeychainItem:]
  -[VSAccount legacyKeychainItem]
  -[VSAccount setLegacyKeychainItem:]
  -[VSAccount legacyItemHash]
  -[VSAccount setLegacyItemHash:]


VSErrorRecoveryAttempterDelegate : NSObject
  // class methods
  +[VSErrorRecoveryAttempterDelegate sharedDelegate]

  // instance methods
  -[VSErrorRecoveryAttempterDelegate didPresentErrorWithRecovery:contextInfo:]


VSErrorRecoveryAttempter : NSObject
 @property  NSOperationQueue *recoveryAttemptingQueue
 @property  NSArray *options

  // instance methods
  -[VSErrorRecoveryAttempter .cxx_destruct]
  -[VSErrorRecoveryAttempter options]
  -[VSErrorRecoveryAttempter setOptions:]
  -[VSErrorRecoveryAttempter init]
  -[VSErrorRecoveryAttempter attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:]
  -[VSErrorRecoveryAttempter attemptRecoveryFromError:optionIndex:]
  -[VSErrorRecoveryAttempter recoveryAttemptingQueue]
  -[VSErrorRecoveryAttempter setRecoveryAttemptingQueue:]


VSErrorRecoveryOption : NSObject
 @property  NSString *localizedAlertButtonTitle
 @property  @? attemptHandler
 @property  BOOL destructive

  // instance methods
  -[VSErrorRecoveryOption setDestructive:]
  -[VSErrorRecoveryOption isDestructive]
  -[VSErrorRecoveryOption .cxx_destruct]
  -[VSErrorRecoveryOption localizedAlertButtonTitle]
  -[VSErrorRecoveryOption setLocalizedAlertButtonTitle:]
  -[VSErrorRecoveryOption attemptHandler]
  -[VSErrorRecoveryOption setAttemptHandler:]


VSFileWriteOperation : VSAsyncOperation
 @property  NSError *error
 @property  VSOptional *data
 @property  VSOptional *destination

  // instance methods
  -[VSFileWriteOperation setDestination:]
  -[VSFileWriteOperation destination]
  -[VSFileWriteOperation error]
  -[VSFileWriteOperation .cxx_destruct]
  -[VSFileWriteOperation setError:]
  -[VSFileWriteOperation setData:]
  -[VSFileWriteOperation init]
  -[VSFileWriteOperation data]
  -[VSFileWriteOperation executionDidBegin]


VSKeychainItemKind : NSObject <NSCopying>
 @property  NSString *itemClassName
 @property  r^{__CFString=} secItemClass
 @property  NSDictionary *attributesByName
 @property  NSDictionary *attributesBySecItemAttributeKey
 @property  NSArray *properties

  // instance methods
  -[VSKeychainItemKind setProperties:]
  -[VSKeychainItemKind properties]
  -[VSKeychainItemKind dealloc]
  -[VSKeychainItemKind .cxx_destruct]
  -[VSKeychainItemKind copyWithZone:]
  -[VSKeychainItemKind init]
  -[VSKeychainItemKind attributesByName]
  -[VSKeychainItemKind setItemClassName:]
  -[VSKeychainItemKind setSecItemClass:]
  -[VSKeychainItemKind attributesBySecItemAttributeKey]
  -[VSKeychainItemKind itemClassName]
  -[VSKeychainItemKind secItemClass]


VSIdentityProviderUserAccountFetchOperation : VSAsyncOperation
 @property  NSOperationQueue *privateQueue
 @property  VSIdentityProvider *provider
 @property  NSArray *results
 @property  NSError *error

  // instance methods
  -[VSIdentityProviderUserAccountFetchOperation error]
  -[VSIdentityProviderUserAccountFetchOperation .cxx_destruct]
  -[VSIdentityProviderUserAccountFetchOperation setPrivateQueue:]
  -[VSIdentityProviderUserAccountFetchOperation setError:]
  -[VSIdentityProviderUserAccountFetchOperation provider]
  -[VSIdentityProviderUserAccountFetchOperation privateQueue]
  -[VSIdentityProviderUserAccountFetchOperation results]
  -[VSIdentityProviderUserAccountFetchOperation setResults:]
  -[VSIdentityProviderUserAccountFetchOperation executionDidBegin]
  -[VSIdentityProviderUserAccountFetchOperation initWithIdentityProvider:]


VSSubscriptionAccountHashValueTransformer : NSValueTransformer
  // class methods
  +[VSSubscriptionAccountHashValueTransformer transformedValueClass]
  +[VSSubscriptionAccountHashValueTransformer allowsReverseTransformation]

  // instance methods
  -[VSSubscriptionAccountHashValueTransformer transformedValue:]


VSSubscriptionPersistentContainer : NSObject
 @property  NSOperationQueue *migrationQueue
 @property  BOOL didSetupPersistence
 @property  NSPersistentStoreCoordinator *persistentStoreCoordinator
 @property  VSOptional *viewContext
 @property  BOOL skipMigration
 @property  NSString *persistentStoreType
 @property  NSURL *persistentStoreURL
 @property  NSURL *subscriptionsPropertyListURL

  // instance methods
  -[VSSubscriptionPersistentContainer performBlock:]
  -[VSSubscriptionPersistentContainer setPersistentStoreCoordinator:]
  -[VSSubscriptionPersistentContainer viewContext]
  -[VSSubscriptionPersistentContainer persistentStoreCoordinator]
  -[VSSubscriptionPersistentContainer setMigrationQueue:]
  -[VSSubscriptionPersistentContainer setPersistentStoreType:]
  -[VSSubscriptionPersistentContainer _performBlock:andWait:]
  -[VSSubscriptionPersistentContainer .cxx_destruct]
  -[VSSubscriptionPersistentContainer performBlockAndWait:]
  -[VSSubscriptionPersistentContainer skipMigration]
  -[VSSubscriptionPersistentContainer setSkipMigration:]
  -[VSSubscriptionPersistentContainer _setupPersistenceIfNeeded:]
  -[VSSubscriptionPersistentContainer setSubscriptionsPropertyListURL:]
  -[VSSubscriptionPersistentContainer didSetupPersistence]
  -[VSSubscriptionPersistentContainer migrationQueue]
  -[VSSubscriptionPersistentContainer setPersistentStoreURL:]
  -[VSSubscriptionPersistentContainer _removePersistentStore]
  -[VSSubscriptionPersistentContainer persistentStoreType]
  -[VSSubscriptionPersistentContainer setDidSetupPersistence:]
  -[VSSubscriptionPersistentContainer setViewContext:]
  -[VSSubscriptionPersistentContainer subscriptionsPropertyListURL]
  -[VSSubscriptionPersistentContainer init]
  -[VSSubscriptionPersistentContainer persistentStoreURL]


VSOnceAndOnlyOnceHandler : NSObject
 @property  @? block

  // instance methods
  -[VSOnceAndOnlyOnceHandler dealloc]
  -[VSOnceAndOnlyOnceHandler .cxx_destruct]
  -[VSOnceAndOnlyOnceHandler setBlock:]
  -[VSOnceAndOnlyOnceHandler block]
  -[VSOnceAndOnlyOnceHandler invoke]


VSSemaphore : NSObject
  // instance methods
  -[VSSemaphore .cxx_destruct]
  -[VSSemaphore wait]
  -[VSSemaphore init]
  -[VSSemaphore signal]


VSWaitGroup : NSObject
  // instance methods
  -[VSWaitGroup enter]
  -[VSWaitGroup .cxx_destruct]
  -[VSWaitGroup leave]
  -[VSWaitGroup wait]
  -[VSWaitGroup init]
  -[VSWaitGroup waitWithMilliseconds:]


VSIdentityProviderAvailabilityInfoCenter : NSObject <VSRemoteNotifierDelegate>
 @property  long long status
 @property  NSOperationQueue *privateQueue
 @property  BOOL hasDeterminedInitialStatus
 @property  VSRemoteNotifier *remoteNotifier
 @property  VSPreferences *preferences
 @property  VSDeveloperServiceConnection *developerServiceConnection
 @property  VSAMSBagLoadOperation *mockAMSBagLoadOperation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSIdentityProviderAvailabilityInfoCenter automaticallyNotifiesObserversOfStatus]
  +[VSIdentityProviderAvailabilityInfoCenter defaultCenter]

  // instance methods
  -[VSIdentityProviderAvailabilityInfoCenter hasDeterminedInitialStatus]
  -[VSIdentityProviderAvailabilityInfoCenter _accountStoreChanged:]
  -[VSIdentityProviderAvailabilityInfoCenter _sendStatusChangeNotification]
  -[VSIdentityProviderAvailabilityInfoCenter _beginStatusUpdateAttemptWithCompletionHandler:]
  -[VSIdentityProviderAvailabilityInfoCenter status]
  -[VSIdentityProviderAvailabilityInfoCenter setPreferences:]
  -[VSIdentityProviderAvailabilityInfoCenter setStatus:]
  -[VSIdentityProviderAvailabilityInfoCenter .cxx_destruct]
  -[VSIdentityProviderAvailabilityInfoCenter setPrivateQueue:]
  -[VSIdentityProviderAvailabilityInfoCenter preferences]
  -[VSIdentityProviderAvailabilityInfoCenter privateQueue]
  -[VSIdentityProviderAvailabilityInfoCenter remoteNotifier:didReceiveRemoteNotificationWithUserInfo:]
  -[VSIdentityProviderAvailabilityInfoCenter remoteNotifier]
  -[VSIdentityProviderAvailabilityInfoCenter developerServiceConnection]
  -[VSIdentityProviderAvailabilityInfoCenter setRemoteNotifier:]
  -[VSIdentityProviderAvailabilityInfoCenter setMockAMSBagLoadOperation:]
  -[VSIdentityProviderAvailabilityInfoCenter mockAMSBagLoadOperation]
  -[VSIdentityProviderAvailabilityInfoCenter setHasDeterminedInitialStatus:]
  -[VSIdentityProviderAvailabilityInfoCenter determineIdentityProviderAvailabilityWithCompletionHandler:]
  -[VSIdentityProviderAvailabilityInfoCenter setDeveloperServiceConnection:]
  -[VSIdentityProviderAvailabilityInfoCenter init]


VSAuthenticationSchemeValueTransformer : NSValueTransformer
  // class methods
  +[VSAuthenticationSchemeValueTransformer transformedValueClass]
  +[VSAuthenticationSchemeValueTransformer allowsReverseTransformation]

  // instance methods
  -[VSAuthenticationSchemeValueTransformer transformedValue:]
  -[VSAuthenticationSchemeValueTransformer reverseTransformedValue:]


VSAuditToken : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *bundleIdentifier
 @property  NSData *tokenBytes

  // class methods
  +[VSAuditToken supportsSecureCoding]

  // instance methods
  -[VSAuditToken encodeWithCoder:]
  -[VSAuditToken .cxx_destruct]
  -[VSAuditToken setBundleIdentifier:]
  -[VSAuditToken bundleIdentifier]
  -[VSAuditToken copyWithZone:]
  -[VSAuditToken isEqual:]
  -[VSAuditToken init]
  -[VSAuditToken initWithCoder:]
  -[VSAuditToken tokenBytes]
  -[VSAuditToken setTokenBytes:]


VSKeychainFetchRequest : NSObject <NSCopying>
 @property  VSOptional *itemKind
 @property  NSPredicate *predicate
 @property  NSArray *sortDescriptors
 @property  unsigned long fetchLimit
 @property  BOOL includesDataValues

  // instance methods
  -[VSKeychainFetchRequest setPredicate:]
  -[VSKeychainFetchRequest fetchLimit]
  -[VSKeychainFetchRequest setFetchLimit:]
  -[VSKeychainFetchRequest setSortDescriptors:]
  -[VSKeychainFetchRequest sortDescriptors]
  -[VSKeychainFetchRequest predicate]
  -[VSKeychainFetchRequest .cxx_destruct]
  -[VSKeychainFetchRequest itemKind]
  -[VSKeychainFetchRequest copyWithZone:]
  -[VSKeychainFetchRequest init]
  -[VSKeychainFetchRequest setItemKind:]
  -[VSKeychainFetchRequest includesDataValues]
  -[VSKeychainFetchRequest setIncludesDataValues:]


VSJSXMLHTTPRequest : VSJSEventTargetObject <VSJSXMLHTTPRequest>
 @property  NSURLSession *session
 @property  NSURLSessionTask *sessionTask
 @property  NSMutableURLRequest *request
 @property  NSURLResponse *urlResponse
 @property  BOOL requestSent
 @property  unsigned long readyState
 @property  unsigned long status
 @property  NSString *statusText
 @property  NSString *responseText
 @property  id response
 @property  unsigned long timeout
 @property  NSString *responseType

  // instance methods
  -[VSJSXMLHTTPRequest abort]
  -[VSJSXMLHTTPRequest statusText]
  -[VSJSXMLHTTPRequest session]
  -[VSJSXMLHTTPRequest initWithContext:]
  -[VSJSXMLHTTPRequest setRequest:]
  -[VSJSXMLHTTPRequest setSession:]
  -[VSJSXMLHTTPRequest setTimeout:]
  -[VSJSXMLHTTPRequest status]
  -[VSJSXMLHTTPRequest setStatus:]
  -[VSJSXMLHTTPRequest .cxx_destruct]
  -[VSJSXMLHTTPRequest timeout]
  -[VSJSXMLHTTPRequest readyState]
  -[VSJSXMLHTTPRequest setResponse:]
  -[VSJSXMLHTTPRequest send:]
  -[VSJSXMLHTTPRequest response]
  -[VSJSXMLHTTPRequest request]
  -[VSJSXMLHTTPRequest init]
  -[VSJSXMLHTTPRequest responseType]
  -[VSJSXMLHTTPRequest setStatusText:]
  -[VSJSXMLHTTPRequest urlResponse]
  -[VSJSXMLHTTPRequest sessionTask]
  -[VSJSXMLHTTPRequest setSessionTask:]
  -[VSJSXMLHTTPRequest setUrlResponse:]
  -[VSJSXMLHTTPRequest setResponseType:]
  -[VSJSXMLHTTPRequest requestSent]
  -[VSJSXMLHTTPRequest getAllResponseHeaders]
  -[VSJSXMLHTTPRequest getResponseHeader:]
  -[VSJSXMLHTTPRequest responseText]
  -[VSJSXMLHTTPRequest open:::::]
  -[VSJSXMLHTTPRequest setRequestHeader::]
  -[VSJSXMLHTTPRequest setReadyState:]
  -[VSJSXMLHTTPRequest _cancelCurrentRequestAndNotify:]
  -[VSJSXMLHTTPRequest _notifyWithFunctionName:eventName:info:]
  -[VSJSXMLHTTPRequest setResponseText:]
  -[VSJSXMLHTTPRequest setRequestSent:]


VSBlockBasedValueTransformer : NSValueTransformer
 @property  @? transformationBlock
 @property  @? reverseTransformationBlock

  // instance methods
  -[VSBlockBasedValueTransformer transformedValue:]
  -[VSBlockBasedValueTransformer .cxx_destruct]
  -[VSBlockBasedValueTransformer reverseTransformedValue:]
  -[VSBlockBasedValueTransformer init]
  -[VSBlockBasedValueTransformer transformationBlock]
  -[VSBlockBasedValueTransformer setTransformationBlock:]
  -[VSBlockBasedValueTransformer reverseTransformationBlock]
  -[VSBlockBasedValueTransformer setReverseTransformationBlock:]


VSAccountMonitor : NSObject <ACMonitoredAccountStoreDelegateProtocol>
 @property  ACMonitoredAccountStore *monitoredAccountStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSAccountMonitor sharedInstance]

  // instance methods
  -[VSAccountMonitor _sendNotification]
  -[VSAccountMonitor accountWasAdded:]
  -[VSAccountMonitor .cxx_destruct]
  -[VSAccountMonitor accountWasRemoved:]
  -[VSAccountMonitor monitoredAccountStore]
  -[VSAccountMonitor accountWasModified:]
  -[VSAccountMonitor accountCredentialChanged:]
  -[VSAccountMonitor setMonitoredAccountStore:]
  -[VSAccountMonitor init]


VSClassForFindingBundle : NSObject

VSJSONDataValueTransformer : NSValueTransformer
  // class methods
  +[VSJSONDataValueTransformer transformedValueClass]
  +[VSJSONDataValueTransformer allowsReverseTransformation]

  // instance methods
  -[VSJSONDataValueTransformer transformedValue:]


VSPrivacyConsentVoucher : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *appAdamID
 @property  NSString *providerID

  // class methods
  +[VSPrivacyConsentVoucher supportsSecureCoding]

  // instance methods
  -[VSPrivacyConsentVoucher providerID]
  -[VSPrivacyConsentVoucher encodeWithCoder:]
  -[VSPrivacyConsentVoucher .cxx_destruct]
  -[VSPrivacyConsentVoucher copyWithZone:]
  -[VSPrivacyConsentVoucher appAdamID]
  -[VSPrivacyConsentVoucher isEqual:]
  -[VSPrivacyConsentVoucher init]
  -[VSPrivacyConsentVoucher initWithCoder:]
  -[VSPrivacyConsentVoucher initWithAppAdamID:providerID:]


VSSetTopBoxProfile : NSObject <NSCopying>
 @property  NSString *providerID
 @property  NSString *userToken
 @property  NSDate *activationTime
 @property  BOOL isDeveloper

  // instance methods
  -[VSSetTopBoxProfile providerID]
  -[VSSetTopBoxProfile .cxx_destruct]
  -[VSSetTopBoxProfile userToken]
  -[VSSetTopBoxProfile copyWithZone:]
  -[VSSetTopBoxProfile setUserToken:]
  -[VSSetTopBoxProfile setProviderID:]
  -[VSSetTopBoxProfile activationTime]
  -[VSSetTopBoxProfile setActivationTime:]
  -[VSSetTopBoxProfile isDeveloper]
  -[VSSetTopBoxProfile initWithProviderID:userToken:activationTime:isDeveloper:]
  -[VSSetTopBoxProfile setIsDeveloper:]


VSDevice : NSObject <VSManagedProfileConnectionObserver, VSRemoteNotifierDelegate>
 @property  NSString *productVersionString
 @property  NSString *serialNumberString
 @property  NSObject<OS_dispatch_queue> *notificationQueue
 @property  NSMutableSet *observers
 @property  ^? copyAnswer
 @property  NSOperationQueue *privateQueue
 @property  VSPreferences *preferences
 @property  @? newDeveloperSettingsFetchOperationBlock
 @property  VSManagedProfileConnection *profileConnection
 @property  VSRemoteNotifier *setTopBoxStateRemoteNotifier
 @property  VSRemoteNotifier *developerSettingsRemoteNotifier
 @property  BOOL runningAnInternalBuild
 @property  BOOL runningACustomerBuild
 @property  unsigned long deviceType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSDevice currentDevice]
  +[VSDevice _runningAnInternalBuildWithCopyAnswer:]
  +[VSDevice _runningACustomerBuildWithCopyAnswer:]
  +[VSDevice _getMobileGestaltBoolean:withCopyAnswer:]
  +[VSDevice _deviceTypeWithCopyAnswer:]
  +[VSDevice _productVersionWithCopyAnswer:]
  +[VSDevice _serialNumberWithCopyAnswer:]

  // instance methods
  -[VSDevice unregisterObserver:]
  -[VSDevice serialNumber]
  -[VSDevice setIgnoreSetTopBoxProfile:]
  -[VSDevice setPreferences:]
  -[VSDevice dealloc]
  -[VSDevice .cxx_destruct]
  -[VSDevice setPrivateQueue:]
  -[VSDevice preferences]
  -[VSDevice registerObserver:]
  -[VSDevice setProfileConnection:]
  -[VSDevice privateQueue]
  -[VSDevice deviceType]
  -[VSDevice remoteNotifier:didReceiveRemoteNotificationWithUserInfo:]
  -[VSDevice productVersion]
  -[VSDevice profileConnection]
  -[VSDevice setObservers:]
  -[VSDevice setNotificationQueue:]
  -[VSDevice notificationQueue]
  -[VSDevice init]
  -[VSDevice observers]
  -[VSDevice serialNumberString]
  -[VSDevice setSerialNumberString:]
  -[VSDevice profileConnectionProfileChanged:]
  -[VSDevice developerIdentityProviderDeletionConfirmationMessage]
  -[VSDevice accountDeletionConfirmationMessageForIdentityProviderDisplayName:]
  -[VSDevice fetchSetTopBoxProfileWithCompletion:]
  -[VSDevice fetchDeviceManagedSetTopBoxProfileWithCompletion:]
  -[VSDevice isRunningAnInternalBuild]
  -[VSDevice isRunningACustomerBuild]
  -[VSDevice refreshSetTopBoxProfile:]
  -[VSDevice cloudConfigurationDidChange]
  -[VSDevice stringForAMSPlatform]
  -[VSDevice stringForAMSPlatformAttributes]
  -[VSDevice stringForAMSDeviceFamilies]
  -[VSDevice productVersionString]
  -[VSDevice setProductVersionString:]
  -[VSDevice copyAnswer]
  -[VSDevice setCopyAnswer:]
  -[VSDevice newDeveloperSettingsFetchOperationBlock]
  -[VSDevice setNewDeveloperSettingsFetchOperationBlock:]
  -[VSDevice setTopBoxStateRemoteNotifier]
  -[VSDevice setSetTopBoxStateRemoteNotifier:]
  -[VSDevice developerSettingsRemoteNotifier]
  -[VSDevice setDeveloperSettingsRemoteNotifier:]


VSIdentityProviderAppsResponse : NSObject
 @property  NSArray *providerAppAdamIDs
 @property  NSArray *channelMappings

  // class methods
  +[VSIdentityProviderAppsResponse supportsSecureCoding]

  // instance methods
  -[VSIdentityProviderAppsResponse encodeWithCoder:]
  -[VSIdentityProviderAppsResponse .cxx_destruct]
  -[VSIdentityProviderAppsResponse copyWithZone:]
  -[VSIdentityProviderAppsResponse isEqual:]
  -[VSIdentityProviderAppsResponse init]
  -[VSIdentityProviderAppsResponse initWithCoder:]
  -[VSIdentityProviderAppsResponse providerAppAdamIDs]
  -[VSIdentityProviderAppsResponse setProviderAppAdamIDs:]
  -[VSIdentityProviderAppsResponse channelMappings]
  -[VSIdentityProviderAppsResponse setChannelMappings:]


VSDelayOperation : VSAsyncOperation
 @property  double delay
 @property  double tolerance
 @property  NSDate *fireDate
 @property  BOOL shouldIgnoreTolerance

  // class methods
  +[VSDelayOperation delayOperationWithDelay:]
  +[VSDelayOperation delayOperationWithFireDate:]

  // instance methods
  -[VSDelayOperation fireDate]
  -[VSDelayOperation tolerance]
  -[VSDelayOperation dealloc]
  -[VSDelayOperation .cxx_destruct]
  -[VSDelayOperation _cancelTimer]
  -[VSDelayOperation delay]
  -[VSDelayOperation cancel]
  -[VSDelayOperation init]
  -[VSDelayOperation executionDidBegin]
  -[VSDelayOperation initWithDelay:tolerance:]
  -[VSDelayOperation initWithFireDate:tolerance:]
  -[VSDelayOperation shouldIgnoreTolerance]
  -[VSDelayOperation setShouldIgnoreTolerance:]


VSSubscriptionPropertyListStore : NSAtomicStore
  // class methods
  +[VSSubscriptionPropertyListStore metadataForPersistentStoreWithURL:error:]
  +[VSSubscriptionPropertyListStore setMetadata:forPersistentStoreWithURL:error:]

  // instance methods
  -[VSSubscriptionPropertyListStore initWithPersistentStoreCoordinator:configurationName:URL:options:]
  -[VSSubscriptionPropertyListStore save:]
  -[VSSubscriptionPropertyListStore load:]
  -[VSSubscriptionPropertyListStore newCacheNodeForManagedObject:]
  -[VSSubscriptionPropertyListStore type]
  -[VSSubscriptionPropertyListStore newReferenceObjectForManagedObject:]
  -[VSSubscriptionPropertyListStore updateCacheNode:fromManagedObject:]


VSDeveloperSettingsUpdateOperation : VSAsyncOperation
 @property  VSOptional *result
 @property  VSDeveloperServiceConnection *connection
 @property  VSDeveloperSettings *settings

  // instance methods
  -[VSDeveloperSettingsUpdateOperation initWithSettings:]
  -[VSDeveloperSettingsUpdateOperation setResult:]
  -[VSDeveloperSettingsUpdateOperation .cxx_destruct]
  -[VSDeveloperSettingsUpdateOperation connection]
  -[VSDeveloperSettingsUpdateOperation settings]
  -[VSDeveloperSettingsUpdateOperation result]
  -[VSDeveloperSettingsUpdateOperation setSettings:]
  -[VSDeveloperSettingsUpdateOperation init]
  -[VSDeveloperSettingsUpdateOperation executionDidBegin]
  -[VSDeveloperSettingsUpdateOperation setConnection:]


VSDeveloperIdentityProvider : NSManagedObject
 @property  NSString *uniqueID
 @property  NSString *providerID
 @property  NSString *nameForSorting
 @property  NSString *authenticationURL
 @property  NSString *certificateURL
 @property  NSArray *authenticationSchemes


VSFileRemoveOperation : VSAsyncOperation
 @property  NSError *error
 @property  NSURL *fileURL

  // instance methods
  -[VSFileRemoveOperation setFileURL:]
  -[VSFileRemoveOperation fileURL]
  -[VSFileRemoveOperation error]
  -[VSFileRemoveOperation .cxx_destruct]
  -[VSFileRemoveOperation setError:]
  -[VSFileRemoveOperation executionDidBegin]


VSPrivacyInfoCenter : NSObject <VSManagedProfileConnectionObserver>
 @property  int registrationToken
 @property  long long accountAccessStatus
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSPrivacyInfoCenter sharedPrivacyInfoCenter]

  // instance methods
  -[VSPrivacyInfoCenter dealloc]
  -[VSPrivacyInfoCenter registrationToken]
  -[VSPrivacyInfoCenter setRegistrationToken:]
  -[VSPrivacyInfoCenter init]
  -[VSPrivacyInfoCenter profileConnectionSettingsChanged:]
  -[VSPrivacyInfoCenter profileConnectionProfileChanged:]
  -[VSPrivacyInfoCenter _invalidateAccountAccessStatus]
  -[VSPrivacyInfoCenter updateAccountAccessStatusWithResponse:]
  -[VSPrivacyInfoCenter updateAccountAccessStatusWithError:]
  -[VSPrivacyInfoCenter accountAccessStatus]
  -[VSPrivacyInfoCenter setAccountAccessStatus:]


VSPrivacyVoucherLockbox : NSObject <VSRemoteNotifierDelegate>
 @property  VSRemoteNotifier *remoteNotifier
 @property  NSArray *unredeemedVouchers
 @property  NSUndoManager *undoManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSPrivacyVoucherLockbox getVouchersFromSelectedAppDescriptions:forProviderID:]

  // instance methods
  -[VSPrivacyVoucherLockbox undoManager]
  -[VSPrivacyVoucherLockbox setUndoManager:]
  -[VSPrivacyVoucherLockbox .cxx_destruct]
  -[VSPrivacyVoucherLockbox remoteNotifier:didReceiveRemoteNotificationWithUserInfo:]
  -[VSPrivacyVoucherLockbox remoteNotifier]
  -[VSPrivacyVoucherLockbox setRemoteNotifier:]
  -[VSPrivacyVoucherLockbox init]
  -[VSPrivacyVoucherLockbox issueVouchersForApps:providerID:]
  -[VSPrivacyVoucherLockbox issueVouchers:]
  -[VSPrivacyVoucherLockbox redeemVoucher:]
  -[VSPrivacyVoucherLockbox _voucherArchiveURL]
  -[VSPrivacyVoucherLockbox setUnredeemedVouchers:]
  -[VSPrivacyVoucherLockbox unredeemedVouchers]
  -[VSPrivacyVoucherLockbox removeAllVouchers]


VSApplicationBootURLOperation : VSAsyncOperation <NSURLSessionDelegate>
 @property  VSPreferences *preferences
 @property  BOOL test
 @property  BOOL skipSystemTrustVerification
 @property  NSDictionary *trustInfo
 @property  NSURL *url
 @property  BOOL developer
 @property  VSFailable *urlOrError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSApplicationBootURLOperation URLSession:didReceiveChallenge:completionHandler:]
  -[VSApplicationBootURLOperation setUrl:]
  -[VSApplicationBootURLOperation setPreferences:]
  -[VSApplicationBootURLOperation .cxx_destruct]
  -[VSApplicationBootURLOperation preferences]
  -[VSApplicationBootURLOperation url]
  -[VSApplicationBootURLOperation init]
  -[VSApplicationBootURLOperation executionDidBegin]
  -[VSApplicationBootURLOperation setTest:]
  -[VSApplicationBootURLOperation setDeveloper:]
  -[VSApplicationBootURLOperation isDeveloper]
  -[VSApplicationBootURLOperation initWithBootURL:isDeveloper:]
  -[VSApplicationBootURLOperation generateFilePathForURL:]
  -[VSApplicationBootURLOperation validateTrust:]
  -[VSApplicationBootURLOperation verifyCertificateIsSystemTrustedWithTrust:]
  -[VSApplicationBootURLOperation urlOrError]
  -[VSApplicationBootURLOperation setUrlOrError:]
  -[VSApplicationBootURLOperation isForTesting]
  -[VSApplicationBootURLOperation skipSystemTrustVerification]
  -[VSApplicationBootURLOperation setSkipSystemTrustVerification:]
  -[VSApplicationBootURLOperation trustInfo]
  -[VSApplicationBootURLOperation setTrustInfo:]


VSAsyncOperation : NSOperation
  // instance methods
  -[VSAsyncOperation isFinished]
  -[VSAsyncOperation isExecuting]
  -[VSAsyncOperation isAsynchronous]
  -[VSAsyncOperation start]
  -[VSAsyncOperation cancel]
  -[VSAsyncOperation executionDidBegin]
  -[VSAsyncOperation finishExecutionIfPossible]


VSPrivacyService : VSServiceListener
  // instance methods
  -[VSPrivacyService init]


VSServiceListener : NSObject <VSServiceConnectionHandlerDelegate, NSXPCListenerDelegate>
 @property  NSMutableSet *connectionHandlers
 @property  NSArray *entitlementNames
 @property  NSXPCInterface *exportedInterface
 @property  id exportedObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSServiceListener setExportedObject:]
  -[VSServiceListener .cxx_destruct]
  -[VSServiceListener exportedObject]
  -[VSServiceListener exportedInterface]
  -[VSServiceListener setExportedInterface:]
  -[VSServiceListener listener:shouldAcceptNewConnection:]
  -[VSServiceListener init]
  -[VSServiceListener connectionHandlers]
  -[VSServiceListener connectionHandlerDidFinish:]
  -[VSServiceListener _addConnectionHandler:]
  -[VSServiceListener _removeConnectionHandler:]
  -[VSServiceListener entitlementNames]
  -[VSServiceListener setEntitlementNames:]
  -[VSServiceListener setConnectionHandlers:]


VSReverseValueTransformer : NSValueTransformer
 @property  NSValueTransformer *valueTransformer

  // class methods
  +[VSReverseValueTransformer reverseValueTransformerWithValueTransformer:]

  // instance methods
  -[VSReverseValueTransformer transformedValue:]
  -[VSReverseValueTransformer .cxx_destruct]
  -[VSReverseValueTransformer reverseTransformedValue:]
  -[VSReverseValueTransformer setValueTransformer:]
  -[VSReverseValueTransformer valueTransformer]
  -[VSReverseValueTransformer init]
  -[VSReverseValueTransformer initWithValueTransformer:]


VSAccountSaveOperation : VSAsyncOperation
 @property  NSArray *unsavedAccounts
 @property  VSPersistentStorage *storage
 @property  VSAccountChannels *unsavedChannels
 @property  VSOptional *result
 @property  NSOperation *currentOperation

  // instance methods
  -[VSAccountSaveOperation setStorage:]
  -[VSAccountSaveOperation setResult:]
  -[VSAccountSaveOperation storage]
  -[VSAccountSaveOperation currentOperation]
  -[VSAccountSaveOperation .cxx_destruct]
  -[VSAccountSaveOperation result]
  -[VSAccountSaveOperation cancel]
  -[VSAccountSaveOperation init]
  -[VSAccountSaveOperation executionDidBegin]
  -[VSAccountSaveOperation setCurrentOperation:]
  -[VSAccountSaveOperation unsavedAccounts]
  -[VSAccountSaveOperation setUnsavedAccounts:]
  -[VSAccountSaveOperation initWithUnsavedAccounts:channels:storage:]
  -[VSAccountSaveOperation _startCredentialSaveOperation]
  -[VSAccountSaveOperation _startAccountChannelsSaveOperation]
  -[VSAccountSaveOperation unsavedChannels]
  -[VSAccountSaveOperation setUnsavedChannels:]


VSJSAppScriptEvaluatorResult : NSObject
 @property  NSString *url
 @property  BOOL loaded
 @property  NSError *loadError

  // instance methods
  -[VSJSAppScriptEvaluatorResult loaded]
  -[VSJSAppScriptEvaluatorResult setUrl:]
  -[VSJSAppScriptEvaluatorResult .cxx_destruct]
  -[VSJSAppScriptEvaluatorResult loadError]
  -[VSJSAppScriptEvaluatorResult setLoaded:]
  -[VSJSAppScriptEvaluatorResult url]
  -[VSJSAppScriptEvaluatorResult setLoadError:]


VSJSAppScriptEvaluator : NSObject <VSStateMachineDelegate>
 @property  VSJSApp *app
 @property  VSStateMachine *stateMachine
 @property  NSMutableArray *remainingURLs
 @property  NSString *currentURL
 @property  NSMutableArray *results
 @property  NSArray *urls
 @property  @? completionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSJSAppScriptEvaluator setStateMachine:]
  -[VSJSAppScriptEvaluator stateMachine]
  -[VSJSAppScriptEvaluator setCompletionBlock:]
  -[VSJSAppScriptEvaluator completionBlock]
  -[VSJSAppScriptEvaluator .cxx_destruct]
  -[VSJSAppScriptEvaluator urls]
  -[VSJSAppScriptEvaluator results]
  -[VSJSAppScriptEvaluator start]
  -[VSJSAppScriptEvaluator setResults:]
  -[VSJSAppScriptEvaluator app]
  -[VSJSAppScriptEvaluator setApp:]
  -[VSJSAppScriptEvaluator initWithApp:urls:]
  -[VSJSAppScriptEvaluator transitionToEnqueueingNextUrlState]
  -[VSJSAppScriptEvaluator transitionToFetchingScriptState]
  -[VSJSAppScriptEvaluator transitionToDoneState]
  -[VSJSAppScriptEvaluator remainingURLs]
  -[VSJSAppScriptEvaluator setRemainingURLs:]
  -[VSJSAppScriptEvaluator currentURL]
  -[VSJSAppScriptEvaluator setCurrentURL:]


VSUserAccount : NSObject <NSSecureCoding>
 @property  long long sourceType
 @property  NSString *sourceIdentifier
 @property  BOOL fromCurrentDevice
 @property  long long deviceCategory
 @property  unsigned long keychainItemHash
 @property  NSURL *updateURL
 @property  BOOL requiresSystemTrust
 @property  NSString *accountProviderIdentifier
 @property  NSString *identifier
 @property  long long accountType
 @property  BOOL deleted
 @property  NSDate *subscriptionBillingCycleEndDate
 @property  NSArray *tierIdentifiers
 @property  NSString *billingIdentifier
 @property  NSString *authenticationData

  // class methods
  +[VSUserAccount new]
  +[VSUserAccount supportsSecureCoding]

  // instance methods
  -[VSUserAccount sourceType]
  -[VSUserAccount setSourceType:]
  -[VSUserAccount isDeleted]
  -[VSUserAccount identifier]
  -[VSUserAccount setDeleted:]
  -[VSUserAccount setSourceIdentifier:]
  -[VSUserAccount encodeWithCoder:]
  -[VSUserAccount setAccountType:]
  -[VSUserAccount .cxx_destruct]
  -[VSUserAccount setIdentifier:]
  -[VSUserAccount sourceIdentifier]
  -[VSUserAccount deviceCategory]
  -[VSUserAccount accountType]
  -[VSUserAccount init]
  -[VSUserAccount initWithCoder:]
  -[VSUserAccount setDeviceCategory:]
  -[VSUserAccount setBillingIdentifier:]
  -[VSUserAccount setTierIdentifiers:]
  -[VSUserAccount tierIdentifiers]
  -[VSUserAccount billingIdentifier]
  -[VSUserAccount updateURL]
  -[VSUserAccount setUpdateURL:]
  -[VSUserAccount requiresSystemTrust]
  -[VSUserAccount setRequiresSystemTrust:]
  -[VSUserAccount subscriptionBillingCycleEndDate]
  -[VSUserAccount setSubscriptionBillingCycleEndDate:]
  -[VSUserAccount authenticationData]
  -[VSUserAccount setAuthenticationData:]
  -[VSUserAccount initWithAccountType:updateURL:]
  -[VSUserAccount initWithAccountType:updateURL:sourceType:sourceIdentifier:]
  -[VSUserAccount sourceTypeForFiltering]
  -[VSUserAccount accountProviderIdentifier]
  -[VSUserAccount setAccountProviderIdentifier:]
  -[VSUserAccount isFromCurrentDevice]
  -[VSUserAccount setFromCurrentDevice:]
  -[VSUserAccount keychainItemHash]
  -[VSUserAccount setKeychainItemHash:]


VSAppInstallationInfoCenter : NSObject
 @property  VSOptional *installedAppBundleIDs

  // instance methods
  -[VSAppInstallationInfoCenter installedAppBundleIDs]


VSKeychainEditingContext : NSObject
 @property  NSMutableSet *items
 @property  VSKeychainStore *keychainStore
 @property  NSUndoManager *undoManager
 @property  NSSet *insertedItems
 @property  NSSet *updatedItems
 @property  NSSet *deletedItems
 @property  NSSet *registeredItems

  // instance methods
  -[VSKeychainEditingContext save:]
  -[VSKeychainEditingContext undoManager]
  -[VSKeychainEditingContext setItems:]
  -[VSKeychainEditingContext setUndoManager:]
  -[VSKeychainEditingContext keychainStore]
  -[VSKeychainEditingContext executeFetchRequest:error:]
  -[VSKeychainEditingContext .cxx_destruct]
  -[VSKeychainEditingContext items]
  -[VSKeychainEditingContext updatedItems]
  -[VSKeychainEditingContext setKeychainStore:]
  -[VSKeychainEditingContext insertItem:]
  -[VSKeychainEditingContext init]
  -[VSKeychainEditingContext deletedItems]
  -[VSKeychainEditingContext deleteItem:]
  -[VSKeychainEditingContext _populateQuery:usingPredicate:withItemKind:]
  -[VSKeychainEditingContext _findOrCreateItemForCommittedValues:withItemKind:]
  -[VSKeychainEditingContext _populateResult:forRequest:fromMatch:]
  -[VSKeychainEditingContext _queryForItemValues:withItemKind:]
  -[VSKeychainEditingContext _deleteQueryForItemValues:withItemKind:]
  -[VSKeychainEditingContext _populateErrors:withError:affectingItem:]
  -[VSKeychainEditingContext fulfillFault:]
  -[VSKeychainEditingContext _subsetOfRegisteredItemsWithKeyPath:]
  -[VSKeychainEditingContext insertedItems]
  -[VSKeychainEditingContext registeredItems]


VSSubscriptionSourceKindPropertyListValueTransformer : NSValueTransformer
  // class methods
  +[VSSubscriptionSourceKindPropertyListValueTransformer transformedValueClass]
  +[VSSubscriptionSourceKindPropertyListValueTransformer allowsReverseTransformation]

  // instance methods
  -[VSSubscriptionSourceKindPropertyListValueTransformer transformedValue:]
  -[VSSubscriptionSourceKindPropertyListValueTransformer reverseTransformedValue:]


VSJSApp : NSObject <VSStateMachineDelegate>
 @property  NSString *script
 @property  NSURL *url
 @property  NSURL *effectiveURL
 @property  VSSingleThreadDispatchQueue *jsSingleThreadQueue
 @property  JSContext *context
 @property  VSStateMachine *stateMachine
 @property  NSOperationQueue *privateQueue
 @property  NSObject<OS_dispatch_source> *watchdog
 @property  NSMutableArray *scriptEvaluators
 @property  <VSJSAppDelegate> *delegate
 @property  long long state
 @property  BOOL enforceSystemTrust
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSJSApp currentContext]

  // instance methods
  -[VSJSApp setStateMachine:]
  -[VSJSApp stateMachine]
  -[VSJSApp setUrl:]
  -[VSJSApp setDelegate:]
  -[VSJSApp delegate]
  -[VSJSApp state]
  -[VSJSApp _errorWithCode:underlyingError:]
  -[VSJSApp .cxx_destruct]
  -[VSJSApp setPrivateQueue:]
  -[VSJSApp privateQueue]
  -[VSJSApp stop]
  -[VSJSApp evaluateScript:withSourceURL:]
  -[VSJSApp setContext:]
  -[VSJSApp url]
  -[VSJSApp start]
  -[VSJSApp context]
  -[VSJSApp setState:]
  -[VSJSApp script]
  -[VSJSApp setScript:]
  -[VSJSApp watchdog]
  -[VSJSApp setWatchdog:]
  -[VSJSApp _configureWatchdogWithSeconds:]
  -[VSJSApp initWithScriptURL:]
  -[VSJSApp setExceptionWithMessage:]
  -[VSJSApp evaluateWithBlock:]
  -[VSJSApp _initializeContext]
  -[VSJSApp _invokeOnLaunch]
  -[VSJSApp _invokeOnExit]
  -[VSJSApp transitionToWaitingForBootUrlState]
  -[VSJSApp _exceptionErrorWithCode:]
  -[VSJSApp transitionToWaitingForBootScriptState]
  -[VSJSApp transitionToWaitingForOnLaunchCallbackState]
  -[VSJSApp transitionToWaitingForOnExitCallbackState]
  -[VSJSApp transitionToReadyState]
  -[VSJSApp transitionToErrorState]
  -[VSJSApp transitionToStoppedState]
  -[VSJSApp enforceSystemTrust]
  -[VSJSApp setEnforceSystemTrust:]
  -[VSJSApp effectiveURL]
  -[VSJSApp setEffectiveURL:]
  -[VSJSApp jsSingleThreadQueue]
  -[VSJSApp setJsSingleThreadQueue:]
  -[VSJSApp scriptEvaluators]
  -[VSJSApp setScriptEvaluators:]


VSUserNotificationOperation : NSOperation
 @property  unsigned long response
 @property  ^? userNotificationCreateProc
 @property  ^? userNotificationReceiveResponseProc
 @property  ^? userNotificationCancelProc
 @property  NSURL *iconURL
 @property  NSString *title
 @property  NSString *message
 @property  NSString *defaultButtonTitle
 @property  NSString *alternateButtonTitle

  // instance methods
  -[VSUserNotificationOperation setMessage:]
  -[VSUserNotificationOperation setIconURL:]
  -[VSUserNotificationOperation iconURL]
  -[VSUserNotificationOperation .cxx_destruct]
  -[VSUserNotificationOperation title]
  -[VSUserNotificationOperation setResponse:]
  -[VSUserNotificationOperation response]
  -[VSUserNotificationOperation main]
  -[VSUserNotificationOperation message]
  -[VSUserNotificationOperation setTitle:]
  -[VSUserNotificationOperation cancel]
  -[VSUserNotificationOperation init]
  -[VSUserNotificationOperation defaultButtonTitle]
  -[VSUserNotificationOperation setDefaultButtonTitle:]
  -[VSUserNotificationOperation alternateButtonTitle]
  -[VSUserNotificationOperation setAlternateButtonTitle:]
  -[VSUserNotificationOperation userNotificationCreateProc]
  -[VSUserNotificationOperation setUserNotificationCreateProc:]
  -[VSUserNotificationOperation userNotificationReceiveResponseProc]
  -[VSUserNotificationOperation setUserNotificationReceiveResponseProc:]
  -[VSUserNotificationOperation userNotificationCancelProc]
  -[VSUserNotificationOperation setUserNotificationCancelProc:]


VSCompoundValueTransformer : NSValueTransformer
 @property  NSArray *valueTransformers

  // instance methods
  -[VSCompoundValueTransformer transformedValue:]
  -[VSCompoundValueTransformer .cxx_destruct]
  -[VSCompoundValueTransformer reverseTransformedValue:]
  -[VSCompoundValueTransformer init]
  -[VSCompoundValueTransformer valueTransformers]
  -[VSCompoundValueTransformer setValueTransformers:]


VSSubscriptionService : VSServiceListener
  // instance methods
  -[VSSubscriptionService init]


VSKeychainStore : NSObject
  // instance methods
  -[VSKeychainStore addItem:error:]
  -[VSKeychainStore findItemsMatchingQuery:error:]
  -[VSKeychainStore updateAttributes:ofItemsMatchingQuery:error:]
  -[VSKeychainStore deleteItemsMatchingQuery:error:]
  -[VSKeychainStore _fixUpdateConflictForItemWithAttributes:andAttributesToUpdate:]


VSAnalyticsServiceConnection : NSObject
 @property  NSXPCConnection *connection

  // instance methods
  -[VSAnalyticsServiceConnection dealloc]
  -[VSAnalyticsServiceConnection .cxx_destruct]
  -[VSAnalyticsServiceConnection connection]
  -[VSAnalyticsServiceConnection serviceWithErrorHandler:]
  -[VSAnalyticsServiceConnection init]
  -[VSAnalyticsServiceConnection setConnection:]


VSAccountMetadata : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *accountProviderIdentifier
 @property  NSDate *authenticationExpirationDate
 @property  NSData *verificationData
 @property  VSAccountProviderResponse *accountProviderResponse
 @property  NSString *SAMLAttributeQueryResponse

  // class methods
  +[VSAccountMetadata supportsSecureCoding]

  // instance methods
  -[VSAccountMetadata encodeWithCoder:]
  -[VSAccountMetadata .cxx_destruct]
  -[VSAccountMetadata copyWithZone:]
  -[VSAccountMetadata isEqual:]
  -[VSAccountMetadata init]
  -[VSAccountMetadata initWithCoder:]
  -[VSAccountMetadata verificationData]
  -[VSAccountMetadata setVerificationData:]
  -[VSAccountMetadata accountProviderIdentifier]
  -[VSAccountMetadata setAccountProviderIdentifier:]
  -[VSAccountMetadata SAMLAttributeQueryResponse]
  -[VSAccountMetadata authenticationExpirationDate]
  -[VSAccountMetadata setAuthenticationExpirationDate:]
  -[VSAccountMetadata accountProviderResponse]
  -[VSAccountMetadata setAccountProviderResponse:]


VSPersistentUserAccount : NSManagedObject
 @property  NSString *accountIdentifier
 @property  long long accountType
 @property  NSString *authenticationData
 @property  NSDate *billingCycleEndDate
 @property  NSString *billingIdentifier
 @property  NSDate *created
 @property  BOOL developer
 @property  NSString *deviceIdentifier
 @property  NSString *deviceName
 @property  long long deviceType
 @property  long long keychainItemHash
 @property  BOOL markedAsDeleted
 @property  NSDate *modified
 @property  NSString *providerID
 @property  BOOL requiresSystemTrust
 @property  NSString *sourceIdentifier
 @property  long long sourceType
 @property  NSObject *tierIdentifiers
 @property  NSURL *updateURL
 @property  short version

  // class methods
  +[VSPersistentUserAccount fetchRequest]


(VSAdditions)
	// instance methods
	-[(VSAdditions) vs_unsignedLongLongValue]
	-[(VSAdditions) vs_composedCharacterIsWhitespace]
	-[(VSAdditions) vs_composedCharacterIsLetter]
	-[(VSAdditions) vs_composedCharacterIsUppercase]
	-[(VSAdditions) vs_composedCharacterIsLowercase]

NSProgress(VSAccountSerialization)
AMSBag(VSAdditions)
	// class methods
	+[AMSBag(VSAdditions) vs_defaultBag]

(VSAdditions)
	// class methods
	+[(VSAdditions) vs_systemLanaguage]

(VSAdditions)
	// class methods
	+[(VSAdditions) vs_dateAccessQueue]
	+[(VSAdditions) vs_recordedDates]
	+[(VSAdditions) vs_startRecordingDates]
	+[(VSAdditions) vs_stopRecordingDates]
	+[(VSAdditions) vs_currentDate]

	// instance methods
	-[(VSAdditions) vs_dateRoundedToDay]
	-[(VSAdditions) vs_dateIncrementedByDays:]
	-[(VSAdditions) vs_dateIncrementedByMinutes:]
	-[(VSAdditions) vs_isAfter:]
	-[(VSAdditions) vs_isBefore:]

LSApplicationRecord(VSAdditions)
	// class methods
	+[LSApplicationRecord(VSAdditions) vs_applicationRecordWithBundleURL:]
	+[LSApplicationRecord(VSAdditions) vs_applicationRecordWithStoreItemIdentifier:]
	+[LSApplicationRecord(VSAdditions) vs_applicationRecordWithBundleIdentifier:]

NSPropertyDescription(VSSubscriptionAdditions)
	// instance methods
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_setUserInfoValue:forKey:]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_subscriptionKeyPath]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_setSubscriptionKeyPath:]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_suitablePurposes]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_setSuitablePurposes:]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_isSuitableForPurpose:]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_propertyListKey]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_setPropertyListKey:]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_propertyListValueTransformerName]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_setPropertyListValueTransformerName:]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_propertyListValueTransformer]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_JSONKey]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_setJSONKey:]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_isRequiredJSONValue]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_setRequiredJSONValue:]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_expectedJSONValueClasses]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_setExpectedJSONValueClasses:]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_JSONValueTransformerName]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_setJSONValueTransformerName:]
	-[NSPropertyDescription(VSSubscriptionAdditions) vs_JSONValueTransformer]

NSHTTPCookieStorage(VSAdditions)
	// class methods
	+[NSHTTPCookieStorage(VSAdditions) vs_sharedCookieStorage]

	// instance methods
	-[NSHTTPCookieStorage(VSAdditions) vs_saveCookies]

NSManagedObjectContext(VSAdditions)
	// instance methods
	-[NSManagedObjectContext(VSAdditions) vs_removeAllPersistentStores]

NSOperationQueue(VSAdditions)
	// class methods
	+[NSOperationQueue(VSAdditions) queueWithName:]

(VSAdditions)
	// class methods
	+[(VSAdditions) vs_isTimeZoneSet]

(VSAdditions)
	// instance methods
	-[(VSAdditions) vs_componentsJoinedByAttributedString:]

(VSKeyValueBinding)
	// instance methods
	-[(VSKeyValueBinding) vs_bind:toObject:withKeyPath:options:]
	-[(VSKeyValueBinding) vs_unbind:]
	-[(VSKeyValueBinding) vs_valueForBinding:]
	-[(VSKeyValueBinding) vs_setValue:forBinding:]
	-[(VSKeyValueBinding) vs_binderCreatingIfNeeded:]
	-[(VSKeyValueBinding) vs_unbinderCreatingIfNeeded:]

(VSAdditions)
	// instance methods
	-[(VSAdditions) vs_objectOfClass:forKey:]
	-[(VSAdditions) vs_dictionaryForKey:]
	-[(VSAdditions) vs_arrayForKey:]
	-[(VSAdditions) vs_arrayOfKindOfClass:forKey:]
	-[(VSAdditions) vs_arrayOfStringsForKey:]
	-[(VSAdditions) vs_arrayOfNumbersForKey:]
	-[(VSAdditions) vs_arrayOfDictionariesForKey:]
	-[(VSAdditions) vs_numberForKey:]
	-[(VSAdditions) vs_stringForKey:]
	-[(VSAdditions) vs_objectForCaseInsensitiveKey:]
	-[(VSAdditions) vs_objectForNormalizedKey:]

<DEREK BUG Categories!>(VSAdditions)
	// instance methods
	-[<DEREK BUG Categories!>(VSAdditions) vs_setObjectUnlessNil:forKey:]

NSManagedObjectModel(VSSubscriptionAdditions)
	// class methods
	+[NSManagedObjectModel(VSSubscriptionAdditions) vs_subscriptionModelForVersion:]
	+[NSManagedObjectModel(VSSubscriptionAdditions) vs_developerModeModelForVersion:]
	+[NSManagedObjectModel(VSSubscriptionAdditions) vs_identityProviderEntityForVersion:]

NSBundle(VSAdditions)
	// class methods
	+[NSBundle(VSAdditions) vs_frameworkBundle]
	+[NSBundle(VSAdditions) vs_bundleForProcessIdentifier:]

NSError(VSAdditions)
	// instance methods
	-[NSError(VSAdditions) vs_secureCodingSafeError]

NSEntityDescription(VSSubscriptionAdditions)
	// class methods
	+[NSEntityDescription(VSSubscriptionAdditions) vs_subscriptionEntityForVersion:]

	// instance methods
	-[NSEntityDescription(VSSubscriptionAdditions) vs_setUserInfoValue:forKey:]
	-[NSEntityDescription(VSSubscriptionAdditions) vs_referenceValueAttribute]
	-[NSEntityDescription(VSSubscriptionAdditions) vs_setReferenceValueAttribute:]

01 00 0b00 /System/Library/Frameworks/Accounts.framework/Accounts: ACMonitoredAccountStore 
01 00 0700 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAnisetteProvisioningController 
01 00 0700 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDSession 
01 00 0a00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBag 
01 00 0a00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMediaProtocolHandler 
01 00 0a00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMediaRequestEncoder 
01 00 0a00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMediaTokenService 
01 00 0a00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSURLSession 
01 00 0f00 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSContext 
01 00 0f00 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSManagedValue 
01 00 0f00 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSValue 
01 00 1400 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 1400 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1400 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 0800 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0c00 /System/Library/PrivateFrameworks/MetricsKit.framework/MetricsKit: MTMetricsKit 
01 00 0c00 /System/Library/PrivateFrameworks/MetricsKit.framework/MetricsKit: MTUIKitStoreAMSBagDelegatePackage 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSAtomicStore 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSAtomicStoreCacheNode 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSAttributeDescription 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSConstraintConflict 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchIndexDescription 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchIndexElementDescription 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPCookieStorage 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectContext 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSMappingModel 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSMigrationManager 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1100 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentCloudKitContainer 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentContainer 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreCoordinator 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreDescription 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0300 /System/Library/Frameworks/CoreData.framework/CoreData: NSPropertyDescription 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCredential 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValueTransformer 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0e00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSAssertion 
01 00 0e00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSDomainAttribute 
01 00 0e00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSTarget 
