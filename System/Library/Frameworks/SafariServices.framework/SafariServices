|| __DATA.__objc_data _OBJC_CLASS_$_SFAuthenticationSession
|| __DATA.__objc_data _OBJC_CLASS_$_SFBlockBasedCAAnimationDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_SFBrowserDocumentTrackerInfo
|| __DATA.__objc_data _OBJC_CLASS_$_SFContentBlockerManager
|| __DATA.__objc_data _OBJC_CLASS_$_SFContentBlockerState
|| __DATA.__objc_data _OBJC_CLASS_$_SFFolderPickerList
|| __DATA.__objc_data _OBJC_CLASS_$_SFSafariViewControllerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SFSystemAlert
|| __DATA.__objc_data _OBJC_CLASS_$_SSReadingList
|| __DATA.__objc_data _OBJC_CLASS_$__SFActivity
|| __DATA.__objc_data _OBJC_CLASS_$__SFActivityExtensionItemProvider
|| __DATA.__objc_data _OBJC_CLASS_$__SFActivityItemCustomizationController
|| __DATA.__objc_data _OBJC_CLASS_$__SFActivityItemProvider
|| __DATA.__objc_data _OBJC_CLASS_$__SFActivityItemProviderCollection
|| __DATA.__objc_data _OBJC_CLASS_$__SFActivityViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFAdaptivePreviewViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFAddBookmarkActivity
|| __DATA.__objc_data _OBJC_CLASS_$__SFAppAutoFillPasswordViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFAppLinkBanner
|| __DATA.__objc_data _OBJC_CLASS_$__SFAppPasswordSavingViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFApplicationManifestFetcher
|| __DATA.__objc_data _OBJC_CLASS_$__SFAuthenticationContext
|| __DATA.__objc_data _OBJC_CLASS_$__SFAutomaticTabClosingUtilities
|| __DATA.__objc_data _OBJC_CLASS_$__SFAutomationController
|| __DATA.__objc_data _OBJC_CLASS_$__SFBannerModel
|| __DATA.__objc_data _OBJC_CLASS_$__SFBarHoverAssistant
|| __DATA.__objc_data _OBJC_CLASS_$__SFBarManager
|| __DATA.__objc_data _OBJC_CLASS_$__SFBarTheme
|| __DATA.__objc_data _OBJC_CLASS_$__SFBookmarkInfoViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFBookmarkTextEntryTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$__SFBookmarkTextEntryTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFBookmarksLockCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$__SFBrowserConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$__SFBrowserKeyCommands
|| __DATA.__objc_data _OBJC_CLASS_$__SFBrowserSavedState
|| __DATA.__objc_data _OBJC_CLASS_$__SFBrowserView
|| __DATA.__objc_data _OBJC_CLASS_$__SFBrowserWindowSettings
|| __DATA.__objc_data _OBJC_CLASS_$__SFBrowserWindowStateData
|| __DATA.__objc_data _OBJC_CLASS_$__SFCalendarEventDetector
|| __DATA.__objc_data _OBJC_CLASS_$__SFClipLink
|| __DATA.__objc_data _OBJC_CLASS_$__SFContactPreviewViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFContentBlockersPreferenceManager
|| __DATA.__objc_data _OBJC_CLASS_$__SFCreditCardCaptureViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFDialog
|| __DATA.__objc_data _OBJC_CLASS_$__SFDimmingButton
|| __DATA.__objc_data _OBJC_CLASS_$__SFDownload
|| __DATA.__objc_data _OBJC_CLASS_$__SFDownloadActivityItemProvider
|| __DATA.__objc_data _OBJC_CLASS_$__SFDownloadCurrentPageActivity
|| __DATA.__objc_data _OBJC_CLASS_$__SFDownloadDispatcher
|| __DATA.__objc_data _OBJC_CLASS_$__SFDownloadIconCache
|| __DATA.__objc_data _OBJC_CLASS_$__SFDownloadManager
|| __DATA.__objc_data _OBJC_CLASS_$__SFDownloadStorageUsageMonitor
|| __DATA.__objc_data _OBJC_CLASS_$__SFDynamicBarAnimator
|| __DATA.__objc_data _OBJC_CLASS_$__SFEditablePasswordTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFExternalPasswordCredentialViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFFeatureAvailability
|| __DATA.__objc_data _OBJC_CLASS_$__SFFindOnPageUIActivity
|| __DATA.__objc_data _OBJC_CLASS_$__SFFindOnPageView
|| __DATA.__objc_data _OBJC_CLASS_$__SFFolderPickerItem
|| __DATA.__objc_data _OBJC_CLASS_$__SFFolderPickerTableViewCellLayoutManager
|| __DATA.__objc_data _OBJC_CLASS_$__SFFormAutoFillInputSession
|| __DATA.__objc_data _OBJC_CLASS_$__SFFormDataController
|| __DATA.__objc_data _OBJC_CLASS_$__SFGeolocationPermissionManager
|| __DATA.__objc_data _OBJC_CLASS_$__SFICSPreviewViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFImageActivityItemProvider
|| __DATA.__objc_data _OBJC_CLASS_$__SFInjectedJavaScriptController
|| __DATA.__objc_data _OBJC_CLASS_$__SFKillWebContentProcessUIActivity
|| __DATA.__objc_data _OBJC_CLASS_$__SFLinkPresentationIconCache
|| __DATA.__objc_data _OBJC_CLASS_$__SFLinkPreviewHeader
|| __DATA.__objc_data _OBJC_CLASS_$__SFLinkPreviewHelper
|| __DATA.__objc_data _OBJC_CLASS_$__SFLinkRedirectionResolver
|| __DATA.__objc_data _OBJC_CLASS_$__SFLinkWithPreviewActivityItemProvider
|| __DATA.__objc_data _OBJC_CLASS_$__SFMailContentProvider
|| __DATA.__objc_data _OBJC_CLASS_$__SFManagedFeatureObserver
|| __DATA.__objc_data _OBJC_CLASS_$__SFMediaCaptureStatusBarManager
|| __DATA.__objc_data _OBJC_CLASS_$__SFMicrodataExtractor
|| __DATA.__objc_data _OBJC_CLASS_$__SFNavigationBarItem
|| __DATA.__objc_data _OBJC_CLASS_$__SFNavigationBarTheme
|| __DATA.__objc_data _OBJC_CLASS_$__SFNavigationIntent
|| __DATA.__objc_data _OBJC_CLASS_$__SFNavigationIntentBuilder
|| __DATA.__objc_data _OBJC_CLASS_$__SFNavigationResult
|| __DATA.__objc_data _OBJC_CLASS_$__SFNavigationUtilitiesManager
|| __DATA.__objc_data _OBJC_CLASS_$__SFPageLoadErrorController
|| __DATA.__objc_data _OBJC_CLASS_$__SFPageZoomPreferenceManager
|| __DATA.__objc_data _OBJC_CLASS_$__SFPasswordAuditingViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFPasswordIconController
|| __DATA.__objc_data _OBJC_CLASS_$__SFPasswordManagerLockedView
|| __DATA.__objc_data _OBJC_CLASS_$__SFPasswordPickerTableConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$__SFPasswordPickerTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFPasswordViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFPerSitePreferenceDisplayInformation
|| __DATA.__objc_data _OBJC_CLASS_$__SFPerSitePreferenceNotifyingListController
|| __DATA.__objc_data _OBJC_CLASS_$__SFPerSitePreferencePopoverDisplayInformation
|| __DATA.__objc_data _OBJC_CLASS_$__SFPerSitePreferencesPopoverViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFPerSitePreferencesUtilities
|| __DATA.__objc_data _OBJC_CLASS_$__SFPerSitePreferencesVendor
|| __DATA.__objc_data _OBJC_CLASS_$__SFPopoverPresentationDelegate
|| __DATA.__objc_data _OBJC_CLASS_$__SFPopoverSizingTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFPrintActivityItemProvider
|| __DATA.__objc_data _OBJC_CLASS_$__SFPrintController
|| __DATA.__objc_data _OBJC_CLASS_$__SFQRCodeDetectionController
|| __DATA.__objc_data _OBJC_CLASS_$__SFQRImagePreviewViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFQuickLookDocument
|| __DATA.__objc_data _OBJC_CLASS_$__SFQuickLookDocumentController
|| __DATA.__objc_data _OBJC_CLASS_$__SFQuickLookDocumentView
|| __DATA.__objc_data _OBJC_CLASS_$__SFQuickLookDocumentWriter
|| __DATA.__objc_data _OBJC_CLASS_$__SFReaderController
|| __DATA.__objc_data _OBJC_CLASS_$__SFReaderCustomProtocols
|| __DATA.__objc_data _OBJC_CLASS_$__SFReaderExtractedData
|| __DATA.__objc_data _OBJC_CLASS_$__SFReaderExtractor
|| __DATA.__objc_data _OBJC_CLASS_$__SFReaderWebProcessPlugInPageController
|| __DATA.__objc_data _OBJC_CLASS_$__SFRecentWebSearchesController
|| __DATA.__objc_data _OBJC_CLASS_$__SFReloadOptionsController
|| __DATA.__objc_data _OBJC_CLASS_$__SFRequestDesktopSitePreferenceManager
|| __DATA.__objc_data _OBJC_CLASS_$__SFRequestDesktopSiteQuirksManager
|| __DATA.__objc_data _OBJC_CLASS_$__SFRequestDesktopSiteQuirksSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$__SFSafariDataSharingController
|| __DATA.__objc_data _OBJC_CLASS_$__SFSafariSharingExtensionController
|| __DATA.__objc_data _OBJC_CLASS_$__SFSaveToFilesOperation
|| __DATA.__objc_data _OBJC_CLASS_$__SFSearchEngineController
|| __DATA.__objc_data _OBJC_CLASS_$__SFSearchEngineInfo
|| __DATA.__objc_data _OBJC_CLASS_$__SFSecIdentityPreferencesController
|| __DATA.__objc_data _OBJC_CLASS_$__SFSectionAction
|| __DATA.__objc_data _OBJC_CLASS_$__SFSectionModel
|| __DATA.__objc_data _OBJC_CLASS_$__SFSettingsAlertController
|| __DATA.__objc_data _OBJC_CLASS_$__SFSettingsAlertItem
|| __DATA.__objc_data _OBJC_CLASS_$__SFSettingsAuthentication
|| __DATA.__objc_data _OBJC_CLASS_$__SFSharablePasswordReceiver
|| __DATA.__objc_data _OBJC_CLASS_$__SFSharingLinkExtractor
|| __DATA.__objc_data _OBJC_CLASS_$__SFSingleBookmarkNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$__SFSiteIcon
|| __DATA.__objc_data _OBJC_CLASS_$__SFSiteIconView
|| __DATA.__objc_data _OBJC_CLASS_$__SFStartPageViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFStoreBanner
|| __DATA.__objc_data _OBJC_CLASS_$__SFStoreBannerTracker
|| __DATA.__objc_data _OBJC_CLASS_$__SFSyntheticClickContext
|| __DATA.__objc_data _OBJC_CLASS_$__SFTabStateData
|| __DATA.__objc_data _OBJC_CLASS_$__SFTelephonyNavigationMitigationPolicy
|| __DATA.__objc_data _OBJC_CLASS_$__SFTextSuggestion
|| __DATA.__objc_data _OBJC_CLASS_$__SFTouchIconFetchOperation
|| __DATA.__objc_data _OBJC_CLASS_$__SFTranslationTargetLocaleAlertController
|| __DATA.__objc_data _OBJC_CLASS_$__SFUIViewPopoverSourceInfo
|| __DATA.__objc_data _OBJC_CLASS_$__SFURLTextPreviewView
|| __DATA.__objc_data _OBJC_CLASS_$__SFURLTextPreviewViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFUserActivityController
|| __DATA.__objc_data _OBJC_CLASS_$__SFUserMediaPermissionController
|| __DATA.__objc_data _OBJC_CLASS_$__SFVibrantSeparatorView
|| __DATA.__objc_data _OBJC_CLASS_$__SFWebAppViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SFWebArchiveActivityItemProvider
|| __DATA.__objc_data _OBJC_CLASS_$__SFWebArchiveProvider
|| __DATA.__objc_data _OBJC_CLASS_$__SFWebClipMetadataFetcher
|| __DATA.__objc_data _OBJC_CLASS_$__SFWebView
|| __DATA.__objc_data _OBJC_CLASS_$__SSHistoryAccessSession
|| __DATA.__objc_data _OBJC_CLASS_$__SSURLCompletionSession
|| __DATA.__objc_data _OBJC_METACLASS_$_SFAuthenticationSession
|| __DATA.__objc_data _OBJC_METACLASS_$_SFBlockBasedCAAnimationDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_SFBrowserDocumentTrackerInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_SFContentBlockerManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SFContentBlockerState
|| __DATA.__objc_data _OBJC_METACLASS_$_SFFolderPickerList
|| __DATA.__objc_data _OBJC_METACLASS_$_SFSafariViewControllerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SFSystemAlert
|| __DATA.__objc_data _OBJC_METACLASS_$_SSReadingList
|| __DATA.__objc_data _OBJC_METACLASS_$__SFActivity
|| __DATA.__objc_data _OBJC_METACLASS_$__SFActivityExtensionItemProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__SFActivityItemCustomizationController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFActivityItemProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__SFActivityItemProviderCollection
|| __DATA.__objc_data _OBJC_METACLASS_$__SFActivityViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFAdaptivePreviewViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFAddBookmarkActivity
|| __DATA.__objc_data _OBJC_METACLASS_$__SFAppAutoFillPasswordViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFAppLinkBanner
|| __DATA.__objc_data _OBJC_METACLASS_$__SFAppPasswordSavingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFApplicationManifestFetcher
|| __DATA.__objc_data _OBJC_METACLASS_$__SFAuthenticationContext
|| __DATA.__objc_data _OBJC_METACLASS_$__SFAutomaticTabClosingUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$__SFAutomationController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBannerModel
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBarHoverAssistant
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBarManager
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBarTheme
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBookmarkInfoViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBookmarkTextEntryTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBookmarkTextEntryTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBookmarksLockCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBrowserConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBrowserKeyCommands
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBrowserSavedState
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBrowserView
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBrowserWindowSettings
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBrowserWindowStateData
|| __DATA.__objc_data _OBJC_METACLASS_$__SFCalendarEventDetector
|| __DATA.__objc_data _OBJC_METACLASS_$__SFClipLink
|| __DATA.__objc_data _OBJC_METACLASS_$__SFContactPreviewViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFContentBlockersPreferenceManager
|| __DATA.__objc_data _OBJC_METACLASS_$__SFCreditCardCaptureViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFDialog
|| __DATA.__objc_data _OBJC_METACLASS_$__SFDimmingButton
|| __DATA.__objc_data _OBJC_METACLASS_$__SFDownload
|| __DATA.__objc_data _OBJC_METACLASS_$__SFDownloadActivityItemProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__SFDownloadCurrentPageActivity
|| __DATA.__objc_data _OBJC_METACLASS_$__SFDownloadDispatcher
|| __DATA.__objc_data _OBJC_METACLASS_$__SFDownloadIconCache
|| __DATA.__objc_data _OBJC_METACLASS_$__SFDownloadManager
|| __DATA.__objc_data _OBJC_METACLASS_$__SFDownloadStorageUsageMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$__SFDynamicBarAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$__SFEditablePasswordTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFExternalPasswordCredentialViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFFeatureAvailability
|| __DATA.__objc_data _OBJC_METACLASS_$__SFFindOnPageUIActivity
|| __DATA.__objc_data _OBJC_METACLASS_$__SFFindOnPageView
|| __DATA.__objc_data _OBJC_METACLASS_$__SFFolderPickerItem
|| __DATA.__objc_data _OBJC_METACLASS_$__SFFolderPickerTableViewCellLayoutManager
|| __DATA.__objc_data _OBJC_METACLASS_$__SFFormAutoFillInputSession
|| __DATA.__objc_data _OBJC_METACLASS_$__SFFormDataController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFGeolocationPermissionManager
|| __DATA.__objc_data _OBJC_METACLASS_$__SFICSPreviewViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFImageActivityItemProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__SFInjectedJavaScriptController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFKillWebContentProcessUIActivity
|| __DATA.__objc_data _OBJC_METACLASS_$__SFLinkPresentationIconCache
|| __DATA.__objc_data _OBJC_METACLASS_$__SFLinkPreviewHeader
|| __DATA.__objc_data _OBJC_METACLASS_$__SFLinkPreviewHelper
|| __DATA.__objc_data _OBJC_METACLASS_$__SFLinkRedirectionResolver
|| __DATA.__objc_data _OBJC_METACLASS_$__SFLinkWithPreviewActivityItemProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__SFMailContentProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__SFManagedFeatureObserver
|| __DATA.__objc_data _OBJC_METACLASS_$__SFMediaCaptureStatusBarManager
|| __DATA.__objc_data _OBJC_METACLASS_$__SFMicrodataExtractor
|| __DATA.__objc_data _OBJC_METACLASS_$__SFNavigationBarItem
|| __DATA.__objc_data _OBJC_METACLASS_$__SFNavigationBarTheme
|| __DATA.__objc_data _OBJC_METACLASS_$__SFNavigationIntent
|| __DATA.__objc_data _OBJC_METACLASS_$__SFNavigationIntentBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$__SFNavigationResult
|| __DATA.__objc_data _OBJC_METACLASS_$__SFNavigationUtilitiesManager
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPageLoadErrorController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPageZoomPreferenceManager
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPasswordAuditingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPasswordIconController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPasswordManagerLockedView
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPasswordPickerTableConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPasswordPickerTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPasswordViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPerSitePreferenceDisplayInformation
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPerSitePreferenceNotifyingListController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPerSitePreferencePopoverDisplayInformation
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPerSitePreferencesPopoverViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPerSitePreferencesUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPerSitePreferencesVendor
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPopoverPresentationDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPopoverSizingTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPrintActivityItemProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__SFPrintController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFQRCodeDetectionController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFQRImagePreviewViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFQuickLookDocument
|| __DATA.__objc_data _OBJC_METACLASS_$__SFQuickLookDocumentController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFQuickLookDocumentView
|| __DATA.__objc_data _OBJC_METACLASS_$__SFQuickLookDocumentWriter
|| __DATA.__objc_data _OBJC_METACLASS_$__SFReaderController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFReaderCustomProtocols
|| __DATA.__objc_data _OBJC_METACLASS_$__SFReaderExtractedData
|| __DATA.__objc_data _OBJC_METACLASS_$__SFReaderExtractor
|| __DATA.__objc_data _OBJC_METACLASS_$__SFReaderWebProcessPlugInPageController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFRecentWebSearchesController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFReloadOptionsController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFRequestDesktopSitePreferenceManager
|| __DATA.__objc_data _OBJC_METACLASS_$__SFRequestDesktopSiteQuirksManager
|| __DATA.__objc_data _OBJC_METACLASS_$__SFRequestDesktopSiteQuirksSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSafariDataSharingController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSafariSharingExtensionController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSaveToFilesOperation
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSearchEngineController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSearchEngineInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSecIdentityPreferencesController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSectionAction
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSectionModel
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSettingsAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSettingsAlertItem
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSettingsAuthentication
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSharablePasswordReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSharingLinkExtractor
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSingleBookmarkNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSiteIcon
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSiteIconView
|| __DATA.__objc_data _OBJC_METACLASS_$__SFStartPageViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFStoreBanner
|| __DATA.__objc_data _OBJC_METACLASS_$__SFStoreBannerTracker
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSyntheticClickContext
|| __DATA.__objc_data _OBJC_METACLASS_$__SFTabStateData
|| __DATA.__objc_data _OBJC_METACLASS_$__SFTelephonyNavigationMitigationPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$__SFTextSuggestion
|| __DATA.__objc_data _OBJC_METACLASS_$__SFTouchIconFetchOperation
|| __DATA.__objc_data _OBJC_METACLASS_$__SFTranslationTargetLocaleAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFUIViewPopoverSourceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__SFURLTextPreviewView
|| __DATA.__objc_data _OBJC_METACLASS_$__SFURLTextPreviewViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFUserActivityController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFUserMediaPermissionController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFVibrantSeparatorView
|| __DATA.__objc_data _OBJC_METACLASS_$__SFWebAppViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SFWebArchiveActivityItemProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__SFWebArchiveProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__SFWebClipMetadataFetcher
|| __DATA.__objc_data _OBJC_METACLASS_$__SFWebView
|| __DATA.__objc_data _OBJC_METACLASS_$__SSHistoryAccessSession
|| __DATA.__objc_data _OBJC_METACLASS_$__SSURLCompletionSession
|| __DATA.__objc_ivar _OBJC_IVAR_$__SFMediaCaptureStatusBarManager._hasStatusBarOverride
|| __DATA.__objc_ivar _OBJC_IVAR_$__SFMediaCaptureStatusBarManager._recordingDocument
|| __DATA_CONST.__const _SFAdditionalArgumentsKey
|| __DATA_CONST.__const _SFAggregateDAddedBookmarkInMemory
|| __DATA_CONST.__const _SFAggregateDFindOnPageActivityKey
|| __DATA_CONST.__const _SFAggregateDHistoryMigrationTimeKey
|| __DATA_CONST.__const _SFAggregateDIconsInTabEnabledKey
|| __DATA_CONST.__const _SFAggregateDRequestDesktopSiteKey
|| __DATA_CONST.__const _SFAggregateDSafeBrowsingDisabledKey
|| __DATA_CONST.__const _SFAggregateDSafeBrowsingWarningIgnoredKey
|| __DATA_CONST.__const _SFAggregateDSafeBrowsingWarningShownKey
|| __DATA_CONST.__const _SFAggregateDSelectedStartedFindOnPageKey
|| __DATA_CONST.__const _SFAggregateDSiteSpecificSearchEnabledKey
|| __DATA_CONST.__const _SFAggregateDSiteSpecificSearchProviderRemovedKey
|| __DATA_CONST.__const _SFAuthenticationErrorDomain
|| __DATA_CONST.__const _SFBackHistoryMenuIdentifier
|| __DATA_CONST.__const _SFBookmarkMenuIdentifier
|| __DATA_CONST.__const _SFContentBlockerDidChangeDistributedNotification
|| __DATA_CONST.__const _SFContentBlockerErrorDomain
|| __DATA_CONST.__const _SFContentBlockerExtensionPointIdentifier
|| __DATA_CONST.__const _SFErrorDomain
|| __DATA_CONST.__const _SFForwardHistoryMenuIdentifier
|| __DATA_CONST.__const _SFRecentlyClosedTabsWereAddedNotification
|| __DATA_CONST.__const _SFRecentlyClosedTabsWereRemovedNotification
|| __DATA_CONST.__const _SFRemovedTabStateDataKey
|| __DATA_CONST.__const _SFTabMenuIdentifier
|| __DATA_CONST.__const _SSReadingListErrorDomain
|| __DATA_CONST.__const __SFAddBookmarkUIActivityType
|| __DATA_CONST.__const __SFAllowMediaCaptureOnInsecureSites
|| __DATA_CONST.__const __SFApplePayDisclosureAllowedKey
|| __DATA_CONST.__const __SFAudioPlaybackRequiresUserActionKey
|| __DATA_CONST.__const __SFAuthenticationContextDidInvalidateNotification
|| __DATA_CONST.__const __SFAuthenticationContextErrorDomain
|| __DATA_CONST.__const __SFAutomaticPasswordDismissedByUser
|| __DATA_CONST.__const __SFAutomaticPasswordInputViewButtonPressedNotification
|| __DATA_CONST.__const __SFAutomaticPasswordInputViewNotificationAutoFillContextProviderIdentifierUserInfoKey
|| __DATA_CONST.__const __SFAutomaticPasswordInputViewNotificationInputViewControllerUserInfoKey
|| __DATA_CONST.__const __SFAutomaticPasswordInputViewNotificationPressedButtonUserInfoKey
|| __DATA_CONST.__const __SFAutomaticallyArchiveReadingListItemsEnabledKey
|| __DATA_CONST.__const __SFAutoplayPlayingPauseQuirkEnabledKey
|| __DATA_CONST.__const __SFBookmarksUserActivityType
|| __DATA_CONST.__const __SFBrowserKeyCommandsDefaultTableName
|| __DATA_CONST.__const __SFCloseTabsAutomaticallyDefaultsKey
|| __DATA_CONST.__const __SFDebugContentDispositionHeaderStartsDownloadsKey
|| __DATA_CONST.__const __SFDebugDownloadAttributeForcesDownloadsKey
|| __DATA_CONST.__const __SFDebugEnableDownloadsInSubframesKey
|| __DATA_CONST.__const __SFDebugPromptForDownloadsOnNavigationResponseKey
|| __DATA_CONST.__const __SFDemoSiriSuggestionsKey
|| __DATA_CONST.__const __SFDeveloperPreferencesDidChangeNotification
|| __DATA_CONST.__const __SFDisableICECandidateFiltering
|| __DATA_CONST.__const __SFDownloadDidChangeCompletedURLNotification
|| __DATA_CONST.__const __SFDownloadDidChangeNotification
|| __DATA_CONST.__const __SFDownloadDidStartNotification
|| __DATA_CONST.__const __SFDownloadDidStopNotification
|| __DATA_CONST.__const __SFDownloadExpirationIntervalDefaultsKey
|| __DATA_CONST.__const __SFDownloadManagerDidFinishLastDownloadNotification
|| __DATA_CONST.__const __SFDownloadManagerTotalProgressDidChangeNotification
|| __DATA_CONST.__const __SFDownloadStorageUsageMonitorDidChangeUsageNotification
|| __DATA_CONST.__const __SFDownloadsDidChangeNotification
|| __DATA_CONST.__const __SFEnableDownloadImport
|| __DATA_CONST.__const __SFEnableEnumeratingAllNetworkInterfaces
|| __DATA_CONST.__const __SFEnableMediaCapture
|| __DATA_CONST.__const __SFEnableMockCaptureDevices
|| __DATA_CONST.__const __SFEnablePasswordManagerDemoModeKey
|| __DATA_CONST.__const __SFFormMetadataFocusingForStreamlinedLogin
|| __DATA_CONST.__const __SFHasCompletedReadingListArchivePreferenceMigrationKey
|| __DATA_CONST.__const __SFHighPrioritySecurityRecommendationCellReuseIdentifier
|| __DATA_CONST.__const __SFIconsInTabsEnabledKey
|| __DATA_CONST.__const __SFInlineMediaPlaybackRequiresPlaysInlineAttributeKey
|| __DATA_CONST.__const __SFInternalSettingsDidChangeNotification
|| __DATA_CONST.__const __SFInvisibleAutoplayNotPermittedKey
|| __DATA_CONST.__const __SFJavaScriptCanOpenWindowsAutomaticallyDefaultsKey
|| __DATA_CONST.__const __SFJavaScriptEnabledDefaultsKey
|| __DATA_CONST.__const __SFLegacyEncryptedMediaAPIEnabledKey
|| __DATA_CONST.__const __SFMainContentUserGestureOverrideEnabledKey
|| __DATA_CONST.__const __SFMediaPlaybackAllowsInlineKey
|| __DATA_CONST.__const __SFMediaPlaybackRequiresUserActionKey
|| __DATA_CONST.__const __SFMediaSourceEnabledKey
|| __DATA_CONST.__const __SFNanoBlockAllCookiesEnabledKey
|| __DATA_CONST.__const __SFOfflineReadingListArchiveUsedDefaultsKey
|| __DATA_CONST.__const __SFOpenLinksInBackgroundDefaultsKey
|| __DATA_CONST.__const __SFPerDocumentAutoplayBehaviorQuirkEnabledKey
|| __DATA_CONST.__const __SFPrivateBrowsingDefaultsKey
|| __DATA_CONST.__const __SFReaderConfigurationDefaultsKey
|| __DATA_CONST.__const __SFReaderExtractorErrorDomain
|| __DATA_CONST.__const __SFReaderPageGroupIdentifier
|| __DATA_CONST.__const __SFReaderURLScheme
|| __DATA_CONST.__const __SFReadingListFetcherScheduleBackgroundTasksImmediatelyKey
|| __DATA_CONST.__const __SFReadingListUserActivityType
|| __DATA_CONST.__const __SFRequestDesktopSitePreferenceDidChangeDistributedNotification
|| __DATA_CONST.__const __SFSafariHighLevelDomainsAndPortsToUseOnlyAvailableIdentityWithoutPromptingSettingsKey
|| __DATA_CONST.__const __SFSafariPerSitePreferenceDidChangeNotification
|| __DATA_CONST.__const __SFSafariResourceScheme
|| __DATA_CONST.__const __SFSafariShortcutItemTypeOpenBookmarksView
|| __DATA_CONST.__const __SFSafariShortcutItemTypeOpenNewPrivateTab
|| __DATA_CONST.__const __SFSafariShortcutItemTypeOpenNewTab
|| __DATA_CONST.__const __SFSafariShortcutItemTypeOpenReadingListView
|| __DATA_CONST.__const __SFSafariStateActiveDocumentIndexKey
|| __DATA_CONST.__const __SFSafariStateBrowserWindowDatabaseIDKey
|| __DATA_CONST.__const __SFSafariStateBrowserWindowSceneIDKey
|| __DATA_CONST.__const __SFSafariStateBrowserWindowUUIDKey
|| __DATA_CONST.__const __SFSafariStateDocumentDisplayingStandaloneImageKey
|| __DATA_CONST.__const __SFSafariStateDocumentLastViewedTimeKey
|| __DATA_CONST.__const __SFSafariStateDocumentOrderIndexKey
|| __DATA_CONST.__const __SFSafariStateDocumentOwningBrowserWindowUUIDKey
|| __DATA_CONST.__const __SFSafariStateDocumentReaderViewTopScrollOffsetKey
|| __DATA_CONST.__const __SFSafariStateDocumentReadingListBookmarkKey
|| __DATA_CONST.__const __SFSafariStateDocumentSourceApplicationBundleIdentifierKey
|| __DATA_CONST.__const __SFSafariStateDocumentTitleKey
|| __DATA_CONST.__const __SFSafariStateDocumentURLKey
|| __DATA_CONST.__const __SFSafariStateDocumentUUIDKey
|| __DATA_CONST.__const __SFSafariStateDocumentUserVisibleURLKey
|| __DATA_CONST.__const __SFSafariStateDocumentUsesPrivateBrowsingStyleKey
|| __DATA_CONST.__const __SFSafariStateDocumentWasOpenedFromLinkKey
|| __DATA_CONST.__const __SFSafariStateDocumentsFileVersionKey
|| __DATA_CONST.__const __SFSafariStateDocumentsKey
|| __DATA_CONST.__const __SFSafariStatePrivateActiveDocumentIndexKey
|| __DATA_CONST.__const __SFSafariStatePrivateDocumentsKey
|| __DATA_CONST.__const __SFSearchEngineBaidu
|| __DATA_CONST.__const __SFSearchEngineBing
|| __DATA_CONST.__const __SFSearchEngineControllerDefaultSearchEngineDidChangeNotification
|| __DATA_CONST.__const __SFSearchEngineControllerInstanceDidFinishPopulatingSearchEnginesNotification
|| __DATA_CONST.__const __SFSearchEngineDuckDuckGo
|| __DATA_CONST.__const __SFSearchEngineGoogle
|| __DATA_CONST.__const __SFSearchEngineQihoo
|| __DATA_CONST.__const __SFSearchEngineSogou
|| __DATA_CONST.__const __SFSearchEngineStringDefaultsKey
|| __DATA_CONST.__const __SFSearchEngineYahoo
|| __DATA_CONST.__const __SFSearchEngineYandex
|| __DATA_CONST.__const __SFSearchProviderBaiduTrackingCodeiPadKey
|| __DATA_CONST.__const __SFSearchProviderBaiduTrackingCodeiPhoneKey
|| __DATA_CONST.__const __SFSearchProviderBaiduTrackingCodeiPodTouchKey
|| __DATA_CONST.__const __SFShouldCaptureAudioInUIProcessKey
|| __DATA_CONST.__const __SFStandardSecurityRecommendationCellReuseIdentifier
|| __DATA_CONST.__const __SFTabStateSessionStateKey
|| __DATA_CONST.__const __SFTabStateShowingReaderKey
|| __DATA_CONST.__const __SFUserAgentDefaultsKey
|| __DATA_CONST.__const __SFVideoPlaybackRequiresUserActionKey
|| __DATA_CONST.__const __SFWarnAboutFraudulentWebsitesDefaultsKey
|| __DATA_CONST.__const __SFWebArchiveErrorDomain
|| __DATA_CONST.__const __SFWebArchiveMIMEType
|| __DATA_CONST.__const __SFWebAuthenticationLocalAuthenticatorDefaultsKey
|| __DATA_CONST.__const __SFWebKitShowLinkPreviewsDefaultsKey
|| __DATA_CONST.__const __SFWebKitSiteSpecificHacksEnabledKey
|| __DATA_CONST.__const __SFWebKitWebAuthenticationDefaultsKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFSafariViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFAutoFillInputView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFAutomaticPasswordInputViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFBrowserContentViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFClipLinkBanner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFCrashBanner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFDialogController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFDialogView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFDigitalHealthViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFFindOnPageToolbar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFFluidProgressView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFFormAutoFillController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFFormMetadataController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFLinkBanner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFNavigationBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFPageFormatMenuController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFPinnableBanner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFSiteMetadataManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFToolbar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFWebProcessPlugIn
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFWebProcessPlugInReaderEnabledPageController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFWebProcessSharingLinkExtractor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFSafariViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFAutoFillInputView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFAutomaticPasswordInputViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFBrowserContentViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFClipLinkBanner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFCrashBanner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFDialogController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFDialogView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFDigitalHealthViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFFindOnPageToolbar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFFluidProgressView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFFormAutoFillController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFFormMetadataController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFLinkBanner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFNavigationBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFPageFormatMenuController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFPinnableBanner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFSiteMetadataManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFToolbar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFWebProcessPlugIn
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFWebProcessPlugInReaderEnabledPageController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFWebProcessSharingLinkExtractor
|| __TEXT.__const _SFMaximumRecentlyClosedTabCount
|| __TEXT.__const __SFAuthenticationContextInvalidatedError
|| __TEXT.__const __SFAuthenticationContextNoTimeout
|| __TEXT.__const __SFBarItemNull
|| __TEXT.__const __SFMailContentTypeNull
|| __TEXT.__const __SFMaximumWidthForCompactClass
|| __TEXT.__text _SFDeferrableUpdateViewCanUpdateContents
|| __TEXT.__text _SFDeferrableUpdateViewDidMoveToWindow
|| __TEXT.__text _SFDeferrableUpdateViewShouldAttemptToUpdateContents
|| __TEXT.__text _SFGetAMSLookupItem
|| __TEXT.__text __SFAnalyticsValueForShortcutItemType
|| __TEXT.__text __SFApplicationNameForDesktopUserAgent
|| __TEXT.__text __SFApplicationNameForUserAgent
|| __TEXT.__text __SFBackdropEffectForBarTintStyle
|| __TEXT.__text __SFBackdropGroupNameForOwner
|| __TEXT.__text __SFBarItemEnumerateCases
|| __TEXT.__text __SFCGPointsEqualWithEpsilon
|| __TEXT.__text __SFCGRectGrowToSize
|| __TEXT.__text __SFCGRectOfSizeAlignedWithPoint
|| __TEXT.__text __SFCGRectOfSizeAlignedWithinRect
|| __TEXT.__text __SFCeilingFloatToPixels
|| __TEXT.__text __SFClamp
|| __TEXT.__text __SFClampPercent
|| __TEXT.__text __SFContentBlockerStoreURL
|| __TEXT.__text __SFContinuousCornerRadiusMatchingRadiusWithInset
|| __TEXT.__text __SFCreateAppSuggestionBannerFromMetaTagContent
|| __TEXT.__text __SFCustomUserAgentStringIfNeeded
|| __TEXT.__text __SFDarkTintStyleForStyle
|| __TEXT.__text __SFDataOwnerForWebViewInteraction
|| __TEXT.__text __SFDefaultLayoutMargins
|| __TEXT.__text __SFDeviceAlertStyle
|| __TEXT.__text __SFDeviceHasHomeButton
|| __TEXT.__text __SFDeviceHasRectangularScreen
|| __TEXT.__text __SFDeviceIsPad
|| __TEXT.__text __SFDeviceRegionCodeIsChina
|| __TEXT.__text __SFDeviceStatusBarHasNonTransparentBackground
|| __TEXT.__text __SFDeviceSupportsDesktopSitesByDefault
|| __TEXT.__text __SFDeviceSupportsHighQualityGraphics
|| __TEXT.__text __SFDownloadingFileTypeFromUTIAndMIMEType
|| __TEXT.__text __SFEqualWithEpsilon
|| __TEXT.__text __SFFloorFloatToPixels
|| __TEXT.__text __SFFloorSize
|| __TEXT.__text __SFGreaterThanOrEqualWithEpsilon
|| __TEXT.__text __SFIPhoneSafariUserAgentString
|| __TEXT.__text __SFImageForMediaStateIcon
|| __TEXT.__text __SFIncrementAggdKey
|| __TEXT.__text __SFInsetIsInvalid
|| __TEXT.__text __SFInterpolate
|| __TEXT.__text __SFIsChinaDevice
|| __TEXT.__text __SFIsDarkTintStyle
|| __TEXT.__text __SFIsPrivateTintStyle
|| __TEXT.__text __SFLightTintStyleForStyle
|| __TEXT.__text __SFLocalizedTitleStringForShortcutItemType
|| __TEXT.__text __SFMacSafariUserAgentString
|| __TEXT.__text __SFMakeAccessibilityIdentifier
|| __TEXT.__text __SFMediaStateIconIsMuted
|| __TEXT.__text __SFMediaStateIconMutedVariant
|| __TEXT.__text __SFOnePixel
|| __TEXT.__text __SFPopoverSourceInfoUnwrap
|| __TEXT.__text __SFPreferredLanguagesIncludesAnyLanguage
|| __TEXT.__text __SFPreferredMailContentTypeForActivityContentType
|| __TEXT.__text __SFRectIsInvalid
|| __TEXT.__text __SFRequestDesktopSiteActivitySourceJavaScriptString
|| __TEXT.__text __SFResizableImageWithContinuousCurveCorners
|| __TEXT.__text __SFRoundEdgeInsetsToPixels
|| __TEXT.__text __SFRoundFloatToPixels
|| __TEXT.__text __SFRoundPointToPixels
|| __TEXT.__text __SFRoundRectToPixels
|| __TEXT.__text __SFRoundSizeToPixels
|| __TEXT.__text __SFSafariContainerPath
|| __TEXT.__text __SFSafariContainerURL
|| __TEXT.__text __SFSafariIconImageCacheDirectoryPath
|| __TEXT.__text __SFSafariIconLinkImage
|| __TEXT.__text __SFSafariNonContaineredSettingsDirectoryPath
|| __TEXT.__text __SFSafariPreferencesDomain
|| __TEXT.__text __SFSafariSavedStateDirectoryPath
|| __TEXT.__text __SFSafariSearchProviderDefinitions
|| __TEXT.__text __SFSafariTemporaryDirectoryPath
|| __TEXT.__text __SFSafariTestContentDirectoryPath
|| __TEXT.__text __SFScreenNativeScale
|| __TEXT.__text __SFScreenScale
|| __TEXT.__text __SFSetAggdKey
|| __TEXT.__text __SFSetAggdKeyAlways
|| __TEXT.__text __SFShouldShowChineseFeatures
|| __TEXT.__text __SFShouldShowLinkPreviews
|| __TEXT.__text __SFShouldShowRussianFeatures
|| __TEXT.__text __SFSizeClassForWidth
|| __TEXT.__text __SFStringForTintStyle
|| __TEXT.__text __SFTypeIsExtractableArchive
|| __TEXT.__text __SFUIActionForToggleShowLinkPreviews
|| __TEXT.__text __SFValueFromKeyValueString
|| __TEXT.__text __SFWidthIsCompactSizeClass
__ AppSupport: _CPGetDeviceRegionCode
__ AppSupport: _CPNetworkObserverReachable
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _OBJC_CLASS_$_CPAggregateDictionary
__ AppSupport: _OBJC_CLASS_$_CPNetworkObserver
__ AppleMediaServices: _AMSLookupKeyProfileLockup
__ AppleMediaServices: _OBJC_CLASS_$_AMSBag
__ AppleMediaServices: _OBJC_CLASS_$_AMSBagKeySet
__ AppleMediaServices: _OBJC_CLASS_$_AMSLookup
__ AssertionServices: _BKSApplicationStateAll
__ AssertionServices: _BKSApplicationStateDisplayIDKey
__ AssertionServices: _BKSApplicationStateKey
__ AssertionServices: _BKSApplicationStateProcessIDKey
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ AuthKit: _OBJC_CLASS_$_AKAuthorizationController
__ AuthenticationServices: _ASExtensionErrorDomain
__ AuthenticationServices: _ASExtensionLocalizedFailureReasonErrorKey
__ AuthenticationServices: _OBJC_CLASS_$_ASAccountAuthenticationModificationController
__ AuthenticationServices: _OBJC_CLASS_$_ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest
__ AuthenticationServices: _OBJC_CLASS_$_ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest
__ AuthenticationServices: _OBJC_CLASS_$_ASCredentialServiceIdentifier
__ AuthenticationServices: _OBJC_CLASS_$_ASPasswordCredential
__ AuthenticationServices: _OBJC_CLASS_$_ASPasswordCredentialIdentity
__ AuthenticationServices: _OBJC_CLASS_$_ASWebAuthenticationSession
__ AuthenticationServices: _OBJC_CLASS_$__ASAccountAuthenticationModificationExtensionManager
__ AuthenticationServices: _OBJC_CLASS_$__ASCredentialListViewController
__ AuthenticationServices: _OBJC_CLASS_$__ASIncomingCallObserver
__ AuthenticationServices: _OBJC_CLASS_$__ASPasswordCredentialAuthenticationViewController
__ CFNetwork: _NSURLAuthenticationMethodClientCertificate
__ CFNetwork: _NSURLAuthenticationMethodDefault
__ CFNetwork: _NSURLAuthenticationMethodHTMLForm
__ CFNetwork: _NSURLAuthenticationMethodHTTPBasic
__ CFNetwork: _NSURLAuthenticationMethodHTTPDigest
__ CFNetwork: _NSURLAuthenticationMethodNTLM
__ CFNetwork: _NSURLAuthenticationMethodOAuth
__ CFNetwork: _NSURLAuthenticationMethodServerTrust
__ CFNetwork: _NSURLProtectionSpaceHTTPS
__ CFNetwork: _OBJC_CLASS_$_NSHTTPCookie
__ CFNetwork: _OBJC_CLASS_$_NSHTTPCookieStorage
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSURLCredential
__ CFNetwork: _OBJC_CLASS_$_NSURLCredentialStorage
__ CFNetwork: _OBJC_CLASS_$_NSURLProtectionSpace
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLResponse
__ CFNetwork: __kCFStreamErrorCodeKey
__ CFNetwork: _kCFStreamPropertySSLPeerTrust
__ Celestial: _AVSystemController_PIDToInheritApplicationStateFrom
__ Celestial: _OBJC_CLASS_$_AVSystemController
__ CertUI: _OBJC_CLASS_$_CertUIPrompt
__ CertUI: _OBJC_CLASS_$_CertUITrustManager
__ CertUI: _kCertUIServiceTypeHTTPS
__ CertUI: _kCertUITrustPromptOptionsAllowCertificateTrustKey
__ CertUI: _kCertUITrustPromptOptionsShowContinueKey
__ Contacts: _CNContactBirthdayKey
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNContactPostalAddressesKey
__ Contacts: _CNContactUrlAddressesKey
__ Contacts: _CNLabelHome
__ Contacts: _CNLabelWork
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNContactVCardSerialization
__ Contacts: _OBJC_CLASS_$_CNLabeledValue
__ Contacts: _OBJC_CLASS_$_CNPostalAddressFormatter
__ ContactsUI: _OBJC_CLASS_$_CNContactViewController
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFStringTokenizerCreate
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _NSURLTypeIdentifierKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: __kCFBundleShortVersionStringKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleNameKey
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationOtherButtonTitleKey
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextDrawImageFromRect
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetRGBFillColor
__ CoreGraphics: _CGContextSetShadowWithColor
__ CoreGraphics: _CGFloatIsValid
__ CoreGraphics: _CGGradientCreateWithColorComponents
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddQuadCurveToPoint
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreLocation: _OBJC_CLASS_$_CLInUseAssertion
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreRecognition: _CROutputTypeCreditCardCardholderName
__ CoreRecognition: _CROutputTypeCreditCardExpirationDate
__ CoreRecognition: _CROutputTypeCreditCardNumber
__ CoreRecognition: _OBJC_CLASS_$_CRCameraReader
__ CoreServices: _LSDisableURLOverrides
__ CoreServices: _LSFileProviderStringKey
__ CoreServices: _LSOpenApplicationPayloadOptionsKey
__ CoreServices: _LSReferrerURLKey
__ CoreServices: _LSRequireOpenInPlaceKey
__ CoreServices: _OBJC_CLASS_$_LSAppLink
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSDocumentProxy
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ CoreServices: _OBJC_CLASS_$_LSResourceProxy
__ CoreServices: _OBJC_CLASS_$_NSUserActivity
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _UTTypeCopyDescription
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _UTTypeEqual
__ CoreServices: _UTTypeIsDynamic
__ CoreServices: __LSHandlerRankOwner
__ CoreServices: __kUTTypePassBundle
__ CoreServices: __kUTTypePassData
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTagClassMIMEType
__ CoreServices: _kUTTypeAudio
__ CoreServices: _kUTTypeBzip2Archive
__ CoreServices: _kUTTypeCalendarEvent
__ CoreServices: _kUTTypeContact
__ CoreServices: _kUTTypeData
__ CoreServices: _kUTTypeEmailMessage
__ CoreServices: _kUTTypeGNUZipArchive
__ CoreServices: _kUTTypeHTML
__ CoreServices: _kUTTypeImage
__ CoreServices: _kUTTypeMovie
__ CoreServices: _kUTTypePDF
__ CoreServices: _kUTTypePlainText
__ CoreServices: _kUTTypePropertyList
__ CoreServices: _kUTTypeText
__ CoreServices: _kUTTypeURL
__ CoreServices: _kUTTypeUTF8PlainText
__ CoreServices: _kUTTypeWebArchive
__ CoreServices: _kUTTypeZipArchive
__ CoreSuggestions: _OBJC_CLASS_$_SGSuggestionsService
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CTXPCServiceSubscriptionContext
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreText: _CTFontDescriptorCreateWithAttributes
__ CoreText: _CTFontDescriptorMatchFontDescriptorsWithProgressHandler
__ CoreText: _CTLineCreateWithAttributedString
__ CoreText: _CTLineGetOffsetForStringIndex
__ CoreText: _CTTypesetterCreateWithAttributedString
__ CoreText: _CTTypesetterSuggestLineBreak
__ CoreText: _kCTFontDownloadableAttribute
__ CoreText: _kCTFontDownloadedAttribute
__ CoreText: _kCTFontFamilyNameAttribute
__ CoreText: _kCTFontWeightLight
__ DocumentManagerCore: _OBJC_CLASS_$_DOCDownloadImportManager
__ DocumentManagerCore: _OBJC_CLASS_$_DOCManagedPermission
__ FileProvider: _FPExtendBookmarkForDocumentURL
__ FileProvider: _FPUpdateLastUsedDate
__ FileProvider: _OBJC_CLASS_$_FPItemManager
__ FileProvider: _OBJC_CLASS_$_FPProviderDomain
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSExtensionJavaScriptFinalizeArgumentKey
__ Foundation: _NSExtensionJavaScriptPreprocessingResultsKey
__ Foundation: _NSExtensionPointName
__ Foundation: _NSFileSize
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSProgressFileOperationKindDownloading
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSURLErrorFailingURLErrorKey
__ Foundation: _NSURLErrorFailingURLStringErrorKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUserActivityTypeBrowsingWeb
__ Foundation: _NSUserName
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSByteCountFormatter
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionItem
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSProxy
__ Foundation: __NSDictionaryOfVariableBindings
__ GraphicsServices: _GSCurrentEventTimestamp
__ GraphicsServices: _GSEventIsHardwareKeyboardAttached
__ IconServices: _OBJC_CLASS_$_ISIcon
__ IconServices: _OBJC_CLASS_$_ISImage
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ JavaScriptCore: _JSContextGetGlobalContext
__ JavaScriptCore: _JSContextGetGlobalObject
__ JavaScriptCore: _JSContextGetGroup
__ JavaScriptCore: _JSRemoteInspectorSetParentProcessInformation
__ JavaScriptCore: _JSRemoteInspectorStart
__ JavaScriptCore: _JSScriptCreateReferencingImmortalASCIIText
__ JavaScriptCore: _JSScriptEvaluate
__ JavaScriptCore: _JSValueIsObject
__ JavaScriptCore: _JSValueIsString
__ JavaScriptCore: _OBJC_CLASS_$_JSContext
__ JavaScriptCore: _OBJC_CLASS_$_JSValue
__ LocalAuthentication: _LAErrorDomain
__ LocalAuthentication: _LAErrorSubcodeKey
__ LocalAuthentication: _OBJC_CLASS_$_LAContext
__ ManagedConfiguration: _MCEffectiveSettingsChangedNotification
__ ManagedConfiguration: _MCFeatureAllowedSafariPasswordAutoFillDomains
__ ManagedConfiguration: _MCFeaturePasswordAutoFillAllowed
__ ManagedConfiguration: _MCFeatureSafariAcceptCookies
__ ManagedConfiguration: _MCFeatureSafariAutoFillAllowed
__ ManagedConfiguration: _MCFeatureSafariFraudWarningForced
__ ManagedConfiguration: _MCFeatureSafariJavaScriptAllowed
__ ManagedConfiguration: _MCFeatureSafariPopUpsAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MapKit: _MKMapItemTypeIdentifier
__ MapKit: _OBJC_CLASS_$_MKMapItem
__ MediaPlayer: _OBJC_CLASS_$_MPVolumeHUDController
__ MobileIcons: _LICreateIconFromCachedBitmap
__ PencilKit: _OBJC_CLASS_$_PKScribbleInteraction
__ PlugInKit: _PKUserElectionAttribute
__ PowerLog: _PLLogRegisteredEvent
__ PowerLog: _PLShouldLogRegisteredEvent
__ Preferences: _OBJC_CLASS_$_PSListController
__ Preferences: _OBJC_METACLASS_$_PSListController
__ QuartzCore: _CAColorMatrixConcat
__ QuartzCore: _CAColorMatrixMakeBrightness
__ QuartzCore: _CAColorMatrixMakeColorSourceOver
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DRotate
__ QuartzCore: _CATransform3DScale
__ QuartzCore: _CATransform3DTranslate
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAPackage
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CAStateController
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CAShapeLayer
__ QuartzCore: _kCAAnimationAbsolute
__ QuartzCore: _kCAAnimationNonZero
__ QuartzCore: _kCAAnimationRelative
__ QuartzCore: _kCACornerCurveCircular
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFillModeBackwards
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFilterDestOut
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCALayerContentsSwizzleAAAA
__ QuartzCore: _kCAMediaTimingFunctionDefault
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ QuartzCore: _kCAPackageTypeCAMLBundle
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailGenerationRequest
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailGenerator
__ SafariFoundation: _OBJC_CLASS_$_SFAppAutoFillOneTimeCodeProvider
__ SafariFoundation: _OBJC_CLASS_$_SFAutoFillFeatureManager
__ SafariFoundation: _OBJC_CLASS_$_SFAutoFillHelperProxy
__ SafariFoundation: _OBJC_CLASS_$_SFCredentialProviderExtensionHelperProxy
__ SafariFoundation: _OBJC_CLASS_$_SFCredentialProviderExtensionManager
__ SafariFoundation: _OBJC_CLASS_$_SFDomainAssociationUtilities
__ SafariFoundation: _OBJC_CLASS_$_SFPasswordCredentialIdentity
__ SafariFoundation: _OBJC_CLASS_$_SFSafariCredential
__ SafariFoundation: _OBJC_CLASS_$_SFSafariCredentialStore
__ SafariFoundation: _OBJC_CLASS_$_SFSharablePassword
__ SafariFoundation: _OBJC_CLASS_$_SFSharablePasswordReceiver
__ SafariFoundation: _OBJC_CLASS_$_SFSuggestedUserProvider
__ SafariFoundation: _SFAccountModificationExtensionSupportsStrongPasswordChange
__ SafariFoundation: _SFAccountModificationExtensionSupportsUpgradeToSignInWithApple
__ SafariFoundation: _SFAccountModificationPasswordGenerationRequirements
__ SafariFoundation: _SFAutoFillHelperErrorDomain
__ SafariSharedUI: _OBJC_CLASS_$_WBSAllowedLegacyTLSHostManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSAnalyticsLogger
__ SafariSharedUI: _OBJC_CLASS_$_WBSAnalyticsSafariActivatedHomeScreenQuickActionEvent
__ SafariSharedUI: _OBJC_CLASS_$_WBSAnalyticsSafariAutoFillAuthenticationEvent
__ SafariSharedUI: _OBJC_CLASS_$_WBSAnalyticsSafariAutoFillAuthenticationPreferenceEvent
__ SafariSharedUI: _OBJC_CLASS_$_WBSAnalyticsSafariDidTerminateWebProcessBeforeNavigation
__ SafariSharedUI: _OBJC_CLASS_$_WBSAnalyticsSafariEnterTwoUpEvent
__ SafariSharedUI: _OBJC_CLASS_$_WBSAnalyticsSafariTappedOnToolbarButtonEvent
__ SafariSharedUI: _OBJC_CLASS_$_WBSAnalyticsSafariTwoFingerTappedOnLinkEvent
__ SafariSharedUI: _OBJC_CLASS_$_WBSAnalyticsSafariUsingPrivateBrowsingEvent
__ SafariSharedUI: _OBJC_CLASS_$_WBSAnalyticsSafariViewControllerDismissedEvent
__ SafariSharedUI: _OBJC_CLASS_$_WBSAnalyticsSafariViewControllerPresentedFromHostAppEvent
__ SafariSharedUI: _OBJC_CLASS_$_WBSAnalyticsSafariViewControllerTappedOnToolbarButtonEvent
__ SafariSharedUI: _OBJC_CLASS_$_WBSAppLink
__ SafariSharedUI: _OBJC_CLASS_$_WBSAutoFillQuirksManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSAutomaticReaderActivationManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSBookmarkFolderTouchIconProvider
__ SafariSharedUI: _OBJC_CLASS_$_WBSCache
__ SafariSharedUI: _OBJC_CLASS_$_WBSCertificateWarningPageContext
__ SafariSharedUI: _OBJC_CLASS_$_WBSCloudTab
__ SafariSharedUI: _OBJC_CLASS_$_WBSCoalescedAsynchronousWriter
__ SafariSharedUI: _OBJC_CLASS_$_WBSConfigurationDataTransformer
__ SafariSharedUI: _OBJC_CLASS_$_WBSContentBlockersPreferenceManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSCredentialMatch
__ SafariSharedUI: _OBJC_CLASS_$_WBSCredentialMatchCriteria
__ SafariSharedUI: _OBJC_CLASS_$_WBSCreditCardData
__ SafariSharedUI: _OBJC_CLASS_$_WBSDigitalHealthManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSFaviconProvider
__ SafariSharedUI: _OBJC_CLASS_$_WBSFeatureAvailability
__ SafariSharedUI: _OBJC_CLASS_$_WBSFluidProgressController
__ SafariSharedUI: _OBJC_CLASS_$_WBSFluidProgressState
__ SafariSharedUI: _OBJC_CLASS_$_WBSFormAutoFillMetadataCorrector
__ SafariSharedUI: _OBJC_CLASS_$_WBSFormControlMetadata
__ SafariSharedUI: _OBJC_CLASS_$_WBSFormDataController
__ SafariSharedUI: _OBJC_CLASS_$_WBSFormMetadata
__ SafariSharedUI: _OBJC_CLASS_$_WBSFormMetadataController
__ SafariSharedUI: _OBJC_CLASS_$_WBSGeolocationPreferenceManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSHistory
__ SafariSharedUI: _OBJC_CLASS_$_WBSHistoryAccessSessionProxy
__ SafariSharedUI: _OBJC_CLASS_$_WBSLeadImageCache
__ SafariSharedUI: _OBJC_CLASS_$_WBSMultiRoundAutoFillManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSOpenSearchURLTemplate
__ SafariSharedUI: _OBJC_CLASS_$_WBSPageZoomPreferenceManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSParsecABGroupManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSPasswordAutoFillUtilities
__ SafariSharedUI: _OBJC_CLASS_$_WBSPasswordBreachManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSPasswordGenerationManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSPasswordManagerURL
__ SafariSharedUI: _OBJC_CLASS_$_WBSPasswordPickerHintStringGenerator
__ SafariSharedUI: _OBJC_CLASS_$_WBSPasswordWarningManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSPasswordWarningStore
__ SafariSharedUI: _OBJC_CLASS_$_WBSPerSitePreference
__ SafariSharedUI: _OBJC_CLASS_$_WBSPerSitePreferenceManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSPerSitePreferenceTimeout
__ SafariSharedUI: _OBJC_CLASS_$_WBSPerSitePreferencesSQLiteStore
__ SafariSharedUI: _OBJC_CLASS_$_WBSPrivacyReportData
__ SafariSharedUI: _OBJC_CLASS_$_WBSReaderAvailabilityCheckResult
__ SafariSharedUI: _OBJC_CLASS_$_WBSReaderConfigurationManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSReaderFontDownloadManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSReaderFontManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSReaderNavigationPolicyDecider
__ SafariSharedUI: _OBJC_CLASS_$_WBSReaderResources
__ SafariSharedUI: _OBJC_CLASS_$_WBSRecentWebSearchesController
__ SafariSharedUI: _OBJC_CLASS_$_WBSRecentlyUsedAutoFillSet
__ SafariSharedUI: _OBJC_CLASS_$_WBSRemotePlistController
__ SafariSharedUI: _OBJC_CLASS_$_WBSSQLiteDatabase
__ SafariSharedUI: _OBJC_CLASS_$_WBSSQLiteStatement
__ SafariSharedUI: _OBJC_CLASS_$_WBSSavedPassword
__ SafariSharedUI: _OBJC_CLASS_$_WBSSavedPasswordStore
__ SafariSharedUI: _OBJC_CLASS_$_WBSScopeExitHandler
__ SafariSharedUI: _OBJC_CLASS_$_WBSSearchImpressionAnalyticsRecorder
__ SafariSharedUI: _OBJC_CLASS_$_WBSSearchProvider
__ SafariSharedUI: _OBJC_CLASS_$_WBSSingleCreditCardData
__ SafariSharedUI: _OBJC_CLASS_$_WBSSiriIntelligenceDonor
__ SafariSharedUI: _OBJC_CLASS_$_WBSSiteMetadataImageCache
__ SafariSharedUI: _OBJC_CLASS_$_WBSSiteMetadataManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSTabDialog
__ SafariSharedUI: _OBJC_CLASS_$_WBSTabDialogCancellationContext
__ SafariSharedUI: _OBJC_CLASS_$_WBSTabDialogCancellationExemption
__ SafariSharedUI: _OBJC_CLASS_$_WBSTabDialogManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSTemplateIconMonogramConfiguration
__ SafariSharedUI: _OBJC_CLASS_$_WBSTemplateIconMonogramGenerator
__ SafariSharedUI: _OBJC_CLASS_$_WBSTouchIconCache
__ SafariSharedUI: _OBJC_CLASS_$_WBSTouchIconFetchOperation
__ SafariSharedUI: _OBJC_CLASS_$_WBSTouchIconRequest
__ SafariSharedUI: _OBJC_CLASS_$_WBSTouchIconResponse
__ SafariSharedUI: _OBJC_CLASS_$_WBSTouchIconWebProcessPlugInPageController
__ SafariSharedUI: _OBJC_CLASS_$_WBSTranslationConsentAlertHelper
__ SafariSharedUI: _OBJC_CLASS_$_WBSTranslationContext
__ SafariSharedUI: _OBJC_CLASS_$_WBSURLCompletionSessionProxy
__ SafariSharedUI: _OBJC_CLASS_$_WBSURLSpoofingMitigator
__ SafariSharedUI: _OBJC_CLASS_$_WBSUserMediaPermissionController
__ SafariSharedUI: _OBJC_CLASS_$_WBSWebProcessPlugIn
__ SafariSharedUI: _OBJC_CLASS_$_WBSWebProcessPlugInPageController
__ SafariSharedUI: _OBJC_CLASS_$_WBSWellKnownURLResponseCodeReliabilityChecker
__ SafariSharedUI: _OBJC_IVAR_$_WBSAnalyticsLogger._analyticsSynchronizationQueue
__ SafariSharedUI: _OBJC_METACLASS_$_WBSBookmarkFolderTouchIconProvider
__ SafariSharedUI: _OBJC_METACLASS_$_WBSConfigurationDataTransformer
__ SafariSharedUI: _OBJC_METACLASS_$_WBSContentBlockersPreferenceManager
__ SafariSharedUI: _OBJC_METACLASS_$_WBSFaviconProvider
__ SafariSharedUI: _OBJC_METACLASS_$_WBSFeatureAvailability
__ SafariSharedUI: _OBJC_METACLASS_$_WBSFormMetadataController
__ SafariSharedUI: _OBJC_METACLASS_$_WBSGeolocationPreferenceManager
__ SafariSharedUI: _OBJC_METACLASS_$_WBSHistoryAccessSessionProxy
__ SafariSharedUI: _OBJC_METACLASS_$_WBSPageZoomPreferenceManager
__ SafariSharedUI: _OBJC_METACLASS_$_WBSPerSitePreferenceManager
__ SafariSharedUI: _OBJC_METACLASS_$_WBSRecentWebSearchesController
__ SafariSharedUI: _OBJC_METACLASS_$_WBSSearchProvider
__ SafariSharedUI: _OBJC_METACLASS_$_WBSSingleCreditCardData
__ SafariSharedUI: _OBJC_METACLASS_$_WBSSiteMetadataManager
__ SafariSharedUI: _OBJC_METACLASS_$_WBSTouchIconCache
__ SafariSharedUI: _OBJC_METACLASS_$_WBSTouchIconFetchOperation
__ SafariSharedUI: _OBJC_METACLASS_$_WBSTouchIconRequest
__ SafariSharedUI: _OBJC_METACLASS_$_WBSURLCompletionSessionProxy
__ SafariSharedUI: _OBJC_METACLASS_$_WBSUserMediaPermissionController
__ SafariSharedUI: _OBJC_METACLASS_$_WBSWebProcessPlugIn
__ SafariSharedUI: _OBJC_METACLASS_$_WBSWebProcessPlugInPageController
__ SafariSharedUI: _WBSABProxyPropertyFullName
__ SafariSharedUI: _WBSAnalyticsLoginAutoFillProperty
__ SafariSharedUI: _WBSApplicationIdentifierFromAuditToken
__ SafariSharedUI: _WBSAuditTokenHasEntitlement
__ SafariSharedUI: _WBSCameraPreferenceIdentifier
__ SafariSharedUI: _WBSContentBlockersPreferenceIdentifier
__ SafariSharedUI: _WBSCreditCardTypeFromNumber
__ SafariSharedUI: _WBSCreditCardTypeLocalizedName
__ SafariSharedUI: _WBSDomainWithModifiedPageZoomPreferenceUserInfoKey
__ SafariSharedUI: _WBSDomainWithModifiedReaderPreferenceUserInfoKey
__ SafariSharedUI: _WBSFormAnnotationContactIDKey
__ SafariSharedUI: _WBSFormMetadataControlValueKey
__ SafariSharedUI: _WBSGeolocationPreferenceIdentifier
__ SafariSharedUI: _WBSHistoryDidRemoveHostnamesNotification
__ SafariSharedUI: _WBSHistoryItemsKey
__ SafariSharedUI: _WBSHistoryItemsWereRemovedNotification
__ SafariSharedUI: _WBSHistoryWasClearedNotification
__ SafariSharedUI: _WBSIsEqual
__ SafariSharedUI: _WBSLogWithDifferentialPrivacy
__ SafariSharedUI: _WBSMicrophonePreferenceIdentifier
__ SafariSharedUI: _WBSNTPTimeoutInterval
__ SafariSharedUI: _WBSNormalizedCreditCardNumber
__ SafariSharedUI: _WBSPageZoomFactorUserInfoKey
__ SafariSharedUI: _WBSPageZoomPreferenceDidChangeNotification
__ SafariSharedUI: _WBSPasswordManagerURLAllowKey
__ SafariSharedUI: _WBSPasswordManagerURLAllowShowingPasswordDetailIfLocalAuthenticationNotConfiguredKey
__ SafariSharedUI: _WBSPasswordManagerURLChangePasswordDomainKey
__ SafariSharedUI: _WBSPasswordManagerURLChangePasswordUserKey
__ SafariSharedUI: _WBSPasswordManagerURLDidAuthenticateKey
__ SafariSharedUI: _WBSPasswordManagerURLEncryptedPasswordDataKey
__ SafariSharedUI: _WBSPasswordManagerURLEncryptionKeyReferenceKey
__ SafariSharedUI: _WBSPasswordManagerURLSearchBundleIdentifierKey
__ SafariSharedUI: _WBSPasswordManagerURLSearchQueryKey
__ SafariSharedUI: _WBSPasswordManagerURLShowChangePasswordController
__ SafariSharedUI: _WBSPasswordManagerURLTrue
__ SafariSharedUI: _WBSPerSiteAutomaticReaderActivationPreferenceDidChangeNotification
__ SafariSharedUI: _WBSReaderFontDownloadDidBeginNotification
__ SafariSharedUI: _WBSReaderFontDownloadDidFailNotification
__ SafariSharedUI: _WBSReaderFontDownloadDidFinishNotification
__ SafariSharedUI: _WBSReaderFontDownloadNotificationUserInfoKey
__ SafariSharedUI: _WBSReaderFontDownloadProgressDidChangeNotification
__ SafariSharedUI: _WBSReaderPreferenceIdentifier
__ SafariSharedUI: _WBSRecentlyUsedAutoFillSetDoNotFillIdentifier
__ SafariSharedUI: _WBSRemoteAutoFillQuirksLastUpdateTimePreferenceKey
__ SafariSharedUI: _WBSRequestDesktopSitePreferenceIdentifier
__ SafariSharedUI: _WBSRespondWithRandomDelay
__ SafariSharedUI: _WBSSavedPasswordStoreDidChangeNotification
__ SafariSharedUI: _WBSShouldApplyBackingForDarkBackdropToImage
__ SafariSharedUI: _WBSTouchIconWebViewConfigurationGroupIdentifier
__ SafariSharedUI: _WBSTranslationDetectionDidChangeNotificationName
__ SafariSharedUI: _WBSTranslationDetectionDidChangeNotificationNotificationLevelUserInfoKey
__ SafariSharedUI: _WBSTranslationDetectionDidChangeNotificationWebpageLanguageUserInfoKey
__ SafariSharedUI: _WBSTranslationStateDidChangeNotificationName
__ SafariSharedUI: _WBSWebProcessPlugInSearchEnginesForRedirectToSafeSearchKey
__ SafariSharedUI: _WBSWebsiteShouldStartWithReaderEnabledUserInfoKey
__ SafariSharedUI: _WBSZoomPreferenceIdentifier
__ SafariSharedUI: __WBSLocalizedString
__ SafariSharedUI: __WBSLocalizedStringWithCurrentUserLocale
__ SafariSharedUI: __ZN12SafariShared11JSUtilities20globalJSObjectByNameEPK15OpaqueJSContextPKc
__ SafariSharedUI: __ZN12SafariShared11JSUtilities25callJSMethodWithArgumentsEPK15OpaqueJSContextP13OpaqueJSValuePKcPKPKS4_m
__ SafariSharedUI: __ZN12SafariShared12JSController12staticValuesERN3WTF6VectorI13JSStaticValueLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE
__ SafariSharedUI: __ZN12SafariShared12JSController17scriptObjectReadyEPK15OpaqueJSContext
__ SafariSharedUI: __ZN12SafariShared12JSController29addScriptObjectToGlobalObjectEPK15OpaqueJSContext
__ SafariSharedUI: __ZN12SafariShared12JSControllerC2Ev
__ SafariSharedUI: __ZN12SafariShared12JSControllerD2Ev
__ SafariSharedUI: __ZN12SafariShared18ReaderJSController13staticJSClassEv
__ SafariSharedUI: __ZN12SafariShared18ReaderJSController14loadNewArticleEv
__ SafariSharedUI: __ZN12SafariShared18ReaderJSController15staticFunctionsERN3WTF6VectorI16JSStaticFunctionLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE
__ SafariSharedUI: __ZN12SafariShared18ReaderJSController16scriptObjectNameEv
__ SafariSharedUI: __ZN12SafariShared18ReaderJSController16setConfigurationEP12NSDictionary
__ SafariSharedUI: __ZN12SafariShared18ReaderJSController17setReaderIsActiveEb
__ SafariSharedUI: __ZN12SafariShared18ReaderJSController30evaluateLocalizedStringsScriptEPK15OpaqueJSContext
__ SafariSharedUI: __ZN12SafariShared18ReaderJSController33evaluateSharedUINormalWorldScriptEPK15OpaqueJSContext
__ SafariSharedUI: __ZN12SafariShared25ArticleFinderJSController12staticValuesERN3WTF6VectorI13JSStaticValueLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE
__ SafariSharedUI: __ZN12SafariShared25ArticleFinderJSController13staticJSClassEv
__ SafariSharedUI: __ZN12SafariShared25ArticleFinderJSController14articleContentEv
__ SafariSharedUI: __ZN12SafariShared25ArticleFinderJSController15staticFunctionsERN3WTF6VectorI16JSStaticFunctionLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE
__ SafariSharedUI: __ZN12SafariShared25ArticleFinderJSController16scriptObjectNameEv
__ SafariSharedUI: __ZN12SafariShared25ArticleFinderJSController33collectReadingListItemInformationEv
__ SafariSharedUI: __ZN12SafariShared25ArticleFinderJSController41detectAvailabilityForUIProcessDrivenCheckEv
__ SafariSharedUI: __ZN12SafariShared25TranslatedFileURLProtocol16registerProtocolEPKNS0_12ProtocolInfoE
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController13didFinishLoadEv
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController17clearAvailabilityEv
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController20prepareArticleFinderEv
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController21determineAvailabilityEv
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController21didFinishDocumentLoadEv
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController21originalArticleFinderEv
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController25checkAvailabilityIfNeededEv
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController27prepareToTransitionToReaderEv
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController28detectAvailabilityAfterDelayEdNS_34LoadEventTriggeringReaderDetectionE
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController30setCanRunAvailabilityDetectionEb
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController32extractTextSamplesForTranslationEv
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController45detectAvailabilityAfterSameDocumentNavigationEv
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityControllerC2Ev
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityControllerD2Ev
__ SafariSharedUI: __ZNK12SafariShared18ReaderJSController13reloadArticleEv
__ SafariSharedUI: __ZNK12SafariShared28ReaderAvailabilityController33originalArticleFinderJSControllerEv
__ SafariSharedUI: __ZTVN12SafariShared18ReaderJSControllerE
__ SafariSharedUI: _defaultTranslationPreferenceValues
__ SafariSharedUI: _showInternalTranslationActions
__ Security: _SOSCCIsIcloudKeychainSyncing
__ Security: _SecCertificateCopySubjectSummary
__ Security: _SecCertificateIsValid
__ Security: _SecIdentityCopyCertificate
__ Security: _SecIdentityGetTypeID
__ Security: _SecItemCopyMatching
__ Security: _SecPolicyCreateSSL
__ Security: _SecTrustCopyInfo
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustDeserialize
__ Security: _SecTrustEvaluate
__ Security: _SecTrustGetCertificateAtIndex
__ Security: _SecTrustGetCertificateCount
__ Security: _SecTrustSerialize
__ Security: _kSecAttrAccessGroup
__ Security: _kSecClass
__ Security: _kSecClassIdentity
__ Security: _kSecMatchIssuers
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecReturnRef
__ Security: _kSecTrustInfoCompanyNameKey
__ Security: _kSecTrustInfoExtendedValidationKey
__ Security: _kSecTrustInfoRevocationKey
__ Security: _kSecValueRef
__ SoftLinking: __sl_dlopen_audited
__ SpringBoardServices: _OBJC_CLASS_$_SBSStatusBarStyleOverridesAssertion
__ SpringBoardServices: _OBJC_CLASS_$_SBSStatusBarStyleOverridesCoordinator
__ SpringBoardServices: _SBSApplicationLaunchOptionBrowserReuseTabKey
__ TelephonyUtilities: _OBJC_CLASS_$_TUDialRequest
__ TelephonyUtilities: _OBJC_CLASS_$_TUJoinConversationRequest
__ TextInput: _OBJC_CLASS_$_TIAutofill
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutBoundarySupplementaryItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutDimension
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutGroup
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSection
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSize
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSpacing
__ UIKit: _OBJC_CLASS_$_NSDiffableDataSourceSnapshot
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivity
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIActivityItemProvider
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationExtensionActivity
__ UIKit: _OBJC_CLASS_$_UIAutofillExtrasSuggestion
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UICollectionReusableView
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayoutConfiguration
__ UIKit: _OBJC_CLASS_$_UICollectionViewDiffableDataSource
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UICommand
__ UIKit: _OBJC_CLASS_$_UIContextMenuConfiguration
__ UIKit: _OBJC_CLASS_$_UIContextualAction
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDocumentBrowserViewController
__ UIKit: _OBJC_CLASS_$_UIDocumentInteractionController
__ UIKit: _OBJC_CLASS_$_UIDocumentPickerViewController
__ UIKit: _OBJC_CLASS_$_UIDragInteraction
__ UIKit: _OBJC_CLASS_$_UIDragItem
__ UIKit: _OBJC_CLASS_$_UIDragPreview
__ UIKit: _OBJC_CLASS_$_UIDragPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIDropInteraction
__ UIKit: _OBJC_CLASS_$_UIDropProposal
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIFontMetrics
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIHoverGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIInputView
__ UIKit: _OBJC_CLASS_$_UIInputViewController
__ UIKit: _OBJC_CLASS_$_UIKBScreenTraits
__ UIKit: _OBJC_CLASS_$_UIKeyCommand
__ UIKit: _OBJC_CLASS_$_UIKeyboardImpl
__ UIKit: _OBJC_CLASS_$_UIKeyboardInputModeController
__ UIKit: _OBJC_CLASS_$_UIKeyboardLayout
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UILocalizedIndexedCollation
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UIMenuController
__ UIKit: _OBJC_CLASS_$_UIMenuItem
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UINavigationItem
__ UIKit: _OBJC_CLASS_$_UIOpenInIBooksActivity
__ UIKit: _OBJC_CLASS_$_UIOpenURLAction
__ UIKit: _OBJC_CLASS_$_UIOpenURLContext
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPasteboard
__ UIKit: _OBJC_CLASS_$_UIPercentDrivenInteractiveTransition
__ UIKit: _OBJC_CLASS_$_UIPeripheralHost
__ UIKit: _OBJC_CLASS_$_UIPointerEffect
__ UIKit: _OBJC_CLASS_$_UIPointerInteraction
__ UIKit: _OBJC_CLASS_$_UIPointerLiftEffect
__ UIKit: _OBJC_CLASS_$_UIPointerRegion
__ UIKit: _OBJC_CLASS_$_UIPointerShape
__ UIKit: _OBJC_CLASS_$_UIPointerStyle
__ UIKit: _OBJC_CLASS_$_UIPreviewAction
__ UIKit: _OBJC_CLASS_$_UIPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIPrintInfo
__ UIKit: _OBJC_CLASS_$_UIPrintInteractionController
__ UIKit: _OBJC_CLASS_$_UIPrintPageRenderer
__ UIKit: _OBJC_CLASS_$_UIProgressView
__ UIKit: _OBJC_CLASS_$_UIResponder
__ UIKit: _OBJC_CLASS_$_UISceneOpenURLOptions
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScreenEdgePanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISearchBar
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UISegmentedControl
__ UIKit: _OBJC_CLASS_$_UISelectionFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UISocialActivity
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UIStatusBarServer
__ UIKit: _OBJC_CLASS_$_UISwipeActionsConfiguration
__ UIKit: _OBJC_CLASS_$_UISwipeGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewCellLayoutManagerValue1
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITableViewDiffableDataSource
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedDragPreview
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITextSuggestion
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIToolbar
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIVibrancyEffect
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWebClip
__ UIKit: _OBJC_CLASS_$_UIWebClipLinkTag
__ UIKit: _OBJC_CLASS_$_UIWebGeolocationPolicyDecider
__ UIKit: _OBJC_CLASS_$_UIWindowScene
__ UIKit: _OBJC_CLASS_$__UIActivityItemCustomization
__ UIKit: _OBJC_CLASS_$__UIActivityItemCustomizationGroup
__ UIKit: _OBJC_CLASS_$__UIClickInteraction
__ UIKit: _OBJC_CLASS_$__UIContextualMenuGestureRecognizer
__ UIKit: _OBJC_CLASS_$__UIFallbackPresentationViewController
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_CLASS_$__UISheetPresentationController
__ UIKit: _OBJC_METACLASS_$_UIActivity
__ UIKit: _OBJC_METACLASS_$_UIActivityItemProvider
__ UIKit: _OBJC_METACLASS_$_UIActivityViewController
__ UIKit: _OBJC_METACLASS_$_UIAlertAction
__ UIKit: _OBJC_METACLASS_$_UIAlertController
__ UIKit: _OBJC_METACLASS_$_UIApplicationExtensionActivity
__ UIKit: _OBJC_METACLASS_$_UIBarButtonItem
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICollectionReusableView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UIInputView
__ UIKit: _OBJC_METACLASS_$_UIInputViewController
__ UIKit: _OBJC_METACLASS_$_UIKBScreenTraits
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIPercentDrivenInteractiveTransition
__ UIKit: _OBJC_METACLASS_$_UIPrintPageRenderer
__ UIKit: _OBJC_METACLASS_$_UIResponder
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UISearchBar
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewCellLayoutManagerValue1
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITableViewDiffableDataSource
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UITextSuggestion
__ UIKit: _OBJC_METACLASS_$_UIToolbar
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIVisualEffectView
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIActivityTypeAddToReadingList
__ UIKit: _UIActivityTypeAirDrop
__ UIKit: _UIActivityTypeCopyToPasteboard
__ UIKit: _UIActivityTypeMail
__ UIKit: _UIActivityTypeMarkupAsPDF
__ UIKit: _UIActivityTypeMessage
__ UIKit: _UIActivityTypeOpenInIBooks
__ UIKit: _UIActivityTypePrint
__ UIKit: _UIActivityTypeSaveToFiles
__ UIKit: _UIAnimationDragCoefficient
__ UIKit: _UIApp
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationLaunchOptionsSourceApplicationKey
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIApplicationWillTerminateNotification
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategoryNewValueKey
__ UIKit: _UIContentSizeCategoryUnspecified
__ UIKit: _UICreateCGImageFromIOSurface
__ UIKit: _UIDetectedPasteboardTypesAddressBarSearch
__ UIKit: _UIDetectedPasteboardTypesAddressBarURL
__ UIKit: _UIEdgeInsetsAdd
__ UIKit: _UIEdgeInsetsMakeWithEdges
__ UIKit: _UIEdgeInsetsMax
__ UIKit: _UIEdgeInsetsSubtract
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontDescriptorTraitsAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightLight
__ UIKit: _UIFontWeightTrait
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIGraphicsPopContext
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIImageSymbolWeightForFontWeight
__ UIKit: _UIKeyInputEscape
__ UIKit: _UIKeyInputLeftArrow
__ UIKit: _UIKeyInputRightArrow
__ UIKit: _UIKeyboardAnimationCurveUserInfoKey
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardAutomaticIsOnScreen
__ UIKit: _UIKeyboardFrameBeginUserInfoKey
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardGetDefaultInputModesForLanguage
__ UIKit: _UIKeyboardOrderOutAutomaticToDirectionWithDuration
__ UIKit: _UIKeyboardPrivateWillChangeFrameNotification
__ UIKit: _UIKeyboardWillChangeFrameNotification
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UILayoutFittingCompressedSize
__ UIKit: _UILayoutFittingExpandedSize
__ UIKit: _UIMenuControllerWillHideMenuNotification
__ UIKit: _UIPasteboardOptionExpirationDate
__ UIKit: _UIPasteboardTypeAutomatic
__ UIKit: _UIRectFill
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: _UIRectGetCenter
__ UIKit: _UIRectInset
__ UIKit: _UIRoundToViewScale
__ UIKit: _UISceneDidActivateNotification
__ UIKit: _UISceneDidEnterBackgroundNotification
__ UIKit: _UISceneWillDeactivateNotification
__ UIKit: _UISceneWillEnterForegroundNotification
__ UIKit: _UIScrollViewDecelerationRateNormal
__ UIKit: _UIStatusBarStyleFromUIWebClipStatusBarStyle
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UITransitionContextFromViewKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UITransitionContextToViewKey
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: _UIWebClipStatusBarStyleForMetaTagContent
__ UIKit: _WebClipStatusBarStyleMetaName
__ UIKit: __UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection
__ UIKit: __UIViewDefaultLayoutMargin
__ UIKit: ___UIApplicationLinkedOnOrAfter
__ WebBookmarks: _OBJC_CLASS_$_WebBookmark
__ WebBookmarks: _OBJC_CLASS_$_WebBookmarkCollection
__ WebBookmarks: _OBJC_CLASS_$_WebBookmarkWebFilterSettings
__ WebBookmarks: _OBJC_CLASS_$_WebBookmarksSettingsGateway
__ WebBookmarks: _WebBookmarksChangedFolderIDKey
__ WebBookmarks: _WebBookmarksDidReloadNotification
__ WebBookmarks: _WebBookmarksFolderContentsDidChangeNotification
__ WebKit: _OBJC_CLASS_$_WKBackForwardListItem
__ WebKit: _OBJC_CLASS_$_WKDOMElement
__ WebKit: _OBJC_CLASS_$_WKFrameInfo
__ WebKit: _OBJC_CLASS_$_WKNavigationAction
__ WebKit: _OBJC_CLASS_$_WKNavigationResponse
__ WebKit: _OBJC_CLASS_$_WKPreferences
__ WebKit: _OBJC_CLASS_$_WKProcessPool
__ WebKit: _OBJC_CLASS_$_WKUserContentController
__ WebKit: _OBJC_CLASS_$_WKWebProcessPlugInFrame
__ WebKit: _OBJC_CLASS_$_WKWebProcessPlugInNodeHandle
__ WebKit: _OBJC_CLASS_$_WKWebProcessPlugInScriptWorld
__ WebKit: _OBJC_CLASS_$_WKWebView
__ WebKit: _OBJC_CLASS_$_WKWebViewConfiguration
__ WebKit: _OBJC_CLASS_$_WKWebpagePreferences
__ WebKit: _OBJC_CLASS_$_WKWebsiteDataStore
__ WebKit: _OBJC_CLASS_$_WebEvent
__ WebKit: _OBJC_CLASS_$_WebSecurityOrigin
__ WebKit: _OBJC_CLASS_$_WebView
__ WebKit: _OBJC_CLASS_$__WKApplicationManifest
__ WebKit: _OBJC_CLASS_$__WKElementAction
__ WebKit: _OBJC_CLASS_$__WKFrameHandle
__ WebKit: _OBJC_CLASS_$__WKProcessPoolConfiguration
__ WebKit: _OBJC_CLASS_$__WKRemoteObjectInterface
__ WebKit: _OBJC_CLASS_$__WKUserContentExtensionStore
__ WebKit: _OBJC_CLASS_$__WKWebAuthenticationAssertionResponse
__ WebKit: _OBJC_CLASS_$__WKWebsiteDataStoreConfiguration
__ WebKit: _OBJC_METACLASS_$_WKWebView
__ WebKit: _WKBundlePageIsUsingEphemeralSession
__ WebKit: _WebKitErrorDomain
__ WebKit: __WKLegacyErrorDomain
__ WebKit: __WKRecoveryAttempterErrorKey
__ WebKit: __WKUserContentExtensionsDomain
__ WebUI: _OBJC_CLASS_$_WBUCreditCardDataController
__ WebUI: _OBJC_CLASS_$_WBUFeatureManager
__ WebUI: _OBJC_CLASS_$_WBUFormAutoFillPrompt
__ WebUI: _OBJC_CLASS_$_WBUFormDataController
__ WebUI: _OBJC_CLASS_$_WBUHistory
__ WebUI: _OBJC_CLASS_$_WBUSheetController
__ WebUI: _OBJC_CLASS_$_WebUIAlert
__ WebUI: _OBJC_METACLASS_$_WBUFeatureManager
__ WebUI: _OBJC_METACLASS_$_WBUFormDataController
__ WebUI: _WBUABStreetKey
__ WebUI: _WBUPasswordGenerationPasswordAcceptedAggdKey
__ WebUI: _WBUPasswordGenerationPromptShownAggdKey
__ WebUI: _incrementAggdKey
__ WebUI: _webuiCookieAcceptPolicyPreferencesKey
__ WirelessDiagnostics: _AWDPostMetric
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: _SANDBOX_CHECK_NO_REPORT
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _clock_gettime
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_cancel
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_program_minos_at_least
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _sandbox_container_path_for_pid
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___gxx_personality_v0
__ libcompression.dylib: _compression_decode_buffer
__ libcompression.dylib: _compression_encode_buffer
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_getMethodDescription
__ libsqlite3.dylib: _sqlite3_create_function_v2
__ libsqlite3.dylib: _sqlite3_result_text
_SFURLTextPreviewViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  _SFURLTextPreviewView *previewView
 @property  NSURL *URL

  // instance methods
  -[_SFURLTextPreviewViewController initWithURL:]
  -[_SFURLTextPreviewViewController .cxx_destruct]
  -[_SFURLTextPreviewViewController _linkActions]
  -[_SFURLTextPreviewViewController viewWillLayoutSubviews]
  -[_SFURLTextPreviewViewController setPreviewView:]
  -[_SFURLTextPreviewViewController _activatedElementInfo]
  -[_SFURLTextPreviewViewController URL]
  -[_SFURLTextPreviewViewController setURL:]
  -[_SFURLTextPreviewViewController previewView]
  -[_SFURLTextPreviewViewController loadView]
  -[_SFURLTextPreviewViewController _setLinkActions:]
  -[_SFURLTextPreviewViewController _setActivatedElementInfo:]
  -[_SFURLTextPreviewViewController _previewHeader]


SFLinkRedirectionViewController : SFSafariViewController <UIViewControllerTransitioningDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFLinkRedirectionViewController viewDidLoad]
  -[SFLinkRedirectionViewController remoteViewController:didResolveRedirectionWithURL:appLink:]
  -[SFLinkRedirectionViewController initWithURL:]
  -[SFLinkRedirectionViewController setDefersAddingRemoteViewController:]


_SFPasswordTableConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL shouldShowIcons
 @property  BOOL shouldShowSearchBar
 @property  BOOL supportsDelete
 @property  BOOL supportsShare

  // instance methods
  -[_SFPasswordTableConfiguration shouldShowSearchBar]
  -[_SFPasswordTableConfiguration setShouldShowSearchBar:]
  -[_SFPasswordTableConfiguration supportsDelete]
  -[_SFPasswordTableConfiguration setSupportsDelete:]
  -[_SFPasswordTableConfiguration supportsShare]
  -[_SFPasswordTableConfiguration setSupportsShare:]
  -[_SFPasswordTableConfiguration shouldShowIcons]
  -[_SFPasswordTableConfiguration setShouldShowIcons:]


SFPasswordCellData : NSObject /usr/lib/libc++.1.dylib
 @property  WBSSavedPassword *savedPassword
 @property  WBSPasswordWarning *warning
 @property  NSString *highLevelDomain
 @property  BOOL savedPasswordIsOnlySavedPasswordForHighLevelDomain

  // class methods
  +[SFPasswordCellData passwordCellDataWithSavedPassword:warning:savedPasswordIsOnlySavedPasswordForHighLevelDomain:]

  // instance methods
  -[SFPasswordCellData initWithSavedPassword:warning:savedPasswordIsOnlySavedPasswordForHighLevelDomain:]
  -[SFPasswordCellData savedPassword]
  -[SFPasswordCellData .cxx_destruct]
  -[SFPasswordCellData savedPasswordIsOnlySavedPasswordForHighLevelDomain]
  -[SFPasswordCellData highLevelDomain]
  -[SFPasswordCellData warning]


_SFPasswordTableViewController : UITableViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UISearchBarDelegate, UISearchControllerDelegate, UISearchResultsUpdating, _SFPasswordIconControllerDelegate>
 @property  NSString *searchQuery
 @property  NSString *searchPattern
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFPasswordTableViewController viewDidLoad]
  -[_SFPasswordTableViewController willPresentSearchController:]
  -[_SFPasswordTableViewController updateSearchResultsForSearchController:]
  -[_SFPasswordTableViewController willDismissSearchController:]
  -[_SFPasswordTableViewController tableView:didEndDisplayingCell:forRowAtIndexPath:]
  -[_SFPasswordTableViewController tableView:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[_SFPasswordTableViewController positionForBar:]
  -[_SFPasswordTableViewController tableView:previewForHighlightingContextMenuWithConfiguration:]
  -[_SFPasswordTableViewController tableView:contextMenuConfigurationForRowAtIndexPath:point:]
  -[_SFPasswordTableViewController tableView:canPerformAction:forRowAtIndexPath:withSender:]
  -[_SFPasswordTableViewController tableView:performAction:forRowAtIndexPath:withSender:]
  -[_SFPasswordTableViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[_SFPasswordTableViewController .cxx_destruct]
  -[_SFPasswordTableViewController _sceneDidEnterBackground:]
  -[_SFPasswordTableViewController _updateIconForDomain:forCell:]
  -[_SFPasswordTableViewController shareSavedPassword:modalPresentationSourceView:]
  -[_SFPasswordTableViewController handleContextMenuDeleteForIndexPath:]
  -[_SFPasswordTableViewController _tableView:previewForIndexPath:]
  -[_SFPasswordTableViewController searchPatternDidUpdate]
  -[_SFPasswordTableViewController iconDidUpdateForDomain:iconController:]
  -[_SFPasswordTableViewController initWithStyle:siteMetadataManager:configuration:]
  -[_SFPasswordTableViewController searchPattern]
  -[_SFPasswordTableViewController tableView:willBeginEditingRowAtIndexPath:]
  -[_SFPasswordTableViewController tableView:didEndEditingRowAtIndexPath:]
  -[_SFPasswordTableViewController tableView:shouldShowMenuForRowAtIndexPath:]
  -[_SFPasswordTableViewController viewWillAppear:]
  -[_SFPasswordTableViewController setSearchQuery:]
  -[_SFPasswordTableViewController viewDidDisappear:]
  -[_SFPasswordTableViewController searchQuery]
  -[_SFPasswordTableViewController viewWillDisappear:]
  -[_SFPasswordTableViewController setEditing:animated:]


SFPasswordPickerRemoteViewController : SFPasswordRemoteViewController <SFPasswordPickerRemoteViewControllerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFPasswordPickerRemoteViewController exportedInterface]
  +[SFPasswordPickerRemoteViewController passwordServiceViewControllerName]
  +[SFPasswordPickerRemoteViewController serviceViewControllerInterface]

  // instance methods
  -[SFPasswordPickerRemoteViewController selectedCredential:]
  -[SFPasswordPickerRemoteViewController _canShowWhileLocked]


_SFBookmarkTextEntryTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  UITextField *editableTextField

  // instance methods
  -[_SFBookmarkTextEntryTableViewCell setSeparatorInset:]
  -[_SFBookmarkTextEntryTableViewCell layoutMarginsDidChange]
  -[_SFBookmarkTextEntryTableViewCell updateConstraints]
  -[_SFBookmarkTextEntryTableViewCell .cxx_destruct]
  -[_SFBookmarkTextEntryTableViewCell safeAreaInsetsDidChange]
  -[_SFBookmarkTextEntryTableViewCell initWithText:autocapitalizationType:autocorrectionType:]
  -[_SFBookmarkTextEntryTableViewCell editableTextField]


_SFTelephonyNavigationMitigationPolicy : NSObject /usr/lib/libc++.1.dylib
 @property  <_SFDialogPresenting> *dialogPresenter

  // class methods
  +[_SFTelephonyNavigationMitigationPolicy test_suspiciousClassificationExpirationDuration]

  // instance methods
  -[_SFTelephonyNavigationMitigationPolicy setDialogPresenter:]
  -[_SFTelephonyNavigationMitigationPolicy dialogPresenter]
  -[_SFTelephonyNavigationMitigationPolicy .cxx_destruct]
  -[_SFTelephonyNavigationMitigationPolicy userAcceptedCallPrompt]
  -[_SFTelephonyNavigationMitigationPolicy policyAppliesToURL:]
  -[_SFTelephonyNavigationMitigationPolicy handleNavigationToURL:completionHandler:]
  -[_SFTelephonyNavigationMitigationPolicy userDeclinedCallPrompt]
  -[_SFTelephonyNavigationMitigationPolicy _checkIfSuspiciousClassificationHasExpiredAndTransitionIfNeeded]
  -[_SFTelephonyNavigationMitigationPolicy _handleInput:]


_SFSyntheticClickContext : NSObject /usr/lib/libc++.1.dylib
 @property  WKWebView *webView
 @property  WKNavigationAction *navigationAction

  // instance methods
  -[_SFSyntheticClickContext webView]
  -[_SFSyntheticClickContext .cxx_destruct]
  -[_SFSyntheticClickContext initWithWebView:navigationAction:]
  -[_SFSyntheticClickContext navigationAction]


SFHighPriorityRecommendationCellID : NSObject /usr/lib/libc++.1.dylib
 @property  id cellType

  // instance methods
  -[SFHighPriorityRecommendationCellID cellType]
  -[SFHighPriorityRecommendationCellID .cxx_destruct]
  -[SFHighPriorityRecommendationCellID initWithCellType:]


SFPrintPageRenderer : UIPrintPageRenderer /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UIPrintInteractionControllerDelegate>
 @property  NSString *URLString
 @property  UIPrintFormatter *contentFormatter
 @property  BOOL printFooter
 @property  <SFPrintPageRendererDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFPrintPageRenderer URLString]
  -[SFPrintPageRenderer init]
  -[SFPrintPageRenderer setURLString:]
  -[SFPrintPageRenderer .cxx_destruct]
  -[SFPrintPageRenderer printFooter]
  -[SFPrintPageRenderer printInteractionControllerWillStartJob:]
  -[SFPrintPageRenderer printInteractionControllerDidFinishJob:]
  -[SFPrintPageRenderer drawFooterForPageAtIndex:inRect:]
  -[SFPrintPageRenderer setContentFormatter:]
  -[SFPrintPageRenderer contentFormatter]
  -[SFPrintPageRenderer setPrintFooter:]
  -[SFPrintPageRenderer setDelegate:]
  -[SFPrintPageRenderer delegate]
  -[SFPrintPageRenderer printInteractionControllerParentViewController:]


_SFWebProcessPlugInPageController : WBSWebProcessPlugInPageController /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // class methods
  +[_SFWebProcessPlugInPageController pageControllerForBrowserContextController:]

  // instance methods
  -[_SFWebProcessPlugInPageController isNetworkReachable]
  -[_SFWebProcessPlugInPageController webProcessPlugInBrowserContextController:frame:willSendRequestForResource:request:redirectResponse:]


SSReadingList : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SSReadingList supportsURL:]
  +[SSReadingList defaultReadingList]

  // instance methods
  -[SSReadingList init]
  -[SSReadingList addReadingListItemWithURL:title:previewText:error:]
  -[SSReadingList .cxx_destruct]
  -[SSReadingList _init]
  -[SSReadingList _setUpConnectionIfNeeded]
  -[SSReadingList _addReadingListItemWithURL:title:previewText:]


_SFFormAutoFillInputSession : NSObject /usr/lib/libc++.1.dylib
 @property  <_WKFocusedElementInfo> *focusedElementInfo
 @property  NSDictionary *autoFillInputSessionUserObject
 @property  <_WKFormInputSession> *formInputSession
 @property  SFFormAutoFillFrameHandle *frameHandle
 @property  WBSFormMetadata *formMetadata

  // instance methods
  -[_SFFormAutoFillInputSession focusedElementInfo]
  -[_SFFormAutoFillInputSession .cxx_destruct]
  -[_SFFormAutoFillInputSession frameHandle]
  -[_SFFormAutoFillInputSession _initWithFormInputSession:focusedElement:]
  -[_SFFormAutoFillInputSession _updateAutoFillInputSessionUserObject:]
  -[_SFFormAutoFillInputSession formInputSession]
  -[_SFFormAutoFillInputSession initWithFormInputSession:]
  -[_SFFormAutoFillInputSession initWithFocusedElement:]
  -[_SFFormAutoFillInputSession autoFillInputSessionByReplacingInputSessionUserObject:]
  -[_SFFormAutoFillInputSession autoFillInputSessionUserObject]
  -[_SFFormAutoFillInputSession formMetadata]


_SSURLCompletionSession : WBSURLCompletionSessionProxy /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices

SFPrivacyReportViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UITableViewDelegatePrivate, _SFTableViewDiffableDataSourceDelegate, SFPrivacyReportExplanationTableViewCellDelegate, SFPrivacyReportGridViewDelegate, SFPrivacyReportDetailToggleTableViewCellDelegate>
 @property  NSString *domain
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFPrivacyReportViewController viewDidLoad]
  -[SFPrivacyReportViewController initWithDomain:]
  -[SFPrivacyReportViewController tableView:didSelectRowAtIndexPath:]
  -[SFPrivacyReportViewController domain]
  -[SFPrivacyReportViewController .cxx_destruct]
  -[SFPrivacyReportViewController tableView:shouldDrawTopSeparatorForSection:]
  -[SFPrivacyReportViewController tableView:editingStyleForRowAtIndexPath:]
  -[SFPrivacyReportViewController _doneBarButtonItemAction:]
  -[SFPrivacyReportViewController tableView:estimatedHeightForRowAtIndexPath:]
  -[SFPrivacyReportViewController initWithNibName:bundle:]
  -[SFPrivacyReportViewController traitCollectionDidChange:]
  -[SFPrivacyReportViewController _updateUsesInsetStyle]
  -[SFPrivacyReportViewController _createTableViewIfNeededLoadingReport:]
  -[SFPrivacyReportViewController _reloadDataLoadingReport:]
  -[SFPrivacyReportViewController _cellForRowWithIndexPath:itemIdentifier:]
  -[SFPrivacyReportViewController setNeedsUpdateRowHeight]
  -[SFPrivacyReportViewController _sectionTypeFromSectionIndex:]
  -[SFPrivacyReportViewController dataSource:headerTextForSection:]
  -[SFPrivacyReportViewController tableView:shouldHighlightRowAtIndexPath:]
  -[SFPrivacyReportViewController cellDidToggleExpandDetailedExplanation:]
  -[SFPrivacyReportViewController gridViewDidUpdateContentSize:]
  -[SFPrivacyReportViewController cellDidToggleDetailType:]
  -[SFPrivacyReportViewController tableView:shouldDrawBottomSeparatorForSection:]
  -[SFPrivacyReportViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SFPrivacyReportViewController _updateLayoutMargins]


SFPrivacyReportItem : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long type
 @property  id userInfo

  // instance methods
  -[SFPrivacyReportItem copyWithZone:]
  -[SFPrivacyReportItem initWithType:]
  -[SFPrivacyReportItem .cxx_destruct]
  -[SFPrivacyReportItem type]
  -[SFPrivacyReportItem userInfo]
  -[SFPrivacyReportItem initWithType:userInfo:]
  -[SFPrivacyReportItem isEqual:]


_SFFluidProgressView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI <WBSFluidProgressControllerDelegate>
 @property  BOOL progressAnimationSuppressed
 @property  <_SFFluidProgressViewDelegate> *delegate
 @property  BOOL showingProgress
 @property  UIColor *progressBarFillColor
 @property  double cornerRadius
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFFluidProgressView defaultHeight]

  // instance methods
  -[_SFFluidProgressView progressBarFillColor]
  -[_SFFluidProgressView _animateUsingDefaultTiming:stepAnimationTime:options:animations:completion:]
  -[_SFFluidProgressView initWithFrame:]
  -[_SFFluidProgressView setCornerRadius:]
  -[_SFFluidProgressView .cxx_destruct]
  -[_SFFluidProgressView fluidProgressController:setProgressToCurrentPosition:]
  -[_SFFluidProgressView _finishProgressBarWithDuration:]
  -[_SFFluidProgressView fluidProgressController:startFluidProgressBar:animateFillFade:]
  -[_SFFluidProgressView setProgressBarFillColor:]
  -[_SFFluidProgressView _progressBarBoundsForValue:]
  -[_SFFluidProgressView setProgressAnimationSuppressed:]
  -[_SFFluidProgressView fluidProgressControllerFinishProgressBar:animateFillFade:]
  -[_SFFluidProgressView setDelegate:]
  -[_SFFluidProgressView isShowingProgress]
  -[_SFFluidProgressView cornerRadius]
  -[_SFFluidProgressView delegate]
  -[_SFFluidProgressView fluidProgressController:updateFluidProgressBar:]
  -[_SFFluidProgressView setProgressAnimationSuppressed:duringFluidProgressState:animated:]
  -[_SFFluidProgressView layoutSubviews]
  -[_SFFluidProgressView progressAnimationSuppressed]


SFSingleCreditCardData : WBSSingleCreditCardData /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  NSString *headerText
 @property  NSString *displayText

  // instance methods
  -[SFSingleCreditCardData .cxx_destruct]
  -[SFSingleCreditCardData displayText]
  -[SFSingleCreditCardData headerText]
  -[SFSingleCreditCardData initWithHeaderText:displayText:type:value:]


_SFBookmarksLockCoordinator : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL hasBookmarksLock

  // class methods
  +[_SFBookmarksLockCoordinator sharedCoordinator]

  // instance methods
  -[_SFBookmarksLockCoordinator dealloc]
  -[_SFBookmarksLockCoordinator .cxx_destruct]
  -[_SFBookmarksLockCoordinator _clearBookmarkLockTimer]
  -[_SFBookmarksLockCoordinator _unlockBookmarksNow]
  -[_SFBookmarksLockCoordinator hasBookmarksLock]
  -[_SFBookmarksLockCoordinator lockBookmarks]
  -[_SFBookmarksLockCoordinator unlockBookmarksSoon]
  -[_SFBookmarksLockCoordinator unlockBookmarksIfNeeded]


SFFormsMetadataProvider : NSObject /usr/lib/libc++.1.dylib <WBSFormsMetadataProvider>
 @property  unsigned long formCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFFormsMetadataProvider formCount]
  -[SFFormsMetadataProvider .cxx_destruct]
  -[SFFormsMetadataProvider initWithFrameHandleToFormsDictionary:]
  -[SFFormsMetadataProvider enumerateFormsUsingBlock:]


_SFDigitalHealthViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  <_SFDigitalHealthViewControllerDelegate> *digitalHealthViewControllerDelegate
 @property  double additionalVerticalSafeAreaMargin

  // instance methods
  -[_SFDigitalHealthViewController .cxx_destruct]
  -[_SFDigitalHealthViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[_SFDigitalHealthViewController _blockingViewDidHide:]
  -[_SFDigitalHealthViewController _updateCurrentLockViewControllerInsetsHorizontalForSizeClass:]
  -[_SFDigitalHealthViewController showBlockingViewControllerForURL:withPolicy:animated:]
  -[_SFDigitalHealthViewController hideBlockingViewControllerWithCompletionHandler:]
  -[_SFDigitalHealthViewController setAdditionalVerticalSafeAreaMargin:]
  -[_SFDigitalHealthViewController digitalHealthViewControllerDelegate]
  -[_SFDigitalHealthViewController setDigitalHealthViewControllerDelegate:]
  -[_SFDigitalHealthViewController additionalVerticalSafeAreaMargin]


_SFEditablePasswordTableViewController : _SFPasswordTableViewController <SFAddPasswordViewControllerDelegate, SFPasswordDetailViewControllerDelegate, SFCredentialProviderExtensionManagerObserver, _ASAccountAuthenticationModificationExtensionManagerObserver>
 @property  <_SFEditablePasswordTableViewControllerDelegate> *delegate
 @property  WBSSavedPassword *passwordToRemoveAfterCompletedUpgradeInDetailView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFEditablePasswordTableViewController navigationItem]
  -[_SFEditablePasswordTableViewController tableView:willSelectRowAtIndexPath:]
  -[_SFEditablePasswordTableViewController viewDidLoad]
  -[_SFEditablePasswordTableViewController tableView:heightForHeaderInSection:]
  -[_SFEditablePasswordTableViewController tableView:willDisplayHeaderView:forSection:]
  -[_SFEditablePasswordTableViewController tableView:didDeselectRowAtIndexPath:]
  -[_SFEditablePasswordTableViewController tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:]
  -[_SFEditablePasswordTableViewController tableView:heightForFooterInSection:]
  -[_SFEditablePasswordTableViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[_SFEditablePasswordTableViewController passwordControllerForQuery:queryBundleID:authenticationRequirementsMet:]
  -[_SFEditablePasswordTableViewController _sharablePasswordFromResourceDictionary:]
  -[_SFEditablePasswordTableViewController _savePasswordIfPossibleAndGetController:]
  -[_SFEditablePasswordTableViewController _autoFillFeatureManager]
  -[_SFEditablePasswordTableViewController tableView:numberOfRowsInSection:]
  -[_SFEditablePasswordTableViewController _passwordCellDataForUser:highLevelDomain:]
  -[_SFEditablePasswordTableViewController _deletePasswordsAtIndexPaths:]
  -[_SFEditablePasswordTableViewController _updateDeleteButton]
  -[_SFEditablePasswordTableViewController _passwordAutoFillCellStyle]
  -[_SFEditablePasswordTableViewController _rightToolbarItem]
  -[_SFEditablePasswordTableViewController _autoFillWhiteListExists]
  -[_SFEditablePasswordTableViewController _shouldShowSectionHeaders]
  -[_SFEditablePasswordTableViewController _didSelectAutoFillCellAtIndexPath:inTableView:]
  -[_SFEditablePasswordTableViewController _passwordCellDataForIndexPath:]
  -[_SFEditablePasswordTableViewController tableView:didSelectRowAtIndexPath:]
  -[_SFEditablePasswordTableViewController tableView:sectionForSectionIndexTitle:atIndex:]
  -[_SFEditablePasswordTableViewController dealloc]
  -[_SFEditablePasswordTableViewController tableView:viewForFooterInSection:]
  -[_SFEditablePasswordTableViewController sectionIndexTitlesForTableView:]
  -[_SFEditablePasswordTableViewController .cxx_destruct]
  -[_SFEditablePasswordTableViewController _autoFillCellForTableView:]
  -[_SFEditablePasswordTableViewController _warningStyleForSecurityRecommendationsDrillInCell]
  -[_SFEditablePasswordTableViewController _sectionWithIndexIsConfigurationSection:]
  -[_SFEditablePasswordTableViewController _updateMatchingPasswords]
  -[_SFEditablePasswordTableViewController _updateContentUnavailableView]
  -[_SFEditablePasswordTableViewController _shouldShowAutoFillItem]
  -[_SFEditablePasswordTableViewController handleContextMenuDeleteForIndexPath:]
  -[_SFEditablePasswordTableViewController searchPatternDidUpdate]
  -[_SFEditablePasswordTableViewController tableView:titleForHeaderInSection:]
  -[_SFEditablePasswordTableViewController credentialProviderExtensionManagerExtensionListDidChange:]
  -[_SFEditablePasswordTableViewController tableView:shouldDrawTopSeparatorForSection:]
  -[_SFEditablePasswordTableViewController _sectionForSectionIndex:]
  -[_SFEditablePasswordTableViewController tableView:cellForRowAtIndexPath:]
  -[_SFEditablePasswordTableViewController tableView:willDisplayFooterView:forSection:]
  -[_SFEditablePasswordTableViewController _switchAutoFillCellForTableView:enabled:]
  -[_SFEditablePasswordTableViewController _drillInAutoFillCellForTableView:]
  -[_SFEditablePasswordTableViewController _autoFillSwitchValueChanged:]
  -[_SFEditablePasswordTableViewController _passwordAutoFillIsEnabled]
  -[_SFEditablePasswordTableViewController setPasswordAutoFillIsEnabled:]
  -[_SFEditablePasswordTableViewController _indexPathForSavedPassword:]
  -[_SFEditablePasswordTableViewController numberOfSectionsInTableView:]
  -[_SFEditablePasswordTableViewController tableView:editingStyleForRowAtIndexPath:]
  -[_SFEditablePasswordTableViewController tableView:willBeginEditingRowAtIndexPath:]
  -[_SFEditablePasswordTableViewController tableView:didEndEditingRowAtIndexPath:]
  -[_SFEditablePasswordTableViewController traitCollectionDidChange:]
  -[_SFEditablePasswordTableViewController _securityRecommendationsSectionIndex]
  -[_SFEditablePasswordTableViewController addPasswordViewControllerDidFinish:withSavedPassword:]
  -[_SFEditablePasswordTableViewController passwordWarningManagerForPasswordDetailViewController:]
  -[_SFEditablePasswordTableViewController passwordGeneratorForPasswordDetailViewController:]
  -[_SFEditablePasswordTableViewController passwordToRemoveAfterCompletedUpgradeInDetailView]
  -[_SFEditablePasswordTableViewController setPasswordToRemoveAfterCompletedUpgradeInDetailView:]
  -[_SFEditablePasswordTableViewController updateUserAuthenticationState:]
  -[_SFEditablePasswordTableViewController initWithSiteMetadataManager:autoFillQuirksManager:persona:]
  -[_SFEditablePasswordTableViewController additionalViewControllersToPushHandlingURLResourceDictionary:didAuthenticate:]
  -[_SFEditablePasswordTableViewController showConflictAlertForSharablePasswordIfNecessary]
  -[_SFEditablePasswordTableViewController _sectionOffset]
  -[_SFEditablePasswordTableViewController viewWillAppear:]
  -[_SFEditablePasswordTableViewController tableView:shouldDrawBottomSeparatorForSection:]
  -[_SFEditablePasswordTableViewController setDelegate:]
  -[_SFEditablePasswordTableViewController viewDidDisappear:]
  -[_SFEditablePasswordTableViewController tableView:shouldHaveFullLengthTopSeparatorForSection:]
  -[_SFEditablePasswordTableViewController tableView:shouldHaveFullLengthBottomSeparatorForSection:]
  -[_SFEditablePasswordTableViewController viewWillDisappear:]
  -[_SFEditablePasswordTableViewController _beginEditing]
  -[_SFEditablePasswordTableViewController delegate]
  -[_SFEditablePasswordTableViewController setEditing:animated:]
  -[_SFEditablePasswordTableViewController _shouldUseInsetGroupedStyle]
  -[_SFEditablePasswordTableViewController _reloadPasswordsAndTableViewData]
  -[_SFEditablePasswordTableViewController _passwordStoreDidChange]
  -[_SFEditablePasswordTableViewController initWithSiteMetadataManager:autoFillQuirksManager:]
  -[_SFEditablePasswordTableViewController _updateCredentialProviderExtensionStatus]
  -[_SFEditablePasswordTableViewController _shouldShowSecurityRecommendationsItem]
  -[_SFEditablePasswordTableViewController _updateSecurityRecommendationsSubtitleTextWithWarnings:]
  -[_SFEditablePasswordTableViewController _reloadSecurityRecommendationsSection]
  -[_SFEditablePasswordTableViewController _findAndRemoveEntryForCompletedDetailViewUpgrade]
  -[_SFEditablePasswordTableViewController _addNavigationBarItemTapped:]
  -[_SFEditablePasswordTableViewController _editNavigationBarItemTapped:]
  -[_SFEditablePasswordTableViewController _cancelNavigationBarItemTapped:]
  -[_SFEditablePasswordTableViewController _deletePasswordActionTitle]
  -[_SFEditablePasswordTableViewController _deleteButtonTapped:]
  -[_SFEditablePasswordTableViewController _cancelEditing]
  -[_SFEditablePasswordTableViewController _updateToolbarItemsAnimated:]
  -[_SFEditablePasswordTableViewController _canAddPasswords]
  -[_SFEditablePasswordTableViewController _reloadPasswords]
  -[_SFEditablePasswordTableViewController _updateHeaderAndFooterViewsFloat]
  -[_SFEditablePasswordTableViewController setToolbarItems:animated:]


_SFWebProcessPlugIn : WBSWebProcessPlugIn /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // instance methods
  -[_SFWebProcessPlugIn didCreatePageController:forBrowserContextController:]
  -[_SFWebProcessPlugIn willDestroyPageController:forBrowserContextController:]
  -[_SFWebProcessPlugIn pageControllerWithBrowserContextController:]


_SFPageFormatMenuPrivacyReportController : NSObject /usr/lib/libc++.1.dylib <MCProfileConnectionObserver, _SFPageFormatMenuItemController>
 @property  <_SFBrowserDocument> *document
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _SFSettingsAlertItem *alertItem
 @property  <_SFPageFormatMenuItemControllerDelegate> *delegate

  // instance methods
  -[_SFPageFormatMenuPrivacyReportController profileConnectionDidReceiveRestrictionChangedNotification:userInfo:]
  -[_SFPageFormatMenuPrivacyReportController profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
  -[_SFPageFormatMenuPrivacyReportController _initializeManagedProfileConnection]
  -[_SFPageFormatMenuPrivacyReportController _dismissPromptIfTrackerProtectionEnabled]
  -[_SFPageFormatMenuPrivacyReportController dealloc]
  -[_SFPageFormatMenuPrivacyReportController .cxx_destruct]
  -[_SFPageFormatMenuPrivacyReportController alertItem]
  -[_SFPageFormatMenuPrivacyReportController initWithDocument:]
  -[_SFPageFormatMenuPrivacyReportController setDelegate:]
  -[_SFPageFormatMenuPrivacyReportController document]
  -[_SFPageFormatMenuPrivacyReportController _presentPrivacyReport]
  -[_SFPageFormatMenuPrivacyReportController _presentPromptToEnableTrackerProtection]
  -[_SFPageFormatMenuPrivacyReportController _enableTrackerProtection]
  -[_SFPageFormatMenuPrivacyReportController delegate]


SFReaderViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <WKUIDelegate>
 @property  WKWebView *readerWebView
 @property  _SFBrowserContentViewController *containerViewController
 @property  <SFReaderViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFReaderViewController initWithOriginalWebView:]
  -[SFReaderViewController _webView:contextMenuDidEndForElement:]
  -[SFReaderViewController .cxx_destruct]
  -[SFReaderViewController _webView:contextMenuForElement:willCommitWithAnimator:]
  -[SFReaderViewController readerWebView]
  -[SFReaderViewController containerViewController]
  -[SFReaderViewController setContainerViewController:]
  -[SFReaderViewController _webView:contextMenuConfigurationForElement:completionHandler:]
  -[SFReaderViewController _webView:contextMenuWillPresentForElement:]
  -[SFReaderViewController setDelegate:]
  -[SFReaderViewController delegate]
  -[SFReaderViewController loadView]


_SFPageLoadErrorController : NSObject /usr/lib/libc++.1.dylib <WBSCertificateWarningPageHandler>
 @property  <_SFPageLoadErrorControllerDelegate> *delegate
 @property  BOOL reloadingFailedRequest
 @property  NSURLRequest *failedRequest
 @property  unsigned long crashesSinceLastSuccessfulLoad
 @property  <_SFDialogPresenting> *dialogPresenter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFPageLoadErrorController _setFailedRequest:]
  -[_SFPageLoadErrorController goBackButtonClicked]
  -[_SFPageLoadErrorController showCertificateInformation]
  -[_SFPageLoadErrorController _genericMessageForError:]
  -[_SFPageLoadErrorController setDialogPresenter:]
  -[_SFPageLoadErrorController scheduleResetCrashCount]
  -[_SFPageLoadErrorController _resetCrashCountSoon]
  -[_SFPageLoadErrorController visitInsecureWebsite]
  -[_SFPageLoadErrorController addDisallowedUseOfJavaScriptAlert]
  -[_SFPageLoadErrorController dialogPresenter]
  -[_SFPageLoadErrorController _showRepeatedWebProcessCrashError:URLString:]
  -[_SFPageLoadErrorController dealloc]
  -[_SFPageLoadErrorController _handleFrameLoadError:forURL:recoveryAttempter:]
  -[_SFPageLoadErrorController addFormAlertWithTitle:decisionHandler:]
  -[_SFPageLoadErrorController visitInsecureWebsiteWithTemporaryBypass]
  -[_SFPageLoadErrorController .cxx_destruct]
  -[_SFPageLoadErrorController updateCrashesAndShowCrashError:URLString:]
  -[_SFPageLoadErrorController addInvalidURLAlert]
  -[_SFPageLoadErrorController _continueAfterCertificateAlertWithURL:trust:recoveryAttempter:]
  -[_SFPageLoadErrorController addAlertWithTitle:bodyText:]
  -[_SFPageLoadErrorController addInvalidProfileAlert]
  -[_SFPageLoadErrorController _clearCertificateWarningPageHandlerInterface]
  -[_SFPageLoadErrorController _reachabilityChanged:]
  -[_SFPageLoadErrorController addDialog:]
  -[_SFPageLoadErrorController failedRequest]
  -[_SFPageLoadErrorController clearFailedRequest]
  -[_SFPageLoadErrorController handleLegacyTLSWithFailingURL:clickThroughURL:authenticationChallenge:]
  -[_SFPageLoadErrorController handleFrameLoadError:]
  -[_SFPageLoadErrorController performAction:forAlert:]
  -[_SFPageLoadErrorController clearCrashCountResetTimer]
  -[_SFPageLoadErrorController _continueWithoutCredentialsUsingAlertContext:]
  -[_SFPageLoadErrorController crashesSinceLastSuccessfulLoad]
  -[_SFPageLoadErrorController _dismissCertificateViewButtonTapped]
  -[_SFPageLoadErrorController handleClientCertificateAuthenticationChallenge:completionHandler:]
  -[_SFPageLoadErrorController _specializedMessageForError:URL:]
  -[_SFPageLoadErrorController openClockSettings]
  -[_SFPageLoadErrorController _resetCrashCount:]
  -[_SFPageLoadErrorController _titleForError:]
  -[_SFPageLoadErrorController addAlert:]
  -[_SFPageLoadErrorController setDelegate:]
  -[_SFPageLoadErrorController reloadingFailedRequest]
  -[_SFPageLoadErrorController _loadCertificateWarningPageForContext:]
  -[_SFPageLoadErrorController showErrorPageWithTitle:bodyText:forError:]
  -[_SFPageLoadErrorController initWithWebView:]
  -[_SFPageLoadErrorController reloadAfterError]
  -[_SFPageLoadErrorController _certificateWarningPagePresenterProxy]
  -[_SFPageLoadErrorController showErrorPageWithTitle:bodyText:learnMoreLink:forError:]
  -[_SFPageLoadErrorController invalidate]
  -[_SFPageLoadErrorController addDisallowedFileURLAlert]
  -[_SFPageLoadErrorController _setUpCertificateWarningPageHandlerInterface]
  -[_SFPageLoadErrorController delegate]
  -[_SFPageLoadErrorController addDownloadFailedAlertWithDescription:]
  -[_SFPageLoadErrorController _handleCertificateError:forURL:isMainFrame:recoveryAttempter:completionHandler:]
  -[_SFPageLoadErrorController handleSubframeCertificateError:]


_SFWebsiteButton : UIButton /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  @? activationHandler

  // instance methods
  -[_SFWebsiteButton setActivationHandler:]
  -[_SFWebsiteButton init]
  -[_SFWebsiteButton activationHandler]
  -[_SFWebsiteButton .cxx_destruct]
  -[_SFWebsiteButton _activate:]


SFPasswordDetailViewController : UITableViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <_ASAccountAuthenticationModificationExtensionManagerObserver, ASAccountAuthenticationModificationControllerDelegate, ASAccountAuthenticationModificationControllerPresentationContextProviding, UITextFieldDelegate, _SFTableViewDiffableDataSourceDelegate, PSStateRestoration>
 @property  <SFPasswordDetailViewControllerDelegate> *delegate
 @property  BOOL showsChangePasswordControllerOnAppearance
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFPasswordDetailViewController viewDidLoad]
  -[SFPasswordDetailViewController canPerformAction:withSender:]
  -[SFPasswordDetailViewController setShowsChangePasswordControllerOnAppearance:]
  -[SFPasswordDetailViewController tableView:shouldIndentWhileEditingRowAtIndexPath:]
  -[SFPasswordDetailViewController canBeShownFromSuspendedState]
  -[SFPasswordDetailViewController tableView:didSelectRowAtIndexPath:]
  -[SFPasswordDetailViewController tableView:performAction:forRowAtIndexPath:withSender:]
  -[SFPasswordDetailViewController dealloc]
  -[SFPasswordDetailViewController .cxx_destruct]
  -[SFPasswordDetailViewController canBecomeFirstResponder]
  -[SFPasswordDetailViewController _editBarButtonItemTapped:]
  -[SFPasswordDetailViewController _shareBarButtonItemTapped:]
  -[SFPasswordDetailViewController _cancelBarButtonItemTapped:]
  -[SFPasswordDetailViewController _doneBarButtonItemTapped:]
  -[SFPasswordDetailViewController _allowAuditing]
  -[SFPasswordDetailViewController _passwordStoreDidUpdate]
  -[SFPasswordDetailViewController _appDidBecomeActive:]
  -[SFPasswordDetailViewController _willHideUIMenuController:]
  -[SFPasswordDetailViewController _cellForIdentifier:indexPath:]
  -[SFPasswordDetailViewController _updateWarningForSavedPassword]
  -[SFPasswordDetailViewController _reloadDiffableDataSourceOnInternalQueueAnimated:]
  -[SFPasswordDetailViewController _updateAccountModificationOptions]
  -[SFPasswordDetailViewController _reloadDiffableDataSourceAnimated:]
  -[SFPasswordDetailViewController _showChangePasswordSafariViewController]
  -[SFPasswordDetailViewController _setEditing:animated:]
  -[SFPasswordDetailViewController _savePasswordAndFinishEditing]
  -[SFPasswordDetailViewController _sharePasswordWithPopoverPresentationControllerConfiguration:]
  -[SFPasswordDetailViewController _itemTypeForIdentifier:]
  -[SFPasswordDetailViewController _configureUserCell:]
  -[SFPasswordDetailViewController _editableCellWithCell:]
  -[SFPasswordDetailViewController _configurePasswordCell:]
  -[SFPasswordDetailViewController _configureSecurityRecommendationInfoCell]
  -[SFPasswordDetailViewController _savedPasswordWebsiteCellForTableView:atIndexPath:]
  -[SFPasswordDetailViewController _deletePasswordCellForTableView:]
  -[SFPasswordDetailViewController _completedUpgrade]
  -[SFPasswordDetailViewController _updateMenuItems]
  -[SFPasswordDetailViewController _allowEditing]
  -[SFPasswordDetailViewController tableView:editingStyleForRowAtIndexPath:]
  -[SFPasswordDetailViewController _textFieldChanged:]
  -[SFPasswordDetailViewController tableView:shouldShowMenuForRowAtIndexPath:]
  -[SFPasswordDetailViewController tableView:estimatedHeightForRowAtIndexPath:]
  -[SFPasswordDetailViewController _securityRecommendationSubtitleString]
  -[SFPasswordDetailViewController _configureCell:withText:detailText:detailPlaceholderText:secureEntry:]
  -[SFPasswordDetailViewController _setHighLyLegibleFontForDetailTextInCell:]
  -[SFPasswordDetailViewController _sectionTypeForSection:]
  -[SFPasswordDetailViewController _initiateUpgradeToSignInWithApple]
  -[SFPasswordDetailViewController _initiateChangeToStrongPassword]
  -[SFPasswordDetailViewController _showConfirmationToDeletePassword]
  -[SFPasswordDetailViewController safari_copyUserName:]
  -[SFPasswordDetailViewController safari_copyPassword:]
  -[SFPasswordDetailViewController safari_sharePassword:]
  -[SFPasswordDetailViewController viewDidAppear:]
  -[SFPasswordDetailViewController _lastModifiedDateString]
  -[SFPasswordDetailViewController _completedSignInWithAppleUpgrade]
  -[SFPasswordDetailViewController _completedStrongPasswordUpgrade]
  -[SFPasswordDetailViewController accountAuthenticationModificationController:didSuccessfullyCompleteRequest:withUserInfo:]
  -[SFPasswordDetailViewController accountAuthenticationModificationController:didFailRequest:withError:]
  -[SFPasswordDetailViewController presentationAnchorForAccountAuthenticationModificationController:]
  -[SFPasswordDetailViewController _warningTitleForPassword]
  -[SFPasswordDetailViewController showsChangePasswordControllerOnAppearance]
  -[SFPasswordDetailViewController _passwordEvaluator]
  -[SFPasswordDetailViewController _passwordAuditor]
  -[SFPasswordDetailViewController dataSource:headerTextForSection:]
  -[SFPasswordDetailViewController accountModificationExtensionManagerExtensionListDidChange:]
  -[SFPasswordDetailViewController dataSource:commitEditingStyle:forItemIdentifier:]
  -[SFPasswordDetailViewController dataSource:footerTextForSection:]
  -[SFPasswordDetailViewController textFieldShouldReturn:]
  -[SFPasswordDetailViewController _passwordWarningManager]
  -[SFPasswordDetailViewController _passwordGenerator]
  -[SFPasswordDetailViewController viewWillAppear:]
  -[SFPasswordDetailViewController setDelegate:]
  -[SFPasswordDetailViewController viewDidDisappear:]
  -[SFPasswordDetailViewController viewWillDisappear:]
  -[SFPasswordDetailViewController delegate]
  -[SFPasswordDetailViewController _appWillResignActive:]
  -[SFPasswordDetailViewController initWithSavedPassword:options:]
  -[SFPasswordDetailViewController textFieldDidEndEditing:]


_SFMultipleLineAlertActionView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  UILabel *titleLabel
 @property  UILabel *detailLabel

  // instance methods
  -[_SFMultipleLineAlertActionView titleLabel]
  -[_SFMultipleLineAlertActionView initWithFrame:]
  -[_SFMultipleLineAlertActionView .cxx_destruct]
  -[_SFMultipleLineAlertActionView tintColorDidChange]
  -[_SFMultipleLineAlertActionView detailLabel]


_SFMultipleLineAlertActionViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[_SFMultipleLineAlertActionViewController .cxx_destruct]
  -[_SFMultipleLineAlertActionViewController preferredContentSize]
  -[_SFMultipleLineAlertActionViewController initWithTitle:detail:style:]
  -[_SFMultipleLineAlertActionViewController loadView]


SFMultipleLineAlertAction : UIAlertAction /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // class methods
  +[SFMultipleLineAlertAction actionWithTitle:detail:style:handler:]
  +[SFMultipleLineAlertAction actionWithTitle:detail:handler:]


_SFKeyboardLayoutAlignmentView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  BOOL automaticKeyboardFrameTrackingDisabled

  // instance methods
  -[_SFKeyboardLayoutAlignmentView didMoveToWindow]
  -[_SFKeyboardLayoutAlignmentView _stopObservingKeyboardNotifications]
  -[_SFKeyboardLayoutAlignmentView initWithFrame:]
  -[_SFKeyboardLayoutAlignmentView setAutomaticKeyboardFrameTrackingDisabled:]
  -[_SFKeyboardLayoutAlignmentView dealloc]
  -[_SFKeyboardLayoutAlignmentView .cxx_destruct]
  -[_SFKeyboardLayoutAlignmentView _updateConstraintsForKeyboardNotification:]
  -[_SFKeyboardLayoutAlignmentView _removeConstraints]
  -[_SFKeyboardLayoutAlignmentView willMoveToWindow:]
  -[_SFKeyboardLayoutAlignmentView _keyboardChanged:]
  -[_SFKeyboardLayoutAlignmentView _frameInBoundsForKeyboardFrame:]
  -[_SFKeyboardLayoutAlignmentView _matchInitialKeyboardFrame]
  -[_SFKeyboardLayoutAlignmentView automaticKeyboardFrameTrackingDisabled]
  -[_SFKeyboardLayoutAlignmentView _updateConstraintsToMatchKeyboardFrame:]
  -[_SFKeyboardLayoutAlignmentView _addConstraints]
  -[_SFKeyboardLayoutAlignmentView _startObservingKeyboardNotificationsForScreen:]


SFAuthenticationSession : NSObject /usr/lib/libc++.1.dylib <SFAuthenticationViewControllerPresentationDelegate, SFSafariViewControllerDelegateInternal>
 @property  <_SFAuthenticationSessionDelegate> *_delegate
 @property  BOOL prefersEphemeralWebBrowserSession
 @property  BOOL sessionStarted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFAuthenticationSession safariViewControllerDidFinish:]
  -[SFAuthenticationSession initWithURL:callbackURLScheme:completionHandler:]
  -[SFAuthenticationSession startASWebAuthenticationSessionInWindow:dryRun:]
  -[SFAuthenticationSession prefersEphemeralWebBrowserSession]
  -[SFAuthenticationSession setPrefersEphemeralWebBrowserSession:]
  -[SFAuthenticationSession setSessionStarted:]
  -[SFAuthenticationSession dealloc]
  -[SFAuthenticationSession .cxx_destruct]
  -[SFAuthenticationSession cancel]
  -[SFAuthenticationSession _delegate]
  -[SFAuthenticationSession set_delegate:]
  -[SFAuthenticationSession initWithURL:callbackURLScheme:usingEphemeralSession:completionHandler:]
  -[SFAuthenticationSession _startRequestingFromWebAuthenticationSession:inWindow:dryRun:]
  -[SFAuthenticationSession isSessionStarted]
  -[SFAuthenticationSession presentingViewControllerForAuthenticationViewController:]
  -[SFAuthenticationSession safariViewController:didDecideCookieSharingForURL:shouldCancel:]
  -[SFAuthenticationSession safariViewController:hostApplicationOpenURL:]
  -[SFAuthenticationSession start]


_SFCreditCardCaptureViewController : UINavigationController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <CRCameraReaderDelegate>
 @property  <_SFCreditCardCaptureViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFCreditCardCaptureViewController canCapture]

  // instance methods
  -[_SFCreditCardCaptureViewController init]
  -[_SFCreditCardCaptureViewController cameraReaderDidCancel:]
  -[_SFCreditCardCaptureViewController cameraReaderDidEnd:]
  -[_SFCreditCardCaptureViewController cameraReader:didFailWithError:]
  -[_SFCreditCardCaptureViewController cameraReader:didRecognizeObjects:]
  -[_SFCreditCardCaptureViewController .cxx_destruct]
  -[_SFCreditCardCaptureViewController viewDidAppear:]
  -[_SFCreditCardCaptureViewController _cancel:]


_SFTabStateData : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *UUIDString
 @property  NSString *title
 @property  NSString *url
 @property  NSString *userVisibleURL
 @property  long long orderIndex
 @property  double lastViewedTime
 @property  long long readerViewTopScrollOffset
 @property  BOOL showingReader
 @property  BOOL displayingStandaloneImage
 @property  int readingListBookmarkID
 @property  BOOL wasOpenedFromLink
 @property  BOOL privateBrowsing
 @property  NSData *sessionStateData
 @property  long long owningBrowserWindowDatabaseID
 @property  NSString *owningBrowserWindowUUIDString
 @property  BOOL skipUpdate
 @property  unsigned long uncompressedSessionStateDataSize
 @property  BOOL isSessionStateDataCompressed
 @property  NSData *compressedSessionStateData
 @property  BOOL skipSavingSessionState

  // class methods
  +[_SFTabStateData uncompressedDataWithRawData:uncompressedSize:]

  // instance methods
  -[_SFTabStateData UUIDString]
  -[_SFTabStateData skipUpdate]
  -[_SFTabStateData url]
  -[_SFTabStateData userVisibleURL]
  -[_SFTabStateData privateBrowsing]
  -[_SFTabStateData toDictionary]
  -[_SFTabStateData isSessionStateDataCompressed]
  -[_SFTabStateData .cxx_destruct]
  -[_SFTabStateData compressedSessionStateData]
  -[_SFTabStateData _uncompressSessionStateDataIfNeeded]
  -[_SFTabStateData setUserVisibleURL:]
  -[_SFTabStateData lastViewedTime]
  -[_SFTabStateData setLastViewedTime:]
  -[_SFTabStateData readerViewTopScrollOffset]
  -[_SFTabStateData setReaderViewTopScrollOffset:]
  -[_SFTabStateData setShowingReader:]
  -[_SFTabStateData displayingStandaloneImage]
  -[_SFTabStateData setDisplayingStandaloneImage:]
  -[_SFTabStateData wasOpenedFromLink]
  -[_SFTabStateData showingReader]
  -[_SFTabStateData setTitle:]
  -[_SFTabStateData readingListBookmarkID]
  -[_SFTabStateData setReadingListBookmarkID:]
  -[_SFTabStateData setWasOpenedFromLink:]
  -[_SFTabStateData setPrivateBrowsing:]
  -[_SFTabStateData sessionStateData]
  -[_SFTabStateData setSessionStateData:]
  -[_SFTabStateData owningBrowserWindowDatabaseID]
  -[_SFTabStateData setOwningBrowserWindowDatabaseID:]
  -[_SFTabStateData owningBrowserWindowUUIDString]
  -[_SFTabStateData setOwningBrowserWindowUUIDString:]
  -[_SFTabStateData setSkipUpdate:]
  -[_SFTabStateData uncompressedSessionStateDataSize]
  -[_SFTabStateData setUncompressedSessionStateDataSize:]
  -[_SFTabStateData skipSavingSessionState]
  -[_SFTabStateData setSkipSavingSessionState:]
  -[_SFTabStateData orderIndex]
  -[_SFTabStateData setUrl:]
  -[_SFTabStateData title]
  -[_SFTabStateData initWithDictionary:]
  -[_SFTabStateData setOrderIndex:]
  -[_SFTabStateData initWithSQLiteRow:]
  -[_SFTabStateData setUUIDString:]


_SFWebArchiveActivityItemProvider : _SFActivityItemProvider
  // instance methods
  -[_SFWebArchiveActivityItemProvider item]
  -[_SFWebArchiveActivityItemProvider activityViewController:dataTypeIdentifierForActivityType:]
  -[_SFWebArchiveActivityItemProvider .cxx_destruct]
  -[_SFWebArchiveActivityItemProvider _webArchiveItemProvider]
  -[_SFWebArchiveActivityItemProvider activityViewControllerLinkMetadata:]
  -[_SFWebArchiveActivityItemProvider initWithWebArchiveProvider:]


_SFExternalPasswordCredentialViewController : _SFPasswordViewController <SFExternalPasswordCredentialRemoteViewControllerDelegate>
 @property  <_SFExternalPasswordCredentialViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFExternalPasswordCredentialViewController viewDidLoad]
  -[_SFExternalPasswordCredentialViewController init]
  -[_SFExternalPasswordCredentialViewController dealloc]
  -[_SFExternalPasswordCredentialViewController .cxx_destruct]
  -[_SFExternalPasswordCredentialViewController _sceneDidEnterBackground:]
  -[_SFExternalPasswordCredentialViewController _setUpServiceProxyIfNeeded]
  -[_SFExternalPasswordCredentialViewController presentExternalPasswordCredentialRemoteViewController:]
  -[_SFExternalPasswordCredentialViewController getCredentialForExternalCredential:completion:]
  -[_SFExternalPasswordCredentialViewController _connectToServiceWithCompletion:]
  -[_SFExternalPasswordCredentialViewController autoFillWithExternalCredential:]
  -[_SFExternalPasswordCredentialViewController _remoteViewController]
  -[_SFExternalPasswordCredentialViewController _canShowWhileLocked]


_SFSingleBookmarkNavigationController : UINavigationController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <_SFBookmarkInfoViewControllerDelegate>
 @property  <_SFSingleBookmarkNavigationControllerDelegate> *bookmarkNavDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFSingleBookmarkNavigationController dealloc]
  -[_SFSingleBookmarkNavigationController .cxx_destruct]
  -[_SFSingleBookmarkNavigationController initWithCollection:]
  -[_SFSingleBookmarkNavigationController _lastSelectedFolder]
  -[_SFSingleBookmarkNavigationController _initWithBookmark:childBookmarks:inCollection:addingBookmark:toFavorites:]
  -[_SFSingleBookmarkNavigationController bookmarkNavDelegate]
  -[_SFSingleBookmarkNavigationController _releaseBookmarkLockIfNeeded]
  -[_SFSingleBookmarkNavigationController bookmarkInfoViewController:didFinishWithResult:]
  -[_SFSingleBookmarkNavigationController bookmarkInfoViewControllerShouldUseTranslucentAppearance:]
  -[_SFSingleBookmarkNavigationController bookmarkInfoViewControllerCanSaveBookmarkChanges:]
  -[_SFSingleBookmarkNavigationController initWithBookmark:inCollection:]
  -[_SFSingleBookmarkNavigationController initWithFolderOfBookmarks:inCollection:]
  -[_SFSingleBookmarkNavigationController initForAddingToFavoritesInCollection:]
  -[_SFSingleBookmarkNavigationController addBookmarkWithTitle:address:parentBookmark:]
  -[_SFSingleBookmarkNavigationController prepareForPresentationForAddingBookmark:]
  -[_SFSingleBookmarkNavigationController setBookmarkNavDelegate:]
  -[_SFSingleBookmarkNavigationController viewDidDisappear:]


SFDownloadStorageUsageMonitorEntry : NSObject /usr/lib/libc++.1.dylib
 @property  NSUUID *identifier
 @property  NSProgress *progress
 @property  id progressSubscriber
 @property  NSString *destinationPath
 @property  NSData *progressData
 @property  long long cachedUsage
 @property  <SFDownloadStorageUsageMonitorEntryDelegate> *delegate

  // instance methods
  -[SFDownloadStorageUsageMonitorEntry destinationPath]
  -[SFDownloadStorageUsageMonitorEntry .cxx_destruct]
  -[SFDownloadStorageUsageMonitorEntry initWithIdentifier:]
  -[SFDownloadStorageUsageMonitorEntry identifier]
  -[SFDownloadStorageUsageMonitorEntry updateWithDictionaryRepresentation:]
  -[SFDownloadStorageUsageMonitorEntry observeValueForKeyPath:ofObject:change:context:]
  -[SFDownloadStorageUsageMonitorEntry _didLoseProgress:]
  -[SFDownloadStorageUsageMonitorEntry _didGainProgress:]
  -[SFDownloadStorageUsageMonitorEntry _updateProgressSubscriptionWithData:]
  -[SFDownloadStorageUsageMonitorEntry progressData]
  -[SFDownloadStorageUsageMonitorEntry setProgressData:]
  -[SFDownloadStorageUsageMonitorEntry cachedUsage]
  -[SFDownloadStorageUsageMonitorEntry setCachedUsage:]
  -[SFDownloadStorageUsageMonitorEntry setProgress:]
  -[SFDownloadStorageUsageMonitorEntry progress]
  -[SFDownloadStorageUsageMonitorEntry setDelegate:]
  -[SFDownloadStorageUsageMonitorEntry delegate]
  -[SFDownloadStorageUsageMonitorEntry setDestinationPath:]
  -[SFDownloadStorageUsageMonitorEntry setProgressSubscriber:]
  -[SFDownloadStorageUsageMonitorEntry progressSubscriber]


_SFDownloadStorageUsageMonitor : NSObject /usr/lib/libc++.1.dylib <SFDownloadFileDelegate, SFDownloadStorageUsageMonitorEntryDelegate>
 @property  long long usage

  // instance methods
  -[_SFDownloadStorageUsageMonitor init]
  -[_SFDownloadStorageUsageMonitor usage]
  -[_SFDownloadStorageUsageMonitor .cxx_destruct]
  -[_SFDownloadStorageUsageMonitor entryDidChangeUsage:]
  -[_SFDownloadStorageUsageMonitor _reloadDownloadHistory]
  -[_SFDownloadStorageUsageMonitor downloadFileContentsDidChange:]
  -[_SFDownloadStorageUsageMonitor downloadFileWillBeDeleted:]
  -[_SFDownloadStorageUsageMonitor downloadFileDidChangeURL:]


SFFormAutoFillNode : NSObject /usr/lib/libc++.1.dylib <WBSFormAutoFillNode>
 @property  WKWebProcessPlugInNodeHandle *nodeHandle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFFormAutoFillNode autoFillNodeWithNodeHandle:]

  // instance methods
  -[SFFormAutoFillNode .cxx_destruct]
  -[SFFormAutoFillNode setHTMLInputElementAutofilled:]
  -[SFFormAutoFillNode initWithNodeHandle:]
  -[SFFormAutoFillNode initWithJSWrapper:inContext:]
  -[SFFormAutoFillNode isHTMLInputElementUserEdited]
  -[SFFormAutoFillNode nodeHandle]
  -[SFFormAutoFillNode isHTMLTextAreaElementUserEdited]
  -[SFFormAutoFillNode elementBounds]
  -[SFFormAutoFillNode htmlInputElementAutoFillButtonType]
  -[SFFormAutoFillNode htmlInputElementLastAutoFillButtonType]
  -[SFFormAutoFillNode setHTMLInputElementAutoFilledWithAutomaticStrongPassword:]


_SFBrowserView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  SFNanoDomainContainerView *nanoDomainContainerView
 @property  UIView *contentContainerView
 @property  _SFToolbar *toolbar
 @property  _SFNavigationBar *navigationBar
 @property  double bottomBarOffset
 @property  double topBarHeight
 @property  WKWebView *currentWebView
 @property  unsigned long navigationBarBehavior
 @property  _SFLinkPreviewHeader *previewHeader
 @property  UIView *statusBarBackgroundView
 @property  UIView *scrollToTopView
 @property  BOOL shouldUseScrollToTopView
 @property  _SFCrashBanner *crashBanner
 @property  double crashBannerOffset
 @property  _SFPinnableBanner *pinnableBanner
 @property  {CGPoint=dd} pinnableBannerOffset
 @property  _SFPinnableBanner *appBannerPendingFirstPaint
 @property  BOOL hasReceivedTouchEvents
 @property  UIView *quickLookDocumentView
 @property  double minimalUITopOffset
 @property  <SFBrowserViewDelegate> *delegate
 @property  double unscaledWebViewWidth
 @property  {UIEdgeInsets=dddd} obscuredInsets
 @property  BOOL isContentReadyForDisplay

  // instance methods
  -[_SFBrowserView toolbar]
  -[_SFBrowserView setStatusBarBackgroundView:]
  -[_SFBrowserView contentContainerView]
  -[_SFBrowserView initWithFrame:]
  -[_SFBrowserView setNavigationBar:]
  -[_SFBrowserView .cxx_destruct]
  -[_SFBrowserView hitTest:withEvent:]
  -[_SFBrowserView setToolbar:]
  -[_SFBrowserView topBarHeight]
  -[_SFBrowserView navigationBar]
  -[_SFBrowserView previewScaleFactor]
  -[_SFBrowserView unscaledWebViewBounds]
  -[_SFBrowserView _scaleContentInset]
  -[_SFBrowserView previewHeader]
  -[_SFBrowserView setPreviewHeader:]
  -[_SFBrowserView setContentReadyForDisplay]
  -[_SFBrowserView updateDismissButtonStyle:]
  -[_SFBrowserView setBottomBarOffset:]
  -[_SFBrowserView setTopBarHeight:]
  -[_SFBrowserView addWebView:]
  -[_SFBrowserView updatePreviewHeaderWithURLString:]
  -[_SFBrowserView setShouldUseScrollToTopView:]
  -[_SFBrowserView setCrashBanner:]
  -[_SFBrowserView setCrashBannerOffset:]
  -[_SFBrowserView setPinnableBanner:]
  -[_SFBrowserView setPinnableBannerOffset:]
  -[_SFBrowserView setQuickLookDocumentView:]
  -[_SFBrowserView setMinimalUITopOffset:]
  -[_SFBrowserView setNanoDomainContainerView:]
  -[_SFBrowserView setUnscaledWebViewWidth:]
  -[_SFBrowserView setObscuredInsets:]
  -[_SFBrowserView isContentReadyForDisplay]
  -[_SFBrowserView currentWebView]
  -[_SFBrowserView bottomBarOffset]
  -[_SFBrowserView navigationBarBehavior]
  -[_SFBrowserView setNavigationBarBehavior:]
  -[_SFBrowserView scrollToTopView]
  -[_SFBrowserView shouldUseScrollToTopView]
  -[_SFBrowserView crashBanner]
  -[_SFBrowserView crashBannerOffset]
  -[_SFBrowserView pinnableBanner]
  -[_SFBrowserView pinnableBannerOffset]
  -[_SFBrowserView appBannerPendingFirstPaint]
  -[_SFBrowserView setAppBannerPendingFirstPaint:]
  -[_SFBrowserView hasReceivedTouchEvents]
  -[_SFBrowserView quickLookDocumentView]
  -[_SFBrowserView minimalUITopOffset]
  -[_SFBrowserView unscaledWebViewWidth]
  -[_SFBrowserView obscuredInsets]
  -[_SFBrowserView nanoDomainContainerView]
  -[_SFBrowserView setDelegate:]
  -[_SFBrowserView statusBarBackgroundView]
  -[_SFBrowserView delegate]
  -[_SFBrowserView layoutSubviews]


_SFAppPasswordSavingViewController : _SFPasswordViewController
  // instance methods
  -[_SFAppPasswordSavingViewController viewDidLoad]
  -[_SFAppPasswordSavingViewController credentialsSubmittedForWebsiteURL:user:password:passwordIsAutoGenerated:completionHandler:]
  -[_SFAppPasswordSavingViewController init]
  -[_SFAppPasswordSavingViewController .cxx_destruct]
  -[_SFAppPasswordSavingViewController viewDidAppear:]
  -[_SFAppPasswordSavingViewController _setUpServiceProxyIfNeeded]
  -[_SFAppPasswordSavingViewController remoteViewControllerWillDismiss:]
  -[_SFAppPasswordSavingViewController remoteViewController:viewServiceDidTerminateWithError:]
  -[_SFAppPasswordSavingViewController _connectToServiceWithCompletion:]
  -[_SFAppPasswordSavingViewController _remoteViewController]


_SFActivityItemProviderCollection : NSObject /usr/lib/libc++.1.dylib
 @property  WKWebView *webView
 @property  _SFActivityItemProvider *standaloneImageProvider
 @property  _SFActivityItemProvider *webArchiveProvider
 @property  BOOL displayingDigitalHealthLockoutView
 @property  BOOL displayingStandaloneImage
 @property  BOOL displayingStandaloneMedia
 @property  _SFActivityItemProvider *linkProvider
 @property  _SFPrintActivityItemProvider *printProvider
 @property  _SFActivityItemProvider *javaScriptExtensionProvider
 @property  _SFActivityItemProvider *downloadProvider

  // instance methods
  -[_SFActivityItemProviderCollection webView]
  -[_SFActivityItemProviderCollection .cxx_destruct]
  -[_SFActivityItemProviderCollection displayingStandaloneImage]
  -[_SFActivityItemProviderCollection setDisplayingStandaloneImage:]
  -[_SFActivityItemProviderCollection linkProvider]
  -[_SFActivityItemProviderCollection javaScriptExtensionProvider]
  -[_SFActivityItemProviderCollection standaloneImageProvider]
  -[_SFActivityItemProviderCollection printProvider]
  -[_SFActivityItemProviderCollection downloadProvider]
  -[_SFActivityItemProviderCollection displayingDigitalHealthLockoutView]
  -[_SFActivityItemProviderCollection webArchiveProvider]
  -[_SFActivityItemProviderCollection setLinkProvider:]
  -[_SFActivityItemProviderCollection initWithWebView:]
  -[_SFActivityItemProviderCollection activityItemProvidersWithCustomizationController:]
  -[_SFActivityItemProviderCollection setDisplayingDigitalHealthLockoutView:]
  -[_SFActivityItemProviderCollection displayingStandaloneMedia]
  -[_SFActivityItemProviderCollection setDisplayingStandaloneMedia:]
  -[_SFActivityItemProviderCollection setPrintProvider:]
  -[_SFActivityItemProviderCollection setJavaScriptExtensionProvider:]
  -[_SFActivityItemProviderCollection setDownloadProvider:]


SFContentBlockerManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSSet *extensions
 @property  WKUserContentController *userContentController

  // class methods
  +[SFContentBlockerManager contentBlockerStore]
  +[SFContentBlockerManager getStateOfContentBlockerWithIdentifier:completionHandler:]
  +[SFContentBlockerManager _createContentExtensionsDirectoryWithURL:]
  +[SFContentBlockerManager sharedManager]
  +[SFContentBlockerManager _contentBlockerLoaderConnection]
  +[SFContentBlockerManager reloadContentBlockerWithIdentifier:completionHandler:]

  // instance methods
  -[SFContentBlockerManager userContentController]
  -[SFContentBlockerManager extensions]
  -[SFContentBlockerManager extensionIsEnabled:]
  -[SFContentBlockerManager init]
  -[SFContentBlockerManager setExtension:isEnabled:]
  -[SFContentBlockerManager reloadUserContentController]
  -[SFContentBlockerManager displayNameForExtension:]
  -[SFContentBlockerManager .cxx_destruct]
  -[SFContentBlockerManager _saveContentBlockerRecompilationInformation]
  -[SFContentBlockerManager _findNewExtensionsAdded:toExistingExtensions:]
  -[SFContentBlockerManager _hasRecompilationBeenAttemptedForExtension:]
  -[SFContentBlockerManager _noteRecompilationWasAttemptedForExtension:]
  -[SFContentBlockerManager _beginContentBlockerDiscovery]
  -[SFContentBlockerManager _recompileEnabledContentBlockersIfNeeded:]
  -[SFContentBlockerManager _loadContentBlockerRecompilationInformationIfNeeded]
  -[SFContentBlockerManager removeObserver:]
  -[SFContentBlockerManager _loadContentBlockerWithIdentifier:completionHandler:]
  -[SFContentBlockerManager addObserver:]


_SFUserActivityController : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFUserActivityController sharedActivityController]
  +[_SFUserActivityController searchableItemAttributesForDictionary:]


_SFLinkBanner : _SFPinnableBanner
 @property  UIImageView *icon
 @property  UILabel *titleLabel
 @property  UILabel *messageLabel
 @property  NSString *messageLabelText
 @property  _SFDimmingButton *openButton
 @property  @? openActionHandler

  // instance methods
  -[_SFLinkBanner _titleLabelFont]
  -[_SFLinkBanner setDirectionalLayoutMargins:]
  -[_SFLinkBanner setOpenActionHandler:]
  -[_SFLinkBanner setTitleLabel:]
  -[_SFLinkBanner titleLabel]
  -[_SFLinkBanner init]
  -[_SFLinkBanner messageLabel]
  -[_SFLinkBanner setLayoutMargins:]
  -[_SFLinkBanner .cxx_destruct]
  -[_SFLinkBanner icon]
  -[_SFLinkBanner setIcon:]
  -[_SFLinkBanner sizeThatFits:]
  -[_SFLinkBanner _open]
  -[_SFLinkBanner setMessageLabel:]
  -[_SFLinkBanner openButton]
  -[_SFLinkBanner layoutSubviews]
  -[_SFLinkBanner setMessageLabelText:]
  -[_SFLinkBanner messageLabelText]
  -[_SFLinkBanner invalidateBannerLayout]
  -[_SFLinkBanner setOpenButton:]
  -[_SFLinkBanner openActionHandler]
  -[_SFLinkBanner contentSizeCategoryDidChange]


_SFWebArchiveProvider : NSObject /usr/lib/libc++.1.dylib <_SFQuickLookDocumentSource>
 @property  WKWebView *webView
 @property  NSString *suggestedFilenameWithExtension
 @property  NSString *suggestedFilenameWithoutExtension
 @property  BOOL canGenerateWebArchive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFWebArchiveProvider webView]
  -[_SFWebArchiveProvider _suggestedFilenameWithoutExtension]
  -[_SFWebArchiveProvider _webViewUTI]
  -[_SFWebArchiveProvider _quickLookDocument]
  -[_SFWebArchiveProvider dataForQuickLookDocument:]
  -[_SFWebArchiveProvider suggestedFileNameForQuickLookDocument:]
  -[_SFWebArchiveProvider suggestedFileExtensionForQuickLookDocument:]
  -[_SFWebArchiveProvider .cxx_destruct]
  -[_SFWebArchiveProvider canGenerateWebArchive]
  -[_SFWebArchiveProvider generateWebArchiveWithCompletionHandler:]
  -[_SFWebArchiveProvider suggestedFilenameWithExtension]
  -[_SFWebArchiveProvider suggestedFilenameWithoutExtension]
  -[_SFWebArchiveProvider initWithWebView:]


_SFKillWebContentProcessUIActivity : _SFActivity
 @property  <_SFKillWebContentProcessUIActivityDelegate> *webProcessDelegate

  // instance methods
  -[_SFKillWebContentProcessUIActivity activityType]
  -[_SFKillWebContentProcessUIActivity activityTitle]
  -[_SFKillWebContentProcessUIActivity canPerformWithActivityItems:]
  -[_SFKillWebContentProcessUIActivity performActivity]
  -[_SFKillWebContentProcessUIActivity _systemImageName]
  -[_SFKillWebContentProcessUIActivity webProcessDelegate]
  -[_SFKillWebContentProcessUIActivity setWebProcessDelegate:]
  -[_SFKillWebContentProcessUIActivity .cxx_destruct]


_SFURLTextPreviewView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  NSURL *URL

  // instance methods
  -[_SFURLTextPreviewView initWithURL:]
  -[_SFURLTextPreviewView .cxx_destruct]
  -[_SFURLTextPreviewView URL]
  -[_SFURLTextPreviewView setURL:]


_SFPasswordTouchIconCache : WBSTouchIconCache /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // instance methods
  -[_SFPasswordTouchIconCache _operationWithRequest:completionHandler:]
  -[_SFPasswordTouchIconCache canHandleRequest:]


SFContactAutoFillDetailViewController : UITableViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[SFContactAutoFillDetailViewController viewDidLoad]
  -[SFContactAutoFillDetailViewController tableView:numberOfRowsInSection:]
  -[SFContactAutoFillDetailViewController tableView:didSelectRowAtIndexPath:]
  -[SFContactAutoFillDetailViewController .cxx_destruct]
  -[SFContactAutoFillDetailViewController initWithPropertyValues:]
  -[SFContactAutoFillDetailViewController tableView:cellForRowAtIndexPath:]


SFPrivacyReportDetailToggleTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  long long detailType
 @property  <SFPrivacyReportDetailToggleTableViewCellDelegate> *delegate
 @property  BOOL useCurrentWebsiteHeader

  // instance methods
  -[SFPrivacyReportDetailToggleTableViewCell initWithStyle:reuseIdentifier:]
  -[SFPrivacyReportDetailToggleTableViewCell _updateTitle]
  -[SFPrivacyReportDetailToggleTableViewCell _addSegmentForDetailType:]
  -[SFPrivacyReportDetailToggleTableViewCell _selectDetailType:]
  -[SFPrivacyReportDetailToggleTableViewCell useCurrentWebsiteHeader]
  -[SFPrivacyReportDetailToggleTableViewCell .cxx_destruct]
  -[SFPrivacyReportDetailToggleTableViewCell detailType]
  -[SFPrivacyReportDetailToggleTableViewCell setDetailType:]
  -[SFPrivacyReportDetailToggleTableViewCell setUseCurrentWebsiteHeader:]
  -[SFPrivacyReportDetailToggleTableViewCell setDelegate:]
  -[SFPrivacyReportDetailToggleTableViewCell delegate]


_SFCompressedBarButton : UIButton /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[_SFCompressedBarButton initWithFrame:]
  -[_SFCompressedBarButton .cxx_destruct]
  -[_SFCompressedBarButton setHighlighted:]
  -[_SFCompressedBarButton layoutSubviews]


_SFNavigationBarURLButtonBackgroundView : UIImageView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[_SFNavigationBarURLButtonBackgroundView _shouldAnimatePropertyWithKey:]


_SFNavigationBarURLButton : UIButton /System/Library/PrivateFrameworks/WebUI.framework/WebUI <PKScribbleInteractionDelegate, PKScribbleInteractionElementSource, UIGestureRecognizerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFNavigationBarURLButton copy:]
  -[_SFNavigationBarURLButton _handleLongPress:]
  -[_SFNavigationBarURLButton pointMostlyInside:withEvent:]
  -[_SFNavigationBarURLButton canPerformAction:withSender:]
  -[_SFNavigationBarURLButton initWithFrame:]
  -[_SFNavigationBarURLButton _scribbleInteraction:didFinishWritingInElement:]
  -[_SFNavigationBarURLButton dealloc]
  -[_SFNavigationBarURLButton .cxx_destruct]
  -[_SFNavigationBarURLButton setHighlighted:]
  -[_SFNavigationBarURLButton _scribbleInteraction:shouldBeginAtLocation:]
  -[_SFNavigationBarURLButton canBecomeFirstResponder]
  -[_SFNavigationBarURLButton pasteAndNavigate:]
  -[_SFNavigationBarURLButton _scribbleInteraction:focusWillTransformElement:]
  -[_SFNavigationBarURLButton _scribbleInteraction:frameForElement:]
  -[_SFNavigationBarURLButton _scribbleInteraction:willBeginWritingInElement:]
  -[_SFNavigationBarURLButton _hover:]
  -[_SFNavigationBarURLButton _dismissMenu:]
  -[_SFNavigationBarURLButton _scribbleInteraction:requestElementsInRect:completion:]
  -[_SFNavigationBarURLButton _scribbleInteraction:focusElement:initialFocusSelectionReferencePoint:completion:]
  -[_SFNavigationBarURLButton gestureRecognizer:shouldReceiveTouch:]


_SFNavigationBarLabelsContainer : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[_SFNavigationBarLabelsContainer _shouldAnimatePropertyWithKey:]


_SFNavigationBar : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UIGestureRecognizerDelegate, _SFFluidProgressViewDelegate, _SFNavigationBarURLButtonDelegate, _UIBasicAnimationFactory, UIDragInteractionDelegate_Private, UIDropInteractionDelegate_Private, _UIClickInteractionDelegate, _SFBarCommon>
 @property  _SFNavigationBarItem *item
 @property  BOOL usesNarrowLayout
 @property  BOOL unifiedFieldShowsProgressView
 @property  _SFBarTheme *theme
 @property  _SFNavigationBarTheme *effectiveTheme
 @property  BOOL hasToolbar
 @property  BOOL controlsHidden
 @property  BOOL expanded
 @property  UITextField *textField
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} URLOutlineFrameInNavigationBarSpace
 @property  BOOL backdropGroupDisabled
 @property  NSString *backdropGroupName
 @property  <_SFNavigationBarDelegate> *delegate
 @property  double defaultHeight
 @property  double minimumHeight
 @property  double controlsAlpha
 @property  double contentUnderStatusBarHeight
 @property  BOOL suppressesBlur
 @property  BOOL usesFaintSeparator
 @property  double visualHeight
 @property  double maximumHeight
 @property  double minimumBackdropHeight
 @property  UIView *inputAccessoryView
 @property  {CGSize=dd} dismissButtonSize
 @property  double dismissButtonPadding
 @property  BOOL sendingBarMetricsChangeNotification
 @property  UIBlurEffect *backdropEffect
 @property  <_SFPopoverSourceInfo> *formatMenuButtonPopoverSourceInfo
 @property  <_SFPopoverSourceInfo> *reloadButtonPopoverSourceInfo
 @property  <_SFPopoverSourceInfo> *URLOutlinePopoverSourceInfo
 @property  NSArray *popoverPassthroughViews
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFNavigationBar initialize]
  +[_SFNavigationBar separatorHeight]
  +[_SFNavigationBar _metricsCategory]
  +[_SFNavigationBar estimatedDefaultHeightForStatusBarHeight:]
  +[_SFNavigationBar estimatedMinimumHeightForStatusBarHeight:]

  // instance methods
  -[_SFNavigationBar _dropInteraction:dataOwnerForSession:]
  -[_SFNavigationBar inputAccessoryView]
  -[_SFNavigationBar setExpanded:]
  -[_SFNavigationBar textField]
  -[_SFNavigationBar item]
  -[_SFNavigationBar backdropGroupName]
  -[_SFNavigationBar isExpanded]
  -[_SFNavigationBar _basicAnimationForView:withKeyPath:]
  -[_SFNavigationBar dropInteraction:performDrop:]
  -[_SFNavigationBar setInputAccessoryView:]
  -[_SFNavigationBar animateSafariIconLinkFromPoint:inView:]
  -[_SFNavigationBar dropInteraction:sessionDidUpdate:]
  -[_SFNavigationBar setBackdropGroupName:]
  -[_SFNavigationBar dropInteraction:canHandleSession:]
  -[_SFNavigationBar _updateText]
  -[_SFNavigationBar animateLinkImage:fromRect:inView:toBarItem:afterImageDisappearsBlock:afterDestinationLayerBouncesBlock:]
  -[_SFNavigationBar dragInteraction:willAnimateLiftWithAnimator:session:]
  -[_SFNavigationBar initWithFrame:]
  -[_SFNavigationBar defaultHeight]
  -[_SFNavigationBar dealloc]
  -[_SFNavigationBar setMaximumHeight:]
  -[_SFNavigationBar navigationBarURLButtonDidReceiveCopyCommand:]
  -[_SFNavigationBar navigationBarURLButtonDidReceivePasteCommand:]
  -[_SFNavigationBar navigationBarURLButton:shouldShowMenuForGestureWithRecognizer:]
  -[_SFNavigationBar navigationBarURLButtonShouldCopy:]
  -[_SFNavigationBar navigationBarURLButtonShouldPaste:]
  -[_SFNavigationBar navigationBarURLButtonIsUsingNarrowLayout:]
  -[_SFNavigationBar navigationBarURLButtonBeginSuppressingPlaceholder:]
  -[_SFNavigationBar navigationBarURLButtonEndSuppressingPlaceholder:]
  -[_SFNavigationBar navigationBarURLButton:canWriteAtLocation:]
  -[_SFNavigationBar textFieldForNavigationBarURLButton:]
  -[_SFNavigationBar .cxx_destruct]
  -[_SFNavigationBar dragInteraction:sessionWillBegin:]
  -[_SFNavigationBar hitTest:withEvent:]
  -[_SFNavigationBar dragInteraction:previewForLiftingItem:session:]
  -[_SFNavigationBar textFieldIsEditableForNavigationBarURLButton:]
  -[_SFNavigationBar navigationBarURLButtonDidRequestFocusForPencilInput:completionHandler:]
  -[_SFNavigationBar navigationBarURLButton:shouldAllowLongPressAtPoint:]
  -[_SFNavigationBar textForNavigationBarURLButton:]
  -[_SFNavigationBar clearEphemeralUI]
  -[_SFNavigationBar _updateShowsLockIcon]
  -[_SFNavigationBar _cancelButtonTapped:]
  -[_SFNavigationBar canBecomeFirstResponder]
  -[_SFNavigationBar setItem:]
  -[_SFNavigationBar dragInteraction:itemsForBeginningSession:]
  -[_SFNavigationBar _dragInteraction:dataOwnerForSession:]
  -[_SFNavigationBar popoverSourceInfoForBarItem:]
  -[_SFNavigationBar setTheme:]
  -[_SFNavigationBar traitCollectionDidChange:]
  -[_SFNavigationBar theme]
  -[_SFNavigationBar _updateAvailabilityButtonVisibilityForType:animated:showAvailabilityText:adjustURLLabels:]
  -[_SFNavigationBar _updateNotSecureWarningsVisibility]
  -[_SFNavigationBar hasToolbar]
  -[_SFNavigationBar _URLTapped:]
  -[_SFNavigationBar _placeholderText]
  -[_SFNavigationBar _mediaStateMuteButtonTapped:]
  -[_SFNavigationBar _reloadButtonPressed]
  -[_SFNavigationBar _stopButtonPressed]
  -[_SFNavigationBar _compressedBarTapped]
  -[_SFNavigationBar _dismissButtonTapped:]
  -[_SFNavigationBar initWithFrame:inputMode:]
  -[_SFNavigationBar _controlsAlpha]
  -[_SFNavigationBar _formatToggleButtonTapped:]
  -[_SFNavigationBar placeholderHorizontalInset]
  -[_SFNavigationBar setExpanded:completionHandler:]
  -[_SFNavigationBar _hideAvailabilityLabelNow]
  -[_SFNavigationBar visualHeight]
  -[_SFNavigationBar setExpanded:textFieldSelectionRange:completionHandler:]
  -[_SFNavigationBar setTextFieldPlaceHolderColor:]
  -[_SFNavigationBar setUsesNarrowLayout:]
  -[_SFNavigationBar setContentUnderStatusBarHeight:]
  -[_SFNavigationBar setDismissButtonStyle:animated:]
  -[_SFNavigationBar minimumHeight]
  -[_SFNavigationBar fluidProgressViewDidShowProgress:]
  -[_SFNavigationBar fluidProgressViewWillShowProgress:]
  -[_SFNavigationBar clickInteractionDidClickUp:]
  -[_SFNavigationBar clickInteractionShouldBegin:]
  -[_SFNavigationBar clickInteractionDidClickDown:]
  -[_SFNavigationBar setDelegate:]
  -[_SFNavigationBar _timingFunctionForAnimation]
  -[_SFNavigationBar setUnifiedFieldShowsProgressView:]
  -[_SFNavigationBar setDismissButtonHidden:]
  -[_SFNavigationBar dismissButtonSize]
  -[_SFNavigationBar dismissButtonPadding]
  -[_SFNavigationBar setHasToolbar:]
  -[_SFNavigationBar setExpanded:textFieldSelectionRange:]
  -[_SFNavigationBar setControlsHidden:]
  -[_SFNavigationBar setMinimumBackdropHeight:]
  -[_SFNavigationBar setSuppressesBlur:]
  -[_SFNavigationBar effectiveTheme]
  -[_SFNavigationBar URLOutlineFrameInNavigationBarSpace]
  -[_SFNavigationBar setUsesFaintSeparator:]
  -[_SFNavigationBar setBackdropGroupDisabled:]
  -[_SFNavigationBar formatMenuButtonPopoverSourceInfo]
  -[_SFNavigationBar reloadButtonPopoverSourceInfo]
  -[_SFNavigationBar URLOutlinePopoverSourceInfo]
  -[_SFNavigationBar popoverPassthroughViews]
  -[_SFNavigationBar usesNarrowLayout]
  -[_SFNavigationBar unifiedFieldShowsProgressView]
  -[_SFNavigationBar areControlsHidden]
  -[_SFNavigationBar isBackdropGroupDisabled]
  -[_SFNavigationBar contentUnderStatusBarHeight]
  -[_SFNavigationBar suppressesBlur]
  -[_SFNavigationBar usesFaintSeparator]
  -[_SFNavigationBar minimumBackdropHeight]
  -[_SFNavigationBar containsBarItem:]
  -[_SFNavigationBar maximumHeight]
  -[_SFNavigationBar newTextField]
  -[_SFNavigationBar isSendingBarMetricsChangeNotification]
  -[_SFNavigationBar delegate]
  -[_SFNavigationBar tintColorDidChange]
  -[_SFNavigationBar layoutSubviews]
  -[_SFNavigationBar backdropEffect]
  -[_SFNavigationBar _dragInteraction:viewToSnapshotItem:]


SFNavigationBarAccessoryButtonArrangement : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SFNavigationBarAccessoryButtonArrangement .cxx_destruct]


SFLinkPreviewHeaderContentView : UIButton /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  <SFLinkPreviewHeaderContentViewDelegate> *delegate
 @property  NSString *domain
 @property  BOOL previewEnabled

  // instance methods
  -[SFLinkPreviewHeaderContentView initWithFrame:]
  -[SFLinkPreviewHeaderContentView domain]
  -[SFLinkPreviewHeaderContentView updateConstraints]
  -[SFLinkPreviewHeaderContentView .cxx_destruct]
  -[SFLinkPreviewHeaderContentView setDomain:]
  -[SFLinkPreviewHeaderContentView _togglePreviewButtonPressed]
  -[SFLinkPreviewHeaderContentView isPreviewEnabled]
  -[SFLinkPreviewHeaderContentView setPreviewEnabled:]
  -[SFLinkPreviewHeaderContentView _updateDomainWithHidePreviewActionConstraints]
  -[SFLinkPreviewHeaderContentView _updateSafariIconWithShowPreviewActionConstraints]
  -[SFLinkPreviewHeaderContentView setDelegate:]
  -[SFLinkPreviewHeaderContentView delegate]


SFEditableTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  BOOL enabled
 @property  <SFEditableTableViewCellDelegate> *delegate

  // instance methods
  -[SFEditableTableViewCell copy:]
  -[SFEditableTableViewCell canPerformAction:withSender:]
  -[SFEditableTableViewCell .cxx_destruct]
  -[SFEditableTableViewCell initWithEnabledState:]
  -[SFEditableTableViewCell isEnabled]
  -[SFEditableTableViewCell _updateTextFieldTextColor]
  -[SFEditableTableViewCell setEnabled:]
  -[SFEditableTableViewCell setDelegate:]
  -[SFEditableTableViewCell delegate]
  -[SFEditableTableViewCell tintColorDidChange]


_SFBookmarkFolderTouchIconProvider : WBSBookmarkFolderTouchIconProvider /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // instance methods
  -[_SFBookmarkFolderTouchIconProvider init]
  -[_SFBookmarkFolderTouchIconProvider backgroundColor]
  -[_SFBookmarkFolderTouchIconProvider .cxx_destruct]
  -[_SFBookmarkFolderTouchIconProvider touchIconRequestForBookmark:inFolderWithRequest:]
  -[_SFBookmarkFolderTouchIconProvider defaultFolderIconForRequest:]
  -[_SFBookmarkFolderTouchIconProvider displayableFolderContentsForRequest:]
  -[_SFBookmarkFolderTouchIconProvider canHandleRequest:]
  -[_SFBookmarkFolderTouchIconProvider _folderContentsDidChange:]
  -[_SFBookmarkFolderTouchIconProvider bookmarkUUIDForRequest:]


_SFPasswordManagerAppearanceValues : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFPasswordManagerAppearanceValues titleFontForNarrowCell]
  +[_SFPasswordManagerAppearanceValues subtitleFontForNarrowCell]
  +[_SFPasswordManagerAppearanceValues titleFontForLargerCell]
  +[_SFPasswordManagerAppearanceValues subtitleFontForLargerCell]


_SFRecentWebSearchesController : WBSRecentWebSearchesController /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // class methods
  +[_SFRecentWebSearchesController _maximumNumberOfSearchesToTrack]

  // instance methods
  -[_SFRecentWebSearchesController .cxx_destruct]
  -[_SFRecentWebSearchesController _removeLegacyRecentSearchesData]
  -[_SFRecentWebSearchesController _saveRecentSearchDictionaries:toUserDefaultsUsingKey:]
  -[_SFRecentWebSearchesController _migrateLegacyData]
  -[_SFRecentWebSearchesController _recentSearchDictionariesFromUserDefaultsUsingKey:]
  -[_SFRecentWebSearchesController initWithPathToLegacySearchesFile:]


_SFCrashBanner : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  _SFBarTheme *theme
 @property  UIButton *closeButton
 @property  NSString *backdropGroupName
 @property  unsigned long type
 @property  NSString *bannerText
 @property  NSString *manuallyWrappedBannerText

  // instance methods
  -[_SFCrashBanner backdropGroupName]
  -[_SFCrashBanner setBackdropGroupName:]
  -[_SFCrashBanner setCloseButton:]
  -[_SFCrashBanner initWithFrame:]
  -[_SFCrashBanner setType:]
  -[_SFCrashBanner .cxx_destruct]
  -[_SFCrashBanner setTheme:]
  -[_SFCrashBanner closeButton]
  -[_SFCrashBanner type]
  -[_SFCrashBanner sizeThatFits:]
  -[_SFCrashBanner _layoutCloseButton]
  -[_SFCrashBanner _shouldUseManuallyWrappedCrashMessageForWidth:]
  -[_SFCrashBanner _labelLayoutSizeForWidth:]
  -[_SFCrashBanner setBannerText:manuallyWrappedBannerText:]
  -[_SFCrashBanner manuallyWrappedBannerText]
  -[_SFCrashBanner theme]
  -[_SFCrashBanner layoutSubviews]
  -[_SFCrashBanner bannerText]


_SFActivityViewController : UIActivityViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <_SFActivityItemCustomizationDelegate>
 @property  NSString *currentExtensionIdentifier
 @property  _SFSafariSharingExtensionController *sharingExtensionController
 @property  <_SFActivityViewControllerDelegate> *delegate
 @property  _SFActivityItemCustomizationController *customizationController
 @property  NSURL *sharingURL
 @property  NSArray *activityItemProviders
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFActivityViewController activeWebPageExtensionItemForURL:withPreviewImageHandler:]

  // instance methods
  -[_SFActivityViewController dealloc]
  -[_SFActivityViewController setSharingURL:]
  -[_SFActivityViewController .cxx_destruct]
  -[_SFActivityViewController _prepareActivity:completion:]
  -[_SFActivityViewController _executeActivity]
  -[_SFActivityViewController sharingURL]
  -[_SFActivityViewController _updateActivityItems:]
  -[_SFActivityViewController _updatePrintControllerWithActivityItems:]
  -[_SFActivityViewController initWithActivityItems:applicationActivities:sharingURL:sourceURL:]
  -[_SFActivityViewController activityDidComplete:withReturnedItems:success:]
  -[_SFActivityViewController setCustomizationController:]
  -[_SFActivityViewController currentExtensionIdentifier]
  -[_SFActivityViewController _processJavaScriptFinalizeReturnedItems:forExtension:]
  -[_SFActivityViewController _containsProviderForDownloadActivityAndGetMIMEType:uti:]
  -[_SFActivityViewController activityItemProviders]
  -[_SFActivityViewController prepareJavaScriptExtensionItemForActivity:]
  -[_SFActivityViewController _preparePrint:completion:]
  -[_SFActivityViewController customizationController]
  -[_SFActivityViewController setCurrentExtensionIdentifier:]
  -[_SFActivityViewController sharingExtensionController]
  -[_SFActivityViewController _extensionItemForExtensionActivity:]
  -[_SFActivityViewController _javaScriptProcessingFileURLInExtension:]
  -[_SFActivityViewController customizationControllerCustomizationsDidChange:]
  -[_SFActivityViewController initWithActivityItemProviderCollection:applicationActivities:sharingURL:sourceURL:]
  -[_SFActivityViewController setSharingExtensionController:]
  -[_SFActivityViewController setDelegate:]
  -[_SFActivityViewController delegate]
  -[_SFActivityViewController _performActivity:]


_SFReaderWebProcessPlugInPageController : _SFWebProcessPlugInPageController
 @property  _SFWebProcessPlugInReaderEnabledPageController *originalPageController

  // class methods
  +[_SFReaderWebProcessPlugInPageController readerPageControllerForContextHandle:]

  // instance methods
  -[_SFReaderWebProcessPlugInPageController initWithPlugIn:contextController:]
  -[_SFReaderWebProcessPlugInPageController .cxx_construct]
  -[_SFReaderWebProcessPlugInPageController loadNewArticle]
  -[_SFReaderWebProcessPlugInPageController .cxx_destruct]
  -[_SFReaderWebProcessPlugInPageController setReaderIsActive:]
  -[_SFReaderWebProcessPlugInPageController webProcessPlugInBrowserContextController:globalObjectIsAvailableForFrame:inScriptWorld:]
  -[_SFReaderWebProcessPlugInPageController reloadArticle]
  -[_SFReaderWebProcessPlugInPageController willDestroyBrowserContextController:]
  -[_SFReaderWebProcessPlugInPageController originalArticleFinder]
  -[_SFReaderWebProcessPlugInPageController _initializeReaderJSControllerForFrame:]
  -[_SFReaderWebProcessPlugInPageController isolatedWorldForNextPageDetection]
  -[_SFReaderWebProcessPlugInPageController collectReaderContentFromPrintAndMailingFrame]
  -[_SFReaderWebProcessPlugInPageController printingMailingFrame]
  -[_SFReaderWebProcessPlugInPageController originalPageController]
  -[_SFReaderWebProcessPlugInPageController setOriginalPageController:]
  -[_SFReaderWebProcessPlugInPageController setConfiguration:]


_SFAdaptivePreviewViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <_SFLinkPreviewHeaderDelegate>
 @property  <_SFAdaptivePreviewViewControllerDelegate> *delegate
 @property  NSArray *linkActions
 @property  _WKActivatedElementInfo *activatedElementInfo
 @property  NSURL *URL
 @property  UIViewController *contentViewController
 @property  BOOL showingLinkPreview
 @property  {CGSize=dd} preferredDocumentContentSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFAdaptivePreviewViewController viewDidLoad]
  -[_SFAdaptivePreviewViewController _updatePreferredContentSize]
  -[_SFAdaptivePreviewViewController initWithURL:]
  -[_SFAdaptivePreviewViewController .cxx_destruct]
  -[_SFAdaptivePreviewViewController linkActions]
  -[_SFAdaptivePreviewViewController _removeViewController:]
  -[_SFAdaptivePreviewViewController viewWillAppear:]
  -[_SFAdaptivePreviewViewController setDelegate:]
  -[_SFAdaptivePreviewViewController URL]
  -[_SFAdaptivePreviewViewController _allowsUserInteractionWhenPreviewedInContextMenu]
  -[_SFAdaptivePreviewViewController setURL:]
  -[_SFAdaptivePreviewViewController delegate]
  -[_SFAdaptivePreviewViewController _setUpLinkPreviewViewControllerIfNeeded]
  -[_SFAdaptivePreviewViewController _addViewFromViewController:]
  -[_SFAdaptivePreviewViewController contentViewController]
  -[_SFAdaptivePreviewViewController _setUpTextPreviewViewControllerIfNeeded]
  -[_SFAdaptivePreviewViewController linkPreviewHeader:didEnableLinkPreview:]
  -[_SFAdaptivePreviewViewController linkPreviewHeaderBoundsDidChange:]
  -[_SFAdaptivePreviewViewController showingLinkPreview]
  -[_SFAdaptivePreviewViewController setPreferredDocumentContentSize:]
  -[_SFAdaptivePreviewViewController setLinkActions:]
  -[_SFAdaptivePreviewViewController activatedElementInfo]
  -[_SFAdaptivePreviewViewController setActivatedElementInfo:]
  -[_SFAdaptivePreviewViewController preferredDocumentContentSize]
  -[_SFAdaptivePreviewViewController setLinkPreviewEnabled:]


SFFormAutoFillFrameHandle : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding, WBUFormAutoFillFrameHandle>
 @property  _WKFrameHandle *frameHandle
 @property  NSURL *webui_URL
 @property  ^{__SecTrust=} webui_serverTrust
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFFormAutoFillFrameHandle supportsSecureCoding]

  // instance methods
  -[SFFormAutoFillFrameHandle copyWithZone:]
  -[SFFormAutoFillFrameHandle dealloc]
  -[SFFormAutoFillFrameHandle .cxx_destruct]
  -[SFFormAutoFillFrameHandle encodeWithCoder:]
  -[SFFormAutoFillFrameHandle frameHandle]
  -[SFFormAutoFillFrameHandle initWithWebProcessPlugInFrame:]
  -[SFFormAutoFillFrameHandle webui_URL]
  -[SFFormAutoFillFrameHandle isEqual:]
  -[SFFormAutoFillFrameHandle initWithCoder:]
  -[SFFormAutoFillFrameHandle initWithFrameHandle:URL:serverTrust:]
  -[SFFormAutoFillFrameHandle webui_serverTrust]


_SFPrintController : NSObject /usr/lib/libc++.1.dylib <UIPrintInteractionControllerDelegate, SFPrintPageRendererDelegate>
 @property  WKWebView *webView
 @property  _SFReaderController *readerController
 @property  <_SFDialogPresenting> *dialogPresenter
 @property  <_SFPrintControllerDelegate> *delegate
 @property  SFPrintPageRenderer *printRenderer
 @property  UIPrintInfo *printInfo
 @property  BOOL displayingPrintUI
 @property  NSString *suggestedPDFFileName
 @property  UIPrintInteractionController *printInteractionController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFPrintController webView]
  -[_SFPrintController setDialogPresenter:]
  -[_SFPrintController init]
  -[_SFPrintController setReaderController:]
  -[_SFPrintController suggestedPDFFileName]
  -[_SFPrintController dialogPresenter]
  -[_SFPrintController _dequeuePrintItem]
  -[_SFPrintController isDisplayingPrintUI]
  -[_SFPrintController dealloc]
  -[_SFPrintController .cxx_destruct]
  -[_SFPrintController _enqueuePrintItem:]
  -[_SFPrintController printFrame:initiatedByWebContent:completion:]
  -[_SFPrintController dismissPrintInteractionControllerAnimated:]
  -[_SFPrintController clearQueue]
  -[_SFPrintController preparePrintInteractionControllerForUsage:completion:]
  -[_SFPrintController _shouldAllowBlockedPrintWithCompletionHandler:]
  -[_SFPrintController _shouldPrintWhileLoadingForUsage:completionHandler:]
  -[_SFPrintController setWebView:]
  -[_SFPrintController handleNextPrintRequest]
  -[_SFPrintController readerController]
  -[_SFPrintController printRenderer]
  -[_SFPrintController _printCurrentItem]
  -[_SFPrintController resetPrintUISuppression]
  -[_SFPrintController printInteractionControllerDidFinish]
  -[_SFPrintController printInfo]
  -[_SFPrintController _isContentManaged]
  -[_SFPrintController setDelegate:]
  -[_SFPrintController getPDFDataForUsage:withCompletion:]
  -[_SFPrintController setUpPrintController]
  -[_SFPrintController _didFinishPrintingCurrentItemWithResult:fromPrintInteractionControllerCompletion:]
  -[_SFPrintController delegate]
  -[_SFPrintController printInteractionController]
  -[_SFPrintController presentingViewControllerForPrintPageRenderer:]
  -[_SFPrintController updatePrintInfo]
  -[_SFPrintController printInteractionControllerParentViewController:]
  -[_SFPrintController _preparePrintInteractionControllerForUsage:onlyIfLoaded:completion:]


SFPrintQueueItem : NSObject /usr/lib/libc++.1.dylib
 @property  _WKFrameHandle *frameHandle
 @property  BOOL initiatedByWebContent

  // instance methods
  -[SFPrintQueueItem dealloc]
  -[SFPrintQueueItem .cxx_destruct]
  -[SFPrintQueueItem initWithFrameHandle:initiatedByWebContent:completionHandler:]
  -[SFPrintQueueItem initiatedByWebContent]
  -[SFPrintQueueItem frameHandle]
  -[SFPrintQueueItem completeWithResult:]


_SFContentBlockersPreferenceManager : WBSContentBlockersPreferenceManager /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices <SFContentBlockerManagerObserver>
 @property  BOOL hasEnabledContentBlockers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFContentBlockersPreferenceManager initWithPerSitePreferencesStore:]
  -[_SFContentBlockersPreferenceManager _checkForContentBlockers]
  -[_SFContentBlockersPreferenceManager hasEnabledContentBlockers]
  -[_SFContentBlockersPreferenceManager invalidate]
  -[_SFContentBlockersPreferenceManager contentBlockerManagerExtensionListDidChange:]


SFPasswordBreachToggleCell : UITableViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[SFPasswordBreachToggleCell .cxx_destruct]
  -[SFPasswordBreachToggleCell _userToggledBreachDetection:]
  -[SFPasswordBreachToggleCell initWithReuseIdentifier:delegate:]
  -[SFPasswordBreachToggleCell setCurrentPasswordBreachState:]


_SFSearchEngineInfo : WBSSearchProvider /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  int searchID
 @property  NSString *scriptName
 @property  NSString *displayName
 @property  int resultType
 @property  unsigned long endpointType

  // class methods
  +[_SFSearchEngineInfo _resultTypeForShortName:]
  +[_SFSearchEngineInfo engineFromDictionary:withController:]
  +[_SFSearchEngineInfo _endpointTypeForShortName:]
  +[_SFSearchEngineInfo shouldIncludeEngineFromDictionary:withController:]

  // instance methods
  -[_SFSearchEngineInfo endpointType]
  -[_SFSearchEngineInfo searchShouldUseSafeSearchTemplate]
  -[_SFSearchEngineInfo resultType]
  -[_SFSearchEngineInfo classForCoder]
  -[_SFSearchEngineInfo .cxx_destruct]
  -[_SFSearchEngineInfo searchID]
  -[_SFSearchEngineInfo initWithName:scriptName:searchID:searchTemplate:hostSuffixes:pathPrefixes:usesSearchTermsFromFragment:groupIdentifierQueryStringKey:suggestionsTemplate:topLevelDomains:safeSearchSuffix:safeSearchURLQueryParameters:carrierInfo:controller:]
  -[_SFSearchEngineInfo scriptName]
  -[_SFSearchEngineInfo displayName]


SFPrivacyReportSubheaderTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  NSString *subheaderText

  // instance methods
  -[SFPrivacyReportSubheaderTableViewCell initWithStyle:reuseIdentifier:]
  -[SFPrivacyReportSubheaderTableViewCell .cxx_destruct]
  -[SFPrivacyReportSubheaderTableViewCell subheaderText]
  -[SFPrivacyReportSubheaderTableViewCell setSubheaderText:]


_SFMediaCaptureStatusBarManager : NSObject /usr/lib/libc++.1.dylib <SBSStatusBarStyleOverridesCoordinatorDelegate>
 @property  BOOL recording
 @property  NSString *statusFormatString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFMediaCaptureStatusBarManager sharedManager]

  // instance methods
  -[_SFMediaCaptureStatusBarManager statusBarCoordinator:receivedTapWithContext:completionBlock:]
  -[_SFMediaCaptureStatusBarManager statusBarCoordinator:invalidatedRegistrationWithError:]
  -[_SFMediaCaptureStatusBarManager .cxx_destruct]
  -[_SFMediaCaptureStatusBarManager isRecording]
  -[_SFMediaCaptureStatusBarManager setRecordingDocument:]
  -[_SFMediaCaptureStatusBarManager _acquireStatusBarOverrideWithAudioOnly:]
  -[_SFMediaCaptureStatusBarManager _releaseStatusBarOverride]
  -[_SFMediaCaptureStatusBarManager _cleanUpStatusBarOverride]
  -[_SFMediaCaptureStatusBarManager overrideStyleForAudioOnly:]
  -[_SFMediaCaptureStatusBarManager _didInvalideStatusBarOverride]
  -[_SFMediaCaptureStatusBarManager statusFormatString]
  -[_SFMediaCaptureStatusBarManager _didAcquireStatusBarOverrideSuccessfully:]
  -[_SFMediaCaptureStatusBarManager activateApp]
  -[_SFMediaCaptureStatusBarManager recordingDocumentDidBeginMediaCapture:audioOnly:]
  -[_SFMediaCaptureStatusBarManager recordingDocumentDidEndMediaCapture:]
  -[_SFMediaCaptureStatusBarManager cancelStatusBarOverride]
  -[_SFMediaCaptureStatusBarManager _acquireStatusBarOverride]


_SFFormMetadataController : WBSFormMetadataController /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices <WKWebProcessPlugInFormDelegatePrivate>
 @property  WKWebProcessPlugInScriptWorld *scriptWorld
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFFormMetadataController removeAutomaticPasswordVisualTreatmentInFrame:passwordControlUniqueIDs:]
  -[_SFFormMetadataController passwordFieldFocused:inFrame:isPasswordFieldForUserCredentials:]
  -[_SFFormMetadataController removeAutomaticPasswordElementsInFrame:focusedPasswordControlUniqueID:passwordControlUniqueIDs:blurAfterRemoval:]
  -[_SFFormMetadataController shouldIncludeNonEmptyFields]
  -[_SFFormMetadataController usernameFieldFocused:fieldMetadata:inForm:inFrame:]
  -[_SFFormMetadataController _assistedNodeMetadataWithPasswordField:passwordFieldMetadata:formMetadata:inFrame:]
  -[_SFFormMetadataController dealloc]
  -[_SFFormMetadataController _webProcessPlugInBrowserContextController:textDidChangeInTextField:inFrame:initiatedByUserTyping:]
  -[_SFFormMetadataController .cxx_destruct]
  -[_SFFormMetadataController scriptWorld]
  -[_SFFormMetadataController _observer]
  -[_SFFormMetadataController collectMetadataForTextField:inFrame:completionHandler:]
  -[_SFFormMetadataController didFindSearchURLTemplateString:inFrame:pageController:]
  -[_SFFormMetadataController _collectFormMetadataForPreFilling:]
  -[_SFFormMetadataController autoFillFormInFrame:withValues:fillSynchronously:setAutoFilled:selectFieldAfterFilling:]
  -[_SFFormMetadataController focusFormForStreamlinedLogin:inFrame:]
  -[_SFFormMetadataController clearField:inFrame:]
  -[_SFFormMetadataController _webProcessPlugInBrowserContextController:willSendSubmitEventToForm:inFrame:targetFrame:values:]
  -[_SFFormMetadataController _webProcessPlugInBrowserContextController:willBeginInputSessionForElement:inFrame:userIsInteracting:]
  -[_SFFormMetadataController finishedAutoFillingForm:inFrame:shouldSubmit:]
  -[_SFFormMetadataController collectFormMetadataForPreFilling]
  -[_SFFormMetadataController formAutoFillNodeForJSWrapper:inContext:]
  -[_SFFormMetadataController initWithPageController:]
  -[_SFFormMetadataController fillForm:inFrame:withPassword:focusedFieldControlID:]
  -[_SFFormMetadataController clearScriptWorld]
  -[_SFFormMetadataController _willNavigateFrameWithUnsubmittedForm:]
  -[_SFFormMetadataController _webProcessPlugInBrowserContextController:willSubmitForm:toFrame:fromFrame:withValues:]
  -[_SFFormMetadataController didStartProvisionalLoadForFrame:]
  -[_SFFormMetadataController collectURLsForPreFilling]
  -[_SFFormMetadataController invalidate]
  -[_SFFormMetadataController creditCardFieldFocused:inFrame:]
  -[_SFFormMetadataController autoFillFormInFrame:withValues:fillSynchronously:setAutoFilled:focusFieldAfterFilling:fieldToFocus:submitForm:]
  -[_SFFormMetadataController didSameDocumentNavigation:inFrame:]
  -[_SFFormMetadataController _formContainsAutoFilledElements:]
  -[_SFFormMetadataController _webProcessPlugInBrowserContextControllerShouldNotifyOnFormChanges:]


SFBookmarkTouchIconRequest : WBSTouchIconRequest /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  WebBookmark *bookmark

  // class methods
  +[SFBookmarkTouchIconRequest requestWithBookmark:iconGenerationEnabled:]
  +[SFBookmarkTouchIconRequest requestWithBookmark:]

  // instance methods
  -[SFBookmarkTouchIconRequest bookmark]
  -[SFBookmarkTouchIconRequest .cxx_destruct]
  -[SFBookmarkTouchIconRequest uniqueIdentifier]
  -[SFBookmarkTouchIconRequest initWithBookmark:]
  -[SFBookmarkTouchIconRequest initWithBookmark:iconGenerationEnabled:]


_SFTableViewDiffableDataSource : UITableViewDiffableDataSource /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  <_SFTableViewDiffableDataSourceDelegate> *delegate

  // instance methods
  -[_SFTableViewDiffableDataSource tableView:commitEditingStyle:forRowAtIndexPath:]
  -[_SFTableViewDiffableDataSource .cxx_destruct]
  -[_SFTableViewDiffableDataSource tableView:titleForHeaderInSection:]
  -[_SFTableViewDiffableDataSource tableView:titleForFooterInSection:]
  -[_SFTableViewDiffableDataSource setDelegate:]
  -[_SFTableViewDiffableDataSource delegate]


_SFBrowserKeyCommands : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFBrowserKeyCommands _modifierFlagsForSelectorString:bundle:table:]
  +[_SFBrowserKeyCommands unlocalizedKeyCommandWithSelector:input:modifierFlags:discoverabilityTitle:webInterceptable:]
  +[_SFBrowserKeyCommands browserKeyCommandsForPersona:shouldAddEditingCommands:]
  +[_SFBrowserKeyCommands unlocalizedKeyCommandWithSelector:input:modifierFlags:webInterceptable:]
  +[_SFBrowserKeyCommands _placeholderKeyCommandForCommand:]
  +[_SFBrowserKeyCommands localizedKeyCommandWithSelector:discoverabilityTitle:bundle:table:webInterceptable:]
  +[_SFBrowserKeyCommands _localizedKeyCommandWithSelector:discoverabilityTitle:webInterceptable:]
  +[_SFBrowserKeyCommands _boolForSelectorString:modifierString:bundle:table:]
  +[_SFBrowserKeyCommands _keyForSelectorString:bundle:table:]
  +[_SFBrowserKeyCommands _setUpKeyCommandsIfNecessaryForPersona:]


_SFPerSitePreferenceNotifyingListController : PSListController /usr/lib/libMobileGestalt.dylib
  // instance methods
  -[_SFPerSitePreferenceNotifyingListController init]
  -[_SFPerSitePreferenceNotifyingListController dealloc]
  -[_SFPerSitePreferenceNotifyingListController _didUpdatePerSitePreferenceNotificationReceived:]
  -[_SFPerSitePreferenceNotifyingListController perSitePreferenceValueDidChange]
  -[_SFPerSitePreferenceNotifyingListController notifyPerSitePreferenceValueDidChange]


SFBrowserDocumentTrackerInfo : NSObject /usr/lib/libc++.1.dylib
 @property  <_SFBrowserDocument> *document
 @property  NSSet *allowedKnownTrackingThirdParties
 @property  NSSet *preventedKnownTrackingThirdParties

  // class methods
  +[SFBrowserDocumentTrackerInfo trackingPreventionEnabled]

  // instance methods
  -[SFBrowserDocumentTrackerInfo updateKnownTrackingThirdPartiesWithCompletionHandler:]
  -[SFBrowserDocumentTrackerInfo dealloc]
  -[SFBrowserDocumentTrackerInfo .cxx_destruct]
  -[SFBrowserDocumentTrackerInfo allowedKnownTrackingThirdParties]
  -[SFBrowserDocumentTrackerInfo initWithDocument:]
  -[SFBrowserDocumentTrackerInfo observeValueForKeyPath:ofObject:change:context:]
  -[SFBrowserDocumentTrackerInfo document]
  -[SFBrowserDocumentTrackerInfo _resetKnownTrackingThirdParties]
  -[SFBrowserDocumentTrackerInfo _flushKnownTrackingThirdParties]
  -[SFBrowserDocumentTrackerInfo _updateKnownTrackingThirdPartiesWithCompletionHandler:]
  -[SFBrowserDocumentTrackerInfo documentDidCommitNavigation]
  -[SFBrowserDocumentTrackerInfo preventedKnownTrackingThirdParties]


SFHostApplicationCustomActivity : _SFActivity
 @property  SFCustomActivityProxy *activityProxy

  // instance methods
  -[SFHostApplicationCustomActivity activityType]
  -[SFHostApplicationCustomActivity activityTitle]
  -[SFHostApplicationCustomActivity canPerformWithActivityItems:]
  -[SFHostApplicationCustomActivity .cxx_destruct]
  -[SFHostApplicationCustomActivity activityImage]
  -[SFHostApplicationCustomActivity activityProxy]
  -[SFHostApplicationCustomActivity initWithActivityProxy:]


_SFDimmingButton : UIButton /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  double normalImageAlpha
 @property  double highlightedImageAlpha
 @property  double highlightAnimationDuration
 @property  UIColor *dimmableBackgroundColor
 @property  NSNumber *tapTargetSideMargin

  // instance methods
  -[_SFDimmingButton setDimmableBackgroundColor:]
  -[_SFDimmingButton setHighlightAnimationDuration:]
  -[_SFDimmingButton dimmableBackgroundColor]
  -[_SFDimmingButton normalImageAlpha]
  -[_SFDimmingButton .cxx_destruct]
  -[_SFDimmingButton setHighlighted:]
  -[_SFDimmingButton setHighlightedImageAlpha:]
  -[_SFDimmingButton highlightedImageAlpha]
  -[_SFDimmingButton setTapTargetSideMargin:]
  -[_SFDimmingButton tapTargetSideMargin]
  -[_SFDimmingButton highlightAnimationDuration]
  -[_SFDimmingButton pointInside:withEvent:]
  -[_SFDimmingButton _updateImageAlpha]
  -[_SFDimmingButton _updateBackgroundColor]
  -[_SFDimmingButton setNormalImageAlpha:]
  -[_SFDimmingButton layoutSubviews]


_SFStoreBannerTracker : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFStoreBannerTracker sharedTracker]

  // instance methods
  -[_SFStoreBannerTracker clear]
  -[_SFStoreBannerTracker save]
  -[_SFStoreBannerTracker init]
  -[_SFStoreBannerTracker load]
  -[_SFStoreBannerTracker .cxx_destruct]
  -[_SFStoreBannerTracker blockProductBanner:]
  -[_SFStoreBannerTracker isProductBannerBlocked:completion:]
  -[_SFStoreBannerTracker filePath]


_SFPerSitePreferencesVendor : NSObject /usr/lib/libc++.1.dylib
 @property  WBSAutomaticReaderActivationManager *automaticReaderActivationManager
 @property  _SFContentBlockersPreferenceManager *contentBlockersPreferenceManager
 @property  _SFUserMediaPermissionController *sharedUserMediaPermissionController
 @property  _SFRequestDesktopSitePreferenceManager *requestDesktopSitePreferenceManager
 @property  _SFGeolocationPermissionManager *sharedGeolocationPermissionManager
 @property  _SFPageZoomPreferenceManager *pageZoomPreferenceManager

  // instance methods
  -[_SFPerSitePreferencesVendor automaticReaderActivationManager]
  -[_SFPerSitePreferencesVendor sharedGeolocationPermissionManager]
  -[_SFPerSitePreferencesVendor dealloc]
  -[_SFPerSitePreferencesVendor .cxx_destruct]
  -[_SFPerSitePreferencesVendor sharedUserMediaPermissionController]
  -[_SFPerSitePreferencesVendor contentBlockersPreferenceManager]
  -[_SFPerSitePreferencesVendor managerForPreference:]
  -[_SFPerSitePreferencesVendor pageZoomPreferenceManager]
  -[_SFPerSitePreferencesVendor requestDesktopSitePreferenceManager]


SFLocationManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SFLocationManager sharedLocationManager]
  +[SFLocationManager setDefaultEffectiveBundleIdentifier:]

  // instance methods
  -[SFLocationManager init]
  -[SFLocationManager .cxx_destruct]
  -[SFLocationManager _setApplication:isForeground:]
  -[SFLocationManager _updateAssertion]
  -[SFLocationManager _updateApplicationsToMonitor]
  -[SFLocationManager addClientForApplication:]
  -[SFLocationManager removeClientForApplication:]
  -[SFLocationManager _handleApplicationStateChange:]


_SFBarTheme : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL backdropIsDark
 @property  BOOL backdropIsTinted
 @property  unsigned long tintStyle
 @property  UIColor *controlsTintColor
 @property  UIColor *preferredBarTintColor
 @property  long long overrideUserInterfaceStyle
 @property  UIBlurEffect *backdropEffect
 @property  NSArray *backdropAdjustmentEffects
 @property  _SFBarTheme *fallbackTheme

  // class methods
  +[_SFBarTheme themeWithBarTintStyle:]
  +[_SFBarTheme themeWithBarTintStyle:preferredBarTintColor:controlsTintColor:]
  +[_SFBarTheme themeWithTheme:]

  // instance methods
  -[_SFBarTheme overrideUserInterfaceStyle]
  -[_SFBarTheme controlsTintColor]
  -[_SFBarTheme .cxx_destruct]
  -[_SFBarTheme backdropIsTinted]
  -[_SFBarTheme preferredBarTintColor]
  -[_SFBarTheme isEqual:]
  -[_SFBarTheme backdropAdjustmentEffects]
  -[_SFBarTheme fallbackTheme]
  -[_SFBarTheme tintStyle]
  -[_SFBarTheme applyBackdropEffectsToView:]
  -[_SFBarTheme backdropIsDark]
  -[_SFBarTheme initWithBarTintStyle:preferredBarTintColor:controlsTintColor:]
  -[_SFBarTheme backdropEffect]


_SFReaderController : NSObject /usr/lib/libc++.1.dylib <SFReaderEventsListener, SFReaderContext, WKNavigationDelegate, WKUIDelegatePrivate>
 @property  WKWebView *webView
 @property  WKWebView *readerWebView
 @property  <_SFReaderControllerDelegate> *delegate
 @property  BOOL readerAvailable
 @property  BOOL contentIsReady
 @property  <WKUIDelegatePrivate> *webViewUIDelegate
 @property  NSString *articleText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFReaderController configurationManager]
  -[_SFReaderController webView]
  -[_SFReaderController clearReaderWebView]
  -[_SFReaderController setReaderLanguageTag:]
  -[_SFReaderController setUpReaderWebViewIfNeededAndPerformBlock:]
  -[_SFReaderController fontManager]
  -[_SFReaderController _webView:contextMenuDidEndForElement:]
  -[_SFReaderController setReaderFont:]
  -[_SFReaderController setReaderAvailable:]
  -[_SFReaderController dealloc]
  -[_SFReaderController setContentIsReady:]
  -[_SFReaderController loadNewArticle]
  -[_SFReaderController .cxx_destruct]
  -[_SFReaderController shouldCreateArticleFinder]
  -[_SFReaderController _setUpReaderActivityListener]
  -[_SFReaderController setWebViewUIDelegate:]
  -[_SFReaderController prepareReaderPrintingIFrameWithCompletion:]
  -[_SFReaderController setReaderTheme:forAppearance:]
  -[_SFReaderController articleText]
  -[_SFReaderController readerTextWasExtracted:withMetadata:wasDeterminingAvailabilility:]
  -[_SFReaderController _webView:willUpdateDataInteractionOperationToOperation:forSession:]
  -[_SFReaderController createArticleFinder]
  -[_SFReaderController stopLoadingNextPage]
  -[_SFReaderController isReaderAvailable]
  -[_SFReaderController increaseReaderTextSize]
  -[_SFReaderController decreaseReaderTextSize]
  -[_SFReaderController didDetermineReaderAvailability:]
  -[_SFReaderController collectArticleContent]
  -[_SFReaderController collectReadingListInfoWithBookmarkID:completionHandler:]
  -[_SFReaderController _webView:dataInteraction:session:didEndWithOperation:]
  -[_SFReaderController contentIsReady]
  -[_SFReaderController setReaderInitialTopScrollOffset:configuration:isViewingArchive:scrollOffsetDictionary:]
  -[_SFReaderController didPrepareReaderContentForPrinting:]
  -[_SFReaderController didFinishPresentationUpdateAfterTransitioningToReader]
  -[_SFReaderController canDecreaseReaderTextSize]
  -[_SFReaderController sendConfigurationToWebProcess]
  -[_SFReaderController resetReaderTextSize]
  -[_SFReaderController didCollectReaderContentForMail:]
  -[_SFReaderController clearAvailability]
  -[_SFReaderController _webView:contextMenuForElement:willCommitWithAnimator:]
  -[_SFReaderController _webView:getAlternateURLFromImage:completionHandler:]
  -[_SFReaderController _webView:shouldIncludeAppLinkActionsForElement:]
  -[_SFReaderController didDetermineReaderAvailabilityForDynamicCheck:]
  -[_SFReaderController activateFont:]
  -[_SFReaderController didSetReaderConfiguration:]
  -[_SFReaderController setReaderIsActive:]
  -[_SFReaderController readerWebView]
  -[_SFReaderController webView:decidePolicyForNavigationAction:decisionHandler:]
  -[_SFReaderController deactivateReaderNow:]
  -[_SFReaderController _performActionsDelayedUntilReaderWebViewIsReadyDidTimeout:]
  -[_SFReaderController collectReaderContentForMailWithCompletion:]
  -[_SFReaderController observeValueForKeyPath:ofObject:change:context:]
  -[_SFReaderController _webView:actionsForElement:defaultActions:]
  -[_SFReaderController _collectReaderContentForMailWithCompletion:]
  -[_SFReaderController readerControllerProxy]
  -[_SFReaderController activateReader]
  -[_SFReaderController _sendReaderAvailabilityNotificationForState:reason:]
  -[_SFReaderController didCreateReaderWebView:]
  -[_SFReaderController canIncreaseReaderTextSize]
  -[_SFReaderController _saveConfigurationAndSendToWebProcess]
  -[_SFReaderController readerURL]
  -[_SFReaderController _webView:contextMenuConfigurationForElement:completionHandler:]
  -[_SFReaderController owningWebViewDidCommitNavigation]
  -[_SFReaderController checkReaderAvailability]
  -[_SFReaderController webViewUIDelegate]
  -[_SFReaderController _webView:contextMenuWillPresentForElement:]
  -[_SFReaderController setDelegate:]
  -[_SFReaderController _webView:performDataInteractionOperationWithItemProviders:]
  -[_SFReaderController setReaderInitialTopScrollOffset:configuration:isViewingArchive:]
  -[_SFReaderController initWithWebView:]
  -[_SFReaderController clearUnusedReaderResourcesSoon]
  -[_SFReaderController _updateJavaScriptEnabled]
  -[_SFReaderController invalidate]
  -[_SFReaderController _webView:dataInteraction:sessionWillBegin:]
  -[_SFReaderController delegate]
  -[_SFReaderController isLoadingNextPage]
  -[_SFReaderController _webView:dataInteractionOperationWasHandled:forSession:itemProviders:]
  -[_SFReaderController scrollPositionInformation]
  -[_SFReaderController _readerWebViewIsReady]
  -[_SFReaderController contentDidBecomeReadyWithDetectedLanguage:]
  -[_SFReaderController _performActionsDelayedUntilReaderWebViewIsReady]
  -[_SFReaderController didCollectReadingListItemInfo:bookmarkID:]
  -[_SFReaderController didCollectArticleContent:]


SFToolbarContainer : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[SFToolbarContainer .cxx_destruct]
  -[SFToolbarContainer hitTest:withEvent:]
  -[SFToolbarContainer layoutSubviews]


SFBarRegistration : UIResponder /System/Library/PrivateFrameworks/WebUI.framework/WebUI <_SFBarRegistrationToken>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFBarRegistration _arrangedBarItemsNeedUpdate]
  -[SFBarRegistration canPerformAction:withSender:]
  -[SFBarRegistration setBarItem:enabled:]
  -[SFBarRegistration _barItemForUIBarButtonItem:]
  -[SFBarRegistration initWithBar:barManager:layout:persona:]
  -[SFBarRegistration _itemReceivedLongPress:]
  -[SFBarRegistration .cxx_destruct]
  -[SFBarRegistration pulseDownloadsItem]
  -[SFBarRegistration setBookmarksItemSelected:]
  -[SFBarRegistration UIBarButtonItemForItem:]
  -[SFBarRegistration setBarItem:hidden:]
  -[SFBarRegistration _itemReceivedTap:]
  -[SFBarRegistration _itemReceivedTouchDown:]
  -[SFBarRegistration _UIBarButtonItemsForArrangedBarItems:]
  -[SFBarRegistration _effectiveArrangedBarItems]
  -[SFBarRegistration popoverSourceInfoForItem:]
  -[SFBarRegistration setDownloadsItemProgress:]
  -[SFBarRegistration _UIBarButtonItemForBarItem:]
  -[SFBarRegistration containsBarItem:]
  -[SFBarRegistration updateArrangedUIBarButtonItemsIfNeeded]
  -[SFBarRegistration _newBarButtonItemForSFBarItem:]


SFStartPageBookmarkFolderDataSource : NSObject /usr/lib/libc++.1.dylib <SFStartPageCollectionDataSource, _SFStartPageDataSourceObserving>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFStartPageBookmarkFolderDataSource .cxx_destruct]
  -[SFStartPageBookmarkFolderDataSource _reloadFolder]
  -[SFStartPageBookmarkFolderDataSource reloadDataAnimatingDifferences:]
  -[SFStartPageBookmarkFolderDataSource sectionsForStartPageCollectionViewController:]
  -[SFStartPageBookmarkFolderDataSource startPageCollectionViewController:toggleSectionExpanded:]
  -[SFStartPageBookmarkFolderDataSource startPageCollectionViewController:isSectionExpanded:]
  -[SFStartPageBookmarkFolderDataSource initWithReloadHandler:]
  -[SFStartPageBookmarkFolderDataSource titleForStartPageCollectionViewController:]
  -[SFStartPageBookmarkFolderDataSource connectToViewController:]


_SFFormAutoFillController : NSObject /usr/lib/libc++.1.dylib <SFCredentialProviderExtensionManagerObserver, _SFAutoFillInputViewDelegate, SFFormMetadataObserver, _SFAuthenticationClient>
 @property  UIView<WBUFormAutoFillWebView> *webView
 @property  BOOL metadataCorrectionsEnabled
 @property  _SFAuthenticationContext *authenticationContext
 @property  SFAppAutoFillOneTimeCodeProvider *oneTimeCodeProvider
 @property  CNContact *lastFilledContact
 @property  WBSCreditCardData *lastFilledCreditCardData
 @property  NSSet *lastFilledCreditCardDataTypes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFFormAutoFillController _filterAndSortCredentialIdentities:pageURL:exactMatchesOnly:]
  +[_SFFormAutoFillController _getExternalLoginCredentialSuggestionsForDomains:completion:]
  +[_SFFormAutoFillController _getExternalLoginCredentialSuggestionsForDomains:pageURL:completion:]

  // instance methods
  -[_SFFormAutoFillController webView]
  -[_SFFormAutoFillController insertTextSuggestion:]
  -[_SFFormAutoFillController _restoreInputAssistantItemsIfNecessary]
  -[_SFFormAutoFillController didFillGeneratedPasswordInForm:inFrame:]
  -[_SFFormAutoFillController beginAutomaticPasswordInteractionWithInputSession:]
  -[_SFFormAutoFillController _fieldFocused:inForm:inFrame:inputSession:]
  -[_SFFormAutoFillController authenticationCustomUIProgressObserverForContext:]
  -[_SFFormAutoFillController autoFill]
  -[_SFFormAutoFillController lastFilledCreditCardData]
  -[_SFFormAutoFillController _showingAutoFillInputView]
  -[_SFFormAutoFillController _hideInputAssistantItemsIfNecessary]
  -[_SFFormAutoFillController authenticationContext]
  -[_SFFormAutoFillController _removeUniqueIDsOfAutoFilledForm:]
  -[_SFFormAutoFillController automaticPasswordForPasswordField:inForm:isFrame:]
  -[_SFFormAutoFillController didRemoveAutomaticStrongPasswordInForm:inputSessionUserObject:inFrame:]
  -[_SFFormAutoFillController _prefillTimerFired:]
  -[_SFFormAutoFillController dealloc]
  -[_SFFormAutoFillController authenticateForAutoFillAuthenticationType:withCompletion:]
  -[_SFFormAutoFillController didCollectURLsForPreFilling:atURL:]
  -[_SFFormAutoFillController autoFillDidFinishWithUpdatedFormMetadata:inFrame:shouldSubmit:]
  -[_SFFormAutoFillController .cxx_destruct]
  -[_SFFormAutoFillController passwordFieldFocused:inForm:inFrame:inputSession:]
  -[_SFFormAutoFillController _didFocusSensitiveFormField]
  -[_SFFormAutoFillController textFieldFocused:inForm:inFrame:inputSession:]
  -[_SFFormAutoFillController willNavigateFrame:withUnsubmittedForm:]
  -[_SFFormAutoFillController credentialProviderExtensionManagerExtensionListDidChange:]
  -[_SFFormAutoFillController setLastFilledCreditCardDataTypes:]
  -[_SFFormAutoFillController annotateForm:inFrame:withValues:]
  -[_SFFormAutoFillController metadataCorrectionsEnabled]
  -[_SFFormAutoFillController textDidChangeInTextField:inForm:inFrame:]
  -[_SFFormAutoFillController displayMessageAsTitleForContext:]
  -[_SFFormAutoFillController _simulatedWebEventForReturnKeyWithType:]
  -[_SFFormAutoFillController usernameFieldFocused:inForm:inFrame:inputSession:]
  -[_SFFormAutoFillController passcodePromptForContext:]
  -[_SFFormAutoFillController _authenticateForAutoFillForHighLevelDomain:withCompletion:]
  -[_SFFormAutoFillController fieldDidFocusWithInputSession:]
  -[_SFFormAutoFillController setMetadataCorrectionsEnabled:]
  -[_SFFormAutoFillController _dismissKeyboardAndSimulateCarriageReturnKeyEvents:]
  -[_SFFormAutoFillController removeAutomaticPasswordVisualTreatment]
  -[_SFFormAutoFillController prefillFormsSoonIfNeeded]
  -[_SFFormAutoFillController autoFillOneTimeCodeFieldsInFrame:withValue:]
  -[_SFFormAutoFillController autoFillFormInFrame:withValues:setAutoFilled:focusFieldAfterFilling:fieldToFocus:submitForm:]
  -[_SFFormAutoFillController updateSuggestions]
  -[_SFFormAutoFillController setLastFilledCreditCardData:]
  -[_SFFormAutoFillController initWithWebView:delegate:]
  -[_SFFormAutoFillController elementIsBeingFocusedForStreamlinedLogin:]
  -[_SFFormAutoFillController oneTimeCodeProvider]
  -[_SFFormAutoFillController willSubmitFormValues:userObject:submissionHandler:]
  -[_SFFormAutoFillController fetchMetadataForTextField:inFrame:withCompletion:]
  -[_SFFormAutoFillController fieldWillFocusWithInputSession:]
  -[_SFFormAutoFillController removeAutomaticPasswordButtonInitiatedByUser:]
  -[_SFFormAutoFillController didCollectFormMetadataForPreFilling:atURL:ancestorFramesOfFormToPreFill:]
  -[_SFFormAutoFillController shouldShowIconsInPasswordPicker]
  -[_SFFormAutoFillController fillTextField:inFrame:withGeneratedPassword:]
  -[_SFFormAutoFillController fieldFocusedWithInputSession:]
  -[_SFFormAutoFillController lastFilledCreditCardDataTypes]
  -[_SFFormAutoFillController lastFilledContact]
  -[_SFFormAutoFillController willSubmitForm:inFrame:submissionHandler:]
  -[_SFFormAutoFillController setFormControls:areAutoFilled:andClearField:inFrame:]
  -[_SFFormAutoFillController authenticationMessageForContext:]
  -[_SFFormAutoFillController autoFillInputViewDidSelectUseKeyboard:]
  -[_SFFormAutoFillController invalidate]
  -[_SFFormAutoFillController autoFillInputViewDidSelectMorePasswords:]
  -[_SFFormAutoFillController autoFillForm:inFrame:withGeneratedPassword:]
  -[_SFFormAutoFillController offerToSaveUnsubmittedFormDataIfNeeded]
  -[_SFFormAutoFillController automaticPasswordSheetDismissed]
  -[_SFFormAutoFillController didUpdateUnsubmittedForm:inFrame:]
  -[_SFFormAutoFillController prepareForShowingAutomaticStrongPasswordWithInputSession:]
  -[_SFFormAutoFillController _beginAutomaticPasswordInteractionWithInputSession:generatedPassword:ignorePreviousDecision:]
  -[_SFFormAutoFillController setLastFilledContact:]
  -[_SFFormAutoFillController _websiteForAuthenticationPrompt]
  -[_SFFormAutoFillController _fieldFocusedWithInputSession:]
  -[_SFFormAutoFillController _addUniqueIDsOfAutoFilledForm:]
  -[_SFFormAutoFillController _removeAutomaticPasswordButtonInitiatedByUser:removeVisualTreatmentOnly:]
  -[_SFFormAutoFillController _preFillDisabledHosts]
  -[_SFFormAutoFillController beginAutomaticPasswordInteractionWithInputSession:generatedPassword:]


SFDialogContentView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UITextFieldDelegate, UITableViewDataSource, UITableViewDelegate>
 @property  _SFDialogView *dialogView
 @property  NSArray *actions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFDialogContentView becomeFirstResponder]
  -[SFDialogContentView actions]
  -[SFDialogContentView canPerformAction:withSender:]
  -[SFDialogContentView setActions:]
  -[SFDialogContentView initWithFrame:]
  -[SFDialogContentView setTitleText:]
  -[SFDialogContentView tableView:numberOfRowsInSection:]
  -[SFDialogContentView tableView:didSelectRowAtIndexPath:]
  -[SFDialogContentView didAppear]
  -[SFDialogContentView updateConstraints]
  -[SFDialogContentView endEditing]
  -[SFDialogContentView .cxx_destruct]
  -[SFDialogContentView canBecomeFirstResponder]
  -[SFDialogContentView tableView:cellForRowAtIndexPath:]
  -[SFDialogContentView traitCollectionDidChange:]
  -[SFDialogContentView _updateActionButtons]
  -[SFDialogContentView keyCommands]
  -[SFDialogContentView textFieldShouldReturn:]
  -[SFDialogContentView _returnAction:]
  -[SFDialogContentView setMessageText:]
  -[SFDialogContentView _actionTriggered:]
  -[SFDialogContentView setInputText:placeholder:]
  -[SFDialogContentView setPasswordText:placeholder:]
  -[SFDialogContentView setTableViewRows:didSelectRowAction:]
  -[SFDialogContentView _optionReturnAction:]
  -[SFDialogContentView _escapeAction:]
  -[SFDialogContentView _focusInputTextField:]
  -[SFDialogContentView _desiredButtonsWidth]
  -[SFDialogContentView _setText:placeholder:forTextField:]
  -[SFDialogContentView _usesLoginFormAppearance]
  -[SFDialogContentView dialogView]
  -[SFDialogContentView layoutSubviews]
  -[SFDialogContentView initWithCoder:]
  -[SFDialogContentView _invokeDelegateWithSelectedIndex:]
  -[SFDialogContentView setDialogView:]


_SFFaviconProvider : WBSFaviconProvider /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // instance methods
  -[_SFFaviconProvider .cxx_destruct]
  -[_SFFaviconProvider initWithPersistenceBaseURL:persistenceName:preferredIconSize:atScale:allScales:isReadOnly:shouldCheckIntegrityWhenOpeningDatabaseBlock:]
  -[_SFFaviconProvider fallbackIconForRequest:]


_SFActivityItemProvider : UIActivityItemProvider /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  NSURL *url
 @property  NSString *pageTitle
 @property  NSSet *excludedActivityTypes
 @property  @? thumbnailHandler
 @property  WKWebView *webView

  // instance methods
  -[_SFActivityItemProvider webView]
  -[_SFActivityItemProvider item]
  -[_SFActivityItemProvider activityViewController:thumbnailImageForActivityType:suggestedSize:]
  -[_SFActivityItemProvider url]
  -[_SFActivityItemProvider main]
  -[_SFActivityItemProvider initWithPlaceholderItem:URL:pageTitle:webView:]
  -[_SFActivityItemProvider setPageTitle:]
  -[_SFActivityItemProvider thumbnailHandler]
  -[_SFActivityItemProvider setThumbnailHandler:]
  -[_SFActivityItemProvider activityViewController:subjectForActivityType:]
  -[_SFActivityItemProvider .cxx_destruct]
  -[_SFActivityItemProvider activityViewController:itemForActivityType:]
  -[_SFActivityItemProvider setUrl:]
  -[_SFActivityItemProvider setWebView:]
  -[_SFActivityItemProvider initWithURL:pageTitle:webView:]
  -[_SFActivityItemProvider pageTitle]
  -[_SFActivityItemProvider excludedActivityTypes]
  -[_SFActivityItemProvider initWithPlaceholderItem:]
  -[_SFActivityItemProvider activityViewControllerPlaceholderItem:]
  -[_SFActivityItemProvider setExcludedActivityTypes:]


_SFActivityExtensionItemProvider : _SFActivityItemProvider
 @property  NSExtensionItem *extensionItem

  // instance methods
  -[_SFActivityExtensionItemProvider item]
  -[_SFActivityExtensionItemProvider extensionItem]
  -[_SFActivityExtensionItemProvider initWithExtensionItem:URL:pageTitle:webView:]
  -[_SFActivityExtensionItemProvider setExtensionItem:]
  -[_SFActivityExtensionItemProvider .cxx_destruct]
  -[_SFActivityExtensionItemProvider _itemForActivityType:]
  -[_SFActivityExtensionItemProvider activityViewController:itemForActivityType:]


SFPasswordRemoteViewController : _UIRemoteViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFPasswordRemoteViewControllerProtocol>
 @property  <SFPasswordRemoteViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFPasswordRemoteViewController exportedInterface]
  +[SFPasswordRemoteViewController passwordServiceViewControllerName]
  +[SFPasswordRemoteViewController requestViewControllerWithConnectionHandler:]

  // instance methods
  -[SFPasswordRemoteViewController .cxx_destruct]
  -[SFPasswordRemoteViewController willDismissServiceViewController]
  -[SFPasswordRemoteViewController setDelegate:]
  -[SFPasswordRemoteViewController delegate]
  -[SFPasswordRemoteViewController viewServiceDidTerminateWithError:]


_SFWebAppMediaCaptureStatusBarManager : _SFMediaCaptureStatusBarManager
  // instance methods
  -[_SFWebAppMediaCaptureStatusBarManager overrideStyleForAudioOnly:]
  -[_SFWebAppMediaCaptureStatusBarManager statusFormatString]


SFPrivacyReportTrackerDetailViewController : UITableViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[SFPrivacyReportTrackerDetailViewController viewDidLoad]
  -[SFPrivacyReportTrackerDetailViewController tableView:numberOfRowsInSection:]
  -[SFPrivacyReportTrackerDetailViewController viewLayoutMarginsDidChange]
  -[SFPrivacyReportTrackerDetailViewController _updateHeaderSize]
  -[SFPrivacyReportTrackerDetailViewController .cxx_destruct]
  -[SFPrivacyReportTrackerDetailViewController tableView:titleForHeaderInSection:]
  -[SFPrivacyReportTrackerDetailViewController tableView:cellForRowAtIndexPath:]
  -[SFPrivacyReportTrackerDetailViewController traitCollectionDidChange:]
  -[SFPrivacyReportTrackerDetailViewController tableView:shouldHighlightRowAtIndexPath:]
  -[SFPrivacyReportTrackerDetailViewController initWithTracker:]


_SFReaderExtractedData : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *title
 @property  NSString *author
 @property  NSString *publishedDate
 @property  NSData *body
 @property  NSURL *mainImageURL
 @property  NSURL *url

  // class methods
  +[_SFReaderExtractedData supportsSecureCoding]

  // instance methods
  -[_SFReaderExtractedData author]
  -[_SFReaderExtractedData copyWithZone:]
  -[_SFReaderExtractedData url]
  -[_SFReaderExtractedData _initWithAuthor:body:publishedDate:title:mainImageURL:url:]
  -[_SFReaderExtractedData initWithReaderContent:url:]
  -[_SFReaderExtractedData publishedDate]
  -[_SFReaderExtractedData mainImageURL]
  -[_SFReaderExtractedData .cxx_destruct]
  -[_SFReaderExtractedData encodeWithCoder:]
  -[_SFReaderExtractedData title]
  -[_SFReaderExtractedData body]
  -[_SFReaderExtractedData initWithCoder:]


_SFUserMediaPermissionController : WBSUserMediaPermissionController /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // instance methods
  -[_SFUserMediaPermissionController _didRetrieveUserMediaPermission:forDevices:url:mainFrameURL:decisionHandler:dialogPresenter:]
  -[_SFUserMediaPermissionController savePendingChanges]
  -[_SFUserMediaPermissionController requestUserMediaAuthorizationForDevices:url:mainFrameURL:decisionHandler:dialogPresenter:]
  -[_SFUserMediaPermissionController coalescedAsynchronousWriter:didFinishWritingData:]


SFAuthenticationViewController : SFSafariViewController <UIViewControllerTransitioningDelegate>
 @property  @? dismissCompletionHandler
 @property  <SFAuthenticationViewControllerPresentationDelegate> *presentationDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFAuthenticationViewController presentationDelegate]
  -[SFAuthenticationViewController setPresentationDelegate:]
  -[SFAuthenticationViewController .cxx_destruct]
  -[SFAuthenticationViewController _presentViewController]
  -[SFAuthenticationViewController _restartServiceViewController]
  -[SFAuthenticationViewController remoteViewController:hostApplicationOpenURL:]
  -[SFAuthenticationViewController remoteViewController:didDecideCookieSharingForURL:shouldCancel:]
  -[SFAuthenticationViewController dismissCompletionHandler]
  -[SFAuthenticationViewController setDismissCompletionHandler:]
  -[SFAuthenticationViewController dismissViewControllerAnimated:completion:]
  -[SFAuthenticationViewController initWithURL:callbackURLScheme:usingEphemeralSession:presentationContextWindow:]
  -[SFAuthenticationViewController setDefersAddingRemoteViewController:]


SFContactAutoFillPropertyValues : NSObject /usr/lib/libc++.1.dylib
 @property  long long selectedIndex
 @property  SFContactAutoFillValue *selectedValue
 @property  NSArray *values
 @property  NSString *property

  // instance methods
  -[SFContactAutoFillPropertyValues values]
  -[SFContactAutoFillPropertyValues .cxx_destruct]
  -[SFContactAutoFillPropertyValues initWithValues:property:]
  -[SFContactAutoFillPropertyValues property]
  -[SFContactAutoFillPropertyValues selectedValue]
  -[SFContactAutoFillPropertyValues selectedIndex]
  -[SFContactAutoFillPropertyValues setSelectedIndex:]


SFFeatureManager : WBUFeatureManager /System/Library/Frameworks/Foundation.framework/Foundation
  // class methods
  +[SFFeatureManager sharedFeatureManager]


_SFPopoverSizingTableViewController : UITableViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  long long minimumNumberOfRows
 @property  long long maximumNumberOfRows
 @property  BOOL hasTranslucentAppearance

  // class methods
  +[_SFPopoverSizingTableViewController initialize]
  +[_SFPopoverSizingTableViewController tableViewCellForSizeEstimation]
  +[_SFPopoverSizingTableViewController caculateHeightForTableView:targetGlobalRow:outGlobalRow:]

  // instance methods
  -[_SFPopoverSizingTableViewController willMoveToParentViewController:]
  -[_SFPopoverSizingTableViewController tableViewSpacingForExtraSeparators:]
  -[_SFPopoverSizingTableViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[_SFPopoverSizingTableViewController .cxx_destruct]
  -[_SFPopoverSizingTableViewController didMoveToParentViewController:]
  -[_SFPopoverSizingTableViewController minimumNumberOfRows]
  -[_SFPopoverSizingTableViewController _updateTranslucentAppearanceIfNeeded]
  -[_SFPopoverSizingTableViewController _needsTranslucentAppearanceUpdate]
  -[_SFPopoverSizingTableViewController updateTranslucentAppearance]
  -[_SFPopoverSizingTableViewController hasTranslucentAppearance]
  -[_SFPopoverSizingTableViewController backgroundColorUsingTranslucentAppearance:]
  -[_SFPopoverSizingTableViewController cancelPopoverKeyPressed]
  -[_SFPopoverSizingTableViewController preferredContentSize]
  -[_SFPopoverSizingTableViewController traitCollectionDidChange:]
  -[_SFPopoverSizingTableViewController viewDidAppear:]
  -[_SFPopoverSizingTableViewController updatePreferredContentSize]
  -[_SFPopoverSizingTableViewController maximumNumberOfRows]
  -[_SFPopoverSizingTableViewController keyCommands]
  -[_SFPopoverSizingTableViewController _backgroundBlurEffect]
  -[_SFPopoverSizingTableViewController viewWillAppear:]
  -[_SFPopoverSizingTableViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[_SFPopoverSizingTableViewController viewDidLayoutSubviews]


SFBrowserPersonaAnalyticsHelper : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SFBrowserPersonaAnalyticsHelper initWithPersona:]
  -[SFBrowserPersonaAnalyticsHelper didTapToolbarButton:]
  -[SFBrowserPersonaAnalyticsHelper didLongTapToolbarButton:]
  -[SFBrowserPersonaAnalyticsHelper didDismissWithMethod:]
  -[SFBrowserPersonaAnalyticsHelper didPresentFromHostApp:]


_SFToolbar : UIToolbar /System/Library/PrivateFrameworks/WebUI.framework/WebUI <_SFBarCommon, _SFBarRegistrationObserving>
 @property  long long placement
 @property  NSString *backdropGroupName
 @property  _SFBarTheme *theme
 @property  BOOL usesLegacyDarkBackdrop
 @property  <_SFBarRegistrationToken> *barRegistration
 @property  UIView *superviewOwningLayout
 @property  double baselineOffsetAdjustment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFToolbar backdropGroupName]
  -[_SFToolbar animateSafariIconLinkFromPoint:inView:]
  -[_SFToolbar setBackdropGroupName:]
  -[_SFToolbar animateLinkImage:fromRect:inView:toBarItem:afterImageDisappearsBlock:afterDestinationLayerBouncesBlock:]
  -[_SFToolbar didChangeArrangedBarItems:]
  -[_SFToolbar isMinibar]
  -[_SFToolbar setBarRegistration:]
  -[_SFToolbar dealloc]
  -[_SFToolbar .cxx_destruct]
  -[_SFToolbar popoverSourceInfoForBarItem:]
  -[_SFToolbar setTheme:]
  -[_SFToolbar setUsesLegacyDarkBackdrop:]
  -[_SFToolbar usesLegacyDarkBackdrop]
  -[_SFToolbar _updateBackgroundViewEffects]
  -[_SFToolbar _contentMargin]
  -[_SFToolbar initWithPlacement:]
  -[_SFToolbar sizeThatFits:]
  -[_SFToolbar theme]
  -[_SFToolbar didCompleteBarRegistrationWithToken:]
  -[_SFToolbar baselineOffsetAdjustment]
  -[_SFToolbar setSuperviewOwningLayout:]
  -[_SFToolbar barRegistration]
  -[_SFToolbar _cancelLinkAnimations]
  -[_SFToolbar placement]
  -[_SFToolbar layoutSubviews]
  -[_SFToolbar superviewOwningLayout]
  -[_SFToolbar setItems:animated:]


_SFTranslationTargetLocaleAlertController : UIAlertController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <_SFTranslationTargetLocaleAlertControllerDelegate>
 @property  NSMutableDictionary *localeIdentifierToAlertActionMap
 @property  <_SFTranslationTargetLocaleAlertControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFTranslationTargetLocaleAlertController translationAlertControllerWithDelegate:localeIdentifiers:]

  // instance methods
  -[_SFTranslationTargetLocaleAlertController .cxx_destruct]
  -[_SFTranslationTargetLocaleAlertController _setUpWithLocaleIdentifiers:]
  -[_SFTranslationTargetLocaleAlertController translationAlertController:didSelectLocale:]
  -[_SFTranslationTargetLocaleAlertController translationAlertController:validateTargetLocale:completionHandler:]
  -[_SFTranslationTargetLocaleAlertController _translationAvailabilityDidChange:]
  -[_SFTranslationTargetLocaleAlertController translationAvailabilityDidChange]
  -[_SFTranslationTargetLocaleAlertController setDelegate:]
  -[_SFTranslationTargetLocaleAlertController initWithTranslationContext:]
  -[_SFTranslationTargetLocaleAlertController configurePopoverWithSourceInfo:]
  -[_SFTranslationTargetLocaleAlertController localeIdentifierToAlertActionMap]
  -[_SFTranslationTargetLocaleAlertController setLocaleIdentifierToAlertActionMap:]
  -[_SFTranslationTargetLocaleAlertController delegate]


_SFTranslationTargetLocaleAlertActionContentViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[_SFTranslationTargetLocaleAlertActionContentViewController viewDidLoad]
  -[_SFTranslationTargetLocaleAlertActionContentViewController initWithLocaleIdentifier:]
  -[_SFTranslationTargetLocaleAlertActionContentViewController .cxx_destruct]
  -[_SFTranslationTargetLocaleAlertActionContentViewController traitCollectionDidChange:]
  -[_SFTranslationTargetLocaleAlertActionContentViewController _updateVerticalPadding]
  -[_SFTranslationTargetLocaleAlertActionContentViewController loadView]


_SFTranslationTargetLocaleAlertActionContentView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  UILabel *titleLabel

  // instance methods
  -[_SFTranslationTargetLocaleAlertActionContentView setTitleLabel:]
  -[_SFTranslationTargetLocaleAlertActionContentView titleLabel]
  -[_SFTranslationTargetLocaleAlertActionContentView .cxx_destruct]
  -[_SFTranslationTargetLocaleAlertActionContentView tintColorDidChange]


_SFContactPreviewViewController : UINavigationController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[_SFContactPreviewViewController _done:]
  -[_SFContactPreviewViewController dealloc]
  -[_SFContactPreviewViewController .cxx_destruct]
  -[_SFContactPreviewViewController _presentActivityViewController:]
  -[_SFContactPreviewViewController initWithFilePath:sourceURL:deleteFileWhenDone:beforeDismissHandler:]
  -[_SFContactPreviewViewController viewWillDisappear:]


_SFOpenURLOperationDelegate : NSObject /usr/lib/libc++.1.dylib <LSOpenResourceOperationDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFOpenURLOperationDelegate openResourceOperationDidComplete:]
  -[_SFOpenURLOperationDelegate openResourceOperation:didFinishCopyingResource:]
  -[_SFOpenURLOperationDelegate openResourceOperation:didFailWithError:]
  -[_SFOpenURLOperationDelegate .cxx_destruct]
  -[_SFOpenURLOperationDelegate initWithCompletionHandler:]
  -[_SFOpenURLOperationDelegate _didFinishWithSuccess:]


SFAuthenticatorDialog : _SFDialog <_SFAuthenticatorDialog>
 @property  NSString *title
 @property  NSString *message
 @property  NSArray *actions
 @property  _WKWebAuthenticationPanel *panel
 @property  BOOL isForUpdateOnly

  // instance methods
  -[SFAuthenticatorDialog transitionToState:]
  -[SFAuthenticatorDialog actions]
  -[SFAuthenticatorDialog message]
  -[SFAuthenticatorDialog setActions:]
  -[SFAuthenticatorDialog presentationStyle]
  -[SFAuthenticatorDialog panel]
  -[SFAuthenticatorDialog setMessage:]
  -[SFAuthenticatorDialog dealloc]
  -[SFAuthenticatorDialog .cxx_destruct]
  -[SFAuthenticatorDialog _shake]
  -[SFAuthenticatorDialog useSecurityKeyAction]
  -[SFAuthenticatorDialog triggerUseSecurityKey]
  -[SFAuthenticatorDialog updateWebAuthenticationPanel:]
  -[SFAuthenticatorDialog requestPINWithRemainingRetries:completionHandler:]
  -[SFAuthenticatorDialog selectAssertionResponse:source:completionHandler:]
  -[SFAuthenticatorDialog isForUpdateOnly]
  -[SFAuthenticatorDialog setIsForUpdateOnly:]
  -[SFAuthenticatorDialog decidePolicyForLocalAuthenticatorWithCompletionHandler:]
  -[SFAuthenticatorDialog initWithPanel:]
  -[SFAuthenticatorDialog newDialogViewRepresentation]
  -[SFAuthenticatorDialog didCompleteWithResponse:]
  -[SFAuthenticatorDialog setTitle:]
  -[SFAuthenticatorDialog title]
  -[SFAuthenticatorDialog _didSelectRow:]


SFPrivacyReportGridView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, SFPrivacyReportGridItemDelegate>
 @property  NSArray *itemViews
 @property  <SFPrivacyReportGridViewDelegate> *delegate
 @property  double interItemSpacing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFPrivacyReportGridView collectionView:cellForItemAtIndexPath:]
  -[SFPrivacyReportGridView layoutMarginsDidChange]
  -[SFPrivacyReportGridView init]
  -[SFPrivacyReportGridView collectionView:numberOfItemsInSection:]
  -[SFPrivacyReportGridView collectionView:layout:sizeForItemAtIndexPath:]
  -[SFPrivacyReportGridView initWithFrame:]
  -[SFPrivacyReportGridView invalidateIntrinsicContentSize]
  -[SFPrivacyReportGridView .cxx_destruct]
  -[SFPrivacyReportGridView itemViews]
  -[SFPrivacyReportGridView updateInterItemSpacing]
  -[SFPrivacyReportGridView didUpdateInterItemSpacing:]
  -[SFPrivacyReportGridView itemViewCanUseCompactWidth:]
  -[SFPrivacyReportGridView _gridPositionForItemAtIndexPath:]
  -[SFPrivacyReportGridView _rebuildRowLayoutInfoIfNeeded]
  -[SFPrivacyReportGridView itemDidChangeContentSize:]
  -[SFPrivacyReportGridView setItemViews:]
  -[SFPrivacyReportGridView intrinsicContentSize]
  -[SFPrivacyReportGridView interItemSpacing]
  -[SFPrivacyReportGridView traitCollectionDidChange:]
  -[SFPrivacyReportGridView setDelegate:]
  -[SFPrivacyReportGridView delegate]
  -[SFPrivacyReportGridView layoutSubviews]


SFPrivacyReportGridItemCell : UICollectionViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  UIView *reportView

  // instance methods
  -[SFPrivacyReportGridItemCell .cxx_destruct]
  -[SFPrivacyReportGridItemCell setReportView:]
  -[SFPrivacyReportGridItemCell reportView]


SFPrivacyReportGridRowLayoutInfo : NSObject /usr/lib/libc++.1.dylib
 @property  long long row
 @property  {_NSRange=QQ} itemRange
 @property  double height

  // instance methods
  -[SFPrivacyReportGridRowLayoutInfo setHeight:]
  -[SFPrivacyReportGridRowLayoutInfo row]
  -[SFPrivacyReportGridRowLayoutInfo initWithRow:itemRange:]
  -[SFPrivacyReportGridRowLayoutInfo height]
  -[SFPrivacyReportGridRowLayoutInfo itemRange]


SFPrivacyReportGridTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  SFPrivacyReportGridView *gridView

  // instance methods
  -[SFPrivacyReportGridTableViewCell gridView]
  -[SFPrivacyReportGridTableViewCell initWithStyle:reuseIdentifier:]
  -[SFPrivacyReportGridTableViewCell setGridView:]
  -[SFPrivacyReportGridTableViewCell .cxx_destruct]


_SFWebAppServiceViewController : SFBrowserServiceViewController <SFWebAppServiceViewControllerProtocol, _SFMediaRecordingDocument>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL canOverrideStatusBar
 @property  BOOL audioOnly
 @property  NSString *URLString

  // class methods
  +[_SFWebAppServiceViewController _remoteViewControllerInterface]
  +[_SFWebAppServiceViewController _exportedInterface]

  // instance methods
  -[_SFWebAppServiceViewController viewDidLoad]
  -[_SFWebAppServiceViewController setNeedsStatusBarAppearanceUpdate]
  -[_SFWebAppServiceViewController URLString]
  -[_SFWebAppServiceViewController preferredStatusBarStyle]
  -[_SFWebAppServiceViewController processPool]
  -[_SFWebAppServiceViewController dealloc]
  -[_SFWebAppServiceViewController .cxx_destruct]
  -[_SFWebAppServiceViewController _persona]
  -[_SFWebAppServiceViewController _hostApplicationDidEnterBackground]
  -[_SFWebAppServiceViewController websiteDataStore]
  -[_SFWebAppServiceViewController canOverrideStatusBar]
  -[_SFWebAppServiceViewController canPrint]
  -[_SFWebAppServiceViewController webAppDidBecomeActive]
  -[_SFWebAppServiceViewController audioOnly]
  -[_SFWebAppServiceViewController setMediaStateIcon:]
  -[_SFWebAppServiceViewController muteMediaCapture]
  -[_SFWebAppServiceViewController statusBarIndicatorTappedWithCompletionHandler:]
  -[_SFWebAppServiceViewController loadWebAppWithIdentifier:]
  -[_SFWebAppServiceViewController webAppWillResignActive]
  -[_SFWebAppServiceViewController webViewControllerDidChangeLoadingState:]
  -[_SFWebAppServiceViewController webViewControllerDidFirstVisuallyNonEmptyLayout:]
  -[_SFWebAppServiceViewController webViewController:decidePolicyForNavigationAction:decisionHandler:]
  -[_SFWebAppServiceViewController _isURLOutOfManifestScope:]
  -[_SFWebAppServiceViewController navigationBarDoneButtonWasTapped:]
  -[_SFWebAppServiceViewController _isURLOutOfLegacyScope:withLoginURLExempted:]
  -[_SFWebAppServiceViewController webViewController:didFailProvisionalNavigation:withError:]
  -[_SFWebAppServiceViewController _loadNextFallbackURL]
  -[_SFWebAppServiceViewController webViewController:didFinishNavigation:]
  -[_SFWebAppServiceViewController _fetchApplicationManifestIfNeeded]
  -[_SFWebAppServiceViewController _updateDisplayMode]
  -[_SFWebAppServiceViewController webViewControllerDidChangeURL:]
  -[_SFWebAppServiceViewController _isURLOutOfScope:withLoginURLExempted:]
  -[_SFWebAppServiceViewController _canonicalPageURL]
  -[_SFWebAppServiceViewController websiteDataStoreConfiguration]
  -[_SFWebAppServiceViewController webViewConfiguration]
  -[_SFWebAppServiceViewController setWebViewController:]
  -[_SFWebAppServiceViewController _initialLoadFinishedWithSuccess:]
  -[_SFWebAppServiceViewController _clientIsWebApp]
  -[_SFWebAppServiceViewController _loadWebClipPageURL:]
  -[_SFWebAppServiceViewController _handleHostStateUpdate:]
  -[_SFWebAppServiceViewController _usesScrollToTopView]


_SFAutoFillInputViewButton : UIButton /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[_SFAutoFillInputViewButton intrinsicContentSize]
  -[_SFAutoFillInputViewButton layoutSubviews]


_SFAutoFillInputView : UIInputView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  <_SFAutoFillInputViewDelegate> *delegate

  // instance methods
  -[_SFAutoFillInputView updateConstraints]
  -[_SFAutoFillInputView .cxx_destruct]
  -[_SFAutoFillInputView traitCollectionDidChange:]
  -[_SFAutoFillInputView initWithHostString:credentialSource:suggestion:]
  -[_SFAutoFillInputView setDelegate:]
  -[_SFAutoFillInputView delegate]
  -[_SFAutoFillInputView _updateFillCredentialButtonLabelMetrics]
  -[_SFAutoFillInputView _fillCredential:]
  -[_SFAutoFillInputView _showStandardKeyboard:]
  -[_SFAutoFillInputView _showMorePasswords:]


SFPrivacyReportWebsiteDetailViewController : UITableViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[SFPrivacyReportWebsiteDetailViewController viewDidLoad]
  -[SFPrivacyReportWebsiteDetailViewController tableView:numberOfRowsInSection:]
  -[SFPrivacyReportWebsiteDetailViewController .cxx_destruct]
  -[SFPrivacyReportWebsiteDetailViewController tableView:titleForHeaderInSection:]
  -[SFPrivacyReportWebsiteDetailViewController tableView:cellForRowAtIndexPath:]
  -[SFPrivacyReportWebsiteDetailViewController initWithWebsite:]
  -[SFPrivacyReportWebsiteDetailViewController tableView:shouldHighlightRowAtIndexPath:]


_SFFindOnPageView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI <_SFFindOnPageToolbarDelegate, _WKFindDelegate, UIKeyInput>
 @property  NSString *findString
 @property  unsigned long numberOfFindMatches
 @property  long long highlightedMatchIndex
 @property  WKWebView *webView
 @property  <_SFFindOnPageViewDelegate> *delegate
 @property  BOOL usesNarrowLayout
 @property  BOOL shouldFocusTextField
 @property  BOOL isShowing
 @property  BOOL isFocused
 @property  BOOL shouldDisplayFindNextPreviousInDiscoverabilityHUD
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hasText
 @property  long long autocapitalizationType
 @property  long long autocorrectionType
 @property  long long spellCheckingType
 @property  long long smartQuotesType
 @property  long long smartDashesType
 @property  long long smartInsertDeleteType
 @property  long long keyboardType
 @property  long long keyboardAppearance
 @property  long long returnKeyType
 @property  BOOL enablesReturnKeyAutomatically
 @property  BOOL secureTextEntry
 @property  NSString *textContentType
 @property  UITextInputPasswordRules *passwordRules

  // class methods
  +[_SFFindOnPageView _undefinedNumberOfMatches]
  +[_SFFindOnPageView _undefinedMatchIndex]
  +[_SFFindOnPageView _maximumNumberOfMatches]

  // instance methods
  -[_SFFindOnPageView inputAccessoryView]
  -[_SFFindOnPageView toolbar]
  -[_SFFindOnPageView webView]
  -[_SFFindOnPageView deleteBackward]
  -[_SFFindOnPageView insertText:]
  -[_SFFindOnPageView initWithDelegate:]
  -[_SFFindOnPageView next]
  -[_SFFindOnPageView previous]
  -[_SFFindOnPageView didMoveToSuperview]
  -[_SFFindOnPageView _webView:didCountMatches:forString:]
  -[_SFFindOnPageView hasText]
  -[_SFFindOnPageView _webView:didFailToFindString:]
  -[_SFFindOnPageView _webView:didFindMatches:forString:withMatchIndex:]
  -[_SFFindOnPageView .cxx_destruct]
  -[_SFFindOnPageView prepareFindOnPageWithString:]
  -[_SFFindOnPageView hideFindOnPage]
  -[_SFFindOnPageView prepareFindOnPage]
  -[_SFFindOnPageView _findOptions]
  -[_SFFindOnPageView dismissFindOnPage]
  -[_SFFindOnPageView textForToolbarLabel]
  -[_SFFindOnPageView updateSearchText:]
  -[_SFFindOnPageView hasMatches]
  -[_SFFindOnPageView matchLabelText]
  -[_SFFindOnPageView showFindOnPage]
  -[_SFFindOnPageView selectFindOnPageText]
  -[_SFFindOnPageView findString]
  -[_SFFindOnPageView isShowing]
  -[_SFFindOnPageView _requiresKeyboardWhenFirstResponder]
  -[_SFFindOnPageView _advance:]
  -[_SFFindOnPageView canBecomeFirstResponder]
  -[_SFFindOnPageView takeFindStringFromSelection]
  -[_SFFindOnPageView shouldDisplayFindNextPreviousInDiscoverabilityHUD]
  -[_SFFindOnPageView shouldFocusTextField]
  -[_SFFindOnPageView setShouldFocusTextField:]
  -[_SFFindOnPageView setFindString:]
  -[_SFFindOnPageView numberOfFindMatches]
  -[_SFFindOnPageView setNumberOfFindMatches:]
  -[_SFFindOnPageView setHighlightedMatchIndex:]
  -[_SFFindOnPageView _dismiss:]
  -[_SFFindOnPageView setWebView:]
  -[_SFFindOnPageView updateUI]
  -[_SFFindOnPageView highlightedMatchIndex]
  -[_SFFindOnPageView done]
  -[_SFFindOnPageView keyCommands]
  -[_SFFindOnPageView setUsesNarrowLayout:]
  -[_SFFindOnPageView usesNarrowLayout]
  -[_SFFindOnPageView isFocused]
  -[_SFFindOnPageView delegate]
  -[_SFFindOnPageView findTextField]
  -[_SFFindOnPageView _setFindingInWebViewIfNeeded]


_SFLinkPreviewHelper : NSObject /usr/lib/libc++.1.dylib <_SFAdaptivePreviewViewControllerDelegate>
 @property  _WKActivatedElementInfo *elementInfo
 @property  NSURL *url
 @property  WKWebView *webView
 @property  UIViewController *previewContentViewController
 @property  _SFLinkPreviewHeader *activeLinkPreviewHeader
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFLinkPreviewHelper initialize]
  +[_SFLinkPreviewHelper openInNewTabAnalyticsHandler]
  +[_SFLinkPreviewHelper setOpenInNewTabAnalyticsHandler:]
  +[_SFLinkPreviewHelper contextMenuConfigurationForWebView:elementInfo:handler:]
  +[_SFLinkPreviewHelper linkPreviewHelperForWebView:]
  +[_SFLinkPreviewHelper invalidateLinkPreviewHelperForWebView:]
  +[_SFLinkPreviewHelper previewViewControllerWebView:url:handler:]
  +[_SFLinkPreviewHelper commitPreviewViewController:]

  // instance methods
  -[_SFLinkPreviewHelper webView]
  -[_SFLinkPreviewHelper url]
  -[_SFLinkPreviewHelper dealloc]
  -[_SFLinkPreviewHelper .cxx_destruct]
  -[_SFLinkPreviewHelper initWithWebView:elementInfo:orURL:handler:]
  -[_SFLinkPreviewHelper makeContextMenuConfiguration]
  -[_SFLinkPreviewHelper commitPreviewViewController]
  -[_SFLinkPreviewHelper _previewViewControllerIsLinkPreview]
  -[_SFLinkPreviewHelper invalidateElementInfo]
  -[_SFLinkPreviewHelper menuWithSuggestedActions:]
  -[_SFLinkPreviewHelper makePreviewViewController]
  -[_SFLinkPreviewHelper previewViewControllerForURL:]
  -[_SFLinkPreviewHelper menuElementsForSuggestedActions:]
  -[_SFLinkPreviewHelper activeLinkPreviewHeader]
  -[_SFLinkPreviewHelper openActionForRedirectToExternalNavigationResult:]
  -[_SFLinkPreviewHelper downloadActionForURL:]
  -[_SFLinkPreviewHelper openActionForAlternateURL:]
  -[_SFLinkPreviewHelper openInNewTabActionForURL:preActionHandler:]
  -[_SFLinkPreviewHelper openInNewWindowActionForURL:]
  -[_SFLinkPreviewHelper openURL:forAction:]
  -[_SFLinkPreviewHelper addToReadingListActionForURL:]
  -[_SFLinkPreviewHelper previewContentViewController]
  -[_SFLinkPreviewHelper elementInfo]
  -[_SFLinkPreviewHelper setActiveLinkPreviewHeader:]
  -[_SFLinkPreviewHelper previewViewController]
  -[_SFLinkPreviewHelper invalidate]
  -[_SFLinkPreviewHelper adaptivePreviewViewController:requestLinkPreviewViewControllerWithURL:]
  -[_SFLinkPreviewHelper headerViewHeightForAdaptivePreviewViewController:]


SFSwitchTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  <SFSwitchTableViewCellDelegate> *delegate
 @property  BOOL switchOn

  // instance methods
  -[SFSwitchTableViewCell .cxx_destruct]
  -[SFSwitchTableViewCell initWithReuseIdentifier:]
  -[SFSwitchTableViewCell isSwitchOn]
  -[SFSwitchTableViewCell _switchViewStateDidChange:]
  -[SFSwitchTableViewCell setSwitchOn:]
  -[SFSwitchTableViewCell setDelegate:]
  -[SFSwitchTableViewCell delegate]


SFPrivacyReportExplanationTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  BOOL expanded
 @property  <SFPrivacyReportExplanationTableViewCellDelegate> *delegate

  // instance methods
  -[SFPrivacyReportExplanationTableViewCell setExpanded:]
  -[SFPrivacyReportExplanationTableViewCell isExpanded]
  -[SFPrivacyReportExplanationTableViewCell initWithStyle:reuseIdentifier:]
  -[SFPrivacyReportExplanationTableViewCell systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:]
  -[SFPrivacyReportExplanationTableViewCell _separatorFrame]
  -[SFPrivacyReportExplanationTableViewCell updateConstraints]
  -[SFPrivacyReportExplanationTableViewCell .cxx_destruct]
  -[SFPrivacyReportExplanationTableViewCell _toggleExpanded:]
  -[SFPrivacyReportExplanationTableViewCell _updateToggleButtonText]
  -[SFPrivacyReportExplanationTableViewCell _updateUsesWideLayoutForSize:]
  -[SFPrivacyReportExplanationTableViewCell setDelegate:]
  -[SFPrivacyReportExplanationTableViewCell delegate]
  -[SFPrivacyReportExplanationTableViewCell layoutSubviews]


SFPrivacyReportIconView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  CAGradientLayer *gradientLayer

  // class methods
  +[SFPrivacyReportIconView layerClass]

  // instance methods
  -[SFPrivacyReportIconView gradientLayer]
  -[SFPrivacyReportIconView _dynamicUserInterfaceTraitDidChange]
  -[SFPrivacyReportIconView _updateColors]
  -[SFPrivacyReportIconView initWithFrame:]
  -[SFPrivacyReportIconView .cxx_destruct]
  -[SFPrivacyReportIconView intrinsicContentSize]
  -[SFPrivacyReportIconView traitCollectionDidChange:]
  -[SFPrivacyReportIconView _updateSymbolConfiguration]


_SFPasswordTouchIconRequest : WBSTouchIconRequest /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // class methods
  +[_SFPasswordTouchIconRequest requestWithURL:minimumIconSize:maximumIconSize:iconDownloadingEnabled:]


_SFManagedFeatureObserver : NSObject /usr/lib/libc++.1.dylib <MCProfileConnectionObserver>
 @property  BOOL authenticationRequiredToAutoFill
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFManagedFeatureObserver sharedObserver]

  // instance methods
  -[_SFManagedFeatureObserver profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
  -[_SFManagedFeatureObserver init]
  -[_SFManagedFeatureObserver dealloc]
  -[_SFManagedFeatureObserver .cxx_destruct]
  -[_SFManagedFeatureObserver authenticationRequiredToAutoFill]
  -[_SFManagedFeatureObserver _isUserEnrolledInBiometricAuthentication]


SFBrowserServiceViewController : _SFBrowserContentViewController <_SFActivityDelegate, _SFLinkPreviewHeaderDelegate, SFServiceViewControllerProtocol>
 @property  SFSystemAlert *webAuthenticationDataSharingConfirmation
 @property  NSString *hostApplicationCallbackURLScheme
 @property  BOOL _isUsedForAuthentication
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFBrowserServiceViewController _remoteViewControllerInterface]
  +[SFBrowserServiceViewController _exportedInterface]

  // instance methods
  -[SFBrowserServiceViewController webViewController:willPerformClientRedirectToURL:withDelay:]
  -[SFBrowserServiceViewController webViewController:didFinishDocumentLoadForNavigation:]
  -[SFBrowserServiceViewController webViewController:didChangeFullScreen:]
  -[SFBrowserServiceViewController webViewControllerWebProcessDidCrash:]
  -[SFBrowserServiceViewController safariActivity:didFinish:]
  -[SFBrowserServiceViewController _didResolveDestinationURL:pendingAppLinkCheck:]
  -[SFBrowserServiceViewController _getSafariDataSharingModeWithCompletion:]
  -[SFBrowserServiceViewController _fetchActivityViewControllerInfoForURL:title:completion:]
  -[SFBrowserServiceViewController _notifyInitialLoadDidFinish:]
  -[SFBrowserServiceViewController processPool]
  -[SFBrowserServiceViewController setDismissButtonStyle:]
  -[SFBrowserServiceViewController dealloc]
  -[SFBrowserServiceViewController .cxx_destruct]
  -[SFBrowserServiceViewController setDisplayMode:]
  -[SFBrowserServiceViewController decideCookieSharingForURL:callbackURLScheme:]
  -[SFBrowserServiceViewController _persona]
  -[SFBrowserServiceViewController _redirectToHostAppWithNavigationResult:options:]
  -[SFBrowserServiceViewController _didLoadWebView]
  -[SFBrowserServiceViewController _recordHostAppIdAndURLForTapToRadar:]
  -[SFBrowserServiceViewController bundleIdentifierForProfileInstallation]
  -[SFBrowserServiceViewController _hostAppBundleId]
  -[SFBrowserServiceViewController _shouldReloadImmediatelyAfterPageLoadError]
  -[SFBrowserServiceViewController webAuthenticationDataSharingConfirmation]
  -[SFBrowserServiceViewController hostApplicationCallbackURLScheme]
  -[SFBrowserServiceViewController _willAppearInRemoteViewController]
  -[SFBrowserServiceViewController _hostApplicationDidEnterBackground]
  -[SFBrowserServiceViewController _hostApplicationWillEnterForeground]
  -[SFBrowserServiceViewController initWithNibName:bundle:]
  -[SFBrowserServiceViewController viewDidAppear:]
  -[SFBrowserServiceViewController setPreferredBarTintColor:controlTintColor:]
  -[SFBrowserServiceViewController repostNotificationInViewService:]
  -[SFBrowserServiceViewController didFetchCustomActivities:excludedActivityTypes:]
  -[SFBrowserServiceViewController setIsRunningTransitionAnimation:]
  -[SFBrowserServiceViewController didDetectRemoteViewControllerViewIsHidden]
  -[SFBrowserServiceViewController didDetectUserInteractionFromHostApp]
  -[SFBrowserServiceViewController openCurrentURLInSafariFromPreviewAction]
  -[SFBrowserServiceViewController updateScrollViewIndicatorVerticalInsets:horizontalInsets:]
  -[SFBrowserServiceViewController didRequestShowLinkPreviews:]
  -[SFBrowserServiceViewController _dismiss]
  -[SFBrowserServiceViewController _closeDatabasesOnBackgroundingOrDismissal]
  -[SFBrowserServiceViewController _analyticsHelper]
  -[SFBrowserServiceViewController _updateRemoteSwipeGestureState]
  -[SFBrowserServiceViewController browserViewDidReceiveTouchEvent:]
  -[SFBrowserServiceViewController processPoolConfiguration]
  -[SFBrowserServiceViewController _websiteDataStoreURLForHSTSStorage:]
  -[SFBrowserServiceViewController set_isUsedForAuthentication:]
  -[SFBrowserServiceViewController setHostApplicationCallbackURLScheme:]
  -[SFBrowserServiceViewController setWebAuthenticationDataSharingConfirmation:]
  -[SFBrowserServiceViewController loadURL:]
  -[SFBrowserServiceViewController viewDidDisappear:]
  -[SFBrowserServiceViewController _openCurrentURLInSafari]
  -[SFBrowserServiceViewController _webDataStoreRootURLForHSTSStorage:]
  -[SFBrowserServiceViewController _ensureWebsiteDataStoreURL:cookieStoreURL:]
  -[SFBrowserServiceViewController _isUsedForAuthentication]
  -[SFBrowserServiceViewController viewWillDisappear:]
  -[SFBrowserServiceViewController websiteDataStoreConfiguration]
  -[SFBrowserServiceViewController linkPreviewHeader:didEnableLinkPreview:]
  -[SFBrowserServiceViewController _redirectToHostAppWithExpectedCallbackSchemeIfPossible:]
  -[SFBrowserServiceViewController _applicationPayloadForOpeningInSafari]
  -[SFBrowserServiceViewController webViewController:didReceiveServerRedirectForProvisionalNavigation:]
  -[SFBrowserServiceViewController webViewControllerDidCancelClientRedirect:]
  -[SFBrowserServiceViewController webViewController:didStartProvisionalNavigation:]
  -[SFBrowserServiceViewController prepareForDisplayWithCompletionHandler:]
  -[SFBrowserServiceViewController startResolveRedirectionForURL:]


SFSystemAlert : NSObject /usr/lib/libc++.1.dylib
 @property  @? completionBlock

  // class methods
  +[SFSystemAlert _displayNameForBundleID:]
  +[SFSystemAlert readingListAlertForDomain:appBundleID:]
  +[SFSystemAlert webAuthenticationAlertForDomain:appBundleID:]

  // instance methods
  -[SFSystemAlert dealloc]
  -[SFSystemAlert .cxx_destruct]
  -[SFSystemAlert initWithTitle:message:affirmativeButtonTitle:negativeButtonTitle:]
  -[SFSystemAlert setCompletionBlock:]
  -[SFSystemAlert completionBlock]
  -[SFSystemAlert cancel]
  -[SFSystemAlert scheduleWithCompletionBlock:]


_SFPerSitePreferenceDisplayInformation : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *localizedSiteSpecificSettingsTitle
 @property  NSString *localizedAllWebsiteSettingsTitle
 @property  NSString *localizedClearAllSettingsPrompt
 @property  unsigned long displayOption

  // class methods
  +[_SFPerSitePreferenceDisplayInformation _buildMapIfNeeded]
  +[_SFPerSitePreferenceDisplayInformation displayInformationForPerSitePreference:]

  // instance methods
  -[_SFPerSitePreferenceDisplayInformation .cxx_destruct]
  -[_SFPerSitePreferenceDisplayInformation _initWithLocalizedSiteSpecificSettingsTitle:localizedAllWebsiteSettingsTitle:localizedClearAllSettingsPrompt:displayOption:]
  -[_SFPerSitePreferenceDisplayInformation localizedSiteSpecificSettingsTitle]
  -[_SFPerSitePreferenceDisplayInformation localizedAllWebsiteSettingsTitle]
  -[_SFPerSitePreferenceDisplayInformation localizedClearAllSettingsPrompt]
  -[_SFPerSitePreferenceDisplayInformation displayOption]


SFPasswordPickerServiceViewController : SFPasswordServiceViewController <SFCredentialProviderExtensionManagerObserver, _ASCredentialListViewControllerDelegate, _ASPasswordCredentialAuthenticationViewControllerDelegate, UIPresentationControllerDelegatePrivate, _SFAuthenticationClient, _SFAuthenticationContextDelegate, SFPasswordPickerServiceViewControllerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFPasswordPickerServiceViewController _remoteViewControllerInterface]
  +[SFPasswordPickerServiceViewController _exportedInterface]

  // instance methods
  -[SFPasswordPickerServiceViewController authenticationCustomUIProgressObserverForContext:]
  -[SFPasswordPickerServiceViewController .cxx_destruct]
  -[SFPasswordPickerServiceViewController credentialProviderExtensionManagerExtensionListDidChange:]
  -[SFPasswordPickerServiceViewController setAuthenticationGracePeriod:]
  -[SFPasswordPickerServiceViewController displayMessageAsTitleForContext:]
  -[SFPasswordPickerServiceViewController passcodePromptForContext:]
  -[SFPasswordPickerServiceViewController initWithNibName:bundle:]
  -[SFPasswordPickerServiceViewController viewDidAppear:]
  -[SFPasswordPickerServiceViewController _presentCredentialListForExtension:]
  -[SFPasswordPickerServiceViewController _authenticateAndSetPresentCredentialsHandlerWithCompletion:]
  -[SFPasswordPickerServiceViewController _sendCredentialToClientAndDismiss:]
  -[SFPasswordPickerServiceViewController setWebViewURL:]
  -[SFPasswordPickerServiceViewController _dismiss]
  -[SFPasswordPickerServiceViewController setRemoteAppID:]
  -[SFPasswordPickerServiceViewController setRemoteLocalizedAppName:]
  -[SFPasswordPickerServiceViewController setRemoteUnlocalizedAppName:]
  -[SFPasswordPickerServiceViewController setExternallyVerifiedAndApprovedSharedWebCredentialsDomains:]
  -[SFPasswordPickerServiceViewController authenticateToPresentInPopover:completion:]
  -[SFPasswordPickerServiceViewController _authenticateToViewOtherPasswordsWithCompletion:]
  -[SFPasswordPickerServiceViewController _fillCredential:needsAuthentication:]
  -[SFPasswordPickerServiceViewController _actionForPresentingPasswordManagerExtension:]
  -[SFPasswordPickerServiceViewController credentialListViewController:didFinishWithCredential:completion:]
  -[SFPasswordPickerServiceViewController presentUIForPasswordCredentialAuthenticationViewController:]
  -[SFPasswordPickerServiceViewController passwordCredentialAuthenticationViewController:didFinishWithCredential:error:completion:]
  -[SFPasswordPickerServiceViewController contextRequiresSessionBasedAuthentication:]
  -[SFPasswordPickerServiceViewController contextShouldAllowPasscodeFallback:]
  -[SFPasswordPickerServiceViewController contextShouldAllowMultipleBiometricFailures:]
  -[SFPasswordPickerServiceViewController authenticationMessageForContext:]
  -[SFPasswordPickerServiceViewController viewWillDisappear:]
  -[SFPasswordPickerServiceViewController _context]
  -[SFPasswordPickerServiceViewController presentationControllerDidDismiss:]


_SFPasswordIconController : NSObject /usr/lib/libc++.1.dylib
 @property  <_SFPasswordIconControllerDelegate> *delegate

  // class methods
  +[_SFPasswordIconController preferredIconSize]

  // instance methods
  -[_SFPasswordIconController .cxx_destruct]
  -[_SFPasswordIconController initWithMetadataManager:]
  -[_SFPasswordIconController clearIconFetchingState]
  -[_SFPasswordIconController iconForDomain:]
  -[_SFPasswordIconController backgroundColorForDomain:]
  -[_SFPasswordIconController _fetchTouchIconForDomain:]
  -[_SFPasswordIconController _requestTouchIconForDomain:iconDownloadingEnabled:]
  -[_SFPasswordIconController _checkForLocalVisitToDomain:withCompletion:]
  -[_SFPasswordIconController _populateDomainToItemsWithCompletion:]
  -[_SFPasswordIconController setDelegate:]
  -[_SFPasswordIconController _fetchAppIconForDomain:]
  -[_SFPasswordIconController _iconDidUpdateForDomain:]
  -[_SFPasswordIconController _populateDomainToAppIDWithCompletion:]
  -[_SFPasswordIconController delegate]


_SFReaderFontOptionsGroupController : NSObject /usr/lib/libc++.1.dylib <_SFSettingsAlertOptionsGroupController>
 @property  <SFReaderContext> *readerContext
 @property  NSArray *values
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFReaderFontOptionsGroupController values]
  -[_SFReaderFontOptionsGroupController .cxx_destruct]
  -[_SFReaderFontOptionsGroupController _fontDownloadDidFinish:]
  -[_SFReaderFontOptionsGroupController _fontDownloadDidBegin:]
  -[_SFReaderFontOptionsGroupController _fontDownloadDidFail:]
  -[_SFReaderFontOptionsGroupController _fontDownloadProgressDidChange:]
  -[_SFReaderFontOptionsGroupController _fontIsImmediatelyAvailable:]
  -[_SFReaderFontOptionsGroupController _attributedStringForReaderFont:]
  -[_SFReaderFontOptionsGroupController _fontForFontNotification:]
  -[_SFReaderFontOptionsGroupController _itemForNotification:]
  -[_SFReaderFontOptionsGroupController _downloadAccessoryForNotification:]
  -[_SFReaderFontOptionsGroupController prepareItem:forValue:]
  -[_SFReaderFontOptionsGroupController textStyleForValue:]
  -[_SFReaderFontOptionsGroupController setSelectedValue:]
  -[_SFReaderFontOptionsGroupController attributedStringForValue:]
  -[_SFReaderFontOptionsGroupController isSelectedValue:]
  -[_SFReaderFontOptionsGroupController initWithReaderContext:]
  -[_SFReaderFontOptionsGroupController readerContext]


_SFReaderFontDownloadAccessory : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  UIButton *downloadButton
 @property  UIProgressView *progressView
 @property  BOOL downloading
 @property  @? tappedDownloadBlock

  // instance methods
  -[_SFReaderFontDownloadAccessory setDownloading:]
  -[_SFReaderFontDownloadAccessory viewForLastBaselineLayout]
  -[_SFReaderFontDownloadAccessory .cxx_destruct]
  -[_SFReaderFontDownloadAccessory progressView]
  -[_SFReaderFontDownloadAccessory isDownloading]
  -[_SFReaderFontDownloadAccessory initWithTappedDownloadBlock:]
  -[_SFReaderFontDownloadAccessory _tappedDownloadButton:]
  -[_SFReaderFontDownloadAccessory downloadButton]
  -[_SFReaderFontDownloadAccessory tappedDownloadBlock]
  -[_SFReaderFontDownloadAccessory setTappedDownloadBlock:]


_SFAutomationController : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL allowsRemoteAutomation

  // instance methods
  -[_SFAutomationController setAllowsRemoteAutomation:]
  -[_SFAutomationController allowsRemoteAutomation]


_SFQuickLookDocumentController : NSObject /usr/lib/libc++.1.dylib <_SFQuickLookDocumentViewDelegate>
 @property  UIView *documentView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFQuickLookDocumentController init]
  -[_SFQuickLookDocumentController .cxx_destruct]
  -[_SFQuickLookDocumentController presentDocumentInteractionControllerFromSource:]
  -[_SFQuickLookDocumentController _updateActionButtons]
  -[_SFQuickLookDocumentController documentView]
  -[_SFQuickLookDocumentController _supportedApplications]
  -[_SFQuickLookDocumentController _actionTitleForType:withActionCount:]
  -[_SFQuickLookDocumentController dataOwnerForQuickLookDocumentView:]
  -[_SFQuickLookDocumentController quickLookDocumentView:didSelectActionAtIndex:]
  -[_SFQuickLookDocumentController itemProviderForQuickLookDocumentView:]
  -[_SFQuickLookDocumentController updateWithQuickLookDocument:]


SFWebViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFFormAutoFillControllerDelegate, WKNavigationDelegatePrivate, WKUIDelegatePrivate, _SFDialogControllerDelegate, _SFDialogViewControllerPresenting, _SFWebViewDelegate, _WKInputDelegate, _WKWebAuthenticationPanelDelegate, _SFDialogPresenting>
 @property  WKWebView *webView
 @property  <SFWebViewControllerDelegate> *delegate
 @property  BOOL loading
 @property  BOOL didFirstVisuallyNonEmptyLayout
 @property  WKWebViewConfiguration *webViewConfiguration
 @property  _SFDialogController *dialogController
 @property  _SFAuthenticationContext *autoFillAuthenticationContext
 @property  BOOL didFirstPaint
 @property  BOOL hasFocusedInputFieldOnCurrentPage
 @property  BOOL hasFormControlInteraction
 @property  NSUUID *UUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFWebViewController webView]
  -[SFWebViewController isLoading]
  -[SFWebViewController setLoading:]
  -[SFWebViewController _webView:contextMenuDidEndForElement:]
  -[SFWebViewController _webView:accessoryViewCustomButtonTappedInFormInputSession:]
  -[SFWebViewController _webView:insertTextSuggestion:inInputSession:]
  -[SFWebViewController _webView:decidePolicyForFocusedElement:]
  -[SFWebViewController _webView:focusRequiresStrongPasswordAssistance:]
  -[SFWebViewController _webViewAdditionalContextForStrongPasswordAssistance:]
  -[SFWebViewController _webView:willStartInputSession:]
  -[SFWebViewController _webViewDidCancelClientRedirect:]
  -[SFWebViewController dealloc]
  -[SFWebViewController _webView:didStartInputSession:]
  -[SFWebViewController _webView:fileUploadPanelContentIsManagedWithInitiatingFrame:]
  -[SFWebViewController _webView:navigationDidFinishDocumentLoad:]
  -[SFWebViewController _webView:willPerformClientRedirectToURL:delay:]
  -[SFWebViewController _webView:navigation:didSameDocumentNavigation:]
  -[SFWebViewController _webView:renderingProgressDidChange:]
  -[SFWebViewController _webView:authenticationChallenge:shouldAllowLegacyTLS:]
  -[SFWebViewController _webView:didNegotiateModernTLS:]
  -[SFWebViewController _webViewWebProcessDidCrash:]
  -[SFWebViewController _webViewDidEnterFullscreen:]
  -[SFWebViewController _webViewWillEndNavigationGesture:withNavigationToBackForwardListItem:]
  -[SFWebViewController webView:didFailProvisionalNavigation:withError:]
  -[SFWebViewController .cxx_destruct]
  -[SFWebViewController _webViewDidEndNavigationGesture:withNavigationToBackForwardListItem:]
  -[SFWebViewController _automaticPasswordInputViewNotification:]
  -[SFWebViewController _webView:didStartLoadForQuickLookDocumentInMainFrameWithFileName:uti:]
  -[SFWebViewController _webView:didFinishLoadForQuickLookDocumentInMainFrame:]
  -[SFWebViewController _webView:willGoToBackForwardListItem:inPageCache:]
  -[SFWebViewController _webView:decidePolicyForSOAuthorizationLoadWithCurrentPolicy:forExtension:completionHandler:]
  -[SFWebViewController dialogController]
  -[SFWebViewController _webView:printFrame:]
  -[SFWebViewController _webView:createWebViewWithConfiguration:forNavigationAction:windowFeatures:completionHandler:]
  -[SFWebViewController webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:completionHandler:]
  -[SFWebViewController webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:completionHandler:]
  -[SFWebViewController webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:completionHandler:]
  -[SFWebViewController didFirstPaint]
  -[SFWebViewController _webView:requestStorageAccessPanelForDomain:underCurrentDomain:completionHandler:]
  -[SFWebViewController _webView:mediaCaptureStateDidChange:]
  -[SFWebViewController _analyticsClient]
  -[SFWebViewController _webView:didResignInputElementStrongPasswordAppearanceWithUserInfo:]
  -[SFWebViewController _presentingViewControllerForWebView:]
  -[SFWebViewController _webViewDidExitFullscreen:]
  -[SFWebViewController webViewDidClose:]
  -[SFWebViewController _webView:requestUserMediaAuthorizationForDevices:url:mainFrameURL:decisionHandler:]
  -[SFWebViewController _webView:checkUserMediaPermissionForURL:mainFrameURL:frameIdentifier:decisionHandler:]
  -[SFWebViewController _webView:runWebAuthenticationPanel:initiatedByFrame:completionHandler:]
  -[SFWebViewController presentDialog:sender:]
  -[SFWebViewController panel:updateWebAuthenticationPanel:]
  -[SFWebViewController panel:dismissWebAuthenticationPanelWithResult:]
  -[SFWebViewController panel:requestPINWithRemainingRetries:completionHandler:]
  -[SFWebViewController panel:selectAssertionResponse:source:completionHandler:]
  -[SFWebViewController panel:decidePolicyForLocalAuthenticatorWithCompletionHandler:]
  -[SFWebViewController _webView:didPresentFocusedElementViewController:]
  -[SFWebViewController _userDeclinedAutomaticStrongPasswordForCurrentDomainOnTabWithUUID:]
  -[SFWebViewController _webView:contextMenuForElement:willCommitWithAnimator:]
  -[SFWebViewController _webView:shouldIncludeAppLinkActionsForElement:]
  -[SFWebViewController setUUID:]
  -[SFWebViewController _webView:willSubmitFormValues:userObject:submissionHandler:]
  -[SFWebViewController _webView:requestGeolocationAuthorizationForURL:frame:decisionHandler:]
  -[SFWebViewController dialogController:presentationPolicyForDialog:]
  -[SFWebViewController dialogController:willPresentDialog:]
  -[SFWebViewController UUID]
  -[SFWebViewController observeValueForKeyPath:ofObject:change:context:]
  -[SFWebViewController formAutoFillControllerURLForFormAutoFill:]
  -[SFWebViewController formAutoFillControllerCanPrefillForm:]
  -[SFWebViewController formAutoFillControllerShouldShowIconsInPasswordPicker:]
  -[SFWebViewController _webView:dataOwnerForDragSession:]
  -[SFWebViewController _webView:dataOwnerForDropSession:]
  -[SFWebViewController presentViewController:animated:completion:]
  -[SFWebViewController autoFillAuthenticationContext]
  -[SFWebViewController formAutoFillControllerGetAuthenticationForAutoFill:completion:]
  -[SFWebViewController dialogController:presentViewController:withAdditionalAnimations:]
  -[SFWebViewController dialogController:dismissViewController:withAdditionalAnimations:]
  -[SFWebViewController sfWebViewDidChangeSafeAreaInsets:]
  -[SFWebViewController sfWebViewDidBecomeFirstResponder:]
  -[SFWebViewController sfWebViewDidStartFormControlInteraction:]
  -[SFWebViewController sfWebViewDidEndFormControlInteraction:]
  -[SFWebViewController sfWebView:didStartDownload:]
  -[SFWebViewController sfWebViewCanPromptForAccountSecurityRecommendation]
  -[SFWebViewController _webView:contextMenuConfigurationForElement:completionHandler:]
  -[SFWebViewController initWithWebViewConfiguration:]
  -[SFWebViewController willBeginUserInitiatedNavigation]
  -[SFWebViewController hasFocusedInputFieldOnCurrentPage]
  -[SFWebViewController hasFormControlInteraction]
  -[SFWebViewController webView:decidePolicyForNavigationAction:preferences:decisionHandler:]
  -[SFWebViewController webView:didStartProvisionalNavigation:]
  -[SFWebViewController webView:decidePolicyForNavigationResponse:decisionHandler:]
  -[SFWebViewController webView:didReceiveServerRedirectForProvisionalNavigation:]
  -[SFWebViewController webView:didCommitNavigation:]
  -[SFWebViewController webView:didFinishNavigation:]
  -[SFWebViewController webView:didReceiveAuthenticationChallenge:completionHandler:]
  -[SFWebViewController _webView:contextMenuWillPresentForElement:]
  -[SFWebViewController setDelegate:]
  -[SFWebViewController webView:didFailNavigation:withError:]
  -[SFWebViewController formAutoFillControllerShouldDisableStreamlinedLogin:]
  -[SFWebViewController formAutoFillControllerUserChoseToUseGeneratedPassword:]
  -[SFWebViewController formAutoFillControllerDidUserDeclineAutomaticStrongPasswordForCurrentDomain:]
  -[SFWebViewController formAutoFillControllerDidFocusSensitiveFormField:]
  -[SFWebViewController didFirstVisuallyNonEmptyLayout]
  -[SFWebViewController delegate]
  -[SFWebViewController webViewConfiguration]
  -[SFWebViewController _webView:didChangeSafeAreaShouldAffectObscuredInsets:]
  -[SFWebViewController willActivateWebViewController]
  -[SFWebViewController loadView]


_SFBrowserWindowSettings : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL hasPrivateBrowsingWindow
 @property  BOOL invalidatesClosedWindows

  // class methods
  +[_SFBrowserWindowSettings setSharedSettings:]
  +[_SFBrowserWindowSettings settings]

  // instance methods
  -[_SFBrowserWindowSettings setBlankSnapshotGroupIdentifier:forPrivateBrowsing:forWindowWithUUID:]
  -[_SFBrowserWindowSettings synchronize]
  -[_SFBrowserWindowSettings privateBrowsingEnabledForWindowWithUUID:]
  -[_SFBrowserWindowSettings init]
  -[_SFBrowserWindowSettings setIsShowingTabView:forWindowWithUUID:]
  -[_SFBrowserWindowSettings setInvalidatesClosedWindows:]
  -[_SFBrowserWindowSettings hasPrivateBrowsingWindow]
  -[_SFBrowserWindowSettings activeDocumentIsValidForWindowWithUUID:]
  -[_SFBrowserWindowSettings .cxx_destruct]
  -[_SFBrowserWindowSettings setActiveDocumentIsValid:forWindowWithUUID:]
  -[_SFBrowserWindowSettings _synchronizeNow]
  -[_SFBrowserWindowSettings validateWindowSettingsWithUUIDs:]
  -[_SFBrowserWindowSettings _stringForKey:windowUUID:]
  -[_SFBrowserWindowSettings removeWindowWithUUID:]
  -[_SFBrowserWindowSettings _setString:forKey:windowUUID:]
  -[_SFBrowserWindowSettings setPrivateBrowsingEnabled:forWindowWithUUID:]
  -[_SFBrowserWindowSettings _numberForKey:windowUUID:]
  -[_SFBrowserWindowSettings isShowingTabViewForWindowWithUUID:]
  -[_SFBrowserWindowSettings _setBool:forKey:windowUUID:]
  -[_SFBrowserWindowSettings invalidatesClosedWindows]
  -[_SFBrowserWindowSettings blankSnapshotGroupIdentifierForPrivateBrowsing:forWindowWithUUID:]
  -[_SFBrowserWindowSettings _initializeSettingsDictionaryIfNeeded]
  -[_SFBrowserWindowSettings _boolValueForKey:windowUUID:]


SFContactAutoFillValue : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL selected
 @property  NSString *label
 @property  NSString *displayValue
 @property  NSArray *matches

  // instance methods
  -[SFContactAutoFillValue matches]
  -[SFContactAutoFillValue setSelected:]
  -[SFContactAutoFillValue .cxx_destruct]
  -[SFContactAutoFillValue label]
  -[SFContactAutoFillValue initWithMatches:displayValue:label:]
  -[SFContactAutoFillValue selected]
  -[SFContactAutoFillValue displayValue]


_SFLinkWithPreviewActivityItemProvider : _SFActivityItemProvider
  // instance methods
  -[_SFLinkWithPreviewActivityItemProvider activityViewControllerLinkMetadata:]


_SFPasswordViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFPasswordRemoteViewControllerDelegate, SFQueueingServiceViewControllerProxyDelegate>
 @property  <_SFPasswordViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFPasswordViewController childViewControllerForHomeIndicatorAutoHidden]
  -[_SFPasswordViewController childViewControllerForStatusBarHidden]
  -[_SFPasswordViewController childViewControllerForStatusBarStyle]
  -[_SFPasswordViewController init]
  -[_SFPasswordViewController .cxx_destruct]
  -[_SFPasswordViewController _connectToService]
  -[_SFPasswordViewController _addRemoteView]
  -[_SFPasswordViewController childViewControllerForScreenEdgesDeferringSystemGestures]
  -[_SFPasswordViewController _setUpServiceProxyIfNeeded]
  -[_SFPasswordViewController remoteViewControllerWillDismiss:]
  -[_SFPasswordViewController _addRemoteViewAsChild]
  -[_SFPasswordViewController remoteViewController:viewServiceDidTerminateWithError:]
  -[_SFPasswordViewController _connectToServiceWithCompletion:]
  -[_SFPasswordViewController _remoteViewController]
  -[_SFPasswordViewController setDelegate:]
  -[_SFPasswordViewController childViewControllerForWhitePointAdaptivityStyle]
  -[_SFPasswordViewController _dismissPasswordViewController]
  -[_SFPasswordViewController serviceProxyWillQueueInvocation:]
  -[_SFPasswordViewController delegate]


SFSaveToFilesActivity : _SFActivity <_SFSaveToFilesOperationDelegate>
 @property  BOOL supportsDownloads
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFSaveToFilesActivity activityType]
  -[SFSaveToFilesActivity .cxx_destruct]
  -[SFSaveToFilesActivity setSupportsDownloads:]
  -[SFSaveToFilesActivity initWithActivityItemProviderCollection:customizationController:]
  -[SFSaveToFilesActivity saveToFilesOperation:presentViewController:]
  -[SFSaveToFilesActivity saveToFilesOperation:didFinishWithSuccess:]
  -[SFSaveToFilesActivity saveToFilesOperationSupportsDownloads:]
  -[SFSaveToFilesActivity customizationControllerForSaveToFilesOperation:]
  -[SFSaveToFilesActivity saveToFilesOperationShouldDismissViewControllerAfterCompletion:]
  -[SFSaveToFilesActivity supportsDownloads]
  -[SFSaveToFilesActivity _managesOwnPresentation]
  -[SFSaveToFilesActivity _presentActivityOnViewController:animated:completion:]
  -[SFSaveToFilesActivity _dismissActivityFromViewController:animated:completion:]


SFFormAutoFillMultipleLoginsAlertController : UIAlertController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  BOOL cancelsWhenAppEntersBackground

  // class methods
  +[SFFormAutoFillMultipleLoginsAlertController alertControllerWithMatchesFromFormProtectionSpace:matchesFromOtherProtectionSpaces:externalCredentials:preferredStyle:formURL:completionHandler:]

  // instance methods
  -[SFFormAutoFillMultipleLoginsAlertController .cxx_destruct]
  -[SFFormAutoFillMultipleLoginsAlertController _sceneDidEnterBackground:]
  -[SFFormAutoFillMultipleLoginsAlertController viewWillDisappear:]
  -[SFFormAutoFillMultipleLoginsAlertController setCancelsWhenAppEntersBackground:]
  -[SFFormAutoFillMultipleLoginsAlertController cancelsWhenAppEntersBackground]


_SFPasswordManagerLockedView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[_SFPasswordManagerLockedView initWithFrame:]
  -[_SFPasswordManagerLockedView .cxx_destruct]


SFPasswordSavingRemoteViewController : SFPasswordRemoteViewController
  // class methods
  +[SFPasswordSavingRemoteViewController passwordServiceViewControllerName]
  +[SFPasswordSavingRemoteViewController serviceViewControllerInterface]

  // instance methods
  -[SFPasswordSavingRemoteViewController .cxx_destruct]
  -[SFPasswordSavingRemoteViewController performUpgradeToSignInWithAppleForCredential:serviceIdentifier:]
  -[SFPasswordSavingRemoteViewController performUpgradeToStrongPasswordForCredential:serviceIdentifier:]
  -[SFPasswordSavingRemoteViewController accountAuthenticationModificationController:didSuccessfullyCompleteRequest:withUserInfo:]
  -[SFPasswordSavingRemoteViewController accountAuthenticationModificationController:didFailRequest:withError:]
  -[SFPasswordSavingRemoteViewController presentationAnchorForAccountAuthenticationModificationController:]
  -[SFPasswordSavingRemoteViewController _accountAuthenticationModificationController]


_SFURLLabelAccessoryItem : NSObject /usr/lib/libc++.1.dylib
 @property  UIImageView *view
 @property  UIImageView *squishedView
 @property  UIVisualEffectView *effectView
 @property  UIVisualEffectView *squishedEffectView
 @property  UIView *viewForLayout
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  double spacing
 @property  {CGSize=dd} size
 @property  BOOL centerAligned

  // instance methods
  -[_SFURLLabelAccessoryItem setView:]
  -[_SFURLLabelAccessoryItem setSpacing:]
  -[_SFURLLabelAccessoryItem setEffectView:]
  -[_SFURLLabelAccessoryItem effectView]
  -[_SFURLLabelAccessoryItem frame]
  -[_SFURLLabelAccessoryItem viewForLayout]
  -[_SFURLLabelAccessoryItem size]
  -[_SFURLLabelAccessoryItem .cxx_destruct]
  -[_SFURLLabelAccessoryItem setCenterAligned:]
  -[_SFURLLabelAccessoryItem squishedView]
  -[_SFURLLabelAccessoryItem setSquishedEffectView:]
  -[_SFURLLabelAccessoryItem view]
  -[_SFURLLabelAccessoryItem spacing]
  -[_SFURLLabelAccessoryItem centerAligned]
  -[_SFURLLabelAccessoryItem setFrame:]
  -[_SFURLLabelAccessoryItem setSize:]
  -[_SFURLLabelAccessoryItem setSquishedView:]
  -[_SFURLLabelAccessoryItem squishedEffectView]


_SFLinkPresentationIconCache : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataProvider>
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFLinkPresentationIconCache _historyItemsWereRemoved:]
  -[_SFLinkPresentationIconCache responseForRequest:willProvideUpdates:]
  -[_SFLinkPresentationIconCache setProviderDelegate:]
  -[_SFLinkPresentationIconCache providerDelegate]
  -[_SFLinkPresentationIconCache dealloc]
  -[_SFLinkPresentationIconCache .cxx_destruct]
  -[_SFLinkPresentationIconCache savePendingChangesBeforeTermination]
  -[_SFLinkPresentationIconCache initWithImageDirectoryURL:]
  -[_SFLinkPresentationIconCache purgeUnneededCacheEntries]
  -[_SFLinkPresentationIconCache imageForHost:]
  -[_SFLinkPresentationIconCache canHandleRequest:]
  -[_SFLinkPresentationIconCache prepareResponseForRequest:allowDelayedResponse:]
  -[_SFLinkPresentationIconCache emptyCaches]
  -[_SFLinkPresentationIconCache saveImage:forHost:]


SFStartPageCollectionViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UICollectionViewDelegate, _SFStartPageDataSourceObserving>
 @property  <SFStartPageCollectionDataSource> *dataSource
 @property  <SFStartPageCollectionDataSource> *strongDataSource
 @property  <SFStartPageCollectionDelegate><_SFStartPagePreviewProviding> *delegate
 @property  BOOL displaysSectionHeaders
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFStartPageCollectionViewController collectionView:previewForHighlightingContextMenuWithConfiguration:]
  -[SFStartPageCollectionViewController collectionView:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[SFStartPageCollectionViewController viewDidLoad]
  -[SFStartPageCollectionViewController collectionView:didSelectItemAtIndexPath:]
  -[SFStartPageCollectionViewController collectionView:contextMenuConfigurationForItemAtIndexPath:point:]
  -[SFStartPageCollectionViewController setDataSource:]
  -[SFStartPageCollectionViewController collectionView:previewForDismissingContextMenuWithConfiguration:]
  -[SFStartPageCollectionViewController _setUpDataSource:]
  -[SFStartPageCollectionViewController _updateExpandedSectionIdentifiers]
  -[SFStartPageCollectionViewController _applyCurrentSnapshotAnimatingDifferences:]
  -[SFStartPageCollectionViewController _collectionView:cellForIdentifier:indexPath:]
  -[SFStartPageCollectionViewController _collectionView:supplementaryViewWithKind:forIndexPath:]
  -[SFStartPageCollectionViewController _configureHeader:forSection:atIndexPath:]
  -[SFStartPageCollectionViewController _toggleExpandedActionForSection:atIndexPath:]
  -[SFStartPageCollectionViewController _numberOfColumnsForSectionItemType:containerWidth:]
  -[SFStartPageCollectionViewController _isSectionExpanded:]
  -[SFStartPageCollectionViewController _toggleSectionExpanded:]
  -[SFStartPageCollectionViewController _sectionContentInsetsWithYAxisPadding:]
  -[SFStartPageCollectionViewController _siteIconLayoutValuesForTraitCollection:]
  -[SFStartPageCollectionViewController _bannerSectionLayoutForEnvironment:]
  -[SFStartPageCollectionViewController _siteIconSectionLayoutForEnvironment:]
  -[SFStartPageCollectionViewController _siteCardSectionLayoutForEnvironment:]
  -[SFStartPageCollectionViewController _layoutForSectionAtIndex:inEnvironment:]
  -[SFStartPageCollectionViewController presentViewController:fromItemWithIdentifier:]
  -[SFStartPageCollectionViewController strongDataSource]
  -[SFStartPageCollectionViewController displaysSectionHeaders]
  -[SFStartPageCollectionViewController viewLayoutMarginsDidChange]
  -[SFStartPageCollectionViewController .cxx_destruct]
  -[SFStartPageCollectionViewController _updateNavigationItemAnimated:]
  -[SFStartPageCollectionViewController _currentSnapshot]
  -[SFStartPageCollectionViewController initWithNibName:bundle:]
  -[SFStartPageCollectionViewController dataSource]
  -[SFStartPageCollectionViewController setDisplaysSectionHeaders:]
  -[SFStartPageCollectionViewController setStrongDataSource:]
  -[SFStartPageCollectionViewController reloadDataAnimatingDifferences:]
  -[SFStartPageCollectionViewController viewWillAppear:]
  -[SFStartPageCollectionViewController setDelegate:]
  -[SFStartPageCollectionViewController viewDidLayoutSubviews]
  -[SFStartPageCollectionViewController delegate]
  -[SFStartPageCollectionViewController _makeCollectionViewLayout]
  -[SFStartPageCollectionViewController _updateSections]


_SFWebViewUsageMonitor : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL userInteracted
 @property  BOOL urlHasQueryString
 @property  BOOL urlHasIDFA
 @property  BOOL viewControllerViewIsHidden
 @property  BOOL shouldAudit
 @property  NSString *stringAsAuditKey

  // instance methods
  -[_SFWebViewUsageMonitor urlHasIDFA]
  -[_SFWebViewUsageMonitor shouldAudit]
  -[_SFWebViewUsageMonitor .cxx_destruct]
  -[_SFWebViewUsageMonitor urlHasQueryString]
  -[_SFWebViewUsageMonitor viewControllerViewIsHidden]
  -[_SFWebViewUsageMonitor stringAsAuditKey]
  -[_SFWebViewUsageMonitor setUrlHasIDFA:]
  -[_SFWebViewUsageMonitor setUrlHasQueryString:]
  -[_SFWebViewUsageMonitor auditUsageIfNeeded]
  -[_SFWebViewUsageMonitor initWithHostAppIdentifier:]
  -[_SFWebViewUsageMonitor userInteracted]
  -[_SFWebViewUsageMonitor setUserInteracted:]
  -[_SFWebViewUsageMonitor checkURL:]
  -[_SFWebViewUsageMonitor setViewControllerViewIsHidden:]


_SFCalendarEventDetector : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_SFCalendarEventDetector _foundCalendarEvents:]
  -[_SFCalendarEventDetector .cxx_destruct]
  -[_SFCalendarEventDetector containsCalendarEventForPageWithSchemaOrgMarkup:]
  -[_SFCalendarEventDetector cancelCheckForConfirmationPage]
  -[_SFCalendarEventDetector initWithWebView:]
  -[_SFCalendarEventDetector _service:didFindEventCandidateForURL:pageTitle:]
  -[_SFCalendarEventDetector _containsCalendarEventForPageWithSchemaOrgMarkup:]


_SFTextSuggestion : UITextSuggestion /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  @? fillHandler

  // instance methods
  -[_SFTextSuggestion .cxx_destruct]
  -[_SFTextSuggestion initWithFillHandler:]
  -[_SFTextSuggestion fillHandler]


SFFormAutocompleteState : NSObject /usr/lib/libc++.1.dylib <CNContactPickerDelegate, SFContactAutoFillViewControllerFiller, _SFCreditCardCaptureViewControllerDelegate, SFAppAutoFillOneTimeCodeProviderObserver, _ASCredentialListViewControllerDelegate, _ASPasswordCredentialAuthenticationViewControllerDelegate>
 @property  long long action
 @property  _SFFormAutoFillInputSession *inputSession
 @property  BOOL shouldOfferToAutoFillCreditCardData
 @property  NSString *titleOfAutoFillButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFFormAutocompleteState _getMatchesFromFormProtectionSpace:matchesFromOtherProtectionSpaces:withFormURL:credentialMatches:lastGeneratedPassword:currentUser:currentPassword:forUserNamesOnly:]
  +[SFFormAutocompleteState _shouldSaveCredentialsInProtectionSpace:]

  // instance methods
  -[SFFormAutocompleteState creditCardCaptureViewControllerDidCancel:]
  -[SFFormAutocompleteState creditCardCaptureViewController:didCaptureCreditCard:]
  -[SFFormAutocompleteState autoFill]
  -[SFFormAutocompleteState dealloc]
  -[SFFormAutocompleteState .cxx_destruct]
  -[SFFormAutocompleteState action]
  -[SFFormAutocompleteState _updateSuggestions:]
  -[SFFormAutocompleteState _shouldShowPasswordOptions]
  -[SFFormAutocompleteState _suggestLoginCredentialsShowingQuickTypeKey:]
  -[SFFormAutocompleteState _shouldOfferCreditCardDataAfterUserHasFilledCreditCardData:]
  -[SFFormAutocompleteState _showCreditCardDataSuggestionsAfterUserHasFilledCreditCardData]
  -[SFFormAutocompleteState _canAutoFillCreditCardData]
  -[SFFormAutocompleteState _fillCreditCardDataAfterAuthenticationIfNeeded:]
  -[SFFormAutocompleteState _displayTextForCreditCardNumber:]
  -[SFFormAutocompleteState _updateCreditCardSuggestionsWithHandler:]
  -[SFFormAutocompleteState _performAutoFill]
  -[SFFormAutocompleteState _updateAutoFillButton]
  -[SFFormAutocompleteState _viewControllerToPresentFrom]
  -[SFFormAutocompleteState updateSuggestions]
  -[SFFormAutocompleteState showAllPasswordsButtonTapped]
  -[SFFormAutocompleteState initWithFrame:form:textField:inputSession:autoFillController:]
  -[SFFormAutocompleteState titleOfAutoFillButton]
  -[SFFormAutocompleteState contactPicker:didSelectContact:]
  -[SFFormAutocompleteState contactPickerDidCancel:]
  -[SFFormAutocompleteState getTextSuggestionForStreamlinedAutoFillWithCredentialIdentity:completion:]
  -[SFFormAutocompleteState _suggestUsernamesForRegistrationIfPossible:]
  -[SFFormAutocompleteState _gatherAndShowAddressBookAutoFillSuggestionsWithCorrections]
  -[SFFormAutocompleteState _gatherAndShowAddressBookAutoFillSuggestions]
  -[SFFormAutocompleteState _correctedFormMetadata:]
  -[SFFormAutocompleteState _bestTextFieldMetadataForMetadata:]
  -[SFFormAutocompleteState _textDidChangeInForm:textField:]
  -[SFFormAutocompleteState _setUpMultiRoundAutoFillManagerIfNecessary]
  -[SFFormAutocompleteState _autoFillCreditCardData]
  -[SFFormAutocompleteState _autoFillSingleCreditCardData:]
  -[SFFormAutocompleteState _captureCreditCardDataWithCameraAndFill]
  -[SFFormAutocompleteState _offerToAutoFillContact]
  -[SFFormAutocompleteState credentialListViewController:didFinishWithCredential:completion:]
  -[SFFormAutocompleteState inputSession]
  -[SFFormAutocompleteState presentUIForPasswordCredentialAuthenticationViewController:]
  -[SFFormAutocompleteState passwordCredentialAuthenticationViewController:didFinishWithCredential:error:completion:]
  -[SFFormAutocompleteState _suggestPasswordForNewAccountOrChangePasswordForm]
  -[SFFormAutocompleteState _gatherFormValuesWithCompletionHandler:]
  -[SFFormAutocompleteState _updateCreditCardAutoFillAction]
  -[SFFormAutocompleteState _shouldUsePasswordGenerationAssistanceForTextField]
  -[SFFormAutocompleteState _passwordGenerationAssistanceAction]
  -[SFFormAutocompleteState _textFieldIsEmptyPasswordField]
  -[SFFormAutocompleteState _shouldAllowExternalPasswordAutoFillOnURL:]
  -[SFFormAutocompleteState _actionForLoginForm]
  -[SFFormAutocompleteState _shouldAllowGeneratedPassword]
  -[SFFormAutocompleteState _setUserAndPasswordFieldsAutoFilled:clearPasswordField:]
  -[SFFormAutocompleteState _presentViewController:presentingViewController:animated:completion:]
  -[SFFormAutocompleteState _cachedPotentialCredentialMatches]
  -[SFFormAutocompleteState _getLoginFormUser:password:userIsAutoFilled:passwordIsAutoFilled:]
  -[SFFormAutocompleteState externalCredentialIdentities]
  -[SFFormAutocompleteState _fillCredentialAfterAuthenticationIfNeeded:setAsDefaultCredential:submitForm:]
  -[SFFormAutocompleteState _fillPasswordCredentialIdentity:submitForm:]
  -[SFFormAutocompleteState _fillCredential:setAutoFilled:setAsDefaultCredential:focusFieldAfterFilling:submitForm:]
  -[SFFormAutocompleteState _fillCreditCardData:]
  -[SFFormAutocompleteState _actionForPresentingPasswordManagerExtension:completionHandler:]
  -[SFFormAutocompleteState _getShouldOfferForgetPassword:savePassword:]
  -[SFFormAutocompleteState _offerToForgetSavedPassword:completionHandler:]
  -[SFFormAutocompleteState _generateAndSuggestPasswordWithCompletionHandler:]
  -[SFFormAutocompleteState _hasMatchWithUser:password:]
  -[SFFormAutocompleteState textDidChangeInFrame:form:textField:]
  -[SFFormAutocompleteState invalidate]
  -[SFFormAutocompleteState _presentCredentialListForExtension:completionHandler:]
  -[SFFormAutocompleteState _textSuggestionForExternalCredentialIdentity:submitForm:]
  -[SFFormAutocompleteState _textSuggestionForCredentialDisplayData:submitForm:]
  -[SFFormAutocompleteState _getMatchingKeychainCredentialsIncludingCredentialsWithEmptyUsernames:withCompletion:]
  -[SFFormAutocompleteState _fetchPotentialCredentialMatchesWithCompletion:]
  -[SFFormAutocompleteState _offerToAutoFillFromPotentialCredentialMatches]
  -[SFFormAutocompleteState shouldOfferToAutoFillCreditCardData]
  -[SFFormAutocompleteState updateCachedFormMetadataAfterFilling:]
  -[SFFormAutocompleteState _passwordGenerationAssistanceAutoFillButtonEnabled]
  -[SFFormAutocompleteState _sortedSingleCreditCardDataArray:]
  -[SFFormAutocompleteState _fillSingleCreditCardDataValue:creditCardDataType:]
  -[SFFormAutocompleteState _textFieldLooksLikeCardSecurityCodeFieldButNotCardNumberOrCardholderField:]
  -[SFFormAutocompleteState _updateAutoFillActionToCaptureCreditCardAndFill]
  -[SFFormAutocompleteState _suggestionsForAutoFillDisplayData:]
  -[SFFormAutocompleteState _autoFillDisplayData:setAutoFilled:]
  -[SFFormAutocompleteState _autoFillWithSet:]
  -[SFFormAutocompleteState _switchToCustomInputViewWithMatches:contact:]
  -[SFFormAutocompleteState _showOtherContactOptions]
  -[SFFormAutocompleteState _setShowingKeyboardInputView:]
  -[SFFormAutocompleteState dismissCustomAutoFill]
  -[SFFormAutocompleteState _fillASPasswordCredential:needsAuthentication:setAutoFilled:submitForm:]
  -[SFFormAutocompleteState performAutoFillWithMatchSelections:doNotFill:contact:]
  -[SFFormAutocompleteState oneTimeCodeProviderReceivedCode:]


_SFPerSitePreferencePopoverDisplayInformation : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long displayOption
 @property  NSString *localizedDisplayName

  // class methods
  +[_SFPerSitePreferencePopoverDisplayInformation _buildMapIfNeeded]
  +[_SFPerSitePreferencePopoverDisplayInformation popoverDisplayInformationForPerSitePreference:]

  // instance methods
  -[_SFPerSitePreferencePopoverDisplayInformation .cxx_destruct]
  -[_SFPerSitePreferencePopoverDisplayInformation localizedDisplayName]
  -[_SFPerSitePreferencePopoverDisplayInformation displayOption]
  -[_SFPerSitePreferencePopoverDisplayInformation _initWithDisplayOption:localizedDisplayName:]


SFWatchMetrics : NSObject /usr/lib/libc++.1.dylib
 @property  double minimumFontScaleFactor
 @property  double closeButtonTopToBaselineSpacing
 @property  double headerButtonFontPointSize
 @property  double headerButtonPadding

  // class methods
  +[SFWatchMetrics currentMetrics]

  // instance methods
  -[SFWatchMetrics init]
  -[SFWatchMetrics minimumFontScaleFactor]
  -[SFWatchMetrics closeButtonTopToBaselineSpacing]
  -[SFWatchMetrics headerButtonFontPointSize]
  -[SFWatchMetrics headerButtonPadding]


_SFStoreBanner : _SFPinnableBanner <SKProductPageViewControllerDelegate, _SFAppSuggestionBanner>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <_SFAppSuggestionBannerDelegate> *delegate

  // instance methods
  -[_SFStoreBanner dealloc]
  -[_SFStoreBanner .cxx_destruct]
  -[_SFStoreBanner sizeThatFits:]
  -[_SFStoreBanner setDelegate:]
  -[_SFStoreBanner initWithProductID:affiliateData:applicationLaunchArgument:]
  -[_SFStoreBanner delegate]
  -[_SFStoreBanner _setBlockedByUser]
  -[_SFStoreBanner layoutSubviews]
  -[_SFStoreBanner productPage:didFailLoadWithError:]
  -[_SFStoreBanner productPage:didFinishWithResult:]
  -[_SFStoreBanner productPage:didFinishPurchase:withError:]
  -[_SFStoreBanner productPage:willMakePurchases:]


SFUIBarButtonItemPopoverSourceInfo : NSObject /usr/lib/libc++.1.dylib <_SFPopoverSourceInfo>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} popoverSourceRect
 @property  UIView *popoverSourceView
 @property  UIBarButtonItem *barButtonItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFUIBarButtonItemPopoverSourceInfo barButtonItem]
  -[SFUIBarButtonItemPopoverSourceInfo .cxx_destruct]
  -[SFUIBarButtonItemPopoverSourceInfo initWithItem:]


SFContactAutoFillViewController : UITableViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  <SFContactAutoFillViewControllerFiller> *autoFiller

  // instance methods
  -[SFContactAutoFillViewController viewDidLoad]
  -[SFContactAutoFillViewController tableView:numberOfRowsInSection:]
  -[SFContactAutoFillViewController tableView:didSelectRowAtIndexPath:]
  -[SFContactAutoFillViewController .cxx_destruct]
  -[SFContactAutoFillViewController canBecomeFirstResponder]
  -[SFContactAutoFillViewController matchesForProperty:]
  -[SFContactAutoFillViewController valuesFromPropertyMatches:]
  -[SFContactAutoFillViewController _valueForProperty:identifier:]
  -[SFContactAutoFillViewController tableView:cellForRowAtIndexPath:]
  -[SFContactAutoFillViewController autoFill:]
  -[SFContactAutoFillViewController _cancel:]
  -[SFContactAutoFillViewController setAutoFiller:]
  -[SFContactAutoFillViewController viewWillAppear:]
  -[SFContactAutoFillViewController properties]
  -[SFContactAutoFillViewController initWithMatches:contact:]
  -[SFContactAutoFillViewController autoFiller]


_SFBookmarkInfoViewController : _SFPopoverSizingTableViewController <_SFBookmarkInfoViewControllerDelegate, _SFBookmarkTextEntryTableViewControllerDelegate, UITableViewDataSource, UITableViewDelegate>
 @property  <_SFBookmarkInfoViewControllerDelegate> *delegate
 @property  WebBookmark *bookmark
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFBookmarkInfoViewController tableView:willSelectRowAtIndexPath:]
  -[_SFBookmarkInfoViewController canPerformAction:withSender:]
  -[_SFBookmarkInfoViewController setParent:]
  -[_SFBookmarkInfoViewController reloadData]
  -[_SFBookmarkInfoViewController bookmark]
  -[_SFBookmarkInfoViewController didRotateFromInterfaceOrientation:]
  -[_SFBookmarkInfoViewController setBookmark:]
  -[_SFBookmarkInfoViewController tableView:numberOfRowsInSection:]
  -[_SFBookmarkInfoViewController tableView:didSelectRowAtIndexPath:]
  -[_SFBookmarkInfoViewController dealloc]
  -[_SFBookmarkInfoViewController .cxx_destruct]
  -[_SFBookmarkInfoViewController tableView:titleForHeaderInSection:]
  -[_SFBookmarkInfoViewController updateTranslucentAppearance]
  -[_SFBookmarkInfoViewController hasTranslucentAppearance]
  -[_SFBookmarkInfoViewController backgroundColorUsingTranslucentAppearance:]
  -[_SFBookmarkInfoViewController cancelPopoverKeyPressed]
  -[_SFBookmarkInfoViewController tableView:cellForRowAtIndexPath:]
  -[_SFBookmarkInfoViewController _titleCell]
  -[_SFBookmarkInfoViewController viewWillLayoutSubviews]
  -[_SFBookmarkInfoViewController numberOfSectionsInTableView:]
  -[_SFBookmarkInfoViewController _saveButtonPressed]
  -[_SFBookmarkInfoViewController _bookmarksDidReload:]
  -[_SFBookmarkInfoViewController _canEditFieldsInCurrentViewController]
  -[_SFBookmarkInfoViewController _didBeginEditingTextField:]
  -[_SFBookmarkInfoViewController _didChangeEditingTextField:]
  -[_SFBookmarkInfoViewController cancel]
  -[_SFBookmarkInfoViewController viewDidAppear:]
  -[_SFBookmarkInfoViewController _setFolderPickerExpanded:animated:]
  -[_SFBookmarkInfoViewController _removeActionsForTextFields]
  -[_SFBookmarkInfoViewController _addActionsForTextFields]
  -[_SFBookmarkInfoViewController _createCellsIfNeeded]
  -[_SFBookmarkInfoViewController updateBookmarkIcon]
  -[_SFBookmarkInfoViewController _reloadFolderInfoForced:]
  -[_SFBookmarkInfoViewController _updateCellValues]
  -[_SFBookmarkInfoViewController _centerForIconView]
  -[_SFBookmarkInfoViewController _cellInset]
  -[_SFBookmarkInfoViewController _updateSaveButton]
  -[_SFBookmarkInfoViewController canSaveChanges]
  -[_SFBookmarkInfoViewController initWithBookmark:inCollection:addingBookmark:]
  -[_SFBookmarkInfoViewController _isIndexPathForNewFolderRow:]
  -[_SFBookmarkInfoViewController _createNewFolder]
  -[_SFBookmarkInfoViewController _editField:]
  -[_SFBookmarkInfoViewController _numberOfExpandedFolderPickerRows]
  -[_SFBookmarkInfoViewController _cellForNewFolderRowWithTableView:]
  -[_SFBookmarkInfoViewController _cellForExpandedFolderAtIndex:withTableView:]
  -[_SFBookmarkInfoViewController _cellForParentBookmarkWithTableView:]
  -[_SFBookmarkInfoViewController _dequeueFolderPickerCellFromTableView:]
  -[_SFBookmarkInfoViewController _iconForViewCellGivenBookmark:]
  -[_SFBookmarkInfoViewController isEditingField]
  -[_SFBookmarkInfoViewController _returnWasPressedInTextField:]
  -[_SFBookmarkInfoViewController _valuesChanged]
  -[_SFBookmarkInfoViewController _updateIconViewFrame]
  -[_SFBookmarkInfoViewController _saveBookmarkKeyPressed]
  -[_SFBookmarkInfoViewController bookmarkTextEntryTableViewController:dismissedWithText:]
  -[_SFBookmarkInfoViewController bookmarkTextEntryTableViewControllerShouldUseTranslucentAppearance:]
  -[_SFBookmarkInfoViewController titleCellHasText]
  -[_SFBookmarkInfoViewController initWithBookmark:childBookmarks:inCollection:addingBookmark:toFavorites:willBeDisplayedModally:]
  -[_SFBookmarkInfoViewController bookmarkInfoViewController:didFinishWithResult:]
  -[_SFBookmarkInfoViewController bookmarkInfoViewControllerShouldUseTranslucentAppearance:]
  -[_SFBookmarkInfoViewController bookmarkInfoViewControllerCanSaveBookmarkChanges:]
  -[_SFBookmarkInfoViewController keyCommands]
  -[_SFBookmarkInfoViewController viewWillAppear:]
  -[_SFBookmarkInfoViewController setDelegate:]
  -[_SFBookmarkInfoViewController viewWillDisappear:]
  -[_SFBookmarkInfoViewController viewDidLayoutSubviews]
  -[_SFBookmarkInfoViewController delegate]
  -[_SFBookmarkInfoViewController loadView]
  -[_SFBookmarkInfoViewController saveChanges]


_SFWebAppViewController : _UIRemoteViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFWebAppRemoteViewControllerProtocol>
 @property  <_SFWebAppViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFWebAppViewController exportedInterface]
  +[_SFWebAppViewController requestViewControllerWithConnectionHandler:]
  +[_SFWebAppViewController serviceViewControllerInterface]

  // instance methods
  -[_SFWebAppViewController .cxx_destruct]
  -[_SFWebAppViewController didLoadWebView]
  -[_SFWebAppViewController didFinishInitialLoad:]
  -[_SFWebAppViewController willDismissServiceViewController]
  -[_SFWebAppViewController initWithNibName:bundle:]
  -[_SFWebAppViewController fetchActivityViewControllerInfoForURL:title:]
  -[_SFWebAppViewController executeCustomActivityProxyID:]
  -[_SFWebAppViewController setRemoteSwipeGestureEnabled:]
  -[_SFWebAppViewController willOpenURLInHostApplication:]
  -[_SFWebAppViewController didDecideCookieSharingForURL:shouldCancel:]
  -[_SFWebAppViewController initialLoadDidRedirectToURL:]
  -[_SFWebAppViewController didChangeFullScreen:]
  -[_SFWebAppViewController didResolveRedirectionWithURL:appLink:]
  -[_SFWebAppViewController didDecideShouldShowLinkPreviews:]
  -[_SFWebAppViewController willOpenCurrentPageInBrowser]
  -[_SFWebAppViewController didChangeLoadingState:]
  -[_SFWebAppViewController _sf_sceneWillEnterForeground:]
  -[_SFWebAppViewController loadWebAppWithIdentifier:]
  -[_SFWebAppViewController _sf_sceneDidEnterBackground:]
  -[_SFWebAppViewController _sf_sceneDidBecomeActive:]
  -[_SFWebAppViewController _sf_sceneWillResignActive:]
  -[_SFWebAppViewController setDelegate:]
  -[_SFWebAppViewController delegate]
  -[_SFWebAppViewController viewServiceDidTerminateWithError:]


_SFICSPreviewViewController : UINavigationController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <EKICSPreviewControllerDelegate>
 @property  @? beforeDismissHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFICSPreviewViewController viewDidLoad]
  -[_SFICSPreviewViewController navigationController:willShowViewController:animated:]
  -[_SFICSPreviewViewController _done:]
  -[_SFICSPreviewViewController .cxx_destruct]
  -[_SFICSPreviewViewController icsPreviewControllerWantsDismissal:]
  -[_SFICSPreviewViewController popViewControllerAnimated:]
  -[_SFICSPreviewViewController _presentActivityViewController:]
  -[_SFICSPreviewViewController beforeDismissHandler]
  -[_SFICSPreviewViewController _updateNavigationBarItems]
  -[_SFICSPreviewViewController _ensureLeftBarButtonItemsIncludesActivityItem:]
  -[_SFICSPreviewViewController _ensureLeftBarButtonItemsIncludesDoneItem:]
  -[_SFICSPreviewViewController initWithFilePath:sourceURL:]
  -[_SFICSPreviewViewController viewWillAppear:]
  -[_SFICSPreviewViewController setBeforeDismissHandler:]
  -[_SFICSPreviewViewController viewWillDisappear:]


SFToggleBackgroundLayer : CAShapeLayer /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[SFToggleBackgroundLayer implicitAnimationForKeyPath:]


SFToggleBackgroundView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // class methods
  +[SFToggleBackgroundView layerClass]

  // instance methods
  -[SFToggleBackgroundView _dynamicUserInterfaceTraitDidChange]
  -[SFToggleBackgroundView _setContinuousCornerRadius:]
  -[SFToggleBackgroundView tintColorDidChange]
  -[SFToggleBackgroundView layoutSubviews]


SFNavigationBarToggleButton : UIButton /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UIPointerInteractionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFNavigationBarToggleButton setSelected:]
  -[SFNavigationBarToggleButton .cxx_destruct]
  -[SFNavigationBarToggleButton setHighlighted:]
  -[SFNavigationBarToggleButton pointerInteraction:willEnterRegion:animator:]
  -[SFNavigationBarToggleButton pointerInteraction:willExitRegion:animator:]
  -[SFNavigationBarToggleButton pointerInteraction:styleForRegion:]
  -[SFNavigationBarToggleButton pointerInteraction:regionForRequest:defaultRegion:]
  -[SFNavigationBarToggleButton layoutSubviews]


_SFSiteMetadataManager : WBSSiteMetadataManager /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  _SFFaviconProvider *faviconProvider
 @property  _SFPasswordTouchIconCache *passwordTouchIconCache
 @property  _SFTouchIconCache *touchIconCache
 @property  WBSLeadImageCache *leadImageCache
 @property  _SFLinkPresentationIconCache *linkPresentationIconCache

  // class methods
  +[_SFSiteMetadataManager setSharedSiteMetadataManagerProvider:]
  +[_SFSiteMetadataManager sharedSiteMetadataManager]
  +[_SFSiteMetadataManager setSharedSiteMetadataManager:]

  // instance methods
  -[_SFSiteMetadataManager .cxx_destruct]
  -[_SFSiteMetadataManager scheduleLowPriorityRequestForBookmarks:]
  -[_SFSiteMetadataManager touchIconCache]
  -[_SFSiteMetadataManager passwordTouchIconCache]
  -[_SFSiteMetadataManager faviconProvider]
  -[_SFSiteMetadataManager initWithInjectedBundleURL:imageCacheDirectoryURL:cacheIsReadOnly:metadataType:]
  -[_SFSiteMetadataManager linkPresentationIconCache]
  -[_SFSiteMetadataManager leadImageCache]


SFPasswordTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFPasswordTableViewCell>
 @property  WBSSavedPassword *savedPassword
 @property  NSString *searchPattern
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFPasswordTableViewCell initWithStyle:reuseIdentifier:]
  -[SFPasswordTableViewCell savedPassword]
  -[SFPasswordTableViewCell setSavedPassword:withWarnings:savedPasswordIsOnlySavedPasswordForHighLevelDomain:]
  -[SFPasswordTableViewCell .cxx_destruct]
  -[SFPasswordTableViewCell setSavedPassword:searchPattern:]
  -[SFPasswordTableViewCell safari_copyUserName]
  -[SFPasswordTableViewCell safari_copyPassword]
  -[SFPasswordTableViewCell showPlaceholderImageForDomain:backgroundColor:]
  -[SFPasswordTableViewCell searchPattern]
  -[SFPasswordTableViewCell setIcon:]


_SFActivity : UIActivity /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  <_SFActivityDelegate> *delegate

  // instance methods
  -[_SFActivity .cxx_destruct]
  -[_SFActivity setDelegate:]
  -[_SFActivity activityDidFinish:]
  -[_SFActivity delegate]


_SFRequestDesktopSitePreferenceManager : WBSPerSitePreferenceManager /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices <WBSPerSitePreferenceManagerStorageDelegate, WBSPerSitePreferenceManagerDefaultsDelegate, WBSPerSitePreferenceBinaryToggleItemManager>
 @property  WBSPerSitePreference *requestDesktopSitePreference
 @property  BOOL clientPrefersMobileUserAgentByDefault
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore

  // instance methods
  -[_SFRequestDesktopSitePreferenceManager perSitePreferencesStore]
  -[_SFRequestDesktopSitePreferenceManager getDefaultPreferenceValueIfNotCustomizedForPreference:domain:completionHandler:]
  -[_SFRequestDesktopSitePreferenceManager init]
  -[_SFRequestDesktopSitePreferenceManager offValueForPreference:]
  -[_SFRequestDesktopSitePreferenceManager defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[_SFRequestDesktopSitePreferenceManager dealloc]
  -[_SFRequestDesktopSitePreferenceManager preferences]
  -[_SFRequestDesktopSitePreferenceManager onValueForPreference:]
  -[_SFRequestDesktopSitePreferenceManager _requestDesktopSitePerSitePreferenceDidChange:]
  -[_SFRequestDesktopSitePreferenceManager .cxx_destruct]
  -[_SFRequestDesktopSitePreferenceManager _defaultPreferenceValue]
  -[_SFRequestDesktopSitePreferenceManager valuesForPreference:]
  -[_SFRequestDesktopSitePreferenceManager getDefaultPreferenceValueForPreference:completionHandler:]
  -[_SFRequestDesktopSitePreferenceManager getAllDomainsConfiguredForPreference:usingBlock:]
  -[_SFRequestDesktopSitePreferenceManager getAllRequestDesktopSitePerSitePreferenceValues:]
  -[_SFRequestDesktopSitePreferenceManager getValueOfPreference:forDomain:withTimeout:usingBlock:]
  -[_SFRequestDesktopSitePreferenceManager requestDesktopSitePreference]
  -[_SFRequestDesktopSitePreferenceManager getRequestDesktopSitePreferenceForDomain:withTimeout:completionHandler:]
  -[_SFRequestDesktopSitePreferenceManager _notifyObserversOfPerSitePreferenceDefaultValueUpdate]
  -[_SFRequestDesktopSitePreferenceManager setClientPrefersMobileUserAgentByDefault:]
  -[_SFRequestDesktopSitePreferenceManager preferencesStoreKeyForPreference:]
  -[_SFRequestDesktopSitePreferenceManager initWithPerSitePreferencesStore:quirksManager:]
  -[_SFRequestDesktopSitePreferenceManager clientPrefersMobileUserAgentByDefault]
  -[_SFRequestDesktopSitePreferenceManager localizedStringForValue:inPreference:]
  -[_SFRequestDesktopSitePreferenceManager removeRequestDesktopSitePerSitePreferenceObserver:]
  -[_SFRequestDesktopSitePreferenceManager _notifyObserversOfPerSitePreferenceDomainValuesUpdate]
  -[_SFRequestDesktopSitePreferenceManager didUpdatePreference:toValue:forDomain:]
  -[_SFRequestDesktopSitePreferenceManager addRequestDesktopSitePerSitePreferenceObserver:]


SFSiteCardCell : UICollectionViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI <_SFSiteCardModel>
 @property  UIView *contextMenuPreviewView
 @property  UIImage *badge
 @property  UIImage *image
 @property  NSString *source
 @property  UIImage *sourceIcon
 @property  NSString *subtitle
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFSiteCardCell reuseIdentifier]

  // instance methods
  -[SFSiteCardCell setSubtitle:]
  -[SFSiteCardCell contextMenuPreviewView]
  -[SFSiteCardCell setSource:]
  -[SFSiteCardCell initWithFrame:]
  -[SFSiteCardCell setSourceIcon:]
  -[SFSiteCardCell setBadge:]
  -[SFSiteCardCell source]
  -[SFSiteCardCell sourceIcon]
  -[SFSiteCardCell badge]
  -[SFSiteCardCell .cxx_destruct]
  -[SFSiteCardCell setImage:]
  -[SFSiteCardCell setHighlighted:]
  -[SFSiteCardCell setTitle:]
  -[SFSiteCardCell prepareForReuse]
  -[SFSiteCardCell image]
  -[SFSiteCardCell title]
  -[SFSiteCardCell subtitle]
  -[SFSiteCardCell initWithCoder:]


SFSiteCardSourceView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  UIImage *image
 @property  NSString *text

  // instance methods
  -[SFSiteCardSourceView initWithFrame:]
  -[SFSiteCardSourceView text]
  -[SFSiteCardSourceView .cxx_destruct]
  -[SFSiteCardSourceView setImage:]
  -[SFSiteCardSourceView image]
  -[SFSiteCardSourceView setText:]


SFBlockBasedCAAnimationDelegate : NSObject /usr/lib/libc++.1.dylib <CAAnimationDelegate>
 @property  @? animationDidStopBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFBlockBasedCAAnimationDelegate animationDelegateWithDidStopBlock:]

  // instance methods
  -[SFBlockBasedCAAnimationDelegate animationDidStop:finished:]
  -[SFBlockBasedCAAnimationDelegate associateLifetimeWithAnimation:]
  -[SFBlockBasedCAAnimationDelegate .cxx_destruct]
  -[SFBlockBasedCAAnimationDelegate setAnimationDidStopBlock:]
  -[SFBlockBasedCAAnimationDelegate animationDidStopBlock]


SFWebProcessPlugInPageExtensionController : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SFWebProcessPlugInPageExtensionController _setUpExtensionControllerInterface]
  -[SFWebProcessPlugInPageExtensionController clearExtensionScriptWorlds]
  -[SFWebProcessPlugInPageExtensionController finalizeJavaScriptForSharingExtension:arguments:]
  -[SFWebProcessPlugInPageExtensionController dealloc]
  -[SFWebProcessPlugInPageExtensionController .cxx_destruct]
  -[SFWebProcessPlugInPageExtensionController initWithBrowserContextController:]
  -[SFWebProcessPlugInPageExtensionController _clearExtensionControllerInterface]
  -[SFWebProcessPlugInPageExtensionController prepareJavaScriptWorldForSharingExtension:javaScript:]
  -[SFWebProcessPlugInPageExtensionController evaluateJavaScriptForSharingExtension:extraArguments:completionHandler:]


SFStartPageSectionHeader : UICollectionReusableView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  NSString *title
 @property  NSArray *actions

  // class methods
  +[SFStartPageSectionHeader reuseIdentifier]

  // instance methods
  -[SFStartPageSectionHeader _tap:]
  -[SFStartPageSectionHeader actions]
  -[SFStartPageSectionHeader setActions:]
  -[SFStartPageSectionHeader initWithFrame:]
  -[SFStartPageSectionHeader setModel:resolvingActionsUsingBlock:]
  -[SFStartPageSectionHeader updateConstraints]
  -[SFStartPageSectionHeader _addButtonWithTitle:actionIndex:]
  -[SFStartPageSectionHeader .cxx_destruct]
  -[SFStartPageSectionHeader setTitle:]
  -[SFStartPageSectionHeader prepareForReuse]
  -[SFStartPageSectionHeader title]
  -[SFStartPageSectionHeader initWithCoder:]


_SFReaderCustomProtocols : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFReaderCustomProtocols registerReaderCustomProtocols]
  +[_SFReaderCustomProtocols readerUserInterfaceScriptForContext:]


_SFLinkPreviewHeader : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFLinkPreviewHeaderContentViewDelegate, _SFFluidProgressViewDelegate>
 @property  <_SFLinkPreviewHeaderDelegate> *delegate
 @property  NSString *domain
 @property  _SFFluidProgressView *progressView
 @property  BOOL linkPreviewEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFLinkPreviewHeader defaultHeight]
  -[_SFLinkPreviewHeader domain]
  -[_SFLinkPreviewHeader isLinkPreviewEnabled]
  -[_SFLinkPreviewHeader .cxx_destruct]
  -[_SFLinkPreviewHeader setDomain:]
  -[_SFLinkPreviewHeader linkPreviewEnabled]
  -[_SFLinkPreviewHeader linkPreviewHeaderContentView:didEnableLinkPreview:]
  -[_SFLinkPreviewHeader intrinsicContentSize]
  -[_SFLinkPreviewHeader progressView]
  -[_SFLinkPreviewHeader fluidProgressViewDidShowProgress:]
  -[_SFLinkPreviewHeader fluidProgressViewWillShowProgress:]
  -[_SFLinkPreviewHeader setProgressView:]
  -[_SFLinkPreviewHeader setDelegate:]
  -[_SFLinkPreviewHeader delegate]
  -[_SFLinkPreviewHeader layoutSubviews]
  -[_SFLinkPreviewHeader initWithMinimumPreviewUI:]
  -[_SFLinkPreviewHeader setLinkPreviewEnabled:]


SFBrowserRemoteViewController : _UIRemoteViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <MPVolumeDisplaying, SFRemoteViewControllerProtocol>
 @property  <SFBrowserRemoteViewControllerDelegate> *delegate
 @property  UIWindowScene *windowSceneForVolumeDisplay
 @property  BOOL onScreenForVolumeDisplay
 @property  NSString *volumeAudioCategory
 @property  BOOL onScreen
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFBrowserRemoteViewController exportedInterface]
  +[SFBrowserRemoteViewController requestViewControllerWithConnectionHandler:]
  +[SFBrowserRemoteViewController serviceViewControllerInterface]

  // instance methods
  -[SFBrowserRemoteViewController willMoveToParentViewController:]
  -[SFBrowserRemoteViewController volumeAudioCategory]
  -[SFBrowserRemoteViewController .cxx_destruct]
  -[SFBrowserRemoteViewController didMoveToParentViewController:]
  -[SFBrowserRemoteViewController didLoadWebView]
  -[SFBrowserRemoteViewController didFinishInitialLoad:]
  -[SFBrowserRemoteViewController willDismissServiceViewController]
  -[SFBrowserRemoteViewController initWithNibName:bundle:]
  -[SFBrowserRemoteViewController fetchActivityViewControllerInfoForURL:title:]
  -[SFBrowserRemoteViewController executeCustomActivityProxyID:]
  -[SFBrowserRemoteViewController setRemoteSwipeGestureEnabled:]
  -[SFBrowserRemoteViewController willOpenURLInHostApplication:]
  -[SFBrowserRemoteViewController didDecideCookieSharingForURL:shouldCancel:]
  -[SFBrowserRemoteViewController initialLoadDidRedirectToURL:]
  -[SFBrowserRemoteViewController didChangeFullScreen:]
  -[SFBrowserRemoteViewController didResolveRedirectionWithURL:appLink:]
  -[SFBrowserRemoteViewController didDecideShouldShowLinkPreviews:]
  -[SFBrowserRemoteViewController willOpenCurrentPageInBrowser]
  -[SFBrowserRemoteViewController _sf_sceneWillEnterForeground:]
  -[SFBrowserRemoteViewController _sf_sceneDidEnterBackground:]
  -[SFBrowserRemoteViewController windowSceneForVolumeDisplay]
  -[SFBrowserRemoteViewController setDelegate:]
  -[SFBrowserRemoteViewController isOnScreenForVolumeDisplay]
  -[SFBrowserRemoteViewController delegate]
  -[SFBrowserRemoteViewController viewServiceDidTerminateWithError:]


_SFRequestDesktopSiteQuirksSnapshotTransformer : WBSConfigurationDataTransformer /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // instance methods
  -[_SFRequestDesktopSiteQuirksSnapshotTransformer objectFromData:]


SFQueueingServiceViewControllerProxy : NSProxy /usr/lib/libobjc.A.dylib
 @property  id target
 @property  <SFQueueingServiceViewControllerProxyDelegate> *delegate

  // instance methods
  -[SFQueueingServiceViewControllerProxy forwardInvocation:]
  -[SFQueueingServiceViewControllerProxy methodSignatureForSelector:]
  -[SFQueueingServiceViewControllerProxy forwardingTargetForSelector:]
  -[SFQueueingServiceViewControllerProxy target]
  -[SFQueueingServiceViewControllerProxy .cxx_destruct]
  -[SFQueueingServiceViewControllerProxy setTarget:]
  -[SFQueueingServiceViewControllerProxy initWithProtocol:]
  -[SFQueueingServiceViewControllerProxy setDelegate:]
  -[SFQueueingServiceViewControllerProxy delegate]


_SFBarHoverAssistant : NSObject /usr/lib/libc++.1.dylib <_SFDynamicBarAnimatorStateObserver>
 @property  UIView<_SFBarCommon> *bar
 @property  _SFDynamicBarAnimator *dynamicBarAnimator
 @property  UIView *containerView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFBarHoverAssistant attachToBar:withAnimator:inContainerView:]

  // instance methods
  -[_SFBarHoverAssistant bar]
  -[_SFBarHoverAssistant dynamicBarAnimatorWillLeaveSteadyState:]
  -[_SFBarHoverAssistant .cxx_destruct]
  -[_SFBarHoverAssistant _gestureIsOverBar]
  -[_SFBarHoverAssistant dynamicBarAnimatorStateDidChange:]
  -[_SFBarHoverAssistant containerView]
  -[_SFBarHoverAssistant initWithBar:withAnimator:inContainerView:]
  -[_SFBarHoverAssistant _hover:]
  -[_SFBarHoverAssistant dynamicBarAnimator]


SFPrivacyReportOverviewView : SFPrivacyReportGridView
 @property  BOOL usesInsetStyle

  // instance methods
  -[SFPrivacyReportOverviewView .cxx_destruct]
  -[SFPrivacyReportOverviewView itemViewCanUseCompactWidth:]
  -[SFPrivacyReportOverviewView usesInsetStyle]
  -[SFPrivacyReportOverviewView interItemSpacing]
  -[SFPrivacyReportOverviewView setUsesInsetStyle:]
  -[SFPrivacyReportOverviewView initWithPrivacyReportDataProvider:]


SFPrivacyReportOverviewCellContentView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFPrivacyReportGridItem>
 @property  UILabel *reportTitleLabel
 @property  UILabel *reportSubtitleLabel
 @property  double maxWidth
 @property  BOOL usesInsetStyle
 @property  <SFPrivacyReportGridItemDelegate> *delegate
 @property  unsigned long gridPosition
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFPrivacyReportOverviewCellContentView maxWidth]
  -[SFPrivacyReportOverviewCellContentView initWithFrame:]
  -[SFPrivacyReportOverviewCellContentView .cxx_destruct]
  -[SFPrivacyReportOverviewCellContentView setGridPosition:]
  -[SFPrivacyReportOverviewCellContentView reportTitleLabel]
  -[SFPrivacyReportOverviewCellContentView reportSubtitleLabel]
  -[SFPrivacyReportOverviewCellContentView usesInsetStyle]
  -[SFPrivacyReportOverviewCellContentView _updateHairlinesIfNeeded]
  -[SFPrivacyReportOverviewCellContentView gridPosition]
  -[SFPrivacyReportOverviewCellContentView willMoveToWindow:]
  -[SFPrivacyReportOverviewCellContentView setUsesInsetStyle:]
  -[SFPrivacyReportOverviewCellContentView setDelegate:]
  -[SFPrivacyReportOverviewCellContentView _updateLayoutMargins]
  -[SFPrivacyReportOverviewCellContentView delegate]
  -[SFPrivacyReportOverviewCellContentView setMaxWidth:]


SFDomainLabel : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  NSString *text
 @property  BOOL secure

  // instance methods
  -[SFDomainLabel _commonInit]
  -[SFDomainLabel isSecure]
  -[SFDomainLabel initWithFrame:]
  -[SFDomainLabel text]
  -[SFDomainLabel .cxx_destruct]
  -[SFDomainLabel setText:isSecure:]
  -[SFDomainLabel _makeAttributedString]
  -[SFDomainLabel initWithText:isSecure:]
  -[SFDomainLabel initWithCoder:]


_SFAutomaticPasswordInputViewController : UIInputViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFAutomaticPasswordInputViewDelegate, SFAutomaticPasswordInputViewSizing>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFAutomaticPasswordInputViewController inputViewControllerWithAutoFillContext:passwordRules:completion:]

  // instance methods
  -[_SFAutomaticPasswordInputViewController viewDidLoad]
  -[_SFAutomaticPasswordInputViewController _dismissKeyboard:]
  -[_SFAutomaticPasswordInputViewController dismissKeyboardPreservingFirstResponderIfNecessary]
  -[_SFAutomaticPasswordInputViewController _currentKeyboardSize]
  -[_SFAutomaticPasswordInputViewController initWithPassword:keyboardType:]
  -[_SFAutomaticPasswordInputViewController .cxx_destruct]
  -[_SFAutomaticPasswordInputViewController _postButtonPressedNotificationForButton:]
  -[_SFAutomaticPasswordInputViewController inputViewControllerDidSelectUseCustomPassword:]
  -[_SFAutomaticPasswordInputViewController _inputViewControllerShouldDirectlyInsertPassword]
  -[_SFAutomaticPasswordInputViewController _updateKeyboardMetricsAndInterfaceOrientationIfNeeded]
  -[_SFAutomaticPasswordInputViewController viewWillAppear:]
  -[_SFAutomaticPasswordInputViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[_SFAutomaticPasswordInputViewController viewDidDisappear:]
  -[_SFAutomaticPasswordInputViewController inputViewControllerDidSelectUseStrongPassword:]
  -[_SFAutomaticPasswordInputViewController _updateKeyboardHeight]
  -[_SFAutomaticPasswordInputViewController intrinsicContentSizeForInputView:]


_SFAutomaticTabClosingUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFAutomaticTabClosingUtilities settingsTitleForAutomaticTabClosingInterval:]
  +[_SFAutomaticTabClosingUtilities promptTitleForAutomaticTabClosingInterval:]
  +[_SFAutomaticTabClosingUtilities setAutomaticTabClosingInterval:]
  +[_SFAutomaticTabClosingUtilities automaticTabClosingInterval]
  +[_SFAutomaticTabClosingUtilities userHasPreferenceForAutomaticTabClosingInterval]
  +[_SFAutomaticTabClosingUtilities analyticsTitleForAutomaticTabClosingInterval:]
  +[_SFAutomaticTabClosingUtilities timeIntervalForAutomaticTabClosingInterval:]
  +[_SFAutomaticTabClosingUtilities resetAutomaticTabClosingIntervalPreference]


SFDownloadsBarButtonItemView : UIButton /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFDeferrableUpdateView, CAStateControllerDelegate>
 @property  UIBarButtonItem *barButtonItem

  // class methods
  +[SFDownloadsBarButtonItemView buttonWithBarButtonItem:]

  // instance methods
  -[SFDownloadsBarButtonItemView _selectedIndicatorBounds]
  -[SFDownloadsBarButtonItemView barButtonItem]
  -[SFDownloadsBarButtonItemView didMoveToWindow]
  -[SFDownloadsBarButtonItemView _dynamicUserInterfaceTraitDidChange]
  -[SFDownloadsBarButtonItemView _buttonPressed]
  -[SFDownloadsBarButtonItemView pulse]
  -[SFDownloadsBarButtonItemView .cxx_destruct]
  -[SFDownloadsBarButtonItemView intrinsicContentSize]
  -[SFDownloadsBarButtonItemView _barButtonHitRect]
  -[SFDownloadsBarButtonItemView _installSubviews]
  -[SFDownloadsBarButtonItemView updateContents]
  -[SFDownloadsBarButtonItemView deferrableUpdateViewState]
  -[SFDownloadsBarButtonItemView pointInside:withEvent:]
  -[SFDownloadsBarButtonItemView pointerInteraction:regionForRequest:defaultRegion:]
  -[SFDownloadsBarButtonItemView setEnabled:]
  -[SFDownloadsBarButtonItemView stateController:transitionDidStop:completed:]
  -[SFDownloadsBarButtonItemView setProgress:]
  -[SFDownloadsBarButtonItemView setBarButtonItem:]
  -[SFDownloadsBarButtonItemView tintColorDidChange]
  -[SFDownloadsBarButtonItemView layoutSubviews]


SFDownloadsBarButtonItem : UIBarButtonItem /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  double progress

  // instance methods
  -[SFDownloadsBarButtonItem pulse]
  -[SFDownloadsBarButtonItem .cxx_destruct]
  -[SFDownloadsBarButtonItem initWithTarget:action:]
  -[SFDownloadsBarButtonItem setEnabled:]
  -[SFDownloadsBarButtonItem setProgress:]
  -[SFDownloadsBarButtonItem progress]


_SFPerSitePreferencesPopoverViewController : UITableViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFSwitchTableViewCellDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFPerSitePreferencesPopoverViewController reloadPreferences]
  -[_SFPerSitePreferencesPopoverViewController _done:]
  -[_SFPerSitePreferencesPopoverViewController tableView:numberOfRowsInSection:]
  -[_SFPerSitePreferencesPopoverViewController tableView:didSelectRowAtIndexPath:]
  -[_SFPerSitePreferencesPopoverViewController .cxx_destruct]
  -[_SFPerSitePreferencesPopoverViewController tableView:titleForHeaderInSection:]
  -[_SFPerSitePreferencesPopoverViewController tableView:cellForRowAtIndexPath:]
  -[_SFPerSitePreferencesPopoverViewController _initializePreferences]
  -[_SFPerSitePreferencesPopoverViewController _generalPageSection]
  -[_SFPerSitePreferencesPopoverViewController _securePageSection]
  -[_SFPerSitePreferencesPopoverViewController _indexPathForView:]
  -[_SFPerSitePreferencesPopoverViewController _preferenceRowIndexPathForCellAtIndexPath:]
  -[_SFPerSitePreferencesPopoverViewController _preferenceAtIndexPath:]
  -[_SFPerSitePreferencesPopoverViewController _setPreferenceValue:forPreference:]
  -[_SFPerSitePreferencesPopoverViewController _didRetrieveValue:forPreference:]
  -[_SFPerSitePreferencesPopoverViewController initWithDomain:shouldShowSecurePreferences:perSitePreferencesVendor:]
  -[_SFPerSitePreferencesPopoverViewController numberOfSectionsInTableView:]
  -[_SFPerSitePreferencesPopoverViewController switchTableViewCell:didChangeSwitchState:]
  -[_SFPerSitePreferencesPopoverViewController _setPreferenceValueIndex:forView:]
  -[_SFPerSitePreferencesPopoverViewController viewDidLayoutSubviews]


_SFPerSitePreferencesSection : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *title
 @property  NSArray *preferences

  // instance methods
  -[_SFPerSitePreferencesSection preferences]
  -[_SFPerSitePreferencesSection .cxx_destruct]
  -[_SFPerSitePreferencesSection initWithTitle:preferences:]
  -[_SFPerSitePreferencesSection title]


SFDialogAction : NSObject /usr/lib/libc++.1.dylib
 @property  long long activatingKeyboardShortcut
 @property  long long actionType
 @property  NSString *title
 @property  BOOL hasCustomAction

  // class methods
  +[SFDialogAction actionWithTitle:activatingKeyboardShortcut:type:]

  // instance methods
  -[SFDialogAction actionType]
  -[SFDialogAction .cxx_destruct]
  -[SFDialogAction setCustomAction:]
  -[SFDialogAction title]
  -[SFDialogAction initWithTitle:activatingKeyboardShortcut:type:]
  -[SFDialogAction activatingKeyboardShortcut]
  -[SFDialogAction hasCustomAction]
  -[SFDialogAction triggerCustomAction]


_SFDownloadCurrentPageActivity : UIApplicationExtensionActivity /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[_SFDownloadCurrentPageActivity canPerformWithActivityItems:]
  -[_SFDownloadCurrentPageActivity performActivity]
  -[_SFDownloadCurrentPageActivity .cxx_destruct]
  -[_SFDownloadCurrentPageActivity prepareWithActivityItems:]
  -[_SFDownloadCurrentPageActivity initWithWebView:]
  -[_SFDownloadCurrentPageActivity _presentActivityOnViewController:animated:completion:]


SFCredentialDisplayData : NSObject /usr/lib/libc++.1.dylib
 @property  WBSCredentialMatch *match
 @property  NSString *detail
 @property  NSDate *creationDate

  // class methods
  +[SFCredentialDisplayData descriptionForPasswordWithUser:creationDate:]

  // instance methods
  -[SFCredentialDisplayData match]
  -[SFCredentialDisplayData creationDate]
  -[SFCredentialDisplayData .cxx_destruct]
  -[SFCredentialDisplayData initWithMatch:detail:creationDate:]
  -[SFCredentialDisplayData detail]


_SFDynamicBarAnimator : NSObject /usr/lib/libc++.1.dylib
 @property  long long state
 @property  long long targetState
 @property  double topBarHeight
 @property  double bottomBarOffset
 @property  BOOL sendingOutputsDidChange
 @property  BOOL trackingDrag
 @property  double minimumTopBarHeight
 @property  <_SFDynamicBarAnimatorDelegate> *delegate

  // instance methods
  -[_SFDynamicBarAnimator isTrackingDrag]
  -[_SFDynamicBarAnimator _updateDisplayLink]
  -[_SFDynamicBarAnimator _bottomBarOffsetForTopBarHeight:]
  -[_SFDynamicBarAnimator endScrolling]
  -[_SFDynamicBarAnimator init]
  -[_SFDynamicBarAnimator setMinimumTopBarHeight:]
  -[_SFDynamicBarAnimator updateDraggingWithOffset:]
  -[_SFDynamicBarAnimator _transitionToSteadyState]
  -[_SFDynamicBarAnimator canTransitionToState:]
  -[_SFDynamicBarAnimator setTopBarHeight:forState:]
  -[_SFDynamicBarAnimator dealloc]
  -[_SFDynamicBarAnimator .cxx_destruct]
  -[_SFDynamicBarAnimator setBottomBarOffset:forState:]
  -[_SFDynamicBarAnimator attemptTransitionToState:animated:]
  -[_SFDynamicBarAnimator beginDraggingWithOffset:]
  -[_SFDynamicBarAnimator _canTransitionToState:withMinimumTopBarHeight:]
  -[_SFDynamicBarAnimator _moveBarsWithDelta:]
  -[_SFDynamicBarAnimator _updateOutputs]
  -[_SFDynamicBarAnimator endDraggingWithTargetOffset:velocity:]
  -[_SFDynamicBarAnimator topBarHeight]
  -[_SFDynamicBarAnimator _constrainTopBarHeight:]
  -[_SFDynamicBarAnimator performBatchUpdates:]
  -[_SFDynamicBarAnimator minimumTopBarHeight]
  -[_SFDynamicBarAnimator _constrainTopBarHeight:withMinimumTopBarHeight:]
  -[_SFDynamicBarAnimator targetState]
  -[_SFDynamicBarAnimator _setInSteadyState:]
  -[_SFDynamicBarAnimator removeObserver:]
  -[_SFDynamicBarAnimator bottomBarOffset]
  -[_SFDynamicBarAnimator _displayLinkFired:]
  -[_SFDynamicBarAnimator setDelegate:]
  -[_SFDynamicBarAnimator _endDraggingWithVelocity:]
  -[_SFDynamicBarAnimator state]
  -[_SFDynamicBarAnimator isSendingOutputsDidChange]
  -[_SFDynamicBarAnimator addObserver:]
  -[_SFDynamicBarAnimator delegate]


SFReaderAppearanceThemeSelector : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  long long selectedTheme
 @property  @? selectedThemeChangedBlock

  // class methods
  +[SFReaderAppearanceThemeSelector themeSelectorWithBlock:]
  +[SFReaderAppearanceThemeSelector requiredHeight]

  // instance methods
  -[SFReaderAppearanceThemeSelector initWithFrame:]
  -[SFReaderAppearanceThemeSelector .cxx_destruct]
  -[SFReaderAppearanceThemeSelector _createThemeButtons]
  -[SFReaderAppearanceThemeSelector setSelectedThemeChangedBlock:]
  -[SFReaderAppearanceThemeSelector _updateSelectedTheme]
  -[SFReaderAppearanceThemeSelector _buttonForTheme:]
  -[SFReaderAppearanceThemeSelector _imageForTheme:selected:]
  -[SFReaderAppearanceThemeSelector _themeButtonAction:]
  -[SFReaderAppearanceThemeSelector _themeButtonImageWithFillColor:strokeColor:selected:]
  -[SFReaderAppearanceThemeSelector _themeForButton:]
  -[SFReaderAppearanceThemeSelector selectedTheme]
  -[SFReaderAppearanceThemeSelector setSelectedTheme:]
  -[SFReaderAppearanceThemeSelector _changeSelectionForTheme:selected:]
  -[SFReaderAppearanceThemeSelector selectedThemeChangedBlock]


_SFDownloadActivityItemProvider : _SFActivityItemProvider <UIActivityItemApplicationExtensionSource>
 @property  _SFQuickLookDocument *quickLookDocument
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFDownloadActivityItemProvider item]
  -[_SFDownloadActivityItemProvider activityViewController:dataTypeIdentifierForActivityType:]
  -[_SFDownloadActivityItemProvider .cxx_destruct]
  -[_SFDownloadActivityItemProvider pageTitle]
  -[_SFDownloadActivityItemProvider quickLookDocument]
  -[_SFDownloadActivityItemProvider initWithQuickLookDocument:URL:webView:]
  -[_SFDownloadActivityItemProvider setQuickLookDocument:]
  -[_SFDownloadActivityItemProvider activityViewControllerApplicationExtensionItem:]


_SFSettingsAlertItem : NSObject /usr/lib/libc++.1.dylib
 @property  UIView<SFSettingsAlertItemView> *view
 @property  id controller
 @property  @? viewConfigurationBlock
 @property  NSString *textStyle
 @property  UIColor *tintColor
 @property  UIImage *icon
 @property  @? handler
 @property  UIView *customView
 @property  NSArray *subItems
 @property  _SFSettingsAlertItem *group
 @property  long long type
 @property  NSString *title
 @property  NSAttributedString *attributedTitle
 @property  NSString *subtitle
 @property  BOOL enabled
 @property  NSString *accessibilityIdentifier

  // class methods
  +[_SFSettingsAlertItem buttonWithAttributedTitle:textStyle:icon:handler:]
  +[_SFSettingsAlertItem stepperWithController:handler:]
  +[_SFSettingsAlertItem optionsGroupWithTitle:controller:]
  +[_SFSettingsAlertItem itemWithCustomView:]
  +[_SFSettingsAlertItem buttonWithTitle:textStyle:icon:handler:]

  // instance methods
  -[_SFSettingsAlertItem group]
  -[_SFSettingsAlertItem setView:]
  -[_SFSettingsAlertItem setSubtitle:]
  -[_SFSettingsAlertItem setTintColor:]
  -[_SFSettingsAlertItem enabled]
  -[_SFSettingsAlertItem subItems]
  -[_SFSettingsAlertItem setTextStyle:]
  -[_SFSettingsAlertItem tintColor]
  -[_SFSettingsAlertItem setAttributedTitle:]
  -[_SFSettingsAlertItem attributedTitle]
  -[_SFSettingsAlertItem initWithType:]
  -[_SFSettingsAlertItem .cxx_destruct]
  -[_SFSettingsAlertItem textStyle]
  -[_SFSettingsAlertItem icon]
  -[_SFSettingsAlertItem handler]
  -[_SFSettingsAlertItem setTitle:]
  -[_SFSettingsAlertItem setIcon:]
  -[_SFSettingsAlertItem view]
  -[_SFSettingsAlertItem title]
  -[_SFSettingsAlertItem setAccessibilityIdentifier:]
  -[_SFSettingsAlertItem type]
  -[_SFSettingsAlertItem setHandler:]
  -[_SFSettingsAlertItem setCustomView:]
  -[_SFSettingsAlertItem setEnabled:]
  -[_SFSettingsAlertItem controller]
  -[_SFSettingsAlertItem accessibilityIdentifier]
  -[_SFSettingsAlertItem subtitle]
  -[_SFSettingsAlertItem updateOptionsGroupDetailLabel]
  -[_SFSettingsAlertItem setViewConfigurationBlock:]
  -[_SFSettingsAlertItem setSubItems:]
  -[_SFSettingsAlertItem customView]
  -[_SFSettingsAlertItem setController:]
  -[_SFSettingsAlertItem viewConfigurationBlock]
  -[_SFSettingsAlertItem _updateButtonTitle]


_SFSettingsAlertController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  _SFSettingsAlertContentController *_rootContentController
 @property  NSArray *items
 @property  _SFSettingsAlertItem *focusedItem

  // instance methods
  -[_SFSettingsAlertController viewDidLoad]
  -[_SFSettingsAlertController items]
  -[_SFSettingsAlertController .cxx_destruct]
  -[_SFSettingsAlertController focusedItem]
  -[_SFSettingsAlertController addItem:]
  -[_SFSettingsAlertController initWithNibName:bundle:]
  -[_SFSettingsAlertController setPreferredContentSize:]
  -[_SFSettingsAlertController _pushSubItemsForGroup:]
  -[_SFSettingsAlertController _rootContentController]
  -[_SFSettingsAlertController addDivider]
  -[_SFSettingsAlertController setFocusedItem:]


_SFSettingsAlertContentController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UIGestureRecognizerDelegate, SFSettingsAlertItemViewDelegate>
 @property  NSArray *items
 @property  _SFSettingsAlertItem *focusedItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFSettingsAlertContentController _updatePreferredContentSize]
  -[_SFSettingsAlertContentController items]
  -[_SFSettingsAlertContentController _alertController]
  -[_SFSettingsAlertContentController .cxx_destruct]
  -[_SFSettingsAlertContentController gestureRecognizerShouldBegin:]
  -[_SFSettingsAlertContentController focusedItem]
  -[_SFSettingsAlertContentController addItem:]
  -[_SFSettingsAlertContentController initWithNibName:bundle:]
  -[_SFSettingsAlertContentController traitCollectionDidChange:]
  -[_SFSettingsAlertContentController observeValueForKeyPath:ofObject:change:context:]
  -[_SFSettingsAlertContentController viewWillAppear:]
  -[_SFSettingsAlertContentController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[_SFSettingsAlertContentController addDivider]
  -[_SFSettingsAlertContentController setFocusedItem:]
  -[_SFSettingsAlertContentController _updateSeparators]
  -[_SFSettingsAlertContentController _addGroupSeparatorIfNeededBeforeItemAtIndex:]
  -[_SFSettingsAlertContentController _addViewForItem:]
  -[_SFSettingsAlertContentController _panRecognized:]
  -[_SFSettingsAlertContentController _updateFocusedItemConstraints]
  -[_SFSettingsAlertContentController _createViewForItem:]
  -[_SFSettingsAlertContentController _alignButtonImageView:]
  -[_SFSettingsAlertContentController _tappedItemView:]
  -[_SFSettingsAlertContentController _stepperValueChanged:]
  -[_SFSettingsAlertContentController viewDidLayoutSubviews]
  -[_SFSettingsAlertContentController loadView]
  -[_SFSettingsAlertContentController alertItemViewContentSizeDidChange:]


_SFWebProcessPlugInReaderEnabledPageController : _SFWebProcessPlugInAutoFillPageController <SFReaderWebProcessControllerProtocol>
 @property  _SFReaderWebProcessPlugInPageController *readerPageController
 @property  NSDictionary *initalArticleScrollPositionAsDictionary
 @property  long long cachedReaderTopScrollOffset
 @property  NSDictionary *initialReaderConfiguration
 @property  BOOL viewingReadingListArchive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFWebProcessPlugInReaderEnabledPageController initialReaderConfiguration]
  -[_SFWebProcessPlugInReaderEnabledPageController cachedReaderTopScrollOffset]
  -[_SFWebProcessPlugInReaderEnabledPageController _detectAvailabilityAfterDelay:loadEvent:]
  -[_SFWebProcessPlugInReaderEnabledPageController _searchForSmartAppBannerMetaContent]
  -[_SFWebProcessPlugInReaderEnabledPageController initWithPlugIn:contextController:]
  -[_SFWebProcessPlugInReaderEnabledPageController .cxx_construct]
  -[_SFWebProcessPlugInReaderEnabledPageController readerTextWasExtracted:withMetadata:wasDeterminingAvailability:]
  -[_SFWebProcessPlugInReaderEnabledPageController webProcessPlugInBrowserContextController:didCommitLoadForFrame:]
  -[_SFWebProcessPlugInReaderEnabledPageController webProcessPlugInBrowserContextController:didSameDocumentNavigation:forFrame:]
  -[_SFWebProcessPlugInReaderEnabledPageController _detectReaderAvailabilityAfterSameDocumentNavigation]
  -[_SFWebProcessPlugInReaderEnabledPageController initalArticleScrollPositionAsDictionary]
  -[_SFWebProcessPlugInReaderEnabledPageController prepareReaderContentForPrinting]
  -[_SFWebProcessPlugInReaderEnabledPageController .cxx_destruct]
  -[_SFWebProcessPlugInReaderEnabledPageController readerContentDidBecomeReadyWithDetectedLanguage:]
  -[_SFWebProcessPlugInReaderEnabledPageController _clearReaderControllerInterface]
  -[_SFWebProcessPlugInReaderEnabledPageController webProcessPlugInBrowserContextController:didFinishDocumentLoadForFrame:]
  -[_SFWebProcessPlugInReaderEnabledPageController setCachedReaderTopScrollOffset:]
  -[_SFWebProcessPlugInReaderEnabledPageController webProcessPlugInBrowserContextController:renderingProgressDidChange:]
  -[_SFWebProcessPlugInReaderEnabledPageController isViewingReadingListArchive]
  -[_SFWebProcessPlugInReaderEnabledPageController didDetermineReaderAvailability:]
  -[_SFWebProcessPlugInReaderEnabledPageController collectReadingListItemInfoWithBookmarkID:]
  -[_SFWebProcessPlugInReaderEnabledPageController _appBannerMetaElementInHeaderElement:]
  -[_SFWebProcessPlugInReaderEnabledPageController collectArticleContent]
  -[_SFWebProcessPlugInReaderEnabledPageController articleContentDidChange]
  -[_SFWebProcessPlugInReaderEnabledPageController didFinishPresentationUpdateAfterTransitioningToReader]
  -[_SFWebProcessPlugInReaderEnabledPageController webProcessPlugInBrowserContextController:didFinishLoadForFrame:]
  -[_SFWebProcessPlugInReaderEnabledPageController activateFont:]
  -[_SFWebProcessPlugInReaderEnabledPageController prepareToTransitionToReader]
  -[_SFWebProcessPlugInReaderEnabledPageController didSetReaderConfiguration:]
  -[_SFWebProcessPlugInReaderEnabledPageController setReaderIsActive:]
  -[_SFWebProcessPlugInReaderEnabledPageController webProcessPlugInBrowserContextController:globalObjectIsAvailableForFrame:inScriptWorld:]
  -[_SFWebProcessPlugInReaderEnabledPageController setInitalArticleScrollPositionAsDictionary:]
  -[_SFWebProcessPlugInReaderEnabledPageController loadNewReaderArticle]
  -[_SFWebProcessPlugInReaderEnabledPageController readerPageController]
  -[_SFWebProcessPlugInReaderEnabledPageController webProcessPlugInBrowserContextController:didStartProvisionalLoadForFrame:]
  -[_SFWebProcessPlugInReaderEnabledPageController _setUpReaderControllerInterface]
  -[_SFWebProcessPlugInReaderEnabledPageController _setUpReaderActivityListenerProxy]
  -[_SFWebProcessPlugInReaderEnabledPageController didCreateReaderPageContextHandle:]
  -[_SFWebProcessPlugInReaderEnabledPageController checkReaderAvailability]
  -[_SFWebProcessPlugInReaderEnabledPageController _appBannerMetaTagObserverProxy]
  -[_SFWebProcessPlugInReaderEnabledPageController willDestroyBrowserContextController:]
  -[_SFWebProcessPlugInReaderEnabledPageController originalArticleFinder]
  -[_SFWebProcessPlugInReaderEnabledPageController setReaderInitialTopScrollOffset:configuration:isViewingArchive:]
  -[_SFWebProcessPlugInReaderEnabledPageController collectReaderContentForMail]
  -[_SFWebProcessPlugInReaderEnabledPageController setConfiguration:]
  -[_SFWebProcessPlugInReaderEnabledPageController setReaderPageController:]


_SFBrowserConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL privateBrowsingEnabled
 @property  <UITraitEnvironment> *traitEnvironment
 @property  BOOL controlledByAutomation
 @property  BOOL allowsKeyboardCorrectionLearning
 @property  BOOL allowsRestoringEducationTabs
 @property  BOOL allowsSearchSuggestions
 @property  BOOL allowsSiteSpecificSearch
 @property  BOOL allowsSpeculativeLoading
 @property  BOOL allowsStreamlinedLogin
 @property  BOOL allowsUserActivityFeedback
 @property  BOOL usesPersistentDataStore
 @property  BOOL allowsSearchFeedback
 @property  BOOL allowsClosingLastTab
 @property  BOOL allowsPersistingTabState
 @property  BOOL allowsReopeningClosedTabs
 @property  unsigned long barTintStyle
 @property  BOOL usesDarkTheme

  // instance methods
  -[_SFBrowserConfiguration allowsClosingLastTab]
  -[_SFBrowserConfiguration allowsKeyboardCorrectionLearning]
  -[_SFBrowserConfiguration isControlledByAutomation]
  -[_SFBrowserConfiguration allowsSiteSpecificSearch]
  -[_SFBrowserConfiguration allowsSpeculativeLoading]
  -[_SFBrowserConfiguration .cxx_destruct]
  -[_SFBrowserConfiguration allowsRestoringEducationTabs]
  -[_SFBrowserConfiguration barTintStyle]
  -[_SFBrowserConfiguration isEqual:]
  -[_SFBrowserConfiguration allowsUserActivityFeedback]
  -[_SFBrowserConfiguration allowsSearchSuggestions]
  -[_SFBrowserConfiguration allowsPersistingTabState]
  -[_SFBrowserConfiguration allowsReopeningClosedTabs]
  -[_SFBrowserConfiguration initWithPrivateBrowsingEnabled:traitEnvironment:controlledByAutomation:]
  -[_SFBrowserConfiguration isPrivateBrowsingEnabled]
  -[_SFBrowserConfiguration traitEnvironment]
  -[_SFBrowserConfiguration usesDarkTheme]
  -[_SFBrowserConfiguration allowsSearchFeedback]
  -[_SFBrowserConfiguration allowsStreamlinedLogin]
  -[_SFBrowserConfiguration usesPersistentDataStore]


_SFFindOnPageInputBar : UISearchBar /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[_SFFindOnPageInputBar initWithFrame:]
  -[_SFFindOnPageInputBar contentCompressionResistancePriorityForAxis:]
  -[_SFFindOnPageInputBar contentHuggingPriorityForAxis:]
  -[_SFFindOnPageInputBar intrinsicContentSize]


_SFFindOnPageToolbar : UIInputView /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UISearchBarDelegate>
 @property  UITextField *inputField
 @property  NSString *searchText
 @property  BOOL usesNarrowLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFFindOnPageToolbar _done]
  -[_SFFindOnPageToolbar initWithDelegate:]
  -[_SFFindOnPageToolbar next:]
  -[_SFFindOnPageToolbar .cxx_destruct]
  -[_SFFindOnPageToolbar safeAreaInsetsDidChange]
  -[_SFFindOnPageToolbar intrinsicContentSize]
  -[_SFFindOnPageToolbar searchBarTextDidEndEditing:]
  -[_SFFindOnPageToolbar updateUI]
  -[_SFFindOnPageToolbar searchText]
  -[_SFFindOnPageToolbar dismiss:]
  -[_SFFindOnPageToolbar setSearchText:]
  -[_SFFindOnPageToolbar leftContentViewSize]
  -[_SFFindOnPageToolbar _accessoryViewHeight]
  -[_SFFindOnPageToolbar rightContentViewSize]
  -[_SFFindOnPageToolbar searchBar:textDidChange:]
  -[_SFFindOnPageToolbar searchBarShouldBeginEditing:]
  -[_SFFindOnPageToolbar setUsesNarrowLayout:]
  -[_SFFindOnPageToolbar inputField]
  -[_SFFindOnPageToolbar usesNarrowLayout]
  -[_SFFindOnPageToolbar previous:]
  -[_SFFindOnPageToolbar searchBarTextDidBeginEditing:]
  -[_SFFindOnPageToolbar _toolbarFrame]
  -[_SFFindOnPageToolbar searchBarSearchButtonClicked:]
  -[_SFFindOnPageToolbar _keyboardWillChangeFrame:]
  -[_SFFindOnPageToolbar layoutSubviews]
  -[_SFFindOnPageToolbar _initializeToolbarItems]
  -[_SFFindOnPageToolbar _toolbarVerticalInset]
  -[_SFFindOnPageToolbar _matchLabelText]
  -[_SFFindOnPageToolbar _updateEditing:]
  -[_SFFindOnPageToolbar _doUpdateSearchText]
  -[_SFFindOnPageToolbar _keyboardIsSplit]


SFBarButtonItemLongPressGestureRecognizer : UILongPressGestureRecognizer /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UIGestureRecognizerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFBarButtonItemLongPressGestureRecognizer gestureRecognizerTarget:longPressAction:touchDownAction:attachedToBarButtonItem:]

  // instance methods
  -[SFBarButtonItemLongPressGestureRecognizer longPress:]
  -[SFBarButtonItemLongPressGestureRecognizer _contentSizeCategoryDidChange:]
  -[SFBarButtonItemLongPressGestureRecognizer touchesBegan:withEvent:]
  -[SFBarButtonItemLongPressGestureRecognizer .cxx_destruct]
  -[SFBarButtonItemLongPressGestureRecognizer _invokeLongPressAction]
  -[SFBarButtonItemLongPressGestureRecognizer gestureRecognizerShouldBegin:]
  -[SFBarButtonItemLongPressGestureRecognizer _updateMinimumPressDurationForContentSizeCategory:]


_SFLinkRedirectionResolver : NSObject /usr/lib/libc++.1.dylib <SFSafariViewControllerDelegateInternal>
 @property  SFSafariViewController *safariViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFLinkRedirectionResolver safariViewController:didResolveRedirectionWithURL:appLink:]
  -[_SFLinkRedirectionResolver initWithURL:completionHandler:]
  -[_SFLinkRedirectionResolver safariViewController]
  -[_SFLinkRedirectionResolver .cxx_destruct]


_SFPageFormatMenuController : NSObject /usr/lib/libc++.1.dylib <_SFPageFormatMenuItemControllerDelegate>
 @property  <_SFBrowserContentController> *browserContentController
 @property  UIViewController *viewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFPageFormatMenuController viewController]
  -[_SFPageFormatMenuController viewControllerForPresentationForItemController:]
  -[_SFPageFormatMenuController _readerAvailabilityDidChange:]
  -[_SFPageFormatMenuController _readerTextSizeAlertItem]
  -[_SFPageFormatMenuController _pageZoomAlertItem]
  -[_SFPageFormatMenuController _readerAlertItem]
  -[_SFPageFormatMenuController _buildTranslationAlertItemsWithSourceInfo:]
  -[_SFPageFormatMenuController .cxx_destruct]
  -[_SFPageFormatMenuController _readerFontAlertItem]
  -[_SFPageFormatMenuController _readerThemeAlertItem]
  -[_SFPageFormatMenuController _canHideToolbar]
  -[_SFPageFormatMenuController _fullScreenAlertItem]
  -[_SFPageFormatMenuController _desktopMobileToggleAlertItemWithOrientation:]
  -[_SFPageFormatMenuController _canToggleContentBlockers]
  -[_SFPageFormatMenuController _contentBlockersToggleAlertItem]
  -[_SFPageFormatMenuController _sitePreferencesAlertItem]
  -[_SFPageFormatMenuController browserContentController]
  -[_SFPageFormatMenuController _anchorInWindowCoordinatesForAlert:]
  -[_SFPageFormatMenuController _hasStartedTranslation]
  -[_SFPageFormatMenuController _exitTranslationAlertItem]
  -[_SFPageFormatMenuController _internalTapToRadarTranslationAlertItem]
  -[_SFPageFormatMenuController _translateAlertItemForLocaleIdentifier:]
  -[_SFPageFormatMenuController initWithBrowserContentController:]
  -[_SFPageFormatMenuController presentMenuFromViewController:withSourceInfo:]
  -[_SFPageFormatMenuController _translationAvailabilityDidChange:]


_SFPageZoomStepperController : NSObject /usr/lib/libc++.1.dylib <_SFSettingsAlertStepperController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFPageZoomStepperController dealloc]
  -[_SFPageZoomStepperController .cxx_destruct]
  -[_SFPageZoomStepperController initWithDocument:preferenceManager:]
  -[_SFPageZoomStepperController _pageZoomChanged:]
  -[_SFPageZoomStepperController _updateButtonsEnabledWithZoomFactor:]
  -[_SFPageZoomStepperController _updateButtonsEnabledOnMainQueueWithZoomFactor:]
  -[_SFPageZoomStepperController resetValue:]
  -[_SFPageZoomStepperController prepareStepper:]
  -[_SFPageZoomStepperController incrementValue:]
  -[_SFPageZoomStepperController decrementValue:]


_SFReaderTextSizeStepperController : NSObject /usr/lib/libc++.1.dylib <_SFSettingsAlertStepperController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFReaderTextSizeStepperController .cxx_destruct]
  -[_SFReaderTextSizeStepperController _updateStepperControls:]
  -[_SFReaderTextSizeStepperController prepareStepper:]
  -[_SFReaderTextSizeStepperController incrementValue:]
  -[_SFReaderTextSizeStepperController decrementValue:]
  -[_SFReaderTextSizeStepperController initWithReaderContext:]


_SFSiteIconView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  WebBookmark *bookmark
 @property  UIImage *leadingImage
 @property  UIImage *image
 @property  <_SFSiteIconViewUpdateObserver> *updateObserver
 @property  BOOL shouldUseModernStyling
 @property  BOOL shouldShowDropShadow

  // instance methods
  -[_SFSiteIconView bookmark]
  -[_SFSiteIconView updateBookmarkData]
  -[_SFSiteIconView setBookmark:]
  -[_SFSiteIconView initWithFrame:]
  -[_SFSiteIconView _updateSiteIconViewWithTouchIconResponse:]
  -[_SFSiteIconView dealloc]
  -[_SFSiteIconView _setImage:withBackgroundColor:]
  -[_SFSiteIconView _updateMonogramLabelSizeAndFont]
  -[_SFSiteIconView .cxx_destruct]
  -[_SFSiteIconView setImage:]
  -[_SFSiteIconView setShouldShowDropShadow:]
  -[_SFSiteIconView _setState:]
  -[_SFSiteIconView image]
  -[_SFSiteIconView setUpdateObserver:]
  -[_SFSiteIconView _imageFrame]
  -[_SFSiteIconView _setGlyph:withBackgroundColor:]
  -[_SFSiteIconView updateObserver]
  -[_SFSiteIconView _updateGlyphConfiguration]
  -[_SFSiteIconView shouldShowDropShadow]
  -[_SFSiteIconView _displayDefaultFolderIcon]
  -[_SFSiteIconView leadingImage]
  -[_SFSiteIconView shouldUseModernStyling]
  -[_SFSiteIconView _effectiveBackgroundColor]
  -[_SFSiteIconView _setSiteIcon:withBackgroundColor:]
  -[_SFSiteIconView _cancelTouchIconRequest]
  -[_SFSiteIconView _glyphConfiguration]
  -[_SFSiteIconView _tintedFolderImage]
  -[_SFSiteIconView setLeadingImage:]
  -[_SFSiteIconView _setMonogramWithString:backgroundColor:]
  -[_SFSiteIconView _inferredIconSize]
  -[_SFSiteIconView layoutSubviews]
  -[_SFSiteIconView _monogramFontSize]
  -[_SFSiteIconView setShouldUseModernStyling:]


_SFHairlineBorderView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  UIColor *borderColor

  // instance methods
  -[_SFHairlineBorderView setBorderColor:]
  -[_SFHairlineBorderView initWithFrame:]
  -[_SFHairlineBorderView .cxx_destruct]
  -[_SFHairlineBorderView borderColor]
  -[_SFHairlineBorderView layoutSubviews]


_SFPinnableBanner : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  BOOL pinnedToTop
 @property  BOOL initiallyBehindNavigationBar

  // class methods
  +[_SFPinnableBanner unpinAnimationDuration]
  +[_SFPinnableBanner unpinAnimationDelay]
  +[_SFPinnableBanner pinAnimationDelay]

  // instance methods
  -[_SFPinnableBanner isPinnedToTop]
  -[_SFPinnableBanner setPinnedToTop:]
  -[_SFPinnableBanner isInitiallyBehindNavigationBar]
  -[_SFPinnableBanner setInitiallyBehindNavigationBar:]
  -[_SFPinnableBanner invalidateBannerLayout]
  -[_SFPinnableBanner contentSizeCategoryDidChange]


_SFNavigationBarItem : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *text
 @property  NSString *textWhenExpanded
 @property  unsigned long startIndexOfTextInExpandedText
 @property  NSString *customPlaceholderText
 @property  BOOL showsLockIcon
 @property  BOOL showsSearchIndicator
 @property  BOOL showsStopReloadButtons
 @property  BOOL stopReloadButtonShowsStop
 @property  BOOL showsPageFormatButton
 @property  BOOL readerButtonSelected
 @property  BOOL showsReaderButton
 @property  BOOL showsTranslationButton
 @property  BOOL showsTranslationIcon
 @property  BOOL showsTranslationAvailabilityText
 @property  BOOL showsReaderAvailabilityText
 @property  BOOL overrideBarStyleForSecurityWarning
 @property  _SFFluidProgressView *progressView
 @property  unsigned long mediaStateIcon
 @property  BOOL showsNotSecureAnnotation
 @property  BOOL hasFocusedSensitiveFieldOnCurrentPage

  // instance methods
  -[_SFNavigationBarItem setTemporarilySuppressText:]
  -[_SFNavigationBarItem customPlaceholderText]
  -[_SFNavigationBarItem init]
  -[_SFNavigationBarItem setStopReloadButtonShowsStop:]
  -[_SFNavigationBarItem setShowsReaderButton:showsAvailabilityText:]
  -[_SFNavigationBarItem setReaderButtonSelected:]
  -[_SFNavigationBarItem showsTranslationAvailabilityText]
  -[_SFNavigationBarItem text]
  -[_SFNavigationBarItem showsTranslationButton]
  -[_SFNavigationBarItem readerButtonSelected]
  -[_SFNavigationBarItem .cxx_destruct]
  -[_SFNavigationBarItem textWhenExpanded]
  -[_SFNavigationBarItem overrideBarStyleForSecurityWarning]
  -[_SFNavigationBarItem showsPageFormatButton]
  -[_SFNavigationBarItem showsNotSecureAnnotation]
  -[_SFNavigationBarItem startIndexOfTextInExpandedText]
  -[_SFNavigationBarItem setCustomPlaceholderText:]
  -[_SFNavigationBarItem setShowsSearchIndicator:]
  -[_SFNavigationBarItem showsReaderButton]
  -[_SFNavigationBarItem showsStopReloadButtons]
  -[_SFNavigationBarItem showsReaderAvailabilityText]
  -[_SFNavigationBarItem showsTranslationIcon]
  -[_SFNavigationBarItem mediaStateIcon]
  -[_SFNavigationBarItem setShowsTranslationButton:showsAvailabilityText:]
  -[_SFNavigationBarItem setMediaStateIcon:]
  -[_SFNavigationBarItem progressView]
  -[_SFNavigationBarItem setShowsStopReloadButtons:]
  -[_SFNavigationBarItem setShowsLockIcon:]
  -[_SFNavigationBarItem setHasFocusedSensitiveFieldOnCurrentPage:]
  -[_SFNavigationBarItem showsLockIcon]
  -[_SFNavigationBarItem setProgressView:]
  -[_SFNavigationBarItem setText:textWhenExpanded:startIndex:]
  -[_SFNavigationBarItem hasFocusedSensitiveFieldOnCurrentPage]
  -[_SFNavigationBarItem setOverrideBarStyleForSecurityWarning:]
  -[_SFNavigationBarItem showsSearchIndicator]
  -[_SFNavigationBarItem setShowsNotSecureAnnotation:]
  -[_SFNavigationBarItem setShowsPageFormatButton:]
  -[_SFNavigationBarItem setShowsTranslationButton:]
  -[_SFNavigationBarItem setShowsTranslationIcon:]
  -[_SFNavigationBarItem stopReloadButtonShowsStop]
  -[_SFNavigationBarItem setShowsReaderButton:]
  -[_SFNavigationBarItem setShowsNotSecureAnnotation:hasFocusedSensitiveField:]


_SFActivityItemCustomizationController : NSObject /usr/lib/libc++.1.dylib <UIActivityViewControllerObjectManipulationDelegate>
 @property  <_SFActivityItemCustomizationDelegate> *delegate
 @property  long long selectedContentType
 @property  BOOL canShareAsLink
 @property  BOOL canPrint
 @property  BOOL canShareAsDownload
 @property  BOOL canShareAsWebArchive
 @property  BOOL canShareAsStandaloneImage
 @property  BOOL canShareAsPDF
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFActivityItemCustomizationController init]
  -[_SFActivityItemCustomizationController _customizationGroupsForActivityViewController:]
  -[_SFActivityItemCustomizationController .cxx_destruct]
  -[_SFActivityItemCustomizationController canPrint]
  -[_SFActivityItemCustomizationController _selectedIndex]
  -[_SFActivityItemCustomizationController _contentTypeForAllowedContentAtIndex:]
  -[_SFActivityItemCustomizationController _customizationsDidChange]
  -[_SFActivityItemCustomizationController _ensureSelectedContentTypeIsAllowed]
  -[_SFActivityItemCustomizationController selectedContentType]
  -[_SFActivityItemCustomizationController canShareAsLink]
  -[_SFActivityItemCustomizationController canShareAsStandaloneImage]
  -[_SFActivityItemCustomizationController canShareAsPDF]
  -[_SFActivityItemCustomizationController canShareAsDownload]
  -[_SFActivityItemCustomizationController canShareAsWebArchive]
  -[_SFActivityItemCustomizationController setDelegate:]
  -[_SFActivityItemCustomizationController delegate]
  -[_SFActivityItemCustomizationController _allowedContentTypes]


_SFPrintActivityItemProvider : _SFActivityItemProvider <UIActivityItemsSource>
 @property  _SFPrintController *printController
 @property  BOOL hasReservedPrintInteractionController
 @property  BOOL canVendPDFRepresentation
 @property  NSItemProvider *pdfItemProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFPrintActivityItemProvider item]
  -[_SFPrintActivityItemProvider activityViewControllerPlaceholderItems:]
  -[_SFPrintActivityItemProvider activityViewController:itemsForActivityType:]
  -[_SFPrintActivityItemProvider .cxx_destruct]
  -[_SFPrintActivityItemProvider activityViewControllerLinkMetadata:]
  -[_SFPrintActivityItemProvider pdfItemProvider]
  -[_SFPrintActivityItemProvider initWithPrintController:webView:]
  -[_SFPrintActivityItemProvider hasReservedPrintInteractionController]
  -[_SFPrintActivityItemProvider canVendPDFRepresentation]
  -[_SFPrintActivityItemProvider printController]
  -[_SFPrintActivityItemProvider setCanVendPDFRepresentation:]


SFSiteIconCell : UICollectionViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI <_SFSiteIconModel>
 @property  UIView *contextMenuPreviewView
 @property  UIImage *icon
 @property  NSString *title
 @property  NSString *subtitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFSiteIconCell reuseIdentifier]

  // instance methods
  -[SFSiteIconCell setSubtitle:]
  -[SFSiteIconCell contextMenuPreviewView]
  -[SFSiteIconCell initWithFrame:]
  -[SFSiteIconCell updateConstraints]
  -[SFSiteIconCell .cxx_destruct]
  -[SFSiteIconCell icon]
  -[SFSiteIconCell setHighlighted:]
  -[SFSiteIconCell setTitle:]
  -[SFSiteIconCell prepareForReuse]
  -[SFSiteIconCell setIcon:]
  -[SFSiteIconCell title]
  -[SFSiteIconCell setIconFromBookmark:]
  -[SFSiteIconCell subtitle]
  -[SFSiteIconCell initWithCoder:]


_SFReaderExtractor : NSObject /usr/lib/libc++.1.dylib <WKNavigationDelegate, _SFReaderControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFReaderExtractor _configuration]
  -[_SFReaderExtractor init]
  -[_SFReaderExtractor webView:didFailProvisionalNavigation:withError:]
  -[_SFReaderExtractor .cxx_destruct]
  -[_SFReaderExtractor readerController:didCollectArticleContent:]
  -[_SFReaderExtractor _invalidateTimers]
  -[_SFReaderExtractor _setUpReaderController]
  -[_SFReaderExtractor _finishWithContent:error:]
  -[_SFReaderExtractor _scheduleLoadingTimeout]
  -[_SFReaderExtractor _scheduleReaderDataExtractionTimeout]
  -[_SFReaderExtractor getExtractedDataForURL:withCompletion:]
  -[_SFReaderExtractor getExtractedDataForURL:withData:withCompletion:]
  -[_SFReaderExtractor webView:decidePolicyForNavigationResponse:decisionHandler:]
  -[_SFReaderExtractor webView:didFinishNavigation:]
  -[_SFReaderExtractor webViewWebContentProcessDidTerminate:]
  -[_SFReaderExtractor webView:didFailNavigation:withError:]
  -[_SFReaderExtractor _processPool]


_SFNavigationIntent : NSObject /usr/lib/libc++.1.dylib
 @property  long long policy
 @property  BOOL shouldRelateToSourceTab
 @property  unsigned long type
 @property  WebBookmark *bookmark
 @property  WBSCloudTab *cloudTab
 @property  _SFTabStateData *recentlyClosedTabStateData
 @property  NSURL *URL
 @property  NSString *text
 @property  NSArray *navigationIntents
 @property  BOOL opensInNewTab
 @property  BOOL opensInNewWindow
 @property  BOOL canUseExistingBlankTab
 @property  BOOL shouldOrderToForeground
 @property  NSDictionary *externalOptions
 @property  long long provenance
 @property  NSUUID *sourceTabUUID
 @property  NSUUID *sourceWindowUUID
 @property  _WKActivatedElementInfo *sourceElementInfo
 @property  NSString *privacyPreservingDescription
 @property  BOOL externalURLSourceApplicationIsSpotlight

  // class methods
  +[_SFNavigationIntent defaultTabOrder]

  // instance methods
  -[_SFNavigationIntent policy]
  -[_SFNavigationIntent setPolicy:]
  -[_SFNavigationIntent bookmark]
  -[_SFNavigationIntent text]
  -[_SFNavigationIntent .cxx_destruct]
  -[_SFNavigationIntent provenance]
  -[_SFNavigationIntent type]
  -[_SFNavigationIntent cloudTab]
  -[_SFNavigationIntent shouldRelateToSourceTab]
  -[_SFNavigationIntent recentlyClosedTabStateData]
  -[_SFNavigationIntent navigationIntents]
  -[_SFNavigationIntent canUseExistingBlankTab]
  -[_SFNavigationIntent opensInNewWindow]
  -[_SFNavigationIntent opensInNewTab]
  -[_SFNavigationIntent privacyPreservingDescription]
  -[_SFNavigationIntent _initWithType:value:policy:]
  -[_SFNavigationIntent externalOptions]
  -[_SFNavigationIntent shouldOrderToForeground]
  -[_SFNavigationIntent externalURLSourceApplicationIsSpotlight]
  -[_SFNavigationIntent setProvenance:]
  -[_SFNavigationIntent sourceTabUUID]
  -[_SFNavigationIntent setSourceTabUUID:]
  -[_SFNavigationIntent sourceWindowUUID]
  -[_SFNavigationIntent setSourceWindowUUID:]
  -[_SFNavigationIntent URL]
  -[_SFNavigationIntent sourceElementInfo]
  -[_SFNavigationIntent setSourceElementInfo:]
  -[_SFNavigationIntent setShouldRelateToSourceTab:]


_SFSharablePasswordReceiver : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFSharablePasswordReceiver openPasswordManagerURL:]


SFVibrantCellSelectionBackgroundView : UIVisualEffectView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[SFVibrantCellSelectionBackgroundView initWithFrame:]
  -[SFVibrantCellSelectionBackgroundView traitCollectionDidChange:]
  -[SFVibrantCellSelectionBackgroundView _selectionEffect]


_SFApplicationManifestFetcher : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_SFApplicationManifestFetcher .cxx_destruct]
  -[_SFApplicationManifestFetcher initWithWebView:]
  -[_SFApplicationManifestFetcher getApplicationManifestWithCompletionHandler:]


_SFPasswordAuditingViewController : _SFPasswordTableViewController <SFPasswordBreachToggleCellDelegate, SFHighPriorityRecommendationDataDelegate, SFPasswordDetailViewControllerDelegate, _SFTableViewDiffableDataSourceDelegate, _ASAccountAuthenticationModificationExtensionManagerObserver, ASAccountAuthenticationModificationControllerDelegate, ASAccountAuthenticationModificationControllerPresentationContextProviding, PSStateRestoration>
 @property  <_SFPasswordAuditingViewControllerDelegate> *delegate
 @property  WBSSavedPassword *passwordToRemoveAfterCompletedUpgradeInDetailView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFPasswordAuditingViewController viewDidLoad]
  -[_SFPasswordAuditingViewController _initiateChangeToStrongPasswordForHighPriorityRecommendation:]
  -[_SFPasswordAuditingViewController _upgradeToSignInWithAppleForHighPriorityRecommendation:]
  -[_SFPasswordAuditingViewController _removeHighPriorityRecommendation:]
  -[_SFPasswordAuditingViewController _warningStringForPasswordCellData:]
  -[_SFPasswordAuditingViewController highPriorityRecommendationDataDidUpdate:]
  -[_SFPasswordAuditingViewController tableView:heightForFooterInSection:]
  -[_SFPasswordAuditingViewController initWithSiteMetadataManager:autoFillQuirksManager:passwordWarningManager:]
  -[_SFPasswordAuditingViewController tableView:contextMenuConfigurationForRowAtIndexPath:point:]
  -[_SFPasswordAuditingViewController canBeShownFromSuspendedState]
  -[_SFPasswordAuditingViewController tableView:didSelectRowAtIndexPath:]
  -[_SFPasswordAuditingViewController tableView:viewForFooterInSection:]
  -[_SFPasswordAuditingViewController .cxx_destruct]
  -[_SFPasswordAuditingViewController _passwordStoreDidUpdate]
  -[_SFPasswordAuditingViewController _cellForIdentifier:indexPath:]
  -[_SFPasswordAuditingViewController tableView:editingStyleForRowAtIndexPath:]
  -[_SFPasswordAuditingViewController didSetPasswordBreachDetectionState:]
  -[_SFPasswordAuditingViewController viewDidAppear:]
  -[_SFPasswordAuditingViewController _completedSignInWithAppleUpgrade]
  -[_SFPasswordAuditingViewController _completedStrongPasswordUpgrade]
  -[_SFPasswordAuditingViewController accountAuthenticationModificationController:didSuccessfullyCompleteRequest:withUserInfo:]
  -[_SFPasswordAuditingViewController accountAuthenticationModificationController:didFailRequest:withError:]
  -[_SFPasswordAuditingViewController presentationAnchorForAccountAuthenticationModificationController:]
  -[_SFPasswordAuditingViewController _passwordGenerationManager]
  -[_SFPasswordAuditingViewController dataSource:headerTextForSection:]
  -[_SFPasswordAuditingViewController passwordWarningManagerForPasswordDetailViewController:]
  -[_SFPasswordAuditingViewController passwordGeneratorForPasswordDetailViewController:]
  -[_SFPasswordAuditingViewController passwordToRemoveAfterCompletedUpgradeInDetailView]
  -[_SFPasswordAuditingViewController setPasswordToRemoveAfterCompletedUpgradeInDetailView:]
  -[_SFPasswordAuditingViewController accountModificationExtensionManagerExtensionListDidChange:]
  -[_SFPasswordAuditingViewController dataSource:footerTextForSection:]
  -[_SFPasswordAuditingViewController viewWillAppear:]
  -[_SFPasswordAuditingViewController setDelegate:]
  -[_SFPasswordAuditingViewController viewDidDisappear:]
  -[_SFPasswordAuditingViewController _reloadSavedPasswordsForceUpdate:]
  -[_SFPasswordAuditingViewController _reloadTableViewDiffableDataSource]
  -[_SFPasswordAuditingViewController delegate]
  -[_SFPasswordAuditingViewController _shouldUseInsetGroupedStyle]
  -[_SFPasswordAuditingViewController _reloadTableViewDiffableDataSourceOnInternalQueue]
  -[_SFPasswordAuditingViewController _configureHighPriorityInformationCell:withHighPriorityRecommendationData:]
  -[_SFPasswordAuditingViewController _standardRecommendationCellWithPasswordCellData:]
  -[_SFPasswordAuditingViewController _passwordBreachToggleCell]
  -[_SFPasswordAuditingViewController _changePasswordOnWebsiteForHighPriorityRecommendation:]
  -[_SFPasswordAuditingViewController _findAndRemoveEntryForCompletedDetailViewUpgrade]


_SFClipLinkBanner : _SFLinkBanner <_SFAppSuggestionBanner>
 @property  _SFClipLink *clipLink
 @property  <_SFAppSuggestionBannerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFClipLinkBanner getClipLinkBannerForClipLink:openActionHandler:completionHandler:]

  // instance methods
  -[_SFClipLinkBanner _initWithClipLink:openActionHandler:]
  -[_SFClipLinkBanner .cxx_destruct]
  -[_SFClipLinkBanner clipLink]
  -[_SFClipLinkBanner setDelegate:]
  -[_SFClipLinkBanner delegate]


SFWebProcessPlugInCertificateWarningController : NSObject /usr/lib/libc++.1.dylib <WBSCertificateWarningPagePresenter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFWebProcessPlugInCertificateWarningController showCertificateInformation]
  -[SFWebProcessPlugInCertificateWarningController certificateWarningPageLoaded]
  -[SFWebProcessPlugInCertificateWarningController visitInsecureWebsite]
  -[SFWebProcessPlugInCertificateWarningController dealloc]
  -[SFWebProcessPlugInCertificateWarningController _certificateWarningPageHandlerProxy]
  -[SFWebProcessPlugInCertificateWarningController visitInsecureWebsiteWithTemporaryBypass]
  -[SFWebProcessPlugInCertificateWarningController .cxx_destruct]
  -[SFWebProcessPlugInCertificateWarningController _clearCertificateWarningPagePresenterInterface]
  -[SFWebProcessPlugInCertificateWarningController initWithPageController:]
  -[SFWebProcessPlugInCertificateWarningController prepareCertificateWarningPage:]
  -[SFWebProcessPlugInCertificateWarningController openClockSettings]
  -[SFWebProcessPlugInCertificateWarningController goBackSelected]
  -[SFWebProcessPlugInCertificateWarningController injectCertificateWarningBindingsForFrame:inScriptWorld:]
  -[SFWebProcessPlugInCertificateWarningController _setUpCertificateWarningPagePresenterInterface]


SFCertificateWarningJSController : NSObject /usr/lib/libc++.1.dylib <SFCertificateWarningJSControllerMethods>
  // instance methods
  -[SFCertificateWarningJSController showCertificateInformation]
  -[SFCertificateWarningJSController initWithCertificateWarningController:]
  -[SFCertificateWarningJSController pageLoaded]
  -[SFCertificateWarningJSController visitInsecureWebsite]
  -[SFCertificateWarningJSController visitInsecureWebsiteWithTemporaryBypass]
  -[SFCertificateWarningJSController .cxx_destruct]
  -[SFCertificateWarningJSController openClockSettings]
  -[SFCertificateWarningJSController goBackSelected]


_SFSettingsAlertItemBackgroundView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  long long mode

  // instance methods
  -[_SFSettingsAlertItemBackgroundView mode]
  -[_SFSettingsAlertItemBackgroundView _highlightEffect]
  -[_SFSettingsAlertItemBackgroundView initWithFrame:]
  -[_SFSettingsAlertItemBackgroundView updateConstraints]
  -[_SFSettingsAlertItemBackgroundView .cxx_destruct]
  -[_SFSettingsAlertItemBackgroundView setMode:]


_SFSettingsAlertControl : UIControl /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFSettingsAlertItemView>
 @property  _SFSettingsAlertItem *item
 @property  BOOL hidesSeparator
 @property  _SFSettingsAlertItemBackgroundView *backgroundView
 @property  long long defaultBackgroundMode
 @property  long long backgroundMode
 @property  <SFSettingsAlertItemViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFSettingsAlertControl item]
  -[_SFSettingsAlertControl backgroundView]
  -[_SFSettingsAlertControl initWithFrame:]
  -[_SFSettingsAlertControl .cxx_destruct]
  -[_SFSettingsAlertControl setHighlighted:]
  -[_SFSettingsAlertControl defaultBackgroundMode]
  -[_SFSettingsAlertControl setItem:]
  -[_SFSettingsAlertControl _updateBackgroundView]
  -[_SFSettingsAlertControl hidesSeparator]
  -[_SFSettingsAlertControl setDelegate:]
  -[_SFSettingsAlertControl setHidesSeparator:]
  -[_SFSettingsAlertControl backgroundMode]
  -[_SFSettingsAlertControl delegate]
  -[_SFSettingsAlertControl setDefaultBackgroundMode:]


_SFSettingsAlertButton : _SFSettingsAlertControl <_SFSettingsAlertOptionsGroupItemConfiguration>
 @property  UILabel *textLabel
 @property  NSString *text
 @property  NSAttributedString *attributedText
 @property  NSString *detailText
 @property  NSString *textStyle
 @property  UIImage *image
 @property  UIImageView *imageView
 @property  UIView *accessoryView
 @property  UIView *trailingView
 @property  NSArray *componentsArrangement
 @property  BOOL enabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFSettingsAlertButton attributedText]
  -[_SFSettingsAlertButton imageView]
  -[_SFSettingsAlertButton setAttributedText:]
  -[_SFSettingsAlertButton setTextStyle:]
  -[_SFSettingsAlertButton initWithFrame:]
  -[_SFSettingsAlertButton updateConstraints]
  -[_SFSettingsAlertButton text]
  -[_SFSettingsAlertButton .cxx_destruct]
  -[_SFSettingsAlertButton textStyle]
  -[_SFSettingsAlertButton setImage:]
  -[_SFSettingsAlertButton hitTest:withEvent:]
  -[_SFSettingsAlertButton _didChangeContents]
  -[_SFSettingsAlertButton componentsArrangement]
  -[_SFSettingsAlertButton image]
  -[_SFSettingsAlertButton setAccessoryView:]
  -[_SFSettingsAlertButton detailText]
  -[_SFSettingsAlertButton traitCollectionDidChange:]
  -[_SFSettingsAlertButton _arrangedSubviews]
  -[_SFSettingsAlertButton setDetailText:]
  -[_SFSettingsAlertButton endTrackingWithTouch:withEvent:]
  -[_SFSettingsAlertButton _hover:]
  -[_SFSettingsAlertButton setEnabled:]
  -[_SFSettingsAlertButton textLabel]
  -[_SFSettingsAlertButton setComponentsArrangement:]
  -[_SFSettingsAlertButton trailingView]
  -[_SFSettingsAlertButton _updateTintColor]
  -[_SFSettingsAlertButton setText:]
  -[_SFSettingsAlertButton accessoryView]
  -[_SFSettingsAlertButton layoutSubviews]


_SFSettingsAlertStepper : _SFSettingsAlertControl <_SFSettingsAlertStepperConfiguration>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFSettingsAlertStepper initWithFrame:]
  -[_SFSettingsAlertStepper .cxx_destruct]
  -[_SFSettingsAlertStepper hitTest:withEvent:]
  -[_SFSettingsAlertStepper _decrementTapped:]
  -[_SFSettingsAlertStepper _incrementTapped:]
  -[_SFSettingsAlertStepper _resetTapped:]
  -[_SFSettingsAlertStepper setImage:forButton:]
  -[_SFSettingsAlertStepper setText:forButton:]
  -[_SFSettingsAlertStepper setEnabled:forButton:]
  -[_SFSettingsAlertStepper _button:]
  -[_SFSettingsAlertStepper value]
  -[_SFSettingsAlertStepper initUsingResetButton:]


_SFSettingsAlertCustomViewContainer : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFSettingsAlertItemView>
 @property  UIView *contentView
 @property  _SFSettingsAlertItem *item
 @property  BOOL hidesSeparator
 @property  long long defaultBackgroundMode
 @property  long long backgroundMode
 @property  <SFSettingsAlertItemViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFSettingsAlertCustomViewContainer item]
  -[_SFSettingsAlertCustomViewContainer initWithContentView:]
  -[_SFSettingsAlertCustomViewContainer contentView]
  -[_SFSettingsAlertCustomViewContainer .cxx_destruct]
  -[_SFSettingsAlertCustomViewContainer defaultBackgroundMode]
  -[_SFSettingsAlertCustomViewContainer setItem:]
  -[_SFSettingsAlertCustomViewContainer hidesSeparator]
  -[_SFSettingsAlertCustomViewContainer setDelegate:]
  -[_SFSettingsAlertCustomViewContainer setHidesSeparator:]
  -[_SFSettingsAlertCustomViewContainer backgroundMode]
  -[_SFSettingsAlertCustomViewContainer delegate]
  -[_SFSettingsAlertCustomViewContainer setDefaultBackgroundMode:]


_SFOptionsGroupDetailLabel : UILabel /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[_SFOptionsGroupDetailLabel setAttributedText:]
  -[_SFOptionsGroupDetailLabel traitCollectionDidChange:]
  -[_SFOptionsGroupDetailLabel layoutSubviews]


_SFNavigationIntentBuilder : NSObject /usr/lib/libc++.1.dylib
 @property  long long modifierFlags
 @property  long long navigationType
 @property  long long preferredTabOrder
 @property  BOOL prefersOpenInNewTab
 @property  BOOL prefersOpenInNewWindow
 @property  BOOL prefersRelationToSourceTab

  // class methods
  +[_SFNavigationIntentBuilder builder]
  +[_SFNavigationIntentBuilder builderWithModifierFlags:]
  +[_SFNavigationIntentBuilder registerBookmarkCollectionFactory:]
  +[_SFNavigationIntentBuilder canCreateNavigationIntentForDropSession:]

  // instance methods
  -[_SFNavigationIntentBuilder modifierFlags]
  -[_SFNavigationIntentBuilder setPrefersOpenInNewTab:]
  -[_SFNavigationIntentBuilder navigationIntentWithBookmark:]
  -[_SFNavigationIntentBuilder _initWithModifierFlags:]
  -[_SFNavigationIntentBuilder _navigationPolicy]
  -[_SFNavigationIntentBuilder _initializeNavigationIntentWithType:value:]
  -[_SFNavigationIntentBuilder navigationIntentWithMultipleIntents:]
  -[_SFNavigationIntentBuilder setPrefersOpenInNewWindow:]
  -[_SFNavigationIntentBuilder navigationIntentWithURL:]
  -[_SFNavigationIntentBuilder navigationType]
  -[_SFNavigationIntentBuilder _navigationIntentWithItems:]
  -[_SFNavigationIntentBuilder _navigationIntentForMKMapItem:]
  -[_SFNavigationIntentBuilder navigationIntentWithRecentlyClosedTabStateData:]
  -[_SFNavigationIntentBuilder _navigationPolicyForStandardEvent]
  -[_SFNavigationIntentBuilder _navigationPolicyForNavigationEvent]
  -[_SFNavigationIntentBuilder _hasModifierFlag:]
  -[_SFNavigationIntentBuilder _modifiersEqualToModifierIgnoringCapsLock:]
  -[_SFNavigationIntentBuilder _navigationPolicyForCreatingNewTabOrWindow]
  -[_SFNavigationIntentBuilder _shouldOrderToForeground]
  -[_SFNavigationIntentBuilder navigationIntentWithCloudTab:]
  -[_SFNavigationIntentBuilder navigationIntentWithHistoryURL:]
  -[_SFNavigationIntentBuilder navigationIntentWithSearchText:]
  -[_SFNavigationIntentBuilder navigationIntentWithOpenURLContexts:]
  -[_SFNavigationIntentBuilder buildNavigationIntentForItemProviders:completionHandler:]
  -[_SFNavigationIntentBuilder preferredTabOrder]
  -[_SFNavigationIntentBuilder setPreferredTabOrder:]
  -[_SFNavigationIntentBuilder prefersOpenInNewTab]
  -[_SFNavigationIntentBuilder prefersOpenInNewWindow]
  -[_SFNavigationIntentBuilder prefersRelationToSourceTab]
  -[_SFNavigationIntentBuilder setPrefersRelationToSourceTab:]
  -[_SFNavigationIntentBuilder setNavigationType:]
  -[_SFNavigationIntentBuilder navigationIntentWithText:]
  -[_SFNavigationIntentBuilder buildNavigationIntentForDropSession:completionHandler:]


SFSafariView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[SFSafariView setTintColor:]
  -[SFSafariView didMoveToWindow]


SFSafariViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFBrowserRemoteViewControllerDelegate, SFInteractiveDismissControllerDelegate, SFQueueingServiceViewControllerProxyDelegate, _SFLinkPreviewHeaderDelegate, _UIRemoteViewControllerContaining>
 @property  BOOL _showingLinkPreview
 @property  BOOL _showingLinkPreviewWithMinimalUI
 @property  NSArray *_previewActions
 @property  _WKActivatedElementInfo *_activatedElementInfo
 @property  SFQueueingServiceViewControllerProxy<SFServiceViewControllerProtocol> *serviceProxy
 @property  NSURL *initialURL
 @property  BOOL defersAddingRemoteViewController
 @property  <SFSafariViewControllerDelegate> *delegate
 @property  SFSafariViewControllerConfiguration *configuration
 @property  UIColor *preferredBarTintColor
 @property  UIColor *preferredControlTintColor
 @property  long long dismissButtonStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UIRemoteViewController *_containedRemoteViewController

  // instance methods
  -[SFSafariViewController childViewControllerForHomeIndicatorAutoHidden]
  -[SFSafariViewController setTransitioningDelegate:]
  -[SFSafariViewController childViewControllerForStatusBarStyle]
  -[SFSafariViewController initWithURL:]
  -[SFSafariViewController setDismissButtonStyle:]
  -[SFSafariViewController setPreferredControlTintColor:]
  -[SFSafariViewController dismissButtonStyle]
  -[SFSafariViewController dealloc]
  -[SFSafariViewController initWithURL:entersReaderIfAvailable:]
  -[SFSafariViewController .cxx_destruct]
  -[SFSafariViewController _connectToService]
  -[SFSafariViewController remoteViewControllerDidLoadWebView:]
  -[SFSafariViewController remoteViewController:setSwipeGestureEnabled:]
  -[SFSafariViewController remoteViewController:didFinishInitialLoad:]
  -[SFSafariViewController remoteViewController:fetchActivityViewControllerInfoForURL:title:]
  -[SFSafariViewController remoteViewController:executeCustomActivityProxyID:]
  -[SFSafariViewController remoteViewController:initialLoadDidRedirectToURL:]
  -[SFSafariViewController remoteViewController:didDecideShouldShowLinkPreviews:]
  -[SFSafariViewController _restartServiceViewController]
  -[SFSafariViewController remoteViewController:hostApplicationOpenURL:]
  -[SFSafariViewController serviceProxy]
  -[SFSafariViewController remoteViewControllerWillOpenCurrentPageInBrowser:]
  -[SFSafariViewController viewWillLayoutSubviews]
  -[SFSafariViewController _addRemoteView]
  -[SFSafariViewController initWithURL:configuration:]
  -[SFSafariViewController initWithNibName:bundle:]
  -[SFSafariViewController traitCollectionDidChange:]
  -[SFSafariViewController setPreferredBarTintColor:]
  -[SFSafariViewController setModalPresentationStyle:]
  -[SFSafariViewController _setUpWithURL:configuration:]
  -[SFSafariViewController _addLaunchPlaceholderView]
  -[SFSafariViewController _showingLinkPreview]
  -[SFSafariViewController _showingLinkPreviewWithMinimalUI]
  -[SFSafariViewController _updateScrollViewIndicatorInsets]
  -[SFSafariViewController _forwardNotificationToViewService:]
  -[SFSafariViewController _setShowingLinkPreview:]
  -[SFSafariViewController _updatePreviewViewControllerWithLinkPreviewEnabled:animated:]
  -[SFSafariViewController _removeLaunchPlaceholderView]
  -[SFSafariViewController _removeRemoteViewController]
  -[SFSafariViewController _fetchCustomActivitiesForURL:title:]
  -[SFSafariViewController _fetchExcludedActivityTypesForURL:title:]
  -[SFSafariViewController _setEdgeSwipeDismissalEnabled:]
  -[SFSafariViewController interactiveDismissControllerDidBegin:]
  -[SFSafariViewController interactiveDismissControllerDidEnd:]
  -[SFSafariViewController interactiveDismissControllerDidCancel:]
  -[SFSafariViewController preferredControlTintColor]
  -[SFSafariViewController _previewActions]
  -[SFSafariViewController _updateLinkPreviewHitTestView]
  -[SFSafariViewController preferredBarTintColor]
  -[SFSafariViewController previewActionItems]
  -[SFSafariViewController remoteViewControllerWillDismiss:]
  -[SFSafariViewController remoteViewController:viewServiceDidTerminateWithError:]
  -[SFSafariViewController configuration]
  -[SFSafariViewController _defaultPreviewActionItems]
  -[SFSafariViewController _setShowingLinkPreviewWithMinimalUI:]
  -[SFSafariViewController _setPreviewActions:]
  -[SFSafariViewController viewWillAppear:]
  -[SFSafariViewController _activatedElementInfo]
  -[SFSafariViewController initialURL]
  -[SFSafariViewController _containedRemoteViewController]
  -[SFSafariViewController setDelegate:]
  -[SFSafariViewController _boundingPathMayHaveChangedForView:relativeToBoundsOriginOnly:]
  -[SFSafariViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SFSafariViewController _allowsUserInteractionWhenPreviewedInContextMenu]
  -[SFSafariViewController viewWillDisappear:]
  -[SFSafariViewController serviceProxyWillQueueInvocation:]
  -[SFSafariViewController delegate]
  -[SFSafariViewController linkPreviewHeader:didEnableLinkPreview:]
  -[SFSafariViewController loadView]
  -[SFSafariViewController initWithCoder:]
  -[SFSafariViewController _setActivatedElementInfo:]
  -[SFSafariViewController setDefersAddingRemoteViewController:]
  -[SFSafariViewController defersAddingRemoteViewController]
  -[SFSafariViewController _addRemoteViewControllerIfNeeded]


_SFRequestDesktopSiteQuirksSnapshot : NSObject /usr/lib/libc++.1.dylib <WBSRemotePlistSnapshot>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFRequestDesktopSiteQuirksSnapshot .cxx_destruct]
  -[_SFRequestDesktopSiteQuirksSnapshot requestDesktopSiteSettingForDomain:]
  -[_SFRequestDesktopSiteQuirksSnapshot allRequestDesktopSiteQuirks]
  -[_SFRequestDesktopSiteQuirksSnapshot initWithPlistData:error:]
  -[_SFRequestDesktopSiteQuirksSnapshot plistDataWithFormat:]


SFNanoDomainContainerView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  double maximumHeight
 @property  _SFBrowserView *browserView
 @property  @? platterTapAction

  // class methods
  +[SFNanoDomainContainerView defaultHeight]
  +[SFNanoDomainContainerView defaultTopOffset]
  +[SFNanoDomainContainerView defaultHeightInsideQuickboard]

  // instance methods
  -[SFNanoDomainContainerView setMaximumHeight:]
  -[SFNanoDomainContainerView .cxx_destruct]
  -[SFNanoDomainContainerView setBrowserView:]
  -[SFNanoDomainContainerView updateWithDomain:isSecure:showsNotSecureAnotation:]
  -[SFNanoDomainContainerView platterTapAction]
  -[SFNanoDomainContainerView setPlatterTapAction:]
  -[SFNanoDomainContainerView browserView]
  -[SFNanoDomainContainerView maximumHeight]


SFProcessDictionary : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long cacheCapacity

  // instance methods
  -[SFProcessDictionary init]
  -[SFProcessDictionary dealloc]
  -[SFProcessDictionary .cxx_destruct]
  -[SFProcessDictionary initWithCacheCapacity:]
  -[SFProcessDictionary decrementReferenceForPID:]
  -[SFProcessDictionary _handleProcessTermination:]
  -[SFProcessDictionary _removeValueForPID:]
  -[SFProcessDictionary _updateInterestedApplications]
  -[SFProcessDictionary cacheCapacity]
  -[SFProcessDictionary _removeUnreferencedObjectsIfNeeded]
  -[SFProcessDictionary _handleApplicationStateUpdate:]
  -[SFProcessDictionary incrementReferenceForPID:bundleIdentifier:valueCreationBlock:]


_SFNavigationUtilitiesManager : NSObject /usr/lib/libc++.1.dylib
 @property  _SFReloadOptionsController *reloadOptionsController
 @property  unsigned long persona

  // instance methods
  -[_SFNavigationUtilitiesManager initWithPerSitePreferencesVendor:]
  -[_SFNavigationUtilitiesManager reloadOptionsController]
  -[_SFNavigationUtilitiesManager _shouldOverrideUserAgentSettingForFacebookAuthURL:]
  -[_SFNavigationUtilitiesManager .cxx_destruct]
  -[_SFNavigationUtilitiesManager setPersona:]
  -[_SFNavigationUtilitiesManager setReloadOptionsController:]
  -[_SFNavigationUtilitiesManager persona]
  -[_SFNavigationUtilitiesManager websitePoliciesForURL:isForMainFrameNavigation:navigationType:completionHandler:]
  -[_SFNavigationUtilitiesManager _applyAutoplayQuirksToWebsitePolicies:desktopSiteSetting:]


_SFDialog : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *additionalCancellationExemptions
 @property  BOOL canceledOnApplicationBackground
 @property  _SFDialogController *dialogController
 @property  BOOL canceledOnProvisionalNavigation
 @property  BOOL canceledOnCommittedNavigation
 @property  BOOL completionHandlerBlocksWebProcess
 @property  long long presentationStyle
 @property  BOOL shouldIgnoreGlobalModalUIDisplayPolicy

  // class methods
  +[_SFDialog dialogWithWebUIAlert:completionHandler:]
  +[_SFDialog formSubmissionDialogWithMessage:completionHandler:]
  +[_SFDialog genericErrorDialogWithTitle:message:applicationModal:]
  +[_SFDialog pageLoadErrorWithMessage:]
  +[_SFDialog permanentlyAcceptCertificateDialogWithAcceptanceHandler:]
  +[_SFDialog authenticatorDialogForPanel:dialogController:]
  +[_SFDialog userMediaPermissionDialogWithHost:devices:completionHandler:]
  +[_SFDialog telephonyNavigationDialogWithCompletionHandler:]
  +[_SFDialog javaScriptAlertDialogWithMessage:completionHandler:]
  +[_SFDialog javaScriptConfirmDialogWithMessage:completionHandler:]
  +[_SFDialog javaScriptPromptDialogWithMessage:defaultText:completionHandler:]
  +[_SFDialog requestStorageAccessDialogForDomain:underCurrentDomain:completionHandler:]
  +[_SFDialog _dialogWithTitle:message:acceptAction:secondaryAction:cancelAction:applicationModal:completionHandler:]
  +[_SFDialog _dialogWithTitle:message:primaryAction:secondaryAction:applicationModal:completionHandler:]
  +[_SFDialog _appLinkRedirectDialogWithMessage:completionHandler:]
  +[_SFDialog redirectDialogWithMessage:completionHandler:]
  +[_SFDialog authenticationDialogWithAuthenticationChallenge:committedURL:completionHandler:]
  +[_SFDialog mailNavigationDialogWithCompletionHandler:]
  +[_SFDialog noFeedAppDialogWithCompletionHandler:]
  +[_SFDialog redirectDialogWithNavigationResult:promptPolicy:completionHandler:]
  +[_SFDialog downloadBlockedDialogWithFileType:initiatingURL:completionHandler:]
  +[_SFDialog blockedPopupWindowDialogWithCompletionHandler:]
  +[_SFDialog increaseDatabaseQuotaDialogForOrigin:newQuota:completionHandler:]
  +[_SFDialog increaseApplicationCacheQuotaDialogForOrigin:newQuota:completionHandler:]
  +[_SFDialog allowDownloadDialogWithDownload:initiatingURL:allowViewAction:completionHandler:]
  +[_SFDialog websiteLocationDialogForURL:preciseLocation:completionHandler:]
  +[_SFDialog continuePrintingDialogWithTitle:message:applicationModal:completionHandler:]
  +[_SFDialog printBlockedDialogWithCompletionHandler:]

  // instance methods
  -[_SFDialog presentationStyle]
  -[_SFDialog .cxx_destruct]
  -[_SFDialog dialogController]
  -[_SFDialog newDialogViewRepresentation]
  -[_SFDialog didCompleteWithResponse:]
  -[_SFDialog completeWithResponse:]
  -[_SFDialog completionHandlerBlocksWebProcess]
  -[_SFDialog setDialogController:]
  -[_SFDialog canceledOnProvisionalNavigation]
  -[_SFDialog canceledOnCommittedNavigation]
  -[_SFDialog additionalCancellationExemptions]
  -[_SFDialog canceledOnApplicationBackground]
  -[_SFDialog newViewControllerRepresentationWithCompletionHandler:]
  -[_SFDialog shouldIgnoreGlobalModalUIDisplayPolicy]


SFBasicDialog : _SFDialog
 @property  @? completionHandler
 @property  NSString *title
 @property  NSString *message
 @property  NSString *defaultText
 @property  NSString *textPlaceholder
 @property  NSString *defaultPassword
 @property  NSString *passwordPlaceholder
 @property  NSArray *actions
 @property  BOOL alertControllerPresentsAsActionSheet
 @property  BOOL shouldHideWebContent
 @property  BOOL canceledOnProvisionalNavigation
 @property  BOOL canceledOnCommittedNavigation
 @property  BOOL canceledOnApplicationBackground
 @property  NSArray *additionalCancellationExemptions
 @property  BOOL completionHandlerBlocksWebProcess
 @property  long long presentationStyle

  // instance methods
  -[SFBasicDialog actions]
  -[SFBasicDialog message]
  -[SFBasicDialog setActions:]
  -[SFBasicDialog init]
  -[SFBasicDialog presentationStyle]
  -[SFBasicDialog setMessage:]
  -[SFBasicDialog .cxx_destruct]
  -[SFBasicDialog newDialogViewRepresentation]
  -[SFBasicDialog didCompleteWithResponse:]
  -[SFBasicDialog setTitle:]
  -[SFBasicDialog title]
  -[SFBasicDialog completionHandlerBlocksWebProcess]
  -[SFBasicDialog setPresentationStyle:]
  -[SFBasicDialog setTextPlaceholder:]
  -[SFBasicDialog setPasswordPlaceholder:]
  -[SFBasicDialog setShouldHideWebContent:]
  -[SFBasicDialog setCompletionHandlerBlocksWebProcess:]
  -[SFBasicDialog setDefaultText:]
  -[SFBasicDialog setCanceledOnProvisionalNavigation:]
  -[SFBasicDialog setAdditionalCancellationExemptions:]
  -[SFBasicDialog setAlertControllerPresentsAsActionSheet:]
  -[SFBasicDialog completionHandler]
  -[SFBasicDialog setCompletionHandler:]
  -[SFBasicDialog setCanceledOnApplicationBackground:]
  -[SFBasicDialog textPlaceholder]
  -[SFBasicDialog canceledOnProvisionalNavigation]
  -[SFBasicDialog canceledOnCommittedNavigation]
  -[SFBasicDialog additionalCancellationExemptions]
  -[SFBasicDialog canceledOnApplicationBackground]
  -[SFBasicDialog defaultText]
  -[SFBasicDialog newViewControllerRepresentationWithCompletionHandler:]
  -[SFBasicDialog defaultPassword]
  -[SFBasicDialog passwordPlaceholder]
  -[SFBasicDialog shouldHideWebContent]
  -[SFBasicDialog setCanceledOnCommittedNavigation:]
  -[SFBasicDialog setDefaultPassword:]
  -[SFBasicDialog alertControllerPresentsAsActionSheet]


SFWebUIDialog : _SFDialog
 @property  WebUIAlert *alert

  // instance methods
  -[SFWebUIDialog presentationStyle]
  -[SFWebUIDialog .cxx_destruct]
  -[SFWebUIDialog didCompleteWithResponse:]
  -[SFWebUIDialog alert]
  -[SFWebUIDialog initWithAlert:completionHandler:]
  -[SFWebUIDialog newViewControllerRepresentationWithCompletionHandler:]
  -[SFWebUIDialog shouldIgnoreGlobalModalUIDisplayPolicy]


SFBrowserStateSQLiteStore : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *browserWindows
 @property  NSArray *recentlyClosedWindows

  // instance methods
  -[SFBrowserStateSQLiteStore closeDatabase]
  -[SFBrowserStateSQLiteStore _migrateToSchemaVersion_3]
  -[SFBrowserStateSQLiteStore initWithDatabaseURL:]
  -[SFBrowserStateSQLiteStore init]
  -[SFBrowserStateSQLiteStore _sqliteStatementForTabDeleting]
  -[SFBrowserStateSQLiteStore tabStatesWithBrowserWindowUUID:]
  -[SFBrowserStateSQLiteStore readTabStatesWithBrowserWindowUUID:completion:]
  -[SFBrowserStateSQLiteStore _createTableForTabSession]
  -[SFBrowserStateSQLiteStore _tabUUIDsInWindow:]
  -[SFBrowserStateSQLiteStore _insertTabStateWithData:]
  -[SFBrowserStateSQLiteStore _migrateToCurrentSchemaVersionIfNeeded]
  -[SFBrowserStateSQLiteStore updateBrowserWindowStateWithDictionary:completion:]
  -[SFBrowserStateSQLiteStore dealloc]
  -[SFBrowserStateSQLiteStore .cxx_destruct]
  -[SFBrowserStateSQLiteStore deleteAllRecentlyClosedWindows]
  -[SFBrowserStateSQLiteStore _vacuum]
  -[SFBrowserStateSQLiteStore _updateBrowserWindowWithData:tabs:]
  -[SFBrowserStateSQLiteStore _setDatabaseSchemaVersion:]
  -[SFBrowserStateSQLiteStore _mergeAllWindowsIfNeeded]
  -[SFBrowserStateSQLiteStore _schemaVersion]
  -[SFBrowserStateSQLiteStore tabStateDataForUUID:]
  -[SFBrowserStateSQLiteStore _isDatabaseOpen]
  -[SFBrowserStateSQLiteStore _updateOrInsertTabStateWithData:]
  -[SFBrowserStateSQLiteStore updateTabWithTabStateData:]
  -[SFBrowserStateSQLiteStore _saveBrowserWindowStateWithData:]
  -[SFBrowserStateSQLiteStore _databaseIDForBrowserWindow:]
  -[SFBrowserStateSQLiteStore deleteAllSavedStates]
  -[SFBrowserStateSQLiteStore _isTabStateCached:]
  -[SFBrowserStateSQLiteStore _tabStateDataForUUID:]
  -[SFBrowserStateSQLiteStore updateSceneID:]
  -[SFBrowserStateSQLiteStore browserWindows]
  -[SFBrowserStateSQLiteStore _updateTabStateWithData:]
  -[SFBrowserStateSQLiteStore regenerateTabUUIDsForDeviceRestoration]
  -[SFBrowserStateSQLiteStore readSavedSessionStateDataForTabWithUUIDString:]
  -[SFBrowserStateSQLiteStore updateBrowserWindowWithData:tabs:]
  -[SFBrowserStateSQLiteStore _saveBrowserWindowStateWithDictionary:]
  -[SFBrowserStateSQLiteStore saveTabStateWithDictionary:]
  -[SFBrowserStateSQLiteStore _openDatabaseAndCheckIntegrity:]
  -[SFBrowserStateSQLiteStore _closeDatabase]
  -[SFBrowserStateSQLiteStore _migrateFromLegacyPlistWithPath:]
  -[SFBrowserStateSQLiteStore _migrateToSchemaVersion_4]
  -[SFBrowserStateSQLiteStore _removeSavedSessionStateDataForTabsWithUUIDStrings:]
  -[SFBrowserStateSQLiteStore _readTabStatesWithBrowserWindowUUID:completion:]
  -[SFBrowserStateSQLiteStore _createTableForTabs]
  -[SFBrowserStateSQLiteStore _migrateToSchemaVersion_5]
  -[SFBrowserStateSQLiteStore deleteTabStateWithBrowserWindowUUID:andRemoveWindow:]
  -[SFBrowserStateSQLiteStore checkPointWriteAheadLog]
  -[SFBrowserStateSQLiteStore _updateBrowserWindowStateWithDictionary:]
  -[SFBrowserStateSQLiteStore _migrateToSchemaVersion_2]
  -[SFBrowserStateSQLiteStore removeTabWithTabData:]
  -[SFBrowserStateSQLiteStore recentlyClosedWindows]
  -[SFBrowserStateSQLiteStore _regenerateTabUUIDsForDeviceRestoration]
  -[SFBrowserStateSQLiteStore _recoverFromDatabaseInconsistencyFromSchemaVersion3Migration]
  -[SFBrowserStateSQLiteStore _cacheUUIDForTabStateData:]
  -[SFBrowserStateSQLiteStore _migrateFromLegacyPlistIfNeeded]
  -[SFBrowserStateSQLiteStore _readSavedSessionStateDataForTabWithUUIDString:]
  -[SFBrowserStateSQLiteStore _setDatabaseID:browserWindow:]
  -[SFBrowserStateSQLiteStore _createFreshDatabaseSchema]
  -[SFBrowserStateSQLiteStore _checkDatabaseIntegrity]
  -[SFBrowserStateSQLiteStore _migrateToSchemaVersion:]
  -[SFBrowserStateSQLiteStore mergeAllWindows]
  -[SFBrowserStateSQLiteStore setSecureDeleteEnabled:]
  -[SFBrowserStateSQLiteStore removeSavedSessionStateDataForTabsWithUUIDStrings:]


_SFBrowserWindowStateData : NSObject /usr/lib/libc++.1.dylib
 @property  long long databaseID
 @property  NSString *UUIDString
 @property  NSUUID *UUID
 @property  NSString *sceneID
 @property  long long type
 @property  long long activeDocumentIndex
 @property  long long activePrivateDocumentIndex
 @property  BOOL isActiveDocumentValid
 @property  BOOL isTabStateSuccessfullyLoaded
 @property  long long legacyPlistFileVersion
 @property  BOOL isInDatabase
 @property  BOOL needsQuickUpdate

  // instance methods
  -[_SFBrowserWindowStateData databaseID]
  -[_SFBrowserWindowStateData setDatabaseID:]
  -[_SFBrowserWindowStateData UUIDString]
  -[_SFBrowserWindowStateData sceneID]
  -[_SFBrowserWindowStateData setActivePrivateDocumentIndex:]
  -[_SFBrowserWindowStateData setType:]
  -[_SFBrowserWindowStateData .cxx_destruct]
  -[_SFBrowserWindowStateData isActiveDocumentValid]
  -[_SFBrowserWindowStateData setActiveDocumentIndex:]
  -[_SFBrowserWindowStateData setSceneID:]
  -[_SFBrowserWindowStateData setIsActiveDocumentValid:]
  -[_SFBrowserWindowStateData isTabStateSuccessfullyLoaded]
  -[_SFBrowserWindowStateData setNeedsQuickUpdate:]
  -[_SFBrowserWindowStateData type]
  -[_SFBrowserWindowStateData setUUID:]
  -[_SFBrowserWindowStateData initWithDictionaryPresentation:]
  -[_SFBrowserWindowStateData UUID]
  -[_SFBrowserWindowStateData legacyPlistFileVersion]
  -[_SFBrowserWindowStateData isEqual:]
  -[_SFBrowserWindowStateData isInDatabase]
  -[_SFBrowserWindowStateData initWithSQLiteRow:]
  -[_SFBrowserWindowStateData activeDocumentIndex]
  -[_SFBrowserWindowStateData setUUIDString:]
  -[_SFBrowserWindowStateData initWithUUIDString:sceneID:]
  -[_SFBrowserWindowStateData setLegacyPlistFileVersion:]
  -[_SFBrowserWindowStateData activePrivateDocumentIndex]
  -[_SFBrowserWindowStateData needsQuickUpdate]
  -[_SFBrowserWindowStateData setIsTabStateSuccessfullyLoaded:]
  -[_SFBrowserWindowStateData dictionaryPresentation]


_SFAppAutoFillPasswordViewController : _SFPasswordViewController
  // instance methods
  -[_SFAppAutoFillPasswordViewController viewDidLoad]
  -[_SFAppAutoFillPasswordViewController .cxx_destruct]
  -[_SFAppAutoFillPasswordViewController _sceneDidEnterBackground:]
  -[_SFAppAutoFillPasswordViewController setAuthenticationGracePeriod:]
  -[_SFAppAutoFillPasswordViewController remoteViewController:selectedCredential:]
  -[_SFAppAutoFillPasswordViewController _setUpServiceProxyIfNeeded]
  -[_SFAppAutoFillPasswordViewController setWebViewURL:]
  -[_SFAppAutoFillPasswordViewController _connectToServiceWithCompletion:]
  -[_SFAppAutoFillPasswordViewController setRemoteAppID:]
  -[_SFAppAutoFillPasswordViewController setRemoteLocalizedAppName:]
  -[_SFAppAutoFillPasswordViewController setRemoteUnlocalizedAppName:]
  -[_SFAppAutoFillPasswordViewController setExternallyVerifiedAndApprovedSharedWebCredentialsDomains:]
  -[_SFAppAutoFillPasswordViewController authenticateToPresentInPopover:completion:]
  -[_SFAppAutoFillPasswordViewController _remoteViewController]
  -[_SFAppAutoFillPasswordViewController _canShowWhileLocked]


_SFUIViewPopoverSourceInfo : NSObject /usr/lib/libc++.1.dylib <_SFPopoverSourceInfo>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} popoverSourceRect
 @property  UIView *popoverSourceView
 @property  UIBarButtonItem *barButtonItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFUIViewPopoverSourceInfo initWithView:]
  -[_SFUIViewPopoverSourceInfo .cxx_destruct]
  -[_SFUIViewPopoverSourceInfo popoverSourceView]
  -[_SFUIViewPopoverSourceInfo popoverSourceRect]


_SFTouchIconFetchOperation : WBSTouchIconFetchOperation /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // class methods
  +[_SFTouchIconFetchOperation deviceIdealDefaultTouchIconURLsWithURL:]

  // instance methods
  -[_SFTouchIconFetchOperation didCreateWebView]
  -[_SFTouchIconFetchOperation didFetchTouchIconURLs:andFaviconURLs:forURL:]
  -[_SFTouchIconFetchOperation webViewConfiguration]


_SFAuthenticationContext : NSObject /usr/lib/libc++.1.dylib <LAUIDelegate>
 @property  BOOL needsAuthentication
 @property  NSData *externalizedContext
 @property  <_SFAuthenticationContextDelegate> *delegate

  // instance methods
  -[_SFAuthenticationContext applicationWillEnterForeground]
  -[_SFAuthenticationContext init]
  -[_SFAuthenticationContext dealloc]
  -[_SFAuthenticationContext .cxx_destruct]
  -[_SFAuthenticationContext externalizedContext]
  -[_SFAuthenticationContext _invalidateAuthentication]
  -[_SFAuthenticationContext _monotonicTimeIsWithinAuthenticationGracePeriod:]
  -[_SFAuthenticationContext _hasAuthenticationCapability:]
  -[_SFAuthenticationContext _processNextClientAwaitingAuthenticationUserInitiated:]
  -[_SFAuthenticationContext _contextRequiresSessionBasedAuthentication]
  -[_SFAuthenticationContext _evaluatePolicyForClient:userInitiated:reply:]
  -[_SFAuthenticationContext needsAuthentication]
  -[_SFAuthenticationContext _authenticationContext]
  -[_SFAuthenticationContext _contextShouldAllowPasscodeFallback]
  -[_SFAuthenticationContext _contextShouldAllowMultipleBiometricFailures]
  -[_SFAuthenticationContext _cancelOngoingAuthentication]
  -[_SFAuthenticationContext _canInvalidateAuthentication]
  -[_SFAuthenticationContext _cancelOngoingAndPendingAuthentications]
  -[_SFAuthenticationContext _handleTouchIDEventWithParameters:]
  -[_SFAuthenticationContext authenticateForClient:userInitiated:completion:]
  -[_SFAuthenticationContext invalidateClient:]
  -[_SFAuthenticationContext setDelegate:]
  -[_SFAuthenticationContext event:params:reply:]
  -[_SFAuthenticationContext preemptOngoingAuthenticationWithPasccodeAuthentication]
  -[_SFAuthenticationContext delegate]
  -[_SFAuthenticationContext applicationDidEnterBackground]


_SFQRCodeDetectionController : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFQRCodeDetectionController sharedController]

  // instance methods
  -[_SFQRCodeDetectionController init]
  -[_SFQRCodeDetectionController getActionForImage:completion:]
  -[_SFQRCodeDetectionController getActionForImageSynchronously:userInfo:]
  -[_SFQRCodeDetectionController elementForAction:]
  -[_SFQRCodeDetectionController .cxx_destruct]
  -[_SFQRCodeDetectionController clearCachedElement:]
  -[_SFQRCodeDetectionController menuElementsForElementInfo:]
  -[_SFQRCodeDetectionController actionForElement:]
  -[_SFQRCodeDetectionController cacheElement:]
  -[_SFQRCodeDetectionController adjustedCopyActionForAction:elementInfo:]


SFAutoFillAuthenticationUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SFAutoFillAuthenticationUtilities passcodePromptForViewingSavedPasswords]
  +[SFAutoFillAuthenticationUtilities customAuthenticationTitleForViewingSavedPasswords]
  +[SFAutoFillAuthenticationUtilities customAuthenticationTitleForLoggingInWithSavedPasswordOnWebsite:]
  +[SFAutoFillAuthenticationUtilities customAuthenticationTitleForFillingSavedPassword]
  +[SFAutoFillAuthenticationUtilities customAuthenticationTitleForFillingCreditCard]
  +[SFAutoFillAuthenticationUtilities passcodePromptForLoggingInWithSavedPasswordOnWebsite:]
  +[SFAutoFillAuthenticationUtilities passcodePromptForFillingSavedPassword]
  +[SFAutoFillAuthenticationUtilities passcodePromptForFillingCreditCard]


_SFFindOnPageUIActivity : _SFActivity
  // instance methods
  -[_SFFindOnPageUIActivity activityType]
  -[_SFFindOnPageUIActivity activityTitle]
  -[_SFFindOnPageUIActivity canPerformWithActivityItems:]
  -[_SFFindOnPageUIActivity performActivity]
  -[_SFFindOnPageUIActivity _systemImageName]
  -[_SFFindOnPageUIActivity .cxx_destruct]
  -[_SFFindOnPageUIActivity activityDidFinish:]
  -[_SFFindOnPageUIActivity initWithFindOnPageView:]


SFSafariLaunchPlaceholderView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UINavigationBarDelegate>
 @property  double topLayoutGuideInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFSafariLaunchPlaceholderView positionForBar:]
  -[SFSafariLaunchPlaceholderView initWithFrame:]
  -[SFSafariLaunchPlaceholderView topLayoutGuideInset]
  -[SFSafariLaunchPlaceholderView .cxx_destruct]
  -[SFSafariLaunchPlaceholderView updateBarTintColor:]
  -[SFSafariLaunchPlaceholderView setTopLayoutGuideInset:]
  -[SFSafariLaunchPlaceholderView layoutSubviews]


SFPasswordSavingServiceViewController : SFPasswordServiceViewController <_ASAccountAuthenticationModificationExtensionManagerObserver, _ASAccountAuthenticationModificationHostViewControllerDelegate, SFPasswordSavingServiceViewControllerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFPasswordSavingServiceViewController _exportedInterface]

  // instance methods
  -[SFPasswordSavingServiceViewController credentialsSubmittedForWebsiteURL:user:password:passwordIsAutoGenerated:completionHandler:]
  -[SFPasswordSavingServiceViewController _saveCredential:]
  -[SFPasswordSavingServiceViewController .cxx_destruct]
  -[SFPasswordSavingServiceViewController _updateCredential:]
  -[SFPasswordSavingServiceViewController _checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler:]
  -[SFPasswordSavingServiceViewController _configureSecurityPromptActionsWithCompletionHandler:]
  -[SFPasswordSavingServiceViewController _showAccountModificationPrompt]
  -[SFPasswordSavingServiceViewController _titleStringForAccountModificationPrompt]
  -[SFPasswordSavingServiceViewController _messageStringForAccountModificationPrompt]
  -[SFPasswordSavingServiceViewController _addUpgradeToSignInWithAppleActionToPrompt]
  -[SFPasswordSavingServiceViewController _addChangeToStrongPasswordActionToPrompt]
  -[SFPasswordSavingServiceViewController _addChangePasswordOnWebsiteActionToPrompt]
  -[SFPasswordSavingServiceViewController _openPasswordManagerToChangePasswordOnWebsite]
  -[SFPasswordSavingServiceViewController _removeCredential:]
  -[SFPasswordSavingServiceViewController initWithNibName:bundle:]
  -[SFPasswordSavingServiceViewController _initiateUpgradeToSignInWithApple]
  -[SFPasswordSavingServiceViewController _initiateChangeToStrongPassword]
  -[SFPasswordSavingServiceViewController _dismiss]
  -[SFPasswordSavingServiceViewController showPromptWithToken:style:]


_SFSiteIcon : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFSiteIcon defaultSize]
  +[_SFSiteIcon _defaultIconSize]
  +[_SFSiteIcon defaultIconKeyColor]
  +[_SFSiteIcon sizeForIconSize:]
  +[_SFSiteIcon minimumAcceptableSizeForDownloadedIcon]
  +[_SFSiteIcon precompositedDefaultIcon]
  +[_SFSiteIcon fontPointSizeForIconSize:]
  +[_SFSiteIcon cornerRadius]
  +[_SFSiteIcon defaultGlyph]


_SFMailContentProvider : NSObject /usr/lib/libc++.1.dylib <MFMailComposeViewControllerDelegate>
 @property  <_SFMailContentProviderDataSource> *dataSource
 @property  BOOL restrictAddingPDFContent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFMailContentProvider setDataSource:]
  -[_SFMailContentProvider .cxx_destruct]
  -[_SFMailContentProvider _bestContentTypeForPreferredContentType:]
  -[_SFMailContentProvider _getReaderContentWithCompletionHandler:]
  -[_SFMailContentProvider _getPDFDataWithCompletionHandler:]
  -[_SFMailContentProvider prepareMailComposeViewController:withMailToURL:contentURL:preferredContentType:completionHandler:]
  -[_SFMailContentProvider _preferentiallyOrderedContentTypes]
  -[_SFMailContentProvider _canProvideContentType:]
  -[_SFMailContentProvider _preferentiallyOrderedAvailableContentTypes]
  -[_SFMailContentProvider _defaultPreferredContentType]
  -[_SFMailContentProvider _getWebArchiveDataWithCompletion:]
  -[_SFMailContentProvider getMailComposeViewControllerWithMailToURL:contentURL:preferredContentType:completionHandler:]
  -[_SFMailContentProvider restrictAddingPDFContent]
  -[_SFMailContentProvider setRestrictAddingPDFContent:]
  -[_SFMailContentProvider dataSource]
  -[_SFMailContentProvider mailComposeController:didFinishWithResult:error:]


_SFSettingsAuthentication : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFSettingsAuthentication authenticateForSettings:allowAuthenticationReuse:completionHandler:]
  +[_SFSettingsAuthentication authenticationRequiresPasscode]
  +[_SFSettingsAuthentication pushSettingsAfterAuthentication:onBehalfOfViewController:resourceDictionary:completionHandler:]


_SFFolderPickerItem : NSObject /usr/lib/libc++.1.dylib
 @property  WebBookmark *bookmark
 @property  NSString *title
 @property  unsigned long depth

  // instance methods
  -[_SFFolderPickerItem depth]
  -[_SFFolderPickerItem bookmark]
  -[_SFFolderPickerItem .cxx_destruct]
  -[_SFFolderPickerItem _initWithBookmark:depth:]
  -[_SFFolderPickerItem title]


SFFolderPickerList : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SFFolderPickerList .cxx_destruct]
  -[SFFolderPickerList _appendFolderAndChildren:toArray:depth:ignoringIdentifiers:]
  -[SFFolderPickerList _appendChildrenOfFolder:toArray:depth:ignoringIdentifiers:]
  -[SFFolderPickerList initWithBookmarkCollection:style:]
  -[SFFolderPickerList folderListItemsIgnoringIdentifiers:]


_SFPageZoomPreferenceManager : WBSPageZoomPreferenceManager /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // class methods
  +[_SFPageZoomPreferenceManager sharedManager]

  // instance methods
  -[_SFPageZoomPreferenceManager removePreferenceValuesForDomains:fromPreference:completionHandler:]
  -[_SFPageZoomPreferenceManager setDefaultValue:ofPreference:completionHandler:]
  -[_SFPageZoomPreferenceManager initWithPerSitePreferencesStore:]
  -[_SFPageZoomPreferenceManager dealloc]
  -[_SFPageZoomPreferenceManager _didRemoveHostnames:]
  -[_SFPageZoomPreferenceManager _historyWasCleared:]
  -[_SFPageZoomPreferenceManager setValue:ofPreference:forDomain:completionHandler:]


_SFUnresponsiveWebProcessController : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL shouldIgnoreDidBecomeResponsive
 @property  BOOL supportsTapToRadar
 @property  UIViewController *activeBrowserContentViewController

  // class methods
  +[_SFUnresponsiveWebProcessController sharedController]

  // instance methods
  -[_SFUnresponsiveWebProcessController .cxx_destruct]
  -[_SFUnresponsiveWebProcessController _tapToRadar]
  -[_SFUnresponsiveWebProcessController _webProcessWatchdogTimerFired:]
  -[_SFUnresponsiveWebProcessController _promptTapToRadar:]
  -[_SFUnresponsiveWebProcessController unscheduleWatchdogTimer]
  -[_SFUnresponsiveWebProcessController scheduleWatchdogTimerForContentViewController:]
  -[_SFUnresponsiveWebProcessController shouldIgnoreDidBecomeResponsive]
  -[_SFUnresponsiveWebProcessController activeBrowserContentViewController]
  -[_SFUnresponsiveWebProcessController setActiveBrowserContentViewController:]
  -[_SFUnresponsiveWebProcessController setShouldIgnoreDidBecomeResponsive:]
  -[_SFUnresponsiveWebProcessController supportsTapToRadar]
  -[_SFUnresponsiveWebProcessController recordURLForTapToRadar:hostAppIdentifier:]


SFPrivacyReportTrackingTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  UILabel *domainLabel
 @property  UILabel *domainDetailLabel
 @property  UILabel *countLabel
 @property  double count
 @property  double maxCount

  // instance methods
  -[SFPrivacyReportTrackingTableViewCell setMaxCount:]
  -[SFPrivacyReportTrackingTableViewCell maxCount]
  -[SFPrivacyReportTrackingTableViewCell setCount:]
  -[SFPrivacyReportTrackingTableViewCell .cxx_destruct]
  -[SFPrivacyReportTrackingTableViewCell domainLabel]
  -[SFPrivacyReportTrackingTableViewCell _updateCountViews]
  -[SFPrivacyReportTrackingTableViewCell initWithDetailLabel:reuseIdentifier:]
  -[SFPrivacyReportTrackingTableViewCell domainDetailLabel]
  -[SFPrivacyReportTrackingTableViewCell count]
  -[SFPrivacyReportTrackingTableViewCell countLabel]


SFPrivacyReportTrackerTableViewCell : SFPrivacyReportTrackingTableViewCell
 @property  WBSKnownTrackingThirdParty *tracker

  // instance methods
  -[SFPrivacyReportTrackerTableViewCell initWithStyle:reuseIdentifier:]
  -[SFPrivacyReportTrackerTableViewCell .cxx_destruct]
  -[SFPrivacyReportTrackerTableViewCell tracker]
  -[SFPrivacyReportTrackerTableViewCell setTracker:]


SFPrivacyReportWebsiteTableViewCell : SFPrivacyReportTrackingTableViewCell
 @property  WBSTrackedFirstParty *website

  // instance methods
  -[SFPrivacyReportWebsiteTableViewCell initWithStyle:reuseIdentifier:]
  -[SFPrivacyReportWebsiteTableViewCell website]
  -[SFPrivacyReportWebsiteTableViewCell setWebsite:]
  -[SFPrivacyReportWebsiteTableViewCell .cxx_destruct]


SFPrivacyReportMeterBar : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[SFPrivacyReportMeterBar initWithFrame:]
  -[SFPrivacyReportMeterBar intrinsicContentSize]
  -[SFPrivacyReportMeterBar tintColorDidChange]
  -[SFPrivacyReportMeterBar layoutSubviews]


SFPrivacyReportExplanationDetailView : SFPrivacyReportGridView
 @property  BOOL usesInsetStyle

  // instance methods
  -[SFPrivacyReportExplanationDetailView initWithFrame:]
  -[SFPrivacyReportExplanationDetailView usesInsetStyle]
  -[SFPrivacyReportExplanationDetailView _updateFirstItemTitleTopSpacing]
  -[SFPrivacyReportExplanationDetailView interItemSpacing]
  -[SFPrivacyReportExplanationDetailView setUsesInsetStyle:]


SFPrivacyReportExplanationDetailItemView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFPrivacyReportGridItem>
 @property  UILabel *titleLabel
 @property  UILabel *bodyLabel
 @property  double titleLabelTopSpacing
 @property  double hairlineTopSpacing
 @property  <SFPrivacyReportGridItemDelegate> *delegate
 @property  unsigned long gridPosition
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFPrivacyReportExplanationDetailItemView titleLabel]
  -[SFPrivacyReportExplanationDetailItemView initWithFrame:]
  -[SFPrivacyReportExplanationDetailItemView .cxx_destruct]
  -[SFPrivacyReportExplanationDetailItemView setGridPosition:]
  -[SFPrivacyReportExplanationDetailItemView gridPosition]
  -[SFPrivacyReportExplanationDetailItemView setTitleLabelTopSpacing:]
  -[SFPrivacyReportExplanationDetailItemView setHairlineTopSpacing:]
  -[SFPrivacyReportExplanationDetailItemView _updateTopConstraints]
  -[SFPrivacyReportExplanationDetailItemView titleLabelTopSpacing]
  -[SFPrivacyReportExplanationDetailItemView hairlineTopSpacing]
  -[SFPrivacyReportExplanationDetailItemView traitCollectionDidChange:]
  -[SFPrivacyReportExplanationDetailItemView bodyLabel]
  -[SFPrivacyReportExplanationDetailItemView setDelegate:]
  -[SFPrivacyReportExplanationDetailItemView delegate]


_SFBrowserContentViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFBrowserViewDelegate, SFReaderEnabledWebViewControllerDelegate, SFReaderViewControllerDelegate, _SFBarManagerDelegate, _SFDownloadDelegate, _SFDynamicBarAnimatorDelegate, _SFFindOnPageViewDelegate, _SFMailContentProviderDataSource, _SFNavigationBarDelegate, _SFPageLoadErrorControllerDelegate, _SFPrintControllerDelegate, _SFSingleBookmarkNavigationControllerDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate, WBSFluidProgressControllerWindowDelegate, WBSFluidProgressStateSource, _SFAppSuggestionBannerDelegate, WBSDigitalHealthManagerDelegate, PKAddPassesViewControllerDelegate, _SFLinkPreviewHandler, WBSTranslationConsentAlertHelperDelegate, WBSTranslationContextDelegate, _SFActivityItemCustomizationDelegate, _SFActivityViewControllerDelegate, _SFQuickLookDocumentSource, _SFSaveToFilesOperationDelegate, _SFBrowserContentController, _SFBrowserDocument, _SFBrowserKeyCommandSafariViewControllerMethods>
 @property  _SFBrowserView *browserView
 @property  SFReaderEnabledWebViewController *rootWebViewController
 @property  SFReaderEnabledWebViewController *webViewController
 @property  WKPreferences *wkPreferences
 @property  NSArray *linkActions
 @property  _WKActivatedElementInfo *activatedElementInfo
 @property  BOOL remoteSwipeGestureEnabled
 @property  UIColor *preferredBarTintColor
 @property  UIColor *preferredControlTintColor
 @property  long long hostAppModalPresentationStyle
 @property  long long dismissButtonStyle
 @property  SFSafariViewControllerConfiguration *configuration
 @property  BOOL webViewLayoutUnderlapsStatusBar
 @property  BOOL canPrint
 @property  BOOL isBlockedByScreenTime
 @property  NSString *bundleIdentifierForProfileInstallation
 @property  BOOL _usesScrollToTopView
 @property  BOOL _isUsedForAuthentication
 @property  unsigned long _persona
 @property  SFBrowserPersonaAnalyticsHelper *_analyticsHelper
 @property  NSString *_hostAppBundleId
 @property  BOOL _shouldReloadImmediatelyAfterPageLoadError
 @property  long long safariDataSharingMode
 @property  BOOL didNotifyInitialLoadFinish
 @property  BOOL isShowingErrorPage
 @property  BOOL viewDidAppearInHostApp
 @property  _SFNavigationUtilitiesManager *_navigationUtilitiesManager
 @property  WBSTranslationContext *translationContext
 @property  <_SFBrowserContentViewControllerDelegate> *delegate
 @property  long long displayMode
 @property  _SFReloadOptionsController *reloadOptionsController
 @property  _SFFindOnPageView *findOnPageView
 @property  WKWebView *webView
 @property  BOOL storeBannersAreDisabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <_SFBrowserDocument> *activeDocument
 @property  BOOL showingReader
 @property  BOOL keepBarsMinimized
 @property  _SFPerSitePreferencesVendor *perSitePreferencesVendor
 @property  _SFPageZoomPreferenceManager *pageZoomManager
 @property  BOOL supportsPrivacyReport
 @property  _SFWebView *activeWebView
 @property  <SFReaderContext> *readerContext
 @property  NSURL *URLForPerSitePreferences
 @property  BOOL wasLoadedWithContentBlockersEnabled
 @property  BOOL canHideToolbar
 @property  SFBrowserDocumentTrackerInfo *trackerInfo

  // class methods
  +[_SFBrowserContentViewController createDefaultWebsiteDataStore]

  // instance methods
  -[_SFBrowserContentViewController webView]
  -[_SFBrowserContentViewController decreaseSize:]
  -[_SFBrowserContentViewController becomeFirstResponder]
  -[_SFBrowserContentViewController dynamicBarAnimatorWillLeaveSteadyState:]
  -[_SFBrowserContentViewController canPerformAction:withSender:]
  -[_SFBrowserContentViewController displayMode]
  -[_SFBrowserContentViewController dataForQuickLookDocument:]
  -[_SFBrowserContentViewController suggestedFileNameForQuickLookDocument:]
  -[_SFBrowserContentViewController suggestedFileExtensionForQuickLookDocument:]
  -[_SFBrowserContentViewController preferredStatusBarStyle]
  -[_SFBrowserContentViewController _keyboardWillHide:]
  -[_SFBrowserContentViewController contextMenuConfigurationForReaderViewController:element:completionHandler:]
  -[_SFBrowserContentViewController readerViewController:contextMenuWillPresentForElement:]
  -[_SFBrowserContentViewController _hideQuickLookDocumentView]
  -[_SFBrowserContentViewController _updateDigitalHealthTracking]
  -[_SFBrowserContentViewController expectedOrCurrentURL]
  -[_SFBrowserContentViewController _showReaderAnimated:]
  -[_SFBrowserContentViewController _committedDomainForPreferences]
  -[_SFBrowserContentViewController _shouldAllowAutomaticReader]
  -[_SFBrowserContentViewController _cleanUpAfterRedirectToExternalApp]
  -[_SFBrowserContentViewController readerViewController:contextMenuForElement:willCommitWithAnimator:]
  -[_SFBrowserContentViewController readerViewController:contextMenuDidEndForElement:]
  -[_SFBrowserContentViewController pageLoadErrorController:setAllowsSpecificHTTPSCertificate:forHost:]
  -[_SFBrowserContentViewController pageLoadErrorControllerGetSecIdentityPreferencesController:]
  -[_SFBrowserContentViewController progressState]
  -[_SFBrowserContentViewController webViewController:willPerformClientRedirectToURL:withDelay:]
  -[_SFBrowserContentViewController webViewController:didFinishDocumentLoadForNavigation:]
  -[_SFBrowserContentViewController webViewController:didChangeFullScreen:]
  -[_SFBrowserContentViewController webViewControllerWebProcessDidCrash:]
  -[_SFBrowserContentViewController _didResolveDestinationURL:pendingAppLinkCheck:]
  -[_SFBrowserContentViewController _getSafariDataSharingModeWithCompletion:]
  -[_SFBrowserContentViewController _fetchActivityViewControllerInfoForURL:title:completion:]
  -[_SFBrowserContentViewController _notifyInitialLoadDidFinish:]
  -[_SFBrowserContentViewController reloadOptionsController]
  -[_SFBrowserContentViewController processPool]
  -[_SFBrowserContentViewController prefersHomeIndicatorAutoHidden]
  -[_SFBrowserContentViewController _redirectToExternalNavigationResult:fromOriginalRequest:promptPolicy:isMainFrame:userAction:]
  -[_SFBrowserContentViewController _completeRedirectToExternalNavigationResult:fromOriginalRequest:dialogResult:]
  -[_SFBrowserContentViewController _queueAlertForRedirectToExternalNavigationResult:fromOriginalRequest:isMainFrame:promptPolicy:userAction:]
  -[_SFBrowserContentViewController _didDecideNavigationPolicy:forNavigationAction:]
  -[_SFBrowserContentViewController setDismissButtonStyle:]
  -[_SFBrowserContentViewController setPreferredControlTintColor:]
  -[_SFBrowserContentViewController dismissButtonStyle]
  -[_SFBrowserContentViewController _internalWebViewController:decidePolicyForNavigationAction:decisionHandler:]
  -[_SFBrowserContentViewController resultOfLoadingRequest:inMainFrame:disallowRedirectToExternalApps:]
  -[_SFBrowserContentViewController _didDecideNavigationPolicy:forNavigationResponse:]
  -[_SFBrowserContentViewController dealloc]
  -[_SFBrowserContentViewController pageLoadErrorControllerShouldHandleCertificateError:]
  -[_SFBrowserContentViewController pageLoadErrorControllerShouldReloadAfterError:]
  -[_SFBrowserContentViewController pageLoadErrorController:loadFailedRequestAfterError:]
  -[_SFBrowserContentViewController pageLoadErrorControllerClosePage:]
  -[_SFBrowserContentViewController pageLoadErrorController:allowLegacyTLSConnectionForURL:navigateToURL:]
  -[_SFBrowserContentViewController pageLoadErrorControllerShouldPermanentlyAcceptCertificate:]
  -[_SFBrowserContentViewController activeDocument]
  -[_SFBrowserContentViewController pageLoadErrorController:presentViewController:]
  -[_SFBrowserContentViewController _goBack]
  -[_SFBrowserContentViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[_SFBrowserContentViewController .cxx_destruct]
  -[_SFBrowserContentViewController didMoveToParentViewController:]
  -[_SFBrowserContentViewController presentingViewControllerForWebViewController:]
  -[_SFBrowserContentViewController webViewControllerDidChangeEstimatedProgress:]
  -[_SFBrowserContentViewController webViewControllerDidChangeHasOnlySecureContent:]
  -[_SFBrowserContentViewController webViewControllerWebProcessDidBecomeResponsive:]
  -[_SFBrowserContentViewController webViewControllerWebProcessDidBecomeUnresponsive:]
  -[_SFBrowserContentViewController webViewController:didSameDocumentNavigation:ofType:]
  -[_SFBrowserContentViewController webViewControllerUpdateNavigationBar:]
  -[_SFBrowserContentViewController visibilityWillChangeForFindOnPageView:]
  -[_SFBrowserContentViewController webViewForFindOnPageView:]
  -[_SFBrowserContentViewController handoffURL]
  -[_SFBrowserContentViewController setDisplayMode:]
  -[_SFBrowserContentViewController _isSecure]
  -[_SFBrowserContentViewController gestureRecognizerShouldBegin:]
  -[_SFBrowserContentViewController canBecomeFirstResponder]
  -[_SFBrowserContentViewController setReloadOptionsController:]
  -[_SFBrowserContentViewController stopLoading]
  -[_SFBrowserContentViewController _redirectToNewsIfNeededForRequest:isMainFrame:userAction:decisionHandler:]
  -[_SFBrowserContentViewController _quickLookDocumentForDownload:]
  -[_SFBrowserContentViewController _openNewWebViewIfNeededWithConfiguration:forNavigationAction:]
  -[_SFBrowserContentViewController webViewForMailContentProvider:]
  -[_SFBrowserContentViewController readerViewIsVisibleForMailContentProvider:]
  -[_SFBrowserContentViewController readerControllerForMailContentProvider:]
  -[_SFBrowserContentViewController _goForward]
  -[_SFBrowserContentViewController printController:didCreatePrintInfo:]
  -[_SFBrowserContentViewController presentingViewControllerForPrintController:]
  -[_SFBrowserContentViewController downloadDidReceiveResponse:]
  -[_SFBrowserContentViewController webViewController:authenticationChallenge:shouldAllowLegacyTLS:]
  -[_SFBrowserContentViewController authenticationChallengeDidNegotiateModernTLS:]
  -[_SFBrowserContentViewController webViewController:decidePolicyForSOAuthorizationLoadWithCurrentPolicy:forExtension:completionHandler:]
  -[_SFBrowserContentViewController webViewController:willEndNavigationGestureToBackForwardListItem:]
  -[_SFBrowserContentViewController webViewController:didEndNavigationGestureToBackForwardListItem:]
  -[_SFBrowserContentViewController webViewController:willGoToBackForwardListItem:inPageCache:]
  -[_SFBrowserContentViewController webViewController:decidePolicyForNavigationResponse:decisionHandler:]
  -[_SFBrowserContentViewController webViewController:didFailNavigation:withError:]
  -[_SFBrowserContentViewController webViewControllerDidFirstPaint:]
  -[_SFBrowserContentViewController webViewController:didReceiveAuthenticationChallenge:completionHandler:]
  -[_SFBrowserContentViewController webViewController:didStartLoadForQuickLookDocumentInMainFrameWithFileName:uti:]
  -[_SFBrowserContentViewController webViewController:didFinishLoadForQuickLookDocumentInMainFrame:]
  -[_SFBrowserContentViewController browserPersonaForWebViewController:]
  -[_SFBrowserContentViewController _persona]
  -[_SFBrowserContentViewController newProcessPool]
  -[_SFBrowserContentViewController supportsPrivacyReport]
  -[_SFBrowserContentViewController toggleShowingReaderForUserAction]
  -[_SFBrowserContentViewController setKeepBarsMinimized:]
  -[_SFBrowserContentViewController isShowingReader]
  -[_SFBrowserContentViewController _redirectToHostAppWithNavigationResult:options:]
  -[_SFBrowserContentViewController _didLoadWebView]
  -[_SFBrowserContentViewController _recordHostAppIdAndURLForTapToRadar:]
  -[_SFBrowserContentViewController bundleIdentifierForProfileInstallation]
  -[_SFBrowserContentViewController _hostAppBundleId]
  -[_SFBrowserContentViewController _shouldReloadImmediatelyAfterPageLoadError]
  -[_SFBrowserContentViewController linkPreviewHelper:commitPreviewViewControllerForAction:]
  -[_SFBrowserContentViewController linkPreviewHelper:didProduceNavigationIntent:forAction:]
  -[_SFBrowserContentViewController _setWebView:]
  -[_SFBrowserContentViewController _contextMenuConfigurationForWebView:element:]
  -[_SFBrowserContentViewController _willPresentContextMenu]
  -[_SFBrowserContentViewController _willCommitContextMenuForWebView:withAnimator:]
  -[_SFBrowserContentViewController updateBottombarOffset:topBarHeight:]
  -[_SFBrowserContentViewController _crashBannerDraggingOffsetForContentOffset:]
  -[_SFBrowserContentViewController _reloadFromOrigin:]
  -[_SFBrowserContentViewController clearFluidProgressState]
  -[_SFBrowserContentViewController linkPreviewHelper:previewViewControllerForURL:]
  -[_SFBrowserContentViewController linkPreviewHelper:resultOfLoadingURL:]
  -[_SFBrowserContentViewController _updateWebKitExperimentalFeatures]
  -[_SFBrowserContentViewController set_navigationUtilitiesManager:]
  -[_SFBrowserContentViewController _perSiteAutomaticReaderActivationPreferenceDidChange:]
  -[_SFBrowserContentViewController _perSitePageZoomPreferenceDidChange:]
  -[_SFBrowserContentViewController downloadDidFail:]
  -[_SFBrowserContentViewController viewWillLayoutSubviews]
  -[_SFBrowserContentViewController _canShowDownloadWithoutPrompting:]
  -[_SFBrowserContentViewController _showDownload:]
  -[_SFBrowserContentViewController _showPassBookControllerForPass:]
  -[_SFBrowserContentViewController _showGenericDownloadAlert]
  -[_SFBrowserContentViewController _showICSControllerForPath:sourceURL:]
  -[_SFBrowserContentViewController _itemProviderCollectionForSharingURL:title:]
  -[_SFBrowserContentViewController _fetchSharingURLWithCompletionHandler:]
  -[_SFBrowserContentViewController _mailContentProvider]
  -[_SFBrowserContentViewController _updateUserActivityTimerFired]
  -[_SFBrowserContentViewController _presentSaveWebpageViewController]
  -[_SFBrowserContentViewController _increasePageZoomSetting]
  -[_SFBrowserContentViewController hasFailedURL]
  -[_SFBrowserContentViewController _updateUI]
  -[_SFBrowserContentViewController _updateUserActivity]
  -[_SFBrowserContentViewController websiteDataStore]
  -[_SFBrowserContentViewController translationContext]
  -[_SFBrowserContentViewController activeWebView]
  -[_SFBrowserContentViewController pageZoomManager]
  -[_SFBrowserContentViewController perSitePreferencesVendor]
  -[_SFBrowserContentViewController canHideToolbar]
  -[_SFBrowserContentViewController wasLoadedWithContentBlockersEnabled]
  -[_SFBrowserContentViewController reloadEnablingContentBlockers:]
  -[_SFBrowserContentViewController perSiteSettingsUIPresentSettings]
  -[_SFBrowserContentViewController URLForPerSitePreferences]
  -[_SFBrowserContentViewController initWithNibName:bundle:]
  -[_SFBrowserContentViewController webViewController:webViewDidClose:]
  -[_SFBrowserContentViewController webViewController:contextMenuWillPresentForElement:]
  -[_SFBrowserContentViewController traitCollectionDidChange:]
  -[_SFBrowserContentViewController canPrint]
  -[_SFBrowserContentViewController _showBarsFromBottomBarTap:]
  -[_SFBrowserContentViewController _updateTrackerProtectionPreferences]
  -[_SFBrowserContentViewController _setUpTopBarAndBottomBar]
  -[_SFBrowserContentViewController _updateStatusBarStyleForced:]
  -[_SFBrowserContentViewController _canShowPageFormatMenu]
  -[_SFBrowserContentViewController _canSaveWebpage]
  -[_SFBrowserContentViewController _setUpReloadOptionsControllerIfNeeded]
  -[_SFBrowserContentViewController _setUpCalendarEventDetectorIfNeeded]
  -[_SFBrowserContentViewController _setUpFindOnPageViewIfNeeded]
  -[_SFBrowserContentViewController _setUpToolbar]
  -[_SFBrowserContentViewController _setUpAnalyticsPersona]
  -[_SFBrowserContentViewController _isPreviewing]
  -[_SFBrowserContentViewController _setSuppressingPreviewProgressAnimation:]
  -[_SFBrowserContentViewController _layOutBrowserViewForSizeTransition]
  -[_SFBrowserContentViewController _didCompleteViewSizeTransition]
  -[_SFBrowserContentViewController scrollViewWillBeginDragging:]
  -[_SFBrowserContentViewController linkPreviewHelper:redirectToExternalNavigationResult:]
  -[_SFBrowserContentViewController linkPreviewHelper:supportsAction:forURL:]
  -[_SFBrowserContentViewController downloadDidFinish:]
  -[_SFBrowserContentViewController _emailCurrentPageWithPreferredContentType:]
  -[_SFBrowserContentViewController _decreasePageZoomSetting]
  -[_SFBrowserContentViewController _resetPageZoomSetting]
  -[_SFBrowserContentViewController _personaShouldUseScreenTime]
  -[_SFBrowserContentViewController _digitalHealthManager]
  -[_SFBrowserContentViewController _showDigitalHealthOverlayWithPolicy:]
  -[_SFBrowserContentViewController _hideDigitalHealthOverlay]
  -[_SFBrowserContentViewController _presentActivityViewController]
  -[_SFBrowserContentViewController _canSaveWebpageForURL:]
  -[_SFBrowserContentViewController createReaderWebViewForWebViewController:]
  -[_SFBrowserContentViewController setRemoteSwipeGestureEnabled:]
  -[_SFBrowserContentViewController setPreferredBarTintColor:]
  -[_SFBrowserContentViewController setHostAppModalPresentationStyle:]
  -[_SFBrowserContentViewController dynamicBarAnimator:canTransitionToState:byDraggingWithOffset:]
  -[_SFBrowserContentViewController webViewController:createWebViewWithConfiguration:forNavigationAction:completionHandler:]
  -[_SFBrowserContentViewController webViewController:contextMenuConfigurationForElement:completionHandler:]
  -[_SFBrowserContentViewController webViewController:contextMenuForElement:willCommitWithAnimator:]
  -[_SFBrowserContentViewController webViewController:contextMenuDidEndForElement:]
  -[_SFBrowserContentViewController webViewController:printFrame:]
  -[_SFBrowserContentViewController webViewController:mediaCaptureStateDidChange:]
  -[_SFBrowserContentViewController preferredControlTintColor]
  -[_SFBrowserContentViewController dynamicBarAnimator:minimumTopBarHeightForOffset:]
  -[_SFBrowserContentViewController beginDigitalHealthTracking]
  -[_SFBrowserContentViewController mediaStateIcon]
  -[_SFBrowserContentViewController dynamicBarAnimatorStateDidChange:]
  -[_SFBrowserContentViewController preferredBarTintColor]
  -[_SFBrowserContentViewController webViewControllerDidChangeSafeAreaShouldAffectObscuredInsets:]
  -[_SFBrowserContentViewController webViewController:presentationPolicyForDialog:]
  -[_SFBrowserContentViewController webViewControllerWillPresentJavaScriptDialog:]
  -[_SFBrowserContentViewController webViewControllerDidChangeSafeAreaInsets:]
  -[_SFBrowserContentViewController webViewController:didStartDownload:]
  -[_SFBrowserContentViewController webViewControllerCanPromptForAccountSecurityRecommendation:]
  -[_SFBrowserContentViewController increaseSize:]
  -[_SFBrowserContentViewController observeValueForKeyPath:ofObject:change:context:]
  -[_SFBrowserContentViewController isSafariRestricted]
  -[_SFBrowserContentViewController _dismissTransientUIAnimated:]
  -[_SFBrowserContentViewController _shouldGoBackToOwnerWebView]
  -[_SFBrowserContentViewController _willBeginUserInitiatedNavigation]
  -[_SFBrowserContentViewController _hideNavigationBarGestureRecognized:]
  -[_SFBrowserContentViewController _updateDynamicBarGeometry]
  -[_SFBrowserContentViewController _updateBarTheme]
  -[_SFBrowserContentViewController _decideDataSharingModeIfNecessaryAndSetUpInterface]
  -[_SFBrowserContentViewController _cancelPendingUpdateUserActivityTimer]
  -[_SFBrowserContentViewController _updateInterfaceFillsScreen]
  -[_SFBrowserContentViewController _updateUsesNarrowLayout]
  -[_SFBrowserContentViewController _updateScrollToTopView]
  -[_SFBrowserContentViewController _updateWebViewLayoutSize]
  -[_SFBrowserContentViewController _updateWebViewShrinkToFit]
  -[_SFBrowserContentViewController _isSplitScreen]
  -[_SFBrowserContentViewController navigationBar:didCreateLeadingToolbar:trailingToolbar:]
  -[_SFBrowserContentViewController navigationBarMetricsDidChange:]
  -[_SFBrowserContentViewController setMediaStateIcon:]
  -[_SFBrowserContentViewController webViewControllerDidDetermineReaderAvailability:dueTo:]
  -[_SFBrowserContentViewController webViewController:didClickLinkInReaderWithRequest:]
  -[_SFBrowserContentViewController webViewController:didFindAppBannerWithContent:]
  -[_SFBrowserContentViewController webViewController:didExtractTextSamplesForTranslation:]
  -[_SFBrowserContentViewController barManager:didReceiveTapForBarItem:]
  -[_SFBrowserContentViewController wkPreferences]
  -[_SFBrowserContentViewController browserPersonaForActivityViewController:]
  -[_SFBrowserContentViewController quickLookDocument]
  -[_SFBrowserContentViewController linkActions]
  -[_SFBrowserContentViewController stopDigitalHealthTracking]
  -[_SFBrowserContentViewController setWebViewLayoutUnderlapsStatusBar:]
  -[_SFBrowserContentViewController webViewController]
  -[_SFBrowserContentViewController webViewControllerDidChangeLoadingState:]
  -[_SFBrowserContentViewController webViewControllerDidFirstVisuallyNonEmptyLayout:]
  -[_SFBrowserContentViewController _navigationUtilitiesManager]
  -[_SFBrowserContentViewController webViewController:decidePolicyForNavigationAction:decisionHandler:]
  -[_SFBrowserContentViewController _dismiss]
  -[_SFBrowserContentViewController configuration]
  -[_SFBrowserContentViewController addBookmarkNavController:didFinishWithResult:bookmark:]
  -[_SFBrowserContentViewController addBookmarkNavControllerCanSaveBookmarkChanges:]
  -[_SFBrowserContentViewController overrideTraitCollectionForChildViewController:]
  -[_SFBrowserContentViewController keyCommands]
  -[_SFBrowserContentViewController _invalidateUserActivity]
  -[_SFBrowserContentViewController _analyticsHelper]
  -[_SFBrowserContentViewController viewDidAppearInHostApp]
  -[_SFBrowserContentViewController setViewDidAppearInHostApp:]
  -[_SFBrowserContentViewController _updateRemoteSwipeGestureState]
  -[_SFBrowserContentViewController navigationBarReloadButtonWasTapped:]
  -[_SFBrowserContentViewController navigationBarFormatMenuButtonStartedInteraction:]
  -[_SFBrowserContentViewController navigationBarReaderButtonWasTapped:]
  -[_SFBrowserContentViewController navigationBarStopLoadingButtonWasTapped:]
  -[_SFBrowserContentViewController compressedNavigationBarWasTapped:]
  -[_SFBrowserContentViewController navigationBarTranslateButtonWasTapped:]
  -[_SFBrowserContentViewController navigationBarFormatMenuButtonWasTapped:]
  -[_SFBrowserContentViewController navigationBarMediaStateMuteButtonWasTapped:]
  -[_SFBrowserContentViewController navigationBarCancelButtonWasTapped:]
  -[_SFBrowserContentViewController navigationBarDoneButtonWasTapped:]
  -[_SFBrowserContentViewController navigationBarFormatMenuButtonBecameUnavailable:]
  -[_SFBrowserContentViewController printControllerForContentProvider:]
  -[_SFBrowserContentViewController fluidProgressRocketAnimationDidComplete]
  -[_SFBrowserContentViewController currentFluidProgressStateSource]
  -[_SFBrowserContentViewController createFluidProgressState]
  -[_SFBrowserContentViewController translationConsentAlertHelperViewControllerToPresentDetailsFrom:]
  -[_SFBrowserContentViewController translationContextReloadPageInOriginalLanguage:]
  -[_SFBrowserContentViewController keepBarsMinimized]
  -[_SFBrowserContentViewController navigationBarURLForSharing:]
  -[_SFBrowserContentViewController scrollViewDidScroll:]
  -[_SFBrowserContentViewController presentViewController:animated:completion:]
  -[_SFBrowserContentViewController downloadDidStart:]
  -[_SFBrowserContentViewController _translationAvailabilityDidChange:]
  -[_SFBrowserContentViewController viewWillAppear:]
  -[_SFBrowserContentViewController loadRequest:]
  -[_SFBrowserContentViewController navigateBackKeyPressed]
  -[_SFBrowserContentViewController navigateForwardKeyPressed]
  -[_SFBrowserContentViewController findKeyPressed]
  -[_SFBrowserContentViewController dismissSFSafariViewControllerKeyPressed]
  -[_SFBrowserContentViewController reloadKeyPressed]
  -[_SFBrowserContentViewController cancelKeyPressed]
  -[_SFBrowserContentViewController resetPageZoomLevelAndFontSize]
  -[_SFBrowserContentViewController toggleReaderKeyPressed]
  -[_SFBrowserContentViewController saveWebpageKeyPressed]
  -[_SFBrowserContentViewController _updatePinnableBannerFrame]
  -[_SFBrowserContentViewController _updateCurrentScrollViewInsets]
  -[_SFBrowserContentViewController _safeAreaShouldAffectWebViewObscuredInsets]
  -[_SFBrowserContentViewController _effectiveWebViewSafeAreaInsets]
  -[_SFBrowserContentViewController _maximumHeightObscuredByBottomBar]
  -[_SFBrowserContentViewController _canScrollToTopInView:]
  -[_SFBrowserContentViewController _scrollToTopFromScrollToTopView]
  -[_SFBrowserContentViewController _updateHomeIndicatorAutoHideState]
  -[_SFBrowserContentViewController _effectiveBarCollapsingEnabled]
  -[_SFBrowserContentViewController _offsetForDynamicBarAnimator]
  -[_SFBrowserContentViewController _setShowingReader:deactivationMode:animated:]
  -[_SFBrowserContentViewController _readerViewControllerNeedsSetUp]
  -[_SFBrowserContentViewController activityViewController:prepareActivity:completion:]
  -[_SFBrowserContentViewController customizationControllerCustomizationsDidChange:]
  -[_SFBrowserContentViewController webViewForCustomizationController:]
  -[_SFBrowserContentViewController isContentObscuredByDigitalHealthForCustomizationController:]
  -[_SFBrowserContentViewController isDisplayingQuickLookDocumentForCustomizationController:]
  -[_SFBrowserContentViewController browserView]
  -[_SFBrowserContentViewController _updateNavigationBar]
  -[_SFBrowserContentViewController translationContextIsUsingPrivateBrowsing:]
  -[_SFBrowserContentViewController translationContext:urlForCurrentPageWithCompletionHandler:]
  -[_SFBrowserContentViewController translationContext:showFirstTimeConsentAlertWithCompletionHandler:]
  -[_SFBrowserContentViewController translationContext:showTranslationErrorAlertWithTitle:message:]
  -[_SFBrowserContentViewController translationContext:shouldReportProgressInUnifiedField:]
  -[_SFBrowserContentViewController setFindOnPageView:]
  -[_SFBrowserContentViewController storeBannersAreDisabled]
  -[_SFBrowserContentViewController setStoreBannersAreDisabled:]
  -[_SFBrowserContentViewController hostAppModalPresentationStyle]
  -[_SFBrowserContentViewController webViewLayoutUnderlapsStatusBar]
  -[_SFBrowserContentViewController _currentWebView]
  -[_SFBrowserContentViewController processPoolConfiguration]
  -[_SFBrowserContentViewController _updateScrollIndicatorVerticalInsets:horizontalInsets:]
  -[_SFBrowserContentViewController safariDataSharingMode]
  -[_SFBrowserContentViewController estimatedProgress]
  -[_SFBrowserContentViewController isReaderAvailableForCustomizationController:]
  -[_SFBrowserContentViewController isShowingReaderForCustomizationController:]
  -[_SFBrowserContentViewController scrollViewShouldScrollToTop:]
  -[_SFBrowserContentViewController nextFindResultKeyPressed]
  -[_SFBrowserContentViewController previousFindResultKeyPressed]
  -[_SFBrowserContentViewController saveWebpageAlternativeKeyPressed]
  -[_SFBrowserContentViewController setDelegate:]
  -[_SFBrowserContentViewController didNotifyInitialLoadFinish]
  -[_SFBrowserContentViewController setTranslationContext:]
  -[_SFBrowserContentViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[_SFBrowserContentViewController _invalidateEVOrganizationName]
  -[_SFBrowserContentViewController dynamicBarAnimatorOutputsDidChange:]
  -[_SFBrowserContentViewController dynamicBarAnimatorWillEnterSteadyState:]
  -[_SFBrowserContentViewController viewDidDisappear:]
  -[_SFBrowserContentViewController _EVOrganizationName]
  -[_SFBrowserContentViewController webViewController:didFailProvisionalNavigation:withError:]
  -[_SFBrowserContentViewController webViewController:didFinishNavigation:]
  -[_SFBrowserContentViewController webViewControllerDidChangeURL:]
  -[_SFBrowserContentViewController rootWebViewController]
  -[_SFBrowserContentViewController isShowingErrorPage]
  -[_SFBrowserContentViewController isBlockedByScreenTime]
  -[_SFBrowserContentViewController _updateUserActivitySoon]
  -[_SFBrowserContentViewController _setUpReaderViewController]
  -[_SFBrowserContentViewController _fallbackURLForWellKnownChangePasswordURL:]
  -[_SFBrowserContentViewController isPageEligibileToShowNotSecureWarning]
  -[_SFBrowserContentViewController didUpdateNavigationBarItem:]
  -[_SFBrowserContentViewController _updateBarItems]
  -[_SFBrowserContentViewController _updatePreviewLoadingUI]
  -[_SFBrowserContentViewController _setShowingCrashBanner:animated:]
  -[_SFBrowserContentViewController _updatePinnableBannerOffset]
  -[_SFBrowserContentViewController _showCrashBanner:animated:]
  -[_SFBrowserContentViewController _setUpWebViewControllerIfNeeded]
  -[_SFBrowserContentViewController _openCurrentURLInSafari]
  -[_SFBrowserContentViewController _isUsedForAuthentication]
  -[_SFBrowserContentViewController findOnPageView]
  -[_SFBrowserContentViewController _showBars]
  -[_SFBrowserContentViewController viewDidLayoutSubviews]
  -[_SFBrowserContentViewController takeFindStringKeyPressed]
  -[_SFBrowserContentViewController emailCurrentPage]
  -[_SFBrowserContentViewController reloadFromOriginKeyPressed]
  -[_SFBrowserContentViewController saveToFilesOperation:presentViewController:]
  -[_SFBrowserContentViewController saveToFilesOperation:didFinishWithSuccess:]
  -[_SFBrowserContentViewController readerContext]
  -[_SFBrowserContentViewController gestureRecognizer:shouldReceiveTouch:]
  -[_SFBrowserContentViewController webViewController:didCommitNavigation:]
  -[_SFBrowserContentViewController delegate]
  -[_SFBrowserContentViewController addPassesViewControllerDidFinish:]
  -[_SFBrowserContentViewController websiteDataStoreConfiguration]
  -[_SFBrowserContentViewController webViewConfiguration]
  -[_SFBrowserContentViewController setWebViewController:]
  -[_SFBrowserContentViewController _initialLoadFinishedWithSuccess:]
  -[_SFBrowserContentViewController _goBackToOwnerWebView]
  -[_SFBrowserContentViewController setSafariDataSharingMode:]
  -[_SFBrowserContentViewController _usesScrollToTopView]
  -[_SFBrowserContentViewController gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:]
  -[_SFBrowserContentViewController _hideCrashBanner]
  -[_SFBrowserContentViewController _updateCrashBannerOffset]
  -[_SFBrowserContentViewController _canTranslateWebpages]
  -[_SFBrowserContentViewController setQuickLookDocumentForCurrentBackForwardListItem:]
  -[_SFBrowserContentViewController quickLookDocumentForCurrentBackForwardListItem]
  -[_SFBrowserContentViewController _translationContextStateDidChange:]
  -[_SFBrowserContentViewController legacyTLSHostManager]
  -[_SFBrowserContentViewController _setShowingPinnableBanner:animated:]
  -[_SFBrowserContentViewController _hideReaderAnimated:deactivationMode:]
  -[_SFBrowserContentViewController _updatePageZoomWithPreference]
  -[_SFBrowserContentViewController _showQuickLookDocumentView]
  -[_SFBrowserContentViewController setLinkActions:]
  -[_SFBrowserContentViewController activatedElementInfo]
  -[_SFBrowserContentViewController setActivatedElementInfo:]
  -[_SFBrowserContentViewController policyDidChangeForDigitalHealthManager:]
  -[_SFBrowserContentViewController remoteSwipeGestureEnabled]
  -[_SFBrowserContentViewController _redirectToHostAppWithExpectedCallbackSchemeIfPossible:]
  -[_SFBrowserContentViewController _applicationPayloadForOpeningInSafari]
  -[_SFBrowserContentViewController webViewController:didReceiveServerRedirectForProvisionalNavigation:]
  -[_SFBrowserContentViewController webViewControllerDidCancelClientRedirect:]
  -[_SFBrowserContentViewController webViewController:didStartProvisionalNavigation:]
  -[_SFBrowserContentViewController loadView]
  -[_SFBrowserContentViewController printControllerPageIsLoading:]
  -[_SFBrowserContentViewController printControllerShouldPrintReader:]
  -[_SFBrowserContentViewController printControllerCanPresentPrintUI:]
  -[_SFBrowserContentViewController setConfiguration:]
  -[_SFBrowserContentViewController dismissAppSuggestionBanner:]
  -[_SFBrowserContentViewController shouldBlockAppSuggestionBanner:]
  -[_SFBrowserContentViewController setAppSuggestionBanner:isPinned:]


_SFWebClipMetadataFetcher : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFWebClipMetadataFetcher metadataFetcherScriptSource]

  // instance methods
  -[_SFWebClipMetadataFetcher _startFetchingMetadata]
  -[_SFWebClipMetadataFetcher _webClipLinkTagWithDictionary:]
  -[_SFWebClipMetadataFetcher .cxx_destruct]
  -[_SFWebClipMetadataFetcher initWithInjectedJavascriptController:]
  -[_SFWebClipMetadataFetcher fetchMetadataWithConsumer:]


SFAddPasswordViewController : UITableViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UITextFieldDelegate>
 @property  <SFAddPasswordViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFAddPasswordViewController viewDidLoad]
  -[SFAddPasswordViewController init]
  -[SFAddPasswordViewController _savePasswordAndDismiss]
  -[SFAddPasswordViewController tableView:numberOfRowsInSection:]
  -[SFAddPasswordViewController .cxx_destruct]
  -[SFAddPasswordViewController _cancelBarButtonItemTapped:]
  -[SFAddPasswordViewController _doneBarButtonItemTapped:]
  -[SFAddPasswordViewController tableView:cellForRowAtIndexPath:]
  -[SFAddPasswordViewController _textFieldChanged:]
  -[SFAddPasswordViewController viewDidAppear:]
  -[SFAddPasswordViewController tableView:shouldHighlightRowAtIndexPath:]
  -[SFAddPasswordViewController textFieldShouldReturn:]
  -[SFAddPasswordViewController setDelegate:]
  -[SFAddPasswordViewController delegate]


_SFReloadOptionsController : NSObject /usr/lib/libc++.1.dylib <_SFRequestDesktopSitePerSitePreferenceObserver>
 @property  _SFInjectedJavaScriptController *activityJSController
 @property  BOOL loadedUsingDesktopUserAgent
 @property  BOOL tryUsingMobileIfPossible
 @property  long long effectiveContentMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFReloadOptionsController setTryUsingMobileIfPossible:]
  -[_SFReloadOptionsController init]
  -[_SFReloadOptionsController loadedUsingDesktopUserAgent]
  -[_SFReloadOptionsController didUpdateRequestDesktopSiteDefaultValue:]
  -[_SFReloadOptionsController activityJSController]
  -[_SFReloadOptionsController requestDesktopSiteWithURL:]
  -[_SFReloadOptionsController didSetRequestDesktopSiteDefaultValue:]
  -[_SFReloadOptionsController .cxx_destruct]
  -[_SFReloadOptionsController customUserAgentSettingForMainFrameURL:withTimeout:completionHandler:]
  -[_SFReloadOptionsController didMarkURLAsNeedingDesktopUserAgent:]
  -[_SFReloadOptionsController customNavigatorPlatformForSetting:]
  -[_SFReloadOptionsController requestDesktopSite]
  -[_SFReloadOptionsController didSetRequestDesktopSitePerSitePreferencesValues:]
  -[_SFReloadOptionsController didMarkURLAsNeedingStandardUserAgent:]
  -[_SFReloadOptionsController setEffectiveContentMode:]
  -[_SFReloadOptionsController requestStandardSite]
  -[_SFReloadOptionsController didUpdateRequestDesktopSitePerSitePreference:]
  -[_SFReloadOptionsController initWithWebView:activityJSController:perSitePreferenceManager:]
  -[_SFReloadOptionsController _updateSettingSource:domain:]
  -[_SFReloadOptionsController _overrideSettingIfNeeded:source:domain:completion:]
  -[_SFReloadOptionsController logCompletedPageloadToDifferentialPrivacy:]
  -[_SFReloadOptionsController customUserAgentForSetting:]
  -[_SFReloadOptionsController _loadPerSitePreferences]
  -[_SFReloadOptionsController invalidate]
  -[_SFReloadOptionsController effectiveContentMode]
  -[_SFReloadOptionsController tryUsingMobileIfPossible]


SFReaderEnabledWebViewController : SFWebViewController <_SFAppBannerMetaTagContentObserver, _SFReaderControllerDelegate, WKNavigationDelegatePrivate>
 @property  _SFReaderController *readerController
 @property  <SFReaderEnabledWebViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFReaderEnabledWebViewController _updateDarkModeEnabled]
  -[SFReaderEnabledWebViewController dealloc]
  -[SFReaderEnabledWebViewController .cxx_destruct]
  -[SFReaderEnabledWebViewController createReaderWebViewForReaderController:]
  -[SFReaderEnabledWebViewController readerController:didDetermineReaderAvailability:dueTo:]
  -[SFReaderEnabledWebViewController readerController:contentDidBecomeReadyWithDetectedLanguage:]
  -[SFReaderEnabledWebViewController readerController:didClickLinkRequestingNewWindowInReaderWithRequest:]
  -[SFReaderEnabledWebViewController readerController:didClickLinkInReaderWithRequest:]
  -[SFReaderEnabledWebViewController readerController]
  -[SFReaderEnabledWebViewController traitCollectionDidChange:]
  -[SFReaderEnabledWebViewController webView:didCommitNavigation:]
  -[SFReaderEnabledWebViewController setUpReaderWithReaderWebView:]
  -[SFReaderEnabledWebViewController invalidate]
  -[SFReaderEnabledWebViewController loadView]
  -[SFReaderEnabledWebViewController didFindAppBannerWithContent:]


_SFBrowserSavedState : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *browserWindows
 @property  NSArray *recentlyClosedTabs
 @property  BOOL secureDeleteEnabled

  // class methods
  +[_SFBrowserSavedState setShouldMergeAllWindowsIfNeeded:]
  +[_SFBrowserSavedState sharedBrowserSavedState]
  +[_SFBrowserSavedState setSharedBrowserSavedState:]
  +[_SFBrowserSavedState shouldMergeAllWindowsIfNeeded]
  +[_SFBrowserSavedState ephemeralSavedState]

  // instance methods
  -[_SFBrowserSavedState _historyItemsWereRemoved:]
  -[_SFBrowserSavedState saveTabStateData:]
  -[_SFBrowserSavedState initWithDatabaseURL:]
  -[_SFBrowserSavedState clearAllSavedStatesAndCloseDatabase]
  -[_SFBrowserSavedState loadSessionStateDataAndRemoveRecentlyClosedTab:]
  -[_SFBrowserSavedState secureDeleteEnabled]
  -[_SFBrowserSavedState _readRecentlyClosedTabsStateIfNecessary]
  -[_SFBrowserSavedState initWithDefaultBrowserStateDatabase]
  -[_SFBrowserSavedState dealloc]
  -[_SFBrowserSavedState .cxx_destruct]
  -[_SFBrowserSavedState clearRecentlyClosedTabs]
  -[_SFBrowserSavedState initWithInMemoryDatabase]
  -[_SFBrowserSavedState tabStateDataForUUID:]
  -[_SFBrowserSavedState _readBrowserControllersSavedState]
  -[_SFBrowserSavedState removeTabsStateForBrowserControllerWithUUID:andRemoveWindow:]
  -[_SFBrowserSavedState updateSceneID:]
  -[_SFBrowserSavedState browserWindows]
  -[_SFBrowserSavedState regenerateTabUUIDsForDeviceRestoration]
  -[_SFBrowserSavedState updateBrowserWindowState:tabs:]
  -[_SFBrowserSavedState setActiveDocumentIsValid:forBrowserControllerWithUUID:]
  -[_SFBrowserSavedState _checkPointWriteAheadLogIfNeeded]
  -[_SFBrowserSavedState _removeRecentlyClosedTabStateData:]
  -[_SFBrowserSavedState readSavedSessionStateDataForTabWithUUID:]
  -[_SFBrowserSavedState setBrowserWindows:]
  -[_SFBrowserSavedState removeRecentlyClosedTabWithStateData:]
  -[_SFBrowserSavedState clearAllSavedStatesClosingDatabase:]
  -[_SFBrowserSavedState addRecentlyClosedTabs:]
  -[_SFBrowserSavedState savedTabsStateForBrowserControllerWithUUID:]
  -[_SFBrowserSavedState removeTabStateWithTabData:]
  -[_SFBrowserSavedState recentlyClosedTabs]
  -[_SFBrowserSavedState _notifyThatRecentlyClosedTabsWereRemoved:]
  -[_SFBrowserSavedState activeDocumentIsValidForBrowserControllerWithUUID:]
  -[_SFBrowserSavedState setRecentlyClosedTabs:]
  -[_SFBrowserSavedState setSecureDeleteEnabled:]
  -[_SFBrowserSavedState saveTabsState:forBrowserControllerWithUUID:completion:]


_SFInjectedJavaScriptController : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_SFInjectedJavaScriptController runJavaScriptForActivity:withScript:object:invokeMethod:completionHandler:]
  -[_SFInjectedJavaScriptController .cxx_destruct]
  -[_SFInjectedJavaScriptController _webProcessActivityProxy]
  -[_SFInjectedJavaScriptController initWithWebView:]


SFPasswordAlertController : UIAlertController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // class methods
  +[SFPasswordAlertController _preventsAppearanceProxyCustomization]


SFPasswordServiceViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  NSString *applicationIdentifier

  // class methods
  +[SFPasswordServiceViewController _remoteViewControllerInterface]

  // instance methods
  -[SFPasswordServiceViewController applicationIdentifier]
  -[SFPasswordServiceViewController .cxx_destruct]
  -[SFPasswordServiceViewController _willAppearInRemoteViewController]


_SFAppLinkBanner : _SFLinkBanner
 @property  WBSAppLink *appLink

  // instance methods
  -[_SFAppLinkBanner appLink]
  -[_SFAppLinkBanner .cxx_destruct]
  -[_SFAppLinkBanner initWithAppLink:openActionHandler:]


_SSHistoryAccessSession : WBSHistoryAccessSessionProxy /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices

SFSecurityRecommendationInfoCell : UITableViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFPasswordTableViewCell>
 @property  UIImage *icon
 @property  NSString *title
 @property  NSString *subtitle
 @property  WBSSavedPassword *savedPassword
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFSecurityRecommendationInfoCell setSubtitle:]
  -[SFSecurityRecommendationInfoCell setShowsUpgradeCompletionCheckmark:]
  -[SFSecurityRecommendationInfoCell savedPassword]
  -[SFSecurityRecommendationInfoCell _iconWidth]
  -[SFSecurityRecommendationInfoCell .cxx_destruct]
  -[SFSecurityRecommendationInfoCell icon]
  -[SFSecurityRecommendationInfoCell showPlaceholderImageForDomain:backgroundColor:]
  -[SFSecurityRecommendationInfoCell setTitle:]
  -[SFSecurityRecommendationInfoCell initWithConfiguration:reuseIdentifier:]
  -[SFSecurityRecommendationInfoCell showCheckmarkForDetailView]
  -[SFSecurityRecommendationInfoCell setIcon:]
  -[SFSecurityRecommendationInfoCell title]
  -[SFSecurityRecommendationInfoCell subtitle]
  -[SFSecurityRecommendationInfoCell setSavedPassword:]


_SFGeolocationPermissionManager : WBSGeolocationPreferenceManager /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // class methods
  +[_SFGeolocationPermissionManager sharedManager]

  // instance methods
  -[_SFGeolocationPermissionManager .cxx_destruct]
  -[_SFGeolocationPermissionManager hasPreciseLocationPermission]
  -[_SFGeolocationPermissionManager _showDialogRequestingPermissionForURL:frame:dialogPresenter:completionHandler:]
  -[_SFGeolocationPermissionManager requestPermissionForURL:frame:dialogPresenter:completionHandler:]


_SFQuickLookDocument : NSObject /usr/lib/libc++.1.dylib
 @property  LSDocumentProxy *documentProxy
 @property  NSString *savedPath
 @property  NSString *savedPathWithProperExtension
 @property  NSString *fileName
 @property  NSString *mimeType
 @property  NSString *uti
 @property  BOOL needsQuickLookDocumentView
 @property  NSURL *savedURLWithProperExtension
 @property  unsigned long fileSize
 @property  NSString *inferredUTI
 @property  NSString *localizedType
 @property  NSURL *sourceURL
 @property  BOOL shouldUnzipByUIDocumentInteractionController
 @property  <_SFQuickLookDocumentSource> *documentSource

  // class methods
  +[_SFQuickLookDocument _hasSuitableApplicationForOpeningDocument:]

  // instance methods
  -[_SFQuickLookDocument uti]
  -[_SFQuickLookDocument documentProxy]
  -[_SFQuickLookDocument initWithFileName:mimeType:uti:needsQuickLookDocumentView:]
  -[_SFQuickLookDocument saveToFileIfNeeded]
  -[_SFQuickLookDocument setSourceURL:]
  -[_SFQuickLookDocument fileName]
  -[_SFQuickLookDocument setFileName:]
  -[_SFQuickLookDocument sourceURL]
  -[_SFQuickLookDocument savedPath]
  -[_SFQuickLookDocument setUti:]
  -[_SFQuickLookDocument dealloc]
  -[_SFQuickLookDocument .cxx_destruct]
  -[_SFQuickLookDocument mimeType]
  -[_SFQuickLookDocument _deleteSavedPathIfNecessary]
  -[_SFQuickLookDocument _deleteSavedPathWithProperExtensionIfNecessary]
  -[_SFQuickLookDocument savedPathWithProperExtension]
  -[_SFQuickLookDocument setDocumentProxy:]
  -[_SFQuickLookDocument setSavedPathWithProperExtension:shouldDelete:]
  -[_SFQuickLookDocument setSavedPath:]
  -[_SFQuickLookDocument setSavedPathWithProperExtension:]
  -[_SFQuickLookDocument setFileNameForPDFDocument:]
  -[_SFQuickLookDocument needsQuickLookDocumentView]
  -[_SFQuickLookDocument fileSize]
  -[_SFQuickLookDocument addQuickLookPrintSettingsToPrintInfo:]
  -[_SFQuickLookDocument setSavedPath:shouldDelete:]
  -[_SFQuickLookDocument savedURLWithProperExtension]
  -[_SFQuickLookDocument inferredUTI]
  -[_SFQuickLookDocument setMimeType:]
  -[_SFQuickLookDocument shouldUnzipByUIDocumentInteractionController]
  -[_SFQuickLookDocument localizedType]
  -[_SFQuickLookDocument documentSource]
  -[_SFQuickLookDocument setDocumentSource:]


_SFClass : NSObject /usr/lib/libc++.1.dylib

_SFOpenWithAppUIActivity : UIActivity /System/Library/PrivateFrameworks/WebUI.framework/WebUI <LSOpenResourceOperationDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFOpenWithAppUIActivity openResourceOperation:didFinishCopyingResource:]
  -[_SFOpenWithAppUIActivity activityType]
  -[_SFOpenWithAppUIActivity activityTitle]
  -[_SFOpenWithAppUIActivity canPerformWithActivityItems:]
  -[_SFOpenWithAppUIActivity performActivity]
  -[_SFOpenWithAppUIActivity .cxx_destruct]
  -[_SFOpenWithAppUIActivity _activityImage]
  -[_SFOpenWithAppUIActivity initWithApplicationIdentifier:andFilePath:]


_SFOpenInOtherAppActivityItemsSource : NSObject /usr/lib/libc++.1.dylib <UIActivityItemsSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFOpenInOtherAppActivityItemsSource activityViewControllerPlaceholderItems:]
  -[_SFOpenInOtherAppActivityItemsSource activityViewController:itemsForActivityType:]
  -[_SFOpenInOtherAppActivityItemsSource .cxx_destruct]
  -[_SFOpenInOtherAppActivityItemsSource initWithFilePath:]


_SFOpenInOtherAppActivityViewController : _SFActivityViewController
 @property  NSString *filePath

  // class methods
  +[_SFOpenInOtherAppActivityViewController _applicationsForDocumentProxy:]
  +[_SFOpenInOtherAppActivityViewController _activityItemsForFilePath:UTI:sourceURL:]
  +[_SFOpenInOtherAppActivityViewController canOpenWithFilePath:UTI:sourceURL:]

  // instance methods
  -[_SFOpenInOtherAppActivityViewController .cxx_destruct]
  -[_SFOpenInOtherAppActivityViewController _prepareActivity:]
  -[_SFOpenInOtherAppActivityViewController setFilePath:]
  -[_SFOpenInOtherAppActivityViewController filePath]
  -[_SFOpenInOtherAppActivityViewController initWithFilePath:UTI:sourceURL:]


SFExternalPasswordCredentialServiceViewController : SFPasswordServiceViewController <SFCredentialProviderExtensionManagerObserver, _ASPasswordCredentialAuthenticationViewControllerDelegate, _SFAuthenticationClient, _SFAuthenticationContextDelegate, SFExternalPasswordCredentialServiceViewControllerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFExternalPasswordCredentialServiceViewController _remoteViewControllerInterface]
  +[SFExternalPasswordCredentialServiceViewController _exportedInterface]

  // instance methods
  -[SFExternalPasswordCredentialServiceViewController authenticationCustomUIProgressObserverForContext:]
  -[SFExternalPasswordCredentialServiceViewController .cxx_destruct]
  -[SFExternalPasswordCredentialServiceViewController credentialProviderExtensionManagerExtensionListDidChange:]
  -[SFExternalPasswordCredentialServiceViewController _finishRequestToAutoFillCredential:extensionShowedUI:error:completion:]
  -[SFExternalPasswordCredentialServiceViewController _finishRequestToReturnCredential:extensionShowedUI:error:completion:]
  -[SFExternalPasswordCredentialServiceViewController displayMessageAsTitleForContext:]
  -[SFExternalPasswordCredentialServiceViewController passcodePromptForContext:]
  -[SFExternalPasswordCredentialServiceViewController initWithNibName:bundle:]
  -[SFExternalPasswordCredentialServiceViewController autoFillWithCredentialIdentity:]
  -[SFExternalPasswordCredentialServiceViewController getCredentialForCredentialIdentity:completion:]
  -[SFExternalPasswordCredentialServiceViewController _dismiss]
  -[SFExternalPasswordCredentialServiceViewController _authenticationContext]
  -[SFExternalPasswordCredentialServiceViewController presentUIForPasswordCredentialAuthenticationViewController:]
  -[SFExternalPasswordCredentialServiceViewController passwordCredentialAuthenticationViewController:didFinishWithCredential:error:completion:]
  -[SFExternalPasswordCredentialServiceViewController contextRequiresSessionBasedAuthentication:]
  -[SFExternalPasswordCredentialServiceViewController contextShouldAllowPasscodeFallback:]
  -[SFExternalPasswordCredentialServiceViewController contextShouldAllowMultipleBiometricFailures:]
  -[SFExternalPasswordCredentialServiceViewController authenticationMessageForContext:]


_SFBrowserNavigationBar : _SFNavigationBar
  // class methods
  +[_SFBrowserNavigationBar _metricsCategory]

  // instance methods
  -[_SFBrowserNavigationBar placeholderHorizontalInset]
  -[_SFBrowserNavigationBar newTextField]


_SFDialogView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  <_SFDialogViewDelegate> *delegate
 @property  UIView *contentView

  // instance methods
  -[_SFDialogView becomeFirstResponder]
  -[_SFDialogView initWithFrame:]
  -[_SFDialogView setTitleText:]
  -[_SFDialogView didAppear]
  -[_SFDialogView contentView]
  -[_SFDialogView .cxx_destruct]
  -[_SFDialogView _keyboardDismissGesture:]
  -[_SFDialogView setObscuredInsets:]
  -[_SFDialogView setDelegate:]
  -[_SFDialogView willDisappear]
  -[_SFDialogView setMessageText:]
  -[_SFDialogView setDialogActions:]
  -[_SFDialogView setInputText:placeholder:]
  -[_SFDialogView setPasswordText:placeholder:]
  -[_SFDialogView setTableViewRows:didSelectRowAction:]
  -[_SFDialogView delegate]
  -[_SFDialogView setUsesOpaqueAppearance:]
  -[_SFDialogView initWithCoder:]


_SFFolderPickerTableViewCellLayoutManager : UITableViewCellLayoutManagerValue1 /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // class methods
  +[_SFFolderPickerTableViewCellLayoutManager indentationWidth]

  // instance methods
  -[_SFFolderPickerTableViewCellLayoutManager layoutSubviewsOfCell:]
  -[_SFFolderPickerTableViewCellLayoutManager _layoutMarginsForCell:]
  -[_SFFolderPickerTableViewCellLayoutManager textRectForCell:rowWidth:forSizing:]


SFFormAutoFillFrame : NSObject /usr/lib/libc++.1.dylib <WBSFormAutoFillFrame>
 @property  WKWebProcessPlugInFrame *plugInFrame
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFFormAutoFillFrame autoFillFrameWithWebProcessPlugInFrame:]

  // instance methods
  -[SFFormAutoFillFrame frameRef]
  -[SFFormAutoFillFrame .cxx_destruct]
  -[SFFormAutoFillFrame _pageContoller]
  -[SFFormAutoFillFrame _formMetadataController]
  -[SFFormAutoFillFrame plugInFrame]
  -[SFFormAutoFillFrame initWithWebProcessPlugInFrame:]
  -[SFFormAutoFillFrame isEqual:]
  -[SFFormAutoFillFrame jsContextForMetadataControllerScriptWorld]
  -[SFFormAutoFillFrame enumerateChildFramesUsingBlock:]
  -[SFFormAutoFillFrame pageMainFrame]
  -[SFFormAutoFillFrame jsWrapperInMetadataControllerScriptWorldForNode:]
  -[SFFormAutoFillFrame committedURL]
  -[SFFormAutoFillFrame containsAnyFormElements]


_SFSectionAction : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *title
 @property  @? handler

  // class methods
  +[_SFSectionAction toggleSectionExpandedAction]
  +[_SFSectionAction actionWithTitle:handler:]

  // instance methods
  -[_SFSectionAction .cxx_destruct]
  -[_SFSectionAction handler]
  -[_SFSectionAction setTitle:]
  -[_SFSectionAction title]


_SFBannerModel : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *title
 @property  NSString *message
 @property  @? dismissHandler

  // class methods
  +[_SFBannerModel bannerWithTitle:message:dismissHandler:]

  // instance methods
  -[_SFBannerModel message]
  -[_SFBannerModel .cxx_destruct]
  -[_SFBannerModel title]
  -[_SFBannerModel dismissHandler]


_SFSectionModel : NSObject /usr/lib/libc++.1.dylib
 @property  long long itemType
 @property  _SFBannerModel *contentBanner
 @property  @? siteIconConfigurationProvider
 @property  @? siteCardConfigurationProvider
 @property  id identifier
 @property  NSString *title
 @property  NSArray *actions
 @property  _SFBannerModel *banner
 @property  NSArray *itemIdentifiers
 @property  long long numberOfRowsVisibleWhenCollapsed
 @property  @? contextMenuProvider
 @property  @? contextMenuCommitHandler

  // class methods
  +[_SFSectionModel bannerSectionWithIdentifier:banner:]
  +[_SFSectionModel siteIconSectionWithIdentifier:title:actions:banner:identifiers:configurationProvider:]
  +[_SFSectionModel siteCardSectionWithIdentifier:title:actions:banner:identifiers:configurationProvider:]

  // instance methods
  -[_SFSectionModel itemIdentifiers]
  -[_SFSectionModel actions]
  -[_SFSectionModel banner]
  -[_SFSectionModel itemType]
  -[_SFSectionModel contextMenuProvider]
  -[_SFSectionModel contextMenuCommitHandler]
  -[_SFSectionModel contentBanner]
  -[_SFSectionModel siteIconConfigurationProvider]
  -[_SFSectionModel siteCardConfigurationProvider]
  -[_SFSectionModel numberOfRowsVisibleWhenCollapsed]
  -[_SFSectionModel .cxx_destruct]
  -[_SFSectionModel identifier]
  -[_SFSectionModel title]
  -[_SFSectionModel setNumberOfRowsVisibleWhenCollapsed:]
  -[_SFSectionModel initWithIdentifier:title:actions:banner:itemType:itemIdentifiers:configurationProvider:]
  -[_SFSectionModel setContextMenuProvider:]
  -[_SFSectionModel setContextMenuCommitHandler:]


_SFDialogController : NSObject /usr/lib/libc++.1.dylib <_SFDialogViewDelegate>
 @property  <_SFDialogControllerDelegate> *delegate
 @property  <_SFDialogViewPresenting> *dialogPresenter
 @property  <_SFDialogViewControllerPresenting> *viewControllerPresenter
 @property  _SFDialog *presentedDialog
 @property  _SFDialog<_SFAuthenticatorDialog> *presentedAuthenticatorDialog
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFDialogController applicationDidEnterBackground]

  // instance methods
  -[_SFDialogController _initWithDialogManager:]
  -[_SFDialogController _dismissCurrentDialogWithResponse:]
  -[_SFDialogController presentDialog:]
  -[_SFDialogController setDialogPresenter:]
  -[_SFDialogController presentNextDialogIfNeeded]
  -[_SFDialogController init]
  -[_SFDialogController presentedAuthenticatorDialog]
  -[_SFDialogController owningWebViewWillNavigate]
  -[_SFDialogController dialogPresenter]
  -[_SFDialogController presentedDialog]
  -[_SFDialogController .cxx_destruct]
  -[_SFDialogController owningWebViewWillBecomeActive]
  -[_SFDialogController _tabID]
  -[_SFDialogController owningWebViewDidCommitNavigationWithURL:]
  -[_SFDialogController viewControllerPresenter]
  -[_SFDialogController owningTabWillClose]
  -[_SFDialogController presentDialog:animateAlongsidePresentation:dismissal:]
  -[_SFDialogController _presentDialog:forWebProcessID:withAdditionalAnimations:]
  -[_SFDialogController owningWebViewDidChangeProcessID]
  -[_SFDialogController _dismissDialogWithAdditionalAnimations:]
  -[_SFDialogController _isPresentingDialog]
  -[_SFDialogController setDelegate:]
  -[_SFDialogController cancelPresentedDialogIfNeeded]
  -[_SFDialogController _currentWebProcessID]
  -[_SFDialogController dialogView:didSelectActionAtIndex:withInputText:passwordText:]
  -[_SFDialogController delegate]
  -[_SFDialogController setViewControllerPresenter:]
  -[_SFDialogController _currentSlot]


_SFSecIdentityPreferencesController : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFSecIdentityPreferencesController sharedPersistentSecIdentityPreferencesController]
  +[_SFSecIdentityPreferencesController ephemeralSecIdentityPreferencesController]

  // instance methods
  -[_SFSecIdentityPreferencesController saveShouldUseOnlyAvailableIdentityWithoutPrompting:forDomainAndPort:]
  -[_SFSecIdentityPreferencesController shouldUseOnlyAvailableIdentityWithoutPromptingForDomainAndPort:]
  -[_SFSecIdentityPreferencesController .cxx_destruct]
  -[_SFSecIdentityPreferencesController _initUsingEphemeralStorage:]


_SFPasswordPickerTableConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *prompt
 @property  NSArray *serviceNameHintStrings
 @property  NSArray *domainHintStrings
 @property  unsigned long minimumNumberOfCredentialsToShowLikelyMatchesSection
 @property  BOOL forUserNamesOnly
 @property  BOOL shouldShowIcons

  // instance methods
  -[_SFPasswordPickerTableConfiguration setPrompt:]
  -[_SFPasswordPickerTableConfiguration prompt]
  -[_SFPasswordPickerTableConfiguration .cxx_destruct]
  -[_SFPasswordPickerTableConfiguration serviceNameHintStrings]
  -[_SFPasswordPickerTableConfiguration setServiceNameHintStrings:]
  -[_SFPasswordPickerTableConfiguration domainHintStrings]
  -[_SFPasswordPickerTableConfiguration setDomainHintStrings:]
  -[_SFPasswordPickerTableConfiguration minimumNumberOfCredentialsToShowLikelyMatchesSection]
  -[_SFPasswordPickerTableConfiguration setMinimumNumberOfCredentialsToShowLikelyMatchesSection:]
  -[_SFPasswordPickerTableConfiguration forUserNamesOnly]
  -[_SFPasswordPickerTableConfiguration setForUserNamesOnly:]
  -[_SFPasswordPickerTableConfiguration shouldShowIcons]
  -[_SFPasswordPickerTableConfiguration setShouldShowIcons:]


_SFPasswordPickerTableViewController : _SFPasswordTableViewController
 @property  <_SFPasswordPickerTableViewControllerDelegate> *delegate
 @property  _SFPasswordPickerTableConfiguration *configuration

  // instance methods
  -[_SFPasswordPickerTableViewController viewDidLoad]
  -[_SFPasswordPickerTableViewController tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:]
  -[_SFPasswordPickerTableViewController tableView:canPerformAction:forRowAtIndexPath:withSender:]
  -[_SFPasswordPickerTableViewController tableView:numberOfRowsInSection:]
  -[_SFPasswordPickerTableViewController tableView:didSelectRowAtIndexPath:]
  -[_SFPasswordPickerTableViewController dealloc]
  -[_SFPasswordPickerTableViewController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[_SFPasswordPickerTableViewController .cxx_destruct]
  -[_SFPasswordPickerTableViewController _updateMatchingPasswords]
  -[_SFPasswordPickerTableViewController handleContextMenuDeleteForIndexPath:]
  -[_SFPasswordPickerTableViewController searchPatternDidUpdate]
  -[_SFPasswordPickerTableViewController tableView:titleForHeaderInSection:]
  -[_SFPasswordPickerTableViewController _cancel]
  -[_SFPasswordPickerTableViewController tableView:cellForRowAtIndexPath:]
  -[_SFPasswordPickerTableViewController numberOfSectionsInTableView:]
  -[_SFPasswordPickerTableViewController tableView:shouldShowMenuForRowAtIndexPath:]
  -[_SFPasswordPickerTableViewController tableView:estimatedHeightForRowAtIndexPath:]
  -[_SFPasswordPickerTableViewController configuration]
  -[_SFPasswordPickerTableViewController _reloadSavedPasswords]
  -[_SFPasswordPickerTableViewController _deletePasswordAtIndexPath:]
  -[_SFPasswordPickerTableViewController _passwordForIndexPath:]
  -[_SFPasswordPickerTableViewController initWithConfiguration:]
  -[_SFPasswordPickerTableViewController viewWillAppear:]
  -[_SFPasswordPickerTableViewController setDelegate:]
  -[_SFPasswordPickerTableViewController viewDidDisappear:]
  -[_SFPasswordPickerTableViewController viewWillDisappear:]
  -[_SFPasswordPickerTableViewController delegate]
  -[_SFPasswordPickerTableViewController _passwordStoreDidChange]
  -[_SFPasswordPickerTableViewController _updateSections]


_SFPerSitePreferencesUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFPerSitePreferencesUtilities isBinaryPreferenceValueOn:preference:preferenceManager:]
  +[_SFPerSitePreferencesUtilities preferenceValueForBoolValue:preference:preferenceManager:]
  +[_SFPerSitePreferencesUtilities preferenceValueForPSSpecifierValue:specifier:preference:preferenceManager:]
  +[_SFPerSitePreferencesUtilities specifierValueForSpecifier:preferenceValue:preference:preferenceManager:]


_SFTouchIconCache : WBSTouchIconCache /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // class methods
  +[_SFTouchIconCache defaultBackgroundColor]
  +[_SFTouchIconCache _generateDefaultFavoritesIcon]
  +[_SFTouchIconCache _monogramConfiguration]

  // instance methods
  -[_SFTouchIconCache _operationWithRequest:completionHandler:]
  -[_SFTouchIconCache canHandleRequest:]


_SFSaveToFilesOperation : NSObject /usr/lib/libc++.1.dylib <UIDocumentPickerDelegate, _SFDownloadPlaceholderImporter>
 @property  <_SFSaveToFilesOperationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFSaveToFilesOperation dealloc]
  -[_SFSaveToFilesOperation .cxx_destruct]
  -[_SFSaveToFilesOperation documentPickerWasCancelled:]
  -[_SFSaveToFilesOperation documentPicker:didPickDocumentsAtURLs:]
  -[_SFSaveToFilesOperation _finishWithURL:]
  -[_SFSaveToFilesOperation _copyFileData:]
  -[_SFSaveToFilesOperation setDelegate:]
  -[_SFSaveToFilesOperation _showDocumentPickerForFileURL:sourceURL:willStartDownload:]
  -[_SFSaveToFilesOperation _temporaryFileWithName:]
  -[_SFSaveToFilesOperation importPlaceholderForDownload:fromURL:completionHandler:]
  -[_SFSaveToFilesOperation initWithActivityItemProviderCollection:]
  -[_SFSaveToFilesOperation delegate]
  -[_SFSaveToFilesOperation start]


_SFNavigationBarTheme : _SFBarTheme
 @property  long long platterOverrideUserInterfaceStyle
 @property  long long platterTextFieldOverrideUserInterfaceStyle
 @property  long long platterKeyboardOverrideAppearance
 @property  BOOL backdropIsExtreme
 @property  BOOL backdropIsRed
 @property  BOOL backdropIsGreen
 @property  UIColor *textColor
 @property  UIColor *secureTextColor
 @property  UIColor *warningTextColor
 @property  UIColor *annotationTextColor
 @property  UIColor *progressBarTintColor
 @property  BOOL platterBackdropIsDark
 @property  UIColor *platterTextColor
 @property  UIColor *platterSecureTextColor
 @property  UIColor *platterWarningTextColor
 @property  UIColor *platterAnnotationTextColor
 @property  UIColor *platterPlaceholderTextColor
 @property  UIColor *platterSelectionColor
 @property  UIColor *platterProgressBarTintColor

  // class methods
  +[_SFNavigationBarTheme textColorForBackgroundColor:]

  // instance methods
  -[_SFNavigationBarTheme URLAccessoryButtonTintColorForInputMode:]
  -[_SFNavigationBarTheme platterWarningTextColorForPlatterAlpha:]
  -[_SFNavigationBarTheme secureTextColor]
  -[_SFNavigationBarTheme platterBackdropIsDark]
  -[_SFNavigationBarTheme backdropIsRed]
  -[_SFNavigationBarTheme warningTextColor]
  -[_SFNavigationBarTheme .cxx_destruct]
  -[_SFNavigationBarTheme textColor]
  -[_SFNavigationBarTheme backdropIsGreen]
  -[_SFNavigationBarTheme platterSelectionColor]
  -[_SFNavigationBarTheme annotationTextColorForPlatterAlpha:]
  -[_SFNavigationBarTheme platterSecureTextColorForPlatterAlpha:]
  -[_SFNavigationBarTheme progressBarTintColor]
  -[_SFNavigationBarTheme platterTextColorForPlatterAlpha:]
  -[_SFNavigationBarTheme platterProgressBarTintColor]
  -[_SFNavigationBarTheme annotationTextColor]
  -[_SFNavigationBarTheme _colorForPlatterTextColor:regularColor:withPlatterAlpha:]
  -[_SFNavigationBarTheme backdropIsExtreme]
  -[_SFNavigationBarTheme platterAnnotationTextColor]
  -[_SFNavigationBarTheme platterKeyboardOverrideAppearance]
  -[_SFNavigationBarTheme platterOverrideUserInterfaceStyle]
  -[_SFNavigationBarTheme platterSecureTextColor]
  -[_SFNavigationBarTheme platterTextFieldOverrideUserInterfaceStyle]
  -[_SFNavigationBarTheme platterTextColor]
  -[_SFNavigationBarTheme platterPlaceholderTextColor]
  -[_SFNavigationBarTheme initWithBarTintStyle:preferredBarTintColor:controlsTintColor:]
  -[_SFNavigationBarTheme platterWarningTextColor]


SFDownloadFile : NSObject /usr/lib/libc++.1.dylib <NSFilePresenter>
 @property  <SFDownloadFileDelegate> *delegate
 @property  NSURL *URL
 @property  NSData *bookmarkData
 @property  NSURL *presentedItemURL
 @property  NSOperationQueue *presentedItemOperationQueue
 @property  NSURL *primaryPresentedItemURL
 @property  NSSet *observedPresentedItemUbiquityAttributes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFDownloadFile _suspend]
  -[SFDownloadFile accommodatePresentedItemDeletionWithCompletionHandler:]
  -[SFDownloadFile _resume]
  -[SFDownloadFile presentedItemURL]
  -[SFDownloadFile presentedItemOperationQueue]
  -[SFDownloadFile initWithURL:]
  -[SFDownloadFile dealloc]
  -[SFDownloadFile .cxx_destruct]
  -[SFDownloadFile initWithURL:bookmarkData:]
  -[SFDownloadFile initWithBookmarkData:]
  -[SFDownloadFile presentedItemDidMoveToURL:]
  -[SFDownloadFile presentedItemDidChange]
  -[SFDownloadFile setDelegate:]
  -[SFDownloadFile URL]
  -[SFDownloadFile invalidate]
  -[SFDownloadFile delegate]
  -[SFDownloadFile bookmarkData]


SFTelephonyURLRequest : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *successNotificationName
 @property  NSString *failureNotificationName
 @property  @? completionHandler

  // instance methods
  -[SFTelephonyURLRequest .cxx_destruct]
  -[SFTelephonyURLRequest successNotificationName]
  -[SFTelephonyURLRequest setSuccessNotificationName:]
  -[SFTelephonyURLRequest failureNotificationName]
  -[SFTelephonyURLRequest setFailureNotificationName:]
  -[SFTelephonyURLRequest initWithCompletionHandler:]
  -[SFTelephonyURLRequest completionHandler]
  -[SFTelephonyURLRequest setCompletionHandler:]


SFTelephonyURLHandler : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableSet *pendingRequests

  // class methods
  +[SFTelephonyURLHandler sharedInstance]

  // instance methods
  -[SFTelephonyURLHandler setPendingRequests:]
  -[SFTelephonyURLHandler init]
  -[SFTelephonyURLHandler pendingRequests]
  -[SFTelephonyURLHandler .cxx_destruct]
  -[SFTelephonyURLHandler addObserverForRequest:]
  -[SFTelephonyURLHandler removeObserverForRequest:]
  -[SFTelephonyURLHandler openURLForDialRequest:withScene:completionHandler:]


SFInteractiveDismissController : UIPercentDrivenInteractiveTransition /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UIViewControllerTransitioningDelegate, UIViewControllerAnimatedTransitioning>
 @property  unsigned long sampleCount
 @property  double totalDistance
 @property  double skipTimeStamp
 @property  double previousTimeStamp
 @property  double previousDisplacement
 @property  double previousVelocity
 @property  double previousAcceleration
 @property  double averageVelocity
 @property  double averageAcceleration
 @property  UIScreenEdgePanGestureRecognizer *edgeSwipeGestureRecognizer
 @property  UIViewController *viewControllerToBeDismissed
 @property  UIView *edgeSwipeView
 @property  <SFInteractiveDismissControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFInteractiveDismissController previousTimeStamp]
  -[SFInteractiveDismissController transitionDuration:]
  -[SFInteractiveDismissController interactionControllerForDismissal:]
  -[SFInteractiveDismissController previousVelocity]
  -[SFInteractiveDismissController previousAcceleration]
  -[SFInteractiveDismissController sampleCount]
  -[SFInteractiveDismissController animationControllerForDismissedController:]
  -[SFInteractiveDismissController _translationCoefficient]
  -[SFInteractiveDismissController skipTimeStamp]
  -[SFInteractiveDismissController setPreviousDisplacement:]
  -[SFInteractiveDismissController totalDistance]
  -[SFInteractiveDismissController setAverageVelocity:]
  -[SFInteractiveDismissController _updateStatistics:firstSample:finalSample:]
  -[SFInteractiveDismissController setTotalDistance:]
  -[SFInteractiveDismissController animationControllerForPresentedController:presentingController:sourceController:]
  -[SFInteractiveDismissController init]
  -[SFInteractiveDismissController averageAcceleration]
  -[SFInteractiveDismissController setSkipTimeStamp:]
  -[SFInteractiveDismissController previousDisplacement]
  -[SFInteractiveDismissController setPreviousVelocity:]
  -[SFInteractiveDismissController swiped:]
  -[SFInteractiveDismissController averageVelocity]
  -[SFInteractiveDismissController setSampleCount:]
  -[SFInteractiveDismissController edgeSwipeView]
  -[SFInteractiveDismissController setPreviousTimeStamp:]
  -[SFInteractiveDismissController setPreviousAcceleration:]
  -[SFInteractiveDismissController viewControllerToBeDismissed]
  -[SFInteractiveDismissController popGesture:withRemainingDuration:shouldPopWithVelocity:]
  -[SFInteractiveDismissController edgeSwipeGestureRecognizer]
  -[SFInteractiveDismissController setViewControllerToBeDismissed:]
  -[SFInteractiveDismissController .cxx_destruct]
  -[SFInteractiveDismissController _percentComplete:]
  -[SFInteractiveDismissController setEdgeSwipeView:]
  -[SFInteractiveDismissController animateTransition:]
  -[SFInteractiveDismissController cancelInteractiveTransition]
  -[SFInteractiveDismissController _animateDismissalCompleteTransition]
  -[SFInteractiveDismissController setAverageAcceleration:]
  -[SFInteractiveDismissController startInteractiveTransition:]
  -[SFInteractiveDismissController _dismissAnimateTransition:]
  -[SFInteractiveDismissController setDelegate:]
  -[SFInteractiveDismissController finishInteractiveTransition]
  -[SFInteractiveDismissController _animateDismissalCancelTransition]
  -[SFInteractiveDismissController translationForStatistics]
  -[SFInteractiveDismissController delegate]
  -[SFInteractiveDismissController _presentAnimateTransition:]
  -[SFInteractiveDismissController velocityForStatistics]


SFPasswordPickerViewController : UINavigationController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <_SFPasswordPickerTableViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFPasswordPickerViewController _preventsAppearanceProxyCustomization]

  // instance methods
  -[SFPasswordPickerViewController _appDidEnterBackground:]
  -[SFPasswordPickerViewController dealloc]
  -[SFPasswordPickerViewController .cxx_destruct]
  -[SFPasswordPickerViewController initWithPrompt:forUserNamesOnly:appNames:appID:matchedSites:urlString:minimumNumberOfCredentialsToShowLikelyMatchesSection:shouldShowIcons:shouldGetHintStrings:completionHandler:]
  -[SFPasswordPickerViewController _dismiss]
  -[SFPasswordPickerViewController passwordPickerTableViewControllerDidCancel:]
  -[SFPasswordPickerViewController passwordPickerTableViewController:didPickSavedPassword:]


_SFWebProcessPlugInAutoFillPageController : _SFWebProcessPlugInPageController <SFFormAutoFiller, SFInjectedJavaScriptWebProcessController>
 @property  _SFFormMetadataController *formMetadataController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFWebProcessPlugInAutoFillPageController removeAutomaticPasswordVisualTreatmentInFrame:passwordControlUniqueIDs:]
  -[_SFWebProcessPlugInAutoFillPageController initWithPlugIn:contextController:]
  -[_SFWebProcessPlugInAutoFillPageController runJavaScriptForActivity:withScript:object:invokeMethod:completionHandler:]
  -[_SFWebProcessPlugInAutoFillPageController webProcessPlugInBrowserContextController:didCommitLoadForFrame:]
  -[_SFWebProcessPlugInAutoFillPageController webProcessPlugInBrowserContextController:didSameDocumentNavigation:forFrame:]
  -[_SFWebProcessPlugInAutoFillPageController .cxx_destruct]
  -[_SFWebProcessPlugInAutoFillPageController automaticPasswordSheetDimissedInFrame:focusedPasswordControlUniqueID:]
  -[_SFWebProcessPlugInAutoFillPageController setFormMetadataController:]
  -[_SFWebProcessPlugInAutoFillPageController annotateForm:inFrame:withValues:]
  -[_SFWebProcessPlugInAutoFillPageController formMetadataController]
  -[_SFWebProcessPlugInAutoFillPageController focusFormForStreamlinedLogin:inFrame:]
  -[_SFWebProcessPlugInAutoFillPageController autoFillOneTimeCodeFieldsInFrame:withValue:]
  -[_SFWebProcessPlugInAutoFillPageController autoFillFormAsynchronouslyInFrame:withValues:setAutoFilled:selectFieldAfterFilling:]
  -[_SFWebProcessPlugInAutoFillPageController autoFillFormAsynchronouslyInFrame:withValues:setAutoFilled:focusFieldAfterFilling:fieldToFocus:]
  -[_SFWebProcessPlugInAutoFillPageController autoFillFormAsynchronouslyInFrame:withValues:setAutoFilled:focusFieldAfterFilling:fieldToFocus:submitForm:]
  -[_SFWebProcessPlugInAutoFillPageController collectURLsForPrefillingAtURL:]
  -[_SFWebProcessPlugInAutoFillPageController collectFormMetadataForPrefillingAtURL:]
  -[_SFWebProcessPlugInAutoFillPageController collectMetadataForTextField:inFrame:atURL:completionHandler:]
  -[_SFWebProcessPlugInAutoFillPageController clearAutoFillMetadata]
  -[_SFWebProcessPlugInAutoFillPageController substitutePasswordElementsWithAutomaticPasswordElementsInFrame:formID:focusedPasswordControlUniqueID:passwordControlUniqueIDs:automaticPassword:blurAfterSubstitution:completionHandler:]
  -[_SFWebProcessPlugInAutoFillPageController removeAutomaticPasswordElementsInFrame:focusedPasswordControlUniqueID:passwordControlUniqueIDs:]
  -[_SFWebProcessPlugInAutoFillPageController autoFillFormSynchronouslyInFrame:withValues:]
  -[_SFWebProcessPlugInAutoFillPageController webProcessPlugInBrowserContextController:didStartProvisionalLoadForFrame:]
  -[_SFWebProcessPlugInAutoFillPageController fillTextField:inFrame:withGeneratedPassword:]
  -[_SFWebProcessPlugInAutoFillPageController willDestroyBrowserContextController:]
  -[_SFWebProcessPlugInAutoFillPageController setFormControls:areAutoFilled:andClearField:inFrame:]
  -[_SFWebProcessPlugInAutoFillPageController autoFillForm:inFrame:withGeneratedPassword:]
  -[_SFWebProcessPlugInAutoFillPageController webProcessPlugInBrowserContextController:didRemoveFrameFromHierarchy:]


_SFDownloadIconCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_SFDownloadIconCache init]
  -[_SFDownloadIconCache .cxx_destruct]
  -[_SFDownloadIconCache iconForSource:]
  -[_SFDownloadIconCache _generateThumbnailForURL:completionHandler:]
  -[_SFDownloadIconCache _lookupGenericIconForType:]
  -[_SFDownloadIconCache removeObserver:]
  -[_SFDownloadIconCache regenerateIconForSource:]
  -[_SFDownloadIconCache _genericIconForUTI:]
  -[_SFDownloadIconCache addObserver:]
  -[_SFDownloadIconCache _startThumbnailRequestForSource:reportGenericIcons:]
  -[_SFDownloadIconCache _didGenerateThumbnail:forSource:]


SFExternalPasswordCredentialRemoteViewController : SFPasswordRemoteViewController <SFExternalPasswordCredentialRemoteViewControllerProtocol>
 @property  <SFExternalPasswordCredentialRemoteViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFExternalPasswordCredentialRemoteViewController exportedInterface]
  +[SFExternalPasswordCredentialRemoteViewController passwordServiceViewControllerName]
  +[SFExternalPasswordCredentialRemoteViewController serviceViewControllerInterface]

  // instance methods
  -[SFExternalPasswordCredentialRemoteViewController presentExternalPasswordCredentialRemoteViewController]
  -[SFExternalPasswordCredentialRemoteViewController _canShowWhileLocked]


_SFDownloadManager : NSObject /usr/lib/libc++.1.dylib <_SFDownloadDelegate>
 @property  NSURL *downloadsRootURL
 @property  <_SFDownloadDelegate> *extraDownloadDelegate
 @property  NSArray *downloads
 @property  _SFDownloadIconCache *iconCache
 @property  double totalProgress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFDownloadManager defaultDownloadsHistoryURL]
  +[_SFDownloadManager sharedManager]
  +[_SFDownloadManager downloadRepresentationsAtURL:]

  // instance methods
  -[_SFDownloadManager downloads]
  -[_SFDownloadManager _busyDownloads]
  -[_SFDownloadManager _applicationDidEnterBackground:]
  -[_SFDownloadManager removeDownloadsStartedAfterDate:]
  -[_SFDownloadManager dealloc]
  -[_SFDownloadManager _loadDownloadHistoryAsynchronous:]
  -[_SFDownloadManager reloadDownloadsSynchronously]
  -[_SFDownloadManager .cxx_destruct]
  -[_SFDownloadManager setExtraDownloadDelegate:]
  -[_SFDownloadManager _startUpdateTotalProgressTimerIfNeeded]
  -[_SFDownloadManager shouldExcludeDownloadFromList:]
  -[_SFDownloadManager downloadWillBeDeleted:]
  -[_SFDownloadManager downloadDidReceiveResponse:]
  -[_SFDownloadManager deferAddingDownloadWhenStarted:]
  -[_SFDownloadManager savePendingChangesBeforeTermination]
  -[_SFDownloadManager _dataForPersistingToHistory]
  -[_SFDownloadManager removeDownloads:]
  -[_SFDownloadManager _addDownload:]
  -[_SFDownloadManager downloadDidFail:]
  -[_SFDownloadManager shouldExcludeDownloadFromFileSystem:]
  -[_SFDownloadManager downloadContentsDidChange:]
  -[_SFDownloadManager downloadShouldImportPlaceholderToDownloadsFolder:]
  -[_SFDownloadManager downloadDidFinish:]
  -[_SFDownloadManager extraDownloadDelegate]
  -[_SFDownloadManager _canExpireDownloadOnCompletion:]
  -[_SFDownloadManager _removeDeletedDownloads]
  -[_SFDownloadManager _updateTotalProgress:]
  -[_SFDownloadManager _loadDownloadHistory]
  -[_SFDownloadManager observeValueForKeyPath:ofObject:change:context:]
  -[_SFDownloadManager _containerDirectoryForDownload:]
  -[_SFDownloadManager downloadShouldContinueAfterReceivingResponse:decisionHandler:]
  -[_SFDownloadManager totalProgress]
  -[_SFDownloadManager _noteDownloadsChanged]
  -[_SFDownloadManager createDirectoryForDownload:completionHandler:]
  -[_SFDownloadManager downloadDidStart:]
  -[_SFDownloadManager downloadDidImportFileToDownloadsFolder:]
  -[_SFDownloadManager _removeOldDownloadsAndUpdateTimerIfNeeded]
  -[_SFDownloadManager iconCache]
  -[_SFDownloadManager downloadDidResume:]
  -[_SFDownloadManager initAsReadonly:]
  -[_SFDownloadManager _calculateTotalProgress]
  -[_SFDownloadManager getDownloadsWithCompletionHandler:]
  -[_SFDownloadManager downloadsRootURL]


_SFSharingLinkExtractor : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_SFSharingLinkExtractor .cxx_destruct]
  -[_SFSharingLinkExtractor fetchSharingLinkWithCompletionHandler:]
  -[_SFSharingLinkExtractor initWithWebView:]


_SFSafariDataSharingController : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFSafariDataSharingController sharedController]

  // instance methods
  -[_SFSafariDataSharingController init]
  -[_SFSafariDataSharingController .cxx_destruct]
  -[_SFSafariDataSharingController _loadAppBundlesWithSeparateDataIfNeeded]
  -[_SFSafariDataSharingController clearAllWebsitesData]
  -[_SFSafariDataSharingController systemDataContainerURLWithAppBundleID:]
  -[_SFSafariDataSharingController checkInAppBundleIDIfNeeded:]


_SFAddBookmarkActivity : _SFActivity <_SFSingleBookmarkNavigationControllerDelegate>
 @property  _SFSingleBookmarkNavigationController *bookmarkNavigationController

  // instance methods
  -[_SFAddBookmarkActivity activityType]
  -[_SFAddBookmarkActivity activityTitle]
  -[_SFAddBookmarkActivity canPerformWithActivityItems:]
  -[_SFAddBookmarkActivity _systemImageName]
  -[_SFAddBookmarkActivity .cxx_destruct]
  -[_SFAddBookmarkActivity activityViewController]
  -[_SFAddBookmarkActivity bookmarkNavigationController]
  -[_SFAddBookmarkActivity addBookmarkNavController:didFinishWithResult:bookmark:]
  -[_SFAddBookmarkActivity addBookmarkNavControllerCanSaveBookmarkChanges:]
  -[_SFAddBookmarkActivity _embeddedActivityViewController]


_SFDownloadDispatcher : NSObject /usr/lib/libc++.1.dylib <_WKDownloadDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFDownloadDispatcher sharedDownloadDispatcher]

  // instance methods
  -[_SFDownloadDispatcher downloadFromWKDownload:userInitiatedAction:]
  -[_SFDownloadDispatcher init]
  -[_SFDownloadDispatcher _download:didFailWithError:]
  -[_SFDownloadDispatcher _downloadDidStart:]
  -[_SFDownloadDispatcher .cxx_destruct]
  -[_SFDownloadDispatcher _download:decideDestinationWithSuggestedFilename:completionHandler:]
  -[_SFDownloadDispatcher _downloadDidCancel:]
  -[_SFDownloadDispatcher prepareForDownloadFromWebView:request:MIMEType:uti:userInitiatedAction:]
  -[_SFDownloadDispatcher registerResumedDownload:]
  -[_SFDownloadDispatcher _downloadDidFinish:]
  -[_SFDownloadDispatcher _download:didReceiveData:]
  -[_SFDownloadDispatcher startDownloadFromWebView:URL:]
  -[_SFDownloadDispatcher _downloadProcessDidCrash:]
  -[_SFDownloadDispatcher _download:didReceiveResponse:]
  -[_SFDownloadDispatcher startDownloadForCurrentURLFromWebView:]
  -[_SFDownloadDispatcher setPendingDownload:forWebView:]


_SFRequestDesktopSiteQuirksManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFRequestDesktopSiteQuirksManager sharedManager]

  // instance methods
  -[_SFRequestDesktopSiteQuirksManager init]
  -[_SFRequestDesktopSiteQuirksManager quirksValueForDomain:completionHandler:]
  -[_SFRequestDesktopSiteQuirksManager .cxx_destruct]
  -[_SFRequestDesktopSiteQuirksManager getAllQuirkValuesWithCompletionHandler:]


_SFQuickLookDocumentWriter : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *filePathAccessedOnDispatchQueue
 @property  _SFQuickLookDocument *quickLookDocument
 @property  BOOL hasFinishedWriting

  // instance methods
  -[_SFQuickLookDocumentWriter .cxx_destruct]
  -[_SFQuickLookDocumentWriter setFilePathAccessedOnDispatchQueue:]
  -[_SFQuickLookDocumentWriter filePathAccessedOnDispatchQueue]
  -[_SFQuickLookDocumentWriter hasFinishedWriting]
  -[_SFQuickLookDocumentWriter initWithFileName:uti:]
  -[_SFQuickLookDocumentWriter writeDataAndClose:completionHandler:]
  -[_SFQuickLookDocumentWriter quickLookDocument]


_SFNavigationResult : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL appliesOneTimeUserInitiatedActionPolicy
 @property  LSApplicationProxy *externalApplication
 @property  long long externalApplicationCategory
 @property  BOOL isRedirectToAppleServices
 @property  long long type
 @property  NSURL *URL
 @property  WBSAppLink *appLink
 @property  BOOL loadWasUserDriven

  // class methods
  +[_SFNavigationResult resultWithAppLink:]
  +[_SFNavigationResult resultOfLoadingRequest:isMainFrame:disallowRedirectToExternalApps:preferredApplicationBundleIdentifier:redirectDecisionHandler:]
  +[_SFNavigationResult resultOfType:withURL:]
  +[_SFNavigationResult resultWithRedirectToExternalURL:preferredApplicationBundleIdentifier:]

  // instance methods
  -[_SFNavigationResult appLink]
  -[_SFNavigationResult appliesOneTimeUserInitiatedActionPolicy]
  -[_SFNavigationResult externalApplicationCategory]
  -[_SFNavigationResult shouldPromptWithPolicy:telephonyNavigationPolicy:userAction:inBackground:]
  -[_SFNavigationResult .cxx_destruct]
  -[_SFNavigationResult isRedirectToAppleServices]
  -[_SFNavigationResult _initWithType:URL:externalApplication:appLink:]
  -[_SFNavigationResult loadWasUserDriven]
  -[_SFNavigationResult setLoadWasUserDriven:]
  -[_SFNavigationResult externalApplication]
  -[_SFNavigationResult type]
  -[_SFNavigationResult URL]


_SFSearchEngineController : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *engines
 @property  NSArray *enginesAvailableForUnifiedFieldSearching
 @property  NSArray *searchEngineNames
 @property  NSString *defaultSearchEngineName
 @property  _SFSearchEngineInfo *defaultSearchEngineIfPopulated
 @property  NSString *countryCode
 @property  NSDictionary *templateParameterValues
 @property  NSDictionary *carrierTemplateParameterValues

  // class methods
  +[_SFSearchEngineController sharedInstance]
  +[_SFSearchEngineController _initializeSharedInstance]
  +[_SFSearchEngineController loadSystemLanguageProperties]
  +[_SFSearchEngineController sharedInstanceIfAvailable]
  +[_SFSearchEngineController _deviceRegionCodeIsChina]

  // instance methods
  -[_SFSearchEngineController engines]
  -[_SFSearchEngineController _setDefaultSearchEngine:]
  -[_SFSearchEngineController _setEngines:defaultSearchEngineIndex:]
  -[_SFSearchEngineController init]
  -[_SFSearchEngineController _populateSearchEngines]
  -[_SFSearchEngineController .cxx_destruct]
  -[_SFSearchEngineController enginesAvailableForUnifiedFieldSearching]
  -[_SFSearchEngineController _postDefaultSearchEngineDidChange]
  -[_SFSearchEngineController setDefaultSearchEngine:]
  -[_SFSearchEngineController countryCode]
  -[_SFSearchEngineController templateParameterValues]
  -[_SFSearchEngineController _getEngines:defaultSearchEngineIndex:]
  -[_SFSearchEngineController engineInfoFor:]
  -[_SFSearchEngineController defaultSearchEngine]
  -[_SFSearchEngineController reloadSearchEngines]
  -[_SFSearchEngineController _loadSystemPropertiesForSearchEngine:]
  -[_SFSearchEngineController searchEngineNames]
  -[_SFSearchEngineController defaultSearchEngineIfPopulated]
  -[_SFSearchEngineController carrierTemplateParameterValues]
  -[_SFSearchEngineController _addSpecialSearchEnginesToArray:]
  -[_SFSearchEngineController engineInfoForScriptName:]
  -[_SFSearchEngineController _existingEngineInfoFor:]
  -[_SFSearchEngineController safeSearchRequestForSearchRequest:]
  -[_SFSearchEngineController _addAllWebSearchEngineInfosToArray:andAddUserVisibleWebSearchEngineInfosToArray:]
  -[_SFSearchEngineController defaultSearchEngineName]


SFNavigationBarMetrics : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SFNavigationBarMetrics init]
  -[SFNavigationBarMetrics .cxx_destruct]


_SFPopoverPresentationDelegate : NSObject /usr/lib/libc++.1.dylib <UIPopoverPresentationControllerDelegate>
 @property  BOOL popoverUsesAdaptivePresentationInCompact
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFPopoverPresentationDelegate attachDelegateToPopoverPresentationController:anchoredToURLOutlineInNavigationBar:usesAdaptivePresentationInCompact:]
  +[_SFPopoverPresentationDelegate attachDelegateToPopoverPresentationController:anchoredToReloadButtonInNavigationBar:]
  +[_SFPopoverPresentationDelegate attachDelegateToPopoverPresentationController:anchoredToURLOutlineInNavigationBar:]

  // instance methods
  -[_SFPopoverPresentationDelegate adaptivePresentationStyleForPresentationController:traitCollection:]
  -[_SFPopoverPresentationDelegate presentationController:viewControllerForAdaptivePresentationStyle:]
  -[_SFPopoverPresentationDelegate popoverPresentationController:willRepositionPopoverToRect:inView:]
  -[_SFPopoverPresentationDelegate .cxx_destruct]
  -[_SFPopoverPresentationDelegate setPopoverUsesAdaptivePresentationInCompact:]
  -[_SFPopoverPresentationDelegate updatePopoverPosition]
  -[_SFPopoverPresentationDelegate popoverUsesAdaptivePresentationInCompact]
  -[_SFPopoverPresentationDelegate initWithSourceInfo:]
  -[_SFPopoverPresentationDelegate attachToPopoverPresentationController:]
  -[_SFPopoverPresentationDelegate popoverPresentationControllerDidDismissPopover:]


_SFMicrodataExtractor : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFMicrodataExtractor fetchDataWithJavaScriptController:completion:]


SFSafariViewControllerConfiguration : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  long long _redirectNotificationBehavior
 @property  BOOL entersReaderIfAvailable
 @property  BOOL barCollapsingEnabled

  // class methods
  +[SFSafariViewControllerConfiguration supportsSecureCoding]

  // instance methods
  -[SFSafariViewControllerConfiguration copyWithZone:]
  -[SFSafariViewControllerConfiguration entersReaderIfAvailable]
  -[SFSafariViewControllerConfiguration init]
  -[SFSafariViewControllerConfiguration setBarCollapsingEnabled:]
  -[SFSafariViewControllerConfiguration _setPerformingAccountSecurityUpgrade:]
  -[SFSafariViewControllerConfiguration encodeWithCoder:]
  -[SFSafariViewControllerConfiguration _isPerformingAccountSecurityUpgrade]
  -[SFSafariViewControllerConfiguration set_redirectNotificationBehavior:]
  -[SFSafariViewControllerConfiguration barCollapsingEnabled]
  -[SFSafariViewControllerConfiguration _redirectNotificationBehavior]
  -[SFSafariViewControllerConfiguration _isEphemeral]
  -[SFSafariViewControllerConfiguration initWithCoder:]
  -[SFSafariViewControllerConfiguration setEntersReaderIfAvailable:]
  -[SFSafariViewControllerConfiguration _setEphemeral:]


_SFClipLink : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *url
 @property  NSString *bundleIdentifier
 @property  NSString *clipName
 @property  NSString *appName
 @property  NSString *actionTitle
 @property  NSString *actionCaption
 @property  UIImage *icon

  // class methods
  +[_SFClipLink iconHeight]
  +[_SFClipLink localizedUppercaseStringForAction:]
  +[_SFClipLink localizedCaptionForClipNamed:action:]

  // instance methods
  -[_SFClipLink actionCaption]
  -[_SFClipLink url]
  -[_SFClipLink getClipAttributesWithCompletionHandler:]
  -[_SFClipLink setAppName:]
  -[_SFClipLink .cxx_destruct]
  -[_SFClipLink icon]
  -[_SFClipLink setActionTitle:]
  -[_SFClipLink setUrl:]
  -[_SFClipLink setIcon:]
  -[_SFClipLink setBundleIdentifier:]
  -[_SFClipLink clipName]
  -[_SFClipLink actionTitle]
  -[_SFClipLink setClipName:]
  -[_SFClipLink setActionCaption:]
  -[_SFClipLink bundleIdentifier]
  -[_SFClipLink initWithURL:bundleIdentifier:actionTitle:]
  -[_SFClipLink appName]


_SFStartPageViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI <SFStartPageCollectionDataSource, SFStartPageCollectionDelegate, UINavigationControllerDelegate, _SFStartPagePreviewProviding>
 @property  <_SFStartPageDataSource> *dataSource
 @property  BOOL showingRootView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFStartPageViewController viewDidLoad]
  -[_SFStartPageViewController setDataSource:]
  -[_SFStartPageViewController navigationController:willShowViewController:animated:]
  -[_SFStartPageViewController startPageCollectionViewController:didSelectSiteIconWithIdentifier:]
  -[_SFStartPageViewController startPageCollectionViewController:didSelectSiteCardWithIdentifier:]
  -[_SFStartPageViewController presentViewController:fromItemWithIdentifier:]
  -[_SFStartPageViewController .cxx_destruct]
  -[_SFStartPageViewController viewWillLayoutSubviews]
  -[_SFStartPageViewController initWithNibName:bundle:]
  -[_SFStartPageViewController dataSource]
  -[_SFStartPageViewController reloadDataAnimatingDifferences:]
  -[_SFStartPageViewController sectionsForStartPageCollectionViewController:]
  -[_SFStartPageViewController startPageCollectionViewController:toggleSectionExpanded:]
  -[_SFStartPageViewController startPageCollectionViewController:isSectionExpanded:]
  -[_SFStartPageViewController titleForStartPageCollectionViewController:]
  -[_SFStartPageViewController navigationController:didShowViewController:animated:]
  -[_SFStartPageViewController previewViewControllerForFolderWithIdentifier:]
  -[_SFStartPageViewController isShowingRootView]
  -[_SFStartPageViewController showDetailForFolderWithIdentifier:]


_SFBookmarkTextEntryTableViewController : UITableViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[_SFBookmarkTextEntryTableViewController tableView:numberOfRowsInSection:]
  -[_SFBookmarkTextEntryTableViewController dealloc]
  -[_SFBookmarkTextEntryTableViewController .cxx_destruct]
  -[_SFBookmarkTextEntryTableViewController tableView:cellForRowAtIndexPath:]
  -[_SFBookmarkTextEntryTableViewController initWithBookmarkInfoViewField:text:autocapitalizationType:autocorrectionType:delegate:]
  -[_SFBookmarkTextEntryTableViewController _returnWasPressedInTextField:]
  -[_SFBookmarkTextEntryTableViewController viewWillAppear:]
  -[_SFBookmarkTextEntryTableViewController viewWillDisappear:]
  -[_SFBookmarkTextEntryTableViewController loadView]


_SFWebView : WKWebView /System/Library/Frameworks/UIKit.framework/UIKit <_SFDialogViewPresenting, _SFKillWebContentProcessUIActivityDelegate>
 @property  NSString *evOrganizationName
 @property  {UIEdgeInsets=dddd} hitTestInsets
 @property  long long navigationGesturePolicy
 @property  <_SFWebViewDelegate> *delegate
 @property  UIView *clippingView
 @property  BOOL obscuringContents
 @property  BOOL hasBeenInWindow
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFWebView _close]
  -[_SFWebView becomeFirstResponder]
  -[_SFWebView didMoveToWindow]
  -[_SFWebView webui_canPromptForAccountSecurityRecommendation]
  -[_SFWebView dismissDialogView:withAdditionalAnimations:forDialogController:]
  -[_SFWebView isObscuringContents]
  -[_SFWebView setPlaceholderImage:offset:]
  -[_SFWebView _enclosingViewForExposedRectComputation]
  -[_SFWebView didEndFormControlInteraction]
  -[_SFWebView presentDialogView:withAdditionalAnimations:forDialogController:]
  -[_SFWebView navigationGesturePolicy]
  -[_SFWebView dealloc]
  -[_SFWebView .cxx_destruct]
  -[_SFWebView hitTest:withEvent:]
  -[_SFWebView _updateNavigationGesturesAllowed]
  -[_SFWebView safeAreaInsetsDidChange]
  -[_SFWebView hitTestInsets]
  -[_SFWebView setSuggestedFilenameForCurrentBackForwardListItem:]
  -[_SFWebView clippingView]
  -[_SFWebView evOrganizationName]
  -[_SFWebView initWithFrame:configuration:]
  -[_SFWebView safariKillWebContentProcessUIActivityKillWebProcess:]
  -[_SFWebView setPlaceholderImage:]
  -[_SFWebView webProcessIDForDialogController:]
  -[_SFWebView setNavigationGesturePolicy:]
  -[_SFWebView _setObscuredInsets:]
  -[_SFWebView hasBeenInWindow]
  -[_SFWebView setObscuringContents:]
  -[_SFWebView setDelegate:]
  -[_SFWebView didStartFormControlInteraction]
  -[_SFWebView setHitTestInsets:]
  -[_SFWebView delegate]
  -[_SFWebView setAllowsBackForwardNavigationGestures:]
  -[_SFWebView setClippingView:]
  -[_SFWebView layoutSubviews]


_SFDropSession : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_SFDropSession dropSession:loadObjectsUsingLocalObjectLoader:objectLoader:completionHandler:]
  +[_SFDropSession dropSession:containsItemsMatching:allowedTypeIdentifiers:allowedClasses:]


SFHighPriorityRecommendationData : NSObject /usr/lib/libc++.1.dylib
 @property  SFPasswordCellData *passwordCellData
 @property  WBSPasswordWarning *warning
 @property  unsigned long eligibleAccountModificationActions
 @property  NSArray *items
 @property  NSExtension *extension
 @property  BOOL isUpgradeToSignInWithAppleAvailable
 @property  <SFHighPriorityRecommendationDataDelegate> *delegate
 @property  BOOL didUpgradeToSignInWithApple
 @property  BOOL didUpgradeToStrongPassword

  // instance methods
  -[SFHighPriorityRecommendationData extension]
  -[SFHighPriorityRecommendationData isUpgradeToSignInWithAppleAvailable]
  -[SFHighPriorityRecommendationData setDidUpgradeToSignInWithApple:]
  -[SFHighPriorityRecommendationData items]
  -[SFHighPriorityRecommendationData .cxx_destruct]
  -[SFHighPriorityRecommendationData warning]
  -[SFHighPriorityRecommendationData setDelegate:]
  -[SFHighPriorityRecommendationData passwordCellData]
  -[SFHighPriorityRecommendationData _fetchEligibleAccountModificationActionsForSavedPassword:]
  -[SFHighPriorityRecommendationData eligibleAccountModificationActions]
  -[SFHighPriorityRecommendationData delegate]
  -[SFHighPriorityRecommendationData initWithPasswordCellData:warning:delegate:]
  -[SFHighPriorityRecommendationData cellForTableView:forCellType:]
  -[SFHighPriorityRecommendationData setDidUpgradeToStrongPassword:]
  -[SFHighPriorityRecommendationData didUpgradeToSignInWithApple]
  -[SFHighPriorityRecommendationData didUpgradeToStrongPassword]


SFContentBlockerState : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  BOOL enabled

  // class methods
  +[SFContentBlockerState supportsSecureCoding]

  // instance methods
  -[SFContentBlockerState initWithEnabledState:]
  -[SFContentBlockerState encodeWithCoder:]
  -[SFContentBlockerState isEnabled]
  -[SFContentBlockerState setEnabled:]
  -[SFContentBlockerState initWithCoder:]


_SFImageActivityItemProvider : _SFActivityItemProvider
  // instance methods
  -[_SFImageActivityItemProvider item]
  -[_SFImageActivityItemProvider activityViewController:dataTypeIdentifierForActivityType:]
  -[_SFImageActivityItemProvider .cxx_destruct]
  -[_SFImageActivityItemProvider _imageData]
  -[_SFImageActivityItemProvider initWithWebView:]


SFDialogTextView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  {UIEdgeInsets=dddd} contentInsets

  // instance methods
  -[SFDialogTextView contentInsets]
  -[SFDialogTextView setContentInsets:]
  -[SFDialogTextView _updateText]
  -[SFDialogTextView initWithFrame:]
  -[SFDialogTextView setMessage:]
  -[SFDialogTextView .cxx_destruct]
  -[SFDialogTextView setPreferredMaxLayoutWidth:]
  -[SFDialogTextView setTitle:]
  -[SFDialogTextView intrinsicContentSize]
  -[SFDialogTextView flashScrollIndicators]
  -[SFDialogTextView _updateFontStyling]
  -[SFDialogTextView _updateTextContainerInset]
  -[SFDialogTextView layoutSubviews]
  -[SFDialogTextView initWithCoder:]


SFDialogTextField : UITextField /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  unsigned long stackPosition

  // instance methods
  -[SFDialogTextField _placeholderColor]
  -[SFDialogTextField editingRectForBounds:]
  -[SFDialogTextField textRectForBounds:]
  -[SFDialogTextField initWithFrame:]
  -[SFDialogTextField setStackPosition:]
  -[SFDialogTextField stackPosition]
  -[SFDialogTextField layoutSubviews]


_SFQuickLookDocumentView : UIScrollView /System/Library/PrivateFrameworks/WebUI.framework/WebUI <UIDragInteractionDelegate, UIDragInteractionDelegate_Private>
 @property  <_SFQuickLookDocumentViewDelegate> *quickLookDocumentViewDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFQuickLookDocumentView initWithFrame:]
  -[_SFQuickLookDocumentView .cxx_destruct]
  -[_SFQuickLookDocumentView dragInteraction:previewForLiftingItem:session:]
  -[_SFQuickLookDocumentView dragInteraction:itemsForBeginningSession:]
  -[_SFQuickLookDocumentView _dragInteraction:dataOwnerForSession:]
  -[_SFQuickLookDocumentView traitCollectionDidChange:]
  -[_SFQuickLookDocumentView _actionButtonTapped:]
  -[_SFQuickLookDocumentView setQuickLookDocumentViewDelegate:]
  -[_SFQuickLookDocumentView updateDocumentIcon:]
  -[_SFQuickLookDocumentView updateDocumentFileName:]
  -[_SFQuickLookDocumentView updateDocumentFileType:]
  -[_SFQuickLookDocumentView updateDocumentFileSize:]
  -[_SFQuickLookDocumentView updateActionTitles:]
  -[_SFQuickLookDocumentView frameForButtonAtIndex:]
  -[_SFQuickLookDocumentView _setUpLayoutConstraints]
  -[_SFQuickLookDocumentView _updatePropertiesDefinedByContentSizeCategory]
  -[_SFQuickLookDocumentView _configureOrientationBasedConstraints:]
  -[_SFQuickLookDocumentView quickLookDocumentViewDelegate]


_SFQuickLookDocumentInfoView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  UIImageView *iconImageView
 @property  NSString *fileName
 @property  NSString *fileSize
 @property  NSString *fileType

  // instance methods
  -[_SFQuickLookDocumentInfoView iconImageView]
  -[_SFQuickLookDocumentInfoView fileName]
  -[_SFQuickLookDocumentInfoView setFileName:]
  -[_SFQuickLookDocumentInfoView initWithFrame:]
  -[_SFQuickLookDocumentInfoView setIconImageView:]
  -[_SFQuickLookDocumentInfoView .cxx_destruct]
  -[_SFQuickLookDocumentInfoView fileSize]
  -[_SFQuickLookDocumentInfoView traitCollectionDidChange:]
  -[_SFQuickLookDocumentInfoView setFileSize:]
  -[_SFQuickLookDocumentInfoView fileType]
  -[_SFQuickLookDocumentInfoView setFileType:]
  -[_SFQuickLookDocumentInfoView _updatePropertiesDefinedByContentSizeCategory]
  -[_SFQuickLookDocumentInfoView _configureOrientationBasedConstraints:]
  -[_SFQuickLookDocumentInfoView _updateDocumentSizeLabel]


_SFWebProcessSharingLinkExtractor : NSObject /usr/lib/libc++.1.dylib <_SFWebProcessSharingLinkExtractor>
  // instance methods
  -[_SFWebProcessSharingLinkExtractor _extractDominantIFrameWithInjectedObject:]
  -[_SFWebProcessSharingLinkExtractor _extractSharingLink]
  -[_SFWebProcessSharingLinkExtractor .cxx_destruct]
  -[_SFWebProcessSharingLinkExtractor _extractCanonicalLinkWithInjectedObject:]
  -[_SFWebProcessSharingLinkExtractor _setUpRemoteInterface]
  -[_SFWebProcessSharingLinkExtractor _withInjectedLinkExtractorObjectInFrame:callback:]
  -[_SFWebProcessSharingLinkExtractor initWithPageController:]
  -[_SFWebProcessSharingLinkExtractor fetchSharingLinkWithCompletionHandler:]
  -[_SFWebProcessSharingLinkExtractor _injectedLinkExtractorSourceString]


SFBannerCell : UICollectionViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  NSString *title
 @property  NSString *message
 @property  @? dismissHandler
 @property  long long bannerStyle

  // class methods
  +[SFBannerCell reuseIdentifier]

  // instance methods
  -[SFBannerCell message]
  -[SFBannerCell initWithFrame:]
  -[SFBannerCell setMessage:]
  -[SFBannerCell updateConstraints]
  -[SFBannerCell .cxx_destruct]
  -[SFBannerCell setModel:]
  -[SFBannerCell setTitle:]
  -[SFBannerCell prepareForReuse]
  -[SFBannerCell _dismiss:]
  -[SFBannerCell title]
  -[SFBannerCell dismissHandler]
  -[SFBannerCell bannerStyle]
  -[SFBannerCell setBannerStyle:]
  -[SFBannerCell layoutSubviews]
  -[SFBannerCell initWithCoder:]
  -[SFBannerCell setDismissHandler:]


SFKBScreenTraits : UIKBScreenTraits /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  BOOL sf_isKeyboardMinorEdgeWidth

  // class methods
  +[SFKBScreenTraits traitsWithScreen:orientation:]

  // instance methods
  -[SFKBScreenTraits setSf_isKeyboardMinorEdgeWidth:]
  -[SFKBScreenTraits sf_isKeyboardMinorEdgeWidth]
  -[SFKBScreenTraits isKeyboardMinorEdgeWidth]


_SFKeyboardGeometry : NSObject /usr/lib/libc++.1.dylib
 @property  {CGSize=dd} sizeWithoutBar
 @property  {CGSize=dd} sizeWithBar

  // class methods
  +[_SFKeyboardGeometry keyboardGeometryForInterfaceOrientation:]
  +[_SFKeyboardGeometry _keyboardGeometryForCurrentDeviceWithInterfaceOrientation:]

  // instance methods
  -[_SFKeyboardGeometry sizeWithBar]
  -[_SFKeyboardGeometry sizeWithoutBar]
  -[_SFKeyboardGeometry _initWithSizeWithoutBar:sizeWithBar:]
  -[_SFKeyboardGeometry _initWithFallbackSizeForOrientation:]


_SFQRImagePreviewViewController : UIViewController /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  <BCSAction> *action

  // instance methods
  -[_SFQRImagePreviewViewController .cxx_destruct]
  -[_SFQRImagePreviewViewController action]
  -[_SFQRImagePreviewViewController initWithElementInfo:]
  -[_SFQRImagePreviewViewController loadView]
  -[_SFQRImagePreviewViewController _contentViewSubtitleWithAction:]


SFQRImageHeaderView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  <BCSAction> *action

  // instance methods
  -[SFQRImageHeaderView _title]
  -[SFQRImageHeaderView setAction:]
  -[SFQRImageHeaderView .cxx_destruct]
  -[SFQRImageHeaderView action]
  -[SFQRImageHeaderView traitCollectionDidChange:]
  -[SFQRImageHeaderView _actionTypeString]


SFQRImageContentView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[SFQRImageContentView initWithTitle:subtitle:]
  -[SFQRImageContentView sizeThatFits:]


_SFFormDataController : WBUFormDataController /System/Library/Frameworks/Foundation.framework/Foundation <_SFAuthenticationContextDelegate>
 @property  _SFAuthenticationContext *autoFillAuthenticationContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFFormDataController sharedController]

  // instance methods
  -[_SFFormDataController .cxx_destruct]
  -[_SFFormDataController oneTimeCodeProvider]
  -[_SFFormDataController autoFillAuthenticationContext]
  -[_SFFormDataController invalidationTimeoutIfApplicationEntersBackgroundDuringAuthenticationForContext:]
  -[_SFFormDataController contextRequiresSessionBasedAuthentication:]
  -[_SFFormDataController contextShouldAllowPasscodeFallback:]
  -[_SFFormDataController contextShouldAllowMultipleBiometricFailures:]
  -[_SFFormDataController initWithAggressiveKeychainCaching:]


SFContactAutoFillTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  BOOL usesDetailAppearance
 @property  BOOL checked

  // instance methods
  -[SFContactAutoFillTableViewCell initWithStyle:reuseIdentifier:]
  -[SFContactAutoFillTableViewCell checked]
  -[SFContactAutoFillTableViewCell setUsesDetailAppearance:]
  -[SFContactAutoFillTableViewCell setValue:property:]
  -[SFContactAutoFillTableViewCell .cxx_destruct]
  -[SFContactAutoFillTableViewCell setChecked:]
  -[SFContactAutoFillTableViewCell checkmarkButtonTapped:]
  -[SFContactAutoFillTableViewCell usesDetailAppearance]


_SFDownload : NSObject /usr/lib/libc++.1.dylib <SFDownloadFileDelegate, _WKDownloadDelegate, WBSFluidProgressStateSource>
 @property  _SFQuickLookDocument *quickLookDocument
 @property  NSURL *sourceURL
 @property  NSString *fileDownloadPath
 @property  long long fileType
 @property  _WKUserInitiatedAction *userInitiatedAction
 @property  NSString *uti
 @property  NSString *mimeType
 @property  NSURLResponse *response
 @property  NSUUID *identifier
 @property  _WKDownload *wkDownload
 @property  NSString *filename
 @property  NSString *filenameWithoutExtension
 @property  NSURL *completedFileURL
 @property  long long dataOwner
 @property  BOOL explicitlySaved
 @property  BOOL suppressesPrompt
 @property  long long bytesExpected
 @property  unsigned long bytesLoaded
 @property  double progress
 @property  long long state
 @property  BOOL idle
 @property  NSDate *dateAdded
 @property  NSDate *dateFinished
 @property  NSDictionary *dictionaryRepresentation
 @property  BOOL canResume
 @property  BOOL canReveal
 @property  WBSFluidProgressController *fluidProgressController
 @property  <_SFDownloadDelegate> *delegate
 @property  <_SFDownloadPlaceholderImporter> *placeholderImporter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFDownload downloadDestinationPathWithFilename:]
  +[_SFDownload provisionalDownloadWithMIMEType:request:response:filename:uti:userInitiatedAction:]

  // instance methods
  -[_SFDownload filename]
  -[_SFDownload uti]
  -[_SFDownload bytesExpected]
  -[_SFDownload expectedOrCurrentURL]
  -[_SFDownload init]
  -[_SFDownload progressState]
  -[_SFDownload _download:didFailWithError:]
  -[_SFDownload _continueAfterDownloadConfirmation:destinationCompletionHandler:]
  -[_SFDownload _continueAfterDecidingFileDownloadPath:]
  -[_SFDownload _importPlaceholderIfNeeded:]
  -[_SFDownload _importCompleteDownloadIfNeeded]
  -[_SFDownload filenameWithoutExtension]
  -[_SFDownload resumeInProcessPool:]
  -[_SFDownload suppressesPrompt]
  -[_SFDownload setSuppressesPrompt:]
  -[_SFDownload placeholderImporter]
  -[_SFDownload sourceURL]
  -[_SFDownload reveal]
  -[_SFDownload bytesLoaded]
  -[_SFDownload dealloc]
  -[_SFDownload _downloadDidStart:]
  -[_SFDownload .cxx_destruct]
  -[_SFDownload mimeType]
  -[_SFDownload completedFileURL]
  -[_SFDownload dateFinished]
  -[_SFDownload initWithDictionaryRepresentation:didUpdateRepresentation:]
  -[_SFDownload removeDataAndPlaceholderFromDisk]
  -[_SFDownload explicitlySaved]
  -[_SFDownload canReveal]
  -[_SFDownload wkDownload]
  -[_SFDownload identifier]
  -[_SFDownload _download:decideDestinationWithSuggestedFilename:completionHandler:]
  -[_SFDownload clearFluidProgressState]
  -[_SFDownload dataOwner]
  -[_SFDownload fileDownloadPath]
  -[_SFDownload hasFailedURL]
  -[_SFDownload cancel]
  -[_SFDownload setExplicitlySaved:]
  -[_SFDownload _downloadDidCancel:]
  -[_SFDownload fileType]
  -[_SFDownload removeFromDisk]
  -[_SFDownload userInitiatedAction]
  -[_SFDownload quickLookDocument]
  -[_SFDownload _downloadDidFinish:]
  -[_SFDownload createFluidProgressState]
  -[_SFDownload _download:didReceiveData:]
  -[_SFDownload dateAdded]
  -[_SFDownload downloadFileContentsDidChange:]
  -[_SFDownload downloadFileWillBeDeleted:]
  -[_SFDownload downloadFileDidChangeURL:]
  -[_SFDownload progress]
  -[_SFDownload _downloadProcessDidCrash:]
  -[_SFDownload estimatedProgress]
  -[_SFDownload isIdle]
  -[_SFDownload dictionaryRepresentation]
  -[_SFDownload setDelegate:]
  -[_SFDownload state]
  -[_SFDownload setQuickLookDocument:]
  -[_SFDownload setPlaceholderImporter:]
  -[_SFDownload _download:didReceiveResponse:]
  -[_SFDownload delegate]
  -[_SFDownload setFluidProgressController:]
  -[_SFDownload response]
  -[_SFDownload _reportUpdatedProgressTimerFired:]
  -[_SFDownload _reportUpdatedProgressNow]
  -[_SFDownload _cancelReportUpdatedProgressTimer]
  -[_SFDownload completedFileURL:]
  -[_SFDownload _createResumeData]
  -[_SFDownload _validateSandboxAccessToURL:]
  -[_SFDownload _didImportPlaceholderAtURL:completionHandler:]
  -[_SFDownload _notifyDelegateOfFinishedDownload]
  -[_SFDownload _didImportFileAtURL:completionHandler:]
  -[_SFDownload fluidProgressController]
  -[_SFDownload _didUpdateBytesLoaded]
  -[_SFDownload _reportUpdatedProgressSoon]
  -[_SFDownload canResume]


_SFSecurityRecommendationsDrillInTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  NSString *subtitleText
 @property  long long warningStyle
 @property  long long numberOfWarnings

  // instance methods
  -[_SFSecurityRecommendationsDrillInTableViewCell initWithStyle:reuseIdentifier:]
  -[_SFSecurityRecommendationsDrillInTableViewCell _commonInit]
  -[_SFSecurityRecommendationsDrillInTableViewCell setWarningStyle:]
  -[_SFSecurityRecommendationsDrillInTableViewCell _setDetailLabelText]
  -[_SFSecurityRecommendationsDrillInTableViewCell warningStyle]
  -[_SFSecurityRecommendationsDrillInTableViewCell numberOfWarnings]
  -[_SFSecurityRecommendationsDrillInTableViewCell .cxx_destruct]
  -[_SFSecurityRecommendationsDrillInTableViewCell setNumberOfWarnings:]
  -[_SFSecurityRecommendationsDrillInTableViewCell traitCollectionDidChange:]
  -[_SFSecurityRecommendationsDrillInTableViewCell subtitleText]
  -[_SFSecurityRecommendationsDrillInTableViewCell setSubtitleText:]


SFKillSafariViewServiceActivity : _SFActivity
  // instance methods
  -[SFKillSafariViewServiceActivity activityType]
  -[SFKillSafariViewServiceActivity activityTitle]
  -[SFKillSafariViewServiceActivity canPerformWithActivityItems:]
  -[SFKillSafariViewServiceActivity performActivity]
  -[SFKillSafariViewServiceActivity _systemImageName]


_SFBarItemConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL enabled
 @property  BOOL hidden
 @property  @? menuProvider

  // instance methods
  -[_SFBarItemConfiguration setMenuProvider:]
  -[_SFBarItemConfiguration init]
  -[_SFBarItemConfiguration menuProvider]
  -[_SFBarItemConfiguration .cxx_destruct]
  -[_SFBarItemConfiguration isEnabled]
  -[_SFBarItemConfiguration setEnabled:]
  -[_SFBarItemConfiguration setHidden:]
  -[_SFBarItemConfiguration isHidden]


_SFBarManager : NSObject /usr/lib/libc++.1.dylib
 @property  <_SFBarManagerDelegate> *delegate
 @property  BOOL bookmarksItemSelected
 @property  double downloadsItemProgress

  // instance methods
  -[_SFBarManager _updateRegistration:]
  -[_SFBarManager setBarItem:enabled:]
  -[_SFBarManager test_numberOfRegistrations]
  -[_SFBarManager init]
  -[_SFBarManager registerToolbar:withLayout:persona:]
  -[_SFBarManager barRegistration:didReceiveTouchDownForBarItem:]
  -[_SFBarManager isBarItemHidden:]
  -[_SFBarManager _performCoalescedUpdatesNow]
  -[_SFBarManager .cxx_destruct]
  -[_SFBarManager pulseDownloadsItem]
  -[_SFBarManager barRegistration:didReceiveLongPressForBarItem:]
  -[_SFBarManager setBookmarksItemSelected:]
  -[_SFBarManager _updateAllRegistrations]
  -[_SFBarManager setDownloadsItemNeedsLayout]
  -[_SFBarManager setBarItem:hidden:]
  -[_SFBarManager test_registrationForBar:]
  -[_SFBarManager isBarItemEnabled:]
  -[_SFBarManager setBarItem:menuProvider:]
  -[_SFBarManager barRegistration:didReceiveTapForBarItem:]
  -[_SFBarManager downloadsItemProgress]
  -[_SFBarManager setDownloadsItemProgress:]
  -[_SFBarManager frameForBarItem:inCoordinateSpace:]
  -[_SFBarManager setDelegate:]
  -[_SFBarManager performCoalescedUpdates:]
  -[_SFBarManager visibleBarItemsNeedUpdate]
  -[_SFBarManager _invalidateCoalescedUpdatesTimer]
  -[_SFBarManager barRegistration:canHandleLongPressForBarItem:]
  -[_SFBarManager delegate]
  -[_SFBarManager isBookmarksItemSelected]


_SFVibrantSeparatorView : UIVisualEffectView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[_SFVibrantSeparatorView initWithFrame:]


SFAutomaticPasswordInputView : UIInputView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  long long keyboardType
 @property  <SFAutomaticPasswordInputViewDelegate> *delegate
 @property  <SFAutomaticPasswordInputViewSizing> *inputViewSizing
 @property  BOOL shouldAllowSelfSizing
 @property  long long keyboardAppearance

  // instance methods
  -[SFAutomaticPasswordInputView keyboardType]
  -[SFAutomaticPasswordInputView setKeyboardAppearance:]
  -[SFAutomaticPasswordInputView keyboardAppearance]
  -[SFAutomaticPasswordInputView inputViewSizing]
  -[SFAutomaticPasswordInputView _useStrongPasswordButtonAction:]
  -[SFAutomaticPasswordInputView _useCustomPasswordButtonAction:]
  -[SFAutomaticPasswordInputView shouldAllowSelfSizing]
  -[SFAutomaticPasswordInputView .cxx_destruct]
  -[SFAutomaticPasswordInputView allowsSelfSizing]
  -[SFAutomaticPasswordInputView intrinsicContentSize]
  -[SFAutomaticPasswordInputView initWithInputViewStyle:keyboardType:]
  -[SFAutomaticPasswordInputView setShouldAllowSelfSizing:]
  -[SFAutomaticPasswordInputView setInputViewSizing:]
  -[SFAutomaticPasswordInputView setDelegate:]
  -[SFAutomaticPasswordInputView delegate]


SFAutomaticPasswordScrollViewContentView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 @property  <SFAutomaticPasswordScrollViewContentViewLayoutObserver> *layoutObserver

  // instance methods
  -[SFAutomaticPasswordScrollViewContentView layoutObserver]
  -[SFAutomaticPasswordScrollViewContentView setLayoutObserver:]
  -[SFAutomaticPasswordScrollViewContentView .cxx_destruct]
  -[SFAutomaticPasswordScrollViewContentView layoutSubviews]


SFAutomaticPasswordExplanationView : UIView /System/Library/PrivateFrameworks/WebUI.framework/WebUI <_UIScrollViewLayoutObserver, SFAutomaticPasswordScrollViewContentViewLayoutObserver, UIScrollViewDelegate>
 @property  UILabel *explanationLabel
 @property  UILabel *passwordRetrievalExpalantionLabel
 @property  UIButton *useStrongPasswordButton
 @property  UIButton *useOtherPasswordButton
 @property  long long keyboardAppearance
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFAutomaticPasswordExplanationView setKeyboardAppearance:]
  -[SFAutomaticPasswordExplanationView keyboardAppearance]
  -[SFAutomaticPasswordExplanationView _scrollViewDidLayoutSubviews:]
  -[SFAutomaticPasswordExplanationView _createSubviews]
  -[SFAutomaticPasswordExplanationView updateConstraints]
  -[SFAutomaticPasswordExplanationView useStrongPasswordButton]
  -[SFAutomaticPasswordExplanationView useOtherPasswordButton]
  -[SFAutomaticPasswordExplanationView automaticPasswordScrollContentViewDidLayout:]
  -[SFAutomaticPasswordExplanationView _createLayoutConstraints]
  -[SFAutomaticPasswordExplanationView _updateTextAndButtonColor]
  -[SFAutomaticPasswordExplanationView _updateStrongPasswordHeightConstraint]
  -[SFAutomaticPasswordExplanationView _updateMaximumPadding]
  -[SFAutomaticPasswordExplanationView systemLayoutSizeFittingSize:]
  -[SFAutomaticPasswordExplanationView .cxx_destruct]
  -[SFAutomaticPasswordExplanationView safeAreaInsetsDidChange]
  -[SFAutomaticPasswordExplanationView _updateWideAppearanceRequirement]
  -[SFAutomaticPasswordExplanationView _updateContentLayoutGuideBottomConstraint]
  -[SFAutomaticPasswordExplanationView _updateUseCustomPasswordBaselineToBottomConstraint]
  -[SFAutomaticPasswordExplanationView _scrollViewNeedsShadow:]
  -[SFAutomaticPasswordExplanationView _updateShadowViewAlpha]
  -[SFAutomaticPasswordExplanationView explanationLabel]
  -[SFAutomaticPasswordExplanationView passwordRetrievalExpalantionLabel]
  -[SFAutomaticPasswordExplanationView initWithKeyboardType:]
  -[SFAutomaticPasswordExplanationView scrollViewDidScroll:]
  -[SFAutomaticPasswordExplanationView layoutSubviews]


_SFFeatureAvailability : WBSFeatureAvailability /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // class methods
  +[_SFFeatureAvailability _shouldShowChineseFeatures]
  +[_SFFeatureAvailability isTabBarAvailableForScreenSize:]
  +[_SFFeatureAvailability supportsCVV]


SFCustomActivityProxy : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *activityType
 @property  NSString *activityTitle
 @property  UIImage *activityImage
 @property  unsigned long activityProxyID

  // class methods
  +[SFCustomActivityProxy supportsSecureCoding]

  // instance methods
  -[SFCustomActivityProxy copyWithZone:]
  -[SFCustomActivityProxy activityType]
  -[SFCustomActivityProxy activityTitle]
  -[SFCustomActivityProxy activityProxyID]
  -[SFCustomActivityProxy .cxx_destruct]
  -[SFCustomActivityProxy activityTypeWithActivity:]
  -[SFCustomActivityProxy _initWithActivityType:title:image:proxyID:]
  -[SFCustomActivityProxy encodeWithCoder:]
  -[SFCustomActivityProxy initWithActivity:]
  -[SFCustomActivityProxy activityImage]
  -[SFCustomActivityProxy isEqual:]
  -[SFCustomActivityProxy initWithCoder:]


SFDismissButton : UIButton /System/Library/PrivateFrameworks/WebUI.framework/WebUI
  // instance methods
  -[SFDismissButton init]
  -[SFDismissButton .cxx_destruct]


_SFSafariSharingExtensionController : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_SFSafariSharingExtensionController finalizeJavaScriptForSharingExtension:arguments:]
  -[_SFSafariSharingExtensionController .cxx_destruct]
  -[_SFSafariSharingExtensionController _extensionControllerProxy]
  -[_SFSafariSharingExtensionController runJavaScriptForSharingExtension:extraArguments:completion:]
  -[_SFSafariSharingExtensionController initWithWebView:]
  -[_SFSafariSharingExtensionController prepareJavaScriptWorldForSharingExtension:javaScript:]


UIVibrancyEffect(SafariServicesExtras)
	// class methods
	+[UIVibrancyEffect(SafariServicesExtras) _sf_effectWithStyle:forBarTintStyle:]

NSDistributedNotificationCenter(SafariServicesExtras)
	// class methods
	+[NSDistributedNotificationCenter(SafariServicesExtras) _sf_postPerSitePreferencesDidChangeDistributedNotification]

NSNotification(SafariServicesExtras)
	// instance methods
	-[NSNotification(SafariServicesExtras) _sf_perSitePreferenceNotificationWasSentFromAnotherProcess]

(TabDocumentExtras)
	// instance methods
	-[(TabDocumentExtras) failingURL]
	-[(TabDocumentExtras) _sf_recoverableByPageFormatMenu]

NSUserActivity(SafariServicesExtras)
	// class methods
	+[NSUserActivity(SafariServicesExtras) _sf_windowCreationActivityWithNavigationIntent:]
	+[NSUserActivity(SafariServicesExtras) _sf_windowCreationActivityWithMode:]
	+[NSUserActivity(SafariServicesExtras) _sf_windowCreationActivityWithTabUUID:browserControllerUUID:]
	+[NSUserActivity(SafariServicesExtras) _sf_windowCreationActivityWithRecentlyClosedTabUUID:browserControllerUUID:]
	+[NSUserActivity(SafariServicesExtras) _sf_windowCreationAcitivtyFromSceneConnectionOptions:]

	// instance methods
	-[NSUserActivity(SafariServicesExtras) sf_windowCreationNavigationIntentID]
	-[NSUserActivity(SafariServicesExtras) _sf_windowCreationNavigationIntent]
	-[NSUserActivity(SafariServicesExtras) _sf_windowCreationTabUUID]
	-[NSUserActivity(SafariServicesExtras) _sf_windowCreationSourceBrowserControllerUUID]
	-[NSUserActivity(SafariServicesExtras) _sf_windowCreationRecentlyClosedTabUUID]
	-[NSUserActivity(SafariServicesExtras) _sf_windowCreationMode]
	-[NSUserActivity(SafariServicesExtras) _sf_invalidateWindowCreationData]

WebBookmark(SafariServicesExtras)
	// class methods
	+[WebBookmark(SafariServicesExtras) _sf_operationForDropSession:]
	+[WebBookmark(SafariServicesExtras) _sf_webBookmarksFromDropSession:completionHandler:]

	// instance methods
	-[WebBookmark(SafariServicesExtras) _sf_iconKeyColor]
	-[WebBookmark(SafariServicesExtras) _sf_setIconKeyColor:]
	-[WebBookmark(SafariServicesExtras) _sf_contextMenuUsingCollection:withUserInfo:handler:]
	-[WebBookmark(SafariServicesExtras) _sf_icon]

UIWindowScene(SafariServicesExtras)
	// instance methods
	-[UIWindowScene(SafariServicesExtras) _sf_openFaceTimeMultiWayURL:completionHandler:]
	-[UIWindowScene(SafariServicesExtras) _sf_openTelURL:completionHandler:]

_WKProcessPoolConfiguration(SafariServicesExtras)
	// class methods
	+[_WKProcessPoolConfiguration(SafariServicesExtras) _sf_customClassesForParameterCoder]

NSUserDefaults(SafariServicesExtras)
	// class methods
	+[NSUserDefaults(SafariServicesExtras) _sf_safariDefaults]

	// instance methods
	-[NSUserDefaults(SafariServicesExtras) _sf_passwordManagerIsInDemoMode]
	-[NSUserDefaults(SafariServicesExtras) _sf_stringForKey:defaultValue:]
	-[NSUserDefaults(SafariServicesExtras) _sf_dateForKey:]
	-[NSUserDefaults(SafariServicesExtras) _sf_registerSafariDefaults]
	-[NSUserDefaults(SafariServicesExtras) _sf_javaScriptEnabled]
	-[NSUserDefaults(SafariServicesExtras) _sf_javaScriptCanOpenWindowsAutomatically]
	-[NSUserDefaults(SafariServicesExtras) _sf_warnAboutFraudulentWebsites]
	-[NSUserDefaults(SafariServicesExtras) _sf_shouldAutomaticallyDownloadReadingListItems]
	-[NSUserDefaults(SafariServicesExtras) _sf_setShouldAutomaticallyDownloadReadingListItems:]

CALayer(SafariServicesExtras)
	// instance methods
	-[CALayer(SafariServicesExtras) _sf_copyAnimationsFromLayer:withBlock:]

(SafariServicesExtras)
	// class methods
	+[(SafariServicesExtras) safari_readingListThumbnailImageDataWithCGImage:]

UIPointerShape(SafariServicesExtras)
	// class methods
	+[UIPointerShape(SafariServicesExtras) _sf_shapeForToolbarButton:]

UIViewController(SafariServicesExtras)
	// instance methods
	-[UIViewController(SafariServicesExtras) safari_isPresentedByActivityViewController]
	-[UIViewController(SafariServicesExtras) _sf_bottomUnsafeAreaFrame]
	-[UIViewController(SafariServicesExtras) _sf_viewControllerToPresentFrom]
	-[UIViewController(SafariServicesExtras) _sf_presentViewControllerOnTopOfPresentedViewController:animated:completion:]
	-[UIViewController(SafariServicesExtras) _sf_animateAlongsideTransitionOrPerform:]
	-[UIViewController(SafariServicesExtras) _sf_isMFMailComposeViewController]
	-[UIViewController(SafariServicesExtras) _sf_isPKAddPassesViewController]
	-[UIViewController(SafariServicesExtras) safari_wantsTransparentApplicationBackground]
	-[UIViewController(SafariServicesExtras) safari_isEventuallyPresentedByViewControllerClass:]
	-[UIViewController(SafariServicesExtras) safari_isHorizontallyConstrained]
	-[UIViewController(SafariServicesExtras) safari_isHorizontallyConstrainedFallingBackToRootViewControllerIfNecessary]
	-[UIViewController(SafariServicesExtras) safari_updateApplicationBackgroundStyle]
	-[UIViewController(SafariServicesExtras) safari_wantsDoneButtonInModalBookmarksPanel]
	-[UIViewController(SafariServicesExtras) safari_sheetPresentationController]
	-[UIViewController(SafariServicesExtras) _sf_bottomUnsafeAreaFrameForToolbar]
	-[UIViewController(SafariServicesExtras) safari_dismissPresentedAlert]

UICommand(SFBrowserKeyCommandExtras)
	// instance methods
	-[UICommand(SFBrowserKeyCommandExtras) _sf_commandSource]

UIMenu(SFBrowserKeyCommandExtras)
	// class methods
	+[UIMenu(SFBrowserKeyCommandExtras) _sf_tabMenu]
	+[UIMenu(SFBrowserKeyCommandExtras) _sf_bookmarkMenu]
	+[UIMenu(SFBrowserKeyCommandExtras) _sf_tabMenuProvider]
	+[UIMenu(SFBrowserKeyCommandExtras) _sf_bookmarkMenuProvider]

UIPasteboard(SafariServicesExtras)
	// instance methods
	-[UIPasteboard(SafariServicesExtras) safari_pasteAndNavigateButtonTitle]
	-[UIPasteboard(SafariServicesExtras) safari_bestInputTypeForPastingIntoURLField]
	-[UIPasteboard(SafariServicesExtras) safari_setSensitiveString:]
	-[UIPasteboard(SafariServicesExtras) safari_bestStringForPastingIntoURLField]
	-[UIPasteboard(SafariServicesExtras) safari_canPasteAndNavigate]

(ScreenTime)
	// class methods
	+[(ScreenTime) _sf_safeBrowsingPreferencesPlistPath]

	// instance methods
	-[(ScreenTime) _sf_ensurePathExtension:]
	-[(ScreenTime) sf_lastPathComponentWithoutZipExtension]
	-[(ScreenTime) sf_stringByReplacingMarkupCharactersWithHTMLEntities]
	-[(ScreenTime) sf_stringByReplacingLastOccurrenceOfWhitespaceWithANonBreakingSpace]
	-[(ScreenTime) _sf_bestURLForUserTypedString]
	-[(ScreenTime) sf_isFeedScheme]
	-[(ScreenTime) sf_isConfigProfileMIMEType]
	-[(ScreenTime) sf_URLScheme]

UIBarButtonItem(Staging58882696)
	// class methods
	+[UIBarButtonItem(Staging58882696) _sf_longPressAllowableMovement]

	// instance methods
	-[UIBarButtonItem(Staging58882696) _sf_longPressEnabled]
	-[UIBarButtonItem(Staging58882696) _sf_setLongPressEnabled:]
	-[UIBarButtonItem(Staging58882696) _sf_test_simulateLongPressInvocation]
	-[UIBarButtonItem(Staging58882696) _sf_setMenu:]
	-[UIBarButtonItem(Staging58882696) _sf_menu]
	-[UIBarButtonItem(Staging58882696) _sf_setSecondaryActionsProvider:]
	-[UIBarButtonItem(Staging58882696) _sf_secondaryActionsProvider]
	-[UIBarButtonItem(Staging58882696) _sf_setTarget:longPressAction:]
	-[UIBarButtonItem(Staging58882696) _sf_setTarget:touchDownAction:longPressAction:]

UIButton(Staging58882696)
	// instance methods
	-[UIButton(Staging58882696) _sf_setMenuProvider:]
	-[UIButton(Staging58882696) _sf_menuProvider]

UIColor(SafariServicesExtras)
	// class methods
	+[UIColor(SafariServicesExtras) _sf_defaultWebContentBackgroundColor]
	+[UIColor(SafariServicesExtras) _sf_defaultBookmarkFolderBackgroundColor]
	+[UIColor(SafariServicesExtras) _sf_automationBackgroundColor]
	+[UIColor(SafariServicesExtras) _sf_colorNamed:]
	+[UIColor(SafariServicesExtras) _sf_defaultWebAppStatusBarBackgroundColor]
	+[UIColor(SafariServicesExtras) _sf_touchIconBackgroundColor]
	+[UIColor(SafariServicesExtras) _sf_folderTouchIconBackgroundColor]
	+[UIColor(SafariServicesExtras) _sf_browserSystemColor]
	+[UIColor(SafariServicesExtras) _sf_barHairlineShadowColor]
	+[UIColor(SafariServicesExtras) _sf_secondaryBarHairlineOutlineColor]
	+[UIColor(SafariServicesExtras) _sf_barHairlineOutlineColor]

	// instance methods
	-[UIColor(SafariServicesExtras) _sf_darkenedColor]
	-[UIColor(SafariServicesExtras) _sf_isDarkColor]

WKBackForwardListItem(SafariServicesExtras)
	// instance methods
	-[WKBackForwardListItem(SafariServicesExtras) _sf_quickLookDocument]
	-[WKBackForwardListItem(SafariServicesExtras) _sf_setQuickLookDocument:]
	-[WKBackForwardListItem(SafariServicesExtras) _sf_securityInfo]
	-[WKBackForwardListItem(SafariServicesExtras) _sf_setSecurityInfo:]
	-[WKBackForwardListItem(SafariServicesExtras) _sf_explicitSuggestedFilename]
	-[WKBackForwardListItem(SafariServicesExtras) _sf_setExplicitSuggestedFilename:]

WBSSavedPassword(WebUIExtras)
	// instance methods
	-[WBSSavedPassword(WebUIExtras) _firstSiteMatchingSearchPattern:withTokenizer:]
	-[WBSSavedPassword(WebUIExtras) safari_getTitle:detail:forTableViewCell:withSearchPattern:]

WKFrameInfo(SafariServicesExtras)
	// instance methods
	-[WKFrameInfo(SafariServicesExtras) _sf_titleForJavaScriptDialog]

LSApplicationWorkspace(SafariServicesExtras)
	// instance methods
	-[LSApplicationWorkspace(SafariServicesExtras) _sf_openURL:inApplication:withOptions:completionHandler:]
	-[LSApplicationWorkspace(SafariServicesExtras) _sf_openURL:withOptions:completionHandler:]
	-[LSApplicationWorkspace(SafariServicesExtras) _sf_shouldOverrideiCloudSharingURL:withAppRedirectURL:referrerURL:loadedUsingDesktopUserAgent:]
	-[LSApplicationWorkspace(SafariServicesExtras) _sf_tryOpeningURLInDefaultApp:isContentManaged:completionHandler:]

WKNavigationResponse(SafariServicesExtras)
	// instance methods
	-[WKNavigationResponse(SafariServicesExtras) _sf_explicitSuggestedFilename]
	-[WKNavigationResponse(SafariServicesExtras) _sf_allowReloadingInMainFrame]
	-[WKNavigationResponse(SafariServicesExtras) _sf_suggestedFilename]
	-[WKNavigationResponse(SafariServicesExtras) _sf_responsePolicy:uti:]

(SafariServicesExtras)
	// class methods
	+[(SafariServicesExtras) _sf_isRTL]

UIAction(SafariServicesExtras)
	// class methods
	+[UIAction(SafariServicesExtras) _sf_openInNewTabActionWithHandler:]

UIDocumentInteractionController(_SFManagedSourceSupport)
	// class methods
	+[UIDocumentInteractionController(_SFManagedSourceSupport) _sf_interactionControllerWithDocumentURL:sourceURL:]

LSDocumentProxy(_SFManagedSourceSupport)
	// class methods
	+[LSDocumentProxy(_SFManagedSourceSupport) _sf_documentProxyForName:type:MIMEType:sourceURL:]

UIDocumentPickerViewController(_SFManagedSourceSupport)
	// class methods
	+[UIDocumentPickerViewController(_SFManagedSourceSupport) _sf_documentPickerViewControllerWithURL:inMode:sourceURL:]

UIBlurEffect(SafariServicesExtras)
	// class methods
	+[UIBlurEffect(SafariServicesExtras) _sf_defaultPopoverBackgroundEffect]

UIScrollView(SafariServicesExtras)
	// class methods
	+[UIScrollView(SafariServicesExtras) _sf_baseInsetsForVerticalScrollIndicatorInScrollViewContainerView:]
	+[UIScrollView(SafariServicesExtras) _sf_baseInsetsForHorizontalScrollIndicatorInScrollViewContainerView:]
	+[UIScrollView(SafariServicesExtras) _sf_baseVerticalScrollIndicatorInsetsExtendFullHeight:]
	+[UIScrollView(SafariServicesExtras) _sf_baseHorizontalScrollIndicatorInsetsExtendFullWidth:]
	+[UIScrollView(SafariServicesExtras) _sf_supportsPerAxisIndicatorInsets]

	// instance methods
	-[UIScrollView(SafariServicesExtras) _sf_isScrolledPastTop]
	-[UIScrollView(SafariServicesExtras) _sf_setContentInsetAdjustments:]
	-[UIScrollView(SafariServicesExtras) _sf_isScrolledToOrPastBottom]

UIImageSymbolConfiguration(SafariServicesExtras)
	// class methods
	+[UIImageSymbolConfiguration(SafariServicesExtras) _sf_staticConfigurationWithTextStyle:scale:compatibleWithTraitCollection:]
	+[UIImageSymbolConfiguration(SafariServicesExtras) _sf_staticConfigurationWithTextStyle:scale:]

NSURLResponse(SafariServicesExtras)
	// instance methods
	-[NSURLResponse(SafariServicesExtras) _sf_hasAttachmentWithFilename]
	-[NSURLResponse(SafariServicesExtras) sf_shouldDownloadDueToContentDisposition:]
	-[NSURLResponse(SafariServicesExtras) _sf_allowedToOverrideContentDispositionAttachment]
	-[NSURLResponse(SafariServicesExtras) sf_hasXMLAttachment]

UITableViewCell(SafariServicesExtras)
	// instance methods
	-[UITableViewCell(SafariServicesExtras) sf_setUsesVibrantSelection:]

UIFont(SafariServicesExtras)
	// class methods
	+[UIFont(SafariServicesExtras) _sf_preferredFontForTextStyle:symbolicTraits:]
	+[UIFont(SafariServicesExtras) _sf_preferredFontForTextStyle:attributes:]

UIApplication(SafariServicesExtras)
	// instance methods
	-[UIApplication(SafariServicesExtras) _sf_currentKeyboardModifierFlags]

UIResponder(SafariServicesExtras)
	// instance methods
	-[UIResponder(SafariServicesExtras) sf_inResponderChain]

NSItemProvider(SafariServicesExtras)
	// class methods
	+[NSItemProvider(SafariServicesExtras) _sf_loadObjectsFromItemProviders:usingLoader:completionHandler:]

	// instance methods
	-[NSItemProvider(SafariServicesExtras) _sf_loadObjectOfClasses:completionHandler:]
	-[NSItemProvider(SafariServicesExtras) _sf_registerFileRepresentationForQuickLookDocument:]

UIWebClip(SafariServicesExtras)
	// instance methods
	-[UIWebClip(SafariServicesExtras) _sf_applicationManifest]
	-[UIWebClip(SafariServicesExtras) _sf_applicationManifestPath]
	-[UIWebClip(SafariServicesExtras) _sf_setApplicationManifest:]

NSHTTPCookie(SafariServicesExtras)
	// instance methods
	-[NSHTTPCookie(SafariServicesExtras) sf_matchesTopLevelDomain:]

WKNavigationAction(SafariServicesExtras)
	// instance methods
	-[WKNavigationAction(SafariServicesExtras) _sf_shouldAskAboutInsecureFormSubmission]
	-[WKNavigationAction(SafariServicesExtras) _sf_shouldPerformDownload]
	-[WKNavigationAction(SafariServicesExtras) _sf_allowsExternalRedirectWithoutPrompting]
	-[WKNavigationAction(SafariServicesExtras) _sf_setAllowsExternalRedirectWithoutPrompting:]

WBSAppLink(SafariServicesExtras)
	// instance methods
	-[WBSAppLink(SafariServicesExtras) _sf_decideOpenStrategyAndCallCompletionHandlerOnMainThread:]

NSLayoutConstraint(SafariServicesExtras)
	// class methods
	+[NSLayoutConstraint(SafariServicesExtras) _sf_setConstraints:active:]

UIView(SafariGraphicsUtilities)
	// class methods
	+[UIView(SafariGraphicsUtilities) _sf_performLinkAnimation:onView:]
	+[UIView(SafariGraphicsUtilities) _sf_cancelLinkAnimationsOnWindow:]
	+[UIView(SafariGraphicsUtilities) _sf_animateLinkImage:withAnimation:fromPoint:inView:toRect:inView:afterImageDisappearsBlock:afterDestinationLayerBouncesBlock:]
	+[UIView(SafariGraphicsUtilities) _sf_animateLinkImage:withAnimation:fromRect:inView:toRect:inView:afterImageDisappearsBlock:afterDestinationLayerBouncesBlock:]
	+[UIView(SafariGraphicsUtilities) sf_animate:usingDefaultTimingWithOptions:animations:completion:]

	// instance methods
	-[UIView(SafariGraphicsUtilities) _sf_setMatchesIntrinsicContentSize]
	-[UIView(SafariGraphicsUtilities) _sf_isFullScreenWidth]
	-[UIView(SafariGraphicsUtilities) _sf_isFullScreenHeight]
	-[UIView(SafariGraphicsUtilities) _sf_hasLandscapeAspectRatio]
	-[UIView(SafariGraphicsUtilities) _sf_safeAreaInsetsFlippedForLayoutDirectionality]
	-[UIView(SafariGraphicsUtilities) _sf_safeAreaBounds]
	-[UIView(SafariGraphicsUtilities) _sf_convertY:toCoordinateSpace:]
	-[UIView(SafariGraphicsUtilities) _sf_snapshotImageFromIOSurface]
	-[UIView(SafariGraphicsUtilities) _sf_setOrderedSubviews:count:]
	-[UIView(SafariGraphicsUtilities) _sf_bottomUnsafeAreaFrame]
	-[UIView(SafariGraphicsUtilities) _sf_firstAncestorViewOfClass:]
	-[UIView(SafariGraphicsUtilities) _sf_usesLeftToRightLayout]
	-[UIView(SafariGraphicsUtilities) ss_setUntransformedFrame:]
	-[UIView(SafariGraphicsUtilities) ss_untransformedFrame]
	-[UIView(SafariGraphicsUtilities) _sf_bottomUnsafeAreaFrameForToolbar]

UIImage(SFGraphicsUtilities)
	// class methods
	+[UIImage(SFGraphicsUtilities) _sf_fallbackFavicon]
	+[UIImage(SFGraphicsUtilities) sf_imageFromMainBundleNamed:]
	+[UIImage(SFGraphicsUtilities) ss_imageNamed:]
	+[UIImage(SFGraphicsUtilities) _sf_faviconFromSystemImageNamed:]
	+[UIImage(SFGraphicsUtilities) _sf_favoritesFavicon]

	// instance methods
	-[UIImage(SFGraphicsUtilities) _sf_resizeImageToSize:]
	-[UIImage(SFGraphicsUtilities) _sf_hasRegisteredFaviconForDarkUserInterfaceStyle]
	-[UIImage(SFGraphicsUtilities) _sf_shouldApplyBackingForDarkBackdrop]
	-[UIImage(SFGraphicsUtilities) _sf_isLaunchImageSizedForOrientation:includesStatusBar:]
	-[UIImage(SFGraphicsUtilities) _sf_imageByResizingWithAccessibilityScale:]
	-[UIImage(SFGraphicsUtilities) _sf_initWithCGImage:tabSnapshotEffectsVersion:]
	-[UIImage(SFGraphicsUtilities) _sf_tabSnapshotEffectsVersion]
	-[UIImage(SFGraphicsUtilities) _sf_registerFaviconForDarkUserInterfaceStyle]
	-[UIImage(SFGraphicsUtilities) _sf_outlineIconForSize:]

CertUITrustManager(SafariServicesExtras)
	// instance methods
	-[CertUITrustManager(SafariServicesExtras) userAllowsCertificateTrust:host:shouldPrompt:completionHandler:]

WKWebView(SafariServicesExtras)
	// instance methods
	-[WKWebView(SafariServicesExtras) _sf_securityInfo]
	-[WKWebView(SafariServicesExtras) _sf_setSecurityInfo:]
	-[WKWebView(SafariServicesExtras) webui_privateBrowsingEnabled]
	-[WKWebView(SafariServicesExtras) _sf_suggestedFilename]
	-[WKWebView(SafariServicesExtras) webui_presentingViewController]
	-[WKWebView(SafariServicesExtras) webui_removeFormMetadataForLastPasswordGenerationOrSubmitEventInFrame:]
	-[WKWebView(SafariServicesExtras) webui_lastGeneratedPasswordForCurrentBackForwardItem]
	-[WKWebView(SafariServicesExtras) _sf_saveUnsubmittedGeneratedPasswordAndRemoveFormMetadata]
	-[WKWebView(SafariServicesExtras) webui_preventNavigationDuringAutoFillPrompt]
	-[WKWebView(SafariServicesExtras) _sf_effectiveViewToLayOut]
	-[WKWebView(SafariServicesExtras) webui_formMetadataForLastPasswordGenerationOrSubmitEventInFrame:]
	-[WKWebView(SafariServicesExtras) webui_setFormMetadata:forLastPasswordGenerationOrSubmitEventInFrame:]
	-[WKWebView(SafariServicesExtras) webui_setLastGeneratedPasswordForCurrentBackForwardItem:]
	-[WKWebView(SafariServicesExtras) _sf_applicationDidEnterBackgroundOrWillTerminate:]

(SafariServicesExtras)
	// class methods
	+[(SafariServicesExtras) _sf_canCreateURLsFromDropSession:]
	+[(SafariServicesExtras) _sf_urlsFromDragItems:completionHandler:]

	// instance methods
	-[(SafariServicesExtras) _sf_highLevelDomainFromHostFallingBackToHostOrAbsoluteString]
	-[(SafariServicesExtras) sf_isAppleNewsURL]
	-[(SafariServicesExtras) sf_isWebSearchURL]
	-[(SafariServicesExtras) sf_isTestWebArchiveURL]
	-[(SafariServicesExtras) sf_isOfflineReadingListURL]
	-[(SafariServicesExtras) sf_isFacetimeURL]
	-[(SafariServicesExtras) _sf_isAppleOneURL]
	-[(SafariServicesExtras) sf_absoluteStringWithoutFragment]
	-[(SafariServicesExtras) _sf_topLevelDomain]
	-[(SafariServicesExtras) _sf_accessingSecurityScopedResource:]

UITraitCollection(SafariServicesExtras)
	// class methods
	+[UITraitCollection(SafariServicesExtras) _sf_traitCollectionWithBackgroundBlurEffect:]

	// instance methods
	-[UITraitCollection(SafariServicesExtras) _sf_backgroundBlurEffect]

WBSAnalyticsLogger(_SFAnalyticsLogger)
	// instance methods
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_tappedOnSafariViewControllerToolbarButton:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_longTappedOnSafariViewControllerToolbarButton:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_safariViewControllerDidDismissWithMethod:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_safariViewControllerDidPresentFromHostApp:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_authenticatedForAutoFillWithCategory:onPageLoad:status:error:client:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_enteredTwoUpUsingMethod:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_twoFingerTappedLinkWithOutcome:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_tappedOnSafariToolbarButton:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_longTappedOnSafariToolbarButton:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_launchedOrResumedSafariWhileInPrivateBrowsing:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_reportAutoFillRequiresAuthenticationPreference:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_authenticatedForAutoFillWithCategory:onPageLoad:status:client:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_activatedHomeScreenQuickAction:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_didBeginDownloadWithMIMEType:uti:downloadType:promptType:browserPersona:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_didTerminateWebProcessBeforeNavigationForReason:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_didChooseIntervalFromAutomaticTabClosingFirstTimeExperiencePrompt:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_reportAutomaticTabClosingInterval:]
	-[WBSAnalyticsLogger(_SFAnalyticsLogger) _sf_didCloseTabsAutomaticallyWithCount:tabClosingInterval:]

UIDragItem(SafariServicesExtras)
	// class methods
	+[UIDragItem(SafariServicesExtras) _sf_loadObjectsFromDragItems:usingLocalObjectLoader:objectLoader:completionHandler:]
	+[UIDragItem(SafariServicesExtras) _sf_itemWithTabStateData:userActivity:]

	// instance methods
	-[UIDragItem(SafariServicesExtras) _sf_localBookmark]
	-[UIDragItem(SafariServicesExtras) _sf_localURL]
	-[UIDragItem(SafariServicesExtras) _sf_tabStateData]
	-[UIDragItem(SafariServicesExtras) _sf_initWithBookmark:]
	-[UIDragItem(SafariServicesExtras) _sf_initWithSiriSuggestion:]

NSURLProtectionSpace(SafariServicesExtras)
	// instance methods
	-[NSURLProtectionSpace(SafariServicesExtras) _sf_highLevelDomainAndPort]
	-[NSURLProtectionSpace(SafariServicesExtras) _sf_identities]
	-[NSURLProtectionSpace(SafariServicesExtras) _sf_canAuthenticate]

NSBundle(SafariServicesExtras)
	// class methods
	+[NSBundle(SafariServicesExtras) _sf_isSafariViewServiceBundle]
	+[NSBundle(SafariServicesExtras) _sf_safariServicesBundle]
	+[NSBundle(SafariServicesExtras) _sf_isWebSheetApplicationBundle]

01 00 1200 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAuthorizationController 
01 00 1500 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBag 
01 00 1500 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBagKeySet 
01 00 1500 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLookup 
01 00 0400 /System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices: ASAccountAuthenticationModificationController 
01 00 0400 /System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices: ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest 
01 00 0400 /System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices: ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest 
01 00 0400 /System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices: ASCredentialServiceIdentifier 
01 00 0400 /System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices: ASPasswordCredential 
01 00 0400 /System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices: ASPasswordCredentialIdentity 
01 00 0400 /System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices: ASWebAuthenticationSession 
01 00 1000 /System/Library/PrivateFrameworks/Celestial.framework/Celestial: AVSystemController 
01 00 1c00 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 2b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 2b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 2b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 2b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 2b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 2b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 2b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 2b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 2b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAPackage 
01 00 2b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 2b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 2b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateController 
01 00 2b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 1d00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLInUseAssertion 
01 00 1d00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 2000 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 2000 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 2000 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 2000 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactVCardSerialization 
01 00 0b00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNContactViewController 
01 00 2000 /System/Library/Frameworks/Contacts.framework/Contacts: CNLabeledValue 
01 00 2000 /System/Library/Frameworks/Contacts.framework/Contacts: CNPostalAddressFormatter 
01 00 2500 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPAggregateDictionary 
01 00 2500 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPNetworkObserver 
01 00 0500 /System/Library/PrivateFrameworks/CoreRecognition.framework/CoreRecognition: CRCameraReader 
01 00 1400 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 1400 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTXPCServiceSubscriptionContext 
01 00 0c00 /System/Library/PrivateFrameworks/CertUI.framework/CertUI: CertUIPrompt 
01 00 0c00 /System/Library/PrivateFrameworks/CertUI.framework/CertUI: CertUITrustManager 
01 00 1400 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0600 /System/Library/PrivateFrameworks/DocumentManagerCore.framework/DocumentManagerCore: DOCDownloadImportManager 
01 00 0600 /System/Library/PrivateFrameworks/DocumentManagerCore.framework/DocumentManagerCore: DOCManagedPermission 
01 00 3500 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPItemManager 
01 00 3500 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPProviderDomain 
01 00 1100 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISIcon 
01 00 1100 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImage 
01 00 1100 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 2900 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSContext 
01 00 2900 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSValue 
01 00 1e00 /System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication: LAContext 
01 00 2300 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSAppLink 
01 00 2300 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 2300 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 2300 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 2300 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSDocumentProxy 
01 00 2300 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 2300 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSResourceProxy 
01 00 2200 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1a00 /System/Library/Frameworks/MapKit.framework/MapKit: MKMapItem 
01 00 1900 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPVolumeHUDController 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSByteCountFormatter 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutBoundarySupplementaryItem 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutDimension 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutGroup 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutItem 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSection 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSize 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSpacing 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSDiffableDataSourceSnapshot 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionItem 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPCookie 
01 00 2600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPCookieStorage 
01 00 2600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 3100 /usr/lib/libobjc.A.dylib: NSObject 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 2600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCredential 
01 00 2600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCredentialStorage 
01 00 2600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLProtectionSpace 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 2600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 2600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLResponse 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2300 /System/Library/Frameworks/CoreServices.framework/CoreServices: NSUserActivity 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0e00 /System/Library/Frameworks/PencilKit.framework/PencilKit: PKScribbleInteraction 
01 00 0800 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSListController 
01 00 0700 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailGenerationRequest 
01 00 0700 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailGenerator 
01 00 0f00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSStatusBarStyleOverridesAssertion 
01 00 0f00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSStatusBarStyleOverridesCoordinator 
01 00 1800 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFAppAutoFillOneTimeCodeProvider 
01 00 1800 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFAutoFillFeatureManager 
01 00 1800 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFAutoFillHelperProxy 
01 00 1800 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFCredentialProviderExtensionHelperProxy 
01 00 1800 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFCredentialProviderExtensionManager 
01 00 1800 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFDomainAssociationUtilities 
01 00 1800 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFPasswordCredentialIdentity 
01 00 1800 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFSafariCredential 
01 00 1800 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFSafariCredentialStore 
01 00 1800 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFSharablePassword 
01 00 1800 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFSharablePasswordReceiver 
01 00 1800 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFSuggestedUserProvider 
01 00 0200 /System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions: SGSuggestionsService 
01 00 1b00 /System/Library/PrivateFrameworks/TextInput.framework/TextInput: TIAutofill 
01 00 2400 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUDialRequest 
01 00 2400 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUJoinConversationRequest 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivity 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityItemProvider 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationExtensionActivity 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAutofillExtrasSuggestion 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionReusableView 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayout 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayoutConfiguration 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDiffableDataSource 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayout 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICommand 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuConfiguration 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextualAction 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentBrowserViewController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentInteractionController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentPickerViewController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragInteraction 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragItem 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreview 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewParameters 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropInteraction 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropProposal 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontMetrics 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIHoverGestureRecognizer 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInputView 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInputViewController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKBScreenTraits 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyCommand 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardImpl 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardInputModeController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardLayout 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UILocalizedIndexedCollation 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuItem 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationItem 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIOpenInIBooksActivity 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIOpenURLAction 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIOpenURLContext 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPasteboard 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPercentDrivenInteractiveTransition 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPeripheralHost 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerEffect 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerInteraction 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerLiftEffect 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerRegion 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerShape 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerStyle 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewAction 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewParameters 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintInfo 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintInteractionController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintPageRenderer 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIProgressView 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIResponder 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISceneOpenURLOptions 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreenEdgePanGestureRecognizer 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchBar 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISegmentedControl 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISelectionFeedbackGenerator 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISocialActivity 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStatusBarServer 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeActionsConfiguration 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeGestureRecognizer 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCellLayoutManagerValue1 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewDiffableDataSource 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedDragPreview 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextSuggestion 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIToolbar 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVibrancyEffect 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebClip 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebClipLinkTag 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebGeolocationPolicyDecider 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowScene 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAllowedLegacyTLSHostManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAnalyticsLogger 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAnalyticsSafariActivatedHomeScreenQuickActionEvent 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAnalyticsSafariAutoFillAuthenticationEvent 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAnalyticsSafariAutoFillAuthenticationPreferenceEvent 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAnalyticsSafariDidTerminateWebProcessBeforeNavigation 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAnalyticsSafariEnterTwoUpEvent 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAnalyticsSafariTappedOnToolbarButtonEvent 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAnalyticsSafariTwoFingerTappedOnLinkEvent 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAnalyticsSafariUsingPrivateBrowsingEvent 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAnalyticsSafariViewControllerDismissedEvent 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAnalyticsSafariViewControllerPresentedFromHostAppEvent 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAnalyticsSafariViewControllerTappedOnToolbarButtonEvent 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAppLink 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAutoFillQuirksManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAutomaticReaderActivationManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSBookmarkFolderTouchIconProvider 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCache 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCertificateWarningPageContext 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCloudTab 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCoalescedAsynchronousWriter 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSConfigurationDataTransformer 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSContentBlockersPreferenceManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCredentialMatch 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCredentialMatchCriteria 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCreditCardData 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSDigitalHealthManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFaviconProvider 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFeatureAvailability 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFluidProgressController 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFluidProgressState 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFormAutoFillMetadataCorrector 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFormControlMetadata 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFormDataController 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFormMetadata 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFormMetadataController 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSGeolocationPreferenceManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSHistory 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSHistoryAccessSessionProxy 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSLeadImageCache 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSMultiRoundAutoFillManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSOpenSearchURLTemplate 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPageZoomPreferenceManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSParsecABGroupManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPasswordAutoFillUtilities 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPasswordBreachManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPasswordGenerationManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPasswordManagerURL 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPasswordPickerHintStringGenerator 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPasswordWarningManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPasswordWarningStore 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPerSitePreference 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPerSitePreferenceManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPerSitePreferenceTimeout 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPerSitePreferencesSQLiteStore 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPrivacyReportData 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSReaderAvailabilityCheckResult 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSReaderConfigurationManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSReaderFontDownloadManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSReaderFontManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSReaderNavigationPolicyDecider 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSReaderResources 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSRecentWebSearchesController 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSRecentlyUsedAutoFillSet 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSRemotePlistController 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSQLiteDatabase 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSQLiteStatement 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSavedPassword 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSavedPasswordStore 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSScopeExitHandler 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSearchImpressionAnalyticsRecorder 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSearchProvider 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSingleCreditCardData 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSiriIntelligenceDonor 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSiteMetadataImageCache 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSiteMetadataManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTabDialog 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTabDialogCancellationContext 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTabDialogCancellationExemption 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTabDialogManager 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTemplateIconMonogramConfiguration 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTemplateIconMonogramGenerator 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTouchIconCache 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTouchIconFetchOperation 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTouchIconRequest 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTouchIconResponse 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTouchIconWebProcessPlugInPageController 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTranslationConsentAlertHelper 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTranslationContext 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSURLCompletionSessionProxy 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSURLSpoofingMitigator 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSUserMediaPermissionController 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSWebProcessPlugIn 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSWebProcessPlugInPageController 
01 00 1600 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSWellKnownURLResponseCodeReliabilityChecker 
01 00 2f00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUCreditCardDataController 
01 00 2f00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUFeatureManager 
01 00 2f00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUFormAutoFillPrompt 
01 00 2f00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUFormDataController 
01 00 2f00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUHistory 
01 00 2f00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUSheetController 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKBackForwardListItem 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKDOMElement 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKFrameInfo 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKNavigationAction 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKNavigationResponse 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKPreferences 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKProcessPool 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKUserContentController 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebProcessPlugInFrame 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebProcessPlugInNodeHandle 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebProcessPlugInScriptWorld 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebView 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebViewConfiguration 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebpagePreferences 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebsiteDataStore 
01 00 0a00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmark 
01 00 0a00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmarkCollection 
01 00 0a00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmarkWebFilterSettings 
01 00 0a00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmarksSettingsGateway 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WebEvent 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WebSecurityOrigin 
01 00 2f00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WebUIAlert 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WebView 
01 00 0400 /System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices: _ASAccountAuthenticationModificationExtensionManager 
01 00 0400 /System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices: _ASCredentialListViewController 
01 00 0400 /System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices: _ASIncomingCallObserver 
01 00 0400 /System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices: _ASPasswordCredentialAuthenticationViewController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIActivityItemCustomization 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIActivityItemCustomizationGroup 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIClickInteraction 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContextualMenuGestureRecognizer 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFallbackPresentationViewController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
01 00 2e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISheetPresentationController 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKApplicationManifest 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKElementAction 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKFrameHandle 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKProcessPoolConfiguration 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKRemoteObjectInterface 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKUserContentExtensionStore 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKWebAuthenticationAssertionResponse 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKWebsiteDataStoreConfiguration 
