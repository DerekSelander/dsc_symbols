|| __DATA_CONST.__const _ADBannerContentSizeIdentifier320x50
|| __DATA_CONST.__const _ADBannerContentSizeIdentifier480x32
|| __DATA_CONST.__const _ADBannerContentSizeIdentifierLandscape
|| __DATA_CONST.__const _ADBannerContentSizeIdentifierPortrait
|| __DATA_CONST.__const _ADClientErrorDomain
|| __DATA_CONST.__const _ADErrorDomain
|| __DATA_CONST.__const _ADSubscriptionEventInfoAdamIDKey
|| __DATA_CONST.__const _ADSubscriptionEventInfoCurrencyKey
|| __DATA_CONST.__const _ADSubscriptionEventInfoPriceKey
|| __DATA_CONST.__const _kADPolicyEngineTestStationDescriptionsComputedNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADActionViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADActionViewControllerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADAdSpace
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADBannerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADCalendarEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADCalendarEventActionViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADCanonicalRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADContentProxyAttributes
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADCountdownButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADCreativeController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADDateStringNormalizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADDimmerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADEventEditViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADExpandActionViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADHomeButtonHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADInterstitialAd
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADInterstitialAdPresentationViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADInterstitialView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADJSDateParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADLayoutOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADLocationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADLockScreenManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADMediaAnalyticsEventInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADMediaAnalyticsProgressEventInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADNSURLSessionDemultiplexer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADNSURLSessionDemultiplexerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADNSURLSessionTaskInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADPlayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADPolicyEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADPrerollBottomBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADPrerollButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADPrerollController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADPrerollSlider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADPrerollTopBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADPrerollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADPrivacyMarker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADProgressView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADRemoteSigningService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADSoftLinking
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADSubscriptionEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADTapGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADUserDeviceUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADVideoAssetURLProtocol
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADVolumeSlider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADW3CDateParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADWebView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADWebViewActionViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADWebViewGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADWebViewManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADWebViewURLProxyProtocol
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ADiTunesActionViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AdQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__ADPolicyEngineEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__ADUIViewControllerAdController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADActionViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADActionViewControllerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADAdSpace
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADBannerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADCalendarEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADCalendarEventActionViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADCanonicalRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADContentProxyAttributes
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADCountdownButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADCreativeController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADDateStringNormalizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADDimmerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADEventEditViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADExpandActionViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADHomeButtonHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADInterstitialAd
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADInterstitialAdPresentationViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADInterstitialView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADJSDateParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADLayoutOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADLocationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADLockScreenManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADMediaAnalyticsEventInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADMediaAnalyticsProgressEventInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADNSURLSessionDemultiplexer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADNSURLSessionDemultiplexerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADNSURLSessionTaskInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADPlayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADPolicyEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADPrerollBottomBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADPrerollButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADPrerollController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADPrerollSlider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADPrerollTopBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADPrerollView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADPrivacyMarker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADProgressView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADRemoteSigningService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADSoftLinking
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADSubscriptionEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADTapGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADUserDeviceUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADVideoAssetURLProtocol
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADVolumeSlider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADW3CDateParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADWebView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADWebViewActionViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADWebViewGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADWebViewManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADWebViewURLProxyProtocol
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ADiTunesActionViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AdQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__ADPolicyEngineEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__ADUIViewControllerAdController
|| __TEXT.__text _ADCanStealControllerForCreativeType
|| __TEXT.__text _ADClampedBannerSize
|| __TEXT.__text _ADClearLocationPermissionCache
|| __TEXT.__text _ADConvertScreenRectToUIOrientation
|| __TEXT.__text _ADCreativeTypeHasView
|| __TEXT.__text _ADCreativeTypeShouldCycle
|| __TEXT.__text _ADCreativeTypeSkipsVisibilityCheck
|| __TEXT.__text _ADDeviceDescription
|| __TEXT.__text _ADMakeRectilinear
|| __TEXT.__text _ADMaximumControllersForCreativeType
|| __TEXT.__text _ADPresentingViewControllerForView
|| __TEXT.__text _ADSetupSharedNSURLCache
|| __TEXT.__text _ADViewControllerForView
|| __TEXT.__text _NSErrorSafeEncodingCopy
__ AVKit: _OBJC_CLASS_$_AVPlayerViewController
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AdAnalytics: _AdAnalyticsErrorDomain
__ AdAnalytics: _OBJC_CLASS_$_AdAnalyticsCommon
__ AdAnalytics: _OBJC_CLASS_$_AdAnalyticsEventInfo
__ AdAnalytics: _OBJC_CLASS_$_AdAnalyzer
__ AdPlatforms: _OBJC_CLASS_$_ADAttribution
__ AdSupport: _OBJC_CLASS_$_ASIdentifierManager
__ AppSupport: _CPFreeSpaceRequestBytesAtPathWithCompletionBlock
__ CFNetwork: _CFURLRequestGetURL
__ CFNetwork: __CFURLCacheSetCacheEventCallBackBlock
__ CFNetwork: _kCFStreamPropertyHTTPProxyHost
__ CFNetwork: _kCFStreamPropertyHTTPProxyPort
__ CFNetwork: _kCFStreamPropertyHTTPSProxyHost
__ CFNetwork: _kCFStreamPropertyHTTPSProxyPort
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAllocatorGetDefault
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreLocation: _OBJC_CLASS_$_CLGeocoder
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _kCLLocationAccuracyKilometer
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTagClassMIMEType
__ EventKit: _OBJC_CLASS_$_EKEvent
__ EventKit: _OBJC_CLASS_$_EKEventStore
__ EventKit: _OBJC_CLASS_$_EKRecurrenceDayOfWeek
__ EventKit: _OBJC_CLASS_$_EKRecurrenceEnd
__ EventKit: _OBJC_CLASS_$_EKRecurrenceRule
__ EventKitUI: _OBJC_CLASS_$_EKEventEditViewController
__ EventKitUI: _OBJC_METACLASS_$_EKEventEditViewController
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLCache
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLCredential
__ Foundation: _OBJC_CLASS_$_NSURLProtocol
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSURLProtocol
__ Foundation: __NSDictionaryOfVariableBindings
__ MediaPlayer: _OBJC_CLASS_$_MPMoviePlayerController
__ MediaPlayer: _OBJC_CLASS_$_MPMoviePlayerViewController
__ MediaPlayer: _OBJC_CLASS_$_MPNetworkPlayabilityMonitor
__ MediaPlayer: _OBJC_CLASS_$_MPVolumeSlider
__ MediaPlayer: _OBJC_METACLASS_$_MPVolumeSlider
__ MobileKeyBag: _MKBGetDeviceLockState
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ QuartzCore: _kCATransactionDisableActions
__ SafariServices: _OBJC_CLASS_$_SFSafariViewController
__ SafariServices: _OBJC_METACLASS_$_SFSafariViewController
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ SpringBoardServices: _OBJC_CLASS_$_SBSHardwareButtonService
__ SpringBoardServices: _SBSGetScreenLockStatus
__ SpringBoardServices: _SBSRequestPasscodeUnlockAlertUI
__ TransparencyDetailsView: _OBJC_CLASS_$_NewsTransparencyViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontMetrics
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIKeyboardInputModeController
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UISlider
__ UIKit: _OBJC_CLASS_$_UIStatusBar
__ UIKit: _OBJC_CLASS_$_UIStatusBarHideAnimationParameters
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UISlider
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIAccessibilityDarkerSystemColorsEnabled
__ UIKit: _UIAccessibilityDarkerSystemColorsStatusDidChangeNotification
__ UIKit: _UIAccessibilityIsVoiceOverRunning
__ UIKit: _UIAccessibilityLayoutChangedNotification
__ UIKit: _UIAccessibilityPostNotification
__ UIKit: _UIAccessibilityScreenChangedNotification
__ UIKit: _UIAccessibilityTraitButton
__ UIKit: _UIAccessibilityTraitNotEnabled
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationOpenURLOptionUniversalLinksOnly
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UIDeviceOrientationDidChangeNotification
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIKeyboardAutomaticIsOnScreen
__ UIKit: _UIKeyboardEnableAutomaticAppearance
__ UIKit: _UIKeyboardOrderOutAutomaticSkippingAnimation
__ UIKit: _UIRoundToViewScale
__ UIKit: _UISystemRootDirectory
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: __UIApplicationIsExtension
__ UIKit: __UIApplicationLinkedOnVersion
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ WebKit: _OBJC_CLASS_$_WKBrowsingContextController
__ WebKit: _OBJC_CLASS_$_WKPreferences
__ WebKit: _OBJC_CLASS_$_WKProcessPool
__ WebKit: _OBJC_CLASS_$_WKUserContentController
__ WebKit: _OBJC_CLASS_$_WKUserScript
__ WebKit: _OBJC_CLASS_$_WKWebView
__ WebKit: _OBJC_CLASS_$_WKWebViewConfiguration
__ WebKit: _OBJC_CLASS_$_WKWebsiteDataStore
__ WebKit: _OBJC_CLASS_$__WKProcessPoolConfiguration
__ WebKit: _OBJC_CLASS_$__WKRemoteObjectInterface
__ WebKit: _OBJC_CLASS_$__WKUserStyleSheet
__ WebKit: _OBJC_METACLASS_$_WKWebView
__ iAdCore: _ADCoreAnalytics_ReportScalarMetricForClient
__ iAdCore: _ADPowerLogWithObjectsAndKeys
__ iAdServices: _ADClientSegmentDataErrorDomain
__ iAdServices: _ADDefaultsBundleID
__ iAdServices: _ADInternalErrorCode
__ iAdServices: _ADInternalErrorDomain
__ iAdServices: _ADLocationPermissionCacheURL
__ iAdServices: _ADPlaceholderAccountID
__ iAdServices: _ADShouldProxyRequestToHost
__ iAdServices: _ADWebViewProxyURLSchemeHTTP
__ iAdServices: _ADWebViewProxyURLSchemeHTTPS
__ iAdServices: _AdServingDaemonCacheCapacity
__ iAdServices: _OBJC_CLASS_$_ADAdServingDaemonConnection
__ iAdServices: _OBJC_CLASS_$_ADAdSpaceConfiguration
__ iAdServices: _OBJC_CLASS_$_ADAdSpaceEventInfo
__ iAdServices: _OBJC_CLASS_$_ADDefaults
__ iAdServices: _OBJC_CLASS_$_ADDeviceInfo
__ iAdServices: _OBJC_CLASS_$_ADMRAIDAction
__ iAdServices: _OBJC_CLASS_$_ADSInternalPoint
__ iAdServices: _OBJC_CLASS_$_ADSInternalRect
__ iAdServices: _OBJC_CLASS_$_ADSInternalSize
__ iAdServices: _OBJC_CLASS_$_ADServiceUtilities
__ iAdServices: __ADLog
__ iAdServices: _kADVideoAdvertisingIdentifier
__ iAdServices: _kADVideoURLSchemeHTTP
__ iAdServices: _kADVideoURLSchemeHTTPS
__ iAdServices: _kADViewDefaultHeight
__ iAdServices: _kADViewDefaultWidth
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _mkstemps
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
ADBannerView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <ADAdRecipient, ADDimmerViewDelegate>
 @property  UIView *highlightClippedView
 @property  UIView *highlightHittableView
 @property  UILabel *idLbl
 @property  NSTimer *highlightUpdateTimer
 @property  ADPrivacyMarker *privacyMarker
 @property  NSString *authenticationUserName
 @property  NSURL *serverURL
 @property  BOOL createdForIBInternal
 @property  BOOL bannerViewActionInProgress
 @property  ADAdSpace *adSpace
 @property  ADDimmerView *dimmerView
 @property  BOOL dimmed
 @property  BOOL determiningConstraintBasedWidth
 @property  double constraintBasedWidth
 @property  BOOL inSecondConstraintsPass
 @property  BOOL scrolling
 @property  {CGSize=dd} portraitSize
 @property  {CGSize=dd} landscapeSize
 @property  BOOL imageUpdateEnabled
 @property  BOOL debugHighlightEnabled
 @property  BOOL internalAdTypeCanChange
 @property  NSString *originID
 @property  NSDate *adDisplayDate
 @property  BOOL requestCalledbackError
 @property  NSDate *loadStartTime
 @property  NSDate *webLoadStartTime
 @property  NSDate *loadEndTime
 @property  double adDataLoadTime
 @property  double bannerLoadTime
 @property  <ADBannerViewDelegate> *weakDelegate
 @property  long long adType
 @property  <ADBannerViewDelegate> *delegate
 @property  BOOL bannerLoaded
 @property  NSString *advertisingSection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int internalAdType
 @property  ADLayoutOptions *layoutOptions
 @property  long long options
 @property  UIView *adSpaceView
 @property  UIViewController *presentingViewController
 @property  NSString *adResponseId
 @property  int screenfuls
 @property  int slotPosition
 @property  BOOL displayed
 @property  BOOL reUsed
 @property  long long lastErrorCode

  // class methods
  +[ADBannerView requiresConstraintBasedLayout]
  +[ADBannerView _sizeThatFitsSize:adType:statusBarOrientationIsPortrait:]
  +[ADBannerView sizeFromBannerContentSizeIdentifier:]
  +[ADBannerView _landscapeBannerSize]
  +[ADBannerView _portraitBannerSize]
  +[ADBannerView setServerURL:]
  +[ADBannerView _frameThatFits:adType:statusBarOrientationIsPortrait:]
  +[ADBannerView _adWindowBounds]

  // instance methods
  -[ADBannerView dealloc]
  -[ADBannerView options]
  -[ADBannerView encodeWithCoder:]
  -[ADBannerView initWithCoder:]
  -[ADBannerView delegate]
  -[ADBannerView setDelegate:]
  -[ADBannerView .cxx_destruct]
  -[ADBannerView identifier]
  -[ADBannerView setIdentifier:]
  -[ADBannerView context]
  -[ADBannerView uniqueIdentifier]
  -[ADBannerView action]
  -[ADBannerView setContext:]
  -[ADBannerView setBounds:]
  -[ADBannerView setCenter:]
  -[ADBannerView setTransform:]
  -[ADBannerView setHidden:]
  -[ADBannerView layoutOptions]
  -[ADBannerView _commonInit]
  -[ADBannerView setFrame:]
  -[ADBannerView intrinsicContentSize]
  -[ADBannerView initWithFrame:]
  -[ADBannerView traitCollectionDidChange:]
  -[ADBannerView setAutoresizingMask:]
  -[ADBannerView sizeThatFits:]
  -[ADBannerView setAlpha:]
  -[ADBannerView layoutSubviews]
  -[ADBannerView presentingViewController]
  -[ADBannerView updateConstraints]
  -[ADBannerView didMoveToWindow]
  -[ADBannerView displayed]
  -[ADBannerView hasAction]
  -[ADBannerView _needsDoubleUpdateConstraintsPass]
  -[ADBannerView _prepareForFirstIntrinsicContentSizeCalculation]
  -[ADBannerView _prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:]
  -[ADBannerView _setInSecondConstraintsPass:]
  -[ADBannerView _resetToBeginningOfDoublePass]
  -[ADBannerView resizeWithOldSuperviewSize:]
  -[ADBannerView internalDelegate]
  -[ADBannerView setInternalDelegate:]
  -[ADBannerView setDisplayed:]
  -[ADBannerView _accessibilityUserTestingElementAttributes]
  -[ADBannerView audioURL]
  -[ADBannerView scrolling]
  -[ADBannerView setScrolling:]
  -[ADBannerView initFromIBWithFrame:]
  -[ADBannerView setDimmed:]
  -[ADBannerView dimmed]
  -[ADBannerView serverURL]
  -[ADBannerView landscapeSize]
  -[ADBannerView setLandscapeSize:]
  -[ADBannerView portraitSize]
  -[ADBannerView setPortraitSize:]
  -[ADBannerView adSpace]
  -[ADBannerView _initWithInternalAdType:options:]
  -[ADBannerView _initWithInternalAdType:layoutOptions:options:]
  -[ADBannerView initFromIBWithFrame:adType:]
  -[ADBannerView internalAdType]
  -[ADBannerView setDimmerView:]
  -[ADBannerView dimmerView]
  -[ADBannerView setPrivacyMarker:]
  -[ADBannerView privacyMarker]
  -[ADBannerView privacyButtonWasTapped]
  -[ADBannerView setAdDisplayDate:]
  -[ADBannerView setLoadStartTime:]
  -[ADBannerView setWebLoadStartTime:]
  -[ADBannerView setLoadEndTime:]
  -[ADBannerView setRequestCalledbackError:]
  -[ADBannerView canReuseForContext:]
  -[ADBannerView hasImpressed]
  -[ADBannerView _resetHighlightTimer]
  -[ADBannerView bannerTappedAtPoint:]
  -[ADBannerView requiresMRAID]
  -[ADBannerView bannerTappedAtPoint:withMRAIDAction:]
  -[ADBannerView setBannerViewActionInProgress:]
  -[ADBannerView reportNativeClickEvent]
  -[ADBannerView displayCreativeView]
  -[ADBannerView loadEndTime]
  -[ADBannerView adDataLoadTime]
  -[ADBannerView bannerLoadTime]
  -[ADBannerView publicImpressionAttributes]
  -[ADBannerView _updateHighlight:]
  -[ADBannerView webLoadStartTime]
  -[ADBannerView loadStartTime]
  -[ADBannerView setAdDataLoadTime:]
  -[ADBannerView setBannerLoadTime:]
  -[ADBannerView nativeMetadata]
  -[ADBannerView setOriginID:]
  -[ADBannerView hasTransparencyDetails]
  -[ADBannerView _setAdPrivacyMarkPosition]
  -[ADBannerView _forwardErrorToDelegate:]
  -[ADBannerView beginAction]
  -[ADBannerView setLastErrorCode:]
  -[ADBannerView requestCalledbackError]
  -[ADBannerView setAdvertisingSection:]
  -[ADBannerView cancelBannerViewAction]
  -[ADBannerView setServerURL:]
  -[ADBannerView setAuthenticationUserName:]
  -[ADBannerView skipThreshold]
  -[ADBannerView setDeterminingConstraintBasedWidth:]
  -[ADBannerView setConstraintBasedWidth:]
  -[ADBannerView determiningConstraintBasedWidth]
  -[ADBannerView constraintBasedWidth]
  -[ADBannerView setInSecondConstraintsPass:]
  -[ADBannerView screenfuls]
  -[ADBannerView slotPosition]
  -[ADBannerView currentAdIdentifier]
  -[ADBannerView registerVideoPlayerForAdAnalytics:]
  -[ADBannerView unregisterVideoPlayerForAdAnalytics:]
  -[ADBannerView serverBannerViewWillLoad]
  -[ADBannerView serverBannerViewDidLoad]
  -[ADBannerView serverBannerViewDidFailToReceiveAdWithError:]
  -[ADBannerView serverStoryboardDidTransitionOut]
  -[ADBannerView storyboardViewControllerDidPresent]
  -[ADBannerView pauseBannerMedia]
  -[ADBannerView resumeBannerMedia]
  -[ADBannerView shouldTestVisibilityAtPoint:]
  -[ADBannerView adlibManagedVideoAdDidImpress]
  -[ADBannerView adlibManagedVideoAdDidResumePlay]
  -[ADBannerView adlibManagedVideoAdDidPausePlay]
  -[ADBannerView adlibManagedVideoAdDidCompletePlay:]
  -[ADBannerView adlibManagedVideoAdDidTapForMoreInfo]
  -[ADBannerView adlibManagedVideoAdDidTapVideo]
  -[ADBannerView adlibManagedVideoAdDidToggleToMute:]
  -[ADBannerView setLayoutOptions:]
  -[ADBannerView adSpaceView]
  -[ADBannerView adResponseId]
  -[ADBannerView setAdResponseId:]
  -[ADBannerView setScreenfuls:]
  -[ADBannerView setSlotPosition:]
  -[ADBannerView reUsed]
  -[ADBannerView setReUsed:]
  -[ADBannerView lastErrorCode]
  -[ADBannerView setViewSizeInPortrait:inLandscape:]
  -[ADBannerView creativeControllerViewWasTappedAtPoint:withMRAIDAction:]
  -[ADBannerView dimmerView:didReceiveTouchUpAtPoint:]
  -[ADBannerView enableDimmerView:]
  -[ADBannerView initWithAdType:]
  -[ADBannerView cycleImpressionImmediately]
  -[ADBannerView setInternalAdType:]
  -[ADBannerView prerollDidStart]
  -[ADBannerView prerollDidStop]
  -[ADBannerView displayBannerView]
  -[ADBannerView removeCreativeView]
  -[ADBannerView setRequiredContentSizeIdentifiers:]
  -[ADBannerView requiredContentSizeIdentifiers]
  -[ADBannerView setCurrentContentSizeIdentifier:]
  -[ADBannerView currentContentSizeIdentifier]
  -[ADBannerView suspendImpressionCycling]
  -[ADBannerView resumeImpressionCycling]
  -[ADBannerView videoAssets]
  -[ADBannerView playbackStarted]
  -[ADBannerView playbackStartedForImpressionSource:]
  -[ADBannerView playbackPaused]
  -[ADBannerView playbackResumed]
  -[ADBannerView playbackFinished:]
  -[ADBannerView playbackFailed:]
  -[ADBannerView userDidSkipPreroll]
  -[ADBannerView nextContentVideoStartedPlaying]
  -[ADBannerView bannerDidAppear]
  -[ADBannerView bannerDidDisappear]
  -[ADBannerView cancelScheduledAd]
  -[ADBannerView scheduleAd]
  -[ADBannerView adType]
  -[ADBannerView isBannerLoaded]
  -[ADBannerView isBannerViewActionInProgress]
  -[ADBannerView advertisingSection]
  -[ADBannerView highlightClippedView]
  -[ADBannerView setHighlightClippedView:]
  -[ADBannerView highlightHittableView]
  -[ADBannerView setHighlightHittableView:]
  -[ADBannerView idLbl]
  -[ADBannerView setIdLbl:]
  -[ADBannerView highlightUpdateTimer]
  -[ADBannerView setHighlightUpdateTimer:]
  -[ADBannerView authenticationUserName]
  -[ADBannerView createdForIBInternal]
  -[ADBannerView setAdSpace:]
  -[ADBannerView inSecondConstraintsPass]
  -[ADBannerView imageUpdateEnabled]
  -[ADBannerView setImageUpdateEnabled:]
  -[ADBannerView debugHighlightEnabled]
  -[ADBannerView setDebugHighlightEnabled:]
  -[ADBannerView internalAdTypeCanChange]
  -[ADBannerView setInternalAdTypeCanChange:]
  -[ADBannerView originID]
  -[ADBannerView adDisplayDate]
  -[ADBannerView weakDelegate]
  -[ADBannerView setWeakDelegate:]
  -[ADBannerView videoBannerDidLoad:]
  -[ADBannerView videoBannerDidUnload:]
  -[ADBannerView playbackDidStart:]
  -[ADBannerView playbackDidPause:]
  -[ADBannerView playbackDidResume:]
  -[ADBannerView playbackDidFinish:]
  -[ADBannerView playbackDidReachProgressEvent:]
  -[ADBannerView playbackAudioWasMuted:]
  -[ADBannerView playbackAudioWasUnmuted:]
  -[ADBannerView playbackDidEnterFullscreen:]
  -[ADBannerView playbackDidExitFullscreen:]
  -[ADBannerView playbackMediaWasSkipped:]
  -[ADBannerView playbackFailed:forURL:]
  -[ADBannerView videoBannerVisibilityDidChange:]
  -[ADBannerView videoBannerTouched:]


ADInterstitialAd : NSObject /usr/lib/libSystem.B.dylib <ADAdRecipient>
 @property  BOOL dimmingEnabled
 @property  int creativeType
 @property  ADInterstitialAdPresentationViewController *presentationViewController
 @property  BOOL requiresMRAID
 @property  BOOL requestCalledbackError
 @property  ADAdSpace *adSpace
 @property  ADInterstitialView *interstitialView
 @property  <ADInterstitialAdDelegate> *internalDelegate
 @property  UIViewController *internalPresentingViewController
 @property  BOOL loaded
 @property  BOOL canLoadMoreThanOnce
 @property  BOOL hasLoadedFirstAd
 @property  BOOL actionInProgress
 @property  <ADInterstitialAdDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int internalAdType
 @property  ADLayoutOptions *layoutOptions
 @property  long long options
 @property  UIView *adSpaceView
 @property  UIViewController *presentingViewController
 @property  NSString *adResponseId
 @property  int screenfuls
 @property  int slotPosition
 @property  BOOL displayed
 @property  BOOL reUsed
 @property  long long lastErrorCode

  // instance methods
  -[ADInterstitialAd init]
  -[ADInterstitialAd dealloc]
  -[ADInterstitialAd options]
  -[ADInterstitialAd delegate]
  -[ADInterstitialAd setDelegate:]
  -[ADInterstitialAd .cxx_destruct]
  -[ADInterstitialAd identifier]
  -[ADInterstitialAd isLoaded]
  -[ADInterstitialAd context]
  -[ADInterstitialAd setContext:]
  -[ADInterstitialAd layoutOptions]
  -[ADInterstitialAd presentingViewController]
  -[ADInterstitialAd cancelAction]
  -[ADInterstitialAd setSection:]
  -[ADInterstitialAd displayed]
  -[ADInterstitialAd internalDelegate]
  -[ADInterstitialAd setInternalDelegate:]
  -[ADInterstitialAd setDisplayed:]
  -[ADInterstitialAd presentFromViewController:]
  -[ADInterstitialAd serverURL]
  -[ADInterstitialAd presentationViewController]
  -[ADInterstitialAd setPresentationViewController:]
  -[ADInterstitialAd setLoaded:]
  -[ADInterstitialAd adSpace]
  -[ADInterstitialAd _initWithInternalAdType:layoutOptions:options:]
  -[ADInterstitialAd internalAdType]
  -[ADInterstitialAd privacyButtonWasTapped]
  -[ADInterstitialAd setRequestCalledbackError:]
  -[ADInterstitialAd hasImpressed]
  -[ADInterstitialAd bannerTappedAtPoint:]
  -[ADInterstitialAd requiresMRAID]
  -[ADInterstitialAd bannerTappedAtPoint:withMRAIDAction:]
  -[ADInterstitialAd setLastErrorCode:]
  -[ADInterstitialAd requestCalledbackError]
  -[ADInterstitialAd setServerURL:]
  -[ADInterstitialAd setAuthenticationUserName:]
  -[ADInterstitialAd screenfuls]
  -[ADInterstitialAd slotPosition]
  -[ADInterstitialAd currentAdIdentifier]
  -[ADInterstitialAd serverBannerViewWillLoad]
  -[ADInterstitialAd serverBannerViewDidLoad]
  -[ADInterstitialAd serverBannerViewDidFailToReceiveAdWithError:]
  -[ADInterstitialAd serverStoryboardDidTransitionOut]
  -[ADInterstitialAd storyboardViewControllerDidPresent]
  -[ADInterstitialAd pauseBannerMedia]
  -[ADInterstitialAd resumeBannerMedia]
  -[ADInterstitialAd shouldTestVisibilityAtPoint:]
  -[ADInterstitialAd adlibManagedVideoAdDidImpress]
  -[ADInterstitialAd adlibManagedVideoAdDidResumePlay]
  -[ADInterstitialAd adlibManagedVideoAdDidPausePlay]
  -[ADInterstitialAd adlibManagedVideoAdDidCompletePlay:]
  -[ADInterstitialAd adlibManagedVideoAdDidTapForMoreInfo]
  -[ADInterstitialAd adlibManagedVideoAdDidTapVideo]
  -[ADInterstitialAd adlibManagedVideoAdDidToggleToMute:]
  -[ADInterstitialAd setLayoutOptions:]
  -[ADInterstitialAd adSpaceView]
  -[ADInterstitialAd adResponseId]
  -[ADInterstitialAd setAdResponseId:]
  -[ADInterstitialAd setScreenfuls:]
  -[ADInterstitialAd setSlotPosition:]
  -[ADInterstitialAd reUsed]
  -[ADInterstitialAd setReUsed:]
  -[ADInterstitialAd lastErrorCode]
  -[ADInterstitialAd creativeControllerViewWasTappedAtPoint:withMRAIDAction:]
  -[ADInterstitialAd setAdSpace:]
  -[ADInterstitialAd initWithCreativeType:options:]
  -[ADInterstitialAd setDimmingEnabled:]
  -[ADInterstitialAd interstitialView]
  -[ADInterstitialAd internalPresentingViewController]
  -[ADInterstitialAd creativeType]
  -[ADInterstitialAd _presentFromViewController:]
  -[ADInterstitialAd setInternalPresentingViewController:]
  -[ADInterstitialAd hasLoadedFirstAd]
  -[ADInterstitialAd canLoadMoreThanOnce]
  -[ADInterstitialAd _considerClosingAdSpace]
  -[ADInterstitialAd setHasLoadedFirstAd:]
  -[ADInterstitialAd _notifyDelegateOfBannerLoad]
  -[ADInterstitialAd setActionInProgress:]
  -[ADInterstitialAd presentInView:]
  -[ADInterstitialAd clickAction]
  -[ADInterstitialAd _dismissModalInterstitial]
  -[ADInterstitialAd missedOpportunityToFill]
  -[ADInterstitialAd isActionInProgress]
  -[ADInterstitialAd dimmingEnabled]
  -[ADInterstitialAd setCreativeType:]
  -[ADInterstitialAd setInterstitialView:]
  -[ADInterstitialAd setCanLoadMoreThanOnce:]


ADInterstitialAdPresentationViewController : UIViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  ADInterstitialAd *interstitialAd
 @property  ADCountdownButton *closeButton

  // instance methods
  -[ADInterstitialAdPresentationViewController .cxx_destruct]
  -[ADInterstitialAdPresentationViewController loadView]
  -[ADInterstitialAdPresentationViewController viewDidLayoutSubviews]
  -[ADInterstitialAdPresentationViewController viewDidAppear:]
  -[ADInterstitialAdPresentationViewController viewDidDisappear:]
  -[ADInterstitialAdPresentationViewController wantsFullScreenLayout]
  -[ADInterstitialAdPresentationViewController prefersStatusBarHidden]
  -[ADInterstitialAdPresentationViewController closeButton]
  -[ADInterstitialAdPresentationViewController setCloseButton:]
  -[ADInterstitialAdPresentationViewController shouldTestVisibilityAtPoint:]
  -[ADInterstitialAdPresentationViewController initForInterstitialAd:]
  -[ADInterstitialAdPresentationViewController setInterstitialAd:]
  -[ADInterstitialAdPresentationViewController interstitialAd]


ADExpandActionViewController : ADActionViewController <WKNavigationDelegate>
 @property  ADWebView *webView
 @property  ADCountdownButton *dismissButton
 @property  BOOL adIsDismissing
 @property  BOOL visible
 @property  NSURL *URL
 @property  {CGSize=dd} maximumExpandedSize
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} webViewFrame
 @property  _WKRemoteObjectInterface *remoteObjectInterface
 @property  ADWebViewGestureRecognizer *gestureRecognizer
 @property  NSString *creativeIdentifier
 @property  BOOL browserContextControllerDidLoad
 @property  BOOL shouldBlockNavigation
 @property  BOOL tapWasRecognized
 @property  ADHomeButtonHandler *homeButtonHandler
 @property  id notificationObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ADExpandActionViewController dealloc]
  -[ADExpandActionViewController .cxx_destruct]
  -[ADExpandActionViewController setRemoteObjectInterface:]
  -[ADExpandActionViewController setURL:]
  -[ADExpandActionViewController URL]
  -[ADExpandActionViewController remoteObjectInterface]
  -[ADExpandActionViewController setVisible:]
  -[ADExpandActionViewController isVisible]
  -[ADExpandActionViewController webView]
  -[ADExpandActionViewController dismiss]
  -[ADExpandActionViewController viewWillAppear:]
  -[ADExpandActionViewController viewWillDisappear:]
  -[ADExpandActionViewController viewWillLayoutSubviews]
  -[ADExpandActionViewController viewDidAppear:]
  -[ADExpandActionViewController viewDidDisappear:]
  -[ADExpandActionViewController setDismissButton:]
  -[ADExpandActionViewController dismissButton]
  -[ADExpandActionViewController setGestureRecognizer:]
  -[ADExpandActionViewController gestureRecognizer]
  -[ADExpandActionViewController setWebView:]
  -[ADExpandActionViewController setNotificationObserver:]
  -[ADExpandActionViewController notificationObserver]
  -[ADExpandActionViewController webView:decidePolicyForNavigationAction:decisionHandler:]
  -[ADExpandActionViewController webView:didFailProvisionalNavigation:withError:]
  -[ADExpandActionViewController webView:didFailNavigation:withError:]
  -[ADExpandActionViewController webViewWebContentProcessDidTerminate:]
  -[ADExpandActionViewController _tapRecognized:]
  -[ADExpandActionViewController _dismissKeyboard]
  -[ADExpandActionViewController _registerExportedObjectInterface]
  -[ADExpandActionViewController _dismissWithSystemEvent:]
  -[ADExpandActionViewController setHomeButtonHandler:]
  -[ADExpandActionViewController homeButtonHandler]
  -[ADExpandActionViewController _unregisterExportedObjectInterface]
  -[ADExpandActionViewController creativeIdentifier]
  -[ADExpandActionViewController _updateWebViewFrame]
  -[ADExpandActionViewController _incrementCreativeIdentifier]
  -[ADExpandActionViewController webViewFrame]
  -[ADExpandActionViewController _dismissButtonTapped]
  -[ADExpandActionViewController maximumExpandedSize]
  -[ADExpandActionViewController _updateJSOExpandedSize]
  -[ADExpandActionViewController adIsDismissing]
  -[ADExpandActionViewController setAdIsDismissing:]
  -[ADExpandActionViewController webProcessPlugInDidCreateBrowserContextController]
  -[ADExpandActionViewController webProcessPlugInWillDestroyBrowserContextController]
  -[ADExpandActionViewController webProcessPlugInBrowserContextControllerGlobalObjectIsAvailableForFrame]
  -[ADExpandActionViewController webProcessMRAIDJSODidCallClose]
  -[ADExpandActionViewController webProcessMRAIDJSODidCallExpand:withMaximumSize:]
  -[ADExpandActionViewController webProcessMRAIDJSODidCallOpen:]
  -[ADExpandActionViewController _navigationIsBlocked]
  -[ADExpandActionViewController _resetGestureFlags]
  -[ADExpandActionViewController setCreativeIdentifier:]
  -[ADExpandActionViewController shouldBlockNavigation]
  -[ADExpandActionViewController setShouldBlockNavigation:]
  -[ADExpandActionViewController setTapWasRecognized:]
  -[ADExpandActionViewController tapWasRecognized]
  -[ADExpandActionViewController setBrowserContextControllerDidLoad:]
  -[ADExpandActionViewController _requestOpenURL:]
  -[ADExpandActionViewController browserContextControllerDidLoad]
  -[ADExpandActionViewController clientApplicationDidEnterBackground]
  -[ADExpandActionViewController didSetAdSpace]
  -[ADExpandActionViewController setMaximumExpandedSize:]


ADInterstitialView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <ADDimmerViewDelegate>
 @property  ADInterstitialAd *interstitialAd
 @property  ADPrivacyMarker *privacyMarker
 @property  ADDimmerView *dimmerView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} dismissButtonRect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ADInterstitialView requiresConstraintBasedLayout]

  // instance methods
  -[ADInterstitialView dealloc]
  -[ADInterstitialView .cxx_destruct]
  -[ADInterstitialView setBounds:]
  -[ADInterstitialView setTransform:]
  -[ADInterstitialView setHidden:]
  -[ADInterstitialView removeFromSuperview]
  -[ADInterstitialView intrinsicContentSize]
  -[ADInterstitialView traitCollectionDidChange:]
  -[ADInterstitialView setAlpha:]
  -[ADInterstitialView didMoveToWindow]
  -[ADInterstitialView setDimmerView:]
  -[ADInterstitialView dimmerView]
  -[ADInterstitialView setPrivacyMarker:]
  -[ADInterstitialView privacyMarker]
  -[ADInterstitialView dimmerView:didReceiveTouchUpAtPoint:]
  -[ADInterstitialView enableDimmerView:]
  -[ADInterstitialView initForInterstitialAd:]
  -[ADInterstitialView enablePrivacyButton]
  -[ADInterstitialView disableDimmerView]
  -[ADInterstitialView positionAdPrivacyMark]
  -[ADInterstitialView setInterstitialAd:]
  -[ADInterstitialView interstitialAd]
  -[ADInterstitialView setDismissButtonRect:]
  -[ADInterstitialView _privacyButtonWasTapped]
  -[ADInterstitialView dismissButtonRect]


ADNSURLSessionDemultiplexerManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *sessionDemultiplexerForIdentifier
 @property  NSObject<OS_dispatch_queue> *demuxManagerQueue
 @property  NSURLSessionConfiguration *proxySessionConfigurationLegacy
 @property  NSURLSessionConfiguration *proxySessionConfigurationConnect
 @property  NSArray *protocolClasses

  // class methods
  +[ADNSURLSessionDemultiplexerManager sharedManager]

  // instance methods
  -[ADNSURLSessionDemultiplexerManager init]
  -[ADNSURLSessionDemultiplexerManager .cxx_destruct]
  -[ADNSURLSessionDemultiplexerManager protocolClasses]
  -[ADNSURLSessionDemultiplexerManager setProtocolClasses:]
  -[ADNSURLSessionDemultiplexerManager unregisterSessionDemultiplexerWithIdentifier:]
  -[ADNSURLSessionDemultiplexerManager proxySessionConfigurationConnect]
  -[ADNSURLSessionDemultiplexerManager proxySessionConfigurationLegacy]
  -[ADNSURLSessionDemultiplexerManager sessionDemultiplexerForIdentifier]
  -[ADNSURLSessionDemultiplexerManager sessionConfigurationForProxyType:]
  -[ADNSURLSessionDemultiplexerManager demuxManagerQueue]
  -[ADNSURLSessionDemultiplexerManager contentProxyURLDidChange]
  -[ADNSURLSessionDemultiplexerManager contentProxyURLConnectDidChange]
  -[ADNSURLSessionDemultiplexerManager proxyTypeDidChange]
  -[ADNSURLSessionDemultiplexerManager configVersionDidChange]
  -[ADNSURLSessionDemultiplexerManager sessionDemultiplexerForAdByIdentifier:maximumRequestCount:proxyType:]
  -[ADNSURLSessionDemultiplexerManager pretapRequestCountForIdentifier:]
  -[ADNSURLSessionDemultiplexerManager setSessionDemultiplexerForIdentifier:]
  -[ADNSURLSessionDemultiplexerManager setDemuxManagerQueue:]
  -[ADNSURLSessionDemultiplexerManager setProxySessionConfigurationLegacy:]
  -[ADNSURLSessionDemultiplexerManager setProxySessionConfigurationConnect:]


ADSession : NSObject /usr/lib/libSystem.B.dylib <ADSession_RPC, ADAdServingDaemonConnectionDelegate>
 @property  NSMutableArray *adSpaces
 @property  int classicUnavailableToken
 @property  ADAdServingDaemonConnection *connection
 @property  NSString *bundleIdentifier
 @property  NSObject<OS_dispatch_queue> *adSpaceQueue
 @property  BOOL applicationCanRecieveAds
 @property  <ADSSession_RPC> *rpcProxy
 @property  ADDeviceInfo *deviceInfo
 @property  BOOL applicationCanReceiveBackgroundAds
 @property  BOOL appExtensionCanReceiveAds
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ADSession sharedInstance]
  +[ADSession adShouldCreateADSession]

  // instance methods
  -[ADSession init]
  -[ADSession dealloc]
  -[ADSession .cxx_destruct]
  -[ADSession bundleIdentifier]
  -[ADSession connection]
  -[ADSession setConnection:]
  -[ADSession setBundleIdentifier:]
  -[ADSession configureConnection:]
  -[ADSession deviceInfo]
  -[ADSession setDeviceInfo:]
  -[ADSession _appDidEnterBackground]
  -[ADSession rpcProxy]
  -[ADSession _appDidBecomeActive]
  -[ADSession adAnalyticsEventReceived:]
  -[ADSession establishRPCConnection]
  -[ADSession createDeviceInfo]
  -[ADSession updateDeviceInfo]
  -[ADSession orientationChanged:]
  -[ADSession appExtensionCanReceiveAds]
  -[ADSession applicationCanReceiveBackgroundAds]
  -[ADSession performWhenConnected:]
  -[ADSession rpcProxyWithErrorHandler:]
  -[ADSession _remote_deviceInfo:]
  -[ADSession _remote_policyEngineDidIdleDisable]
  -[ADSession _remote_closeClientAdSpaceWithIdentifier:]
  -[ADSession _remote_setRequiresFastVisibilityTestOnly:withIdentifier:]
  -[ADSession _remote_creativeWithAdSpaceIdentifier:didFailWithError:]
  -[ADSession _remote_adImpressionDidLoadWithPublicAttributes:identifier:]
  -[ADSession _remote_adImpressionReportedWithIdentifier:]
  -[ADSession _remote_openURL:forAdSpaceWithIdentifier:]
  -[ADSession _remote_requestViewControllerWithClassName:forAdSpaceControllerWithIdentifier:forAdSpaceWithIdentifier:]
  -[ADSession _remote_actionViewControllerReadyForPresentationForAdSpaceWithIdentifier:]
  -[ADSession _remote_dismissViewControllerForAdSpaceWithIdentifier:withCompletionHandler:]
  -[ADSession _remote_dismissViewControllerForAdSpaceWithIdentifier:]
  -[ADSession _remote_contentProxyURLDidChange:]
  -[ADSession _remote_contentProxyURLConnectDidChange:]
  -[ADSession _remote_proxyTypeDidChange:]
  -[ADSession _remote_configVersionDidChange:]
  -[ADSession _remote_adDataForAdSpace:completionHandler:]
  -[ADSession _linkedOnVersion]
  -[ADSession _currentClientAdSpaces]
  -[ADSession adSpaces]
  -[ADSession adSpaceQueue]
  -[ADSession _adSpaceForIdentifier:]
  -[ADSession addClientToSegments:replaceExisting:privateSegment:]
  -[ADSession adServingDaemonMachServiceName]
  -[ADSession shouldConnectToAdServingDaemon]
  -[ADSession adServingDaemonConnectionEstablished]
  -[ADSession adServingDaemonConnectionLost]
  -[ADSession additionalAdServingDaemonLaunchOptions]
  -[ADSession registerAdSpace:]
  -[ADSession unregisterAdSpace:]
  -[ADSession _remote_updateActionViewControllerOrientation:forAdSpaceWithIdentifier:]
  -[ADSession reportPrerollRequest]
  -[ADSession _reportAdSubscriptionEvent:]
  -[ADSession addClientToSegments:replaceExisting:]
  -[ADSession segmentDataForSignedInUserWithBlock:]
  -[ADSession prepareForAdRequests]
  -[ADSession setApplicationCanReceiveBackgroundAds:]
  -[ADSession setAppExtensionCanReceiveAds:]
  -[ADSession setAdSpaces:]
  -[ADSession classicUnavailableToken]
  -[ADSession setClassicUnavailableToken:]
  -[ADSession setAdSpaceQueue:]
  -[ADSession applicationCanRecieveAds]
  -[ADSession setApplicationCanRecieveAds:]


ADWebViewActionViewController : SFSafariViewController /System/Library/PrivateFrameworks/MobileKeyBag.framework/MobileKeyBag
 @property  ADHomeButtonHandler *homeButtonHandler
 @property  id notificationObserver
 @property  <ADWebViewActionViewControllerDelegate> *delegate

  // instance methods
  -[ADWebViewActionViewController dealloc]
  -[ADWebViewActionViewController .cxx_destruct]
  -[ADWebViewActionViewController viewDidAppear:]
  -[ADWebViewActionViewController viewDidDisappear:]
  -[ADWebViewActionViewController setNotificationObserver:]
  -[ADWebViewActionViewController notificationObserver]
  -[ADWebViewActionViewController dismissView]
  -[ADWebViewActionViewController setHomeButtonHandler:]
  -[ADWebViewActionViewController homeButtonHandler]
  -[ADWebViewActionViewController dismissViewForHomeButton]


ADPrerollController : NSObject /usr/lib/libSystem.B.dylib <ADPrerollViewDelegate, ADPlayerDelegate>
 @property  unsigned long type
 @property  MPMoviePlayerController *moviePlayerController
 @property  ADPrerollView *view
 @property  ADPlayer *adPlayer
 @property  BOOL setupInProgress
 @property  BOOL isObservingThirdPartyAVPlayer
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ADPrerollController init]
  -[ADPrerollController dealloc]
  -[ADPrerollController type]
  -[ADPrerollController .cxx_destruct]
  -[ADPrerollController cancel]
  -[ADPrerollController observeValueForKeyPath:ofObject:change:context:]
  -[ADPrerollController completionHandler]
  -[ADPrerollController setCompletionHandler:]
  -[ADPrerollController view]
  -[ADPrerollController setView:]
  -[ADPrerollController doneButtonPressed]
  -[ADPrerollController shutdown]
  -[ADPrerollController _advertisementView]
  -[ADPrerollController initWithMoviePlayerController:]
  -[ADPrerollController setMoviePlayerController:]
  -[ADPrerollController _appWillResignActive]
  -[ADPrerollController setupInProgress]
  -[ADPrerollController setSetupInProgress:]
  -[ADPrerollController _beginPlayback]
  -[ADPrerollController adPlayer]
  -[ADPrerollController _isEmbedded]
  -[ADPrerollController moviePlayerController]
  -[ADPrerollController setAdPlayer:]
  -[ADPrerollController _addAccessibilityIdentifier:]
  -[ADPrerollController prerollViewRequestsEmbeddedStatus]
  -[ADPrerollController playButtonPressed]
  -[ADPrerollController pauseButtonPressed]
  -[ADPrerollController skipButtonPressed]
  -[ADPrerollController actionButtonPressed]
  -[ADPrerollController privacyButtonPressed]
  -[ADPrerollController adPlayerDidTimeout:]
  -[ADPrerollController adPlayerFailedToLoadAsset:]
  -[ADPrerollController adPlayerFailedToPlayWithUnknownError:]
  -[ADPrerollController adPlayer:readyForPlaybackWithAVPlayer:impressionProperties:]
  -[ADPrerollController adPlayer:elapsedTime:totalTime:]
  -[ADPrerollController adPlayerDidFinishPlayback:]
  -[ADPrerollController viewControllerForActionFromAdPlayer:]
  -[ADPrerollController adPlayer:didChangePlaybackState:]
  -[ADPrerollController playPrerollAdWithCompletion:]
  -[ADPrerollController adPlayerDidBeginAction:]
  -[ADPrerollController _handlePlaybackCompletion:]
  -[ADPrerollController isObservingThirdPartyAVPlayer]
  -[ADPrerollController setIsObservingThirdPartyAVPlayer:]


ADTapGestureRecognizer : UIGestureRecognizer /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  long long finalTrackingID
 @property  @? touchDownHandler
 @property  @? touchMovedHandler
 @property  @? touchUpHandler

  // instance methods
  -[ADTapGestureRecognizer .cxx_destruct]
  -[ADTapGestureRecognizer reset]
  -[ADTapGestureRecognizer touchesBegan:withEvent:]
  -[ADTapGestureRecognizer touchesMoved:withEvent:]
  -[ADTapGestureRecognizer touchesEnded:withEvent:]
  -[ADTapGestureRecognizer touchesCancelled:withEvent:]
  -[ADTapGestureRecognizer finalTrackingID]
  -[ADTapGestureRecognizer setFinalTrackingID:]
  -[ADTapGestureRecognizer touchDownHandler]
  -[ADTapGestureRecognizer setTouchDownHandler:]
  -[ADTapGestureRecognizer touchMovedHandler]
  -[ADTapGestureRecognizer setTouchMovedHandler:]
  -[ADTapGestureRecognizer touchUpHandler]
  -[ADTapGestureRecognizer setTouchUpHandler:]


ADAdSpace : NSObject /usr/lib/libSystem.B.dylib <NewsTransparencyViewControllerDelegate, ADWebViewActionViewControllerDelegate, ADCreativeControllerDelegate>
 @property  <ADAdRecipient> *recipient
 @property  long long visibility
 @property  BOOL visibilityCheckScheduled
 @property  BOOL adRequestMade
 @property  long long requestOrientation
 @property  BOOL shouldMonitorVisibility
 @property  double lastSlowCheck
 @property  ADCreativeController *creativeController
 @property  BOOL serviceAdSpaceRequestInProgress
 @property  ADAdImpressionPublicAttributes *currentAdImpressionPublicAttributes
 @property  ADAdActionPublicAttributes *currentActionPublicAttributes
 @property  ADWebViewActionViewController *webViewActionViewController
 @property  UIViewController *customActionViewController
 @property  BOOL shouldPresentActionViewControllerWhenReady
 @property  BOOL actionViewControllerReadyForPresentation
 @property  BOOL actionViewControllerWantsDismissal
 @property  NSString *connectionAssertionIdentifier
 @property  BOOL fastVisibilityContextIsFeed
 @property  BOOL shouldTearDownCreativeControllerAfterDismissingRemoteActionViewController
 @property  BOOL didInstallCreativeView
 @property  float visibilityPercentage
 @property  int videoPlayCount
 @property  long long progressMileStoneMet
 @property  NSArray *prerollVideoAssets
 @property  NewsTransparencyViewController *newsViewController
 @property  BOOL privacyRequestInProgress
 @property  BOOL actionInProgress
 @property  NSString *identifier
 @property  NSURL *serverURL
 @property  NSString *advertisingSection
 @property  ADSInternalSize *containerSize
 @property  ADSInternalSize *reorientedContainerSize
 @property  NSString *authenticationUserName
 @property  ADContext *context
 @property  ADAdSpaceConfiguration *configuration
 @property  BOOL requiresFastVisibiltyTestOnly
 @property  BOOL firedAdStatusEvent
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} selectedAdFrame
 @property  BOOL hasImpressed
 @property  unsigned long reUseCount
 @property  ADMRAIDAction *mraidAction
 @property  float lastPlayTime
 @property  float lastVolume
 @property  float totalDuration
 @property  BOOL adLibManagedVideo
 @property  BOOL prerollVideo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ADAdSpace ADIdentifierNameForCreativeType:]

  // instance methods
  -[ADAdSpace dealloc]
  -[ADAdSpace close]
  -[ADAdSpace .cxx_destruct]
  -[ADAdSpace identifier]
  -[ADAdSpace setIdentifier:]
  -[ADAdSpace context]
  -[ADAdSpace setVisibility:]
  -[ADAdSpace visibility]
  -[ADAdSpace setContext:]
  -[ADAdSpace configuration]
  -[ADAdSpace setContainerSize:]
  -[ADAdSpace containerSize]
  -[ADAdSpace modalPresentationStyle]
  -[ADAdSpace setRecipient:]
  -[ADAdSpace _updateIdentifier]
  -[ADAdSpace totalDuration]
  -[ADAdSpace updateVisibility]
  -[ADAdSpace recipient]
  -[ADAdSpace safariViewControllerDidFinish:]
  -[ADAdSpace serverURL]
  -[ADAdSpace captureEvent:forAd:forVideoState:completion:]
  -[ADAdSpace setTotalDuration:]
  -[ADAdSpace setLastPlayTime:]
  -[ADAdSpace setLastVolume:]
  -[ADAdSpace lastPlayTime]
  -[ADAdSpace lastVolume]
  -[ADAdSpace captureEvent:forAd:completion:]
  -[ADAdSpace captureUnloadEventForAd:completion:]
  -[ADAdSpace initForRecipient:]
  -[ADAdSpace reorientedContainerSize]
  -[ADAdSpace setReorientedContainerSize:]
  -[ADAdSpace setPrerollVideo:]
  -[ADAdSpace canReuseForContext:]
  -[ADAdSpace hasImpressed]
  -[ADAdSpace internalAdTypeDidChange]
  -[ADAdSpace startVisibilityMonitoring]
  -[ADAdSpace stopVisibilityMonitoring]
  -[ADAdSpace reUseCount]
  -[ADAdSpace setReUseCount:]
  -[ADAdSpace currentAdImpressionPublicAttributes]
  -[ADAdSpace currentAdSizeForContainerSize:]
  -[ADAdSpace setSelectedAdFrame:]
  -[ADAdSpace currentActionPublicAttributes]
  -[ADAdSpace executeBannerViewActionFrom:withTapLocation:]
  -[ADAdSpace refuseBannerViewAction]
  -[ADAdSpace determineActionForTapAtLocation:inFrame:withMRAIDAction:completeHandler:]
  -[ADAdSpace reportNativeClickEvent]
  -[ADAdSpace didInstallCreativeView]
  -[ADAdSpace installCreativeView]
  -[ADAdSpace uninstallCreativeView]
  -[ADAdSpace showAdTransparency]
  -[ADAdSpace adLibManagedVideo]
  -[ADAdSpace setAdvertisingSection:]
  -[ADAdSpace cancelBannerViewAction]
  -[ADAdSpace setServerURL:]
  -[ADAdSpace setAuthenticationUserName:]
  -[ADAdSpace prerollVideoAssets]
  -[ADAdSpace advertisingSection]
  -[ADAdSpace authenticationUserName]
  -[ADAdSpace setActionInProgress:]
  -[ADAdSpace mraidAction]
  -[ADAdSpace dismissCustomActionViewController]
  -[ADAdSpace actionCompletedWithSystemEvent:]
  -[ADAdSpace openURL:fromFrame:tapLocation:]
  -[ADAdSpace impressionPublicAttributesDidLoad:]
  -[ADAdSpace setHasImpressed:]
  -[ADAdSpace _remote_creativeDidFailWithError:]
  -[ADAdSpace _remote_close]
  -[ADAdSpace setRequiresFastVisibiltyTestOnly:]
  -[ADAdSpace _remote_openURL:]
  -[ADAdSpace _remote_actionViewControllerReadyForPresentation]
  -[ADAdSpace _remote_dismissViewControllerWithCompletionHandler:]
  -[ADAdSpace dismissWebViewActionViewControlller:]
  -[ADAdSpace webViewActionViewControllerHomeButtonWasTapped:]
  -[ADAdSpace _tearDownWebActionViewController]
  -[ADAdSpace _tearDownCreativeController]
  -[ADAdSpace _requestAdFromAdServingDaemon]
  -[ADAdSpace _clientApplicationDidBecomeActive]
  -[ADAdSpace _clientApplicationDidEnterBackground]
  -[ADAdSpace setMraidAction:]
  -[ADAdSpace setDidInstallCreativeView:]
  -[ADAdSpace setVisibilityCheckScheduled:]
  -[ADAdSpace setShouldMonitorVisibility:]
  -[ADAdSpace setAdRequestMade:]
  -[ADAdSpace setVideoPlayCount:]
  -[ADAdSpace setProgressMileStoneMet:]
  -[ADAdSpace setRequestOrientation:]
  -[ADAdSpace requestOrientation]
  -[ADAdSpace adRequestMade]
  -[ADAdSpace serviceAdSpaceRequestInProgress]
  -[ADAdSpace setServiceAdSpaceRequestInProgress:]
  -[ADAdSpace creativeController]
  -[ADAdSpace setCreativeController:]
  -[ADAdSpace prerollVideo]
  -[ADAdSpace proceedWithClosing:]
  -[ADAdSpace _closeConnectionIfNecessary]
  -[ADAdSpace webViewActionViewController]
  -[ADAdSpace customActionViewController]
  -[ADAdSpace setPrivacyRequestInProgress:]
  -[ADAdSpace shouldMonitorVisibility]
  -[ADAdSpace visibilityCheckScheduled]
  -[ADAdSpace setVisibilityPercentage:]
  -[ADAdSpace visibilityPercentage]
  -[ADAdSpace requiresFastVisibiltyTestOnly]
  -[ADAdSpace lastSlowCheck]
  -[ADAdSpace setLastSlowCheck:]
  -[ADAdSpace updateCreativeControllerVisibility]
  -[ADAdSpace setFastVisibilityContextIsFeed:]
  -[ADAdSpace _videoAssetsForVideoURL:]
  -[ADAdSpace setCurrentActionPublicAttributes:]
  -[ADAdSpace setShouldPresentActionViewControllerWhenReady:]
  -[ADAdSpace _considerPresentingWebViewActionViewControllerWithURL:]
  -[ADAdSpace setActionViewControllerReadyForPresentation:]
  -[ADAdSpace _handleMRAIDActionPresentation]
  -[ADAdSpace _considerPresentingActionViewController]
  -[ADAdSpace beginActionFromFrame:tapLocation:completionHandler:]
  -[ADAdSpace actionInProgress]
  -[ADAdSpace _tearDownCustomActionViewController]
  -[ADAdSpace shouldTearDownCreativeControllerAfterDismissingRemoteActionViewController]
  -[ADAdSpace setShouldTearDownCreativeControllerAfterDismissingRemoteActionViewController:]
  -[ADAdSpace shouldPresentActionViewControllerWhenReady]
  -[ADAdSpace actionViewControllerReadyForPresentation]
  -[ADAdSpace setActionViewControllerWantsDismissal:]
  -[ADAdSpace _notifiyCreativeControllerOfActionViewControllerPresentation]
  -[ADAdSpace privacyRequestInProgress]
  -[ADAdSpace newsViewController]
  -[ADAdSpace setNewsViewController:]
  -[ADAdSpace _presentPrivacyViewController]
  -[ADAdSpace _remote_resumeBannerMedia]
  -[ADAdSpace setCurrentAdImpressionPublicAttributes:]
  -[ADAdSpace isInternalDeepLinkURL:]
  -[ADAdSpace useSafariViewControllerToOpenURL:]
  -[ADAdSpace setWebViewActionViewController:]
  -[ADAdSpace setCustomActionViewController:]
  -[ADAdSpace progressMileStoneMet]
  -[ADAdSpace videoPlayCount]
  -[ADAdSpace newsTransparencyViewControllerDidLoad:]
  -[ADAdSpace newsTransparencyViewControllerDidDismiss:]
  -[ADAdSpace newsTransparencyViewController:didFailWithError:]
  -[ADAdSpace newsTransparencyViewControllerDidLinkOut:]
  -[ADAdSpace newsTransparencyViewControllerDidRenderView:]
  -[ADAdSpace creativeControllerViewDidRequestCloseWithTapLocation:]
  -[ADAdSpace creativeControllerViewDidRequestCreateCalendarEvent:withTapLocation:]
  -[ADAdSpace creativeControllerViewDidRequestExpandURL:withMaximumSize:withTapLocation:]
  -[ADAdSpace creativeControllerViewDidRequestOpenURL:withTapLocation:]
  -[ADAdSpace creativeControllerTapGestureTimerDidExpireBeforePrimaryActionWasInvoked]
  -[ADAdSpace creativeControllerNavigationAttemptBlockedDueToAccidentalTap]
  -[ADAdSpace creativeControllerVideoCreativeViewLoaded]
  -[ADAdSpace creativeControllerVideoStartedPlaying:volume:]
  -[ADAdSpace creativeControllerVideoResumedPlaying:volume:]
  -[ADAdSpace creativeControllerVideoPaused:volume:]
  -[ADAdSpace creativeControllerVideoProgressed:volume:]
  -[ADAdSpace creativeControllerVideoViewabilityChanged:playTime:volume:]
  -[ADAdSpace creativeControllerVideoCompletedWithVolume:]
  -[ADAdSpace creativeControllerVideoMuted:]
  -[ADAdSpace creativeControllerVideoUnmuted:volume:]
  -[ADAdSpace creativeControllerVideoMoreInfoTapped:volume:]
  -[ADAdSpace creativeControllerVideoTapped:volume:]
  -[ADAdSpace creativeControllerVideoSkipAdTapped:volume:]
  -[ADAdSpace creativeControllerVideoFullScreenTapped:volume:]
  -[ADAdSpace creativeControllerVideoExitFullScreenTapped:volume:]
  -[ADAdSpace creativeControllerVideoVolumeChanged:playTime:]
  -[ADAdSpace connectionAssertionIdentifier]
  -[ADAdSpace _openURLInBrowser:]
  -[ADAdSpace _remote_pauseBannerMedia]
  -[ADAdSpace presentActionViewController:]
  -[ADAdSpace firedAdStatusEvent]
  -[ADAdSpace setFiredAdStatusEvent:]
  -[ADAdSpace selectedAdFrame]
  -[ADAdSpace setAdLibManagedVideo:]
  -[ADAdSpace actionViewControllerWantsDismissal]
  -[ADAdSpace fastVisibilityContextIsFeed]
  -[ADAdSpace setPrerollVideoAssets:]


ADPrerollTopBar : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIStatusBar *statusBar
 @property  ADPrerollButton *doneButton
 @property  ADProgressView *progressView
 @property  <ADPrerollTopBarDelegate> *delegate
 @property  BOOL isFullscreen
 @property  BOOL layoutForExpandedSize

  // instance methods
  -[ADPrerollTopBar delegate]
  -[ADPrerollTopBar setDelegate:]
  -[ADPrerollTopBar .cxx_destruct]
  -[ADPrerollTopBar initWithFrame:]
  -[ADPrerollTopBar layoutSubviews]
  -[ADPrerollTopBar statusBar]
  -[ADPrerollTopBar setDoneButton:]
  -[ADPrerollTopBar doneButton]
  -[ADPrerollTopBar setStatusBar:]
  -[ADPrerollTopBar isFullscreen]
  -[ADPrerollTopBar setIsFullscreen:]
  -[ADPrerollTopBar _doneButtonTapped:]
  -[ADPrerollTopBar progressView]
  -[ADPrerollTopBar setProgressView:]
  -[ADPrerollTopBar requiredHeight]
  -[ADPrerollTopBar setElapsedTime:totalTime:]
  -[ADPrerollTopBar _scaleToFillButtonTapped:]
  -[ADPrerollTopBar _scaleToFitButtonTapped:]
  -[ADPrerollTopBar setLayoutForExpandedSize:]
  -[ADPrerollTopBar layoutForExpandedSize]


ADLocationManager : NSObject /usr/lib/libSystem.B.dylib <CLLocationManagerDelegate>
 @property  BOOL isLocationInitialized
 @property  NSString *locality
 @property  NSString *administrativeArea
 @property  NSString *subAdministrativeArea
 @property  NSString *ISOcountryCode
 @property  NSString *postalCode
 @property  NSObject<OS_dispatch_queue> *readWriteQueue
 @property  int authorizationStatus
 @property  CLLocation *previousLocation
 @property  CLLocationManager *locationManager
 @property  BOOL isUpdatingLocation
 @property  double requestedLocationAccuracy
 @property  NSString *bundleID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ADLocationManager sharedManager]

  // instance methods
  -[ADLocationManager init]
  -[ADLocationManager .cxx_destruct]
  -[ADLocationManager bundleID]
  -[ADLocationManager setBundleID:]
  -[ADLocationManager postalCode]
  -[ADLocationManager locationManager:didUpdateLocations:]
  -[ADLocationManager locationManager:didFailWithError:]
  -[ADLocationManager locationManager:didChangeAuthorizationStatus:]
  -[ADLocationManager authorizationStatus]
  -[ADLocationManager subAdministrativeArea]
  -[ADLocationManager locality]
  -[ADLocationManager administrativeArea]
  -[ADLocationManager ISOcountryCode]
  -[ADLocationManager setLocation:]
  -[ADLocationManager previousLocation]
  -[ADLocationManager setPreviousLocation:]
  -[ADLocationManager setAdministrativeArea:]
  -[ADLocationManager setLocality:]
  -[ADLocationManager setSubAdministrativeArea:]
  -[ADLocationManager setPostalCode:]
  -[ADLocationManager setAuthorizationStatus:]
  -[ADLocationManager readWriteQueue]
  -[ADLocationManager locationManager]
  -[ADLocationManager setLocationManager:]
  -[ADLocationManager _createLocationManager]
  -[ADLocationManager setIsLocationInitialized:]
  -[ADLocationManager _considerRefreshingLocation]
  -[ADLocationManager requestedLocationAccuracy]
  -[ADLocationManager _startUpdatingLocation]
  -[ADLocationManager _stopUpdatingLocation]
  -[ADLocationManager isAdLocationServicesEnabled]
  -[ADLocationManager setISOcountryCode:]
  -[ADLocationManager isLocationBasedAdsEnabled]
  -[ADLocationManager locationEnabledFor:]
  -[ADLocationManager isUpdatingLocation]
  -[ADLocationManager isLocationInitialized]
  -[ADLocationManager setIsUpdatingLocation:]
  -[ADLocationManager setReadWriteQueue:]
  -[ADLocationManager setRequestedLocationAccuracy:]


ADPrerollButton : UIButton /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  {UIEdgeInsets=dddd} hitRectInsets
 @property  {UIEdgeInsets=dddd} alignmentRectInsets

  // class methods
  +[ADPrerollButton buttonWithType:]

  // instance methods
  -[ADPrerollButton dealloc]
  -[ADPrerollButton alignmentRectInsets]
  -[ADPrerollButton pointInside:withEvent:]
  -[ADPrerollButton setAlignmentRectInsets:]
  -[ADPrerollButton hitRect]
  -[ADPrerollButton hitRectInsets]
  -[ADPrerollButton setHitRectInsets:]


ADContentProxyAttributes : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *contentProxyURL
 @property  NSURL *contentProxyURLConnect
 @property  NSString *configVersion
 @property  long long proxyType

  // class methods
  +[ADContentProxyAttributes sharedInstance]

  // instance methods
  -[ADContentProxyAttributes .cxx_destruct]
  -[ADContentProxyAttributes setProxyType:]
  -[ADContentProxyAttributes proxyType]
  -[ADContentProxyAttributes setConfigVersion:]
  -[ADContentProxyAttributes configVersion]
  -[ADContentProxyAttributes contentProxyURLConnect]
  -[ADContentProxyAttributes contentProxyURLDidChange:]
  -[ADContentProxyAttributes contentProxyURLConnectDidChange:]
  -[ADContentProxyAttributes proxyTypeDidChange:]
  -[ADContentProxyAttributes configVersionDidChange:]
  -[ADContentProxyAttributes setContentProxyURL:]
  -[ADContentProxyAttributes setContentProxyURLConnect:]
  -[ADContentProxyAttributes contentProxyURL]


ADPrerollBottomBar : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  ADPrerollButton *actionButton
 @property  UILabel *skipLabel
 @property  UILabel *shortSkipLabel
 @property  ADPrerollButton *skipButton
 @property  BOOL skipButtonCountingDown
 @property  double skipDuration
 @property  double lastViewingStartTime
 @property  double accumulatedViewingTime
 @property  NSTimer *skipAccumulationTimer
 @property  UIImage *playImage
 @property  UIImage *pauseImage
 @property  ADPrerollButton *playPauseButton
 @property  ADVolumeSlider *volumeSlider
 @property  <ADPrerollBottomBarDelegate> *delegate
 @property  BOOL layoutForExpandedSize
 @property  BOOL isFullscreen

  // instance methods
  -[ADPrerollBottomBar dealloc]
  -[ADPrerollBottomBar delegate]
  -[ADPrerollBottomBar setDelegate:]
  -[ADPrerollBottomBar .cxx_destruct]
  -[ADPrerollBottomBar initWithFrame:]
  -[ADPrerollBottomBar layoutSubviews]
  -[ADPrerollBottomBar isFullscreen]
  -[ADPrerollBottomBar setIsFullscreen:]
  -[ADPrerollBottomBar actionButton]
  -[ADPrerollBottomBar volumeSlider]
  -[ADPrerollBottomBar setVolumeSlider:]
  -[ADPrerollBottomBar _actionButtonTapped:]
  -[ADPrerollBottomBar playImage]
  -[ADPrerollBottomBar pauseImage]
  -[ADPrerollBottomBar setActionButton:]
  -[ADPrerollBottomBar _playButtonTapped:]
  -[ADPrerollBottomBar displayAsPaused:]
  -[ADPrerollBottomBar setLayoutForExpandedSize:]
  -[ADPrerollBottomBar layoutForExpandedSize]
  -[ADPrerollBottomBar setPlayImage:]
  -[ADPrerollBottomBar setPauseImage:]
  -[ADPrerollBottomBar setPlayPauseButton:]
  -[ADPrerollBottomBar playPauseButton]
  -[ADPrerollBottomBar setSkipLabel:]
  -[ADPrerollBottomBar skipLabel]
  -[ADPrerollBottomBar setShortSkipLabel:]
  -[ADPrerollBottomBar shortSkipLabel]
  -[ADPrerollBottomBar setSkipButton:]
  -[ADPrerollBottomBar skipButton]
  -[ADPrerollBottomBar _skipButtonTapped:]
  -[ADPrerollBottomBar accumulatedViewingTime]
  -[ADPrerollBottomBar skipDuration]
  -[ADPrerollBottomBar _pauseButtonTapped:]
  -[ADPrerollBottomBar _pauseCountdown]
  -[ADPrerollBottomBar _resumeCountdown]
  -[ADPrerollBottomBar skipButtonCountingDown]
  -[ADPrerollBottomBar setSkipDuration:]
  -[ADPrerollBottomBar _updateSkipLabel]
  -[ADPrerollBottomBar setSkipButtonCountingDown:]
  -[ADPrerollBottomBar setLastViewingStartTime:]
  -[ADPrerollBottomBar _accumulateViewingTime]
  -[ADPrerollBottomBar setSkipAccumulationTimer:]
  -[ADPrerollBottomBar lastViewingStartTime]
  -[ADPrerollBottomBar setAccumulatedViewingTime:]
  -[ADPrerollBottomBar showActionButton:]
  -[ADPrerollBottomBar beginCountdownWithDuration:]
  -[ADPrerollBottomBar skipAccumulationTimer]


ADWebViewManager : NSObject /usr/lib/libSystem.B.dylib
 @property  ADWebView *preallocatedWebView

  // class methods
  +[ADWebViewManager sharedManager]

  // instance methods
  -[ADWebViewManager .cxx_destruct]
  -[ADWebViewManager preallocateWebViewWithBackgroundPriority]
  -[ADWebViewManager creativeView]
  -[ADWebViewManager preallocatedWebView]
  -[ADWebViewManager setPreallocatedWebView:]
  -[ADWebViewManager _webViewForCreative]
  -[ADWebViewManager _webViewForCreativeForVideo]
  -[ADWebViewManager creativeViewForVideo]


ADLockScreenManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ADLockScreenManager sharedManager]

  // instance methods
  -[ADLockScreenManager isDeviceLocked]
  -[ADLockScreenManager requestPassCodeUnlockUIWithBlock:]


ADPolicyEngine : NSObject /usr/lib/libSystem.B.dylib <ADBannerViewInternalDelegate, ADInterstitialAdDelegate>
 @property  double nextInterstitialPresentationTime
 @property  double nextPrerollPlaybackTime
 @property  NSObject<OS_dispatch_queue> *policyEngineQueue
 @property  BOOL enabled
 @property  BOOL canAutoEnable
 @property  ADInterstitialAd *sharedInterstitialAd
 @property  BOOL sharedInterstitialAdIsInUse
 @property  NSString *sharedInterstitialSection
 @property  NSURL *sharedInterstitialServerURL
 @property  NSString *sharedInterstitialAuthenticationUserName
 @property  ADBannerView *sharedMediaPlayerVideoAd
 @property  BOOL sharedMediaPlayerVideoAdClaimed
 @property  NSError *lastSharedMediaPlayerVideoAdError
 @property  NSData *currentStationData
 @property  NSData *currentSongData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ADPolicyEngine sharedEngine]

  // instance methods
  -[ADPolicyEngine init]
  -[ADPolicyEngine enabled]
  -[ADPolicyEngine setEnabled:]
  -[ADPolicyEngine .cxx_destruct]
  -[ADPolicyEngine bannerViewActionDidFinish:]
  -[ADPolicyEngine bannerViewActionShouldBegin:willLeaveApplication:]
  -[ADPolicyEngine bannerViewWillLoadAd:]
  -[ADPolicyEngine bannerViewDidLoadAd:]
  -[ADPolicyEngine bannerView:didFailToReceiveAdWithError:]
  -[ADPolicyEngine interstitialAdDidUnload:]
  -[ADPolicyEngine interstitialAdDidLoad:]
  -[ADPolicyEngine interstitialAd:didFailWithError:]
  -[ADPolicyEngine adServingDaemonDidIdleDisablePolicyEngine]
  -[ADPolicyEngine policyEngineQueue]
  -[ADPolicyEngine _enablePolicyEngineWithReason:]
  -[ADPolicyEngine disablePolicyEngine]
  -[ADPolicyEngine sharedInterstitialServerURL]
  -[ADPolicyEngine sharedInterstitialSection]
  -[ADPolicyEngine sharedInterstitialAuthenticationUserName]
  -[ADPolicyEngine sharedInterstitialAd]
  -[ADPolicyEngine sharedInterstitialAdIsInUse]
  -[ADPolicyEngine nextInterstitialPresentationTime]
  -[ADPolicyEngine setSharedInterstitialAdIsInUse:]
  -[ADPolicyEngine finishedPresentingSharedInterstitialAd]
  -[ADPolicyEngine setSharedMediaPlayerVideoAd:]
  -[ADPolicyEngine sharedMediaPlayerVideoAd]
  -[ADPolicyEngine sharedMediaPlayerVideoAdClaimed]
  -[ADPolicyEngine lastSharedMediaPlayerVideoAdError]
  -[ADPolicyEngine nextPrerollPlaybackTime]
  -[ADPolicyEngine setSharedMediaPlayerVideoAdClaimed:]
  -[ADPolicyEngine setLastSharedMediaPlayerVideoAdError:]
  -[ADPolicyEngine sharedMediaPlayerVideoAdWillLoad]
  -[ADPolicyEngine sharedMediaPlayerVideoAdDidLoad]
  -[ADPolicyEngine sharedMediaPlayerVideoAdDidFailToReceiveAdWithError:]
  -[ADPolicyEngine sharedMediaPlayerVideoAdActionDidFinish]
  -[ADPolicyEngine enablePolicyEngine]
  -[ADPolicyEngine setSharedInterstitialSection:]
  -[ADPolicyEngine setSharedInterstitialServerURL:]
  -[ADPolicyEngine setSharedInterstitialAuthenticationUserName:]
  -[ADPolicyEngine canPresentSharedInterstitialAdWithResultMessage:]
  -[ADPolicyEngine claimSharedMediaPlayerVideoAdWithError:]
  -[ADPolicyEngine relinquishSharedMediaPlayerVideoAd]
  -[ADPolicyEngine setNextInterstitialPresentationTime:]
  -[ADPolicyEngine setNextPrerollPlaybackTime:]
  -[ADPolicyEngine setPolicyEngineQueue:]
  -[ADPolicyEngine canAutoEnable]
  -[ADPolicyEngine setCanAutoEnable:]
  -[ADPolicyEngine setSharedInterstitialAd:]
  -[ADPolicyEngine currentStationData]
  -[ADPolicyEngine setCurrentStationData:]
  -[ADPolicyEngine currentSongData]
  -[ADPolicyEngine setCurrentSongData:]


_ADPolicyEngineEvent : NSObject /usr/lib/libSystem.B.dylib <ADBannerViewInternalDelegate>
 @property  @? bannersLoadedHandler
 @property  NSMutableArray *banners
 @property  NSMutableArray *bannersWaitingOnLoad
 @property  NSArray *bannerIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_ADPolicyEngineEvent init]
  -[_ADPolicyEngineEvent dealloc]
  -[_ADPolicyEngineEvent .cxx_destruct]
  -[_ADPolicyEngineEvent banners]
  -[_ADPolicyEngineEvent setBanners:]
  -[_ADPolicyEngineEvent bannerViewDidLoadAd:]
  -[_ADPolicyEngineEvent bannerView:didFailToReceiveAdWithError:]
  -[_ADPolicyEngineEvent setBannersLoadedHandler:]
  -[_ADPolicyEngineEvent setBannersWaitingOnLoad:]
  -[_ADPolicyEngineEvent bannersWaitingOnLoad]
  -[_ADPolicyEngineEvent _considerCallingLoadedHandler]
  -[_ADPolicyEngineEvent bannersLoadedHandler]
  -[_ADPolicyEngineEvent addBannerForCreativeType:]
  -[_ADPolicyEngineEvent bannerIdentifiers]
  -[_ADPolicyEngineEvent loadedBannerWithIdentifier:]
  -[_ADPolicyEngineEvent waitForLoadsForBanners:completionHandler:]


ADNSURLSessionTaskInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSThread *thread
 @property  NSArray *modes
 @property  NSURLSessionDataTask *task
 @property  <NSURLSessionDataDelegate> *delegate

  // instance methods
  -[ADNSURLSessionTaskInfo invalidate]
  -[ADNSURLSessionTaskInfo delegate]
  -[ADNSURLSessionTaskInfo setDelegate:]
  -[ADNSURLSessionTaskInfo .cxx_destruct]
  -[ADNSURLSessionTaskInfo performBlock:]
  -[ADNSURLSessionTaskInfo modes]
  -[ADNSURLSessionTaskInfo performBlockAndWait:]
  -[ADNSURLSessionTaskInfo task]
  -[ADNSURLSessionTaskInfo thread]
  -[ADNSURLSessionTaskInfo perform:waitUntilDone:]
  -[ADNSURLSessionTaskInfo performBlockOnClientThread:]
  -[ADNSURLSessionTaskInfo setThread:]
  -[ADNSURLSessionTaskInfo initWithTask:delegate:modes:]
  -[ADNSURLSessionTaskInfo setModes:]


ADActionViewController : UIViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <ADActionViewControllerInterface>
 @property  ADAdSpace *adSpace
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL readyForPresentation

  // class methods
  +[ADActionViewController requestActionViewControllerForAdSpace:]
  +[ADActionViewController cancelRequestForActionViewControllerForAdSpaceController:]

  // instance methods
  -[ADActionViewController .cxx_destruct]
  -[ADActionViewController loadView]
  -[ADActionViewController dismiss]
  -[ADActionViewController adSpace]
  -[ADActionViewController setAdSpace:]
  -[ADActionViewController setReadyForPresentation:]
  -[ADActionViewController clientApplicationDidEnterBackground]
  -[ADActionViewController didSetAdSpace]
  -[ADActionViewController clientApplicationCancelledAction]
  -[ADActionViewController readyForPresentation]
  -[ADActionViewController _remote_viewControllerCreatedForAdSpaceControllerWithIdentifier:]


ADUserDeviceUtilities : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *lastiTunesAccountID
 @property  <NSObject> *notifyToken
 @property  BOOL deviceHasHomeButton

  // class methods
  +[ADUserDeviceUtilities sharedInstance]
  +[ADUserDeviceUtilities iCloudAccount]
  +[ADUserDeviceUtilities iTunesStoreAccount]
  +[ADUserDeviceUtilities isiCloudManagedAppleId]
  +[ADUserDeviceUtilities isiTunesManagedAppleId]
  +[ADUserDeviceUtilities iTunesAccountIdentifier]
  +[ADUserDeviceUtilities isiCloudAccountAvailable]
  +[ADUserDeviceUtilities isiTunesAccountAvailable]
  +[ADUserDeviceUtilities isManagedAppleId]
  +[ADUserDeviceUtilities educationModeEnabled]

  // instance methods
  -[ADUserDeviceUtilities notifyToken]
  -[ADUserDeviceUtilities .cxx_destruct]
  -[ADUserDeviceUtilities setNotifyToken:]
  -[ADUserDeviceUtilities deviceHasHomeButton]
  -[ADUserDeviceUtilities unregisterForiTunesAccountChanges]
  -[ADUserDeviceUtilities lastiTunesAccountID]
  -[ADUserDeviceUtilities setLastiTunesAccountID:]


ADLayoutOptions : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  {CGSize=dd} containerSize
 @property  {CGSize=dd} reorientedContainerSize

  // instance methods
  -[ADLayoutOptions copyWithZone:]
  -[ADLayoutOptions setContainerSize:]
  -[ADLayoutOptions containerSize]
  -[ADLayoutOptions reorientedContainerSize]
  -[ADLayoutOptions setReorientedContainerSize:]


ADMediaAnalyticsProgressEventInfo : ADMediaAnalyticsEventInfo
 @property  long long progressMilestone

  // instance methods
  -[ADMediaAnalyticsProgressEventInfo progressMilestone]
  -[ADMediaAnalyticsProgressEventInfo initWithProgressEventMilestone:]
  -[ADMediaAnalyticsProgressEventInfo setProgressMilestone:]


ADCalendarEventActionViewController : ADActionViewController <EKEventEditViewDelegate>
 @property  EKEvent *calendarEvent
 @property  ADEventEditViewController *eventKitEditViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ADCalendarEventActionViewController .cxx_destruct]
  -[ADCalendarEventActionViewController dismiss]
  -[ADCalendarEventActionViewController viewWillAppear:]
  -[ADCalendarEventActionViewController viewDidDisappear:]
  -[ADCalendarEventActionViewController eventEditViewController:didCompleteWithAction:]
  -[ADCalendarEventActionViewController clientApplicationDidEnterBackground]
  -[ADCalendarEventActionViewController didSetAdSpace]
  -[ADCalendarEventActionViewController setCalendarEvent:]
  -[ADCalendarEventActionViewController setEventKitEditViewController:]
  -[ADCalendarEventActionViewController eventKitEditViewController]
  -[ADCalendarEventActionViewController calendarEvent]


_ADUIViewControllerAdController : NSObject /usr/lib/libSystem.B.dylib <_UIViewControllerContentViewEmbedding, ADBannerViewDelegate, ADInterstitialAdDelegate>
 @property  UIViewController *contentViewController
 @property  long long interstitialPresentationPolicy
 @property  BOOL canDisplayBannerAds
 @property  BOOL canOwnSharedBanner
 @property  BOOL presentingFullScreenAd
 @property  BOOL displayingBannerAd
 @property  ADBannerView *bannerView
 @property  ADInterstitialAd *interstitialAd
 @property  NSURL *bannerServerURL
 @property  NSString *bannerAdSection
 @property  NSString *bannerAuthUserName
 @property  NSURL *interstitialServerURL
 @property  NSString *interstitialAdSection
 @property  NSString *interstitialAuthUserName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_ADUIViewControllerAdController prepareInterstitialAds]
  +[_ADUIViewControllerAdController _sharedBannerView]

  // instance methods
  -[_ADUIViewControllerAdController .cxx_destruct]
  -[_ADUIViewControllerAdController initWithContentViewController:]
  -[_ADUIViewControllerAdController setContentViewController:]
  -[_ADUIViewControllerAdController contentViewController]
  -[_ADUIViewControllerAdController viewController:viewWillAppear:]
  -[_ADUIViewControllerAdController viewController:viewDidAppear:]
  -[_ADUIViewControllerAdController viewController:viewWillDisappear:]
  -[_ADUIViewControllerAdController viewController:viewDidDisappear:]
  -[_ADUIViewControllerAdController viewControllerViewWillLayoutSubviews:]
  -[_ADUIViewControllerAdController viewControllerViewDidLayoutSubviews:]
  -[_ADUIViewControllerAdController bannerView]
  -[_ADUIViewControllerAdController setBannerView:]
  -[_ADUIViewControllerAdController bannerViewActionDidFinish:]
  -[_ADUIViewControllerAdController bannerViewActionShouldBegin:willLeaveApplication:]
  -[_ADUIViewControllerAdController bannerViewDidLoadAd:]
  -[_ADUIViewControllerAdController bannerView:didFailToReceiveAdWithError:]
  -[_ADUIViewControllerAdController interstitialAdDidUnload:]
  -[_ADUIViewControllerAdController interstitialAd:didFailWithError:]
  -[_ADUIViewControllerAdController interstitialAdActionDidFinish:]
  -[_ADUIViewControllerAdController interstitialAdActionShouldBegin:willLeaveApplication:]
  -[_ADUIViewControllerAdController setInterstitialAd:]
  -[_ADUIViewControllerAdController interstitialAd]
  -[_ADUIViewControllerAdController setInterstitialPresentationPolicy:]
  -[_ADUIViewControllerAdController interstitialPresentationPolicy]
  -[_ADUIViewControllerAdController canDisplayBannerAds]
  -[_ADUIViewControllerAdController setCanDisplayBannerAds:]
  -[_ADUIViewControllerAdController isPresentingFullScreenAd]
  -[_ADUIViewControllerAdController isDisplayingBannerAd]
  -[_ADUIViewControllerAdController requestInterstitialAdPresentation]
  -[_ADUIViewControllerAdController _layoutContentAndBannerViewAnimated:completion:]
  -[_ADUIViewControllerAdController setCanOwnSharedBanner:]
  -[_ADUIViewControllerAdController _considerTakingBannerViewAnimated:]
  -[_ADUIViewControllerAdController _presentInterstitialIfReady]
  -[_ADUIViewControllerAdController setPresentingFullScreenAd:]
  -[_ADUIViewControllerAdController _hideBannerView]
  -[_ADUIViewControllerAdController canOwnSharedBanner]
  -[_ADUIViewControllerAdController bannerAdSection]
  -[_ADUIViewControllerAdController bannerServerURL]
  -[_ADUIViewControllerAdController bannerAuthUserName]
  -[_ADUIViewControllerAdController _setEmbeddedFrame:]
  -[_ADUIViewControllerAdController setBannerAdSection:]
  -[_ADUIViewControllerAdController setBannerServerURL:]
  -[_ADUIViewControllerAdController setBannerAuthUserName:]
  -[_ADUIViewControllerAdController setInterstitialAdSection:]
  -[_ADUIViewControllerAdController setInterstitialServerURL:]
  -[_ADUIViewControllerAdController setInterstitialAuthUserName:]
  -[_ADUIViewControllerAdController interstitialServerURL]
  -[_ADUIViewControllerAdController interstitialAdSection]
  -[_ADUIViewControllerAdController interstitialAuthUserName]


ADVolumeSlider : MPVolumeSlider /System/Library/Frameworks/EventKit.framework/EventKit
  // instance methods
  -[ADVolumeSlider .cxx_destruct]
  -[ADVolumeSlider pointInside:withEvent:]
  -[ADVolumeSlider initWithFrame:style:]
  -[ADVolumeSlider trackRectForBounds:]
  -[ADVolumeSlider minimumValueImageRectForBounds:]
  -[ADVolumeSlider maximumValueImageRectForBounds:]
  -[ADVolumeSlider _newVolumeWarningView]
  -[ADVolumeSlider _updateTrackTintForVolumeControlAvailability]
  -[ADVolumeSlider _trackImageWithTintColor:]
  -[ADVolumeSlider _availableRoutesDidChangeNotification:]


ADEventEditViewController : EKEventEditViewController /System/Library/PrivateFrameworks/TransparencyDetailsView.framework/TransparencyDetailsView
 @property  ADHomeButtonHandler *homeButtonHandler
 @property  id notificationObserver
 @property  ADAdSpace *adSpace

  // instance methods
  -[ADEventEditViewController dealloc]
  -[ADEventEditViewController .cxx_destruct]
  -[ADEventEditViewController viewDidAppear:]
  -[ADEventEditViewController viewDidDisappear:]
  -[ADEventEditViewController setNotificationObserver:]
  -[ADEventEditViewController notificationObserver]
  -[ADEventEditViewController adSpace]
  -[ADEventEditViewController setAdSpace:]
  -[ADEventEditViewController setHomeButtonHandler:]
  -[ADEventEditViewController homeButtonHandler]
  -[ADEventEditViewController cancelAndDismiss]


ADSoftLinking : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *loadedFrameworks
 @property  NSMutableDictionary *boundSymbols
 @property  NSObject<OS_dispatch_queue> *loadQueue
 @property  Class ABNewPersonViewController
 @property  Class ABPeoplePickerNavigationController
 @property  ^? AudioFileOpenWithCallbacks
 @property  ^? AudioFileGetProperty
 @property  Class AVPlayer
 @property  Class AVPlayerItem
 @property  Class AVPlayerLayer
 @property  Class AVURLAsset
 @property  NSString *AVPlayerItemDidPlayToEndTimeNotification
 @property  NSString *AVPlayerItemFailedToPlayToEndTimeNotification
 @property  NSString *AVPlayerItemFailedToPlayToEndTimeErrorKey
 @property  NSString *AVPlayerItemPlaybackStalledNotification
 @property  NSString *AVLayerVideoGravityResizeAspectFill
 @property  NSString *AVLayerVideoGravityResizeAspect
 @property  Class EKReminderViewController
 @property  Class EKEventEditViewController
 @property  Class MPMoviePlayerController
 @property  Class MPMoviePlayerViewController
 @property  Class MPNetworkPlayabilityMonitor
 @property  NSString *MPMoviePlayerWillEnterFullscreenNotification
 @property  NSString *MPMoviePlayerDidEnterFullscreenNotification
 @property  NSString *MPMoviePlayerWillExitFullscreenNotification
 @property  NSString *MPMoviePlayerDidExitFullscreenNotification
 @property  NSString *MPMoviePlayerIsAirPlayVideoActiveDidChangeNotification
 @property  Class MFMailComposeViewController
 @property  Class MFMessageComposeViewController
 @property  Class PKPass
 @property  Class PKPassLibrary
 @property  Class PKAddPassesViewController
 @property  Class PLStaticWallpaperImageViewController
 @property  Class SKStoreProductViewController
 @property  NSString *SKStoreProductParameterITunesItemIdentifier
 @property  Class TLToneManager
 @property  NSString *kToneTitleKey
 @property  NSString *kToneGenreKey
 @property  NSString *kToneDurationKey
 @property  NSString *kToneArtistKey
 @property  ^? CVPixelBufferCreateWithIOSurface
 @property  ^? CVPixelBufferRelease
 @property  ^? VTImageRotationSessionCreate
 @property  ^? VTImageRotationSessionInvalidate
 @property  ^? VTImageRotationSessionRelease
 @property  ^? VTImageRotationSessionTransferImage
 @property  ^{__CFString=} kIOSurfaceWidth
 @property  ^{__CFString=} kIOSurfacePixelFormat
 @property  ^{__CFString=} kIOSurfaceIsGlobal
 @property  ^{__CFString=} kIOSurfaceBytesPerRow
 @property  ^{__CFString=} kIOSurfaceHeight
 @property  ^{__CFString=} kIOSurfaceAllocSize
 @property  ^{__CFString=} kIOSurfaceBytesPerElement
 @property  ^? IOSurfaceGetWidth
 @property  ^? IOSurfaceGetHeight
 @property  ^? IOSurfaceGetBytesPerRow
 @property  ^? IOSurfaceGetBaseAddress
 @property  ^? IOSurfaceGetAllocSize
 @property  ^? IOSurfaceCreate
 @property  ^? IOSurfaceLock
 @property  ^? IOSurfaceUnlock
 @property  ^? IOSurfaceCreateXPCObject
 @property  ^? IOSurfaceLookupFromXPCObject
 @property  ^? IOSurfaceIncrementUseCount
 @property  ^? IOSurfaceDecrementUseCount

  // class methods
  +[ADSoftLinking sharedManager]

  // instance methods
  -[ADSoftLinking init]
  -[ADSoftLinking .cxx_destruct]
  -[ADSoftLinking AVURLAsset]
  -[ADSoftLinking AVPlayer]
  -[ADSoftLinking loadedFrameworks]
  -[ADSoftLinking _loadFrameworkIfNeeded:]
  -[ADSoftLinking boundSymbols]
  -[ADSoftLinking _pointerToSymbolWithName:inFrameworkAtPath:]
  -[ADSoftLinking _classWithName:inFrameworkAtPath:]
  -[ADSoftLinking _stringWithName:inFrameworkAtPath:]
  -[ADSoftLinking ABNewPersonViewController]
  -[ADSoftLinking ABPeoplePickerNavigationController]
  -[ADSoftLinking AudioFileGetProperty]
  -[ADSoftLinking AudioFileOpenWithCallbacks]
  -[ADSoftLinking AVPlayerItem]
  -[ADSoftLinking AVPlayerLayer]
  -[ADSoftLinking AVPlayerItemDidPlayToEndTimeNotification]
  -[ADSoftLinking AVPlayerItemFailedToPlayToEndTimeNotification]
  -[ADSoftLinking AVPlayerItemFailedToPlayToEndTimeErrorKey]
  -[ADSoftLinking AVPlayerItemPlaybackStalledNotification]
  -[ADSoftLinking AVLayerVideoGravityResizeAspectFill]
  -[ADSoftLinking AVLayerVideoGravityResizeAspect]
  -[ADSoftLinking EKEventEditViewController]
  -[ADSoftLinking EKReminderViewController]
  -[ADSoftLinking MFMailComposeViewController]
  -[ADSoftLinking MFMessageComposeViewController]
  -[ADSoftLinking PKPass]
  -[ADSoftLinking PKPassLibrary]
  -[ADSoftLinking PKAddPassesViewController]
  -[ADSoftLinking PLStaticWallpaperImageViewController]
  -[ADSoftLinking SKStoreProductViewController]
  -[ADSoftLinking SKStoreProductParameterITunesItemIdentifier]
  -[ADSoftLinking TLToneManager]
  -[ADSoftLinking kToneTitleKey]
  -[ADSoftLinking kToneGenreKey]
  -[ADSoftLinking kToneDurationKey]
  -[ADSoftLinking kToneArtistKey]
  -[ADSoftLinking CVPixelBufferCreateWithIOSurface]
  -[ADSoftLinking CVPixelBufferRelease]
  -[ADSoftLinking VTImageRotationSessionCreate]
  -[ADSoftLinking VTImageRotationSessionInvalidate]
  -[ADSoftLinking VTImageRotationSessionRelease]
  -[ADSoftLinking VTImageRotationSessionTransferImage]
  -[ADSoftLinking kIOSurfaceWidth]
  -[ADSoftLinking kIOSurfacePixelFormat]
  -[ADSoftLinking kIOSurfaceIsGlobal]
  -[ADSoftLinking kIOSurfaceBytesPerRow]
  -[ADSoftLinking kIOSurfaceHeight]
  -[ADSoftLinking kIOSurfaceAllocSize]
  -[ADSoftLinking kIOSurfaceBytesPerElement]
  -[ADSoftLinking IOSurfaceGetWidth]
  -[ADSoftLinking IOSurfaceGetHeight]
  -[ADSoftLinking IOSurfaceGetBytesPerRow]
  -[ADSoftLinking IOSurfaceGetBaseAddress]
  -[ADSoftLinking IOSurfaceGetAllocSize]
  -[ADSoftLinking IOSurfaceCreate]
  -[ADSoftLinking IOSurfaceLock]
  -[ADSoftLinking IOSurfaceUnlock]
  -[ADSoftLinking IOSurfaceCreateXPCObject]
  -[ADSoftLinking IOSurfaceLookupFromXPCObject]
  -[ADSoftLinking IOSurfaceIncrementUseCount]
  -[ADSoftLinking IOSurfaceDecrementUseCount]
  -[ADSoftLinking MPMoviePlayerController]
  -[ADSoftLinking MPMoviePlayerViewController]
  -[ADSoftLinking MPNetworkPlayabilityMonitor]
  -[ADSoftLinking MPMoviePlayerWillEnterFullscreenNotification]
  -[ADSoftLinking MPMoviePlayerDidEnterFullscreenNotification]
  -[ADSoftLinking MPMoviePlayerWillExitFullscreenNotification]
  -[ADSoftLinking MPMoviePlayerDidExitFullscreenNotification]
  -[ADSoftLinking MPMoviePlayerIsAirPlayVideoActiveDidChangeNotification]
  -[ADSoftLinking loadQueue]


ADActionViewControllerManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *servingAdSpaces

  // class methods
  +[ADActionViewControllerManager sharedManager]

  // instance methods
  -[ADActionViewControllerManager init]
  -[ADActionViewControllerManager .cxx_destruct]
  -[ADActionViewControllerManager actionViewController:dismissForIdentifier:]
  -[ADActionViewControllerManager requestActionViewControllerForAdSpace:]
  -[ADActionViewControllerManager cancelRequestForActionViewControllerForAdSpace:]
  -[ADActionViewControllerManager servingAdSpaces]
  -[ADActionViewControllerManager setServingAdSpaces:]


ADProgressView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UILabel *elapsedTimeLabel
 @property  UILabel *remainingTimeLabel
 @property  ADPrerollSlider *slider

  // instance methods
  -[ADProgressView .cxx_destruct]
  -[ADProgressView initWithFrame:]
  -[ADProgressView layoutSubviews]
  -[ADProgressView slider]
  -[ADProgressView setSlider:]
  -[ADProgressView elapsedTimeLabel]
  -[ADProgressView setElapsedTime:totalTime:]
  -[ADProgressView setElapsedTimeLabel:]
  -[ADProgressView setRemainingTimeLabel:]
  -[ADProgressView remainingTimeLabel]


ADWebViewGestureRecognizer : UIGestureRecognizer /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  long long lastTrackedTouch
 @property  double mostRecentTapTimestamp
 @property  {CGPoint=dd} location
 @property  BOOL pointIsInsideView
 @property  BOOL shouldBlockNavigation
 @property  {CGPoint=dd} mostRecentTapLocation
 @property  BOOL wasViewTappedRecently

  // instance methods
  -[ADWebViewGestureRecognizer reset]
  -[ADWebViewGestureRecognizer location]
  -[ADWebViewGestureRecognizer gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[ADWebViewGestureRecognizer touchesBegan:withEvent:]
  -[ADWebViewGestureRecognizer touchesMoved:withEvent:]
  -[ADWebViewGestureRecognizer touchesEnded:withEvent:]
  -[ADWebViewGestureRecognizer touchesCancelled:withEvent:]
  -[ADWebViewGestureRecognizer canPreventGestureRecognizer:]
  -[ADWebViewGestureRecognizer canBePreventedByGestureRecognizer:]
  -[ADWebViewGestureRecognizer wasViewTappedRecently]
  -[ADWebViewGestureRecognizer mostRecentTapLocation]
  -[ADWebViewGestureRecognizer shouldBlockNavigation]
  -[ADWebViewGestureRecognizer setLastTrackedTouch:]
  -[ADWebViewGestureRecognizer setMostRecentTapTimestamp:]
  -[ADWebViewGestureRecognizer lastTrackedTouch]
  -[ADWebViewGestureRecognizer mostRecentTapTimestamp]
  -[ADWebViewGestureRecognizer pointIsInsideView]


ADPlayer : NSObject /usr/lib/libSystem.B.dylib <ADBannerViewInternalDelegate>
 @property  BOOL playbackHasBegun
 @property  AVPlayerItem *avPlayerItem
 @property  AVPlayer *avPlayer
 @property  unsigned long playbackState
 @property  ADBannerView *videoAd
 @property  id timeObserver
 @property  <ADPlayerDelegate> *delegate
 @property  float playbackRate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ADPlayer init]
  -[ADPlayer dealloc]
  -[ADPlayer delegate]
  -[ADPlayer setDelegate:]
  -[ADPlayer .cxx_destruct]
  -[ADPlayer pause]
  -[ADPlayer observeValueForKeyPath:ofObject:change:context:]
  -[ADPlayer play]
  -[ADPlayer performAction]
  -[ADPlayer applicationDidBecomeActive]
  -[ADPlayer applicationWillResignActive]
  -[ADPlayer shutdown]
  -[ADPlayer playbackRate]
  -[ADPlayer playbackState]
  -[ADPlayer avPlayer]
  -[ADPlayer setPlaybackState:]
  -[ADPlayer avPlayerItem]
  -[ADPlayer setAvPlayer:]
  -[ADPlayer setAvPlayerItem:]
  -[ADPlayer bannerViewActionDidFinish:]
  -[ADPlayer bannerViewActionShouldBegin:willLeaveApplication:]
  -[ADPlayer showAdTransparency]
  -[ADPlayer viewControllerForStoryboardPresentationFromBannerView:]
  -[ADPlayer bannerViewWillLoadAd:]
  -[ADPlayer bannerViewDidLoadAd:]
  -[ADPlayer bannerView:didFailToReceiveAdWithError:]
  -[ADPlayer bannerViewShouldPauseMedia:]
  -[ADPlayer bannerViewShouldResumeMedia:]
  -[ADPlayer videoAd]
  -[ADPlayer prepareForPlayback]
  -[ADPlayer setVideoAd:]
  -[ADPlayer _networkOptimalVideoURLForAd:]
  -[ADPlayer _beginLoadingVideoFromURL:]
  -[ADPlayer playbackHasBegun]
  -[ADPlayer playerItemDidPlayToEnd:]
  -[ADPlayer playerItemDidFailedToPlayToEnd:]
  -[ADPlayer playerItemEncounteredPlaybackStall:]
  -[ADPlayer setTimeObserver:]
  -[ADPlayer setPlaybackHasBegun:]
  -[ADPlayer timeObserver]
  -[ADPlayer playerDidStart]
  -[ADPlayer playerDidPause]
  -[ADPlayer prepareForPlayackOfInterstitialWithURL:]


ADPrerollSlider : UISlider /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[ADPrerollSlider initWithFrame:]
  -[ADPrerollSlider trackRectForBounds:]


ADWebViewURLProxyProtocol : NSURLProtocol /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement <NSURLSessionTaskDelegate, NSURLSessionDataDelegate>
 @property  NSThread *clientThread
 @property  NSArray *modes
 @property  double startTime
 @property  NSURLSessionDataTask *task
 @property  ADNSURLSessionDemultiplexer *sessionDemux
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ADWebViewURLProxyProtocol initialize]
  +[ADWebViewURLProxyProtocol canInitWithRequest:]
  +[ADWebViewURLProxyProtocol canonicalRequestForRequest:]
  +[ADWebViewURLProxyProtocol unregister]
  +[ADWebViewURLProxyProtocol registerProtocol]
  +[ADWebViewURLProxyProtocol basicProxyAuthHeaderSizeForUser:withPassword:]
  +[ADWebViewURLProxyProtocol createLongProxyAuthHeaderRecordForRequest:proxyAuthHeaderSize:]

  // instance methods
  -[ADWebViewURLProxyProtocol dealloc]
  -[ADWebViewURLProxyProtocol .cxx_destruct]
  -[ADWebViewURLProxyProtocol modes]
  -[ADWebViewURLProxyProtocol URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[ADWebViewURLProxyProtocol URLSession:task:didReceiveChallenge:completionHandler:]
  -[ADWebViewURLProxyProtocol URLSession:task:didCompleteWithError:]
  -[ADWebViewURLProxyProtocol URLSession:dataTask:didReceiveData:]
  -[ADWebViewURLProxyProtocol URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[ADWebViewURLProxyProtocol task]
  -[ADWebViewURLProxyProtocol setTask:]
  -[ADWebViewURLProxyProtocol startTime]
  -[ADWebViewURLProxyProtocol stopLoading]
  -[ADWebViewURLProxyProtocol startLoading]
  -[ADWebViewURLProxyProtocol setStartTime:]
  -[ADWebViewURLProxyProtocol setModes:]
  -[ADWebViewURLProxyProtocol sessionDemux]
  -[ADWebViewURLProxyProtocol setSessionDemux:]
  -[ADWebViewURLProxyProtocol setClientThread:]
  -[ADWebViewURLProxyProtocol clientThread]


ADVideoAssetURLProtocol : NSURLProtocol /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement <NSURLSessionTaskDelegate, NSURLSessionDataDelegate>
 @property  NSThread *clientThread
 @property  NSArray *modes
 @property  double startTime
 @property  NSURLSessionDataTask *task
 @property  ADNSURLSessionDemultiplexer *sessionDemux
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ADVideoAssetURLProtocol initialize]
  +[ADVideoAssetURLProtocol canInitWithRequest:]
  +[ADVideoAssetURLProtocol canonicalRequestForRequest:]
  +[ADVideoAssetURLProtocol unregister]
  +[ADVideoAssetURLProtocol registerProtocol]

  // instance methods
  -[ADVideoAssetURLProtocol dealloc]
  -[ADVideoAssetURLProtocol .cxx_destruct]
  -[ADVideoAssetURLProtocol modes]
  -[ADVideoAssetURLProtocol URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[ADVideoAssetURLProtocol URLSession:task:didReceiveChallenge:completionHandler:]
  -[ADVideoAssetURLProtocol URLSession:task:didCompleteWithError:]
  -[ADVideoAssetURLProtocol URLSession:dataTask:didReceiveData:]
  -[ADVideoAssetURLProtocol URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[ADVideoAssetURLProtocol task]
  -[ADVideoAssetURLProtocol setTask:]
  -[ADVideoAssetURLProtocol startTime]
  -[ADVideoAssetURLProtocol stopLoading]
  -[ADVideoAssetURLProtocol startLoading]
  -[ADVideoAssetURLProtocol setStartTime:]
  -[ADVideoAssetURLProtocol setModes:]
  -[ADVideoAssetURLProtocol sessionDemux]
  -[ADVideoAssetURLProtocol setSessionDemux:]
  -[ADVideoAssetURLProtocol setClientThread:]
  -[ADVideoAssetURLProtocol clientThread]


ADCountdownButton : UIControl /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIImage *iconImage
 @property  UIImage *dimmedIconImage
 @property  UIImageView *backgroundView
 @property  UIImageView *iconView
 @property  UIView *outlineView
 @property  CAShapeLayer *outlineProgressLayer
 @property  BOOL dimmed

  // class methods
  +[ADCountdownButton _closeBoxImage]
  +[ADCountdownButton _inactiveCloseBoxImage]

  // instance methods
  -[ADCountdownButton init]
  -[ADCountdownButton setEnabled:]
  -[ADCountdownButton .cxx_destruct]
  -[ADCountdownButton intrinsicContentSize]
  -[ADCountdownButton accessibilityTraits]
  -[ADCountdownButton isAccessibilityElement]
  -[ADCountdownButton backgroundView]
  -[ADCountdownButton gestureRecognizerShouldBegin:]
  -[ADCountdownButton setHighlighted:]
  -[ADCountdownButton setBackgroundView:]
  -[ADCountdownButton iconImage]
  -[ADCountdownButton iconView]
  -[ADCountdownButton setIconView:]
  -[ADCountdownButton setIconImage:]
  -[ADCountdownButton setDimmed:]
  -[ADCountdownButton dimmed]
  -[ADCountdownButton startEnablingButtonWithCountdownDuration:completionHandler:]
  -[ADCountdownButton setDimmedIconImage:]
  -[ADCountdownButton setOutlineView:]
  -[ADCountdownButton outlineView]
  -[ADCountdownButton setOutlineProgressLayer:]
  -[ADCountdownButton outlineProgressLayer]
  -[ADCountdownButton setCountdownProgress:]
  -[ADCountdownButton setDimmed:animated:]
  -[ADCountdownButton dimmedIconImage]
  -[ADCountdownButton countdownProgress]


ADWebView : WKWebView /System/Library/Frameworks/CoreMedia.framework/CoreMedia <WKNavigationDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ADWebView initWithFrame:configuration:]
  -[ADWebView webView:decidePolicyForNavigationAction:decisionHandler:]
  -[ADWebView webView:didFailProvisionalNavigation:withError:]
  -[ADWebView webView:didFailNavigation:withError:]


ADPrivacyMarker : UIButton /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  BOOL isVideo
 @property  NSLayoutConstraint *constraintHeight
 @property  NSLayoutConstraint *constraintWidth

  // class methods
  +[ADPrivacyMarker localizedAdMarkerText]
  +[ADPrivacyMarker bundleForLocalizedString]
  +[ADPrivacyMarker deviceContentSize]
  +[ADPrivacyMarker dimensionsForVideoMarker]
  +[ADPrivacyMarker localizedLearnMoreText]

  // instance methods
  -[ADPrivacyMarker init]
  -[ADPrivacyMarker dealloc]
  -[ADPrivacyMarker .cxx_destruct]
  -[ADPrivacyMarker intrinsicContentSize]
  -[ADPrivacyMarker accessibilityLabel]
  -[ADPrivacyMarker isAccessibilityElement]
  -[ADPrivacyMarker accessibilityElements]
  -[ADPrivacyMarker isVideo]
  -[ADPrivacyMarker setIsVideo:]
  -[ADPrivacyMarker resetBannerMarkerForVideoMarker]
  -[ADPrivacyMarker setConstraintHeight:]
  -[ADPrivacyMarker setConstraintWidth:]
  -[ADPrivacyMarker constraintHeight]
  -[ADPrivacyMarker constraintWidth]
  -[ADPrivacyMarker updateAdMarkerSpec]
  -[ADPrivacyMarker updateBackgroundAndTintColor]
  -[ADPrivacyMarker renderMarkerForBannerForCategory:andLanguage:]


ADHomeButtonHandler : NSObject /usr/lib/libSystem.B.dylib <SBSHardwareButtonEventConsuming>
 @property  <BSInvalidatable> *homeButtonAssertion
 @property  @? homeButtonHandlerCallback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ADHomeButtonHandler handlerWithCompletion:]

  // instance methods
  -[ADHomeButtonHandler .cxx_destruct]
  -[ADHomeButtonHandler consumeSinglePressUpForButtonKind:]
  -[ADHomeButtonHandler initWithCompletion:]
  -[ADHomeButtonHandler stopConsumingHardwarePresses]
  -[ADHomeButtonHandler startConsumingHardwarePresses:]
  -[ADHomeButtonHandler setHomeButtonHandlerCallback:]
  -[ADHomeButtonHandler homeButtonAssertion]
  -[ADHomeButtonHandler setHomeButtonAssertion:]
  -[ADHomeButtonHandler homeButtonHandlerCallback]


ADCalendarEvent : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *eventDescription
 @property  NSString *location
 @property  NSString *summary
 @property  NSString *url
 @property  NSDate *start
 @property  NSDate *end
 @property  BOOL allDay
 @property  EKRecurrenceRule *recurrence
 @property  NSObject<OS_dispatch_queue> *calendarEventQueue

  // instance methods
  -[ADCalendarEvent .cxx_destruct]
  -[ADCalendarEvent initWithDictionary:]
  -[ADCalendarEvent start]
  -[ADCalendarEvent url]
  -[ADCalendarEvent location]
  -[ADCalendarEvent end]
  -[ADCalendarEvent setUrl:]
  -[ADCalendarEvent setLocation:]
  -[ADCalendarEvent setStart:]
  -[ADCalendarEvent setEnd:]
  -[ADCalendarEvent summary]
  -[ADCalendarEvent setSummary:]
  -[ADCalendarEvent setAllDay:]
  -[ADCalendarEvent allDay]
  -[ADCalendarEvent recurrence]
  -[ADCalendarEvent setRecurrence:]
  -[ADCalendarEvent EKEventInEventStore:]
  -[ADCalendarEvent retrieveEventInEventStore:byIdentifier:withBlock:]
  -[ADCalendarEvent _recurrenceRuleFromDictionary:]
  -[ADCalendarEvent calendarEventQueue]
  -[ADCalendarEvent _eventIsEqualToCalendarEvent:]
  -[ADCalendarEvent eventDescription]
  -[ADCalendarEvent setEventDescription:]
  -[ADCalendarEvent setCalendarEventQueue:]


ADMediaAnalyticsEventInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  double totalDuration
 @property  double currentPlaybackTime
 @property  double visiblePercentage
 @property  double volume

  // instance methods
  -[ADMediaAnalyticsEventInfo copyWithZone:]
  -[ADMediaAnalyticsEventInfo volume]
  -[ADMediaAnalyticsEventInfo setVolume:]
  -[ADMediaAnalyticsEventInfo totalDuration]
  -[ADMediaAnalyticsEventInfo currentPlaybackTime]
  -[ADMediaAnalyticsEventInfo setCurrentPlaybackTime:]
  -[ADMediaAnalyticsEventInfo setTotalDuration:]
  -[ADMediaAnalyticsEventInfo visiblePercentage]
  -[ADMediaAnalyticsEventInfo setVisiblePercentage:]


ADClient : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ADClient sharedClient]

  // instance methods
  -[ADClient addClientToSegments:replaceExisting:]
  -[ADClient segmentDataForSignedInUserWithBlock:]
  -[ADClient prepareForAdRequests]
  -[ADClient requestAttributionDetailsWithBlock:]
  -[ADClient determineAppInstallationAttributionWithCompletionHandler:]
  -[ADClient lookupAdConversionDetails:]


AdQueue : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *array
 @property  NSObject<OS_dispatch_queue> *concurrentQueue

  // instance methods
  -[AdQueue init]
  -[AdQueue count]
  -[AdQueue array]
  -[AdQueue setArray:]
  -[AdQueue .cxx_destruct]
  -[AdQueue concurrentQueue]
  -[AdQueue dequeue]
  -[AdQueue setConcurrentQueue:]
  -[AdQueue enqueue:]


ADContext : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableSet *tags
 @property  NSString *requestJSON

  // instance methods
  -[ADContext copyWithZone:]
  -[ADContext .cxx_destruct]
  -[ADContext initWithTags:]
  -[ADContext tags]
  -[ADContext setTags:]
  -[ADContext fullContext]
  -[ADContext setContextInfoForConfiguration:]
  -[ADContext matchesForNewContext:matchClauses:excludeTags:]
  -[ADContext isFeed]
  -[ADContext requestJSON]
  -[ADContext _matchesClause:inContext:]
  -[ADContext setRequestJSON:]


ADCanonicalRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *signingQueue
 @property  NSObject<OS_dispatch_group> *signingGroup
 @property  BOOL didLeaveGroup

  // class methods
  +[ADCanonicalRequest sharedInstance]

  // instance methods
  -[ADCanonicalRequest init]
  -[ADCanonicalRequest .cxx_destruct]
  -[ADCanonicalRequest canonicalRequestForRequest:]
  -[ADCanonicalRequest setDidLeaveGroup:]
  -[ADCanonicalRequest didLeaveGroup]
  -[ADCanonicalRequest signingQueue]
  -[ADCanonicalRequest setSigningQueue:]
  -[ADCanonicalRequest signingGroup]
  -[ADCanonicalRequest setSigningGroup:]


ADNSURLSessionDemultiplexer : NSObject /usr/lib/libSystem.B.dylib <NSURLSessionDataDelegate>
 @property  NSMutableDictionary *taskInfoByTaskIdentifier
 @property  NSURLSessionConfiguration *configuration
 @property  NSURLSession *session
 @property  NSString *identifier
 @property  NSObject<OS_dispatch_queue> *demuxQueue
 @property  long long requestCount
 @property  long long maximumRequestCount
 @property  @? sessionInvalidated
 @property  BOOL sessionMarkedInvalid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ADNSURLSessionDemultiplexer dealloc]
  -[ADNSURLSessionDemultiplexer .cxx_destruct]
  -[ADNSURLSessionDemultiplexer identifier]
  -[ADNSURLSessionDemultiplexer setIdentifier:]
  -[ADNSURLSessionDemultiplexer session]
  -[ADNSURLSessionDemultiplexer setSession:]
  -[ADNSURLSessionDemultiplexer setConfiguration:]
  -[ADNSURLSessionDemultiplexer configuration]
  -[ADNSURLSessionDemultiplexer URLSession:didBecomeInvalidWithError:]
  -[ADNSURLSessionDemultiplexer URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[ADNSURLSessionDemultiplexer URLSession:task:didReceiveChallenge:completionHandler:]
  -[ADNSURLSessionDemultiplexer URLSession:task:didCompleteWithError:]
  -[ADNSURLSessionDemultiplexer URLSession:dataTask:didReceiveData:]
  -[ADNSURLSessionDemultiplexer URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[ADNSURLSessionDemultiplexer removeTask:]
  -[ADNSURLSessionDemultiplexer requestCount]
  -[ADNSURLSessionDemultiplexer sessionInvalidated]
  -[ADNSURLSessionDemultiplexer taskInfoForTask:]
  -[ADNSURLSessionDemultiplexer setRequestCount:]
  -[ADNSURLSessionDemultiplexer setMaximumRequestCount:]
  -[ADNSURLSessionDemultiplexer initWithConfiguration:forIdentifier:withMaximumRequestCount:]
  -[ADNSURLSessionDemultiplexer invalidateSessionWithCompletionHandler:]
  -[ADNSURLSessionDemultiplexer dataTaskWithRequest:delegate:modes:]
  -[ADNSURLSessionDemultiplexer sessionMarkedInvalid]
  -[ADNSURLSessionDemultiplexer maximumRequestCount]
  -[ADNSURLSessionDemultiplexer demuxQueue]
  -[ADNSURLSessionDemultiplexer taskInfoByTaskIdentifier]
  -[ADNSURLSessionDemultiplexer setSessionMarkedInvalid:]
  -[ADNSURLSessionDemultiplexer setSessionInvalidated:]
  -[ADNSURLSessionDemultiplexer setTaskInfoByTaskIdentifier:]
  -[ADNSURLSessionDemultiplexer setDemuxQueue:]


ADPrerollView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <UIGestureRecognizerDelegate, ADPrerollTopBarDelegate, ADPrerollBottomBarDelegate>
 @property  ADPrerollTopBar *topBar
 @property  ADPrerollBottomBar *bottomBar
 @property  BOOL skipButtonCountingDown
 @property  UIImageView *swooshView
 @property  NSTimer *passiveWatchingTimer
 @property  double accumulatedViewingTime
 @property  ADPrivacyMarker *privacyMarker
 @property  <ADPrerollViewDelegate> *delegate
 @property  BOOL barsVisible
 @property  BOOL hasAction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ADPrerollView layerClass]

  // instance methods
  -[ADPrerollView delegate]
  -[ADPrerollView setDelegate:]
  -[ADPrerollView .cxx_destruct]
  -[ADPrerollView observeValueForKeyPath:ofObject:change:context:]
  -[ADPrerollView initWithFrame:]
  -[ADPrerollView accessibilityPerformEscape]
  -[ADPrerollView gestureRecognizer:shouldReceiveTouch:]
  -[ADPrerollView layoutSubviews]
  -[ADPrerollView setHasAction:]
  -[ADPrerollView hasAction]
  -[ADPrerollView shutdown]
  -[ADPrerollView setTopBar:]
  -[ADPrerollView topBar]
  -[ADPrerollView setPrivacyMarker:]
  -[ADPrerollView privacyMarker]
  -[ADPrerollView enablePrivacyButton]
  -[ADPrerollView _privacyButtonWasTapped]
  -[ADPrerollView fadeToBlackWithCompletion:]
  -[ADPrerollView attachToAVPlayer:showiAdBrandingSwoosh:]
  -[ADPrerollView beginCountdown:]
  -[ADPrerollView setElapsedTime:totalTime:]
  -[ADPrerollView displayAsPaused:]
  -[ADPrerollView topBarScaleToFill:]
  -[ADPrerollView topBarScaleToFit:]
  -[ADPrerollView topBarDoneButtonTapped:]
  -[ADPrerollView _layoutForExpandedSize]
  -[ADPrerollView accumulatedViewingTime]
  -[ADPrerollView skipButtonCountingDown]
  -[ADPrerollView setSkipButtonCountingDown:]
  -[ADPrerollView setAccumulatedViewingTime:]
  -[ADPrerollView bottomBarActionButtonTapped:]
  -[ADPrerollView bottomBarSkipButtonTapped:]
  -[ADPrerollView bottomBarPauseButtonTapped:]
  -[ADPrerollView bottomBarPlayButtonTapped:]
  -[ADPrerollView setBottomBar:]
  -[ADPrerollView bottomBar]
  -[ADPrerollView setSwooshView:]
  -[ADPrerollView swooshView]
  -[ADPrerollView _singleTapGestureRecognized:]
  -[ADPrerollView setBarsVisible:]
  -[ADPrerollView passiveWatchingTimer]
  -[ADPrerollView _firePassiveWatchingTimer:]
  -[ADPrerollView setPassiveWatchingTimer:]
  -[ADPrerollView barsVisible]
  -[ADPrerollView _restartPassiveWatchingTimer]


ADSubscriptionEvent : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  long long type
 @property  NSString *qToken
 @property  NSString *sourceID
 @property  double eventTime
 @property  NSDictionary *info

  // instance methods
  -[ADSubscriptionEvent copyWithZone:]
  -[ADSubscriptionEvent type]
  -[ADSubscriptionEvent setType:]
  -[ADSubscriptionEvent .cxx_destruct]
  -[ADSubscriptionEvent info]
  -[ADSubscriptionEvent sourceID]
  -[ADSubscriptionEvent setSourceID:]
  -[ADSubscriptionEvent setInfo:]
  -[ADSubscriptionEvent setEventTime:]
  -[ADSubscriptionEvent eventTime]
  -[ADSubscriptionEvent qToken]
  -[ADSubscriptionEvent setQToken:]
  -[ADSubscriptionEvent initWithType:withQToken:withSourceID:withEventTime:withInfo:]


ADW3CDateParser : ADDateStringNormalizer
  // instance methods
  -[ADW3CDateParser init]
  -[ADW3CDateParser normalize:]


ADJSDateParser : ADDateStringNormalizer
  // instance methods
  -[ADJSDateParser init]
  -[ADJSDateParser normalize:]


ADDateStringNormalizer : NSObject /usr/lib/libSystem.B.dylib
 @property  NSRegularExpression *regularExpression

  // class methods
  +[ADDateStringNormalizer formatter]
  +[ADDateStringNormalizer dateFromString:]
  +[ADDateStringNormalizer normalizers]
  +[ADDateStringNormalizer relativeDateFormatStringForDate:]

  // instance methods
  -[ADDateStringNormalizer .cxx_destruct]
  -[ADDateStringNormalizer regularExpression]
  -[ADDateStringNormalizer setRegularExpression:]
  -[ADDateStringNormalizer normalize:]


ADDimmerView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  ADTapGestureRecognizer *gestureRecognizer
 @property  BOOL dimmed
 @property  BOOL enabled
 @property  <ADDimmerViewDelegate> *delegate

  // instance methods
  -[ADDimmerView enabled]
  -[ADDimmerView delegate]
  -[ADDimmerView setDelegate:]
  -[ADDimmerView .cxx_destruct]
  -[ADDimmerView initWithFrame:]
  -[ADDimmerView setGestureRecognizer:]
  -[ADDimmerView gestureRecognizer]
  -[ADDimmerView _tapRecognized:]
  -[ADDimmerView setDimmed:]
  -[ADDimmerView dimmed]
  -[ADDimmerView removeADTapGestureRecognizer]
  -[ADDimmerView addADTapGestureRecognizer]


ADiTunesActionViewController : ADActionViewController <SKStoreProductViewControllerDelegate>
 @property  SKStoreProductViewController *storeProductViewController
 @property  int defaultResult
 @property  ADHomeButtonHandler *homeButtonHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ADiTunesActionViewController .cxx_destruct]
  -[ADiTunesActionViewController dismiss]
  -[ADiTunesActionViewController viewWillAppear:]
  -[ADiTunesActionViewController viewWillDisappear:]
  -[ADiTunesActionViewController supportedInterfaceOrientations]
  -[ADiTunesActionViewController productViewController:didFinishWithResult:]
  -[ADiTunesActionViewController setHomeButtonHandler:]
  -[ADiTunesActionViewController homeButtonHandler]
  -[ADiTunesActionViewController clientApplicationDidEnterBackground]
  -[ADiTunesActionViewController didSetAdSpace]
  -[ADiTunesActionViewController setStoreProductViewController:]
  -[ADiTunesActionViewController storeProductViewController]
  -[ADiTunesActionViewController setDefaultResult:]
  -[ADiTunesActionViewController defaultResult]


ADRemoteSigningService : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *signingQueue
 @property  NSObject<OS_dispatch_group> *signingGroup
 @property  BOOL didLeaveGroup

  // class methods
  +[ADRemoteSigningService sharedInstance]

  // instance methods
  -[ADRemoteSigningService init]
  -[ADRemoteSigningService .cxx_destruct]
  -[ADRemoteSigningService signedCredentialForRequest:withPersistence:]
  -[ADRemoteSigningService setDidLeaveGroup:]
  -[ADRemoteSigningService didLeaveGroup]
  -[ADRemoteSigningService signingQueue]
  -[ADRemoteSigningService setSigningQueue:]
  -[ADRemoteSigningService signingGroup]
  -[ADRemoteSigningService setSigningGroup:]


ADCreativeController : NSObject /usr/lib/libSystem.B.dylib <WKNavigationDelegate, ADWebProcessDelegate, _WKInputDelegate>
 @property  ADAdImpressionPublicAttributes *publicAttributes
 @property  @? loadCompletion
 @property  _WKRemoteObjectInterface *remoteObjectInterface
 @property  NSString *creativeIdentifier
 @property  NSString *adSpaceIdentifier
 @property  BOOL isExpandedCreativePresented
 @property  BOOL browserContextControllerDidLoad
 @property  ADWebViewGestureRecognizer *gestureRecognizer
 @property  BOOL shouldBlockNavigation
 @property  ADWebView *creativeView
 @property  BOOL contentVisible
 @property  <ADCreativeControllerDelegate> *delegate
 @property  BOOL tapWasRecognized
 @property  BOOL isVideoAd
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ADCreativeController dealloc]
  -[ADCreativeController delegate]
  -[ADCreativeController setDelegate:]
  -[ADCreativeController .cxx_destruct]
  -[ADCreativeController setRemoteObjectInterface:]
  -[ADCreativeController remoteObjectInterface]
  -[ADCreativeController setGestureRecognizer:]
  -[ADCreativeController gestureRecognizer]
  -[ADCreativeController setContentVisible:]
  -[ADCreativeController tearDown]
  -[ADCreativeController webView:decidePolicyForNavigationAction:decisionHandler:]
  -[ADCreativeController webView:didFailProvisionalNavigation:withError:]
  -[ADCreativeController webView:didFinishNavigation:]
  -[ADCreativeController webView:didFailNavigation:withError:]
  -[ADCreativeController webViewWebContentProcessDidTerminate:]
  -[ADCreativeController _webView:focusShouldStartInputSession:]
  -[ADCreativeController _tapRecognized:]
  -[ADCreativeController setLoadCompletion:]
  -[ADCreativeController loadCompletion]
  -[ADCreativeController creativeIdentifier]
  -[ADCreativeController _incrementCreativeIdentifier]
  -[ADCreativeController webProcessPlugInDidCreateBrowserContextController]
  -[ADCreativeController webProcessPlugInWillDestroyBrowserContextController]
  -[ADCreativeController webProcessPlugInBrowserContextControllerGlobalObjectIsAvailableForFrame]
  -[ADCreativeController webProcessMRAIDJSODidCallClose]
  -[ADCreativeController webProcessMRAIDJSODidCallExpand:withMaximumSize:]
  -[ADCreativeController webProcessMRAIDJSODidCallCreateCalendarEvent:]
  -[ADCreativeController webProcessMRAIDJSODidCallOpen:]
  -[ADCreativeController webProcessVideoAdJSOGetVideoInfo:]
  -[ADCreativeController webProcessVideoAdJSOCreativeViewLoaded]
  -[ADCreativeController webProcessVideoAdJSODidCallPlayStarted:volume:]
  -[ADCreativeController webProcessVideoAdJSODidCallPlayResumed:volume:]
  -[ADCreativeController webProcessVideoAdJSODidCallPlayPaused:volume:]
  -[ADCreativeController webProcessVideoAdJSODidCallPlayProgressed:volume:]
  -[ADCreativeController webProcessVideoAdJSODidCallPlayCompletedWithVolume:]
  -[ADCreativeController webProcessVideoAdJSODidCallViewabilityChanged:playTime:volume:]
  -[ADCreativeController webProcessVideoAdJSODidCallVolumeChanged:playTime:]
  -[ADCreativeController webProcessVideoAdJSODidCallAudioMuted:]
  -[ADCreativeController webProcessVideoAdJSODidCallAudioUnmuted:volume:]
  -[ADCreativeController webProcessVideoAdJSODidCallMoreInfoTapped:volume:]
  -[ADCreativeController webProcessVideoAdJSODidCallVideoTapped:volume:]
  -[ADCreativeController webProcessVideoAdJSODidCallSkipAdTapped:volume:]
  -[ADCreativeController webProcessVideoAdJSODidCallFullScreenTapped:volume:]
  -[ADCreativeController webProcessVideoAdJSODidCallExitFullScreenTapped:volume:]
  -[ADCreativeController _navigationIsBlocked]
  -[ADCreativeController _resetGestureFlags]
  -[ADCreativeController setCreativeIdentifier:]
  -[ADCreativeController shouldBlockNavigation]
  -[ADCreativeController setShouldBlockNavigation:]
  -[ADCreativeController setTapWasRecognized:]
  -[ADCreativeController tapWasRecognized]
  -[ADCreativeController setBrowserContextControllerDidLoad:]
  -[ADCreativeController _requestOpenURL:]
  -[ADCreativeController browserContextControllerDidLoad]
  -[ADCreativeController unregisterExportedObjectInterface]
  -[ADCreativeController creativeView]
  -[ADCreativeController frameForCreativeView]
  -[ADCreativeController resetVideoPlaytime]
  -[ADCreativeController adSpaceActionViewControllerWillDismiss:]
  -[ADCreativeController adSpaceActionViewControllerWillPresent:]
  -[ADCreativeController setIsVideoAd:]
  -[ADCreativeController loadAdImpression:identifier:completionHandler:]
  -[ADCreativeController isVideoAd]
  -[ADCreativeController _updateWebProcessProxyVisibility]
  -[ADCreativeController isExpandedCreativePresented]
  -[ADCreativeController publicAttributes]
  -[ADCreativeController adSpaceIdentifier]
  -[ADCreativeController _customUserAgentString]
  -[ADCreativeController setPublicAttributes:]
  -[ADCreativeController setAdSpaceIdentifier:]
  -[ADCreativeController _userAgentForUserAgentString:]
  -[ADCreativeController setIsExpandedCreativePresented:]
  -[ADCreativeController isContentVisible]
  -[ADCreativeController _callLoadCompletionWithError:]
  -[ADCreativeController _navigationAttemptBlockedDueToAccidentalTapForMRAIDActionType:]
  -[ADCreativeController _tapGestureTimerDidExpireForRequestedActionType:]
  -[ADCreativeController contentVisible]


NSData(ADFoundationExtras)
	// instance methods
	-[NSData(ADFoundationExtras) _iAd_writeToTemporaryFileWithExtension:completion:]
	-[NSData(ADFoundationExtras) _iAd_writeToTemporaryFileForMIMEType:sourceURL:completion:]

NSDictionary(ADFoundationExtras)
	// instance methods
	-[NSDictionary(ADFoundationExtras) _iAd_stringValueForKey:]

NSURL(ADFoundationExtras)
	// class methods
	+[NSURL(ADFoundationExtras) proxyURLForVideoURL:identifier:changeScheme:]
	+[NSURL(ADFoundationExtras) queryParametersForURL:]
	+[NSURL(ADFoundationExtras) valueForKey:fromQueryItems:]
	+[NSURL(ADFoundationExtras) removeQueryItemForKey:fromURL:]

	// instance methods
	-[NSURL(ADFoundationExtras) _iAd_URLByReplacingQueryStringWithString:]
	-[NSURL(ADFoundationExtras) _iad_URLByRemovingDuplicateSlashes]
	-[NSURL(ADFoundationExtras) _iAd_isHttpOnly]
	-[NSURL(ADFoundationExtras) _iAd_isHttpOrHttps]
	-[NSURL(ADFoundationExtras) decodePercentEscapesEncoding]

NSHTTPURLResponse(ADFoundationExtras)
	// instance methods
	-[NSHTTPURLResponse(ADFoundationExtras) _iAd_cacheControlMaxAge]

NSLock(ADFoundationExtras)
	// instance methods
	-[NSLock(ADFoundationExtras) _iAd_withLock:]

UIView(iAd_Extras)
	// instance methods
	-[UIView(iAd_Extras) _iAd_screenFrame]
	-[UIView(iAd_Extras) _iAd_removeConstraintsReferencingView:constrainedView:]
	-[UIView(iAd_Extras) _iAd_isVisiblePercentageThreshold:]
	-[UIView(iAd_Extras) _iAd_visiblePercentage]
	-[UIView(iAd_Extras) _iAd_isVisible:]
	-[UIView(iAd_Extras) _iAd_isVisibleFast]
	-[UIView(iAd_Extras) _iAd_isFeldsparClientVisibleFast]
	-[UIView(iAd_Extras) _iAd_isFeldsparClientVisibleFastInSize:]

NSOperationQueue(ADSessionSharedDelegateQueue)
	// class methods
	+[NSOperationQueue(ADSessionSharedDelegateQueue) adSessionSharedDelegateQueue]

CLLocation(Snapping)
	// instance methods
	-[CLLocation(Snapping) snappedToGrid:]

WKProcessPool(ADProcessPool)
	// class methods
	+[WKProcessPool(ADProcessPool) _newProcessPoolWithPriority:video:]
	+[WKProcessPool(ADProcessPool) advertisingProcessPool:]
	+[WKProcessPool(ADProcessPool) advertisingProcessPoolForVideo:]

AVPlayerViewController(iAdPreroll)
	// class methods
	+[AVPlayerViewController(iAdPreroll) preparePrerollAds]

	// instance methods
	-[AVPlayerViewController(iAdPreroll) playPrerollAdWithCompletionHandler:]
	-[AVPlayerViewController(iAdPreroll) cancelPreroll]

UIViewController(iAdAdditions_Private)
	// class methods
	+[UIViewController(iAdAdditions_Private) prepareInterstitialAds]

	// instance methods
	-[UIViewController(iAdAdditions_Private) _iAd_advertisingController]
	-[UIViewController(iAdAdditions_Private) _iAd_requestForInterstitialAdDidSucceed:resultMessage:]
	-[UIViewController(iAdAdditions_Private) setInterstitialPresentationPolicy:]
	-[UIViewController(iAdAdditions_Private) interstitialPresentationPolicy]
	-[UIViewController(iAdAdditions_Private) canDisplayBannerAds]
	-[UIViewController(iAdAdditions_Private) setCanDisplayBannerAds:]
	-[UIViewController(iAdAdditions_Private) originalContentView]
	-[UIViewController(iAdAdditions_Private) isPresentingFullScreenAd]
	-[UIViewController(iAdAdditions_Private) isDisplayingBannerAd]
	-[UIViewController(iAdAdditions_Private) requestInterstitialAdPresentation]
	-[UIViewController(iAdAdditions_Private) shouldPresentInterstitialAd]

WKWebViewConfiguration(ADShared)
	// class methods
	+[WKWebViewConfiguration(ADShared) sharedAdvertisingConfiguration:]
	+[WKWebViewConfiguration(ADShared) sharedAdvertisingConfigurationForVideo:]
	+[WKWebViewConfiguration(ADShared) _newSharedConfiguration:forVideo:]
	+[WKWebViewConfiguration(ADShared) excludeCustomJavaScript]

MPMoviePlayerController(iAdPreroll)
	// class methods
	+[MPMoviePlayerController(iAdPreroll) preparePrerollAds]

	// instance methods
	-[MPMoviePlayerController(iAdPreroll) playPrerollAdWithCompletionHandler:]
	-[MPMoviePlayerController(iAdPreroll) cancelPreroll]

EKEventStore(ADShared)
	// class methods
	+[EKEventStore(ADShared) sharedEventStore]

UIApplication(iAdAdditions)
	// class methods
	+[UIApplication(iAdAdditions) uiApplicationHasNewsClientEntitlement]

UIImage(iAdAdditions)
	// class methods
	+[UIImage(iAdAdditions) _iAd_imageNamed:]

01 00 1300 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1a00 /System/Library/PrivateFrameworks/iAdServices.framework/iAdServices: ADAdServingDaemonConnection 
01 00 1a00 /System/Library/PrivateFrameworks/iAdServices.framework/iAdServices: ADAdSpaceConfiguration 
01 00 1a00 /System/Library/PrivateFrameworks/iAdServices.framework/iAdServices: ADAdSpaceEventInfo 
01 00 0800 /System/Library/PrivateFrameworks/AdPlatforms.framework/AdPlatforms: ADAttribution 
01 00 1a00 /System/Library/PrivateFrameworks/iAdServices.framework/iAdServices: ADDefaults 
01 00 1a00 /System/Library/PrivateFrameworks/iAdServices.framework/iAdServices: ADDeviceInfo 
01 00 1a00 /System/Library/PrivateFrameworks/iAdServices.framework/iAdServices: ADMRAIDAction 
01 00 1a00 /System/Library/PrivateFrameworks/iAdServices.framework/iAdServices: ADSInternalPoint 
01 00 1a00 /System/Library/PrivateFrameworks/iAdServices.framework/iAdServices: ADSInternalRect 
01 00 1a00 /System/Library/PrivateFrameworks/iAdServices.framework/iAdServices: ADSInternalSize 
01 00 1a00 /System/Library/PrivateFrameworks/iAdServices.framework/iAdServices: ADServiceUtilities 
01 00 1000 /System/Library/Frameworks/AdSupport.framework/AdSupport: ASIdentifierManager 
01 00 1940 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerViewController 
01 00 1500 /System/Library/PrivateFrameworks/AdAnalytics.framework/AdAnalytics: AdAnalyticsCommon 
01 00 1500 /System/Library/PrivateFrameworks/AdAnalytics.framework/AdAnalytics: AdAnalyticsEventInfo 
01 00 1500 /System/Library/PrivateFrameworks/AdAnalytics.framework/AdAnalytics: AdAnalyzer 
01 00 1b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 1b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0d00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLGeocoder 
01 00 0d00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0d00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0a00 /System/Library/Frameworks/EventKit.framework/EventKit: EKEvent 
01 00 0b00 /System/Library/Frameworks/EventKitUI.framework/EventKitUI: EKEventEditViewController 
01 00 0a00 /System/Library/Frameworks/EventKit.framework/EventKit: EKEventStore 
01 00 0a00 /System/Library/Frameworks/EventKit.framework/EventKit: EKRecurrenceDayOfWeek 
01 00 0a00 /System/Library/Frameworks/EventKit.framework/EventKit: EKRecurrenceEnd 
01 00 0a00 /System/Library/Frameworks/EventKit.framework/EventKit: EKRecurrenceRule 
01 00 0900 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMoviePlayerController 
01 00 0900 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMoviePlayerViewController 
01 00 0900 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPNetworkPlayabilityMonitor 
01 00 0900 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPVolumeSlider 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCache 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCredential 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLProtocol 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0c00 /System/Library/PrivateFrameworks/TransparencyDetailsView.framework/TransparencyDetailsView: NewsTransparencyViewController 
01 00 0500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSHardwareButtonService 
01 00 0200 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFSafariViewController 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontMetrics 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardInputModeController 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISlider 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStatusBar 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStatusBarHideAnimationParameters 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1200 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: WKBrowsingContextController 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: WKPreferences 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: WKProcessPool 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: WKUserContentController 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: WKUserScript 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebView 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebViewConfiguration 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebsiteDataStore 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: _WKProcessPoolConfiguration 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: _WKRemoteObjectInterface 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: _WKUserStyleSheet 
