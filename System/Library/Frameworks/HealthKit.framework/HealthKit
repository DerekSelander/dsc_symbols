|| __DATA.__data _HKAudiogramDiagnosticCategories
|| __DATA.__data _HKDataTypeDefinitions
|| __DATA.__data _HKUnrecognizedCodingSystemIndex
|| __DATA.__data _kHKCloudSyncRebaseDeadlineTriggerThreshold
|| __DATA.__data _kHKConnectedGymPreferencesChangedNotificationKey
|| __DATA.__objc_data _OBJC_CLASS_$_HKAccountOwner
|| __DATA.__objc_data _OBJC_CLASS_$_HKAccountOwnerType
|| __DATA.__objc_data _OBJC_CLASS_$_HKActivityCache
|| __DATA.__objc_data _OBJC_CLASS_$_HKAllergyReaction
|| __DATA.__objc_data _OBJC_CLASS_$_HKAudioExposureValue
|| __DATA.__objc_data _OBJC_CLASS_$_HKAudiogramSample
|| __DATA.__objc_data _OBJC_CLASS_$_HKAudiogramSensitivityPoint
|| __DATA.__objc_data _OBJC_CLASS_$_HKAuthorizationPresentationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HKBiologicalSexObject
|| __DATA.__objc_data _OBJC_CLASS_$_HKBloodTypeObject
|| __DATA.__objc_data _OBJC_CLASS_$_HKCDADocument
|| __DATA.__objc_data _OBJC_CLASS_$_HKCSVParser
|| __DATA.__objc_data _OBJC_CLASS_$_HKChartableCodedQuantity
|| __DATA.__objc_data _OBJC_CLASS_$_HKChartableCodedQuantitySet
|| __DATA.__objc_data _OBJC_CLASS_$_HKClinicalProviderSearchResult
|| __DATA.__objc_data _OBJC_CLASS_$_HKClinicalRecord
|| __DATA.__objc_data _OBJC_CLASS_$_HKCloudSyncControl
|| __DATA.__objc_data _OBJC_CLASS_$_HKCodableCondensedWorkout
|| __DATA.__objc_data _OBJC_CLASS_$_HKCodableCondensedWorkoutCollection
|| __DATA.__objc_data _OBJC_CLASS_$_HKCodableQuantitySeries
|| __DATA.__objc_data _OBJC_CLASS_$_HKCodableQuantitySeriesDatum
|| __DATA.__objc_data _OBJC_CLASS_$_HKCodableQuantitySeriesEnumerationResult
|| __DATA.__objc_data _OBJC_CLASS_$_HKCodableQuantitySeriesEnumerationResultCollection
|| __DATA.__objc_data _OBJC_CLASS_$_HKCodedQuantity
|| __DATA.__objc_data _OBJC_CLASS_$_HKCodedValue
|| __DATA.__objc_data _OBJC_CLASS_$_HKCodedValueCollection
|| __DATA.__objc_data _OBJC_CLASS_$_HKConcept
|| __DATA.__objc_data _OBJC_CLASS_$_HKConceptAttribute
|| __DATA.__objc_data _OBJC_CLASS_$_HKConceptFetchOptions
|| __DATA.__objc_data _OBJC_CLASS_$_HKConceptIndexUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_HKConceptRelationship
|| __DATA.__objc_data _OBJC_CLASS_$_HKConceptStore
|| __DATA.__objc_data _OBJC_CLASS_$_HKConceptStoreServerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HKCorrelationQuery
|| __DATA.__objc_data _OBJC_CLASS_$_HKCumulativeQuantitySeriesSample
|| __DATA.__objc_data _OBJC_CLASS_$_HKCurrentActivityCacheQuery
|| __DATA.__objc_data _OBJC_CLASS_$_HKCurrentActivityCacheQueryResult
|| __DATA.__objc_data _OBJC_CLASS_$_HKDaemonTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_HKDataFlowLink
|| __DATA.__objc_data _OBJC_CLASS_$_HKDateInterval
|| __DATA.__objc_data _OBJC_CLASS_$_HKDeviceQuery
|| __DATA.__objc_data _OBJC_CLASS_$_HKDiagnosticTestReport
|| __DATA.__objc_data _OBJC_CLASS_$_HKDiagnosticTestResult
|| __DATA.__objc_data _OBJC_CLASS_$_HKDiscreteQuantitySample
|| __DATA.__objc_data _OBJC_CLASS_$_HKDocumentQuery
|| __DATA.__objc_data _OBJC_CLASS_$_HKEADFFileParser
|| __DATA.__objc_data _OBJC_CLASS_$_HKElectrocardiogram
|| __DATA.__objc_data _OBJC_CLASS_$_HKElectrocardiogramBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_HKElectrocardiogramQuery
|| __DATA.__objc_data _OBJC_CLASS_$_HKElectrocardiogramSession
|| __DATA.__objc_data _OBJC_CLASS_$_HKElectrocardiogramSessionConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HKElectrocardiogramSessionTaskConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HKEquivalentsUnit
|| __DATA.__objc_data _OBJC_CLASS_$_HKExtendedHealthStore
|| __DATA.__objc_data _OBJC_CLASS_$_HKFHIRIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_HKFHIRResource
|| __DATA.__objc_data _OBJC_CLASS_$_HKFeatureAvailabilityRuleSet
|| __DATA.__objc_data _OBJC_CLASS_$_HKFitzpatrickSkinTypeObject
|| __DATA.__objc_data _OBJC_CLASS_$_HKFrequencyUnit
|| __DATA.__objc_data _OBJC_CLASS_$_HKGPXExporter
|| __DATA.__objc_data _OBJC_CLASS_$_HKGymKitDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HKGymKitMetricsDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HKHealthKitControlTaskClient
|| __DATA.__objc_data _OBJC_CLASS_$_HKHealthKitControlTaskServerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HKHealthServiceDiscovery
|| __DATA.__objc_data _OBJC_CLASS_$_HKHealthServiceSession
|| __DATA.__objc_data _OBJC_CLASS_$_HKHealthWrapCodableKeyValue
|| __DATA.__objc_data _OBJC_CLASS_$_HKHealthWrapCodableMessageHeader
|| __DATA.__objc_data _OBJC_CLASS_$_HKHealthWrapCodableMessageKey
|| __DATA.__objc_data _OBJC_CLASS_$_HKHealthWrapCodablePayloadHeader
|| __DATA.__objc_data _OBJC_CLASS_$_HKHealthWrapCodableValue
|| __DATA.__objc_data _OBJC_CLASS_$_HKHealthWrapMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HKHealthWrapMessageConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartRateSummary
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartRateSummaryBreatheStatistics
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartRateSummaryQuery
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartRateSummaryReading
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartRateSummaryStatistics
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartRateSummaryStatisticsBucket
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartRateSummaryWorkoutRecoveryStatistics
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartRateSummaryWorkoutStatistics
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartRateVariabilityUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartbeatSequenceSample
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartbeatSequenceSampleType
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartbeatSeriesBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartbeatSeriesQuery
|| __DATA.__objc_data _OBJC_CLASS_$_HKHeartbeatSeriesSample
|| __DATA.__objc_data _OBJC_CLASS_$_HKIndexableObject
|| __DATA.__objc_data _OBJC_CLASS_$_HKInspectableValue
|| __DATA.__objc_data _OBJC_CLASS_$_HKInspectableValueCollection
|| __DATA.__objc_data _OBJC_CLASS_$_HKInspectableValueInRange
|| __DATA.__objc_data _OBJC_CLASS_$_HKJSONValidator
|| __DATA.__objc_data _OBJC_CLASS_$_HKJSONVisitor
|| __DATA.__objc_data _OBJC_CLASS_$_HKLiveWorkoutBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_HKLiveWorkoutDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HKMedicalCoding
|| __DATA.__objc_data _OBJC_CLASS_$_HKMedicalCodingContext
|| __DATA.__objc_data _OBJC_CLASS_$_HKMedicalDate
|| __DATA.__objc_data _OBJC_CLASS_$_HKMedicalDateInterval
|| __DATA.__objc_data _OBJC_CLASS_$_HKMedicationDispenseRecord
|| __DATA.__objc_data _OBJC_CLASS_$_HKMedicationDosage
|| __DATA.__objc_data _OBJC_CLASS_$_HKMedicationOrder
|| __DATA.__objc_data _OBJC_CLASS_$_HKMedicationRecord
|| __DATA.__objc_data _OBJC_CLASS_$_HKMoleUnit
|| __DATA.__objc_data _OBJC_CLASS_$_HKMultiTypeSampleIterator
|| __DATA.__objc_data _OBJC_CLASS_$_HKNanoSyncPairedDeviceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HKOAuth2Credential
|| __DATA.__objc_data _OBJC_CLASS_$_HKOAuth2TokenSession
|| __DATA.__objc_data _OBJC_CLASS_$_HKObserverQuery
|| __DATA.__objc_data _OBJC_CLASS_$_HKPPT
|| __DATA.__objc_data _OBJC_CLASS_$_HKPersistentTimer
|| __DATA.__objc_data _OBJC_CLASS_$_HKPluginLoader
|| __DATA.__objc_data _OBJC_CLASS_$_HKPotentiallyNonConvertibleMassUnit
|| __DATA.__objc_data _OBJC_CLASS_$_HKProcedureRecord
|| __DATA.__objc_data _OBJC_CLASS_$_HKProductVersions
|| __DATA.__objc_data _OBJC_CLASS_$_HKQuantitySeriesSampleBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_HKQuantitySeriesSampleBuilderTaskServerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HKQuantitySeriesSampleEditor
|| __DATA.__objc_data _OBJC_CLASS_$_HKQuantitySeriesSampleEditorTaskServerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HKQuantitySeriesSampleQuery
|| __DATA.__objc_data _OBJC_CLASS_$_HKQuerySortConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_HKRatioValue
|| __DATA.__objc_data _OBJC_CLASS_$_HKReferenceRange
|| __DATA.__objc_data _OBJC_CLASS_$_HKSemanticDate
|| __DATA.__objc_data _OBJC_CLASS_$_HKSeriesBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_HKSeriesBuilderConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HKSeriesSample
|| __DATA.__objc_data _OBJC_CLASS_$_HKSleepAnalysis
|| __DATA.__objc_data _OBJC_CLASS_$_HKSleepAnalysisUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_HKSleepDay
|| __DATA.__objc_data _OBJC_CLASS_$_HKSleepPeriod
|| __DATA.__objc_data _OBJC_CLASS_$_HKSleepPeriodSegment
|| __DATA.__objc_data _OBJC_CLASS_$_HKSortedQueryAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_HKSortedSampleArray
|| __DATA.__objc_data _OBJC_CLASS_$_HKStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_HKStateMachineState
|| __DATA.__objc_data _OBJC_CLASS_$_HKStateMachineTransition
|| __DATA.__objc_data _OBJC_CLASS_$_HKStatisticsCollection
|| __DATA.__objc_data _OBJC_CLASS_$_HKSynchronousObserverSet
|| __DATA.__objc_data _OBJC_CLASS_$_HKTableFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_HKTiterUnit
|| __DATA.__objc_data _OBJC_CLASS_$_HKTokenKeychainItem
|| __DATA.__objc_data _OBJC_CLASS_$_HKUCUMUnitDisplayConverter
|| __DATA.__objc_data _OBJC_CLASS_$_HKUnknownRecord
|| __DATA.__objc_data _OBJC_CLASS_$_HKVaccinationRecord
|| __DATA.__objc_data _OBJC_CLASS_$_HKWorkoutBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_HKWorkoutBuilderSampleQuery
|| __DATA.__objc_data _OBJC_CLASS_$_HKWorkoutDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HKWorkoutDataSourceConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HKWorkoutEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HKWorkoutRoute
|| __DATA.__objc_data _OBJC_CLASS_$_HKWorkoutRouteBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_HKWorkoutRouteDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HKWorkoutRouteQuery
|| __DATA.__objc_data _OBJC_CLASS_$_HKWorkoutSession
|| __DATA.__objc_data _OBJC_CLASS_$__HKActivityStatisticsQuantityInfo
|| __DATA.__objc_data _OBJC_CLASS_$__HKActivityStatisticsQuery
|| __DATA.__objc_data _OBJC_CLASS_$__HKActivityStatisticsQueryResult
|| __DATA.__objc_data _OBJC_CLASS_$__HKActivityStatisticsStandHourInfo
|| __DATA.__objc_data _OBJC_CLASS_$__HKActivityStatisticsWorkoutInfo
|| __DATA.__objc_data _OBJC_CLASS_$__HKAnchoredObjectQueryManager
|| __DATA.__objc_data _OBJC_CLASS_$__HKAppURLSpecification
|| __DATA.__objc_data _OBJC_CLASS_$__HKArchiveCreator
|| __DATA.__objc_data _OBJC_CLASS_$__HKBedtimeAlarm
|| __DATA.__objc_data _OBJC_CLASS_$__HKBooleanFilter
|| __DATA.__objc_data _OBJC_CLASS_$__HKComparisonMetadataFilter
|| __DATA.__objc_data _OBJC_CLASS_$__HKCompressionEngine
|| __DATA.__objc_data _OBJC_CLASS_$__HKContainsMetadataFilter
|| __DATA.__objc_data _OBJC_CLASS_$__HKCorrelationPlaceholder
|| __DATA.__objc_data _OBJC_CLASS_$__HKCurrentActivitySummaryQuery
|| __DATA.__objc_data _OBJC_CLASS_$__HKCurrentWorkoutSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$__HKDaemonPreferences
|| __DATA.__objc_data _OBJC_CLASS_$__HKDateIntervalCollection
|| __DATA.__objc_data _OBJC_CLASS_$__HKDelayedOperation
|| __DATA.__objc_data _OBJC_CLASS_$__HKExpiringCompletionTimer
|| __DATA.__objc_data _OBJC_CLASS_$__HKFirstPartyWorkoutSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$__HKFitnessFriendAchievement
|| __DATA.__objc_data _OBJC_CLASS_$__HKFitnessFriendActivitySnapshot
|| __DATA.__objc_data _OBJC_CLASS_$__HKFitnessFriendWorkout
|| __DATA.__objc_data _OBJC_CLASS_$__HKFitnessMachineConnection
|| __DATA.__objc_data _OBJC_CLASS_$__HKFitnessMachineConnectionInitiator
|| __DATA.__objc_data _OBJC_CLASS_$__HKFitnessMachineSessionConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$__HKHeartRateRecoveryQueryUtility
|| __DATA.__objc_data _OBJC_CLASS_$__HKHeartSettingsUtilities
|| __DATA.__objc_data _OBJC_CLASS_$__HKLocationShifter
|| __DATA.__objc_data _OBJC_CLASS_$__HKOSBuildOriginFilter
|| __DATA.__objc_data _OBJC_CLASS_$__HKQueryUtilities
|| __DATA.__objc_data _OBJC_CLASS_$__HKSampleQueryResult
|| __DATA.__objc_data _OBJC_CLASS_$__HKSampleQueryUtility
|| __DATA.__objc_data _OBJC_CLASS_$__HKSampleTypeQuery
|| __DATA.__objc_data _OBJC_CLASS_$__HKSleepQueryResult
|| __DATA.__objc_data _OBJC_CLASS_$__HKSleepQueryResultBuilder
|| __DATA.__objc_data _OBJC_CLASS_$__HKStringSample
|| __DATA.__objc_data _OBJC_CLASS_$__HKStringSampleType
|| __DATA.__objc_data _OBJC_CLASS_$__HKSummary
|| __DATA.__objc_data _OBJC_CLASS_$__HKTaskCompletionCounter
|| __DATA.__objc_data _OBJC_CLASS_$__HKWeakObserversMap
|| __DATA.__objc_data _OBJC_CLASS_$__HKWorkoutBuilderSampleQueryConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$__HKWorkoutEvent
|| __DATA.__objc_data _OBJC_CLASS_$__HKWorkoutObserver
|| __DATA.__objc_data _OBJC_CLASS_$__HKWorkoutRouteStore
|| __DATA.__objc_data _OBJC_CLASS_$__HKXMLExtractor
|| __DATA.__objc_data _OBJC_CLASS_$__HKXMLTranslator
|| __DATA.__objc_data _OBJC_CLASS_$__HKXMLValidator
|| __DATA.__objc_data _OBJC_CLASS_$__HKZipArchiveExtractor
|| __DATA.__objc_data _OBJC_METACLASS_$_HKAccountOwner
|| __DATA.__objc_data _OBJC_METACLASS_$_HKAccountOwnerType
|| __DATA.__objc_data _OBJC_METACLASS_$_HKActivityCache
|| __DATA.__objc_data _OBJC_METACLASS_$_HKAllergyReaction
|| __DATA.__objc_data _OBJC_METACLASS_$_HKAllergyRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HKAudioExposureValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HKAudiogramSample
|| __DATA.__objc_data _OBJC_METACLASS_$_HKAudiogramSensitivityPoint
|| __DATA.__objc_data _OBJC_METACLASS_$_HKAuthorizationPresentationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HKBiologicalSexObject
|| __DATA.__objc_data _OBJC_METACLASS_$_HKBloodTypeObject
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCDADocument
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCSVParser
|| __DATA.__objc_data _OBJC_METACLASS_$_HKChartableCodedQuantity
|| __DATA.__objc_data _OBJC_METACLASS_$_HKChartableCodedQuantitySet
|| __DATA.__objc_data _OBJC_METACLASS_$_HKClinicalProviderSearchResult
|| __DATA.__objc_data _OBJC_METACLASS_$_HKClinicalRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCloudSyncControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCodableCondensedWorkout
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCodableCondensedWorkoutCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCodableQuantitySeries
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCodableQuantitySeriesEnumerationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCodableQuantitySeriesEnumerationResultCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCodedQuantity
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCodedValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCodedValueCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_HKConcept
|| __DATA.__objc_data _OBJC_METACLASS_$_HKConceptAttribute
|| __DATA.__objc_data _OBJC_METACLASS_$_HKConceptFetchOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_HKConceptIndexUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_HKConceptRelationship
|| __DATA.__objc_data _OBJC_METACLASS_$_HKConceptStoreServerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HKConditionRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCorrelationQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCumulativeQuantitySeriesSample
|| __DATA.__objc_data _OBJC_METACLASS_$_HKCurrentActivityCacheQueryResult
|| __DATA.__objc_data _OBJC_METACLASS_$_HKDaemonTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_HKDataFlowLink
|| __DATA.__objc_data _OBJC_METACLASS_$_HKDateInterval
|| __DATA.__objc_data _OBJC_METACLASS_$_HKDecibelHearingLevelUnit
|| __DATA.__objc_data _OBJC_METACLASS_$_HKDeviceQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_HKDiagnosticTestReport
|| __DATA.__objc_data _OBJC_METACLASS_$_HKDiagnosticTestResult
|| __DATA.__objc_data _OBJC_METACLASS_$_HKDiscreteQuantitySample
|| __DATA.__objc_data _OBJC_METACLASS_$_HKDocumentQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_HKEADFFileParser
|| __DATA.__objc_data _OBJC_METACLASS_$_HKElectrocardiogram
|| __DATA.__objc_data _OBJC_METACLASS_$_HKElectrocardiogramBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_HKElectrocardiogramSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HKElectrocardiogramSessionConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HKElectrocardiogramSessionTaskConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HKEquivalentsUnit
|| __DATA.__objc_data _OBJC_METACLASS_$_HKExtendedHealthStore
|| __DATA.__objc_data _OBJC_METACLASS_$_HKFHIRIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_HKFHIRResource
|| __DATA.__objc_data _OBJC_METACLASS_$_HKFeatureAvailabilityRuleSet
|| __DATA.__objc_data _OBJC_METACLASS_$_HKFitzpatrickSkinTypeObject
|| __DATA.__objc_data _OBJC_METACLASS_$_HKFrequencyUnit
|| __DATA.__objc_data _OBJC_METACLASS_$_HKGPXExporter
|| __DATA.__objc_data _OBJC_METACLASS_$_HKGymKitDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HKGymKitMetricsDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHealthKitControlTaskClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHealthKitControlTaskServerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHealthServiceDiscovery
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHealthServiceSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHealthWrapCodableKeyValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHealthWrapCodableMessageHeader
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHealthWrapCodableMessageKey
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHealthWrapCodablePayloadHeader
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHealthWrapCodableValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHealthWrapMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHealthWrapMessageConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHeartRateSummary
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHeartRateSummaryBreatheStatistics
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHeartRateSummaryStatistics
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHeartRateSummaryStatisticsBucket
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHeartRateSummaryWorkoutRecoveryStatistics
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHeartRateSummaryWorkoutStatistics
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHeartRateVariabilityUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHeartbeatSequenceSample
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHeartbeatSequenceSampleType
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHeartbeatSeriesBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHeartbeatSeriesQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_HKHeartbeatSeriesSample
|| __DATA.__objc_data _OBJC_METACLASS_$_HKIndexableObject
|| __DATA.__objc_data _OBJC_METACLASS_$_HKInspectableValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HKInspectableValueCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_HKInspectableValueInRange
|| __DATA.__objc_data _OBJC_METACLASS_$_HKJSONValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_HKJSONVisitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HKLiveWorkoutBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_HKLiveWorkoutDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HKMedicalCoding
|| __DATA.__objc_data _OBJC_METACLASS_$_HKMedicalCodingContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HKMedicalDate
|| __DATA.__objc_data _OBJC_METACLASS_$_HKMedicalDateInterval
|| __DATA.__objc_data _OBJC_METACLASS_$_HKMedicationDispenseRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HKMedicationDosage
|| __DATA.__objc_data _OBJC_METACLASS_$_HKMedicationOrder
|| __DATA.__objc_data _OBJC_METACLASS_$_HKMedicationRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HKMoleUnit
|| __DATA.__objc_data _OBJC_METACLASS_$_HKMultiTypeSampleIterator
|| __DATA.__objc_data _OBJC_METACLASS_$_HKNanoSyncPairedDeviceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HKOAuth2Credential
|| __DATA.__objc_data _OBJC_METACLASS_$_HKOAuth2TokenSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HKObserverQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_HKPPT
|| __DATA.__objc_data _OBJC_METACLASS_$_HKPersistentTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_HKPluginLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_HKPotentiallyNonConvertibleMassUnit
|| __DATA.__objc_data _OBJC_METACLASS_$_HKProcedureRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HKProductVersions
|| __DATA.__objc_data _OBJC_METACLASS_$_HKQuantitySeriesSampleBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_HKQuantitySeriesSampleBuilderTaskServerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HKQuantitySeriesSampleEditor
|| __DATA.__objc_data _OBJC_METACLASS_$_HKQuantitySeriesSampleEditorTaskServerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HKQuerySortConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_HKRatioValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HKReferenceRange
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSemanticDate
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSeriesBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSeriesBuilderConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSleepAnalysis
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSleepDay
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSleepPeriod
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSleepPeriodSegment
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSleepQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSortedQueryAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSortedSampleArray
|| __DATA.__objc_data _OBJC_METACLASS_$_HKStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_HKStateMachineState
|| __DATA.__objc_data _OBJC_METACLASS_$_HKStateMachineTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_HKStatisticsCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSynchronousObserverSet
|| __DATA.__objc_data _OBJC_METACLASS_$_HKTableFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_HKTiterUnit
|| __DATA.__objc_data _OBJC_METACLASS_$_HKTokenKeychainItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HKUCUMUnitDisplayConverter
|| __DATA.__objc_data _OBJC_METACLASS_$_HKUnknownRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HKVaccinationRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HKWorkoutBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_HKWorkoutBuilderSampleQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_HKWorkoutDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HKWorkoutDataSourceConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HKWorkoutEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HKWorkoutRouteBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_HKWorkoutRouteDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HKWorkoutRouteQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_HKWorkoutSession
|| __DATA.__objc_data _OBJC_METACLASS_$__HKActivityStatisticsQuantityInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__HKActivityStatisticsQuery
|| __DATA.__objc_data _OBJC_METACLASS_$__HKActivityStatisticsQueryResult
|| __DATA.__objc_data _OBJC_METACLASS_$__HKActivityStatisticsStandHourInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__HKActivityStatisticsWorkoutInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__HKAnchoredObjectQueryManager
|| __DATA.__objc_data _OBJC_METACLASS_$__HKAppURLSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$__HKArchiveCreator
|| __DATA.__objc_data _OBJC_METACLASS_$__HKBedtimeAlarm
|| __DATA.__objc_data _OBJC_METACLASS_$__HKBooleanFilter
|| __DATA.__objc_data _OBJC_METACLASS_$__HKComparisonMetadataFilter
|| __DATA.__objc_data _OBJC_METACLASS_$__HKCompressionEngine
|| __DATA.__objc_data _OBJC_METACLASS_$__HKContainsMetadataFilter
|| __DATA.__objc_data _OBJC_METACLASS_$__HKCorrelationPlaceholder
|| __DATA.__objc_data _OBJC_METACLASS_$__HKCurrentActivitySummaryQuery
|| __DATA.__objc_data _OBJC_METACLASS_$__HKCurrentWorkoutSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$__HKDaemonPreferences
|| __DATA.__objc_data _OBJC_METACLASS_$__HKDateIntervalCollection
|| __DATA.__objc_data _OBJC_METACLASS_$__HKDelayedOperation
|| __DATA.__objc_data _OBJC_METACLASS_$__HKExpiringCompletionTimer
|| __DATA.__objc_data _OBJC_METACLASS_$__HKFirstPartyWorkoutSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$__HKFitnessFriendAchievement
|| __DATA.__objc_data _OBJC_METACLASS_$__HKFitnessFriendActivitySnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$__HKFitnessFriendWorkout
|| __DATA.__objc_data _OBJC_METACLASS_$__HKFitnessMachineConnection
|| __DATA.__objc_data _OBJC_METACLASS_$__HKFitnessMachineConnectionInitiator
|| __DATA.__objc_data _OBJC_METACLASS_$__HKFitnessMachineSessionConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$__HKHeartRateRecoveryQueryUtility
|| __DATA.__objc_data _OBJC_METACLASS_$__HKHeartSettingsUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$__HKLocationShifter
|| __DATA.__objc_data _OBJC_METACLASS_$__HKOSBuildOriginFilter
|| __DATA.__objc_data _OBJC_METACLASS_$__HKQueryUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$__HKSampleQueryResult
|| __DATA.__objc_data _OBJC_METACLASS_$__HKSampleQueryUtility
|| __DATA.__objc_data _OBJC_METACLASS_$__HKSleepQueryResult
|| __DATA.__objc_data _OBJC_METACLASS_$__HKSleepQueryResultBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$__HKStringSample
|| __DATA.__objc_data _OBJC_METACLASS_$__HKStringSampleType
|| __DATA.__objc_data _OBJC_METACLASS_$__HKSummary
|| __DATA.__objc_data _OBJC_METACLASS_$__HKTaskCompletionCounter
|| __DATA.__objc_data _OBJC_METACLASS_$__HKWeakObserversMap
|| __DATA.__objc_data _OBJC_METACLASS_$__HKWorkoutBuilderSampleQueryConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$__HKWorkoutEvent
|| __DATA.__objc_data _OBJC_METACLASS_$__HKWorkoutObserver
|| __DATA.__objc_data _OBJC_METACLASS_$__HKWorkoutRouteStore
|| __DATA.__objc_data _OBJC_METACLASS_$__HKXMLExtractor
|| __DATA.__objc_data _OBJC_METACLASS_$__HKXMLTranslator
|| __DATA.__objc_data _OBJC_METACLASS_$__HKXMLValidator
|| __DATA.__objc_data _OBJC_METACLASS_$__HKZipArchiveExtractor
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableCondensedWorkout._condenserDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableCondensedWorkout._condenserVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableCondensedWorkout._creationDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableCondensedWorkout._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableCondensedWorkout._endDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableCondensedWorkout._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableCondensedWorkout._persistentID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableCondensedWorkout._startDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableCondensedWorkout._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableCondensedWorkout._uuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableCondensedWorkoutCollection._workouts
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeries._values
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesDatum._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesDatum._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesDatum._timeInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesDatum._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResult._count
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResult._dataTypeCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResult._endTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResult._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResult._persistentID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResult._quantitySample
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResult._seriesIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResult._sourceID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResult._startTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResult._uuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResult._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResultCollection._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResultCollection._latestSampleStartTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCodableQuantitySeriesEnumerationResultCollection._results
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKCorrelation._objects
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableKeyValue._key
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableKeyValue._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableMessageHeader._compressed
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableMessageHeader._encryptedHMACKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableMessageHeader._encryptedMessageKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableMessageHeader._encryptionIdentity
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableMessageHeader._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableMessageHeader._studyIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableMessageHeader._studyUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableMessageHeader._trailingHMACLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableMessageHeader._trailingSHALength
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableMessageHeader._uploadUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableMessageHeader._version
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableMessageKey._iv
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableMessageKey._key
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodablePayloadHeader._applicationData
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodablePayloadHeader._channel
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodablePayloadHeader._endDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodablePayloadHeader._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodablePayloadHeader._keyValuePairs
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodablePayloadHeader._payloadIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodablePayloadHeader._payloadType
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodablePayloadHeader._startDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodablePayloadHeader._subjectUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableValue._bytes
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableValue._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableValue._integer
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableValue._string
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKHealthWrapCodableValue._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKUnit._scaleOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKWorkout._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKWorkout._goal
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKWorkout._goalType
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKWorkout._isWatchWorkout
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKWorkout._totalBasalEnergyBurned
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKWorkout._totalDistance
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKWorkout._totalElevation
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKWorkout._totalEnergyBurned
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKWorkout._totalFlightsClimbed
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKWorkout._totalSwimmingStrokeCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKWorkout._workoutActivityType
|| __DATA.__objc_ivar _OBJC_IVAR_$_HKWorkout._workoutEvents
|| __DATA_CONST.__const _HDHealthKitControlTaskServerIdentifier
|| __DATA_CONST.__const _HDHealthStoreMachServiceName
|| __DATA_CONST.__const _HKAccountOwnerBirthDateKeyPath
|| __DATA_CONST.__const _HKAccountOwnerNameKeyPath
|| __DATA_CONST.__const _HKAccountOwnerTypeIdentifierAccountOwner
|| __DATA_CONST.__const _HKActivitySummaryTypeIdentifier
|| __DATA_CONST.__const _HKAggdHighFrequencyDatabaseSizeKey
|| __DATA_CONST.__const _HKAggdMainDatabaseSizeKey
|| __DATA_CONST.__const _HKAggdMainDatabaseWALSizeKey
|| __DATA_CONST.__const _HKAggdProtectedDatabaseSizeKey
|| __DATA_CONST.__const _HKAggdProtectedDatabaseWALSizeKey
|| __DATA_CONST.__const _HKAllergyReactionKeyPathManifestations
|| __DATA_CONST.__const _HKAllergyReactionKeyPathSeverity
|| __DATA_CONST.__const _HKAllergyRecordAllergyCodingsKeyPath
|| __DATA_CONST.__const _HKAllergyRecordAllergyKeyPath
|| __DATA_CONST.__const _HKAllergyRecordAsserterKeyPath
|| __DATA_CONST.__const _HKAllergyRecordCriticalityCodingKeyPath
|| __DATA_CONST.__const _HKAllergyRecordCriticalityKeyPath
|| __DATA_CONST.__const _HKAllergyRecordLastOccurenceDateKeyPath
|| __DATA_CONST.__const _HKAllergyRecordOnsetDateKeyPath
|| __DATA_CONST.__const _HKAllergyRecordReactionsKeyPath
|| __DATA_CONST.__const _HKAllergyRecordRecordedDateKeyPath
|| __DATA_CONST.__const _HKAllergyRecordStatusCodingKeyPath
|| __DATA_CONST.__const _HKAllergyRecordStatusKeyPath
|| __DATA_CONST.__const _HKAllergyRecordTypeIdentifierAllergyRecord
|| __DATA_CONST.__const _HKAppVersionOverrideEntitlement
|| __DATA_CONST.__const _HKAppleWatchSupportHeartURL
|| __DATA_CONST.__const _HKApplicationIdentifierEntitlement
|| __DATA_CONST.__const _HKAtrialFibrillationDetectionOnboardingCountryCodeKey
|| __DATA_CONST.__const _HKAtrialFibrillationDetectionOnboardingVersionCompletedKey
|| __DATA_CONST.__const _HKAuthorizationBypassEntitlement
|| __DATA_CONST.__const _HKAuthorizationManagerEntitlement
|| __DATA_CONST.__const _HKCategoryTypeIdentifierAppleStandHour
|| __DATA_CONST.__const _HKCategoryTypeIdentifierAudioExposureEvent
|| __DATA_CONST.__const _HKCategoryTypeIdentifierCervicalMucusQuality
|| __DATA_CONST.__const _HKCategoryTypeIdentifierHighHeartRateEvent
|| __DATA_CONST.__const _HKCategoryTypeIdentifierIntermenstrualBleeding
|| __DATA_CONST.__const _HKCategoryTypeIdentifierIrregularHeartRhythmEvent
|| __DATA_CONST.__const _HKCategoryTypeIdentifierLowHeartRateEvent
|| __DATA_CONST.__const _HKCategoryTypeIdentifierMenstrualFlow
|| __DATA_CONST.__const _HKCategoryTypeIdentifierMindfulSession
|| __DATA_CONST.__const _HKCategoryTypeIdentifierOvulationTestResult
|| __DATA_CONST.__const _HKCategoryTypeIdentifierSexualActivity
|| __DATA_CONST.__const _HKCategoryTypeIdentifierSleepAnalysis
|| __DATA_CONST.__const _HKCategoryTypeIdentifierToothbrushingEvent
|| __DATA_CONST.__const _HKCharacteristicTypeIdentifierBiologicalSex
|| __DATA_CONST.__const _HKCharacteristicTypeIdentifierBloodType
|| __DATA_CONST.__const _HKCharacteristicTypeIdentifierDateOfBirth
|| __DATA_CONST.__const _HKCharacteristicTypeIdentifierFitzpatrickSkinType
|| __DATA_CONST.__const _HKCharacteristicTypeIdentifierWheelchairUse
|| __DATA_CONST.__const _HKClinicalRecordDisplayNameKeyPath
|| __DATA_CONST.__const _HKClinicalRecordFHIRResourceKeyPath
|| __DATA_CONST.__const _HKClinicalTypeIdentifierAllergyRecord
|| __DATA_CONST.__const _HKClinicalTypeIdentifierConditionRecord
|| __DATA_CONST.__const _HKClinicalTypeIdentifierImmunizationRecord
|| __DATA_CONST.__const _HKClinicalTypeIdentifierLabResultRecord
|| __DATA_CONST.__const _HKClinicalTypeIdentifierMedicationRecord
|| __DATA_CONST.__const _HKClinicalTypeIdentifierProcedureRecord
|| __DATA_CONST.__const _HKClinicalTypeIdentifierVitalSignRecord
|| __DATA_CONST.__const _HKCloudSyncObserverServerIdentifier
|| __DATA_CONST.__const _HKCodedSampleKeyPathGroupByConcept
|| __DATA_CONST.__const _HKCodedSampleKeyPathPrimaryConcept
|| __DATA_CONST.__const _HKConceptAttributeNameAdHocCode
|| __DATA_CONST.__const _HKConceptAttributeNameCVXCode
|| __DATA_CONST.__const _HKConceptAttributeNameChartsBloodPressure
|| __DATA_CONST.__const _HKConceptAttributeNameDisplayName
|| __DATA_CONST.__const _HKConceptAttributeNameHasPreferredName
|| __DATA_CONST.__const _HKConceptAttributeNameHidesOutOfRangeFilter
|| __DATA_CONST.__const _HKConceptAttributeNameLOINCCode
|| __DATA_CONST.__const _HKConceptAttributeNameRxNormCode
|| __DATA_CONST.__const _HKConceptAttributeNameSynonym
|| __DATA_CONST.__const _HKConceptAttributeNameVersion
|| __DATA_CONST.__const _HKConceptAttributeValueTrue
|| __DATA_CONST.__const _HKConceptIndexManagerDidBecomeQuiescentNotification
|| __DATA_CONST.__const _HKConceptIndexManagerDidBecomeQuiescentNotificationProcessedSampleCountKey
|| __DATA_CONST.__const _HKConceptRelationshipIdentifierChartedWith
|| __DATA_CONST.__const _HKConceptRelationshipIdentifierNameGroupedBy
|| __DATA_CONST.__const _HKConceptRelationshipIdentifierNameIsA
|| __DATA_CONST.__const _HKConceptRelationshipIdentifierNameIsAssociatedWith
|| __DATA_CONST.__const _HKConceptRelationshipIdentifierNameWasAssociatedWith
|| __DATA_CONST.__const _HKConditionRecordAbatementKeyPath
|| __DATA_CONST.__const _HKConditionRecordAsserterKeyPath
|| __DATA_CONST.__const _HKConditionRecordBodySitesCodingsKeyPath
|| __DATA_CONST.__const _HKConditionRecordBodySitesKeyPath
|| __DATA_CONST.__const _HKConditionRecordCategoryCodingsKeyPath
|| __DATA_CONST.__const _HKConditionRecordCategoryKeyPath
|| __DATA_CONST.__const _HKConditionRecordClinicalStatusCodingKeyPath
|| __DATA_CONST.__const _HKConditionRecordClinicalStatusKeyPath
|| __DATA_CONST.__const _HKConditionRecordConditionCodingsKeyPath
|| __DATA_CONST.__const _HKConditionRecordConditionKeyPath
|| __DATA_CONST.__const _HKConditionRecordOnsetKeyPath
|| __DATA_CONST.__const _HKConditionRecordRecordedDateKeyPath
|| __DATA_CONST.__const _HKConditionRecordSeverityCodingsKeyPath
|| __DATA_CONST.__const _HKConditionRecordSeverityKeyPath
|| __DATA_CONST.__const _HKConditionRecordTypeIdentifierConditionRecord
|| __DATA_CONST.__const _HKConditionRecordVerificationStatusCodingKeyPath
|| __DATA_CONST.__const _HKConditionRecordVerificationStatusKeyPath
|| __DATA_CONST.__const _HKCorrelationTypeIdentifierBloodPressure
|| __DATA_CONST.__const _HKCorrelationTypeIdentifierFood
|| __DATA_CONST.__const _HKCountryCodeAmericanSamoa
|| __DATA_CONST.__const _HKCountryCodeAustria
|| __DATA_CONST.__const _HKCountryCodeBelgium
|| __DATA_CONST.__const _HKCountryCodeCanada
|| __DATA_CONST.__const _HKCountryCodeChina
|| __DATA_CONST.__const _HKCountryCodeCroatia
|| __DATA_CONST.__const _HKCountryCodeCzechRepublic
|| __DATA_CONST.__const _HKCountryCodeDenmark
|| __DATA_CONST.__const _HKCountryCodeFinland
|| __DATA_CONST.__const _HKCountryCodeFrance
|| __DATA_CONST.__const _HKCountryCodeGermany
|| __DATA_CONST.__const _HKCountryCodeGreece
|| __DATA_CONST.__const _HKCountryCodeGuam
|| __DATA_CONST.__const _HKCountryCodeHongKong
|| __DATA_CONST.__const _HKCountryCodeHungary
|| __DATA_CONST.__const _HKCountryCodeIceland
|| __DATA_CONST.__const _HKCountryCodeIreland
|| __DATA_CONST.__const _HKCountryCodeItaly
|| __DATA_CONST.__const _HKCountryCodeLuxembourg
|| __DATA_CONST.__const _HKCountryCodeNetherlands
|| __DATA_CONST.__const _HKCountryCodeNorthernMarianaIslands
|| __DATA_CONST.__const _HKCountryCodeNorway
|| __DATA_CONST.__const _HKCountryCodePoland
|| __DATA_CONST.__const _HKCountryCodePortugal
|| __DATA_CONST.__const _HKCountryCodePuertoRico
|| __DATA_CONST.__const _HKCountryCodeRomania
|| __DATA_CONST.__const _HKCountryCodeSingapore
|| __DATA_CONST.__const _HKCountryCodeSlovakia
|| __DATA_CONST.__const _HKCountryCodeSpain
|| __DATA_CONST.__const _HKCountryCodeSweden
|| __DATA_CONST.__const _HKCountryCodeSwitzerland
|| __DATA_CONST.__const _HKCountryCodeUSOutlyingIslands
|| __DATA_CONST.__const _HKCountryCodeUSVirginIslands
|| __DATA_CONST.__const _HKCountryCodeUnitedKingdom
|| __DATA_CONST.__const _HKCountryCodeUnitedStates
|| __DATA_CONST.__const _HKDataCollectorTaskServerIdentifier
|| __DATA_CONST.__const _HKDataTypeIdentifierHeartbeatSeries
|| __DATA_CONST.__const _HKDefaultSourceEntitlement
|| __DATA_CONST.__const _HKDetailedCDAValidationErrorKey
|| __DATA_CONST.__const _HKDeviceConnectedGymIdentifier
|| __DATA_CONST.__const _HKDevicePropertyEmptySentinel
|| __DATA_CONST.__const _HKDevicePropertyKeyFirmwareVersion
|| __DATA_CONST.__const _HKDevicePropertyKeyHardwareVersion
|| __DATA_CONST.__const _HKDevicePropertyKeyLocalIdentifier
|| __DATA_CONST.__const _HKDevicePropertyKeyManufacturer
|| __DATA_CONST.__const _HKDevicePropertyKeyModel
|| __DATA_CONST.__const _HKDevicePropertyKeyName
|| __DATA_CONST.__const _HKDevicePropertyKeySoftwareVersion
|| __DATA_CONST.__const _HKDevicePropertyKeyUDIDeviceIdentifier
|| __DATA_CONST.__const _HKDeviceRegionCodeAmericas
|| __DATA_CONST.__const _HKDeviceRegionCodeArabianPeninsula
|| __DATA_CONST.__const _HKDeviceRegionCodeArgentina
|| __DATA_CONST.__const _HKDeviceRegionCodeAustraliaNewZealand
|| __DATA_CONST.__const _HKDeviceRegionCodeCentralEurope
|| __DATA_CONST.__const _HKDeviceRegionCodeChina
|| __DATA_CONST.__const _HKDeviceRegionCodeCroatiaCzechRepublicSlovakia
|| __DATA_CONST.__const _HKDeviceRegionCodeDenmarkNorway
|| __DATA_CONST.__const _HKDeviceRegionCodeFinlandSwedenUkraine
|| __DATA_CONST.__const _HKDeviceRegionCodeGreeceKazakstan
|| __DATA_CONST.__const _HKDeviceRegionCodeGuamThailandPhilippines
|| __DATA_CONST.__const _HKDeviceRegionCodeHongKongMacauSingapore
|| __DATA_CONST.__const _HKDeviceRegionCodeHungaryPolandRomania
|| __DATA_CONST.__const _HKDeviceRegionCodeIcelandSouthAfrica
|| __DATA_CONST.__const _HKDeviceRegionCodeIrelandJerseyUK
|| __DATA_CONST.__const _HKDeviceRegionCodeItalyPortugalSpain
|| __DATA_CONST.__const _HKDeviceRegionCodeJapan
|| __DATA_CONST.__const _HKDeviceRegionCodeMalaysia
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4Canada
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4CentralEurope
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4CroatiaSlovakia
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4CzechRepublicHungary
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4DenmarkNorway
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4FinlandSweden
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4GermanyAustriaSwitzerland
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4GreeceKazakstan
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4HongKongMacau
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4IcelandSouthAfrica
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4IrelandJerseyGuernseyUK
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4ItalySpain
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4PolandRomania
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4Portugal
|| __DATA_CONST.__const _HKDeviceRegionCodeSeries4Singapore
|| __DATA_CONST.__const _HKDeviceRegionCodeSouthAmerica
|| __DATA_CONST.__const _HKDeviceRegionCodeUnitedStates
|| __DATA_CONST.__const _HKDiagnosticTestReportDiagnosticTestCodingsKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestReportDiagnosticTestKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestReportEffectiveEndDateKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestReportEffectiveStartDateKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestReportIssueDateKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestReportPanelNameKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestReportResultsKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestReportStatusCodingKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestReportStatusKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestReportTypeIdentifierDiagnosticTestReport
|| __DATA_CONST.__const _HKDiagnosticTestResultBodySiteCodingsKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultBodySiteKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultCategoryKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultCommentsKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultDiagnosticTestCodingsKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultDiagnosticTestKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultEffectiveEndDateKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultEffectiveStartDateKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultInterpretationCodingsKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultInterpretationKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultIssueDateKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultMethodCodingsKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultMethodKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultPerformersKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultReferenceRangesKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultStatusCodingKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultStatusKeyPath
|| __DATA_CONST.__const _HKDiagnosticTestResultTypeIdentifierDiagnosticTestResult
|| __DATA_CONST.__const _HKDiagnosticTestResultValueKeyPath
|| __DATA_CONST.__const _HKDocumentTypeIdentifierCDA
|| __DATA_CONST.__const _HKElectrocardiogramFirstOnboardingCompletedKey
|| __DATA_CONST.__const _HKElectrocardiogramOnboardingCountryCodeKey
|| __DATA_CONST.__const _HKErrorCloudSyncDeviceNameKey
|| __DATA_CONST.__const _HKErrorCloudSyncProductTypeKey
|| __DATA_CONST.__const _HKErrorConceptPrefetchUnresolvedIdentifiersKey
|| __DATA_CONST.__const _HKErrorDomain
|| __DATA_CONST.__const _HKExtendedHealthServerMachServiceName
|| __DATA_CONST.__const _HKFHIRResourceTypeAllergyIntolerance
|| __DATA_CONST.__const _HKFHIRResourceTypeCondition
|| __DATA_CONST.__const _HKFHIRResourceTypeImmunization
|| __DATA_CONST.__const _HKFHIRResourceTypeMedicationDispense
|| __DATA_CONST.__const _HKFHIRResourceTypeMedicationOrder
|| __DATA_CONST.__const _HKFHIRResourceTypeMedicationStatement
|| __DATA_CONST.__const _HKFHIRResourceTypeObservation
|| __DATA_CONST.__const _HKFHIRResourceTypeProcedure
|| __DATA_CONST.__const _HKFeatureAvailabilityConditionDisableBackgroundAtrialFibrillationDetection
|| __DATA_CONST.__const _HKFeatureAvailabilityConditionDisableElectrocardiogramRecording
|| __DATA_CONST.__const _HKFeatureAvailabilityConditionsDidUpdateNotification
|| __DATA_CONST.__const _HKFeatureAvailabilityDefaultsDomain
|| __DATA_CONST.__const _HKHealthAppActivityBundleIdentifierKey
|| __DATA_CONST.__const _HKHealthAppActivityType
|| __DATA_CONST.__const _HKHealthAppActivityTypeHealthRecordsAuthorizationSettings
|| __DATA_CONST.__const _HKHealthAppScheme
|| __DATA_CONST.__const _HKHealthAppSchemeDeprecated
|| __DATA_CONST.__const _HKHealthAppSourceEntitlement
|| __DATA_CONST.__const _HKHealthKitAccessEntitlement
|| __DATA_CONST.__const _HKHealthKitAccessIdentifierHealthRecords
|| __DATA_CONST.__const _HKHealthKitEntitlement
|| __DATA_CONST.__const _HKHealthKitStringsTableName
|| __DATA_CONST.__const _HKHealthLiteEntitlement
|| __DATA_CONST.__const _HKHealthProviderLoginRedirectHost
|| __DATA_CONST.__const _HKHealthProviderLoginRedirectScheme
|| __DATA_CONST.__const _HKHealthProviderLoginRedirectToken
|| __DATA_CONST.__const _HKHealthRecordsPluginIdentifier
|| __DATA_CONST.__const _HKJSONErrorDomain
|| __DATA_CONST.__const _HKJSONErrorKeyPathKey
|| __DATA_CONST.__const _HKKeyValueDomainServerIdentifier
|| __DATA_CONST.__const _HKKeyValueProtectedLocalReadWriteEntitlement
|| __DATA_CONST.__const _HKKeyValueProtectedUbiquitousReadWriteEntitlement
|| __DATA_CONST.__const _HKLegacySourceOverrideEntitlement
|| __DATA_CONST.__const _HKLocalDeviceSourceEntitlement
|| __DATA_CONST.__const _HKMedicalCodingSystemFHIRVersionDSTU2
|| __DATA_CONST.__const _HKMedicalCodingSystemTextVersion1
|| __DATA_CONST.__const _HKMedicalIDDataEntitlement
|| __DATA_CONST.__const _HKMedicalRecordExportedFHIRVersionKey
|| __DATA_CONST.__const _HKMedicalRecordExportedJSONStringKey
|| __DATA_CONST.__const _HKMedicalRecordExportedReceivedDateKey
|| __DATA_CONST.__const _HKMedicalRecordExportedResourceIdentifierKey
|| __DATA_CONST.__const _HKMedicalRecordExportedResourceTypeKey
|| __DATA_CONST.__const _HKMedicalRecordExportedSourceURLKey
|| __DATA_CONST.__const _HKMedicalRecordModifiedDateKeyPath
|| __DATA_CONST.__const _HKMedicalRecordNoteKeyPath
|| __DATA_CONST.__const _HKMedicalRecordSortDateKeyPath
|| __DATA_CONST.__const _HKMedicalRecordSortIdentifierModifiedDate
|| __DATA_CONST.__const _HKMedicalRecordSortIdentifierSortDate
|| __DATA_CONST.__const _HKMedicationDispenseRecordDaysSupplyQuantityKeyPath
|| __DATA_CONST.__const _HKMedicationDispenseRecordDosagesKeyPath
|| __DATA_CONST.__const _HKMedicationDispenseRecordEarliestDosageDateKeyPath
|| __DATA_CONST.__const _HKMedicationDispenseRecordHandOverDateKeyPath
|| __DATA_CONST.__const _HKMedicationDispenseRecordMedicationCodingsKeyPath
|| __DATA_CONST.__const _HKMedicationDispenseRecordMedicationKeyPath
|| __DATA_CONST.__const _HKMedicationDispenseRecordPreparationDateKeyPath
|| __DATA_CONST.__const _HKMedicationDispenseRecordQuantityDispensedKeyPath
|| __DATA_CONST.__const _HKMedicationDispenseRecordStatusCodingKeyPath
|| __DATA_CONST.__const _HKMedicationDispenseRecordStatusKeyPath
|| __DATA_CONST.__const _HKMedicationDispenseRecordTypeIdentifierMedicationDispenseRecord
|| __DATA_CONST.__const _HKMedicationOrderDosagesKeyPath
|| __DATA_CONST.__const _HKMedicationOrderEarliestDosageDateKeyPath
|| __DATA_CONST.__const _HKMedicationOrderEndedDateKeyPath
|| __DATA_CONST.__const _HKMedicationOrderMedicationCodingsKeyPath
|| __DATA_CONST.__const _HKMedicationOrderMedicationKeyPath
|| __DATA_CONST.__const _HKMedicationOrderNumberOfFillsKeyPath
|| __DATA_CONST.__const _HKMedicationOrderPrescriberKeyPath
|| __DATA_CONST.__const _HKMedicationOrderReasonCodingsKeyPath
|| __DATA_CONST.__const _HKMedicationOrderReasonEndedCodingsKeyPath
|| __DATA_CONST.__const _HKMedicationOrderReasonEndedKeyPath
|| __DATA_CONST.__const _HKMedicationOrderReasonKeyPath
|| __DATA_CONST.__const _HKMedicationOrderStatusCodingKeyPath
|| __DATA_CONST.__const _HKMedicationOrderStatusKeyPath
|| __DATA_CONST.__const _HKMedicationOrderTypeIdentifierMedicationOrder
|| __DATA_CONST.__const _HKMedicationOrderWrittenDateKeyPath
|| __DATA_CONST.__const _HKMedicationRecordAsserterKeyPath
|| __DATA_CONST.__const _HKMedicationRecordAssertionDateKeyPath
|| __DATA_CONST.__const _HKMedicationRecordAssertionTypeKeyPath
|| __DATA_CONST.__const _HKMedicationRecordDosagesKeyPath
|| __DATA_CONST.__const _HKMedicationRecordEarliestDosageDateKeyPath
|| __DATA_CONST.__const _HKMedicationRecordEffectiveEndDateKeyPath
|| __DATA_CONST.__const _HKMedicationRecordEffectiveStartDateKeyPath
|| __DATA_CONST.__const _HKMedicationRecordMedicationCodingsKeyPath
|| __DATA_CONST.__const _HKMedicationRecordMedicationKeyPath
|| __DATA_CONST.__const _HKMedicationRecordNotTakenKeyPath
|| __DATA_CONST.__const _HKMedicationRecordReasonForUseCodingsKeyPath
|| __DATA_CONST.__const _HKMedicationRecordReasonForUseKeyPath
|| __DATA_CONST.__const _HKMedicationRecordReasonsNotTakenCodingsKeyPath
|| __DATA_CONST.__const _HKMedicationRecordReasonsNotTakenKeyPath
|| __DATA_CONST.__const _HKMedicationRecordStatusCodingKeyPath
|| __DATA_CONST.__const _HKMedicationRecordStatusKeyPath
|| __DATA_CONST.__const _HKMedicationRecordTypeIdentifierMedicationRecord
|| __DATA_CONST.__const _HKMetadataKeyAlpineSlopeGrade
|| __DATA_CONST.__const _HKMetadataKeyAudioExposureLevel
|| __DATA_CONST.__const _HKMetadataKeyAverageMETs
|| __DATA_CONST.__const _HKMetadataKeyAverageSpeed
|| __DATA_CONST.__const _HKMetadataKeyBloodGlucoseMealTime
|| __DATA_CONST.__const _HKMetadataKeyBodyTemperatureSensorLocation
|| __DATA_CONST.__const _HKMetadataKeyCoachedWorkout
|| __DATA_CONST.__const _HKMetadataKeyCrossTrainerDistance
|| __DATA_CONST.__const _HKMetadataKeyDeviceManufacturerName
|| __DATA_CONST.__const _HKMetadataKeyDeviceName
|| __DATA_CONST.__const _HKMetadataKeyDeviceSerialNumber
|| __DATA_CONST.__const _HKMetadataKeyDigitalSignature
|| __DATA_CONST.__const _HKMetadataKeyElevationAscended
|| __DATA_CONST.__const _HKMetadataKeyElevationDescended
|| __DATA_CONST.__const _HKMetadataKeyExternalUUID
|| __DATA_CONST.__const _HKMetadataKeyFitnessMachineDuration
|| __DATA_CONST.__const _HKMetadataKeyFoodType
|| __DATA_CONST.__const _HKMetadataKeyGroupFitness
|| __DATA_CONST.__const _HKMetadataKeyHeartRateEventThreshold
|| __DATA_CONST.__const _HKMetadataKeyHeartRateMotionContext
|| __DATA_CONST.__const _HKMetadataKeyHeartRateSensorLocation
|| __DATA_CONST.__const _HKMetadataKeyIndoorBikeDistance
|| __DATA_CONST.__const _HKMetadataKeyIndoorWorkout
|| __DATA_CONST.__const _HKMetadataKeyInsulinDeliveryReason
|| __DATA_CONST.__const _HKMetadataKeyLapLength
|| __DATA_CONST.__const _HKMetadataKeyMaximumSpeed
|| __DATA_CONST.__const _HKMetadataKeyMenstrualCycleStart
|| __DATA_CONST.__const _HKMetadataKeyReferenceRangeLowerLimit
|| __DATA_CONST.__const _HKMetadataKeyReferenceRangeUpperLimit
|| __DATA_CONST.__const _HKMetadataKeySexualActivityProtectionUsed
|| __DATA_CONST.__const _HKMetadataKeySwimmingLocationType
|| __DATA_CONST.__const _HKMetadataKeySwimmingStrokeStyle
|| __DATA_CONST.__const _HKMetadataKeySyncIdentifier
|| __DATA_CONST.__const _HKMetadataKeySyncVersion
|| __DATA_CONST.__const _HKMetadataKeyTimeZone
|| __DATA_CONST.__const _HKMetadataKeyUDIDeviceIdentifier
|| __DATA_CONST.__const _HKMetadataKeyUDIProductionIdentifier
|| __DATA_CONST.__const _HKMetadataKeyVO2MaxTestType
|| __DATA_CONST.__const _HKMetadataKeyWasTakenInLab
|| __DATA_CONST.__const _HKMetadataKeyWasUserEntered
|| __DATA_CONST.__const _HKMetadataKeyWeatherCondition
|| __DATA_CONST.__const _HKMetadataKeyWeatherHumidity
|| __DATA_CONST.__const _HKMetadataKeyWeatherTemperature
|| __DATA_CONST.__const _HKMetadataKeyWorkoutBrandName
|| __DATA_CONST.__const _HKNanoAuthorizationMachServiceName
|| __DATA_CONST.__const _HKNikeFuelSourceEntitlement
|| __DATA_CONST.__const _HKOAuth2ErrorBearerAuthenticateResponseErrorKey
|| __DATA_CONST.__const _HKOAuth2ErrorDomain
|| __DATA_CONST.__const _HKOAuth2ErrorHTTPStatusCodeErrorKey
|| __DATA_CONST.__const _HKOAuth2ErrorResponseErrorDescriptionErrorKey
|| __DATA_CONST.__const _HKOAuth2ErrorResponseErrorNameErrorKey
|| __DATA_CONST.__const _HKObjectSortIdentifierDataID
|| __DATA_CONST.__const _HKObliterationEntitlement
|| __DATA_CONST.__const _HKOnboardingActivityKey
|| __DATA_CONST.__const _HKOnboardingBatchIDKey
|| __DATA_CONST.__const _HKOnboardingGatewayIDKey
|| __DATA_CONST.__const _HKPPTPluginPath
|| __DATA_CONST.__const _HKPredicateKeyPathAverage
|| __DATA_CONST.__const _HKPredicateKeyPathCDAAuthorName
|| __DATA_CONST.__const _HKPredicateKeyPathCDACustodianName
|| __DATA_CONST.__const _HKPredicateKeyPathCDAPatientName
|| __DATA_CONST.__const _HKPredicateKeyPathCDATitle
|| __DATA_CONST.__const _HKPredicateKeyPathCategoryValue
|| __DATA_CONST.__const _HKPredicateKeyPathClinicalRecordFHIRResourceIdentifier
|| __DATA_CONST.__const _HKPredicateKeyPathClinicalRecordFHIRResourceType
|| __DATA_CONST.__const _HKPredicateKeyPathCorrelation
|| __DATA_CONST.__const _HKPredicateKeyPathCount
|| __DATA_CONST.__const _HKPredicateKeyPathDateComponents
|| __DATA_CONST.__const _HKPredicateKeyPathDevice
|| __DATA_CONST.__const _HKPredicateKeyPathEndDate
|| __DATA_CONST.__const _HKPredicateKeyPathMax
|| __DATA_CONST.__const _HKPredicateKeyPathMetadata
|| __DATA_CONST.__const _HKPredicateKeyPathMin
|| __DATA_CONST.__const _HKPredicateKeyPathMostRecent
|| __DATA_CONST.__const _HKPredicateKeyPathMostRecentDuration
|| __DATA_CONST.__const _HKPredicateKeyPathMostRecentEndDate
|| __DATA_CONST.__const _HKPredicateKeyPathMostRecentStartDate
|| __DATA_CONST.__const _HKPredicateKeyPathOffsetFromStartDate
|| __DATA_CONST.__const _HKPredicateKeyPathQuantity
|| __DATA_CONST.__const _HKPredicateKeyPathSource
|| __DATA_CONST.__const _HKPredicateKeyPathSourceRevision
|| __DATA_CONST.__const _HKPredicateKeyPathStartDate
|| __DATA_CONST.__const _HKPredicateKeyPathSum
|| __DATA_CONST.__const _HKPredicateKeyPathUUID
|| __DATA_CONST.__const _HKPredicateKeyPathWorkout
|| __DATA_CONST.__const _HKPredicateKeyPathWorkoutDuration
|| __DATA_CONST.__const _HKPredicateKeyPathWorkoutTotalDistance
|| __DATA_CONST.__const _HKPredicateKeyPathWorkoutTotalEnergyBurned
|| __DATA_CONST.__const _HKPredicateKeyPathWorkoutTotalFlightsClimbed
|| __DATA_CONST.__const _HKPredicateKeyPathWorkoutTotalSwimmingStrokeCount
|| __DATA_CONST.__const _HKPredicateKeyPathWorkoutType
|| __DATA_CONST.__const _HKPreferredSourceEntitlement
|| __DATA_CONST.__const _HKPrivateHealthKitAccessEntitlement
|| __DATA_CONST.__const _HKPrivateHealthKitAccessIdentifierElectrocardiogram
|| __DATA_CONST.__const _HKPrivateHealthKitAccessIdentifierHeartbeatSeries
|| __DATA_CONST.__const _HKPrivateHealthKitAccessIdentifierMenstrualSymptoms
|| __DATA_CONST.__const _HKPrivateHealthKitCloudSyncControlEntitlement
|| __DATA_CONST.__const _HKPrivateHealthKitEntitlement
|| __DATA_CONST.__const _HKPrivateMetadataEntitlement
|| __DATA_CONST.__const _HKProcedureRecordBodySitesCodingsKeyPath
|| __DATA_CONST.__const _HKProcedureRecordBodySitesKeyPath
|| __DATA_CONST.__const _HKProcedureRecordCategoryCodingsKeyPath
|| __DATA_CONST.__const _HKProcedureRecordCategoryKeyPath
|| __DATA_CONST.__const _HKProcedureRecordComplicationsCodingsKeyPath
|| __DATA_CONST.__const _HKProcedureRecordComplicationsKeyPath
|| __DATA_CONST.__const _HKProcedureRecordExecutionEndDateKeyPath
|| __DATA_CONST.__const _HKProcedureRecordExecutionStartDateKeyPath
|| __DATA_CONST.__const _HKProcedureRecordFollowUpsCodingsKeyPath
|| __DATA_CONST.__const _HKProcedureRecordFollowUpsKeyPath
|| __DATA_CONST.__const _HKProcedureRecordNotPerformedKeyPath
|| __DATA_CONST.__const _HKProcedureRecordOutcomeCodingsKeyPath
|| __DATA_CONST.__const _HKProcedureRecordOutcomeKeyPath
|| __DATA_CONST.__const _HKProcedureRecordPerformersKeyPath
|| __DATA_CONST.__const _HKProcedureRecordProcedureCodingsKeyPath
|| __DATA_CONST.__const _HKProcedureRecordProcedureKeyPath
|| __DATA_CONST.__const _HKProcedureRecordReasonCodingsKeyPath
|| __DATA_CONST.__const _HKProcedureRecordReasonKeyPath
|| __DATA_CONST.__const _HKProcedureRecordReasonsNotPerformedCodingsKeyPath
|| __DATA_CONST.__const _HKProcedureRecordReasonsNotPerformedKeyPath
|| __DATA_CONST.__const _HKProcedureRecordStatusCodingKeyPath
|| __DATA_CONST.__const _HKProcedureRecordStatusKeyPath
|| __DATA_CONST.__const _HKProcedureRecordTypeIdentifierProcedureRecord
|| __DATA_CONST.__const _HKProductNameBackgroundAtrialFibrillationDetection
|| __DATA_CONST.__const _HKProductNameElectrocardiogramRecording
|| __DATA_CONST.__const _HKProductTypePrefixAppleWatchFirstGeneration
|| __DATA_CONST.__const _HKProductTypePrefixAppleWatchSeries1Series2
|| __DATA_CONST.__const _HKProductTypePrefixAppleWatchSeries3
|| __DATA_CONST.__const _HKProductTypePrefixAppleWatchSeries4
|| __DATA_CONST.__const _HKProductTypePrefixAppleWatchSeries5
|| __DATA_CONST.__const _HKQuantitySampleSortIdentifierQuantity
|| __DATA_CONST.__const _HKQuantitySeriesSampleBuilderTaskServerIdentifier
|| __DATA_CONST.__const _HKQuantitySeriesSampleEditorTaskServerIdentifier
|| __DATA_CONST.__const _HKQuantityTypeIdentifierActiveEnergyBurned
|| __DATA_CONST.__const _HKQuantityTypeIdentifierAppleExerciseTime
|| __DATA_CONST.__const _HKQuantityTypeIdentifierAppleStandTime
|| __DATA_CONST.__const _HKQuantityTypeIdentifierBasalBodyTemperature
|| __DATA_CONST.__const _HKQuantityTypeIdentifierBasalEnergyBurned
|| __DATA_CONST.__const _HKQuantityTypeIdentifierBloodAlcoholContent
|| __DATA_CONST.__const _HKQuantityTypeIdentifierBloodGlucose
|| __DATA_CONST.__const _HKQuantityTypeIdentifierBloodPressureDiastolic
|| __DATA_CONST.__const _HKQuantityTypeIdentifierBloodPressureSystolic
|| __DATA_CONST.__const _HKQuantityTypeIdentifierBodyFatPercentage
|| __DATA_CONST.__const _HKQuantityTypeIdentifierBodyMass
|| __DATA_CONST.__const _HKQuantityTypeIdentifierBodyMassIndex
|| __DATA_CONST.__const _HKQuantityTypeIdentifierBodyTemperature
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryBiotin
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryCaffeine
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryCalcium
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryCarbohydrates
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryChloride
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryCholesterol
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryChromium
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryCopper
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryEnergyConsumed
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryFatMonounsaturated
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryFatPolyunsaturated
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryFatSaturated
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryFatTotal
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryFiber
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryFolate
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryIodine
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryIron
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryMagnesium
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryManganese
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryMolybdenum
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryNiacin
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryPantothenicAcid
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryPhosphorus
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryPotassium
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryProtein
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryRiboflavin
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietarySelenium
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietarySodium
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietarySugar
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryThiamin
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryVitaminA
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryVitaminB12
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryVitaminB6
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryVitaminC
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryVitaminD
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryVitaminE
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryVitaminK
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryWater
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDietaryZinc
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDistanceCycling
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDistanceDownhillSnowSports
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDistanceSwimming
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDistanceWalkingRunning
|| __DATA_CONST.__const _HKQuantityTypeIdentifierDistanceWheelchair
|| __DATA_CONST.__const _HKQuantityTypeIdentifierElectrodermalActivity
|| __DATA_CONST.__const _HKQuantityTypeIdentifierEnvironmentalAudioExposure
|| __DATA_CONST.__const _HKQuantityTypeIdentifierFlightsClimbed
|| __DATA_CONST.__const _HKQuantityTypeIdentifierForcedExpiratoryVolume1
|| __DATA_CONST.__const _HKQuantityTypeIdentifierForcedVitalCapacity
|| __DATA_CONST.__const _HKQuantityTypeIdentifierHeadphoneAudioExposure
|| __DATA_CONST.__const _HKQuantityTypeIdentifierHeartRate
|| __DATA_CONST.__const _HKQuantityTypeIdentifierHeartRateVariabilitySDNN
|| __DATA_CONST.__const _HKQuantityTypeIdentifierHeight
|| __DATA_CONST.__const _HKQuantityTypeIdentifierInhalerUsage
|| __DATA_CONST.__const _HKQuantityTypeIdentifierInsulinDelivery
|| __DATA_CONST.__const _HKQuantityTypeIdentifierLeanBodyMass
|| __DATA_CONST.__const _HKQuantityTypeIdentifierNikeFuel
|| __DATA_CONST.__const _HKQuantityTypeIdentifierNumberOfTimesFallen
|| __DATA_CONST.__const _HKQuantityTypeIdentifierOxygenSaturation
|| __DATA_CONST.__const _HKQuantityTypeIdentifierPeakExpiratoryFlowRate
|| __DATA_CONST.__const _HKQuantityTypeIdentifierPeripheralPerfusionIndex
|| __DATA_CONST.__const _HKQuantityTypeIdentifierPushCount
|| __DATA_CONST.__const _HKQuantityTypeIdentifierRespiratoryRate
|| __DATA_CONST.__const _HKQuantityTypeIdentifierRestingHeartRate
|| __DATA_CONST.__const _HKQuantityTypeIdentifierStepCount
|| __DATA_CONST.__const _HKQuantityTypeIdentifierSwimmingStrokeCount
|| __DATA_CONST.__const _HKQuantityTypeIdentifierUVExposure
|| __DATA_CONST.__const _HKQuantityTypeIdentifierVO2Max
|| __DATA_CONST.__const _HKQuantityTypeIdentifierWaistCircumference
|| __DATA_CONST.__const _HKQuantityTypeIdentifierWalkingHeartRateAverage
|| __DATA_CONST.__const _HKReadAuthorizationOverrideEntitlement
|| __DATA_CONST.__const _HKRequiredReadAuthorizationTypeIdentifiersKey
|| __DATA_CONST.__const _HKResearchStudySourceEntitlement
|| __DATA_CONST.__const _HKSampleSortIdentifierEndDate
|| __DATA_CONST.__const _HKSampleSortIdentifierMostRecentEndDate
|| __DATA_CONST.__const _HKSampleSortIdentifierMostRecentStartDate
|| __DATA_CONST.__const _HKSampleSortIdentifierStartDate
|| __DATA_CONST.__const _HKSampleTypeActivityKey
|| __DATA_CONST.__const _HKShowSensitiveLogItemsUserDefaultsKey
|| __DATA_CONST.__const _HKSourceIdentitiesEntitlement
|| __DATA_CONST.__const _HKSourceOwnerEntitlement
|| __DATA_CONST.__const _HKSourceRevisionAnyProductType
|| __DATA_CONST.__const _HKSourceRevisionAnyVersion
|| __DATA_CONST.__const _HKUnknownRecordDisplayNameKeyPath
|| __DATA_CONST.__const _HKUnknownRecordTypeIdentifierUnknownRecord
|| __DATA_CONST.__const _HKUserPreferencesDidChangeNotification
|| __DATA_CONST.__const _HKUtilityEntitlement
|| __DATA_CONST.__const _HKVaccinationRecordAdministrationDateKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordBodySiteCodingsKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordBodySiteKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordDoseNumberKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordDoseQuantityKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordExpirationDateKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordNotGivenKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordPatientReportedKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordPerformerKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordReactionKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordReasonsCodingsKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordReasonsKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordReasonsNotGivenCodingsKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordReasonsNotGivenKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordRouteCodingsKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordRouteKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordStatusCodingKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordStatusKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordTypeIdentifierVaccinationRecord
|| __DATA_CONST.__const _HKVaccinationRecordVaccinationCodingsKeyPath
|| __DATA_CONST.__const _HKVaccinationRecordVaccinationKeyPath
|| __DATA_CONST.__const _HKWatchBackgroundAppRefreshEntitlement
|| __DATA_CONST.__const _HKWorkoutCondenserOptInKeyHeartRate
|| __DATA_CONST.__const _HKWorkoutRouteTypeIdentifier
|| __DATA_CONST.__const _HKWorkoutSessionTaskServerIdentifier
|| __DATA_CONST.__const _HKWorkoutSortIdentifierDuration
|| __DATA_CONST.__const _HKWorkoutSortIdentifierTotalDistance
|| __DATA_CONST.__const _HKWorkoutSortIdentifierTotalEnergyBurned
|| __DATA_CONST.__const _HKWorkoutSortIdentifierTotalFlightsClimbed
|| __DATA_CONST.__const _HKWorkoutSortIdentifierTotalSwimmingStrokeCount
|| __DATA_CONST.__const _HKWorkoutTypeIdentifier
|| __DATA_CONST.__const _HKWriteAuthorizationOverrideEntitlement
|| __DATA_CONST.__const _HKZeppelinEntitlement
|| __DATA_CONST.__const __HDElectrocardiogramSessionServerIdentifier
|| __DATA_CONST.__const __HKCategoryTypeIdentifierCoachingEvent
|| __DATA_CONST.__const __HKCategoryTypeIdentifierHeartStudyEvent
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomAbdominalCramps
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomAcne
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomAppetiteChanges
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomBloating
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomBreastTenderness
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomConstipation
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomDiarrhea
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomHeadache
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomHotFlashes
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomLowerBackPain
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomMoodChanges
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomNausea
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomOvulationPain
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomSleepChanges
|| __DATA_CONST.__const __HKCategoryTypeIdentifierMenstrualSymptomTiredness
|| __DATA_CONST.__const __HKCategoryTypeIdentifierWatchActivation
|| __DATA_CONST.__const __HKCategoryTypeIdentifierWheelchairUseChange
|| __DATA_CONST.__const __HKCategoryTypeIdentifierWristEvent
|| __DATA_CONST.__const __HKCharacteristicTypeIdentifierBodyMass
|| __DATA_CONST.__const __HKCharacteristicTypeIdentifierHeight
|| __DATA_CONST.__const __HKCharacteristicTypeIdentifierLeanBodyMass
|| __DATA_CONST.__const __HKCharacteristicTypeIdentifierUserEnteredMenstrualCycleLength
|| __DATA_CONST.__const __HKCharacteristicTypeIdentifierUserEnteredMenstrualPeriodLength
|| __DATA_CONST.__const __HKCloudSyncControlServerIdentifier
|| __DATA_CONST.__const __HKDaemonPreferencesGenerateDemoDataKey
|| __DATA_CONST.__const __HKDaemonPreferencesUseDemoDataDatabaseKey
|| __DATA_CONST.__const __HKDataTypeIdentifierActivityCache
|| __DATA_CONST.__const __HKDataTypeIdentifierAppleStandHourGoal
|| __DATA_CONST.__const __HKDataTypeIdentifierAudiogram
|| __DATA_CONST.__const __HKDataTypeIdentifierBriskMinuteGoal
|| __DATA_CONST.__const __HKDataTypeIdentifierCalorieGoal
|| __DATA_CONST.__const __HKDataTypeIdentifierElectrocardiogram
|| __DATA_CONST.__const __HKDataTypeIdentifierFitnessFriendAchievement
|| __DATA_CONST.__const __HKDataTypeIdentifierFitnessFriendActivitySnapshot
|| __DATA_CONST.__const __HKDataTypeIdentifierFitnessFriendWorkout
|| __DATA_CONST.__const __HKDataTypeIdentifierHeartbeatSequence
|| __DATA_CONST.__const __HKDataTypeIdentifierZeppelin
|| __DATA_CONST.__const __HKElectrocardiogramOnboardingVersionCompletedDefaultKey
|| __DATA_CONST.__const __HKGymKitDataSourceServerIdentifier
|| __DATA_CONST.__const __HKGymKitMetricsDataSourceServerIdentifier
|| __DATA_CONST.__const __HKLiveWorkoutDataSourceServerIdentifier
|| __DATA_CONST.__const __HKMetadataKeyDismissReason
|| __DATA_CONST.__const __HKMetadataKeyDwelltime
|| __DATA_CONST.__const __HKMetadataKeyGoalTypes
|| __DATA_CONST.__const __HKMetadataKeyNewGoal
|| __DATA_CONST.__const __HKMetadataKeyRecommendedGoal
|| __DATA_CONST.__const __HKObjectSortIdentifierCreationDate
|| __DATA_CONST.__const __HKObjectValidationFailureException
|| __DATA_CONST.__const __HKPredicateKeyPathAppleWatch
|| __DATA_CONST.__const __HKPredicateKeyPathAssociation
|| __DATA_CONST.__const __HKPredicateKeyPathComparisonOSBuild
|| __DATA_CONST.__const __HKPredicateKeyPathCreationDate
|| __DATA_CONST.__const __HKPredicateKeyPathProductType
|| __DATA_CONST.__const __HKPredicateKeyPathWorkoutGoal
|| __DATA_CONST.__const __HKPredicateKeyPathWorkoutGoalType
|| __DATA_CONST.__const __HKPrivateMediaSourceBundleIdentifier
|| __DATA_CONST.__const __HKPrivateMetadataKeyActivitySummaryIndex
|| __DATA_CONST.__const __HKPrivateMetadataKeyAudioExposureLimit
|| __DATA_CONST.__const __HKPrivateMetadataKeyAutomaticTimeZone
|| __DATA_CONST.__const __HKPrivateMetadataKeyBackgroundAtrialFibrillationDetectionVersion
|| __DATA_CONST.__const __HKPrivateMetadataKeyDeepBreathingEndReason
|| __DATA_CONST.__const __HKPrivateMetadataKeyDeepBreathingFinalHeartRate
|| __DATA_CONST.__const __HKPrivateMetadataKeyElectrocardiogramClassification
|| __DATA_CONST.__const __HKPrivateMetadataKeyElectrocardiogramHeartRate
|| __DATA_CONST.__const __HKPrivateMetadataKeyElectrocardiogramSymptoms
|| __DATA_CONST.__const __HKPrivateMetadataKeyEmergencyCallRequested
|| __DATA_CONST.__const __HKPrivateMetadataKeyExtractionFailureInfo
|| __DATA_CONST.__const __HKPrivateMetadataKeyHeartRateContext
|| __DATA_CONST.__const __HKPrivateMetadataKeyHeartRateDiscordanceThreshold
|| __DATA_CONST.__const __HKPrivateMetadataKeyHeartRateEventMinMaxHeartRates
|| __DATA_CONST.__const __HKPrivateMetadataKeyHeartRateEventThreshold
|| __DATA_CONST.__const __HKPrivateMetadataKeyHeartbeatLongestSubsequenceDuration
|| __DATA_CONST.__const __HKPrivateMetadataKeyHeartbeatLongestSubsequenceStart
|| __DATA_CONST.__const __HKPrivateMetadataKeyHeartbeatSequenceContext
|| __DATA_CONST.__const __HKPrivateMetadataKeySleepAlarmUserSetBedtime
|| __DATA_CONST.__const __HKPrivateMetadataKeySleepAlarmUserWakeTime
|| __DATA_CONST.__const __HKPrivateMetadataKeyUnsmoothedCopyWorkoutAssociatedUUID
|| __DATA_CONST.__const __HKPrivateMetadataKeyVO2MaxActivityType
|| __DATA_CONST.__const __HKPrivateMetadataKeyWasEnteredFromCycleTracking
|| __DATA_CONST.__const __HKPrivateMetadataKeyWeatherCondition
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutAssociatedUUID
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutAverageCadence
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutAveragePace
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutAveragePower
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutAverageSpeed
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutDaytime
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutElevationAscended
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutInstantaneousCadence
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutInstantaneousPower
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutLocationSeriesIsSmoothed
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutMachineBrand
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutMachineType
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutStepCount
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutStrideCount
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutWeatherLocationCoordinatesLatitude
|| __DATA_CONST.__const __HKPrivateMetadataKeyWorkoutWeatherLocationCoordinatesLongitude
|| __DATA_CONST.__const __HKPrivateWorkoutBuilderSnapshotMetadataFinalWorkoutUUIDStringKey
|| __DATA_CONST.__const __HKQueryValidationFailureException
|| __DATA_CONST.__const __HKWorkoutBuilderServerIdentifier
|| __DATA_CONST.__const __HKWorkoutDataCollectionActivityOptionKey
|| __DATA_CONST.__const __HKWorkoutDataCollectionActivityOptionsIndoorKey
|| __DATA_CONST.__const __HKWorkoutDataCollectionActivityOptionsTypeKey
|| __DATA_CONST.__const __HKWorkoutObserverServerIdentifier
|| __DATA_CONST.__const __HKWorkoutRouteBuilderServerIdentifier
|| __DATA_CONST.__const __HKWorkoutRouteDataSourceServerIdentifier
|| __DATA_CONST.__const _kHKAchievementStickerAvailbilityDidChangeNotification
|| __DATA_CONST.__const _kHKAchievementStickersAvailableKey
|| __DATA_CONST.__const _kHKActivitySharingDomain
|| __DATA_CONST.__const _kHKAggdAuthorizationPromptCountKey
|| __DATA_CONST.__const _kHKAggdAuthorizationRequestCountKey
|| __DATA_CONST.__const _kHKAggdCDAImportAcceptKey
|| __DATA_CONST.__const _kHKAggdCDAImportCountKey
|| __DATA_CONST.__const _kHKAggdCDAImportEmptyKey
|| __DATA_CONST.__const _kHKAggdCDAImportFailKey
|| __DATA_CONST.__const _kHKAggdCDAImportPasswordProtected
|| __DATA_CONST.__const _kHKAggdCDAImportSuccessKey
|| __DATA_CONST.__const _kHKAggdCDAImportValidatedCount
|| __DATA_CONST.__const _kHKAggdCloudSyncBackstopSyncCountKey
|| __DATA_CONST.__const _kHKAggdCloudSyncCKOperationCountPrefixKey
|| __DATA_CONST.__const _kHKAggdCloudSyncCountKey
|| __DATA_CONST.__const _kHKAggdCloudSyncDisableOperationCountKey
|| __DATA_CONST.__const _kHKAggdCloudSyncDisableOperationErrorKey
|| __DATA_CONST.__const _kHKAggdCloudSyncDisableOperationSuccessKey
|| __DATA_CONST.__const _kHKAggdCloudSyncErrorCountCloudKitErrorInternalKey
|| __DATA_CONST.__const _kHKAggdCloudSyncErrorCountCloudKitErrorKey
|| __DATA_CONST.__const _kHKAggdCloudSyncErrorCountCloudKitErrorLimitExceededKey
|| __DATA_CONST.__const _kHKAggdCloudSyncErrorCountCloudKitErrorNetworkKey
|| __DATA_CONST.__const _kHKAggdCloudSyncErrorCountCloudKitErrorQuotaExceededKey
|| __DATA_CONST.__const _kHKAggdCloudSyncErrorCountCloudKitErrorRateLimitKey
|| __DATA_CONST.__const _kHKAggdCloudSyncErrorCountCloudKitErrorServiceUnavailableKey
|| __DATA_CONST.__const _kHKAggdCloudSyncErrorCountHealthKitErrorDeviceLockKey
|| __DATA_CONST.__const _kHKAggdCloudSyncErrorCountHealthKitErrorKey
|| __DATA_CONST.__const _kHKAggdCloudSyncErrorCountHealthKitErrorSyncDisabledKey
|| __DATA_CONST.__const _kHKAggdCloudSyncErrorCountHealthKitErrorTaskLimit
|| __DATA_CONST.__const _kHKAggdCloudSyncErrorCountKey
|| __DATA_CONST.__const _kHKAggdCloudSyncFetchOperationCountKey
|| __DATA_CONST.__const _kHKAggdCloudSyncFetchOperationErrorKey
|| __DATA_CONST.__const _kHKAggdCloudSyncFetchOperationOwnershipChangeRequiredKey
|| __DATA_CONST.__const _kHKAggdCloudSyncFetchOperationRebaseRequiredKey
|| __DATA_CONST.__const _kHKAggdCloudSyncFetchOperationSuccessKey
|| __DATA_CONST.__const _kHKAggdCloudSyncFetchOperationSyncDisabledKey
|| __DATA_CONST.__const _kHKAggdCloudSyncLongTimeSinceSuccessfulPushKey
|| __DATA_CONST.__const _kHKAggdCloudSyncPullOperationCountKey
|| __DATA_CONST.__const _kHKAggdCloudSyncPullOperationErrorKey
|| __DATA_CONST.__const _kHKAggdCloudSyncPullOperationSuccessKey
|| __DATA_CONST.__const _kHKAggdCloudSyncPushOperationCountKey
|| __DATA_CONST.__const _kHKAggdCloudSyncPushOperationErrorDurationKey
|| __DATA_CONST.__const _kHKAggdCloudSyncPushOperationErrorKey
|| __DATA_CONST.__const _kHKAggdCloudSyncPushOperationSuccessDurationKey
|| __DATA_CONST.__const _kHKAggdCloudSyncPushOperationSuccessKey
|| __DATA_CONST.__const _kHKAggdCloudSyncRebaseActiveDurationKey
|| __DATA_CONST.__const _kHKAggdCloudSyncRebaseHealthDeleteTriggerKey
|| __DATA_CONST.__const _kHKAggdCloudSyncRebaseOperationCountKey
|| __DATA_CONST.__const _kHKAggdCloudSyncRebaseOperationErrorKey
|| __DATA_CONST.__const _kHKAggdCloudSyncRebaseOperationSuccessKey
|| __DATA_CONST.__const _kHKAggdCloudSyncRebaseReasonPrefixKey
|| __DATA_CONST.__const _kHKAggdCloudSyncRebaseThirdPartyDeleteTriggerKey
|| __DATA_CONST.__const _kHKAggdCloudSyncRebaseTotalDurationKey
|| __DATA_CONST.__const _kHKAggdCloudSyncSuccessCountKey
|| __DATA_CONST.__const _kHKAggdDashboardItemCountKey
|| __DATA_CONST.__const _kHKAggdDidDestroyDatabaseForFatalMigrationFailureKey
|| __DATA_CONST.__const _kHKAggdHasSetMedicalIDFieldPrefixKey
|| __DATA_CONST.__const _kHKAggdHasSetMedicalIDKey
|| __DATA_CONST.__const _kHKAggdIntegrityCheckFailedKey
|| __DATA_CONST.__const _kHKAggdNanoSyncCountKey
|| __DATA_CONST.__const _kHKAggdNanoSyncErrorCountKey
|| __DATA_CONST.__const _kHKAggdNanoSyncResponseStatusPrefixKey
|| __DATA_CONST.__const _kHKAggdNanoSyncSuccessCountKey
|| __DATA_CONST.__const _kHKAggdNanoSyncSuccessDurationDistributionKey
|| __DATA_CONST.__const _kHKAggdServiceConnectionFrequencyDistributionKey
|| __DATA_CONST.__const _kHKAggdServicesCountPrefixKey
|| __DATA_CONST.__const _kHKAntimonyAppPrefix
|| __DATA_CONST.__const _kHKAtrialFibrillationDetectionNegativeCount
|| __DATA_CONST.__const _kHKAtrialFibrillationDetectionPositiveCount
|| __DATA_CONST.__const _kHKComAppleKbdDomain
|| __DATA_CONST.__const _kHKConnectedGymBundleIdentifier
|| __DATA_CONST.__const _kHKConnectedGymPreferencesDefaultNFCAlwaysOn
|| __DATA_CONST.__const _kHKConnectedGymPreferencesDomain
|| __DATA_CONST.__const _kHKConnectedGymPreferencesNFCAlwaysOn
|| __DATA_CONST.__const _kHKConnectedGymPreferencesSkipMFA
|| __DATA_CONST.__const _kHKConnectedGymPreferencesSpartanMFATimeoutOverride
|| __DATA_CONST.__const _kHKConnectedGymPreferencesSpartanSimNFCSupport
|| __DATA_CONST.__const _kHKDatabasePreferencesDomain
|| __DATA_CONST.__const _kHKDatabasePreferencesKeyEnableFutureMigrations
|| __DATA_CONST.__const _kHKDeepBreathingPreferencesDomain
|| __DATA_CONST.__const _kHKDynamicAchievementDefinitionChangedNotification
|| __DATA_CONST.__const _kHKFirstDayOfFitnessWeekDidChangeNotification
|| __DATA_CONST.__const _kHKFirstDayOfFitnessWeekPreferencesKey
|| __DATA_CONST.__const _kHKHAKeyCompletedBuddyVersion
|| __DATA_CONST.__const _kHKHAKeyDatePredictiveGenerationLastRan
|| __DATA_CONST.__const _kHKHAKeyMinutesUntilFeedIsStale
|| __DATA_CONST.__const _kHKHASharedUserDefaultsIdentifier
|| __DATA_CONST.__const _kHKHealthAppBadgesDidUpdateNotification
|| __DATA_CONST.__const _kHKHealthAppBundleIdentifier
|| __DATA_CONST.__const _kHKHealthAppDaemonBundleIdentifier
|| __DATA_CONST.__const _kHKHealthCloudSharingDisabledDateKey
|| __DATA_CONST.__const _kHKHealthCloudSharingDomain
|| __DATA_CONST.__const _kHKHealthDaemonActiveWorkoutServersDidUpdateNotification
|| __DATA_CONST.__const _kHKHealthDaemonDidFinishLaunchingNotification
|| __DATA_CONST.__const _kHKHealthPrivacyServiceBundleIdentifier
|| __DATA_CONST.__const _kHKHealthSettingsShowMedicalIDOnWatchKey
|| __DATA_CONST.__const _kHKHealthdBundleIdentifier
|| __DATA_CONST.__const _kHKHeartRateKeyBradycardiaThresholdBPM
|| __DATA_CONST.__const _kHKHeartRateKeyEnableAtrialFibrillationDetection
|| __DATA_CONST.__const _kHKHeartRateKeyEnableBradycardiaDetection
|| __DATA_CONST.__const _kHKHeartRateKeyEnableStationaryDiscordanceDetection
|| __DATA_CONST.__const _kHKHeartRateKeyStationaryDiscordanceMinimumBPM
|| __DATA_CONST.__const _kHKHeartRateNotificationsPreferencesDomain
|| __DATA_CONST.__const _kHKHeartRhythmDefaultsDomain
|| __DATA_CONST.__const _kHKInternalSettingsKeyCHRHideTTR
|| __DATA_CONST.__const _kHKInternalSettingsKeyCHRHideUnknownRecords
|| __DATA_CONST.__const _kHKInternalSettingsKeyCloudSyncEnabled
|| __DATA_CONST.__const _kHKInternalSettingsKeyEnableVideoPlayback
|| __DATA_CONST.__const _kHKInternalSettingsKeyForceBuddy
|| __DATA_CONST.__const _kHKInternalSettingsKeyHealthCloudCHRStudyEnvironment
|| __DATA_CONST.__const _kHKInternalSettingsKeyLastCloudSyncDateCheckEnabled
|| __DATA_CONST.__const _kHKInternalSettingsKeyManateeEnabledForHSA2Accounts
|| __DATA_CONST.__const _kHKInternalSettingsKeySpringboardVisibilityDefault
|| __DATA_CONST.__const _kHKInternalSettingsKeySpringboardVisibilityNotification
|| __DATA_CONST.__const _kHKInternalSettingsKeyVideoPlaybackServerURL
|| __DATA_CONST.__const _kHKInternalSettingsOverrideDeviceSupported
|| __DATA_CONST.__const _kHKLatestAnalyzedSampleDateKey
|| __DATA_CONST.__const _kHKLocalDeviceBundleIdentifier
|| __DATA_CONST.__const _kHKMedicalIDDidChangeNotification
|| __DATA_CONST.__const _kHKMedicalIDEmergencyContactsDidChangeNotification
|| __DATA_CONST.__const _kHKNanoLifestylePrivacyPreferencesChangedNotification
|| __DATA_CONST.__const _kHKNanoUserDefaultsSynchronized
|| __DATA_CONST.__const _kHKNanolifestylePreferencesDomain
|| __DATA_CONST.__const _kHKNanolifestyleRemoteAchievementsEnabledPreferencesKey
|| __DATA_CONST.__const _kHKNotificationsDomainKey
|| __DATA_CONST.__const _kHKNotificationsHealthRecordsIdentifier
|| __DATA_CONST.__const _kHKNotificationsURLKey
|| __DATA_CONST.__const _kHKPrivacyPreferencesDomain
|| __DATA_CONST.__const _kHKPrivacyPreferencesKeyEnableFitnessTracking
|| __DATA_CONST.__const _kHKPrivacyPreferencesKeyEnableHeartAgeGating
|| __DATA_CONST.__const _kHKPrivacyPreferencesKeyEnableHeartRate
|| __DATA_CONST.__const _kHKPrivateClinicalBundleIdentifier
|| __DATA_CONST.__const _kHKPublicClinicalBundleIdentifier
|| __DATA_CONST.__const _kHKSBSearchDisabledBundlesKey
|| __DATA_CONST.__const _kHKSettingsUserDefaultClinicalDataCollectionOptInKey
|| __DATA_CONST.__const _kHKSourceListDidChangeNotification
|| __DATA_CONST.__const _kHKSpotlightUIPrefsDomain
|| __DATA_CONST.__const _kHKSubsectionIdentifierBulletinContextKey
|| __DATA_CONST.__const _kHKToastCrunchAppPrefix
|| __DATA_CONST.__const _kHKUserCharacteristicsDidChangeNotification
|| __DATA_CONST.__const _kHKWellnessDashboardFirstNameUserDefaultKey
|| __DATA_CONST.__const _kHKWellnessDashboardLastNameUserDefaultKey
|| __DATA_CONST.__const _kHKWellnessDashboardNameChangeNotification
|| __DATA_CONST.__const _kHKWellnessDashboardNameUserDefaultKey
|| __DATA_DIRTY.__common _HKLogActivity
|| __DATA_DIRTY.__common _HKLogActivityCache
|| __DATA_DIRTY.__common _HKLogAudioAnalytics
|| __DATA_DIRTY.__common _HKLogAuthorization
|| __DATA_DIRTY.__common _HKLogBackgroundUpdates
|| __DATA_DIRTY.__common _HKLogCoaching
|| __DATA_DIRTY.__common _HKLogDataCollection
|| __DATA_DIRTY.__common _HKLogDatabase
|| __DATA_DIRTY.__common _HKLogDeepBreathing
|| __DATA_DIRTY.__common _HKLogDefault
|| __DATA_DIRTY.__common _HKLogDemoData
|| __DATA_DIRTY.__common _HKLogGymKit
|| __DATA_DIRTY.__common _HKLogHealthRecords
|| __DATA_DIRTY.__common _HKLogHeartRate
|| __DATA_DIRTY.__common _HKLogHeartRhythm
|| __DATA_DIRTY.__common _HKLogMedicalID
|| __DATA_DIRTY.__common _HKLogMenstrualCycles
|| __DATA_DIRTY.__common _HKLogMobileAsset
|| __DATA_DIRTY.__common _HKLogNotifications
|| __DATA_DIRTY.__common _HKLogPredictive
|| __DATA_DIRTY.__common _HKLogProcessState
|| __DATA_DIRTY.__common _HKLogQuery
|| __DATA_DIRTY.__common _HKLogServices
|| __DATA_DIRTY.__common _HKLogSync
|| __DATA_DIRTY.__common _HKLogWellnessDashboard
|| __DATA_DIRTY.__common _HKLogWorkouts
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKActiveWatchFeatureAvailabilityDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKActivitySummary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKActivitySummaryQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKActivitySummaryType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKAllergyRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKAllergyRecordType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKAnchoredObjectQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKAudioExposureUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKAudiogramSampleType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKAuthorizationRequestRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKBadge
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKBaseUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKCDADocumentSample
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKCategorySample
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKCategoryType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKCharacteristicType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKClinicalAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKClinicalAccountLoginCompletionState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKClinicalBrand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKClinicalGateway
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKClinicalProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKClinicalProviderSearchResultsPage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKClinicalType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKCloudSyncObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKCloudSyncObserverStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKConceptIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKConditionRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKConditionRecordType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKConductanceUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKCorrelation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKCorrelationType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKCumulativeQuantitySample
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKDataCollector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKDataCollectorCollectionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKDataCollectorTaskServerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKDecibelAWeightedSoundPressureLevelUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKDecibelHearingLevelUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKDeletedObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKDiagnosticTestReportType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKDiagnosticTestResultType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKDocumentSample
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKDocumentType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKElectrocardiogramType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKEnergyUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKHealthRecordsStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKHealthService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKHealthStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKHealthStoreConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKHeartRhythmAvailability
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKKeyValueDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKKeyValueDomainServerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKLengthUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKMassUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKMedicalCodingCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKMedicalCodingResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKMedicalCodingSystem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKMedicalCodingTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKMedicalConcept
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKMedicalRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKMedicalType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKMedicationDispenseRecordType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKMedicationOrderType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKMedicationRecordType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKMultiTypeQueryCursor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKMultiTypeSampleQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKNanoSyncPairedDevicesSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKNonConvertibleIUUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKObjectAuthorizationPromptSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKObjectType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKObserverSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKPluginProxyProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKPressureUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKProcedureRecordType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKProfileIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKProxyProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKQuantity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKQuantityDatum
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKQuantitySample
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKQuantityType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKQueryAnchor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKQueryServerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSample
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSampleCountQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSampleQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSampleQueryDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSampleType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSampleTypeChange
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKScalarUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSeriesType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSleepQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSourceQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSourceRevision
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKStatistics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKStatisticsCollectionQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKStatisticsQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKTaskConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKTaskServerProxyProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKTemperatureUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKTimeUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKUnknownRecordType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKVaccinationRecordType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKVolumeUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKWheelchairUseObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKWorkout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKWorkoutBuilderConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKWorkoutConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKWorkoutSessionTaskConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKWorkoutType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKActivityCacheIndexFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKAppleWatchSampleFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKAssociationFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKAuthorizationRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKBehavior
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKCDADocumentFieldFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKCFGExpression
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKCFGNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKCFGNonTerminal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKCFGTerminal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKCategoryValueFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKCompoundFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKConceptIdentifierFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKContextFreeGrammar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKCorrelationFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKCreationDateFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKDatabaseChangesQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKDateRangeQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKDeepBreathingSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKDeepBreathingSessionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKDeviceFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKDevicePropertyFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKDiagnosticTestResultCategoryFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKDiscreteQuantitySampleMostRecentDateFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKDiscreteQuantitySampleMostRecentDurationFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKDiscreteQuantitySampleQuantityFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKEmergencyContact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKEndDateFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKEntitlements
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKFHIRResourceIdentifierFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKFHIRResourceResourceTypeFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKFitnessMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKMedicalIDData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKMedicalRecordModifiedDateFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKMedicalRecordSortDateFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKMetadataFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKMobileAssetDownloadManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKProductTypeObjectFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKQuantityDistributionData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKQuantityDistributionQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKQuantityFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKQuantitySampleCountFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKSourceFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKSourceRevisionFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKStartDateFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKStringFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKTimePeriod
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKUUIDFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKWheelchairUseCharacteristicCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKWorkoutActivityTypeFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKWorkoutDurationFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKWorkoutFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKWorkoutGoalFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKWorkoutGoalTypeFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKWorkoutTotalDistanceFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKWorkoutTotalEnergyBurnedFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKWorkoutTotalFlightsClimbedFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKWorkoutTotalSwimmingStrokeCountFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKActiveWatchFeatureAvailabilityDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKActivitySummary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKActivitySummaryQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKActivitySummaryType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKAllergyRecordType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKAnchoredObjectQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKAudioExposureUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKAudiogramSampleType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKAuthorizationRequestRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKBadge
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKBaseUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKCDADocumentSample
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKCategorySample
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKCategoryType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKCharacteristicType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKClinicalAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKClinicalAccountLoginCompletionState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKClinicalBrand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKClinicalGateway
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKClinicalProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKClinicalProviderSearchResultsPage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKClinicalType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKCloudSyncObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKCloudSyncObserverStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKCodableQuantitySeriesDatum
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKConceptIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKConceptStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKConditionRecordType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKConductanceUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKCorrelation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKCorrelationType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKCumulativeQuantitySample
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKCurrentActivityCacheQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKDataCollector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKDataCollectorCollectionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKDataCollectorTaskServerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKDecibelAWeightedSoundPressureLevelUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKDeletedObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKDiagnosticTestReportType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKDiagnosticTestResultType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKDocumentSample
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKDocumentType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKElectrocardiogramQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKElectrocardiogramType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKEnergyUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKHealthRecordsStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKHealthService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKHealthStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKHealthStoreConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKHeartRateSummaryQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKHeartRateSummaryReading
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKHeartRhythmAvailability
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKKeyValueDomain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKKeyValueDomainServerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKLengthUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKMassUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKMedicalCodingCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKMedicalCodingResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKMedicalCodingSystem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKMedicalCodingTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKMedicalConcept
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKMedicalRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKMedicalType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKMedicationDispenseRecordType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKMedicationOrderType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKMedicationRecordType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKMultiTypeQueryCursor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKMultiTypeSampleQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKNanoSyncPairedDevicesSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKNonConvertibleIUUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKObjectAuthorizationPromptSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKObjectType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKObserverSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKPluginProxyProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKPressureUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKProcedureRecordType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKProfileIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKProxyProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKQuantity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKQuantityDatum
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKQuantitySample
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKQuantitySeriesSampleQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKQuantityType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKQueryAnchor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKQueryServerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSample
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSampleCountQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSampleQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSampleQueryDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSampleType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSampleTypeChange
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKScalarUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSeriesSample
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSeriesType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSleepAnalysisUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSourceQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSourceRevision
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKStatistics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKStatisticsCollectionQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKStatisticsQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKTaskConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKTaskServerProxyProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKTemperatureUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKTimeUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKUnknownRecordType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKVaccinationRecordType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKVolumeUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKWheelchairUseObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKWorkout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKWorkoutBuilderConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKWorkoutConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKWorkoutRoute
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKWorkoutSessionTaskConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKWorkoutType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKActivityCacheIndexFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKAppleWatchSampleFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKAssociationFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKAuthorizationRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKBehavior
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKCDADocumentFieldFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKCFGExpression
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKCFGNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKCFGNonTerminal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKCFGTerminal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKCategoryValueFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKCompoundFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKConceptIdentifierFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKContextFreeGrammar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKCorrelationFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKCreationDateFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKDatabaseChangesQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKDateRangeQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKDeepBreathingSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKDeepBreathingSessionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKDeviceFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKDevicePropertyFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKDiagnosticTestResultCategoryFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKDiscreteQuantitySampleMostRecentDateFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKDiscreteQuantitySampleMostRecentDurationFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKDiscreteQuantitySampleQuantityFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKEmergencyContact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKEndDateFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKEntitlements
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKFHIRResourceIdentifierFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKFHIRResourceResourceTypeFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKFitnessMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKMedicalIDData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKMedicalRecordModifiedDateFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKMedicalRecordSortDateFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKMetadataFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKMobileAssetDownloadManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKProductTypeObjectFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKQuantityDistributionData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKQuantityDistributionQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKQuantityFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKQuantitySampleCountFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKSampleTypeQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKSourceFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKSourceRevisionFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKStartDateFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKStringFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKTimePeriod
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKUUIDFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKWheelchairUseCharacteristicCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKWorkoutActivityTypeFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKWorkoutDurationFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKWorkoutFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKWorkoutGoalFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKWorkoutGoalTypeFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKWorkoutTotalDistanceFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKWorkoutTotalEnergyBurnedFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKWorkoutTotalFlightsClimbedFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKWorkoutTotalSwimmingStrokeCountFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKXPCConnection
|| __TEXT.__const _HKApproximateSecondsInADay
|| __TEXT.__const _HKApproximateSecondsInAHour
|| __TEXT.__const _HKAudiogramDiagnosticCategoryCount
|| __TEXT.__const _HKConceptIdentifierNone
|| __TEXT.__const _HKConceptVersionNone
|| __TEXT.__const _HKDaysInAWeek
|| __TEXT.__const _HKDeletedSamplesAvailableDays
|| __TEXT.__const _HKDistantPastTime
|| __TEXT.__const _HKExternalSyncObjectCodeHKObject
|| __TEXT.__const _HKHealthServiceDiscoveryIdentifierInvalid
|| __TEXT.__const _HKHealthServiceSessionIdentifierInvalid
|| __TEXT.__const _HKIndexableObjectMaximumIndex
|| __TEXT.__const _HKMinimumRequiredAuthorizationTypeIdentifiers
|| __TEXT.__const _HKNSOperatingSystemVersionUnknown
|| __TEXT.__const _HKOnboardingMinimumRequiredAgeAtrialFibrillationDetection
|| __TEXT.__const _HKOnboardingMinimumRequiredAgeElectrocardiogram
|| __TEXT.__const _HKQuantitySeriesSampleBuilderDefaultBatchSize
|| __TEXT.__const _HKSampleTypeAudioExposureMinimumSampleDuration
|| __TEXT.__const _HKSampleTypeMaximumSampleDuration
|| __TEXT.__const _HKSemanticVersionUnknown
|| __TEXT.__const _HKSourceRevisionAnyOperatingSystem
|| __TEXT.__const _HKWatchKitActivitySummaryAvailabilityDays
|| __TEXT.__const _HKWatchKitDataAvailabilityDays
|| __TEXT.__const _HKWatchMenstrualCycleDaySummaryAvailabilityDays
|| __TEXT.__const _HKWatchMenstrualHealthSampleAvailabilityDays
|| __TEXT.__const _NRProductVersionIOSPeaceC
|| __TEXT.__const _NRProductVersionIOSPeaceD
|| __TEXT.__const _NRProductVersionIOSPeaceE
|| __TEXT.__const _NRProductVersionIOSPeaceF
|| __TEXT.__const _NRProductVersionIOSPeaceG
|| __TEXT.__const _NRProductVersionIOSYukonPre
|| __TEXT.__const __HKBloodGlucoseMealTimeUnspecified
|| __TEXT.__const __HKDefaultDailyActiveHoursGoal
|| __TEXT.__const __HKDefaultDailyBriskMinutesGoal
|| __TEXT.__const __HKHeartSettingsBradycardiaThresholdHeartRateDefault
|| __TEXT.__const __HKHeartSettingsBradycardiaThresholdHeartRateIncrement
|| __TEXT.__const __HKHeartSettingsBradycardiaThresholdHeartRateMax
|| __TEXT.__const __HKHeartSettingsBradycardiaThresholdHeartRateMin
|| __TEXT.__const __HKHeartSettingsTachycardiaThresholdHeartRateDefault
|| __TEXT.__const __HKHeartSettingsTachycardiaThresholdHeartRateIncrement
|| __TEXT.__const __HKHeartSettingsTachycardiaThresholdHeartRateMax
|| __TEXT.__const __HKHeartSettingsTachycardiaThresholdHeartRateMin
|| __TEXT.__const __HKRequiredCalendarUnitsForCacheIndexDateComponents
|| __TEXT.__const __HKWorkoutActivityFirstType
|| __TEXT.__const __HKWorkoutActivityLastDefinedType
|| __TEXT.__const __HKWorkoutActivityTypeNone
|| __TEXT.__const _kHKActivityEpochDuration
|| __TEXT.__const _kHKBaselineMETs
|| __TEXT.__const _kHKDailyStatisticsIntervalInMinutes
|| __TEXT.__const _kHKDefaultFirstDayOfFitnessWeek
|| __TEXT.__const _kHKDefaultFirstDayOfSleepWeek
|| __TEXT.__const _kHKDefaultLastDayOfFitnessWeek
|| __TEXT.__const _kHKDefaultUserWeightKG
|| __TEXT.__const _kHKHAKeyCurrentBuddyVersion
|| __TEXT.__const _kHKHeartAgeGatingAge
|| __TEXT.__const _kHKKeepAliveExpirationInterval
|| __TEXT.__const _kHKWorkoutHeartRateRecoveryDisplayInterval
|| __TEXT.__const _kHKWorkoutHeartRateRecoveryIntervalInMinutes
|| __TEXT.__const _kHKWorkoutHeartRateRecoveryMeasuringInterval
|| __TEXT.__const _kHKWorkoutHeartRateRecoveryMinuteLeewayInterval
|| __TEXT.__const _kHKWorkoutRouteSmoothedVersion
|| __TEXT.__text _HDCloudSyncServerInterface
|| __TEXT.__text _HDHealthRecordsPluginServerInterface
|| __TEXT.__text _HDHealthServicesServerInterface
|| __TEXT.__text _HDHealthStoreEndpointInterface
|| __TEXT.__text _HDHealthStoreServerInterface
|| __TEXT.__text _HDMedicalIDServerInterface
|| __TEXT.__text _HDNanoSyncServerInterface
|| __TEXT.__text _HDNotificationServerInterface
|| __TEXT.__text _HDProfileServerInterface
|| __TEXT.__text _HDQueryControlServerInterface
|| __TEXT.__text _HDStaticSyncServerInterface
|| __TEXT.__text _HDUtilityServerInterface
|| __TEXT.__text _HDWorkoutServerInterface
|| __TEXT.__text _HKAggdAddScalarValue
|| __TEXT.__text _HKAggdBuildKey
|| __TEXT.__text _HKAggdClearTimer
|| __TEXT.__text _HKAggdPushDistributionValue
|| __TEXT.__text _HKAggdPushTimeIntervalValueForTimerKey
|| __TEXT.__text _HKAggdSetScalarValue
|| __TEXT.__text _HKAggdStartTimer
|| __TEXT.__text _HKAggdTimerValue
|| __TEXT.__text _HKApplicationSDKVersion
|| __TEXT.__text _HKAtrialFibrillationDetectionIsAvailableForGeolocatedCountryCode
|| __TEXT.__text _HKAtrialFibrillationDetectionSupportedCountries
|| __TEXT.__text _HKAtrialFibrillationDetectionSupportedStateForGeolocatedCountryCodeAndWatchOSVersion
|| __TEXT.__text _HKAudiogramDiagnosticCategoryLocalizedDisplayNameForCategory
|| __TEXT.__text _HKAudiogramDiagnosticCategoryLocalizedValueRangeForCategory
|| __TEXT.__text _HKAudiogramDiagnosticCategoryMaximumDecibelValueForCategory
|| __TEXT.__text _HKAudiogramDiagnosticCategoryMinimumDecibelValueForCategory
|| __TEXT.__text _HKAuthorizationModeToString
|| __TEXT.__text _HKAuthorizationStatusAllowsReading
|| __TEXT.__text _HKAuthorizationStatusAllowsSharing
|| __TEXT.__text _HKAuthorizationStatusToString
|| __TEXT.__text _HKCalendarDateTransformNone
|| __TEXT.__text _HKCalendarDateTransformPreceding6PM
|| __TEXT.__text _HKClinicalContentAnalyticsTriggerOptionsToString
|| __TEXT.__text _HKClinicalContentAnalyticsTriggerReasonToString
|| __TEXT.__text _HKClinicalDataCollectionReasonToString
|| __TEXT.__text _HKClinicalReferencedActorTypeToString
|| __TEXT.__text _HKCloudSyncOptionsToString
|| __TEXT.__text _HKCloudSyncReasonToString
|| __TEXT.__text _HKCodableCondensedWorkoutCollectionReadFrom
|| __TEXT.__text _HKCodableCondensedWorkoutReadFrom
|| __TEXT.__text _HKCodableQuantitySeriesDatumReadFrom
|| __TEXT.__text _HKCodableQuantitySeriesEnumerationResultCollectionReadFrom
|| __TEXT.__text _HKCodableQuantitySeriesEnumerationResultReadFrom
|| __TEXT.__text _HKCodableQuantitySeriesReadFrom
|| __TEXT.__text _HKCompareDoubles
|| __TEXT.__text _HKCompareUUIDBytes
|| __TEXT.__text _HKComparisonResultMatchesPredicateOperator
|| __TEXT.__text _HKConditionallyRedactedHeartRhythmString
|| __TEXT.__text _HKConnectedGymSourceName
|| __TEXT.__text _HKCopyQueryDescription
|| __TEXT.__text _HKCoreMotionSupportsSwimmingWorkoutSessions
|| __TEXT.__text _HKCreateConcurrentDispatchQueue
|| __TEXT.__text _HKCreateSerialDispatchQueue
|| __TEXT.__text _HKCreateSerialDispatchQueueWithQOSClass
|| __TEXT.__text _HKCreateSerialUtilityDispatchQueue
|| __TEXT.__text _HKDailyBriskMinutesGoal
|| __TEXT.__text _HKDailyStandingHoursGoal
|| __TEXT.__text _HKDateMax
|| __TEXT.__text _HKDateMid
|| __TEXT.__text _HKDateMin
|| __TEXT.__text _HKDescriptionForAnalyticsFileWithName
|| __TEXT.__text _HKDiagnosticStringForDurationSinceDate
|| __TEXT.__text _HKDiagnosticStringFromDate
|| __TEXT.__text _HKDiagnosticStringFromDuration
|| __TEXT.__text _HKDispatchAsyncOnGlobalConcurrentQueue
|| __TEXT.__text _HKDispatchQueueName
|| __TEXT.__text _HKElectrocardiogramIsAvailableForGeolocatedCountryCode
|| __TEXT.__text _HKElectrocardiogramSupportedCountries
|| __TEXT.__text _HKElectrocardiogramSupportedStatedForGeolocatedCountryCodeAndIOSVersion
|| __TEXT.__text _HKElectrocardiogramSupportedStatedForGeolocatedCountryCodeAndWatchOSVersion
|| __TEXT.__text _HKExtendedClientInterface
|| __TEXT.__text _HKExtendedServerInterface
|| __TEXT.__text _HKFirstDayOfWeekForWeeklyGoalCalculations
|| __TEXT.__text _HKFitnessMachineConnectionClientInterface
|| __TEXT.__text _HKFitnessMachineConnectionInitiatorClientInterface
|| __TEXT.__text _HKHealthKitFrameworkBundle
|| __TEXT.__text _HKHealthRecordsStoreInterface
|| __TEXT.__text _HKHealthServicesClientInterface
|| __TEXT.__text _HKHealthStoreClientInterface
|| __TEXT.__text _HKHealthWrapCertificateFromString
|| __TEXT.__text _HKHealthWrapCodableKeyValueReadFrom
|| __TEXT.__text _HKHealthWrapCodableMessageHeaderReadFrom
|| __TEXT.__text _HKHealthWrapCodableMessageKeyReadFrom
|| __TEXT.__text _HKHealthWrapCodablePayloadHeaderReadFrom
|| __TEXT.__text _HKHealthWrapCodableValueReadFrom
|| __TEXT.__text _HKHealthWrapDERDataFromString
|| __TEXT.__text _HKHeartRateMotionContextForPrivateHeartRateContext
|| __TEXT.__text _HKIndexableObjectCheckCardinalityForIndexRestore
|| __TEXT.__text _HKInternalAuthorizationStatusMake
|| __TEXT.__text _HKLastDayOfWeekForWeeklyGoalCalculations
|| __TEXT.__text _HKLinkedOnOrAfter
|| __TEXT.__text _HKLocalizedStringsURLForLocale
|| __TEXT.__text _HKLogAnalytics
|| __TEXT.__text _HKLogArticles
|| __TEXT.__text _HKLogAssertions
|| __TEXT.__text _HKLogConceptIndex
|| __TEXT.__text _HKLogHealthOntology
|| __TEXT.__text _HKLogInfrastructure
|| __TEXT.__text _HKLogSafeDescription
|| __TEXT.__text _HKLogTesting
|| __TEXT.__text _HKMetadataAliasesForKey
|| __TEXT.__text _HKNSOperatingSystemVersionCompare
|| __TEXT.__text _HKNSOperatingSystemVersionFromString
|| __TEXT.__text _HKNSOperatingSystemVersionIsUnknown
|| __TEXT.__text _HKNSOperatingSystemVersionString
|| __TEXT.__text _HKNSOperatingSystemVersionsEqual
|| __TEXT.__text _HKNotificationDomainIsDeprecated
|| __TEXT.__text _HKObjectAuthorizationStatusForNumber
|| __TEXT.__text _HKObjectForNanoPreferencesUserDefaultsKey
|| __TEXT.__text _HKOperatorTypeInArray
|| __TEXT.__text _HKQueryActivationStateToString
|| __TEXT.__text _HKSafeDivision
|| __TEXT.__text _HKSafeObject
|| __TEXT.__text _HKSemanticVersionCompare
|| __TEXT.__text _HKSemanticVersionFromString
|| __TEXT.__text _HKSemanticVersionIsUnknown
|| __TEXT.__text _HKSemanticVersionsEqual
|| __TEXT.__text _HKSensitiveLogItem
|| __TEXT.__text _HKSeries123AtrialFibrillationDetectionSupportedDeviceRegions
|| __TEXT.__text _HKSeries123AtrialFibrillationDetectionSupportedStateForDeviceRegionAndWatchOSVersion
|| __TEXT.__text _HKSeries123DeviceRegionSupportedStateForAtrialFibrillationDetection
|| __TEXT.__text _HKSeries4AtrialFibrillationDetectionSupportedDeviceRegions
|| __TEXT.__text _HKSeries4AtrialFibrillationDetectionSupportedStateForDeviceRegionAndWatchOSVersion
|| __TEXT.__text _HKSeries4DeviceRegionSupportedForElectrocardiogram
|| __TEXT.__text _HKSeries4DeviceRegionSupportedStateForAtrialFibrillationDetection
|| __TEXT.__text _HKSeries4ElectrocardiogramSupportedDeviceRegions
|| __TEXT.__text _HKSeries4ElectrocardiogramSupportedStateForDeviceRegionAndIOSVersion
|| __TEXT.__text _HKSeries4ElectrocardiogramSupportedStateForDeviceRegionAndWatchOSVersion
|| __TEXT.__text _HKSeries5AtrialFibrillationDetectionSupportedDeviceRegions
|| __TEXT.__text _HKSeries5AtrialFibrillationDetectionSupportedStateForDeviceRegionAndWatchOSVersion
|| __TEXT.__text _HKSeries5DeviceRegionSupportedForElectrocardiogram
|| __TEXT.__text _HKSeries5ElectrocardiogramSupportedDeviceRegions
|| __TEXT.__text _HKSeries5ElectrocardiogramSupportedStateForDeviceRegionAndIOSVersion
|| __TEXT.__text _HKSeries5ElectrocardiogramSupportedStateForDeviceRegionAndWatchOSVersion
|| __TEXT.__text _HKSeriesBuilderStateToString
|| __TEXT.__text _HKSessionTrackerAriadneTrigger
|| __TEXT.__text _HKSetStackshotHandler
|| __TEXT.__text _HKSharedResourcesDirectory
|| __TEXT.__text _HKShouldAdvertiseAtrialFibrillationDetectionBeforeGeolocationInLocale
|| __TEXT.__text _HKShouldAdvertiseElectrocardiogramBeforeGeolocationInLocale
|| __TEXT.__text _HKSingletonDispatchQueueName
|| __TEXT.__text _HKSourceOptionsForAppleDevice
|| __TEXT.__text _HKSourceOptionsForClinicalSource
|| __TEXT.__text _HKSourceOptionsForConnectedGymSource
|| __TEXT.__text _HKStackshotWriteWithReason
|| __TEXT.__text _HKStackshotWriteWithReasonFormat
|| __TEXT.__text _HKStringFromBool
|| __TEXT.__text _HKStringFromHKHealthRecordsStoreIngestionState
|| __TEXT.__text _HKStringFromQoS
|| __TEXT.__text _HKSubmitAnalyticsFile
|| __TEXT.__text _HKSupportedMetricsForMachineType
|| __TEXT.__text _HKSyncProtocolVersionToString
|| __TEXT.__text _HKSynchronizeNanoPreferencesUserDefaults
|| __TEXT.__text _HKWheelchairUseDisplayName
|| __TEXT.__text _HKWithAutoreleasePool
|| __TEXT.__text _HKWorkoutBuilderConstructionStateToString
|| __TEXT.__text _HKWorkoutSessionStateFromServerState
|| __TEXT.__text _HKWorkoutSessionStateToString
|| __TEXT.__text _HK_identifierForAttributeKey
|| __TEXT.__text _NSStringFromAccountStateChangeType
|| __TEXT.__text _NSStringFromHKAtrialFibrillationDetectionSupportedState
|| __TEXT.__text _NSStringFromHKElectrocardiogramSupportedState
|| __TEXT.__text _NSStringFromHKFailableBooleanResult
|| __TEXT.__text _NSStringFromHKNotificationDomain
|| __TEXT.__text _NSStringFromHKWorkoutCondenserReason
|| __TEXT.__text _NSStringFromPrivateElectrocardiogramClassification
|| __TEXT.__text __HKActivityCacheDateComponentsFromCacheIndex
|| __TEXT.__text __HKActivityCacheDateComponentsFromDate
|| __TEXT.__text __HKAddFilterClass
|| __TEXT.__text __HKAggdFullTimerKeyWithTimerKey
|| __TEXT.__text __HKAllFilterClasses
|| __TEXT.__text __HKAllQuantityTypes
|| __TEXT.__text __HKBloodGlucoseMillimolesPerLiterUnit
|| __TEXT.__text __HKCacheIndexFromDate
|| __TEXT.__text __HKCacheIndexFromDateComponents
|| __TEXT.__text __HKCalculateWorkoutDuration
|| __TEXT.__text __HKCloudSyncObserverStatusToString
|| __TEXT.__text __HKCreateActivityForCHRAPIAppSettings
|| __TEXT.__text __HKCreateActivityForSampleType
|| __TEXT.__text __HKCreateAuthorizationPresentationController
|| __TEXT.__text __HKCreateDocumentPickerPresentationController
|| __TEXT.__text __HKCreateURLForSampleType
|| __TEXT.__text __HKCurrentTaskIsAppExtension
|| __TEXT.__text __HKDataTypeCodeIsDeprecated
|| __TEXT.__text __HKEndDateForSnapshotIndex
|| __TEXT.__text __HKEnumerateActiveWorkoutIntervals
|| __TEXT.__text __HKExtensionPropertiesForCurrentTask
|| __TEXT.__text __HKFirstDayOfWeekForLocale
|| __TEXT.__text __HKGenerateDefaultUnitForQuantityType
|| __TEXT.__text __HKInitializeLogging
|| __TEXT.__text __HKLocaleDependentQuantityTypes
|| __TEXT.__text __HKLogDroppedError
|| __TEXT.__text __HKLogDroppedErrorWithReason
|| __TEXT.__text __HKLogPersistedSignposts
|| __TEXT.__text __HKLogSignpostIDGenerate
|| __TEXT.__text __HKLogSignpostIDWithPointer
|| __TEXT.__text __HKLoggingActionCompletion
|| __TEXT.__text __HKLoggingObjectCompletion
|| __TEXT.__text __HKMetadataKeyIsPrivate
|| __TEXT.__text __HKMostRecentActivitySnapshotInSnapshots
|| __TEXT.__text __HKObjectFilterClasses
|| __TEXT.__text __HKPausedIntervalsWithWorkoutEvents
|| __TEXT.__text __HKPredicateMatchingPredicates
|| __TEXT.__text __HKPrivateElectrocardiogramSymptomsGetList
|| __TEXT.__text __HKSampleFilterClasses
|| __TEXT.__text __HKSampleTypeFromURL
|| __TEXT.__text __HKStartDateForSnapshotIndex
|| __TEXT.__text __HKStringForFitnessMachineConnectionState
|| __TEXT.__text __HKStringForFitnessMachineState
|| __TEXT.__text __HKStringForFitnessMachineType
|| __TEXT.__text __HKStringForHealthServiceStatus
|| __TEXT.__text __HKStringForWorkoutMetric
|| __TEXT.__text __HKStringRepresentationsForWorkoutMetrics
|| __TEXT.__text __HKSwimmingStrokeStyleName
|| __TEXT.__text __HKTypeIdentifierToTypeCode
|| __TEXT.__text __HKValidDataTypeCode
|| __TEXT.__text __HKValidSourceOptions
|| __TEXT.__text __HKWeatherTemperatureUnit
|| __TEXT.__text __HKWorkoutActivityNameForActivityType
|| __TEXT.__text __HKWorkoutActivityTypeIsDeprecated
|| __TEXT.__text __HKWorkoutActivityTypeIsRouteable
|| __TEXT.__text __HKWorkoutActivityTypeIsValid
|| __TEXT.__text __HKWorkoutCanonicalDistanceUnit
|| __TEXT.__text __HKWorkoutCanonicalEnergyBurnedUnit
|| __TEXT.__text __HKWorkoutCanonicalFlightsClimbedUnit
|| __TEXT.__text __HKWorkoutCanonicalSwimmingStrokeCountUnit
|| __TEXT.__text __HKWorkoutCanonicalUnitForGoalType
|| __TEXT.__text __HKWorkoutDistanceTypeForActivityType
|| __TEXT.__text __HKWorkoutEventTypeIsValid
|| __TEXT.__text __HKWorkoutEventTypeName
|| __TEXT.__text __HKWorkoutFlooredValueForQuantity
|| __TEXT.__text __HKWorkoutGoalTypeAcceptsQuantity
|| __TEXT.__text __HKWorkoutGoalTypeIsValid
|| __TEXT.__text __HKWorkoutGoalTypeIsValidForGoal
|| __TEXT.__text __HKWorkoutLapLengthIsValid
|| __TEXT.__text __HKWorkoutSessionLocationTypeName
|| __TEXT.__text __HKWorkoutSessionServerStateToString
|| __TEXT.__text __HKWorkoutSessionStateName
|| __TEXT.__text __HKWorkoutSwimmingLocationTypeIsValid
|| __TEXT.__text __HKWorkoutSwimmingLocationTypeName
|| __TEXT.__text __HKWorkoutValidGoalQuantity
|| __TEXT.__text __NSStringFromHeartbeatSequenceContext
|| __TEXT.__text __NSStringFromPrivateHeartRateContext
|| __TEXT.__text __allHKWorkoutMetrics
|| __TEXT.__text _hk_unfair_lock_perform
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientPushValueForDistributionKey
__ AggregateDictionary: _ADClientSetValueForScalarKey
__ AggregateDictionary: _ADMonotonicTimeGetCurrent
__ AggregateDictionary: _ADPushTimeIntervalForDistributionKeySinceStartTime
__ AppSupport: _CPCopyBundleIdentifierAndTeamFromApplicationIdentifier
__ AppSupport: _OBJC_CLASS_$_RadiosPreferences
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFDateCreate
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFWriteStreamSetDispatchQueue
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSCalendarIdentifierISO8601
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleTemperatureUnit
__ CoreFoundation: _NSLocaleTemperatureUnitFahrenheit
__ CoreFoundation: _NSLocaleUsesMetricSystem
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleNameKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreLocation: _CLLocationCoordinate2DMake
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ CoreServices: _OBJC_CLASS_$_NSUserActivity
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSCreateMapTable
__ Foundation: _NSEndMapTableEnumeration
__ Foundation: _NSEnumerateMapTable
__ Foundation: _NSFileProtectionCompleteUnlessOpen
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileSize
__ Foundation: _NSIntegerMapValueCallBacks
__ Foundation: _NSInvalidArchiveOperationException
__ Foundation: _NSInvalidUnarchiveOperationException
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSMapInsert
__ Foundation: _NSMapMember
__ Foundation: _NSNextMapEnumeratorPair
__ Foundation: _NSObjectMapKeyCallBacks
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromProtocol
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUnionRange
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSDimension
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLengthFormatter
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMassFormatter
__ Foundation: _OBJC_CLASS_$_NSMeasurement
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUnit
__ Foundation: _OBJC_CLASS_$_NSUnitAcceleration
__ Foundation: _OBJC_CLASS_$_NSUnitArea
__ Foundation: _OBJC_CLASS_$_NSUnitConcentrationMass
__ Foundation: _OBJC_CLASS_$_NSUnitConverterLinear
__ Foundation: _OBJC_CLASS_$_NSUnitDispersion
__ Foundation: _OBJC_CLASS_$_NSUnitDuration
__ Foundation: _OBJC_CLASS_$_NSUnitElectricResistance
__ Foundation: _OBJC_CLASS_$_NSUnitEnergy
__ Foundation: _OBJC_CLASS_$_NSUnitFrequency
__ Foundation: _OBJC_CLASS_$_NSUnitLength
__ Foundation: _OBJC_CLASS_$_NSUnitMass
__ Foundation: _OBJC_CLASS_$_NSUnitPower
__ Foundation: _OBJC_CLASS_$_NSUnitPressure
__ Foundation: _OBJC_CLASS_$_NSUnitSpeed
__ Foundation: _OBJC_CLASS_$_NSUnitTemperature
__ Foundation: _OBJC_CLASS_$_NSUnitVolume
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXMLParser
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ GraphicsServices: _GSSystemRootDirectory
__ ManagedConfiguration: _MCFeatureHealthAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileAsset: _OBJC_CLASS_$_MAAsset
__ MobileAsset: _OBJC_CLASS_$_MAAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MADownloadOptions
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteFloatField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBHashBytes
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: __ZN2PB13TextFormatter11beginObjectEPKc
__ ProtocolBuffer: __ZN2PB13TextFormatter6formatEPKcd
__ ProtocolBuffer: __ZN2PB13TextFormatter6formatEPKcf
__ ProtocolBuffer: __ZN2PB13TextFormatter6formatEPKci
__ ProtocolBuffer: __ZN2PB13TextFormatter9endObjectEv
__ ProtocolBuffer: __ZN2PB4BaseD2Ev
__ ProtocolBuffer: __ZN2PB6Reader10recallMarkERKNS_10ReaderMarkE
__ ProtocolBuffer: __ZN2PB6Reader4skipEjhi
__ ProtocolBuffer: __ZN2PB6Reader9placeMarkERNS_10ReaderMarkE
__ ProtocolBuffer: __ZN2PB6ReaderC1EPKhm
__ ProtocolBuffer: __ZN2PB6Writer11writeVarIntEij
__ ProtocolBuffer: __ZN2PB6Writer15writeSubmessageERKNS_4BaseEj
__ ProtocolBuffer: __ZN2PB6Writer5writeEdj
__ ProtocolBuffer: __ZN2PB6Writer5writeEfj
__ ProtocolBuffer: __ZN2PB6WriterC1Ev
__ ProtocolBuffer: __ZN2PB6WriterD1Ev
__ ProtocolBuffer: __ZTIN2PB4BaseE
__ Security: _SecCertificateCopyData
__ Security: _SecCertificateCopyKey
__ Security: _SecCertificateCreateWithData
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecKeyEncrypt
__ Security: _SecKeyGetBlockSize
__ Security: _SecRandomCopyBytes
__ Security: _SecTaskCopySigningIdentifier
__ Security: _SecTaskCopyValuesForEntitlements
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTaskCreateWithAuditToken
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleWhenUnlocked
__ Security: _kSecAttrAccount
__ Security: _kSecAttrIsInvisible
__ Security: _kSecAttrModificationDate
__ Security: _kSecAttrProtocol
__ Security: _kSecAttrProtocolHTTPS
__ Security: _kSecAttrSynchronizable
__ Security: _kSecClass
__ Security: _kSecClassInternetPassword
__ Security: _kSecRandomDefault
__ Security: _kSecReturnData
__ Security: _kSecValueData
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _kMGQDiskUsageAmountDataAvailable
__ libMobileGestalt.dylib: _kMGQDiskUsageTotalDiskCapacity
__ libSystem.B.dylib: _CCCryptorCreate
__ libSystem.B.dylib: _CCCryptorFinal
__ libSystem.B.dylib: _CCCryptorRelease
__ libSystem.B.dylib: _CCCryptorUpdate
__ libSystem.B.dylib: _CCHmacFinal
__ libSystem.B.dylib: _CCHmacInit
__ libSystem.B.dylib: _CCHmacUpdate
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _CC_SHA224
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _CC_SHA256_Final
__ libSystem.B.dylib: _CC_SHA256_Init
__ libSystem.B.dylib: _CC_SHA256_Update
__ libSystem.B.dylib: _CC_SHA384
__ libSystem.B.dylib: _CC_SHA512
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___vsnprintf_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _atoi
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_overcommit
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dup
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _launch_copy_extension_properties
__ libSystem.B.dylib: _launch_copy_extension_properties_for_pid
__ libSystem.B.dylib: _launch_extension_property_path
__ libSystem.B.dylib: _llround
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _lround
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _uuid_compare
__ libSystem.B.dylib: _vm_page_size
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: dyld_stub_binder
__ libarchive.2.dylib: _archive_entry_filetype
__ libarchive.2.dylib: _archive_entry_free
__ libarchive.2.dylib: _archive_entry_new
__ libarchive.2.dylib: _archive_entry_pathname
__ libarchive.2.dylib: _archive_entry_set_atime
__ libarchive.2.dylib: _archive_entry_set_birthtime
__ libarchive.2.dylib: _archive_entry_set_ctime
__ libarchive.2.dylib: _archive_entry_set_filetype
__ libarchive.2.dylib: _archive_entry_set_mtime
__ libarchive.2.dylib: _archive_entry_set_pathname
__ libarchive.2.dylib: _archive_entry_set_perm
__ libarchive.2.dylib: _archive_entry_set_size
__ libarchive.2.dylib: _archive_entry_size
__ libarchive.2.dylib: _archive_entry_size_is_set
__ libarchive.2.dylib: _archive_error_string
__ libarchive.2.dylib: _archive_read_data
__ libarchive.2.dylib: _archive_read_data_skip
__ libarchive.2.dylib: _archive_read_free
__ libarchive.2.dylib: _archive_read_new
__ libarchive.2.dylib: _archive_read_next_header
__ libarchive.2.dylib: _archive_read_open_filename
__ libarchive.2.dylib: _archive_read_open_memory
__ libarchive.2.dylib: _archive_read_support_filter_all
__ libarchive.2.dylib: _archive_read_support_format_zip
__ libarchive.2.dylib: _archive_write_close
__ libarchive.2.dylib: _archive_write_data
__ libarchive.2.dylib: _archive_write_free
__ libarchive.2.dylib: _archive_write_header
__ libarchive.2.dylib: _archive_write_new
__ libarchive.2.dylib: _archive_write_open_fd
__ libarchive.2.dylib: _archive_write_open_filename
__ libarchive.2.dylib: _archive_write_set_format_zip
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__123__match_any_but_newlineIcE6__execERNS_7__stateIcEE
__ libc++.1.dylib: __ZNKSt3__16locale4nameEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt9exception4whatEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
__ libc++.1.dylib: __ZNSt3__111regex_errorD1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSEc
__ libc++.1.dylib: __ZNSt3__115__get_classnameEPKcb
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__120__get_collation_nameEPKc
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16localeC1ERKS0_
__ libc++.1.dylib: __ZNSt3__16localeC1Ev
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__17collateIcE2idE
__ libc++.1.dylib: __ZNSt9exceptionD2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__111regex_errorE
__ libc++.1.dylib: __ZTINSt3__119__shared_weak_countE
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTISt9exception
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libcompression.dylib: _compression_stream_destroy
__ libcompression.dylib: _compression_stream_init
__ libcompression.dylib: _compression_stream_process
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libxml2.2.dylib: _xmlDocDumpFormatMemory
__ libxml2.2.dylib: _xmlFree
__ libxml2.2.dylib: _xmlFreeDoc
__ libxml2.2.dylib: _xmlReadMemory
__ libxml2.2.dylib: _xmlSchemaFree
__ libxml2.2.dylib: _xmlSchemaFreeParserCtxt
__ libxml2.2.dylib: _xmlSchemaFreeValidCtxt
__ libxml2.2.dylib: _xmlSchemaNewMemParserCtxt
__ libxml2.2.dylib: _xmlSchemaNewParserCtxt
__ libxml2.2.dylib: _xmlSchemaNewValidCtxt
__ libxml2.2.dylib: _xmlSchemaParse
__ libxml2.2.dylib: _xmlSchemaSetValidErrors
__ libxml2.2.dylib: _xmlSchemaValidateDoc
__ libxml2.2.dylib: _xmlSetGenericErrorFunc
__ libxslt.1.dylib: _xsltApplyStylesheet
__ libxslt.1.dylib: _xsltFreeStylesheet
__ libxslt.1.dylib: _xsltParseStylesheetDoc
HKConceptIdentifier : NSObject /usr/lib/libc++.1.dylib <NSObject, NSCopying, NSSecureCoding>
 @property  long long rawIdentifier
 @property  NSNumber *numberRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKConceptIdentifier supportsSecureCoding]
  +[HKConceptIdentifier identifierWithRawIdentifier:]
  +[HKConceptIdentifier identifierWithNumber:]
  +[HKConceptIdentifier undefinedIdentifier]

  // instance methods
  -[HKConceptIdentifier init]
  -[HKConceptIdentifier isEqual:]
  -[HKConceptIdentifier copyWithZone:]
  -[HKConceptIdentifier encodeWithCoder:]
  -[HKConceptIdentifier initWithCoder:]
  -[HKConceptIdentifier initWithRawIdentifier:]
  -[HKConceptIdentifier rawIdentifier]
  -[HKConceptIdentifier numberRepresentation]
  -[HKConceptIdentifier setRawIdentifier:]


_HKDeepBreathingSessionConfiguration : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSUUID *UUID
 @property  NSDate *startDate
 @property  double sessionDuration
 @property  double inhaleExhaleRatio
 @property  double respirationsPerMinute

  // class methods
  +[_HKDeepBreathingSessionConfiguration supportsSecureCoding]
  +[_HKDeepBreathingSessionConfiguration sessionConfigurationWithStartDate:sessionDuration:inhaleExhaleRatio:respirationsPerMinute:]

  // instance methods
  -[_HKDeepBreathingSessionConfiguration encodeWithCoder:]
  -[_HKDeepBreathingSessionConfiguration initWithCoder:]
  -[_HKDeepBreathingSessionConfiguration .cxx_destruct]
  -[_HKDeepBreathingSessionConfiguration startDate]
  -[_HKDeepBreathingSessionConfiguration UUID]
  -[_HKDeepBreathingSessionConfiguration setStartDate:]
  -[_HKDeepBreathingSessionConfiguration _initWithStartDate:sessionDuration:inhaleExhaleRatio:respirationsPerMinute:]
  -[_HKDeepBreathingSessionConfiguration sessionDuration]
  -[_HKDeepBreathingSessionConfiguration setSessionDuration:]
  -[_HKDeepBreathingSessionConfiguration inhaleExhaleRatio]
  -[_HKDeepBreathingSessionConfiguration setInhaleExhaleRatio:]
  -[_HKDeepBreathingSessionConfiguration respirationsPerMinute]
  -[_HKDeepBreathingSessionConfiguration setRespirationsPerMinute:]


HKWorkoutBuilder : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable, HKWorkoutBuilderClientInterface, HKStateMachineDelegate>
 @property  NSMutableDictionary *seriesBuilders
 @property  NSMutableDictionary *statisticsByType
 @property  NSObject<OS_dispatch_queue> *resourceQueue
 @property  HKTaskServerProxyProvider *proxyProvider
 @property  HKHealthStore *healthStore
 @property  NSUUID *identifier
 @property  HKWorkoutBuilderConfiguration *configuration
 @property  BOOL isCurrentlyRunning
 @property  HKDevice *device
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  HKWorkoutConfiguration *workoutConfiguration
 @property  NSDictionary *metadata
 @property  NSArray *workoutEvents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKWorkoutBuilder serverInterface]
  +[HKWorkoutBuilder clientInterface]
  +[HKWorkoutBuilder _constructionStateMachineForBuilderConfiguration:builderIdentifier:]
  +[HKWorkoutBuilder _elapsedTimeAtDate:startDate:endDate:sortedEvents:]
  +[HKWorkoutBuilder _collectionStateAtDate:startDate:endDate:sortedEvents:]

  // instance methods
  -[HKWorkoutBuilder init]
  -[HKWorkoutBuilder .cxx_destruct]
  -[HKWorkoutBuilder identifier]
  -[HKWorkoutBuilder startDate]
  -[HKWorkoutBuilder endDate]
  -[HKWorkoutBuilder exportedInterface]
  -[HKWorkoutBuilder device]
  -[HKWorkoutBuilder metadata]
  -[HKWorkoutBuilder setConfiguration:]
  -[HKWorkoutBuilder configuration]
  -[HKWorkoutBuilder connectionInvalidated]
  -[HKWorkoutBuilder healthStore]
  -[HKWorkoutBuilder _currentSnapshot]
  -[HKWorkoutBuilder connectionInterrupted]
  -[HKWorkoutBuilder remoteInterface]
  -[HKWorkoutBuilder initWithHealthStore:builderConfiguration:builderIdentifier:]
  -[HKWorkoutBuilder workoutConfiguration]
  -[HKWorkoutBuilder _successCompletionBlockOnClientQueue:]
  -[HKWorkoutBuilder _resourceQueue_beginCollectionWithStartDate:completion:]
  -[HKWorkoutBuilder _resourceQueue_addSamples:completion:]
  -[HKWorkoutBuilder _resourceQueue_addWorkoutEvents:completion:]
  -[HKWorkoutBuilder _resourceQueue_addMetadata:completion:]
  -[HKWorkoutBuilder _resourceQueue_endCollectionWithEndDate:completion:]
  -[HKWorkoutBuilder _resourceQueue_finishWorkoutWithCompletion:]
  -[HKWorkoutBuilder resourceQueue]
  -[HKWorkoutBuilder _resourceQueue_seriesBuilderWithIdentifier:type:]
  -[HKWorkoutBuilder _resourceQueue_startDateForSnapshot]
  -[HKWorkoutBuilder _resourceQueue_endDateForSnapshotWithStartDate:]
  -[HKWorkoutBuilder _resourceQueue_eventsBetweenStartDate:endDate:]
  -[HKWorkoutBuilder goalType]
  -[HKWorkoutBuilder goal]
  -[HKWorkoutBuilder _resourceQueue_updateDevice:]
  -[HKWorkoutBuilder _resourceQueue_setStatisticsMergeStrategy:forType:]
  -[HKWorkoutBuilder _resourceQueue_setStatisticsComputationMethod:forType:]
  -[HKWorkoutBuilder _resourceQueue_freezeSeriesBuilders]
  -[HKWorkoutBuilder _pushCurrentTargetState]
  -[HKWorkoutBuilder _resourceQueue_updateElapsedTimeCache]
  -[HKWorkoutBuilder _validateObjects:forClass:error:]
  -[HKWorkoutBuilder _resourceQueue_markRecoveryRequired]
  -[HKWorkoutBuilder _resourceQueue_updateEvents:]
  -[HKWorkoutBuilder clientRemote_didUpdateStatistics:]
  -[HKWorkoutBuilder clientRemote_didUpdateMetadata:]
  -[HKWorkoutBuilder clientRemote_didUpdateEvents:]
  -[HKWorkoutBuilder clientRemote_didChangeElapsedTimeBasisWithStartDate:endDate:]
  -[HKWorkoutBuilder clientRemote_didRecoverSeriesBuilders:]
  -[HKWorkoutBuilder clientRemote_didFinishRecovery]
  -[HKWorkoutBuilder clientRemote_synchronizeWithCompletion:]
  -[HKWorkoutBuilder clientRemote_stateDidChange:startDate:endDate:]
  -[HKWorkoutBuilder clientRemote_finishedWorkout:]
  -[HKWorkoutBuilder clientRemote_didFailWithError:]
  -[HKWorkoutBuilder _restoreRecoveredSeriesBuildersWithCompletion:]
  -[HKWorkoutBuilder stateMachine:didTransition:fromState:toState:date:error:]
  -[HKWorkoutBuilder stateMachine:didEnterState:date:error:]
  -[HKWorkoutBuilder initWithHealthStore:configuration:device:]
  -[HKWorkoutBuilder initWithHealthStore:configuration:goalType:goal:device:]
  -[HKWorkoutBuilder beginCollectionWithStartDate:completion:]
  -[HKWorkoutBuilder _currentElapsedTime]
  -[HKWorkoutBuilder elapsedTimeAtDate:]
  -[HKWorkoutBuilder isCurrentlyRunning]
  -[HKWorkoutBuilder addSamples:completion:]
  -[HKWorkoutBuilder addWorkoutEvents:completion:]
  -[HKWorkoutBuilder workoutEvents]
  -[HKWorkoutBuilder addMetadata:completion:]
  -[HKWorkoutBuilder endCollectionWithEndDate:completion:]
  -[HKWorkoutBuilder finishWorkoutWithCompletion:]
  -[HKWorkoutBuilder discardWorkout]
  -[HKWorkoutBuilder statisticsForType:]
  -[HKWorkoutBuilder seriesBuilderForType:]
  -[HKWorkoutBuilder _setDevice:]
  -[HKWorkoutBuilder _setStatisticsMergeStrategy:forType:]
  -[HKWorkoutBuilder _setStatisticsComputationMethod:forType:]
  -[HKWorkoutBuilder _recoverWithCompletion:]
  -[HKWorkoutBuilder unitTest_setServerStateChangeHandler:]
  -[HKWorkoutBuilder unitTest_setRecoveryFinishedHandler:]
  -[HKWorkoutBuilder unitTest_setFailureHandler:]
  -[HKWorkoutBuilder seriesBuilders]
  -[HKWorkoutBuilder setSeriesBuilders:]
  -[HKWorkoutBuilder statisticsByType]
  -[HKWorkoutBuilder setStatisticsByType:]
  -[HKWorkoutBuilder proxyProvider]


HKWorkoutBuilderConfiguration : HKTaskConfiguration
 @property  HKDevice *device
 @property  HKWorkoutConfiguration *workoutConfiguration
 @property  unsigned long goalType
 @property  HKQuantity *goal
 @property  NSUUID *associatedSessionUUID
 @property  BOOL shouldCollectWorkoutEvents
 @property  BOOL requiresRecovery

  // class methods
  +[HKWorkoutBuilderConfiguration supportsSecureCoding]

  // instance methods
  -[HKWorkoutBuilderConfiguration isEqual:]
  -[HKWorkoutBuilderConfiguration copyWithZone:]
  -[HKWorkoutBuilderConfiguration encodeWithCoder:]
  -[HKWorkoutBuilderConfiguration initWithCoder:]
  -[HKWorkoutBuilderConfiguration .cxx_destruct]
  -[HKWorkoutBuilderConfiguration device]
  -[HKWorkoutBuilderConfiguration setDevice:]
  -[HKWorkoutBuilderConfiguration associatedSessionUUID]
  -[HKWorkoutBuilderConfiguration setWorkoutConfiguration:]
  -[HKWorkoutBuilderConfiguration setGoalType:]
  -[HKWorkoutBuilderConfiguration setGoal:]
  -[HKWorkoutBuilderConfiguration workoutConfiguration]
  -[HKWorkoutBuilderConfiguration goalType]
  -[HKWorkoutBuilderConfiguration goal]
  -[HKWorkoutBuilderConfiguration requiresRecovery]
  -[HKWorkoutBuilderConfiguration setRequiresRecovery:]
  -[HKWorkoutBuilderConfiguration setAssociatedSessionUUID:]
  -[HKWorkoutBuilderConfiguration setShouldCollectWorkoutEvents:]
  -[HKWorkoutBuilderConfiguration shouldCollectWorkoutEvents]


HKCodedValue : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSArray *codings
 @property  HKInspectableValue *value
 @property  NSArray *referenceRanges

  // class methods
  +[HKCodedValue supportsSecureCoding]
  +[HKCodedValue codedValueWithCodings:value:referenceRanges:]

  // instance methods
  -[HKCodedValue init]
  -[HKCodedValue isEqual:]
  -[HKCodedValue copyWithZone:]
  -[HKCodedValue encodeWithCoder:]
  -[HKCodedValue initWithCoder:]
  -[HKCodedValue .cxx_destruct]
  -[HKCodedValue value]
  -[HKCodedValue initWithCodings:value:referenceRanges:]
  -[HKCodedValue chartableCodedQuantityWithError:]
  -[HKCodedValue codings]
  -[HKCodedValue referenceRanges]
  -[HKCodedValue chartableCodedQuantitySetWithDate:error:]


HKClinicalGateway : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding, HKClinicalBrandable>
 @property  NSString *externalID
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *displayableDescription
 @property  NSString *phoneNumber
 @property  NSURL *informationURL
 @property  NSURL *passwordResetURL
 @property  NSURL *patientPortalURL
 @property  NSURL *signupURL
 @property  long long status
 @property  long long type
 @property  HKClinicalBrand *brand
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKClinicalGateway supportsSecureCoding]

  // instance methods
  -[HKClinicalGateway init]
  -[HKClinicalGateway isEqual:]
  -[HKClinicalGateway copyWithZone:]
  -[HKClinicalGateway type]
  -[HKClinicalGateway encodeWithCoder:]
  -[HKClinicalGateway initWithCoder:]
  -[HKClinicalGateway .cxx_destruct]
  -[HKClinicalGateway status]
  -[HKClinicalGateway title]
  -[HKClinicalGateway phoneNumber]
  -[HKClinicalGateway subtitle]
  -[HKClinicalGateway externalID]
  -[HKClinicalGateway displayableDescription]
  -[HKClinicalGateway brand]
  -[HKClinicalGateway informationURL]
  -[HKClinicalGateway passwordResetURL]
  -[HKClinicalGateway patientPortalURL]
  -[HKClinicalGateway signupURL]
  -[HKClinicalGateway initWithExternalID:title:subtitle:displayableDescription:phoneNumber:informationURL:passwordResetURL:patientPortalURL:signupURL:status:type:brand:]


HKMedicationDispenseRecord : HKMedicalRecord <HKConceptIndexable, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *UUID
 @property  NSLocale *locale
 @property  HKMedicationDispenseRecordType *medicationDispenseRecordType
 @property  HKCodedQuantity *daysSupplyQuantity
 @property  NSArray *dosages
 @property  HKMedicalDate *earliestDosageDate
 @property  HKMedicalDate *handOverDate
 @property  HKConcept *medication
 @property  NSArray *medicationCodings
 @property  HKMedicalDate *preparationDate
 @property  HKCodedQuantity *quantityDispensed
 @property  HKConcept *status
 @property  HKMedicalCoding *statusCoding

  // class methods
  +[HKMedicationDispenseRecord supportsSecureCoding]
  +[HKMedicationDispenseRecord _newMedicationDispenseRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:medicationCodings:quantityDispensed:preparationDate:handOverDate:dosages:earliestDosageDate:statusCoding:daysSupplyQuantity:config:]
  +[HKMedicationDispenseRecord medicationDispenseRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:medicationCodings:quantityDispensed:preparationDate:handOverDate:dosages:earliestDosageDate:statusCoding:daysSupplyQuantity:]
  +[HKMedicationDispenseRecord supportsEquivalence]
  +[HKMedicationDispenseRecord _isConcreteObjectClass]
  +[HKMedicationDispenseRecord indexableConceptKeyPaths]
  +[HKMedicationDispenseRecord cachedConceptRelationshipKeyPaths]
  +[HKMedicationDispenseRecord medicationDispenseRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:medicationCodings:quantityDispensed:preparationDate:handOverDate:dosages:earliestDosageDate:statusCoding:daysSupplyQuantity:]
  +[HKMedicationDispenseRecord defaultDisplayString]
  +[HKMedicationDispenseRecord medicationCodingsPreferredSystems]
  +[HKMedicationDispenseRecord statusCodingPreferredSystems]

  // instance methods
  -[HKMedicationDispenseRecord init]
  -[HKMedicationDispenseRecord copyWithZone:]
  -[HKMedicationDispenseRecord encodeWithCoder:]
  -[HKMedicationDispenseRecord initWithCoder:]
  -[HKMedicationDispenseRecord .cxx_destruct]
  -[HKMedicationDispenseRecord status]
  -[HKMedicationDispenseRecord _setStatus:]
  -[HKMedicationDispenseRecord medicationCodings]
  -[HKMedicationDispenseRecord quantityDispensed]
  -[HKMedicationDispenseRecord preparationDate]
  -[HKMedicationDispenseRecord handOverDate]
  -[HKMedicationDispenseRecord dosages]
  -[HKMedicationDispenseRecord earliestDosageDate]
  -[HKMedicationDispenseRecord statusCoding]
  -[HKMedicationDispenseRecord daysSupplyQuantity]
  -[HKMedicationDispenseRecord medication]
  -[HKMedicationDispenseRecord isEquivalent:]
  -[HKMedicationDispenseRecord _validateConfigurationWithOptions:]
  -[HKMedicationDispenseRecord medicationCodingsCollection]
  -[HKMedicationDispenseRecord medicationCodingsContext]
  -[HKMedicationDispenseRecord statusCodingCollection]
  -[HKMedicationDispenseRecord statusCodingContext]
  -[HKMedicationDispenseRecord _setMedicationCodings:]
  -[HKMedicationDispenseRecord _setQuantityDispensed:]
  -[HKMedicationDispenseRecord _setPreparationDate:]
  -[HKMedicationDispenseRecord _setHandOverDate:]
  -[HKMedicationDispenseRecord _setDosages:]
  -[HKMedicationDispenseRecord _setEarliestDosageDate:]
  -[HKMedicationDispenseRecord _setStatusCoding:]
  -[HKMedicationDispenseRecord _setDaysSupplyQuantity:]
  -[HKMedicationDispenseRecord _setMedication:]
  -[HKMedicationDispenseRecord medicationDispenseRecordType]
  -[HKMedicationDispenseRecord codingsForKeyPath:error:]
  -[HKMedicationDispenseRecord applyConcepts:forKeyPath:error:]
  -[HKMedicationDispenseRecord medicalRecordCodings]
  -[HKMedicationDispenseRecord indexKeywords]
  -[HKMedicationDispenseRecord medicalRecordPreferredSystems]
  -[HKMedicationDispenseRecord statusCodingTasks]
  -[HKMedicationDispenseRecord medicationCodingsTasks]


HKFeatureAvailabilityWatchProductTypeHasPrefixRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  NSString *productType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityWatchProductTypeHasPrefixRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityWatchProductTypeHasPrefixRule .cxx_destruct]
  -[HKFeatureAvailabilityWatchProductTypeHasPrefixRule productType]
  -[HKFeatureAvailabilityWatchProductTypeHasPrefixRule setProductType:]
  -[HKFeatureAvailabilityWatchProductTypeHasPrefixRule evaluate]
  -[HKFeatureAvailabilityWatchProductTypeHasPrefixRule processUserInfo:]


HKDeletedObject : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDictionary *metadata
 @property  long long externalSyncObjectCode
 @property  NSUUID *UUID

  // class methods
  +[HKDeletedObject supportsSecureCoding]
  +[HKDeletedObject _deletedObjectWithUUID:metadata:]
  +[HKDeletedObject _metadataWithSyncIdentifier:syncVersion:]

  // instance methods
  -[HKDeletedObject isEqual:]
  -[HKDeletedObject encodeWithCoder:]
  -[HKDeletedObject initWithCoder:]
  -[HKDeletedObject .cxx_destruct]
  -[HKDeletedObject _init]
  -[HKDeletedObject UUID]
  -[HKDeletedObject setMetadata:]
  -[HKDeletedObject metadata]
  -[HKDeletedObject externalSyncObjectCode]
  -[HKDeletedObject setExternalSyncObjectCode:]


_HKHeartSettingsUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_HKHeartSettingsUtilities isHeartRateEnabled]
  +[_HKHeartSettingsUtilities isWristDetectionEnabled]
  +[_HKHeartSettingsUtilities isTachycardiaDetectionEnabled]
  +[_HKHeartSettingsUtilities tachycardiaThresholdHeartRate]
  +[_HKHeartSettingsUtilities isBradycardiaDetectionSupportedOnActiveWatch]
  +[_HKHeartSettingsUtilities isBradycardiaDetectionSupportedOnAllWatches]
  +[_HKHeartSettingsUtilities isBradycardiaDetectionEnabled]
  +[_HKHeartSettingsUtilities bradycardiaThresholdHeartRate]
  +[_HKHeartSettingsUtilities isBackgroundHeartRateEnabled]
  +[_HKHeartSettingsUtilities heartRateSettingsURL]
  +[_HKHeartSettingsUtilities deleteAtrialFibrillationDetectionLastAnalyzedSampleDate]


HKMedicationOrder : HKMedicalRecord <HKConceptIndexable, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *UUID
 @property  NSLocale *locale
 @property  HKMedicationOrderType *medicationOrderType
 @property  NSArray *dosages
 @property  HKMedicalDate *earliestDosageDate
 @property  HKMedicalDate *endedDate
 @property  HKConcept *medication
 @property  NSArray *medicationCodings
 @property  long long numberOfFills
 @property  NSString *prescriber
 @property  HKConcept *reason
 @property  NSArray *reasonCodings
 @property  HKConcept *reasonEnded
 @property  NSArray *reasonEndedCodings
 @property  HKConcept *status
 @property  HKMedicalCoding *statusCoding
 @property  HKMedicalDate *writtenDate

  // class methods
  +[HKMedicationOrder supportsSecureCoding]
  +[HKMedicationOrder supportsEquivalence]
  +[HKMedicationOrder _isConcreteObjectClass]
  +[HKMedicationOrder _newMedicationOrderWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:medicationCodings:prescriber:numberOfFills:dosages:earliestDosageDate:writtenDate:endedDate:statusCoding:reasonCodings:reasonEndedCodings:config:]
  +[HKMedicationOrder medicationOrderWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:medicationCodings:prescriber:numberOfFills:dosages:earliestDosageDate:writtenDate:endedDate:statusCoding:reasonCodings:reasonEndedCodings:]
  +[HKMedicationOrder indexableConceptKeyPaths]
  +[HKMedicationOrder cachedConceptRelationshipKeyPaths]
  +[HKMedicationOrder defaultDisplayString]
  +[HKMedicationOrder medicationCodingsPreferredSystems]
  +[HKMedicationOrder medicationOrderWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:medicationCodings:prescriber:numberOfFills:dosages:earliestDosageDate:writtenDate:endedDate:statusCoding:reasonCodings:reasonEndedCodings:]
  +[HKMedicationOrder statusCodingPreferredSystems]
  +[HKMedicationOrder reasonCodingsPreferredSystems]
  +[HKMedicationOrder reasonEndedCodingsPreferredSystems]

  // instance methods
  -[HKMedicationOrder init]
  -[HKMedicationOrder copyWithZone:]
  -[HKMedicationOrder encodeWithCoder:]
  -[HKMedicationOrder initWithCoder:]
  -[HKMedicationOrder reason]
  -[HKMedicationOrder .cxx_destruct]
  -[HKMedicationOrder status]
  -[HKMedicationOrder _setStatus:]
  -[HKMedicationOrder medicationCodings]
  -[HKMedicationOrder dosages]
  -[HKMedicationOrder earliestDosageDate]
  -[HKMedicationOrder statusCoding]
  -[HKMedicationOrder medication]
  -[HKMedicationOrder isEquivalent:]
  -[HKMedicationOrder _validateConfigurationWithOptions:]
  -[HKMedicationOrder medicationCodingsCollection]
  -[HKMedicationOrder medicationCodingsContext]
  -[HKMedicationOrder statusCodingCollection]
  -[HKMedicationOrder statusCodingContext]
  -[HKMedicationOrder _setMedicationCodings:]
  -[HKMedicationOrder _setDosages:]
  -[HKMedicationOrder _setEarliestDosageDate:]
  -[HKMedicationOrder _setStatusCoding:]
  -[HKMedicationOrder _setMedication:]
  -[HKMedicationOrder prescriber]
  -[HKMedicationOrder numberOfFills]
  -[HKMedicationOrder writtenDate]
  -[HKMedicationOrder endedDate]
  -[HKMedicationOrder reasonCodings]
  -[HKMedicationOrder reasonEndedCodings]
  -[HKMedicationOrder reasonEnded]
  -[HKMedicationOrder reasonCodingsCollection]
  -[HKMedicationOrder reasonCodingsContext]
  -[HKMedicationOrder reasonEndedCodingsCollection]
  -[HKMedicationOrder reasonEndedCodingsContext]
  -[HKMedicationOrder _setPrescriber:]
  -[HKMedicationOrder _setNumberOfFills:]
  -[HKMedicationOrder _setWrittenDate:]
  -[HKMedicationOrder _setEndedDate:]
  -[HKMedicationOrder _setReasonCodings:]
  -[HKMedicationOrder _setReasonEndedCodings:]
  -[HKMedicationOrder _setReason:]
  -[HKMedicationOrder _setReasonEnded:]
  -[HKMedicationOrder medicationOrderType]
  -[HKMedicationOrder codingsForKeyPath:error:]
  -[HKMedicationOrder applyConcepts:forKeyPath:error:]
  -[HKMedicationOrder medicalRecordCodings]
  -[HKMedicationOrder indexKeywords]
  -[HKMedicationOrder medicalRecordPreferredSystems]
  -[HKMedicationOrder statusCodingTasks]
  -[HKMedicationOrder medicationCodingsTasks]
  -[HKMedicationOrder reasonCodingsTasks]
  -[HKMedicationOrder reasonEndedCodingsTasks]


HKObserverSet : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long count
 @property  NSArray *allObservers

  // instance methods
  -[HKObserverSet count]
  -[HKObserverSet .cxx_destruct]
  -[HKObserverSet registerObserver:]
  -[HKObserverSet unregisterObserver:]
  -[HKObserverSet _registerObserver:queue:]
  -[HKObserverSet _notifyObserver:handler:]
  -[HKObserverSet initWithName:loggingCategory:]
  -[HKObserverSet registerObserver:queue:]
  -[HKObserverSet notifyObservers:]
  -[HKObserverSet notifyObserver:handler:]
  -[HKObserverSet allObservers]


_HKObserverRecord : NSObject /usr/lib/libc++.1.dylib
 @property  id observer
 @property  NSObject<OS_dispatch_queue> *clientQueue

  // instance methods
  -[_HKObserverRecord observer]
  -[_HKObserverRecord .cxx_destruct]
  -[_HKObserverRecord setObserver:]
  -[_HKObserverRecord clientQueue]
  -[_HKObserverRecord setClientQueue:]
  -[_HKObserverRecord initWithObserver:clientQueue:]


HKPluginLoader : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HKPluginLoader loadPrincipalClassConformingToProtocols:fromBundleAtURL:skipIfLoaded:]
  +[HKPluginLoader loadPrincipalClassesConformingToProtocols:fromBundlesInDirectoryAtURL:skipLoadedBundles:error:]


HKHealthStoreConfiguration : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *sourceBundleIdentifier
 @property  NSString *debugIdentifier
 @property  HKProfileIdentifier *profileIdentifier
 @property  unsigned int applicationSDKVersion

  // class methods
  +[HKHealthStoreConfiguration supportsSecureCoding]

  // instance methods
  -[HKHealthStoreConfiguration isEqual:]
  -[HKHealthStoreConfiguration copyWithZone:]
  -[HKHealthStoreConfiguration encodeWithCoder:]
  -[HKHealthStoreConfiguration initWithCoder:]
  -[HKHealthStoreConfiguration .cxx_destruct]
  -[HKHealthStoreConfiguration debugIdentifier]
  -[HKHealthStoreConfiguration profileIdentifier]
  -[HKHealthStoreConfiguration sourceBundleIdentifier]
  -[HKHealthStoreConfiguration initWithSourceBundleIdentifier:debugIdentifier:profileIdentifier:applicationSDKVersion:]
  -[HKHealthStoreConfiguration applicationSDKVersion]


HKMedicalCodingSystem : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *identifier
 @property  NSString *name
 @property  NSString *OID
 @property  unsigned long type
 @property  NSArray *synonyms
 @property  BOOL hasDisplayStrings

  // class methods
  +[HKMedicalCodingSystem supportsSecureCoding]
  +[HKMedicalCodingSystem textSystem]
  +[HKMedicalCodingSystem externalCodeSystems]
  +[HKMedicalCodingSystem codeSystemWithIdentifier:]
  +[HKMedicalCodingSystem systemWithSystemDefinition:]
  +[HKMedicalCodingSystem LOINCCodeSystem]
  +[HKMedicalCodingSystem SNOMEDCodeSystem]
  +[HKMedicalCodingSystem RxNormCodeSystem]
  +[HKMedicalCodingSystem UCUMSystem]
  +[HKMedicalCodingSystem CVXSystem]
  +[HKMedicalCodingSystem NDCSystem]
  +[HKMedicalCodingSystem ICD10System]
  +[HKMedicalCodingSystem ICD10USSystem]
  +[HKMedicalCodingSystem FHIRDiagnosticReportStatus]
  +[HKMedicalCodingSystem FHIRObservationStatus]
  +[HKMedicalCodingSystem FHIRMedicationAdminStatus]
  +[HKMedicalCodingSystem FHIRMedicationStatementStatus]
  +[HKMedicalCodingSystem FHIRMedicationDispenseStatus]
  +[HKMedicalCodingSystem FHIRMedicationOrderStatus]
  +[HKMedicalCodingSystem FHIRProcedureStatus]
  +[HKMedicalCodingSystem FHIRAllergyIntoleranceStatus]
  +[HKMedicalCodingSystem FHIRAllergyIntoleranceCriticality]
  +[HKMedicalCodingSystem FHIRAllergyIntoleranceSeverity]
  +[HKMedicalCodingSystem FHIRConditionClinicalStatus]
  +[HKMedicalCodingSystem FHIRConditionVerificationStatus]
  +[HKMedicalCodingSystem FHIRQuantityComparatorSystem]
  +[HKMedicalCodingSystem adHocConceptSystem]

  // instance methods
  -[HKMedicalCodingSystem isEqual:]
  -[HKMedicalCodingSystem name]
  -[HKMedicalCodingSystem copyWithZone:]
  -[HKMedicalCodingSystem type]
  -[HKMedicalCodingSystem setType:]
  -[HKMedicalCodingSystem encodeWithCoder:]
  -[HKMedicalCodingSystem initWithCoder:]
  -[HKMedicalCodingSystem .cxx_destruct]
  -[HKMedicalCodingSystem setName:]
  -[HKMedicalCodingSystem identifier]
  -[HKMedicalCodingSystem setIdentifier:]
  -[HKMedicalCodingSystem OID]
  -[HKMedicalCodingSystem setOID:]
  -[HKMedicalCodingSystem hasDisplayStrings]
  -[HKMedicalCodingSystem synonyms]
  -[HKMedicalCodingSystem setSynonyms:]
  -[HKMedicalCodingSystem initWithIdentifier:name:OID:type:synonyms:hasDisplayStrings:]
  -[HKMedicalCodingSystem initWithCustomIdentifier:]
  -[HKMedicalCodingSystem codingSystemOntologyIdentifier]
  -[HKMedicalCodingSystem setHasDisplayStrings:]


HKWorkoutRoute : HKSeriesSample
 @property  HDCodableLocationSeries *_codableWorkoutRoute

  // class methods
  +[HKWorkoutRoute _workoutRouteWithDevice:metadata:]

  // instance methods
  -[HKWorkoutRoute .cxx_destruct]
  -[HKWorkoutRoute _valueDescription]
  -[HKWorkoutRoute _validateConfigurationWithOptions:]
  -[HKWorkoutRoute _validateSample]
  -[HKWorkoutRoute _isSmoothed]
  -[HKWorkoutRoute _requiresPrivateEntitlementForQueries]
  -[HKWorkoutRoute _codableWorkoutRoute]
  -[HKWorkoutRoute _setCodableWorkoutRoute:]


HKFeatureAvailabilityActiveWatchElectrocardiogramVersionGreaterThanRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  {?=qqq} targetVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionGreaterThanRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionGreaterThanRule targetVersion]
  -[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionGreaterThanRule setTargetVersion:]
  -[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionGreaterThanRule evaluate]
  -[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionGreaterThanRule processUserInfo:]


HKCodedQuantity : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *value
 @property  NSString *rawValue
 @property  NSString *localizedValue
 @property  NSNumber *numberValue
 @property  double doubleValue
 @property  HKMedicalCoding *comparatorCoding
 @property  HKMedicalCoding *unitCoding

  // class methods
  +[HKCodedQuantity supportsSecureCoding]
  +[HKCodedQuantity _numberFormatter]
  +[HKCodedQuantity codedQuantityWithValue:comparatorCoding:unitCoding:]
  +[HKCodedQuantity codedQuantityWithValue:unitCoding:]

  // instance methods
  -[HKCodedQuantity doubleValue]
  -[HKCodedQuantity init]
  -[HKCodedQuantity isEqual:]
  -[HKCodedQuantity copyWithZone:]
  -[HKCodedQuantity encodeWithCoder:]
  -[HKCodedQuantity initWithCoder:]
  -[HKCodedQuantity .cxx_destruct]
  -[HKCodedQuantity value]
  -[HKCodedQuantity rawValue]
  -[HKCodedQuantity numberValue]
  -[HKCodedQuantity localizedValue]
  -[HKCodedQuantity initWithRawValue:comparatorCoding:unitCoding:]
  -[HKCodedQuantity comparatorCoding]
  -[HKCodedQuantity unitCoding]
  -[HKCodedQuantity quantityRepresentationWithUCUMConverter:error:]


HKCumulativeQuantitySample : HKQuantitySample
 @property  HKQuantity *sumQuantity

  // class methods
  +[HKCumulativeQuantitySample supportsSecureCoding]
  +[HKCumulativeQuantitySample _isConcreteObjectClass]

  // instance methods
  -[HKCumulativeQuantitySample sumQuantity]
  -[HKCumulativeQuantitySample _setSumQuantity:]
  -[HKCumulativeQuantitySample sum]


HKHeartRateSummaryQuery : HKQuery <HKHeartRateSummaryQueryClientInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKHeartRateSummaryQuery clientInterfaceProtocol]

  // instance methods
  -[HKHeartRateSummaryQuery .cxx_destruct]
  -[HKHeartRateSummaryQuery client_deliverSummary:queryUUID:]
  -[HKHeartRateSummaryQuery queue_validate]
  -[HKHeartRateSummaryQuery initWithUpdateHandler:]
  -[HKHeartRateSummaryQuery queue_deliverError:]
  -[HKHeartRateSummaryQuery queue_shouldDeactivateAfterInitialResults]
  -[HKHeartRateSummaryQuery queue_queryDidDeactivate:]


_HKWorkoutObserver : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable>
 @property  HKHealthStore *healthStore
 @property  HKTaskServerProxyProvider *proxyProvider
 @property  NSUUID *identifier
 @property  <_HKWorkoutObserverDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HKWorkoutObserver serverInterface]
  +[_HKWorkoutObserver clientInterface]

  // instance methods
  -[_HKWorkoutObserver dealloc]
  -[_HKWorkoutObserver delegate]
  -[_HKWorkoutObserver setDelegate:]
  -[_HKWorkoutObserver .cxx_destruct]
  -[_HKWorkoutObserver identifier]
  -[_HKWorkoutObserver exportedInterface]
  -[_HKWorkoutObserver connectionInvalidated]
  -[_HKWorkoutObserver healthStore]
  -[_HKWorkoutObserver connectionInterrupted]
  -[_HKWorkoutObserver remoteInterface]
  -[_HKWorkoutObserver proxyProvider]
  -[_HKWorkoutObserver initWithHealthStore:]
  -[_HKWorkoutObserver currentWorkoutSnapshotWithCompletion:]
  -[_HKWorkoutObserver _startTaskServerIfNeeded]
  -[_HKWorkoutObserver clientRemote_didUpdateWorkoutSnapshot:]
  -[_HKWorkoutObserver _lock_startTaskServerIfNeeded]
  -[_HKWorkoutObserver waitForAutomaticWorkoutRecoveryWithCompletion:]


HKHealthStore : NSObject /usr/lib/libc++.1.dylib <HKHealthStoreClientInterface, _HKDeepBreathingSessionLifecycleDelegate, _HKXPCExportable, HKQueryDelegate>
 @property  NSString *firstName
 @property  NSString *writeAuthorizationUsageDescriptionOverride
 @property  NSString *readAuthorizationUsageDescriptionOverride
 @property  NSString *clinicalReadAuthorizationUsageDescriptionOverride
 @property  NSString *researchStudyUsageDescriptionOverride
 @property  HKHealthServicesManager *healthServicesManager
 @property  unsigned int applicationSDKVersion
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSSet *queries
 @property  HKProfileIdentifier *profileIdentifier
 @property  NSString *sourceBundleIdentifier
 @property  NSBundle *sourceBundle
 @property  NSString *debugIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKHealthStore isHealthDataAvailable]
  +[HKHealthStore _applicationHasRunningWorkout]

  // instance methods
  -[HKHealthStore init]
  -[HKHealthStore dealloc]
  -[HKHealthStore .cxx_destruct]
  -[HKHealthStore resume]
  -[HKHealthStore initWithListenerEndpoint:]
  -[HKHealthStore initWithIdentifier:]
  -[HKHealthStore exportedInterface]
  -[HKHealthStore _applicationWillResignActive:]
  -[HKHealthStore _applicationDidBecomeActive:]
  -[HKHealthStore debugIdentifier]
  -[HKHealthStore setDebugIdentifier:]
  -[HKHealthStore clientQueue]
  -[HKHealthStore firstName]
  -[HKHealthStore connectionInvalidated]
  -[HKHealthStore _fetchDaemonPreferenceForKey:completion:]
  -[HKHealthStore _setDaemonPreferenceValue:forKey:completion:]
  -[HKHealthStore deleteMedicalIDData]
  -[HKHealthStore fetchMedicalIDDataWithCompletion:]
  -[HKHealthStore updateMedicalIDData:completion:]
  -[HKHealthStore connectionInterrupted]
  -[HKHealthStore remoteInterface]
  -[HKHealthStore executeQuery:]
  -[HKHealthStore profileIdentifier]
  -[HKHealthStore setProfileIdentifier:]
  -[HKHealthStore _queries]
  -[HKHealthStore setSourceBundleIdentifier:]
  -[HKHealthStore sourceBundleIdentifier]
  -[HKHealthStore healthServicesManager]
  -[HKHealthStore startHealthServiceDiscovery:withHandler:]
  -[HKHealthStore endHealthServiceDiscovery:]
  -[HKHealthStore startHealthServiceSession:withHandler:]
  -[HKHealthStore endHealthServiceSession:]
  -[HKHealthStore registerPeripheralIdentifier:name:services:withCompletion:]
  -[HKHealthStore unregisterPeripheralIdentifier:withCompletion:]
  -[HKHealthStore healthServicePairingsWithHandler:]
  -[HKHealthStore healthPeripheralsWithFilter:handler:]
  -[HKHealthStore addHealthServicePairing:withCompletion:]
  -[HKHealthStore removeHealthServicePairing:withCompletion:]
  -[HKHealthStore applicationSDKVersion]
  -[HKHealthStore _actionCompletionOnClientQueue:]
  -[HKHealthStore _workoutServerProxyWithCompletion:errorHandler:]
  -[HKHealthStore _currentWorkoutSnapshotWithCompletion:]
  -[HKHealthStore finishAllWorkoutsWithCompletion:]
  -[HKHealthStore _activeWorkoutApplicationIdentifierWithCompletion:]
  -[HKHealthStore _firstPartyWorkoutSnapshotWithCompletion:]
  -[HKHealthStore _objectCompletionOnClientQueue:]
  -[HKHealthStore _notificationServerProxyWithCompletion:errorHandler:]
  -[HKHealthStore badgeForDomain:completion:]
  -[HKHealthStore setBadge:forDomain:completion:]
  -[HKHealthStore postNotificationWithRequest:completion:]
  -[HKHealthStore postCompanionUserNotificationOfType:completion:]
  -[HKHealthStore initWithListenerEndpoint:identifier:]
  -[HKHealthStore _faultIfInnappropriateHost]
  -[HKHealthStore _connectionQueue_setUpWithEndpoint:]
  -[HKHealthStore _setConfigurationPropertyUsingBlock:]
  -[HKHealthStore sourceBundle]
  -[HKHealthStore _discardServerProxiesForServer:]
  -[HKHealthStore _serverProxyWithCompletion:errorHandler:]
  -[HKHealthStore _subserverProxyForSelector:completion:errorHandler:]
  -[HKHealthStore _validateAuthorizationRequestWithShareTypes:readTypes:]
  -[HKHealthStore requestAuthorizationToShareTypes:readTypes:shouldPrompt:completion:]
  -[HKHealthStore _throwIfClinicalTypesRequestedToShare:]
  -[HKHealthStore _throwIfParentTypeNotRequestedForSharing:types:]
  -[HKHealthStore _throwIfAuthorizationDisallowedForSharing:types:]
  -[HKHealthStore _validateAuthorizationInfoPlist]
  -[HKHealthStore _validatePurposeStringsForSharingTypes:readingTypes:]
  -[HKHealthStore _sourceBundleOrDefaultBundle]
  -[HKHealthStore _validateClinicalHealthRecordsPurposeStringsForSharingTypes:readingTypes:]
  -[HKHealthStore _validateHealthDataPurposeStringsForSharingTypes:readingTypes:]
  -[HKHealthStore _clientClinicalReadAuthorizationUsageDescription]
  -[HKHealthStore _clientWriteAuthorizationUsageDescription]
  -[HKHealthStore _clientReadAuthorizationUsageDescription]
  -[HKHealthStore _clientQueue_invokeAuthorizationDelegateTransactionErrorHandlerWithError:]
  -[HKHealthStore _researchStudyUsageDescription]
  -[HKHealthStore _clinicalAuthorizationPresentationRequestForRecord:]
  -[HKHealthStore _healthDataAuthorizationPresentationRequestForRecord:]
  -[HKHealthStore saveObjects:withCompletion:]
  -[HKHealthStore _saveObjects:atomically:completion:]
  -[HKHealthStore _sendNextObjectBatch:lastRange:server:transaction:completion:]
  -[HKHealthStore _deleteObjects:options:completion:]
  -[HKHealthStore deleteObjectsOfType:predicate:options:withCompletion:]
  -[HKHealthStore executeQuery:activationHandler:]
  -[HKHealthStore _addQuery:]
  -[HKHealthStore _removeQuery:]
  -[HKHealthStore dateOfBirthComponentsWithError:]
  -[HKHealthStore _characteristicForDataType:error:]
  -[HKHealthStore _setCharacteristic:forDataType:error:]
  -[HKHealthStore _generatePauseOrResumeRequest:]
  -[HKHealthStore _closeTransactionWithType:anchor:ackTime:]
  -[HKHealthStore _setBackgroundDeliveryFrequencyDataType:frequency:withCompletion:]
  -[HKHealthStore _currentValueForQuantityTypeCode:characteristicTypeCode:beforeDate:completion:]
  -[HKHealthStore _mostRecentQuantityOfType:beforeDate:completion:]
  -[HKHealthStore _medicalIDServerProxyWithCompletion:errorHandler:]
  -[HKHealthStore deleteMedicalIDDataWithCompletion:]
  -[HKHealthStore _utilityServerProxyWithCompletion:errorHandler:]
  -[HKHealthStore clientRemote_presentAuthorizationWithRequestRecord:completion:]
  -[HKHealthStore clientRemote_presentAuthorizationWithSession:completion:]
  -[HKHealthStore clientRemote_unitPreferencesDidUpdate]
  -[HKHealthStore clientRemote_conceptIndexManagerDidBecomeQuiescentWithSamplesProcessedCount:]
  -[HKHealthStore deepBreathingSessionDidComplete:]
  -[HKHealthStore queryDidFinishExecuting:]
  -[HKHealthStore closeTransactionForType:anchor:ackTime:query:]
  -[HKHealthStore unitTest_replaceListenerEndpoint:]
  -[HKHealthStore unitTest_setApplicationSDKVersion:]
  -[HKHealthStore setSourceBundle:]
  -[HKHealthStore _healthServicesServerProxyWithCompletion:errorHandler:]
  -[HKHealthStore _nanoSyncServerProxyWithCompletion:errorHandler:]
  -[HKHealthStore _cloudSyncServerProxyWithCompletion:errorHandler:]
  -[HKHealthStore _staticSyncServerProxyWithCompletion:errorHandler:]
  -[HKHealthStore _queryControlServerProxyWithCompletion:errorHandler:]
  -[HKHealthStore _profileServerProxyWithCompletion:errorHandler:]
  -[HKHealthStore fetchPluginServiceEndpointForIdentifier:endpointHandler:errorHandler:]
  -[HKHealthStore fetchTaskServerEndpointForIdentifier:pluginURL:taskUUID:configuration:endpointHandler:errorHandler:]
  -[HKHealthStore hasSampleWithBundleIdentifier:completion:]
  -[HKHealthStore hasSourceWithBundleIdentifier:completion:]
  -[HKHealthStore addSourceWithBundleIdentifier:name:completion:]
  -[HKHealthStore allSourcesWithCompletion:]
  -[HKHealthStore orderedSourcesForObjectType:completion:]
  -[HKHealthStore updateOrderedSources:forObjectType:completion:]
  -[HKHealthStore _fetchDevicesMatchingProperty:values:completion:]
  -[HKHealthStore deleteAllSamplesWithTypes:sourceBundleIdentifier:options:completion:]
  -[HKHealthStore deleteSourceWithBundleIdentifier:completion:]
  -[HKHealthStore deleteObjectsWithUUIDs:options:completion:]
  -[HKHealthStore deleteClientSourceWithCompletion:]
  -[HKHealthStore associateSampleUUIDs:withSampleUUID:completion:]
  -[HKHealthStore authorizationStatusForType:]
  -[HKHealthStore getRequestStatusForAuthorizationToShareTypes:readTypes:completion:]
  -[HKHealthStore requestAuthorizationToShareTypes:readTypes:completion:]
  -[HKHealthStore handleAuthorizationForExtensionWithCompletion:]
  -[HKHealthStore allAuthorizationRecordsForBundleIdentifier:completion:]
  -[HKHealthStore retrieveAllAuthorizationRecordsForDocumentType:bundleIdentifier:completion:]
  -[HKHealthStore allAuthorizationRecordsForType:completion:]
  -[HKHealthStore allSourcesRequestingAuthorizationForTypes:completion:]
  -[HKHealthStore retrieveAllAuthorizationRecordsForSample:completion:]
  -[HKHealthStore setAuthorizationStatuses:authorizationModes:forBundleIdentifier:options:completion:]
  -[HKHealthStore setRequestedAuthorizationForBundleIdentifier:shareTypes:readTypes:prompt:completion:]
  -[HKHealthStore resetAuthorizationStatusForBundleIdentifier:completion:]
  -[HKHealthStore beginAuthorizationDelegateTransactionWithSessionIdentifier:sourceHandler:errorHandler:]
  -[HKHealthStore endAuthorizationDelegateTransactionWithSessionIdentifier:error:]
  -[HKHealthStore setObjectAuthorizationStatuses:forBundleIdentifier:completion:]
  -[HKHealthStore resetSelectedObjectAuthorizationStatuses:completion:]
  -[HKHealthStore resetAllObjectAuthorizationStatusForBundleIdentifier:objectType:completion:]
  -[HKHealthStore earliestPermittedSampleDate]
  -[HKHealthStore saveObject:withCompletion:]
  -[HKHealthStore deleteObject:withCompletion:]
  -[HKHealthStore deleteObjects:withCompletion:]
  -[HKHealthStore deleteObjectsOfType:predicate:withCompletion:]
  -[HKHealthStore deleteObject:options:withCompletion:]
  -[HKHealthStore deleteObjects:options:withCompletion:]
  -[HKHealthStore stopQuery:]
  -[HKHealthStore dateOfBirthWithError:]
  -[HKHealthStore _setDateOfBirthComponents:error:]
  -[HKHealthStore biologicalSexWithError:]
  -[HKHealthStore _setBiologicalSex:error:]
  -[HKHealthStore bloodTypeWithError:]
  -[HKHealthStore _setBloodType:error:]
  -[HKHealthStore fitzpatrickSkinTypeWithError:]
  -[HKHealthStore _setFitzpatrickSkinType:error:]
  -[HKHealthStore wheelchairUseWithError:]
  -[HKHealthStore _setWheelchairUse:error:]
  -[HKHealthStore _bodyMassCharacteristicQuantityWithError:]
  -[HKHealthStore _setBodyMassCharacteristicQuantity:error:]
  -[HKHealthStore _leanBodyMassCharacteristicQuantityWithError:]
  -[HKHealthStore _setLeanBodyMassCharacteristicQuantity:error:]
  -[HKHealthStore _heightCharacteristicQuantityWithError:]
  -[HKHealthStore _setHeightCharacteristicQuantity:error:]
  -[HKHealthStore _userEnteredMenstrualCycleLengthCharacteristicQuantityWithError:]
  -[HKHealthStore _setUserEnteredMenstrualCycleLengthCharacteristicQuantity:error:]
  -[HKHealthStore _userEnteredMenstrualPeriodLengthCharacteristicQuantityWithError:]
  -[HKHealthStore _setUserEnteredMenstrualPeriodLengthCharacteristicQuantity:error:]
  -[HKHealthStore _generateWorkoutMarkerWithCompletion:]
  -[HKHealthStore supportsHealthRecords]
  -[HKHealthStore addSamples:toWorkout:completion:]
  -[HKHealthStore _replaceWorkout:withWorkout:completion:]
  -[HKHealthStore startWorkoutSession:]
  -[HKHealthStore endWorkoutSession:]
  -[HKHealthStore pauseWorkoutSession:]
  -[HKHealthStore resumeWorkoutSession:]
  -[HKHealthStore startWatchAppWithWorkoutConfiguration:completion:]
  -[HKHealthStore recoverActiveWorkoutSessionWithCompletion:]
  -[HKHealthStore _createFitnessMachineConnection]
  -[HKHealthStore _createFitnessMachineConnectionInitiator]
  -[HKHealthStore _createDeepBreathingSessionWithConfiguration:completion:]
  -[HKHealthStore enableBackgroundDeliveryForType:frequency:withCompletion:]
  -[HKHealthStore disableBackgroundDeliveryForType:withCompletion:]
  -[HKHealthStore disableAllBackgroundDeliveryWithCompletion:]
  -[HKHealthStore preferredUnitsForQuantityTypes:completion:]
  -[HKHealthStore _setPreferredUnit:forType:completion:]
  -[HKHealthStore _calculateBMRForDate:useEndOfDay:completion:]
  -[HKHealthStore splitTotalEnergy:startDate:endDate:resultsHandler:]
  -[HKHealthStore _progressHandlerOnClientQueue:]
  -[HKHealthStore _selectCompletionOnClientQueue:]
  -[HKHealthStore setHealthLiteValue:forKey:completion:]
  -[HKHealthStore getHealthLiteValueForKey:completion:]
  -[HKHealthStore fetchServerURLForAssetType:completion:]
  -[HKHealthStore setServerURL:forAssetType:completion:]
  -[HKHealthStore getHealthDirectorySizeInBytesWithCompletion:]
  -[HKHealthStore obliterateHealthDataWithOptions:completion:]
  -[HKHealthStore performMigrationWithCompletion:]
  -[HKHealthStore fetchMedicalIDDataCreateIfNecessary:withCompletion:]
  -[HKHealthStore fetchMedicalIDEmergencyContactsWithCompletion:]
  -[HKHealthStore updateMedicalIDData:]
  -[HKHealthStore badgeHealthAppForEmergencyContactsConsolidationWithCompletion:]
  -[HKHealthStore suppressActivityAlertsForIdentifier:suppressionReason:timeoutUntilDate:completion:]
  -[HKHealthStore invalidateActivityAlertSuppressionForIdentifier:completion:]
  -[HKHealthStore generateFakeDataForActivityType:minutes:completion:]
  -[HKHealthStore containerAppExtensionEntitlementsWithCompletion:]
  -[HKHealthStore writeAuthorizationUsageDescriptionOverride]
  -[HKHealthStore setWriteAuthorizationUsageDescriptionOverride:]
  -[HKHealthStore readAuthorizationUsageDescriptionOverride]
  -[HKHealthStore setReadAuthorizationUsageDescriptionOverride:]
  -[HKHealthStore clinicalReadAuthorizationUsageDescriptionOverride]
  -[HKHealthStore setClinicalReadAuthorizationUsageDescriptionOverride:]
  -[HKHealthStore researchStudyUsageDescriptionOverride]
  -[HKHealthStore setResearchStudyUsageDescriptionOverride:]
  -[HKHealthStore forceCloudSyncWithOptions:reason:completion:]
  -[HKHealthStore fetchCloudSyncStatusWithCompletion:]
  -[HKHealthStore forceCloudSyncWithOptions:completion:]
  -[HKHealthStore forceCloudSyncDataUploadForProfileWithCompletion:]
  -[HKHealthStore fetchCloudSyncRequiredWithCompletion:]
  -[HKHealthStore disableCloudSyncAndDeleteAllCloudDataWithCompletion:]
  -[HKHealthStore fetchCloudSyncProgress:completion:]
  -[HKHealthStore forceCloudSyncWithOptions:progress:completion:]
  -[HKHealthStore forceCloudResetWithProgress:completion:]
  -[HKHealthStore fetchCloudDescriptionWithProgress:completion:]
  -[HKHealthStore disableCloudSyncAndDeleteAllCloudDataWithProgress:completion:]
  -[HKHealthStore disableCloudSyncWithCompletion:]
  -[HKHealthStore enableCloudSyncWithCompletion:]
  -[HKHealthStore accountConfigurationDidChangeWithCompletion:]
  -[HKHealthStore oldestSampleStartDateInHealthDatabaseWithCompletion:]
  -[HKHealthStore runStaticSyncExportWithOptions:storeIdentifier:URL:batchSize:progressHandler:completion:]
  -[HKHealthStore runStaticSyncImportWithOptions:storeIdentifier:URL:progressHandler:completion:]
  -[HKHealthStore fetchURLForAnalyticsFileWithName:completion:]
  -[HKHealthStore fetchDisplayName:]
  -[HKHealthStore setDisplayFirstName:lastName:completion:]
  -[HKHealthStore createProfileOfType:displayName:completion:]
  -[HKHealthStore deleteProfile:completion:]
  -[HKHealthStore getAllProfilesWithCompletion:]
  -[HKHealthStore profileIdentifierForNRDeviceUUID:completion:]
  -[HKHealthStore forceNanoSyncWithOptions:completion:]
  -[HKHealthStore fetchNanoSyncPairedDevicesWithCompletion:]
  -[HKHealthStore forceNanoSyncWithPullRequest:completion:]
  -[HKHealthStore forceLastChanceNanoSyncWithCompletion:]
  -[HKHealthStore resetNanoSyncWithCompletion:]
  -[HKHealthStore waitForLastChanceSyncWithDevicePairingID:timeout:completion:]
  -[HKHealthStore saveObjects:sourceBundleIdentifier:sourceVersion:withCompletion:]
  -[HKHealthStore startFakingDataWithActivityType:speed:completion:]
  -[HKHealthStore stopFakingDataWithCompletion:]
  -[HKHealthStore diagnosticsForKeys:completion:]
  -[HKHealthStore createFakeAppleSourceWithBundleIdentifier:name:productType:completion:]
  -[HKHealthStore fetchAllDevicesWithCompletion:]
  -[HKHealthStore saveObjects:sourceBundleIdentifier:withCompletion:]
  -[HKHealthStore select:from:where:groupBy:orderBy:limit:completion:]
  -[HKHealthStore dropEntitlement:]
  -[HKHealthStore restoreEntitlement:]
  -[HKHealthStore runAWDTask:completion:]
  -[HKHealthStore resetAWDTask:completion:]
  -[HKHealthStore observeDataCollectionForType:interval:inBackground:hasRunningWorkout:completion:]
  -[HKHealthStore stopObservingDataCollectionForType:completion:]
  -[HKHealthStore _fetchBoolDaemonPreferenceForKey:completion:]
  -[HKHealthStore _safeFetchDaemonPreferenceForKey:expectedReturnClass:completion:]
  -[HKHealthStore _shouldGenerateDemoDataPreferenceIsSet:]


_HKFitnessMachineConnectionInitiator : NSObject /usr/lib/libc++.1.dylib <HKFitnessMachineConnectionInitiatorClientInterface>
 @property  HKHealthStore *healthStore
 @property  NSUUID *UUID
 @property  <_HKFitnessMachineConnectionInitiatorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HKFitnessMachineConnectionInitiator delegate]
  -[_HKFitnessMachineConnectionInitiator setDelegate:]
  -[_HKFitnessMachineConnectionInitiator .cxx_destruct]
  -[_HKFitnessMachineConnectionInitiator UUID]
  -[_HKFitnessMachineConnectionInitiator healthStore]
  -[_HKFitnessMachineConnectionInitiator setHealthStore:]
  -[_HKFitnessMachineConnectionInitiator _initWithHealthStore:]
  -[_HKFitnessMachineConnectionInitiator _connectionInterruptedWithError:]
  -[_HKFitnessMachineConnectionInitiator registerClient]
  -[_HKFitnessMachineConnectionInitiator peformServerOperation:]
  -[_HKFitnessMachineConnectionInitiator clientRemote_updatedConnectionState:fitnessMachineSessionUUID:]
  -[_HKFitnessMachineConnectionInitiator clientRemote_updatedFitnessMachine:fitnessMachineSessionUUID:]
  -[_HKFitnessMachineConnectionInitiator clientRemote_updatedFitnessMachineState:fitnessMachineSessionUUID:]
  -[_HKFitnessMachineConnectionInitiator clientRemote_workoutAppReady]
  -[_HKFitnessMachineConnectionInitiator clientRemote_encounteredError:]
  -[_HKFitnessMachineConnectionInitiator permitConnectionForFitnessMachineSessionUUID:activityType:]
  -[_HKFitnessMachineConnectionInitiator forbidConnectionForFitnessMachineSessionUUID:]
  -[_HKFitnessMachineConnectionInitiator _simulateTapWithFitnessMachineType:]
  -[_HKFitnessMachineConnectionInitiator _simulateAccept]
  -[_HKFitnessMachineConnectionInitiator _simulateDisconnect]


HKAccountOwner : HKMedicalRecord <NSSecureCoding, NSCopying>
 @property  HKAccountOwnerType *accountOwnerType
 @property  HKMedicalDate *birthDate
 @property  NSString *name

  // class methods
  +[HKAccountOwner supportsSecureCoding]
  +[HKAccountOwner supportsEquivalence]
  +[HKAccountOwner _isConcreteObjectClass]
  +[HKAccountOwner _newAccountOwnerWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:name:birthDate:config:]
  +[HKAccountOwner accountOwnerWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:name:birthDate:]
  +[HKAccountOwner accountOwnerWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:name:birthDate:]

  // instance methods
  -[HKAccountOwner init]
  -[HKAccountOwner name]
  -[HKAccountOwner copyWithZone:]
  -[HKAccountOwner encodeWithCoder:]
  -[HKAccountOwner initWithCoder:]
  -[HKAccountOwner .cxx_destruct]
  -[HKAccountOwner _setName:]
  -[HKAccountOwner isEquivalent:]
  -[HKAccountOwner _validateConfigurationWithOptions:]
  -[HKAccountOwner birthDate]
  -[HKAccountOwner _setBirthDate:]
  -[HKAccountOwner accountOwnerType]


HKFeatureAvailabilityWatchOSBuildVersionEqualsRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  NSString *buildVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityWatchOSBuildVersionEqualsRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityWatchOSBuildVersionEqualsRule .cxx_destruct]
  -[HKFeatureAvailabilityWatchOSBuildVersionEqualsRule buildVersion]
  -[HKFeatureAvailabilityWatchOSBuildVersionEqualsRule setBuildVersion:]
  -[HKFeatureAvailabilityWatchOSBuildVersionEqualsRule evaluate]
  -[HKFeatureAvailabilityWatchOSBuildVersionEqualsRule processUserInfo:]


HKUnknownRecordType : HKMedicalType
  // class methods
  +[HKUnknownRecordType allTypes]
  +[HKUnknownRecordType unknownRecordType]


_HKSleepQueryResult : NSObject /usr/lib/libc++.1.dylib <_HKDateBounded, NSSecureCoding>
 @property  NSDateInterval *resultInterval
 @property  NSDictionary *samplesBySource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HKSleepQueryResult supportsSecureCoding]
  +[_HKSleepQueryResult samplesForSamplesBySource:]
  +[_HKSleepQueryResult dateIntervalForSamples:]
  +[_HKSleepQueryResult _preferredSourceFromSources:sourceOrder:]

  // instance methods
  -[_HKSleepQueryResult copyWithZone:]
  -[_HKSleepQueryResult encodeWithCoder:]
  -[_HKSleepQueryResult initWithCoder:]
  -[_HKSleepQueryResult .cxx_destruct]
  -[_HKSleepQueryResult startDate]
  -[_HKSleepQueryResult endDate]
  -[_HKSleepQueryResult dateInterval]
  -[_HKSleepQueryResult dateIntervalsForCategoryValue:]
  -[_HKSleepQueryResult initWithResultInterval:dateIntervalsByCategoryValue:samplesBySource:]
  -[_HKSleepQueryResult preferredDateIntervals]
  -[_HKSleepQueryResult _calculatePreferredDuration:categoryValue:]
  -[_HKSleepQueryResult resultInterval]
  -[_HKSleepQueryResult samplesBySource]


HKFeatureAvailabilityElectrocardiogramOnboardingCountryCodeRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  NSString *onboardingCountryCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityElectrocardiogramOnboardingCountryCodeRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityElectrocardiogramOnboardingCountryCodeRule .cxx_destruct]
  -[HKFeatureAvailabilityElectrocardiogramOnboardingCountryCodeRule evaluate]
  -[HKFeatureAvailabilityElectrocardiogramOnboardingCountryCodeRule processUserInfo:]
  -[HKFeatureAvailabilityElectrocardiogramOnboardingCountryCodeRule setOnboardingCountryCode:]
  -[HKFeatureAvailabilityElectrocardiogramOnboardingCountryCodeRule onboardingCountryCode]


HKSortedSampleArray : NSObject /usr/lib/libc++.1.dylib <NSFastEnumeration>
 @property  NSSortDescriptor *sortDescriptor

  // instance methods
  -[HKSortedSampleArray init]
  -[HKSortedSampleArray count]
  -[HKSortedSampleArray countByEnumeratingWithState:objects:count:]
  -[HKSortedSampleArray .cxx_destruct]
  -[HKSortedSampleArray sortDescriptor]
  -[HKSortedSampleArray setSortDescriptor:]
  -[HKSortedSampleArray _addResultsToUUIDMappingRemovingDuplicates:]
  -[HKSortedSampleArray removeSampleAtIndex:]
  -[HKSortedSampleArray removeSample:]
  -[HKSortedSampleArray insertSamples:]
  -[HKSortedSampleArray sampleAtIndex:]
  -[HKSortedSampleArray allSamples]
  -[HKSortedSampleArray removeSamplesWithUUIDs:]
  -[HKSortedSampleArray removeAllSamples]
  -[HKSortedSampleArray sampleEnumerator]
  -[HKSortedSampleArray reverseSampleEnumerator]


HKMedicationOrderType : HKMedicalType
  // class methods
  +[HKMedicationOrderType allTypes]
  +[HKMedicationOrderType medicationOrderType]


HKConcept : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSString *preferredName
 @property  HKConceptIdentifier *identifier
 @property  HKConcept *groupByConcept
 @property  NSArray *attributes
 @property  NSArray *relationships
 @property  BOOL relationshipsAreLoaded
 @property  NSString *nodeName
 @property  HKConcept *chartedWithConcept
 @property  long long version
 @property  BOOL isUndefined
 @property  BOOL isAdHoc
 @property  HKConceptAttribute *adHocCode

  // class methods
  +[HKConcept supportsSecureCoding]
  +[HKConcept undefinedConcept]
  +[HKConcept _buildCategoryIdentifierWithCode:]
  +[HKConcept _conceptWithIdentifier:attributes:]
  +[HKConcept allergyCategoryIdentifier]
  +[HKConcept conditionCategoryIdentifier]
  +[HKConcept labCategoryIdentifier]
  +[HKConcept medicationCategoryIdentifier]
  +[HKConcept procedureCategoryIdentifier]
  +[HKConcept vaccinationCategoryIdentifier]
  +[HKConcept vitalCategoryIdentifier]
  +[HKConcept unknownCategoryIdentifier]

  // instance methods
  -[HKConcept init]
  -[HKConcept isEqual:]
  -[HKConcept copyWithZone:]
  -[HKConcept encodeWithCoder:]
  -[HKConcept initWithCoder:]
  -[HKConcept .cxx_destruct]
  -[HKConcept _init]
  -[HKConcept identifier]
  -[HKConcept attributes]
  -[HKConcept setIdentifier:]
  -[HKConcept version]
  -[HKConcept setAttributes:]
  -[HKConcept isUndefined]
  -[HKConcept preferredName]
  -[HKConcept relationships]
  -[HKConcept addAttribute:]
  -[HKConcept nodeName]
  -[HKConcept setNodeName:]
  -[HKConcept adHocCode]
  -[HKConcept _firstConceptOfRelationshipType:]
  -[HKConcept firstAttributeForName:]
  -[HKConcept _attributesMutableArray]
  -[HKConcept updateRelationshipsOwners]
  -[HKConcept groupByConcept]
  -[HKConcept chartedWithConcept]
  -[HKConcept attributesForName:]
  -[HKConcept isAdHoc]
  -[HKConcept addRelationship:]
  -[HKConcept setPreferredName:]
  -[HKConcept relationshipsAreLoaded]
  -[HKConcept setRelationshipsAreLoaded:]
  -[HKConcept setGroupByConcept:]
  -[HKConcept setRelationships:]


HKMedicalCodingResult : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  HKMedicalConcept *concept
 @property  NSError *error

  // class methods
  +[HKMedicalCodingResult supportsSecureCoding]
  +[HKMedicalCodingResult resultWithError:]
  +[HKMedicalCodingResult resultWithConcept:]

  // instance methods
  -[HKMedicalCodingResult init]
  -[HKMedicalCodingResult copyWithZone:]
  -[HKMedicalCodingResult encodeWithCoder:]
  -[HKMedicalCodingResult initWithCoder:]
  -[HKMedicalCodingResult .cxx_destruct]
  -[HKMedicalCodingResult error]
  -[HKMedicalCodingResult initWithConcept:error:]
  -[HKMedicalCodingResult concept]


HKAllergyRecordType : HKMedicalType
  // class methods
  +[HKAllergyRecordType allTypes]
  +[HKAllergyRecordType allergyRecordType]


HKProxyProvider : NSObject /usr/lib/libc++.1.dylib
 @property  HKHealthStore *healthStore
 @property  NSString *proxyIdentifier
 @property  <_HKXPCExportable> *exportedObject
 @property  @? automaticProxyReconnectionHandler
 @property  BOOL shouldRetryOnInterruption

  // class methods
  +[HKProxyProvider _relaunchQueue]

  // instance methods
  -[HKProxyProvider dealloc]
  -[HKProxyProvider invalidate]
  -[HKProxyProvider .cxx_destruct]
  -[HKProxyProvider exportedObject]
  -[HKProxyProvider proxyIdentifier]
  -[HKProxyProvider healthStore]
  -[HKProxyProvider setShouldRetryOnInterruption:]
  -[HKProxyProvider fetchProxyWithHandler:errorHandler:]
  -[HKProxyProvider setAutomaticProxyReconnectionHandler:]
  -[HKProxyProvider _serverDidFinishLaunching]
  -[HKProxyProvider automaticProxyReconnectionHandler]
  -[HKProxyProvider _fetchProxyWithHandler:errorHandler:]
  -[HKProxyProvider _lock_flushContinuationsWithConnection:error:]
  -[HKProxyProvider _fetchRetryingProxyWithErrorCount:handler:errorHandler:]
  -[HKProxyProvider shouldRetryOnInterruption]
  -[HKProxyProvider _handleError:connectionGeneration:]
  -[HKProxyProvider _lock_fetchEndpointAndConnectionWithContinuation:]
  -[HKProxyProvider _getSynchronousProxyWithErrorCount:handler:errorHandler:]
  -[HKProxyProvider _getSynchronousProxyWithHandler:errorHandler:]
  -[HKProxyProvider _resetConnectionWithGeneration:]
  -[HKProxyProvider _lock_setUpConnectionWithEndpoint:]
  -[HKProxyProvider fetchProxyServiceEndpointForIdentifier:endpointHandler:errorHandler:]
  -[HKProxyProvider initWithHealthStore:proxyIdentifier:exportedObject:]
  -[HKProxyProvider getSynchronousProxyWithHandler:errorHandler:]


HKSynchronousObserverSet : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long count
 @property  NSArray *allObservers

  // instance methods
  -[HKSynchronousObserverSet count]
  -[HKSynchronousObserverSet .cxx_destruct]
  -[HKSynchronousObserverSet registerObserver:]
  -[HKSynchronousObserverSet unregisterObserver:]
  -[HKSynchronousObserverSet initWithName:loggingCategory:]
  -[HKSynchronousObserverSet notifyObservers:]
  -[HKSynchronousObserverSet allObservers]


HKCurrentActivityCacheQuery : HKQuery <HKCurrentActivityCacheQueryClientInterface>
 @property  @? updateHandler

  // class methods
  +[HKCurrentActivityCacheQuery configurationClass]
  +[HKCurrentActivityCacheQuery clientInterfaceProtocol]
  +[HKCurrentActivityCacheQuery configureClientInterface:]

  // instance methods
  -[HKCurrentActivityCacheQuery .cxx_destruct]
  -[HKCurrentActivityCacheQuery setUpdateHandler:]
  -[HKCurrentActivityCacheQuery updateHandler]
  -[HKCurrentActivityCacheQuery queue_validate]
  -[HKCurrentActivityCacheQuery queue_deliverError:]
  -[HKCurrentActivityCacheQuery queue_shouldDeactivateAfterInitialResults]
  -[HKCurrentActivityCacheQuery queue_queryDidDeactivate:]
  -[HKCurrentActivityCacheQuery client_deliverQueryResult:queryUUID:]
  -[HKCurrentActivityCacheQuery queue_populateConfiguration:]
  -[HKCurrentActivityCacheQuery initWithStatisticsIntervalComponents:updateHandler:]


HKCurrentActivityCacheQueryServerConfiguration : HKQueryServerConfiguration
 @property  NSDateComponents *statisticsIntervalComponents

  // class methods
  +[HKCurrentActivityCacheQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[HKCurrentActivityCacheQueryServerConfiguration copyWithZone:]
  -[HKCurrentActivityCacheQueryServerConfiguration encodeWithCoder:]
  -[HKCurrentActivityCacheQueryServerConfiguration initWithCoder:]
  -[HKCurrentActivityCacheQueryServerConfiguration .cxx_destruct]
  -[HKCurrentActivityCacheQueryServerConfiguration setStatisticsIntervalComponents:]
  -[HKCurrentActivityCacheQueryServerConfiguration statisticsIntervalComponents]


_HKSleepQueryResultBuilder : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_HKSleepQueryResultBuilder .cxx_destruct]
  -[_HKSleepQueryResultBuilder _categorySampleBufferForCategoryValue:]
  -[_HKSleepQueryResultBuilder _categorySampleBufferForSource:]
  -[_HKSleepQueryResultBuilder _organizeSamplesBySource:]
  -[_HKSleepQueryResultBuilder _createDateIntervalsFromSamples:startDate:endDate:]
  -[_HKSleepQueryResultBuilder initWithResultInterval:sourceOrder:]
  -[_HKSleepQueryResultBuilder addSleepSamples:]
  -[_HKSleepQueryResultBuilder calculateResult]


HKGymKitDataSource : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable, HKWorkoutDataSource>
 @property  NSUUID *identifier
 @property  HKTaskServerProxyProvider *proxyProvider
 @property  HKHealthStore *healthStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKGymKitDataSource serverInterface]
  +[HKGymKitDataSource clientInterface]
  +[HKGymKitDataSource defaultConfigurationWithWorkoutConfiguration:]

  // instance methods
  -[HKGymKitDataSource .cxx_destruct]
  -[HKGymKitDataSource identifier]
  -[HKGymKitDataSource setIdentifier:]
  -[HKGymKitDataSource exportedInterface]
  -[HKGymKitDataSource connectionInvalidated]
  -[HKGymKitDataSource healthStore]
  -[HKGymKitDataSource setHealthStore:]
  -[HKGymKitDataSource connectionInterrupted]
  -[HKGymKitDataSource remoteInterface]
  -[HKGymKitDataSource proxyProvider]
  -[HKGymKitDataSource _startTaskServerIfNeeded]
  -[HKGymKitDataSource workoutBuilderDidFinish]
  -[HKGymKitDataSource initWithHealthStore:workoutConfiguration:]
  -[HKGymKitDataSource setProxyProvider:]


HKQuantity : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  HKUnit *unit
 @property  double value

  // class methods
  +[HKQuantity supportsSecureCoding]
  +[HKQuantity quantityWithUnit:doubleValue:]
  +[HKQuantity _quantityWithBeatsPerMinute:]

  // instance methods
  -[HKQuantity init]
  -[HKQuantity isEqual:]
  -[HKQuantity copyWithZone:]
  -[HKQuantity compare:]
  -[HKQuantity encodeWithCoder:]
  -[HKQuantity initWithCoder:]
  -[HKQuantity .cxx_destruct]
  -[HKQuantity _value]
  -[HKQuantity _unit]
  -[HKQuantity doubleValueForUnit:]
  -[HKQuantity isCompatibleWithUnit:]
  -[HKQuantity _initWithUnit:doubleValue:]
  -[HKQuantity _quantityByAddingQuantity:]
  -[HKQuantity _isZero]
  -[HKQuantity _foundationMeasurement]
  -[HKQuantity hk_isLessThanQuantity:]
  -[HKQuantity hk_isGreaterThanQuantity:]
  -[HKQuantity _beatsPerMinute]


_HKAppURLSpecification : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_HKAppURLSpecification isClinicalOnboardingURL:]
  +[_HKAppURLSpecification isClinicalLoginRedirectURL:]
  +[_HKAppURLSpecification parseClinicalOnboardingURL:resultHandler:errorHandler:]
  +[_HKAppURLSpecification parseClinicalLoginRedirectURL:resultHandler:errorHandler:]
  +[_HKAppURLSpecification isAtrialFibrillationEventURL:]
  +[_HKAppURLSpecification isViewHealthRecordsURL:]
  +[_HKAppURLSpecification isHealthRecordsProviderSearchURL:]


_HKXMLValidator : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_HKXMLValidator validatorWithXSD:]
  +[_HKXMLValidator validatorWithPathToXSD:]

  // instance methods
  -[_HKXMLValidator dealloc]
  -[_HKXMLValidator _initWithSchema:]
  -[_HKXMLValidator validateXML:simpleError:detailedErrors:]


_HKValidationErrorTracker : NSObject /usr/lib/libc++.1.dylib
 @property  long long errorCount
 @property  NSMutableString *errorMessage

  // instance methods
  -[_HKValidationErrorTracker init]
  -[_HKValidationErrorTracker .cxx_destruct]
  -[_HKValidationErrorTracker errorCount]
  -[_HKValidationErrorTracker errorMessage]
  -[_HKValidationErrorTracker setErrorCount:]
  -[_HKValidationErrorTracker setErrorMessage:]


_HKTaskCompletionCounter : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_HKTaskCompletionCounter counterWithTargetCount:queue:completion:]

  // instance methods
  -[_HKTaskCompletionCounter _invalidate]
  -[_HKTaskCompletionCounter .cxx_destruct]
  -[_HKTaskCompletionCounter decrementCounter]
  -[_HKTaskCompletionCounter incrementCounter]
  -[_HKTaskCompletionCounter allTasksEnqueued]


_HKZipArchiveExtractor : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_HKZipArchiveExtractor initWithURL:]
  -[_HKZipArchiveExtractor initWithData:]
  -[_HKZipArchiveExtractor .cxx_destruct]
  -[_HKZipArchiveExtractor lastError]
  -[_HKZipArchiveExtractor _clearState]
  -[_HKZipArchiveExtractor numberOfEntries]
  -[_HKZipArchiveExtractor _logError:]
  -[_HKZipArchiveExtractor getDataForCurrentEntryWithMaxSizeBytes:]
  -[_HKZipArchiveExtractor _getDataForCurrentEntryWithSize:]
  -[_HKZipArchiveExtractor _getDataForCurrentEntryWithBufferingWithMaxSizeBytes:]
  -[_HKZipArchiveExtractor enumerateEntriesUsingBlock:]
  -[_HKZipArchiveExtractor _enumerateLinesInCurrentEntryWithBlock:]
  -[_HKZipArchiveExtractor initWithPathname:]
  -[_HKZipArchiveExtractor getDataForCurrentEntry]
  -[_HKZipArchiveExtractor enumerateLinesInCurrentEntryWithError:block:]


HKPendingOperationRecord : NSObject /usr/lib/libc++.1.dylib
 @property  @? operationHandler
 @property  @? completionHandler
 @property  long long errorCount

  // class methods
  +[HKPendingOperationRecord pendingOperation:completion:]

  // instance methods
  -[HKPendingOperationRecord .cxx_destruct]
  -[HKPendingOperationRecord errorCount]
  -[HKPendingOperationRecord completionHandler]
  -[HKPendingOperationRecord setErrorCount:]
  -[HKPendingOperationRecord operationHandler]


HKRetryableOperation : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableArray *pendingOperations

  // instance methods
  -[HKRetryableOperation .cxx_destruct]
  -[HKRetryableOperation pendingOperations]
  -[HKRetryableOperation initWithQueue:retryCount:]
  -[HKRetryableOperation _queue_performRetryableOperation:completion:]
  -[HKRetryableOperation _queue_performPendingOperation:]


_HKEntitlements : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *entitlementValues

  // class methods
  +[_HKEntitlements entitlementsForCurrentTaskWithError:]
  +[_HKEntitlements _containerAppExtensionEntitlementsForCurrentTask]
  +[_HKEntitlements _entitlementsWithSecTask:valueOverrides:error:]
  +[_HKEntitlements _allowedEntitlementsSet]
  +[_HKEntitlements entitlementsWithDictionary:]
  +[_HKEntitlements _setEntitlementsForCurrentTask:]
  +[_HKEntitlements entitlementsWithConnection:error:]
  +[_HKEntitlements entitlementsWithApplicationIdentifier:]

  // instance methods
  -[_HKEntitlements init]
  -[_HKEntitlements .cxx_destruct]
  -[_HKEntitlements valueForEntitlement:]
  -[_HKEntitlements applicationIdentifier]
  -[_HKEntitlements hasEntitlement:]
  -[_HKEntitlements stringForEntitlement:]
  -[_HKEntitlements typesForWriteAuthorizationOverride]
  -[_HKEntitlements typesForReadAuthorizationOverride]
  -[_HKEntitlements _initWithEntitlementValues:]
  -[_HKEntitlements arrayEntitlement:containsString:]
  -[_HKEntitlements _typesFromIdentifierArray:]
  -[_HKEntitlements hasPrivateMetadataAccess]
  -[_HKEntitlements hasAccessEntitlementWithIdentifer:]
  -[_HKEntitlements hasPrivateAccessEntitlementWithIdentifer:]
  -[_HKEntitlements entitlementValues]


HKConceptStore : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable, HKConceptStoreClientInterface>
 @property  HKHealthStore *healthStore
 @property  NSUUID *identifier
 @property  HKTaskServerProxyProvider *proxyProvider
 @property  unsigned long currentConceptIndexerState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKConceptStore serverInterface]
  +[HKConceptStore clientInterface]
  +[HKConceptStore taskServerIdentifier]
  +[HKConceptStore conceptStore]

  // instance methods
  -[HKConceptStore init]
  -[HKConceptStore .cxx_destruct]
  -[HKConceptStore identifier]
  -[HKConceptStore setIdentifier:]
  -[HKConceptStore exportedInterface]
  -[HKConceptStore connectionInvalidated]
  -[HKConceptStore healthStore]
  -[HKConceptStore setHealthStore:]
  -[HKConceptStore remoteInterface]
  -[HKConceptStore proxyProvider]
  -[HKConceptStore initWithHealthStore:]
  -[HKConceptStore _startTaskServerIfNeeded]
  -[HKConceptStore setProxyProvider:]
  -[HKConceptStore _conceptForIdentifier:]
  -[HKConceptStore conceptsWithAttribute:matchingValue:]
  -[HKConceptStore clientRemote_conceptIndexManagerDidChangeState:]
  -[HKConceptStore ontologyVersionWithError:]
  -[HKConceptStore resolveConceptForContext:]
  -[HKConceptStore resolveDisplayNamesForCodingContexts:]
  -[HKConceptStore conceptForIdentifier:]
  -[HKConceptStore _conceptForCoding:]
  -[HKConceptStore _unitTest_conceptForName:]
  -[HKConceptStore conceptsWithRelationship:toNode:]
  -[HKConceptStore conceptsWithRelationship:fromNodeWithID:]
  -[HKConceptStore displayNameForCodingSystemWithID:value:]
  -[HKConceptStore loadRelationshipsForConcept:]
  -[HKConceptStore makeAssociationFromSample:toConcept:]
  -[HKConceptStore breakAssociationFromSample:toConcept:]
  -[HKConceptStore countOfConceptsAssociatedToUserRecordsWithError:]
  -[HKConceptStore conceptsAssociatedToUserRecordsWithError:]
  -[HKConceptStore cleanUpAfterUnitTest]
  -[HKConceptStore resetOntologyUsingAssetAtLocation:rememberLocation:completion:]
  -[HKConceptStore currentConceptIndexerState]
  -[HKConceptStore registerAsConceptObserver:onQueue:]
  -[HKConceptStore unregisterAsConceptObserver:onQueue:]


HKConceptFetchOptions : NSObject /usr/lib/libc++.1.dylib

HKConceptStoreServerConfiguration : HKTaskConfiguration

HKAccountOwnerType : HKMedicalType
  // class methods
  +[HKAccountOwnerType allTypes]
  +[HKAccountOwnerType accountOwnerType]


HKHeartRateSummaryReading : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDate *date
 @property  HKQuantity *quantity
 @property  long long context

  // class methods
  +[HKHeartRateSummaryReading supportsSecureCoding]

  // instance methods
  -[HKHeartRateSummaryReading isEqual:]
  -[HKHeartRateSummaryReading encodeWithCoder:]
  -[HKHeartRateSummaryReading initWithCoder:]
  -[HKHeartRateSummaryReading .cxx_destruct]
  -[HKHeartRateSummaryReading date]
  -[HKHeartRateSummaryReading context]
  -[HKHeartRateSummaryReading quantity]
  -[HKHeartRateSummaryReading initWithDate:quantity:context:]
  -[HKHeartRateSummaryReading initWithDate:quantity:]


_HKArchiveCreator : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *archiveURL
 @property  NSFileHandle *fileHandle

  // instance methods
  -[_HKArchiveCreator dealloc]
  -[_HKArchiveCreator .cxx_destruct]
  -[_HKArchiveCreator fileHandle]
  -[_HKArchiveCreator closeArchive]
  -[_HKArchiveCreator initWithURL:fileHandle:archiveType:]
  -[_HKArchiveCreator archiveIsValid]
  -[_HKArchiveCreator writeData:ofLength:]
  -[_HKArchiveCreator _addDataOfSize:toPathInArchive:fromByteProvider:]
  -[_HKArchiveCreator initWithURL:archiveType:]
  -[_HKArchiveCreator initWithFileHandle:archiveType:]
  -[_HKArchiveCreator addFileToArchive:pathInArchive:]
  -[_HKArchiveCreator addDataToArchive:pathInArchive:]
  -[_HKArchiveCreator archiveURL]


HKCodedValueCollection : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSArray *codedValues

  // class methods
  +[HKCodedValueCollection supportsSecureCoding]
  +[HKCodedValueCollection codedValueCollectionWithCodedValues:]

  // instance methods
  -[HKCodedValueCollection init]
  -[HKCodedValueCollection isEqual:]
  -[HKCodedValueCollection copyWithZone:]
  -[HKCodedValueCollection encodeWithCoder:]
  -[HKCodedValueCollection initWithCoder:]
  -[HKCodedValueCollection .cxx_destruct]
  -[HKCodedValueCollection codedValues]
  -[HKCodedValueCollection initWithCodedValues:]


HKCodableCondensedWorkoutCollection : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *workouts

  // class methods
  +[HKCodableCondensedWorkoutCollection workoutsType]

  // instance methods
  -[HKCodableCondensedWorkoutCollection isEqual:]
  -[HKCodableCondensedWorkoutCollection copyWithZone:]
  -[HKCodableCondensedWorkoutCollection .cxx_destruct]
  -[HKCodableCondensedWorkoutCollection dictionaryRepresentation]
  -[HKCodableCondensedWorkoutCollection writeTo:]
  -[HKCodableCondensedWorkoutCollection mergeFrom:]
  -[HKCodableCondensedWorkoutCollection readFrom:]
  -[HKCodableCondensedWorkoutCollection copyTo:]
  -[HKCodableCondensedWorkoutCollection addWorkouts:]
  -[HKCodableCondensedWorkoutCollection workoutsCount]
  -[HKCodableCondensedWorkoutCollection clearWorkouts]
  -[HKCodableCondensedWorkoutCollection workoutsAtIndex:]
  -[HKCodableCondensedWorkoutCollection workouts]
  -[HKCodableCondensedWorkoutCollection setWorkouts:]


HKHeartbeatSeriesBuilder : HKSeriesBuilder
  // class methods
  +[HKHeartbeatSeriesBuilder maximumCount]

  // instance methods
  -[HKHeartbeatSeriesBuilder .cxx_destruct]
  -[HKHeartbeatSeriesBuilder _resourceQueue_addMetadata:completion:]
  -[HKHeartbeatSeriesBuilder addMetadata:completion:]
  -[HKHeartbeatSeriesBuilder _resourceQueue_addHeartbeatWithTimeIntervalSinceSeriesStartDate:precededByGap:completion:]
  -[HKHeartbeatSeriesBuilder _resourceQueue_finishSeriesWithCompletion:]
  -[HKHeartbeatSeriesBuilder initWithHealthStore:device:startDate:]
  -[HKHeartbeatSeriesBuilder addHeartbeatWithTimeIntervalSinceSeriesStartDate:precededByGap:completion:]
  -[HKHeartbeatSeriesBuilder finishSeriesWithCompletion:]
  -[HKHeartbeatSeriesBuilder discard]


HKObject : NSObject /usr/lib/libc++.1.dylib <HKUUIDProvider, NSCopying, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sourceBundleIdentifier
 @property  NSDate *creationDate
 @property  double creationTimestamp
 @property  NSString *timeZoneName
 @property  NSUUID *UUID
 @property  HKSource *source
 @property  HKSourceRevision *sourceRevision
 @property  HKDevice *device
 @property  NSDictionary *metadata

  // class methods
  +[HKObject supportsSecureCoding]
  +[HKObject _isConcreteObjectClass]
  +[HKObject _newDataObjectWithMetadata:device:config:]
  +[HKObject _objectWithUUID:metadata:sourceBundleIdentifier:creationDate:]

  // instance methods
  -[HKObject init]
  -[HKObject isEqual:]
  -[HKObject copyWithZone:]
  -[HKObject encodeWithCoder:]
  -[HKObject initWithCoder:]
  -[HKObject .cxx_destruct]
  -[HKObject _init]
  -[HKObject source]
  -[HKObject UUID]
  -[HKObject _setUUID:]
  -[HKObject device]
  -[HKObject metadata]
  -[HKObject _creationDate]
  -[HKObject _source]
  -[HKObject _valueDescription]
  -[HKObject _setMetadata:]
  -[HKObject _timeZoneName]
  -[HKObject _creationTimestamp]
  -[HKObject _setCreationDate:]
  -[HKObject _setCreationTimestamp:]
  -[HKObject _setSourceBundleIdentifier:]
  -[HKObject _sourceBundleIdentifier]
  -[HKObject _setDevice:]
  -[HKObject _validateConfigurationWithOptions:]
  -[HKObject _externalSyncObjectCode]
  -[HKObject sourceRevision]
  -[HKObject prepareForSaving:]
  -[HKObject hk_UUID]
  -[HKObject _validateForCreation]
  -[HKObject _validateConfigurationAllowingPrivateMetadata:applicationSDKVersion:]
  -[HKObject _validateConfiguration]
  -[HKObject _copyByArchiving]
  -[HKObject _validateForSavingWithClientEntitlements:applicationSDKVersion:error:]
  -[HKObject prepareForDelivery:]
  -[HKObject _shouldNotifyOnInsert]
  -[HKObject _setSourceRevision:]
  -[HKObject hk_integerValue]


HKBadge : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *stringValue
 @property  NSNumber *keyValueRepresentation
 @property  long long type
 @property  <NSObject> *value
 @property  BOOL errorBadge
 @property  BOOL indicatorBadge
 @property  BOOL numberBadge
 @property  BOOL zeroBadge

  // class methods
  +[HKBadge supportsSecureCoding]
  +[HKBadge numberBadgeWithCount:]
  +[HKBadge zeroBadge]
  +[HKBadge indicatorBadge]
  +[HKBadge errorBadge]
  +[HKBadge badgeFromKeyValueRepresentation:]

  // instance methods
  -[HKBadge isEqual:]
  -[HKBadge copyWithZone:]
  -[HKBadge type]
  -[HKBadge encodeWithCoder:]
  -[HKBadge initWithCoder:]
  -[HKBadge stringValue]
  -[HKBadge value]
  -[HKBadge initWithType:count:]
  -[HKBadge isZeroBadge]
  -[HKBadge isNumberBadge]
  -[HKBadge badgeByAggregatingWithBadge:]
  -[HKBadge badgeByIncrementingByCount:]
  -[HKBadge isErrorBadge]
  -[HKBadge isIndicatorBadge]
  -[HKBadge keyValueRepresentation]


HKDevice : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *_connectedGymDeviceFullName
 @property  NSString *_connectedGymDeviceTypeName
 @property  NSString *name
 @property  NSString *manufacturer
 @property  NSString *model
 @property  NSString *hardwareVersion
 @property  NSString *firmwareVersion
 @property  NSString *softwareVersion
 @property  NSString *localIdentifier
 @property  NSString *UDIDeviceIdentifier

  // class methods
  +[HKDevice supportsSecureCoding]
  +[HKDevice localDevice]

  // instance methods
  -[HKDevice init]
  -[HKDevice isEqual:]
  -[HKDevice name]
  -[HKDevice copyWithZone:]
  -[HKDevice encodeWithCoder:]
  -[HKDevice initWithCoder:]
  -[HKDevice .cxx_destruct]
  -[HKDevice _init]
  -[HKDevice model]
  -[HKDevice firmwareVersion]
  -[HKDevice hardwareVersion]
  -[HKDevice _setName:]
  -[HKDevice localIdentifier]
  -[HKDevice manufacturer]
  -[HKDevice softwareVersion]
  -[HKDevice _setModel:]
  -[HKDevice initWithName:manufacturer:model:hardwareVersion:firmwareVersion:softwareVersion:localIdentifier:UDIDeviceIdentifier:]
  -[HKDevice _isConnectedGymDevice]
  -[HKDevice _fitnessMachineType]
  -[HKDevice _connectedGymDeviceTypeName]
  -[HKDevice _setFitnessMachineType:]
  -[HKDevice _connectedGymDeviceFullName]
  -[HKDevice _setManufacturer:]
  -[HKDevice _setHardwareVersion:]
  -[HKDevice _setFirmwareVersion:]
  -[HKDevice _setSoftwareVersion:]
  -[HKDevice _setLocalIdentifier:]
  -[HKDevice UDIDeviceIdentifier]
  -[HKDevice _setUDIDeviceIdentifier:]


HKFeatureAvailabilityWatchOSVersionGreaterThanRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  {?=qqq} targetVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityWatchOSVersionGreaterThanRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityWatchOSVersionGreaterThanRule targetVersion]
  -[HKFeatureAvailabilityWatchOSVersionGreaterThanRule setTargetVersion:]
  -[HKFeatureAvailabilityWatchOSVersionGreaterThanRule evaluate]
  -[HKFeatureAvailabilityWatchOSVersionGreaterThanRule processUserInfo:]


HKFeatureAvailabilityCompoundRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  NSString *grouping
 @property  NSMutableArray *rules
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityCompoundRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityCompoundRule .cxx_destruct]
  -[HKFeatureAvailabilityCompoundRule rules]
  -[HKFeatureAvailabilityCompoundRule setRules:]
  -[HKFeatureAvailabilityCompoundRule setGrouping:]
  -[HKFeatureAvailabilityCompoundRule grouping]
  -[HKFeatureAvailabilityCompoundRule evaluate]
  -[HKFeatureAvailabilityCompoundRule processUserInfo:]


HKHeartbeatSeriesQuery : HKQuery <HKHeartbeatSeriesQueryClientInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKHeartbeatSeriesQuery clientInterfaceProtocol]

  // instance methods
  -[HKHeartbeatSeriesQuery .cxx_destruct]
  -[HKHeartbeatSeriesQuery queue_deliverError:]
  -[HKHeartbeatSeriesQuery queue_queryDidDeactivate:]
  -[HKHeartbeatSeriesQuery _enumerateHeartbeatsWithHandler:]
  -[HKHeartbeatSeriesQuery client_deliverHeartbeats]
  -[HKHeartbeatSeriesQuery initWithHeartbeatSeries:dataHandler:]


HKMedicalCodingCollection : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSArray *codings

  // class methods
  +[HKMedicalCodingCollection supportsSecureCoding]
  +[HKMedicalCodingCollection collectionWithCodings:]
  +[HKMedicalCodingCollection collectionWithCoding:]

  // instance methods
  -[HKMedicalCodingCollection init]
  -[HKMedicalCodingCollection isEqual:]
  -[HKMedicalCodingCollection copyWithZone:]
  -[HKMedicalCodingCollection encodeWithCoder:]
  -[HKMedicalCodingCollection initWithCoder:]
  -[HKMedicalCodingCollection .cxx_destruct]
  -[HKMedicalCodingCollection codings]
  -[HKMedicalCodingCollection initWithCodings:]


HKCodableQuantitySeries : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *values

  // class methods
  +[HKCodableQuantitySeries valuesType]

  // instance methods
  -[HKCodableQuantitySeries isEqual:]
  -[HKCodableQuantitySeries copyWithZone:]
  -[HKCodableQuantitySeries setValues:]
  -[HKCodableQuantitySeries values]
  -[HKCodableQuantitySeries .cxx_destruct]
  -[HKCodableQuantitySeries dictionaryRepresentation]
  -[HKCodableQuantitySeries writeTo:]
  -[HKCodableQuantitySeries mergeFrom:]
  -[HKCodableQuantitySeries readFrom:]
  -[HKCodableQuantitySeries copyTo:]
  -[HKCodableQuantitySeries valuesCount]
  -[HKCodableQuantitySeries clearValues]
  -[HKCodableQuantitySeries valuesAtIndex:]
  -[HKCodableQuantitySeries addValues:]


HKSleepAnalysis : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *sleepDays
 @property  long long numberOfAsleepSamples
 @property  long long consistencyCount
 @property  double averageEfficiency
 @property  double averageTimeInBed
 @property  double averageTimeAsleep
 @property  long long averageNumberOfInterruptions

  // class methods
  +[HKSleepAnalysis emptyAnalysis]

  // instance methods
  -[HKSleepAnalysis .cxx_destruct]
  -[HKSleepAnalysis initWithSleepDays:numberOfAsleepSamples:consistencyCount:averageEfficiency:averageTimeInBed:averageTimeAlseep:averageNumberOfInterruptions:]
  -[HKSleepAnalysis sleepDays]
  -[HKSleepAnalysis numberOfAsleepSamples]
  -[HKSleepAnalysis consistencyCount]
  -[HKSleepAnalysis averageEfficiency]
  -[HKSleepAnalysis averageTimeInBed]
  -[HKSleepAnalysis averageTimeAsleep]
  -[HKSleepAnalysis averageNumberOfInterruptions]


HKMedicalCodingContext : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  HKMedicalCodingCollection *collection
 @property  HKSampleType *sampleType
 @property  NSString *keyPath

  // class methods
  +[HKMedicalCodingContext supportsSecureCoding]
  +[HKMedicalCodingContext contextWithCodings:sampleType:keyPath:]
  +[HKMedicalCodingContext contextWithCollection:sampleType:keyPath:]

  // instance methods
  -[HKMedicalCodingContext init]
  -[HKMedicalCodingContext isEqual:]
  -[HKMedicalCodingContext copyWithZone:]
  -[HKMedicalCodingContext encodeWithCoder:]
  -[HKMedicalCodingContext initWithCoder:]
  -[HKMedicalCodingContext .cxx_destruct]
  -[HKMedicalCodingContext keyPath]
  -[HKMedicalCodingContext collection]
  -[HKMedicalCodingContext sampleType]
  -[HKMedicalCodingContext initWithCollection:sampleType:keyPath:]


HKTokenKeychainItem : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *name

  // class methods
  +[HKTokenKeychainItem _fetchTokenIdentifiedByName:error:]
  +[HKTokenKeychainItem _storeTokenIdentifiedByName:data:error:]
  +[HKTokenKeychainItem _deleteTokenIdentifiedByName:error:]
  +[HKTokenKeychainItem tokenKeychainItemSecurityClass]
  +[HKTokenKeychainItem _identifyingAttributesForKeyIdentifiedByName:]
  +[HKTokenKeychainItem _keyQueryAttributesForKeyIdentifiedByName:]
  +[HKTokenKeychainItem _storableAttributesForKeyIdentifiedByName:data:modificationDate:]

  // instance methods
  -[HKTokenKeychainItem init]
  -[HKTokenKeychainItem name]
  -[HKTokenKeychainItem .cxx_destruct]
  -[HKTokenKeychainItem initWithName:]
  -[HKTokenKeychainItem deleteWithError:]
  -[HKTokenKeychainItem fetchWithError:]
  -[HKTokenKeychainItem storeToken:error:]


HKSampleQuery : HKQuery <HKSampleQueryClientInterface>
 @property  @? resultHandler
 @property  BOOL includeAutomaticTimeZones
 @property  unsigned long limit
 @property  NSArray *sortDescriptors
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSampleQuery configurationClass]
  +[HKSampleQuery clientInterfaceProtocol]
  +[HKSampleQuery configureClientInterface:]

  // instance methods
  -[HKSampleQuery .cxx_destruct]
  -[HKSampleQuery sortDescriptors]
  -[HKSampleQuery limit]
  -[HKSampleQuery resultHandler]
  -[HKSampleQuery queue_validate]
  -[HKSampleQuery queue_deliverError:]
  -[HKSampleQuery queue_queryDidDeactivate:]
  -[HKSampleQuery initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:]
  -[HKSampleQuery queue_populateConfiguration:]
  -[HKSampleQuery _prepareSamplesForDelivery:error:]
  -[HKSampleQuery setIncludeAutomaticTimeZones:]
  -[HKSampleQuery client_deliverSamples:clearPendingSamples:isFinalBatch:queryUUID:]
  -[HKSampleQuery includeAutomaticTimeZones]


_HKSampleQueryConfiguration : HKQueryServerConfiguration
 @property  NSArray *sortDescriptors
 @property  unsigned long limit
 @property  BOOL includeAutomaticTimeZones

  // class methods
  +[_HKSampleQueryConfiguration supportsSecureCoding]

  // instance methods
  -[_HKSampleQueryConfiguration copyWithZone:]
  -[_HKSampleQueryConfiguration encodeWithCoder:]
  -[_HKSampleQueryConfiguration initWithCoder:]
  -[_HKSampleQueryConfiguration .cxx_destruct]
  -[_HKSampleQueryConfiguration sortDescriptors]
  -[_HKSampleQueryConfiguration setSortDescriptors:]
  -[_HKSampleQueryConfiguration limit]
  -[_HKSampleQueryConfiguration setLimit:]
  -[_HKSampleQueryConfiguration setIncludeAutomaticTimeZones:]
  -[_HKSampleQueryConfiguration includeAutomaticTimeZones]


HKConceptAttribute : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  long long identifier
 @property  NSString *name
 @property  HKConcept *concept
 @property  long long valueType
 @property  <NSCopying><NSSecureCoding> *value

  // class methods
  +[HKConceptAttribute supportsSecureCoding]
  +[HKConceptAttribute _attributeWithIdentifier:name:valueType:value:]
  +[HKConceptAttribute _attributeWithName:valueType:]

  // instance methods
  -[HKConceptAttribute init]
  -[HKConceptAttribute name]
  -[HKConceptAttribute copyWithZone:]
  -[HKConceptAttribute encodeWithCoder:]
  -[HKConceptAttribute initWithCoder:]
  -[HKConceptAttribute .cxx_destruct]
  -[HKConceptAttribute _init]
  -[HKConceptAttribute identifier]
  -[HKConceptAttribute value]
  -[HKConceptAttribute valueType]
  -[HKConceptAttribute _attributeBySettingConcept:]
  -[HKConceptAttribute concept]
  -[HKConceptAttribute _initWithIdentifier:name:valueType:value:]


HKDiscreteQuantitySample : HKQuantitySample
 @property  HKQuantity *minimumQuantity
 @property  HKQuantity *averageQuantity
 @property  HKQuantity *maximumQuantity
 @property  HKQuantity *mostRecentQuantity
 @property  NSDateInterval *mostRecentQuantityDateInterval
 @property  BOOL _hasMinimumQuantity
 @property  BOOL _hasMaximumQuantity
 @property  BOOL _hasMostRecentQuantity
 @property  BOOL _hasMostRecentQuantityDateInterval

  // class methods
  +[HKDiscreteQuantitySample supportsSecureCoding]
  +[HKDiscreteQuantitySample _isConcreteObjectClass]

  // instance methods
  -[HKDiscreteQuantitySample encodeWithCoder:]
  -[HKDiscreteQuantitySample initWithCoder:]
  -[HKDiscreteQuantitySample .cxx_destruct]
  -[HKDiscreteQuantitySample _validateConfigurationWithOptions:]
  -[HKDiscreteQuantitySample minimumQuantity]
  -[HKDiscreteQuantitySample _hasMinimumQuantity]
  -[HKDiscreteQuantitySample averageQuantity]
  -[HKDiscreteQuantitySample _setAverageQuantity:]
  -[HKDiscreteQuantitySample maximumQuantity]
  -[HKDiscreteQuantitySample _hasMaximumQuantity]
  -[HKDiscreteQuantitySample mostRecentQuantity]
  -[HKDiscreteQuantitySample _hasMostRecentQuantity]
  -[HKDiscreteQuantitySample mostRecentQuantityDateInterval]
  -[HKDiscreteQuantitySample _hasMostRecentQuantityDateInterval]
  -[HKDiscreteQuantitySample _setMinimumQuantity:]
  -[HKDiscreteQuantitySample _setMaximumQuantity:]
  -[HKDiscreteQuantitySample _setMostRecentQuantity:]
  -[HKDiscreteQuantitySample _setMostRecentQuantityDateInterval:]
  -[HKDiscreteQuantitySample set_hasMinimumQuantity:]
  -[HKDiscreteQuantitySample set_hasMaximumQuantity:]
  -[HKDiscreteQuantitySample set_hasMostRecentQuantity:]
  -[HKDiscreteQuantitySample set_hasMostRecentQuantityDateInterval:]


HKObjectAuthorizationPromptSession : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSUUID *sessionIdentifier
 @property  NSString *bundleIdentifier
 @property  NSArray *samplesRequiringAuthorization

  // class methods
  +[HKObjectAuthorizationPromptSession supportsSecureCoding]

  // instance methods
  -[HKObjectAuthorizationPromptSession encodeWithCoder:]
  -[HKObjectAuthorizationPromptSession initWithCoder:]
  -[HKObjectAuthorizationPromptSession .cxx_destruct]
  -[HKObjectAuthorizationPromptSession bundleIdentifier]
  -[HKObjectAuthorizationPromptSession sessionIdentifier]
  -[HKObjectAuthorizationPromptSession initForBundleIdentifier:samples:sessionIdentifier:]
  -[HKObjectAuthorizationPromptSession samplesRequiringAuthorization]


_HKTimePeriod : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying, _HKDateBounded>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HKTimePeriod supportsSecureCoding]
  +[_HKTimePeriod timePeriodWithStartDate:endDate:]

  // instance methods
  -[_HKTimePeriod isEqual:]
  -[_HKTimePeriod copyWithZone:]
  -[_HKTimePeriod encodeWithCoder:]
  -[_HKTimePeriod initWithCoder:]
  -[_HKTimePeriod .cxx_destruct]
  -[_HKTimePeriod startDate]
  -[_HKTimePeriod endDate]
  -[_HKTimePeriod initWithStartDate:endDate:]
  -[_HKTimePeriod containsDate:]
  -[_HKTimePeriod setStartDate:]
  -[_HKTimePeriod setEndDate:]
  -[_HKTimePeriod endsBeforeDate:]
  -[_HKTimePeriod startsAfterDate:]
  -[_HKTimePeriod containsTimePeriod:]
  -[_HKTimePeriod overlapsTimePeriod:]
  -[_HKTimePeriod compareByStartDate:]
  -[_HKTimePeriod compareByEndDate:]


HKClinicalRecord : HKSample <NSSecureCoding, NSCopying>
 @property  HKClinicalType *clinicalType
 @property  NSString *displayName
 @property  HKFHIRResource *FHIRResource

  // class methods
  +[HKClinicalRecord supportsSecureCoding]
  +[HKClinicalRecord supportsEquivalence]
  +[HKClinicalRecord _isConcreteObjectClass]
  +[HKClinicalRecord _newClinicalRecordWithType:startDate:endDate:device:metadata:displayName:FHIRResource:config:]
  +[HKClinicalRecord clinicalRecordWithType:startDate:endDate:device:metadata:displayName:FHIRResource:]

  // instance methods
  -[HKClinicalRecord init]
  -[HKClinicalRecord copyWithZone:]
  -[HKClinicalRecord encodeWithCoder:]
  -[HKClinicalRecord initWithCoder:]
  -[HKClinicalRecord .cxx_destruct]
  -[HKClinicalRecord displayName]
  -[HKClinicalRecord _setDisplayName:]
  -[HKClinicalRecord isEquivalent:]
  -[HKClinicalRecord _validateConfigurationWithOptions:]
  -[HKClinicalRecord FHIRResource]
  -[HKClinicalRecord _setFHIRResource:]
  -[HKClinicalRecord clinicalType]


_HKDateRangeQuery : HKQuery <HKDateRangeQueryClientInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HKDateRangeQuery clientInterfaceProtocol]
  +[_HKDateRangeQuery configureClientInterface:]

  // instance methods
  -[_HKDateRangeQuery .cxx_destruct]
  -[_HKDateRangeQuery initWithHandler:]
  -[_HKDateRangeQuery queue_validate]
  -[_HKDateRangeQuery queue_deliverError:]
  -[_HKDateRangeQuery queue_shouldDeactivateAfterInitialResults]
  -[_HKDateRangeQuery queue_queryDidDeactivate:]
  -[_HKDateRangeQuery client_deliverDateRangeDictionary:forQuery:]


HKPersistentTimer : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *fullTimerKey

  // class methods
  +[HKPersistentTimer _prefixedKeyWithTimerKey:]
  +[HKPersistentTimer timerWithKey:]

  // instance methods
  -[HKPersistentTimer clear]
  -[HKPersistentTimer .cxx_destruct]
  -[HKPersistentTimer start]
  -[HKPersistentTimer elapsedNanoseconds]
  -[HKPersistentTimer timerValue]
  -[HKPersistentTimer elapsedSeconds]
  -[HKPersistentTimer fullTimerKey]
  -[HKPersistentTimer setFullTimerKey:]


HKQuantitySeriesSampleBuilder : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable>
 @property  @? unitTest_insertQuantityCompletion
 @property  long long unitTest_state
 @property  HKQuantityType *quantityType
 @property  NSDate *startDate
 @property  HKDevice *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKQuantitySeriesSampleBuilder serverInterface]
  +[HKQuantitySeriesSampleBuilder _clientErrorForFinishedSeries]
  +[HKQuantitySeriesSampleBuilder _exceptionForPreviouslyDiscardedBuilder]

  // instance methods
  -[HKQuantitySeriesSampleBuilder init]
  -[HKQuantitySeriesSampleBuilder .cxx_destruct]
  -[HKQuantitySeriesSampleBuilder startDate]
  -[HKQuantitySeriesSampleBuilder exportedInterface]
  -[HKQuantitySeriesSampleBuilder device]
  -[HKQuantitySeriesSampleBuilder quantityType]
  -[HKQuantitySeriesSampleBuilder connectionInvalidated]
  -[HKQuantitySeriesSampleBuilder remoteInterface]
  -[HKQuantitySeriesSampleBuilder discard]
  -[HKQuantitySeriesSampleBuilder _validateQuantity:error:]
  -[HKQuantitySeriesSampleBuilder _validateDateInterval:error:]
  -[HKQuantitySeriesSampleBuilder _changeStateForInsertWithError:]
  -[HKQuantitySeriesSampleBuilder _insertQuantity:dateInterval:error:]
  -[HKQuantitySeriesSampleBuilder insertQuantity:dateInterval:error:]
  -[HKQuantitySeriesSampleBuilder _changeStateForFinishWithError:]
  -[HKQuantitySeriesSampleBuilder _finishSeriesWithMetadata:endDate:completion:]
  -[HKQuantitySeriesSampleBuilder finishSeriesWithMetadata:endDate:completion:]
  -[HKQuantitySeriesSampleBuilder _discardWithCompletion:]
  -[HKQuantitySeriesSampleBuilder _changeStateForFatalError:]
  -[HKQuantitySeriesSampleBuilder _taskServer_insertQuantitySeries:completion:]
  -[HKQuantitySeriesSampleBuilder _taskServer_finishSeriesWithMetadata:endDate:finalSeries:completion:]
  -[HKQuantitySeriesSampleBuilder _changeStateForDiscardWithError:]
  -[HKQuantitySeriesSampleBuilder _taskServer_discardWithCompletion:]
  -[HKQuantitySeriesSampleBuilder _queue_clientErrorForFatalError]
  -[HKQuantitySeriesSampleBuilder initWithHealthStore:quantityType:startDate:device:]
  -[HKQuantitySeriesSampleBuilder insertQuantity:date:error:]
  -[HKQuantitySeriesSampleBuilder finishSeriesWithMetadata:completion:]
  -[HKQuantitySeriesSampleBuilder unitTest_discardWithCompletion:]
  -[HKQuantitySeriesSampleBuilder unitTest_state]
  -[HKQuantitySeriesSampleBuilder unitTest_setBatchSize:]
  -[HKQuantitySeriesSampleBuilder unitTest_insertQuantityCompletion]
  -[HKQuantitySeriesSampleBuilder setUnitTest_insertQuantityCompletion:]


HKQuantitySeriesSampleBuilderTaskServerConfiguration : HKTaskConfiguration
 @property  HKQuantityType *quantityType
 @property  NSDate *startDate
 @property  HKDevice *device

  // class methods
  +[HKQuantitySeriesSampleBuilderTaskServerConfiguration supportsSecureCoding]

  // instance methods
  -[HKQuantitySeriesSampleBuilderTaskServerConfiguration copyWithZone:]
  -[HKQuantitySeriesSampleBuilderTaskServerConfiguration encodeWithCoder:]
  -[HKQuantitySeriesSampleBuilderTaskServerConfiguration initWithCoder:]
  -[HKQuantitySeriesSampleBuilderTaskServerConfiguration .cxx_destruct]
  -[HKQuantitySeriesSampleBuilderTaskServerConfiguration startDate]
  -[HKQuantitySeriesSampleBuilderTaskServerConfiguration device]
  -[HKQuantitySeriesSampleBuilderTaskServerConfiguration setStartDate:]
  -[HKQuantitySeriesSampleBuilderTaskServerConfiguration quantityType]
  -[HKQuantitySeriesSampleBuilderTaskServerConfiguration setQuantityType:]
  -[HKQuantitySeriesSampleBuilderTaskServerConfiguration setDevice:]
  -[HKQuantitySeriesSampleBuilderTaskServerConfiguration initWithQuantityType:startDate:device:]


HKFHIRIdentifier : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *resourceType
 @property  NSString *identifier
 @property  NSString *stringValue

  // class methods
  +[HKFHIRIdentifier supportsSecureCoding]
  +[HKFHIRIdentifier FHIRIdentifierWithString:error:]

  // instance methods
  -[HKFHIRIdentifier init]
  -[HKFHIRIdentifier isEqual:]
  -[HKFHIRIdentifier copyWithZone:]
  -[HKFHIRIdentifier encodeWithCoder:]
  -[HKFHIRIdentifier initWithCoder:]
  -[HKFHIRIdentifier stringValue]
  -[HKFHIRIdentifier .cxx_destruct]
  -[HKFHIRIdentifier identifier]
  -[HKFHIRIdentifier resourceType]
  -[HKFHIRIdentifier initWithResourceType:identifier:]
  -[HKFHIRIdentifier identifierForContainedResourceWithIdentifier:error:]
  -[HKFHIRIdentifier parentResourceIdentifierWithError:]
  -[HKFHIRIdentifier SQLWildcardIdentifierForContainedResources]
  -[HKFHIRIdentifier SQLWildcardIdentifierForContainedResourcesIdentifierOnly]


HKHealthService : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  double lastConnection
 @property  NSString *serviceId
 @property  NSData *advertisementData
 @property  CBPeripheral *peripheral
 @property  long long type
 @property  NSUUID *identifier
 @property  NSString *name

  // class methods
  +[HKHealthService supportsSecureCoding]

  // instance methods
  -[HKHealthService init]
  -[HKHealthService isEqual:]
  -[HKHealthService name]
  -[HKHealthService copyWithZone:]
  -[HKHealthService type]
  -[HKHealthService encodeWithCoder:]
  -[HKHealthService initWithCoder:]
  -[HKHealthService .cxx_destruct]
  -[HKHealthService identifier]
  -[HKHealthService advertisementData]
  -[HKHealthService setAdvertisementData:]
  -[HKHealthService initWithType:identifier:name:]
  -[HKHealthService lastConnection]
  -[HKHealthService serviceId]
  -[HKHealthService _initWithType:identifier:name:serviceId:]
  -[HKHealthService _localizedHealthServiceType]
  -[HKHealthService initUnknownServiceWithIdentifier:name:serviceId:]
  -[HKHealthService setLastConnection:]
  -[HKHealthService setServiceId:]
  -[HKHealthService peripheral]
  -[HKHealthService setPeripheral:]


HKBloodTypeObject : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  long long bloodType

  // class methods
  +[HKBloodTypeObject supportsSecureCoding]

  // instance methods
  -[HKBloodTypeObject isEqual:]
  -[HKBloodTypeObject copyWithZone:]
  -[HKBloodTypeObject encodeWithCoder:]
  -[HKBloodTypeObject initWithCoder:]
  -[HKBloodTypeObject _initWithBloodType:]
  -[HKBloodTypeObject bloodType]


HKBiologicalSexObject : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  long long biologicalSex

  // class methods
  +[HKBiologicalSexObject supportsSecureCoding]

  // instance methods
  -[HKBiologicalSexObject isEqual:]
  -[HKBiologicalSexObject copyWithZone:]
  -[HKBiologicalSexObject encodeWithCoder:]
  -[HKBiologicalSexObject initWithCoder:]
  -[HKBiologicalSexObject _initWithBiologicalSex:]
  -[HKBiologicalSexObject biologicalSex]


HKFitzpatrickSkinTypeObject : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  long long skinType

  // class methods
  +[HKFitzpatrickSkinTypeObject supportsSecureCoding]

  // instance methods
  -[HKFitzpatrickSkinTypeObject isEqual:]
  -[HKFitzpatrickSkinTypeObject copyWithZone:]
  -[HKFitzpatrickSkinTypeObject encodeWithCoder:]
  -[HKFitzpatrickSkinTypeObject initWithCoder:]
  -[HKFitzpatrickSkinTypeObject _initWithSkinType:]
  -[HKFitzpatrickSkinTypeObject skinType]


HKWheelchairUseObject : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  long long wheelchairUse

  // class methods
  +[HKWheelchairUseObject supportsSecureCoding]

  // instance methods
  -[HKWheelchairUseObject isEqual:]
  -[HKWheelchairUseObject copyWithZone:]
  -[HKWheelchairUseObject encodeWithCoder:]
  -[HKWheelchairUseObject initWithCoder:]
  -[HKWheelchairUseObject _initWithWheelchairUse:]
  -[HKWheelchairUseObject wheelchairUse]


HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionGreaterThanRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  {?=qqq} targetVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionGreaterThanRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionGreaterThanRule targetVersion]
  -[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionGreaterThanRule setTargetVersion:]
  -[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionGreaterThanRule evaluate]
  -[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionGreaterThanRule processUserInfo:]


_HKCFGNode : NSObject /usr/lib/libc++.1.dylib
 @property  {_NSRange=QQ} rangeOfString

  // instance methods
  -[_HKCFGNode evaluate]
  -[_HKCFGNode initWithRangeOfString:]
  -[_HKCFGNode rangeOfString]
  -[_HKCFGNode setRangeOfString:]


_HKCFGNonTerminalNode : _HKCFGNode
 @property  _HKCFGReplacementRule *rule

  // class methods
  +[_HKCFGNonTerminalNode nodeWithChildren:rule:rangeOfString:]

  // instance methods
  -[_HKCFGNonTerminalNode .cxx_destruct]
  -[_HKCFGNonTerminalNode rule]
  -[_HKCFGNonTerminalNode evaluate]


_HKCFGTerminalNode : _HKCFGNode
  // class methods
  +[_HKCFGTerminalNode nodeWithValue:rangeOfString:]

  // instance methods
  -[_HKCFGTerminalNode .cxx_destruct]
  -[_HKCFGTerminalNode evaluate]


_HKCFGEmptyStringNode : _HKCFGNode
  // class methods
  +[_HKCFGEmptyStringNode nodeWithEvaluator:]

  // instance methods
  -[_HKCFGEmptyStringNode .cxx_destruct]
  -[_HKCFGEmptyStringNode evaluate]


_HKCFGNodeCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_HKCFGNodeCache init]
  -[_HKCFGNodeCache .cxx_destruct]
  -[_HKCFGNodeCache nodesForPosition:nonTerminal:withLengthAllowance:]
  -[_HKCFGNodeCache cacheNodes:forPosition:nonTerminal:lengthAllowance:]


_HKCFGParseContext : NSObject /usr/lib/libc++.1.dylib
 @property  NSScanner *scanner
 @property  unsigned long lengthAllowance
 @property  unsigned long recursiveDepth
 @property  _HKCFGNodeCache *cache

  // instance methods
  -[_HKCFGParseContext .cxx_destruct]
  -[_HKCFGParseContext cache]
  -[_HKCFGParseContext initWithScanner:lengthAllowance:]
  -[_HKCFGParseContext incrementRecursiveDepth]
  -[_HKCFGParseContext decrementRecursiveDepth]
  -[_HKCFGParseContext decreaseLengthAllowance:]
  -[_HKCFGParseContext increaseLengthAllowance:]
  -[_HKCFGParseContext scanner]
  -[_HKCFGParseContext lengthAllowance]
  -[_HKCFGParseContext recursiveDepth]


_HKCFGExpression : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL isPrivate

  // instance methods
  -[_HKCFGExpression _label]
  -[_HKCFGExpression isPrivate]
  -[_HKCFGExpression _minimumLength]
  -[_HKCFGExpression _tryNodesWithContext:solutionTest:]
  -[_HKCFGExpression setIsPrivate:]


_HKCFGReplacementRule : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *rightHandSide
 @property  @? nodeEvaluator
 @property  unsigned long lengthIncrease

  // class methods
  +[_HKCFGReplacementRule ruleWithLHS:RHS:nodeEvaluator:]

  // instance methods
  -[_HKCFGReplacementRule .cxx_destruct]
  -[_HKCFGReplacementRule nodeEvaluator]
  -[_HKCFGReplacementRule rightHandSide]
  -[_HKCFGReplacementRule setRightHandSide:]
  -[_HKCFGReplacementRule lengthIncrease]


_HKCFGNonTerminal : _HKCFGExpression
 @property  NSCharacterSet *charactersToBeSkipped

  // class methods
  +[_HKCFGNonTerminal nonTerminalWithLabel:]

  // instance methods
  -[_HKCFGNonTerminal _invalidate]
  -[_HKCFGNonTerminal .cxx_destruct]
  -[_HKCFGNonTerminal setCharactersToBeSkipped:]
  -[_HKCFGNonTerminal charactersToBeSkipped]
  -[_HKCFGNonTerminal _label]
  -[_HKCFGNonTerminal initWithLabel:]
  -[_HKCFGNonTerminal _minimumLength]
  -[_HKCFGNonTerminal _tryNodesWithContext:solutionTest:]
  -[_HKCFGNonTerminal _tryNodesForExpressions:nodes:context:solutionTest:]
  -[_HKCFGNonTerminal _checkForCycles:]
  -[_HKCFGNonTerminal addReplacementRuleWithExpressions:nodeEvaluator:]
  -[_HKCFGNonTerminal _parseTreeWithContext:]
  -[_HKCFGNonTerminal _replacementRules]
  -[_HKCFGNonTerminal _checkForCycles]


_HKCFGTerminal : _HKCFGExpression
  // class methods
  +[_HKCFGTerminal terminalMatchingString:]
  +[_HKCFGTerminal terminalMatchingString:caseSensitive:]
  +[_HKCFGTerminal terminalMatchingCharacterInSet:]
  +[_HKCFGTerminal _terminalMatchingIntegerWithCondition:]
  +[_HKCFGTerminal _terminalMatchingDoubleWithCondition:]
  +[_HKCFGTerminal terminalMatchingCharacterInString:]
  +[_HKCFGTerminal terminalMatchingAnyInteger]
  +[_HKCFGTerminal terminalMatchingIntegerWithCondition:]
  +[_HKCFGTerminal terminalMatchingAnyDouble]
  +[_HKCFGTerminal terminalMatchingDoubleWithCondition:]
  +[_HKCFGTerminal terminalMatchingSequenceOfCharactersInSet:]

  // instance methods
  -[_HKCFGTerminal _label]
  -[_HKCFGTerminal characterSet]
  -[_HKCFGTerminal _minimumLength]
  -[_HKCFGTerminal _tryNodesWithContext:solutionTest:]
  -[_HKCFGTerminal _scanValue:withScanner:]


_HKCFGStringTerminal : _HKCFGTerminal
 @property  NSString *string
 @property  BOOL caseSensitive

  // instance methods
  -[_HKCFGStringTerminal string]
  -[_HKCFGStringTerminal setString:]
  -[_HKCFGStringTerminal .cxx_destruct]
  -[_HKCFGStringTerminal caseSensitive]
  -[_HKCFGStringTerminal setCaseSensitive:]
  -[_HKCFGStringTerminal _label]
  -[_HKCFGStringTerminal characterSet]
  -[_HKCFGStringTerminal _minimumLength]
  -[_HKCFGStringTerminal _scanValue:withScanner:]


_HKCFGCharacterTerminal : _HKCFGTerminal
 @property  NSCharacterSet *characterSet

  // instance methods
  -[_HKCFGCharacterTerminal .cxx_destruct]
  -[_HKCFGCharacterTerminal _label]
  -[_HKCFGCharacterTerminal characterSet]
  -[_HKCFGCharacterTerminal _minimumLength]
  -[_HKCFGCharacterTerminal setCharacterSet:]
  -[_HKCFGCharacterTerminal _scanValue:withScanner:]


_HKCFGIntegerTerminal : _HKCFGTerminal
 @property  @? condition

  // instance methods
  -[_HKCFGIntegerTerminal .cxx_destruct]
  -[_HKCFGIntegerTerminal condition]
  -[_HKCFGIntegerTerminal _label]
  -[_HKCFGIntegerTerminal setCondition:]
  -[_HKCFGIntegerTerminal characterSet]
  -[_HKCFGIntegerTerminal _minimumLength]
  -[_HKCFGIntegerTerminal _scanValue:withScanner:]


_HKCFGDoubleTerminal : _HKCFGTerminal
 @property  @? condition

  // instance methods
  -[_HKCFGDoubleTerminal .cxx_destruct]
  -[_HKCFGDoubleTerminal condition]
  -[_HKCFGDoubleTerminal _label]
  -[_HKCFGDoubleTerminal setCondition:]
  -[_HKCFGDoubleTerminal characterSet]
  -[_HKCFGDoubleTerminal _minimumLength]
  -[_HKCFGDoubleTerminal _scanValue:withScanner:]


_HKCFGCharacterSequenceTerminal : _HKCFGTerminal
 @property  NSCharacterSet *characterSet

  // instance methods
  -[_HKCFGCharacterSequenceTerminal .cxx_destruct]
  -[_HKCFGCharacterSequenceTerminal _label]
  -[_HKCFGCharacterSequenceTerminal characterSet]
  -[_HKCFGCharacterSequenceTerminal _minimumLength]
  -[_HKCFGCharacterSequenceTerminal setCharacterSet:]
  -[_HKCFGCharacterSequenceTerminal _scanValue:withScanner:]


_HKContextFreeGrammar : NSObject /usr/lib/libc++.1.dylib
 @property  _HKCFGNonTerminal *rootNonTerminal
 @property  @? emptyStringEvaluator

  // class methods
  +[_HKContextFreeGrammar grammarWithRootNonTerminal:emptyStringEvaluator:]
  +[_HKContextFreeGrammar grammarWithRootNonTerminal:]

  // instance methods
  -[_HKContextFreeGrammar invalidate]
  -[_HKContextFreeGrammar .cxx_destruct]
  -[_HKContextFreeGrammar initWithRootNonTerminal:emptyStringEvaluator:]
  -[_HKContextFreeGrammar _gatherExpressions]
  -[_HKContextFreeGrammar _gatherExpressionsStartingAt:]
  -[_HKContextFreeGrammar parseTreeForString:]
  -[_HKContextFreeGrammar rootNonTerminal]
  -[_HKContextFreeGrammar emptyStringEvaluator]


HKObserverQuery : HKQuery <HKObserverQueryClientInterface>
 @property  @? updateHandler
 @property  BOOL observeUnfrozenSeries
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKObserverQuery configurationClass]
  +[HKObserverQuery clientInterfaceProtocol]

  // instance methods
  -[HKObserverQuery .cxx_destruct]
  -[HKObserverQuery updateHandler]
  -[HKObserverQuery queue_validate]
  -[HKObserverQuery queue_deliverError:]
  -[HKObserverQuery queue_shouldDeactivateAfterInitialResults]
  -[HKObserverQuery queue_queryDidDeactivate:]
  -[HKObserverQuery queue_populateConfiguration:]
  -[HKObserverQuery setObserveUnfrozenSeries:]
  -[HKObserverQuery client_dataUpdatedInDatabaseWithAnchor:query:]
  -[HKObserverQuery initWithSampleType:predicate:updateHandler:]
  -[HKObserverQuery observeUnfrozenSeries]


_HKObserverQueryServerConfiguration : HKQueryServerConfiguration
 @property  BOOL observeUnfrozenSeries

  // class methods
  +[_HKObserverQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKObserverQueryServerConfiguration copyWithZone:]
  -[_HKObserverQueryServerConfiguration encodeWithCoder:]
  -[_HKObserverQueryServerConfiguration initWithCoder:]
  -[_HKObserverQueryServerConfiguration setObserveUnfrozenSeries:]
  -[_HKObserverQueryServerConfiguration observeUnfrozenSeries]


HKDaemonTransaction : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *name

  // class methods
  +[HKDaemonTransaction transactionWithName:]
  +[HKDaemonTransaction transactionWithOwner:]
  +[HKDaemonTransaction transactionWithOwner:activityName:]

  // instance methods
  -[HKDaemonTransaction init]
  -[HKDaemonTransaction dealloc]
  -[HKDaemonTransaction name]
  -[HKDaemonTransaction invalidate]
  -[HKDaemonTransaction .cxx_destruct]
  -[HKDaemonTransaction _initWithName:]


HKWorkoutDataSource : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HKWorkoutDataSource observedTypesForActivityType:isIndoor:connectedToFitnessMachine:]
  +[HKWorkoutDataSource _distanceTypeForActivityType:isIndoor:]


HKWorkoutDataSourceConfiguration : HKTaskConfiguration
 @property  HKWorkoutConfiguration *workoutConfiguration
 @property  NSSet *sampleTypesToCollect
 @property  NSDictionary *filtersBySampleType
 @property  NSSet *eventTypesToCollect

  // class methods
  +[HKWorkoutDataSourceConfiguration supportsSecureCoding]

  // instance methods
  -[HKWorkoutDataSourceConfiguration copyWithZone:]
  -[HKWorkoutDataSourceConfiguration encodeWithCoder:]
  -[HKWorkoutDataSourceConfiguration initWithCoder:]
  -[HKWorkoutDataSourceConfiguration .cxx_destruct]
  -[HKWorkoutDataSourceConfiguration workoutConfiguration]
  -[HKWorkoutDataSourceConfiguration initWithWorkoutConfiguration:sampleTypesToCollect:filters:eventTypesToCollect:]
  -[HKWorkoutDataSourceConfiguration sampleTypesToCollect]
  -[HKWorkoutDataSourceConfiguration filtersBySampleType]
  -[HKWorkoutDataSourceConfiguration eventTypesToCollect]


HKCloudSyncObserverStatus : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  BOOL syncEnabled
 @property  NSDate *lastPullDate
 @property  NSDate *lastPushDate
 @property  NSDate *restoreCompletionDate
 @property  NSError *errorRequiringUserAction

  // class methods
  +[HKCloudSyncObserverStatus supportsSecureCoding]

  // instance methods
  -[HKCloudSyncObserverStatus copyWithZone:]
  -[HKCloudSyncObserverStatus encodeWithCoder:]
  -[HKCloudSyncObserverStatus initWithCoder:]
  -[HKCloudSyncObserverStatus .cxx_destruct]
  -[HKCloudSyncObserverStatus setSyncEnabled:]
  -[HKCloudSyncObserverStatus setLastPullDate:]
  -[HKCloudSyncObserverStatus setLastPushDate:]
  -[HKCloudSyncObserverStatus setRestoreCompletionDate:]
  -[HKCloudSyncObserverStatus setErrorRequiringUserAction:]
  -[HKCloudSyncObserverStatus syncEnabled]
  -[HKCloudSyncObserverStatus lastPullDate]
  -[HKCloudSyncObserverStatus lastPushDate]
  -[HKCloudSyncObserverStatus restoreCompletionDate]
  -[HKCloudSyncObserverStatus errorRequiringUserAction]


HKCloudSyncObserver : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable, HKCloudSyncObserverClientInterface>
 @property  <HKCloudSyncObserverDelegate> *delegate
 @property  HKCloudSyncObserverStatus *status
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKCloudSyncObserver serverInterface]
  +[HKCloudSyncObserver clientInterface]

  // instance methods
  -[HKCloudSyncObserver delegate]
  -[HKCloudSyncObserver setDelegate:]
  -[HKCloudSyncObserver .cxx_destruct]
  -[HKCloudSyncObserver progress]
  -[HKCloudSyncObserver status]
  -[HKCloudSyncObserver exportedInterface]
  -[HKCloudSyncObserver setStatus:]
  -[HKCloudSyncObserver setProgress:]
  -[HKCloudSyncObserver connectionInvalidated]
  -[HKCloudSyncObserver remoteInterface]
  -[HKCloudSyncObserver setObservingSyncStatus:]
  -[HKCloudSyncObserver didCompleteSyncWithStatus:error:]
  -[HKCloudSyncObserver isObservingSyncStatus]
  -[HKCloudSyncObserver clientRemote_syncDidStart]
  -[HKCloudSyncObserver clientRemote_didUpdateObserverWithSyncStatus:]
  -[HKCloudSyncObserver initWithHealthStore:delegate:]
  -[HKCloudSyncObserver startObservingSyncStatus]
  -[HKCloudSyncObserver startSyncIfRestoreNotCompleted]


HKCDADocumentSample : HKDocumentSample
 @property  HKCDADocument *document

  // class methods
  +[HKCDADocumentSample supportsSecureCoding]
  +[HKCDADocumentSample _globStringToRegexString:]
  +[HKCDADocumentSample CDADocumentSampleWithData:startDate:endDate:metadata:validationError:]
  +[HKCDADocumentSample _isValidCDAKeyPath:]
  +[HKCDADocumentSample _isValidOperatorType:]
  +[HKCDADocumentSample _comparisonExpressionForValue:operatorType:]

  // instance methods
  -[HKCDADocumentSample encodeWithCoder:]
  -[HKCDADocumentSample initWithCoder:]
  -[HKCDADocumentSample .cxx_destruct]
  -[HKCDADocumentSample document]
  -[HKCDADocumentSample _validateConfigurationWithOptions:]
  -[HKCDADocumentSample prepareForSaving:]
  -[HKCDADocumentSample prepareForDelivery:]
  -[HKCDADocumentSample _processDocumentData:extractedFields:]
  -[HKCDADocumentSample _validateDocumentContentWithError:]
  -[HKCDADocumentSample _fieldValueForKeyPath:]
  -[HKCDADocumentSample _omittedContentFlags]
  -[HKCDADocumentSample _applyPropertiesWithOmittedFlags:compressedDocumentData:title:patientName:authorName:custodianName:]
  -[HKCDADocumentSample _predicateMatchForKeyPath:operatorType:pattern:]


HKCDADocument : NSObject /usr/lib/libc++.1.dylib
 @property  NSData *documentData
 @property  NSString *title
 @property  NSString *patientName
 @property  NSString *authorName
 @property  NSString *custodianName

  // instance methods
  -[HKCDADocument .cxx_destruct]
  -[HKCDADocument title]
  -[HKCDADocument documentData]
  -[HKCDADocument _validateConfiguration]
  -[HKCDADocument _compressDocumentDataForTransfer:]
  -[HKCDADocument _decompressDocumentDataForDelivery:]
  -[HKCDADocument initWithDocumentData:compressedDocumentData:title:patientName:authorName:custodianName:]
  -[HKCDADocument initWithCoder:omittedContentFlags:]
  -[HKCDADocument encodeWithCoder:omittedContentFlags:]
  -[HKCDADocument patientName]
  -[HKCDADocument authorName]
  -[HKCDADocument custodianName]
  -[HKCDADocument _descriptionFieldTitle:content:maxSize:]
  -[HKCDADocument _compressedDocumentData]


_HKCDADocumentExtractedFields : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *extractedDate
 @property  NSString *extractedTitle
 @property  NSString *extractedPatient
 @property  NSString *extractedAuthorName
 @property  NSString *extractedCustodianName

  // instance methods
  -[_HKCDADocumentExtractedFields .cxx_destruct]
  -[_HKCDADocumentExtractedFields initWithDocumentData:]
  -[_HKCDADocumentExtractedFields extractedDate]
  -[_HKCDADocumentExtractedFields extractedTitle]
  -[_HKCDADocumentExtractedFields extractedPatient]
  -[_HKCDADocumentExtractedFields extractedAuthorName]
  -[_HKCDADocumentExtractedFields extractedCustodianName]
  -[_HKCDADocumentExtractedFields extractHeaderFieldsFromDocumentData:]
  -[_HKCDADocumentExtractedFields _firstFrom:tagRule:nilOnFail:]
  -[_HKCDADocumentExtractedFields _parseCDADate:]
  -[_HKCDADocumentExtractedFields _personNameFrom:familyTagRule:givenTagRule:nilOnFail:]


_HKStringSample : HKSample <_HKBinarySample>
 @property  _HKStringSampleType *stringType
 @property  NSString *stringValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HKStringSample supportsSecureCoding]
  +[_HKStringSample _isConcreteObjectClass]
  +[_HKStringSample stringSampleWithType:stringValue:startDate:endDate:device:metadata:]

  // instance methods
  -[_HKStringSample encodeWithCoder:]
  -[_HKStringSample initWithCoder:]
  -[_HKStringSample stringValue]
  -[_HKStringSample .cxx_destruct]
  -[_HKStringSample payload]
  -[_HKStringSample stringType]
  -[_HKStringSample _setPayload:]


HKQuerySortConstraint : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSSortDescriptor *sortDescriptor
 @property  NSComparisonPredicate *predicate

  // class methods
  +[HKQuerySortConstraint supportsSecureCoding]
  +[HKQuerySortConstraint sortConstraintWithSortDescriptor:predicate:]
  +[HKQuerySortConstraint sortConstraintByRelaxingSortConstraint:error:]

  // instance methods
  -[HKQuerySortConstraint init]
  -[HKQuerySortConstraint isEqual:]
  -[HKQuerySortConstraint copyWithZone:]
  -[HKQuerySortConstraint encodeWithCoder:]
  -[HKQuerySortConstraint initWithCoder:]
  -[HKQuerySortConstraint .cxx_destruct]
  -[HKQuerySortConstraint predicate]
  -[HKQuerySortConstraint sortDescriptor]
  -[HKQuerySortConstraint initWithSortDescriptor:predicate:]
  -[HKQuerySortConstraint canRelax]


HKCodableQuantitySeriesEnumerationResultCollection : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *results
 @property  BOOL hasLatestSampleStartTime
 @property  double latestSampleStartTime

  // class methods
  +[HKCodableQuantitySeriesEnumerationResultCollection resultsType]

  // instance methods
  -[HKCodableQuantitySeriesEnumerationResultCollection isEqual:]
  -[HKCodableQuantitySeriesEnumerationResultCollection copyWithZone:]
  -[HKCodableQuantitySeriesEnumerationResultCollection .cxx_destruct]
  -[HKCodableQuantitySeriesEnumerationResultCollection results]
  -[HKCodableQuantitySeriesEnumerationResultCollection dictionaryRepresentation]
  -[HKCodableQuantitySeriesEnumerationResultCollection writeTo:]
  -[HKCodableQuantitySeriesEnumerationResultCollection mergeFrom:]
  -[HKCodableQuantitySeriesEnumerationResultCollection readFrom:]
  -[HKCodableQuantitySeriesEnumerationResultCollection copyTo:]
  -[HKCodableQuantitySeriesEnumerationResultCollection setResults:]
  -[HKCodableQuantitySeriesEnumerationResultCollection addResults:]
  -[HKCodableQuantitySeriesEnumerationResultCollection clearResults]
  -[HKCodableQuantitySeriesEnumerationResultCollection resultsCount]
  -[HKCodableQuantitySeriesEnumerationResultCollection resultsAtIndex:]
  -[HKCodableQuantitySeriesEnumerationResultCollection setLatestSampleStartTime:]
  -[HKCodableQuantitySeriesEnumerationResultCollection setHasLatestSampleStartTime:]
  -[HKCodableQuantitySeriesEnumerationResultCollection hasLatestSampleStartTime]
  -[HKCodableQuantitySeriesEnumerationResultCollection latestSampleStartTime]


HKHealthWrapMessageConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSUUID *subjectUUID
 @property  NSUUID *studyUUID
 @property  NSString *channel
 @property  NSString *payloadType
 @property  ^{__SecCertificate=} certificate
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSString *payloadIdentifier
 @property  NSData *applicationData
 @property  NSDictionary *keyValuePairs
 @property  BOOL disableCompression

  // instance methods
  -[HKHealthWrapMessageConfiguration dealloc]
  -[HKHealthWrapMessageConfiguration .cxx_destruct]
  -[HKHealthWrapMessageConfiguration startDate]
  -[HKHealthWrapMessageConfiguration endDate]
  -[HKHealthWrapMessageConfiguration certificate]
  -[HKHealthWrapMessageConfiguration setStartDate:]
  -[HKHealthWrapMessageConfiguration setEndDate:]
  -[HKHealthWrapMessageConfiguration channel]
  -[HKHealthWrapMessageConfiguration applicationData]
  -[HKHealthWrapMessageConfiguration setApplicationData:]
  -[HKHealthWrapMessageConfiguration setPayloadType:]
  -[HKHealthWrapMessageConfiguration payloadType]
  -[HKHealthWrapMessageConfiguration initWithChannel:payloadType:certificate:]
  -[HKHealthWrapMessageConfiguration initWithSubjectUUID:studyUUID:channel:payloadType:certificate:]
  -[HKHealthWrapMessageConfiguration subjectUUID]
  -[HKHealthWrapMessageConfiguration studyUUID]
  -[HKHealthWrapMessageConfiguration payloadIdentifier]
  -[HKHealthWrapMessageConfiguration setPayloadIdentifier:]
  -[HKHealthWrapMessageConfiguration keyValuePairs]
  -[HKHealthWrapMessageConfiguration setKeyValuePairs:]
  -[HKHealthWrapMessageConfiguration disableCompression]
  -[HKHealthWrapMessageConfiguration setDisableCompression:]


HKHealthWrapMessage : NSObject /usr/lib/libc++.1.dylib <_HKStreamingDestination>
 @property  HKHealthWrapMessageConfiguration *configuration

  // class methods
  +[HKHealthWrapMessage newOutputFileURL]
  +[HKHealthWrapMessage newOutputFileURLInDirectory:]

  // instance methods
  -[HKHealthWrapMessage dealloc]
  -[HKHealthWrapMessage .cxx_destruct]
  -[HKHealthWrapMessage reset]
  -[HKHealthWrapMessage configuration]
  -[HKHealthWrapMessage initWithConfiguration:]
  -[HKHealthWrapMessage _cleanup]
  -[HKHealthWrapMessage _finalize]
  -[HKHealthWrapMessage startWithError:]
  -[HKHealthWrapMessage initWithSenderUUID:studyUUID:channel:payloadType:startDate:endDate:payloadIdentifier:applicationData:certificate:]
  -[HKHealthWrapMessage _codableKeyValuePairsFromDictionary:]
  -[HKHealthWrapMessage startWithOutputFileURL:error:]
  -[HKHealthWrapMessage _writeDataToCompressor:]
  -[HKHealthWrapMessage _run:error:]
  -[HKHealthWrapMessage appendData:error:]
  -[HKHealthWrapMessage finalizeWithError:]
  -[HKHealthWrapMessage receiveSinkContent:]
  -[HKHealthWrapMessage sinkContentFinished]
  -[HKHealthWrapMessage appendDataFromFileURL:error:]


HKFeatureAvailabilityWatchRegionEqualsRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  NSString *regionCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityWatchRegionEqualsRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityWatchRegionEqualsRule .cxx_destruct]
  -[HKFeatureAvailabilityWatchRegionEqualsRule setRegionCode:]
  -[HKFeatureAvailabilityWatchRegionEqualsRule regionCode]
  -[HKFeatureAvailabilityWatchRegionEqualsRule evaluate]
  -[HKFeatureAvailabilityWatchRegionEqualsRule processUserInfo:]


HKSource : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *owningAppBundleIdentifier
 @property  NSNumber *sourceID
 @property  BOOL localDevice
 @property  NSString *productType
 @property  unsigned long options
 @property  NSString *name
 @property  NSString *bundleIdentifier

  // class methods
  +[HKSource supportsSecureCoding]
  +[HKSource _applicationNameForBundleIdentifier:]
  +[HKSource _privateSourceForClinicalAccountIdentifier:name:]
  +[HKSource _publicSourceForGatewayExternalIdentifier:name:]
  +[HKSource _uncachedDefaultSource]
  +[HKSource _uncachedDefaultSourceWithEntitlements:]
  +[HKSource _sourceBundleIdentifierWithEntitlements:processBundleIdentifier:isExtension:]
  +[HKSource _representsCurrentDeviceWithBundleIdentifier:]
  +[HKSource _sourceOptionsForAppEntitlements:]
  +[HKSource _currentSourceProductType:]
  +[HKSource _sourceNameWithRepresentsCurrentDevice:defaultSource:]
  +[HKSource _generateIdentifierForAppleDeviceWithUUID:]
  +[HKSource _sourceWithBundleIdentifier:name:productType:options:]
  +[HKSource _researchStudiesDirectoryURL]
  +[HKSource defaultSource]
  +[HKSource _localDeviceSource]
  +[HKSource _connectedGymSource]
  +[HKSource _generateIdentifierForAppleDevice]
  +[HKSource _isPlaceholderBundleIdentifier:]
  +[HKSource _sourceWithBundleIdentifier:defaultBundleIdentifier:appEntitlements:name:]
  +[HKSource hd_getNameForSource:]
  +[HKSource hd_currentDeviceSourceName]
  +[HKSource hd_isSpartanDeviceBundleIdentifier:]
  +[HKSource _studyNameForResearchStudySource:]
  +[HKSource _applicationNameForCompanionBundleIdentifier:]
  +[HKSource hd_sourceForClient:]

  // instance methods
  -[HKSource init]
  -[HKSource isEqual:]
  -[HKSource name]
  -[HKSource copyWithZone:]
  -[HKSource _options]
  -[HKSource encodeWithCoder:]
  -[HKSource initWithCoder:]
  -[HKSource .cxx_destruct]
  -[HKSource _init]
  -[HKSource _setOptions:]
  -[HKSource bundleIdentifier]
  -[HKSource _isApplication]
  -[HKSource _sourceID]
  -[HKSource _isHidden]
  -[HKSource _setName:]
  -[HKSource _productType]
  -[HKSource _setBundleIdentifier:]
  -[HKSource _requiresAuthorization]
  -[HKSource _isLocalDevice]
  -[HKSource _isAppleWatch]
  -[HKSource _isPreferredSource]
  -[HKSource _setProductType:]
  -[HKSource _setLocalDevice:]
  -[HKSource _owningAppBundleIdentifier]
  -[HKSource _isClinicalSource]
  -[HKSource _isResearchStudy]
  -[HKSource _deducedClinicalAccountIdentifier]
  -[HKSource _fetchBundleWithError:]
  -[HKSource _isAppleDevice]
  -[HKSource _hasFirstPartyBundleID]
  -[HKSource _isConnectedGymSource]
  -[HKSource _setOwningAppBundleIdentifier:]
  -[HKSource _setSourceID:]


HKStatisticsQuery : HKQuery <HKStatisticsQueryClientInterface>
 @property  @? completionHandler
 @property  unsigned long options
 @property  unsigned long mergeStrategy
 @property  NSDateInterval *dateInterval
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKStatisticsQuery configurationClass]
  +[HKStatisticsQuery clientInterfaceProtocol]
  +[HKStatisticsQuery configureClientInterface:]

  // instance methods
  -[HKStatisticsQuery options]
  -[HKStatisticsQuery .cxx_destruct]
  -[HKStatisticsQuery _filter]
  -[HKStatisticsQuery completionHandler]
  -[HKStatisticsQuery _dateInterval]
  -[HKStatisticsQuery queue_validate]
  -[HKStatisticsQuery queue_deliverError:]
  -[HKStatisticsQuery queue_queryDidDeactivate:]
  -[HKStatisticsQuery queue_populateConfiguration:]
  -[HKStatisticsQuery initWithSampleType:samplePredicate:options:completionHandler:]
  -[HKStatisticsQuery _filterForDateInterval:]
  -[HKStatisticsQuery client_deliverStatistics:forQuery:]
  -[HKStatisticsQuery setMergeStrategy:]
  -[HKStatisticsQuery _setDateInterval:]
  -[HKStatisticsQuery initWithQuantityType:quantitySamplePredicate:options:completionHandler:]
  -[HKStatisticsQuery mergeStrategy]


_HKStatisticsQueryServerConfiguration : HKQueryServerConfiguration
 @property  unsigned long options
 @property  unsigned long mergeStrategy
 @property  NSDateInterval *dateInterval

  // class methods
  +[_HKStatisticsQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKStatisticsQueryServerConfiguration copyWithZone:]
  -[_HKStatisticsQueryServerConfiguration options]
  -[_HKStatisticsQueryServerConfiguration encodeWithCoder:]
  -[_HKStatisticsQueryServerConfiguration initWithCoder:]
  -[_HKStatisticsQueryServerConfiguration .cxx_destruct]
  -[_HKStatisticsQueryServerConfiguration setOptions:]
  -[_HKStatisticsQueryServerConfiguration dateInterval]
  -[_HKStatisticsQueryServerConfiguration setDateInterval:]
  -[_HKStatisticsQueryServerConfiguration setMergeStrategy:]
  -[_HKStatisticsQueryServerConfiguration mergeStrategy]


HKHealthWrapCodableMessageKey : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasKey
 @property  NSData *key
 @property  BOOL hasIv
 @property  NSData *iv

  // instance methods
  -[HKHealthWrapCodableMessageKey isEqual:]
  -[HKHealthWrapCodableMessageKey copyWithZone:]
  -[HKHealthWrapCodableMessageKey key]
  -[HKHealthWrapCodableMessageKey .cxx_destruct]
  -[HKHealthWrapCodableMessageKey dictionaryRepresentation]
  -[HKHealthWrapCodableMessageKey setKey:]
  -[HKHealthWrapCodableMessageKey writeTo:]
  -[HKHealthWrapCodableMessageKey mergeFrom:]
  -[HKHealthWrapCodableMessageKey readFrom:]
  -[HKHealthWrapCodableMessageKey copyTo:]
  -[HKHealthWrapCodableMessageKey hasKey]
  -[HKHealthWrapCodableMessageKey setIv:]
  -[HKHealthWrapCodableMessageKey hasIv]
  -[HKHealthWrapCodableMessageKey iv]


HKReferenceRange : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *referenceRangeIdentifier
 @property  HKInspectableValueCollection *valueRange

  // class methods
  +[HKReferenceRange supportsSecureCoding]
  +[HKReferenceRange referenceRangeWithIdentifier:minValue:maxValue:]
  +[HKReferenceRange referenceRangeWithIdentifier:minValue:]
  +[HKReferenceRange referenceRangeWithIdentifier:maxValue:]
  +[HKReferenceRange referenceRangeWithIdentifier:inspectableValueRange:]

  // instance methods
  -[HKReferenceRange isEqual:]
  -[HKReferenceRange copyWithZone:]
  -[HKReferenceRange encodeWithCoder:]
  -[HKReferenceRange initWithCoder:]
  -[HKReferenceRange .cxx_destruct]
  -[HKReferenceRange valueRange]
  -[HKReferenceRange referenceRangeIdentifier]


_HKFitnessFriendActivitySnapshot : HKSample <NSCopying>
 @property  NSUUID *friendUUID
 @property  NSUUID *sourceUUID
 @property  long long snapshotIndex
 @property  NSDate *snapshotUploadedDate
 @property  NSNumber *timeZoneOffsetFromUTCForNoon
 @property  double activeHours
 @property  double activeHoursGoal
 @property  double briskMinutes
 @property  double briskMinutesGoal
 @property  double energyBurned
 @property  double energyBurnedGoal
 @property  double mmv
 @property  double mmg
 @property  double stepCount
 @property  double pushCount
 @property  long long wheelchairUse
 @property  double walkingAndRunningDistance
 @property  double energyBurnedGoalPercentage
 @property  double mmgp
 @property  double briskMinutesGoalPercentage
 @property  double activeHoursGoalPercentage
 @property  NSTimeZone *timeZone
 @property  long long amm
 @property  BOOL hasCarriedForwardGoals

  // class methods
  +[_HKFitnessFriendActivitySnapshot supportsSecureCoding]
  +[_HKFitnessFriendActivitySnapshot _fitnessFriendActivitySnapshotWithSnapshotIndex:startDate:endDate:sourceUUID:]
  +[_HKFitnessFriendActivitySnapshot _fitnessFriendActivitySnapshotWithFriendUUID:sourceUUID:startDate:endDate:snapshotIndex:snapshotUploadedDate:]
  +[_HKFitnessFriendActivitySnapshot snapshotWithActivitySummary:]
  +[_HKFitnessFriendActivitySnapshot _mostSignificantSnapshotAmongSnapshots:]

  // instance methods
  -[_HKFitnessFriendActivitySnapshot encodeWithCoder:]
  -[_HKFitnessFriendActivitySnapshot initWithCoder:]
  -[_HKFitnessFriendActivitySnapshot .cxx_destruct]
  -[_HKFitnessFriendActivitySnapshot timeZone]
  -[_HKFitnessFriendActivitySnapshot stepCount]
  -[_HKFitnessFriendActivitySnapshot wheelchairUse]
  -[_HKFitnessFriendActivitySnapshot setAmm:]
  -[_HKFitnessFriendActivitySnapshot setMmv:]
  -[_HKFitnessFriendActivitySnapshot setMmg:]
  -[_HKFitnessFriendActivitySnapshot setEnergyBurned:]
  -[_HKFitnessFriendActivitySnapshot setEnergyBurnedGoal:]
  -[_HKFitnessFriendActivitySnapshot setBriskMinutes:]
  -[_HKFitnessFriendActivitySnapshot setBriskMinutesGoal:]
  -[_HKFitnessFriendActivitySnapshot setActiveHours:]
  -[_HKFitnessFriendActivitySnapshot setActiveHoursGoal:]
  -[_HKFitnessFriendActivitySnapshot setStepCount:]
  -[_HKFitnessFriendActivitySnapshot setWalkingAndRunningDistance:]
  -[_HKFitnessFriendActivitySnapshot setPushCount:]
  -[_HKFitnessFriendActivitySnapshot setWheelchairUse:]
  -[_HKFitnessFriendActivitySnapshot setTimeZoneOffsetFromUTCForNoon:]
  -[_HKFitnessFriendActivitySnapshot snapshotIndex]
  -[_HKFitnessFriendActivitySnapshot energyBurned]
  -[_HKFitnessFriendActivitySnapshot energyBurnedGoal]
  -[_HKFitnessFriendActivitySnapshot briskMinutes]
  -[_HKFitnessFriendActivitySnapshot briskMinutesGoal]
  -[_HKFitnessFriendActivitySnapshot activeHours]
  -[_HKFitnessFriendActivitySnapshot activeHoursGoal]
  -[_HKFitnessFriendActivitySnapshot walkingAndRunningDistance]
  -[_HKFitnessFriendActivitySnapshot pushCount]
  -[_HKFitnessFriendActivitySnapshot _mostSignificantSnapshot:]
  -[_HKFitnessFriendActivitySnapshot mmv]
  -[_HKFitnessFriendActivitySnapshot activitySummary]
  -[_HKFitnessFriendActivitySnapshot energyBurnedGoalPercentage]
  -[_HKFitnessFriendActivitySnapshot mmgp]
  -[_HKFitnessFriendActivitySnapshot briskMinutesGoalPercentage]
  -[_HKFitnessFriendActivitySnapshot activeHoursGoalPercentage]
  -[_HKFitnessFriendActivitySnapshot friendUUID]
  -[_HKFitnessFriendActivitySnapshot setFriendUUID:]
  -[_HKFitnessFriendActivitySnapshot sourceUUID]
  -[_HKFitnessFriendActivitySnapshot setSourceUUID:]
  -[_HKFitnessFriendActivitySnapshot setSnapshotIndex:]
  -[_HKFitnessFriendActivitySnapshot snapshotUploadedDate]
  -[_HKFitnessFriendActivitySnapshot setSnapshotUploadedDate:]
  -[_HKFitnessFriendActivitySnapshot timeZoneOffsetFromUTCForNoon]
  -[_HKFitnessFriendActivitySnapshot mmg]
  -[_HKFitnessFriendActivitySnapshot amm]
  -[_HKFitnessFriendActivitySnapshot hasCarriedForwardGoals]
  -[_HKFitnessFriendActivitySnapshot setHasCarriedForwardGoals:]


HKWorkoutRouteQuery : HKQuery <HKWorkoutRouteQueryClientInterface>
 @property  @? dataHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKWorkoutRouteQuery configurationClass]
  +[HKWorkoutRouteQuery clientInterfaceProtocol]
  +[HKWorkoutRouteQuery configureClientInterface:]

  // instance methods
  -[HKWorkoutRouteQuery .cxx_destruct]
  -[HKWorkoutRouteQuery dataHandler]
  -[HKWorkoutRouteQuery setDataHandler:]
  -[HKWorkoutRouteQuery queue_deliverError:]
  -[HKWorkoutRouteQuery queue_queryDidDeactivate:]
  -[HKWorkoutRouteQuery queue_populateConfiguration:]
  -[HKWorkoutRouteQuery client_deliverWorkoutRouteLocations:isFinal:query:]
  -[HKWorkoutRouteQuery initWithRoute:dataHandler:]


_HKWorkoutRouteQueryServerConfiguration : HKQueryServerConfiguration
 @property  HKWorkoutRoute *workoutRoute

  // class methods
  +[_HKWorkoutRouteQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKWorkoutRouteQueryServerConfiguration copyWithZone:]
  -[_HKWorkoutRouteQueryServerConfiguration encodeWithCoder:]
  -[_HKWorkoutRouteQueryServerConfiguration initWithCoder:]
  -[_HKWorkoutRouteQueryServerConfiguration .cxx_destruct]
  -[_HKWorkoutRouteQueryServerConfiguration setWorkoutRoute:]
  -[_HKWorkoutRouteQueryServerConfiguration workoutRoute]


HKProductVersions : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HKProductVersions _infoDictionaryForProductWithName:error:]
  +[HKProductVersions versionForProductWithName:error:]
  +[HKProductVersions semanticVersionForProductWithName:error:]
  +[HKProductVersions UDIDeviceIdentifierForProductWithName:error:]
  +[HKProductVersions dateOfManufactureForProductWithName:error:]
  +[HKProductVersions yearOfReleaseForProductWithName:error:]


_HKSampleTypeQuery : HKQuery <HKSampleTypeQueryClientInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HKSampleTypeQuery clientInterfaceProtocol]
  +[_HKSampleTypeQuery configureClientInterface:]

  // instance methods
  -[_HKSampleTypeQuery .cxx_destruct]
  -[_HKSampleTypeQuery queue_deliverError:]
  -[_HKSampleTypeQuery client_deliverSampleTypes:query:]
  -[_HKSampleTypeQuery initWithPredicate:resultsHandler:]


HKQuery : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable, HKQueryClientInterface>
 @property  NSUUID *activationUUID
 @property  <HKQueryDelegate> *delegate
 @property  long long activationState
 @property  BOOL deactivating
 @property  long long deactivateCallCount
 @property  BOOL shouldSuppressDataCollection
 @property  NSString *debugIdentifier
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  unsigned int applicationSDKVersion
 @property  _HKFilter *filter
 @property  HKObjectType *objectType
 @property  NSPredicate *predicate
 @property  long long qualityOfService
 @property  HKSampleType *sampleType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKQuery taskIdentifier]
  +[HKQuery predicateForObjectsWithUUIDs:]
  +[HKQuery predicateForObjectsWithMetadataKey:]
  +[HKQuery predicateForObjectWithUUID:]
  +[HKQuery serverInterface]
  +[HKQuery configurationClass]
  +[HKQuery clientInterface]
  +[HKQuery clientInterfaceProtocol]
  +[HKQuery configureClientInterface:]
  +[HKQuery predicateForSamplesWithStartDate:endDate:inclusiveEndDates:options:]
  +[HKQuery predicateForObjectsFromSource:]
  +[HKQuery predicateForClinicalRecordsWithFHIRResourceType:]
  +[HKQuery predicateForSamplesWithStartDate:endDate:options:]
  +[HKQuery predicateForSamplesWithinDateInterval:options:]
  +[HKQuery predicateForObjectsWithMetadataKey:allowedValues:]
  +[HKQuery predicateForObjectsWithMetadataKey:operatorType:value:]
  +[HKQuery predicateForClinicalRecordsFromSource:FHIRResourceType:identifier:]
  +[HKQuery predicateForObjectsFromSources:]
  +[HKQuery predicateForObjectsFromSourceRevisions:]
  +[HKQuery predicateForObjectsFromDevices:]
  +[HKQuery predicateForObjectsWithDeviceProperty:allowedValues:]
  +[HKQuery _predicateForObjectsFromAppleWatches]
  +[HKQuery _predicateForObjectsWithMinOSBuildVersion:maxOSBuildVersion:]
  +[HKQuery predicateForObjectsWithNoCorrelation]
  +[HKQuery predicateForObjectsFromWorkout:]
  +[HKQuery predicateForSamplesAssociatedWithSample:]
  +[HKQuery predicateForSamplesForDayFromDate:calendar:options:]
  +[HKQuery predicateForRecordsFromClinicalAccountIdentifier:]
  +[HKQuery predicateForRecordsFromGatewayWithExternalIdentifier:]
  +[HKQuery predicateForDiagnosticTestResultCategory:]
  +[HKQuery predicateForSamplesWithConceptIdentifier:keyPath:]
  +[HKQuery predicateForRecordsWithSortDateFromStartDateComponents:endDateComponents:]
  +[HKQuery predicateForCreationDateWithTodayViewRange:]
  +[HKQuery predicateForQuantitySamplesWithOperatorType:quantity:]
  +[HKQuery predicateForCategorySamplesWithOperatorType:value:]
  +[HKQuery predicateForWorkoutsWithWorkoutActivityType:]
  +[HKQuery predicateForWorkoutsWithOperatorType:duration:]
  +[HKQuery predicateForWorkoutsWithOperatorType:totalEnergyBurned:]
  +[HKQuery predicateForWorkoutsWithOperatorType:totalDistance:]
  +[HKQuery predicateForWorkoutsWithOperatorType:totalSwimmingStrokeCount:]
  +[HKQuery predicateForWorkoutsWithOperatorType:totalFlightsClimbed:]
  +[HKQuery predicateForActivitySummaryWithDateComponents:]
  +[HKQuery predicateForActivitySummariesBetweenStartDateComponents:endDateComponents:]
  +[HKQuery _cachedInterfaceForProtocol:configurationHandler:]
  +[HKQuery serverInterfaceProtocol]
  +[HKQuery configureServerInterface:]
  +[HKQuery shouldApplyAdditionalPredicateForObjectType:]
  +[HKQuery predicateForActivityCachesBetweenStartDateComponents:endDateComponents:]

  // instance methods
  -[HKQuery queue]
  -[HKQuery delegate]
  -[HKQuery .cxx_destruct]
  -[HKQuery setPredicate:]
  -[HKQuery predicate]
  -[HKQuery qualityOfService]
  -[HKQuery setQualityOfService:]
  -[HKQuery exportedInterface]
  -[HKQuery objectType]
  -[HKQuery _filter]
  -[HKQuery setObjectType:]
  -[HKQuery activationState]
  -[HKQuery deactivate]
  -[HKQuery debugIdentifier]
  -[HKQuery setDebugIdentifier:]
  -[HKQuery clientQueue]
  -[HKQuery connectionInvalidated]
  -[HKQuery connectionInterrupted]
  -[HKQuery remoteInterface]
  -[HKQuery sampleType]
  -[HKQuery applicationSDKVersion]
  -[HKQuery _initWithObjectType:predicate:]
  -[HKQuery queue_dispatchToClientForUUID:block:]
  -[HKQuery client_deliverError:forQuery:]
  -[HKQuery queue_validate]
  -[HKQuery queue_deliverError:]
  -[HKQuery queue_shouldDeactivateAfterInitialResults]
  -[HKQuery queue_queryDidDeactivate:]
  -[HKQuery activateWithClientQueue:healthStore:delegate:time:completion:]
  -[HKQuery reactivateWithHealthStore:]
  -[HKQuery queue_populateConfiguration:]
  -[HKQuery deactivateCallCount]
  -[HKQuery hasQueryUUID:]
  -[HKQuery _throwInvalidArgumentExceptionIfHasBeenExecuted:]
  -[HKQuery _filterForPredicate:objectType:]
  -[HKQuery setShouldSuppressDataCollection:]
  -[HKQuery activationUUID]
  -[HKQuery deactivating]
  -[HKQuery setActivationUUID:]
  -[HKQuery _queue_activateWithHealthStore:activationUUID:completion:]
  -[HKQuery _queue_deactivateWithError:]
  -[HKQuery _queue_finishActivationWithServerProxy:activationUUID:error:completion:]
  -[HKQuery queue_queryDidFinishActivation:success:error:]
  -[HKQuery _predicateFilterClasses]
  -[HKQuery queue_deactivate]
  -[HKQuery shouldSuppressDataCollection]


HKQueryServerConfiguration : HKTaskConfiguration
 @property  HKObjectType *objectType
 @property  NSString *debugIdentifier
 @property  _HKFilter *filter
 @property  long long qualityOfService
 @property  BOOL shouldDeactivateAfterInitialResults
 @property  BOOL shouldSuppressDataCollection
 @property  double activationTime

  // class methods
  +[HKQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[HKQueryServerConfiguration init]
  -[HKQueryServerConfiguration copyWithZone:]
  -[HKQueryServerConfiguration encodeWithCoder:]
  -[HKQueryServerConfiguration initWithCoder:]
  -[HKQueryServerConfiguration .cxx_destruct]
  -[HKQueryServerConfiguration qualityOfService]
  -[HKQueryServerConfiguration setQualityOfService:]
  -[HKQueryServerConfiguration objectType]
  -[HKQueryServerConfiguration setFilter:]
  -[HKQueryServerConfiguration filter]
  -[HKQueryServerConfiguration setObjectType:]
  -[HKQueryServerConfiguration debugIdentifier]
  -[HKQueryServerConfiguration setDebugIdentifier:]
  -[HKQueryServerConfiguration setShouldDeactivateAfterInitialResults:]
  -[HKQueryServerConfiguration setShouldSuppressDataCollection:]
  -[HKQueryServerConfiguration setActivationTime:]
  -[HKQueryServerConfiguration shouldSuppressDataCollection]
  -[HKQueryServerConfiguration shouldDeactivateAfterInitialResults]
  -[HKQueryServerConfiguration activationTime]


HKAuthorizationPresentationRequest : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  long long type
 @property  NSString *readUsageDescription
 @property  NSString *shareUsageDescription
 @property  NSString *researchStudyUsageDescription
 @property  NSSet *typesRequiringReadAuthorization
 @property  NSSet *typesRequiringShareAuthorization
 @property  BOOL dismissWhenBackgrounded

  // class methods
  +[HKAuthorizationPresentationRequest supportsSecureCoding]

  // instance methods
  -[HKAuthorizationPresentationRequest type]
  -[HKAuthorizationPresentationRequest setType:]
  -[HKAuthorizationPresentationRequest encodeWithCoder:]
  -[HKAuthorizationPresentationRequest initWithCoder:]
  -[HKAuthorizationPresentationRequest .cxx_destruct]
  -[HKAuthorizationPresentationRequest typesRequiringReadAuthorization]
  -[HKAuthorizationPresentationRequest setReadUsageDescription:]
  -[HKAuthorizationPresentationRequest setResearchStudyUsageDescription:]
  -[HKAuthorizationPresentationRequest setTypesRequiringReadAuthorization:]
  -[HKAuthorizationPresentationRequest setDismissWhenBackgrounded:]
  -[HKAuthorizationPresentationRequest typesRequiringShareAuthorization]
  -[HKAuthorizationPresentationRequest setShareUsageDescription:]
  -[HKAuthorizationPresentationRequest setTypesRequiringShareAuthorization:]
  -[HKAuthorizationPresentationRequest readUsageDescription]
  -[HKAuthorizationPresentationRequest shareUsageDescription]
  -[HKAuthorizationPresentationRequest researchStudyUsageDescription]
  -[HKAuthorizationPresentationRequest shouldDismissWhenBackgrounded]


_HKDelayedOperation : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_HKDelayedOperation invalidate]
  -[_HKDelayedOperation .cxx_destruct]
  -[_HKDelayedOperation execute]
  -[_HKDelayedOperation initWithMode:queue:delay:block:]
  -[_HKDelayedOperation initWithMode:clock:queue:delay:block:]
  -[_HKDelayedOperation _queue_executeBlockIfScheduled]
  -[_HKDelayedOperation executeWithDelay:]
  -[_HKDelayedOperation initWithQueue:delay:block:]
  -[_HKDelayedOperation enableLoggingWithName:category:]
  -[_HKDelayedOperation disableLogging]


HKAuthorizationRequestRecord : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  HKSource *source
 @property  NSUUID *sessionIdentifier
 @property  NSSet *typesRequiringShareAuthorization
 @property  NSSet *typesRequiringReadAuthorization

  // class methods
  +[HKAuthorizationRequestRecord supportsSecureCoding]

  // instance methods
  -[HKAuthorizationRequestRecord init]
  -[HKAuthorizationRequestRecord encodeWithCoder:]
  -[HKAuthorizationRequestRecord initWithCoder:]
  -[HKAuthorizationRequestRecord .cxx_destruct]
  -[HKAuthorizationRequestRecord source]
  -[HKAuthorizationRequestRecord sessionIdentifier]
  -[HKAuthorizationRequestRecord typesRequiringReadAuthorization]
  -[HKAuthorizationRequestRecord typesRequiringShareAuthorization]
  -[HKAuthorizationRequestRecord initWithSource:session:readTypes:writeTypes:]


HKClinicalProviderSearchResult : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding, HKClinicalBrandable>
 @property  NSString *externalID
 @property  NSString *batchID
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *location
 @property  HKClinicalBrand *brand
 @property  BOOL supported
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKClinicalProviderSearchResult supportsSecureCoding]

  // instance methods
  -[HKClinicalProviderSearchResult isEqual:]
  -[HKClinicalProviderSearchResult copyWithZone:]
  -[HKClinicalProviderSearchResult encodeWithCoder:]
  -[HKClinicalProviderSearchResult initWithCoder:]
  -[HKClinicalProviderSearchResult .cxx_destruct]
  -[HKClinicalProviderSearchResult title]
  -[HKClinicalProviderSearchResult location]
  -[HKClinicalProviderSearchResult subtitle]
  -[HKClinicalProviderSearchResult isSupported]
  -[HKClinicalProviderSearchResult externalID]
  -[HKClinicalProviderSearchResult brand]
  -[HKClinicalProviderSearchResult informationURL]
  -[HKClinicalProviderSearchResult batchID]
  -[HKClinicalProviderSearchResult initWithExternalID:batchID:title:subtitle:location:supported:brand:]


HKSleepAnalysisUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HKSleepAnalysisUtilities boundingDateIntervalsForDateIntervals:]
  +[HKSleepAnalysisUtilities filterSleepSamples:categoryValue:]
  +[HKSleepAnalysisUtilities durationFromDateIntervals:]
  +[HKSleepAnalysisUtilities sleepPeriodSegmentsFromSleepSamples:minimumInterSegmentTimeInterval:categoryValue:]
  +[HKSleepAnalysisUtilities enumerateSleepPeriodsForAnalysis:calendar:dateInterval:dateComponents:analysisBlock:]
  +[HKSleepAnalysisUtilities sortedSleepPeriodSegmentsFromSleepSamples:]
  +[HKSleepAnalysisUtilities _periodsBySourceForSamples:calendar:]
  +[HKSleepAnalysisUtilities _aggregatedPeriodsForPeriodsBySource:orderedSources:]
  +[HKSleepAnalysisUtilities categorizeSleepPeriods:dateInterval:calendar:]
  +[HKSleepAnalysisUtilities _samplesBySourceForSamples:]
  +[HKSleepAnalysisUtilities sleepPeriodsFromSamples:calendar:]
  +[HKSleepAnalysisUtilities sleepAnalysisDateIntervalWithCalendar:visibleRangeStartDate:visibleRangeEndDate:startOfDayTransform:]
  +[HKSleepAnalysisUtilities filterSleepPeriods:startDate:endDate:]
  +[HKSleepAnalysisUtilities filterSleepDays:startDate:endDate:]
  +[HKSleepAnalysisUtilities findBedtimeAlarmAndUpdateSleepPeriods:calendar:startOfDayTransform:]
  +[HKSleepAnalysisUtilities dateIntervalBoundingSleepPeriods:]
  +[HKSleepAnalysisUtilities sleepDaysFromQueryResult:calendar:startOfDayTransform:orderedSources:]
  +[HKSleepAnalysisUtilities sleepAnalysisForSleepDays:]
  +[HKSleepAnalysisUtilities sleepAnalysisIntervalForStartDate:endDate:calendar:stratOfDayTransform:]


HKProcedureRecordType : HKMedicalType
  // class methods
  +[HKProcedureRecordType allTypes]
  +[HKProcedureRecordType procedureRecordType]


_HKIdentifierLookupTable : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_HKIdentifierLookupTable .cxx_destruct]
  -[_HKIdentifierLookupTable initWithDictionary:]
  -[_HKIdentifierLookupTable _insertCode:forIdentifier:]
  -[_HKIdentifierLookupTable setCode:forIdentifier:]
  -[_HKIdentifierLookupTable codeForIdentifier:code:]
  -[_HKIdentifierLookupTable enumerateCodesWithBlock:]


HKDiagnosticTestResultType : HKMedicalType
  // class methods
  +[HKDiagnosticTestResultType allTypes]
  +[HKDiagnosticTestResultType diagnosticTestResultType]


HKQuantitySeriesSampleQuery : HKQuery <HKQuantitySeriesSampleQueryClientInterface>
 @property  NSDictionary *unitTest_cachedQuantitySamplesByUUID
 @property  @? quantityHandlerWithoutSample
 @property  @? quantityHandlerWithSample
 @property  BOOL includeSample
 @property  BOOL orderByQuantitySampleStartDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKQuantitySeriesSampleQuery configurationClass]
  +[HKQuantitySeriesSampleQuery clientInterfaceProtocol]

  // instance methods
  -[HKQuantitySeriesSampleQuery .cxx_destruct]
  -[HKQuantitySeriesSampleQuery queue_deliverError:]
  -[HKQuantitySeriesSampleQuery queue_queryDidDeactivate:]
  -[HKQuantitySeriesSampleQuery queue_populateConfiguration:]
  -[HKQuantitySeriesSampleQuery _quantitySampleForEnumerationResult:UUID:]
  -[HKQuantitySeriesSampleQuery client_deliverQuantitySeries:seriesAnchor:isFinal:query:]
  -[HKQuantitySeriesSampleQuery client_deliverEnumerationResults:isFinal:query:]
  -[HKQuantitySeriesSampleQuery initWithSample:quantityHandler:]
  -[HKQuantitySeriesSampleQuery initWithQuantityType:predicate:quantityHandler:]
  -[HKQuantitySeriesSampleQuery quantityHandlerWithoutSample]
  -[HKQuantitySeriesSampleQuery quantityHandlerWithSample]
  -[HKQuantitySeriesSampleQuery setIncludeSample:]
  -[HKQuantitySeriesSampleQuery setOrderByQuantitySampleStartDate:]
  -[HKQuantitySeriesSampleQuery unitTest_cachedQuantitySamplesByUUID]
  -[HKQuantitySeriesSampleQuery includeSample]
  -[HKQuantitySeriesSampleQuery orderByQuantitySampleStartDate]


_HKQuantitySeriesSampleQueryServerConfiguration : HKQueryServerConfiguration
 @property  HKQuantitySample *quantitySample
 @property  long long seriesAnchor
 @property  long long mode
 @property  unsigned long options
 @property  NSDate *maximumStartDate
 @property  NSUUID *latestUUID
 @property  NSDate *latestSampleStartDate

  // class methods
  +[_HKQuantitySeriesSampleQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKQuantitySeriesSampleQueryServerConfiguration copyWithZone:]
  -[_HKQuantitySeriesSampleQueryServerConfiguration options]
  -[_HKQuantitySeriesSampleQueryServerConfiguration encodeWithCoder:]
  -[_HKQuantitySeriesSampleQueryServerConfiguration initWithCoder:]
  -[_HKQuantitySeriesSampleQueryServerConfiguration .cxx_destruct]
  -[_HKQuantitySeriesSampleQueryServerConfiguration setMode:]
  -[_HKQuantitySeriesSampleQueryServerConfiguration setOptions:]
  -[_HKQuantitySeriesSampleQueryServerConfiguration mode]
  -[_HKQuantitySeriesSampleQueryServerConfiguration quantitySample]
  -[_HKQuantitySeriesSampleQueryServerConfiguration setQuantitySample:]
  -[_HKQuantitySeriesSampleQueryServerConfiguration setSeriesAnchor:]
  -[_HKQuantitySeriesSampleQueryServerConfiguration setMaximumStartDate:]
  -[_HKQuantitySeriesSampleQueryServerConfiguration setLatestUUID:]
  -[_HKQuantitySeriesSampleQueryServerConfiguration setLatestSampleStartDate:]
  -[_HKQuantitySeriesSampleQueryServerConfiguration seriesAnchor]
  -[_HKQuantitySeriesSampleQueryServerConfiguration maximumStartDate]
  -[_HKQuantitySeriesSampleQueryServerConfiguration latestUUID]
  -[_HKQuantitySeriesSampleQueryServerConfiguration latestSampleStartDate]


HKHealthWrapCodableMessageHeader : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasVersion
 @property  long long version
 @property  BOOL hasEncryptedMessageKey
 @property  NSData *encryptedMessageKey
 @property  BOOL hasEncryptionIdentity
 @property  NSData *encryptionIdentity
 @property  BOOL hasUploadUUID
 @property  NSData *uploadUUID
 @property  BOOL hasStudyIdentifier
 @property  NSString *studyIdentifier
 @property  BOOL hasEncryptedHMACKey
 @property  NSData *encryptedHMACKey
 @property  BOOL hasTrailingHMACLength
 @property  int trailingHMACLength
 @property  BOOL hasTrailingSHALength
 @property  int trailingSHALength
 @property  BOOL hasCompressed
 @property  BOOL compressed
 @property  BOOL hasStudyUUID
 @property  NSData *studyUUID

  // instance methods
  -[HKHealthWrapCodableMessageHeader isEqual:]
  -[HKHealthWrapCodableMessageHeader copyWithZone:]
  -[HKHealthWrapCodableMessageHeader .cxx_destruct]
  -[HKHealthWrapCodableMessageHeader version]
  -[HKHealthWrapCodableMessageHeader dictionaryRepresentation]
  -[HKHealthWrapCodableMessageHeader setVersion:]
  -[HKHealthWrapCodableMessageHeader writeTo:]
  -[HKHealthWrapCodableMessageHeader mergeFrom:]
  -[HKHealthWrapCodableMessageHeader readFrom:]
  -[HKHealthWrapCodableMessageHeader copyTo:]
  -[HKHealthWrapCodableMessageHeader hasVersion]
  -[HKHealthWrapCodableMessageHeader setHasVersion:]
  -[HKHealthWrapCodableMessageHeader compressed]
  -[HKHealthWrapCodableMessageHeader setCompressed:]
  -[HKHealthWrapCodableMessageHeader studyUUID]
  -[HKHealthWrapCodableMessageHeader setEncryptedMessageKey:]
  -[HKHealthWrapCodableMessageHeader setEncryptionIdentity:]
  -[HKHealthWrapCodableMessageHeader setUploadUUID:]
  -[HKHealthWrapCodableMessageHeader setStudyIdentifier:]
  -[HKHealthWrapCodableMessageHeader setEncryptedHMACKey:]
  -[HKHealthWrapCodableMessageHeader setStudyUUID:]
  -[HKHealthWrapCodableMessageHeader hasEncryptedMessageKey]
  -[HKHealthWrapCodableMessageHeader hasEncryptionIdentity]
  -[HKHealthWrapCodableMessageHeader hasUploadUUID]
  -[HKHealthWrapCodableMessageHeader hasStudyIdentifier]
  -[HKHealthWrapCodableMessageHeader hasEncryptedHMACKey]
  -[HKHealthWrapCodableMessageHeader setTrailingHMACLength:]
  -[HKHealthWrapCodableMessageHeader setHasTrailingHMACLength:]
  -[HKHealthWrapCodableMessageHeader hasTrailingHMACLength]
  -[HKHealthWrapCodableMessageHeader setTrailingSHALength:]
  -[HKHealthWrapCodableMessageHeader setHasTrailingSHALength:]
  -[HKHealthWrapCodableMessageHeader hasTrailingSHALength]
  -[HKHealthWrapCodableMessageHeader setHasCompressed:]
  -[HKHealthWrapCodableMessageHeader hasCompressed]
  -[HKHealthWrapCodableMessageHeader hasStudyUUID]
  -[HKHealthWrapCodableMessageHeader encryptedMessageKey]
  -[HKHealthWrapCodableMessageHeader encryptionIdentity]
  -[HKHealthWrapCodableMessageHeader uploadUUID]
  -[HKHealthWrapCodableMessageHeader studyIdentifier]
  -[HKHealthWrapCodableMessageHeader encryptedHMACKey]
  -[HKHealthWrapCodableMessageHeader trailingHMACLength]
  -[HKHealthWrapCodableMessageHeader trailingSHALength]


_HKAnchoredObjectQueryBlockObserver : NSObject /usr/lib/libc++.1.dylib <_HKAnchoredObjectQueryObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HKAnchoredObjectQueryBlockObserver .cxx_destruct]
  -[_HKAnchoredObjectQueryBlockObserver queryManager:didReceiveUpdatesForType:samplesAdded:objectsRemoved:]
  -[_HKAnchoredObjectQueryBlockObserver initWithHandler:operationQueue:]
  -[_HKAnchoredObjectQueryBlockObserver initWithHandler:dispatchQueue:]


_HKAnchoredObjectQueryManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_HKAnchoredObjectQueryManager .cxx_destruct]
  -[_HKAnchoredObjectQueryManager initWithHealthStore:]
  -[_HKAnchoredObjectQueryManager _observersForType:]
  -[_HKAnchoredObjectQueryManager _typeRequiresNewQuery:]
  -[_HKAnchoredObjectQueryManager _createQueryForType:retryCount:]
  -[_HKAnchoredObjectQueryManager _callObservers:withType:samplesAdded:objectsRemoved:]
  -[_HKAnchoredObjectQueryManager addObserver:forType:]
  -[_HKAnchoredObjectQueryManager _removeQueryForType:]
  -[_HKAnchoredObjectQueryManager _queryStateForType:]
  -[_HKAnchoredObjectQueryManager _setQueryState:forType:]
  -[_HKAnchoredObjectQueryManager _handleQueryCallbackForType:samplesAdded:objectsDeleted:error:retryCount:]
  -[_HKAnchoredObjectQueryManager _transitionToQueryFailureForType:]
  -[_HKAnchoredObjectQueryManager _handleQueryErrorForType:retryCount:]
  -[_HKAnchoredObjectQueryManager _handleQuerySuccessForType:samplesAdded:objectsRemoved:]
  -[_HKAnchoredObjectQueryManager addObserverForType:operationQueue:usingHandler:]
  -[_HKAnchoredObjectQueryManager addObserverForType:dispatchQueue:usingHandler:]
  -[_HKAnchoredObjectQueryManager removeObserver:forType:]


HKRatioValue : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  HKCodedQuantity *numerator
 @property  HKCodedQuantity *denominator

  // class methods
  +[HKRatioValue supportsSecureCoding]
  +[HKRatioValue ratioValueWithNumerator:andDenominator:]

  // instance methods
  -[HKRatioValue init]
  -[HKRatioValue isEqual:]
  -[HKRatioValue copyWithZone:]
  -[HKRatioValue encodeWithCoder:]
  -[HKRatioValue initWithCoder:]
  -[HKRatioValue .cxx_destruct]
  -[HKRatioValue _initWithNumerator:denominator:]
  -[HKRatioValue numerator]
  -[HKRatioValue denominator]


HKInspectableValue : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  HKUCUMUnitDisplayConverter *converter
 @property  <NSObject><NSSecureCoding> *value
 @property  long long valueType
 @property  NSString *stringValue
 @property  HKCodedQuantity *codedQuantityValue
 @property  HKRatioValue *ratioValue
 @property  HKMedicalDate *medicalDateValue
 @property  HKMedicalDateInterval *medicalDateIntervalValue
 @property  NSDateComponents *dateComponentsValue
 @property  NSArray *medicalCodings
 @property  HKCodedValueCollection *codedValueCollection
 @property  NSArray *dataAbsentReasonCodings
 @property  NSString *unitString

  // class methods
  +[HKInspectableValue supportsSecureCoding]
  +[HKInspectableValue inspectableValueWithCodedQuantity:]
  +[HKInspectableValue inspectableValueWithNull]
  +[HKInspectableValue inspectableValueWithValueType:value:]
  +[HKInspectableValue inspectableValueWithString:]
  +[HKInspectableValue inspectableValueWithRatio:]
  +[HKInspectableValue inspectableValueWithMedicalDate:]
  +[HKInspectableValue inspectableValueWithMedicalDateInterval:]
  +[HKInspectableValue inspectableValueWithDateComponents:]
  +[HKInspectableValue inspectableValueWithMedicalCodings:]
  +[HKInspectableValue inspectableValueWithCodedValueCollection:]
  +[HKInspectableValue inspectableValueWithDataAbsentReasonCodings:]

  // instance methods
  -[HKInspectableValue init]
  -[HKInspectableValue isEqual:]
  -[HKInspectableValue copyWithZone:]
  -[HKInspectableValue encodeWithCoder:]
  -[HKInspectableValue initWithCoder:]
  -[HKInspectableValue stringValue]
  -[HKInspectableValue .cxx_destruct]
  -[HKInspectableValue value]
  -[HKInspectableValue converter]
  -[HKInspectableValue valueType]
  -[HKInspectableValue unitString]
  -[HKInspectableValue codedQuantityValue]
  -[HKInspectableValue codedValueCollection]
  -[HKInspectableValue _initWithValueType:value:]
  -[HKInspectableValue _assertValueType]
  -[HKInspectableValue _unitStringForCodedValueCollection:]
  -[HKInspectableValue ratioValue]
  -[HKInspectableValue _assertValueClass:]
  -[HKInspectableValue medicalDateValue]
  -[HKInspectableValue medicalDateIntervalValue]
  -[HKInspectableValue dateComponentsValue]
  -[HKInspectableValue medicalCodings]
  -[HKInspectableValue dataAbsentReasonCodings]


HKHealthRecordsStore : NSObject /usr/lib/libc++.1.dylib <HKHealthRecordsStoreInterface, _HKXPCExportable>
 @property  HKObserverSet *ingestionStateChangeObservers
 @property  HKObserverSet *accountStateChangeObservers
 @property  HKHealthStore *healthStore
 @property  long long currentIngestionState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKHealthRecordsStore .cxx_destruct]
  -[HKHealthRecordsStore exportedInterface]
  -[HKHealthRecordsStore accountWithIdentifier:error:]
  -[HKHealthRecordsStore connectionInvalidated]
  -[HKHealthRecordsStore healthStore]
  -[HKHealthRecordsStore remoteInterface]
  -[HKHealthRecordsStore deleteAccountWithIdentifier:completion:]
  -[HKHealthRecordsStore _actionCompletionOnClientQueue:]
  -[HKHealthRecordsStore initWithHealthStore:]
  -[HKHealthRecordsStore _objectCompletionOnClientQueue:]
  -[HKHealthRecordsStore _getSynchronousHealthRecordsPluginServerProxyWithHandler:errorHandler:]
  -[HKHealthRecordsStore _fetchHealthRecordsPluginServerProxyWithHandler:errorHandler:]
  -[HKHealthRecordsStore _actionCompletionWithObjectOnClientQueue:]
  -[HKHealthRecordsStore ingestHealthRecordsWithFHIRDocumentHandle:accountIdentifier:options:completion:]
  -[HKHealthRecordsStore displayStringForMedicalCodingSystem:code:version:completion:]
  -[HKHealthRecordsStore clientRemote_updateIngestionState:]
  -[HKHealthRecordsStore clientRemote_accountDidChange:changeType:]
  -[HKHealthRecordsStore allAccountsWithError:]
  -[HKHealthRecordsStore fetchAllAccountsWithCompletion:]
  -[HKHealthRecordsStore fetchAccountsForGateways:completion:]
  -[HKHealthRecordsStore fetchAccountForSource:completion:]
  -[HKHealthRecordsStore fetchAccountWithIdentifier:completion:]
  -[HKHealthRecordsStore invalidateCredentialForAccountWithIdentifier:completion:]
  -[HKHealthRecordsStore hasHealthRecordsAccount]
  -[HKHealthRecordsStore beginInitialLoginSessionForGateway:completion:]
  -[HKHealthRecordsStore beginReloginSessionForAccount:completion:]
  -[HKHealthRecordsStore endLoginSessionWithState:code:completion:]
  -[HKHealthRecordsStore pruneAuthenticationDataWithCompletion:]
  -[HKHealthRecordsStore replaceAccountWithNewAccountForAccountWithIdentifier:usingCredentialWithPersistentID:completion:]
  -[HKHealthRecordsStore ingestHealthRecordsWithOptions:completion:]
  -[HKHealthRecordsStore ingestHealthRecordsWithFHIRDocumentHandle:accountIdentifier:completion:]
  -[HKHealthRecordsStore resetHealthRecordsLastExtractedRowIDWithCompletion:]
  -[HKHealthRecordsStore getHealthRecordsIngestionFrequencyWithCompletion:]
  -[HKHealthRecordsStore setHealthRecordsIngestionFrequency:completion:]
  -[HKHealthRecordsStore fetchRawSourceStringForHealthRecord:completion:]
  -[HKHealthRecordsStore fetchExportedPropertiesForHealthRecord:completion:]
  -[HKHealthRecordsStore fetchFHIRJSONDocumentWithAccountIdentifier:completion:]
  -[HKHealthRecordsStore stringifyExtractionFailureReasonsForRecord:completion:]
  -[HKHealthRecordsStore displayStringForMedicalCodingSystem:code:completion:]
  -[HKHealthRecordsStore conceptForCodings:preferredSystems:completion:]
  -[HKHealthRecordsStore performCodingTasks:completion:]
  -[HKHealthRecordsStore triggerClinicalOptInDataCollectionForReason:completion:]
  -[HKHealthRecordsStore resetClinicalOptInDataCollectionAnchorsWithCompletion:]
  -[HKHealthRecordsStore fetchClinicalOptInDataCollectionFilePathsWithCompletion:]
  -[HKHealthRecordsStore triggerClinicalContentAnalyticsForReason:options:completion:]
  -[HKHealthRecordsStore triggerHealthCloudUploadWithCompletion:]
  -[HKHealthRecordsStore resetClinicalContentAnalyticsAnchorsWithCompletion:]
  -[HKHealthRecordsStore fetchRemoteSearchResultsPageForQuery:latitude:longitude:from:completion:]
  -[HKHealthRecordsStore cancelInFlightSearchQueriesWithCompletion:]
  -[HKHealthRecordsStore fetchRemoteProviderWithExternalID:batchID:completion:]
  -[HKHealthRecordsStore fetchRemoteGatewayWithExternalID:batchID:completion:]
  -[HKHealthRecordsStore fetchLogoDataForBrand:scaleKey:completion:]
  -[HKHealthRecordsStore fetchLogoDataForFeaturedBrandsAtScaleKey:completion:]
  -[HKHealthRecordsStore addIngestionStateListener:]
  -[HKHealthRecordsStore currentIngestionState]
  -[HKHealthRecordsStore addAccountStateChangeListener:]
  -[HKHealthRecordsStore removeAccountStateChangeListener:]
  -[HKHealthRecordsStore createStaticAccountWithTitle:subtitle:description:onlyIfNeededForSimulatedGatewayID:completion:]
  -[HKHealthRecordsStore badgeForNewHealthRecordsWithCompletion:]
  -[HKHealthRecordsStore notifyForNewHealthRecordsWithCompletion:]
  -[HKHealthRecordsStore registerAppSourceForClinicalUnlimitedAuthorizationModeConfirmation:completion:]
  -[HKHealthRecordsStore deregisterAppSourceFromClinicalUnlimitedAuthorizationModeConfirmation:completion:]
  -[HKHealthRecordsStore ingestionStateChangeObservers]
  -[HKHealthRecordsStore setIngestionStateChangeObservers:]
  -[HKHealthRecordsStore accountStateChangeObservers]
  -[HKHealthRecordsStore setAccountStateChangeObservers:]
  -[HKHealthRecordsStore _hk_shouldPromptForOptInClinicalDataCollection:]


HKHealthKitControlTaskClient : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKHealthKitControlTaskClient serverInterface]

  // instance methods
  -[HKHealthKitControlTaskClient invalidate]
  -[HKHealthKitControlTaskClient .cxx_destruct]
  -[HKHealthKitControlTaskClient exportedInterface]
  -[HKHealthKitControlTaskClient connectionInvalidated]
  -[HKHealthKitControlTaskClient remoteInterface]
  -[HKHealthKitControlTaskClient initWithHealthStore:]
  -[HKHealthKitControlTaskClient condenseWorkoutsForReason:workoutBatchLimit:completion:]
  -[HKHealthKitControlTaskClient condenseWorkoutWithUUID:completion:]
  -[HKHealthKitControlTaskClient condensedWorkoutsWithCompletion:]
  -[HKHealthKitControlTaskClient condensableWorkoutsWithCompletion:]


HKHealthKitControlTaskServerConfiguration : HKTaskConfiguration

HKAnchoredObjectQuery : HKQuery <HKAnchoredObjectQueryClientInterface>
 @property  HKQueryAnchor *anchor
 @property  unsigned long limit
 @property  double collectionInterval
 @property  @? completionHandler
 @property  BOOL includeAutomaticTimeZones
 @property  BOOL ignoreDeletedObjects
 @property  @? updateHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKAnchoredObjectQuery configurationClass]
  +[HKAnchoredObjectQuery clientInterfaceProtocol]
  +[HKAnchoredObjectQuery configureClientInterface:]

  // instance methods
  -[HKAnchoredObjectQuery .cxx_destruct]
  -[HKAnchoredObjectQuery limit]
  -[HKAnchoredObjectQuery setLimit:]
  -[HKAnchoredObjectQuery completionHandler]
  -[HKAnchoredObjectQuery setUpdateHandler:]
  -[HKAnchoredObjectQuery updateHandler]
  -[HKAnchoredObjectQuery anchor]
  -[HKAnchoredObjectQuery setAnchor:]
  -[HKAnchoredObjectQuery queue_validate]
  -[HKAnchoredObjectQuery queue_deliverError:]
  -[HKAnchoredObjectQuery queue_shouldDeactivateAfterInitialResults]
  -[HKAnchoredObjectQuery queue_queryDidDeactivate:]
  -[HKAnchoredObjectQuery queue_populateConfiguration:]
  -[HKAnchoredObjectQuery setIncludeAutomaticTimeZones:]
  -[HKAnchoredObjectQuery includeAutomaticTimeZones]
  -[HKAnchoredObjectQuery initWithType:predicate:anchor:limit:resultsHandler:]
  -[HKAnchoredObjectQuery client_deliverSampleObjects:deletedObjects:anchor:clearPendingSamples:deliverResults:query:]
  -[HKAnchoredObjectQuery setCollectionInterval:]
  -[HKAnchoredObjectQuery initWithType:predicate:anchor:limit:completionHandler:]
  -[HKAnchoredObjectQuery setIgnoreDeletedObjects:]
  -[HKAnchoredObjectQuery ignoreDeletedObjects]
  -[HKAnchoredObjectQuery collectionInterval]


_HKAnchoredObjectQueryServerConfiguration : HKQueryServerConfiguration
 @property  HKQueryAnchor *anchor
 @property  unsigned long limit
 @property  double collectionInterval
 @property  BOOL includeDeletedObjects
 @property  BOOL includeAutomaticTimeZones

  // class methods
  +[_HKAnchoredObjectQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKAnchoredObjectQueryServerConfiguration copyWithZone:]
  -[_HKAnchoredObjectQueryServerConfiguration encodeWithCoder:]
  -[_HKAnchoredObjectQueryServerConfiguration initWithCoder:]
  -[_HKAnchoredObjectQueryServerConfiguration .cxx_destruct]
  -[_HKAnchoredObjectQueryServerConfiguration limit]
  -[_HKAnchoredObjectQueryServerConfiguration setLimit:]
  -[_HKAnchoredObjectQueryServerConfiguration anchor]
  -[_HKAnchoredObjectQueryServerConfiguration setAnchor:]
  -[_HKAnchoredObjectQueryServerConfiguration setIncludeAutomaticTimeZones:]
  -[_HKAnchoredObjectQueryServerConfiguration includeAutomaticTimeZones]
  -[_HKAnchoredObjectQueryServerConfiguration setCollectionInterval:]
  -[_HKAnchoredObjectQueryServerConfiguration setIncludeDeletedObjects:]
  -[_HKAnchoredObjectQueryServerConfiguration collectionInterval]
  -[_HKAnchoredObjectQueryServerConfiguration includeDeletedObjects]


HKMedicalRecord : HKSample <HKMedicalRecordCodings, HKConceptIndexable, HKCodedSample, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *indexKeywords
 @property  NSArray *medicalRecordCodings
 @property  NSArray *medicalRecordPreferredSystems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *UUID
 @property  NSLocale *locale
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSString *note
 @property  BOOL enteredInError
 @property  NSDate *modifiedDate
 @property  HKFHIRIdentifier *FHIRIdentifier
 @property  NSLocale *locale
 @property  long long extractionVersion
 @property  HKSemanticDate *sortDate
 @property  HKConcept *primaryConcept
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKMedicalRecord supportsSecureCoding]
  +[HKMedicalRecord _newMedicalRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:config:]
  +[HKMedicalRecord supportsEquivalence]
  +[HKMedicalRecord _isConcreteObjectClass]
  +[HKMedicalRecord indexableConceptKeyPaths]
  +[HKMedicalRecord cachedConceptRelationshipKeyPaths]
  +[HKMedicalRecord indexableKeyPathsWithPrefix:]
  +[HKMedicalRecord defaultDisplayString]
  +[HKMedicalRecord _sortDateIntervalFromStartDateComponents:endDateComponents:error:]

  // instance methods
  -[HKMedicalRecord isEqual:]
  -[HKMedicalRecord copyWithZone:]
  -[HKMedicalRecord encodeWithCoder:]
  -[HKMedicalRecord initWithCoder:]
  -[HKMedicalRecord .cxx_destruct]
  -[HKMedicalRecord _init]
  -[HKMedicalRecord locale]
  -[HKMedicalRecord _setLocale:]
  -[HKMedicalRecord sortDate]
  -[HKMedicalRecord note]
  -[HKMedicalRecord _setNote:]
  -[HKMedicalRecord modifiedDate]
  -[HKMedicalRecord isEquivalent:]
  -[HKMedicalRecord _validateConfigurationWithOptions:]
  -[HKMedicalRecord codingsForKeyPath:error:]
  -[HKMedicalRecord applyConcepts:forKeyPath:error:]
  -[HKMedicalRecord medicalRecordCodings]
  -[HKMedicalRecord indexKeywords]
  -[HKMedicalRecord medicalRecordPreferredSystems]
  -[HKMedicalRecord primaryCodingContext]
  -[HKMedicalRecord fallbackDisplayString]
  -[HKMedicalRecord enteredInError]
  -[HKMedicalRecord primaryConcept]
  -[HKMedicalRecord _setEnteredInError:]
  -[HKMedicalRecord _setModifiedDate:]
  -[HKMedicalRecord _setFHIRIdentifier:]
  -[HKMedicalRecord _setExtractionVersion:]
  -[HKMedicalRecord _setSortDate:]
  -[HKMedicalRecord _setPrimaryConcept:]
  -[HKMedicalRecord FHIRIdentifier]
  -[HKMedicalRecord extractionVersion]


HKMultiTypeQueryCursor : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSArray *sampleQueryDescriptions
 @property  NSArray *sortDescriptors
 @property  HKQueryAnchor *followingAnchor
 @property  HKQueryAnchor *upToAndIncludingAnchor
 @property  NSArray *distinctByKeyPaths
 @property  NSData *state

  // class methods
  +[HKMultiTypeQueryCursor supportsSecureCoding]

  // instance methods
  -[HKMultiTypeQueryCursor init]
  -[HKMultiTypeQueryCursor isEqual:]
  -[HKMultiTypeQueryCursor copyWithZone:]
  -[HKMultiTypeQueryCursor encodeWithCoder:]
  -[HKMultiTypeQueryCursor initWithCoder:]
  -[HKMultiTypeQueryCursor .cxx_destruct]
  -[HKMultiTypeQueryCursor sortDescriptors]
  -[HKMultiTypeQueryCursor state]
  -[HKMultiTypeQueryCursor initWithSampleQueryDescriptions:sortDescriptors:followingAnchor:upToAndIncludingAnchor:distinctByKeyPaths:state:]
  -[HKMultiTypeQueryCursor sampleQueryDescriptions]
  -[HKMultiTypeQueryCursor followingAnchor]
  -[HKMultiTypeQueryCursor upToAndIncludingAnchor]
  -[HKMultiTypeQueryCursor distinctByKeyPaths]


HKElectrocardiogramBuilder : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *startDate
 @property  HKQuantity *frequency

  // instance methods
  -[HKElectrocardiogramBuilder .cxx_destruct]
  -[HKElectrocardiogramBuilder startDate]
  -[HKElectrocardiogramBuilder .cxx_construct]
  -[HKElectrocardiogramBuilder setStartDate:]
  -[HKElectrocardiogramBuilder frequency]
  -[HKElectrocardiogramBuilder setFrequency:]
  -[HKElectrocardiogramBuilder initWithStartDate:frequency:]
  -[HKElectrocardiogramBuilder addValue:lead:]
  -[HKElectrocardiogramBuilder finishWithDevice:metadata:]


HKQueryAnchor : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  long long rowid

  // class methods
  +[HKQueryAnchor supportsSecureCoding]
  +[HKQueryAnchor latestAnchor]
  +[HKQueryAnchor anchorFromValue:]
  +[HKQueryAnchor _anchorWithRowidValue:]
  +[HKQueryAnchor _anchorWithRowid:]

  // instance methods
  -[HKQueryAnchor isEqual:]
  -[HKQueryAnchor copyWithZone:]
  -[HKQueryAnchor compare:]
  -[HKQueryAnchor encodeWithCoder:]
  -[HKQueryAnchor initWithCoder:]
  -[HKQueryAnchor _rowid]
  -[HKQueryAnchor _setRowid:]


_HKSummary : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  long long typeCode
 @property  id value
 @property  NSDate *latestSampleDate
 @property  NSDate *summaryStartDate
 @property  NSDate *summaryEndDate

  // class methods
  +[_HKSummary supportsSecureCoding]
  +[_HKSummary valuesByTypeFromSummaries:]

  // instance methods
  -[_HKSummary encodeWithCoder:]
  -[_HKSummary initWithCoder:]
  -[_HKSummary .cxx_destruct]
  -[_HKSummary value]
  -[_HKSummary setValue:]
  -[_HKSummary typeCode]
  -[_HKSummary setTypeCode:]
  -[_HKSummary initWithTypeCode:]
  -[_HKSummary setSummaryDatesUsingCalendar:]
  -[_HKSummary setSummaryStartDate:]
  -[_HKSummary setSummaryEndDate:]
  -[_HKSummary initWithTypeCode:value:sampleDate:usingCalendar:]
  -[_HKSummary latestSampleDate]
  -[_HKSummary setLatestSampleDate:]
  -[_HKSummary summaryStartDate]
  -[_HKSummary summaryEndDate]


HKTaskServerProxyProvider : HKProxyProvider
 @property  NSUUID *taskUUID
 @property  NSString *taskIdentifier
 @property  NSURL *pluginURL
 @property  HKTaskConfiguration *taskConfiguration

  // instance methods
  -[HKTaskServerProxyProvider .cxx_destruct]
  -[HKTaskServerProxyProvider taskIdentifier]
  -[HKTaskServerProxyProvider taskUUID]
  -[HKTaskServerProxyProvider initWithHealthStore:taskIdentifier:exportedObject:taskUUID:]
  -[HKTaskServerProxyProvider setTaskConfiguration:]
  -[HKTaskServerProxyProvider taskConfiguration]
  -[HKTaskServerProxyProvider fetchProxyServiceEndpointForIdentifier:endpointHandler:errorHandler:]
  -[HKTaskServerProxyProvider pluginURL]
  -[HKTaskServerProxyProvider setPluginURL:]


HKMedicalConcept : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *displayString

  // class methods
  +[HKMedicalConcept supportsSecureCoding]

  // instance methods
  -[HKMedicalConcept init]
  -[HKMedicalConcept isEqual:]
  -[HKMedicalConcept copyWithZone:]
  -[HKMedicalConcept encodeWithCoder:]
  -[HKMedicalConcept initWithCoder:]
  -[HKMedicalConcept .cxx_destruct]
  -[HKMedicalConcept displayString]
  -[HKMedicalConcept initWithDisplayString:]


HKFeatureAvailabilityWatchOSVersionEqualsRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  {?=qqq} targetVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityWatchOSVersionEqualsRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityWatchOSVersionEqualsRule targetVersion]
  -[HKFeatureAvailabilityWatchOSVersionEqualsRule setTargetVersion:]
  -[HKFeatureAvailabilityWatchOSVersionEqualsRule evaluate]
  -[HKFeatureAvailabilityWatchOSVersionEqualsRule processUserInfo:]


_HKHeartRateRecoveryQueryUtility : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_HKHeartRateRecoveryQueryUtility predicateForWorkoutRecoveryTimeWithWorkout:]
  +[_HKHeartRateRecoveryQueryUtility workoutRecoveryDateIntervalForWorkout:overlappingWorkouts:]
  +[_HKHeartRateRecoveryQueryUtility workoutRecoveryHeartRatesForWorkout:recoveryDateInterval:readings:]
  +[_HKHeartRateRecoveryQueryUtility recoveryDateIntervalWithWorkout:]
  +[_HKHeartRateRecoveryQueryUtility _recoveryEndDateWithStartDate:]
  +[_HKHeartRateRecoveryQueryUtility perMinuteWorkoutRecoveryHeartRateFromReadings:workoutEndDate:]

  // instance methods
  -[_HKHeartRateRecoveryQueryUtility dealloc]
  -[_HKHeartRateRecoveryQueryUtility .cxx_destruct]
  -[_HKHeartRateRecoveryQueryUtility stop]
  -[_HKHeartRateRecoveryQueryUtility execute]
  -[_HKHeartRateRecoveryQueryUtility _setupQueries]
  -[_HKHeartRateRecoveryQueryUtility _heartRatesPostWorkout:workoutRecoveryTimePredicate:completionHandler:]
  -[_HKHeartRateRecoveryQueryUtility initWithHealthStore:workout:handler:]


_HKDimension : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_HKDimension dimensionFromString:]

  // instance methods
  -[_HKDimension init]
  -[_HKDimension .cxx_destruct]
  -[_HKDimension _baseDimensions]
  -[_HKDimension reduction]


_HKBaseDimension : _HKDimension <_HKFactor>
 @property  HKBaseUnit *reducibleBaseUnit
 @property  HKUnit *reducedUnit
 @property  double reductionCoefficient
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HKBaseDimension length]
  +[_HKBaseDimension time]
  +[_HKBaseDimension mass]
  +[_HKBaseDimension frequency]
  +[_HKBaseDimension volume]
  +[_HKBaseDimension temperature]
  +[_HKBaseDimension pressure]
  +[_HKBaseDimension _uniquedDefinedDimensionWithName:]
  +[_HKBaseDimension _uniquedDimensionWithName:configuration:]
  +[_HKBaseDimension energy]
  +[_HKBaseDimension conductance]
  +[_HKBaseDimension nonConvertibleMole]
  +[_HKBaseDimension nonConvertibleIU]
  +[_HKBaseDimension equivalents]
  +[_HKBaseDimension hearingSensitivity]
  +[_HKBaseDimension soundPressureLevel]
  +[_HKBaseDimension titer]
  +[_HKBaseDimension nullDimension]

  // instance methods
  -[_HKBaseDimension isEqual:]
  -[_HKBaseDimension name]
  -[_HKBaseDimension .cxx_destruct]
  -[_HKBaseDimension _initWithName:]
  -[_HKBaseDimension unitString]
  -[_HKBaseDimension _baseDimensions]
  -[_HKBaseDimension canBeReduced]
  -[_HKBaseDimension reducedUnit]
  -[_HKBaseDimension setReducibleBaseUnit:]
  -[_HKBaseDimension setReducedUnit:]
  -[_HKBaseDimension reducibleBaseUnit]
  -[_HKBaseDimension reductionCoefficient]
  -[_HKBaseDimension setReductionCoefficient:]


_HKCompoundDimension : _HKDimension
  // class methods
  +[_HKCompoundDimension dimensionWithBaseDimensions:]

  // instance methods
  -[_HKCompoundDimension .cxx_destruct]
  -[_HKCompoundDimension _baseDimensions]
  -[_HKCompoundDimension _initWithBaseDimensions:]


HKActivitySummaryQuery : HKQuery <HKActivitySummaryQueryClientInterface>
 @property  BOOL shouldIncludeActivitySummaryPrivateProperties
 @property  BOOL shouldIncludeActivitySummaryStatistics
 @property  @? completionHandler
 @property  BOOL orderByDateAscending
 @property  unsigned long limit
 @property  @? updateHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKActivitySummaryQuery configurationClass]
  +[HKActivitySummaryQuery clientInterfaceProtocol]
  +[HKActivitySummaryQuery configureClientInterface:]

  // instance methods
  -[HKActivitySummaryQuery .cxx_destruct]
  -[HKActivitySummaryQuery limit]
  -[HKActivitySummaryQuery setLimit:]
  -[HKActivitySummaryQuery completionHandler]
  -[HKActivitySummaryQuery setUpdateHandler:]
  -[HKActivitySummaryQuery updateHandler]
  -[HKActivitySummaryQuery queue_validate]
  -[HKActivitySummaryQuery queue_deliverError:]
  -[HKActivitySummaryQuery queue_shouldDeactivateAfterInitialResults]
  -[HKActivitySummaryQuery queue_queryDidDeactivate:]
  -[HKActivitySummaryQuery queue_populateConfiguration:]
  -[HKActivitySummaryQuery initWithPredicate:resultsHandler:]
  -[HKActivitySummaryQuery client_deliverActivitySummaries:isFinalBatch:clearPendingBatches:queryUUID:]
  -[HKActivitySummaryQuery shouldIncludeActivitySummaryPrivateProperties]
  -[HKActivitySummaryQuery setShouldIncludeActivitySummaryPrivateProperties:]
  -[HKActivitySummaryQuery shouldIncludeActivitySummaryStatistics]
  -[HKActivitySummaryQuery setShouldIncludeActivitySummaryStatistics:]
  -[HKActivitySummaryQuery orderByDateAscending]
  -[HKActivitySummaryQuery setOrderByDateAscending:]
  -[HKActivitySummaryQuery setShouldIncludePrivateActivitySummaryProperties:]


HKActivitySummaryQueryServerConfiguration : HKQueryServerConfiguration
 @property  BOOL shouldIncludeActivitySummaryPrivateProperties
 @property  BOOL shouldIncludeActivitySummaryStatistics
 @property  BOOL orderByDateAscending
 @property  unsigned long limit

  // class methods
  +[HKActivitySummaryQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[HKActivitySummaryQueryServerConfiguration copyWithZone:]
  -[HKActivitySummaryQueryServerConfiguration encodeWithCoder:]
  -[HKActivitySummaryQueryServerConfiguration initWithCoder:]
  -[HKActivitySummaryQueryServerConfiguration limit]
  -[HKActivitySummaryQueryServerConfiguration setLimit:]
  -[HKActivitySummaryQueryServerConfiguration shouldIncludeActivitySummaryPrivateProperties]
  -[HKActivitySummaryQueryServerConfiguration setShouldIncludeActivitySummaryPrivateProperties:]
  -[HKActivitySummaryQueryServerConfiguration shouldIncludeActivitySummaryStatistics]
  -[HKActivitySummaryQueryServerConfiguration setShouldIncludeActivitySummaryStatistics:]
  -[HKActivitySummaryQueryServerConfiguration orderByDateAscending]
  -[HKActivitySummaryQueryServerConfiguration setOrderByDateAscending:]


HKFeatureAvailabilityAtrialFibrillationOnboardingCountryCodeRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  NSString *onboardingCountryCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityAtrialFibrillationOnboardingCountryCodeRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityAtrialFibrillationOnboardingCountryCodeRule .cxx_destruct]
  -[HKFeatureAvailabilityAtrialFibrillationOnboardingCountryCodeRule evaluate]
  -[HKFeatureAvailabilityAtrialFibrillationOnboardingCountryCodeRule processUserInfo:]
  -[HKFeatureAvailabilityAtrialFibrillationOnboardingCountryCodeRule setOnboardingCountryCode:]
  -[HKFeatureAvailabilityAtrialFibrillationOnboardingCountryCodeRule onboardingCountryCode]


HKWorkoutBuilderSampleQuery : HKQuery <HKWorkoutBuilderSampleQueryClientInterface>
 @property  HKWorkoutBuilder *workoutBuilder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKWorkoutBuilderSampleQuery configurationClass]
  +[HKWorkoutBuilderSampleQuery clientInterfaceProtocol]
  +[HKWorkoutBuilderSampleQuery configureClientInterface:]

  // instance methods
  -[HKWorkoutBuilderSampleQuery .cxx_destruct]
  -[HKWorkoutBuilderSampleQuery queue_validate]
  -[HKWorkoutBuilderSampleQuery queue_deliverError:]
  -[HKWorkoutBuilderSampleQuery queue_shouldDeactivateAfterInitialResults]
  -[HKWorkoutBuilderSampleQuery queue_queryDidDeactivate:]
  -[HKWorkoutBuilderSampleQuery queue_populateConfiguration:]
  -[HKWorkoutBuilderSampleQuery client_deliverSamples:hasFinishedHistoricalFetch:queryUUID:]
  -[HKWorkoutBuilderSampleQuery initWithSampleType:workoutBuilder:samplesAddedHandler:]
  -[HKWorkoutBuilderSampleQuery workoutBuilder]
  -[HKWorkoutBuilderSampleQuery setWorkoutBuilder:]


_HKWorkoutBuilderSampleQueryConfiguration : HKQueryServerConfiguration
 @property  BOOL needsHistoricalData
 @property  NSUUID *workoutBuilderIdentifier

  // class methods
  +[_HKWorkoutBuilderSampleQueryConfiguration supportsSecureCoding]

  // instance methods
  -[_HKWorkoutBuilderSampleQueryConfiguration copyWithZone:]
  -[_HKWorkoutBuilderSampleQueryConfiguration encodeWithCoder:]
  -[_HKWorkoutBuilderSampleQueryConfiguration initWithCoder:]
  -[_HKWorkoutBuilderSampleQueryConfiguration .cxx_destruct]
  -[_HKWorkoutBuilderSampleQueryConfiguration setNeedsHistoricalData:]
  -[_HKWorkoutBuilderSampleQueryConfiguration setWorkoutBuilderIdentifier:]
  -[_HKWorkoutBuilderSampleQueryConfiguration needsHistoricalData]
  -[_HKWorkoutBuilderSampleQueryConfiguration workoutBuilderIdentifier]


HKUCUMUnitDisplayConverter : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *synonymLookupTable
 @property  NSDictionary *hkUnitNameLookupTable

  // class methods
  +[HKUCUMUnitDisplayConverter sharedConverter]

  // instance methods
  -[HKUCUMUnitDisplayConverter init]
  -[HKUCUMUnitDisplayConverter .cxx_destruct]
  -[HKUCUMUnitDisplayConverter hkUnitNameForUCUMUnitCode:]
  -[HKUCUMUnitDisplayConverter synonymForUCUMUnitString:]
  -[HKUCUMUnitDisplayConverter setSynonymLookupTable:]
  -[HKUCUMUnitDisplayConverter setHkUnitNameLookupTable:]
  -[HKUCUMUnitDisplayConverter synonymLookupTable]
  -[HKUCUMUnitDisplayConverter hkUnitNameLookupTable]


HKCumulativeQuantitySeriesSample : HKCumulativeQuantitySample
 @property  HKQuantity *sum

  // instance methods
  -[HKCumulativeQuantitySeriesSample sum]


HKStateMachinePendingEvent : NSObject /usr/lib/libc++.1.dylib
 @property  long long event
 @property  NSDate *date
 @property  NSError *error
 @property  @? completion

  // instance methods
  -[HKStateMachinePendingEvent .cxx_destruct]
  -[HKStateMachinePendingEvent date]
  -[HKStateMachinePendingEvent error]
  -[HKStateMachinePendingEvent setError:]
  -[HKStateMachinePendingEvent setDate:]
  -[HKStateMachinePendingEvent event]
  -[HKStateMachinePendingEvent setEvent:]
  -[HKStateMachinePendingEvent setCompletion:]
  -[HKStateMachinePendingEvent completion]


HKStateMachineState : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *incomingTransitions
 @property  NSDictionary *outgoingTransitions
 @property  long long index
 @property  NSString *label

  // instance methods
  -[HKStateMachineState init]
  -[HKStateMachineState isEqual:]
  -[HKStateMachineState .cxx_destruct]
  -[HKStateMachineState index]
  -[HKStateMachineState label]
  -[HKStateMachineState initWithIndex:label:]
  -[HKStateMachineState incomingTransitions]
  -[HKStateMachineState setIncomingTransitions:]
  -[HKStateMachineState outgoingTransitions]
  -[HKStateMachineState setOutgoingTransitions:]


HKStateMachineTransition : NSObject /usr/lib/libc++.1.dylib
 @property  long long event
 @property  NSString *label
 @property  HKStateMachineState *fromState
 @property  HKStateMachineState *toState

  // instance methods
  -[HKStateMachineTransition init]
  -[HKStateMachineTransition isEqual:]
  -[HKStateMachineTransition .cxx_destruct]
  -[HKStateMachineTransition label]
  -[HKStateMachineTransition event]
  -[HKStateMachineTransition fromState]
  -[HKStateMachineTransition toState]
  -[HKStateMachineTransition initWithEvent:label:from:to:]


HKStateMachine : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *name
 @property  <HKStateMachineDelegate> *delegate
 @property  HKStateMachineState *currentState

  // class methods
  +[HKStateMachine nameForOwner:UUID:tag:]

  // instance methods
  -[HKStateMachine init]
  -[HKStateMachine name]
  -[HKStateMachine delegate]
  -[HKStateMachine setDelegate:]
  -[HKStateMachine .cxx_destruct]
  -[HKStateMachine initWithName:]
  -[HKStateMachine currentState]
  -[HKStateMachine addStateWithIndex:label:]
  -[HKStateMachine addStateTransitionFrom:to:event:label:]
  -[HKStateMachine enterAtState:]
  -[HKStateMachine enqueueEvent:date:error:completion:]
  -[HKStateMachine _handleEvent:date:error:completion:]
  -[HKStateMachine _dequeueEvent]
  -[HKStateMachine stateWithIndex:]
  -[HKStateMachine graphDescription]


HKWorkoutConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *fitnessMachineSessionUUID
 @property  NSUUID *predictionSessionUUID
 @property  unsigned long activityType
 @property  long long locationType
 @property  long long swimmingLocationType
 @property  HKQuantity *lapLength

  // class methods
  +[HKWorkoutConfiguration supportsSecureCoding]
  +[HKWorkoutConfiguration _workoutConfigurationFromDictionary:]

  // instance methods
  -[HKWorkoutConfiguration init]
  -[HKWorkoutConfiguration isEqual:]
  -[HKWorkoutConfiguration copyWithZone:]
  -[HKWorkoutConfiguration encodeWithCoder:]
  -[HKWorkoutConfiguration initWithCoder:]
  -[HKWorkoutConfiguration .cxx_destruct]
  -[HKWorkoutConfiguration activityType]
  -[HKWorkoutConfiguration _dictionaryRepresentation]
  -[HKWorkoutConfiguration setActivityType:]
  -[HKWorkoutConfiguration locationType]
  -[HKWorkoutConfiguration setLocationType:]
  -[HKWorkoutConfiguration setSwimmingLocationType:]
  -[HKWorkoutConfiguration setLapLength:]
  -[HKWorkoutConfiguration setFitnessMachineSessionUUID:]
  -[HKWorkoutConfiguration validateAndReturnError:]
  -[HKWorkoutConfiguration swimmingLocationType]
  -[HKWorkoutConfiguration lapLength]
  -[HKWorkoutConfiguration fitnessMachineSessionUUID]
  -[HKWorkoutConfiguration predictionSessionUUID]
  -[HKWorkoutConfiguration setPredictionSessionUUID:]


HKConditionRecordType : HKMedicalType
  // class methods
  +[HKConditionRecordType allTypes]
  +[HKConditionRecordType conditionRecordType]


HKDateInterval : NSObject /usr/lib/libc++.1.dylib <HKDateInterval, NSCopying, NSSecureCoding>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKDateInterval supportsSecureCoding]

  // instance methods
  -[HKDateInterval init]
  -[HKDateInterval isEqual:]
  -[HKDateInterval copyWithZone:]
  -[HKDateInterval compare:]
  -[HKDateInterval encodeWithCoder:]
  -[HKDateInterval initWithCoder:]
  -[HKDateInterval .cxx_destruct]
  -[HKDateInterval startDate]
  -[HKDateInterval endDate]
  -[HKDateInterval initWithStartDate:endDate:]


HKClinicalBrand : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *externalID
 @property  NSString *batchID

  // class methods
  +[HKClinicalBrand supportsSecureCoding]

  // instance methods
  -[HKClinicalBrand init]
  -[HKClinicalBrand isEqual:]
  -[HKClinicalBrand copyWithZone:]
  -[HKClinicalBrand encodeWithCoder:]
  -[HKClinicalBrand initWithCoder:]
  -[HKClinicalBrand .cxx_destruct]
  -[HKClinicalBrand externalID]
  -[HKClinicalBrand batchID]
  -[HKClinicalBrand initWithExternalID:batchID:]


HKFeatureAvailabilityBaseRule : NSObject /usr/lib/libc++.1.dylib
 @property  <HKFeatureAvailabilityDataSource> *dataSource

  // class methods
  +[HKFeatureAvailabilityBaseRule ruleClassForRawValue:]

  // instance methods
  -[HKFeatureAvailabilityBaseRule .cxx_destruct]
  -[HKFeatureAvailabilityBaseRule dataSource]
  -[HKFeatureAvailabilityBaseRule setDataSource:]
  -[HKFeatureAvailabilityBaseRule evaluate]
  -[HKFeatureAvailabilityBaseRule initWithRawValue:dataSource:]
  -[HKFeatureAvailabilityBaseRule processUserInfo:]


HKFeatureAvailabilityAlwaysTrueRule : NSObject /usr/lib/libc++.1.dylib <HKFeatureAvailabilityRule>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityAlwaysTrueRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityAlwaysTrueRule evaluate]
  -[HKFeatureAvailabilityAlwaysTrueRule initWithRawValue:dataSource:]


HKFeatureAvailabilityAlwaysFalseRule : NSObject /usr/lib/libc++.1.dylib <HKFeatureAvailabilityRule>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityAlwaysFalseRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityAlwaysFalseRule evaluate]
  -[HKFeatureAvailabilityAlwaysFalseRule initWithRawValue:dataSource:]


HKChartableCodedQuantity : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  HKCodedQuantity *originalCodedQuantity
 @property  HKCodedQuantity *originalRangeLowCodedQuantity
 @property  HKCodedQuantity *originalRangeHighCodedQuantity
 @property  NSArray *codings
 @property  HKQuantity *quantity
 @property  BOOL hasRange
 @property  BOOL isInRange
 @property  double doubleValue
 @property  NSNumber *rangeLow
 @property  NSNumber *rangeHigh

  // class methods
  +[HKChartableCodedQuantity converter]
  +[HKChartableCodedQuantity chartableCodedQuantityWithCodings:originalCodedQuantity:originalRangeLowCodedQuantity:originalRangeHighCodedQuantity:error:]
  +[HKChartableCodedQuantity _valueFromCodedQuantity:inUnit:error:]

  // instance methods
  -[HKChartableCodedQuantity doubleValue]
  -[HKChartableCodedQuantity init]
  -[HKChartableCodedQuantity copyWithZone:]
  -[HKChartableCodedQuantity .cxx_destruct]
  -[HKChartableCodedQuantity quantity]
  -[HKChartableCodedQuantity isInRange]
  -[HKChartableCodedQuantity codings]
  -[HKChartableCodedQuantity doubleValueForUnit:]
  -[HKChartableCodedQuantity isCompatibleWithUnit:]
  -[HKChartableCodedQuantity initWithCodings:quantity:rangeLow:rangeHigh:]
  -[HKChartableCodedQuantity chartableCodedQuantityInUnit:error:]
  -[HKChartableCodedQuantity hasRange]
  -[HKChartableCodedQuantity rangeLow]
  -[HKChartableCodedQuantity rangeHigh]
  -[HKChartableCodedQuantity originalCodedQuantity]
  -[HKChartableCodedQuantity setOriginalCodedQuantity:]
  -[HKChartableCodedQuantity originalRangeLowCodedQuantity]
  -[HKChartableCodedQuantity setOriginalRangeLowCodedQuantity:]
  -[HKChartableCodedQuantity originalRangeHighCodedQuantity]
  -[HKChartableCodedQuantity setOriginalRangeHighCodedQuantity:]


HKElectrocardiogramQuery : HKQuery <HKElectrocardiogramQueryClientInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKElectrocardiogramQuery clientInterfaceProtocol]

  // instance methods
  -[HKElectrocardiogramQuery .cxx_destruct]
  -[HKElectrocardiogramQuery queue_deliverError:]
  -[HKElectrocardiogramQuery queue_queryDidDeactivate:]
  -[HKElectrocardiogramQuery _enumerateDataWithHandler:]
  -[HKElectrocardiogramQuery client_deliverData]
  -[HKElectrocardiogramQuery initWithElectrocardiogram:lead:dataHandler:]


HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionLessThanRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  {?=qqq} targetVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionLessThanRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionLessThanRule targetVersion]
  -[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionLessThanRule setTargetVersion:]
  -[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionLessThanRule evaluate]
  -[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionLessThanRule processUserInfo:]


_HKQueryUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_HKQueryUtilities totalDurationFromCoalescedDateIntervals:]
  +[_HKQueryUtilities coalesceTimePeriodsFromSamples:strictStartDate:strictEndDate:]
  +[_HKQueryUtilities arrayByCoalescingObjects:startDate:intervalComponents:calendar:combiningBlock:]
  +[_HKQueryUtilities sleepQueryWithStartDate:endDate:intervalComponents:calendar:predicate:healthStore:completion:]
  +[_HKQueryUtilities _processSleepQueryResults:startDate:intervalComponents:sourceOrder:calendar:]
  +[_HKQueryUtilities sleepDateIntervalForThePastWeekWithCalendar:]
  +[_HKQueryUtilities sleepQueryWithStartDate:endDate:intervalComponents:calendar:healthStore:completion:]
  +[_HKQueryUtilities coalesceTimePeriods:strictStartDate:strictEndDate:]
  +[_HKQueryUtilities _organizeSampleByStartDate:startDate:endDate:intervalComponents:callback:]
  +[_HKQueryUtilities calculateCountStatisticsWithSamples:startDate:endDate:intervalComponents:]
  +[_HKQueryUtilities calculateTotalDurationsWithTimePeriods:startDate:endDate:intervalComponents:startOfDayTransform:]
  +[_HKQueryUtilities calculateIncludedValuesWithSamples:startDate:endDate:intervalComponents:]
  +[_HKQueryUtilities countStatisticsQueryWithSampleType:startDate:endDate:intervalComponents:predicate:completion:]
  +[_HKQueryUtilities averageSumFromStatistics:unit:]
  +[_HKQueryUtilities averageSumFromQuantities:unit:]
  +[_HKQueryUtilities minimumFromQuantities:unit:]
  +[_HKQueryUtilities maximumFromQuantities:unit:]
  +[_HKQueryUtilities shouldUseDailyAverageWithDateComponents:sampleType:]
  +[_HKQueryUtilities coalesceTotalDurations:startDate:intervalComponents:intervalRecordCountsOut:]


HKSemanticDate : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *keyPath
 @property  NSDate *date

  // class methods
  +[HKSemanticDate supportsSecureCoding]
  +[HKSemanticDate semanticDateWithKeyPath:date:]

  // instance methods
  -[HKSemanticDate init]
  -[HKSemanticDate isEqual:]
  -[HKSemanticDate copyWithZone:]
  -[HKSemanticDate compare:]
  -[HKSemanticDate encodeWithCoder:]
  -[HKSemanticDate initWithCoder:]
  -[HKSemanticDate .cxx_destruct]
  -[HKSemanticDate date]
  -[HKSemanticDate keyPath]
  -[HKSemanticDate initWithKeyPath:date:]


HKActiveWatchFeatureAvailabilityDataSource : NSObject /usr/lib/libc++.1.dylib <HKFeatureAvailabilityDataSource>
 @property  NRPairedDeviceRegistry *pairedDeviceRegistry
 @property  NSString *electrocardiogramOnboardingCountryCode
 @property  NSString *atrialFibrillationDetectionOnboardingCountryCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKActiveWatchFeatureAvailabilityDataSource init]
  -[HKActiveWatchFeatureAvailabilityDataSource .cxx_destruct]
  -[HKActiveWatchFeatureAvailabilityDataSource watchProductType]
  -[HKActiveWatchFeatureAvailabilityDataSource watchElectrocardiogramVersion]
  -[HKActiveWatchFeatureAvailabilityDataSource watchOSBuildVersion]
  -[HKActiveWatchFeatureAvailabilityDataSource electrocardiogramOnboardingCountryCode]
  -[HKActiveWatchFeatureAvailabilityDataSource watchOSVersion]
  -[HKActiveWatchFeatureAvailabilityDataSource watchAtrialFibrillationDetectionVersion]
  -[HKActiveWatchFeatureAvailabilityDataSource watchRegion]
  -[HKActiveWatchFeatureAvailabilityDataSource atrialFibrillationDetectionOnboardingCountryCode]
  -[HKActiveWatchFeatureAvailabilityDataSource pairedDeviceRegistry]
  -[HKActiveWatchFeatureAvailabilityDataSource _activeWatch]
  -[HKActiveWatchFeatureAvailabilityDataSource _operatingSystemVersionForWatchOSVersion:]
  -[HKActiveWatchFeatureAvailabilityDataSource watchModelNumber]
  -[HKActiveWatchFeatureAvailabilityDataSource watchBuildType]
  -[HKActiveWatchFeatureAvailabilityDataSource watchCompanionDevicePlatform]
  -[HKActiveWatchFeatureAvailabilityDataSource setElectrocardiogramOnboardingCountryCode:]
  -[HKActiveWatchFeatureAvailabilityDataSource setAtrialFibrillationDetectionOnboardingCountryCode:]
  -[HKActiveWatchFeatureAvailabilityDataSource setPairedDeviceRegistry:]


_HKBedtimeAlarm : NSObject /usr/lib/libc++.1.dylib
 @property  NSDateComponents *sleepDateComponents
 @property  NSDateComponents *wakeDateComponents

  // class methods
  +[_HKBedtimeAlarm bedtimeAlarmWithSleepDate:wakeDate:calendar:]

  // instance methods
  -[_HKBedtimeAlarm .cxx_destruct]
  -[_HKBedtimeAlarm firstDateIntervalAfterDate:calendar:]
  -[_HKBedtimeAlarm initWithSleepDateComponents:wakeDateComponents:]
  -[_HKBedtimeAlarm sleepDateComponents]
  -[_HKBedtimeAlarm wakeDateComponents]


HKConceptIndexUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HKConceptIndexUtilities firstComponentForKeyPath:error:]
  +[HKConceptIndexUtilities indexedCodingsForCodings:context:error:]
  +[HKConceptIndexUtilities conceptsForIndexedConcepts:expectedCount:context:error:]
  +[HKConceptIndexUtilities keyPathRemovingFirstComponentFromKeyPath:error:]
  +[HKConceptIndexUtilities keyPaths:prefix:]

  // instance methods
  -[HKConceptIndexUtilities init]


HKIndexableObject : NSObject /usr/lib/libc++.1.dylib
 @property  id object
 @property  unsigned long compoundIndex
 @property  unsigned char outermostIndex

  // class methods
  +[HKIndexableObject indexableObjectWithObject:]
  +[HKIndexableObject indexableObjectWithObject:index:error:]
  +[HKIndexableObject indexableObjectsByApplyingOutermostIndex:expectedCount:error:]
  +[HKIndexableObject indexableObjectWithObject:compoundIndex:]

  // instance methods
  -[HKIndexableObject init]
  -[HKIndexableObject object]
  -[HKIndexableObject .cxx_destruct]
  -[HKIndexableObject initWithObject:compoundIndex:]
  -[HKIndexableObject outermostIndex]
  -[HKIndexableObject indexableObjectPoppingIndexWithError:]
  -[HKIndexableObject indexableObjectCollectingPushingIndex:error:]
  -[HKIndexableObject compoundIndex]


HKElectrocardiogramSession : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable, HKElectrocardiogramSessionClientInterface>
 @property  HKElectrocardiogramSessionConfiguration *sessionConfiguration
 @property  <HKElectrocardiogramSessionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKElectrocardiogramSession serverInterface]
  +[HKElectrocardiogramSession clientInterface]
  +[HKElectrocardiogramSession isElectrocardiogramSessionAvailable]

  // instance methods
  -[HKElectrocardiogramSession init]
  -[HKElectrocardiogramSession delegate]
  -[HKElectrocardiogramSession setDelegate:]
  -[HKElectrocardiogramSession .cxx_destruct]
  -[HKElectrocardiogramSession exportedInterface]
  -[HKElectrocardiogramSession connectionInvalidated]
  -[HKElectrocardiogramSession connectionInterrupted]
  -[HKElectrocardiogramSession remoteInterface]
  -[HKElectrocardiogramSession startWithCompletion:]
  -[HKElectrocardiogramSession sessionConfiguration]
  -[HKElectrocardiogramSession _successCompletionBlockOnClientQueue:]
  -[HKElectrocardiogramSession clientRemote_didDetectContactAtDate:]
  -[HKElectrocardiogramSession clientRemote_didEndWithReason:error:]
  -[HKElectrocardiogramSession clientRemote_didDetectEmergencyCallbackModeWithEndDate:]
  -[HKElectrocardiogramSession initWithHealthStore:configuration:]
  -[HKElectrocardiogramSession abortWithCompletion:]


HKElectrocardiogramSessionConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *sessionUUID
 @property  long long mode
 @property  double maximumDuration
 @property  BOOL wornOnRightArm

  // class methods
  +[HKElectrocardiogramSessionConfiguration supportsSecureCoding]
  +[HKElectrocardiogramSessionConfiguration sessionConfigurationWithUUID:mode:maximumDuration:wornOnRightArm:]

  // instance methods
  -[HKElectrocardiogramSessionConfiguration copyWithZone:]
  -[HKElectrocardiogramSessionConfiguration encodeWithCoder:]
  -[HKElectrocardiogramSessionConfiguration initWithCoder:]
  -[HKElectrocardiogramSessionConfiguration .cxx_destruct]
  -[HKElectrocardiogramSessionConfiguration setMode:]
  -[HKElectrocardiogramSessionConfiguration mode]
  -[HKElectrocardiogramSessionConfiguration maximumDuration]
  -[HKElectrocardiogramSessionConfiguration setMaximumDuration:]
  -[HKElectrocardiogramSessionConfiguration sessionUUID]
  -[HKElectrocardiogramSessionConfiguration setSessionUUID:]
  -[HKElectrocardiogramSessionConfiguration setWornOnRightArm:]
  -[HKElectrocardiogramSessionConfiguration wornOnRightArm]


HKElectrocardiogramSessionTaskConfiguration : HKTaskConfiguration <NSCopying>
 @property  HKElectrocardiogramSessionConfiguration *sessionConfiguration

  // class methods
  +[HKElectrocardiogramSessionTaskConfiguration supportsSecureCoding]

  // instance methods
  -[HKElectrocardiogramSessionTaskConfiguration copyWithZone:]
  -[HKElectrocardiogramSessionTaskConfiguration encodeWithCoder:]
  -[HKElectrocardiogramSessionTaskConfiguration initWithCoder:]
  -[HKElectrocardiogramSessionTaskConfiguration .cxx_destruct]
  -[HKElectrocardiogramSessionTaskConfiguration sessionConfiguration]
  -[HKElectrocardiogramSessionTaskConfiguration setSessionConfiguration:]


HKHealthServiceDiscovery : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long discoveryIdentifier
 @property  @? discoveryHandler
 @property  long long serviceType

  // instance methods
  -[HKHealthServiceDiscovery .cxx_destruct]
  -[HKHealthServiceDiscovery initWithType:]
  -[HKHealthServiceDiscovery serviceType]
  -[HKHealthServiceDiscovery initForAllTypes]
  -[HKHealthServiceDiscovery discoveryIdentifier]
  -[HKHealthServiceDiscovery setDiscoveryIdentifier:]
  -[HKHealthServiceDiscovery discoveryHandler]
  -[HKHealthServiceDiscovery setDiscoveryHandler:]


HKHealthServiceSession : NSObject /usr/lib/libc++.1.dylib
 @property  NSLock *propertyLock
 @property  unsigned long sessionIdentifier
 @property  @? sessionHandler
 @property  @? characteristicsHandler
 @property  HKHealthService *service

  // instance methods
  -[HKHealthServiceSession .cxx_destruct]
  -[HKHealthServiceSession service]
  -[HKHealthServiceSession sessionIdentifier]
  -[HKHealthServiceSession setSessionIdentifier:]
  -[HKHealthServiceSession initWithService:]
  -[HKHealthServiceSession sessionHandler]
  -[HKHealthServiceSession setSessionHandler:]
  -[HKHealthServiceSession propertyLock]
  -[HKHealthServiceSession setPropertyLock:]
  -[HKHealthServiceSession characteristicsHandler]
  -[HKHealthServiceSession setCharacteristicsHandler:]


HKCodableQuantitySeriesDatum : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasTimeInterval
 @property  double timeInterval
 @property  BOOL hasValue
 @property  double value
 @property  BOOL hasDuration
 @property  float duration

  // instance methods
  -[HKCodableQuantitySeriesDatum isEqual:]
  -[HKCodableQuantitySeriesDatum copyWithZone:]
  -[HKCodableQuantitySeriesDatum timeInterval]
  -[HKCodableQuantitySeriesDatum value]
  -[HKCodableQuantitySeriesDatum setValue:]
  -[HKCodableQuantitySeriesDatum dictionaryRepresentation]
  -[HKCodableQuantitySeriesDatum duration]
  -[HKCodableQuantitySeriesDatum writeTo:]
  -[HKCodableQuantitySeriesDatum mergeFrom:]
  -[HKCodableQuantitySeriesDatum readFrom:]
  -[HKCodableQuantitySeriesDatum copyTo:]
  -[HKCodableQuantitySeriesDatum setDuration:]
  -[HKCodableQuantitySeriesDatum setTimeInterval:]
  -[HKCodableQuantitySeriesDatum hasValue]
  -[HKCodableQuantitySeriesDatum hasDuration]
  -[HKCodableQuantitySeriesDatum setHasValue:]
  -[HKCodableQuantitySeriesDatum setHasDuration:]
  -[HKCodableQuantitySeriesDatum setHasTimeInterval:]
  -[HKCodableQuantitySeriesDatum hasTimeInterval]


_HKFitnessMachineConnection : NSObject /usr/lib/libc++.1.dylib <HKFitnessMachineConnectionClientInterface>
 @property  NSUUID *uuid
 @property  _HKFitnessMachine *fitnessMachine
 @property  unsigned long machineState
 @property  unsigned long connectionState
 @property  <_HKFitnessMachineConnectionDelegate> *delegate
 @property  HKDevice *deviceForFinalWorkout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HKFitnessMachineConnection supportsSecureCoding]

  // instance methods
  -[_HKFitnessMachineConnection isEqual:]
  -[_HKFitnessMachineConnection encodeWithCoder:]
  -[_HKFitnessMachineConnection initWithCoder:]
  -[_HKFitnessMachineConnection delegate]
  -[_HKFitnessMachineConnection setDelegate:]
  -[_HKFitnessMachineConnection .cxx_destruct]
  -[_HKFitnessMachineConnection uuid]
  -[_HKFitnessMachineConnection end]
  -[_HKFitnessMachineConnection connectionState]
  -[_HKFitnessMachineConnection _initWithHealthStore:]
  -[_HKFitnessMachineConnection _connectionInterruptedWithError:]
  -[_HKFitnessMachineConnection _simulateTapWithFitnessMachineType:]
  -[_HKFitnessMachineConnection _simulateAccept]
  -[_HKFitnessMachineConnection _simulateDisconnect]
  -[_HKFitnessMachineConnection _registerClient]
  -[_HKFitnessMachineConnection clientRemote_deliverFailedWithError:]
  -[_HKFitnessMachineConnection _clientQueue_deliverFailedWithError:]
  -[_HKFitnessMachineConnection clientRemote_deliverDetectedNFC:]
  -[_HKFitnessMachineConnection clientRemote_deliverMachineInformationUpdated:]
  -[_HKFitnessMachineConnection clientRemote_deliverMachineChangedToState:fromState:fitnessMachineSessionUUID:date:]
  -[_HKFitnessMachineConnection clientRemote_deliverConnectionChangedToState:fromState:fitnessMachineSessionUUID:error:]
  -[_HKFitnessMachineConnection markClientReady]
  -[_HKFitnessMachineConnection endWithFitnessMachineSessionUUID:]
  -[_HKFitnessMachineConnection currentSessionConfiguration]
  -[_HKFitnessMachineConnection deviceForFinalWorkout]
  -[_HKFitnessMachineConnection fitnessMachine]
  -[_HKFitnessMachineConnection machineState]
  -[_HKFitnessMachineConnection permitDataTransferWithFitnessMachineSessionUUID:]


HKFeatureAvailabilityWatchOSBuildVersionGreaterThanRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  NSString *buildVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityWatchOSBuildVersionGreaterThanRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityWatchOSBuildVersionGreaterThanRule .cxx_destruct]
  -[HKFeatureAvailabilityWatchOSBuildVersionGreaterThanRule buildVersion]
  -[HKFeatureAvailabilityWatchOSBuildVersionGreaterThanRule setBuildVersion:]
  -[HKFeatureAvailabilityWatchOSBuildVersionGreaterThanRule evaluate]
  -[HKFeatureAvailabilityWatchOSBuildVersionGreaterThanRule processUserInfo:]


HKPluginProxyProvider : HKProxyProvider
 @property  NSString *pluginIdentifier

  // instance methods
  -[HKPluginProxyProvider pluginIdentifier]
  -[HKPluginProxyProvider fetchProxyServiceEndpointForIdentifier:endpointHandler:errorHandler:]
  -[HKPluginProxyProvider initWithHealthStore:pluginIdentifier:exportedObject:]
  -[HKPluginProxyProvider fetchPluginProxyWithHandler:errorHandler:]


HKMedicationDispenseRecordType : HKMedicalType
  // class methods
  +[HKMedicationDispenseRecordType allTypes]
  +[HKMedicationDispenseRecordType medicationDispenseRecordType]


_HKFactorization : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
  // class methods
  +[_HKFactorization supportsSecureCoding]
  +[_HKFactorization factorizationFromString:factorGrammar:]
  +[_HKFactorization factorization]
  +[_HKFactorization factorizationWithFactor:exponent:]
  +[_HKFactorization factorizationWithFactorsAndExponents:]

  // instance methods
  -[_HKFactorization init]
  -[_HKFactorization isEqual:]
  -[_HKFactorization copyWithZone:]
  -[_HKFactorization encodeWithCoder:]
  -[_HKFactorization initWithCoder:]
  -[_HKFactorization .cxx_destruct]
  -[_HKFactorization unitString]
  -[_HKFactorization factorCount]
  -[_HKFactorization anyFactor]
  -[_HKFactorization exponentForFactor:]
  -[_HKFactorization factorizationByRaisingToExponent:]
  -[_HKFactorization enumerateFactorsWithHandler:]
  -[_HKFactorization _multiplyByFactor:exponent:]
  -[_HKFactorization _enumerateFactorsWithHandler:]
  -[_HKFactorization _multiplyByFactorization:]
  -[_HKFactorization reciprocal]
  -[_HKFactorization factorizationByMultiplying:]
  -[_HKFactorization _raiseToExponent:]
  -[_HKFactorization _exponentForFactor:]
  -[_HKFactorization factorizationByDividing:]


_HKMutableFactorization : _HKFactorization
  // instance methods
  -[_HKMutableFactorization multiplyByFactorization:]
  -[_HKMutableFactorization multiplyByFactor:exponent:]
  -[_HKMutableFactorization divideByFactorization:]
  -[_HKMutableFactorization raiseToExponent:]


HKDiagnosticTestReportType : HKMedicalType
  // class methods
  +[HKDiagnosticTestReportType allTypes]
  +[HKDiagnosticTestReportType diagnosticTestReportType]


HKTaskConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
  // class methods
  +[HKTaskConfiguration supportsSecureCoding]

  // instance methods
  -[HKTaskConfiguration copyWithZone:]
  -[HKTaskConfiguration encodeWithCoder:]
  -[HKTaskConfiguration initWithCoder:]


HKJSONValidator : NSObject /usr/lib/libc++.1.dylib
 @property  <NSCopying> *schema

  // class methods
  +[HKJSONValidator searchPaths]
  +[HKJSONValidator registerSearchPath:]
  +[HKJSONValidator validateJSONObject:withSchemaNamed:bundle:error:]

  // instance methods
  -[HKJSONValidator init]
  -[HKJSONValidator .cxx_destruct]
  -[HKJSONValidator schema]
  -[HKJSONValidator initWithSchema:]
  -[HKJSONValidator _validateJSONObject:keyStack:]
  -[HKJSONValidator _mismatchErrorFromKeyStack:]
  -[HKJSONValidator _validateValue:schema:keyStack:root:]
  -[HKJSONValidator initWithSchemaNamed:bundle:]
  -[HKJSONValidator validateJSONObject:error:]
  -[HKJSONValidator _validateDictionary:schema:keyStack:]
  -[HKJSONValidator _validateArray:schema:keyStack:]
  -[HKJSONValidator _validatePrimitive:schema:keyStack:]
  -[HKJSONValidator _validateBoolean:]
  -[HKJSONValidator _validateFingerprintSHA256:]
  -[HKJSONValidator _validateTimezone:]
  -[HKJSONValidator _validateURL:]
  -[HKJSONValidator _validateValue:subschemaNamed:keyStack:]
  -[HKJSONValidator _loadSubschemaNamed:]
  -[HKJSONValidator initWithSchema:subschemaCache:]


HKCSVParser : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HKCSVParser newlineCharacterSet]
  +[HKCSVParser commaCharacterSet]
  +[HKCSVParser quoteCharacterSet]
  +[HKCSVParser terminatingCharacterSet]
  +[HKCSVParser newlineWithScanner:]
  +[HKCSVParser fieldWithScanner:error:]
  +[HKCSVParser recordWithScanner:error:]
  +[HKCSVParser parseCSV:error:]


HKDiagnosticTestResult : HKMedicalRecord <HKConceptIndexable, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *UUID
 @property  NSLocale *locale
 @property  HKDiagnosticTestResultType *diagnosticTestResultType
 @property  HKConcept *bodySite
 @property  NSArray *bodySiteCodings
 @property  NSString *category
 @property  NSString *comments
 @property  HKConcept *diagnosticTest
 @property  NSArray *diagnosticTestCodings
 @property  HKMedicalDate *effectiveEndDate
 @property  HKMedicalDate *effectiveStartDate
 @property  HKConcept *interpretation
 @property  NSArray *interpretationCodings
 @property  HKMedicalDate *issueDate
 @property  HKConcept *method
 @property  NSArray *methodCodings
 @property  NSArray *performers
 @property  NSArray *referenceRanges
 @property  HKConcept *status
 @property  HKMedicalCoding *statusCoding
 @property  HKInspectableValueCollection *value

  // class methods
  +[HKDiagnosticTestResult supportsSecureCoding]
  +[HKDiagnosticTestResult supportsEquivalence]
  +[HKDiagnosticTestResult _isConcreteObjectClass]
  +[HKDiagnosticTestResult indexableConceptKeyPaths]
  +[HKDiagnosticTestResult cachedConceptRelationshipKeyPaths]
  +[HKDiagnosticTestResult defaultDisplayString]
  +[HKDiagnosticTestResult diagnosticTestCodingsPreferredSystems]
  +[HKDiagnosticTestResult diagnosticTestResultWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:diagnosticTestCodings:value:referenceRanges:effectiveStartDate:category:issueDate:effectiveEndDate:statusCoding:interpretationCodings:comments:bodySiteCodings:methodCodings:performers:]
  +[HKDiagnosticTestResult diagnosticTestResultWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:diagnosticTestCodings:value:referenceRanges:effectiveStartDate:category:issueDate:effectiveEndDate:statusCoding:interpretationCodings:comments:bodySiteCodings:methodCodings:performers:]
  +[HKDiagnosticTestResult _newDiagnosticTestResultWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:diagnosticTestCodings:value:referenceRanges:effectiveStartDate:category:issueDate:effectiveEndDate:statusCoding:interpretationCodings:comments:bodySiteCodings:methodCodings:performers:config:]
  +[HKDiagnosticTestResult statusCodingPreferredSystems]
  +[HKDiagnosticTestResult bodySiteCodingsPreferredSystems]
  +[HKDiagnosticTestResult interpretationCodingsPreferredSystems]
  +[HKDiagnosticTestResult methodCodingsPreferredSystems]

  // instance methods
  -[HKDiagnosticTestResult init]
  -[HKDiagnosticTestResult copyWithZone:]
  -[HKDiagnosticTestResult encodeWithCoder:]
  -[HKDiagnosticTestResult initWithCoder:]
  -[HKDiagnosticTestResult .cxx_destruct]
  -[HKDiagnosticTestResult category]
  -[HKDiagnosticTestResult value]
  -[HKDiagnosticTestResult method]
  -[HKDiagnosticTestResult status]
  -[HKDiagnosticTestResult _setCategory:]
  -[HKDiagnosticTestResult _setValue:]
  -[HKDiagnosticTestResult comments]
  -[HKDiagnosticTestResult performers]
  -[HKDiagnosticTestResult _setStatus:]
  -[HKDiagnosticTestResult interpretation]
  -[HKDiagnosticTestResult referenceRanges]
  -[HKDiagnosticTestResult statusCoding]
  -[HKDiagnosticTestResult isEquivalent:]
  -[HKDiagnosticTestResult _validateConfigurationWithOptions:]
  -[HKDiagnosticTestResult statusCodingCollection]
  -[HKDiagnosticTestResult statusCodingContext]
  -[HKDiagnosticTestResult _setStatusCoding:]
  -[HKDiagnosticTestResult diagnosticTestCodings]
  -[HKDiagnosticTestResult codingsForKeyPath:error:]
  -[HKDiagnosticTestResult _setDiagnosticTest:]
  -[HKDiagnosticTestResult applyConcepts:forKeyPath:error:]
  -[HKDiagnosticTestResult medicalRecordCodings]
  -[HKDiagnosticTestResult indexKeywords]
  -[HKDiagnosticTestResult medicalRecordPreferredSystems]
  -[HKDiagnosticTestResult bodySiteCodings]
  -[HKDiagnosticTestResult _setBodySite:]
  -[HKDiagnosticTestResult diagnosticTestResultType]
  -[HKDiagnosticTestResult effectiveStartDate]
  -[HKDiagnosticTestResult issueDate]
  -[HKDiagnosticTestResult effectiveEndDate]
  -[HKDiagnosticTestResult interpretationCodings]
  -[HKDiagnosticTestResult methodCodings]
  -[HKDiagnosticTestResult diagnosticTest]
  -[HKDiagnosticTestResult bodySite]
  -[HKDiagnosticTestResult diagnosticTestCodingsCollection]
  -[HKDiagnosticTestResult diagnosticTestCodingsContext]
  -[HKDiagnosticTestResult interpretationCodingsCollection]
  -[HKDiagnosticTestResult interpretationCodingsContext]
  -[HKDiagnosticTestResult bodySiteCodingsCollection]
  -[HKDiagnosticTestResult bodySiteCodingsContext]
  -[HKDiagnosticTestResult methodCodingsCollection]
  -[HKDiagnosticTestResult methodCodingsContext]
  -[HKDiagnosticTestResult _setDiagnosticTestCodings:]
  -[HKDiagnosticTestResult _setReferenceRanges:]
  -[HKDiagnosticTestResult _setEffectiveStartDate:]
  -[HKDiagnosticTestResult _setIssueDate:]
  -[HKDiagnosticTestResult _setEffectiveEndDate:]
  -[HKDiagnosticTestResult _setInterpretationCodings:]
  -[HKDiagnosticTestResult _setComments:]
  -[HKDiagnosticTestResult _setBodySiteCodings:]
  -[HKDiagnosticTestResult _setMethodCodings:]
  -[HKDiagnosticTestResult _setPerformers:]
  -[HKDiagnosticTestResult _setInterpretation:]
  -[HKDiagnosticTestResult _setMethod:]
  -[HKDiagnosticTestResult statusCodingTasks]
  -[HKDiagnosticTestResult diagnosticTestCodingsTasks]
  -[HKDiagnosticTestResult bodySiteCodingsTasks]
  -[HKDiagnosticTestResult interpretationCodingsTasks]
  -[HKDiagnosticTestResult methodCodingsTasks]


HKSampleQueryDescription : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  HKSampleType *sampleType
 @property  NSPredicate *predicate

  // class methods
  +[HKSampleQueryDescription supportsSecureCoding]
  +[HKSampleQueryDescription sampleQueryDescriptionWithSampleType:]
  +[HKSampleQueryDescription sampleQueryDescriptionWithSampleType:predicate:]
  +[HKSampleQueryDescription medicalRecordDescriptionsWithPredicate:]
  +[HKSampleQueryDescription allergiesDescriptionsWithPredicate:]
  +[HKSampleQueryDescription conditionsDescriptionsWithPredicate:]
  +[HKSampleQueryDescription immunizationsDescriptionsWithPredicate:]
  +[HKSampleQueryDescription labsDescriptionsWithPredicate:]
  +[HKSampleQueryDescription medicationsDescriptionsWithPredicate:]
  +[HKSampleQueryDescription proceduresDescriptionsWithPredicate:]
  +[HKSampleQueryDescription vitalsDescriptionsWithPredicate:]
  +[HKSampleQueryDescription medicalRecordDescriptions]
  +[HKSampleQueryDescription allergiesDescriptions]
  +[HKSampleQueryDescription conditionsDescriptions]
  +[HKSampleQueryDescription immunizationsDescriptions]
  +[HKSampleQueryDescription labsDescriptions]
  +[HKSampleQueryDescription medicationsDescriptions]
  +[HKSampleQueryDescription proceduresDescriptions]
  +[HKSampleQueryDescription vitalsDescriptions]

  // instance methods
  -[HKSampleQueryDescription init]
  -[HKSampleQueryDescription isEqual:]
  -[HKSampleQueryDescription copyWithZone:]
  -[HKSampleQueryDescription encodeWithCoder:]
  -[HKSampleQueryDescription initWithCoder:]
  -[HKSampleQueryDescription .cxx_destruct]
  -[HKSampleQueryDescription predicate]
  -[HKSampleQueryDescription sampleType]
  -[HKSampleQueryDescription initWithSampleType:predicate:]


HKSeriesBuilder : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable, HKSeriesBuilderClientInterface>
 @property  HKTaskServerProxyProvider *proxyProvider
 @property  NSUUID *identifier
 @property  HKSeriesBuilderConfiguration *configuration
 @property  HKHealthStore *store
 @property  NSObject<OS_dispatch_queue> *completionQueue
 @property  NSObject<OS_dispatch_queue> *resourceQueue
 @property  long long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSeriesBuilder serverInterface]
  +[HKSeriesBuilder clientInterface]
  +[HKSeriesBuilder configureClientInterface:]
  +[HKSeriesBuilder taskServerIdentifier]
  +[HKSeriesBuilder configureServerInterface:]

  // instance methods
  -[HKSeriesBuilder init]
  -[HKSeriesBuilder .cxx_destruct]
  -[HKSeriesBuilder identifier]
  -[HKSeriesBuilder state]
  -[HKSeriesBuilder exportedInterface]
  -[HKSeriesBuilder store]
  -[HKSeriesBuilder setState:]
  -[HKSeriesBuilder configuration]
  -[HKSeriesBuilder connectionInvalidated]
  -[HKSeriesBuilder remoteInterface]
  -[HKSeriesBuilder completionQueue]
  -[HKSeriesBuilder _resourceQueue_addMetadata:completion:]
  -[HKSeriesBuilder resourceQueue]
  -[HKSeriesBuilder freezeBuilderWithCompletion:]
  -[HKSeriesBuilder recoverWithCompletion:]
  -[HKSeriesBuilder proxyProvider]
  -[HKSeriesBuilder setProxyProvider:]
  -[HKSeriesBuilder _initWithHealthStore:identifier:configuration:]
  -[HKSeriesBuilder discard]
  -[HKSeriesBuilder _resourceQueue_discardWithHandler:]
  -[HKSeriesBuilder clientRemote_didChangeToState:]


HKMedicationDosage : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *instruction
 @property  HKMedicalDateInterval *timingPeriod

  // class methods
  +[HKMedicationDosage supportsSecureCoding]
  +[HKMedicationDosage dosageWithInstruction:timingPeriod:]

  // instance methods
  -[HKMedicationDosage init]
  -[HKMedicationDosage isEqual:]
  -[HKMedicationDosage copyWithZone:]
  -[HKMedicationDosage encodeWithCoder:]
  -[HKMedicationDosage initWithCoder:]
  -[HKMedicationDosage .cxx_destruct]
  -[HKMedicationDosage instruction]
  -[HKMedicationDosage initWithInstruction:timingPeriod:]
  -[HKMedicationDosage timingPeriod]


_HKFitnessMachineSessionConfiguration : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSUUID *sessionUUID
 @property  NSUUID *connectionUUID
 @property  NSUUID *machineUUID
 @property  unsigned long machineType
 @property  NSString *machineName
 @property  NSString *machineBrand

  // class methods
  +[_HKFitnessMachineSessionConfiguration supportsSecureCoding]

  // instance methods
  -[_HKFitnessMachineSessionConfiguration encodeWithCoder:]
  -[_HKFitnessMachineSessionConfiguration initWithCoder:]
  -[_HKFitnessMachineSessionConfiguration .cxx_destruct]
  -[_HKFitnessMachineSessionConfiguration connectionUUID]
  -[_HKFitnessMachineSessionConfiguration sessionUUID]
  -[_HKFitnessMachineSessionConfiguration _setConnectionUUID:]
  -[_HKFitnessMachineSessionConfiguration _setSessionUUID:]
  -[_HKFitnessMachineSessionConfiguration _setMachineUUID:]
  -[_HKFitnessMachineSessionConfiguration _setMachineType:]
  -[_HKFitnessMachineSessionConfiguration _setMachineName:]
  -[_HKFitnessMachineSessionConfiguration _setMachineBrand:]
  -[_HKFitnessMachineSessionConfiguration machineUUID]
  -[_HKFitnessMachineSessionConfiguration machineType]
  -[_HKFitnessMachineSessionConfiguration machineName]
  -[_HKFitnessMachineSessionConfiguration machineBrand]


_HKDeepBreathingSession : NSObject /usr/lib/libc++.1.dylib
 @property  <_HKDeepBreathingSessionDelegate> *delegate
 @property  long long serverState
 @property  _HKDeepBreathingSessionConfiguration *sessionConfiguration

  // class methods
  +[_HKDeepBreathingSession _clientInterface]
  +[_HKDeepBreathingSession sessionWithConfiguration:lifecycleDelegate:]
  +[_HKDeepBreathingSession _serverInterface]

  // instance methods
  -[_HKDeepBreathingSession delegate]
  -[_HKDeepBreathingSession setDelegate:]
  -[_HKDeepBreathingSession .cxx_destruct]
  -[_HKDeepBreathingSession _sessionConfiguration]
  -[_HKDeepBreathingSession _serverProxy]
  -[_HKDeepBreathingSession sessionConfiguration]
  -[_HKDeepBreathingSession _attachServerWithClientQueue:healthStore:completion:]
  -[_HKDeepBreathingSession _connectionDidEncounterError:]
  -[_HKDeepBreathingSession _initWithSessionConfiguration:lifecycleDelegate:]
  -[_HKDeepBreathingSession sessionDidReceiveError:]
  -[_HKDeepBreathingSession sessionDidReceiveHeartRate:]
  -[_HKDeepBreathingSession startSessionWithStartDate:completion:]
  -[_HKDeepBreathingSession startGuiding]
  -[_HKDeepBreathingSession endSessionWithEndReason:]
  -[_HKDeepBreathingSession _serverWithErrorHandler:]
  -[_HKDeepBreathingSession _queue_transitionToServerState:]
  -[_HKDeepBreathingSession _isServerAttached]
  -[_HKDeepBreathingSession serverState]
  -[_HKDeepBreathingSession _queue_deactivate]
  -[_HKDeepBreathingSession _queue_alertDelegateDidEncounterError:]
  -[_HKDeepBreathingSession _queue_isServerAttached]
  -[_HKDeepBreathingSession _queue_alertDelegateDidReceiveHeartRate:]
  -[_HKDeepBreathingSession _lifecycleDelegate]


HKLiveWorkoutDataSource : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable>
 @property  HKTaskServerProxyProvider *proxyProvider
 @property  HKHealthStore *healthStore
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableSet *mutableSampleTypesToCollect
 @property  NSMutableDictionary *mutableFiltersBySampleType
 @property  NSUUID *identifier
 @property  NSSet *typesToCollect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKLiveWorkoutDataSource serverInterface]
  +[HKLiveWorkoutDataSource clientInterface]
  +[HKLiveWorkoutDataSource defaultConfigurationWithWorkoutConfiguration:]

  // instance methods
  -[HKLiveWorkoutDataSource setQueue:]
  -[HKLiveWorkoutDataSource queue]
  -[HKLiveWorkoutDataSource .cxx_destruct]
  -[HKLiveWorkoutDataSource identifier]
  -[HKLiveWorkoutDataSource exportedInterface]
  -[HKLiveWorkoutDataSource connectionInvalidated]
  -[HKLiveWorkoutDataSource healthStore]
  -[HKLiveWorkoutDataSource setHealthStore:]
  -[HKLiveWorkoutDataSource connectionInterrupted]
  -[HKLiveWorkoutDataSource remoteInterface]
  -[HKLiveWorkoutDataSource proxyProvider]
  -[HKLiveWorkoutDataSource _startTaskServerIfNeeded]
  -[HKLiveWorkoutDataSource workoutBuilderDidFinish]
  -[HKLiveWorkoutDataSource initWithHealthStore:workoutConfiguration:]
  -[HKLiveWorkoutDataSource setProxyProvider:]
  -[HKLiveWorkoutDataSource _queue_dataSourceConfiguration]
  -[HKLiveWorkoutDataSource typesToCollect]
  -[HKLiveWorkoutDataSource enableCollectionForType:predicate:]
  -[HKLiveWorkoutDataSource disableCollectionForType:]
  -[HKLiveWorkoutDataSource mutableSampleTypesToCollect]
  -[HKLiveWorkoutDataSource setMutableSampleTypesToCollect:]
  -[HKLiveWorkoutDataSource mutableFiltersBySampleType]
  -[HKLiveWorkoutDataSource setMutableFiltersBySampleType:]


HKHeartbeatSequenceSample : HKHeartbeatSeriesSample

HKObjectType : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  BOOL _clinicalType
 @property  ^{?=@@@@scC} definition
 @property  long long code
 @property  HKObjectType *parentType
 @property  Class dataObjectClass
 @property  BOOL isClinicalType
 @property  NSString *identifier

  // class methods
  +[HKObjectType supportsSecureCoding]
  +[HKObjectType workoutType]
  +[HKObjectType _clinicalTypesFromTypes:]
  +[HKObjectType _nonClinicalTypesFromTypes:]
  +[HKObjectType _allowAuthorizationForSharingWithTypes:entitlements:disallowedTypes:]
  +[HKObjectType _allowAuthorizationForReadingWithTypes:entitlements:disallowedTypes:]
  +[HKObjectType characteristicTypeForIdentifier:]
  +[HKObjectType dataTypeWithCode:]
  +[HKObjectType _objectTypeWithIdentifier:class:lookupTable:]
  +[HKObjectType unknownRecordTypeForIdentifier:]
  +[HKObjectType medicationOrderTypeForIdentifier:]
  +[HKObjectType allergyRecordTypeForIdentifier:]
  +[HKObjectType activityCacheType]
  +[HKObjectType _typeWithIdentifier:]
  +[HKObjectType accountOwnerTypeForIdentifier:]
  +[HKObjectType quantityTypeForIdentifier:]
  +[HKObjectType objectTypeForWorkoutMetric:]
  +[HKObjectType documentTypeForIdentifier:]
  +[HKObjectType fitnessFriendActivitySnapshotType]
  +[HKObjectType categoryTypeForIdentifier:]
  +[HKObjectType procedureRecordTypeForIdentifier:]
  +[HKObjectType diagnosticTestResultTypeForIdentifier:]
  +[HKObjectType activitySummaryType]
  +[HKObjectType conditionRecordTypeForIdentifier:]
  +[HKObjectType medicationDispenseRecordTypeForIdentifier:]
  +[HKObjectType diagnosticTestReportTypeForIdentifier:]
  +[HKObjectType _allTypesWithIdentifierTable:]
  +[HKObjectType clinicalTypeForIdentifier:]
  +[HKObjectType correlationTypeForIdentifier:]
  +[HKObjectType seriesTypeForIdentifier:]
  +[HKObjectType audiogramSampleType]
  +[HKObjectType heartStudyEventType]
  +[HKObjectType _enumerateObjectTypesWithHandler:]
  +[HKObjectType _allDataTypeIdentifiers]
  +[HKObjectType _allTypesOfClass:]
  +[HKObjectType _typesIncludingParentTypes:]
  +[HKObjectType _allCategoryTypes]
  +[HKObjectType _allCharacteristicTypes]
  +[HKObjectType _allCorrelationTypes]
  +[HKObjectType _allQuantityTypes]
  +[HKObjectType dataTypeWithNumber:]
  +[HKObjectType _objectTypesFromIdentifierArray:error:]
  +[HKObjectType calorieGoal]
  +[HKObjectType exerciseGoal]
  +[HKObjectType standGoal]
  +[HKObjectType briskMinuteDataType]
  +[HKObjectType coachingEventType]
  +[HKObjectType deepBreathingSessionType]
  +[HKObjectType watchActivationType]
  +[HKObjectType menstrualFlowType]
  +[HKObjectType heartRateType]
  +[HKObjectType tachycardiaType]
  +[HKObjectType bradycardiaType]
  +[HKObjectType irregularlyIrregularPulseType]
  +[HKObjectType atrialFibrillationEventType]
  +[HKObjectType fitnessFriendAchievementType]
  +[HKObjectType fitnessFriendWorkoutType]
  +[HKObjectType audioExposureEventType]
  +[HKObjectType activityMoveModeChangeType]
  +[HKObjectType medicalTypeForIdentifier:]
  +[HKObjectType _allowAuthorizationForSharing:types:entitlements:disallowedTypes:]
  +[HKObjectType vaccinationRecordTypeForIdentifier:]
  +[HKObjectType medicationRecordTypeForIdentifier:]

  // instance methods
  -[HKObjectType init]
  -[HKObjectType isEqual:]
  -[HKObjectType copyWithZone:]
  -[HKObjectType code]
  -[HKObjectType encodeWithCoder:]
  -[HKObjectType initWithCoder:]
  -[HKObjectType .cxx_destruct]
  -[HKObjectType identifier]
  -[HKObjectType _definition]
  -[HKObjectType _requiresAuthorization]
  -[HKObjectType _hk_localizedNameKey]
  -[HKObjectType hk_localizedName]
  -[HKObjectType hk_localizedNameForLocale:]
  -[HKObjectType hk_localizedNameForAuthSheet]
  -[HKObjectType parentType]
  -[HKObjectType _predicateForSDKVersion:]
  -[HKObjectType _initWithCode:]
  -[HKObjectType setParentType:]
  -[HKObjectType isClinicalType]
  -[HKObjectType _isClinicalType]
  -[HKObjectType isHealthRecordsType]
  -[HKObjectType dataObjectClass]


HKQuantityType : HKSampleType
 @property  _HKDimension *dimension
 @property  HKUnit *canonicalUnit
 @property  long long aggregationStyle

  // class methods
  +[HKQuantityType _quantityTypeWithCode:]

  // instance methods
  -[HKQuantityType .cxx_destruct]
  -[HKQuantityType dimension]
  -[HKQuantityType isCompatibleWithUnit:]
  -[HKQuantityType aggregationStyle]
  -[HKQuantityType canonicalUnit]
  -[HKQuantityType _initWithCode:]
  -[HKQuantityType validateUnit:]
  -[HKQuantityType _validateMetadata:sample:error:]
  -[HKQuantityType validateUnitFromString:]


HKCategoryType : HKSampleType
  // class methods
  +[HKCategoryType _categoryTypeWithCode:]

  // instance methods
  -[HKCategoryType _defaultValue]
  -[HKCategoryType _predicateForSDKVersion:]
  -[HKCategoryType _validateMetadata:sample:error:]
  -[HKCategoryType _acceptsValue:]
  -[HKCategoryType _categoryValueForValue:]


HKCharacteristicType : HKObjectType
  // instance methods
  -[HKCharacteristicType _validateCharacteristic:error:]
  -[HKCharacteristicType _validateDateOfBirth:error:]
  -[HKCharacteristicType _validateBiologicalSex:error:]
  -[HKCharacteristicType _validateBloodType:error:]
  -[HKCharacteristicType _canoncialUnit]
  -[HKCharacteristicType _validateQuantity:withCompatibleUnit:error:]
  -[HKCharacteristicType _validateFitzpatrickSkinType:error:]
  -[HKCharacteristicType _validateWheelchairUse:error:]
  -[HKCharacteristicType _relatedQuantityType]
  -[HKCharacteristicType _relatedCategoryType]
  -[HKCharacteristicType _relatedSampleForInsertionWithCharacteristicValue:]


HKCorrelationType : HKSampleType
  // instance methods
  -[HKCorrelationType _requiresAuthorization]


HKDocumentType : HKSampleType

HKWorkoutType : HKSampleType

HKSeriesType : HKSampleType
  // class methods
  +[HKSeriesType workoutRouteType]
  +[HKSeriesType heartbeatSeriesType]
  +[HKSeriesType _insertCode:forIdentifier:]

  // instance methods
  -[HKSeriesType dataObjectClass]


HKActivitySummaryType : HKObjectType

HKAudiogramSampleType : HKSampleType

HKSampleType : HKObjectType
 @property  BOOL isMaximumDurationRestricted
 @property  double maximumAllowedDuration
 @property  BOOL isMinimumDurationRestricted
 @property  double minimumAllowedDuration

  // class methods
  +[HKSampleType medicalRecordTypes]

  // instance methods
  -[HKSampleType isMaximumDurationRestricted]
  -[HKSampleType maximumAllowedDuration]
  -[HKSampleType isMinimumDurationRestricted]
  -[HKSampleType minimumAllowedDuration]
  -[HKSampleType _earliestAllowedStartDateForSampleOverlappingDate:]
  -[HKSampleType _validateMetadata:sample:error:]
  -[HKSampleType _maximumAllowedDuration]
  -[HKSampleType _minimumAllowedDuration]


_HKStringSampleType : HKSampleType

HKHeartbeatSequenceSampleType : HKSampleType
  // class methods
  +[HKHeartbeatSequenceSampleType heartbeatSequenceType]

  // instance methods
  -[HKHeartbeatSequenceSampleType dataObjectClass]


HKElectrocardiogramType : HKSampleType
  // class methods
  +[HKElectrocardiogramType electrocardiogramType]

  // instance methods
  -[HKElectrocardiogramType dataObjectClass]


_HKActivityStatisticsQuery : HKQuery <HKActivityStatisticsQueryClientInterface>
 @property  @? initialQueryResultsHandler
 @property  double updateInterval
 @property  @? queryUpdateHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HKActivityStatisticsQuery configurationClass]
  +[_HKActivityStatisticsQuery clientInterfaceProtocol]
  +[_HKActivityStatisticsQuery configureClientInterface:]

  // instance methods
  -[_HKActivityStatisticsQuery .cxx_destruct]
  -[_HKActivityStatisticsQuery _updateInterval]
  -[_HKActivityStatisticsQuery queue_validate]
  -[_HKActivityStatisticsQuery queue_deliverError:]
  -[_HKActivityStatisticsQuery queue_shouldDeactivateAfterInitialResults]
  -[_HKActivityStatisticsQuery queue_queryDidDeactivate:]
  -[_HKActivityStatisticsQuery queue_populateConfiguration:]
  -[_HKActivityStatisticsQuery client_deliverResult:query:]
  -[_HKActivityStatisticsQuery _validateIntervalComponents:]
  -[_HKActivityStatisticsQuery initWithStartDate:endDate:moveIntervalComponents:exerciseIntervalComponents:initialQueryResultsHandler:]
  -[_HKActivityStatisticsQuery setQueryUpdateHandler:]
  -[_HKActivityStatisticsQuery queryUpdateHandler]
  -[_HKActivityStatisticsQuery initialQueryResultsHandler]
  -[_HKActivityStatisticsQuery setInitialQueryResultsHandler:]
  -[_HKActivityStatisticsQuery _setUpdateInterval:]


_HKActivityStatisticsQueryServerConfiguration : HKQueryServerConfiguration
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSDateComponents *moveIntervalComponents
 @property  NSDateComponents *exerciseIntervalComponents
 @property  double updateInterval

  // class methods
  +[_HKActivityStatisticsQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKActivityStatisticsQueryServerConfiguration copyWithZone:]
  -[_HKActivityStatisticsQueryServerConfiguration encodeWithCoder:]
  -[_HKActivityStatisticsQueryServerConfiguration initWithCoder:]
  -[_HKActivityStatisticsQueryServerConfiguration .cxx_destruct]
  -[_HKActivityStatisticsQueryServerConfiguration startDate]
  -[_HKActivityStatisticsQueryServerConfiguration endDate]
  -[_HKActivityStatisticsQueryServerConfiguration setStartDate:]
  -[_HKActivityStatisticsQueryServerConfiguration setEndDate:]
  -[_HKActivityStatisticsQueryServerConfiguration setUpdateInterval:]
  -[_HKActivityStatisticsQueryServerConfiguration updateInterval]
  -[_HKActivityStatisticsQueryServerConfiguration setMoveIntervalComponents:]
  -[_HKActivityStatisticsQueryServerConfiguration setExerciseIntervalComponents:]
  -[_HKActivityStatisticsQueryServerConfiguration moveIntervalComponents]
  -[_HKActivityStatisticsQueryServerConfiguration exerciseIntervalComponents]


HKMultiTypeSampleIterator : NSObject /usr/lib/libc++.1.dylib <HKIterator>
 @property  HKSample *sample
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKMultiTypeSampleIterator init]
  -[HKMultiTypeSampleIterator copyWithZone:]
  -[HKMultiTypeSampleIterator object]
  -[HKMultiTypeSampleIterator .cxx_destruct]
  -[HKMultiTypeSampleIterator sample]
  -[HKMultiTypeSampleIterator initWithSampleQueryDescriptions:sortDescriptors:followingAnchor:upToAndIncludingAnchor:distinctByKeyPaths:bufferSize:limit:healthStore:]
  -[HKMultiTypeSampleIterator _queryForNextPageIfNecessaryWithError:]
  -[HKMultiTypeSampleIterator advanceWithError:]
  -[HKMultiTypeSampleIterator initWithSampleQueryDescriptions:sortDescriptors:bufferSize:healthStore:]


HKFeatureAvailabilityWatchModelNumberHasPrefixRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  NSString *modelNumberPrefix
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityWatchModelNumberHasPrefixRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityWatchModelNumberHasPrefixRule .cxx_destruct]
  -[HKFeatureAvailabilityWatchModelNumberHasPrefixRule evaluate]
  -[HKFeatureAvailabilityWatchModelNumberHasPrefixRule processUserInfo:]
  -[HKFeatureAvailabilityWatchModelNumberHasPrefixRule setModelNumberPrefix:]
  -[HKFeatureAvailabilityWatchModelNumberHasPrefixRule modelNumberPrefix]


HKWorkoutSession : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable, HKStateMachineDelegate, NSSecureCoding>
 @property  HKHealthStore *healthStore
 @property  BOOL isGymKitSession
 @property  NSUUID *identifier
 @property  unsigned long activityType
 @property  long long locationType
 @property  HKWorkoutConfiguration *workoutConfiguration
 @property  <HKWorkoutSessionDelegate> *delegate
 @property  long long state
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKWorkoutSession supportsSecureCoding]
  +[HKWorkoutSession serverInterface]
  +[HKWorkoutSession clientInterface]
  +[HKWorkoutSession _applicationHasRunningWorkout]
  +[HKWorkoutSession targetWorkoutSessionStateMachineForSessionUUID:]
  +[HKWorkoutSession _unitTest_clearAllRunningWorkouts]

  // instance methods
  -[HKWorkoutSession dealloc]
  -[HKWorkoutSession encodeWithCoder:]
  -[HKWorkoutSession initWithCoder:]
  -[HKWorkoutSession delegate]
  -[HKWorkoutSession setDelegate:]
  -[HKWorkoutSession .cxx_destruct]
  -[HKWorkoutSession identifier]
  -[HKWorkoutSession pause]
  -[HKWorkoutSession resume]
  -[HKWorkoutSession startDate]
  -[HKWorkoutSession endDate]
  -[HKWorkoutSession state]
  -[HKWorkoutSession activityType]
  -[HKWorkoutSession exportedInterface]
  -[HKWorkoutSession end]
  -[HKWorkoutSession endWithCompletion:]
  -[HKWorkoutSession prepare]
  -[HKWorkoutSession locationType]
  -[HKWorkoutSession connectionInvalidated]
  -[HKWorkoutSession healthStore]
  -[HKWorkoutSession connectionInterrupted]
  -[HKWorkoutSession remoteInterface]
  -[HKWorkoutSession initWithConfiguration:error:]
  -[HKWorkoutSession startActivity]
  -[HKWorkoutSession workoutConfiguration]
  -[HKWorkoutSession stateMachine:didTransition:fromState:toState:date:error:]
  -[HKWorkoutSession stateMachine:didIgnoreEvent:state:]
  -[HKWorkoutSession _recoverWithCompletion:]
  -[HKWorkoutSession _setupWithHealthStore:]
  -[HKWorkoutSession startActivityWithDate:completion:]
  -[HKWorkoutSession pauseWithCompletion:]
  -[HKWorkoutSession resumeWithCompletion:]
  -[HKWorkoutSession _initWithHealthStore:taskConfiguration:error:]
  -[HKWorkoutSession _setAssociatedWorkoutBuilder:]
  -[HKWorkoutSession client_didUpdateStartDate:endDate:]
  -[HKWorkoutSession client_didChangeToState:date:]
  -[HKWorkoutSession client_didGenerateEvents:]
  -[HKWorkoutSession client_didFailWithError:]
  -[HKWorkoutSession client_synchronizeWithCompletion:]
  -[HKWorkoutSession _queue_shouldAttemptRecovery]
  -[HKWorkoutSession _queue_markRecoveryRequired]
  -[HKWorkoutSession prepareWithCompletion:]
  -[HKWorkoutSession stopActivityWithDate:completion:]
  -[HKWorkoutSession associatedWorkoutBuilderWithDevice:goalType:goal:]
  -[HKWorkoutSession startActivityWithDate:]
  -[HKWorkoutSession stopActivityWithDate:]
  -[HKWorkoutSession initWithActivityType:locationType:]
  -[HKWorkoutSession initWithHealthStore:configuration:error:]
  -[HKWorkoutSession isGymKitSession]
  -[HKWorkoutSession associatedWorkoutBuilder]
  -[HKWorkoutSession stopActivity]
  -[HKWorkoutSession _unitTest_discardAssociatedWorkoutBuilder]


HKWorkoutSessionTaskConfiguration : HKTaskConfiguration
 @property  HKWorkoutConfiguration *workoutConfiguration
 @property  NSUUID *sessionUUID
 @property  BOOL requiresCoreLocationAssertion
 @property  BOOL requiresRecovery
 @property  BOOL supportsAppRelaunchForRecovery

  // class methods
  +[HKWorkoutSessionTaskConfiguration supportsSecureCoding]

  // instance methods
  -[HKWorkoutSessionTaskConfiguration copyWithZone:]
  -[HKWorkoutSessionTaskConfiguration encodeWithCoder:]
  -[HKWorkoutSessionTaskConfiguration initWithCoder:]
  -[HKWorkoutSessionTaskConfiguration .cxx_destruct]
  -[HKWorkoutSessionTaskConfiguration setWorkoutConfiguration:]
  -[HKWorkoutSessionTaskConfiguration workoutConfiguration]
  -[HKWorkoutSessionTaskConfiguration requiresRecovery]
  -[HKWorkoutSessionTaskConfiguration setRequiresRecovery:]
  -[HKWorkoutSessionTaskConfiguration sessionUUID]
  -[HKWorkoutSessionTaskConfiguration setSessionUUID:]
  -[HKWorkoutSessionTaskConfiguration setRequiresCoreLocationAssertion:]
  -[HKWorkoutSessionTaskConfiguration setSupportsAppRelaunchForRecovery:]
  -[HKWorkoutSessionTaskConfiguration requiresCoreLocationAssertion]
  -[HKWorkoutSessionTaskConfiguration supportsAppRelaunchForRecovery]


HKStatistics : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  unsigned long dataCount
 @property  HKQuantity *averageQuantity
 @property  HKQuantity *minimumQuantity
 @property  HKQuantity *maximumQuantity
 @property  HKQuantity *mostRecentQuantity
 @property  NSDateInterval *mostRecentQuantityDateInterval
 @property  HKQuantity *duration
 @property  NSDictionary *averageQuantityBySource
 @property  NSDictionary *minimumQuantityBySource
 @property  NSDictionary *maximumQuantityBySource
 @property  NSDictionary *mostRecentQuantityBySource
 @property  NSDictionary *mostRecentQuantityDateIntervalBySource
 @property  NSDictionary *dataCountBySource
 @property  NSDictionary *durationBySource
 @property  HKQuantity *sumQuantity
 @property  NSDictionary *sumQuantityBySource
 @property  NSDictionary *sumQuantityBySourceID
 @property  HKQuantityType *quantityType
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSArray *sources

  // class methods
  +[HKStatistics supportsSecureCoding]
  +[HKStatistics _validateOptions:forDataType:]

  // instance methods
  -[HKStatistics init]
  -[HKStatistics isEqual:]
  -[HKStatistics copyWithZone:]
  -[HKStatistics encodeWithCoder:]
  -[HKStatistics initWithCoder:]
  -[HKStatistics .cxx_destruct]
  -[HKStatistics startDate]
  -[HKStatistics endDate]
  -[HKStatistics duration]
  -[HKStatistics sources]
  -[HKStatistics quantityType]
  -[HKStatistics setDuration:]
  -[HKStatistics _setStartDate:]
  -[HKStatistics dataCount]
  -[HKStatistics _setEndDate:]
  -[HKStatistics sumQuantity]
  -[HKStatistics minimumQuantity]
  -[HKStatistics averageQuantity]
  -[HKStatistics maximumQuantity]
  -[HKStatistics mostRecentQuantity]
  -[HKStatistics mostRecentQuantityDateInterval]
  -[HKStatistics _initAsCopyOf:]
  -[HKStatistics _initWithDataType:startDate:endDate:]
  -[HKStatistics setDataCount:]
  -[HKStatistics averageQuantityBySource]
  -[HKStatistics minimumQuantityBySource]
  -[HKStatistics maximumQuantityBySource]
  -[HKStatistics mostRecentQuantityBySource]
  -[HKStatistics mostRecentQuantityDateIntervalBySource]
  -[HKStatistics sumQuantityBySource]
  -[HKStatistics dataCountBySource]
  -[HKStatistics durationBySource]
  -[HKStatistics setAverageQuantity:]
  -[HKStatistics setMinimumQuantity:]
  -[HKStatistics setMaximumQuantity:]
  -[HKStatistics setMostRecentQuantity:]
  -[HKStatistics setMostRecentQuantityDateInterval:]
  -[HKStatistics setSumQuantity:]
  -[HKStatistics setAverageQuantityBySource:]
  -[HKStatistics setMinimumQuantityBySource:]
  -[HKStatistics setMaximumQuantityBySource:]
  -[HKStatistics setMostRecentQuantityBySource:]
  -[HKStatistics setMostRecentQuantityDateIntervalBySource:]
  -[HKStatistics setSumQuantityBySource:]
  -[HKStatistics setDataCountBySource:]
  -[HKStatistics setDurationBySource:]
  -[HKStatistics averageQuantityForSource:]
  -[HKStatistics minimumQuantityForSource:]
  -[HKStatistics maximumQuantityForSource:]
  -[HKStatistics mostRecentQuantityForSource:]
  -[HKStatistics mostRecentQuantityDateIntervalForSource:]
  -[HKStatistics sumQuantityForSource:]
  -[HKStatistics durationForSource:]
  -[HKStatistics _setSources:]
  -[HKStatistics _copyOverwritingObjectType:]
  -[HKStatistics sumQuantityBySourceID]
  -[HKStatistics setSumQuantityBySourceID:]


_HKSampleQueryResult : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSDateInterval *dateInterval
 @property  NSArray *samples

  // instance methods
  -[_HKSampleQueryResult .cxx_destruct]
  -[_HKSampleQueryResult startDate]
  -[_HKSampleQueryResult endDate]
  -[_HKSampleQueryResult samples]
  -[_HKSampleQueryResult dateInterval]
  -[_HKSampleQueryResult initWithStartDate:endDate:samples:]


_HKCurrentActivitySummaryQuery : HKQuery <HKCurrentActivitySummaryQueryClientInterface>
 @property  NSDictionary *collectionIntervals
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HKCurrentActivitySummaryQuery configurationClass]
  +[_HKCurrentActivitySummaryQuery clientInterfaceProtocol]
  +[_HKCurrentActivitySummaryQuery configureClientInterface:]

  // instance methods
  -[_HKCurrentActivitySummaryQuery .cxx_destruct]
  -[_HKCurrentActivitySummaryQuery queue_validate]
  -[_HKCurrentActivitySummaryQuery initWithUpdateHandler:]
  -[_HKCurrentActivitySummaryQuery queue_deliverError:]
  -[_HKCurrentActivitySummaryQuery queue_shouldDeactivateAfterInitialResults]
  -[_HKCurrentActivitySummaryQuery queue_queryDidDeactivate:]
  -[_HKCurrentActivitySummaryQuery queue_populateConfiguration:]
  -[_HKCurrentActivitySummaryQuery client_deliverActivitySummaries:queryUUID:]
  -[_HKCurrentActivitySummaryQuery _setCollectionIntervals:]
  -[_HKCurrentActivitySummaryQuery _collectionIntervals]


_HKCurrentActivitySummaryQueryServerConfiguration : HKQueryServerConfiguration
 @property  NSDictionary *collectionIntervals

  // class methods
  +[_HKCurrentActivitySummaryQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKCurrentActivitySummaryQueryServerConfiguration copyWithZone:]
  -[_HKCurrentActivitySummaryQueryServerConfiguration encodeWithCoder:]
  -[_HKCurrentActivitySummaryQueryServerConfiguration initWithCoder:]
  -[_HKCurrentActivitySummaryQueryServerConfiguration .cxx_destruct]
  -[_HKCurrentActivitySummaryQueryServerConfiguration setCollectionIntervals:]
  -[_HKCurrentActivitySummaryQueryServerConfiguration collectionIntervals]


HKCloudSyncControl : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKCloudSyncControl taskIdentifier]
  +[HKCloudSyncControl serverInterface]
  +[HKCloudSyncControl clientInterface]

  // instance methods
  -[HKCloudSyncControl .cxx_destruct]
  -[HKCloudSyncControl exportedInterface]
  -[HKCloudSyncControl connectionInvalidated]
  -[HKCloudSyncControl remoteInterface]
  -[HKCloudSyncControl initWithHealthStore:]


HKMedicalType : HKSampleType
  // class methods
  +[HKMedicalType allTypes]


HKDataFlowLink : NSObject /usr/lib/libc++.1.dylib
 @property  <HKDataFlowLinkProcessor> *processor
 @property  Protocol *sourceProtocol
 @property  Protocol *destinationProtocol

  // instance methods
  -[HKDataFlowLink addSource:]
  -[HKDataFlowLink removeSource:]
  -[HKDataFlowLink .cxx_destruct]
  -[HKDataFlowLink addDestination:]
  -[HKDataFlowLink processor]
  -[HKDataFlowLink source:didAddUpstreamSource:]
  -[HKDataFlowLink removeDestination:]
  -[HKDataFlowLink destinationProcessorsConformingToProtocol:]
  -[HKDataFlowLink destination:didAddDownstreamDestination:]
  -[HKDataFlowLink initWithProcessor:sourceProtocol:destinationProtocol:loggingCategory:]
  -[HKDataFlowLink allSourceProcessors]
  -[HKDataFlowLink allDestinationProcessors]
  -[HKDataFlowLink sendToDestinationProcessors:]
  -[HKDataFlowLink sourceProtocol]
  -[HKDataFlowLink destinationProtocol]


HKClinicalProviderSearchResultsPage : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSArray *searchResults
 @property  long long from
 @property  long long nextFrom
 @property  long long size

  // class methods
  +[HKClinicalProviderSearchResultsPage supportsSecureCoding]

  // instance methods
  -[HKClinicalProviderSearchResultsPage copyWithZone:]
  -[HKClinicalProviderSearchResultsPage encodeWithCoder:]
  -[HKClinicalProviderSearchResultsPage initWithCoder:]
  -[HKClinicalProviderSearchResultsPage .cxx_destruct]
  -[HKClinicalProviderSearchResultsPage size]
  -[HKClinicalProviderSearchResultsPage from]
  -[HKClinicalProviderSearchResultsPage searchResults]
  -[HKClinicalProviderSearchResultsPage nextFrom]
  -[HKClinicalProviderSearchResultsPage initWithSearchResults:from:nextFrom:size:]


HKKeyValueDomain : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable>
 @property  long long category
 @property  NSString *domainName
 @property  HKHealthStore *healthStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKKeyValueDomain serverInterface]
  +[HKKeyValueDomain clientInterface]
  +[HKKeyValueDomain healthAppDefaultsDomainWithHealthStore:]

  // instance methods
  -[HKKeyValueDomain invalidate]
  -[HKKeyValueDomain .cxx_destruct]
  -[HKKeyValueDomain category]
  -[HKKeyValueDomain exportedInterface]
  -[HKKeyValueDomain domainName]
  -[HKKeyValueDomain connectionInvalidated]
  -[HKKeyValueDomain healthStore]
  -[HKKeyValueDomain remoteInterface]
  -[HKKeyValueDomain stringForKey:error:]
  -[HKKeyValueDomain initWithCategory:domainName:healthStore:]
  -[HKKeyValueDomain setDate:forKey:completion:]
  -[HKKeyValueDomain _actionCompletionOnClientQueue:]
  -[HKKeyValueDomain _objectCompletionOnClientQueue:]
  -[HKKeyValueDomain _dataFromPropertyListValue:error:]
  -[HKKeyValueDomain _propertyListValueFromData:error:]
  -[HKKeyValueDomain setNumber:forKey:error:]
  -[HKKeyValueDomain setNumber:forKey:completion:]
  -[HKKeyValueDomain setDate:forKey:error:]
  -[HKKeyValueDomain setString:forKey:error:]
  -[HKKeyValueDomain setString:forKey:completion:]
  -[HKKeyValueDomain setPropertyListValue:forKey:error:]
  -[HKKeyValueDomain setPropertyListValue:forKey:completion:]
  -[HKKeyValueDomain setValuesWithDictionary:completion:]
  -[HKKeyValueDomain removeValuesForKeys:completion:]
  -[HKKeyValueDomain numberForKey:error:]
  -[HKKeyValueDomain numberForKey:completion:]
  -[HKKeyValueDomain dateForKey:error:]
  -[HKKeyValueDomain dateForKey:completion:]
  -[HKKeyValueDomain stringForKey:completion:]
  -[HKKeyValueDomain propertyListValueForKey:error:]
  -[HKKeyValueDomain propertyListValueForKey:completion:]
  -[HKKeyValueDomain allValuesWithCompletion:]


HKKeyValueDomainServerConfiguration : HKTaskConfiguration
 @property  long long category
 @property  NSString *domainName

  // class methods
  +[HKKeyValueDomainServerConfiguration supportsSecureCoding]

  // instance methods
  -[HKKeyValueDomainServerConfiguration copyWithZone:]
  -[HKKeyValueDomainServerConfiguration encodeWithCoder:]
  -[HKKeyValueDomainServerConfiguration initWithCoder:]
  -[HKKeyValueDomainServerConfiguration .cxx_destruct]
  -[HKKeyValueDomainServerConfiguration category]
  -[HKKeyValueDomainServerConfiguration domainName]
  -[HKKeyValueDomainServerConfiguration initWithCategory:domainName:]


HKQuantityDatum : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSUUID *UUID
 @property  HKQuantity *quantity
 @property  NSDateInterval *dateInterval
 @property  NSData *resumeContext

  // class methods
  +[HKQuantityDatum supportsSecureCoding]

  // instance methods
  -[HKQuantityDatum init]
  -[HKQuantityDatum copyWithZone:]
  -[HKQuantityDatum encodeWithCoder:]
  -[HKQuantityDatum initWithCoder:]
  -[HKQuantityDatum .cxx_destruct]
  -[HKQuantityDatum UUID]
  -[HKQuantityDatum dateInterval]
  -[HKQuantityDatum quantity]
  -[HKQuantityDatum initWithIdentifier:dateInterval:quantity:resumeContext:]
  -[HKQuantityDatum resumeContext]


HKSeriesSample : HKSample
 @property  BOOL frozen
 @property  unsigned long count

  // class methods
  +[HKSeriesSample supportsSecureCoding]

  // instance methods
  -[HKSeriesSample count]
  -[HKSeriesSample encodeWithCoder:]
  -[HKSeriesSample initWithCoder:]
  -[HKSeriesSample _valueDescription]
  -[HKSeriesSample _validateConfigurationWithOptions:]
  -[HKSeriesSample _setCount:]
  -[HKSeriesSample _validateSample]
  -[HKSeriesSample _isFrozen]
  -[HKSeriesSample _shouldNotifyOnInsert]
  -[HKSeriesSample _setFrozen:]


HKMedicalDate : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSDate *underlyingDate
 @property  long long form
 @property  NSString *originalTimeZoneString
 @property  NSDate *dateForUTC

  // class methods
  +[HKMedicalDate supportsSecureCoding]
  +[HKMedicalDate referenceCalendar]
  +[HKMedicalDate _medicalDateFromComponents:originalTimeZoneString:form:error:]
  +[HKMedicalDate _adjustDate:calendar:form:]
  +[HKMedicalDate _descriptionForForm:]
  +[HKMedicalDate _calendarUnitForForm:]
  +[HKMedicalDate referenceCalendarWithLocalTimezone]
  +[HKMedicalDate medicalDateWithYear:error:]
  +[HKMedicalDate medicalDateWithYear:month:error:]
  +[HKMedicalDate medicalDateWithYear:month:day:error:]
  +[HKMedicalDate medicalDateWithYear:month:day:hour:minute:second:originalTimeZoneString:error:]
  +[HKMedicalDate _medicalDateWithForm:underlyingDate:originalTimeZoneString:]
  +[HKMedicalDate _validForm:]

  // instance methods
  -[HKMedicalDate isEqual:]
  -[HKMedicalDate copyWithZone:]
  -[HKMedicalDate encodeWithCoder:]
  -[HKMedicalDate initWithCoder:]
  -[HKMedicalDate .cxx_destruct]
  -[HKMedicalDate form]
  -[HKMedicalDate dateForUTC]
  -[HKMedicalDate underlyingDate]
  -[HKMedicalDate originalTimeZoneString]
  -[HKMedicalDate _initWithForm:underlyingDate:originalTimeZoneString:]
  -[HKMedicalDate adjustedDateForCalendar:]
  -[HKMedicalDate isCompatibleWithMedicalDateForm:]


HKDiagnosticTestReport : HKMedicalRecord <HKConceptIndexable, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *UUID
 @property  NSLocale *locale
 @property  HKDiagnosticTestReportType *diagnosticTestReportType
 @property  HKConcept *diagnosticTest
 @property  NSArray *diagnosticTestCodings
 @property  HKMedicalDate *effectiveEndDate
 @property  HKMedicalDate *effectiveStartDate
 @property  HKMedicalDate *issueDate
 @property  NSString *panelName
 @property  NSArray *results
 @property  HKConcept *status
 @property  HKMedicalCoding *statusCoding

  // class methods
  +[HKDiagnosticTestReport supportsSecureCoding]
  +[HKDiagnosticTestReport supportsEquivalence]
  +[HKDiagnosticTestReport _isConcreteObjectClass]
  +[HKDiagnosticTestReport indexableConceptKeyPaths]
  +[HKDiagnosticTestReport cachedConceptRelationshipKeyPaths]
  +[HKDiagnosticTestReport diagnosticTestReportWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:diagnosticTestCodings:panelName:results:effectiveStartDate:statusCoding:effectiveEndDate:issueDate:]
  +[HKDiagnosticTestReport diagnosticTestReportWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:diagnosticTestCodings:panelName:results:effectiveStartDate:statusCoding:effectiveEndDate:issueDate:]
  +[HKDiagnosticTestReport defaultDisplayString]
  +[HKDiagnosticTestReport diagnosticTestCodingsPreferredSystems]
  +[HKDiagnosticTestReport statusCodingPreferredSystems]
  +[HKDiagnosticTestReport _newDiagnosticTestReportWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:diagnosticTestCodings:panelName:results:effectiveStartDate:statusCoding:effectiveEndDate:issueDate:config:]

  // instance methods
  -[HKDiagnosticTestReport init]
  -[HKDiagnosticTestReport copyWithZone:]
  -[HKDiagnosticTestReport encodeWithCoder:]
  -[HKDiagnosticTestReport initWithCoder:]
  -[HKDiagnosticTestReport .cxx_destruct]
  -[HKDiagnosticTestReport results]
  -[HKDiagnosticTestReport status]
  -[HKDiagnosticTestReport _setStatus:]
  -[HKDiagnosticTestReport _setResults:]
  -[HKDiagnosticTestReport statusCoding]
  -[HKDiagnosticTestReport isEquivalent:]
  -[HKDiagnosticTestReport _validateConfigurationWithOptions:]
  -[HKDiagnosticTestReport statusCodingCollection]
  -[HKDiagnosticTestReport statusCodingContext]
  -[HKDiagnosticTestReport _setStatusCoding:]
  -[HKDiagnosticTestReport diagnosticTestCodings]
  -[HKDiagnosticTestReport codingsForKeyPath:error:]
  -[HKDiagnosticTestReport _setDiagnosticTest:]
  -[HKDiagnosticTestReport applyConcepts:forKeyPath:error:]
  -[HKDiagnosticTestReport medicalRecordCodings]
  -[HKDiagnosticTestReport indexKeywords]
  -[HKDiagnosticTestReport medicalRecordPreferredSystems]
  -[HKDiagnosticTestReport diagnosticTestReportType]
  -[HKDiagnosticTestReport effectiveStartDate]
  -[HKDiagnosticTestReport issueDate]
  -[HKDiagnosticTestReport effectiveEndDate]
  -[HKDiagnosticTestReport diagnosticTest]
  -[HKDiagnosticTestReport diagnosticTestCodingsCollection]
  -[HKDiagnosticTestReport diagnosticTestCodingsContext]
  -[HKDiagnosticTestReport _setDiagnosticTestCodings:]
  -[HKDiagnosticTestReport _setEffectiveStartDate:]
  -[HKDiagnosticTestReport _setIssueDate:]
  -[HKDiagnosticTestReport _setEffectiveEndDate:]
  -[HKDiagnosticTestReport statusCodingTasks]
  -[HKDiagnosticTestReport diagnosticTestCodingsTasks]
  -[HKDiagnosticTestReport panelName]
  -[HKDiagnosticTestReport _setPanelName:]


HKChartableCodedQuantitySet : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSArray *codings
 @property  NSDate *date
 @property  NSArray *quantities
 @property  HKUnit *compatibleUnit

  // class methods
  +[HKChartableCodedQuantitySet setWithChartableQuantity:date:]
  +[HKChartableCodedQuantitySet setWithMedicalCodings:quantities:date:error:]

  // instance methods
  -[HKChartableCodedQuantitySet init]
  -[HKChartableCodedQuantitySet copyWithZone:]
  -[HKChartableCodedQuantitySet .cxx_destruct]
  -[HKChartableCodedQuantitySet date]
  -[HKChartableCodedQuantitySet codings]
  -[HKChartableCodedQuantitySet isCompatibleWithUnit:]
  -[HKChartableCodedQuantitySet _initWithMedicalCodings:date:quantities:]
  -[HKChartableCodedQuantitySet compatibleUnit]
  -[HKChartableCodedQuantitySet chartableCodedQuantitySetByChangingDate:]
  -[HKChartableCodedQuantitySet addChartableCodedQuantities:]
  -[HKChartableCodedQuantitySet chartableCodedQuantitySetConvertedToUnit:error:]
  -[HKChartableCodedQuantitySet minValueForUnit:]
  -[HKChartableCodedQuantitySet maxValueForUnit:]
  -[HKChartableCodedQuantitySet minValueIncludingReferenceRangeForUnit:]
  -[HKChartableCodedQuantitySet maxValueIncludingReferenceRangeForUnit:]
  -[HKChartableCodedQuantitySet quantities]


_HKDateCalendarUnitKey : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSDate *date
 @property  NSCalendar *calendar
 @property  unsigned long calendarUnit

  // instance methods
  -[_HKDateCalendarUnitKey isEqual:]
  -[_HKDateCalendarUnitKey copyWithZone:]
  -[_HKDateCalendarUnitKey .cxx_destruct]
  -[_HKDateCalendarUnitKey date]
  -[_HKDateCalendarUnitKey calendar]
  -[_HKDateCalendarUnitKey calendarUnit]
  -[_HKDateCalendarUnitKey initWithDate:calendar:unit:]


HKSeriesBuilderConfiguration : HKTaskConfiguration
 @property  HKDevice *device
 @property  NSUUID *workoutBuilderID

  // class methods
  +[HKSeriesBuilderConfiguration supportsSecureCoding]

  // instance methods
  -[HKSeriesBuilderConfiguration copyWithZone:]
  -[HKSeriesBuilderConfiguration encodeWithCoder:]
  -[HKSeriesBuilderConfiguration initWithCoder:]
  -[HKSeriesBuilderConfiguration .cxx_destruct]
  -[HKSeriesBuilderConfiguration device]
  -[HKSeriesBuilderConfiguration initWithDevice:workoutBuilderID:]
  -[HKSeriesBuilderConfiguration workoutBuilderID]


HKAudiogramSample : HKSample <_HKBinarySample>
 @property  NSData *encodedSensitivityPoints
 @property  NSArray *sensitivityPoints
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKAudiogramSample supportsSecureCoding]
  +[HKAudiogramSample _isConcreteObjectClass]
  +[HKAudiogramSample _encodeSensitivityPoints:]
  +[HKAudiogramSample _decodeSensitivityData:]
  +[HKAudiogramSample audiogramSampleWithSensitivityPoints:startDate:endDate:metadata:]

  // instance methods
  -[HKAudiogramSample encodeWithCoder:]
  -[HKAudiogramSample initWithCoder:]
  -[HKAudiogramSample .cxx_destruct]
  -[HKAudiogramSample payload]
  -[HKAudiogramSample _validateConfigurationWithOptions:]
  -[HKAudiogramSample _setPayload:]
  -[HKAudiogramSample _validateSensitivityPointsOrderedAscending]
  -[HKAudiogramSample sensitivityPoints]
  -[HKAudiogramSample encodedSensitivityPoints]
  -[HKAudiogramSample setEncodedSensitivityPoints:]
  -[HKAudiogramSample _pureToneAverageForDiagnosticSensitivityPoints:]
  -[HKAudiogramSample averageLeftEarSensitivity]
  -[HKAudiogramSample _diagnosticForSensitivity:]
  -[HKAudiogramSample averageRightEarSensitivity]
  -[HKAudiogramSample _leftDiagnosticSensitivityPoints]
  -[HKAudiogramSample _averageEarSensitivityForDiagnosticSensitivityPoints:]
  -[HKAudiogramSample _rightDiagnosticSensitivityPoints]
  -[HKAudiogramSample _leftSensitivityPoints]
  -[HKAudiogramSample _rightSensitivityPoints]
  -[HKAudiogramSample diagnostic]
  -[HKAudiogramSample minimumSensitivity]
  -[HKAudiogramSample maximumSensitivity]


_HKAudiogramDiagnosticSensitivityPoint : NSObject /usr/lib/libc++.1.dylib
 @property  double earSensitivityDBHL
 @property  double frequencyHz

  // instance methods
  -[_HKAudiogramDiagnosticSensitivityPoint frequencyHz]
  -[_HKAudiogramDiagnosticSensitivityPoint earSensitivityDBHL]
  -[_HKAudiogramDiagnosticSensitivityPoint initWithEarSensitivity:frequency:]


HKAudiogramSensitivityPoint : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  HKQuantity *frequency
 @property  HKQuantity *leftEarSensitivity
 @property  HKQuantity *rightEarSensitivity

  // class methods
  +[HKAudiogramSensitivityPoint supportsSecureCoding]
  +[HKAudiogramSensitivityPoint _validateUnitForFrequency:]
  +[HKAudiogramSensitivityPoint _validateUnitForSensitivity:]
  +[HKAudiogramSensitivityPoint validFrequency:error:]
  +[HKAudiogramSensitivityPoint validSensitivity:error:]
  +[HKAudiogramSensitivityPoint _incompatibleUnit:incompatibleWith:]
  +[HKAudiogramSensitivityPoint _rangeViolationMin:max:value:]
  +[HKAudiogramSensitivityPoint sensitivityPointWithFrequency:leftEarSensitivity:rightEarSensitivity:error:]

  // instance methods
  -[HKAudiogramSensitivityPoint encodeWithCoder:]
  -[HKAudiogramSensitivityPoint initWithCoder:]
  -[HKAudiogramSensitivityPoint .cxx_destruct]
  -[HKAudiogramSensitivityPoint frequency]
  -[HKAudiogramSensitivityPoint _leftDiagnosticSensitivityPoint]
  -[HKAudiogramSensitivityPoint _rightDiagnosticSensitivityPoint]
  -[HKAudiogramSensitivityPoint leftEarSensitivity]
  -[HKAudiogramSensitivityPoint rightEarSensitivity]
  -[HKAudiogramSensitivityPoint initWithFrequency:leftEarSensitivity:rightEarSensitivity:]
  -[HKAudiogramSensitivityPoint _audiogramDiagnosticSensitivityPointForEarSensitivity:]


HKDataCollector : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable, HKDataCollectorClientInterface>
 @property  HKQuantityType *quantityType
 @property  HKDevice *device
 @property  NSString *bundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKDataCollector serverInterface]
  +[HKDataCollector clientInterface]

  // instance methods
  -[HKDataCollector .cxx_destruct]
  -[HKDataCollector bundleIdentifier]
  -[HKDataCollector exportedInterface]
  -[HKDataCollector device]
  -[HKDataCollector quantityType]
  -[HKDataCollector connectionInvalidated]
  -[HKDataCollector connectionInterrupted]
  -[HKDataCollector remoteInterface]
  -[HKDataCollector clientRemote_synchronizeWithCompletion:]
  -[HKDataCollector _requestRegistration]
  -[HKDataCollector _validateDatums:error:]
  -[HKDataCollector _queue_insertBatchForDatums:device:metadata:completion:]
  -[HKDataCollector _queue_considerSendingBatches]
  -[HKDataCollector _combineCompletion:withCompletion:]
  -[HKDataCollector _queue_requestRegistration]
  -[HKDataCollector _queue_sendBatch:]
  -[HKDataCollector _queue_considerCompletingFlushRequests]
  -[HKDataCollector _queue_updateReconsiderationTimer]
  -[HKDataCollector _queue_taskServer_insertDatums:device:metadata:batchUUID:completion:]
  -[HKDataCollector clientRemote_beginCollectionWithConfiguration:lastPersistedDatum:registrationUUID:]
  -[HKDataCollector clientRemote_collectionConfigurationDidChange:]
  -[HKDataCollector clientRemote_finishedPersistenceForBatch:error:]
  -[HKDataCollector clientRemote_receivedBatch:error:]
  -[HKDataCollector clientRemote_collectThroughDate:completion:]
  -[HKDataCollector _datumsInDateOrder:secondDatum:]
  -[HKDataCollector initWithHealthStore:bundleIdentifier:quantityType:]
  -[HKDataCollector insertDatums:device:metadata:completion:]
  -[HKDataCollector finishWithCompletion:]
  -[HKDataCollector unitTest_setMaxDatumAgeOverride:]
  -[HKDataCollector unitTest_setRegistrationCompleteHandler:]
  -[HKDataCollector unitTest_pendingBatches]
  -[HKDataCollector unitTest_unconfirmedBatches]
  -[HKDataCollector unitTest_unpersistedBatches]


HKDataCollectorTaskServerConfiguration : HKTaskConfiguration
 @property  HKQuantityType *quantityType
 @property  NSString *bundleIdentifier

  // class methods
  +[HKDataCollectorTaskServerConfiguration supportsSecureCoding]

  // instance methods
  -[HKDataCollectorTaskServerConfiguration copyWithZone:]
  -[HKDataCollectorTaskServerConfiguration encodeWithCoder:]
  -[HKDataCollectorTaskServerConfiguration initWithCoder:]
  -[HKDataCollectorTaskServerConfiguration .cxx_destruct]
  -[HKDataCollectorTaskServerConfiguration bundleIdentifier]
  -[HKDataCollectorTaskServerConfiguration setBundleIdentifier:]
  -[HKDataCollectorTaskServerConfiguration quantityType]
  -[HKDataCollectorTaskServerConfiguration setQuantityType:]
  -[HKDataCollectorTaskServerConfiguration initWithQuantityType:bundleIdentifier:]


HKDataCollectorCollectionConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  double collectionInterval
 @property  double maxUnsentDatumAge

  // class methods
  +[HKDataCollectorCollectionConfiguration supportsSecureCoding]

  // instance methods
  -[HKDataCollectorCollectionConfiguration copyWithZone:]
  -[HKDataCollectorCollectionConfiguration encodeWithCoder:]
  -[HKDataCollectorCollectionConfiguration initWithCoder:]
  -[HKDataCollectorCollectionConfiguration setCollectionInterval:]
  -[HKDataCollectorCollectionConfiguration collectionInterval]
  -[HKDataCollectorCollectionConfiguration initWithCollectionInterval:maxUnsentDatumAge:]
  -[HKDataCollectorCollectionConfiguration maxUnsentDatumAge]
  -[HKDataCollectorCollectionConfiguration setMaxUnsentDatumAge:]


_HKDataCollectorPendingBatch : NSObject /usr/lib/libc++.1.dylib
 @property  NSUUID *batchUUID
 @property  NSArray *data
 @property  NSDictionary *metadata
 @property  HKDevice *device
 @property  @? completion

  // instance methods
  -[_HKDataCollectorPendingBatch init]
  -[_HKDataCollectorPendingBatch .cxx_destruct]
  -[_HKDataCollectorPendingBatch data]
  -[_HKDataCollectorPendingBatch device]
  -[_HKDataCollectorPendingBatch metadata]
  -[_HKDataCollectorPendingBatch completion]
  -[_HKDataCollectorPendingBatch initWithData:metadata:device:completion:]
  -[_HKDataCollectorPendingBatch batchUUID]


_HKDataCollectorFlushRequest : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *date
 @property  @? completion

  // instance methods
  -[_HKDataCollectorFlushRequest .cxx_destruct]
  -[_HKDataCollectorFlushRequest date]
  -[_HKDataCollectorFlushRequest completion]
  -[_HKDataCollectorFlushRequest initWithDate:completion:]


HKMedicalCodingTask : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  HKMedicalCodingCollection *codings
 @property  NSArray *preferredSystems

  // class methods
  +[HKMedicalCodingTask supportsSecureCoding]
  +[HKMedicalCodingTask taskWithCodings:preferredSystems:]

  // instance methods
  -[HKMedicalCodingTask init]
  -[HKMedicalCodingTask isEqual:]
  -[HKMedicalCodingTask copyWithZone:]
  -[HKMedicalCodingTask encodeWithCoder:]
  -[HKMedicalCodingTask initWithCoder:]
  -[HKMedicalCodingTask .cxx_destruct]
  -[HKMedicalCodingTask codings]
  -[HKMedicalCodingTask initWithCodings:preferredSystems:]
  -[HKMedicalCodingTask preferredSystems]


HKCodableQuantitySeriesEnumerationResult : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasPersistentID
 @property  long long persistentID
 @property  BOOL hasDataTypeCode
 @property  long long dataTypeCode
 @property  BOOL hasUuid
 @property  NSData *uuid
 @property  BOOL hasValue
 @property  double value
 @property  BOOL hasCount
 @property  long long count
 @property  BOOL hasStartTime
 @property  double startTime
 @property  BOOL hasEndTime
 @property  double endTime
 @property  BOOL hasSourceID
 @property  long long sourceID
 @property  BOOL hasSeriesIndex
 @property  long long seriesIndex
 @property  BOOL hasQuantitySample
 @property  NSData *quantitySample

  // instance methods
  -[HKCodableQuantitySeriesEnumerationResult isEqual:]
  -[HKCodableQuantitySeriesEnumerationResult copyWithZone:]
  -[HKCodableQuantitySeriesEnumerationResult count]
  -[HKCodableQuantitySeriesEnumerationResult .cxx_destruct]
  -[HKCodableQuantitySeriesEnumerationResult setCount:]
  -[HKCodableQuantitySeriesEnumerationResult value]
  -[HKCodableQuantitySeriesEnumerationResult setValue:]
  -[HKCodableQuantitySeriesEnumerationResult dictionaryRepresentation]
  -[HKCodableQuantitySeriesEnumerationResult uuid]
  -[HKCodableQuantitySeriesEnumerationResult setUuid:]
  -[HKCodableQuantitySeriesEnumerationResult writeTo:]
  -[HKCodableQuantitySeriesEnumerationResult mergeFrom:]
  -[HKCodableQuantitySeriesEnumerationResult readFrom:]
  -[HKCodableQuantitySeriesEnumerationResult copyTo:]
  -[HKCodableQuantitySeriesEnumerationResult sourceID]
  -[HKCodableQuantitySeriesEnumerationResult setSourceID:]
  -[HKCodableQuantitySeriesEnumerationResult hasSourceID]
  -[HKCodableQuantitySeriesEnumerationResult persistentID]
  -[HKCodableQuantitySeriesEnumerationResult setPersistentID:]
  -[HKCodableQuantitySeriesEnumerationResult startTime]
  -[HKCodableQuantitySeriesEnumerationResult endTime]
  -[HKCodableQuantitySeriesEnumerationResult setEndTime:]
  -[HKCodableQuantitySeriesEnumerationResult setStartTime:]
  -[HKCodableQuantitySeriesEnumerationResult hasValue]
  -[HKCodableQuantitySeriesEnumerationResult setHasCount:]
  -[HKCodableQuantitySeriesEnumerationResult hasCount]
  -[HKCodableQuantitySeriesEnumerationResult hasStartTime]
  -[HKCodableQuantitySeriesEnumerationResult setHasValue:]
  -[HKCodableQuantitySeriesEnumerationResult setHasStartTime:]
  -[HKCodableQuantitySeriesEnumerationResult setHasEndTime:]
  -[HKCodableQuantitySeriesEnumerationResult hasEndTime]
  -[HKCodableQuantitySeriesEnumerationResult hasUuid]
  -[HKCodableQuantitySeriesEnumerationResult dataTypeCode]
  -[HKCodableQuantitySeriesEnumerationResult setDataTypeCode:]
  -[HKCodableQuantitySeriesEnumerationResult hasPersistentID]
  -[HKCodableQuantitySeriesEnumerationResult setHasPersistentID:]
  -[HKCodableQuantitySeriesEnumerationResult hasQuantitySample]
  -[HKCodableQuantitySeriesEnumerationResult quantitySample]
  -[HKCodableQuantitySeriesEnumerationResult seriesIndex]
  -[HKCodableQuantitySeriesEnumerationResult setQuantitySample:]
  -[HKCodableQuantitySeriesEnumerationResult setHasDataTypeCode:]
  -[HKCodableQuantitySeriesEnumerationResult hasDataTypeCode]
  -[HKCodableQuantitySeriesEnumerationResult setHasSourceID:]
  -[HKCodableQuantitySeriesEnumerationResult setSeriesIndex:]
  -[HKCodableQuantitySeriesEnumerationResult setHasSeriesIndex:]
  -[HKCodableQuantitySeriesEnumerationResult hasSeriesIndex]


_HKCompressionEngine : NSObject /usr/lib/libc++.1.dylib
 @property  int operation
 @property  int algorithm
 @property  <_HKStreamingDestination> *destination
 @property  NSMutableData *destinationBuffer
 @property  ^{?=*Q*Q^v} stream
 @property  NSMutableData *sinkContent

  // class methods
  +[_HKCompressionEngine processDataWithFunction:algorithm:content:progressBlock:]

  // instance methods
  -[_HKCompressionEngine dealloc]
  -[_HKCompressionEngine .cxx_destruct]
  -[_HKCompressionEngine operation]
  -[_HKCompressionEngine setOperation:]
  -[_HKCompressionEngine destination]
  -[_HKCompressionEngine setDestination:]
  -[_HKCompressionEngine algorithm]
  -[_HKCompressionEngine stream]
  -[_HKCompressionEngine setStream:]
  -[_HKCompressionEngine setAlgorithm:]
  -[_HKCompressionEngine initWithFunction:algorithm:destination:]
  -[_HKCompressionEngine sourceContentFinished]
  -[_HKCompressionEngine writeSourceContent:]
  -[_HKCompressionEngine _processIncomingData:length:flags:]
  -[_HKCompressionEngine sinkContent]
  -[_HKCompressionEngine _decodeEngineFunction:algorithm:]
  -[_HKCompressionEngine _initializeStream]
  -[_HKCompressionEngine _gatherReadSinkContent:]
  -[_HKCompressionEngine _deliverDestinationContent]
  -[_HKCompressionEngine destinationBuffer]
  -[_HKCompressionEngine setDestinationBuffer:]


HKFeatureAvailabilityWatchOSBuildVersionLessThanRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  NSString *buildVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityWatchOSBuildVersionLessThanRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityWatchOSBuildVersionLessThanRule .cxx_destruct]
  -[HKFeatureAvailabilityWatchOSBuildVersionLessThanRule buildVersion]
  -[HKFeatureAvailabilityWatchOSBuildVersionLessThanRule setBuildVersion:]
  -[HKFeatureAvailabilityWatchOSBuildVersionLessThanRule evaluate]
  -[HKFeatureAvailabilityWatchOSBuildVersionLessThanRule processUserInfo:]


HKQuantitySeriesSampleEditor : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable>
 @property  long long unitTest_state
 @property  HKQuantitySample *quantitySample
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKQuantitySeriesSampleEditor serverInterface]

  // instance methods
  -[HKQuantitySeriesSampleEditor dealloc]
  -[HKQuantitySeriesSampleEditor .cxx_destruct]
  -[HKQuantitySeriesSampleEditor exportedInterface]
  -[HKQuantitySeriesSampleEditor connectionInvalidated]
  -[HKQuantitySeriesSampleEditor remoteInterface]
  -[HKQuantitySeriesSampleEditor discard]
  -[HKQuantitySeriesSampleEditor unitTest_state]
  -[HKQuantitySeriesSampleEditor quantitySample]
  -[HKQuantitySeriesSampleEditor _performWithError:stateValidator:lockedBlock:]
  -[HKQuantitySeriesSampleEditor initWithHealthStore:quantitySample:]
  -[HKQuantitySeriesSampleEditor removeQuantityForDateInterval:error:]
  -[HKQuantitySeriesSampleEditor commitWithCompletion:]


HKQuantitySeriesSampleEditorTaskServerConfiguration : HKTaskConfiguration
 @property  HKQuantitySample *quantitySample

  // class methods
  +[HKQuantitySeriesSampleEditorTaskServerConfiguration supportsSecureCoding]

  // instance methods
  -[HKQuantitySeriesSampleEditorTaskServerConfiguration copyWithZone:]
  -[HKQuantitySeriesSampleEditorTaskServerConfiguration encodeWithCoder:]
  -[HKQuantitySeriesSampleEditorTaskServerConfiguration initWithCoder:]
  -[HKQuantitySeriesSampleEditorTaskServerConfiguration .cxx_destruct]
  -[HKQuantitySeriesSampleEditorTaskServerConfiguration quantitySample]
  -[HKQuantitySeriesSampleEditorTaskServerConfiguration setQuantitySample:]
  -[HKQuantitySeriesSampleEditorTaskServerConfiguration initWithQuantitySample:]


HKHeartRateSummaryStatisticsBucket : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  long long bucketIndex
 @property  NSIndexSet *heartRatesInBeatsPerMinute

  // class methods
  +[HKHeartRateSummaryStatisticsBucket supportsSecureCoding]

  // instance methods
  -[HKHeartRateSummaryStatisticsBucket isEqual:]
  -[HKHeartRateSummaryStatisticsBucket encodeWithCoder:]
  -[HKHeartRateSummaryStatisticsBucket initWithCoder:]
  -[HKHeartRateSummaryStatisticsBucket .cxx_destruct]
  -[HKHeartRateSummaryStatisticsBucket bucketIndex]
  -[HKHeartRateSummaryStatisticsBucket heartRatesInBeatsPerMinute]
  -[HKHeartRateSummaryStatisticsBucket initWithBucketIndex:]
  -[HKHeartRateSummaryStatisticsBucket addHeartRateInBeatsPerMinute:]


HKActivityCache : HKSample <NSCopying>
 @property  long long cacheIndex
 @property  long long sequence
 @property  HKQuantity *energyBurned
 @property  double briskMinutes
 @property  double activeHours
 @property  HKQuantity *energyBurnedGoal
 @property  double moveMinutesGoal
 @property  double briskMinutesGoal
 @property  double activeHoursGoal
 @property  long long stepCount
 @property  double deepBreathingDuration
 @property  HKQuantity *walkingAndRunningDistance
 @property  long long pushCount
 @property  long long wheelchairUse
 @property  long long flightsClimbed
 @property  NSArray *dailyEnergyBurnedStatistics
 @property  NSArray *dailyBriskMinutesStatistics
 @property  NSDateComponents *dateComponents
 @property  BOOL hasDateComponents
 @property  BOOL hasEnergyBurned
 @property  BOOL hasBriskMinutes
 @property  BOOL hasActiveHours
 @property  NSDate *energyBurnedGoalDate
 @property  BOOL hasEnergyBurnedGoal
 @property  BOOL hasBriskMinutesGoal
 @property  NSDate *briskMinutesGoalDate
 @property  BOOL hasBriskMinutesGoalDate
 @property  BOOL hasActiveHoursGoal
 @property  NSDate *activeHoursGoalDate
 @property  BOOL hasActiveHoursGoalDate
 @property  BOOL hasStepCount
 @property  BOOL hasWalkingAndRunningDistance
 @property  BOOL hasPushCount
 @property  BOOL hasWheelchairUse
 @property  BOOL hasDeepBreathingDuration
 @property  BOOL hasFlightsClimbed
 @property  BOOL hasDailyEnergyBurnedStatistics
 @property  BOOL hasDailyBriskMinutesStatistics
 @property  unsigned long knownFields

  // class methods
  +[HKActivityCache supportsSecureCoding]
  +[HKActivityCache _isConcreteObjectClass]
  +[HKActivityCache _activityCacheWithStartDate:endDate:dateComponents:sequence:metadata:]
  +[HKActivityCache _activityCacheWithStartDate:endDate:dateComponents:sequence:energyBurned:energyBurnedGoal:walkingAndRunningDistance:metadata:]
  +[HKActivityCache _activityCacheWithUUID:startDate:endDate:dateComponents:sequence:]

  // instance methods
  -[HKActivityCache copyWithZone:]
  -[HKActivityCache encodeWithCoder:]
  -[HKActivityCache initWithCoder:]
  -[HKActivityCache .cxx_destruct]
  -[HKActivityCache reset]
  -[HKActivityCache sequence]
  -[HKActivityCache _valueDescription]
  -[HKActivityCache dateComponents]
  -[HKActivityCache stepCount]
  -[HKActivityCache wheelchairUse]
  -[HKActivityCache energyBurned]
  -[HKActivityCache energyBurnedGoal]
  -[HKActivityCache briskMinutes]
  -[HKActivityCache briskMinutesGoal]
  -[HKActivityCache activeHours]
  -[HKActivityCache activeHoursGoal]
  -[HKActivityCache walkingAndRunningDistance]
  -[HKActivityCache pushCount]
  -[HKActivityCache _setPushCount:]
  -[HKActivityCache _setWheelchairUse:]
  -[HKActivityCache energyBurnedGoalPercentage]
  -[HKActivityCache briskMinutesGoalPercentage]
  -[HKActivityCache activeHoursGoalPercentage]
  -[HKActivityCache _setEnergyBurned:]
  -[HKActivityCache _setEnergyBurnedGoal:]
  -[HKActivityCache _setWalkingAndRunningDistance:]
  -[HKActivityCache hasEnergyBurned]
  -[HKActivityCache _energyBurnedInKilocalories]
  -[HKActivityCache hasEnergyBurnedGoal]
  -[HKActivityCache _energyBurnedGoalInKilocalories]
  -[HKActivityCache hasBriskMinutes]
  -[HKActivityCache hasBriskMinutesGoal]
  -[HKActivityCache hasActiveHours]
  -[HKActivityCache hasActiveHoursGoal]
  -[HKActivityCache hasStepCount]
  -[HKActivityCache hasPushCount]
  -[HKActivityCache hasWalkingAndRunningDistance]
  -[HKActivityCache _walkingAndRunningDistanceInMeters]
  -[HKActivityCache hasDeepBreathingDuration]
  -[HKActivityCache hasFlightsClimbed]
  -[HKActivityCache deepBreathingDuration]
  -[HKActivityCache flightsClimbed]
  -[HKActivityCache _setEnergyBurnedGoal:date:]
  -[HKActivityCache _setBriskMinutesGoal:date:]
  -[HKActivityCache _setActiveHoursGoal:date:]
  -[HKActivityCache hasWheelchairUse]
  -[HKActivityCache _setBriskMinutes:]
  -[HKActivityCache _setActiveHours:]
  -[HKActivityCache _setStepCount:]
  -[HKActivityCache _setDeepBreathingDuration:]
  -[HKActivityCache energyBurnedGoalDate]
  -[HKActivityCache _setBriskMinutesGoal:]
  -[HKActivityCache _setActiveHoursGoal:]
  -[HKActivityCache _setFlightsClimbed:]
  -[HKActivityCache dailyEnergyBurnedStatistics]
  -[HKActivityCache _setDailyEnergyBurnedStatistics:]
  -[HKActivityCache dailyBriskMinutesStatistics]
  -[HKActivityCache _setDailyBriskMinutesStatistics:]
  -[HKActivityCache _setCacheIndex:]
  -[HKActivityCache _setSequence:]
  -[HKActivityCache _setActiveHoursGoalDateOnly:]
  -[HKActivityCache _setBriskMinutesGoalDateOnly:]
  -[HKActivityCache hasBriskMinutesGoalDate]
  -[HKActivityCache hasActiveHoursGoalDate]
  -[HKActivityCache _isEqualToActivityCache:]
  -[HKActivityCache _setEnergyBurnedGoalOnly:]
  -[HKActivityCache _setEnergyBurnedGoalDateOnly:]
  -[HKActivityCache _setBriskMinutesGoalOnly:]
  -[HKActivityCache _setActiveHoursGoalOnly:]
  -[HKActivityCache cacheIndex]
  -[HKActivityCache hasDateComponents]
  -[HKActivityCache hasDailyEnergyBurnedStatistics]
  -[HKActivityCache hasDailyBriskMinutesStatistics]
  -[HKActivityCache knownFields]
  -[HKActivityCache briskMinutesGoalDate]
  -[HKActivityCache activeHoursGoalDate]
  -[HKActivityCache moveMinutesGoal]
  -[HKActivityCache _setMoveMinutesGoal:]


HKMedicationRecord : HKMedicalRecord <HKConceptIndexable, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *UUID
 @property  NSLocale *locale
 @property  HKMedicationRecordType *medicationRecordType
 @property  NSString *asserter
 @property  HKMedicalDate *assertionDate
 @property  long long assertionType
 @property  NSArray *dosages
 @property  HKMedicalDate *earliestDosageDate
 @property  HKMedicalDate *effectiveEndDate
 @property  HKMedicalDate *effectiveStartDate
 @property  HKConcept *medication
 @property  NSArray *medicationCodings
 @property  BOOL notTaken
 @property  HKConcept *reasonForUse
 @property  NSArray *reasonForUseCodings
 @property  NSArray *reasonsNotTaken
 @property  NSArray *reasonsNotTakenCodings
 @property  HKConcept *status
 @property  HKMedicalCoding *statusCoding

  // class methods
  +[HKMedicationRecord supportsSecureCoding]
  +[HKMedicationRecord supportsEquivalence]
  +[HKMedicationRecord _isConcreteObjectClass]
  +[HKMedicationRecord indexableConceptKeyPaths]
  +[HKMedicationRecord cachedConceptRelationshipKeyPaths]
  +[HKMedicationRecord defaultDisplayString]
  +[HKMedicationRecord medicationCodingsPreferredSystems]
  +[HKMedicationRecord statusCodingPreferredSystems]
  +[HKMedicationRecord reasonForUseCodingsPreferredSystems]
  +[HKMedicationRecord reasonsNotTakenCodingsPreferredSystems]
  +[HKMedicationRecord _newMedicationRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:medicationCodings:assertionType:asserter:assertionDate:statusCoding:dosages:earliestDosageDate:reasonForUseCodings:notTaken:reasonsNotTakenCodings:effectiveStartDate:effectiveEndDate:config:]
  +[HKMedicationRecord medicationRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:medicationCodings:assertionType:asserter:assertionDate:statusCoding:dosages:earliestDosageDate:reasonForUseCodings:notTaken:reasonsNotTakenCodings:effectiveStartDate:effectiveEndDate:]
  +[HKMedicationRecord medicationRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:medicationCodings:assertionType:asserter:assertionDate:statusCoding:dosages:earliestDosageDate:reasonForUseCodings:notTaken:reasonsNotTakenCodings:effectiveStartDate:effectiveEndDate:]

  // instance methods
  -[HKMedicationRecord init]
  -[HKMedicationRecord copyWithZone:]
  -[HKMedicationRecord encodeWithCoder:]
  -[HKMedicationRecord initWithCoder:]
  -[HKMedicationRecord .cxx_destruct]
  -[HKMedicationRecord status]
  -[HKMedicationRecord assertionType]
  -[HKMedicationRecord _setStatus:]
  -[HKMedicationRecord medicationCodings]
  -[HKMedicationRecord dosages]
  -[HKMedicationRecord earliestDosageDate]
  -[HKMedicationRecord statusCoding]
  -[HKMedicationRecord medication]
  -[HKMedicationRecord isEquivalent:]
  -[HKMedicationRecord _validateConfigurationWithOptions:]
  -[HKMedicationRecord medicationCodingsCollection]
  -[HKMedicationRecord medicationCodingsContext]
  -[HKMedicationRecord statusCodingCollection]
  -[HKMedicationRecord statusCodingContext]
  -[HKMedicationRecord _setMedicationCodings:]
  -[HKMedicationRecord _setDosages:]
  -[HKMedicationRecord _setEarliestDosageDate:]
  -[HKMedicationRecord _setStatusCoding:]
  -[HKMedicationRecord _setMedication:]
  -[HKMedicationRecord codingsForKeyPath:error:]
  -[HKMedicationRecord applyConcepts:forKeyPath:error:]
  -[HKMedicationRecord medicalRecordCodings]
  -[HKMedicationRecord indexKeywords]
  -[HKMedicationRecord medicalRecordPreferredSystems]
  -[HKMedicationRecord medicationRecordType]
  -[HKMedicationRecord effectiveStartDate]
  -[HKMedicationRecord effectiveEndDate]
  -[HKMedicationRecord _setEffectiveStartDate:]
  -[HKMedicationRecord _setEffectiveEndDate:]
  -[HKMedicationRecord statusCodingTasks]
  -[HKMedicationRecord medicationCodingsTasks]
  -[HKMedicationRecord reasonForUseCodings]
  -[HKMedicationRecord reasonsNotTakenCodings]
  -[HKMedicationRecord reasonForUseCodingsTasks]
  -[HKMedicationRecord reasonsNotTakenCodingsTasks]
  -[HKMedicationRecord asserter]
  -[HKMedicationRecord assertionDate]
  -[HKMedicationRecord notTaken]
  -[HKMedicationRecord reasonForUse]
  -[HKMedicationRecord reasonsNotTaken]
  -[HKMedicationRecord reasonForUseCodingsCollection]
  -[HKMedicationRecord reasonForUseCodingsContext]
  -[HKMedicationRecord reasonsNotTakenCodingsCollection]
  -[HKMedicationRecord reasonsNotTakenCodingsContexts]
  -[HKMedicationRecord _setAssertionType:]
  -[HKMedicationRecord _setAsserter:]
  -[HKMedicationRecord _setAssertionDate:]
  -[HKMedicationRecord _setReasonForUseCodings:]
  -[HKMedicationRecord _setNotTaken:]
  -[HKMedicationRecord _setReasonsNotTakenCodings:]
  -[HKMedicationRecord _setReasonForUse:]
  -[HKMedicationRecord _setReasonsNotTaken:]


HKFeatureAvailabilityWatchCompanionDevicePlatformEqualsRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  NSString *devicePlatform
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityWatchCompanionDevicePlatformEqualsRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityWatchCompanionDevicePlatformEqualsRule .cxx_destruct]
  -[HKFeatureAvailabilityWatchCompanionDevicePlatformEqualsRule evaluate]
  -[HKFeatureAvailabilityWatchCompanionDevicePlatformEqualsRule processUserInfo:]
  -[HKFeatureAvailabilityWatchCompanionDevicePlatformEqualsRule setDevicePlatform:]
  -[HKFeatureAvailabilityWatchCompanionDevicePlatformEqualsRule devicePlatform]


_HKQuantityDistributionQuery : HKQuery <HKQuantityDistributionQueryClientInterface>
 @property  @? completionHandler
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  long long contextStyle
 @property  NSDate *anchorDate
 @property  NSDateComponents *intervalComponents
 @property  HKQuantity *histogramAnchor
 @property  HKQuantity *histogramBucketSize
 @property  unsigned long options
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HKQuantityDistributionQuery configurationClass]
  +[_HKQuantityDistributionQuery clientInterfaceProtocol]
  +[_HKQuantityDistributionQuery configureClientInterface:]

  // instance methods
  -[_HKQuantityDistributionQuery options]
  -[_HKQuantityDistributionQuery .cxx_destruct]
  -[_HKQuantityDistributionQuery startDate]
  -[_HKQuantityDistributionQuery endDate]
  -[_HKQuantityDistributionQuery completionHandler]
  -[_HKQuantityDistributionQuery queue_deliverError:]
  -[_HKQuantityDistributionQuery queue_queryDidDeactivate:]
  -[_HKQuantityDistributionQuery queue_populateConfiguration:]
  -[_HKQuantityDistributionQuery client_deliverDistributionCollection:forQuery:]
  -[_HKQuantityDistributionQuery initWithQuantityType:startDate:endDate:contextStyle:predicate:anchorDate:intervalComponents:histogramAnchor:histogramBucketSize:options:completionHandler:]
  -[_HKQuantityDistributionQuery contextStyle]
  -[_HKQuantityDistributionQuery anchorDate]
  -[_HKQuantityDistributionQuery intervalComponents]
  -[_HKQuantityDistributionQuery histogramAnchor]
  -[_HKQuantityDistributionQuery histogramBucketSize]


_HKQuantityDistributionQueryServerConfiguration : HKQueryServerConfiguration
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  long long contextStyle
 @property  NSDate *anchorDate
 @property  NSDateComponents *intervalComponents
 @property  HKQuantity *histogramAnchor
 @property  HKQuantity *histogramBucketSize
 @property  unsigned long options

  // class methods
  +[_HKQuantityDistributionQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKQuantityDistributionQueryServerConfiguration copyWithZone:]
  -[_HKQuantityDistributionQueryServerConfiguration options]
  -[_HKQuantityDistributionQueryServerConfiguration encodeWithCoder:]
  -[_HKQuantityDistributionQueryServerConfiguration initWithCoder:]
  -[_HKQuantityDistributionQueryServerConfiguration .cxx_destruct]
  -[_HKQuantityDistributionQueryServerConfiguration startDate]
  -[_HKQuantityDistributionQueryServerConfiguration endDate]
  -[_HKQuantityDistributionQueryServerConfiguration setOptions:]
  -[_HKQuantityDistributionQueryServerConfiguration setStartDate:]
  -[_HKQuantityDistributionQueryServerConfiguration setEndDate:]
  -[_HKQuantityDistributionQueryServerConfiguration setContextStyle:]
  -[_HKQuantityDistributionQueryServerConfiguration setAnchorDate:]
  -[_HKQuantityDistributionQueryServerConfiguration setIntervalComponents:]
  -[_HKQuantityDistributionQueryServerConfiguration setHistogramAnchor:]
  -[_HKQuantityDistributionQueryServerConfiguration setHistogramBucketSize:]
  -[_HKQuantityDistributionQueryServerConfiguration contextStyle]
  -[_HKQuantityDistributionQueryServerConfiguration anchorDate]
  -[_HKQuantityDistributionQueryServerConfiguration intervalComponents]
  -[_HKQuantityDistributionQueryServerConfiguration histogramAnchor]
  -[_HKQuantityDistributionQueryServerConfiguration histogramBucketSize]


_HKQuantityDistributionData : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  HKQuantity *minimumBucketValue
 @property  HKQuantity *minimumValue
 @property  HKQuantity *maximumValue
 @property  HKQuantity *averageValue
 @property  HKQuantity *duration
 @property  NSArray *histogramCounts

  // class methods
  +[_HKQuantityDistributionData supportsSecureCoding]

  // instance methods
  -[_HKQuantityDistributionData copyWithZone:]
  -[_HKQuantityDistributionData encodeWithCoder:]
  -[_HKQuantityDistributionData initWithCoder:]
  -[_HKQuantityDistributionData .cxx_destruct]
  -[_HKQuantityDistributionData startDate]
  -[_HKQuantityDistributionData endDate]
  -[_HKQuantityDistributionData duration]
  -[_HKQuantityDistributionData minimumValue]
  -[_HKQuantityDistributionData maximumValue]
  -[_HKQuantityDistributionData initWithStartDate:endDate:minimumBucketValue:minimumValue:maximumValue:averageValue:duration:histogramCounts:]
  -[_HKQuantityDistributionData minimumBucketValue]
  -[_HKQuantityDistributionData averageValue]
  -[_HKQuantityDistributionData histogramCounts]


HKQuantitySample : HKSample
 @property  BOOL frozen
 @property  HDCodableQuantitySample *codableQuantitySample
 @property  HKQuantityType *quantityType
 @property  HKQuantity *quantity
 @property  long long count

  // class methods
  +[HKQuantitySample supportsSecureCoding]
  +[HKQuantitySample _isConcreteObjectClass]
  +[HKQuantitySample quantitySampleWithType:quantity:startDate:endDate:]
  +[HKQuantitySample quantitySampleWithType:quantity:startDate:endDate:device:metadata:]
  +[HKQuantitySample quantitySampleWithType:quantity:startDate:endDate:metadata:]
  +[HKQuantitySample _unfrozenQuantitySampleWithQuantityType:quantity:startDate:device:]
  +[HKQuantitySample _quantitySamplesEnforcingDurationWithType:quantity:startDate:endDate:device:metadata:]

  // instance methods
  -[HKQuantitySample count]
  -[HKQuantitySample encodeWithCoder:]
  -[HKQuantitySample initWithCoder:]
  -[HKQuantitySample .cxx_destruct]
  -[HKQuantitySample _init]
  -[HKQuantitySample quantityType]
  -[HKQuantitySample _valueDescription]
  -[HKQuantitySample _frozen]
  -[HKQuantitySample quantity]
  -[HKQuantitySample _validateConfigurationWithOptions:]
  -[HKQuantitySample _setCount:]
  -[HKQuantitySample _setQuantity:]
  -[HKQuantitySample _shouldNotifyOnInsert]
  -[HKQuantitySample _setFrozen:]
  -[HKQuantitySample _setFreezing]
  -[HKQuantitySample _compareFreezeStateWithSample:]
  -[HKQuantitySample codableQuantitySample]
  -[HKQuantitySample _setCodableQuantitySample:]


HKFHIRResource : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *sourceString
 @property  NSDate *lastUpdatedDate
 @property  NSString *resourceType
 @property  NSString *identifier
 @property  NSData *data
 @property  NSURL *sourceURL

  // class methods
  +[HKFHIRResource supportsSecureCoding]

  // instance methods
  -[HKFHIRResource init]
  -[HKFHIRResource isEqual:]
  -[HKFHIRResource copyWithZone:]
  -[HKFHIRResource encodeWithCoder:]
  -[HKFHIRResource initWithCoder:]
  -[HKFHIRResource .cxx_destruct]
  -[HKFHIRResource data]
  -[HKFHIRResource identifier]
  -[HKFHIRResource sourceURL]
  -[HKFHIRResource resourceType]
  -[HKFHIRResource lastUpdatedDate]
  -[HKFHIRResource initWithResourceType:identifier:data:sourceURL:lastUpdatedDate:]
  -[HKFHIRResource sourceString]


HKEADFFileParser : NSObject /usr/lib/libc++.1.dylib
 @property  NSData *data

  // instance methods
  -[HKEADFFileParser initWithData:]
  -[HKEADFFileParser .cxx_destruct]
  -[HKEADFFileParser data]
  -[HKEADFFileParser setData:]
  -[HKEADFFileParser _enumerateHeadersWithHandler:]
  -[HKEADFFileParser payloadInRange:]
  -[HKEADFFileParser enumerateChannelsWithHandler:]
  -[HKEADFFileParser newBuilderWithStartDate:]


_HKDateIntervalCollection : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSDate *anchorDate
 @property  NSDateComponents *intervalComponents

  // class methods
  +[_HKDateIntervalCollection supportsSecureCoding]

  // instance methods
  -[_HKDateIntervalCollection isEqual:]
  -[_HKDateIntervalCollection copyWithZone:]
  -[_HKDateIntervalCollection encodeWithCoder:]
  -[_HKDateIntervalCollection initWithCoder:]
  -[_HKDateIntervalCollection .cxx_destruct]
  -[_HKDateIntervalCollection anchorDate]
  -[_HKDateIntervalCollection intervalComponents]
  -[_HKDateIntervalCollection dateIntervalAtIndex:]
  -[_HKDateIntervalCollection dateIntervalContainingDate:index:]
  -[_HKDateIntervalCollection initWithAnchorDate:intervalComponents:]
  -[_HKDateIntervalCollection dateIntervalForIntervalsContainingInterval:]


_HKMedicalIDData : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSDate *birthdate
 @property  NSDate *gmtBirthdate
 @property  NSDate *dateSaved
 @property  long long schemaVersion
 @property  BOOL isDisabled
 @property  NSData *pictureData
 @property  NSString *name
 @property  NSDateComponents *gregorianBirthday
 @property  HKQuantity *height
 @property  HKQuantity *weight
 @property  long long bloodType
 @property  NSNumber *isOrganDonor
 @property  NSArray *emergencyContacts
 @property  NSString *medicalConditions
 @property  NSString *medicalNotes
 @property  NSString *allergyInfo
 @property  NSString *medicationInfo

  // class methods
  +[_HKMedicalIDData supportsSecureCoding]

  // instance methods
  -[_HKMedicalIDData init]
  -[_HKMedicalIDData isEqual:]
  -[_HKMedicalIDData name]
  -[_HKMedicalIDData copyWithZone:]
  -[_HKMedicalIDData isEmpty]
  -[_HKMedicalIDData encodeWithCoder:]
  -[_HKMedicalIDData initWithCoder:]
  -[_HKMedicalIDData .cxx_destruct]
  -[_HKMedicalIDData setName:]
  -[_HKMedicalIDData schemaVersion]
  -[_HKMedicalIDData height]
  -[_HKMedicalIDData setHeight:]
  -[_HKMedicalIDData setWeight:]
  -[_HKMedicalIDData weight]
  -[_HKMedicalIDData isDisabled]
  -[_HKMedicalIDData setIsDisabled:]
  -[_HKMedicalIDData emergencyContacts]
  -[_HKMedicalIDData setEmergencyContacts:]
  -[_HKMedicalIDData setSchemaVersion:]
  -[_HKMedicalIDData pictureData]
  -[_HKMedicalIDData bloodType]
  -[_HKMedicalIDData setPictureData:]
  -[_HKMedicalIDData setBirthdate:]
  -[_HKMedicalIDData setGmtBirthdate:]
  -[_HKMedicalIDData setBloodType:]
  -[_HKMedicalIDData setIsOrganDonor:]
  -[_HKMedicalIDData setMedicalConditions:]
  -[_HKMedicalIDData setMedicalNotes:]
  -[_HKMedicalIDData setAllergyInfo:]
  -[_HKMedicalIDData setMedicationInfo:]
  -[_HKMedicalIDData setDateSaved:]
  -[_HKMedicalIDData birthdate]
  -[_HKMedicalIDData gmtBirthdate]
  -[_HKMedicalIDData isOrganDonor]
  -[_HKMedicalIDData medicalConditions]
  -[_HKMedicalIDData medicalNotes]
  -[_HKMedicalIDData allergyInfo]
  -[_HKMedicalIDData medicationInfo]
  -[_HKMedicalIDData dateSaved]
  -[_HKMedicalIDData _gregorianUtcCalendar]
  -[_HKMedicalIDData hasAnyData]
  -[_HKMedicalIDData setGregorianBirthday:]
  -[_HKMedicalIDData gregorianBirthday]
  -[_HKMedicalIDData recordFieldPresenceStatistics]
  -[_HKMedicalIDData consolidatedSOSContactsWithSOSContactsManager:]


_HKEmergencyContact : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *name
 @property  NSNumber *nameRecordID
 @property  NSString *nameContactIdentifier
 @property  NSString *phoneNumber
 @property  NSNumber *phoneNumberPropertyID
 @property  NSString *phoneNumberContactIdentifier
 @property  NSString *phoneNumberLabel
 @property  NSString *relationship

  // class methods
  +[_HKEmergencyContact supportsSecureCoding]
  +[_HKEmergencyContact nameForContact:]
  +[_HKEmergencyContact emergencyContactWithContact:property:]

  // instance methods
  -[_HKEmergencyContact init]
  -[_HKEmergencyContact isEqual:]
  -[_HKEmergencyContact name]
  -[_HKEmergencyContact copyWithZone:]
  -[_HKEmergencyContact encodeWithCoder:]
  -[_HKEmergencyContact initWithCoder:]
  -[_HKEmergencyContact .cxx_destruct]
  -[_HKEmergencyContact setName:]
  -[_HKEmergencyContact phoneNumber]
  -[_HKEmergencyContact setPhoneNumber:]
  -[_HKEmergencyContact relationship]
  -[_HKEmergencyContact phoneNumberContactIdentifier]
  -[_HKEmergencyContact nameContactIdentifier]
  -[_HKEmergencyContact setRelationship:]
  -[_HKEmergencyContact setNameRecordID:]
  -[_HKEmergencyContact setPhoneNumberPropertyID:]
  -[_HKEmergencyContact setNameContactIdentifier:]
  -[_HKEmergencyContact setPhoneNumberContactIdentifier:]
  -[_HKEmergencyContact setPhoneNumberLabel:]
  -[_HKEmergencyContact nameRecordID]
  -[_HKEmergencyContact phoneNumberPropertyID]
  -[_HKEmergencyContact phoneNumberLabel]


HKWatchAppAvailability : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *bundleID
 @property  ASDAppQuery *query
 @property  NSArray *_test_apps

  // instance methods
  -[HKWatchAppAvailability query]
  -[HKWatchAppAvailability .cxx_destruct]
  -[HKWatchAppAvailability setQuery:]
  -[HKWatchAppAvailability bundleID]
  -[HKWatchAppAvailability setBundleID:]
  -[HKWatchAppAvailability initWithBundleID:]
  -[HKWatchAppAvailability _test_apps]
  -[HKWatchAppAvailability findApplicationIn:]
  -[HKWatchAppAvailability appInstallStateOnWatch:completion:]
  -[HKWatchAppAvailability set_test_apps:]


_HKActivityStatisticsQueryResult : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSArray *activeEnergyResults
 @property  NSArray *appleMoveTimeResults
 @property  NSArray *appleExerciseTimeResults
 @property  NSArray *appleStandHourResults
 @property  NSArray *workoutResults

  // class methods
  +[_HKActivityStatisticsQueryResult supportsSecureCoding]

  // instance methods
  -[_HKActivityStatisticsQueryResult encodeWithCoder:]
  -[_HKActivityStatisticsQueryResult initWithCoder:]
  -[_HKActivityStatisticsQueryResult .cxx_destruct]
  -[_HKActivityStatisticsQueryResult activeEnergyResults]
  -[_HKActivityStatisticsQueryResult appleMoveTimeResults]
  -[_HKActivityStatisticsQueryResult appleExerciseTimeResults]
  -[_HKActivityStatisticsQueryResult appleStandHourResults]
  -[_HKActivityStatisticsQueryResult workoutResults]
  -[_HKActivityStatisticsQueryResult setActiveEnergyResults:]
  -[_HKActivityStatisticsQueryResult setAppleMoveTimeResults:]
  -[_HKActivityStatisticsQueryResult setAppleExerciseTimeResults:]
  -[_HKActivityStatisticsQueryResult setAppleStandHourResults:]
  -[_HKActivityStatisticsQueryResult setWorkoutResults:]


HKSourceQuery : HKQuery <HKSourceQueryClientInterface>
 @property  @? completionHandler
 @property  @? updateHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSourceQuery clientInterfaceProtocol]
  +[HKSourceQuery configureClientInterface:]
  +[HKSourceQuery configureServerInterface:]

  // instance methods
  -[HKSourceQuery .cxx_destruct]
  -[HKSourceQuery completionHandler]
  -[HKSourceQuery setUpdateHandler:]
  -[HKSourceQuery updateHandler]
  -[HKSourceQuery queue_validate]
  -[HKSourceQuery queue_deliverError:]
  -[HKSourceQuery queue_shouldDeactivateAfterInitialResults]
  -[HKSourceQuery queue_queryDidDeactivate:]
  -[HKSourceQuery client_deliverSources:forQuery:]
  -[HKSourceQuery client_deliverUpdatedSources:added:forQuery:]
  -[HKSourceQuery initWithSampleType:samplePredicate:completionHandler:]


_HKFitnessFriendAchievement : HKSample <NSCopying>
 @property  NSUUID *friendUUID
 @property  NSString *templateUniqueName
 @property  NSDate *completedDate
 @property  NSNumber *value

  // class methods
  +[_HKFitnessFriendAchievement supportsSecureCoding]
  +[_HKFitnessFriendAchievement achievementWithTemplateUniqueName:completedDate:value:friendUUID:]

  // instance methods
  -[_HKFitnessFriendAchievement encodeWithCoder:]
  -[_HKFitnessFriendAchievement initWithCoder:]
  -[_HKFitnessFriendAchievement .cxx_destruct]
  -[_HKFitnessFriendAchievement value]
  -[_HKFitnessFriendAchievement setValue:]
  -[_HKFitnessFriendAchievement friendUUID]
  -[_HKFitnessFriendAchievement setFriendUUID:]
  -[_HKFitnessFriendAchievement templateUniqueName]
  -[_HKFitnessFriendAchievement setTemplateUniqueName:]
  -[_HKFitnessFriendAchievement completedDate]
  -[_HKFitnessFriendAchievement setCompletedDate:]


_HKFitnessMachine : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSUUID *identifier
 @property  unsigned long type
 @property  unsigned long activityType
 @property  HKDevice *device
 @property  NSString *brand
 @property  NSArray *requestedTypes

  // class methods
  +[_HKFitnessMachine supportsSecureCoding]

  // instance methods
  -[_HKFitnessMachine isEqual:]
  -[_HKFitnessMachine copyWithZone:]
  -[_HKFitnessMachine type]
  -[_HKFitnessMachine encodeWithCoder:]
  -[_HKFitnessMachine initWithCoder:]
  -[_HKFitnessMachine .cxx_destruct]
  -[_HKFitnessMachine identifier]
  -[_HKFitnessMachine activityType]
  -[_HKFitnessMachine device]
  -[_HKFitnessMachine initWithType:identifier:]
  -[_HKFitnessMachine _setActivityType:]
  -[_HKFitnessMachine _setDevice:]
  -[_HKFitnessMachine brand]
  -[_HKFitnessMachine _setBrand:]
  -[_HKFitnessMachine _setRequestedTypes:]
  -[_HKFitnessMachine requestedTypes]


HKCurrentActivityCacheQueryResult : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  HKActivityCache *currentActivityCache
 @property  NSArray *activeEnergyResults
 @property  NSArray *appleExerciseTimeResults
 @property  NSArray *appleStandHourResults

  // class methods
  +[HKCurrentActivityCacheQueryResult supportsSecureCoding]

  // instance methods
  -[HKCurrentActivityCacheQueryResult encodeWithCoder:]
  -[HKCurrentActivityCacheQueryResult initWithCoder:]
  -[HKCurrentActivityCacheQueryResult .cxx_destruct]
  -[HKCurrentActivityCacheQueryResult activeEnergyResults]
  -[HKCurrentActivityCacheQueryResult appleExerciseTimeResults]
  -[HKCurrentActivityCacheQueryResult appleStandHourResults]
  -[HKCurrentActivityCacheQueryResult setActiveEnergyResults:]
  -[HKCurrentActivityCacheQueryResult setAppleExerciseTimeResults:]
  -[HKCurrentActivityCacheQueryResult setAppleStandHourResults:]
  -[HKCurrentActivityCacheQueryResult currentActivityCache]
  -[HKCurrentActivityCacheQueryResult setCurrentActivityCache:]


HKActivitySummary : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSDateComponents *gregorianDateComponents
 @property  long long activitySummaryIndex
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSDate *creationDate
 @property  double activeEnergyCompletionPercentage
 @property  double exerciseTimeCompletionPercentage
 @property  double standHoursCompletionPercentage
 @property  HKQuantity *deepBreathingDuration
 @property  HKQuantity *pushCount
 @property  long long wheelchairUse
 @property  HKQuantity *flightsClimbed
 @property  NSDate *energyBurnedGoalDate
 @property  NSDate *briskMinutesGoalDate
 @property  NSDate *activeHoursGoalDate
 @property  NSArray *dailyEnergyBurnedStatistics
 @property  NSArray *dailyBriskMinutesStatistics
 @property  HKQuantity *distanceWalkingRunning
 @property  HKQuantity *stepCount
 @property  BOOL dataLoading
 @property  BOOL hasMoveGoal
 @property  BOOL hasEnergyBurnedGoal
 @property  HKQuantity *activeEnergyBurned
 @property  HKQuantity *appleExerciseTime
 @property  HKQuantity *appleStandHours
 @property  HKQuantity *activeEnergyBurnedGoal
 @property  HKQuantity *appleExerciseTimeGoal
 @property  HKQuantity *appleStandHoursGoal

  // class methods
  +[HKActivitySummary supportsSecureCoding]
  +[HKActivitySummary _validateActivitySummaryDateComponents:errorMessage:]
  +[HKActivitySummary _validateActivitySummaryDateComponentsRange:endDateComponents:errorMessage:]
  +[HKActivitySummary _mostRecentlyCreatedCacheAmongCaches:]
  +[HKActivitySummary _mostSignificantCacheAmongCaches:]

  // instance methods
  -[HKActivitySummary init]
  -[HKActivitySummary isEqual:]
  -[HKActivitySummary copyWithZone:]
  -[HKActivitySummary encodeWithCoder:]
  -[HKActivitySummary initWithCoder:]
  -[HKActivitySummary .cxx_destruct]
  -[HKActivitySummary _startDate]
  -[HKActivitySummary _endDate]
  -[HKActivitySummary _creationDate]
  -[HKActivitySummary stepCount]
  -[HKActivitySummary _setStartDate:]
  -[HKActivitySummary _setCreationDate:]
  -[HKActivitySummary _setEndDate:]
  -[HKActivitySummary _wheelchairUse]
  -[HKActivitySummary _activitySummaryIndex]
  -[HKActivitySummary activeEnergyBurned]
  -[HKActivitySummary activeEnergyBurnedGoal]
  -[HKActivitySummary appleExerciseTime]
  -[HKActivitySummary appleExerciseTimeGoal]
  -[HKActivitySummary appleStandHours]
  -[HKActivitySummary appleStandHoursGoal]
  -[HKActivitySummary setStepCount:]
  -[HKActivitySummary distanceWalkingRunning]
  -[HKActivitySummary _pushCount]
  -[HKActivitySummary _setActivitySummaryIndex:]
  -[HKActivitySummary setActiveEnergyBurned:]
  -[HKActivitySummary setActiveEnergyBurnedGoal:]
  -[HKActivitySummary setAppleExerciseTime:]
  -[HKActivitySummary setAppleExerciseTimeGoal:]
  -[HKActivitySummary setAppleStandHours:]
  -[HKActivitySummary setAppleStandHoursGoal:]
  -[HKActivitySummary setDistanceWalkingRunning:]
  -[HKActivitySummary _setPushCount:]
  -[HKActivitySummary _setWheelchairUse:]
  -[HKActivitySummary _setDeepBreathingDuration:]
  -[HKActivitySummary _setFlightsClimbed:]
  -[HKActivitySummary _setDailyEnergyBurnedStatistics:]
  -[HKActivitySummary _setDailyBriskMinutesStatistics:]
  -[HKActivitySummary _deepBreathingDuration]
  -[HKActivitySummary _energyBurnedGoalDate]
  -[HKActivitySummary _briskMinutesGoalDate]
  -[HKActivitySummary _activeHoursGoalDate]
  -[HKActivitySummary _flightsClimbed]
  -[HKActivitySummary _dailyEnergyBurnedStatistics]
  -[HKActivitySummary _dailyBriskMinutesStatistics]
  -[HKActivitySummary _decodeQuantityFromCoder:forKey:unit:]
  -[HKActivitySummary _encodeQuantity:withCoder:key:unit:]
  -[HKActivitySummary dateComponentsForCalendar:]
  -[HKActivitySummary _hasEnergyBurnedGoal]
  -[HKActivitySummary _validateQuantityAssignment:expectedUnit:propertyName:]
  -[HKActivitySummary _percentageCompleteWithQuantity:goalQuantity:unit:]
  -[HKActivitySummary _setEnergyBurnedGoalDate:]
  -[HKActivitySummary _setBriskMinutesGoalDate:]
  -[HKActivitySummary _setActiveHoursGoalDate:]
  -[HKActivitySummary _allFieldsAreEqual:]
  -[HKActivitySummary _gregorianDateComponents]
  -[HKActivitySummary _hasMoveGoal]
  -[HKActivitySummary _hasExerciseGoal]
  -[HKActivitySummary _hasStandHoursGoal]
  -[HKActivitySummary _useHourlyGoalComparison]
  -[HKActivitySummary _setGregorianDateComponents:]
  -[HKActivitySummary _activeEnergyCompletionPercentage]
  -[HKActivitySummary _exerciseTimeCompletionPercentage]
  -[HKActivitySummary _standHoursCompletionPercentage]
  -[HKActivitySummary _initWithActivityCache:shouldIncludePrivateProperties:]
  -[HKActivitySummary _isDataLoading]
  -[HKActivitySummary _setDataLoading:]


_HKCurrentWorkoutSnapshot : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSUUID *sessionIdentifier
 @property  HKWorkoutConfiguration *configuration
 @property  NSString *applicationIdentifier
 @property  BOOL isFirstPartyWorkout
 @property  long long sessionState
 @property  long long internalState
 @property  NSDate *snapshotDate
 @property  double elapsedTime

  // class methods
  +[_HKCurrentWorkoutSnapshot supportsSecureCoding]

  // instance methods
  -[_HKCurrentWorkoutSnapshot encodeWithCoder:]
  -[_HKCurrentWorkoutSnapshot initWithCoder:]
  -[_HKCurrentWorkoutSnapshot .cxx_destruct]
  -[_HKCurrentWorkoutSnapshot state]
  -[_HKCurrentWorkoutSnapshot applicationIdentifier]
  -[_HKCurrentWorkoutSnapshot configuration]
  -[_HKCurrentWorkoutSnapshot sessionState]
  -[_HKCurrentWorkoutSnapshot sessionIdentifier]
  -[_HKCurrentWorkoutSnapshot elapsedTime]
  -[_HKCurrentWorkoutSnapshot isFirstPartyWorkout]
  -[_HKCurrentWorkoutSnapshot internalState]
  -[_HKCurrentWorkoutSnapshot elapsedTimeAtDate:]
  -[_HKCurrentWorkoutSnapshot _initWithSessionIdentifier:workoutConfiguration:sessionServerState:applicationIdentifier:elapsedTime:snapshotDate:]
  -[_HKCurrentWorkoutSnapshot snapshotDate]


HKQueryServerProxyProvider : HKTaskServerProxyProvider
  // instance methods
  -[HKQueryServerProxyProvider fetchProxyServiceEndpointForIdentifier:endpointHandler:errorHandler:]
  -[HKQueryServerProxyProvider initWithHealthStore:query:configuration:queryUUID:]


HKWorkoutRouteDataSource : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable, HKWorkoutRouteDataSourceClientInterface, HKWorkoutDataSource>
 @property  NSUUID *identifier
 @property  NSUUID *sessionIdentifier
 @property  HKTaskServerProxyProvider *proxyProvider
 @property  <HKWorkoutRouteDataSourceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKWorkoutRouteDataSource serverInterface]
  +[HKWorkoutRouteDataSource clientInterface]
  +[HKWorkoutRouteDataSource serverIdentifier]

  // instance methods
  -[HKWorkoutRouteDataSource delegate]
  -[HKWorkoutRouteDataSource setDelegate:]
  -[HKWorkoutRouteDataSource .cxx_destruct]
  -[HKWorkoutRouteDataSource identifier]
  -[HKWorkoutRouteDataSource setIdentifier:]
  -[HKWorkoutRouteDataSource exportedInterface]
  -[HKWorkoutRouteDataSource sessionIdentifier]
  -[HKWorkoutRouteDataSource connectionInvalidated]
  -[HKWorkoutRouteDataSource connectionInterrupted]
  -[HKWorkoutRouteDataSource remoteInterface]
  -[HKWorkoutRouteDataSource proxyProvider]
  -[HKWorkoutRouteDataSource workoutBuilderDidFinish]
  -[HKWorkoutRouteDataSource clientRemote_didUpdateElevation:]
  -[HKWorkoutRouteDataSource clientRemote_didUpdateRoute:]
  -[HKWorkoutRouteDataSource clientRemote_didUpdateAltitude:]
  -[HKWorkoutRouteDataSource initWithWorkoutSession:]


HKWorkoutRouteBuilder : HKSeriesBuilder <HKSeriesBuilderClientInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKWorkoutRouteBuilder serverInterface]
  +[HKWorkoutRouteBuilder clientInterface]
  +[HKWorkoutRouteBuilder configureClientInterface:]
  +[HKWorkoutRouteBuilder taskServerIdentifier]
  +[HKWorkoutRouteBuilder configureServerInterface:]

  // instance methods
  -[HKWorkoutRouteBuilder init]
  -[HKWorkoutRouteBuilder exportedInterface]
  -[HKWorkoutRouteBuilder remoteInterface]
  -[HKWorkoutRouteBuilder initWithHealthStore:identifier:device:workoutBuilderID:]
  -[HKWorkoutRouteBuilder addMetadata:completion:]
  -[HKWorkoutRouteBuilder _resourceQueue_insertRouteData:completion:]
  -[HKWorkoutRouteBuilder _resourceQueue_finishRouteWithWorkout:metadata:completion:]
  -[HKWorkoutRouteBuilder initWithHealthStore:device:]
  -[HKWorkoutRouteBuilder insertRouteData:completion:]
  -[HKWorkoutRouteBuilder finishRouteWithWorkout:metadata:completion:]


HKUnit : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  _HKFactorization *_baseUnits
 @property  _HKDimension *dimension
 @property  double scaleOffset
 @property  NSString *unitString

  // class methods
  +[HKUnit supportsSecureCoding]
  +[HKUnit milliseconds]
  +[HKUnit degreeFahrenheitUnit]
  +[HKUnit kelvinUnit]
  +[HKUnit degreeCelsiusUnit]
  +[HKUnit fluidOunceUSUnit]
  +[HKUnit literUnit]
  +[HKUnit pintUSUnit]
  +[HKUnit cupUSUnit]
  +[HKUnit meterUnitWithMetricPrefix:]
  +[HKUnit meterUnit]
  +[HKUnit yardUnit]
  +[HKUnit inchUnit]
  +[HKUnit footUnit]
  +[HKUnit mileUnit]
  +[HKUnit kilocalorieUnit]
  +[HKUnit largeCalorieUnit]
  +[HKUnit jouleUnit]
  +[HKUnit secondUnit]
  +[HKUnit minuteUnit]
  +[HKUnit hourUnit]
  +[HKUnit dayUnit]
  +[HKUnit stoneUnit]
  +[HKUnit poundUnit]
  +[HKUnit ounceUnit]
  +[HKUnit gramUnit]
  +[HKUnit unitFromString:]
  +[HKUnit _nullUnit]
  +[HKUnit _foundationBaseUnits]
  +[HKUnit _countPerMinuteUnit]
  +[HKUnit gramUnitWithMetricPrefix:]
  +[HKUnit percentUnit]
  +[HKUnit decibelAWeightedSoundPressureLevelUnit]
  +[HKUnit countUnit]
  +[HKUnit hertzUnit]
  +[HKUnit decibelHearingLevelUnit]
  +[HKUnit _prefixStringForMetricPrefix:]
  +[HKUnit moleUnitWithMolarMass:]
  +[HKUnit moles]
  +[HKUnit pascalUnit]
  +[HKUnit secondUnitWithMetricPrefix:]
  +[HKUnit jouleUnitWithMetricPrefix:]
  +[HKUnit siemenUnit]
  +[HKUnit _internationalUnitWithMassEquivalent]
  +[HKUnit _internationalUnitWithVolumeEquivalent]
  +[HKUnit equivalentsUnit]
  +[HKUnit smallCalorieUnit]
  +[HKUnit kilojoulesUnit]
  +[HKUnit moleUnitWithMetricPrefix:molarMass:]
  +[HKUnit literUnitWithMetricPrefix:]
  +[HKUnit fluidOunceImperialUnit]
  +[HKUnit pintImperialUnit]
  +[HKUnit cupImperialUnit]
  +[HKUnit pascalUnitWithMetricPrefix:]
  +[HKUnit millimeterOfMercuryUnit]
  +[HKUnit centimeterOfWaterUnit]
  +[HKUnit atmosphereUnit]
  +[HKUnit calorieUnit]
  +[HKUnit siemenUnitWithMetricPrefix:]
  +[HKUnit hertzUnitWithMetricPrefix:]
  +[HKUnit perMilleUnit]
  +[HKUnit titerUnit]
  +[HKUnit _internationalUnitWithMetricPrefix:massEquivalent:]
  +[HKUnit _internationalUnitWithMassEquivalent:]
  +[HKUnit _internationalUnitWithMetricPrefix:volumeEquivalent:]
  +[HKUnit _internationalUnitWithVolumeEquivalent:]
  +[HKUnit internationalUnit]
  +[HKUnit equivalentsUnitWithMolarMass:valence:]
  +[HKUnit _countPerSecondUnit]
  +[HKUnit unitFromMassFormatterUnit:]
  +[HKUnit massFormatterUnitFromUnit:]
  +[HKUnit unitFromLengthFormatterUnit:]
  +[HKUnit lengthFormatterUnitFromUnit:]
  +[HKUnit unitFromEnergyFormatterUnit:]
  +[HKUnit energyFormatterUnitFromUnit:]
  +[HKUnit _isValidUnitString:]
  +[HKUnit _heightUnitForLocale:]
  +[HKUnit _distanceUnitForLocale:]
  +[HKUnit _personMassUnitForLocale:]
  +[HKUnit _temperatureUnitForLocale:]
  +[HKUnit _foodEnergyUnitForLocale:]

  // instance methods
  -[HKUnit init]
  -[HKUnit isEqual:]
  -[HKUnit copyWithZone:]
  -[HKUnit encodeWithCoder:]
  -[HKUnit initWithCoder:]
  -[HKUnit .cxx_destruct]
  -[HKUnit _init]
  -[HKUnit dimension]
  -[HKUnit isNull]
  -[HKUnit unitString]
  -[HKUnit _valueByConvertingValue:toUnit:]
  -[HKUnit _isCompatibleWithUnit:]
  -[HKUnit _foundationUnit]
  -[HKUnit _dimensionReduction]
  -[HKUnit _baseUnits]
  -[HKUnit unitDividedByUnit:]
  -[HKUnit _convertToBaseUnit:]
  -[HKUnit _convertFromBaseUnit:]
  -[HKUnit _reduceIfNecessaryWithCycleSet:]
  -[HKUnit _computeBaseUnitReductionAndProportionalSize:withCycleSet:]
  -[HKUnit _reducedProportionalSize]
  -[HKUnit scaleOffset]
  -[HKUnit unitMultipliedByUnit:]
  -[HKUnit unitRaisedToPower:]
  -[HKUnit reciprocalUnit]
  -[HKUnit _isMetricDistance]
  -[HKUnit _isCompatibleWithDimension:]
  -[HKUnit _baseUnitReductionAndProportionalSize:withCycleSet:]
  -[HKUnit _baseUnitReduction]


_HKCompoundUnit : HKUnit
  // class methods
  +[_HKCompoundUnit supportsSecureCoding]
  +[_HKCompoundUnit unitWithBaseUnits:]

  // instance methods
  -[_HKCompoundUnit isEqual:]
  -[_HKCompoundUnit encodeWithCoder:]
  -[_HKCompoundUnit initWithCoder:]
  -[_HKCompoundUnit .cxx_destruct]
  -[_HKCompoundUnit dimension]
  -[_HKCompoundUnit unitString]
  -[_HKCompoundUnit _baseUnits]
  -[_HKCompoundUnit _computeBaseUnitReductionAndProportionalSize:withCycleSet:]
  -[_HKCompoundUnit _initWithBaseUnits:]


HKBaseUnit : HKUnit <_HKFactor>
 @property  double proportionalSize
 @property  _HKBaseDimension *dimension
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKBaseUnit supportsSecureCoding]
  +[HKBaseUnit unitFromString:]
  +[HKBaseUnit _uniquedUnitWithPrefix:rootUnit:]
  +[HKBaseUnit _uniquedRootUnit:]
  +[HKBaseUnit _uniquedUnitWithPrefix:conversionConstant:rootUnit:]
  +[HKBaseUnit _uniquedRootUnitFromDefinition:]
  +[HKBaseUnit _rootUnitWithDefinition:]

  // instance methods
  -[HKBaseUnit encodeWithCoder:]
  -[HKBaseUnit initWithCoder:]
  -[HKBaseUnit .cxx_destruct]
  -[HKBaseUnit awakeAfterUsingCoder:]
  -[HKBaseUnit dimension]
  -[HKBaseUnit unitString]
  -[HKBaseUnit _baseUnits]
  -[HKBaseUnit _computeBaseUnitReductionAndProportionalSize:withCycleSet:]
  -[HKBaseUnit proportionalSize]
  -[HKBaseUnit _unitByPrefixing:withConversionConstant:]
  -[HKBaseUnit _initWithUnitString:proportionalSize:scaleOffset:]


HKMassUnit : HKBaseUnit
  // instance methods
  -[HKMassUnit dimension]


HKLengthUnit : HKBaseUnit
  // instance methods
  -[HKLengthUnit dimension]


HKVolumeUnit : HKBaseUnit
  // instance methods
  -[HKVolumeUnit dimension]


HKPressureUnit : HKBaseUnit
  // instance methods
  -[HKPressureUnit dimension]


HKDecibelAWeightedSoundPressureLevelUnit : HKBaseUnit
  // instance methods
  -[HKDecibelAWeightedSoundPressureLevelUnit dimension]


HKTimeUnit : HKBaseUnit
  // instance methods
  -[HKTimeUnit dimension]


HKEnergyUnit : HKBaseUnit
  // instance methods
  -[HKEnergyUnit dimension]


HKTemperatureUnit : HKBaseUnit
  // instance methods
  -[HKTemperatureUnit dimension]


HKConductanceUnit : HKBaseUnit
  // instance methods
  -[HKConductanceUnit dimension]


HKFrequencyUnit : HKBaseUnit
  // instance methods
  -[HKFrequencyUnit dimension]


HKScalarUnit : HKBaseUnit
  // instance methods
  -[HKScalarUnit dimension]


HKNonConvertibleIUUnit : HKBaseUnit
  // instance methods
  -[HKNonConvertibleIUUnit dimension]


HKPotentiallyNonConvertibleMassUnit : HKBaseUnit
  // instance methods
  -[HKPotentiallyNonConvertibleMassUnit _unitByPrefixing:withConversionConstant:]


HKEquivalentsUnit : HKPotentiallyNonConvertibleMassUnit
  // instance methods
  -[HKEquivalentsUnit dimension]


HKMoleUnit : HKPotentiallyNonConvertibleMassUnit
  // instance methods
  -[HKMoleUnit dimension]


HKTiterUnit : HKBaseUnit
  // instance methods
  -[HKTiterUnit dimension]


HKDecibelHearingLevelUnit : HKBaseUnit
  // instance methods
  -[HKDecibelHearingLevelUnit dimension]


HKHeartRhythmAvailability : NSObject /usr/lib/libc++.1.dylib
 @property  HKHealthStore *healthStore
 @property  HKKeyValueDomain *keyValueDomain
 @property  NSUserDefaults *heartRhythmUserDefaults
 @property  HKObserverSet *heartRhythmAvailabilityObservers
 @property  HKActiveWatchFeatureAvailabilityDataSource *availabilityDataSource
 @property  NSMutableSet *onboardingKeysReadSet
 @property  int onboardingStateDidChangeNotificationToken
 @property  int featureAvailabilityConditionsDidUpdateNotificationToken
 @property  int userCharacteristicsDidChangeNotificationToken
 @property  HKMobileCountryCodeManager *mobileCountryCodeManager
 @property  HKWatchAppAvailability *ecgAppAvailability
 @property  BOOL electrocardiogramOnboardingCompleted
 @property  BOOL electrocardiogramFirstRecordingCompleted
 @property  BOOL electrocardiogramRecordingDisabled
 @property  NSDate *electrocardiogramFirstOnboardingCompletedDate
 @property  BOOL atrialFibrillationDetectionOnboardingCompleted
 @property  BOOL atrialFibrillationDetectionDisabled

  // class methods
  +[HKHeartRhythmAvailability pairedDevices]
  +[HKHeartRhythmAvailability electrocardiogramAppBundleID]
  +[HKHeartRhythmAvailability activePairedDevice]
  +[HKHeartRhythmAvailability currentDeviceRegionCode]
  +[HKHeartRhythmAvailability featureAvailabilityUserDefaults]
  +[HKHeartRhythmAvailability _electrocardiogramSupportedStateForDeviceRegion:]
  +[HKHeartRhythmAvailability electrocardiogramSupportedForDevice:]
  +[HKHeartRhythmAvailability isElectrocardiogramSupportedOnWatch:]
  +[HKHeartRhythmAvailability electrocardiogramSupportedStateForWatch:]
  +[HKHeartRhythmAvailability _isDeviceRunningSeed:]
  +[HKHeartRhythmAvailability isDeviceSeries4:]
  +[HKHeartRhythmAvailability _isRunningSeed]
  +[HKHeartRhythmAvailability _isElectrocardiogramSupportedOnPhone:]
  +[HKHeartRhythmAvailability _isElectrocardiogramSupportedOnPhone:geolocatedCountryCode:]
  +[HKHeartRhythmAvailability _isElectrocardiogramSupportedOniOSDevice:geolocatedCountryCode:]
  +[HKHeartRhythmAvailability _isElectrocardiogramDisabledWithDataSource:]
  +[HKHeartRhythmAvailability atrialFibrillationDetectionSupportedStateForWatch:]
  +[HKHeartRhythmAvailability isAtrialFibrillationDetectionStateSupportedOrNeedsGeolocationOnWatch:]
  +[HKHeartRhythmAvailability atrialFibrillationDetectionSupportedForDevice:]
  +[HKHeartRhythmAvailability _atrialFibrillationDetectionSupportedStateForDeviceRegion:]
  +[HKHeartRhythmAvailability isDeviceSeries3OrOlder:]
  +[HKHeartRhythmAvailability _isAtrialFibrillationDetectionDisabledWithDataSource:]
  +[HKHeartRhythmAvailability _isAtrialFibrillationDetectionSupportedOnPhone:]
  +[HKHeartRhythmAvailability isHeartRateEnabledInPrivacy]
  +[HKHeartRhythmAvailability shouldInstallWatchApp]
  +[HKHeartRhythmAvailability isElectrocardiogramSupportedOnAnyWatch]
  +[HKHeartRhythmAvailability isElectrocardiogramSupportedOnActiveWatch]
  +[HKHeartRhythmAvailability isElectrocardiogramSupportedOnAllWatches]
  +[HKHeartRhythmAvailability electrocardiogramSupportedStateForActiveWatch]
  +[HKHeartRhythmAvailability isElectrocardiogramAppDeletableForActiveWatch]
  +[HKHeartRhythmAvailability electrocardiogramSupportedState]
  +[HKHeartRhythmAvailability isElectrocardiogramSupportedOnPairedPhone]
  +[HKHeartRhythmAvailability isElectrocardiogramSupportedOnPairedPhoneWithGeolocatedCountryCode:]
  +[HKHeartRhythmAvailability installElectrocardiogramAppOnActiveWatch:]
  +[HKHeartRhythmAvailability currentElectrocardiogramOnboardingVersion]
  +[HKHeartRhythmAvailability isAtrialFibrillationDetectionSettingEnabled]
  +[HKHeartRhythmAvailability isAtrialFibrillationDetectionStateSupportedOrNeedsGeolocationOnAnyWatch]
  +[HKHeartRhythmAvailability isAtrialFibrillationDetectionStateSupportedOrNeedsGeolocationOnActiveWatch]
  +[HKHeartRhythmAvailability isAtrialFibrillationDetectionStateSupportedOrNeedsGeolocationOnAllWatches]
  +[HKHeartRhythmAvailability atrialFibrillationDetectionSupportedStateForActiveWatch]
  +[HKHeartRhythmAvailability atrialFibrillationDetectionSupportedState]
  +[HKHeartRhythmAvailability isAtrialFibrillationDetectionSupportedOnPairedPhone]
  +[HKHeartRhythmAvailability isAtrialFibrillationDetectionDisabledForOnboardingCountryCode:]
  +[HKHeartRhythmAvailability currentAtrialFibrillationDetectionOnboardingVersion]

  // instance methods
  -[HKHeartRhythmAvailability dealloc]
  -[HKHeartRhythmAvailability .cxx_destruct]
  -[HKHeartRhythmAvailability _registerForNotifications]
  -[HKHeartRhythmAvailability _unregisterForNotifications]
  -[HKHeartRhythmAvailability healthStore]
  -[HKHeartRhythmAvailability setHealthStore:]
  -[HKHeartRhythmAvailability _localeDidChange]
  -[HKHeartRhythmAvailability initWithHealthStore:]
  -[HKHeartRhythmAvailability electrocardiogramOnboardingCountryCode]
  -[HKHeartRhythmAvailability atrialFibrillationDetectionOnboardingCountryCode]
  -[HKHeartRhythmAvailability isHeartAgeGatingEnabledOnWatch:currentDate:]
  -[HKHeartRhythmAvailability _meetsMinimumAgeRequirementWithMinimumRequiredAge:currentDate:]
  -[HKHeartRhythmAvailability notifyHeartRhythmAvailabilityDidUpdate]
  -[HKHeartRhythmAvailability _featureAvailabilityConditionsDidUpdate]
  -[HKHeartRhythmAvailability _pairedOrActiveDevicesDidChange:]
  -[HKHeartRhythmAvailability _resetIsElectrocardiogramDisabledCacheWithLock:]
  -[HKHeartRhythmAvailability _resetIsAtrialFibrillationDetectionDisabledCacheWithLock:]
  -[HKHeartRhythmAvailability _isOnboardingCompletedForKey:version:useCache:]
  -[HKHeartRhythmAvailability heartRhythmUserDefaults]
  -[HKHeartRhythmAvailability onboardingKeysReadSet]
  -[HKHeartRhythmAvailability keyValueDomain]
  -[HKHeartRhythmAvailability _isOnboardingCompletedForKey:version:]
  -[HKHeartRhythmAvailability _setOnboardingVersionCompleted:forKey:additionalValues:completion:]
  -[HKHeartRhythmAvailability _setFirstOnboardingCompletedDate:forKey:completion:]
  -[HKHeartRhythmAvailability _setElectrocardiogramOnboardingCompletedForVersion:inCountryCode:]
  -[HKHeartRhythmAvailability _triggerFeatureAvailabilityUpdateOnPhoneAndWatchWithDelay:]
  -[HKHeartRhythmAvailability shouldAdvertiseElectrocardiogramForWatch:]
  -[HKHeartRhythmAvailability _meetsMinimumAgeRequirementForElectrocardiogramWithCurrentDate:]
  -[HKHeartRhythmAvailability mobileCountryCodeManager]
  -[HKHeartRhythmAvailability availabilityDataSource]
  -[HKHeartRhythmAvailability isElectrocardiogramOnboardingAvailableInCurrentLocationForWatch:completion:]
  -[HKHeartRhythmAvailability ecgAppAvailability]
  -[HKHeartRhythmAvailability _electrocardiogramFirstOnboardingCompletedDate]
  -[HKHeartRhythmAvailability _setAtrialFibrillationDetectionOnboardingCompletedForVersion:inCountryCode:]
  -[HKHeartRhythmAvailability isAtrialFibrillationDetectionOnboardingAvailableInCurrentLocationForWatch:completion:]
  -[HKHeartRhythmAvailability shouldAdvertiseAtrialFibrillationDetectionForWatch:]
  -[HKHeartRhythmAvailability _meetsMinimumAgeRequirementForAtrialFibrillationDetectionWithCurrentDate:]
  -[HKHeartRhythmAvailability addHeartRhythmAvailabilityObserver:]
  -[HKHeartRhythmAvailability removeHeartRhythmAvailabilityObserver:]
  -[HKHeartRhythmAvailability isHeartAgeGatingEnabledOnActiveWatchWithCurrentDate:]
  -[HKHeartRhythmAvailability isElectrocardiogramOnboardingCompleted]
  -[HKHeartRhythmAvailability isElectrocardiogramOnboardingCompletedNoCache]
  -[HKHeartRhythmAvailability setElectrocardiogramOnboardingCompleted]
  -[HKHeartRhythmAvailability setElectrocardiogramFirstOnboardingCompletedDate:]
  -[HKHeartRhythmAvailability setElectrocardiogramOnboardingCompletedForCountryCode:]
  -[HKHeartRhythmAvailability isElectrocardiogramFirstRecordingCompleted]
  -[HKHeartRhythmAvailability setElectrocardiogramFirstRecordingCompleted:]
  -[HKHeartRhythmAvailability resetElectrocardiogramOnboarding]
  -[HKHeartRhythmAvailability shouldAdvertiseElectrocardiogramForActiveWatch]
  -[HKHeartRhythmAvailability isElectrocardiogramOnboardingAvailableInCurrentLocation:]
  -[HKHeartRhythmAvailability isElectrocardiogramOnboardingAvailableInCurrentLocationForActiveWatch:]
  -[HKHeartRhythmAvailability electrocardiogramAppInstallStateOnActiveWatch:]
  -[HKHeartRhythmAvailability isElectrocardiogramRecordingDisabled]
  -[HKHeartRhythmAvailability electrocardiogramFirstOnboardingCompletedDate]
  -[HKHeartRhythmAvailability isAtrialFibrillationDetectionOnboardingCompleted]
  -[HKHeartRhythmAvailability setAtrialFibrillationDetectionOnboardingCompletedForCountryCode:]
  -[HKHeartRhythmAvailability isAtrialFibrillationDetectionOnboardingAvailableInCurrentLocation:]
  -[HKHeartRhythmAvailability isAtrialFibrillationDetectionOnboardingAvailableInCurrentLocationForActiveWatch:]
  -[HKHeartRhythmAvailability shouldAdvertiseAtrialFibrillationDetectionForActiveWatch]
  -[HKHeartRhythmAvailability isAtrialFibrillationDetectionDisabled]
  -[HKHeartRhythmAvailability resetAtrialFibrillationDetectionOnboarding]
  -[HKHeartRhythmAvailability setKeyValueDomain:]
  -[HKHeartRhythmAvailability setHeartRhythmUserDefaults:]
  -[HKHeartRhythmAvailability heartRhythmAvailabilityObservers]
  -[HKHeartRhythmAvailability setHeartRhythmAvailabilityObservers:]
  -[HKHeartRhythmAvailability setAvailabilityDataSource:]
  -[HKHeartRhythmAvailability setOnboardingKeysReadSet:]
  -[HKHeartRhythmAvailability onboardingStateDidChangeNotificationToken]
  -[HKHeartRhythmAvailability setOnboardingStateDidChangeNotificationToken:]
  -[HKHeartRhythmAvailability featureAvailabilityConditionsDidUpdateNotificationToken]
  -[HKHeartRhythmAvailability setFeatureAvailabilityConditionsDidUpdateNotificationToken:]
  -[HKHeartRhythmAvailability userCharacteristicsDidChangeNotificationToken]
  -[HKHeartRhythmAvailability setUserCharacteristicsDidChangeNotificationToken:]
  -[HKHeartRhythmAvailability setMobileCountryCodeManager:]
  -[HKHeartRhythmAvailability setEcgAppAvailability:]


HKFeatureAvailabilityWatchBuildTypeEqualsRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  NSString *buildType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityWatchBuildTypeEqualsRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityWatchBuildTypeEqualsRule .cxx_destruct]
  -[HKFeatureAvailabilityWatchBuildTypeEqualsRule evaluate]
  -[HKFeatureAvailabilityWatchBuildTypeEqualsRule processUserInfo:]
  -[HKFeatureAvailabilityWatchBuildTypeEqualsRule setBuildType:]
  -[HKFeatureAvailabilityWatchBuildTypeEqualsRule buildType]


HKPPTPluginManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HKPPTPluginManager sharedPluginManager]

  // instance methods
  -[HKPPTPluginManager init]
  -[HKPPTPluginManager .cxx_destruct]
  -[HKPPTPluginManager _loadPPTBundles]
  -[HKPPTPluginManager registerDriverClass:]
  -[HKPPTPluginManager builtinTests]
  -[HKPPTPluginManager classForTestType:]


HKPPT : NSObject /usr/lib/libc++.1.dylib <HKPPTController>
  // instance methods
  -[HKPPT init]
  -[HKPPT dealloc]
  -[HKPPT .cxx_destruct]
  -[HKPPT startedTest:]
  -[HKPPT finishedTest:extraResults:]
  -[HKPPT runTest:options:]
  -[HKPPT builtinTests]
  -[HKPPT failedTest:results:error:]
  -[HKPPT _testNameForDriver:]
  -[HKPPT _startedTest:]
  -[HKPPT _failedTest:withResults:]
  -[HKPPT _failedTest:]
  -[HKPPT _finishedTest:extraResults:]
  -[HKPPT _finishedTest:]
  -[HKPPT invalidConfigurationForTest:error:]
  -[HKPPT initWithHKPPTInterface:usingQueue:]


HKProfileIdentifier : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSUUID *identifier
 @property  long long type

  // class methods
  +[HKProfileIdentifier supportsSecureCoding]
  +[HKProfileIdentifier primaryProfile]
  +[HKProfileIdentifier isValidSecondaryProfileType:]
  +[HKProfileIdentifier _profileWithUUID:type:]

  // instance methods
  -[HKProfileIdentifier init]
  -[HKProfileIdentifier isEqual:]
  -[HKProfileIdentifier copyWithZone:]
  -[HKProfileIdentifier type]
  -[HKProfileIdentifier encodeWithCoder:]
  -[HKProfileIdentifier initWithCoder:]
  -[HKProfileIdentifier .cxx_destruct]
  -[HKProfileIdentifier _init]
  -[HKProfileIdentifier identifier]


HKHealthWrapCodablePayloadHeader : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasChannel
 @property  NSString *channel
 @property  BOOL hasPayloadType
 @property  NSString *payloadType
 @property  BOOL hasSubjectUUID
 @property  NSData *subjectUUID
 @property  BOOL hasStartDate
 @property  long long startDate
 @property  BOOL hasEndDate
 @property  long long endDate
 @property  BOOL hasPayloadIdentifier
 @property  NSString *payloadIdentifier
 @property  BOOL hasApplicationData
 @property  NSData *applicationData
 @property  NSMutableArray *keyValuePairs

  // class methods
  +[HKHealthWrapCodablePayloadHeader keyValuePairsType]

  // instance methods
  -[HKHealthWrapCodablePayloadHeader isEqual:]
  -[HKHealthWrapCodablePayloadHeader copyWithZone:]
  -[HKHealthWrapCodablePayloadHeader .cxx_destruct]
  -[HKHealthWrapCodablePayloadHeader startDate]
  -[HKHealthWrapCodablePayloadHeader endDate]
  -[HKHealthWrapCodablePayloadHeader dictionaryRepresentation]
  -[HKHealthWrapCodablePayloadHeader writeTo:]
  -[HKHealthWrapCodablePayloadHeader setStartDate:]
  -[HKHealthWrapCodablePayloadHeader setEndDate:]
  -[HKHealthWrapCodablePayloadHeader mergeFrom:]
  -[HKHealthWrapCodablePayloadHeader readFrom:]
  -[HKHealthWrapCodablePayloadHeader copyTo:]
  -[HKHealthWrapCodablePayloadHeader channel]
  -[HKHealthWrapCodablePayloadHeader setChannel:]
  -[HKHealthWrapCodablePayloadHeader hasChannel]
  -[HKHealthWrapCodablePayloadHeader setHasStartDate:]
  -[HKHealthWrapCodablePayloadHeader hasStartDate]
  -[HKHealthWrapCodablePayloadHeader setHasEndDate:]
  -[HKHealthWrapCodablePayloadHeader hasEndDate]
  -[HKHealthWrapCodablePayloadHeader applicationData]
  -[HKHealthWrapCodablePayloadHeader setApplicationData:]
  -[HKHealthWrapCodablePayloadHeader setPayloadType:]
  -[HKHealthWrapCodablePayloadHeader payloadType]
  -[HKHealthWrapCodablePayloadHeader hasApplicationData]
  -[HKHealthWrapCodablePayloadHeader subjectUUID]
  -[HKHealthWrapCodablePayloadHeader payloadIdentifier]
  -[HKHealthWrapCodablePayloadHeader setPayloadIdentifier:]
  -[HKHealthWrapCodablePayloadHeader keyValuePairs]
  -[HKHealthWrapCodablePayloadHeader setKeyValuePairs:]
  -[HKHealthWrapCodablePayloadHeader setSubjectUUID:]
  -[HKHealthWrapCodablePayloadHeader addKeyValuePairs:]
  -[HKHealthWrapCodablePayloadHeader keyValuePairsCount]
  -[HKHealthWrapCodablePayloadHeader clearKeyValuePairs]
  -[HKHealthWrapCodablePayloadHeader keyValuePairsAtIndex:]
  -[HKHealthWrapCodablePayloadHeader hasPayloadType]
  -[HKHealthWrapCodablePayloadHeader hasSubjectUUID]
  -[HKHealthWrapCodablePayloadHeader hasPayloadIdentifier]


_HKActivityStatisticsStandHourInfo : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  double timeStamp
 @property  long long state

  // class methods
  +[_HKActivityStatisticsStandHourInfo supportsSecureCoding]

  // instance methods
  -[_HKActivityStatisticsStandHourInfo isEqual:]
  -[_HKActivityStatisticsStandHourInfo encodeWithCoder:]
  -[_HKActivityStatisticsStandHourInfo initWithCoder:]
  -[_HKActivityStatisticsStandHourInfo state]
  -[_HKActivityStatisticsStandHourInfo setState:]
  -[_HKActivityStatisticsStandHourInfo timeStamp]
  -[_HKActivityStatisticsStandHourInfo setTimeStamp:]
  -[_HKActivityStatisticsStandHourInfo initWithTimeStamp:state:]


_HKActivityStatisticsQuantityInfo : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  HKQuantity *quantityValue

  // class methods
  +[_HKActivityStatisticsQuantityInfo supportsSecureCoding]

  // instance methods
  -[_HKActivityStatisticsQuantityInfo isEqual:]
  -[_HKActivityStatisticsQuantityInfo encodeWithCoder:]
  -[_HKActivityStatisticsQuantityInfo initWithCoder:]
  -[_HKActivityStatisticsQuantityInfo .cxx_destruct]
  -[_HKActivityStatisticsQuantityInfo startDate]
  -[_HKActivityStatisticsQuantityInfo endDate]
  -[_HKActivityStatisticsQuantityInfo initWithStartDate:endDate:]
  -[_HKActivityStatisticsQuantityInfo setStartDate:]
  -[_HKActivityStatisticsQuantityInfo setEndDate:]
  -[_HKActivityStatisticsQuantityInfo quantityValue]
  -[_HKActivityStatisticsQuantityInfo setQuantityValue:]


_HKActivityStatisticsWorkoutInfo : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  HKSource *source

  // class methods
  +[_HKActivityStatisticsWorkoutInfo supportsSecureCoding]

  // instance methods
  -[_HKActivityStatisticsWorkoutInfo isEqual:]
  -[_HKActivityStatisticsWorkoutInfo encodeWithCoder:]
  -[_HKActivityStatisticsWorkoutInfo initWithCoder:]
  -[_HKActivityStatisticsWorkoutInfo setSource:]
  -[_HKActivityStatisticsWorkoutInfo .cxx_destruct]
  -[_HKActivityStatisticsWorkoutInfo source]
  -[_HKActivityStatisticsWorkoutInfo startDate]
  -[_HKActivityStatisticsWorkoutInfo endDate]
  -[_HKActivityStatisticsWorkoutInfo setStartDate:]
  -[_HKActivityStatisticsWorkoutInfo setEndDate:]
  -[_HKActivityStatisticsWorkoutInfo initWithStartDate:endDate:source:]


HKHeartbeatSeriesSample : HKSeriesSample <_HKBinarySample>
 @property  NSNumber *_minimumBeatsPerMinute
 @property  NSNumber *_maximumBeatsPerMinute
 @property  long long numberOfDataPoints
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKHeartbeatSeriesSample supportsSecureCoding]
  +[HKHeartbeatSeriesSample _heartbeatSeriesSampleWithData:startDate:endDate:device:metadata:]
  +[HKHeartbeatSeriesSample _heartbeatSeriesSampleFromCSV:startDate:metadata:error:]
  +[HKHeartbeatSeriesSample heartbeatSequenceSampleWithData:startDate:endDate:metadata:]
  +[HKHeartbeatSeriesSample heartBeatSequenceSampleFromCSV:startDate:metadata:error:]

  // instance methods
  -[HKHeartbeatSeriesSample init]
  -[HKHeartbeatSeriesSample count]
  -[HKHeartbeatSeriesSample encodeWithCoder:]
  -[HKHeartbeatSeriesSample initWithCoder:]
  -[HKHeartbeatSeriesSample .cxx_destruct]
  -[HKHeartbeatSeriesSample payload]
  -[HKHeartbeatSeriesSample numberOfDataPoints]
  -[HKHeartbeatSeriesSample _validateConfigurationWithOptions:]
  -[HKHeartbeatSeriesSample _shouldNotifyOnInsert]
  -[HKHeartbeatSeriesSample _enumerateHeartbeatDataWithBlock:]
  -[HKHeartbeatSeriesSample _setPayload:]
  -[HKHeartbeatSeriesSample _computeMinimumAndMaximumBeatsPerMinute]
  -[HKHeartbeatSeriesSample enumerateHeartbeatDataWithBlock:]
  -[HKHeartbeatSeriesSample _minimumBeatsPerMinute]
  -[HKHeartbeatSeriesSample _maximumBeatsPerMinute]


HKAllergyReaction : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying, HKCodedObject>
 @property  NSArray *manifestations
 @property  NSArray *manifestionCodings
 @property  HKMedicalDate *onsetDate
 @property  HKConcept *severity
 @property  HKMedicalCoding *severityCoding
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKAllergyReaction supportsSecureCoding]
  +[HKAllergyReaction indexableKeyPathsWithPrefix:]
  +[HKAllergyReaction allergyReactionWithManifestationCodings:onsetDate:severityCoding:]
  +[HKAllergyReaction manifestationCodingsPreferredSystems]
  +[HKAllergyReaction severityCodingPreferredSystems]

  // instance methods
  -[HKAllergyReaction init]
  -[HKAllergyReaction isEqual:]
  -[HKAllergyReaction copyWithZone:]
  -[HKAllergyReaction encodeWithCoder:]
  -[HKAllergyReaction initWithCoder:]
  -[HKAllergyReaction .cxx_destruct]
  -[HKAllergyReaction codingsForKeyPath:error:]
  -[HKAllergyReaction applyConcepts:forKeyPath:error:]
  -[HKAllergyReaction initWithManifestationCodings:onsetDate:severityCoding:]
  -[HKAllergyReaction manifestionCodings]
  -[HKAllergyReaction manifestations]
  -[HKAllergyReaction severityCoding]
  -[HKAllergyReaction severity]
  -[HKAllergyReaction onsetDate]


HKInspectableValueCollection : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSArray *collection
 @property  NSArray *elementTags
 @property  long long collectionType
 @property  HKInspectableValue *inspectableValue
 @property  HKInspectableValue *min
 @property  HKInspectableValue *max
 @property  NSArray *inspectableValues
 @property  NSString *unitString

  // class methods
  +[HKInspectableValueCollection supportsSecureCoding]
  +[HKInspectableValueCollection inspectableValueCollectionRangeWithMin:max:]
  +[HKInspectableValueCollection inspectableValueCollectionRangeWithMin:]
  +[HKInspectableValueCollection inspectableValueCollectionRangeWithMax:]
  +[HKInspectableValueCollection inspectableValueCollectionSingleWithValue:]
  +[HKInspectableValueCollection inspectableValueCollectionListWithValues:]
  +[HKInspectableValueCollection inspectableValueCollectionTaggedListWithValues:tags:]
  +[HKInspectableValueCollection hasNoValue:]

  // instance methods
  -[HKInspectableValueCollection init]
  -[HKInspectableValueCollection isEqual:]
  -[HKInspectableValueCollection copyWithZone:]
  -[HKInspectableValueCollection encodeWithCoder:]
  -[HKInspectableValueCollection initWithCoder:]
  -[HKInspectableValueCollection .cxx_destruct]
  -[HKInspectableValueCollection collection]
  -[HKInspectableValueCollection max]
  -[HKInspectableValueCollection min]
  -[HKInspectableValueCollection collectionType]
  -[HKInspectableValueCollection unitString]
  -[HKInspectableValueCollection _initWithCollectionType:collection:]
  -[HKInspectableValueCollection _initWithCollectionType:collection:tags:]
  -[HKInspectableValueCollection inspectableValue]
  -[HKInspectableValueCollection _assertCollectionType]
  -[HKInspectableValueCollection inspectableValues]
  -[HKInspectableValueCollection valuesWithTag:]
  -[HKInspectableValueCollection elementTags]


_HKExpiringCompletionTimer : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL expired
 @property  NSDate *startDate
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[_HKExpiringCompletionTimer dealloc]
  -[_HKExpiringCompletionTimer invalidate]
  -[_HKExpiringCompletionTimer queue]
  -[_HKExpiringCompletionTimer .cxx_destruct]
  -[_HKExpiringCompletionTimer startDate]
  -[_HKExpiringCompletionTimer _start]
  -[_HKExpiringCompletionTimer isExpired]
  -[_HKExpiringCompletionTimer _cancelTimer]
  -[_HKExpiringCompletionTimer initWithCompletion:]
  -[_HKExpiringCompletionTimer restart]
  -[_HKExpiringCompletionTimer initWithQueue:completion:]
  -[_HKExpiringCompletionTimer _invalidateAndInvokeCompletion:error:]
  -[_HKExpiringCompletionTimer startWithTimeoutInterval:handler:]
  -[_HKExpiringCompletionTimer invalidateAndInvokeCompletionWithError:]


HKSortedQueryAnchor : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSNumber *objectID
 @property  NSArray *sortConstraints

  // class methods
  +[HKSortedQueryAnchor supportsSecureCoding]
  +[HKSortedQueryAnchor sortConstraintsWithSortDescriptors:sample:]
  +[HKSortedQueryAnchor sortedQueryAnchorWithSortDescriptors:]
  +[HKSortedQueryAnchor sortedQueryAnchorWithSortDescriptors:includingSample:objectID:]
  +[HKSortedQueryAnchor sortedQueryAnchorWithSortDescriptors:followingSample:objectID:]
  +[HKSortedQueryAnchor sortedQueryAnchorRelaxingConstraintsWithAnchor:error:]

  // instance methods
  -[HKSortedQueryAnchor init]
  -[HKSortedQueryAnchor isEqual:]
  -[HKSortedQueryAnchor copyWithZone:]
  -[HKSortedQueryAnchor encodeWithCoder:]
  -[HKSortedQueryAnchor initWithCoder:]
  -[HKSortedQueryAnchor .cxx_destruct]
  -[HKSortedQueryAnchor predicate]
  -[HKSortedQueryAnchor objectID]
  -[HKSortedQueryAnchor canRelax]
  -[HKSortedQueryAnchor initWithSortConstraints:objectID:]
  -[HKSortedQueryAnchor sortConstraints]
  -[HKSortedQueryAnchor querySortDescriptors]
  -[HKSortedQueryAnchor isCompatibleWithSortDescriptors:]


HKCodableCondensedWorkout : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasPersistentID
 @property  long long persistentID
 @property  BOOL hasUuid
 @property  NSData *uuid
 @property  BOOL hasCreationDate
 @property  double creationDate
 @property  BOOL hasStartDate
 @property  double startDate
 @property  BOOL hasEndDate
 @property  double endDate
 @property  BOOL hasType
 @property  long long type
 @property  BOOL hasDuration
 @property  double duration
 @property  BOOL hasCondenserVersion
 @property  long long condenserVersion
 @property  BOOL hasCondenserDate
 @property  double condenserDate

  // instance methods
  -[HKCodableCondensedWorkout isEqual:]
  -[HKCodableCondensedWorkout copyWithZone:]
  -[HKCodableCondensedWorkout type]
  -[HKCodableCondensedWorkout setType:]
  -[HKCodableCondensedWorkout .cxx_destruct]
  -[HKCodableCondensedWorkout startDate]
  -[HKCodableCondensedWorkout endDate]
  -[HKCodableCondensedWorkout dictionaryRepresentation]
  -[HKCodableCondensedWorkout uuid]
  -[HKCodableCondensedWorkout duration]
  -[HKCodableCondensedWorkout setUuid:]
  -[HKCodableCondensedWorkout creationDate]
  -[HKCodableCondensedWorkout writeTo:]
  -[HKCodableCondensedWorkout setStartDate:]
  -[HKCodableCondensedWorkout setEndDate:]
  -[HKCodableCondensedWorkout mergeFrom:]
  -[HKCodableCondensedWorkout readFrom:]
  -[HKCodableCondensedWorkout copyTo:]
  -[HKCodableCondensedWorkout setCreationDate:]
  -[HKCodableCondensedWorkout setHasCreationDate:]
  -[HKCodableCondensedWorkout hasCreationDate]
  -[HKCodableCondensedWorkout persistentID]
  -[HKCodableCondensedWorkout setPersistentID:]
  -[HKCodableCondensedWorkout setDuration:]
  -[HKCodableCondensedWorkout setHasType:]
  -[HKCodableCondensedWorkout hasType]
  -[HKCodableCondensedWorkout hasDuration]
  -[HKCodableCondensedWorkout setHasDuration:]
  -[HKCodableCondensedWorkout setHasStartDate:]
  -[HKCodableCondensedWorkout hasStartDate]
  -[HKCodableCondensedWorkout setHasEndDate:]
  -[HKCodableCondensedWorkout hasEndDate]
  -[HKCodableCondensedWorkout hasUuid]
  -[HKCodableCondensedWorkout hasPersistentID]
  -[HKCodableCondensedWorkout setHasPersistentID:]
  -[HKCodableCondensedWorkout hasCondenserVersion]
  -[HKCodableCondensedWorkout condenserVersion]
  -[HKCodableCondensedWorkout hasCondenserDate]
  -[HKCodableCondensedWorkout condenserDate]
  -[HKCodableCondensedWorkout setCondenserVersion:]
  -[HKCodableCondensedWorkout setHasCondenserVersion:]
  -[HKCodableCondensedWorkout setCondenserDate:]
  -[HKCodableCondensedWorkout setHasCondenserDate:]


HKHealthWrapCodableKeyValue : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasKey
 @property  NSString *key
 @property  BOOL hasValue
 @property  HKHealthWrapCodableValue *value

  // instance methods
  -[HKHealthWrapCodableKeyValue isEqual:]
  -[HKHealthWrapCodableKeyValue copyWithZone:]
  -[HKHealthWrapCodableKeyValue key]
  -[HKHealthWrapCodableKeyValue .cxx_destruct]
  -[HKHealthWrapCodableKeyValue value]
  -[HKHealthWrapCodableKeyValue setValue:]
  -[HKHealthWrapCodableKeyValue dictionaryRepresentation]
  -[HKHealthWrapCodableKeyValue setKey:]
  -[HKHealthWrapCodableKeyValue writeTo:]
  -[HKHealthWrapCodableKeyValue mergeFrom:]
  -[HKHealthWrapCodableKeyValue readFrom:]
  -[HKHealthWrapCodableKeyValue copyTo:]
  -[HKHealthWrapCodableKeyValue hasKey]
  -[HKHealthWrapCodableKeyValue hasValue]


HKHealthWrapEncryptor : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[HKHealthWrapEncryptor dealloc]
  -[HKHealthWrapEncryptor .cxx_destruct]
  -[HKHealthWrapEncryptor startWithError:]
  -[HKHealthWrapEncryptor initWithOutputStream:certificate:algorithm:options:keySize:uuid:studyUUID:compressionEnabled:]
  -[HKHealthWrapEncryptor appendData:error:]
  -[HKHealthWrapEncryptor finalizeWithError:]
  -[HKHealthWrapEncryptor _copyAndVerifyPublicKeyFromCertificate:error:]
  -[HKHealthWrapEncryptor _encryptData:withCertificate:error:]
  -[HKHealthWrapEncryptor _updateHeaderWithKey:iv:hmacKey:error:]
  -[HKHealthWrapEncryptor _startCryptorWithError:]
  -[HKHealthWrapEncryptor _writeStream:length:hash:error:]
  -[HKHealthWrapEncryptor _appendEncryptedBytes:length:error:]
  -[HKHealthWrapEncryptor _updateCryptorWithData:error:]
  -[HKHealthWrapEncryptor _finalizeCryptorWithError:]


HKClinicalType : HKSampleType
  // class methods
  +[HKClinicalType allTypes]
  +[HKClinicalType allergyRecordType]
  +[HKClinicalType procedureRecordType]
  +[HKClinicalType conditionRecordType]
  +[HKClinicalType medicationRecordType]
  +[HKClinicalType immunizationRecordType]
  +[HKClinicalType labResultRecordType]
  +[HKClinicalType vitalSignRecordType]

  // instance methods
  -[HKClinicalType _isClinicalType]


HKGPXExporter : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *URL
 @property  BOOL isFinished

  // class methods
  +[HKGPXExporter _displayNameForRoute:]
  +[HKGPXExporter fileNameForRoute:]

  // instance methods
  -[HKGPXExporter .cxx_destruct]
  -[HKGPXExporter isFinished]
  -[HKGPXExporter URL]
  -[HKGPXExporter finishWithError:]
  -[HKGPXExporter _appendGPXHeaderWithError:]
  -[HKGPXExporter _trackpointEntryForLocation:]
  -[HKGPXExporter _appendString:error:]
  -[HKGPXExporter initWithURL:route:]
  -[HKGPXExporter appendLocations:error:]


HKStatisticsCollectionQuery : HKQuery <HKStatisticsCollectionQueryClientInterface>
 @property  NSNumber *lastAnchor
 @property  HKStatisticsCollection *statisticsCollection
 @property  unsigned long mergeStrategy
 @property  NSDate *anchorDate
 @property  unsigned long options
 @property  NSDateComponents *intervalComponents
 @property  @? initialResultsHandler
 @property  @? statisticsUpdateHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKStatisticsCollectionQuery configurationClass]
  +[HKStatisticsCollectionQuery clientInterfaceProtocol]
  +[HKStatisticsCollectionQuery configureClientInterface:]

  // instance methods
  -[HKStatisticsCollectionQuery options]
  -[HKStatisticsCollectionQuery .cxx_destruct]
  -[HKStatisticsCollectionQuery queue_validate]
  -[HKStatisticsCollectionQuery queue_deliverError:]
  -[HKStatisticsCollectionQuery queue_shouldDeactivateAfterInitialResults]
  -[HKStatisticsCollectionQuery queue_queryDidDeactivate:]
  -[HKStatisticsCollectionQuery queue_populateConfiguration:]
  -[HKStatisticsCollectionQuery setMergeStrategy:]
  -[HKStatisticsCollectionQuery mergeStrategy]
  -[HKStatisticsCollectionQuery anchorDate]
  -[HKStatisticsCollectionQuery intervalComponents]
  -[HKStatisticsCollectionQuery initWithSampleType:samplePredicate:options:anchorDate:intervalComponents:]
  -[HKStatisticsCollectionQuery client_deliverStatisticsBatch:resetStatistics:isFinal:anchor:query:]
  -[HKStatisticsCollectionQuery client_deliverUpdatedStatistics:anchor:query:]
  -[HKStatisticsCollectionQuery _queue_deliverInitialStatisticsObjects:anchor:queryUUID:]
  -[HKStatisticsCollectionQuery _queue_deliverResetStatisticsObjects:forQuery:]
  -[HKStatisticsCollectionQuery _queue_deliverStatisticsObjects:forQuery:]
  -[HKStatisticsCollectionQuery setLastAnchor:]
  -[HKStatisticsCollectionQuery statisticsCollection]
  -[HKStatisticsCollectionQuery setStatisticsCollection:]
  -[HKStatisticsCollectionQuery initWithQuantityType:quantitySamplePredicate:options:anchorDate:intervalComponents:]
  -[HKStatisticsCollectionQuery setInitialResultsHandler:]
  -[HKStatisticsCollectionQuery setStatisticsUpdateHandler:]
  -[HKStatisticsCollectionQuery initialResultsHandler]
  -[HKStatisticsCollectionQuery statisticsUpdateHandler]
  -[HKStatisticsCollectionQuery lastAnchor]


HKStatisticsCollection : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *anchorDate
 @property  NSDateComponents *statisticsInterval

  // instance methods
  -[HKStatisticsCollection init]
  -[HKStatisticsCollection .cxx_destruct]
  -[HKStatisticsCollection statistics]
  -[HKStatisticsCollection sources]
  -[HKStatisticsCollection statisticsInterval]
  -[HKStatisticsCollection _mostRecentQuantityDateInterval]
  -[HKStatisticsCollection anchorDate]
  -[HKStatisticsCollection _resetStatistics:]
  -[HKStatisticsCollection _initWithAnchorDate:statisticsInterval:emptyStatisticsConstructor:]
  -[HKStatisticsCollection _insertStatistics:]
  -[HKStatisticsCollection _statisticsPeriodAndIndex:forDate:]
  -[HKStatisticsCollection _statisticsForIndex:]
  -[HKStatisticsCollection _enumerateStatisticsIndexesFromDate:toDate:withBlock:]
  -[HKStatisticsCollection _statisticsForLastIndex]
  -[HKStatisticsCollection _clearSourcesCache]
  -[HKStatisticsCollection _timePeriodForStatisticsAtIndex:startDate:endDate:]
  -[HKStatisticsCollection _initWithAnchorDate:statisticsInterval:]
  -[HKStatisticsCollection statisticsForDate:]
  -[HKStatisticsCollection enumerateStatisticsFromDate:toDate:withBlock:]
  -[HKStatisticsCollection _maxSumQuantityStatistics]
  -[HKStatisticsCollection _minSumQuantityStatistics]
  -[HKStatisticsCollection _mostRecentQuantityStatistics]
  -[HKStatisticsCollection _enumerateTimePeriodsFromDate:toDate:withBlock:]
  -[HKStatisticsCollection _timePeriodForDate:]


_HKStatisticsCollectionQueryServerConfiguration : HKQueryServerConfiguration
 @property  NSDate *anchorDate
 @property  unsigned long options
 @property  NSDateComponents *intervalComponents
 @property  unsigned long mergeStrategy

  // class methods
  +[_HKStatisticsCollectionQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKStatisticsCollectionQueryServerConfiguration copyWithZone:]
  -[_HKStatisticsCollectionQueryServerConfiguration options]
  -[_HKStatisticsCollectionQueryServerConfiguration encodeWithCoder:]
  -[_HKStatisticsCollectionQueryServerConfiguration initWithCoder:]
  -[_HKStatisticsCollectionQueryServerConfiguration .cxx_destruct]
  -[_HKStatisticsCollectionQueryServerConfiguration setOptions:]
  -[_HKStatisticsCollectionQueryServerConfiguration setMergeStrategy:]
  -[_HKStatisticsCollectionQueryServerConfiguration mergeStrategy]
  -[_HKStatisticsCollectionQueryServerConfiguration setAnchorDate:]
  -[_HKStatisticsCollectionQueryServerConfiguration setIntervalComponents:]
  -[_HKStatisticsCollectionQueryServerConfiguration anchorDate]
  -[_HKStatisticsCollectionQueryServerConfiguration intervalComponents]


HKFeatureAvailabilityActiveWatchElectrocardiogramVersionEqualsRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  {?=qqq} targetVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionEqualsRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionEqualsRule targetVersion]
  -[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionEqualsRule setTargetVersion:]
  -[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionEqualsRule evaluate]
  -[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionEqualsRule processUserInfo:]


_HKXMLExtractor : NSObject /usr/lib/libc++.1.dylib <NSXMLParserDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HKXMLExtractor init]
  -[_HKXMLExtractor .cxx_destruct]
  -[_HKXMLExtractor parser:foundCharacters:]
  -[_HKXMLExtractor parser:didEndElement:namespaceURI:qualifiedName:]
  -[_HKXMLExtractor parser:didStartElement:namespaceURI:qualifiedName:attributes:]
  -[_HKXMLExtractor addTagSpecificationForExtraction:]
  -[_HKXMLExtractor parseWithData:]
  -[_HKXMLExtractor getDataForTagSpecification:]
  -[_HKXMLExtractor _parseWithXMLParser:]
  -[_HKXMLExtractor _resetScanningState]
  -[_HKXMLExtractor _matchSpecificationWithAttributes:]
  -[_HKXMLExtractor parseWithStream:]


_HKXMLExtractorElement : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *specificationElement
 @property  NSDictionary *specificationAttributes

  // instance methods
  -[_HKXMLExtractorElement .cxx_destruct]
  -[_HKXMLExtractorElement initWithElementName:attributes:]
  -[_HKXMLExtractorElement specificationElement]
  -[_HKXMLExtractorElement specificationAttributes]
  -[_HKXMLExtractorElement initWithTagSpecification:]
  -[_HKXMLExtractorElement matchesElement:]


_HKXMLExtractorSpecification : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *specificationString
 @property  NSArray *specificationElements

  // instance methods
  -[_HKXMLExtractorSpecification .cxx_destruct]
  -[_HKXMLExtractorSpecification initWithSpecificationString:]
  -[_HKXMLExtractorSpecification matchesElementStack:]
  -[_HKXMLExtractorSpecification specificationString]
  -[_HKXMLExtractorSpecification specificationElements]


HKMultiTypeSampleQuery : HKQuery <HKMultiTypeSampleQueryClientInterface>
 @property  HKMultiTypeQueryCursor *queryCursor
 @property  unsigned long limit
 @property  @? resultsHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKMultiTypeSampleQuery configurationClass]
  +[HKMultiTypeSampleQuery clientInterfaceProtocol]
  +[HKMultiTypeSampleQuery configureClientInterface:]

  // instance methods
  -[HKMultiTypeSampleQuery init]
  -[HKMultiTypeSampleQuery .cxx_destruct]
  -[HKMultiTypeSampleQuery limit]
  -[HKMultiTypeSampleQuery setLimit:]
  -[HKMultiTypeSampleQuery resultsHandler]
  -[HKMultiTypeSampleQuery queue_validate]
  -[HKMultiTypeSampleQuery queue_deliverError:]
  -[HKMultiTypeSampleQuery queue_queryDidDeactivate:]
  -[HKMultiTypeSampleQuery queue_populateConfiguration:]
  -[HKMultiTypeSampleQuery initWithQueryCursor:limit:resultsHandler:]
  -[HKMultiTypeSampleQuery initWithSampleQueryDescriptions:sortDescriptors:followingAnchor:upToAndIncludingAnchor:distinctByKeyPaths:limit:resultsHandler:]
  -[HKMultiTypeSampleQuery client_deliverSampleObjects:queryCursor:deliverResults:query:]
  -[HKMultiTypeSampleQuery setQueryCursor:]
  -[HKMultiTypeSampleQuery queryCursor]


_HKMultiTypeSampleQueryServerConfiguration : HKQueryServerConfiguration
 @property  HKMultiTypeQueryCursor *queryCursor
 @property  unsigned long limit

  // class methods
  +[_HKMultiTypeSampleQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKMultiTypeSampleQueryServerConfiguration copyWithZone:]
  -[_HKMultiTypeSampleQueryServerConfiguration encodeWithCoder:]
  -[_HKMultiTypeSampleQueryServerConfiguration initWithCoder:]
  -[_HKMultiTypeSampleQueryServerConfiguration .cxx_destruct]
  -[_HKMultiTypeSampleQueryServerConfiguration limit]
  -[_HKMultiTypeSampleQueryServerConfiguration setLimit:]
  -[_HKMultiTypeSampleQueryServerConfiguration setQueryCursor:]
  -[_HKMultiTypeSampleQueryServerConfiguration queryCursor]


HKAudioExposureValue : NSObject /usr/lib/libc++.1.dylib
 @property  double value
 @property  double duration

  // instance methods
  -[HKAudioExposureValue value]
  -[HKAudioExposureValue duration]
  -[HKAudioExposureValue initWithValue:duration:]


HKAudioExposureUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HKAudioExposureUtilities localizedDisplayNameForClassification:isEmbedded:]
  +[HKAudioExposureUtilities _classificationValueWithLEQ:duration:days:]
  +[HKAudioExposureUtilities _rounded:]
  +[HKAudioExposureUtilities localizedDisplayNameForClassification:]
  +[HKAudioExposureUtilities classifyLEQ:forDuration:overDays:]
  +[HKAudioExposureUtilities computeLEQFromAudioExposureValues:]


HKVaccinationRecordType : HKMedicalType
  // class methods
  +[HKVaccinationRecordType allTypes]
  +[HKVaccinationRecordType vaccinationRecordType]


_HKWheelchairUseCharacteristicCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_HKWheelchairUseCharacteristicCache dealloc]
  -[_HKWheelchairUseCharacteristicCache .cxx_destruct]
  -[_HKWheelchairUseCharacteristicCache addObserver:]
  -[_HKWheelchairUseCharacteristicCache removeObserver:]
  -[_HKWheelchairUseCharacteristicCache initWithHealthStore:]
  -[_HKWheelchairUseCharacteristicCache _fetchWheelchairUseIfNecessary]
  -[_HKWheelchairUseCharacteristicCache _needsFetch]
  -[_HKWheelchairUseCharacteristicCache _fetchWheelchairUse]
  -[_HKWheelchairUseCharacteristicCache _handleFetchSuccess:]
  -[_HKWheelchairUseCharacteristicCache _handleFetchError:]
  -[_HKWheelchairUseCharacteristicCache isWheelchairUser]
  -[_HKWheelchairUseCharacteristicCache _alertObserversDidUpdateToWheelchairUser:]
  -[_HKWheelchairUseCharacteristicCache hasFetchedWheelchairUse]


HKFeatureAvailabilityWatchOSVersionLessThanRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  {?=qqq} targetVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityWatchOSVersionLessThanRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityWatchOSVersionLessThanRule targetVersion]
  -[HKFeatureAvailabilityWatchOSVersionLessThanRule setTargetVersion:]
  -[HKFeatureAvailabilityWatchOSVersionLessThanRule evaluate]
  -[HKFeatureAvailabilityWatchOSVersionLessThanRule processUserInfo:]


HKExtendedHealthStore : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKExtendedHealthStore init]
  -[HKExtendedHealthStore dealloc]
  -[HKExtendedHealthStore .cxx_destruct]
  -[HKExtendedHealthStore remoteObjectProxyWithErrorHandler:]
  -[HKExtendedHealthStore exportedInterface]
  -[HKExtendedHealthStore clientQueue]
  -[HKExtendedHealthStore connectionInvalidated]
  -[HKExtendedHealthStore connectionInterrupted]
  -[HKExtendedHealthStore remoteInterface]
  -[HKExtendedHealthStore daemonDidStart]
  -[HKExtendedHealthStore setCurrentActivityCacheOverrideDate:timeZone:completion:]


_HKLocationShifter : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_HKLocationShifter isShiftRequiredForLocations:]

  // instance methods
  -[_HKLocationShifter init]
  -[_HKLocationShifter .cxx_destruct]
  -[_HKLocationShifter shiftLocations:withCompletion:]


HKLiveWorkoutBuilder : HKWorkoutBuilder
 @property  NSArray *additionalDataSources
 @property  <HKLiveWorkoutBuilderDelegate> *delegate
 @property  HKWorkoutSession *workoutSession
 @property  BOOL shouldCollectWorkoutEvents
 @property  HKLiveWorkoutDataSource *dataSource
 @property  double elapsedTime

  // instance methods
  -[HKLiveWorkoutBuilder delegate]
  -[HKLiveWorkoutBuilder setDelegate:]
  -[HKLiveWorkoutBuilder .cxx_destruct]
  -[HKLiveWorkoutBuilder dataSource]
  -[HKLiveWorkoutBuilder setDataSource:]
  -[HKLiveWorkoutBuilder elapsedTime]
  -[HKLiveWorkoutBuilder _privateDelegate]
  -[HKLiveWorkoutBuilder connectionInterrupted]
  -[HKLiveWorkoutBuilder initWithHealthStore:builderConfiguration:builderIdentifier:]
  -[HKLiveWorkoutBuilder _resourceQueue_updateElapsedTimeCache]
  -[HKLiveWorkoutBuilder _resourceQueue_updateEvents:]
  -[HKLiveWorkoutBuilder clientRemote_didUpdateStatistics:]
  -[HKLiveWorkoutBuilder clientRemote_didUpdateMetadata:]
  -[HKLiveWorkoutBuilder stateMachine:didEnterState:date:error:]
  -[HKLiveWorkoutBuilder setShouldCollectWorkoutEvents:]
  -[HKLiveWorkoutBuilder shouldCollectWorkoutEvents]
  -[HKLiveWorkoutBuilder initWithHealthStore:session:builderConfiguration:builderIdentifier:]
  -[HKLiveWorkoutBuilder setAdditionalDataSources:]
  -[HKLiveWorkoutBuilder additionalDataSources]
  -[HKLiveWorkoutBuilder workoutSession]


HKClinicalAccount : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding, HKClinicalBrandable>
 @property  NSUUID *identifier
 @property  long long state
 @property  BOOL userEnabled
 @property  BOOL needsRelogin
 @property  NSDate *lastFetchDate
 @property  NSDate *lastFullFetchDate
 @property  HKClinicalGateway *gateway
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *title
 @property  NSString *subtitle
 @property  HKClinicalBrand *brand

  // class methods
  +[HKClinicalAccount supportsSecureCoding]

  // instance methods
  -[HKClinicalAccount init]
  -[HKClinicalAccount isEqual:]
  -[HKClinicalAccount copyWithZone:]
  -[HKClinicalAccount encodeWithCoder:]
  -[HKClinicalAccount initWithCoder:]
  -[HKClinicalAccount .cxx_destruct]
  -[HKClinicalAccount identifier]
  -[HKClinicalAccount state]
  -[HKClinicalAccount title]
  -[HKClinicalAccount subtitle]
  -[HKClinicalAccount lastFetchDate]
  -[HKClinicalAccount brand]
  -[HKClinicalAccount isUserEnabled]
  -[HKClinicalAccount needsRelogin]
  -[HKClinicalAccount lastFullFetchDate]
  -[HKClinicalAccount gateway]
  -[HKClinicalAccount initWithIdentifier:state:userEnabled:needsRelogin:lastFetchDate:lastFullFetchDate:gateway:]


HKClinicalAccountLoginCompletionState : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  HKClinicalAccount *account
 @property  NSNumber *alternateCredentialPersistentID
 @property  BOOL wasRelogin

  // class methods
  +[HKClinicalAccountLoginCompletionState supportsSecureCoding]

  // instance methods
  -[HKClinicalAccountLoginCompletionState encodeWithCoder:]
  -[HKClinicalAccountLoginCompletionState initWithCoder:]
  -[HKClinicalAccountLoginCompletionState .cxx_destruct]
  -[HKClinicalAccountLoginCompletionState account]
  -[HKClinicalAccountLoginCompletionState initWithAccount:wasRelogin:]
  -[HKClinicalAccountLoginCompletionState alternateCredentialPersistentID]
  -[HKClinicalAccountLoginCompletionState setAlternateCredentialPersistentID:]
  -[HKClinicalAccountLoginCompletionState wasRelogin]


HKCorrelationQuery : HKQuery <HKCorrelationQueryClientInterface>
 @property  @? completionHandler
 @property  NSDictionary *filterDictionary
 @property  HKCorrelationType *correlationType
 @property  NSDictionary *samplePredicates
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKCorrelationQuery configurationClass]
  +[HKCorrelationQuery clientInterfaceProtocol]
  +[HKCorrelationQuery configureClientInterface:]
  +[HKCorrelationQuery shouldApplyAdditionalPredicateForObjectType:]

  // instance methods
  -[HKCorrelationQuery .cxx_destruct]
  -[HKCorrelationQuery completionHandler]
  -[HKCorrelationQuery queue_validate]
  -[HKCorrelationQuery queue_deliverError:]
  -[HKCorrelationQuery queue_queryDidDeactivate:]
  -[HKCorrelationQuery queue_populateConfiguration:]
  -[HKCorrelationQuery _predicateFilterClasses]
  -[HKCorrelationQuery client_deliverCorrelations:clearPendingSamples:isFinalBatch:queryUUID:]
  -[HKCorrelationQuery initWithType:predicate:samplePredicates:completion:]
  -[HKCorrelationQuery correlationType]
  -[HKCorrelationQuery samplePredicates]
  -[HKCorrelationQuery filterDictionary]


_HKCorrelationQueryServerConfiguration : HKQueryServerConfiguration
 @property  NSDictionary *filterDictionary

  // class methods
  +[_HKCorrelationQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKCorrelationQueryServerConfiguration copyWithZone:]
  -[_HKCorrelationQueryServerConfiguration encodeWithCoder:]
  -[_HKCorrelationQueryServerConfiguration initWithCoder:]
  -[_HKCorrelationQueryServerConfiguration .cxx_destruct]
  -[_HKCorrelationQueryServerConfiguration setFilterDictionary:]
  -[_HKCorrelationQueryServerConfiguration filterDictionary]


HKClinicalProvider : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding, HKClinicalBrandable>
 @property  NSString *externalID
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *location
 @property  NSURL *informationURL
 @property  HKClinicalBrand *brand
 @property  NSArray *gateways
 @property  BOOL supported
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKClinicalProvider supportsSecureCoding]

  // instance methods
  -[HKClinicalProvider init]
  -[HKClinicalProvider copyWithZone:]
  -[HKClinicalProvider encodeWithCoder:]
  -[HKClinicalProvider initWithCoder:]
  -[HKClinicalProvider .cxx_destruct]
  -[HKClinicalProvider title]
  -[HKClinicalProvider location]
  -[HKClinicalProvider subtitle]
  -[HKClinicalProvider gateways]
  -[HKClinicalProvider isSupported]
  -[HKClinicalProvider externalID]
  -[HKClinicalProvider brand]
  -[HKClinicalProvider informationURL]
  -[HKClinicalProvider initWithExternalID:title:subtitle:location:informationURL:brand:gateways:]


HKDocumentSample : HKSample
 @property  HKDocumentType *documentType

  // instance methods
  -[HKDocumentSample documentType]


_HKWeakObserversMap : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_HKWeakObserversMap .cxx_destruct]
  -[_HKWeakObserversMap addObserver:forKey:]
  -[_HKWeakObserversMap removeObserver:forKey:]
  -[_HKWeakObserversMap observerCountForKey:]
  -[_HKWeakObserversMap observersForKey:]


_HKXMLTranslator : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_HKXMLTranslator dealloc]
  -[_HKXMLTranslator _localizeXSL:localizationTableName:localizationOverride:]
  -[_HKXMLTranslator initWithXSL:localizationTableName:localizationOverride:]
  -[_HKXMLTranslator convertToHTMLFromXML:]


HKTableFormatter : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *title
 @property  long long rowCount

  // class methods
  +[HKTableFormatter formatterForCodableCondensedWorkouts]

  // instance methods
  -[HKTableFormatter init]
  -[HKTableFormatter .cxx_destruct]
  -[HKTableFormatter stringFromDate:]
  -[HKTableFormatter title]
  -[HKTableFormatter setTitle:]
  -[HKTableFormatter rowCount]
  -[HKTableFormatter stringFromTimeInterval:]
  -[HKTableFormatter _columnWidths]
  -[HKTableFormatter initWithColumnTitles:]
  -[HKTableFormatter appendRow:]
  -[HKTableFormatter appendWorkout:]
  -[HKTableFormatter _formattedTableHeaderForColumnWidths:]
  -[HKTableFormatter _appendColumn:width:padding:row:]
  -[HKTableFormatter _enumerateFormattedRowsWithColumnWidths:handler:]
  -[HKTableFormatter stringFromDate:fallback:]
  -[HKTableFormatter appendHeterogenousRow:]
  -[HKTableFormatter formattedTableHeader]
  -[HKTableFormatter enumerateFormattedRows:]
  -[HKTableFormatter formattedTable]


_HKXPCConnection : NSObject /usr/lib/libc++.1.dylib
 @property  <_HKXPCExportable> *exportedObject
 @property  NSString *debugIdentifier
 @property  @? interruptionHandler
 @property  @? invalidationHandler

  // instance methods
  -[_HKXPCConnection dealloc]
  -[_HKXPCConnection invalidate]
  -[_HKXPCConnection .cxx_destruct]
  -[_HKXPCConnection resume]
  -[_HKXPCConnection setExportedObject:]
  -[_HKXPCConnection setInvalidationHandler:]
  -[_HKXPCConnection setInterruptionHandler:]
  -[_HKXPCConnection remoteObjectProxyWithErrorHandler:]
  -[_HKXPCConnection initWithListenerEndpoint:]
  -[_HKXPCConnection synchronousRemoteObjectProxyWithErrorHandler:]
  -[_HKXPCConnection initWithServiceName:]
  -[_HKXPCConnection initWithMachServiceName:options:]
  -[_HKXPCConnection interruptionHandler]
  -[_HKXPCConnection invalidationHandler]
  -[_HKXPCConnection exportedObject]
  -[_HKXPCConnection debugIdentifier]
  -[_HKXPCConnection setDebugIdentifier:]
  -[_HKXPCConnection _loggingPrefix]
  -[_HKXPCConnection initWithUnderlyingConnection:]
  -[_HKXPCConnection unitTest_interrupt]


_HKXPCExportedObjectProxy : NSObject /usr/lib/libc++.1.dylib
 @property  id weakExportedObject
 @property  Class weakExportedObjectClass

  // instance methods
  -[_HKXPCExportedObjectProxy methodSignatureForSelector:]
  -[_HKXPCExportedObjectProxy forwardInvocation:]
  -[_HKXPCExportedObjectProxy .cxx_destruct]
  -[_HKXPCExportedObjectProxy setWeakExportedObject:]
  -[_HKXPCExportedObjectProxy setWeakExportedObjectClass:]
  -[_HKXPCExportedObjectProxy weakExportedObject]
  -[_HKXPCExportedObjectProxy weakExportedObjectClass]


HKCorrelation : HKSample
 @property  NSUUID *UUID
 @property  HKCorrelationType *correlationType
 @property  NSSet *objects

  // class methods
  +[HKCorrelation supportsSecureCoding]
  +[HKCorrelation _isConcreteObjectClass]
  +[HKCorrelation correlationWithType:startDate:endDate:objects:device:metadata:]
  +[HKCorrelation _allowEmptyCorrelations]
  +[HKCorrelation correlationWithType:startDate:endDate:objects:]
  +[HKCorrelation correlationWithType:startDate:endDate:objects:metadata:]

  // instance methods
  -[HKCorrelation encodeWithCoder:]
  -[HKCorrelation initWithCoder:]
  -[HKCorrelation .cxx_destruct]
  -[HKCorrelation _init]
  -[HKCorrelation _UUID]
  -[HKCorrelation objects]
  -[HKCorrelation _allTypes]
  -[HKCorrelation _validateConfigurationWithOptions:]
  -[HKCorrelation correlationType]
  -[HKCorrelation _addCorrelatedObjects:]
  -[HKCorrelation _addCorrelatedObject:]
  -[HKCorrelation _containsObjects]
  -[HKCorrelation objectsForType:]
  -[HKCorrelation _filterCorrelatedObjectsWithFilterDictionary:]
  -[HKCorrelation _correlatedObjectsMatchFilterDictionary:]
  -[HKCorrelation _removeAllCorrelatedObjects]


_HKCorrelationPlaceholder : HKCorrelation
  // class methods
  +[_HKCorrelationPlaceholder _allowEmptyCorrelations]


_HKFitnessFriendWorkout : HKSample <NSCopying>
 @property  NSUUID *friendUUID
 @property  unsigned long workoutActivityType
 @property  double duration
 @property  HKQuantity *totalEnergyBurned
 @property  HKQuantity *totalBasalEnergyBurned
 @property  HKQuantity *totalDistance
 @property  HKQuantity *goal
 @property  unsigned long goalType
 @property  NSString *bundleID
 @property  BOOL isWatchWorkout
 @property  BOOL isIndoorWorkout
 @property  NSString *deviceManufacturer
 @property  NSString *deviceModel
 @property  long long amm

  // class methods
  +[_HKFitnessFriendWorkout supportsSecureCoding]
  +[_HKFitnessFriendWorkout fitnessFriendworkoutWithActivityType:friendUUID:startDate:endDate:duration:totalActiveEnergyBurned:totalBasalEnergyBurned:totalDistance:goalType:goal:bundleID:isWatchWorkout:isIndoorWorkout:deviceManufacturer:deviceModel:amm:]
  +[_HKFitnessFriendWorkout fitnessFriendWorkoutFromHKWorkout:]

  // instance methods
  -[_HKFitnessFriendWorkout encodeWithCoder:]
  -[_HKFitnessFriendWorkout initWithCoder:]
  -[_HKFitnessFriendWorkout .cxx_destruct]
  -[_HKFitnessFriendWorkout duration]
  -[_HKFitnessFriendWorkout bundleID]
  -[_HKFitnessFriendWorkout setBundleID:]
  -[_HKFitnessFriendWorkout setDuration:]
  -[_HKFitnessFriendWorkout totalDistance]
  -[_HKFitnessFriendWorkout setTotalDistance:]
  -[_HKFitnessFriendWorkout deviceModel]
  -[_HKFitnessFriendWorkout setDeviceModel:]
  -[_HKFitnessFriendWorkout workoutActivityType]
  -[_HKFitnessFriendWorkout setGoalType:]
  -[_HKFitnessFriendWorkout setGoal:]
  -[_HKFitnessFriendWorkout goalType]
  -[_HKFitnessFriendWorkout goal]
  -[_HKFitnessFriendWorkout setAmm:]
  -[_HKFitnessFriendWorkout friendUUID]
  -[_HKFitnessFriendWorkout setFriendUUID:]
  -[_HKFitnessFriendWorkout amm]
  -[_HKFitnessFriendWorkout totalEnergyBurned]
  -[_HKFitnessFriendWorkout isIndoorWorkout]
  -[_HKFitnessFriendWorkout totalBasalEnergyBurned]
  -[_HKFitnessFriendWorkout isWatchWorkout]
  -[_HKFitnessFriendWorkout hkWorkoutFromFriendWorkout]
  -[_HKFitnessFriendWorkout setWorkoutActivityType:]
  -[_HKFitnessFriendWorkout setTotalEnergyBurned:]
  -[_HKFitnessFriendWorkout setTotalBasalEnergyBurned:]
  -[_HKFitnessFriendWorkout setIsWatchWorkout:]
  -[_HKFitnessFriendWorkout setIsIndoorWorkout:]
  -[_HKFitnessFriendWorkout deviceManufacturer]
  -[_HKFitnessFriendWorkout setDeviceManufacturer:]


HKWorkout : HKSample
 @property  unsigned long goalType
 @property  HKQuantity *goal
 @property  HKQuantity *totalBasalEnergyBurned
 @property  BOOL isWatchWorkout
 @property  unsigned long workoutActivityType
 @property  NSArray *workoutEvents
 @property  double duration
 @property  HKQuantity *totalEnergyBurned
 @property  HKQuantity *totalDistance
 @property  HKQuantity *totalSwimmingStrokeCount
 @property  HKQuantity *totalFlightsClimbed

  // class methods
  +[HKWorkout supportsSecureCoding]
  +[HKWorkout _workoutWithActivityType:startDate:endDate:workoutEvents:duration:statistics:goalType:goal:device:metadata:]
  +[HKWorkout _isConcreteObjectClass]
  +[HKWorkout _stringFromWorkoutActivityType:]
  +[HKWorkout _workoutWithActivityType:startDate:endDate:workoutEvents:duration:totalActiveEnergyBurned:totalBasalEnergyBurned:totalDistance:goalType:goal:device:metadata:]
  +[HKWorkout workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:device:metadata:]
  +[HKWorkout workoutWithActivityType:startDate:endDate:duration:totalEnergyBurned:totalDistance:device:metadata:]
  +[HKWorkout _workoutWithActivityType:startDate:endDate:workoutEvents:duration:totalActiveEnergyBurned:totalBasalEnergyBurned:totalDistance:totalSwimmingStrokeCount:totalFlightsClimbed:goalType:goal:device:metadata:config:]
  +[HKWorkout _activityTypeMappings]
  +[HKWorkout workoutWithActivityType:startDate:endDate:]
  +[HKWorkout workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:metadata:]
  +[HKWorkout workoutWithActivityType:startDate:endDate:duration:totalEnergyBurned:totalDistance:metadata:]
  +[HKWorkout workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:totalSwimmingStrokeCount:device:metadata:]
  +[HKWorkout workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:totalFlightsClimbed:device:metadata:]
  +[HKWorkout _workoutActivityTypeFromString:]
  +[HKWorkout _allWorkoutTypeNames]
  +[HKWorkout _allWorkoutActivityTypes]

  // instance methods
  -[HKWorkout encodeWithCoder:]
  -[HKWorkout initWithCoder:]
  -[HKWorkout .cxx_destruct]
  -[HKWorkout duration]
  -[HKWorkout _setDuration:]
  -[HKWorkout totalDistance]
  -[HKWorkout _deepCopy]
  -[HKWorkout workoutActivityType]
  -[HKWorkout workoutEvents]
  -[HKWorkout _goalType]
  -[HKWorkout _goal]
  -[HKWorkout _validateConfigurationWithOptions:]
  -[HKWorkout _enumerateTimePeriodsWithBlock:]
  -[HKWorkout hk_integerValue]
  -[HKWorkout _enumerateActiveTimePeriods:]
  -[HKWorkout totalEnergyBurned]
  -[HKWorkout _totalBasalEnergyBurned]
  -[HKWorkout _isWatchWorkout]
  -[HKWorkout _setIsWatchWorkout:]
  -[HKWorkout _validateWorkoutEvents:]
  -[HKWorkout _setWorkoutActivityType:]
  -[HKWorkout _setWorkoutEvents:]
  -[HKWorkout _setTotalEnergyBurned:]
  -[HKWorkout _setTotalBasalEnergyBurned:]
  -[HKWorkout _setTotalDistance:]
  -[HKWorkout totalSwimmingStrokeCount]
  -[HKWorkout _setTotalSwimmingStrokeCount:]
  -[HKWorkout _setTotalFlightsClimbed:]
  -[HKWorkout _totalEnergyBurnedInCanonicalUnit]
  -[HKWorkout _totalBasalEnergyBurnedInCanonicalUnit]
  -[HKWorkout _totalDistanceInCanonicalUnit]
  -[HKWorkout _totalSwimmingStrokeCountInCanonicalUnit]
  -[HKWorkout _totalFlightsClimbedInCanonicalUnit]
  -[HKWorkout _goalInCanonicalUnit]
  -[HKWorkout totalFlightsClimbed]
  -[HKWorkout _setGoalType:]
  -[HKWorkout _setGoal:]


HKWorkoutEvent : NSObject /usr/lib/libc++.1.dylib <HKPersistableWorkoutEvent, NSSecureCoding, NSCopying>
 @property  long long type
 @property  NSDate *date
 @property  NSDateInterval *dateInterval
 @property  NSDictionary *metadata
 @property  NSUUID *sessionUUID
 @property  long long workoutEventType
 @property  NSError *error

  // class methods
  +[HKWorkoutEvent supportsSecureCoding]
  +[HKWorkoutEvent _workoutEventWithInternalEvent:]
  +[HKWorkoutEvent _newWorkoutEventWithType:dateInterval:metadata:]
  +[HKWorkoutEvent workoutEventWithType:dateInterval:metadata:]
  +[HKWorkoutEvent _workoutEventWithType:date:metadata:]
  +[HKWorkoutEvent _workoutEventWithType:dateInterval:metadata:]
  +[HKWorkoutEvent workoutEventWithType:date:]
  +[HKWorkoutEvent workoutEventWithType:date:metadata:]

  // instance methods
  -[HKWorkoutEvent init]
  -[HKWorkoutEvent isEqual:]
  -[HKWorkoutEvent copyWithZone:]
  -[HKWorkoutEvent type]
  -[HKWorkoutEvent compare:]
  -[HKWorkoutEvent encodeWithCoder:]
  -[HKWorkoutEvent initWithCoder:]
  -[HKWorkoutEvent .cxx_destruct]
  -[HKWorkoutEvent date]
  -[HKWorkoutEvent _init]
  -[HKWorkoutEvent error]
  -[HKWorkoutEvent awakeAfterUsingCoder:]
  -[HKWorkoutEvent metadata]
  -[HKWorkoutEvent dateInterval]
  -[HKWorkoutEvent _validateConfiguration]
  -[HKWorkoutEvent sessionUUID]
  -[HKWorkoutEvent _assertPropertiesValid]
  -[HKWorkoutEvent initWithWorkoutEventType:sessionUUID:dateInterval:metadata:error:]
  -[HKWorkoutEvent workoutEventType]


HKOAuth2Credential : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSDate *expiration
 @property  BOOL expired
 @property  NSArray *scope
 @property  NSString *scopeString

  // class methods
  +[HKOAuth2Credential supportsSecureCoding]
  +[HKOAuth2Credential scopeFromScopeString:]
  +[HKOAuth2Credential _scopeStringFromScope:]
  +[HKOAuth2Credential expirationFromTimeInterval:]

  // instance methods
  -[HKOAuth2Credential init]
  -[HKOAuth2Credential isEqual:]
  -[HKOAuth2Credential copyWithZone:]
  -[HKOAuth2Credential encodeWithCoder:]
  -[HKOAuth2Credential initWithCoder:]
  -[HKOAuth2Credential .cxx_destruct]
  -[HKOAuth2Credential identifier]
  -[HKOAuth2Credential scope]
  -[HKOAuth2Credential isExpired]
  -[HKOAuth2Credential expiration]
  -[HKOAuth2Credential _commonInitWithIdentifier:expiration:scope:]
  -[HKOAuth2Credential initWithIdentifier:expiration:scope:]
  -[HKOAuth2Credential _accessTokenIdentifier]
  -[HKOAuth2Credential _refreshTokenIdentifier]
  -[HKOAuth2Credential storeAccessToken:error:]
  -[HKOAuth2Credential storeRefreshToken:error:]
  -[HKOAuth2Credential isEqualToCredential:epsilonExpiration:]
  -[HKOAuth2Credential initWithIdentifier:expiration:scopeString:]
  -[HKOAuth2Credential fetchAccessTokenWithError:]
  -[HKOAuth2Credential fetchRefreshTokenWithError:]
  -[HKOAuth2Credential deleteTokensWithError:]
  -[HKOAuth2Credential scopeString]


_HKWorkoutEvent : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, HKPersistableWorkoutEvent>
 @property  NSUUID *sessionId
 @property  long long eventType
 @property  NSDateInterval *dateInterval
 @property  NSError *error
 @property  NSDictionary *metadata
 @property  NSUUID *sessionUUID
 @property  long long workoutEventType

  // class methods
  +[_HKWorkoutEvent supportsSecureCoding]

  // instance methods
  -[_HKWorkoutEvent encodeWithCoder:]
  -[_HKWorkoutEvent initWithCoder:]
  -[_HKWorkoutEvent .cxx_destruct]
  -[_HKWorkoutEvent error]
  -[_HKWorkoutEvent metadata]
  -[_HKWorkoutEvent dateInterval]
  -[_HKWorkoutEvent eventType]
  -[_HKWorkoutEvent sessionId]
  -[_HKWorkoutEvent sessionUUID]
  -[_HKWorkoutEvent initWithWorkoutEventType:sessionUUID:dateInterval:metadata:error:]
  -[_HKWorkoutEvent workoutEventType]
  -[_HKWorkoutEvent initWithSessionId:error:]
  -[_HKWorkoutEvent initWithEventType:sessionId:dateInterval:metadata:]


HKCategorySample : HKSample
 @property  HKCategoryType *categoryType
 @property  long long value

  // class methods
  +[HKCategorySample supportsSecureCoding]
  +[HKCategorySample _isConcreteObjectClass]
  +[HKCategorySample categorySampleWithType:value:startDate:endDate:]
  +[HKCategorySample categorySampleWithType:value:startDate:endDate:device:metadata:]
  +[HKCategorySample categorySampleWithType:value:startDate:endDate:metadata:]
  +[HKCategorySample _categorySamplesSplittingDurationWithType:value:startDate:endDate:device:metadata:]

  // instance methods
  -[HKCategorySample init]
  -[HKCategorySample encodeWithCoder:]
  -[HKCategorySample initWithCoder:]
  -[HKCategorySample value]
  -[HKCategorySample categoryType]
  -[HKCategorySample _valueDescription]
  -[HKCategorySample _setValue:]
  -[HKCategorySample _validateConfigurationWithOptions:]
  -[HKCategorySample hk_integerValue]
  -[HKCategorySample _bedtimeAlarmWithCalendar:]


_HKDatabaseChangesQuery : HKQuery <HKDatabaseChangesQueryClientInterface>
 @property  @? resultsHandler
 @property  NSArray *sampleTypes
 @property  HKQueryAnchor *anchor
 @property  long long changeDetailsQueryStrategy
 @property  long long anchorStrategyChangeCountLimit
 @property  BOOL includeChangeDetails
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HKDatabaseChangesQuery configurationClass]
  +[_HKDatabaseChangesQuery clientInterfaceProtocol]
  +[_HKDatabaseChangesQuery configureClientInterface:]
  +[_HKDatabaseChangesQuery configureServerInterface:]

  // instance methods
  -[_HKDatabaseChangesQuery .cxx_destruct]
  -[_HKDatabaseChangesQuery resultsHandler]
  -[_HKDatabaseChangesQuery anchor]
  -[_HKDatabaseChangesQuery queue_deliverError:]
  -[_HKDatabaseChangesQuery queue_shouldDeactivateAfterInitialResults]
  -[_HKDatabaseChangesQuery queue_queryDidDeactivate:]
  -[_HKDatabaseChangesQuery queue_populateConfiguration:]
  -[_HKDatabaseChangesQuery client_deliverQueryAnchor:sampleTypeChanges:queryUUID:]
  -[_HKDatabaseChangesQuery setIncludeChangeDetails:]
  -[_HKDatabaseChangesQuery setChangeDetailsQueryStrategy:]
  -[_HKDatabaseChangesQuery setAnchorStrategyChangeCountLimit:]
  -[_HKDatabaseChangesQuery initWithTypes:anchor:resultsHandler:]
  -[_HKDatabaseChangesQuery includeChangeDetails]
  -[_HKDatabaseChangesQuery sampleTypes]
  -[_HKDatabaseChangesQuery changeDetailsQueryStrategy]
  -[_HKDatabaseChangesQuery anchorStrategyChangeCountLimit]


HKSampleTypeChange : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  double startTime
 @property  double endTime
 @property  long long queryStrategy
 @property  HKSampleType *sampleType
 @property  NSDateInterval *dateInterval
 @property  BOOL samplesWereDeleted
 @property  BOOL hasUnfrozenSeries

  // class methods
  +[HKSampleTypeChange supportsSecureCoding]
  +[HKSampleTypeChange sampleTypeChangeWithSampleType:dateInterval:samplesWereDeleted:hasUnfrozenSeries:]

  // instance methods
  -[HKSampleTypeChange isEqual:]
  -[HKSampleTypeChange encodeWithCoder:]
  -[HKSampleTypeChange initWithCoder:]
  -[HKSampleTypeChange .cxx_destruct]
  -[HKSampleTypeChange dateInterval]
  -[HKSampleTypeChange startTime]
  -[HKSampleTypeChange endTime]
  -[HKSampleTypeChange sampleType]
  -[HKSampleTypeChange _initWithSampleType:startTime:endTime:deletions:hasUnfrozenSeries:queryStrategy:]
  -[HKSampleTypeChange _extendDateIntervalWithSample:]
  -[HKSampleTypeChange samplesWereDeleted]
  -[HKSampleTypeChange hasUnfrozenSeries]
  -[HKSampleTypeChange queryStrategy]


_HKDatabaseChangesQueryServerConfiguration : HKQueryServerConfiguration
 @property  NSSet *sampleTypes
 @property  HKQueryAnchor *anchor
 @property  BOOL includeChangeDetails
 @property  long long changeDetailsQueryStrategy
 @property  long long anchorStrategyChangeCountLimit

  // class methods
  +[_HKDatabaseChangesQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKDatabaseChangesQueryServerConfiguration copyWithZone:]
  -[_HKDatabaseChangesQueryServerConfiguration encodeWithCoder:]
  -[_HKDatabaseChangesQueryServerConfiguration initWithCoder:]
  -[_HKDatabaseChangesQueryServerConfiguration .cxx_destruct]
  -[_HKDatabaseChangesQueryServerConfiguration anchor]
  -[_HKDatabaseChangesQueryServerConfiguration setAnchor:]
  -[_HKDatabaseChangesQueryServerConfiguration setSampleTypes:]
  -[_HKDatabaseChangesQueryServerConfiguration setIncludeChangeDetails:]
  -[_HKDatabaseChangesQueryServerConfiguration setChangeDetailsQueryStrategy:]
  -[_HKDatabaseChangesQueryServerConfiguration setAnchorStrategyChangeCountLimit:]
  -[_HKDatabaseChangesQueryServerConfiguration includeChangeDetails]
  -[_HKDatabaseChangesQueryServerConfiguration sampleTypes]
  -[_HKDatabaseChangesQueryServerConfiguration changeDetailsQueryStrategy]
  -[_HKDatabaseChangesQueryServerConfiguration anchorStrategyChangeCountLimit]


HKConditionRecord : HKMedicalRecord <HKConceptIndexable, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *UUID
 @property  NSLocale *locale
 @property  HKConditionRecordType *conditionRecordType
 @property  HKInspectableValue *abatement
 @property  NSString *asserter
 @property  NSArray *bodySites
 @property  NSArray *bodySitesCodings
 @property  HKConcept *category
 @property  NSArray *categoryCodings
 @property  HKConcept *clinicalStatus
 @property  HKMedicalCoding *clinicalStatusCoding
 @property  HKConcept *condition
 @property  NSArray *conditionCodings
 @property  HKInspectableValue *onset
 @property  HKMedicalDate *recordedDate
 @property  HKConcept *severity
 @property  NSArray *severityCodings
 @property  HKConcept *verificationStatus
 @property  HKMedicalCoding *verificationStatusCoding

  // class methods
  +[HKConditionRecord supportsSecureCoding]
  +[HKConditionRecord conditionRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:conditionCodings:categoryCodings:asserter:abatement:onset:recordedDate:clinicalStatusCoding:verificationStatusCoding:severityCodings:bodySitesCodings:]
  +[HKConditionRecord conditionRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:conditionCodings:categoryCodings:asserter:abatement:onset:recordedDate:clinicalStatusCoding:verificationStatusCoding:severityCodings:bodySitesCodings:]
  +[HKConditionRecord supportsEquivalence]
  +[HKConditionRecord _isConcreteObjectClass]
  +[HKConditionRecord indexableConceptKeyPaths]
  +[HKConditionRecord cachedConceptRelationshipKeyPaths]
  +[HKConditionRecord defaultDisplayString]
  +[HKConditionRecord conditionCodingsPreferredSystems]
  +[HKConditionRecord bodySitesCodingsPreferredSystems]
  +[HKConditionRecord categoryCodingsPreferredSystems]
  +[HKConditionRecord clinicalStatusCodingPreferredSystems]
  +[HKConditionRecord severityCodingsPreferredSystems]
  +[HKConditionRecord verificationStatusCodingPreferredSystems]
  +[HKConditionRecord _newConditionRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:conditionCodings:categoryCodings:asserter:abatement:onset:recordedDate:clinicalStatusCoding:verificationStatusCoding:severityCodings:bodySitesCodings:config:]

  // instance methods
  -[HKConditionRecord init]
  -[HKConditionRecord copyWithZone:]
  -[HKConditionRecord encodeWithCoder:]
  -[HKConditionRecord initWithCoder:]
  -[HKConditionRecord .cxx_destruct]
  -[HKConditionRecord category]
  -[HKConditionRecord condition]
  -[HKConditionRecord _setCategory:]
  -[HKConditionRecord verificationStatus]
  -[HKConditionRecord isEquivalent:]
  -[HKConditionRecord _validateConfigurationWithOptions:]
  -[HKConditionRecord codingsForKeyPath:error:]
  -[HKConditionRecord applyConcepts:forKeyPath:error:]
  -[HKConditionRecord medicalRecordCodings]
  -[HKConditionRecord indexKeywords]
  -[HKConditionRecord medicalRecordPreferredSystems]
  -[HKConditionRecord conditionCodings]
  -[HKConditionRecord categoryCodings]
  -[HKConditionRecord clinicalStatusCoding]
  -[HKConditionRecord verificationStatusCoding]
  -[HKConditionRecord severityCodings]
  -[HKConditionRecord bodySitesCodings]
  -[HKConditionRecord _setCondition:]
  -[HKConditionRecord _setClinicalStatus:]
  -[HKConditionRecord _setVerificationStatus:]
  -[HKConditionRecord _setSeverity:]
  -[HKConditionRecord _setBodySites:]
  -[HKConditionRecord conditionRecordType]
  -[HKConditionRecord bodySitesCodingsTasks]
  -[HKConditionRecord categoryCodingsTasks]
  -[HKConditionRecord clinicalStatusCodingTasks]
  -[HKConditionRecord conditionCodingsTasks]
  -[HKConditionRecord severityCodingsTasks]
  -[HKConditionRecord verificationStatusCodingTasks]
  -[HKConditionRecord asserter]
  -[HKConditionRecord _setAsserter:]
  -[HKConditionRecord severity]
  -[HKConditionRecord abatement]
  -[HKConditionRecord onset]
  -[HKConditionRecord recordedDate]
  -[HKConditionRecord clinicalStatus]
  -[HKConditionRecord bodySites]
  -[HKConditionRecord conditionCodingsCollection]
  -[HKConditionRecord conditionCodingsContext]
  -[HKConditionRecord categoryCodingsCollection]
  -[HKConditionRecord categoryCodingsContext]
  -[HKConditionRecord clinicalStatusCodingCollection]
  -[HKConditionRecord clinicalStatusCodingContext]
  -[HKConditionRecord verificationStatusCodingCollection]
  -[HKConditionRecord verificationStatusCodingContext]
  -[HKConditionRecord severityCodingsCollection]
  -[HKConditionRecord severityCodingsContext]
  -[HKConditionRecord bodySitesCodingsCollection]
  -[HKConditionRecord bodySitesCodingsContexts]
  -[HKConditionRecord _setConditionCodings:]
  -[HKConditionRecord _setCategoryCodings:]
  -[HKConditionRecord _setAbatement:]
  -[HKConditionRecord _setOnset:]
  -[HKConditionRecord _setRecordedDate:]
  -[HKConditionRecord _setClinicalStatusCoding:]
  -[HKConditionRecord _setVerificationStatusCoding:]
  -[HKConditionRecord _setSeverityCodings:]
  -[HKConditionRecord _setBodySitesCodings:]


_HKFirstPartyWorkoutSnapshot : NSObject /usr/lib/libc++.1.dylib
 @property  long long state
 @property  unsigned long activityType

  // class methods
  +[_HKFirstPartyWorkoutSnapshot firstPartyWorkoutSnapshotWithCurrentWorkoutSnapshot:]

  // instance methods
  -[_HKFirstPartyWorkoutSnapshot .cxx_destruct]
  -[_HKFirstPartyWorkoutSnapshot state]
  -[_HKFirstPartyWorkoutSnapshot activityType]
  -[_HKFirstPartyWorkoutSnapshot _initWithState:activityType:elapsedTime:snapshotDate:]
  -[_HKFirstPartyWorkoutSnapshot durationForDate:]


_HKMobileAssetDownloadManager : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL shouldQueryLocalAssetsFirst
 @property  BOOL shouldAutoDownloadRemoteAssets
 @property  long long maxNumberOfRetriesAllowed
 @property  NSString *mobileAssetTypeName
 @property  @? errorHandler
 @property  MADownloadOptions *mobileAssetDownloadOptions
 @property  @? mobileAssetDownloadCompletionHandler

  // instance methods
  -[_HKMobileAssetDownloadManager dealloc]
  -[_HKMobileAssetDownloadManager .cxx_destruct]
  -[_HKMobileAssetDownloadManager setErrorHandler:]
  -[_HKMobileAssetDownloadManager errorHandler]
  -[_HKMobileAssetDownloadManager _queue_fetchAssetsWithLocalInformation:shouldRequery:queryParams:]
  -[_HKMobileAssetDownloadManager _generateAssetQueryFromQueryParams:]
  -[_HKMobileAssetDownloadManager _queue_fetchAssetsWithQuery:onlyLocal:completion:]
  -[_HKMobileAssetDownloadManager _queue_downloadAssets:completion:]
  -[_HKMobileAssetDownloadManager _errorWithDomain:code:]
  -[_HKMobileAssetDownloadManager _callErrorHandlerWithError:]
  -[_HKMobileAssetDownloadManager _callDownloadCompletionHandlerWithAssets:queryParams:]
  -[_HKMobileAssetDownloadManager maxNumberOfRetriesAllowed]
  -[_HKMobileAssetDownloadManager initWithMobileAssetTypeName:queue:]
  -[_HKMobileAssetDownloadManager downloadAssetsWithQueryParams:]
  -[_HKMobileAssetDownloadManager fetchAssetsWithQueryParams:onlyLocal:completion:]
  -[_HKMobileAssetDownloadManager downloadMobileAssets:completion:]
  -[_HKMobileAssetDownloadManager removeMobileAssets:completion:]
  -[_HKMobileAssetDownloadManager shouldQueryLocalAssetsFirst]
  -[_HKMobileAssetDownloadManager setShouldQueryLocalAssetsFirst:]
  -[_HKMobileAssetDownloadManager shouldAutoDownloadRemoteAssets]
  -[_HKMobileAssetDownloadManager setShouldAutoDownloadRemoteAssets:]
  -[_HKMobileAssetDownloadManager setMaxNumberOfRetriesAllowed:]
  -[_HKMobileAssetDownloadManager mobileAssetTypeName]
  -[_HKMobileAssetDownloadManager mobileAssetDownloadOptions]
  -[_HKMobileAssetDownloadManager setMobileAssetDownloadOptions:]
  -[_HKMobileAssetDownloadManager mobileAssetDownloadCompletionHandler]
  -[_HKMobileAssetDownloadManager setMobileAssetDownloadCompletionHandler:]


_HKMobileAssetDownloadOperation : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_HKMobileAssetDownloadOperation run]
  -[_HKMobileAssetDownloadOperation .cxx_destruct]
  -[_HKMobileAssetDownloadOperation initWithAsset:queue:downloadOptions:maxNumberOfRetriesAllowed:completion:]
  -[_HKMobileAssetDownloadOperation _queue_transitionToInitialized]
  -[_HKMobileAssetDownloadOperation _queue_run]
  -[_HKMobileAssetDownloadOperation _queue_transitionToDownloadingAsset]
  -[_HKMobileAssetDownloadOperation _queue_transitionToCompleted]
  -[_HKMobileAssetDownloadOperation _queue_downloadAsset]
  -[_HKMobileAssetDownloadOperation _queue_transitionToState:]
  -[_HKMobileAssetDownloadOperation _queue_callCompletionWithSuccess:error:]
  -[_HKMobileAssetDownloadOperation _queue_transitionToFailureWithDownloadResult:]


HKSample : HKObject <NSCopying>
 @property  double startTimestamp
 @property  double endTimestamp
 @property  HKSampleType *sampleType
 @property  NSDate *startDate
 @property  NSDate *endDate

  // class methods
  +[HKSample supportsSecureCoding]
  +[HKSample supportsEquivalence]
  +[HKSample _newSampleWithType:startDate:endDate:device:metadata:config:]
  +[HKSample _newSampleFromDatesWithType:startDate:endDate:device:metadata:config:]
  +[HKSample _enumerateValidIntervalsWithStartDate:endDate:sampleType:block:]
  +[HKSample _sampleWithUUID:metadata:sourceBundleIdentifier:creationDate:sampleType:startDate:endDate:]

  // instance methods
  -[HKSample encodeWithCoder:]
  -[HKSample initWithCoder:]
  -[HKSample .cxx_destruct]
  -[HKSample _init]
  -[HKSample startDate]
  -[HKSample endDate]
  -[HKSample _startTimestamp]
  -[HKSample _setType:]
  -[HKSample _endTimestamp]
  -[HKSample _setStartDate:]
  -[HKSample _setEndDate:]
  -[HKSample isEquivalent:]
  -[HKSample sampleType]
  -[HKSample _validateConfigurationWithOptions:]
  -[HKSample _externalSyncObjectCode]
  -[HKSample _requiresPrivateEntitlementForQueries]
  -[HKSample _enumerateTimePeriodsWithBlock:]
  -[HKSample _setStartTimestamp:]
  -[HKSample _setEndTimestamp:]
  -[HKSample _setSampleType:]


HKSleepPeriodSegment : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  long long category
 @property  NSArray *samples
 @property  double duration

  // instance methods
  -[HKSleepPeriodSegment .cxx_destruct]
  -[HKSleepPeriodSegment category]
  -[HKSleepPeriodSegment startDate]
  -[HKSleepPeriodSegment endDate]
  -[HKSleepPeriodSegment duration]
  -[HKSleepPeriodSegment samples]
  -[HKSleepPeriodSegment initWithStartDate:endDate:category:samples:duration:]


HKSleepPeriod : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSDateInterval *dateInterval
 @property  long long type
 @property  double duration
 @property  double inBedDuration
 @property  double asleepDuration
 @property  NSDateInterval *intendedBedtime
 @property  long long intendedBedtimeType
 @property  BOOL startDateConformsToIntendedBedtime
 @property  double startDateOffsetFromIntendedBedtime
 @property  BOOL endDateConformsToIntendedBedtime
 @property  double endDateOffsetFromIntendedBedtime
 @property  double asleepDurationGoal
 @property  long long asleepDurationGoalSource
 @property  double timeToFallAsleep
 @property  double timeToGetOutOfBed
 @property  double timeAwakeDuringIntendedSleepPeriod
 @property  double efficiency
 @property  long long numberOfInterruptions
 @property  BOOL consistent
 @property  NSArray *segments
 @property  NSString *timeZoneName

  // instance methods
  -[HKSleepPeriod type]
  -[HKSleepPeriod .cxx_destruct]
  -[HKSleepPeriod startDate]
  -[HKSleepPeriod endDate]
  -[HKSleepPeriod duration]
  -[HKSleepPeriod dateInterval]
  -[HKSleepPeriod segments]
  -[HKSleepPeriod _setType:]
  -[HKSleepPeriod timeZoneName]
  -[HKSleepPeriod _firstBedtimeAlarmWithCalendar:]
  -[HKSleepPeriod _setIntendedBedtime:type:]
  -[HKSleepPeriod inBedDuration]
  -[HKSleepPeriod initWithStartDate:endDate:segments:]
  -[HKSleepPeriod isConsistent]
  -[HKSleepPeriod asleepDuration]
  -[HKSleepPeriod efficiency]
  -[HKSleepPeriod numberOfInterruptions]
  -[HKSleepPeriod enumerateDateIntervalsForCategoryValue:intersectedWithDateInterval:block:]
  -[HKSleepPeriod segmentsForCategory:]
  -[HKSleepPeriod segmentDateIntervalsForCategoryValue:intersectedWithDateInterval:]
  -[HKSleepPeriod intendedBedtime]
  -[HKSleepPeriod intendedBedtimeType]
  -[HKSleepPeriod startDateConformsToIntendedBedtime]
  -[HKSleepPeriod startDateOffsetFromIntendedBedtime]
  -[HKSleepPeriod endDateConformsToIntendedBedtime]
  -[HKSleepPeriod endDateOffsetFromIntendedBedtime]
  -[HKSleepPeriod asleepDurationGoal]
  -[HKSleepPeriod asleepDurationGoalSource]
  -[HKSleepPeriod timeToFallAsleep]
  -[HKSleepPeriod timeToGetOutOfBed]
  -[HKSleepPeriod timeAwakeDuringIntendedSleepPeriod]


HKSleepDay : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSArray *sleepPeriods
 @property  NSDateInterval *dateInterval
 @property  double inBedDuration
 @property  double asleepDuration
 @property  double asleepDurationGoal
 @property  long long asleepDurationGoalSource
 @property  long long numberOfInterruptions
 @property  double timeAwakeDuringIntendedSleepPeriod
 @property  double efficiency

  // instance methods
  -[HKSleepDay .cxx_destruct]
  -[HKSleepDay startDate]
  -[HKSleepDay endDate]
  -[HKSleepDay dateInterval]
  -[HKSleepDay inBedDuration]
  -[HKSleepDay initWithStartDate:endDate:sleepPeriods:]
  -[HKSleepDay primarySleepPeriod]
  -[HKSleepDay asleepDuration]
  -[HKSleepDay efficiency]
  -[HKSleepDay numberOfInterruptions]
  -[HKSleepDay asleepDurationGoal]
  -[HKSleepDay asleepDurationGoalSource]
  -[HKSleepDay timeAwakeDuringIntendedSleepPeriod]
  -[HKSleepDay sleepPeriods]


HKFeatureAvailabilityRuleSet : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableDictionary *conditions

  // instance methods
  -[HKFeatureAvailabilityRuleSet .cxx_destruct]
  -[HKFeatureAvailabilityRuleSet conditions]
  -[HKFeatureAvailabilityRuleSet setConditions:]
  -[HKFeatureAvailabilityRuleSet initWithRawValue:dataSource:]
  -[HKFeatureAvailabilityRuleSet evaluateAll]
  -[HKFeatureAvailabilityRuleSet _parseRulesFromRawValue:dataSource:]


_HKAuthorizationRecord : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  long long status
 @property  long long request
 @property  long long mode
 @property  NSDate *anchorLimitModifiedDate

  // class methods
  +[_HKAuthorizationRecord supportsSecureCoding]
  +[_HKAuthorizationRecord recordWithStatus:request:mode:anchorLimitModifiedDate:]

  // instance methods
  -[_HKAuthorizationRecord isEqual:]
  -[_HKAuthorizationRecord copyWithZone:]
  -[_HKAuthorizationRecord encodeWithCoder:]
  -[_HKAuthorizationRecord initWithCoder:]
  -[_HKAuthorizationRecord .cxx_destruct]
  -[_HKAuthorizationRecord status]
  -[_HKAuthorizationRecord mode]
  -[_HKAuthorizationRecord request]
  -[_HKAuthorizationRecord setStatus:]
  -[_HKAuthorizationRecord sharingEnabled]
  -[_HKAuthorizationRecord _deepCopy]
  -[_HKAuthorizationRecord initWithAuthorizationStatus:authorizationRequest:authorizationMode:anchorLimitModifiedDate:]
  -[_HKAuthorizationRecord anchorLimitModifiedDate]
  -[_HKAuthorizationRecord requestedSharing]
  -[_HKAuthorizationRecord requestedReading]
  -[_HKAuthorizationRecord deniedSharing]
  -[_HKAuthorizationRecord deniedReading]
  -[_HKAuthorizationRecord readingEnabled]
  -[_HKAuthorizationRecord isCompatibleStatus:]
  -[_HKAuthorizationRecord recordWithReadingDisabled]
  -[_HKAuthorizationRecord recordWithSharingDisabled]


_HKBehavior : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL isDeviceSupported
 @property  BOOL isAppleInternalInstall
 @property  BOOL isAppleWatch
 @property  BOOL isCompanionCapable
 @property  BOOL hasTelephonyCapability
 @property  BOOL isTestingDevice
 @property  BOOL deviceSupportsHeartRateMotionContexts
 @property  BOOL collectsCalorimetry
 @property  BOOL collectsData
 @property  BOOL performsWorkoutCondensation
 @property  BOOL supportsAWDMetricSubmission
 @property  BOOL supportsActivitySharing
 @property  BOOL supportsAppSubscriptions
 @property  BOOL supportsHeartRateDataCollection
 @property  BOOL supportsNanoSync
 @property  BOOL supportsSampleExpiration
 @property  BOOL supportsSwimmingWorkoutSessions
 @property  BOOL supportsWorkouts
 @property  BOOL healthAppHidden
 @property  BOOL showSensitiveLogItems
 @property  BOOL futureMigrationsEnabled
 @property  BOOL unitTest_useEmbeddedOntology
 @property  BOOL unitTest_useEmbeddedOntologyAsset
 @property  BOOL ontologyAvailabilityRequiresAccounts
 @property  BOOL ignoreOntologyAssetAvailabilityChanges
 @property  BOOL ignoreOntologyVersionCheckDuringReferenceOntologyImport
 @property  BOOL hasOntologyFeaturesEnabled
 @property  BOOL isRunningStoreDemoMode
 @property  BOOL runningInStoreDemoModeF201
 @property  BOOL isCurrentDeviceN2XA
 @property  BOOL isCurrentDeviceSeries3OrOlder
 @property  BOOL manateeEnabledForHSA2Accounts
 @property  BOOL supportsCloudSync
 @property  BOOL supportsFeatureAvailabilityAssets
 @property  NSString *currentDeviceDisplayName
 @property  NSString *currentDeviceName
 @property  NSString *currentDeviceManufacturer
 @property  NSString *currentDeviceRegionCode
 @property  NSString *currentInternalDeviceModel
 @property  NSString *currentDeviceClass
 @property  NSString *currentDeviceProductType
 @property  NSString *currentOSBuild
 @property  NSString *currentOSName
 @property  NSString *currentOSVersion
 @property  {?=qqq} currentOSVersionStruct
 @property  NSTimeZone *localTimeZone
 @property  NSDictionary *currentDiskUsage
 @property  unsigned long totalDiskCapacity
 @property  unsigned long currentDiskSpaceAvailable

  // class methods
  +[_HKBehavior isAppleInternalInstall]
  +[_HKBehavior hasTelephonyCapability]
  +[_HKBehavior _hasTelephonyCapability]
  +[_HKBehavior activePairedWatchSupportsBradycardiaDetection]
  +[_HKBehavior allPairedWatchesSupportBradycardiaDetection]
  +[_HKBehavior isDeviceSupported]
  +[_HKBehavior sharedBehavior]
  +[_HKBehavior currentDeviceName]
  +[_HKBehavior currentDeviceManufacturer]
  +[_HKBehavior currentDeviceClass]
  +[_HKBehavior currentDeviceProductType]
  +[_HKBehavior currentOSVersion]
  +[_HKBehavior currentDeviceDisplayName]
  +[_HKBehavior currentDeviceRegionCode]
  +[_HKBehavior isRunningStoreDemoMode]
  +[_HKBehavior _isProductTypeSeries3OrOlder:]
  +[_HKBehavior activePairedWatchSupportsHeartRateMotionContexts]
  +[_HKBehavior allPairedWatchesSupportHeartRateMotionContexts]
  +[_HKBehavior _isDeviceSupported]
  +[_HKBehavior _isAppleInternalInstall]
  +[_HKBehavior _isRunningStoreDemoMode]
  +[_HKBehavior _runningInStoreDemoModeF201]
  +[_HKBehavior _deviceSupportsHeartRateMotionContexts]
  +[_HKBehavior _showSensitiveLogItems]
  +[_HKBehavior runningInStoreDemoModeF201]
  +[_HKBehavior isTestingDevice]
  +[_HKBehavior _hasCompletedBuddyWithVersion:]
  +[_HKBehavior _setHasCompletedBuddyWithVersion:]
  +[_HKBehavior _shouldShowBuddy]
  +[_HKBehavior currentDeviceReleaseType]
  +[_HKBehavior currentOSBuild]
  +[_HKBehavior currentOSVersionStruct]
  +[_HKBehavior _healthAppHidden]
  +[_HKBehavior isManateeEnabledByDefault]
  +[_HKBehavior _readEnableManateeForHSA2AccountsFromHealthdDefaults]
  +[_HKBehavior _runningInStoreDemoModeFProgramNumber]
  +[_HKBehavior _isForceBuddyEnabled]
  +[_HKBehavior hasCompletedBuddyWithVersion:]
  +[_HKBehavior setSharedBehavior:]
  +[_HKBehavior resetSharedBehavior]
  +[_HKBehavior nanoSyncProtocolVersionForWatchSystemBuildVersion:]
  +[_HKBehavior nanoSyncProtocolVersionForCompanionSystemBuildVersion:]
  +[_HKBehavior hasPairedWatch]
  +[_HKBehavior anyPairedWatchHasFlightsClimbedCapability]
  +[_HKBehavior activePairedWatchHasSmartFitnessCoaching]
  +[_HKBehavior setForceBuddy:]
  +[_HKBehavior setHasCompletedBuddyWithVersion:]
  +[_HKBehavior shouldShowBuddy]
  +[_HKBehavior _futureMigrationsEnabled]
  +[_HKBehavior _condensesHeartRateSamples]

  // instance methods
  -[_HKBehavior init]
  -[_HKBehavior .cxx_destruct]
  -[_HKBehavior localTimeZone]
  -[_HKBehavior .cxx_construct]
  -[_HKBehavior currentDiskUsage]
  -[_HKBehavior isAppleInternalInstall]
  -[_HKBehavior hasTelephonyCapability]
  -[_HKBehavior isDeviceSupported]
  -[_HKBehavior isAppleWatch]
  -[_HKBehavior currentDeviceName]
  -[_HKBehavior currentDeviceManufacturer]
  -[_HKBehavior currentDeviceClass]
  -[_HKBehavior currentDeviceProductType]
  -[_HKBehavior currentOSVersion]
  -[_HKBehavior currentDeviceDisplayName]
  -[_HKBehavior supportsSwimmingWorkoutSessions]
  -[_HKBehavior showSensitiveLogItems]
  -[_HKBehavior currentDeviceRegionCode]
  -[_HKBehavior isRunningStoreDemoMode]
  -[_HKBehavior _hasProductTypePrefix:]
  -[_HKBehavior isCurrentDeviceSeries3OrOlder]
  -[_HKBehavior runningInStoreDemoModeF201]
  -[_HKBehavior isTestingDevice]
  -[_HKBehavior currentDeviceReleaseType]
  -[_HKBehavior currentOSBuild]
  -[_HKBehavior currentOSVersionStruct]
  -[_HKBehavior healthAppHidden]
  -[_HKBehavior currentInternalDeviceModel]
  -[_HKBehavior isCurrentDeviceN2XA]
  -[_HKBehavior currentOSName]
  -[_HKBehavior totalDiskCapacity]
  -[_HKBehavior currentDiskSpaceAvailable]
  -[_HKBehavior setSupportsSwimmingWorkoutSessions:]
  -[_HKBehavior isManateeEnabledForHSA2Accounts]
  -[_HKBehavior setManateeEnabledForHSA2AccountsOverride:]
  -[_HKBehavior futureMigrationsEnabled]
  -[_HKBehavior setFutureMigrationsEnabled:]
  -[_HKBehavior supportsCloudSync]
  -[_HKBehavior setIsDeviceSupported:]
  -[_HKBehavior setIsAppleInternalInstall:]
  -[_HKBehavior setIsAppleWatch:]
  -[_HKBehavior isCompanionCapable]
  -[_HKBehavior setIsCompanionCapable:]
  -[_HKBehavior setHasTelephonyCapability:]
  -[_HKBehavior deviceSupportsHeartRateMotionContexts]
  -[_HKBehavior setDeviceSupportsHeartRateMotionContexts:]
  -[_HKBehavior collectsCalorimetry]
  -[_HKBehavior setCollectsCalorimetry:]
  -[_HKBehavior collectsData]
  -[_HKBehavior setCollectsData:]
  -[_HKBehavior performsWorkoutCondensation]
  -[_HKBehavior setPerformsWorkoutCondensation:]
  -[_HKBehavior supportsAWDMetricSubmission]
  -[_HKBehavior setSupportsAWDMetricSubmission:]
  -[_HKBehavior supportsActivitySharing]
  -[_HKBehavior setSupportsActivitySharing:]
  -[_HKBehavior supportsAppSubscriptions]
  -[_HKBehavior setSupportsAppSubscriptions:]
  -[_HKBehavior supportsFeatureAvailabilityAssets]
  -[_HKBehavior supportsHeartRateDataCollection]
  -[_HKBehavior setSupportsHeartRateDataCollection:]
  -[_HKBehavior supportsNanoSync]
  -[_HKBehavior setSupportsNanoSync:]
  -[_HKBehavior supportsSampleExpiration]
  -[_HKBehavior setSupportsSampleExpiration:]
  -[_HKBehavior supportsWorkouts]
  -[_HKBehavior setSupportsWorkouts:]
  -[_HKBehavior setShowSensitiveLogItems:]
  -[_HKBehavior unitTest_useEmbeddedOntology]
  -[_HKBehavior setUnitTest_useEmbeddedOntology:]
  -[_HKBehavior unitTest_useEmbeddedOntologyAsset]
  -[_HKBehavior setUnitTest_useEmbeddedOntologyAsset:]
  -[_HKBehavior ontologyAvailabilityRequiresAccounts]
  -[_HKBehavior setOntologyAvailabilityRequiresAccounts:]
  -[_HKBehavior ignoreOntologyAssetAvailabilityChanges]
  -[_HKBehavior setIgnoreOntologyAssetAvailabilityChanges:]
  -[_HKBehavior ignoreOntologyVersionCheckDuringReferenceOntologyImport]
  -[_HKBehavior setIgnoreOntologyVersionCheckDuringReferenceOntologyImport:]
  -[_HKBehavior hasOntologyFeaturesEnabled]
  -[_HKBehavior setHasOntologyFeaturesEnabled:]
  -[_HKBehavior setIsTestingDevice:]
  -[_HKBehavior setHealthAppHidden:]


HKProcedureRecord : HKMedicalRecord <HKConceptIndexable, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *UUID
 @property  NSLocale *locale
 @property  HKProcedureRecordType *procedureRecordType
 @property  NSArray *bodySites
 @property  NSArray *bodySitesCodings
 @property  HKConcept *category
 @property  NSArray *categoryCodings
 @property  NSArray *complications
 @property  NSArray *complicationsCodings
 @property  HKMedicalDate *executionEndDate
 @property  HKMedicalDate *executionStartDate
 @property  NSArray *followUps
 @property  NSArray *followUpsCodings
 @property  BOOL notPerformed
 @property  HKConcept *outcome
 @property  NSArray *outcomeCodings
 @property  NSArray *performers
 @property  HKConcept *procedure
 @property  NSArray *procedureCodings
 @property  HKConcept *reason
 @property  NSArray *reasonCodings
 @property  NSArray *reasonsNotPerformed
 @property  NSArray *reasonsNotPerformedCodings
 @property  HKConcept *status
 @property  HKMedicalCoding *statusCoding

  // class methods
  +[HKProcedureRecord supportsSecureCoding]
  +[HKProcedureRecord supportsEquivalence]
  +[HKProcedureRecord _isConcreteObjectClass]
  +[HKProcedureRecord indexableConceptKeyPaths]
  +[HKProcedureRecord cachedConceptRelationshipKeyPaths]
  +[HKProcedureRecord defaultDisplayString]
  +[HKProcedureRecord procedureCodingsPreferredSystems]
  +[HKProcedureRecord statusCodingPreferredSystems]
  +[HKProcedureRecord bodySitesCodingsPreferredSystems]
  +[HKProcedureRecord categoryCodingsPreferredSystems]
  +[HKProcedureRecord reasonCodingsPreferredSystems]
  +[HKProcedureRecord complicationsCodingsPreferredSystems]
  +[HKProcedureRecord followUpsCodingsPreferredSystems]
  +[HKProcedureRecord outcomeCodingsPreferredSystems]
  +[HKProcedureRecord reasonsNotPerformedCodingsPreferredSystems]
  +[HKProcedureRecord procedureRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:procedureCodings:performers:executionStartDate:executionEndDate:notPerformed:statusCoding:categoryCodings:reasonCodings:reasonsNotPerformedCodings:outcomeCodings:complicationsCodings:followUpsCodings:bodySitesCodings:]
  +[HKProcedureRecord procedureRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:procedureCodings:performers:executionStartDate:executionEndDate:notPerformed:statusCoding:categoryCodings:reasonCodings:reasonsNotPerformedCodings:outcomeCodings:complicationsCodings:followUpsCodings:bodySitesCodings:]
  +[HKProcedureRecord _newProcedureRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:procedureCodings:performers:executionStartDate:executionEndDate:notPerformed:statusCoding:categoryCodings:reasonCodings:reasonsNotPerformedCodings:outcomeCodings:complicationsCodings:followUpsCodings:bodySitesCodings:config:]

  // instance methods
  -[HKProcedureRecord init]
  -[HKProcedureRecord copyWithZone:]
  -[HKProcedureRecord encodeWithCoder:]
  -[HKProcedureRecord initWithCoder:]
  -[HKProcedureRecord reason]
  -[HKProcedureRecord .cxx_destruct]
  -[HKProcedureRecord category]
  -[HKProcedureRecord status]
  -[HKProcedureRecord outcome]
  -[HKProcedureRecord _setCategory:]
  -[HKProcedureRecord performers]
  -[HKProcedureRecord _setStatus:]
  -[HKProcedureRecord statusCoding]
  -[HKProcedureRecord isEquivalent:]
  -[HKProcedureRecord _validateConfigurationWithOptions:]
  -[HKProcedureRecord statusCodingCollection]
  -[HKProcedureRecord statusCodingContext]
  -[HKProcedureRecord _setStatusCoding:]
  -[HKProcedureRecord reasonCodings]
  -[HKProcedureRecord reasonCodingsCollection]
  -[HKProcedureRecord reasonCodingsContext]
  -[HKProcedureRecord _setReasonCodings:]
  -[HKProcedureRecord _setReason:]
  -[HKProcedureRecord codingsForKeyPath:error:]
  -[HKProcedureRecord applyConcepts:forKeyPath:error:]
  -[HKProcedureRecord medicalRecordCodings]
  -[HKProcedureRecord indexKeywords]
  -[HKProcedureRecord medicalRecordPreferredSystems]
  -[HKProcedureRecord procedureCodings]
  -[HKProcedureRecord categoryCodings]
  -[HKProcedureRecord bodySitesCodings]
  -[HKProcedureRecord _setBodySites:]
  -[HKProcedureRecord procedureRecordType]
  -[HKProcedureRecord reasonsNotPerformedCodings]
  -[HKProcedureRecord outcomeCodings]
  -[HKProcedureRecord complicationsCodings]
  -[HKProcedureRecord followUpsCodings]
  -[HKProcedureRecord _setProcedure:]
  -[HKProcedureRecord _setReasonsNotPerformed:]
  -[HKProcedureRecord _setOutcome:]
  -[HKProcedureRecord _setComplications:]
  -[HKProcedureRecord _setFollowUps:]
  -[HKProcedureRecord _setPerformers:]
  -[HKProcedureRecord statusCodingTasks]
  -[HKProcedureRecord bodySitesCodingsTasks]
  -[HKProcedureRecord categoryCodingsTasks]
  -[HKProcedureRecord reasonCodingsTasks]
  -[HKProcedureRecord complicationsCodingsTasks]
  -[HKProcedureRecord followUpsCodingsTasks]
  -[HKProcedureRecord outcomeCodingsTasks]
  -[HKProcedureRecord procedureCodingsTasks]
  -[HKProcedureRecord reasonsNotPerformedCodingsTasks]
  -[HKProcedureRecord bodySites]
  -[HKProcedureRecord categoryCodingsCollection]
  -[HKProcedureRecord categoryCodingsContext]
  -[HKProcedureRecord bodySitesCodingsCollection]
  -[HKProcedureRecord bodySitesCodingsContexts]
  -[HKProcedureRecord _setCategoryCodings:]
  -[HKProcedureRecord _setBodySitesCodings:]
  -[HKProcedureRecord executionStartDate]
  -[HKProcedureRecord executionEndDate]
  -[HKProcedureRecord notPerformed]
  -[HKProcedureRecord procedure]
  -[HKProcedureRecord reasonsNotPerformed]
  -[HKProcedureRecord complications]
  -[HKProcedureRecord followUps]
  -[HKProcedureRecord procedureCodingsCollection]
  -[HKProcedureRecord procedureCodingsContext]
  -[HKProcedureRecord reasonsNotPerformedCodingsCollection]
  -[HKProcedureRecord reasonsNotPerformedCodingsContexts]
  -[HKProcedureRecord outcomeCodingsCollection]
  -[HKProcedureRecord outcomeCodingsContext]
  -[HKProcedureRecord complicationsCodingsCollection]
  -[HKProcedureRecord complicationsCodingsContexts]
  -[HKProcedureRecord followUpsCodingsCollection]
  -[HKProcedureRecord followUpsCodingsContexts]
  -[HKProcedureRecord _setProcedureCodings:]
  -[HKProcedureRecord _setExecutionStartDate:]
  -[HKProcedureRecord _setExecutionEndDate:]
  -[HKProcedureRecord _setNotPerformed:]
  -[HKProcedureRecord _setReasonsNotPerformedCodings:]
  -[HKProcedureRecord _setOutcomeCodings:]
  -[HKProcedureRecord _setComplicationsCodings:]
  -[HKProcedureRecord _setFollowUpsCodings:]


HKFeatureAvailabilityActiveWatchElectrocardiogramVersionLessThanRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  {?=qqq} targetVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionLessThanRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionLessThanRule targetVersion]
  -[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionLessThanRule setTargetVersion:]
  -[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionLessThanRule evaluate]
  -[HKFeatureAvailabilityActiveWatchElectrocardiogramVersionLessThanRule processUserInfo:]


_HKFilter : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
  // class methods
  +[_HKFilter supportsSecureCoding]
  +[_HKFilter compoundFilterWithFilter:otherFilter:]
  +[_HKFilter filterByCombiningFilters:compoundType:]
  +[_HKFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKFilter filter:acceptsDataObject:]
  +[_HKFilter trueFilter]
  +[_HKFilter falseFilter]
  +[_HKFilter filter:acceptsActivitySummary:]
  +[_HKFilter filter:acceptsDataObjectWithStartTimestamp:endTimestamp:valueInCanonicalUnit:]

  // instance methods
  -[_HKFilter copyWithZone:]
  -[_HKFilter encodeWithCoder:]
  -[_HKFilter initWithCoder:]
  -[_HKFilter acceptsDataObject:]
  -[_HKFilter acceptsActivitySummary:]
  -[_HKFilter acceptsDataObjectWithStartTimestamp:endTimestamp:valueInCanonicalUnit:]
  -[_HKFilter _subfilters]
  -[_HKFilter filterByApplyingTransformation:]
  -[_HKFilter _copyWithZone:subfilters:]


_HKStartDateFilter : _HKFilter
 @property  NSDate *comparisonDate
 @property  unsigned long operatorType

  // class methods
  +[_HKStartDateFilter supportsSecureCoding]
  +[_HKStartDateFilter filterWithOperatorType:comparisonDate:]
  +[_HKStartDateFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]

  // instance methods
  -[_HKStartDateFilter isEqual:]
  -[_HKStartDateFilter copyWithZone:]
  -[_HKStartDateFilter encodeWithCoder:]
  -[_HKStartDateFilter initWithCoder:]
  -[_HKStartDateFilter .cxx_destruct]
  -[_HKStartDateFilter operatorType]
  -[_HKStartDateFilter acceptsDataObject:]
  -[_HKStartDateFilter acceptsDataObjectWithStartTimestamp:endTimestamp:valueInCanonicalUnit:]
  -[_HKStartDateFilter comparisonDate]


_HKEndDateFilter : _HKFilter
 @property  NSDate *comparisonDate
 @property  unsigned long operatorType

  // class methods
  +[_HKEndDateFilter supportsSecureCoding]
  +[_HKEndDateFilter filterWithOperatorType:comparisonDate:]
  +[_HKEndDateFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]

  // instance methods
  -[_HKEndDateFilter isEqual:]
  -[_HKEndDateFilter copyWithZone:]
  -[_HKEndDateFilter encodeWithCoder:]
  -[_HKEndDateFilter initWithCoder:]
  -[_HKEndDateFilter .cxx_destruct]
  -[_HKEndDateFilter operatorType]
  -[_HKEndDateFilter acceptsDataObject:]
  -[_HKEndDateFilter acceptsDataObjectWithStartTimestamp:endTimestamp:valueInCanonicalUnit:]
  -[_HKEndDateFilter comparisonDate]


_HKCreationDateFilter : _HKFilter
 @property  NSDate *comparisonDate
 @property  unsigned long operatorType

  // class methods
  +[_HKCreationDateFilter supportsSecureCoding]
  +[_HKCreationDateFilter filterWithOperatorType:comparisonDate:]
  +[_HKCreationDateFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]

  // instance methods
  -[_HKCreationDateFilter isEqual:]
  -[_HKCreationDateFilter copyWithZone:]
  -[_HKCreationDateFilter encodeWithCoder:]
  -[_HKCreationDateFilter initWithCoder:]
  -[_HKCreationDateFilter .cxx_destruct]
  -[_HKCreationDateFilter operatorType]
  -[_HKCreationDateFilter acceptsDataObject:]
  -[_HKCreationDateFilter comparisonDate]


_HKSourceFilter : _HKFilter
 @property  NSSet *sources
 @property  unsigned long operatorType

  // class methods
  +[_HKSourceFilter supportsSecureCoding]
  +[_HKSourceFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKSourceFilter _filterForComparisonWithKeyPath:value:operatorType:dataTypes:]
  +[_HKSourceFilter _filterForInOperatorWithKeyPath:value:dataTypes:]
  +[_HKSourceFilter filterWithSources:operatorType:]

  // instance methods
  -[_HKSourceFilter isEqual:]
  -[_HKSourceFilter copyWithZone:]
  -[_HKSourceFilter encodeWithCoder:]
  -[_HKSourceFilter initWithCoder:]
  -[_HKSourceFilter .cxx_destruct]
  -[_HKSourceFilter operatorType]
  -[_HKSourceFilter sources]
  -[_HKSourceFilter acceptsDataObject:]


_HKSourceRevisionFilter : _HKFilter
 @property  NSSet *sourceRevisions
 @property  unsigned long operatorType

  // class methods
  +[_HKSourceRevisionFilter supportsSecureCoding]
  +[_HKSourceRevisionFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKSourceRevisionFilter _filterForComparisonWithKeyPath:value:operatorType:dataTypes:]
  +[_HKSourceRevisionFilter _filterForInOperatorWithKeyPath:value:dataTypes:]
  +[_HKSourceRevisionFilter filterWithSourceRevisions:operatorType:]
  +[_HKSourceRevisionFilter exactMatchRequired]

  // instance methods
  -[_HKSourceRevisionFilter isEqual:]
  -[_HKSourceRevisionFilter copyWithZone:]
  -[_HKSourceRevisionFilter encodeWithCoder:]
  -[_HKSourceRevisionFilter initWithCoder:]
  -[_HKSourceRevisionFilter .cxx_destruct]
  -[_HKSourceRevisionFilter operatorType]
  -[_HKSourceRevisionFilter acceptsDataObject:]
  -[_HKSourceRevisionFilter sourceRevisions]


_HKQuantityFilter : _HKFilter
 @property  HKQuantity *comparisonQuantity
 @property  HKQuantityType *dataType
 @property  unsigned long operatorType

  // class methods
  +[_HKQuantityFilter supportsSecureCoding]
  +[_HKQuantityFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKQuantityFilter filterWithOperatorType:comparisonQuantity:dataType:]

  // instance methods
  -[_HKQuantityFilter isEqual:]
  -[_HKQuantityFilter copyWithZone:]
  -[_HKQuantityFilter encodeWithCoder:]
  -[_HKQuantityFilter initWithCoder:]
  -[_HKQuantityFilter .cxx_destruct]
  -[_HKQuantityFilter operatorType]
  -[_HKQuantityFilter dataType]
  -[_HKQuantityFilter acceptsDataObject:]
  -[_HKQuantityFilter acceptsDataObjectWithStartTimestamp:endTimestamp:valueInCanonicalUnit:]
  -[_HKQuantityFilter comparisonQuantity]


_HKCategoryValueFilter : _HKFilter
 @property  NSNumber *comparisonValue
 @property  HKCategoryType *dataType
 @property  unsigned long operatorType

  // class methods
  +[_HKCategoryValueFilter supportsSecureCoding]
  +[_HKCategoryValueFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKCategoryValueFilter filterWithOperatorType:comparisonValue:dataType:]

  // instance methods
  -[_HKCategoryValueFilter isEqual:]
  -[_HKCategoryValueFilter copyWithZone:]
  -[_HKCategoryValueFilter encodeWithCoder:]
  -[_HKCategoryValueFilter initWithCoder:]
  -[_HKCategoryValueFilter .cxx_destruct]
  -[_HKCategoryValueFilter operatorType]
  -[_HKCategoryValueFilter dataType]
  -[_HKCategoryValueFilter acceptsDataObject:]
  -[_HKCategoryValueFilter comparisonValue]


_HKCompoundFilter : _HKFilter
 @property  NSArray *subfilters
 @property  unsigned long compoundType

  // class methods
  +[_HKCompoundFilter supportsSecureCoding]
  +[_HKCompoundFilter filterWithSubfilters:compoundType:]

  // instance methods
  -[_HKCompoundFilter isEqual:]
  -[_HKCompoundFilter copyWithZone:]
  -[_HKCompoundFilter encodeWithCoder:]
  -[_HKCompoundFilter initWithCoder:]
  -[_HKCompoundFilter .cxx_destruct]
  -[_HKCompoundFilter compoundType]
  -[_HKCompoundFilter acceptsDataObject:]
  -[_HKCompoundFilter acceptsActivitySummary:]
  -[_HKCompoundFilter acceptsDataObjectWithStartTimestamp:endTimestamp:valueInCanonicalUnit:]
  -[_HKCompoundFilter _subfilters]
  -[_HKCompoundFilter _copyWithZone:subfilters:]
  -[_HKCompoundFilter _compoundFilterAcceptsObjectWithEvaluation:]
  -[_HKCompoundFilter subfilters]


_HKBooleanFilter : _HKFilter
 @property  BOOL boolValue

  // class methods
  +[_HKBooleanFilter supportsSecureCoding]
  +[_HKBooleanFilter filterWithBoolValue:]

  // instance methods
  -[_HKBooleanFilter isEqual:]
  -[_HKBooleanFilter copyWithZone:]
  -[_HKBooleanFilter boolValue]
  -[_HKBooleanFilter encodeWithCoder:]
  -[_HKBooleanFilter initWithCoder:]
  -[_HKBooleanFilter acceptsDataObject:]


_HKMetadataFilter : _HKFilter
 @property  NSString *key
 @property  unsigned long operatorType

  // class methods
  +[_HKMetadataFilter supportsSecureCoding]
  +[_HKMetadataFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKMetadataFilter _acceptsOperatorType:]

  // instance methods
  -[_HKMetadataFilter isEqual:]
  -[_HKMetadataFilter copyWithZone:]
  -[_HKMetadataFilter key]
  -[_HKMetadataFilter encodeWithCoder:]
  -[_HKMetadataFilter initWithCoder:]
  -[_HKMetadataFilter .cxx_destruct]
  -[_HKMetadataFilter operatorType]
  -[_HKMetadataFilter acceptsDataObject:]
  -[_HKMetadataFilter _initWithKey:operatorType:]


_HKContainsMetadataFilter : _HKMetadataFilter
 @property  NSSet *allowedValues

  // class methods
  +[_HKContainsMetadataFilter supportsSecureCoding]
  +[_HKContainsMetadataFilter _acceptsOperatorType:]
  +[_HKContainsMetadataFilter filterWithKey:operatorType:values:]

  // instance methods
  -[_HKContainsMetadataFilter isEqual:]
  -[_HKContainsMetadataFilter copyWithZone:]
  -[_HKContainsMetadataFilter encodeWithCoder:]
  -[_HKContainsMetadataFilter initWithCoder:]
  -[_HKContainsMetadataFilter .cxx_destruct]
  -[_HKContainsMetadataFilter allowedValues]
  -[_HKContainsMetadataFilter acceptsDataObject:]
  -[_HKContainsMetadataFilter _initWithKey:values:operatorType:]


_HKComparisonMetadataFilter : _HKMetadataFilter
 @property  id value

  // class methods
  +[_HKComparisonMetadataFilter supportsSecureCoding]
  +[_HKComparisonMetadataFilter _acceptsOperatorType:]
  +[_HKComparisonMetadataFilter filterWithKey:operatorType:value:]

  // instance methods
  -[_HKComparisonMetadataFilter isEqual:]
  -[_HKComparisonMetadataFilter copyWithZone:]
  -[_HKComparisonMetadataFilter encodeWithCoder:]
  -[_HKComparisonMetadataFilter initWithCoder:]
  -[_HKComparisonMetadataFilter .cxx_destruct]
  -[_HKComparisonMetadataFilter value]
  -[_HKComparisonMetadataFilter acceptsDataObject:]
  -[_HKComparisonMetadataFilter _initWithKey:operatorType:value:]


_HKUUIDFilter : _HKFilter
 @property  NSSet *UUIDs

  // class methods
  +[_HKUUIDFilter supportsSecureCoding]
  +[_HKUUIDFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKUUIDFilter _filterForInOperatorWithKeyPath:value:dataTypes:]
  +[_HKUUIDFilter _filterForComparisonWithKeyPath:value:dataTypes:]
  +[_HKUUIDFilter filterWithUUIDs:]

  // instance methods
  -[_HKUUIDFilter isEqual:]
  -[_HKUUIDFilter copyWithZone:]
  -[_HKUUIDFilter encodeWithCoder:]
  -[_HKUUIDFilter initWithCoder:]
  -[_HKUUIDFilter .cxx_destruct]
  -[_HKUUIDFilter acceptsDataObject:]
  -[_HKUUIDFilter UUIDs]


_HKCorrelationFilter : _HKFilter
 @property  unsigned long operatorType

  // class methods
  +[_HKCorrelationFilter supportsSecureCoding]
  +[_HKCorrelationFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKCorrelationFilter filterWithOperatorType:]

  // instance methods
  -[_HKCorrelationFilter isEqual:]
  -[_HKCorrelationFilter copyWithZone:]
  -[_HKCorrelationFilter encodeWithCoder:]
  -[_HKCorrelationFilter initWithCoder:]
  -[_HKCorrelationFilter operatorType]
  -[_HKCorrelationFilter acceptsDataObject:]


_HKWorkoutFilter : _HKFilter
 @property  NSUUID *workoutUUID

  // class methods
  +[_HKWorkoutFilter supportsSecureCoding]
  +[_HKWorkoutFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKWorkoutFilter filterWithWorkoutUUID:]

  // instance methods
  -[_HKWorkoutFilter isEqual:]
  -[_HKWorkoutFilter copyWithZone:]
  -[_HKWorkoutFilter encodeWithCoder:]
  -[_HKWorkoutFilter initWithCoder:]
  -[_HKWorkoutFilter .cxx_destruct]
  -[_HKWorkoutFilter acceptsDataObject:]
  -[_HKWorkoutFilter workoutUUID]


_HKWorkoutActivityTypeFilter : _HKFilter
 @property  unsigned long workoutActivityType
 @property  unsigned long operatorType

  // class methods
  +[_HKWorkoutActivityTypeFilter supportsSecureCoding]
  +[_HKWorkoutActivityTypeFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKWorkoutActivityTypeFilter filterWithWorkoutActivityType:operatorType:]

  // instance methods
  -[_HKWorkoutActivityTypeFilter isEqual:]
  -[_HKWorkoutActivityTypeFilter copyWithZone:]
  -[_HKWorkoutActivityTypeFilter encodeWithCoder:]
  -[_HKWorkoutActivityTypeFilter initWithCoder:]
  -[_HKWorkoutActivityTypeFilter operatorType]
  -[_HKWorkoutActivityTypeFilter workoutActivityType]
  -[_HKWorkoutActivityTypeFilter acceptsDataObject:]


_HKWorkoutGoalTypeFilter : _HKFilter
 @property  unsigned long goalType
 @property  unsigned long operatorType

  // class methods
  +[_HKWorkoutGoalTypeFilter supportsSecureCoding]
  +[_HKWorkoutGoalTypeFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKWorkoutGoalTypeFilter filterWithGoalType:operatorType:]

  // instance methods
  -[_HKWorkoutGoalTypeFilter isEqual:]
  -[_HKWorkoutGoalTypeFilter copyWithZone:]
  -[_HKWorkoutGoalTypeFilter encodeWithCoder:]
  -[_HKWorkoutGoalTypeFilter initWithCoder:]
  -[_HKWorkoutGoalTypeFilter operatorType]
  -[_HKWorkoutGoalTypeFilter goalType]
  -[_HKWorkoutGoalTypeFilter acceptsDataObject:]


_HKWorkoutDurationFilter : _HKFilter
 @property  double duration
 @property  unsigned long operatorType

  // class methods
  +[_HKWorkoutDurationFilter supportsSecureCoding]
  +[_HKWorkoutDurationFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKWorkoutDurationFilter filterWithDuration:operatorType:]

  // instance methods
  -[_HKWorkoutDurationFilter isEqual:]
  -[_HKWorkoutDurationFilter copyWithZone:]
  -[_HKWorkoutDurationFilter encodeWithCoder:]
  -[_HKWorkoutDurationFilter initWithCoder:]
  -[_HKWorkoutDurationFilter operatorType]
  -[_HKWorkoutDurationFilter duration]
  -[_HKWorkoutDurationFilter acceptsDataObject:]


_HKWorkoutTotalDistanceFilter : _HKFilter
 @property  HKQuantity *totalDistance
 @property  unsigned long operatorType

  // class methods
  +[_HKWorkoutTotalDistanceFilter supportsSecureCoding]
  +[_HKWorkoutTotalDistanceFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKWorkoutTotalDistanceFilter filterWithTotalDistance:operatorType:]

  // instance methods
  -[_HKWorkoutTotalDistanceFilter isEqual:]
  -[_HKWorkoutTotalDistanceFilter copyWithZone:]
  -[_HKWorkoutTotalDistanceFilter encodeWithCoder:]
  -[_HKWorkoutTotalDistanceFilter initWithCoder:]
  -[_HKWorkoutTotalDistanceFilter .cxx_destruct]
  -[_HKWorkoutTotalDistanceFilter operatorType]
  -[_HKWorkoutTotalDistanceFilter totalDistance]
  -[_HKWorkoutTotalDistanceFilter acceptsDataObject:]


_HKWorkoutTotalEnergyBurnedFilter : _HKFilter
 @property  HKQuantity *totalEnergyBurned
 @property  unsigned long operatorType

  // class methods
  +[_HKWorkoutTotalEnergyBurnedFilter supportsSecureCoding]
  +[_HKWorkoutTotalEnergyBurnedFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKWorkoutTotalEnergyBurnedFilter filterWithTotalEnergyBurned:operatorType:]

  // instance methods
  -[_HKWorkoutTotalEnergyBurnedFilter isEqual:]
  -[_HKWorkoutTotalEnergyBurnedFilter copyWithZone:]
  -[_HKWorkoutTotalEnergyBurnedFilter encodeWithCoder:]
  -[_HKWorkoutTotalEnergyBurnedFilter initWithCoder:]
  -[_HKWorkoutTotalEnergyBurnedFilter .cxx_destruct]
  -[_HKWorkoutTotalEnergyBurnedFilter operatorType]
  -[_HKWorkoutTotalEnergyBurnedFilter totalEnergyBurned]
  -[_HKWorkoutTotalEnergyBurnedFilter acceptsDataObject:]


_HKWorkoutTotalSwimmingStrokeCountFilter : _HKFilter
 @property  HKQuantity *totalSwimmingStrokeCount
 @property  unsigned long operatorType

  // class methods
  +[_HKWorkoutTotalSwimmingStrokeCountFilter supportsSecureCoding]
  +[_HKWorkoutTotalSwimmingStrokeCountFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKWorkoutTotalSwimmingStrokeCountFilter filterWithTotalSwimmingStrokeCount:operatorType:]

  // instance methods
  -[_HKWorkoutTotalSwimmingStrokeCountFilter isEqual:]
  -[_HKWorkoutTotalSwimmingStrokeCountFilter copyWithZone:]
  -[_HKWorkoutTotalSwimmingStrokeCountFilter encodeWithCoder:]
  -[_HKWorkoutTotalSwimmingStrokeCountFilter initWithCoder:]
  -[_HKWorkoutTotalSwimmingStrokeCountFilter .cxx_destruct]
  -[_HKWorkoutTotalSwimmingStrokeCountFilter operatorType]
  -[_HKWorkoutTotalSwimmingStrokeCountFilter totalSwimmingStrokeCount]
  -[_HKWorkoutTotalSwimmingStrokeCountFilter acceptsDataObject:]


_HKWorkoutTotalFlightsClimbedFilter : _HKFilter
 @property  HKQuantity *totalFlightsClimbed
 @property  unsigned long operatorType

  // class methods
  +[_HKWorkoutTotalFlightsClimbedFilter supportsSecureCoding]
  +[_HKWorkoutTotalFlightsClimbedFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKWorkoutTotalFlightsClimbedFilter filterWithTotalFlightsClimbed:operatorType:]

  // instance methods
  -[_HKWorkoutTotalFlightsClimbedFilter isEqual:]
  -[_HKWorkoutTotalFlightsClimbedFilter copyWithZone:]
  -[_HKWorkoutTotalFlightsClimbedFilter encodeWithCoder:]
  -[_HKWorkoutTotalFlightsClimbedFilter initWithCoder:]
  -[_HKWorkoutTotalFlightsClimbedFilter .cxx_destruct]
  -[_HKWorkoutTotalFlightsClimbedFilter operatorType]
  -[_HKWorkoutTotalFlightsClimbedFilter totalFlightsClimbed]
  -[_HKWorkoutTotalFlightsClimbedFilter acceptsDataObject:]


_HKWorkoutGoalFilter : _HKFilter
 @property  HKQuantity *comparisonQuantity
 @property  unsigned long goalType
 @property  unsigned long operatorType

  // class methods
  +[_HKWorkoutGoalFilter supportsSecureCoding]
  +[_HKWorkoutGoalFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKWorkoutGoalFilter filterWithComparisonQuantity:goalType:operatorType:]

  // instance methods
  -[_HKWorkoutGoalFilter isEqual:]
  -[_HKWorkoutGoalFilter copyWithZone:]
  -[_HKWorkoutGoalFilter encodeWithCoder:]
  -[_HKWorkoutGoalFilter initWithCoder:]
  -[_HKWorkoutGoalFilter .cxx_destruct]
  -[_HKWorkoutGoalFilter operatorType]
  -[_HKWorkoutGoalFilter goalType]
  -[_HKWorkoutGoalFilter acceptsDataObject:]
  -[_HKWorkoutGoalFilter comparisonQuantity]


_HKDeviceFilter : _HKFilter
 @property  NSSet *devices
 @property  unsigned long operatorType

  // class methods
  +[_HKDeviceFilter supportsSecureCoding]
  +[_HKDeviceFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKDeviceFilter _filterForComparisonWithKeyPath:value:operatorType:dataTypes:]
  +[_HKDeviceFilter _filterForInOperatorWithKeyPath:value:dataTypes:]
  +[_HKDeviceFilter filterWithDevices:operatorType:]

  // instance methods
  -[_HKDeviceFilter isEqual:]
  -[_HKDeviceFilter copyWithZone:]
  -[_HKDeviceFilter encodeWithCoder:]
  -[_HKDeviceFilter initWithCoder:]
  -[_HKDeviceFilter .cxx_destruct]
  -[_HKDeviceFilter operatorType]
  -[_HKDeviceFilter devices]
  -[_HKDeviceFilter acceptsDataObject:]


_HKDevicePropertyFilter : _HKFilter
 @property  NSString *keyPath
 @property  NSString *propertyKey
 @property  NSSet *allowedValues

  // class methods
  +[_HKDevicePropertyFilter supportsSecureCoding]
  +[_HKDevicePropertyFilter _keyPathForProperty:]
  +[_HKDevicePropertyFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKDevicePropertyFilter _acceptsOperatorType:]
  +[_HKDevicePropertyFilter filterWithDeviceProperty:allowedValues:]

  // instance methods
  -[_HKDevicePropertyFilter isEqual:]
  -[_HKDevicePropertyFilter copyWithZone:]
  -[_HKDevicePropertyFilter encodeWithCoder:]
  -[_HKDevicePropertyFilter initWithCoder:]
  -[_HKDevicePropertyFilter .cxx_destruct]
  -[_HKDevicePropertyFilter keyPath]
  -[_HKDevicePropertyFilter propertyKey]
  -[_HKDevicePropertyFilter allowedValues]
  -[_HKDevicePropertyFilter acceptsDataObject:]
  -[_HKDevicePropertyFilter _initWithKey:allowedValues:]


_HKAssociationFilter : _HKFilter
 @property  NSUUID *sampleUUID

  // class methods
  +[_HKAssociationFilter supportsSecureCoding]
  +[_HKAssociationFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKAssociationFilter filterWithSampleUUID:]

  // instance methods
  -[_HKAssociationFilter isEqual:]
  -[_HKAssociationFilter copyWithZone:]
  -[_HKAssociationFilter encodeWithCoder:]
  -[_HKAssociationFilter initWithCoder:]
  -[_HKAssociationFilter .cxx_destruct]
  -[_HKAssociationFilter acceptsDataObject:]
  -[_HKAssociationFilter sampleUUID]


_HKAppleWatchSampleFilter : _HKFilter
 @property  BOOL matchAppleWatchSamples

  // class methods
  +[_HKAppleWatchSampleFilter supportsSecureCoding]
  +[_HKAppleWatchSampleFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKAppleWatchSampleFilter filterMatchingAppleWatchSamples:]

  // instance methods
  -[_HKAppleWatchSampleFilter isEqual:]
  -[_HKAppleWatchSampleFilter copyWithZone:]
  -[_HKAppleWatchSampleFilter encodeWithCoder:]
  -[_HKAppleWatchSampleFilter initWithCoder:]
  -[_HKAppleWatchSampleFilter acceptsDataObject:]
  -[_HKAppleWatchSampleFilter matchAppleWatchSamples]


_HKActivityCacheIndexFilter : _HKFilter
 @property  long long cacheIndex
 @property  unsigned long operatorType

  // class methods
  +[_HKActivityCacheIndexFilter supportsSecureCoding]
  +[_HKActivityCacheIndexFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKActivityCacheIndexFilter filterWithOperatorType:activityCacheIndex:]

  // instance methods
  -[_HKActivityCacheIndexFilter isEqual:]
  -[_HKActivityCacheIndexFilter copyWithZone:]
  -[_HKActivityCacheIndexFilter encodeWithCoder:]
  -[_HKActivityCacheIndexFilter initWithCoder:]
  -[_HKActivityCacheIndexFilter operatorType]
  -[_HKActivityCacheIndexFilter cacheIndex]
  -[_HKActivityCacheIndexFilter acceptsDataObject:]


_HKCDADocumentFieldFilter : _HKFilter
 @property  unsigned long operatorType
 @property  NSString *keyPath
 @property  NSString *comparisonValue
 @property  NSRegularExpression *comparisonExpression

  // class methods
  +[_HKCDADocumentFieldFilter supportsSecureCoding]
  +[_HKCDADocumentFieldFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKCDADocumentFieldFilter filterWithOperatorType:keyPath:comparisonValue:]

  // instance methods
  -[_HKCDADocumentFieldFilter copyWithZone:]
  -[_HKCDADocumentFieldFilter encodeWithCoder:]
  -[_HKCDADocumentFieldFilter initWithCoder:]
  -[_HKCDADocumentFieldFilter .cxx_destruct]
  -[_HKCDADocumentFieldFilter operatorType]
  -[_HKCDADocumentFieldFilter keyPath]
  -[_HKCDADocumentFieldFilter acceptsDataObject:]
  -[_HKCDADocumentFieldFilter comparisonValue]
  -[_HKCDADocumentFieldFilter _comparisonExpression]
  -[_HKCDADocumentFieldFilter comparisonExpression]


_HKProductTypeObjectFilter : _HKFilter
 @property  NSString *productType
 @property  unsigned long operatorType

  // class methods
  +[_HKProductTypeObjectFilter supportsSecureCoding]
  +[_HKProductTypeObjectFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKProductTypeObjectFilter _supportsOperatorType:]
  +[_HKProductTypeObjectFilter _filterMatchingProductType:operator:]

  // instance methods
  -[_HKProductTypeObjectFilter isEqual:]
  -[_HKProductTypeObjectFilter copyWithZone:]
  -[_HKProductTypeObjectFilter encodeWithCoder:]
  -[_HKProductTypeObjectFilter initWithCoder:]
  -[_HKProductTypeObjectFilter .cxx_destruct]
  -[_HKProductTypeObjectFilter operatorType]
  -[_HKProductTypeObjectFilter productType]
  -[_HKProductTypeObjectFilter acceptsDataObject:]


_HKDiagnosticTestResultCategoryFilter : _HKFilter
 @property  NSString *comparisonValue
 @property  unsigned long operatorType

  // class methods
  +[_HKDiagnosticTestResultCategoryFilter supportsSecureCoding]
  +[_HKDiagnosticTestResultCategoryFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKDiagnosticTestResultCategoryFilter _supportsOperatorType:]
  +[_HKDiagnosticTestResultCategoryFilter filterWithOperatorType:comparisonValue:]

  // instance methods
  -[_HKDiagnosticTestResultCategoryFilter copyWithZone:]
  -[_HKDiagnosticTestResultCategoryFilter encodeWithCoder:]
  -[_HKDiagnosticTestResultCategoryFilter initWithCoder:]
  -[_HKDiagnosticTestResultCategoryFilter .cxx_destruct]
  -[_HKDiagnosticTestResultCategoryFilter operatorType]
  -[_HKDiagnosticTestResultCategoryFilter acceptsDataObject:]
  -[_HKDiagnosticTestResultCategoryFilter comparisonValue]


_HKMedicalRecordModifiedDateFilter : _HKFilter
 @property  NSDate *comparisonDate
 @property  unsigned long operatorType

  // class methods
  +[_HKMedicalRecordModifiedDateFilter supportsSecureCoding]
  +[_HKMedicalRecordModifiedDateFilter filterWithOperatorType:comparisonDate:]
  +[_HKMedicalRecordModifiedDateFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]

  // instance methods
  -[_HKMedicalRecordModifiedDateFilter isEqual:]
  -[_HKMedicalRecordModifiedDateFilter copyWithZone:]
  -[_HKMedicalRecordModifiedDateFilter encodeWithCoder:]
  -[_HKMedicalRecordModifiedDateFilter initWithCoder:]
  -[_HKMedicalRecordModifiedDateFilter .cxx_destruct]
  -[_HKMedicalRecordModifiedDateFilter operatorType]
  -[_HKMedicalRecordModifiedDateFilter acceptsDataObject:]
  -[_HKMedicalRecordModifiedDateFilter comparisonDate]


_HKMedicalRecordSortDateFilter : _HKFilter
 @property  NSDate *comparisonDate
 @property  unsigned long operatorType

  // class methods
  +[_HKMedicalRecordSortDateFilter supportsSecureCoding]
  +[_HKMedicalRecordSortDateFilter filterWithOperatorType:comparisonDate:]
  +[_HKMedicalRecordSortDateFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]

  // instance methods
  -[_HKMedicalRecordSortDateFilter isEqual:]
  -[_HKMedicalRecordSortDateFilter copyWithZone:]
  -[_HKMedicalRecordSortDateFilter encodeWithCoder:]
  -[_HKMedicalRecordSortDateFilter initWithCoder:]
  -[_HKMedicalRecordSortDateFilter .cxx_destruct]
  -[_HKMedicalRecordSortDateFilter operatorType]
  -[_HKMedicalRecordSortDateFilter acceptsDataObject:]
  -[_HKMedicalRecordSortDateFilter comparisonDate]


_HKConceptIdentifierFilter : _HKFilter
 @property  unsigned long operatorType
 @property  NSString *keyPath
 @property  HKConceptIdentifier *conceptIdentifier

  // class methods
  +[_HKConceptIdentifierFilter supportsSecureCoding]
  +[_HKConceptIdentifierFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKConceptIdentifierFilter filterWithOperatorType:keyPath:conceptIdentifier:]

  // instance methods
  -[_HKConceptIdentifierFilter isEqual:]
  -[_HKConceptIdentifierFilter copyWithZone:]
  -[_HKConceptIdentifierFilter encodeWithCoder:]
  -[_HKConceptIdentifierFilter initWithCoder:]
  -[_HKConceptIdentifierFilter .cxx_destruct]
  -[_HKConceptIdentifierFilter operatorType]
  -[_HKConceptIdentifierFilter keyPath]
  -[_HKConceptIdentifierFilter acceptsDataObject:]
  -[_HKConceptIdentifierFilter conceptIdentifier]


_HKStringFilter : _HKFilter
 @property  NSString *value
 @property  unsigned long operatorType

  // class methods
  +[_HKStringFilter supportsSecureCoding]
  +[_HKStringFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKStringFilter _supportsOperatorType:]
  +[_HKStringFilter _acceptedKeyPath]
  +[_HKStringFilter _acceptsDataType:]

  // instance methods
  -[_HKStringFilter isEqual:]
  -[_HKStringFilter copyWithZone:]
  -[_HKStringFilter encodeWithCoder:]
  -[_HKStringFilter initWithCoder:]
  -[_HKStringFilter .cxx_destruct]
  -[_HKStringFilter operatorType]
  -[_HKStringFilter value]
  -[_HKStringFilter initWithOperatorType:value:]


_HKFHIRResourceIdentifierFilter : _HKStringFilter
 @property  NSString *identifier

  // class methods
  +[_HKFHIRResourceIdentifierFilter _acceptedKeyPath]
  +[_HKFHIRResourceIdentifierFilter _acceptsDataType:]

  // instance methods
  -[_HKFHIRResourceIdentifierFilter identifier]


_HKFHIRResourceResourceTypeFilter : _HKStringFilter
 @property  NSString *resourceType

  // class methods
  +[_HKFHIRResourceResourceTypeFilter _acceptedKeyPath]
  +[_HKFHIRResourceResourceTypeFilter _acceptsDataType:]

  // instance methods
  -[_HKFHIRResourceResourceTypeFilter resourceType]


_HKQuantitySampleCountFilter : _HKFilter
 @property  NSNumber *comparisonCount
 @property  unsigned long operatorType

  // class methods
  +[_HKQuantitySampleCountFilter supportsSecureCoding]
  +[_HKQuantitySampleCountFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKQuantitySampleCountFilter filterWithOperatorType:comparisonCount:]

  // instance methods
  -[_HKQuantitySampleCountFilter isEqual:]
  -[_HKQuantitySampleCountFilter copyWithZone:]
  -[_HKQuantitySampleCountFilter encodeWithCoder:]
  -[_HKQuantitySampleCountFilter initWithCoder:]
  -[_HKQuantitySampleCountFilter .cxx_destruct]
  -[_HKQuantitySampleCountFilter operatorType]
  -[_HKQuantitySampleCountFilter acceptsDataObject:]
  -[_HKQuantitySampleCountFilter comparisonCount]


_HKDiscreteQuantitySampleQuantityFilter : _HKFilter
 @property  NSString *keyPath
 @property  unsigned long operatorType
 @property  HKQuantityType *quantityType
 @property  HKQuantity *comparisonQuantity

  // class methods
  +[_HKDiscreteQuantitySampleQuantityFilter supportsSecureCoding]
  +[_HKDiscreteQuantitySampleQuantityFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKDiscreteQuantitySampleQuantityFilter _allowedKeyPaths]
  +[_HKDiscreteQuantitySampleQuantityFilter filterForKeyPath:predicateOperatorType:comparisonQuantity:quantityType:]

  // instance methods
  -[_HKDiscreteQuantitySampleQuantityFilter isEqual:]
  -[_HKDiscreteQuantitySampleQuantityFilter copyWithZone:]
  -[_HKDiscreteQuantitySampleQuantityFilter encodeWithCoder:]
  -[_HKDiscreteQuantitySampleQuantityFilter initWithCoder:]
  -[_HKDiscreteQuantitySampleQuantityFilter .cxx_destruct]
  -[_HKDiscreteQuantitySampleQuantityFilter operatorType]
  -[_HKDiscreteQuantitySampleQuantityFilter keyPath]
  -[_HKDiscreteQuantitySampleQuantityFilter quantityType]
  -[_HKDiscreteQuantitySampleQuantityFilter acceptsDataObject:]
  -[_HKDiscreteQuantitySampleQuantityFilter comparisonQuantity]
  -[_HKDiscreteQuantitySampleQuantityFilter _quantityFromQuantitySample:]


_HKDiscreteQuantitySampleMostRecentDateFilter : _HKFilter
 @property  NSString *keyPath
 @property  unsigned long operatorType
 @property  NSDate *comparisonDate

  // class methods
  +[_HKDiscreteQuantitySampleMostRecentDateFilter supportsSecureCoding]
  +[_HKDiscreteQuantitySampleMostRecentDateFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKDiscreteQuantitySampleMostRecentDateFilter filterForKeyPath:predicateOperatorType:comparisonDate:]

  // instance methods
  -[_HKDiscreteQuantitySampleMostRecentDateFilter isEqual:]
  -[_HKDiscreteQuantitySampleMostRecentDateFilter copyWithZone:]
  -[_HKDiscreteQuantitySampleMostRecentDateFilter encodeWithCoder:]
  -[_HKDiscreteQuantitySampleMostRecentDateFilter initWithCoder:]
  -[_HKDiscreteQuantitySampleMostRecentDateFilter .cxx_destruct]
  -[_HKDiscreteQuantitySampleMostRecentDateFilter operatorType]
  -[_HKDiscreteQuantitySampleMostRecentDateFilter keyPath]
  -[_HKDiscreteQuantitySampleMostRecentDateFilter acceptsDataObject:]
  -[_HKDiscreteQuantitySampleMostRecentDateFilter comparisonDate]
  -[_HKDiscreteQuantitySampleMostRecentDateFilter _targetDateFromQuantitySample:]


_HKDiscreteQuantitySampleMostRecentDurationFilter : _HKFilter
 @property  unsigned long operatorType
 @property  NSNumber *comparisonValue

  // class methods
  +[_HKDiscreteQuantitySampleMostRecentDurationFilter supportsSecureCoding]
  +[_HKDiscreteQuantitySampleMostRecentDurationFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKDiscreteQuantitySampleMostRecentDurationFilter filterWithOperatorType:comparisonValue:]

  // instance methods
  -[_HKDiscreteQuantitySampleMostRecentDurationFilter isEqual:]
  -[_HKDiscreteQuantitySampleMostRecentDurationFilter copyWithZone:]
  -[_HKDiscreteQuantitySampleMostRecentDurationFilter encodeWithCoder:]
  -[_HKDiscreteQuantitySampleMostRecentDurationFilter initWithCoder:]
  -[_HKDiscreteQuantitySampleMostRecentDurationFilter .cxx_destruct]
  -[_HKDiscreteQuantitySampleMostRecentDurationFilter operatorType]
  -[_HKDiscreteQuantitySampleMostRecentDurationFilter acceptsDataObject:]
  -[_HKDiscreteQuantitySampleMostRecentDurationFilter comparisonValue]


_HKOSBuildOriginFilter : _HKFilter
 @property  NSString *comparisonOSBuild
 @property  unsigned long operatorType

  // class methods
  +[_HKOSBuildOriginFilter supportsSecureCoding]
  +[_HKOSBuildOriginFilter filterForKeyPath:predicateOperatorType:value:dataTypes:]
  +[_HKOSBuildOriginFilter filterWithOperatorType:comparisonOSBuild:]

  // instance methods
  -[_HKOSBuildOriginFilter isEqual:]
  -[_HKOSBuildOriginFilter copyWithZone:]
  -[_HKOSBuildOriginFilter encodeWithCoder:]
  -[_HKOSBuildOriginFilter initWithCoder:]
  -[_HKOSBuildOriginFilter .cxx_destruct]
  -[_HKOSBuildOriginFilter operatorType]
  -[_HKOSBuildOriginFilter acceptsDataObject:]
  -[_HKOSBuildOriginFilter comparisonOSBuild]


HKUnknownRecord : HKMedicalRecord <NSSecureCoding, NSCopying>
 @property  HKUnknownRecordType *unknownRecordType
 @property  NSString *displayName

  // class methods
  +[HKUnknownRecord supportsSecureCoding]
  +[HKUnknownRecord supportsEquivalence]
  +[HKUnknownRecord _isConcreteObjectClass]
  +[HKUnknownRecord defaultDisplayString]
  +[HKUnknownRecord _newUnknownRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:displayName:config:]
  +[HKUnknownRecord unknownRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:displayName:]
  +[HKUnknownRecord unknownRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:displayName:]

  // instance methods
  -[HKUnknownRecord init]
  -[HKUnknownRecord copyWithZone:]
  -[HKUnknownRecord encodeWithCoder:]
  -[HKUnknownRecord initWithCoder:]
  -[HKUnknownRecord .cxx_destruct]
  -[HKUnknownRecord displayName]
  -[HKUnknownRecord _setDisplayName:]
  -[HKUnknownRecord isEquivalent:]
  -[HKUnknownRecord _validateConfigurationWithOptions:]
  -[HKUnknownRecord fallbackDisplayString]
  -[HKUnknownRecord unknownRecordType]


HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionEqualsRule : HKFeatureAvailabilityBaseRule <HKFeatureAvailabilityRule>
 @property  {?=qqq} targetVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionEqualsRule ruleIdentifier]

  // instance methods
  -[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionEqualsRule targetVersion]
  -[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionEqualsRule setTargetVersion:]
  -[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionEqualsRule evaluate]
  -[HKFeatureAvailabilityActiveWatchAtrialFibrillationDetectionVersionEqualsRule processUserInfo:]


_HKSampleQueryUtility : NSObject /usr/lib/libc++.1.dylib
 @property  @? updateHandler
 @property  BOOL sortStartDateAscending

  // instance methods
  -[_HKSampleQueryUtility init]
  -[_HKSampleQueryUtility .cxx_destruct]
  -[_HKSampleQueryUtility stop]
  -[_HKSampleQueryUtility execute]
  -[_HKSampleQueryUtility setUpdateHandler:]
  -[_HKSampleQueryUtility updateHandler]
  -[_HKSampleQueryUtility initWithHealthStore:sampleType:predicate:resultsHandler:]
  -[_HKSampleQueryUtility setSortStartDateAscending:]
  -[_HKSampleQueryUtility setupQueryWithCompletionHandler:]
  -[_HKSampleQueryUtility initWithHealthStore:sampleType:predicate:completionHandler:updateHandler:]
  -[_HKSampleQueryUtility handleAddedObjects:deletedObjects:queryAnchor:error:resultsHandler:]
  -[_HKSampleQueryUtility initWithHealthStore:sampleType:predicate:completionHandler:]
  -[_HKSampleQueryUtility sortStartDateAscending]


HKAllergyRecord : HKMedicalRecord <HKConceptIndexable, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *UUID
 @property  NSLocale *locale
 @property  HKAllergyRecordType *allergyRecordType
 @property  HKConcept *allergy
 @property  NSArray *allergyCodings
 @property  NSString *asserter
 @property  HKConcept *criticality
 @property  HKMedicalCoding *criticalityCoding
 @property  HKMedicalDate *lastOccurenceDate
 @property  HKMedicalDate *onsetDate
 @property  NSArray *reactions
 @property  HKMedicalDate *recordedDate
 @property  HKConcept *status
 @property  HKMedicalCoding *statusCoding

  // class methods
  +[HKAllergyRecord supportsSecureCoding]
  +[HKAllergyRecord supportsEquivalence]
  +[HKAllergyRecord _isConcreteObjectClass]
  +[HKAllergyRecord indexableConceptKeyPaths]
  +[HKAllergyRecord cachedConceptRelationshipKeyPaths]
  +[HKAllergyRecord defaultDisplayString]
  +[HKAllergyRecord allergyCodingsPreferredSystems]
  +[HKAllergyRecord allergyRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:allergyCodings:onsetDate:asserter:reactions:criticalityCoding:lastOccurenceDate:recordedDate:statusCoding:]
  +[HKAllergyRecord allergyRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:allergyCodings:onsetDate:asserter:reactions:criticalityCoding:lastOccurenceDate:recordedDate:statusCoding:]
  +[HKAllergyRecord criticalityCodingPreferredSystems]
  +[HKAllergyRecord statusCodingPreferredSystems]
  +[HKAllergyRecord _newAllergyRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:allergyCodings:onsetDate:asserter:reactions:criticalityCoding:lastOccurenceDate:recordedDate:statusCoding:config:]

  // instance methods
  -[HKAllergyRecord init]
  -[HKAllergyRecord copyWithZone:]
  -[HKAllergyRecord encodeWithCoder:]
  -[HKAllergyRecord initWithCoder:]
  -[HKAllergyRecord .cxx_destruct]
  -[HKAllergyRecord status]
  -[HKAllergyRecord _setStatus:]
  -[HKAllergyRecord statusCoding]
  -[HKAllergyRecord isEquivalent:]
  -[HKAllergyRecord _validateConfigurationWithOptions:]
  -[HKAllergyRecord statusCodingCollection]
  -[HKAllergyRecord statusCodingContext]
  -[HKAllergyRecord _setStatusCoding:]
  -[HKAllergyRecord codingsForKeyPath:error:]
  -[HKAllergyRecord applyConcepts:forKeyPath:error:]
  -[HKAllergyRecord medicalRecordCodings]
  -[HKAllergyRecord indexKeywords]
  -[HKAllergyRecord medicalRecordPreferredSystems]
  -[HKAllergyRecord allergyCodings]
  -[HKAllergyRecord allergyRecordType]
  -[HKAllergyRecord criticalityCoding]
  -[HKAllergyRecord reactions]
  -[HKAllergyRecord _setAllergy:]
  -[HKAllergyRecord _setCriticality:]
  -[HKAllergyRecord allergyCodingsTasks]
  -[HKAllergyRecord criticalityCodingTasks]
  -[HKAllergyRecord statusCodingTasks]
  -[HKAllergyRecord asserter]
  -[HKAllergyRecord _setAsserter:]
  -[HKAllergyRecord onsetDate]
  -[HKAllergyRecord recordedDate]
  -[HKAllergyRecord _setRecordedDate:]
  -[HKAllergyRecord lastOccurenceDate]
  -[HKAllergyRecord allergy]
  -[HKAllergyRecord criticality]
  -[HKAllergyRecord allergyCodingsCollection]
  -[HKAllergyRecord allergyCodingsContext]
  -[HKAllergyRecord criticalityCodingCollection]
  -[HKAllergyRecord criticalityCodingContext]
  -[HKAllergyRecord _setAllergyCodings:]
  -[HKAllergyRecord _setOnsetDate:]
  -[HKAllergyRecord _setReactions:]
  -[HKAllergyRecord _setCriticalityCoding:]
  -[HKAllergyRecord _setLastOccurenceDate:]


HKHealthWrapCodableValue : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasBytes
 @property  NSData *bytes
 @property  BOOL hasString
 @property  NSString *string
 @property  BOOL hasInteger
 @property  long long integer

  // instance methods
  -[HKHealthWrapCodableValue string]
  -[HKHealthWrapCodableValue isEqual:]
  -[HKHealthWrapCodableValue bytes]
  -[HKHealthWrapCodableValue copyWithZone:]
  -[HKHealthWrapCodableValue type]
  -[HKHealthWrapCodableValue setType:]
  -[HKHealthWrapCodableValue setString:]
  -[HKHealthWrapCodableValue .cxx_destruct]
  -[HKHealthWrapCodableValue dictionaryRepresentation]
  -[HKHealthWrapCodableValue writeTo:]
  -[HKHealthWrapCodableValue mergeFrom:]
  -[HKHealthWrapCodableValue readFrom:]
  -[HKHealthWrapCodableValue copyTo:]
  -[HKHealthWrapCodableValue typeAsString:]
  -[HKHealthWrapCodableValue StringAsType:]
  -[HKHealthWrapCodableValue setHasType:]
  -[HKHealthWrapCodableValue hasType]
  -[HKHealthWrapCodableValue setBytes:]
  -[HKHealthWrapCodableValue hasBytes]
  -[HKHealthWrapCodableValue hasString]
  -[HKHealthWrapCodableValue setInteger:]
  -[HKHealthWrapCodableValue setHasInteger:]
  -[HKHealthWrapCodableValue hasInteger]
  -[HKHealthWrapCodableValue integer]


HKSampleCountQuery : HKQuery <HKSampleCountQueryClientInterface>
 @property  NSSet *sampleQueryDescriptions
 @property  NSSet *sampleTypes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSampleCountQuery configurationClass]
  +[HKSampleCountQuery clientInterfaceProtocol]
  +[HKSampleCountQuery configureClientInterface:]

  // instance methods
  -[HKSampleCountQuery .cxx_destruct]
  -[HKSampleCountQuery queue_validate]
  -[HKSampleCountQuery queue_deliverError:]
  -[HKSampleCountQuery queue_queryDidDeactivate:]
  -[HKSampleCountQuery queue_populateConfiguration:]
  -[HKSampleCountQuery sampleQueryDescriptions]
  -[HKSampleCountQuery sampleTypes]
  -[HKSampleCountQuery initWithSampleQueryDescriptions:resultsHandler:]
  -[HKSampleCountQuery initWithSampleTypes:predicate:resultsHandler:]
  -[HKSampleCountQuery client_deliverSampleCountDictionary:forQuery:]
  -[HKSampleCountQuery initWithSampleType:predicate:resultsHandler:]


_HKSampleCountQueryServerConfiguration : HKQueryServerConfiguration <NSSecureCoding>
 @property  NSSet *sampleQueryDescriptions

  // class methods
  +[_HKSampleCountQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKSampleCountQueryServerConfiguration copyWithZone:]
  -[_HKSampleCountQueryServerConfiguration encodeWithCoder:]
  -[_HKSampleCountQueryServerConfiguration initWithCoder:]
  -[_HKSampleCountQueryServerConfiguration .cxx_destruct]
  -[_HKSampleCountQueryServerConfiguration sampleQueryDescriptions]
  -[_HKSampleCountQueryServerConfiguration setSampleQueryDescriptions:]


HKJSONVisitor : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *currentKeyPath
 @property  NSString *lastKeyPathComponent
 @property  NSArray *allKeyPathComponents
 @property  long long currentIndex

  // class methods
  +[HKJSONVisitor visitorWithJSONObject:delegate:error:]

  // instance methods
  -[HKJSONVisitor .cxx_destruct]
  -[HKJSONVisitor valueForKeyPath:]
  -[HKJSONVisitor currentIndex]
  -[HKJSONVisitor _traverseJSONObject:]
  -[HKJSONVisitor _visitDictionary:]
  -[HKJSONVisitor _visitArray:]
  -[HKJSONVisitor _visitPrimitive:]
  -[HKJSONVisitor traverseJSONObject]
  -[HKJSONVisitor lastKeyPathComponent]
  -[HKJSONVisitor currentKeyPath]
  -[HKJSONVisitor allKeyPathComponents]


_HKEmergencyContactWrapper : NSObject /usr/lib/libc++.1.dylib
 @property  _HKEmergencyContact *contact

  // instance methods
  -[_HKEmergencyContactWrapper isEqual:]
  -[_HKEmergencyContactWrapper .cxx_destruct]
  -[_HKEmergencyContactWrapper contact]
  -[_HKEmergencyContactWrapper setContact:]


HKNanoSyncPairedDevicesSnapshot : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  HKNanoSyncPairedDeviceInfo *activeDeviceInfo
 @property  NSSet *allDeviceInfos

  // class methods
  +[HKNanoSyncPairedDevicesSnapshot supportsSecureCoding]

  // instance methods
  -[HKNanoSyncPairedDevicesSnapshot isEqual:]
  -[HKNanoSyncPairedDevicesSnapshot copyWithZone:]
  -[HKNanoSyncPairedDevicesSnapshot encodeWithCoder:]
  -[HKNanoSyncPairedDevicesSnapshot initWithCoder:]
  -[HKNanoSyncPairedDevicesSnapshot .cxx_destruct]
  -[HKNanoSyncPairedDevicesSnapshot initWithPairedDeviceInfos:]
  -[HKNanoSyncPairedDevicesSnapshot activeDeviceInfo]
  -[HKNanoSyncPairedDevicesSnapshot allDeviceInfos]
  -[HKNanoSyncPairedDevicesSnapshot deviceInfoForSourceBundleIdentifier:]


HKNanoSyncPairedDeviceInfo : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *sourceBundleIdentifier
 @property  NSString *systemBuildVersion
 @property  NSString *productType
 @property  BOOL active
 @property  BOOL restoreComplete
 @property  int protocolVersion

  // class methods
  +[HKNanoSyncPairedDeviceInfo supportsSecureCoding]

  // instance methods
  -[HKNanoSyncPairedDeviceInfo isEqual:]
  -[HKNanoSyncPairedDeviceInfo copyWithZone:]
  -[HKNanoSyncPairedDeviceInfo encodeWithCoder:]
  -[HKNanoSyncPairedDeviceInfo initWithCoder:]
  -[HKNanoSyncPairedDeviceInfo .cxx_destruct]
  -[HKNanoSyncPairedDeviceInfo isActive]
  -[HKNanoSyncPairedDeviceInfo productType]
  -[HKNanoSyncPairedDeviceInfo protocolVersion]
  -[HKNanoSyncPairedDeviceInfo sourceBundleIdentifier]
  -[HKNanoSyncPairedDeviceInfo systemBuildVersion]
  -[HKNanoSyncPairedDeviceInfo isRestoreComplete]
  -[HKNanoSyncPairedDeviceInfo initWithSourceBundleIdentifier:systemBuildVersion:productType:active:restoreComplete:protocolVersion:]


HKHeartRateSummary : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  long long activityCacheIndex
 @property  NSDateInterval *heartRateDateInterval
 @property  HKQuantity *restingHeartRate
 @property  HKQuantity *walkingAverageHeartRate
 @property  HKHeartRateSummaryStatistics *allDayStatistics
 @property  NSArray *workoutStatistics
 @property  NSArray *workoutRecoveryStatistics
 @property  NSArray *breatheStatistics

  // class methods
  +[HKHeartRateSummary supportsSecureCoding]

  // instance methods
  -[HKHeartRateSummary isEqual:]
  -[HKHeartRateSummary encodeWithCoder:]
  -[HKHeartRateSummary initWithCoder:]
  -[HKHeartRateSummary .cxx_destruct]
  -[HKHeartRateSummary activityCacheIndex]
  -[HKHeartRateSummary heartRateDateInterval]
  -[HKHeartRateSummary restingHeartRate]
  -[HKHeartRateSummary walkingAverageHeartRate]
  -[HKHeartRateSummary allDayStatistics]
  -[HKHeartRateSummary workoutStatistics]
  -[HKHeartRateSummary workoutRecoveryStatistics]
  -[HKHeartRateSummary breatheStatistics]
  -[HKHeartRateSummary initWithActivityCacheIndex:heartRateDateInterval:restingHeartRate:walkingAverageHeartRate:allDayStatistics:workoutStatistics:workoutRecoveryStatistics:breatheStatistics:]
  -[HKHeartRateSummary setActivityCacheIndex:]
  -[HKHeartRateSummary setHeartRateDateInterval:]
  -[HKHeartRateSummary setRestingHeartRate:]
  -[HKHeartRateSummary setWalkingAverageHeartRate:]
  -[HKHeartRateSummary setAllDayStatistics:]
  -[HKHeartRateSummary setWorkoutStatistics:]
  -[HKHeartRateSummary setWorkoutRecoveryStatistics:]
  -[HKHeartRateSummary setBreatheStatistics:]


HKMedicationRecordType : HKMedicalType
  // class methods
  +[HKMedicationRecordType allTypes]
  +[HKMedicationRecordType medicationRecordType]


HKDeviceQuery : HKQuery <HKDeviceQueryClientInterface>
 @property  @? resultsHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKDeviceQuery clientInterfaceProtocol]
  +[HKDeviceQuery configureClientInterface:]

  // instance methods
  -[HKDeviceQuery .cxx_destruct]
  -[HKDeviceQuery resultsHandler]
  -[HKDeviceQuery queue_deliverError:]
  -[HKDeviceQuery queue_queryDidDeactivate:]
  -[HKDeviceQuery clientRemote_deliverDevices:done:reset:query:]
  -[HKDeviceQuery initWithObjectType:predicate:resultsHandler:]


HKSleepQuery : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HKSleepQuery sleepDaysQueryWithStartDate:endDate:calendar:predicate:healthStore:completion:]
  +[HKSleepQuery sleepDaysWithStartDate:endDate:calendar:healthStore:completion:]


HKVaccinationRecord : HKMedicalRecord <HKConceptIndexable, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *UUID
 @property  NSLocale *locale
 @property  HKVaccinationRecordType *vaccinationRecordType
 @property  HKMedicalDate *administrationDate
 @property  HKConcept *bodySite
 @property  NSArray *bodySiteCodings
 @property  NSString *doseNumber
 @property  NSString *doseQuantity
 @property  HKMedicalDate *expirationDate
 @property  BOOL notGiven
 @property  BOOL patientReported
 @property  NSString *performer
 @property  NSString *reaction
 @property  NSArray *reasons
 @property  NSArray *reasonsCodings
 @property  NSArray *reasonsNotGiven
 @property  NSArray *reasonsNotGivenCodings
 @property  HKConcept *route
 @property  NSArray *routeCodings
 @property  HKConcept *status
 @property  HKMedicalCoding *statusCoding
 @property  HKConcept *vaccination
 @property  NSArray *vaccinationCodings

  // class methods
  +[HKVaccinationRecord supportsSecureCoding]
  +[HKVaccinationRecord supportsEquivalence]
  +[HKVaccinationRecord _isConcreteObjectClass]
  +[HKVaccinationRecord indexableConceptKeyPaths]
  +[HKVaccinationRecord cachedConceptRelationshipKeyPaths]
  +[HKVaccinationRecord defaultDisplayString]
  +[HKVaccinationRecord vaccinationCodingsPreferredSystems]
  +[HKVaccinationRecord statusCodingPreferredSystems]
  +[HKVaccinationRecord bodySiteCodingsPreferredSystems]
  +[HKVaccinationRecord reasonsCodingsPreferredSystems]
  +[HKVaccinationRecord reasonsNotGivenCodingsPreferredSystems]
  +[HKVaccinationRecord routeCodingsPreferredSystems]
  +[HKVaccinationRecord vaccinationRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:vaccinationCodings:expirationDate:doseNumber:doseQuantity:performer:bodySiteCodings:reaction:notGiven:administrationDate:statusCoding:patientReported:routeCodings:reasonsCodings:reasonsNotGivenCodings:]
  +[HKVaccinationRecord vaccinationRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:vaccinationCodings:expirationDate:doseNumber:doseQuantity:performer:bodySiteCodings:reaction:notGiven:administrationDate:statusCoding:patientReported:routeCodings:reasonsCodings:reasonsNotGivenCodings:]
  +[HKVaccinationRecord _newVaccinationRecordWithType:note:enteredInError:modifiedDate:FHIRIdentifier:locale:extractionVersion:device:metadata:sortDate:vaccinationCodings:expirationDate:doseNumber:doseQuantity:performer:bodySiteCodings:reaction:notGiven:administrationDate:statusCoding:patientReported:routeCodings:reasonsCodings:reasonsNotGivenCodings:config:]

  // instance methods
  -[HKVaccinationRecord init]
  -[HKVaccinationRecord copyWithZone:]
  -[HKVaccinationRecord encodeWithCoder:]
  -[HKVaccinationRecord initWithCoder:]
  -[HKVaccinationRecord .cxx_destruct]
  -[HKVaccinationRecord status]
  -[HKVaccinationRecord expirationDate]
  -[HKVaccinationRecord _setExpirationDate:]
  -[HKVaccinationRecord reasons]
  -[HKVaccinationRecord route]
  -[HKVaccinationRecord _setStatus:]
  -[HKVaccinationRecord statusCoding]
  -[HKVaccinationRecord isEquivalent:]
  -[HKVaccinationRecord _validateConfigurationWithOptions:]
  -[HKVaccinationRecord statusCodingCollection]
  -[HKVaccinationRecord statusCodingContext]
  -[HKVaccinationRecord _setStatusCoding:]
  -[HKVaccinationRecord codingsForKeyPath:error:]
  -[HKVaccinationRecord applyConcepts:forKeyPath:error:]
  -[HKVaccinationRecord medicalRecordCodings]
  -[HKVaccinationRecord indexKeywords]
  -[HKVaccinationRecord medicalRecordPreferredSystems]
  -[HKVaccinationRecord vaccinationCodings]
  -[HKVaccinationRecord bodySiteCodings]
  -[HKVaccinationRecord routeCodings]
  -[HKVaccinationRecord reasonsCodings]
  -[HKVaccinationRecord reasonsNotGivenCodings]
  -[HKVaccinationRecord _setVaccination:]
  -[HKVaccinationRecord _setBodySite:]
  -[HKVaccinationRecord _setRoute:]
  -[HKVaccinationRecord _setReasons:]
  -[HKVaccinationRecord _setReasonsNotGiven:]
  -[HKVaccinationRecord vaccinationRecordType]
  -[HKVaccinationRecord bodySite]
  -[HKVaccinationRecord bodySiteCodingsCollection]
  -[HKVaccinationRecord bodySiteCodingsContext]
  -[HKVaccinationRecord _setBodySiteCodings:]
  -[HKVaccinationRecord statusCodingTasks]
  -[HKVaccinationRecord bodySiteCodingsTasks]
  -[HKVaccinationRecord reasonsCodingsTasks]
  -[HKVaccinationRecord reasonsNotGivenCodingsTasks]
  -[HKVaccinationRecord routeCodingsTasks]
  -[HKVaccinationRecord vaccinationCodingsTasks]
  -[HKVaccinationRecord doseNumber]
  -[HKVaccinationRecord doseQuantity]
  -[HKVaccinationRecord performer]
  -[HKVaccinationRecord reaction]
  -[HKVaccinationRecord notGiven]
  -[HKVaccinationRecord administrationDate]
  -[HKVaccinationRecord patientReported]
  -[HKVaccinationRecord vaccination]
  -[HKVaccinationRecord reasonsNotGiven]
  -[HKVaccinationRecord vaccinationCodingsCollection]
  -[HKVaccinationRecord vaccinationCodingsContext]
  -[HKVaccinationRecord routeCodingsCollection]
  -[HKVaccinationRecord routeCodingsContext]
  -[HKVaccinationRecord reasonsCodingsCollection]
  -[HKVaccinationRecord reasonsCodingsContexts]
  -[HKVaccinationRecord reasonsNotGivenCodingsCollection]
  -[HKVaccinationRecord reasonsNotGivenCodingsContexts]
  -[HKVaccinationRecord _setVaccinationCodings:]
  -[HKVaccinationRecord _setDoseNumber:]
  -[HKVaccinationRecord _setDoseQuantity:]
  -[HKVaccinationRecord _setPerformer:]
  -[HKVaccinationRecord _setReaction:]
  -[HKVaccinationRecord _setNotGiven:]
  -[HKVaccinationRecord _setAdministrationDate:]
  -[HKVaccinationRecord _setPatientReported:]
  -[HKVaccinationRecord _setRouteCodings:]
  -[HKVaccinationRecord _setReasonsCodings:]
  -[HKVaccinationRecord _setReasonsNotGivenCodings:]


HKMedicalDateInterval : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  HKMedicalDate *startDate
 @property  HKMedicalDate *endDate

  // class methods
  +[HKMedicalDateInterval supportsSecureCoding]
  +[HKMedicalDateInterval medicalDateIntervalWithStartDate:]
  +[HKMedicalDateInterval medicalDateIntervalWithEndDate:]
  +[HKMedicalDateInterval medicalDateIntervalWithStartDate:endDate:error:]

  // instance methods
  -[HKMedicalDateInterval isEqual:]
  -[HKMedicalDateInterval copyWithZone:]
  -[HKMedicalDateInterval encodeWithCoder:]
  -[HKMedicalDateInterval initWithCoder:]
  -[HKMedicalDateInterval .cxx_destruct]
  -[HKMedicalDateInterval startDate]
  -[HKMedicalDateInterval endDate]
  -[HKMedicalDateInterval _initWithStartDate:endDate:]


HKHeartRateSummaryStatistics : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSArray *highlightedReadings
 @property  NSDateInterval *dateInterval
 @property  long long numberOfBuckets
 @property  long long numberOfReadings
 @property  NSUUID *sessionUUID

  // class methods
  +[HKHeartRateSummaryStatistics supportsSecureCoding]

  // instance methods
  -[HKHeartRateSummaryStatistics isEqual:]
  -[HKHeartRateSummaryStatistics encodeWithCoder:]
  -[HKHeartRateSummaryStatistics initWithCoder:]
  -[HKHeartRateSummaryStatistics .cxx_destruct]
  -[HKHeartRateSummaryStatistics dateInterval]
  -[HKHeartRateSummaryStatistics _dictionaryRepresentation]
  -[HKHeartRateSummaryStatistics bucketAtIndex:]
  -[HKHeartRateSummaryStatistics sessionUUID]
  -[HKHeartRateSummaryStatistics _bucketAtIndex:createdIfNeeded:]
  -[HKHeartRateSummaryStatistics numberOfReadings]
  -[HKHeartRateSummaryStatistics highlightedReadings]
  -[HKHeartRateSummaryStatistics initWithDateInterval:numberOfBuckets:sessionUUID:]
  -[HKHeartRateSummaryStatistics _setHighlightedReadings:]
  -[HKHeartRateSummaryStatistics addHeartRateInBeatsPerMinute:forTime:]
  -[HKHeartRateSummaryStatistics enumerateBucketsWithBlock:]
  -[HKHeartRateSummaryStatistics numberOfBuckets]
  -[HKHeartRateSummaryStatistics _bucketsDescription]


HKHeartRateSummaryWorkoutStatistics : HKHeartRateSummaryStatistics
 @property  HKQuantity *averageHeartRate
 @property  HKQuantity *maximumHeartRate
 @property  unsigned long workoutActivityType

  // class methods
  +[HKHeartRateSummaryWorkoutStatistics supportsSecureCoding]

  // instance methods
  -[HKHeartRateSummaryWorkoutStatistics isEqual:]
  -[HKHeartRateSummaryWorkoutStatistics encodeWithCoder:]
  -[HKHeartRateSummaryWorkoutStatistics initWithCoder:]
  -[HKHeartRateSummaryWorkoutStatistics .cxx_destruct]
  -[HKHeartRateSummaryWorkoutStatistics workoutActivityType]
  -[HKHeartRateSummaryWorkoutStatistics averageHeartRate]
  -[HKHeartRateSummaryWorkoutStatistics maximumHeartRate]
  -[HKHeartRateSummaryWorkoutStatistics initWithDateInterval:numberOfBuckets:workoutUUID:workoutActivityType:]
  -[HKHeartRateSummaryWorkoutStatistics _setAverageHeartRate:]
  -[HKHeartRateSummaryWorkoutStatistics _setMaximumHeartRate:]


HKHeartRateSummaryWorkoutRecoveryStatistics : HKHeartRateSummaryStatistics
 @property  NSDictionary *perMinuteReadings
 @property  unsigned long workoutActivityType

  // class methods
  +[HKHeartRateSummaryWorkoutRecoveryStatistics supportsSecureCoding]

  // instance methods
  -[HKHeartRateSummaryWorkoutRecoveryStatistics isEqual:]
  -[HKHeartRateSummaryWorkoutRecoveryStatistics encodeWithCoder:]
  -[HKHeartRateSummaryWorkoutRecoveryStatistics initWithCoder:]
  -[HKHeartRateSummaryWorkoutRecoveryStatistics .cxx_destruct]
  -[HKHeartRateSummaryWorkoutRecoveryStatistics workoutActivityType]
  -[HKHeartRateSummaryWorkoutRecoveryStatistics initWithDateInterval:numberOfBuckets:workoutUUID:workoutActivityType:]
  -[HKHeartRateSummaryWorkoutRecoveryStatistics perMinuteReadings]
  -[HKHeartRateSummaryWorkoutRecoveryStatistics _setPerMinuteReadings:]


HKHeartRateSummaryBreatheStatistics : HKHeartRateSummaryStatistics
 @property  HKHeartRateSummaryReading *finalReading

  // class methods
  +[HKHeartRateSummaryBreatheStatistics supportsSecureCoding]

  // instance methods
  -[HKHeartRateSummaryBreatheStatistics isEqual:]
  -[HKHeartRateSummaryBreatheStatistics encodeWithCoder:]
  -[HKHeartRateSummaryBreatheStatistics initWithCoder:]
  -[HKHeartRateSummaryBreatheStatistics .cxx_destruct]
  -[HKHeartRateSummaryBreatheStatistics finalReading]
  -[HKHeartRateSummaryBreatheStatistics _setFinalReading:]


HKDocumentQuery : HKQuery <HKDocumentQueryClientInterface>
 @property  @? resultsHandler
 @property  unsigned long limit
 @property  NSArray *sortDescriptors
 @property  BOOL includeDocumentData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKDocumentQuery configurationClass]
  +[HKDocumentQuery clientInterfaceProtocol]

  // instance methods
  -[HKDocumentQuery .cxx_destruct]
  -[HKDocumentQuery sortDescriptors]
  -[HKDocumentQuery limit]
  -[HKDocumentQuery resultsHandler]
  -[HKDocumentQuery setResultsHandler:]
  -[HKDocumentQuery queue_validate]
  -[HKDocumentQuery queue_deliverError:]
  -[HKDocumentQuery queue_queryDidDeactivate:]
  -[HKDocumentQuery queue_populateConfiguration:]
  -[HKDocumentQuery client_deliverDocument:query:]
  -[HKDocumentQuery initWithDocumentType:predicate:limit:sortDescriptors:includeDocumentData:resultsHandler:]
  -[HKDocumentQuery includeDocumentData]


_HKDocumentQueryServerConfiguration : HKQueryServerConfiguration
 @property  NSArray *sortDescriptors
 @property  unsigned long limit
 @property  BOOL includeDocumentData

  // class methods
  +[_HKDocumentQueryServerConfiguration supportsSecureCoding]

  // instance methods
  -[_HKDocumentQueryServerConfiguration copyWithZone:]
  -[_HKDocumentQueryServerConfiguration encodeWithCoder:]
  -[_HKDocumentQueryServerConfiguration initWithCoder:]
  -[_HKDocumentQueryServerConfiguration .cxx_destruct]
  -[_HKDocumentQueryServerConfiguration sortDescriptors]
  -[_HKDocumentQueryServerConfiguration setSortDescriptors:]
  -[_HKDocumentQueryServerConfiguration limit]
  -[_HKDocumentQueryServerConfiguration setLimit:]
  -[_HKDocumentQueryServerConfiguration setIncludeDocumentData:]
  -[_HKDocumentQueryServerConfiguration includeDocumentData]


_HKDaemonPreferences : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_HKDaemonPreferences setValue:forKey:]
  +[_HKDaemonPreferences valueForKey:]
  +[_HKDaemonPreferences _boolValueForKey:]
  +[_HKDaemonPreferences usingDemoDataDatabase]
  +[_HKDaemonPreferences isGenerateDemoDataSet]
  +[_HKDaemonPreferences isStoreDemoModeSet]
  +[_HKDaemonPreferences _setPreferenceValue:forKey:]
  +[_HKDaemonPreferences _safePreferenceForKey:expectedReturnClass:]
  +[_HKDaemonPreferences shouldGenerateDemoData]
  +[_HKDaemonPreferences synchronizePreferencesWithWatch:]


_HKWorkoutRouteStore : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_HKWorkoutRouteStore init]
  -[_HKWorkoutRouteStore .cxx_destruct]
  -[_HKWorkoutRouteStore samples]
  -[_HKWorkoutRouteStore initWithHealthStore:]
  -[_HKWorkoutRouteStore _queue_checkAndReturnIfLocationsLoaded]
  -[_HKWorkoutRouteStore _queue_locations]
  -[_HKWorkoutRouteStore _queue_addWorkoutRoutes:]
  -[_HKWorkoutRouteStore _fetchAllLocationsFromSeriesSample:]
  -[_HKWorkoutRouteStore _setLocations:forUUID:]
  -[_HKWorkoutRouteStore containsSameValuesAs:]
  -[_HKWorkoutRouteStore setWorkoutRoutes:]
  -[_HKWorkoutRouteStore addWorkoutRoutes:]
  -[_HKWorkoutRouteStore fetchAllLocationsWithCompletion:]


HKBeatToBeatInstantaneousBPM : NSObject /usr/lib/libc++.1.dylib
 @property  double bpm
 @property  double time

  // instance methods
  -[HKBeatToBeatInstantaneousBPM time]
  -[HKBeatToBeatInstantaneousBPM initWithBPM:time:]
  -[HKBeatToBeatInstantaneousBPM bpm]


HKHeartRateVariabilityUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HKHeartRateVariabilityUtilities _hrvType]
  +[HKHeartRateVariabilityUtilities queryForParentSequenceOfHRV:healthStore:completion:]
  +[HKHeartRateVariabilityUtilities _sequenceType]
  +[HKHeartRateVariabilityUtilities deleteHRVSample:healthStore:predicate:options:completion:]
  +[HKHeartRateVariabilityUtilities deleteHRVSamplesFromStartDate:endDate:predicate:options:healthStore:completion:]
  +[HKHeartRateVariabilityUtilities instantaneousBPMsForHeartbeatSeriesSample:]


HKConceptRelationship : NSObject /usr/lib/libc++.1.dylib <NSObject, NSCopying, NSSecureCoding>
 @property  long long identifier
 @property  HKConcept *owner
 @property  NSString *name
 @property  HKConcept *destination
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKConceptRelationship supportsSecureCoding]

  // instance methods
  -[HKConceptRelationship init]
  -[HKConceptRelationship isEqual:]
  -[HKConceptRelationship name]
  -[HKConceptRelationship copyWithZone:]
  -[HKConceptRelationship encodeWithCoder:]
  -[HKConceptRelationship initWithCoder:]
  -[HKConceptRelationship .cxx_destruct]
  -[HKConceptRelationship identifier]
  -[HKConceptRelationship setOwner:]
  -[HKConceptRelationship owner]
  -[HKConceptRelationship destination]
  -[HKConceptRelationship initWithIdentifier:owner:name:destination:]
  -[HKConceptRelationship initWithOwner:name:destination:]


HKHealthServicesManager : NSObject /usr/lib/libc++.1.dylib <HKHealthServicesClientInterface>
 @property  HKHealthStore *healthStore
 @property  NSMutableDictionary *discoveries
 @property  NSMutableSet *discoveriesEnded
 @property  NSMutableDictionary *sessions
 @property  NSMutableSet *sessionsEnded
 @property  @? bluetoothStatusHandler
 @property  HKHealthServicesManager *healthServicesManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKHealthServicesManager .cxx_destruct]
  -[HKHealthServicesManager sessions]
  -[HKHealthServicesManager healthStore]
  -[HKHealthServicesManager setHealthStore:]
  -[HKHealthServicesManager setSessions:]
  -[HKHealthServicesManager healthServicesManager]
  -[HKHealthServicesManager startHealthServiceDiscovery:withHandler:]
  -[HKHealthServicesManager endHealthServiceDiscovery:]
  -[HKHealthServicesManager startHealthServiceSession:withHandler:]
  -[HKHealthServicesManager endHealthServiceSession:]
  -[HKHealthServicesManager registerPeripheralIdentifier:name:services:withCompletion:]
  -[HKHealthServicesManager unregisterPeripheralIdentifier:withCompletion:]
  -[HKHealthServicesManager healthServicePairingsWithHandler:]
  -[HKHealthServicesManager healthPeripheralsWithFilter:handler:]
  -[HKHealthServicesManager addHealthServicePairing:withCompletion:]
  -[HKHealthServicesManager removeHealthServicePairing:withCompletion:]
  -[HKHealthServicesManager initWithHealthStore:]
  -[HKHealthServicesManager clientQueue_handleInterruption]
  -[HKHealthServicesManager clientRemote_deliverBluetoothStatus:withError:]
  -[HKHealthServicesManager clientRemote_deliverDiscoveryHealthService:toClient:finished:withError:]
  -[HKHealthServicesManager clientRemote_deliverSessionHealthServiceStatus:toClient:finished:withError:]
  -[HKHealthServicesManager clientRemote_deliverSessionCharacteristics:forService:toClient:withError:]
  -[HKHealthServicesManager _startHealthServiceExtendedDiscovery:withHandler:]
  -[HKHealthServicesManager discoveries]
  -[HKHealthServicesManager setDiscoveries:]
  -[HKHealthServicesManager _addEndedDiscovery:]
  -[HKHealthServicesManager _addEndedSession:]
  -[HKHealthServicesManager discoveriesEnded]
  -[HKHealthServicesManager setDiscoveriesEnded:]
  -[HKHealthServicesManager sessionsEnded]
  -[HKHealthServicesManager setSessionsEnded:]
  -[HKHealthServicesManager startBluetoothStatusUpdates:]
  -[HKHealthServicesManager endBluetoothStatusUpdates]
  -[HKHealthServicesManager _fetchSupportedServiceIDsWithCompletion:]
  -[HKHealthServicesManager startAllHealthServicesDiscoveryWithHandler:]
  -[HKHealthServicesManager activeHealthServiceDiscoveries]
  -[HKHealthServicesManager activeHealthServiceSessions]
  -[HKHealthServicesManager getEnabledStatusForPeripheral:withCompletion:]
  -[HKHealthServicesManager setEnabledStatus:forPeripheral:withCompletion:]
  -[HKHealthServicesManager getHealthServicePropertyNamesWithHandler:]
  -[HKHealthServicesManager getHealthServiceProperty:forSession:withHandler:]
  -[HKHealthServicesManager performHealthServiceOperation:onSession:withParameters:completion:]
  -[HKHealthServicesManager bluetoothStatusHandler]
  -[HKHealthServicesManager setBluetoothStatusHandler:]


HKMobileCountryCodeManager : NSObject /usr/lib/libc++.1.dylib
 @property  CoreTelephonyClient *coreTelephonyClient
 @property  ^{__CTServerConnection=} coreTelephonyServerConnection
 @property  NSObject<OS_dispatch_queue> *backgroundQueryQueue
 @property  RadiosPreferences *radiosPreferences

  // instance methods
  -[HKMobileCountryCodeManager init]
  -[HKMobileCountryCodeManager .cxx_destruct]
  -[HKMobileCountryCodeManager coreTelephonyClient]
  -[HKMobileCountryCodeManager setCoreTelephonyClient:]
  -[HKMobileCountryCodeManager currentMobileCountryCodeFromCellularWithCompletion:]
  -[HKMobileCountryCodeManager radiosPreferences]
  -[HKMobileCountryCodeManager coreTelephonyServerConnection]
  -[HKMobileCountryCodeManager setCoreTelephonyServerConnection:]
  -[HKMobileCountryCodeManager backgroundQueryQueue]
  -[HKMobileCountryCodeManager setBackgroundQueryQueue:]


HKSourceRevision : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  HKSource *source
 @property  NSString *version
 @property  NSString *productType
 @property  {?=qqq} operatingSystemVersion

  // class methods
  +[HKSourceRevision supportsSecureCoding]

  // instance methods
  -[HKSourceRevision init]
  -[HKSourceRevision isEqual:]
  -[HKSourceRevision copyWithZone:]
  -[HKSourceRevision encodeWithCoder:]
  -[HKSourceRevision initWithCoder:]
  -[HKSourceRevision .cxx_destruct]
  -[HKSourceRevision _init]
  -[HKSourceRevision source]
  -[HKSourceRevision version]
  -[HKSourceRevision operatingSystemVersion]
  -[HKSourceRevision productType]
  -[HKSourceRevision _setSource:]
  -[HKSourceRevision _setVersion:]
  -[HKSourceRevision _initWithSource:]
  -[HKSourceRevision initWithSource:version:productType:operatingSystemVersion:]
  -[HKSourceRevision initWithSource:version:]


HKOAuth2TokenSession : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *code
 @property  NSString *query
 @property  NSUUID *state

  // class methods
  +[HKOAuth2TokenSession supportsSecureCoding]

  // instance methods
  -[HKOAuth2TokenSession init]
  -[HKOAuth2TokenSession isEqual:]
  -[HKOAuth2TokenSession copyWithZone:]
  -[HKOAuth2TokenSession code]
  -[HKOAuth2TokenSession encodeWithCoder:]
  -[HKOAuth2TokenSession initWithCoder:]
  -[HKOAuth2TokenSession query]
  -[HKOAuth2TokenSession .cxx_destruct]
  -[HKOAuth2TokenSession state]
  -[HKOAuth2TokenSession initWithCode:query:state:]


HKMedicalCoding : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  HKMedicalCodingSystem *codingSystem
 @property  NSString *codingVersion
 @property  NSString *code
 @property  NSString *displayString

  // class methods
  +[HKMedicalCoding supportsSecureCoding]
  +[HKMedicalCoding medicalCodingWithSystem:codingVersion:code:displayString:]
  +[HKMedicalCoding _ucumUnitWithCode:displayString:]
  +[HKMedicalCoding ucum_meterUnitCoding]
  +[HKMedicalCoding ucum_centimeterUnitCoding]

  // instance methods
  -[HKMedicalCoding init]
  -[HKMedicalCoding isEqual:]
  -[HKMedicalCoding copyWithZone:]
  -[HKMedicalCoding code]
  -[HKMedicalCoding encodeWithCoder:]
  -[HKMedicalCoding initWithCoder:]
  -[HKMedicalCoding .cxx_destruct]
  -[HKMedicalCoding displayString]
  -[HKMedicalCoding codingSystem]
  -[HKMedicalCoding _validateConfiguration]
  -[HKMedicalCoding synthesizedIdentifier]
  -[HKMedicalCoding initWithCodingSystem:codingVersion:code:displayString:]
  -[HKMedicalCoding codingVersion]


HKGymKitMetricsDataSource : NSObject /usr/lib/libc++.1.dylib <_HKXPCExportable, HKWorkoutDataSource>
 @property  NSUUID *identifier
 @property  HKTaskServerProxyProvider *proxyProvider
 @property  <HKGymKitMetricsDataSourceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKGymKitMetricsDataSource serverInterface]
  +[HKGymKitMetricsDataSource clientInterface]

  // instance methods
  -[HKGymKitMetricsDataSource delegate]
  -[HKGymKitMetricsDataSource setDelegate:]
  -[HKGymKitMetricsDataSource .cxx_destruct]
  -[HKGymKitMetricsDataSource identifier]
  -[HKGymKitMetricsDataSource setIdentifier:]
  -[HKGymKitMetricsDataSource exportedInterface]
  -[HKGymKitMetricsDataSource connectionInvalidated]
  -[HKGymKitMetricsDataSource connectionInterrupted]
  -[HKGymKitMetricsDataSource remoteInterface]
  -[HKGymKitMetricsDataSource proxyProvider]
  -[HKGymKitMetricsDataSource workoutBuilderDidFinish]
  -[HKGymKitMetricsDataSource initWithHealthStore:workoutConfiguration:]
  -[HKGymKitMetricsDataSource setProxyProvider:]
  -[HKGymKitMetricsDataSource _startTaskServerIfNeededWithCompletion:]
  -[HKGymKitMetricsDataSource clientRemote_didReceiveMetrics:]


HKElectrocardiogram : HKSample <_HKBinarySample>
 @property  HKQuantity *averageHeartRate
 @property  unsigned long classification
 @property  unsigned long symptoms
 @property  NSString *localizedClassification
 @property  NSArray *localizedSymptoms
 @property  NSArray *leadNames
 @property  long long numberOfValues
 @property  HKQuantity *frequency
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKElectrocardiogram supportsSecureCoding]
  +[HKElectrocardiogram _isConcreteObjectClass]
  +[HKElectrocardiogram _electrocardiogramWithStartDate:device:metadata:]

  // instance methods
  -[HKElectrocardiogram isEqual:]
  -[HKElectrocardiogram encodeWithCoder:]
  -[HKElectrocardiogram initWithCoder:]
  -[HKElectrocardiogram .cxx_destruct]
  -[HKElectrocardiogram .cxx_construct]
  -[HKElectrocardiogram payload]
  -[HKElectrocardiogram frequency]
  -[HKElectrocardiogram numberOfValues]
  -[HKElectrocardiogram _classification]
  -[HKElectrocardiogram _validateConfigurationWithOptions:]
  -[HKElectrocardiogram prepareForSaving:]
  -[HKElectrocardiogram _setPayload:]
  -[HKElectrocardiogram setReading:]
  -[HKElectrocardiogram _enumerateDataForLead:block:]
  -[HKElectrocardiogram _averageHeartRate]
  -[HKElectrocardiogram _symptoms]
  -[HKElectrocardiogram leadNames]
  -[HKElectrocardiogram enumerateDataForLead:block:]
  -[HKElectrocardiogram _localizedClassification]
  -[HKElectrocardiogram _localizedSymptoms]


HKInspectableValueInRange : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  HKInspectableValue *lowValue
 @property  HKInspectableValue *highValue
 @property  HKInspectableValueCollection *currentValue
 @property  NSString *unitString
 @property  double lowValueDoubleRepresentation
 @property  double highValueDoubleRepresentation
 @property  long long currentValueRelation
 @property  BOOL hasRenderableContent
 @property  NSDate *date

  // class methods
  +[HKInspectableValueInRange supportsSecureCoding]
  +[HKInspectableValueInRange valueInRangeWithLow:high:currentValue:unit:]

  // instance methods
  -[HKInspectableValueInRange encodeWithCoder:]
  -[HKInspectableValueInRange initWithCoder:]
  -[HKInspectableValueInRange .cxx_destruct]
  -[HKInspectableValueInRange date]
  -[HKInspectableValueInRange setDate:]
  -[HKInspectableValueInRange currentValue]
  -[HKInspectableValueInRange unitString]
  -[HKInspectableValueInRange _assertValidRange]
  -[HKInspectableValueInRange _initValueInRangeWithLow:high:currentValue:unit:]
  -[HKInspectableValueInRange lowValue]
  -[HKInspectableValueInRange highValue]
  -[HKInspectableValueInRange _doubleForValue:]
  -[HKInspectableValueInRange lowValueDoubleRepresentation]
  -[HKInspectableValueInRange highValueDoubleRepresentation]
  -[HKInspectableValueInRange currentValueRelation]
  -[HKInspectableValueInRange hasRenderableContent]
  -[HKInspectableValueInRange _doubleForValueCollection:]
  -[HKInspectableValueInRange _setUnitString:]


NSError(HealthKit)
	// class methods
	+[NSError(HealthKit) hk_error:description:]
	+[NSError(HealthKit) hk_error:format:]
	+[NSError(HealthKit) hk_error:description:underlyingError:]
	+[NSError(HealthKit) hk_assignError:code:description:]
	+[NSError(HealthKit) hk_healthDataUnavailableError]
	+[NSError(HealthKit) hk_databaseInaccessibleBeforeFirstUnlockError]
	+[NSError(HealthKit) hk_protectedDataInaccessibilityError]
	+[NSError(HealthKit) hk_featureUnavailableForProfileError]
	+[NSError(HealthKit) hk_invalidProfileError]
	+[NSError(HealthKit) hk_databaseSchemaRolledBackError]
	+[NSError(HealthKit) hk_assignError:code:description:underlyingError:]
	+[NSError(HealthKit) hk_assignError:code:format:]
	+[NSError(HealthKit) hk_OAuth2_errorFromErrorValue:]
	+[NSError(HealthKit) hk_OAuth2_error:underlyingError:]
	+[NSError(HealthKit) _hk_OAuth2_error:userInfo:underlyingError:]
	+[NSError(HealthKit) _hk_OAuth2_defaultDescriptionForErrorCode:]
	+[NSError(HealthKit) _hk_OAuth2_rawErrorForRequest:response:data:]
	+[NSError(HealthKit) hk_OAuth2_error:]
	+[NSError(HealthKit) _hk_OAuth2_errorForUnauthorizedStatusWithRequest:response:]
	+[NSError(HealthKit) _hk_OAuth2_errorForBadRequestStatusWithResponse:data:]
	+[NSError(HealthKit) _hk_OAuth2_errorFromResponseData:defaultError:parseError:]
	+[NSError(HealthKit) hk_OAuth2_errorForRequest:response:data:]

	// instance methods
	-[NSError(HealthKit) hk_isHealthKitError]
	-[NSError(HealthKit) hk_isHealthKitErrorWithCode:]
	-[NSError(HealthKit) hk_isDatabaseAccessibilityError]
	-[NSError(HealthKit) hk_isDatabaseTransactionError]
	-[NSError(HealthKit) hk_isDatabaseSchemaRolledBackError]
	-[NSError(HealthKit) hk_isServiceDeviceNotFoundError]
	-[NSError(HealthKit) hk_isAuthorizationDeniedError]
	-[NSError(HealthKit) hk_isAuthorizationNotDeterminedError]
	-[NSError(HealthKit) hk_isInvalidArgumentError]
	-[NSError(HealthKit) hk_isInternalFailureError]
	-[NSError(HealthKit) hk_isRequiredAuthorizationError]
	-[NSError(HealthKit) hk_isStreamFailureError]
	-[NSError(HealthKit) hk_isTimeoutError]
	-[NSError(HealthKit) hk_isUserCanceledError]
	-[NSError(HealthKit) hk_isCocoaNoSuchFileError]
	-[NSError(HealthKit) hk_isXPCConnectionError]
	-[NSError(HealthKit) hk_isXPCConnectionInterruptedError]
	-[NSError(HealthKit) hk_underlyingErrorWithDomain:]
	-[NSError(HealthKit) hk_sanitizedError]
	-[NSError(HealthKit) hk_errorByAddingEntriesToUserInfo:]
	-[NSError(HealthKit) _hk_OAuth2_errorByAddingItemsToUserInfo:]
	-[NSError(HealthKit) hk_OAuth2_isOAuth2Error]
	-[NSError(HealthKit) hk_OAuth2_isOAuth2ErrorWithCode:]
	-[NSError(HealthKit) hk_OAuth2_isAccessDeniedError]
	-[NSError(HealthKit) hk_OAuth2_isBearerAuthenticationError]

NSDateInterval(HealthKit)
	// class methods
	+[NSDateInterval(HealthKit) hk_dateIntervalWithStart:end:]
	+[NSDateInterval(HealthKit) hk_instantaneousDateIntervalWithDate:]
	+[NSDateInterval(HealthKit) hk_dateIntervalWithAnchor:startOffset:endOffset:]
	+[NSDateInterval(HealthKit) hk_dateIntervalForDayFromDate:calendar:]

	// instance methods
	-[NSDateInterval(HealthKit) hk_intersectsDateIntervalWithStartDate:endDate:]
	-[NSDateInterval(HealthKit) hk_containsTime:]
	-[NSDateInterval(HealthKit) hk_prettyString]

NSNumberFormatter(HealthKit)
	// class methods
	+[NSNumberFormatter(HealthKit) hk_heartRateNumberFormatter]
	+[NSNumberFormatter(HealthKit) hk_percentNumberFormatter]

NSValue(HealthKit)
	// class methods
	+[NSValue(HealthKit) hk_valueWithNSOperatingSystemVersion:]

	// instance methods
	-[NSValue(HealthKit) hk_NSOperatingSystemVersionValue]

NSUnit(HKUnit)
	// class methods
	+[NSUnit(HKUnit) hk_conversionCoefficient:]
	+[NSUnit(HKUnit) hk_conversionConstant:]
	+[NSUnit(HKUnit) hk_isSIUnit:]
	+[NSUnit(HKUnit) hk_prefixForCoefficient:]
	+[NSUnit(HKUnit) hk_equalCoefficient:forUnit:]
	+[NSUnit(HKUnit) hk_equalConstant:forUnit:]

	// instance methods
	-[NSUnit(HKUnit) hk_equivalentUnitWithConstant:coefficient:]
	-[NSUnit(HKUnit) hk_equivalentUnit]
	-[NSUnit(HKUnit) hk_convertQuantityWithValue:constant:coefficient:]
	-[NSUnit(HKUnit) hk_equivalentBaseUnit]
	-[NSUnit(HKUnit) hk_equivalentQuantityWithValue:]

NSUnitAcceleration(HKUnit)
	// instance methods
	-[NSUnitAcceleration(HKUnit) hk_equivalentBaseUnit]

NSUnitArea(HKUnit)
	// instance methods
	-[NSUnitArea(HKUnit) hk_equivalentBaseUnit]

NSUnitConcentrationMass(HKUnit)
	// instance methods
	-[NSUnitConcentrationMass(HKUnit) hk_equivalentBaseUnit]

NSUnitDispersion(HKUnit)
	// instance methods
	-[NSUnitDispersion(HKUnit) hk_equivalentBaseUnit]

NSUnitDuration(HKUnit)
	// instance methods
	-[NSUnitDuration(HKUnit) hk_equivalentUnitWithConstant:coefficient:]
	-[NSUnitDuration(HKUnit) hk_equivalentBaseUnit]

NSUnitElectricResistance(HKUnit)
	// instance methods
	-[NSUnitElectricResistance(HKUnit) hk_equivalentBaseUnit]

NSUnitEnergy(HKUnit)
	// instance methods
	-[NSUnitEnergy(HKUnit) hk_equivalentUnitWithConstant:coefficient:]
	-[NSUnitEnergy(HKUnit) hk_equivalentBaseUnit]

NSUnitFrequency(HKUnit)
	// instance methods
	-[NSUnitFrequency(HKUnit) hk_equivalentBaseUnit]

NSUnitLength(HKUnit)
	// instance methods
	-[NSUnitLength(HKUnit) hk_equivalentUnitWithConstant:coefficient:]
	-[NSUnitLength(HKUnit) hk_equivalentBaseUnit]

NSUnitMass(HKUnit)
	// instance methods
	-[NSUnitMass(HKUnit) hk_equivalentUnitWithConstant:coefficient:]
	-[NSUnitMass(HKUnit) hk_equivalentBaseUnit]

NSUnitPower(HKUnit)
	// instance methods
	-[NSUnitPower(HKUnit) hk_equivalentBaseUnit]

NSUnitPressure(HKUnit)
	// instance methods
	-[NSUnitPressure(HKUnit) hk_equivalentUnitWithConstant:coefficient:]
	-[NSUnitPressure(HKUnit) hk_equivalentBaseUnit]

NSUnitSpeed(HKUnit)
	// instance methods
	-[NSUnitSpeed(HKUnit) hk_equivalentBaseUnit]

NSUnitTemperature(HKUnit)
	// instance methods
	-[NSUnitTemperature(HKUnit) hk_equivalentUnitWithConstant:coefficient:]
	-[NSUnitTemperature(HKUnit) hk_equivalentBaseUnit]

NSUnitVolume(HKUnit)
	// instance methods
	-[NSUnitVolume(HKUnit) hk_equivalentUnitWithConstant:coefficient:]
	-[NSUnitVolume(HKUnit) hk_equivalentBaseUnit]

NSUUID(HealthKit)
	// class methods
	+[NSUUID(HealthKit) hk_UUIDWithData:]

	// instance methods
	-[NSUUID(HealthKit) hk_shortRepresentation]
	-[NSUUID(HealthKit) hk_dataForUUIDBytes]
	-[NSUUID(HealthKit) hk_compare:]
	-[NSUUID(HealthKit) hk_UUID]

NSData(HKUUID)
	// class methods
	+[NSData(HKUUID) hk_dataWithSHA256Fingerprint:error:]
	+[NSData(HKUUID) hk_nilDataMD5]
	+[NSData(HKUUID) hk_randomDataOfLength:]

	// instance methods
	-[NSData(HKUUID) hk_enumerateUUIDBytesUsingBlock:]
	-[NSData(HKUUID) hk_enumerateUUIDsUsingBlock:]
	-[NSData(HKUUID) hk_countOfUUIDs]
	-[NSData(HKUUID) hk_enumerateUUIDsWithError:block:]
	-[NSData(HKUUID) hk_dataForAllUUIDs]
	-[NSData(HKUUID) hk_MD5]

NSMutableData(HKUUID)
	// instance methods
	-[NSMutableData(HKUUID) hk_appendBytesWithUUID:]
	-[NSMutableData(HKUUID) hk_appendUUIDBytes:]

NSArray(HKUUID)
	// class methods
	+[NSArray(HKUUID) indexableKeyPathsWithPrefix:]
	+[NSArray(HKUUID) _permutationHelperForArray:number:permutationHandler:]
	+[NSArray(HKUUID) hk_arrayWithCount:generator:]

	// instance methods
	-[NSArray(HKUUID) hk_filter:]
	-[NSArray(HKUUID) hk_map:]
	-[NSArray(HKUUID) codingsForKeyPath:error:]
	-[NSArray(HKUUID) applyConcepts:forKeyPath:error:]
	-[NSArray(HKUUID) hk_firstObjectPassingTest:]
	-[NSArray(HKUUID) hk_enumerateUUIDsWithError:block:]
	-[NSArray(HKUUID) hk_dataForAllUUIDs]
	-[NSArray(HKUUID) hk_partitionArrayWithPartitionSetupBlock:partitionMembershipCheckBlock:partitionExtendBlock:partitionFinalizeBlock:]
	-[NSArray(HKUUID) hk_sumUsingEvaluationBlock:]
	-[NSArray(HKUUID) hk_firstObjectWithMaximumValueUsingEvaluationBlock:]
	-[NSArray(HKUUID) hk_averageUsingEvaluationBlock:]
	-[NSArray(HKUUID) hk_firstObjectWithMinimumValueUsingEvaluationBlock:]
	-[NSArray(HKUUID) _permutationsWithCount:permutation:depth:block:]
	-[NSArray(HKUUID) hk_map:error:]
	-[NSArray(HKUUID) hk_foldRightFrom:with:]
	-[NSArray(HKUUID) hk_firstSortedObjectWithComparison:]
	-[NSArray(HKUUID) hk_containsObjectsInArray:]
	-[NSArray(HKUUID) hk_allElementsUnique]
	-[NSArray(HKUUID) hk_orPredicateWithPredicateBlock:]
	-[NSArray(HKUUID) hk_mapToDictionary:]
	-[NSArray(HKUUID) hk_mapToSet:]
	-[NSArray(HKUUID) hk_enumeratePermutationsWithBlock:]
	-[NSArray(HKUUID) hk_reversed]
	-[NSArray(HKUUID) hk_enumeratePermutationsOfSubsetsOfLength:block:]

NSSet(HKUUID)
	// class methods
	+[NSSet(HKUUID) hk_typesForSetOf:]
	+[NSSet(HKUUID) hk_typesForArrayOf:]
	+[NSSet(HKUUID) hk_setByUnioningSet:otherSet:]
	+[NSSet(HKUUID) hk_typesForDictionaryMapping:to:]

	// instance methods
	-[NSSet(HKUUID) hk_filter:]
	-[NSSet(HKUUID) hk_map:]
	-[NSSet(HKUUID) hk_enumerateUUIDsWithError:block:]
	-[NSSet(HKUUID) hk_dataForAllUUIDs]
	-[NSSet(HKUUID) hk_firstSortedObjectWithComparison:]
	-[NSSet(HKUUID) hk_mapToDictionary:]
	-[NSSet(HKUUID) hk_minus:]
	-[NSSet(HKUUID) hk_intersection:]

NSLocale(HealthKit)
	// class methods
	+[NSLocale(HealthKit) hk_testableAutoupdatingCurrentLocale]
	+[NSLocale(HealthKit) hk_isUSLocale]
	+[NSLocale(HealthKit) hk_setTestLocale:]

	// instance methods
	-[NSLocale(HealthKit) hk_isUSLocale]
	-[NSLocale(HealthKit) hk_isEquivalent:]

NSKeyedUnarchiver(HealthKit)
	// class methods
	+[NSKeyedUnarchiver(HealthKit) _hk_performUnarchivingWithData:error:handler:]
	+[NSKeyedUnarchiver(HealthKit) hk_unarchivedObjectOfClass:forKey:data:error:]
	+[NSKeyedUnarchiver(HealthKit) hk_unarchivedObjectOfClasses:forKey:data:error:]

NSDictionary(HealthKit)
	// class methods
	+[NSDictionary(HealthKit) hk_secureCodingClasses]
	+[NSDictionary(HealthKit) hk_acceptsMetadataValue:allowPrivateMetadata:]
	+[NSDictionary(HealthKit) _addDerivedPublicKeyIfNecessaryForPrivateKey:mutableDictionary:]
	+[NSDictionary(HealthKit) hk_acceptedMetadataValueClasses]
	+[NSDictionary(HealthKit) hk_acceptedPublicMetadataValueClasses]

	// instance methods
	-[NSDictionary(HealthKit) hk_dictionaryByAddingEntriesFromDictionary:]
	-[NSDictionary(HealthKit) hk_filter:]
	-[NSDictionary(HealthKit) hk_validateMetadataKeysAndValuesAllowingPrivateMetadataKeys:applicationSDKVersion:error:]
	-[NSDictionary(HealthKit) hk_filteredDictionaryForKeys:]
	-[NSDictionary(HealthKit) hk_sortedKeys]
	-[NSDictionary(HealthKit) hk_allValuesBySortedKeys]
	-[NSDictionary(HealthKit) hk_filterKeysWithBlock:]
	-[NSDictionary(HealthKit) _hk_validateMetadataValueContent:forKey:applicationSDKVersion:error:]
	-[NSDictionary(HealthKit) _copyWithoutPrivateMetadataKeysShouldDerivePublicKeys:]
	-[NSDictionary(HealthKit) _hk_validateMetadataValueClass:forKey:supportedKeyLookupTable:error:]
	-[NSDictionary(HealthKit) hk_copyWithoutPrivateMetadataKeys]
	-[NSDictionary(HealthKit) hk_copySanitizedForPublicClient]

LSBundleProxy(HKAppExtensions)
	// class methods
	+[LSBundleProxy(HKAppExtensions) hk_appExtensionContainerBundleForConnection:]
	+[LSBundleProxy(HKAppExtensions) _hk_appExtensionContainerBundleProxyWithProperties:]

NSXPCConnection(HKAppExtensions)
	// instance methods
	-[NSXPCConnection(HKAppExtensions) hk_isAppExtension]
	-[NSXPCConnection(HKAppExtensions) hk_signingIdentifier]

NSURL(HealthKit)
	// class methods
	+[NSURL(HealthKit) _hk_urlForAtrialFibrillationEventType]
	+[NSURL(HealthKit) _hk_urlForViewHealthRecords]
	+[NSURL(HealthKit) _hk_urlForHealthRecordsProviderSearch]
	+[NSURL(HealthKit) hk_tapToRadarURLForBundleID:component:title:description:classification:reproducibility:keywords:autoDiagnostics:attachments:]
	+[NSURL(HealthKit) hk_safeURLWithString:]
	+[NSURL(HealthKit) hk_tapToHealthRadarURLWithTitle:description:classification:reproducibility:keywords:autoDiagnostics:attachments:]
	+[NSURL(HealthKit) hk_tapToHealthRadarURLForComponent:title:description:classification:reproducibility:keywords:autoDiagnostics:attachments:]
	+[NSURL(HealthKit) _hk_urlForElectrocardiogramType]

	// instance methods
	-[NSURL(HealthKit) hk_valueForFirstInstanceOfParameterNamed:]
	-[NSURL(HealthKit) hk_hasBaseURL:error:]
	-[NSURL(HealthKit) hk_isValidSafariViewControllerURL]

NSDate(HealthKit)
	// class methods
	+[NSDate(HealthKit) hk_dateWithNanosecondsSince1970:]

	// instance methods
	-[NSDate(HealthKit) hk_isBeforeDate:]
	-[NSDate(HealthKit) hk_isBeforeOrEqualToDate:]
	-[NSDate(HealthKit) hk_isAfterDate:]
	-[NSDate(HealthKit) hk_isAfterOrEqualToDate:]
	-[NSDate(HealthKit) hk_rfc3339String]
	-[NSDate(HealthKit) hk_nearestDate:]
	-[NSDate(HealthKit) hk_truncateToDay]
	-[NSDate(HealthKit) hk_nanosecondsSince1970]

NSDateComponents(HealthKit)
	// class methods
	+[NSDateComponents(HealthKit) hk_oneDay]
	+[NSDateComponents(HealthKit) hk_componentsWithDays:]
	+[NSDateComponents(HealthKit) hk_oneWeek]
	+[NSDateComponents(HealthKit) hk_dateComponentsForCalendarUnit:]

	// instance methods
	-[NSDateComponents(HealthKit) hk_dateByAddingInterval:toDate:]
	-[NSDateComponents(HealthKit) hk_maxComponentValue]
	-[NSDateComponents(HealthKit) _hk_dateByAddingFilteredInterval:toDate:]
	-[NSDateComponents(HealthKit) hk_populatedCalendarGregorianCalendarDefault]
	-[NSDateComponents(HealthKit) hk_approximateDuration]
	-[NSDateComponents(HealthKit) hk_translateDateComponentsToCalendar:calendarUnits:]
	-[NSDateComponents(HealthKit) hk_negativeComponents]
	-[NSDateComponents(HealthKit) hk_ageWithCurrentDate:]

NSUserDefaults(HKFeatureAvailability)
	// class methods
	+[NSUserDefaults(HKFeatureAvailability) hk_featureAvailabilityUserDefaults]
	+[NSUserDefaults(HKFeatureAvailability) hk_heartRhythmDefaults]

	// instance methods
	-[NSUserDefaults(HKFeatureAvailability) hk_setElectrocardiogramSetupModalViewPresented:]
	-[NSUserDefaults(HKFeatureAvailability) hk_electrocardiogramSetupModalViewHasBeenPresented]
	-[NSUserDefaults(HKFeatureAvailability) hk_atrialFibrillationSetupModalViewHasBeenPresented]
	-[NSUserDefaults(HKFeatureAvailability) hk_setAtrialFibrillationSetupModalViewPresented:]
	-[NSUserDefaults(HKFeatureAvailability) hk_demoResultKeys]
	-[NSUserDefaults(HKFeatureAvailability) hk_setDemoResultKeys:]
	-[NSUserDefaults(HKFeatureAvailability) hk_hfeModeEnabled]
	-[NSUserDefaults(HKFeatureAvailability) hk_keyExists:]
	-[NSUserDefaults(HKFeatureAvailability) hk_removeObjectsForKeysWithPrefix:]

NSMutableArray(HealthKit)
	// instance methods
	-[NSMutableArray(HealthKit) hk_dequeue]
	-[NSMutableArray(HealthKit) hk_addObjectsFromArray:passingTest:]
	-[NSMutableArray(HealthKit) hk_removeObjectsPassingTest:]
	-[NSMutableArray(HealthKit) hk_addNonNilObject:]

NSComparisonPredicate(HealthKit)
	// class methods
	+[NSComparisonPredicate(HealthKit) hk_inequalityPredicateWithKey:value:ascending:]
	+[NSComparisonPredicate(HealthKit) hk_equalityPredicateWithKey:value:]

	// instance methods
	-[NSComparisonPredicate(HealthKit) hk_filterRepresentationForDataTypes:filterClasses:]
	-[NSComparisonPredicate(HealthKit) _parseComparisonPredicateWithKeyPath:predicateOperatorType:value:dataTypes:filterClasses:]

NSPredicate(HKFilterExtension)
	// instance methods
	-[NSPredicate(HKFilterExtension) hk_filterRepresentationForDataTypes:filterClasses:]

NSCompoundPredicate(HKFilterExtension)
	// instance methods
	-[NSCompoundPredicate(HKFilterExtension) hk_filterRepresentationForDataTypes:filterClasses:]

NSScanner(HealthKit)
	// instance methods
	-[NSScanner(HealthKit) hk_scanCharactersFromSet:length:intoString:]

NSFileHandle(HealthKit)
	// instance methods
	-[NSFileHandle(HealthKit) hk_readLinesInFile:]
	-[NSFileHandle(HealthKit) hk_countLines]

NSObject(HealthKit)
	// instance methods
	-[NSObject(HealthKit) _hk_valueForSafeValueForKeyPath:]
	-[NSObject(HealthKit) hk_safeValueIfExistsForKeyPath:class:error:]
	-[NSObject(HealthKit) hk_hasValueForKeyPath:]
	-[NSObject(HealthKit) hk_safeValueForKeyPath:class:error:]
	-[NSObject(HealthKit) hk_safeArrayForKeyPath:error:]
	-[NSObject(HealthKit) hk_safeDictionaryForKeyPath:error:]
	-[NSObject(HealthKit) hk_safeStringForKeyPath:error:]
	-[NSObject(HealthKit) hk_safeNumberForKeyPath:error:]
	-[NSObject(HealthKit) hk_safeArrayIfExistsForKeyPath:error:]
	-[NSObject(HealthKit) hk_safeDictionaryIfExistsForKeyPath:error:]
	-[NSObject(HealthKit) hk_safeStringIfExistsForKeyPath:error:]
	-[NSObject(HealthKit) hk_safeNumberIfExistsForKeyPath:error:]
	-[NSObject(HealthKit) hk_expectMissingKeyPath:error:]
	-[NSObject(HealthKit) hk_classNameWithTag:]

NSJSONSerialization(HealthKit)
	// class methods
	+[NSJSONSerialization(HealthKit) hk_JSONObjectSecureCodingClasses]
	+[NSJSONSerialization(HealthKit) hk_JSONObjectFromFHIRData:options:error:]
	+[NSJSONSerialization(HealthKit) hk_stringForDisplayFromFHIRJSONObject:]
	+[NSJSONSerialization(HealthKit) hk_stringForDisplayFromFHIRData:]

NSUserActivity(_HKURLSupport)
	// class methods
	+[NSUserActivity(_HKURLSupport) _hk_userActivityForElectrocardiogramType]
	+[NSUserActivity(_HKURLSupport) _hk_userActivityForAtrialFibrillationEventType]

NSXPCInterface(HealthKit)
	// instance methods
	-[NSXPCInterface(HealthKit) hk_setArrayOfClass:forSelector:argumentIndex:ofReply:]
	-[NSXPCInterface(HealthKit) _cachedSetForArrayOfClass:]

NSMeasurement(HKQuantity)
	// instance methods
	-[NSMeasurement(HKQuantity) hk_equivalentQuantity]

NSCalendar(HKCalendar)
	// class methods
	+[NSCalendar(HKCalendar) hk_gregorianCalendar]
	+[NSCalendar(HKCalendar) hk_gregorianCalendarWithUTCTimeZone]
	+[NSCalendar(HKCalendar) hk_gregorianCalendarWithLocalTimeZone]
	+[NSCalendar(HKCalendar) hk_gregorianCalendarWithCupertinoTimeZone]
	+[NSCalendar(HKCalendar) hk_canonicalDateOfBirthDateComponentsWithDate:]

	// instance methods
	-[NSCalendar(HKCalendar) hk_enumerateDateInterval:byDateComponents:block:]
	-[NSCalendar(HKCalendar) hk_dateOfBirthDateComponentsWithDate:]
	-[NSCalendar(HKCalendar) hk_firstDateWithHour:minute:afterDate:]
	-[NSCalendar(HKCalendar) hk_startOfDateByAddingDays:toDate:]
	-[NSCalendar(HKCalendar) hk_startOfWeekWithFirstWeekday:beforeDate:addingWeeks:]
	-[NSCalendar(HKCalendar) hk_startOfMonthForDate:]
	-[NSCalendar(HKCalendar) hk_dateFromComponentsWithYear:month:day:hour:minute:second:]
	-[NSCalendar(HKCalendar) hk_timeZoneDependentReferenceDate]
	-[NSCalendar(HKCalendar) hk_startOfHourForDate:addingHours:]
	-[NSCalendar(HKCalendar) hk_startOfUnitForDate:calendarUnit:]
	-[NSCalendar(HKCalendar) _hk_cachedValueSinceTimeZoneDependentReferenceDateForUnitStartDate:calendarUnit:]
	-[NSCalendar(HKCalendar) _hk_cachedLengthOfUnitForUnitStartDate:calendarUnit:]
	-[NSCalendar(HKCalendar) hk_startOfDateBySubtractingDays:fromDate:]
	-[NSCalendar(HKCalendar) hk_startOfFitnessWeekBeforeDate:]
	-[NSCalendar(HKCalendar) hk_startOfMinuteForDate:moduloMinutes:addingModuloCount:]
	-[NSCalendar(HKCalendar) hk_startOfMonthForDate:addingMonths:]
	-[NSCalendar(HKCalendar) hk_startOfYearForDate:addingYears:]
	-[NSCalendar(HKCalendar) hk_nearestStartOfDayForDate:]
	-[NSCalendar(HKCalendar) hk_nearestStartOfWeekWithFirstWeekDay:date:]
	-[NSCalendar(HKCalendar) hk_nearestStartOfMonthForDate:]
	-[NSCalendar(HKCalendar) hk_dateByAddingDays:toDate:]
	-[NSCalendar(HKCalendar) hk_dateBySubtractingDays:fromDate:]
	-[NSCalendar(HKCalendar) hk_weekendDays]
	-[NSCalendar(HKCalendar) hk_nearestNoonBeforeDateOrEqualToDate:]
	-[NSCalendar(HKCalendar) hk_timeIntervalSinceStartOfDayForDate:]
	-[NSCalendar(HKCalendar) hk_dateByShiftingToGregorianCalendarWithUTCTimeZone:]
	-[NSCalendar(HKCalendar) hk_dateByShiftingFromGregorianCalendarWithUTCTimeZone:]
	-[NSCalendar(HKCalendar) hk_dateFromComponentsWithYear:month:day:hour:]
	-[NSCalendar(HKCalendar) hk_dateFromComponentsWithYear:month:day:hour:minute:]
	-[NSCalendar(HKCalendar) hk_lengthOfDayForDate:]
	-[NSCalendar(HKCalendar) hk_isDate:withinNumberOfCalendarDays:ofDate:]
	-[NSCalendar(HKCalendar) hk_durationSinceReferenceDateForDate:calendarUnit:]
	-[NSCalendar(HKCalendar) hk_dateWithDurationSinceReferenceDate:calendarUnit:]
	-[NSCalendar(HKCalendar) hk_activitySummaryDateComponentsFromDate:]

NSString(HealthKit)
	// class methods
	+[NSString(HealthKit) hk_randomStringOfLength:]

	// instance methods
	-[NSString(HealthKit) hk_isValidPurposeString]
	-[NSString(HealthKit) hk_copyNonEmptyString]
	-[NSString(HealthKit) hk_isBase64]
	-[NSString(HealthKit) hk_MD5HashAsUUID]
	-[NSString(HealthKit) hk_MD5Hash]
	-[NSString(HealthKit) hk_compareBuildVersionWithString:]
	-[NSString(HealthKit) hk_stringByUnescapingJSONCharactersForDisplay]
	-[NSString(HealthKit) hk_stringByRemovingCharactersInSet:]
	-[NSString(HealthKit) hk_stripLeadingTrailingWhitespace]
	-[NSString(HealthKit) hk_trimWhitespaceAndNewlines]
	-[NSString(HealthKit) hk_stringByAppendingKeyPathComponent:]
	-[NSString(HealthKit) hk_isCaseInsensitiveSubstringInString:]
	-[NSString(HealthKit) hk_isBetweenLowerBuildVersion:upperBuildVersion:]
	-[NSString(HealthKit) hk_SHA224Hash]
	-[NSString(HealthKit) hk_SHA256Hash]
	-[NSString(HealthKit) hk_SHA384Hash]
	-[NSString(HealthKit) hk_SHA512Hash]

NSMutableString(HealthKit)
	// instance methods
	-[NSMutableString(HealthKit) hk_appendComponentsJoinedByString:container:componentGenerator:]

NSLock(HealthKit)
	// instance methods
	-[NSLock(HealthKit) hk_withLock:]

NSCharacterSet(_HKXMLExtractorCharacterSets)
	// class methods
	+[NSCharacterSet(_HKXMLExtractorCharacterSets) percentCharacterSet]
	+[NSCharacterSet(_HKXMLExtractorCharacterSets) equalCharacterSet]
	+[NSCharacterSet(_HKXMLExtractorCharacterSets) forwardSlashCharacterSet]

NSBundle(HealthKit)
	// class methods
	+[NSBundle(HealthKit) hk_findContainedBundleWithIdentifier:directoryURL:]

	// instance methods
	-[NSBundle(HealthKit) hk_localizedWriteAuthorizationUsageDescription]
	-[NSBundle(HealthKit) hk_localizedReadAuthorizationUsageDescription]
	-[NSBundle(HealthKit) hk_localizedClinicalReadAuthorizationUsageDescription]
	-[NSBundle(HealthKit) hk_localizedResearchStudyUsageDescription]
	-[NSBundle(HealthKit) hk_findContainedBundleWithIdentifier:]
	-[NSBundle(HealthKit) hk_displayName]
	-[NSBundle(HealthKit) hk_name]

01 00 0600 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 0200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 0700 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAsset 
01 00 0700 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAssetQuery 
01 00 0700 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MADownloadOptions 
01 00 1100 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0100 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 0100 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDimension 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLengthFormatter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMassFormatter 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMeasurement 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponentsFormatter 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnit 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitAcceleration 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitArea 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitConcentrationMass 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitConverterLinear 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitDispersion 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitDuration 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitElectricResistance 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitEnergy 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitFrequency 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitLength 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitMass 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitPower 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitPressure 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitSpeed 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitTemperature 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitVolume 
01 00 0200 /System/Library/Frameworks/CoreServices.framework/CoreServices: NSUserActivity 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXMLParser 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0500 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0900 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: RadiosPreferences 
