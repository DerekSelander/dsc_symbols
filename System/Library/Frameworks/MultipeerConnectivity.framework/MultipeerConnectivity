|| __DATA.__objc_data _OBJC_CLASS_$_MCAdvertiserAssistant
|| __DATA.__objc_data _OBJC_CLASS_$_MCBrowserViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MCNearbyServiceAdvertiser
|| __DATA.__objc_data _OBJC_CLASS_$_MCNearbyServiceBrowser
|| __DATA.__objc_data _OBJC_CLASS_$_MCPeerID
|| __DATA.__objc_data _OBJC_CLASS_$_MCSession
|| __DATA.__objc_data _OBJC_METACLASS_$_MCAdvertiserAssistant
|| __DATA.__objc_data _OBJC_METACLASS_$_MCBrowserViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MCNearbyServiceAdvertiser
|| __DATA.__objc_data _OBJC_METACLASS_$_MCNearbyServiceBrowser
|| __DATA.__objc_data _OBJC_METACLASS_$_MCPeerID
|| __DATA.__objc_data _OBJC_METACLASS_$_MCSession
|| __DATA_CONST.__const _MCErrorDomain
|| __TEXT.__const _kMCSessionMaximumNumberOfPeers
|| __TEXT.__const _kMCSessionMinimumNumberOfPeers
__ CFNetwork: _NSNetServicesErrorCode
__ CFNetwork: _NSNetServicesErrorDomain
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSNetService
__ CFNetwork: _OBJC_CLASS_$_NSNetServiceBrowser
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: _kCFStreamPropertyIndefiniteConnection
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFDataAppendBytes
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFReadStreamSetDispatchQueue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetApplyFunction
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetGetValueIfPresent
__ CoreFoundation: _CFSetRemoveValue
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDGetUUIDBytes
__ CoreFoundation: _CFWriteStreamSetDispatchQueue
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSMallocException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFReadStreamCreateFromFileDescriptor
__ CoreFoundation: __CFWriteStreamCreateFromFileDescriptor
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBundleNameKey
__ CoreFoundation: _kCFStreamPropertySocketNativeHandle
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreUtils: _CFDictionaryGetInt64
__ CoreUtils: _CFPropertyListCreateFormatted
__ CoreUtils: _CFStringAppendF
__ CoreUtils: _NSAppendPrintF
__ CoreUtils: _OBJC_CLASS_$_CUDashboardClient
__ CoreUtils: _SockAddrCompareAddr
__ CoreUtils: _SocketGetInterfaceInfo
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: __NSDictionaryOfVariableBindings
__ ICE: _FreeLocalInterfaceList
__ ICE: _GetLocalInterfaceListWithOptions
__ ICE: _ICEAddOneInterface
__ ICE: _ICECloseHandle
__ ICE: _ICECreateHandleWithCallback
__ ICE: _ICEDisableCandidatePairFilter
__ ICE: _ICEGetCallInfoForConnectionData
__ ICE: _ICEGetCandidates
__ ICE: _ICEStartConnectivityCheck
__ ICE: _ICEStopConnectivityCheck
__ ICE: _ICEUpdateRole
__ ICE: _IPPORTToSA
__ ICE: _IPPORTToSA6
__ ICE: _IPPORTToString
__ ICE: _IPToString
__ ICE: _SAToIPPORT
__ IOKit: _IOIteratorNext
__ IOKit: _IOMasterPort
__ IOKit: _IOObjectConformsTo
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryGetParentEntry
__ IOKit: _IORegistryEntryIDMatching
__ IOKit: _IOServiceGetMatchingServices
__ LegacyHandle: _CheckInHandleDebug
__ LegacyHandle: _CheckOutHandleDebug
__ LegacyHandle: _CreateHandle
__ Security: _SSLClose
__ Security: _SSLCopyPeerTrust
__ Security: _SSLCreateContext
__ Security: _SSLHandshake
__ Security: _SSLRead
__ Security: _SSLSetCertificate
__ Security: _SSLSetClientSideAuthenticate
__ Security: _SSLSetConnection
__ Security: _SSLSetEnabledCiphers
__ Security: _SSLSetIOFuncs
__ Security: _SSLSetMaxDatagramRecordSize
__ Security: _SSLSetSessionConfig
__ Security: _SSLSetSessionOption
__ Security: _SSLWrite
__ Security: _SecTrustGetCertificateAtIndex
__ Security: _SecTrustGetCertificateCount
__ Security: _kSSLSessionConfig_ATSv1
__ Security: _kSSLSessionConfig_anonymous
__ SystemConfiguration: _SCNetworkInterfaceCopyAll
__ SystemConfiguration: _SCNetworkInterfaceGetBSDName
__ SystemConfiguration: _SCNetworkInterfaceGetInterfaceType
__ SystemConfiguration: __SCNetworkInterfaceGetIORegistryEntryID
__ SystemConfiguration: _kSCNetworkInterfaceTypeEthernet
__ SystemConfiguration: _kSCNetworkInterfaceTypeIEEE80211
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$_UIAlertController
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillTerminateNotification
__ UIKit: _UIWindowLevelAlert
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___darwin_check_fd_set_overflow
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___sprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_read
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __dispatch_source_type_write
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _bind
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeaddrinfo
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _getaddrinfo
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getsockname
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _if_nametoindex
__ libSystem.B.dylib: _in6addr_any
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _mkstemp
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_state_remove_handler
__ libSystem.B.dylib: _pipe
__ libSystem.B.dylib: _pthread_attr_destroy
__ libSystem.B.dylib: _pthread_attr_init
__ libSystem.B.dylib: _pthread_attr_setdetachstate
__ libSystem.B.dylib: _pthread_cond_broadcast
__ libSystem.B.dylib: _pthread_cond_destroy
__ libSystem.B.dylib: _pthread_cond_init
__ libSystem.B.dylib: _pthread_cond_signal
__ libSystem.B.dylib: _pthread_cond_timedwait_relative_np
__ libSystem.B.dylib: _pthread_cond_wait
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_join
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_destroy
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _pthread_rwlock_destroy
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _pthread_rwlock_rdlock
__ libSystem.B.dylib: _pthread_rwlock_unlock
__ libSystem.B.dylib: _pthread_rwlock_wrlock
__ libSystem.B.dylib: _pthread_setname_np
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _recvmsg
__ libSystem.B.dylib: _select
__ libSystem.B.dylib: _sendmsg
__ libSystem.B.dylib: _setsockopt
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strpbrk
__ libSystem.B.dylib: _strspn
__ libSystem.B.dylib: _strstr
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: _vsnprintf
__ libSystem.B.dylib: _write
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libz.1.dylib: _compress2
__ libz.1.dylib: _compressBound
__ libz.1.dylib: _crc32
__ libz.1.dylib: _uncompress
MCSessionPeerState : NSObject
 @property  MCPeerID *peerID
 @property  long long state
 @property  BOOL connectPeerCalled
 @property  NSData *nearbyConnectionData
 @property  NSMutableDictionary *outgoingStreamRequests
 @property  NSMutableDictionary *outgoingStreams
 @property  NSMutableDictionary *incomingStreams
 @property  unsigned int newStreamOpenRequestID
 @property  unsigned int newStreamID
 @property  long long certificateDecision

  // instance methods
  -[MCSessionPeerState peerID]
  -[MCSessionPeerState state]
  -[MCSessionPeerState dealloc]
  -[MCSessionPeerState setState:]
  -[MCSessionPeerState initWithPeer:]
  -[MCSessionPeerState nearbyConnectionData]
  -[MCSessionPeerState newStreamID]
  -[MCSessionPeerState newStreamOpenRequestID]
  -[MCSessionPeerState outgoingStreamRequests]
  -[MCSessionPeerState setOutgoingStreamRequests:]
  -[MCSessionPeerState incomingStreams]
  -[MCSessionPeerState setIncomingStreams:]
  -[MCSessionPeerState outgoingStreams]
  -[MCSessionPeerState setOutgoingStreams:]
  -[MCSessionPeerState setNearbyConnectionData:]
  -[MCSessionPeerState connectPeerCalled]
  -[MCSessionPeerState setConnectPeerCalled:]
  -[MCSessionPeerState certificateDecision]
  -[MCSessionPeerState setCertificateDecision:]


MCSessionStream : NSObject
 @property  MCPeerID *peerID
 @property  NSString *name
 @property  unsigned int streamID
 @property  int state
 @property  int fd
 @property  NSObject<OS_dispatch_source> *source
 @property  BOOL sourceSuspended
 @property  NSMutableData *incomingBuffer
 @property  NSURL *url
 @property  NSProgress *progress
 @property  MCResourceProgressObserver *observer
 @property  BOOL progressUnbounded
 @property  @? completionHandler
 @property  MCResourceDownloader *urlDownloader

  // instance methods
  -[MCSessionStream source]
  -[MCSessionStream fd]
  -[MCSessionStream progress]
  -[MCSessionStream setPeerID:]
  -[MCSessionStream peerID]
  -[MCSessionStream setProgress:]
  -[MCSessionStream setSource:]
  -[MCSessionStream setUrl:]
  -[MCSessionStream streamID]
  -[MCSessionStream state]
  -[MCSessionStream dealloc]
  -[MCSessionStream observer]
  -[MCSessionStream setName:]
  -[MCSessionStream name]
  -[MCSessionStream url]
  -[MCSessionStream setObserver:]
  -[MCSessionStream setCompletionHandler:]
  -[MCSessionStream completionHandler]
  -[MCSessionStream setState:]
  -[MCSessionStream setStreamID:]
  -[MCSessionStream setFd:]
  -[MCSessionStream sourceSuspended]
  -[MCSessionStream setSourceSuspended:]
  -[MCSessionStream incomingBuffer]
  -[MCSessionStream setIncomingBuffer:]
  -[MCSessionStream progressUnbounded]
  -[MCSessionStream setProgressUnbounded:]
  -[MCSessionStream urlDownloader]
  -[MCSessionStream setUrlDownloader:]


MCResourceDownloader : NSObject <NSURLSessionDelegate, NSURLSessionDataDelegate>
 @property  NSURLSession *urlSession
 @property  NSURLSessionDataTask *urlTask
 @property  @? urlResponseHandler
 @property  MCSession *session
 @property  NSString *resourceName
 @property  MCPeerID *peerID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCResourceDownloader URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[MCResourceDownloader setPeerID:]
  -[MCResourceDownloader peerID]
  -[MCResourceDownloader URLSession:task:didCompleteWithError:]
  -[MCResourceDownloader setUrlSession:]
  -[MCResourceDownloader urlSession]
  -[MCResourceDownloader session]
  -[MCResourceDownloader URLSession:dataTask:didReceiveData:]
  -[MCResourceDownloader setResourceName:]
  -[MCResourceDownloader setSession:]
  -[MCResourceDownloader urlTask]
  -[MCResourceDownloader setUrlTask:]
  -[MCResourceDownloader dealloc]
  -[MCResourceDownloader resourceName]
  -[MCResourceDownloader initWithSession:resourceUrl:name:peerID:]
  -[MCResourceDownloader syncCloseStreamForSession:withError:]
  -[MCResourceDownloader sendData:fromByteOffset:]
  -[MCResourceDownloader urlResponseHandler]
  -[MCResourceDownloader setUrlResponseHandler:]


MCSessionPeerConnectionData : NSObject
 @property  NSData *gckSessionConnectionData
 @property  long long encryptionPreference
 @property  BOOL hasIdentitySet

  // class methods
  +[MCSessionPeerConnectionData connectionDataSegmentWithEncryptionPreference:identitySet:gckSessionConnectionDataBytes:gckSessionConnectionDataLength:]

  // instance methods
  -[MCSessionPeerConnectionData dealloc]
  -[MCSessionPeerConnectionData encryptionPreference]
  -[MCSessionPeerConnectionData initWithConnectionDataBlob:]
  -[MCSessionPeerConnectionData parseConnectionDataSegmentWithBytes:withLength:]
  -[MCSessionPeerConnectionData parseConnectionDataBlob:]
  -[MCSessionPeerConnectionData gckSessionConnectionData]
  -[MCSessionPeerConnectionData setGckSessionConnectionData:]
  -[MCSessionPeerConnectionData setEncryptionPreference:]
  -[MCSessionPeerConnectionData hasIdentitySet]
  -[MCSessionPeerConnectionData setHasIdentitySet:]


MCResourceProgressObserver : NSObject
 @property  NSString *name
 @property  NSProgress *progress
 @property  @? cancelHandler

  // instance methods
  -[MCResourceProgressObserver progress]
  -[MCResourceProgressObserver setCancelHandler:]
  -[MCResourceProgressObserver setProgress:]
  -[MCResourceProgressObserver dealloc]
  -[MCResourceProgressObserver observeValueForKeyPath:ofObject:change:context:]
  -[MCResourceProgressObserver setName:]
  -[MCResourceProgressObserver invalidate]
  -[MCResourceProgressObserver name]
  -[MCResourceProgressObserver cancelHandler]
  -[MCResourceProgressObserver initWithName:progress:cancelHandler:]


MCSession : NSObject
 @property  <MCSessionPrivateDelegate> *privateDelegate
 @property  BOOL AWDLDisabled
 @property  BOOL preferNCMOverEthernet
 @property  ^{OpaqueGCKSession=} gckSession
 @property  ^{OpaqueAGPSession=} agpSession
 @property  unsigned int gckPID
 @property  NSMutableDictionary *peerIDMap
 @property  NSObject<OS_dispatch_queue> *syncQueue
 @property  <MCSessionPrivateDelegate> *privateDelegate
 @property  NSMutableDictionary *peerStates
 @property  NSMutableDictionary *connectionPendingPeerEvents
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  unsigned long stateHandle
 @property  NSString *sessionID
 @property  unsigned long maxPeers
 @property  <MCSessionDelegate> *delegate
 @property  MCPeerID *myPeerID
 @property  NSArray *securityIdentity
 @property  long long encryptionPreference
 @property  NSArray *connectedPeers

  // class methods
  +[MCSession stringForSessionState:]
  +[MCSession stringForMCSessionSendDataMode:]

  // instance methods
  -[MCSession stateHandle]
  -[MCSession syncQueue]
  -[MCSession setSyncQueue:]
  -[MCSession setPrivateDelegate:]
  -[MCSession disconnect]
  -[MCSession privateDelegate]
  -[MCSession setDelegate:]
  -[MCSession setCallbackQueue:]
  -[MCSession sessionID]
  -[MCSession delegate]
  -[MCSession callbackQueue]
  -[MCSession dealloc]
  -[MCSession setStateHandle:]
  -[MCSession setSessionID:]
  -[MCSession init]
  -[MCSession peerStates]
  -[MCSession sendData:toPeers:withMode:error:]
  -[MCSession sendResourceAtURL:withName:toPeer:withCompletionHandler:]
  -[MCSession cancelConnectPeer:]
  -[MCSession initWithPeer:securityIdentity:encryptionPreference:]
  -[MCSession setHeartbeatTimeout:]
  -[MCSession setAWDLDisabled:]
  -[MCSession securityIdentity]
  -[MCSession initWithPeer:]
  -[MCSession connectedPeers]
  -[MCSession encryptionPreference]
  -[MCSession stringForEncryptionPreference:]
  -[MCSession syncHandleXDataDataPacket:packetSize:forPeer:state:]
  -[MCSession syncSendXDataStreamOpenResponseToPID:withRequestID:streamID:]
  -[MCSession syncSendXDataStreamCloseFromSenderToPID:streamID:closeReason:]
  -[MCSession syncSendXDataStreamCloseFromReceiverToPID:streamID:closeReason:]
  -[MCSession syncSendXDataPeerIDPushToPID:]
  -[MCSession syncSendXDataConnectionBlobPushToPID:connectionBlob:]
  -[MCSession syncCloseIncomingStream:forPeer:state:error:reason:shouldTriggerCancelProgress:]
  -[MCSession syncCloseOutgoingStream:forPeer:state:error:shouldTriggerCancelProgress:]
  -[MCSession syncCloseStreamsForPeer:]
  -[MCSession syncDetailedDescription]
  -[MCSession syncStateCapture]
  -[MCSession startConnectionWithIndirectPID:]
  -[MCSession syncCancelIncomingStream:fromPeer:]
  -[MCSession cancelIncomingStream:fromPeer:]
  -[MCSession syncCancelOutgoingStream:toPeer:]
  -[MCSession cancelOutgoingStream:toPeer:]
  -[MCSession syncConnectedPeersCount]
  -[MCSession syncPeer:changeStateTo:shouldForceCallback:]
  -[MCSession syncHandleNetworkEvent:pid:freeEventWhenDone:]
  -[MCSession syncGetConnectionDataForPeerState:completionHandler:]
  -[MCSession nearbyConnectionDataForPeer:withCompletionHandler:]
  -[MCSession isEncryptionPreferenceCompatible:]
  -[MCSession syncConnectPeer:withConnectionData:]
  -[MCSession connectPeer:withNearbyConnectionData:]
  -[MCSession syncSendData:toPeers:withDataMode:]
  -[MCSession syncStartStreamWithName:toPeer:mcFD:isResource:]
  -[MCSession startStreamWithName:toPeer:error:]
  -[MCSession logSessionInfo]
  -[MCSession syncLogConnectedPeers]
  -[MCSession syncLogMaxConnectedPeers]
  -[MCSession myPeerID]
  -[MCSession gckSession]
  -[MCSession setGckSession:]
  -[MCSession agpSession]
  -[MCSession setAgpSession:]
  -[MCSession gckPID]
  -[MCSession setGckPID:]
  -[MCSession peerIDMap]
  -[MCSession setPeerIDMap:]
  -[MCSession setPeerStates:]
  -[MCSession connectionPendingPeerEvents]
  -[MCSession setConnectionPendingPeerEvents:]
  -[MCSession maxPeers]
  -[MCSession setMaxPeers:]
  -[MCSession peerDidDeclineInvitation:]
  -[MCSession connectedInterfacesForPeer:]
  -[MCSession isAWDLDisabled]
  -[MCSession preferNCMOverEthernet]
  -[MCSession setPreferNCMOverEthernet:]
  -[MCSession setICETimeoutForced:]
  -[MCSession closeDirectConnectionsWithPeer:]


MCAlertController : UIAlertController
 @property  UIWindow *alertWindow
 @property  @? viewWillAppearHandler
 @property  @? viewDidDisappearHandler

  // instance methods
  -[MCAlertController show]
  -[MCAlertController dismiss]
  -[MCAlertController dealloc]
  -[MCAlertController viewWillAppear:]
  -[MCAlertController viewDidDisappear:]
  -[MCAlertController viewDidDisappearHandler]
  -[MCAlertController setViewDidDisappearHandler:]
  -[MCAlertController viewWillAppearHandler]
  -[MCAlertController setViewWillAppearHandler:]
  -[MCAlertController alertWindow]
  -[MCAlertController setAlertWindow:]


MCNearbyServiceUtils : NSObject
  // class methods
  +[MCNearbyServiceUtils isServiceTypeValid:]
  +[MCNearbyServiceUtils formattedServiceType:]


MCNearbyDiscoveryPeerConnection : NSObject <NSStreamDelegate>
 @property  NSString *remoteServiceName
 @property  NSString *localServiceName
 @property  NSInputStream *inputStream
 @property  NSOutputStream *outputStream
 @property  @? receiveDataHandler
 @property  @? connectedHandler
 @property  NSObject<OS_dispatch_queue> *syncQueue
 @property  NSObject<OS_dispatch_queue> *targetQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCNearbyDiscoveryPeerConnection syncQueue]
  -[MCNearbyDiscoveryPeerConnection setSyncQueue:]
  -[MCNearbyDiscoveryPeerConnection stream:handleEvent:]
  -[MCNearbyDiscoveryPeerConnection setTargetQueue:]
  -[MCNearbyDiscoveryPeerConnection targetQueue]
  -[MCNearbyDiscoveryPeerConnection setOutputStream:]
  -[MCNearbyDiscoveryPeerConnection dealloc]
  -[MCNearbyDiscoveryPeerConnection inputStream]
  -[MCNearbyDiscoveryPeerConnection outputStream]
  -[MCNearbyDiscoveryPeerConnection invalidate]
  -[MCNearbyDiscoveryPeerConnection setInputStream:]
  -[MCNearbyDiscoveryPeerConnection initWithLocalServiceName:]
  -[MCNearbyDiscoveryPeerConnection syncAppendDataToSend:]
  -[MCNearbyDiscoveryPeerConnection setupInputStream:outputStream:]
  -[MCNearbyDiscoveryPeerConnection connectToNetService:]
  -[MCNearbyDiscoveryPeerConnection attachInputStream:outputStream:]
  -[MCNearbyDiscoveryPeerConnection shouldDecideAboutConnection]
  -[MCNearbyDiscoveryPeerConnection syncSendData]
  -[MCNearbyDiscoveryPeerConnection syncSendMessage:data:withCompletionHandler:]
  -[MCNearbyDiscoveryPeerConnection syncSendHello]
  -[MCNearbyDiscoveryPeerConnection syncSendAccept]
  -[MCNearbyDiscoveryPeerConnection syncAcceptedConnection]
  -[MCNearbyDiscoveryPeerConnection syncSendMessageReceipt:sequenceNumber:]
  -[MCNearbyDiscoveryPeerConnection syncProcessMessage:data:sequenceNumber:]
  -[MCNearbyDiscoveryPeerConnection syncReceivedData:error:]
  -[MCNearbyDiscoveryPeerConnection syncCloseConnectionNow]
  -[MCNearbyDiscoveryPeerConnection sendData:withCompletionHandler:]
  -[MCNearbyDiscoveryPeerConnection stringForStreamEventCode:]
  -[MCNearbyDiscoveryPeerConnection syncReadFromInputStream]
  -[MCNearbyDiscoveryPeerConnection socketForStream:]
  -[MCNearbyDiscoveryPeerConnection syncHandleStreamEventOpenCompleted:]
  -[MCNearbyDiscoveryPeerConnection syncHandleInputStreamEvent:]
  -[MCNearbyDiscoveryPeerConnection syncHandleOutputStreamEvent:]
  -[MCNearbyDiscoveryPeerConnection remoteServiceName]
  -[MCNearbyDiscoveryPeerConnection setRemoteServiceName:]
  -[MCNearbyDiscoveryPeerConnection localServiceName]
  -[MCNearbyDiscoveryPeerConnection setLocalServiceName:]
  -[MCNearbyDiscoveryPeerConnection connectedHandler]
  -[MCNearbyDiscoveryPeerConnection setConnectedHandler:]
  -[MCNearbyDiscoveryPeerConnection receiveDataHandler]
  -[MCNearbyDiscoveryPeerConnection setReceiveDataHandler:]


MCNearbyPeerTableViewCell : UITableViewCell
  // instance methods
  -[MCNearbyPeerTableViewCell initWithStyle:reuseIdentifier:]


MCBrowserViewController : UIViewController <MCSessionPrivateDelegate, UITableViewDataSource, UITableViewDelegate, UINavigationBarDelegate, MCNearbyServiceBrowserDelegate>
 @property  MCPeerID *myPeerID
 @property  MCNearbyServiceBrowser *browser
 @property  UITableView *tableView
 @property  NSMutableArray *nearbyPeersSection
 @property  NSMutableArray *invitedPeersSection
 @property  NSMutableDictionary *invitedPeersState
 @property  NSMutableArray *foundPeers
 @property  MCSession *session
 @property  UIBarButtonItem *doneButton
 @property  UIBarButtonItem *cancelButton
 @property  UINavigationBar *navigationBar
 @property  NSBundle *frameworkBundle
 @property  unsigned long declinedPeersCount
 @property  BOOL maximumNumberOfPeersReached
 @property  BOOL minimumNumberOfPeersReached
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  <MCBrowserViewControllerDelegate> *delegate
 @property  unsigned long minimumNumberOfPeers
 @property  unsigned long maximumNumberOfPeers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCBrowserViewController setNavigationBar:]
  -[MCBrowserViewController tableView:cellForRowAtIndexPath:]
  -[MCBrowserViewController tableView:numberOfRowsInSection:]
  -[MCBrowserViewController tableView:shouldHighlightRowAtIndexPath:]
  -[MCBrowserViewController numberOfSectionsInTableView:]
  -[MCBrowserViewController setDoneButton:]
  -[MCBrowserViewController session]
  -[MCBrowserViewController setCancelButton:]
  -[MCBrowserViewController setDelegate:]
  -[MCBrowserViewController setCallbackQueue:]
  -[MCBrowserViewController positionForBar:]
  -[MCBrowserViewController tableView:viewForHeaderInSection:]
  -[MCBrowserViewController isVisible]
  -[MCBrowserViewController setSession:]
  -[MCBrowserViewController didReceiveMemoryWarning]
  -[MCBrowserViewController tableView:didSelectRowAtIndexPath:]
  -[MCBrowserViewController delegate]
  -[MCBrowserViewController callbackQueue]
  -[MCBrowserViewController cancelButton]
  -[MCBrowserViewController doneButton]
  -[MCBrowserViewController initWithNibName:bundle:]
  -[MCBrowserViewController browser]
  -[MCBrowserViewController tableView:titleForHeaderInSection:]
  -[MCBrowserViewController dealloc]
  -[MCBrowserViewController tableView]
  -[MCBrowserViewController viewDidLoad]
  -[MCBrowserViewController viewWillAppear:]
  -[MCBrowserViewController setTableView:]
  -[MCBrowserViewController navigationBar]
  -[MCBrowserViewController tableView:heightForHeaderInSection:]
  -[MCBrowserViewController viewDidDisappear:]
  -[MCBrowserViewController frameworkBundle]
  -[MCBrowserViewController init]
  -[MCBrowserViewController setFrameworkBundle:]
  -[MCBrowserViewController setBrowser:]
  -[MCBrowserViewController initWithCoder:]
  -[MCBrowserViewController browser:lostPeer:]
  -[MCBrowserViewController browser:foundPeer:withDiscoveryInfo:]
  -[MCBrowserViewController doneTapped:]
  -[MCBrowserViewController cancelTapped:]
  -[MCBrowserViewController applicationDidEnterBackgroundNotification:]
  -[MCBrowserViewController applicationWillEnterForegroundNotification:]
  -[MCBrowserViewController myPeerID]
  -[MCBrowserViewController session:peer:didChangeState:propagate:]
  -[MCBrowserViewController session:didReceiveData:fromPeer:propagate:]
  -[MCBrowserViewController session:didReceiveStream:withName:fromPeer:propagate:]
  -[MCBrowserViewController session:didStartReceivingResourceWithName:fromPeer:withProgress:propagate:]
  -[MCBrowserViewController session:didFinishReceivingResourceWithName:fromPeer:atURL:withError:propagate:]
  -[MCBrowserViewController initWithBrowser:session:]
  -[MCBrowserViewController initWithServiceType:session:]
  -[MCBrowserViewController handleViewWillAppear]
  -[MCBrowserViewController handleViewDidDisappear]
  -[MCBrowserViewController setMinimumNumberOfPeers:]
  -[MCBrowserViewController setMaximumNumberOfPeers:]
  -[MCBrowserViewController peerJoinedSession]
  -[MCBrowserViewController peer:changedStateTo:]
  -[MCBrowserViewController detailStringForPeerState:]
  -[MCBrowserViewController verifyPeerIsAccountedFor:]
  -[MCBrowserViewController maximumNumberOfPeersReached]
  -[MCBrowserViewController minimumNumberOfPeersReached]
  -[MCBrowserViewController nearbySectionTitle]
  -[MCBrowserViewController minimumNumberOfPeers]
  -[MCBrowserViewController maximumNumberOfPeers]
  -[MCBrowserViewController setMyPeerID:]
  -[MCBrowserViewController nearbyPeersSection]
  -[MCBrowserViewController setNearbyPeersSection:]
  -[MCBrowserViewController invitedPeersSection]
  -[MCBrowserViewController setInvitedPeersSection:]
  -[MCBrowserViewController invitedPeersState]
  -[MCBrowserViewController setInvitedPeersState:]
  -[MCBrowserViewController foundPeers]
  -[MCBrowserViewController setFoundPeers:]
  -[MCBrowserViewController declinedPeersCount]
  -[MCBrowserViewController setDeclinedPeersCount:]


MCNearbyServiceAdvertiser : NSObject <NSNetServiceDelegate>
 @property  NSString *serviceType
 @property  NSString *formattedServiceType
 @property  NSMutableDictionary *peers
 @property  NSDictionary *discoveryInfo
 @property  NSNetService *networkServer
 @property  NSData *TXTRecordData
 @property  long long outgoingInviteID
 @property  NSObject<OS_dispatch_queue> *syncQueue
 @property  NSMutableDictionary *invites
 @property  BOOL isAdvertising
 @property  BOOL wasAdvertising
 @property  BOOL AWDLDisabled
 @property  <MCNearbyServiceAdvertiserDelegate> *delegate
 @property  MCPeerID *myPeerID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCNearbyServiceAdvertiser isAdvertising]
  -[MCNearbyServiceAdvertiser syncQueue]
  -[MCNearbyServiceAdvertiser setSyncQueue:]
  -[MCNearbyServiceAdvertiser peers]
  -[MCNearbyServiceAdvertiser setDelegate:]
  -[MCNearbyServiceAdvertiser setServiceType:]
  -[MCNearbyServiceAdvertiser setIsAdvertising:]
  -[MCNearbyServiceAdvertiser delegate]
  -[MCNearbyServiceAdvertiser dealloc]
  -[MCNearbyServiceAdvertiser serviceType]
  -[MCNearbyServiceAdvertiser invites]
  -[MCNearbyServiceAdvertiser init]
  -[MCNearbyServiceAdvertiser netService:didNotPublish:]
  -[MCNearbyServiceAdvertiser netService:didAcceptConnectionWithInputStream:outputStream:]
  -[MCNearbyServiceAdvertiser netServiceDidStop:]
  -[MCNearbyServiceAdvertiser setTXTRecordData:]
  -[MCNearbyServiceAdvertiser TXTRecordData]
  -[MCNearbyServiceAdvertiser netServiceDidPublish:]
  -[MCNearbyServiceAdvertiser setPeers:]
  -[MCNearbyServiceAdvertiser startAdvertisingPeer]
  -[MCNearbyServiceAdvertiser stopAdvertisingPeer]
  -[MCNearbyServiceAdvertiser initWithPeer:discoveryInfo:serviceType:]
  -[MCNearbyServiceAdvertiser setAWDLDisabled:]
  -[MCNearbyServiceAdvertiser applicationWillTerminateNotification:]
  -[MCNearbyServiceAdvertiser applicationDidEnterBackgroundNotification:]
  -[MCNearbyServiceAdvertiser applicationWillEnterForegroundNotification:]
  -[MCNearbyServiceAdvertiser myPeerID]
  -[MCNearbyServiceAdvertiser isAWDLDisabled]
  -[MCNearbyServiceAdvertiser makeTXTRecordDataWithDiscoveryInfo:]
  -[MCNearbyServiceAdvertiser txtRecordDataWithDiscoveryInfo:]
  -[MCNearbyServiceAdvertiser parseIDString:displayName:fromIdentifier:]
  -[MCNearbyServiceAdvertiser syncStartAdvertisingPeer]
  -[MCNearbyServiceAdvertiser syncStopAdvertisingPeer]
  -[MCNearbyServiceAdvertiser syncAttachConnection:toPeer:]
  -[MCNearbyServiceAdvertiser syncCloseConnectionForPeer:]
  -[MCNearbyServiceAdvertiser syncSendDictionary:toPeer:withCompletionHandler:]
  -[MCNearbyServiceAdvertiser syncHandleInvite:fromPeer:]
  -[MCNearbyServiceAdvertiser syncHandleInviteConnect:fromPeer:]
  -[MCNearbyServiceAdvertiser syncSendData:toPeer:withCompletionHandler:]
  -[MCNearbyServiceAdvertiser syncReceivedData:fromPeer:]
  -[MCNearbyServiceAdvertiser syncHandleIncomingInputStream:outputStream:]
  -[MCNearbyServiceAdvertiser discoveryInfo]
  -[MCNearbyServiceAdvertiser setDiscoveryInfo:]
  -[MCNearbyServiceAdvertiser formattedServiceType]
  -[MCNearbyServiceAdvertiser setFormattedServiceType:]
  -[MCNearbyServiceAdvertiser networkServer]
  -[MCNearbyServiceAdvertiser setNetworkServer:]
  -[MCNearbyServiceAdvertiser outgoingInviteID]
  -[MCNearbyServiceAdvertiser setOutgoingInviteID:]
  -[MCNearbyServiceAdvertiser setInvites:]
  -[MCNearbyServiceAdvertiser wasAdvertising]
  -[MCNearbyServiceAdvertiser setWasAdvertising:]


MCNearbyServiceBrowser : NSObject <NSNetServiceBrowserDelegate, NSNetServiceDelegate>
 @property  NSMutableDictionary *netServices
 @property  NSMutableDictionary *peers
 @property  NSNetServiceBrowser *networkBrowser
 @property  long long outgoingInviteID
 @property  NSObject<OS_dispatch_queue> *syncQueue
 @property  NSMutableDictionary *invites
 @property  NSString *serviceType
 @property  NSString *formattedServiceType
 @property  BOOL isBrowsing
 @property  BOOL wasBrowsing
 @property  BOOL AWDLDisabled
 @property  <MCNearbyServiceBrowserDelegate> *delegate
 @property  MCPeerID *myPeerID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCNearbyServiceBrowser syncQueue]
  -[MCNearbyServiceBrowser setSyncQueue:]
  -[MCNearbyServiceBrowser peers]
  -[MCNearbyServiceBrowser setDelegate:]
  -[MCNearbyServiceBrowser netServiceBrowser:didFindService:moreComing:]
  -[MCNearbyServiceBrowser setServiceType:]
  -[MCNearbyServiceBrowser delegate]
  -[MCNearbyServiceBrowser dealloc]
  -[MCNearbyServiceBrowser serviceType]
  -[MCNearbyServiceBrowser invites]
  -[MCNearbyServiceBrowser netServiceBrowser:didRemoveService:moreComing:]
  -[MCNearbyServiceBrowser init]
  -[MCNearbyServiceBrowser netServiceBrowser:didNotSearch:]
  -[MCNearbyServiceBrowser netServiceBrowserWillSearch:]
  -[MCNearbyServiceBrowser netServiceBrowser:didFindDomain:moreComing:]
  -[MCNearbyServiceBrowser netServiceBrowser:didRemoveDomain:moreComing:]
  -[MCNearbyServiceBrowser netServiceBrowserDidStopSearch:]
  -[MCNearbyServiceBrowser netService:didUpdateTXTRecordData:]
  -[MCNearbyServiceBrowser setPeers:]
  -[MCNearbyServiceBrowser initWithPeer:serviceType:]
  -[MCNearbyServiceBrowser startBrowsingForPeers]
  -[MCNearbyServiceBrowser stopBrowsingForPeers]
  -[MCNearbyServiceBrowser invitePeer:toSession:withContext:timeout:]
  -[MCNearbyServiceBrowser isBrowsing]
  -[MCNearbyServiceBrowser setAWDLDisabled:]
  -[MCNearbyServiceBrowser applicationWillTerminateNotification:]
  -[MCNearbyServiceBrowser applicationDidEnterBackgroundNotification:]
  -[MCNearbyServiceBrowser applicationWillEnterForegroundNotification:]
  -[MCNearbyServiceBrowser setIsBrowsing:]
  -[MCNearbyServiceBrowser myPeerID]
  -[MCNearbyServiceBrowser isAWDLDisabled]
  -[MCNearbyServiceBrowser parseIDString:displayName:fromIdentifier:]
  -[MCNearbyServiceBrowser syncAttachConnection:toPeer:]
  -[MCNearbyServiceBrowser syncCloseConnectionForPeer:]
  -[MCNearbyServiceBrowser syncSendDictionary:toPeer:withCompletionHandler:]
  -[MCNearbyServiceBrowser syncSendData:toPeer:withCompletionHandler:]
  -[MCNearbyServiceBrowser syncReceivedData:fromPeer:]
  -[MCNearbyServiceBrowser formattedServiceType]
  -[MCNearbyServiceBrowser setFormattedServiceType:]
  -[MCNearbyServiceBrowser outgoingInviteID]
  -[MCNearbyServiceBrowser setOutgoingInviteID:]
  -[MCNearbyServiceBrowser setInvites:]
  -[MCNearbyServiceBrowser syncNextOutgoingInviteID]
  -[MCNearbyServiceBrowser syncStartBrowsingForPeers]
  -[MCNearbyServiceBrowser syncStopBrowsingForPeers]
  -[MCNearbyServiceBrowser syncInitiateConnectionToPeer:]
  -[MCNearbyServiceBrowser syncInvitePeer:toSession:withContext:timeout:]
  -[MCNearbyServiceBrowser syncHandleInviteResponse:fromPeer:]
  -[MCNearbyServiceBrowser syncHandleDeclinedInviteWithInfo:]
  -[MCNearbyServiceBrowser syncHandleInviteTimeout:forPeer:]
  -[MCNearbyServiceBrowser rebuildUserDiscoveryInfoFromTXTRecordDictionary:]
  -[MCNearbyServiceBrowser netServices]
  -[MCNearbyServiceBrowser setNetServices:]
  -[MCNearbyServiceBrowser networkBrowser]
  -[MCNearbyServiceBrowser setNetworkBrowser:]
  -[MCNearbyServiceBrowser wasBrowsing]
  -[MCNearbyServiceBrowser setWasBrowsing:]


MCAdvertiserAssistant : NSObject <MCNearbyServiceAdvertiserDelegate>
 @property  NSDictionary *discoveryInfo
 @property  MCPeerID *myPeerID
 @property  NSString *serviceType
 @property  MCSession *session
 @property  MCNearbyServiceAdvertiser *advertiser
 @property  NSMutableArray *invitationsBuffer
 @property  @? invitationHandlerForPresentedAlert
 @property  NSString *appName
 @property  BOOL isAdvertising
 @property  BOOL wasAdvertising
 @property  NSBundle *frameworkBundle
 @property  MCAlertController *alertController
 @property  <MCAdvertiserAssistantDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCAdvertiserAssistant appName]
  -[MCAdvertiserAssistant isAdvertising]
  -[MCAdvertiserAssistant session]
  -[MCAdvertiserAssistant setDelegate:]
  -[MCAdvertiserAssistant setServiceType:]
  -[MCAdvertiserAssistant setIsAdvertising:]
  -[MCAdvertiserAssistant setSession:]
  -[MCAdvertiserAssistant delegate]
  -[MCAdvertiserAssistant dealloc]
  -[MCAdvertiserAssistant stop]
  -[MCAdvertiserAssistant advertiser]
  -[MCAdvertiserAssistant serviceType]
  -[MCAdvertiserAssistant frameworkBundle]
  -[MCAdvertiserAssistant start]
  -[MCAdvertiserAssistant advertiser:didReceiveInvitationFromPeer:withContext:invitationHandler:]
  -[MCAdvertiserAssistant init]
  -[MCAdvertiserAssistant setFrameworkBundle:]
  -[MCAdvertiserAssistant setAdvertiser:]
  -[MCAdvertiserAssistant alertController]
  -[MCAdvertiserAssistant setAlertController:]
  -[MCAdvertiserAssistant applicationWillTerminateNotification:]
  -[MCAdvertiserAssistant applicationDidEnterBackgroundNotification:]
  -[MCAdvertiserAssistant myPeerID]
  -[MCAdvertiserAssistant setMyPeerID:]
  -[MCAdvertiserAssistant discoveryInfo]
  -[MCAdvertiserAssistant setDiscoveryInfo:]
  -[MCAdvertiserAssistant wasAdvertising]
  -[MCAdvertiserAssistant setWasAdvertising:]
  -[MCAdvertiserAssistant initWithServiceType:discoveryInfo:session:]
  -[MCAdvertiserAssistant handleUserInvitationDecision:]
  -[MCAdvertiserAssistant presentNextInvitation]
  -[MCAdvertiserAssistant invitationsBuffer]
  -[MCAdvertiserAssistant setInvitationsBuffer:]
  -[MCAdvertiserAssistant invitationHandlerForPresentedAlert]
  -[MCAdvertiserAssistant setInvitationHandlerForPresentedAlert:]


MCNearbyDiscoveryPeer : NSObject
 @property  NSMutableArray *sendDataBuffer
 @property  MCNearbyDiscoveryPeerConnection *connection
 @property  MCPeerID *peerID
 @property  int state
 @property  NSNetService *netService
 @property  MCNearbyDiscoveryPeerConnection *trialConnection

  // instance methods
  -[MCNearbyDiscoveryPeer closeConnection]
  -[MCNearbyDiscoveryPeer setPeerID:]
  -[MCNearbyDiscoveryPeer peerID]
  -[MCNearbyDiscoveryPeer state]
  -[MCNearbyDiscoveryPeer dealloc]
  -[MCNearbyDiscoveryPeer connection]
  -[MCNearbyDiscoveryPeer stringForState:]
  -[MCNearbyDiscoveryPeer invalidate]
  -[MCNearbyDiscoveryPeer init]
  -[MCNearbyDiscoveryPeer setState:]
  -[MCNearbyDiscoveryPeer setConnection:]
  -[MCNearbyDiscoveryPeer setNetService:]
  -[MCNearbyDiscoveryPeer netService]
  -[MCNearbyDiscoveryPeer sendData:withCompletionHandler:]
  -[MCNearbyDiscoveryPeer initWithPeerID:]
  -[MCNearbyDiscoveryPeer attachConnection:]
  -[MCNearbyDiscoveryPeer flushDataBuffer]
  -[MCNearbyDiscoveryPeer trialConnection]
  -[MCNearbyDiscoveryPeer setTrialConnection:]
  -[MCNearbyDiscoveryPeer sendDataBuffer]
  -[MCNearbyDiscoveryPeer setSendDataBuffer:]


MCNearbyPeerTableViewHeader : UIView
  // instance methods
  -[MCNearbyPeerTableViewHeader initWithTitle:]
  -[MCNearbyPeerTableViewHeader dealloc]
  -[MCNearbyPeerTableViewHeader layoutSubviews]


MCPeerIDInternal : NSObject
 @property  NSString *idString
 @property  unsigned long pid64
 @property  NSString *displayName

  // instance methods
  -[MCPeerIDInternal dealloc]
  -[MCPeerIDInternal displayName]
  -[MCPeerIDInternal idString]
  -[MCPeerIDInternal initWithIDString:pid64:displayName:]
  -[MCPeerIDInternal pid64]


MCPeerID : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *displayName

  // class methods
  +[MCPeerID supportsSecureCoding]

  // instance methods
  -[MCPeerID internalDescription]
  -[MCPeerID encodeWithCoder:]
  -[MCPeerID serializedRepresentation]
  -[MCPeerID dealloc]
  -[MCPeerID initWithSerializedRepresentation:]
  -[MCPeerID pid]
  -[MCPeerID copyWithZone:]
  -[MCPeerID displayName]
  -[MCPeerID isEqual:]
  -[MCPeerID init]
  -[MCPeerID initWithCoder:]
  -[MCPeerID initWithDisplayName:]
  -[MCPeerID idString]
  -[MCPeerID pid64]
  -[MCPeerID displayNameAndPID]
  -[MCPeerID initWithPID:displayName:]
  -[MCPeerID initWithIDString:displayName:]


(MCSession_copyDeep_MC)
	// instance methods
	-[(MCSession_copyDeep_MC) copyDeep_MC]

01 00 0200 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUDashboardClient 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSNetService 
01 00 0600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSNetServiceBrowser 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0f00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 0600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 0600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
