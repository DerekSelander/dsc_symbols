|| __DATA.__objc_data _OBJC_CLASS_$_TKClientTokenAdvertisedItem
|| __DATA.__objc_data _OBJC_CLASS_$_TKCompactTLVRecord
|| __DATA.__objc_data _OBJC_CLASS_$_TKSimpleTLVRecord
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCard
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardATR
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardATRInterfaceGroup
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardPINFormat
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardSlot
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardSlotEngine
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardSlotManager
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardSlotScreen
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardToken
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardTokenDriver
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardTokenSession
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardUserInteraction
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardUserInteractionForConfirmation
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardUserInteractionForPINOperation
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardUserInteractionForSecurePINChange
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardUserInteractionForSecurePINVerification
|| __DATA.__objc_data _OBJC_CLASS_$_TKSmartCardUserInteractionForStringEntry
|| __DATA.__objc_data _OBJC_CLASS_$_TKTokenAccessUserPromptInfo
|| __DATA.__objc_data _OBJC_CLASS_$_TKTokenDriverConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_TKTokenKeyExchangeParameters
|| __DATA.__objc_data _OBJC_CLASS_$_TKTokenKeychainCertificate
|| __DATA.__objc_data _OBJC_CLASS_$_TKTokenKeychainContents
|| __DATA.__objc_data _OBJC_CLASS_$_TKTokenKeychainItem
|| __DATA.__objc_data _OBJC_CLASS_$_TKTokenKeychainKey
|| __DATA.__objc_data _OBJC_CLASS_$_TKTokenPasswordAuthOperation
|| __DATA.__objc_data _OBJC_CLASS_$_TKTokenSmartCardPINAuthOperation
|| __DATA.__objc_data _OBJC_CLASS_$_TKTokenWatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_TKClientTokenAdvertisedItem
|| __DATA.__objc_data _OBJC_METACLASS_$_TKCompactTLVRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSimpleTLVRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCard
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardATR
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardATRInterfaceGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardPINFormat
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardSlot
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardSlotEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardSlotManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardSlotScreen
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardToken
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardTokenDriver
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardTokenSession
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardUserInteraction
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardUserInteractionForConfirmation
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardUserInteractionForPINOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardUserInteractionForSecurePINChange
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardUserInteractionForSecurePINVerification
|| __DATA.__objc_data _OBJC_METACLASS_$_TKSmartCardUserInteractionForStringEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_TKTokenAccessUserPromptInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_TKTokenDriverConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_TKTokenKeyExchangeParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_TKTokenKeychainCertificate
|| __DATA.__objc_data _OBJC_METACLASS_$_TKTokenKeychainContents
|| __DATA.__objc_data _OBJC_METACLASS_$_TKTokenKeychainItem
|| __DATA.__objc_data _OBJC_METACLASS_$_TKTokenKeychainKey
|| __DATA.__objc_data _OBJC_METACLASS_$_TKTokenPasswordAuthOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_TKTokenSmartCardPINAuthOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_TKTokenWatcher
|| __DATA_CONST.__const _TKClientTokenServerPortName
|| __DATA_CONST.__const _TKEntitlementSlotType
|| __DATA_CONST.__const _TKErrorDomain
|| __DATA_CONST.__const _TKNotifyNameFirstSlot
|| __DATA_CONST.__const _TKProtocolSlotClientName
|| __DATA_CONST.__const _TKProtocolSlotRegistryName
|| __DATA_CONST.__const _TKProtocolTokenPairingNotificationName
|| __DATA_CONST.__const _TKRegisterOptionRemoveObjects
|| __DATA_CONST.__const _TKSlotTypeSmartCard
|| __DATA_CONST.__const _TKSmartCardSessionEndPolicyKey
|| __DATA_CONST.__const _TKSmartCardSessionProtocol
|| __DATA_CONST.__const _TKSmartCardSessionSensitive
|| __DATA_CONST.__const _TKSmartCardSlotATR
|| __DATA_CONST.__const _TKSmartCardSlotMaxInputLength
|| __DATA_CONST.__const _TKSmartCardSlotMaxOutputLength
|| __DATA_CONST.__const _TKSmartCardSlotPowerStateKey
|| __DATA_CONST.__const _TKSmartCardSlotPreviousStateKey
|| __DATA_CONST.__const _TKSmartCardSlotSecurePINChangeSupportedKey
|| __DATA_CONST.__const _TKSmartCardSlotSecurePINVerificationSupportedKey
|| __DATA_CONST.__const _TKSmartCardSlotShareStateKey
|| __DATA_CONST.__const _TKSmartCardSlotStateKey
|| __DATA_CONST.__const _TKTokenClassDriverApplicationIDKey
|| __DATA_CONST.__const _TKTokenClassDriverClassIDKey
|| __DATA_CONST.__const _TKTokenClassDriverClassNameKey
|| __DATA_CONST.__const _TKTokenTypeKey
|| __DATA_CONST.__const _TKTokenWatcherServerStartedNotification
|| __DATA_CONST.__const _TKTransportSlotName
|| __DATA_CONST.__const _TKUnderlyingAKSErrorKey
|| __DATA_CONST.__const _kTKTokenAccessUserPromptInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKBERTLVRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKClientToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKClientTokenObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKClientTokenSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKSharedResource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKSharedResourceSlot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKTLVRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKTokenAccessRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKTokenAccessRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKTokenAuthOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKTokenBaseContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKTokenConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKTokenConfigurationConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKTokenConfigurationTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKTokenDriver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKTokenID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKTokenKeyAlgorithm
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TKTokenSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKBERTLVRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKClientToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKClientTokenObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKClientTokenSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKSharedResource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKSharedResourceSlot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKTLVRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKTokenAccessRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKTokenAccessRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKTokenAuthOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKTokenBaseContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKTokenConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKTokenConfigurationConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKTokenConfigurationTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKTokenDriver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKTokenID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKTokenKeyAlgorithm
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TKTokenSession
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFErrorCopyDescription
__ CoreFoundation: _CFErrorCopyUserInfo
__ CoreFoundation: _CFErrorCreateWithUserInfoKeysAndValues
__ CoreFoundation: _CFErrorGetCode
__ CoreFoundation: _CFErrorGetDomain
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetMaximumSizeForEncoding
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFRuntimeCreateInstance
__ CoreFoundation: __CFRuntimeRegisterClass
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFErrorDescriptionKey
__ CoreFoundation: _kCFErrorLocalizedDescriptionKey
__ CoreFoundation: _kCFPreferencesAnyUser
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSHomeDirectoryForUser
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_CLASS_$_NSXPCListenerEndpoint
__ Foundation: _OBJC_CLASS_$__NSExtensionContextVendor
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ LocalAuthentication: _OBJC_CLASS_$_LAContext
__ PlugInKit: _OBJC_CLASS_$_PKService
__ Security: _SecAccessControlCopyData
__ Security: _SecAccessControlCreate
__ Security: _SecAccessControlCreateFromData
__ Security: _SecAccessControlGetConstraint
__ Security: _SecAccessControlGetConstraints
__ Security: _SecAccessControlGetProtection
__ Security: _SecAccessControlIsBound
__ Security: _SecAccessControlSetBound
__ Security: _SecAccessControlSetConstraints
__ Security: _SecAccessControlSetProtection
__ Security: _SecCertificateCopyAttributeDictionary
__ Security: _SecCertificateCopyData
__ Security: _SecCertificateCopyKey
__ Security: _SecCertificateCopySubjectSummary
__ Security: _SecCertificateCreateWithData
__ Security: _SecCertificateGetKeyUsage
__ Security: _SecIdentityCreate
__ Security: _SecIdentityGetTypeID
__ Security: _SecKeyCopyAttributes
__ Security: _SecKeyCreateWithData
__ Security: _SecKeyGetAlgorithmId
__ Security: _kSecAttrAccessControl
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAlwaysPrivate
__ Security: _kSecAttrApplicationLabel
__ Security: _kSecAttrApplicationTag
__ Security: _kSecAttrCanDecrypt
__ Security: _kSecAttrCanDerive
__ Security: _kSecAttrCanSign
__ Security: _kSecAttrCanUnwrap
__ Security: _kSecAttrCertificateEncoding
__ Security: _kSecAttrCertificateType
__ Security: _kSecAttrIsPrivate
__ Security: _kSecAttrIssuer
__ Security: _kSecAttrKeyClass
__ Security: _kSecAttrKeyClassPrivate
__ Security: _kSecAttrKeySizeInBits
__ Security: _kSecAttrKeyType
__ Security: _kSecAttrLabel
__ Security: _kSecAttrPublicKeyHash
__ Security: _kSecAttrSerialNumber
__ Security: _kSecAttrSubject
__ Security: _kSecAttrSubjectKeyID
__ Security: _kSecAttrTokenID
__ Security: _kSecAttrTokenIDSecureElement
__ Security: _kSecAttrTokenIDSecureEnclave
__ Security: _kSecAttrTokenOID
__ Security: _kSecClass
__ Security: _kSecClassCertificate
__ Security: _kSecClassIdentity
__ Security: _kSecClassKey
__ Security: _kSecKeyKeyExchangeParameterRequestedSize
__ Security: _kSecKeyKeyExchangeParameterSharedInfo
__ Security: _kSecKeyParameterSETokenAttestationNonce
__ Security: _kSecUseAuthenticationContext
__ Security: _kSecUseCredentialReference
__ Security: _kSecValueData
__ Security: _kSecValueRef
__ SoftLinking: __sl_dlopen_audited
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_key_description
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _qos_class_main
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _vproc_swap_string
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
TKToken : NSObject /usr/lib/libSystem.B.dylib
 @property  TKTokenKeychainContents *keychainContents
 @property  TKTokenID *tokenID
 @property  TKTokenDriver *tokenDriver
 @property  <TKTokenDelegate> *delegate
 @property  TKTokenConfiguration *configuration

  // instance methods
  -[TKToken terminate]
  -[TKToken tokenID]
  -[TKToken .cxx_destruct]
  -[TKToken tokenDriver]
  -[TKToken initWithTokenDriver:instanceID:]
  -[TKToken keychainContents]
  -[TKToken setKeychainContents:]
  -[TKToken configuration]
  -[TKToken setDelegate:]
  -[TKToken delegate]


TKTokenDriver : NSObject /usr/lib/libSystem.B.dylib
 @property  TKTokenDriverContext *context
 @property  NSMutableDictionary *tokenConnections
 @property  id keepAlive
 @property  TKSharedResourceSlot *keepAliveResourceSlot
 @property  NSString *classID
 @property  NSDictionary *extensionAttributes
 @property  NSArray *tokenSessions
 @property  <TKTokenDriverDelegate> *delegate

  // class methods
  +[TKTokenDriver createDriver]

  // instance methods
  -[TKTokenDriver keepAlive]
  -[TKTokenDriver context]
  -[TKTokenDriver terminate]
  -[TKTokenDriver setKeepAlive:]
  -[TKTokenDriver init]
  -[TKTokenDriver dealloc]
  -[TKTokenDriver .cxx_destruct]
  -[TKTokenDriver setContext:]
  -[TKTokenDriver acquireTokenWithInstanceID:reply:]
  -[TKTokenDriver configureWithReply:]
  -[TKTokenDriver setExtensionAttributes:]
  -[TKTokenDriver extensionAttributes]
  -[TKTokenDriver tokenConnections]
  -[TKTokenDriver endpointForToken:]
  -[TKTokenDriver acquireTokenWithSlot:AID:reply:]
  -[TKTokenDriver getTokenWithAttributes:reply:]
  -[TKTokenDriver createTokenWithSlot:AID:error:]
  -[TKTokenDriver releaseTokenWithInstanceID:]
  -[TKTokenDriver tokenSessions]
  -[TKTokenDriver keepAliveResourceSlot]
  -[TKTokenDriver setKeepAliveResourceSlot:]
  -[TKTokenDriver setDelegate:]
  -[TKTokenDriver auditAuthOperation:auditToken:success:]
  -[TKTokenDriver delegate]
  -[TKTokenDriver classID]


TKTokenService_Subsystem : NSObject /usr/lib/libSystem.B.dylib <PKModularService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TKTokenService_Subsystem initForPlugInKit]


TKTokenDriverRequest : NSObject /usr/lib/libSystem.B.dylib <NSExtensionRequestHandling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TKTokenDriverRequest beginRequestWithExtensionContext:]


TKTokenBaseContext : NSExtensionContext /System/Library/Frameworks/Security.framework/Security
  // class methods
  +[TKTokenBaseContext _extensionAuxiliaryVendorProtocol]
  +[TKTokenBaseContext _extensionAuxiliaryHostProtocol]


TKTokenDriverContext : TKTokenBaseContext <TKTokenDriverProtocol>
 @property  TKTokenDriver *driver
 @property  <TKTokenDriverHostProtocol> *host
 @property  TKTokenConfigurationConnection *configurationConnection
 @property  double idleTimeout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TKTokenDriverContext host]
  -[TKTokenDriverContext startRequestWithError:]
  -[TKTokenDriverContext setup]
  -[TKTokenDriverContext driver]
  -[TKTokenDriverContext .cxx_destruct]
  -[TKTokenDriverContext configurationForTokenID:]
  -[TKTokenDriverContext idleTimeout]
  -[TKTokenDriverContext acquireTokenWithInstanceID:reply:]
  -[TKTokenDriverContext configureWithReply:]
  -[TKTokenDriverContext acquireTokenWithSlot:AID:reply:]
  -[TKTokenDriverContext auditAuthOperation:auditToken:success:]
  -[TKTokenDriverContext configurationConnection]
  -[TKTokenDriverContext releaseTokenWithInstanceID:reply:]


TKDataSource : NSObject /usr/lib/libSystem.B.dylib
 @property  r* ptr
 @property  r* end
 @property  NSData *data

  // instance methods
  -[TKDataSource end]
  -[TKDataSource .cxx_destruct]
  -[TKDataSource initWithData:]
  -[TKDataSource fetchDataWithLength:]
  -[TKDataSource data]
  -[TKDataSource fetchByte]
  -[TKDataSource ptr]
  -[TKDataSource bytesSafeToRead:]


TKTLVRecord : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long tag
 @property  NSData *value
 @property  NSData *data

  // class methods
  +[TKTLVRecord sequenceOfRecordsFromData:]
  +[TKTLVRecord recordFromData:]
  +[TKTLVRecord parseFromDataSource:]

  // instance methods
  -[TKTLVRecord tag]
  -[TKTLVRecord .cxx_destruct]
  -[TKTLVRecord initWithTag:value:data:]
  -[TKTLVRecord data]
  -[TKTLVRecord value]


TKBERTLVRecord : TKTLVRecord
  // class methods
  +[TKBERTLVRecord encodeNumber:into:]
  +[TKBERTLVRecord zuluDateFormatter]
  +[TKBERTLVRecord parseFromDataSource:]
  +[TKBERTLVRecord dataForTag:]

  // instance methods
  -[TKBERTLVRecord initWithTag:value:]
  -[TKBERTLVRecord initWithTag:records:]
  -[TKBERTLVRecord propertyList]
  -[TKBERTLVRecord initWithPropertyList:]


TKSimpleTLVRecord : TKTLVRecord
  // class methods
  +[TKSimpleTLVRecord parseFromDataSource:error:]

  // instance methods
  -[TKSimpleTLVRecord initWithTag:value:]


TKCompactTLVRecord : TKTLVRecord
  // class methods
  +[TKCompactTLVRecord parseFromDataSource:]

  // instance methods
  -[TKCompactTLVRecord initWithTag:value:]


TKTokenAccessDBBackedByUserDefaults : NSObject /usr/lib/libSystem.B.dylib <TKTokenAccessDB>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TKTokenAccessDBBackedByUserDefaults init]
  -[TKTokenAccessDBBackedByUserDefaults .cxx_destruct]
  -[TKTokenAccessDBBackedByUserDefaults _keyRefForRequest:]
  -[TKTokenAccessDBBackedByUserDefaults fetchAccessForRequest:]
  -[TKTokenAccessDBBackedByUserDefaults storeAccess:forRequest:]
  -[TKTokenAccessDBBackedByUserDefaults clearAllAccessRecords]


TKSmartCardSlotManager : NSObject /usr/lib/libSystem.B.dylib <TKProtocolSlotClientNotification>
 @property  NSArray *slotNames

  // class methods
  +[TKSmartCardSlotManager defaultManager]

  // instance methods
  -[TKSmartCardSlotManager initWithServer:]
  -[TKSmartCardSlotManager init]
  -[TKSmartCardSlotManager .cxx_destruct]
  -[TKSmartCardSlotManager slotNames]
  -[TKSmartCardSlotManager setSlotWithName:endpoint:type:reply:]
  -[TKSmartCardSlotManager getSlotWithName:reply:]
  -[TKSmartCardSlotManager slotNamed:]


TKSmartCardSlotProxy : NSObject /usr/lib/libSystem.B.dylib <TKProtocolSmartCardSlotNotification>
 @property  NSHashTable *cards

  // instance methods
  -[TKSmartCardSlotProxy initWithSlot:]
  -[TKSmartCardSlotProxy cards]
  -[TKSmartCardSlotProxy .cxx_destruct]
  -[TKSmartCardSlotProxy notifyWithParameters:]
  -[TKSmartCardSlotProxy cardSessionRequested]


TKSmartCardSlot : NSObject /usr/lib/libSystem.B.dylib
 @property  long long state
 @property  TKSmartCardATR *ATR
 @property  TKSmartCardSlotProxy *proxy
 @property  NSObject<OS_dispatch_queue> *queue
 @property  long long previousState
 @property  long long shareState
 @property  long long powerState
 @property  BOOL securePINVerificationSupported
 @property  BOOL securePINChangeSupported
 @property  NSString *name
 @property  long long maxInputLength
 @property  long long maxOutputLength

  // instance methods
  -[TKSmartCardSlot screen]
  -[TKSmartCardSlot ATR]
  -[TKSmartCardSlot powerState]
  -[TKSmartCardSlot previousState]
  -[TKSmartCardSlot proxy]
  -[TKSmartCardSlot dealloc]
  -[TKSmartCardSlot setState:]
  -[TKSmartCardSlot .cxx_destruct]
  -[TKSmartCardSlot name]
  -[TKSmartCardSlot setATR:]
  -[TKSmartCardSlot queue]
  -[TKSmartCardSlot setPreviousState:]
  -[TKSmartCardSlot setPowerState:]
  -[TKSmartCardSlot connectToEndpoint:synchronous:reply:]
  -[TKSmartCardSlot initWithEndpoint:error:]
  -[TKSmartCardSlot shareState]
  -[TKSmartCardSlot setShareState:]
  -[TKSmartCardSlot getAttrib:reply:]
  -[TKSmartCardSlot setAttrib:data:reply:]
  -[TKSmartCardSlot synchronous:remoteSlotWithErrorHandler:]
  -[TKSmartCardSlot makeSmartCard]
  -[TKSmartCardSlot control:data:expectedLength:reply:]
  -[TKSmartCardSlot userInteractionForConfirmation]
  -[TKSmartCardSlot state]
  -[TKSmartCardSlot userInteractionForStringEntry]
  -[TKSmartCardSlot maxInputLength]
  -[TKSmartCardSlot maxOutputLength]
  -[TKSmartCardSlot securePINVerificationSupported]
  -[TKSmartCardSlot setSecurePINVerificationSupported:]
  -[TKSmartCardSlot securePINChangeSupported]
  -[TKSmartCardSlot setSecurePINChangeSupported:]
  -[TKSmartCardSlot invalidate]


TKSmartCard : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long currentProtocol
 @property  BOOL valid
 @property  TKSmartCardSlot *slot
 @property  unsigned long allowedProtocols
 @property  BOOL sensitive
 @property  id context

  // class methods
  +[TKSmartCard _localizedString:]
  +[TKSmartCard decodeResponse:sw:appendTo:error:]

  // instance methods
  -[TKSmartCard context]
  -[TKSmartCard cla]
  -[TKSmartCard setValid:]
  -[TKSmartCard setSensitive:]
  -[TKSmartCard setSynchronous:]
  -[TKSmartCard initWithSlot:]
  -[TKSmartCard dealloc]
  -[TKSmartCard valid]
  -[TKSmartCard .cxx_destruct]
  -[TKSmartCard slot]
  -[TKSmartCard setContext:]
  -[TKSmartCard setCla:]
  -[TKSmartCard synchronous]
  -[TKSmartCard observeValueForKeyPath:ofObject:change:context:]
  -[TKSmartCard endSession]
  -[TKSmartCard sessionRequested]
  -[TKSmartCard setContext:forKey:]
  -[TKSmartCard setCurrentProtocol:]
  -[TKSmartCard setSessionEndPolicy:]
  -[TKSmartCard remoteSessionWithErrorHandler:]
  -[TKSmartCard releaseSessionWithReply:]
  -[TKSmartCard inSlotQueueExecuteBlock:]
  -[TKSmartCard setUseExtendedLength:]
  -[TKSmartCard setUseCommandChaining:]
  -[TKSmartCard querySessionWithReply:]
  -[TKSmartCard beginSessionWithError:]
  -[TKSmartCard endSessionWithReply:]
  -[TKSmartCard contextForKey:]
  -[TKSmartCard unreserve]
  -[TKSmartCard setAllowedProtocols:]
  -[TKSmartCard transmitRequest:reply:]
  -[TKSmartCard sensitive]
  -[TKSmartCard handleApduResponse:body:le:isCase4:error:reply:]
  -[TKSmartCard encodeLength:into:sized:]
  -[TKSmartCard buildIns:p1:p2:data:range:le:protocol:chained:extended:realLe:]
  -[TKSmartCard transmitChunkedIns:p1:p2:data:fromOffset:realLe:chained:isCase4:reply:]
  -[TKSmartCard sendIns:p1:p2:data:le:reply:]
  -[TKSmartCard sendIns:p1:p2:data:le:sw:error:]
  -[TKSmartCard beginSessionWithReply:]
  -[TKSmartCard inSessionWithError:executeBlock:]
  -[TKSmartCard sessionEndPolicy]
  -[TKSmartCard reserveExclusive:reply:]
  -[TKSmartCard revalidate]
  -[TKSmartCard userInteractionForSecurePINVerificationWithPINFormat:APDU:PINByteOffset:]
  -[TKSmartCard userInteractionForSecurePINChangeWithPINFormat:APDU:currentPINByteOffset:newPINByteOffset:]
  -[TKSmartCard useExtendedLength]
  -[TKSmartCard useCommandChaining]
  -[TKSmartCard checkAPDUResponse:error:]
  -[TKSmartCard selectApplication:error:]
  -[TKSmartCard allowedProtocols]
  -[TKSmartCard currentProtocol]


TKSmartCardPINFormat : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  long long charset
 @property  long long encoding
 @property  long long minPINLength
 @property  long long maxPINLength
 @property  long long PINBlockByteLength
 @property  long long PINJustification
 @property  long long PINBitOffset
 @property  long long PINLengthBitOffset
 @property  long long PINLengthBitSize

  // class methods
  +[TKSmartCardPINFormat supportsSecureCoding]
  +[TKSmartCardPINFormat _writeNumber:into:bitOffset:bitLength:]

  // instance methods
  -[TKSmartCardPINFormat copyWithZone:]
  -[TKSmartCardPINFormat init]
  -[TKSmartCardPINFormat fillPIN:intoAPDUTemplate:PINByteOffset:error:]
  -[TKSmartCardPINFormat encoding]
  -[TKSmartCardPINFormat encodeWithCoder:]
  -[TKSmartCardPINFormat charset]
  -[TKSmartCardPINFormat setEncoding:]
  -[TKSmartCardPINFormat initWithCoder:]
  -[TKSmartCardPINFormat setCharset:]
  -[TKSmartCardPINFormat minPINLength]
  -[TKSmartCardPINFormat setMinPINLength:]
  -[TKSmartCardPINFormat maxPINLength]
  -[TKSmartCardPINFormat setMaxPINLength:]
  -[TKSmartCardPINFormat PINBlockByteLength]
  -[TKSmartCardPINFormat setPINBlockByteLength:]
  -[TKSmartCardPINFormat PINJustification]
  -[TKSmartCardPINFormat setPINJustification:]
  -[TKSmartCardPINFormat PINBitOffset]
  -[TKSmartCardPINFormat setPINBitOffset:]
  -[TKSmartCardPINFormat PINLengthBitOffset]
  -[TKSmartCardPINFormat setPINLengthBitOffset:]
  -[TKSmartCardPINFormat PINLengthBitSize]
  -[TKSmartCardPINFormat setPINLengthBitSize:]


TKSmartCardSlotScreen : NSObject /usr/lib/libSystem.B.dylib
 @property  long long physicalColumnCount
 @property  long long physicalRowCount
 @property  long long virtualColumnCount
 @property  long long virtualRowCount

  // instance methods
  -[TKSmartCardSlotScreen displayMessage:x:y:duration:clearScreen:]
  -[TKSmartCardSlotScreen physicalColumnCount]
  -[TKSmartCardSlotScreen setPhysicalColumnCount:]
  -[TKSmartCardSlotScreen physicalRowCount]
  -[TKSmartCardSlotScreen setPhysicalRowCount:]
  -[TKSmartCardSlotScreen virtualColumnCount]
  -[TKSmartCardSlotScreen setVirtualColumnCount:]
  -[TKSmartCardSlotScreen virtualRowCount]
  -[TKSmartCardSlotScreen setVirtualRowCount:]


TKSmartCardUserInteraction : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  <TKSmartCardUserInteractionDelegate> *delegate
 @property  double initialTimeout
 @property  double interactionTimeout

  // class methods
  +[TKSmartCardUserInteraction supportsSecureCoding]

  // instance methods
  -[TKSmartCardUserInteraction init]
  -[TKSmartCardUserInteraction runWithReply:]
  -[TKSmartCardUserInteraction initialTimeout]
  -[TKSmartCardUserInteraction setInitialTimeout:]
  -[TKSmartCardUserInteraction interactionTimeout]
  -[TKSmartCardUserInteraction setInteractionTimeout:]
  -[TKSmartCardUserInteraction .cxx_destruct]
  -[TKSmartCardUserInteraction encodeWithCoder:]
  -[TKSmartCardUserInteraction cancel]
  -[TKSmartCardUserInteraction setDelegate:]
  -[TKSmartCardUserInteraction delegate]
  -[TKSmartCardUserInteraction initWithCoder:]


TKSmartCardUserInteractionForPINOperation : TKSmartCardUserInteraction <NSSecureCoding>
 @property  unsigned long PINCompletion
 @property  NSArray *PINMessageIndices
 @property  NSLocale *locale
 @property  unsigned short resultSW
 @property  NSData *resultData

  // class methods
  +[TKSmartCardUserInteractionForPINOperation supportsSecureCoding]

  // instance methods
  -[TKSmartCardUserInteractionForPINOperation init]
  -[TKSmartCardUserInteractionForPINOperation setLocale:]
  -[TKSmartCardUserInteractionForPINOperation PINCompletion]
  -[TKSmartCardUserInteractionForPINOperation setPINCompletion:]
  -[TKSmartCardUserInteractionForPINOperation PINMessageIndices]
  -[TKSmartCardUserInteractionForPINOperation setPINMessageIndices:]
  -[TKSmartCardUserInteractionForPINOperation setResultSW:]
  -[TKSmartCardUserInteractionForPINOperation locale]
  -[TKSmartCardUserInteractionForPINOperation .cxx_destruct]
  -[TKSmartCardUserInteractionForPINOperation encodeWithCoder:]
  -[TKSmartCardUserInteractionForPINOperation setResultData:]
  -[TKSmartCardUserInteractionForPINOperation resultSW]
  -[TKSmartCardUserInteractionForPINOperation initWithCoder:]
  -[TKSmartCardUserInteractionForPINOperation resultData]


TKSmartCardUserInteractionForSecurePINVerification : TKSmartCardUserInteractionForPINOperation <NSSecureCoding>
 @property  TKSmartCardSlot *slot
 @property  TKSmartCardPINFormat *PINFormat
 @property  NSData *APDU
 @property  long long PINByteOffset

  // class methods
  +[TKSmartCardUserInteractionForSecurePINVerification supportsSecureCoding]

  // instance methods
  -[TKSmartCardUserInteractionForSecurePINVerification APDU]
  -[TKSmartCardUserInteractionForSecurePINVerification runWithReply:]
  -[TKSmartCardUserInteractionForSecurePINVerification setPINFormat:]
  -[TKSmartCardUserInteractionForSecurePINVerification setPINByteOffset:]
  -[TKSmartCardUserInteractionForSecurePINVerification PINFormat]
  -[TKSmartCardUserInteractionForSecurePINVerification PINByteOffset]
  -[TKSmartCardUserInteractionForSecurePINVerification .cxx_destruct]
  -[TKSmartCardUserInteractionForSecurePINVerification slot]
  -[TKSmartCardUserInteractionForSecurePINVerification encodeWithCoder:]
  -[TKSmartCardUserInteractionForSecurePINVerification setSlot:]
  -[TKSmartCardUserInteractionForSecurePINVerification setAPDU:]
  -[TKSmartCardUserInteractionForSecurePINVerification setSlot:PINFormat:APDU:PINByteOffset:]
  -[TKSmartCardUserInteractionForSecurePINVerification initWithCoder:]


TKSmartCardUserInteractionForSecurePINChange : TKSmartCardUserInteractionForPINOperation <NSSecureCoding>
 @property  TKSmartCardSlot *slot
 @property  TKSmartCardPINFormat *PINFormat
 @property  NSData *APDU
 @property  long long currentPINByteOffset
 @property  long long newPINByteOffset
 @property  unsigned long PINConfirmation

  // class methods
  +[TKSmartCardUserInteractionForSecurePINChange supportsSecureCoding]

  // instance methods
  -[TKSmartCardUserInteractionForSecurePINChange init]
  -[TKSmartCardUserInteractionForSecurePINChange APDU]
  -[TKSmartCardUserInteractionForSecurePINChange runWithReply:]
  -[TKSmartCardUserInteractionForSecurePINChange setPINFormat:]
  -[TKSmartCardUserInteractionForSecurePINChange PINFormat]
  -[TKSmartCardUserInteractionForSecurePINChange setCurrentPINByteOffset:]
  -[TKSmartCardUserInteractionForSecurePINChange setNewPINByteOffset:]
  -[TKSmartCardUserInteractionForSecurePINChange PINConfirmation]
  -[TKSmartCardUserInteractionForSecurePINChange setPINConfirmation:]
  -[TKSmartCardUserInteractionForSecurePINChange currentPINByteOffset]
  -[TKSmartCardUserInteractionForSecurePINChange newPINByteOffset]
  -[TKSmartCardUserInteractionForSecurePINChange .cxx_destruct]
  -[TKSmartCardUserInteractionForSecurePINChange slot]
  -[TKSmartCardUserInteractionForSecurePINChange encodeWithCoder:]
  -[TKSmartCardUserInteractionForSecurePINChange setSlot:]
  -[TKSmartCardUserInteractionForSecurePINChange setAPDU:]
  -[TKSmartCardUserInteractionForSecurePINChange setSlot:PINFormat:APDU:currentPINByteOffset:newPINByteOffset:]
  -[TKSmartCardUserInteractionForSecurePINChange initWithCoder:]


TKSmartCardUserInteractionForConfirmation : TKSmartCardUserInteraction <NSSecureCoding>
 @property  TKSmartCardSlot *slot
 @property  BOOL result

  // class methods
  +[TKSmartCardUserInteractionForConfirmation supportsSecureCoding]

  // instance methods
  -[TKSmartCardUserInteractionForConfirmation result]
  -[TKSmartCardUserInteractionForConfirmation runWithReply:]
  -[TKSmartCardUserInteractionForConfirmation .cxx_destruct]
  -[TKSmartCardUserInteractionForConfirmation slot]
  -[TKSmartCardUserInteractionForConfirmation encodeWithCoder:]
  -[TKSmartCardUserInteractionForConfirmation setSlot:]
  -[TKSmartCardUserInteractionForConfirmation setResult:]
  -[TKSmartCardUserInteractionForConfirmation initWithCoder:]


TKSmartCardUserInteractionForStringEntry : TKSmartCardUserInteraction <NSSecureCoding>
 @property  TKSmartCardSlot *slot
 @property  NSString *result

  // class methods
  +[TKSmartCardUserInteractionForStringEntry supportsSecureCoding]

  // instance methods
  -[TKSmartCardUserInteractionForStringEntry result]
  -[TKSmartCardUserInteractionForStringEntry runWithReply:]
  -[TKSmartCardUserInteractionForStringEntry .cxx_destruct]
  -[TKSmartCardUserInteractionForStringEntry slot]
  -[TKSmartCardUserInteractionForStringEntry encodeWithCoder:]
  -[TKSmartCardUserInteractionForStringEntry setSlot:]
  -[TKSmartCardUserInteractionForStringEntry setResult:]
  -[TKSmartCardUserInteractionForStringEntry initWithCoder:]


TKTokenID : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *stringRepresentation
 @property  NSString *classID
 @property  NSString *instanceID

  // class methods
  +[TKTokenID supportsSecureCoding]
  +[TKTokenID encodedKeyID:]
  +[TKTokenID encodedCertificateID:]

  // instance methods
  -[TKTokenID copyWithZone:]
  -[TKTokenID stringRepresentation]
  -[TKTokenID instanceID]
  -[TKTokenID .cxx_destruct]
  -[TKTokenID decodedCertificateID:error:]
  -[TKTokenID encodeWithCoder:]
  -[TKTokenID initWithTokenID:]
  -[TKTokenID decodedObjectID:isCertificate:error:]
  -[TKTokenID isEqual:]
  -[TKTokenID decodedKeyID:error:]
  -[TKTokenID initWithClassID:instanceID:]
  -[TKTokenID initWithCoder:]
  -[TKTokenID classID]


TKTokenConfigurationConnection : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[TKTokenConfigurationConnection dealloc]
  -[TKTokenConfigurationConnection .cxx_destruct]
  -[TKTokenConfigurationConnection initWithEndpoint:]
  -[TKTokenConfigurationConnection configurationProtocol]


TKTokenConfigurationTransaction : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[TKTokenConfigurationTransaction commit]
  -[TKTokenConfigurationTransaction dealloc]
  -[TKTokenConfigurationTransaction .cxx_destruct]
  -[TKTokenConfigurationTransaction initWithConfigurationConnection:]


TKTokenConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  TKTokenID *tokenID
 @property  NSString *instanceID
 @property  NSData *configurationData
 @property  NSArray *keychainItems

  // class methods
  +[TKTokenConfiguration set_hasSeparateKeysAndCertificatesObjectIDSpace:]
  +[TKTokenConfiguration interfaceForProtocol]
  +[TKTokenConfiguration _hasSeparateKeysAndCertificatesObjectIDSpace]

  // instance methods
  -[TKTokenConfiguration tokenID]
  -[TKTokenConfiguration certificateForObjectID:error:]
  -[TKTokenConfiguration beginTransaction]
  -[TKTokenConfiguration instanceID]
  -[TKTokenConfiguration keychainItems]
  -[TKTokenConfiguration .cxx_destruct]
  -[TKTokenConfiguration initWithTokenID:configurationConnection:]
  -[TKTokenConfiguration configurationData]
  -[TKTokenConfiguration setConfigurationData:]
  -[TKTokenConfiguration keyForObjectID:error:]
  -[TKTokenConfiguration setKeychainItems:]


TKTokenDriverConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *classID
 @property  NSDictionary *tokenConfigurations

  // class methods
  +[TKTokenDriverConfiguration driverConfigurationsWithClient:]
  +[TKTokenDriverConfiguration driverConfigurations]

  // instance methods
  -[TKTokenDriverConfiguration beginTransaction]
  -[TKTokenDriverConfiguration .cxx_destruct]
  -[TKTokenDriverConfiguration createTokenConfigurationWithInstanceID:persistent:]
  -[TKTokenDriverConfiguration tokenConfigurations]
  -[TKTokenDriverConfiguration addTokenConfigurationForTokenInstanceID:]
  -[TKTokenDriverConfiguration removeTokenConfigurationForTokenInstanceID:]
  -[TKTokenDriverConfiguration initWithClassID:configurationConnection:]
  -[TKTokenDriverConfiguration classID]


TKSmartCardSessionRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *parameters
 @property  @? reply
 @property  NSXPCConnection *connection

  // instance methods
  -[TKSmartCardSessionRequest parameters]
  -[TKSmartCardSessionRequest setParameters:]
  -[TKSmartCardSessionRequest .cxx_destruct]
  -[TKSmartCardSessionRequest setReply:]
  -[TKSmartCardSessionRequest setConnection:]
  -[TKSmartCardSessionRequest reply]
  -[TKSmartCardSessionRequest connection]


TKPowerMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned int kernelPort
 @property  BOOL awaken

  // class methods
  +[TKPowerMonitor defaultMonitor]

  // instance methods
  -[TKPowerMonitor init]
  -[TKPowerMonitor awaken]
  -[TKPowerMonitor .cxx_destruct]
  -[TKPowerMonitor kernelPort]
  -[TKPowerMonitor setKernelPort:]
  -[TKPowerMonitor setAwaken:]


_TKSmartCardSlotReservation : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *protocols
 @property  BOOL exclusive

  // instance methods
  -[_TKSmartCardSlotReservation exclusive]
  -[_TKSmartCardSlotReservation setExclusive:]
  -[_TKSmartCardSlotReservation .cxx_destruct]
  -[_TKSmartCardSlotReservation setProtocols:]
  -[_TKSmartCardSlotReservation protocols]


TKSmartCardSlotEngine : NSObject /usr/lib/libSystem.B.dylib <TKProtocolSmartCardSlot, NSXPCListenerDelegate>
 @property  <TKSmartCardSlotEngineDelegate> *delegate
 @property  NSString *name
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_queue> *powerRequestsQueue
 @property  BOOL apduSentSinceLastReset
 @property  TKSmartCardSessionEngine *session
 @property  long long maxInputLength
 @property  long long maxOutputLength
 @property  BOOL securePINVerificationSupported
 @property  BOOL securePINChangeSupported
 @property  NSXPCListenerEndpoint *serverEndpoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TKSmartCardSlotEngine terminate]
  -[TKSmartCardSlotEngine setSession:]
  -[TKSmartCardSlotEngine init]
  -[TKSmartCardSlotEngine session]
  -[TKSmartCardSlotEngine setProtocol:]
  -[TKSmartCardSlotEngine dealloc]
  -[TKSmartCardSlotEngine .cxx_destruct]
  -[TKSmartCardSlotEngine name]
  -[TKSmartCardSlotEngine _setupWithName:delegate:]
  -[TKSmartCardSlotEngine slotRegistryWithErrorHandler:]
  -[TKSmartCardSlotEngine logWithBytes:handler:]
  -[TKSmartCardSlotEngine dictionaryForState:]
  -[TKSmartCardSlotEngine changeStateTo:powerState:]
  -[TKSmartCardSlotEngine powerDownWithEject:]
  -[TKSmartCardSlotEngine scheduleIdlePowerDown]
  -[TKSmartCardSlotEngine connectCardSessionWithParameters:]
  -[TKSmartCardSlotEngine leaveSession:]
  -[TKSmartCardSlotEngine cardPresent:]
  -[TKSmartCardSlotEngine _findReservation:connection:]
  -[TKSmartCardSlotEngine _getReservationId]
  -[TKSmartCardSlotEngine setupWithName:delegate:]
  -[TKSmartCardSlotEngine setMaxInputLength:]
  -[TKSmartCardSlotEngine setMaxOutputLength:]
  -[TKSmartCardSlotEngine powerRequestsQueue]
  -[TKSmartCardSlotEngine setPowerRequestsQueue:]
  -[TKSmartCardSlotEngine apduSentSinceLastReset]
  -[TKSmartCardSlotEngine setApduSentSinceLastReset:]
  -[TKSmartCardSlotEngine setQueue:]
  -[TKSmartCardSlotEngine listener:shouldAcceptNewConnection:]
  -[TKSmartCardSlotEngine queue]
  -[TKSmartCardSlotEngine reset]
  -[TKSmartCardSlotEngine observeValueForKeyPath:ofObject:change:context:]
  -[TKSmartCardSlotEngine setServerEndpoint:]
  -[TKSmartCardSlotEngine setupSlotWithReply:]
  -[TKSmartCardSlotEngine reserveProtocols:reservationId:exclusive:reply:]
  -[TKSmartCardSlotEngine sessionWithParameters:reply:]
  -[TKSmartCardSlotEngine sendControl:data:expectedLength:reply:]
  -[TKSmartCardSlotEngine getAttrib:reply:]
  -[TKSmartCardSlotEngine setAttrib:data:reply:]
  -[TKSmartCardSlotEngine runUserInteraction:reply:]
  -[TKSmartCardSlotEngine setDelegate:]
  -[TKSmartCardSlotEngine maxInputLength]
  -[TKSmartCardSlotEngine maxOutputLength]
  -[TKSmartCardSlotEngine securePINVerificationSupported]
  -[TKSmartCardSlotEngine setSecurePINVerificationSupported:]
  -[TKSmartCardSlotEngine securePINChangeSupported]
  -[TKSmartCardSlotEngine setSecurePINChangeSupported:]
  -[TKSmartCardSlotEngine serverEndpoint]
  -[TKSmartCardSlotEngine delegate]


TKSmartCardSessionEngine : NSObject /usr/lib/libSystem.B.dylib <TKProtocolSmartCardSession>
 @property  BOOL valid
 @property  BOOL active
 @property  long long endPolicy
 @property  NSXPCConnection *connection

  // instance methods
  -[TKSmartCardSessionEngine setValid:]
  -[TKSmartCardSessionEngine active]
  -[TKSmartCardSessionEngine dealloc]
  -[TKSmartCardSessionEngine valid]
  -[TKSmartCardSessionEngine .cxx_destruct]
  -[TKSmartCardSessionEngine initWithSlot:connection:]
  -[TKSmartCardSessionEngine setEndPolicy:]
  -[TKSmartCardSessionEngine endPolicy]
  -[TKSmartCardSessionEngine setActive:]
  -[TKSmartCardSessionEngine transmit:reply:]
  -[TKSmartCardSessionEngine terminateWithReply:]
  -[TKSmartCardSessionEngine setSessionEndPolicy:]
  -[TKSmartCardSessionEngine connection]


TKTokenSmartCardPINAuthOperation : TKTokenAuthOperation
 @property  NSString *localizedPINLabel
 @property  TKSmartCardPINFormat *PINFormat
 @property  NSData *APDUTemplate
 @property  long long PINByteOffset
 @property  TKSmartCard *smartCard
 @property  NSString *PIN

  // class methods
  +[TKTokenSmartCardPINAuthOperation supportsSecureCoding]

  // instance methods
  -[TKTokenSmartCardPINAuthOperation PIN]
  -[TKTokenSmartCardPINAuthOperation finishWithError:]
  -[TKTokenSmartCardPINAuthOperation init]
  -[TKTokenSmartCardPINAuthOperation setPINFormat:]
  -[TKTokenSmartCardPINAuthOperation setPINByteOffset:]
  -[TKTokenSmartCardPINAuthOperation PINFormat]
  -[TKTokenSmartCardPINAuthOperation PINByteOffset]
  -[TKTokenSmartCardPINAuthOperation smartCard]
  -[TKTokenSmartCardPINAuthOperation .cxx_destruct]
  -[TKTokenSmartCardPINAuthOperation APDUTemplate]
  -[TKTokenSmartCardPINAuthOperation localizedPINLabel]
  -[TKTokenSmartCardPINAuthOperation importOperation:]
  -[TKTokenSmartCardPINAuthOperation baseClassForUI]
  -[TKTokenSmartCardPINAuthOperation setAPDUTemplate:]
  -[TKTokenSmartCardPINAuthOperation setSmartCard:]
  -[TKTokenSmartCardPINAuthOperation setLocalizedPINLabel:]
  -[TKTokenSmartCardPINAuthOperation encodeWithCoder:]
  -[TKTokenSmartCardPINAuthOperation setPIN:]
  -[TKTokenSmartCardPINAuthOperation initWithCoder:]


TKSmartCardWithError : TKSmartCard
  // instance methods
  -[TKSmartCardWithError .cxx_destruct]
  -[TKSmartCardWithError initWithCard:error:]
  -[TKSmartCardWithError transmitRequest:reply:]
  -[TKSmartCardWithError sendIns:p1:p2:data:le:reply:]
  -[TKSmartCardWithError beginSessionWithReply:]


TKSmartCardTokenSession : TKTokenSession
 @property  TKSmartCard *smartCard

  // instance methods
  -[TKSmartCardTokenSession initWithToken:]
  -[TKSmartCardTokenSession beginRequest]
  -[TKSmartCardTokenSession endRequest]
  -[TKSmartCardTokenSession smartCard]
  -[TKSmartCardTokenSession .cxx_destruct]
  -[TKSmartCardTokenSession name]


TKSmartCardToken : TKToken
 @property  TKSmartCard *smartCard
 @property  id keepAlive
 @property  NSData *AID

  // instance methods
  -[TKSmartCardToken keepAlive]
  -[TKSmartCardToken setKeepAlive:]
  -[TKSmartCardToken AID]
  -[TKSmartCardToken smartCard]
  -[TKSmartCardToken .cxx_destruct]
  -[TKSmartCardToken initWithSmartCard:AID:instanceID:tokenDriver:]


TKSmartCardTokenDriver : TKTokenDriver
  // instance methods
  -[TKSmartCardTokenDriver createTokenWithSlot:AID:error:]


TKClientToken : NSObject /usr/lib/libSystem.B.dylib
 @property  NSXPCConnection *serverConnection
 @property  NSXPCConnection *tokenConnection
 @property  NSString *tokenID
 @property  NSXPCListenerEndpoint *endpoint
 @property  NSXPCListenerEndpoint *configurationEndpoint
 @property  NSXPCListenerEndpoint *watcherEndpoint

  // instance methods
  -[TKClientToken tokenConnection]
  -[TKClientToken serverConnection]
  -[TKClientToken tokenID]
  -[TKClientToken sessionWithLAContext:error:]
  -[TKClientToken configurationEndpoint]
  -[TKClientToken initWithTokenID:serverEndpoint:targetUID:]
  -[TKClientToken endpoint]
  -[TKClientToken dealloc]
  -[TKClientToken .cxx_destruct]
  -[TKClientToken watcherEndpoint]
  -[TKClientToken initWithTokenID:]
  -[TKClientToken ensureConnectionWithError:]
  -[TKClientToken withError:invoke:]


TKClientTokenObject : NSObject /usr/lib/libSystem.B.dylib
 @property  TKClientTokenSession *session
 @property  NSData *objectID
 @property  NSData *accessControl
 @property  ^{__SecAccessControl=} accessControlRef
 @property  NSData *value
 @property  NSData *publicKey
 @property  NSDictionary *keychainAttributes

  // instance methods
  -[TKClientTokenObject initWithSession:objectID:attributes:]
  -[TKClientTokenObject publicKey]
  -[TKClientTokenObject keychainAttributes]
  -[TKClientTokenObject session]
  -[TKClientTokenObject operation:data:algorithms:parameters:error:]
  -[TKClientTokenObject decrypt:algorithms:parameters:error:]
  -[TKClientTokenObject accessControl]
  -[TKClientTokenObject .cxx_destruct]
  -[TKClientTokenObject operationResult:error:]
  -[TKClientTokenObject exchangeKey:algorithms:parameters:error:]
  -[TKClientTokenObject sign:algorithms:parameters:error:]
  -[TKClientTokenObject bumpKeyWithError:]
  -[TKClientTokenObject accessControlRef]
  -[TKClientTokenObject deleteWithError:]
  -[TKClientTokenObject value]
  -[TKClientTokenObject attestKey:nonce:error:]
  -[TKClientTokenObject commitKeyWithError:]
  -[TKClientTokenObject objectID]


TKClientTokenSession : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *sessionID
 @property  LAContext *LAContext
 @property  NSDictionary *parameters
 @property  TKClientToken *token
 @property  BOOL authenticateWhenNeeded
 @property  NSArray *keys
 @property  NSArray *certificates
 @property  NSArray *identities
 @property  NSString *slotName
 @property  BOOL _testing_AuthenticateInternally

  // instance methods
  -[TKClientTokenSession parameters]
  -[TKClientTokenSession terminate]
  -[TKClientTokenSession keys]
  -[TKClientTokenSession LAContext]
  -[TKClientTokenSession sessionID]
  -[TKClientTokenSession setAuthenticateWhenNeeded:]
  -[TKClientTokenSession dealloc]
  -[TKClientTokenSession .cxx_destruct]
  -[TKClientTokenSession evaluateAccessControl:forOperation:error:]
  -[TKClientTokenSession objectForObjectID:error:]
  -[TKClientTokenSession certificates]
  -[TKClientTokenSession identities]
  -[TKClientTokenSession ensureSessionWithClient:connectionIdentifier:error:]
  -[TKClientTokenSession token]
  -[TKClientTokenSession set_testing_AuthenticateInternally:]
  -[TKClientTokenSession slotName]
  -[TKClientTokenSession initWithToken:LAContext:parameters:error:]
  -[TKClientTokenSession deleteObject:error:]
  -[TKClientTokenSession initWithTokenID:LAContext:error:]
  -[TKClientTokenSession advertisedItems]
  -[TKClientTokenSession _testing_AuthenticateInternally]
  -[TKClientTokenSession itemsOfClass:]
  -[TKClientTokenSession createObjectWithAttributes:error:]
  -[TKClientTokenSession withError:accessControl:invoke:]
  -[TKClientTokenSession authenticateWhenNeeded]


TKClientTokenAdvertisedItem : NSObject /usr/lib/libSystem.B.dylib
 @property  TKClientTokenSession *session
 @property  unsigned long keyUsage
 @property  NSDictionary *keychainAttributes
 @property  NSData *objectID
 @property  NSString *localizedName
 @property  id keychainClass
 @property  ^{__SecKey=} keyRef
 @property  ^{__SecCertificate=} certificateRef
 @property  ^{__SecIdentity=} identityRef

  // instance methods
  -[TKClientTokenAdvertisedItem keychainAttributes]
  -[TKClientTokenAdvertisedItem keyRef]
  -[TKClientTokenAdvertisedItem session]
  -[TKClientTokenAdvertisedItem .cxx_destruct]
  -[TKClientTokenAdvertisedItem localizedName]
  -[TKClientTokenAdvertisedItem keyUsage]
  -[TKClientTokenAdvertisedItem identityRef]
  -[TKClientTokenAdvertisedItem certificateRef]
  -[TKClientTokenAdvertisedItem initWithSession:keychainAttributes:secRef:]
  -[TKClientTokenAdvertisedItem keychainClass]
  -[TKClientTokenAdvertisedItem objectID]


TKTokenAccessRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *clientBundleID
 @property  NSString *clientName
 @property  BOOL clientHasAccessTokenEntitlement
 @property  TKTokenID *tokenID
 @property  NSString *providerBundleID
 @property  NSString *providerName
 @property  NSUUID *correlationID
 @property  NSXPCConnection *clientConnection

  // instance methods
  -[TKTokenAccessRequest tokenID]
  -[TKTokenAccessRequest clientConnection]
  -[TKTokenAccessRequest clientName]
  -[TKTokenAccessRequest .cxx_destruct]
  -[TKTokenAccessRequest providerBundleID]
  -[TKTokenAccessRequest clientHasAccessTokenEntitlement]
  -[TKTokenAccessRequest providerName]
  -[TKTokenAccessRequest correlationID]
  -[TKTokenAccessRequest isEqual:]
  -[TKTokenAccessRequest clientBundleID]
  -[TKTokenAccessRequest initWithClientBundleID:clientName:clientConnection:clientHasAccessTokenEntitlement:tokenID:providerBundleID:providerName:correlationID:]
  -[TKTokenAccessRequest initWithCaller:tokenID:extension:]


TKTokenKeychainItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *keychainAttributes
 @property  NSData *encodedObjectID
 @property  TKTokenID *tokenID
 @property  NSData *accessControl
 @property  id objectID
 @property  NSString *label
 @property  NSDictionary *constraints

  // class methods
  +[TKTokenKeychainItem keychainItemWithInfo:]
  +[TKTokenKeychainItem operationMap]
  +[TKTokenKeychainItem accessControlForConstraints:tokenID:error:]

  // instance methods
  -[TKTokenKeychainItem tokenID]
  -[TKTokenKeychainItem keychainAttributes]
  -[TKTokenKeychainItem accessControl]
  -[TKTokenKeychainItem .cxx_destruct]
  -[TKTokenKeychainItem label]
  -[TKTokenKeychainItem setTokenID:]
  -[TKTokenKeychainItem initWithItemInfo:]
  -[TKTokenKeychainItem setLabel:]
  -[TKTokenKeychainItem initWithObjectID:]
  -[TKTokenKeychainItem objectID]
  -[TKTokenKeychainItem constraints]
  -[TKTokenKeychainItem setAccessControl:]
  -[TKTokenKeychainItem setConstraints:]


TKTokenKeychainCertificate : TKTokenKeychainItem
 @property  NSData *subject
 @property  NSData *issuer
 @property  NSData *serialNumber
 @property  NSData *subjectKeyID
 @property  NSData *publicKeyHash
 @property  NSNumber *certificateType
 @property  NSNumber *certificateEncoding
 @property  NSData *data

  // instance methods
  -[TKTokenKeychainCertificate serialNumber]
  -[TKTokenKeychainCertificate issuer]
  -[TKTokenKeychainCertificate certificateType]
  -[TKTokenKeychainCertificate keychainAttributes]
  -[TKTokenKeychainCertificate .cxx_destruct]
  -[TKTokenKeychainCertificate subject]
  -[TKTokenKeychainCertificate setSubject:]
  -[TKTokenKeychainCertificate data]
  -[TKTokenKeychainCertificate encodedObjectID]
  -[TKTokenKeychainCertificate initWithItemInfo:]
  -[TKTokenKeychainCertificate subjectKeyID]
  -[TKTokenKeychainCertificate certificateEncoding]
  -[TKTokenKeychainCertificate initWithCertificate:objectID:]
  -[TKTokenKeychainCertificate setSubjectKeyID:]
  -[TKTokenKeychainCertificate setCertificateEncoding:]
  -[TKTokenKeychainCertificate setIssuer:]
  -[TKTokenKeychainCertificate setCertificateType:]
  -[TKTokenKeychainCertificate publicKeyHash]
  -[TKTokenKeychainCertificate setPublicKeyHash:]
  -[TKTokenKeychainCertificate setSerialNumber:]


TKTokenKeychainKey : TKTokenKeychainItem
 @property  unsigned long keyUsage
 @property  NSString *keyType
 @property  NSData *applicationTag
 @property  long long keySizeInBits
 @property  NSData *publicKeyData
 @property  NSData *publicKeyHash
 @property  BOOL canDecrypt
 @property  BOOL canSign
 @property  BOOL canPerformKeyExchange
 @property  BOOL suitableForLogin

  // instance methods
  -[TKTokenKeychainKey keychainAttributes]
  -[TKTokenKeychainKey .cxx_destruct]
  -[TKTokenKeychainKey keyUsage]
  -[TKTokenKeychainKey encodedObjectID]
  -[TKTokenKeychainKey initWithItemInfo:]
  -[TKTokenKeychainKey initWithCertificate:objectID:]
  -[TKTokenKeychainKey createConstraints:]
  -[TKTokenKeychainKey canDecrypt]
  -[TKTokenKeychainKey canPerformKeyExchange]
  -[TKTokenKeychainKey keySizeInBits]
  -[TKTokenKeychainKey applicationTag]
  -[TKTokenKeychainKey isSuitableForLogin]
  -[TKTokenKeychainKey canSign]
  -[TKTokenKeychainKey satisfiesKeyUsage:]
  -[TKTokenKeychainKey setKeyType:]
  -[TKTokenKeychainKey setApplicationTag:]
  -[TKTokenKeychainKey setKeySizeInBits:]
  -[TKTokenKeychainKey setPublicKeyData:]
  -[TKTokenKeychainKey setCanDecrypt:]
  -[TKTokenKeychainKey setCanSign:]
  -[TKTokenKeychainKey setCanPerformKeyExchange:]
  -[TKTokenKeychainKey setSuitableForLogin:]
  -[TKTokenKeychainKey publicKeyHash]
  -[TKTokenKeychainKey setPublicKeyHash:]
  -[TKTokenKeychainKey keyType]
  -[TKTokenKeychainKey publicKeyData]


TKTokenKeychainContents : NSObject /usr/lib/libSystem.B.dylib
 @property  TKTokenConfiguration *configuration
 @property  NSString *tokenID
 @property  NSDictionary *keys
 @property  NSDictionary *certificates
 @property  NSArray *items

  // instance methods
  -[TKTokenKeychainContents keys]
  -[TKTokenKeychainContents tokenID]
  -[TKTokenKeychainContents certificateForObjectID:error:]
  -[TKTokenKeychainContents items]
  -[TKTokenKeychainContents .cxx_destruct]
  -[TKTokenKeychainContents certificates]
  -[TKTokenKeychainContents initWithTokenID:]
  -[TKTokenKeychainContents keyForObjectID:error:]
  -[TKTokenKeychainContents fillWithItems:]
  -[TKTokenKeychainContents certificateForKey:]
  -[TKTokenKeychainContents configuration]
  -[TKTokenKeychainContents initWithConfiguration:]


TKTokenAccessUserPromptRemoteAlert : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, SBSRemoteAlertHandleObserver, TKUIServerProtocol, TKTokenAccessUserPrompt>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TKTokenAccessUserPromptRemoteAlert remoteAlertHandleDidActivate:]
  -[TKTokenAccessUserPromptRemoteAlert .cxx_destruct]
  -[TKTokenAccessUserPromptRemoteAlert listener:shouldAcceptNewConnection:]
  -[TKTokenAccessUserPromptRemoteAlert remoteAlertHandle:didInvalidateWithError:]
  -[TKTokenAccessUserPromptRemoteAlert registerTokenAccessRequestCorrelationID:granted:reply:]
  -[TKTokenAccessUserPromptRemoteAlert preflightStatus]
  -[TKTokenAccessUserPromptRemoteAlert promptUserToEvaluateRequest:error:]
  -[TKTokenAccessUserPromptRemoteAlert remoteAlertHandleDidDeactivate:]


TKTokenAccessUserPromptNoop : NSObject /usr/lib/libSystem.B.dylib <TKTokenAccessUserPrompt>
 @property  long long preflightStatus
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TKTokenAccessUserPromptNoop preflightStatus]
  -[TKTokenAccessUserPromptNoop promptUserToEvaluateRequest:error:]
  -[TKTokenAccessUserPromptNoop initWithPreflightStatus:]
  -[TKTokenAccessUserPromptNoop setPreflightStatus:]


TKSmartCardATRInterfaceGroup : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *TA
 @property  NSNumber *TB
 @property  NSNumber *TC
 @property  NSNumber *protocol

  // instance methods
  -[TKSmartCardATRInterfaceGroup protocol]
  -[TKSmartCardATRInterfaceGroup TA]
  -[TKSmartCardATRInterfaceGroup TB]
  -[TKSmartCardATRInterfaceGroup TC]
  -[TKSmartCardATRInterfaceGroup .cxx_destruct]
  -[TKSmartCardATRInterfaceGroup initWithProtocol:]
  -[TKSmartCardATRInterfaceGroup parseWithY:toProtocol:fromSource:hasNext:]


TKSmartCardATR : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *bytes
 @property  NSArray *protocols
 @property  NSData *historicalBytes
 @property  NSArray *historicalRecords

  // instance methods
  -[TKSmartCardATR initWithSource:]
  -[TKSmartCardATR bytes]
  -[TKSmartCardATR .cxx_destruct]
  -[TKSmartCardATR protocols]
  -[TKSmartCardATR initWithBytes:]
  -[TKSmartCardATR parseFromSource:]
  -[TKSmartCardATR interfaceGroupAtIndex:]
  -[TKSmartCardATR _formatHexData:to:]
  -[TKSmartCardATR interfaceGroupForProtocol:]
  -[TKSmartCardATR historicalBytes]
  -[TKSmartCardATR historicalRecords]


TKTokenAccessRegistry : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[TKTokenAccessRegistry init]
  -[TKTokenAccessRegistry _isPersistenceEnabled]
  -[TKTokenAccessRegistry _shouldAutomaticallyAllowRequest:]
  -[TKTokenAccessRegistry initWithAccessDB:userPrompt:]
  -[TKTokenAccessRegistry setUserPrompt:]
  -[TKTokenAccessRegistry .cxx_destruct]
  -[TKTokenAccessRegistry setAccessDB:]
  -[TKTokenAccessRegistry _platformAllowsAllRequests]
  -[TKTokenAccessRegistry _promptUserToEvaluateRequest:error:]
  -[TKTokenAccessRegistry _fetchAccessForRequest:]
  -[TKTokenAccessRegistry _storeAccess:forRequest:]
  -[TKTokenAccessRegistry evaluateRequest:error:]


TKSharedResourceSlot : NSObject /usr/lib/libSystem.B.dylib
 @property  @? createObjectBlock
 @property  @? objectDestroyedBlock
 @property  double idleTimeout
 @property  NSObject<OS_dispatch_queue> *idleQueue

  // instance methods
  -[TKSharedResourceSlot object]
  -[TKSharedResourceSlot initWithName:]
  -[TKSharedResourceSlot objectDestroyedBlock]
  -[TKSharedResourceSlot dealloc]
  -[TKSharedResourceSlot .cxx_destruct]
  -[TKSharedResourceSlot setIdleTimeout:]
  -[TKSharedResourceSlot idleTimeout]
  -[TKSharedResourceSlot resourceWithError:]
  -[TKSharedResourceSlot idleQueue]
  -[TKSharedResourceSlot destroyObject]
  -[TKSharedResourceSlot setIdleQueue:]
  -[TKSharedResourceSlot createObjectBlock]
  -[TKSharedResourceSlot setCreateObjectBlock:]
  -[TKSharedResourceSlot setObjectDestroyedBlock:]
  -[TKSharedResourceSlot releaseResource]


TKSharedResource : NSObject /usr/lib/libSystem.B.dylib
 @property  id object

  // instance methods
  -[TKSharedResource object]
  -[TKSharedResource initWithSlot:]
  -[TKSharedResource dealloc]
  -[TKSharedResource .cxx_destruct]


TKTokenAccessUserPromptInfo : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *clientDisplayName
 @property  NSString *providerDisplayName
 @property  NSUUID *correlationID

  // class methods
  +[TKTokenAccessUserPromptInfo supportsSecureCoding]

  // instance methods
  -[TKTokenAccessUserPromptInfo .cxx_destruct]
  -[TKTokenAccessUserPromptInfo clientDisplayName]
  -[TKTokenAccessUserPromptInfo encodeWithCoder:]
  -[TKTokenAccessUserPromptInfo initWithTokenAccessRequest:]
  -[TKTokenAccessUserPromptInfo correlationID]
  -[TKTokenAccessUserPromptInfo providerDisplayName]
  -[TKTokenAccessUserPromptInfo initWithCoder:]


TKTokenSessionConnection : NSObject /usr/lib/libSystem.B.dylib <TKClientTokenProtocol>
 @property  TKTokenConnection *tokenConnection
 @property  NSMutableDictionary *sessions
 @property  NSMutableDictionary *initialKeepAlives
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TKTokenSessionConnection tokenConnection]
  -[TKTokenSessionConnection session:evaluateAccessControl:forOperation:reply:]
  -[TKTokenSessionConnection initWithTokenConnection:]
  -[TKTokenSessionConnection initialKeepAlives]
  -[TKTokenSessionConnection session:getAdvertisedItemsWithReply:]
  -[TKTokenSessionConnection .cxx_destruct]
  -[TKTokenSessionConnection endSession:reply:]
  -[TKTokenSessionConnection sessions]
  -[TKTokenSessionConnection withSessionID:invoke:]
  -[TKTokenSessionConnection session:getAttributesOfObjectID:reply:]
  -[TKTokenSessionConnection startSessionWithLAContext:parameters:reply:]
  -[TKTokenSessionConnection session:deleteObjectWithObjectID:reply:]
  -[TKTokenSessionConnection session:createObjectWithAttributes:reply:]
  -[TKTokenSessionConnection session:objectID:operation:data:algorithms:parameters:reply:]


TKTokenConnection : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate>
 @property  TKToken *token
 @property  NSXPCListener *listener
 @property  NSMapTable *sessions
 @property  id initialKeepAlive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TKTokenConnection initWithToken:]
  -[TKTokenConnection listener]
  -[TKTokenConnection dealloc]
  -[TKTokenConnection .cxx_destruct]
  -[TKTokenConnection sessions]
  -[TKTokenConnection listener:shouldAcceptNewConnection:]
  -[TKTokenConnection token]
  -[TKTokenConnection initialKeepAlive]
  -[TKTokenConnection setInitialKeepAlive:]
  -[TKTokenConnection invalidate]


TKApplicationProxy : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TKApplicationProxy _displayNamesCache]

  // instance methods
  -[TKApplicationProxy displayNameForBundleID:]
  -[TKApplicationProxy _coreServicesLocalizedNameForBundleID:]


TKTokenKeyExchangeParameters : NSObject /usr/lib/libSystem.B.dylib
 @property  long long requestedSize
 @property  NSData *sharedInfo

  // instance methods
  -[TKTokenKeyExchangeParameters .cxx_destruct]
  -[TKTokenKeyExchangeParameters requestedSize]
  -[TKTokenKeyExchangeParameters sharedInfo]
  -[TKTokenKeyExchangeParameters initWithParameters:]


TKTokenKeyAlgorithm : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[TKTokenKeyAlgorithm initWithAlgorithmsArray:]
  -[TKTokenKeyAlgorithm .cxx_destruct]
  -[TKTokenKeyAlgorithm supportsAlgorithm:]
  -[TKTokenKeyAlgorithm isAlgorithm:]


TKTokenAuthOperation : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSError *authenticationError

  // class methods
  +[TKTokenAuthOperation supportsSecureCoding]

  // instance methods
  -[TKTokenAuthOperation finishWithError:]
  -[TKTokenAuthOperation .cxx_destruct]
  -[TKTokenAuthOperation importOperation:]
  -[TKTokenAuthOperation baseClassForUI]
  -[TKTokenAuthOperation encodeWithCoder:]
  -[TKTokenAuthOperation authenticationError]
  -[TKTokenAuthOperation setAuthenticationError:]
  -[TKTokenAuthOperation initWithCoder:]


TKTokenPasswordAuthOperation : TKTokenAuthOperation
 @property  NSString *localizedPasswordLabel
 @property  NSString *password

  // class methods
  +[TKTokenPasswordAuthOperation supportsSecureCoding]

  // instance methods
  -[TKTokenPasswordAuthOperation password]
  -[TKTokenPasswordAuthOperation setPassword:]
  -[TKTokenPasswordAuthOperation .cxx_destruct]
  -[TKTokenPasswordAuthOperation importOperation:]
  -[TKTokenPasswordAuthOperation baseClassForUI]
  -[TKTokenPasswordAuthOperation encodeWithCoder:]
  -[TKTokenPasswordAuthOperation localizedPasswordLabel]
  -[TKTokenPasswordAuthOperation setLocalizedPasswordLabel:]
  -[TKTokenPasswordAuthOperation initWithCoder:]


TKTokenSession : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSString *name
 @property  id keepAlive
 @property  LAContext *LAContext
 @property  NSDictionary *parameters
 @property  {?=[8I]} creatorAuditToken
 @property  NSXPCConnection *caller
 @property  NSNumber *callerPID
 @property  <TKTokenSessionPrivateDelegate> *privateDelegate
 @property  TKToken *token
 @property  <TKTokenSessionDelegate> *delegate

  // instance methods
  -[TKTokenSession keepAlive]
  -[TKTokenSession initWithToken:]
  -[TKTokenSession privateDelegate]
  -[TKTokenSession parameters]
  -[TKTokenSession terminate]
  -[TKTokenSession LAContext]
  -[TKTokenSession setKeepAlive:]
  -[TKTokenSession beginRequest]
  -[TKTokenSession setParameters:]
  -[TKTokenSession finalizeAuthOperation:evaluatedAuthOperation:reply:]
  -[TKTokenSession endRequest]
  -[TKTokenSession createObjectWithAttributes:reply:]
  -[TKTokenSession creatorAuditToken]
  -[TKTokenSession checkOperation:usingKey:algorithm:parameters:]
  -[TKTokenSession .cxx_destruct]
  -[TKTokenSession name]
  -[TKTokenSession caller]
  -[TKTokenSession errorWithResult:operation:forError:]
  -[TKTokenSession evaluateAccessControl:forOperation:reply:]
  -[TKTokenSession beginAuthForOperation:constraint:reply:]
  -[TKTokenSession setCaller:]
  -[TKTokenSession callerPID]
  -[TKTokenSession objectID:operation:inputData:algorithms:parameters:reply:]
  -[TKTokenSession attestKey:usingKey:nonce:reply:]
  -[TKTokenSession token]
  -[TKTokenSession getAdvertisedItemsWithReply:]
  -[TKTokenSession bumpKey:reply:]
  -[TKTokenSession decryptData:usingKey:algorithm:parameters:reply:]
  -[TKTokenSession getAttributesOfObject:isCertificate:reply:]
  -[TKTokenSession queue]
  -[TKTokenSession setCreatorAuditToken:]
  -[TKTokenSession commitKey:reply:]
  -[TKTokenSession signData:usingKey:algorithm:reply:]
  -[TKTokenSession deleteObject:reply:]
  -[TKTokenSession evaluateAuthOperation:retry:reply:]
  -[TKTokenSession performKeyExchangeWithPublicKey:usingKey:algorithm:parameters:reply:]
  -[TKTokenSession setCallerPID:]
  -[TKTokenSession setDelegate:]
  -[TKTokenSession evaluateAuthOperation:reply:]
  -[TKTokenSession auditAuthOperation:auditToken:success:]
  -[TKTokenSession delegate]
  -[TKTokenSession setLAContext:]


TKTokenWatcherProxy : NSObject /usr/lib/libSystem.B.dylib <TKProtocolTokenWatcherHost>
  // instance methods
  -[TKTokenWatcherProxy .cxx_destruct]
  -[TKTokenWatcherProxy insertedToken:]
  -[TKTokenWatcherProxy removedToken:]
  -[TKTokenWatcherProxy initWithWatcher:]


TKTokenWatcherTokenInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *tokenID
 @property  NSString *driverName
 @property  NSString *slotName

  // instance methods
  -[TKTokenWatcherTokenInfo tokenID]
  -[TKTokenWatcherTokenInfo driverName]
  -[TKTokenWatcherTokenInfo .cxx_destruct]
  -[TKTokenWatcherTokenInfo slotName]
  -[TKTokenWatcherTokenInfo initWithTokenInfo:]


TKTokenWatcher : NSObject /usr/lib/libSystem.B.dylib <TKProtocolTokenWatcherHost>
 @property  TKClientToken *client
 @property  NSXPCListenerEndpoint *endpoint
 @property  NSArray *tokenIDs

  // instance methods
  -[TKTokenWatcher client]
  -[TKTokenWatcher init]
  -[TKTokenWatcher endpoint]
  -[TKTokenWatcher dealloc]
  -[TKTokenWatcher .cxx_destruct]
  -[TKTokenWatcher initWithEndpoint:]
  -[TKTokenWatcher initWithClient:]
  -[TKTokenWatcher insertedToken:]
  -[TKTokenWatcher removedToken:]
  -[TKTokenWatcher startWatching]
  -[TKTokenWatcher setInsertionHandler:]
  -[TKTokenWatcher initWithInsertionHandler:]
  -[TKTokenWatcher addRemovalHandler:forTokenID:]
  -[TKTokenWatcher getReaderAndDriverNameFor:]
  -[TKTokenWatcher tokenIDs]


01 00 0400 /System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication: LAContext 
01 00 0100 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListenerEndpoint 
01 00 0500 /System/Library/PrivateFrameworks/PlugInKit.framework/PlugInKit: PKService 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: _NSExtensionContextVendor 
