|| __DATA.__objc_data _OBJC_CLASS_$_NWActivityEpilogueStatistics
|| __DATA.__objc_data _OBJC_CLASS_$_NWActivityStatistics
|| __DATA.__objc_data _OBJC_CLASS_$_NWAdvertiseDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_NWBonjourBrowseDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_NWBonjourServiceEndpoint
|| __DATA.__objc_data _OBJC_CLASS_$_NWBrowseDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_NWBrowser
|| __DATA.__objc_data _OBJC_CLASS_$_NWConnection
|| __DATA.__objc_data _OBJC_CLASS_$_NWConnectionStatistics
|| __DATA.__objc_data _OBJC_CLASS_$_NWDatagramConnection
|| __DATA.__objc_data _OBJC_CLASS_$_NWInboundMessage
|| __DATA.__objc_data _OBJC_CLASS_$_NWL2Report
|| __DATA.__objc_data _OBJC_CLASS_$_NWMessage
|| __DATA.__objc_data _OBJC_CLASS_$_NWMessageConnection
|| __DATA.__objc_data _OBJC_CLASS_$_NWOutboundMessage
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBAddressEndpoint
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBAgent
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBAgentClass
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBBrowseDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBCloseConnection
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBCommandMessage
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBEndpoint
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBHostEndpoint
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBInterface
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBOpenConnection
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBParameters
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBPath
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBSendData
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBServiceBrowse
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBServiceEndpoint
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBStartBrowse
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBStopBrowse
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBUpdateBrowse
|| __DATA.__objc_data _OBJC_CLASS_$_NWPBUpdatePath
|| __DATA.__objc_data _OBJC_CLASS_$_NWProtocolTransform
|| __DATA.__objc_data _OBJC_CLASS_$_NWRemoteConnectionActor
|| __DATA.__objc_data _OBJC_CLASS_$_NWRemoteConnectionDirector
|| __DATA.__objc_data _OBJC_CLASS_$_NWRemotePacketProxy
|| __DATA.__objc_data _OBJC_CLASS_$_NWResolver
|| __DATA.__objc_data _OBJC_CLASS_$_NWStreamConnection
|| __DATA.__objc_data _OBJC_CLASS_$_NWTCPConnection
|| __DATA.__objc_data _OBJC_CLASS_$_NWTCPListener
|| __DATA.__objc_data _OBJC_CLASS_$_NWUDPListener
|| __DATA.__objc_data _OBJC_CLASS_$_NWUDPSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NWActivityEpilogueStatistics
|| __DATA.__objc_data _OBJC_METACLASS_$_NWActivityStatistics
|| __DATA.__objc_data _OBJC_METACLASS_$_NWBonjourBrowseDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_NWBonjourServiceEndpoint
|| __DATA.__objc_data _OBJC_METACLASS_$_NWBrowseDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_NWBrowser
|| __DATA.__objc_data _OBJC_METACLASS_$_NWConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_NWConnectionStatistics
|| __DATA.__objc_data _OBJC_METACLASS_$_NWDatagramConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_NWInboundMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_NWL2Report
|| __DATA.__objc_data _OBJC_METACLASS_$_NWMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_NWMessageConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_NWOutboundMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBAddressEndpoint
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBAgent
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBAgentClass
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBBrowseDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBCloseConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBCommandMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBEndpoint
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBHostEndpoint
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBOpenConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBPath
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBSendData
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBServiceBrowse
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBServiceEndpoint
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBStartBrowse
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBStopBrowse
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBUpdateBrowse
|| __DATA.__objc_data _OBJC_METACLASS_$_NWPBUpdatePath
|| __DATA.__objc_data _OBJC_METACLASS_$_NWProtocolTransform
|| __DATA.__objc_data _OBJC_METACLASS_$_NWRemoteConnectionActor
|| __DATA.__objc_data _OBJC_METACLASS_$_NWRemotePacketProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_NWStreamConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_NWSystemPathMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_NWTCPConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_NWTCPListener
|| __DATA.__objc_data _OBJC_METACLASS_$_NWUDPListener
|| __DATA.__objc_data _OBJC_METACLASS_$_NWUDPSession
|| __DATA_CONST.__const _NWNetworkAgentStartOptionClientUUID
|| __DATA_CONST.__const _NWNetworkAgentStartOptionFromKernel
|| __DATA_CONST.__const _NWNetworkAgentStartOptionFromUser
|| __DATA_CONST.__const _NWNetworkAgentStartOptionPID
|| __DATA_CONST.__const _NWNetworkAgentStartOptionProcessUUID
|| __DATA_CONST.__const _NWPathEvaluatorErrorDomain
|| __DATA_CONST.__const __NWConnectionWriteCompletionIdempotent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWAddressEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWGenericNetworkAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWHostEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWNetworkAgentRegistration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWNetworkDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWPath
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWPathEvaluator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NWSystemPathMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWAddressEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWAdvertiseDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWGenericNetworkAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWHostEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWNetworkAgentRegistration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWNetworkDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWPath
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWPathEvaluator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWRemoteConnectionDirector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NWResolver
|| __TEXT.__text _NWCreateDispatchDataFromNSData
|| __TEXT.__text _NWCreateNSDataFromDispatchData
|| __TEXT.__text _NWMonitorStatusToString
|| __TEXT.__text _NWPBAddressEndpointReadFrom
|| __TEXT.__text _NWPBAgentClassReadFrom
|| __TEXT.__text _NWPBAgentReadFrom
|| __TEXT.__text _NWPBBrowseDescriptorReadFrom
|| __TEXT.__text _NWPBCloseConnectionReadFrom
|| __TEXT.__text _NWPBCommandMessageReadFrom
|| __TEXT.__text _NWPBEndpointReadFrom
|| __TEXT.__text _NWPBHostEndpointReadFrom
|| __TEXT.__text _NWPBInterfaceReadFrom
|| __TEXT.__text _NWPBOpenConnectionReadFrom
|| __TEXT.__text _NWPBParametersReadFrom
|| __TEXT.__text _NWPBPathReadFrom
|| __TEXT.__text _NWPBSendDataReadFrom
|| __TEXT.__text _NWPBServiceBrowseReadFrom
|| __TEXT.__text _NWPBServiceEndpointReadFrom
|| __TEXT.__text _NWPBStartBrowseReadFrom
|| __TEXT.__text _NWPBStopBrowseReadFrom
|| __TEXT.__text _NWPBUpdateBrowseReadFrom
|| __TEXT.__text _NWPBUpdatePathReadFrom
|| __TEXT.__text _NWPrivilegedHelperHandleEvent
|| __TEXT.__text _NWPrivilegedHelperInitialize
|| __TEXT.__text _NWPrivilegedHelperStart
|| __TEXT.__text _NWUtilsCreateNSDictionaryFromXPCDictionary
|| __TEXT.__text _NWUtilsCreateNSStringFromSockaddr
|| __TEXT.__text _NWUtilsCreateXPCDictionaryFromNSDictionary
|| __TEXT.__text _NWUtilsStringMatchesPattern
|| __TEXT.__text _updateOSLogPlistFromLevel
__ AssertionServices: _BKSApplicationStateDisplayIDKey
__ AssertionServices: _BKSApplicationStateKey
__ AssertionServices: _BKSApplicationStateProcessIDKey
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFAllocatorDefault
__ Foundation: _NSClassFromString
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSURLErrorDomain
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterPlaceMark
__ ProtocolBuffer: _PBDataWriterRecallMark
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedInt32Add
__ ProtocolBuffer: _PBRepeatedInt32Clear
__ ProtocolBuffer: _PBRepeatedInt32Copy
__ ProtocolBuffer: _PBRepeatedInt32Hash
__ ProtocolBuffer: _PBRepeatedInt32IsEqual
__ ProtocolBuffer: _PBRepeatedInt32NSArray
__ ProtocolBuffer: _PBRepeatedInt32Set
__ ProtocolBuffer: _PBRepeatedInt64Add
__ ProtocolBuffer: _PBRepeatedInt64Clear
__ ProtocolBuffer: _PBRepeatedInt64Copy
__ ProtocolBuffer: _PBRepeatedInt64Hash
__ ProtocolBuffer: _PBRepeatedInt64IsEqual
__ ProtocolBuffer: _PBRepeatedInt64NSArray
__ ProtocolBuffer: _PBRepeatedInt64Set
__ ProtocolBuffer: _PBRepeatedUInt64Add
__ ProtocolBuffer: _PBRepeatedUInt64Clear
__ ProtocolBuffer: _PBRepeatedUInt64Copy
__ ProtocolBuffer: _PBRepeatedUInt64Hash
__ ProtocolBuffer: _PBRepeatedUInt64IsEqual
__ ProtocolBuffer: _PBRepeatedUInt64NSArray
__ ProtocolBuffer: _PBRepeatedUInt64Set
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTrustEvaluateWithError
__ Security: _sec_certificate_copy_ref
__ Security: _sec_identity_create_with_certificates
__ Security: _sec_protocol_metadata_access_peer_certificate_chain
__ Security: _sec_protocol_options_set_challenge_block
__ Security: _sec_protocol_options_set_verify_block
__ libSystem.B.dylib: _NEHelperCopyPerAppDomains
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_read
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_pack_fill
__ libSystem.B.dylib: __os_log_pack_size
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_error_termination_imminent
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: __xpc_type_array
__ libSystem.B.dylib: __xpc_type_bool
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_data
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_double
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: __xpc_type_int64
__ libSystem.B.dylib: __xpc_type_pointer
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: __xpc_type_uint64
__ libSystem.B.dylib: __xpc_type_uuid
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _connect
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_data_get_size
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlclose
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dup
__ libSystem.B.dylib: _fchmod
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeifaddrs
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _getifaddrs
__ libSystem.B.dylib: _getnameinfo
__ libSystem.B.dylib: _ioctl
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _ne_session_always_on_vpn_configs_present
__ libSystem.B.dylib: _ne_session_app_vpn_configs_present
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_pack_compose
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _uuid_clear
__ libSystem.B.dylib: _uuid_is_null
__ libSystem.B.dylib: _uuid_parse
__ libSystem.B.dylib: _uuid_unparse
__ libSystem.B.dylib: _xpc_array_append_value
__ libSystem.B.dylib: _xpc_array_apply
__ libSystem.B.dylib: _xpc_array_create
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_array_get_string
__ libSystem.B.dylib: _xpc_array_get_uint64
__ libSystem.B.dylib: _xpc_array_get_uuid
__ libSystem.B.dylib: _xpc_array_get_value
__ libSystem.B.dylib: _xpc_array_set_string
__ libSystem.B.dylib: _xpc_array_set_uint64
__ libSystem.B.dylib: _xpc_array_set_uuid
__ libSystem.B.dylib: _xpc_array_set_value
__ libSystem.B.dylib: _xpc_bool_create
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_copy_entitlement_value
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_get_pid
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_copy_description
__ libSystem.B.dylib: _xpc_data_create
__ libSystem.B.dylib: _xpc_data_get_bytes_ptr
__ libSystem.B.dylib: _xpc_data_get_length
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_array
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_get_uuid
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_double_create
__ libSystem.B.dylib: _xpc_double_get_value
__ libSystem.B.dylib: _xpc_fd_create
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_int64_create
__ libSystem.B.dylib: _xpc_int64_get_value
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: _xpc_uint64_create
__ libSystem.B.dylib: _xpc_uint64_get_value
__ libSystem.B.dylib: _xpc_uuid_create
__ libSystem.B.dylib: _xpc_uuid_get_bytes
__ libSystem.B.dylib: dyld_stub_binder
__ libnetwork.dylib: ___nw_create_backtrace_string
__ libnetwork.dylib: ___nwlog_err_simulate_crash
__ libnetwork.dylib: ___nwlog_is_datapath_logging_enabled
__ libnetwork.dylib: ___nwlog_level_enabled
__ libnetwork.dylib: ___nwlog_obj
__ libnetwork.dylib: ___nwlog_pack
__ libnetwork.dylib: __nw_connection_send_idempotent_content
__ libnetwork.dylib: __nw_connection_write_idempotent
__ libnetwork.dylib: __nw_content_context_default_message
__ libnetwork.dylib: __nw_content_context_final_send
__ libnetwork.dylib: __nw_parameters_configure_protocol_default_configuration
__ libnetwork.dylib: __nw_parameters_configure_protocol_disable
__ libnetwork.dylib: _network_config_mptcp_cell_in_use
__ libnetwork.dylib: _network_config_mptcp_watcher_create
__ libnetwork.dylib: _network_config_mptcp_watcher_destroy
__ libnetwork.dylib: _networkd_privileged_key_agent_uuid
__ libnetwork.dylib: _networkd_privileged_key_constrained
__ libnetwork.dylib: _networkd_privileged_key_expensive
__ libnetwork.dylib: _networkd_privileged_key_interface_name
__ libnetwork.dylib: _networkd_privileged_key_interface_name_array
__ libnetwork.dylib: _networkd_privileged_key_kernel_socket_fd
__ libnetwork.dylib: _networkd_privileged_key_opportunistic_disable
__ libnetwork.dylib: _networkd_privileged_key_opportunistic_ifname
__ libnetwork.dylib: _networkd_privileged_key_opportunistic_inuse
__ libnetwork.dylib: _networkd_privileged_key_remove
__ libnetwork.dylib: _networkd_privileged_key_result
__ libnetwork.dylib: _networkd_privileged_key_second_interface_name
__ libnetwork.dylib: _networkd_privileged_key_settings_file_prefix
__ libnetwork.dylib: _networkd_privileged_key_settings_key
__ libnetwork.dylib: _networkd_privileged_key_settings_value
__ libnetwork.dylib: _networkd_privileged_key_type
__ libnetwork.dylib: _networkd_privileged_reload_managed_network_settings
__ libnetwork.dylib: _networkd_privileged_service
__ libnetwork.dylib: _networkd_privileged_type_to_string
__ libnetwork.dylib: _networkd_settings_get_int64
__ libnetwork.dylib: _nw_advertise_descriptor_create_bonjour_service
__ libnetwork.dylib: _nw_advertise_descriptor_get_bonjour_domain
__ libnetwork.dylib: _nw_advertise_descriptor_get_bonjour_name
__ libnetwork.dylib: _nw_advertise_descriptor_get_bonjour_type
__ libnetwork.dylib: _nw_allow_use_of_dispatch
__ libnetwork.dylib: _nw_array_append
__ libnetwork.dylib: _nw_array_apply
__ libnetwork.dylib: _nw_array_create
__ libnetwork.dylib: _nw_array_get_count
__ libnetwork.dylib: _nw_browse_descriptor_copy_custom_data
__ libnetwork.dylib: _nw_browse_descriptor_create_bonjour_service
__ libnetwork.dylib: _nw_browse_descriptor_create_custom
__ libnetwork.dylib: _nw_browse_descriptor_get_bonjour_service_domain
__ libnetwork.dylib: _nw_browse_descriptor_get_bonjour_service_type
__ libnetwork.dylib: _nw_browse_descriptor_get_type
__ libnetwork.dylib: _nw_browse_result_copy_endpoint
__ libnetwork.dylib: _nw_browser_cancel
__ libnetwork.dylib: _nw_browser_copy_browse_results
__ libnetwork.dylib: _nw_browser_create
__ libnetwork.dylib: _nw_browser_set_browse_results_changed_handler
__ libnetwork.dylib: _nw_browser_set_queue
__ libnetwork.dylib: _nw_browser_start
__ libnetwork.dylib: _nw_connection_cancel
__ libnetwork.dylib: _nw_connection_cancel_current_endpoint
__ libnetwork.dylib: _nw_connection_copy_connected_local_endpoint
__ libnetwork.dylib: _nw_connection_copy_connected_path
__ libnetwork.dylib: _nw_connection_copy_connected_remote_endpoint
__ libnetwork.dylib: _nw_connection_copy_endpoint
__ libnetwork.dylib: _nw_connection_copy_host_endpoint
__ libnetwork.dylib: _nw_connection_copy_metadata
__ libnetwork.dylib: _nw_connection_copy_parameters
__ libnetwork.dylib: _nw_connection_copy_tcp_info
__ libnetwork.dylib: _nw_connection_create
__ libnetwork.dylib: _nw_connection_create_with_connected_socket
__ libnetwork.dylib: _nw_connection_dump_timestamps
__ libnetwork.dylib: _nw_connection_fillout_tcp_connection_info
__ libnetwork.dylib: _nw_connection_fillout_tcp_statistics
__ libnetwork.dylib: _nw_connection_force_cancel
__ libnetwork.dylib: _nw_connection_get_connected_socket
__ libnetwork.dylib: _nw_connection_multipath_copy_subflow_counts
__ libnetwork.dylib: _nw_connection_multipath_get_subflow_count
__ libnetwork.dylib: _nw_connection_read_multiple
__ libnetwork.dylib: _nw_connection_receive
__ libnetwork.dylib: _nw_connection_receive_message
__ libnetwork.dylib: _nw_connection_send
__ libnetwork.dylib: _nw_connection_set_better_path_available_handler
__ libnetwork.dylib: _nw_connection_set_path_changed_handler
__ libnetwork.dylib: _nw_connection_set_queue
__ libnetwork.dylib: _nw_connection_set_state_changed_handler
__ libnetwork.dylib: _nw_connection_set_viability_changed_handler
__ libnetwork.dylib: _nw_connection_start
__ libnetwork.dylib: _nw_connection_used_tfo
__ libnetwork.dylib: _nw_connection_uses_multipath
__ libnetwork.dylib: _nw_connection_write_multiple
__ libnetwork.dylib: _nw_content_context_create
__ libnetwork.dylib: _nw_content_context_get_expiration_milliseconds
__ libnetwork.dylib: _nw_content_context_get_relative_priority
__ libnetwork.dylib: _nw_content_context_set_antecedent
__ libnetwork.dylib: _nw_content_context_set_expiration_milliseconds
__ libnetwork.dylib: _nw_content_context_set_relative_priority
__ libnetwork.dylib: _nw_endpoint_copy_custom_data
__ libnetwork.dylib: _nw_endpoint_copy_dictionary
__ libnetwork.dylib: _nw_endpoint_copy_interface
__ libnetwork.dylib: _nw_endpoint_copy_port_string
__ libnetwork.dylib: _nw_endpoint_copy_txt_record_object
__ libnetwork.dylib: _nw_endpoint_create_address
__ libnetwork.dylib: _nw_endpoint_create_bonjour_service
__ libnetwork.dylib: _nw_endpoint_create_custom
__ libnetwork.dylib: _nw_endpoint_create_from_dictionary
__ libnetwork.dylib: _nw_endpoint_create_host
__ libnetwork.dylib: _nw_endpoint_get_address
__ libnetwork.dylib: _nw_endpoint_get_alternate_port
__ libnetwork.dylib: _nw_endpoint_get_bonjour_service_domain
__ libnetwork.dylib: _nw_endpoint_get_bonjour_service_name
__ libnetwork.dylib: _nw_endpoint_get_bonjour_service_type
__ libnetwork.dylib: _nw_endpoint_get_description
__ libnetwork.dylib: _nw_endpoint_get_ethernet_address
__ libnetwork.dylib: _nw_endpoint_get_hash
__ libnetwork.dylib: _nw_endpoint_get_hostname
__ libnetwork.dylib: _nw_endpoint_get_parent_endpoint_domain
__ libnetwork.dylib: _nw_endpoint_get_type
__ libnetwork.dylib: _nw_endpoint_is_equal
__ libnetwork.dylib: _nw_endpoint_set_alternate_port
__ libnetwork.dylib: _nw_endpoint_set_interface
__ libnetwork.dylib: _nw_endpoint_set_txt_record_object
__ libnetwork.dylib: _nw_error_copy_cf_error
__ libnetwork.dylib: _nw_file_path_settings
__ libnetwork.dylib: _nw_file_path_settings_managed
__ libnetwork.dylib: _nw_frame_array_append
__ libnetwork.dylib: _nw_frame_array_first
__ libnetwork.dylib: _nw_frame_array_foreach
__ libnetwork.dylib: _nw_frame_array_init
__ libnetwork.dylib: _nw_frame_array_is_empty
__ libnetwork.dylib: _nw_frame_array_next
__ libnetwork.dylib: _nw_frame_array_remove
__ libnetwork.dylib: _nw_frame_claim
__ libnetwork.dylib: _nw_frame_collapse
__ libnetwork.dylib: _nw_frame_finalize
__ libnetwork.dylib: _nw_frame_get_flow_id
__ libnetwork.dylib: _nw_frame_set_flow_id
__ libnetwork.dylib: _nw_frame_unclaim
__ libnetwork.dylib: _nw_frame_unclaimed_bytes
__ libnetwork.dylib: _nw_hash_node_get_extra
__ libnetwork.dylib: _nw_hash_node_get_object
__ libnetwork.dylib: _nw_hash_table_add_object
__ libnetwork.dylib: _nw_hash_table_apply
__ libnetwork.dylib: _nw_hash_table_count
__ libnetwork.dylib: _nw_hash_table_get_node
__ libnetwork.dylib: _nw_hash_table_release
__ libnetwork.dylib: _nw_hash_table_remove_node
__ libnetwork.dylib: _nw_interface_copy_delegate_interface
__ libnetwork.dylib: _nw_interface_copy_dictionary
__ libnetwork.dylib: _nw_interface_copy_ipv4_broadcast_endpoint
__ libnetwork.dylib: _nw_interface_copy_ipv4_netmask_endpoint
__ libnetwork.dylib: _nw_interface_create_from_dictionary
__ libnetwork.dylib: _nw_interface_create_static
__ libnetwork.dylib: _nw_interface_create_with_index
__ libnetwork.dylib: _nw_interface_create_with_index_and_name
__ libnetwork.dylib: _nw_interface_create_with_name
__ libnetwork.dylib: _nw_interface_deep_compare
__ libnetwork.dylib: _nw_interface_get_active_state
__ libnetwork.dylib: _nw_interface_get_generation
__ libnetwork.dylib: _nw_interface_get_index
__ libnetwork.dylib: _nw_interface_get_mtu
__ libnetwork.dylib: _nw_interface_get_name
__ libnetwork.dylib: _nw_interface_get_subtype
__ libnetwork.dylib: _nw_interface_get_type
__ libnetwork.dylib: _nw_interface_is_constrained
__ libnetwork.dylib: _nw_interface_is_expensive
__ libnetwork.dylib: _nw_interface_shallow_compare
__ libnetwork.dylib: _nw_interface_subtype_get_description
__ libnetwork.dylib: _nw_interface_type_get_description
__ libnetwork.dylib: _nw_listener_cancel
__ libnetwork.dylib: _nw_listener_create
__ libnetwork.dylib: _nw_listener_create_with_launchd_key
__ libnetwork.dylib: _nw_listener_get_port
__ libnetwork.dylib: _nw_listener_set_advertise_descriptor
__ libnetwork.dylib: _nw_listener_set_new_connection_handler
__ libnetwork.dylib: _nw_listener_set_queue
__ libnetwork.dylib: _nw_listener_set_state_changed_handler
__ libnetwork.dylib: _nw_listener_start
__ libnetwork.dylib: _nw_network_agent_add_to_interface
__ libnetwork.dylib: _nw_network_agent_copy_dictionary_for_uuid
__ libnetwork.dylib: _nw_network_agent_ctl_copy_received_agent_message
__ libnetwork.dylib: _nw_network_agent_ctl_send_assign_message
__ libnetwork.dylib: _nw_network_agent_ctl_setsockopt
__ libnetwork.dylib: _nw_network_agent_get_agent_from_dictionary
__ libnetwork.dylib: _nw_network_agent_get_use_count
__ libnetwork.dylib: _nw_network_agent_open_control_socket
__ libnetwork.dylib: _nw_network_agent_remove_from_interface
__ libnetwork.dylib: _nw_network_agent_set_use_count
__ libnetwork.dylib: _nw_notification_name_settings
__ libnetwork.dylib: _nw_oslog_subsystem
__ libnetwork.dylib: _nw_packet_hash_table_create
__ libnetwork.dylib: _nw_parameters_add_to_protocol_stack
__ libnetwork.dylib: _nw_parameters_are_valid
__ libnetwork.dylib: _nw_parameters_copy
__ libnetwork.dylib: _nw_parameters_copy_avoided_netagent_domains
__ libnetwork.dylib: _nw_parameters_copy_avoided_netagent_types
__ libnetwork.dylib: _nw_parameters_copy_avoided_netagent_uuids
__ libnetwork.dylib: _nw_parameters_copy_default_protocol_stack
__ libnetwork.dylib: _nw_parameters_copy_dictionary
__ libnetwork.dylib: _nw_parameters_copy_initial_data_payload
__ libnetwork.dylib: _nw_parameters_copy_local_address
__ libnetwork.dylib: _nw_parameters_copy_metadata
__ libnetwork.dylib: _nw_parameters_copy_preferred_netagent_domains
__ libnetwork.dylib: _nw_parameters_copy_preferred_netagent_types
__ libnetwork.dylib: _nw_parameters_copy_preferred_netagent_uuids
__ libnetwork.dylib: _nw_parameters_copy_prohibited_interface_subtypes
__ libnetwork.dylib: _nw_parameters_copy_prohibited_interface_types
__ libnetwork.dylib: _nw_parameters_copy_prohibited_interfaces
__ libnetwork.dylib: _nw_parameters_copy_prohibited_netagent_domains
__ libnetwork.dylib: _nw_parameters_copy_prohibited_netagent_types
__ libnetwork.dylib: _nw_parameters_copy_prohibited_netagent_uuids
__ libnetwork.dylib: _nw_parameters_copy_protocol_options_for_definition
__ libnetwork.dylib: _nw_parameters_copy_proxy_configuration
__ libnetwork.dylib: _nw_parameters_copy_required_interface
__ libnetwork.dylib: _nw_parameters_copy_required_netagent_domains
__ libnetwork.dylib: _nw_parameters_copy_required_netagent_types
__ libnetwork.dylib: _nw_parameters_copy_required_netagent_uuids
__ libnetwork.dylib: _nw_parameters_copy_tls_session_id
__ libnetwork.dylib: _nw_parameters_copy_transform_array
__ libnetwork.dylib: _nw_parameters_create
__ libnetwork.dylib: _nw_parameters_create_empty_stack
__ libnetwork.dylib: _nw_parameters_create_from_dictionary
__ libnetwork.dylib: _nw_parameters_create_secure_tcp
__ libnetwork.dylib: _nw_parameters_get_account_id
__ libnetwork.dylib: _nw_parameters_get_allow_duplicate_state_updates
__ libnetwork.dylib: _nw_parameters_get_allow_joining_connected_fd
__ libnetwork.dylib: _nw_parameters_get_allow_socket_access
__ libnetwork.dylib: _nw_parameters_get_allow_unusable_addresses
__ libnetwork.dylib: _nw_parameters_get_attach_protocol_listener
__ libnetwork.dylib: _nw_parameters_get_data_mode
__ libnetwork.dylib: _nw_parameters_get_discretionary
__ libnetwork.dylib: _nw_parameters_get_dry_run
__ libnetwork.dylib: _nw_parameters_get_e_proc_uuid
__ libnetwork.dylib: _nw_parameters_get_effective_audit_token
__ libnetwork.dylib: _nw_parameters_get_effective_bundle_id
__ libnetwork.dylib: _nw_parameters_get_fast_open_force_enable
__ libnetwork.dylib: _nw_parameters_get_hash
__ libnetwork.dylib: _nw_parameters_get_https_proxy_is_opaque
__ libnetwork.dylib: _nw_parameters_get_https_proxy_over_tls
__ libnetwork.dylib: _nw_parameters_get_ignore_resolver_stats
__ libnetwork.dylib: _nw_parameters_get_indefinite
__ libnetwork.dylib: _nw_parameters_get_indefinite_set
__ libnetwork.dylib: _nw_parameters_get_ip_protocol
__ libnetwork.dylib: _nw_parameters_get_keepalive_enabled
__ libnetwork.dylib: _nw_parameters_get_keepalive_idle_time
__ libnetwork.dylib: _nw_parameters_get_keepalive_interval
__ libnetwork.dylib: _nw_parameters_get_keepalive_offload
__ libnetwork.dylib: _nw_parameters_get_multipath
__ libnetwork.dylib: _nw_parameters_get_multipath_force_enable
__ libnetwork.dylib: _nw_parameters_get_multipath_service
__ libnetwork.dylib: _nw_parameters_get_no_delay
__ libnetwork.dylib: _nw_parameters_get_no_fallback
__ libnetwork.dylib: _nw_parameters_get_no_proxy
__ libnetwork.dylib: _nw_parameters_get_parent_id
__ libnetwork.dylib: _nw_parameters_get_pid
__ libnetwork.dylib: _nw_parameters_get_prefer_no_proxy
__ libnetwork.dylib: _nw_parameters_get_proc_uuid
__ libnetwork.dylib: _nw_parameters_get_prohibit_cellular
__ libnetwork.dylib: _nw_parameters_get_prohibit_constrained
__ libnetwork.dylib: _nw_parameters_get_prohibit_expensive
__ libnetwork.dylib: _nw_parameters_get_prohibit_joining_protocols
__ libnetwork.dylib: _nw_parameters_get_prohibit_roaming
__ libnetwork.dylib: _nw_parameters_get_reduce_buffering
__ libnetwork.dylib: _nw_parameters_get_required_address_family
__ libnetwork.dylib: _nw_parameters_get_required_interface_subtype
__ libnetwork.dylib: _nw_parameters_get_required_interface_type
__ libnetwork.dylib: _nw_parameters_get_resolve_ptr
__ libnetwork.dylib: _nw_parameters_get_reuse_local_address
__ libnetwork.dylib: _nw_parameters_get_sanitized_url
__ libnetwork.dylib: _nw_parameters_get_should_trust_invalid_certificates
__ libnetwork.dylib: _nw_parameters_get_tfo
__ libnetwork.dylib: _nw_parameters_get_tfo_no_cookie
__ libnetwork.dylib: _nw_parameters_get_tls
__ libnetwork.dylib: _nw_parameters_get_traffic_class
__ libnetwork.dylib: _nw_parameters_get_uid
__ libnetwork.dylib: _nw_parameters_get_upper_transport_protocol
__ libnetwork.dylib: _nw_parameters_get_url
__ libnetwork.dylib: _nw_parameters_get_use_awdl
__ libnetwork.dylib: _nw_parameters_get_use_long_outstanding_queries
__ libnetwork.dylib: _nw_parameters_get_use_p2p
__ libnetwork.dylib: _nw_parameters_has_delegated_proc_pid
__ libnetwork.dylib: _nw_parameters_has_delegated_proc_uuid
__ libnetwork.dylib: _nw_parameters_has_initial_data_payload
__ libnetwork.dylib: _nw_parameters_has_non_empty_proxy_configuration
__ libnetwork.dylib: _nw_parameters_has_preferred_netagents
__ libnetwork.dylib: _nw_parameters_has_prohibited_interface_subtypes
__ libnetwork.dylib: _nw_parameters_has_prohibited_interface_types
__ libnetwork.dylib: _nw_parameters_has_prohibited_interfaces
__ libnetwork.dylib: _nw_parameters_has_prohibited_netagents
__ libnetwork.dylib: _nw_parameters_has_required_netagents
__ libnetwork.dylib: _nw_parameters_is_equal
__ libnetwork.dylib: _nw_parameters_require_interface
__ libnetwork.dylib: _nw_parameters_set_account_id
__ libnetwork.dylib: _nw_parameters_set_allow_duplicate_state_updates
__ libnetwork.dylib: _nw_parameters_set_allow_joining_connected_fd
__ libnetwork.dylib: _nw_parameters_set_allow_socket_access
__ libnetwork.dylib: _nw_parameters_set_allow_unusable_addresses
__ libnetwork.dylib: _nw_parameters_set_attach_protocol_listener
__ libnetwork.dylib: _nw_parameters_set_avoided_netagent_classes
__ libnetwork.dylib: _nw_parameters_set_avoided_netagent_uuids
__ libnetwork.dylib: _nw_parameters_set_data_mode
__ libnetwork.dylib: _nw_parameters_set_discretionary
__ libnetwork.dylib: _nw_parameters_set_e_proc_uuid
__ libnetwork.dylib: _nw_parameters_set_effective_bundle_id
__ libnetwork.dylib: _nw_parameters_set_fast_open_force_enable
__ libnetwork.dylib: _nw_parameters_set_https_proxy_is_opaque
__ libnetwork.dylib: _nw_parameters_set_https_proxy_over_tls
__ libnetwork.dylib: _nw_parameters_set_ignore_resolver_stats
__ libnetwork.dylib: _nw_parameters_set_indefinite
__ libnetwork.dylib: _nw_parameters_set_initial_data_payload
__ libnetwork.dylib: _nw_parameters_set_keepalive_enabled
__ libnetwork.dylib: _nw_parameters_set_keepalive_idle_time
__ libnetwork.dylib: _nw_parameters_set_keepalive_interval
__ libnetwork.dylib: _nw_parameters_set_keepalive_offload
__ libnetwork.dylib: _nw_parameters_set_local_address
__ libnetwork.dylib: _nw_parameters_set_maximum_tls_protocol_version
__ libnetwork.dylib: _nw_parameters_set_metadata
__ libnetwork.dylib: _nw_parameters_set_minimum_tls_protocol_version
__ libnetwork.dylib: _nw_parameters_set_multipath_force_enable
__ libnetwork.dylib: _nw_parameters_set_multipath_service
__ libnetwork.dylib: _nw_parameters_set_no_delay
__ libnetwork.dylib: _nw_parameters_set_no_fallback
__ libnetwork.dylib: _nw_parameters_set_no_opaque_proxy
__ libnetwork.dylib: _nw_parameters_set_no_proxy
__ libnetwork.dylib: _nw_parameters_set_parent_id
__ libnetwork.dylib: _nw_parameters_set_pid
__ libnetwork.dylib: _nw_parameters_set_prefer_no_proxy
__ libnetwork.dylib: _nw_parameters_set_preferred_netagent_classes
__ libnetwork.dylib: _nw_parameters_set_preferred_netagent_uuids
__ libnetwork.dylib: _nw_parameters_set_proc_uuid
__ libnetwork.dylib: _nw_parameters_set_prohibit_constrained
__ libnetwork.dylib: _nw_parameters_set_prohibit_expensive
__ libnetwork.dylib: _nw_parameters_set_prohibit_joining_protocols
__ libnetwork.dylib: _nw_parameters_set_prohibit_roaming
__ libnetwork.dylib: _nw_parameters_set_prohibited_interface_subtypes
__ libnetwork.dylib: _nw_parameters_set_prohibited_interface_types
__ libnetwork.dylib: _nw_parameters_set_prohibited_interfaces
__ libnetwork.dylib: _nw_parameters_set_prohibited_netagent_classes
__ libnetwork.dylib: _nw_parameters_set_prohibited_netagent_uuids
__ libnetwork.dylib: _nw_parameters_set_proxy_configuration
__ libnetwork.dylib: _nw_parameters_set_reduce_buffering
__ libnetwork.dylib: _nw_parameters_set_required_address_family
__ libnetwork.dylib: _nw_parameters_set_required_interface_subtype
__ libnetwork.dylib: _nw_parameters_set_required_interface_type
__ libnetwork.dylib: _nw_parameters_set_required_netagent_classes
__ libnetwork.dylib: _nw_parameters_set_required_netagent_uuids
__ libnetwork.dylib: _nw_parameters_set_resolve_ptr
__ libnetwork.dylib: _nw_parameters_set_reuse_local_address
__ libnetwork.dylib: _nw_parameters_set_should_trust_invalid_certificates
__ libnetwork.dylib: _nw_parameters_set_source_application
__ libnetwork.dylib: _nw_parameters_set_source_application_by_bundle_id
__ libnetwork.dylib: _nw_parameters_set_ssl_cipher_suites
__ libnetwork.dylib: _nw_parameters_set_tfo
__ libnetwork.dylib: _nw_parameters_set_tfo_no_cookie
__ libnetwork.dylib: _nw_parameters_set_tls
__ libnetwork.dylib: _nw_parameters_set_tls_session_id
__ libnetwork.dylib: _nw_parameters_set_traffic_class
__ libnetwork.dylib: _nw_parameters_set_transform_array
__ libnetwork.dylib: _nw_parameters_set_uid
__ libnetwork.dylib: _nw_parameters_set_url
__ libnetwork.dylib: _nw_parameters_set_use_awdl
__ libnetwork.dylib: _nw_parameters_set_use_long_outstanding_queries
__ libnetwork.dylib: _nw_parameters_set_use_p2p
__ libnetwork.dylib: _nw_path_assert_agent
__ libnetwork.dylib: _nw_path_copy_advertise_descriptor
__ libnetwork.dylib: _nw_path_copy_all_client_ids
__ libnetwork.dylib: _nw_path_copy_browse_descriptor
__ libnetwork.dylib: _nw_path_copy_connected_interface
__ libnetwork.dylib: _nw_path_copy_delegate_interface
__ libnetwork.dylib: _nw_path_copy_derived_parameters
__ libnetwork.dylib: _nw_path_copy_direct_interface
__ libnetwork.dylib: _nw_path_copy_effective_local_endpoint
__ libnetwork.dylib: _nw_path_copy_effective_remote_endpoint
__ libnetwork.dylib: _nw_path_copy_endpoint
__ libnetwork.dylib: _nw_path_copy_flow_divert_token
__ libnetwork.dylib: _nw_path_copy_flows
__ libnetwork.dylib: _nw_path_copy_gateways
__ libnetwork.dylib: _nw_path_copy_netagent_dictionary
__ libnetwork.dylib: _nw_path_copy_parameters
__ libnetwork.dylib: _nw_path_copy_path_for_client
__ libnetwork.dylib: _nw_path_copy_proxy_settings
__ libnetwork.dylib: _nw_path_create_browse_result
__ libnetwork.dylib: _nw_path_create_evaluator_for_browse
__ libnetwork.dylib: _nw_path_create_evaluator_for_endpoint
__ libnetwork.dylib: _nw_path_create_evaluator_for_listener
__ libnetwork.dylib: _nw_path_create_resolve_result
__ libnetwork.dylib: _nw_path_create_static
__ libnetwork.dylib: _nw_path_enumerate_interface_options
__ libnetwork.dylib: _nw_path_evaluator_cancel
__ libnetwork.dylib: _nw_path_evaluator_copy_path
__ libnetwork.dylib: _nw_path_evaluator_request_nexus
__ libnetwork.dylib: _nw_path_evaluator_set_update_handler
__ libnetwork.dylib: _nw_path_evaluator_trigger_agents
__ libnetwork.dylib: _nw_path_fallback_is_weak
__ libnetwork.dylib: _nw_path_flow_copy_interface
__ libnetwork.dylib: _nw_path_flow_copy_local_endpoint
__ libnetwork.dylib: _nw_path_flow_copy_remote_endpoint
__ libnetwork.dylib: _nw_path_flow_get_id
__ libnetwork.dylib: _nw_path_flow_get_nexus_agent_uuid
__ libnetwork.dylib: _nw_path_flow_get_nexus_instance
__ libnetwork.dylib: _nw_path_flow_has_ipv4
__ libnetwork.dylib: _nw_path_flow_has_ipv6
__ libnetwork.dylib: _nw_path_flow_is_assigned
__ libnetwork.dylib: _nw_path_flow_is_defunct
__ libnetwork.dylib: _nw_path_flow_is_direct
__ libnetwork.dylib: _nw_path_flow_is_local
__ libnetwork.dylib: _nw_path_flow_is_viable
__ libnetwork.dylib: _nw_path_get_client_id
__ libnetwork.dylib: _nw_path_get_dns_search_domains
__ libnetwork.dylib: _nw_path_get_dns_servers
__ libnetwork.dylib: _nw_path_get_dns_service_id
__ libnetwork.dylib: _nw_path_get_fallback_interface_index
__ libnetwork.dylib: _nw_path_get_filter_unit
__ libnetwork.dylib: _nw_path_get_flow_divert_unit
__ libnetwork.dylib: _nw_path_get_interface_index
__ libnetwork.dylib: _nw_path_get_interface_time_delta
__ libnetwork.dylib: _nw_path_get_maximum_datagram_size
__ libnetwork.dylib: _nw_path_get_mtu
__ libnetwork.dylib: _nw_path_get_policy_id
__ libnetwork.dylib: _nw_path_get_reason
__ libnetwork.dylib: _nw_path_get_reason_description
__ libnetwork.dylib: _nw_path_get_scoped_interface_index
__ libnetwork.dylib: _nw_path_get_status
__ libnetwork.dylib: _nw_path_has_advertise_descriptor
__ libnetwork.dylib: _nw_path_has_browse_descriptor
__ libnetwork.dylib: _nw_path_has_dns
__ libnetwork.dylib: _nw_path_has_ipv4
__ libnetwork.dylib: _nw_path_has_ipv6
__ libnetwork.dylib: _nw_path_has_unsatisfied_fallback_agent
__ libnetwork.dylib: _nw_path_increment_agent_use_count
__ libnetwork.dylib: _nw_path_is_constrained
__ libnetwork.dylib: _nw_path_is_direct
__ libnetwork.dylib: _nw_path_is_eligible_for_CrazyIvan46
__ libnetwork.dylib: _nw_path_is_equal
__ libnetwork.dylib: _nw_path_is_expensive
__ libnetwork.dylib: _nw_path_is_listener
__ libnetwork.dylib: _nw_path_is_local
__ libnetwork.dylib: _nw_path_is_per_app_vpn
__ libnetwork.dylib: _nw_path_is_roaming
__ libnetwork.dylib: _nw_path_is_viable
__ libnetwork.dylib: _nw_path_link_quality_abort
__ libnetwork.dylib: _nw_path_listener_is_interface_specific
__ libnetwork.dylib: _nw_path_should_fallback
__ libnetwork.dylib: _nw_path_should_probe_connectivity
__ libnetwork.dylib: _nw_path_unassert_agent
__ libnetwork.dylib: _nw_path_uses_interface_type
__ libnetwork.dylib: _nw_path_voluntary_agent_matches_address
__ libnetwork.dylib: _nw_protocol_copy_tls_definition
__ libnetwork.dylib: _nw_protocol_hash_table_create
__ libnetwork.dylib: _nw_protocol_set_default_one_to_one_callbacks
__ libnetwork.dylib: _nw_protocol_stack_copy_transport_protocol
__ libnetwork.dylib: _nw_protocol_stack_set_transport_protocol
__ libnetwork.dylib: _nw_protocol_transform_append_protocol
__ libnetwork.dylib: _nw_protocol_transform_clear_protocols_at_level
__ libnetwork.dylib: _nw_protocol_transform_copy_endpoint
__ libnetwork.dylib: _nw_protocol_transform_create
__ libnetwork.dylib: _nw_protocol_transform_disable_protocol
__ libnetwork.dylib: _nw_protocol_transform_get_data_mode
__ libnetwork.dylib: _nw_protocol_transform_get_fallback_mode
__ libnetwork.dylib: _nw_protocol_transform_get_fast_open_force_enable
__ libnetwork.dylib: _nw_protocol_transform_get_hash
__ libnetwork.dylib: _nw_protocol_transform_get_multipath_service
__ libnetwork.dylib: _nw_protocol_transform_get_no_path_fallback
__ libnetwork.dylib: _nw_protocol_transform_get_no_proxy
__ libnetwork.dylib: _nw_protocol_transform_get_prohibit_direct
__ libnetwork.dylib: _nw_protocol_transform_get_tfo
__ libnetwork.dylib: _nw_protocol_transform_get_tfo_no_cookie
__ libnetwork.dylib: _nw_protocol_transform_is_equal
__ libnetwork.dylib: _nw_protocol_transform_replace_endpoint
__ libnetwork.dylib: _nw_protocol_transform_set_data_mode
__ libnetwork.dylib: _nw_protocol_transform_set_fallback_mode
__ libnetwork.dylib: _nw_protocol_transform_set_fast_open_force_enable
__ libnetwork.dylib: _nw_protocol_transform_set_multipath_service
__ libnetwork.dylib: _nw_protocol_transform_set_no_path_fallback
__ libnetwork.dylib: _nw_protocol_transform_set_no_proxy
__ libnetwork.dylib: _nw_protocol_transform_set_prohibit_direct
__ libnetwork.dylib: _nw_protocol_transform_set_tfo
__ libnetwork.dylib: _nw_protocol_transform_set_tfo_no_cookie
__ libnetwork.dylib: _nw_queue_async_current
__ libnetwork.dylib: _nw_resolver_cancel
__ libnetwork.dylib: _nw_resolver_create_with_endpoint
__ libnetwork.dylib: _nw_resolver_create_with_path
__ libnetwork.dylib: _nw_resolver_set_update_handler
__ libnetwork.dylib: _nw_setting_boringssl_log_debug
__ libnetwork.dylib: _nw_setting_channel_enable_qos_override
__ libnetwork.dylib: _nw_setting_context_timer_disable_qos_override
__ libnetwork.dylib: _nw_setting_libnetcore_datapath_debug
__ libnetwork.dylib: _nw_setting_libnetcore_debug
__ libnetwork.dylib: _nw_setting_tcp_disable_auto_tfo
__ libnetwork.dylib: _nw_setting_tcp_timer_disable_qos_override
__ libnetwork.dylib: _nw_setting_tcpconn_disable_simulate_crash
__ libnetwork.dylib: _nw_setting_tcpconn_disable_tls13
__ libnetwork.dylib: _nw_setting_tcpconn_enable_tls_esni
__ libnetwork.dylib: _nw_setting_tcpconn_enable_tls_tickets
__ libnetwork.dylib: _nw_settings_carrier_settings
__ libnetwork.dylib: _nw_settings_managed_settings
__ libnetwork.dylib: _nw_settings_register_networkd_privileged
__ libnetwork.dylib: _nw_tcp_create_options
__ libnetwork.dylib: _nw_tls_copy_sec_protocol_options
__ libnetwork.dylib: _nw_txt_record_create_with_bytes
__ libnetwork.dylib: _nw_txt_record_get_bytes
__ libnetwork.dylib: _nw_txt_record_get_length
__ libnetwork.dylib: _nw_udp_create_options
__ libnetwork.dylib: _tcp_connection_fallback_watcher_create
__ libnetwork.dylib: _tcp_connection_fallback_watcher_destroy
__ libnetwork.dylib: _tcp_fallback_watcher_fallback_inuse
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
NWAWDLibnetcoreMPTCPStatsReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasMptcpHandoverAttempts
 @property  unsigned long mptcpHandoverAttempts
 @property  BOOL hasMptcpInteractiveAttempt
 @property  unsigned long mptcpInteractiveAttempt
 @property  BOOL hasMptcpAggregateAttempt
 @property  unsigned long mptcpAggregateAttempt
 @property  BOOL hasMptcpFirstPartyHandoverAttempt
 @property  unsigned long mptcpFirstPartyHandoverAttempt
 @property  BOOL hasMptcpFirstPartyInteractiveAttempt
 @property  unsigned long mptcpFirstPartyInteractiveAttempt
 @property  BOOL hasMptcpFirstPartyAggregateAttempt
 @property  unsigned long mptcpFirstPartyAggregateAttempt
 @property  BOOL hasMptcpHeuristicFallback
 @property  unsigned long mptcpHeuristicFallback
 @property  BOOL hasMptcpHeuristicFallbackFirstParty
 @property  unsigned long mptcpHeuristicFallbackFirstParty
 @property  BOOL hasMptcpHandshakeHandoverSuccessWiFi
 @property  unsigned long mptcpHandshakeHandoverSuccessWiFi
 @property  BOOL hasMptcpHandshakeHandoverSuccessCell
 @property  unsigned long mptcpHandshakeHandoverSuccessCell
 @property  BOOL hasMptcpHandshakeInteractiveSuccess
 @property  unsigned long mptcpHandshakeInteractiveSuccess
 @property  BOOL hasMptcpHandshakeAggregateSuccess
 @property  unsigned long mptcpHandshakeAggregateSuccess
 @property  BOOL hasMptcpHandshakeHandoverSuccessWiFiFirstParty
 @property  unsigned long mptcpHandshakeHandoverSuccessWiFiFirstParty
 @property  BOOL hasMptcpHandshakeHandoverSuccessCellFirstParty
 @property  unsigned long mptcpHandshakeHandoverSuccessCellFirstParty
 @property  BOOL hasMptcpHandshakeInteractiveSuccessFirstParty
 @property  unsigned long mptcpHandshakeInteractiveSuccessFirstParty
 @property  BOOL hasMptcpHandshakeAggregateSuccessFirstParty
 @property  unsigned long mptcpHandshakeAggregateSuccessFirstParty
 @property  BOOL hasMptcpHandoverCellSubflowFromWiFi
 @property  unsigned long mptcpHandoverCellSubflowFromWiFi
 @property  BOOL hasMptcpHandoverWiFiSubflowFromCell
 @property  unsigned long mptcpHandoverWiFiSubflowFromCell
 @property  BOOL hasMptcpInteractiveCellUsage
 @property  unsigned long mptcpInteractiveCellUsage
 @property  BOOL hasMptcpHandoverCellBytes
 @property  unsigned long mptcpHandoverCellBytes
 @property  BOOL hasMptcpInteractiveCellBytes
 @property  unsigned long mptcpInteractiveCellBytes
 @property  BOOL hasMptcpAggregateCellBytes
 @property  unsigned long mptcpAggregateCellBytes
 @property  BOOL hasMptcpHandoverAllBytes
 @property  unsigned long mptcpHandoverAllBytes
 @property  BOOL hasMptcpInteractiveAllBytes
 @property  unsigned long mptcpInteractiveAllBytes
 @property  BOOL hasMptcpAggregateAllBytes
 @property  unsigned long mptcpAggregateAllBytes
 @property  BOOL hasMptcpBackToWiFi
 @property  unsigned long mptcpBackToWiFi
 @property  BOOL hasMptcpCellDenied
 @property  unsigned long mptcpCellDenied
 @property  BOOL hasMptcpCellProxy
 @property  unsigned long mptcpCellProxy
 @property  BOOL hasMptcpWiFiProxy
 @property  unsigned long mptcpWiFiProxy
 @property  BOOL hasMptcpTriggeredCell
 @property  unsigned long mptcpTriggeredCell

  // instance methods
  -[NWAWDLibnetcoreMPTCPStatsReport isEqual:]
  -[NWAWDLibnetcoreMPTCPStatsReport copyWithZone:]
  -[NWAWDLibnetcoreMPTCPStatsReport dictionaryRepresentation]
  -[NWAWDLibnetcoreMPTCPStatsReport writeTo:]
  -[NWAWDLibnetcoreMPTCPStatsReport mergeFrom:]
  -[NWAWDLibnetcoreMPTCPStatsReport readFrom:]
  -[NWAWDLibnetcoreMPTCPStatsReport copyTo:]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHandoverAttempts:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHandoverAttempts:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHandoverAttempts]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpInteractiveAttempt:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpInteractiveAttempt:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpInteractiveAttempt]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpAggregateAttempt:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpAggregateAttempt:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpAggregateAttempt]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpFirstPartyHandoverAttempt:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpFirstPartyHandoverAttempt:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpFirstPartyHandoverAttempt]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpFirstPartyInteractiveAttempt:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpFirstPartyInteractiveAttempt:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpFirstPartyInteractiveAttempt]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpFirstPartyAggregateAttempt:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpFirstPartyAggregateAttempt:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpFirstPartyAggregateAttempt]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHeuristicFallback:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHeuristicFallback:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHeuristicFallback]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHeuristicFallbackFirstParty:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHeuristicFallbackFirstParty:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHeuristicFallbackFirstParty]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHandshakeHandoverSuccessWiFi:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHandshakeHandoverSuccessWiFi:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHandshakeHandoverSuccessWiFi]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHandshakeHandoverSuccessCell:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHandshakeHandoverSuccessCell:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHandshakeHandoverSuccessCell]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHandshakeInteractiveSuccess:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHandshakeInteractiveSuccess:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHandshakeInteractiveSuccess]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHandshakeAggregateSuccess:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHandshakeAggregateSuccess:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHandshakeAggregateSuccess]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHandshakeHandoverSuccessWiFiFirstParty:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHandshakeHandoverSuccessWiFiFirstParty:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHandshakeHandoverSuccessWiFiFirstParty]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHandshakeHandoverSuccessCellFirstParty:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHandshakeHandoverSuccessCellFirstParty:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHandshakeHandoverSuccessCellFirstParty]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHandshakeInteractiveSuccessFirstParty:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHandshakeInteractiveSuccessFirstParty:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHandshakeInteractiveSuccessFirstParty]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHandshakeAggregateSuccessFirstParty:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHandshakeAggregateSuccessFirstParty:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHandshakeAggregateSuccessFirstParty]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHandoverCellSubflowFromWiFi:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHandoverCellSubflowFromWiFi:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHandoverCellSubflowFromWiFi]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHandoverWiFiSubflowFromCell:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHandoverWiFiSubflowFromCell:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHandoverWiFiSubflowFromCell]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpInteractiveCellUsage:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpInteractiveCellUsage:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpInteractiveCellUsage]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHandoverCellBytes:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHandoverCellBytes:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHandoverCellBytes]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpInteractiveCellBytes:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpInteractiveCellBytes:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpInteractiveCellBytes]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpAggregateCellBytes:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpAggregateCellBytes:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpAggregateCellBytes]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpHandoverAllBytes:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpHandoverAllBytes:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpHandoverAllBytes]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpInteractiveAllBytes:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpInteractiveAllBytes:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpInteractiveAllBytes]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpAggregateAllBytes:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpAggregateAllBytes:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpAggregateAllBytes]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpBackToWiFi:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpBackToWiFi:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpBackToWiFi]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpCellDenied:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpCellDenied:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpCellDenied]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpCellProxy:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpCellProxy:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpCellProxy]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpWiFiProxy:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpWiFiProxy:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpWiFiProxy]
  -[NWAWDLibnetcoreMPTCPStatsReport setMptcpTriggeredCell:]
  -[NWAWDLibnetcoreMPTCPStatsReport setHasMptcpTriggeredCell:]
  -[NWAWDLibnetcoreMPTCPStatsReport hasMptcpTriggeredCell]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHandoverAttempts]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpInteractiveAttempt]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpAggregateAttempt]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpFirstPartyHandoverAttempt]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpFirstPartyInteractiveAttempt]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpFirstPartyAggregateAttempt]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHeuristicFallback]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHeuristicFallbackFirstParty]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHandshakeHandoverSuccessWiFi]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHandshakeHandoverSuccessCell]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHandshakeInteractiveSuccess]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHandshakeAggregateSuccess]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHandshakeHandoverSuccessWiFiFirstParty]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHandshakeHandoverSuccessCellFirstParty]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHandshakeInteractiveSuccessFirstParty]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHandshakeAggregateSuccessFirstParty]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHandoverCellSubflowFromWiFi]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHandoverWiFiSubflowFromCell]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpInteractiveCellUsage]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHandoverCellBytes]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpInteractiveCellBytes]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpAggregateCellBytes]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpHandoverAllBytes]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpInteractiveAllBytes]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpAggregateAllBytes]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpBackToWiFi]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpCellDenied]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpCellProxy]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpWiFiProxy]
  -[NWAWDLibnetcoreMPTCPStatsReport mptcpTriggeredCell]


NWSystemPathMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  NWMonitor *vpnMonitor
 @property  NWPathEvaluator *primaryEvaluator
 @property  int vpnNotifyToken
 @property  BKSApplicationStateMonitor *applicationMonitor
 @property  NSMutableDictionary *perAppVPNEvaluators
 @property  NSObject<OS_dispatch_source> *smoothingTimer
 @property  ^{tcp_connection_fallback_watch_s=} fallbackWatcher
 @property  NSObject<OS_dispatch_source> *mptcpWatcher
 @property  BOOL vpnActive
 @property  BOOL wifiPrimary
 @property  BOOL ethernetPrimary

  // class methods
  +[NWSystemPathMonitor sharedSystemPathMonitor]

  // instance methods
  -[NWSystemPathMonitor init]
  -[NWSystemPathMonitor dealloc]
  -[NWSystemPathMonitor .cxx_destruct]
  -[NWSystemPathMonitor observeValueForKeyPath:ofObject:change:context:]
  -[NWSystemPathMonitor updateFlags]
  -[NWSystemPathMonitor eventFired]
  -[NWSystemPathMonitor appStateChangedWithUserInfo:]
  -[NWSystemPathMonitor startWatchingApplicationStates]
  -[NWSystemPathMonitor stopWatchingApplicationStates]
  -[NWSystemPathMonitor registerForVPNNotifications]
  -[NWSystemPathMonitor updateVPNMonitor]
  -[NWSystemPathMonitor isWiFiPrimary]
  -[NWSystemPathMonitor setWifiPrimary:]
  -[NWSystemPathMonitor isEthernetPrimary]
  -[NWSystemPathMonitor setEthernetPrimary:]
  -[NWSystemPathMonitor isVPNActive]
  -[NWSystemPathMonitor setVpnActive:]
  -[NWSystemPathMonitor vpnMonitor]
  -[NWSystemPathMonitor setVpnMonitor:]
  -[NWSystemPathMonitor primaryEvaluator]
  -[NWSystemPathMonitor setPrimaryEvaluator:]
  -[NWSystemPathMonitor vpnNotifyToken]
  -[NWSystemPathMonitor setVpnNotifyToken:]
  -[NWSystemPathMonitor applicationMonitor]
  -[NWSystemPathMonitor setApplicationMonitor:]
  -[NWSystemPathMonitor perAppVPNEvaluators]
  -[NWSystemPathMonitor setPerAppVPNEvaluators:]
  -[NWSystemPathMonitor smoothingTimer]
  -[NWSystemPathMonitor setSmoothingTimer:]
  -[NWSystemPathMonitor fallbackWatcher]
  -[NWSystemPathMonitor setFallbackWatcher:]
  -[NWSystemPathMonitor mptcpWatcher]
  -[NWSystemPathMonitor setMptcpWatcher:]


NWPBCloseConnection : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasClientUUID
 @property  NSString *clientUUID

  // instance methods
  -[NWPBCloseConnection isEqual:]
  -[NWPBCloseConnection copyWithZone:]
  -[NWPBCloseConnection .cxx_destruct]
  -[NWPBCloseConnection dictionaryRepresentation]
  -[NWPBCloseConnection writeTo:]
  -[NWPBCloseConnection mergeFrom:]
  -[NWPBCloseConnection readFrom:]
  -[NWPBCloseConnection copyTo:]
  -[NWPBCloseConnection hasClientUUID]
  -[NWPBCloseConnection clientUUID]
  -[NWPBCloseConnection setClientUUID:]


NWAWDLBEndpointsFetchReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasEndpointsFetchTaskCount
 @property  int endpointsFetchTaskCount
 @property  BOOL hasEndpointsFetchTaskSuccessCount
 @property  int endpointsFetchTaskSuccessCount
 @property  BOOL hasEndpointsFetchTaskFailureCount
 @property  int endpointsFetchTaskFailureCount
 @property  BOOL hasEndpointsFetchTaskBadReplyCount
 @property  int endpointsFetchTaskBadReplyCount
 @property  BOOL hasConnectionCellularFallbackCount
 @property  int connectionCellularFallbackCount

  // instance methods
  -[NWAWDLBEndpointsFetchReport isEqual:]
  -[NWAWDLBEndpointsFetchReport copyWithZone:]
  -[NWAWDLBEndpointsFetchReport dictionaryRepresentation]
  -[NWAWDLBEndpointsFetchReport timestamp]
  -[NWAWDLBEndpointsFetchReport hasTimestamp]
  -[NWAWDLBEndpointsFetchReport setTimestamp:]
  -[NWAWDLBEndpointsFetchReport writeTo:]
  -[NWAWDLBEndpointsFetchReport mergeFrom:]
  -[NWAWDLBEndpointsFetchReport readFrom:]
  -[NWAWDLBEndpointsFetchReport copyTo:]
  -[NWAWDLBEndpointsFetchReport setHasTimestamp:]
  -[NWAWDLBEndpointsFetchReport setEndpointsFetchTaskCount:]
  -[NWAWDLBEndpointsFetchReport setHasEndpointsFetchTaskCount:]
  -[NWAWDLBEndpointsFetchReport hasEndpointsFetchTaskCount]
  -[NWAWDLBEndpointsFetchReport setEndpointsFetchTaskSuccessCount:]
  -[NWAWDLBEndpointsFetchReport setHasEndpointsFetchTaskSuccessCount:]
  -[NWAWDLBEndpointsFetchReport hasEndpointsFetchTaskSuccessCount]
  -[NWAWDLBEndpointsFetchReport setEndpointsFetchTaskFailureCount:]
  -[NWAWDLBEndpointsFetchReport setHasEndpointsFetchTaskFailureCount:]
  -[NWAWDLBEndpointsFetchReport hasEndpointsFetchTaskFailureCount]
  -[NWAWDLBEndpointsFetchReport setEndpointsFetchTaskBadReplyCount:]
  -[NWAWDLBEndpointsFetchReport setHasEndpointsFetchTaskBadReplyCount:]
  -[NWAWDLBEndpointsFetchReport hasEndpointsFetchTaskBadReplyCount]
  -[NWAWDLBEndpointsFetchReport setConnectionCellularFallbackCount:]
  -[NWAWDLBEndpointsFetchReport setHasConnectionCellularFallbackCount:]
  -[NWAWDLBEndpointsFetchReport hasConnectionCellularFallbackCount]
  -[NWAWDLBEndpointsFetchReport endpointsFetchTaskCount]
  -[NWAWDLBEndpointsFetchReport endpointsFetchTaskSuccessCount]
  -[NWAWDLBEndpointsFetchReport endpointsFetchTaskFailureCount]
  -[NWAWDLBEndpointsFetchReport endpointsFetchTaskBadReplyCount]
  -[NWAWDLBEndpointsFetchReport connectionCellularFallbackCount]


NWTCPConnection : NSObject /usr/lib/libSystem.B.dylib <NWPrettyDescription>
 @property  NWEndpoint *endpoint
 @property  NSError *internalError
 @property  NSObject<OS_nw_connection> *internalConnection
 @property  long long state
 @property  BOOL viable
 @property  BOOL hasBetterPath
 @property  <NWTCPConnectionAuthenticationDelegate> *delegate
 @property  NWParameters *parameters
 @property  NSString *privateDescription
 @property  BOOL TFOSucceeded
 @property  BOOL isMultipath
 @property  unsigned long multipathSubflowCount
 @property  unsigned long multipathConnectedSubflowCount
 @property  int multipathPrimarySubflowInterfaceIndex
 @property  NSDictionary *multipathSubflowSwitchCounts
 @property  NSDictionary *TCPInfo
 @property  NSData *metadata
 @property  NWPath *connectedPath
 @property  NWEndpoint *localAddress
 @property  NWEndpoint *remoteAddress
 @property  NSData *txtRecord
 @property  NSError *error

  // class methods
  +[NWTCPConnection automaticallyNotifiesObserversForKey:]
  +[NWTCPConnection stringFromNWTCPConnectionState:]

  // instance methods
  -[NWTCPConnection dealloc]
  -[NWTCPConnection delegate]
  -[NWTCPConnection setDelegate:]
  -[NWTCPConnection .cxx_destruct]
  -[NWTCPConnection error]
  -[NWTCPConnection cancel]
  -[NWTCPConnection endpoint]
  -[NWTCPConnection state]
  -[NWTCPConnection setState:]
  -[NWTCPConnection parameters]
  -[NWTCPConnection setEndpoint:]
  -[NWTCPConnection metadata]
  -[NWTCPConnection initWithEndpoint:parameters:]
  -[NWTCPConnection isMultipath]
  -[NWTCPConnection localAddress]
  -[NWTCPConnection remoteAddress]
  -[NWTCPConnection descriptionWithIndent:showFullContent:]
  -[NWTCPConnection initWithAcceptedInternalConnection:]
  -[NWTCPConnection initWithEndpoint:parameters:delegate:]
  -[NWTCPConnection initWithUpgradeForConnection:]
  -[NWTCPConnection privateDescription]
  -[NWTCPConnection connectedPath]
  -[NWTCPConnection txtRecord]
  -[NWTCPConnection readLength:completionHandler:]
  -[NWTCPConnection readMinimumLength:maximumLength:completionHandler:]
  -[NWTCPConnection write:completionHandler:]
  -[NWTCPConnection writeClose]
  -[NWTCPConnection handlePeerCertificateTrustEvaluationWithMetadata:trust:completionHandler:]
  -[NWTCPConnection handleIdentityRequestWithMetadata:completionHandler:]
  -[NWTCPConnection setupEventHandler]
  -[NWTCPConnection startInternal]
  -[NWTCPConnection fillOutTCPConnectionInfo:]
  -[NWTCPConnection TFOSucceeded]
  -[NWTCPConnection multipathSubflowCount]
  -[NWTCPConnection multipathConnectedSubflowCount]
  -[NWTCPConnection multipathPrimarySubflowInterfaceIndex]
  -[NWTCPConnection multipathSubflowSwitchCounts]
  -[NWTCPConnection TCPInfo]
  -[NWTCPConnection isViable]
  -[NWTCPConnection setViable:]
  -[NWTCPConnection hasBetterPath]
  -[NWTCPConnection setHasBetterPath:]
  -[NWTCPConnection internalError]
  -[NWTCPConnection setInternalError:]
  -[NWTCPConnection internalConnection]
  -[NWTCPConnection setInternalConnection:]


NWAWDLibnetcoreTCPECNInterfaceStatsReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasInterfaceType
 @property  unsigned long interfaceType
 @property  BOOL hasIpProtocol
 @property  unsigned long ipProtocol
 @property  BOOL hasTcpECNIntClientSetup
 @property  unsigned long tcpECNIntClientSetup
 @property  BOOL hasTcpECNIntServerSetup
 @property  unsigned long tcpECNIntServerSetup
 @property  BOOL hasTcpECNIntClientSuccess
 @property  unsigned long tcpECNIntClientSuccess
 @property  BOOL hasTcpECNIntServerSuccess
 @property  unsigned long tcpECNIntServerSuccess
 @property  BOOL hasTcpECNIntNotSupportedPeer
 @property  unsigned long tcpECNIntNotSupportedPeer
 @property  BOOL hasTcpECNIntSynLost
 @property  unsigned long tcpECNIntSynLost
 @property  BOOL hasTcpECNIntSynAckLost
 @property  unsigned long tcpECNIntSynAckLost
 @property  BOOL hasTcpECNIntRecvCE
 @property  unsigned long tcpECNIntRecvCE
 @property  BOOL hasTcpECNIntRecvECE
 @property  unsigned long tcpECNIntRecvECE
 @property  BOOL hasTcpECNIntSentECE
 @property  unsigned long tcpECNIntSentECE
 @property  BOOL hasTcpECNIntConnRecvCE
 @property  unsigned long tcpECNIntConnRecvCE
 @property  BOOL hasTcpECNIntConnRecvECE
 @property  unsigned long tcpECNIntConnRecvECE
 @property  BOOL hasTcpECNIntConnPLNoCE
 @property  unsigned long tcpECNIntConnPLNoCE
 @property  BOOL hasTcpECNIntConnPLCE
 @property  unsigned long tcpECNIntConnPLCE
 @property  BOOL hasTcpECNIntConnNoPLCE
 @property  unsigned long tcpECNIntConnNoPLCE
 @property  BOOL hasTcpECNIntFallbackSynLoss
 @property  unsigned long tcpECNIntFallbackSynLoss
 @property  BOOL hasTcpECNIntFallbackReorder
 @property  unsigned long tcpECNIntFallbackReorder
 @property  BOOL hasTcpECNIntFallbackCE
 @property  unsigned long tcpECNIntFallbackCE
 @property  BOOL hasTcpECNIntOnAvgRTT
 @property  unsigned long tcpECNIntOnAvgRTT
 @property  BOOL hasTcpECNIntOnRTTVar
 @property  unsigned long tcpECNIntOnRTTVar
 @property  BOOL hasTcpECNIntOnOOBPer
 @property  unsigned long tcpECNIntOnOOBPer
 @property  BOOL hasTcpECNIntOnSACKE
 @property  unsigned long tcpECNIntOnSACKE
 @property  BOOL hasTcpECNIntOnReorderPer
 @property  unsigned long tcpECNIntOnReorderPer
 @property  BOOL hasTcpECNIntRxmtPer
 @property  unsigned long tcpECNIntRxmtPer
 @property  BOOL hasTcpECNIntOffAvgRTT
 @property  unsigned long tcpECNIntOffAvgRTT
 @property  BOOL hasTcpECNIntOffRTTVar
 @property  unsigned long tcpECNIntOffRTTVar
 @property  BOOL hasTcpECNIntOffOOBPer
 @property  unsigned long tcpECNIntOffOOBPer
 @property  BOOL hasTcpECNIntOffSACKE
 @property  unsigned long tcpECNIntOffSACKE
 @property  BOOL hasTcpECNIntOffReorderPer
 @property  unsigned long tcpECNIntOffReorderPer
 @property  BOOL hasTcpECNIntOffRxmtPer
 @property  unsigned long tcpECNIntOffRxmtPer
 @property  BOOL hasTcpECNIntOnTotalTxPkts
 @property  unsigned long tcpECNIntOnTotalTxPkts
 @property  BOOL hasTcpECNIntOnTotalRxmtPkts
 @property  unsigned long tcpECNIntOnTotalRxmtPkts
 @property  BOOL hasTcpECNIntOnTotalRxPkts
 @property  unsigned long tcpECNIntOnTotalRxPkts
 @property  BOOL hasTcpECNIntOnTotalOOPkts
 @property  unsigned long tcpECNIntOnTotalOOPkts
 @property  BOOL hasTcpECNIntOnDropRst
 @property  unsigned long tcpECNIntOnDropRst
 @property  BOOL hasTcpECNIntOnDropRxmt
 @property  unsigned long tcpECNIntOnDropRxmt
 @property  BOOL hasTcpECNIntOffTotalTxPkts
 @property  unsigned long tcpECNIntOffTotalTxPkts
 @property  BOOL hasTcpECNIntOffTotalRxmtPkts
 @property  unsigned long tcpECNIntOffTotalRxmtPkts
 @property  BOOL hasTcpECNIntOffTotalRxPkts
 @property  unsigned long tcpECNIntOffTotalRxPkts
 @property  BOOL hasTcpECNIntOffTotalOOPkts
 @property  unsigned long tcpECNIntOffTotalOOPkts
 @property  BOOL hasTcpECNIntOffDropRst
 @property  unsigned long tcpECNIntOffDropRst
 @property  BOOL hasTcpECNIntOffDropRxmt
 @property  unsigned long tcpECNIntOffDropRxmt
 @property  BOOL hasTcpECNIntTotalConnections
 @property  unsigned long tcpECNIntTotalConnections
 @property  BOOL hasTcpUnsentDataAtSleepCnt
 @property  unsigned long tcpUnsentDataAtSleepCnt
 @property  BOOL hasTcpECNIntFallbackDropRst
 @property  unsigned long tcpECNIntFallbackDropRst
 @property  BOOL hasTcpECNIntFallbackDropRxmt
 @property  unsigned long tcpECNIntFallbackDropRxmt
 @property  BOOL hasTcpECNIntFallbackSYNRst
 @property  unsigned long tcpECNIntFallbackSYNRst

  // instance methods
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport isEqual:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport copyWithZone:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport dictionaryRepresentation]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport writeTo:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport mergeFrom:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport readFrom:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport copyTo:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setInterfaceType:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasInterfaceType:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasInterfaceType]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setIpProtocol:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasIpProtocol:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasIpProtocol]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntClientSetup:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntClientSetup:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntClientSetup]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntServerSetup:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntServerSetup:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntServerSetup]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntClientSuccess:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntClientSuccess:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntClientSuccess]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntServerSuccess:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntServerSuccess:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntServerSuccess]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntNotSupportedPeer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntNotSupportedPeer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntNotSupportedPeer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntSynLost:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntSynLost:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntSynLost]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntSynAckLost:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntSynAckLost:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntSynAckLost]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntRecvCE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntRecvCE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntRecvCE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntRecvECE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntRecvECE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntRecvECE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntSentECE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntSentECE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntSentECE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntConnRecvCE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntConnRecvCE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntConnRecvCE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntConnRecvECE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntConnRecvECE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntConnRecvECE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntConnPLNoCE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntConnPLNoCE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntConnPLNoCE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntConnPLCE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntConnPLCE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntConnPLCE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntConnNoPLCE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntConnNoPLCE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntConnNoPLCE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntFallbackSynLoss:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntFallbackSynLoss:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntFallbackSynLoss]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntFallbackReorder:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntFallbackReorder:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntFallbackReorder]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntFallbackCE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntFallbackCE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntFallbackCE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOnAvgRTT:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOnAvgRTT:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOnAvgRTT]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOnRTTVar:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOnRTTVar:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOnRTTVar]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOnOOBPer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOnOOBPer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOnOOBPer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOnSACKE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOnSACKE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOnSACKE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOnReorderPer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOnReorderPer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOnReorderPer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntRxmtPer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntRxmtPer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntRxmtPer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOffAvgRTT:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOffAvgRTT:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOffAvgRTT]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOffRTTVar:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOffRTTVar:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOffRTTVar]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOffOOBPer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOffOOBPer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOffOOBPer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOffSACKE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOffSACKE:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOffSACKE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOffReorderPer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOffReorderPer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOffReorderPer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOffRxmtPer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOffRxmtPer:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOffRxmtPer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOnTotalTxPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOnTotalTxPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOnTotalTxPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOnTotalRxmtPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOnTotalRxmtPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOnTotalRxmtPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOnTotalRxPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOnTotalRxPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOnTotalRxPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOnTotalOOPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOnTotalOOPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOnTotalOOPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOnDropRst:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOnDropRst:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOnDropRst]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOnDropRxmt:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOnDropRxmt:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOnDropRxmt]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOffTotalTxPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOffTotalTxPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOffTotalTxPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOffTotalRxmtPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOffTotalRxmtPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOffTotalRxmtPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOffTotalRxPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOffTotalRxPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOffTotalRxPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOffTotalOOPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOffTotalOOPkts:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOffTotalOOPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOffDropRst:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOffDropRst:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOffDropRst]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntOffDropRxmt:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntOffDropRxmt:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntOffDropRxmt]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntTotalConnections:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntTotalConnections:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntTotalConnections]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpUnsentDataAtSleepCnt:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpUnsentDataAtSleepCnt:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpUnsentDataAtSleepCnt]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntFallbackDropRst:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntFallbackDropRst:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntFallbackDropRst]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntFallbackDropRxmt:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntFallbackDropRxmt:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntFallbackDropRxmt]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setTcpECNIntFallbackSYNRst:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport setHasTcpECNIntFallbackSYNRst:]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport hasTcpECNIntFallbackSYNRst]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport interfaceType]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport ipProtocol]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntClientSetup]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntServerSetup]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntClientSuccess]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntServerSuccess]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntNotSupportedPeer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntSynLost]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntSynAckLost]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntRecvCE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntRecvECE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntSentECE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntConnRecvCE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntConnRecvECE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntConnPLNoCE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntConnPLCE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntConnNoPLCE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntFallbackSynLoss]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntFallbackReorder]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntFallbackCE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOnAvgRTT]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOnRTTVar]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOnOOBPer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOnSACKE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOnReorderPer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntRxmtPer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOffAvgRTT]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOffRTTVar]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOffOOBPer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOffSACKE]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOffReorderPer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOffRxmtPer]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOnTotalTxPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOnTotalRxmtPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOnTotalRxPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOnTotalOOPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOnDropRst]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOnDropRxmt]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOffTotalTxPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOffTotalRxmtPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOffTotalRxPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOffTotalOOPkts]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOffDropRst]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntOffDropRxmt]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntTotalConnections]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpUnsentDataAtSleepCnt]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntFallbackDropRst]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntFallbackDropRxmt]
  -[NWAWDLibnetcoreTCPECNInterfaceStatsReport tcpECNIntFallbackSYNRst]


NWAWDNWAPIUsage : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasIfFltrAttach
 @property  long long ifFltrAttach
 @property  BOOL hasIfFltrAttachOs
 @property  long long ifFltrAttachOs
 @property  BOOL hasIpFltrAdd
 @property  long long ipFltrAdd
 @property  BOOL hasIpFltrAddOs
 @property  long long ipFltrAddOs
 @property  BOOL hasSockFltrRegister
 @property  long long sockFltrRegister
 @property  BOOL hasSockFltrRegisterOs
 @property  long long sockFltrRegisterOs
 @property  BOOL hasSockAlloc
 @property  long long sockAlloc
 @property  BOOL hasSockAllocKernel
 @property  long long sockAllocKernel
 @property  BOOL hasSockAllocKernelOs
 @property  long long sockAllocKernelOs
 @property  BOOL hasSockNecpClientuuidCount
 @property  long long sockNecpClientuuidCount
 @property  BOOL hasSockDomainLocal
 @property  long long sockDomainLocal
 @property  BOOL hasSockDomainRoute
 @property  long long sockDomainRoute
 @property  BOOL hasSockDomainInet
 @property  long long sockDomainInet
 @property  BOOL hasSockDomainInet6
 @property  long long sockDomainInet6
 @property  BOOL hasSockDomainSystem
 @property  long long sockDomainSystem
 @property  BOOL hasSockDomainMultipath
 @property  long long sockDomainMultipath
 @property  BOOL hasSockDomainKey
 @property  long long sockDomainKey
 @property  BOOL hasSockDomainNdrv
 @property  long long sockDomainNdrv
 @property  BOOL hasSockDomainOther
 @property  long long sockDomainOther
 @property  BOOL hasSockNetInetStream
 @property  long long sockNetInetStream
 @property  BOOL hasSockNetInetDgram
 @property  long long sockNetInetDgram
 @property  BOOL hasSockNetInetDgramConnected
 @property  long long sockNetInetDgramConnected
 @property  BOOL hasSockNetInetDgramDns
 @property  long long sockNetInetDgramDns
 @property  BOOL hasSockNetInetDgramNoData
 @property  long long sockNetInetDgramNoData
 @property  BOOL hasSockNetInet6Stream
 @property  long long sockNetInet6Stream
 @property  BOOL hasSockNetInet6Dgram
 @property  long long sockNetInet6Dgram
 @property  BOOL hasSockNetInet6DgramConnected
 @property  long long sockNetInet6DgramConnected
 @property  BOOL hasSockNetInet6DgramDns
 @property  long long sockNetInet6DgramDns
 @property  BOOL hasSockNetInet6DgramNoData
 @property  long long sockNetInet6DgramNoData
 @property  BOOL hasSockInetMcastJoin
 @property  long long sockInetMcastJoin
 @property  BOOL hasSockInetMcastJoinOs
 @property  long long sockInetMcastJoinOs
 @property  BOOL hasNexusFlowInetStream
 @property  long long nexusFlowInetStream
 @property  BOOL hasNexusFlowInetDatagram
 @property  long long nexusFlowInetDatagram
 @property  BOOL hasNexusFlowInet6Stream
 @property  long long nexusFlowInet6Stream
 @property  BOOL hasNexusFlowInet6Datagram
 @property  long long nexusFlowInet6Datagram
 @property  BOOL hasIfnetAlloc
 @property  long long ifnetAlloc
 @property  BOOL hasIfnetAllocOs
 @property  long long ifnetAllocOs
 @property  BOOL hasPfAddrule
 @property  long long pfAddrule
 @property  BOOL hasPfAddruleOs
 @property  long long pfAddruleOs
 @property  BOOL hasVmnetStart
 @property  long long vmnetStart
 @property  BOOL hasIfNetagentEnabled
 @property  BOOL ifNetagentEnabled
 @property  BOOL hasTimeSinceLastReport
 @property  unsigned long timeSinceLastReport

  // instance methods
  -[NWAWDNWAPIUsage isEqual:]
  -[NWAWDNWAPIUsage copyWithZone:]
  -[NWAWDNWAPIUsage dictionaryRepresentation]
  -[NWAWDNWAPIUsage timestamp]
  -[NWAWDNWAPIUsage hasTimestamp]
  -[NWAWDNWAPIUsage setTimestamp:]
  -[NWAWDNWAPIUsage writeTo:]
  -[NWAWDNWAPIUsage mergeFrom:]
  -[NWAWDNWAPIUsage readFrom:]
  -[NWAWDNWAPIUsage copyTo:]
  -[NWAWDNWAPIUsage setHasTimestamp:]
  -[NWAWDNWAPIUsage setIfFltrAttach:]
  -[NWAWDNWAPIUsage setHasIfFltrAttach:]
  -[NWAWDNWAPIUsage hasIfFltrAttach]
  -[NWAWDNWAPIUsage setIfFltrAttachOs:]
  -[NWAWDNWAPIUsage setHasIfFltrAttachOs:]
  -[NWAWDNWAPIUsage hasIfFltrAttachOs]
  -[NWAWDNWAPIUsage setIpFltrAdd:]
  -[NWAWDNWAPIUsage setHasIpFltrAdd:]
  -[NWAWDNWAPIUsage hasIpFltrAdd]
  -[NWAWDNWAPIUsage setIpFltrAddOs:]
  -[NWAWDNWAPIUsage setHasIpFltrAddOs:]
  -[NWAWDNWAPIUsage hasIpFltrAddOs]
  -[NWAWDNWAPIUsage setSockFltrRegister:]
  -[NWAWDNWAPIUsage setHasSockFltrRegister:]
  -[NWAWDNWAPIUsage hasSockFltrRegister]
  -[NWAWDNWAPIUsage setSockFltrRegisterOs:]
  -[NWAWDNWAPIUsage setHasSockFltrRegisterOs:]
  -[NWAWDNWAPIUsage hasSockFltrRegisterOs]
  -[NWAWDNWAPIUsage setSockAlloc:]
  -[NWAWDNWAPIUsage setHasSockAlloc:]
  -[NWAWDNWAPIUsage hasSockAlloc]
  -[NWAWDNWAPIUsage setSockAllocKernel:]
  -[NWAWDNWAPIUsage setHasSockAllocKernel:]
  -[NWAWDNWAPIUsage hasSockAllocKernel]
  -[NWAWDNWAPIUsage setSockAllocKernelOs:]
  -[NWAWDNWAPIUsage setHasSockAllocKernelOs:]
  -[NWAWDNWAPIUsage hasSockAllocKernelOs]
  -[NWAWDNWAPIUsage setSockNecpClientuuidCount:]
  -[NWAWDNWAPIUsage setHasSockNecpClientuuidCount:]
  -[NWAWDNWAPIUsage hasSockNecpClientuuidCount]
  -[NWAWDNWAPIUsage setSockDomainLocal:]
  -[NWAWDNWAPIUsage setHasSockDomainLocal:]
  -[NWAWDNWAPIUsage hasSockDomainLocal]
  -[NWAWDNWAPIUsage setSockDomainRoute:]
  -[NWAWDNWAPIUsage setHasSockDomainRoute:]
  -[NWAWDNWAPIUsage hasSockDomainRoute]
  -[NWAWDNWAPIUsage setSockDomainInet:]
  -[NWAWDNWAPIUsage setHasSockDomainInet:]
  -[NWAWDNWAPIUsage hasSockDomainInet]
  -[NWAWDNWAPIUsage setSockDomainInet6:]
  -[NWAWDNWAPIUsage setHasSockDomainInet6:]
  -[NWAWDNWAPIUsage hasSockDomainInet6]
  -[NWAWDNWAPIUsage setSockDomainSystem:]
  -[NWAWDNWAPIUsage setHasSockDomainSystem:]
  -[NWAWDNWAPIUsage hasSockDomainSystem]
  -[NWAWDNWAPIUsage setSockDomainMultipath:]
  -[NWAWDNWAPIUsage setHasSockDomainMultipath:]
  -[NWAWDNWAPIUsage hasSockDomainMultipath]
  -[NWAWDNWAPIUsage setSockDomainKey:]
  -[NWAWDNWAPIUsage setHasSockDomainKey:]
  -[NWAWDNWAPIUsage hasSockDomainKey]
  -[NWAWDNWAPIUsage setSockDomainNdrv:]
  -[NWAWDNWAPIUsage setHasSockDomainNdrv:]
  -[NWAWDNWAPIUsage hasSockDomainNdrv]
  -[NWAWDNWAPIUsage setSockDomainOther:]
  -[NWAWDNWAPIUsage setHasSockDomainOther:]
  -[NWAWDNWAPIUsage hasSockDomainOther]
  -[NWAWDNWAPIUsage setSockNetInetStream:]
  -[NWAWDNWAPIUsage setHasSockNetInetStream:]
  -[NWAWDNWAPIUsage hasSockNetInetStream]
  -[NWAWDNWAPIUsage setSockNetInetDgram:]
  -[NWAWDNWAPIUsage setHasSockNetInetDgram:]
  -[NWAWDNWAPIUsage hasSockNetInetDgram]
  -[NWAWDNWAPIUsage setSockNetInetDgramConnected:]
  -[NWAWDNWAPIUsage setHasSockNetInetDgramConnected:]
  -[NWAWDNWAPIUsage hasSockNetInetDgramConnected]
  -[NWAWDNWAPIUsage setSockNetInetDgramDns:]
  -[NWAWDNWAPIUsage setHasSockNetInetDgramDns:]
  -[NWAWDNWAPIUsage hasSockNetInetDgramDns]
  -[NWAWDNWAPIUsage setSockNetInetDgramNoData:]
  -[NWAWDNWAPIUsage setHasSockNetInetDgramNoData:]
  -[NWAWDNWAPIUsage hasSockNetInetDgramNoData]
  -[NWAWDNWAPIUsage setSockNetInet6Stream:]
  -[NWAWDNWAPIUsage setHasSockNetInet6Stream:]
  -[NWAWDNWAPIUsage hasSockNetInet6Stream]
  -[NWAWDNWAPIUsage setSockNetInet6Dgram:]
  -[NWAWDNWAPIUsage setHasSockNetInet6Dgram:]
  -[NWAWDNWAPIUsage hasSockNetInet6Dgram]
  -[NWAWDNWAPIUsage setSockNetInet6DgramConnected:]
  -[NWAWDNWAPIUsage setHasSockNetInet6DgramConnected:]
  -[NWAWDNWAPIUsage hasSockNetInet6DgramConnected]
  -[NWAWDNWAPIUsage setSockNetInet6DgramDns:]
  -[NWAWDNWAPIUsage setHasSockNetInet6DgramDns:]
  -[NWAWDNWAPIUsage hasSockNetInet6DgramDns]
  -[NWAWDNWAPIUsage setSockNetInet6DgramNoData:]
  -[NWAWDNWAPIUsage setHasSockNetInet6DgramNoData:]
  -[NWAWDNWAPIUsage hasSockNetInet6DgramNoData]
  -[NWAWDNWAPIUsage setSockInetMcastJoin:]
  -[NWAWDNWAPIUsage setHasSockInetMcastJoin:]
  -[NWAWDNWAPIUsage hasSockInetMcastJoin]
  -[NWAWDNWAPIUsage setSockInetMcastJoinOs:]
  -[NWAWDNWAPIUsage setHasSockInetMcastJoinOs:]
  -[NWAWDNWAPIUsage hasSockInetMcastJoinOs]
  -[NWAWDNWAPIUsage setNexusFlowInetStream:]
  -[NWAWDNWAPIUsage setHasNexusFlowInetStream:]
  -[NWAWDNWAPIUsage hasNexusFlowInetStream]
  -[NWAWDNWAPIUsage setNexusFlowInetDatagram:]
  -[NWAWDNWAPIUsage setHasNexusFlowInetDatagram:]
  -[NWAWDNWAPIUsage hasNexusFlowInetDatagram]
  -[NWAWDNWAPIUsage setNexusFlowInet6Stream:]
  -[NWAWDNWAPIUsage setHasNexusFlowInet6Stream:]
  -[NWAWDNWAPIUsage hasNexusFlowInet6Stream]
  -[NWAWDNWAPIUsage setNexusFlowInet6Datagram:]
  -[NWAWDNWAPIUsage setHasNexusFlowInet6Datagram:]
  -[NWAWDNWAPIUsage hasNexusFlowInet6Datagram]
  -[NWAWDNWAPIUsage setIfnetAlloc:]
  -[NWAWDNWAPIUsage setHasIfnetAlloc:]
  -[NWAWDNWAPIUsage hasIfnetAlloc]
  -[NWAWDNWAPIUsage setIfnetAllocOs:]
  -[NWAWDNWAPIUsage setHasIfnetAllocOs:]
  -[NWAWDNWAPIUsage hasIfnetAllocOs]
  -[NWAWDNWAPIUsage setPfAddrule:]
  -[NWAWDNWAPIUsage setHasPfAddrule:]
  -[NWAWDNWAPIUsage hasPfAddrule]
  -[NWAWDNWAPIUsage setPfAddruleOs:]
  -[NWAWDNWAPIUsage setHasPfAddruleOs:]
  -[NWAWDNWAPIUsage hasPfAddruleOs]
  -[NWAWDNWAPIUsage setVmnetStart:]
  -[NWAWDNWAPIUsage setHasVmnetStart:]
  -[NWAWDNWAPIUsage hasVmnetStart]
  -[NWAWDNWAPIUsage setIfNetagentEnabled:]
  -[NWAWDNWAPIUsage setHasIfNetagentEnabled:]
  -[NWAWDNWAPIUsage hasIfNetagentEnabled]
  -[NWAWDNWAPIUsage setTimeSinceLastReport:]
  -[NWAWDNWAPIUsage setHasTimeSinceLastReport:]
  -[NWAWDNWAPIUsage hasTimeSinceLastReport]
  -[NWAWDNWAPIUsage ifFltrAttach]
  -[NWAWDNWAPIUsage ifFltrAttachOs]
  -[NWAWDNWAPIUsage ipFltrAdd]
  -[NWAWDNWAPIUsage ipFltrAddOs]
  -[NWAWDNWAPIUsage sockFltrRegister]
  -[NWAWDNWAPIUsage sockFltrRegisterOs]
  -[NWAWDNWAPIUsage sockAlloc]
  -[NWAWDNWAPIUsage sockAllocKernel]
  -[NWAWDNWAPIUsage sockAllocKernelOs]
  -[NWAWDNWAPIUsage sockNecpClientuuidCount]
  -[NWAWDNWAPIUsage sockDomainLocal]
  -[NWAWDNWAPIUsage sockDomainRoute]
  -[NWAWDNWAPIUsage sockDomainInet]
  -[NWAWDNWAPIUsage sockDomainInet6]
  -[NWAWDNWAPIUsage sockDomainSystem]
  -[NWAWDNWAPIUsage sockDomainMultipath]
  -[NWAWDNWAPIUsage sockDomainKey]
  -[NWAWDNWAPIUsage sockDomainNdrv]
  -[NWAWDNWAPIUsage sockDomainOther]
  -[NWAWDNWAPIUsage sockNetInetStream]
  -[NWAWDNWAPIUsage sockNetInetDgram]
  -[NWAWDNWAPIUsage sockNetInetDgramConnected]
  -[NWAWDNWAPIUsage sockNetInetDgramDns]
  -[NWAWDNWAPIUsage sockNetInetDgramNoData]
  -[NWAWDNWAPIUsage sockNetInet6Stream]
  -[NWAWDNWAPIUsage sockNetInet6Dgram]
  -[NWAWDNWAPIUsage sockNetInet6DgramConnected]
  -[NWAWDNWAPIUsage sockNetInet6DgramDns]
  -[NWAWDNWAPIUsage sockNetInet6DgramNoData]
  -[NWAWDNWAPIUsage sockInetMcastJoin]
  -[NWAWDNWAPIUsage sockInetMcastJoinOs]
  -[NWAWDNWAPIUsage nexusFlowInetStream]
  -[NWAWDNWAPIUsage nexusFlowInetDatagram]
  -[NWAWDNWAPIUsage nexusFlowInet6Stream]
  -[NWAWDNWAPIUsage nexusFlowInet6Datagram]
  -[NWAWDNWAPIUsage ifnetAlloc]
  -[NWAWDNWAPIUsage ifnetAllocOs]
  -[NWAWDNWAPIUsage pfAddrule]
  -[NWAWDNWAPIUsage pfAddruleOs]
  -[NWAWDNWAPIUsage vmnetStart]
  -[NWAWDNWAPIUsage ifNetagentEnabled]
  -[NWAWDNWAPIUsage timeSinceLastReport]


NWAddressEndpoint : NWHostEndpoint
 @property  NSString *addressString
 @property  NSString *addressStringNoPort
 @property  NSData *addressData
 @property  r^{sockaddr=CC[14c]} address
 @property  unsigned long addressFamily

  // class methods
  +[NWAddressEndpoint endpointType]
  +[NWAddressEndpoint endpointWithHostname:port:]
  +[NWAddressEndpoint endpointWithAddress:]

  // instance methods
  -[NWAddressEndpoint address]
  -[NWAddressEndpoint descriptionWithIndent:showFullContent:]
  -[NWAddressEndpoint ethernetAddress]
  -[NWAddressEndpoint addressData]
  -[NWAddressEndpoint addressString]
  -[NWAddressEndpoint addressStringNoPort]
  -[NWAddressEndpoint addressFamily]


NWPBEndpoint : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasAddress
 @property  NWPBAddressEndpoint *address
 @property  BOOL hasHost
 @property  NWPBHostEndpoint *host
 @property  BOOL hasService
 @property  NWPBServiceEndpoint *service
 @property  BOOL hasInterface
 @property  NWPBInterface *interface
 @property  BOOL hasTxtRecord
 @property  NSData *txtRecord

  // instance methods
  -[NWPBEndpoint isEqual:]
  -[NWPBEndpoint copyWithZone:]
  -[NWPBEndpoint host]
  -[NWPBEndpoint .cxx_destruct]
  -[NWPBEndpoint dictionaryRepresentation]
  -[NWPBEndpoint address]
  -[NWPBEndpoint setHost:]
  -[NWPBEndpoint interface]
  -[NWPBEndpoint setInterface:]
  -[NWPBEndpoint writeTo:]
  -[NWPBEndpoint mergeFrom:]
  -[NWPBEndpoint readFrom:]
  -[NWPBEndpoint copyTo:]
  -[NWPBEndpoint service]
  -[NWPBEndpoint setAddress:]
  -[NWPBEndpoint setService:]
  -[NWPBEndpoint txtRecord]
  -[NWPBEndpoint hasAddress]
  -[NWPBEndpoint hasHost]
  -[NWPBEndpoint hasService]
  -[NWPBEndpoint hasInterface]
  -[NWPBEndpoint hasTxtRecord]
  -[NWPBEndpoint setTxtRecord:]


NWAWDLibnetcoreTCPKernelStats : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasNumTfoCookieReq
 @property  unsigned long numTfoCookieReq
 @property  BOOL hasNumTfoCookieRcv
 @property  unsigned long numTfoCookieRcv
 @property  BOOL hasNumTfoFallback
 @property  unsigned long numTfoFallback
 @property  BOOL hasNumTfoSynDataSent
 @property  unsigned long numTfoSynDataSent
 @property  BOOL hasNumTfoSynDataAcked
 @property  unsigned long numTfoSynDataAcked
 @property  BOOL hasNumTfoSynDataRcv
 @property  unsigned long numTfoSynDataRcv
 @property  BOOL hasNumTfoCookieReqRcv
 @property  unsigned long numTfoCookieReqRcv
 @property  BOOL hasNumTfoCookieSent
 @property  unsigned long numTfoCookieSent
 @property  BOOL hasNumTfoCookieInvalid
 @property  unsigned long numTfoCookieInvalid
 @property  BOOL hasNumTfoBlackholed
 @property  unsigned long numTfoBlackholed

  // instance methods
  -[NWAWDLibnetcoreTCPKernelStats isEqual:]
  -[NWAWDLibnetcoreTCPKernelStats copyWithZone:]
  -[NWAWDLibnetcoreTCPKernelStats dictionaryRepresentation]
  -[NWAWDLibnetcoreTCPKernelStats timestamp]
  -[NWAWDLibnetcoreTCPKernelStats hasTimestamp]
  -[NWAWDLibnetcoreTCPKernelStats setTimestamp:]
  -[NWAWDLibnetcoreTCPKernelStats writeTo:]
  -[NWAWDLibnetcoreTCPKernelStats mergeFrom:]
  -[NWAWDLibnetcoreTCPKernelStats readFrom:]
  -[NWAWDLibnetcoreTCPKernelStats copyTo:]
  -[NWAWDLibnetcoreTCPKernelStats setHasTimestamp:]
  -[NWAWDLibnetcoreTCPKernelStats setNumTfoCookieReq:]
  -[NWAWDLibnetcoreTCPKernelStats setHasNumTfoCookieReq:]
  -[NWAWDLibnetcoreTCPKernelStats hasNumTfoCookieReq]
  -[NWAWDLibnetcoreTCPKernelStats setNumTfoCookieRcv:]
  -[NWAWDLibnetcoreTCPKernelStats setHasNumTfoCookieRcv:]
  -[NWAWDLibnetcoreTCPKernelStats hasNumTfoCookieRcv]
  -[NWAWDLibnetcoreTCPKernelStats setNumTfoFallback:]
  -[NWAWDLibnetcoreTCPKernelStats setHasNumTfoFallback:]
  -[NWAWDLibnetcoreTCPKernelStats hasNumTfoFallback]
  -[NWAWDLibnetcoreTCPKernelStats setNumTfoSynDataSent:]
  -[NWAWDLibnetcoreTCPKernelStats setHasNumTfoSynDataSent:]
  -[NWAWDLibnetcoreTCPKernelStats hasNumTfoSynDataSent]
  -[NWAWDLibnetcoreTCPKernelStats setNumTfoSynDataAcked:]
  -[NWAWDLibnetcoreTCPKernelStats setHasNumTfoSynDataAcked:]
  -[NWAWDLibnetcoreTCPKernelStats hasNumTfoSynDataAcked]
  -[NWAWDLibnetcoreTCPKernelStats setNumTfoSynDataRcv:]
  -[NWAWDLibnetcoreTCPKernelStats setHasNumTfoSynDataRcv:]
  -[NWAWDLibnetcoreTCPKernelStats hasNumTfoSynDataRcv]
  -[NWAWDLibnetcoreTCPKernelStats setNumTfoCookieReqRcv:]
  -[NWAWDLibnetcoreTCPKernelStats setHasNumTfoCookieReqRcv:]
  -[NWAWDLibnetcoreTCPKernelStats hasNumTfoCookieReqRcv]
  -[NWAWDLibnetcoreTCPKernelStats setNumTfoCookieSent:]
  -[NWAWDLibnetcoreTCPKernelStats setHasNumTfoCookieSent:]
  -[NWAWDLibnetcoreTCPKernelStats hasNumTfoCookieSent]
  -[NWAWDLibnetcoreTCPKernelStats setNumTfoCookieInvalid:]
  -[NWAWDLibnetcoreTCPKernelStats setHasNumTfoCookieInvalid:]
  -[NWAWDLibnetcoreTCPKernelStats hasNumTfoCookieInvalid]
  -[NWAWDLibnetcoreTCPKernelStats setNumTfoBlackholed:]
  -[NWAWDLibnetcoreTCPKernelStats setHasNumTfoBlackholed:]
  -[NWAWDLibnetcoreTCPKernelStats hasNumTfoBlackholed]
  -[NWAWDLibnetcoreTCPKernelStats numTfoCookieReq]
  -[NWAWDLibnetcoreTCPKernelStats numTfoCookieRcv]
  -[NWAWDLibnetcoreTCPKernelStats numTfoFallback]
  -[NWAWDLibnetcoreTCPKernelStats numTfoSynDataSent]
  -[NWAWDLibnetcoreTCPKernelStats numTfoSynDataAcked]
  -[NWAWDLibnetcoreTCPKernelStats numTfoSynDataRcv]
  -[NWAWDLibnetcoreTCPKernelStats numTfoCookieReqRcv]
  -[NWAWDLibnetcoreTCPKernelStats numTfoCookieSent]
  -[NWAWDLibnetcoreTCPKernelStats numTfoCookieInvalid]
  -[NWAWDLibnetcoreTCPKernelStats numTfoBlackholed]


NWAWDNWConnectionReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasTriggeredPath
 @property  BOOL triggeredPath
 @property  BOOL hasSystemProxyConfigured
 @property  BOOL systemProxyConfigured
 @property  BOOL hasCustomProxyConfigured
 @property  BOOL customProxyConfigured
 @property  BOOL hasUsedProxyType
 @property  int usedProxyType
 @property  BOOL hasFallbackEligible
 @property  BOOL fallbackEligible
 @property  BOOL hasWeakFallback
 @property  BOOL weakFallback
 @property  BOOL hasUsedFallback
 @property  BOOL usedFallback
 @property  BOOL hasResolutionRequired
 @property  BOOL resolutionRequired
 @property  BOOL hasTlsConfigured
 @property  BOOL tlsConfigured
 @property  BOOL hasTfoConfigured
 @property  BOOL tfoConfigured
 @property  BOOL hasMultipathConfigured
 @property  BOOL multipathConfigured
 @property  BOOL hasTrafficClass
 @property  unsigned long trafficClass
 @property  BOOL hasFailureReason
 @property  int failureReason
 @property  BOOL hasPathTriggerMilliseconds
 @property  unsigned long pathTriggerMilliseconds
 @property  BOOL hasResolutionMilliseconds
 @property  unsigned long resolutionMilliseconds
 @property  BOOL hasProxyMilliseconds
 @property  unsigned long proxyMilliseconds
 @property  BOOL hasFlowConnectMilliseconds
 @property  unsigned long flowConnectMilliseconds
 @property  BOOL hasTlsMilliseconds
 @property  unsigned long tlsMilliseconds
 @property  BOOL hasFlowDurationMilliseconds
 @property  unsigned long flowDurationMilliseconds
 @property  BOOL hasIpv4AddressCount
 @property  unsigned long ipv4AddressCount
 @property  BOOL hasIpv6AddressCount
 @property  unsigned long ipv6AddressCount
 @property  BOOL hasSynthesizedIPv6Address
 @property  BOOL synthesizedIPv6Address
 @property  BOOL hasFirstAddressFamily
 @property  int firstAddressFamily
 @property  BOOL hasConnectedAddressFamily
 @property  int connectedAddressFamily
 @property  BOOL hasConnectedAddressIndex
 @property  unsigned long connectedAddressIndex
 @property  BOOL hasConnectedInterfaceType
 @property  int connectedInterfaceType
 @property  BOOL hasConnectionReuseCount
 @property  unsigned long connectionReuseCount
 @property  BOOL hasDataStallCount
 @property  unsigned long dataStallCount
 @property  BOOL hasConnectionMode
 @property  int connectionMode
 @property  BOOL hasAppleHost
 @property  int appleHost
 @property  BOOL hasAppleApp
 @property  int appleApp
 @property  BOOL hasTlsVersion
 @property  int tlsVersion
 @property  BOOL hasStackLevel
 @property  int stackLevel
 @property  BOOL hasIpv4Available
 @property  BOOL ipv4Available
 @property  BOOL hasIpv6Available
 @property  BOOL ipv6Available
 @property  BOOL hasIpv4DNSServerCount
 @property  unsigned long ipv4DNSServerCount
 @property  BOOL hasIpv6DNSServerCount
 @property  unsigned long ipv6DNSServerCount
 @property  BOOL hasTlsVersionTimeout
 @property  BOOL tlsVersionTimeout
 @property  BOOL hasSynthesizedExtraIPv6Address
 @property  BOOL synthesizedExtraIPv6Address
 @property  BOOL hasBytesIn
 @property  unsigned long bytesIn
 @property  BOOL hasBytesOut
 @property  unsigned long bytesOut
 @property  BOOL hasBytesDuplicate
 @property  unsigned long bytesDuplicate
 @property  BOOL hasBytesOutOfOrder
 @property  unsigned long bytesOutOfOrder
 @property  BOOL hasBytesRetransmitted
 @property  unsigned long bytesRetransmitted
 @property  BOOL hasPacketsIn
 @property  unsigned long packetsIn
 @property  BOOL hasPacketsOut
 @property  unsigned long packetsOut
 @property  BOOL hasCurrentRTT
 @property  unsigned long currentRTT
 @property  BOOL hasSmoothedRTT
 @property  unsigned long smoothedRTT
 @property  BOOL hasBestRTT
 @property  unsigned long bestRTT
 @property  BOOL hasRTTvariance
 @property  unsigned long rTTvariance
 @property  BOOL hasSynRetransmissionCount
 @property  unsigned long synRetransmissionCount
 @property  BOOL hasTfoUsed
 @property  BOOL tfoUsed
 @property  BOOL hasMultipathServiceType
 @property  unsigned long multipathServiceType
 @property  BOOL hasFirstParty
 @property  BOOL firstParty
 @property  BOOL hasMultipathBytesInCell
 @property  unsigned long multipathBytesInCell
 @property  BOOL hasMultipathBytesOutCell
 @property  unsigned long multipathBytesOutCell
 @property  BOOL hasMultipathBytesInWiFi
 @property  unsigned long multipathBytesInWiFi
 @property  BOOL hasMultipathBytesOutWiFi
 @property  unsigned long multipathBytesOutWiFi
 @property  BOOL hasMultipathBytesInInitial
 @property  unsigned long multipathBytesInInitial
 @property  BOOL hasMultipathBytesOutInitial
 @property  unsigned long multipathBytesOutInitial
 @property  BOOL hasSecondsSinceInterfaceChange
 @property  unsigned long secondsSinceInterfaceChange
 @property  BOOL hasIsDaemon
 @property  BOOL isDaemon
 @property  BOOL hasProcessName
 @property  NSString *processName
 @property  NSMutableArray *activities
 @property  BOOL hasConnectionUUID
 @property  NSString *connectionUUID
 @property  BOOL hasTlsHandshakeTimedOut
 @property  BOOL tlsHandshakeTimedOut
 @property  BOOL hasIsPathExpensive
 @property  BOOL isPathExpensive
 @property  BOOL hasIsPathConstrained
 @property  BOOL isPathConstrained
 @property  BOOL hasProhibitsExpensive
 @property  BOOL prohibitsExpensive
 @property  BOOL hasProhibitsConstrained
 @property  BOOL prohibitsConstrained
 @property  BOOL hasL2Report
 @property  NWAWDNWL2Report *l2Report

  // class methods
  +[NWAWDNWConnectionReport activitiesType]

  // instance methods
  -[NWAWDNWConnectionReport isEqual:]
  -[NWAWDNWConnectionReport copyWithZone:]
  -[NWAWDNWConnectionReport .cxx_destruct]
  -[NWAWDNWConnectionReport processName]
  -[NWAWDNWConnectionReport dictionaryRepresentation]
  -[NWAWDNWConnectionReport setProcessName:]
  -[NWAWDNWConnectionReport connectionUUID]
  -[NWAWDNWConnectionReport setConnectionUUID:]
  -[NWAWDNWConnectionReport timestamp]
  -[NWAWDNWConnectionReport hasTimestamp]
  -[NWAWDNWConnectionReport setTimestamp:]
  -[NWAWDNWConnectionReport writeTo:]
  -[NWAWDNWConnectionReport mergeFrom:]
  -[NWAWDNWConnectionReport readFrom:]
  -[NWAWDNWConnectionReport copyTo:]
  -[NWAWDNWConnectionReport activities]
  -[NWAWDNWConnectionReport isDaemon]
  -[NWAWDNWConnectionReport multipathServiceType]
  -[NWAWDNWConnectionReport setMultipathServiceType:]
  -[NWAWDNWConnectionReport setHasTimestamp:]
  -[NWAWDNWConnectionReport setTriggeredPath:]
  -[NWAWDNWConnectionReport setHasTriggeredPath:]
  -[NWAWDNWConnectionReport hasTriggeredPath]
  -[NWAWDNWConnectionReport setSystemProxyConfigured:]
  -[NWAWDNWConnectionReport setHasSystemProxyConfigured:]
  -[NWAWDNWConnectionReport hasSystemProxyConfigured]
  -[NWAWDNWConnectionReport setCustomProxyConfigured:]
  -[NWAWDNWConnectionReport setHasCustomProxyConfigured:]
  -[NWAWDNWConnectionReport hasCustomProxyConfigured]
  -[NWAWDNWConnectionReport usedProxyType]
  -[NWAWDNWConnectionReport setUsedProxyType:]
  -[NWAWDNWConnectionReport setHasUsedProxyType:]
  -[NWAWDNWConnectionReport hasUsedProxyType]
  -[NWAWDNWConnectionReport usedProxyTypeAsString:]
  -[NWAWDNWConnectionReport StringAsUsedProxyType:]
  -[NWAWDNWConnectionReport setFallbackEligible:]
  -[NWAWDNWConnectionReport setHasFallbackEligible:]
  -[NWAWDNWConnectionReport hasFallbackEligible]
  -[NWAWDNWConnectionReport setWeakFallback:]
  -[NWAWDNWConnectionReport setHasWeakFallback:]
  -[NWAWDNWConnectionReport hasWeakFallback]
  -[NWAWDNWConnectionReport setUsedFallback:]
  -[NWAWDNWConnectionReport setHasUsedFallback:]
  -[NWAWDNWConnectionReport hasUsedFallback]
  -[NWAWDNWConnectionReport setResolutionRequired:]
  -[NWAWDNWConnectionReport setHasResolutionRequired:]
  -[NWAWDNWConnectionReport hasResolutionRequired]
  -[NWAWDNWConnectionReport setTlsConfigured:]
  -[NWAWDNWConnectionReport setHasTlsConfigured:]
  -[NWAWDNWConnectionReport hasTlsConfigured]
  -[NWAWDNWConnectionReport setTfoConfigured:]
  -[NWAWDNWConnectionReport setHasTfoConfigured:]
  -[NWAWDNWConnectionReport hasTfoConfigured]
  -[NWAWDNWConnectionReport setMultipathConfigured:]
  -[NWAWDNWConnectionReport setHasMultipathConfigured:]
  -[NWAWDNWConnectionReport hasMultipathConfigured]
  -[NWAWDNWConnectionReport setTrafficClass:]
  -[NWAWDNWConnectionReport setHasTrafficClass:]
  -[NWAWDNWConnectionReport hasTrafficClass]
  -[NWAWDNWConnectionReport failureReason]
  -[NWAWDNWConnectionReport setFailureReason:]
  -[NWAWDNWConnectionReport setHasFailureReason:]
  -[NWAWDNWConnectionReport hasFailureReason]
  -[NWAWDNWConnectionReport failureReasonAsString:]
  -[NWAWDNWConnectionReport StringAsFailureReason:]
  -[NWAWDNWConnectionReport setPathTriggerMilliseconds:]
  -[NWAWDNWConnectionReport setHasPathTriggerMilliseconds:]
  -[NWAWDNWConnectionReport hasPathTriggerMilliseconds]
  -[NWAWDNWConnectionReport setResolutionMilliseconds:]
  -[NWAWDNWConnectionReport setHasResolutionMilliseconds:]
  -[NWAWDNWConnectionReport hasResolutionMilliseconds]
  -[NWAWDNWConnectionReport setProxyMilliseconds:]
  -[NWAWDNWConnectionReport setHasProxyMilliseconds:]
  -[NWAWDNWConnectionReport hasProxyMilliseconds]
  -[NWAWDNWConnectionReport setFlowConnectMilliseconds:]
  -[NWAWDNWConnectionReport setHasFlowConnectMilliseconds:]
  -[NWAWDNWConnectionReport hasFlowConnectMilliseconds]
  -[NWAWDNWConnectionReport setTlsMilliseconds:]
  -[NWAWDNWConnectionReport setHasTlsMilliseconds:]
  -[NWAWDNWConnectionReport hasTlsMilliseconds]
  -[NWAWDNWConnectionReport setFlowDurationMilliseconds:]
  -[NWAWDNWConnectionReport setHasFlowDurationMilliseconds:]
  -[NWAWDNWConnectionReport hasFlowDurationMilliseconds]
  -[NWAWDNWConnectionReport setIpv4AddressCount:]
  -[NWAWDNWConnectionReport setHasIpv4AddressCount:]
  -[NWAWDNWConnectionReport hasIpv4AddressCount]
  -[NWAWDNWConnectionReport setIpv6AddressCount:]
  -[NWAWDNWConnectionReport setHasIpv6AddressCount:]
  -[NWAWDNWConnectionReport hasIpv6AddressCount]
  -[NWAWDNWConnectionReport setSynthesizedIPv6Address:]
  -[NWAWDNWConnectionReport setHasSynthesizedIPv6Address:]
  -[NWAWDNWConnectionReport hasSynthesizedIPv6Address]
  -[NWAWDNWConnectionReport firstAddressFamily]
  -[NWAWDNWConnectionReport setFirstAddressFamily:]
  -[NWAWDNWConnectionReport setHasFirstAddressFamily:]
  -[NWAWDNWConnectionReport hasFirstAddressFamily]
  -[NWAWDNWConnectionReport firstAddressFamilyAsString:]
  -[NWAWDNWConnectionReport StringAsFirstAddressFamily:]
  -[NWAWDNWConnectionReport connectedAddressFamily]
  -[NWAWDNWConnectionReport setConnectedAddressFamily:]
  -[NWAWDNWConnectionReport setHasConnectedAddressFamily:]
  -[NWAWDNWConnectionReport hasConnectedAddressFamily]
  -[NWAWDNWConnectionReport connectedAddressFamilyAsString:]
  -[NWAWDNWConnectionReport StringAsConnectedAddressFamily:]
  -[NWAWDNWConnectionReport setConnectedAddressIndex:]
  -[NWAWDNWConnectionReport setHasConnectedAddressIndex:]
  -[NWAWDNWConnectionReport hasConnectedAddressIndex]
  -[NWAWDNWConnectionReport connectedInterfaceType]
  -[NWAWDNWConnectionReport setConnectedInterfaceType:]
  -[NWAWDNWConnectionReport setHasConnectedInterfaceType:]
  -[NWAWDNWConnectionReport hasConnectedInterfaceType]
  -[NWAWDNWConnectionReport connectedInterfaceTypeAsString:]
  -[NWAWDNWConnectionReport StringAsConnectedInterfaceType:]
  -[NWAWDNWConnectionReport setConnectionReuseCount:]
  -[NWAWDNWConnectionReport setHasConnectionReuseCount:]
  -[NWAWDNWConnectionReport hasConnectionReuseCount]
  -[NWAWDNWConnectionReport setDataStallCount:]
  -[NWAWDNWConnectionReport setHasDataStallCount:]
  -[NWAWDNWConnectionReport hasDataStallCount]
  -[NWAWDNWConnectionReport connectionMode]
  -[NWAWDNWConnectionReport setConnectionMode:]
  -[NWAWDNWConnectionReport setHasConnectionMode:]
  -[NWAWDNWConnectionReport hasConnectionMode]
  -[NWAWDNWConnectionReport connectionModeAsString:]
  -[NWAWDNWConnectionReport StringAsConnectionMode:]
  -[NWAWDNWConnectionReport appleHost]
  -[NWAWDNWConnectionReport setAppleHost:]
  -[NWAWDNWConnectionReport setHasAppleHost:]
  -[NWAWDNWConnectionReport hasAppleHost]
  -[NWAWDNWConnectionReport appleHostAsString:]
  -[NWAWDNWConnectionReport StringAsAppleHost:]
  -[NWAWDNWConnectionReport appleApp]
  -[NWAWDNWConnectionReport setAppleApp:]
  -[NWAWDNWConnectionReport setHasAppleApp:]
  -[NWAWDNWConnectionReport hasAppleApp]
  -[NWAWDNWConnectionReport appleAppAsString:]
  -[NWAWDNWConnectionReport StringAsAppleApp:]
  -[NWAWDNWConnectionReport tlsVersion]
  -[NWAWDNWConnectionReport setTlsVersion:]
  -[NWAWDNWConnectionReport setHasTlsVersion:]
  -[NWAWDNWConnectionReport hasTlsVersion]
  -[NWAWDNWConnectionReport tlsVersionAsString:]
  -[NWAWDNWConnectionReport StringAsTlsVersion:]
  -[NWAWDNWConnectionReport stackLevel]
  -[NWAWDNWConnectionReport setStackLevel:]
  -[NWAWDNWConnectionReport setHasStackLevel:]
  -[NWAWDNWConnectionReport hasStackLevel]
  -[NWAWDNWConnectionReport stackLevelAsString:]
  -[NWAWDNWConnectionReport StringAsStackLevel:]
  -[NWAWDNWConnectionReport setIpv4Available:]
  -[NWAWDNWConnectionReport setHasIpv4Available:]
  -[NWAWDNWConnectionReport hasIpv4Available]
  -[NWAWDNWConnectionReport setIpv6Available:]
  -[NWAWDNWConnectionReport setHasIpv6Available:]
  -[NWAWDNWConnectionReport hasIpv6Available]
  -[NWAWDNWConnectionReport setIpv4DNSServerCount:]
  -[NWAWDNWConnectionReport setHasIpv4DNSServerCount:]
  -[NWAWDNWConnectionReport hasIpv4DNSServerCount]
  -[NWAWDNWConnectionReport setIpv6DNSServerCount:]
  -[NWAWDNWConnectionReport setHasIpv6DNSServerCount:]
  -[NWAWDNWConnectionReport hasIpv6DNSServerCount]
  -[NWAWDNWConnectionReport setTlsVersionTimeout:]
  -[NWAWDNWConnectionReport setHasTlsVersionTimeout:]
  -[NWAWDNWConnectionReport hasTlsVersionTimeout]
  -[NWAWDNWConnectionReport setSynthesizedExtraIPv6Address:]
  -[NWAWDNWConnectionReport setHasSynthesizedExtraIPv6Address:]
  -[NWAWDNWConnectionReport hasSynthesizedExtraIPv6Address]
  -[NWAWDNWConnectionReport setBytesIn:]
  -[NWAWDNWConnectionReport setHasBytesIn:]
  -[NWAWDNWConnectionReport hasBytesIn]
  -[NWAWDNWConnectionReport setBytesOut:]
  -[NWAWDNWConnectionReport setHasBytesOut:]
  -[NWAWDNWConnectionReport hasBytesOut]
  -[NWAWDNWConnectionReport setBytesDuplicate:]
  -[NWAWDNWConnectionReport setHasBytesDuplicate:]
  -[NWAWDNWConnectionReport hasBytesDuplicate]
  -[NWAWDNWConnectionReport setBytesOutOfOrder:]
  -[NWAWDNWConnectionReport setHasBytesOutOfOrder:]
  -[NWAWDNWConnectionReport hasBytesOutOfOrder]
  -[NWAWDNWConnectionReport setBytesRetransmitted:]
  -[NWAWDNWConnectionReport setHasBytesRetransmitted:]
  -[NWAWDNWConnectionReport hasBytesRetransmitted]
  -[NWAWDNWConnectionReport setPacketsIn:]
  -[NWAWDNWConnectionReport setHasPacketsIn:]
  -[NWAWDNWConnectionReport hasPacketsIn]
  -[NWAWDNWConnectionReport setPacketsOut:]
  -[NWAWDNWConnectionReport setHasPacketsOut:]
  -[NWAWDNWConnectionReport hasPacketsOut]
  -[NWAWDNWConnectionReport setCurrentRTT:]
  -[NWAWDNWConnectionReport setHasCurrentRTT:]
  -[NWAWDNWConnectionReport hasCurrentRTT]
  -[NWAWDNWConnectionReport setSmoothedRTT:]
  -[NWAWDNWConnectionReport setHasSmoothedRTT:]
  -[NWAWDNWConnectionReport hasSmoothedRTT]
  -[NWAWDNWConnectionReport setBestRTT:]
  -[NWAWDNWConnectionReport setHasBestRTT:]
  -[NWAWDNWConnectionReport hasBestRTT]
  -[NWAWDNWConnectionReport setRTTvariance:]
  -[NWAWDNWConnectionReport setHasRTTvariance:]
  -[NWAWDNWConnectionReport hasRTTvariance]
  -[NWAWDNWConnectionReport setSynRetransmissionCount:]
  -[NWAWDNWConnectionReport setHasSynRetransmissionCount:]
  -[NWAWDNWConnectionReport hasSynRetransmissionCount]
  -[NWAWDNWConnectionReport setTfoUsed:]
  -[NWAWDNWConnectionReport setHasTfoUsed:]
  -[NWAWDNWConnectionReport hasTfoUsed]
  -[NWAWDNWConnectionReport setHasMultipathServiceType:]
  -[NWAWDNWConnectionReport hasMultipathServiceType]
  -[NWAWDNWConnectionReport setFirstParty:]
  -[NWAWDNWConnectionReport setHasFirstParty:]
  -[NWAWDNWConnectionReport hasFirstParty]
  -[NWAWDNWConnectionReport setMultipathBytesInCell:]
  -[NWAWDNWConnectionReport setHasMultipathBytesInCell:]
  -[NWAWDNWConnectionReport hasMultipathBytesInCell]
  -[NWAWDNWConnectionReport setMultipathBytesOutCell:]
  -[NWAWDNWConnectionReport setHasMultipathBytesOutCell:]
  -[NWAWDNWConnectionReport hasMultipathBytesOutCell]
  -[NWAWDNWConnectionReport setMultipathBytesInWiFi:]
  -[NWAWDNWConnectionReport setHasMultipathBytesInWiFi:]
  -[NWAWDNWConnectionReport hasMultipathBytesInWiFi]
  -[NWAWDNWConnectionReport setMultipathBytesOutWiFi:]
  -[NWAWDNWConnectionReport setHasMultipathBytesOutWiFi:]
  -[NWAWDNWConnectionReport hasMultipathBytesOutWiFi]
  -[NWAWDNWConnectionReport setMultipathBytesInInitial:]
  -[NWAWDNWConnectionReport setHasMultipathBytesInInitial:]
  -[NWAWDNWConnectionReport hasMultipathBytesInInitial]
  -[NWAWDNWConnectionReport setMultipathBytesOutInitial:]
  -[NWAWDNWConnectionReport setHasMultipathBytesOutInitial:]
  -[NWAWDNWConnectionReport hasMultipathBytesOutInitial]
  -[NWAWDNWConnectionReport setSecondsSinceInterfaceChange:]
  -[NWAWDNWConnectionReport setHasSecondsSinceInterfaceChange:]
  -[NWAWDNWConnectionReport hasSecondsSinceInterfaceChange]
  -[NWAWDNWConnectionReport setIsDaemon:]
  -[NWAWDNWConnectionReport setHasIsDaemon:]
  -[NWAWDNWConnectionReport hasIsDaemon]
  -[NWAWDNWConnectionReport hasProcessName]
  -[NWAWDNWConnectionReport clearActivities]
  -[NWAWDNWConnectionReport addActivities:]
  -[NWAWDNWConnectionReport activitiesCount]
  -[NWAWDNWConnectionReport activitiesAtIndex:]
  -[NWAWDNWConnectionReport hasConnectionUUID]
  -[NWAWDNWConnectionReport setTlsHandshakeTimedOut:]
  -[NWAWDNWConnectionReport setHasTlsHandshakeTimedOut:]
  -[NWAWDNWConnectionReport hasTlsHandshakeTimedOut]
  -[NWAWDNWConnectionReport setIsPathExpensive:]
  -[NWAWDNWConnectionReport setHasIsPathExpensive:]
  -[NWAWDNWConnectionReport hasIsPathExpensive]
  -[NWAWDNWConnectionReport setIsPathConstrained:]
  -[NWAWDNWConnectionReport setHasIsPathConstrained:]
  -[NWAWDNWConnectionReport hasIsPathConstrained]
  -[NWAWDNWConnectionReport setProhibitsExpensive:]
  -[NWAWDNWConnectionReport setHasProhibitsExpensive:]
  -[NWAWDNWConnectionReport hasProhibitsExpensive]
  -[NWAWDNWConnectionReport setProhibitsConstrained:]
  -[NWAWDNWConnectionReport setHasProhibitsConstrained:]
  -[NWAWDNWConnectionReport hasProhibitsConstrained]
  -[NWAWDNWConnectionReport hasL2Report]
  -[NWAWDNWConnectionReport triggeredPath]
  -[NWAWDNWConnectionReport systemProxyConfigured]
  -[NWAWDNWConnectionReport customProxyConfigured]
  -[NWAWDNWConnectionReport fallbackEligible]
  -[NWAWDNWConnectionReport weakFallback]
  -[NWAWDNWConnectionReport usedFallback]
  -[NWAWDNWConnectionReport resolutionRequired]
  -[NWAWDNWConnectionReport tlsConfigured]
  -[NWAWDNWConnectionReport tfoConfigured]
  -[NWAWDNWConnectionReport multipathConfigured]
  -[NWAWDNWConnectionReport trafficClass]
  -[NWAWDNWConnectionReport pathTriggerMilliseconds]
  -[NWAWDNWConnectionReport resolutionMilliseconds]
  -[NWAWDNWConnectionReport proxyMilliseconds]
  -[NWAWDNWConnectionReport flowConnectMilliseconds]
  -[NWAWDNWConnectionReport tlsMilliseconds]
  -[NWAWDNWConnectionReport flowDurationMilliseconds]
  -[NWAWDNWConnectionReport ipv4AddressCount]
  -[NWAWDNWConnectionReport ipv6AddressCount]
  -[NWAWDNWConnectionReport synthesizedIPv6Address]
  -[NWAWDNWConnectionReport connectedAddressIndex]
  -[NWAWDNWConnectionReport connectionReuseCount]
  -[NWAWDNWConnectionReport dataStallCount]
  -[NWAWDNWConnectionReport ipv4Available]
  -[NWAWDNWConnectionReport ipv6Available]
  -[NWAWDNWConnectionReport ipv4DNSServerCount]
  -[NWAWDNWConnectionReport ipv6DNSServerCount]
  -[NWAWDNWConnectionReport tlsVersionTimeout]
  -[NWAWDNWConnectionReport synthesizedExtraIPv6Address]
  -[NWAWDNWConnectionReport bytesIn]
  -[NWAWDNWConnectionReport bytesOut]
  -[NWAWDNWConnectionReport bytesDuplicate]
  -[NWAWDNWConnectionReport bytesOutOfOrder]
  -[NWAWDNWConnectionReport bytesRetransmitted]
  -[NWAWDNWConnectionReport packetsIn]
  -[NWAWDNWConnectionReport packetsOut]
  -[NWAWDNWConnectionReport currentRTT]
  -[NWAWDNWConnectionReport smoothedRTT]
  -[NWAWDNWConnectionReport bestRTT]
  -[NWAWDNWConnectionReport rTTvariance]
  -[NWAWDNWConnectionReport synRetransmissionCount]
  -[NWAWDNWConnectionReport tfoUsed]
  -[NWAWDNWConnectionReport firstParty]
  -[NWAWDNWConnectionReport multipathBytesInCell]
  -[NWAWDNWConnectionReport multipathBytesOutCell]
  -[NWAWDNWConnectionReport multipathBytesInWiFi]
  -[NWAWDNWConnectionReport multipathBytesOutWiFi]
  -[NWAWDNWConnectionReport multipathBytesInInitial]
  -[NWAWDNWConnectionReport multipathBytesOutInitial]
  -[NWAWDNWConnectionReport secondsSinceInterfaceChange]
  -[NWAWDNWConnectionReport setActivities:]
  -[NWAWDNWConnectionReport tlsHandshakeTimedOut]
  -[NWAWDNWConnectionReport isPathExpensive]
  -[NWAWDNWConnectionReport isPathConstrained]
  -[NWAWDNWConnectionReport prohibitsExpensive]
  -[NWAWDNWConnectionReport prohibitsConstrained]
  -[NWAWDNWConnectionReport l2Report]
  -[NWAWDNWConnectionReport setL2Report:]


NWHostEndpoint : NWEndpoint
 @property  NSString *hostname
 @property  NSString *port

  // class methods
  +[NWHostEndpoint endpointType]
  +[NWHostEndpoint endpointWithHostname:port:]

  // instance methods
  -[NWHostEndpoint port]
  -[NWHostEndpoint hostname]
  -[NWHostEndpoint descriptionWithIndent:showFullContent:]


NWMonitor : NSObject /usr/lib/libSystem.B.dylib <NSURLSessionTaskDelegate>
 @property  long long status
 @property  NWNetworkDescription *bestAvailableNetworkDescription
 @property  NSArray *networkDescriptionArray
 @property  NWParameters *parameters
 @property  NWEndpoint *endpoint
 @property  NWPathEvaluator *pathEvaluator
 @property  NSUUID *lastProbeUUID
 @property  NSURL *lastProbeURL
 @property  NWInterface *interface
 @property  unsigned int mID
 @property  NSString *privateDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NWMonitor initialize]
  +[NWMonitor queue]
  +[NWMonitor automaticallyNotifiesObserversForKey:]
  +[NWMonitor copySavedMonitorForNetworkDescriptionArray:endpoint:parameters:]
  +[NWMonitor saveMonitor:]
  +[NWMonitor monitorWithNetworkDescription:endpoint:parameters:]
  +[NWMonitor monitorWithNetworkDescriptionArray:endpoint:parameters:]
  +[NWMonitor mainOperationQueue]

  // instance methods
  -[NWMonitor dealloc]
  -[NWMonitor isEqual:]
  -[NWMonitor .cxx_destruct]
  -[NWMonitor endpoint]
  -[NWMonitor observeValueForKeyPath:ofObject:change:context:]
  -[NWMonitor status]
  -[NWMonitor interface]
  -[NWMonitor setInterface:]
  -[NWMonitor parameters]
  -[NWMonitor setEndpoint:]
  -[NWMonitor URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[NWMonitor setParameters:]
  -[NWMonitor setStatus:]
  -[NWMonitor pathEvaluator]
  -[NWMonitor descriptionWithIndent:showFullContent:]
  -[NWMonitor privateDescription]
  -[NWMonitor setBestAvailableNetworkDescription:]
  -[NWMonitor setNetworkDescriptionArray:]
  -[NWMonitor setPathEvaluator:]
  -[NWMonitor evaluateStartingAtIndex:probeUUID:probeWasSuccessful:]
  -[NWMonitor matchesNetworkDescriptionArray:endpoint:parameters:]
  -[NWMonitor bestAvailableNetworkDescription]
  -[NWMonitor networkDescriptionArray]
  -[NWMonitor lastProbeUUID]
  -[NWMonitor setLastProbeUUID:]
  -[NWMonitor lastProbeURL]
  -[NWMonitor setLastProbeURL:]
  -[NWMonitor mID]
  -[NWMonitor setMID:]


NWAWDMPTCPConnectionReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasClientId
 @property  NSString *clientId
 @property  BOOL hasEstablishmentInterfaceName
 @property  NSString *establishmentInterfaceName
 @property  BOOL hasEstablishmentSuccess
 @property  BOOL establishmentSuccess
 @property  BOOL hasEstablishmentFailureError
 @property  int establishmentFailureError
 @property  BOOL hasEstablishmentTcpFallback
 @property  BOOL establishmentTcpFallback
 @property  BOOL hasEstablishmentCellularFallback
 @property  BOOL establishmentCellularFallback
 @property  BOOL hasEstablishmentTime
 @property  double establishmentTime
 @property  BOOL hasEstablishmentSynRetransmits
 @property  int establishmentSynRetransmits
 @property  BOOL hasEstablishmentForcedTcpFallback
 @property  BOOL establishmentForcedTcpFallback
 @property  BOOL hasPostConnectMultiHomed
 @property  BOOL postConnectMultiHomed
 @property  BOOL hasPostConnectSingleHomed
 @property  BOOL postConnectSingleHomed
 @property  BOOL hasPostConnectSubflowAttemptCount
 @property  int postConnectSubflowAttemptCount
 @property  BOOL hasPostConnectSubflowMaxSubflowCount
 @property  int postConnectSubflowMaxSubflowCount
 @property  BOOL hasPostConnectSessionLifetime
 @property  double postConnectSessionLifetime
 @property  BOOL hasSubflowSwitchingCount
 @property  int subflowSwitchingCount
 @property  NSMutableArray *interfaceReports
 @property  NSMutableArray *subflowSwitchingReports

  // class methods
  +[NWAWDMPTCPConnectionReport interfaceReportsType]
  +[NWAWDMPTCPConnectionReport subflowSwitchingReportsType]

  // instance methods
  -[NWAWDMPTCPConnectionReport isEqual:]
  -[NWAWDMPTCPConnectionReport copyWithZone:]
  -[NWAWDMPTCPConnectionReport .cxx_destruct]
  -[NWAWDMPTCPConnectionReport dictionaryRepresentation]
  -[NWAWDMPTCPConnectionReport timestamp]
  -[NWAWDMPTCPConnectionReport hasTimestamp]
  -[NWAWDMPTCPConnectionReport setTimestamp:]
  -[NWAWDMPTCPConnectionReport writeTo:]
  -[NWAWDMPTCPConnectionReport mergeFrom:]
  -[NWAWDMPTCPConnectionReport readFrom:]
  -[NWAWDMPTCPConnectionReport copyTo:]
  -[NWAWDMPTCPConnectionReport clientId]
  -[NWAWDMPTCPConnectionReport setHasTimestamp:]
  -[NWAWDMPTCPConnectionReport hasClientId]
  -[NWAWDMPTCPConnectionReport hasEstablishmentInterfaceName]
  -[NWAWDMPTCPConnectionReport setEstablishmentSuccess:]
  -[NWAWDMPTCPConnectionReport setHasEstablishmentSuccess:]
  -[NWAWDMPTCPConnectionReport hasEstablishmentSuccess]
  -[NWAWDMPTCPConnectionReport setEstablishmentFailureError:]
  -[NWAWDMPTCPConnectionReport setHasEstablishmentFailureError:]
  -[NWAWDMPTCPConnectionReport hasEstablishmentFailureError]
  -[NWAWDMPTCPConnectionReport setEstablishmentTcpFallback:]
  -[NWAWDMPTCPConnectionReport setHasEstablishmentTcpFallback:]
  -[NWAWDMPTCPConnectionReport hasEstablishmentTcpFallback]
  -[NWAWDMPTCPConnectionReport setEstablishmentCellularFallback:]
  -[NWAWDMPTCPConnectionReport setHasEstablishmentCellularFallback:]
  -[NWAWDMPTCPConnectionReport hasEstablishmentCellularFallback]
  -[NWAWDMPTCPConnectionReport setEstablishmentTime:]
  -[NWAWDMPTCPConnectionReport setHasEstablishmentTime:]
  -[NWAWDMPTCPConnectionReport hasEstablishmentTime]
  -[NWAWDMPTCPConnectionReport setEstablishmentSynRetransmits:]
  -[NWAWDMPTCPConnectionReport setHasEstablishmentSynRetransmits:]
  -[NWAWDMPTCPConnectionReport hasEstablishmentSynRetransmits]
  -[NWAWDMPTCPConnectionReport setEstablishmentForcedTcpFallback:]
  -[NWAWDMPTCPConnectionReport setHasEstablishmentForcedTcpFallback:]
  -[NWAWDMPTCPConnectionReport hasEstablishmentForcedTcpFallback]
  -[NWAWDMPTCPConnectionReport setPostConnectMultiHomed:]
  -[NWAWDMPTCPConnectionReport setHasPostConnectMultiHomed:]
  -[NWAWDMPTCPConnectionReport hasPostConnectMultiHomed]
  -[NWAWDMPTCPConnectionReport setPostConnectSingleHomed:]
  -[NWAWDMPTCPConnectionReport setHasPostConnectSingleHomed:]
  -[NWAWDMPTCPConnectionReport hasPostConnectSingleHomed]
  -[NWAWDMPTCPConnectionReport setPostConnectSubflowAttemptCount:]
  -[NWAWDMPTCPConnectionReport setHasPostConnectSubflowAttemptCount:]
  -[NWAWDMPTCPConnectionReport hasPostConnectSubflowAttemptCount]
  -[NWAWDMPTCPConnectionReport setPostConnectSubflowMaxSubflowCount:]
  -[NWAWDMPTCPConnectionReport setHasPostConnectSubflowMaxSubflowCount:]
  -[NWAWDMPTCPConnectionReport hasPostConnectSubflowMaxSubflowCount]
  -[NWAWDMPTCPConnectionReport setPostConnectSessionLifetime:]
  -[NWAWDMPTCPConnectionReport setHasPostConnectSessionLifetime:]
  -[NWAWDMPTCPConnectionReport hasPostConnectSessionLifetime]
  -[NWAWDMPTCPConnectionReport setSubflowSwitchingCount:]
  -[NWAWDMPTCPConnectionReport setHasSubflowSwitchingCount:]
  -[NWAWDMPTCPConnectionReport hasSubflowSwitchingCount]
  -[NWAWDMPTCPConnectionReport clearInterfaceReports]
  -[NWAWDMPTCPConnectionReport addInterfaceReports:]
  -[NWAWDMPTCPConnectionReport interfaceReportsCount]
  -[NWAWDMPTCPConnectionReport interfaceReportsAtIndex:]
  -[NWAWDMPTCPConnectionReport clearSubflowSwitchingReports]
  -[NWAWDMPTCPConnectionReport addSubflowSwitchingReports:]
  -[NWAWDMPTCPConnectionReport subflowSwitchingReportsCount]
  -[NWAWDMPTCPConnectionReport subflowSwitchingReportsAtIndex:]
  -[NWAWDMPTCPConnectionReport setClientId:]
  -[NWAWDMPTCPConnectionReport establishmentInterfaceName]
  -[NWAWDMPTCPConnectionReport setEstablishmentInterfaceName:]
  -[NWAWDMPTCPConnectionReport establishmentSuccess]
  -[NWAWDMPTCPConnectionReport establishmentFailureError]
  -[NWAWDMPTCPConnectionReport establishmentTcpFallback]
  -[NWAWDMPTCPConnectionReport establishmentCellularFallback]
  -[NWAWDMPTCPConnectionReport establishmentTime]
  -[NWAWDMPTCPConnectionReport establishmentSynRetransmits]
  -[NWAWDMPTCPConnectionReport establishmentForcedTcpFallback]
  -[NWAWDMPTCPConnectionReport postConnectMultiHomed]
  -[NWAWDMPTCPConnectionReport postConnectSingleHomed]
  -[NWAWDMPTCPConnectionReport postConnectSubflowAttemptCount]
  -[NWAWDMPTCPConnectionReport postConnectSubflowMaxSubflowCount]
  -[NWAWDMPTCPConnectionReport postConnectSessionLifetime]
  -[NWAWDMPTCPConnectionReport subflowSwitchingCount]
  -[NWAWDMPTCPConnectionReport interfaceReports]
  -[NWAWDMPTCPConnectionReport setInterfaceReports:]
  -[NWAWDMPTCPConnectionReport subflowSwitchingReports]
  -[NWAWDMPTCPConnectionReport setSubflowSwitchingReports:]


NWAWDLibnetcoreConnectionStatisticsReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimeToDNSResolvedMsecs
 @property  unsigned long timeToDNSResolvedMsecs
 @property  BOOL hasDNSAnswersCached
 @property  BOOL dNSAnswersCached
 @property  BOOL hasTimeToConnectionEstablishmentMsecs
 @property  unsigned long timeToConnectionEstablishmentMsecs
 @property  BOOL hasIPAddressAttemptCount
 @property  unsigned long iPAddressAttemptCount
 @property  BOOL hasFlowDurationMsecs
 @property  unsigned long flowDurationMsecs
 @property  BOOL hasConnectedInterfaceType
 @property  int connectedInterfaceType
 @property  BOOL hasKernelReportedStalls
 @property  BOOL kernelReportedStalls
 @property  BOOL hasKernelReportingConnectionStalled
 @property  BOOL kernelReportingConnectionStalled
 @property  BOOL hasKernelReportingReadStalled
 @property  BOOL kernelReportingReadStalled
 @property  BOOL hasKernelReportingWriteStalled
 @property  BOOL kernelReportingWriteStalled
 @property  BOOL hasBytesIn
 @property  unsigned long bytesIn
 @property  BOOL hasBytesOut
 @property  unsigned long bytesOut
 @property  BOOL hasBytesDuplicate
 @property  unsigned long bytesDuplicate
 @property  BOOL hasBytesOutOfOrder
 @property  unsigned long bytesOutOfOrder
 @property  BOOL hasBytesRetransmitted
 @property  unsigned long bytesRetransmitted
 @property  BOOL hasPacketsIn
 @property  unsigned long packetsIn
 @property  BOOL hasPacketsOut
 @property  unsigned long packetsOut
 @property  BOOL hasPacketsDuplicate
 @property  unsigned long packetsDuplicate
 @property  BOOL hasPacketsOutOfOrder
 @property  unsigned long packetsOutOfOrder
 @property  BOOL hasPacketsRetransmitted
 @property  unsigned long packetsRetransmitted
 @property  BOOL hasCurrentRTTMsecs
 @property  unsigned long currentRTTMsecs
 @property  BOOL hasSmoothedRTTMsecs
 @property  unsigned long smoothedRTTMsecs
 @property  BOOL hasBestRTTMsecs
 @property  unsigned long bestRTTMsecs
 @property  BOOL hasRTTvariance
 @property  unsigned long rTTvariance
 @property  BOOL hasSynRetransmissionCount
 @property  unsigned long synRetransmissionCount
 @property  BOOL hasConnectionReuseCount
 @property  unsigned long connectionReuseCount
 @property  BOOL hasAppReportingDataStallCount
 @property  unsigned long appReportingDataStallCount
 @property  BOOL hasAppDataStallTimerMsecs
 @property  unsigned long appDataStallTimerMsecs
 @property  BOOL hasTrafficClass
 @property  unsigned long trafficClass
 @property  BOOL hasTcpFastOpen
 @property  BOOL tcpFastOpen
 @property  BOOL hasCellularFallback
 @property  BOOL cellularFallback
 @property  BOOL hasCellularRRCConnected
 @property  BOOL cellularRRCConnected
 @property  BOOL hasConnected
 @property  BOOL connected
 @property  BOOL hasInterfaceType
 @property  int interfaceType
 @property  BOOL hasTimeToDNSStartMsecs
 @property  unsigned long timeToDNSStartMsecs
 @property  BOOL hasDNSResolvedTimeMsecs
 @property  unsigned long dNSResolvedTimeMsecs
 @property  BOOL hasTimeToConnectionStartMsecs
 @property  unsigned long timeToConnectionStartMsecs
 @property  BOOL hasConnectionEstablishmentTimeMsecs
 @property  unsigned long connectionEstablishmentTimeMsecs
 @property  BOOL hasBetterRouteEventCount
 @property  unsigned long betterRouteEventCount
 @property  BOOL hasMultipathServiceType
 @property  unsigned long multipathServiceType
 @property  BOOL hasFirstParty
 @property  BOOL firstParty
 @property  BOOL hasMultipathBytesInCell
 @property  unsigned long multipathBytesInCell
 @property  BOOL hasMultipathBytesOutCell
 @property  unsigned long multipathBytesOutCell
 @property  BOOL hasMultipathBytesInWiFi
 @property  unsigned long multipathBytesInWiFi
 @property  BOOL hasMultipathBytesOutWiFi
 @property  unsigned long multipathBytesOutWiFi
 @property  BOOL hasMultipathBytesInInitial
 @property  unsigned long multipathBytesInInitial
 @property  BOOL hasMultipathBytesOutInitial
 @property  unsigned long multipathBytesOutInitial

  // instance methods
  -[NWAWDLibnetcoreConnectionStatisticsReport isEqual:]
  -[NWAWDLibnetcoreConnectionStatisticsReport copyWithZone:]
  -[NWAWDLibnetcoreConnectionStatisticsReport dictionaryRepresentation]
  -[NWAWDLibnetcoreConnectionStatisticsReport writeTo:]
  -[NWAWDLibnetcoreConnectionStatisticsReport mergeFrom:]
  -[NWAWDLibnetcoreConnectionStatisticsReport readFrom:]
  -[NWAWDLibnetcoreConnectionStatisticsReport copyTo:]
  -[NWAWDLibnetcoreConnectionStatisticsReport multipathServiceType]
  -[NWAWDLibnetcoreConnectionStatisticsReport setMultipathServiceType:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasConnected]
  -[NWAWDLibnetcoreConnectionStatisticsReport setInterfaceType:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasInterfaceType:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasInterfaceType]
  -[NWAWDLibnetcoreConnectionStatisticsReport interfaceType]
  -[NWAWDLibnetcoreConnectionStatisticsReport setTrafficClass:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasTrafficClass:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasTrafficClass]
  -[NWAWDLibnetcoreConnectionStatisticsReport connectedInterfaceType]
  -[NWAWDLibnetcoreConnectionStatisticsReport setConnectedInterfaceType:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasConnectedInterfaceType:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasConnectedInterfaceType]
  -[NWAWDLibnetcoreConnectionStatisticsReport connectedInterfaceTypeAsString:]
  -[NWAWDLibnetcoreConnectionStatisticsReport StringAsConnectedInterfaceType:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setConnectionReuseCount:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasConnectionReuseCount:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasConnectionReuseCount]
  -[NWAWDLibnetcoreConnectionStatisticsReport setBytesIn:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasBytesIn:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasBytesIn]
  -[NWAWDLibnetcoreConnectionStatisticsReport setBytesOut:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasBytesOut:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasBytesOut]
  -[NWAWDLibnetcoreConnectionStatisticsReport setBytesDuplicate:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasBytesDuplicate:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasBytesDuplicate]
  -[NWAWDLibnetcoreConnectionStatisticsReport setBytesOutOfOrder:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasBytesOutOfOrder:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasBytesOutOfOrder]
  -[NWAWDLibnetcoreConnectionStatisticsReport setBytesRetransmitted:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasBytesRetransmitted:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasBytesRetransmitted]
  -[NWAWDLibnetcoreConnectionStatisticsReport setPacketsIn:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasPacketsIn:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasPacketsIn]
  -[NWAWDLibnetcoreConnectionStatisticsReport setPacketsOut:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasPacketsOut:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasPacketsOut]
  -[NWAWDLibnetcoreConnectionStatisticsReport setRTTvariance:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasRTTvariance:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasRTTvariance]
  -[NWAWDLibnetcoreConnectionStatisticsReport setSynRetransmissionCount:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasSynRetransmissionCount:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasSynRetransmissionCount]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasMultipathServiceType:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasMultipathServiceType]
  -[NWAWDLibnetcoreConnectionStatisticsReport setFirstParty:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasFirstParty:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasFirstParty]
  -[NWAWDLibnetcoreConnectionStatisticsReport setMultipathBytesInCell:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasMultipathBytesInCell:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasMultipathBytesInCell]
  -[NWAWDLibnetcoreConnectionStatisticsReport setMultipathBytesOutCell:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasMultipathBytesOutCell:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasMultipathBytesOutCell]
  -[NWAWDLibnetcoreConnectionStatisticsReport setMultipathBytesInWiFi:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasMultipathBytesInWiFi:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasMultipathBytesInWiFi]
  -[NWAWDLibnetcoreConnectionStatisticsReport setMultipathBytesOutWiFi:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasMultipathBytesOutWiFi:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasMultipathBytesOutWiFi]
  -[NWAWDLibnetcoreConnectionStatisticsReport setMultipathBytesInInitial:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasMultipathBytesInInitial:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasMultipathBytesInInitial]
  -[NWAWDLibnetcoreConnectionStatisticsReport setMultipathBytesOutInitial:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasMultipathBytesOutInitial:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasMultipathBytesOutInitial]
  -[NWAWDLibnetcoreConnectionStatisticsReport trafficClass]
  -[NWAWDLibnetcoreConnectionStatisticsReport connectionReuseCount]
  -[NWAWDLibnetcoreConnectionStatisticsReport bytesIn]
  -[NWAWDLibnetcoreConnectionStatisticsReport bytesOut]
  -[NWAWDLibnetcoreConnectionStatisticsReport bytesDuplicate]
  -[NWAWDLibnetcoreConnectionStatisticsReport bytesOutOfOrder]
  -[NWAWDLibnetcoreConnectionStatisticsReport bytesRetransmitted]
  -[NWAWDLibnetcoreConnectionStatisticsReport packetsIn]
  -[NWAWDLibnetcoreConnectionStatisticsReport packetsOut]
  -[NWAWDLibnetcoreConnectionStatisticsReport rTTvariance]
  -[NWAWDLibnetcoreConnectionStatisticsReport synRetransmissionCount]
  -[NWAWDLibnetcoreConnectionStatisticsReport firstParty]
  -[NWAWDLibnetcoreConnectionStatisticsReport multipathBytesInCell]
  -[NWAWDLibnetcoreConnectionStatisticsReport multipathBytesOutCell]
  -[NWAWDLibnetcoreConnectionStatisticsReport multipathBytesInWiFi]
  -[NWAWDLibnetcoreConnectionStatisticsReport multipathBytesOutWiFi]
  -[NWAWDLibnetcoreConnectionStatisticsReport multipathBytesInInitial]
  -[NWAWDLibnetcoreConnectionStatisticsReport multipathBytesOutInitial]
  -[NWAWDLibnetcoreConnectionStatisticsReport setTimeToDNSResolvedMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasTimeToDNSResolvedMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasTimeToDNSResolvedMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport setDNSAnswersCached:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasDNSAnswersCached:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasDNSAnswersCached]
  -[NWAWDLibnetcoreConnectionStatisticsReport setTimeToConnectionEstablishmentMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasTimeToConnectionEstablishmentMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasTimeToConnectionEstablishmentMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport setIPAddressAttemptCount:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasIPAddressAttemptCount:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasIPAddressAttemptCount]
  -[NWAWDLibnetcoreConnectionStatisticsReport setFlowDurationMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasFlowDurationMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasFlowDurationMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport setKernelReportedStalls:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasKernelReportedStalls:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasKernelReportedStalls]
  -[NWAWDLibnetcoreConnectionStatisticsReport setKernelReportingConnectionStalled:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasKernelReportingConnectionStalled:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasKernelReportingConnectionStalled]
  -[NWAWDLibnetcoreConnectionStatisticsReport setKernelReportingReadStalled:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasKernelReportingReadStalled:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasKernelReportingReadStalled]
  -[NWAWDLibnetcoreConnectionStatisticsReport setKernelReportingWriteStalled:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasKernelReportingWriteStalled:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasKernelReportingWriteStalled]
  -[NWAWDLibnetcoreConnectionStatisticsReport setPacketsDuplicate:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasPacketsDuplicate:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasPacketsDuplicate]
  -[NWAWDLibnetcoreConnectionStatisticsReport setPacketsOutOfOrder:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasPacketsOutOfOrder:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasPacketsOutOfOrder]
  -[NWAWDLibnetcoreConnectionStatisticsReport setPacketsRetransmitted:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasPacketsRetransmitted:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasPacketsRetransmitted]
  -[NWAWDLibnetcoreConnectionStatisticsReport setCurrentRTTMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasCurrentRTTMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasCurrentRTTMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport setSmoothedRTTMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasSmoothedRTTMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasSmoothedRTTMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport setBestRTTMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasBestRTTMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasBestRTTMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport setAppReportingDataStallCount:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasAppReportingDataStallCount:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasAppReportingDataStallCount]
  -[NWAWDLibnetcoreConnectionStatisticsReport setAppDataStallTimerMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasAppDataStallTimerMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasAppDataStallTimerMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport setTcpFastOpen:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasTcpFastOpen:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasTcpFastOpen]
  -[NWAWDLibnetcoreConnectionStatisticsReport setCellularFallback:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasCellularFallback:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasCellularFallback]
  -[NWAWDLibnetcoreConnectionStatisticsReport setCellularRRCConnected:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasCellularRRCConnected:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasCellularRRCConnected]
  -[NWAWDLibnetcoreConnectionStatisticsReport setConnected:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasConnected:]
  -[NWAWDLibnetcoreConnectionStatisticsReport interfaceTypeAsString:]
  -[NWAWDLibnetcoreConnectionStatisticsReport StringAsInterfaceType:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setTimeToDNSStartMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasTimeToDNSStartMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasTimeToDNSStartMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport setDNSResolvedTimeMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasDNSResolvedTimeMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasDNSResolvedTimeMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport setTimeToConnectionStartMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasTimeToConnectionStartMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasTimeToConnectionStartMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport setConnectionEstablishmentTimeMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasConnectionEstablishmentTimeMsecs:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasConnectionEstablishmentTimeMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport setBetterRouteEventCount:]
  -[NWAWDLibnetcoreConnectionStatisticsReport setHasBetterRouteEventCount:]
  -[NWAWDLibnetcoreConnectionStatisticsReport hasBetterRouteEventCount]
  -[NWAWDLibnetcoreConnectionStatisticsReport timeToDNSResolvedMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport dNSAnswersCached]
  -[NWAWDLibnetcoreConnectionStatisticsReport timeToConnectionEstablishmentMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport iPAddressAttemptCount]
  -[NWAWDLibnetcoreConnectionStatisticsReport flowDurationMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport kernelReportedStalls]
  -[NWAWDLibnetcoreConnectionStatisticsReport kernelReportingConnectionStalled]
  -[NWAWDLibnetcoreConnectionStatisticsReport kernelReportingReadStalled]
  -[NWAWDLibnetcoreConnectionStatisticsReport kernelReportingWriteStalled]
  -[NWAWDLibnetcoreConnectionStatisticsReport packetsDuplicate]
  -[NWAWDLibnetcoreConnectionStatisticsReport packetsOutOfOrder]
  -[NWAWDLibnetcoreConnectionStatisticsReport packetsRetransmitted]
  -[NWAWDLibnetcoreConnectionStatisticsReport currentRTTMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport smoothedRTTMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport bestRTTMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport appReportingDataStallCount]
  -[NWAWDLibnetcoreConnectionStatisticsReport appDataStallTimerMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport tcpFastOpen]
  -[NWAWDLibnetcoreConnectionStatisticsReport cellularFallback]
  -[NWAWDLibnetcoreConnectionStatisticsReport cellularRRCConnected]
  -[NWAWDLibnetcoreConnectionStatisticsReport connected]
  -[NWAWDLibnetcoreConnectionStatisticsReport timeToDNSStartMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport dNSResolvedTimeMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport timeToConnectionStartMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport connectionEstablishmentTimeMsecs]
  -[NWAWDLibnetcoreConnectionStatisticsReport betterRouteEventCount]


NWAWDLibnetcoreStatsReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasReportReason
 @property  unsigned int reportReason
 @property  BOOL hasMbufStatisticsReport
 @property  NWAWDLibnetcoreMbufStatsReport *mbufStatisticsReport
 @property  BOOL hasTcpStatisticsReport
 @property  NWAWDLibnetcoreTCPStatsReport *tcpStatisticsReport
 @property  BOOL hasTcpECNStatisticsReport
 @property  NWAWDLibnetcoreTCPECNStatsReport *tcpECNStatisticsReport
 @property  BOOL hasTcpTFOStatisticsReport
 @property  NWAWDLibnetcoreTCPTFOStatsReport *tcpTFOStatisticsReport
 @property  BOOL hasNetworkdStatisticsReport
 @property  NWAWDLibnetcoreNetworkdStatsReport *networkdStatisticsReport
 @property  NSMutableArray *tcpECNInterfaceReports
 @property  BOOL hasNwAPIUsageReport
 @property  NWAWDNWAPIUsage *nwAPIUsageReport
 @property  BOOL hasMptcpStatisticsReport
 @property  NWAWDLibnetcoreMPTCPStatsReport *mptcpStatisticsReport

  // class methods
  +[NWAWDLibnetcoreStatsReport tcpECNInterfaceReportType]

  // instance methods
  -[NWAWDLibnetcoreStatsReport isEqual:]
  -[NWAWDLibnetcoreStatsReport copyWithZone:]
  -[NWAWDLibnetcoreStatsReport .cxx_destruct]
  -[NWAWDLibnetcoreStatsReport dictionaryRepresentation]
  -[NWAWDLibnetcoreStatsReport timestamp]
  -[NWAWDLibnetcoreStatsReport hasTimestamp]
  -[NWAWDLibnetcoreStatsReport setTimestamp:]
  -[NWAWDLibnetcoreStatsReport writeTo:]
  -[NWAWDLibnetcoreStatsReport mergeFrom:]
  -[NWAWDLibnetcoreStatsReport readFrom:]
  -[NWAWDLibnetcoreStatsReport copyTo:]
  -[NWAWDLibnetcoreStatsReport setHasTimestamp:]
  -[NWAWDLibnetcoreStatsReport setReportReason:]
  -[NWAWDLibnetcoreStatsReport setHasReportReason:]
  -[NWAWDLibnetcoreStatsReport hasReportReason]
  -[NWAWDLibnetcoreStatsReport hasMbufStatisticsReport]
  -[NWAWDLibnetcoreStatsReport hasTcpStatisticsReport]
  -[NWAWDLibnetcoreStatsReport hasTcpECNStatisticsReport]
  -[NWAWDLibnetcoreStatsReport hasTcpTFOStatisticsReport]
  -[NWAWDLibnetcoreStatsReport hasNetworkdStatisticsReport]
  -[NWAWDLibnetcoreStatsReport clearTcpECNInterfaceReports]
  -[NWAWDLibnetcoreStatsReport addTcpECNInterfaceReport:]
  -[NWAWDLibnetcoreStatsReport tcpECNInterfaceReportsCount]
  -[NWAWDLibnetcoreStatsReport tcpECNInterfaceReportAtIndex:]
  -[NWAWDLibnetcoreStatsReport hasNwAPIUsageReport]
  -[NWAWDLibnetcoreStatsReport hasMptcpStatisticsReport]
  -[NWAWDLibnetcoreStatsReport reportReason]
  -[NWAWDLibnetcoreStatsReport mbufStatisticsReport]
  -[NWAWDLibnetcoreStatsReport setMbufStatisticsReport:]
  -[NWAWDLibnetcoreStatsReport tcpStatisticsReport]
  -[NWAWDLibnetcoreStatsReport setTcpStatisticsReport:]
  -[NWAWDLibnetcoreStatsReport tcpECNStatisticsReport]
  -[NWAWDLibnetcoreStatsReport setTcpECNStatisticsReport:]
  -[NWAWDLibnetcoreStatsReport tcpTFOStatisticsReport]
  -[NWAWDLibnetcoreStatsReport setTcpTFOStatisticsReport:]
  -[NWAWDLibnetcoreStatsReport networkdStatisticsReport]
  -[NWAWDLibnetcoreStatsReport setNetworkdStatisticsReport:]
  -[NWAWDLibnetcoreStatsReport tcpECNInterfaceReports]
  -[NWAWDLibnetcoreStatsReport setTcpECNInterfaceReports:]
  -[NWAWDLibnetcoreStatsReport nwAPIUsageReport]
  -[NWAWDLibnetcoreStatsReport setNwAPIUsageReport:]
  -[NWAWDLibnetcoreStatsReport mptcpStatisticsReport]
  -[NWAWDLibnetcoreStatsReport setMptcpStatisticsReport:]


NWConnection : NSObject /usr/lib/libSystem.B.dylib
 @property  long long internalConnectionState
 @property  BOOL internalIsViable
 @property  BOOL internalHasBetterPath
 @property  NSError *internalError
 @property  NWPath *internalPath
 @property  unsigned int tlsConnectionTime
 @property  NWConcrete_nw_connection *internalConnection
 @property  NWPath *currentPath
 @property  NWEndpoint *endpoint
 @property  NWParameters *parameters
 @property  long long connectionState
 @property  NWEndpoint *connectedLocalEndpoint
 @property  NWEndpoint *connectedRemoteEndpoint
 @property  NSError *error
 @property  BOOL viable
 @property  BOOL hasBetterPath

  // class methods
  +[NWConnection automaticallyNotifiesObserversForKey:]
  +[NWConnection connectionWithEndpoint:parameters:]
  +[NWConnection connectionWithConnectedSocket:]
  +[NWConnection connectionWithInternalConnection:]

  // instance methods
  -[NWConnection .cxx_destruct]
  -[NWConnection error]
  -[NWConnection cancel]
  -[NWConnection start]
  -[NWConnection endpoint]
  -[NWConnection parameters]
  -[NWConnection initWithEndpoint:parameters:]
  -[NWConnection currentPath]
  -[NWConnection isViable]
  -[NWConnection hasBetterPath]
  -[NWConnection internalError]
  -[NWConnection setInternalError:]
  -[NWConnection internalConnection]
  -[NWConnection setInternalConnection:]
  -[NWConnection initWithInternalConnection:]
  -[NWConnection initWithConnectedSocket:]
  -[NWConnection getConnectedSocket]
  -[NWConnection forceCancel]
  -[NWConnection cancelCurrentEndpoint]
  -[NWConnection tlsConnectionTime]
  -[NWConnection connectionState]
  -[NWConnection connectedLocalEndpoint]
  -[NWConnection connectedRemoteEndpoint]
  -[NWConnection copyError]
  -[NWConnection copyCurrentPath]
  -[NWConnection dumpTimestamps]
  -[NWConnection internalConnectionState]
  -[NWConnection setInternalConnectionState:]
  -[NWConnection internalIsViable]
  -[NWConnection setInternalIsViable:]
  -[NWConnection internalHasBetterPath]
  -[NWConnection setInternalHasBetterPath:]
  -[NWConnection internalPath]
  -[NWConnection setInternalPath:]


NWAWDNWActivity : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasActivityDomain
 @property  unsigned long activityDomain
 @property  BOOL hasActivityLabel
 @property  unsigned long activityLabel
 @property  BOOL hasActivityUUID
 @property  NSString *activityUUID
 @property  BOOL hasParentActivityUUID
 @property  NSString *parentActivityUUID
 @property  BOOL hasIsRetry
 @property  BOOL isRetry
 @property  BOOL hasL2Report
 @property  NWAWDNWL2Report *l2Report

  // instance methods
  -[NWAWDNWActivity isEqual:]
  -[NWAWDNWActivity copyWithZone:]
  -[NWAWDNWActivity .cxx_destruct]
  -[NWAWDNWActivity dictionaryRepresentation]
  -[NWAWDNWActivity timestamp]
  -[NWAWDNWActivity hasTimestamp]
  -[NWAWDNWActivity setTimestamp:]
  -[NWAWDNWActivity writeTo:]
  -[NWAWDNWActivity mergeFrom:]
  -[NWAWDNWActivity readFrom:]
  -[NWAWDNWActivity copyTo:]
  -[NWAWDNWActivity setActivityUUID:]
  -[NWAWDNWActivity activityUUID]
  -[NWAWDNWActivity setHasTimestamp:]
  -[NWAWDNWActivity hasL2Report]
  -[NWAWDNWActivity l2Report]
  -[NWAWDNWActivity setL2Report:]
  -[NWAWDNWActivity setActivityDomain:]
  -[NWAWDNWActivity setHasActivityDomain:]
  -[NWAWDNWActivity hasActivityDomain]
  -[NWAWDNWActivity setActivityLabel:]
  -[NWAWDNWActivity setHasActivityLabel:]
  -[NWAWDNWActivity hasActivityLabel]
  -[NWAWDNWActivity hasActivityUUID]
  -[NWAWDNWActivity hasParentActivityUUID]
  -[NWAWDNWActivity setIsRetry:]
  -[NWAWDNWActivity setHasIsRetry:]
  -[NWAWDNWActivity hasIsRetry]
  -[NWAWDNWActivity activityDomain]
  -[NWAWDNWActivity activityLabel]
  -[NWAWDNWActivity parentActivityUUID]
  -[NWAWDNWActivity setParentActivityUUID:]
  -[NWAWDNWActivity isRetry]


NWAWDLibnetcoreNetworkdStatsReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTotalConnectionCount
 @property  unsigned long totalConnectionCount
 @property  BOOL hasTotalSuccessfulConnectionCount
 @property  unsigned long totalSuccessfulConnectionCount
 @property  BOOL hasFallbackConnectionCount
 @property  unsigned long fallbackConnectionCount

  // instance methods
  -[NWAWDLibnetcoreNetworkdStatsReport isEqual:]
  -[NWAWDLibnetcoreNetworkdStatsReport copyWithZone:]
  -[NWAWDLibnetcoreNetworkdStatsReport dictionaryRepresentation]
  -[NWAWDLibnetcoreNetworkdStatsReport writeTo:]
  -[NWAWDLibnetcoreNetworkdStatsReport mergeFrom:]
  -[NWAWDLibnetcoreNetworkdStatsReport readFrom:]
  -[NWAWDLibnetcoreNetworkdStatsReport copyTo:]
  -[NWAWDLibnetcoreNetworkdStatsReport setTotalConnectionCount:]
  -[NWAWDLibnetcoreNetworkdStatsReport setHasTotalConnectionCount:]
  -[NWAWDLibnetcoreNetworkdStatsReport hasTotalConnectionCount]
  -[NWAWDLibnetcoreNetworkdStatsReport setTotalSuccessfulConnectionCount:]
  -[NWAWDLibnetcoreNetworkdStatsReport setHasTotalSuccessfulConnectionCount:]
  -[NWAWDLibnetcoreNetworkdStatsReport hasTotalSuccessfulConnectionCount]
  -[NWAWDLibnetcoreNetworkdStatsReport setFallbackConnectionCount:]
  -[NWAWDLibnetcoreNetworkdStatsReport setHasFallbackConnectionCount:]
  -[NWAWDLibnetcoreNetworkdStatsReport hasFallbackConnectionCount]
  -[NWAWDLibnetcoreNetworkdStatsReport totalConnectionCount]
  -[NWAWDLibnetcoreNetworkdStatsReport totalSuccessfulConnectionCount]
  -[NWAWDLibnetcoreNetworkdStatsReport fallbackConnectionCount]


NWPBBrowseDescriptor : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasService
 @property  NWPBServiceBrowse *service

  // instance methods
  -[NWPBBrowseDescriptor isEqual:]
  -[NWPBBrowseDescriptor copyWithZone:]
  -[NWPBBrowseDescriptor .cxx_destruct]
  -[NWPBBrowseDescriptor dictionaryRepresentation]
  -[NWPBBrowseDescriptor writeTo:]
  -[NWPBBrowseDescriptor mergeFrom:]
  -[NWPBBrowseDescriptor readFrom:]
  -[NWPBBrowseDescriptor copyTo:]
  -[NWPBBrowseDescriptor service]
  -[NWPBBrowseDescriptor setService:]
  -[NWPBBrowseDescriptor hasService]


NWRemotePacketProxy : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<NWRemotePacketProxyDelegate> *delegate
 @property  NSMutableArray *writeRequests
 @property  ^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v} packetProtocol
 @property  ^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v} defaultOutputHandler
 @property  ^{nw_hash_table=} packetHashTable
 @property  ^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v} protocol
 @property  unsigned int receiveWindowPacketCount

  // instance methods
  -[NWRemotePacketProxy dealloc]
  -[NWRemotePacketProxy delegate]
  -[NWRemotePacketProxy setDelegate:]
  -[NWRemotePacketProxy .cxx_destruct]
  -[NWRemotePacketProxy protocol]
  -[NWRemotePacketProxy initWithDelegate:]
  -[NWRemotePacketProxy setReceiveWindowPacketCount:]
  -[NWRemotePacketProxy outputHandlerForPacket:inbound:]
  -[NWRemotePacketProxy setDefaultOutputProtocolHandler:]
  -[NWRemotePacketProxy setOutputProtocolHandler:local:remote:ipProtocol:]
  -[NWRemotePacketProxy receiveRemotePacket:]
  -[NWRemotePacketProxy receiveWindowPacketCount]
  -[NWRemotePacketProxy writeRequests]
  -[NWRemotePacketProxy setWriteRequests:]
  -[NWRemotePacketProxy packetProtocol]
  -[NWRemotePacketProxy setPacketProtocol:]
  -[NWRemotePacketProxy defaultOutputHandler]
  -[NWRemotePacketProxy setDefaultOutputHandler:]
  -[NWRemotePacketProxy packetHashTable]
  -[NWRemotePacketProxy setPacketHashTable:]


NWPBServiceBrowse : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasType
 @property  NSString *type
 @property  BOOL hasDomain
 @property  NSString *domain

  // instance methods
  -[NWPBServiceBrowse isEqual:]
  -[NWPBServiceBrowse copyWithZone:]
  -[NWPBServiceBrowse domain]
  -[NWPBServiceBrowse type]
  -[NWPBServiceBrowse setType:]
  -[NWPBServiceBrowse .cxx_destruct]
  -[NWPBServiceBrowse dictionaryRepresentation]
  -[NWPBServiceBrowse writeTo:]
  -[NWPBServiceBrowse mergeFrom:]
  -[NWPBServiceBrowse readFrom:]
  -[NWPBServiceBrowse copyTo:]
  -[NWPBServiceBrowse setDomain:]
  -[NWPBServiceBrowse hasDomain]
  -[NWPBServiceBrowse hasType]


NWPBAgent : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasAgentClass
 @property  NWPBAgentClass *agentClass
 @property  BOOL hasAgentIdentifier
 @property  NSString *agentIdentifier
 @property  BOOL hasAgentDescription
 @property  NSString *agentDescription
 @property  BOOL hasActive
 @property  BOOL active
 @property  BOOL hasUserActivated
 @property  BOOL userActivated
 @property  BOOL hasVoluntary
 @property  BOOL voluntary
 @property  BOOL hasNetworkProvider
 @property  BOOL networkProvider
 @property  BOOL hasNexusProvider
 @property  BOOL nexusProvider
 @property  BOOL hasAgentData
 @property  NSData *agentData

  // instance methods
  -[NWPBAgent isEqual:]
  -[NWPBAgent copyWithZone:]
  -[NWPBAgent .cxx_destruct]
  -[NWPBAgent dictionaryRepresentation]
  -[NWPBAgent setActive:]
  -[NWPBAgent writeTo:]
  -[NWPBAgent mergeFrom:]
  -[NWPBAgent readFrom:]
  -[NWPBAgent copyTo:]
  -[NWPBAgent active]
  -[NWPBAgent hasAgentClass]
  -[NWPBAgent hasAgentIdentifier]
  -[NWPBAgent hasAgentDescription]
  -[NWPBAgent setHasActive:]
  -[NWPBAgent hasActive]
  -[NWPBAgent setUserActivated:]
  -[NWPBAgent setHasUserActivated:]
  -[NWPBAgent hasUserActivated]
  -[NWPBAgent setVoluntary:]
  -[NWPBAgent setHasVoluntary:]
  -[NWPBAgent hasVoluntary]
  -[NWPBAgent setNetworkProvider:]
  -[NWPBAgent setHasNetworkProvider:]
  -[NWPBAgent hasNetworkProvider]
  -[NWPBAgent setNexusProvider:]
  -[NWPBAgent setHasNexusProvider:]
  -[NWPBAgent hasNexusProvider]
  -[NWPBAgent hasAgentData]
  -[NWPBAgent agentClass]
  -[NWPBAgent setAgentClass:]
  -[NWPBAgent agentIdentifier]
  -[NWPBAgent setAgentIdentifier:]
  -[NWPBAgent agentDescription]
  -[NWPBAgent setAgentDescription:]
  -[NWPBAgent userActivated]
  -[NWPBAgent voluntary]
  -[NWPBAgent networkProvider]
  -[NWPBAgent nexusProvider]
  -[NWPBAgent agentData]
  -[NWPBAgent setAgentData:]


NWPBAgentClass : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasDomain
 @property  NSString *domain
 @property  BOOL hasType
 @property  NSString *type

  // instance methods
  -[NWPBAgentClass isEqual:]
  -[NWPBAgentClass copyWithZone:]
  -[NWPBAgentClass domain]
  -[NWPBAgentClass type]
  -[NWPBAgentClass setType:]
  -[NWPBAgentClass .cxx_destruct]
  -[NWPBAgentClass dictionaryRepresentation]
  -[NWPBAgentClass writeTo:]
  -[NWPBAgentClass mergeFrom:]
  -[NWPBAgentClass readFrom:]
  -[NWPBAgentClass copyTo:]
  -[NWPBAgentClass setDomain:]
  -[NWPBAgentClass hasDomain]
  -[NWPBAgentClass hasType]


ManagedNetworkSettings : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[ManagedNetworkSettings sharedMNS]

  // instance methods
  -[ManagedNetworkSettings init]
  -[ManagedNetworkSettings setQueue:]
  -[ManagedNetworkSettings queue]
  -[ManagedNetworkSettings .cxx_destruct]
  -[ManagedNetworkSettings handleEvent:]
  -[ManagedNetworkSettings reloadNetworkdSettings]
  -[ManagedNetworkSettings reloadMNS]
  -[ManagedNetworkSettings updateSettingsFromCarrierFile:prefix:settings:]
  -[ManagedNetworkSettings reloadCarrierSettings:]


NWAWDLibnetcoreTCPStatsReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTcpIPv4AvgRTT
 @property  unsigned long tcpIPv4AvgRTT
 @property  BOOL hasTcpIPv6AvgRTT
 @property  unsigned long tcpIPv6AvgRTT
 @property  BOOL hasTcpSendPLR
 @property  unsigned long tcpSendPLR
 @property  BOOL hasTcpRecvPLR
 @property  unsigned long tcpRecvPLR
 @property  BOOL hasTcpSendTLRTO
 @property  unsigned long tcpSendTLRTO
 @property  BOOL hasTcpSendReorderRate
 @property  unsigned long tcpSendReorderRate
 @property  BOOL hasTcpConnectionAttempts
 @property  unsigned long tcpConnectionAttempts
 @property  BOOL hasTcpConnectionAccepts
 @property  unsigned long tcpConnectionAccepts

  // instance methods
  -[NWAWDLibnetcoreTCPStatsReport isEqual:]
  -[NWAWDLibnetcoreTCPStatsReport copyWithZone:]
  -[NWAWDLibnetcoreTCPStatsReport dictionaryRepresentation]
  -[NWAWDLibnetcoreTCPStatsReport writeTo:]
  -[NWAWDLibnetcoreTCPStatsReport mergeFrom:]
  -[NWAWDLibnetcoreTCPStatsReport readFrom:]
  -[NWAWDLibnetcoreTCPStatsReport copyTo:]
  -[NWAWDLibnetcoreTCPStatsReport setTcpIPv4AvgRTT:]
  -[NWAWDLibnetcoreTCPStatsReport setHasTcpIPv4AvgRTT:]
  -[NWAWDLibnetcoreTCPStatsReport hasTcpIPv4AvgRTT]
  -[NWAWDLibnetcoreTCPStatsReport setTcpIPv6AvgRTT:]
  -[NWAWDLibnetcoreTCPStatsReport setHasTcpIPv6AvgRTT:]
  -[NWAWDLibnetcoreTCPStatsReport hasTcpIPv6AvgRTT]
  -[NWAWDLibnetcoreTCPStatsReport setTcpSendPLR:]
  -[NWAWDLibnetcoreTCPStatsReport setHasTcpSendPLR:]
  -[NWAWDLibnetcoreTCPStatsReport hasTcpSendPLR]
  -[NWAWDLibnetcoreTCPStatsReport setTcpRecvPLR:]
  -[NWAWDLibnetcoreTCPStatsReport setHasTcpRecvPLR:]
  -[NWAWDLibnetcoreTCPStatsReport hasTcpRecvPLR]
  -[NWAWDLibnetcoreTCPStatsReport setTcpSendTLRTO:]
  -[NWAWDLibnetcoreTCPStatsReport setHasTcpSendTLRTO:]
  -[NWAWDLibnetcoreTCPStatsReport hasTcpSendTLRTO]
  -[NWAWDLibnetcoreTCPStatsReport setTcpSendReorderRate:]
  -[NWAWDLibnetcoreTCPStatsReport setHasTcpSendReorderRate:]
  -[NWAWDLibnetcoreTCPStatsReport hasTcpSendReorderRate]
  -[NWAWDLibnetcoreTCPStatsReport setTcpConnectionAttempts:]
  -[NWAWDLibnetcoreTCPStatsReport setHasTcpConnectionAttempts:]
  -[NWAWDLibnetcoreTCPStatsReport hasTcpConnectionAttempts]
  -[NWAWDLibnetcoreTCPStatsReport setTcpConnectionAccepts:]
  -[NWAWDLibnetcoreTCPStatsReport setHasTcpConnectionAccepts:]
  -[NWAWDLibnetcoreTCPStatsReport hasTcpConnectionAccepts]
  -[NWAWDLibnetcoreTCPStatsReport tcpIPv4AvgRTT]
  -[NWAWDLibnetcoreTCPStatsReport tcpIPv6AvgRTT]
  -[NWAWDLibnetcoreTCPStatsReport tcpSendPLR]
  -[NWAWDLibnetcoreTCPStatsReport tcpRecvPLR]
  -[NWAWDLibnetcoreTCPStatsReport tcpSendTLRTO]
  -[NWAWDLibnetcoreTCPStatsReport tcpSendReorderRate]
  -[NWAWDLibnetcoreTCPStatsReport tcpConnectionAttempts]
  -[NWAWDLibnetcoreTCPStatsReport tcpConnectionAccepts]


NWAWDLibnetcoreCellularFallbackReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasFellback
 @property  BOOL fellback
 @property  BOOL hasDenyReason
 @property  int denyReason
 @property  BOOL hasFallbackTimerMsecs
 @property  unsigned long fallbackTimerMsecs
 @property  unsigned long networkEventsCount
 @property  ^i networkEvents
 @property  unsigned long timeToNetworkEventsMsecsCount
 @property  ^Q timeToNetworkEventsMsecs
 @property  NSMutableArray *primaryInterfaceAttemptStatisticsReports
 @property  NSMutableArray *dataUsageSnapshotsAtNetworkEvents

  // class methods
  +[NWAWDLibnetcoreCellularFallbackReport primaryInterfaceAttemptStatisticsReportsType]
  +[NWAWDLibnetcoreCellularFallbackReport dataUsageSnapshotsAtNetworkEventsType]

  // instance methods
  -[NWAWDLibnetcoreCellularFallbackReport dealloc]
  -[NWAWDLibnetcoreCellularFallbackReport isEqual:]
  -[NWAWDLibnetcoreCellularFallbackReport copyWithZone:]
  -[NWAWDLibnetcoreCellularFallbackReport .cxx_destruct]
  -[NWAWDLibnetcoreCellularFallbackReport dictionaryRepresentation]
  -[NWAWDLibnetcoreCellularFallbackReport writeTo:]
  -[NWAWDLibnetcoreCellularFallbackReport mergeFrom:]
  -[NWAWDLibnetcoreCellularFallbackReport readFrom:]
  -[NWAWDLibnetcoreCellularFallbackReport copyTo:]
  -[NWAWDLibnetcoreCellularFallbackReport setFellback:]
  -[NWAWDLibnetcoreCellularFallbackReport setHasFellback:]
  -[NWAWDLibnetcoreCellularFallbackReport hasFellback]
  -[NWAWDLibnetcoreCellularFallbackReport denyReason]
  -[NWAWDLibnetcoreCellularFallbackReport setDenyReason:]
  -[NWAWDLibnetcoreCellularFallbackReport setHasDenyReason:]
  -[NWAWDLibnetcoreCellularFallbackReport hasDenyReason]
  -[NWAWDLibnetcoreCellularFallbackReport denyReasonAsString:]
  -[NWAWDLibnetcoreCellularFallbackReport StringAsDenyReason:]
  -[NWAWDLibnetcoreCellularFallbackReport setFallbackTimerMsecs:]
  -[NWAWDLibnetcoreCellularFallbackReport setHasFallbackTimerMsecs:]
  -[NWAWDLibnetcoreCellularFallbackReport hasFallbackTimerMsecs]
  -[NWAWDLibnetcoreCellularFallbackReport networkEventsCount]
  -[NWAWDLibnetcoreCellularFallbackReport networkEvents]
  -[NWAWDLibnetcoreCellularFallbackReport clearNetworkEvents]
  -[NWAWDLibnetcoreCellularFallbackReport addNetworkEvents:]
  -[NWAWDLibnetcoreCellularFallbackReport networkEventsAtIndex:]
  -[NWAWDLibnetcoreCellularFallbackReport setNetworkEvents:count:]
  -[NWAWDLibnetcoreCellularFallbackReport networkEventsAsString:]
  -[NWAWDLibnetcoreCellularFallbackReport StringAsNetworkEvents:]
  -[NWAWDLibnetcoreCellularFallbackReport timeToNetworkEventsMsecsCount]
  -[NWAWDLibnetcoreCellularFallbackReport timeToNetworkEventsMsecs]
  -[NWAWDLibnetcoreCellularFallbackReport clearTimeToNetworkEventsMsecs]
  -[NWAWDLibnetcoreCellularFallbackReport addTimeToNetworkEventsMsecs:]
  -[NWAWDLibnetcoreCellularFallbackReport timeToNetworkEventsMsecsAtIndex:]
  -[NWAWDLibnetcoreCellularFallbackReport setTimeToNetworkEventsMsecs:count:]
  -[NWAWDLibnetcoreCellularFallbackReport clearPrimaryInterfaceAttemptStatisticsReports]
  -[NWAWDLibnetcoreCellularFallbackReport addPrimaryInterfaceAttemptStatisticsReports:]
  -[NWAWDLibnetcoreCellularFallbackReport primaryInterfaceAttemptStatisticsReportsCount]
  -[NWAWDLibnetcoreCellularFallbackReport primaryInterfaceAttemptStatisticsReportsAtIndex:]
  -[NWAWDLibnetcoreCellularFallbackReport clearDataUsageSnapshotsAtNetworkEvents]
  -[NWAWDLibnetcoreCellularFallbackReport addDataUsageSnapshotsAtNetworkEvents:]
  -[NWAWDLibnetcoreCellularFallbackReport dataUsageSnapshotsAtNetworkEventsCount]
  -[NWAWDLibnetcoreCellularFallbackReport dataUsageSnapshotsAtNetworkEventsAtIndex:]
  -[NWAWDLibnetcoreCellularFallbackReport fellback]
  -[NWAWDLibnetcoreCellularFallbackReport fallbackTimerMsecs]
  -[NWAWDLibnetcoreCellularFallbackReport primaryInterfaceAttemptStatisticsReports]
  -[NWAWDLibnetcoreCellularFallbackReport setPrimaryInterfaceAttemptStatisticsReports:]
  -[NWAWDLibnetcoreCellularFallbackReport dataUsageSnapshotsAtNetworkEvents]
  -[NWAWDLibnetcoreCellularFallbackReport setDataUsageSnapshotsAtNetworkEvents:]


NWAWDLBConnectionReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasConnectionAttemptCount
 @property  int connectionAttemptCount
 @property  BOOL hasConnectionSuccessMptcpCount
 @property  int connectionSuccessMptcpCount
 @property  BOOL hasConnectionSuccessTcpCount
 @property  int connectionSuccessTcpCount
 @property  BOOL hasConnectionFailureCount
 @property  int connectionFailureCount
 @property  BOOL hasConnectionCellularFallbackCount
 @property  int connectionCellularFallbackCount
 @property  unsigned long connectionReadyTimesCount
 @property  ^q connectionReadyTimes
 @property  BOOL hasSuspensionCount
 @property  int suspensionCount
 @property  BOOL hasResumptionSuccessCount
 @property  int resumptionSuccessCount
 @property  BOOL hasResumptionFailureCount
 @property  int resumptionFailureCount
 @property  unsigned long resumptionFailureErrorsCount
 @property  ^i resumptionFailureErrors
 @property  unsigned long resumptionSuccessTimesCount
 @property  ^q resumptionSuccessTimes
 @property  unsigned long resumptionFailureTimesCount
 @property  ^q resumptionFailureTimes
 @property  BOOL hasUpgradeSuccessAndPrimaryCount
 @property  int upgradeSuccessAndPrimaryCount
 @property  BOOL hasUpgradeSuccessAndNotNeededCount
 @property  int upgradeSuccessAndNotNeededCount
 @property  BOOL hasConnectionDuration
 @property  long long connectionDuration
 @property  BOOL hasBytesSent
 @property  long long bytesSent
 @property  BOOL hasBytesReceived
 @property  long long bytesReceived
 @property  BOOL hasClientConnectionCount
 @property  long long clientConnectionCount

  // instance methods
  -[NWAWDLBConnectionReport dealloc]
  -[NWAWDLBConnectionReport isEqual:]
  -[NWAWDLBConnectionReport copyWithZone:]
  -[NWAWDLBConnectionReport dictionaryRepresentation]
  -[NWAWDLBConnectionReport timestamp]
  -[NWAWDLBConnectionReport hasTimestamp]
  -[NWAWDLBConnectionReport setTimestamp:]
  -[NWAWDLBConnectionReport writeTo:]
  -[NWAWDLBConnectionReport mergeFrom:]
  -[NWAWDLBConnectionReport readFrom:]
  -[NWAWDLBConnectionReport copyTo:]
  -[NWAWDLBConnectionReport setHasTimestamp:]
  -[NWAWDLBConnectionReport setConnectionCellularFallbackCount:]
  -[NWAWDLBConnectionReport setHasConnectionCellularFallbackCount:]
  -[NWAWDLBConnectionReport hasConnectionCellularFallbackCount]
  -[NWAWDLBConnectionReport connectionCellularFallbackCount]
  -[NWAWDLBConnectionReport setConnectionAttemptCount:]
  -[NWAWDLBConnectionReport setHasConnectionAttemptCount:]
  -[NWAWDLBConnectionReport hasConnectionAttemptCount]
  -[NWAWDLBConnectionReport setConnectionSuccessMptcpCount:]
  -[NWAWDLBConnectionReport setHasConnectionSuccessMptcpCount:]
  -[NWAWDLBConnectionReport hasConnectionSuccessMptcpCount]
  -[NWAWDLBConnectionReport setConnectionSuccessTcpCount:]
  -[NWAWDLBConnectionReport setHasConnectionSuccessTcpCount:]
  -[NWAWDLBConnectionReport hasConnectionSuccessTcpCount]
  -[NWAWDLBConnectionReport setConnectionFailureCount:]
  -[NWAWDLBConnectionReport setHasConnectionFailureCount:]
  -[NWAWDLBConnectionReport hasConnectionFailureCount]
  -[NWAWDLBConnectionReport connectionReadyTimesCount]
  -[NWAWDLBConnectionReport connectionReadyTimes]
  -[NWAWDLBConnectionReport clearConnectionReadyTimes]
  -[NWAWDLBConnectionReport addConnectionReadyTimes:]
  -[NWAWDLBConnectionReport connectionReadyTimesAtIndex:]
  -[NWAWDLBConnectionReport setConnectionReadyTimes:count:]
  -[NWAWDLBConnectionReport setSuspensionCount:]
  -[NWAWDLBConnectionReport setHasSuspensionCount:]
  -[NWAWDLBConnectionReport hasSuspensionCount]
  -[NWAWDLBConnectionReport setResumptionSuccessCount:]
  -[NWAWDLBConnectionReport setHasResumptionSuccessCount:]
  -[NWAWDLBConnectionReport hasResumptionSuccessCount]
  -[NWAWDLBConnectionReport setResumptionFailureCount:]
  -[NWAWDLBConnectionReport setHasResumptionFailureCount:]
  -[NWAWDLBConnectionReport hasResumptionFailureCount]
  -[NWAWDLBConnectionReport resumptionFailureErrorsCount]
  -[NWAWDLBConnectionReport resumptionFailureErrors]
  -[NWAWDLBConnectionReport clearResumptionFailureErrors]
  -[NWAWDLBConnectionReport addResumptionFailureErrors:]
  -[NWAWDLBConnectionReport resumptionFailureErrorsAtIndex:]
  -[NWAWDLBConnectionReport setResumptionFailureErrors:count:]
  -[NWAWDLBConnectionReport resumptionSuccessTimesCount]
  -[NWAWDLBConnectionReport resumptionSuccessTimes]
  -[NWAWDLBConnectionReport clearResumptionSuccessTimes]
  -[NWAWDLBConnectionReport addResumptionSuccessTimes:]
  -[NWAWDLBConnectionReport resumptionSuccessTimesAtIndex:]
  -[NWAWDLBConnectionReport setResumptionSuccessTimes:count:]
  -[NWAWDLBConnectionReport resumptionFailureTimesCount]
  -[NWAWDLBConnectionReport resumptionFailureTimes]
  -[NWAWDLBConnectionReport clearResumptionFailureTimes]
  -[NWAWDLBConnectionReport addResumptionFailureTimes:]
  -[NWAWDLBConnectionReport resumptionFailureTimesAtIndex:]
  -[NWAWDLBConnectionReport setResumptionFailureTimes:count:]
  -[NWAWDLBConnectionReport setUpgradeSuccessAndPrimaryCount:]
  -[NWAWDLBConnectionReport setHasUpgradeSuccessAndPrimaryCount:]
  -[NWAWDLBConnectionReport hasUpgradeSuccessAndPrimaryCount]
  -[NWAWDLBConnectionReport setUpgradeSuccessAndNotNeededCount:]
  -[NWAWDLBConnectionReport setHasUpgradeSuccessAndNotNeededCount:]
  -[NWAWDLBConnectionReport hasUpgradeSuccessAndNotNeededCount]
  -[NWAWDLBConnectionReport setConnectionDuration:]
  -[NWAWDLBConnectionReport setHasConnectionDuration:]
  -[NWAWDLBConnectionReport hasConnectionDuration]
  -[NWAWDLBConnectionReport setBytesSent:]
  -[NWAWDLBConnectionReport setHasBytesSent:]
  -[NWAWDLBConnectionReport hasBytesSent]
  -[NWAWDLBConnectionReport setBytesReceived:]
  -[NWAWDLBConnectionReport setHasBytesReceived:]
  -[NWAWDLBConnectionReport hasBytesReceived]
  -[NWAWDLBConnectionReport setClientConnectionCount:]
  -[NWAWDLBConnectionReport setHasClientConnectionCount:]
  -[NWAWDLBConnectionReport hasClientConnectionCount]
  -[NWAWDLBConnectionReport connectionAttemptCount]
  -[NWAWDLBConnectionReport connectionSuccessMptcpCount]
  -[NWAWDLBConnectionReport connectionSuccessTcpCount]
  -[NWAWDLBConnectionReport connectionFailureCount]
  -[NWAWDLBConnectionReport suspensionCount]
  -[NWAWDLBConnectionReport resumptionSuccessCount]
  -[NWAWDLBConnectionReport resumptionFailureCount]
  -[NWAWDLBConnectionReport upgradeSuccessAndPrimaryCount]
  -[NWAWDLBConnectionReport upgradeSuccessAndNotNeededCount]
  -[NWAWDLBConnectionReport connectionDuration]
  -[NWAWDLBConnectionReport bytesSent]
  -[NWAWDLBConnectionReport bytesReceived]
  -[NWAWDLBConnectionReport clientConnectionCount]


NWAdvertiseDescriptor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_nw_advertise_descriptor> *internalDescriptor
 @property  NSString *bonjourServiceDomain
 @property  NSString *bonjourServiceType
 @property  NSString *bonjourServiceName

  // instance methods
  -[NWAdvertiseDescriptor copyWithZone:]
  -[NWAdvertiseDescriptor .cxx_destruct]
  -[NWAdvertiseDescriptor initWithName:type:domain:]
  -[NWAdvertiseDescriptor initWithDescriptor:]
  -[NWAdvertiseDescriptor descriptionWithIndent:showFullContent:]
  -[NWAdvertiseDescriptor privateDescription]
  -[NWAdvertiseDescriptor bonjourServiceDomain]
  -[NWAdvertiseDescriptor bonjourServiceType]
  -[NWAdvertiseDescriptor bonjourServiceName]
  -[NWAdvertiseDescriptor internalDescriptor]
  -[NWAdvertiseDescriptor setInternalDescriptor:]


NWEndpoint : NSObject /usr/lib/libSystem.B.dylib <NWPrettyDescription, NSSecureCoding, NSCopying>
 @property  NSObject<OS_nw_endpoint> *internalEndpoint
 @property  NWInterface *interface
 @property  NSData *txtRecord
 @property  NSString *parentEndpointDomain
 @property  NSString *privateDescription
 @property  unsigned short alternatePort

  // class methods
  +[NWEndpoint supportsSecureCoding]
  +[NWEndpoint endpointWithCEndpoint:]
  +[NWEndpoint endpointType]
  +[NWEndpoint supportsResolverCallback]
  +[NWEndpoint copyClassForEndpointType:]
  +[NWEndpoint endpointWithInternalEndpoint:]
  +[NWEndpoint endpointWithProtocolBufferData:]

  // instance methods
  -[NWEndpoint isEqual:]
  -[NWEndpoint copyWithZone:]
  -[NWEndpoint encodeWithCoder:]
  -[NWEndpoint initWithCoder:]
  -[NWEndpoint .cxx_destruct]
  -[NWEndpoint encodedData]
  -[NWEndpoint interface]
  -[NWEndpoint setInterface:]
  -[NWEndpoint initWithEndpoint:]
  -[NWEndpoint copyCEndpoint]
  -[NWEndpoint descriptionWithIndent:showFullContent:]
  -[NWEndpoint privateDescription]
  -[NWEndpoint txtRecord]
  -[NWEndpoint setTxtRecord:]
  -[NWEndpoint resolveEndpointWithCompletionHandler:]
  -[NWEndpoint initWithEncodedData:]
  -[NWEndpoint parentEndpointDomain]
  -[NWEndpoint alternatePort]
  -[NWEndpoint setAlternatePort:]
  -[NWEndpoint createProtocolBufferObject]
  -[NWEndpoint internalEndpoint]
  -[NWEndpoint setInternalEndpoint:]


NWAWDLibnetcoreTCPTFOStatsReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasNumTfoCookieReq
 @property  unsigned long numTfoCookieReq
 @property  BOOL hasNumTfoCookieRcv
 @property  unsigned long numTfoCookieRcv
 @property  BOOL hasNumTfoFallback
 @property  unsigned long numTfoFallback
 @property  BOOL hasNumTfoSynDataSent
 @property  unsigned long numTfoSynDataSent
 @property  BOOL hasNumTfoSynDataAcked
 @property  unsigned long numTfoSynDataAcked
 @property  BOOL hasNumTfoSynDataRcv
 @property  unsigned long numTfoSynDataRcv
 @property  BOOL hasNumTfoCookieReqRcv
 @property  unsigned long numTfoCookieReqRcv
 @property  BOOL hasNumTfoCookieSent
 @property  unsigned long numTfoCookieSent
 @property  BOOL hasNumTfoCookieInvalid
 @property  unsigned long numTfoCookieInvalid
 @property  BOOL hasNumTfoBlackholed
 @property  unsigned long numTfoBlackholed

  // instance methods
  -[NWAWDLibnetcoreTCPTFOStatsReport isEqual:]
  -[NWAWDLibnetcoreTCPTFOStatsReport copyWithZone:]
  -[NWAWDLibnetcoreTCPTFOStatsReport dictionaryRepresentation]
  -[NWAWDLibnetcoreTCPTFOStatsReport writeTo:]
  -[NWAWDLibnetcoreTCPTFOStatsReport mergeFrom:]
  -[NWAWDLibnetcoreTCPTFOStatsReport readFrom:]
  -[NWAWDLibnetcoreTCPTFOStatsReport copyTo:]
  -[NWAWDLibnetcoreTCPTFOStatsReport setNumTfoCookieReq:]
  -[NWAWDLibnetcoreTCPTFOStatsReport setHasNumTfoCookieReq:]
  -[NWAWDLibnetcoreTCPTFOStatsReport hasNumTfoCookieReq]
  -[NWAWDLibnetcoreTCPTFOStatsReport setNumTfoCookieRcv:]
  -[NWAWDLibnetcoreTCPTFOStatsReport setHasNumTfoCookieRcv:]
  -[NWAWDLibnetcoreTCPTFOStatsReport hasNumTfoCookieRcv]
  -[NWAWDLibnetcoreTCPTFOStatsReport setNumTfoFallback:]
  -[NWAWDLibnetcoreTCPTFOStatsReport setHasNumTfoFallback:]
  -[NWAWDLibnetcoreTCPTFOStatsReport hasNumTfoFallback]
  -[NWAWDLibnetcoreTCPTFOStatsReport setNumTfoSynDataSent:]
  -[NWAWDLibnetcoreTCPTFOStatsReport setHasNumTfoSynDataSent:]
  -[NWAWDLibnetcoreTCPTFOStatsReport hasNumTfoSynDataSent]
  -[NWAWDLibnetcoreTCPTFOStatsReport setNumTfoSynDataAcked:]
  -[NWAWDLibnetcoreTCPTFOStatsReport setHasNumTfoSynDataAcked:]
  -[NWAWDLibnetcoreTCPTFOStatsReport hasNumTfoSynDataAcked]
  -[NWAWDLibnetcoreTCPTFOStatsReport setNumTfoSynDataRcv:]
  -[NWAWDLibnetcoreTCPTFOStatsReport setHasNumTfoSynDataRcv:]
  -[NWAWDLibnetcoreTCPTFOStatsReport hasNumTfoSynDataRcv]
  -[NWAWDLibnetcoreTCPTFOStatsReport setNumTfoCookieReqRcv:]
  -[NWAWDLibnetcoreTCPTFOStatsReport setHasNumTfoCookieReqRcv:]
  -[NWAWDLibnetcoreTCPTFOStatsReport hasNumTfoCookieReqRcv]
  -[NWAWDLibnetcoreTCPTFOStatsReport setNumTfoCookieSent:]
  -[NWAWDLibnetcoreTCPTFOStatsReport setHasNumTfoCookieSent:]
  -[NWAWDLibnetcoreTCPTFOStatsReport hasNumTfoCookieSent]
  -[NWAWDLibnetcoreTCPTFOStatsReport setNumTfoCookieInvalid:]
  -[NWAWDLibnetcoreTCPTFOStatsReport setHasNumTfoCookieInvalid:]
  -[NWAWDLibnetcoreTCPTFOStatsReport hasNumTfoCookieInvalid]
  -[NWAWDLibnetcoreTCPTFOStatsReport setNumTfoBlackholed:]
  -[NWAWDLibnetcoreTCPTFOStatsReport setHasNumTfoBlackholed:]
  -[NWAWDLibnetcoreTCPTFOStatsReport hasNumTfoBlackholed]
  -[NWAWDLibnetcoreTCPTFOStatsReport numTfoCookieReq]
  -[NWAWDLibnetcoreTCPTFOStatsReport numTfoCookieRcv]
  -[NWAWDLibnetcoreTCPTFOStatsReport numTfoFallback]
  -[NWAWDLibnetcoreTCPTFOStatsReport numTfoSynDataSent]
  -[NWAWDLibnetcoreTCPTFOStatsReport numTfoSynDataAcked]
  -[NWAWDLibnetcoreTCPTFOStatsReport numTfoSynDataRcv]
  -[NWAWDLibnetcoreTCPTFOStatsReport numTfoCookieReqRcv]
  -[NWAWDLibnetcoreTCPTFOStatsReport numTfoCookieSent]
  -[NWAWDLibnetcoreTCPTFOStatsReport numTfoCookieInvalid]
  -[NWAWDLibnetcoreTCPTFOStatsReport numTfoBlackholed]


NWPBParameters : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasAccount
 @property  NSString *account
 @property  BOOL hasEffectiveBundleID
 @property  NSString *effectiveBundleID
 @property  BOOL hasEffectiveProcessUUID
 @property  NSString *effectiveProcessUUID
 @property  BOOL hasRealProcessUUID
 @property  NSString *realProcessUUID
 @property  BOOL hasUrl
 @property  NSString *url
 @property  BOOL hasIpProtocol
 @property  unsigned int ipProtocol
 @property  BOOL hasAddressFamily
 @property  unsigned int addressFamily
 @property  BOOL hasTrafficClass
 @property  unsigned int trafficClass
 @property  BOOL hasDataMode
 @property  int dataMode
 @property  BOOL hasRequiredInterfaceType
 @property  int requiredInterfaceType
 @property  BOOL hasProhibitExpensive
 @property  BOOL prohibitExpensive
 @property  BOOL hasFastOpen
 @property  BOOL fastOpen
 @property  BOOL hasReduceBuffering
 @property  BOOL reduceBuffering
 @property  BOOL hasLongOutstandingQueries
 @property  BOOL longOutstandingQueries
 @property  BOOL hasUseAWDL
 @property  BOOL useAWDL
 @property  BOOL hasUseP2P
 @property  BOOL useP2P
 @property  BOOL hasReuseLocalAddress
 @property  BOOL reuseLocalAddress
 @property  BOOL hasNoFallback
 @property  BOOL noFallback
 @property  BOOL hasMultipath
 @property  unsigned int multipathService
 @property  BOOL hasKeepalive
 @property  BOOL keepalive
 @property  BOOL hasLocalEndpoint
 @property  NWPBEndpoint *localEndpoint
 @property  BOOL hasRequiredInterface
 @property  NWPBInterface *requiredInterface
 @property  unsigned long prohibitedInterfaceTypesCount
 @property  ^i prohibitedInterfaceTypes
 @property  unsigned long prohibitedInterfaceSubTypesCount
 @property  ^i prohibitedInterfaceSubTypes
 @property  NSMutableArray *prohibitedInterfaces
 @property  NSMutableArray *prohibitedAgents
 @property  NSMutableArray *requiredAgents
 @property  NSMutableArray *preferredAgents
 @property  BOOL hasMetadata
 @property  NSData *metadata

  // class methods
  +[NWPBParameters prohibitedInterfacesType]
  +[NWPBParameters prohibitedAgentsType]
  +[NWPBParameters requiredAgentsType]
  +[NWPBParameters preferredAgentsType]

  // instance methods
  -[NWPBParameters dealloc]
  -[NWPBParameters isEqual:]
  -[NWPBParameters copyWithZone:]
  -[NWPBParameters .cxx_destruct]
  -[NWPBParameters dictionaryRepresentation]
  -[NWPBParameters url]
  -[NWPBParameters writeTo:]
  -[NWPBParameters setMetadata:]
  -[NWPBParameters metadata]
  -[NWPBParameters account]
  -[NWPBParameters setAccount:]
  -[NWPBParameters mergeFrom:]
  -[NWPBParameters readFrom:]
  -[NWPBParameters copyTo:]
  -[NWPBParameters setUrl:]
  -[NWPBParameters effectiveBundleID]
  -[NWPBParameters setEffectiveBundleID:]
  -[NWPBParameters localEndpoint]
  -[NWPBParameters setLocalEndpoint:]
  -[NWPBParameters hasMetadata]
  -[NWPBParameters setIpProtocol:]
  -[NWPBParameters setHasIpProtocol:]
  -[NWPBParameters hasIpProtocol]
  -[NWPBParameters ipProtocol]
  -[NWPBParameters addressFamily]
  -[NWPBParameters setTrafficClass:]
  -[NWPBParameters setHasTrafficClass:]
  -[NWPBParameters hasTrafficClass]
  -[NWPBParameters trafficClass]
  -[NWPBParameters hasAccount]
  -[NWPBParameters hasEffectiveBundleID]
  -[NWPBParameters hasEffectiveProcessUUID]
  -[NWPBParameters hasRealProcessUUID]
  -[NWPBParameters hasUrl]
  -[NWPBParameters setAddressFamily:]
  -[NWPBParameters setHasAddressFamily:]
  -[NWPBParameters hasAddressFamily]
  -[NWPBParameters dataMode]
  -[NWPBParameters setDataMode:]
  -[NWPBParameters setHasDataMode:]
  -[NWPBParameters hasDataMode]
  -[NWPBParameters dataModeAsString:]
  -[NWPBParameters StringAsDataMode:]
  -[NWPBParameters requiredInterfaceType]
  -[NWPBParameters setRequiredInterfaceType:]
  -[NWPBParameters setHasRequiredInterfaceType:]
  -[NWPBParameters hasRequiredInterfaceType]
  -[NWPBParameters requiredInterfaceTypeAsString:]
  -[NWPBParameters StringAsRequiredInterfaceType:]
  -[NWPBParameters setProhibitExpensive:]
  -[NWPBParameters setHasProhibitExpensive:]
  -[NWPBParameters hasProhibitExpensive]
  -[NWPBParameters setFastOpen:]
  -[NWPBParameters setHasFastOpen:]
  -[NWPBParameters hasFastOpen]
  -[NWPBParameters setReduceBuffering:]
  -[NWPBParameters setHasReduceBuffering:]
  -[NWPBParameters hasReduceBuffering]
  -[NWPBParameters setLongOutstandingQueries:]
  -[NWPBParameters setHasLongOutstandingQueries:]
  -[NWPBParameters hasLongOutstandingQueries]
  -[NWPBParameters setUseAWDL:]
  -[NWPBParameters setHasUseAWDL:]
  -[NWPBParameters hasUseAWDL]
  -[NWPBParameters setUseP2P:]
  -[NWPBParameters setHasUseP2P:]
  -[NWPBParameters hasUseP2P]
  -[NWPBParameters setReuseLocalAddress:]
  -[NWPBParameters setHasReuseLocalAddress:]
  -[NWPBParameters hasReuseLocalAddress]
  -[NWPBParameters setNoFallback:]
  -[NWPBParameters setHasNoFallback:]
  -[NWPBParameters hasNoFallback]
  -[NWPBParameters setMultipathService:]
  -[NWPBParameters setHasMultipath:]
  -[NWPBParameters hasMultipath]
  -[NWPBParameters setKeepalive:]
  -[NWPBParameters setHasKeepalive:]
  -[NWPBParameters hasKeepalive]
  -[NWPBParameters hasLocalEndpoint]
  -[NWPBParameters hasRequiredInterface]
  -[NWPBParameters prohibitedInterfaceTypesCount]
  -[NWPBParameters prohibitedInterfaceTypes]
  -[NWPBParameters clearProhibitedInterfaceTypes]
  -[NWPBParameters addProhibitedInterfaceTypes:]
  -[NWPBParameters prohibitedInterfaceTypesAtIndex:]
  -[NWPBParameters setProhibitedInterfaceTypes:count:]
  -[NWPBParameters prohibitedInterfaceTypesAsString:]
  -[NWPBParameters StringAsProhibitedInterfaceTypes:]
  -[NWPBParameters prohibitedInterfaceSubTypesCount]
  -[NWPBParameters prohibitedInterfaceSubTypes]
  -[NWPBParameters clearProhibitedInterfaceSubTypes]
  -[NWPBParameters addProhibitedInterfaceSubTypes:]
  -[NWPBParameters prohibitedInterfaceSubTypesAtIndex:]
  -[NWPBParameters setProhibitedInterfaceSubTypes:count:]
  -[NWPBParameters prohibitedInterfaceSubTypesAsString:]
  -[NWPBParameters StringAsProhibitedInterfaceSubTypes:]
  -[NWPBParameters clearProhibitedInterfaces]
  -[NWPBParameters addProhibitedInterfaces:]
  -[NWPBParameters prohibitedInterfacesCount]
  -[NWPBParameters prohibitedInterfacesAtIndex:]
  -[NWPBParameters clearProhibitedAgents]
  -[NWPBParameters addProhibitedAgents:]
  -[NWPBParameters prohibitedAgentsCount]
  -[NWPBParameters prohibitedAgentsAtIndex:]
  -[NWPBParameters clearRequiredAgents]
  -[NWPBParameters addRequiredAgents:]
  -[NWPBParameters requiredAgentsCount]
  -[NWPBParameters requiredAgentsAtIndex:]
  -[NWPBParameters clearPreferredAgents]
  -[NWPBParameters addPreferredAgents:]
  -[NWPBParameters preferredAgentsCount]
  -[NWPBParameters preferredAgentsAtIndex:]
  -[NWPBParameters effectiveProcessUUID]
  -[NWPBParameters setEffectiveProcessUUID:]
  -[NWPBParameters realProcessUUID]
  -[NWPBParameters setRealProcessUUID:]
  -[NWPBParameters prohibitExpensive]
  -[NWPBParameters fastOpen]
  -[NWPBParameters reduceBuffering]
  -[NWPBParameters longOutstandingQueries]
  -[NWPBParameters useAWDL]
  -[NWPBParameters useP2P]
  -[NWPBParameters reuseLocalAddress]
  -[NWPBParameters noFallback]
  -[NWPBParameters multipathService]
  -[NWPBParameters keepalive]
  -[NWPBParameters requiredInterface]
  -[NWPBParameters setRequiredInterface:]
  -[NWPBParameters prohibitedInterfaces]
  -[NWPBParameters setProhibitedInterfaces:]
  -[NWPBParameters prohibitedAgents]
  -[NWPBParameters setProhibitedAgents:]
  -[NWPBParameters requiredAgents]
  -[NWPBParameters setRequiredAgents:]
  -[NWPBParameters preferredAgents]
  -[NWPBParameters setPreferredAgents:]


NWAWDNWActivityEpilogue : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasActivity
 @property  NWAWDNWActivity *activity
 @property  BOOL hasDurationMsecs
 @property  unsigned long durationMsecs
 @property  BOOL hasFragmentsQuenched
 @property  unsigned long fragmentsQuenched
 @property  BOOL hasCompletionReason
 @property  int completionReason
 @property  BOOL hasL2Report
 @property  NWAWDNWL2Report *l2Report

  // instance methods
  -[NWAWDNWActivityEpilogue isEqual:]
  -[NWAWDNWActivityEpilogue copyWithZone:]
  -[NWAWDNWActivityEpilogue .cxx_destruct]
  -[NWAWDNWActivityEpilogue activity]
  -[NWAWDNWActivityEpilogue setActivity:]
  -[NWAWDNWActivityEpilogue dictionaryRepresentation]
  -[NWAWDNWActivityEpilogue timestamp]
  -[NWAWDNWActivityEpilogue hasTimestamp]
  -[NWAWDNWActivityEpilogue setTimestamp:]
  -[NWAWDNWActivityEpilogue writeTo:]
  -[NWAWDNWActivityEpilogue mergeFrom:]
  -[NWAWDNWActivityEpilogue readFrom:]
  -[NWAWDNWActivityEpilogue copyTo:]
  -[NWAWDNWActivityEpilogue setHasTimestamp:]
  -[NWAWDNWActivityEpilogue hasL2Report]
  -[NWAWDNWActivityEpilogue l2Report]
  -[NWAWDNWActivityEpilogue setL2Report:]
  -[NWAWDNWActivityEpilogue hasActivity]
  -[NWAWDNWActivityEpilogue setDurationMsecs:]
  -[NWAWDNWActivityEpilogue setHasDurationMsecs:]
  -[NWAWDNWActivityEpilogue hasDurationMsecs]
  -[NWAWDNWActivityEpilogue setFragmentsQuenched:]
  -[NWAWDNWActivityEpilogue setHasFragmentsQuenched:]
  -[NWAWDNWActivityEpilogue hasFragmentsQuenched]
  -[NWAWDNWActivityEpilogue completionReason]
  -[NWAWDNWActivityEpilogue setCompletionReason:]
  -[NWAWDNWActivityEpilogue setHasCompletionReason:]
  -[NWAWDNWActivityEpilogue hasCompletionReason]
  -[NWAWDNWActivityEpilogue completionReasonAsString:]
  -[NWAWDNWActivityEpilogue StringAsCompletionReason:]
  -[NWAWDNWActivityEpilogue durationMsecs]
  -[NWAWDNWActivityEpilogue fragmentsQuenched]


NWPBUpdateBrowse : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasClientUUID
 @property  NSString *clientUUID
 @property  NSMutableArray *discoveredEndpoints

  // class methods
  +[NWPBUpdateBrowse discoveredEndpointsType]

  // instance methods
  -[NWPBUpdateBrowse isEqual:]
  -[NWPBUpdateBrowse copyWithZone:]
  -[NWPBUpdateBrowse .cxx_destruct]
  -[NWPBUpdateBrowse dictionaryRepresentation]
  -[NWPBUpdateBrowse writeTo:]
  -[NWPBUpdateBrowse mergeFrom:]
  -[NWPBUpdateBrowse readFrom:]
  -[NWPBUpdateBrowse copyTo:]
  -[NWPBUpdateBrowse hasClientUUID]
  -[NWPBUpdateBrowse clientUUID]
  -[NWPBUpdateBrowse setClientUUID:]
  -[NWPBUpdateBrowse clearDiscoveredEndpoints]
  -[NWPBUpdateBrowse addDiscoveredEndpoints:]
  -[NWPBUpdateBrowse discoveredEndpointsCount]
  -[NWPBUpdateBrowse discoveredEndpointsAtIndex:]
  -[NWPBUpdateBrowse discoveredEndpoints]
  -[NWPBUpdateBrowse setDiscoveredEndpoints:]


NWNetworkAgentRegistration : NSObject /usr/lib/libSystem.B.dylib
 @property  Class networkAgentClass
 @property  NSObject<NWNetworkAgent> *networkAgent
 @property  NSUUID *registeredUUID
 @property  int registrationSocket
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_source> *readSource
 @property  BOOL registered
 @property  unsigned long useCount

  // class methods
  +[NWNetworkAgentRegistration newRegistrationFileDescriptor]
  +[NWNetworkAgentRegistration addActiveAssertionToNetworkAgent:]
  +[NWNetworkAgentRegistration removeActiveAssertionFromNetworkAgent:]
  +[NWNetworkAgentRegistration useNetworkAgent:returnUseCount:]

  // instance methods
  -[NWNetworkAgentRegistration dealloc]
  -[NWNetworkAgentRegistration setQueue:]
  -[NWNetworkAgentRegistration isRegistered]
  -[NWNetworkAgentRegistration queue]
  -[NWNetworkAgentRegistration .cxx_destruct]
  -[NWNetworkAgentRegistration initWithNetworkAgentClass:]
  -[NWNetworkAgentRegistration initWithNetworkAgentClass:queue:]
  -[NWNetworkAgentRegistration dupRegistrationFileDescriptor]
  -[NWNetworkAgentRegistration handleMessageFromAgent]
  -[NWNetworkAgentRegistration createReadSourceWithRegistrationSocket:]
  -[NWNetworkAgentRegistration registerNetworkAgent:withFileDescriptor:]
  -[NWNetworkAgentRegistration registerNetworkAgent:]
  -[NWNetworkAgentRegistration setRegisteredNetworkAgent:fileDescriptor:]
  -[NWNetworkAgentRegistration updateNetworkAgent:]
  -[NWNetworkAgentRegistration unregisterNetworkAgent]
  -[NWNetworkAgentRegistration addNetworkAgentToInterfaceNamed:]
  -[NWNetworkAgentRegistration removeNetworkAgentFromInterfaceNamed:]
  -[NWNetworkAgentRegistration assignNexusData:toClient:]
  -[NWNetworkAgentRegistration assignDiscoveredEndpoints:toClient:]
  -[NWNetworkAgentRegistration assignResolvedEndpoints:toClient:]
  -[NWNetworkAgentRegistration useCount]
  -[NWNetworkAgentRegistration setUseCount:]
  -[NWNetworkAgentRegistration networkAgentClass]
  -[NWNetworkAgentRegistration setNetworkAgentClass:]
  -[NWNetworkAgentRegistration networkAgent]
  -[NWNetworkAgentRegistration setNetworkAgent:]
  -[NWNetworkAgentRegistration registeredUUID]
  -[NWNetworkAgentRegistration setRegisteredUUID:]
  -[NWNetworkAgentRegistration registrationSocket]
  -[NWNetworkAgentRegistration setRegistrationSocket:]
  -[NWNetworkAgentRegistration readSource]
  -[NWNetworkAgentRegistration setReadSource:]


NWPHContext : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_xpc_object> *connection
 @property  NSObject<OS_xpc_object> *request
 @property  NSObject<OS_xpc_object> *reply
 @property  int pid

  // instance methods
  -[NWPHContext .cxx_destruct]
  -[NWPHContext connection]
  -[NWPHContext setConnection:]
  -[NWPHContext setRequest:]
  -[NWPHContext request]
  -[NWPHContext pid]
  -[NWPHContext reply]
  -[NWPHContext initWithRequest:onConnection:]
  -[NWPHContext setReply:]


NWPHHandler : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *allowedEntitlementGroup
 @property  ^? handlerFunction

  // instance methods
  -[NWPHHandler .cxx_destruct]
  -[NWPHHandler initWithHandlerFunction:allowedEntitlementGroup:]
  -[NWPHHandler allowedEntitlementGroup]
  -[NWPHHandler setAllowedEntitlementGroup:]
  -[NWPHHandler handlerFunction]
  -[NWPHHandler setHandlerFunction:]


NWPrivilegedHelper : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_xpc_object> *listener
 @property  NSMutableDictionary *handlers
 @property  NSMutableSet *allKnownEntitlementSet
 @property  NSMutableArray *allKnownEntitlementGroup

  // instance methods
  -[NWPrivilegedHelper setQueue:]
  -[NWPrivilegedHelper queue]
  -[NWPrivilegedHelper listener]
  -[NWPrivilegedHelper .cxx_destruct]
  -[NWPrivilegedHelper initWithQueue:]
  -[NWPrivilegedHelper setListener:]
  -[NWPrivilegedHelper registerHandlerFunction:type:allowedEntitlementGroup:]
  -[NWPrivilegedHelper registerHelperFunctions]
  -[NWPrivilegedHelper startXPCListener]
  -[NWPrivilegedHelper startThrottlePolicyEventListener]
  -[NWPrivilegedHelper handleRequest:onConnection:]
  -[NWPrivilegedHelper handlers]
  -[NWPrivilegedHelper setHandlers:]
  -[NWPrivilegedHelper allKnownEntitlementSet]
  -[NWPrivilegedHelper setAllKnownEntitlementSet:]
  -[NWPrivilegedHelper allKnownEntitlementGroup]
  -[NWPrivilegedHelper setAllKnownEntitlementGroup:]


NWUDPSession : NSObject /usr/lib/libSystem.B.dylib
 @property  NWDatagramConnection *connection
 @property  unsigned long maxReadDatagrams
 @property  @? readHandler
 @property  NWEndpoint *resolvedEndpoint
 @property  NWPath *currentPath
 @property  BOOL viable
 @property  BOOL hasBetterPath
 @property  long long state
 @property  unsigned long internalMTU
 @property  NWParameters *parameters
 @property  NSString *localPort
 @property  NSString *privateDescription
 @property  NWEndpoint *endpoint
 @property  unsigned long maximumDatagramLength

  // class methods
  +[NWUDPSession automaticallyNotifiesObserversForKey:]

  // instance methods
  -[NWUDPSession dealloc]
  -[NWUDPSession .cxx_destruct]
  -[NWUDPSession cancel]
  -[NWUDPSession endpoint]
  -[NWUDPSession observeValueForKeyPath:ofObject:change:context:]
  -[NWUDPSession state]
  -[NWUDPSession localPort]
  -[NWUDPSession connection]
  -[NWUDPSession setConnection:]
  -[NWUDPSession initWithConnection:]
  -[NWUDPSession setState:]
  -[NWUDPSession parameters]
  -[NWUDPSession initWithEndpoint:parameters:]
  -[NWUDPSession currentPath]
  -[NWUDPSession setCurrentPath:]
  -[NWUDPSession descriptionWithIndent:showFullContent:]
  -[NWUDPSession privateDescription]
  -[NWUDPSession setupEventHandler]
  -[NWUDPSession isViable]
  -[NWUDPSession setViable:]
  -[NWUDPSession hasBetterPath]
  -[NWUDPSession setHasBetterPath:]
  -[NWUDPSession initWithUpgradeForSession:]
  -[NWUDPSession tryNextResolvedEndpoint]
  -[NWUDPSession maximumDatagramLength]
  -[NWUDPSession readInternal]
  -[NWUDPSession setReadHandler:maxDatagrams:]
  -[NWUDPSession writeMultipleDatagrams:completionHandler:]
  -[NWUDPSession writeDatagram:completionHandler:]
  -[NWUDPSession resolvedEndpoint]
  -[NWUDPSession setResolvedEndpoint:]
  -[NWUDPSession maxReadDatagrams]
  -[NWUDPSession setMaxReadDatagrams:]
  -[NWUDPSession readHandler]
  -[NWUDPSession setReadHandler:]
  -[NWUDPSession internalMTU]
  -[NWUDPSession setInternalMTU:]


NWRemoteConnectionWriteRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *data
 @property  NSUUID *clientID

  // instance methods
  -[NWRemoteConnectionWriteRequest .cxx_destruct]
  -[NWRemoteConnectionWriteRequest data]
  -[NWRemoteConnectionWriteRequest setData:]
  -[NWRemoteConnectionWriteRequest setClientID:]
  -[NWRemoteConnectionWriteRequest clientID]
  -[NWRemoteConnectionWriteRequest initWithData:clientID:]


NWRemoteConnectionDirector : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<NWRemoteConnectionDirectorDelegate> *delegate
 @property  ^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v} directorProtocol
 @property  ^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v} defaultOutputHandler
 @property  ^{nw_hash_table=} protocolHashTable
 @property  NSMutableArray *writeRequests
 @property  ^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v} protocol
 @property  unsigned long maximumDataChunkSize

  // instance methods
  -[NWRemoteConnectionDirector dealloc]
  -[NWRemoteConnectionDirector delegate]
  -[NWRemoteConnectionDirector setDelegate:]
  -[NWRemoteConnectionDirector .cxx_destruct]
  -[NWRemoteConnectionDirector protocol]
  -[NWRemoteConnectionDirector initWithDelegate:]
  -[NWRemoteConnectionDirector setDefaultOutputProtocolHandler:]
  -[NWRemoteConnectionDirector writeRequests]
  -[NWRemoteConnectionDirector setWriteRequests:]
  -[NWRemoteConnectionDirector defaultOutputHandler]
  -[NWRemoteConnectionDirector setDefaultOutputHandler:]
  -[NWRemoteConnectionDirector createOpenConnectionMessageForClientID:endpoint:parameters:]
  -[NWRemoteConnectionDirector createCloseConnectionMessageForClientID:]
  -[NWRemoteConnectionDirector createStartBrowseMessageForClientID:descriptor:parameters:]
  -[NWRemoteConnectionDirector createStopBrowseMessageForClientID:]
  -[NWRemoteConnectionDirector createSendDataMessageForClientID:data:receiveWindow:]
  -[NWRemoteConnectionDirector receiveRemoteReply:]
  -[NWRemoteConnectionDirector dataModeForFlowID:]
  -[NWRemoteConnectionDirector outputHandlerForFlowID:]
  -[NWRemoteConnectionDirector setOutputProtocolHandler:forFlowID:dataMode:]
  -[NWRemoteConnectionDirector receiveData:forClient:]
  -[NWRemoteConnectionDirector maximumDataChunkSize]
  -[NWRemoteConnectionDirector setMaximumDataChunkSize:]
  -[NWRemoteConnectionDirector directorProtocol]
  -[NWRemoteConnectionDirector setDirectorProtocol:]
  -[NWRemoteConnectionDirector protocolHashTable]
  -[NWRemoteConnectionDirector setProtocolHashTable:]


NWNetworkDescription : NSObject /usr/lib/libSystem.B.dylib
 @property  long long state
 @property  NSString *privateDescription
 @property  NSSet *interfaceTypeOptions
 @property  NSSet *ssidOptions
 @property  NSSet *dnsSearchDomainOptions
 @property  NSSet *dnsServerAddressOptions
 @property  long long roamingPreference
 @property  NSURL *probeURL

  // class methods
  +[NWNetworkDescription getNewStateFromPathMatch:oldState:probeExists:]

  // instance methods
  -[NWNetworkDescription isEqual:]
  -[NWNetworkDescription copyWithZone:]
  -[NWNetworkDescription .cxx_destruct]
  -[NWNetworkDescription state]
  -[NWNetworkDescription setState:]
  -[NWNetworkDescription descriptionWithIndent:showFullContent:]
  -[NWNetworkDescription privateDescription]
  -[NWNetworkDescription matchesPath:]
  -[NWNetworkDescription updateStateWithPath:]
  -[NWNetworkDescription interfaceTypeOptions]
  -[NWNetworkDescription setInterfaceTypeOptions:]
  -[NWNetworkDescription ssidOptions]
  -[NWNetworkDescription setSsidOptions:]
  -[NWNetworkDescription dnsSearchDomainOptions]
  -[NWNetworkDescription setDnsSearchDomainOptions:]
  -[NWNetworkDescription dnsServerAddressOptions]
  -[NWNetworkDescription setDnsServerAddressOptions:]
  -[NWNetworkDescription roamingPreference]
  -[NWNetworkDescription setRoamingPreference:]
  -[NWNetworkDescription probeURL]
  -[NWNetworkDescription setProbeURL:]


NWUDPListener : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_nw_listener> *internalListener
 @property  NWParameters *parameters
 @property  NWEndpoint *endpoint
 @property  <NWUDPListenerDelegate> *delegate
 @property  NSError *error
 @property  NWEndpoint *localEndpoint

  // instance methods
  -[NWUDPListener delegate]
  -[NWUDPListener setDelegate:]
  -[NWUDPListener handleError:]
  -[NWUDPListener .cxx_destruct]
  -[NWUDPListener error]
  -[NWUDPListener endpoint]
  -[NWUDPListener setError:]
  -[NWUDPListener parameters]
  -[NWUDPListener setEndpoint:]
  -[NWUDPListener setParameters:]
  -[NWUDPListener initWithParameters:delegate:]
  -[NWUDPListener localEndpoint]
  -[NWUDPListener setLocalEndpoint:]
  -[NWUDPListener handleConnection:]
  -[NWUDPListener internalListener]
  -[NWUDPListener setInternalListener:]


NWParameters : NSObject /usr/lib/libSystem.B.dylib <NWPrettyDescription, NSSecureCoding, NSCopying>
 @property  NSObject<OS_nw_parameters> *internalParameters
 @property  BOOL indefinite
 @property  BOOL noProxy
 @property  BOOL valid
 @property  BOOL dryRun
 @property  BOOL prohibitCellular
 @property  BOOL prohibitFallback
 @property  BOOL discretionary
 @property  BOOL allowSocketAccess
 @property  NSUUID *parentID
 @property  NSSet *SSLCipherSuitesInternal
 @property  unsigned long minimumSSLProtocolVersionInternal
 @property  unsigned long maximumSSLProtocolVersionInternal
 @property  unsigned char transportProtocol
 @property  BOOL keepAlive
 @property  unsigned long keepAliveIdleTime
 @property  unsigned long keepAliveInterval
 @property  BOOL keepAliveOffload
 @property  BOOL httpsProxyIsOpaque
 @property  BOOL httpsProxyOverTLS
 @property  BOOL attachProtocolListener
 @property  BOOL prohibitJoiningProtocols
 @property  BOOL allowJoiningConnectedFd
 @property  BOOL allowDuplicateStateUpdates
 @property  BOOL trustInvalidCertificates
 @property  NSString *privateDescription
 @property  unsigned char ipProtocol
 @property  int pid
 @property  unsigned int uid
 @property  NSUUID *processUUID
 @property  NSUUID *effectiveProcessUUID
 @property  NSString *effectiveBundleID
 @property  BOOL useLongOutstandingQueries
 @property  BOOL ignoreResolverStats
 @property  BOOL useAWDL
 @property  BOOL useP2P
 @property  BOOL resolvePTR
 @property  BOOL multipath
 @property  int multipathService
 @property  BOOL multipathForceEnable
 @property  unsigned char requiredAddressFamily
 @property  NSURL *url
 @property  NSURL *sanitizedURL
 @property  NSDictionary *proxyConfiguration
 @property  NWAddressEndpoint *localAddress
 @property  BOOL reuseLocalAddress
 @property  NWInterface *requiredInterface
 @property  long long requiredInterfaceType
 @property  long long requiredInterfaceSubtype
 @property  BOOL enableTFO
 @property  BOOL enableTFONoCookie
 @property  BOOL useTFOHeuristics
 @property  BOOL fastOpenForceEnable
 @property  BOOL enableSFO
 @property  NSData *metadata
 @property  BOOL prohibitRoaming
 @property  NSArray *protocolTransforms
 @property  BOOL allowUnusableAddresses
 @property  BOOL preferNoProxy
 @property  NSString *account
 @property  unsigned long dataMode
 @property  unsigned long trafficClass
 @property  BOOL prohibitExpensivePaths
 @property  BOOL prohibitConstrainedPaths
 @property  BOOL reduceBuffering
 @property  BOOL disableNagleAlgorithm
 @property  BOOL enableTLS
 @property  NSData *TLSSessionID
 @property  NSSet *SSLCipherSuites
 @property  unsigned long minimumSSLProtocolVersion
 @property  unsigned long maximumSSLProtocolVersion

  // class methods
  +[NWParameters supportsSecureCoding]
  +[NWParameters parametersWithCParameters:]
  +[NWParameters parametersWithProtocolBufferData:]

  // instance methods
  -[NWParameters init]
  -[NWParameters isEqual:]
  -[NWParameters copyWithZone:]
  -[NWParameters isValid]
  -[NWParameters encodeWithCoder:]
  -[NWParameters initWithCoder:]
  -[NWParameters .cxx_destruct]
  -[NWParameters url]
  -[NWParameters uid]
  -[NWParameters setDiscretionary:]
  -[NWParameters initWithParameters:]
  -[NWParameters setMetadata:]
  -[NWParameters metadata]
  -[NWParameters account]
  -[NWParameters setAccount:]
  -[NWParameters setUrl:]
  -[NWParameters setUid:]
  -[NWParameters setPid:]
  -[NWParameters pid]
  -[NWParameters effectiveBundleID]
  -[NWParameters setEffectiveBundleID:]
  -[NWParameters isDiscretionary]
  -[NWParameters setMultipath:]
  -[NWParameters localAddress]
  -[NWParameters descriptionWithIndent:showFullContent:]
  -[NWParameters privateDescription]
  -[NWParameters ipProtocol]
  -[NWParameters setTrafficClass:]
  -[NWParameters trafficClass]
  -[NWParameters createProtocolBufferObject]
  -[NWParameters dataMode]
  -[NWParameters setDataMode:]
  -[NWParameters requiredInterfaceType]
  -[NWParameters setRequiredInterfaceType:]
  -[NWParameters setReduceBuffering:]
  -[NWParameters setUseAWDL:]
  -[NWParameters setUseP2P:]
  -[NWParameters setReuseLocalAddress:]
  -[NWParameters setMultipathService:]
  -[NWParameters effectiveProcessUUID]
  -[NWParameters setEffectiveProcessUUID:]
  -[NWParameters reduceBuffering]
  -[NWParameters useAWDL]
  -[NWParameters useP2P]
  -[NWParameters reuseLocalAddress]
  -[NWParameters multipathService]
  -[NWParameters requiredInterface]
  -[NWParameters setRequiredInterface:]
  -[NWParameters copyCParameters]
  -[NWParameters trustInvalidCertificates]
  -[NWParameters setTrustInvalidCertificates:]
  -[NWParameters setAllowSocketAccess:]
  -[NWParameters allowSocketAccess]
  -[NWParameters transportProtocol]
  -[NWParameters hasDelegatedPIDForOriginatingPID:]
  -[NWParameters processUUID]
  -[NWParameters setProcessUUID:]
  -[NWParameters hasDelegatedProcessUUID]
  -[NWParameters copyEffectiveAuditToken:]
  -[NWParameters parentID]
  -[NWParameters setParentID:]
  -[NWParameters requiredAddressFamily]
  -[NWParameters setRequiredAddressFamily:]
  -[NWParameters setLocalAddress:]
  -[NWParameters sanitizedURL]
  -[NWParameters proxyConfiguration]
  -[NWParameters setProxyConfiguration:]
  -[NWParameters prohibitExpensivePaths]
  -[NWParameters setProhibitExpensivePaths:]
  -[NWParameters prohibitConstrainedPaths]
  -[NWParameters setProhibitConstrainedPaths:]
  -[NWParameters prohibitRoaming]
  -[NWParameters setProhibitRoaming:]
  -[NWParameters prohibitCellular]
  -[NWParameters prohibitInterfaceType:]
  -[NWParameters prohibitInterfaceSubtype:]
  -[NWParameters prohibitInterface:]
  -[NWParameters prohibitNetworkAgentWithUUID:]
  -[NWParameters prohibitNetworkAgentsWithDomain:type:]
  -[NWParameters requiredInterfaceSubtype]
  -[NWParameters setRequiredInterfaceSubtype:]
  -[NWParameters requireNetworkAgentWithUUID:]
  -[NWParameters requireNetworkAgentWithDomain:type:]
  -[NWParameters preferNetworkAgentWithUUID:]
  -[NWParameters preferNetworkAgentWithDomain:type:]
  -[NWParameters avoidNetworkAgentWithUUID:]
  -[NWParameters avoidNetworkAgentWithDomain:type:]
  -[NWParameters enableTFO]
  -[NWParameters setEnableTFO:]
  -[NWParameters enableTFONoCookie]
  -[NWParameters setEnableTFONoCookie:]
  -[NWParameters useTFOHeuristics]
  -[NWParameters setUseTFOHeuristics:]
  -[NWParameters fastOpenForceEnable]
  -[NWParameters setFastOpenForceEnable:]
  -[NWParameters disableNagleAlgorithm]
  -[NWParameters setDisableNagleAlgorithm:]
  -[NWParameters useLongOutstandingQueries]
  -[NWParameters setUseLongOutstandingQueries:]
  -[NWParameters ignoreResolverStats]
  -[NWParameters setIgnoreResolverStats:]
  -[NWParameters resolvePTR]
  -[NWParameters setResolvePTR:]
  -[NWParameters multipath]
  -[NWParameters multipathForceEnable]
  -[NWParameters setMultipathForceEnable:]
  -[NWParameters indefinite]
  -[NWParameters setIndefinite:]
  -[NWParameters noProxy]
  -[NWParameters setNoProxy:]
  -[NWParameters enableTLS]
  -[NWParameters setEnableTLS:]
  -[NWParameters TLSSessionID]
  -[NWParameters setTLSSessionID:]
  -[NWParameters SSLCipherSuites]
  -[NWParameters setSSLCipherSuites:]
  -[NWParameters keepAlive]
  -[NWParameters setKeepAlive:]
  -[NWParameters keepAliveIdleTime]
  -[NWParameters setKeepAliveIdleTime:]
  -[NWParameters keepAliveInterval]
  -[NWParameters setKeepAliveInterval:]
  -[NWParameters keepAliveOffload]
  -[NWParameters setKeepAliveOffload:]
  -[NWParameters tlsVersionWithSSLProtocol:]
  -[NWParameters setMinimumSSLProtocolVersion:]
  -[NWParameters minimumSSLProtocolVersion]
  -[NWParameters setMaximumSSLProtocolVersion:]
  -[NWParameters maximumSSLProtocolVersion]
  -[NWParameters setSourceApplicationWithToken:]
  -[NWParameters setSourceApplicationWithBundleID:]
  -[NWParameters setInitialDataPayload:]
  -[NWParameters setProtocolTransforms:]
  -[NWParameters protocolTransforms]
  -[NWParameters prohibitFallback]
  -[NWParameters setProhibitFallback:]
  -[NWParameters hasRequiredNetworkAgents]
  -[NWParameters hasPreferredNetworkAgents]
  -[NWParameters hasProhibitedNetworkAgents]
  -[NWParameters hasNonEmptyProxyConfiguration]
  -[NWParameters isDryRun]
  -[NWParameters copyRequiredAgentsDescription]
  -[NWParameters setProtocolAtLevel:protocol:]
  -[NWParameters setAllowUnusableAddresses:]
  -[NWParameters allowUnusableAddresses]
  -[NWParameters setPreferNoProxy:]
  -[NWParameters preferNoProxy]
  -[NWParameters setHttpsProxyIsOpaque:]
  -[NWParameters httpsProxyIsOpaque]
  -[NWParameters setHttpsProxyOverTLS:]
  -[NWParameters httpsProxyOverTLS]
  -[NWParameters setAttachProtocolListener:]
  -[NWParameters attachProtocolListener]
  -[NWParameters setProhibitJoiningProtocols:]
  -[NWParameters prohibitJoiningProtocols]
  -[NWParameters setAllowJoiningConnectedFd:]
  -[NWParameters allowJoiningConnectedFd]
  -[NWParameters setAllowDuplicateStateUpdates:]
  -[NWParameters allowDuplicateStateUpdates]
  -[NWParameters internalParameters]
  -[NWParameters setInternalParameters:]
  -[NWParameters SSLCipherSuitesInternal]
  -[NWParameters setSSLCipherSuitesInternal:]
  -[NWParameters minimumSSLProtocolVersionInternal]
  -[NWParameters setMinimumSSLProtocolVersionInternal:]
  -[NWParameters maximumSSLProtocolVersionInternal]
  -[NWParameters setMaximumSSLProtocolVersionInternal:]
  -[NWParameters enableSFO]
  -[NWParameters setEnableSFO:]


NWGenericNetworkAgent : NSObject /usr/lib/libSystem.B.dylib <NWPrettyDescription>
 @property  ^{netagent=[16C][32c][32c][128c]II[0C]} internalNetagent
 @property  NSString *privateDescription
 @property  NSString *agentDomain
 @property  NSString *agentType
 @property  NSString *agentDescription
 @property  NSUUID *agentUUID
 @property  BOOL active
 @property  BOOL kernelActivated
 @property  BOOL userActivated
 @property  BOOL voluntary
 @property  BOOL specificUseOnly
 @property  BOOL networkProvider

  // instance methods
  -[NWGenericNetworkAgent dealloc]
  -[NWGenericNetworkAgent isActive]
  -[NWGenericNetworkAgent descriptionWithIndent:showFullContent:]
  -[NWGenericNetworkAgent privateDescription]
  -[NWGenericNetworkAgent agentDescription]
  -[NWGenericNetworkAgent initWithKernelAgent:]
  -[NWGenericNetworkAgent agentDomain]
  -[NWGenericNetworkAgent agentType]
  -[NWGenericNetworkAgent agentUUID]
  -[NWGenericNetworkAgent isKernelActivated]
  -[NWGenericNetworkAgent isUserActivated]
  -[NWGenericNetworkAgent isVoluntary]
  -[NWGenericNetworkAgent isSpecificUseOnly]
  -[NWGenericNetworkAgent isNetworkProvider]
  -[NWGenericNetworkAgent isNexusProvider]
  -[NWGenericNetworkAgent supportsBrowse]
  -[NWGenericNetworkAgent requiresAssert]
  -[NWGenericNetworkAgent supportsResolve]
  -[NWGenericNetworkAgent internalNetagent]
  -[NWGenericNetworkAgent setInternalNetagent:]


NWPBAddressEndpoint : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasAddress
 @property  NSData *address

  // instance methods
  -[NWPBAddressEndpoint isEqual:]
  -[NWPBAddressEndpoint copyWithZone:]
  -[NWPBAddressEndpoint .cxx_destruct]
  -[NWPBAddressEndpoint dictionaryRepresentation]
  -[NWPBAddressEndpoint address]
  -[NWPBAddressEndpoint writeTo:]
  -[NWPBAddressEndpoint mergeFrom:]
  -[NWPBAddressEndpoint readFrom:]
  -[NWPBAddressEndpoint copyTo:]
  -[NWPBAddressEndpoint setAddress:]
  -[NWPBAddressEndpoint hasAddress]


NWBonjourServiceEndpoint : NWEndpoint
 @property  NSString *name
 @property  NSString *type
 @property  NSString *domain

  // class methods
  +[NWBonjourServiceEndpoint endpointType]
  +[NWBonjourServiceEndpoint endpointWithName:type:domain:]

  // instance methods
  -[NWBonjourServiceEndpoint name]
  -[NWBonjourServiceEndpoint domain]
  -[NWBonjourServiceEndpoint type]
  -[NWBonjourServiceEndpoint descriptionWithIndent:showFullContent:]


NWPath : NSObject /usr/lib/libSystem.B.dylib <NWPrettyDescription>
 @property  NSObject<OS_nw_path> *internalPath
 @property  unsigned int fallbackInterfaceIndex
 @property  BOOL fallbackIsWeak
 @property  BOOL fallbackEligible
 @property  NSArray *dnsServersAsStrings
 @property  NSArray *gateways
 @property  NSArray *flows
 @property  NSString *statusAsString
 @property  NWInterface *connectedInterface
 @property  BOOL listener
 @property  BOOL viable
 @property  NSUUID *clientID
 @property  NWInterface *interface
 @property  NWInterface *scopedInterface
 @property  NWInterface *fallbackInterface
 @property  BOOL flowDivert
 @property  unsigned int flowDivertControlUnit
 @property  BOOL filtered
 @property  unsigned int filterControlUnit
 @property  int dnsServiceID
 @property  BOOL local
 @property  BOOL direct
 @property  unsigned int policyID
 @property  BOOL roaming
 @property  long long mtu
 @property  long long maximumDatagramSize
 @property  unsigned long secondsSinceInterfaceChange
 @property  long long reason
 @property  NSString *reasonDescription
 @property  NSString *privateDescription
 @property  NWParameters *derivedParameters
 @property  BOOL supportsIPv4
 @property  BOOL supportsIPv6
 @property  BOOL supportsDNS
 @property  BOOL eligibleForCrazyIvan46
 @property  NWEndpoint *endpoint
 @property  NWParameters *parameters
 @property  NWEndpoint *effectiveLocalEndpoint
 @property  NWEndpoint *effectiveRemoteEndpoint
 @property  NSArray *proxySettings
 @property  NSArray *dnsServers
 @property  NSArray *dnsSearchDomains
 @property  BOOL hasBrowseDescriptor
 @property  NWBrowseDescriptor *browseDescriptor
 @property  BOOL hasAdvertiseDescriptor
 @property  NWAdvertiseDescriptor *advertiseDescriptor
 @property  BOOL perAppVPN
 @property  long long status
 @property  BOOL expensive
 @property  BOOL constrained

  // class methods
  +[NWPath createStringFromStatus:]
  +[NWPath allClientIDs]
  +[NWPath pathForClientID:]
  +[NWPath pathWithProtocolBufferData:]

  // instance methods
  -[NWPath init]
  -[NWPath reason]
  -[NWPath .cxx_destruct]
  -[NWPath initWithPath:]
  -[NWPath endpoint]
  -[NWPath status]
  -[NWPath interface]
  -[NWPath parameters]
  -[NWPath flows]
  -[NWPath gateways]
  -[NWPath isExpensive]
  -[NWPath isConstrained]
  -[NWPath isLocal]
  -[NWPath clientID]
  -[NWPath isDirect]
  -[NWPath descriptionWithIndent:showFullContent:]
  -[NWPath privateDescription]
  -[NWPath isViable]
  -[NWPath fallbackEligible]
  -[NWPath secondsSinceInterfaceChange]
  -[NWPath internalPath]
  -[NWPath createProtocolBufferObject]
  -[NWPath statusAsString]
  -[NWPath isEqualToPath:]
  -[NWPath isListener]
  -[NWPath isPerAppVPN]
  -[NWPath shouldProbeConnectivity]
  -[NWPath isLinkQualityAbort]
  -[NWPath isListenerInterfaceSpecific]
  -[NWPath usesInterfaceType:]
  -[NWPath usesNetworkAgentType:]
  -[NWPath usesNetworkAgent:]
  -[NWPath networkAgentsOfType:]
  -[NWPath genericNetworkAgentsWithDomain:type:]
  -[NWPath inactiveNetworkAgentUUIDsOnlyVoluntary:]
  -[NWPath scopedInterface]
  -[NWPath delegateInterface]
  -[NWPath fallbackInterface]
  -[NWPath dnsServers]
  -[NWPath dnsServersAsStrings]
  -[NWPath dnsSearchDomains]
  -[NWPath mtu]
  -[NWPath maximumDatagramSize]
  -[NWPath reasonDescription]
  -[NWPath isFlowDivert]
  -[NWPath flowDivertControlUnit]
  -[NWPath copyFlowDivertToken]
  -[NWPath unsatisfiedVoluntaryAgentMatchesAddress:triggerImmediately:]
  -[NWPath hasUnsatisfiedFallbackAgent]
  -[NWPath dnsServiceID]
  -[NWPath isFiltered]
  -[NWPath filterControlUnit]
  -[NWPath policyID]
  -[NWPath isRoaming]
  -[NWPath effectiveLocalEndpoint]
  -[NWPath effectiveRemoteEndpoint]
  -[NWPath connectedInterface]
  -[NWPath hasBrowseDescriptor]
  -[NWPath browseDescriptor]
  -[NWPath hasAdvertiseDescriptor]
  -[NWPath advertiseDescriptor]
  -[NWPath derivedParameters]
  -[NWPath fallbackInterfaceIndex]
  -[NWPath fallbackIsWeak]
  -[NWPath proxySettings]
  -[NWPath supportsIPv4]
  -[NWPath supportsIPv6]
  -[NWPath supportsDNS]
  -[NWPath isEligibleForCrazyIvan46]


NWPathFlow : NSObject /usr/lib/libSystem.B.dylib <NWPrettyDescription>
 @property  NSObject<OS_nw_path_flow> *internalPathFlow
 @property  NWInterface *interface
 @property  NWEndpoint *localEndpoint
 @property  NWEndpoint *remoteEndpoint
 @property  NSUUID *flowID
 @property  NSUUID *nexusAgent
 @property  NSUUID *nexusInstance
 @property  unsigned int nexusPort
 @property  BOOL viable
 @property  BOOL assigned
 @property  BOOL local
 @property  BOOL direct
 @property  BOOL defunct
 @property  BOOL supportsIPv4
 @property  BOOL supportsIPv6

  // instance methods
  -[NWPathFlow .cxx_destruct]
  -[NWPathFlow interface]
  -[NWPathFlow localEndpoint]
  -[NWPathFlow remoteEndpoint]
  -[NWPathFlow isLocal]
  -[NWPathFlow isDirect]
  -[NWPathFlow descriptionWithIndent:showFullContent:]
  -[NWPathFlow privateDescription]
  -[NWPathFlow isViable]
  -[NWPathFlow supportsIPv4]
  -[NWPathFlow supportsIPv6]
  -[NWPathFlow initWithPathFlow:]
  -[NWPathFlow flowID]
  -[NWPathFlow nexusAgent]
  -[NWPathFlow nexusInstance]
  -[NWPathFlow nexusPort]
  -[NWPathFlow isAssigned]
  -[NWPathFlow isDefunct]
  -[NWPathFlow internalPathFlow]


NWRemoteConnectionWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  NSUUID *clientID
 @property  NWConnection *connection

  // instance methods
  -[NWRemoteConnectionWrapper .cxx_destruct]
  -[NWRemoteConnectionWrapper connection]
  -[NWRemoteConnectionWrapper setConnection:]
  -[NWRemoteConnectionWrapper setClientID:]
  -[NWRemoteConnectionWrapper clientID]


NWRemoteBrowserWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  NSUUID *clientID
 @property  NWBrowser *browser

  // instance methods
  -[NWRemoteBrowserWrapper .cxx_destruct]
  -[NWRemoteBrowserWrapper setClientID:]
  -[NWRemoteBrowserWrapper clientID]
  -[NWRemoteBrowserWrapper browser]
  -[NWRemoteBrowserWrapper setBrowser:]


NWRemoteConnectionActor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<NWRemoteConnectionActorDelegate> *delegate
 @property  NSMutableDictionary *connections
 @property  NSMutableDictionary *browsers

  // instance methods
  -[NWRemoteConnectionActor delegate]
  -[NWRemoteConnectionActor setDelegate:]
  -[NWRemoteConnectionActor .cxx_destruct]
  -[NWRemoteConnectionActor observeValueForKeyPath:ofObject:change:context:]
  -[NWRemoteConnectionActor initWithDelegate:]
  -[NWRemoteConnectionActor connections]
  -[NWRemoteConnectionActor setConnections:]
  -[NWRemoteConnectionActor updatePathForConnection:]
  -[NWRemoteConnectionActor sendData:forConnection:]
  -[NWRemoteConnectionActor updateEndpointsForBrowser:]
  -[NWRemoteConnectionActor scheduleReadsOnConnection:]
  -[NWRemoteConnectionActor receiveRemoteCommand:]
  -[NWRemoteConnectionActor browsers]
  -[NWRemoteConnectionActor setBrowsers:]


NWAWDLibnetcoreMbufStatsReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasMbuf256BTotal
 @property  unsigned long mbuf256BTotal
 @property  BOOL hasMbuf2KBTotal
 @property  unsigned long mbuf2KBTotal
 @property  BOOL hasMbuf4KBTotal
 @property  unsigned long mbuf4KBTotal
 @property  BOOL hasMbuf16KBTotal
 @property  unsigned long mbuf16KBTotal
 @property  BOOL hasSockMBcnt
 @property  unsigned long sockMBcnt
 @property  BOOL hasSockAtMBLimit
 @property  unsigned long sockAtMBLimit
 @property  BOOL hasMbufMemReleased
 @property  unsigned long mbufMemReleased
 @property  BOOL hasMbufDrainCount
 @property  unsigned long mbufDrainCount

  // instance methods
  -[NWAWDLibnetcoreMbufStatsReport isEqual:]
  -[NWAWDLibnetcoreMbufStatsReport copyWithZone:]
  -[NWAWDLibnetcoreMbufStatsReport dictionaryRepresentation]
  -[NWAWDLibnetcoreMbufStatsReport writeTo:]
  -[NWAWDLibnetcoreMbufStatsReport mergeFrom:]
  -[NWAWDLibnetcoreMbufStatsReport readFrom:]
  -[NWAWDLibnetcoreMbufStatsReport copyTo:]
  -[NWAWDLibnetcoreMbufStatsReport setMbuf256BTotal:]
  -[NWAWDLibnetcoreMbufStatsReport setHasMbuf256BTotal:]
  -[NWAWDLibnetcoreMbufStatsReport hasMbuf256BTotal]
  -[NWAWDLibnetcoreMbufStatsReport setMbuf2KBTotal:]
  -[NWAWDLibnetcoreMbufStatsReport setHasMbuf2KBTotal:]
  -[NWAWDLibnetcoreMbufStatsReport hasMbuf2KBTotal]
  -[NWAWDLibnetcoreMbufStatsReport setMbuf4KBTotal:]
  -[NWAWDLibnetcoreMbufStatsReport setHasMbuf4KBTotal:]
  -[NWAWDLibnetcoreMbufStatsReport hasMbuf4KBTotal]
  -[NWAWDLibnetcoreMbufStatsReport setMbuf16KBTotal:]
  -[NWAWDLibnetcoreMbufStatsReport setHasMbuf16KBTotal:]
  -[NWAWDLibnetcoreMbufStatsReport hasMbuf16KBTotal]
  -[NWAWDLibnetcoreMbufStatsReport setSockMBcnt:]
  -[NWAWDLibnetcoreMbufStatsReport setHasSockMBcnt:]
  -[NWAWDLibnetcoreMbufStatsReport hasSockMBcnt]
  -[NWAWDLibnetcoreMbufStatsReport setSockAtMBLimit:]
  -[NWAWDLibnetcoreMbufStatsReport setHasSockAtMBLimit:]
  -[NWAWDLibnetcoreMbufStatsReport hasSockAtMBLimit]
  -[NWAWDLibnetcoreMbufStatsReport setMbufMemReleased:]
  -[NWAWDLibnetcoreMbufStatsReport setHasMbufMemReleased:]
  -[NWAWDLibnetcoreMbufStatsReport hasMbufMemReleased]
  -[NWAWDLibnetcoreMbufStatsReport setMbufDrainCount:]
  -[NWAWDLibnetcoreMbufStatsReport setHasMbufDrainCount:]
  -[NWAWDLibnetcoreMbufStatsReport hasMbufDrainCount]
  -[NWAWDLibnetcoreMbufStatsReport mbuf256BTotal]
  -[NWAWDLibnetcoreMbufStatsReport mbuf2KBTotal]
  -[NWAWDLibnetcoreMbufStatsReport mbuf4KBTotal]
  -[NWAWDLibnetcoreMbufStatsReport mbuf16KBTotal]
  -[NWAWDLibnetcoreMbufStatsReport sockMBcnt]
  -[NWAWDLibnetcoreMbufStatsReport sockAtMBLimit]
  -[NWAWDLibnetcoreMbufStatsReport mbufMemReleased]
  -[NWAWDLibnetcoreMbufStatsReport mbufDrainCount]


NWPBHostEndpoint : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasHostname
 @property  NSString *hostname
 @property  BOOL hasPort
 @property  NSString *port

  // instance methods
  -[NWPBHostEndpoint isEqual:]
  -[NWPBHostEndpoint copyWithZone:]
  -[NWPBHostEndpoint port]
  -[NWPBHostEndpoint .cxx_destruct]
  -[NWPBHostEndpoint setPort:]
  -[NWPBHostEndpoint dictionaryRepresentation]
  -[NWPBHostEndpoint writeTo:]
  -[NWPBHostEndpoint mergeFrom:]
  -[NWPBHostEndpoint readFrom:]
  -[NWPBHostEndpoint copyTo:]
  -[NWPBHostEndpoint hostname]
  -[NWPBHostEndpoint setHostname:]
  -[NWPBHostEndpoint hasHostname]
  -[NWPBHostEndpoint hasPort]


NWAWDMPTCPSubflowSwitchingReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasSwitchFromInterfaceName
 @property  NSString *switchFromInterfaceName
 @property  BOOL hasSwitchToInterfaceName
 @property  NSString *switchToInterfaceName
 @property  BOOL hasSwitchCount
 @property  int switchCount

  // instance methods
  -[NWAWDMPTCPSubflowSwitchingReport isEqual:]
  -[NWAWDMPTCPSubflowSwitchingReport copyWithZone:]
  -[NWAWDMPTCPSubflowSwitchingReport .cxx_destruct]
  -[NWAWDMPTCPSubflowSwitchingReport dictionaryRepresentation]
  -[NWAWDMPTCPSubflowSwitchingReport timestamp]
  -[NWAWDMPTCPSubflowSwitchingReport hasTimestamp]
  -[NWAWDMPTCPSubflowSwitchingReport setTimestamp:]
  -[NWAWDMPTCPSubflowSwitchingReport writeTo:]
  -[NWAWDMPTCPSubflowSwitchingReport mergeFrom:]
  -[NWAWDMPTCPSubflowSwitchingReport readFrom:]
  -[NWAWDMPTCPSubflowSwitchingReport copyTo:]
  -[NWAWDMPTCPSubflowSwitchingReport setHasTimestamp:]
  -[NWAWDMPTCPSubflowSwitchingReport hasSwitchFromInterfaceName]
  -[NWAWDMPTCPSubflowSwitchingReport hasSwitchToInterfaceName]
  -[NWAWDMPTCPSubflowSwitchingReport setSwitchCount:]
  -[NWAWDMPTCPSubflowSwitchingReport setHasSwitchCount:]
  -[NWAWDMPTCPSubflowSwitchingReport hasSwitchCount]
  -[NWAWDMPTCPSubflowSwitchingReport switchFromInterfaceName]
  -[NWAWDMPTCPSubflowSwitchingReport setSwitchFromInterfaceName:]
  -[NWAWDMPTCPSubflowSwitchingReport switchToInterfaceName]
  -[NWAWDMPTCPSubflowSwitchingReport setSwitchToInterfaceName:]
  -[NWAWDMPTCPSubflowSwitchingReport switchCount]


NWAWDNWL2Report : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasCellularLqm
 @property  int cellularLqm
 @property  BOOL hasCellularPowerCostDownload
 @property  int cellularPowerCostDownload
 @property  BOOL hasCellularPowerCostUpload
 @property  int cellularPowerCostUpload
 @property  BOOL hasCellularKnownGood
 @property  BOOL cellularKnownGood
 @property  BOOL hasCellularRadioTechnology
 @property  int cellularRadioTechnology
 @property  BOOL hasWifiLqm
 @property  int wifiLqm
 @property  BOOL hasWifiRssi
 @property  int wifiRssi
 @property  BOOL hasWifiKnownGood
 @property  BOOL wifiKnownGood
 @property  BOOL hasWifiRadioTechnology
 @property  int wifiRadioTechnology

  // instance methods
  -[NWAWDNWL2Report isEqual:]
  -[NWAWDNWL2Report copyWithZone:]
  -[NWAWDNWL2Report dictionaryRepresentation]
  -[NWAWDNWL2Report writeTo:]
  -[NWAWDNWL2Report mergeFrom:]
  -[NWAWDNWL2Report readFrom:]
  -[NWAWDNWL2Report copyTo:]
  -[NWAWDNWL2Report setCellularLqm:]
  -[NWAWDNWL2Report setHasCellularLqm:]
  -[NWAWDNWL2Report hasCellularLqm]
  -[NWAWDNWL2Report cellularPowerCostDownload]
  -[NWAWDNWL2Report setCellularPowerCostDownload:]
  -[NWAWDNWL2Report setHasCellularPowerCostDownload:]
  -[NWAWDNWL2Report hasCellularPowerCostDownload]
  -[NWAWDNWL2Report cellularPowerCostDownloadAsString:]
  -[NWAWDNWL2Report StringAsCellularPowerCostDownload:]
  -[NWAWDNWL2Report cellularPowerCostUpload]
  -[NWAWDNWL2Report setCellularPowerCostUpload:]
  -[NWAWDNWL2Report setHasCellularPowerCostUpload:]
  -[NWAWDNWL2Report hasCellularPowerCostUpload]
  -[NWAWDNWL2Report cellularPowerCostUploadAsString:]
  -[NWAWDNWL2Report StringAsCellularPowerCostUpload:]
  -[NWAWDNWL2Report setCellularKnownGood:]
  -[NWAWDNWL2Report setHasCellularKnownGood:]
  -[NWAWDNWL2Report hasCellularKnownGood]
  -[NWAWDNWL2Report cellularRadioTechnology]
  -[NWAWDNWL2Report setCellularRadioTechnology:]
  -[NWAWDNWL2Report setHasCellularRadioTechnology:]
  -[NWAWDNWL2Report hasCellularRadioTechnology]
  -[NWAWDNWL2Report cellularRadioTechnologyAsString:]
  -[NWAWDNWL2Report StringAsCellularRadioTechnology:]
  -[NWAWDNWL2Report setWifiLqm:]
  -[NWAWDNWL2Report setHasWifiLqm:]
  -[NWAWDNWL2Report hasWifiLqm]
  -[NWAWDNWL2Report setWifiRssi:]
  -[NWAWDNWL2Report setHasWifiRssi:]
  -[NWAWDNWL2Report hasWifiRssi]
  -[NWAWDNWL2Report setWifiKnownGood:]
  -[NWAWDNWL2Report setHasWifiKnownGood:]
  -[NWAWDNWL2Report hasWifiKnownGood]
  -[NWAWDNWL2Report wifiRadioTechnology]
  -[NWAWDNWL2Report setWifiRadioTechnology:]
  -[NWAWDNWL2Report setHasWifiRadioTechnology:]
  -[NWAWDNWL2Report hasWifiRadioTechnology]
  -[NWAWDNWL2Report wifiRadioTechnologyAsString:]
  -[NWAWDNWL2Report StringAsWifiRadioTechnology:]
  -[NWAWDNWL2Report cellularLqm]
  -[NWAWDNWL2Report cellularKnownGood]
  -[NWAWDNWL2Report wifiLqm]
  -[NWAWDNWL2Report wifiRssi]
  -[NWAWDNWL2Report wifiKnownGood]


NWPBCommandMessage : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasCommand
 @property  int command
 @property  BOOL hasMessageData
 @property  NSData *messageData

  // instance methods
  -[NWPBCommandMessage isEqual:]
  -[NWPBCommandMessage copyWithZone:]
  -[NWPBCommandMessage .cxx_destruct]
  -[NWPBCommandMessage dictionaryRepresentation]
  -[NWPBCommandMessage writeTo:]
  -[NWPBCommandMessage mergeFrom:]
  -[NWPBCommandMessage readFrom:]
  -[NWPBCommandMessage copyTo:]
  -[NWPBCommandMessage setCommand:]
  -[NWPBCommandMessage command]
  -[NWPBCommandMessage setHasCommand:]
  -[NWPBCommandMessage hasCommand]
  -[NWPBCommandMessage commandAsString:]
  -[NWPBCommandMessage StringAsCommand:]
  -[NWPBCommandMessage hasMessageData]
  -[NWPBCommandMessage messageData]
  -[NWPBCommandMessage setMessageData:]


NWStreamConnection : NWConnection
  // class methods
  +[NWStreamConnection connectionWithConnectedSocket:]

  // instance methods
  -[NWStreamConnection readDataWithMinimumLength:maximumLength:completionHandler:]
  -[NWStreamConnection writeData:completionHandler:]
  -[NWStreamConnection writeCloseWithCompletionHandler:]


NWPBOpenConnection : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasEndpoint
 @property  NWPBEndpoint *endpoint
 @property  BOOL hasParameters
 @property  NWPBParameters *parameters
 @property  BOOL hasClientUUID
 @property  NSString *clientUUID

  // instance methods
  -[NWPBOpenConnection isEqual:]
  -[NWPBOpenConnection copyWithZone:]
  -[NWPBOpenConnection .cxx_destruct]
  -[NWPBOpenConnection endpoint]
  -[NWPBOpenConnection dictionaryRepresentation]
  -[NWPBOpenConnection parameters]
  -[NWPBOpenConnection setEndpoint:]
  -[NWPBOpenConnection writeTo:]
  -[NWPBOpenConnection mergeFrom:]
  -[NWPBOpenConnection readFrom:]
  -[NWPBOpenConnection copyTo:]
  -[NWPBOpenConnection setParameters:]
  -[NWPBOpenConnection hasClientUUID]
  -[NWPBOpenConnection clientUUID]
  -[NWPBOpenConnection setClientUUID:]
  -[NWPBOpenConnection hasEndpoint]
  -[NWPBOpenConnection hasParameters]


NWProtocolTransform : NSObject /usr/lib/libSystem.B.dylib <NWPrettyDescription>
 @property  NSObject<OS_nw_protocol_transform> *internalTransform
 @property  BOOL noProxy
 @property  int multipathService
 @property  NWEndpoint *replacementEndpoint
 @property  BOOL tfo
 @property  BOOL tfoNoCookie
 @property  int dataMode
 @property  unsigned long fallbackMode
 @property  BOOL prohibitDirect
 @property  BOOL disablePathFallback

  // instance methods
  -[NWProtocolTransform init]
  -[NWProtocolTransform isEqual:]
  -[NWProtocolTransform .cxx_destruct]
  -[NWProtocolTransform tfo]
  -[NWProtocolTransform descriptionWithIndent:showFullContent:]
  -[NWProtocolTransform privateDescription]
  -[NWProtocolTransform dataMode]
  -[NWProtocolTransform setDataMode:]
  -[NWProtocolTransform setMultipathService:]
  -[NWProtocolTransform multipathService]
  -[NWProtocolTransform fastOpenForceEnable]
  -[NWProtocolTransform setFastOpenForceEnable:]
  -[NWProtocolTransform noProxy]
  -[NWProtocolTransform setNoProxy:]
  -[NWProtocolTransform initWithCTransform:]
  -[NWProtocolTransform disableProtocol:]
  -[NWProtocolTransform clearProtocolsAtLevel:]
  -[NWProtocolTransform appendProtocol:atLevel:]
  -[NWProtocolTransform replacementEndpoint]
  -[NWProtocolTransform setReplacementEndpoint:]
  -[NWProtocolTransform fallbackMode]
  -[NWProtocolTransform setFallbackMode:]
  -[NWProtocolTransform prohibitDirect]
  -[NWProtocolTransform setProhibitDirect:]
  -[NWProtocolTransform setTfo:]
  -[NWProtocolTransform tfoNoCookie]
  -[NWProtocolTransform setTfoNoCookie:]
  -[NWProtocolTransform disablePathFallback]
  -[NWProtocolTransform setDisablePathFallback:]
  -[NWProtocolTransform internalTransform]
  -[NWProtocolTransform setInternalTransform:]


NWInterface : NSObject /usr/lib/libSystem.B.dylib <NWPrettyDescription, NSSecureCoding, NSCopying>
 @property  NSObject<OS_nw_interface> *internalInterface
 @property  unsigned long generation
 @property  long long mtu
 @property  NWInterface *delegateInterface
 @property  NSString *typeString
 @property  NSString *privateDescription
 @property  NSString *interfaceName
 @property  unsigned long interfaceIndex
 @property  long long type
 @property  long long subtype
 @property  BOOL expensive
 @property  BOOL constrained

  // class methods
  +[NWInterface supportsSecureCoding]
  +[NWInterface descriptionForType:]
  +[NWInterface descriptionForSubtype:]
  +[NWInterface interfaceWithProtocolBufferData:]

  // instance methods
  -[NWInterface copyWithZone:]
  -[NWInterface type]
  -[NWInterface encodeWithCoder:]
  -[NWInterface initWithCoder:]
  -[NWInterface .cxx_destruct]
  -[NWInterface initWithInterface:]
  -[NWInterface subtype]
  -[NWInterface generation]
  -[NWInterface typeString]
  -[NWInterface interfaceName]
  -[NWInterface isExpensive]
  -[NWInterface isConstrained]
  -[NWInterface descriptionWithIndent:showFullContent:]
  -[NWInterface privateDescription]
  -[NWInterface createProtocolBufferObject]
  -[NWInterface delegateInterface]
  -[NWInterface mtu]
  -[NWInterface initWithInterfaceName:]
  -[NWInterface initWithInterfaceIndex:]
  -[NWInterface interfaceIndex]
  -[NWInterface ipv4Netmask]
  -[NWInterface ipv4Broadcast]
  -[NWInterface isShallowEqual:]
  -[NWInterface isDeepEqual:]
  -[NWInterface internalInterface]
  -[NWInterface setInternalInterface:]
  -[NWInterface initWithInterfaceIndex:interfaceName:]


NWPBStartBrowse : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasDescriptor
 @property  NWPBBrowseDescriptor *descriptor
 @property  BOOL hasParameters
 @property  NWPBParameters *parameters
 @property  BOOL hasClientUUID
 @property  NSString *clientUUID

  // instance methods
  -[NWPBStartBrowse isEqual:]
  -[NWPBStartBrowse copyWithZone:]
  -[NWPBStartBrowse .cxx_destruct]
  -[NWPBStartBrowse dictionaryRepresentation]
  -[NWPBStartBrowse parameters]
  -[NWPBStartBrowse writeTo:]
  -[NWPBStartBrowse mergeFrom:]
  -[NWPBStartBrowse readFrom:]
  -[NWPBStartBrowse copyTo:]
  -[NWPBStartBrowse descriptor]
  -[NWPBStartBrowse setParameters:]
  -[NWPBStartBrowse setDescriptor:]
  -[NWPBStartBrowse hasClientUUID]
  -[NWPBStartBrowse clientUUID]
  -[NWPBStartBrowse setClientUUID:]
  -[NWPBStartBrowse hasParameters]
  -[NWPBStartBrowse hasDescriptor]


NWAWDLibnetcoreConnectionDataUsageSnapshot : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasBytesIn
 @property  unsigned long bytesIn
 @property  BOOL hasBytesOut
 @property  unsigned long bytesOut
 @property  BOOL hasMultipathBytesInCell
 @property  unsigned long multipathBytesInCell
 @property  BOOL hasMultipathBytesOutCell
 @property  unsigned long multipathBytesOutCell
 @property  BOOL hasMultipathBytesInWiFi
 @property  unsigned long multipathBytesInWiFi
 @property  BOOL hasMultipathBytesOutWiFi
 @property  unsigned long multipathBytesOutWiFi
 @property  BOOL hasMultipathBytesInInitial
 @property  unsigned long multipathBytesInInitial
 @property  BOOL hasMultipathBytesOutInitial
 @property  unsigned long multipathBytesOutInitial

  // instance methods
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot isEqual:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot copyWithZone:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot dictionaryRepresentation]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot writeTo:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot mergeFrom:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot readFrom:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot copyTo:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setBytesIn:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setHasBytesIn:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot hasBytesIn]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setBytesOut:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setHasBytesOut:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot hasBytesOut]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setMultipathBytesInCell:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setHasMultipathBytesInCell:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot hasMultipathBytesInCell]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setMultipathBytesOutCell:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setHasMultipathBytesOutCell:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot hasMultipathBytesOutCell]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setMultipathBytesInWiFi:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setHasMultipathBytesInWiFi:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot hasMultipathBytesInWiFi]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setMultipathBytesOutWiFi:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setHasMultipathBytesOutWiFi:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot hasMultipathBytesOutWiFi]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setMultipathBytesInInitial:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setHasMultipathBytesInInitial:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot hasMultipathBytesInInitial]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setMultipathBytesOutInitial:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot setHasMultipathBytesOutInitial:]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot hasMultipathBytesOutInitial]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot bytesIn]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot bytesOut]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot multipathBytesInCell]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot multipathBytesOutCell]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot multipathBytesInWiFi]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot multipathBytesOutWiFi]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot multipathBytesInInitial]
  -[NWAWDLibnetcoreConnectionDataUsageSnapshot multipathBytesOutInitial]


NWBrowser : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_nw_browser> *internalBrowser
 @property  NSSet *internalDiscoveredEndpoints
 @property  NWBrowseDescriptor *descriptor
 @property  NWParameters *parameters
 @property  NSSet *discoveredEndpoints

  // class methods
  +[NWBrowser automaticallyNotifiesObserversForKey:]

  // instance methods
  -[NWBrowser dealloc]
  -[NWBrowser .cxx_destruct]
  -[NWBrowser cancel]
  -[NWBrowser parameters]
  -[NWBrowser descriptor]
  -[NWBrowser initWithDescriptor:parameters:]
  -[NWBrowser discoveredEndpoints]
  -[NWBrowser setUpdateHandler]
  -[NWBrowser copyDiscoveredEndpoints]
  -[NWBrowser internalBrowser]
  -[NWBrowser internalDiscoveredEndpoints]
  -[NWBrowser setInternalDiscoveredEndpoints:]


NWAWDMPTCPConnectionInterfaceReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasInterfaceName
 @property  NSString *interfaceName
 @property  unsigned long postConnectSubflowFailureErrorsCount
 @property  ^i postConnectSubflowFailureErrors
 @property  BOOL hasDataInKB
 @property  long long dataInKB
 @property  BOOL hasDataOutKB
 @property  long long dataOutKB
 @property  BOOL hasSecondaryFlowSuccessCount
 @property  int secondaryFlowSuccessCount
 @property  BOOL hasSecondaryFlowFailureCount
 @property  int secondaryFlowFailureCount
 @property  BOOL hasPostConnectTcpFallbackCount
 @property  BOOL postConnectTcpFallbackCount

  // instance methods
  -[NWAWDMPTCPConnectionInterfaceReport dealloc]
  -[NWAWDMPTCPConnectionInterfaceReport isEqual:]
  -[NWAWDMPTCPConnectionInterfaceReport copyWithZone:]
  -[NWAWDMPTCPConnectionInterfaceReport .cxx_destruct]
  -[NWAWDMPTCPConnectionInterfaceReport dictionaryRepresentation]
  -[NWAWDMPTCPConnectionInterfaceReport timestamp]
  -[NWAWDMPTCPConnectionInterfaceReport hasTimestamp]
  -[NWAWDMPTCPConnectionInterfaceReport setTimestamp:]
  -[NWAWDMPTCPConnectionInterfaceReport writeTo:]
  -[NWAWDMPTCPConnectionInterfaceReport mergeFrom:]
  -[NWAWDMPTCPConnectionInterfaceReport readFrom:]
  -[NWAWDMPTCPConnectionInterfaceReport copyTo:]
  -[NWAWDMPTCPConnectionInterfaceReport interfaceName]
  -[NWAWDMPTCPConnectionInterfaceReport setInterfaceName:]
  -[NWAWDMPTCPConnectionInterfaceReport setHasTimestamp:]
  -[NWAWDMPTCPConnectionInterfaceReport hasInterfaceName]
  -[NWAWDMPTCPConnectionInterfaceReport postConnectSubflowFailureErrorsCount]
  -[NWAWDMPTCPConnectionInterfaceReport postConnectSubflowFailureErrors]
  -[NWAWDMPTCPConnectionInterfaceReport clearPostConnectSubflowFailureErrors]
  -[NWAWDMPTCPConnectionInterfaceReport addPostConnectSubflowFailureErrors:]
  -[NWAWDMPTCPConnectionInterfaceReport postConnectSubflowFailureErrorsAtIndex:]
  -[NWAWDMPTCPConnectionInterfaceReport setPostConnectSubflowFailureErrors:count:]
  -[NWAWDMPTCPConnectionInterfaceReport setDataInKB:]
  -[NWAWDMPTCPConnectionInterfaceReport setHasDataInKB:]
  -[NWAWDMPTCPConnectionInterfaceReport hasDataInKB]
  -[NWAWDMPTCPConnectionInterfaceReport setDataOutKB:]
  -[NWAWDMPTCPConnectionInterfaceReport setHasDataOutKB:]
  -[NWAWDMPTCPConnectionInterfaceReport hasDataOutKB]
  -[NWAWDMPTCPConnectionInterfaceReport setSecondaryFlowSuccessCount:]
  -[NWAWDMPTCPConnectionInterfaceReport setHasSecondaryFlowSuccessCount:]
  -[NWAWDMPTCPConnectionInterfaceReport hasSecondaryFlowSuccessCount]
  -[NWAWDMPTCPConnectionInterfaceReport setSecondaryFlowFailureCount:]
  -[NWAWDMPTCPConnectionInterfaceReport setHasSecondaryFlowFailureCount:]
  -[NWAWDMPTCPConnectionInterfaceReport hasSecondaryFlowFailureCount]
  -[NWAWDMPTCPConnectionInterfaceReport setPostConnectTcpFallbackCount:]
  -[NWAWDMPTCPConnectionInterfaceReport setHasPostConnectTcpFallbackCount:]
  -[NWAWDMPTCPConnectionInterfaceReport hasPostConnectTcpFallbackCount]
  -[NWAWDMPTCPConnectionInterfaceReport dataInKB]
  -[NWAWDMPTCPConnectionInterfaceReport dataOutKB]
  -[NWAWDMPTCPConnectionInterfaceReport secondaryFlowSuccessCount]
  -[NWAWDMPTCPConnectionInterfaceReport secondaryFlowFailureCount]
  -[NWAWDMPTCPConnectionInterfaceReport postConnectTcpFallbackCount]


NWBonjourBrowseDescriptor : NWBrowseDescriptor
 @property  NSString *type
 @property  NSString *domain

  // class methods
  +[NWBonjourBrowseDescriptor descriptorType]
  +[NWBonjourBrowseDescriptor descriptorWithType:domain:]

  // instance methods
  -[NWBonjourBrowseDescriptor domain]
  -[NWBonjourBrowseDescriptor type]
  -[NWBonjourBrowseDescriptor descriptionWithIndent:showFullContent:]


NWPBPath : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasEndpoint
 @property  NWPBEndpoint *endpoint
 @property  BOOL hasParameters
 @property  NWPBParameters *parameters
 @property  BOOL hasClientUUID
 @property  NSString *clientUUID
 @property  BOOL hasStatus
 @property  int status
 @property  BOOL hasDirectInterface
 @property  NWPBInterface *directInterface
 @property  BOOL hasDelegateInterface
 @property  NWPBInterface *delegateInterface
 @property  NSMutableArray *agents
 @property  BOOL hasIpv4
 @property  BOOL ipv4
 @property  BOOL hasIpv6
 @property  BOOL ipv6
 @property  BOOL hasLocal
 @property  BOOL local
 @property  BOOL hasDirect
 @property  BOOL direct

  // class methods
  +[NWPBPath agentsType]

  // instance methods
  -[NWPBPath isEqual:]
  -[NWPBPath copyWithZone:]
  -[NWPBPath .cxx_destruct]
  -[NWPBPath endpoint]
  -[NWPBPath dictionaryRepresentation]
  -[NWPBPath status]
  -[NWPBPath parameters]
  -[NWPBPath setEndpoint:]
  -[NWPBPath writeTo:]
  -[NWPBPath mergeFrom:]
  -[NWPBPath readFrom:]
  -[NWPBPath copyTo:]
  -[NWPBPath setParameters:]
  -[NWPBPath setStatus:]
  -[NWPBPath statusAsString:]
  -[NWPBPath direct]
  -[NWPBPath setDirect:]
  -[NWPBPath StringAsStatus:]
  -[NWPBPath local]
  -[NWPBPath setLocal:]
  -[NWPBPath hasClientUUID]
  -[NWPBPath clientUUID]
  -[NWPBPath setClientUUID:]
  -[NWPBPath delegateInterface]
  -[NWPBPath hasEndpoint]
  -[NWPBPath hasParameters]
  -[NWPBPath setHasStatus:]
  -[NWPBPath hasStatus]
  -[NWPBPath hasDirectInterface]
  -[NWPBPath hasDelegateInterface]
  -[NWPBPath clearAgents]
  -[NWPBPath addAgents:]
  -[NWPBPath agentsCount]
  -[NWPBPath agentsAtIndex:]
  -[NWPBPath setIpv4:]
  -[NWPBPath setHasIpv4:]
  -[NWPBPath hasIpv4]
  -[NWPBPath setIpv6:]
  -[NWPBPath setHasIpv6:]
  -[NWPBPath hasIpv6]
  -[NWPBPath setHasLocal:]
  -[NWPBPath hasLocal]
  -[NWPBPath setHasDirect:]
  -[NWPBPath hasDirect]
  -[NWPBPath directInterface]
  -[NWPBPath setDirectInterface:]
  -[NWPBPath setDelegateInterface:]
  -[NWPBPath agents]
  -[NWPBPath setAgents:]
  -[NWPBPath ipv4]
  -[NWPBPath ipv6]


NWAWDLibnetcoreRNFActivityNotification : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasHasRnfActivity
 @property  BOOL hasRnfActivity

  // instance methods
  -[NWAWDLibnetcoreRNFActivityNotification isEqual:]
  -[NWAWDLibnetcoreRNFActivityNotification copyWithZone:]
  -[NWAWDLibnetcoreRNFActivityNotification dictionaryRepresentation]
  -[NWAWDLibnetcoreRNFActivityNotification timestamp]
  -[NWAWDLibnetcoreRNFActivityNotification hasTimestamp]
  -[NWAWDLibnetcoreRNFActivityNotification setTimestamp:]
  -[NWAWDLibnetcoreRNFActivityNotification writeTo:]
  -[NWAWDLibnetcoreRNFActivityNotification mergeFrom:]
  -[NWAWDLibnetcoreRNFActivityNotification readFrom:]
  -[NWAWDLibnetcoreRNFActivityNotification copyTo:]
  -[NWAWDLibnetcoreRNFActivityNotification setHasTimestamp:]
  -[NWAWDLibnetcoreRNFActivityNotification setHasRnfActivity:]
  -[NWAWDLibnetcoreRNFActivityNotification setHasHasRnfActivity:]
  -[NWAWDLibnetcoreRNFActivityNotification hasHasRnfActivity]
  -[NWAWDLibnetcoreRNFActivityNotification hasRnfActivity]


NWMessage : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_data> *internalContent
 @property  NSObject<OS_nw_content_context> *internalContext

  // instance methods
  -[NWMessage .cxx_destruct]
  -[NWMessage initWithContent:context:]
  -[NWMessage internalContent]
  -[NWMessage setInternalContent:]
  -[NWMessage internalContext]
  -[NWMessage setInternalContext:]


NWOutboundMessage : NWMessage
 @property  double relativePriority
 @property  unsigned long expirationMilliseconds

  // instance methods
  -[NWOutboundMessage relativePriority]
  -[NWOutboundMessage initWithContent:]
  -[NWOutboundMessage expirationMilliseconds]
  -[NWOutboundMessage setExpirationMilliseconds:]
  -[NWOutboundMessage setRelativePriority:]
  -[NWOutboundMessage addAntecedent:]


NWInboundMessage : NWMessage
 @property  NSData *content

  // instance methods
  -[NWInboundMessage content]


NWMessageConnection : NWConnection
  // instance methods
  -[NWMessageConnection readMessageWithCompletionHandler:]
  -[NWMessageConnection writeMessage:completionHandler:]


NWL2Report : NSObject /usr/lib/libSystem.B.dylib
 @property  int cellularLQM
 @property  unsigned char cellularPowerCostDownload
 @property  unsigned char cellularPowerCostUpload
 @property  BOOL cellularKnownGood
 @property  unsigned char cellularRadioTechnology
 @property  int wifiLQM
 @property  int wifiRSSI
 @property  BOOL wifiKnownGood
 @property  unsigned char wifiRadioTechnology

  // instance methods
  -[NWL2Report cellularPowerCostDownload]
  -[NWL2Report setCellularPowerCostDownload:]
  -[NWL2Report cellularPowerCostUpload]
  -[NWL2Report setCellularPowerCostUpload:]
  -[NWL2Report setCellularKnownGood:]
  -[NWL2Report cellularRadioTechnology]
  -[NWL2Report setCellularRadioTechnology:]
  -[NWL2Report setWifiKnownGood:]
  -[NWL2Report wifiRadioTechnology]
  -[NWL2Report setWifiRadioTechnology:]
  -[NWL2Report cellularKnownGood]
  -[NWL2Report wifiKnownGood]
  -[NWL2Report cellularLQM]
  -[NWL2Report setCellularLQM:]
  -[NWL2Report wifiLQM]
  -[NWL2Report setWifiLQM:]
  -[NWL2Report wifiRSSI]
  -[NWL2Report setWifiRSSI:]


NWActivityStatistics : NSObject /usr/lib/libSystem.B.dylib
 @property  {nw_activity_report_s=QII[16C][16C]b1b7[7C]} report
 @property  PBCodable *awdReport
 @property  unsigned int awdMetricID
 @property  NSUUID *activityUUID
 @property  NSUUID *parentUUID
 @property  unsigned int domain
 @property  unsigned int label
 @property  BOOL retry
 @property  unsigned long investigation_identifier
 @property  NSUUID *externallyVisibleActivityUUID
 @property  NSUUID *externallyVisibleParentUUID
 @property  NWL2Report *layer2Report

  // instance methods
  -[NWActivityStatistics domain]
  -[NWActivityStatistics .cxx_destruct]
  -[NWActivityStatistics label]
  -[NWActivityStatistics investigation_identifier]
  -[NWActivityStatistics report]
  -[NWActivityStatistics awdMetricID]
  -[NWActivityStatistics awdReport]
  -[NWActivityStatistics setActivityUUID:]
  -[NWActivityStatistics activityUUID]
  -[NWActivityStatistics retry]
  -[NWActivityStatistics parentUUID]
  -[NWActivityStatistics initWithNWActivityReport:length:]
  -[NWActivityStatistics externallyVisibleActivityUUID]
  -[NWActivityStatistics setExternallyVisibleActivityUUID:]
  -[NWActivityStatistics externallyVisibleParentUUID]
  -[NWActivityStatistics setExternallyVisibleParentUUID:]
  -[NWActivityStatistics layer2Report]
  -[NWActivityStatistics setLayer2Report:]
  -[NWActivityStatistics setReport:]
  -[NWActivityStatistics setAwdReport:]
  -[NWActivityStatistics setAwdMetricID:]
  -[NWActivityStatistics setParentUUID:]


NWActivityEpilogueStatistics : NSObject /usr/lib/libSystem.B.dylib
 @property  {nw_activity_epilogue_report_s=Q{nw_activity_report_s=QII[16C][16C]b1b7[7C]}Ii[0C]} report
 @property  PBCodable *awdReport
 @property  unsigned int awdMetricID
 @property  NSUUID *activityUUID
 @property  NSUUID *parentUUID
 @property  unsigned int domain
 @property  unsigned int label
 @property  BOOL retry
 @property  unsigned long investigation_identifier
 @property  unsigned long durationMsecs
 @property  unsigned int fragmentsQuenched
 @property  int completionReason
 @property  NSUUID *externallyVisibleActivityUUID
 @property  NSUUID *externallyVisibleParentUUID
 @property  NWL2Report *layer2Report

  // instance methods
  -[NWActivityEpilogueStatistics domain]
  -[NWActivityEpilogueStatistics .cxx_destruct]
  -[NWActivityEpilogueStatistics label]
  -[NWActivityEpilogueStatistics investigation_identifier]
  -[NWActivityEpilogueStatistics report]
  -[NWActivityEpilogueStatistics awdMetricID]
  -[NWActivityEpilogueStatistics awdReport]
  -[NWActivityEpilogueStatistics setActivityUUID:]
  -[NWActivityEpilogueStatistics activityUUID]
  -[NWActivityEpilogueStatistics completionReason]
  -[NWActivityEpilogueStatistics durationMsecs]
  -[NWActivityEpilogueStatistics fragmentsQuenched]
  -[NWActivityEpilogueStatistics retry]
  -[NWActivityEpilogueStatistics parentUUID]
  -[NWActivityEpilogueStatistics externallyVisibleActivityUUID]
  -[NWActivityEpilogueStatistics setExternallyVisibleActivityUUID:]
  -[NWActivityEpilogueStatistics externallyVisibleParentUUID]
  -[NWActivityEpilogueStatistics setExternallyVisibleParentUUID:]
  -[NWActivityEpilogueStatistics layer2Report]
  -[NWActivityEpilogueStatistics setLayer2Report:]
  -[NWActivityEpilogueStatistics setReport:]
  -[NWActivityEpilogueStatistics setAwdReport:]
  -[NWActivityEpilogueStatistics setAwdMetricID:]
  -[NWActivityEpilogueStatistics setParentUUID:]
  -[NWActivityEpilogueStatistics initWithNWActivityEpilogueReport:length:]


NWPBStopBrowse : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasClientUUID
 @property  NSString *clientUUID

  // instance methods
  -[NWPBStopBrowse isEqual:]
  -[NWPBStopBrowse copyWithZone:]
  -[NWPBStopBrowse .cxx_destruct]
  -[NWPBStopBrowse dictionaryRepresentation]
  -[NWPBStopBrowse writeTo:]
  -[NWPBStopBrowse mergeFrom:]
  -[NWPBStopBrowse readFrom:]
  -[NWPBStopBrowse copyTo:]
  -[NWPBStopBrowse hasClientUUID]
  -[NWPBStopBrowse clientUUID]
  -[NWPBStopBrowse setClientUUID:]


NWConnectionStatistics : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *clientIdentifier
 @property  {netcore_stats_tcp_report=(?={?={netcore_stats_tcp_statistics_report=QQQQQQQQQQQQQQQQIIIIIIIIIIIIIIIIIiiib1b1b1b1b1b1b1b1b1b1b1b5[6C]}{netcore_stats_tcp_cell_fallback_report=[20{netcore_stats_network_event=iI}][20{netcore_stats_data_usage_snapshot=QQQQQQQQ}]iIIIB[7C]}[8{netcore_stats_tcp_statistics_report=QQQQQQQQQQQQQQQQIIIIIIIIIIIIIIIIIiiib1b1b1b1b1b1b1b1b1b1b1b5[6C]}]iI}{nw_connection_report_s=QQQQQQQQQQQQQIIIIIIIIIIIIIIIIIIIIIiiiiiiiiCC[16C][10[16C]]b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b6[6C]})BB[6C]} report
 @property  PBCodable *awdReport
 @property  unsigned int awdMetricID
 @property  NSArray *activities
 @property  NSString *sourceIdentifier
 @property  BOOL delegated
 @property  int interfaceType
 @property  unsigned int timeToDnsResolvedMsecs
 @property  unsigned int timeToDnsStartMsecs
 @property  unsigned int dnsResolvedTimeMsecs
 @property  BOOL dnsAnswersCached
 @property  unsigned int timeToConnectionStartMsecs
 @property  unsigned int timeToConnectionEstablishmentMsecs
 @property  unsigned int connectionEstablishmentTimeMsecs
 @property  unsigned int flowDurationMsecs
 @property  int connectedInterfaceType
 @property  BOOL connected
 @property  unsigned int trafficClass
 @property  BOOL fallbackEligible
 @property  BOOL cellularFallback
 @property  BOOL cellularRrcConnected
 @property  BOOL tls13Configured
 @property  BOOL tlsSucceeded
 @property  BOOL kernelReportedStalls
 @property  BOOL kernelReportingConnectionStalled
 @property  BOOL kernelReportingReadStalled
 @property  BOOL kernelReportingWriteStalled
 @property  unsigned long bytesIn
 @property  unsigned long bytesOut
 @property  unsigned long bytesDuplicate
 @property  unsigned long bytesOOO
 @property  unsigned long bytesRetransmitted
 @property  unsigned long packetsIn
 @property  unsigned long packetsOut
 @property  unsigned long packetsDuplicate
 @property  unsigned long packetsOOO
 @property  unsigned long packetsRetransmitted
 @property  unsigned int tcpRTTCurrentMsecs
 @property  unsigned int tcpRTTSmoothedMsecs
 @property  unsigned int tcpRTTBestMsecs
 @property  unsigned int tcpRTTVariance
 @property  unsigned int tcpSynRetransmissionCount
 @property  BOOL tcpFastOpen
 @property  unsigned int tcpBetterRouteEventCount
 @property  unsigned int tcpConnectionReuseCount
 @property  unsigned int tcpAppReportingDataStallCount
 @property  unsigned int tcpAppDataStallTimerMsecs
 @property  NSUUID *connectionUUID
 @property  NSUUID *externallyVisibleConnectionUUID
 @property  NSArray *externallyVisibleActivityUUIDs
 @property  NWL2Report *layer2Report

  // instance methods
  -[NWConnectionStatistics .cxx_destruct]
  -[NWConnectionStatistics connectionUUID]
  -[NWConnectionStatistics activities]
  -[NWConnectionStatistics report]
  -[NWConnectionStatistics awdMetricID]
  -[NWConnectionStatistics awdReport]
  -[NWConnectionStatistics setClientIdentifier:]
  -[NWConnectionStatistics setSourceIdentifier:]
  -[NWConnectionStatistics sourceIdentifier]
  -[NWConnectionStatistics interfaceType]
  -[NWConnectionStatistics connectedInterfaceType]
  -[NWConnectionStatistics fallbackEligible]
  -[NWConnectionStatistics trafficClass]
  -[NWConnectionStatistics bytesIn]
  -[NWConnectionStatistics bytesOut]
  -[NWConnectionStatistics bytesDuplicate]
  -[NWConnectionStatistics bytesRetransmitted]
  -[NWConnectionStatistics packetsIn]
  -[NWConnectionStatistics packetsOut]
  -[NWConnectionStatistics setActivities:]
  -[NWConnectionStatistics tlsHandshakeTimedOut]
  -[NWConnectionStatistics timeToConnectionEstablishmentMsecs]
  -[NWConnectionStatistics flowDurationMsecs]
  -[NWConnectionStatistics kernelReportedStalls]
  -[NWConnectionStatistics kernelReportingConnectionStalled]
  -[NWConnectionStatistics kernelReportingReadStalled]
  -[NWConnectionStatistics kernelReportingWriteStalled]
  -[NWConnectionStatistics packetsDuplicate]
  -[NWConnectionStatistics packetsRetransmitted]
  -[NWConnectionStatistics tcpFastOpen]
  -[NWConnectionStatistics cellularFallback]
  -[NWConnectionStatistics connected]
  -[NWConnectionStatistics timeToConnectionStartMsecs]
  -[NWConnectionStatistics connectionEstablishmentTimeMsecs]
  -[NWConnectionStatistics layer2Report]
  -[NWConnectionStatistics setLayer2Report:]
  -[NWConnectionStatistics setReport:]
  -[NWConnectionStatistics setAwdReport:]
  -[NWConnectionStatistics setAwdMetricID:]
  -[NWConnectionStatistics delegated]
  -[NWConnectionStatistics timeToDnsResolvedMsecs]
  -[NWConnectionStatistics timeToDnsStartMsecs]
  -[NWConnectionStatistics dnsResolvedTimeMsecs]
  -[NWConnectionStatistics dnsAnswersCached]
  -[NWConnectionStatistics bytesOOO]
  -[NWConnectionStatistics packetsOOO]
  -[NWConnectionStatistics tcpRTTCurrentMsecs]
  -[NWConnectionStatistics tcpRTTSmoothedMsecs]
  -[NWConnectionStatistics tcpRTTBestMsecs]
  -[NWConnectionStatistics tcpRTTVariance]
  -[NWConnectionStatistics tcpSynRetransmissionCount]
  -[NWConnectionStatistics tcpBetterRouteEventCount]
  -[NWConnectionStatistics tcpConnectionReuseCount]
  -[NWConnectionStatistics tcpAppReportingDataStallCount]
  -[NWConnectionStatistics tcpAppDataStallTimerMsecs]
  -[NWConnectionStatistics cellularRrcConnected]
  -[NWConnectionStatistics tls13Configured]
  -[NWConnectionStatistics tlsSucceeded]
  -[NWConnectionStatistics _createDataUsageSnapshotFromStruct:]
  -[NWConnectionStatistics _createFallbackReportFromStruct:]
  -[NWConnectionStatistics _createStatisticsReportFromStruct:]
  -[NWConnectionStatistics initWithTCPReport:length:clientIdentifier:sourceIdentifier:]
  -[NWConnectionStatistics clientIdentifier]
  -[NWConnectionStatistics externallyVisibleConnectionUUID]
  -[NWConnectionStatistics setExternallyVisibleConnectionUUID:]
  -[NWConnectionStatistics externallyVisibleActivityUUIDs]
  -[NWConnectionStatistics setExternallyVisibleActivityUUIDs:]


NWPBInterface : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasSubtype
 @property  int subtype
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasIndex
 @property  unsigned int index
 @property  BOOL hasGeneration
 @property  unsigned int generation
 @property  BOOL hasDelegateIndex
 @property  unsigned int delegateIndex
 @property  BOOL hasMtu
 @property  unsigned int mtu
 @property  BOOL hasExpensive
 @property  BOOL expensive

  // instance methods
  -[NWPBInterface isEqual:]
  -[NWPBInterface name]
  -[NWPBInterface copyWithZone:]
  -[NWPBInterface type]
  -[NWPBInterface setType:]
  -[NWPBInterface .cxx_destruct]
  -[NWPBInterface setName:]
  -[NWPBInterface index]
  -[NWPBInterface dictionaryRepresentation]
  -[NWPBInterface writeTo:]
  -[NWPBInterface subtype]
  -[NWPBInterface mergeFrom:]
  -[NWPBInterface readFrom:]
  -[NWPBInterface copyTo:]
  -[NWPBInterface typeAsString:]
  -[NWPBInterface StringAsType:]
  -[NWPBInterface hasName]
  -[NWPBInterface generation]
  -[NWPBInterface setIndex:]
  -[NWPBInterface setExpensive:]
  -[NWPBInterface setSubtype:]
  -[NWPBInterface setHasType:]
  -[NWPBInterface hasType]
  -[NWPBInterface mtu]
  -[NWPBInterface setHasSubtype:]
  -[NWPBInterface hasSubtype]
  -[NWPBInterface subtypeAsString:]
  -[NWPBInterface StringAsSubtype:]
  -[NWPBInterface setHasIndex:]
  -[NWPBInterface hasIndex]
  -[NWPBInterface setGeneration:]
  -[NWPBInterface setHasGeneration:]
  -[NWPBInterface hasGeneration]
  -[NWPBInterface setDelegateIndex:]
  -[NWPBInterface setHasDelegateIndex:]
  -[NWPBInterface hasDelegateIndex]
  -[NWPBInterface setMtu:]
  -[NWPBInterface setHasMtu:]
  -[NWPBInterface hasMtu]
  -[NWPBInterface setHasExpensive:]
  -[NWPBInterface hasExpensive]
  -[NWPBInterface delegateIndex]
  -[NWPBInterface expensive]


NWPBSendData : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasClientUUID
 @property  NSString *clientUUID
 @property  BOOL hasMessageData
 @property  NSData *messageData
 @property  BOOL hasReceiveWindow
 @property  unsigned int receiveWindow

  // instance methods
  -[NWPBSendData isEqual:]
  -[NWPBSendData copyWithZone:]
  -[NWPBSendData .cxx_destruct]
  -[NWPBSendData dictionaryRepresentation]
  -[NWPBSendData writeTo:]
  -[NWPBSendData mergeFrom:]
  -[NWPBSendData readFrom:]
  -[NWPBSendData copyTo:]
  -[NWPBSendData hasClientUUID]
  -[NWPBSendData clientUUID]
  -[NWPBSendData setClientUUID:]
  -[NWPBSendData hasMessageData]
  -[NWPBSendData messageData]
  -[NWPBSendData setMessageData:]
  -[NWPBSendData setReceiveWindow:]
  -[NWPBSendData setHasReceiveWindow:]
  -[NWPBSendData hasReceiveWindow]
  -[NWPBSendData receiveWindow]


NWAWDLibnetcoreTCPConnectionReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasClientIdentifier
 @property  NSString *clientIdentifier
 @property  BOOL hasDelegated
 @property  BOOL delegated
 @property  BOOL hasReportReason
 @property  int reportReason
 @property  BOOL hasConnectionStatisticsReport
 @property  NWAWDLibnetcoreConnectionStatisticsReport *connectionStatisticsReport
 @property  BOOL hasCellularFallbackReport
 @property  NWAWDLibnetcoreCellularFallbackReport *cellularFallbackReport
 @property  BOOL hasIPAddressAttemptCount
 @property  unsigned long iPAddressAttemptCount
 @property  NSMutableArray *connectionAttemptStatisticsReports
 @property  BOOL hasSourceAppIdentifier
 @property  NSString *sourceAppIdentifier

  // class methods
  +[NWAWDLibnetcoreTCPConnectionReport connectionAttemptStatisticsReportsType]

  // instance methods
  -[NWAWDLibnetcoreTCPConnectionReport isEqual:]
  -[NWAWDLibnetcoreTCPConnectionReport copyWithZone:]
  -[NWAWDLibnetcoreTCPConnectionReport .cxx_destruct]
  -[NWAWDLibnetcoreTCPConnectionReport dictionaryRepresentation]
  -[NWAWDLibnetcoreTCPConnectionReport timestamp]
  -[NWAWDLibnetcoreTCPConnectionReport sourceAppIdentifier]
  -[NWAWDLibnetcoreTCPConnectionReport hasTimestamp]
  -[NWAWDLibnetcoreTCPConnectionReport setTimestamp:]
  -[NWAWDLibnetcoreTCPConnectionReport writeTo:]
  -[NWAWDLibnetcoreTCPConnectionReport mergeFrom:]
  -[NWAWDLibnetcoreTCPConnectionReport readFrom:]
  -[NWAWDLibnetcoreTCPConnectionReport copyTo:]
  -[NWAWDLibnetcoreTCPConnectionReport setClientIdentifier:]
  -[NWAWDLibnetcoreTCPConnectionReport setHasTimestamp:]
  -[NWAWDLibnetcoreTCPConnectionReport setIPAddressAttemptCount:]
  -[NWAWDLibnetcoreTCPConnectionReport setHasIPAddressAttemptCount:]
  -[NWAWDLibnetcoreTCPConnectionReport hasIPAddressAttemptCount]
  -[NWAWDLibnetcoreTCPConnectionReport iPAddressAttemptCount]
  -[NWAWDLibnetcoreTCPConnectionReport setReportReason:]
  -[NWAWDLibnetcoreTCPConnectionReport setHasReportReason:]
  -[NWAWDLibnetcoreTCPConnectionReport hasReportReason]
  -[NWAWDLibnetcoreTCPConnectionReport reportReason]
  -[NWAWDLibnetcoreTCPConnectionReport delegated]
  -[NWAWDLibnetcoreTCPConnectionReport clientIdentifier]
  -[NWAWDLibnetcoreTCPConnectionReport hasClientIdentifier]
  -[NWAWDLibnetcoreTCPConnectionReport setDelegated:]
  -[NWAWDLibnetcoreTCPConnectionReport setHasDelegated:]
  -[NWAWDLibnetcoreTCPConnectionReport hasDelegated]
  -[NWAWDLibnetcoreTCPConnectionReport reportReasonAsString:]
  -[NWAWDLibnetcoreTCPConnectionReport StringAsReportReason:]
  -[NWAWDLibnetcoreTCPConnectionReport hasConnectionStatisticsReport]
  -[NWAWDLibnetcoreTCPConnectionReport hasCellularFallbackReport]
  -[NWAWDLibnetcoreTCPConnectionReport clearConnectionAttemptStatisticsReports]
  -[NWAWDLibnetcoreTCPConnectionReport addConnectionAttemptStatisticsReports:]
  -[NWAWDLibnetcoreTCPConnectionReport connectionAttemptStatisticsReportsCount]
  -[NWAWDLibnetcoreTCPConnectionReport connectionAttemptStatisticsReportsAtIndex:]
  -[NWAWDLibnetcoreTCPConnectionReport hasSourceAppIdentifier]
  -[NWAWDLibnetcoreTCPConnectionReport connectionStatisticsReport]
  -[NWAWDLibnetcoreTCPConnectionReport setConnectionStatisticsReport:]
  -[NWAWDLibnetcoreTCPConnectionReport cellularFallbackReport]
  -[NWAWDLibnetcoreTCPConnectionReport setCellularFallbackReport:]
  -[NWAWDLibnetcoreTCPConnectionReport connectionAttemptStatisticsReports]
  -[NWAWDLibnetcoreTCPConnectionReport setConnectionAttemptStatisticsReports:]
  -[NWAWDLibnetcoreTCPConnectionReport setSourceAppIdentifier:]


NWPBServiceEndpoint : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasType
 @property  NSString *type
 @property  BOOL hasDomain
 @property  NSString *domain

  // instance methods
  -[NWPBServiceEndpoint isEqual:]
  -[NWPBServiceEndpoint name]
  -[NWPBServiceEndpoint copyWithZone:]
  -[NWPBServiceEndpoint domain]
  -[NWPBServiceEndpoint type]
  -[NWPBServiceEndpoint setType:]
  -[NWPBServiceEndpoint .cxx_destruct]
  -[NWPBServiceEndpoint setName:]
  -[NWPBServiceEndpoint dictionaryRepresentation]
  -[NWPBServiceEndpoint writeTo:]
  -[NWPBServiceEndpoint mergeFrom:]
  -[NWPBServiceEndpoint readFrom:]
  -[NWPBServiceEndpoint copyTo:]
  -[NWPBServiceEndpoint setDomain:]
  -[NWPBServiceEndpoint hasName]
  -[NWPBServiceEndpoint hasDomain]
  -[NWPBServiceEndpoint hasType]


NWDatagramConnection : NWConnection
  // class methods
  +[NWDatagramConnection connectionWithConnectedSocket:]

  // instance methods
  -[NWDatagramConnection readDatagramsWithMinimumCount:maximumCount:completionHandler:]
  -[NWDatagramConnection writeDatagrams:completionHandler:]


NWBrowseDescriptor : NSObject /usr/lib/libSystem.B.dylib <NWPrettyDescription>
 @property  NSObject<OS_nw_browse_descriptor> *internalDescriptor
 @property  NSString *privateDescription
 @property  NSString *bonjourServiceDomain
 @property  NSString *bonjourServiceType

  // class methods
  +[NWBrowseDescriptor descriptorType]
  +[NWBrowseDescriptor supportsBrowseCallback]
  +[NWBrowseDescriptor copyClassForDescriptorType:]
  +[NWBrowseDescriptor descriptorWithInternalDescriptor:]
  +[NWBrowseDescriptor descriptorWithProtocolBufferData:]

  // instance methods
  -[NWBrowseDescriptor copyWithZone:]
  -[NWBrowseDescriptor .cxx_destruct]
  -[NWBrowseDescriptor encodedData]
  -[NWBrowseDescriptor initWithDescriptor:]
  -[NWBrowseDescriptor descriptionWithIndent:showFullContent:]
  -[NWBrowseDescriptor privateDescription]
  -[NWBrowseDescriptor bonjourServiceDomain]
  -[NWBrowseDescriptor bonjourServiceType]
  -[NWBrowseDescriptor internalDescriptor]
  -[NWBrowseDescriptor setInternalDescriptor:]
  -[NWBrowseDescriptor initWithEncodedData:]
  -[NWBrowseDescriptor createProtocolBufferObject]
  -[NWBrowseDescriptor browseWithCompletionHandler:]


NWAWDLBClientConnectionReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasConnectionJoiningFailure
 @property  int connectionJoiningFailure
 @property  BOOL hasConnectionJoiningLbConnectionState
 @property  int connectionJoiningLbConnectionState
 @property  BOOL hasConnectionJoiningLbConnectionMigration
 @property  int connectionJoiningLbConnectionMigration
 @property  BOOL hasConnectionServiceId
 @property  unsigned long connectionServiceId
 @property  BOOL hasConnectionDuration
 @property  long long connectionDuration
 @property  BOOL hasDataPathResult
 @property  int dataPathResult
 @property  BOOL hasBytesSent
 @property  long long bytesSent
 @property  BOOL hasBytesReceived
 @property  long long bytesReceived
 @property  BOOL hasTimeToFirstResponse
 @property  long long timeToFirstResponse
 @property  BOOL hasTimeToConnectionFailure
 @property  long long timeToConnectionFailure

  // instance methods
  -[NWAWDLBClientConnectionReport isEqual:]
  -[NWAWDLBClientConnectionReport copyWithZone:]
  -[NWAWDLBClientConnectionReport dictionaryRepresentation]
  -[NWAWDLBClientConnectionReport timestamp]
  -[NWAWDLBClientConnectionReport hasTimestamp]
  -[NWAWDLBClientConnectionReport setTimestamp:]
  -[NWAWDLBClientConnectionReport writeTo:]
  -[NWAWDLBClientConnectionReport mergeFrom:]
  -[NWAWDLBClientConnectionReport readFrom:]
  -[NWAWDLBClientConnectionReport copyTo:]
  -[NWAWDLBClientConnectionReport setHasTimestamp:]
  -[NWAWDLBClientConnectionReport setConnectionDuration:]
  -[NWAWDLBClientConnectionReport setHasConnectionDuration:]
  -[NWAWDLBClientConnectionReport hasConnectionDuration]
  -[NWAWDLBClientConnectionReport setBytesSent:]
  -[NWAWDLBClientConnectionReport setHasBytesSent:]
  -[NWAWDLBClientConnectionReport hasBytesSent]
  -[NWAWDLBClientConnectionReport setBytesReceived:]
  -[NWAWDLBClientConnectionReport setHasBytesReceived:]
  -[NWAWDLBClientConnectionReport hasBytesReceived]
  -[NWAWDLBClientConnectionReport connectionDuration]
  -[NWAWDLBClientConnectionReport bytesSent]
  -[NWAWDLBClientConnectionReport bytesReceived]
  -[NWAWDLBClientConnectionReport setConnectionJoiningFailure:]
  -[NWAWDLBClientConnectionReport setHasConnectionJoiningFailure:]
  -[NWAWDLBClientConnectionReport hasConnectionJoiningFailure]
  -[NWAWDLBClientConnectionReport setConnectionJoiningLbConnectionState:]
  -[NWAWDLBClientConnectionReport setHasConnectionJoiningLbConnectionState:]
  -[NWAWDLBClientConnectionReport hasConnectionJoiningLbConnectionState]
  -[NWAWDLBClientConnectionReport setConnectionJoiningLbConnectionMigration:]
  -[NWAWDLBClientConnectionReport setHasConnectionJoiningLbConnectionMigration:]
  -[NWAWDLBClientConnectionReport hasConnectionJoiningLbConnectionMigration]
  -[NWAWDLBClientConnectionReport setConnectionServiceId:]
  -[NWAWDLBClientConnectionReport setHasConnectionServiceId:]
  -[NWAWDLBClientConnectionReport hasConnectionServiceId]
  -[NWAWDLBClientConnectionReport setDataPathResult:]
  -[NWAWDLBClientConnectionReport setHasDataPathResult:]
  -[NWAWDLBClientConnectionReport hasDataPathResult]
  -[NWAWDLBClientConnectionReport setTimeToFirstResponse:]
  -[NWAWDLBClientConnectionReport setHasTimeToFirstResponse:]
  -[NWAWDLBClientConnectionReport hasTimeToFirstResponse]
  -[NWAWDLBClientConnectionReport setTimeToConnectionFailure:]
  -[NWAWDLBClientConnectionReport setHasTimeToConnectionFailure:]
  -[NWAWDLBClientConnectionReport hasTimeToConnectionFailure]
  -[NWAWDLBClientConnectionReport connectionJoiningFailure]
  -[NWAWDLBClientConnectionReport connectionJoiningLbConnectionState]
  -[NWAWDLBClientConnectionReport connectionJoiningLbConnectionMigration]
  -[NWAWDLBClientConnectionReport connectionServiceId]
  -[NWAWDLBClientConnectionReport dataPathResult]
  -[NWAWDLBClientConnectionReport timeToFirstResponse]
  -[NWAWDLBClientConnectionReport timeToConnectionFailure]


NWPBUpdatePath : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasResponsePath
 @property  NWPBPath *responsePath

  // instance methods
  -[NWPBUpdatePath isEqual:]
  -[NWPBUpdatePath copyWithZone:]
  -[NWPBUpdatePath .cxx_destruct]
  -[NWPBUpdatePath dictionaryRepresentation]
  -[NWPBUpdatePath writeTo:]
  -[NWPBUpdatePath mergeFrom:]
  -[NWPBUpdatePath readFrom:]
  -[NWPBUpdatePath copyTo:]
  -[NWPBUpdatePath hasResponsePath]
  -[NWPBUpdatePath responsePath]
  -[NWPBUpdatePath setResponsePath:]


NWResolver : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_nw_resolver> *internalResolver
 @property  long long internalStatus
 @property  NSSet *internalResolvedEndpoints
 @property  NSArray *internalResolvedEndpointArray
 @property  long long status
 @property  NWEndpoint *endpoint
 @property  NWParameters *parameters
 @property  NSSet *resolvedEndpoints
 @property  NSArray *resolvedEndpointArray

  // class methods
  +[NWResolver automaticallyNotifiesObserversForKey:]

  // instance methods
  -[NWResolver dealloc]
  -[NWResolver .cxx_destruct]
  -[NWResolver initWithPath:]
  -[NWResolver endpoint]
  -[NWResolver status]
  -[NWResolver parameters]
  -[NWResolver initWithEndpoint:parameters:]
  -[NWResolver setUpdateHandler]
  -[NWResolver copyResolvedEndpoints]
  -[NWResolver resolvedEndpoints]
  -[NWResolver copyResolvedEndpointArray]
  -[NWResolver resolvedEndpointArray]
  -[NWResolver internalResolver]
  -[NWResolver internalStatus]
  -[NWResolver setInternalStatus:]
  -[NWResolver internalResolvedEndpoints]
  -[NWResolver setInternalResolvedEndpoints:]
  -[NWResolver internalResolvedEndpointArray]
  -[NWResolver setInternalResolvedEndpointArray:]


NWTCPListener : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_nw_listener> *internalListener
 @property  NWParameters *parameters
 @property  NWEndpoint *endpoint
 @property  NSString *launchdKey
 @property  <NWTCPListenerDelegate> *delegate
 @property  NSError *error
 @property  NWEndpoint *localEndpoint

  // instance methods
  -[NWTCPListener delegate]
  -[NWTCPListener setDelegate:]
  -[NWTCPListener handleError:]
  -[NWTCPListener .cxx_destruct]
  -[NWTCPListener error]
  -[NWTCPListener cancel]
  -[NWTCPListener endpoint]
  -[NWTCPListener setError:]
  -[NWTCPListener parameters]
  -[NWTCPListener setEndpoint:]
  -[NWTCPListener setParameters:]
  -[NWTCPListener initWithParameters:delegate:]
  -[NWTCPListener localEndpoint]
  -[NWTCPListener setLocalEndpoint:]
  -[NWTCPListener startInternal]
  -[NWTCPListener internalListener]
  -[NWTCPListener setInternalListener:]
  -[NWTCPListener handleNewConnection:]
  -[NWTCPListener initWithParameters:delegate:launchdKey:bonjourEndpoint:]
  -[NWTCPListener initWithLaunchdKey:parameters:delegate:]
  -[NWTCPListener initWithBonjourServiceEndpoint:parameters:delegate:]
  -[NWTCPListener launchdKey]
  -[NWTCPListener setLaunchdKey:]


NWPathEvaluator : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_nw_path_evaluator> *internalEvaluator
 @property  NWPath *internalPath
 @property  NWParameters *parameters
 @property  NWPath *path
 @property  NWEndpoint *endpoint

  // class methods
  +[NWPathEvaluator initialize]
  +[NWPathEvaluator automaticallyNotifiesObserversForKey:]
  +[NWPathEvaluator copySavedPathEvaluatorForEndpoint:parameters:]
  +[NWPathEvaluator savePathEvaluator:]
  +[NWPathEvaluator sharedDefaultEvaluator]

  // instance methods
  -[NWPathEvaluator init]
  -[NWPathEvaluator dealloc]
  -[NWPathEvaluator isEqual:]
  -[NWPathEvaluator .cxx_destruct]
  -[NWPathEvaluator path]
  -[NWPathEvaluator endpoint]
  -[NWPathEvaluator parameters]
  -[NWPathEvaluator initWithEndpoint:parameters:]
  -[NWPathEvaluator internalPath]
  -[NWPathEvaluator setInternalPath:]
  -[NWPathEvaluator initWithEvaluator:parameters:]
  -[NWPathEvaluator initWithBrowseDescriptor:parameters:]
  -[NWPathEvaluator initWithListenParameters:]
  -[NWPathEvaluator copyPath]
  -[NWPathEvaluator triggerPathAgentsIncludingVoluntary:withCompletionHandler:]
  -[NWPathEvaluator satisfyPathAgentsWithCompletionHandler:]
  -[NWPathEvaluator triggerVoluntaryPathAgentsWithCompletionHandler:]
  -[NWPathEvaluator requestNexus]
  -[NWPathEvaluator matchesEndpoint:parameters:]
  -[NWPathEvaluator internalEvaluator]


NWAWDLibnetcoreTCPECNStatsReport : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTcpECNClientNegotiationEnabled
 @property  BOOL tcpECNClientNegotiationEnabled
 @property  BOOL hasTcpECNServerNegotiationEnabled
 @property  BOOL tcpECNServerNegotiationEnabled
 @property  BOOL hasTcpECNClientSetup
 @property  unsigned long tcpECNClientSetup
 @property  BOOL hasTcpECNServerSetup
 @property  unsigned long tcpECNServerSetup
 @property  BOOL hasTcpECNClientSuccess
 @property  unsigned long tcpECNClientSuccess
 @property  BOOL hasTcpECNServerSuccess
 @property  unsigned long tcpECNServerSuccess
 @property  BOOL hasTcpECNNotSupportedPeer
 @property  unsigned long tcpECNNotSupportedPeer
 @property  BOOL hasTcpECNSynLost
 @property  unsigned long tcpECNSynLost
 @property  BOOL hasTcpECNSynAckLost
 @property  unsigned long tcpECNSynAckLost
 @property  BOOL hasTcpECNRecvCE
 @property  unsigned long tcpECNRecvCE
 @property  BOOL hasTcpECNRecvECE
 @property  unsigned long tcpECNRecvECE
 @property  BOOL hasTcpECNSentECE
 @property  unsigned long tcpECNSentECE
 @property  BOOL hasTcpECNConnRecvCE
 @property  unsigned long tcpECNConnRecvCE
 @property  BOOL hasTcpECNConnRecvECE
 @property  unsigned long tcpECNConnRecvECE
 @property  BOOL hasTcpECNConnPacketLossNoCE
 @property  unsigned long tcpECNConnPacketLossNoCE
 @property  BOOL hasTcpECNConnPacketLossCE
 @property  unsigned long tcpECNConnPacketLossCE
 @property  BOOL hasTcpECNConnNoPacketLossCE
 @property  unsigned long tcpECNConnNoPacketLossCE
 @property  BOOL hasTcpECNFallbackSynLoss
 @property  unsigned long tcpECNFallbackSynLoss
 @property  BOOL hasTcpECNFallbackReorder
 @property  unsigned long tcpECNFallbackReorder
 @property  BOOL hasTcpECNFallbackCE
 @property  unsigned long tcpECNFallbackCE

  // instance methods
  -[NWAWDLibnetcoreTCPECNStatsReport isEqual:]
  -[NWAWDLibnetcoreTCPECNStatsReport copyWithZone:]
  -[NWAWDLibnetcoreTCPECNStatsReport dictionaryRepresentation]
  -[NWAWDLibnetcoreTCPECNStatsReport writeTo:]
  -[NWAWDLibnetcoreTCPECNStatsReport mergeFrom:]
  -[NWAWDLibnetcoreTCPECNStatsReport readFrom:]
  -[NWAWDLibnetcoreTCPECNStatsReport copyTo:]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNClientNegotiationEnabled:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNClientNegotiationEnabled:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNClientNegotiationEnabled]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNServerNegotiationEnabled:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNServerNegotiationEnabled:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNServerNegotiationEnabled]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNClientSetup:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNClientSetup:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNClientSetup]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNServerSetup:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNServerSetup:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNServerSetup]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNClientSuccess:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNClientSuccess:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNClientSuccess]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNServerSuccess:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNServerSuccess:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNServerSuccess]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNNotSupportedPeer:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNNotSupportedPeer:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNNotSupportedPeer]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNSynLost:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNSynLost:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNSynLost]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNSynAckLost:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNSynAckLost:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNSynAckLost]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNRecvCE:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNRecvCE:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNRecvCE]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNRecvECE:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNRecvECE:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNRecvECE]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNSentECE:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNSentECE:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNSentECE]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNConnRecvCE:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNConnRecvCE:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNConnRecvCE]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNConnRecvECE:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNConnRecvECE:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNConnRecvECE]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNConnPacketLossNoCE:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNConnPacketLossNoCE:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNConnPacketLossNoCE]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNConnPacketLossCE:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNConnPacketLossCE:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNConnPacketLossCE]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNConnNoPacketLossCE:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNConnNoPacketLossCE:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNConnNoPacketLossCE]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNFallbackSynLoss:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNFallbackSynLoss:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNFallbackSynLoss]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNFallbackReorder:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNFallbackReorder:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNFallbackReorder]
  -[NWAWDLibnetcoreTCPECNStatsReport setTcpECNFallbackCE:]
  -[NWAWDLibnetcoreTCPECNStatsReport setHasTcpECNFallbackCE:]
  -[NWAWDLibnetcoreTCPECNStatsReport hasTcpECNFallbackCE]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNClientNegotiationEnabled]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNServerNegotiationEnabled]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNClientSetup]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNServerSetup]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNClientSuccess]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNServerSuccess]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNNotSupportedPeer]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNSynLost]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNSynAckLost]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNRecvCE]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNRecvECE]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNSentECE]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNConnRecvCE]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNConnRecvECE]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNConnPacketLossNoCE]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNConnPacketLossCE]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNConnNoPacketLossCE]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNFallbackSynLoss]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNFallbackReorder]
  -[NWAWDLibnetcoreTCPECNStatsReport tcpECNFallbackCE]


NSMutableString(NEPrettyPrint)
	// instance methods
	-[NSMutableString(NEPrettyPrint) appendPrettyObject:withName:indent:showFullContent:]
	-[NSMutableString(NEPrettyPrint) appendPrettyBOOL:withName:indent:]
	-[NSMutableString(NEPrettyPrint) appendPrettyInt:withName:indent:]

01 00 0240 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0300 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
