|| __DATA.__common __ZN9OpenSteer6PlugIn15itemsInRegistryE
|| __DATA.__common __ZN9OpenSteer6PlugIn8registryE
|| __DATA.__objc_data _OBJC_CLASS_$_GKARC4RandomSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKAgent
|| __DATA.__objc_data _OBJC_CLASS_$_GKAgent2D
|| __DATA.__objc_data _OBJC_CLASS_$_GKAgent3D
|| __DATA.__objc_data _OBJC_CLASS_$_GKBehavior
|| __DATA.__objc_data _OBJC_CLASS_$_GKBillowNoiseSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKCheckerboardNoiseSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKCircleObstacle
|| __DATA.__objc_data _OBJC_CLASS_$_GKCoherentNoiseSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKComponent
|| __DATA.__objc_data _OBJC_CLASS_$_GKComponentSystem
|| __DATA.__objc_data _OBJC_CLASS_$_GKCompositeBehavior
|| __DATA.__objc_data _OBJC_CLASS_$_GKConstantNoiseSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKCylindersNoiseSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDecisionNode
|| __DATA.__objc_data _OBJC_CLASS_$_GKDecisionTree
|| __DATA.__objc_data _OBJC_CLASS_$_GKEntity
|| __DATA.__objc_data _OBJC_CLASS_$_GKGaussianDistribution
|| __DATA.__objc_data _OBJC_CLASS_$_GKGoal
|| __DATA.__objc_data _OBJC_CLASS_$_GKGraph
|| __DATA.__objc_data _OBJC_CLASS_$_GKGraphNode
|| __DATA.__objc_data _OBJC_CLASS_$_GKGraphNode2D
|| __DATA.__objc_data _OBJC_CLASS_$_GKGraphNode3D
|| __DATA.__objc_data _OBJC_CLASS_$_GKGridGraph
|| __DATA.__objc_data _OBJC_CLASS_$_GKGridGraphNode
|| __DATA.__objc_data _OBJC_CLASS_$_GKLinearCongruentialRandomSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKMersenneTwisterRandomSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKMeshGraph
|| __DATA.__objc_data _OBJC_CLASS_$_GKMinmaxStrategist
|| __DATA.__objc_data _OBJC_CLASS_$_GKMonteCarloStrategist
|| __DATA.__objc_data _OBJC_CLASS_$_GKNSPredicateRule
|| __DATA.__objc_data _OBJC_CLASS_$_GKNoise
|| __DATA.__objc_data _OBJC_CLASS_$_GKNoiseMap
|| __DATA.__objc_data _OBJC_CLASS_$_GKNoiseSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKObstacle
|| __DATA.__objc_data _OBJC_CLASS_$_GKObstacleGraph
|| __DATA.__objc_data _OBJC_CLASS_$_GKOctree
|| __DATA.__objc_data _OBJC_CLASS_$_GKOctreeNode
|| __DATA.__objc_data _OBJC_CLASS_$_GKPath
|| __DATA.__objc_data _OBJC_CLASS_$_GKPerlinNoiseSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKPolygonObstacle
|| __DATA.__objc_data _OBJC_CLASS_$_GKQuadtree
|| __DATA.__objc_data _OBJC_CLASS_$_GKQuadtreeNode
|| __DATA.__objc_data _OBJC_CLASS_$_GKRTree
|| __DATA.__objc_data _OBJC_CLASS_$_GKRandomDistribution
|| __DATA.__objc_data _OBJC_CLASS_$_GKRandomSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKRidgedNoiseSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKRule
|| __DATA.__objc_data _OBJC_CLASS_$_GKRuleSystem
|| __DATA.__objc_data _OBJC_CLASS_$_GKSCNNodeComponent
|| __DATA.__objc_data _OBJC_CLASS_$_GKSKNodeComponent
|| __DATA.__objc_data _OBJC_CLASS_$_GKScene
|| __DATA.__objc_data _OBJC_CLASS_$_GKShuffledDistribution
|| __DATA.__objc_data _OBJC_CLASS_$_GKSphereObstacle
|| __DATA.__objc_data _OBJC_CLASS_$_GKSpheresNoiseSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKState
|| __DATA.__objc_data _OBJC_CLASS_$_GKStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_GKSystemArc4RandomSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKVoronoiNoiseSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKARC4RandomSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAgent
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAgent2D
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAgent3D
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBehavior
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBillowNoiseSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCheckerboardNoiseSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCircleObstacle
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCoherentNoiseSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_GKComponentSystem
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCompositeBehavior
|| __DATA.__objc_data _OBJC_METACLASS_$_GKConstantNoiseSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCylindersNoiseSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDecisionNode
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDecisionTree
|| __DATA.__objc_data _OBJC_METACLASS_$_GKEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGaussianDistribution
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGoal
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGraph
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGraphNode
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGraphNode2D
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGraphNode3D
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGridGraph
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGridGraphNode
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLinearCongruentialRandomSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMersenneTwisterRandomSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMeshGraph
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMinmaxStrategist
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMonteCarloStrategist
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNSPredicateRule
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNoise
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNoiseMap
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNoiseSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKObstacle
|| __DATA.__objc_data _OBJC_METACLASS_$_GKObstacleGraph
|| __DATA.__objc_data _OBJC_METACLASS_$_GKOctree
|| __DATA.__objc_data _OBJC_METACLASS_$_GKOctreeNode
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPath
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPerlinNoiseSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPolygonObstacle
|| __DATA.__objc_data _OBJC_METACLASS_$_GKQuadtree
|| __DATA.__objc_data _OBJC_METACLASS_$_GKQuadtreeNode
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRTree
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRandomDistribution
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRandomSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRidgedNoiseSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRule
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRuleSystem
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSCNNodeComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSKNodeComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_GKScene
|| __DATA.__objc_data _OBJC_METACLASS_$_GKShuffledDistribution
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSphereObstacle
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSpheresNoiseSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKState
|| __DATA.__objc_data _OBJC_METACLASS_$_GKStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSystemArc4RandomSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKVoronoiNoiseSource
|| __DATA_CONST.__const __ZTIN9OpenSteer15PolygonObstacleE
|| __DATA_CONST.__const __ZTIN9OpenSteer15PolylinePathwayE
|| __DATA_CONST.__const __ZTIN9OpenSteer6PlugInE
|| __DATA_CONST.__const __ZTVN9OpenSteer15PolygonObstacleE
|| __DATA_CONST.__const __ZTVN9OpenSteer15PolylinePathwayE
|| __DATA_CONST.__const __ZTVN9OpenSteer6PlugInE
|| __TEXT.__const __ZN9OpenSteer4Vec32upE
|| __TEXT.__const __ZN9OpenSteer4Vec34sideE
|| __TEXT.__const __ZN9OpenSteer4Vec34zeroE
|| __TEXT.__const __ZN9OpenSteer4Vec37forwardE
|| __TEXT.__const __ZN9OpenSteer6PlugIn19totalSizeOfRegistryE
|| __TEXT.__const __ZTSN9OpenSteer15PolygonObstacleE
|| __TEXT.__const __ZTSN9OpenSteer15PolylinePathwayE
|| __TEXT.__const __ZTSN9OpenSteer6PlugInE
|| __TEXT.__text _GKClosestPointsBetweenLineSegments
|| __TEXT.__text _GKDoesCircleIntersectLine
|| __TEXT.__text _GKDoesCircleIntersectLineSegment
|| __TEXT.__text _GKDoesCircleIntersectPolygon
|| __TEXT.__text _GKGetCircleToLineIntersectionPoints
|| __TEXT.__text _GKGetCircleToLineSegmentIntersectionPoints
|| __TEXT.__text _GKGetClosestPointOnLineSegmentToPoint
|| __TEXT.__text _GKGetLineSegmentToLineSegmentIntersectionPoint
|| __TEXT.__text _GKGetLineToLineIntersection
|| __TEXT.__text __Z10GKFindPathP11GKGraphNodeS0_
|| __TEXT.__text __Z10GKFindPathP12GKCGraphNodeS0_RNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE
|| __TEXT.__text __ZN9OpenSteer15PolygonObstacle31findIntersectionWithVehiclePathERKNS_15AbstractVehicleERNS_16PathIntersectionEf
|| __TEXT.__text __ZN9OpenSteer15PolygonObstacleC1ERNSt3__16vectorINS_4Vec3ENS1_9allocatorIS3_EEEE
|| __TEXT.__text __ZN9OpenSteer15PolygonObstacleC1Ev
|| __TEXT.__text __ZN9OpenSteer15PolygonObstacleC2ERNSt3__16vectorINS_4Vec3ENS1_9allocatorIS3_EEEE
|| __TEXT.__text __ZN9OpenSteer15PolygonObstacleC2Ev
|| __TEXT.__text __ZN9OpenSteer15PolylinePathway10initializeEiPKNS_4Vec3Efb
|| __TEXT.__text __ZN9OpenSteer15PolylinePathway14mapPointToPathERKNS_4Vec3ERS1_Rf
|| __TEXT.__text __ZN9OpenSteer15PolylinePathway22mapPathDistanceToPointEf
|| __TEXT.__text __ZN9OpenSteer15PolylinePathway22mapPointToPathDistanceERKNS_4Vec3E
|| __TEXT.__text __ZN9OpenSteer15PolylinePathway22pointToSegmentDistanceERKNS_4Vec3ES3_S3_
|| __TEXT.__text __ZN9OpenSteer15PolylinePathwayC1EiPKNS_4Vec3Efb
|| __TEXT.__text __ZN9OpenSteer15PolylinePathwayC2EiPKNS_4Vec3Efb
|| __TEXT.__text __ZN9OpenSteer15PolylinePathwayD0Ev
|| __TEXT.__text __ZN9OpenSteer15PolylinePathwayD1Ev
|| __TEXT.__text __ZN9OpenSteer15PolylinePathwayD2Ev
|| __TEXT.__text __ZN9OpenSteer21findPerpendicularIn3dERKNS_4Vec3E
|| __TEXT.__text __ZN9OpenSteer29vecLimitDeviationAngleUtilityEbRKNS_4Vec3EfS2_
|| __TEXT.__text __ZN9OpenSteer30RandomVectorInUnitRadiusSphereEv
|| __TEXT.__text __ZN9OpenSteer30randomVectorOnUnitRadiusXZDiskEv
|| __TEXT.__text __ZN9OpenSteer6PlugIn10applyToAllEPFvRS0_E
|| __TEXT.__text __ZN9OpenSteer6PlugIn10findByNameEPKc
|| __TEXT.__text __ZN9OpenSteer6PlugIn11findDefaultEv
|| __TEXT.__text __ZN9OpenSteer6PlugIn13addToRegistryEv
|| __TEXT.__text __ZN9OpenSteer6PlugIn20sortBySelectionOrderEv
|| __TEXT.__text __ZN9OpenSteer6PlugIn4nextEv
|| __TEXT.__text __ZN9OpenSteer6PlugInC2Ev
|| __TEXT.__text __ZN9OpenSteer6PlugInD0Ev
|| __TEXT.__text __ZN9OpenSteer6PlugInD1Ev
|| __TEXT.__text __ZN9OpenSteer6PlugInD2Ev
|| __TEXT.__text __ZNK9OpenSteer15PolygonObstacle12steerToAvoidERKNS_15AbstractVehicleEf
|| __TEXT.__text _lqAddToBin
|| __TEXT.__text _lqBinForLocation
|| __TEXT.__text _lqCreateDatabase
|| __TEXT.__text _lqDeleteDatabase
|| __TEXT.__text _lqFindNearestNeighborWithinRadius
|| __TEXT.__text _lqInitClientProxy
|| __TEXT.__text _lqInitDatabase
|| __TEXT.__text _lqMapOverAllObjects
|| __TEXT.__text _lqMapOverAllObjectsInLocality
|| __TEXT.__text _lqRemoveAllObjects
|| __TEXT.__text _lqRemoveFromBin
|| __TEXT.__text _lqUpdateForNewLocation
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreML: _OBJC_CLASS_$_MLGKDecisionTree
__ Foundation: _NSClassFromString
__ Foundation: _NSDefaultMallocZone
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLog
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSValue
__ SceneKit: _OBJC_CLASS_$_SCNNode
__ SceneKit: _OBJC_CLASS_$_SCNScene
__ Security: _SecRandomCopyBytes
__ SpriteKit: _OBJC_CLASS_$_SKNode
__ SpriteKit: _OBJC_CLASS_$_SKSpriteNode
__ SpriteKit: _OBJC_CLASS_$_SKTexture
__ SpriteKit: _OBJC_CLASS_$_SKTileGroup
__ SpriteKit: _OBJC_CLASS_$_SKTileMapNode
__ UIKit: _OBJC_CLASS_$_UIColor
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: _acos
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _atan2f
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _cosf
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _fmodf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _logf
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _tan
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt13runtime_errorC1EPKc
__ libc++.1.dylib: __ZNSt13runtime_errorD1Ev
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEx
__ libc++.1.dylib: __ZNSt3__14coutE
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt9exceptionD2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTIPKc
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTISt9exception
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv121__vmi_class_type_infoE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___cxa_rethrow
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___dynamic_cast
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
GKRTree : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long queryReserve

  // class methods
  +[GKRTree treeWithMaxNumberOfChildren:]

  // instance methods
  -[GKRTree init]
  -[GKRTree dealloc]
  -[GKRTree initWithMaxNumberOfChildren:]
  -[GKRTree setQueryReserve:]
  -[GKRTree queryReserve]
  -[GKRTree addElement:boundingRectMin:boundingRectMax:splitStrategy:]
  -[GKRTree removeElement:boundingRectMin:boundingRectMax:]
  -[GKRTree elementsInBoundingRectMin:rectMax:]


GKARC4RandomSource : GKRandomSource
 @property  NSData *seed

  // class methods
  +[GKARC4RandomSource supportsSecureCoding]

  // instance methods
  -[GKARC4RandomSource copyWithZone:]
  -[GKARC4RandomSource seed]
  -[GKARC4RandomSource init]
  -[GKARC4RandomSource dealloc]
  -[GKARC4RandomSource .cxx_destruct]
  -[GKARC4RandomSource encodeWithCoder:]
  -[GKARC4RandomSource nextInt]
  -[GKARC4RandomSource nextBool]
  -[GKARC4RandomSource setSeed:]
  -[GKARC4RandomSource initWithSeed:]
  -[GKARC4RandomSource nextIntWithUpperBound:]
  -[GKARC4RandomSource nextBits:]
  -[GKARC4RandomSource nextUniform]
  -[GKARC4RandomSource dropValuesWithCount:]
  -[GKARC4RandomSource initWithCoder:]


GKCylindersNoiseSource : GKNoiseSource
 @property  double frequency

  // class methods
  +[GKCylindersNoiseSource cylindersNoiseWithFrequency:]

  // instance methods
  -[GKCylindersNoiseSource frequency]
  -[GKCylindersNoiseSource setFrequency:]
  -[GKCylindersNoiseSource init]
  -[GKCylindersNoiseSource initWithFrequency:]
  -[GKCylindersNoiseSource valueAt:]
  -[GKCylindersNoiseSource cloneModule]


GKNoiseMap : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *gradientColors
 @property  void size
 @property  void origin
 @property  void sampleCount
 @property  BOOL seamless

  // class methods
  +[GKNoiseMap noiseMapWithNoise:]
  +[GKNoiseMap noiseMapWithNoise:size:origin:sampleCount:seamless:]

  // instance methods
  -[GKNoiseMap sampleCount]
  -[GKNoiseMap init]
  -[GKNoiseMap origin]
  -[GKNoiseMap dealloc]
  -[GKNoiseMap size]
  -[GKNoiseMap .cxx_destruct]
  -[GKNoiseMap gradientColors]
  -[GKNoiseMap setGradientColors:]
  -[GKNoiseMap initWithNoise:]
  -[GKNoiseMap initWithNoise:size:origin:sampleCount:seamless:]
  -[GKNoiseMap mapIndexX:y:]
  -[GKNoiseMap __colorData]
  -[GKNoiseMap valueAtPosition:]
  -[GKNoiseMap interpolatedValueAtPosition:]
  -[GKNoiseMap setValue:atPosition:]
  -[GKNoiseMap isSeamless]


GKEntity : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSArray *components

  // class methods
  +[GKEntity entity]
  +[GKEntity supportsSecureCoding]

  // instance methods
  -[GKEntity copyWithZone:]
  -[GKEntity removeComponent:]
  -[GKEntity init]
  -[GKEntity dealloc]
  -[GKEntity components]
  -[GKEntity componentForKey:]
  -[GKEntity .cxx_destruct]
  -[GKEntity encodeWithCoder:]
  -[GKEntity copy]
  -[GKEntity addComponent:]
  -[GKEntity initWithCoder:]
  -[GKEntity updateWithDeltaTime:]
  -[GKEntity removeComponentForClass:]
  -[GKEntity componentForClass:]


GKMeshGraph : GKGraph
 @property  NSArray *obstacles
 @property  float bufferRadius
 @property  unsigned long triangulationMode
 @property  unsigned long triangleCount

  // class methods
  +[GKMeshGraph supportsSecureCoding]
  +[GKMeshGraph graphWithBufferRadius:minCoordinate:maxCoordinate:nodeClass:]
  +[GKMeshGraph graphWithBufferRadius:minCoordinate:maxCoordinate:]

  // instance methods
  -[GKMeshGraph .cxx_destruct]
  -[GKMeshGraph encodeWithCoder:]
  -[GKMeshGraph nodeClass]
  -[GKMeshGraph triangleCount]
  -[GKMeshGraph initWithCoder:]
  -[GKMeshGraph initWithBufferRadius:minCoordinate:maxCoordinate:nodeClass:]
  -[GKMeshGraph bufferRadius]
  -[GKMeshGraph makeCGraph]
  -[GKMeshGraph cMeshGraph]
  -[GKMeshGraph obstacles]
  -[GKMeshGraph setTriangulationMode:]
  -[GKMeshGraph triangulationMode]
  -[GKMeshGraph setMakeNodesFromTriangleCenters:]
  -[GKMeshGraph makeNodesFromTriangleCenters]
  -[GKMeshGraph setMakeNodesFromTriangleVertices:]
  -[GKMeshGraph makeNodesFromTriangleVertices]
  -[GKMeshGraph setMakeNodesFromTriangleEdgeMidpoints:]
  -[GKMeshGraph makeNodesFromTriangleEdgeMidpoints]
  -[GKMeshGraph initWithBufferRadius:minCoordinate:maxCoordinate:]
  -[GKMeshGraph addObstacles:]
  -[GKMeshGraph removeObstacles:]
  -[GKMeshGraph connectNodeUsingObstacles:]
  -[GKMeshGraph triangulate]
  -[GKMeshGraph triangleAtIndex:]
  -[GKMeshGraph classForGenericArgumentAtIndex:]


GKRandomDistribution : NSObject /usr/lib/libc++.1.dylib <GKRandom>
 @property  long long lowestValue
 @property  long long highestValue
 @property  unsigned long numberOfPossibleOutcomes

  // class methods
  +[GKRandomDistribution d6]
  +[GKRandomDistribution d20]
  +[GKRandomDistribution distributionWithLowestValue:highestValue:]
  +[GKRandomDistribution distributionForDieWithSideCount:]

  // instance methods
  -[GKRandomDistribution init]
  -[GKRandomDistribution .cxx_destruct]
  -[GKRandomDistribution nextInt]
  -[GKRandomDistribution nextBool]
  -[GKRandomDistribution nextIntWithUpperBound:]
  -[GKRandomDistribution initWithRandomSource:lowestValue:highestValue:]
  -[GKRandomDistribution lowestValue]
  -[GKRandomDistribution highestValue]
  -[GKRandomDistribution numberOfPossibleOutcomes]
  -[GKRandomDistribution nextUniform]


GKGaussianDistribution : GKRandomDistribution
 @property  float mean
 @property  float deviation

  // instance methods
  -[GKGaussianDistribution mean]
  -[GKGaussianDistribution nextInt]
  -[GKGaussianDistribution initWithRandomSource:lowestValue:highestValue:]
  -[GKGaussianDistribution initWithRandomSource:mean:deviation:]
  -[GKGaussianDistribution deviation]


GKShuffledDistribution : GKRandomDistribution
  // instance methods
  -[GKShuffledDistribution dealloc]
  -[GKShuffledDistribution nextInt]
  -[GKShuffledDistribution initWithRandomSource:lowestValue:highestValue:]
  -[GKShuffledDistribution uniformDistance]
  -[GKShuffledDistribution setUniformDistance:]
  -[GKShuffledDistribution initWithRandomSource:lowestValue:highestValue:delta:]


GKMinmaxStrategist : NSObject /usr/lib/libc++.1.dylib <GKStrategist>
 @property  long long maxLookAheadDepth
 @property  <GKGameModel> *gameModel
 @property  <GKRandom> *randomSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKMinmaxStrategist init]
  -[GKMinmaxStrategist dealloc]
  -[GKMinmaxStrategist randomSource]
  -[GKMinmaxStrategist setRandomSource:]
  -[GKMinmaxStrategist gameModel]
  -[GKMinmaxStrategist bestMoveForActivePlayer]
  -[GKMinmaxStrategist setGameModel:]
  -[GKMinmaxStrategist maxLookAheadDepth]
  -[GKMinmaxStrategist setMaxLookAheadDepth:]
  -[GKMinmaxStrategist bestMoveForPlayer:]
  -[GKMinmaxStrategist randomMoveForPlayer:fromNumberOfBestMoves:]


GKSKNodeComponent : GKComponent <GKSerializedNodeContaining, GKAgentDelegate>
 @property  SKNode *node
 @property  NSIndexPath *serializableNodeIndexPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKSKNodeComponent supportsSecureCoding]
  +[GKSKNodeComponent componentWithNode:]

  // instance methods
  -[GKSKNodeComponent setEntity:]
  -[GKSKNodeComponent copyWithZone:]
  -[GKSKNodeComponent node]
  -[GKSKNodeComponent initWithNode:]
  -[GKSKNodeComponent setNode:]
  -[GKSKNodeComponent .cxx_destruct]
  -[GKSKNodeComponent encodeWithCoder:]
  -[GKSKNodeComponent initWithCoder:]
  -[GKSKNodeComponent serializableNodeIndexPath]
  -[GKSKNodeComponent setSerializableNodeIndexPath:]
  -[GKSKNodeComponent agentWillUpdate:]
  -[GKSKNodeComponent agentDidUpdate:]


GKLinearCongruentialRandomSource : GKRandomSource
 @property  unsigned long seed

  // class methods
  +[GKLinearCongruentialRandomSource supportsSecureCoding]

  // instance methods
  -[GKLinearCongruentialRandomSource copyWithZone:]
  -[GKLinearCongruentialRandomSource seed]
  -[GKLinearCongruentialRandomSource init]
  -[GKLinearCongruentialRandomSource encodeWithCoder:]
  -[GKLinearCongruentialRandomSource nextInt]
  -[GKLinearCongruentialRandomSource nextBool]
  -[GKLinearCongruentialRandomSource setSeed:]
  -[GKLinearCongruentialRandomSource initWithSeed:]
  -[GKLinearCongruentialRandomSource nextIntWithUpperBound:]
  -[GKLinearCongruentialRandomSource nextBits:]
  -[GKLinearCongruentialRandomSource nextUniform]
  -[GKLinearCongruentialRandomSource initWithCoder:]


GKGraph : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSMutableDictionary *_info
 @property  NSArray *nodes

  // class methods
  +[GKGraph graph]
  +[GKGraph supportsSecureCoding]
  +[GKGraph graphWithNodes:]

  // instance methods
  -[GKGraph copyWithZone:]
  -[GKGraph init]
  -[GKGraph initWithNodes:]
  -[GKGraph removeNodes:]
  -[GKGraph dealloc]
  -[GKGraph .cxx_destruct]
  -[GKGraph set_info:]
  -[GKGraph _info]
  -[GKGraph encodeWithCoder:]
  -[GKGraph cGraph]
  -[GKGraph copy]
  -[GKGraph nodes]
  -[GKGraph initWithCoder:]
  -[GKGraph addNodes:]
  -[GKGraph makeCGraph]
  -[GKGraph nodesMut]
  -[GKGraph connectNodeToLowestCostNode:bidirectional:]
  -[GKGraph findPathFromNode:toNode:]


GKCheckerboardNoiseSource : GKNoiseSource
 @property  double squareSize

  // class methods
  +[GKCheckerboardNoiseSource checkerboardNoiseWithSquareSize:]

  // instance methods
  -[GKCheckerboardNoiseSource init]
  -[GKCheckerboardNoiseSource initWithSquareSize:]
  -[GKCheckerboardNoiseSource valueAt:]
  -[GKCheckerboardNoiseSource cloneModule]
  -[GKCheckerboardNoiseSource setSquareSize:]
  -[GKCheckerboardNoiseSource squareSize]


GKObstacle : NSObject /usr/lib/libc++.1.dylib

GKCircleObstacle : GKObstacle
 @property  float radius
 @property  void position

  // class methods
  +[GKCircleObstacle obstacleWithRadius:]

  // instance methods
  -[GKCircleObstacle position]
  -[GKCircleObstacle init]
  -[GKCircleObstacle setPosition:]
  -[GKCircleObstacle .cxx_construct]
  -[GKCircleObstacle initWithRadius:]
  -[GKCircleObstacle radius]
  -[GKCircleObstacle setRadius:]
  -[GKCircleObstacle obstacle]


GKPolygonObstacle : GKObstacle <NSSecureCoding>
 @property  unsigned long vertexCount

  // class methods
  +[GKPolygonObstacle supportsSecureCoding]
  +[GKPolygonObstacle obstacleWithPoints:count:]

  // instance methods
  -[GKPolygonObstacle init]
  -[GKPolygonObstacle vertexCount]
  -[GKPolygonObstacle dealloc]
  -[GKPolygonObstacle encodeWithCoder:]
  -[GKPolygonObstacle initWithPoints:count:]
  -[GKPolygonObstacle vertexAtIndex:]
  -[GKPolygonObstacle initWithCoder:]
  -[GKPolygonObstacle cPolygonObstacle]
  -[GKPolygonObstacle obstacle]
  -[GKPolygonObstacle setCPolygonObstacle:]


GKSphereObstacle : GKObstacle
 @property  float radius
 @property  void position

  // class methods
  +[GKSphereObstacle obstacleWithRadius:]

  // instance methods
  -[GKSphereObstacle position]
  -[GKSphereObstacle init]
  -[GKSphereObstacle setPosition:]
  -[GKSphereObstacle .cxx_construct]
  -[GKSphereObstacle initWithRadius:]
  -[GKSphereObstacle radius]
  -[GKSphereObstacle setRadius:]
  -[GKSphereObstacle obstacle]


GKBillowNoiseSource : GKCoherentNoiseSource
 @property  double persistence

  // class methods
  +[GKBillowNoiseSource billowNoiseSourceWithFrequency:octaveCount:persistence:lacunarity:seed:]

  // instance methods
  -[GKBillowNoiseSource persistence]
  -[GKBillowNoiseSource init]
  -[GKBillowNoiseSource setPersistence:]
  -[GKBillowNoiseSource valueAt:]
  -[GKBillowNoiseSource cloneModule]
  -[GKBillowNoiseSource initWithFrequency:octaveCount:persistence:lacunarity:seed:]


GKRandomSource : NSObject /usr/lib/libc++.1.dylib <GKRandom, NSSecureCoding, NSCopying>
  // class methods
  +[GKRandomSource supportsSecureCoding]
  +[GKRandomSource sharedRandom]
  +[GKRandomSource systemRandom]

  // instance methods
  -[GKRandomSource copyWithZone:]
  -[GKRandomSource init]
  -[GKRandomSource encodeWithCoder:]
  -[GKRandomSource nextInt]
  -[GKRandomSource nextBool]
  -[GKRandomSource nextIntWithUpperBound:]
  -[GKRandomSource nextUniform]
  -[GKRandomSource arrayByShufflingObjectsInArray:]
  -[GKRandomSource initWithCoder:]


GKDecisionNode : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[GKDecisionNode branches]
  -[GKDecisionNode dealloc]
  -[GKDecisionNode .cxx_destruct]
  -[GKDecisionNode attribute]
  -[GKDecisionNode setAttribute:]
  -[GKDecisionNode initWithNode:tree:]
  -[GKDecisionNode createChildWithAttribute:randomSource:withBranch:]
  -[GKDecisionNode createBranchWithValue:attribute:]
  -[GKDecisionNode createBranchWithPredicate:attribute:]
  -[GKDecisionNode createBranchWithWeight:attribute:]
  -[GKDecisionNode getNodeAtBranch:]


GKDecisionTree : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  GKDecisionNode *rootNode
 @property  GKRandomSource *randomSource

  // class methods
  +[GKDecisionTree supportsSecureCoding]

  // instance methods
  -[GKDecisionTree init]
  -[GKDecisionTree dealloc]
  -[GKDecisionTree .cxx_destruct]
  -[GKDecisionTree encodeWithCoder:]
  -[GKDecisionTree rootNode]
  -[GKDecisionTree setRootNode:]
  -[GKDecisionTree initWithURL:error:]
  -[GKDecisionTree initWithCoder:]
  -[GKDecisionTree randomSource]
  -[GKDecisionTree setRandomSource:]
  -[GKDecisionTree initWithExamples:actions:attributes:maxDepth:minSamplesSplit:]
  -[GKDecisionTree findActionForAnswers:]
  -[GKDecisionTree initWithAttribute:]
  -[GKDecisionTree initWithExamples:actions:attributes:]
  -[GKDecisionTree exportToURL:error:]
  -[GKDecisionTree getFlattenedTree]
  -[GKDecisionTree findAccuracyWithExamples:actions:attributes:]


GKMonteCarloStrategist : NSObject /usr/lib/libc++.1.dylib <GKStrategist>
 @property  unsigned long budget
 @property  unsigned long explorationParameter
 @property  <GKGameModel> *gameModel
 @property  <GKRandom> *randomSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKMonteCarloStrategist init]
  -[GKMonteCarloStrategist setBudget:]
  -[GKMonteCarloStrategist budget]
  -[GKMonteCarloStrategist dealloc]
  -[GKMonteCarloStrategist randomSource]
  -[GKMonteCarloStrategist setRandomSource:]
  -[GKMonteCarloStrategist gameModel]
  -[GKMonteCarloStrategist bestMoveForActivePlayer]
  -[GKMonteCarloStrategist setGameModel:]
  -[GKMonteCarloStrategist validateGameModel:]
  -[GKMonteCarloStrategist explorationParameter]
  -[GKMonteCarloStrategist setExplorationParameter:]


GKGraphNode : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSArray *connectedNodes

  // class methods
  +[GKGraphNode supportsSecureCoding]
  +[GKGraphNode node]

  // instance methods
  -[GKGraphNode init]
  -[GKGraphNode dealloc]
  -[GKGraphNode .cxx_destruct]
  -[GKGraphNode encodeWithCoder:]
  -[GKGraphNode removeConnection:]
  -[GKGraphNode initWithCoder:]
  -[GKGraphNode connectedNodes]
  -[GKGraphNode costToNode:]
  -[GKGraphNode estimatedCostToNode:]
  -[GKGraphNode cGraphNode]
  -[GKGraphNode findPathToNode:]
  -[GKGraphNode deleteCGraphNode]
  -[GKGraphNode makeCGraphNode]
  -[GKGraphNode findPathFromNode:]
  -[GKGraphNode addConnectionsToNodes:bidirectional:]
  -[GKGraphNode mutConnectedNodes]
  -[GKGraphNode addConnection:bidirectional:]
  -[GKGraphNode removeConnectionsToNodes:bidirectional:]


GKGraphNode2D : GKGraphNode
 @property  void position

  // class methods
  +[GKGraphNode2D supportsSecureCoding]
  +[GKGraphNode2D nodeWithPoint:]

  // instance methods
  -[GKGraphNode2D position]
  -[GKGraphNode2D init]
  -[GKGraphNode2D setPosition:]
  -[GKGraphNode2D encodeWithCoder:]
  -[GKGraphNode2D initWithCoder:]
  -[GKGraphNode2D initWithPoint:]
  -[GKGraphNode2D cGraphNode2D]
  -[GKGraphNode2D costToNode:]
  -[GKGraphNode2D estimatedCostToNode:]
  -[GKGraphNode2D deleteCGraphNode]
  -[GKGraphNode2D makeCGraphNode]


GKGraphNode3D : GKGraphNode
 @property  void position

  // class methods
  +[GKGraphNode3D supportsSecureCoding]
  +[GKGraphNode3D nodeWithPoint:]

  // instance methods
  -[GKGraphNode3D position]
  -[GKGraphNode3D init]
  -[GKGraphNode3D setPosition:]
  -[GKGraphNode3D encodeWithCoder:]
  -[GKGraphNode3D initWithCoder:]
  -[GKGraphNode3D initWithPoint:]
  -[GKGraphNode3D costToNode:]
  -[GKGraphNode3D estimatedCostToNode:]
  -[GKGraphNode3D deleteCGraphNode]
  -[GKGraphNode3D makeCGraphNode]
  -[GKGraphNode3D cGraphNode3D]


GKGridGraphNode : GKGraphNode
 @property  void gridPosition

  // class methods
  +[GKGridGraphNode supportsSecureCoding]
  +[GKGridGraphNode nodeWithGridPosition:]

  // instance methods
  -[GKGridGraphNode init]
  -[GKGridGraphNode gridPosition]
  -[GKGridGraphNode encodeWithCoder:]
  -[GKGridGraphNode initWithCoder:]
  -[GKGridGraphNode costToNode:]
  -[GKGridGraphNode estimatedCostToNode:]
  -[GKGridGraphNode cGridGraphNode]
  -[GKGridGraphNode deleteCGraphNode]
  -[GKGridGraphNode makeCGraphNode]
  -[GKGridGraphNode initWithGridPosition:]


GKHybridStrategist : NSObject /usr/lib/libc++.1.dylib <GKStrategist>
 @property  unsigned long budget
 @property  unsigned long explorationParameter
 @property  unsigned long maxLookAheadDepth
 @property  <GKGameModel> *gameModel
 @property  <GKRandom> *randomSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKHybridStrategist init]
  -[GKHybridStrategist setBudget:]
  -[GKHybridStrategist budget]
  -[GKHybridStrategist dealloc]
  -[GKHybridStrategist randomSource]
  -[GKHybridStrategist setRandomSource:]
  -[GKHybridStrategist gameModel]
  -[GKHybridStrategist bestMoveForActivePlayer]
  -[GKHybridStrategist setGameModel:]
  -[GKHybridStrategist maxLookAheadDepth]
  -[GKHybridStrategist setMaxLookAheadDepth:]
  -[GKHybridStrategist validateGameModel:]
  -[GKHybridStrategist explorationParameter]
  -[GKHybridStrategist setExplorationParameter:]
  -[GKHybridStrategist validateRandomSource]


GKRidgedNoiseSource : GKCoherentNoiseSource
  // class methods
  +[GKRidgedNoiseSource ridgedNoiseSourceWithFrequency:octaveCount:lacunarity:seed:]

  // instance methods
  -[GKRidgedNoiseSource init]
  -[GKRidgedNoiseSource valueAt:]
  -[GKRidgedNoiseSource cloneModule]
  -[GKRidgedNoiseSource initWithFrequency:octaveCount:lacunarity:seed:]


GKRuleSystem : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableDictionary *state
 @property  NSArray *rules
 @property  NSArray *agenda
 @property  NSArray *executed
 @property  NSArray *facts

  // instance methods
  -[GKRuleSystem rules]
  -[GKRuleSystem init]
  -[GKRuleSystem evaluate]
  -[GKRuleSystem gradeForFact:]
  -[GKRuleSystem facts]
  -[GKRuleSystem .cxx_destruct]
  -[GKRuleSystem agenda]
  -[GKRuleSystem addRule:]
  -[GKRuleSystem retractFact:]
  -[GKRuleSystem reset]
  -[GKRuleSystem state]
  -[GKRuleSystem executed]
  -[GKRuleSystem _addRuleToAgenda:]
  -[GKRuleSystem addRulesFromArray:]
  -[GKRuleSystem removeAllRules]
  -[GKRuleSystem minimumGradeForFacts:]
  -[GKRuleSystem maximumGradeForFacts:]
  -[GKRuleSystem assertFact:]
  -[GKRuleSystem assertFact:grade:]
  -[GKRuleSystem retractFact:grade:]


_GKBlockRule : GKRule
  // instance methods
  -[_GKBlockRule .cxx_destruct]
  -[_GKBlockRule performActionWithSystem:]
  -[_GKBlockRule initWithPredicate:action:]
  -[_GKBlockRule evaluatePredicateWithSystem:]


GKRule : NSObject /usr/lib/libc++.1.dylib
 @property  long long salience

  // class methods
  +[GKRule ruleWithPredicate:assertingFact:grade:]
  +[GKRule ruleWithPredicate:retractingFact:grade:]
  +[GKRule ruleWithBlockPredicate:action:]

  // instance methods
  -[GKRule performActionWithSystem:]
  -[GKRule salience]
  -[GKRule evaluatePredicateWithSystem:]
  -[GKRule setSalience:]


GKNSPredicateRule : GKRule
 @property  NSPredicate *predicate

  // instance methods
  -[GKNSPredicateRule .cxx_destruct]
  -[GKNSPredicateRule predicate]
  -[GKNSPredicateRule initWithPredicate:]
  -[GKNSPredicateRule evaluatePredicateWithSystem:]


_GKNSPredicateRule : GKNSPredicateRule
  // instance methods
  -[_GKNSPredicateRule initWithPredicate:fact:grade:asserting:]
  -[_GKNSPredicateRule .cxx_destruct]
  -[_GKNSPredicateRule performActionWithSystem:]


GKVoronoiNoiseSource : GKNoiseSource
 @property  double frequency
 @property  double displacement
 @property  BOOL distanceEnabled
 @property  int seed

  // class methods
  +[GKVoronoiNoiseSource voronoiNoiseWithFrequency:displacement:distanceEnabled:seed:]

  // instance methods
  -[GKVoronoiNoiseSource seed]
  -[GKVoronoiNoiseSource frequency]
  -[GKVoronoiNoiseSource setFrequency:]
  -[GKVoronoiNoiseSource init]
  -[GKVoronoiNoiseSource setDisplacement:]
  -[GKVoronoiNoiseSource setSeed:]
  -[GKVoronoiNoiseSource displacement]
  -[GKVoronoiNoiseSource valueAt:]
  -[GKVoronoiNoiseSource cloneModule]
  -[GKVoronoiNoiseSource initWithFrequency:displacement:distanceEnabled:seed:]
  -[GKVoronoiNoiseSource setDistanceEnabled:]
  -[GKVoronoiNoiseSource isDistanceEnabled]


GKNoiseSource : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[GKNoiseSource valueAt:]
  -[GKNoiseSource cloneModule]
  -[GKNoiseSource requiredInputModuleCount]
  -[GKNoiseSource inputModuleAtIndex:]
  -[GKNoiseSource setInputModule:atIndex:]


GKNoiseSourceUtils : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[GKNoiseSourceUtils radialLerpValueForDistanceToOrigin:frequency:]


GKQuadtreeNode : NSObject /usr/lib/libc++.1.dylib
 @property  {GKQuad=} quad

  // instance methods
  -[GKQuadtreeNode quad]
  -[GKQuadtreeNode max]
  -[GKQuadtreeNode min]
  -[GKQuadtreeNode cQuadTreeNode]
  -[GKQuadtreeNode setCQuadTreeNode:]


GKQuadtree : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[GKQuadtree quadtreeWithBoundingQuad:minimumCellSize:]

  // instance methods
  -[GKQuadtree init]
  -[GKQuadtree removeElement:]
  -[GKQuadtree dealloc]
  -[GKQuadtree initWithBoundingQuad:minimumCellSize:]
  -[GKQuadtree addElement:withPoint:]
  -[GKQuadtree addElement:withQuad:]
  -[GKQuadtree elementsAtPoint:]
  -[GKQuadtree elementsInQuad:]
  -[GKQuadtree removeElement:withNode:]


GKNoise : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *gradientColors

  // class methods
  +[GKNoise noiseWithNoiseSource:]
  +[GKNoise noiseWithComponentNoises:selectionNoise:componentBoundaries:boundaryBlendDistances:]
  +[GKNoise noiseWithNoiseSource:gradientColors:]
  +[GKNoise noiseWithComponentNoises:selectionNoise:]

  // instance methods
  -[GKNoise init]
  -[GKNoise dealloc]
  -[GKNoise rotateBy:]
  -[GKNoise .cxx_destruct]
  -[GKNoise gradientColors]
  -[GKNoise moveBy:]
  -[GKNoise scaleBy:]
  -[GKNoise invert]
  -[GKNoise setGradientColors:]
  -[GKNoise __modules]
  -[GKNoise valueAtPosition:]
  -[GKNoise initWithNoiseSource:]
  -[GKNoise initWithNoiseSource:gradientColors:]
  -[GKNoise multiplyWithNoise:]
  -[GKNoise addWithNoise:]
  -[GKNoise __blendWithNoise:selectionNoise:selectionRangeLowerBound:selectionRangeUpperBound:selectionBoundaryBlendDistance:]
  -[GKNoise cloneRecursive:]
  -[GKNoise cacheUnaryModule:]
  -[GKNoise cacheBinaryModule:rhsNoise:]
  -[GKNoise cacheQuaternaryModule:xDisplacementNoise:yDisplacementNoise:zDisplacementNoise:]
  -[GKNoise cacheTernaryModule:rhsNoise:selectionNoise:]
  -[GKNoise applyAbsoluteValue]
  -[GKNoise clampWithLowerBound:upperBound:]
  -[GKNoise raiseToPower:]
  -[GKNoise applyTurbulenceWithFrequency:power:roughness:seed:]
  -[GKNoise remapValuesToCurveWithControlPoints:]
  -[GKNoise remapValuesToTerracesWithPeaks:terracesInverted:]
  -[GKNoise minimumWithNoise:]
  -[GKNoise maximumWithNoise:]
  -[GKNoise raiseToPowerWithNoise:]
  -[GKNoise displaceXWithNoise:yWithNoise:zWithNoise:]


GKNoiseModifier : NSObject /usr/lib/libc++.1.dylib <GKNoiseModule>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKNoiseModifier init]
  -[GKNoiseModifier .cxx_destruct]
  -[GKNoiseModifier valueAt:]
  -[GKNoiseModifier cloneModule]
  -[GKNoiseModifier requiredInputModuleCount]
  -[GKNoiseModifier inputModuleAtIndex:]
  -[GKNoiseModifier setInputModule:atIndex:]
  -[GKNoiseModifier initWithInputModuleCount:]


GKAbsoluteValueNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKAbsoluteValueNoiseModifier init]
  -[GKAbsoluteValueNoiseModifier valueAt:]
  -[GKAbsoluteValueNoiseModifier cloneModule]
  -[GKAbsoluteValueNoiseModifier requiredInputModuleCount]


GKClampNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKClampNoiseModifier init]
  -[GKClampNoiseModifier initWithLowerBound:upperBound:]
  -[GKClampNoiseModifier valueAt:]
  -[GKClampNoiseModifier cloneModule]
  -[GKClampNoiseModifier requiredInputModuleCount]
  -[GKClampNoiseModifier initWithInputModuleCount:]


GKConstantPowerNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKConstantPowerNoiseModifier init]
  -[GKConstantPowerNoiseModifier valueAt:]
  -[GKConstantPowerNoiseModifier cloneModule]
  -[GKConstantPowerNoiseModifier requiredInputModuleCount]
  -[GKConstantPowerNoiseModifier initWithConstantPower:]
  -[GKConstantPowerNoiseModifier initWithInputModuleCount:]


GKInvertNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKInvertNoiseModifier init]
  -[GKInvertNoiseModifier valueAt:]
  -[GKInvertNoiseModifier cloneModule]
  -[GKInvertNoiseModifier requiredInputModuleCount]


GKTurbulenceNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKTurbulenceNoiseModifier init]
  -[GKTurbulenceNoiseModifier dealloc]
  -[GKTurbulenceNoiseModifier .cxx_destruct]
  -[GKTurbulenceNoiseModifier valueAt:]
  -[GKTurbulenceNoiseModifier cloneModule]
  -[GKTurbulenceNoiseModifier requiredInputModuleCount]
  -[GKTurbulenceNoiseModifier initWithFrequency:power:roughness:seed:]
  -[GKTurbulenceNoiseModifier initWithInputModuleCount:]


GKCurveNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKCurveNoiseModifier init]
  -[GKCurveNoiseModifier dealloc]
  -[GKCurveNoiseModifier valueAt:]
  -[GKCurveNoiseModifier cloneModule]
  -[GKCurveNoiseModifier requiredInputModuleCount]
  -[GKCurveNoiseModifier initWithControlPoints:]
  -[GKCurveNoiseModifier initWithInputModuleCount:]


GKTerraceNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKTerraceNoiseModifier init]
  -[GKTerraceNoiseModifier dealloc]
  -[GKTerraceNoiseModifier valueAt:]
  -[GKTerraceNoiseModifier cloneModule]
  -[GKTerraceNoiseModifier requiredInputModuleCount]
  -[GKTerraceNoiseModifier initWithPeakInputValues:terracesInverted:]
  -[GKTerraceNoiseModifier initWithInputModuleCount:]


GKMoveNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKMoveNoiseModifier init]
  -[GKMoveNoiseModifier valueAt:]
  -[GKMoveNoiseModifier cloneModule]
  -[GKMoveNoiseModifier requiredInputModuleCount]
  -[GKMoveNoiseModifier initWithDelta:]
  -[GKMoveNoiseModifier initWithInputModuleCount:]


GKScaleNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKScaleNoiseModifier init]
  -[GKScaleNoiseModifier valueAt:]
  -[GKScaleNoiseModifier cloneModule]
  -[GKScaleNoiseModifier requiredInputModuleCount]
  -[GKScaleNoiseModifier initWithFactor:]
  -[GKScaleNoiseModifier initWithInputModuleCount:]


GKRotateNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKRotateNoiseModifier init]
  -[GKRotateNoiseModifier valueAt:]
  -[GKRotateNoiseModifier cloneModule]
  -[GKRotateNoiseModifier requiredInputModuleCount]
  -[GKRotateNoiseModifier initWithRadians:]
  -[GKRotateNoiseModifier initWithInputModuleCount:]


GKAddNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKAddNoiseModifier init]
  -[GKAddNoiseModifier valueAt:]
  -[GKAddNoiseModifier cloneModule]
  -[GKAddNoiseModifier requiredInputModuleCount]


GKMultiplyNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKMultiplyNoiseModifier init]
  -[GKMultiplyNoiseModifier valueAt:]
  -[GKMultiplyNoiseModifier cloneModule]
  -[GKMultiplyNoiseModifier requiredInputModuleCount]


GKMinimumNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKMinimumNoiseModifier init]
  -[GKMinimumNoiseModifier valueAt:]
  -[GKMinimumNoiseModifier cloneModule]
  -[GKMinimumNoiseModifier requiredInputModuleCount]


GKMaximumNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKMaximumNoiseModifier init]
  -[GKMaximumNoiseModifier valueAt:]
  -[GKMaximumNoiseModifier cloneModule]
  -[GKMaximumNoiseModifier requiredInputModuleCount]


GKPowerNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKPowerNoiseModifier init]
  -[GKPowerNoiseModifier valueAt:]
  -[GKPowerNoiseModifier cloneModule]
  -[GKPowerNoiseModifier requiredInputModuleCount]


GKDisplaceNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKDisplaceNoiseModifier init]
  -[GKDisplaceNoiseModifier valueAt:]
  -[GKDisplaceNoiseModifier cloneModule]
  -[GKDisplaceNoiseModifier requiredInputModuleCount]


GKBlendNoiseModifier : GKNoiseModifier
  // instance methods
  -[GKBlendNoiseModifier init]
  -[GKBlendNoiseModifier valueAt:]
  -[GKBlendNoiseModifier cloneModule]
  -[GKBlendNoiseModifier requiredInputModuleCount]
  -[GKBlendNoiseModifier initWithSelectionRangeLowerBound:selectionRangeUpperBound:selectionBoundaryBlendDistance:]
  -[GKBlendNoiseModifier initWithInputModuleCount:]


GKCoherentNoiseSource : GKNoiseSource
 @property  double frequency
 @property  long long octaveCount
 @property  double lacunarity
 @property  int seed

  // instance methods
  -[GKCoherentNoiseSource seed]
  -[GKCoherentNoiseSource frequency]
  -[GKCoherentNoiseSource setFrequency:]
  -[GKCoherentNoiseSource setSeed:]
  -[GKCoherentNoiseSource valueAt:]
  -[GKCoherentNoiseSource cloneModule]
  -[GKCoherentNoiseSource setOctaveCount:]
  -[GKCoherentNoiseSource setLacunarity:]
  -[GKCoherentNoiseSource octaveCount]
  -[GKCoherentNoiseSource lacunarity]


GKScene : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSArray *entities
 @property  <GKSceneRootNodeType> *rootNode
 @property  NSDictionary *graphs

  // class methods
  +[GKScene supportsSecureCoding]
  +[GKScene _sceneWithFileNamed:rootNode:]
  +[GKScene sceneWithFileNamed:rootNode:]
  +[GKScene sceneWithFileNamed:]

  // instance methods
  -[GKScene copyWithZone:]
  -[GKScene init]
  -[GKScene .cxx_destruct]
  -[GKScene entities]
  -[GKScene encodeWithCoder:]
  -[GKScene graphs]
  -[GKScene copy]
  -[GKScene rootNode]
  -[GKScene addEntity:]
  -[GKScene setRootNode:]
  -[GKScene initWithCoder:]
  -[GKScene removeEntity:]
  -[GKScene addGraph:name:]
  -[GKScene removeGraph:]


GKCustomClassUnarchiver : NSObject /usr/lib/libc++.1.dylib <NSKeyedUnarchiverDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKCustomClassUnarchiver init]
  -[GKCustomClassUnarchiver .cxx_destruct]
  -[GKCustomClassUnarchiver unarchiver:cannotDecodeObjectOfClassName:originalClasses:]
  -[GKCustomClassUnarchiver _currentAppModuleName]
  -[GKCustomClassUnarchiver _mangledSwiftClassName:moduleName:]
  -[GKCustomClassUnarchiver _findValidClassName:]


GKAgent : GKComponent <NSSecureCoding>
 @property  <GKAgentDelegate> *delegate
 @property  GKBehavior *behavior
 @property  float mass
 @property  float radius
 @property  float speed
 @property  float maxAcceleration
 @property  float maxSpeed

  // class methods
  +[GKAgent supportsSecureCoding]

  // instance methods
  -[GKAgent setBehavior:]
  -[GKAgent setSpeed:]
  -[GKAgent mass]
  -[GKAgent init]
  -[GKAgent behavior]
  -[GKAgent setMass:]
  -[GKAgent speed]
  -[GKAgent .cxx_construct]
  -[GKAgent vehicle]
  -[GKAgent .cxx_destruct]
  -[GKAgent encodeWithCoder:]
  -[GKAgent radius]
  -[GKAgent maxAcceleration]
  -[GKAgent setMaxAcceleration:]
  -[GKAgent maxSpeed]
  -[GKAgent setMaxSpeed:]
  -[GKAgent setDelegate:]
  -[GKAgent setRadius:]
  -[GKAgent delegate]
  -[GKAgent initWithCoder:]
  -[GKAgent position3]
  -[GKAgent velocity3]
  -[GKAgent steerForSeek:]
  -[GKAgent steerForFlee:]
  -[GKAgent steerToAvoidObstacles:timeBeforeCollisionToAvoid:]
  -[GKAgent steerToAvoidAgents:timeBeforeCollisionToAvoid:]
  -[GKAgent steerForSeparation:maxDistance:maxAngle:]
  -[GKAgent steerForAlignment:maxDistance:maxAngle:]
  -[GKAgent steerForCohesion:maxDistance:maxAngle:]
  -[GKAgent steerForTargetSpeed:]
  -[GKAgent steerForWander:speed:]
  -[GKAgent steerForIntercept:maxPredictionTime:]
  -[GKAgent steerToFollowPath:maxPredictionTime:forward:]
  -[GKAgent steerToStayOnPath:maxPredictionTime:]


GKAgent2D : GKAgent <NSSecureCoding>
 @property  void position
 @property  void velocity
 @property  float rotation

  // class methods
  +[GKAgent2D supportsSecureCoding]

  // instance methods
  -[GKAgent2D position]
  -[GKAgent2D init]
  -[GKAgent2D setPosition:]
  -[GKAgent2D rotation]
  -[GKAgent2D setRotation:]
  -[GKAgent2D velocity]
  -[GKAgent2D encodeWithCoder:]
  -[GKAgent2D initWithCoder:]
  -[GKAgent2D updateWithDeltaTime:]
  -[GKAgent2D applySteeringForce:deltaTime:]
  -[GKAgent2D setPosition_:]
  -[GKAgent2D position_]
  -[GKAgent2D velocity_]
  -[GKAgent2D applyBrakingForce:deltaTime:]


GKAgent3D : GKAgent
 @property  void position
 @property  void velocity
 @property  BOOL rightHanded
 @property  {?=[3]} rotation

  // class methods
  +[GKAgent3D supportsSecureCoding]

  // instance methods
  -[GKAgent3D position]
  -[GKAgent3D init]
  -[GKAgent3D setPosition:]
  -[GKAgent3D rotation]
  -[GKAgent3D setRotation:]
  -[GKAgent3D velocity]
  -[GKAgent3D encodeWithCoder:]
  -[GKAgent3D initWithCoder:]
  -[GKAgent3D updateWithDeltaTime:]
  -[GKAgent3D applySteeringForce:deltaTime:]
  -[GKAgent3D applyBrakingForce:deltaTime:]
  -[GKAgent3D rightHanded]
  -[GKAgent3D setRightHanded:]


GKState : NSObject /usr/lib/libc++.1.dylib
 @property  GKStateMachine *stateMachine

  // class methods
  +[GKState state]

  // instance methods
  -[GKState stateMachine]
  -[GKState init]
  -[GKState .cxx_destruct]
  -[GKState didEnterWithPreviousState:]
  -[GKState willExitWithNextState:]
  -[GKState updateWithDeltaTime:]
  -[GKState isValidNextState:]
  -[GKState _setStateMachine:]


GKComponent : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  BOOL usesPerComponentUpdate
 @property  GKComponentSystem *componentSystem
 @property  NSString *componentName
 @property  GKEntity *entity

  // class methods
  +[GKComponent supportsSecureCoding]

  // instance methods
  -[GKComponent entity]
  -[GKComponent setEntity:]
  -[GKComponent copyWithZone:]
  -[GKComponent initWithName:]
  -[GKComponent init]
  -[GKComponent .cxx_destruct]
  -[GKComponent setComponentName:]
  -[GKComponent encodeWithCoder:]
  -[GKComponent copy]
  -[GKComponent componentName]
  -[GKComponent initWithCoder:]
  -[GKComponent componentSystem]
  -[GKComponent usesPerComponentUpdate]
  -[GKComponent updateWithDeltaTime:]
  -[GKComponent didAddToEntity]
  -[GKComponent willRemoveFromEntity]
  -[GKComponent setUsesPerComponentUpdate:]
  -[GKComponent setComponentSystem:]


GKComponentSystem : NSObject /usr/lib/libc++.1.dylib <NSFastEnumeration>
 @property  Class componentClass
 @property  NSArray *components

  // instance methods
  -[GKComponentSystem performSelector:withObject:]
  -[GKComponentSystem removeComponent:]
  -[GKComponentSystem forwardInvocation:]
  -[GKComponentSystem methodSignatureForSelector:]
  -[GKComponentSystem objectAtIndexedSubscript:]
  -[GKComponentSystem components]
  -[GKComponentSystem respondsToSelector:]
  -[GKComponentSystem .cxx_destruct]
  -[GKComponentSystem countByEnumeratingWithState:objects:count:]
  -[GKComponentSystem addComponent:]
  -[GKComponentSystem removeComponentWithEntity:]
  -[GKComponentSystem updateWithDeltaTime:]
  -[GKComponentSystem classForGenericArgumentAtIndex:]
  -[GKComponentSystem componentClass]
  -[GKComponentSystem initWithComponentClass:]
  -[GKComponentSystem addComponentWithEntity:]


GKConstantNoiseSource : GKNoiseSource
 @property  double value

  // class methods
  +[GKConstantNoiseSource constantNoiseWithValue:]

  // instance methods
  -[GKConstantNoiseSource init]
  -[GKConstantNoiseSource initWithValue:]
  -[GKConstantNoiseSource setValue:]
  -[GKConstantNoiseSource value]
  -[GKConstantNoiseSource valueAt:]
  -[GKConstantNoiseSource cloneModule]


GKPerlinNoiseSource : GKCoherentNoiseSource
 @property  double persistence

  // class methods
  +[GKPerlinNoiseSource perlinNoiseSourceWithFrequency:octaveCount:persistence:lacunarity:seed:]

  // instance methods
  -[GKPerlinNoiseSource persistence]
  -[GKPerlinNoiseSource init]
  -[GKPerlinNoiseSource setPersistence:]
  -[GKPerlinNoiseSource valueAt:]
  -[GKPerlinNoiseSource cloneModule]
  -[GKPerlinNoiseSource initWithFrequency:octaveCount:persistence:lacunarity:seed:]


GKOctreeNode : NSObject /usr/lib/libc++.1.dylib
 @property  {GKBox=} box

  // instance methods
  -[GKOctreeNode box]
  -[GKOctreeNode cOctreeNode]
  -[GKOctreeNode setCOctreeNode:]


GKOctree : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[GKOctree octreeWithBoundingBox:minimumCellSize:]

  // instance methods
  -[GKOctree init]
  -[GKOctree removeElement:]
  -[GKOctree dealloc]
  -[GKOctree addElement:withPoint:]
  -[GKOctree elementsAtPoint:]
  -[GKOctree removeElement:withNode:]
  -[GKOctree initWithBoundingBox:minimumCellSize:]
  -[GKOctree addElement:withBox:]
  -[GKOctree elementsInBox:]


GKStateMachine : NSObject /usr/lib/libc++.1.dylib
 @property  GKState *currentState

  // class methods
  +[GKStateMachine stateMachineWithStates:]

  // instance methods
  -[GKStateMachine currentState]
  -[GKStateMachine init]
  -[GKStateMachine .cxx_destruct]
  -[GKStateMachine enterState:]
  -[GKStateMachine updateWithDeltaTime:]
  -[GKStateMachine initWithStates:]
  -[GKStateMachine stateForClass:]
  -[GKStateMachine canEnterState:]
  -[GKStateMachine forceEnterState:]
  -[GKStateMachine _instanceData]
  -[GKStateMachine _dotStringInstanceData]


GKBehavior : NSObject /usr/lib/libc++.1.dylib <NSFastEnumeration, NSCopying>
 @property  long long goalCount

  // class methods
  +[GKBehavior behaviorWithGoal:weight:]
  +[GKBehavior behaviorWithGoals:]
  +[GKBehavior behaviorWithGoals:andWeights:]
  +[GKBehavior behaviorWithWeightedGoals:]

  // instance methods
  -[GKBehavior copyWithZone:]
  -[GKBehavior objectForKeyedSubscript:]
  -[GKBehavior init]
  -[GKBehavior weights]
  -[GKBehavior objectAtIndexedSubscript:]
  -[GKBehavior goals]
  -[GKBehavior .cxx_destruct]
  -[GKBehavior setObject:forKeyedSubscript:]
  -[GKBehavior copy]
  -[GKBehavior countByEnumeratingWithState:objects:count:]
  -[GKBehavior getTotalForce:agent:]
  -[GKBehavior goalCount]
  -[GKBehavior weightForGoal:]
  -[GKBehavior initWithGoal:weight:]
  -[GKBehavior setWeight:forGoal:]
  -[GKBehavior initWithGoals:]
  -[GKBehavior initWithGoals:andWeights:]
  -[GKBehavior initWithWeightedGoals:]
  -[GKBehavior removeGoal:]
  -[GKBehavior removeAllGoals]


GKPath : NSObject /usr/lib/libc++.1.dylib
 @property  float radius
 @property  unsigned long numPoints
 @property  BOOL cyclical

  // class methods
  +[GKPath pathWithPoints:count:radius:cyclical:]
  +[GKPath pathWithGraphNodes:radius:]
  +[GKPath pathWithFloat3Points:count:radius:cyclical:]

  // instance methods
  -[GKPath .cxx_construct]
  -[GKPath .cxx_destruct]
  -[GKPath pointAtIndex:]
  -[GKPath radius]
  -[GKPath numPoints]
  -[GKPath pathway]
  -[GKPath setRadius:]
  -[GKPath set_cyclical:]
  -[GKPath _cyclical]
  -[GKPath isCyclical]
  -[GKPath initWithPoints:count:radius:cyclical:]
  -[GKPath initWithGraphNodes:radius:]
  -[GKPath initWithFloat3Points:count:radius:cyclical:]
  -[GKPath setCyclical:]
  -[GKPath float2AtIndex:]
  -[GKPath float3AtIndex:]


GKGoal : NSObject /usr/lib/libc++.1.dylib <NSCopying>
  // class methods
  +[GKGoal goalToSeekAgent:]
  +[GKGoal goalToFleeAgent:]
  +[GKGoal goalToAvoidObstacles:maxPredictionTime:]
  +[GKGoal goalToAvoidAgents:maxPredictionTime:]
  +[GKGoal goalToSeparateFromAgents:maxDistance:maxAngle:]
  +[GKGoal goalToAlignWithAgents:maxDistance:maxAngle:]
  +[GKGoal goalToCohereWithAgents:maxDistance:maxAngle:]
  +[GKGoal goalToReachTargetSpeed:]
  +[GKGoal goalToWander:]
  +[GKGoal goalToInterceptAgent:maxPredictionTime:]
  +[GKGoal goalToFollowPath:maxPredictionTime:forward:]
  +[GKGoal goalToStayOnPath:maxPredictionTime:]

  // instance methods
  -[GKGoal copyWithZone:]
  -[GKGoal init]
  -[GKGoal speed]
  -[GKGoal .cxx_destruct]
  -[GKGoal copy]
  -[GKGoal isTargetSpeedGoal]
  -[GKGoal getForce:agent:]
  -[GKGoal initToSeekAgent:]
  -[GKGoal initToFleeAgent:]
  -[GKGoal initToAvoidObstacles:maxPredictionTime:]
  -[GKGoal initToAvoidAgents:maxPredictionTime:]
  -[GKGoal initToSeparateFromAgents:maxDistance:maxAngle:]
  -[GKGoal initToAlignWithAgents:maxDistance:maxAngle:]
  -[GKGoal initToCohereWithAgents:maxDistance:maxAngle:]
  -[GKGoal initToReachTargetSpeed:]
  -[GKGoal initToWander:]
  -[GKGoal initToInterceptAgent:maxPredictionTime:]
  -[GKGoal initToFollowPath:maxPredictionTime:forward:]
  -[GKGoal initToStayOnPath:maxPredictionTime:]


GKSpheresNoiseSource : GKNoiseSource
 @property  double frequency

  // class methods
  +[GKSpheresNoiseSource spheresNoiseWithFrequency:]

  // instance methods
  -[GKSpheresNoiseSource frequency]
  -[GKSpheresNoiseSource setFrequency:]
  -[GKSpheresNoiseSource init]
  -[GKSpheresNoiseSource initWithFrequency:]
  -[GKSpheresNoiseSource valueAt:]
  -[GKSpheresNoiseSource cloneModule]


GKSCNNodeComponent : GKComponent <GKSerializedNodeContaining, GKAgentDelegate>
 @property  SCNNode *node
 @property  NSIndexPath *serializableNodeIndexPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKSCNNodeComponent supportsSecureCoding]
  +[GKSCNNodeComponent componentWithNode:]

  // instance methods
  -[GKSCNNodeComponent setEntity:]
  -[GKSCNNodeComponent copyWithZone:]
  -[GKSCNNodeComponent node]
  -[GKSCNNodeComponent initWithNode:]
  -[GKSCNNodeComponent setNode:]
  -[GKSCNNodeComponent .cxx_destruct]
  -[GKSCNNodeComponent encodeWithCoder:]
  -[GKSCNNodeComponent initWithCoder:]
  -[GKSCNNodeComponent serializableNodeIndexPath]
  -[GKSCNNodeComponent setSerializableNodeIndexPath:]
  -[GKSCNNodeComponent agentWillUpdate:]
  -[GKSCNNodeComponent agentDidUpdate:]


GKCompositeBehavior : GKBehavior
 @property  long long behaviorCount

  // class methods
  +[GKCompositeBehavior behaviorWithBehaviors:]
  +[GKCompositeBehavior behaviorWithBehaviors:andWeights:]

  // instance methods
  -[GKCompositeBehavior objectForKeyedSubscript:]
  -[GKCompositeBehavior init]
  -[GKCompositeBehavior removeAllBehaviors]
  -[GKCompositeBehavior objectAtIndexedSubscript:]
  -[GKCompositeBehavior .cxx_destruct]
  -[GKCompositeBehavior setObject:forKeyedSubscript:]
  -[GKCompositeBehavior removeBehavior:]
  -[GKCompositeBehavior getTotalForce:agent:]
  -[GKCompositeBehavior behaviorCount]
  -[GKCompositeBehavior initWithBehaviors:]
  -[GKCompositeBehavior initWithBehaviors:andWeights:]
  -[GKCompositeBehavior setWeight:forBehavior:]
  -[GKCompositeBehavior weightForBehavior:]


GKObstacleGraph : GKGraph
 @property  NSArray *obstacles
 @property  float bufferRadius

  // class methods
  +[GKObstacleGraph supportsSecureCoding]
  +[GKObstacleGraph graphWithObstacles:bufferRadius:]
  +[GKObstacleGraph graphWithObstacles:bufferRadius:nodeClass:]

  // instance methods
  -[GKObstacleGraph .cxx_destruct]
  -[GKObstacleGraph encodeWithCoder:]
  -[GKObstacleGraph nodeClass]
  -[GKObstacleGraph initWithCoder:]
  -[GKObstacleGraph bufferRadius]
  -[GKObstacleGraph makeCGraph]
  -[GKObstacleGraph obstacles]
  -[GKObstacleGraph addObstacles:]
  -[GKObstacleGraph removeObstacles:]
  -[GKObstacleGraph connectNodeUsingObstacles:]
  -[GKObstacleGraph classForGenericArgumentAtIndex:]
  -[GKObstacleGraph mutObstacles]
  -[GKObstacleGraph initWithObstacles:bufferRadius:]
  -[GKObstacleGraph initWithObstacles:bufferRadius:nodeClass:]
  -[GKObstacleGraph cObstacleGraph]
  -[GKObstacleGraph connectNodeUsingObstacles:ignoringObstacles:]
  -[GKObstacleGraph connectNodeUsingObstacles:ignoringBufferRadiusOfObstacles:]
  -[GKObstacleGraph removeAllObstacles]
  -[GKObstacleGraph nodesForObstacle:]
  -[GKObstacleGraph lockConnectionFromNode:toNode:]
  -[GKObstacleGraph unlockConnectionFromNode:toNode:]
  -[GKObstacleGraph isConnectionLockedFromNode:toNode:]


GKSystemArc4RandomSource : GKRandomSource
  // instance methods
  -[GKSystemArc4RandomSource copyWithZone:]
  -[GKSystemArc4RandomSource nextInt]
  -[GKSystemArc4RandomSource nextIntWithUpperBound:]


GKGridGraph : GKGraph
 @property  void gridOrigin
 @property  unsigned long gridWidth
 @property  unsigned long gridHeight
 @property  BOOL diagonalsAllowed

  // class methods
  +[GKGridGraph supportsSecureCoding]
  +[GKGridGraph graphFromGridStartingAt:width:height:diagonalsAllowed:]
  +[GKGridGraph graphFromGridStartingAt:width:height:diagonalsAllowed:nodeClass:]

  // instance methods
  -[GKGridGraph removeNodes:]
  -[GKGridGraph encodeWithCoder:]
  -[GKGridGraph gridHeight]
  -[GKGridGraph gridWidth]
  -[GKGridGraph initWithCoder:]
  -[GKGridGraph makeCGraph]
  -[GKGridGraph classForGenericArgumentAtIndex:]
  -[GKGridGraph initFromGridStartingAt:width:height:diagonalsAllowed:]
  -[GKGridGraph initFromGridStartingAt:width:height:diagonalsAllowed:nodeClass:]
  -[GKGridGraph gridOrigin]
  -[GKGridGraph cGridGraph]
  -[GKGridGraph nodeAtGridPosition:]
  -[GKGridGraph nodeAtGridPositionNoNilCheck:]
  -[GKGridGraph connectNodeToAdjacentNodes:]
  -[GKGridGraph diagonalsAllowed]


GKMersenneTwisterRandomSource : GKRandomSource
 @property  unsigned long seed

  // class methods
  +[GKMersenneTwisterRandomSource supportsSecureCoding]

  // instance methods
  -[GKMersenneTwisterRandomSource copyWithZone:]
  -[GKMersenneTwisterRandomSource seed]
  -[GKMersenneTwisterRandomSource init]
  -[GKMersenneTwisterRandomSource .cxx_construct]
  -[GKMersenneTwisterRandomSource encodeWithCoder:]
  -[GKMersenneTwisterRandomSource nextInt]
  -[GKMersenneTwisterRandomSource nextBool]
  -[GKMersenneTwisterRandomSource setSeed:]
  -[GKMersenneTwisterRandomSource initWithSeed:]
  -[GKMersenneTwisterRandomSource nextIntWithUpperBound:]
  -[GKMersenneTwisterRandomSource nextBits:]
  -[GKMersenneTwisterRandomSource nextUniform]
  -[GKMersenneTwisterRandomSource initWithCoder:]


(GameplayKit)
	// instance methods
	-[(GameplayKit) shuffledArrayWithRandomSource:]
	-[(GameplayKit) shuffledArray]

SKNode(GameplayKit)
	// class methods
	+[SKNode(GameplayKit) obstaclesFromSpriteTextures:accuracy:]
	+[SKNode(GameplayKit) obstaclesFromNodeBounds:]
	+[SKNode(GameplayKit) obstaclesFromNodePhysicsBodies:]

SKTileMapNode(GameplayKit)
	// class methods
	+[SKTileMapNode(GameplayKit) tileMapNodesWithTileSet:columns:rows:tileSize:fromNoiseMap:tileTypeNoiseMapThresholds:]

SKTexture(GameplayKit)
	// class methods
	+[SKTexture(GameplayKit) textureWithNoiseMap:]

01 00 0340 /System/Library/Frameworks/CoreML.framework/CoreML: MLGKDecisionTree 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0240 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNNode 
01 00 0240 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNScene 
01 00 0140 /System/Library/Frameworks/SpriteKit.framework/SpriteKit: SKNode 
01 00 0140 /System/Library/Frameworks/SpriteKit.framework/SpriteKit: SKSpriteNode 
01 00 0140 /System/Library/Frameworks/SpriteKit.framework/SpriteKit: SKTexture 
01 00 0140 /System/Library/Frameworks/SpriteKit.framework/SpriteKit: SKTileGroup 
01 00 0140 /System/Library/Frameworks/SpriteKit.framework/SpriteKit: SKTileMapNode 
01 00 0400 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
