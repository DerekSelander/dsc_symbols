|| __DATA.__common _EKTravelEngineLogHandle
|| __DATA.__common _EKTravelEngineThrottleLogHandle
|| __DATA.__data _EKDirectoryRecordPrincipalPathKey
|| __DATA.__data _EKTravelLookupErrorDomain
|| __DATA.__objc_data _OBJC_CLASS_$_EKAlarmChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKAttachment
|| __DATA.__objc_data _OBJC_CLASS_$_EKAttachmentChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKAttendeeChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKAvailabilityCachedSpanRange
|| __DATA.__objc_data _OBJC_CLASS_$_EKAvailabilitySpan
|| __DATA.__objc_data _OBJC_CLASS_$_EKAvailabilityUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_EKCalendarChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKCalendarInviteReplyNotification
|| __DATA.__objc_data _OBJC_CLASS_$_EKCalendarItemChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKCalendarResourceChangeNotification
|| __DATA.__objc_data _OBJC_CLASS_$_EKCalendarSharedCalendarNotification
|| __DATA.__objc_data _OBJC_CLASS_$_EKCalendarSuggestionNotification
|| __DATA.__objc_data _OBJC_CLASS_$_EKContactChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKCredentials
|| __DATA.__objc_data _OBJC_CLASS_$_EKDirectoryGroup
|| __DATA.__objc_data _OBJC_CLASS_$_EKDirectoryLocation
|| __DATA.__objc_data _OBJC_CLASS_$_EKDirectoryPerson
|| __DATA.__objc_data _OBJC_CLASS_$_EKDirectoryRecord
|| __DATA.__objc_data _OBJC_CLASS_$_EKDirectorySearchOperation
|| __DATA.__objc_data _OBJC_CLASS_$_EKDirectorySearchQuery
|| __DATA.__objc_data _OBJC_CLASS_$_EKEventAction
|| __DATA.__objc_data _OBJC_CLASS_$_EKEventActionChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKEventChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKEventOccurrenceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_EKInviteReplyNotification
|| __DATA.__objc_data _OBJC_CLASS_$_EKInviteReplyNotificationChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKInviteeAlternativeTime
|| __DATA.__objc_data _OBJC_CLASS_$_EKInviteeAlternativeTimeSearcher
|| __DATA.__objc_data _OBJC_CLASS_$_EKMutableTravelEngineHypothesis
|| __DATA.__objc_data _OBJC_CLASS_$_EKNotification
|| __DATA.__objc_data _OBJC_CLASS_$_EKNotificationChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKNotificationCollection
|| __DATA.__objc_data _OBJC_CLASS_$_EKNotificationCollectionOptions
|| __DATA.__objc_data _OBJC_CLASS_$_EKObjectChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKOccurrenceCacheLocationSearch
|| __DATA.__objc_data _OBJC_CLASS_$_EKOccurrenceCacheSearch
|| __DATA.__objc_data _OBJC_CLASS_$_EKOrganizerChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKParticipantChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKRecents
|| __DATA.__objc_data _OBJC_CLASS_$_EKRecurrenceChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKRecurrenceDayOfWeek
|| __DATA.__objc_data _OBJC_CLASS_$_EKRecurrenceEnd
|| __DATA.__objc_data _OBJC_CLASS_$_EKReminderChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKRequestAvailabilityOperation
|| __DATA.__objc_data _OBJC_CLASS_$_EKResourceChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKResourceChangeNotification
|| __DATA.__objc_data _OBJC_CLASS_$_EKResourceChangeNotificationChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKSecureKeyedArchiverSerializer
|| __DATA.__objc_data _OBJC_CLASS_$_EKSharedEventStoreProvider
|| __DATA.__objc_data _OBJC_CLASS_$_EKSharee
|| __DATA.__objc_data _OBJC_CLASS_$_EKShareeChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKSourceChange
|| __DATA.__objc_data _OBJC_CLASS_$_EKSuggestedEventInfo
|| __DATA.__objc_data _OBJC_CLASS_$_EKTravelLookupManager
|| __DATA.__objc_data _OBJC_METACLASS_$_EKAlarmChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKAttachment
|| __DATA.__objc_data _OBJC_METACLASS_$_EKAttachmentChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKAttendeeChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKAvailabilityCachedSpanRange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKAvailabilitySpan
|| __DATA.__objc_data _OBJC_METACLASS_$_EKAvailabilityUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_EKCalendarChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKCalendarInviteReplyNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_EKCalendarItemChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKCalendarResourceChangeNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_EKCalendarSharedCalendarNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_EKCalendarSuggestionNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_EKContactChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKCredentials
|| __DATA.__objc_data _OBJC_METACLASS_$_EKDirectoryGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_EKDirectoryLocation
|| __DATA.__objc_data _OBJC_METACLASS_$_EKDirectoryPerson
|| __DATA.__objc_data _OBJC_METACLASS_$_EKDirectoryRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_EKDirectoryResource
|| __DATA.__objc_data _OBJC_METACLASS_$_EKDirectorySearchOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_EKDirectorySearchQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_EKDirectorySearchResultSet
|| __DATA.__objc_data _OBJC_METACLASS_$_EKEventAction
|| __DATA.__objc_data _OBJC_METACLASS_$_EKEventActionChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKEventChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKEventOccurrenceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_EKInviteReplyNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_EKInviteReplyNotificationChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKInviteeAlternativeTime
|| __DATA.__objc_data _OBJC_METACLASS_$_EKInviteeAlternativeTimeSearcher
|| __DATA.__objc_data _OBJC_METACLASS_$_EKMutableTravelEngineHypothesis
|| __DATA.__objc_data _OBJC_METACLASS_$_EKNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_EKNotificationChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKNotificationCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_EKNotificationCollectionOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_EKObjectChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKOccurrenceCacheLocationSearch
|| __DATA.__objc_data _OBJC_METACLASS_$_EKOccurrenceCacheSearch
|| __DATA.__objc_data _OBJC_METACLASS_$_EKOrganizerChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKParticipantChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKRecents
|| __DATA.__objc_data _OBJC_METACLASS_$_EKRecurrenceDayOfWeek
|| __DATA.__objc_data _OBJC_METACLASS_$_EKRecurrenceEnd
|| __DATA.__objc_data _OBJC_METACLASS_$_EKReminderChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKRequestAvailabilityOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_EKResourceChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKResourceChangeNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_EKResourceChangeNotificationChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKSecureKeyedArchiverSerializer
|| __DATA.__objc_data _OBJC_METACLASS_$_EKSharedEventStoreProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_EKSharee
|| __DATA.__objc_data _OBJC_METACLASS_$_EKShareeChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKSourceChange
|| __DATA.__objc_data _OBJC_METACLASS_$_EKSuggestedEventInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_EKTravelLookupManager
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKCalendarInviteReplyNotification._status
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKCalendarNotification._URL
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKCalendarNotification._alerted
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKCalendarNotification._dotColor
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKCalendarNotification._emailAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKCalendarNotification._hiddenFromNotificationCenter
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKCalendarNotification._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKCalendarNotification._objectID
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKCalendarNotification._phoneNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKCalendarNotification._title
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKCalendarNotification._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKCalendarSharedCalendarNotification._sharingInvitationResponse
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKTravelEngineHypothesis._aggressiveDepartureDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKTravelEngineHypothesis._aggressiveTravelTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKTravelEngineHypothesis._conservativeDepartureDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKTravelEngineHypothesis._conservativeTravelTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKTravelEngineHypothesis._currentTrafficDensity
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKTravelEngineHypothesis._estimatedTravelTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKTravelEngineHypothesis._routeName
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKTravelEngineHypothesis._suggestedDepartureDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKTravelEngineHypothesis._supportsLiveTraffic
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKTravelEngineHypothesis._trafficDensityDescription
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKTravelEngineHypothesis._transportType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EKTravelEngineHypothesis._travelState
|| __DATA_CONST.__const _EKAlarmLocationBundlePath
|| __DATA_CONST.__const _EKCADErrorDomain
|| __DATA_CONST.__const _EKCompletionDatePropertyId
|| __DATA_CONST.__const _EKDebugPreferences_Notification_AvailabilityFreshnessWindow
|| __DATA_CONST.__const _EKDebugPreferences_Notification_ForceDisplayOfNewTravelAdvisoryHypotheses
|| __DATA_CONST.__const _EKDebugPreferences_Notification_OverriddenTravelAdvisoryHypothesisAggressiveTravelTime
|| __DATA_CONST.__const _EKDebugPreferences_Notification_OverriddenTravelAdvisoryHypothesisConservativeTravelTime
|| __DATA_CONST.__const _EKDebugPreferences_Notification_OverriddenTravelAdvisoryHypothesisCurrentTrafficDensity
|| __DATA_CONST.__const _EKDebugPreferences_Notification_OverriddenTravelAdvisoryHypothesisEstimatedTravelTime
|| __DATA_CONST.__const _EKDebugPreferences_Notification_OverriddenTravelAdvisoryHypothesisRouteName
|| __DATA_CONST.__const _EKDebugPreferences_Notification_OverriddenTravelAdvisoryHypothesisSupportsLiveTraffic
|| __DATA_CONST.__const _EKDebugPreferences_Notification_OverriddenTravelAdvisoryHypothesisTransportType
|| __DATA_CONST.__const _EKDebugPreferences_Notification_OverriddenTravelAdvisoryHypothesisTravelState
|| __DATA_CONST.__const _EKDebugPreferences_Notification_OverrideTravelAdvisoryHypothesis
|| __DATA_CONST.__const _EKDebugPreferences_Notification_PerformAgendaEntryEqualityChecksInTravelEngine
|| __DATA_CONST.__const _EKDebugPreferences_Notification_PreventMarkingTravelAdvisoryEntriesAsDismissed
|| __DATA_CONST.__const _EKDebugPreferences_Notification_SaveGeocodedLocationsInTravelEngine
|| __DATA_CONST.__const _EKDebugPreferences_Notification_ShouldBypassTravelEngineThrottle
|| __DATA_CONST.__const _EKDebugPreferences_Notification_ShowDepartureDateForTransitTimeToLeave
|| __DATA_CONST.__const _EKDebugPreferences_Notification_SyntheticTravelAdvisoriesEnabled
|| __DATA_CONST.__const _EKDebugPreferences_Notification_TravelEngineThrottlePeriod
|| __DATA_CONST.__const _EKDebugPreferences_Notification_VerifyIntegrityOfAvailabilityTimeSearchTimelines
|| __DATA_CONST.__const _EKDisplayOrderPropertyId
|| __DATA_CONST.__const _EKDueDateAllDayPropertyId
|| __DATA_CONST.__const _EKDueDatePropertyId
|| __DATA_CONST.__const _EKDueDateTimeZonePropertyId
|| __DATA_CONST.__const _EKErrorDomain
|| __DATA_CONST.__const _EKEventModifiedNotification
|| __DATA_CONST.__const _EKEventNaturalLanguageSuggestedEventExpirationDateKey
|| __DATA_CONST.__const _EKEventStoreCalendarDataChangedUserInfoKey
|| __DATA_CONST.__const _EKEventStoreCalendarsChangedNotification
|| __DATA_CONST.__const _EKEventStoreChangeTypeUserInfoKey
|| __DATA_CONST.__const _EKEventStoreChangedNotification
|| __DATA_CONST.__const _EKEventStoreChangedObjectIDsUserInfoKey
|| __DATA_CONST.__const _EKEventStoreClosedNotification
|| __DATA_CONST.__const _EKEventStoreIdleChangeTrackingClientWasPurgedNotification
|| __DATA_CONST.__const _EKEventStoreRemindersDataChangedUserInfoKey
|| __DATA_CONST.__const _EKEventStoreTimeZoneChangedNotification
|| __DATA_CONST.__const _EKEventStore_DistributedNotification_AutomaticGeocodingAllowedChanged
|| __DATA_CONST.__const _EKEventSuggestedEventSavedFromSyncKey
|| __DATA_CONST.__const _EKFeatureSetDidChangeNotification
|| __DATA_CONST.__const _EKHasAlarmsPropertyId
|| __DATA_CONST.__const _EKHasRecurrenceRulesPropertyId
|| __DATA_CONST.__const _EKPreferences_Notification_AlertInviteeDeclines
|| __DATA_CONST.__const _EKPreferences_Notification_DeselectedCalendarIdentifiers
|| __DATA_CONST.__const _EKPreferences_Notification_DeselectedCalendarSyncHashes
|| __DATA_CONST.__const _EKPreferences_Notification_Refiring_Reminder_Alarms_Enabled
|| __DATA_CONST.__const _EKPreferences_Notification_SelectedCalendarIdentifiers
|| __DATA_CONST.__const _EKPreferences_Notification_ShowDeclinedEvents
|| __DATA_CONST.__const _EKPriorityPropertyId
|| __DATA_CONST.__const _EKRecurrenceRulesPropertyId
|| __DATA_CONST.__const _EKReminderModifiedNotification
|| __DATA_CONST.__const _EKTitlePropertyId
|| __DATA_CONST.__const _EKUUIDPropertyId
|| __DATA_CONST.__const __EKCalendarURLScheme
|| __DATA_CONST.__const __EKEventURLScheme
|| __DATA_CONST.__const __EKNotificationChangedNotificationsKey
|| __DATA_CONST.__const __EKNotificationCountChangedExternallyNotification
|| __DATA_CONST.__const __EKNotificationCountChangedNotification
|| __DATA_CONST.__const __EKNotificationsChangedNotification
|| __DATA_CONST.__const __EKReminderURLHost
|| __DATA_CONST.__const __EKReminderURLScheme
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKAlarm
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKAttendee
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKBirthdayListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKCalendar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKCalendarEventInvitationNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKCalendarEventInvitationNotificationAttendee
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKCalendarItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKCalendarNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKCalendarNotificationReference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKCalendarVisibilityManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKChangeSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKChangeTrackingClientId
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKCompatibility
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKConflictDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKDaemonConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKDataProtectionObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKDebugPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKDirectoryResource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKDirectorySearchResultSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKEphemeralCacheEventStoreProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKEventStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKFeatureSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKObjectID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKOrganizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKParticipant
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKParticipantForSorting
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentAlarm
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentAttachment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentAttendee
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentCalendar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentCalendarItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentEventAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentExceptionDate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentOrganizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentParticipant
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentRecurrenceRule
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentReminder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentResourceChange
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentSharee
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPersistentSuggestedEventInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKReadWriteLock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKRecurrenceGenerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKRecurrenceRule
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKRelation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKReminder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKSourceConstraints
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKStructuredLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKStructuredLocationPrediction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKTimedEventStorePurger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKTravelAdvisoryTimelinessAuthority
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKTravelEngineHypothesis
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EKTravelEngineUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EKNotificationMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKAlarm
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKAttendee
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKBirthdayListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKCalendar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKCalendarEventInvitationNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKCalendarEventInvitationNotificationAttendee
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKCalendarItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKCalendarNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKCalendarNotificationReference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKCalendarVisibilityManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKChangeSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKChangeTrackingClientId
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKCompatibility
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKConflictDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKDaemonConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKDataProtectionObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKDebugPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKEphemeralCacheEventStoreProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKEventStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKFeatureSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKObjectID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKOrganizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKParticipant
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKParticipantForSorting
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentAlarm
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentAttachment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentAttendee
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentCalendar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentCalendarItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentEventAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentExceptionDate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentOrganizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentParticipant
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentRecurrenceRule
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentReminder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentResourceChange
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentSharee
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPersistentSuggestedEventInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKReadWriteLock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKRecurrenceChange
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKRecurrenceGenerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKRecurrenceRule
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKRelation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKReminder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKSourceConstraints
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKStructuredLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKStructuredLocationPrediction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKTimedEventStorePurger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKTravelAdvisoryTimelinessAuthority
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKTravelEngineHypothesis
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EKTravelEngineUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EKNotificationMonitor
|| __TEXT.__text _CalAttendeeStatusToEKParticipantStatus
|| __TEXT.__text _EKAutoCommentPrefix
|| __TEXT.__text _EKAvailabilitySpanTypeAsString
|| __TEXT.__text _EKBundle
|| __TEXT.__text _EKDatabasePerformMigrationIfNeeded
|| __TEXT.__text _EKDatabaseSizeInBytes
|| __TEXT.__text _EKEventOccurrencesExistInDateRange
|| __TEXT.__text _EKEventOccurrencesExistWithinTimeInterval
|| __TEXT.__text _EKParticipantStatusToCalAttendeeStatus
|| __TEXT.__text _EKTravelEngineLogInitialize
|| __TEXT.__text _EKUtils_AdjustedAttendeeAddress
|| __TEXT.__text __bitmaskContainsOption
|| __TEXT.__text __bitmaskExclusivelyMatchesOption
__ CalendarDaemon: _CADEKPersistentEventDefaultPropertiesToLoad
__ CalendarDaemon: _GetSharedXPCInterfaceForCADClientInterface
__ CalendarDaemon: _GetSharedXPCInterfaceForCADInterface
__ CalendarDaemon: _OBJC_CLASS_$_CADCalendarItemsWithExternalIdentifierPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADChangeTrackingClientId
__ CalendarDaemon: _OBJC_CLASS_$_CADCompoundFilter
__ CalendarDaemon: _OBJC_CLASS_$_CADContactEventsPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADDatabaseInitializationOptions
__ CalendarDaemon: _OBJC_CLASS_$_CADEventCreatedFromSuggestionPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADEventPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADEventTimeWindowPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADEventsForAssistantSearchPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADFilter
__ CalendarDaemon: _OBJC_CLASS_$_CADNaturalLanguageSuggestedEventsSearchPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADNotifiableEventsPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADNotificationCenterVisibleEventsPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADPropertyFilter
__ CalendarDaemon: _OBJC_CLASS_$_CADPropertySearchPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADRespondedEventsPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADRouteHypothesis
__ CalendarDaemon: _OBJC_CLASS_$_CADTravelEventsPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADUnacknowledgedEventsPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADUnalertedEventsPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADUpNextEventsPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADUpcomingEventsPredicate
__ CalendarDaemon: _OBJC_CLASS_$_CADXPCProxyHelper
__ CalendarDaemon: _OBJC_CLASS_$_EKAlarmOccurrence
__ CalendarDaemon: _OBJC_CLASS_$_EKMasterEventsPredicate
__ CalendarDaemon: _OBJC_CLASS_$_EKReminderPredicate
__ CalendarDaemon: _OBJC_CLASS_$_EKScheduledReminderPredicate
__ CalendarDaemon: __CADDaemonStartedNotification
__ CalendarDatabase: _CalAlarmCopyDefaultAllDayAlarmOffset
__ CalendarDatabase: _CalAlarmCopyDefaultTimedAlarmOffset
__ CalendarDatabase: _CalAlertInviteeDeclines
__ CalendarDatabase: _CalAttendeeStatusDeletedByOrganizer
__ CalendarDatabase: _CalDatabaseIdleChangeTrackingClientWasPurgedNotification
__ CalendarDatabase: _CalDatabaseSizeInBytes
__ CalendarDatabase: _CalEntityTypeGetName
__ CalendarDatabase: _CalEventOccurrenceCacheCopyBoundsForTimeZone
__ CalendarDatabase: _CalShowDeclinedEvents
__ CalendarDatabase: _OBJC_CLASS_$_CADObjectChangeID
__ CalendarDatabase: _OBJC_CLASS_$_CADObjectID
__ CalendarDatabase: _OBJC_CLASS_$_CDBDataProtectionObserver
__ CalendarDatabase: _OBJC_CLASS_$_CDBPreferences
__ CalendarDatabase: _OBJC_CLASS_$_CalItemMetadata
__ CalendarDatabase: __EKMSUUIDString
__ CalendarDatabase: __EKMSUUIDStringForDetachedEvent
__ CalendarDatabase: ___CalDatabaseChangedNotification
__ CalendarDatabase: ___CalDatabaseStoreSyncStatusChangedNotification
__ CalendarDatabase: _kCalAlertPrefChangedNotification
__ CalendarDatabase: _kCalDefaultCalendarChangedNotification
__ CalendarDatabase: _kCalStoreDefaultConstraintFlags
__ CalendarDatabase: _kCalSyncClientBeginningMultiSave
__ CalendarDatabase: _kCalSyncClientFinishedMultiSave
__ CalendarFoundation: _CALPrefDisplayBirthdaysCalendar
__ CalendarFoundation: _CalAbsoluteTimeAddGregorianUnits
__ CalendarFoundation: _CalAbsoluteTimeGetAbsoluteTimeInTimeZone
__ CalendarFoundation: _CalAbsoluteTimeGetGregorianDate
__ CalendarFoundation: _CalAbsoluteTimeGetGregorianDateWithFallbackToDefaultTimeZone
__ CalendarFoundation: _CalAnalyticsSendEvent
__ CalendarFoundation: _CalAnalyticsTimeIntervalFromMachTimes
__ CalendarFoundation: _CalBooleanAsString
__ CalendarFoundation: _CalCopyTimeZone
__ CalendarFoundation: _CalEqualObjects
__ CalendarFoundation: _CalEqualStrings
__ CalendarFoundation: _CalGenerateQualifiedIdentifierWithClassAndSubdomain
__ CalendarFoundation: _CalGregorianDateAddUnits
__ CalendarFoundation: _CalGregorianDateEqualToGregorianDate
__ CalendarFoundation: _CalGregorianDateGetAbsoluteTime
__ CalendarFoundation: _CalGregorianDateGetAbsoluteTimeWithFallbackToDefaultTimeZone
__ CalendarFoundation: _CalGregorianDateGetGregorianDateForDay
__ CalendarFoundation: _CalGregorianDateGetGregorianDateForEndOfDay
__ CalendarFoundation: _CalGregorianDateGetNull
__ CalendarFoundation: _CalIsReminderBridgeEnabled
__ CalendarFoundation: _CalLogInitialize
__ CalendarFoundation: _CalRouteType_Driving
__ CalendarFoundation: _CalRouteType_Transit
__ CalendarFoundation: _CalRouteType_Walking
__ CalendarFoundation: _CalTimeZoneCopyCFTimeZone
__ CalendarFoundation: _CalendarFoundationPerformBlockOnSharedContactStore
__ CalendarFoundation: _DisplayNameStringForIdentityWithProperties
__ CalendarFoundation: _EKCachedTimeZoneWithName
__ CalendarFoundation: _EKDateComponentsGetDate
__ CalendarFoundation: _EKSymbolicColorToRGBMapping
__ CalendarFoundation: _EKWeakLinkClass
__ CalendarFoundation: _EKWeakLinkFramework
__ CalendarFoundation: _EKWeakLinkStringConstant
__ CalendarFoundation: _OBJC_CLASS_$_CalAccountUtils
__ CalendarFoundation: _OBJC_CLASS_$_CalContactsProvider
__ CalendarFoundation: _OBJC_CLASS_$_CalDarwinNotificationListener
__ CalendarFoundation: _OBJC_CLASS_$_CalDateRange
__ CalendarFoundation: _OBJC_CLASS_$_CalDefaults
__ CalendarFoundation: _OBJC_CLASS_$_CalDescriptionBuilder
__ CalendarFoundation: _OBJC_CLASS_$_CalEntitlementsVerifier
__ CalendarFoundation: _OBJC_CLASS_$_CalLimitingQueue
__ CalendarFoundation: _OBJC_CLASS_$_CalLocation
__ CalendarFoundation: _OBJC_CLASS_$_CalLocationAuthorization
__ CalendarFoundation: _OBJC_CLASS_$_CalLocationManager
__ CalendarFoundation: _OBJC_CLASS_$_CalLocationPrediction
__ CalendarFoundation: _OBJC_CLASS_$_CalNSDateProvider
__ CalendarFoundation: _OBJC_CLASS_$_CalPreferences
__ CalendarFoundation: _OBJC_CLASS_$_CalRecurrenceGenerator
__ CalendarFoundation: _OBJC_CLASS_$_CalRoute
__ CalendarFoundation: _OBJC_CLASS_$_CalStopwatch
__ CalendarFoundation: _OBJC_CLASS_$_CalStructuredDataArchiver
__ CalendarFoundation: _OBJC_CLASS_$_CalUMCalendarDataContainerProvider
__ CalendarFoundation: _OBJC_CLASS_$_EKCalendarDate
__ CalendarFoundation: _OBJC_METACLASS_$_CalRecurrenceGenerator
__ CalendarFoundation: _kCalCalendarBundleIdentifier
__ CalendarFoundation: _kCalLogHandle
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactGivenNameKey
__ Contacts: _CNContactOrganizationNameKey
__ Contacts: _CNContactStoreDidChangeNotification
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFetchRequest
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactsUserDefaults
__ Contacts: _OBJC_CLASS_$_CNLabeledValue
__ Contacts: _OBJC_CLASS_$_CNMutableContact
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ Contacts: _OBJC_CLASS_$_CNPostalAddress
__ Contacts: _OBJC_CLASS_$_CNPostalAddressFormatter
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDateGetAbsoluteTime
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSURLIsPackageKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFExecutableLinkedOnOrAfter
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorCreateCopy
__ CoreGraphics: _CGColorEqualToColor
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorRetain
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreLocation: _CLLocationCoordinate2DIsValid
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ DataAccessExpress: _DADCalendarDirectorySearchRecordType_Groups
__ DataAccessExpress: _DADCalendarDirectorySearchRecordType_Locations
__ DataAccessExpress: _DADCalendarDirectorySearchRecordType_Resources
__ DataAccessExpress: _DADCalendarDirectorySearchRecordType_Users
__ DataAccessExpress: _OBJC_CLASS_$_DADConnection
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureErrorKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSMachErrorDomain
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUserActivityTypeBrowsingWeb
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSDataDetector
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPointerFunctions
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUserActivity
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSPredicate
__ Foundation: __NSMethodExceptionProem
__ PersistentConnection: _OBJC_CLASS_$_PCPersistentTimer
__ TCC: _TCCAccessPreflight
__ TCC: _TCCAccessRequest
__ TCC: _TCCAccessRestricted
__ TCC: _kTCCServiceCalendar
__ TCC: _kTCCServiceReminders
__ iCalendar: _OBJC_CLASS_$_ICSProperty
__ iCalendar: _kICSSymbolicColorCustom
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_MD5_Final
__ libSystem.B.dylib: _CC_MD5_Init
__ libSystem.B.dylib: _CC_MD5_Update
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_get_active_platform
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _os_activity_apply
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
EKConferenceURLDetector : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKConferenceURLDetector logHandle]
  +[EKConferenceURLDetector _dataDetector]
  +[EKConferenceURLDetector _linksInSource:]
  +[EKConferenceURLDetector _isPreferredURL:]
  +[EKConferenceURLDetector _isValidTelURL:]
  +[EKConferenceURLDetector _preferredHostSuffixes]
  +[EKConferenceURLDetector conferenceURLFromSources:]


EKDirectorySearchResultSet : NSObject /usr/lib/libSystem.B.dylib
 @property  NSSet *locations
 @property  NSSet *groups
 @property  NSSet *resources
 @property  NSSet *people

  // instance methods
  -[EKDirectorySearchResultSet .cxx_destruct]
  -[EKDirectorySearchResultSet people]
  -[EKDirectorySearchResultSet groups]
  -[EKDirectorySearchResultSet setLocations:]
  -[EKDirectorySearchResultSet resources]
  -[EKDirectorySearchResultSet setResources:]
  -[EKDirectorySearchResultSet locations]
  -[EKDirectorySearchResultSet setGroups:]
  -[EKDirectorySearchResultSet setPeople:]


EKRecurrenceRule : EKObject <NSCopying>
 @property  BOOL shouldPinMonthDays
 @property  {?=iiiiid} gregorianUnits
 @property  BOOL usesEndDate
 @property  NSString *UUID
 @property  NSDate *cachedEndDate
 @property  BOOL dirtyStateMayAffectExceptionDates
 @property  NSString *calendarIdentifier
 @property  EKRecurrenceEnd *recurrenceEnd
 @property  long long frequency
 @property  long long interval
 @property  long long firstDayOfTheWeek
 @property  NSArray *daysOfTheWeek
 @property  NSArray *daysOfTheMonth
 @property  NSArray *daysOfTheYear
 @property  NSArray *weeksOfTheYear
 @property  NSArray *monthsOfTheYear
 @property  NSArray *setPositions

  // class methods
  +[EKRecurrenceRule recurrenceRuleWithType:interval:end:]
  +[EKRecurrenceRule iCalendarValueFromDayOfTheWeek:]
  +[EKRecurrenceRule iCalendarValueFromRecurrenceType:]
  +[EKRecurrenceRule iCalendarValueFromDate:isDateOnly:isFloating:]
  +[EKRecurrenceRule _ekWeekdayFromCalDayOfWeek:]
  +[EKRecurrenceRule _calDayOfWeekFromEKWeekday:]
  +[EKRecurrenceRule frozenClass]

  // instance methods
  -[EKRecurrenceRule init]
  -[EKRecurrenceRule copyWithZone:]
  -[EKRecurrenceRule count]
  -[EKRecurrenceRule calendarIdentifier]
  -[EKRecurrenceRule .cxx_destruct]
  -[EKRecurrenceRule setCount:]
  -[EKRecurrenceRule specifier]
  -[EKRecurrenceRule interval]
  -[EKRecurrenceRule setInterval:]
  -[EKRecurrenceRule endDate]
  -[EKRecurrenceRule UUID]
  -[EKRecurrenceRule setUUID:]
  -[EKRecurrenceRule reset]
  -[EKRecurrenceRule rollback]
  -[EKRecurrenceRule setEndDate:]
  -[EKRecurrenceRule frequency]
  -[EKRecurrenceRule setFrequency:]
  -[EKRecurrenceRule setSpecifier:]
  -[EKRecurrenceRule initRecurrenceWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:]
  -[EKRecurrenceRule daysOfTheWeek]
  -[EKRecurrenceRule initRecurrenceWithFrequency:interval:end:]
  -[EKRecurrenceRule pinToEndsOfMonthsWithCalendarItem:]
  -[EKRecurrenceRule daysOfTheMonth]
  -[EKRecurrenceRule setDaysOfTheMonth:]
  -[EKRecurrenceRule monthsOfTheYear]
  -[EKRecurrenceRule setMonthsOfTheYear:]
  -[EKRecurrenceRule setRecurrenceEnd:]
  -[EKRecurrenceRule setDaysOfTheWeek:]
  -[EKRecurrenceRule setPositions]
  -[EKRecurrenceRule setSetPositions:]
  -[EKRecurrenceRule recurrenceEnd]
  -[EKRecurrenceRule daysOfTheYear]
  -[EKRecurrenceRule weeksOfTheYear]
  -[EKRecurrenceRule isWeekendRule]
  -[EKRecurrenceRule isWeekdayRule]
  -[EKRecurrenceRule isAnyDayRule]
  -[EKRecurrenceRule setDaysOfTheYear:]
  -[EKRecurrenceRule setWeeksOfTheYear:]
  -[EKRecurrenceRule firstDayOfTheWeek]
  -[EKRecurrenceRule setFirstDayOfTheWeek:]
  -[EKRecurrenceRule usesEndDate]
  -[EKRecurrenceRule isEqualToRecurrenceRule:]
  -[EKRecurrenceRule stringValueAsDateOnly:isFloating:]
  -[EKRecurrenceRule shouldPinMonthDays]
  -[EKRecurrenceRule firstDayOfTheWeekRaw]
  -[EKRecurrenceRule setFirstDayOfTheWeekRaw:]
  -[EKRecurrenceRule _recurrenceHelper]
  -[EKRecurrenceRule _updateSpecifierIfNeeded]
  -[EKRecurrenceRule cachedEndDate]
  -[EKRecurrenceRule gregorianUnits]
  -[EKRecurrenceRule dirtyStateMayAffectExceptionDates]
  -[EKRecurrenceRule mayOccurAfterDate:]
  -[EKRecurrenceRule isSimpleRule]


EKReminderFetchRequestToken : NSObject /usr/lib/libSystem.B.dylib <EKFetchRequestToken, NSCopying>
 @property  EKReminderStore *reminderStore

  // instance methods
  -[EKReminderFetchRequestToken copyWithZone:]
  -[EKReminderFetchRequestToken .cxx_destruct]
  -[EKReminderFetchRequestToken cancel]
  -[EKReminderFetchRequestToken reminderStore]
  -[EKReminderFetchRequestToken initWithReminderStore:]


EKReminderStore : NSObject /usr/lib/libSystem.B.dylib <EKUpdatedReminderBackingObjectProvider>
 @property  REMStore *remStore
 @property  EKEventStore *eventStore
 @property  NSArray *sources
 @property  NSArray *calendars
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EKReminderStore log]
  +[EKReminderStore isNotFoundError:]
  +[EKReminderStore uniqueIdentifierForREMObject:]
  +[EKReminderStore frozenClassForReminderClass:]

  // instance methods
  -[EKReminderStore .cxx_destruct]
  -[EKReminderStore calendarWithIdentifier:]
  -[EKReminderStore reset]
  -[EKReminderStore sources]
  -[EKReminderStore eventStore]
  -[EKReminderStore defaultCalendarForNewReminders]
  -[EKReminderStore remStore]
  -[EKReminderStore completionBlockForFetchRequestToken:remove:]
  -[EKReminderStore remindersChanged]
  -[EKReminderStore _loadAccounts]
  -[EKReminderStore _loadAccountsIfNeeded]
  -[EKReminderStore frozenObjectForReminderObject:]
  -[EKReminderStore _fetchAndCacheConstraintsForFrozenSource:]
  -[EKReminderStore _loadLists]
  -[EKReminderStore _loadListsIfNeeded]
  -[EKReminderStore backingCalendarWithIdentifier:]
  -[EKReminderStore frozenCalendarFromCalendar:error:]
  -[EKReminderStore saveObject:withFrozenObject:error:]
  -[EKReminderStore backingReminderWithIdentifier:]
  -[EKReminderStore saveCalendar:error:]
  -[EKReminderStore fillInPath:usingParents:]
  -[EKReminderStore _commit:error:]
  -[EKReminderStore _moveRemindersToNewLists:error:]
  -[EKReminderStore _checkPredicate:]
  -[EKReminderStore remindersMatchingPredicate:]
  -[EKReminderStore _allLists]
  -[EKReminderStore newFrozenObjectForReminderObject:withChanges:]
  -[EKReminderStore existingUpdatedObject:]
  -[EKReminderStore initWithEventStore:token:]
  -[EKReminderStore sourceWithIdentifier:]
  -[EKReminderStore cachedConstraintsForSource:]
  -[EKReminderStore calendars]
  -[EKReminderStore createNewReminderCalendar]
  -[EKReminderStore removeCalendar:error:]
  -[EKReminderStore reminderWithIdentifier:]
  -[EKReminderStore remindersWithExternalIdentifier:]
  -[EKReminderStore createNewReminder]
  -[EKReminderStore saveReminder:error:]
  -[EKReminderStore removeReminder:error:]
  -[EKReminderStore resetBackingAlarmWithBackingAlarm:]
  -[EKReminderStore resetBackingLocationWithBackingLocation:]
  -[EKReminderStore commit:]
  -[EKReminderStore predicateForRemindersInCalendars:]
  -[EKReminderStore predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:]
  -[EKReminderStore predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:]
  -[EKReminderStore fetchRemindersMatchingPredicate:completion:]
  -[EKReminderStore frozenAlarmForREMAlarms:]
  -[EKReminderStore _reminderCopiedToNewList:]


EKPersistentInviteReplyNotification : EKPersistentNotification
  // class methods
  +[EKPersistentInviteReplyNotification relations]
  +[EKPersistentInviteReplyNotification defaultPropertiesToLoad]
  +[EKPersistentInviteReplyNotification meltedClass]

  // instance methods
  -[EKPersistentInviteReplyNotification creationDate]
  -[EKPersistentInviteReplyNotification setCreationDate:]
  -[EKPersistentInviteReplyNotification summary]
  -[EKPersistentInviteReplyNotification setSummary:]
  -[EKPersistentInviteReplyNotification entityType]
  -[EKPersistentInviteReplyNotification shareeStatus]
  -[EKPersistentInviteReplyNotification shareeDisplayName]
  -[EKPersistentInviteReplyNotification inReplyTo]
  -[EKPersistentInviteReplyNotification setInReplyTo:]
  -[EKPersistentInviteReplyNotification setShareeDisplayName:]
  -[EKPersistentInviteReplyNotification shareeFirstName]
  -[EKPersistentInviteReplyNotification setShareeFirstName:]
  -[EKPersistentInviteReplyNotification shareeLastName]
  -[EKPersistentInviteReplyNotification setShareeLastName:]
  -[EKPersistentInviteReplyNotification shareeURL]
  -[EKPersistentInviteReplyNotification setShareeURL:]
  -[EKPersistentInviteReplyNotification setShareeStatus:]
  -[EKPersistentInviteReplyNotification alerted]
  -[EKPersistentInviteReplyNotification inviteReplyCalendar]
  -[EKPersistentInviteReplyNotification setInviteReplyCalendar:]


EKPersistentSharee : EKPersistentObject
  // class methods
  +[EKPersistentSharee relations]
  +[EKPersistentSharee defaultPropertiesToLoad]
  +[EKPersistentSharee meltedClass]

  // instance methods
  -[EKPersistentSharee copyWithZone:]
  -[EKPersistentSharee setOwner:]
  -[EKPersistentSharee UUID]
  -[EKPersistentSharee address]
  -[EKPersistentSharee setUUID:]
  -[EKPersistentSharee displayName]
  -[EKPersistentSharee owner]
  -[EKPersistentSharee setDisplayName:]
  -[EKPersistentSharee setAddress:]
  -[EKPersistentSharee firstName]
  -[EKPersistentSharee lastName]
  -[EKPersistentSharee setFirstName:]
  -[EKPersistentSharee setLastName:]
  -[EKPersistentSharee externalID]
  -[EKPersistentSharee setExternalID:]
  -[EKPersistentSharee entityType]
  -[EKPersistentSharee shareeStatus]
  -[EKPersistentSharee shareeAccessLevel]
  -[EKPersistentSharee setShareeAccessLevel:]
  -[EKPersistentSharee setShareeStatus:]


EKPersistentCalendar : EKPersistentObject
 @property  EKPersistentSource *source
 @property  NSString *UUID
 @property  NSString *title
 @property  NSString *externalID
 @property  NSString *externalModificationTag
 @property  int displayOrder
 @property  NSString *colorString
 @property  BOOL colorDisplayOnly
 @property  NSString *symbolicColorName
 @property  int flags
 @property  unsigned long sharingStatus
 @property  unsigned long invitationStatus
 @property  NSString *sharedOwnerName
 @property  NSURL *sharedOwnerAddress
 @property  unsigned long sharingInvitationResponse
 @property  NSSet *sharees
 @property  NSString *publishedURL
 @property  BOOL published
 @property  NSString *selfIdentityDisplayName
 @property  NSString *selfIdentityEmail
 @property  NSString *selfIdentityPhoneNumber
 @property  NSURL *selfIdentityAddress
 @property  NSString *selfIdentityFirstName
 @property  NSString *selfIdentityLastName
 @property  NSString *ownerIdentityDisplayName
 @property  NSString *ownerIdentityEmail
 @property  NSString *ownerIdentityPhoneNumber
 @property  NSURL *ownerIdentityAddress
 @property  NSString *ownerIdentityFirstName
 @property  NSString *ownerIdentityLastName
 @property  NSString *bulkRequests
 @property  NSString *subcalAccountID
 @property  NSString *pushKey

  // class methods
  +[EKPersistentCalendar relations]
  +[EKPersistentCalendar defaultPropertiesToLoad]
  +[EKPersistentCalendar meltedClass]
  +[EKPersistentCalendar calendarWithRandomUUID]

  // instance methods
  -[EKPersistentCalendar setSource:]
  -[EKPersistentCalendar flags]
  -[EKPersistentCalendar source]
  -[EKPersistentCalendar UUID]
  -[EKPersistentCalendar setUUID:]
  -[EKPersistentCalendar title]
  -[EKPersistentCalendar setTitle:]
  -[EKPersistentCalendar setFlags:]
  -[EKPersistentCalendar notifications]
  -[EKPersistentCalendar setNotifications:]
  -[EKPersistentCalendar externalID]
  -[EKPersistentCalendar setExternalID:]
  -[EKPersistentCalendar externalModificationTag]
  -[EKPersistentCalendar setExternalModificationTag:]
  -[EKPersistentCalendar externalRepresentation]
  -[EKPersistentCalendar setExternalRepresentation:]
  -[EKPersistentCalendar allowedEntities]
  -[EKPersistentCalendar entityType]
  -[EKPersistentCalendar notes]
  -[EKPersistentCalendar setNotes:]
  -[EKPersistentCalendar alarms]
  -[EKPersistentCalendar setAlarms:]
  -[EKPersistentCalendar setInvitationStatus:]
  -[EKPersistentCalendar symbolicColorName]
  -[EKPersistentCalendar displayOrder]
  -[EKPersistentCalendar sharingStatus]
  -[EKPersistentCalendar isPublished]
  -[EKPersistentCalendar sharedOwnerName]
  -[EKPersistentCalendar sharees]
  -[EKPersistentCalendar setSharees:]
  -[EKPersistentCalendar setSharingStatus:]
  -[EKPersistentCalendar setDisplayOrder:]
  -[EKPersistentCalendar ownerIdentityAddress]
  -[EKPersistentCalendar setSymbolicColorName:]
  -[EKPersistentCalendar selfIdentityEmail]
  -[EKPersistentCalendar setPublished:]
  -[EKPersistentCalendar setIsPublished:]
  -[EKPersistentCalendar setSharedOwnerName:]
  -[EKPersistentCalendar sharedOwnerAddress]
  -[EKPersistentCalendar setSharedOwnerAddress:]
  -[EKPersistentCalendar colorString]
  -[EKPersistentCalendar externalIDTag]
  -[EKPersistentCalendar setExternalIDTag:]
  -[EKPersistentCalendar syncToken]
  -[EKPersistentCalendar setSyncToken:]
  -[EKPersistentCalendar isColorDisplayOnly]
  -[EKPersistentCalendar setColorDisplayOnly:]
  -[EKPersistentCalendar setColorString:]
  -[EKPersistentCalendar sharingInvitationResponse]
  -[EKPersistentCalendar setSharingInvitationResponse:]
  -[EKPersistentCalendar publishedURL]
  -[EKPersistentCalendar setPublishedURL:]
  -[EKPersistentCalendar invitationStatus]
  -[EKPersistentCalendar setAllowedEntities:]
  -[EKPersistentCalendar selfIdentityDisplayName]
  -[EKPersistentCalendar setSelfIdentityDisplayName:]
  -[EKPersistentCalendar setSelfIdentityEmail:]
  -[EKPersistentCalendar selfIdentityPhoneNumber]
  -[EKPersistentCalendar setSelfIdentityPhoneNumber:]
  -[EKPersistentCalendar selfIdentityAddress]
  -[EKPersistentCalendar setSelfIdentityAddress:]
  -[EKPersistentCalendar selfIdentityFirstName]
  -[EKPersistentCalendar setSelfIdentityFirstName:]
  -[EKPersistentCalendar selfIdentityLastName]
  -[EKPersistentCalendar setSelfIdentityLastName:]
  -[EKPersistentCalendar ownerIdentityDisplayName]
  -[EKPersistentCalendar ownerIdentityId]
  -[EKPersistentCalendar setOwnerIdentityId:]
  -[EKPersistentCalendar setOwnerIdentityDisplayName:]
  -[EKPersistentCalendar ownerIdentityEmail]
  -[EKPersistentCalendar setOwnerIdentityEmail:]
  -[EKPersistentCalendar ownerIdentityPhoneNumber]
  -[EKPersistentCalendar setOwnerIdentityPhoneNumber:]
  -[EKPersistentCalendar setOwnerIdentityAddress:]
  -[EKPersistentCalendar ownerIdentityFirstName]
  -[EKPersistentCalendar setOwnerIdentityFirstName:]
  -[EKPersistentCalendar ownerIdentityLastName]
  -[EKPersistentCalendar setOwnerIdentityLastName:]
  -[EKPersistentCalendar bulkRequests]
  -[EKPersistentCalendar setBulkRequests:]
  -[EKPersistentCalendar subcalAccountID]
  -[EKPersistentCalendar setSubcalAccountID:]
  -[EKPersistentCalendar pushKey]
  -[EKPersistentCalendar setPushKey:]
  -[EKPersistentCalendar digest]
  -[EKPersistentCalendar setDigest:]


EKDefaultSerializerFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKDefaultSerializerFactory createSerializerWithEventStore:withVersion:]


EKFeatureSet : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKFeatureSet isTravelAdvisorySupported]
  +[EKFeatureSet calendarListViewCellsFeaturesExtraContent]
  +[EKFeatureSet eventDetailsDayPreviewEnabled]
  +[EKFeatureSet _currentSplashScreenVersion]
  +[EKFeatureSet isConservativeEntryEnabled]
  +[EKFeatureSet areVehicleTriggersEnabled]
  +[EKFeatureSet calendarListViewCellsFeaturesAttendeeInformation]
  +[EKFeatureSet areQuickActionsSupported]
  +[EKFeatureSet areApplicationBadgesSupported]
  +[EKFeatureSet isSuggestionsEnabled]
  +[EKFeatureSet isContinuitySupported]
  +[EKFeatureSet areContextualRemindersSupported]
  +[EKFeatureSet mustDisplaySplashScreenToUser]
  +[EKFeatureSet userAcknowledgedSplashScreen]
  +[EKFeatureSet automaticGeocodingEnabled]
  +[EKFeatureSet eventsFoundInAppsEnabled]


EKAvailabilityCache : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKAvailabilityCache _convertType:]
  +[EKAvailabilityCache _isValidStartDate:endDate:]
  +[EKAvailabilityCache _logRequestElapsedTime:forNumberOfAddresses:]
  +[EKAvailabilityCache _generateEventKitSpansFromPersistenceSpans:]

  // instance methods
  -[EKAvailabilityCache init]
  -[EKAvailabilityCache .cxx_destruct]
  -[EKAvailabilityCache initWithSource:]
  -[EKAvailabilityCache _dictionaryForIgnoredEventID:]
  -[EKAvailabilityCache _validateRequestStartDate:endDate:addresses:error:]
  -[EKAvailabilityCache _cachedSpanResultsBetweenStartDate:endDate:ignoredEventID:addresses:]
  -[EKAvailabilityCache _handleResults:resultsBlock:ignoredEventID:]
  -[EKAvailabilityCache requestAvailabilityBetweenStartDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:]
  -[EKAvailabilityCache cachedAvailabilityInDateRange:ignoredEventID:addresses:]
  -[EKAvailabilityCache cancelAvailabilityRequestWithID:]


EKCompatibility : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKCompatibility simulateLegacyBehaviors]
  +[EKCompatibility isProgramSDKAtLeast:]
  +[EKCompatibility perform:whileSimulatingLegacyBehaviors:]
  +[EKCompatibility setSimulateLegacyBehaviors:]
  +[EKCompatibility performWhileSimulatingLegacyBehaviors:]


EKPredicateEvaluator : NSObject /usr/lib/libSystem.B.dylib <CADPredicateValidator>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EKPredicateEvaluator evaluatePredicate:withObject:]


EKSerializableEvent : EKSerializableObject
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSTimeZone *timeZone
 @property  BOOL isAllDay
 @property  double travelTime
 @property  NSMutableArray *recurrenceRules
 @property  NSString *title
 @property  NSString *notes
 @property  NSURL *url
 @property  NSString *calendarIdentifier
 @property  NSString *location
 @property  EKSerializableStructuredLocation *structuredLocation
 @property  NSArray *attendees
 @property  NSArray *alarms
 @property  NSArray *attachments

  // class methods
  +[EKSerializableEvent serializedProperties]
  +[EKSerializableEvent classesForKey]

  // instance methods
  -[EKSerializableEvent calendarIdentifier]
  -[EKSerializableEvent setTimeZone:]
  -[EKSerializableEvent .cxx_destruct]
  -[EKSerializableEvent timeZone]
  -[EKSerializableEvent attachments]
  -[EKSerializableEvent startDate]
  -[EKSerializableEvent endDate]
  -[EKSerializableEvent url]
  -[EKSerializableEvent setAttachments:]
  -[EKSerializableEvent title]
  -[EKSerializableEvent setTitle:]
  -[EKSerializableEvent location]
  -[EKSerializableEvent setStartDate:]
  -[EKSerializableEvent setEndDate:]
  -[EKSerializableEvent initWithEvent:]
  -[EKSerializableEvent setUrl:]
  -[EKSerializableEvent setLocation:]
  -[EKSerializableEvent travelTime]
  -[EKSerializableEvent setTravelTime:]
  -[EKSerializableEvent setCalendarIdentifier:]
  -[EKSerializableEvent isAllDay]
  -[EKSerializableEvent notes]
  -[EKSerializableEvent setNotes:]
  -[EKSerializableEvent alarms]
  -[EKSerializableEvent setAlarms:]
  -[EKSerializableEvent attendees]
  -[EKSerializableEvent setAttendees:]
  -[EKSerializableEvent structuredLocation]
  -[EKSerializableEvent setStructuredLocation:]
  -[EKSerializableEvent recurrenceRules]
  -[EKSerializableEvent setRecurrenceRules:]
  -[EKSerializableEvent _initAlarms:]
  -[EKSerializableEvent _initAttachments:]
  -[EKSerializableEvent _initAttendees:]
  -[EKSerializableEvent _initRecurrenceRules:]
  -[EKSerializableEvent createEventInEventStore:]
  -[EKSerializableEvent setIsAllDay:]


EKParticipantSemanticIdentifierGenerator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKParticipantSemanticIdentifierGenerator semanticIdentifierForParticipant:]


EKOccurrenceCacheSearch : NSObject /usr/lib/libSystem.B.dylib <EKCancellableRemoteOperation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EKOccurrenceCacheSearch searchWithCalendars:searchTerm:store:callback:]

  // instance methods
  -[EKOccurrenceCacheSearch run]
  -[EKOccurrenceCacheSearch .cxx_destruct]
  -[EKOccurrenceCacheSearch cancel]
  -[EKOccurrenceCacheSearch disconnect]
  -[EKOccurrenceCacheSearch searchTerm]
  -[EKOccurrenceCacheSearch initWithCalendars:searchTerm:store:callback:]
  -[EKOccurrenceCacheSearch performSearchOperation:inCalendars:withEventStore:andSearchTerm:]
  -[EKOccurrenceCacheSearch receivedBatchResultsFromServer:finished:]


EKCalendarNotificationReference : NSObject /usr/lib/libSystem.B.dylib
 @property  int type
 @property  EKCalendarNotification *notification
 @property  EKObjectID *objectID

  // instance methods
  -[EKCalendarNotificationReference type]
  -[EKCalendarNotificationReference .cxx_destruct]
  -[EKCalendarNotificationReference notification]
  -[EKCalendarNotificationReference objectID]
  -[EKCalendarNotificationReference initWithType:objectID:date:eventStore:]
  -[EKCalendarNotificationReference _notificationTypeForResourceChange:notificationType:]
  -[EKCalendarNotificationReference initWithType:objectID:eventStore:]


EKObject : NSObject /usr/lib/libSystem.B.dylib <EKFrozenMeltedPair, EKProtocolMutableObject>
 @property  EKEventStore *eventStore
 @property  EKChangeSet *changeSet
 @property  NSMutableDictionary *_cachedMeltedObjects
 @property  NSDictionary *additionalFrozenProperties
 @property  NSMutableDictionary *_cachedValues
 @property  EKObjectValidationContext *_validationContext
 @property  EKPersistentObject *backingObject
 @property  BOOL hasChanges
 @property  BOOL new
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isFrozen
 @property  BOOL isPartialObject
 @property  NSString *uniqueIdentifier
 @property  NSString *semanticIdentifier
 @property  BOOL canBeConvertedToFullObject
 @property  NSDictionary *preFrozenRelationshipObjects

  // class methods
  +[EKObject frozenClass]
  +[EKObject meltedClass]
  +[EKObject knownRelationshipSingleValueKeys]
  +[EKObject isMeltedAndNotWeakRelationshipObject:forKey:]
  +[EKObject knownRelationshipMultiValueKeys]
  +[EKObject propertiesUnavailableForPartialObjects]
  +[EKObject knownRelationshipWeakKeys]
  +[EKObject isWeakRelationship]
  +[EKObject knownDerivedRelationshipKeys]
  +[EKObject _isWeakRelationMeltedObject:forKey:]
  +[EKObject knownImmutableKeys]
  +[EKObject _numberOfSharedLocksForUnitTesting]
  +[EKObject isDerivedRelationship]
  +[EKObject knownDerivedAndSingleValueRelationshipKeys]

  // instance methods
  -[EKObject init]
  -[EKObject dealloc]
  -[EKObject isEqual:]
  -[EKObject initWithObject:]
  -[EKObject .cxx_destruct]
  -[EKObject addChanges:]
  -[EKObject reset]
  -[EKObject _reset]
  -[EKObject hasChanges]
  -[EKObject uniqueIdentifier]
  -[EKObject setCachedValue:forKey:]
  -[EKObject cachedValueForKey:]
  -[EKObject _cachedValues]
  -[EKObject objectID]
  -[EKObject rollback]
  -[EKObject refetch]
  -[EKObject changeSet]
  -[EKObject setChangeSet:]
  -[EKObject validate:]
  -[EKObject refresh]
  -[EKObject isFrozen]
  -[EKObject _hasChanges]
  -[EKObject hasUnsavedChanges]
  -[EKObject applyChanges:]
  -[EKObject isDeleted]
  -[EKObject changedKeys]
  -[EKObject _readWriteLock]
  -[EKObject isNew]
  -[EKObject revert]
  -[EKObject _sharedInit]
  -[EKObject eventStore]
  -[EKObject _hasChangesForKey:]
  -[EKObject setEventStore:]
  -[EKObject rowID]
  -[EKObject committedValueForKey:]
  -[EKObject isSaved]
  -[EKObject _validationContext]
  -[EKObject isPartialObject]
  -[EKObject canBeConvertedToFullObject]
  -[EKObject singleChangedValueForKey:]
  -[EKObject setSingleChangedValue:forKey:]
  -[EKObject cachedValueForKey:populateBlock:]
  -[EKObject clearCachedValueForKey:]
  -[EKObject frozenClass]
  -[EKObject initWithPersistentObject:]
  -[EKObject backingObject]
  -[EKObject meltedObjectInStore:]
  -[EKObject prepareReminderKitObjectForSaveWithUpdatedBackingObjectProvider:]
  -[EKObject cachedMeltedChildIdentifierToParentMap]
  -[EKObject setBackingObject:]
  -[EKObject markAsNew]
  -[EKObject persistentObject]
  -[EKObject _isNew]
  -[EKObject _isPropertyUnavailable:convertToFullObjectIfUnavailable:]
  -[EKObject rebaseSkippingRelationProperties:]
  -[EKObject _initChangeSetIfNone]
  -[EKObject rebase]
  -[EKObject frozenObject]
  -[EKObject addMultiChangedObjectValue:forKey:]
  -[EKObject setPersistentObject:]
  -[EKObject existsInStore]
  -[EKObject _rollbackCommon]
  -[EKObject _resetCommon]
  -[EKObject _refreshCommon]
  -[EKObject _previousValueForKey:]
  -[EKObject _markAsNewCommon]
  -[EKObject _markAsNotNewCommon]
  -[EKObject _markAsDeletedCommon]
  -[EKObject _markAsUndeletedCommon]
  -[EKObject _markAsSavedCommon]
  -[EKObject _markAsCommittedCommon]
  -[EKObject markAsCommitted]
  -[EKObject _performBlockOnOwnedCachedRelatedObjects:]
  -[EKObject cachedMeltedObjectForSingleValueKey:]
  -[EKObject cachedMeltedObjectsForMultiValueKey:]
  -[EKObject _updatePersistentValueForKey:]
  -[EKObject _propertyValueForKey:]
  -[EKObject updatePersistentObject]
  -[EKObject meltedAndCachedSingleRelationObjectForKey:]
  -[EKObject meltedAndCachedMultiRelationObjectsForKey:]
  -[EKObject markAsSaved]
  -[EKObject updatePersistentObjectSkippingProperties:]
  -[EKObject existingMeltedObject]
  -[EKObject isPropertyUnavailable:]
  -[EKObject isCompletelyEqual:]
  -[EKObject isEqual:ignoringProperties:]
  -[EKObject semanticIdentifier]
  -[EKObject preFrozenRelationshipObjects]
  -[EKObject markAsNotNew]
  -[EKObject markAsDeleted]
  -[EKObject markAsUndeleted]
  -[EKObject updatePersistentValueForKeyIfNeeded:]
  -[EKObject didCommit]
  -[EKObject insertPersistentObjectIfNeeded]
  -[EKObject deletePersistentObject]
  -[EKObject _cachedMeltedObjects]
  -[EKObject set_cachedMeltedObjects:]
  -[EKObject additionalFrozenProperties]
  -[EKObject setAdditionalFrozenProperties:]
  -[EKObject set_cachedValues:]
  -[EKObject set_validationContext:]
  -[EKObject updateMeltedAndCachedSingleRelationObject:forKey:frozenClass:]
  -[EKObject updateMeltedAndCachedMultiRelationObjects:forKey:]
  -[EKObject addCachedMeltedObject:forMultiValueKey:]
  -[EKObject removeCachedMeltedObject:forMultiValueKey:]
  -[EKObject _isOnlyChangedKey:]
  -[EKObject emptyMeltedCacheForKey:]
  -[EKObject isUndeleted]
  -[EKObject _resetIfBackingObjectIsOfClass:fetchResetFrozenObjectBlock:]
  -[EKObject privacyDescription]
  -[EKObject frozenOrMeltedCachedSingleRelationObjectForKey:]
  -[EKObject addChangesFromObject:except:]
  -[EKObject addChangesFromObject:keep:]
  -[EKObject emptyMeltedCacheForKeys:]
  -[EKObject _resetMeltedCache]
  -[EKObject _performWithReadLock:]
  -[EKObject _performWithWriteLock:]
  -[EKObject validateWithOwner:error:]
  -[EKObject _resetWithFrozenObject:]
  -[EKObject _cachedMeltedObjectsCount]
  -[EKObject _hasChangeHelperInKeys:ignoreKeys:checkUnsaved:]
  -[EKObject hasUnsavedChangesIgnoreKeys:]
  -[EKObject _hasUnsavedChangesInKeys:ignoreKeys:]
  -[EKObject _hasChangesForKey:checkUnsaved:]
  -[EKObject _singleRelationshipKeysToCheckForChanges]
  -[EKObject _multiRelationshipKeysToCheckForChanges]
  -[EKObject _areOnlyChangedKeys:]
  -[EKObject _addChangesFromObject:except:keep:]
  -[EKObject addChangesFromObject:]
  -[EKObject updatedMeltedCacheForChangeSet:]
  -[EKObject addMultiChangedObjectValues:forKey:]
  -[EKObject removeMultiChangedObjectValues:forKey:]
  -[EKObject multiChangedObjectValuesForKey:]
  -[EKObject _addCachedMeltedObject:forMultiValueKey:]
  -[EKObject updateMultiValueCacheForChangeSet:preservingExistingAdds:]
  -[EKObject _applyDefinedAfterFirstSaveFrom:]
  -[EKObject _applyKnownImmutableValuesFrom:]
  -[EKObject setCachedMeltedObjects:forMultiValueKey:]
  -[EKObject _updateCachedMeltedObjectSetForMultiValueKey:usingBlock:]
  -[EKObject _removeCachedMeltedObject:forMultiValueKey:]
  -[EKObject removeMultiChangedObjectValue:forKey:]
  -[EKObject setCachedMeltedObject:forSingleValueKey:]
  -[EKObject replaceMultiChangedObjectValuesWithObjectValues:forKey:]
  -[EKObject _convertBackingObjectsWithPath:updateBackingObjects:allChangedBackingObjects:eventStore:updatedBackingObjectProvider:]
  -[EKObject backingObjectOfChildObject:withRelationshipKey:]
  -[EKObject _cachedMeltedChildIdentifierToParentMap:]
  -[EKObject clearCachedValuesForKeys:]
  -[EKObject cachedValueForKey:expectingCachedValue:forMasterKey:relatedKeys:populateBlock:]
  -[EKObject hasUnsavedChangesInKeys:]
  -[EKObject _refreshable]
  -[EKObject meltedAndCachedMultiRelationCountForKey:]
  -[EKObject emptyMeltedCache]


EKRecurrenceGenerator : CalRecurrenceGenerator /System/Library/Frameworks/Contacts.framework/Contacts
  // class methods
  +[EKRecurrenceGenerator _convertEKRecurrenceFrequencyToCalRecurrenceFrequency:]

  // instance methods
  -[EKRecurrenceGenerator _setupForEKEvent:adjustDatesForAllDayEvents:]
  -[EKRecurrenceGenerator _prepareForEKRecurrence:forCalendarItem:]
  -[EKRecurrenceGenerator _copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:adjustDatesForAllDayEvents:]
  -[EKRecurrenceGenerator occurrenceDate:matchesRecurrenceRule:forEvent:includeDetachedEventsInSeries:]
  -[EKRecurrenceGenerator nextOccurrenceDateWithEKRecurrences:forCalendarItem:exceptionDates:initialDate:afterDate:]
  -[EKRecurrenceGenerator copyOccurrenceDatesWithEKEvent:startDate:endDate:timeZone:limit:]
  -[EKRecurrenceGenerator copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:limit:]
  -[EKRecurrenceGenerator copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:limit:adjustDatesForAllDayEvents:]
  -[EKRecurrenceGenerator copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:]
  -[EKRecurrenceGenerator isOccurrenceDate:validForEvent:]
  -[EKRecurrenceGenerator nextOccurrenceDateWithEKRecurrences:forCalendarItem:initialDate:afterDate:]


EKEventAction : EKObject
 @property  NSString *externalID
 @property  NSString *externalFolderID
 @property  NSString *externalScheduleID
 @property  NSString *externalModificationTag
 @property  NSData *externalRepresentation

  // class methods
  +[EKEventAction frozenClass]

  // instance methods
  -[EKEventAction externalID]
  -[EKEventAction setExternalID:]
  -[EKEventAction externalModificationTag]
  -[EKEventAction setExternalModificationTag:]
  -[EKEventAction externalRepresentation]
  -[EKEventAction setExternalRepresentation:]
  -[EKEventAction externalFolderID]
  -[EKEventAction setExternalFolderID:]
  -[EKEventAction externalScheduleID]
  -[EKEventAction setExternalScheduleID:]


EKObjectChangeOwnerIDHelper : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKObjectChangeOwnerIDHelper createOwnerIDWithRowID:objectType:]


EKFrozenReminderCalendar : EKFrozenReminderObject
  // class methods
  +[EKFrozenReminderCalendar meltedClass]

  // instance methods
  -[EKFrozenReminderCalendar _list]
  -[EKFrozenReminderCalendar calendarIdentifier]
  -[EKFrozenReminderCalendar .cxx_destruct]
  -[EKFrozenReminderCalendar flags]
  -[EKFrozenReminderCalendar source]
  -[EKFrozenReminderCalendar UUID]
  -[EKFrozenReminderCalendar title]
  -[EKFrozenReminderCalendar uniqueIdentifier]
  -[EKFrozenReminderCalendar _account]
  -[EKFrozenReminderCalendar externalID]
  -[EKFrozenReminderCalendar allowedEntities]
  -[EKFrozenReminderCalendar symbolicColorName]
  -[EKFrozenReminderCalendar displayOrder]
  -[EKFrozenReminderCalendar sharingStatus]
  -[EKFrozenReminderCalendar isPublished]
  -[EKFrozenReminderCalendar sharedOwnerName]
  -[EKFrozenReminderCalendar sharees]
  -[EKFrozenReminderCalendar remObjectID]
  -[EKFrozenReminderCalendar initNewListInStore:]
  -[EKFrozenReminderCalendar _applyChangesToSaveRequest:error:]
  -[EKFrozenReminderCalendar colorString]
  -[EKFrozenReminderCalendar isColorDisplayOnly]
  -[EKFrozenReminderCalendar publishedURL]
  -[EKFrozenReminderCalendar hexColorStringFromREMColor:]
  -[EKFrozenReminderCalendar ekSharingStatusFromREMSharingStatus:]
  -[EKFrozenReminderCalendar frozenReminderSource]
  -[EKFrozenReminderCalendar REMColorFromEKHexColorString:]
  -[EKFrozenReminderCalendar updateListWithSaveRequest:error:]
  -[EKFrozenReminderCalendar _applyChanges:error:]


EKAttendeeChange : EKParticipantChange <EKOwnerIDProviding>
 @property  EKObjectID *ownerID

  // class methods
  +[EKAttendeeChange entityType]
  +[EKAttendeeChange fetchAttendeeChangesInStore:resultHandler:]
  +[EKAttendeeChange fetchAttendeeChangesInSource:resultHandler:]
  +[EKAttendeeChange fetchAttendeeChangesInCalendar:resultHandler:]

  // instance methods
  -[EKAttendeeChange .cxx_destruct]
  -[EKAttendeeChange ownerID]
  -[EKAttendeeChange initWithChangeProperties:]


EKPersistentRecurrenceRule : EKPersistentObject
  // class methods
  +[EKPersistentRecurrenceRule relations]
  +[EKPersistentRecurrenceRule defaultPropertiesToLoad]
  +[EKPersistentRecurrenceRule meltedClass]
  +[EKPersistentRecurrenceRule alternateUniverseClass]

  // instance methods
  -[EKPersistentRecurrenceRule copyWithZone:]
  -[EKPersistentRecurrenceRule count]
  -[EKPersistentRecurrenceRule setOwner:]
  -[EKPersistentRecurrenceRule setCount:]
  -[EKPersistentRecurrenceRule specifier]
  -[EKPersistentRecurrenceRule interval]
  -[EKPersistentRecurrenceRule setInterval:]
  -[EKPersistentRecurrenceRule endDate]
  -[EKPersistentRecurrenceRule UUID]
  -[EKPersistentRecurrenceRule setUUID:]
  -[EKPersistentRecurrenceRule owner]
  -[EKPersistentRecurrenceRule setEndDate:]
  -[EKPersistentRecurrenceRule frequency]
  -[EKPersistentRecurrenceRule setFrequency:]
  -[EKPersistentRecurrenceRule setSpecifier:]
  -[EKPersistentRecurrenceRule entityType]
  -[EKPersistentRecurrenceRule firstDayOfTheWeek]
  -[EKPersistentRecurrenceRule setFirstDayOfTheWeek:]
  -[EKPersistentRecurrenceRule cachedEndDate]


EKStructuredLocationSemanticIdentifierGenerator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKStructuredLocationSemanticIdentifierGenerator semanticIdentifierForLocationWithTitle:address:mapKitHandle:contactLabel:latitude:longitude:radius:]


EKDaemonConnection : NSObject /usr/lib/libSystem.B.dylib <CADClientInterface>
 @property  BOOL hasEverConnected
 @property  NSXPCConnection *xpcConnection
 @property  <CADInterface> *CADOperationProxy
 @property  <CADInterface> *CADOperationProxySync
 @property  <EKDaemonConnectionDelegate> *delegate
 @property  CADDatabaseInitializationOptions *initializationOptions

  // class methods
  +[EKDaemonConnection _tryRegisterNewConnection]
  +[EKDaemonConnection _unregisterConnection]
  +[EKDaemonConnection maxNumberOfOpenConnections]

  // instance methods
  -[EKDaemonConnection init]
  -[EKDaemonConnection dealloc]
  -[EKDaemonConnection delegate]
  -[EKDaemonConnection setDelegate:]
  -[EKDaemonConnection .cxx_destruct]
  -[EKDaemonConnection disconnect]
  -[EKDaemonConnection xpcConnection]
  -[EKDaemonConnection initializationOptions]
  -[EKDaemonConnection CADOperationProxySync]
  -[EKDaemonConnection addCancellableRemoteOperation:]
  -[EKDaemonConnection removeCancellableRemoteOperation:]
  -[EKDaemonConnection CADOperationProxy]
  -[EKDaemonConnection _connectToServer]
  -[EKDaemonConnection setInitializationOptions:]
  -[EKDaemonConnection setHasEverConnected:]
  -[EKDaemonConnection _createConnectionAndOperationProxyIfNeeded]
  -[EKDaemonConnection _finishAllRepliesOnServerDeath]
  -[EKDaemonConnection CADClientReceiveOccurrenceCacheSearchResults:forSearchToken:finished:]
  -[EKDaemonConnection _daemonRestarted]
  -[EKDaemonConnection cancelRemoteOperation:]
  -[EKDaemonConnection hasEverConnected]


EKPreferences : NSObject /usr/lib/libSystem.B.dylib
 @property  double travelEngineThrottlePeriod
 @property  BOOL refiringReminderAlarmsEnabled
 @property  BOOL useShortReminderSnoozeInterval
 @property  BOOL useShortReminderRefireInterval
 @property  BOOL alwaysSetArrivedAndSettledForReminders
 @property  unsigned long lastConfirmedSplashScreenVersion
 @property  BOOL bypassSplashScreen
 @property  BOOL showDeclinedEvents
 @property  BOOL alertInviteeDeclines
 @property  NSArray *deselectedCalendarIdentifiers
 @property  NSArray *deselectedCalendarSyncHashes
 @property  NSArray *deselectedCalendarSyncIdentifiers
 @property  NSArray *selectedCalendarIdentifiers

  // class methods
  +[EKPreferences shared]

  // instance methods
  -[EKPreferences init]
  -[EKPreferences .cxx_destruct]
  -[EKPreferences showDeclinedEvents]
  -[EKPreferences deselectedCalendarIdentifiers]
  -[EKPreferences setShowDeclinedEvents:]
  -[EKPreferences deselectedCalendarSyncHashes]
  -[EKPreferences bypassSplashScreen]
  -[EKPreferences lastConfirmedSplashScreenVersion]
  -[EKPreferences setLastConfirmedSplashScreenVersion:]
  -[EKPreferences _setDeselectedCalendars_iOS:]
  -[EKPreferences _setDeselectedCalendarIdentifiers:]
  -[EKPreferences _setDeselectedCalendarSyncIdentifiers:]
  -[EKPreferences _setDeselectedCalendarSyncHashes:]
  -[EKPreferences travelEngineThrottlePeriod]
  -[EKPreferences setTravelEngineThrottlePeriod:]
  -[EKPreferences refiringReminderAlarmsEnabled]
  -[EKPreferences setRefiringReminderAlarmsEnabled:]
  -[EKPreferences useShortReminderSnoozeInterval]
  -[EKPreferences setUseShortReminderSnoozeInterval:]
  -[EKPreferences useShortReminderRefireInterval]
  -[EKPreferences setUseShortReminderRefireInterval:]
  -[EKPreferences alwaysSetArrivedAndSettledForReminders]
  -[EKPreferences setAlwaysSetArrivedAndSettledForReminders:]
  -[EKPreferences setDeselectedCalendars:]
  -[EKPreferences deselectedCalendarSyncIdentifiers]
  -[EKPreferences selectedCalendarIdentifiers]
  -[EKPreferences setSelectedCalendarIdentifiers:]
  -[EKPreferences alertInviteeDeclines]
  -[EKPreferences setAlertInviteeDeclines:]


EKCalendarItemChange : EKObjectChange
 @property  EKObjectID *calendarID
 @property  EKObjectID *oldCalendarID
 @property  NSString *externalID
 @property  NSString *oldExternalID
 @property  BOOL titleChanged
 @property  BOOL locationChanged
 @property  BOOL startDateChanged
 @property  BOOL startTimezoneChanged
 @property  BOOL endDateChanged
 @property  BOOL endTimezoneChanged
 @property  BOOL notesChanged
 @property  BOOL allDayChanged

  // class methods
  +[EKCalendarItemChange entityType]
  +[EKCalendarItemChange fetchCalendarItemChangesInStore:resultHandler:]
  +[EKCalendarItemChange fetchCalendarItemChangesInSource:resultHandler:]
  +[EKCalendarItemChange fetchCalendarItemChangesInCalendar:resultHandler:]

  // instance methods
  -[EKCalendarItemChange .cxx_destruct]
  -[EKCalendarItemChange externalID]
  -[EKCalendarItemChange locationChanged]
  -[EKCalendarItemChange titleChanged]
  -[EKCalendarItemChange initWithChangeProperties:]
  -[EKCalendarItemChange calendarID]
  -[EKCalendarItemChange oldCalendarID]
  -[EKCalendarItemChange oldExternalID]
  -[EKCalendarItemChange startDateChanged]
  -[EKCalendarItemChange startTimezoneChanged]
  -[EKCalendarItemChange endDateChanged]
  -[EKCalendarItemChange endTimezoneChanged]
  -[EKCalendarItemChange notesChanged]
  -[EKCalendarItemChange allDayChanged]


EKEphemeralCacheEventStoreProvider : NSObject /usr/lib/libSystem.B.dylib <EKEventStoreProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EKEphemeralCacheEventStoreProvider .cxx_destruct]
  -[EKEphemeralCacheEventStoreProvider eventStore]
  -[EKEphemeralCacheEventStoreProvider initWithCreationBlock:]


EKNotificationChange : EKObjectChange
  // class methods
  +[EKNotificationChange entityType]
  +[EKNotificationChange fetchNotificationChangesInStore:resultHandler:]
  +[EKNotificationChange fetchNotificationChangesInSource:resultHandler:]
  +[EKNotificationChange fetchNotificationChangesInCalendar:resultHandler:]


EKSuggestedEventInfo : EKObject
 @property  NSString *opaqueKey
 @property  NSString *uniqueKey
 @property  NSString *extractionGroupIdentifier
 @property  BOOL changesAcknowledged
 @property  unsigned long changedFields
 @property  double timestamp

  // class methods
  +[EKSuggestedEventInfo frozenClass]

  // instance methods
  -[EKSuggestedEventInfo copy]
  -[EKSuggestedEventInfo timestamp]
  -[EKSuggestedEventInfo setTimestamp:]
  -[EKSuggestedEventInfo uniqueKey]
  -[EKSuggestedEventInfo opaqueKey]
  -[EKSuggestedEventInfo extractionGroupIdentifier]
  -[EKSuggestedEventInfo initWithOpaqueKey:uniqueKey:extractionGroupIdentifier:]
  -[EKSuggestedEventInfo setChangedFields:]
  -[EKSuggestedEventInfo semanticIdentifier]
  -[EKSuggestedEventInfo initWithEventStore:opaqueKey:uniqueKey:]
  -[EKSuggestedEventInfo initWithEventStore:opaqueKey:uniqueKey:extractionGroupIdentifier:]
  -[EKSuggestedEventInfo setOpaqueKey:]
  -[EKSuggestedEventInfo setUniqueKey:]
  -[EKSuggestedEventInfo setChangesAcknowledged:]
  -[EKSuggestedEventInfo setExtractionGroupIdentifier:]
  -[EKSuggestedEventInfo changedFields]
  -[EKSuggestedEventInfo changesAcknowledged]
  -[EKSuggestedEventInfo setTimestampAsDate:]
  -[EKSuggestedEventInfo timestampAsDate]
  -[EKSuggestedEventInfo initWithOpaqueKey:uniqueKey:]
  -[EKSuggestedEventInfo relatedEvent]


EKParticipantForSorting : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  EKParticipant *participant
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *cachedDisplayName
 @property  BOOL isEmail
 @property  BOOL isPhone

  // class methods
  +[EKParticipantForSorting participantForSortingWithEKParticipant:]

  // instance methods
  -[EKParticipantForSorting copyWithZone:]
  -[EKParticipantForSorting compare:]
  -[EKParticipantForSorting .cxx_destruct]
  -[EKParticipantForSorting displayName]
  -[EKParticipantForSorting firstName]
  -[EKParticipantForSorting lastName]
  -[EKParticipantForSorting setFirstName:]
  -[EKParticipantForSorting setLastName:]
  -[EKParticipantForSorting participant]
  -[EKParticipantForSorting isPhone]
  -[EKParticipantForSorting isEmail]
  -[EKParticipantForSorting setCachedDisplayName:]
  -[EKParticipantForSorting setIsEmail:]
  -[EKParticipantForSorting setIsPhone:]
  -[EKParticipantForSorting setParticipant:]
  -[EKParticipantForSorting participantIsOptional:]
  -[EKParticipantForSorting compareByEmailThenByContactName:]
  -[EKParticipantForSorting compareByContactNames:]
  -[EKParticipantForSorting cachedDisplayName]


EKReminderChange : EKCalendarItemChange
  // class methods
  +[EKReminderChange entityType]
  +[EKReminderChange fetchReminderChangesInStore:resultHandler:]
  +[EKReminderChange fetchReminderChangesInSource:resultHandler:]
  +[EKReminderChange fetchReminderChangesInCalendar:resultHandler:]


EKShareeChange : EKObjectChange <EKOwnerIDProviding>
 @property  EKObjectID *ownerID

  // class methods
  +[EKShareeChange entityType]
  +[EKShareeChange fetchShareeChangesInStore:resultHandler:]
  +[EKShareeChange fetchShareeChangesInSource:resultHandler:]
  +[EKShareeChange fetchShareeChangesInCalendar:resultHandler:]

  // instance methods
  -[EKShareeChange .cxx_destruct]
  -[EKShareeChange ownerID]
  -[EKShareeChange initWithChangeProperties:]


EKRecents : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKRecents crRecentContactsLibraryClass]
  +[EKRecents recentForContactWithAddress:name:kind:]
  +[EKRecents crRecentsDomainCalendarString]
  +[EKRecents crAddressKindEmailString]
  +[EKRecents recordRecentWithAddress:name:kind:]
  +[EKRecents crAddressKindPhoneNumberString]
  +[EKRecents recordRecentForContactWithName:emailAddress:phoneNumber:]


EKSecureKeyedArchiverSerializer : NSObject /usr/lib/libSystem.B.dylib <EKSerializer>
 @property  EKEventStore *eventStore
 @property  NSString *version

  // instance methods
  -[EKSecureKeyedArchiverSerializer .cxx_destruct]
  -[EKSecureKeyedArchiverSerializer version]
  -[EKSecureKeyedArchiverSerializer eventStore]
  -[EKSecureKeyedArchiverSerializer initWithEventStore:withVersion:]
  -[EKSecureKeyedArchiverSerializer serializeEvent:error:]
  -[EKSecureKeyedArchiverSerializer deserializeData:error:]
  -[EKSecureKeyedArchiverSerializer versionFromData:error:]


EKDirectoryResource : EKDirectoryRecord

EKChangeTrackingClientId : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *suffix
 @property  NSString *customClientId
 @property  CADChangeTrackingClientId *CADChangeTrackingClientId

  // instance methods
  -[EKChangeTrackingClientId init]
  -[EKChangeTrackingClientId .cxx_destruct]
  -[EKChangeTrackingClientId initWithSuffix:]
  -[EKChangeTrackingClientId suffix]
  -[EKChangeTrackingClientId initWithCustomClientId:suffix:]
  -[EKChangeTrackingClientId customClientId]
  -[EKChangeTrackingClientId initWithCustomClientId:]
  -[EKChangeTrackingClientId CADChangeTrackingClientId]


EKNotification : EKObject
 @property  EKObjectID *objectID
 @property  NSString *externalID
 @property  NSString *externalModificationTag
 @property  NSString *UUID
 @property  NSURL *hostURL

  // class methods
  +[EKNotification frozenClass]
  +[EKNotification knownRelationshipSingleValueKeys]

  // instance methods
  -[EKNotification calendar]
  -[EKNotification UUID]
  -[EKNotification setUUID:]
  -[EKNotification objectID]
  -[EKNotification externalID]
  -[EKNotification setExternalID:]
  -[EKNotification externalModificationTag]
  -[EKNotification setExternalModificationTag:]
  -[EKNotification hostURL]
  -[EKNotification setHostURL:]
  -[EKNotification commit:]


EKSerializableStructuredLocation : EKSerializableObject
 @property  CalLocation *calLocation

  // class methods
  +[EKSerializableStructuredLocation classesForKey]

  // instance methods
  -[EKSerializableStructuredLocation .cxx_destruct]
  -[EKSerializableStructuredLocation calLocation]
  -[EKSerializableStructuredLocation initWithStructuredLocation:]
  -[EKSerializableStructuredLocation createStructuredLocation]
  -[EKSerializableStructuredLocation setCalLocation:]


EKPersistentAttachment : EKPersistentObject
  // class methods
  +[EKPersistentAttachment relations]
  +[EKPersistentAttachment meltedClass]

  // instance methods
  -[EKPersistentAttachment copyWithZone:]
  -[EKPersistentAttachment fileSize]
  -[EKPersistentAttachment setURL:]
  -[EKPersistentAttachment UUID]
  -[EKPersistentAttachment setUUID:]
  -[EKPersistentAttachment URL]
  -[EKPersistentAttachment setFileSize:]
  -[EKPersistentAttachment fileName]
  -[EKPersistentAttachment setFileName:]
  -[EKPersistentAttachment entityType]
  -[EKPersistentAttachment fileFormat]
  -[EKPersistentAttachment URLForPendingFileCopy]
  -[EKPersistentAttachment setFileFormat:]
  -[EKPersistentAttachment semanticIdentifier]
  -[EKPersistentAttachment isBinary]
  -[EKPersistentAttachment setIsBinary:]
  -[EKPersistentAttachment localRelativePath]
  -[EKPersistentAttachment setLocalRelativePath:]
  -[EKPersistentAttachment XPropertiesData]
  -[EKPersistentAttachment setXPropertiesData:]
  -[EKPersistentAttachment externalId]
  -[EKPersistentAttachment setExternalId:]
  -[EKPersistentAttachment setURLForPendingFileCopy:]


EKAvailabilitySpan : NSObject /usr/lib/libSystem.B.dylib <CalDateRangeProtocol>
 @property  long long type
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EKAvailabilitySpan init]
  -[EKAvailabilitySpan type]
  -[EKAvailabilitySpan .cxx_destruct]
  -[EKAvailabilitySpan startDate]
  -[EKAvailabilitySpan endDate]
  -[EKAvailabilitySpan setStartDate:]
  -[EKAvailabilitySpan setEndDate:]
  -[EKAvailabilitySpan initWithStartDate:endDate:type:]


EKCalendarItem : EKObject
 @property  NSData *structuredData
 @property  NSData *localStructuredData
 @property  NSString *calendarItemIdentifier
 @property  NSArray *attachments
 @property  NSString *UUID
 @property  EKCalendar *calendar
 @property  NSString *calendarItemExternalIdentifier
 @property  NSString *title
 @property  NSString *location
 @property  NSString *notes
 @property  NSURL *URL
 @property  NSDate *lastModifiedDate
 @property  NSDate *creationDate
 @property  NSTimeZone *timeZone
 @property  BOOL hasAlarms
 @property  BOOL hasRecurrenceRules
 @property  BOOL hasAttendees
 @property  BOOL hasNotes
 @property  NSArray *attendees
 @property  NSArray *alarms
 @property  NSArray *recurrenceRules

  // class methods
  +[EKCalendarItem knownRelationshipSingleValueKeys]
  +[EKCalendarItem knownRelationshipMultiValueKeys]
  +[EKCalendarItem timeZoneFromTimeZoneName:withFloatingTimeZone:]
  +[EKCalendarItem timeZoneNameFromTimeZone:]
  +[EKCalendarItem _shouldDeleteAndAddForMoveFromCalendar:toCalendar:]
  +[EKCalendarItem knownRelationshipWeakKeys]

  // instance methods
  -[EKCalendarItem setTimeZone:]
  -[EKCalendarItem calendar]
  -[EKCalendarItem setCalendar:]
  -[EKCalendarItem timeZone]
  -[EKCalendarItem attachments]
  -[EKCalendarItem setURL:]
  -[EKCalendarItem setAttachments:]
  -[EKCalendarItem UUID]
  -[EKCalendarItem URL]
  -[EKCalendarItem title]
  -[EKCalendarItem setTitle:]
  -[EKCalendarItem priority]
  -[EKCalendarItem uniqueID]
  -[EKCalendarItem setPriority:]
  -[EKCalendarItem action]
  -[EKCalendarItem sequenceNumber]
  -[EKCalendarItem location]
  -[EKCalendarItem creationDate]
  -[EKCalendarItem setCreationDate:]
  -[EKCalendarItem validate:]
  -[EKCalendarItem clientLocation]
  -[EKCalendarItem setLocation:]
  -[EKCalendarItem isFloating]
  -[EKCalendarItem setAction:]
  -[EKCalendarItem appLink]
  -[EKCalendarItem setAppLink:]
  -[EKCalendarItem isEditable]
  -[EKCalendarItem uniqueId]
  -[EKCalendarItem willSave]
  -[EKCalendarItem contactIdentifiers]
  -[EKCalendarItem setContactIdentifiers:]
  -[EKCalendarItem lastModifiedDate]
  -[EKCalendarItem setUniqueID:]
  -[EKCalendarItem setLastModifiedDate:]
  -[EKCalendarItem organizer]
  -[EKCalendarItem externalID]
  -[EKCalendarItem setExternalID:]
  -[EKCalendarItem externalModificationTag]
  -[EKCalendarItem setExternalModificationTag:]
  -[EKCalendarItem originalItem]
  -[EKCalendarItem setOriginalItem:]
  -[EKCalendarItem setAllDay:]
  -[EKCalendarItem isAllDay]
  -[EKCalendarItem notes]
  -[EKCalendarItem setNotes:]
  -[EKCalendarItem calendarItemIdentifier]
  -[EKCalendarItem alarms]
  -[EKCalendarItem setAlarms:]
  -[EKCalendarItem preferredLocation]
  -[EKCalendarItem startTimeZone]
  -[EKCalendarItem endTimeZone]
  -[EKCalendarItem setStartTimeZone:]
  -[EKCalendarItem setEndTimeZone:]
  -[EKCalendarItem startDateForRecurrence]
  -[EKCalendarItem attendees]
  -[EKCalendarItem hasAttendees]
  -[EKCalendarItem calendarItemExternalIdentifier]
  -[EKCalendarItem isSelfOrganized]
  -[EKCalendarItem removeAttendee:]
  -[EKCalendarItem isExternallyOrganizedInvitation]
  -[EKCalendarItem setAttendees:]
  -[EKCalendarItem allowsAttendeesModifications]
  -[EKCalendarItem addAttendee:]
  -[EKCalendarItem hasRecurrenceRules]
  -[EKCalendarItem selfAttendee]
  -[EKCalendarItem structuredLocation]
  -[EKCalendarItem travelStartLocation]
  -[EKCalendarItem setTravelStartLocation:]
  -[EKCalendarItem actionsState]
  -[EKCalendarItem _removeAttachment:]
  -[EKCalendarItem sharedItemModifiedByDisplayName]
  -[EKCalendarItem sharedItemModifiedDate]
  -[EKCalendarItem sharedItemCreatedByDisplayName]
  -[EKCalendarItem sharedItemCreatedDate]
  -[EKCalendarItem sharedItemModifiedByAddress]
  -[EKCalendarItem sharedItemCreatedByAddress]
  -[EKCalendarItem structuredLocationWithoutPrediction]
  -[EKCalendarItem _hadAttendees]
  -[EKCalendarItem setStructuredLocation:]
  -[EKCalendarItem sortedAlarms]
  -[EKCalendarItem indexForAlarm:]
  -[EKCalendarItem addAlarm:]
  -[EKCalendarItem localCustomObjectForKey:]
  -[EKCalendarItem _addAttachment:]
  -[EKCalendarItem recurrenceRules]
  -[EKCalendarItem selfParticipantStatus]
  -[EKCalendarItem isSelfOrganizedInvitation]
  -[EKCalendarItem removeAlarm:]
  -[EKCalendarItem customObjectForKey:]
  -[EKCalendarItem setCustomObject:forKey:]
  -[EKCalendarItem canMoveToCalendar:fromCalendar:error:]
  -[EKCalendarItem setUniqueId:]
  -[EKCalendarItem detachedItems]
  -[EKCalendarItem requiresDetach]
  -[EKCalendarItem allowsSpansOtherThanThisEvent]
  -[EKCalendarItem setClientLocation:]
  -[EKCalendarItem allowsRecurrenceModifications]
  -[EKCalendarItem setRecurrenceRules:]
  -[EKCalendarItem addRecurrenceRule:]
  -[EKCalendarItem exportToICS]
  -[EKCalendarItem removeRecurrenceRule:]
  -[EKCalendarItem _validateDeletable:]
  -[EKCalendarItem localStructuredData]
  -[EKCalendarItem structuredData]
  -[EKCalendarItem _structuredDataDictionaryFromData:]
  -[EKCalendarItem _dataFromStructuredDataDictionary:]
  -[EKCalendarItem setLocalStructuredData:]
  -[EKCalendarItem setStructuredData:]
  -[EKCalendarItem _customObjectForKey:local:]
  -[EKCalendarItem _setCustomObject:forKey:local:]
  -[EKCalendarItem setLocalCustomObject:forKey:]
  -[EKCalendarItem allAlarms]
  -[EKCalendarItem externalURI]
  -[EKCalendarItem exceptionDates]
  -[EKCalendarItem externalScheduleID]
  -[EKCalendarItem setExternalScheduleID:]
  -[EKCalendarItem setStructuredLocationWithoutPrediction:]
  -[EKCalendarItem _updateDefaultAlarms]
  -[EKCalendarItem appLinkData]
  -[EKCalendarItem setAppLinkData:]
  -[EKCalendarItem defaultAlarms]
  -[EKCalendarItem defaultAlarmWasDeleted]
  -[EKCalendarItem _removeDefaultAlarms]
  -[EKCalendarItem _addDefaultAlarms]
  -[EKCalendarItem startTimeZoneName]
  -[EKCalendarItem setStartTimeZoneName:]
  -[EKCalendarItem endTimeZoneName]
  -[EKCalendarItem setEndTimeZoneName:]
  -[EKCalendarItem _isExternallyOrganizedInvitationWithAttendees:]
  -[EKCalendarItem isOrganizedBySharedCalendarOwner]
  -[EKCalendarItem externalData]
  -[EKCalendarItem _excludeAlarmDueToConnectionTrigger:]
  -[EKCalendarItem findOriginalAlarmStartingWith:]
  -[EKCalendarItem attendeesRaw]
  -[EKCalendarItem filterAttendeesPendingDeletion:]
  -[EKCalendarItem _setSelfAttendee:]
  -[EKCalendarItem _removeAttendee:]
  -[EKCalendarItem selfParticipantStatusRaw]
  -[EKCalendarItem sharedItemCreatedByFirstName]
  -[EKCalendarItem sharedItemCreatedByLastName]
  -[EKCalendarItem sharedItemCreatedTimeZoneName]
  -[EKCalendarItem setSharedItemCreatedTimeZoneName:]
  -[EKCalendarItem sharedItemModifiedByFirstName]
  -[EKCalendarItem sharedItemModifiedByLastName]
  -[EKCalendarItem sharedItemModifiedTimeZoneName]
  -[EKCalendarItem setSharedItemModifiedTimeZoneName:]
  -[EKCalendarItem _moveToCalendar:forCommittingItem:]
  -[EKCalendarItem _recursivelyPerformBlockOnSelfAndDetachedItems:forCommittingItem:]
  -[EKCalendarItem _generateNewUniqueID]
  -[EKCalendarItem _adjustAfterRebaseForMovingFromOldSource:toNewSource:committingItem:]
  -[EKCalendarItem _clearFieldsAfterMovingToNewCalendarOnSameSource]
  -[EKCalendarItem _setCalendarRecursively:forCommittingItem:]
  -[EKCalendarItem setExternalData:]
  -[EKCalendarItem _deletePersistentItemAndDetachedItems:forCommittingItem:]
  -[EKCalendarItem ekExceptionDates]
  -[EKCalendarItem setEkExceptionDates:]
  -[EKCalendarItem setDetachedItems:]
  -[EKCalendarItem isOnlyAlarmAcknowledgedPropertyDirty]
  -[EKCalendarItem modifiedProperties]
  -[EKCalendarItem setModifiedProperties:]
  -[EKCalendarItem _updateHasRecurrenceRulesIfNeeded]
  -[EKCalendarItem _updateHasAttendeesIfNeeded]
  -[EKCalendarItem _updateHasNotesIfNeeded]
  -[EKCalendarItem setCalendarItemIdentifier:]
  -[EKCalendarItem hasNotes]
  -[EKCalendarItem calendarScale]
  -[EKCalendarItem setCalendarScale:]
  -[EKCalendarItem setDefaultAlarmWasDeleted:]
  -[EKCalendarItem allowsCalendarModifications]
  -[EKCalendarItem allowsAlarmModifications]
  -[EKCalendarItem hasAlarms]
  -[EKCalendarItem setAllAlarms:]
  -[EKCalendarItem snoozeAlarm:withTimeIntervalFromNow:]
  -[EKCalendarItem snoozeAlarm:withLocation:proximity:]
  -[EKCalendarItem isAlarmAcknowledgedPropertyDirty]
  -[EKCalendarItem removeAcknowledgedSnoozedAlarms]
  -[EKCalendarItem removeAllSnoozedAlarms]
  -[EKCalendarItem _hadRecurrenceRules]
  -[EKCalendarItem setSelfAttendee:]
  -[EKCalendarItem attendeeForMe]
  -[EKCalendarItem participantMatchingContact:]
  -[EKCalendarItem attendeeMatchingEmailAddress:]
  -[EKCalendarItem setOrganizer:]
  -[EKCalendarItem setSharedItemCreatedByDisplayName:]
  -[EKCalendarItem setSharedItemCreatedByAddress:]
  -[EKCalendarItem setSharedItemCreatedByFirstName:]
  -[EKCalendarItem setSharedItemCreatedByLastName:]
  -[EKCalendarItem setSharedItemCreatedDate:]
  -[EKCalendarItem sharedItemCreatedTimeZone]
  -[EKCalendarItem setSharedItemCreatedTimeZone:]
  -[EKCalendarItem setSharedItemModifiedByDisplayName:]
  -[EKCalendarItem setSharedItemModifiedByAddress:]
  -[EKCalendarItem setSharedItemModifiedByFirstName:]
  -[EKCalendarItem setSharedItemModifiedByLastName:]
  -[EKCalendarItem setSharedItemModifiedDate:]
  -[EKCalendarItem sharedItemModifiedTimeZone]
  -[EKCalendarItem setSharedItemModifiedTimeZone:]
  -[EKCalendarItem canMoveToCalendar:error:]
  -[EKCalendarItem moveToCalendar:]
  -[EKCalendarItem _addDetachedItem:]
  -[EKCalendarItem _removeDetachedItem:]
  -[EKCalendarItem _deleteSelfAndDetached]
  -[EKCalendarItem setExceptionDates:]
  -[EKCalendarItem _addExceptionDate:]
  -[EKCalendarItem _removeExceptionDate:]
  -[EKCalendarItem updateWithAppLink:usedSelectedText:]
  -[EKCalendarItem _updateModifiedAlarmByAcknowledging]
  -[EKCalendarItem _willCommit]


EKAlarmSemanticIdentifierGenerator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKAlarmSemanticIdentifierGenerator _stringForAlarmProximity:]
  +[EKAlarmSemanticIdentifierGenerator semanticIdentifierForAlarmIsDefault:absoluteDate:relativeOffset:locationSemanticIdentifier:proximity:]


EKOccurrenceCacheLocationSearch : EKOccurrenceCacheSearch
  // instance methods
  -[EKOccurrenceCacheLocationSearch performSearchOperation:inCalendars:withEventStore:andSearchTerm:]


EKTimedEventStorePurger : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSObject<OS_dispatch_source> *timer
 @property  double internalTimeout
 @property  @? internalCreationBlock
 @property  @? internalChangedBlock
 @property  BOOL ignoreLowLevelDatabaseChangedNotifications
 @property  BOOL internalPurgingAllowed
 @property  EKEventStore *internalStore
 @property  @? creationBlock
 @property  @? changedBlock
 @property  BOOL purgingAllowed
 @property  double timeout

  // instance methods
  -[EKTimedEventStorePurger init]
  -[EKTimedEventStorePurger dealloc]
  -[EKTimedEventStorePurger .cxx_destruct]
  -[EKTimedEventStorePurger callbackQueue]
  -[EKTimedEventStorePurger timer]
  -[EKTimedEventStorePurger setTimer:]
  -[EKTimedEventStorePurger timeout]
  -[EKTimedEventStorePurger setTimeout:]
  -[EKTimedEventStorePurger workQueue]
  -[EKTimedEventStorePurger setCallbackQueue:]
  -[EKTimedEventStorePurger setWorkQueue:]
  -[EKTimedEventStorePurger setCreationBlock:]
  -[EKTimedEventStorePurger creationBlock]
  -[EKTimedEventStorePurger setPurgingAllowed:]
  -[EKTimedEventStorePurger acquireCachedEventStoreOrCreate:]
  -[EKTimedEventStorePurger _addPersistentNotificationObservers]
  -[EKTimedEventStorePurger _uninstallTimer]
  -[EKTimedEventStorePurger _removePersistentNotificationObservers]
  -[EKTimedEventStorePurger _removeTransientEventStoreChangeObserver]
  -[EKTimedEventStorePurger internalTimeout]
  -[EKTimedEventStorePurger setInternalTimeout:]
  -[EKTimedEventStorePurger _resetIdleTimer]
  -[EKTimedEventStorePurger setInternalStore:]
  -[EKTimedEventStorePurger setInternalCreationBlock:]
  -[EKTimedEventStorePurger internalCreationBlock]
  -[EKTimedEventStorePurger setInternalChangedBlock:]
  -[EKTimedEventStorePurger internalChangedBlock]
  -[EKTimedEventStorePurger internalPurgingAllowed]
  -[EKTimedEventStorePurger setInternalPurgingAllowed:]
  -[EKTimedEventStorePurger internalStore]
  -[EKTimedEventStorePurger _eventStoreChangedNotification:]
  -[EKTimedEventStorePurger setIgnoreLowLevelDatabaseChangedNotifications:]
  -[EKTimedEventStorePurger ignoreLowLevelDatabaseChangedNotifications]
  -[EKTimedEventStorePurger _fireChangedBlock]
  -[EKTimedEventStorePurger setChangedBlock:]
  -[EKTimedEventStorePurger changedBlock]
  -[EKTimedEventStorePurger purgingAllowed]
  -[EKTimedEventStorePurger _databaseChangedExternally]


EKSourceConstraints : NSObject /usr/lib/libSystem.B.dylib
 @property  int maxAlarmsAllowed
 @property  int maxRecurrencesAllowed
 @property  BOOL supportsAlarmTriggerIntervals
 @property  BOOL supportsAlarmTriggerDates
 @property  BOOL supportsAlarmsTriggeringAfterStartDate
 @property  BOOL snoozeAlarmRequiresDetach
 @property  BOOL organizerCanSeeAttendeeStatuses
 @property  BOOL inviteesCanSeeAttendeeStatuses
 @property  BOOL statusesAreAccurate
 @property  BOOL supportsIncomingInvitations
 @property  BOOL supportsOutgoingInvitations
 @property  BOOL requiresOutgoingInvitationsInDefaultCalendar
 @property  BOOL supportsInvitationModifications
 @property  BOOL supportsEventForwarding
 @property  BOOL supportsResponseComments
 @property  BOOL deliverySourceOrExternalIDRequiredForResponse
 @property  BOOL proposedStatusRequiredForResponse
 @property  BOOL declinedStatusChangeRequiresNoPendingStatus
 @property  BOOL eventDurationConstrainedToRecurrenceInterval
 @property  BOOL alarmTriggerIntervalConstrainedToRecurrenceInterval
 @property  BOOL occurrencesMustOccurOnSeparateDays
 @property  BOOL futureStartDateLimitedToOccurrenceCacheBounds
 @property  BOOL supportsRecurrencesOnDetachedEvents
 @property  BOOL recurrencesShouldPinToMonthDays
 @property  BOOL requiresAttendeeSearchInSingleAccount
 @property  BOOL mustAcknowledgeMasterEvent
 @property  BOOL canSetAvailability
 @property  BOOL eventAvailabilityLimited
 @property  BOOL requiresMSFormattedUID
 @property  BOOL shouldCancelDeletedEvents
 @property  BOOL shouldDeclineDeletedInvitations
 @property  BOOL supportsStructuredLocations
 @property  BOOL supportsReminderActions
 @property  BOOL supportsReminderLocations
 @property  BOOL supportsAlarmProximity
 @property  BOOL allowsCalendarAddDeleteModify
 @property  BOOL allowsTasks
 @property  BOOL allowsEvents
 @property  BOOL supportsURLField
 @property  BOOL supportsAllDayDueDates
 @property  BOOL supportsSharedCalendars
 @property  BOOL isFacebook
 @property  BOOL supportsPrivateEvents
 @property  BOOL prohibitsPrivateEventsWithAttendees
 @property  BOOL requiresSamePrivacyLevelAcrossRecurrenceSeries
 @property  BOOL supportsAvailabilityRequests
 @property  BOOL supportsIgnoringEventsInAvailabilityRequests
 @property  BOOL supportsLocationDirectorySearches
 @property  BOOL supportsInboxAvailability
 @property  BOOL recurrenceSeriesMustIncludeMoreThanFirstOccurrence
 @property  BOOL prohibitsMultipleMonthsInYearlyRecurrence
 @property  BOOL prohibitsMultipleDaysInMonthlyRecurrence
 @property  BOOL prohibitsYearlyRecurrenceInterval
 @property  BOOL requiresOccurrencesConformToRecurrenceRule
 @property  BOOL prohibitsDetachmentOnCommentChange
 @property  BOOL allowsProposeNewTime
 @property  BOOL prohibitsICSImport
 @property  BOOL supportsAutoGeocodingStructuredLocations
 @property  BOOL supportsJunkReporting
 @property  BOOL supportsPhoneNumbers
 @property  BOOL attendeesUseDeletedByOrganizerStatus
 @property  BOOL prohibitsSlicingEventsWithAttendees
 @property  BOOL supportsSubscribedCalendars
 @property  BOOL supportsAttachments
 @property  BOOL requiresOpeningAttachmentAsLink
 @property  BOOL shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars
 @property  BOOL supportsDelegation
 @property  BOOL supportsDelegateEnumeration
 @property  BOOL supportsRecurrenceSplit

  // instance methods
  -[EKSourceConstraints init]
  -[EKSourceConstraints futureStartDateLimitedToOccurrenceCacheBounds]
  -[EKSourceConstraints prohibitsMultipleDaysInMonthlyRecurrence]
  -[EKSourceConstraints setProhibitsMultipleDaysInMonthlyRecurrence:]
  -[EKSourceConstraints prohibitsMultipleMonthsInYearlyRecurrence]
  -[EKSourceConstraints setProhibitsMultipleMonthsInYearlyRecurrence:]
  -[EKSourceConstraints prohibitsYearlyRecurrenceInterval]
  -[EKSourceConstraints setProhibitsYearlyRecurrenceInterval:]
  -[EKSourceConstraints organizerCanSeeAttendeeStatuses]
  -[EKSourceConstraints inviteesCanSeeAttendeeStatuses]
  -[EKSourceConstraints maxAlarmsAllowed]
  -[EKSourceConstraints supportsAlarmTriggerIntervals]
  -[EKSourceConstraints supportsInvitationModifications]
  -[EKSourceConstraints supportsSharedCalendars]
  -[EKSourceConstraints statusesAreAccurate]
  -[EKSourceConstraints supportsResponseComments]
  -[EKSourceConstraints allowsCalendarAddDeleteModify]
  -[EKSourceConstraints supportsPhoneNumbers]
  -[EKSourceConstraints supportsLocationDirectorySearches]
  -[EKSourceConstraints supportsAvailabilityRequests]
  -[EKSourceConstraints supportsPrivateEvents]
  -[EKSourceConstraints supportsURLField]
  -[EKSourceConstraints prohibitsPrivateEventsWithAttendees]
  -[EKSourceConstraints supportsOutgoingInvitations]
  -[EKSourceConstraints requiresOutgoingInvitationsInDefaultCalendar]
  -[EKSourceConstraints prohibitsSlicingEventsWithAttendees]
  -[EKSourceConstraints supportsStructuredLocations]
  -[EKSourceConstraints supportsAlarmsTriggeringAfterStartDate]
  -[EKSourceConstraints isFacebook]
  -[EKSourceConstraints prohibitsICSImport]
  -[EKSourceConstraints requiresOpeningAttachmentAsLink]
  -[EKSourceConstraints allowsEvents]
  -[EKSourceConstraints supportsIncomingInvitations]
  -[EKSourceConstraints supportsIgnoringEventsInAvailabilityRequests]
  -[EKSourceConstraints supportsDelegation]
  -[EKSourceConstraints allowsTasks]
  -[EKSourceConstraints maxRecurrencesAllowed]
  -[EKSourceConstraints eventDurationConstrainedToRecurrenceInterval]
  -[EKSourceConstraints alarmTriggerIntervalConstrainedToRecurrenceInterval]
  -[EKSourceConstraints supportsAttachments]
  -[EKSourceConstraints supportsReminderActions]
  -[EKSourceConstraints setSupportsReminderLocations:]
  -[EKSourceConstraints setSupportsAlarmProximity:]
  -[EKSourceConstraints setSupportsStructuredLocations:]
  -[EKSourceConstraints setSupportsAttachments:]
  -[EKSourceConstraints setAllowsEvents:]
  -[EKSourceConstraints setAllowsCalendarAddDeleteModify:]
  -[EKSourceConstraints setSupportsReminderActions:]
  -[EKSourceConstraints recurrencesShouldPinToMonthDays]
  -[EKSourceConstraints supportsAlarmTriggerDates]
  -[EKSourceConstraints shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars]
  -[EKSourceConstraints initWithCDBSourceConstraintFlags:]
  -[EKSourceConstraints setMaxAlarmsAllowed:]
  -[EKSourceConstraints setMaxRecurrencesAllowed:]
  -[EKSourceConstraints setSupportsAlarmTriggerIntervals:]
  -[EKSourceConstraints setSupportsAlarmTriggerDates:]
  -[EKSourceConstraints setSupportsAlarmsTriggeringAfterStartDate:]
  -[EKSourceConstraints snoozeAlarmRequiresDetach]
  -[EKSourceConstraints setSnoozeAlarmRequiresDetach:]
  -[EKSourceConstraints setOrganizerCanSeeAttendeeStatuses:]
  -[EKSourceConstraints setInviteesCanSeeAttendeeStatuses:]
  -[EKSourceConstraints setStatusesAreAccurate:]
  -[EKSourceConstraints setSupportsIncomingInvitations:]
  -[EKSourceConstraints setSupportsOutgoingInvitations:]
  -[EKSourceConstraints setRequiresOutgoingInvitationsInDefaultCalendar:]
  -[EKSourceConstraints setSupportsInvitationModifications:]
  -[EKSourceConstraints supportsEventForwarding]
  -[EKSourceConstraints setSupportsEventForwarding:]
  -[EKSourceConstraints setSupportsResponseComments:]
  -[EKSourceConstraints deliverySourceOrExternalIDRequiredForResponse]
  -[EKSourceConstraints setDeliverySourceOrExternalIDRequiredForResponse:]
  -[EKSourceConstraints proposedStatusRequiredForResponse]
  -[EKSourceConstraints setProposedStatusRequiredForResponse:]
  -[EKSourceConstraints declinedStatusChangeRequiresNoPendingStatus]
  -[EKSourceConstraints setDeclinedStatusChangeRequiresNoPendingStatus:]
  -[EKSourceConstraints setEventDurationConstrainedToRecurrenceInterval:]
  -[EKSourceConstraints setAlarmTriggerIntervalConstrainedToRecurrenceInterval:]
  -[EKSourceConstraints occurrencesMustOccurOnSeparateDays]
  -[EKSourceConstraints setOccurrencesMustOccurOnSeparateDays:]
  -[EKSourceConstraints setFutureStartDateLimitedToOccurrenceCacheBounds:]
  -[EKSourceConstraints supportsRecurrencesOnDetachedEvents]
  -[EKSourceConstraints setSupportsRecurrencesOnDetachedEvents:]
  -[EKSourceConstraints setRecurrencesShouldPinToMonthDays:]
  -[EKSourceConstraints requiresAttendeeSearchInSingleAccount]
  -[EKSourceConstraints setRequiresAttendeeSearchInSingleAccount:]
  -[EKSourceConstraints mustAcknowledgeMasterEvent]
  -[EKSourceConstraints setMustAcknowledgeMasterEvent:]
  -[EKSourceConstraints canSetAvailability]
  -[EKSourceConstraints setCanSetAvailability:]
  -[EKSourceConstraints eventAvailabilityLimited]
  -[EKSourceConstraints setEventAvailabilityLimited:]
  -[EKSourceConstraints requiresMSFormattedUID]
  -[EKSourceConstraints setRequiresMSFormattedUID:]
  -[EKSourceConstraints shouldCancelDeletedEvents]
  -[EKSourceConstraints setShouldCancelDeletedEvents:]
  -[EKSourceConstraints shouldDeclineDeletedInvitations]
  -[EKSourceConstraints setShouldDeclineDeletedInvitations:]
  -[EKSourceConstraints supportsReminderLocations]
  -[EKSourceConstraints supportsAlarmProximity]
  -[EKSourceConstraints setAllowsTasks:]
  -[EKSourceConstraints setSupportsURLField:]
  -[EKSourceConstraints supportsAllDayDueDates]
  -[EKSourceConstraints setSupportsAllDayDueDates:]
  -[EKSourceConstraints setSupportsSharedCalendars:]
  -[EKSourceConstraints setIsFacebook:]
  -[EKSourceConstraints recurrenceSeriesMustIncludeMoreThanFirstOccurrence]
  -[EKSourceConstraints setRecurrenceSeriesMustIncludeMoreThanFirstOccurrence:]
  -[EKSourceConstraints setSupportsPrivateEvents:]
  -[EKSourceConstraints setProhibitsPrivateEventsWithAttendees:]
  -[EKSourceConstraints setSupportsAvailabilityRequests:]
  -[EKSourceConstraints setSupportsIgnoringEventsInAvailabilityRequests:]
  -[EKSourceConstraints setSupportsLocationDirectorySearches:]
  -[EKSourceConstraints requiresSamePrivacyLevelAcrossRecurrenceSeries]
  -[EKSourceConstraints setRequiresSamePrivacyLevelAcrossRecurrenceSeries:]
  -[EKSourceConstraints supportsInboxAvailability]
  -[EKSourceConstraints setSupportsInboxAvailability:]
  -[EKSourceConstraints requiresOccurrencesConformToRecurrenceRule]
  -[EKSourceConstraints setRequiresOccurrencesConformToRecurrenceRule:]
  -[EKSourceConstraints prohibitsDetachmentOnCommentChange]
  -[EKSourceConstraints setProhibitsDetachmentOnCommentChange:]
  -[EKSourceConstraints allowsProposeNewTime]
  -[EKSourceConstraints setAllowsProposeNewTime:]
  -[EKSourceConstraints setProhibitsICSImport:]
  -[EKSourceConstraints supportsAutoGeocodingStructuredLocations]
  -[EKSourceConstraints setSupportsAutoGeocodingStructuredLocations:]
  -[EKSourceConstraints supportsJunkReporting]
  -[EKSourceConstraints setSupportsJunkReporting:]
  -[EKSourceConstraints setSupportsPhoneNumbers:]
  -[EKSourceConstraints attendeesUseDeletedByOrganizerStatus]
  -[EKSourceConstraints setAttendeesUseDeletedByOrganizerStatus:]
  -[EKSourceConstraints setProhibitsSlicingEventsWithAttendees:]
  -[EKSourceConstraints supportsSubscribedCalendars]
  -[EKSourceConstraints setSupportsSubscribedCalendars:]
  -[EKSourceConstraints setRequiresOpeningAttachmentAsLink:]
  -[EKSourceConstraints setShouldUseDeleteAndAddInsteadOfMoveBetweenCalendars:]
  -[EKSourceConstraints supportsFloatingTimeZone]
  -[EKSourceConstraints setSupportsFloatingTimeZone:]
  -[EKSourceConstraints prohibitsUsingEventOrganizerEmailWhenComposingMail]
  -[EKSourceConstraints setProhibitsUsingEventOrganizerEmailWhenComposingMail:]
  -[EKSourceConstraints setSupportsDelegation:]
  -[EKSourceConstraints supportsDelegateEnumeration]
  -[EKSourceConstraints setSupportsDelegateEnumeration:]
  -[EKSourceConstraints supportsRecurrenceSplit]
  -[EKSourceConstraints setSupportsRecurrenceSplit:]


EKDirectoryLocation : EKDirectoryRecord

EKPersistentLocation : EKPersistentObject
  // class methods
  +[EKPersistentLocation relations]
  +[EKPersistentLocation defaultPropertiesToLoad]
  +[EKPersistentLocation meltedClass]
  +[EKPersistentLocation alternateUniverseClass]

  // instance methods
  -[EKPersistentLocation copyWithZone:]
  -[EKPersistentLocation address]
  -[EKPersistentLocation title]
  -[EKPersistentLocation setTitle:]
  -[EKPersistentLocation radius]
  -[EKPersistentLocation setRadius:]
  -[EKPersistentLocation latitude]
  -[EKPersistentLocation longitude]
  -[EKPersistentLocation setLongitude:]
  -[EKPersistentLocation setLatitude:]
  -[EKPersistentLocation referenceFrame]
  -[EKPersistentLocation setReferenceFrame:]
  -[EKPersistentLocation setAddress:]
  -[EKPersistentLocation entityType]
  -[EKPersistentLocation contactLabel]
  -[EKPersistentLocation setContactLabel:]
  -[EKPersistentLocation setRouting:]
  -[EKPersistentLocation setMapKitHandle:]
  -[EKPersistentLocation mapKitHandle]
  -[EKPersistentLocation routing]
  -[EKPersistentLocation derivedFrom]
  -[EKPersistentLocation setDerivedFrom:]
  -[EKPersistentLocation semanticIdentifier]
  -[EKPersistentLocation calendarItemOwner]
  -[EKPersistentLocation setCalendarItemOwner:]
  -[EKPersistentLocation setAlarmOwner:]
  -[EKPersistentLocation alarmOwner]


EKParticipantToContactMatcher : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *contacts
 @property  NSSet *contactEmailAddresses
 @property  NSSet *contactNameComponents
 @property  NSSet *contactCompanyNames

  // class methods
  +[EKParticipantToContactMatcher _nameComponentsForContact:reverse:]
  +[EKParticipantToContactMatcher _nameComponentsWithGivenName:familyName:]
  +[EKParticipantToContactMatcher _allParticipantsOnItem:]

  // instance methods
  -[EKParticipantToContactMatcher .cxx_destruct]
  -[EKParticipantToContactMatcher contacts]
  -[EKParticipantToContactMatcher setContacts:]
  -[EKParticipantToContactMatcher initWithContacts:]
  -[EKParticipantToContactMatcher matchingParticipantsFromItem:]
  -[EKParticipantToContactMatcher _cacheContactData]
  -[EKParticipantToContactMatcher setContactEmailAddresses:]
  -[EKParticipantToContactMatcher setContactNameComponents:]
  -[EKParticipantToContactMatcher setContactCompanyNames:]
  -[EKParticipantToContactMatcher anyContactMatchesAnyParticipant:]
  -[EKParticipantToContactMatcher anyContactMatchesParticipant:]
  -[EKParticipantToContactMatcher matchingParticipantsFromParticipants:]
  -[EKParticipantToContactMatcher contactEmailAddresses]
  -[EKParticipantToContactMatcher contactNameComponents]
  -[EKParticipantToContactMatcher contactCompanyNames]
  -[EKParticipantToContactMatcher anyContactMatchesAnyParticipantFromItem:]


EKJunkInvitationProtocol_Shared : EKObject
  // class methods
  +[EKJunkInvitationProtocol_Shared junkStatusForInvitation:]
  +[EKJunkInvitationProtocol_Shared junkStatusForInvitation:withReputationStore:]


EKNotificationCollection : EKObject
 @property  EKSource *source
 @property  NSSet *notifications

  // class methods
  +[EKNotificationCollection frozenClass]
  +[EKNotificationCollection knownRelationshipMultiValueKeys]
  +[EKNotificationCollection isWeakRelationship]

  // instance methods
  -[EKNotificationCollection initWithOptions:]
  -[EKNotificationCollection _flags]
  -[EKNotificationCollection source]
  -[EKNotificationCollection validate:]
  -[EKNotificationCollection notifications]
  -[EKNotificationCollection setNotifications:]
  -[EKNotificationCollection _setSource:]
  -[EKNotificationCollection addNotification:]
  -[EKNotificationCollection commit:]
  -[EKNotificationCollection _setExternalID:]
  -[EKNotificationCollection _setExternalIDTag:]
  -[EKNotificationCollection _setNotificationsCollectionFlag]
  -[EKNotificationCollection _hasNotificationsCollectionFlag]
  -[EKNotificationCollection _setFlags:]
  -[EKNotificationCollection removeNotification:]


EKInviteeAlternativeTimeSearcher : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSObject<OS_dispatch_queue> *processingQueue
 @property  NSDate *internalOriginalStartDate
 @property  NSDate *internalOriginalEndDate
 @property  NSDate *originalRangeStartDate
 @property  NSMutableArray *internalProposedStarts
 @property  EKSource *source
 @property  NSString *ignoredEventID
 @property  NSOperationQueue *availabilityRequestsQueue
 @property  NSMutableDictionary *participantAddressesToParticipants
 @property  NSString *organizerAddress
 @property  BOOL availabilityRequestInProgress
 @property  NSDate *nextAvailabilityRangeStartDate
 @property  double availabilitySearchDurationMultiplier
 @property  unsigned long remainingSearchAttempts
 @property  NSMutableArray *leftoverSpans
 @property  NSMutableArray *internalTimesWhenAllAttendeesCanAttend
 @property  NSMutableArray *internalTimesWhenSomeAttendeesCanAttend
 @property  NSMutableArray *internalProposedTimes
 @property  NSMutableArray *internalOriginalConflictedParticipants
 @property  BOOL internalSearchingForMoreTimesWhenAllAttendeesCanAttend
 @property  BOOL internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
 @property  @? stateChanged
 @property  NSDate *originalStartDate
 @property  NSDate *originalEndDate
 @property  NSArray *originalConflictedParticipants
 @property  NSArray *timesWhenAllAttendeesCanAttend
 @property  NSArray *timesWhenSomeAttendeesCanAttend
 @property  NSArray *proposedTimes
 @property  BOOL searchingForMoreTimesWhenAllAttendeesCanAttend
 @property  BOOL searchingForMoreTimesWhenSomeAttendeesCanAttend
 @property  BOOL noConflictRequired

  // class methods
  +[EKInviteeAlternativeTimeSearcher stateAsString:]
  +[EKInviteeAlternativeTimeSearcher _selfOrganizerForNewlyScheduledEventWithAddress:]
  +[EKInviteeAlternativeTimeSearcher _findLeftoverSpans:usingFreeTimes:andNonOptimalTimes:]
  +[EKInviteeAlternativeTimeSearcher _binarySearchForIndexOfTimeSpanInArray:containingDate:]
  +[EKInviteeAlternativeTimeSearcher _invalidBinarySearchIndex]
  +[EKInviteeAlternativeTimeSearcher _validateSpans:]
  +[EKInviteeAlternativeTimeSearcher _addressesForParticipants:]
  +[EKInviteeAlternativeTimeSearcher _span:hasSameConflictedParticipantsAsSpan:]
  +[EKInviteeAlternativeTimeSearcher _allButLastItemInArray:]
  +[EKInviteeAlternativeTimeSearcher _allButFirstItemInArray:]
  +[EKInviteeAlternativeTimeSearcher _insertUniqueParticipants:intoExistingParticipantsArray:]
  +[EKInviteeAlternativeTimeSearcher _rankNonOptimalTimeSpans:]
  +[EKInviteeAlternativeTimeSearcher _findHighestRankedNonOptimalTimeSpans:]

  // instance methods
  -[EKInviteeAlternativeTimeSearcher dealloc]
  -[EKInviteeAlternativeTimeSearcher setSource:]
  -[EKInviteeAlternativeTimeSearcher .cxx_destruct]
  -[EKInviteeAlternativeTimeSearcher source]
  -[EKInviteeAlternativeTimeSearcher callbackQueue]
  -[EKInviteeAlternativeTimeSearcher setCallbackQueue:]
  -[EKInviteeAlternativeTimeSearcher processingQueue]
  -[EKInviteeAlternativeTimeSearcher setProcessingQueue:]
  -[EKInviteeAlternativeTimeSearcher availabilityRequestInProgress]
  -[EKInviteeAlternativeTimeSearcher setAvailabilityRequestInProgress:]
  -[EKInviteeAlternativeTimeSearcher initWithStateChangedCallback:]
  -[EKInviteeAlternativeTimeSearcher setNoConflictRequired:]
  -[EKInviteeAlternativeTimeSearcher resetWithEvent:organizerAddressForNewlyScheduledEvent:]
  -[EKInviteeAlternativeTimeSearcher setAvailabilityRequestsQueue:]
  -[EKInviteeAlternativeTimeSearcher availabilityRequestsQueue]
  -[EKInviteeAlternativeTimeSearcher proposedTimes]
  -[EKInviteeAlternativeTimeSearcher originalStartDate]
  -[EKInviteeAlternativeTimeSearcher originalEndDate]
  -[EKInviteeAlternativeTimeSearcher originalConflictedParticipants]
  -[EKInviteeAlternativeTimeSearcher timesWhenAllAttendeesCanAttend]
  -[EKInviteeAlternativeTimeSearcher searchingForMoreTimesWhenAllAttendeesCanAttend]
  -[EKInviteeAlternativeTimeSearcher searchForMoreTimesWhenAllAttendeesCanAttend]
  -[EKInviteeAlternativeTimeSearcher timesWhenSomeAttendeesCanAttend]
  -[EKInviteeAlternativeTimeSearcher searchingForMoreTimesWhenSomeAttendeesCanAttend]
  -[EKInviteeAlternativeTimeSearcher searchForMoreTimesWhenSomeAttendeesCanAttend]
  -[EKInviteeAlternativeTimeSearcher setStateChanged:]
  -[EKInviteeAlternativeTimeSearcher setParticipantAddressesToParticipants:]
  -[EKInviteeAlternativeTimeSearcher setInternalTimesWhenAllAttendeesCanAttend:]
  -[EKInviteeAlternativeTimeSearcher setInternalTimesWhenSomeAttendeesCanAttend:]
  -[EKInviteeAlternativeTimeSearcher setInternalOriginalConflictedParticipants:]
  -[EKInviteeAlternativeTimeSearcher setInternalProposedTimes:]
  -[EKInviteeAlternativeTimeSearcher setLeftoverSpans:]
  -[EKInviteeAlternativeTimeSearcher internalOriginalStartDate]
  -[EKInviteeAlternativeTimeSearcher internalOriginalEndDate]
  -[EKInviteeAlternativeTimeSearcher internalOriginalConflictedParticipants]
  -[EKInviteeAlternativeTimeSearcher internalTimesWhenAllAttendeesCanAttend]
  -[EKInviteeAlternativeTimeSearcher internalTimesWhenSomeAttendeesCanAttend]
  -[EKInviteeAlternativeTimeSearcher internalProposedTimes]
  -[EKInviteeAlternativeTimeSearcher internalSearchingForMoreTimesWhenAllAttendeesCanAttend]
  -[EKInviteeAlternativeTimeSearcher internalSearchingForMoreTimesWhenSomeAttendeesCanAttend]
  -[EKInviteeAlternativeTimeSearcher setInternalSearchingForMoreTimesWhenAllAttendeesCanAttend:]
  -[EKInviteeAlternativeTimeSearcher _resetSearchFallbackNumbers]
  -[EKInviteeAlternativeTimeSearcher _attemptSearch]
  -[EKInviteeAlternativeTimeSearcher setInternalSearchingForMoreTimesWhenSomeAttendeesCanAttend:]
  -[EKInviteeAlternativeTimeSearcher participantAddressesToParticipants]
  -[EKInviteeAlternativeTimeSearcher leftoverSpans]
  -[EKInviteeAlternativeTimeSearcher setNextAvailabilityRangeStartDate:]
  -[EKInviteeAlternativeTimeSearcher setInternalOriginalStartDate:]
  -[EKInviteeAlternativeTimeSearcher setInternalOriginalEndDate:]
  -[EKInviteeAlternativeTimeSearcher setOriginalRangeStartDate:]
  -[EKInviteeAlternativeTimeSearcher setIgnoredEventID:]
  -[EKInviteeAlternativeTimeSearcher setOrganizerAddress:]
  -[EKInviteeAlternativeTimeSearcher _sendStateChange:]
  -[EKInviteeAlternativeTimeSearcher originalRangeStartDate]
  -[EKInviteeAlternativeTimeSearcher internalProposedStarts]
  -[EKInviteeAlternativeTimeSearcher _transitionToConflictFoundStateAndSearch]
  -[EKInviteeAlternativeTimeSearcher noConflictRequired]
  -[EKInviteeAlternativeTimeSearcher ignoredEventID]
  -[EKInviteeAlternativeTimeSearcher _participantforParticipantAddress:]
  -[EKInviteeAlternativeTimeSearcher remainingSearchAttempts]
  -[EKInviteeAlternativeTimeSearcher _haltSearchWithError:]
  -[EKInviteeAlternativeTimeSearcher nextAvailabilityRangeStartDate]
  -[EKInviteeAlternativeTimeSearcher availabilitySearchDurationMultiplier]
  -[EKInviteeAlternativeTimeSearcher setAvailabilitySearchDurationMultiplier:]
  -[EKInviteeAlternativeTimeSearcher _processResults:betweenStartDate:endDate:]
  -[EKInviteeAlternativeTimeSearcher setRemainingSearchAttempts:]
  -[EKInviteeAlternativeTimeSearcher stateChanged]
  -[EKInviteeAlternativeTimeSearcher _generateTimeSpansForResults:betweenStartDate:endDate:]
  -[EKInviteeAlternativeTimeSearcher _spliceLeftTimeSpans:andNewTimeSpans:]
  -[EKInviteeAlternativeTimeSearcher _mergeAdjacentSpansWithSameConflictedParticipants:]
  -[EKInviteeAlternativeTimeSearcher _generateOpenFreeTimesFromTimeSpans:]
  -[EKInviteeAlternativeTimeSearcher _generateNonOptimalTimesFromTimeSpans:]
  -[EKInviteeAlternativeTimeSearcher _filterOutUnreasonableTimeSlots:]
  -[EKInviteeAlternativeTimeSearcher setInternalProposedStarts:]
  -[EKInviteeAlternativeTimeSearcher organizerAddress]


EKInviteReplyNotification : EKNotification
 @property  EKCalendar *inviteReplyCalendar
 @property  NSString *calendarName
 @property  NSString *inReplyTo
 @property  NSString *shareeDisplayName
 @property  NSString *shareeFirstName
 @property  NSString *shareeLastName
 @property  NSURL *shareeURL
 @property  NSString *shareeEmailAddress
 @property  NSString *shareePhoneNumber
 @property  unsigned long shareeStatus
 @property  NSDate *creationDate
 @property  NSString *summary
 @property  BOOL alerted

  // class methods
  +[EKInviteReplyNotification frozenClass]
  +[EKInviteReplyNotification sourceForInviteReplyNotification:]
  +[EKInviteReplyNotification knownRelationshipSingleValueKeys]

  // instance methods
  -[EKInviteReplyNotification creationDate]
  -[EKInviteReplyNotification setCreationDate:]
  -[EKInviteReplyNotification validate:]
  -[EKInviteReplyNotification summary]
  -[EKInviteReplyNotification setSummary:]
  -[EKInviteReplyNotification shareeStatus]
  -[EKInviteReplyNotification shareeDisplayName]
  -[EKInviteReplyNotification inReplyTo]
  -[EKInviteReplyNotification setInReplyTo:]
  -[EKInviteReplyNotification setShareeDisplayName:]
  -[EKInviteReplyNotification shareeFirstName]
  -[EKInviteReplyNotification setShareeFirstName:]
  -[EKInviteReplyNotification shareeLastName]
  -[EKInviteReplyNotification setShareeLastName:]
  -[EKInviteReplyNotification shareeURL]
  -[EKInviteReplyNotification setShareeURL:]
  -[EKInviteReplyNotification setShareeStatus:]
  -[EKInviteReplyNotification alerted]
  -[EKInviteReplyNotification inviteReplyCalendar]
  -[EKInviteReplyNotification calendarName]
  -[EKInviteReplyNotification shareeEmailAddress]
  -[EKInviteReplyNotification shareePhoneNumber]
  -[EKInviteReplyNotification _setInviteReplyCalendar:]
  -[EKInviteReplyNotification initWithInviteReplyCalendar:]
  -[EKInviteReplyNotification clearAlertedStatus]


EKAttachmentChange : EKObjectChange <EKOwnerIDProviding>
 @property  EKObjectID *ownerID

  // class methods
  +[EKAttachmentChange entityType]
  +[EKAttachmentChange fetchAttachmentChangesInStore:resultHandler:]
  +[EKAttachmentChange fetchAttachmentChangesInSource:resultHandler:]
  +[EKAttachmentChange fetchAttachmentChangesInCalendar:resultHandler:]

  // instance methods
  -[EKAttachmentChange .cxx_destruct]
  -[EKAttachmentChange ownerID]
  -[EKAttachmentChange initWithChangeProperties:]


EKFrozenReminderSource : EKFrozenReminderObject
 @property  NSString *sourceIdentifier
 @property  REMAccount *remAccount

  // class methods
  +[EKFrozenReminderSource meltedClass]

  // instance methods
  -[EKFrozenReminderSource flags]
  -[EKFrozenReminderSource UUID]
  -[EKFrozenReminderSource title]
  -[EKFrozenReminderSource sourceType]
  -[EKFrozenReminderSource sourceIdentifier]
  -[EKFrozenReminderSource externalID]
  -[EKFrozenReminderSource lastSyncEndDate]
  -[EKFrozenReminderSource lastSyncError]
  -[EKFrozenReminderSource remAccount]
  -[EKFrozenReminderSource meltedObjectInStore:]
  -[EKFrozenReminderSource delegatedAccountOwnerStoreID]
  -[EKFrozenReminderSource lastSyncStartDate]
  -[EKFrozenReminderSource setLastSyncError:]
  -[EKFrozenReminderSource setLastSyncStartDate:]
  -[EKFrozenReminderSource setLastSyncEndDate:]


EKParticipant : EKObject <EKParticipantSemanticIdentifierGeneratorDelegate, EKIdentityProtocol, NSCopying>
 @property  NSString *emailAddress
 @property  NSString *phoneNumber
 @property  NSString *inviterNameString
 @property  int proposedStartDateStatus
 @property  NSString *UUID
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *comment
 @property  EKCalendarItem *owner
 @property  NSURL *URL
 @property  NSString *name
 @property  long long participantStatus
 @property  long long participantRole
 @property  long long participantType
 @property  BOOL currentUser
 @property  NSPredicate *contactPredicate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EKParticipant participantWithName:emailAddress:phoneNumber:url:]
  +[EKParticipant participantWithName:url:]

  // instance methods
  -[EKParticipant name]
  -[EKParticipant copyWithZone:]
  -[EKParticipant .cxx_destruct]
  -[EKParticipant url]
  -[EKParticipant setURL:]
  -[EKParticipant UUID]
  -[EKParticipant setUUID:]
  -[EKParticipant URL]
  -[EKParticipant phoneNumber]
  -[EKParticipant displayName]
  -[EKParticipant owner]
  -[EKParticipant setDisplayName:]
  -[EKParticipant contactPredicate]
  -[EKParticipant setPhoneNumber:]
  -[EKParticipant emailAddress]
  -[EKParticipant setEmailAddress:]
  -[EKParticipant comment]
  -[EKParticipant setComment:]
  -[EKParticipant nameComponents]
  -[EKParticipant firstName]
  -[EKParticipant lastName]
  -[EKParticipant isCurrentUser]
  -[EKParticipant participantRole]
  -[EKParticipant participantStatus]
  -[EKParticipant participantType]
  -[EKParticipant setFirstName:]
  -[EKParticipant setLastName:]
  -[EKParticipant isEqualToParticipant:]
  -[EKParticipant proposedStartDate]
  -[EKParticipant setProposedStartDate:]
  -[EKParticipant proposedStartDateForEvent:]
  -[EKParticipant inviterNameString]
  -[EKParticipant proposedStartDateStatus]
  -[EKParticipant isLocationRoom]
  -[EKParticipant setProposedStartDateStatus:]
  -[EKParticipant semanticIdentifier]
  -[EKParticipant initWithName:emailAddress:phoneNumber:url:]
  -[EKParticipant displayNameRaw]
  -[EKParticipant invitedBy]
  -[EKParticipant ABRecordWithAddressBook:]
  -[EKParticipant setProposedStartDate:forEvent:]
  -[EKParticipant setInviterNameString]


EKCalendarSharedCalendarNotification : EKCalendarNotification
 @property  unsigned long sharingInvitationResponse
 @property  unsigned long allowedEntityTypes

  // instance methods
  -[EKCalendarSharedCalendarNotification initWithType:]
  -[EKCalendarSharedCalendarNotification allowedEntityTypes]
  -[EKCalendarSharedCalendarNotification sharingInvitationResponse]
  -[EKCalendarSharedCalendarNotification setSharingInvitationResponse:]
  -[EKCalendarSharedCalendarNotification setAllowedEntityTypes:]
  -[EKCalendarSharedCalendarNotification calendarFromEventStore:]


EKAvailabilitySpanDate : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDate *spanDate
 @property  long long dateType
 @property  long long spanType

  // class methods
  +[EKAvailabilitySpanDate valueForSpanType:]

  // instance methods
  -[EKAvailabilitySpanDate compare:]
  -[EKAvailabilitySpanDate .cxx_destruct]
  -[EKAvailabilitySpanDate spanType]
  -[EKAvailabilitySpanDate spanDate]
  -[EKAvailabilitySpanDate dateType]
  -[EKAvailabilitySpanDate initWithDate:dateType:spanType:]
  -[EKAvailabilitySpanDate setSpanDate:]
  -[EKAvailabilitySpanDate setDateType:]
  -[EKAvailabilitySpanDate setSpanType:]


EKAvailabilityCachedSpanRange : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKAvailabilityCachedSpanRange _clampDateRangeForSpans:startDate:endDate:]

  // instance methods
  -[EKAvailabilityCachedSpanRange init]
  -[EKAvailabilityCachedSpanRange .cxx_destruct]
  -[EKAvailabilityCachedSpanRange spans]
  -[EKAvailabilityCachedSpanRange gatherFreshlyCachedSpansBetweenStartDate:endDate:]
  -[EKAvailabilityCachedSpanRange insertSpans:]
  -[EKAvailabilityCachedSpanRange _rangeCompletelyCoversPeriodBetweenStartDate:endDate:]
  -[EKAvailabilityCachedSpanRange _currentMaxSpanTypeIn:]
  -[EKAvailabilityCachedSpanRange cachedSpansFromSpans:]
  -[EKAvailabilityCachedSpanRange _eliminateOverlapsInResults:]
  -[EKAvailabilityCachedSpanRange deDupSpans:]
  -[EKAvailabilityCachedSpanRange sanitizeAndInsertResults:inRange:]


EKPersistentAttendee : EKPersistentParticipant
 @property  int status
 @property  long long participantRole
 @property  long long participantType
 @property  int pendingStatus
 @property  NSDate *lastModified
 @property  BOOL commentChanged
 @property  BOOL statusChanged
 @property  BOOL proposedStartDateChanged

  // class methods
  +[EKPersistentAttendee relations]
  +[EKPersistentAttendee defaultPropertiesToLoad]
  +[EKPersistentAttendee meltedClass]
  +[EKPersistentAttendee attendeeWithEmailAddress:name:]
  +[EKPersistentAttendee attendeeWithName:emailAddress:address:]

  // instance methods
  -[EKPersistentAttendee copyWithZone:]
  -[EKPersistentAttendee flags]
  -[EKPersistentAttendee setOwner:]
  -[EKPersistentAttendee status]
  -[EKPersistentAttendee owner]
  -[EKPersistentAttendee setStatus:]
  -[EKPersistentAttendee setFlags:]
  -[EKPersistentAttendee participantRole]
  -[EKPersistentAttendee setParticipantRole:]
  -[EKPersistentAttendee participantType]
  -[EKPersistentAttendee entityType]
  -[EKPersistentAttendee lastModified]
  -[EKPersistentAttendee setLastModified:]
  -[EKPersistentAttendee setParticipantType:]
  -[EKPersistentAttendee pendingStatus]
  -[EKPersistentAttendee setPendingStatus:]
  -[EKPersistentAttendee initWithName:emailAddress:address:]
  -[EKPersistentAttendee initWithEmailAddress:name:]
  -[EKPersistentAttendee initWithAddress:name:]


EKCalendarSuggestionNotification : EKCalendarResourceChangeNotification
 @property  NSString *originAppName
 @property  SGEvent *suggestedEvent

  // class methods
  +[EKCalendarSuggestionNotification _queue]

  // instance methods
  -[EKCalendarSuggestionNotification .cxx_destruct]
  -[EKCalendarSuggestionNotification _SGSuggestionsServiceClass]
  -[EKCalendarSuggestionNotification updateSuggestedEventWithEventStore:]
  -[EKCalendarSuggestionNotification suggestedEvent]
  -[EKCalendarSuggestionNotification originAppName]


EKCredentials : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *username
 @property  NSString *password

  // class methods
  +[EKCredentials credentialsWithUsername:password:]

  // instance methods
  -[EKCredentials password]
  -[EKCredentials .cxx_destruct]
  -[EKCredentials username]


EKDirectoryPerson : EKDirectoryRecord

EKPersistentReminder : EKPersistentCalendarItem
  // class methods
  +[EKPersistentReminder meltedClass]
  +[EKPersistentReminder reminderWithRandomUUID]

  // instance methods
  -[EKPersistentReminder copyWithZone:]
  -[EKPersistentReminder entityType]
  -[EKPersistentReminder dueDate]
  -[EKPersistentReminder setDueDate:]
  -[EKPersistentReminder displayOrder]
  -[EKPersistentReminder setDisplayOrder:]
  -[EKPersistentReminder setCompletionDate:]
  -[EKPersistentReminder completionDate]
  -[EKPersistentReminder dueDateTimeZone]
  -[EKPersistentReminder dueDateAllDay]
  -[EKPersistentReminder setDueDateTimeZone:]
  -[EKPersistentReminder setDueDateAllDay:]
  -[EKPersistentReminder firstAlertDate]
  -[EKPersistentReminder setFirstAlertDate:]


EKNotificationCollectionOptions : NSObject /usr/lib/libSystem.B.dylib
 @property  EKSource *source
 @property  NSString *externalID
 @property  NSString *externalIDTag

  // instance methods
  -[EKNotificationCollectionOptions .cxx_destruct]
  -[EKNotificationCollectionOptions source]
  -[EKNotificationCollectionOptions externalID]
  -[EKNotificationCollectionOptions externalIDTag]
  -[EKNotificationCollectionOptions initWithExternalID:externalIDTag:inSource:]


EKSerializableObject : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
  // class methods
  +[EKSerializableObject supportsSecureCoding]
  +[EKSerializableObject classesForKey]

  // instance methods
  -[EKSerializableObject encodeWithCoder:]
  -[EKSerializableObject initWithCoder:]


EKCalendarNotification : NSObject /usr/lib/libSystem.B.dylib <EKIdentityProtocol>
 @property  long long type
 @property  NSString *title
 @property  NSString *name
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *emailAddress
 @property  NSString *phoneNumber
 @property  NSURL *URL
 @property  EKObjectID *objectID
 @property  ^{CGColor=} dotColor
 @property  BOOL hiddenFromNotificationCenter
 @property  BOOL alerted
 @property  BOOL needsAlert
 @property  BOOL couldBeJunk
 @property  EKSource *source
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EKCalendarNotification dealloc]
  -[EKCalendarNotification name]
  -[EKCalendarNotification type]
  -[EKCalendarNotification setType:]
  -[EKCalendarNotification setSource:]
  -[EKCalendarNotification .cxx_destruct]
  -[EKCalendarNotification setName:]
  -[EKCalendarNotification source]
  -[EKCalendarNotification setURL:]
  -[EKCalendarNotification URL]
  -[EKCalendarNotification title]
  -[EKCalendarNotification setTitle:]
  -[EKCalendarNotification phoneNumber]
  -[EKCalendarNotification initWithType:]
  -[EKCalendarNotification objectID]
  -[EKCalendarNotification setPhoneNumber:]
  -[EKCalendarNotification emailAddress]
  -[EKCalendarNotification setEmailAddress:]
  -[EKCalendarNotification setObjectID:]
  -[EKCalendarNotification firstName]
  -[EKCalendarNotification lastName]
  -[EKCalendarNotification setFirstName:]
  -[EKCalendarNotification setLastName:]
  -[EKCalendarNotification couldBeJunk]
  -[EKCalendarNotification alerted]
  -[EKCalendarNotification setHiddenFromNotificationCenter:]
  -[EKCalendarNotification setAlerted:]
  -[EKCalendarNotification setDotColor:]
  -[EKCalendarNotification setCouldBeJunk:]
  -[EKCalendarNotification needsAlert]
  -[EKCalendarNotification dotColor]
  -[EKCalendarNotification hiddenFromNotificationCenter]


EKSerializableAlarm : EKSerializableObject
 @property  double relativeOffset
 @property  NSDate *absoluteDate
 @property  BOOL isAbsolute

  // class methods
  +[EKSerializableAlarm classesForKey]

  // instance methods
  -[EKSerializableAlarm .cxx_destruct]
  -[EKSerializableAlarm isAbsolute]
  -[EKSerializableAlarm absoluteDate]
  -[EKSerializableAlarm relativeOffset]
  -[EKSerializableAlarm initWithAlarm:]
  -[EKSerializableAlarm setAbsoluteDate:]
  -[EKSerializableAlarm setRelativeOffset:]
  -[EKSerializableAlarm createAlarm:]
  -[EKSerializableAlarm setIsAbsolute:]


EKDirectorySearchOperation : NSOperation /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar
 @property  BOOL numberOfMatchesExceededLimit
 @property  NSError *error

  // instance methods
  -[EKDirectorySearchOperation init]
  -[EKDirectorySearchOperation .cxx_destruct]
  -[EKDirectorySearchOperation error]
  -[EKDirectorySearchOperation cancel]
  -[EKDirectorySearchOperation start]
  -[EKDirectorySearchOperation main]
  -[EKDirectorySearchOperation setError:]
  -[EKDirectorySearchOperation isFinished]
  -[EKDirectorySearchOperation isExecuting]
  -[EKDirectorySearchOperation isConcurrent]
  -[EKDirectorySearchOperation _finishWithError:]
  -[EKDirectorySearchOperation initWithSource:query:resultsBlock:]
  -[EKDirectorySearchOperation numberOfMatchesExceededLimit]
  -[EKDirectorySearchOperation _recordTypes]
  -[EKDirectorySearchOperation _processResults:]
  -[EKDirectorySearchOperation setNumberOfMatchesExceededLimit:]
  -[EKDirectorySearchOperation _processGroupsInResults:]
  -[EKDirectorySearchOperation _processLocationsInResults:]
  -[EKDirectorySearchOperation _processResourcesInResults:]
  -[EKDirectorySearchOperation _processPeopleInResults:]


EKEventOccurrenceInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  EKObjectID *objectID
 @property  double date

  // instance methods
  -[EKEventOccurrenceInfo .cxx_destruct]
  -[EKEventOccurrenceInfo date]
  -[EKEventOccurrenceInfo objectID]
  -[EKEventOccurrenceInfo setDate:]
  -[EKEventOccurrenceInfo setObjectID:]
  -[EKEventOccurrenceInfo initWithObjectID:date:]


EKDirectorySearchQuery : NSObject /usr/lib/libSystem.B.dylib
 @property  NSSet *terms
 @property  BOOL findGroups
 @property  BOOL findLocations
 @property  BOOL findResources
 @property  BOOL findUsers
 @property  unsigned long resultLimit

  // instance methods
  -[EKDirectorySearchQuery .cxx_destruct]
  -[EKDirectorySearchQuery resultLimit]
  -[EKDirectorySearchQuery setResultLimit:]
  -[EKDirectorySearchQuery setTerms:]
  -[EKDirectorySearchQuery setFindLocations:]
  -[EKDirectorySearchQuery terms]
  -[EKDirectorySearchQuery findGroups]
  -[EKDirectorySearchQuery findLocations]
  -[EKDirectorySearchQuery findResources]
  -[EKDirectorySearchQuery findUsers]
  -[EKDirectorySearchQuery setFindGroups:]
  -[EKDirectorySearchQuery setFindResources:]
  -[EKDirectorySearchQuery setFindUsers:]


EKCalendarEventInvitationNotification : EKCalendarNotification
 @property  NSString *location
 @property  NSDate *startDate
 @property  NSDate *startDateForNextOccurrence
 @property  NSDate *endDate
 @property  NSDate *participationStatusModifiedDate
 @property  NSTimeZone *timeZone
 @property  long long participationStatus
 @property  long long status
 @property  BOOL allDay
 @property  EKRecurrenceRule *recurrenceRule
 @property  BOOL timeChanged
 @property  BOOL dateChanged
 @property  BOOL locationChanged
 @property  BOOL attendeeReplyChanged
 @property  NSArray *attendees
 @property  EKCalendarEventInvitationNotificationAttendee *owner
 @property  NSString *invitedBy
 @property  BOOL couldBeJunk

  // instance methods
  -[EKCalendarEventInvitationNotification setTimeZone:]
  -[EKCalendarEventInvitationNotification .cxx_destruct]
  -[EKCalendarEventInvitationNotification timeZone]
  -[EKCalendarEventInvitationNotification setOwner:]
  -[EKCalendarEventInvitationNotification startDate]
  -[EKCalendarEventInvitationNotification endDate]
  -[EKCalendarEventInvitationNotification status]
  -[EKCalendarEventInvitationNotification owner]
  -[EKCalendarEventInvitationNotification location]
  -[EKCalendarEventInvitationNotification setStartDate:]
  -[EKCalendarEventInvitationNotification setEndDate:]
  -[EKCalendarEventInvitationNotification initWithEvent:]
  -[EKCalendarEventInvitationNotification setStatus:]
  -[EKCalendarEventInvitationNotification setLocation:]
  -[EKCalendarEventInvitationNotification setAllDay:]
  -[EKCalendarEventInvitationNotification isAllDay]
  -[EKCalendarEventInvitationNotification recurrenceRule]
  -[EKCalendarEventInvitationNotification setRecurrenceRule:]
  -[EKCalendarEventInvitationNotification participationStatus]
  -[EKCalendarEventInvitationNotification attendees]
  -[EKCalendarEventInvitationNotification setParticipationStatus:]
  -[EKCalendarEventInvitationNotification timeChanged]
  -[EKCalendarEventInvitationNotification dateChanged]
  -[EKCalendarEventInvitationNotification locationChanged]
  -[EKCalendarEventInvitationNotification setAttendees:]
  -[EKCalendarEventInvitationNotification hasRecurrenceRules]
  -[EKCalendarEventInvitationNotification setDateChanged:]
  -[EKCalendarEventInvitationNotification setTimeChanged:]
  -[EKCalendarEventInvitationNotification setLocationChanged:]
  -[EKCalendarEventInvitationNotification setStartDateForNextOccurrence:]
  -[EKCalendarEventInvitationNotification invitedBy]
  -[EKCalendarEventInvitationNotification attendeeReplyChanged]
  -[EKCalendarEventInvitationNotification participationStatusModifiedDate]
  -[EKCalendarEventInvitationNotification setParticipationStatusModifiedDate:]
  -[EKCalendarEventInvitationNotification setAttendeeReplyChanged:]
  -[EKCalendarEventInvitationNotification eventFromEventStore:]
  -[EKCalendarEventInvitationNotification startDateForNextOccurrence]


EKCalendarEventInvitationNotificationAttendee : NSObject /usr/lib/libSystem.B.dylib <EKIdentityProtocol>
 @property  NSString *name
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *emailAddress
 @property  NSString *phoneNumber
 @property  NSURL *URL
 @property  BOOL statusChanged
 @property  BOOL commentChanged
 @property  BOOL proposedStartDateChanged
 @property  long long participantStatus
 @property  NSString *comment
 @property  NSDate *proposedStartDate
 @property  BOOL proposedStartDateDeclined
 @property  BOOL isCurrentUser
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EKCalendarEventInvitationNotificationAttendee name]
  -[EKCalendarEventInvitationNotificationAttendee .cxx_destruct]
  -[EKCalendarEventInvitationNotificationAttendee URL]
  -[EKCalendarEventInvitationNotificationAttendee phoneNumber]
  -[EKCalendarEventInvitationNotificationAttendee emailAddress]
  -[EKCalendarEventInvitationNotificationAttendee comment]
  -[EKCalendarEventInvitationNotificationAttendee firstName]
  -[EKCalendarEventInvitationNotificationAttendee lastName]
  -[EKCalendarEventInvitationNotificationAttendee isCurrentUser]
  -[EKCalendarEventInvitationNotificationAttendee participantStatus]
  -[EKCalendarEventInvitationNotificationAttendee proposedStartDate]
  -[EKCalendarEventInvitationNotificationAttendee statusChanged]
  -[EKCalendarEventInvitationNotificationAttendee commentChanged]
  -[EKCalendarEventInvitationNotificationAttendee proposedStartDateChanged]
  -[EKCalendarEventInvitationNotificationAttendee proposedStartDateDeclined]
  -[EKCalendarEventInvitationNotificationAttendee initWithParticipant:forEvent:]


EKObjectChange : NSObject /usr/lib/libSystem.B.dylib
 @property  long long changeID
 @property  long long sequenceNumber
 @property  EKObjectID *changedObjectID
 @property  int changeType

  // class methods
  +[EKObjectChange objectType]
  +[EKObjectChange entityType]
  +[EKObjectChange fetchChangesToObjectsOfTypes:inStore:resultHandler:]
  +[EKObjectChange fetchChangesToObjectsOfTypes:inSource:resultHandler:]
  +[EKObjectChange fetchChangesToObjectsOfTypes:inCalendar:resultHandler:]
  +[EKObjectChange processFetchResults:]
  +[EKObjectChange objectChangeWithProperties:]
  +[EKObjectChange CADObjectChangeIDsFromEKObjectChanges:]
  +[EKObjectChange fetchObjectChangesInStore:resultHandler:]
  +[EKObjectChange fetchObjectChangesInSource:resultHandler:]
  +[EKObjectChange fetchObjectChangesInCalendar:resultHandler:]
  +[EKObjectChange callClientResultsHandler:changesTruncated:latestToken:changes:]
  +[EKObjectChange _filterObjectChangesNotConformingToOwnerIDProvidingProtocol:]
  +[EKObjectChange fetchChangesToOwnerIDProvidingObjectsOfTypes:inStore:resultHandler:]
  +[EKObjectChange fetchChangesToOwnerIDProvidingObjectsOfTypes:inSource:resultHandler:]
  +[EKObjectChange fetchChangesToOwnerIDProvidingObjectsOfTypes:inCalendar:resultHandler:]

  // instance methods
  -[EKObjectChange isEqual:]
  -[EKObjectChange .cxx_destruct]
  -[EKObjectChange changeType]
  -[EKObjectChange sequenceNumber]
  -[EKObjectChange changedObjectID]
  -[EKObjectChange changeID]
  -[EKObjectChange initWithChangeProperties:]
  -[EKObjectChange serializedPropertiesForConsumingChange]


EKPersistentAlarm : EKPersistentObject
  // class methods
  +[EKPersistentAlarm relations]
  +[EKPersistentAlarm defaultPropertiesToLoad]
  +[EKPersistentAlarm meltedClass]
  +[EKPersistentAlarm alternateUniverseClass]

  // instance methods
  -[EKPersistentAlarm copyWithZone:]
  -[EKPersistentAlarm UUID]
  -[EKPersistentAlarm setUUID:]
  -[EKPersistentAlarm location]
  -[EKPersistentAlarm proximity]
  -[EKPersistentAlarm setLocation:]
  -[EKPersistentAlarm externalID]
  -[EKPersistentAlarm setExternalID:]
  -[EKPersistentAlarm entityType]
  -[EKPersistentAlarm alarmType]
  -[EKPersistentAlarm absoluteDate]
  -[EKPersistentAlarm relativeOffset]
  -[EKPersistentAlarm structuredLocation]
  -[EKPersistentAlarm setStructuredLocation:]
  -[EKPersistentAlarm setAbsoluteDate:]
  -[EKPersistentAlarm setRelativeOffset:]
  -[EKPersistentAlarm setAcknowledgedDate:]
  -[EKPersistentAlarm setProximity:]
  -[EKPersistentAlarm acknowledgedDate]
  -[EKPersistentAlarm semanticIdentifier]
  -[EKPersistentAlarm isDefaultAlarm]
  -[EKPersistentAlarm externalData]
  -[EKPersistentAlarm snoozedAlarms]
  -[EKPersistentAlarm calendarItemOwner]
  -[EKPersistentAlarm originalAlarm]
  -[EKPersistentAlarm setOriginalAlarm:]
  -[EKPersistentAlarm setExternalData:]
  -[EKPersistentAlarm setCalendarItemOwner:]
  -[EKPersistentAlarm setAlarmType:]
  -[EKPersistentAlarm calendarOwner]
  -[EKPersistentAlarm setCalendarOwner:]
  -[EKPersistentAlarm setDefaultAlarm:]
  -[EKPersistentAlarm setSnoozedAlarms:]


EKFrozenReminderObject : EKPersistentObject
 @property  EKChangeSet *uncommittedChanges
 @property  NSArray *path

  // class methods
  +[EKFrozenReminderObject frozenClass]
  +[EKFrozenReminderObject canCommitSelf]
  +[EKFrozenReminderObject uniqueIdentifierForREMObject:]
  +[EKFrozenReminderObject meltedClass]

  // instance methods
  -[EKFrozenReminderObject isEqual:]
  -[EKFrozenReminderObject initWithObject:]
  -[EKFrozenReminderObject .cxx_destruct]
  -[EKFrozenReminderObject path]
  -[EKFrozenReminderObject setPath:]
  -[EKFrozenReminderObject uniqueIdentifier]
  -[EKFrozenReminderObject changeSet]
  -[EKFrozenReminderObject isFrozen]
  -[EKFrozenReminderObject isNew]
  -[EKFrozenReminderObject entityType]
  -[EKFrozenReminderObject remObjectID]
  -[EKFrozenReminderObject isPartialObject]
  -[EKFrozenReminderObject uncommittedChanges]
  -[EKFrozenReminderObject initWithREMObject:inStore:withChanges:]
  -[EKFrozenReminderObject REMObject]
  -[EKFrozenReminderObject updateParentToCommitSelf:]
  -[EKFrozenReminderObject _applyChangesToSaveRequest:error:]
  -[EKFrozenReminderObject frozenObject]
  -[EKFrozenReminderObject existsInStore]
  -[EKFrozenReminderObject existingMeltedObject]
  -[EKFrozenReminderObject isPropertyUnavailable:]
  -[EKFrozenReminderObject isCompletelyEqual:]
  -[EKFrozenReminderObject isEqual:ignoringProperties:]
  -[EKFrozenReminderObject semanticIdentifier]
  -[EKFrozenReminderObject valueForSingleValueKey:backingValue:]
  -[EKFrozenReminderObject updatedFrozenObjectWithChanges:updatedChildren:]
  -[EKFrozenReminderObject initWithREMObject:inStore:]
  -[EKFrozenReminderObject updatedFrozenObjectWithChanges:]


EKPersistentResourceChange : EKPersistentObject
  // class methods
  +[EKPersistentResourceChange relations]
  +[EKPersistentResourceChange defaultPropertiesToLoad]
  +[EKPersistentResourceChange meltedClass]

  // instance methods
  -[EKPersistentResourceChange calendar]
  -[EKPersistentResourceChange changeType]
  -[EKPersistentResourceChange timestamp]
  -[EKPersistentResourceChange notification]
  -[EKPersistentResourceChange deleteCount]
  -[EKPersistentResourceChange updateCount]
  -[EKPersistentResourceChange entityType]
  -[EKPersistentResourceChange calendarItem]
  -[EKPersistentResourceChange alerted]
  -[EKPersistentResourceChange deletedTitle]
  -[EKPersistentResourceChange changedByDisplayName]
  -[EKPersistentResourceChange createCount]
  -[EKPersistentResourceChange changedByAddress]
  -[EKPersistentResourceChange changedByFirstName]
  -[EKPersistentResourceChange changedByLastName]
  -[EKPersistentResourceChange changedProperties]
  -[EKPersistentResourceChange publicStatus]


EKFrozenReminderRecurrenceRule : EKFrozenReminderObject
  // class methods
  +[EKFrozenReminderRecurrenceRule meltedClass]
  +[EKFrozenReminderRecurrenceRule convertToReminderKitFrequency:]
  +[EKFrozenReminderRecurrenceRule convertToReminderKitWeekday:]
  +[EKFrozenReminderRecurrenceRule convertFromReminderKitFrequency:]
  +[EKFrozenReminderRecurrenceRule convertFromReminderKitWeekday:]

  // instance methods
  -[EKFrozenReminderRecurrenceRule count]
  -[EKFrozenReminderRecurrenceRule specifier]
  -[EKFrozenReminderRecurrenceRule interval]
  -[EKFrozenReminderRecurrenceRule endDate]
  -[EKFrozenReminderRecurrenceRule uuid]
  -[EKFrozenReminderRecurrenceRule uniqueIdentifier]
  -[EKFrozenReminderRecurrenceRule frequency]
  -[EKFrozenReminderRecurrenceRule _recurrenceRule]
  -[EKFrozenReminderRecurrenceRule firstDayOfTheWeek]
  -[EKFrozenReminderRecurrenceRule remObjectID]
  -[EKFrozenReminderRecurrenceRule initWithREMObject:inStore:withChanges:]
  -[EKFrozenReminderRecurrenceRule initWithREMObject:inStore:]
  -[EKFrozenReminderRecurrenceRule loadSpecifierDaysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:]
  -[EKFrozenReminderRecurrenceRule remWeekdayToEKWeekday:]
  -[EKFrozenReminderRecurrenceRule ekWeekdayToREMWeekday:]
  -[EKFrozenReminderRecurrenceRule daysOfTheWeekFromREMRecurrenceRule]
  -[EKFrozenReminderRecurrenceRule remDaysOfTheWeekFromEKDaysOfTheWeek:]
  -[EKFrozenReminderRecurrenceRule initWithAlternateUniverseObject:inEventStore:withUpdatedChildObjects:]
  -[EKFrozenReminderRecurrenceRule addUpdatedRecurrenceRule:]


EKFrozenReminderReminder : EKFrozenReminderObject
  // class methods
  +[EKFrozenReminderReminder meltedClass]

  // instance methods
  -[EKFrozenReminderReminder calendar]
  -[EKFrozenReminderReminder timeZone]
  -[EKFrozenReminderReminder attachments]
  -[EKFrozenReminderReminder UUID]
  -[EKFrozenReminderReminder URL]
  -[EKFrozenReminderReminder title]
  -[EKFrozenReminderReminder uniqueIdentifier]
  -[EKFrozenReminderReminder priority]
  -[EKFrozenReminderReminder uniqueID]
  -[EKFrozenReminderReminder action]
  -[EKFrozenReminderReminder creationDate]
  -[EKFrozenReminderReminder clientLocation]
  -[EKFrozenReminderReminder appLink]
  -[EKFrozenReminderReminder lastModifiedDate]
  -[EKFrozenReminderReminder organizer]
  -[EKFrozenReminderReminder originalItem]
  -[EKFrozenReminderReminder notes]
  -[EKFrozenReminderReminder startDateComponents]
  -[EKFrozenReminderReminder calendarItemIdentifier]
  -[EKFrozenReminderReminder alarms]
  -[EKFrozenReminderReminder attendees]
  -[EKFrozenReminderReminder hasAttendees]
  -[EKFrozenReminderReminder calendarItemExternalIdentifier]
  -[EKFrozenReminderReminder hasRecurrenceRules]
  -[EKFrozenReminderReminder selfAttendee]
  -[EKFrozenReminderReminder structuredLocation]
  -[EKFrozenReminderReminder travelStartLocation]
  -[EKFrozenReminderReminder structuredLocationWithoutPrediction]
  -[EKFrozenReminderReminder recurrenceRules]
  -[EKFrozenReminderReminder detachedItems]
  -[EKFrozenReminderReminder completionDate]
  -[EKFrozenReminderReminder _reminder]
  -[EKFrozenReminderReminder dueDateComponents]
  -[EKFrozenReminderReminder remObjectID]
  -[EKFrozenReminderReminder initNewReminderInStore:]
  -[EKFrozenReminderReminder _applyChangesToSaveRequest:error:]
  -[EKFrozenReminderReminder _copyToNewList:error:]
  -[EKFrozenReminderReminder _applyChanges:error:]
  -[EKFrozenReminderReminder ekExceptionDates]
  -[EKFrozenReminderReminder hasNotes]
  -[EKFrozenReminderReminder _fixAlarmUUIDsForClone:from:]
  -[EKFrozenReminderReminder defaultAlarmRemoved]


EKChangeSet : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableDictionary *singleValueChanges
 @property  NSMutableDictionary *multiValueAdditions
 @property  NSMutableDictionary *multiValueRemovals
 @property  BOOL isNew
 @property  BOOL isModified
 @property  BOOL isSaved
 @property  BOOL isDeleted
 @property  BOOL isUndeleted

  // instance methods
  -[EKChangeSet init]
  -[EKChangeSet isEqual:]
  -[EKChangeSet copyWithZone:]
  -[EKChangeSet mutableCopyWithZone:]
  -[EKChangeSet .cxx_destruct]
  -[EKChangeSet addChanges:]
  -[EKChangeSet hasChanges]
  -[EKChangeSet hasUnsavedChanges]
  -[EKChangeSet isDeleted]
  -[EKChangeSet changedKeys]
  -[EKChangeSet setIsDeleted:]
  -[EKChangeSet summary]
  -[EKChangeSet isModified]
  -[EKChangeSet isNew]
  -[EKChangeSet isEffectivelyEqual:]
  -[EKChangeSet isSaved]
  -[EKChangeSet forceChangeValue:forKey:]
  -[EKChangeSet setSkipsPersistentObjectCopy:]
  -[EKChangeSet changeSingleValue:forKey:basedOn:]
  -[EKChangeSet hasUnsavedChangeForKey:]
  -[EKChangeSet valueForSingleValueKey:basedOn:]
  -[EKChangeSet skipsPersistentObjectCopy]
  -[EKChangeSet addChangesAndUpdateUniqueMultiValueObjects:]
  -[EKChangeSet replaceUniqueMultiValueObjectsWithUpdatedObjects:]
  -[EKChangeSet hasUnsavedMultiValueRemovalForKey:]
  -[EKChangeSet multiValueRemovals]
  -[EKChangeSet hasUnsavedMultiValueAdditionForKey:]
  -[EKChangeSet multiValueAdditions]
  -[EKChangeSet valuesForMultiValueKey:basedOnSet:]
  -[EKChangeSet initWithChangeSet:]
  -[EKChangeSet singleValueChanges]
  -[EKChangeSet initWithSingleValueChanges:multiValueAdditions:multiValueRemovals:]
  -[EKChangeSet _initWithChangeSet:filter:]
  -[EKChangeSet setIsNew:]
  -[EKChangeSet setIsModified:]
  -[EKChangeSet setIsSaved:]
  -[EKChangeSet isUndeleted]
  -[EKChangeSet setIsUndeleted:]
  -[EKChangeSet setSingleValueChanges:]
  -[EKChangeSet setMultiValueAdditions:]
  -[EKChangeSet setMultiValueRemovals:]
  -[EKChangeSet rollbackChanges]
  -[EKChangeSet changedSingleValueKeys]
  -[EKChangeSet changedMultiValueKeys]
  -[EKChangeSet _isNewAndUnsaved]
  -[EKChangeSet valueForSingleValueKey:basedOn:and:]
  -[EKChangeSet changeSingleValue:forKey:basedOn:and:]
  -[EKChangeSet removeFromChanges:forMultiValueKey:basedOn:]
  -[EKChangeSet addToChanges:forMultiValueKey:basedOn:]
  -[EKChangeSet _semanticIdentifierToObjectMapForObjects:]
  -[EKChangeSet _cleanupEmptySetsForMultiValueKey:]
  -[EKChangeSet initWithChangeSet:changesToSkip:]
  -[EKChangeSet initWithChangeSet:changesToKeep:]
  -[EKChangeSet markChangesAsSaved]
  -[EKChangeSet unsavedMultiValueAddedObjectsForKey:]
  -[EKChangeSet unsavedMultiValueRemovedObjectsForKey:]
  -[EKChangeSet valuesForMultiValueKey:basedOn:]
  -[EKChangeSet isUniqueAddedObject:forKey:]
  -[EKChangeSet replaceMultiChangeAddedObject:withObject:forKey:]


EKPersistentExceptionDate : EKPersistentObject
  // class methods
  +[EKPersistentExceptionDate relations]
  +[EKPersistentExceptionDate meltedClass]

  // instance methods
  -[EKPersistentExceptionDate copyWithZone:]
  -[EKPersistentExceptionDate date]
  -[EKPersistentExceptionDate setOwner:]
  -[EKPersistentExceptionDate owner]
  -[EKPersistentExceptionDate setDate:]
  -[EKPersistentExceptionDate entityType]


EKCalendarInviteReplyNotification : EKCalendarNotification
 @property  unsigned long status
 @property  unsigned long allowedEntityTypes

  // instance methods
  -[EKCalendarInviteReplyNotification status]
  -[EKCalendarInviteReplyNotification initWithType:]
  -[EKCalendarInviteReplyNotification setStatus:]
  -[EKCalendarInviteReplyNotification allowedEntityTypes]
  -[EKCalendarInviteReplyNotification setAllowedEntityTypes:]
  -[EKCalendarInviteReplyNotification inviteReplyNotificationFromEventStore:]


EKSerializableAttachment : EKSerializableObject
 @property  NSURL *urlOnDisk
 @property  NSString *contentTypeFromServer

  // class methods
  +[EKSerializableAttachment classesForKey]

  // instance methods
  -[EKSerializableAttachment .cxx_destruct]
  -[EKSerializableAttachment initWithAttachment:]
  -[EKSerializableAttachment createAttachment]
  -[EKSerializableAttachment urlOnDisk]
  -[EKSerializableAttachment setUrlOnDisk:]
  -[EKSerializableAttachment contentTypeFromServer]
  -[EKSerializableAttachment setContentTypeFromServer:]


EKEventFetchRequestToken : NSObject /usr/lib/libSystem.B.dylib <EKFetchRequestToken>
 @property  EKEventStore *eventStore
 @property  unsigned int token

  // instance methods
  -[EKEventFetchRequestToken token]
  -[EKEventFetchRequestToken .cxx_destruct]
  -[EKEventFetchRequestToken cancel]
  -[EKEventFetchRequestToken eventStore]
  -[EKEventFetchRequestToken initWithEventStore:token:]


EKPredicateSearch : NSObject /usr/lib/libSystem.B.dylib <EKCancellableRemoteOperation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EKPredicateSearch signpostHandle]
  +[EKPredicateSearch searchWithEntityClass:predicate:store:]

  // instance methods
  -[EKPredicateSearch .cxx_destruct]
  -[EKPredicateSearch cancel]
  -[EKPredicateSearch terminate]
  -[EKPredicateSearch disconnect]
  -[EKPredicateSearch startWithCompletion:]
  -[EKPredicateSearch initWithEntityClass:predicate:store:]
  -[EKPredicateSearch _createOSActivity]
  -[EKPredicateSearch signpostStart]
  -[EKPredicateSearch _startActualWithCompletion:synchronous:]
  -[EKPredicateSearch _fetchObjectIDsActualWithCompletion:synchronous:]
  -[EKPredicateSearch _startProcessingWithCompletion:synchronous:processor:]
  -[EKPredicateSearch signpostEndWithError:count:]
  -[EKPredicateSearch _startActivityWithCompletion:synchronous:]
  -[EKPredicateSearch _startFetchObjectIDsActivityWithCompletion:synchronous:]
  -[EKPredicateSearch runSynchronously]
  -[EKPredicateSearch fetchObjectIDs]


EKNullFetchRequestToken : NSObject /usr/lib/libSystem.B.dylib <EKFetchRequestToken>
  // class methods
  +[EKNullFetchRequestToken sharedToken]

  // instance methods
  -[EKNullFetchRequestToken cancel]


EKSerializableParticipant : EKSerializableObject
 @property  NSString *name
 @property  NSString *emailAddress
 @property  NSString *phoneNumber
 @property  NSURL *url
 @property  long long participantRole
 @property  long long participantStatus
 @property  long long participantType

  // class methods
  +[EKSerializableParticipant classesForKey]

  // instance methods
  -[EKSerializableParticipant name]
  -[EKSerializableParticipant .cxx_destruct]
  -[EKSerializableParticipant setName:]
  -[EKSerializableParticipant url]
  -[EKSerializableParticipant phoneNumber]
  -[EKSerializableParticipant setUrl:]
  -[EKSerializableParticipant setPhoneNumber:]
  -[EKSerializableParticipant emailAddress]
  -[EKSerializableParticipant setEmailAddress:]
  -[EKSerializableParticipant participantRole]
  -[EKSerializableParticipant participantStatus]
  -[EKSerializableParticipant setParticipantRole:]
  -[EKSerializableParticipant setParticipantStatus:]
  -[EKSerializableParticipant participantType]
  -[EKSerializableParticipant setParticipantType:]
  -[EKSerializableParticipant initWithParticipant:]
  -[EKSerializableParticipant createAttendee:]


EKResourceChangeNotificationChange : EKNotificationChange
  // class methods
  +[EKResourceChangeNotificationChange entityType]


EKReminder : EKCalendarItem
 @property  NSTimeZone *dueDateTimeZone
 @property  EKObjectID *parentID
 @property  NSDateComponents *startDateComponents
 @property  NSDateComponents *dueDateComponents
 @property  BOOL completed
 @property  NSDate *completionDate
 @property  unsigned long priority

  // class methods
  +[EKReminder frozenClass]
  +[EKReminder generateUniqueIDWithReminder:calendar:]
  +[EKReminder reminderWithEventStore:]
  +[EKReminder _removeSnoozedAlarmsFromReminder:usingDueDate:]

  // instance methods
  -[EKReminder init]
  -[EKReminder setTimeZone:]
  -[EKReminder .cxx_destruct]
  -[EKReminder timeZone]
  -[EKReminder reset]
  -[EKReminder _reset]
  -[EKReminder rollback]
  -[EKReminder validate:]
  -[EKReminder refresh]
  -[EKReminder setCompleted:]
  -[EKReminder parentID]
  -[EKReminder setParentID:]
  -[EKReminder isCompleted]
  -[EKReminder setAllDay:]
  -[EKReminder isAllDay]
  -[EKReminder dueDate]
  -[EKReminder setDueDate:]
  -[EKReminder startDateComponents]
  -[EKReminder startDateComponents]
  -[EKReminder setStartDateComponents:]
  -[EKReminder setStartDateComponents:]
  -[EKReminder startTimeZone]
  -[EKReminder setStartTimeZone:]
  -[EKReminder startDateForRecurrence]
  -[EKReminder displayOrder]
  -[EKReminder setDisplayOrder:]
  -[EKReminder setCompletionDate:]
  -[EKReminder completionDate]
  -[EKReminder dueDateComponents]
  -[EKReminder dueDateComponents]
  -[EKReminder reminderIdentifier]
  -[EKReminder setDueDateComponents:]
  -[EKReminder setDueDateComponents:]
  -[EKReminder initWithPersistentObject:]
  -[EKReminder forceUpdateFrozenCalendar:]
  -[EKReminder externalURI]
  -[EKReminder dueDateTimeZone]
  -[EKReminder dueDateAllDay]
  -[EKReminder _adjustPersistedStartDateComponentsForNewTimeZone:]
  -[EKReminder startDateComponentsRaw]
  -[EKReminder startDateTimeZone]
  -[EKReminder setStartDateTimeZone:]
  -[EKReminder startDateAllDay]
  -[EKReminder setStartDateAllDay:]
  -[EKReminder _generateNewUniqueID]
  -[EKReminder snoozeAlarm:withTimeIntervalFromNow:]
  -[EKReminder firstAlertDate]
  -[EKReminder setFirstAlertDate:]
  -[EKReminder clearParentID]
  -[EKReminder bestDisplayAlarm]


EKRecurrenceChange : EKObjectChange <EKOwnerIDProviding>
 @property  EKObjectID *ownerID

  // class methods
  +[EKRecurrenceChange entityType]
  +[EKRecurrenceChange fetchRecurrenceChangesInStore:resultHandler:]
  +[EKRecurrenceChange fetchRecurrenceChangesInSource:resultHandler:]
  +[EKRecurrenceChange fetchRecurrenceChangesInCalendar:resultHandler:]

  // instance methods
  -[EKRecurrenceChange .cxx_destruct]
  -[EKRecurrenceChange ownerID]
  -[EKRecurrenceChange initWithChangeProperties:]


_EKNotificationMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *notificationQueue
 @property  EKTimedEventStorePurger *eventStorePurger
 @property  EKEventStore *eventStore
 @property  unsigned long notificationCount
 @property  NSArray *notificationReferences

  // class methods
  +[_EKNotificationMonitor logHandle]
  +[_EKNotificationMonitor requestedDarwinNotifications]

  // instance methods
  -[_EKNotificationMonitor init]
  -[_EKNotificationMonitor dealloc]
  -[_EKNotificationMonitor initWithOptions:]
  -[_EKNotificationMonitor .cxx_destruct]
  -[_EKNotificationMonitor stop]
  -[_EKNotificationMonitor start]
  -[_EKNotificationMonitor notificationQueue]
  -[_EKNotificationMonitor _timerFired]
  -[_EKNotificationMonitor _syncDidStart]
  -[_EKNotificationMonitor eventStore]
  -[_EKNotificationMonitor _eventStore]
  -[_EKNotificationMonitor _eventStoreChanged]
  -[_EKNotificationMonitor attemptReload]
  -[_EKNotificationMonitor adjust]
  -[_EKNotificationMonitor initWithOptions:eventStore:]
  -[_EKNotificationMonitor notificationCount]
  -[_EKNotificationMonitor notificationReferences]
  -[_EKNotificationMonitor _eventStoreChangedNotification:]
  -[_EKNotificationMonitor _initWithOptions:eventStore:eventStoreGetter:]
  -[_EKNotificationMonitor _killSyncTimer:]
  -[_EKNotificationMonitor _resetTimer]
  -[_EKNotificationMonitor killTimer]
  -[_EKNotificationMonitor attemptReloadSynchronously:]
  -[_EKNotificationMonitor _fetchEventNotificationReferencesFromEventStore:]
  -[_EKNotificationMonitor _addRemovedOrAddedObjectIDsTo:oldNotifications:newNotifications:]
  -[_EKNotificationMonitor _syncDidEnd:]
  -[_EKNotificationMonitor _notificationCountChangedExternally]
  -[_EKNotificationMonitor _alertPrefChanged]
  -[_EKNotificationMonitor _databaseChanged]
  -[_EKNotificationMonitor trackChangesInEventStore]
  -[_EKNotificationMonitor _syncTimerFired:]
  -[_EKNotificationMonitor _resetSyncTimer]
  -[_EKNotificationMonitor initWithOptions:eventStoreGetter:]
  -[_EKNotificationMonitor handleDarwinNotification:]
  -[_EKNotificationMonitor eventStorePurger]


EKDirectoryRecord : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *displayName
 @property  NSString *preferredAddress
 @property  NSString *principalPath
 @property  NSDictionary *userInfo

  // instance methods
  -[EKDirectoryRecord userInfo]
  -[EKDirectoryRecord .cxx_destruct]
  -[EKDirectoryRecord displayName]
  -[EKDirectoryRecord setDisplayName:]
  -[EKDirectoryRecord principalPath]
  -[EKDirectoryRecord setPrincipalPath:]
  -[EKDirectoryRecord preferredAddress]
  -[EKDirectoryRecord setPreferredAddress:]


EKDebugPreferences : NSObject /usr/lib/libSystem.B.dylib
 @property  double availabilityFreshnessWindow
 @property  BOOL overrideTravelAdvisoryHypothesis
 @property  NSString *overriddenTravelAdvisoryHypothesisTransportType
 @property  double overriddenTravelAdvisoryHypothesisConservativeTravelTime
 @property  double overriddenTravelAdvisoryHypothesisEstimatedTravelTime
 @property  double overriddenTravelAdvisoryHypothesisAggressiveTravelTime
 @property  BOOL overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
 @property  NSString *overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
 @property  NSString *overriddenTravelAdvisoryHypothesisRouteName
 @property  NSString *overriddenTravelAdvisoryHypothesisTravelState
 @property  BOOL preventMarkingTravelAdvisoryEntriesAsDismissed
 @property  BOOL forceDisplayOfNewTravelAdvisoryHypotheses
 @property  BOOL saveGeocodedLocationsInTravelEngine
 @property  BOOL performAgendaEntryEqualityChecksInTravelEngine
 @property  BOOL verifyIntegrityOfAvailabilityTimeSearchTimelines
 @property  BOOL showDepartureDateForTransitTimeToLeave
 @property  BOOL shouldBypassTravelEngineThrottle
 @property  BOOL syntheticTravelAdvisoriesEnabled

  // class methods
  +[EKDebugPreferences shared]

  // instance methods
  -[EKDebugPreferences init]
  -[EKDebugPreferences .cxx_destruct]
  -[EKDebugPreferences verifyIntegrityOfAvailabilityTimeSearchTimelines]
  -[EKDebugPreferences availabilityFreshnessWindow]
  -[EKDebugPreferences setAvailabilityFreshnessWindow:]
  -[EKDebugPreferences saveGeocodedLocationsInTravelEngine]
  -[EKDebugPreferences setSaveGeocodedLocationsInTravelEngine:]
  -[EKDebugPreferences overrideTravelAdvisoryHypothesis]
  -[EKDebugPreferences setOverrideTravelAdvisoryHypothesis:]
  -[EKDebugPreferences overriddenTravelAdvisoryHypothesisTransportType]
  -[EKDebugPreferences setOverriddenTravelAdvisoryHypothesisTransportType:]
  -[EKDebugPreferences overriddenTravelAdvisoryHypothesisConservativeTravelTime]
  -[EKDebugPreferences setOverriddenTravelAdvisoryHypothesisConservativeTravelTime:]
  -[EKDebugPreferences overriddenTravelAdvisoryHypothesisEstimatedTravelTime]
  -[EKDebugPreferences setOverriddenTravelAdvisoryHypothesisEstimatedTravelTime:]
  -[EKDebugPreferences overriddenTravelAdvisoryHypothesisAggressiveTravelTime]
  -[EKDebugPreferences setOverriddenTravelAdvisoryHypothesisAggressiveTravelTime:]
  -[EKDebugPreferences overriddenTravelAdvisoryHypothesisSupportsLiveTraffic]
  -[EKDebugPreferences setOverriddenTravelAdvisoryHypothesisSupportsLiveTraffic:]
  -[EKDebugPreferences overriddenTravelAdvisoryHypothesisCurrentTrafficDensity]
  -[EKDebugPreferences setOverriddenTravelAdvisoryHypothesisCurrentTrafficDensity:]
  -[EKDebugPreferences overriddenTravelAdvisoryHypothesisRouteName]
  -[EKDebugPreferences setOverriddenTravelAdvisoryHypothesisRouteName:]
  -[EKDebugPreferences overriddenTravelAdvisoryHypothesisTravelState]
  -[EKDebugPreferences setOverriddenTravelAdvisoryHypothesisTravelState:]
  -[EKDebugPreferences preventMarkingTravelAdvisoryEntriesAsDismissed]
  -[EKDebugPreferences setPreventMarkingTravelAdvisoryEntriesAsDismissed:]
  -[EKDebugPreferences forceDisplayOfNewTravelAdvisoryHypotheses]
  -[EKDebugPreferences setForceDisplayOfNewTravelAdvisoryHypotheses:]
  -[EKDebugPreferences performAgendaEntryEqualityChecksInTravelEngine]
  -[EKDebugPreferences setPerformAgendaEntryEqualityChecksInTravelEngine:]
  -[EKDebugPreferences setVerifyIntegrityOfAvailabilityTimeSearchTimelines:]
  -[EKDebugPreferences showDepartureDateForTransitTimeToLeave]
  -[EKDebugPreferences setShowDepartureDateForTransitTimeToLeave:]
  -[EKDebugPreferences shouldBypassTravelEngineThrottle]
  -[EKDebugPreferences setShouldBypassTravelEngineThrottle:]
  -[EKDebugPreferences syntheticTravelAdvisoriesEnabled]
  -[EKDebugPreferences setSyntheticTravelAdvisoriesEnabled:]


EKPersistentNotification : EKPersistentObject
  // class methods
  +[EKPersistentNotification relations]

  // instance methods
  -[EKPersistentNotification calendar]
  -[EKPersistentNotification UUID]
  -[EKPersistentNotification setUUID:]
  -[EKPersistentNotification externalID]
  -[EKPersistentNotification setExternalID:]
  -[EKPersistentNotification externalModificationTag]
  -[EKPersistentNotification setExternalModificationTag:]
  -[EKPersistentNotification entityType]
  -[EKPersistentNotification hostURL]
  -[EKPersistentNotification setHostURL:]


EKFrozenReminderAlarm : EKFrozenReminderObject
 @property  NSArray *alarms
 @property  NSArray *triggers
 @property  NSString *externalID
 @property  EKFrozenReminderStructuredLocation *structuredLocation

  // class methods
  +[EKFrozenReminderAlarm uniqueIdentifierForREMObject:]
  +[EKFrozenReminderAlarm meltedClass]
  +[EKFrozenReminderAlarm semanticIdentifierFromREMAlarm:]
  +[EKFrozenReminderAlarm triggersFromAbsoluteDate:relativeOffset:timeValuesRelevant:structuredLocation:proximity:]
  +[EKFrozenReminderAlarm ekAlarmProximityToEKAlarmProximity:]
  +[EKFrozenReminderAlarm semanticIdentifierFromDateComponents:]
  +[EKFrozenReminderAlarm remAlarmProximityToEKAlarmProximity:]

  // instance methods
  -[EKFrozenReminderAlarm .cxx_destruct]
  -[EKFrozenReminderAlarm UUID]
  -[EKFrozenReminderAlarm uniqueIdentifier]
  -[EKFrozenReminderAlarm proximity]
  -[EKFrozenReminderAlarm externalID]
  -[EKFrozenReminderAlarm triggers]
  -[EKFrozenReminderAlarm alarms]
  -[EKFrozenReminderAlarm absoluteDate]
  -[EKFrozenReminderAlarm relativeOffset]
  -[EKFrozenReminderAlarm structuredLocation]
  -[EKFrozenReminderAlarm remObjectID]
  -[EKFrozenReminderAlarm initWithREMObject:inStore:withChanges:]
  -[EKFrozenReminderAlarm _applyChangesToSaveRequest:error:]
  -[EKFrozenReminderAlarm initWithAlarms:inStore:withChanges:]
  -[EKFrozenReminderAlarm semanticIdentifier]
  -[EKFrozenReminderAlarm _applyChanges:error:]
  -[EKFrozenReminderAlarm isDefaultAlarm]
  -[EKFrozenReminderAlarm originalAlarm]
  -[EKFrozenReminderAlarm updatedFrozenObjectWithChanges:updatedChildren:]
  -[EKFrozenReminderAlarm initWithAlternateUniverseObject:inEventStore:withUpdatedChildObjects:]
  -[EKFrozenReminderAlarm modifiedStructuredLocation]
  -[EKFrozenReminderAlarm _setTimeOrLocationAlarm:]
  -[EKFrozenReminderAlarm _setTimeAndLocationAlarms:]
  -[EKFrozenReminderAlarm _timeAlarm]
  -[EKFrozenReminderAlarm _locationAlarm]
  -[EKFrozenReminderAlarm _remStructuredLocation]
  -[EKFrozenReminderAlarm initWithAlarms:inStore:]
  -[EKFrozenReminderAlarm updatedAlarmWithLocation:]


EKPersistentOrganizer : EKPersistentParticipant
 @property  NSString *displayName
 @property  NSString *emailAddress
 @property  NSURL *address
 @property  BOOL currentUser

  // class methods
  +[EKPersistentOrganizer relations]
  +[EKPersistentOrganizer defaultPropertiesToLoad]
  +[EKPersistentOrganizer meltedClass]
  +[EKPersistentOrganizer organizerWithName:emailAddress:address:isCurrentUser:]

  // instance methods
  -[EKPersistentOrganizer copyWithZone:]
  -[EKPersistentOrganizer setOwner:]
  -[EKPersistentOrganizer owner]
  -[EKPersistentOrganizer setCurrentUser:]
  -[EKPersistentOrganizer isCurrentUser]
  -[EKPersistentOrganizer entityType]
  -[EKPersistentOrganizer initWithName:emailAddress:address:isCurrentUser:]


EKOrganizerChange : EKParticipantChange <EKOwnerIDProviding>
 @property  EKObjectID *ownerID

  // class methods
  +[EKOrganizerChange entityType]
  +[EKOrganizerChange fetchOrganizerChangesInStore:resultHandler:]
  +[EKOrganizerChange fetchOrganizerChangesInSource:resultHandler:]
  +[EKOrganizerChange fetchOrganizerChangesInCalendar:resultHandler:]

  // instance methods
  -[EKOrganizerChange .cxx_destruct]
  -[EKOrganizerChange ownerID]
  -[EKOrganizerChange initWithChangeProperties:]


EKTravelAdvisoryTimelinessAuthority : NSObject /usr/lib/libSystem.B.dylib <CalActivatable>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSObject<OS_dispatch_source> *timer
 @property  NSDate *startOfLeaveNowPeriodInternal
 @property  NSDate *startOfRunningLatePeriodInternal
 @property  BOOL internalActive
 @property  unsigned long internalPeriod
 @property  @? internalPeriodChangedCallback
 @property  <CalDateProvider> *dateProvider
 @property  NSDate *startOfLeaveNowPeriod
 @property  NSDate *startOfRunningLatePeriod
 @property  @? periodChangedCallback
 @property  unsigned long period

  // class methods
  +[EKTravelAdvisoryTimelinessAuthority stringForPeriod:]

  // instance methods
  -[EKTravelAdvisoryTimelinessAuthority init]
  -[EKTravelAdvisoryTimelinessAuthority dealloc]
  -[EKTravelAdvisoryTimelinessAuthority .cxx_destruct]
  -[EKTravelAdvisoryTimelinessAuthority callbackQueue]
  -[EKTravelAdvisoryTimelinessAuthority timer]
  -[EKTravelAdvisoryTimelinessAuthority setTimer:]
  -[EKTravelAdvisoryTimelinessAuthority period]
  -[EKTravelAdvisoryTimelinessAuthority workQueue]
  -[EKTravelAdvisoryTimelinessAuthority setCallbackQueue:]
  -[EKTravelAdvisoryTimelinessAuthority setWorkQueue:]
  -[EKTravelAdvisoryTimelinessAuthority active]
  -[EKTravelAdvisoryTimelinessAuthority activate]
  -[EKTravelAdvisoryTimelinessAuthority deactivate]
  -[EKTravelAdvisoryTimelinessAuthority _refreshTimer]
  -[EKTravelAdvisoryTimelinessAuthority _refresh]
  -[EKTravelAdvisoryTimelinessAuthority _refreshPeriod]
  -[EKTravelAdvisoryTimelinessAuthority _uninstallTimer]
  -[EKTravelAdvisoryTimelinessAuthority initWithDateProvider:]
  -[EKTravelAdvisoryTimelinessAuthority internalActive]
  -[EKTravelAdvisoryTimelinessAuthority setInternalActive:]
  -[EKTravelAdvisoryTimelinessAuthority startOfLeaveNowPeriodInternal]
  -[EKTravelAdvisoryTimelinessAuthority startOfRunningLatePeriodInternal]
  -[EKTravelAdvisoryTimelinessAuthority setStartOfLeaveNowPeriodInternal:]
  -[EKTravelAdvisoryTimelinessAuthority setStartOfRunningLatePeriodInternal:]
  -[EKTravelAdvisoryTimelinessAuthority setInternalPeriodChangedCallback:]
  -[EKTravelAdvisoryTimelinessAuthority internalPeriodChangedCallback]
  -[EKTravelAdvisoryTimelinessAuthority internalPeriod]
  -[EKTravelAdvisoryTimelinessAuthority dateProvider]
  -[EKTravelAdvisoryTimelinessAuthority setInternalPeriod:]
  -[EKTravelAdvisoryTimelinessAuthority _refreshOnDate:]
  -[EKTravelAdvisoryTimelinessAuthority startOfLeaveNowPeriod]
  -[EKTravelAdvisoryTimelinessAuthority startOfRunningLatePeriod]
  -[EKTravelAdvisoryTimelinessAuthority updateWithHypothesis:]
  -[EKTravelAdvisoryTimelinessAuthority setPeriodChangedCallback:]
  -[EKTravelAdvisoryTimelinessAuthority periodChangedCallback]


EKResourceChangeNotification : EKNotification
 @property  NSDate *lastModifiedDate
 @property  NSSet *resourceChanges

  // class methods
  +[EKResourceChangeNotification frozenClass]
  +[EKResourceChangeNotification knownRelationshipMultiValueKeys]

  // instance methods
  -[EKResourceChangeNotification lastModifiedDate]
  -[EKResourceChangeNotification setLastModifiedDate:]
  -[EKResourceChangeNotification resourceChanges]
  -[EKResourceChangeNotification setResourceChanges:]
  -[EKResourceChangeNotification addResourceChange:]
  -[EKResourceChangeNotification removeResourceChange:]


EKExceptionDate : EKObject <NSCopying>
 @property  NSDate *date

  // class methods
  +[EKExceptionDate frozenClass]

  // instance methods
  -[EKExceptionDate copyWithZone:]
  -[EKExceptionDate date]
  -[EKExceptionDate initWithDate:]
  -[EKExceptionDate setDate:]


EKBirthdayListener : NSObject /usr/lib/libSystem.B.dylib <CalContactsProviderDelegate>
  // class methods
  +[EKBirthdayListener sharedListener]
  +[EKBirthdayListener eventStoreProvider]

  // instance methods
  -[EKBirthdayListener .cxx_destruct]
  -[EKBirthdayListener reset]
  -[EKBirthdayListener initSingleton]
  -[EKBirthdayListener eventStore]
  -[EKBirthdayListener _localeChanged]
  -[EKBirthdayListener contactsReset]
  -[EKBirthdayListener contactsInserted:updated:deleted:]
  -[EKBirthdayListener areBirthdaysEnabled]
  -[EKBirthdayListener birthdayCalendarsInStore:]
  -[EKBirthdayListener resetAllBirthdaysInStore:]
  -[EKBirthdayListener disableBirthdayCalendarsInStore:]
  -[EKBirthdayListener checkForFailures]
  -[EKBirthdayListener insertEventWithContact:forDateComponents:intoCalendar:inStore:]
  -[EKBirthdayListener birthdayCalendarsCreateIfNeeded:inStore:originalIdentifier:originalAlarms:ignoreAlarms:]
  -[EKBirthdayListener allContactsWithBirthdays]
  -[EKBirthdayListener _insertEventsForContact:intoCalendar:inStore:]
  -[EKBirthdayListener addBirthdayCalendars]
  -[EKBirthdayListener disableBirthdayCalendars]


EKPersistentEvent : EKPersistentCalendarItem
  // class methods
  +[EKPersistentEvent relations]
  +[EKPersistentEvent defaultPropertiesToLoad]
  +[EKPersistentEvent meltedClass]
  +[EKPersistentEvent eventWithRandomUUID]

  // instance methods
  -[EKPersistentEvent copyWithZone:]
  -[EKPersistentEvent endDate]
  -[EKPersistentEvent status]
  -[EKPersistentEvent setEndDate:]
  -[EKPersistentEvent setStatus:]
  -[EKPersistentEvent actions]
  -[EKPersistentEvent setActions:]
  -[EKPersistentEvent travelTime]
  -[EKPersistentEvent setTravelTime:]
  -[EKPersistentEvent organizer]
  -[EKPersistentEvent availability]
  -[EKPersistentEvent setAvailability:]
  -[EKPersistentEvent entityType]
  -[EKPersistentEvent proposedStartDate]
  -[EKPersistentEvent suggestionInfo]
  -[EKPersistentEvent setProposedStartDate:]
  -[EKPersistentEvent setInvitationStatus:]
  -[EKPersistentEvent responseComment]
  -[EKPersistentEvent setResponseComment:]
  -[EKPersistentEvent privacyLevel]
  -[EKPersistentEvent setPrivacyLevel:]
  -[EKPersistentEvent setSuggestionInfo:]
  -[EKPersistentEvent setTravelAdvisoryBehavior:]
  -[EKPersistentEvent originalStartDate]
  -[EKPersistentEvent birthdayContactIdentifier]
  -[EKPersistentEvent canForward]
  -[EKPersistentEvent invitationStatus]
  -[EKPersistentEvent setJunkStatus:]
  -[EKPersistentEvent junkStatus]
  -[EKPersistentEvent conferenceURL]
  -[EKPersistentEvent setConferenceURL:]
  -[EKPersistentEvent birthdayContactName]
  -[EKPersistentEvent setOriginalStartDate:]
  -[EKPersistentEvent travelAdvisoryBehavior]
  -[EKPersistentEvent locationPredictionState]
  -[EKPersistentEvent setLocationPredictionState:]
  -[EKPersistentEvent birthdayID]
  -[EKPersistentEvent setBirthdayID:]
  -[EKPersistentEvent setCanForward:]
  -[EKPersistentEvent disallowProposeNewTime]
  -[EKPersistentEvent setDisallowProposeNewTime:]
  -[EKPersistentEvent pushDirtyProperties:]
  -[EKPersistentEvent suggestedEventInfo]
  -[EKPersistentEvent setSuggestedEventInfo:]
  -[EKPersistentEvent needsOccurrenceCacheUpdate]
  -[EKPersistentEvent setNeedsOccurrenceCacheUpdate:]
  -[EKPersistentEvent invitationChangedProperties]
  -[EKPersistentEvent setInvitationChangedProperties:]
  -[EKPersistentEvent externalTrackingStatus]
  -[EKPersistentEvent setExternalTrackingStatus:]
  -[EKPersistentEvent setBirthdayContactIdentifier:]
  -[EKPersistentEvent setBirthdayContactName:]
  -[EKPersistentEvent recurrenceSet]
  -[EKPersistentEvent setRecurrenceSet:]
  -[EKPersistentEvent firedTTL]
  -[EKPersistentEvent setFiredTTL:]


EKTravelEngineHypothesis : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  int transportType
 @property  NSDate *conservativeDepartureDate
 @property  double conservativeTravelTime
 @property  NSDate *suggestedDepartureDate
 @property  double estimatedTravelTime
 @property  NSDate *aggressiveDepartureDate
 @property  double aggressiveTravelTime
 @property  NSString *routeName
 @property  BOOL supportsLiveTraffic
 @property  unsigned long currentTrafficDensity
 @property  NSString *trafficDensityDescription
 @property  long long travelState

  // class methods
  +[EKTravelEngineHypothesis supportsSecureCoding]
  +[EKTravelEngineHypothesis syntheticHypothesisWithStartDate:conservativeTravelTime:estimatedTravelTime:aggressiveTravelTime:]

  // instance methods
  -[EKTravelEngineHypothesis isEqual:]
  -[EKTravelEngineHypothesis copyWithZone:]
  -[EKTravelEngineHypothesis mutableCopyWithZone:]
  -[EKTravelEngineHypothesis encodeWithCoder:]
  -[EKTravelEngineHypothesis initWithCoder:]
  -[EKTravelEngineHypothesis .cxx_destruct]
  -[EKTravelEngineHypothesis transportType]
  -[EKTravelEngineHypothesis travelState]
  -[EKTravelEngineHypothesis suggestedDepartureDate]
  -[EKTravelEngineHypothesis currentTrafficDensity]
  -[EKTravelEngineHypothesis supportsLiveTraffic]
  -[EKTravelEngineHypothesis estimatedTravelTime]
  -[EKTravelEngineHypothesis conservativeDepartureDate]
  -[EKTravelEngineHypothesis aggressiveDepartureDate]
  -[EKTravelEngineHypothesis routeName]
  -[EKTravelEngineHypothesis aggressiveTravelTime]
  -[EKTravelEngineHypothesis conservativeTravelTime]
  -[EKTravelEngineHypothesis trafficDensityDescription]
  -[EKTravelEngineHypothesis isEqualToHypothesis:]
  -[EKTravelEngineHypothesis initWithTransportType:conservativeDepartureDate:conservativeTravelTime:suggestedDepartureDate:estimatedTravelTime:aggressiveDepartureDate:aggressiveTravelTime:routeName:supportsLiveTraffic:currentTrafficDensity:trafficDensityDescription:travelState:]


EKMutableTravelEngineHypothesis : EKTravelEngineHypothesis
 @property  int transportType
 @property  NSDate *conservativeDepartureDate
 @property  double conservativeTravelTime
 @property  NSDate *suggestedDepartureDate
 @property  double estimatedTravelTime
 @property  NSDate *aggressiveDepartureDate
 @property  double aggressiveTravelTime
 @property  NSString *routeName
 @property  BOOL supportsLiveTraffic
 @property  unsigned long currentTrafficDensity
 @property  NSString *trafficDensityDescription
 @property  long long travelState

  // instance methods
  -[EKMutableTravelEngineHypothesis copyWithZone:]
  -[EKMutableTravelEngineHypothesis setTransportType:]
  -[EKMutableTravelEngineHypothesis setSupportsLiveTraffic:]
  -[EKMutableTravelEngineHypothesis setRouteName:]
  -[EKMutableTravelEngineHypothesis setAggressiveTravelTime:]
  -[EKMutableTravelEngineHypothesis setConservativeTravelTime:]
  -[EKMutableTravelEngineHypothesis setTravelState:]
  -[EKMutableTravelEngineHypothesis setConservativeDepartureDate:]
  -[EKMutableTravelEngineHypothesis setSuggestedDepartureDate:]
  -[EKMutableTravelEngineHypothesis setEstimatedTravelTime:]
  -[EKMutableTravelEngineHypothesis setAggressiveDepartureDate:]
  -[EKMutableTravelEngineHypothesis setCurrentTrafficDensity:]
  -[EKMutableTravelEngineHypothesis setTrafficDensityDescription:]


EKEventActionChange : EKObjectChange <EKOwnerIDProviding>
 @property  EKObjectID *ownerID

  // class methods
  +[EKEventActionChange entityType]
  +[EKEventActionChange fetchEventActionChangesInStore:resultHandler:]
  +[EKEventActionChange fetchEventActionChangesInSource:resultHandler:]
  +[EKEventActionChange fetchEventActionChangesInCalendar:resultHandler:]

  // instance methods
  -[EKEventActionChange .cxx_destruct]
  -[EKEventActionChange ownerID]
  -[EKEventActionChange initWithChangeProperties:]


EKFrozenReminderStructuredLocation : EKFrozenReminderObject
 @property  NSString *uniqueIdentifier

  // class methods
  +[EKFrozenReminderStructuredLocation canCommitSelf]
  +[EKFrozenReminderStructuredLocation uniqueIdentifierForREMObject:]
  +[EKFrozenReminderStructuredLocation meltedClass]

  // instance methods
  -[EKFrozenReminderStructuredLocation uuid]
  -[EKFrozenReminderStructuredLocation title]
  -[EKFrozenReminderStructuredLocation uniqueIdentifier]
  -[EKFrozenReminderStructuredLocation radius]
  -[EKFrozenReminderStructuredLocation latitude]
  -[EKFrozenReminderStructuredLocation longitude]
  -[EKFrozenReminderStructuredLocation referenceFrame]
  -[EKFrozenReminderStructuredLocation mapKitHandle]
  -[EKFrozenReminderStructuredLocation _structuredLocation]
  -[EKFrozenReminderStructuredLocation remObjectID]
  -[EKFrozenReminderStructuredLocation updateParentToCommitSelf:]
  -[EKFrozenReminderStructuredLocation initWithAlternateUniverseObject:inEventStore:withUpdatedChildObjects:]
  -[EKFrozenReminderStructuredLocation updatedStructuredLocation]
  -[EKFrozenReminderStructuredLocation setLatitudeAndLongitudeFromAlternateUniverseObject:inChangeSet:]


EKWeakReference : NSObject /usr/lib/libSystem.B.dylib
 @property  id value

  // instance methods
  -[EKWeakReference .cxx_destruct]
  -[EKWeakReference value]
  -[EKWeakReference setValue:]
  -[EKWeakReference initWithValue:]


EKPersistentObject : NSObject /usr/lib/libSystem.B.dylib <EKProtocolObject, EKFrozenMeltedPair>
 @property  NSMutableDictionary *committedProperties
 @property  int entityType
 @property  EKEventStore *eventStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL canBeConvertedToFullObject
 @property  BOOL isPartialObject
 @property  NSDictionary *preFrozenRelationshipObjects
 @property  BOOL isFrozen
 @property  NSString *uniqueIdentifier
 @property  NSString *semanticIdentifier

  // class methods
  +[EKPersistentObject relations]
  +[EKPersistentObject frozenClass]
  +[EKPersistentObject defaultPropertiesToLoad]
  +[EKPersistentObject meltedClass]
  +[EKPersistentObject propertiesUnavailableForPartialObjects]
  +[EKPersistentObject alternateUniverseClass]
  +[EKPersistentObject _relationForKey:]
  +[EKPersistentObject _shouldRetainPropertyForKey:]

  // instance methods
  -[EKPersistentObject init]
  -[EKPersistentObject dealloc]
  -[EKPersistentObject isEqual:]
  -[EKPersistentObject initWithObject:]
  -[EKPersistentObject .cxx_destruct]
  -[EKPersistentObject dump]
  -[EKPersistentObject reset]
  -[EKPersistentObject uniqueIdentifier]
  -[EKPersistentObject objectID]
  -[EKPersistentObject rollback]
  -[EKPersistentObject changeSet]
  -[EKPersistentObject refresh]
  -[EKPersistentObject isFrozen]
  -[EKPersistentObject isDirty]
  -[EKPersistentObject _setObjectID:]
  -[EKPersistentObject dirtyProperties]
  -[EKPersistentObject isPropertyDirty:]
  -[EKPersistentObject _setProperty:forKey:]
  -[EKPersistentObject _propertyForKey:]
  -[EKPersistentObject changed]
  -[EKPersistentObject isNew]
  -[EKPersistentObject entityType]
  -[EKPersistentObject eventStore]
  -[EKPersistentObject committedValueForKey:]
  -[EKPersistentObject isPartialObject]
  -[EKPersistentObject canBeConvertedToFullObject]
  -[EKPersistentObject frozenClass]
  -[EKPersistentObject meltedObjectInStore:]
  -[EKPersistentObject primitiveRelationValueForKey:]
  -[EKPersistentObject primitiveSetStringValue:forKey:]
  -[EKPersistentObject primitiveStringValueForKey:]
  -[EKPersistentObject primitiveURLValueForKey:]
  -[EKPersistentObject primitiveSetURLValue:forKey:]
  -[EKPersistentObject primitiveIntValueForKey:]
  -[EKPersistentObject primitiveSetIntValue:forKey:]
  -[EKPersistentObject primitiveDateValueForKey:]
  -[EKPersistentObject primitiveSetDateValue:forKey:]
  -[EKPersistentObject primitiveBoolValueForKey:]
  -[EKPersistentObject primitiveSetRelationValue:forKey:]
  -[EKPersistentObject primitiveDataValueForKey:]
  -[EKPersistentObject primitiveSetDataValue:forKey:]
  -[EKPersistentObject primitiveSetBoolValue:forKey:]
  -[EKPersistentObject _isNew]
  -[EKPersistentObject frozenObject]
  -[EKPersistentObject existsInStore]
  -[EKPersistentObject _isPendingInsert]
  -[EKPersistentObject existingMeltedObject]
  -[EKPersistentObject isPropertyUnavailable:]
  -[EKPersistentObject isCompletelyEqual:]
  -[EKPersistentObject isEqual:ignoringProperties:]
  -[EKPersistentObject semanticIdentifier]
  -[EKPersistentObject preFrozenRelationshipObjects]
  -[EKPersistentObject primitiveNumberValueForKey:]
  -[EKPersistentObject primitiveSetNumberValue:forKey:]
  -[EKPersistentObject unloadPropertyForKey:]
  -[EKPersistentObject _setEventStore:]
  -[EKPersistentObject initWithAlternateUniverseObject:inEventStore:withUpdatedChildObjects:]
  -[EKPersistentObject pushDirtyProperties:]
  -[EKPersistentObject setAttributes:relations:objectID:eventStore:error:]
  -[EKPersistentObject _isPendingUpdate]
  -[EKPersistentObject _isPendingDelete]
  -[EKPersistentObject _loadedPropertyKeys]
  -[EKPersistentObject _releaseLoadedProperties]
  -[EKPersistentObject _setDefaultPropertiesLoaded:]
  -[EKPersistentObject _setProperty:forKey:forRelation:]
  -[EKPersistentObject _createLoadedPropertiesIfNeeded]
  -[EKPersistentObject _loadRelationForKey:value:]
  -[EKPersistentObject _loadDefaultPropertiesIfNeeded]
  -[EKPersistentObject _loadChildIdentifiersForKey:values:]
  -[EKPersistentObject _addDirtyProperty:]
  -[EKPersistentObject _addObjectCore:toValues:relation:]
  -[EKPersistentObject _removeObjectCore:fromValues:relation:]
  -[EKPersistentObject _primitiveValueForKey:loader:]
  -[EKPersistentObject _primitiveSetValue:forKey:daemonSetter:]
  -[EKPersistentObject _loadStringValueForKey:]
  -[EKPersistentObject _takeValues:forKeys:]
  -[EKPersistentObject isPropertyLoaded:]
  -[EKPersistentObject _setProperty:forKey:isRelation:]
  -[EKPersistentObject _takeValuesForDefaultPropertyKeys:values:]
  -[EKPersistentObject _areDefaultPropertiesLoaded]
  -[EKPersistentObject saved]
  -[EKPersistentObject _setPendingInsert:]
  -[EKPersistentObject _setPendingUpdate:]
  -[EKPersistentObject _setPendingDelete:]
  -[EKPersistentObject primitiveAddRelatedObject:forKey:]
  -[EKPersistentObject primitiveRemoveRelatedObject:forKey:]
  -[EKPersistentObject primitiveDoubleValueForKey:]
  -[EKPersistentObject primitiveSetDoubleValue:forKey:]
  -[EKPersistentObject takeValues:forKeys:]
  -[EKPersistentObject takeValuesForDefaultPropertyKeys:values:]
  -[EKPersistentObject committedProperties]
  -[EKPersistentObject setCommittedProperties:]


EKParticipantChange : EKObjectChange
  // class methods
  +[EKParticipantChange entityType]
  +[EKParticipantChange fetchParticipantChangesInStore:resultHandler:]
  +[EKParticipantChange fetchParticipantChangesInSource:resultHandler:]
  +[EKParticipantChange fetchParticipantChangesInCalendar:resultHandler:]


EKTravelEngineUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKTravelEngineUtilities geoTrafficDensityAsString:]
  +[EKTravelEngineUtilities date:representsApproachingDepartureDateForHypothesis:]
  +[EKTravelEngineUtilities date:representsLatenessForHypothesis:]
  +[EKTravelEngineUtilities travelStateIndicatesTravelingTowardDestination:]
  +[EKTravelEngineUtilities formattedLocationCoordinates:]
  +[EKTravelEngineUtilities geoRouteHypothesisTravelStateForString:]
  +[EKTravelEngineUtilities geoTransportTypeAsString:]
  +[EKTravelEngineUtilities geoTransportTypeForString:]
  +[EKTravelEngineUtilities geoTrafficDensityForString:]
  +[EKTravelEngineUtilities authorizationStatusAsString:]
  +[EKTravelEngineUtilities geoTransportTypeForCalLocationRoutingMode:]
  +[EKTravelEngineUtilities date:representsImmediateDepartureForHypothesis:]
  +[EKTravelEngineUtilities maximumAllowableTravelTime]
  +[EKTravelEngineUtilities minimumAllowableTravelTime]
  +[EKTravelEngineUtilities cadRouteHypothesisForEKTravelEngineHypothesis:]


EKREMReminderPredicate : NSPredicate /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar
  // instance methods
  -[EKREMReminderPredicate .cxx_destruct]
  -[EKREMReminderPredicate predicateFormat]
  -[EKREMReminderPredicate evaluateWithObject:]
  -[EKREMReminderPredicate initWithCalendars:]
  -[EKREMReminderPredicate fetchMatchingRemindersInStore:allLists:error:]
  -[EKREMReminderPredicate remListIDsWithAllLists:]


EKPersistentEventAction : EKPersistentObject
  // class methods
  +[EKPersistentEventAction relations]
  +[EKPersistentEventAction meltedClass]

  // instance methods
  -[EKPersistentEventAction setOwner:]
  -[EKPersistentEventAction owner]
  -[EKPersistentEventAction externalID]
  -[EKPersistentEventAction setExternalID:]
  -[EKPersistentEventAction externalModificationTag]
  -[EKPersistentEventAction setExternalModificationTag:]
  -[EKPersistentEventAction externalRepresentation]
  -[EKPersistentEventAction setExternalRepresentation:]
  -[EKPersistentEventAction entityType]
  -[EKPersistentEventAction externalFolderID]
  -[EKPersistentEventAction setExternalFolderID:]
  -[EKPersistentEventAction externalScheduleID]
  -[EKPersistentEventAction setExternalScheduleID:]


EKAvailabilityUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKAvailabilityUtilities showTypeAsBusy:]
  +[EKAvailabilityUtilities summarizedAvailabilityTypeForSpans:]
  +[EKAvailabilityUtilities spansIncludeBusyPeriod:]
  +[EKAvailabilityUtilities CALFreeBusyTypeFromEKAvailType:]
  +[EKAvailabilityUtilities getCALFreeBusyFromEKSpans:inRange:]
  +[EKAvailabilityUtilities _orderForType:]
  +[EKAvailabilityUtilities leastAvailabileFreeBusyTypeForArray:]
  +[EKAvailabilityUtilities getCALFreeBusyFromResults:forAttendees:inRange:]


EKEvent : EKCalendarItem <EKJunkInvitationProtocol_Private>
 @property  NSArray *locations
 @property  NSArray *locationsWithoutPrediction
 @property  EKCalendarDate *occurrenceStartDate
 @property  EKCalendarDate *occurrenceEndDate
 @property  BOOL occurrenceIsAllDay
 @property  EKCalendarDate *originalOccurrenceStartDate
 @property  EKCalendarDate *originalOccurrenceEndDate
 @property  NSNumber *originalOccurrenceIsAllDay
 @property  BOOL requiresDetachDueToSnoozedAlarm
 @property  int clearModifiedFlags
 @property  long long privacyLevel
 @property  BOOL locationIsAConferenceRoom
 @property  double duration
 @property  double travelTime
 @property  NSDate *startDateIncludingTravel
 @property  BOOL isStartDateDirty
 @property  BOOL isEndDateDirty
 @property  BOOL allowsTravelTimeModifications
 @property  EKStructuredLocation *travelStartLocation
 @property  BOOL automaticLocationGeocodingAllowed
 @property  long long travelAdvisoryBehavior
 @property  BOOL travelAdvisoryBehaviorIsEffectivelyEnabled
 @property  BOOL eligibleForTravelAdvisories
 @property  EKSuggestedEventInfo *suggestionInfo
 @property  NSString *locationWithoutPrediction
 @property  EKStructuredLocation *preferredLocationWithoutPrediction
 @property  NSDate *proposedStartDate
 @property  BOOL allowsProposedTimeModifications
 @property  BOOL isPhantom
 @property  unsigned long cachedJunkStatus
 @property  BOOL isSignificantlyDetached
 @property  BOOL isSignificantlyDetachedIgnoringParticipation
 @property  NSDate *originalStartDate
 @property  NSString *UUID
 @property  NSURL *conferenceURL
 @property  NSURL *externalURL
 @property  BOOL isEditable
 @property  BOOL isPrivateEventSharedToMe
 @property  NSURL *launchURL
 @property  long long participationStatus
 @property  long long pendingParticipationStatus
 @property  NSDate *participationStatusModifiedDate
 @property  BOOL allowsParticipationStatusModifications
 @property  BOOL allowsAvailabilityModifications
 @property  BOOL allowsPrivacyLevelModifications
 @property  long long status
 @property  unsigned long invitationStatus
 @property  BOOL isAlerted
 @property  BOOL dateChanged
 @property  BOOL timeChanged
 @property  BOOL titleChanged
 @property  BOOL locationChanged
 @property  BOOL attendeeComment
 @property  BOOL attendeeStatus
 @property  BOOL attendeeProposedStartDate
 @property  BOOL attendeeDeclinedStartDate
 @property  BOOL attendeeReplyChanged
 @property  int externalTrackingStatus
 @property  NSDate *initialStartDate
 @property  NSDate *initialEndDate
 @property  BOOL isMaster
 @property  BOOL isStatusDirty
 @property  BOOL isAllDayDirty
 @property  EKCalendarDate *startCalendarDateIncludingTravelTime
 @property  double durationIncludingTravel
 @property  long long travelRoutingMode
 @property  BOOL canBeRespondedTo
 @property  BOOL canDetachSingleOccurrence
 @property  BOOL hasAttachmentChanges
 @property  EKCalendarDate *startCalendarDate
 @property  EKCalendarDate *endCalendarDate
 @property  long long locationPredictionState
 @property  BOOL hasPredictedLocation
 @property  BOOL firedTTL
 @property  BOOL responseMustApplyToAll
 @property  unsigned long junkStatus
 @property  NSSet *actions
 @property  NSString *recurrenceSet
 @property  {?=iccccd} startDateGr
 @property  {?=iccccd} endDateGr
 @property  NSString *eventIdentifier
 @property  BOOL allDay
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  EKStructuredLocation *structuredLocation
 @property  EKParticipant *organizer
 @property  long long availability
 @property  BOOL isDetached
 @property  NSDate *occurrenceDate
 @property  NSString *birthdayContactIdentifier
 @property  long long birthdayPersonID
 @property  NSString *birthdayPersonUniqueID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sendersEmail
 @property  NSString *sendersPhoneNumber
 @property  BOOL supportsJunkReporting
 @property  EKEventStore *eventStore

  // class methods
  +[EKEvent eventWithEventStore:]
  +[EKEvent _locationStringForLocations:]
  +[EKEvent frozenClass]
  +[EKEvent knownRelationshipSingleValueKeys]
  +[EKEvent knownRelationshipMultiValueKeys]
  +[EKEvent _eventAvailabilityForParticipantStatus:supportedEventAvailabilities:isAllDayEvent:]
  +[EKEvent generateUniqueIDWithEvent:originalEvent:calendar:]
  +[EKEvent knownKeysToSkipForFutureChanges]
  +[EKEvent knownKeysToUseForFutureChanges]
  +[EKEvent externalUriScheme]

  // instance methods
  -[EKEvent init]
  -[EKEvent isEqual:]
  -[EKEvent setTimeZone:]
  -[EKEvent .cxx_destruct]
  -[EKEvent startDate]
  -[EKEvent endDate]
  -[EKEvent setURL:]
  -[EKEvent status]
  -[EKEvent reset]
  -[EKEvent _reset]
  -[EKEvent title]
  -[EKEvent setTitle:]
  -[EKEvent duration]
  -[EKEvent rollback]
  -[EKEvent setStartDate:]
  -[EKEvent setEndDate:]
  -[EKEvent setStatus:]
  -[EKEvent validate:]
  -[EKEvent refresh]
  -[EKEvent isFloating]
  -[EKEvent actions]
  -[EKEvent setLocations:]
  -[EKEvent isEditable]
  -[EKEvent uniqueId]
  -[EKEvent setActions:]
  -[EKEvent isMaster]
  -[EKEvent launchURL]
  -[EKEvent travelTime]
  -[EKEvent setTravelTime:]
  -[EKEvent locations]
  -[EKEvent isDetached]
  -[EKEvent availability]
  -[EKEvent setAvailability:]
  -[EKEvent setAllDay:]
  -[EKEvent isAllDay]
  -[EKEvent revert]
  -[EKEvent setNotes:]
  -[EKEvent recurrenceRule]
  -[EKEvent setRecurrenceRule:]
  -[EKEvent proposedStartDate]
  -[EKEvent occurrenceDate]
  -[EKEvent suggestionInfo]
  -[EKEvent isProposedTimeEvent]
  -[EKEvent participationStatus]
  -[EKEvent startDateForRecurrence]
  -[EKEvent isStartDateDirty]
  -[EKEvent isEndDateDirty]
  -[EKEvent setProposedStartDate:]
  -[EKEvent serverSupportedProposeNewTime]
  -[EKEvent setInvitationStatus:]
  -[EKEvent setParticipationStatus:]
  -[EKEvent responseComment]
  -[EKEvent setResponseComment:]
  -[EKEvent externalURL]
  -[EKEvent potentialConflictOccurrenceDatesInTimePeriod:]
  -[EKEvent timeChanged]
  -[EKEvent dateChanged]
  -[EKEvent locationChanged]
  -[EKEvent allowsAttendeesModifications]
  -[EKEvent committedCopy]
  -[EKEvent structuredLocation]
  -[EKEvent travelRoutingMode]
  -[EKEvent allowsProposedTimeModifications]
  -[EKEvent eventIdentifier]
  -[EKEvent overrideStartDate:]
  -[EKEvent compareStartDateWithEvent:]
  -[EKEvent startCalendarDateIncludingTravelTime]
  -[EKEvent startDateIncludingTravel]
  -[EKEvent startCalendarDate]
  -[EKEvent locationWithoutPrediction]
  -[EKEvent canBeRespondedTo]
  -[EKEvent setLocationPredictionAllowed:]
  -[EKEvent endCalendarDate]
  -[EKEvent initWithEventStore:]
  -[EKEvent preferredLocationWithoutPrediction]
  -[EKEvent allowsPrivacyLevelModifications]
  -[EKEvent privacyLevel]
  -[EKEvent setPrivacyLevel:]
  -[EKEvent privacyLevelString]
  -[EKEvent conferenceURLForDisplay]
  -[EKEvent couldBeJunk]
  -[EKEvent setSuggestionInfo:]
  -[EKEvent canDetachSingleOccurrence]
  -[EKEvent setStructuredLocation:]
  -[EKEvent isTentative]
  -[EKEvent setTravelAdvisoryBehavior:]
  -[EKEvent eligibleForTravelAdvisories]
  -[EKEvent travelAdvisoryBehaviorIsEffectivelyEnabled]
  -[EKEvent durationIncludingTravel]
  -[EKEvent masterEvent]
  -[EKEvent supportsAddingAttachments]
  -[EKEvent allowsAvailabilityModifications]
  -[EKEvent initialStartDate]
  -[EKEvent initialEndDate]
  -[EKEvent hasAttendeeProposedTimes]
  -[EKEvent _isAllDay]
  -[EKEvent updateWithGeocodedMapItemAndSaveWithCommit:eventStore:error:]
  -[EKEvent locationIsAConferenceRoom]
  -[EKEvent automaticLocationGeocodingAllowed]
  -[EKEvent locationsWithoutPrediction]
  -[EKEvent startDateGr]
  -[EKEvent endDateGr]
  -[EKEvent confirmPredictedLocation:]
  -[EKEvent rejectPredictedLocation]
  -[EKEvent compareStartDateIncludingTravelWithEvent:]
  -[EKEvent originalStartDate]
  -[EKEvent setPredictedLocationFrozen:]
  -[EKEvent changingAllDayPropertyIsAllowed]
  -[EKEvent canMoveToCalendar:fromCalendar:error:]
  -[EKEvent hasAttachmentChanges]
  -[EKEvent isPhantom]
  -[EKEvent setIsJunk:shouldSave:]
  -[EKEvent allowsTravelTimeModifications]
  -[EKEvent requiresDetach]
  -[EKEvent allowsSpansOtherThanThisEvent]
  -[EKEvent isPrivateEventSharedToMe]
  -[EKEvent dismissAcceptedProposeNewTimeNotification]
  -[EKEvent responseMustApplyToAll]
  -[EKEvent isStatusDirty]
  -[EKEvent countOfAttendeeProposedTimes]
  -[EKEvent birthdayContactIdentifier]
  -[EKEvent allowsRecurrenceModifications]
  -[EKEvent validateRecurrenceRule:error:]
  -[EKEvent isAllDayDirty]
  -[EKEvent committedValueForKey:]
  -[EKEvent canForward]
  -[EKEvent initWithPersistentObject:]
  -[EKEvent invitationStatus]
  -[EKEvent initWithPersistentObject:occurrenceDate:]
  -[EKEvent externalURI]
  -[EKEvent setDateChanged:]
  -[EKEvent setTimeChanged:]
  -[EKEvent setLocationChanged:]
  -[EKEvent titleChanged]
  -[EKEvent setTitleChanged:]
  -[EKEvent _dateForNextOccurrence]
  -[EKEvent rebase]
  -[EKEvent markAsCommitted]
  -[EKEvent markAsSaved]
  -[EKEvent defaultAlarms]
  -[EKEvent _generateNewUniqueID]
  -[EKEvent _adjustAfterRebaseForMovingFromOldSource:toNewSource:committingItem:]
  -[EKEvent allowsCalendarModifications]
  -[EKEvent allowsAlarmModifications]
  -[EKEvent snoozeAlarm:withTimeIntervalFromNow:]
  -[EKEvent _willCommit]
  -[EKEvent supportsJunkReporting]
  -[EKEvent setJunkStatus:]
  -[EKEvent junkStatus]
  -[EKEvent cachedJunkStatus]
  -[EKEvent clearDetectedConferenceURL]
  -[EKEvent conferenceURLDetected]
  -[EKEvent conferenceURL]
  -[EKEvent _detectConferenceURL]
  -[EKEvent _prioritizedConferencesSources]
  -[EKEvent _hasChangesForConferenceURLDetection]
  -[EKEvent _updateConferenceURL]
  -[EKEvent _canWriteConferenceURL]
  -[EKEvent setConferenceURL:]
  -[EKEvent setCachedJunkStatus:]
  -[EKEvent _couldBeJunkCommon]
  -[EKEvent setNotesCommon:]
  -[EKEvent setURLCommon:]
  -[EKEvent updateConferenceURLIfNeeded]
  -[EKEvent sendersEmail]
  -[EKEvent sendersPhoneNumber]
  -[EKEvent attendeeReplyChanged]
  -[EKEvent participationStatusModifiedDate]
  -[EKEvent setParticipationStatusModifiedDate:]
  -[EKEvent setBirthdayContact:]
  -[EKEvent setLunarCalendarString:]
  -[EKEvent birthdayContactName]
  -[EKEvent setOriginalStartDate:]
  -[EKEvent travelAdvisoryBehavior]
  -[EKEvent locationPredictionState]
  -[EKEvent setLocationPredictionState:]
  -[EKEvent needsOccurrenceCacheUpdate]
  -[EKEvent setNeedsOccurrenceCacheUpdate:]
  -[EKEvent externalTrackingStatus]
  -[EKEvent setExternalTrackingStatus:]
  -[EKEvent recurrenceSet]
  -[EKEvent setRecurrenceSet:]
  -[EKEvent firedTTL]
  -[EKEvent setFiredTTL:]
  -[EKEvent _effectiveTimeZone]
  -[EKEvent startDateRaw]
  -[EKEvent endDateRaw]
  -[EKEvent setOccurrenceIsAllDay:]
  -[EKEvent occurrenceIsAllDay]
  -[EKEvent setOccurrenceStartDate:]
  -[EKEvent setOccurrenceEndDate:]
  -[EKEvent originalOccurrenceStartDate]
  -[EKEvent occurrenceStartDate]
  -[EKEvent originalOccurrenceEndDate]
  -[EKEvent _clearLocationPredictionCacheIfNotFrozen]
  -[EKEvent _committedStartDate]
  -[EKEvent setOriginalOccurrenceIsAllDay:]
  -[EKEvent updateStartDateForDate:]
  -[EKEvent updateEndDateForDate:]
  -[EKEvent _setStartDate:andClearProposedTimes:]
  -[EKEvent setOriginalOccurrenceStartDate:]
  -[EKEvent occurrenceEndDate]
  -[EKEvent setOriginalOccurrenceEndDate:]
  -[EKEvent setStartDateRaw:]
  -[EKEvent setEndDateRaw:]
  -[EKEvent _isInitialOccurrenceDate:]
  -[EKEvent _gregorianDateCorrectedForTimeZone:fromCalendarDate:orNSDate:]
  -[EKEvent _startDateGrForTimeZone:]
  -[EKEvent _endDateGrForTimeZone:]
  -[EKEvent allowsParticipationStatusModifications]
  -[EKEvent _setInvitationStatusAlertedIfNecessary]
  -[EKEvent _setInvitationStatusUnalertedIfNecessary]
  -[EKEvent _invitationChangedPropertyFlags]
  -[EKEvent _shouldAlertInviteeDeclines]
  -[EKEvent privacyDescription]
  -[EKEvent _invitationChangedPropertyForFlag:]
  -[EKEvent _setInvitationChangedProperty:forFlag:]
  -[EKEvent _updatePredictedLocationCacheIfNeeded]
  -[EKEvent _needsPredictedLocationCacheUpdateHoldingLock]
  -[EKEvent _firstNonConferenceRoomLocationTitle]
  -[EKEvent _updatePredictedLocationCacheIfNeededHoldingLock]
  -[EKEvent _clearLocationPredictionCacheIfNotFrozenHoldingLock]
  -[EKEvent _validateDurationConstrainedToRecurrenceInterval]
  -[EKEvent _validateAlarmIntervalConstrainedToRecurrenceInterval:]
  -[EKEvent hasValidEventAction]
  -[EKEvent isInvitation]
  -[EKEvent _hasExternalIDOrDeliverySource]
  -[EKEvent pendingParticipationStatus]
  -[EKEvent _travelTimeInternalDescription]
  -[EKEvent clearModifiedFlags]
  -[EKEvent setClearModifiedFlags:]
  -[EKEvent _refreshDateForKey:]
  -[EKEvent _sendModifiedNote]
  -[EKEvent setRequiresDetachDueToSnoozedAlarm:]
  -[EKEvent validateWithSpan:error:]
  -[EKEvent _isParticipationStatusDirty]
  -[EKEvent _validateDatesAndRecurrencesGivenSpan:error:]
  -[EKEvent _adjustForNewCalendarBeforeCommit]
  -[EKEvent requiresDetachDueToSnoozedAlarm]
  -[EKEvent _detachWithStartDate:newStartDate:future:]
  -[EKEvent _isSimpleRepeatingEvent]
  -[EKEvent conformsToRecurrenceRules:]
  -[EKEvent _isSignificantlyDetachedComparedToMaster:shouldIgnorePartStat:]
  -[EKEvent _propagateChangesToDetachedEvents:significantlyDetachedEvents:startDateOffset:duration:calendar:]
  -[EKEvent _clearExceptionDatesAndUpdateDetachedOriginalDates]
  -[EKEvent _filterExceptionDates]
  -[EKEvent _applyTimeChangesToMaster]
  -[EKEvent _updateModifiedPropertiesForThisEventAndAllDetachments]
  -[EKEvent _updateModifiedProperties]
  -[EKEvent _updateMasterDate:forChangeToOccurrenceDate:fromOriginalOccurrenceDate:]
  -[EKEvent _addOrganizerToRecentsIfNeeded]
  -[EKEvent _addNewAttendeesToRecentsIfNeeded]
  -[EKEvent originalOccurrenceIsAllDay]
  -[EKEvent _checkStartDateConstraintAgainstDate:timeZone:error:]
  -[EKEvent _occurrenceExistsOnDate:timeZone:]
  -[EKEvent _deleteFromOccurrenceDateOnward:]
  -[EKEvent _deleteThisOccurrence]
  -[EKEvent _updateSelfFromDetachedEventIfNeededForDelete]
  -[EKEvent _cancelDetachedEventsWithSpan:]
  -[EKEvent _eventIsTheOnlyRemainingOccurrence]
  -[EKEvent _noRemainingEarlierOccurrences]
  -[EKEvent _shouldCancelInsteadOfDeleteWithSpan:]
  -[EKEvent _cancelWithSpan:error:]
  -[EKEvent _shouldDeclineInsteadOfDelete]
  -[EKEvent _deleteWithSpan:error:]
  -[EKEvent _shouldPreserveFutureWhenSlicingWithStartDate:newStartDate:]
  -[EKEvent updateEventToEvent:commit:]
  -[EKEvent _fetchedEventIsConflict:forStartDate:endDate:]
  -[EKEvent _clearAttendeeChangedFlags]
  -[EKEvent setAttendeeComment:]
  -[EKEvent setAttendeeStatus:]
  -[EKEvent setAttendeeProposedStartDate:]
  -[EKEvent setAttendeeDeclinedStartDate:]
  -[EKEvent setIsPhantom:]
  -[EKEvent startDatePinnedForAllDay]
  -[EKEvent endDatePinnedForAllDay]
  -[EKEvent markEventAsAttendeeForward]
  -[EKEvent _parentParticipationStatus]
  -[EKEvent birthdayPersonID]
  -[EKEvent lunarCalendarString]
  -[EKEvent clearInvitationStatus]
  -[EKEvent addEventAction:]
  -[EKEvent removeEventAction:]
  -[EKEvent isAlerted]
  -[EKEvent setIsAlerted:]
  -[EKEvent attendeeComment]
  -[EKEvent attendeeStatus]
  -[EKEvent attendeeProposedStartDate]
  -[EKEvent attendeeDeclinedStartDate]
  -[EKEvent hasPredictedLocation]
  -[EKEvent hasSelfAttendee]
  -[EKEvent commitWithSpan:error:]
  -[EKEvent isSignificantlyDetached]
  -[EKEvent isSignificantlyDetachedIgnoringParticipation]
  -[EKEvent removeWithSpan:error:]
  -[EKEvent updateEventToEvent:]
  -[EKEvent scanForConflicts]
  -[EKEvent birthdayPersonUniqueID]


EKOrganizer : EKParticipant
  // class methods
  +[EKOrganizer frozenClass]
  +[EKOrganizer organizerWithName:emailAddress:phoneNumber:address:isCurrentUser:]

  // instance methods
  -[EKOrganizer copyWithZone:]
  -[EKOrganizer owner]
  -[EKOrganizer setCurrentUser:]
  -[EKOrganizer isCurrentUser]
  -[EKOrganizer initWithName:emailAddress:phoneNumber:address:isCurrentUser:]


EKRequestAvailabilityOperation : NSOperation /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar
 @property  NSError *error

  // instance methods
  -[EKRequestAvailabilityOperation init]
  -[EKRequestAvailabilityOperation .cxx_destruct]
  -[EKRequestAvailabilityOperation error]
  -[EKRequestAvailabilityOperation cancel]
  -[EKRequestAvailabilityOperation start]
  -[EKRequestAvailabilityOperation main]
  -[EKRequestAvailabilityOperation setError:]
  -[EKRequestAvailabilityOperation isFinished]
  -[EKRequestAvailabilityOperation isExecuting]
  -[EKRequestAvailabilityOperation isConcurrent]
  -[EKRequestAvailabilityOperation _finishWithError:]
  -[EKRequestAvailabilityOperation initWithSource:startDate:endDate:ignoredEventID:addresses:resultsBlock:]


EKDataProtectionObserver : NSObject /usr/lib/libSystem.B.dylib
 @property  CDBDataProtectionObserver *dataProtectionObserver
 @property  @? stateChangedCallback
 @property  BOOL dataIsAccessible

  // class methods
  +[EKDataProtectionObserver stateChangedNotificationName]

  // instance methods
  -[EKDataProtectionObserver init]
  -[EKDataProtectionObserver .cxx_destruct]
  -[EKDataProtectionObserver setStateChangedCallback:]
  -[EKDataProtectionObserver stateChangedCallback]
  -[EKDataProtectionObserver setDataProtectionObserver:]
  -[EKDataProtectionObserver _dataProtectionStateChanged]
  -[EKDataProtectionObserver dataProtectionObserver]
  -[EKDataProtectionObserver dataIsAccessible]


EKSerializableRecurrenceRule : EKSerializableObject
 @property  long long frequency
 @property  long long interval
 @property  EKRecurrenceEnd *recurrenceEnd
 @property  long long firstDayOfTheWeek
 @property  NSArray *daysOfTheWeek
 @property  NSArray *daysOfTheMonth
 @property  NSArray *daysOfTheYear
 @property  NSArray *weeksOfTheYear
 @property  NSArray *monthsOfTheYear
 @property  NSArray *setPositions

  // class methods
  +[EKSerializableRecurrenceRule classesForKey]

  // instance methods
  -[EKSerializableRecurrenceRule .cxx_destruct]
  -[EKSerializableRecurrenceRule interval]
  -[EKSerializableRecurrenceRule frequency]
  -[EKSerializableRecurrenceRule daysOfTheWeek]
  -[EKSerializableRecurrenceRule daysOfTheMonth]
  -[EKSerializableRecurrenceRule monthsOfTheYear]
  -[EKSerializableRecurrenceRule setRecurrenceEnd:]
  -[EKSerializableRecurrenceRule setPositions]
  -[EKSerializableRecurrenceRule recurrenceEnd]
  -[EKSerializableRecurrenceRule daysOfTheYear]
  -[EKSerializableRecurrenceRule weeksOfTheYear]
  -[EKSerializableRecurrenceRule firstDayOfTheWeek]
  -[EKSerializableRecurrenceRule initWithRecurrenceRule:]
  -[EKSerializableRecurrenceRule createRecurrenceRule:]


EKAttendee : EKParticipant
 @property  long long participantRole
 @property  long long participantStatus
 @property  long long participantType
 @property  NSDate *lastModifiedParticipationStatus
 @property  long long pendingStatus
 @property  BOOL commentChanged
 @property  BOOL statusChanged
 @property  BOOL proposedStartDateChanged

  // class methods
  +[EKAttendee attendeeWithName:url:]
  +[EKAttendee attendeeWithName:emailAddress:]
  +[EKAttendee attendeeWithName:phoneNumber:]
  +[EKAttendee attendeeWithName:emailAddress:phoneNumber:url:]
  +[EKAttendee frozenClass]
  +[EKAttendee _ekParticipantStatusFromCalAttendeeStatus:]
  +[EKAttendee _calAttendeeStatusFromEKParticipantStatus:]
  +[EKAttendee attendeeWithEmailAddress:name:]
  +[EKAttendee attendeeWithName:emailAddress:address:]

  // instance methods
  -[EKAttendee copyWithZone:]
  -[EKAttendee flags]
  -[EKAttendee owner]
  -[EKAttendee setFlags:]
  -[EKAttendee isCurrentUser]
  -[EKAttendee participantRole]
  -[EKAttendee participantStatus]
  -[EKAttendee setParticipantRole:]
  -[EKAttendee setParticipantStatus:]
  -[EKAttendee participantType]
  -[EKAttendee markAsForward]
  -[EKAttendee statusChanged]
  -[EKAttendee commentChanged]
  -[EKAttendee proposedStartDateChanged]
  -[EKAttendee setCommentChanged:]
  -[EKAttendee setStatusChanged:]
  -[EKAttendee setProposedStartDateChanged:]
  -[EKAttendee setParticipantType:]
  -[EKAttendee pendingStatus]
  -[EKAttendee setPendingStatus:]
  -[EKAttendee _isParticipantStatusDirty]
  -[EKAttendee statusRaw]
  -[EKAttendee setStatusRaw:]
  -[EKAttendee setPendingStatusRaw:]
  -[EKAttendee pendingStatusRaw]
  -[EKAttendee _valueForFlag:]
  -[EKAttendee _setFlag:value:]
  -[EKAttendee lastModifiedParticipationStatus]


EKAlarmChange : EKObjectChange <EKOwnerIDProviding>
 @property  EKObjectID *ownerID

  // class methods
  +[EKAlarmChange entityType]
  +[EKAlarmChange fetchAlarmChangesInStore:resultHandler:]
  +[EKAlarmChange fetchAlarmChangesInSource:resultHandler:]
  +[EKAlarmChange fetchAlarmChangesInCalendar:resultHandler:]

  // instance methods
  -[EKAlarmChange .cxx_destruct]
  -[EKAlarmChange ownerID]
  -[EKAlarmChange initWithChangeProperties:]


EKObjectValidationContext : NSObject /usr/lib/libSystem.B.dylib
 @property  EKObject *rootObject
 @property  unsigned long depth
 @property  BOOL reachedMaxDepth

  // instance methods
  -[EKObjectValidationContext .cxx_destruct]
  -[EKObjectValidationContext depth]
  -[EKObjectValidationContext rootObject]
  -[EKObjectValidationContext setDepth:]
  -[EKObjectValidationContext reachedMaxDepth]
  -[EKObjectValidationContext initWithRootObject:]
  -[EKObjectValidationContext faultIfNeededForObject:]
  -[EKObjectValidationContext setReachedMaxDepth:]


EKPersistentSuggestedEventInfo : EKPersistentObject
 @property  EKPersistentEvent *owner
 @property  NSString *opaqueKey
 @property  NSString *uniqueKey
 @property  unsigned long changedFields
 @property  BOOL changesAcknowledged
 @property  NSDate *timestamp
 @property  NSString *extractionGroupIdentifier

  // class methods
  +[EKPersistentSuggestedEventInfo relations]
  +[EKPersistentSuggestedEventInfo meltedClass]
  +[EKPersistentSuggestedEventInfo suggestedEventInfoWithOpaqueKey:uniqueKey:]

  // instance methods
  -[EKPersistentSuggestedEventInfo copyWithZone:]
  -[EKPersistentSuggestedEventInfo setOwner:]
  -[EKPersistentSuggestedEventInfo timestamp]
  -[EKPersistentSuggestedEventInfo owner]
  -[EKPersistentSuggestedEventInfo setTimestamp:]
  -[EKPersistentSuggestedEventInfo entityType]
  -[EKPersistentSuggestedEventInfo uniqueKey]
  -[EKPersistentSuggestedEventInfo opaqueKey]
  -[EKPersistentSuggestedEventInfo extractionGroupIdentifier]
  -[EKPersistentSuggestedEventInfo setChangedFields:]
  -[EKPersistentSuggestedEventInfo semanticIdentifier]
  -[EKPersistentSuggestedEventInfo setOpaqueKey:]
  -[EKPersistentSuggestedEventInfo setUniqueKey:]
  -[EKPersistentSuggestedEventInfo setChangesAcknowledged:]
  -[EKPersistentSuggestedEventInfo setExtractionGroupIdentifier:]
  -[EKPersistentSuggestedEventInfo changedFields]
  -[EKPersistentSuggestedEventInfo changesAcknowledged]


EKRecurrenceDayOfWeek : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  long long dayOfTheWeek
 @property  long long weekNumber

  // class methods
  +[EKRecurrenceDayOfWeek supportsSecureCoding]
  +[EKRecurrenceDayOfWeek dayOfWeek:weekNumber:]
  +[EKRecurrenceDayOfWeek dayOfWeek:]

  // instance methods
  -[EKRecurrenceDayOfWeek isEqual:]
  -[EKRecurrenceDayOfWeek copyWithZone:]
  -[EKRecurrenceDayOfWeek encodeWithCoder:]
  -[EKRecurrenceDayOfWeek initWithCoder:]
  -[EKRecurrenceDayOfWeek initWithDayOfTheWeek:weekNumber:]
  -[EKRecurrenceDayOfWeek weekNumber]
  -[EKRecurrenceDayOfWeek dayOfTheWeek]
  -[EKRecurrenceDayOfWeek iCalendarValueFromDayOfTheWeek:]
  -[EKRecurrenceDayOfWeek iCalendarDescription]


EKDirectoryGroup : EKDirectoryRecord

EKCalendar : EKObject
 @property  unsigned long cachedJunkStatus
 @property  EKSource *source
 @property  NSString *calendarIdentifier
 @property  NSString *title
 @property  long long type
 @property  BOOL allowsContentModifications
 @property  BOOL subscribed
 @property  BOOL immutable
 @property  ^{CGColor=} CGColor
 @property  unsigned long supportedEventAvailabilities
 @property  unsigned long allowedEntityTypes

  // class methods
  +[EKCalendar calendarForEntityType:eventStore:]
  +[EKCalendar frozenClass]
  +[EKCalendar knownRelationshipSingleValueKeys]
  +[EKCalendar knownRelationshipMultiValueKeys]
  +[EKCalendar isWeakRelationship]
  +[EKCalendar calendarForEntityTypes:eventStore:]
  +[EKCalendar _eventKitBundle]
  +[EKCalendar typeDescription:]
  +[EKCalendar rowIDsForCalendars:]
  +[EKCalendar calendarWithEventStore:]

  // instance methods
  -[EKCalendar init]
  -[EKCalendar type]
  -[EKCalendar remove:]
  -[EKCalendar setSource:]
  -[EKCalendar calendarIdentifier]
  -[EKCalendar flags]
  -[EKCalendar source]
  -[EKCalendar reset]
  -[EKCalendar _reset]
  -[EKCalendar title]
  -[EKCalendar setTitle:]
  -[EKCalendar isHidden]
  -[EKCalendar CGColor]
  -[EKCalendar validate:]
  -[EKCalendar refresh]
  -[EKCalendar setFlags:]
  -[EKCalendar setHidden:]
  -[EKCalendar hasTasks]
  -[EKCalendar _setSource:]
  -[EKCalendar externalID]
  -[EKCalendar setExternalID:]
  -[EKCalendar externalModificationTag]
  -[EKCalendar setExternalModificationTag:]
  -[EKCalendar externalRepresentation]
  -[EKCalendar setExternalRepresentation:]
  -[EKCalendar setCalendarIdentifier:]
  -[EKCalendar entityType]
  -[EKCalendar hasEvents]
  -[EKCalendar notes]
  -[EKCalendar setNotes:]
  -[EKCalendar setSubscribed:]
  -[EKCalendar isSubscribed]
  -[EKCalendar alarms]
  -[EKCalendar setAlarms:]
  -[EKCalendar setInvitationStatus:]
  -[EKCalendar symbolicColorName]
  -[EKCalendar supportedEventAvailabilities]
  -[EKCalendar isAffectingAvailability]
  -[EKCalendar isIgnoringEventAlerts]
  -[EKCalendar isFacebookBirthdayCalendar]
  -[EKCalendar isSubscribedHolidayCalendar]
  -[EKCalendar displayOrder]
  -[EKCalendar sharingStatus]
  -[EKCalendar publishURL]
  -[EKCalendar isPublished]
  -[EKCalendar isFamilyCalendar]
  -[EKCalendar sharedOwnerName]
  -[EKCalendar sharees]
  -[EKCalendar canBeShared]
  -[EKCalendar setSharees:]
  -[EKCalendar sharedOwnerEmail]
  -[EKCalendar sharedOwnerPhoneNumber]
  -[EKCalendar isMarkedImmutableSharees]
  -[EKCalendar removeSharee:]
  -[EKCalendar setSharingStatus:]
  -[EKCalendar addSharee:]
  -[EKCalendar setDisplayOrder:]
  -[EKCalendar ownerIdentityAddress]
  -[EKCalendar couldBeJunk]
  -[EKCalendar isImmutable]
  -[EKCalendar isMarkedUndeletable]
  -[EKCalendar allowEvents]
  -[EKCalendar allowedEntityTypes]
  -[EKCalendar allowsScheduling]
  -[EKCalendar isDefaultSchedulingCalendar]
  -[EKCalendar sharedOwnerURL]
  -[EKCalendar allowsContentModifications]
  -[EKCalendar isSuggestedEventCalendar]
  -[EKCalendar setIsAffectingAvailability:]
  -[EKCalendar isNaturalLanguageSuggestedEventCalendar]
  -[EKCalendar isSharingInvitation]
  -[EKCalendar setSymbolicColorName:]
  -[EKCalendar isManaged]
  -[EKCalendar setIsJunk:]
  -[EKCalendar allowsIgnoringSharedEventChangeNotifications]
  -[EKCalendar setIsIgnoringSharedCalendarNotifications:]
  -[EKCalendar isIgnoringSharedCalendarNotifications]
  -[EKCalendar setIsIgnoringEventAlerts:]
  -[EKCalendar selfIdentityEmail]
  -[EKCalendar allowReminders]
  -[EKCalendar canBePublished]
  -[EKCalendar setIsPublished:]
  -[EKCalendar setSharedOwnerName:]
  -[EKCalendar sharedOwnerAddress]
  -[EKCalendar setSharedOwnerAddress:]
  -[EKCalendar setCanBeShared:]
  -[EKCalendar setAllowsEvents:]
  -[EKCalendar _validateDeletable:]
  -[EKCalendar commit:]
  -[EKCalendar colorString]
  -[EKCalendar externalIDTag]
  -[EKCalendar setExternalIDTag:]
  -[EKCalendar syncToken]
  -[EKCalendar setSyncToken:]
  -[EKCalendar setColorString:]
  -[EKCalendar sharingInvitationResponse]
  -[EKCalendar setSharingInvitationResponse:]
  -[EKCalendar invitationStatus]
  -[EKCalendar selfIdentityDisplayName]
  -[EKCalendar setSelfIdentityDisplayName:]
  -[EKCalendar setSelfIdentityEmail:]
  -[EKCalendar selfIdentityPhoneNumber]
  -[EKCalendar setSelfIdentityPhoneNumber:]
  -[EKCalendar selfIdentityAddress]
  -[EKCalendar setSelfIdentityAddress:]
  -[EKCalendar selfIdentityFirstName]
  -[EKCalendar setSelfIdentityFirstName:]
  -[EKCalendar selfIdentityLastName]
  -[EKCalendar setSelfIdentityLastName:]
  -[EKCalendar ownerIdentityDisplayName]
  -[EKCalendar ownerIdentityId]
  -[EKCalendar setOwnerIdentityId:]
  -[EKCalendar setOwnerIdentityDisplayName:]
  -[EKCalendar ownerIdentityEmail]
  -[EKCalendar setOwnerIdentityEmail:]
  -[EKCalendar ownerIdentityPhoneNumber]
  -[EKCalendar setOwnerIdentityPhoneNumber:]
  -[EKCalendar setOwnerIdentityAddress:]
  -[EKCalendar ownerIdentityFirstName]
  -[EKCalendar setOwnerIdentityFirstName:]
  -[EKCalendar ownerIdentityLastName]
  -[EKCalendar setOwnerIdentityLastName:]
  -[EKCalendar bulkRequests]
  -[EKCalendar setBulkRequests:]
  -[EKCalendar subcalAccountID]
  -[EKCalendar setSubcalAccountID:]
  -[EKCalendar pushKey]
  -[EKCalendar setPushKey:]
  -[EKCalendar digest]
  -[EKCalendar setDigest:]
  -[EKCalendar allAlarms]
  -[EKCalendar externalURI]
  -[EKCalendar setAllowedEntityTypes:]
  -[EKCalendar syncHash]
  -[EKCalendar selectionSyncIdentifier]
  -[EKCalendar isMutableSuggestionsCalendar]
  -[EKCalendar isMutableNaturalLanguageSuggestionsCalendar]
  -[EKCalendar findOriginalAlarmStartingWith:]
  -[EKCalendar setAllAlarms:]
  -[EKCalendar snoozeAlarm:withTimeIntervalFromNow:]
  -[EKCalendar snoozeAlarm:withLocation:proximity:]
  -[EKCalendar isAlarmAcknowledgedPropertyDirty]
  -[EKCalendar removeAcknowledgedSnoozedAlarms]
  -[EKCalendar removeAllSnoozedAlarms]
  -[EKCalendar supportsJunkReporting]
  -[EKCalendar cachedJunkStatus]
  -[EKCalendar setCachedJunkStatus:]
  -[EKCalendar sendersEmail]
  -[EKCalendar sendersPhoneNumber]
  -[EKCalendar setCGColor:]
  -[EKCalendar automaticEventLocationGeocodingAllowed]
  -[EKCalendar clearInvitationStatus]
  -[EKCalendar _clearCGColorCache]
  -[EKCalendar unlocalizedTitle]
  -[EKCalendar setColorStringRaw:]
  -[EKCalendar colorStringRaw]
  -[EKCalendar getColorRed:green:blue:]
  -[EKCalendar _flagValueWithMask:]
  -[EKCalendar _setFlagValue:withMask:]
  -[EKCalendar prohibitsScheduling]
  -[EKCalendar setProhibitsScheduling:]
  -[EKCalendar setCanBePublished:]
  -[EKCalendar _allowedEntities]
  -[EKCalendar _setAllowedEntities:]
  -[EKCalendar addAlarms:]
  -[EKCalendar removeAlarms:]
  -[EKCalendar setAllowsContentModifications:]
  -[EKCalendar setIsDefaultSchedulingCalendar:]
  -[EKCalendar isInbox]
  -[EKCalendar setInbox:]
  -[EKCalendar isNotificationsCollection]
  -[EKCalendar setNotificationsCollection:]
  -[EKCalendar isImmutableRaw]
  -[EKCalendar setImmutable:]
  -[EKCalendar setAllowsScheduling:]
  -[EKCalendar setSharingInvitation:]
  -[EKCalendar setPublishURL:]
  -[EKCalendar setFacebookBirthdayCalendar:]
  -[EKCalendar isHolidaySubscribedCalendar]
  -[EKCalendar setSubscribedHolidayCalendar:]
  -[EKCalendar setFamilyCalendar:]
  -[EKCalendar setMarkedUndeletable:]
  -[EKCalendar setMarkedImmutableSharees:]
  -[EKCalendar isSuggestionsCalendar]
  -[EKCalendar setAllowReminders:]


CGColorWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  ^{CGColor=} color

  // instance methods
  -[CGColorWrapper dealloc]
  -[CGColorWrapper color]
  -[CGColorWrapper initWithCGColor:]


EKOfficeHour : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL enabled
 @property  long long weekday
 @property  NSDate *startTime
 @property  NSDate *endTime
 @property  NSTimeZone *timeZone

  // instance methods
  -[EKOfficeHour copyWithZone:]
  -[EKOfficeHour enabled]
  -[EKOfficeHour setEnabled:]
  -[EKOfficeHour setTimeZone:]
  -[EKOfficeHour .cxx_destruct]
  -[EKOfficeHour timeZone]
  -[EKOfficeHour weekday]
  -[EKOfficeHour setWeekday:]
  -[EKOfficeHour startTime]
  -[EKOfficeHour endTime]
  -[EKOfficeHour setEndTime:]
  -[EKOfficeHour setStartTime:]
  -[EKOfficeHour initWithEnabled:weekday:startTime:endTime:timeZone:]


EKAlarm : EKObject <NSCopying>
 @property  BOOL isAbsolute
 @property  BOOL isSnoozed
 @property  BOOL defaultAlarm
 @property  NSString *UUID
 @property  NSString *externalID
 @property  EKObject *owner
 @property  EKCalendar *calendarOwner
 @property  EKCalendarItem *calendarItemOwner
 @property  EKAlarm *originalAlarm
 @property  NSArray *snoozedAlarms
 @property  double relativeOffset
 @property  NSDate *absoluteDate
 @property  EKStructuredLocation *structuredLocation
 @property  long long proximity
 @property  long long type
 @property  NSString *emailAddress
 @property  NSString *soundName
 @property  NSURL *url

  // class methods
  +[EKAlarm alarmWithAbsoluteDate:]
  +[EKAlarm alarmWithRelativeOffset:]
  +[EKAlarm frozenClass]
  +[EKAlarm knownRelationshipSingleValueKeys]
  +[EKAlarm knownRelationshipMultiValueKeys]
  +[EKAlarm maxPublicProximity]
  +[EKAlarm _currentAuthorizationStatus]
  +[EKAlarm areLocationsAllowedWithAuthorizationStatus:]
  +[EKAlarm areLocationsAvailable]
  +[EKAlarm areLocationsAllowed]
  +[EKAlarm areLocationsCurrentlyEnabled]
  +[EKAlarm defaultGeofencedReminderRadius]
  +[EKAlarm alarmWithAlarm:]
  +[EKAlarm noneTriggerDate]

  // instance methods
  -[EKAlarm init]
  -[EKAlarm copyWithZone:]
  -[EKAlarm type]
  -[EKAlarm compare:]
  -[EKAlarm .cxx_destruct]
  -[EKAlarm url]
  -[EKAlarm UUID]
  -[EKAlarm setUUID:]
  -[EKAlarm _reset]
  -[EKAlarm owner]
  -[EKAlarm setUrl:]
  -[EKAlarm emailAddress]
  -[EKAlarm setEmailAddress:]
  -[EKAlarm proximity]
  -[EKAlarm isAbsolute]
  -[EKAlarm setSoundName:]
  -[EKAlarm soundName]
  -[EKAlarm externalID]
  -[EKAlarm alarmType]
  -[EKAlarm isSnoozed]
  -[EKAlarm setIsSnoozed:]
  -[EKAlarm absoluteDate]
  -[EKAlarm relativeOffset]
  -[EKAlarm structuredLocation]
  -[EKAlarm isTopographicallyEqualToAlarm:]
  -[EKAlarm setStructuredLocation:]
  -[EKAlarm setAbsoluteDate:]
  -[EKAlarm setRelativeOffset:]
  -[EKAlarm setAcknowledgedDate:]
  -[EKAlarm setProximity:]
  -[EKAlarm acknowledgedDate]
  -[EKAlarm semanticIdentifier]
  -[EKAlarm isDefaultAlarm]
  -[EKAlarm snoozedAlarms]
  -[EKAlarm calendarItemOwner]
  -[EKAlarm originalAlarm]
  -[EKAlarm setOriginalAlarm:]
  -[EKAlarm setAlarmType:]
  -[EKAlarm calendarOwner]
  -[EKAlarm setDefaultAlarm:]
  -[EKAlarm setSnoozedAlarms:]
  -[EKAlarm validateWithOwner:error:]
  -[EKAlarm initWithAbsoluteDate:]
  -[EKAlarm initWithRelativeOffset:]
  -[EKAlarm relativeOffsetRaw]
  -[EKAlarm setRelativeOffsetRaw:]
  -[EKAlarm ownerUUID]
  -[EKAlarm addSnoozedAlarm:]
  -[EKAlarm removeSnoozedAlarm:]
  -[EKAlarm triggerIsNotRelativeToTravelTime]
  -[EKAlarm setTriggerIsNotRelativeToTravelTime:]
  -[EKAlarm isVehicleAlarm]
  -[EKAlarm isTimeToLeaveAlarm]
  -[EKAlarm setIsTimeToLeaveAlarm:]
  -[EKAlarm shouldIncludeInNormalAlarms]


EKSharee : EKObject <NSCopying, EKIdentityProtocol>
 @property  NSString *name
 @property  NSString *emailAddress
 @property  NSString *phoneNumber
 @property  unsigned long shareeStatus
 @property  unsigned long shareeAccessLevel
 @property  NSPredicate *contactPredicate
 @property  NSString *UUID
 @property  NSString *address
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *externalID
 @property  EKCalendar *owner
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EKSharee shareeWithName:emailAddress:phoneNumber:]
  +[EKSharee shareeWithName:url:]
  +[EKSharee shareeWithName:emailAddress:phoneNumber:externalID:]
  +[EKSharee frozenClass]
  +[EKSharee _urlForEmailAddress:andPhoneNumber:]
  +[EKSharee _ekShareeStatusFromCalShareeStatus:]
  +[EKSharee _calShareeStatusFromEKShareeStatus:]
  +[EKSharee _ekShareeAccessLevelFromCalShareeAccessLevel:]
  +[EKSharee _calShareeAccessLevelFromEKShareeAccessLevel:]
  +[EKSharee shareeWithName:emailAddress:]
  +[EKSharee shareeWithName:phoneNumber:]
  +[EKSharee statusEnumFromString:]
  +[EKSharee statusStringFromEnum:]

  // instance methods
  -[EKSharee init]
  -[EKSharee name]
  -[EKSharee copyWithZone:]
  -[EKSharee setName:]
  -[EKSharee UUID]
  -[EKSharee address]
  -[EKSharee setUUID:]
  -[EKSharee URL]
  -[EKSharee phoneNumber]
  -[EKSharee owner]
  -[EKSharee contactPredicate]
  -[EKSharee setPhoneNumber:]
  -[EKSharee emailAddress]
  -[EKSharee setEmailAddress:]
  -[EKSharee setAddress:]
  -[EKSharee firstName]
  -[EKSharee lastName]
  -[EKSharee setFirstName:]
  -[EKSharee setLastName:]
  -[EKSharee externalID]
  -[EKSharee setExternalID:]
  -[EKSharee shareeStatus]
  -[EKSharee shareeAccessLevel]
  -[EKSharee setShareeAccessLevel:]
  -[EKSharee setShareeStatus:]
  -[EKSharee initWithName:url:]
  -[EKSharee initWithName:url:externalID:]
  -[EKSharee shareeStatusRaw]
  -[EKSharee setShareeStatusRaw:]
  -[EKSharee shareeAccessLevelRaw]
  -[EKSharee setShareeAccessLevelRaw:]


EKSource : EKObject
 @property  BOOL hasOwnerEmailAddress
 @property  NSDate *timeOfLastExternalIdentificationCache
 @property  NSString *cachedHost
 @property  long long cachedPort
 @property  NSSet *cachedOwnerAddresses
 @property  int flags
 @property  NSString *delegatedAccountOwnerStoreID
 @property  BOOL isDelegate
 @property  NSString *externalID
 @property  NSSet *allCalendars
 @property  EKAvailabilityCache *availabilityCache
 @property  int displayOrderForNewCalendar
 @property  BOOL enabled
 @property  BOOL isFacebookSource
 @property  BOOL supportsCalendarCreation
 @property  BOOL supportsReminderActions
 @property  EKSourceConstraints *constraints
 @property  BOOL isWritable
 @property  REMObjectID *remAccountObjectID
 @property  BOOL syncs
 @property  NSNumber *defaultAlarmOffset
 @property  NSString *externalModificationTag
 @property  NSString *title
 @property  NSString *creatorBundleID
 @property  NSString *creatorCodeSigningIdentity
 @property  BOOL onlyCreatorCanModify
 @property  BOOL wantsCommentPromptWhenDeclining
 @property  long long preferredEventPrivateValue
 @property  long long strictestEventPrivateValue
 @property  NSString *serverHost
 @property  long long serverPort
 @property  NSSet *ownerAddresses
 @property  BOOL wasMigrated
 @property  NSString *sourceIdentifier
 @property  long long sourceType
 @property  BOOL showsNotifications
 @property  NSString *constraintsDescriptionPath
 @property  BOOL allowsTasks
 @property  BOOL allowsEvents
 @property  BOOL allowsCalendarAddDeleteModify
 @property  BOOL supportsSharedCalendars
 @property  BOOL supportsAlarmAcknowledgedDate
 @property  BOOL supportsPrivateEvents
 @property  BOOL prohibitsPrivateEventsWithAttendees
 @property  BOOL requiresSamePrivacyLevelAcrossRecurrenceSeries
 @property  BOOL supportsAvailabilityRequests
 @property  BOOL supportsIgnoringEventsInAvailabilityRequests
 @property  BOOL supportsLocationDirectorySearches
 @property  BOOL allowsProposeNewTime
 @property  BOOL prohibitsICSImport
 @property  BOOL isFacebook
 @property  BOOL prohibitsDetachmentOnCommentChange
 @property  BOOL prohibitsMultipleDaysInMonthlyRecurrence
 @property  BOOL prohibitsMultipleMonthsInYearlyRecurrence
 @property  BOOL prohibitsYearlyRecurrenceInterval
 @property  BOOL usesSelfAttendee
 @property  BOOL snoozeAlarmRequiresDetach
 @property  NSString *personaIdentifier
 @property  BOOL supportsJunkReporting
 @property  BOOL supportsPhoneNumbers
 @property  unsigned long lastSyncError
 @property  NSDate *lastSyncStartDate
 @property  NSDate *lastSyncEndDate
 @property  BOOL isSyncing
 @property  NSSet *calendars

  // class methods
  +[EKSource frozenClass]
  +[EKSource isWeakRelationship]
  +[EKSource _calEventPrivacyLevelToEKPrivacyLevel:]
  +[EKSource _ekPrivacyLevelToCalEventPrivacyLevel:]
  +[EKSource sourceWithEventStore:]

  // instance methods
  -[EKSource setEnabled:]
  -[EKSource remove:]
  -[EKSource .cxx_destruct]
  -[EKSource flags]
  -[EKSource constraints]
  -[EKSource _reset]
  -[EKSource title]
  -[EKSource setTitle:]
  -[EKSource isEnabled]
  -[EKSource disabled]
  -[EKSource validate:]
  -[EKSource refresh]
  -[EKSource setFlags:]
  -[EKSource personaIdentifier]
  -[EKSource serverPort]
  -[EKSource setDisabled:]
  -[EKSource sourceType]
  -[EKSource setSourceType:]
  -[EKSource setSourceIdentifier:]
  -[EKSource sourceIdentifier]
  -[EKSource externalID]
  -[EKSource setExternalID:]
  -[EKSource isWritable]
  -[EKSource externalModificationTag]
  -[EKSource setExternalModificationTag:]
  -[EKSource creatorBundleID]
  -[EKSource setCreatorBundleID:]
  -[EKSource isDelegate]
  -[EKSource prohibitsMultipleDaysInMonthlyRecurrence]
  -[EKSource setProhibitsMultipleDaysInMonthlyRecurrence:]
  -[EKSource prohibitsMultipleMonthsInYearlyRecurrence]
  -[EKSource setProhibitsMultipleMonthsInYearlyRecurrence:]
  -[EKSource prohibitsYearlyRecurrenceInterval]
  -[EKSource setProhibitsYearlyRecurrenceInterval:]
  -[EKSource ownerAddresses]
  -[EKSource isSyncing]
  -[EKSource lastSyncEndDate]
  -[EKSource isFacebookSource]
  -[EKSource readWriteCalendarsForEntityType:]
  -[EKSource supportsSharedCalendars]
  -[EKSource allowsCalendarAddDeleteModify]
  -[EKSource supportsCalendarCreation]
  -[EKSource displayOrderForNewCalendar]
  -[EKSource supportsPhoneNumbers]
  -[EKSource supportsLocationDirectorySearches]
  -[EKSource supportsAvailabilityRequests]
  -[EKSource supportsPrivateEvents]
  -[EKSource preferredEventPrivateValue]
  -[EKSource calendarsForEntityType:]
  -[EKSource prohibitsPrivateEventsWithAttendees]
  -[EKSource syncs]
  -[EKSource lastSyncError]
  -[EKSource isFacebook]
  -[EKSource prohibitsICSImport]
  -[EKSource allCalendars]
  -[EKSource allowsEvents]
  -[EKSource supportsIgnoringEventsInAvailabilityRequests]
  -[EKSource allowsTasks]
  -[EKSource supportsReminderActions]
  -[EKSource setAllowsEvents:]
  -[EKSource setAllowsCalendarAddDeleteModify:]
  -[EKSource calendars]
  -[EKSource commit:]
  -[EKSource snoozeAlarmRequiresDetach]
  -[EKSource setSnoozeAlarmRequiresDetach:]
  -[EKSource setAllowsTasks:]
  -[EKSource setSupportsSharedCalendars:]
  -[EKSource setIsFacebook:]
  -[EKSource setSupportsPrivateEvents:]
  -[EKSource setProhibitsPrivateEventsWithAttendees:]
  -[EKSource setSupportsAvailabilityRequests:]
  -[EKSource setSupportsIgnoringEventsInAvailabilityRequests:]
  -[EKSource setSupportsLocationDirectorySearches:]
  -[EKSource requiresSamePrivacyLevelAcrossRecurrenceSeries]
  -[EKSource setRequiresSamePrivacyLevelAcrossRecurrenceSeries:]
  -[EKSource prohibitsDetachmentOnCommentChange]
  -[EKSource setProhibitsDetachmentOnCommentChange:]
  -[EKSource allowsProposeNewTime]
  -[EKSource setAllowsProposeNewTime:]
  -[EKSource setProhibitsICSImport:]
  -[EKSource supportsJunkReporting]
  -[EKSource delegatedAccountOwnerStoreID]
  -[EKSource lastSyncStartDate]
  -[EKSource setLastSyncError:]
  -[EKSource setLastSyncStartDate:]
  -[EKSource setLastSyncEndDate:]
  -[EKSource defaultAlarmOffset]
  -[EKSource hasOwnerEmailAddress]
  -[EKSource strictestEventPrivateValue]
  -[EKSource availabilityCache]
  -[EKSource preferredEventPrivateValueRaw]
  -[EKSource setPreferredEventPrivateValueRaw:]
  -[EKSource strictestEventPrivateValueRaw]
  -[EKSource setStrictestEventPrivateValueRaw:]
  -[EKSource flag:]
  -[EKSource setFlag:value:]
  -[EKSource remAccountObjectID]
  -[EKSource _countCalendarItemsOfCalType:resultHandler:]
  -[EKSource _cacheExternalIdentification]
  -[EKSource _cacheExternalIdentificationIfNeeded]
  -[EKSource managedConfigurationAccountAccess]
  -[EKSource setPreferredEventPrivateValue:]
  -[EKSource setStrictestEventPrivateValue:]
  -[EKSource setDefaultAlarmOffset:]
  -[EKSource constraintsDescriptionPath]
  -[EKSource setConstraintsDescriptionPath:]
  -[EKSource creatorCodeSigningIdentity]
  -[EKSource setCreatorCodeSigningIdentity:]
  -[EKSource onlyCreatorCanModify]
  -[EKSource setOnlyCreatorCanModify:]
  -[EKSource wasMigrated]
  -[EKSource setWasMigrated:]
  -[EKSource showsNotifications]
  -[EKSource setShowsNotifications:]
  -[EKSource usesSelfAttendee]
  -[EKSource setUsesSelfAttendee:]
  -[EKSource supportsAlarmAcknowledgedDate]
  -[EKSource setSupportsAlarmAcknowledgedDate:]
  -[EKSource setDelegatedAccountOwnerStoreID:]
  -[EKSource calendarWithExternalIdentifier:]
  -[EKSource removeCalendarItemsOlderThanDate:entityTypeMask:error:]
  -[EKSource countCalendarItemsWithResultHandler:]
  -[EKSource countCalendarItemsOfType:resultHandler:]
  -[EKSource wantsCommentPromptWhenDeclining]
  -[EKSource serverHost]
  -[EKSource timeOfLastExternalIdentificationCache]
  -[EKSource setTimeOfLastExternalIdentificationCache:]
  -[EKSource cachedHost]
  -[EKSource setCachedHost:]
  -[EKSource cachedPort]
  -[EKSource setCachedPort:]
  -[EKSource cachedOwnerAddresses]
  -[EKSource setCachedOwnerAddresses:]


EKCalendarResourceChangeNotification : EKCalendarNotification
 @property  NSString *location
 @property  NSString *calendarName
 @property  NSDate *startDate
 @property  NSDate *startDateForNextOccurrence
 @property  NSDate *endDate
 @property  BOOL allDay
 @property  NSString *eventID
 @property  unsigned int changeType
 @property  BOOL dateChanged
 @property  BOOL timeChanged
 @property  BOOL locationChanged
 @property  BOOL titleChanged
 @property  NSNumber *createCount
 @property  NSNumber *updateCount
 @property  NSNumber *deleteCount

  // instance methods
  -[EKCalendarResourceChangeNotification .cxx_destruct]
  -[EKCalendarResourceChangeNotification changeType]
  -[EKCalendarResourceChangeNotification startDate]
  -[EKCalendarResourceChangeNotification endDate]
  -[EKCalendarResourceChangeNotification location]
  -[EKCalendarResourceChangeNotification initWithType:]
  -[EKCalendarResourceChangeNotification setStartDate:]
  -[EKCalendarResourceChangeNotification setEndDate:]
  -[EKCalendarResourceChangeNotification setLocation:]
  -[EKCalendarResourceChangeNotification deleteCount]
  -[EKCalendarResourceChangeNotification setChangeType:]
  -[EKCalendarResourceChangeNotification updateCount]
  -[EKCalendarResourceChangeNotification setUpdateCount:]
  -[EKCalendarResourceChangeNotification setAllDay:]
  -[EKCalendarResourceChangeNotification allDay]
  -[EKCalendarResourceChangeNotification timeChanged]
  -[EKCalendarResourceChangeNotification dateChanged]
  -[EKCalendarResourceChangeNotification locationChanged]
  -[EKCalendarResourceChangeNotification eventID]
  -[EKCalendarResourceChangeNotification setEventID:]
  -[EKCalendarResourceChangeNotification calendarName]
  -[EKCalendarResourceChangeNotification setCalendarName:]
  -[EKCalendarResourceChangeNotification createCount]
  -[EKCalendarResourceChangeNotification setCreateCount:]
  -[EKCalendarResourceChangeNotification setDeleteCount:]
  -[EKCalendarResourceChangeNotification setDateChanged:]
  -[EKCalendarResourceChangeNotification setTimeChanged:]
  -[EKCalendarResourceChangeNotification setLocationChanged:]
  -[EKCalendarResourceChangeNotification titleChanged]
  -[EKCalendarResourceChangeNotification setTitleChanged:]
  -[EKCalendarResourceChangeNotification setStartDateForNextOccurrence:]
  -[EKCalendarResourceChangeNotification resourceChangeFromEventStore:]
  -[EKCalendarResourceChangeNotification needsAlert]
  -[EKCalendarResourceChangeNotification startDateForNextOccurrence]


EKPersistentParticipant : EKPersistentObject <EKParticipantSemanticIdentifierGeneratorDelegate>
  // class methods
  +[EKPersistentParticipant defaultPropertiesToLoad]

  // instance methods
  -[EKPersistentParticipant copyWithZone:]
  -[EKPersistentParticipant url]
  -[EKPersistentParticipant UUID]
  -[EKPersistentParticipant address]
  -[EKPersistentParticipant setUUID:]
  -[EKPersistentParticipant phoneNumber]
  -[EKPersistentParticipant displayName]
  -[EKPersistentParticipant owner]
  -[EKPersistentParticipant setDisplayName:]
  -[EKPersistentParticipant setPhoneNumber:]
  -[EKPersistentParticipant emailAddress]
  -[EKPersistentParticipant setEmailAddress:]
  -[EKPersistentParticipant comment]
  -[EKPersistentParticipant setAddress:]
  -[EKPersistentParticipant setComment:]
  -[EKPersistentParticipant firstName]
  -[EKPersistentParticipant lastName]
  -[EKPersistentParticipant setFirstName:]
  -[EKPersistentParticipant setLastName:]
  -[EKPersistentParticipant proposedStartDate]
  -[EKPersistentParticipant setProposedStartDate:]
  -[EKPersistentParticipant proposedStartDateStatus]
  -[EKPersistentParticipant setProposedStartDateStatus:]
  -[EKPersistentParticipant semanticIdentifier]
  -[EKPersistentParticipant invitedBy]


EKCalendarChange : EKObjectChange
  // class methods
  +[EKCalendarChange entityType]
  +[EKCalendarChange fetchCalendarChangesInStore:resultHandler:]
  +[EKCalendarChange fetchCalendarChangesInSource:resultHandler:]


EKTravelLookupManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKTravelLookupManager defaultManager]
  +[EKTravelLookupManager estimateGeolocationFromHistoricDevicePositionAtLocation:withCompletionBlock:]
  +[EKTravelLookupManager geocodeAddress:withCompletionBlock:]

  // instance methods
  -[EKTravelLookupManager travelTimeFrom:to:arrivalDate:withRouteTypes:withCompletionBlock:]
  -[EKTravelLookupManager _travelTimeWithStartCoordinate:endCoordinate:arrivalDate:withRouteType:completionBlock:]
  -[EKTravelLookupManager findCoordinatesForLocation:completionBlock:]
  -[EKTravelLookupManager travelTimeFrom:to:arrivalDate:withRouteType:withCompletionBlock:]
  -[EKTravelLookupManager _updateLocation:withMapItem:forRoute:withCompletionBlock:]


EKPredictedLocationOfInterest : NSObject /usr/lib/libSystem.B.dylib
 @property  RTPredictedLocationOfInterest *rtPredictedLocationOfInterest
 @property  long long type
 @property  NSString *customLabel
 @property  NSString *mapItemName
 @property  NSString *addressCountryCode
 @property  NSString *addressThoroughfare
 @property  NSString *addressLocality

  // instance methods
  -[EKPredictedLocationOfInterest type]
  -[EKPredictedLocationOfInterest .cxx_destruct]
  -[EKPredictedLocationOfInterest customLabel]
  -[EKPredictedLocationOfInterest initWithType:customLabel:mapItemName:addressCountryCode:addressThoroughFare:addressLocality:]
  -[EKPredictedLocationOfInterest initWithPredictedLocationOfInterest:]
  -[EKPredictedLocationOfInterest mapItemName]
  -[EKPredictedLocationOfInterest addressCountryCode]
  -[EKPredictedLocationOfInterest addressThoroughfare]
  -[EKPredictedLocationOfInterest addressLocality]
  -[EKPredictedLocationOfInterest rtPredictedLocationOfInterest]


EKStructuredLocation : EKObject <NSCopying>
 @property  NSString *contactLabel
 @property  BOOL isStructured
 @property  NSString *routing
 @property  NSData *mapKitHandle
 @property  BOOL hasKnownSpatialData
 @property  NSString *address
 @property  BOOL imprecise
 @property  EKPredictedLocationOfInterest *predictedLOI
 @property  BOOL prediction
 @property  NSString *derivedFrom
 @property  NSString *title
 @property  CLLocation *geoLocation
 @property  double radius

  // class methods
  +[EKStructuredLocation locationWithTitle:]
  +[EKStructuredLocation locationWithMapItem:]
  +[EKStructuredLocation frozenClass]
  +[EKStructuredLocation _stringByStrippingControlCharactersFromString:]
  +[EKStructuredLocation displayLabelForContact:unlocalizedLabel:]

  // instance methods
  -[EKStructuredLocation copyWithZone:]
  -[EKStructuredLocation .cxx_destruct]
  -[EKStructuredLocation address]
  -[EKStructuredLocation _reset]
  -[EKStructuredLocation title]
  -[EKStructuredLocation setTitle:]
  -[EKStructuredLocation cacheKey]
  -[EKStructuredLocation radius]
  -[EKStructuredLocation setRadius:]
  -[EKStructuredLocation latitude]
  -[EKStructuredLocation longitude]
  -[EKStructuredLocation setLongitude:]
  -[EKStructuredLocation setLatitude:]
  -[EKStructuredLocation referenceFrame]
  -[EKStructuredLocation setReferenceFrame:]
  -[EKStructuredLocation setAddress:]
  -[EKStructuredLocation isStructured]
  -[EKStructuredLocation contactLabel]
  -[EKStructuredLocation setContactLabel:]
  -[EKStructuredLocation isEqualToLocation:]
  -[EKStructuredLocation isPrediction]
  -[EKStructuredLocation setRouting:]
  -[EKStructuredLocation predictedLOI]
  -[EKStructuredLocation geoLocation]
  -[EKStructuredLocation setGeoLocation:]
  -[EKStructuredLocation setMapKitHandle:]
  -[EKStructuredLocation mapKitHandle]
  -[EKStructuredLocation updateFromMapItem:]
  -[EKStructuredLocation calLocation]
  -[EKStructuredLocation isImprecise]
  -[EKStructuredLocation routing]
  -[EKStructuredLocation derivedFrom]
  -[EKStructuredLocation setDerivedFrom:]
  -[EKStructuredLocation setPredictedLOI:]
  -[EKStructuredLocation setImprecise:]
  -[EKStructuredLocation geoURLString]
  -[EKStructuredLocation semanticIdentifier]
  -[EKStructuredLocation hasKnownSpatialData]
  -[EKStructuredLocation _clearGeoLocationCache]
  -[EKStructuredLocation radiusRaw]
  -[EKStructuredLocation setRadiusRaw:]


EKPersistentResourceChangeNotification : EKPersistentNotification
  // class methods
  +[EKPersistentResourceChangeNotification relations]
  +[EKPersistentResourceChangeNotification meltedClass]

  // instance methods
  -[EKPersistentResourceChangeNotification lastModifiedDate]
  -[EKPersistentResourceChangeNotification setLastModifiedDate:]
  -[EKPersistentResourceChangeNotification entityType]
  -[EKPersistentResourceChangeNotification resourceChanges]
  -[EKPersistentResourceChangeNotification setResourceChanges:]


EKObjectID : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *entityName
 @property  long long entityType
 @property  int rowID
 @property  BOOL isTemporary
 @property  NSString *stringRepresentation
 @property  NSURL *URIRepresentation
 @property  NSDictionary *dictionaryRepresentation
 @property  CADObjectID *CADObjectID

  // class methods
  +[EKObjectID supportsSecureCoding]
  +[EKObjectID objectIDWithURL:]
  +[EKObjectID objectIDWithEntityType:rowID:]
  +[EKObjectID objectIDWithCADObjectID:]
  +[EKObjectID EKObjectIDsFromCADObjectIDs:]
  +[EKObjectID temporaryObjectIDWithEntityType:]
  +[EKObjectID CADObjectIDsFromEKObjectIDs:]

  // instance methods
  -[EKObjectID isEqual:]
  -[EKObjectID copyWithZone:]
  -[EKObjectID encodeWithCoder:]
  -[EKObjectID initWithCoder:]
  -[EKObjectID dictionaryRepresentation]
  -[EKObjectID stringRepresentation]
  -[EKObjectID entityName]
  -[EKObjectID URIRepresentation]
  -[EKObjectID initWithDictionaryRepresentation:]
  -[EKObjectID entityType]
  -[EKObjectID isTemporary]
  -[EKObjectID rowID]
  -[EKObjectID CADObjectID]
  -[EKObjectID initWithEntityType:rowID:temporary:]


EKSharedEventStoreProvider : NSObject /usr/lib/libSystem.B.dylib <EKEventStoreProvider>
 @property  EKEventStore *sharedEventStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EKSharedEventStoreProvider .cxx_destruct]
  -[EKSharedEventStoreProvider eventStore]
  -[EKSharedEventStoreProvider initWithEventStore:]
  -[EKSharedEventStoreProvider sharedEventStore]


EKRecurrenceEnd : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  BOOL usesEndDate
 @property  NSDate *endDate
 @property  unsigned long occurrenceCount

  // class methods
  +[EKRecurrenceEnd supportsSecureCoding]
  +[EKRecurrenceEnd recurrenceEndWithOccurrenceCount:]
  +[EKRecurrenceEnd recurrenceEndWithEndDate:]

  // instance methods
  -[EKRecurrenceEnd isEqual:]
  -[EKRecurrenceEnd copyWithZone:]
  -[EKRecurrenceEnd encodeWithCoder:]
  -[EKRecurrenceEnd initWithCoder:]
  -[EKRecurrenceEnd .cxx_destruct]
  -[EKRecurrenceEnd endDate]
  -[EKRecurrenceEnd occurrenceCount]
  -[EKRecurrenceEnd initWithEndDate:]
  -[EKRecurrenceEnd initWithOccurrenceCount:]
  -[EKRecurrenceEnd usesEndDate]


EKPersistentCalendarItem : EKPersistentObject
 @property  BOOL defaultAlarmRemoved

  // class methods
  +[EKPersistentCalendarItem relations]
  +[EKPersistentCalendarItem defaultPropertiesToLoad]

  // instance methods
  -[EKPersistentCalendarItem copyWithZone:]
  -[EKPersistentCalendarItem calendar]
  -[EKPersistentCalendarItem setCalendar:]
  -[EKPersistentCalendarItem attachments]
  -[EKPersistentCalendarItem startDate]
  -[EKPersistentCalendarItem setURL:]
  -[EKPersistentCalendarItem setAttachments:]
  -[EKPersistentCalendarItem UUID]
  -[EKPersistentCalendarItem setUUID:]
  -[EKPersistentCalendarItem URL]
  -[EKPersistentCalendarItem title]
  -[EKPersistentCalendarItem setTitle:]
  -[EKPersistentCalendarItem priority]
  -[EKPersistentCalendarItem uniqueID]
  -[EKPersistentCalendarItem setPriority:]
  -[EKPersistentCalendarItem setSequence:]
  -[EKPersistentCalendarItem sequence]
  -[EKPersistentCalendarItem action]
  -[EKPersistentCalendarItem sequenceNumber]
  -[EKPersistentCalendarItem location]
  -[EKPersistentCalendarItem creationDate]
  -[EKPersistentCalendarItem setStartDate:]
  -[EKPersistentCalendarItem setCreationDate:]
  -[EKPersistentCalendarItem clientLocation]
  -[EKPersistentCalendarItem setLocation:]
  -[EKPersistentCalendarItem startLocation]
  -[EKPersistentCalendarItem setAction:]
  -[EKPersistentCalendarItem appLink]
  -[EKPersistentCalendarItem setAppLink:]
  -[EKPersistentCalendarItem setStartLocation:]
  -[EKPersistentCalendarItem lastModifiedDate]
  -[EKPersistentCalendarItem setUniqueID:]
  -[EKPersistentCalendarItem setLastModifiedDate:]
  -[EKPersistentCalendarItem organizer]
  -[EKPersistentCalendarItem externalID]
  -[EKPersistentCalendarItem setExternalID:]
  -[EKPersistentCalendarItem externalModificationTag]
  -[EKPersistentCalendarItem setExternalModificationTag:]
  -[EKPersistentCalendarItem originalItem]
  -[EKPersistentCalendarItem setOriginalItem:]
  -[EKPersistentCalendarItem setAllDay:]
  -[EKPersistentCalendarItem isAllDay]
  -[EKPersistentCalendarItem notes]
  -[EKPersistentCalendarItem setNotes:]
  -[EKPersistentCalendarItem alarms]
  -[EKPersistentCalendarItem setAlarms:]
  -[EKPersistentCalendarItem attendees]
  -[EKPersistentCalendarItem hasAttendees]
  -[EKPersistentCalendarItem removeAttendee:]
  -[EKPersistentCalendarItem setAttendees:]
  -[EKPersistentCalendarItem addAttendee:]
  -[EKPersistentCalendarItem hasRecurrenceRules]
  -[EKPersistentCalendarItem selfAttendee]
  -[EKPersistentCalendarItem travelStartLocation]
  -[EKPersistentCalendarItem setTravelStartLocation:]
  -[EKPersistentCalendarItem sharedItemModifiedByDisplayName]
  -[EKPersistentCalendarItem sharedItemModifiedDate]
  -[EKPersistentCalendarItem sharedItemCreatedByDisplayName]
  -[EKPersistentCalendarItem sharedItemCreatedDate]
  -[EKPersistentCalendarItem sharedItemModifiedByAddress]
  -[EKPersistentCalendarItem sharedItemCreatedByAddress]
  -[EKPersistentCalendarItem structuredLocationWithoutPrediction]
  -[EKPersistentCalendarItem addAlarm:]
  -[EKPersistentCalendarItem recurrenceRules]
  -[EKPersistentCalendarItem selfParticipantStatus]
  -[EKPersistentCalendarItem removeAlarm:]
  -[EKPersistentCalendarItem detachedItems]
  -[EKPersistentCalendarItem setClientLocation:]
  -[EKPersistentCalendarItem setRecurrenceRules:]
  -[EKPersistentCalendarItem addRecurrenceRule:]
  -[EKPersistentCalendarItem addAttachment:]
  -[EKPersistentCalendarItem removeRecurrenceRule:]
  -[EKPersistentCalendarItem removeAttachment:]
  -[EKPersistentCalendarItem localStructuredData]
  -[EKPersistentCalendarItem structuredData]
  -[EKPersistentCalendarItem setLocalStructuredData:]
  -[EKPersistentCalendarItem setStructuredData:]
  -[EKPersistentCalendarItem exceptionDates]
  -[EKPersistentCalendarItem externalScheduleID]
  -[EKPersistentCalendarItem setExternalScheduleID:]
  -[EKPersistentCalendarItem setStructuredLocationWithoutPrediction:]
  -[EKPersistentCalendarItem startTimeZoneName]
  -[EKPersistentCalendarItem setStartTimeZoneName:]
  -[EKPersistentCalendarItem endTimeZoneName]
  -[EKPersistentCalendarItem setEndTimeZoneName:]
  -[EKPersistentCalendarItem externalData]
  -[EKPersistentCalendarItem sharedItemCreatedByFirstName]
  -[EKPersistentCalendarItem sharedItemCreatedByLastName]
  -[EKPersistentCalendarItem sharedItemCreatedTimeZoneName]
  -[EKPersistentCalendarItem setSharedItemCreatedTimeZoneName:]
  -[EKPersistentCalendarItem sharedItemModifiedByFirstName]
  -[EKPersistentCalendarItem sharedItemModifiedByLastName]
  -[EKPersistentCalendarItem sharedItemModifiedTimeZoneName]
  -[EKPersistentCalendarItem setSharedItemModifiedTimeZoneName:]
  -[EKPersistentCalendarItem setExternalData:]
  -[EKPersistentCalendarItem ekExceptionDates]
  -[EKPersistentCalendarItem setEkExceptionDates:]
  -[EKPersistentCalendarItem setDetachedItems:]
  -[EKPersistentCalendarItem modifiedProperties]
  -[EKPersistentCalendarItem setModifiedProperties:]
  -[EKPersistentCalendarItem hasNotes]
  -[EKPersistentCalendarItem calendarScale]
  -[EKPersistentCalendarItem setCalendarScale:]
  -[EKPersistentCalendarItem setSelfAttendee:]
  -[EKPersistentCalendarItem setOrganizer:]
  -[EKPersistentCalendarItem setSharedItemCreatedByDisplayName:]
  -[EKPersistentCalendarItem setSharedItemCreatedByAddress:]
  -[EKPersistentCalendarItem setSharedItemCreatedByFirstName:]
  -[EKPersistentCalendarItem setSharedItemCreatedByLastName:]
  -[EKPersistentCalendarItem setSharedItemCreatedDate:]
  -[EKPersistentCalendarItem setSharedItemModifiedByDisplayName:]
  -[EKPersistentCalendarItem setSharedItemModifiedByAddress:]
  -[EKPersistentCalendarItem setSharedItemModifiedByFirstName:]
  -[EKPersistentCalendarItem setSharedItemModifiedByLastName:]
  -[EKPersistentCalendarItem setSharedItemModifiedDate:]
  -[EKPersistentCalendarItem setExceptionDates:]
  -[EKPersistentCalendarItem participationStatusModifiedDate]
  -[EKPersistentCalendarItem setParticipationStatusModifiedDate:]
  -[EKPersistentCalendarItem isDefaultAlarmRemoved]
  -[EKPersistentCalendarItem setDefaultAlarmRemoved:]
  -[EKPersistentCalendarItem setHasNotes:]
  -[EKPersistentCalendarItem isPhantomMaster]
  -[EKPersistentCalendarItem setPhantomMaster:]
  -[EKPersistentCalendarItem setHasRecurrenceRules:]
  -[EKPersistentCalendarItem setHasAttendees:]


EKRelation : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL toMany
 @property  NSSet *inversePropertyNames
 @property  BOOL ownsRelatedObject
 @property  @? inversePropertyIsApplicable

  // class methods
  +[EKRelation relationWithEntityName:toMany:inversePropertyNames:ownsRelated:]
  +[EKRelation relationWithEntityName:toMany:inversePropertyNames:]

  // instance methods
  -[EKRelation .cxx_destruct]
  -[EKRelation setInversePropertyIsApplicable:]
  -[EKRelation toMany]
  -[EKRelation ownsRelatedObject]
  -[EKRelation inversePropertyNames]
  -[EKRelation shouldSetInverseProperty:onObject:forObject:]
  -[EKRelation initWithEntityName:toMany:inversePropertyNames:ownsRelated:]
  -[EKRelation inversePropertyIsApplicable]


EKAttachment : EKObject
 @property  NSURL *URL
 @property  NSString *localRelativePath
 @property  NSURL *localURL
 @property  BOOL isBinary
 @property  NSString *fileName
 @property  NSString *fileFormat
 @property  NSNumber *fileSize
 @property  NSString *UUID
 @property  NSURL *URLForPendingFileCopy

  // class methods
  +[EKAttachment createTempDestinationURLWithExtension:]
  +[EKAttachment frozenClass]
  +[EKAttachment _copyFileAtURLToTemporaryDirectory:]

  // instance methods
  -[EKAttachment copyWithZone:]
  -[EKAttachment fileSize]
  -[EKAttachment setURL:]
  -[EKAttachment UUID]
  -[EKAttachment setUUID:]
  -[EKAttachment URL]
  -[EKAttachment setFileSize:]
  -[EKAttachment localURL]
  -[EKAttachment fileName]
  -[EKAttachment fileFormat]
  -[EKAttachment initWithFilepath:]
  -[EKAttachment compareFileNames:]
  -[EKAttachment URLForPendingFileCopy]
  -[EKAttachment setFileFormat:]
  -[EKAttachment semanticIdentifier]
  -[EKAttachment isBinary]
  -[EKAttachment setIsBinary:]
  -[EKAttachment localRelativePath]
  -[EKAttachment setLocalRelativePath:]
  -[EKAttachment XPropertiesData]
  -[EKAttachment setXPropertiesData:]
  -[EKAttachment externalId]
  -[EKAttachment setExternalId:]
  -[EKAttachment setURLForPendingFileCopy:]
  -[EKAttachment setFileNameRaw:]
  -[EKAttachment fileNameRaw]


EKEventChange : EKCalendarItemChange
  // class methods
  +[EKEventChange entityType]
  +[EKEventChange fetchEventChangesInStore:resultHandler:]
  +[EKEventChange fetchEventChangesInSource:resultHandler:]
  +[EKEventChange fetchEventChangesInCalendar:resultHandler:]


EKCalendarVisibilityManager : NSObject /usr/lib/libSystem.B.dylib
 @property  EKEventStore *eventStore
 @property  @? visibilityChangedCallback
 @property  CalDarwinNotificationListener *notificationListener
 @property  NSArray *visibleCalendars
 @property  NSArray *visibleCalendarsForAllIdentities
 @property  NSArray *invisibleCalendarsForAllIdentities
 @property  NSArray *invisibleCalendars
 @property  EKSource *limitedToSource

  // class methods
  +[EKCalendarVisibilityManager visibilityChangedNotificationName]

  // instance methods
  -[EKCalendarVisibilityManager init]
  -[EKCalendarVisibilityManager dealloc]
  -[EKCalendarVisibilityManager .cxx_destruct]
  -[EKCalendarVisibilityManager notificationListener]
  -[EKCalendarVisibilityManager setNotificationListener:]
  -[EKCalendarVisibilityManager eventStore]
  -[EKCalendarVisibilityManager setEventStore:]
  -[EKCalendarVisibilityManager initWithEventStore:limitedToSource:visibilityChangedCallback:]
  -[EKCalendarVisibilityManager visibleCalendars]
  -[EKCalendarVisibilityManager limitedToSource]
  -[EKCalendarVisibilityManager setLimitedToSource:]
  -[EKCalendarVisibilityManager setVisibilityChangedCallback:]
  -[EKCalendarVisibilityManager visibilityChangedCallback]
  -[EKCalendarVisibilityManager _calendarsThatAreVisible:filteredByIdentity:]
  -[EKCalendarVisibilityManager _deselectedCalendarIdentifiers]
  -[EKCalendarVisibilityManager initWithEventStore:visibilityChangedCallback:]
  -[EKCalendarVisibilityManager invisibleCalendars]
  -[EKCalendarVisibilityManager visibleCalendarsForAllIdentities]
  -[EKCalendarVisibilityManager invisibleCalendarsForAllIdentities]
  -[EKCalendarVisibilityManager setInvisibleCalendars:]


EKEventStoreWeakWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  EKEventStore *weakEventStore
 @property  ^v unsafeRawPointer

  // instance methods
  -[EKEventStoreWeakWrapper .cxx_destruct]
  -[EKEventStoreWeakWrapper initWithEventStore:]
  -[EKEventStoreWeakWrapper weakEventStore]
  -[EKEventStoreWeakWrapper unsafeRawPointer]


EKEventStore : NSObject /usr/lib/libSystem.B.dylib <EKDaemonConnectionDelegate>
 @property  NSMutableSet *insertedObjects
 @property  NSMutableSet *deletedObjects
 @property  NSMutableSet *updatedObjects
 @property  NSMutableSet *objectsPendingCommit
 @property  BOOL needsCommitForRemoteChanges
 @property  EKDaemonConnection *database
 @property  double lastDatabaseNotificationTimestamp
 @property  unsigned int flags
 @property  NSObject<OS_dispatch_queue> *calendarSourcesAndDefaultsQueue
 @property  NSObject<OS_dispatch_queue> *registeredQueue
 @property  NSObject<OS_dispatch_queue> *unsavedChangesQueue
 @property  NSObject<OS_dispatch_queue> *dbChangedQueue
 @property  NSObject<OS_dispatch_queue> *constraintsCacheQueue
 @property  NSObject<OS_dispatch_queue> *notificationCollectionCacheQueue
 @property  EKDataProtectionObserver *dataProtectionObserver
 @property  NSMutableDictionary *_cachedConstraints
 @property  NSMutableDictionary *_cachedNotificationCollections
 @property  EKReminderStore *reminderStore
 @property  NSDictionary *reminderSourceIDToEventSourceIDMapping
 @property  NSDictionary *eventSourceIDToReminderSourceIDMapping
 @property  NSObject<OS_dispatch_queue> *reminderSourceMapLock
 @property  NSMutableDictionary *registeredObjects
 @property  EKCalendar *defaultCalendarForNewEvents
 @property  NSArray *inboxRepliedSectionItems
 @property  BOOL inboxRepliedSectionHasContent
 @property  EKCalendar *suggestedEventCalendar
 @property  EKCalendar *naturalLanguageSuggestedEventCalendar
 @property  BOOL automaticLocationGeocodingAllowed
 @property  unsigned long lastConfirmedSplashScreenVersion
 @property  BOOL allowsBirthdayModifications
 @property  NSTimeZone *timeZone
 @property  NSString *databasePath
 @property  EKAlarm *defaultTimedAlarm
 @property  EKAlarm *defaultAllDayAlarm
 @property  int unacknowledgedEventCount
 @property  int notifiableEventCount
 @property  BOOL isDataProtected
 @property  BOOL showDeclinedEvents
 @property  <CalCalendarDataContainerProvider> *calendarDataContainerProvider
 @property  EKDaemonConnection *connection
 @property  NSArray *eventNotifications
 @property  unsigned long eventNotificationCount
 @property  NSString *eventStoreIdentifier
 @property  NSArray *delegateSources
 @property  NSArray *sources
 @property  NSArray *calendars
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EKEventStore authorizationStatusForEntityType:]
  +[EKEventStore ekEventStoreInitOptionsFromCalDatabaseInitOptions:]
  +[EKEventStore calDatabaseInitOptionsFromEKEventStoreInitOptions:]
  +[EKEventStore eventStoreChangedDistributedNotificationName]
  +[EKEventStore classForEntityName:]
  +[EKEventStore reminderStoreContainerTokenProvider]
  +[EKEventStore setReminderStoreContainerTokenProvider:]
  +[EKEventStore setDenyAccessToEvents:]
  +[EKEventStore setDenyAccessToReminders:]

  // instance methods
  -[EKEventStore init]
  -[EKEventStore dealloc]
  -[EKEventStore setTimeZone:]
  -[EKEventStore .cxx_destruct]
  -[EKEventStore timeZone]
  -[EKEventStore calendarWithIdentifier:]
  -[EKEventStore flags]
  -[EKEventStore reset]
  -[EKEventStore connection]
  -[EKEventStore setDatabase:]
  -[EKEventStore sequenceNumber]
  -[EKEventStore database]
  -[EKEventStore rollback]
  -[EKEventStore databasePath]
  -[EKEventStore insertedObjects]
  -[EKEventStore sources]
  -[EKEventStore setFlags:]
  -[EKEventStore updatedObjects]
  -[EKEventStore deletedObjects]
  -[EKEventStore registeredObjects]
  -[EKEventStore setDeletedObjects:]
  -[EKEventStore setInsertedObjects:]
  -[EKEventStore setUpdatedObjects:]
  -[EKEventStore objectWithObjectID:]
  -[EKEventStore showDeclinedEvents]
  -[EKEventStore occurrenceCacheOccurrencesAreBeingGenerated]
  -[EKEventStore occurrenceCacheGetOccurrencesForCalendars:]
  -[EKEventStore occurrenceCacheGetOccurrencesForCalendars:onDay:]
  -[EKEventStore eventForUID:occurrenceDate:checkValid:]
  -[EKEventStore saveEvent:span:error:]
  -[EKEventStore eventForUID:occurrenceDate:]
  -[EKEventStore _SGSuggestionsServiceClass]
  -[EKEventStore defaultCalendarForNewEvents]
  -[EKEventStore predicateForEventsWithStartDate:endDate:calendars:]
  -[EKEventStore eventsMatchingPredicate:]
  -[EKEventStore readWriteCalendarCountForEntityType:]
  -[EKEventStore readWriteCalendarsForEntityType:]
  -[EKEventStore saveCalendar:commit:error:]
  -[EKEventStore predicateForEventsWithStartDate:endDate:calendars:loadDefaultProperties:]
  -[EKEventStore initWithEKOptions:]
  -[EKEventStore importICSData:intoCalendar:options:]
  -[EKEventStore eventWithUniqueId:]
  -[EKEventStore calendarsForEntityType:]
  -[EKEventStore deleteCalendar:forEntityType:error:]
  -[EKEventStore removeCalendar:commit:error:]
  -[EKEventStore cacheValidationStatusForAddress:status:]
  -[EKEventStore addressValidationStatus:]
  -[EKEventStore predicateForNaturalLanguageSuggestedEventsWithSearchString:]
  -[EKEventStore refreshSource:userRequested:]
  -[EKEventStore fetchEventsMatchingPredicate:resultHandler:]
  -[EKEventStore automaticLocationGeocodingAllowed]
  -[EKEventStore copyCGColorForNewCalendar]
  -[EKEventStore confirmSuggestedEvent:]
  -[EKEventStore calendarItemWithIdentifier:]
  -[EKEventStore eventWithUniqueId:occurrenceDate:]
  -[EKEventStore defaultCalendarForNewReminders]
  -[EKEventStore initWithOptions:path:]
  -[EKEventStore saveEvent:span:commit:error:]
  -[EKEventStore removeEvent:span:error:]
  -[EKEventStore removeReminder:commit:error:]
  -[EKEventStore acceptSuggestedEvent:]
  -[EKEventStore deleteSuggestedEvent:]
  -[EKEventStore initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:]
  -[EKEventStore calendarWithID:]
  -[EKEventStore defaultCalendarForNewEventsInDelegateSource:]
  -[EKEventStore eventSources]
  -[EKEventStore refreshSourcesIfNecessary:]
  -[EKEventStore closestCachedOccurrenceToDate:forEventUID:prefersForwardSearch:]
  -[EKEventStore delegateSources]
  -[EKEventStore eventNotificationCountForSource:excludingDelegateSources:filteredByShowsNotificationsFlag:]
  -[EKEventStore _allCalendars]
  -[EKEventStore setShowDeclinedEvents:]
  -[EKEventStore setSourceAccountManagement:]
  -[EKEventStore _isUnitTesting]
  -[EKEventStore calendarItemsWithExternalIdentifier:]
  -[EKEventStore eventWithIdentifier:]
  -[EKEventStore requestAccessToEntityType:completion:]
  -[EKEventStore reminderStore]
  -[EKEventStore reminderStoreChanged]
  -[EKEventStore reminderSourceForEventSource:]
  -[EKEventStore saveCalendar:error:]
  -[EKEventStore remindersMatchingPredicate:]
  -[EKEventStore sourceWithIdentifier:]
  -[EKEventStore cachedConstraintsForSource:]
  -[EKEventStore calendars]
  -[EKEventStore removeCalendar:error:]
  -[EKEventStore saveReminder:error:]
  -[EKEventStore removeReminder:error:]
  -[EKEventStore commit:]
  -[EKEventStore predicateForRemindersInCalendars:]
  -[EKEventStore predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:]
  -[EKEventStore predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:]
  -[EKEventStore fetchRemindersMatchingPredicate:completion:]
  -[EKEventStore _cachedConstraints]
  -[EKEventStore lastConfirmedSplashScreenVersion]
  -[EKEventStore cachedConstraintsForSourceWithObjectID:]
  -[EKEventStore registerFetchedObjectWithID:]
  -[EKEventStore publicObjectWithPersistentObject:]
  -[EKEventStore objectWithIDExists:]
  -[EKEventStore _unregisterObject:]
  -[EKEventStore _insertObject:]
  -[EKEventStore _deleteObject:]
  -[EKEventStore eventSourceIDForReminderSourceID:]
  -[EKEventStore daemonRestarted]
  -[EKEventStore contactIdentifierForCalendarItem:]
  -[EKEventStore addContactIdentifier:forCalendarItem:]
  -[EKEventStore removeContactIdentifier:forCalendarItem:]
  -[EKEventStore _addObjectToPendingCommits:]
  -[EKEventStore shouldWhitelistOrganizerEmailFromJunkChecks:]
  -[EKEventStore shouldWhitelistOrganizerPhoneNumberFromJunkChecks:]
  -[EKEventStore _registerObject:]
  -[EKEventStore eventSourceForReminderSource:]
  -[EKEventStore occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:]
  -[EKEventStore publicObjectWithObjectID:]
  -[EKEventStore setReminderSourceMapLock:]
  -[EKEventStore reminderSourceMapLock]
  -[EKEventStore returnEventResults]
  -[EKEventStore reminderSources]
  -[EKEventStore returnReminderResults]
  -[EKEventStore _combineEventSources:withReminderSources:]
  -[EKEventStore _rebuildSourceMapsWithEventSources:reminderSources:]
  -[EKEventStore reminderSourceIDToEventSourceIDMapping]
  -[EKEventStore setReminderSourceIDToEventSourceIDMapping:]
  -[EKEventStore setEventSourceIDToReminderSourceIDMapping:]
  -[EKEventStore reminderSourceMap]
  -[EKEventStore eventSourceMap]
  -[EKEventStore eventSourceIDToReminderSourceIDMapping]
  -[EKEventStore getMapsWithReminderSourceMap:eventSourceMap:]
  -[EKEventStore initializeEKEventStorePlusReminders]
  -[EKEventStore combinedReminderAndEventSources]
  -[EKEventStore combineEventCalendars:withReminderCalendars:]
  -[EKEventStore invalidateReminderSourceMaps]
  -[EKEventStore registerFetchedObjectWithID:withDefaultLoadedPropertyKeys:values:]
  -[EKEventStore isDataProtected]
  -[EKEventStore earliestExpiringNotifiableEventEndDateAfterDate:timeZone:]
  -[EKEventStore eventNotificationsFilteredByShowsNotificationsFlag:]
  -[EKEventStore initWithBirthdayCalendarModifications]
  -[EKEventStore localBirthdayCalendarSource]
  -[EKEventStore predicateForMasterEventsInCalendar:]
  -[EKEventStore removeEvent:span:commit:error:]
  -[EKEventStore enumerateEventsMatchingPredicate:usingBlock:]
  -[EKEventStore _trackModifiedObject:]
  -[EKEventStore defaultAllDayAlarm]
  -[EKEventStore defaultTimedAlarm]
  -[EKEventStore setDataProtectionObserver:]
  -[EKEventStore dataProtectionObserver]
  -[EKEventStore allowsBirthdayModifications]
  -[EKEventStore canModifySuggestedEventCalendar]
  -[EKEventStore initWithOptions:path:allowDelegateSources:]
  -[EKEventStore _accessStatusChanged]
  -[EKEventStore _requestAccessForEntityType:]
  -[EKEventStore setSourceAccountManagement:withBundleID:]
  -[EKEventStore _postEventStoreChangedNotificationWithChangeType:changedObjectIDs:]
  -[EKEventStore _removeCachedCalendarWithID:]
  -[EKEventStore _clearCachedSources]
  -[EKEventStore _clearCachedConstraintsForSourceWithObjectID:]
  -[EKEventStore _detachObject:]
  -[EKEventStore _clearCachedCalendars]
  -[EKEventStore _cacheCalendarWithObjectID:withDefaultLoadedPropertyValues:forKeys:]
  -[EKEventStore _validateObjectIDs:completion:]
  -[EKEventStore calendarSourcesAndDefaultsQueue]
  -[EKEventStore _databaseChangedExternally:]
  -[EKEventStore _cacheSourceWithObjectID:withDefaultLoadedPropertyValues:forKeys:]
  -[EKEventStore _loadSourcesIfNeeded]
  -[EKEventStore _logMainThreadFetchWarningIfNeeded]
  -[EKEventStore _sourceWithID:]
  -[EKEventStore publicObjectWithFetchedObjectID:]
  -[EKEventStore _saveWithoutNotify]
  -[EKEventStore _loadCalendarsIfNeeded]
  -[EKEventStore _calendar:supportsEntityType:]
  -[EKEventStore _setNeedsCommitForRemoteChanges]
  -[EKEventStore shouldSaveCalendarAsEventCalendar:]
  -[EKEventStore _saveCalendar:commit:error:]
  -[EKEventStore shouldSaveCalendarAsReminderCalendar:]
  -[EKEventStore canModifyCalendarDatabase]
  -[EKEventStore _removeCalendar:commit:error:]
  -[EKEventStore _parseURI:expectedScheme:identifier:options:]
  -[EKEventStore _eventWithURI:checkValid:]
  -[EKEventStore closestCachedOccurrenceToDate:forEventUID:]
  -[EKEventStore _importICSData:intoCalendarsWithIDs:options:]
  -[EKEventStore setDefaultCalendar:forNewEventsInDelegateSource:]
  -[EKEventStore saveReminder:commit:error:]
  -[EKEventStore _calendarItemsMatchingPredicate:]
  -[EKEventStore calendarItemsWithExternalIdentifier:inCalendars:]
  -[EKEventStore _calendarItemsWithExternalIdentifier:inCalendars:entityTypes:]
  -[EKEventStore _validateReminderPredicate:]
  -[EKEventStore _predicateForRemindersWithDate:useAsCompletionDate:calendars:limitToCompletedOrIncomplete:completed:includeDatesBefore:sortOrder:preloadProperties:maxResults:]
  -[EKEventStore _predicateForRemindersWithDate:useAsCompletionDate:calendars:limitToCompletedOrIncomplete:completed:includeDatesBefore:sortOrder:preloadProperties:]
  -[EKEventStore predicateForCompletedRemindersWithDueDate:calendars:sortOrder:]
  -[EKEventStore predicateForRemindersWithSearchTerm:preloadProperties:]
  -[EKEventStore predicateForRemindersWithTitle:listTitle:limitToCompletedOrIncomplete:completed:dueAfter:dueBefore:searchTerm:sortOrder:maxResults:]
  -[EKEventStore accessGrantedForEntityType:]
  -[EKEventStore sharedCalendarInvitationsForEntityTypes:]
  -[EKEventStore scheduledTaskCacheFetchTasksOnDay:maxResults:]
  -[EKEventStore removeResourceChanges:error:]
  -[EKEventStore resourceChangesForEntityTypes:]
  -[EKEventStore removeInviteReplyNotifications:error:]
  -[EKEventStore _refreshDASource:isUserRequested:]
  -[EKEventStore _registerObjectImmediate:]
  -[EKEventStore _addFetchedObjectWithID:]
  -[EKEventStore _forgetRegisteredObjects]
  -[EKEventStore _commit:]
  -[EKEventStore _reregisterObject:oldID:]
  -[EKEventStore _removeCachedCalendarFromSource:]
  -[EKEventStore _validateEventPredicate:]
  -[EKEventStore travelEligibleEventsInCalendars:startDate:endDate:]
  -[EKEventStore predicateForPotentialTravelEventsInCalendars:startDate:endDate:]
  -[EKEventStore constraintsCacheQueue]
  -[EKEventStore _fetchConstraintsForSourceWithObjectID:]
  -[EKEventStore set_cachedConstraints:]
  -[EKEventStore notificationCollectionCacheQueue]
  -[EKEventStore _cachedNotificationCollections]
  -[EKEventStore _fetchPersistentNotificationCollectionForSourceWithObjectID:]
  -[EKEventStore set_cachedNotificationCollections:]
  -[EKEventStore initWithAccessToDelegateSources]
  -[EKEventStore initWithOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:]
  -[EKEventStore _setIsUnitTesting:]
  -[EKEventStore _simulateDaemonCrashForUnitTests]
  -[EKEventStore changesSinceSequenceNumber:]
  -[EKEventStore _defaultCalendarChangedExternally]
  -[EKEventStore _defaultAlarmChangedExternally]
  -[EKEventStore eventStoreIdentifier]
  -[EKEventStore _deletableSources]
  -[EKEventStore getSubscribedCalendarsSourceCreateIfNeededWithError:]
  -[EKEventStore delegateSourcesForSource:]
  -[EKEventStore fetchGrantedDelegatesForSource:results:]
  -[EKEventStore updateGrantedDelegatePermission:source:completion:]
  -[EKEventStore localSource]
  -[EKEventStore ownedSources]
  -[EKEventStore sourceWithExternalID:]
  -[EKEventStore saveSource:commit:error:]
  -[EKEventStore removeSource:commit:error:]
  -[EKEventStore hideCalendarsFromNotificationCenter:error:]
  -[EKEventStore _deletableCalendars]
  -[EKEventStore removeAllItemsInCalendar:error:]
  -[EKEventStore _eventOccurrenceWithURI:]
  -[EKEventStore allEventsWithUniqueId:occurrenceDate:]
  -[EKEventStore setInvitationStatus:forEvent:error:]
  -[EKEventStore setInvitationStatus:forEvents:error:]
  -[EKEventStore importICS:intoCalendar:options:]
  -[EKEventStore importICSData:intoCalendars:options:]
  -[EKEventStore ICSDataForCalendarItems:preventLineFolding:]
  -[EKEventStore defaultLocalCalendar]
  -[EKEventStore acquireDefaultCalendarForNewEvents]
  -[EKEventStore setDefaultCalendarForNewEvents:]
  -[EKEventStore acquireDefaultCalendarForNewReminders]
  -[EKEventStore setDefaultCalendarForNewReminders:]
  -[EKEventStore _removeReminder:commit:error:]
  -[EKEventStore reminderWithExternalURI:]
  -[EKEventStore calendarItemsWithUniqueIdentifier:inCalendar:]
  -[EKEventStore eventsWithExternalIdentifier:inCalendars:]
  -[EKEventStore remindersWithExternalIdentifier:inCalendars:]
  -[EKEventStore _remindersMatchingPredicate:]
  -[EKEventStore countOfRemindersMatchingPredicate:]
  -[EKEventStore reminderObjectIDsMatchingPredicate:]
  -[EKEventStore predicateForRemindersInCalendars:preloadProperties:]
  -[EKEventStore predicateForIncompleteRemindersDueBeforeOrOnExactDueDate:calendars:sortOrder:]
  -[EKEventStore predicateForIncompleteRemindersWithDueDate:calendars:sortOrder:]
  -[EKEventStore predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:]
  -[EKEventStore predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:maxResults:]
  -[EKEventStore predicateForIncompleteRemindersDueBeforeOrOnDueDate:calendars:sortOrder:]
  -[EKEventStore predicateForPreloadedCompletedRemindersWithDueDate:calendars:sortOrder:preloadProperties:]
  -[EKEventStore predicateForCompletedRemindersWithDueDateOrCompletionDate:calendars:sortOrder:]
  -[EKEventStore predicateForAllRemindersWithDueDate:calendars:]
  -[EKEventStore predicateForAllRemindersDueBeforeOrOnDueDate:calendars:]
  -[EKEventStore predicateForRemindersWithTitle:calendars:]
  -[EKEventStore predicateForCompletedRemindersWithCalendars:]
  -[EKEventStore predicateForRemindersWithSearchTerm:]
  -[EKEventStore predicateForRemindersWithTitle:listTitle:limitToCompletedOrIncomplete:completed:dueAfter:dueBefore:searchTerm:sortOrder:]
  -[EKEventStore fetchProperties:forReminders:]
  -[EKEventStore eventWithUUID:]
  -[EKEventStore doEvents:haveOccurrencesAfterDate:]
  -[EKEventStore calendarWithExternalURI:]
  -[EKEventStore countOfRemindersWithContactIdentifier:]
  -[EKEventStore remindersWithContactIdentifier:]
  -[EKEventStore scheduledTaskCacheFetchDaysAndTaskCounts]
  -[EKEventStore scheduledTaskCacheFetchTasksOnDay:]
  -[EKEventStore rebuildOccurrenceCache]
  -[EKEventStore suggestedEventCalendar]
  -[EKEventStore insertSuggestedEventCalendar]
  -[EKEventStore removeSuggestedEventCalendar]
  -[EKEventStore naturalLanguageSuggestedEventCalendar]
  -[EKEventStore unacknowledgedEventCount]
  -[EKEventStore notifiableEventCount]
  -[EKEventStore saveNotification:commit:error:]
  -[EKEventStore saveNotificationCollection:commit:error:]
  -[EKEventStore markResourceChangeAlertedAndSave:error:]
  -[EKEventStore removeResourceChange:error:]
  -[EKEventStore removeResourceChangesForCalendarItem:error:]
  -[EKEventStore eventNotifications]
  -[EKEventStore eventNotificationCount]
  -[EKEventStore inboxRepliedSectionItems]
  -[EKEventStore removeInviteReplyNotification:error:]
  -[EKEventStore refreshSourcesIfNecessary]
  -[EKEventStore eventObjectIDsMatchingPredicate:]
  -[EKEventStore fetchObjectsMatchingPredicate:completion:]
  -[EKEventStore objectsMatchingPredicate:]
  -[EKEventStore cancelFetchRequest:]
  -[EKEventStore alarmWithUUID:]
  -[EKEventStore alarmOccurrencesBetweenStartDate:endDate:inCalendars:completion:]
  -[EKEventStore locationBasedAlarmOccurrencesWithCompletion:]
  -[EKEventStore vehicleTriggerAlarmOccurrencesWithCompletion:]
  -[EKEventStore predicateForAssistantEventSearchWithTimeZone:startDate:endDate:title:location:notes:participants:calendars:limit:]
  -[EKEventStore predicateForNotifiableEvents]
  -[EKEventStore predicateForNotificationCenterVisibleEvents]
  -[EKEventStore predicateForUnacknowledgedEvents]
  -[EKEventStore predicateForUnalertedEvents]
  -[EKEventStore predicateForUpcomingEventsWithLimit:]
  -[EKEventStore predicateForMasterEventsInCalendars:]
  -[EKEventStore hasImmediatelyEligibleTravelEvents]
  -[EKEventStore predicateForUpNextEventsInCalendars:startDate:endDate:startDateRestrictionThreshold:]
  -[EKEventStore predicateForEventsWithStartDate:title:source:]
  -[EKEventStore predicateForEventCreatedFromSuggestionWithOpaqueKey:]
  -[EKEventStore predicateForEventsCreatedFromSuggestionWithExtractionGroupIdentifier:]
  -[EKEventStore predicateForEventsWithStartDate:endDate:calendars:matchingContacts:]
  -[EKEventStore predicateForCalendarItemsOfType:inCalendar:]
  -[EKEventStore predicateForMasterEventsWithExternalTrackingStatusInCalendar:]
  -[EKEventStore predicateForCalendarItemsOfType:withUniqueIdentifier:inCalendar:]
  -[EKEventStore predicateForCalendarItemsOfType:withUniqueIdentifier:inSource:]
  -[EKEventStore predicateForCalendarItemsOfType:withExternalID:inCalendar:]
  -[EKEventStore predicateForCalendarItemsOfType:withExternalID:inSource:]
  -[EKEventStore predicateForMasterEventsWithStartDate:title:inCalendar:]
  -[EKEventStore predicateForMasterEventsWithOccurrencesWithStartDate:endDate:inCalendar:]
  -[EKEventStore predicateForMasterEventsWithInvitationsAndOccurrencesAfter:inCalendar:]
  -[EKEventStore predicateForNonrecurringEventsWithStartDate:endDate:calendars:]
  -[EKEventStore predicateForIncompleteRemindersAndRemindersCompletedAfter:inCalendar:]
  -[EKEventStore registerForDetailedChangeTracking:]
  -[EKEventStore unregisterForDetailedChangeTracking:]
  -[EKEventStore fetchChangedObjectIDsSinceToken:resultHandler:]
  -[EKEventStore markChangedObjectIDsConsumedUpToToken:]
  -[EKEventStore markIndividualChangesConsumed:error:]
  -[EKEventStore clearSuperfluousChanges]
  -[EKEventStore purgeChangelog]
  -[EKEventStore pushSpotlightUpdatesForCalendarItemUUIDs:]
  -[EKEventStore notificationCollectionForSource:]
  -[EKEventStore postSyntheticRouteHypothesis:forEventWithExternalURL:]
  -[EKEventStore objectsPendingCommit]
  -[EKEventStore setObjectsPendingCommit:]
  -[EKEventStore needsCommitForRemoteChanges]
  -[EKEventStore setNeedsCommitForRemoteChanges:]
  -[EKEventStore lastDatabaseNotificationTimestamp]
  -[EKEventStore setLastDatabaseNotificationTimestamp:]
  -[EKEventStore registeredQueue]
  -[EKEventStore unsavedChangesQueue]
  -[EKEventStore dbChangedQueue]
  -[EKEventStore setRegisteredObjects:]
  -[EKEventStore inboxRepliedSectionHasContent]
  -[EKEventStore calendarDataContainerProvider]


EKResourceChange : EKObject <EKIdentityProtocol>
 @property  EKCalendar *calendar
 @property  EKCalendarItem *calendarItem
 @property  NSString *changedByDisplayName
 @property  NSURL *changedByAddress
 @property  NSString *changedByFirstName
 @property  NSString *changedByLastName
 @property  unsigned int changeType
 @property  NSDate *timestamp
 @property  BOOL dateChanged
 @property  BOOL timeChanged
 @property  BOOL titleChanged
 @property  BOOL locationChanged
 @property  NSNumber *createCount
 @property  NSNumber *updateCount
 @property  NSNumber *deleteCount
 @property  NSString *deletedTitle
 @property  BOOL alerted
 @property  unsigned int publicStatus
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EKResourceChange frozenClass]
  +[EKResourceChange knownRelationshipSingleValueKeys]
  +[EKResourceChange knownRelationshipWeakKeys]
  +[EKResourceChange calendarItemPropertyName]

  // instance methods
  -[EKResourceChange name]
  -[EKResourceChange calendar]
  -[EKResourceChange changeType]
  -[EKResourceChange URL]
  -[EKResourceChange timestamp]
  -[EKResourceChange phoneNumber]
  -[EKResourceChange notification]
  -[EKResourceChange emailAddress]
  -[EKResourceChange deleteCount]
  -[EKResourceChange firstName]
  -[EKResourceChange lastName]
  -[EKResourceChange updateCount]
  -[EKResourceChange calendarItem]
  -[EKResourceChange timeChanged]
  -[EKResourceChange dateChanged]
  -[EKResourceChange locationChanged]
  -[EKResourceChange alerted]
  -[EKResourceChange deletedTitle]
  -[EKResourceChange changedByDisplayName]
  -[EKResourceChange createCount]
  -[EKResourceChange titleChanged]
  -[EKResourceChange clearAlertedStatus]
  -[EKResourceChange changedByAddress]
  -[EKResourceChange changedByFirstName]
  -[EKResourceChange changedByLastName]
  -[EKResourceChange changedProperties]
  -[EKResourceChange publicStatus]
  -[EKResourceChange _propertyWithFlagDidChange:]


EKSourceChange : EKObjectChange
  // class methods
  +[EKSourceChange entityType]
  +[EKSourceChange fetchSourceChangesInStore:resultHandler:]


EKREMCompletionStateReminderPredicate : EKREMReminderPredicate
  // instance methods
  -[EKREMCompletionStateReminderPredicate .cxx_destruct]
  -[EKREMCompletionStateReminderPredicate evaluateWithObject:]
  -[EKREMCompletionStateReminderPredicate initForIncompleteRemindersWithDueDateStarting:ending:calendars:]
  -[EKREMCompletionStateReminderPredicate initForCompletedRemindersWithCompletionDateStarting:ending:calendars:]
  -[EKREMCompletionStateReminderPredicate fetchMatchingRemindersInStore:allLists:error:]


EKInviteeAlternativeTime : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSArray *conflictedParticipants

  // instance methods
  -[EKInviteeAlternativeTime .cxx_destruct]
  -[EKInviteeAlternativeTime startDate]
  -[EKInviteeAlternativeTime endDate]
  -[EKInviteeAlternativeTime setStartDate:]
  -[EKInviteeAlternativeTime setEndDate:]
  -[EKInviteeAlternativeTime conflictedParticipants]
  -[EKInviteeAlternativeTime initWithStartDate:endDate:conflictedParticipants:]
  -[EKInviteeAlternativeTime setConflictedParticipants:]


EKContactChange : EKObjectChange <EKOwnerIDProviding>
 @property  EKObjectID *ownerID

  // class methods
  +[EKContactChange entityType]
  +[EKContactChange fetchContactChangesInStore:resultHandler:]
  +[EKContactChange fetchContactChangesInSource:resultHandler:]
  +[EKContactChange fetchContactChangesInCalendar:resultHandler:]

  // instance methods
  -[EKContactChange .cxx_destruct]
  -[EKContactChange ownerID]
  -[EKContactChange initWithChangeProperties:]


EKReadWriteLock : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[EKReadWriteLock .cxx_destruct]
  -[EKReadWriteLock initWithName:]
  -[EKReadWriteLock performWithReadLock:]
  -[EKReadWriteLock performWithWriteLock:]


EKPersistentSource : EKPersistentObject
 @property  NSString *UUID
 @property  long long sourceType
 @property  NSString *title
 @property  NSNumber *defaultAlarmOffset
 @property  NSString *externalID
 @property  NSString *externalModificationTag
 @property  BOOL disabled
 @property  BOOL onlyCreatorCanModify
 @property  int preferredEventPrivateValue
 @property  int strictestEventPrivateValue
 @property  NSString *UUID
 @property  EKFrozenReminderSource *reminderSource

  // class methods
  +[EKPersistentSource relations]
  +[EKPersistentSource defaultPropertiesToLoad]
  +[EKPersistentSource meltedClass]

  // instance methods
  -[EKPersistentSource .cxx_destruct]
  -[EKPersistentSource flags]
  -[EKPersistentSource constraints]
  -[EKPersistentSource UUID]
  -[EKPersistentSource setUUID:]
  -[EKPersistentSource title]
  -[EKPersistentSource setTitle:]
  -[EKPersistentSource disabled]
  -[EKPersistentSource setFlags:]
  -[EKPersistentSource setDisabled:]
  -[EKPersistentSource sourceType]
  -[EKPersistentSource setSourceType:]
  -[EKPersistentSource externalID]
  -[EKPersistentSource setExternalID:]
  -[EKPersistentSource externalModificationTag]
  -[EKPersistentSource setExternalModificationTag:]
  -[EKPersistentSource creatorBundleID]
  -[EKPersistentSource setCreatorBundleID:]
  -[EKPersistentSource entityType]
  -[EKPersistentSource lastSyncEndDate]
  -[EKPersistentSource preferredEventPrivateValue]
  -[EKPersistentSource lastSyncError]
  -[EKPersistentSource reminderSource]
  -[EKPersistentSource delegatedAccountOwnerStoreID]
  -[EKPersistentSource lastSyncStartDate]
  -[EKPersistentSource setLastSyncError:]
  -[EKPersistentSource setLastSyncStartDate:]
  -[EKPersistentSource setLastSyncEndDate:]
  -[EKPersistentSource defaultAlarmOffset]
  -[EKPersistentSource strictestEventPrivateValue]
  -[EKPersistentSource setReminderSource:]
  -[EKPersistentSource setPreferredEventPrivateValue:]
  -[EKPersistentSource setStrictestEventPrivateValue:]
  -[EKPersistentSource setDefaultAlarmOffset:]
  -[EKPersistentSource constraintsDescriptionPath]
  -[EKPersistentSource setConstraintsDescriptionPath:]
  -[EKPersistentSource creatorCodeSigningIdentity]
  -[EKPersistentSource setCreatorCodeSigningIdentity:]
  -[EKPersistentSource onlyCreatorCanModify]
  -[EKPersistentSource setOnlyCreatorCanModify:]
  -[EKPersistentSource showsNotifications]
  -[EKPersistentSource setShowsNotifications:]
  -[EKPersistentSource setDelegatedAccountOwnerStoreID:]


EKRecurrenceHelper : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL isDirty
 @property  NSString *specifier
 @property  NSArray *daysOfTheWeek
 @property  NSArray *daysOfTheMonth
 @property  NSArray *daysOfTheYear
 @property  NSArray *weeksOfTheYear
 @property  NSArray *monthsOfTheYear
 @property  NSArray *setPositions

  // instance methods
  -[EKRecurrenceHelper isEqual:]
  -[EKRecurrenceHelper .cxx_destruct]
  -[EKRecurrenceHelper specifier]
  -[EKRecurrenceHelper isDirty]
  -[EKRecurrenceHelper setSpecifier:]
  -[EKRecurrenceHelper initWithSpecifier:]
  -[EKRecurrenceHelper revert]
  -[EKRecurrenceHelper daysOfTheWeek]
  -[EKRecurrenceHelper daysOfTheMonth]
  -[EKRecurrenceHelper setDaysOfTheMonth:]
  -[EKRecurrenceHelper monthsOfTheYear]
  -[EKRecurrenceHelper setMonthsOfTheYear:]
  -[EKRecurrenceHelper setDaysOfTheWeek:]
  -[EKRecurrenceHelper setPositions]
  -[EKRecurrenceHelper setSetPositions:]
  -[EKRecurrenceHelper daysOfTheYear]
  -[EKRecurrenceHelper weeksOfTheYear]
  -[EKRecurrenceHelper setDaysOfTheYear:]
  -[EKRecurrenceHelper setWeeksOfTheYear:]
  -[EKRecurrenceHelper _updateSpecifier]
  -[EKRecurrenceHelper _clearArrays]
  -[EKRecurrenceHelper _parseSpecifierIfNeeded]
  -[EKRecurrenceHelper _appendDaysOfTheWeek:toSpecifier:]
  -[EKRecurrenceHelper _appendIndexList:toSpecifier:propertyKey:]
  -[EKRecurrenceHelper _parseDaysOfWeek:range:]
  -[EKRecurrenceHelper _parseIndexList:range:]


EKConflictDetails : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *conflictingDates
 @property  NSArray *conflictingEvents
 @property  NSArray *needsActionEvents
 @property  unsigned long totalOccurrencesInSeries
 @property  unsigned long totalConflictsInSeries
 @property  unsigned long totalConflictingEvents
 @property  unsigned long totalNeedsActionEvents
 @property  CalDateRange *conflictPeriodForSeries

  // class methods
  +[EKConflictDetails infoWithConflicts:needsAction:event:]
  +[EKConflictDetails infoWithConflictsInSeries:outOf:withPeriod:conflictingDates:]
  +[EKConflictDetails _dateRangeToScanForConflictsForEvent:dateForNow:]
  +[EKConflictDetails _maxRangeLengthForRule:]
  +[EKConflictDetails dateRangeToScanForConflictsForEvent:]
  +[EKConflictDetails calendarIdentifiersToScanForConflictsForEvent:]

  // instance methods
  -[EKConflictDetails .cxx_destruct]
  -[EKConflictDetails setTotalOccurrencesInSeries:]
  -[EKConflictDetails setTotalConflictsInSeries:]
  -[EKConflictDetails setConflictPeriodForSeries:]
  -[EKConflictDetails setConflictingDates:]
  -[EKConflictDetails setConflictingEvents:]
  -[EKConflictDetails setNeedsActionEvents:]
  -[EKConflictDetails setTotalConflictingEvents:]
  -[EKConflictDetails setTotalNeedsActionEvents:]
  -[EKConflictDetails totalConflictsInSeries]
  -[EKConflictDetails totalOccurrencesInSeries]
  -[EKConflictDetails initWithConflictingDates:conflictingEvents:needsActionEvents:totalOccurrencesInSeries:conflictPeriodForSeries:]
  -[EKConflictDetails conflictingDates]
  -[EKConflictDetails conflictingEvents]
  -[EKConflictDetails needsActionEvents]
  -[EKConflictDetails totalConflictingEvents]
  -[EKConflictDetails totalNeedsActionEvents]
  -[EKConflictDetails conflictPeriodForSeries]


EKInviteReplyNotificationChange : EKNotificationChange
  // class methods
  +[EKInviteReplyNotificationChange entityType]


EKAvailabilityCachedSpan : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDate *creationDate
 @property  EKAvailabilitySpan *span

  // instance methods
  -[EKAvailabilityCachedSpan .cxx_destruct]
  -[EKAvailabilityCachedSpan creationDate]
  -[EKAvailabilityCachedSpan setCreationDate:]
  -[EKAvailabilityCachedSpan span]
  -[EKAvailabilityCachedSpan setSpan:]
  -[EKAvailabilityCachedSpan initWithSpan:]


EKInviteeTimeSpan : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSMutableArray *conflictedParticipants

  // instance methods
  -[EKInviteeTimeSpan init]
  -[EKInviteeTimeSpan copyWithZone:]
  -[EKInviteeTimeSpan .cxx_destruct]
  -[EKInviteeTimeSpan startDate]
  -[EKInviteeTimeSpan endDate]
  -[EKInviteeTimeSpan setStartDate:]
  -[EKInviteeTimeSpan setEndDate:]
  -[EKInviteeTimeSpan conflictedParticipants]
  -[EKInviteeTimeSpan setConflictedParticipants:]


EKStructuredLocationPrediction : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[EKStructuredLocationPrediction userInteractionWithPredictedLocationOfInterest:interaction:]
  +[EKStructuredLocationPrediction locationPredictionForEvent:error:timeout:]
  +[EKStructuredLocationPrediction shouldDoLocationPredictionForEvent:]
  +[EKStructuredLocationPrediction _mockLocationForEvent:]


CADContactEventsPredicate(EKPredicateEvaluating)
	// instance methods
	-[CADContactEventsPredicate(EKPredicateEvaluating) ekPredicateEvaluateWithObject:]

CADNotifiableEventsPredicate(EKPredicateEvaluating)
	// instance methods
	-[CADNotifiableEventsPredicate(EKPredicateEvaluating) ekPredicateEvaluateWithObject:]

CADUpNextEventsPredicate(EKPredicateEvaluating)
	// instance methods
	-[CADUpNextEventsPredicate(EKPredicateEvaluating) ekPredicateEvaluateWithObject:]

CADUnalertedEventsPredicate(EKPredicateEvaluating)
	// instance methods
	-[CADUnalertedEventsPredicate(EKPredicateEvaluating) ekPredicateEvaluateWithObject:]

CADPropertySearchPredicate(EKPredicateEvaluating)
	// instance methods
	-[CADPropertySearchPredicate(EKPredicateEvaluating) ekPredicateEvaluateWithObject:]

CADFilter(EKPredicateEvaluating)
	// instance methods
	-[CADFilter(EKPredicateEvaluating) ekPredicateFilterMatches:]

CADPropertyFilter(EKPredicateEvaluating)
	// instance methods
	-[CADPropertyFilter(EKPredicateEvaluating) ekPredicateFilterMatches:]

CADCompoundFilter(EKPredicateEvaluating)
	// instance methods
	-[CADCompoundFilter(EKPredicateEvaluating) ekPredicateFilterMatches:]

CADEventTimeWindowPredicate(EKPredicateEvaluating)
	// instance methods
	-[CADEventTimeWindowPredicate(EKPredicateEvaluating) ekPredicateEvaluateWithObject:]

CADEventCreatedFromSuggestionPredicate(EKPredicateEvaluating)
	// instance methods
	-[CADEventCreatedFromSuggestionPredicate(EKPredicateEvaluating) ekPredicateEvaluateWithObject:]

CADCalendarItemsWithExternalIdentifierPredicate(EKPredicateEvaluating)
	// instance methods
	-[CADCalendarItemsWithExternalIdentifierPredicate(EKPredicateEvaluating) ekPredicateEvaluateWithObject:]

CADEventPredicate(EKPredicateEvaluating)
	// instance methods
	-[CADEventPredicate(EKPredicateEvaluating) ekPredicateEvaluateWithObject:]

NSError(EventKit)
	// class methods
	+[NSError(EventKit) errorWithEKErrorCode:]
	+[NSError(EventKit) errorWithCADResult:]
	+[NSError(EventKit) errorWithEKErrorCode:description:]
	+[NSError(EventKit) errorWithCADResult:action:]
	+[NSError(EventKit) _defaultDescriptionForCode:]
	+[NSError(EventKit) errorWithEKErrorCode:description:underlyingError:reason:]
	+[NSError(EventKit) errorWithEKErrorCode:underlyingError:]
	+[NSError(EventKit) errorWithEKErrorCode:description:reason:]

CADTravelEventsPredicate(EKPredicateEvaluating)
	// instance methods
	-[CADTravelEventsPredicate(EKPredicateEvaluating) ekPredicateEvaluateWithObject:]

CADUnacknowledgedEventsPredicate(EKPredicateEvaluating)
	// instance methods
	-[CADUnacknowledgedEventsPredicate(EKPredicateEvaluating) ekPredicateEvaluateWithObject:]

CADRespondedEventsPredicate(EKPredicateEvaluating)
	// instance methods
	-[CADRespondedEventsPredicate(EKPredicateEvaluating) ekPredicateEvaluateWithObject:]

CADNotificationCenterVisibleEventsPredicate(EKPredicateEvaluating)
	// instance methods
	-[CADNotificationCenterVisibleEventsPredicate(EKPredicateEvaluating) ekPredicateEvaluateWithObject:]

NSTimeZone(CalendarAdditions)
	// class methods
	+[NSTimeZone(CalendarAdditions) calendarTimeZone]

01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADCalendarItemsWithExternalIdentifierPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADChangeTrackingClientId 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADCompoundFilter 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADContactEventsPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADDatabaseInitializationOptions 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADEventCreatedFromSuggestionPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADEventPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADEventTimeWindowPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADEventsForAssistantSearchPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADFilter 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADNaturalLanguageSuggestedEventsSearchPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADNotifiableEventsPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADNotificationCenterVisibleEventsPredicate 
01 00 0300 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CADObjectChangeID 
01 00 0300 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CADObjectID 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADPropertyFilter 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADPropertySearchPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADRespondedEventsPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADRouteHypothesis 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADTravelEventsPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADUnacknowledgedEventsPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADUnalertedEventsPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADUpNextEventsPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADUpcomingEventsPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: CADXPCProxyHelper 
01 00 0300 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CDBDataProtectionObserver 
01 00 0300 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CDBPreferences 
01 00 0800 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0500 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 0500 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFetchRequest 
01 00 0500 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 0500 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactsUserDefaults 
01 00 0500 /System/Library/Frameworks/Contacts.framework/Contacts: CNLabeledValue 
01 00 0500 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutableContact 
01 00 0500 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 0500 /System/Library/Frameworks/Contacts.framework/Contacts: CNPostalAddress 
01 00 0500 /System/Library/Frameworks/Contacts.framework/Contacts: CNPostalAddressFormatter 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalAccountUtils 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalContactsProvider 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalDarwinNotificationListener 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalDateRange 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalDefaults 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalDescriptionBuilder 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalEntitlementsVerifier 
01 00 0300 /System/Library/PrivateFrameworks/CalendarDatabase.framework/CalendarDatabase: CalItemMetadata 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalLimitingQueue 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalLocation 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalLocationAuthorization 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalLocationManager 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalLocationPrediction 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalNSDateProvider 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalPreferences 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalRecurrenceGenerator 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalRoute 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalStopwatch 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalStructuredDataArchiver 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalUMCalendarDataContainerProvider 
01 00 0900 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DADConnection 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: EKAlarmOccurrence 
01 00 0400 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: EKCalendarDate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: EKMasterEventsPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: EKReminderPredicate 
01 00 0200 /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon: EKScheduledReminderPredicate 
01 00 0b00 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSProperty 
01 00 1200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDataDetector 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerFunctions 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUserActivity 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0e00 /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection: PCPersistentTimer 
