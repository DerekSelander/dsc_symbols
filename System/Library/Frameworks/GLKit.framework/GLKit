|| __DATA.__common __staticFshMasks
|| __DATA.__common __staticVshMasks
|| __DATA.__objc_data _OBJC_CLASS_$_GLKBaseEffect
|| __DATA.__objc_data _OBJC_CLASS_$_GLKDisplayLinkMessenger
|| __DATA.__objc_data _OBJC_CLASS_$_GLKEffect
|| __DATA.__objc_data _OBJC_CLASS_$_GLKEffectProperty
|| __DATA.__objc_data _OBJC_CLASS_$_GLKEffectPropertyConstantColor
|| __DATA.__objc_data _OBJC_CLASS_$_GLKEffectPropertyFog
|| __DATA.__objc_data _OBJC_CLASS_$_GLKEffectPropertyLight
|| __DATA.__objc_data _OBJC_CLASS_$_GLKEffectPropertyMaterial
|| __DATA.__objc_data _OBJC_CLASS_$_GLKEffectPropertyTexGen
|| __DATA.__objc_data _OBJC_CLASS_$_GLKEffectPropertyTexture
|| __DATA.__objc_data _OBJC_CLASS_$_GLKEffectPropertyTransform
|| __DATA.__objc_data _OBJC_CLASS_$_GLKHashableBigInt
|| __DATA.__objc_data _OBJC_CLASS_$_GLKMesh
|| __DATA.__objc_data _OBJC_CLASS_$_GLKMeshBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_GLKMeshBufferAllocator
|| __DATA.__objc_data _OBJC_CLASS_$_GLKMeshBufferHolder
|| __DATA.__objc_data _OBJC_CLASS_$_GLKMeshBufferZone
|| __DATA.__objc_data _OBJC_CLASS_$_GLKReflectionMapEffect
|| __DATA.__objc_data _OBJC_CLASS_$_GLKShaderBlockNode
|| __DATA.__objc_data _OBJC_CLASS_$_GLKShadingHash
|| __DATA.__objc_data _OBJC_CLASS_$_GLKSkyboxEffect
|| __DATA.__objc_data _OBJC_CLASS_$_GLKSubmesh
|| __DATA.__objc_data _OBJC_CLASS_$_GLKTexture
|| __DATA.__objc_data _OBJC_CLASS_$_GLKTextureLoader
|| __DATA.__objc_data _OBJC_CLASS_$_GLKTextureTXR
|| __DATA.__objc_data _OBJC_CLASS_$_GLKView
|| __DATA.__objc_data _OBJC_CLASS_$_GLKViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKBaseEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKDisplayLinkMessenger
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKEffectProperty
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKEffectPropertyConstantColor
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKEffectPropertyFog
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKEffectPropertyLight
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKEffectPropertyMaterial
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKEffectPropertyTexGen
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKEffectPropertyTexture
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKEffectPropertyTransform
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKHashableBigInt
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKMesh
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKMeshBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKMeshBufferAllocator
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKMeshBufferHolder
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKMeshBufferZone
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKReflectionMapEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKShaderBlockNode
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKShadingHash
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKSkyboxEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKSubmesh
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKTexture
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKTextureLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKTextureTXR
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKView
|| __DATA.__objc_data _OBJC_METACLASS_$_GLKViewController
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._colorMaterialEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._constantColor
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._fog
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._fogEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._label
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._light0
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._light1
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._light2
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._lightingType
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._material
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._texture2d0
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._texture2d1
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._textureOrder
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKBaseEffect._transform
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKDisplayLinkMessenger._target
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKEffectProperty._location
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKEffectProperty._nameString
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKEffectProperty._prv
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKEffectPropertyConstantColor._color
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKEffectPropertyTexGen._coord
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKEffectPropertyTexGen._mode
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKEffectPropertyTexGen._plane
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKEffectPropertyTexture._enabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKEffectPropertyTexture._envMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKEffectPropertyTexture._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKEffectPropertyTexture._target
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKHashableBigInt._bigInt
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKShaderBlockNode._blockText
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKShaderBlockNode._children
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKShaderBlockNode._index
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKShaderBlockNode._label
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKShaderBlockNode._loopVar
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKShaderBlockNode._mask
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKShaderBlockNode._next
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKShaderBlockNode._parent
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKShaderBlockNode._propertyClass
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKShaderBlockNode._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_GLKShaderBlockNode._unrollCt
|| __DATA_CONST.__const _GLKTextureLoaderApplyPremultiplication
|| __DATA_CONST.__const _GLKTextureLoaderErrorDomain
|| __DATA_CONST.__const _GLKTextureLoaderErrorKey
|| __DATA_CONST.__const _GLKTextureLoaderGLErrorKey
|| __DATA_CONST.__const _GLKTextureLoaderGenerateMipmaps
|| __DATA_CONST.__const _GLKTextureLoaderGrayscaleAsAlpha
|| __DATA_CONST.__const _GLKTextureLoaderOriginBottomLeft
|| __DATA_CONST.__const _GLKTextureLoaderSRGB
|| __DATA_CONST.__const _GLKViewSnapshotInDrawException
|| __DATA_CONST.__const _kGLKModelErrorDomain
|| __DATA_CONST.__const _kGLKModelErrorKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GLKTextureInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GLKTextureInfo
|| __TEXT.__const _GLKMatrix3Identity
|| __TEXT.__const _GLKMatrix4Identity
|| __TEXT.__const _GLKQuaternionIdentity
|| __TEXT.__text _GLKMathProject
|| __TEXT.__text _GLKMathUnproject
|| __TEXT.__text _GLKMatrix3Invert
|| __TEXT.__text _GLKMatrix3InvertAndTranspose
|| __TEXT.__text _GLKMatrix4Invert
|| __TEXT.__text _GLKMatrix4InvertAndTranspose
|| __TEXT.__text _GLKMatrixStackCreate
|| __TEXT.__text _GLKMatrixStackGetMatrix2
|| __TEXT.__text _GLKMatrixStackGetMatrix3
|| __TEXT.__text _GLKMatrixStackGetMatrix3Inverse
|| __TEXT.__text _GLKMatrixStackGetMatrix3InverseTranspose
|| __TEXT.__text _GLKMatrixStackGetMatrix4
|| __TEXT.__text _GLKMatrixStackGetMatrix4Inverse
|| __TEXT.__text _GLKMatrixStackGetMatrix4InverseTranspose
|| __TEXT.__text _GLKMatrixStackGetModifyCount
|| __TEXT.__text _GLKMatrixStackGetTypeID
|| __TEXT.__text _GLKMatrixStackLoadMatrix4
|| __TEXT.__text _GLKMatrixStackMultiplyMatrix4
|| __TEXT.__text _GLKMatrixStackMultiplyMatrixStack
|| __TEXT.__text _GLKMatrixStackPop
|| __TEXT.__text _GLKMatrixStackPush
|| __TEXT.__text _GLKMatrixStackRotate
|| __TEXT.__text _GLKMatrixStackRotateWithVector3
|| __TEXT.__text _GLKMatrixStackRotateWithVector4
|| __TEXT.__text _GLKMatrixStackRotateX
|| __TEXT.__text _GLKMatrixStackRotateY
|| __TEXT.__text _GLKMatrixStackRotateZ
|| __TEXT.__text _GLKMatrixStackScale
|| __TEXT.__text _GLKMatrixStackScaleWithVector3
|| __TEXT.__text _GLKMatrixStackScaleWithVector4
|| __TEXT.__text _GLKMatrixStackSize
|| __TEXT.__text _GLKMatrixStackTranslate
|| __TEXT.__text _GLKMatrixStackTranslateWithVector3
|| __TEXT.__text _GLKMatrixStackTranslateWithVector4
|| __TEXT.__text _GLKQuaternionAngle
|| __TEXT.__text _GLKQuaternionAxis
|| __TEXT.__text _GLKQuaternionMakeWithMatrix3
|| __TEXT.__text _GLKQuaternionMakeWithMatrix4
|| __TEXT.__text _GLKQuaternionRotateVector3Array
|| __TEXT.__text _GLKQuaternionRotateVector4Array
|| __TEXT.__text _GLKQuaternionSlerp
|| __TEXT.__text _GLKVertexAttributeParametersFromModelIO
|| __TEXT.__text _NSStringFromGLKMatrix2
|| __TEXT.__text _NSStringFromGLKMatrix3
|| __TEXT.__text _NSStringFromGLKMatrix4
|| __TEXT.__text _NSStringFromGLKQuaternion
|| __TEXT.__text _NSStringFromGLKVector2
|| __TEXT.__text _NSStringFromGLKVector3
|| __TEXT.__text _NSStringFromGLKVector4
|| __TEXT.__text __GLKMatrixDebugDescription
|| __TEXT.__text __GLKMatrixDestroy
|| __TEXT.__text __GLKMatrixFormatDescription
|| __TEXT.__text __GLKMatrixStackRegisterClass
|| __TEXT.__text __GLKModelErrorWithCode
|| __TEXT.__text __GLKModelErrorWithCodeAndErrorString
|| __TEXT.__text __GLKModelErrorWithCodeAndUserInfo
|| __TEXT.__text __GLKStackAlloc
|| __TEXT.__text __GLKStackDealloc
|| __TEXT.__text __GLKStackLoad
|| __TEXT.__text __GLKStackPop
|| __TEXT.__text __GLKStackPush
|| __TEXT.__text __GLKStackSize
|| __TEXT.__text __GLKStackTop
|| __TEXT.__text __GLKTextureErrorWithCode
|| __TEXT.__text __GLKTextureErrorWithCodeAndErrorString
|| __TEXT.__text __GLKTextureErrorWithCodeAndUserInfo
|| __TEXT.__text __lightStateChanged
|| __TEXT.__text __modelviewMatrixMask
|| __TEXT.__text __normalizedNormalsMask
|| __TEXT.__text __reflectionMappingEnabled
|| __TEXT.__text __texturingEnabledMask
|| __TEXT.__text __useTexCoordAttribMask
|| __TEXT.__text __vNormalEyeMask
|| __TEXT.__text __vPositionEyeMask
|| __TEXT.__text _glkLinkedOSVersion
__ Accelerate: _vImagePremultiplyData_RGBA8888
__ Accelerate: _vImagePremultiplyData_RGBAFFFF
__ Accelerate: _vImageVerticalReflect_ARGB8888
__ Accelerate: _vImageVerticalReflect_ARGBFFFF
__ Accelerate: _vImageVerticalReflect_Planar8
__ Accelerate: _vImageVerticalReflect_PlanarF
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetAllocator
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFRuntimeCreateInstance
__ CoreFoundation: __CFRuntimeRegisterClass
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGDataProviderCopyData
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGImageBlockGetBytesPerRow
__ CoreGraphics: _CGImageBlockGetData
__ CoreGraphics: _CGImageBlockGetRect
__ CoreGraphics: _CGImageBlockSetGetComponentType
__ CoreGraphics: _CGImageBlockSetGetCount
__ CoreGraphics: _CGImageBlockSetGetImageBlock
__ CoreGraphics: _CGImageBlockSetGetPixelSize
__ CoreGraphics: _CGImageBlockSetRelease
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageGetAlphaInfo
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetBytesPerRow
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetImageProvider
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageProviderCopyImageBlockSetWithOptions
__ CoreGraphics: _CGImageProviderGetColorSpace
__ CoreGraphics: _CGImageProviderGetSize
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetWidth
__ CoreUI: _OBJC_CLASS_$_CUICatalog
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSXMLParser
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _kCGImagePropertyHasAlpha
__ ImageIO: _kCGImagePropertyOrientation
__ OpenGLES: _OBJC_CLASS_$_EAGLContext
__ OpenGLES: _glActiveTexture
__ OpenGLES: _glAttachShader
__ OpenGLES: _glBindAttribLocation
__ OpenGLES: _glBindBuffer
__ OpenGLES: _glBindFramebuffer
__ OpenGLES: _glBindRenderbuffer
__ OpenGLES: _glBindTexture
__ OpenGLES: _glBindVertexArrayOES
__ OpenGLES: _glBlitFramebuffer
__ OpenGLES: _glBufferData
__ OpenGLES: _glBufferSubData
__ OpenGLES: _glCheckFramebufferStatus
__ OpenGLES: _glCompileShader
__ OpenGLES: _glCompressedTexImage2D
__ OpenGLES: _glCreateProgram
__ OpenGLES: _glCreateShader
__ OpenGLES: _glDeleteBuffers
__ OpenGLES: _glDeleteFramebuffers
__ OpenGLES: _glDeleteProgram
__ OpenGLES: _glDeleteRenderbuffers
__ OpenGLES: _glDeleteShader
__ OpenGLES: _glDeleteTextures
__ OpenGLES: _glDeleteVertexArraysOES
__ OpenGLES: _glDiscardFramebufferEXT
__ OpenGLES: _glDrawArrays
__ OpenGLES: _glEnableVertexAttribArray
__ OpenGLES: _glFinish
__ OpenGLES: _glFlush
__ OpenGLES: _glFramebufferRenderbuffer
__ OpenGLES: _glGenBuffers
__ OpenGLES: _glGenFramebuffers
__ OpenGLES: _glGenRenderbuffers
__ OpenGLES: _glGenTextures
__ OpenGLES: _glGenVertexArraysOES
__ OpenGLES: _glGenerateMipmap
__ OpenGLES: _glGetAttribLocation
__ OpenGLES: _glGetError
__ OpenGLES: _glGetIntegerv
__ OpenGLES: _glGetProgramInfoLog
__ OpenGLES: _glGetProgramiv
__ OpenGLES: _glGetRenderbufferParameteriv
__ OpenGLES: _glGetShaderInfoLog
__ OpenGLES: _glGetShaderiv
__ OpenGLES: _glGetString
__ OpenGLES: _glGetUniformLocation
__ OpenGLES: _glLabelObjectEXT
__ OpenGLES: _glLinkProgram
__ OpenGLES: _glMapBufferRange
__ OpenGLES: _glPixelStorei
__ OpenGLES: _glPopGroupMarkerEXT
__ OpenGLES: _glPushGroupMarkerEXT
__ OpenGLES: _glReadPixels
__ OpenGLES: _glRenderbufferStorage
__ OpenGLES: _glRenderbufferStorageMultisampleAPPLE
__ OpenGLES: _glResolveMultisampleFramebufferAPPLE
__ OpenGLES: _glShaderSource
__ OpenGLES: _glTexImage2D
__ OpenGLES: _glTexParameteri
__ OpenGLES: _glUniform1f
__ OpenGLES: _glUniform1i
__ OpenGLES: _glUniform3fv
__ OpenGLES: _glUniform4fv
__ OpenGLES: _glUniformMatrix3fv
__ OpenGLES: _glUniformMatrix4fv
__ OpenGLES: _glUnmapBuffer
__ OpenGLES: _glUseProgram
__ OpenGLES: _glValidateProgram
__ OpenGLES: _glVertexAttrib4fv
__ OpenGLES: _glVertexAttribPointer
__ OpenGLES: _glViewport
__ OpenGLES: _kEAGLColorFormatRGB565
__ OpenGLES: _kEAGLColorFormatRGBA8
__ OpenGLES: _kEAGLColorFormatRGBA_XR10_64BPP
__ OpenGLES: _kEAGLColorFormatSRGBA8
__ OpenGLES: _kEAGLColorFormatSRGBA_XR10_64BPP
__ OpenGLES: _kEAGLColorFormatSRGB_XR10
__ OpenGLES: _kEAGLColorFormatSRGB_XR10_A8_2P
__ OpenGLES: _kEAGLDrawablePropertyColorFormat
__ OpenGLES: _kEAGLDrawablePropertyRetainedBacking
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _OBJC_CLASS_$_CAEAGLLayer
__ TextureIO: _OBJC_CLASS_$_TXRDefaultBufferAllocator
__ TextureIO: _OBJC_CLASS_$_TXRPixelFormatInfo
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIScreenModeDidChangeNotification
__ UIKit: _UIWindowDidMoveToScreenNotification
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: _acos
__ libSystem.B.dylib: _acosf
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_once_f
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _posix_memalign
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
GLKBaseEffect : NSObject <GLKNamedEffect>
 @property  NSMutableArray *propertyArray
 @property  unsigned char effectStale
 @property  unsigned char propertyArrayStale
 @property  GLKEffect *effect
 @property  unsigned int programName
 @property  GLKEffectPropertyConstantColor *constantColorProp
 @property  unsigned char colorMaterialEnabled
 @property  unsigned char lightModelTwoSided
 @property  unsigned char useConstantColor
 @property  GLKEffectPropertyTransform *transform
 @property  GLKEffectPropertyLight *light0
 @property  GLKEffectPropertyLight *light1
 @property  GLKEffectPropertyLight *light2
 @property  int lightingType
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) lightModelAmbientColor
 @property  GLKEffectPropertyMaterial *material
 @property  GLKEffectPropertyTexture *texture2d0
 @property  GLKEffectPropertyTexture *texture2d1
 @property  NSArray *textureOrder
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) constantColor
 @property  GLKEffectPropertyFog *fog
 @property  NSString *label

  // instance methods
  -[GLKBaseEffect fog]
  -[GLKBaseEffect init]
  -[GLKBaseEffect setEffect:]
  -[GLKBaseEffect dealloc]
  -[GLKBaseEffect effect]
  -[GLKBaseEffect label]
  -[GLKBaseEffect light0]
  -[GLKBaseEffect light1]
  -[GLKBaseEffect light2]
  -[GLKBaseEffect setLightingType:]
  -[GLKBaseEffect lightingType]
  -[GLKBaseEffect material]
  -[GLKBaseEffect setLabel:]
  -[GLKBaseEffect prepareToDraw]
  -[GLKBaseEffect transform]
  -[GLKBaseEffect setLightModelAmbientColor:]
  -[GLKBaseEffect setColorMaterialEnabled:]
  -[GLKBaseEffect setLightModelTwoSided:]
  -[GLKBaseEffect setTextureOrder:]
  -[GLKBaseEffect updateBaseEffect]
  -[GLKBaseEffect texture2d0]
  -[GLKBaseEffect texture2d1]
  -[GLKBaseEffect setConstantColor:]
  -[GLKBaseEffect constantColor]
  -[GLKBaseEffect setUseConstantColor:]
  -[GLKBaseEffect perVertexLightingEnabled]
  -[GLKBaseEffect perPixelLightingEnabled]
  -[GLKBaseEffect colorMaterialEnabled]
  -[GLKBaseEffect lightModelTwoSided]
  -[GLKBaseEffect lightModelAmbientColor]
  -[GLKBaseEffect textureOrder]
  -[GLKBaseEffect constantColorProp]
  -[GLKBaseEffect useConstantColor]
  -[GLKBaseEffect propertyArrayStale]
  -[GLKBaseEffect setPropertyArrayStale:]
  -[GLKBaseEffect propertyArray]
  -[GLKBaseEffect effectStale]
  -[GLKBaseEffect setEffectStale:]
  -[GLKBaseEffect programName]
  -[GLKBaseEffect setProgramName:]


GLKEffect : NSObject
 @property  unsigned int vshName
 @property  unsigned int fshName
 @property  unsigned int numLights
 @property  unsigned int numTextures
 @property  unsigned int programName
 @property  GLKShaderBlockNode *vshRootNode
 @property  GLKShaderBlockNode *fshRootNode
 @property  ^* vshStrings
 @property  ^* fshStrings
 @property  unsigned int numVshStrings
 @property  unsigned int numFshStrings
 @property  ^@ effectShaderArray
 @property  NSMutableArray *lightProperties
 @property  unsigned char masksInitialized
 @property  NSMutableDictionary *programHash
 @property  int lightModelAmbientColorLoc
 @property  int baseLightingColorLoc
 @property  int aColorLoc
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) baseLightingColor
 @property  ^f materialAmbientColor
 @property  ^f materialDiffuseColor
 @property  ^{GLKBigInt_s=QQ} vshMask
 @property  ^{GLKBigInt_s=QQ} fshMask
 @property  {GLKBigInt_s=QQ} prevVshMask
 @property  {GLKBigInt_s=QQ} prevFshMask
 @property  unsigned long dirtyUniforms
 @property  BOOL textureOrderStale
 @property  NSMutableArray *properties
 @property  unsigned char colorMaterialEnabled
 @property  unsigned char lightModelTwoSided
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) lightModelAmbientColor
 @property  unsigned char texturingEnabled
 @property  unsigned char perVertexLightingEnabled
 @property  unsigned char perPixelLightingEnabled
 @property  NSString *label
 @property  NSArray *textureOrder

  // class methods
  +[GLKEffect initialize]
  +[GLKEffect initializeStaticMasks]
  +[GLKEffect parseXMLFile:rootNode:]
  +[GLKEffect setStaticMasksWithVshRoot:fshRoot:]
  +[GLKEffect unrollLoopNodesForStaticTreeWithRoot:]
  +[GLKEffect programInfoLogForName:effectLabel:msg:]
  +[GLKEffect shaderInfoLogForName:effectLabel:msg:]

  // instance methods
  -[GLKEffect init]
  -[GLKEffect bind]
  -[GLKEffect dealloc]
  -[GLKEffect setProperties:]
  -[GLKEffect label]
  -[GLKEffect setLabel:]
  -[GLKEffect vshName]
  -[GLKEffect fshName]
  -[GLKEffect fshMask]
  -[GLKEffect vshMask]
  -[GLKEffect properties]
  -[GLKEffect setLightModelAmbientColor:]
  -[GLKEffect setColorMaterialEnabled:]
  -[GLKEffect setLightModelTwoSided:]
  -[GLKEffect initWithPropertyArray:]
  -[GLKEffect setTextureOrder:]
  -[GLKEffect perVertexLightingEnabled]
  -[GLKEffect perPixelLightingEnabled]
  -[GLKEffect colorMaterialEnabled]
  -[GLKEffect lightModelTwoSided]
  -[GLKEffect lightModelAmbientColor]
  -[GLKEffect textureOrder]
  -[GLKEffect programName]
  -[GLKEffect setProgramName:]
  -[GLKEffect dirtyAllUniforms]
  -[GLKEffect setPerPixelLightingEnabled:]
  -[GLKEffect setPerVertexLightingEnabled:]
  -[GLKEffect setTexturingEnabled:]
  -[GLKEffect addTransformProperty]
  -[GLKEffect setDirtyUniforms:]
  -[GLKEffect dirtyUniforms]
  -[GLKEffect includeVshShaderTextForRootNode:]
  -[GLKEffect updateVshStringsWithRoot:enabled:]
  -[GLKEffect includeFshShaderTextForRootNode:]
  -[GLKEffect updateFshStringsWithRoot:enabled:]
  -[GLKEffect initializeMasks]
  -[GLKEffect setShaderBindings]
  -[GLKEffect useTexCoordAttrib]
  -[GLKEffect useColorAttrib]
  -[GLKEffect setTextureIndices]
  -[GLKEffect createAndUseProgramWithShadingHash:]
  -[GLKEffect setMasksInitialized:]
  -[GLKEffect includeShaderTextForRootNode:]
  -[GLKEffect vshMasks]
  -[GLKEffect fshMasks]
  -[GLKEffect vshMaskCt]
  -[GLKEffect fshMaskCt]
  -[GLKEffect vshMaskStr]
  -[GLKEffect fshMaskStr]
  -[GLKEffect programHash]
  -[GLKEffect numLights]
  -[GLKEffect setNumLights:]
  -[GLKEffect numTextures]
  -[GLKEffect setNumTextures:]
  -[GLKEffect texturingEnabled]
  -[GLKEffect materialAmbientColor]
  -[GLKEffect materialDiffuseColor]
  -[GLKEffect baseLightingColor]
  -[GLKEffect setBaseLightingColor:]
  -[GLKEffect masksInitialized]
  -[GLKEffect aColorLoc]
  -[GLKEffect setAColorLoc:]
  -[GLKEffect effectShaderArray]
  -[GLKEffect setEffectShaderArray:]
  -[GLKEffect lightProperties]
  -[GLKEffect setLightProperties:]
  -[GLKEffect vshRootNode]
  -[GLKEffect fshRootNode]
  -[GLKEffect setVshName:]
  -[GLKEffect setFshName:]
  -[GLKEffect vshStrings]
  -[GLKEffect setVshStrings:]
  -[GLKEffect fshStrings]
  -[GLKEffect setFshStrings:]
  -[GLKEffect numVshStrings]
  -[GLKEffect setNumVshStrings:]
  -[GLKEffect numFshStrings]
  -[GLKEffect setNumFshStrings:]
  -[GLKEffect textureOrderStale]
  -[GLKEffect setTextureOrderStale:]
  -[GLKEffect lightModelAmbientColorLoc]
  -[GLKEffect setLightModelAmbientColorLoc:]
  -[GLKEffect baseLightingColorLoc]
  -[GLKEffect setBaseLightingColorLoc:]
  -[GLKEffect setFshMask:]
  -[GLKEffect setVshMask:]
  -[GLKEffect prevFshMask]
  -[GLKEffect setPrevFshMask:]
  -[GLKEffect prevVshMask]
  -[GLKEffect setPrevVshMask:]


GLKMeshBufferHolder : NSObject
 @property  GLKMeshBuffer *buffer

  // instance methods
  -[GLKMeshBufferHolder setBuffer:]
  -[GLKMeshBufferHolder buffer]


GLKMeshBufferZone : NSObject <MDLMeshBufferZone>
 @property  unsigned long capacity
 @property  <MDLMeshBufferAllocator> *allocator
 @property  unsigned int glBufferName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GLKMeshBufferZone capacity]
  -[GLKMeshBufferZone allocator]
  -[GLKMeshBufferZone dealloc]
  -[GLKMeshBufferZone .cxx_destruct]
  -[GLKMeshBufferZone initWithCapacity:allocator:]
  -[GLKMeshBufferZone newBufferWithLength:type:]
  -[GLKMeshBufferZone destroyBuffer:]
  -[GLKMeshBufferZone glBufferName]


GLKMeshBuffer : NSObject <MDLMeshBuffer>
 @property  unsigned long length
 @property  GLKMeshBufferAllocator *allocator
 @property  unsigned int glBufferName
 @property  unsigned long offset
 @property  <MDLMeshBufferZone> *zone
 @property  unsigned long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GLKMeshBuffer zone]
  -[GLKMeshBuffer map]
  -[GLKMeshBuffer copyWithZone:]
  -[GLKMeshBuffer length]
  -[GLKMeshBuffer allocator]
  -[GLKMeshBuffer dealloc]
  -[GLKMeshBuffer .cxx_destruct]
  -[GLKMeshBuffer type]
  -[GLKMeshBuffer offset]
  -[GLKMeshBuffer fillData:offset:]
  -[GLKMeshBuffer _initWithLength:offset:zone:type:]
  -[GLKMeshBuffer glBufferName]
  -[GLKMeshBuffer _initWithBytes:length:offset:allocator:zone:type:]
  -[GLKMeshBuffer _initWithLength:allocator:type:]
  -[GLKMeshBuffer _initWithData:allocator:type:]


GLKMeshBufferAllocator : NSObject <MDLMeshBufferAllocator>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GLKMeshBufferAllocator init]
  -[GLKMeshBufferAllocator .cxx_destruct]
  -[GLKMeshBufferAllocator isEqual:]
  -[GLKMeshBufferAllocator newBufferWithData:type:]
  -[GLKMeshBufferAllocator newBuffer:type:]
  -[GLKMeshBufferAllocator newBufferFromZone:length:type:]
  -[GLKMeshBufferAllocator newZone:]
  -[GLKMeshBufferAllocator newZoneForBuffersWithSize:andType:]
  -[GLKMeshBufferAllocator newBufferFromZone:data:type:]


GLKSubmesh : NSObject
 @property  unsigned int type
 @property  unsigned int mode
 @property  int elementCount
 @property  GLKMeshBuffer *elementBuffer
 @property  GLKMesh *mesh
 @property  NSString *name

  // instance methods
  -[GLKSubmesh mesh]
  -[GLKSubmesh mode]
  -[GLKSubmesh .cxx_destruct]
  -[GLKSubmesh name]
  -[GLKSubmesh type]
  -[GLKSubmesh elementBuffer]
  -[GLKSubmesh elementCount]
  -[GLKSubmesh initWithMesh:submesh:error:]


GLKMesh : NSObject
 @property  unsigned long vertexCount
 @property  NSArray *vertexBuffers
 @property  MDLVertexDescriptor *vertexDescriptor
 @property  NSArray *submeshes
 @property  NSString *name

  // class methods
  +[GLKMesh _createMeshesFromObject:newMeshes:sourceMeshes:error:]
  +[GLKMesh newMeshesFromAsset:sourceMeshes:error:]

  // instance methods
  -[GLKMesh vertexCount]
  -[GLKMesh .cxx_destruct]
  -[GLKMesh name]
  -[GLKMesh vertexBuffers]
  -[GLKMesh vertexDescriptor]
  -[GLKMesh submeshes]
  -[GLKMesh initWithMesh:error:]


GLKEffectProperty : NSObject
 @property  int location
 @property  char * nameString
 @property  char * vshSource
 @property  char * fshSource
 @property  unsigned long dirtyUniforms
 @property  unsigned char masksInitialized
 @property  GLKEffect *effect

  // class methods
  +[GLKEffectProperty setStaticMasksWithVshRoot:fshRoot:]
  +[GLKEffectProperty logSetMasksWithLabel:obj:typeStr:]

  // instance methods
  -[GLKEffectProperty init]
  -[GLKEffectProperty bind]
  -[GLKEffectProperty setEffect:]
  -[GLKEffectProperty dealloc]
  -[GLKEffectProperty effect]
  -[GLKEffectProperty setLocation:]
  -[GLKEffectProperty nameString]
  -[GLKEffectProperty location]
  -[GLKEffectProperty fshMask]
  -[GLKEffectProperty vshMask]
  -[GLKEffectProperty dirtyAllUniforms]
  -[GLKEffectProperty setDirtyUniforms:]
  -[GLKEffectProperty dirtyUniforms]
  -[GLKEffectProperty includeVshShaderTextForRootNode:]
  -[GLKEffectProperty includeFshShaderTextForRootNode:]
  -[GLKEffectProperty initializeMasks]
  -[GLKEffectProperty setShaderBindings]
  -[GLKEffectProperty setMasksInitialized:]
  -[GLKEffectProperty masksInitialized]
  -[GLKEffectProperty setNameString:]
  -[GLKEffectProperty setVSHSource:]
  -[GLKEffectProperty setFSHSource:]
  -[GLKEffectProperty setMasks]
  -[GLKEffectProperty vshSource]
  -[GLKEffectProperty setVshSource:]
  -[GLKEffectProperty fshSource]
  -[GLKEffectProperty setFshSource:]


GLKEffectPropertyConstantColor : GLKEffectProperty
 @property  unsigned char enabled
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) color

  // class methods
  +[GLKEffectPropertyConstantColor setStaticMasksWithVshRoot:fshRoot:]

  // instance methods
  -[GLKEffectPropertyConstantColor enabled]
  -[GLKEffectPropertyConstantColor init]
  -[GLKEffectPropertyConstantColor bind]
  -[GLKEffectPropertyConstantColor dealloc]
  -[GLKEffectPropertyConstantColor color]
  -[GLKEffectPropertyConstantColor setEnabled:]
  -[GLKEffectPropertyConstantColor setColor:]
  -[GLKEffectPropertyConstantColor dirtyAllUniforms]
  -[GLKEffectPropertyConstantColor setShaderBindings]


GLKEffectPropertyFog : GLKEffectProperty
 @property  int modeLoc
 @property  int colorLoc
 @property  int densityLoc
 @property  int startLoc
 @property  int endLoc
 @property  unsigned char enabled
 @property  int mode
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) color
 @property  float density
 @property  float start
 @property  float end

  // class methods
  +[GLKEffectPropertyFog setStaticMasksWithVshRoot:fshRoot:]

  // instance methods
  -[GLKEffectPropertyFog density]
  -[GLKEffectPropertyFog mode]
  -[GLKEffectPropertyFog enabled]
  -[GLKEffectPropertyFog init]
  -[GLKEffectPropertyFog bind]
  -[GLKEffectPropertyFog dealloc]
  -[GLKEffectPropertyFog end]
  -[GLKEffectPropertyFog color]
  -[GLKEffectPropertyFog setStart:]
  -[GLKEffectPropertyFog setEnd:]
  -[GLKEffectPropertyFog setMode:]
  -[GLKEffectPropertyFog endLoc]
  -[GLKEffectPropertyFog setEnabled:]
  -[GLKEffectPropertyFog setDensity:]
  -[GLKEffectPropertyFog modeLoc]
  -[GLKEffectPropertyFog setColor:]
  -[GLKEffectPropertyFog start]
  -[GLKEffectPropertyFog dirtyAllUniforms]
  -[GLKEffectPropertyFog includeVshShaderTextForRootNode:]
  -[GLKEffectPropertyFog includeFshShaderTextForRootNode:]
  -[GLKEffectPropertyFog initializeMasks]
  -[GLKEffectPropertyFog setShaderBindings]
  -[GLKEffectPropertyFog setModeLoc:]
  -[GLKEffectPropertyFog colorLoc]
  -[GLKEffectPropertyFog setColorLoc:]
  -[GLKEffectPropertyFog densityLoc]
  -[GLKEffectPropertyFog setDensityLoc:]
  -[GLKEffectPropertyFog startLoc]
  -[GLKEffectPropertyFog setStartLoc:]
  -[GLKEffectPropertyFog setEndLoc:]


GLKEffectPropertyLight : GLKEffectProperty
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) positionEye
 @property  (_GLKVector3={?=fff}{?=fff}{?=fff}[3f]) normalizedSpotDirectionEye
 @property  float spotCutoffDegrees
 @property  int positionEyeLoc
 @property  int ambientLoc
 @property  int diffuseLoc
 @property  int specularLoc
 @property  int normalizedSpotDirectionEyeLoc
 @property  int spotExponentLoc
 @property  int spotCutoffLoc
 @property  int constantAttenuationLoc
 @property  int linearAttenuationLoc
 @property  int quadraticAttenuationLoc
 @property  int normalizeLoc
 @property  int ambientTermLoc
 @property  int lightIndex
 @property  ^Q effectDirtyUniforms
 @property  int lightingType
 @property  unsigned char positionEyeStale
 @property  unsigned char isSpot
 @property  unsigned char isAttenuated
 @property  unsigned char firstLight
 @property  {GLKBigInt_s=QQ} allVshMasks
 @property  {GLKBigInt_s=QQ} allFshMasks
 @property  unsigned char enabled
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) position
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) ambientColor
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) diffuseColor
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) specularColor
 @property  (_GLKVector3={?=fff}{?=fff}{?=fff}[3f]) spotDirection
 @property  float spotExponent
 @property  float spotCutoff
 @property  float constantAttenuation
 @property  float linearAttenuation
 @property  float quadraticAttenuation
 @property  GLKEffectPropertyTransform *transform

  // class methods
  +[GLKEffectPropertyLight setStaticMasksWithVshRoot:fshRoot:]

  // instance methods
  -[GLKEffectPropertyLight setTransform:]
  -[GLKEffectPropertyLight position]
  -[GLKEffectPropertyLight enabled]
  -[GLKEffectPropertyLight setPosition:]
  -[GLKEffectPropertyLight bind]
  -[GLKEffectPropertyLight dealloc]
  -[GLKEffectPropertyLight isSpot]
  -[GLKEffectPropertyLight setLightingType:]
  -[GLKEffectPropertyLight lightingType]
  -[GLKEffectPropertyLight setEnabled:]
  -[GLKEffectPropertyLight transform]
  -[GLKEffectPropertyLight initWithTransform:lightingType:firstLight:]
  -[GLKEffectPropertyLight dirtyAllUniforms]
  -[GLKEffectPropertyLight isAttenuated]
  -[GLKEffectPropertyLight setEffectDirtyUniforms:]
  -[GLKEffectPropertyLight setLightIndex:]
  -[GLKEffectPropertyLight includeVshShaderTextForRootNode:]
  -[GLKEffectPropertyLight includeFshShaderTextForRootNode:]
  -[GLKEffectPropertyLight initializeMasks]
  -[GLKEffectPropertyLight setShaderBindings]
  -[GLKEffectPropertyLight ambientColor]
  -[GLKEffectPropertyLight ambientTermLoc]
  -[GLKEffectPropertyLight setGLDefaults]
  -[GLKEffectPropertyLight setAmbientColor:]
  -[GLKEffectPropertyLight setDiffuseColor:]
  -[GLKEffectPropertyLight setSpecularColor:]
  -[GLKEffectPropertyLight constantAttenuation]
  -[GLKEffectPropertyLight linearAttenuation]
  -[GLKEffectPropertyLight quadraticAttenuation]
  -[GLKEffectPropertyLight setSpotDirection:]
  -[GLKEffectPropertyLight setNormalize:]
  -[GLKEffectPropertyLight setSpotExponent:]
  -[GLKEffectPropertyLight setQuadraticAttenuation:]
  -[GLKEffectPropertyLight setLinearAttenuation:]
  -[GLKEffectPropertyLight setConstantAttenuation:]
  -[GLKEffectPropertyLight setSpotCutoff:]
  -[GLKEffectPropertyLight spotCutoff]
  -[GLKEffectPropertyLight positionEye]
  -[GLKEffectPropertyLight setPositionEye:]
  -[GLKEffectPropertyLight diffuseColor]
  -[GLKEffectPropertyLight specularColor]
  -[GLKEffectPropertyLight spotDirection]
  -[GLKEffectPropertyLight normalizedSpotDirectionEye]
  -[GLKEffectPropertyLight setNormalizedSpotDirectionEye:]
  -[GLKEffectPropertyLight spotExponent]
  -[GLKEffectPropertyLight spotCutoffDegrees]
  -[GLKEffectPropertyLight setSpotCutoffDegrees:]
  -[GLKEffectPropertyLight effectDirtyUniforms]
  -[GLKEffectPropertyLight positionEyeStale]
  -[GLKEffectPropertyLight setPositionEyeStale:]
  -[GLKEffectPropertyLight positionEyeLoc]
  -[GLKEffectPropertyLight setPositionEyeLoc:]
  -[GLKEffectPropertyLight ambientLoc]
  -[GLKEffectPropertyLight setAmbientLoc:]
  -[GLKEffectPropertyLight diffuseLoc]
  -[GLKEffectPropertyLight setDiffuseLoc:]
  -[GLKEffectPropertyLight specularLoc]
  -[GLKEffectPropertyLight setSpecularLoc:]
  -[GLKEffectPropertyLight normalizedSpotDirectionEyeLoc]
  -[GLKEffectPropertyLight setNormalizedSpotDirectionEyeLoc:]
  -[GLKEffectPropertyLight spotExponentLoc]
  -[GLKEffectPropertyLight setSpotExponentLoc:]
  -[GLKEffectPropertyLight spotCutoffLoc]
  -[GLKEffectPropertyLight setSpotCutoffLoc:]
  -[GLKEffectPropertyLight constantAttenuationLoc]
  -[GLKEffectPropertyLight setConstantAttenuationLoc:]
  -[GLKEffectPropertyLight linearAttenuationLoc]
  -[GLKEffectPropertyLight setLinearAttenuationLoc:]
  -[GLKEffectPropertyLight quadraticAttenuationLoc]
  -[GLKEffectPropertyLight setQuadraticAttenuationLoc:]
  -[GLKEffectPropertyLight normalizeLoc]
  -[GLKEffectPropertyLight setNormalizeLoc:]
  -[GLKEffectPropertyLight setAmbientTermLoc:]
  -[GLKEffectPropertyLight lightIndex]
  -[GLKEffectPropertyLight firstLight]
  -[GLKEffectPropertyLight setFirstLight:]
  -[GLKEffectPropertyLight allVshMasks]
  -[GLKEffectPropertyLight allFshMasks]


GLKEffectPropertyMaterial : GLKEffectProperty
 @property  int _ambientColorLoc
 @property  int _diffuseColorLoc
 @property  int _specularColorLoc
 @property  int _emissiveColorLoc
 @property  int _shininessLoc
 @property  ^Q effectDirtyUniforms
 @property  {GLKBigInt_s=QQ} _colorMaterialEnabledMask
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) ambientColor
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) diffuseColor
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) specularColor
 @property  (_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f]) emissiveColor
 @property  float shininess

  // class methods
  +[GLKEffectPropertyMaterial setStaticMasksWithVshRoot:fshRoot:]

  // instance methods
  -[GLKEffectPropertyMaterial init]
  -[GLKEffectPropertyMaterial bind]
  -[GLKEffectPropertyMaterial dealloc]
  -[GLKEffectPropertyMaterial dirtyAllUniforms]
  -[GLKEffectPropertyMaterial setEffectDirtyUniforms:]
  -[GLKEffectPropertyMaterial includeVshShaderTextForRootNode:]
  -[GLKEffectPropertyMaterial includeFshShaderTextForRootNode:]
  -[GLKEffectPropertyMaterial initializeMasks]
  -[GLKEffectPropertyMaterial setShaderBindings]
  -[GLKEffectPropertyMaterial ambientColor]
  -[GLKEffectPropertyMaterial emissiveColor]
  -[GLKEffectPropertyMaterial setAmbientColor:]
  -[GLKEffectPropertyMaterial setDiffuseColor:]
  -[GLKEffectPropertyMaterial setSpecularColor:]
  -[GLKEffectPropertyMaterial diffuseColor]
  -[GLKEffectPropertyMaterial specularColor]
  -[GLKEffectPropertyMaterial effectDirtyUniforms]
  -[GLKEffectPropertyMaterial setEmissiveColor:]
  -[GLKEffectPropertyMaterial setShininess:]
  -[GLKEffectPropertyMaterial shininess]
  -[GLKEffectPropertyMaterial _ambientColorLoc]
  -[GLKEffectPropertyMaterial set_ambientColorLoc:]
  -[GLKEffectPropertyMaterial _diffuseColorLoc]
  -[GLKEffectPropertyMaterial set_diffuseColorLoc:]
  -[GLKEffectPropertyMaterial _specularColorLoc]
  -[GLKEffectPropertyMaterial set_specularColorLoc:]
  -[GLKEffectPropertyMaterial _emissiveColorLoc]
  -[GLKEffectPropertyMaterial set_emissiveColorLoc:]
  -[GLKEffectPropertyMaterial _shininessLoc]
  -[GLKEffectPropertyMaterial set_shininessLoc:]
  -[GLKEffectPropertyMaterial _colorMaterialEnabledMask]
  -[GLKEffectPropertyMaterial set_colorMaterialEnabledMask:]


GLKEffectPropertyTexGen : GLKEffectProperty
 @property  ^f eyePlaneByInvModelview
 @property  int modeLoc
 @property  int planeLoc
 @property  int eyePlaneByInvModelviewLoc
 @property  char * modeNameString
 @property  char * planeNameString
 @property  unsigned int textureIndex
 @property  int mode
 @property  int coord
 @property  ^f plane

  // instance methods
  -[GLKEffectPropertyTexGen mode]
  -[GLKEffectPropertyTexGen coord]
  -[GLKEffectPropertyTexGen init]
  -[GLKEffectPropertyTexGen bind]
  -[GLKEffectPropertyTexGen dealloc]
  -[GLKEffectPropertyTexGen plane]
  -[GLKEffectPropertyTexGen setMode:]
  -[GLKEffectPropertyTexGen modeLoc]
  -[GLKEffectPropertyTexGen dirtyAllUniforms]
  -[GLKEffectPropertyTexGen setTextureIndex:]
  -[GLKEffectPropertyTexGen initializeMasks]
  -[GLKEffectPropertyTexGen setShaderBindings]
  -[GLKEffectPropertyTexGen setModeLoc:]
  -[GLKEffectPropertyTexGen setModeNameString:]
  -[GLKEffectPropertyTexGen setPlaneNameString:]
  -[GLKEffectPropertyTexGen modeNameString]
  -[GLKEffectPropertyTexGen planeNameString]
  -[GLKEffectPropertyTexGen initWithMode:coord:]
  -[GLKEffectPropertyTexGen setPlane:]
  -[GLKEffectPropertyTexGen eyePlaneByInvModelview]
  -[GLKEffectPropertyTexGen setEyePlaneByInvModelview:]
  -[GLKEffectPropertyTexGen planeLoc]
  -[GLKEffectPropertyTexGen setPlaneLoc:]
  -[GLKEffectPropertyTexGen eyePlaneByInvModelviewLoc]
  -[GLKEffectPropertyTexGen setEyePlaneByInvModelviewLoc:]
  -[GLKEffectPropertyTexGen textureIndex]


GLKEffectPropertyTexture : GLKEffectProperty
 @property  GLKEffectPropertyTexGen *texGenS
 @property  GLKEffectPropertyTexGen *texGenT
 @property  GLKEffectPropertyTexGen *texGenR
 @property  NSMutableArray *texGenArray
 @property  int textureIndex
 @property  NSString *filePath
 @property  unsigned char matrixEnabled
 @property  int unit2dLoc
 @property  int unitCubeLoc
 @property  char * unit2dNameString
 @property  char * unitCubeNameString
 @property  unsigned char normalizedNormalsMask
 @property  unsigned char vPositionEyeMask
 @property  unsigned char vNormalEyeMask
 @property  unsigned char useTexCoordAttribMask
 @property  {GLKBigInt_s=QQ} allFshMasks
 @property  unsigned char enabled
 @property  unsigned int name
 @property  unsigned int target
 @property  int envMode

  // class methods
  +[GLKEffectPropertyTexture setStaticMasksWithVshRoot:fshRoot:]
  +[GLKEffectPropertyTexture clearAllTexturingMasks:fshMask:]

  // instance methods
  -[GLKEffectPropertyTexture enabled]
  -[GLKEffectPropertyTexture init]
  -[GLKEffectPropertyTexture bind]
  -[GLKEffectPropertyTexture target]
  -[GLKEffectPropertyTexture dealloc]
  -[GLKEffectPropertyTexture name]
  -[GLKEffectPropertyTexture setTarget:]
  -[GLKEffectPropertyTexture setEnabled:]
  -[GLKEffectPropertyTexture texGenS]
  -[GLKEffectPropertyTexture texGenT]
  -[GLKEffectPropertyTexture texGenR]
  -[GLKEffectPropertyTexture envMode]
  -[GLKEffectPropertyTexture filePath]
  -[GLKEffectPropertyTexture setName:]
  -[GLKEffectPropertyTexture dirtyAllUniforms]
  -[GLKEffectPropertyTexture useTexCoordAttribMask]
  -[GLKEffectPropertyTexture normalizedNormalsMask]
  -[GLKEffectPropertyTexture vNormalEyeMask]
  -[GLKEffectPropertyTexture vPositionEyeMask]
  -[GLKEffectPropertyTexture setTextureIndex:]
  -[GLKEffectPropertyTexture includeVshShaderTextForRootNode:]
  -[GLKEffectPropertyTexture includeFshShaderTextForRootNode:]
  -[GLKEffectPropertyTexture initializeMasks]
  -[GLKEffectPropertyTexture setShaderBindings]
  -[GLKEffectPropertyTexture allFshMasks]
  -[GLKEffectPropertyTexture textureIndex]
  -[GLKEffectPropertyTexture setUnit2dNameString:]
  -[GLKEffectPropertyTexture setUnitCubeNameString:]
  -[GLKEffectPropertyTexture setEnvMode:]
  -[GLKEffectPropertyTexture setMatrixEnabled:]
  -[GLKEffectPropertyTexture matrixEnabled]
  -[GLKEffectPropertyTexture unit2dNameString]
  -[GLKEffectPropertyTexture unitCubeNameString]
  -[GLKEffectPropertyTexture unit2dLoc]
  -[GLKEffectPropertyTexture setUnit2dLoc:]
  -[GLKEffectPropertyTexture unitCubeLoc]
  -[GLKEffectPropertyTexture setUnitCubeLoc:]
  -[GLKEffectPropertyTexture texGenArray]


GLKEffectPropertyTransform : GLKEffectProperty
 @property  (_GLKMatrix4={?=ffffffffffffffff}[16f]) mvpMatrix
 @property  (_GLKMatrix4={?=ffffffffffffffff}[16f]) invModelviewMatrix
 @property  int projectionMatrixLoc
 @property  int modelviewMatrixLoc
 @property  int mvpMatrixLoc
 @property  int normalMatrixLoc
 @property  int invModelviewMatrixLoc
 @property  (_GLKMatrix4={?=ffffffffffffffff}[16f]) modelviewMatrix
 @property  (_GLKMatrix4={?=ffffffffffffffff}[16f]) projectionMatrix
 @property  (_GLKMatrix3={?=fffffffff}[9f]) normalMatrix

  // class methods
  +[GLKEffectPropertyTransform setStaticMasksWithVshRoot:fshRoot:]

  // instance methods
  -[GLKEffectPropertyTransform init]
  -[GLKEffectPropertyTransform bind]
  -[GLKEffectPropertyTransform dealloc]
  -[GLKEffectPropertyTransform projectionMatrix]
  -[GLKEffectPropertyTransform dirtyAllUniforms]
  -[GLKEffectPropertyTransform setShaderBindings]
  -[GLKEffectPropertyTransform normalMatrix]
  -[GLKEffectPropertyTransform modelviewMatrix]
  -[GLKEffectPropertyTransform loadMatrix:matrix:]
  -[GLKEffectPropertyTransform invModelviewMatrix]
  -[GLKEffectPropertyTransform mvpMatrix]
  -[GLKEffectPropertyTransform loadIdentity:]
  -[GLKEffectPropertyTransform setProjectionMatrix:]
  -[GLKEffectPropertyTransform setModelviewMatrix:]
  -[GLKEffectPropertyTransform setInvModelviewMatrix:]
  -[GLKEffectPropertyTransform setMvpMatrix:]
  -[GLKEffectPropertyTransform mvpMatrixLoc]
  -[GLKEffectPropertyTransform setMvpMatrixLoc:]
  -[GLKEffectPropertyTransform modelviewMatrixLoc]
  -[GLKEffectPropertyTransform setModelviewMatrixLoc:]
  -[GLKEffectPropertyTransform projectionMatrixLoc]
  -[GLKEffectPropertyTransform setProjectionMatrixLoc:]
  -[GLKEffectPropertyTransform normalMatrixLoc]
  -[GLKEffectPropertyTransform setNormalMatrixLoc:]
  -[GLKEffectPropertyTransform invModelviewMatrixLoc]
  -[GLKEffectPropertyTransform setInvModelviewMatrixLoc:]


GLKTextureTXR : NSObject
 @property  NSString *label
 @property  unsigned int GLTextureName
 @property  unsigned int target
 @property  unsigned int mipmapLevelCount
 @property  unsigned int arrayLength
 @property  unsigned int width
 @property  unsigned int height
 @property  unsigned int depth
 @property  BOOL hasAlpha
 @property  BOOL lossyCompressedSource

  // instance methods
  -[GLKTextureTXR depth]
  -[GLKTextureTXR setHeight:]
  -[GLKTextureTXR arrayLength]
  -[GLKTextureTXR setWidth:]
  -[GLKTextureTXR target]
  -[GLKTextureTXR hasAlpha]
  -[GLKTextureTXR dealloc]
  -[GLKTextureTXR width]
  -[GLKTextureTXR setTarget:]
  -[GLKTextureTXR label]
  -[GLKTextureTXR setDepth:]
  -[GLKTextureTXR setHasAlpha:]
  -[GLKTextureTXR height]
  -[GLKTextureTXR setArrayLength:]
  -[GLKTextureTXR setLabel:]
  -[GLKTextureTXR mipmapLevelCount]
  -[GLKTextureTXR setMipmapLevelCount:]
  -[GLKTextureTXR initWithTexture:API:options:error:]
  -[GLKTextureTXR uploadToGLTexture:error:]
  -[GLKTextureTXR GLTextureName]
  -[GLKTextureTXR setGLTextureName:]
  -[GLKTextureTXR lossyCompressedSource]
  -[GLKTextureTXR setLossyCompressedSource:]


GLKTexture : NSObject
 @property  NSData *imageData
 @property  unsigned int GLTextureName
 @property  unsigned int bindTarget
 @property  unsigned int textureTarget
 @property  unsigned int internalFormat
 @property  unsigned int format
 @property  unsigned int type
 @property  int texelFormat
 @property  unsigned int width
 @property  unsigned int height
 @property  unsigned int orientation
 @property  unsigned int numMipMapLevels
 @property  unsigned int bitsPerPixel
 @property  unsigned int rowBytes
 @property  unsigned int nComponents
 @property  unsigned int nPrimarySurfaces
 @property  unsigned int nSurfaces
 @property  int loadMode
 @property  int dataCategory
 @property  unsigned int index
 @property  BOOL requestIssuedForMipmapGeneration
 @property  BOOL hasPremultipliedAlpha
 @property  BOOL isPowerOfTwo
 @property  BOOL isCubeMap
 @property  BOOL isMipmapped
 @property  BOOL isVerticalFlipped
 @property  BOOL hasAlpha
 @property  BOOL reOrient
 @property  NSString *label

  // instance methods
  -[GLKTexture setHeight:]
  -[GLKTexture setFormat:]
  -[GLKTexture imageData]
  -[GLKTexture format]
  -[GLKTexture index]
  -[GLKTexture init]
  -[GLKTexture setIndex:]
  -[GLKTexture setWidth:]
  -[GLKTexture hasAlpha]
  -[GLKTexture dealloc]
  -[GLKTexture setType:]
  -[GLKTexture width]
  -[GLKTexture label]
  -[GLKTexture setHasAlpha:]
  -[GLKTexture type]
  -[GLKTexture setRowBytes:]
  -[GLKTexture height]
  -[GLKTexture setLabel:]
  -[GLKTexture setOrientation:]
  -[GLKTexture rowBytes]
  -[GLKTexture orientation]
  -[GLKTexture isMipmapped]
  -[GLKTexture internalFormat]
  -[GLKTexture bitsPerPixel]
  -[GLKTexture setBitsPerPixel:]
  -[GLKTexture uploadToGLTexture:error:]
  -[GLKTexture GLTextureName]
  -[GLKTexture setGLTextureName:]
  -[GLKTexture updateRequestedOperationsFromOptions:]
  -[GLKTexture loadWithData:options:error:]
  -[GLKTexture loadPVRTCData:error:]
  -[GLKTexture loadCGImage:options:error:]
  -[GLKTexture loadMode]
  -[GLKTexture dataCategory]
  -[GLKTexture isCubeMap]
  -[GLKTexture nComponents]
  -[GLKTexture texelFormat]
  -[GLKTexture isPowerOfTwo]
  -[GLKTexture isVerticalFlipped]
  -[GLKTexture bindTarget]
  -[GLKTexture textureTarget]
  -[GLKTexture determinePVRFormat:]
  -[GLKTexture alignmentFix:data:]
  -[GLKTexture shouldApplyReorientToGL]
  -[GLKTexture shouldApplyPremultiplication]
  -[GLKTexture determineCGImageBlockFormatWithComponentType:andPixelSize:andColorModel:]
  -[GLKTexture decodeCGImageImageProvider:CGImageProvider:]
  -[GLKTexture decodeCGImageDataProvider:]
  -[GLKTexture decodeCGImage:]
  -[GLKTexture canHonorSRGBrequest]
  -[GLKTexture reorientToGL:source:withWidth:withHeight:withRowBytes:error:]
  -[GLKTexture premultiplyWithAlpha:source:withWidth:withHeight:withRowBytes:error:]
  -[GLKTexture _uploadToGLTexture:data:width:height:dataCategory:cubeMapIndex:mipMapIndex:error:]
  -[GLKTexture initWithData:forceCubeMap:wasCubeMap:cubeMapIndex:options:error:]
  -[GLKTexture initWithCGImage:forceCubeMap:wasCubeMap:cubeMapIndex:options:error:]
  -[GLKTexture initWithDecodedData:width:height:rowBytes:texture:cubeMapIndex:options:error:]
  -[GLKTexture setBindTarget:]
  -[GLKTexture setTextureTarget:]
  -[GLKTexture setInternalFormat:]
  -[GLKTexture setTexelFormat:]
  -[GLKTexture numMipMapLevels]
  -[GLKTexture setNumMipMapLevels:]
  -[GLKTexture setNComponents:]
  -[GLKTexture nPrimarySurfaces]
  -[GLKTexture setNPrimarySurfaces:]
  -[GLKTexture nSurfaces]
  -[GLKTexture setNSurfaces:]
  -[GLKTexture setLoadMode:]
  -[GLKTexture setDataCategory:]
  -[GLKTexture requestIssuedForMipmapGeneration]
  -[GLKTexture hasPremultipliedAlpha]
  -[GLKTexture setIsPowerOfTwo:]
  -[GLKTexture setIsCubeMap:]
  -[GLKTexture setIsMipmapped:]
  -[GLKTexture setIsVerticalFlipped:]
  -[GLKTexture reOrient]
  -[GLKTexture setReOrient:]


GLKTextureInfo : NSObject <NSCopying>
 @property  unsigned int name
 @property  unsigned int target
 @property  unsigned int width
 @property  unsigned int height
 @property  unsigned int depth
 @property  int alphaState
 @property  int textureOrigin
 @property  BOOL containsMipmaps
 @property  unsigned int mimapLevelCount
 @property  unsigned int arrayLength

  // instance methods
  -[GLKTextureInfo depth]
  -[GLKTextureInfo copyWithZone:]
  -[GLKTextureInfo arrayLength]
  -[GLKTextureInfo target]
  -[GLKTextureInfo dealloc]
  -[GLKTextureInfo width]
  -[GLKTextureInfo name]
  -[GLKTextureInfo height]
  -[GLKTextureInfo lossyCompressedSource]
  -[GLKTextureInfo alphaState]
  -[GLKTextureInfo textureOrigin]
  -[GLKTextureInfo containsMipmaps]
  -[GLKTextureInfo initWithTexture:textureName:]
  -[GLKTextureInfo initWithTextureTXR:textureName:]
  -[GLKTextureInfo mimapLevelCount]


GLKTextureLoader : NSObject
 @property  EAGLContext *glContext
 @property  NSLock *nsLock
 @property  BOOL supportsASTC_LDR
 @property  BOOL supportsETC2

  // class methods
  +[GLKTextureLoader lockAndSwitchContext:glContext:]
  +[GLKTextureLoader _textureWithTexture:error:]
  +[GLKTextureLoader unlockAndRestoreContext:glContext:]
  +[GLKTextureLoader _textureWithTextureTXR:error:]
  +[GLKTextureLoader textureWithContentsOfURL:options:error:]
  +[GLKTextureLoader commonTextureWithContentsOfURL:options:error:lock:glContext:]
  +[GLKTextureLoader commonTextureWithName:scaleFactor:bundle:options:error:lock:glContext:]
  +[GLKTextureLoader commonTextureWithContentsOfData:options:error:lock:glContext:]
  +[GLKTextureLoader commonTextureWithCGImage:options:error:lock:glContext:]
  +[GLKTextureLoader commonCubeMapWithContentsOfFiles:options:error:lock:glContext:]
  +[GLKTextureLoader cubeMapWithContentsOfURL:options:error:]
  +[GLKTextureLoader commonCubeMapWithContentsOfURL:options:error:lock:glContext:]
  +[GLKTextureLoader textureWithContentsOfFile:options:error:]
  +[GLKTextureLoader textureWithName:scaleFactor:bundle:options:error:]
  +[GLKTextureLoader textureWithContentsOfData:options:error:]
  +[GLKTextureLoader textureWithCGImage:options:error:]
  +[GLKTextureLoader cubeMapWithContentsOfFiles:options:error:]
  +[GLKTextureLoader cubeMapWithContentsOfFile:options:error:]

  // instance methods
  -[GLKTextureLoader dealloc]
  -[GLKTextureLoader nsLock]
  -[GLKTextureLoader glContext]
  -[GLKTextureLoader setGlContext:]
  -[GLKTextureLoader setNsLock:]
  -[GLKTextureLoader textureWithContentsOfURL:options:queue:completionHandler:]
  -[GLKTextureLoader cubeMapWithContentsOfURL:options:queue:completionHandler:]
  -[GLKTextureLoader initWithSharegroup:]
  -[GLKTextureLoader textureWithContentsOfFile:options:queue:completionHandler:]
  -[GLKTextureLoader textureWithName:scaleFactor:bundle:options:queue:completionHandler:]
  -[GLKTextureLoader textureWithContentsOfData:options:queue:completionHandler:]
  -[GLKTextureLoader textureWithCGImage:options:queue:completionHandler:]
  -[GLKTextureLoader cubeMapWithContentsOfFiles:options:queue:completionHandler:]
  -[GLKTextureLoader cubeMapWithContentsOfFile:options:queue:completionHandler:]
  -[GLKTextureLoader supportsASTC_LDR]
  -[GLKTextureLoader setSupportsASTC_LDR:]
  -[GLKTextureLoader supportsETC2]
  -[GLKTextureLoader setSupportsETC2:]


GLKSkyboxEffect : NSObject <GLKNamedEffect>
 @property  NSMutableArray *propertyArray
 @property  unsigned char effectStale
 @property  unsigned char centerChanged
 @property  GLKEffect *effect
 @property  unsigned int programName
 @property  unsigned int vao
 @property  unsigned int positionVBO
 @property  unsigned int texCoordVBO
 @property  (_GLKVector3={?=fff}{?=fff}{?=fff}[3f]) center
 @property  float xSize
 @property  float ySize
 @property  float zSize
 @property  GLKEffectPropertyTexture *textureCubeMap
 @property  GLKEffectPropertyTransform *transform
 @property  NSString *label

  // instance methods
  -[GLKSkyboxEffect draw]
  -[GLKSkyboxEffect vao]
  -[GLKSkyboxEffect init]
  -[GLKSkyboxEffect setEffect:]
  -[GLKSkyboxEffect dealloc]
  -[GLKSkyboxEffect xSize]
  -[GLKSkyboxEffect ySize]
  -[GLKSkyboxEffect zSize]
  -[GLKSkyboxEffect effect]
  -[GLKSkyboxEffect label]
  -[GLKSkyboxEffect setCenter:]
  -[GLKSkyboxEffect setLabel:]
  -[GLKSkyboxEffect setVao:]
  -[GLKSkyboxEffect center]
  -[GLKSkyboxEffect prepareToDraw]
  -[GLKSkyboxEffect transform]
  -[GLKSkyboxEffect propertyArray]
  -[GLKSkyboxEffect effectStale]
  -[GLKSkyboxEffect setEffectStale:]
  -[GLKSkyboxEffect programName]
  -[GLKSkyboxEffect setProgramName:]
  -[GLKSkyboxEffect createAndBindVAOWithPositions:texCoords:]
  -[GLKSkyboxEffect updateSkyboxEffect]
  -[GLKSkyboxEffect textureCubeMap]
  -[GLKSkyboxEffect setXSize:]
  -[GLKSkyboxEffect setYSize:]
  -[GLKSkyboxEffect setZSize:]
  -[GLKSkyboxEffect positionVBO]
  -[GLKSkyboxEffect setPositionVBO:]
  -[GLKSkyboxEffect texCoordVBO]
  -[GLKSkyboxEffect setTexCoordVBO:]
  -[GLKSkyboxEffect centerChanged]
  -[GLKSkyboxEffect setCenterChanged:]


GLKReflectionMapEffect : GLKBaseEffect <GLKNamedEffect>
 @property  BOOL dirtyUniforms
 @property  int matrixLoc
 @property  GLKEffectPropertyTexture *textureCubeMap
 @property  (_GLKMatrix3={?=fffffffff}[9f]) matrix

  // instance methods
  -[GLKReflectionMapEffect matrix]
  -[GLKReflectionMapEffect init]
  -[GLKReflectionMapEffect dealloc]
  -[GLKReflectionMapEffect setMatrix:]
  -[GLKReflectionMapEffect prepareToDraw]
  -[GLKReflectionMapEffect setDirtyUniforms:]
  -[GLKReflectionMapEffect dirtyUniforms]
  -[GLKReflectionMapEffect textureCubeMap]
  -[GLKReflectionMapEffect matrixLoc]
  -[GLKReflectionMapEffect setMatrixLoc:]


GLKShaderBlockNode : NSObject <NSXMLParserDelegate, NSCopying>
 @property  NSString *label
 @property  NSString *loopVar
 @property  NSMutableString *blockText
 @property  GLKShaderBlockNode *parent
 @property  GLKShaderBlockNode *next
 @property  GLKShaderBlockNode *children
 @property  int type
 @property  {GLKBigInt_s=QQ} mask
 @property  int unrollCt
 @property  unsigned int index
 @property  int propertyClass
 @property  BOOL indexedMask
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GLKShaderBlockNode setMasksWithRoot:treeRoot:mask:]
  +[GLKShaderBlockNode copyTreeWithRoot:parent:]
  +[GLKShaderBlockNode buildUnrollNodeArray:array:]
  +[GLKShaderBlockNode copyTreeWithRootButNotSiblings:parent:]
  +[GLKShaderBlockNode setIndicesForRoot:andReplaceLoopVar:baseLabel:basePropertyClass:usingIndex:indexString:]
  +[GLKShaderBlockNode insertNode:afterSibling:]
  +[GLKShaderBlockNode maskForLabel:root:index:]
  +[GLKShaderBlockNode nodeCt:nodeCt:]
  +[GLKShaderBlockNode printTree:]
  +[GLKShaderBlockNode printTreeVerbose:]

  // instance methods
  -[GLKShaderBlockNode parent]
  -[GLKShaderBlockNode copyWithZone:]
  -[GLKShaderBlockNode index]
  -[GLKShaderBlockNode propertyClass]
  -[GLKShaderBlockNode next]
  -[GLKShaderBlockNode setParent:]
  -[GLKShaderBlockNode init]
  -[GLKShaderBlockNode parser:didEndElement:namespaceURI:qualifiedName:]
  -[GLKShaderBlockNode setIndex:]
  -[GLKShaderBlockNode children]
  -[GLKShaderBlockNode dealloc]
  -[GLKShaderBlockNode setType:]
  -[GLKShaderBlockNode label]
  -[GLKShaderBlockNode setMask:]
  -[GLKShaderBlockNode parser:didStartElement:namespaceURI:qualifiedName:attributes:]
  -[GLKShaderBlockNode type]
  -[GLKShaderBlockNode setPropertyClass:]
  -[GLKShaderBlockNode parser:foundCharacters:]
  -[GLKShaderBlockNode setChildren:]
  -[GLKShaderBlockNode setLabel:]
  -[GLKShaderBlockNode loopVar]
  -[GLKShaderBlockNode setNext:]
  -[GLKShaderBlockNode mask]
  -[GLKShaderBlockNode unrollCt]
  -[GLKShaderBlockNode blockText]
  -[GLKShaderBlockNode setUnrollCt:]
  -[GLKShaderBlockNode indexedMask]
  -[GLKShaderBlockNode setIndexedMask:]
  -[GLKShaderBlockNode setBlockText:]
  -[GLKShaderBlockNode setLoopVar:]


GLKHashableBigInt : NSObject <NSCopying>
  // instance methods
  -[GLKHashableBigInt copyWithZone:]
  -[GLKHashableBigInt isEqual:]
  -[GLKHashableBigInt initWithBigInt:]


GLKShadingHash : NSObject
  // instance methods
  -[GLKShadingHash init]
  -[GLKShadingHash dealloc]
  -[GLKShadingHash purgeAllShaders]
  -[GLKShadingHash compiledVshForKey:]
  -[GLKShadingHash setCompiledVsh:forKey:]
  -[GLKShadingHash compiledFshForKey:]
  -[GLKShadingHash setCompiledFsh:forKey:]


GLKView : UIView /System/Library/PrivateFrameworks/TextureIO.framework/TextureIO <NSCoding>
 @property  BOOL inDraw
 @property  NSMutableDictionary *drawableProperties
 @property  BOOL shouldDeleteFramebuffer
 @property  unsigned int resolveFramebuffer
 @property  unsigned int resolveColorRenderbuffer
 @property  unsigned int multisampleFramebuffer
 @property  unsigned int multisampleColorRenderbuffer
 @property  unsigned int depthRenderbuffer
 @property  unsigned int stencilRenderbuffer
 @property  unsigned int depthStencilRenderbuffer
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} viewBounds
 @property  double viewContentScaleFactor
 @property  ^? drawRectIMP
 @property  <GLKViewDelegate> *delegate
 @property  EAGLContext *context
 @property  long long drawableWidth
 @property  long long drawableHeight
 @property  int drawableColorFormat
 @property  int drawableDepthFormat
 @property  int drawableStencilFormat
 @property  int drawableMultisample
 @property  UIImage *snapshot
 @property  BOOL enableSetNeedsDisplay

  // class methods
  +[GLKView layerClass]

  // instance methods
  -[GLKView context]
  -[GLKView _initCommon]
  -[GLKView setEnableSetNeedsDisplay:]
  -[GLKView enableSetNeedsDisplay]
  -[GLKView _canDrawContent]
  -[GLKView displayLayer:]
  -[GLKView _controlsOwnScaleFactor]
  -[GLKView setContentScaleFactor:]
  -[GLKView initWithFrame:]
  -[GLKView dealloc]
  -[GLKView initWithFrame:context:]
  -[GLKView setDrawableColorFormat:]
  -[GLKView setDrawableDepthFormat:]
  -[GLKView setDrawableStencilFormat:]
  -[GLKView encodeWithCoder:]
  -[GLKView setContext:]
  -[GLKView snapshot]
  -[GLKView inDraw]
  -[GLKView drawableProperties]
  -[GLKView setDrawableProperties:]
  -[GLKView setDelegate:]
  -[GLKView display]
  -[GLKView delegate]
  -[GLKView layoutSubviews]
  -[GLKView initWithCoder:]
  -[GLKView _deleteFramebuffer]
  -[GLKView _createFramebuffer]
  -[GLKView _setFramebuffer:]
  -[GLKView _resolveAndDiscard]
  -[GLKView _presentFramebuffer]
  -[GLKView _display:]
  -[GLKView deleteDrawable]
  -[GLKView drawableColorFormat]
  -[GLKView drawableDepthFormat]
  -[GLKView drawableStencilFormat]
  -[GLKView drawableMultisample]
  -[GLKView setDrawableMultisample:]
  -[GLKView bindDrawable]
  -[GLKView setInDraw:]
  -[GLKView shouldDeleteFramebuffer]
  -[GLKView setShouldDeleteFramebuffer:]
  -[GLKView resolveFramebuffer]
  -[GLKView setResolveFramebuffer:]
  -[GLKView resolveColorRenderbuffer]
  -[GLKView setResolveColorRenderbuffer:]
  -[GLKView multisampleFramebuffer]
  -[GLKView setMultisampleFramebuffer:]
  -[GLKView multisampleColorRenderbuffer]
  -[GLKView setMultisampleColorRenderbuffer:]
  -[GLKView depthRenderbuffer]
  -[GLKView setDepthRenderbuffer:]
  -[GLKView stencilRenderbuffer]
  -[GLKView setStencilRenderbuffer:]
  -[GLKView depthStencilRenderbuffer]
  -[GLKView setDepthStencilRenderbuffer:]
  -[GLKView viewBounds]
  -[GLKView setViewBounds:]
  -[GLKView viewContentScaleFactor]
  -[GLKView setViewContentScaleFactor:]
  -[GLKView drawableWidth]
  -[GLKView drawableHeight]
  -[GLKView drawRectIMP]
  -[GLKView setDrawRectIMP:]


GLKDisplayLinkMessenger : NSObject
  // instance methods
  -[GLKDisplayLinkMessenger message]
  -[GLKDisplayLinkMessenger setTarget:]


GLKViewController : UIViewController /System/Library/PrivateFrameworks/TextureIO.framework/TextureIO <NSCoding, GLKViewDelegate>
 @property  UIScreen *screen
 @property  CADisplayLink *displayLink
 @property  BOOL displayLinkPaused
 @property  GLKDisplayLinkMessenger *displayLinkMessenger
 @property  BOOL viewIsVisible
 @property  BOOL firstResumeOccurred
 @property  double timeSinceFirstResumeStartTime
 @property  BOOL lastResumeOccurred
 @property  double timeSinceLastResumeStartTime
 @property  BOOL lastUpdateOccurred
 @property  double timeSinceLastUpdatePreviousTime
 @property  BOOL lastDrawOccurred
 @property  double timeSinceLastDrawPreviousTime
 @property  ^? updateIMP
 @property  long long screenFramesPerSecond
 @property  <GLKViewControllerDelegate> *delegate
 @property  long long preferredFramesPerSecond
 @property  long long framesPerSecond
 @property  BOOL paused
 @property  long long framesDisplayed
 @property  double timeSinceFirstResume
 @property  double timeSinceLastResume
 @property  double timeSinceLastUpdate
 @property  double timeSinceLastDraw
 @property  BOOL pauseOnWillResignActive
 @property  BOOL resumeOnDidBecomeActive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GLKViewController setPreferredFramesPerSecond:]
  -[GLKViewController viewDidLoad]
  -[GLKViewController preferredFramesPerSecond]
  -[GLKViewController _initCommon]
  -[GLKViewController screen]
  -[GLKViewController _createDisplayLinkForScreen:]
  -[GLKViewController setView:]
  -[GLKViewController init]
  -[GLKViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[GLKViewController dealloc]
  -[GLKViewController viewIsVisible]
  -[GLKViewController glkView:drawInRect:]
  -[GLKViewController displayLink]
  -[GLKViewController setScreen:]
  -[GLKViewController viewDidUnload]
  -[GLKViewController encodeWithCoder:]
  -[GLKViewController framesPerSecond]
  -[GLKViewController setViewIsVisible:]
  -[GLKViewController setPaused:]
  -[GLKViewController initWithNibName:bundle:]
  -[GLKViewController isPaused]
  -[GLKViewController setDisplayLink:]
  -[GLKViewController viewWillAppear:]
  -[GLKViewController setDelegate:]
  -[GLKViewController viewWillDisappear:]
  -[GLKViewController timeSinceLastUpdate]
  -[GLKViewController delegate]
  -[GLKViewController loadView]
  -[GLKViewController initWithCoder:]
  -[GLKViewController _updateAndDraw]
  -[GLKViewController _updateScreenIfChanged]
  -[GLKViewController _calculateScreenFramesPerSecond:]
  -[GLKViewController setDisplayLinkMessenger:]
  -[GLKViewController _configureNotifications]
  -[GLKViewController _pauseByNotification]
  -[GLKViewController _resumeByNotification]
  -[GLKViewController timeSinceFirstResume]
  -[GLKViewController timeSinceLastResume]
  -[GLKViewController setPauseOnWillResignActive:]
  -[GLKViewController pauseOnWillResignActive]
  -[GLKViewController setResumeOnDidBecomeActive:]
  -[GLKViewController resumeOnDidBecomeActive]
  -[GLKViewController displayLinkPaused]
  -[GLKViewController setDisplayLinkPaused:]
  -[GLKViewController displayLinkMessenger]
  -[GLKViewController firstResumeOccurred]
  -[GLKViewController setFirstResumeOccurred:]
  -[GLKViewController timeSinceFirstResumeStartTime]
  -[GLKViewController setTimeSinceFirstResumeStartTime:]
  -[GLKViewController lastResumeOccurred]
  -[GLKViewController setLastResumeOccurred:]
  -[GLKViewController timeSinceLastResumeStartTime]
  -[GLKViewController setTimeSinceLastResumeStartTime:]
  -[GLKViewController lastUpdateOccurred]
  -[GLKViewController setLastUpdateOccurred:]
  -[GLKViewController timeSinceLastUpdatePreviousTime]
  -[GLKViewController setTimeSinceLastUpdatePreviousTime:]
  -[GLKViewController lastDrawOccurred]
  -[GLKViewController setLastDrawOccurred:]
  -[GLKViewController timeSinceLastDrawPreviousTime]
  -[GLKViewController setTimeSinceLastDrawPreviousTime:]
  -[GLKViewController updateIMP]
  -[GLKViewController setUpdateIMP:]
  -[GLKViewController screenFramesPerSecond]
  -[GLKViewController setScreenFramesPerSecond:]
  -[GLKViewController framesDisplayed]
  -[GLKViewController timeSinceLastDraw]


01 00 0b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAEAGLLayer 
01 00 0a00 /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI: CUICatalog 
01 00 0900 /System/Library/Frameworks/OpenGLES.framework/OpenGLES: EAGLContext 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXMLParser 
01 00 0300 /System/Library/PrivateFrameworks/TextureIO.framework/TextureIO: TXRDefaultBufferAllocator 
01 00 0300 /System/Library/PrivateFrameworks/TextureIO.framework/TextureIO: TXRPixelFormatInfo 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
