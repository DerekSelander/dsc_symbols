|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyAlbum
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyApproximateDurationInSeconds
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyArtist
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyChannelLayout
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyComments
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyComposer
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyCopyright
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyEncodingApplication
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyGenre
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyISRC
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyKeySignature
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyLyricist
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyNominalBitRate
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyRecordedDate
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeySourceBitDepth
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeySourceEncoder
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeySubTitle
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyTempo
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyTimeSignature
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyTitle
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyTrackNumber
|| __DATA.__data _AVAudioSequencerInfoDictionaryKeyYear
|| __DATA.__objc_data _OBJC_CLASS_$_AVAUPresetEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioConnectionPoint
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioDeviceTest
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioDeviceTestProcessingChain
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioDeviceTestResult
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioDeviceTestSequence
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioEnvironmentDistanceAttenuationParameters
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioEnvironmentNode
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioEnvironmentReverbParameters
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioFile
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioIONode
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioInputNode
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioMixerNode
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioMixingDestination
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioOutputNode
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioRecorder
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioSequencer
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioSinkNode
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioSourceNode
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioUnitDSPGraph
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioUnitDelay
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioUnitDistortion
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioUnitEQ
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioUnitEQFilterParameters
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioUnitEffect
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioUnitGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioUnitMIDIInstrument
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioUnitReverb
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioUnitSampler
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioUnitTimeEffect
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioUnitTimePitch
|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioUnitVarispeed
|| __DATA.__objc_data _OBJC_CLASS_$_AVExtendedNoteOnEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVExtendedTempoEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVMIDIChannelEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVMIDIChannelPressureEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVMIDIControlChangeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVMIDIMetaEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVMIDINoteEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVMIDIPitchBendEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVMIDIPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_AVMIDIPolyPressureEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVMIDIProgramChangeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVMIDISysexEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVMusicEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVMusicTrack
|| __DATA.__objc_data _OBJC_CLASS_$_AVMusicUserEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVParameterEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVSpeechSynthesizer
|| __DATA.__objc_data _OBJC_CLASS_$_AVSpeechUtterance
|| __DATA.__objc_data _OBJC_CLASS_$_AVVCAlertInformation
|| __DATA.__objc_data _OBJC_CLASS_$_AVVCAudioBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_AVVCConfigureAlertBehaviorSettings
|| __DATA.__objc_data _OBJC_CLASS_$_AVVCContextSettings
|| __DATA.__objc_data _OBJC_CLASS_$_AVVCDuckFadeDuration
|| __DATA.__objc_data _OBJC_CLASS_$_AVVCDuckOverride
|| __DATA.__objc_data _OBJC_CLASS_$_AVVCDuckSettings
|| __DATA.__objc_data _OBJC_CLASS_$_AVVCPrepareRecordSettings
|| __DATA.__objc_data _OBJC_CLASS_$_AVVCRecordDeviceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AVVCSessionFactory
|| __DATA.__objc_data _OBJC_CLASS_$_AVVCStartRecordSettings
|| __DATA.__objc_data _OBJC_CLASS_$_AVVoiceController
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAUPresetEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioConnectionPoint
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioDeviceTest
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioDeviceTestProcessingChain
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioDeviceTestResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioDeviceTestSequence
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioEnvironmentDistanceAttenuationParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioEnvironmentNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioEnvironmentReverbParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioFile
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioIONode
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioInputNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioMixerNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioMixingDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioOutputNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioRecorder
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioSequencer
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioSinkNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioSourceNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioUnitDSPGraph
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioUnitDelay
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioUnitDistortion
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioUnitEQ
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioUnitEQFilterParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioUnitEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioUnitGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioUnitMIDIInstrument
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioUnitReverb
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioUnitSampler
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioUnitTimeEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioUnitTimePitch
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioUnitVarispeed
|| __DATA.__objc_data _OBJC_METACLASS_$_AVExtendedNoteOnEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVExtendedTempoEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVMIDIChannelEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVMIDIChannelPressureEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVMIDIControlChangeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVMIDIMetaEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVMIDINoteEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVMIDIPitchBendEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVMIDIPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_AVMIDIPolyPressureEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVMIDIProgramChangeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVMIDISysexEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVMusicEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVMusicTrack
|| __DATA.__objc_data _OBJC_METACLASS_$_AVMusicUserEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVParameterEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AVSpeechSynthesizer
|| __DATA.__objc_data _OBJC_METACLASS_$_AVSpeechUtterance
|| __DATA.__objc_data _OBJC_METACLASS_$_AVVCAlertInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_AVVCAudioBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_AVVCConfigureAlertBehaviorSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_AVVCContextSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_AVVCDuckFadeDuration
|| __DATA.__objc_data _OBJC_METACLASS_$_AVVCDuckOverride
|| __DATA.__objc_data _OBJC_METACLASS_$_AVVCDuckSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_AVVCPrepareRecordSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_AVVCRecordDeviceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AVVCSessionFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_AVVCStartRecordSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_AVVoiceController
|| __DATA.__objc_ivar _OBJC_IVAR_$_AVAudioBuffer._impl
|| __DATA.__objc_ivar _OBJC_IVAR_$_AVAudioNode._impl
|| __DATA.__objc_ivar _OBJC_IVAR_$_AVAudioSequencer._impl
|| __DATA.__objc_ivar _OBJC_IVAR_$_AVAudioUnitComponent._impl
|| __DATA.__objc_ivar _OBJC_IVAR_$_AVAudioUnitComponentManager._impl
|| __DATA.__objc_ivar _OBJC_IVAR_$_AVMIDIPlayer._impl
|| __DATA.__objc_ivar _OBJC_IVAR_$_AVMusicTrack._impl
|| __DATA_CONST.__const _AVAudioBitRateStrategy_Constant
|| __DATA_CONST.__const _AVAudioBitRateStrategy_LongTermAverage
|| __DATA_CONST.__const _AVAudioBitRateStrategy_Variable
|| __DATA_CONST.__const _AVAudioBitRateStrategy_VariableConstrained
|| __DATA_CONST.__const _AVAudioEngineConfigurationChangeNotification
|| __DATA_CONST.__const _AVAudioFileTypeKey
|| __DATA_CONST.__const _AVAudioRemoteInputBufferGainKey
|| __DATA_CONST.__const _AVAudioRemoteInputBufferSpeexFrameQualitiesKey
|| __DATA_CONST.__const _AVAudioRemoteInputStartAnchorPointKey
|| __DATA_CONST.__const _AVAudioRemoteInputStartTimeKey
|| __DATA_CONST.__const _AVAudioUnitComponentManagerRegistrationsChangedNotification
|| __DATA_CONST.__const _AVAudioUnitComponentTagsDidChangeNotification
|| __DATA_CONST.__const _AVAudioUnitManufacturerNameApple
|| __DATA_CONST.__const _AVAudioUnitTypeEffect
|| __DATA_CONST.__const _AVAudioUnitTypeFormatConverter
|| __DATA_CONST.__const _AVAudioUnitTypeGenerator
|| __DATA_CONST.__const _AVAudioUnitTypeMIDIProcessor
|| __DATA_CONST.__const _AVAudioUnitTypeMixer
|| __DATA_CONST.__const _AVAudioUnitTypeMusicDevice
|| __DATA_CONST.__const _AVAudioUnitTypeMusicEffect
|| __DATA_CONST.__const _AVAudioUnitTypeOfflineEffect
|| __DATA_CONST.__const _AVAudioUnitTypeOutput
|| __DATA_CONST.__const _AVAudioUnitTypePanner
|| __DATA_CONST.__const _AVChannelLayoutKey
|| __DATA_CONST.__const _AVEncoderAudioQualityForVBRKey
|| __DATA_CONST.__const _AVEncoderAudioQualityKey
|| __DATA_CONST.__const _AVEncoderBitDepthHintKey
|| __DATA_CONST.__const _AVEncoderBitRateKey
|| __DATA_CONST.__const _AVEncoderBitRatePerChannelKey
|| __DATA_CONST.__const _AVEncoderBitRateStrategyKey
|| __DATA_CONST.__const _AVFormatIDKey
|| __DATA_CONST.__const _AVLinearPCMBitDepthKey
|| __DATA_CONST.__const _AVLinearPCMIsBigEndianKey
|| __DATA_CONST.__const _AVLinearPCMIsFloatKey
|| __DATA_CONST.__const _AVLinearPCMIsNonInterleaved
|| __DATA_CONST.__const _AVNumberOfChannelsKey
|| __DATA_CONST.__const _AVSampleRateConverterAlgorithmKey
|| __DATA_CONST.__const _AVSampleRateConverterAlgorithm_Mastering
|| __DATA_CONST.__const _AVSampleRateConverterAlgorithm_MinimumPhase
|| __DATA_CONST.__const _AVSampleRateConverterAlgorithm_Normal
|| __DATA_CONST.__const _AVSampleRateConverterAudioQualityKey
|| __DATA_CONST.__const _AVSampleRateKey
|| __DATA_CONST.__const _AVSpeechSynthesisIPANotationAttribute
|| __DATA_CONST.__const _AVSpeechSynthesisVoiceIdentifierAlex
|| __DATA_CONST.__const _AVVCGetInputChannelInfo_DSPCountKey
|| __DATA_CONST.__const _AVVCGetInputChannelInfo_MicCountKey
|| __DATA_CONST.__const _AVVCGetInputChannelInfo_SpeakerReferenceCountKey
|| __DATA_CONST.__const _AVVCGetInputChannelInfo_UndifferentiatedCountKey
|| __DATA_CONST.__const _AVVoiceActivationDeviceIDKey
|| __DATA_CONST.__const _AVVoiceActivationModeKey
|| __DATA_CONST.__const _AVVoiceControllerATVRemoteInputRoute
|| __DATA_CONST.__const _AVVoiceControllerAlertBehavior
|| __DATA_CONST.__const _AVVoiceControllerBluetoothDoAPRoute
|| __DATA_CONST.__const _AVVoiceControllerMetricAudioSessionSetActiveTime
|| __DATA_CONST.__const _AVVoiceControllerMetricAudioSessionSetInactiveTime
|| __DATA_CONST.__const _AVVoiceControllerMetricDataBeginHostTime
|| __DATA_CONST.__const _AVVoiceControllerMetricDataDurationMilliSeconds
|| __DATA_CONST.__const _AVVoiceControllerMetricDataEndHostTime
|| __DATA_CONST.__const _AVVoiceControllerNoRecordRoute
|| __DATA_CONST.__const _AVVoiceControllerRemoteInputDarwinRoute
|| __DATA_CONST.__const _AVVoiceControllerRemoteInputJarvisRoute
|| __DATA_CONST.__const _AVVoiceControllerStartTimeKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioBuffer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioChannelLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioCompressedBuffer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioConverter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioFormat
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioPCMBuffer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioPlayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioPlayerNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioTime
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioUnitComponent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioUnitComponentManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVSpeechSynthesisMarker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVSpeechSynthesisProviderAudioUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVSpeechSynthesisProviderRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVSpeechSynthesisProviderVoice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVSpeechSynthesisVoice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVVoiceTriggerClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioBuffer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioChannelLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioCompressedBuffer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioConverter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioFormat
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioPCMBuffer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioPlayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioPlayerNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioTime
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioUnitComponent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioUnitComponentManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVSpeechSynthesisMarker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVSpeechSynthesisProviderAudioUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVSpeechSynthesisProviderRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVSpeechSynthesisProviderVoice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVSpeechSynthesisVoice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVVoiceTriggerClient
|| __TEXT.__const _AVExtendedNoteOnEventDefaultInstrument
|| __TEXT.__const _AVSpeechUtteranceDefaultSpeechRate
|| __TEXT.__const _AVSpeechUtteranceMaximumSpeechRate
|| __TEXT.__const _AVSpeechUtteranceMinimumSpeechRate
|| __TEXT.__const _AVVCStreamHandle_BuiltInStream
|| __TEXT.__const _AVVCStreamHandle_ExternalInputHALStream
|| __TEXT.__const _AVVCStreamHandle_Invalid
__ Accelerate: _vDSP_maxv
__ Accelerate: _vDSP_rmsqv
__ Accelerate: _vDSP_vflt16
__ Accelerate: _vDSP_vflt32
__ Accelerate: _vDSP_vsdiv
__ AudioSession: _AVAudioSessionActivationAccessibilityPreferenceKey
__ AudioSession: _AVAudioSessionActivationCallDirectionKey
__ AudioSession: _AVAudioSessionActivationDeviceUIDKey
__ AudioSession: _AVAudioSessionActivationTriggerKey
__ AudioSession: _AVAudioSessionAvailableSampleRatesChangeNotification
__ AudioSession: _AVAudioSessionBeaconBudgetChangeNotification
__ AudioSession: _AVAudioSessionCategoryAlarm
__ AudioSession: _AVAudioSessionCategoryAmbient
__ AudioSession: _AVAudioSessionCategoryAudioProcessing
__ AudioSession: _AVAudioSessionCategoryEmergencyAlert
__ AudioSession: _AVAudioSessionCategoryEmergencyAlert_CanBeMuted
__ AudioSession: _AVAudioSessionCategoryFindMyDevice
__ AudioSession: _AVAudioSessionCategoryFindMyPhone
__ AudioSession: _AVAudioSessionCategoryMultiRoute
__ AudioSession: _AVAudioSessionCategoryPhoneCall
__ AudioSession: _AVAudioSessionCategoryPlayAndRecord
__ AudioSession: _AVAudioSessionCategoryPlayback
__ AudioSession: _AVAudioSessionCategoryPlaybackNoSpeaker
__ AudioSession: _AVAudioSessionCategoryRecord
__ AudioSession: _AVAudioSessionCategoryRingtone
__ AudioSession: _AVAudioSessionCategoryRingtonePreview
__ AudioSession: _AVAudioSessionCategorySoloAmbient
__ AudioSession: _AVAudioSessionCategorySystemSoundsAndHaptics
__ AudioSession: _AVAudioSessionCategoryTTYCall
__ AudioSession: _AVAudioSessionCategoryVoiceCommand
__ AudioSession: _AVAudioSessionCategoryVoiceMail
__ AudioSession: _AVAudioSessionCategoryVoiceOver
__ AudioSession: _AVAudioSessionCategoryWaterEjection
__ AudioSession: _AVAudioSessionInterruptionNotification
__ AudioSession: _AVAudioSessionInterruptionOptionKey
__ AudioSession: _AVAudioSessionInterruptionReasonKey
__ AudioSession: _AVAudioSessionInterruptionTypeKey
__ AudioSession: _AVAudioSessionInterruptionWasSuspendedKey
__ AudioSession: _AVAudioSessionInterruptorNameKey
__ AudioSession: _AVAudioSessionLocationLower
__ AudioSession: _AVAudioSessionLocationUpper
__ AudioSession: _AVAudioSessionMediaServicesWereLostNotification
__ AudioSession: _AVAudioSessionMediaServicesWereResetNotification
__ AudioSession: _AVAudioSessionModeBeacon
__ AudioSession: _AVAudioSessionModeDefault
__ AudioSession: _AVAudioSessionModeEmergencyAlert
__ AudioSession: _AVAudioSessionModeGameChat
__ AudioSession: _AVAudioSessionModeHapticsConstantVolume
__ AudioSession: _AVAudioSessionModeHearingAccessibility
__ AudioSession: _AVAudioSessionModeLivePhoto
__ AudioSession: _AVAudioSessionModeLocatePhone
__ AudioSession: _AVAudioSessionModeLowLatency
__ AudioSession: _AVAudioSessionModeMeasurement
__ AudioSession: _AVAudioSessionModeMoviePlayback
__ AudioSession: _AVAudioSessionModeRaw
__ AudioSession: _AVAudioSessionModeSOS
__ AudioSession: _AVAudioSessionModeSleepTimer
__ AudioSession: _AVAudioSessionModeSoundRecognition
__ AudioSession: _AVAudioSessionModeSpatialRecording
__ AudioSession: _AVAudioSessionModeSpeechRecognition
__ AudioSession: _AVAudioSessionModeSpokenAudio
__ AudioSession: _AVAudioSessionModeVideoChat
__ AudioSession: _AVAudioSessionModeVideoChatForMedia
__ AudioSession: _AVAudioSessionModeVideoRecording
__ AudioSession: _AVAudioSessionModeVoiceChat
__ AudioSession: _AVAudioSessionModeVoiceMessages
__ AudioSession: _AVAudioSessionModeVoicePrompt
__ AudioSession: _AVAudioSessionOrientationBack
__ AudioSession: _AVAudioSessionOrientationBottom
__ AudioSession: _AVAudioSessionOrientationFront
__ AudioSession: _AVAudioSessionOrientationLeft
__ AudioSession: _AVAudioSessionOrientationRight
__ AudioSession: _AVAudioSessionOrientationTop
__ AudioSession: _AVAudioSessionOtherPrimaryAudioPlayStateChangeNotification
__ AudioSession: _AVAudioSessionPickableRouteChangeNotification
__ AudioSession: _AVAudioSessionPolarPatternCardioid
__ AudioSession: _AVAudioSessionPolarPatternOmnidirectional
__ AudioSession: _AVAudioSessionPolarPatternStereo
__ AudioSession: _AVAudioSessionPolarPatternSubcardioid
__ AudioSession: _AVAudioSessionPortAVB
__ AudioSession: _AVAudioSessionPortAirPlay
__ AudioSession: _AVAudioSessionPortBluetoothA2DP
__ AudioSession: _AVAudioSessionPortBluetoothHFP
__ AudioSession: _AVAudioSessionPortBluetoothLE
__ AudioSession: _AVAudioSessionPortBuiltInMic
__ AudioSession: _AVAudioSessionPortBuiltInReceiver
__ AudioSession: _AVAudioSessionPortBuiltInSpeaker
__ AudioSession: _AVAudioSessionPortCarAudio
__ AudioSession: _AVAudioSessionPortDisplayPort
__ AudioSession: _AVAudioSessionPortFireWire
__ AudioSession: _AVAudioSessionPortHDMI
__ AudioSession: _AVAudioSessionPortHeadphones
__ AudioSession: _AVAudioSessionPortHeadsetMic
__ AudioSession: _AVAudioSessionPortLineIn
__ AudioSession: _AVAudioSessionPortLineOut
__ AudioSession: _AVAudioSessionPortPCI
__ AudioSession: _AVAudioSessionPortSPDIF
__ AudioSession: _AVAudioSessionPortThunderbolt
__ AudioSession: _AVAudioSessionPortUSBAudio
__ AudioSession: _AVAudioSessionPortVirtual
__ AudioSession: _AVAudioSessionRouteChangeNotification
__ AudioSession: _AVAudioSessionRouteChangePreviousRouteKey
__ AudioSession: _AVAudioSessionRouteChangeReasonKey
__ AudioSession: _AVAudioSessionRoutingContextChangeNotification
__ AudioSession: _AVAudioSessionSilenceSecondaryAudioHintNotification
__ AudioSession: _AVAudioSessionSilenceSecondaryAudioHintTypeKey
__ AudioSession: _AVAudioSessionSourceContentBestAvailableContentTypeKey
__ AudioSession: _AVAudioSessionSourceContentCurrentlyPlayingChannelCountKey
__ AudioSession: _AVAudioSessionSourceContentCurrentlyPlayingFormatKey
__ AudioSession: _AVAudioSessionSourceContentCurrentlyPlayingIsEligibleForSpatializationKey
__ AudioSession: _AVAudioSessionSourceContentCurrentlyPlayingIsSpatializedKey
__ AudioSession: _AVAudioSessionSpatialAudioEnabledKey
__ AudioSession: _AVAudioSessionSpatialPlaybackCapabilitiesChangedNotification
__ AudioSession: _OBJC_CLASS_$_AVAudioSession
__ AudioSession: _OBJC_CLASS_$_AVAudioSessionChannelDescription
__ AudioSession: _OBJC_CLASS_$_AVAudioSessionDataSourceDescription
__ AudioSession: _OBJC_CLASS_$_AVAudioSessionPortDescription
__ AudioSession: _OBJC_CLASS_$_AVAudioSessionRouteDescription
__ AudioSession: _OBJC_METACLASS_$_AVAudioSession
__ AudioSession: _OBJC_METACLASS_$_AVAudioSessionChannelDescription
__ AudioSession: _OBJC_METACLASS_$_AVAudioSessionDataSourceDescription
__ AudioSession: _OBJC_METACLASS_$_AVAudioSessionPortDescription
__ AudioSession: _OBJC_METACLASS_$_AVAudioSessionRouteDescription
__ AudioToolbox: _AUGraphAddNode
__ AudioToolbox: _AUGraphConnectNodeInput
__ AudioToolbox: _AUGraphGetIndNode
__ AudioToolbox: _AUGraphGetNodeCount
__ AudioToolbox: _AUGraphInitialize
__ AudioToolbox: _AUGraphNodeInfo
__ AudioToolbox: _AUGraphOpen
__ AudioToolbox: _AudioQueueAddPropertyListener
__ AudioToolbox: _AudioQueueAllocateBuffer
__ AudioToolbox: _AudioQueueAllocateBufferWithPacketDescriptions
__ AudioToolbox: _AudioQueueDispose
__ AudioToolbox: _AudioQueueEnqueueBuffer
__ AudioToolbox: _AudioQueueEnqueueBufferWithParameters
__ AudioToolbox: _AudioQueueFlush
__ AudioToolbox: _AudioQueueFreeBuffer
__ AudioToolbox: _AudioQueueGetCurrentTime
__ AudioToolbox: _AudioQueueGetProperty
__ AudioToolbox: _AudioQueueGetPropertySize
__ AudioToolbox: _AudioQueueNewInput
__ AudioToolbox: _AudioQueueNewInputWithAudioSession
__ AudioToolbox: _AudioQueueNewOutput
__ AudioToolbox: _AudioQueueNewOutputWithAudioSession
__ AudioToolbox: _AudioQueuePause
__ AudioToolbox: _AudioQueuePrime
__ AudioToolbox: _AudioQueueRemovePropertyListener
__ AudioToolbox: _AudioQueueReset
__ AudioToolbox: _AudioQueueSetParameter
__ AudioToolbox: _AudioQueueSetProperty
__ AudioToolbox: _AudioQueueStart
__ AudioToolbox: _AudioQueueStop
__ AudioToolbox: _AudioServicesPlaySystemSoundWithOptions
__ AudioToolbox: _AudioServicesStopSystemSound
__ AudioToolbox: _AudioSessionCreatePrimarySession_Priv
__ AudioToolbox: _AudioSessionSetActive_Priv
__ AudioToolbox: _DisposeAUGraph
__ AudioToolbox: _DisposeMusicEventIterator
__ AudioToolbox: _DisposeMusicPlayer
__ AudioToolbox: _DisposeMusicSequence
__ AudioToolbox: _MusicEventIteratorDeleteEvent
__ AudioToolbox: _MusicEventIteratorGetEventInfo
__ AudioToolbox: _MusicEventIteratorHasCurrentEvent
__ AudioToolbox: _MusicEventIteratorHasNextEvent
__ AudioToolbox: _MusicEventIteratorHasPreviousEvent
__ AudioToolbox: _MusicEventIteratorNextEvent
__ AudioToolbox: _MusicEventIteratorPreviousEvent
__ AudioToolbox: _MusicEventIteratorSeek
__ AudioToolbox: _MusicEventIteratorSetEventInfo
__ AudioToolbox: _MusicEventIteratorSetEventTime
__ AudioToolbox: _MusicPlayerGetBeatsForHostTime
__ AudioToolbox: _MusicPlayerGetHostTimeForBeats
__ AudioToolbox: _MusicPlayerGetPlayRateScalar
__ AudioToolbox: _MusicPlayerGetTime
__ AudioToolbox: _MusicPlayerIsPlaying
__ AudioToolbox: _MusicPlayerPreroll
__ AudioToolbox: _MusicPlayerSetPlayRateScalar
__ AudioToolbox: _MusicPlayerSetSequence
__ AudioToolbox: _MusicPlayerSetTime
__ AudioToolbox: _MusicPlayerStart
__ AudioToolbox: _MusicPlayerStop
__ AudioToolbox: _MusicSequenceDisposeTrack
__ AudioToolbox: _MusicSequenceFileCreate
__ AudioToolbox: _MusicSequenceFileCreateData
__ AudioToolbox: _MusicSequenceFileLoad
__ AudioToolbox: _MusicSequenceFileLoadData
__ AudioToolbox: _MusicSequenceGetAUGraph
__ AudioToolbox: _MusicSequenceGetBeatsForSeconds
__ AudioToolbox: _MusicSequenceGetIndTrack
__ AudioToolbox: _MusicSequenceGetInfoDictionary
__ AudioToolbox: _MusicSequenceGetSecondsForBeats
__ AudioToolbox: _MusicSequenceGetTempoTrack
__ AudioToolbox: _MusicSequenceGetTrackCount
__ AudioToolbox: _MusicSequenceGetTrackIndex
__ AudioToolbox: _MusicSequenceNewTrack
__ AudioToolbox: _MusicSequenceReverse
__ AudioToolbox: _MusicSequenceSetAUGraph
__ AudioToolbox: _MusicSequenceSetAudioGraph
__ AudioToolbox: _MusicSequenceSetUserCallback
__ AudioToolbox: _MusicTrackClear
__ AudioToolbox: _MusicTrackCopyInsert
__ AudioToolbox: _MusicTrackCut
__ AudioToolbox: _MusicTrackGetDestMIDIEndpoint
__ AudioToolbox: _MusicTrackGetProperty
__ AudioToolbox: _MusicTrackGetSequence
__ AudioToolbox: _MusicTrackIsValid
__ AudioToolbox: _MusicTrackMerge
__ AudioToolbox: _MusicTrackMoveEvents
__ AudioToolbox: _MusicTrackNewAUPresetEvent
__ AudioToolbox: _MusicTrackNewExtendedNoteEvent
__ AudioToolbox: _MusicTrackNewExtendedTempoEvent
__ AudioToolbox: _MusicTrackNewMIDIChannelEvent
__ AudioToolbox: _MusicTrackNewMIDINoteEvent
__ AudioToolbox: _MusicTrackNewMIDIRawDataEvent
__ AudioToolbox: _MusicTrackNewMetaEvent
__ AudioToolbox: _MusicTrackNewParameterEvent
__ AudioToolbox: _MusicTrackNewUserEvent
__ AudioToolbox: _MusicTrackSetDestMIDIEndpoint
__ AudioToolbox: _MusicTrackSetDestinationAU
__ AudioToolbox: _MusicTrackSetProperty
__ AudioToolbox: _NewAUGraph
__ AudioToolbox: _NewMusicEventIterator
__ AudioToolbox: _NewMusicPlayer
__ AudioToolbox: _NewMusicSequence
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionBehaviorKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionFlagsKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionIgnoreRingerSwitchKey
__ AudioToolboxCore: _AUParameterListenerNotify
__ AudioToolboxCore: _AudioComponentCopyConfigurationInfo
__ AudioToolboxCore: _AudioComponentCopyIcon
__ AudioToolboxCore: _AudioComponentCopyName
__ AudioToolboxCore: _AudioComponentCopyTagsInfo
__ AudioToolboxCore: _AudioComponentFindNext
__ AudioToolboxCore: _AudioComponentGetDescription
__ AudioToolboxCore: _AudioComponentGetVersion
__ AudioToolboxCore: _AudioComponentInstanceDispose
__ AudioToolboxCore: _AudioComponentInstanceNew
__ AudioToolboxCore: _AudioComponentInstantiate
__ AudioToolboxCore: _AudioComponentValidate
__ AudioToolboxCore: _AudioComponentValidateWithResults
__ AudioToolboxCore: _AudioConverterConvertComplexBuffer
__ AudioToolboxCore: _AudioConverterDispose
__ AudioToolboxCore: _AudioConverterFillComplexBuffer
__ AudioToolboxCore: _AudioConverterGetProperty
__ AudioToolboxCore: _AudioConverterGetPropertyInfo
__ AudioToolboxCore: _AudioConverterNew
__ AudioToolboxCore: _AudioConverterReset
__ AudioToolboxCore: _AudioConverterSetProperty
__ AudioToolboxCore: _AudioFileClose
__ AudioToolboxCore: _AudioFileCreateWithURL
__ AudioToolboxCore: _AudioFileGetGlobalInfo
__ AudioToolboxCore: _AudioFileGetGlobalInfoSize
__ AudioToolboxCore: _AudioFileGetProperty
__ AudioToolboxCore: _AudioFileGetPropertyInfo
__ AudioToolboxCore: _AudioFileOpenURL
__ AudioToolboxCore: _AudioFileOpenWithCallbacks
__ AudioToolboxCore: _AudioFileReadPacketData
__ AudioToolboxCore: _AudioFileSetProperty
__ AudioToolboxCore: _AudioFileWritePackets
__ AudioToolboxCore: _AudioFormatGetProperty
__ AudioToolboxCore: _AudioFormatGetPropertyInfo
__ AudioToolboxCore: _AudioUnitAddPropertyListener
__ AudioToolboxCore: _AudioUnitGetProperty
__ AudioToolboxCore: _AudioUnitGetPropertyInfo
__ AudioToolboxCore: _AudioUnitRemovePropertyListenerWithUserData
__ AudioToolboxCore: _AudioUnitSetParameter
__ AudioToolboxCore: _AudioUnitSetProperty
__ AudioToolboxCore: _ExtAudioFileCreateWithURL
__ AudioToolboxCore: _ExtAudioFileDispose
__ AudioToolboxCore: _ExtAudioFileGetProperty
__ AudioToolboxCore: _ExtAudioFileGetPropertyInfo
__ AudioToolboxCore: _ExtAudioFileOpenURL
__ AudioToolboxCore: _ExtAudioFileRead
__ AudioToolboxCore: _ExtAudioFileSeek
__ AudioToolboxCore: _ExtAudioFileSetProperty
__ AudioToolboxCore: _ExtAudioFileTell
__ AudioToolboxCore: _ExtAudioFileWrapAudioFileID
__ AudioToolboxCore: _ExtAudioFileWrite
__ AudioToolboxCore: _ExtendedAudioBufferList_Create
__ AudioToolboxCore: _ExtendedAudioBufferList_Destroy
__ AudioToolboxCore: _ExtendedAudioBufferList_Prepare
__ AudioToolboxCore: _OBJC_CLASS_$_AUAudioUnit
__ AudioToolboxCore: _OBJC_METACLASS_$_AUAudioUnit
__ AudioToolboxCore: _kAudioComponentLocalRegistrationsChangedNotification
__ AudioToolboxCore: _kAudioComponentRegistrationsChangedNotification
__ Celestial: _AVSystemController_CarPlayAuxStreamSupportAttribute
__ Celestial: _AVSystemController_CarPlaySupportsMixableSiriAttribute
__ Celestial: _OBJC_CLASS_$_AVSystemController
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAbsoluteTimeGetGregorianDate
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCopyExecutableArchitecturesForURL
__ CoreFoundation: _CFBundleCopyLocalizedString
__ CoreFoundation: _CFBundleGetBundleWithIdentifier
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryGetValueIfPresent
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFMakeCollectable
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPropertyListCreateData
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceSignal
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFTimeZoneCopySystem
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _CFURLGetString
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreMIDI: _MIDIEventListInit
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSHomeDirectory
__ Foundation: _NSLog
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ SoftLinking: __sl_dlopen
__ caulk: __ZN5caulk10concurrent7messageD2Ev
__ caulk: __ZN5caulk10concurrent9messenger5drainEv
__ caulk: __ZN5caulk10concurrent9messenger7enqueueERNS0_7messageE
__ caulk: __ZN5caulk10concurrent9messengerC1ENS1_15thread_strategyERKNS_6thread10attributesE
__ caulk: __ZN5caulk10concurrent9messengerD1Ev
__ caulk: __ZN5caulk5alloc26get_realtime_safe_resourceEv
__ caulk: __ZN5caulk9semaphore10timed_waitEd
__ caulk: __ZN5caulk9semaphore6signalEv
__ caulk: __ZN5caulk9semaphoreC1Ej
__ caulk: __ZN5caulk9semaphoreD1Ev
__ libAudioStatistics.dylib: _CAReportingApplicationName
__ libAudioStatistics.dylib: _OBJC_CLASS_$_CAReporter
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGIsQuestionValid
__ libSystem.B.dylib: _APP_SANDBOX_READ
__ libSystem.B.dylib: _APP_SANDBOX_READ_WRITE
__ libSystem.B.dylib: _OSAtomicDequeue
__ libSystem.B.dylib: _OSAtomicEnqueue
__ libSystem.B.dylib: _SANDBOX_EXTENSION_DEFAULT
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___udivti3
__ libSystem.B.dylib: __dispatch_source_type_mach_recv
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_assert_log
__ libSystem.B.dylib: __os_crash
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: _acosf
__ libSystem.B.dylib: _atan2f
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_f
__ libSystem.B.dylib: _dispatch_block_cancel
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_workloop_create_inactive
__ libSystem.B.dylib: _dispatch_workloop_set_scheduler_priority
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _funopen
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _hypotf
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _log10f
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_port_allocate
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_port_insert_right
__ libSystem.B.dylib: _mach_port_mod_refs
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_is_darwinos
__ libSystem.B.dylib: _pthread_attr_destroy
__ libSystem.B.dylib: _pthread_attr_getschedparam
__ libSystem.B.dylib: _pthread_attr_init
__ libSystem.B.dylib: _pthread_attr_setdetachstate
__ libSystem.B.dylib: _pthread_attr_setschedparam
__ libSystem.B.dylib: _pthread_attr_setschedpolicy
__ libSystem.B.dylib: _pthread_cond_broadcast
__ libSystem.B.dylib: _pthread_cond_destroy
__ libSystem.B.dylib: _pthread_cond_init
__ libSystem.B.dylib: _pthread_cond_signal
__ libSystem.B.dylib: _pthread_cond_timedwait_relative_np
__ libSystem.B.dylib: _pthread_cond_wait
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_equal
__ libSystem.B.dylib: _pthread_mach_thread_np
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_trylock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _pthread_setname_np
__ libSystem.B.dylib: _qsort
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _sandbox_extension_issue_generic
__ libSystem.B.dylib: _sched_yield
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strrchr
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _thread_info
__ libSystem.B.dylib: _thread_policy_set
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _vsnprintf
__ libSystem.B.dylib: _xpc_connection_create
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_set_context
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_finalizer_f
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_release
__ libc++.1.dylib: __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNKSt9exception4whatEv
__ libc++.1.dylib: __ZNSt11logic_errorC1EPKc
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt11logic_errorD1Ev
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt3__111__call_onceERVmPvPFvS2_E
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112bad_weak_ptrD1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115recursive_mutex4lockEv
__ libc++.1.dylib: __ZNSt3__115recursive_mutex6unlockEv
__ libc++.1.dylib: __ZNSt3__115recursive_mutex8try_lockEv
__ libc++.1.dylib: __ZNSt3__115recursive_mutexC1Ev
__ libc++.1.dylib: __ZNSt3__115recursive_mutexD1Ev
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count4lockEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__15mutex4lockEv
__ libc++.1.dylib: __ZNSt3__15mutex6unlockEv
__ libc++.1.dylib: __ZNSt3__15mutexD1Ev
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__19to_stringEi
__ libc++.1.dylib: __ZNSt3__19to_stringEm
__ libc++.1.dylib: __ZNSt9bad_allocC1Ev
__ libc++.1.dylib: __ZNSt9bad_allocD1Ev
__ libc++.1.dylib: __ZNSt9exceptionD2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTIi
__ libc++.1.dylib: __ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv121__vmi_class_type_infoE
__ libc++.1.dylib: __ZTVNSt3__112bad_weak_ptrE
__ libc++.1.dylib: __ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZTVSt18bad_variant_access
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___cxa_rethrow
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
AVAudioIONode : AVAudioNode
 @property  double presentationLatency
 @property  ^{OpaqueAudioComponentInstance=} audioUnit
 @property  BOOL voiceProcessingEnabled

  // instance methods
  -[AVAudioIONode audioUnit]
  -[AVAudioIONode didAttachToEngine:]
  -[AVAudioIONode manualRenderingMode]
  -[AVAudioIONode isInManualRenderingMode]
  -[AVAudioIONode initWithIOUnit:isInput:]
  -[AVAudioIONode presentationLatency]
  -[AVAudioIONode didDetachFromEngine:error:]
  -[AVAudioIONode setVoiceProcessingEnabled:error:]
  -[AVAudioIONode isVoiceProcessingEnabled]
  -[AVAudioIONode enableManualRenderingMode:isInput:]
  -[AVAudioIONode enableRealtimeRenderingModeWithIOUnit:isInput:forceIOUnitReset:]


AVAudioOutputNode : AVAudioIONode
  // instance methods
  -[AVAudioOutputNode manualRenderingFormat]
  -[AVAudioOutputNode setManualRenderingPCMFormat:maximumFrameCount:]
  -[AVAudioOutputNode manualRenderingMaximumFrameCount]


AVAudioInputNode : AVAudioIONode <AVAudioMixing>
 @property  BOOL voiceProcessingBypassed
 @property  BOOL voiceProcessingAGCEnabled
 @property  BOOL voiceProcessingInputMuted
 @property  float volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVAudioInputNode isVoiceProcessingAGCEnabled]
  -[AVAudioInputNode rate]
  -[AVAudioInputNode setRate:]
  -[AVAudioInputNode setVoiceProcessingInputMuted:]
  -[AVAudioInputNode isVoiceProcessingInputMuted]
  -[AVAudioInputNode isVoiceProcessingBypassed]
  -[AVAudioInputNode setVoiceProcessingAGCEnabled:]
  -[AVAudioInputNode setManualRenderingInputPCMFormat:inputBlock:]
  -[AVAudioInputNode setVoiceProcessingBypassed:]


AVAudioConnectionPoint : NSObject
 @property  AVAudioNode *node
 @property  unsigned long bus

  // class methods
  +[AVAudioConnectionPoint connectionPointWithNode:bus:]

  // instance methods
  -[AVAudioConnectionPoint node]
  -[AVAudioConnectionPoint dealloc]
  -[AVAudioConnectionPoint isEqual:]
  -[AVAudioConnectionPoint init]
  -[AVAudioConnectionPoint initWithNode:bus:]
  -[AVAudioConnectionPoint bus]


AVVCRecordDeviceInfo : NSObject
 @property  NSString *recordRoute
 @property  BOOL isRemoteDevice
 @property  NSString *remoteProductIdentifier
 @property  NSUUID *remoteDeviceUID
 @property  unsigned int remoteDeviceCategory
 @property  BOOL isUpsamplingSourceAudio
 @property  NSString *remoteDeviceUIDString

  // instance methods
  -[AVVCRecordDeviceInfo recordRoute]
  -[AVVCRecordDeviceInfo dealloc]
  -[AVVCRecordDeviceInfo .cxx_destruct]
  -[AVVCRecordDeviceInfo isRemoteDevice]
  -[AVVCRecordDeviceInfo initWithRecordingEngine:]
  -[AVVCRecordDeviceInfo remoteProductIdentifier]
  -[AVVCRecordDeviceInfo remoteDeviceUID]
  -[AVVCRecordDeviceInfo remoteDeviceCategory]
  -[AVVCRecordDeviceInfo isUpsamplingSourceAudio]
  -[AVVCRecordDeviceInfo remoteDeviceUIDString]


AVVoiceController : NSObject <AVAudioRemoteInputPlugin_PrivateTest>
 @property  BOOL bargeInDetectEnabled
 @property  BOOL stopOnBargeInEnabled
 @property  NSString *recordRoute
 @property  NSString *playbackRoute
 @property  unsigned long lastRecordStartTime
 @property  NSDictionary *voiceTriggerInfo
 @property  BOOL synchronousCallbackEnabled
 @property  AVAudioFormat *pcmRecordBufferFormat
 @property  BOOL duckOthersOption
 @property  unsigned long numberOfChannels
 @property  NSDictionary *recordSettings
 @property  BOOL recording
 @property  <Endpointer> *endpointerDelegate
 @property  int recordEndpointMode
 @property  double recordStartWaitTime
 @property  double recordInterspeechWaitTime
 @property  double recordEndWaitTime
 @property  <AVVoiceControllerRecordDelegate> *recordDelegate
 @property  BOOL meteringEnabled
 @property  BOOL stopOnEndpointEnabled
 @property  float alertVolume
 @property  unsigned long alertStartTime
 @property  NSDictionary *metrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVVoiceController updateMeters]
  -[AVVoiceController setDuckOthersOption:]
  -[AVVoiceController peakPowerForChannel:]
  -[AVVoiceController finalize]
  -[AVVoiceController playbackRoute]
  -[AVVoiceController playAlertSoundForType:]
  -[AVVoiceController setAlertSoundFromURL:forType:]
  -[AVVoiceController recordRoute]
  -[AVVoiceController recordSettings]
  -[AVVoiceController alertStartTime]
  -[AVVoiceController playRecordStartingAlertAndResetEndpointer]
  -[AVVoiceController setMeteringEnabled:]
  -[AVVoiceController averagePowerForChannel:]
  -[AVVoiceController voiceTriggerInfo]
  -[AVVoiceController startRecordingWithSettings:error:]
  -[AVVoiceController startRecording]
  -[AVVoiceController isRecording]
  -[AVVoiceController impl]
  -[AVVoiceController prepareRecordWithSettings:error:]
  -[AVVoiceController stopRecording]
  -[AVVoiceController enableMiniDucking:]
  -[AVVoiceController dealloc]
  -[AVVoiceController initWithError:]
  -[AVVoiceController resetEndpointer]
  -[AVVoiceController getRecordBufferDuration]
  -[AVVoiceController releaseAudioSession:]
  -[AVVoiceController configureAlertBehavior:]
  -[AVVoiceController startRecording:]
  -[AVVoiceController startListening:]
  -[AVVoiceController setCurrentContext:error:]
  -[AVVoiceController setRecordBufferDuration:]
  -[AVVoiceController metrics]
  -[AVVoiceController setEndpointerDelegate:]
  -[AVVoiceController releaseAudioSession]
  -[AVVoiceController setSynchronousCallbackEnabled:]
  -[AVVoiceController prewarmAudioSession]
  -[AVVoiceController endpointerDelegate]
  -[AVVoiceController initWithContext:error:]
  -[AVVoiceController setRecordDelegate:]
  -[AVVoiceController startRecordForStream:error:]
  -[AVVoiceController stopRecordForStream:error:]
  -[AVVoiceController deactivateAudioSessionForStream:withOptions:error:]
  -[AVVoiceController configureAlertBehaviorForStream:error:]
  -[AVVoiceController initVoiceControllerForClient:withError:]
  -[AVVoiceController playAlertSoundForType:overrideMode:]
  -[AVVoiceController setContext:streamType:error:]
  -[AVVoiceController getAveragePowerForStream:forChannel:]
  -[AVVoiceController activateAudioSessionForStream:isPrewarm:recordMode:error:]
  -[AVVoiceController prepareRecordForStream:error:]
  -[AVVoiceController setRecordEndWaitTime:]
  -[AVVoiceController setRecordEndpointMode:]
  -[AVVoiceController setRecordStartWaitTime:]
  -[AVVoiceController updateMeterForStream:]
  -[AVVoiceController numberOfChannels]
  -[AVVoiceController sessionSetup_v1v2]
  -[AVVoiceController sessionCleanup_v1v2]
  -[AVVoiceController setSessionNotifications_v1v2:]
  -[AVVoiceController removeSessionNotifications:]
  -[AVVoiceController hardwareConfigChanged:]
  -[AVVoiceController handleInterruption_v1v2:]
  -[AVVoiceController handleRouteChange_v1v2:]
  -[AVVoiceController handleMediaServerDeath_v1v2:]
  -[AVVoiceController handleMediaServerReset_v1v2:]
  -[AVVoiceController handlePluginDidPublishDevice:withDevice:]
  -[AVVoiceController handlePluginDidUnpublishDevice:withDevice:]
  -[AVVoiceController beganRecording_v1v2:status:]
  -[AVVoiceController finishedRecording_v1v2:status:]
  -[AVVoiceController startpointDetected]
  -[AVVoiceController interspeechPointDetected]
  -[AVVoiceController endpointDetected]
  -[AVVoiceController encodeError:]
  -[AVVoiceController alertPlaybackFinishedOfType_v1v2:]
  -[AVVoiceController notifyStreamInvalidated_v1v2:]
  -[AVVoiceController beginRecordInterruptionWithContext_v1v2:]
  -[AVVoiceController endRecordInterruption_v1v2]
  -[AVVoiceController beginAudioSessionActivate_v1v2:]
  -[AVVoiceController endAudioSessionActivate_v1v2:]
  -[AVVoiceController sendRemoteConnectionMessage:]
  -[AVVoiceController lastRecordStartTime]
  -[AVVoiceController isBargeInDetectEnabled]
  -[AVVoiceController setBargeInDetectEnabled:]
  -[AVVoiceController isStopOnBargeInEnabled]
  -[AVVoiceController setStopOnBargeInEnabled:]
  -[AVVoiceController isSynchronousCallbackEnabled]
  -[AVVoiceController pcmRecordBufferFormat]
  -[AVVoiceController duckOthersOption]
  -[AVVoiceController mockPluginEndpoint]
  -[AVVoiceController teardownWithError:]
  -[AVVoiceController _teardownWithError:]
  -[AVVoiceController willAcceptContext:]
  -[AVVoiceController IsDeviceAvailableInLocalRoute:error:]
  -[AVVoiceController doStartRecordingAtTime_v1:behavior:]
  -[AVVoiceController setupAlertBehavior_v1:]
  -[AVVoiceController startRecordingAtTime:error:]
  -[AVVoiceController prepareListenWithSettings:error:]
  -[AVVoiceController startListeningWithSettings:error:]
  -[AVVoiceController setRecordMode:error:]
  -[AVVoiceController releaseAudioSessionForListening:]
  -[AVVoiceController releaseAudioSessionForListening:error:]
  -[AVVoiceController recordDelegate]
  -[AVVoiceController recordEndpointMode]
  -[AVVoiceController recordStartWaitTime]
  -[AVVoiceController recordInterspeechWaitTime]
  -[AVVoiceController setRecordInterspeechWaitTime:]
  -[AVVoiceController recordEndWaitTime]
  -[AVVoiceController setAlertVolume:]
  -[AVVoiceController alertVolume]
  -[AVVoiceController getAlertStartTime]
  -[AVVoiceController isMeteringEnabled]
  -[AVVoiceController isStopOnEndpointEnabled]
  -[AVVoiceController setStopOnEndpointEnabled:]
  -[AVVoiceController currentRecordDeviceInfo]
  -[AVVoiceController setContext:completion:]
  -[AVVoiceController setContext:error:]
  -[AVVoiceController prepareRecordForStream:completion:]
  -[AVVoiceController startRecordWithSettings:completion:alertCompletion:audioCallback:]
  -[AVVoiceController startRecordForStream:completion:]
  -[AVVoiceController configureAlertBehaviorForStream:completion:]
  -[AVVoiceController stopRecordForStream:completion:]
  -[AVVoiceController getCurrentStreamState:]
  -[AVVoiceController getRecordDeviceInfoForStream:]
  -[AVVoiceController activateAudioSessionForStream:isPrewarm:error:]
  -[AVVoiceController deactivateAudioSessionWithOptions:]
  -[AVVoiceController deactivateAudioSessionForStream:withOptions:completion:]
  -[AVVoiceController getCurrentSessionState]
  -[AVVoiceController getCurrentSessionStateForStream:]
  -[AVVoiceController setContextForStream:forStream:error:]
  -[AVVoiceController playAlert:withOverride:completion:]
  -[AVVoiceController getRecordBufferDurationForStream:]
  -[AVVoiceController getRecordSettingsForStream:]
  -[AVVoiceController isMeteringEnabledForStream:]
  -[AVVoiceController getPeakPowerForStream:forChannel:]
  -[AVVoiceController setRecordStatusChangeBlock:]
  -[AVVoiceController enableSmartRoutingConsiderationForStream:enable:error:]
  -[AVVoiceController setRecordModeForStream:recordMode:error:]
  -[AVVoiceController getRecordModeForStream:]
  -[AVVoiceController setAnnounceCallsEnabledForStream:enable:]
  -[AVVoiceController getInputChannelInfoForStream:completion:]
  -[AVVoiceController setDuckOthersForStream:withSettings:error:]
  -[AVVoiceController isDuckingSupportedOnPickedRouteForStream:error:]
  -[AVVoiceController enableTriangleModeForStream:enable:withCompletion:]


AVVCContextSettings : NSObject
 @property  long long activationMode
 @property  NSString *activationDeviceUID
 @property  BOOL announceCallsEnabled

  // instance methods
  -[AVVCContextSettings setActivationMode:]
  -[AVVCContextSettings .cxx_destruct]
  -[AVVCContextSettings activationMode]
  -[AVVCContextSettings copyWithZone:]
  -[AVVCContextSettings initWithMode:deviceUID:]
  -[AVVCContextSettings activationDeviceUID]
  -[AVVCContextSettings setActivationDeviceUID:]
  -[AVVCContextSettings announceCallsEnabled]
  -[AVVCContextSettings setAnnounceCallsEnabled:]


AVVCPrepareRecordSettings : NSObject
 @property  unsigned long streamID
 @property  NSDictionary *avAudioSettings
 @property  double recordBufferDuration
 @property  BOOL meteringEnabled

  // instance methods
  -[AVVCPrepareRecordSettings setMeteringEnabled:]
  -[AVVCPrepareRecordSettings streamID]
  -[AVVCPrepareRecordSettings .cxx_destruct]
  -[AVVCPrepareRecordSettings setRecordBufferDuration:]
  -[AVVCPrepareRecordSettings initWithStreamID:settings:bufferDuration:]
  -[AVVCPrepareRecordSettings setStreamID:]
  -[AVVCPrepareRecordSettings meteringEnabled]
  -[AVVCPrepareRecordSettings avAudioSettings]
  -[AVVCPrepareRecordSettings setAvAudioSettings:]
  -[AVVCPrepareRecordSettings recordBufferDuration]


AVVCConfigureAlertBehaviorSettings : NSObject
 @property  unsigned long streamID
 @property  long long startAlert
 @property  long long stopAlert
 @property  long long stopOnErrorAlert

  // instance methods
  -[AVVCConfigureAlertBehaviorSettings streamID]
  -[AVVCConfigureAlertBehaviorSettings initWithStreamID:]
  -[AVVCConfigureAlertBehaviorSettings setStartAlert:]
  -[AVVCConfigureAlertBehaviorSettings setStreamID:]
  -[AVVCConfigureAlertBehaviorSettings startAlert]
  -[AVVCConfigureAlertBehaviorSettings stopAlert]
  -[AVVCConfigureAlertBehaviorSettings setStopAlert:]
  -[AVVCConfigureAlertBehaviorSettings stopOnErrorAlert]
  -[AVVCConfigureAlertBehaviorSettings setStopOnErrorAlert:]


AVVCStartRecordSettings : NSObject
 @property  unsigned long streamID
 @property  unsigned long startHostTime
 @property  long long startAlert
 @property  long long stopAlert
 @property  long long stopOnErrorAlert
 @property  BOOL skipAlert
 @property  unsigned int startAnchorPoint

  // instance methods
  -[AVVCStartRecordSettings streamID]
  -[AVVCStartRecordSettings initWithStreamID:atStartHostTime:]
  -[AVVCStartRecordSettings setStartAlert:]
  -[AVVCStartRecordSettings setStreamID:]
  -[AVVCStartRecordSettings startAlert]
  -[AVVCStartRecordSettings stopAlert]
  -[AVVCStartRecordSettings setStopAlert:]
  -[AVVCStartRecordSettings stopOnErrorAlert]
  -[AVVCStartRecordSettings setStopOnErrorAlert:]
  -[AVVCStartRecordSettings startHostTime]
  -[AVVCStartRecordSettings setStartHostTime:]
  -[AVVCStartRecordSettings skipAlert]
  -[AVVCStartRecordSettings setSkipAlert:]
  -[AVVCStartRecordSettings startAnchorPoint]
  -[AVVCStartRecordSettings setStartAnchorPoint:]


AVVCAlertInformation : NSObject
 @property  int type
 @property  long long mode
 @property  unsigned long alertEndTime

  // instance methods
  -[AVVCAlertInformation type]
  -[AVVCAlertInformation mode]
  -[AVVCAlertInformation setMode:]
  -[AVVCAlertInformation setType:]
  -[AVVCAlertInformation initWithAlertType:mode:endTime:]
  -[AVVCAlertInformation alertEndTime]
  -[AVVCAlertInformation setAlertEndTime:]


AVVCDuckFadeDuration : NSObject
 @property  NSNumber *fadeIn
 @property  NSNumber *fadeOut

  // instance methods
  -[AVVCDuckFadeDuration .cxx_destruct]
  -[AVVCDuckFadeDuration fadeOut]
  -[AVVCDuckFadeDuration fadeIn]
  -[AVVCDuckFadeDuration initWithFadeIn:fadeOut:]
  -[AVVCDuckFadeDuration setFadeIn:]
  -[AVVCDuckFadeDuration setFadeOut:]


AVVCDuckOverride : NSObject
 @property  NSNumber *duckOthers
 @property  NSNumber *duckToLevel
 @property  BOOL isBlur
 @property  NSNumber *mixWithOthers

  // instance methods
  -[AVVCDuckOverride .cxx_destruct]
  -[AVVCDuckOverride initWithDuckOthers:duckToLevel:mixWithOthers:]
  -[AVVCDuckOverride duckOthers]
  -[AVVCDuckOverride setDuckOthers:]
  -[AVVCDuckOverride duckToLevel]
  -[AVVCDuckOverride setDuckToLevel:]
  -[AVVCDuckOverride isBlur]
  -[AVVCDuckOverride setIsBlur:]
  -[AVVCDuckOverride mixWithOthers]
  -[AVVCDuckOverride setMixWithOthers:]


AVVCDuckSettings : NSObject
 @property  AVVCDuckOverride *duckOverride
 @property  AVVCDuckFadeDuration *fadeDuration

  // instance methods
  -[AVVCDuckSettings .cxx_destruct]
  -[AVVCDuckSettings init]
  -[AVVCDuckSettings fadeDuration]
  -[AVVCDuckSettings setFadeDuration:]
  -[AVVCDuckSettings duckOverride]
  -[AVVCDuckSettings setDuckOverride:]


AVAudioUnitComponent : NSObject
 @property  NSString *name
 @property  NSString *typeName
 @property  NSString *localizedTypeName
 @property  NSString *manufacturerName
 @property  unsigned long version
 @property  NSString *versionString
 @property  NSURL *componentURL
 @property  NSArray *availableArchitectures
 @property  BOOL sandboxSafe
 @property  BOOL hasMIDIInput
 @property  BOOL hasMIDIOutput
 @property  ^{OpaqueAudioComponent=} audioComponent
 @property  NSArray *userTagNames
 @property  NSArray *allTagNames
 @property  {AudioComponentDescription=IIIII} audioComponentDescription
 @property  NSURL *iconURL
 @property  UIImage *icon
 @property  BOOL passesAUVal
 @property  BOOL hasCustomView
 @property  NSDictionary *configurationDictionary

  // instance methods
  -[AVAudioUnitComponent versionString]
  -[AVAudioUnitComponent manufacturerName]
  -[AVAudioUnitComponent audioComponentDescription]
  -[AVAudioUnitComponent localeChanged]
  -[AVAudioUnitComponent iconURL]
  -[AVAudioUnitComponent userTagNames]
  -[AVAudioUnitComponent hasCustomView]
  -[AVAudioUnitComponent hasMIDIOutput]
  -[AVAudioUnitComponent typeName]
  -[AVAudioUnitComponent componentURL]
  -[AVAudioUnitComponent allTagNames]
  -[AVAudioUnitComponent isComponentDescriptionMatch:]
  -[AVAudioUnitComponent initWithComponentDescription:]
  -[AVAudioUnitComponent icon]
  -[AVAudioUnitComponent passesAUVal]
  -[AVAudioUnitComponent localizedTypeName]
  -[AVAudioUnitComponent version]
  -[AVAudioUnitComponent hasMIDIInput]
  -[AVAudioUnitComponent name]
  -[AVAudioUnitComponent configurationDictionary]
  -[AVAudioUnitComponent supportsNumberInputChannels:outputChannels:]
  -[AVAudioUnitComponent initWithComponentDescription:withAVAUManagerImpl:]
  -[AVAudioUnitComponent isSandboxSafe]
  -[AVAudioUnitComponent audioComponent]
  -[AVAudioUnitComponent setUserTagNames:]
  -[AVAudioUnitComponent availableArchitectures]
  -[AVAudioUnitComponent GetTypeName:]
  -[AVAudioUnitComponent validateWithResults:inCompletionHandler:]


SpeexEndpointer : NSObject <Endpointer>
 @property  int endpointMode
 @property  double startWaitTime
 @property  double interspeechWaitTime
 @property  double endWaitTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SpeexEndpointer interspeechWaitTime]
  -[SpeexEndpointer setEndpointMode:]
  -[SpeexEndpointer setStartWaitTime:]
  -[SpeexEndpointer startWaitTime]
  -[SpeexEndpointer endpointMode]
  -[SpeexEndpointer setEndWaitTime:]
  -[SpeexEndpointer endWaitTime]
  -[SpeexEndpointer setInterspeechWaitTime:]
  -[SpeexEndpointer dealloc]
  -[SpeexEndpointer reset]
  -[SpeexEndpointer init]
  -[SpeexEndpointer getStatus:]
  -[SpeexEndpointer configureWithSampleRate:andFrameRate:]
  -[SpeexEndpointer configureWithASBD:andFrameRate:]
  -[SpeexEndpointer getStatus:count:]


AVAudioUnitTimeEffect : AVAudioUnit
 @property  BOOL bypass

  // instance methods
  -[AVAudioUnitTimeEffect setBypass:]
  -[AVAudioUnitTimeEffect initWithAudioComponentDescription:]
  -[AVAudioUnitTimeEffect bypass]


AVAudioUnitComponentManager : NSObject
 @property  NSArray *tagNames
 @property  NSArray *standardLocalizedTagNames

  // class methods
  +[AVAudioUnitComponentManager allocWithZone:]
  +[AVAudioUnitComponentManager privateAllocInitSingleton]
  +[AVAudioUnitComponentManager sharedAudioUnitComponentManager]

  // instance methods
  -[AVAudioUnitComponentManager componentsPassingTest:]
  -[AVAudioUnitComponentManager componentsMatchingDescription:]
  -[AVAudioUnitComponentManager registrationsChanged:]
  -[AVAudioUnitComponentManager standardLocalizedTagNames]
  -[AVAudioUnitComponentManager copyWithZone:]
  -[AVAudioUnitComponentManager localeChanged:]
  -[AVAudioUnitComponentManager componentsMatchingPredicate:]
  -[AVAudioUnitComponentManager tagNames]
  -[AVAudioUnitComponentManager init]


AVAudioUnitDelay : AVAudioUnitEffect
 @property  double delayTime
 @property  float feedback
 @property  float lowPassCutoff
 @property  float wetDryMix

  // instance methods
  -[AVAudioUnitDelay feedback]
  -[AVAudioUnitDelay setDelayTime:]
  -[AVAudioUnitDelay delayTime]
  -[AVAudioUnitDelay init]
  -[AVAudioUnitDelay setFeedback:]
  -[AVAudioUnitDelay setWetDryMix:]
  -[AVAudioUnitDelay setLowPassCutoff:]
  -[AVAudioUnitDelay wetDryMix]
  -[AVAudioUnitDelay lowPassCutoff]


VoiceVerificationEndpointer : NSObject <Endpointer>
 @property  int endpointMode
 @property  double startWaitTime
 @property  double interspeechWaitTime
 @property  double endWaitTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VoiceVerificationEndpointer interspeechWaitTime]
  -[VoiceVerificationEndpointer setEndpointMode:]
  -[VoiceVerificationEndpointer setStartWaitTime:]
  -[VoiceVerificationEndpointer startWaitTime]
  -[VoiceVerificationEndpointer endpointMode]
  -[VoiceVerificationEndpointer setEndWaitTime:]
  -[VoiceVerificationEndpointer endWaitTime]
  -[VoiceVerificationEndpointer setInterspeechWaitTime:]
  -[VoiceVerificationEndpointer dealloc]
  -[VoiceVerificationEndpointer reset]
  -[VoiceVerificationEndpointer init]
  -[VoiceVerificationEndpointer getStatus:]
  -[VoiceVerificationEndpointer configureWithSampleRate:andFrameRate:]
  -[VoiceVerificationEndpointer configureWithASBD:andFrameRate:]


AVAudioUnitVarispeed : AVAudioUnitTimeEffect
 @property  float rate

  // instance methods
  -[AVAudioUnitVarispeed rate]
  -[AVAudioUnitVarispeed setRate:]
  -[AVAudioUnitVarispeed init]


AVAudioUnitReverb : AVAudioUnitEffect
 @property  float wetDryMix

  // instance methods
  -[AVAudioUnitReverb init]
  -[AVAudioUnitReverb setWetDryMix:]
  -[AVAudioUnitReverb wetDryMix]
  -[AVAudioUnitReverb loadFactoryPreset:]


AVAudioUnitTimePitch : AVAudioUnitTimeEffect
 @property  float rate
 @property  float pitch
 @property  float overlap

  // instance methods
  -[AVAudioUnitTimePitch rate]
  -[AVAudioUnitTimePitch setRate:]
  -[AVAudioUnitTimePitch pitch]
  -[AVAudioUnitTimePitch setPitch:]
  -[AVAudioUnitTimePitch init]
  -[AVAudioUnitTimePitch overlap]
  -[AVAudioUnitTimePitch setOverlap:]


AudioPlayerImpl : NSObject
  // instance methods
  -[AudioPlayerImpl dealloc]
  -[AudioPlayerImpl init]


AVAudioPlayer : NSObject
 @property  BOOL playing
 @property  unsigned long numberOfChannels
 @property  double duration
 @property  NSString *currentDevice
 @property  <AVAudioPlayerDelegate> *delegate
 @property  NSURL *url
 @property  NSData *data
 @property  float pan
 @property  float volume
 @property  BOOL enableRate
 @property  float rate
 @property  double currentTime
 @property  double deviceCurrentTime
 @property  long long numberOfLoops
 @property  NSDictionary *settings
 @property  AVAudioFormat *format
 @property  BOOL meteringEnabled
 @property  NSArray *channelAssignments

  // instance methods
  -[AVAudioPlayer updateMeters]
  -[AVAudioPlayer peakPowerForChannel:]
  -[AVAudioPlayer currentTime]
  -[AVAudioPlayer currentDevice]
  -[AVAudioPlayer finalize]
  -[AVAudioPlayer initWithContentsOfURL:error:]
  -[AVAudioPlayer setMeteringEnabled:]
  -[AVAudioPlayer averagePowerForChannel:]
  -[AVAudioPlayer rate]
  -[AVAudioPlayer setDelegate:]
  -[AVAudioPlayer initWithData:error:]
  -[AVAudioPlayer setCurrentDevice:]
  -[AVAudioPlayer impl]
  -[AVAudioPlayer setRate:]
  -[AVAudioPlayer delegate]
  -[AVAudioPlayer pause]
  -[AVAudioPlayer dealloc]
  -[AVAudioPlayer setVolume:]
  -[AVAudioPlayer stop]
  -[AVAudioPlayer duration]
  -[AVAudioPlayer settings]
  -[AVAudioPlayer volume]
  -[AVAudioPlayer isPlaying]
  -[AVAudioPlayer format]
  -[AVAudioPlayer url]
  -[AVAudioPlayer setCurrentTime:]
  -[AVAudioPlayer pan]
  -[AVAudioPlayer setPan:]
  -[AVAudioPlayer handleInterruption:]
  -[AVAudioPlayer play]
  -[AVAudioPlayer init]
  -[AVAudioPlayer data]
  -[AVAudioPlayer setAudioSession:]
  -[AVAudioPlayer initBase]
  -[AVAudioPlayer audioSession]
  -[AVAudioPlayer prepareToPlay]
  -[AVAudioPlayer playAtTime:]
  -[AVAudioPlayer deviceCurrentTime]
  -[AVAudioPlayer numberOfChannels]
  -[AVAudioPlayer beginInterruption]
  -[AVAudioPlayer endInterruptionWithFlags:]
  -[AVAudioPlayer endInterruption]
  -[AVAudioPlayer numberOfLoops]
  -[AVAudioPlayer setNumberOfLoops:]
  -[AVAudioPlayer isMeteringEnabled]
  -[AVAudioPlayer finishedPlaying:]
  -[AVAudioPlayer decodeError:]
  -[AVAudioPlayer privRemoveSessionListener]
  -[AVAudioPlayer initWithContentsOfURL:fileTypeHint:error:]
  -[AVAudioPlayer initWithData:fileTypeHint:error:]
  -[AVAudioPlayer setVolume:fadeDuration:]
  -[AVAudioPlayer setEnableRate:]
  -[AVAudioPlayer enableRate]
  -[AVAudioPlayer channelAssignments]
  -[AVAudioPlayer setChannelAssignments:]
  -[AVAudioPlayer mixToUplink]
  -[AVAudioPlayer setMixToUplink:]


AVAudioUnitGenerator : AVAudioUnit <AVAudioMixing>
 @property  BOOL bypass
 @property  float volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVAudioUnitGenerator setBypass:]
  -[AVAudioUnitGenerator initWithAudioComponentDescription:]
  -[AVAudioUnitGenerator bypass]


AVVCSessionFactory : NSObject
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMutableDictionary *sessionManagerMap
 @property  AVVCSessionManager *primarySessionManager
 @property  @? sessionWasCreatedBlock
 @property  @? sessionWillBeDestroyedBlock

  // class methods
  +[AVVCSessionFactory sharedInstance]

  // instance methods
  -[AVVCSessionFactory workQueue]
  -[AVVCSessionFactory setWorkQueue:]
  -[AVVCSessionFactory .cxx_destruct]
  -[AVVCSessionFactory init]
  -[AVVCSessionFactory _wqCreateAuxSessionAndManagerForDeviceUID:clientType:session:manager:error:]
  -[AVVCSessionFactory _wqCreatePrimarySessionManagerIfNeeded:clientType:error:]
  -[AVVCSessionFactory _wqSessionAndManagerForContext:clientType:session:manager:error:]
  -[AVVCSessionFactory sessionForContext:completion:]
  -[AVVCSessionFactory sessionForContext:error:]
  -[AVVCSessionFactory sessionForContext:clientType:completion:]
  -[AVVCSessionFactory sessionForContext:clientType:error:]
  -[AVVCSessionFactory sessionManagerForContext:clientType:completion:]
  -[AVVCSessionFactory sessionManagerForContext:clientType:error:]
  -[AVVCSessionFactory cleanupContext:]
  -[AVVCSessionFactory auxSessionManagers]
  -[AVVCSessionFactory releasePrimarySessionManager]
  -[AVVCSessionFactory sessionManagerMap]
  -[AVVCSessionFactory setSessionManagerMap:]
  -[AVVCSessionFactory primarySessionManager]
  -[AVVCSessionFactory setPrimarySessionManager:]
  -[AVVCSessionFactory sessionWasCreatedBlock]
  -[AVVCSessionFactory setSessionWasCreatedBlock:]
  -[AVVCSessionFactory sessionWillBeDestroyedBlock]
  -[AVVCSessionFactory setSessionWillBeDestroyedBlock:]


AVAudioRecorder : NSObject <AVAudioSessionParticipant>
 @property  int processToTap
 @property  BOOL instantaneousMetering
 @property  BOOL recording
 @property  NSURL *url
 @property  NSDictionary *settings
 @property  AVAudioFormat *format
 @property  <AVAudioRecorderDelegate> *delegate
 @property  double currentTime
 @property  double deviceCurrentTime
 @property  BOOL meteringEnabled
 @property  NSArray *channelAssignments
 @property  AVAudioSession *audioSession

  // instance methods
  -[AVAudioRecorder updateMeters]
  -[AVAudioRecorder peakPowerForChannel:]
  -[AVAudioRecorder currentTime]
  -[AVAudioRecorder finalize]
  -[AVAudioRecorder setMeteringEnabled:]
  -[AVAudioRecorder averagePowerForChannel:]
  -[AVAudioRecorder setDelegate:]
  -[AVAudioRecorder isRecording]
  -[AVAudioRecorder record]
  -[AVAudioRecorder impl]
  -[AVAudioRecorder delegate]
  -[AVAudioRecorder pause]
  -[AVAudioRecorder dealloc]
  -[AVAudioRecorder stop]
  -[AVAudioRecorder settings]
  -[AVAudioRecorder format]
  -[AVAudioRecorder url]
  -[AVAudioRecorder handleInterruption:]
  -[AVAudioRecorder baseInit]
  -[AVAudioRecorder init]
  -[AVAudioRecorder setAudioSession:]
  -[AVAudioRecorder audioSession]
  -[AVAudioRecorder deviceCurrentTime]
  -[AVAudioRecorder beginInterruption]
  -[AVAudioRecorder endInterruption]
  -[AVAudioRecorder isMeteringEnabled]
  -[AVAudioRecorder channelAssignments]
  -[AVAudioRecorder setChannelAssignments:]
  -[AVAudioRecorder finishedRecording]
  -[AVAudioRecorder endInterruptionWithFlags]
  -[AVAudioRecorder privCommonCleanup]
  -[AVAudioRecorder privRemoveSessionPropertyListeners]
  -[AVAudioRecorder initWithURL:format:error:]
  -[AVAudioRecorder initWithURL:settings:error:]
  -[AVAudioRecorder prepareToRecord]
  -[AVAudioRecorder recordAtTime:]
  -[AVAudioRecorder recordForDuration:]
  -[AVAudioRecorder recordAtTime:forDuration:]
  -[AVAudioRecorder deleteRecording]
  -[AVAudioRecorder setProcessToTap:]
  -[AVAudioRecorder processToTap]
  -[AVAudioRecorder instantaneousMetering]
  -[AVAudioRecorder setInstantaneousMetering:]


AVAudioSinkNode : AVAudioNode
  // class methods
  +[AVAudioSinkNode pullInputBlockFromReceiverBlock:]

  // instance methods
  -[AVAudioSinkNode initWithReceiverBlock:]


AVAudioChannelLayout : NSObject <NSSecureCoding>
 @property  unsigned int layoutTag
 @property  r^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]} layout
 @property  unsigned int channelCount

  // class methods
  +[AVAudioChannelLayout supportsSecureCoding]
  +[AVAudioChannelLayout layoutWithLayoutTag:]
  +[AVAudioChannelLayout layoutWithLayout:]

  // instance methods
  -[AVAudioChannelLayout layoutSize]
  -[AVAudioChannelLayout channelCount]
  -[AVAudioChannelLayout layout]
  -[AVAudioChannelLayout encodeWithCoder:]
  -[AVAudioChannelLayout dealloc]
  -[AVAudioChannelLayout initWithLayout:]
  -[AVAudioChannelLayout layoutTag]
  -[AVAudioChannelLayout initWithLayoutTag:]
  -[AVAudioChannelLayout isEqual:]
  -[AVAudioChannelLayout init]
  -[AVAudioChannelLayout initWithCoder:]


AVSpeechSynthesisProviderVoice : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *name
 @property  NSString *identifier
 @property  NSArray *supportedLanguages
 @property  NSArray *primaryLanguages
 @property  long long voiceSize
 @property  NSString *version
 @property  long long gender
 @property  long long age

  // class methods
  +[AVSpeechSynthesisProviderVoice supportsSecureCoding]
  +[AVSpeechSynthesisProviderVoice initialize]
  +[AVSpeechSynthesisProviderVoice updateSpeechVoices]

  // instance methods
  -[AVSpeechSynthesisProviderVoice supportedLanguages]
  -[AVSpeechSynthesisProviderVoice identifier]
  -[AVSpeechSynthesisProviderVoice setSupportedLanguages:]
  -[AVSpeechSynthesisProviderVoice encodeWithCoder:]
  -[AVSpeechSynthesisProviderVoice gender]
  -[AVSpeechSynthesisProviderVoice .cxx_destruct]
  -[AVSpeechSynthesisProviderVoice setAge:]
  -[AVSpeechSynthesisProviderVoice version]
  -[AVSpeechSynthesisProviderVoice setIdentifier:]
  -[AVSpeechSynthesisProviderVoice setName:]
  -[AVSpeechSynthesisProviderVoice copyWithZone:]
  -[AVSpeechSynthesisProviderVoice setGender:]
  -[AVSpeechSynthesisProviderVoice name]
  -[AVSpeechSynthesisProviderVoice setVersion:]
  -[AVSpeechSynthesisProviderVoice initWithCoder:]
  -[AVSpeechSynthesisProviderVoice age]
  -[AVSpeechSynthesisProviderVoice initWithName:identifier:primaryLanguages:supportedLanguages:]
  -[AVSpeechSynthesisProviderVoice primaryLanguages]
  -[AVSpeechSynthesisProviderVoice voiceSize]
  -[AVSpeechSynthesisProviderVoice setVoiceSize:]


AVSpeechSynthesisProviderRequest : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *ssmlRepresentation
 @property  AVSpeechSynthesisProviderVoice *voice

  // class methods
  +[AVSpeechSynthesisProviderRequest supportsSecureCoding]
  +[AVSpeechSynthesisProviderRequest initialize]

  // instance methods
  -[AVSpeechSynthesisProviderRequest setVoice:]
  -[AVSpeechSynthesisProviderRequest encodeWithCoder:]
  -[AVSpeechSynthesisProviderRequest voice]
  -[AVSpeechSynthesisProviderRequest .cxx_destruct]
  -[AVSpeechSynthesisProviderRequest copyWithZone:]
  -[AVSpeechSynthesisProviderRequest initWithCoder:]
  -[AVSpeechSynthesisProviderRequest initWithSSMLRepresentation:voice:]
  -[AVSpeechSynthesisProviderRequest ssmlRepresentation]
  -[AVSpeechSynthesisProviderRequest setSsmlRepresentation:]


AVSpeechSynthesisProviderAudioUnit : AUAudioUnit
 @property  NSArray *speechVoices
 @property  @? speechSynthesisOutputMetadataBlock

  // class methods
  +[AVSpeechSynthesisProviderAudioUnit initialize]

  // instance methods
  -[AVSpeechSynthesisProviderAudioUnit setSpeechSynthesisOutputMetadataBlock:]
  -[AVSpeechSynthesisProviderAudioUnit .cxx_destruct]
  -[AVSpeechSynthesisProviderAudioUnit speechVoices]
  -[AVSpeechSynthesisProviderAudioUnit synthesizeSpeechRequest:]
  -[AVSpeechSynthesisProviderAudioUnit speechSynthesisOutputMetadataBlock]
  -[AVSpeechSynthesisProviderAudioUnit cancelSpeechRequest]
  -[AVSpeechSynthesisProviderAudioUnit setSpeechVoices:]


AVAudioDeviceTest : NSObject
 @property  NSXPCConnection *connection
 @property  <AVAudioDeviceTestServiceProtocol> *serviceDelegateAsync
 @property  <AVAudioDeviceTestServiceProtocol> *serviceDelegateSync
 @property  BOOL processSequenceAsynchronously

  // instance methods
  -[AVAudioDeviceTest dealloc]
  -[AVAudioDeviceTest .cxx_destruct]
  -[AVAudioDeviceTest connection]
  -[AVAudioDeviceTest cancel]
  -[AVAudioDeviceTest init]
  -[AVAudioDeviceTest setConnection:]
  -[AVAudioDeviceTest stopRecording:]
  -[AVAudioDeviceTest startWithSequence:completion:]
  -[AVAudioDeviceTest playback:filePath:completion:]
  -[AVAudioDeviceTest startRecording:filePath:completion:]
  -[AVAudioDeviceTest initWithXPCEndPoint:]
  -[AVAudioDeviceTest processSequenceAsynchronously]
  -[AVAudioDeviceTest setProcessSequenceAsynchronously:]
  -[AVAudioDeviceTest serviceDelegateAsync]
  -[AVAudioDeviceTest setServiceDelegateAsync:]
  -[AVAudioDeviceTest serviceDelegateSync]
  -[AVAudioDeviceTest setServiceDelegateSync:]


AVAudioConverter : NSObject
 @property  long long bitRate
 @property  NSString *bitRateStrategy
 @property  long long maximumOutputPacketSize
 @property  NSArray *availableEncodeBitRates
 @property  NSArray *applicableEncodeBitRates
 @property  NSArray *availableEncodeSampleRates
 @property  NSArray *applicableEncodeSampleRates
 @property  NSArray *availableEncodeChannelLayoutTags
 @property  AVAudioFormat *inputFormat
 @property  AVAudioFormat *outputFormat
 @property  NSArray *channelMap
 @property  NSData *magicCookie
 @property  BOOL downmix
 @property  BOOL dither
 @property  long long sampleRateConverterQuality
 @property  NSString *sampleRateConverterAlgorithm
 @property  long long primeMethod
 @property  {AVAudioConverterPrimeInfo=II} primeInfo

  // instance methods
  -[AVAudioConverter outputFormat]
  -[AVAudioConverter dealloc]
  -[AVAudioConverter reset]
  -[AVAudioConverter setMagicCookie:]
  -[AVAudioConverter magicCookie]
  -[AVAudioConverter bitRate]
  -[AVAudioConverter convertToBuffer:error:withInputFromBlock:]
  -[AVAudioConverter initFromFormat:toFormat:]
  -[AVAudioConverter channelMap]
  -[AVAudioConverter setChannelMap:]
  -[AVAudioConverter dither]
  -[AVAudioConverter setDither:]
  -[AVAudioConverter maximumOutputPacketSize]
  -[AVAudioConverter inputFormat]
  -[AVAudioConverter downmix]
  -[AVAudioConverter setDownmix:]
  -[AVAudioConverter sampleRateConverterQuality]
  -[AVAudioConverter setSampleRateConverterQuality:]
  -[AVAudioConverter sampleRateConverterAlgorithm]
  -[AVAudioConverter setSampleRateConverterAlgorithm:]
  -[AVAudioConverter primeMethod]
  -[AVAudioConverter setPrimeMethod:]
  -[AVAudioConverter primeInfo]
  -[AVAudioConverter setPrimeInfo:]
  -[AVAudioConverter convertToBuffer:fromBuffer:error:]
  -[AVAudioConverter setBitRate:]
  -[AVAudioConverter bitRateStrategy]
  -[AVAudioConverter setBitRateStrategy:]
  -[AVAudioConverter availableEncodeBitRates]
  -[AVAudioConverter applicableEncodeBitRates]
  -[AVAudioConverter availableEncodeSampleRates]
  -[AVAudioConverter applicableEncodeSampleRates]
  -[AVAudioConverter availableEncodeChannelLayoutTags]


AVVCMetricsManager : NSObject
 @property  NSMutableDictionary *publicMetrics
 @property  NSMutableDictionary *avvcProfilingInfoDictionary
 @property  unsigned long voiceTriggerStartHostTime
 @property  unsigned long callToStartRecordHostTime

  // class methods
  +[AVVCMetricsManager sharedManager]
  +[AVVCMetricsManager getLock]
  +[AVVCMetricsManager createSharedManager]
  +[AVVCMetricsManager destroySharedManager]

  // instance methods
  -[AVVCMetricsManager updateWithReporterID:]
  -[AVVCMetricsManager dealloc]
  -[AVVCMetricsManager .cxx_destruct]
  -[AVVCMetricsManager reporterID]
  -[AVVCMetricsManager init]
  -[AVVCMetricsManager checkAndUpdateReporterID:]
  -[AVVCMetricsManager retrieveMetrics]
  -[AVVCMetricsManager getStringDate:]
  -[AVVCMetricsManager resetProfileMetrics]
  -[AVVCMetricsManager retrieveProfileMetrics]
  -[AVVCMetricsManager measureElapseTimeForMetric:block:]
  -[AVVCMetricsManager setAudioIssueDetectorFormat:numFrames:]
  -[AVVCMetricsManager audioIssueDetectorAnalyzeBuffer:numFrames:timeStamp:shouldAnalyze:]
  -[AVVCMetricsManager resetAudioIssueDetector]
  -[AVVCMetricsManager setADAMFormat:numFrames:]
  -[AVVCMetricsManager adamAnalyzeBuffer:numFrames:timeStamp:shouldAnalyze:]
  -[AVVCMetricsManager resetADAM]
  -[AVVCMetricsManager logSessionMetric:value:category:type:reporterID:]
  -[AVVCMetricsManager logSessionMetric:value:category:type:context:reporterID:]
  -[AVVCMetricsManager logSingleMetric:value:category:type:reporterID:]
  -[AVVCMetricsManager logRecordAudioFormat:reporterID:]
  -[AVVCMetricsManager logRecordRoute:andPlaybackRoute:reporterID:]
  -[AVVCMetricsManager logProfileMetrics:]
  -[AVVCMetricsManager voiceTriggerStartHostTime]
  -[AVVCMetricsManager setVoiceTriggerStartHostTime:]
  -[AVVCMetricsManager callToStartRecordHostTime]
  -[AVVCMetricsManager setCallToStartRecordHostTime:]
  -[AVVCMetricsManager publicMetrics]
  -[AVVCMetricsManager setPublicMetrics:]
  -[AVVCMetricsManager avvcProfilingInfoDictionary]
  -[AVVCMetricsManager setAvvcProfilingInfoDictionary:]


AVAudioUnitDistortion : AVAudioUnitEffect
 @property  float preGain
 @property  float wetDryMix

  // instance methods
  -[AVAudioUnitDistortion init]
  -[AVAudioUnitDistortion setWetDryMix:]
  -[AVAudioUnitDistortion wetDryMix]
  -[AVAudioUnitDistortion loadFactoryPreset:]
  -[AVAudioUnitDistortion FillOutAUPreset:]
  -[AVAudioUnitDistortion setPreGain:]
  -[AVAudioUnitDistortion preGain]


AVAudioMixerNode : AVAudioNode <AVAudioMixing>
 @property  float outputVolume
 @property  unsigned long nextAvailableInputBus
 @property  float volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVAudioMixerNode inputConnected:]
  -[AVAudioMixerNode setInputPan:bus:]
  -[AVAudioMixerNode nextAvailableInputBus]
  -[AVAudioMixerNode didAttachToEngine:]
  -[AVAudioMixerNode setOutputVolume:]
  -[AVAudioMixerNode outputVolume]
  -[AVAudioMixerNode setInputVolume:bus:]
  -[AVAudioMixerNode init]


AVAudioClock : NSObject
 @property  AVAudioTime *currentTime

  // instance methods
  -[AVAudioClock currentTime]
  -[AVAudioClock dealloc]
  -[AVAudioClock initWithNode:]
  -[AVAudioClock init]
  -[AVAudioClock currentAudioTimeStamp]
  -[AVAudioClock currentIONumberFrames]
  -[AVAudioClock awaitIOCycle:]


AVMIDIPlayer : NSObject
 @property  double duration
 @property  BOOL playing
 @property  float rate
 @property  double currentPosition

  // instance methods
  -[AVMIDIPlayer finalize]
  -[AVMIDIPlayer rate]
  -[AVMIDIPlayer impl]
  -[AVMIDIPlayer setRate:]
  -[AVMIDIPlayer dealloc]
  -[AVMIDIPlayer stop]
  -[AVMIDIPlayer duration]
  -[AVMIDIPlayer play:]
  -[AVMIDIPlayer isPlaying]
  -[AVMIDIPlayer currentPosition]
  -[AVMIDIPlayer initBase]
  -[AVMIDIPlayer prepareToPlay]
  -[AVMIDIPlayer initWithContentsOfURL:soundBankURL:error:]
  -[AVMIDIPlayer initWithData:soundBankURL:error:]
  -[AVMIDIPlayer hostTimeForBeats:]
  -[AVMIDIPlayer beatsForHostTime:]
  -[AVMIDIPlayer setCurrentPosition:]
  -[AVMIDIPlayer destroyBase]


AVAudioUnitMIDIInstrument : AVAudioUnit <AVAudioMixing>
 @property  float volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVAudioUnitMIDIInstrument initWithAudioComponentDescription:]
  -[AVAudioUnitMIDIInstrument startNote:withVelocity:onChannel:]
  -[AVAudioUnitMIDIInstrument stopNote:onChannel:]
  -[AVAudioUnitMIDIInstrument sendController:withValue:onChannel:]
  -[AVAudioUnitMIDIInstrument sendPitchBend:onChannel:]
  -[AVAudioUnitMIDIInstrument sendPressure:onChannel:]
  -[AVAudioUnitMIDIInstrument sendPressureForKey:withValue:onChannel:]
  -[AVAudioUnitMIDIInstrument sendProgramChange:onChannel:]
  -[AVAudioUnitMIDIInstrument sendProgramChange:bankMSB:bankLSB:onChannel:]
  -[AVAudioUnitMIDIInstrument sendMIDIEvent:data1:data2:]
  -[AVAudioUnitMIDIInstrument sendMIDIEvent:data1:]
  -[AVAudioUnitMIDIInstrument sendMIDISysExEvent:]
  -[AVAudioUnitMIDIInstrument sendMIDIEventList:]


AVAudioBuffer : NSObject <NSCopying, NSMutableCopying>
 @property  AVAudioFormat *format
 @property  r^{AudioBufferList=I[1{AudioBuffer=II^v}]} audioBufferList
 @property  ^{AudioBufferList=I[1{AudioBuffer=II^v}]} mutableAudioBufferList

  // instance methods
  -[AVAudioBuffer dealloc]
  -[AVAudioBuffer copyWithZone:]
  -[AVAudioBuffer format]
  -[AVAudioBuffer mutableCopyWithZone:]
  -[AVAudioBuffer setByteLength:]
  -[AVAudioBuffer byteLength]
  -[AVAudioBuffer audioBufferList]
  -[AVAudioBuffer mutableAudioBufferList]
  -[AVAudioBuffer initWithFormat:byteCapacity:]
  -[AVAudioBuffer initWithPCMFormat:byteCapacity:bufferListNoCopy:deallocator:]
  -[AVAudioBuffer byteCapacity]


AVAudioPCMBuffer : AVAudioBuffer
 @property  NSArray *peakPowerPerChannel
 @property  NSArray *averagePowerPerChannel
 @property  unsigned int frameCapacity
 @property  unsigned int frameLength
 @property  unsigned long stride
 @property  ^^f floatChannelData
 @property  ^^s int16ChannelData
 @property  ^^i int32ChannelData

  // instance methods
  -[AVAudioPCMBuffer stride]
  -[AVAudioPCMBuffer copyWithZone:]
  -[AVAudioPCMBuffer mutableCopyWithZone:]
  -[AVAudioPCMBuffer frameLength]
  -[AVAudioPCMBuffer setByteLength:]
  -[AVAudioPCMBuffer initWithPCMFormat:frameCapacity:]
  -[AVAudioPCMBuffer floatChannelData]
  -[AVAudioPCMBuffer setFrameLength:]
  -[AVAudioPCMBuffer initWithPCMFormat:bufferListNoCopy:deallocator:]
  -[AVAudioPCMBuffer frameCapacity]
  -[AVAudioPCMBuffer _initChannelPtrs]
  -[AVAudioPCMBuffer int32ChannelData]
  -[AVAudioPCMBuffer int16ChannelData]
  -[AVAudioPCMBuffer appendDataFromBuffer:]
  -[AVAudioPCMBuffer appendDataFromBuffer:channel:]
  -[AVAudioPCMBuffer splitIntoSingleChannelBuffers]
  -[AVAudioPCMBuffer averagePowerPerChannel]
  -[AVAudioPCMBuffer peakPowerPerChannel]
  -[AVAudioPCMBuffer calculatePower:]
  -[AVAudioPCMBuffer calculatePower:forFloatData:stride:frameLength:]


AVAudioCompressedBuffer : AVAudioBuffer
 @property  unsigned int packetCapacity
 @property  unsigned int packetCount
 @property  long long maximumPacketSize
 @property  ^v data
 @property  unsigned int byteCapacity
 @property  unsigned int byteLength
 @property  ^{AudioStreamPacketDescription=qII} packetDescriptions

  // instance methods
  -[AVAudioCompressedBuffer data]
  -[AVAudioCompressedBuffer initWithFormat:packetCapacity:maximumPacketSize:]
  -[AVAudioCompressedBuffer packetDescriptions]
  -[AVAudioCompressedBuffer setPacketCount:]
  -[AVAudioCompressedBuffer packetCapacity]
  -[AVAudioCompressedBuffer maximumPacketSize]
  -[AVAudioCompressedBuffer packetCount]
  -[AVAudioCompressedBuffer initWithFormat:packetCapacity:]


AVAudioUnitSplitter : AVAudioUnit
  // instance methods
  -[AVAudioUnitSplitter init]
  -[AVAudioUnitSplitter initWithAudioComponentDescription:]


AVAudioUnitEQFilterParameters : NSObject
 @property  long long filterType
 @property  float frequency
 @property  float bandwidth
 @property  float gain
 @property  BOOL bypass

  // instance methods
  -[AVAudioUnitEQFilterParameters frequency]
  -[AVAudioUnitEQFilterParameters setFrequency:]
  -[AVAudioUnitEQFilterParameters setFilterType:]
  -[AVAudioUnitEQFilterParameters filterType]
  -[AVAudioUnitEQFilterParameters dealloc]
  -[AVAudioUnitEQFilterParameters setGain:]
  -[AVAudioUnitEQFilterParameters gain]
  -[AVAudioUnitEQFilterParameters initWithImpl:]
  -[AVAudioUnitEQFilterParameters setBypass:]
  -[AVAudioUnitEQFilterParameters bandwidth]
  -[AVAudioUnitEQFilterParameters init]
  -[AVAudioUnitEQFilterParameters bypass]
  -[AVAudioUnitEQFilterParameters setBandwidth:]


AVAudioUnitEQ : AVAudioUnitEffect
 @property  NSArray *bands
 @property  float globalGain

  // instance methods
  -[AVAudioUnitEQ init]
  -[AVAudioUnitEQ initWithNumberOfBands:]
  -[AVAudioUnitEQ bands]
  -[AVAudioUnitEQ globalGain]
  -[AVAudioUnitEQ setGlobalGain:]


AVAudioFormat : NSObject <NSSecureCoding>
 @property  BOOL standard
 @property  unsigned long commonFormat
 @property  unsigned int channelCount
 @property  double sampleRate
 @property  BOOL interleaved
 @property  r^{AudioStreamBasicDescription=dIIIIIIII} streamDescription
 @property  AVAudioChannelLayout *channelLayout
 @property  NSData *magicCookie
 @property  NSDictionary *settings
 @property  r^{opaqueCMFormatDescription=} formatDescription

  // class methods
  +[AVAudioFormat supportsSecureCoding]
  +[AVAudioFormat formatWithInvalidSampleRateAndChannelCount]
  +[AVAudioFormat settingsFromASBD:channelLayout:]

  // instance methods
  -[AVAudioFormat isInterleaved]
  -[AVAudioFormat channelCount]
  -[AVAudioFormat initStandardFormatWithSampleRate:channels:]
  -[AVAudioFormat initWithSettings:]
  -[AVAudioFormat initWithCommonFormat:sampleRate:interleaved:channelLayout:]
  -[AVAudioFormat channelLayout]
  -[AVAudioFormat encodeWithCoder:]
  -[AVAudioFormat dealloc]
  -[AVAudioFormat sampleRate]
  -[AVAudioFormat initWithCommonFormat:sampleRate:channels:interleaved:]
  -[AVAudioFormat commonFormat]
  -[AVAudioFormat formatDescription]
  -[AVAudioFormat settings]
  -[AVAudioFormat initWithStreamDescription:]
  -[AVAudioFormat initStandardFormatWithSampleRate:channelLayout:]
  -[AVAudioFormat setMagicCookie:]
  -[AVAudioFormat magicCookie]
  -[AVAudioFormat initWithStreamDescription:channelLayout:]
  -[AVAudioFormat streamDescription]
  -[AVAudioFormat isStandard]
  -[AVAudioFormat initWithCMAudioFormatDescription:]
  -[AVAudioFormat isEqual:]
  -[AVAudioFormat initWithCoder:]


AVAudioDeviceTestResult : NSObject <NSSecureCoding>
 @property  long long outputID
 @property  long long inputID
 @property  double sampleRate
 @property  double correlationValue
 @property  NSData *data

  // class methods
  +[AVAudioDeviceTestResult supportsSecureCoding]

  // instance methods
  -[AVAudioDeviceTestResult encodeWithCoder:]
  -[AVAudioDeviceTestResult sampleRate]
  -[AVAudioDeviceTestResult .cxx_destruct]
  -[AVAudioDeviceTestResult data]
  -[AVAudioDeviceTestResult initWithCoder:]
  -[AVAudioDeviceTestResult setSampleRate:]
  -[AVAudioDeviceTestResult initWithData:inputID:outputID:sampleRate:correlationValue:]
  -[AVAudioDeviceTestResult inputID]
  -[AVAudioDeviceTestResult setInputID:]
  -[AVAudioDeviceTestResult outputID]
  -[AVAudioDeviceTestResult setOutputID:]
  -[AVAudioDeviceTestResult correlationValue]
  -[AVAudioDeviceTestResult setCorrelationValue:]


AVAudioDeviceTestSequence : NSObject <NSSecureCoding>
 @property  BOOL processSequenceAsynchronously
 @property  long long outputID
 @property  float volume
 @property  NSURL *stimulusURL
 @property  AVAudioDeviceTestProcessingChain *inputProcessingChain
 @property  AVAudioDeviceTestProcessingChain *outputProcessingChain
 @property  long long outputMode
 @property  long long priority
 @property  NSString *mode
 @property  BOOL calculateCrossCorrelationPeak
 @property  BOOL parallelCrossCorrelationCalculation
 @property  long long numberOfChannels
 @property  NSArray *micBufferNumbers
 @property  BOOL requiresBluetoothOutput
 @property  NSString *microphone

  // class methods
  +[AVAudioDeviceTestSequence supportsSecureCoding]

  // instance methods
  -[AVAudioDeviceTestSequence setPriority:]
  -[AVAudioDeviceTestSequence encodeWithCoder:]
  -[AVAudioDeviceTestSequence mode]
  -[AVAudioDeviceTestSequence .cxx_destruct]
  -[AVAudioDeviceTestSequence setVolume:]
  -[AVAudioDeviceTestSequence setMode:]
  -[AVAudioDeviceTestSequence volume]
  -[AVAudioDeviceTestSequence priority]
  -[AVAudioDeviceTestSequence init]
  -[AVAudioDeviceTestSequence initWithCoder:]
  -[AVAudioDeviceTestSequence setOutputMode:]
  -[AVAudioDeviceTestSequence outputMode]
  -[AVAudioDeviceTestSequence numberOfChannels]
  -[AVAudioDeviceTestSequence processSequenceAsynchronously]
  -[AVAudioDeviceTestSequence setProcessSequenceAsynchronously:]
  -[AVAudioDeviceTestSequence outputID]
  -[AVAudioDeviceTestSequence setOutputID:]
  -[AVAudioDeviceTestSequence stimulusURL]
  -[AVAudioDeviceTestSequence setStimulusURL:]
  -[AVAudioDeviceTestSequence inputProcessingChain]
  -[AVAudioDeviceTestSequence setInputProcessingChain:]
  -[AVAudioDeviceTestSequence outputProcessingChain]
  -[AVAudioDeviceTestSequence setOutputProcessingChain:]
  -[AVAudioDeviceTestSequence calculateCrossCorrelationPeak]
  -[AVAudioDeviceTestSequence setCalculateCrossCorrelationPeak:]
  -[AVAudioDeviceTestSequence parallelCrossCorrelationCalculation]
  -[AVAudioDeviceTestSequence setParallelCrossCorrelationCalculation:]
  -[AVAudioDeviceTestSequence setNumberOfChannels:]
  -[AVAudioDeviceTestSequence micBufferNumbers]
  -[AVAudioDeviceTestSequence setMicBufferNumbers:]
  -[AVAudioDeviceTestSequence requiresBluetoothOutput]
  -[AVAudioDeviceTestSequence setRequiresBluetoothOutput:]
  -[AVAudioDeviceTestSequence microphone]
  -[AVAudioDeviceTestSequence setMicrophone:]


AVAudioDeviceTestProcessingChain : NSObject <NSSecureCoding>
 @property  NSURL *graphURL
 @property  NSURL *processingStripURL

  // class methods
  +[AVAudioDeviceTestProcessingChain supportsSecureCoding]

  // instance methods
  -[AVAudioDeviceTestProcessingChain encodeWithCoder:]
  -[AVAudioDeviceTestProcessingChain .cxx_destruct]
  -[AVAudioDeviceTestProcessingChain initWithCoder:]
  -[AVAudioDeviceTestProcessingChain graphURL]
  -[AVAudioDeviceTestProcessingChain setGraphURL:]
  -[AVAudioDeviceTestProcessingChain processingStripURL]
  -[AVAudioDeviceTestProcessingChain setProcessingStripURL:]


AVAudioSourceNode : AVAudioNode <AVAudioMixing>
 @property  float volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AVAudioSourceNode pullInputBlockFromRenderBlock:]

  // instance methods
  -[AVAudioSourceNode initWithRenderBlock:]
  -[AVAudioSourceNode initWithFormat:renderBlock:]


AVSpeechSynthesisVoice : NSObject <NSSecureCoding>
 @property  NSString *language
 @property  NSString *identifier
 @property  NSString *name
 @property  long long quality
 @property  long long gender
 @property  NSDictionary *audioFileSettings

  // class methods
  +[AVSpeechSynthesisVoice supportsSecureCoding]
  +[AVSpeechSynthesisVoice speechVoices]
  +[AVSpeechSynthesisVoice initialize]
  +[AVSpeechSynthesisVoice currentLanguageCode]
  +[AVSpeechSynthesisVoice voiceWithLanguage:]
  +[AVSpeechSynthesisVoice voiceWithIdentifier:]

  // instance methods
  -[AVSpeechSynthesisVoice encodeWithCoder:]
  -[AVSpeechSynthesisVoice .cxx_destruct]
  -[AVSpeechSynthesisVoice initWithCoder:]
  -[AVSpeechSynthesisVoice audioFileSettings]


AVSpeechUtterance : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *speechString
 @property  NSAttributedString *attributedSpeechString
 @property  AVSpeechSynthesisVoice *voice
 @property  float rate
 @property  float pitchMultiplier
 @property  float volume
 @property  BOOL prefersAssistiveTechnologySettings
 @property  double preUtteranceDelay
 @property  double postUtteranceDelay

  // class methods
  +[AVSpeechUtterance supportsSecureCoding]
  +[AVSpeechUtterance initialize]
  +[AVSpeechUtterance speechUtteranceWithString:]
  +[AVSpeechUtterance speechUtteranceWithAttributedString:]
  +[AVSpeechUtterance speechUtteranceWithSSMLRepresentation:]

  // instance methods
  -[AVSpeechUtterance initWithAttributedString:]
  -[AVSpeechUtterance rate]
  -[AVSpeechUtterance setVoice:]
  -[AVSpeechUtterance encodeWithCoder:]
  -[AVSpeechUtterance setRate:]
  -[AVSpeechUtterance voice]
  -[AVSpeechUtterance .cxx_destruct]
  -[AVSpeechUtterance setVolume:]
  -[AVSpeechUtterance volume]
  -[AVSpeechUtterance speechString]
  -[AVSpeechUtterance initWithString:]
  -[AVSpeechUtterance copyWithZone:]
  -[AVSpeechUtterance initWithCoder:]
  -[AVSpeechUtterance setPitchMultiplier:]
  -[AVSpeechUtterance initWithSSMLRepresentation:]
  -[AVSpeechUtterance setSpeechString:]
  -[AVSpeechUtterance attributedSpeechString]
  -[AVSpeechUtterance setAttributedSpeechString:]
  -[AVSpeechUtterance pitchMultiplier]
  -[AVSpeechUtterance prefersAssistiveTechnologySettings]
  -[AVSpeechUtterance setPrefersAssistiveTechnologySettings:]
  -[AVSpeechUtterance preUtteranceDelay]
  -[AVSpeechUtterance setPreUtteranceDelay:]
  -[AVSpeechUtterance postUtteranceDelay]
  -[AVSpeechUtterance setPostUtteranceDelay:]


AVSpeechSynthesizer : NSObject
 @property  <AVSpeechSynthesizerDelegate> *delegate
 @property  BOOL speaking
 @property  BOOL paused
 @property  NSArray *outputChannels
 @property  BOOL usesApplicationAudioSession
 @property  BOOL mixToTelephonyUplink

  // class methods
  +[AVSpeechSynthesizer initialize]

  // instance methods
  -[AVSpeechSynthesizer setDelegate:]
  -[AVSpeechSynthesizer delegate]
  -[AVSpeechSynthesizer isPaused]
  -[AVSpeechSynthesizer .cxx_destruct]
  -[AVSpeechSynthesizer isSpeaking]
  -[AVSpeechSynthesizer continueSpeaking]
  -[AVSpeechSynthesizer stopSpeakingAtBoundary:]
  -[AVSpeechSynthesizer pauseSpeakingAtBoundary:]
  -[AVSpeechSynthesizer setUsesApplicationAudioSession:]
  -[AVSpeechSynthesizer speakUtterance:]
  -[AVSpeechSynthesizer writeUtterance:toBufferCallback:]
  -[AVSpeechSynthesizer writeUtterance:toBufferCallback:toMarkerCallback:]
  -[AVSpeechSynthesizer outputChannels]
  -[AVSpeechSynthesizer setOutputChannels:]
  -[AVSpeechSynthesizer usesApplicationAudioSession]
  -[AVSpeechSynthesizer mixToTelephonyUplink]
  -[AVSpeechSynthesizer setMixToTelephonyUplink:]


AVSpeechSynthesisMarker : NSObject <NSSecureCoding, NSCopying>
 @property  long long mark
 @property  unsigned long byteSampleOffset
 @property  {_NSRange=QQ} textRange

  // class methods
  +[AVSpeechSynthesisMarker supportsSecureCoding]
  +[AVSpeechSynthesisMarker initialize]

  // instance methods
  -[AVSpeechSynthesisMarker mark]
  -[AVSpeechSynthesisMarker encodeWithCoder:]
  -[AVSpeechSynthesisMarker textRange]
  -[AVSpeechSynthesisMarker copyWithZone:]
  -[AVSpeechSynthesisMarker initWithCoder:]
  -[AVSpeechSynthesisMarker setMark:]
  -[AVSpeechSynthesisMarker setTextRange:]
  -[AVSpeechSynthesisMarker initWithMarkerType:forTextRange:atByteSampleOffset:]
  -[AVSpeechSynthesisMarker initWithMarkerType:name:forTextRange:atByteSampleOffset:]
  -[AVSpeechSynthesisMarker byteSampleOffset]
  -[AVSpeechSynthesisMarker setByteSampleOffset:]


AVVCAudioBuffer : NSObject
 @property  int channels
 @property  int bytesCapacity
 @property  int bytesDataSize
 @property  ^v data
 @property  int packetDescriptionCapacity
 @property  int packetDescriptionCount
 @property  ^{AudioStreamPacketDescription=qII} packetDescriptions
 @property  unsigned long timeStamp
 @property  ^{AudioStreamBasicDescription=dIIIIIIII} streamDescription
 @property  BOOL upsamplingSourceAudio
 @property  BOOL remoteVoiceActivityAvailable
 @property  unsigned char remoteVoiceActivityRMS
 @property  unsigned char remoteVoiceActivityVAD

  // instance methods
  -[AVVCAudioBuffer finalize]
  -[AVVCAudioBuffer dealloc]
  -[AVVCAudioBuffer channels]
  -[AVVCAudioBuffer timeStamp]
  -[AVVCAudioBuffer streamDescription]
  -[AVVCAudioBuffer data]
  -[AVVCAudioBuffer packetDescriptionCount]
  -[AVVCAudioBuffer packetDescriptions]
  -[AVVCAudioBuffer bytesDataSize]
  -[AVVCAudioBuffer bytesCapacity]
  -[AVVCAudioBuffer setBytesDataSize:]
  -[AVVCAudioBuffer packetDescriptionCapacity]
  -[AVVCAudioBuffer setPacketDescriptions:count:]
  -[AVVCAudioBuffer remoteVoiceActivityRMS]
  -[AVVCAudioBuffer remoteVoiceActivityVAD]
  -[AVVCAudioBuffer remoteVoiceActivityAvailable]
  -[AVVCAudioBuffer upsamplingSourceAudio]
  -[AVVCAudioBuffer initWithAudioQueueBuffer:channels:timeStamp:]


AVAudioEnvironmentDistanceAttenuationParameters : NSObject
 @property  long long distanceAttenuationModel
 @property  float referenceDistance
 @property  float maximumDistance
 @property  float rolloffFactor

  // instance methods
  -[AVAudioEnvironmentDistanceAttenuationParameters maximumDistance]
  -[AVAudioEnvironmentDistanceAttenuationParameters initWithEnvironment:]
  -[AVAudioEnvironmentDistanceAttenuationParameters setMaximumDistance:]
  -[AVAudioEnvironmentDistanceAttenuationParameters dealloc]
  -[AVAudioEnvironmentDistanceAttenuationParameters init]
  -[AVAudioEnvironmentDistanceAttenuationParameters setDistanceAttenuationModel:]
  -[AVAudioEnvironmentDistanceAttenuationParameters distanceAttenuationModel]
  -[AVAudioEnvironmentDistanceAttenuationParameters setReferenceDistance:]
  -[AVAudioEnvironmentDistanceAttenuationParameters referenceDistance]
  -[AVAudioEnvironmentDistanceAttenuationParameters setRolloffFactor:]
  -[AVAudioEnvironmentDistanceAttenuationParameters rolloffFactor]


AVAudioEnvironmentReverbParameters : NSObject
 @property  BOOL enable
 @property  float level
 @property  AVAudioUnitEQFilterParameters *filterParameters

  // instance methods
  -[AVAudioEnvironmentReverbParameters enable]
  -[AVAudioEnvironmentReverbParameters setLevel:]
  -[AVAudioEnvironmentReverbParameters initWithEnvironment:]
  -[AVAudioEnvironmentReverbParameters dealloc]
  -[AVAudioEnvironmentReverbParameters setEnable:]
  -[AVAudioEnvironmentReverbParameters level]
  -[AVAudioEnvironmentReverbParameters init]
  -[AVAudioEnvironmentReverbParameters filterParameters]
  -[AVAudioEnvironmentReverbParameters loadFactoryReverbPreset:]


AVAudioEnvironmentNode : AVAudioNode <AVAudioMixing>
 @property  long long outputType
 @property  float outputVolume
 @property  unsigned long nextAvailableInputBus
 @property  {AVAudio3DPoint=fff} listenerPosition
 @property  {AVAudio3DVectorOrientation={AVAudio3DPoint=fff}{AVAudio3DPoint=fff}} listenerVectorOrientation
 @property  {AVAudio3DAngularOrientation=fff} listenerAngularOrientation
 @property  AVAudioEnvironmentDistanceAttenuationParameters *distanceAttenuationParameters
 @property  AVAudioEnvironmentReverbParameters *reverbParameters
 @property  NSArray *applicableRenderingAlgorithms
 @property  float volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVAudioEnvironmentNode nextAvailableInputBus]
  -[AVAudioEnvironmentNode setOutputVolume:]
  -[AVAudioEnvironmentNode outputVolume]
  -[AVAudioEnvironmentNode init]
  -[AVAudioEnvironmentNode setOutputType:]
  -[AVAudioEnvironmentNode outputType]
  -[AVAudioEnvironmentNode applicableRenderingAlgorithms]
  -[AVAudioEnvironmentNode setListenerPosition:]
  -[AVAudioEnvironmentNode listenerPosition]
  -[AVAudioEnvironmentNode setListenerVectorOrientation:]
  -[AVAudioEnvironmentNode listenerVectorOrientation]
  -[AVAudioEnvironmentNode setListenerAngularOrientation:]
  -[AVAudioEnvironmentNode listenerAngularOrientation]
  -[AVAudioEnvironmentNode distanceAttenuationParameters]
  -[AVAudioEnvironmentNode reverbParameters]


AVVCSessionManager : NSObject
 @property  AVAudioSession *audioSession
 @property  int sessionState
 @property  BOOL isPrimary
 @property  BOOL clientRequestsRecording
 @property  float deviceGain
 @property  NSString *playbackRoute
 @property  BOOL forceGetSessionProperties
 @property  double inputLatency
 @property  double outputLatency
 @property  long long reporterID

  // instance methods
  -[AVVCSessionManager playbackRoute]
  -[AVVCSessionManager isPrimary]
  -[AVVCSessionManager outputLatency]
  -[AVVCSessionManager isSessionActive]
  -[AVVCSessionManager inputLatency]
  -[AVVCSessionManager currentRoute]
  -[AVVCSessionManager .cxx_construct]
  -[AVVCSessionManager siriInputSource]
  -[AVVCSessionManager dealloc]
  -[AVVCSessionManager setActivationContext:error:]
  -[AVVCSessionManager .cxx_destruct]
  -[AVVCSessionManager setSessionState:]
  -[AVVCSessionManager initWithSession:]
  -[AVVCSessionManager siriRemoteInputIdentifier]
  -[AVVCSessionManager enableSmartRoutingConsideration:]
  -[AVVCSessionManager reporterID]
  -[AVVCSessionManager sessionState]
  -[AVVCSessionManager setAudioSession:]
  -[AVVCSessionManager audioSession]
  -[AVVCSessionManager setActive:withOptions:error:]
  -[AVVCSessionManager setCategory:mode:routeSharingPolicy:options:error:]
  -[AVVCSessionManager setCategory:mode:options:error:]
  -[AVVCSessionManager removeSessionNotifications:]
  -[AVVCSessionManager setupOneTimeSessionSettingsForClient:]
  -[AVVCSessionManager setSessionActivationContext:]
  -[AVVCSessionManager shouldEnableMiniDucking:withOptions:]
  -[AVVCSessionManager isMiniDuckingEnabled]
  -[AVVCSessionManager getHypotheticalRouteAndUpdateStates]
  -[AVVCSessionManager setSessionCategoryModeOptionsForActivationMode:withOptions:]
  -[AVVCSessionManager setSessionAudioHWControlFlagsForActivationMode:withOptions:]
  -[AVVCSessionManager setSessionSampleRateForActivationMode:]
  -[AVVCSessionManager setSessionBufferSize:]
  -[AVVCSessionManager changeDuckOthersOption:]
  -[AVVCSessionManager setDuckOthers:mixWithOthers:error:]
  -[AVVCSessionManager setDuckingFadeOutDuration:fadeInDuration:error:]
  -[AVVCSessionManager isSessionOutputInWirelessSplitterMode]
  -[AVVCSessionManager getSessionActivationOptions]
  -[AVVCSessionManager setSessionActivationOptions:]
  -[AVVCSessionManager isAirplayOneOfTheOutputRoutes:]
  -[AVVCSessionManager activateAudioSessionWithPrewarm:error:]
  -[AVVCSessionManager deactivateAudioSessionWithOptions:error:]
  -[AVVCSessionManager setSessionStateWithoutLock:]
  -[AVVCSessionManager getAVVCSessionState]
  -[AVVCSessionManager setClientRequestsRecording:]
  -[AVVCSessionManager getClientRequestsRecording]
  -[AVVCSessionManager setDeviceGain:]
  -[AVVCSessionManager getDeviceGain]
  -[AVVCSessionManager setPlaybackRoute:]
  -[AVVCSessionManager getPlaybackRoute]
  -[AVVCSessionManager setForceGetSessionProperties:]
  -[AVVCSessionManager getForceGetSessionProperties]
  -[AVVCSessionManager setEnableBTTriangleMode:error:]
  -[AVVCSessionManager getInputLatency]
  -[AVVCSessionManager getOutputLatency]
  -[AVVCSessionManager speechDetectionDeviceSampleRate]
  -[AVVCSessionManager clearInputPreferences:]
  -[AVVCSessionManager isSessionInSiriCategoryModeAndOptions:]
  -[AVVCSessionManager isSessionInSiriCategory]
  -[AVVCSessionManager setAudioHardwareControlFlags:error:]
  -[AVVCSessionManager setIAmTheAssistant:error:]
  -[AVVCSessionManager setPreferredSampleRate:error:]
  -[AVVCSessionManager sessionCurrentOutputRoutes]
  -[AVVCSessionManager sessionCurrentInputRoutes]
  -[AVVCSessionManager getSiriInputSource:withIdentifier:]
  -[AVVCSessionManager getOpaqueSessionID]
  -[AVVCSessionManager getActiveSessionDisplayIDsAsString]
  -[AVVCSessionManager setupSessionNotifications:]
  -[AVVCSessionManager setRecordingFromRemoteInput:error:]
  -[AVVCSessionManager inputNumberOfChannels]
  -[AVVCSessionManager setDuckToLevelDB:error:]
  -[AVVCSessionManager setDuckToLevelScalar:error:]
  -[AVVCSessionManager isSWVolumeSupportedOnPickedRoute]
  -[AVVCSessionManager clientRequestsRecording]
  -[AVVCSessionManager deviceGain]
  -[AVVCSessionManager forceGetSessionProperties]


AVMusicEvent : NSObject

AVMIDINoteEvent : AVMusicEvent
 @property  ^{MIDINoteMessage=CCCCf} message
 @property  unsigned int channel
 @property  unsigned int key
 @property  unsigned int velocity
 @property  double duration

  // instance methods
  -[AVMIDINoteEvent setVelocity:]
  -[AVMIDINoteEvent setDuration:]
  -[AVMIDINoteEvent setChannel:]
  -[AVMIDINoteEvent channel]
  -[AVMIDINoteEvent duration]
  -[AVMIDINoteEvent velocity]
  -[AVMIDINoteEvent initWithMessage:]
  -[AVMIDINoteEvent isEqualTo:]
  -[AVMIDINoteEvent key]
  -[AVMIDINoteEvent setKey:]
  -[AVMIDINoteEvent message]
  -[AVMIDINoteEvent initWithChannel:key:velocity:duration:]


AVMIDIChannelEvent : AVMusicEvent
 @property  ^{MIDIChannelMessage=CCCC} message
 @property  unsigned int channel

  // instance methods
  -[AVMIDIChannelEvent setChannel:]
  -[AVMIDIChannelEvent channel]
  -[AVMIDIChannelEvent initWithMessage:]
  -[AVMIDIChannelEvent isEqualTo:]
  -[AVMIDIChannelEvent message]
  -[AVMIDIChannelEvent initWithChannel:status:data1:data2:]
  -[AVMIDIChannelEvent data1]
  -[AVMIDIChannelEvent setData1:]
  -[AVMIDIChannelEvent data2]
  -[AVMIDIChannelEvent setData2:]


AVMIDIControlChangeEvent : AVMIDIChannelEvent
 @property  long long messageType
 @property  unsigned int value

  // instance methods
  -[AVMIDIControlChangeEvent initWithMessage:]
  -[AVMIDIControlChangeEvent value]
  -[AVMIDIControlChangeEvent messageType]
  -[AVMIDIControlChangeEvent initWithChannel:messageType:value:]


AVMIDIPolyPressureEvent : AVMIDIChannelEvent
 @property  unsigned int key
 @property  unsigned int pressure

  // instance methods
  -[AVMIDIPolyPressureEvent pressure]
  -[AVMIDIPolyPressureEvent setPressure:]
  -[AVMIDIPolyPressureEvent initWithMessage:]
  -[AVMIDIPolyPressureEvent key]
  -[AVMIDIPolyPressureEvent setKey:]
  -[AVMIDIPolyPressureEvent initWithChannel:key:pressure:]


AVMIDIProgramChangeEvent : AVMIDIChannelEvent
 @property  unsigned int programNumber

  // instance methods
  -[AVMIDIProgramChangeEvent initWithMessage:]
  -[AVMIDIProgramChangeEvent initWithChannel:programNumber:]
  -[AVMIDIProgramChangeEvent programNumber]
  -[AVMIDIProgramChangeEvent setProgramNumber:]


AVMIDIChannelPressureEvent : AVMIDIChannelEvent
 @property  unsigned int pressure

  // instance methods
  -[AVMIDIChannelPressureEvent pressure]
  -[AVMIDIChannelPressureEvent setPressure:]
  -[AVMIDIChannelPressureEvent initWithMessage:]
  -[AVMIDIChannelPressureEvent initWithChannel:pressure:]


AVMIDIPitchBendEvent : AVMIDIChannelEvent
 @property  unsigned int value

  // instance methods
  -[AVMIDIPitchBendEvent initWithMessage:]
  -[AVMIDIPitchBendEvent setValue:]
  -[AVMIDIPitchBendEvent value]
  -[AVMIDIPitchBendEvent initWithChannel:value:]


AVMIDISysexEvent : AVMusicEvent
 @property  ^{MIDIRawData=I[1C]} rawData
 @property  unsigned int sizeInBytes

  // instance methods
  -[AVMIDISysexEvent rawData]
  -[AVMIDISysexEvent sizeInBytes]
  -[AVMIDISysexEvent .cxx_destruct]
  -[AVMIDISysexEvent initWithData:]
  -[AVMIDISysexEvent initWithMIDIRawData:]


AVMIDIMetaEvent : AVMusicEvent
 @property  ^{MIDIMetaEvent=CCCCI[1C]} metaEvent
 @property  long long type

  // instance methods
  -[AVMIDIMetaEvent type]
  -[AVMIDIMetaEvent dealloc]
  -[AVMIDIMetaEvent initWithType:data:]
  -[AVMIDIMetaEvent initWithMetaEvent:]
  -[AVMIDIMetaEvent metaEvent]


AVMusicUserEvent : AVMusicEvent
 @property  ^{MusicEventUserData=I[1C]} userData
 @property  unsigned int sizeInBytes

  // instance methods
  -[AVMusicUserEvent userData]
  -[AVMusicUserEvent sizeInBytes]
  -[AVMusicUserEvent .cxx_destruct]
  -[AVMusicUserEvent initWithData:]
  -[AVMusicUserEvent initWithUserData:]


AVExtendedNoteOnEvent : AVMusicEvent
 @property  ^{ExtendedNoteOnEvent=IIf{MusicDeviceNoteParams=Iff[1{NoteParamsControlValue=If}]}} event
 @property  float midiNote
 @property  float velocity
 @property  unsigned int instrumentID
 @property  unsigned int groupID
 @property  double duration

  // instance methods
  -[AVExtendedNoteOnEvent setVelocity:]
  -[AVExtendedNoteOnEvent setGroupID:]
  -[AVExtendedNoteOnEvent setDuration:]
  -[AVExtendedNoteOnEvent groupID]
  -[AVExtendedNoteOnEvent dealloc]
  -[AVExtendedNoteOnEvent duration]
  -[AVExtendedNoteOnEvent velocity]
  -[AVExtendedNoteOnEvent event]
  -[AVExtendedNoteOnEvent initWithMIDINote:velocity:instrumentID:groupID:duration:]
  -[AVExtendedNoteOnEvent initWithMIDINote:velocity:groupID:duration:]
  -[AVExtendedNoteOnEvent midiNote]
  -[AVExtendedNoteOnEvent setMidiNote:]
  -[AVExtendedNoteOnEvent instrumentID]
  -[AVExtendedNoteOnEvent setInstrumentID:]
  -[AVExtendedNoteOnEvent initWithNoteOnEvent:]


AVParameterEvent : AVMusicEvent
 @property  ^{ParameterEvent=IIIf} event
 @property  unsigned int parameterID
 @property  unsigned int scope
 @property  unsigned int element
 @property  float value

  // instance methods
  -[AVParameterEvent element]
  -[AVParameterEvent setScope:]
  -[AVParameterEvent scope]
  -[AVParameterEvent setElement:]
  -[AVParameterEvent setValue:]
  -[AVParameterEvent value]
  -[AVParameterEvent event]
  -[AVParameterEvent initWithParameterID:scope:element:value:]
  -[AVParameterEvent parameterID]
  -[AVParameterEvent setParameterID:]
  -[AVParameterEvent initWithParameterEvent:]


AVAUPresetEvent : AVMusicEvent
 @property  ^{AUPresetEvent=II^v} event
 @property  unsigned int scope
 @property  unsigned int element
 @property  NSDictionary *presetDictionary

  // instance methods
  -[AVAUPresetEvent element]
  -[AVAUPresetEvent setScope:]
  -[AVAUPresetEvent scope]
  -[AVAUPresetEvent dealloc]
  -[AVAUPresetEvent setElement:]
  -[AVAUPresetEvent event]
  -[AVAUPresetEvent initWithScope:element:dictionary:]
  -[AVAUPresetEvent presetDictionary]
  -[AVAUPresetEvent initWithAUPresetEvent:]


AVExtendedTempoEvent : AVMusicEvent
 @property  double tempo

  // instance methods
  -[AVExtendedTempoEvent setTempo:]
  -[AVExtendedTempoEvent tempo]
  -[AVExtendedTempoEvent initWithTempo:]


AVAudioFile : NSObject
 @property  NSURL *url
 @property  AVAudioFormat *fileFormat
 @property  AVAudioFormat *processingFormat
 @property  long long length
 @property  long long framePosition

  // instance methods
  -[AVAudioFile writeFromBuffer:error:]
  -[AVAudioFile processingFormat]
  -[AVAudioFile dealloc]
  -[AVAudioFile fileFormat]
  -[AVAudioFile length]
  -[AVAudioFile url]
  -[AVAudioFile initForWriting:settings:error:]
  -[AVAudioFile initForReading:error:]
  -[AVAudioFile initForReading:commonFormat:interleaved:error:]
  -[AVAudioFile initForReadingFromExtAudioFile:error:]
  -[AVAudioFile initForReadingFromExtAudioFile:commonFormat:interleaved:error:]
  -[AVAudioFile initForWriting:settings:commonFormat:interleaved:error:]
  -[AVAudioFile initSecondaryReader:format:error:]
  -[AVAudioFile readIntoBuffer:error:]
  -[AVAudioFile readIntoBuffer:frameCount:error:]
  -[AVAudioFile framePosition]
  -[AVAudioFile setFramePosition:]


AVAudioNode : NSObject
 @property  ^v impl
 @property  AVAudioEngine *engine
 @property  unsigned long numberOfInputs
 @property  unsigned long numberOfOutputs
 @property  AVAudioTime *lastRenderTime
 @property  AUAudioUnit *AUAudioUnit
 @property  double latency
 @property  double outputPresentationLatency

  // instance methods
  -[AVAudioNode latency]
  -[AVAudioNode clock]
  -[AVAudioNode rate]
  -[AVAudioNode audioUnit]
  -[AVAudioNode setObstruction:]
  -[AVAudioNode impl]
  -[AVAudioNode setRate:]
  -[AVAudioNode engine]
  -[AVAudioNode reverbBlend]
  -[AVAudioNode dealloc]
  -[AVAudioNode reset]
  -[AVAudioNode setReverbBlend:]
  -[AVAudioNode setVolume:]
  -[AVAudioNode initWithImpl:]
  -[AVAudioNode renderingAlgorithm]
  -[AVAudioNode volume]
  -[AVAudioNode didAttachToEngine:]
  -[AVAudioNode setPointSourceInHeadMode:]
  -[AVAudioNode pointSourceInHeadMode]
  -[AVAudioNode setPosition:]
  -[AVAudioNode setRenderingAlgorithm:]
  -[AVAudioNode pan]
  -[AVAudioNode setOcclusion:]
  -[AVAudioNode setPan:]
  -[AVAudioNode obstruction]
  -[AVAudioNode occlusion]
  -[AVAudioNode setSourceMode:]
  -[AVAudioNode sourceMode]
  -[AVAudioNode init]
  -[AVAudioNode position]
  -[AVAudioNode destinationForMixer:bus:]
  -[AVAudioNode installTapOnBus:bufferSize:format:block:]
  -[AVAudioNode didDetachFromEngine:error:]
  -[AVAudioNode resetImpl:]
  -[AVAudioNode outputFormatForBus:]
  -[AVAudioNode setOutputFormat:forBus:]
  -[AVAudioNode inputFormatForBus:]
  -[AVAudioNode setInputFormat:forBus:]
  -[AVAudioNode nameForInputBus:]
  -[AVAudioNode nameForOutputBus:]
  -[AVAudioNode lastRenderTime]
  -[AVAudioNode outputPresentationLatency]
  -[AVAudioNode numberOfInputs]
  -[AVAudioNode numberOfOutputs]
  -[AVAudioNode setNumberOfInputs:]
  -[AVAudioNode setNumberOfOutputs:]
  -[AVAudioNode removeTapOnBus:]
  -[AVAudioNode AUAudioUnit]


AVAudioMixingDestination : NSObject <AVAudioMixing>
 @property  AVAudioConnectionPoint *connectionPoint
 @property  float volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVAudioMixingDestination rate]
  -[AVAudioMixingDestination implementation]
  -[AVAudioMixingDestination connectionPoint]
  -[AVAudioMixingDestination setObstruction:]
  -[AVAudioMixingDestination setRate:]
  -[AVAudioMixingDestination reverbBlend]
  -[AVAudioMixingDestination dealloc]
  -[AVAudioMixingDestination setReverbBlend:]
  -[AVAudioMixingDestination setVolume:]
  -[AVAudioMixingDestination initWithImpl:]
  -[AVAudioMixingDestination renderingAlgorithm]
  -[AVAudioMixingDestination volume]
  -[AVAudioMixingDestination setPointSourceInHeadMode:]
  -[AVAudioMixingDestination pointSourceInHeadMode]
  -[AVAudioMixingDestination setPosition:]
  -[AVAudioMixingDestination setRenderingAlgorithm:]
  -[AVAudioMixingDestination pan]
  -[AVAudioMixingDestination setOcclusion:]
  -[AVAudioMixingDestination setPan:]
  -[AVAudioMixingDestination obstruction]
  -[AVAudioMixingDestination occlusion]
  -[AVAudioMixingDestination setSourceMode:]
  -[AVAudioMixingDestination sourceMode]
  -[AVAudioMixingDestination init]
  -[AVAudioMixingDestination position]
  -[AVAudioMixingDestination destinationForMixer:bus:]


AVAudioUnitSampler : AVAudioUnitMIDIInstrument
 @property  float stereoPan
 @property  float overallGain
 @property  float masterGain
 @property  float globalTuning

  // instance methods
  -[AVAudioUnitSampler init]
  -[AVAudioUnitSampler initWithAudioComponentDescription:]
  -[AVAudioUnitSampler loadInstrumentAtURL:error:]
  -[AVAudioUnitSampler loadSoundBankInstrumentAtURL:program:bankMSB:bankLSB:error:]
  -[AVAudioUnitSampler loadAudioFilesAtURLs:error:]
  -[AVAudioUnitSampler stereoPan]
  -[AVAudioUnitSampler overallGain]
  -[AVAudioUnitSampler masterGain]
  -[AVAudioUnitSampler globalTuning]
  -[AVAudioUnitSampler setStereoPan:]
  -[AVAudioUnitSampler setOverallGain:]
  -[AVAudioUnitSampler setMasterGain:]
  -[AVAudioUnitSampler setGlobalTuning:]


AVVCPluginRemoteInputHost : NSObject <AVAudioRemoteInputPluginDelegate>
 @property  AVVoiceController *mMotherController

  // instance methods
  -[AVVCPluginRemoteInputHost dealloc]
  -[AVVCPluginRemoteInputHost .cxx_destruct]
  -[AVVCPluginRemoteInputHost init]
  -[AVVCPluginRemoteInputHost mockPluginEndpoint]
  -[AVVCPluginRemoteInputHost inputPlugin:didPublishDevice:]
  -[AVVCPluginRemoteInputHost inputPlugin:didUnpublishDevice:]
  -[AVVCPluginRemoteInputHost invalidatePlugins]
  -[AVVCPluginRemoteInputHost allBundles:]
  -[AVVCPluginRemoteInputHost findDeviceWithIdentifier:]
  -[AVVCPluginRemoteInputHost findFirstBluetoothDevice]
  -[AVVCPluginRemoteInputHost setParentVoiceController:]
  -[AVVCPluginRemoteInputHost mMotherController]
  -[AVVCPluginRemoteInputHost setMMotherController:]


AVAudioSequencer : NSObject
 @property  double currentPositionInSeconds
 @property  double currentPositionInBeats
 @property  BOOL playing
 @property  float rate
 @property  NSArray *tracks
 @property  AVMusicTrack *tempoTrack
 @property  NSDictionary *userInfo

  // instance methods
  -[AVAudioSequencer removeTrack:]
  -[AVAudioSequencer rate]
  -[AVAudioSequencer userInfo]
  -[AVAudioSequencer setRate:]
  -[AVAudioSequencer dealloc]
  -[AVAudioSequencer stop]
  -[AVAudioSequencer initWithImpl:]
  -[AVAudioSequencer isPlaying]
  -[AVAudioSequencer tracks]
  -[AVAudioSequencer startAndReturnError:]
  -[AVAudioSequencer init]
  -[AVAudioSequencer prepareToPlay]
  -[AVAudioSequencer currentPositionInSeconds]
  -[AVAudioSequencer setCurrentPositionInSeconds:]
  -[AVAudioSequencer currentPositionInBeats]
  -[AVAudioSequencer setCurrentPositionInBeats:]
  -[AVAudioSequencer hostTimeForBeats:error:]
  -[AVAudioSequencer beatsForHostTime:error:]
  -[AVAudioSequencer initWithAudioEngine:]
  -[AVAudioSequencer numberOfTracks]
  -[AVAudioSequencer cleanTracks]
  -[AVAudioSequencer setupTrackArray]
  -[AVAudioSequencer setupTracks]
  -[AVAudioSequencer loadFromURL:options:error:]
  -[AVAudioSequencer loadFromData:options:error:]
  -[AVAudioSequencer writeToURL:SMPTEResolution:replaceExisting:error:]
  -[AVAudioSequencer dataWithSMPTEResolution:error:]
  -[AVAudioSequencer createAndAppendTrack]
  -[AVAudioSequencer getTempoTrack]
  -[AVAudioSequencer secondsForBeats:]
  -[AVAudioSequencer beatsForSeconds:]
  -[AVAudioSequencer reverseEvents]
  -[AVAudioSequencer setUserCallback:]
  -[AVAudioSequencer setTrackArray:]
  -[AVAudioSequencer trackArray]
  -[AVAudioSequencer setTempoTrack:]
  -[AVAudioSequencer tempoTrack]


AVMusicTrack : NSObject
 @property  BOOL usesAutomatedParameters
 @property  AVAudioUnit *destinationAudioUnit
 @property  unsigned int destinationMIDIEndpoint
 @property  {_AVBeatRange=dd} loopRange
 @property  BOOL loopingEnabled
 @property  long long numberOfLoops
 @property  double offsetTime
 @property  BOOL muted
 @property  BOOL soloed
 @property  double lengthInBeats
 @property  double lengthInSeconds
 @property  unsigned long timeResolution

  // instance methods
  -[AVMusicTrack index]
  -[AVMusicTrack dealloc]
  -[AVMusicTrack isMuted]
  -[AVMusicTrack initWithImpl:]
  -[AVMusicTrack setMuted:]
  -[AVMusicTrack timeResolution]
  -[AVMusicTrack setLoopingEnabled:]
  -[AVMusicTrack loopRange]
  -[AVMusicTrack track]
  -[AVMusicTrack numberOfLoops]
  -[AVMusicTrack setNumberOfLoops:]
  -[AVMusicTrack setDestinationAudioUnit:]
  -[AVMusicTrack destinationAudioUnit]
  -[AVMusicTrack setDestinationMIDIEndpoint:]
  -[AVMusicTrack destinationMIDIEndpoint]
  -[AVMusicTrack setLoopRange:]
  -[AVMusicTrack isLoopingEnabled]
  -[AVMusicTrack offsetTime]
  -[AVMusicTrack setOffsetTime:]
  -[AVMusicTrack isSoloed]
  -[AVMusicTrack setSoloed:]
  -[AVMusicTrack usesAutomatedParameters]
  -[AVMusicTrack usesAutomatedParameters]
  -[AVMusicTrack setUsesAutomatedParameters:]
  -[AVMusicTrack setUsesAutomatedParameters:]
  -[AVMusicTrack lengthInBeats]
  -[AVMusicTrack setLengthInBeats:]
  -[AVMusicTrack lengthInSeconds]
  -[AVMusicTrack setLengthInSeconds:]
  -[AVMusicTrack doAddMIDINoteEvent:atBeat:]
  -[AVMusicTrack doAddMIDIChannelEvent:atBeat:]
  -[AVMusicTrack doAddMIDISysexEvent:atBeat:]
  -[AVMusicTrack doAddExtendedNoteOnEvent:atBeat:]
  -[AVMusicTrack doAddParameterEvent:atBeat:]
  -[AVMusicTrack doAddExtendedTempoEvent:atBeat:]
  -[AVMusicTrack doAddMIDIMetaEvent:atBeat:]
  -[AVMusicTrack doAddUserEvent:atBeat:]
  -[AVMusicTrack doAddAUPresetEvent:atBeat:]
  -[AVMusicTrack addEvent:atBeat:]
  -[AVMusicTrack moveEventsInRange:byAmount:]
  -[AVMusicTrack clearEventsInRange:]
  -[AVMusicTrack cutEventsInRange:]
  -[AVMusicTrack copyEventsInRange:fromTrack:insertAtBeat:]
  -[AVMusicTrack copyAndMergeEventsInRange:fromTrack:mergeAtBeat:]
  -[AVMusicTrack enumerateEventsInRange:usingBlock:]
  -[AVMusicTrack createEventIterator]


AVMusicTrackEventIterator : NSObject
  // instance methods
  -[AVMusicTrackEventIterator nextEvent]
  -[AVMusicTrackEventIterator setEventTime:]
  -[AVMusicTrackEventIterator initWithImpl:]
  -[AVMusicTrackEventIterator previousEvent]
  -[AVMusicTrackEventIterator seek:]
  -[AVMusicTrackEventIterator getEventInfo:outEventType:eventData:dataSize:]
  -[AVMusicTrackEventIterator setEventInfo:data:]
  -[AVMusicTrackEventIterator deleteEvent]
  -[AVMusicTrackEventIterator hasPreviousEvent]
  -[AVMusicTrackEventIterator hasNextEvent]
  -[AVMusicTrackEventIterator hasCurrentEvent]


AVAudioTime : NSObject
 @property  BOOL hostTimeValid
 @property  unsigned long hostTime
 @property  BOOL sampleTimeValid
 @property  long long sampleTime
 @property  double sampleRate
 @property  {AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II} audioTimeStamp

  // class methods
  +[AVAudioTime timeWithHostTime:]
  +[AVAudioTime hostTimeForSeconds:]
  +[AVAudioTime secondsForHostTime:]
  +[AVAudioTime timeWithSampleTime:atRate:]
  +[AVAudioTime timeWithHostTime:sampleTime:atRate:]
  +[AVAudioTime timeWithAudioTimeStamp:sampleRate:]

  // instance methods
  -[AVAudioTime initWithAudioTimeStamp:sampleRate:]
  -[AVAudioTime extrapolateTimeFromAnchor:]
  -[AVAudioTime initWithHostTime:sampleTime:atRate:]
  -[AVAudioTime sampleTime]
  -[AVAudioTime initWithHostTime:]
  -[AVAudioTime isHostTimeValid]
  -[AVAudioTime sampleRate]
  -[AVAudioTime initWithSampleTime:atRate:]
  -[AVAudioTime audioTimeStamp]
  -[AVAudioTime isSampleTimeValid]
  -[AVAudioTime hostTime]
  -[AVAudioTime init]


AVAudioUnitDSPGraph : AVAudioUnit
 @property  NSURL *dspGraphURL
 @property  NSURL *auProcessingStripURL

  // instance methods
  -[AVAudioUnitDSPGraph init]
  -[AVAudioUnitDSPGraph loadAudioDSPManager]
  -[AVAudioUnitDSPGraph loadDSPGraphAtURL:error:]
  -[AVAudioUnitDSPGraph loadAudioUnitProcessingStripAtURL:error:]
  -[AVAudioUnitDSPGraph dspGraphURL]
  -[AVAudioUnitDSPGraph auProcessingStripURL]


AVAudioUnitEffect : AVAudioUnit
 @property  BOOL bypass

  // instance methods
  -[AVAudioUnitEffect setBypass:]
  -[AVAudioUnitEffect initWithAudioComponentDescription:]
  -[AVAudioUnitEffect bypass]


AVAudioPlayerNode : AVAudioNode <AVAudioMixing>
 @property  BOOL playing
 @property  float volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVAudioPlayerNode pause]
  -[AVAudioPlayerNode stop]
  -[AVAudioPlayerNode didAttachToEngine:]
  -[AVAudioPlayerNode isPlaying]
  -[AVAudioPlayerNode play]
  -[AVAudioPlayerNode init]
  -[AVAudioPlayerNode scheduleBuffer:completionHandler:]
  -[AVAudioPlayerNode scheduleBuffer:atTime:options:completionHandler:]
  -[AVAudioPlayerNode playAtTime:]
  -[AVAudioPlayerNode scheduleFile:atTime:completionHandler:]
  -[AVAudioPlayerNode callLegacyCompletionHandlerForType:legacyHandler:]
  -[AVAudioPlayerNode scheduleBuffer:completionCallbackType:completionHandler:]
  -[AVAudioPlayerNode scheduleBuffer:atTime:options:completionCallbackType:completionHandler:]
  -[AVAudioPlayerNode scheduleFile:atTime:completionCallbackType:completionHandler:]
  -[AVAudioPlayerNode scheduleSegment:startingFrame:frameCount:atTime:completionHandler:]
  -[AVAudioPlayerNode scheduleSegment:startingFrame:frameCount:atTime:completionCallbackType:completionHandler:]
  -[AVAudioPlayerNode prepareWithFrameCount:]
  -[AVAudioPlayerNode nodeTimeForPlayerTime:]
  -[AVAudioPlayerNode playerTimeForNodeTime:]


AVVoiceTriggerNotificationForwarder : NSObject <VoiceTriggerNotificationInterface>
 @property  <VoiceTriggerNotificationInterface> *target

  // instance methods
  -[AVVoiceTriggerNotificationForwarder speakerStateChangedNotification:]
  -[AVVoiceTriggerNotificationForwarder setTarget:]
  -[AVVoiceTriggerNotificationForwarder target]
  -[AVVoiceTriggerNotificationForwarder .cxx_destruct]
  -[AVVoiceTriggerNotificationForwarder siriClientRecordStateChangedNotification:recordingCount:]
  -[AVVoiceTriggerNotificationForwarder voiceTriggerNotification:]
  -[AVVoiceTriggerNotificationForwarder speakerMuteStateChangedNotification:]


AVVoiceTriggerClient : NSObject <VoiceTriggerNotificationInterface>
 @property  NSXPCConnection *voiceTriggerServerConnection
 @property  int audioSeverUpNotificationToken
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  @? voiceTriggerBlock
 @property  @? speakerStateChangedBlock
 @property  @? speakerMuteStateChangedBlock
 @property  @? siriClientRecordStateChangedBlock
 @property  @? serverCrashedBlock
 @property  @? serverResetBlock
 @property  unsigned long voiceTriggerPastDataFramesAvailable

  // class methods
  +[AVVoiceTriggerClient supportsDuckingOnSpeakerOutput]
  +[AVVoiceTriggerClient isAPIAvailable]

  // instance methods
  -[AVVoiceTriggerClient serverCrashedBlock]
  -[AVVoiceTriggerClient setAudioSeverUpNotificationToken:]
  -[AVVoiceTriggerClient enableVoiceTriggerListening:]
  -[AVVoiceTriggerClient serverResetBlock]
  -[AVVoiceTriggerClient audioSeverUpNotificationToken]
  -[AVVoiceTriggerClient speakerStateChangedNotification:]
  -[AVVoiceTriggerClient speakerStateActiveCompletionBlock:]
  -[AVVoiceTriggerClient speakerStateChangedBlock]
  -[AVVoiceTriggerClient voiceTriggerBlock]
  -[AVVoiceTriggerClient workQueue]
  -[AVVoiceTriggerClient setServerResetBlock:]
  -[AVVoiceTriggerClient callServerCrashedBlock]
  -[AVVoiceTriggerClient setWorkQueue:]
  -[AVVoiceTriggerClient closeServerConnection]
  -[AVVoiceTriggerClient speakerStateMutedCompletionBlock:]
  -[AVVoiceTriggerClient dealloc]
  -[AVVoiceTriggerClient enableVoiceTriggerListening:completionBlock:]
  -[AVVoiceTriggerClient setSiriClientRecordStateChangedBlock:]
  -[AVVoiceTriggerClient callServerResetBlock]
  -[AVVoiceTriggerClient speakerStateActive]
  -[AVVoiceTriggerClient .cxx_destruct]
  -[AVVoiceTriggerClient updateVoiceTriggerConfiguration:]
  -[AVVoiceTriggerClient setServerCrashedBlock:]
  -[AVVoiceTriggerClient speakerMuteStateChangedBlock]
  -[AVVoiceTriggerClient listeningEnabledCompletionBlock:]
  -[AVVoiceTriggerClient setVoiceTriggerServerConnection:]
  -[AVVoiceTriggerClient removeAudioServerUpNotificationHandler]
  -[AVVoiceTriggerClient voiceTriggerPastDataFramesAvailableCompletion:]
  -[AVVoiceTriggerClient enableSpeakerStateListening:]
  -[AVVoiceTriggerClient voiceTriggerServerConnection]
  -[AVVoiceTriggerClient setSpeakerMuteStateChangedBlock:]
  -[AVVoiceTriggerClient voiceTriggerPastDataFramesAvailable]
  -[AVVoiceTriggerClient siriClientRecordStateChangedBlock]
  -[AVVoiceTriggerClient handleMediaServerReset:]
  -[AVVoiceTriggerClient speakerStateMuted]
  -[AVVoiceTriggerClient updateVoiceTriggerConfiguration:completionBlock:]
  -[AVVoiceTriggerClient enableBargeInMode:completionBlock:]
  -[AVVoiceTriggerClient enableSpeakerStateListening:completionBlock:]
  -[AVVoiceTriggerClient getInputChannelInfoCompletion:]
  -[AVVoiceTriggerClient setAudioServerUpNotificationHandler]
  -[AVVoiceTriggerClient setAggressiveECMode:completionBlock:]
  -[AVVoiceTriggerClient handleMediaServerDeath:]
  -[AVVoiceTriggerClient siriClientsRecordingCompletionBlock:]
  -[AVVoiceTriggerClient siriClientRecordStateChangedNotification:recordingCount:]
  -[AVVoiceTriggerClient setVoiceTriggerBlock:]
  -[AVVoiceTriggerClient setSpeakerStateChangedBlock:]
  -[AVVoiceTriggerClient setListeningProperty:completionBlock:]
  -[AVVoiceTriggerClient init]
  -[AVVoiceTriggerClient voiceTriggerNotification:]
  -[AVVoiceTriggerClient speakerMuteStateChangedNotification:]


AVAudioUnit : AVAudioNode
 @property  {AudioComponentDescription=IIIII} audioComponentDescription
 @property  ^{OpaqueAudioComponentInstance=} audioUnit
 @property  AUAudioUnit *AUAudioUnit
 @property  NSString *name
 @property  NSString *manufacturerName
 @property  unsigned long version

  // class methods
  +[AVAudioUnit instantiateWithComponentDescription:options:completionHandler:]

  // instance methods
  -[AVAudioUnit manufacturerName]
  -[AVAudioUnit audioComponentDescription]
  -[AVAudioUnit audioUnit]
  -[AVAudioUnit version]
  -[AVAudioUnit name]
  -[AVAudioUnit initWithAudioComponentDescription:]
  -[AVAudioUnit loadAudioUnitPresetAtURL:error:]
  -[AVAudioUnit setValue:forParam:]
  -[AVAudioUnit valueForParam:]


AVAudioEngine : NSObject
 @property  ^{OpaqueMusicSequence=} musicSequence
 @property  AVAudioOutputNode *outputNode
 @property  AVAudioInputNode *inputNode
 @property  AVAudioMixerNode *mainMixerNode
 @property  BOOL running
 @property  BOOL autoShutdownEnabled
 @property  NSSet *attachedNodes
 @property  @? manualRenderingBlock
 @property  BOOL isInManualRenderingMode
 @property  long long manualRenderingMode
 @property  AVAudioFormat *manualRenderingFormat
 @property  unsigned int manualRenderingMaximumFrameCount
 @property  long long manualRenderingSampleTime

  // instance methods
  -[AVAudioEngine manualRenderingFormat]
  -[AVAudioEngine inputNode]
  -[AVAudioEngine disconnectNodeInput:]
  -[AVAudioEngine disconnectNodeInput:bus:]
  -[AVAudioEngine connectMIDI:to:format:block:]
  -[AVAudioEngine enableManualRenderingMode:format:maximumFrameCount:error:]
  -[AVAudioEngine manualRenderingSampleTime]
  -[AVAudioEngine implementation]
  -[AVAudioEngine disconnectMIDI:fromNodes:]
  -[AVAudioEngine detachNode:]
  -[AVAudioEngine disconnectMIDIInput:]
  -[AVAudioEngine pause]
  -[AVAudioEngine disconnectNodeOutput:bus:]
  -[AVAudioEngine dealloc]
  -[AVAudioEngine attachedNodes]
  -[AVAudioEngine reset]
  -[AVAudioEngine isRunning]
  -[AVAudioEngine musicSequence]
  -[AVAudioEngine connectMIDI:toNodes:format:eventListBlock:]
  -[AVAudioEngine attachNode:]
  -[AVAudioEngine disconnectNodeOutput:]
  -[AVAudioEngine stop]
  -[AVAudioEngine outputConnectionPointsForNode:outputBus:]
  -[AVAudioEngine disconnectMIDI:from:]
  -[AVAudioEngine connect:to:format:]
  -[AVAudioEngine renderOffline:toBuffer:error:]
  -[AVAudioEngine setMusicSequence:]
  -[AVAudioEngine setAutoShutdownEnabled:]
  -[AVAudioEngine prepare]
  -[AVAudioEngine disconnectMIDIOutput:]
  -[AVAudioEngine manualRenderingBlock]
  -[AVAudioEngine connect:toConnectionPoints:fromBus:format:]
  -[AVAudioEngine manualRenderingMaximumFrameCount]
  -[AVAudioEngine startAndReturnError:]
  -[AVAudioEngine mainMixerNode]
  -[AVAudioEngine inputConnectionPointForNode:inputBus:]
  -[AVAudioEngine outputNode]
  -[AVAudioEngine disableManualRenderingMode]
  -[AVAudioEngine isAutoShutdownEnabled]
  -[AVAudioEngine connectMIDI:to:format:eventListBlock:]
  -[AVAudioEngine connectMIDI:toNodes:format:block:]
  -[AVAudioEngine init]
  -[AVAudioEngine manualRenderingMode]
  -[AVAudioEngine connect:to:fromBus:toBus:format:]
  -[AVAudioEngine isInManualRenderingMode]


01 00 0300 /System/Library/PrivateFrameworks/AudioToolboxCore.framework/AudioToolboxCore: AUAudioUnit 
01 00 0640 /System/Library/PrivateFrameworks/AudioSession.framework/AudioSession: AVAudioSession 
01 00 0640 /System/Library/PrivateFrameworks/AudioSession.framework/AudioSession: AVAudioSessionChannelDescription 
01 00 0640 /System/Library/PrivateFrameworks/AudioSession.framework/AudioSession: AVAudioSessionDataSourceDescription 
01 00 0640 /System/Library/PrivateFrameworks/AudioSession.framework/AudioSession: AVAudioSessionPortDescription 
01 00 0640 /System/Library/PrivateFrameworks/AudioSession.framework/AudioSession: AVAudioSessionRouteDescription 
01 00 0840 /System/Library/PrivateFrameworks/Celestial.framework/Celestial: AVSystemController 
01 00 0700 /usr/lib/libAudioStatistics.dylib: CAReporter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0f00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
