|| __DATA.__objc_data _OBJC_CLASS_$_AVHapticEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AVHapticParameterCurveValue
|| __DATA.__objc_data _OBJC_CLASS_$_AVHapticPlayerChannel
|| __DATA.__objc_data _OBJC_CLASS_$_AVHapticPlayerParameterCurve
|| __DATA.__objc_data _OBJC_CLASS_$_AVHapticPlayerParameterCurveControlPoint
|| __DATA.__objc_data _OBJC_CLASS_$_AVHapticSequence
|| __DATA.__objc_data _OBJC_METACLASS_$_AVHapticParameterCurveValue
|| __DATA.__objc_data _OBJC_METACLASS_$_AVHapticPlayerChannel
|| __DATA.__objc_data _OBJC_METACLASS_$_AVHapticPlayerParameterCurve
|| __DATA.__objc_data _OBJC_METACLASS_$_AVHapticPlayerParameterCurveControlPoint
|| __DATA.__objc_data _OBJC_METACLASS_$_AVHapticSequence
|| __DATA_CONST.__const __ZTV14AQIONodeClient
|| __DATA_CONST.__const _kAudioServicesCreateSystemSoundIDOptionAudioFileURLKey
|| __DATA_CONST.__const _kAudioServicesCreateSystemSoundIDOptionLongFormMediaKey
|| __DATA_CONST.__const _kAudioServicesCreateSystemSoundIDOptionVibrationPatternKey
|| __DATA_CONST.__const _kAudioServicesPlaySystemSoundOptionBehaviorKey
|| __DATA_CONST.__const _kAudioServicesPlaySystemSoundOptionFlagsKey
|| __DATA_CONST.__const _kAudioServicesPlaySystemSoundOptionIgnoreRingerSwitchKey
|| __DATA_CONST.__const _kAudioServicesPlaySystemSoundOptionLoopKey
|| __DATA_CONST.__const _kAudioServicesPlaySystemSoundOptionLoopPeriodKey
|| __DATA_CONST.__const _kAudioServicesPlaySystemSoundOptionPanKey
|| __DATA_CONST.__const _kAudioServicesPlaySystemSoundOptionVibrationPatternKey
|| __DATA_CONST.__const _kAudioServicesPlaySystemSoundOptionVolumeKey
|| __DATA_CONST.__const _kAudioSessionInputRoute_BluetoothHFP
|| __DATA_CONST.__const _kAudioSessionInputRoute_BuiltInMic
|| __DATA_CONST.__const _kAudioSessionInputRoute_CarAudio
|| __DATA_CONST.__const _kAudioSessionInputRoute_HeadsetMic
|| __DATA_CONST.__const _kAudioSessionInputRoute_LineIn
|| __DATA_CONST.__const _kAudioSessionInputRoute_USBAudio
|| __DATA_CONST.__const _kAudioSessionOutputRoute_AirPlay
|| __DATA_CONST.__const _kAudioSessionOutputRoute_BluetoothA2DP
|| __DATA_CONST.__const _kAudioSessionOutputRoute_BluetoothHFP
|| __DATA_CONST.__const _kAudioSessionOutputRoute_BuiltInReceiver
|| __DATA_CONST.__const _kAudioSessionOutputRoute_BuiltInSpeaker
|| __DATA_CONST.__const _kAudioSessionOutputRoute_CarAudio
|| __DATA_CONST.__const _kAudioSessionOutputRoute_HDMI
|| __DATA_CONST.__const _kAudioSessionOutputRoute_Headphones
|| __DATA_CONST.__const _kAudioSessionOutputRoute_LineOut
|| __DATA_CONST.__const _kAudioSessionOutputRoute_USBAudio
|| __DATA_CONST.__const _kAudioSession_AudioRouteChangeKey_CurrentRouteDescription
|| __DATA_CONST.__const _kAudioSession_AudioRouteChangeKey_PreviousRouteDescription
|| __DATA_CONST.__const _kAudioSession_AudioRouteKey_ChannelDescriptions
|| __DATA_CONST.__const _kAudioSession_AudioRouteKey_Inputs
|| __DATA_CONST.__const _kAudioSession_AudioRouteKey_Name
|| __DATA_CONST.__const _kAudioSession_AudioRouteKey_Outputs
|| __DATA_CONST.__const _kAudioSession_AudioRouteKey_Type
|| __DATA_CONST.__const _kAudioSession_AudioRouteKey_UID
|| __DATA_CONST.__const _kAudioSession_ChannelDescriptionKey_ID
|| __DATA_CONST.__const _kAudioSession_ChannelDescriptionKey_Label
|| __DATA_CONST.__const _kAudioSession_ChannelDescriptionKey_Name
|| __DATA_CONST.__const _kAudioSession_DataSourceDescriptionKey_AvailableMicrophonePolarPatterns
|| __DATA_CONST.__const _kAudioSession_DataSourceDescriptionKey_ID
|| __DATA_CONST.__const _kAudioSession_DataSourceDescriptionKey_MicrophoneOrientation
|| __DATA_CONST.__const _kAudioSession_DataSourceDescriptionKey_MicrophoneRegion
|| __DATA_CONST.__const _kAudioSession_DataSourceDescriptionKey_Name
|| __DATA_CONST.__const _kAudioSession_DataSourceDescriptionKey_SelectedMicrophonePolarPattern
|| __DATA_CONST.__const _kAudioSession_InputSourceKey_Description
|| __DATA_CONST.__const _kAudioSession_InputSourceKey_ID
|| __DATA_CONST.__const _kAudioSession_InterruptionInfoKey_InterruptorName
|| __DATA_CONST.__const _kAudioSession_InterruptionInfoKey_State
|| __DATA_CONST.__const _kAudioSession_InterruptionInfoKey_Type
|| __DATA_CONST.__const _kAudioSession_InterruptionInfoKey_WasSuspended
|| __DATA_CONST.__const _kAudioSession_OutputDestinationKey_Description
|| __DATA_CONST.__const _kAudioSession_OutputDestinationKey_ID
|| __DATA_CONST.__const _kAudioSession_RouteAttributesKey_ID
|| __DATA_CONST.__const _kAudioSession_RouteAttributesKey_Sources
|| __DATA_CONST.__const _kAudioSession_RouteAttributesKey_Type
|| __DATA_CONST.__const _kAudioSession_RouteChangeKey_Reason
|| __DATA_CONST.__const _kAudioSession_RouteGroupDescriptionKey_ID
|| __DATA_CONST.__const _kAudioSession_RouteGroupDescriptionKey_Routes
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVHapticPlayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVHapticEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVHapticPlayer
|| __TEXT.__text _AQIONodeManager_FindAQIONode
|| __TEXT.__text _AQIONodeManager_ReleaseAQIONode
|| __TEXT.__text _AQMEGetDeviceStreamFormats
|| __TEXT.__text _AQMESetDeviceStreamFormat
|| __TEXT.__text _AQOfflineMixerConnectAudioQueue
|| __TEXT.__text _AQOfflineMixerDisconnectAudioQueue
|| __TEXT.__text _AQOfflineMixerDispose
|| __TEXT.__text _AQOfflineMixerGetProperty
|| __TEXT.__text _AQOfflineMixerGetPropertySize
|| __TEXT.__text _AQOfflineMixerNew
|| __TEXT.__text _AQOfflineMixerRender
|| __TEXT.__text _AQOfflineMixerReset
|| __TEXT.__text _AQOfflineMixerSetProperty
|| __TEXT.__text _AUGraphAddNode
|| __TEXT.__text _AUGraphAddRenderNotify
|| __TEXT.__text _AUGraphClearConnections
|| __TEXT.__text _AUGraphClose
|| __TEXT.__text _AUGraphConnectNodeInput
|| __TEXT.__text _AUGraphCountNodeInteractions
|| __TEXT.__text _AUGraphDisconnectNodeInput
|| __TEXT.__text _AUGraphGetCPULoad
|| __TEXT.__text _AUGraphGetIndNode
|| __TEXT.__text _AUGraphGetInteractionInfo
|| __TEXT.__text _AUGraphGetMaxCPULoad
|| __TEXT.__text _AUGraphGetNodeCount
|| __TEXT.__text _AUGraphGetNodeInteractions
|| __TEXT.__text _AUGraphGetNumberOfInteractions
|| __TEXT.__text _AUGraphInitialize
|| __TEXT.__text _AUGraphIsInitialized
|| __TEXT.__text _AUGraphIsOpen
|| __TEXT.__text _AUGraphIsRunning
|| __TEXT.__text _AUGraphNodeInfo
|| __TEXT.__text _AUGraphOpen
|| __TEXT.__text _AUGraphRemoveNode
|| __TEXT.__text _AUGraphRemoveRenderNotify
|| __TEXT.__text _AUGraphSetNodeInputCallback
|| __TEXT.__text _AUGraphStart
|| __TEXT.__text _AUGraphStop
|| __TEXT.__text _AUGraphUninitialize
|| __TEXT.__text _AUGraphUpdate
|| __TEXT.__text _AudioGetSessionSpatializationCapabilities
|| __TEXT.__text _AudioGetSimulatorDeviceUID
|| __TEXT.__text _AudioQueueAddPropertyListener
|| __TEXT.__text _AudioQueueAllocateBuffer
|| __TEXT.__text _AudioQueueAllocateBufferWithMemory
|| __TEXT.__text _AudioQueueAllocateBufferWithPacketDescriptions
|| __TEXT.__text _AudioQueueAllocateBufferWithPacketDescriptionsWithMemory
|| __TEXT.__text _AudioQueueConvertToScaledSampleTime
|| __TEXT.__text _AudioQueueConvertToUnscaledSampleTime
|| __TEXT.__text _AudioQueueCreateTimeline
|| __TEXT.__text _AudioQueueDeviceGetCurrentTime
|| __TEXT.__text _AudioQueueDeviceGetNearestStartTime
|| __TEXT.__text _AudioQueueDeviceTranslateTime
|| __TEXT.__text _AudioQueueDispose
|| __TEXT.__text _AudioQueueDisposeTimeline
|| __TEXT.__text _AudioQueueEnqueueBuffer
|| __TEXT.__text _AudioQueueEnqueueBufferWithParameters
|| __TEXT.__text _AudioQueueEnqueueSilence
|| __TEXT.__text _AudioQueueFlush
|| __TEXT.__text _AudioQueueFreeBuffer
|| __TEXT.__text _AudioQueueGetCurrentTime
|| __TEXT.__text _AudioQueueGetParameter
|| __TEXT.__text _AudioQueueGetProperty
|| __TEXT.__text _AudioQueueGetPropertySize
|| __TEXT.__text _AudioQueueNewInput
|| __TEXT.__text _AudioQueueNewInputWithAudioSession
|| __TEXT.__text _AudioQueueNewInputWithDispatchQueue
|| __TEXT.__text _AudioQueueNewOutput
|| __TEXT.__text _AudioQueueNewOutputWithAudioSession
|| __TEXT.__text _AudioQueueNewOutputWithDispatchQueue
|| __TEXT.__text _AudioQueueOfflineRender
|| __TEXT.__text _AudioQueuePause
|| __TEXT.__text _AudioQueuePrime
|| __TEXT.__text _AudioQueueProcessingTapDispose
|| __TEXT.__text _AudioQueueProcessingTapGetQueueTime
|| __TEXT.__text _AudioQueueProcessingTapGetQueueTime_CM
|| __TEXT.__text _AudioQueueProcessingTapGetQueueTime_CM2
|| __TEXT.__text _AudioQueueProcessingTapGetSourceAudio
|| __TEXT.__text _AudioQueueProcessingTapNew
|| __TEXT.__text _AudioQueueProcessingTapNew_CMClient
|| __TEXT.__text _AudioQueueProcessingTapNew_CMServer
|| __TEXT.__text _AudioQueueRemovePropertyListener
|| __TEXT.__text _AudioQueueRequestDisposalNotification
|| __TEXT.__text _AudioQueueReset
|| __TEXT.__text _AudioQueueScheduleParameters
|| __TEXT.__text _AudioQueueSetOfflineRenderFormat
|| __TEXT.__text _AudioQueueSetParameter
|| __TEXT.__text _AudioQueueSetProperty
|| __TEXT.__text _AudioQueueStart
|| __TEXT.__text _AudioQueueStop
|| __TEXT.__text _AudioServicesAddSystemSoundCompletion
|| __TEXT.__text _AudioServicesCreateSystemSoundID
|| __TEXT.__text _AudioServicesCreateSystemSoundIDWithOptions
|| __TEXT.__text _AudioServicesCreateSystemSoundIDWithPath
|| __TEXT.__text _AudioServicesCreateSystemSoundIDsFromID
|| __TEXT.__text _AudioServicesDisposeSystemSoundID
|| __TEXT.__text _AudioServicesGetProperty
|| __TEXT.__text _AudioServicesGetPropertyInfo
|| __TEXT.__text _AudioServicesPlayAlertSound
|| __TEXT.__text _AudioServicesPlayAlertSoundWithCompletion
|| __TEXT.__text _AudioServicesPlaySoundWithBehavior
|| __TEXT.__text _AudioServicesPlaySystemSound
|| __TEXT.__text _AudioServicesPlaySystemSoundWithCompletion
|| __TEXT.__text _AudioServicesPlaySystemSoundWithOptions
|| __TEXT.__text _AudioServicesPlaySystemSoundWithVibration
|| __TEXT.__text _AudioServicesPlaySystemSoundWithVibrationAndFlags
|| __TEXT.__text _AudioServicesRemoveSystemSoundCompletion
|| __TEXT.__text _AudioServicesSetProperty
|| __TEXT.__text _AudioServicesStartSystemSound
|| __TEXT.__text _AudioServicesStartSystemSoundWithVibration
|| __TEXT.__text _AudioServicesStartSystemSoundWithVibrationAndFlags
|| __TEXT.__text _AudioServicesStopSystemSound
|| __TEXT.__text _AudioSessionAddInterruptionListenerOnPrimarySession
|| __TEXT.__text _AudioSessionAddPropertyListener
|| __TEXT.__text _AudioSessionAddPropertyListener_Priv
|| __TEXT.__text _AudioSessionCheckActive
|| __TEXT.__text _AudioSessionCopyCMSessionForSessionID
|| __TEXT.__text _AudioSessionCopyProperty_Priv
|| __TEXT.__text _AudioSessionCreateCMSession
|| __TEXT.__text _AudioSessionCreateForID
|| __TEXT.__text _AudioSessionCreateForPID
|| __TEXT.__text _AudioSessionCreatePrimarySession_Priv
|| __TEXT.__text _AudioSessionCreateSession_Priv
|| __TEXT.__text _AudioSessionDeactivateAndSetPriority_Priv
|| __TEXT.__text _AudioSessionDestroyCMSession
|| __TEXT.__text _AudioSessionDestroySession_Priv
|| __TEXT.__text _AudioSessionGetCMSessionForPID
|| __TEXT.__text _AudioSessionGetPrimarySessionIDForPID
|| __TEXT.__text _AudioSessionGetProperty
|| __TEXT.__text _AudioSessionGetPropertySize
|| __TEXT.__text _AudioSessionGetServerProperty
|| __TEXT.__text _AudioSessionInitialize
|| __TEXT.__text _AudioSessionRemovePropertyListener
|| __TEXT.__text _AudioSessionRemovePropertyListenerWithUserData
|| __TEXT.__text _AudioSessionRemovePropertyListener_Priv
|| __TEXT.__text _AudioSessionRequestRecordPermission
|| __TEXT.__text _AudioSessionSetActive
|| __TEXT.__text _AudioSessionSetActiveWithFlags
|| __TEXT.__text _AudioSessionSetActive_Priv
|| __TEXT.__text _AudioSessionSetCMProperty
|| __TEXT.__text _AudioSessionSetInterruptionListener_Priv
|| __TEXT.__text _AudioSessionSetProperty
|| __TEXT.__text _AudioSessionSetProperty_Priv
|| __TEXT.__text _AudioSessionSetServerProperty
|| __TEXT.__text _AudioSessionSilenceOutput
|| __TEXT.__text _AudioSessionSilenceOutput2
|| __TEXT.__text _AudioSessionSilenceOutputWithFlags
|| __TEXT.__text _AudioToolboxServerAccessTelephonyMutes
|| __TEXT.__text _AudioToolboxServerInit
|| __TEXT.__text _AudioToolboxSetOrientationDetectorCallback
|| __TEXT.__text _CACentralLog
|| __TEXT.__text _CACentralLogString
|| __TEXT.__text _CACentralLog_VA
|| __TEXT.__text _CAGetDeviceOrientation
|| __TEXT.__text _CAGetUIOrientation
|| __TEXT.__text _CARegisterDeviceOrientation
|| __TEXT.__text _CARegisterUIOrientation
|| __TEXT.__text _CAUnregisterDeviceOrientation
|| __TEXT.__text _CAUnregisterUIOrientation
|| __TEXT.__text _CFStringCreateWithCAOrientation
|| __TEXT.__text _CopyInstrumentInfoFromSoundBank
|| __TEXT.__text _CopyNameFromSoundBank
|| __TEXT.__text _DisposeAUGraph
|| __TEXT.__text _DisposeMusicEventIterator
|| __TEXT.__text _DisposeMusicPlayer
|| __TEXT.__text _DisposeMusicSequence
|| __TEXT.__text _HapticServerManager_VibeEngineCancelWithOptions
|| __TEXT.__text _HapticServerManager_VibeEngineInitialize
|| __TEXT.__text _HapticServerManager_VibeEnginePlay
|| __TEXT.__text _HapticServerManager_VibeEngineStartPrewarm
|| __TEXT.__text _HapticServerManager_VibeEngineStopPrewarm
|| __TEXT.__text _MZAudioSessionCanActivate
|| __TEXT.__text _MZSessionManagerInit
|| __TEXT.__text _MusicEventIteratorDeleteEvent
|| __TEXT.__text _MusicEventIteratorGetEventInfo
|| __TEXT.__text _MusicEventIteratorHasCurrentEvent
|| __TEXT.__text _MusicEventIteratorHasNextEvent
|| __TEXT.__text _MusicEventIteratorHasPreviousEvent
|| __TEXT.__text _MusicEventIteratorNextEvent
|| __TEXT.__text _MusicEventIteratorPreviousEvent
|| __TEXT.__text _MusicEventIteratorSeek
|| __TEXT.__text _MusicEventIteratorSetEventInfo
|| __TEXT.__text _MusicEventIteratorSetEventTime
|| __TEXT.__text _MusicPlayerGetBeatsForHostTime
|| __TEXT.__text _MusicPlayerGetHostTimeForBeats
|| __TEXT.__text _MusicPlayerGetPlayRateScalar
|| __TEXT.__text _MusicPlayerGetSequence
|| __TEXT.__text _MusicPlayerGetTime
|| __TEXT.__text _MusicPlayerIsPlaying
|| __TEXT.__text _MusicPlayerPreroll
|| __TEXT.__text _MusicPlayerSetPlayRateScalar
|| __TEXT.__text _MusicPlayerSetSequence
|| __TEXT.__text _MusicPlayerSetTime
|| __TEXT.__text _MusicPlayerSetUseSkipGuard
|| __TEXT.__text _MusicPlayerStart
|| __TEXT.__text _MusicPlayerStop
|| __TEXT.__text _MusicSequenceBarBeatTimeToBeats
|| __TEXT.__text _MusicSequenceBeatsToBarBeatTime
|| __TEXT.__text _MusicSequenceDisposeTrack
|| __TEXT.__text _MusicSequenceFileCreate
|| __TEXT.__text _MusicSequenceFileCreateData
|| __TEXT.__text _MusicSequenceFileLoad
|| __TEXT.__text _MusicSequenceFileLoadData
|| __TEXT.__text _MusicSequenceGetAUGraph
|| __TEXT.__text _MusicSequenceGetBeatsForSeconds
|| __TEXT.__text _MusicSequenceGetIndTrack
|| __TEXT.__text _MusicSequenceGetInfoDictionary
|| __TEXT.__text _MusicSequenceGetMaxTrackLength
|| __TEXT.__text _MusicSequenceGetSecondsForBeats
|| __TEXT.__text _MusicSequenceGetSequenceType
|| __TEXT.__text _MusicSequenceGetTempoTrack
|| __TEXT.__text _MusicSequenceGetTrackCount
|| __TEXT.__text _MusicSequenceGetTrackIndex
|| __TEXT.__text _MusicSequenceNewTrack
|| __TEXT.__text _MusicSequenceReverse
|| __TEXT.__text _MusicSequenceSetAUGraph
|| __TEXT.__text _MusicSequenceSetAudioGraph
|| __TEXT.__text _MusicSequenceSetMIDIEndpoint
|| __TEXT.__text _MusicSequenceSetSequenceType
|| __TEXT.__text _MusicSequenceSetUserCallback
|| __TEXT.__text _MusicTrackClear
|| __TEXT.__text _MusicTrackCopyInsert
|| __TEXT.__text _MusicTrackCut
|| __TEXT.__text _MusicTrackGetDestMIDIEndpoint
|| __TEXT.__text _MusicTrackGetDestNode
|| __TEXT.__text _MusicTrackGetProperty
|| __TEXT.__text _MusicTrackGetSequence
|| __TEXT.__text _MusicTrackIsValid
|| __TEXT.__text _MusicTrackMerge
|| __TEXT.__text _MusicTrackMoveEvents
|| __TEXT.__text _MusicTrackNewAUPresetEvent
|| __TEXT.__text _MusicTrackNewExtendedNoteEvent
|| __TEXT.__text _MusicTrackNewExtendedTempoEvent
|| __TEXT.__text _MusicTrackNewMIDIChannelEvent
|| __TEXT.__text _MusicTrackNewMIDINoteEvent
|| __TEXT.__text _MusicTrackNewMIDIRawDataEvent
|| __TEXT.__text _MusicTrackNewMetaEvent
|| __TEXT.__text _MusicTrackNewParameterEvent
|| __TEXT.__text _MusicTrackNewUserEvent
|| __TEXT.__text _MusicTrackSetDestMIDIEndpoint
|| __TEXT.__text _MusicTrackSetDestNode
|| __TEXT.__text _MusicTrackSetDestinationAU
|| __TEXT.__text _MusicTrackSetProperty
|| __TEXT.__text _NewAUGraph
|| __TEXT.__text _NewMusicEventIterator
|| __TEXT.__text _NewMusicPlayer
|| __TEXT.__text _NewMusicSequence
|| __TEXT.__text _SSPlayerSynchronizer_CancelPlayer
|| __TEXT.__text _SSPlayerSynchronizer_CheckReadyToPlay
|| __TEXT.__text _SSPlayerSynchronizer_New
|| __TEXT.__text _SSPlayerSynchronizer_NewWithLoopPeriod
|| __TEXT.__text _SSPlayerSynchronizer_PlayerReachedLoopPoint
|| __TEXT.__text _SSPlayerSynchronizer_SetLoopPeriod
|| __TEXT.__text _SSPlayerSynchronizer_SetPlayerLatency
|| __TEXT.__text _UISoundDisposeDevice
|| __TEXT.__text _UISoundDisposeRenderer
|| __TEXT.__text _UISoundNewDevice
|| __TEXT.__text _UISoundNewRenderer
|| __TEXT.__text _UISoundPlayFinished
|| __TEXT.__text _UISoundStartPlaying
|| __TEXT.__text _UISoundStartPlayingWithSynchronizer
|| __TEXT.__text _UISoundStopPlaying
|| __TEXT.__text __Z38AudioSessionClientManager_LookupClientj
|| __TEXT.__text __ZN14AQIONodeClient12SetCanRecordEv
|| __TEXT.__text __ZN14AQIONodeClient18setRoutingBehaviorEjPK14__CFDictionaryRj
|| __TEXT.__text __ZN14AQIONodeClient26GetPIDFromClientAuditTokenEv
|| __TEXT.__text __ZN14AQIONodeClient32SetRoutingBehaviorFromDictionaryEPK14__CFDictionary
|| __TEXT.__text __ZN14AQIONodeClientD0Ev
|| __TEXT.__text __ZN14AQIONodeClientD1Ev
|| __TEXT.__text __ZN14AQIONodeClientD2Ev
|| __TEXT.__text __ZNK14AQIONodeClient21HasBooleanEntitlementEPK10__CFString
__ Accelerate: _vDSP_vadd
__ Accelerate: _vDSP_vrampmul
__ Accelerate: _vDSP_vsma
__ AudioToolboxCore: _AUPBPropertiesChanged
__ AudioToolboxCore: _AUPBRegisterAU
__ AudioToolboxCore: _AudioCodecAppendInputData
__ AudioToolboxCore: _AudioCodecGetProperty
__ AudioToolboxCore: _AudioCodecGetPropertyInfo
__ AudioToolboxCore: _AudioCodecInitialize
__ AudioToolboxCore: _AudioCodecProduceOutputPackets
__ AudioToolboxCore: _AudioCodecReset
__ AudioToolboxCore: _AudioCodecSetProperty
__ AudioToolboxCore: _AudioCodecUninitialize
__ AudioToolboxCore: _AudioComponentCount
__ AudioToolboxCore: _AudioComponentFindNext
__ AudioToolboxCore: _AudioComponentGetDescription
__ AudioToolboxCore: _AudioComponentInstanceCanDo
__ AudioToolboxCore: _AudioComponentInstanceDispose
__ AudioToolboxCore: _AudioComponentInstanceNew
__ AudioToolboxCore: _AudioConverterConvertComplexBuffer
__ AudioToolboxCore: _AudioConverterDispose
__ AudioToolboxCore: _AudioConverterFillComplexBuffer
__ AudioToolboxCore: _AudioConverterGetProperty
__ AudioToolboxCore: _AudioConverterGetPropertyInfo
__ AudioToolboxCore: _AudioConverterNew
__ AudioToolboxCore: _AudioConverterReset
__ AudioToolboxCore: _AudioConverterSetProperty
__ AudioToolboxCore: _AudioFileClose
__ AudioToolboxCore: _AudioFileGetProperty
__ AudioToolboxCore: _AudioFileGetPropertyInfo
__ AudioToolboxCore: _AudioFileOpenURL
__ AudioToolboxCore: _AudioFileOpenWithCallbacks
__ AudioToolboxCore: _AudioFileReadPackets
__ AudioToolboxCore: _AudioFormatGetProperty
__ AudioToolboxCore: _AudioFormatGetPropertyInfo
__ AudioToolboxCore: _AudioFormat_ComputeLoudnessScalar
__ AudioToolboxCore: _AudioOutputUnitStart
__ AudioToolboxCore: _AudioOutputUnitStop
__ AudioToolboxCore: _AudioUnitAddPropertyListener
__ AudioToolboxCore: _AudioUnitAddRenderNotify
__ AudioToolboxCore: _AudioUnitGetParameter
__ AudioToolboxCore: _AudioUnitGetProperty
__ AudioToolboxCore: _AudioUnitGetPropertyInfo
__ AudioToolboxCore: _AudioUnitInitialize
__ AudioToolboxCore: _AudioUnitRemovePropertyListenerWithUserData
__ AudioToolboxCore: _AudioUnitRemoveRenderNotify
__ AudioToolboxCore: _AudioUnitRender
__ AudioToolboxCore: _AudioUnitReset
__ AudioToolboxCore: _AudioUnitScheduleParameters
__ AudioToolboxCore: _AudioUnitSetParameter
__ AudioToolboxCore: _AudioUnitSetProperty
__ AudioToolboxCore: _AudioUnitUninitialize
__ AudioToolboxCore: _CACentralStateDumpRegisterSubsystem
__ AudioToolboxCore: _CAShowFile
__ AudioToolboxCore: _ExtAudioFileCreateWithURL
__ AudioToolboxCore: _ExtAudioFileDispose
__ AudioToolboxCore: _ExtAudioFileSetProperty
__ AudioToolboxCore: _ExtAudioFileWriteAsync
__ AudioToolboxCore: _GetAudioDSPManager
__ AudioToolboxCore: _IPCAURegistrar_InitServer
__ AudioToolboxCore: _IPCAURegistrar_IsActiveHost
__ AudioToolboxCore: _MusicDeviceMIDIEvent
__ AudioToolboxCore: _MusicDeviceStartNote
__ AudioToolboxCore: _MusicDeviceStopNote
__ AudioToolboxCore: _MusicDeviceSysEx
__ AudioToolboxCore: _OBJC_CLASS_$_AudioComponentRegistrar
__ AudioToolboxCore: __AudioConverterNewInternal
__ AudioToolboxCore: __Z17_ReportRPCTimeoutPKci
__ AudioToolboxCore: __Z24GetMediaServerRPCTimeoutv
__ AudioToolboxCore: __ZN11CAFormatter20InitWithMemoryStreamER14CAMemoryStream
__ AudioToolboxCore: __ZN11CAFormatter4InitERK14AudioTimeStampjb
__ AudioToolboxCore: __ZN11CAFormatterC1EP20OpaqueAudioConverter
__ AudioToolboxCore: __ZN11CAFormatterC1EPK14AudioTimeStampjb
__ AudioToolboxCore: __ZN11CAFormatterC1EPK18AudioChannelLayout
__ AudioToolboxCore: __ZN11CAFormatterC1EPKfii
__ AudioToolboxCore: __ZN11CAFormatterC1EPKvi
__ AudioToolboxCore: __ZN11CAFormatterC1ERK15AudioBufferList
__ AudioToolboxCore: __ZN11CAFormatterC1ERK21AudioClassDescription
__ AudioToolboxCore: __ZN11CAFormatterC1ERK24CAStreamBasicDescriptionb
__ AudioToolboxCore: __ZN11CAFormatterC1ERK25AudioComponentDescription
__ AudioToolboxCore: __ZN11CAFormatterC1ERK26AudioObjectPropertyAddress
__ AudioToolboxCore: __ZN11CAFormatterC1ERK26AudioObjectPropertyAddressPKvi
__ AudioToolboxCore: __ZN11CAFormatterC1ERK27AudioStreamBasicDescriptionb
__ AudioToolboxCore: __ZN13CACFFormatterC1EPKv
__ AudioToolboxCore: __ZN15AudioRingBuffer10DeallocateEv
__ AudioToolboxCore: __ZN15AudioRingBuffer13GetTimeBoundsERxS0_
__ AudioToolboxCore: __ZN15AudioRingBuffer13SetTimeBoundsExx
__ AudioToolboxCore: __ZN15AudioRingBuffer15CheckTimeBoundsExx
__ AudioToolboxCore: __ZN15AudioRingBuffer18FetchAllWithZeroesEP15AudioBufferListjxRjS2_S2_
__ AudioToolboxCore: __ZN15AudioRingBuffer21touchRingBufferMemoryEv
__ AudioToolboxCore: __ZN15AudioRingBuffer5ClearEv
__ AudioToolboxCore: __ZN15AudioRingBuffer5FetchEP15AudioBufferListjx
__ AudioToolboxCore: __ZN15AudioRingBuffer5StoreEPK15AudioBufferListjx
__ AudioToolboxCore: __ZN15AudioRingBuffer8AllocateERK24CAStreamBasicDescriptionj
__ AudioToolboxCore: __ZN15AudioRingBuffer8AllocateEijj
__ AudioToolboxCore: __ZN15AudioRingBufferC1Ev
__ AudioToolboxCore: __ZN15AudioRingBufferC2Ev
__ AudioToolboxCore: __ZN15AudioRingBufferD1Ev
__ AudioToolboxCore: __ZN15AudioRingBufferD2Ev
__ AudioToolboxCore: __ZN20AUProcessingBlock_AU15GetAvailableAUsERNSt3__16vectorI21AudioClassDescriptionNS0_9allocatorIS2_EEEE
__ AudioToolboxCore: __ZN21AUProcessingBlockBase11SetPropertyEjPKv
__ AudioToolboxCore: __ZN21AUProcessingBlockBase12CopyPropertyEjPPKv
__ AudioToolboxCore: __ZN21AUProcessingBlockBase15InsertAUAtIndexEjRK8AUPBUnit
__ AudioToolboxCore: __ZN21AUProcessingBlockBase15RemoveAUAtIndexEj
__ AudioToolboxCore: __ZN21AUProcessingBlockBaseC2EPK10__CFString
__ AudioToolboxCore: __ZN21AUProcessingBlockBaseD2Ev
__ AudioToolboxCore: __ZN27AudioUnitPropertyMarshaller16CreateMarshallerEj
__ AudioToolboxCore: _gMediaServerTimeout
__ AudioToolboxCore: _iEjr08d2
__ AudioToolboxCore: _tkqMjk4y
__ CoreAudio: _AudioDeviceCreateIOProcID
__ CoreAudio: _AudioDeviceDestroyIOProcID
__ CoreAudio: _AudioDeviceGetCurrentTime
__ CoreAudio: _AudioDeviceGetNearestStartTime
__ CoreAudio: _AudioDeviceStart
__ CoreAudio: _AudioDeviceStartAtTime
__ CoreAudio: _AudioDeviceStop
__ CoreAudio: _AudioDeviceTranslateTime
__ CoreAudio: _AudioObjectAddPropertyListener
__ CoreAudio: _AudioObjectExists
__ CoreAudio: _AudioObjectGetPropertyData
__ CoreAudio: _AudioObjectGetPropertyDataSize
__ CoreAudio: _AudioObjectHasProperty
__ CoreAudio: _AudioObjectIsPropertySettable
__ CoreAudio: _AudioObjectRemovePropertyListener
__ CoreAudio: _AudioObjectSetPropertyData
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayGetValues
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFCopyTypeIDDescription
__ CoreFoundation: _CFDataAppendBytes
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataCreateWithBytesNoCopy
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataSetLength
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryApplyFunction
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetType
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFPropertyListCreateData
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetApplyFunction
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetGetCount
__ CoreFoundation: _CFSetRemoveValue
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCompareWithOptions
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithPascalString
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetDoubleValue
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetSystemEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringHasSuffix
__ CoreFoundation: _CFURLCopyAbsoluteURL
__ CoreFoundation: _CFURLCopyFileSystemPath
__ CoreFoundation: _CFURLCopyLastPathComponent
__ CoreFoundation: _CFURLCopyPathExtension
__ CoreFoundation: _CFURLCreateFromFileSystemRepresentation
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _CFURLGetFileSystemRepresentation
__ CoreFoundation: _CFURLGetString
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: __CFMZEnabled
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreMedia: _CMNotificationCenterAddListener
__ CoreMedia: _CMNotificationCenterRemoveListener
__ CoreMedia: _FigNotificationCenterAddWeakListener
__ CoreMedia: _FigNotificationCenterRemoveWeakListener
__ CrashReporterSupport: _SimulateCrash
__ Foundation: _NSClassFromString
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ FrontBoardServices: _OBJC_CLASS_$_FBSOrientationObserver
__ IOKit: _IOAllowPowerChange
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IORegisterForSystemPower
__ MediaExperience: _CMSessionCopyProperty
__ MediaExperience: _CMSessionCreate
__ MediaExperience: _CMSessionGetNotificationCenter
__ MediaExperience: _CMSessionMgrCopyPickableRoutesForCategoryAndMode
__ MediaExperience: _CMSessionMgrCopySystemSoundAudioBehavior
__ MediaExperience: _CMSessionMgrPerformVolumeOperation
__ MediaExperience: _CMSessionMgrSystemSoundActivateForPID
__ MediaExperience: _CMSessionMgrSystemSoundDidFinish
__ MediaExperience: _CMSessionMgrVibrateForSystemSoundWithOptions
__ MediaExperience: _CMSessionMgrVibratorStopWithOptions
__ MediaExperience: _CMSessionSetProperty
__ MediaExperience: _MediaServerCMSessionOneTimeInitialization
__ MediaExperience: __CMSessionBeginInterruption_WithSecTaskAndFlags
__ MediaExperience: __CMSessionCopyProperty
__ MediaExperience: __CMSessionCreate
__ MediaExperience: __CMSessionEndInterruption_WithSecTaskAndStatus
__ MediaExperience: __CMSessionNotificationBarrier
__ MediaExperience: __CMSessionSetProperty
__ MediaExperience: _kCMSessionAudioCategory_Alarm
__ MediaExperience: _kCMSessionAudioCategory_AmbientSound
__ MediaExperience: _kCMSessionAudioCategory_AudioProcessing
__ MediaExperience: _kCMSessionAudioCategory_EmergencyAlert
__ MediaExperience: _kCMSessionAudioCategory_EmergencyAlert_Muteable
__ MediaExperience: _kCMSessionAudioCategory_FindMyAudioDevice
__ MediaExperience: _kCMSessionAudioCategory_FindMyPhone
__ MediaExperience: _kCMSessionAudioCategory_LiveAudio
__ MediaExperience: _kCMSessionAudioCategory_MediaPlayback
__ MediaExperience: _kCMSessionAudioCategory_MediaPlaybackNoSpeaker
__ MediaExperience: _kCMSessionAudioCategory_Multi
__ MediaExperience: _kCMSessionAudioCategory_Notice
__ MediaExperience: _kCMSessionAudioCategory_PhoneCall
__ MediaExperience: _kCMSessionAudioCategory_PlayAndRecord
__ MediaExperience: _kCMSessionAudioCategory_Record
__ MediaExperience: _kCMSessionAudioCategory_Ringtone
__ MediaExperience: _kCMSessionAudioCategory_RingtonePreview
__ MediaExperience: _kCMSessionAudioCategory_SoloAmbientSound
__ MediaExperience: _kCMSessionAudioCategory_TTYCall
__ MediaExperience: _kCMSessionAudioCategory_UserInterfaceSoundEffects
__ MediaExperience: _kCMSessionAudioCategory_VoiceCommand
__ MediaExperience: _kCMSessionAudioCategory_VoiceCommandThatMixes
__ MediaExperience: _kCMSessionAudioCategory_VoiceOver
__ MediaExperience: _kCMSessionAudioCategory_Voicemail
__ MediaExperience: _kCMSessionAudioCategory_WaterEjection
__ MediaExperience: _kCMSessionAudioDestination_Default
__ MediaExperience: _kCMSessionAudioDestination_SpeakerAlert
__ MediaExperience: _kCMSessionAudioDestination_SystemLocal
__ MediaExperience: _kCMSessionAudioDestination_SystemRemote
__ MediaExperience: _kCMSessionAudioHardwareFormat_AC3
__ MediaExperience: _kCMSessionAudioHardwareFormat_LPCM
__ MediaExperience: _kCMSessionAudioMode_Default
__ MediaExperience: _kCMSessionAudioMode_FindMyPhone
__ MediaExperience: _kCMSessionAudioMode_GameChat
__ MediaExperience: _kCMSessionAudioMode_HearingAccessibility
__ MediaExperience: _kCMSessionAudioMode_LivePhoto
__ MediaExperience: _kCMSessionAudioMode_Measurement
__ MediaExperience: _kCMSessionAudioMode_MoviePlayback
__ MediaExperience: _kCMSessionAudioMode_Raw
__ MediaExperience: _kCMSessionAudioMode_SOSNotification
__ MediaExperience: _kCMSessionAudioMode_SpatialRecording
__ MediaExperience: _kCMSessionAudioMode_SpeechRecognition
__ MediaExperience: _kCMSessionAudioMode_SpokenAudio
__ MediaExperience: _kCMSessionAudioMode_VideoChat
__ MediaExperience: _kCMSessionAudioMode_VideoRecording
__ MediaExperience: _kCMSessionAudioMode_VoiceChat
__ MediaExperience: _kCMSessionAudioMode_VoiceMessages
__ MediaExperience: _kCMSessionAudioMode_VoicePrompt
__ MediaExperience: _kCMSessionAudioStream_Primary
__ MediaExperience: _kCMSessionAudioStream_Secondary
__ MediaExperience: _kCMSessionGlobalNotificationKey_ActiveAudioRouteDidChange_NewRoute
__ MediaExperience: _kCMSessionGlobalNotificationKey_ApplicationStateDidChange_ApplicationState
__ MediaExperience: _kCMSessionGlobalNotificationKey_AudioBudgetDidChange_Budget
__ MediaExperience: _kCMSessionGlobalNotificationKey_AvailablePhysicalFormatsDidChange_Formats
__ MediaExperience: _kCMSessionGlobalNotificationKey_CallIsActiveDidChange_CallActive
__ MediaExperience: _kCMSessionGlobalNotificationKey_ForceSoundCheckDidChange_ForceSoundCheck
__ MediaExperience: _kCMSessionGlobalNotificationKey_InputGainAvailableDidChange_State
__ MediaExperience: _kCMSessionGlobalNotificationKey_InputGainScalarDidChange_Gain
__ MediaExperience: _kCMSessionGlobalNotificationKey_InputSourcesDidChange_Sources
__ MediaExperience: _kCMSessionGlobalNotificationKey_NumberOfInputChannelsDidChange_ChannelCount
__ MediaExperience: _kCMSessionGlobalNotificationKey_NumberOfOutputChannelsDidChange_ChannelCount
__ MediaExperience: _kCMSessionGlobalNotificationKey_OutputDestinationsDidChange_Destinations
__ MediaExperience: _kCMSessionGlobalNotificationKey_SomeNonAmbientAudioCategoryClientIsPlayingDidChange_IsPlaying
__ MediaExperience: _kCMSessionGlobalNotificationKey_SomeRecordingSessionPresentThatDisallowsSystemSoundsDidChange_SessionPresent
__ MediaExperience: _kCMSessionGlobalNotificationKey_SystemSoundVibrateDidFinish_Context
__ MediaExperience: _kCMSessionGlobalNotificationKey_UserVolumeDidChange_AudioCategory
__ MediaExperience: _kCMSessionGlobalNotificationKey_UserVolumeDidChange_Volume
__ MediaExperience: _kCMSessionGlobalNotificationKey_VoicePromptStyleDidChange_VoicePromptStyle
__ MediaExperience: _kCMSessionGlobalNotification_ActiveAudioRouteDidChange
__ MediaExperience: _kCMSessionGlobalNotification_ApplicationStateDidChange
__ MediaExperience: _kCMSessionGlobalNotification_AudioBudgetDidChange
__ MediaExperience: _kCMSessionGlobalNotification_AvailablePhysicalFormatsDidChange
__ MediaExperience: _kCMSessionGlobalNotification_CallIsActiveDidChange
__ MediaExperience: _kCMSessionGlobalNotification_ForceSoundCheckDidChange
__ MediaExperience: _kCMSessionGlobalNotification_InputGainAvailableDidChange
__ MediaExperience: _kCMSessionGlobalNotification_InputGainScalarDidChange
__ MediaExperience: _kCMSessionGlobalNotification_InputSourcesDidChange
__ MediaExperience: _kCMSessionGlobalNotification_NumberOfInputChannelsDidChange
__ MediaExperience: _kCMSessionGlobalNotification_NumberOfOutputChannelsDidChange
__ MediaExperience: _kCMSessionGlobalNotification_OutputDestinationsDidChange
__ MediaExperience: _kCMSessionGlobalNotification_RecordingStateDidChange
__ MediaExperience: _kCMSessionGlobalNotification_SomeClientIsPlayingDidChange
__ MediaExperience: _kCMSessionGlobalNotification_SomeNonAmbientAudioCategoryClientIsPlayingDidChange
__ MediaExperience: _kCMSessionGlobalNotification_SomeRecordingSessionPresentThatDisallowsSystemSoundsDidChange
__ MediaExperience: _kCMSessionGlobalNotification_SystemSoundVibrateDidFinish
__ MediaExperience: _kCMSessionGlobalNotification_UserVolumeDidChange
__ MediaExperience: _kCMSessionGlobalNotification_VoicePromptStyleDidChange
__ MediaExperience: _kCMSessionGlobalProperty_CurrentInputSafetyOffset
__ MediaExperience: _kCMSessionGlobalProperty_CurrentOutputSafetyOffset
__ MediaExperience: _kCMSessionGlobalProperty_DisplayIDsOfActiveSessions
__ MediaExperience: _kCMSessionGlobalProperty_PhoneCallExists
__ MediaExperience: _kCMSessionGlobalProperty_ThermalGainAdjustment_Haptics
__ MediaExperience: _kCMSessionGlobalProperty_ThermalGainAdjustment_Speaker
__ MediaExperience: _kCMSessionGlobalProperty_VoicePromptStyle
__ MediaExperience: _kCMSessionInterruptionInfoKey_InterruptedDueToAppSuspension
__ MediaExperience: _kCMSessionInterruptionInfoKey_InterruptionCmd
__ MediaExperience: _kCMSessionInterruptionInfoKey_InterruptorName
__ MediaExperience: _kCMSessionInterruptionInfoKey_QuietVolume
__ MediaExperience: _kCMSessionInterruptionInfoKey_Status
__ MediaExperience: _kCMSessionInterruptionInfoKey_VolumeChangeDuration
__ MediaExperience: _kCMSessionNotificationKey_PiPIsPossibleDidChange_PiPPossible
__ MediaExperience: _kCMSessionNotification_AudioBehaviorDidChange
__ MediaExperience: _kCMSessionNotification_Interruption
__ MediaExperience: _kCMSessionNotification_PiPIsPossibleDidChange
__ MediaExperience: _kCMSessionNotification_PickableRoutesDidChange
__ MediaExperience: _kCMSessionNotification_RoutingContextDidChange
__ MediaExperience: _kCMSessionProperty_ActiveAudioRoute
__ MediaExperience: _kCMSessionProperty_AllowMixableAudioWhileRecording
__ MediaExperience: _kCMSessionProperty_AllowSystemSoundsWhileRecording
__ MediaExperience: _kCMSessionProperty_AllowedRouteTypes
__ MediaExperience: _kCMSessionProperty_AllowedToUseHardwareAudioCodec
__ MediaExperience: _kCMSessionProperty_AudioBehavior
__ MediaExperience: _kCMSessionProperty_AudioCategory
__ MediaExperience: _kCMSessionProperty_AudioClockDevice
__ MediaExperience: _kCMSessionProperty_AudioHardwareControlFlags
__ MediaExperience: _kCMSessionProperty_AudioMode
__ MediaExperience: _kCMSessionProperty_AudioQueueOptions
__ MediaExperience: _kCMSessionProperty_AudioSessionID
__ MediaExperience: _kCMSessionProperty_CameraParameters
__ MediaExperience: _kCMSessionProperty_CategoryCustomization_DefaultBuiltInRoute
__ MediaExperience: _kCMSessionProperty_CategoryCustomization_EnableBluetoothRecording
__ MediaExperience: _kCMSessionProperty_ClientName
__ MediaExperience: _kCMSessionProperty_ClientPID
__ MediaExperience: _kCMSessionProperty_ClientPriority
__ MediaExperience: _kCMSessionProperty_ClientSecTask
__ MediaExperience: _kCMSessionProperty_ClientType
__ MediaExperience: _kCMSessionProperty_ClientVersionOfLinkedSDK
__ MediaExperience: _kCMSessionProperty_CurrentAudioHardwareFormat
__ MediaExperience: _kCMSessionProperty_CurrentAudioHardwareInputNumberChannels
__ MediaExperience: _kCMSessionProperty_CurrentAudioHardwareOutputNumberChannels
__ MediaExperience: _kCMSessionProperty_CurrentAudioHardwareSampleRate
__ MediaExperience: _kCMSessionProperty_CurrentInputLatency
__ MediaExperience: _kCMSessionProperty_CurrentInputSampleRate
__ MediaExperience: _kCMSessionProperty_CurrentOutputLatency
__ MediaExperience: _kCMSessionProperty_CurrentOutputSampleRate
__ MediaExperience: _kCMSessionProperty_CurrentSpeechDetectionDeviceSampleRate
__ MediaExperience: _kCMSessionProperty_DefaultVPChatMode
__ MediaExperience: _kCMSessionProperty_DeselectedInputs
__ MediaExperience: _kCMSessionProperty_DetailedActiveAudioRoute
__ MediaExperience: _kCMSessionProperty_DisallowAudioFormatChanges
__ MediaExperience: _kCMSessionProperty_DoNotNotifyOtherSessionsOnNextInactive
__ MediaExperience: _kCMSessionProperty_DoNotResetAudioCategoryOnNextInactive
__ MediaExperience: _kCMSessionProperty_DoesInterAppAudio
__ MediaExperience: _kCMSessionProperty_DoesntActuallyPlayAudio
__ MediaExperience: _kCMSessionProperty_ExcludedRoutes
__ MediaExperience: _kCMSessionProperty_ForceSoundCheck
__ MediaExperience: _kCMSessionProperty_HapticEngineIsPlaying
__ MediaExperience: _kCMSessionProperty_IAmTheAssistant
__ MediaExperience: _kCMSessionProperty_IgnoreRingerSwitch
__ MediaExperience: _kCMSessionProperty_InitiationDescription
__ MediaExperience: _kCMSessionProperty_InputDataSource
__ MediaExperience: _kCMSessionProperty_InputDataSources
__ MediaExperience: _kCMSessionProperty_InputGainAvailable
__ MediaExperience: _kCMSessionProperty_InputGainScalar
__ MediaExperience: _kCMSessionProperty_InterruptionFadeDuration
__ MediaExperience: _kCMSessionProperty_InterruptionStyle
__ MediaExperience: _kCMSessionProperty_IsActive
__ MediaExperience: _kCMSessionProperty_IsAudioSession
__ MediaExperience: _kCMSessionProperty_IsEligibleForNowPlayingAppConsideration
__ MediaExperience: _kCMSessionProperty_IsInputOutputDecoupled
__ MediaExperience: _kCMSessionProperty_IsLongFormAudio
__ MediaExperience: _kCMSessionProperty_IsPlaying
__ MediaExperience: _kCMSessionProperty_IsRecording
__ MediaExperience: _kCMSessionProperty_MATAtmosIsAvailable
__ MediaExperience: _kCMSessionProperty_MaximumNumberOfInputChannels
__ MediaExperience: _kCMSessionProperty_MaximumNumberOfOutputChannels
__ MediaExperience: _kCMSessionProperty_NowPlayingAppWasStoppedOnMostRecentActivation
__ MediaExperience: _kCMSessionProperty_OutputDataDestination
__ MediaExperience: _kCMSessionProperty_OutputDataDestinations
__ MediaExperience: _kCMSessionProperty_OverrideRoute
__ MediaExperience: _kCMSessionProperty_PhysicalFormatsSupported
__ MediaExperience: _kCMSessionProperty_PiPIsPossible
__ MediaExperience: _kCMSessionProperty_PickedRoute
__ MediaExperience: _kCMSessionProperty_PortOverride
__ MediaExperience: _kCMSessionProperty_PreferredAudioHardwareFormat
__ MediaExperience: _kCMSessionProperty_PreferredAudioHardwareIOBufferDuration
__ MediaExperience: _kCMSessionProperty_PreferredAudioHardwareIOBufferFrames
__ MediaExperience: _kCMSessionProperty_PreferredDecoupledInputOutput
__ MediaExperience: _kCMSessionProperty_PreferredInputSampleRate
__ MediaExperience: _kCMSessionProperty_PreferredInputs
__ MediaExperience: _kCMSessionProperty_PreferredNumberOfInputChannels
__ MediaExperience: _kCMSessionProperty_PreferredNumberOfOutputChannels
__ MediaExperience: _kCMSessionProperty_PreferredOutputSampleRate
__ MediaExperience: _kCMSessionProperty_RequiresAggregatedInputOutput
__ MediaExperience: _kCMSessionProperty_RouteSharingPolicy
__ MediaExperience: _kCMSessionProperty_RoutingContextUUID
__ MediaExperience: _kCMSessionProperty_SelectableInputs
__ MediaExperience: _kCMSessionProperty_SelectableOutputs
__ MediaExperience: _kCMSessionProperty_SelectedOutputs
__ MediaExperience: _kCMSessionProperty_SomeOtherClientIsPlaying
__ MediaExperience: _kCMSessionProperty_SomeOtherNonAmbientAudioCategoryClientIsPlaying
__ MediaExperience: _kCMSessionProperty_UserVolume
__ MediaExperience: _kCMSessionProperty_VPBlockConfiguration
__ MediaExperience: _kCMSessionProperty_WantsToPauseSpokenAudio
__ MediaExperience: _kCMSessionProperty_WantsVibrationNotifications
__ MediaExperience: _kCMSessionVoicePromptStyle_None
__ MediaExperience: _kCMSessionVoicePromptStyle_Normal
__ MediaExperience: _kCMSessionVoicePromptStyle_Short
__ MediaExperience: _kCMSession_AudioBehaviorKey_Destination
__ MediaExperience: _kCMSession_AudioBehaviorKey_Source
__ MediaExperience: _kCMSession_AudioBehaviorKey_Stream
__ MediaExperience: _kCMSession_AudioBehaviorKey_SystemSound_Audio
__ MediaExperience: _kCMSession_AudioBehaviorKey_SystemSound_AudioVolume
__ MediaExperience: _kCMSession_AudioBehaviorKey_SystemSound_InterruptCurrentSystemSounds
__ MediaExperience: _kCMSession_AudioBehaviorKey_SystemSound_NeedsFinishCall
__ MediaExperience: _kCMSession_AudioBehaviorKey_SystemSound_ScreenFlash
__ MediaExperience: _kCMSession_AudioBehaviorKey_SystemSound_SynchronizedSystemSound
__ MediaExperience: _kCMSession_AudioBehaviorKey_SystemSound_Vibration
__ MediaExperience: _kCMSession_AudioBehaviorKey_SystemSound_VibrationIntensity
__ MediaExperience: _kCMSession_AudioQueueOptionsKey_DuckVolume
__ MediaExperience: _kCMSession_AudioQueueOptionsKey_FadeDuration
__ MediaExperience: _kCMSession_AudioQueueOptionsKey_IsSilentMuted
__ MediaExperience: _kCMSession_InSystemSoundDetailsKey_IgnoreRingerSwitch
__ MediaExperience: _kCMSession_InSystemSoundDetailsKey_PID
__ MediaExperience: _kCMSession_InSystemSoundDetailsKey_SSID
__ MediaExperience: _kCMSession_RouteDescriptionKey_AVAudioRouteName
__ MediaExperience: _kCMSession_RouteDescriptionKey_IsPreferredExternalRoute
__ MediaExperience: _kCMSession_RouteDescriptionKey_PreferredExternalRouteDetails_IsActive
__ MediaExperience: _kCMSession_RouteDescriptionKey_RouteCurrentlyPicked
__ MediaExperience: _kCMSession_RouteDescriptionKey_RouteUID
__ MediaExperience: _kCMSession_VibrateOptionKey_DidFinishContext
__ MediaExperience: _kCMSession_VibrateOptionKey_Duration
__ MediaExperience: _kCMSession_VibrateOptionKey_Intensity
__ MediaExperience: _kCMSession_VibrateOptionKey_Loop
__ MediaExperience: _kCMSession_VibrateOptionKey_Synchronizer
__ MediaExperience: _kCMSession_VibrateOptionKey_VibrationPattern
__ MediaExperience: _kCMSession_VibratorStopOptionKey_CancelAtLoopEnd
__ MediaExperience: _kFigVibratorNotification_WillStart
__ MediaExperience: _kFigVibratorNotification_WillStop
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateWithAuditToken
__ SpringBoardServices: _SBApplicationStateGetDescription
__ TCC: _TCCAccessCheckAuditToken
__ TCC: _TCCAccessPreflight
__ TCC: _TCCAccessRequest
__ TCC: _kTCCServiceMicrophone
__ caulk: __ZN5caulk10concurrent9messenger5drainEv
__ caulk: __ZN5caulk10concurrent9messenger7enqueueERNS0_7messageE
__ caulk: __ZN5caulk10concurrent9messengerC1ENS1_15thread_strategyERKNS_6thread10attributesE
__ caulk: __ZN5caulk10concurrent9messengerC1ERKN10applesauce8dispatch2v15queueE
__ caulk: __ZN5caulk10concurrent9messengerD1Ev
__ caulk: __ZN5caulk5alloc26get_realtime_safe_resourceEv
__ caulk: __ZN5caulk9semaphore10timed_waitEd
__ caulk: __ZN5caulk9semaphore6signalEv
__ caulk: __ZN5caulk9semaphoreC1Ej
__ caulk: __ZN5caulk9semaphoreD1Ev
__ libAudioStatistics.dylib: _CAReportingClientGetAudioServiceType
__ libAudioStatistics.dylib: _CAReportingClientSendMessage
__ libAudioStatistics.dylib: _CAReportingClientSendSingleMessage
__ libAudioStatistics.dylib: _OBJC_CLASS_$_CAReporter
__ libAudioToolboxUtility.dylib: _CALog_DefaultScope
__ libAudioToolboxUtility.dylib: _CrashIfClientProvidedBogusAudioBufferList
__ libAudioToolboxUtility.dylib: _LogFilenameOnly
__ libAudioToolboxUtility.dylib: _MSHCreateMIGServerSource
__ libAudioToolboxUtility.dylib: _MSHMIGReceiveAndDispatchMessage
__ libAudioToolboxUtility.dylib: _OBJC_CLASS_$_CAXPCObject
__ libAudioToolboxUtility.dylib: __Z13NextMIDIEventPKhS0_
__ libAudioToolboxUtility.dylib: __Z18MIDIPacketList_NewymPKh
__ libAudioToolboxUtility.dylib: __Z20CAIsDebuggerAttachedv
__ libAudioToolboxUtility.dylib: __Z31CACFPreferencesGetAppFloatValuePK10__CFStringS1_Pb
__ libAudioToolboxUtility.dylib: __Z33CACFPreferencesGetAppBooleanValuePK10__CFStringS1_Pb
__ libAudioToolboxUtility.dylib: __Z33CACFPreferencesGetAppIntegerValuePK10__CFStringS1_Pb
__ libAudioToolboxUtility.dylib: __Z4ReadR14CADeserializerRP18AudioChannelLayoutRm
__ libAudioToolboxUtility.dylib: __ZN10CACFString10GetCStringEPK10__CFStringPcRjj
__ libAudioToolboxUtility.dylib: __ZN10PowerMeter13Process_Int16EPKsii
__ libAudioToolboxUtility.dylib: __ZN10PowerMeter13Process_Int32EPKiii
__ libAudioToolboxUtility.dylib: __ZN10PowerMeter13SetSampleRateEd
__ libAudioToolboxUtility.dylib: __ZN10PowerMeter14ProcessSilenceEi
__ libAudioToolboxUtility.dylib: __ZN10PowerMeter5ResetEv
__ libAudioToolboxUtility.dylib: __ZN10PowerMeter7ProcessEPKfii
__ libAudioToolboxUtility.dylib: __ZN10PowerMeterC1Ev
__ libAudioToolboxUtility.dylib: __ZN10XPC_ObjectD2Ev
__ libAudioToolboxUtility.dylib: __ZN11XMachServer13AddMachClientEPNS_6ClientE
__ libAudioToolboxUtility.dylib: __ZN11XMachServer15DoForEachClientEU13block_pointerFvPNS_6ClientEE
__ libAudioToolboxUtility.dylib: __ZN11XMachServer16RemoveMachClientEPNS_6ClientE
__ libAudioToolboxUtility.dylib: __ZN11XMachServer8PortDiedEj
__ libAudioToolboxUtility.dylib: __ZN11XMachServerC2ERK14XMIGServerInfoPKci
__ libAudioToolboxUtility.dylib: __ZN12CABufferList15AllocateBuffersEj
__ libAudioToolboxUtility.dylib: __ZN12CASerializer10WritePlistEPKv
__ libAudioToolboxUtility.dylib: __ZN12CASerializer5WriteEPKvjj
__ libAudioToolboxUtility.dylib: __ZN12CASerializerC1EP8__CFData
__ libAudioToolboxUtility.dylib: __ZN12CASerializerD1Ev
__ libAudioToolboxUtility.dylib: __ZN12MemAllocator10InitializeEm
__ libAudioToolboxUtility.dylib: __ZN12MemAllocator19sBaseMemoryResourceE
__ libAudioToolboxUtility.dylib: __ZN12MemAllocator7ReleaseEv
__ libAudioToolboxUtility.dylib: __ZN12MemAllocator9ReferenceEv
__ libAudioToolboxUtility.dylib: __ZN12MemoryStream7GetDataEv
__ libAudioToolboxUtility.dylib: __ZN12MemoryStreamC1EPK8__CFData
__ libAudioToolboxUtility.dylib: __ZN12MemoryStreamC1ERK7TStreami
__ libAudioToolboxUtility.dylib: __ZN12MemoryStreamC1Ev
__ libAudioToolboxUtility.dylib: __ZN12MemoryStreamD1Ev
__ libAudioToolboxUtility.dylib: __ZN13XOSTransactor14endTransactionEv
__ libAudioToolboxUtility.dylib: __ZN13XOSTransactor16beginTransactionEv
__ libAudioToolboxUtility.dylib: __ZN14CACFDictionary10AddFloat32EPK10__CFStringf
__ libAudioToolboxUtility.dylib: __ZN14CACFDictionary13AddDictionaryEPK10__CFStringPK14__CFDictionary
__ libAudioToolboxUtility.dylib: __ZN14CACFDictionary7AddBoolEPK10__CFStringb
__ libAudioToolboxUtility.dylib: __ZN14CACFDictionary7AddDataEPK10__CFStringPK8__CFData
__ libAudioToolboxUtility.dylib: __ZN14CACFDictionary9AddCFTypeEPK10__CFStringPKv
__ libAudioToolboxUtility.dylib: __ZN14CACFDictionary9AddSInt32EPK10__CFStringi
__ libAudioToolboxUtility.dylib: __ZN14CACFDictionary9AddStringEPK10__CFStringS2_
__ libAudioToolboxUtility.dylib: __ZN14CACFDictionary9AddUInt32EPK10__CFStringj
__ libAudioToolboxUtility.dylib: __ZN14CADeserializer11ReadAllDataEv
__ libAudioToolboxUtility.dylib: __ZN14CADeserializer20GetAndAdvanceReadPtrEjj
__ libAudioToolboxUtility.dylib: __ZN14CADeserializer4ReadEPvjj
__ libAudioToolboxUtility.dylib: __ZN14CADeserializer9ReadPlistEv
__ libAudioToolboxUtility.dylib: __ZN14CADeserializerC1EPKvm
__ libAudioToolboxUtility.dylib: __ZN14CADeserializerD1Ev
__ libAudioToolboxUtility.dylib: __ZN14TuningPListMgr20loadTuningInSubdirs_EPPK10CACFStringjNS_15kTuningFileTypeE
__ libAudioToolboxUtility.dylib: __ZN14TuningPListMgrD1Ev
__ libAudioToolboxUtility.dylib: __ZN14XPC_Connection10InitializeEv
__ libAudioToolboxUtility.dylib: __ZN14XPC_Connection8FinalizeEPS_
__ libAudioToolboxUtility.dylib: __ZN14XPC_DictionaryD1Ev
__ libAudioToolboxUtility.dylib: __ZN15CACFPreferences15CopyNumberValueEPK10__CFStringbb
__ libAudioToolboxUtility.dylib: __ZN15CACFPreferences15CopyStringValueEPK10__CFStringbb
__ libAudioToolboxUtility.dylib: __ZN15CACFPreferences18CopyMultipleValuesEPK9__CFArraybb
__ libAudioToolboxUtility.dylib: __ZN15XBasicMIGServer22SetServerDispatchQueueERKN10applesauce8dispatch2v15queueE
__ libAudioToolboxUtility.dylib: __ZN16BaseOpaqueObject16ResolveOpaqueRefERKNS_4RTTIENS_3RefE
__ libAudioToolboxUtility.dylib: __ZN16BaseOpaqueObject16destroyOpaqueRefEv
__ libAudioToolboxUtility.dylib: __ZN16BaseOpaqueObject5sRTTIE
__ libAudioToolboxUtility.dylib: __ZN16BaseOpaqueObjectC2Ev
__ libAudioToolboxUtility.dylib: __ZN16BaseOpaqueObjectD2Ev
__ libAudioToolboxUtility.dylib: __ZN16XMachReceivePort11SetMachPortEj
__ libAudioToolboxUtility.dylib: __ZN16XMachReceivePort14CreateMachPortEi
__ libAudioToolboxUtility.dylib: __ZN16XMachReceivePortD1Ev
__ libAudioToolboxUtility.dylib: __ZN17PlatformUtilities11processNameEi
__ libAudioToolboxUtility.dylib: __ZN17PlatformUtilities26CopyHardwareModelShortNameEv
__ libAudioToolboxUtility.dylib: __ZN17RealtimeMessenger12PerformAsyncERNS_7MessageE
__ libAudioToolboxUtility.dylib: __ZN17RealtimeMessengerC2EN10applesauce8dispatch2v15queueE
__ libAudioToolboxUtility.dylib: __ZN17RealtimeMessengerD2Ev
__ libAudioToolboxUtility.dylib: __ZN17XRemoteMachServer13SetServerPortEji
__ libAudioToolboxUtility.dylib: __ZN17XRemoteMachServer8PortDiedEj
__ libAudioToolboxUtility.dylib: __ZN17XRemoteMachServerC2EPKcS1_
__ libAudioToolboxUtility.dylib: __ZN17XRemoteMachServerD2Ev
__ libAudioToolboxUtility.dylib: __ZN18CASmartPreferences14InterpretFloatEPKvRb
__ libAudioToolboxUtility.dylib: __ZN18CASmartPreferences16InterpretBooleanEPKvRb
__ libAudioToolboxUtility.dylib: __ZN18CASmartPreferences16InterpretIntegerEPKvRb
__ libAudioToolboxUtility.dylib: __ZN18CASmartPreferences21_RegisterFirstHandlerEPK10__CFStringS2_NSt3__18functionIFbPKvEEE
__ libAudioToolboxUtility.dylib: __ZN18CASmartPreferences8instanceEv
__ libAudioToolboxUtility.dylib: __ZN18PropertyMarshaller11DeserializeEjRPvRjNS_13EClientServerE
__ libAudioToolboxUtility.dylib: __ZN18PropertyMarshaller9SerializeEjPKvjNS_13EClientServerE
__ libAudioToolboxUtility.dylib: __ZN18SharableMemoryBase3SetEPvm
__ libAudioToolboxUtility.dylib: __ZN18XMachPortSendRight11SetMachPortEj
__ libAudioToolboxUtility.dylib: __ZN18XMachPortSendRightD1Ev
__ libAudioToolboxUtility.dylib: __ZN19SharableMemoryBlock10InitClientERNS_11ClientTokenE
__ libAudioToolboxUtility.dylib: __ZN19SharableMemoryBlock10InitServerEmRNS_11ServerTokenE
__ libAudioToolboxUtility.dylib: __ZN19SharableMemoryBlock14XPCClientTokenD1Ev
__ libAudioToolboxUtility.dylib: __ZN19SharableMemoryBlock14XPCServerTokenD1Ev
__ libAudioToolboxUtility.dylib: __ZN19SharableMemoryBlock15MachClientToken5ResetEv
__ libAudioToolboxUtility.dylib: __ZN19SharableMemoryBlock4FreeEv
__ libAudioToolboxUtility.dylib: __ZN20CAAudioChannelLayout14NumberChannelsERK18AudioChannelLayout
__ libAudioToolboxUtility.dylib: __ZN20CAAudioChannelLayout5ClearEv
__ libAudioToolboxUtility.dylib: __ZN20CAAudioChannelLayout6CreateEj
__ libAudioToolboxUtility.dylib: __ZN20CAAudioChannelLayoutC1EPK18AudioChannelLayout
__ libAudioToolboxUtility.dylib: __ZN20CAAudioChannelLayoutC1ERKS_
__ libAudioToolboxUtility.dylib: __ZN20CAAudioChannelLayoutC1Ej
__ libAudioToolboxUtility.dylib: __ZN20CAAudioChannelLayoutC1Ejb
__ libAudioToolboxUtility.dylib: __ZN20CAAudioChannelLayoutC1Ev
__ libAudioToolboxUtility.dylib: __ZN20CAAudioChannelLayoutD1Ev
__ libAudioToolboxUtility.dylib: __ZN20CAAudioChannelLayoutaSEPK18AudioChannelLayout
__ libAudioToolboxUtility.dylib: __ZN20CAAudioChannelLayoutaSERKS_
__ libAudioToolboxUtility.dylib: __ZN21PlatformUtilities_iOS14GetProductTypeEv
__ libAudioToolboxUtility.dylib: __ZN21PlatformUtilities_iOS15IsInternalBuildEv
__ libAudioToolboxUtility.dylib: __ZN21PlatformUtilities_iOS16ProductIsAppleTVEv
__ libAudioToolboxUtility.dylib: __ZN21PlatformUtilities_iOS25CopyProductTypeFilePrefixE14iOSProductType
__ libAudioToolboxUtility.dylib: __ZN21PlatformUtilities_iOS32ProductSupportsClosedLoopHapticsEv
__ libAudioToolboxUtility.dylib: __ZN22XMachPortDeathListener33SetDeathNotificationDispatchQueueERKN10applesauce8dispatch2v15queueE
__ libAudioToolboxUtility.dylib: __ZN22XMachPortDeathListenerC2Ev
__ libAudioToolboxUtility.dylib: __ZN22XMachPortDeathListenerD2Ev
__ libAudioToolboxUtility.dylib: __ZN24CAStreamBasicDescription12IsEquivalentERK27AudioStreamBasicDescriptionS2_j
__ libAudioToolboxUtility.dylib: __ZN24CAStreamBasicDescription14IsExactlyEqualERK27AudioStreamBasicDescriptionS2_
__ libAudioToolboxUtility.dylib: __ZN24CAStreamBasicDescriptionC1ERK27AudioStreamBasicDescription
__ libAudioToolboxUtility.dylib: __ZN24CAStreamBasicDescriptionC1Ev
__ libAudioToolboxUtility.dylib: __ZN2OS2CF6ToJSONEPK10__CFNumber
__ libAudioToolboxUtility.dylib: __ZN2OS2CF6ToJSONEPK10__CFString
__ libAudioToolboxUtility.dylib: __ZN2OS2CF6ToJSONEPK11__CFBoolean
__ libAudioToolboxUtility.dylib: __ZN2OS2CF6ToJSONEPK14__CFDictionary
__ libAudioToolboxUtility.dylib: __ZN2OS2CF6ToJSONEPK9__CFArray
__ libAudioToolboxUtility.dylib: __ZN2OS2CF6ToJSONEPKv
__ libAudioToolboxUtility.dylib: __ZN5CALog10LogEnabledEiRKNS_14ScopeSubscopesE
__ libAudioToolboxUtility.dylib: __ZN5CALog13RegisterScopeEbyPKcS1_S1_j
__ libAudioToolboxUtility.dylib: __ZN7CAGuard4WaitEv
__ libAudioToolboxUtility.dylib: __ZN7CAGuard6NotifyEv
__ libAudioToolboxUtility.dylib: __ZN7CAGuard7WaitForEy
__ libAudioToolboxUtility.dylib: __ZN7CAGuard9NotifyAllEv
__ libAudioToolboxUtility.dylib: __ZN7CAGuard9WaitUntilEy
__ libAudioToolboxUtility.dylib: __ZN7CAGuardC1EPKc
__ libAudioToolboxUtility.dylib: __ZN7CAGuardC2EPKc
__ libAudioToolboxUtility.dylib: __ZN7CAGuardD1Ev
__ libAudioToolboxUtility.dylib: __ZN7CAGuardD2Ev
__ libAudioToolboxUtility.dylib: __ZN7CAMutex3TryERb
__ libAudioToolboxUtility.dylib: __ZN7CAMutex4LockEv
__ libAudioToolboxUtility.dylib: __ZN7CAMutex6UnlockEv
__ libAudioToolboxUtility.dylib: __ZN7CAMutex8UnlockerC1ERS_
__ libAudioToolboxUtility.dylib: __ZN7CAMutex8UnlockerD1Ev
__ libAudioToolboxUtility.dylib: __ZN7CAMutexC1EPKc
__ libAudioToolboxUtility.dylib: __ZN7CAMutexC2EPKc
__ libAudioToolboxUtility.dylib: __ZN7CAMutexD1Ev
__ libAudioToolboxUtility.dylib: __ZN7CAMutexD2Ev
__ libAudioToolboxUtility.dylib: __ZN7TStream10WriteBig16Et
__ libAudioToolboxUtility.dylib: __ZN7TStream10WriteBig32Ej
__ libAudioToolboxUtility.dylib: __ZN7TStream12ReadLittle16Ev
__ libAudioToolboxUtility.dylib: __ZN7TStream12ReadLittle32Ev
__ libAudioToolboxUtility.dylib: __ZN7TStream8ReadByteEv
__ libAudioToolboxUtility.dylib: __ZN7TStream9ReadBig16Ev
__ libAudioToolboxUtility.dylib: __ZN7TStream9ReadBig32Ev
__ libAudioToolboxUtility.dylib: __ZN7TStream9WriteByteEh
__ libAudioToolboxUtility.dylib: __ZN7XThread4StopEv
__ libAudioToolboxUtility.dylib: __ZN7XThread9RunHelperEPv
__ libAudioToolboxUtility.dylib: __ZN8TFileBSD4OpenEi
__ libAudioToolboxUtility.dylib: __ZN8TFileBSD5ClearEv
__ libAudioToolboxUtility.dylib: __ZN8TFileBSD6CreateEjj
__ libAudioToolboxUtility.dylib: __ZN8TFileBSDC1EPK7__CFURL
__ libAudioToolboxUtility.dylib: __ZN8TFileBSDD1Ev
__ libAudioToolboxUtility.dylib: __ZN9CACFArray10AppendDataEPK8__CFData
__ libAudioToolboxUtility.dylib: __ZN9CACFArray12AppendStringEPK10__CFString
__ libAudioToolboxUtility.dylib: __ZN9CACFArray16AppendDictionaryEPK14__CFDictionary
__ libAudioToolboxUtility.dylib: __ZN9CAPThread11SetPriorityEjb
__ libAudioToolboxUtility.dylib: __ZN9CAPThread20GetScheduledPriorityEv
__ libAudioToolboxUtility.dylib: __ZN9CAPThread5StartEv
__ libAudioToolboxUtility.dylib: __ZN9CAPThread7SetNameEPKc
__ libAudioToolboxUtility.dylib: __ZN9CAPThreadC1EPFPvS0_ES0_jbbPKc
__ libAudioToolboxUtility.dylib: __ZN9CAPThreadC2EPFPvS0_ES0_jbbPKc
__ libAudioToolboxUtility.dylib: __ZN9CAPThreadD2Ev
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary10GetFloat32EPK10__CFStringRf
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary12GetCACFArrayEPK10__CFStringR9CACFArray
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary13GetCACFStringEPK10__CFStringR10CACFString
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary13GetDictionaryEPK10__CFStringRPK14__CFDictionary
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary17GetCACFDictionaryEPK10__CFStringRS_
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary4SizeEv
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary6GetURLEPK10__CFStringRPK7__CFURL
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary6HasKeyEPK10__CFString
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary7GetBoolEPK10__CFStringRb
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary7GetDataEPK10__CFStringRPK8__CFData
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary8GetArrayEPK10__CFStringRPK9__CFArray
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary9GetStringEPK10__CFStringRS2_
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary9GetUInt32EPK10__CFStringRj
__ libAudioToolboxUtility.dylib: __ZNK14CACFDictionary9GetUInt64EPK10__CFStringRy
__ libAudioToolboxUtility.dylib: __ZNK14TuningPListMgr16getAUPListByNameEPKc
__ libAudioToolboxUtility.dylib: __ZNK20CAAudioChannelLayouteqERKS_
__ libAudioToolboxUtility.dylib: __ZNK20CAAudioChannelLayoutneERKS_
__ libAudioToolboxUtility.dylib: __ZNK24CAStreamBasicDescription8AsStringEPcmb
__ libAudioToolboxUtility.dylib: __ZNK7CAMutex22IsOwnedByCurrentThreadEv
__ libAudioToolboxUtility.dylib: __ZNK7CAMutex6IsFreeEv
__ libAudioToolboxUtility.dylib: __ZNK8TFileBSD6ExistsEv
__ libAudioToolboxUtility.dylib: __ZNK8TFileBSD9GetLengthEv
__ libAudioToolboxUtility.dylib: __ZNK9CACFArray10GetFloat32EjRf
__ libAudioToolboxUtility.dylib: __ZNK9CACFArray10GetFloat64EjRd
__ libAudioToolboxUtility.dylib: __ZNK9CACFArray12GetCACFArrayEjRS_
__ libAudioToolboxUtility.dylib: __ZNK9CACFArray13GetCACFStringEjR10CACFString
__ libAudioToolboxUtility.dylib: __ZNK9CACFArray13GetDictionaryEjRPK14__CFDictionary
__ libAudioToolboxUtility.dylib: __ZNK9CACFArray17GetCACFDictionaryEjR14CACFDictionary
__ libAudioToolboxUtility.dylib: __ZNK9CACFArray7GetBoolEjRb
__ libAudioToolboxUtility.dylib: __ZNK9CACFArray7GetDataEjRPK8__CFData
__ libAudioToolboxUtility.dylib: __ZNK9CACFArray9GetSInt64EjRx
__ libAudioToolboxUtility.dylib: __ZNK9CACFArray9GetStringEjRPK10__CFString
__ libAudioToolboxUtility.dylib: __ZNK9CACFArray9GetUInt32EjRj
__ libAudioToolboxUtility.dylib: __ZTV11XMachServer
__ libAudioToolboxUtility.dylib: __ZTV14XPC_Connection
__ libAudioToolboxUtility.dylib: __ZTV14XPC_Dictionary
__ libAudioToolboxUtility.dylib: __ZTV19SharableMemoryBlock
__ libAudioToolboxUtility.dylib: __ZTVN19SharableMemoryBlock14XPCClientTokenE
__ libAudioToolboxUtility.dylib: __ZTVN19SharableMemoryBlock14XPCServerTokenE
__ libAudioToolboxUtility.dylib: __ZThn80_N11XMachServer8PortDiedEj
__ libAudioToolboxUtility.dylib: __ZlsR12CASerializerRK15AudioValueRange
__ libAudioToolboxUtility.dylib: __ZlsR12CASerializerRK18AudioChannelLayout
__ libAudioToolboxUtility.dylib: __ZlsR12CASerializerRK27AudioStreamBasicDescription
__ libAudioToolboxUtility.dylib: __ZlsR12CASerializerRKPK10__CFString
__ libAudioToolboxUtility.dylib: __ZrsR14CADeserializerR15AudioValueRange
__ libAudioToolboxUtility.dylib: __ZrsR14CADeserializerR27AudioStreamBasicDescription
__ libAudioToolboxUtility.dylib: __ZrsR14CADeserializerRPK10__CFString
__ libAudioToolboxUtility.dylib: _gBogusAuditToken
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: _NSVersionOfLinkTimeLibrary
__ libSystem.B.dylib: _OSAtomicDequeue
__ libSystem.B.dylib: _OSAtomicEnqueue
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: ___udivti3
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_error_termination_imminent
__ libSystem.B.dylib: __xpc_type_bool
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_data
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_double
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: __xpc_type_uint64
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _atof
__ libSystem.B.dylib: _atoi
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _cosf
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_after_f
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_f
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_pthread_root_queue_create
__ libSystem.B.dylib: _dispatch_queue_attr_make_initially_inactive
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_qos_class_floor
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_workloop_create_inactive
__ libSystem.B.dylib: _dispatch_workloop_set_scheduler_priority
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fputc
__ libSystem.B.dylib: _fputs
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fseek
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _ftell
__ libSystem.B.dylib: _funopen
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _localeconv
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _log2
__ libSystem.B.dylib: _log2f
__ libSystem.B.dylib: _lround
__ libSystem.B.dylib: _lseek
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_msg_destroy
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_port_get_refs
__ libSystem.B.dylib: _mach_port_mod_refs
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_default_purgeable_zone
__ libSystem.B.dylib: _malloc_make_nonpurgeable
__ libSystem.B.dylib: _malloc_make_purgeable
__ libSystem.B.dylib: _malloc_zone_free
__ libSystem.B.dylib: _malloc_zone_malloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _mig_dealloc_reply_port
__ libSystem.B.dylib: _mig_get_reply_port
__ libSystem.B.dylib: _mig_put_reply_port
__ libSystem.B.dylib: _mkpath_np
__ libSystem.B.dylib: _mkstemps
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _pthread_attr_destroy
__ libSystem.B.dylib: _pthread_attr_getschedparam
__ libSystem.B.dylib: _pthread_attr_init
__ libSystem.B.dylib: _pthread_attr_setschedparam
__ libSystem.B.dylib: _pthread_attr_setschedpolicy
__ libSystem.B.dylib: _pthread_equal
__ libSystem.B.dylib: _pthread_mach_thread_np
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_trylock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_destroy
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _strchr
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlcat
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _strstr
__ libSystem.B.dylib: _task_get_special_port
__ libSystem.B.dylib: _thread_policy_set
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _vm_allocate
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _vm_page_size
__ libSystem.B.dylib: _voucher_mach_msg_set
__ libSystem.B.dylib: _vsnprintf
__ libSystem.B.dylib: _work_interval_copy_port
__ libSystem.B.dylib: _work_interval_join_port
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_get_euid
__ libSystem.B.dylib: _xpc_connection_get_pid
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_set_finalizer_f
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_data_get_bytes_ptr
__ libSystem.B.dylib: _xpc_data_get_length
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_double
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_double_get_value
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: _xpc_uint64_get_value
__ libSystem.B.dylib: dyld_stub_binder
__ libbsm.0.dylib: _audit_token_to_au32
__ libc++.1.dylib: __ZNKSt13runtime_error4whatEv
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNKSt9exception4whatEv
__ libc++.1.dylib: __ZNSt11logic_errorC1EPKc
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt11logic_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
__ libc++.1.dylib: __ZNSt11logic_errorD1Ev
__ libc++.1.dylib: __ZNSt12domain_errorD1Ev
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt12out_of_rangeD1Ev
__ libc++.1.dylib: __ZNSt13runtime_errorC1EPKc
__ libc++.1.dylib: __ZNSt13runtime_errorC2EPKc
__ libc++.1.dylib: __ZNSt13runtime_errorC2ERKS_
__ libc++.1.dylib: __ZNSt13runtime_errorD1Ev
__ libc++.1.dylib: __ZNSt13runtime_errorD2Ev
__ libc++.1.dylib: __ZNSt3__111__call_onceERVmPvPFvS2_E
__ libc++.1.dylib: __ZNSt3__111this_thread9sleep_forERKNS_6chrono8durationIxNS_5ratioILl1ELl1000000000EEEEE
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112bad_weak_ptrD1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__118condition_variableD1Ev
__ libc++.1.dylib: __ZNSt3__119__shared_mutex_base11lock_sharedEv
__ libc++.1.dylib: __ZNSt3__119__shared_mutex_base13unlock_sharedEv
__ libc++.1.dylib: __ZNSt3__119__shared_mutex_base4lockEv
__ libc++.1.dylib: __ZNSt3__119__shared_mutex_base6unlockEv
__ libc++.1.dylib: __ZNSt3__119__shared_mutex_base8try_lockEv
__ libc++.1.dylib: __ZNSt3__119__shared_mutex_baseC1Ev
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count4lockEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__15mutex4lockEv
__ libc++.1.dylib: __ZNSt3__15mutex6unlockEv
__ libc++.1.dylib: __ZNSt3__15mutexD1Ev
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__19to_stringEd
__ libc++.1.dylib: __ZNSt3__19to_stringEi
__ libc++.1.dylib: __ZNSt3__19to_stringEj
__ libc++.1.dylib: __ZNSt9bad_allocC1Ev
__ libc++.1.dylib: __ZNSt9bad_allocD1Ev
__ libc++.1.dylib: __ZNSt9exceptionD2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTIi
__ libc++.1.dylib: __ZTIs
__ libc++.1.dylib: __ZTVN10__cxxabiv116__enum_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv121__vmi_class_type_infoE
__ libc++.1.dylib: __ZTVNSt3__112bad_weak_ptrE
__ libc++.1.dylib: __ZTVSt12domain_error
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZTVSt12out_of_range
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __ZdlPvSt11align_val_t
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: __ZnwmSt11align_val_t
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___cxa_rethrow
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
SequenceEntry : NSObject /usr/lib/libc++.1.dylib
 @property  @? handler
 @property  BOOL running
 @property  BOOL detached

  // instance methods
  -[SequenceEntry handler]
  -[SequenceEntry .cxx_destruct]
  -[SequenceEntry setHandler:]
  -[SequenceEntry running]
  -[SequenceEntry initWithHandler:]
  -[SequenceEntry setRunning:]
  -[SequenceEntry detached]
  -[SequenceEntry setDetached:]


HapticClient : NSObject /usr/lib/libc++.1.dylib <NSXPCListenerDelegate, CHHapticClientInterface>
 @property  BOOL connected
 @property  unsigned long clientID
 @property  NSArray *channelKeys
 @property  BOOL prewarmed
 @property  BOOL running
 @property  int serverProcessID
 @property  double hapticLatency
 @property  @? asyncStopCallback
 @property  @? completionCallback
 @property  @? connectionCallback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HapticClient dealloc]
  -[HapticClient .cxx_destruct]
  -[HapticClient disconnect]
  -[HapticClient .cxx_construct]
  -[HapticClient allocateResources:]
  -[HapticClient releaseResources]
  -[HapticClient running]
  -[HapticClient finish:]
  -[HapticClient stopPrewarm]
  -[HapticClient clientID]
  -[HapticClient setCompletionCallback:]
  -[HapticClient setConnected:]
  -[HapticClient connected]
  -[HapticClient stopRunning]
  -[HapticClient sequenceFinished:error:]
  -[HapticClient clientCompletedWithError:]
  -[HapticClient clientStoppedForReason:error:]
  -[HapticClient initWithSessionID:isShared:error:]
  -[HapticClient hapticLatency]
  -[HapticClient loadHapticEvent:reply:]
  -[HapticClient createCustomAudioEvent:format:frames:options:reply:]
  -[HapticClient copyCustomAudioEvent:options:reply:]
  -[HapticClient removeCustomAudioEvent:reply:]
  -[HapticClient prewarm:]
  -[HapticClient startRunning:]
  -[HapticClient stopRunning:]
  -[HapticClient expectNotifyAfter:]
  -[HapticClient setChannelEventBehavior:channel:]
  -[HapticClient resetChannel:atTime:]
  -[HapticClient startEventAndReturnToken:type:atTime:channel:eventToken:]
  -[HapticClient doSendEvents:atTime:channel:outToken:error:]
  -[HapticClient doScheduleParamCurve:atTime:channel:paramCurve:error:]
  -[HapticClient doScheduleParamCurveWithMemoryReserve:atTime:channel:memoryReserve:paramCurve:error:]
  -[HapticClient sendEvents:atTime:channel:outToken:error:]
  -[HapticClient stopEventWithToken:atTime:channel:]
  -[HapticClient clearEventsFromTime:channel:]
  -[HapticClient setParameter:atTime:value:channel:]
  -[HapticClient scheduleParameterCurve:curve:atTime:channel:error:]
  -[HapticClient loadAndPrepareHapticSequenceFromData:reply:]
  -[HapticClient loadAndPrepareHapticSequenceFromEvents:reply:]
  -[HapticClient loadAndPrepareHapticSequenceFromVibePattern:reply:]
  -[HapticClient setSequenceEventBehavior:behavior:channel:]
  -[HapticClient setSequenceFinishedHandlerForID:finishedHandler:]
  -[HapticClient getSequenceFinishedHandlerForID:]
  -[HapticClient setRunStateForSequenceEntryWithID:running:]
  -[HapticClient detachSequenceEntryforID:]
  -[HapticClient prepareHapticSequence:error:]
  -[HapticClient enableSequenceLooping:enable:error:]
  -[HapticClient setSequenceLoopLength:length:error:]
  -[HapticClient setSequencePlaybackRate:rate:error:]
  -[HapticClient startHapticSequence:atTime:withOffset:]
  -[HapticClient stopHapticSequence:atTime:]
  -[HapticClient pauseHapticSequence:atTime:]
  -[HapticClient resumeHapticSequence:atTime:]
  -[HapticClient seekHapticSequence:toTime:]
  -[HapticClient setSequenceChannelParameter:atTime:value:sequenceID:channel:]
  -[HapticClient clearSequenceEvents:atTime:]
  -[HapticClient detachHapticSequence:]
  -[HapticClient doInit]
  -[HapticClient setupConnectionWithSessionID:isShared:error:]
  -[HapticClient getAsyncDelegateForMethod:errorHandler:]
  -[HapticClient getSyncDelegateForMethod:errorHandler:]
  -[HapticClient setChannelKeys:]
  -[HapticClient setPlayerBehavior:error:]
  -[HapticClient clearAssignedChannels]
  -[HapticClient requestAssignedChannels:error:]
  -[HapticClient removeAssignedChannelID:error:]
  -[HapticClient handleServerConnectionInterruption]
  -[HapticClient handleServerConnectionInvalidation]
  -[HapticClient setupSharedMemory:size:]
  -[HapticClient calculateHapticCommandParamCurveMemorySize:]
  -[HapticClient destroySharedMemory]
  -[HapticClient channelKeys]
  -[HapticClient prewarmed]
  -[HapticClient completionCallback]
  -[HapticClient connectionCallback]
  -[HapticClient setConnectionCallback:]
  -[HapticClient serverProcessID]
  -[HapticClient setServerProcessID:]
  -[HapticClient asyncStopCallback]
  -[HapticClient setAsyncStopCallback:]


BorealisServerSpeakerStateHysteresisNotifier : NSObject /usr/lib/libc++.1.dylib
 @property  NSObject<OS_dispatch_queue> *queue
 @property  float hysteresisDurationSeconds
 @property  BOOL speakerStateListeningEnabled
 @property  @? notificationBlock
 @property  BOOL lastStateSent
 @property  long long generation

  // instance methods
  -[BorealisServerSpeakerStateHysteresisNotifier setQueue:]
  -[BorealisServerSpeakerStateHysteresisNotifier queue]
  -[BorealisServerSpeakerStateHysteresisNotifier .cxx_destruct]
  -[BorealisServerSpeakerStateHysteresisNotifier generation]
  -[BorealisServerSpeakerStateHysteresisNotifier setGeneration:]
  -[BorealisServerSpeakerStateHysteresisNotifier initWithSerialQueue:hysteresisDurationSeconds:notificationBlock:]
  -[BorealisServerSpeakerStateHysteresisNotifier callNotificationBlock:]
  -[BorealisServerSpeakerStateHysteresisNotifier stateChanged:]
  -[BorealisServerSpeakerStateHysteresisNotifier sendState]
  -[BorealisServerSpeakerStateHysteresisNotifier hysteresisDurationSeconds]
  -[BorealisServerSpeakerStateHysteresisNotifier setHysteresisDurationSeconds:]
  -[BorealisServerSpeakerStateHysteresisNotifier speakerStateListeningEnabled]
  -[BorealisServerSpeakerStateHysteresisNotifier setSpeakerStateListeningEnabled:]
  -[BorealisServerSpeakerStateHysteresisNotifier notificationBlock]
  -[BorealisServerSpeakerStateHysteresisNotifier setNotificationBlock:]
  -[BorealisServerSpeakerStateHysteresisNotifier lastStateSent]
  -[BorealisServerSpeakerStateHysteresisNotifier setLastStateSent:]


BorealisServer : NSObject /usr/lib/libc++.1.dylib <NSXPCListenerDelegate, VoiceTriggerInterface>
 @property  NSXPCListener *serverListener
 @property  NSMutableArray *clientConnections
 @property  NSObject<OS_dispatch_queue> *notificationQueue
 @property  ^v mobileAssistantDylib
 @property  ^? afSiriActivationBuiltInMicVoiceFuncPtr
 @property  ^v voiceTriggerDylib
 @property  Class clsVTStateManager
 @property  VTStateManager *vtStateManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BorealisServer init]
  -[BorealisServer dealloc]
  -[BorealisServer .cxx_destruct]
  -[BorealisServer listener:shouldAcceptNewConnection:]
  -[BorealisServer initializeWithReply:]
  -[BorealisServer notificationQueue]
  -[BorealisServer enableVoiceTriggerListening:reply:]
  -[BorealisServer setListeningProperty:reply:]
  -[BorealisServer enableSpeakerStateListening:reply:]
  -[BorealisServer speakerStateActiveReply:]
  -[BorealisServer speakerStateMutedReply:]
  -[BorealisServer updateVoiceTriggerConfiguration:reply:]
  -[BorealisServer voiceTriggerPastDataFramesAvailable:]
  -[BorealisServer hasBargeInSupportReply:]
  -[BorealisServer enableBargeInMode:reply:]
  -[BorealisServer listeningEnabledReply:]
  -[BorealisServer sendVoiceTriggerOccuredNotification:]
  -[BorealisServer sendSpeakerActiveStateChangedNotification:]
  -[BorealisServer sendSpeakerMuteStateChangedNotification:]
  -[BorealisServer heySiriEnabled]
  -[BorealisServer speechDetectionVADCreated]
  -[BorealisServer hardwareSupportsVoiceTrigger]
  -[BorealisServer serverListener]
  -[BorealisServer setServerListener:]
  -[BorealisServer clientConnections]
  -[BorealisServer setClientConnections:]
  -[BorealisServer setNotificationQueue:]
  -[BorealisServer mobileAssistantDylib]
  -[BorealisServer setMobileAssistantDylib:]
  -[BorealisServer afSiriActivationBuiltInMicVoiceFuncPtr]
  -[BorealisServer setAfSiriActivationBuiltInMicVoiceFuncPtr:]
  -[BorealisServer voiceTriggerDylib]
  -[BorealisServer setVoiceTriggerDylib:]
  -[BorealisServer clsVTStateManager]
  -[BorealisServer setClsVTStateManager:]
  -[BorealisServer vtStateManager]
  -[BorealisServer setVtStateManager:]


ServerWrapper : NSObject /usr/lib/libc++.1.dylib
 @property  HapticServerInstance *serverInstance

  // instance methods
  -[ServerWrapper .cxx_destruct]
  -[ServerWrapper contains:]
  -[ServerWrapper initWithServerInstance:]
  -[ServerWrapper serverInstance]


HapticServerInstance : NSObject /usr/lib/libc++.1.dylib <NSXPCListenerDelegate, CHHapticServerInterface>
 @property  HapticServer *master
 @property  unsigned long clientID
 @property  BOOL clientSuspended
 @property  BOOL wasPrewarmedAndSuspended
 @property  BOOL clientInterrupted
 @property  BOOL wasRunningAndSuspended
 @property  BOOL runningInBackground
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HapticServerInstance dealloc]
  -[HapticServerInstance .cxx_destruct]
  -[HapticServerInstance .cxx_construct]
  -[HapticServerInstance stopPrewarm]
  -[HapticServerInstance clientID]
  -[HapticServerInstance stopRunning]
  -[HapticServerInstance master]
  -[HapticServerInstance loadHapticEvent:reply:]
  -[HapticServerInstance createCustomAudioEvent:format:frames:options:reply:]
  -[HapticServerInstance copyCustomAudioEvent:options:reply:]
  -[HapticServerInstance removeCustomAudioEvent:reply:]
  -[HapticServerInstance prewarm:]
  -[HapticServerInstance startRunning:]
  -[HapticServerInstance stopRunning:]
  -[HapticServerInstance getAsyncDelegateForMethod:errorHandler:]
  -[HapticServerInstance getSyncDelegateForMethod:errorHandler:]
  -[HapticServerInstance removeChannel:reply:]
  -[HapticServerInstance requestChannels:reply:]
  -[HapticServerInstance releaseChannels]
  -[HapticServerInstance setPlayerBehavior:reply:]
  -[HapticServerInstance setSessionID:isShared:reply:]
  -[HapticServerInstance allocateClientResources:]
  -[HapticServerInstance releaseClientResources]
  -[HapticServerInstance getHapticLatency:]
  -[HapticServerInstance setChannelEventBehavior:behavior:reply:]
  -[HapticServerInstance loadHapticSequenceFromData:reply:]
  -[HapticServerInstance loadHapticSequenceFromEvents:reply:]
  -[HapticServerInstance loadVibePattern:reply:]
  -[HapticServerInstance setSequenceEventBehavior:behavior:channelIndex:reply:]
  -[HapticServerInstance prepareHapticSequence:reply:]
  -[HapticServerInstance detachSequence:]
  -[HapticServerInstance debugExpectNotifyOnFinishAfter:reply:]
  -[HapticServerInstance notifyClientOnStopWithReason:error:]
  -[HapticServerInstance handleClientRouteChange:]
  -[HapticServerInstance handleClientApplicationStateChange:]
  -[HapticServerInstance muteClientForRingerSwitch:]
  -[HapticServerInstance fadeClientForSessionInterruption:fadeTime:fadeLevel:stopAfterFade:]
  -[HapticServerInstance unmuteClientAfterSessionInterruption:]
  -[HapticServerInstance handleClientSessionInterruptionCommand:dictionary:]
  -[HapticServerInstance initWithMaster:id:connection:outError:]
  -[HapticServerInstance handleConnectionError]
  -[HapticServerInstance setupAudioSessionFromID:isShared:error:]
  -[HapticServerInstance setupCompletionWatchdogTimerForTime:]
  -[HapticServerInstance resetCompletionWatchdogTimer]
  -[HapticServerInstance clientSuspended]
  -[HapticServerInstance setClientSuspended:]
  -[HapticServerInstance wasPrewarmedAndSuspended]
  -[HapticServerInstance setWasPrewarmedAndSuspended:]
  -[HapticServerInstance clientInterrupted]
  -[HapticServerInstance setClientInterrupted:]
  -[HapticServerInstance runningInBackground]
  -[HapticServerInstance setRunningInBackground:]
  -[HapticServerInstance wasRunningAndSuspended]
  -[HapticServerInstance setWasRunningAndSuspended:]


HapticServer : NSObject /usr/lib/libc++.1.dylib <NSXPCListenerDelegate>
 @property  unsigned long initCount
 @property  ^{ServerManager={RTLocked<std::map manager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HapticServer init]
  -[HapticServer dealloc]
  -[HapticServer .cxx_destruct]
  -[HapticServer listener:shouldAcceptNewConnection:]
  -[HapticServer manager]
  -[HapticServer .cxx_construct]
  -[HapticServer cleanup]
  -[HapticServer stopPrewarm]
  -[HapticServer entryWithID:]
  -[HapticServer incrementChannelID]
  -[HapticServer getChannelID]
  -[HapticServer doStopRunning:]
  -[HapticServer doStartRunning:]
  -[HapticServer doStopPrewarm:]
  -[HapticServer doPrewarm:]
  -[HapticServer doReleaseClientResources:]
  -[HapticServer incrementInit:]
  -[HapticServer addListener:forAudioSessionID:]
  -[HapticServer removeProcessEntry:]
  -[HapticServer removeListener:withAudioSessionID:]
  -[HapticServer doStopRunningForInterrupt:]
  -[HapticServer setupSSSClient]
  -[HapticServer loadSynthPreset]
  -[HapticServer decrementInit]
  -[HapticServer incrementPrewarmCountForAudio:haptics:]
  -[HapticServer decrementPrewarmCountAndStopAudio:stopHaptics:]
  -[HapticServer incrementRunningCountForAudio:haptics:]
  -[HapticServer decrementRunningCountAndStopAudio:stopHaptics:]
  -[HapticServer HandleInterruptionForSessionID:command:dictionary:]
  -[HapticServer addProcessEntry:]
  -[HapticServer initCount]
  -[HapticServer startPrewarm]
  -[HapticServer playVibePattern:gain:synchronizer:flags:atTime:completionHandler:]
  -[HapticServer cancelPatternWithOptions:]


AVHapticEvent : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  double time
 @property  double duration
 @property  BOOL isParameter
 @property  unsigned long eventCategory
 @property  unsigned long eventType
 @property  unsigned long paramType
 @property  float value
 @property  ^{AVHapticPlayerFixedParameter=Qf} fixedParams
 @property  AVHapticPlayerParameterCurve *parameterCurve
 @property  long long fixedParamCount

  // class methods
  +[AVHapticEvent supportsSecureCoding]
  +[AVHapticEvent eventWithEventType:time:]
  +[AVHapticEvent eventWithEventType:time:duration:]
  +[AVHapticEvent eventWithEventType:time:parameters:count:]
  +[AVHapticEvent eventWithEventType:time:parameters:count:duration:]
  +[AVHapticEvent eventWithParameter:value:time:]
  +[AVHapticEvent eventWithParameterCurve:]

  // instance methods
  -[AVHapticEvent encodeWithCoder:]
  -[AVHapticEvent initWithCoder:]
  -[AVHapticEvent .cxx_destruct]
  -[AVHapticEvent value]
  -[AVHapticEvent duration]
  -[AVHapticEvent time]
  -[AVHapticEvent eventType]
  -[AVHapticEvent fixedParams]
  -[AVHapticEvent fixedParamCount]
  -[AVHapticEvent paramType]
  -[AVHapticEvent parameterCurve]
  -[AVHapticEvent eventCategory]
  -[AVHapticEvent isParameter]
  -[AVHapticEvent initWithEventType:time:duration:]
  -[AVHapticEvent initWithEventType:time:parameters:count:duration:]
  -[AVHapticEvent initWithParameter:value:time:]
  -[AVHapticEvent initWithParameterCurve:]


AVHapticPlayerParameterCurveControlPoint : NSObject /usr/lib/libc++.1.dylib
 @property  double time
 @property  float value

  // instance methods
  -[AVHapticPlayerParameterCurveControlPoint value]
  -[AVHapticPlayerParameterCurveControlPoint setValue:]
  -[AVHapticPlayerParameterCurveControlPoint time]
  -[AVHapticPlayerParameterCurveControlPoint setTime:]
  -[AVHapticPlayerParameterCurveControlPoint initWithTime:value:]


AVHapticPlayerParameterCurve : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long type
 @property  double time
 @property  unsigned long shape
 @property  NSArray *controlPoints

  // instance methods
  -[AVHapticPlayerParameterCurve init]
  -[AVHapticPlayerParameterCurve type]
  -[AVHapticPlayerParameterCurve setType:]
  -[AVHapticPlayerParameterCurve .cxx_destruct]
  -[AVHapticPlayerParameterCurve time]
  -[AVHapticPlayerParameterCurve shape]
  -[AVHapticPlayerParameterCurve setShape:]
  -[AVHapticPlayerParameterCurve setTime:]
  -[AVHapticPlayerParameterCurve controlPoints]
  -[AVHapticPlayerParameterCurve initWithType:relativeTime:shape:controlPoints:]


AVHapticPlayerChannel : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long chanID
 @property  HapticClient *client
 @property  unsigned long eventBehavior

  // instance methods
  -[AVHapticPlayerChannel invalidate]
  -[AVHapticPlayerChannel .cxx_destruct]
  -[AVHapticPlayerChannel client]
  -[AVHapticPlayerChannel setClient:]
  -[AVHapticPlayerChannel initWithChannelID:client:]
  -[AVHapticPlayerChannel eventBehavior]
  -[AVHapticPlayerChannel setEventBehavior:]
  -[AVHapticPlayerChannel startEvent:atTime:token:error:]
  -[AVHapticPlayerChannel startEvent:atTime:parameters:count:token:error:]
  -[AVHapticPlayerChannel sendEvents:atTime:error:]
  -[AVHapticPlayerChannel stopEvent:atTime:error:]
  -[AVHapticPlayerChannel clearEvents:error:]
  -[AVHapticPlayerChannel setParameter:value:atTime:error:]
  -[AVHapticPlayerChannel scheduleParameterCurve:curve:atTime:error:]
  -[AVHapticPlayerChannel resetAtTime:error:]
  -[AVHapticPlayerChannel chanID]
  -[AVHapticPlayerChannel setChanID:]


AVHapticPlayer : NSObject /usr/lib/libc++.1.dylib
 @property  HapticClient *client
 @property  BOOL resourcesAllocated
 @property  @? stopRunningHandler
 @property  unsigned long behavior
 @property  NSArray *channels
 @property  double currentMediaTime
 @property  double hapticLatency
 @property  @? connectionErrorHandler

  // class methods
  +[AVHapticPlayer isSupported]

  // instance methods
  -[AVHapticPlayer dealloc]
  -[AVHapticPlayer .cxx_destruct]
  -[AVHapticPlayer client]
  -[AVHapticPlayer channels]
  -[AVHapticPlayer prewarmWithCompletionHandler:]
  -[AVHapticPlayer stopPrewarm]
  -[AVHapticPlayer currentMediaTime]
  -[AVHapticPlayer behavior]
  -[AVHapticPlayer setBehavior:]
  -[AVHapticPlayer stopRunning]
  -[AVHapticPlayer initWithSessionID:error:]
  -[AVHapticPlayer deallocateRenderResources]
  -[AVHapticPlayer startRunningWithCompletionHandler:]
  -[AVHapticPlayer allocateRenderResourcesWithCompletionHandler:]
  -[AVHapticPlayer hapticLatency]
  -[AVHapticPlayer loadHapticEvent:reply:]
  -[AVHapticPlayer createCustomAudioEvent:format:frames:options:reply:]
  -[AVHapticPlayer copyCustomAudioEvent:options:reply:]
  -[AVHapticPlayer removeCustomAudioEvent:reply:]
  -[AVHapticPlayer expectNotifyAfter:]
  -[AVHapticPlayer loadAndPrepareHapticSequenceFromData:reply:]
  -[AVHapticPlayer loadAndPrepareHapticSequenceFromEvents:reply:]
  -[AVHapticPlayer loadAndPrepareHapticSequenceFromVibePattern:reply:]
  -[AVHapticPlayer prepareHapticSequence:error:]
  -[AVHapticPlayer enableSequenceLooping:enable:error:]
  -[AVHapticPlayer setSequenceLoopLength:length:error:]
  -[AVHapticPlayer setSequencePlaybackRate:rate:error:]
  -[AVHapticPlayer stopHapticSequence:atTime:]
  -[AVHapticPlayer pauseHapticSequence:atTime:]
  -[AVHapticPlayer resumeHapticSequence:atTime:]
  -[AVHapticPlayer seekHapticSequence:toTime:]
  -[AVHapticPlayer clearSequenceEvents:atTime:]
  -[AVHapticPlayer detachHapticSequence:]
  -[AVHapticPlayer releaseChannels]
  -[AVHapticPlayer doInitWithSessionID:isShared:error:]
  -[AVHapticPlayer initAndReturnError:]
  -[AVHapticPlayer initWithSessionID:sessionIsShared:error:]
  -[AVHapticPlayer getBehavior]
  -[AVHapticPlayer setNumberOfChannels:error:]
  -[AVHapticPlayer addChannel:]
  -[AVHapticPlayer removeChannel:error:]
  -[AVHapticPlayer setConnectionErrorHandler:]
  -[AVHapticPlayer connectionErrorHandler]
  -[AVHapticPlayer invalidateChannels]
  -[AVHapticPlayer stopRunningWithCompletionHandler:]
  -[AVHapticPlayer finishWithCompletionHandler:]
  -[AVHapticPlayer playHapticSequence:atTime:offset:]
  -[AVHapticPlayer setSequenceChannelParam:atTime:channel:param:value:error:]
  -[AVHapticPlayer stopRunningHandler]
  -[AVHapticPlayer setStopRunningHandler:]
  -[AVHapticPlayer resourcesAllocated]


AVHapticSequence : NSObject /usr/lib/libc++.1.dylib
 @property  AVHapticPlayer *player
 @property  unsigned long seqID
 @property  double duration
 @property  double lastStartTime
 @property  unsigned long activeChannel
 @property  unsigned long eventBehavior
 @property  BOOL loopingEnabled
 @property  float playbackRate
 @property  unsigned long channelCount
 @property  @? completionHandler

  // instance methods
  -[AVHapticSequence init]
  -[AVHapticSequence dealloc]
  -[AVHapticSequence .cxx_destruct]
  -[AVHapticSequence duration]
  -[AVHapticSequence completionHandler]
  -[AVHapticSequence setCompletionHandler:]
  -[AVHapticSequence setDuration:]
  -[AVHapticSequence stopAtTime:error:]
  -[AVHapticSequence player]
  -[AVHapticSequence setPlayer:]
  -[AVHapticSequence initWithData:player:error:]
  -[AVHapticSequence playAtTime:offset:error:]
  -[AVHapticSequence prepareToPlayAndReturnError:]
  -[AVHapticSequence activateChannelByIndex:atTime:error:]
  -[AVHapticSequence setVolume:atTime:error:]
  -[AVHapticSequence eventBehavior]
  -[AVHapticSequence setEventBehavior:]
  -[AVHapticSequence initWithEvents:player:error:]
  -[AVHapticSequence initWithDictionary:player:error:]
  -[AVHapticSequence setLoopingEnabled:error:]
  -[AVHapticSequence getChannelCount]
  -[AVHapticSequence loopingEnabled]
  -[AVHapticSequence setLoopingEnabled:]
  -[AVHapticSequence setLoopLength:error:]
  -[AVHapticSequence playbackRate]
  -[AVHapticSequence setPlaybackRate:]
  -[AVHapticSequence pauseAtTime:error:]
  -[AVHapticSequence resumeAtTime:error:]
  -[AVHapticSequence seekToTime:error:]
  -[AVHapticSequence setParameter:value:channel:atTime:error:]
  -[AVHapticSequence cancelAndReturnError:]
  -[AVHapticSequence seqID]
  -[AVHapticSequence setSeqID:]
  -[AVHapticSequence lastStartTime]
  -[AVHapticSequence setLastStartTime:]
  -[AVHapticSequence activeChannel]
  -[AVHapticSequence setActiveChannel:]
  -[AVHapticSequence channelCount]


AVHapticParameterCurveValue : NSObject /usr/lib/libc++.1.dylib
 @property  double time
 @property  float value

  // instance methods
  -[AVHapticParameterCurveValue value]
  -[AVHapticParameterCurveValue setValue:]
  -[AVHapticParameterCurveValue time]
  -[AVHapticParameterCurveValue setTime:]


01 00 0100 /System/Library/PrivateFrameworks/AudioToolboxCore.framework/AudioToolboxCore: AudioComponentRegistrar 
01 00 0b00 /usr/lib/libAudioStatistics.dylib: CAReporter 
01 00 0e00 /usr/lib/libAudioToolboxUtility.dylib: CAXPCObject 
01 00 0a00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOrientationObserver 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
