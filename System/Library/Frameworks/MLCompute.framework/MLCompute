|| __DATA.__common _kMLCTensorSizeValueUnknown
|| __DATA.__data _kMLCCurrentANEIRVersion
|| __DATA.__data _kMaxFeatureChannelMPSImage
|| __DATA.__data _kMinimumMultiGPUBatchSize
|| __DATA.__objc_data _OBJC_CLASS_$_MLCANEDeviceOps
|| __DATA.__objc_data _OBJC_CLASS_$_MLCActivationDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_MLCActivationLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCAdamOptimizer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCArithmeticLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCBatchNormalizationLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCCPUDeviceOps
|| __DATA.__objc_data _OBJC_CLASS_$_MLCCompareLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCConcatenationLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCConditionalLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCControlTreeNode
|| __DATA.__objc_data _OBJC_CLASS_$_MLCConvolutionDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_MLCConvolutionLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCCustomLayerTensor
|| __DATA.__objc_data _OBJC_CLASS_$_MLCDataHelper
|| __DATA.__objc_data _OBJC_CLASS_$_MLCDevice
|| __DATA.__objc_data _OBJC_CLASS_$_MLCDeviceANE
|| __DATA.__objc_data _OBJC_CLASS_$_MLCDeviceCPU
|| __DATA.__objc_data _OBJC_CLASS_$_MLCDeviceGPU
|| __DATA.__objc_data _OBJC_CLASS_$_MLCDeviceGPUHeapAllocator
|| __DATA.__objc_data _OBJC_CLASS_$_MLCDeviceOps
|| __DATA.__objc_data _OBJC_CLASS_$_MLCDeviceOptimizer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCDropoutLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCEmbeddingDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_MLCEmbeddingLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCErrors
|| __DATA.__objc_data _OBJC_CLASS_$_MLCFullyConnectedLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCGPUDeviceOps
|| __DATA.__objc_data _OBJC_CLASS_$_MLCGPUHelper
|| __DATA.__objc_data _OBJC_CLASS_$_MLCGramMatrixLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCGraph
|| __DATA.__objc_data _OBJC_CLASS_$_MLCGroupNormalizationLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCInferenceGraph
|| __DATA.__objc_data _OBJC_CLASS_$_MLCInstanceNormalizationLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCLSTMDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_MLCLSTMLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCLayerNormGPUDeviceOps
|| __DATA.__objc_data _OBJC_CLASS_$_MLCLayerNormalizationLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCLog
|| __DATA.__objc_data _OBJC_CLASS_$_MLCLossDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_MLCLossLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCMHACPUDeviceOps
|| __DATA.__objc_data _OBJC_CLASS_$_MLCMHAGPUDeviceOps
|| __DATA.__objc_data _OBJC_CLASS_$_MLCMatMulDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_MLCMatMulLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCMultiGPUDeviceOps
|| __DATA.__objc_data _OBJC_CLASS_$_MLCMultiheadAttentionDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_MLCMultiheadAttentionLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCOptimizer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCOptimizerDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_MLCPaddingLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCPhiLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCPlatformInfo
|| __DATA.__objc_data _OBJC_CLASS_$_MLCPoolingDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_MLCPoolingLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCRMSPropOptimizer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCRNNCPUDeviceOps
|| __DATA.__objc_data _OBJC_CLASS_$_MLCRNNGPUDeviceOps
|| __DATA.__objc_data _OBJC_CLASS_$_MLCReductionLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCReshapeLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCSGDOptimizer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCSliceCPUDeviceOps
|| __DATA.__objc_data _OBJC_CLASS_$_MLCSliceLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCSoftmaxLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCSplitLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCStrings
|| __DATA.__objc_data _OBJC_CLASS_$_MLCTensor
|| __DATA.__objc_data _OBJC_CLASS_$_MLCTensorData
|| __DATA.__objc_data _OBJC_CLASS_$_MLCTensorDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_MLCTensorOptimizerDeviceData
|| __DATA.__objc_data _OBJC_CLASS_$_MLCTensorParameter
|| __DATA.__objc_data _OBJC_CLASS_$_MLCTrainingGraph
|| __DATA.__objc_data _OBJC_CLASS_$_MLCTransposeLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCUpsampleLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MLCYOLOLossDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_MLCYOLOLossLayer
|| __DATA.__objc_data _OBJC_CLASS_$__MLCANEArithmeticParameters
|| __DATA.__objc_data _OBJC_CLASS_$__MLCANEConcatParameters
|| __DATA.__objc_data _OBJC_CLASS_$__MLCANEConvolutionParameters
|| __DATA.__objc_data _OBJC_CLASS_$__MLCANEIOSurfaceObject
|| __DATA.__objc_data _OBJC_CLASS_$__MLCANEMatMulParameters
|| __DATA.__objc_data _OBJC_CLASS_$__MLCANEModelObject
|| __DATA.__objc_data _OBJC_CLASS_$__MLCANENeuronParameters
|| __DATA.__objc_data _OBJC_CLASS_$__MLCANENormalizationParameters
|| __DATA.__objc_data _OBJC_CLASS_$__MLCANEPoolingParameters
|| __DATA.__objc_data _OBJC_CLASS_$__MLCANEReductionParameters
|| __DATA.__objc_data _OBJC_CLASS_$__MLCANEUpsampleParameters
|| __DATA.__objc_data _OBJC_CLASS_$__MLCANEWeightFileOps
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUArithmetic
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUCompare
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUConvolution
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUDropout
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUEmbedding
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUFullyConnected
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUGramMatrix
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPULSTM
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPULayer
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUMHAttention
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUMatMul
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUNeuron
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUPooling
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUReduction
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUReshape
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUSlice
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUSoftmax
|| __DATA.__objc_data _OBJC_CLASS_$__MLCCPUSplit
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUArithmetic
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUBatchNormDataSource
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUBatchNormalization
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUCompare
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUConvolution
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUConvolutionTransposePadding
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUDropout
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUFullyConnected
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUGramMatrix
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUGroupNormDataSource
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUGroupNormalization
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUInstanceNormDataSource
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUInstanceNormalization
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPULSTM
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPULayer
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPULayerNormalization
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUMHAttention
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUMatMul
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUNeuron
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUPadding
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUPooling
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUReduction
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUReshape
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUSlice
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUSoftmax
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUSplit
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUTranspose
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUUpsample
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGPUWeightsConvolution
|| __DATA.__objc_data _OBJC_CLASS_$__MLCGaussianRandomGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCANEDeviceOps
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCActivationDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCActivationLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCAdamOptimizer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCArithmeticLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCBatchNormalizationLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCCPUDeviceOps
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCCompareLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCConcatenationLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCConditionalLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCControlTreeNode
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCConvolutionDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCConvolutionLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCCustomLayerTensor
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCDataHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCDeviceANE
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCDeviceCPU
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCDeviceGPU
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCDeviceGPUHeapAllocator
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCDeviceOps
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCDeviceOptimizer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCDropoutLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCEmbeddingDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCEmbeddingLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCErrors
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCFullyConnectedLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCGPUDeviceOps
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCGPUHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCGramMatrixLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCGraph
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCGroupNormalizationLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCInferenceGraph
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCInstanceNormalizationLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCLSTMDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCLSTMLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCLayerNormGPUDeviceOps
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCLayerNormalizationLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCLog
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCLossDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCLossLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCMHACPUDeviceOps
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCMHAGPUDeviceOps
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCMatMulDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCMatMulLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCMultiGPUDeviceOps
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCMultiheadAttentionDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCMultiheadAttentionLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCOptimizer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCOptimizerDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCPaddingLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCPhiLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCPlatformInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCPoolingDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCPoolingLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCRMSPropOptimizer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCRNNCPUDeviceOps
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCRNNGPUDeviceOps
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCReductionLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCReshapeLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCSGDOptimizer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCSliceCPUDeviceOps
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCSliceLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCSoftmaxLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCSplitLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCStrings
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCTensor
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCTensorData
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCTensorDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCTensorOptimizerDeviceData
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCTensorParameter
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCTrainingGraph
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCTransposeLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCUpsampleLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCYOLOLossDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_MLCYOLOLossLayer
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCANEArithmeticParameters
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCANEConcatParameters
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCANEConvolutionParameters
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCANEIOSurfaceObject
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCANEMatMulParameters
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCANEModelObject
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCANENeuronParameters
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCANENormalizationParameters
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCANEPoolingParameters
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCANEReductionParameters
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCANEUpsampleParameters
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCANEWeightFileOps
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUArithmetic
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUCompare
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUConvolution
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUDropout
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUEmbedding
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUFullyConnected
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUGramMatrix
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPULSTM
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPULayer
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUMHAttention
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUMatMul
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUNeuron
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUPooling
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUReduction
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUReshape
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUSlice
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUSoftmax
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCCPUSplit
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUArithmetic
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUBatchNormDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUBatchNormalization
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUCompare
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUConvolution
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUConvolutionTransposePadding
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUDropout
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUFullyConnected
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUGramMatrix
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUGroupNormDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUGroupNormalization
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUInstanceNormDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUInstanceNormalization
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPULSTM
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPULayer
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPULayerNormalization
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUMHAttention
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUMatMul
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUNeuron
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUPadding
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUPooling
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUReduction
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUReshape
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUSlice
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUSoftmax
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUSplit
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUTranspose
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUUpsample
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGPUWeightsConvolution
|| __DATA.__objc_data _OBJC_METACLASS_$__MLCGaussianRandomGenerator
|| __TEXT.__const _MLCDeviceTypeANE
|| __TEXT.__const _kMLCANEDMANumByteAlignment
|| __TEXT.__const _kMLCANEIOInterleaves
|| __TEXT.__const _kMLCANEKernelSparsityEpsilon
|| __TEXT.__const _kMLCANEKernelSparsityThreshold
|| __TEXT.__const _kMaxCPUOptimizerMomentumBuffers
|| __TEXT.__text _ANE_BuildANECKernelSize
|| __TEXT.__text _ANE_BuildANECPadding
|| __TEXT.__text _ANE_BuildANECStep
|| __TEXT.__text _ANE_BuildANECTensorDesc
|| __TEXT.__text _ANE_BuildArithmeticUnit
|| __TEXT.__text _ANE_BuildBiasParams
|| __TEXT.__text _ANE_BuildNeuronParams
|| __TEXT.__text _ANE_BuildNeuronUnit
|| __TEXT.__text _ANE_CalculateIOInterleave
|| __TEXT.__text _ANE_CalculateImageSizeForTensor
|| __TEXT.__text _ANE_CalculatePlaneStrideForTensor
|| __TEXT.__text _ANE_CalculateRowStrideForTensor
|| __TEXT.__text _ANE_CompileArithmeticLayer
|| __TEXT.__text _ANE_CompileConcatLayer
|| __TEXT.__text _ANE_CompileConvolutionLayer
|| __TEXT.__text _ANE_CompileMatMulLayer
|| __TEXT.__text _ANE_CompileNeuronLayer
|| __TEXT.__text _ANE_CompileNormalizationLayer
|| __TEXT.__text _ANE_CompilePoolingLayer
|| __TEXT.__text _ANE_CompileReductionLayer
|| __TEXT.__text _ANE_CompileUpsampleLayer
|| __TEXT.__text _ANE_CompressSparseKernel
|| __TEXT.__text _ANE_ConvertFp32ToFp16
|| __TEXT.__text _ANE_ConvertInputTensor
|| __TEXT.__text _ANE_CreateArithmeticLayer
|| __TEXT.__text _ANE_CreateConcatLayer
|| __TEXT.__text _ANE_CreateConvolutionLayer
|| __TEXT.__text _ANE_CreateMatMulLayer
|| __TEXT.__text _ANE_CreateNeuronLayer
|| __TEXT.__text _ANE_CreateNormalizationLayer
|| __TEXT.__text _ANE_CreatePoolingLayer
|| __TEXT.__text _ANE_CreateReductionLayer
|| __TEXT.__text _ANE_CreateUnit
|| __TEXT.__text _ANE_CreateUpsampleLayer
|| __TEXT.__text _ANE_GetTensorWidthAndHeight
|| __TEXT.__text _ANE_GetTensorWidthAndHeightStrides
|| __TEXT.__text _ANE_ReadOutputTensor
|| __TEXT.__text _ANE_ValidateConcatLayer
|| __TEXT.__text _ANE_ValidateConvolutionLayer
|| __TEXT.__text _ANE_ValidateInputOutputTensors
|| __TEXT.__text _ANE_ValidateNeuronLayer
|| __TEXT.__text _ANE_ValidatePoolingLayer
|| __TEXT.__text _ANE_ValidateUpsampleLayer
|| __TEXT.__text _CPU_BNNSDataTypeSizeInBytes
|| __TEXT.__text _CPU_BuildBNNSNDArrayDescriptor
|| __TEXT.__text _CPU_BuildBNNSNDArrayDescriptorColMajor
|| __TEXT.__text _CPU_BuildBNNSNDArrayDescriptorForBetaOrGammaDeltas
|| __TEXT.__text _CPU_BuildBNNSNDArrayDescriptorRowMajor
|| __TEXT.__text _CPU_BuildBNNSNormalizationInputOutputParams
|| __TEXT.__text _CPU_BuildBNNSNormalizationParams
|| __TEXT.__text _CPU_BuildPermuteBNNSNDArrayDescriptor
|| __TEXT.__text _CPU_CompileFusedConvolutionNormalizationAndNeuronLayer
|| __TEXT.__text _CPU_CompileLossLayer
|| __TEXT.__text _CPU_CompileNormalizationLayer
|| __TEXT.__text _CPU_CompilePaddingLayer
|| __TEXT.__text _CPU_CompileTransposeLayer
|| __TEXT.__text _CPU_CompileUpsampleLayer
|| __TEXT.__text _CPU_CompileYOLOLossLayer
|| __TEXT.__text _CPU_CreateAdamOptimizer
|| __TEXT.__text _CPU_CreateFusedConvolutionNormalizationAndNeuronLayer
|| __TEXT.__text _CPU_CreateLossLayer
|| __TEXT.__text _CPU_CreateNormalizationLayer
|| __TEXT.__text _CPU_CreateOptimizerDeviceDataForTensor
|| __TEXT.__text _CPU_CreatePaddingLayer
|| __TEXT.__text _CPU_CreateRMSPropOptimizer
|| __TEXT.__text _CPU_CreateSGDOptimizer
|| __TEXT.__text _CPU_CreateTransposeLayer
|| __TEXT.__text _CPU_CreateUpsampleLayer
|| __TEXT.__text _CPU_CreateYOLOLossLayer
|| __TEXT.__text _CPU_SetBatchStride
|| __TEXT.__text _CPU_SetOptimizerDataForConvolutionLayer
|| __TEXT.__text _CPU_SetOptimizerDataForNormalizationLayer
|| __TEXT.__text _GPU_AdjustFeatureChannelBeyondMax
|| __TEXT.__text _GPU_AdjustReshapeResultShape
|| __TEXT.__text _GPU_AllocateExportableGammaBetaStatesWithDevice
|| __TEXT.__text _GPU_AllocateMemoryForMomentum
|| __TEXT.__text _GPU_AllocateResourceForMultiGPUTraining
|| __TEXT.__text _GPU_AssociateDataSourceToTensors
|| __TEXT.__text _GPU_CreateAdamOptimizer
|| __TEXT.__text _GPU_CreateLossLayer
|| __TEXT.__text _GPU_CreateOptimizerDeviceDataForTensor
|| __TEXT.__text _GPU_CreateOptimizerDeviceVectorDataForTensor
|| __TEXT.__text _GPU_CreateRMSPropOptimizer
|| __TEXT.__text _GPU_CreateSGDOptimizer
|| __TEXT.__text _GPU_CreateYOLOLossLayer
|| __TEXT.__text _GPU_GetDataSourceFromTensors
|| __TEXT.__text _GPU_GetDataType
|| __TEXT.__text _GPU_GetTensorWidthAndHeight
|| __TEXT.__text _GPU_GetTensorWidthAndHeightStrides
|| __TEXT.__text _GPU_ScaleMPSImageBatchWithKernel
|| __TEXT.__text _GPU_SetFullyConnectedPaddingPolicy
|| __TEXT.__text _GPU_SetPaddingPolicyForLayer
|| __TEXT.__text _GPU_SetPoolingLayerPaddingPolicy
|| __TEXT.__text _MLCActivationTypeDebugDescription
|| __TEXT.__text _MLCArithmeticOperationDebugDescription
|| __TEXT.__text _MLCConvolutionTypeDebugDescription
|| __TEXT.__text _MLCLSTMResultModeDebugDescription
|| __TEXT.__text _MLCLossTypeDebugDescription
|| __TEXT.__text _MLCPaddingPolicyDebugDescription
|| __TEXT.__text _MLCPaddingTypeDebugDescription
|| __TEXT.__text _MLCPoolingTypeDebugDescription
|| __TEXT.__text _MLCPredicateTypeDebugDescription
|| __TEXT.__text _MLCReductionTypeDebugDescription
|| __TEXT.__text _MLCSampleModeDebugDescription
|| __TEXT.__text _MLCSoftmaxOperationDebugDescription
|| __TEXT.__text _convertDataLayout
|| __TEXT.__text _convertHiddenBNNStoMLC
|| __TEXT.__text _convertNCHWToCWHN
|| __TEXT.__text _convertNCHWtoTNC
|| __TEXT.__text _convertNCtoTNC
|| __TEXT.__text _convertNSEtoTNC
|| __TEXT.__text _convertTNCtoNC
|| __TEXT.__text _convertTNCtoNCHW
|| __TEXT.__text _convertTNCtoNTC
|| __TEXT.__text _createArrayOfMPSMatrixSlicesFromBatch
|| __TEXT.__text _deviceParameterWithVectors
|| __TEXT.__text _encodeMPSImageBatchToMPSTemporaryNDArray
|| __TEXT.__text _encodeMPSTemporaryNDArrayToMPSImageBatch
|| __TEXT.__text _makeMPSTemporaryNDArrayFromMPSImageBatch
|| __TEXT.__text _missingMPSNeuronType
|| __TEXT.__text _rotateWeightsTensorBy180Degree
|| __TEXT.__text _setBNNSActivation
__ ANECompiler: _ANECUnitValidatorCreate
__ ANECompiler: _ANECUnitValidatorDelete
__ ANECompiler: _ANECValidateConcatLayer
__ ANECompiler: _ANECValidateConvLayer
__ ANECompiler: _ANECValidateNeuronLayer
__ ANECompiler: _ANECValidatePoolLayer
__ Accelerate: _BNNSApplyMultiheadAttention
__ Accelerate: _BNNSApplyMultiheadAttentionBackward
__ Accelerate: _BNNSArithmeticFilterApplyBackwardBatch
__ Accelerate: _BNNSArithmeticFilterApplyBatch
__ Accelerate: _BNNSCompareTensor
__ Accelerate: _BNNSComputeLSTMTrainingCacheCapacity
__ Accelerate: _BNNSCopy
__ Accelerate: _BNNSDirectApplyLSTMBatchBackward
__ Accelerate: _BNNSDirectApplyLSTMBatchTrainingCaching
__ Accelerate: _BNNSFilterApplyBackwardBatch
__ Accelerate: _BNNSFilterApplyBackwardTwoInputBatch
__ Accelerate: _BNNSFilterApplyBatch
__ Accelerate: _BNNSFilterApplyTwoInputBatch
__ Accelerate: _BNNSFilterCreateFusedLayer
__ Accelerate: _BNNSFilterCreateLayerActivation
__ Accelerate: _BNNSFilterCreateLayerArithmetic
__ Accelerate: _BNNSFilterCreateLayerConvolution
__ Accelerate: _BNNSFilterCreateLayerDropout
__ Accelerate: _BNNSFilterCreateLayerFullyConnected
__ Accelerate: _BNNSFilterCreateLayerGram
__ Accelerate: _BNNSFilterCreateLayerLoss
__ Accelerate: _BNNSFilterCreateLayerMultiheadAttention
__ Accelerate: _BNNSFilterCreateLayerNormalization
__ Accelerate: _BNNSFilterCreateLayerPadding
__ Accelerate: _BNNSFilterCreateLayerPermute
__ Accelerate: _BNNSFilterCreateLayerPooling
__ Accelerate: _BNNSFilterCreateLayerReduction
__ Accelerate: _BNNSFilterCreateLayerResize
__ Accelerate: _BNNSFilterCreateLayerTensorContraction
__ Accelerate: _BNNSFilterCreateLayerTransposedConvolution
__ Accelerate: _BNNSFilterDestroy
__ Accelerate: _BNNSFusedFilterApplyBackwardBatch
__ Accelerate: _BNNSFusedFilterApplyBatch
__ Accelerate: _BNNSLossFilterApplyBackwardBatch
__ Accelerate: _BNNSLossFilterApplyBatch
__ Accelerate: _BNNSNormalizationFilterApplyBackwardBatch
__ Accelerate: _BNNSNormalizationFilterApplyBatch
__ Accelerate: _BNNSOptimizerStep
__ Accelerate: _vDSP_vfill
__ Accelerate: _vImageConvert_Planar16FtoPlanarF
__ Accelerate: _vImageConvert_PlanarFtoPlanar16F
__ AppleNeuralEngine: _OBJC_CLASS_$__ANEClient
__ AppleNeuralEngine: _OBJC_CLASS_$__ANEDeviceInfo
__ AppleNeuralEngine: _OBJC_CLASS_$__ANEIOSurfaceObject
__ AppleNeuralEngine: _OBJC_CLASS_$__ANEModel
__ AppleNeuralEngine: _OBJC_CLASS_$__ANEQoSMapper
__ AppleNeuralEngine: _OBJC_CLASS_$__ANERequest
__ AppleNeuralEngine: _kANEFModelANECIRValue
__ AppleNeuralEngine: _kANEFModelDescriptionKey
__ AppleNeuralEngine: _kANEFModelInputSymbolIndexArrayKey
__ AppleNeuralEngine: _kANEFModelOutputSymbolIndexArrayKey
__ AppleNeuralEngine: _kANEFModelProceduresArrayKey
__ AppleNeuralEngine: _kANEFModelTypeKey
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFDictionaryCreateCopy
__ CoreFoundation: _CFRelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: _kCFAllocatorDefault
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSPageSize
__ Foundation: _NSRoundUpToMultipleOfPageSize
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ IOSurface: _IOSurfaceCreate
__ IOSurface: _IOSurfaceGetAllocSize
__ IOSurface: _IOSurfaceGetBaseAddress
__ IOSurface: _IOSurfaceLock
__ IOSurface: _IOSurfaceUnlock
__ Metal: _MTLCreateSystemDefaultDevice
__ Metal: _OBJC_CLASS_$_MTLFunctionConstantValues
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ MetalPerformanceShaders: _MPSGetTemporaryBufferFromCommandBufferCache
__ MetalPerformanceShaders: _MPSImageBatchIncrementReadCount
__ MetalPerformanceShaders: _MPSStateBatchIncrementReadCount
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNAdd
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNAddGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNBatchNormalization
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNBatchNormalizationGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNBatchNormalizationState
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNBatchNormalizationStatistics
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNBatchNormalizationStatisticsGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNBinaryKernel
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNConvolution
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNConvolutionDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNConvolutionGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNConvolutionTranspose
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNConvolutionTransposeGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNDepthWiseConvolutionDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNDilatedPoolingMax
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNDilatedPoolingMaxGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNDropout
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNDropoutGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNFullyConnected
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNFullyConnectedGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNGroupNormalization
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNGroupNormalizationGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNInstanceNormalization
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNInstanceNormalizationGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNLogSoftMax
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNLogSoftMaxGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNLoss
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNLossDataDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNLossDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNLossLabels
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNMultiply
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNMultiplyGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNNeuron
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNNeuronGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNNormalizationGammaAndBetaState
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNNormalizationMeanAndVarianceState
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNPoolingAverage
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNPoolingAverageGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNPoolingL2Norm
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNPoolingL2NormGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNPoolingMax
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNPoolingMaxGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNSoftMax
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNSoftMaxGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNSubtract
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNSubtractGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNUpsamplingBilinear
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNUpsamplingBilinearGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNUpsamplingNearest
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNUpsamplingNearestGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNYOLOLoss
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCNNYOLOLossDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSCommandBuffer
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImage
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageCopyToMatrix
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSKernel
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSLSTMDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSMatrix
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSMatrixCopy
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSMatrixCopyDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSMatrixCopyToImage
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSMatrixDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSMatrixMultiplication
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSMatrixNeuron
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSMatrixSoftMax
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSMatrixSoftMaxGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSMatrixSum
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayACos
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayACosGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayACosh
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayACoshGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayASin
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayASinGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayASinh
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayASinhGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayATan
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayATanGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayATanh
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayATanhGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayCeil
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayCeilGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayCos
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayCosGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayCosh
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayCoshGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayDivision
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayDivisionPrimaryGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayDivisionSecondaryGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayExponent
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayExponentBase2
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayExponentBase2Gradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayExponentGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayFloor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayFloorGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayGradientState
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayLogSoftMax
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayLogSoftMaxGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayLogarithm
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayLogarithmBase2
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayLogarithmBase2Gradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayLogarithmGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayMultiaryGradientKernel
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayMultiaryKernel
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayPower
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayPowerPrimaryGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayPowerSecondaryGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayReverseSquareRoot
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayReverseSquareRootGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayRound
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayRoundGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArraySin
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArraySinGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArraySinh
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArraySinhGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArraySoftMax
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArraySoftMaxGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArraySquareRoot
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArraySquareRootGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayStridedSlice
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayStridedSliceGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayTan
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayTanGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayTanh
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNDArrayTanhGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNCompare
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNDefaultPadding
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNForwardLoss
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNGramMatrixCalculation
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNGramMatrixCalculationGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNInitialGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNLossGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNNeuronDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNOptimizerAdam
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNOptimizerDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNOptimizerRMSProp
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNOptimizerStochasticGradientDescent
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNPad
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNPadGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNPermute
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNPermuteGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNReduceColumnMax
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNReduceColumnMin
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNReduceColumnSum
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNReduceFeatureChannelsArgumentMax
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNReduceFeatureChannelsArgumentMin
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNReduceFeatureChannelsMax
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNReduceFeatureChannelsMin
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNReduceFeatureChannelsSum
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNReduceRowMax
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNReduceRowMin
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNReduceRowSum
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNReshape
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNReshapeGradient
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSNNSlice
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSRNNMatrixInferenceLayer
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSRNNMatrixTrainingLayer
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSTemporaryImage
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSTemporaryMatrix
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSTemporaryNDArray
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSVector
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSVectorDescriptor
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strncpy_chk
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dladdr
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _drand48
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _log2f
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _memset_pattern4
__ libSystem.B.dylib: _memset_pattern8
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _rand_r
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _srand48
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _valloc
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
MLCGPUHelper : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MLCGPUHelper synchronizeResource:commandBuffer:]
  +[MLCGPUHelper mtlStorageMode]
  +[MLCGPUHelper mtlResourceOptions]
  +[MLCGPUHelper didModifyRange:buffer:]
  +[MLCGPUHelper concatChannelsForwardWithParams:sourceImageBatch:resultImageBatch:commandBuffer:device:deviceIndex:]
  +[MLCGPUHelper copyMPSImageBatchToMatrixBatch:commandBuffer:sourceImageBatch:destinationMatrixBatch:]
  +[MLCGPUHelper copyMatrixBatchToMPSImageBatch:commandBuffer:sourceMatrixBatch:destinationImageBatch:]


_MLCGPUGroupNormDataSource : NSObject /usr/lib/libSystem.B.dylib <MPSCNNGroupNormalizationDataSource>
 @property  MLCTensor *betas
 @property  MLCTensor *gammas
 @property  float varianceEpsilon
 @property  unsigned long numberOfFeatureChannels
 @property  unsigned long numberOfGroups
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_MLCGPUGroupNormDataSource datasourceWithChannels:groupCount:beta:gamma:epsilon:]

  // instance methods
  -[_MLCGPUGroupNormDataSource copyWithZone:]
  -[_MLCGPUGroupNormDataSource beta]
  -[_MLCGPUGroupNormDataSource epsilon]
  -[_MLCGPUGroupNormDataSource load]
  -[_MLCGPUGroupNormDataSource setNumberOfGroups:]
  -[_MLCGPUGroupNormDataSource betas]
  -[_MLCGPUGroupNormDataSource .cxx_destruct]
  -[_MLCGPUGroupNormDataSource numberOfGroups]
  -[_MLCGPUGroupNormDataSource label]
  -[_MLCGPUGroupNormDataSource gammas]
  -[_MLCGPUGroupNormDataSource purge]
  -[_MLCGPUGroupNormDataSource gamma]
  -[_MLCGPUGroupNormDataSource numberOfFeatureChannels]
  -[_MLCGPUGroupNormDataSource initWithChannels:groupCount:beta:gamma:epsilon:]
  -[_MLCGPUGroupNormDataSource varianceEpsilon]


MLCMHACPUDeviceOps : MLCCPUDeviceOps
 @property  BOOL hasAttnBias
 @property  BOOL hasKeyMask
 @property  BOOL hasAttnMask
 @property  NSData *keyMask
 @property  NSData *attnMask
 @property  unsigned long keyMaskStride
 @property  unsigned long backpropCacheSize
 @property  NSData *backpropCacheData
 @property  NSArray *attnBiasDeltaData
 @property  NSMutableArray *weightsMomentumDeltaDataArray
 @property  NSMutableArray *biasMomentumDeltaDataArray

  // class methods
  +[MLCMHACPUDeviceOps deviceOpsWithType:params:inDeltaData:outDeltaData:weightsDeltaData:biasDeltaData:weightsMomentumData:biasMomentumData:]

  // instance methods
  -[MLCMHACPUDeviceOps .cxx_destruct]
  -[MLCMHACPUDeviceOps keyMask]
  -[MLCMHACPUDeviceOps initWithType:params:inDeltaData:outDeltaData:weightsDeltaData:biasDeltaData:weightsMomentumData:biasMomentumData:betaDeltaData:gammaDeltaData:betaMomentumData:gammaMomentumData:]
  -[MLCMHACPUDeviceOps hasAttnBias]
  -[MLCMHACPUDeviceOps setHasAttnBias:]
  -[MLCMHACPUDeviceOps hasKeyMask]
  -[MLCMHACPUDeviceOps setHasKeyMask:]
  -[MLCMHACPUDeviceOps hasAttnMask]
  -[MLCMHACPUDeviceOps setHasAttnMask:]
  -[MLCMHACPUDeviceOps setKeyMask:]
  -[MLCMHACPUDeviceOps attnMask]
  -[MLCMHACPUDeviceOps setAttnMask:]
  -[MLCMHACPUDeviceOps keyMaskStride]
  -[MLCMHACPUDeviceOps setKeyMaskStride:]
  -[MLCMHACPUDeviceOps backpropCacheSize]
  -[MLCMHACPUDeviceOps setBackpropCacheSize:]
  -[MLCMHACPUDeviceOps backpropCacheData]
  -[MLCMHACPUDeviceOps setBackpropCacheData:]
  -[MLCMHACPUDeviceOps attnBiasDeltaData]
  -[MLCMHACPUDeviceOps setAttnBiasDeltaData:]
  -[MLCMHACPUDeviceOps weightsMomentumDeltaDataArray]
  -[MLCMHACPUDeviceOps setWeightsMomentumDeltaDataArray:]
  -[MLCMHACPUDeviceOps biasMomentumDeltaDataArray]
  -[MLCMHACPUDeviceOps setBiasMomentumDeltaDataArray:]


_MLCGPUConvolution : _MLCGPULayer
  // class methods
  +[_MLCGPUConvolution setOptimizerDataForDevice:deviceOps:weights:bias:]
  +[_MLCGPUConvolution setGradientComputeWeightsAndBiasOnly:deviceOps:]
  +[_MLCGPUConvolution compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCGPUConvolution layerWithDevice:weights:biasTerms:descriptor:neuronDescriptor:]

  // instance methods
  -[_MLCGPUConvolution initWithDevice:weights:biasTerms:descriptor:neuronDescriptor:]


_MLCGPUWeightsConvolution : NSObject /usr/lib/libSystem.B.dylib <NSCopying, MPSCNNConvolutionDataSource>
 @property  MPSCNNConvolutionDescriptor *descMPS
 @property  MLCConvolutionDescriptor *desc
 @property  MLCActivationDescriptor *neuronDesc
 @property  MLCTensor *biasTerm
 @property  MLCTensor *weight
 @property  MLCTensor *localWeight
 @property  MLCTensor *localBiasTerm
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_MLCGPUWeightsConvolution weightWithDescriptor:biasTerms:weights:neuronDescriptor:]
  +[_MLCGPUWeightsConvolution weightWithDescriptor:biasTerms:weights:]

  // instance methods
  -[_MLCGPUWeightsConvolution desc]
  -[_MLCGPUWeightsConvolution copyWithZone:]
  -[_MLCGPUWeightsConvolution biasTerms]
  -[_MLCGPUWeightsConvolution weight]
  -[_MLCGPUWeightsConvolution kernelWeightsDataType]
  -[_MLCGPUWeightsConvolution load]
  -[_MLCGPUWeightsConvolution weights]
  -[_MLCGPUWeightsConvolution .cxx_destruct]
  -[_MLCGPUWeightsConvolution label]
  -[_MLCGPUWeightsConvolution dataType]
  -[_MLCGPUWeightsConvolution descriptor]
  -[_MLCGPUWeightsConvolution weightsLayout]
  -[_MLCGPUWeightsConvolution purge]
  -[_MLCGPUWeightsConvolution descMPS]
  -[_MLCGPUWeightsConvolution initWithDescriptor:biasTerms:weights:neuronDescriptor:]
  -[_MLCGPUWeightsConvolution biasTerm]
  -[_MLCGPUWeightsConvolution neuronDesc]
  -[_MLCGPUWeightsConvolution localWeight]
  -[_MLCGPUWeightsConvolution setLocalWeight:]
  -[_MLCGPUWeightsConvolution localBiasTerm]
  -[_MLCGPUWeightsConvolution setLocalBiasTerm:]


MLCActivationDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  int activationType
 @property  float a
 @property  float b
 @property  float c

  // class methods
  +[MLCActivationDescriptor descriptorWithType:]
  +[MLCActivationDescriptor defaultParametersForType:]
  +[MLCActivationDescriptor descriptorWithType:a:]
  +[MLCActivationDescriptor descriptorWithType:a:b:]
  +[MLCActivationDescriptor descriptorWithType:a:b:c:]

  // instance methods
  -[MLCActivationDescriptor copyWithZone:]
  -[MLCActivationDescriptor a]
  -[MLCActivationDescriptor c]
  -[MLCActivationDescriptor isEqual:]
  -[MLCActivationDescriptor b]
  -[MLCActivationDescriptor activationType]
  -[MLCActivationDescriptor initWithType:a:b:c:]


_MLCCPUSoftmax : _MLCCPULayer
  // class methods
  +[_MLCCPUSoftmax compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPUSoftmax layerWithDevice:operation:dimension:]

  // instance methods
  -[_MLCCPUSoftmax initWithDevice:operation:dimension:]


_MLCGPUPadding : _MLCGPULayer
  // class methods
  +[_MLCGPUPadding mpsImageEdgeModeFor:]
  +[_MLCGPUPadding layerWithDevice:paddingType:paddingLeft:paddingRight:paddingTop:paddingBottom:constantValue:]

  // instance methods
  -[_MLCGPUPadding initWithDevice:paddingType:paddingLeft:paddingRight:paddingTop:paddingBottom:constantValue:]


MLCBatchNormalizationLayer : MLCLayer
 @property  unsigned long featureChannelCount
 @property  MLCTensor *mean
 @property  MLCTensor *variance
 @property  MLCTensor *beta
 @property  MLCTensor *gamma
 @property  MLCTensorParameter *betaParameter
 @property  MLCTensorParameter *gammaParameter
 @property  float varianceEpsilon
 @property  float momentum

  // class methods
  +[MLCBatchNormalizationLayer layerWithFeatureChannelCount:mean:variance:beta:gamma:varianceEpsilon:momentum:]
  +[MLCBatchNormalizationLayer layerWithFeatureChannelCount:mean:variance:beta:gamma:varianceEpsilon:]

  // instance methods
  -[MLCBatchNormalizationLayer mean]
  -[MLCBatchNormalizationLayer beta]
  -[MLCBatchNormalizationLayer .cxx_destruct]
  -[MLCBatchNormalizationLayer momentum]
  -[MLCBatchNormalizationLayer variance]
  -[MLCBatchNormalizationLayer gamma]
  -[MLCBatchNormalizationLayer varianceEpsilon]
  -[MLCBatchNormalizationLayer initWithFeatureChannelCount:mean:variance:beta:gamma:varianceEpsilon:momentum:]
  -[MLCBatchNormalizationLayer featureChannelCount]
  -[MLCBatchNormalizationLayer betaParameter]
  -[MLCBatchNormalizationLayer gammaParameter]
  -[MLCBatchNormalizationLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCBatchNormalizationLayer allocateDataForOptimizer:]
  -[MLCBatchNormalizationLayer allocatedDataSizeForTraining:optimizer:]
  -[MLCBatchNormalizationLayer summarizedDOTDescription]
  -[MLCBatchNormalizationLayer linkAssociatedTensors]
  -[MLCBatchNormalizationLayer unlinkAssociatedTensors]
  -[MLCBatchNormalizationLayer isValidTrainingParameters]


_MLCGPUInstanceNormalization : _MLCGPULayer
  // class methods
  +[_MLCGPUInstanceNormalization layerWithDevice:numOfFeatureChannels:beta:gamma:varianceEpsilon:momentum:]

  // instance methods
  -[_MLCGPUInstanceNormalization initWithDevice:numOfFeatureChannels:beta:gamma:varianceEpsilon:momentum:]


_MLCGPUMatMul : _MLCGPULayer
  // class methods
  +[_MLCGPUMatMul compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCGPUMatMul layerWithDevice:descriptor:sourceTensors:resultTensor:]

  // instance methods
  -[_MLCGPUMatMul initWithDevice:descriptor:sourceTensors:resultTensor:]


_MLCGPUNeuron : _MLCGPULayer
  // class methods
  +[_MLCGPUNeuron mpsNeurontypeFrom:]
  +[_MLCGPUNeuron createMPSNeuronDescriptorWith:]
  +[_MLCGPUNeuron layerWithDevice:descriptor:]

  // instance methods
  -[_MLCGPUNeuron initWithDevice:descriptor:]


MLCPoolingLayer : MLCLayer
 @property  MLCPoolingDescriptor *descriptor

  // class methods
  +[MLCPoolingLayer layerWithDescriptor:]

  // instance methods
  -[MLCPoolingLayer .cxx_destruct]
  -[MLCPoolingLayer initWithDescriptor:]
  -[MLCPoolingLayer descriptor]
  -[MLCPoolingLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCPoolingLayer summarizedDOTDescription]


_MLCGPUBatchNormDataSource : NSObject /usr/lib/libSystem.B.dylib <MPSCNNBatchNormalizationDataSource>
 @property  unsigned long channels
 @property  MLCTensor *means
 @property  MLCTensor *variances
 @property  MLCTensor *betas
 @property  MLCTensor *gammas
 @property  float varianceEpsilon
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_MLCGPUBatchNormDataSource datasourceWithChannels:mean:variance:beta:gamma:epsilon:]

  // instance methods
  -[_MLCGPUBatchNormDataSource copyWithZone:]
  -[_MLCGPUBatchNormDataSource mean]
  -[_MLCGPUBatchNormDataSource beta]
  -[_MLCGPUBatchNormDataSource epsilon]
  -[_MLCGPUBatchNormDataSource load]
  -[_MLCGPUBatchNormDataSource betas]
  -[_MLCGPUBatchNormDataSource means]
  -[_MLCGPUBatchNormDataSource .cxx_destruct]
  -[_MLCGPUBatchNormDataSource label]
  -[_MLCGPUBatchNormDataSource gammas]
  -[_MLCGPUBatchNormDataSource variance]
  -[_MLCGPUBatchNormDataSource purge]
  -[_MLCGPUBatchNormDataSource gamma]
  -[_MLCGPUBatchNormDataSource numberOfFeatureChannels]
  -[_MLCGPUBatchNormDataSource channels]
  -[_MLCGPUBatchNormDataSource varianceEpsilon]
  -[_MLCGPUBatchNormDataSource initWithChannels:mean:variance:beta:gamma:epsilon:]
  -[_MLCGPUBatchNormDataSource variances]


_MLCGPUInstanceNormDataSource : NSObject /usr/lib/libSystem.B.dylib <MPSCNNInstanceNormalizationDataSource>
 @property  unsigned long channels
 @property  MLCTensor *betas
 @property  MLCTensor *gammas
 @property  float varianceEpsilon
 @property  unsigned long numberOfFeatureChannels
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_MLCGPUInstanceNormDataSource datasourceWithChannels:beta:gamma:epsilon:]

  // instance methods
  -[_MLCGPUInstanceNormDataSource copyWithZone:]
  -[_MLCGPUInstanceNormDataSource beta]
  -[_MLCGPUInstanceNormDataSource epsilon]
  -[_MLCGPUInstanceNormDataSource load]
  -[_MLCGPUInstanceNormDataSource betas]
  -[_MLCGPUInstanceNormDataSource .cxx_destruct]
  -[_MLCGPUInstanceNormDataSource label]
  -[_MLCGPUInstanceNormDataSource gammas]
  -[_MLCGPUInstanceNormDataSource purge]
  -[_MLCGPUInstanceNormDataSource gamma]
  -[_MLCGPUInstanceNormDataSource numberOfFeatureChannels]
  -[_MLCGPUInstanceNormDataSource channels]
  -[_MLCGPUInstanceNormDataSource varianceEpsilon]
  -[_MLCGPUInstanceNormDataSource initWithChannels:beta:gamma:epsilon:]


_MLCCPULayer : NSObject /usr/lib/libSystem.B.dylib
 @property  MLCDeviceCPU *device
 @property  ^^v filter
 @property  NSArray *deviceOps

  // class methods
  +[_MLCCPULayer compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPULayer compileWithDevice:deviceOps:sourceTensors:resultTensors:]

  // instance methods
  -[_MLCCPULayer setFilter:]
  -[_MLCCPULayer device]
  -[_MLCCPULayer filter]
  -[_MLCCPULayer dealloc]
  -[_MLCCPULayer .cxx_destruct]
  -[_MLCCPULayer deviceOps]
  -[_MLCCPULayer setDeviceOps:]
  -[_MLCCPULayer initWithDevice:deviceOps:]


MLCPaddingLayer : MLCLayer <NSCopying>
 @property  int paddingType
 @property  unsigned long paddingLeft
 @property  unsigned long paddingRight
 @property  unsigned long paddingTop
 @property  unsigned long paddingBottom
 @property  float constantValue

  // class methods
  +[MLCPaddingLayer layerWithReflectionPadding:]
  +[MLCPaddingLayer layerWithSymmetricPadding:]
  +[MLCPaddingLayer layerWithZeroPadding:]
  +[MLCPaddingLayer layerWithConstantPadding:constantValue:]

  // instance methods
  -[MLCPaddingLayer copyWithZone:]
  -[MLCPaddingLayer paddingTop]
  -[MLCPaddingLayer constantValue]
  -[MLCPaddingLayer paddingLeft]
  -[MLCPaddingLayer paddingRight]
  -[MLCPaddingLayer paddingBottom]
  -[MLCPaddingLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCPaddingLayer summarizedDOTDescription]
  -[MLCPaddingLayer initWithPaddingType:paddingSizes:constantValue:]
  -[MLCPaddingLayer paddingType]
  -[MLCPaddingLayer resultSizeFromSourceSize:dimension:]
  -[MLCPaddingLayer resultTensorFromSources:]
  -[MLCPaddingLayer isSupportedShapeForTensorSources:]


_MLCANEConcatParameters : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *concatParams

  // class methods
  +[_MLCANEConcatParameters concatUnitParametersWith:]

  // instance methods
  -[_MLCANEConcatParameters .cxx_destruct]
  -[_MLCANEConcatParameters initWithConcatParams:]
  -[_MLCANEConcatParameters concatParams]


_MLCCPUSplit : _MLCCPULayer
  // class methods
  +[_MLCCPUSplit layerWithDevice:dimension:]

  // instance methods
  -[_MLCCPUSplit initWithDevice:dimension:]


MLCGroupNormalizationLayer : MLCLayer
 @property  unsigned long featureChannelCount
 @property  unsigned long groupCount
 @property  MLCTensor *beta
 @property  MLCTensor *gamma
 @property  MLCTensorParameter *betaParameter
 @property  MLCTensorParameter *gammaParameter
 @property  float varianceEpsilon

  // class methods
  +[MLCGroupNormalizationLayer layerWithFeatureChannelCount:groupCount:beta:gamma:varianceEpsilon:]

  // instance methods
  -[MLCGroupNormalizationLayer groupCount]
  -[MLCGroupNormalizationLayer beta]
  -[MLCGroupNormalizationLayer .cxx_destruct]
  -[MLCGroupNormalizationLayer gamma]
  -[MLCGroupNormalizationLayer varianceEpsilon]
  -[MLCGroupNormalizationLayer featureChannelCount]
  -[MLCGroupNormalizationLayer betaParameter]
  -[MLCGroupNormalizationLayer gammaParameter]
  -[MLCGroupNormalizationLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCGroupNormalizationLayer allocateDataForOptimizer:]
  -[MLCGroupNormalizationLayer allocatedDataSizeForTraining:optimizer:]
  -[MLCGroupNormalizationLayer summarizedDOTDescription]
  -[MLCGroupNormalizationLayer linkAssociatedTensors]
  -[MLCGroupNormalizationLayer unlinkAssociatedTensors]
  -[MLCGroupNormalizationLayer isValidTrainingParameters]
  -[MLCGroupNormalizationLayer resultSizeFromSourceSize:dimension:]
  -[MLCGroupNormalizationLayer initWithFeatureChannelCount:groupCount:beta:gamma:varianceEpsilon:]


MLCANEDeviceOps : MLCDeviceOps
 @property  int deviceOpType
 @property  NSArray *units
 @property  id params

  // class methods
  +[MLCANEDeviceOps deviceOpsWithType:params:]

  // instance methods
  -[MLCANEDeviceOps params]
  -[MLCANEDeviceOps units]
  -[MLCANEDeviceOps .cxx_destruct]
  -[MLCANEDeviceOps setUnits:]
  -[MLCANEDeviceOps deviceOpType]
  -[MLCANEDeviceOps initWithType:params:]


MLCLossLayer : MLCLayer
 @property  MLCTensor *lossLabels
 @property  MLCLossDescriptor *descriptor
 @property  MLCTensor *weights

  // class methods
  +[MLCLossLayer layerWithDescriptor:]
  +[MLCLossLayer layerWithDescriptor:weights:]
  +[MLCLossLayer softmaxCrossEntropyLossWithReductionType:labelSmoothing:classCount:weight:]
  +[MLCLossLayer softmaxCrossEntropyLossWithReductionType:labelSmoothing:classCount:weights:]
  +[MLCLossLayer categoricalCrossEntropyLossWithReductionType:labelSmoothing:classCount:weight:]
  +[MLCLossLayer categoricalCrossEntropyLossWithReductionType:labelSmoothing:classCount:weights:]
  +[MLCLossLayer sigmoidCrossEntropyLossWithReductionType:labelSmoothing:weight:]
  +[MLCLossLayer sigmoidCrossEntropyLossWithReductionType:labelSmoothing:weights:]
  +[MLCLossLayer categoricalCrossEntropyLossWithReductionType:weight:]
  +[MLCLossLayer categoricalCrossEntropyLossWithReductionType:weights:]
  +[MLCLossLayer logLossWithReductionType:epsilon:weight:]
  +[MLCLossLayer logLossWithReductionType:epsilon:weights:]
  +[MLCLossLayer huberLossWithReductionType:delta:weight:]
  +[MLCLossLayer huberLossWithReductionType:delta:weights:]
  +[MLCLossLayer meanAbsoluteErrorLossWithReductionType:weight:]
  +[MLCLossLayer meanAbsoluteErrorLossWithReductionType:weights:]
  +[MLCLossLayer meanSquaredErrorLossWithReductionType:weight:]
  +[MLCLossLayer meanSquaredErrorLossWithReductionType:weights:]
  +[MLCLossLayer hingeLossWithReductionType:weight:]
  +[MLCLossLayer hingeLossWithReductionType:weights:]
  +[MLCLossLayer cosineDistanceLossWithReductionType:weight:]
  +[MLCLossLayer cosineDistanceLossWithReductionType:weights:]

  // instance methods
  -[MLCLossLayer weights]
  -[MLCLossLayer .cxx_destruct]
  -[MLCLossLayer descriptor]
  -[MLCLossLayer lossLabels]
  -[MLCLossLayer setLossLabels:]
  -[MLCLossLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCLossLayer summarizedDOTDescription]
  -[MLCLossLayer linkAssociatedTensors]
  -[MLCLossLayer unlinkAssociatedTensors]
  -[MLCLossLayer resultSizeFromSourceSize:dimension:]
  -[MLCLossLayer resultTensorFromSources:]
  -[MLCLossLayer isSupportedShapeForTensorSources:]
  -[MLCLossLayer initWithDescriptor:weights:]


_MLCANEModelObject : NSObject /usr/lib/libSystem.B.dylib
 @property  _ANEClient *connection
 @property  _ANEModel *model
 @property  _ANERequest *request
 @property  NSDictionary *ANEFOptions
 @property  unsigned int qos
 @property  NSDictionary *graphPlist

  // class methods
  +[_MLCANEModelObject objectWithModel:connection:request:options:qos:graphPlist:]

  // instance methods
  -[_MLCANEModelObject qos]
  -[_MLCANEModelObject dealloc]
  -[_MLCANEModelObject setRequest:]
  -[_MLCANEModelObject .cxx_destruct]
  -[_MLCANEModelObject model]
  -[_MLCANEModelObject connection]
  -[_MLCANEModelObject request]
  -[_MLCANEModelObject initWithModel:connection:request:options:qos:graphPlist:]
  -[_MLCANEModelObject ANEFOptions]
  -[_MLCANEModelObject graphPlist]


MLCFullyConnectedLayer : MLCLayer
 @property  int accumulatorPrecisionOption
 @property  MLCConvolutionDescriptor *descriptor
 @property  MLCTensor *weights
 @property  MLCTensor *biases
 @property  MLCTensorParameter *weightsParameter
 @property  MLCTensorParameter *biasesParameter

  // class methods
  +[MLCFullyConnectedLayer layerWithWeights:biases:descriptor:]

  // instance methods
  -[MLCFullyConnectedLayer biases]
  -[MLCFullyConnectedLayer weights]
  -[MLCFullyConnectedLayer .cxx_destruct]
  -[MLCFullyConnectedLayer accumulatorPrecisionOption]
  -[MLCFullyConnectedLayer descriptor]
  -[MLCFullyConnectedLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCFullyConnectedLayer allocateDataForOptimizer:]
  -[MLCFullyConnectedLayer allocatedDataSizeForTraining:optimizer:]
  -[MLCFullyConnectedLayer summarizedDOTDescription]
  -[MLCFullyConnectedLayer linkAssociatedTensors]
  -[MLCFullyConnectedLayer unlinkAssociatedTensors]
  -[MLCFullyConnectedLayer resultTensorFromSources:]
  -[MLCFullyConnectedLayer isSupportedShapeForTensorSources:]
  -[MLCFullyConnectedLayer initWithWeights:biases:descriptor:]
  -[MLCFullyConnectedLayer weightsParameter]
  -[MLCFullyConnectedLayer biasesParameter]


_MLCCPUMatMul : _MLCCPULayer
  // class methods
  +[_MLCCPUMatMul compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPUMatMul layerWithDevice:descriptor:inferenceOnly:]

  // instance methods
  -[_MLCCPUMatMul initWithDevice:descriptor:inferenceOnly:]


MLCTensorParameter : NSObject /usr/lib/libSystem.B.dylib
 @property  MLCDevice *device
 @property  MLCTensor *tensor
 @property  BOOL isUpdatable

  // class methods
  +[MLCTensorParameter parameterWithTensor:optimizerData:]
  +[MLCTensorParameter parameterWithTensor:]

  // instance methods
  -[MLCTensorParameter setIsUpdatable:]
  -[MLCTensorParameter device]
  -[MLCTensorParameter .cxx_destruct]
  -[MLCTensorParameter tensor]
  -[MLCTensorParameter setDevice:]
  -[MLCTensorParameter isUpdatable]
  -[MLCTensorParameter allocateDataForOptimizer:device:isVector:]
  -[MLCTensorParameter initWithTensor:optimizerData:]


_MLCCPUDropout : _MLCCPULayer
  // class methods
  +[_MLCCPUDropout compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPUDropout layerWithDevice:rate:seed:]

  // instance methods
  -[_MLCCPUDropout initWithDevice:rate:seed:]


_MLCANENeuronParameters : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *neuronParams

  // class methods
  +[_MLCANENeuronParameters neuronUnitParametersWith:]

  // instance methods
  -[_MLCANENeuronParameters .cxx_destruct]
  -[_MLCANENeuronParameters neuronParams]
  -[_MLCANENeuronParameters initWithNeuronParams:]


_MLCANENormalizationParameters : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *normalizationParams
 @property  NSDictionary *neuronParams

  // class methods
  +[_MLCANENormalizationParameters normalizationUnitParametersWith:neuronParams:]

  // instance methods
  -[_MLCANENormalizationParameters .cxx_destruct]
  -[_MLCANENormalizationParameters neuronParams]
  -[_MLCANENormalizationParameters initWithNormalizationParams:neuronParams:]
  -[_MLCANENormalizationParameters normalizationParams]


MLCLayer : NSObject /usr/lib/libSystem.B.dylib <MLCLayerCompiling>
 @property  unsigned long layerID
 @property  NSString *originalLabel
 @property  unsigned long kernelWidth
 @property  unsigned long kernelHeight
 @property  unsigned long dilationRateInX
 @property  unsigned long dilationRateInY
 @property  unsigned long strideInX
 @property  unsigned long strideInY
 @property  unsigned long paddingSizeInX
 @property  unsigned long paddingSizeInY
 @property  MLCDevice *device
 @property  NSArray *deviceOps
 @property  BOOL skipLayer
 @property  BOOL allocateGradientTensors
 @property  BOOL isLastFusedLayer
 @property  BOOL disableUpdate
 @property  BOOL isUpdatable
 @property  BOOL isTrainable
 @property  NSMutableArray *sourceTensors
 @property  NSMutableArray *resultTensors
 @property  NSMutableArray *sourceGradientTensors
 @property  NSMutableArray *resultGradientTensors
 @property  NSMutableArray *fusedLayers
 @property  MLCLayer *intermediateSumLayer
 @property  NSMutableArray *intermediateGradientTensors
 @property  unsigned long intermediateGradientTensorIndex
 @property  BOOL zeroIntermediateGradientTensors
 @property  BOOL compileForInferenceOnly
 @property  MLCControlTreeNode *conditionalTreeNode
 @property  BOOL isFirstLayer
 @property  BOOL isLastLayer
 @property  NSString *summarizedDOTDescription
 @property  int paddingPolicy
 @property  NSString *label
 @property  BOOL isDebuggingEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MLCLayer supportsDataType:onDevice:]

  // instance methods
  -[MLCLayer setBatchSize:]
  -[MLCLayer setIsUpdatable:]
  -[MLCLayer device]
  -[MLCLayer paddingPolicy]
  -[MLCLayer initWithLabel:]
  -[MLCLayer kernelWidth]
  -[MLCLayer kernelHeight]
  -[MLCLayer setPaddingPolicy:]
  -[MLCLayer setStrideInX:]
  -[MLCLayer strideInY]
  -[MLCLayer setStrideInY:]
  -[MLCLayer .cxx_destruct]
  -[MLCLayer label]
  -[MLCLayer setDevice:]
  -[MLCLayer isUpdatable]
  -[MLCLayer setKernelWidth:]
  -[MLCLayer setKernelHeight:]
  -[MLCLayer setLabel:]
  -[MLCLayer layerID]
  -[MLCLayer strideInX]
  -[MLCLayer isDebuggingEnabled]
  -[MLCLayer sourceTensors]
  -[MLCLayer deviceOps]
  -[MLCLayer setDeviceOps:]
  -[MLCLayer paddingSizeInX]
  -[MLCLayer paddingSizeInY]
  -[MLCLayer dilationRateInX]
  -[MLCLayer dilationRateInY]
  -[MLCLayer fusedLayers]
  -[MLCLayer bindDevice:deviceOps:]
  -[MLCLayer conditionalTreeNode]
  -[MLCLayer resultTensors]
  -[MLCLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCLayer allocateDataForOptimizer:]
  -[MLCLayer allocatedDataSizeForTraining:optimizer:]
  -[MLCLayer summarizedDOTDescription]
  -[MLCLayer linkAssociatedTensors]
  -[MLCLayer unlinkAssociatedTensors]
  -[MLCLayer isValidTrainingParameters]
  -[MLCLayer setDilationRateInX:]
  -[MLCLayer setDilationRateInY:]
  -[MLCLayer setPaddingSizeInX:]
  -[MLCLayer setPaddingSizeInY:]
  -[MLCLayer resultSizeFromSourceSize:dimension:]
  -[MLCLayer resultTensorFromSources:]
  -[MLCLayer isSupportedShapeForTensorSources:]
  -[MLCLayer isLastLayer]
  -[MLCLayer skipLayer]
  -[MLCLayer setSkipLayer:]
  -[MLCLayer setLayerID:]
  -[MLCLayer originalLabel]
  -[MLCLayer isTrainable]
  -[MLCLayer intermediateGradientTensors]
  -[MLCLayer sourceGradientTensors]
  -[MLCLayer isFirstLayer]
  -[MLCLayer intermediateSumLayer]
  -[MLCLayer setIsDebuggingEnabled:isPrivate:]
  -[MLCLayer compileForInferenceOnly]
  -[MLCLayer compileForDevice:sourceTensors:resultTensors:]
  -[MLCLayer assignLayerID:]
  -[MLCLayer resetLayerID]
  -[MLCLayer resultSizeFromSourceSizes:dimension:]
  -[MLCLayer deviceMemorySizeWithOptimizer:device:]
  -[MLCLayer deviceMemorySizeForForward]
  -[MLCLayer getDeviceForTraining]
  -[MLCLayer getDeviceForInference]
  -[MLCLayer setIsDebuggingEnabled:]
  -[MLCLayer isStaticBatchSize]
  -[MLCLayer isGradientNeededForTensor:]
  -[MLCLayer isTensorSharedAcrossMultipleTrainingLayers:]
  -[MLCLayer allocateGradientsForParameters]
  -[MLCLayer allocateGradientTensors]
  -[MLCLayer setAllocateGradientTensors:]
  -[MLCLayer isLastFusedLayer]
  -[MLCLayer setIsLastFusedLayer:]
  -[MLCLayer disableUpdate]
  -[MLCLayer setDisableUpdate:]
  -[MLCLayer setIsTrainable:]
  -[MLCLayer setSourceTensors:]
  -[MLCLayer setResultTensors:]
  -[MLCLayer setSourceGradientTensors:]
  -[MLCLayer resultGradientTensors]
  -[MLCLayer setResultGradientTensors:]
  -[MLCLayer setIntermediateSumLayer:]
  -[MLCLayer setIntermediateGradientTensors:]
  -[MLCLayer intermediateGradientTensorIndex]
  -[MLCLayer setIntermediateGradientTensorIndex:]
  -[MLCLayer zeroIntermediateGradientTensors]
  -[MLCLayer setZeroIntermediateGradientTensors:]
  -[MLCLayer setCompileForInferenceOnly:]
  -[MLCLayer setConditionalTreeNode:]


_MLCCPUNeuron : _MLCCPULayer
  // class methods
  +[_MLCCPUNeuron compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPUNeuron layerWithDevice:descriptor:]

  // instance methods
  -[_MLCCPUNeuron initWithDevice:descriptor:]


MLCGPUDeviceOps : MLCDeviceOps
 @property  _MLCGPULayer *layer
 @property  id forwardKernel
 @property  id gradientKernel
 @property  id secondaryGradientKernel
 @property  id lossInitialGradientKernel
 @property  id combinedForwardAndGradientLossKernel
 @property  id reduceLossKernel
 @property  id gradientState
 @property  id forwardStatisticsKernel
 @property  id gradientStatisticsKernel
 @property  NSArray *momentumVectors
 @property  NSArray *velocityVectors
 @property  NSArray *centerWeightVectors
 @property  id exportableState
 @property  id movingState
 @property  NSArray *bnMovingUpdateKernels
 @property  unsigned long totalElementsPerChannel
 @property  id imageToMatrixCopyKernel
 @property  id matrixToImageCopyKernel
 @property  id permuteKernel
 @property  unsigned long paddingLeft
 @property  unsigned long paddingRight
 @property  unsigned long paddingTop
 @property  unsigned long paddingBottom
 @property  BOOL countIncludesPadding
 @property  BOOL useSourceGradientDeviceMemoryForResultGradientTensor
 @property  BOOL useSourceGradientDeviceMemoryForSecondaryResultGradientTensor
 @property  NSMutableArray *matrixDescsForward
 @property  NSMutableArray *matrixDescsBackward
 @property  BOOL transposeX
 @property  BOOL transposeY
 @property  MLCActivationDescriptor *neuronDescriptor
 @property  int arithmeticOp
 @property  NSArray *source0Shape
 @property  NSArray *source1Shape
 @property  NSArray *begin
 @property  NSArray *count
 @property  NSArray *stride
 @property  NSArray *end
 @property  BOOL permutationNeededForFC

  // class methods
  +[MLCGPUDeviceOps deviceOps]
  +[MLCGPUDeviceOps deviceOpsWithForwardKernel:gradientKernel:]
  +[MLCGPUDeviceOps deviceOpsWithForwardKernel:gradientKernel:secondaryGradientKernel:]
  +[MLCGPUDeviceOps deviceOpsWithForwardKernel:]
  +[MLCGPUDeviceOps deviceOpsWithForwardKernel:gradientKernel:secondaryGradientKernel:forwardStatistics:gradientStatistics:]

  // instance methods
  -[MLCGPUDeviceOps setLayer:]
  -[MLCGPUDeviceOps copyWithZone:]
  -[MLCGPUDeviceOps setCount:]
  -[MLCGPUDeviceOps layer]
  -[MLCGPUDeviceOps paddingTop]
  -[MLCGPUDeviceOps end]
  -[MLCGPUDeviceOps setStride:]
  -[MLCGPUDeviceOps .cxx_destruct]
  -[MLCGPUDeviceOps setPaddingRight:]
  -[MLCGPUDeviceOps setPaddingLeft:]
  -[MLCGPUDeviceOps begin]
  -[MLCGPUDeviceOps setEnd:]
  -[MLCGPUDeviceOps setPaddingBottom:]
  -[MLCGPUDeviceOps stride]
  -[MLCGPUDeviceOps paddingLeft]
  -[MLCGPUDeviceOps forwardKernel]
  -[MLCGPUDeviceOps count]
  -[MLCGPUDeviceOps paddingRight]
  -[MLCGPUDeviceOps secondaryGradientKernel]
  -[MLCGPUDeviceOps setPaddingTop:]
  -[MLCGPUDeviceOps setBegin:]
  -[MLCGPUDeviceOps paddingBottom]
  -[MLCGPUDeviceOps gradientKernel]
  -[MLCGPUDeviceOps permutationNeededForFC]
  -[MLCGPUDeviceOps setPermuteKernel:]
  -[MLCGPUDeviceOps setPermutationNeededForFC:]
  -[MLCGPUDeviceOps momentumVectors]
  -[MLCGPUDeviceOps velocityVectors]
  -[MLCGPUDeviceOps centerWeightVectors]
  -[MLCGPUDeviceOps setMomentumVectors:]
  -[MLCGPUDeviceOps setVelocityVectors:]
  -[MLCGPUDeviceOps setCenterWeightVectors:]
  -[MLCGPUDeviceOps setLossInitialGradientKernel:]
  -[MLCGPUDeviceOps setCombinedForwardAndGradientLossKernel:]
  -[MLCGPUDeviceOps setReduceLossKernel:]
  -[MLCGPUDeviceOps setBnMovingUpdateKernels:]
  -[MLCGPUDeviceOps setTransposeX:]
  -[MLCGPUDeviceOps setTransposeY:]
  -[MLCGPUDeviceOps setMatrixDescsForward:]
  -[MLCGPUDeviceOps setMatrixDescsBackward:]
  -[MLCGPUDeviceOps setImageToMatrixCopyKernel:]
  -[MLCGPUDeviceOps setMatrixToImageCopyKernel:]
  -[MLCGPUDeviceOps setNeuronDescriptor:]
  -[MLCGPUDeviceOps countIncludesPadding]
  -[MLCGPUDeviceOps gradientState]
  -[MLCGPUDeviceOps initWithForwardKernel:gradientKernel:]
  -[MLCGPUDeviceOps initWithForwardKernel:gradientKernel:secondaryGradientKernel:forwardStatistics:gradientStatistics:]
  -[MLCGPUDeviceOps lossInitialGradientKernel]
  -[MLCGPUDeviceOps forwardStatisticsKernel]
  -[MLCGPUDeviceOps gradientStatisticsKernel]
  -[MLCGPUDeviceOps combinedForwardAndGradientLossKernel]
  -[MLCGPUDeviceOps reduceLossKernel]
  -[MLCGPUDeviceOps setGradientState:]
  -[MLCGPUDeviceOps setForwardStatisticsKernel:]
  -[MLCGPUDeviceOps setGradientStatisticsKernel:]
  -[MLCGPUDeviceOps exportableState]
  -[MLCGPUDeviceOps setExportableState:]
  -[MLCGPUDeviceOps movingState]
  -[MLCGPUDeviceOps setMovingState:]
  -[MLCGPUDeviceOps bnMovingUpdateKernels]
  -[MLCGPUDeviceOps totalElementsPerChannel]
  -[MLCGPUDeviceOps setTotalElementsPerChannel:]
  -[MLCGPUDeviceOps imageToMatrixCopyKernel]
  -[MLCGPUDeviceOps matrixToImageCopyKernel]
  -[MLCGPUDeviceOps permuteKernel]
  -[MLCGPUDeviceOps setCountIncludesPadding:]
  -[MLCGPUDeviceOps useSourceGradientDeviceMemoryForResultGradientTensor]
  -[MLCGPUDeviceOps setUseSourceGradientDeviceMemoryForResultGradientTensor:]
  -[MLCGPUDeviceOps useSourceGradientDeviceMemoryForSecondaryResultGradientTensor]
  -[MLCGPUDeviceOps setUseSourceGradientDeviceMemoryForSecondaryResultGradientTensor:]
  -[MLCGPUDeviceOps matrixDescsForward]
  -[MLCGPUDeviceOps matrixDescsBackward]
  -[MLCGPUDeviceOps transposeX]
  -[MLCGPUDeviceOps transposeY]
  -[MLCGPUDeviceOps neuronDescriptor]
  -[MLCGPUDeviceOps arithmeticOp]
  -[MLCGPUDeviceOps setArithmeticOp:]
  -[MLCGPUDeviceOps source0Shape]
  -[MLCGPUDeviceOps setSource0Shape:]
  -[MLCGPUDeviceOps source1Shape]
  -[MLCGPUDeviceOps setSource1Shape:]


MLCDeviceOptimizer : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  unsigned long timeStep
 @property  id kernel
 @property  unsigned int function
 @property  NSData *optimizerAlgFields

  // class methods
  +[MLCDeviceOptimizer deviceOptimizerWithKernel:]
  +[MLCDeviceOptimizer deviceOptimizerWithFunction:optimizerAlgFields:]

  // instance methods
  -[MLCDeviceOptimizer copyWithZone:]
  -[MLCDeviceOptimizer function]
  -[MLCDeviceOptimizer kernel]
  -[MLCDeviceOptimizer .cxx_destruct]
  -[MLCDeviceOptimizer setTimeStep:]
  -[MLCDeviceOptimizer timeStep]
  -[MLCDeviceOptimizer initWithKernel:]
  -[MLCDeviceOptimizer initWithFunction:optimizerAlgFields:]
  -[MLCDeviceOptimizer optimizerAlgFields]


_MLCANEIOSurfaceObject : NSObject /usr/lib/libSystem.B.dylib
 @property  _ANEIOSurfaceObject *ioSurfaceObject
 @property  NSDictionary *liveIOStatus

  // class methods
  +[_MLCANEIOSurfaceObject objectWithANEIOSurfaceObject:liveIOStatus:]
  +[_MLCANEIOSurfaceObject createIOSurface1x1WithLength:]

  // instance methods
  -[_MLCANEIOSurfaceObject .cxx_destruct]
  -[_MLCANEIOSurfaceObject initWithIOSurface:liveIOStatus:]
  -[_MLCANEIOSurfaceObject ioSurfaceObject]
  -[_MLCANEIOSurfaceObject liveIOStatus]


MLCPlatformInfo : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MLCPlatformInfo osVersion]
  +[MLCPlatformInfo randomSeed]
  +[MLCPlatformInfo bootArgs]
  +[MLCPlatformInfo buildVersion]
  +[MLCPlatformInfo isInternalBuild]
  +[MLCPlatformInfo gpuUsageUnsupportedIncludingLowPower:]
  +[MLCPlatformInfo gpuUsageUnsupported]
  +[MLCPlatformInfo seedEnvVariable]
  +[MLCPlatformInfo multiGPUUsageUnsupported]
  +[MLCPlatformInfo aneUsageUnsupported]
  +[MLCPlatformInfo isRNGSeeded]
  +[MLCPlatformInfo getMinGpuSocVersionForMicroBenchmark]


MLCDeviceGPU : NSObject /usr/lib/libSystem.B.dylib <MLCLayerOperations, MLCEngineDispatch, NSCopying, MLComputeEngineControl>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {os_unfair_lock_s=I} l
 @property  MLCDeviceGPUHeapAllocator *gpuHeapAllocator
 @property  ^d executionTimeInterval
 @property  NSArray *gpuLocalEventList
 @property  NSArray *gpuSharedEventList
 @property  ^Q currentEventValue
 @property  unsigned long numDevicesToUse
 @property  unsigned long numDevicesUsedWithFirstBatch
 @property  NSArray *deviceList
 @property  int deviceType
 @property  NSMutableArray *gpuCommandQueueList
 @property  NSMutableArray *gpuCommandBufferList
 @property  NSMutableArray *gpuMPSCommandBufferList
 @property  NSMutableArray *gpuWriteTensorKernelList
 @property  NSMutableArray *gpuReadTensorKernelList
 @property  NSMutableArray *gpuLibrary
 @property  NSMutableArray *gpuPipelineStatesForward2DArray
 @property  NSMutableArray *gpuPipelineStatesForward2D
 @property  NSMutableArray *gpuPipelineStatesGradient2DArray
 @property  NSMutableArray *gpuPipelineStatesGradient2D
 @property  NSMutableArray *gpuPipelineStatesForwardConcat2DArray
 @property  NSMutableArray *gpuPipelineStatesForwardConcat2D
 @property  NSMutableArray *gpuPipelineStatesFill2DArray
 @property  NSMutableArray *gpuPipelineStatesFill2D
 @property  NSMutableArray *gpuPipelineStatesPad2DArray
 @property  NSMutableArray *gpuPipelineStatesPad2D
 @property  NSMutableArray *gpuPipelineStatesLayerNormForwardTraining
 @property  NSMutableArray *gpuPipelineStatesLayerNormForwardInference
 @property  NSMutableArray *gpuPipelineStatesLayerNormGradient
 @property  NSMutableArray *gpuPipelineStatesLayerNormComputeBetaGammaDelta
 @property  NSMutableArray *gpuPipelineStatesReduceAcrossBatch
 @property  NSMutableArray *gpuPipelineStatesArithmeticUnaryForwardArray
 @property  NSMutableArray *gpuPipelineStatesArithmeticUnaryForward
 @property  NSMutableArray *gpuPipelineStatesArithmeticUnaryGradientArray
 @property  NSMutableArray *gpuPipelineStatesArithmeticUnaryGradient
 @property  NSMutableArray *gpuPipelineStatesArithmeticBinaryForward
 @property  NSMutableArray *gpuPipelineStatesArithmeticBinaryGradient
 @property  NSMutableArray *gpuPipelineStatesArithmeticReduceGradient
 @property  NSMutableArray *gpuConcurrentEncoderFence
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MLCDeviceGPU filteredGPUListIncludingLowPoweredBuiltin:]
  +[MLCDeviceGPU multiGPUNotSupportedInFilteredGPUList:]
  +[MLCDeviceGPU calculateImageSizeForTensor:]

  // instance methods
  -[MLCDeviceGPU l]
  -[MLCDeviceGPU copyWithZone:]
  -[MLCDeviceGPU deviceType]
  -[MLCDeviceGPU setL:]
  -[MLCDeviceGPU dealloc]
  -[MLCDeviceGPU initWithType:]
  -[MLCDeviceGPU .cxx_destruct]
  -[MLCDeviceGPU isEqual:]
  -[MLCDeviceGPU deviceList]
  -[MLCDeviceGPU gpuPipelineStatesForwardConcat2D]
  -[MLCDeviceGPU gpuPipelineStatesForwardConcat2DArray]
  -[MLCDeviceGPU setNumDevicesUsedWithFirstBatch:]
  -[MLCDeviceGPU fusedBatchNormalizationAndNeuronLayerWithDescriptor:numOfFeatureChannels:mean:variance:beta:gamma:varianceEpsilon:momentum:]
  -[MLCDeviceGPU batchNormalizationLayerWithChannelCount:mean:variance:beta:gamma:varianceEpsilon:momentum:]
  -[MLCDeviceGPU compileLayerDeviceOps:sourceTensors:resultTensor:]
  -[MLCDeviceGPU setNormalizationLayerOptimizerDataForDeviceOps:beta:gamma:]
  -[MLCDeviceGPU gpuReadTensorKernelList]
  -[MLCDeviceGPU gpuWriteTensorKernelList]
  -[MLCDeviceGPU poolingLayerWithDescriptor:paddingSizes:]
  -[MLCDeviceGPU paddingLayerWithPaddingType:paddingLeft:paddingRight:paddingTop:paddingBottom:constantValue:]
  -[MLCDeviceGPU groupNormalizationLayerWithFeatureChannelCount:groupCount:beta:gamma:varianceEpsilon:]
  -[MLCDeviceGPU lossLayerWithDescriptor:]
  -[MLCDeviceGPU fusedFullyConnectedAndNeuronLayerWithDescriptor:convolutionDescriptor:weights:biasTerms:]
  -[MLCDeviceGPU fullyConnectedLayerWithDescriptor:weights:biasTerms:]
  -[MLCDeviceGPU setConvolutionLayerOptimizerDataForDeviceOps:weights:bias:]
  -[MLCDeviceGPU createOptimizerDeviceDataForTensor:optimizer:optimizerData:isVector:]
  -[MLCDeviceGPU convolutionLayerWithDescriptor:weights:biasTerms:]
  -[MLCDeviceGPU convolutionTransposeLayerWithDescriptor:weights:biasTerms:]
  -[MLCDeviceGPU neuronLayerWithDescriptor:]
  -[MLCDeviceGPU layerNormalizationLayerWithNormalizedShape:beta:gamma:varianceEpsilon:]
  -[MLCDeviceGPU instanceNormalizationLayerWithChannelCount:beta:gamma:varianceEpsilon:momentum:]
  -[MLCDeviceGPU arithmeticLayerWithOperation:]
  -[MLCDeviceGPU compareLayerWithPredicate:]
  -[MLCDeviceGPU reductionLayerWithReduceType:dimension:sourceShapeCount:]
  -[MLCDeviceGPU softmaxLayerWithOperation:dimension:]
  -[MLCDeviceGPU lossYOLOLayerWithDescriptor:]
  -[MLCDeviceGPU dropoutLayerWithRate:seed:]
  -[MLCDeviceGPU reshapeLayerWithShape:]
  -[MLCDeviceGPU transposeLayerWithShape:]
  -[MLCDeviceGPU lstmLayerWithDescriptor:inputWeights:hiddenWeights:peepholeWeights:biasTerms:gateActivations:outputResultActivation:]
  -[MLCDeviceGPU gramMatrixLayerWithScaleFactor:]
  -[MLCDeviceGPU upsampleLayerWithScaleFactorX:scaleFactorY:sampleMode:alignCorners:]
  -[MLCDeviceGPU matMulLayerWithDescriptor:sourceTensors:resultTensor:inferenceOnly:]
  -[MLCDeviceGPU optimizerSGDWithDescriptor:momentunScale:useNesterovMomentum:]
  -[MLCDeviceGPU optimizerAdamWithDescriptor:beta1:beta2:epsilon:timeStep:]
  -[MLCDeviceGPU optimizerRMSPropWithDescriptor:momentumScale:alpha:epsilon:centered:]
  -[MLCDeviceGPU allocatedDeviceDataSizeForTraining:layer:]
  -[MLCDeviceGPU setMHALayerOptimizerDataForDeviceOps:optimizerDataForWeights:optimizerDataForBias:]
  -[MLCDeviceGPU setLSTMLayerOptimizerDataForDeviceOps:inputWeights:hiddenWeights:biasTerms:]
  -[MLCDeviceGPU fuseLayersForTrainingGraph:]
  -[MLCDeviceGPU fuseLayersForInferenceGraph:startAtLayerIndex:]
  -[MLCDeviceGPU fusedConvolutionAndNeuronLayerWithDescriptor:convolutionDescriptor:weights:biasTerms:]
  -[MLCDeviceGPU multiheadAttentionLayerWithDescriptor:weights:bias:attnBias:inferenceOnly:]
  -[MLCDeviceGPU splitLayerWithDimension:]
  -[MLCDeviceGPU sliceLayerWithbegin:end:stride:inferenceOnly:]
  -[MLCDeviceGPU compileLayerDeviceOps:sourceTensors:resultTensors:]
  -[MLCDeviceGPU setConvolutionGradientComputeWeightsAndBiasOnly:]
  -[MLCDeviceGPU setFullyConnectedGradientComputeWeightsAndBiasOnly:]
  -[MLCDeviceGPU weightsGradients:]
  -[MLCDeviceGPU biasesGradients:]
  -[MLCDeviceGPU mhaWeightGradient:withSize:index:]
  -[MLCDeviceGPU mhaBiasGradient:withSize:index:]
  -[MLCDeviceGPU mhaAttnBiasGradient:withSize:index:]
  -[MLCDeviceGPU lstmInputWeightGradient:mlcWeightIndex:]
  -[MLCDeviceGPU lstmHiddenWeightGradient:mlcWeightIndex:]
  -[MLCDeviceGPU lstmBiasGradient:mlcBiasIndex:]
  -[MLCDeviceGPU betaGradients:]
  -[MLCDeviceGPU gammaGradients:]
  -[MLCDeviceGPU allocateParameterGradientsForDeviceOps:parameters:]
  -[MLCDeviceGPU deviceMemorySizeForTensor:]
  -[MLCDeviceGPU numDevices]
  -[MLCDeviceGPU updateTensorsForTwoFusedLayers:layerNext:]
  -[MLCDeviceGPU canFuseConvolutionLayerForInference:]
  -[MLCDeviceGPU canFuseFullyConnectedLayerForInference:]
  -[MLCDeviceGPU numDevicesToUse]
  -[MLCDeviceGPU gpuCommandQueueList]
  -[MLCDeviceGPU synchronizeTensorOnHost:]
  -[MLCDeviceGPU readTensor:fromDeviceIndex:targetBuffer:batchSize:reduceOverBatch:]
  -[MLCDeviceGPU updateTensorsForThreeFusedLayers:layerNext:layerNext2:]
  -[MLCDeviceGPU initWithDeviceList:]
  -[MLCDeviceGPU initWithType:gpuDeviceList:gpuLocalEventList:gpuSharedEventList:currentEventValue:gpuCommandQueueList:gpuCommandBufferList:gpuMPSCommandBufferList:]
  -[MLCDeviceGPU createPipelineStatesForMissingActivationFunctions]
  -[MLCDeviceGPU setGpuPipelineStatesForward2DArray:]
  -[MLCDeviceGPU setGpuPipelineStatesForward2D:]
  -[MLCDeviceGPU setGpuPipelineStatesGradient2DArray:]
  -[MLCDeviceGPU setGpuPipelineStatesGradient2D:]
  -[MLCDeviceGPU setGpuPipelineStatesForwardConcat2DArray:]
  -[MLCDeviceGPU setGpuPipelineStatesForwardConcat2D:]
  -[MLCDeviceGPU setGpuPipelineStatesFill2DArray:]
  -[MLCDeviceGPU setGpuPipelineStatesFill2D:]
  -[MLCDeviceGPU setGpuPipelineStatesPad2DArray:]
  -[MLCDeviceGPU setGpuPipelineStatesPad2D:]
  -[MLCDeviceGPU setGpuPipelineStatesLayerNormForwardTraining:]
  -[MLCDeviceGPU setGpuPipelineStatesLayerNormForwardInference:]
  -[MLCDeviceGPU setGpuPipelineStatesLayerNormGradient:]
  -[MLCDeviceGPU setGpuPipelineStatesLayerNormComputeBetaGammaDelta:]
  -[MLCDeviceGPU setGpuPipelineStatesReduceAcrossBatch:]
  -[MLCDeviceGPU setGpuPipelineStatesArithmeticUnaryForwardArray:]
  -[MLCDeviceGPU setGpuPipelineStatesArithmeticUnaryForward:]
  -[MLCDeviceGPU setGpuPipelineStatesArithmeticUnaryGradientArray:]
  -[MLCDeviceGPU setGpuPipelineStatesArithmeticUnaryGradient:]
  -[MLCDeviceGPU setGpuPipelineStatesArithmeticBinaryForward:]
  -[MLCDeviceGPU setGpuPipelineStatesArithmeticBinaryGradient:]
  -[MLCDeviceGPU setGpuPipelineStatesArithmeticReduceGradient:]
  -[MLCDeviceGPU setGpuConcurrentEncoderFence:]
  -[MLCDeviceGPU gpuLibrary]
  -[MLCDeviceGPU gpuPipelineStatesForward2DArray]
  -[MLCDeviceGPU gpuPipelineStatesForward2D]
  -[MLCDeviceGPU gpuPipelineStatesGradient2DArray]
  -[MLCDeviceGPU gpuPipelineStatesGradient2D]
  -[MLCDeviceGPU gpuPipelineStatesFill2DArray]
  -[MLCDeviceGPU gpuPipelineStatesFill2D]
  -[MLCDeviceGPU gpuPipelineStatesPad2DArray]
  -[MLCDeviceGPU gpuPipelineStatesPad2D]
  -[MLCDeviceGPU gpuPipelineStatesLayerNormForwardTraining]
  -[MLCDeviceGPU gpuPipelineStatesLayerNormForwardInference]
  -[MLCDeviceGPU gpuPipelineStatesLayerNormGradient]
  -[MLCDeviceGPU gpuPipelineStatesLayerNormComputeBetaGammaDelta]
  -[MLCDeviceGPU gpuPipelineStatesReduceAcrossBatch]
  -[MLCDeviceGPU gpuPipelineStatesArithmeticUnaryForwardArray]
  -[MLCDeviceGPU gpuPipelineStatesArithmeticUnaryForward]
  -[MLCDeviceGPU gpuPipelineStatesArithmeticUnaryGradientArray]
  -[MLCDeviceGPU gpuPipelineStatesArithmeticUnaryGradient]
  -[MLCDeviceGPU gpuPipelineStatesArithmeticBinaryForward]
  -[MLCDeviceGPU gpuPipelineStatesArithmeticBinaryGradient]
  -[MLCDeviceGPU gpuPipelineStatesArithmeticReduceGradient]
  -[MLCDeviceGPU gpuConcurrentEncoderFence]
  -[MLCDeviceGPU gpuCommandBufferList]
  -[MLCDeviceGPU currentEventValue]
  -[MLCDeviceGPU gpuLocalEventList]
  -[MLCDeviceGPU gpuSharedEventList]
  -[MLCDeviceGPU gpuMPSCommandBufferList]
  -[MLCDeviceGPU allocateCommandBufferForDeviceAtIndex:]
  -[MLCDeviceGPU updateGraphExecutionTime:atIndex:gpuTime:]
  -[MLCDeviceGPU signalNextEvent]
  -[MLCDeviceGPU waitForOthers]
  -[MLCDeviceGPU readTensor:targetBuffer:]
  -[MLCDeviceGPU commitDeviceAtIndex:]
  -[MLCDeviceGPU executionTimeInterval]
  -[MLCDeviceGPU commitAndWaitForCompletion:enableProfiling:graphExecutionTime:graphResultTensor:]
  -[MLCDeviceGPU needToAllocateDeviceMemoryForTensor:batchSize:]
  -[MLCDeviceGPU setGpuHeapAllocator:]
  -[MLCDeviceGPU allocateDeviceMemoryForTensor:batchSize:]
  -[MLCDeviceGPU allocateDeviceMemoryForTensor:device:count:]
  -[MLCDeviceGPU selectDevicesWithBatchSize:calledfromBindAndWrite:]
  -[MLCDeviceGPU numDevicesUsedWithFirstBatch]
  -[MLCDeviceGPU setNumDevicesToUse:]
  -[MLCDeviceGPU readTensor:fromDeviceIndex:batchSize:]
  -[MLCDeviceGPU readTensor:fromDeviceIndex:targetBuffer:batchSize:]
  -[MLCDeviceGPU multiDeviceTensorReduction:sourceBuffer:targetBuffer:]
  -[MLCDeviceGPU dispatchReadTensorFromAllDevices:targetBuffer:batchSize:]
  -[MLCDeviceGPU broadcastTensor:batchSize:]
  -[MLCDeviceGPU writeTensor:toDeviceIndex:sourceBuffer:batchSize:]
  -[MLCDeviceGPU dispatchBroadcastTensor:batchSize:]
  -[MLCDeviceGPU dispatchWriteTensor:toDeviceIndex:sourceBuffer:batchSize:]
  -[MLCDeviceGPU unsafe_signalAllDevicesExcludingDevice:eventValue:]
  -[MLCDeviceGPU waitForAllDevicesExcludingDevice:eventValue:]
  -[MLCDeviceGPU needToAllocateDeviceMemoryForTensor:]
  -[MLCDeviceGPU deviceHeapAllocatorWithHeapSize:]
  -[MLCDeviceGPU allocateDeviceMemoryForTensor:]
  -[MLCDeviceGPU deallocateDeviceMemoryForTensor:]
  -[MLCDeviceGPU shareDeviceMemoryWithResultTensor:sourceTensor:]
  -[MLCDeviceGPU readTensor:]
  -[MLCDeviceGPU readTensor:fromDeviceIndex:]
  -[MLCDeviceGPU dispatchReadTensor:targetBuffer:batchSize:]
  -[MLCDeviceGPU broadcastTensor:]
  -[MLCDeviceGPU dispatchBroadcastTensor:]
  -[MLCDeviceGPU writeTensor:toDeviceIndex:]
  -[MLCDeviceGPU dispatchWriteTensor:toDeviceIndex:]
  -[MLCDeviceGPU synchronizeTensor:]
  -[MLCDeviceGPU commitWithProfiling:graphExecutionTime:]
  -[MLCDeviceGPU commitAndWaitForCompletion:]
  -[MLCDeviceGPU commitWithCompletionHandler:enableProfiling:graphExecutionTime:graphResultTensor:]
  -[MLCDeviceGPU signalAllDevicesExcludingDevice:eventValue:]
  -[MLCDeviceGPU selectDevicesWithBatchSize:]
  -[MLCDeviceGPU writeTensor:toDeviceIndex:batchSize:]
  -[MLCDeviceGPU dispatchWriteTensor:toDeviceIndex:batchSize:]
  -[MLCDeviceGPU allocateTemporaryDeviceMemoryForTensor:commandBuffer:count:]
  -[MLCDeviceGPU allReduceOverXGMI:deviceIndex:stateBuffers:]
  -[MLCDeviceGPU gpuHeapAllocator]
  -[MLCDeviceGPU setGpuLocalEventList:]
  -[MLCDeviceGPU setGpuSharedEventList:]
  -[MLCDeviceGPU dispatchFillKernel:imageBatch:deviceIndex:]
  -[MLCDeviceGPU dispatchFillKernel:tensor:deviceIndex:]
  -[MLCDeviceGPU dispatchForwardSplitLayer:sourceTensor:resultTensors:forConcat:]
  -[MLCDeviceGPU dispatchGradientSplitLayer:sourceGradientTensors:resultGradientTensor:forConcat:]
  -[MLCDeviceGPU dispatchForwardLayerWithStates:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceGPU dispatchForwardSliceLayerWithStates:sourceTensor:resultTensor:forTraining:]
  -[MLCDeviceGPU dispatchForwardLayerWithStates:sourceTensor:secondaryTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceGPU dispatchForwardLossLayerWithStates:sourceTensor:labelsTensor:labelsTensorStride:weightsTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceGPU updateTensorAllocator:deviceOps:]
  -[MLCDeviceGPU dispatchMissingActivationsForwardKernel:sourceTensor:resultTensor:deviceIndex:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU broadcastMPSImageAcrossBatch:maxBatchSize:]
  -[MLCDeviceGPU dispatchForwardArithmeticBinaryKernel:sourceTensor:sourceSecondaryTensor:resultTensor:deviceIndex:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchForwardArithmeticUnaryKernel:sourceTensor:resultTensor:deviceIndex:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchForwardMHALayerWithStates:sourceTensors:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceGPU dispatchMissingActivationsGradientKernel:sourceGradientTensor:resultGradientTensor:deviceIndex:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU sumAcrossBatchForMPSImageBatch:deviceIndex:tensorShape:maxBatchSize:commandBuffer:]
  -[MLCDeviceGPU dispatchGradientArithmeticBinaryKernel:sourceGradientTensor:resultGradientTensor:secondaryResultGradientTensor:deviceIndex:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchGradientArithmeticUnaryKernel:sourceGradientTensor:resultGradientTensor:deviceIndex:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchGradientLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchForwardReshapeLayerWithDeviceOps:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:keepsState:]
  -[MLCDeviceGPU dispatchPadChannelsKernel:sourceImageBatch:resultImageBatch:deviceIndex:]
  -[MLCDeviceGPU dispatchForwardWithMPSNDArrayKernel:deviceIndex:sourceTensor:secondaryTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:withStates:]
  -[MLCDeviceGPU dispatchForwardLayer:sourceTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchGradientWithMPSNDArrayKernel:deviceIndex:sourceGradientTensor:resultGradientTensor:secondaryResultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchForwardSplitLayer:sourceTensor:resultTensors:]
  -[MLCDeviceGPU dispatchGradientSplitLayer:sourceGradientTensors:resultGradientTensor:]
  -[MLCDeviceGPU dispatchForwardConcatLayer:sourceTensors:resultTensor:]
  -[MLCDeviceGPU dispatchGradientConcatLayer:sourceGradientTensor:resultGradientTensors:]
  -[MLCDeviceGPU dispatchForwardLayerNormalizationLayer:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceGPU dispatchGradientLayerNormalizationLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchForwardSliceLayer:sourceTensor:resultTensor:]
  -[MLCDeviceGPU dispatchForwardLayer:sourceTensor:secondaryTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchForwardLossLayer:sourceTensor:labelsTensor:labelsTensorStride:weightsTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchForwardLayerBatchNormalizationWithStates:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchForwardMatMulLayer:sourceTensor:secondarySourceTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchGradientMatMulLayer:sourceGradientTensor:resultGradientTensor:secondaryResultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchForwardMHALayer:sourceTensors:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchGradientMHALayer:sourceGradientTensor:resultGradientTensors:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchGradientLayer:sourceGradientTensor:resultGradientTensor:secondaryResultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchGradientReshapeLayerWithDeviceOps:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchGradientSliceLayer:sourceGradientTensor:resultGradientTensor:]
  -[MLCDeviceGPU dispatchGradientBatchNormalizationLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchGradientLossLayer:sourceGradientTensor:labelsTensor:labelsTensorStride:weightsTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchInitialGradientLossLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchForwardAndGradientLossLayerWithStates:sourceTensor:labelsTensor:labelsTensorStride:weightsTensor:resultTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchRNNForwardLayer:sourceTensors:resultTensors:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchRNNForwardLayerWithStates:sourceTensors:resultTensors:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceGPU dispatchRNNGradientLayer:sourceGradientTensors:resultGradientTensors:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU incrementReadCountForTensorDeviceMemory:increment:]
  -[MLCDeviceGPU incrementReadCountForGradientState:increment:]
  -[MLCDeviceGPU dispatchForwardSoftmaxLayer:sourceTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchForwardSoftmaxLayerWithStates:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceGPU dispatchGradientSoftmaxLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceGPU dispatchForwardEmbeddingLayer:weight:sourceTensor:resultTensor:]
  -[MLCDeviceGPU dispatchGradientEmbeddingLayer:sourceGradientTensor:]
  -[MLCDeviceGPU sumSharedGradientsForNormalizationLayerTensorParameter:layerIndexForSummedGradients:isBetaTensor:]
  -[MLCDeviceGPU setOptimizerLearningRate:learningRate:]
  -[MLCDeviceGPU setOptimizerTimeStep:timeStep:]
  -[MLCDeviceGPU sumSharedGradientsForConvolutionLayerTensorParameter:layerIndexForSummedGradients:]
  -[MLCDeviceGPU updateConvolutionLayer:optimizer:weightsParameter:biasesParameter:]
  -[MLCDeviceGPU updateFullyConnectedLayer:optimizer:weightsParameter:biasesParameter:]
  -[MLCDeviceGPU updateBatchNormalizationLayer:optimizer:betaParameter:gammaParameter:meanTensor:varianceTensor:]
  -[MLCDeviceGPU updateInstanceNormalizationLayer:optimizer:betaParameter:gammaParameter:]
  -[MLCDeviceGPU updateLayerNormalizationLayer:optimizer:betaParameter:gammaParameter:]
  -[MLCDeviceGPU updateGroupNormalizationLayer:optimizer:betaParameter:gammaParameter:]
  -[MLCDeviceGPU updateRNNLayer:optimizer:inputWeightsParameter:hiddenWeightsParameter:biasesParameter:]
  -[MLCDeviceGPU updateMultiheadAttentionLayer:optimizer:weightsParameter:biasesParameter:]
  -[MLCDeviceGPU updateEmbeddingLayer:weight:optimizer:]
  -[MLCDeviceGPU updateTensorParameter:optimizer:gradient:]
  -[MLCDeviceGPU synchronizeUpdatesForLayer:]
  -[MLCDeviceGPU synchronizeOptimizerUpdatesForTensor:]
  -[MLCDeviceGPU convertUpdatesToTensorDataForLayer:]
  -[MLCDeviceGPU convertUpdatesToTensorDataForTensorParameters:]
  -[MLCDeviceGPU reloadParameterDataFromHostToDeviceMemoryForTensor:]
  -[MLCDeviceGPU getGradientBufferForNormalizationState:layer:isBetaTensor:]
  -[MLCDeviceGPU setOptimizerTimeStepToMPSKernel:]
  -[MLCDeviceGPU updateWithOptimizer:commandBuffer:deviceParameter:source:gradient:result:momentumIndex:]
  -[MLCDeviceGPU saveOrRestoreTempMatrixDisableUpdates:commandBuffer:auxiliaryWeightsMemory:auxiliaryMomentumMemory:auxiliaryVelocityMemory:auxiliaryCenterWeightMemory:deviceNumber:kernelNumber:mlcIndex:auxIndex:numOptimizerData:saveToAux:isInputWeight:isHiddenWeight:isBias:]
  -[MLCDeviceGPU synchronizeWeightMatrixForRNNLayer:matrixId:isRecurrent:forLSTMNum:forDeviceNum:]
  -[MLCDeviceGPU synchronizeBiasTermsForRNNLayer:matrixId:forLayerNum:forDeviceNum:]
  -[MLCDeviceGPU checkToConvertTensor:inLayer:]
  -[MLCDeviceGPU rotateAndCopyMTLBuffer:toNSData:withTensorDescriptor:]
  -[MLCDeviceGPU copyMTLBuffer:toNSData:]
  -[MLCDeviceGPU copyMTLBuffer:toBytes:length:]
  -[MLCDeviceGPU reloadLSTMParameters:rnnGPUDeviceOps:mlcParameterIndex:tensor:isInputWeight:isHiddenWeight:isBias:deviceNumber:]


_MLCGPUDropout : _MLCGPULayer
  // class methods
  +[_MLCGPUDropout layerWithDevice:rate:seed:]

  // instance methods
  -[_MLCGPUDropout initWithDevice:rate:seed:]


MLCDevice : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  int type
 @property  <MLCDeviceProperties> *engine
 @property  <MLComputeEngineControl><MLCLayerOperations><MLCEngineDispatch><MLComputeEngineOptimizerUpdate><MLCDeviceProperties> *computeEngine
 @property  NSArray *gpuDevices

  // class methods
  +[MLCDevice deviceWithType:]
  +[MLCDevice cpuDevice]
  +[MLCDevice gpuDevice]
  +[MLCDevice deviceWithGPUDevices:]

  // instance methods
  -[MLCDevice copyWithZone:]
  -[MLCDevice setEngine:]
  -[MLCDevice engine]
  -[MLCDevice init]
  -[MLCDevice setType:]
  -[MLCDevice initWithType:]
  -[MLCDevice .cxx_destruct]
  -[MLCDevice type]
  -[MLCDevice isEqual:]
  -[MLCDevice isEqualToDevice:]
  -[MLCDevice computeEngine]
  -[MLCDevice initWithType:engine:]
  -[MLCDevice setComputeEngine:]
  -[MLCDevice initWithGPUs:]
  -[MLCDevice switchToCPUDevice]
  -[MLCDevice gpuDevices]


_MLCCPUMHAttention : _MLCCPULayer
  // class methods
  +[_MLCCPUMHAttention compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPUMHAttention setOptimizerDataForDevice:deviceOps:dataForWeights:dataForBias:]
  +[_MLCCPUMHAttention layerWithDevice:descriptor:weights:bias:attnBias:inferenceOnly:]

  // instance methods
  -[_MLCCPUMHAttention initWithDevice:descriptor:weights:bias:attnBias:inferenceOnly:]


MLCTransposeLayer : MLCLayer
 @property  NSArray *shape
 @property  NSArray *dimensions

  // class methods
  +[MLCTransposeLayer layerWithDimensions:]

  // instance methods
  -[MLCTransposeLayer dimensions]
  -[MLCTransposeLayer shape]
  -[MLCTransposeLayer .cxx_destruct]
  -[MLCTransposeLayer initWithDimensions:]
  -[MLCTransposeLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCTransposeLayer summarizedDOTDescription]
  -[MLCTransposeLayer resultSizeFromSourceSize:dimension:]
  -[MLCTransposeLayer resultTensorFromSources:]
  -[MLCTransposeLayer resultSizeFromSourceSizes:dimension:]
  -[MLCTransposeLayer isStaticBatchSize]


_MLCCPUReduction : _MLCCPULayer
  // class methods
  +[_MLCCPUReduction compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPUReduction layerWithDevice:reduceType:dimension:sourceShapeCount:]

  // instance methods
  -[_MLCCPUReduction initWithDevice:reduceType:dimension:]


_MLCGPULayerNormalization : _MLCGPULayer
  // class methods
  +[_MLCGPULayerNormalization layerWithDevice:normalizedShape:beta:gamma:varianceEpsilon:]

  // instance methods
  -[_MLCGPULayerNormalization initWithDevice:normalizedShape:beta:gamma:varianceEpsilon:]


MLCPoolingDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  int poolingType
 @property  unsigned long kernelWidth
 @property  unsigned long kernelHeight
 @property  unsigned long strideInX
 @property  unsigned long strideInY
 @property  unsigned long dilationRateInX
 @property  unsigned long dilationRateInY
 @property  int paddingPolicy
 @property  unsigned long paddingSizeInX
 @property  unsigned long paddingSizeInY
 @property  BOOL countIncludesPadding

  // class methods
  +[MLCPoolingDescriptor poolingDescriptorWithType:kernelSize:stride:]
  +[MLCPoolingDescriptor poolingDescriptorWithType:kernelSizes:strides:paddingPolicy:paddingSizes:]
  +[MLCPoolingDescriptor poolingDescriptorWithType:kernelSizes:strides:dilationRates:paddingPolicy:paddingSizes:]
  +[MLCPoolingDescriptor maxPoolingDescriptorWithKernelSizes:strides:paddingPolicy:paddingSizes:]
  +[MLCPoolingDescriptor maxPoolingDescriptorWithKernelSizes:strides:dilationRates:paddingPolicy:paddingSizes:]
  +[MLCPoolingDescriptor averagePoolingDescriptorWithKernelSizes:strides:paddingPolicy:paddingSizes:countIncludesPadding:]
  +[MLCPoolingDescriptor averagePoolingDescriptorWithKernelSizes:strides:dilationRates:paddingPolicy:paddingSizes:countIncludesPadding:]
  +[MLCPoolingDescriptor l2NormPoolingDescriptorWithKernelSizes:strides:paddingPolicy:paddingSizes:]
  +[MLCPoolingDescriptor l2NormPoolingDescriptorWithKernelSizes:strides:dilationRates:paddingPolicy:paddingSizes:]

  // instance methods
  -[MLCPoolingDescriptor copyWithZone:]
  -[MLCPoolingDescriptor paddingPolicy]
  -[MLCPoolingDescriptor kernelWidth]
  -[MLCPoolingDescriptor kernelHeight]
  -[MLCPoolingDescriptor strideInY]
  -[MLCPoolingDescriptor isEqual:]
  -[MLCPoolingDescriptor strideInX]
  -[MLCPoolingDescriptor paddingSizeInX]
  -[MLCPoolingDescriptor paddingSizeInY]
  -[MLCPoolingDescriptor dilationRateInX]
  -[MLCPoolingDescriptor dilationRateInY]
  -[MLCPoolingDescriptor poolingType]
  -[MLCPoolingDescriptor countIncludesPadding]
  -[MLCPoolingDescriptor initWithType:kernelWidth:kernelHeight:strideInX:strideInY:dilationRateInX:dilationRateInY:paddingPolicy:paddingSizeInX:paddingSizeInY:countIncludesPadding:]


_MLCANEPoolingParameters : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *poolingParams

  // class methods
  +[_MLCANEPoolingParameters poolingUnitParametersWith:]

  // instance methods
  -[_MLCANEPoolingParameters .cxx_destruct]
  -[_MLCANEPoolingParameters initWithPoolingParams:]
  -[_MLCANEPoolingParameters poolingParams]


_MLCANEConvolutionParameters : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *convolutionParams
 @property  NSDictionary *biasParams
 @property  NSDictionary *neuronParams

  // class methods
  +[_MLCANEConvolutionParameters convolutionUnitParametersWith:biasParams:neuronParams:]

  // instance methods
  -[_MLCANEConvolutionParameters .cxx_destruct]
  -[_MLCANEConvolutionParameters neuronParams]
  -[_MLCANEConvolutionParameters convolutionParams]
  -[_MLCANEConvolutionParameters biasParams]
  -[_MLCANEConvolutionParameters initWithConvolutionParams:biasParams:neuronParams:]


_MLCCPUFullyConnected : _MLCCPULayer
  // class methods
  +[_MLCCPUFullyConnected compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPUFullyConnected layerWithDevice:weights:biasTerms:convolutionDescriptor:neuronDescriptor:opType:]
  +[_MLCCPUFullyConnected layerWithDevice:weights:biasTerms:convolutionDescriptor:neuronDescriptor:fusedBatchNormAndNeuronLayers:mean:variance:beta:gamma:varianceEpsilon:momentum:opType:]
  +[_MLCCPUFullyConnected compileWithDevice:deviceOps:sourceTensors:resultTensor:fusedBatchNormAndNeuron:]

  // instance methods
  -[_MLCCPUFullyConnected initWithDevice:weights:biasTerms:convolutionDescriptor:neuronDescriptor:fusedBatchNormAndNeuronLayers:mean:variance:beta:gamma:varianceEpsilon:momentum:opType:]


MLCUpsampleLayer : MLCLayer
 @property  unsigned long upsampleWidth
 @property  unsigned long upsampleHeight
 @property  NSArray *shape
 @property  int sampleMode
 @property  BOOL alignsCorners

  // class methods
  +[MLCUpsampleLayer layerWithShape:]
  +[MLCUpsampleLayer layerWithShape:sampleMode:alignsCorners:]

  // instance methods
  -[MLCUpsampleLayer shape]
  -[MLCUpsampleLayer .cxx_destruct]
  -[MLCUpsampleLayer sampleMode]
  -[MLCUpsampleLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCUpsampleLayer summarizedDOTDescription]
  -[MLCUpsampleLayer resultSizeFromSourceSize:dimension:]
  -[MLCUpsampleLayer initWithShape:sampleMode:alignCorners:]
  -[MLCUpsampleLayer upsampleWidth]
  -[MLCUpsampleLayer upsampleHeight]
  -[MLCUpsampleLayer alignsCorners]


_MLCCPUGramMatrix : _MLCCPULayer
  // class methods
  +[_MLCCPUGramMatrix compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPUGramMatrix layerWithDevice:scale:]

  // instance methods
  -[_MLCCPUGramMatrix initWithDevice:scale:]


_MLCANEMatMulParameters : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *matMulParams
 @property  NSDictionary *gocParams

  // class methods
  +[_MLCANEMatMulParameters matMulUnitParametersWith:gocParams:]

  // instance methods
  -[_MLCANEMatMulParameters .cxx_destruct]
  -[_MLCANEMatMulParameters initWithMatMulParams:gocParams:]
  -[_MLCANEMatMulParameters matMulParams]
  -[_MLCANEMatMulParameters gocParams]


MLCTensorDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSArray *stride
 @property  unsigned long tensorAllocationSizeInBytes
 @property  unsigned long fanIn
 @property  unsigned long fanOut
 @property  BOOL variableLengthSequences
 @property  BOOL isFloatingPoint
 @property  int dataType
 @property  unsigned long dimensionCount
 @property  NSArray *shape
 @property  NSArray *sequenceLengths
 @property  BOOL sortedSequences
 @property  NSArray *batchSizePerSequenceStep

  // class methods
  +[MLCTensorDescriptor convolutionWeightsDescriptorWithWidth:height:inputFeatureChannelCount:outputFeatureChannelCount:dataType:]
  +[MLCTensorDescriptor descriptorWithShape:sequenceLengths:sortedSequences:dataType:]
  +[MLCTensorDescriptor descriptorWithShape:dataType:]
  +[MLCTensorDescriptor descriptorWithWidth:height:featureChannelCount:batchSize:dataType:]
  +[MLCTensorDescriptor descriptorWithWidth:height:featureChannels:batchSize:strideForWidth:strideForHeight:strideForBatch:dataType:]
  +[MLCTensorDescriptor descriptorWithShape:stride:dataType:]
  +[MLCTensorDescriptor elementByteCount:]
  +[MLCTensorDescriptor maxTensorDimensions]
  +[MLCTensorDescriptor descriptorWithWidth:height:featureChannelCount:batchSize:]
  +[MLCTensorDescriptor convolutionWeightsDescriptorWithInputFeatureChannelCount:outputFeatureChannelCount:dataType:]
  +[MLCTensorDescriptor convolutionBiasesDescriptorWithFeatureChannelCount:dataType:]

  // instance methods
  -[MLCTensorDescriptor copyWithZone:]
  -[MLCTensorDescriptor shape]
  -[MLCTensorDescriptor fanIn]
  -[MLCTensorDescriptor setStride:]
  -[MLCTensorDescriptor .cxx_destruct]
  -[MLCTensorDescriptor dataType]
  -[MLCTensorDescriptor fanOut]
  -[MLCTensorDescriptor stride]
  -[MLCTensorDescriptor isEqual:]
  -[MLCTensorDescriptor elementCount]
  -[MLCTensorDescriptor tensorAllocationSizeInBytes]
  -[MLCTensorDescriptor batchSizePerSequenceStep]
  -[MLCTensorDescriptor dimensionCount]
  -[MLCTensorDescriptor initNCHWTensorWithWidth:height:featureChannels:batchSize:strideForWidth:strideForHeight:strideForChannel:strideForBatch:fanIn:fanOut:dataType:]
  -[MLCTensorDescriptor initTensorWithShape:stride:sequenceLengths:sortedSequences:fanIn:fanOut:dataType:]
  -[MLCTensorDescriptor initTensorWithShape:stride:fanIn:fanOut:dataType:]
  -[MLCTensorDescriptor initConvolutionWeightsDescriptorWithWidth:height:inputFeatureChannels:outputFeatureChannels:dataType:]
  -[MLCTensorDescriptor setTensorAllocationSizeInBytes:]
  -[MLCTensorDescriptor sortedSequences]
  -[MLCTensorDescriptor sequenceLengths]
  -[MLCTensorDescriptor updateStride:tensorAllocationSize:]
  -[MLCTensorDescriptor isFloatingPoint]
  -[MLCTensorDescriptor variableLengthSequences]


_MLCANEArithmeticParameters : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *arithmeticParams

  // class methods
  +[_MLCANEArithmeticParameters arithmeticUnitParametersWith:]

  // instance methods
  -[_MLCANEArithmeticParameters .cxx_destruct]
  -[_MLCANEArithmeticParameters arithmeticParams]
  -[_MLCANEArithmeticParameters initWithArithmeticParams:]


MLCYOLOLossLayer : MLCLossLayer
 @property  MLCYOLOLossDescriptor *yoloLossDescriptor

  // class methods
  +[MLCYOLOLossLayer layerWithDescriptor:]

  // instance methods
  -[MLCYOLOLossLayer .cxx_destruct]
  -[MLCYOLOLossLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCYOLOLossLayer summarizedDOTDescription]
  -[MLCYOLOLossLayer resultSizeFromSourceSize:dimension:]
  -[MLCYOLOLossLayer initWithLossDescriptor:]
  -[MLCYOLOLossLayer yoloLossDescriptor]


MLCDeviceANE : NSObject /usr/lib/libSystem.B.dylib <MLCLayerOperations, MLCEngineDispatch, MLComputeEngineOptimizerUpdate, NSCopying, MLComputeEngineControl>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _ANEClient *clientConnection
 @property  MLCGraph *graph
 @property  NSMutableArray *outputs
 @property  _MLCANEModelObject *modelObject
 @property  NSArray *deviceList
 @property  int deviceType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MLCDeviceANE hasANE]

  // instance methods
  -[MLCDeviceANE graph]
  -[MLCDeviceANE setGraph:]
  -[MLCDeviceANE copyWithZone:]
  -[MLCDeviceANE clientConnection]
  -[MLCDeviceANE modelObject]
  -[MLCDeviceANE deviceType]
  -[MLCDeviceANE initWithType:]
  -[MLCDeviceANE .cxx_destruct]
  -[MLCDeviceANE setModelObject:]
  -[MLCDeviceANE outputs]
  -[MLCDeviceANE setOutputs:]
  -[MLCDeviceANE deviceList]
  -[MLCDeviceANE fusedBatchNormalizationAndNeuronLayerWithDescriptor:numOfFeatureChannels:mean:variance:beta:gamma:varianceEpsilon:momentum:]
  -[MLCDeviceANE batchNormalizationLayerWithChannelCount:mean:variance:beta:gamma:varianceEpsilon:momentum:]
  -[MLCDeviceANE compileLayerDeviceOps:sourceTensors:resultTensor:]
  -[MLCDeviceANE setNormalizationLayerOptimizerDataForDeviceOps:beta:gamma:]
  -[MLCDeviceANE poolingLayerWithDescriptor:paddingSizes:]
  -[MLCDeviceANE paddingLayerWithPaddingType:paddingLeft:paddingRight:paddingTop:paddingBottom:constantValue:]
  -[MLCDeviceANE groupNormalizationLayerWithFeatureChannelCount:groupCount:beta:gamma:varianceEpsilon:]
  -[MLCDeviceANE lossLayerWithDescriptor:]
  -[MLCDeviceANE fusedFullyConnectedBatchNormalizationAndNeuronLayerWithDescriptor:mean:variance:beta:gamma:varianceEpsilon:momentum:neuronDescriptor:weights:biasTerms:]
  -[MLCDeviceANE fusedFullyConnectedAndNeuronLayerWithDescriptor:convolutionDescriptor:weights:biasTerms:]
  -[MLCDeviceANE fullyConnectedLayerWithDescriptor:weights:biasTerms:]
  -[MLCDeviceANE setConvolutionLayerOptimizerDataForDeviceOps:weights:bias:]
  -[MLCDeviceANE createOptimizerDeviceDataForTensor:optimizer:optimizerData:isVector:]
  -[MLCDeviceANE convolutionLayerWithDescriptor:weights:biasTerms:]
  -[MLCDeviceANE convolutionTransposeLayerWithDescriptor:weights:biasTerms:]
  -[MLCDeviceANE neuronLayerWithDescriptor:]
  -[MLCDeviceANE layerNormalizationLayerWithNormalizedShape:beta:gamma:varianceEpsilon:]
  -[MLCDeviceANE instanceNormalizationLayerWithChannelCount:beta:gamma:varianceEpsilon:momentum:]
  -[MLCDeviceANE arithmeticLayerWithOperation:]
  -[MLCDeviceANE compareLayerWithPredicate:]
  -[MLCDeviceANE reductionLayerWithReduceType:dimension:sourceShapeCount:]
  -[MLCDeviceANE softmaxLayerWithOperation:dimension:]
  -[MLCDeviceANE lossYOLOLayerWithDescriptor:]
  -[MLCDeviceANE dropoutLayerWithRate:seed:]
  -[MLCDeviceANE reshapeLayerWithShape:]
  -[MLCDeviceANE transposeLayerWithShape:]
  -[MLCDeviceANE imageReshapeWithWidth:height:alignCorners:]
  -[MLCDeviceANE lstmLayerWithDescriptor:inputWeights:hiddenWeights:peepholeWeights:biasTerms:gateActivations:outputResultActivation:]
  -[MLCDeviceANE gramMatrixLayerWithScaleFactor:]
  -[MLCDeviceANE upsampleLayerWithScaleFactorX:scaleFactorY:sampleMode:alignCorners:]
  -[MLCDeviceANE concatLayerWithConcatDimension:sourceShapeCount:]
  -[MLCDeviceANE matMulLayerWithDescriptor:sourceTensors:resultTensor:inferenceOnly:]
  -[MLCDeviceANE optimizerSGDWithDescriptor:momentunScale:useNesterovMomentum:]
  -[MLCDeviceANE optimizerAdamWithDescriptor:beta1:beta2:epsilon:timeStep:]
  -[MLCDeviceANE optimizerRMSPropWithDescriptor:momentumScale:alpha:epsilon:centered:]
  -[MLCDeviceANE allocatedDeviceDataSizeForTraining:layer:]
  -[MLCDeviceANE setMHALayerOptimizerDataForDeviceOps:optimizerDataForWeights:optimizerDataForBias:]
  -[MLCDeviceANE setLSTMLayerOptimizerDataForDeviceOps:inputWeights:hiddenWeights:biasTerms:]
  -[MLCDeviceANE fuseLayersForTrainingGraph:]
  -[MLCDeviceANE fuseLayersForInferenceGraph:startAtLayerIndex:]
  -[MLCDeviceANE fusedConvolutionAndNeuronLayerWithDescriptor:convolutionDescriptor:weights:biasTerms:]
  -[MLCDeviceANE fusedConvolutionBatchNormalizationAndNeuronLayerWithDescriptor:mean:variance:beta:gamma:varianceEpsilon:momentum:neuronDescriptor:weights:biasTerms:]
  -[MLCDeviceANE multiheadAttentionLayerWithDescriptor:weights:bias:attnBias:inferenceOnly:]
  -[MLCDeviceANE compileOptimizerDeviceOps:]
  -[MLCDeviceANE deviceMemorySizeForTensor:]
  -[MLCDeviceANE numDevices]
  -[MLCDeviceANE readTensor:fromDeviceIndex:targetBuffer:batchSize:reduceOverBatch:]
  -[MLCDeviceANE signalNextEvent]
  -[MLCDeviceANE waitForOthers]
  -[MLCDeviceANE readTensor:targetBuffer:]
  -[MLCDeviceANE commitAndWaitForCompletion:enableProfiling:graphExecutionTime:graphResultTensor:]
  -[MLCDeviceANE readTensor:fromDeviceIndex:batchSize:]
  -[MLCDeviceANE readTensor:fromDeviceIndex:targetBuffer:batchSize:]
  -[MLCDeviceANE broadcastTensor:batchSize:]
  -[MLCDeviceANE dispatchBroadcastTensor:batchSize:]
  -[MLCDeviceANE waitForAllDevicesExcludingDevice:eventValue:]
  -[MLCDeviceANE needToAllocateDeviceMemoryForTensor:]
  -[MLCDeviceANE deviceHeapAllocatorWithHeapSize:]
  -[MLCDeviceANE allocateDeviceMemoryForTensor:]
  -[MLCDeviceANE deallocateDeviceMemoryForTensor:]
  -[MLCDeviceANE shareDeviceMemoryWithResultTensor:sourceTensor:]
  -[MLCDeviceANE readTensor:]
  -[MLCDeviceANE readTensor:fromDeviceIndex:]
  -[MLCDeviceANE dispatchReadTensor:targetBuffer:batchSize:]
  -[MLCDeviceANE broadcastTensor:]
  -[MLCDeviceANE dispatchBroadcastTensor:]
  -[MLCDeviceANE writeTensor:toDeviceIndex:]
  -[MLCDeviceANE dispatchWriteTensor:toDeviceIndex:]
  -[MLCDeviceANE synchronizeTensor:]
  -[MLCDeviceANE commitWithProfiling:graphExecutionTime:]
  -[MLCDeviceANE commitAndWaitForCompletion:]
  -[MLCDeviceANE commitWithCompletionHandler:enableProfiling:graphExecutionTime:graphResultTensor:]
  -[MLCDeviceANE signalAllDevicesExcludingDevice:eventValue:]
  -[MLCDeviceANE postProcessCompiledGraph:compilerOptions:]
  -[MLCDeviceANE deviceMemorySizeForTensor:deviceIndex:]
  -[MLCDeviceANE allocateDeviceMemoryForTensor:modelAtributes:]
  -[MLCDeviceANE writeToAllDevices:allocateData:batchSize:]
  -[MLCDeviceANE writeToDevice:toDeviceIndex:batchSize:]
  -[MLCDeviceANE writeWeightsOfConvolutionLayer:weightFileHandles:]
  -[MLCDeviceANE writeWeightsOfNormalizationLayer:weightFileHandle:]
  -[MLCDeviceANE unitBottomNamesWithLayer:]
  -[MLCDeviceANE addOutputs:toNetwork:]
  -[MLCDeviceANE validateIdenticalBatchSizeForInputs:]
  -[MLCDeviceANE addInputs:toNetwork:]
  -[MLCDeviceANE writeWeightsOfLayer:weightFileHandles:]
  -[MLCDeviceANE addUnitsOfLayer:toNetwork:enableLiveOutsForTraining:]
  -[MLCDeviceANE ANERequestWithModelAttributes:tensorIOSufraceObject:]
  -[MLCDeviceANE numberOfDevices]
  -[MLCDeviceANE deviceMemorySizeWithLiveIOStatus:batchSize:]
  -[MLCDeviceANE dispatchForwardLayerWithStates:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceANE dispatchForwardSliceLayerWithStates:sourceTensor:resultTensor:forTraining:]
  -[MLCDeviceANE dispatchForwardLayerWithStates:sourceTensor:secondaryTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceANE dispatchForwardLossLayerWithStates:sourceTensor:labelsTensor:labelsTensorStride:weightsTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceANE dispatchForwardMHALayerWithStates:sourceTensors:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceANE dispatchGradientLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchForwardReshapeLayerWithDeviceOps:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:keepsState:]
  -[MLCDeviceANE dispatchForwardLayer:sourceTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchForwardSplitLayer:sourceTensor:resultTensors:]
  -[MLCDeviceANE dispatchGradientSplitLayer:sourceGradientTensors:resultGradientTensor:]
  -[MLCDeviceANE dispatchForwardConcatLayer:sourceTensors:resultTensor:]
  -[MLCDeviceANE dispatchGradientConcatLayer:sourceGradientTensor:resultGradientTensors:]
  -[MLCDeviceANE dispatchForwardLayerNormalizationLayer:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceANE dispatchGradientLayerNormalizationLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchForwardSliceLayer:sourceTensor:resultTensor:]
  -[MLCDeviceANE dispatchForwardLayer:sourceTensor:secondaryTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchForwardLossLayer:sourceTensor:labelsTensor:labelsTensorStride:weightsTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchForwardLayerBatchNormalizationWithStates:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchForwardMatMulLayer:sourceTensor:secondarySourceTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchGradientMatMulLayer:sourceGradientTensor:resultGradientTensor:secondaryResultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchForwardMHALayer:sourceTensors:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchGradientMHALayer:sourceGradientTensor:resultGradientTensors:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchGradientLayer:sourceGradientTensor:resultGradientTensor:secondaryResultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchGradientReshapeLayerWithDeviceOps:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchGradientSliceLayer:sourceGradientTensor:resultGradientTensor:]
  -[MLCDeviceANE dispatchGradientBatchNormalizationLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchGradientLossLayer:sourceGradientTensor:labelsTensor:labelsTensorStride:weightsTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchInitialGradientLossLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchForwardAndGradientLossLayerWithStates:sourceTensor:labelsTensor:labelsTensorStride:weightsTensor:resultTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchRNNForwardLayer:sourceTensors:resultTensors:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchRNNForwardLayerWithStates:sourceTensors:resultTensors:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceANE dispatchRNNGradientLayer:sourceGradientTensors:resultGradientTensors:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE incrementReadCountForTensorDeviceMemory:increment:]
  -[MLCDeviceANE incrementReadCountForGradientState:increment:]
  -[MLCDeviceANE dispatchForwardSoftmaxLayer:sourceTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchForwardSoftmaxLayerWithStates:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceANE dispatchGradientSoftmaxLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceANE dispatchForwardEmbeddingLayer:weight:sourceTensor:resultTensor:]
  -[MLCDeviceANE dispatchGradientEmbeddingLayer:sourceGradientTensor:]
  -[MLCDeviceANE sumSharedGradientsForNormalizationLayerTensorParameter:layerIndexForSummedGradients:isBetaTensor:]
  -[MLCDeviceANE setOptimizerLearningRate:learningRate:]
  -[MLCDeviceANE setOptimizerTimeStep:timeStep:]
  -[MLCDeviceANE sumSharedGradientsForConvolutionLayerTensorParameter:layerIndexForSummedGradients:]
  -[MLCDeviceANE updateConvolutionLayer:optimizer:weightsParameter:biasesParameter:]
  -[MLCDeviceANE updateFullyConnectedLayer:optimizer:weightsParameter:biasesParameter:]
  -[MLCDeviceANE updateBatchNormalizationLayer:optimizer:betaParameter:gammaParameter:meanTensor:varianceTensor:]
  -[MLCDeviceANE updateInstanceNormalizationLayer:optimizer:betaParameter:gammaParameter:]
  -[MLCDeviceANE updateLayerNormalizationLayer:optimizer:betaParameter:gammaParameter:]
  -[MLCDeviceANE updateGroupNormalizationLayer:optimizer:betaParameter:gammaParameter:]
  -[MLCDeviceANE updateRNNLayer:optimizer:inputWeightsParameter:hiddenWeightsParameter:biasesParameter:]
  -[MLCDeviceANE updateMultiheadAttentionLayer:optimizer:weightsParameter:biasesParameter:]
  -[MLCDeviceANE updateEmbeddingLayer:weight:optimizer:]
  -[MLCDeviceANE updateTensorParameter:optimizer:gradient:]
  -[MLCDeviceANE synchronizeUpdatesForLayer:]
  -[MLCDeviceANE synchronizeOptimizerUpdatesForTensor:]
  -[MLCDeviceANE convertUpdatesToTensorDataForLayer:]
  -[MLCDeviceANE convertUpdatesToTensorDataForTensorParameters:]
  -[MLCDeviceANE reloadParameterDataFromHostToDeviceMemoryForTensor:]


_MLCGPUReshape : _MLCGPULayer
  // class methods
  +[_MLCGPUReshape layerWithDevice:]

  // instance methods
  -[_MLCGPUReshape initWithDevice:]


MLCTrainingGraph : MLCGraph
 @property  MLCOptimizer *optimizer
 @property  NSMutableArray *optimizerUpdateLayerList
 @property  NSMutableArray *optimizerParameterList
 @property  NSMutableArray *rootSourceGradientTensor
 @property  NSMutableArray *lossLayersInTrainingGraph
 @property  NSMutableArray *stopGradientTensorList
 @property  MLCLayer<MLCLayerCompiling> *lossLayer
 @property  BOOL gradientTensorsAreTemporary
 @property  MLCLayer *dummyLayer
 @property  unsigned long compilerOptions
 @property  unsigned long firstTrainableLayerIndex
 @property  BOOL allocateResultGradientTensors
 @property  BOOL allocateOptimizerData
 @property  BOOL updateOptimizerTimeStep
 @property  unsigned long deviceMemorySize

  // class methods
  +[MLCTrainingGraph graphWithGraphObjects:lossLayer:optimizer:]
  +[MLCTrainingGraph trainingGraphWithGraphObjects:lossLayer:optimizer:]

  // instance methods
  -[MLCTrainingGraph init]
  -[MLCTrainingGraph dealloc]
  -[MLCTrainingGraph .cxx_destruct]
  -[MLCTrainingGraph compileWithOptions:device:]
  -[MLCTrainingGraph addInputs:lossLabels:lossLabelWeights:]
  -[MLCTrainingGraph setTrainingTensorParameters:]
  -[MLCTrainingGraph synchronizeUpdates]
  -[MLCTrainingGraph executeWithInputsData:lossLabelsData:lossLabelWeightsData:batchSize:options:completionHandler:]
  -[MLCTrainingGraph addOutputs:]
  -[MLCTrainingGraph setOptimizer:]
  -[MLCTrainingGraph optimizer]
  -[MLCTrainingGraph deviceMemorySize]
  -[MLCTrainingGraph initWithGraphObjects:lossLayer:optimizer:]
  -[MLCTrainingGraph setRootSourceGradientTensor:]
  -[MLCTrainingGraph rootSourceGradientTensor]
  -[MLCTrainingGraph gradientTensorsAreTemporary]
  -[MLCTrainingGraph compilerOptions]
  -[MLCTrainingGraph sumRootSourceGradientTensor:device:]
  -[MLCTrainingGraph optimizerParameterList]
  -[MLCTrainingGraph setOptimizerParameterList:]
  -[MLCTrainingGraph updateIsTrainableForLayerWithStopGradientTensor:checkChildLayers:]
  -[MLCTrainingGraph markLayersAsTrainable]
  -[MLCTrainingGraph stopGradientTensorList]
  -[MLCTrainingGraph setFirstTrainableLayerIndex:]
  -[MLCTrainingGraph firstTrainableLayerIndex]
  -[MLCTrainingGraph allocateGradientTensorsForMultipleChildrenOfLayer:gradientTensorsAreTemporary:device:]
  -[MLCTrainingGraph resultGradientTensorToUseByExecuteGradientForLayer:sourceIndex:incrementIntermediateIndex:]
  -[MLCTrainingGraph linkRelatedGradientTensorsForConcatLayer:device:]
  -[MLCTrainingGraph allocateResultGradientTensors]
  -[MLCTrainingGraph updateTrainableLayerList:]
  -[MLCTrainingGraph allocateRootSourceGradientTensors:]
  -[MLCTrainingGraph allocateGradientTensorsForLayersInGraph:]
  -[MLCTrainingGraph setAllocateResultGradientTensors:]
  -[MLCTrainingGraph allocateOptimizerData]
  -[MLCTrainingGraph setOptimizerUpdateLayerList:]
  -[MLCTrainingGraph optimizerUpdateLayerList]
  -[MLCTrainingGraph setAllocateOptimizerData:]
  -[MLCTrainingGraph setLossLayersInTrainingGraph:]
  -[MLCTrainingGraph setCompilerOptions:]
  -[MLCTrainingGraph lossLayersInTrainingGraph]
  -[MLCTrainingGraph compileOptimizer:]
  -[MLCTrainingGraph setGradientTensorsAreTemporary:]
  -[MLCTrainingGraph sumIntermediateGradientTensorsForLayer:]
  -[MLCTrainingGraph sumAllRootSourceGradientTensors:]
  -[MLCTrainingGraph layerIndexToStoreSummedGradientsForTensor:]
  -[MLCTrainingGraph allocateOptimizerDataForGraph]
  -[MLCTrainingGraph checkAndSumIfSharedParameterUpdateForNormalizationLayerTensor:layer:device:isBetaTensor:]
  -[MLCTrainingGraph updateOptimizerTimeStep]
  -[MLCTrainingGraph recompile]
  -[MLCTrainingGraph executeForwardToLayerIndex:resultTensor:resultStateIsTemporary:batchSize:forTraining:]
  -[MLCTrainingGraph executeForwardWithBatchSize:options:outputsData:completionHandler:]
  -[MLCTrainingGraph compileAndAllocateGradientTensorsForGraph:]
  -[MLCTrainingGraph executeGradientFromLayerIndex:batchSize:]
  -[MLCTrainingGraph executeGradientWithBatchSize:options:outputsData:completionHandler:]
  -[MLCTrainingGraph executeOptimizerUpdate]
  -[MLCTrainingGraph executeWithInputsData:lossLabelsData:lossLabelWeightsData:outputsData:batchSize:options:completionHandler:]
  -[MLCTrainingGraph resultGradientTensorsForLayer:summedGradientForInputTensors:]
  -[MLCTrainingGraph dummyLayer]
  -[MLCTrainingGraph setUpdateOptimizerTimeStep:]
  -[MLCTrainingGraph stopGradientForTensors:]
  -[MLCTrainingGraph deviceMemorySizeWithDevice:]
  -[MLCTrainingGraph addInputs:lossLabels:]
  -[MLCTrainingGraph executeForwardWithBatchSize:options:completionHandler:]
  -[MLCTrainingGraph executeGradientWithBatchSize:options:completionHandler:]
  -[MLCTrainingGraph executeOptimizerUpdateWithOptions:completionHandler:]
  -[MLCTrainingGraph gradientTensorForInput:]
  -[MLCTrainingGraph resultGradientTensorsForLayer:]
  -[MLCTrainingGraph sourceGradientTensorsForLayer:]
  -[MLCTrainingGraph resultTensorsForLayer:]
  -[MLCTrainingGraph sourceTensorsForLayer:]
  -[MLCTrainingGraph allocateUserGradientForTensor:]
  -[MLCTrainingGraph linkWithGraphs:]
  -[MLCTrainingGraph gradientDataForParameter:layer:]
  -[MLCTrainingGraph setStopGradientTensorList:]
  -[MLCTrainingGraph lossLayer]
  -[MLCTrainingGraph setLossLayer:]


_MLCGaussianRandomGenerator : NSObject /usr/lib/libSystem.B.dylib
 @property  double mean
 @property  double scale
 @property  BOOL seeded
 @property  unsigned long seedValue

  // class methods
  +[_MLCGaussianRandomGenerator zeroMeanGaussianRandomGenerator]
  +[_MLCGaussianRandomGenerator zeroMeanGaussianRandomGeneratorWithSeed:]

  // instance methods
  -[_MLCGaussianRandomGenerator mean]
  -[_MLCGaussianRandomGenerator sample]
  -[_MLCGaussianRandomGenerator seeded]
  -[_MLCGaussianRandomGenerator scale]
  -[_MLCGaussianRandomGenerator initWithMean:scale:seeded:seedValue:]
  -[_MLCGaussianRandomGenerator seedValue]


MLCConditionalLayer : MLCLayer
 @property  MLCGraph *trueBranch
 @property  MLCGraph *falseBranch

  // class methods
  +[MLCConditionalLayer layerWithTrueBranch:falseBranch:]

  // instance methods
  -[MLCConditionalLayer .cxx_destruct]
  -[MLCConditionalLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCConditionalLayer resultTensorFromSources:]
  -[MLCConditionalLayer initWithTrueBranch:falseBranch:]
  -[MLCConditionalLayer trueBranch]
  -[MLCConditionalLayer falseBranch]
  -[MLCConditionalLayer resultSizeForOutputIndex:dimension:]


MLCInferenceGraph : MLCGraph
 @property  unsigned long inferenceNodeInit
 @property  unsigned long inferenceNodeIndexInGraphLayerList
 @property  unsigned long compilerOptions
 @property  unsigned long deviceMemorySize

  // class methods
  +[MLCInferenceGraph graphWithGraphObjects:]

  // instance methods
  -[MLCInferenceGraph nodeWithLayer:sources:]
  -[MLCInferenceGraph nodeWithLayer:source:]
  -[MLCInferenceGraph compileWithOptions:device:]
  -[MLCInferenceGraph addInputs:lossLabels:lossLabelWeights:]
  -[MLCInferenceGraph executeWithInputsData:lossLabelsData:lossLabelWeightsData:batchSize:options:completionHandler:]
  -[MLCInferenceGraph executeWithInputsData:batchSize:options:completionHandler:]
  -[MLCInferenceGraph addInputs:]
  -[MLCInferenceGraph addOutputs:]
  -[MLCInferenceGraph deviceMemorySize]
  -[MLCInferenceGraph initWithGraphObjects:]
  -[MLCInferenceGraph compilerOptions]
  -[MLCInferenceGraph setCompilerOptions:]
  -[MLCInferenceGraph recompile]
  -[MLCInferenceGraph executeWithInputsData:lossLabelsData:lossLabelWeightsData:outputsData:batchSize:options:completionHandler:]
  -[MLCInferenceGraph addInputs:lossLabels:]
  -[MLCInferenceGraph resultTensorsForLayer:]
  -[MLCInferenceGraph sourceTensorsForLayer:]
  -[MLCInferenceGraph linkWithGraphs:]
  -[MLCInferenceGraph inferenceNodeInit]
  -[MLCInferenceGraph setInferenceNodeInit:]
  -[MLCInferenceGraph setInferenceNodeIndexInGraphLayerList:]
  -[MLCInferenceGraph inferenceNodeIndexInGraphLayerList]
  -[MLCInferenceGraph splitWithSource:splitCount:dimension:]
  -[MLCInferenceGraph splitWithSource:splitSectionLengths:dimension:]
  -[MLCInferenceGraph concatenateWithSources:dimension:]
  -[MLCInferenceGraph reshapeWithShape:source:]
  -[MLCInferenceGraph transposeWithDimensions:source:]
  -[MLCInferenceGraph executeWithInputsData:outputsData:batchSize:options:completionHandler:]


_MLCGPUCompare : _MLCGPULayer
  // class methods
  +[_MLCGPUCompare layerWithDevice:predicate:]

  // instance methods
  -[_MLCGPUCompare initWithDevice:predicate:]


_MLCGPUFullyConnected : _MLCGPULayer
  // class methods
  +[_MLCGPUFullyConnected setGradientComputeWeightsAndBiasOnly:deviceOps:]
  +[_MLCGPUFullyConnected layerWithDevice:weights:biasTerms:descriptor:neuronDescriptor:]

  // instance methods
  -[_MLCGPUFullyConnected initWithDevice:weights:biasTerms:descriptor:neuronDescriptor:]


MLCLSTMDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  unsigned long inputSize
 @property  unsigned long hiddenSize
 @property  unsigned long layerCount
 @property  BOOL usesBiases
 @property  BOOL batchFirst
 @property  BOOL isBidirectional
 @property  BOOL returnsSequences
 @property  float dropout
 @property  unsigned long resultMode

  // class methods
  +[MLCLSTMDescriptor descriptorWithInputSize:hiddenSize:layerCount:usesBiases:isBidirectional:dropout:]
  +[MLCLSTMDescriptor descriptorWithInputSize:hiddenSize:layerCount:usesBiases:batchFirst:isBidirectional:dropout:]
  +[MLCLSTMDescriptor descriptorWithInputSize:hiddenSize:layerCount:usesBiases:batchFirst:isBidirectional:returnsSequences:dropout:]
  +[MLCLSTMDescriptor descriptorWithInputSize:hiddenSize:layerCount:usesBiases:batchFirst:isBidirectional:returnsSequences:dropout:resultMode:]
  +[MLCLSTMDescriptor descriptorWithInputSize:hiddenSize:layerCount:]

  // instance methods
  -[MLCLSTMDescriptor bias]
  -[MLCLSTMDescriptor copyWithZone:]
  -[MLCLSTMDescriptor inputSize]
  -[MLCLSTMDescriptor numberOfLayers]
  -[MLCLSTMDescriptor layerCount]
  -[MLCLSTMDescriptor isEqual:]
  -[MLCLSTMDescriptor dropout]
  -[MLCLSTMDescriptor batchFirst]
  -[MLCLSTMDescriptor isBidirectional]
  -[MLCLSTMDescriptor returnsSequences]
  -[MLCLSTMDescriptor initWithInputSize:hiddenSize:layerCount:usesBiases:batchFirst:isBidirectional:returnsSequences:dropout:resultMode:]
  -[MLCLSTMDescriptor hiddenSize]
  -[MLCLSTMDescriptor usesBiases]
  -[MLCLSTMDescriptor resultMode]


MLCGramMatrixLayer : MLCLayer
 @property  float scale

  // class methods
  +[MLCGramMatrixLayer layerWithScale:]

  // instance methods
  -[MLCGramMatrixLayer scale]
  -[MLCGramMatrixLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCGramMatrixLayer summarizedDOTDescription]
  -[MLCGramMatrixLayer resultSizeFromSourceSize:dimension:]
  -[MLCGramMatrixLayer resultTensorFromSources:]
  -[MLCGramMatrixLayer resultSizeFromSourceSizes:dimension:]
  -[MLCGramMatrixLayer initWithScaleFactor:]


MLCControlTreeNode : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  MLCTensor *predicate
 @property  BOOL needToNegate

  // class methods
  +[MLCControlTreeNode controlTreeNodeWithPredicate:needToNegate:]

  // instance methods
  -[MLCControlTreeNode copyWithZone:]
  -[MLCControlTreeNode .cxx_destruct]
  -[MLCControlTreeNode predicate]
  -[MLCControlTreeNode initWithTensor:needToNegate:]
  -[MLCControlTreeNode needToNegate]


MLCLossDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  int lossType
 @property  int reductionType
 @property  float weight
 @property  float labelSmoothing
 @property  unsigned long classCount
 @property  float epsilon
 @property  float delta

  // class methods
  +[MLCLossDescriptor descriptorWithType:reductionType:]
  +[MLCLossDescriptor descriptorWithType:reductionType:weight:labelSmoothing:classCount:]
  +[MLCLossDescriptor descriptorWithType:reductionType:weight:]
  +[MLCLossDescriptor descriptorWithType:reductionType:weight:labelSmoothing:classCount:epsilon:delta:]

  // instance methods
  -[MLCLossDescriptor copyWithZone:]
  -[MLCLossDescriptor delta]
  -[MLCLossDescriptor epsilon]
  -[MLCLossDescriptor reductionType]
  -[MLCLossDescriptor labelSmoothing]
  -[MLCLossDescriptor weight]
  -[MLCLossDescriptor lossType]
  -[MLCLossDescriptor isEqual:]
  -[MLCLossDescriptor classCount]
  -[MLCLossDescriptor initWithLossDescriptorWithType:reductionType:weight:]
  -[MLCLossDescriptor initWithLossDescriptorWithType:reductionType:weight:labelSmoothing:classCount:epsilon:delta:]


MLCTensorOptimizerDeviceData : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSArray *momentumVectors
 @property  NSArray *velocityVectors
 @property  NSArray *centerWeightVectors
 @property  id gpuOps
 @property  NSMutableArray *momentumData
 @property  NSMutableArray *momentumDataBytes
 @property  NSData *sourceBNNSDesc
 @property  NSData *gradientBNNSDesc

  // class methods
  +[MLCTensorOptimizerDeviceData optimizerDeviceData]

  // instance methods
  -[MLCTensorOptimizerDeviceData copyWithZone:]
  -[MLCTensorOptimizerDeviceData init]
  -[MLCTensorOptimizerDeviceData .cxx_destruct]
  -[MLCTensorOptimizerDeviceData gpuOps]
  -[MLCTensorOptimizerDeviceData momentumVectors]
  -[MLCTensorOptimizerDeviceData velocityVectors]
  -[MLCTensorOptimizerDeviceData centerWeightVectors]
  -[MLCTensorOptimizerDeviceData setMomentumVectors:]
  -[MLCTensorOptimizerDeviceData setVelocityVectors:]
  -[MLCTensorOptimizerDeviceData setCenterWeightVectors:]
  -[MLCTensorOptimizerDeviceData setGpuOps:]
  -[MLCTensorOptimizerDeviceData momentumData]
  -[MLCTensorOptimizerDeviceData setMomentumData:]
  -[MLCTensorOptimizerDeviceData momentumDataBytes]
  -[MLCTensorOptimizerDeviceData setMomentumDataBytes:]
  -[MLCTensorOptimizerDeviceData sourceBNNSDesc]
  -[MLCTensorOptimizerDeviceData setSourceBNNSDesc:]
  -[MLCTensorOptimizerDeviceData gradientBNNSDesc]
  -[MLCTensorOptimizerDeviceData setGradientBNNSDesc:]


_MLCCPUEmbedding : _MLCCPULayer
  // class methods
  +[_MLCCPUEmbedding layerWithDevice:descriptor:weights:inferenceOnly:]

  // instance methods
  -[_MLCCPUEmbedding initWithDevice:descriptor:weights:inferenceOnly:]


MLCRNNGPUDeviceOps : MLCGPUDeviceOps
 @property  NSMutableArray *rnnTrainableWeights
 @property  NSMutableArray *rnnTrainableWeightGradients
 @property  NSMutableArray *rnnTrainableStates
 @property  NSMutableArray *rnnBuffers
 @property  NSMutableArray *rnnExportedWeightMatrices
 @property  NSMutableArray *rnnExportedBiasTerms
 @property  NSMutableArray *rnnExportedMomentum
 @property  NSMutableArray *rnnExportedVelocity
 @property  NSMutableArray *rnnExportedCenterWeights
 @property  NSMutableArray *rnnStackedLayersResults
 @property  NSMutableArray *rnnExportedInputWeightGradientMatrices
 @property  NSMutableArray *rnnExportedHiddenWeightGradientMatrices
 @property  NSMutableArray *rnnExportedBiasGradientMatrices
 @property  NSMutableArray *rnnMomentumMatrices
 @property  NSMutableArray *rnnVelocityMatrices
 @property  NSMutableArray *rnnCenterWeightMatrices
 @property  id ntcImageToMatrixCopyKernel
 @property  id ntcMatrixToImageCopyKernel
 @property  BOOL isBidirectional
 @property  BOOL batchFirst
 @property  BOOL returnsSequences
 @property  unsigned long hiddenSize
 @property  unsigned long inputSize
 @property  unsigned long numLayers
 @property  id forwardTimeGradientResult
 @property  id reverseTimeGradientResult
 @property  id biDirectionalGradientResult
 @property  id biDirectionalSumKernel
 @property  id lstmMultiGPUChildOps

  // class methods
  +[MLCRNNGPUDeviceOps deviceOpsWithForwardKernel:gradientKernel:]

  // instance methods
  -[MLCRNNGPUDeviceOps .cxx_destruct]
  -[MLCRNNGPUDeviceOps inputSize]
  -[MLCRNNGPUDeviceOps setInputSize:]
  -[MLCRNNGPUDeviceOps batchFirst]
  -[MLCRNNGPUDeviceOps rnnTrainableWeightGradients]
  -[MLCRNNGPUDeviceOps rnnMomentumMatrices]
  -[MLCRNNGPUDeviceOps rnnVelocityMatrices]
  -[MLCRNNGPUDeviceOps rnnCenterWeightMatrices]
  -[MLCRNNGPUDeviceOps rnnExportedInputWeightGradientMatrices]
  -[MLCRNNGPUDeviceOps rnnExportedHiddenWeightGradientMatrices]
  -[MLCRNNGPUDeviceOps rnnExportedBiasGradientMatrices]
  -[MLCRNNGPUDeviceOps initWithForwardKernel:gradientKernel:]
  -[MLCRNNGPUDeviceOps numLayers]
  -[MLCRNNGPUDeviceOps isBidirectional]
  -[MLCRNNGPUDeviceOps rnnBuffers]
  -[MLCRNNGPUDeviceOps returnsSequences]
  -[MLCRNNGPUDeviceOps ntcImageToMatrixCopyKernel]
  -[MLCRNNGPUDeviceOps rnnTrainableStates]
  -[MLCRNNGPUDeviceOps rnnTrainableWeights]
  -[MLCRNNGPUDeviceOps ntcMatrixToImageCopyKernel]
  -[MLCRNNGPUDeviceOps setRnnStackedLayersResults:]
  -[MLCRNNGPUDeviceOps rnnStackedLayersResults]
  -[MLCRNNGPUDeviceOps biDirectionalSumKernel]
  -[MLCRNNGPUDeviceOps forwardTimeGradientResult]
  -[MLCRNNGPUDeviceOps reverseTimeGradientResult]
  -[MLCRNNGPUDeviceOps biDirectionalGradientResult]
  -[MLCRNNGPUDeviceOps hiddenSize]
  -[MLCRNNGPUDeviceOps setRnnTrainableWeights:]
  -[MLCRNNGPUDeviceOps setRnnTrainableWeightGradients:]
  -[MLCRNNGPUDeviceOps setRnnTrainableStates:]
  -[MLCRNNGPUDeviceOps setRnnBuffers:]
  -[MLCRNNGPUDeviceOps rnnExportedWeightMatrices]
  -[MLCRNNGPUDeviceOps setRnnExportedWeightMatrices:]
  -[MLCRNNGPUDeviceOps rnnExportedBiasTerms]
  -[MLCRNNGPUDeviceOps setRnnExportedBiasTerms:]
  -[MLCRNNGPUDeviceOps rnnExportedMomentum]
  -[MLCRNNGPUDeviceOps setRnnExportedMomentum:]
  -[MLCRNNGPUDeviceOps rnnExportedVelocity]
  -[MLCRNNGPUDeviceOps setRnnExportedVelocity:]
  -[MLCRNNGPUDeviceOps rnnExportedCenterWeights]
  -[MLCRNNGPUDeviceOps setRnnExportedCenterWeights:]
  -[MLCRNNGPUDeviceOps setRnnExportedInputWeightGradientMatrices:]
  -[MLCRNNGPUDeviceOps setRnnExportedHiddenWeightGradientMatrices:]
  -[MLCRNNGPUDeviceOps setRnnExportedBiasGradientMatrices:]
  -[MLCRNNGPUDeviceOps setRnnMomentumMatrices:]
  -[MLCRNNGPUDeviceOps setRnnVelocityMatrices:]
  -[MLCRNNGPUDeviceOps setRnnCenterWeightMatrices:]
  -[MLCRNNGPUDeviceOps setNtcImageToMatrixCopyKernel:]
  -[MLCRNNGPUDeviceOps setNtcMatrixToImageCopyKernel:]
  -[MLCRNNGPUDeviceOps setIsBidirectional:]
  -[MLCRNNGPUDeviceOps setBatchFirst:]
  -[MLCRNNGPUDeviceOps setReturnsSequences:]
  -[MLCRNNGPUDeviceOps setHiddenSize:]
  -[MLCRNNGPUDeviceOps setNumLayers:]
  -[MLCRNNGPUDeviceOps setForwardTimeGradientResult:]
  -[MLCRNNGPUDeviceOps setReverseTimeGradientResult:]
  -[MLCRNNGPUDeviceOps setBiDirectionalGradientResult:]
  -[MLCRNNGPUDeviceOps setBiDirectionalSumKernel:]
  -[MLCRNNGPUDeviceOps lstmMultiGPUChildOps]
  -[MLCRNNGPUDeviceOps setLstmMultiGPUChildOps:]


MLCMultiGPUDeviceOps : MLCGPUDeviceOps
 @property  int multiGPUReduction
 @property  NSArray *localGradientMatrices
 @property  NSArray *remoteGradientBuffers
 @property  NSArray *receivedGradientMatrices
 @property  NSArray *matrixSumKernels
 @property  NSMutableArray *allReducedGradientMatrices
 @property  NSMutableArray *rnnTrainableWeightGradients

  // class methods
  +[MLCMultiGPUDeviceOps multiGPUDeviceOpsWithGPUDeviceOps:]

  // instance methods
  -[MLCMultiGPUDeviceOps .cxx_destruct]
  -[MLCMultiGPUDeviceOps rnnTrainableWeightGradients]
  -[MLCMultiGPUDeviceOps localGradientMatrices]
  -[MLCMultiGPUDeviceOps receivedGradientMatrices]
  -[MLCMultiGPUDeviceOps remoteGradientBuffers]
  -[MLCMultiGPUDeviceOps allReducedGradientMatrices]
  -[MLCMultiGPUDeviceOps matrixSumKernels]
  -[MLCMultiGPUDeviceOps setRemoteGradientBuffers:]
  -[MLCMultiGPUDeviceOps setLocalGradientMatrices:]
  -[MLCMultiGPUDeviceOps setReceivedGradientMatrices:]
  -[MLCMultiGPUDeviceOps setMatrixSumKernels:]
  -[MLCMultiGPUDeviceOps setAllReducedGradientMatrices:]
  -[MLCMultiGPUDeviceOps setMultiGPUReduction:]
  -[MLCMultiGPUDeviceOps setRnnTrainableWeightGradients:]
  -[MLCMultiGPUDeviceOps initWithGPUDevicOps:]
  -[MLCMultiGPUDeviceOps multiGPUReduction]


MLCSGDOptimizer : MLCOptimizer <MLCOptimizerCompiling, NSCopying>
 @property  MLCOptimizerDescriptor *optimizerDescriptor
 @property  float momentumScale
 @property  BOOL usesNesterovMomentum
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MLCSGDOptimizer optimizerWithDescriptor:]
  +[MLCSGDOptimizer optimizerWithDescriptor:momentumScale:usesNestrovMomentum:]
  +[MLCSGDOptimizer optimizerWithDescriptor:momentumScale:usesNesterovMomentum:]

  // instance methods
  -[MLCSGDOptimizer copyWithZone:]
  -[MLCSGDOptimizer .cxx_destruct]
  -[MLCSGDOptimizer momentumScale]
  -[MLCSGDOptimizer compileForDevice:]
  -[MLCSGDOptimizer initWithMomentumScale:useNesterovMomentum:optimizerDescriptor:]
  -[MLCSGDOptimizer usesNesterovMomentum]
  -[MLCSGDOptimizer optimizerDescriptor]
  -[MLCSGDOptimizer usesNestrovMomentum]


_MLCGPUBatchNormalization : _MLCGPULayer
  // class methods
  +[_MLCGPUBatchNormalization layerWithDevice:numOfFeatureChannels:mean:variance:beta:gamma:varianceEpsilon:momentum:]
  +[_MLCGPUBatchNormalization layerWithDevice:fusedWithNeuronDescriptor:numOfFeatureChannels:mean:variance:beta:gamma:varianceEpsilon:momentum:]
  +[_MLCGPUBatchNormalization setOptimizerDataForDevice:deviceOps:beta:gamma:]
  +[_MLCGPUBatchNormalization allocateMovingUpdaterWith:gpuOps:mean:variance:momentum:deviceIndex:]

  // instance methods
  -[_MLCGPUBatchNormalization initWithDevice:fusedWithNeuronDescriptor:numOfFeatureChannels:mean:variance:beta:gamma:varianceEpsilon:momentum:]
  -[_MLCGPUBatchNormalization initWithDevice:numOfFeatureChannels:mean:variance:beta:gamma:varianceEpsilon:momentum:]


_MLCGPUGramMatrix : _MLCGPULayer
  // class methods
  +[_MLCGPUGramMatrix layerWithDevice:scale:]

  // instance methods
  -[_MLCGPUGramMatrix initWithDevice:scale:]


MLCLayerNormGPUDeviceOps : MLCGPUDeviceOps
 @property  NSArray *normalizedShape
 @property  float varianceEpsilon
 @property  id layerNormGammaGradient
 @property  id layerNormBetaGradient
 @property  id layerNormInverseSqrtVariance
 @property  id layerNormInputNormalized

  // class methods
  +[MLCLayerNormGPUDeviceOps deviceOpsWithForwardKernel:gradientKernel:]

  // instance methods
  -[MLCLayerNormGPUDeviceOps .cxx_destruct]
  -[MLCLayerNormGPUDeviceOps varianceEpsilon]
  -[MLCLayerNormGPUDeviceOps layerNormBetaGradient]
  -[MLCLayerNormGPUDeviceOps layerNormGammaGradient]
  -[MLCLayerNormGPUDeviceOps initWithForwardKernel:gradientKernel:]
  -[MLCLayerNormGPUDeviceOps setNormalizedShape:]
  -[MLCLayerNormGPUDeviceOps setVarianceEpsilon:]
  -[MLCLayerNormGPUDeviceOps setLayerNormGammaGradient:]
  -[MLCLayerNormGPUDeviceOps setLayerNormBetaGradient:]
  -[MLCLayerNormGPUDeviceOps normalizedShape]
  -[MLCLayerNormGPUDeviceOps layerNormInputNormalized]
  -[MLCLayerNormGPUDeviceOps setLayerNormInputNormalized:]
  -[MLCLayerNormGPUDeviceOps layerNormInverseSqrtVariance]
  -[MLCLayerNormGPUDeviceOps setLayerNormInverseSqrtVariance:]


_MLCCPULSTM : _MLCCPULayer
  // class methods
  +[_MLCCPULSTM compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPULSTM layerWithDevice:lstmDescriptor:inputWeights:hiddenWeights:peepholeWeights:biasTerms:gateActivations:ouputResultActivation:]
  +[_MLCCPULSTM setOptimizerDataForDevice:deviceOps:dataForInputWeights:dataForHiddenWeights:dataForPeepholeWeights:dataForBias:]

  // instance methods
  -[_MLCCPULSTM initWithDevice:lstmDescriptor:inputWeights:hiddenWeights:peepholeWeights:biasTerms:gateActivations:outputResultActivation:]


MLCMultiheadAttentionDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasKeyPaddingMask
 @property  BOOL hasAttentionMask
 @property  unsigned long modelDimension
 @property  unsigned long keyDimension
 @property  unsigned long valueDimension
 @property  unsigned long headCount
 @property  float dropout
 @property  BOOL hasBiases
 @property  BOOL hasAttentionBiases
 @property  BOOL addsZeroAttention

  // class methods
  +[MLCMultiheadAttentionDescriptor descriptorWithModelDimension:keyDimension:valueDimension:headCount:dropout:hasBiases:hasAttentionBiases:addsZeroAttention:]
  +[MLCMultiheadAttentionDescriptor descriptorWithModelDimension:headCount:]

  // instance methods
  -[MLCMultiheadAttentionDescriptor copyWithZone:]
  -[MLCMultiheadAttentionDescriptor modelDimension]
  -[MLCMultiheadAttentionDescriptor isEqual:]
  -[MLCMultiheadAttentionDescriptor dropout]
  -[MLCMultiheadAttentionDescriptor hasBiases]
  -[MLCMultiheadAttentionDescriptor hasAttentionBiases]
  -[MLCMultiheadAttentionDescriptor addsZeroAttention]
  -[MLCMultiheadAttentionDescriptor hasKeyPaddingMask]
  -[MLCMultiheadAttentionDescriptor hasAttentionMask]
  -[MLCMultiheadAttentionDescriptor initWithModelDimension:keyDimension:valueDimension:headCount:dropout:hasBias:hasAttentionBias:addsZeroAttention:]
  -[MLCMultiheadAttentionDescriptor keyDimension]
  -[MLCMultiheadAttentionDescriptor valueDimension]
  -[MLCMultiheadAttentionDescriptor headCount]
  -[MLCMultiheadAttentionDescriptor setHasKeyPaddingMask:]
  -[MLCMultiheadAttentionDescriptor setHasAttentionMask:]


MLCConvolutionLayer : MLCLayer
 @property  int accumulatorPrecisionOption
 @property  MLCConvolutionDescriptor *descriptor
 @property  MLCTensor *weights
 @property  MLCTensor *biases
 @property  MLCTensorParameter *weightsParameter
 @property  MLCTensorParameter *biasesParameter

  // class methods
  +[MLCConvolutionLayer layerWithWeights:biases:descriptor:]

  // instance methods
  -[MLCConvolutionLayer biases]
  -[MLCConvolutionLayer weights]
  -[MLCConvolutionLayer .cxx_destruct]
  -[MLCConvolutionLayer accumulatorPrecisionOption]
  -[MLCConvolutionLayer descriptor]
  -[MLCConvolutionLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCConvolutionLayer allocateDataForOptimizer:]
  -[MLCConvolutionLayer allocatedDataSizeForTraining:optimizer:]
  -[MLCConvolutionLayer summarizedDOTDescription]
  -[MLCConvolutionLayer linkAssociatedTensors]
  -[MLCConvolutionLayer unlinkAssociatedTensors]
  -[MLCConvolutionLayer resultSizeFromSourceSize:dimension:]
  -[MLCConvolutionLayer resultTensorFromSources:]
  -[MLCConvolutionLayer initWithWeights:biases:descriptor:]
  -[MLCConvolutionLayer weightsParameter]
  -[MLCConvolutionLayer biasesParameter]
  -[MLCConvolutionLayer allocateGradientsForParameters]


MLCSoftmaxLayer : MLCLayer
 @property  int operation
 @property  unsigned long dimension

  // class methods
  +[MLCSoftmaxLayer layerWithOperation:]
  +[MLCSoftmaxLayer layerWithOperation:dimension:]

  // instance methods
  -[MLCSoftmaxLayer operation]
  -[MLCSoftmaxLayer dimension]
  -[MLCSoftmaxLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCSoftmaxLayer summarizedDOTDescription]
  -[MLCSoftmaxLayer resultTensorFromSources:]
  -[MLCSoftmaxLayer isSupportedShapeForTensorSources:]
  -[MLCSoftmaxLayer initWithSoftmaxOperation:dimension:]


_MLCCPUCompare : _MLCCPULayer
  // class methods
  +[_MLCCPUCompare compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPUCompare layerWithDevice:predicate:]

  // instance methods
  -[_MLCCPUCompare initWithDevice:predicate:]


MLCCPUDeviceOps : MLCDeviceOps
 @property  NSData *weightsDeltaDataBytes
 @property  NSData *biasDeltaDataBytes
 @property  NSMutableArray *weightsDeltaDataBytesArray
 @property  NSMutableArray *biasDeltaDataBytesArray
 @property  NSData *betaDeltaDataBytes
 @property  NSData *gammaDeltaDataBytes
 @property  NSMutableArray *weightsMomentumDataBytes
 @property  NSMutableArray *biasMomentumDataBytes
 @property  NSMutableArray *weightsMomentumDataBytesArray
 @property  NSMutableArray *biasMomentumDataBytesArray
 @property  NSMutableArray *betaMomentumDataBytes
 @property  NSMutableArray *gammaMomentumDataBytes
 @property  _MLCCPULayer *layer
 @property  int deviceOpType
 @property  unsigned long sourceStride
 @property  unsigned long sourceStrideSecondary
 @property  unsigned long sourceStrideTertiary
 @property  unsigned long resultStride
 @property  unsigned long sourceDataOffset
 @property  unsigned long secondarySourceDataOffset
 @property  unsigned long tertiarySourceDataOffset
 @property  unsigned long resultDataOffset
 @property  BOOL inferenceOnly
 @property  NSData *params
 @property  NSData *fusedPrimitiveParams
 @property  NSArray *inDeltaData
 @property  NSArray *outDeltaData
 @property  NSData *weightsDeltaData
 @property  NSData *biasDeltaData
 @property  NSMutableArray *weightsMomentumData
 @property  NSMutableArray *biasMomentumData
 @property  BOOL computeWeightsAndBiasOnly
 @property  NSData *betaDeltaData
 @property  NSData *gammaDeltaData
 @property  NSMutableArray *betaMomentumData
 @property  NSMutableArray *gammaMomentumData
 @property  MLCTensor *movingMean
 @property  MLCTensor *movingVariance
 @property  ^v BNNSFilter
 @property  BOOL isFusedBNNSFilter
 @property  int paddingPolicy
 @property  BOOL useSourceGradientDeviceMemoryForResultGradientTensor
 @property  BOOL useSourceGradientDeviceMemoryForSecondaryResultGradientTensor
 @property  float lossWeight
 @property  BOOL binaryOperation
 @property  BOOL hasBias
 @property  unsigned long softmaxDimension
 @property  BOOL transposeX
 @property  BOOL transposeY
 @property  BOOL leftIsAWeight
 @property  BOOL rightIsAWeight
 @property  NSNumber *paddingIndex
 @property  NSArray *embeddingParams
 @property  BOOL scaleGradientByFrequency

  // class methods
  +[MLCCPUDeviceOps deviceOpsWithType:params:inDeltaData:outDeltaData:weightsDeltaData:biasDeltaData:weightsMomentumData:biasMomentumData:]
  +[MLCCPUDeviceOps deviceOpsWithType:params:inDeltaData:outDeltaData:]
  +[MLCCPUDeviceOps deviceOpsWithType:params:inDeltaData:outDeltaData:betaDeltaData:gammaDeltaData:betaMomentumData:gammaMomentumData:]

  // instance methods
  -[MLCCPUDeviceOps setLayer:]
  -[MLCCPUDeviceOps params]
  -[MLCCPUDeviceOps paddingPolicy]
  -[MLCCPUDeviceOps setPaddingPolicy:]
  -[MLCCPUDeviceOps layer]
  -[MLCCPUDeviceOps dealloc]
  -[MLCCPUDeviceOps .cxx_destruct]
  -[MLCCPUDeviceOps hasBias]
  -[MLCCPUDeviceOps deviceOpType]
  -[MLCCPUDeviceOps initWithType:params:inDeltaData:outDeltaData:weightsDeltaData:biasDeltaData:weightsMomentumData:biasMomentumData:betaDeltaData:gammaDeltaData:betaMomentumData:gammaMomentumData:]
  -[MLCCPUDeviceOps setSoftmaxDimension:]
  -[MLCCPUDeviceOps setTransposeX:]
  -[MLCCPUDeviceOps setTransposeY:]
  -[MLCCPUDeviceOps setInferenceOnly:]
  -[MLCCPUDeviceOps setLeftIsAWeight:]
  -[MLCCPUDeviceOps setRightIsAWeight:]
  -[MLCCPUDeviceOps leftIsAWeight]
  -[MLCCPUDeviceOps rightIsAWeight]
  -[MLCCPUDeviceOps setSourceStride:]
  -[MLCCPUDeviceOps setSourceStrideSecondary:]
  -[MLCCPUDeviceOps setResultStride:]
  -[MLCCPUDeviceOps inferenceOnly]
  -[MLCCPUDeviceOps inDeltaData]
  -[MLCCPUDeviceOps outDeltaData]
  -[MLCCPUDeviceOps softmaxDimension]
  -[MLCCPUDeviceOps useSourceGradientDeviceMemoryForResultGradientTensor]
  -[MLCCPUDeviceOps setUseSourceGradientDeviceMemoryForResultGradientTensor:]
  -[MLCCPUDeviceOps useSourceGradientDeviceMemoryForSecondaryResultGradientTensor]
  -[MLCCPUDeviceOps setUseSourceGradientDeviceMemoryForSecondaryResultGradientTensor:]
  -[MLCCPUDeviceOps transposeX]
  -[MLCCPUDeviceOps transposeY]
  -[MLCCPUDeviceOps setBNNSFilter:]
  -[MLCCPUDeviceOps setComputeWeightsAndBiasOnly:]
  -[MLCCPUDeviceOps weightsDeltaData]
  -[MLCCPUDeviceOps biasDeltaData]
  -[MLCCPUDeviceOps betaDeltaData]
  -[MLCCPUDeviceOps gammaDeltaData]
  -[MLCCPUDeviceOps weightsDeltaDataBytes]
  -[MLCCPUDeviceOps paddingIndex]
  -[MLCCPUDeviceOps weightsDeltaDataBytesArray]
  -[MLCCPUDeviceOps setWeightsDeltaDataBytes:]
  -[MLCCPUDeviceOps biasDeltaDataBytes]
  -[MLCCPUDeviceOps setBiasDeltaDataBytes:]
  -[MLCCPUDeviceOps biasDeltaDataBytesArray]
  -[MLCCPUDeviceOps setHasBias:]
  -[MLCCPUDeviceOps setWeightsDeltaDataBytesArray:]
  -[MLCCPUDeviceOps setBiasDeltaDataBytesArray:]
  -[MLCCPUDeviceOps setSourceStrideTertiary:]
  -[MLCCPUDeviceOps sourceStride]
  -[MLCCPUDeviceOps sourceStrideSecondary]
  -[MLCCPUDeviceOps sourceStrideTertiary]
  -[MLCCPUDeviceOps resultStride]
  -[MLCCPUDeviceOps weightsMomentumDataBytesArray]
  -[MLCCPUDeviceOps biasMomentumDataBytesArray]
  -[MLCCPUDeviceOps setBinaryOperation:]
  -[MLCCPUDeviceOps setWeightsMomentumDataBytes:]
  -[MLCCPUDeviceOps setBiasMomentumDataBytes:]
  -[MLCCPUDeviceOps setFusedPrimitiveParams:]
  -[MLCCPUDeviceOps setBetaDeltaData:]
  -[MLCCPUDeviceOps setBetaMomentumData:]
  -[MLCCPUDeviceOps setGammaMomentumData:]
  -[MLCCPUDeviceOps setBetaMomentumDataBytes:]
  -[MLCCPUDeviceOps setGammaDeltaData:]
  -[MLCCPUDeviceOps setBetaDeltaDataBytes:]
  -[MLCCPUDeviceOps setGammaDeltaDataBytes:]
  -[MLCCPUDeviceOps setGammaMomentumDataBytes:]
  -[MLCCPUDeviceOps setMovingMean:]
  -[MLCCPUDeviceOps setMovingVariance:]
  -[MLCCPUDeviceOps fusedPrimitiveParams]
  -[MLCCPUDeviceOps setIsFusedBNNSFilter:]
  -[MLCCPUDeviceOps binaryOperation]
  -[MLCCPUDeviceOps BNNSFilter]
  -[MLCCPUDeviceOps embeddingParams]
  -[MLCCPUDeviceOps setSourceDataOffset:]
  -[MLCCPUDeviceOps setSecondarySourceDataOffset:]
  -[MLCCPUDeviceOps setTertiarySourceDataOffset:]
  -[MLCCPUDeviceOps setResultDataOffset:]
  -[MLCCPUDeviceOps isFusedBNNSFilter]
  -[MLCCPUDeviceOps lossWeight]
  -[MLCCPUDeviceOps resultDataOffset]
  -[MLCCPUDeviceOps sourceDataOffset]
  -[MLCCPUDeviceOps computeWeightsAndBiasOnly]
  -[MLCCPUDeviceOps secondarySourceDataOffset]
  -[MLCCPUDeviceOps tertiarySourceDataOffset]
  -[MLCCPUDeviceOps scaleGradientByFrequency]
  -[MLCCPUDeviceOps setPaddingIndex:]
  -[MLCCPUDeviceOps setEmbeddingParams:]
  -[MLCCPUDeviceOps setScaleGradientByFrequency:]
  -[MLCCPUDeviceOps weightsMomentumData]
  -[MLCCPUDeviceOps weightsMomentumDataBytes]
  -[MLCCPUDeviceOps setLossWeight:]
  -[MLCCPUDeviceOps initWithType:params:inDeltaData:outDeltaData:weightsDeltaData:biasDeltaData:weightsMomentumData:biasMomentumData:]
  -[MLCCPUDeviceOps initWithType:params:inDeltaData:outDeltaData:betaDeltaData:gammaDeltaData:betaMomentumData:gammaMomentumData:]
  -[MLCCPUDeviceOps biasMomentumData]
  -[MLCCPUDeviceOps betaMomentumData]
  -[MLCCPUDeviceOps gammaMomentumData]
  -[MLCCPUDeviceOps movingMean]
  -[MLCCPUDeviceOps movingVariance]
  -[MLCCPUDeviceOps betaDeltaDataBytes]
  -[MLCCPUDeviceOps gammaDeltaDataBytes]
  -[MLCCPUDeviceOps biasMomentumDataBytes]
  -[MLCCPUDeviceOps setWeightsMomentumDataBytesArray:]
  -[MLCCPUDeviceOps setBiasMomentumDataBytesArray:]
  -[MLCCPUDeviceOps betaMomentumDataBytes]
  -[MLCCPUDeviceOps gammaMomentumDataBytes]


MLCReductionLayer : MLCLayer
 @property  int reductionType
 @property  unsigned long dimension

  // class methods
  +[MLCReductionLayer layerWithReductionType:dimension:]

  // instance methods
  -[MLCReductionLayer reductionType]
  -[MLCReductionLayer dimension]
  -[MLCReductionLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCReductionLayer summarizedDOTDescription]
  -[MLCReductionLayer resultSizeFromSourceSize:dimension:]
  -[MLCReductionLayer resultTensorFromSources:]
  -[MLCReductionLayer isSupportedShapeForTensorSources:]
  -[MLCReductionLayer initWithReduceType:dimension:]


MLCErrors : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MLCErrors invalidStateErrorForMethod:description:]
  +[MLCErrors invalidInputErrorForMethod:description:]
  +[MLCErrors createErrorWithCode:description:]


MLCCustomLayerTensor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSData *cpuBuffer
 @property  id gpuBuffer
 @property  MLCTensorDescriptor *descriptor
 @property  MLCTensorData *hostData
 @property  <MTLBuffer> *metalBuffer

  // class methods
  +[MLCCustomLayerTensor customLayerTensorWithDescriptor:gpuBuffer:]
  +[MLCCustomLayerTensor customLayerTensorWithDescriptor:cpuBuffer:]

  // instance methods
  -[MLCCustomLayerTensor copyWithZone:]
  -[MLCCustomLayerTensor .cxx_destruct]
  -[MLCCustomLayerTensor descriptor]
  -[MLCCustomLayerTensor metalBuffer]
  -[MLCCustomLayerTensor initWithTensorDescriptor:cpuBuffer:gpuBuffer:]
  -[MLCCustomLayerTensor cpuBuffer]
  -[MLCCustomLayerTensor gpuBuffer]
  -[MLCCustomLayerTensor hostData]
  -[MLCCustomLayerTensor setCpuBuffer:]
  -[MLCCustomLayerTensor setGpuBuffer:]


_MLCCPUConvolution : _MLCCPULayer
  // class methods
  +[_MLCCPUConvolution layerWithDevice:weights:biasTerms:convolutionDescriptor:neuronDescriptor:]
  +[_MLCCPUConvolution compileWithDevice:deviceOps:sourceTensors:resultTensor:convolutionTranspose:]
  +[_MLCCPUConvolution createBNNSNDArrayDescriptorForDescriptor:weightsDelta:fullyConnected:]
  +[_MLCCPUConvolution createBNNSNDArrayDescriptorForDescriptor:biasDelta:]

  // instance methods
  -[_MLCCPUConvolution initWithDevice:weights:biasTerms:convolutionDescriptor:neuronDescriptor:]


MLCReshapeLayer : MLCLayer
 @property  NSArray *shape

  // class methods
  +[MLCReshapeLayer layerWithShape:]

  // instance methods
  -[MLCReshapeLayer shape]
  -[MLCReshapeLayer .cxx_destruct]
  -[MLCReshapeLayer initWithShape:]
  -[MLCReshapeLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCReshapeLayer summarizedDOTDescription]
  -[MLCReshapeLayer resultSizeFromSourceSize:dimension:]
  -[MLCReshapeLayer resultTensorFromSources:]
  -[MLCReshapeLayer isSupportedShapeForTensorSources:]
  -[MLCReshapeLayer deviceMemorySizeWithOptimizer:device:]
  -[MLCReshapeLayer deviceMemorySizeForForward]
  -[MLCReshapeLayer isStaticBatchSize]


MLCLayerNormalizationLayer : MLCLayer
 @property  NSArray *normalizedShape
 @property  MLCTensor *beta
 @property  MLCTensor *gamma
 @property  MLCTensorParameter *betaParameter
 @property  MLCTensorParameter *gammaParameter
 @property  float varianceEpsilon

  // class methods
  +[MLCLayerNormalizationLayer layerWithNormalizedShape:beta:gamma:varianceEpsilon:]

  // instance methods
  -[MLCLayerNormalizationLayer beta]
  -[MLCLayerNormalizationLayer .cxx_destruct]
  -[MLCLayerNormalizationLayer gamma]
  -[MLCLayerNormalizationLayer varianceEpsilon]
  -[MLCLayerNormalizationLayer betaParameter]
  -[MLCLayerNormalizationLayer gammaParameter]
  -[MLCLayerNormalizationLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCLayerNormalizationLayer allocateDataForOptimizer:]
  -[MLCLayerNormalizationLayer allocatedDataSizeForTraining:optimizer:]
  -[MLCLayerNormalizationLayer summarizedDOTDescription]
  -[MLCLayerNormalizationLayer linkAssociatedTensors]
  -[MLCLayerNormalizationLayer unlinkAssociatedTensors]
  -[MLCLayerNormalizationLayer isValidTrainingParameters]
  -[MLCLayerNormalizationLayer resultSizeFromSourceSize:dimension:]
  -[MLCLayerNormalizationLayer normalizedShape]
  -[MLCLayerNormalizationLayer initWithNormalizedShape:beta:gamma:varianceEpsilon:]


_MLCGPUPooling : _MLCGPULayer
  // class methods
  +[_MLCGPUPooling compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCGPUPooling layerWithDevice:descriptor:paddingSizes:]

  // instance methods
  -[_MLCGPUPooling initWithDevice:descriptor:paddingSizes:]


MLCTensorData : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *data
 @property  ^v bytes
 @property  unsigned long length

  // class methods
  +[MLCTensorData dataWithBytes:length:]
  +[MLCTensorData dataWithBytesNoCopy:length:freeWhenDone:]
  +[MLCTensorData dataWithBytesNoCopy:length:]
  +[MLCTensorData dataWithImmutableBytesNoCopy:length:]

  // instance methods
  -[MLCTensorData bytes]
  -[MLCTensorData setData:]
  -[MLCTensorData length]
  -[MLCTensorData .cxx_destruct]
  -[MLCTensorData data]
  -[MLCTensorData initWithData:length:]
  -[MLCTensorData initWithDataNoCopy:length:freeWhenDone:]


_MLCGPUUpsample : _MLCGPULayer
  // class methods
  +[_MLCGPUUpsample layerWithDevice:scaleFactorX:scaleFactorY:sampleMode:alignCorners:]

  // instance methods
  -[_MLCGPUUpsample initWithDevice:scaleFactorX:scaleFactorY:sampleMode:alignCorners:]


MLCPhiLayer : MLCLayer
  // class methods
  +[MLCPhiLayer layerWithControlTreeNode:sources:resultTensor:]

  // instance methods
  -[MLCPhiLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCPhiLayer resultSizeFromSourceSize:dimension:]
  -[MLCPhiLayer initWithControlTreeNode:sources:resultTensor:]


MLCDeviceOps : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  id source
 @property  id secondarySource
 @property  id tertiarySource
 @property  id result
 @property  unsigned long batchSize

  // instance methods
  -[MLCDeviceOps copyWithZone:]
  -[MLCDeviceOps batchSize]
  -[MLCDeviceOps setBatchSize:]
  -[MLCDeviceOps result]
  -[MLCDeviceOps setSource:]
  -[MLCDeviceOps source]
  -[MLCDeviceOps .cxx_destruct]
  -[MLCDeviceOps setResult:]
  -[MLCDeviceOps initWithSource:secondarySource:result:batchSize:]
  -[MLCDeviceOps secondarySource]
  -[MLCDeviceOps setSecondarySource:]
  -[MLCDeviceOps setTertiarySource:]
  -[MLCDeviceOps tertiarySource]


MLCDeviceCPU : NSObject /usr/lib/libSystem.B.dylib <MLCLayerOperations, MLCEngineDispatch, MLComputeEngineOptimizerUpdate, NSCopying, MLComputeEngineControl>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *deviceList
 @property  int deviceType
 @property  NSData *deviceHeap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MLCDeviceCPU copyWithZone:]
  -[MLCDeviceCPU deviceType]
  -[MLCDeviceCPU initWithType:]
  -[MLCDeviceCPU .cxx_destruct]
  -[MLCDeviceCPU deviceList]
  -[MLCDeviceCPU fusedBatchNormalizationAndNeuronLayerWithDescriptor:numOfFeatureChannels:mean:variance:beta:gamma:varianceEpsilon:momentum:]
  -[MLCDeviceCPU batchNormalizationLayerWithChannelCount:mean:variance:beta:gamma:varianceEpsilon:momentum:]
  -[MLCDeviceCPU compileLayerDeviceOps:sourceTensors:resultTensor:]
  -[MLCDeviceCPU setNormalizationLayerOptimizerDataForDeviceOps:beta:gamma:]
  -[MLCDeviceCPU poolingLayerWithDescriptor:paddingSizes:]
  -[MLCDeviceCPU paddingLayerWithPaddingType:paddingLeft:paddingRight:paddingTop:paddingBottom:constantValue:]
  -[MLCDeviceCPU fusedGroupNormalizationAndNeuronLayerWithDescriptor:featureChannelCount:groupCount:beta:gamma:varianceEpsilon:]
  -[MLCDeviceCPU groupNormalizationLayerWithFeatureChannelCount:groupCount:beta:gamma:varianceEpsilon:]
  -[MLCDeviceCPU lossLayerWithDescriptor:]
  -[MLCDeviceCPU fusedFullyConnectedBatchNormalizationAndNeuronLayerWithDescriptor:mean:variance:beta:gamma:varianceEpsilon:momentum:neuronDescriptor:weights:biasTerms:]
  -[MLCDeviceCPU fusedFullyConnectedAndSoftmaxLayerWithDescriptor:weights:biasTerms:]
  -[MLCDeviceCPU fusedFullyConnectedAndNeuronLayerWithDescriptor:convolutionDescriptor:weights:biasTerms:]
  -[MLCDeviceCPU fullyConnectedLayerWithDescriptor:weights:biasTerms:]
  -[MLCDeviceCPU setConvolutionLayerOptimizerDataForDeviceOps:weights:bias:]
  -[MLCDeviceCPU createOptimizerDeviceDataForTensor:optimizer:optimizerData:isVector:]
  -[MLCDeviceCPU convolutionLayerWithDescriptor:weights:biasTerms:]
  -[MLCDeviceCPU convolutionTransposeLayerWithDescriptor:weights:biasTerms:]
  -[MLCDeviceCPU neuronLayerWithDescriptor:]
  -[MLCDeviceCPU layerNormalizationLayerWithNormalizedShape:beta:gamma:varianceEpsilon:]
  -[MLCDeviceCPU instanceNormalizationLayerWithChannelCount:beta:gamma:varianceEpsilon:momentum:]
  -[MLCDeviceCPU arithmeticLayerWithOperation:]
  -[MLCDeviceCPU compareLayerWithPredicate:]
  -[MLCDeviceCPU reductionLayerWithReduceType:dimension:sourceShapeCount:]
  -[MLCDeviceCPU softmaxLayerWithOperation:dimension:]
  -[MLCDeviceCPU lossYOLOLayerWithDescriptor:]
  -[MLCDeviceCPU dropoutLayerWithRate:seed:]
  -[MLCDeviceCPU reshapeLayerWithShape:]
  -[MLCDeviceCPU transposeLayerWithShape:]
  -[MLCDeviceCPU lstmLayerWithDescriptor:inputWeights:hiddenWeights:peepholeWeights:biasTerms:gateActivations:outputResultActivation:]
  -[MLCDeviceCPU gramMatrixLayerWithScaleFactor:]
  -[MLCDeviceCPU upsampleLayerWithScaleFactorX:scaleFactorY:sampleMode:alignCorners:]
  -[MLCDeviceCPU matMulLayerWithDescriptor:sourceTensors:resultTensor:inferenceOnly:]
  -[MLCDeviceCPU optimizerSGDWithDescriptor:momentunScale:useNesterovMomentum:]
  -[MLCDeviceCPU optimizerAdamWithDescriptor:beta1:beta2:epsilon:timeStep:]
  -[MLCDeviceCPU optimizerRMSPropWithDescriptor:momentumScale:alpha:epsilon:centered:]
  -[MLCDeviceCPU allocatedDeviceDataSizeForTraining:layer:]
  -[MLCDeviceCPU setMHALayerOptimizerDataForDeviceOps:optimizerDataForWeights:optimizerDataForBias:]
  -[MLCDeviceCPU setLSTMLayerOptimizerDataForDeviceOps:inputWeights:hiddenWeights:biasTerms:]
  -[MLCDeviceCPU fuseLayersForTrainingGraph:]
  -[MLCDeviceCPU fuseLayersForInferenceGraph:startAtLayerIndex:]
  -[MLCDeviceCPU fusedConvolutionAndNeuronLayerWithDescriptor:convolutionDescriptor:weights:biasTerms:]
  -[MLCDeviceCPU fusedConvolutionBatchNormalizationAndNeuronLayerWithDescriptor:mean:variance:beta:gamma:varianceEpsilon:momentum:neuronDescriptor:weights:biasTerms:]
  -[MLCDeviceCPU multiheadAttentionLayerWithDescriptor:weights:bias:attnBias:inferenceOnly:]
  -[MLCDeviceCPU splitLayerWithDimension:]
  -[MLCDeviceCPU sliceLayerWithbegin:end:stride:inferenceOnly:]
  -[MLCDeviceCPU embeddingLayerWithDescriptor:weights:inferenceOnly:]
  -[MLCDeviceCPU fusedInstanceNormalizationAndNeuronLayerWithDescriptor:numOfFeatureChannels:beta:gamma:varianceEpsilon:momentum:]
  -[MLCDeviceCPU fusedLayerNormalizationAndNeuronLayerWithDescriptor:normalizedShape:beta:gamma:varianceEpsilon:]
  -[MLCDeviceCPU fusedConvolutionInstanceNormalizationAndNeuronLayerWithDescriptor:beta:gamma:varianceEpsilon:momentum:neuronDescriptor:weights:biasTerms:]
  -[MLCDeviceCPU fusedConvolutionGroupNormalizationAndNeuronLayerWithDescriptor:beta:gamma:varianceEpsilon:momentum:groupCount:neuronDescriptor:weights:biasTerms:]
  -[MLCDeviceCPU compileLayerDeviceOps:sourceTensors:resultTensors:]
  -[MLCDeviceCPU setConvolutionGradientComputeWeightsAndBiasOnly:]
  -[MLCDeviceCPU setFullyConnectedGradientComputeWeightsAndBiasOnly:]
  -[MLCDeviceCPU weightsGradients:]
  -[MLCDeviceCPU biasesGradients:]
  -[MLCDeviceCPU mhaWeightGradient:withSize:index:]
  -[MLCDeviceCPU mhaBiasGradient:withSize:index:]
  -[MLCDeviceCPU mhaAttnBiasGradient:withSize:index:]
  -[MLCDeviceCPU lstmInputWeightGradient:mlcWeightIndex:]
  -[MLCDeviceCPU lstmHiddenWeightGradient:mlcWeightIndex:]
  -[MLCDeviceCPU lstmBiasGradient:mlcBiasIndex:]
  -[MLCDeviceCPU betaGradients:]
  -[MLCDeviceCPU gammaGradients:]
  -[MLCDeviceCPU embeddingWeightsGradients:embeddingCount:embeddingDimension:]
  -[MLCDeviceCPU allocateParameterGradientsForDeviceOps:parameters:]
  -[MLCDeviceCPU deviceMemorySizeForTensor:]
  -[MLCDeviceCPU numDevices]
  -[MLCDeviceCPU updateTensorsForTwoFusedLayers:layerNext:]
  -[MLCDeviceCPU readTensor:fromDeviceIndex:targetBuffer:batchSize:reduceOverBatch:]
  -[MLCDeviceCPU updateTensorsForThreeFusedLayers:layerNext:layerNext2:]
  -[MLCDeviceCPU signalNextEvent]
  -[MLCDeviceCPU waitForOthers]
  -[MLCDeviceCPU readTensor:targetBuffer:]
  -[MLCDeviceCPU commitAndWaitForCompletion:enableProfiling:graphExecutionTime:graphResultTensor:]
  -[MLCDeviceCPU readTensor:fromDeviceIndex:batchSize:]
  -[MLCDeviceCPU readTensor:fromDeviceIndex:targetBuffer:batchSize:]
  -[MLCDeviceCPU broadcastTensor:batchSize:]
  -[MLCDeviceCPU dispatchBroadcastTensor:batchSize:]
  -[MLCDeviceCPU waitForAllDevicesExcludingDevice:eventValue:]
  -[MLCDeviceCPU needToAllocateDeviceMemoryForTensor:]
  -[MLCDeviceCPU deviceHeapAllocatorWithHeapSize:]
  -[MLCDeviceCPU allocateDeviceMemoryForTensor:]
  -[MLCDeviceCPU deallocateDeviceMemoryForTensor:]
  -[MLCDeviceCPU shareDeviceMemoryWithResultTensor:sourceTensor:]
  -[MLCDeviceCPU readTensor:]
  -[MLCDeviceCPU readTensor:fromDeviceIndex:]
  -[MLCDeviceCPU dispatchReadTensor:targetBuffer:batchSize:]
  -[MLCDeviceCPU broadcastTensor:]
  -[MLCDeviceCPU dispatchBroadcastTensor:]
  -[MLCDeviceCPU writeTensor:toDeviceIndex:]
  -[MLCDeviceCPU dispatchWriteTensor:toDeviceIndex:]
  -[MLCDeviceCPU synchronizeTensor:]
  -[MLCDeviceCPU commitWithProfiling:graphExecutionTime:]
  -[MLCDeviceCPU commitAndWaitForCompletion:]
  -[MLCDeviceCPU commitWithCompletionHandler:enableProfiling:graphExecutionTime:graphResultTensor:]
  -[MLCDeviceCPU signalAllDevicesExcludingDevice:eventValue:]
  -[MLCDeviceCPU doesActivationRequireInput:]
  -[MLCDeviceCPU fuseLayersForGraph:startAtLayerIndex:]
  -[MLCDeviceCPU updateGradientDescriptorsForDeviceOps:sourceTensors:resultTensor:]
  -[MLCDeviceCPU writeToAllDevices:allocateData:batchSize:]
  -[MLCDeviceCPU dispatchForwardSplitLayer:sourceTensor:resultTensors:forConcat:]
  -[MLCDeviceCPU dispatchGradientSplitLayer:sourceGradientTensors:resultGradientTensor:forConcat:]
  -[MLCDeviceCPU dispatchForwardLayerWithStates:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceCPU dispatchForwardSliceLayerWithStates:sourceTensor:resultTensor:forTraining:]
  -[MLCDeviceCPU dispatchForwardLayerWithStates:sourceTensor:secondaryTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceCPU dispatchForwardLossLayerWithStates:sourceTensor:labelsTensor:labelsTensorStride:weightsTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceCPU dispatchForwardMHALayerWithStates:sourceTensors:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceCPU dispatchGradientLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchForwardReshapeLayerWithDeviceOps:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:keepsState:]
  -[MLCDeviceCPU dispatchForwardLayer:sourceTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchForwardSplitLayer:sourceTensor:resultTensors:]
  -[MLCDeviceCPU dispatchGradientSplitLayer:sourceGradientTensors:resultGradientTensor:]
  -[MLCDeviceCPU dispatchForwardConcatLayer:sourceTensors:resultTensor:]
  -[MLCDeviceCPU dispatchGradientConcatLayer:sourceGradientTensor:resultGradientTensors:]
  -[MLCDeviceCPU dispatchForwardLayerNormalizationLayer:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceCPU dispatchGradientLayerNormalizationLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchForwardSliceLayer:sourceTensor:resultTensor:]
  -[MLCDeviceCPU dispatchForwardLayer:sourceTensor:secondaryTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchForwardLossLayer:sourceTensor:labelsTensor:labelsTensorStride:weightsTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchForwardLayerBatchNormalizationWithStates:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchForwardMatMulLayer:sourceTensor:secondarySourceTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchGradientMatMulLayer:sourceGradientTensor:resultGradientTensor:secondaryResultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchForwardMHALayer:sourceTensors:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchGradientMHALayer:sourceGradientTensor:resultGradientTensors:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchGradientLayer:sourceGradientTensor:resultGradientTensor:secondaryResultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchGradientReshapeLayerWithDeviceOps:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchGradientSliceLayer:sourceGradientTensor:resultGradientTensor:]
  -[MLCDeviceCPU dispatchGradientBatchNormalizationLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchGradientLossLayer:sourceGradientTensor:labelsTensor:labelsTensorStride:weightsTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchInitialGradientLossLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchForwardAndGradientLossLayerWithStates:sourceTensor:labelsTensor:labelsTensorStride:weightsTensor:resultTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchRNNForwardLayer:sourceTensors:resultTensors:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchRNNForwardLayerWithStates:sourceTensors:resultTensors:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceCPU dispatchRNNGradientLayer:sourceGradientTensors:resultGradientTensors:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU incrementReadCountForTensorDeviceMemory:increment:]
  -[MLCDeviceCPU incrementReadCountForGradientState:increment:]
  -[MLCDeviceCPU dispatchForwardSoftmaxLayer:sourceTensor:resultTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchForwardSoftmaxLayerWithStates:sourceTensor:resultTensor:resultTensorIsTemporary:resultStateIsTemporary:resultTensorAllocate:forTraining:]
  -[MLCDeviceCPU dispatchGradientSoftmaxLayer:sourceGradientTensor:resultGradientTensor:resultTensorIsTemporary:resultTensorAllocate:]
  -[MLCDeviceCPU dispatchForwardEmbeddingLayer:weight:sourceTensor:resultTensor:]
  -[MLCDeviceCPU dispatchGradientEmbeddingLayer:sourceGradientTensor:]
  -[MLCDeviceCPU sumSharedGradientsForNormalizationLayerTensorParameter:layerIndexForSummedGradients:isBetaTensor:]
  -[MLCDeviceCPU setOptimizerLearningRate:learningRate:]
  -[MLCDeviceCPU setOptimizerTimeStep:timeStep:]
  -[MLCDeviceCPU sumSharedGradientsForConvolutionLayerTensorParameter:layerIndexForSummedGradients:]
  -[MLCDeviceCPU updateConvolutionLayer:optimizer:weightsParameter:biasesParameter:]
  -[MLCDeviceCPU updateFullyConnectedLayer:optimizer:weightsParameter:biasesParameter:]
  -[MLCDeviceCPU updateBatchNormalizationLayer:optimizer:betaParameter:gammaParameter:meanTensor:varianceTensor:]
  -[MLCDeviceCPU updateInstanceNormalizationLayer:optimizer:betaParameter:gammaParameter:]
  -[MLCDeviceCPU updateLayerNormalizationLayer:optimizer:betaParameter:gammaParameter:]
  -[MLCDeviceCPU updateGroupNormalizationLayer:optimizer:betaParameter:gammaParameter:]
  -[MLCDeviceCPU updateRNNLayer:optimizer:inputWeightsParameter:hiddenWeightsParameter:biasesParameter:]
  -[MLCDeviceCPU updateMultiheadAttentionLayer:optimizer:weightsParameter:biasesParameter:]
  -[MLCDeviceCPU updateEmbeddingLayer:weight:optimizer:]
  -[MLCDeviceCPU updateTensorParameter:optimizer:gradient:]
  -[MLCDeviceCPU synchronizeUpdatesForLayer:]
  -[MLCDeviceCPU synchronizeOptimizerUpdatesForTensor:]
  -[MLCDeviceCPU convertUpdatesToTensorDataForLayer:]
  -[MLCDeviceCPU convertUpdatesToTensorDataForTensorParameters:]
  -[MLCDeviceCPU allocateResultTensor:resultTensorIsTemporary:]
  -[MLCDeviceCPU freeTemporaryTensor:]
  -[MLCDeviceCPU shareResultTensor:sourceTensor:deviceOps:]
  -[MLCDeviceCPU reloadParameterDataFromHostToDeviceMemoryForTensor:]
  -[MLCDeviceCPU readFromDevice:deviceIndex:allocateData:batchSize:]
  -[MLCDeviceCPU deviceMemorySizeForTensor:batchSize:]
  -[MLCDeviceCPU writeToDevice:batchSize:]
  -[MLCDeviceCPU writeToDevice:sourceBuffer:batchSize:]
  -[MLCDeviceCPU deviceHeap]
  -[MLCDeviceCPU setDeviceHeap:]


MLCOptimizerDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  float learningRate
 @property  float gradientRescale
 @property  BOOL appliesGradientClipping
 @property  float gradientClipMax
 @property  float gradientClipMin
 @property  float regularizationScale
 @property  int regularizationType

  // class methods
  +[MLCOptimizerDescriptor descriptorWithLearningRate:gradientRescale:regularizationType:regularizationScale:]
  +[MLCOptimizerDescriptor descriptorWithLearningRate:gradientRescale:appliesGradientClipping:gradientClipMax:gradientClipMin:regularizationType:regularizationScale:]

  // instance methods
  -[MLCOptimizerDescriptor copyWithZone:]
  -[MLCOptimizerDescriptor learningRate]
  -[MLCOptimizerDescriptor initWithLearningRate:gradientRescale:regularizationType:regularizationScale:]
  -[MLCOptimizerDescriptor isEqual:]
  -[MLCOptimizerDescriptor gradientClipMin]
  -[MLCOptimizerDescriptor gradientClipMax]
  -[MLCOptimizerDescriptor gradientRescale]
  -[MLCOptimizerDescriptor initWithLearningRate:gradientRescale:applyGradientClipping:gradientClipMax:gradientClipMin:regularizationType:regularizationScale:]
  -[MLCOptimizerDescriptor regularizationType]
  -[MLCOptimizerDescriptor regularizationScale]
  -[MLCOptimizerDescriptor appliesGradientClipping]


MLCYOLOLossDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  MLCLossDescriptor *spatialPositionLossDescriptor
 @property  MLCLossDescriptor *spatialSizeLossDescriptor
 @property  MLCLossDescriptor *confidenceLossDescriptor
 @property  MLCLossDescriptor *classesLossDescriptor
 @property  int reductionType
 @property  unsigned long anchorBoxCount
 @property  NSData *anchorBoxes
 @property  BOOL shouldRescore
 @property  float scaleSpatialPositionLoss
 @property  float scaleSpatialSizeLoss
 @property  float scaleNoObjectConfidenceLoss
 @property  float scaleObjectConfidenceLoss
 @property  float scaleClassLoss
 @property  float minimumIOUForObjectPresence
 @property  float maximumIOUForObjectAbsence

  // class methods
  +[MLCYOLOLossDescriptor descriptorWithAnchorBoxes:anchorBoxCount:]

  // instance methods
  -[MLCYOLOLossDescriptor copyWithZone:]
  -[MLCYOLOLossDescriptor reductionType]
  -[MLCYOLOLossDescriptor .cxx_destruct]
  -[MLCYOLOLossDescriptor setRescore:]
  -[MLCYOLOLossDescriptor confidenceLossDescriptor]
  -[MLCYOLOLossDescriptor classesLossDescriptor]
  -[MLCYOLOLossDescriptor anchorBoxes]
  -[MLCYOLOLossDescriptor numberOfAnchorBoxes]
  -[MLCYOLOLossDescriptor isEqual:]
  -[MLCYOLOLossDescriptor spatialPositionLossDescriptor]
  -[MLCYOLOLossDescriptor spatialSizeLossDescriptor]
  -[MLCYOLOLossDescriptor anchorBoxCount]
  -[MLCYOLOLossDescriptor shouldRescore]
  -[MLCYOLOLossDescriptor scaleSpatialPositionLoss]
  -[MLCYOLOLossDescriptor scaleSpatialSizeLoss]
  -[MLCYOLOLossDescriptor scaleNoObjectConfidenceLoss]
  -[MLCYOLOLossDescriptor scaleObjectConfidenceLoss]
  -[MLCYOLOLossDescriptor scaleClassLoss]
  -[MLCYOLOLossDescriptor minimumIOUForObjectPresence]
  -[MLCYOLOLossDescriptor maximumIOUForObjectAbsence]
  -[MLCYOLOLossDescriptor setScaleNoObjectConfidenceLoss:]
  -[MLCYOLOLossDescriptor setScaleObjectConfidenceLoss:]
  -[MLCYOLOLossDescriptor initWithLossDescriptorWithSpatialPositionLossType:spatialSizeLossType:confidenceLossType:classesLossType:reductionType:anchorBoxCount:anchorBoxes:]
  -[MLCYOLOLossDescriptor setShouldRescore:]
  -[MLCYOLOLossDescriptor setScaleSpatialPositionLoss:]
  -[MLCYOLOLossDescriptor setScaleSpatialSizeLoss:]
  -[MLCYOLOLossDescriptor setScaleClassLoss:]
  -[MLCYOLOLossDescriptor setMinimumIOUForObjectPresence:]
  -[MLCYOLOLossDescriptor setMaximumIOUForObjectAbsence:]


_MLCANEUpsampleParameters : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *upsampleParams
 @property  float scaleFactorX
 @property  float scaleFactorY

  // class methods
  +[_MLCANEUpsampleParameters upsampleUnitParametersWith:scaleFactorX:scaleFactorY:]

  // instance methods
  -[_MLCANEUpsampleParameters .cxx_destruct]
  -[_MLCANEUpsampleParameters scaleFactorX]
  -[_MLCANEUpsampleParameters scaleFactorY]
  -[_MLCANEUpsampleParameters upsampleParams]
  -[_MLCANEUpsampleParameters initWithUpsampleParams:scaleFactorX:scaleFactorY:]


_MLCGPULSTM : _MLCGPULayer
  // class methods
  +[_MLCGPULSTM compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCGPULSTM layerWithDevice:descriptor:inputWeights:hiddenWeights:peepholeWeights:biasTerms:gateActivations:outputResultActivation:]
  +[_MLCGPULSTM setOptimizerDataForDevice:deviceOps:inputWeights:hiddenWeights:biasTerms:]
  +[_MLCGPULSTM setOptimizerDataForMomentumMatrices:velocityMatrices:centerWeightMatrices:matrixId:weight:device:deviceOps:deviceNumber:lstmNumber:isRecurrent:]
  +[_MLCGPULSTM setBiasOptimizerDataForMomentumMatrices:velocityMatrices:centerWeightMatrices:matrixId:bias:device:deviceOps:deviceNumber:lstmNumber:]

  // instance methods
  -[_MLCGPULSTM initWithDevice:descriptor:inputWeights:hiddenWeights:peepholeWeights:biasTerms:gateActivations:outputResultActivation:]


MLCRMSPropOptimizer : MLCOptimizer <MLCOptimizerCompiling, NSCopying>
 @property  MLCOptimizerDescriptor *optimizerDescriptor
 @property  float momentumScale
 @property  float alpha
 @property  float epsilon
 @property  BOOL isCentered
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MLCRMSPropOptimizer optimizerWithDescriptor:]
  +[MLCRMSPropOptimizer optimizerWithDescriptor:momentumScale:alpha:epsilon:isCentered:]

  // instance methods
  -[MLCRMSPropOptimizer copyWithZone:]
  -[MLCRMSPropOptimizer epsilon]
  -[MLCRMSPropOptimizer .cxx_destruct]
  -[MLCRMSPropOptimizer alpha]
  -[MLCRMSPropOptimizer isCentered]
  -[MLCRMSPropOptimizer momentumScale]
  -[MLCRMSPropOptimizer compileForDevice:]
  -[MLCRMSPropOptimizer optimizerDescriptor]
  -[MLCRMSPropOptimizer initWithDescriptor:momentumScale:alpha:epsilon:centered:]


_MLCGPUReduction : _MLCGPULayer
  // class methods
  +[_MLCGPUReduction layerWithDevice:reduceType:dimension:sourceShapeCount:]

  // instance methods
  -[_MLCGPUReduction initWithDevice:reduceType:dimension:sourceShapeCount:]


MLCDropoutLayer : MLCLayer
 @property  float rate
 @property  unsigned long seed

  // class methods
  +[MLCDropoutLayer layerWithRate:seed:]

  // instance methods
  -[MLCDropoutLayer rate]
  -[MLCDropoutLayer seed]
  -[MLCDropoutLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCDropoutLayer summarizedDOTDescription]
  -[MLCDropoutLayer resultTensorFromSources:]
  -[MLCDropoutLayer isSupportedShapeForTensorSources:]
  -[MLCDropoutLayer initWithRate:seed:]


MLCOptimizer : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  MLCDevice *device
 @property  NSArray *deviceOps
 @property  unsigned long numOptimizerDataBuffers
 @property  float learningRate
 @property  float gradientRescale
 @property  BOOL appliesGradientClipping
 @property  float gradientClipMax
 @property  float gradientClipMin
 @property  float regularizationScale
 @property  int regularizationType

  // instance methods
  -[MLCOptimizer copyWithZone:]
  -[MLCOptimizer device]
  -[MLCOptimizer .cxx_destruct]
  -[MLCOptimizer setLearningRate:]
  -[MLCOptimizer learningRate]
  -[MLCOptimizer initWithDescriptor:]
  -[MLCOptimizer setDevice:]
  -[MLCOptimizer gradientClipMin]
  -[MLCOptimizer gradientClipMax]
  -[MLCOptimizer gradientRescale]
  -[MLCOptimizer regularizationType]
  -[MLCOptimizer regularizationScale]
  -[MLCOptimizer deviceOps]
  -[MLCOptimizer setDeviceOps:]
  -[MLCOptimizer bindDevice:deviceOps:]
  -[MLCOptimizer numOptimizerDataBuffers]
  -[MLCOptimizer setNumOptimizerDataBuffers:]
  -[MLCOptimizer appliesGradientClipping]
  -[MLCOptimizer initWithLearningRate:gradientRescale:applyGradientClipping:gradientClipMax:gradientClipMin:regularizationScale:regularizationType:]
  -[MLCOptimizer setAppliesGradientClipping:]


_MLCANEWeightFileOps : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long currentDataSizeInBytes
 @property  unsigned long currentPaddingSizeInBytes
 @property  unsigned long currentFileSizeInBytes
 @property  NSString *filePath
 @property  NSFileHandle *fileHandle

  // class methods
  +[_MLCANEWeightFileOps weightFileOpsAtPath:]

  // instance methods
  -[_MLCANEWeightFileOps writeData:]
  -[_MLCANEWeightFileOps .cxx_destruct]
  -[_MLCANEWeightFileOps fileHandle]
  -[_MLCANEWeightFileOps initWithFilePath:]
  -[_MLCANEWeightFileOps filePath]
  -[_MLCANEWeightFileOps writeTensor:]
  -[_MLCANEWeightFileOps currentFileSizeInBytes]
  -[_MLCANEWeightFileOps currentPaddingSizeInBytes]
  -[_MLCANEWeightFileOps setCurrentPaddingSizeInBytes:]
  -[_MLCANEWeightFileOps currentDataSizeInBytes]
  -[_MLCANEWeightFileOps setCurrentDataSizeInBytes:]
  -[_MLCANEWeightFileOps setCurrentFileSizeInBytes:]


_MLCGPUTranspose : _MLCGPULayer
  // class methods
  +[_MLCGPUTranspose layerWithDevice:shape:]

  // instance methods
  -[_MLCGPUTranspose initWithDevice:shape:]


_MLCCPUPooling : _MLCCPULayer
  // class methods
  +[_MLCCPUPooling compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPUPooling layerWithDevice:descriptor:]

  // instance methods
  -[_MLCCPUPooling initWithDevice:descriptor:]


MLCSliceLayer : MLCLayer
 @property  NSArray *start
 @property  NSArray *end
 @property  NSArray *stride

  // class methods
  +[MLCSliceLayer sliceLayerWithStart:end:stride:]

  // instance methods
  -[MLCSliceLayer end]
  -[MLCSliceLayer .cxx_destruct]
  -[MLCSliceLayer stride]
  -[MLCSliceLayer start]
  -[MLCSliceLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCSliceLayer summarizedDOTDescription]
  -[MLCSliceLayer resultTensorFromSources:]
  -[MLCSliceLayer isSupportedShapeForTensorSources:]
  -[MLCSliceLayer initSliceLayerWithStart:end:stride:]
  -[MLCSliceLayer resultSizeForDimension:]


_MLCGPUSoftmax : _MLCGPULayer
  // class methods
  +[_MLCGPUSoftmax compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCGPUSoftmax layerWithDevice:operation:dimension:]

  // instance methods
  -[_MLCGPUSoftmax initWithDevice:operation:dimension:]


MLCEmbeddingLayer : MLCLayer
 @property  MLCEmbeddingDescriptor *descriptor
 @property  MLCTensor *weights
 @property  MLCTensorParameter *weightsParameter

  // class methods
  +[MLCEmbeddingLayer layerWithDescriptor:weights:]
  +[MLCEmbeddingLayer supportsDataType:onDevice:]

  // instance methods
  -[MLCEmbeddingLayer weights]
  -[MLCEmbeddingLayer .cxx_destruct]
  -[MLCEmbeddingLayer descriptor]
  -[MLCEmbeddingLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCEmbeddingLayer allocateDataForOptimizer:]
  -[MLCEmbeddingLayer allocatedDataSizeForTraining:optimizer:]
  -[MLCEmbeddingLayer summarizedDOTDescription]
  -[MLCEmbeddingLayer linkAssociatedTensors]
  -[MLCEmbeddingLayer unlinkAssociatedTensors]
  -[MLCEmbeddingLayer resultTensorFromSources:]
  -[MLCEmbeddingLayer isSupportedShapeForTensorSources:]
  -[MLCEmbeddingLayer weightsParameter]
  -[MLCEmbeddingLayer allocateGradientsForParameters]
  -[MLCEmbeddingLayer initWithDescriptor:weight:]


MLCEmbeddingDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSNumber *embeddingCount
 @property  NSNumber *embeddingDimension
 @property  NSNumber *paddingIndex
 @property  NSNumber *maximumNorm
 @property  NSNumber *pNorm
 @property  BOOL scalesGradientByFrequency

  // class methods
  +[MLCEmbeddingDescriptor descriptorWithEmbeddingCount:embeddingDimension:paddingIndex:maximumNorm:pNorm:scalesGradientByFrequency:]
  +[MLCEmbeddingDescriptor descriptorWithEmbeddingCount:embeddingDimension:]

  // instance methods
  -[MLCEmbeddingDescriptor copyWithZone:]
  -[MLCEmbeddingDescriptor pNorm]
  -[MLCEmbeddingDescriptor .cxx_destruct]
  -[MLCEmbeddingDescriptor isEqual:]
  -[MLCEmbeddingDescriptor embeddingDimension]
  -[MLCEmbeddingDescriptor paddingIndex]
  -[MLCEmbeddingDescriptor embeddingCount]
  -[MLCEmbeddingDescriptor maximumNorm]
  -[MLCEmbeddingDescriptor scalesGradientByFrequency]
  -[MLCEmbeddingDescriptor initWithEmbeddingCount:embeddingDimension:paddingIndex:maximumNorm:pNorm:scalesGradientByFrequency:]


MLCMatMulDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  float alpha
 @property  BOOL transposesX
 @property  BOOL transposesY

  // class methods
  +[MLCMatMulDescriptor descriptor]
  +[MLCMatMulDescriptor descriptorWithAlpha:transposesX:transposesY:]

  // instance methods
  -[MLCMatMulDescriptor copyWithZone:]
  -[MLCMatMulDescriptor alpha]
  -[MLCMatMulDescriptor isEqual:]
  -[MLCMatMulDescriptor transposesX]
  -[MLCMatMulDescriptor transposesY]
  -[MLCMatMulDescriptor initWithAlpha:transposesX:transposesY:]


MLCActivationLayer : MLCLayer
 @property  MLCActivationDescriptor *descriptor

  // class methods
  +[MLCActivationLayer layerWithDescriptor:]
  +[MLCActivationLayer reluLayer]
  +[MLCActivationLayer relu6Layer]
  +[MLCActivationLayer leakyReLULayer]
  +[MLCActivationLayer leakyReLULayerWithNegativeSlope:]
  +[MLCActivationLayer linearLayerWithScale:bias:]
  +[MLCActivationLayer sigmoidLayer]
  +[MLCActivationLayer hardSigmoidLayer]
  +[MLCActivationLayer tanhLayer]
  +[MLCActivationLayer absoluteLayer]
  +[MLCActivationLayer softPlusLayer]
  +[MLCActivationLayer softPlusLayerWithBeta:]
  +[MLCActivationLayer softSignLayer]
  +[MLCActivationLayer eluLayer]
  +[MLCActivationLayer eluLayerWithA:]
  +[MLCActivationLayer relunLayerWithA:b:]
  +[MLCActivationLayer logSigmoidLayer]
  +[MLCActivationLayer seluLayer]
  +[MLCActivationLayer celuLayer]
  +[MLCActivationLayer celuLayerWithA:]
  +[MLCActivationLayer hardShrinkLayer]
  +[MLCActivationLayer hardShrinkLayerWithA:]
  +[MLCActivationLayer softShrinkLayer]
  +[MLCActivationLayer softShrinkLayerWithA:]
  +[MLCActivationLayer tanhShrinkLayer]
  +[MLCActivationLayer thresholdLayerWithThreshold:replacement:]
  +[MLCActivationLayer geluLayer]

  // instance methods
  -[MLCActivationLayer .cxx_destruct]
  -[MLCActivationLayer initWithDescriptor:]
  -[MLCActivationLayer descriptor]
  -[MLCActivationLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCActivationLayer summarizedDOTDescription]
  -[MLCActivationLayer resultTensorFromSources:]
  -[MLCActivationLayer isSupportedShapeForTensorSources:]


_MLCGPUConvolutionTransposePadding : NSObject /usr/lib/libSystem.B.dylib <MPSNNPadding>
 @property  unsigned long topAmount
 @property  unsigned long bottomAmount
 @property  unsigned long leftAmount
 @property  unsigned long rightAmount
 @property  unsigned long outputPaddingX
 @property  unsigned long outputPaddingY
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_MLCGPUConvolutionTransposePadding supportsSecureCoding]
  +[_MLCGPUConvolutionTransposePadding convolutionTransposeZeroPaddingWithTopAmount:bottomAmount:leftAmount:rightAmount:outputPaddingX:outputPaddingY:]

  // instance methods
  -[_MLCGPUConvolutionTransposePadding encodeWithCoder:]
  -[_MLCGPUConvolutionTransposePadding paddingMethod]
  -[_MLCGPUConvolutionTransposePadding destinationImageDescriptorForSourceImages:sourceStates:forKernel:suggestedDescriptor:]
  -[_MLCGPUConvolutionTransposePadding initWithCoder:]
  -[_MLCGPUConvolutionTransposePadding initWithTopAmount:bottomAmount:leftAmount:rightAmount:outputPaddingX:outputPaddingY:]
  -[_MLCGPUConvolutionTransposePadding topAmount]
  -[_MLCGPUConvolutionTransposePadding bottomAmount]
  -[_MLCGPUConvolutionTransposePadding leftAmount]
  -[_MLCGPUConvolutionTransposePadding rightAmount]
  -[_MLCGPUConvolutionTransposePadding outputPaddingX]
  -[_MLCGPUConvolutionTransposePadding outputPaddingY]


MLCMultiheadAttentionLayer : MLCLayer
 @property  MLCMultiheadAttentionDescriptor *descriptor
 @property  NSArray *weights
 @property  NSArray *biases
 @property  NSArray *attentionBiases
 @property  NSArray *weightsParameters
 @property  NSArray *biasesParameters

  // class methods
  +[MLCMultiheadAttentionLayer layerWithDescriptor:weights:biases:attentionBiases:]

  // instance methods
  -[MLCMultiheadAttentionLayer biases]
  -[MLCMultiheadAttentionLayer weights]
  -[MLCMultiheadAttentionLayer .cxx_destruct]
  -[MLCMultiheadAttentionLayer descriptor]
  -[MLCMultiheadAttentionLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCMultiheadAttentionLayer allocateDataForOptimizer:]
  -[MLCMultiheadAttentionLayer allocatedDataSizeForTraining:optimizer:]
  -[MLCMultiheadAttentionLayer summarizedDOTDescription]
  -[MLCMultiheadAttentionLayer linkAssociatedTensors]
  -[MLCMultiheadAttentionLayer unlinkAssociatedTensors]
  -[MLCMultiheadAttentionLayer resultTensorFromSources:]
  -[MLCMultiheadAttentionLayer isSupportedShapeForTensorSources:]
  -[MLCMultiheadAttentionLayer allocateGradientsForParameters]
  -[MLCMultiheadAttentionLayer biasesParameters]
  -[MLCMultiheadAttentionLayer weightsParameters]
  -[MLCMultiheadAttentionLayer attentionBiases]
  -[MLCMultiheadAttentionLayer initWithDescriptor:weights:bias:attentionBias:]


MLCDataHelper : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MLCDataHelper createDataWithFloatValue:count:]
  +[MLCDataHelper fillData:withFloatValue:]
  +[MLCDataHelper convertFp32toFp16:fp32Values:fp16Values:]
  +[MLCDataHelper convertFp16toFp32:fp16Values:fp32Values:]


MLCMHAGPUDeviceOps : MLCGPUDeviceOps
 @property  unsigned long mhaHeadCount
 @property  id mhaConcatKernel
 @property  id mhaPermuteKernel
 @property  id mhaSumGradientKernel
 @property  NSMutableArray *mhaSourcesQKV
 @property  NSMutableArray *mhaInputProjForwardKernels
 @property  NSMutableArray *mhaInputProjGradientKernels
 @property  NSMutableArray *mhaInputProjStates
 @property  NSMutableArray *mhaInputProjResults
 @property  NSMutableArray *mhaMatMulForwardKernels
 @property  NSMutableArray *mhaMatMulGradientKernels
 @property  NSMutableArray *mhaMatMulSecondaryGradientKernels
 @property  NSMutableArray *mhaMatMulSourcesQKV
 @property  NSMutableArray *mhaQKSoftMaxForwardKernels
 @property  NSMutableArray *mhaQKSoftMaxGradientKernels
 @property  NSMutableArray *mhaQKSoftMaxResultMatrix
 @property  NSMutableArray *mhaAttentionBiasTensors
 @property  NSMutableArray *mhaAttentionBiasGradientTensors
 @property  BOOL mhaHasZeroAttention
 @property  id mhaZeroAttenionData
 @property  BOOL mhaHasKeyMask
 @property  id mhaKeyMaskCompareKernel
 @property  id mhaKeyMaskGateKernel
 @property  BOOL mhaHasAttentionMask
 @property  id mhaAttentionMaskKernel
 @property  id mhaDropoutForwardKernel
 @property  id mhaDropoutGradientKernel
 @property  id mhaDropoutSource
 @property  id mhaDropoutState
 @property  NSMutableArray *mhaMultiGPUChildOps
 @property  BOOL mhaHasBias
 @property  BOOL mhaHasAttentionBias

  // class methods
  +[MLCMHAGPUDeviceOps deviceOpsWithForwardKernel:gradientKernel:]

  // instance methods
  -[MLCMHAGPUDeviceOps .cxx_destruct]
  -[MLCMHAGPUDeviceOps mhaHeadCount]
  -[MLCMHAGPUDeviceOps mhaInputProjStates]
  -[MLCMHAGPUDeviceOps mhaAttentionBiasGradientTensors]
  -[MLCMHAGPUDeviceOps initWithForwardKernel:gradientKernel:]
  -[MLCMHAGPUDeviceOps mhaQKSoftMaxResultMatrix]
  -[MLCMHAGPUDeviceOps setMhaQKSoftMaxResultMatrix:]
  -[MLCMHAGPUDeviceOps mhaMatMulSourcesQKV]
  -[MLCMHAGPUDeviceOps setMhaMatMulSourcesQKV:]
  -[MLCMHAGPUDeviceOps setMhaInputProjStates:]
  -[MLCMHAGPUDeviceOps mhaPermuteKernel]
  -[MLCMHAGPUDeviceOps mhaInputProjForwardKernels]
  -[MLCMHAGPUDeviceOps mhaInputProjResults]
  -[MLCMHAGPUDeviceOps mhaAttentionBiasTensors]
  -[MLCMHAGPUDeviceOps mhaHasZeroAttention]
  -[MLCMHAGPUDeviceOps mhaConcatKernel]
  -[MLCMHAGPUDeviceOps mhaZeroAttenionData]
  -[MLCMHAGPUDeviceOps setMhaZeroAttenionData:]
  -[MLCMHAGPUDeviceOps mhaMatMulForwardKernels]
  -[MLCMHAGPUDeviceOps mhaHasAttentionMask]
  -[MLCMHAGPUDeviceOps mhaHasKeyMask]
  -[MLCMHAGPUDeviceOps mhaAttentionMaskKernel]
  -[MLCMHAGPUDeviceOps mhaKeyMaskCompareKernel]
  -[MLCMHAGPUDeviceOps mhaKeyMaskGateKernel]
  -[MLCMHAGPUDeviceOps mhaQKSoftMaxForwardKernels]
  -[MLCMHAGPUDeviceOps mhaDropoutForwardKernel]
  -[MLCMHAGPUDeviceOps setMhaDropoutSource:]
  -[MLCMHAGPUDeviceOps setMhaDropoutState:]
  -[MLCMHAGPUDeviceOps setMhaSourcesQKV:]
  -[MLCMHAGPUDeviceOps mhaDropoutGradientKernel]
  -[MLCMHAGPUDeviceOps mhaDropoutSource]
  -[MLCMHAGPUDeviceOps mhaDropoutState]
  -[MLCMHAGPUDeviceOps mhaMatMulGradientKernels]
  -[MLCMHAGPUDeviceOps mhaMatMulSecondaryGradientKernels]
  -[MLCMHAGPUDeviceOps mhaQKSoftMaxGradientKernels]
  -[MLCMHAGPUDeviceOps mhaInputProjGradientKernels]
  -[MLCMHAGPUDeviceOps mhaSourcesQKV]
  -[MLCMHAGPUDeviceOps mhaSumGradientKernel]
  -[MLCMHAGPUDeviceOps setMhaHeadCount:]
  -[MLCMHAGPUDeviceOps setMhaConcatKernel:]
  -[MLCMHAGPUDeviceOps setMhaPermuteKernel:]
  -[MLCMHAGPUDeviceOps setMhaSumGradientKernel:]
  -[MLCMHAGPUDeviceOps setMhaInputProjForwardKernels:]
  -[MLCMHAGPUDeviceOps setMhaInputProjGradientKernels:]
  -[MLCMHAGPUDeviceOps setMhaInputProjResults:]
  -[MLCMHAGPUDeviceOps setMhaMatMulForwardKernels:]
  -[MLCMHAGPUDeviceOps setMhaMatMulGradientKernels:]
  -[MLCMHAGPUDeviceOps setMhaMatMulSecondaryGradientKernels:]
  -[MLCMHAGPUDeviceOps setMhaQKSoftMaxForwardKernels:]
  -[MLCMHAGPUDeviceOps setMhaQKSoftMaxGradientKernels:]
  -[MLCMHAGPUDeviceOps setMhaAttentionBiasTensors:]
  -[MLCMHAGPUDeviceOps setMhaAttentionBiasGradientTensors:]
  -[MLCMHAGPUDeviceOps setMhaHasZeroAttention:]
  -[MLCMHAGPUDeviceOps setMhaHasKeyMask:]
  -[MLCMHAGPUDeviceOps setMhaKeyMaskCompareKernel:]
  -[MLCMHAGPUDeviceOps setMhaKeyMaskGateKernel:]
  -[MLCMHAGPUDeviceOps setMhaHasAttentionMask:]
  -[MLCMHAGPUDeviceOps setMhaAttentionMaskKernel:]
  -[MLCMHAGPUDeviceOps setMhaDropoutForwardKernel:]
  -[MLCMHAGPUDeviceOps setMhaDropoutGradientKernel:]
  -[MLCMHAGPUDeviceOps mhaMultiGPUChildOps]
  -[MLCMHAGPUDeviceOps setMhaMultiGPUChildOps:]
  -[MLCMHAGPUDeviceOps mhaHasBias]
  -[MLCMHAGPUDeviceOps setMhaHasBias:]
  -[MLCMHAGPUDeviceOps mhaHasAttentionBias]
  -[MLCMHAGPUDeviceOps setMhaHasAttentionBias:]


_MLCGPUSlice : _MLCGPULayer
  // class methods
  +[_MLCGPUSlice layerWithDevice:begin:end:stride:]

  // instance methods
  -[_MLCGPUSlice initWithDevice:begin:end:stride:]


MLCConcatenationLayer : MLCLayer
 @property  unsigned long dimension

  // class methods
  +[MLCConcatenationLayer layer]
  +[MLCConcatenationLayer layerWithDimension:]

  // instance methods
  -[MLCConcatenationLayer copyWithZone:]
  -[MLCConcatenationLayer dimension]
  -[MLCConcatenationLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCConcatenationLayer summarizedDOTDescription]
  -[MLCConcatenationLayer resultTensorFromSources:]
  -[MLCConcatenationLayer isSupportedShapeForTensorSources:]
  -[MLCConcatenationLayer deviceMemorySizeWithOptimizer:device:]
  -[MLCConcatenationLayer deviceMemorySizeForForward]
  -[MLCConcatenationLayer isStaticBatchSize]
  -[MLCConcatenationLayer initWithDimension:]


_MLCGPUMHAttention : _MLCGPULayer
  // class methods
  +[_MLCGPUMHAttention compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCGPUMHAttention layerWithDevice:desciptor:weights:bias:attnBias:inferenceOnly:]
  +[_MLCGPUMHAttention setOptimizerDataForDevice:deviceOps:dataForWeights:dataForBias:]
  +[_MLCGPUMHAttention setMHAOptimizerDataForDevice:deviceOps:dataForWeights:dataForBias:momentumArray:velocityArray:centerWeightArray:headIndex:weightIndex:targetIndex:attnBias:]

  // instance methods
  -[_MLCGPUMHAttention initWithDevice:desciptor:weights:bias:attnBias:inferenceOnly:]


MLCRNNCPUDeviceOps : MLCCPUDeviceOps
 @property  BOOL batchFirst
 @property  BOOL hasPeephole
 @property  BOOL returnsSequences
 @property  BOOL biDirectional
 @property  NSData *lstmDeltaParams
 @property  NSMutableArray *weightAndBiasGateDeltaBuffers
 @property  NSData *trainingCache
 @property  NSMutableArray *combinedGateWeightsAndBias
 @property  NSMutableArray *combinedInputsBuffer
 @property  NSMutableArray *combinedOutputsBuffer
 @property  unsigned long numLayers
 @property  unsigned long inputSize
 @property  unsigned long hiddenSize
 @property  unsigned long numAccumulatorsPerParameter
 @property  unsigned long numParametersForSingleLSTM

  // class methods
  +[MLCRNNCPUDeviceOps deviceOpsWithType:params:inDeltaData:outDeltaData:weightsDeltaData:biasDeltaData:weightsMomentumData:biasMomentumData:]

  // instance methods
  -[MLCRNNCPUDeviceOps dealloc]
  -[MLCRNNCPUDeviceOps .cxx_destruct]
  -[MLCRNNCPUDeviceOps inputSize]
  -[MLCRNNCPUDeviceOps setInputSize:]
  -[MLCRNNCPUDeviceOps initWithType:params:inDeltaData:outDeltaData:weightsDeltaData:biasDeltaData:weightsMomentumData:biasMomentumData:betaDeltaData:gammaDeltaData:betaMomentumData:gammaMomentumData:]
  -[MLCRNNCPUDeviceOps batchFirst]
  -[MLCRNNCPUDeviceOps lstmDeltaParams]
  -[MLCRNNCPUDeviceOps biDirectional]
  -[MLCRNNCPUDeviceOps numLayers]
  -[MLCRNNCPUDeviceOps returnsSequences]
  -[MLCRNNCPUDeviceOps hiddenSize]
  -[MLCRNNCPUDeviceOps setTrainingCache:]
  -[MLCRNNCPUDeviceOps trainingCache]
  -[MLCRNNCPUDeviceOps setBatchFirst:]
  -[MLCRNNCPUDeviceOps setReturnsSequences:]
  -[MLCRNNCPUDeviceOps setHiddenSize:]
  -[MLCRNNCPUDeviceOps setNumLayers:]
  -[MLCRNNCPUDeviceOps setHasPeephole:]
  -[MLCRNNCPUDeviceOps setLstmDeltaParams:]
  -[MLCRNNCPUDeviceOps setCombinedGateWeightsAndBias:]
  -[MLCRNNCPUDeviceOps setBiDirectional:]
  -[MLCRNNCPUDeviceOps setNumParametersForSingleLSTM:]
  -[MLCRNNCPUDeviceOps setCombinedInputsBuffer:]
  -[MLCRNNCPUDeviceOps setCombinedOutputsBuffer:]
  -[MLCRNNCPUDeviceOps setNumAccumulatorsPerParameter:]
  -[MLCRNNCPUDeviceOps numParametersForSingleLSTM]
  -[MLCRNNCPUDeviceOps weightAndBiasGateDeltaBuffers]
  -[MLCRNNCPUDeviceOps combinedInputsBuffer]
  -[MLCRNNCPUDeviceOps combinedOutputsBuffer]
  -[MLCRNNCPUDeviceOps hasPeephole]
  -[MLCRNNCPUDeviceOps setWeightAndBiasGateDeltaBuffers:]
  -[MLCRNNCPUDeviceOps combinedGateWeightsAndBias]
  -[MLCRNNCPUDeviceOps numAccumulatorsPerParameter]


MLCMatMulLayer : MLCLayer
 @property  MLCMatMulDescriptor *descriptor

  // class methods
  +[MLCMatMulLayer layerWithDescriptor:]

  // instance methods
  -[MLCMatMulLayer .cxx_destruct]
  -[MLCMatMulLayer initWithDescriptor:]
  -[MLCMatMulLayer descriptor]
  -[MLCMatMulLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCMatMulLayer summarizedDOTDescription]
  -[MLCMatMulLayer resultTensorFromSources:]
  -[MLCMatMulLayer isSupportedShapeForTensorSources:]


_MLCCPUArithmetic : _MLCCPULayer
  // class methods
  +[_MLCCPUArithmetic compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPUArithmetic layerWithDevice:operation:]
  +[_MLCCPUArithmetic bnnsArithmeticFunctionFor:]
  +[_MLCCPUArithmetic arithmeticOperatorTypeFor:]

  // instance methods
  -[_MLCCPUArithmetic initWithDevice:operation:]


MLCConvolutionDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL isFullyConnected
 @property  BOOL permutationNeededForFC
 @property  int convolutionType
 @property  unsigned long kernelWidth
 @property  unsigned long kernelHeight
 @property  unsigned long inputFeatureChannelCount
 @property  unsigned long outputFeatureChannelCount
 @property  unsigned long strideInX
 @property  unsigned long strideInY
 @property  unsigned long dilationRateInX
 @property  unsigned long dilationRateInY
 @property  unsigned long groupCount
 @property  int paddingPolicy
 @property  unsigned long paddingSizeInX
 @property  unsigned long paddingSizeInY
 @property  BOOL isConvolutionTranspose
 @property  BOOL usesDepthwiseConvolution

  // class methods
  +[MLCConvolutionDescriptor descriptorWithKernelSizes:inputFeatureChannelCount:outputFeatureChannelCount:groupCount:strides:dilationRates:paddingPolicy:paddingSizes:]
  +[MLCConvolutionDescriptor descriptorWithKernelSizes:inputFeatureChannelCount:outputFeatureChannelCount:strides:paddingPolicy:paddingSizes:]
  +[MLCConvolutionDescriptor descriptorWithKernelWidth:kernelHeight:inputFeatureChannelCount:outputFeatureChannelCount:]
  +[MLCConvolutionDescriptor descriptorWithType:kernelSizes:inputFeatureChannelCount:outputFeatureChannelCount:groupCount:strides:dilationRates:paddingPolicy:paddingSizes:]
  +[MLCConvolutionDescriptor convolutionTransposeDescriptorWithKernelWidth:kernelHeight:inputFeatureChannelCount:outputFeatureChannelCount:]
  +[MLCConvolutionDescriptor convolutionTransposeDescriptorWithKernelSizes:inputFeatureChannelCount:outputFeatureChannelCount:strides:paddingPolicy:paddingSizes:]
  +[MLCConvolutionDescriptor convolutionTransposeDescriptorWithKernelSizes:inputFeatureChannelCount:outputFeatureChannelCount:groupCount:strides:dilationRates:paddingPolicy:paddingSizes:]
  +[MLCConvolutionDescriptor depthwiseConvolutionDescriptorWithKernelWidth:kernelHeight:inputFeatureChannelCount:channelMultiplier:]
  +[MLCConvolutionDescriptor depthwiseConvolutionDescriptorWithKernelSizes:inputFeatureChannelCount:channelMultiplier:strides:paddingPolicy:paddingSizes:]
  +[MLCConvolutionDescriptor depthwiseConvolutionDescriptorWithKernelSizes:inputFeatureChannelCount:channelMultiplier:strides:dilationRates:paddingPolicy:paddingSizes:]

  // instance methods
  -[MLCConvolutionDescriptor copyWithZone:]
  -[MLCConvolutionDescriptor groupCount]
  -[MLCConvolutionDescriptor init]
  -[MLCConvolutionDescriptor paddingPolicy]
  -[MLCConvolutionDescriptor kernelWidth]
  -[MLCConvolutionDescriptor kernelHeight]
  -[MLCConvolutionDescriptor strideInY]
  -[MLCConvolutionDescriptor isFullyConnected]
  -[MLCConvolutionDescriptor isConvolutionTranspose]
  -[MLCConvolutionDescriptor isEqual:]
  -[MLCConvolutionDescriptor strideInX]
  -[MLCConvolutionDescriptor permutationNeededForFC]
  -[MLCConvolutionDescriptor setPermutationNeededForFC:]
  -[MLCConvolutionDescriptor paddingSizeInX]
  -[MLCConvolutionDescriptor paddingSizeInY]
  -[MLCConvolutionDescriptor inputFeatureChannelCount]
  -[MLCConvolutionDescriptor outputFeatureChannelCount]
  -[MLCConvolutionDescriptor usesDepthwiseConvolution]
  -[MLCConvolutionDescriptor dilationRateInX]
  -[MLCConvolutionDescriptor dilationRateInY]
  -[MLCConvolutionDescriptor setIsFullyConnected:]
  -[MLCConvolutionDescriptor convolutionType]
  -[MLCConvolutionDescriptor initWithType:kernelWidth:kernelHeight:inputFeatureChannelCount:outputFeatureChannelCount:groupCount:strideInX:strideInY:dilationRateInX:dilationRateInY:paddingPolicy:paddingSizeInX:paddingSizeInY:]


_MLCGPUArithmetic : _MLCGPULayer
  // class methods
  +[_MLCGPUArithmetic compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCGPUArithmetic layerWithDevice:operation:]

  // instance methods
  -[_MLCGPUArithmetic initWithDevice:operation:]


MLCArithmeticLayer : MLCLayer
 @property  BOOL binaryOperation
 @property  int operation

  // class methods
  +[MLCArithmeticLayer layerWithOperation:]

  // instance methods
  -[MLCArithmeticLayer operation]
  -[MLCArithmeticLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCArithmeticLayer summarizedDOTDescription]
  -[MLCArithmeticLayer resultTensorFromSources:]
  -[MLCArithmeticLayer isSupportedShapeForTensorSources:]
  -[MLCArithmeticLayer deviceMemorySizeWithOptimizer:device:]
  -[MLCArithmeticLayer binaryOperation]
  -[MLCArithmeticLayer initWithArithmeticOperation:]
  -[MLCArithmeticLayer skipGradientComputationForSourceTensor:resultTensor:]


MLCStrings : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MLCStrings unitTestOutputDirectoryPath]
  +[MLCStrings tempDirectoryForANEModels]
  +[MLCStrings sortedSequenceLengths]
  +[MLCStrings errorDomainGeneric]
  +[MLCStrings testing_ResourcePath]


MLCSplitLayer : MLCLayer
 @property  unsigned long dimension
 @property  unsigned long splitCount
 @property  NSArray *splitSectionLengths

  // class methods
  +[MLCSplitLayer layerWithSplitCount:dimension:]
  +[MLCSplitLayer layerWithSplitSectionLengths:dimension:]

  // instance methods
  -[MLCSplitLayer copyWithZone:]
  -[MLCSplitLayer .cxx_destruct]
  -[MLCSplitLayer dimension]
  -[MLCSplitLayer summarizedDOTDescription]
  -[MLCSplitLayer isSupportedShapeForTensorSources:]
  -[MLCSplitLayer compileForDevice:sourceTensors:resultTensors:]
  -[MLCSplitLayer deviceMemorySizeWithOptimizer:device:]
  -[MLCSplitLayer deviceMemorySizeForForward]
  -[MLCSplitLayer isStaticBatchSize]
  -[MLCSplitLayer initWithSplitCount:splitSectionLengths:dimension:]
  -[MLCSplitLayer splitCount]
  -[MLCSplitLayer splitSectionLengths]


_MLCGPUGroupNormalization : _MLCGPULayer
  // class methods
  +[_MLCGPUGroupNormalization layerWithDevice:numOfFeatureChannels:groupCount:beta:gamma:varianceEpsilon:]

  // instance methods
  -[_MLCGPUGroupNormalization initWithDevice:numOfFeatureChannels:groupCount:beta:gamma:varianceEpsilon:]


_MLCCPUSlice : _MLCCPULayer
  // class methods
  +[_MLCCPUSlice compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCCPUSlice layerWithDevice:begin:end:stride:]

  // instance methods
  -[_MLCCPUSlice initWithDevice:begin:end:stride:]


_MLCCPUReshape : _MLCCPULayer
  // class methods
  +[_MLCCPUReshape layerWithDevice:]

  // instance methods
  -[_MLCCPUReshape initWithDevice:]


MLCTensor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  unsigned long tensorID
 @property  MLCTensorDescriptor *descriptor
 @property  NSMutableArray *parentLayers
 @property  NSMutableArray *childLayers
 @property  NSData *data
 @property  MLCDevice *device
 @property  NSMutableArray *deviceMemory
 @property  BOOL isTemporary
 @property  unsigned long readCount
 @property  BOOL memorySharedWithAnotherTensor
 @property  int multiDeviceReductionType
 @property  MLCTensor *sharedMemoryTensor
 @property  unsigned long concatOffset
 @property  unsigned long concatDimension
 @property  unsigned long splitOffset
 @property  unsigned long splitDimension
 @property  unsigned long rootSourceGradientTensorIndexStart
 @property  unsigned long rootSourceGradientTensorCount
 @property  unsigned long rootSourceGradientTensorIndex
 @property  MLCLayer *intermediateSumLayer
 @property  unsigned long interleave
 @property  BOOL isLiveOutput
 @property  NSArray *optimizerData
 @property  NSArray *optimizerDeviceData
 @property  BOOL isLayerParameter
 @property  id deviceDataSources
 @property  NSString *label
 @property  BOOL hasValidNumerics

  // class methods
  +[MLCTensor initialize]
  +[MLCTensor tensorWithWidth:height:featureChannelCount:batchSize:data:]
  +[MLCTensor tensorWithWidth:height:featureChannelCount:batchSize:randomInitializerType:]
  +[MLCTensor tensorWithDescriptor:data:]
  +[MLCTensor tensorWithDescriptor:randomInitializerType:]
  +[MLCTensor tensorWithDescriptor:]
  +[MLCTensor tensorWithWidth:height:featureChannelCount:batchSize:]
  +[MLCTensor newDataForTensorDescriptor:fillWithData:]
  +[MLCTensor newRandomDataForWeightTensorDescriptor:randomInitializerType:]
  +[MLCTensor tensorWithDescriptor:fillWithData:]
  +[MLCTensor tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:]
  +[MLCTensor tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:data:]
  +[MLCTensor tensorWithShape:]
  +[MLCTensor tensorWithShape:randomInitializerType:]
  +[MLCTensor tensorWithShape:dataType:]
  +[MLCTensor tensorWithShape:fillWithData:dataType:]
  +[MLCTensor tensorWithShape:data:dataType:]
  +[MLCTensor tensorWithWidth:height:featureChannelCount:batchSize:fillWithData:dataType:]
  +[MLCTensor tensorWithWidth:height:featureChannelCount:batchSize:data:dataType:]
  +[MLCTensor tensorWithSequenceLength:featureChannelCount:batchSize:]
  +[MLCTensor tensorWithSequenceLength:featureChannelCount:batchSize:randomInitializerType:]
  +[MLCTensor tensorWithSequenceLength:featureChannelCount:batchSize:data:]
  +[MLCTensor canConvertValue:toDataType:]

  // instance methods
  -[MLCTensor copyWithZone:]
  -[MLCTensor setData:]
  -[MLCTensor setDescriptor:]
  -[MLCTensor device]
  -[MLCTensor isTemporary]
  -[MLCTensor .cxx_destruct]
  -[MLCTensor label]
  -[MLCTensor setReadCount:]
  -[MLCTensor data]
  -[MLCTensor descriptor]
  -[MLCTensor setDevice:]
  -[MLCTensor splitDimension]
  -[MLCTensor setSplitDimension:]
  -[MLCTensor setLabel:]
  -[MLCTensor readCount]
  -[MLCTensor parentLayers]
  -[MLCTensor childLayers]
  -[MLCTensor optimizerDeviceData]
  -[MLCTensor optimizerData]
  -[MLCTensor sharedMemoryTensor]
  -[MLCTensor setIsLayerParameter:]
  -[MLCTensor setMultiDeviceReductionType:]
  -[MLCTensor allocateDeviceMemory:]
  -[MLCTensor writeTensorDataToAllDevices:]
  -[MLCTensor setOptimizerData:]
  -[MLCTensor setOptimizerDeviceData:]
  -[MLCTensor intermediateSumLayer]
  -[MLCTensor setIntermediateSumLayer:]
  -[MLCTensor multiDeviceReductionType]
  -[MLCTensor deviceMemory]
  -[MLCTensor calculateBatchSizeToUse:]
  -[MLCTensor setDeviceMemory:]
  -[MLCTensor setMemorySharedWithAnotherTensor:]
  -[MLCTensor interleave]
  -[MLCTensor setIsLiveOutput:]
  -[MLCTensor isLiveOutput]
  -[MLCTensor concatDimension]
  -[MLCTensor concatOffset]
  -[MLCTensor splitOffset]
  -[MLCTensor rootSourceGradientTensorCount]
  -[MLCTensor rootSourceGradientTensorIndexStart]
  -[MLCTensor rootSourceGradientTensorIndex]
  -[MLCTensor setRootSourceGradientTensorIndexStart:]
  -[MLCTensor setRootSourceGradientTensorCount:]
  -[MLCTensor setRootSourceGradientTensorIndex:]
  -[MLCTensor setConcatOffset:]
  -[MLCTensor setConcatDimension:]
  -[MLCTensor setSharedMemoryTensor:]
  -[MLCTensor tensorID]
  -[MLCTensor synchronizeData]
  -[MLCTensor deviceDataSources]
  -[MLCTensor setDeviceDataSources:]
  -[MLCTensor setIsTemporary:]
  -[MLCTensor memorySharedWithAnotherTensor]
  -[MLCTensor setInterleave:]
  -[MLCTensor doesShapeMatchWithTensor:]
  -[MLCTensor initWithTensorDescriptor:tensorData:parentLayers:childLayers:device:deviceMemory:]
  -[MLCTensor dataContainsScalarWhere:]
  -[MLCTensor isLayerParameter]
  -[MLCTensor writeTensorDataToAllDevices:batchSize:]
  -[MLCTensor setSplitOffset:]
  -[MLCTensor copyAndReplaceData:]
  -[MLCTensor hasValidNumerics]
  -[MLCTensor copyDataFromDeviceMemoryToBytes:length:synchronizeWithDevice:]
  -[MLCTensor bindAndWriteData:toDevice:]
  -[MLCTensor synchronizeOptimizerData]
  -[MLCTensor bindOptimizerData:deviceData:]
  -[MLCTensor optimizerData:]
  -[MLCTensor deallocateDeviceMemory:]
  -[MLCTensor dispatchWriteTensorDataToAllDevices:]
  -[MLCTensor dispatchWriteTensorDataToAllDevices:batchSize:]
  -[MLCTensor readTensorDataFromAnyOneDevice:]
  -[MLCTensor readTensorDataFromAnyOneDevice:batchSize:]
  -[MLCTensor setTensorID:]
  -[MLCTensor setParentLayers:]
  -[MLCTensor setChildLayers:]


MLCLog : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MLCLog test]
  +[MLCLog framework]
  +[MLCLog execution]


MLCGraph : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL readyForExecution
 @property  NSArray *graphObjects
 @property  unsigned long nextLayerID
 @property  NSMutableArray *graphLayerList
 @property  NSMutableArray *rootLevelTensorNodes
 @property  NSMutableDictionary *layerParentMap
 @property  NSMutableDictionary *layerChildMap
 @property  NSDictionary *allInputs
 @property  NSDictionary *allLossLabels
 @property  NSDictionary *allLossLabelWeights
 @property  NSDictionary *allOutputs
 @property  BOOL recompileAfterLinking
 @property  BOOL staticBatchSizeInGraph
 @property  MLCDevice *device
 @property  NSArray *layers
 @property  NSString *summarizedDOTDescription

  // class methods
  +[MLCGraph graph]
  +[MLCGraph graphWithGraphObjects:]

  // instance methods
  -[MLCGraph device]
  -[MLCGraph layers]
  -[MLCGraph init]
  -[MLCGraph dealloc]
  -[MLCGraph .cxx_destruct]
  -[MLCGraph enumerateLayersUsingBlock:]
  -[MLCGraph setDevice:]
  -[MLCGraph nodeWithLayer:sources:]
  -[MLCGraph nodeWithLayer:source:]
  -[MLCGraph addInputs:lossLabels:lossLabelWeights:]
  -[MLCGraph addOutputs:]
  -[MLCGraph allInputs]
  -[MLCGraph summarizedDOTDescription]
  -[MLCGraph graphLayerList]
  -[MLCGraph allOutputs]
  -[MLCGraph initWithGraphObjects:]
  -[MLCGraph recompileAfterLinking]
  -[MLCGraph setRecompileAfterLinking:]
  -[MLCGraph readyForExecution]
  -[MLCGraph linkRelatedTensorsForConcatLayer:device:]
  -[MLCGraph setReadyForExecution:]
  -[MLCGraph allLossLabels]
  -[MLCGraph allLossLabelWeights]
  -[MLCGraph staticBatchSizeInGraph]
  -[MLCGraph checkPageAlignmentAndSizeForOutputs:]
  -[MLCGraph dispatchReadsForMultipleTensorOutputs:finalTensorInGraph:finalResultTensor:batchSize:]
  -[MLCGraph bindAndWriteData:forInputs:toDevice:batchSize:synchronous:skipWrite:]
  -[MLCGraph createVariableLengthSequenceTensors:]
  -[MLCGraph isLayerInGraphLayerList:graphLayerList:]
  -[MLCGraph resultTensorsForLayer:graphLayerList:]
  -[MLCGraph sourceTensorsForLayer:graphLayerList:]
  -[MLCGraph addInputs:lossLabels:]
  -[MLCGraph resultTensorsForLayer:]
  -[MLCGraph sourceTensorsForLayer:]
  -[MLCGraph nodeWithMultiOutputLayer:source:forTraining:]
  -[MLCGraph nodeWithLayer:sources:forTraining:]
  -[MLCGraph splitWithSource:splitCount:dimension:]
  -[MLCGraph splitWithSource:splitSectionLengths:dimension:]
  -[MLCGraph concatenateWithSources:dimension:]
  -[MLCGraph reshapeWithShape:source:]
  -[MLCGraph transposeWithDimensions:source:]
  -[MLCGraph nextLayerID]
  -[MLCGraph flattenConditionalLayer:]
  -[MLCGraph rootLevelTensorNodes]
  -[MLCGraph layerChildMap]
  -[MLCGraph layerParentMap]
  -[MLCGraph setNextLayerID:]
  -[MLCGraph createGradientSourceTensorWith:source:]
  -[MLCGraph nodeWithLayer:sources:disableUpdate:]
  -[MLCGraph createLossGradientSourceTensorWith:source:batchSize:]
  -[MLCGraph checksBeforeAddLayerInGraph:sources:forTraining:]
  -[MLCGraph checkAndResetTensorsAssociatedWithLayer:sources:]
  -[MLCGraph linkSourceTensorsWithLayer:sources:]
  -[MLCGraph createTensorWith:sources:]
  -[MLCGraph setStaticBatchSizeInGraph:]
  -[MLCGraph graphObjects]
  -[MLCGraph addGraphNodes:withControlTreeNode:]
  -[MLCGraph insertPhis:]
  -[MLCGraph setAllInputs:]
  -[MLCGraph setAllLossLabels:]
  -[MLCGraph setAllLossLabelWeights:]
  -[MLCGraph setAllOutputs:]
  -[MLCGraph nodeWithLayer:sources:lossLabels:]
  -[MLCGraph bindAndWriteData:forInputs:toDevice:batchSize:synchronous:]
  -[MLCGraph bindAndWriteData:forInputs:toDevice:synchronous:]
  -[MLCGraph writeAsyncToDevice:dataForTensors:]
  -[MLCGraph enumerateInputsUsingBlock:]
  -[MLCGraph enumerateOutputsUsingBlock:]
  -[MLCGraph conditionalWithPredicate:trueBranch:falseBranch:]
  -[MLCGraph setGraphLayerList:]
  -[MLCGraph setRootLevelTensorNodes:]
  -[MLCGraph setLayerParentMap:]
  -[MLCGraph setLayerChildMap:]


MLCLSTMLayer : MLCLayer
 @property  MLCLSTMDescriptor *descriptor
 @property  NSArray *gateActivations
 @property  MLCActivationDescriptor *outputResultActivation
 @property  NSArray *inputWeights
 @property  NSArray *hiddenWeights
 @property  NSArray *peepholeWeights
 @property  NSArray *biases
 @property  NSArray *inputWeightsParameters
 @property  NSArray *hiddenWeightsParameters
 @property  NSArray *peepholeWeightsParameters
 @property  NSArray *biasesParameters

  // class methods
  +[MLCLSTMLayer layerWithDescriptor:inputWeights:hiddenWeights:peepholeWeights:biases:gateActivations:outputResultActivation:]
  +[MLCLSTMLayer layerWithDescriptor:inputWeights:hiddenWeights:peepholeWeights:biases:]
  +[MLCLSTMLayer layerWithDescriptor:inputWeights:hiddenWeights:biases:]

  // instance methods
  -[MLCLSTMLayer biases]
  -[MLCLSTMLayer .cxx_destruct]
  -[MLCLSTMLayer descriptor]
  -[MLCLSTMLayer hiddenWeights]
  -[MLCLSTMLayer inputWeights]
  -[MLCLSTMLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCLSTMLayer allocateDataForOptimizer:]
  -[MLCLSTMLayer allocatedDataSizeForTraining:optimizer:]
  -[MLCLSTMLayer summarizedDOTDescription]
  -[MLCLSTMLayer linkAssociatedTensors]
  -[MLCLSTMLayer unlinkAssociatedTensors]
  -[MLCLSTMLayer resultSizeFromSourceSize:dimension:]
  -[MLCLSTMLayer resultTensorFromSources:]
  -[MLCLSTMLayer isSupportedShapeForTensorSources:]
  -[MLCLSTMLayer inputWeightsParameters]
  -[MLCLSTMLayer hiddenWeightsParameters]
  -[MLCLSTMLayer biasesParameters]
  -[MLCLSTMLayer resultStateTensorWithSources:]
  -[MLCLSTMLayer initWithDescriptor:inputWeights:hiddenWeights:peepholeWeights:biases:gateActivations:outputResultActivation:]
  -[MLCLSTMLayer peepholeWeights]
  -[MLCLSTMLayer gateActivations]
  -[MLCLSTMLayer outputResultActivation]
  -[MLCLSTMLayer peepholeWeightsParameters]


MLCInstanceNormalizationLayer : MLCLayer
 @property  unsigned long featureChannelCount
 @property  MLCTensor *beta
 @property  MLCTensor *gamma
 @property  MLCTensorParameter *betaParameter
 @property  MLCTensorParameter *gammaParameter
 @property  float varianceEpsilon
 @property  float momentum

  // class methods
  +[MLCInstanceNormalizationLayer layerWithFeatureChannelCount:beta:gamma:varianceEpsilon:]
  +[MLCInstanceNormalizationLayer layerWithFeatureChannelCount:beta:gamma:varianceEpsilon:momentum:]

  // instance methods
  -[MLCInstanceNormalizationLayer beta]
  -[MLCInstanceNormalizationLayer .cxx_destruct]
  -[MLCInstanceNormalizationLayer momentum]
  -[MLCInstanceNormalizationLayer gamma]
  -[MLCInstanceNormalizationLayer varianceEpsilon]
  -[MLCInstanceNormalizationLayer featureChannelCount]
  -[MLCInstanceNormalizationLayer betaParameter]
  -[MLCInstanceNormalizationLayer gammaParameter]
  -[MLCInstanceNormalizationLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCInstanceNormalizationLayer allocateDataForOptimizer:]
  -[MLCInstanceNormalizationLayer allocatedDataSizeForTraining:optimizer:]
  -[MLCInstanceNormalizationLayer summarizedDOTDescription]
  -[MLCInstanceNormalizationLayer linkAssociatedTensors]
  -[MLCInstanceNormalizationLayer unlinkAssociatedTensors]
  -[MLCInstanceNormalizationLayer isValidTrainingParameters]
  -[MLCInstanceNormalizationLayer initWithFeatureChannelCount:beta:gamma:varianceEpsilon:momentum:]


_MLCGPULayer : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *deviceOps

  // class methods
  +[_MLCGPULayer compileWithDevice:deviceOps:sourceTensors:resultTensor:]
  +[_MLCGPULayer compileWithDevice:deviceOps:sourceTensors:resultTensors:]

  // instance methods
  -[_MLCGPULayer .cxx_destruct]
  -[_MLCGPULayer deviceOps]
  -[_MLCGPULayer setDeviceOps:]


MLCCompareLayer : MLCLayer
 @property  int predicate

  // class methods
  +[MLCCompareLayer supportsDataType:onDevice:]
  +[MLCCompareLayer layerWithPredicate:]

  // instance methods
  -[MLCCompareLayer predicate]
  -[MLCCompareLayer initWithPredicate:]
  -[MLCCompareLayer compileForDevice:sourceTensors:resultTensor:]
  -[MLCCompareLayer summarizedDOTDescription]
  -[MLCCompareLayer resultSizeFromSourceSize:dimension:]


MLCAdamOptimizer : MLCOptimizer <MLCOptimizerCompiling, NSCopying>
 @property  MLCOptimizerDescriptor *optimizerDescriptor
 @property  unsigned long timeStep
 @property  float beta1
 @property  float beta2
 @property  float epsilon
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MLCAdamOptimizer optimizerWithDescriptor:beta1:beta2:epsilon:timeStep:]
  +[MLCAdamOptimizer optimizerWithDescriptor:]

  // instance methods
  -[MLCAdamOptimizer copyWithZone:]
  -[MLCAdamOptimizer epsilon]
  -[MLCAdamOptimizer beta1]
  -[MLCAdamOptimizer beta2]
  -[MLCAdamOptimizer .cxx_destruct]
  -[MLCAdamOptimizer setTimeStep:]
  -[MLCAdamOptimizer timeStep]
  -[MLCAdamOptimizer compileForDevice:]
  -[MLCAdamOptimizer optimizerDescriptor]
  -[MLCAdamOptimizer initWithDescriptor:beta1:beta2:epsilon:timeStep:]


_MLCANEReductionParameters : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *reductionParams

  // class methods
  +[_MLCANEReductionParameters reductionUnitParametersWith:]

  // instance methods
  -[_MLCANEReductionParameters .cxx_destruct]
  -[_MLCANEReductionParameters reductionParams]
  -[_MLCANEReductionParameters initWithReductionParams:]


_MLCGPUSplit : _MLCGPULayer
  // class methods
  +[_MLCGPUSplit layerWithDevice:dimension:]

  // instance methods
  -[_MLCGPUSplit initWithDevice:dimension:]


MLCSliceCPUDeviceOps : MLCCPUDeviceOps
 @property  unsigned long beginOffset
 @property  NSArray *begin
 @property  NSArray *count
 @property  NSArray *stride

  // class methods
  +[MLCSliceCPUDeviceOps deviceOpsWithType:params:inDeltaData:outDeltaData:weightsDeltaData:biasDeltaData:weightsMomentumData:biasMomentumData:]

  // instance methods
  -[MLCSliceCPUDeviceOps setCount:]
  -[MLCSliceCPUDeviceOps setStride:]
  -[MLCSliceCPUDeviceOps .cxx_destruct]
  -[MLCSliceCPUDeviceOps begin]
  -[MLCSliceCPUDeviceOps stride]
  -[MLCSliceCPUDeviceOps count]
  -[MLCSliceCPUDeviceOps setBegin:]
  -[MLCSliceCPUDeviceOps initWithType:params:inDeltaData:outDeltaData:weightsDeltaData:biasDeltaData:weightsMomentumData:biasMomentumData:betaDeltaData:gammaDeltaData:betaMomentumData:gammaMomentumData:]
  -[MLCSliceCPUDeviceOps beginOffset]
  -[MLCSliceCPUDeviceOps setBeginOffset:]


MLCDeviceGPUHeapAllocator : NSObject /usr/lib/libSystem.B.dylib <MPSImageAllocator>
 @property  BOOL isDebuggingEnabled
 @property  unsigned long heapSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MLCDeviceGPUHeapAllocator supportsSecureCoding]

  // instance methods
  -[MLCDeviceGPUHeapAllocator copyWithZone:]
  -[MLCDeviceGPUHeapAllocator encodeWithCoder:]
  -[MLCDeviceGPUHeapAllocator imageForCommandBuffer:imageDescriptor:kernel:]
  -[MLCDeviceGPUHeapAllocator imageBatchForCommandBuffer:imageDescriptor:kernel:count:]
  -[MLCDeviceGPUHeapAllocator initWithCoder:]
  -[MLCDeviceGPUHeapAllocator isDebuggingEnabled]
  -[MLCDeviceGPUHeapAllocator setIsDebuggingEnabled:]
  -[MLCDeviceGPUHeapAllocator initWithHeapSize:]
  -[MLCDeviceGPUHeapAllocator heapSize]


01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNAdd 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNAddGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNBatchNormalization 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNBatchNormalizationGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNBatchNormalizationState 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNBatchNormalizationStatistics 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNBatchNormalizationStatisticsGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNBinaryKernel 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNConvolution 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNConvolutionDescriptor 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNConvolutionGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNConvolutionTranspose 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNConvolutionTransposeGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNDepthWiseConvolutionDescriptor 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNDilatedPoolingMax 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNDilatedPoolingMaxGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNDropout 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNDropoutGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNFullyConnected 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNFullyConnectedGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNGroupNormalization 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNGroupNormalizationGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNInstanceNormalization 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNInstanceNormalizationGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNLogSoftMax 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNLogSoftMaxGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNLoss 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNLossDataDescriptor 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNLossDescriptor 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNLossLabels 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNMultiply 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNMultiplyGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNNeuron 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNNeuronGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNNormalizationGammaAndBetaState 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNNormalizationMeanAndVarianceState 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNPoolingAverage 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNPoolingAverageGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNPoolingL2Norm 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNPoolingL2NormGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNPoolingMax 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNPoolingMaxGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNSoftMax 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNSoftMaxGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNSubtract 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNSubtractGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNUpsamplingBilinear 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNUpsamplingBilinearGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNUpsamplingNearest 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNUpsamplingNearestGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNYOLOLoss 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCNNYOLOLossDescriptor 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSCommandBuffer 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImage 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageCopyToMatrix 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageDescriptor 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSKernel 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSLSTMDescriptor 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSMatrix 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSMatrixCopy 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSMatrixCopyDescriptor 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSMatrixCopyToImage 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSMatrixDescriptor 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSMatrixMultiplication 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSMatrixNeuron 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSMatrixSoftMax 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSMatrixSoftMaxGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSMatrixSum 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayACos 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayACosGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayACosh 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayACoshGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayASin 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayASinGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayASinh 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayASinhGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayATan 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayATanGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayATanh 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayATanhGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayCeil 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayCeilGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayCos 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayCosGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayCosh 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayCoshGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayDescriptor 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayDivision 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayDivisionPrimaryGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayDivisionSecondaryGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayExponent 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayExponentBase2 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayExponentBase2Gradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayExponentGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayFloor 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayFloorGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayGradientState 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayLogSoftMax 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayLogSoftMaxGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayLogarithm 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayLogarithmBase2 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayLogarithmBase2Gradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayLogarithmGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayMultiaryGradientKernel 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayMultiaryKernel 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayPower 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayPowerPrimaryGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayPowerSecondaryGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayReverseSquareRoot 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayReverseSquareRootGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayRound 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayRoundGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArraySin 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArraySinGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArraySinh 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArraySinhGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArraySoftMax 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArraySoftMaxGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArraySquareRoot 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArraySquareRootGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayStridedSlice 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayStridedSliceGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayTan 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayTanGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayTanh 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNDArrayTanhGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNCompare 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNDefaultPadding 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNForwardLoss 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNGramMatrixCalculation 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNGramMatrixCalculationGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNInitialGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNLossGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNNeuronDescriptor 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNOptimizerAdam 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNOptimizerDescriptor 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNOptimizerRMSProp 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNOptimizerStochasticGradientDescent 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNPad 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNPadGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNPermute 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNPermuteGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNReduceColumnMax 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNReduceColumnMin 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNReduceColumnSum 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNReduceFeatureChannelsArgumentMax 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNReduceFeatureChannelsArgumentMin 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNReduceFeatureChannelsMax 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNReduceFeatureChannelsMin 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNReduceFeatureChannelsSum 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNReduceRowMax 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNReduceRowMin 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNReduceRowSum 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNReshape 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNReshapeGradient 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSNNSlice 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSRNNMatrixInferenceLayer 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSRNNMatrixTrainingLayer 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSTemporaryImage 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSTemporaryMatrix 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSTemporaryNDArray 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSVector 
01 00 0200 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSVectorDescriptor 
01 00 0300 /System/Library/Frameworks/Metal.framework/Metal: MTLFunctionConstantValues 
01 00 0300 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0440 /System/Library/PrivateFrameworks/AppleNeuralEngine.framework/AppleNeuralEngine: _ANEClient 
01 00 0440 /System/Library/PrivateFrameworks/AppleNeuralEngine.framework/AppleNeuralEngine: _ANEDeviceInfo 
01 00 0440 /System/Library/PrivateFrameworks/AppleNeuralEngine.framework/AppleNeuralEngine: _ANEIOSurfaceObject 
01 00 0440 /System/Library/PrivateFrameworks/AppleNeuralEngine.framework/AppleNeuralEngine: _ANEModel 
01 00 0440 /System/Library/PrivateFrameworks/AppleNeuralEngine.framework/AppleNeuralEngine: _ANEQoSMapper 
01 00 0440 /System/Library/PrivateFrameworks/AppleNeuralEngine.framework/AppleNeuralEngine: _ANERequest 
