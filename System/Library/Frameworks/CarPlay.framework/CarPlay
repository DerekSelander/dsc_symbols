|| __DATA.__objc_data _OBJC_CLASS_$_CPActionSheetTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_CPAlertAction
|| __DATA.__objc_data _OBJC_CLASS_$_CPAlertTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_CPBarButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPContact
|| __DATA.__objc_data _OBJC_CLASS_$_CPContactCallButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPContactDirectionsButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPContactEntity
|| __DATA.__objc_data _OBJC_CLASS_$_CPContactMessageButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPContactTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_CPDashboardButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPDashboardController
|| __DATA.__objc_data _OBJC_CLASS_$_CPEndpointListenerWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_CPEntity
|| __DATA.__objc_data _OBJC_CLASS_$_CPGridButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPGridTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_CPImageSet
|| __DATA.__objc_data _OBJC_CLASS_$_CPImageSetAssetRegistration
|| __DATA.__objc_data _OBJC_CLASS_$_CPInformationItem
|| __DATA.__objc_data _OBJC_CLASS_$_CPInformationRatingItem
|| __DATA.__objc_data _OBJC_CLASS_$_CPInformationTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_CPInterfaceController
|| __DATA.__objc_data _OBJC_CLASS_$_CPListImageRowItem
|| __DATA.__objc_data _OBJC_CLASS_$_CPListItem
|| __DATA.__objc_data _OBJC_CLASS_$_CPListSection
|| __DATA.__objc_data _OBJC_CLASS_$_CPListTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_CPManeuver
|| __DATA.__objc_data _OBJC_CLASS_$_CPMapButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPMapTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_CPMessageComposeBarButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPMessageListItem
|| __DATA.__objc_data _OBJC_CLASS_$_CPMessageListItemLeadingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CPMessageListItemTrailingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CPNavigationAlert
|| __DATA.__objc_data _OBJC_CLASS_$_CPNavigationSession
|| __DATA.__objc_data _OBJC_CLASS_$_CPNowPlayingAddToLibraryButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPNowPlayingButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPNowPlayingImageButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPNowPlayingMoreButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPNowPlayingPlaybackRateButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPNowPlayingRepeatButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPNowPlayingShuffleButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPNowPlayingTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_CPPointOfInterest
|| __DATA.__objc_data _OBJC_CLASS_$_CPPointOfInterestTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_CPPointsOfInterestEntity
|| __DATA.__objc_data _OBJC_CLASS_$_CPRequestEndpointAction
|| __DATA.__objc_data _OBJC_CLASS_$_CPRouteChoice
|| __DATA.__objc_data _OBJC_CLASS_$_CPSearchTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_CPSessionConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CPTabBarTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_CPTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_CPTemplateApplicationDashboardScene
|| __DATA.__objc_data _OBJC_CLASS_$_CPTemplateApplicationScene
|| __DATA.__objc_data _OBJC_CLASS_$_CPTemplateApplicationSceneGeometrySettingsDiffAction
|| __DATA.__objc_data _OBJC_CLASS_$_CPTextButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPTravelEstimates
|| __DATA.__objc_data _OBJC_CLASS_$_CPTrip
|| __DATA.__objc_data _OBJC_CLASS_$_CPTripPreviewTextConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CPUIMutableTemplateApplicationSceneSettings
|| __DATA.__objc_data _OBJC_CLASS_$_CPUITemplateApplicationSceneSettings
|| __DATA.__objc_data _OBJC_CLASS_$_CPUITemplateApplicationSceneSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_CPUITemplateDashboardSceneSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_CPVoiceControlState
|| __DATA.__objc_data _OBJC_CLASS_$_CPVoiceControlTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_CPWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_CPActionSheetTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_CPAlertAction
|| __DATA.__objc_data _OBJC_METACLASS_$_CPAlertTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_CPBarButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPContact
|| __DATA.__objc_data _OBJC_METACLASS_$_CPContactCallButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPContactDirectionsButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPContactEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_CPContactMessageButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPContactTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_CPDashboardButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPDashboardController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPEndpointListenerWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_CPEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_CPGridButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPGridTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_CPImageSet
|| __DATA.__objc_data _OBJC_METACLASS_$_CPImageSetAssetRegistration
|| __DATA.__objc_data _OBJC_METACLASS_$_CPInformationItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CPInformationRatingItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CPInformationTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_CPInterfaceController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPListImageRowItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CPListItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CPListSection
|| __DATA.__objc_data _OBJC_METACLASS_$_CPListTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_CPManeuver
|| __DATA.__objc_data _OBJC_METACLASS_$_CPMapButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPMapTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_CPMessageComposeBarButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPMessageListItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CPMessageListItemLeadingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CPMessageListItemTrailingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CPNavigationAlert
|| __DATA.__objc_data _OBJC_METACLASS_$_CPNavigationSession
|| __DATA.__objc_data _OBJC_METACLASS_$_CPNowPlayingAddToLibraryButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPNowPlayingButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPNowPlayingImageButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPNowPlayingMoreButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPNowPlayingPlaybackRateButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPNowPlayingRepeatButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPNowPlayingShuffleButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPNowPlayingTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_CPPointOfInterest
|| __DATA.__objc_data _OBJC_METACLASS_$_CPPointOfInterestTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_CPPointsOfInterestEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_CPRequestEndpointAction
|| __DATA.__objc_data _OBJC_METACLASS_$_CPRouteChoice
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSearchTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSessionConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CPTabBarTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_CPTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_CPTemplateApplicationDashboardScene
|| __DATA.__objc_data _OBJC_METACLASS_$_CPTemplateApplicationScene
|| __DATA.__objc_data _OBJC_METACLASS_$_CPTemplateApplicationSceneGeometrySettingsDiffAction
|| __DATA.__objc_data _OBJC_METACLASS_$_CPTextButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPTravelEstimates
|| __DATA.__objc_data _OBJC_METACLASS_$_CPTrip
|| __DATA.__objc_data _OBJC_METACLASS_$_CPTripPreviewTextConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CPUIMutableTemplateApplicationSceneSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_CPUITemplateApplicationSceneSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_CPUITemplateApplicationSceneSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_CPUITemplateDashboardSceneSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_CPVoiceControlState
|| __DATA.__objc_data _OBJC_METACLASS_$_CPVoiceControlTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_CPWindow
|| __DATA_CONST.__const _CPTemplateApplicationDashboardSceneSessionRoleApplication
|| __DATA_CONST.__const _CPTemplateApplicationSceneSessionRoleApplication
|| __DATA_CONST.__const _CPTemplateErrorDomain
|| __DATA_CONST.__const _CarPlayErrorDomain
|| __DATA_CONST.__const _kCPControlEnabledKey
|| __DATA_CONST.__const _kCPControlIdentifierKey
|| __DATA_CONST.__const _kCPControlImageSetKey
|| __DATA_CONST.__const _kCPControlTitleKey
|| __DATA_CONST.__const _kCPSAudioEntitlementKey
|| __DATA_CONST.__const _kCPSChargingEntitlementKey
|| __DATA_CONST.__const _kCPSCommunicationEntitlementKey
|| __DATA_CONST.__const _kCPSMapsEntitlementKey
|| __DATA_CONST.__const _kCPSParkingEntitlementKey
|| __DATA_CONST.__const _kCPSPublicSafetyEntitlementKey
|| __DATA_CONST.__const _kCPSQuickOrderingEntitlementKey
|| __TEXT.__const _CPButtonMaximumImageSize
|| __TEXT.__const _CPMaximumMessageItemImageSize
|| __TEXT.__const _CPMaximumNumberOfGridImages
|| __TEXT.__const _CPNowPlayingButtonMaximumImageSize
|| __TEXT.__const _CarPlayVersionNumber
|| __TEXT.__const _CarPlayVersionString
|| __TEXT.__const _kCPGridTemplateMaximumItems
|| __TEXT.__text _CPColorMeetsContrastRequirement
|| __TEXT.__text _CPContrastRatioForColors
|| __TEXT.__text _CPContrastingColorForColor
|| __TEXT.__text _CPCurrentProcessHasAudioEntitlement
|| __TEXT.__text _CPCurrentProcessHasChargingEntitlement
|| __TEXT.__text _CPCurrentProcessHasCommunicationEntitlement
|| __TEXT.__text _CPCurrentProcessHasMapsEntitlement
|| __TEXT.__text _CPCurrentProcessHasParkingEntitlement
|| __TEXT.__text _CPCurrentProcessHasPublicSafetyEntitlement
|| __TEXT.__text _CPCurrentProcessHasQuickOrderingEntitlement
|| __TEXT.__text _CPCurrentProcessHasTemplateEntitlement
|| __TEXT.__text _CPGuidanceStyleForColor
|| __TEXT.__text _CPLuminanceForColor
|| __TEXT.__text _CPSStringFromBOOL
|| __TEXT.__text _CPSanitizedBackgroundColor
|| __TEXT.__text _CarPlayFrameworkGeneralLogging
|| __TEXT.__text _luminanceComponent
__ BaseBoard: _BSEqualArrays
__ BaseBoard: _OBJC_CLASS_$_BSAction
__ BaseBoard: _OBJC_METACLASS_$_BSAction
__ CarKit: _CARSessionLimitUserInterfacesChangedNotification
__ CarKit: _CARSessionNightModeChangedNotification
__ CarKit: _OBJC_CLASS_$_CARObserverHashTable
__ CarKit: _OBJC_CLASS_$_CARSessionStatus
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUITemplateDashboardWidgetSceneSettings
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGRectIntegral
__ CoreLocation: _OBJC_CLASS_$_CLPlacemark
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMeasurement
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUnitLength
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListenerEndpoint
__ FrontBoardServices: _OBJC_CLASS_$_FBSCAContextSceneLayer
__ MapKit: _OBJC_CLASS_$_MKMapItem
__ MapKit: _OBJC_CLASS_$_MKPlacemark
__ NetAppsUtilities: _OBJC_CLASS_$_NAFuture
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneSettings
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneSettingsDiffInspector
__ UIKit: _OBJC_CLASS_$_UIApplicationStarkSceneSpecification
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageAsset
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UIMutableApplicationSceneSettings
__ UIKit: _OBJC_CLASS_$_UIScene
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIContextBinder
__ UIKit: _OBJC_CLASS_$__UIWindowHostingSceneSafeAreaInsetsSettingsDiffAction
__ UIKit: _OBJC_CLASS_$__UIWindowSceneFBSSceneTransitionContextDrivenLifecycleSettingsDiffAction
__ UIKit: _OBJC_CLASS_$__UIWindowSceneUserInterfaceStyleSettingsDiffAction
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneSettings
__ UIKit: _OBJC_METACLASS_$_UIApplicationStarkSceneSpecification
__ UIKit: _OBJC_METACLASS_$_UIMutableApplicationSceneSettings
__ UIKit: _OBJC_METACLASS_$_UIScene
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _UIApp
__ UIKit: _UIApplicationDidFinishLaunchingNotification
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UINavigationControllerHideShowBarDuration
__ UIKit: _UISceneWillConnectNotification
__ UIKit: __UISceneSettingsDiffActionPerformActionsWithDelayForTransitionContext
__ UIKit: __UISceneSettingsDiffActionPerformChangesWithTransitionContext
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
CPMapButton : NSObject /usr/lib/libSystem.B.dylib <CPControl, NSSecureCoding>
 @property  @? handler
 @property  CPImageSet *imageSet
 @property  <CPMapButtonDelegate> *controlDelegate
 @property  BOOL enabled
 @property  BOOL hidden
 @property  UIImage *image
 @property  UIImage *focusedImage
 @property  NSUUID *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPMapButton supportsSecureCoding]

  // instance methods
  -[CPMapButton init]
  -[CPMapButton .cxx_destruct]
  -[CPMapButton setImage:]
  -[CPMapButton handler]
  -[CPMapButton setIdentifier:]
  -[CPMapButton image]
  -[CPMapButton encodeWithCoder:]
  -[CPMapButton identifier]
  -[CPMapButton setHandler:]
  -[CPMapButton isEnabled]
  -[CPMapButton setEnabled:]
  -[CPMapButton initWithHandler:]
  -[CPMapButton setHidden:]
  -[CPMapButton initWithCoder:]
  -[CPMapButton isHidden]
  -[CPMapButton imageSet]
  -[CPMapButton focusedImage]
  -[CPMapButton controlDelegate]
  -[CPMapButton handlePrimaryAction]
  -[CPMapButton setFocusedImage:]
  -[CPMapButton setImageSet:]
  -[CPMapButton setControlDelegate:]


CPActionSheetTemplate : CPTemplate <CPAlertDelegate>
 @property  <CPAlertDelegate> *alertDelegate
 @property  NSString *title
 @property  NSString *message
 @property  NSArray *actions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPActionSheetTemplate supportsSecureCoding]

  // instance methods
  -[CPActionSheetTemplate alertDelegate]
  -[CPActionSheetTemplate actions]
  -[CPActionSheetTemplate message]
  -[CPActionSheetTemplate setAlertDelegate:]
  -[CPActionSheetTemplate .cxx_destruct]
  -[CPActionSheetTemplate encodeWithCoder:]
  -[CPActionSheetTemplate title]
  -[CPActionSheetTemplate setTrailingNavigationBarButtons:]
  -[CPActionSheetTemplate initWithCoder:]
  -[CPActionSheetTemplate handleAlertActionForIdentifier:]
  -[CPActionSheetTemplate initWithTitle:message:actions:]
  -[CPActionSheetTemplate leadingNavigationBarButtons]
  -[CPActionSheetTemplate setLeadingNavigationBarButtons:]
  -[CPActionSheetTemplate trailingNavigationBarButtons]


CPTemplateApplicationDashboardScene : UIScene /System/Library/Frameworks/Foundation.framework/Foundation <_UISceneUIWindowHosting, _UIContextBinderContextCreationPolicyHolding, UICoordinateSpace>
 @property  UIWindow *dashboardWindow
 @property  <CPTemplateApplicationDashboardSceneDelegate> *delegate
 @property  CPDashboardController *dashboardController
 @property  UIScreen *_screen
 @property  long long _interfaceOrientation
 @property  <UICoordinateSpace> *_coordinateSpace
 @property  UITraitCollection *_traitCollection
 @property  UIStatusBarManager *_statusBarManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds

  // class methods
  +[CPTemplateApplicationDashboardScene _hostsWindows]

  // instance methods
  -[CPTemplateApplicationDashboardScene _detachWindow:]
  -[CPTemplateApplicationDashboardScene _allWindowsIncludingInternalWindows:onlyVisibleWindows:]
  -[CPTemplateApplicationDashboardScene convertRect:fromCoordinateSpace:]
  -[CPTemplateApplicationDashboardScene initWithSession:connectionOptions:]
  -[CPTemplateApplicationDashboardScene _interfaceOrientation]
  -[CPTemplateApplicationDashboardScene .cxx_destruct]
  -[CPTemplateApplicationDashboardScene _safeAreaInsetsForInterfaceOrientation:]
  -[CPTemplateApplicationDashboardScene _invalidate]
  -[CPTemplateApplicationDashboardScene convertRect:toCoordinateSpace:]
  -[CPTemplateApplicationDashboardScene convertPoint:fromCoordinateSpace:]
  -[CPTemplateApplicationDashboardScene _referenceBounds]
  -[CPTemplateApplicationDashboardScene bounds]
  -[CPTemplateApplicationDashboardScene _definition]
  -[CPTemplateApplicationDashboardScene _updateVisibleWindowOrderWithTest:]
  -[CPTemplateApplicationDashboardScene _windowUpdatedVisibility:]
  -[CPTemplateApplicationDashboardScene _windowUpdatedProperties:]
  -[CPTemplateApplicationDashboardScene convertPoint:toCoordinateSpace:]
  -[CPTemplateApplicationDashboardScene _permitContextCreationForBindingDescription:]
  -[CPTemplateApplicationDashboardScene _traitCollection]
  -[CPTemplateApplicationDashboardScene _readySceneForConnection]
  -[CPTemplateApplicationDashboardScene _fbsSceneLayerForWindow:]
  -[CPTemplateApplicationDashboardScene _coordinateSpace]
  -[CPTemplateApplicationDashboardScene _componentForKey:]
  -[CPTemplateApplicationDashboardScene _attachWindow:]
  -[CPTemplateApplicationDashboardScene _screen]
  -[CPTemplateApplicationDashboardScene _deliverDashboardControllerToDelegate]
  -[CPTemplateApplicationDashboardScene dashboardWindow]
  -[CPTemplateApplicationDashboardScene dashboardController]
  -[CPTemplateApplicationDashboardScene setDashboardWindow:]


CPTravelEstimates : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned long timeRemainingColor
 @property  NSMeasurement *distanceRemaining
 @property  double timeRemaining

  // class methods
  +[CPTravelEstimates supportsSecureCoding]
  +[CPTravelEstimates _greenColor]
  +[CPTravelEstimates _orangeColor]
  +[CPTravelEstimates _redColor]
  +[CPTravelEstimates timeRemainingColorForColor:]

  // instance methods
  -[CPTravelEstimates .cxx_destruct]
  -[CPTravelEstimates encodeWithCoder:]
  -[CPTravelEstimates _init]
  -[CPTravelEstimates timeRemaining]
  -[CPTravelEstimates distanceRemaining]
  -[CPTravelEstimates initWithCoder:]
  -[CPTravelEstimates initWithDistanceRemaining:timeRemaining:]
  -[CPTravelEstimates timeRemainingColor]
  -[CPTravelEstimates setTimeRemainingColor:]


CPNavigationSession : NSObject /usr/lib/libSystem.B.dylib
 @property  CPTrip *trip
 @property  <CPNavigationSessionManaging> *manager
 @property  CPMapTemplate *mapTemplate
 @property  NSArray *upcomingManeuvers

  // instance methods
  -[CPNavigationSession trip]
  -[CPNavigationSession .cxx_destruct]
  -[CPNavigationSession manager]
  -[CPNavigationSession setManager:]
  -[CPNavigationSession pauseTripForReason:description:]
  -[CPNavigationSession finishTrip]
  -[CPNavigationSession cancelTrip]
  -[CPNavigationSession mapTemplate]
  -[CPNavigationSession updateTravelEstimates:forManeuver:]
  -[CPNavigationSession initWithTrip:manager:mapTemplate:]
  -[CPNavigationSession _currentTripId]
  -[CPNavigationSession setUpcomingManeuvers:]
  -[CPNavigationSession upcomingManeuvers]
  -[CPNavigationSession setTrip:]
  -[CPNavigationSession setMapTemplate:]


CPSessionConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long limitedUserInterfaces
 @property  CARSessionStatus *currentStatus
 @property  unsigned long contentStyle
 @property  <CPSessionConfigurationDelegate> *delegate

  // class methods
  +[CPSessionConfiguration convertLimitableUserInterfaces:]

  // instance methods
  -[CPSessionConfiguration initWithDelegate:]
  -[CPSessionConfiguration dealloc]
  -[CPSessionConfiguration .cxx_destruct]
  -[CPSessionConfiguration _limitedUIDidChange:]
  -[CPSessionConfiguration contentStyle]
  -[CPSessionConfiguration setContentStyle:]
  -[CPSessionConfiguration currentStatus]
  -[CPSessionConfiguration setCurrentStatus:]
  -[CPSessionConfiguration setDelegate:]
  -[CPSessionConfiguration delegate]
  -[CPSessionConfiguration _updateLimitedUIStatus]
  -[CPSessionConfiguration _updateNightMode]
  -[CPSessionConfiguration _nightModeDidChange:]
  -[CPSessionConfiguration setLimitedUserInterfaces:]
  -[CPSessionConfiguration limitedUserInterfaces]


CPInterfaceController : NSObject /usr/lib/libSystem.B.dylib <CPTemplateDelegate, CPTemplateServiceClientInterface>
 @property  NSXPCConnection *connection
 @property  <CPTemplateProviding> *templateProvider
 @property  CPTemplate *rootTemplate
 @property  NSMutableArray *templateStack
 @property  CPTemplate *presentedTemplate
 @property  CPTemplate *lastPresentedTemplate
 @property  CPWindow *carWindow
 @property  <CPWindowProviding> *windowProvider
 @property  <CPInterfaceControllerDelegate> *delegate
 @property  BOOL prefersDarkUserInterfaceStyle
 @property  CPTemplate *topTemplate
 @property  NSArray *templates
 @property  UITraitCollection *carTraitCollection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPInterfaceController _whitelistClassesForBaseTemplateProvider:]
  +[CPInterfaceController _templateProvidingInterface]
  +[CPInterfaceController _templateClientInterface]

  // instance methods
  -[CPInterfaceController .cxx_destruct]
  -[CPInterfaceController setConnection:]
  -[CPInterfaceController _invalidate]
  -[CPInterfaceController _init]
  -[CPInterfaceController _connectionInterrupted]
  -[CPInterfaceController _connectionInvalidated]
  -[CPInterfaceController templates]
  -[CPInterfaceController setRootTemplate:animated:]
  -[CPInterfaceController templateWillAppear:animated:]
  -[CPInterfaceController templateDidAppear:animated:]
  -[CPInterfaceController templateWillDisappear:animated:]
  -[CPInterfaceController templateDidDisappear:animated:]
  -[CPInterfaceController setDelegate:]
  -[CPInterfaceController connection]
  -[CPInterfaceController delegate]
  -[CPInterfaceController carTraitCollection]
  -[CPInterfaceController pushTemplate:animated:]
  -[CPInterfaceController setRootTemplate:animated:completion:]
  -[CPInterfaceController templateDidDismiss:]
  -[CPInterfaceController handleActionForControlIdentifier:]
  -[CPInterfaceController isCarPlayCanvasActive]
  -[CPInterfaceController _sceneConnect:]
  -[CPInterfaceController templateProvider]
  -[CPInterfaceController _pushTemplate:presentationStyle:animated:completion:]
  -[CPInterfaceController templateStack]
  -[CPInterfaceController _handleCompletion:withSuccess:error:]
  -[CPInterfaceController _pushMapTemplate:presentationStyle:animated:completion:]
  -[CPInterfaceController _pushGridTemplate:presentationStyle:animated:completion:]
  -[CPInterfaceController _pushListTemplate:presentationStyle:animated:completion:]
  -[CPInterfaceController _pushSearchTemplate:presentationStyle:animated:completion:]
  -[CPInterfaceController _pushNowPlayingTemplate:presentationStyle:animated:completion:]
  -[CPInterfaceController _pushTabBarTemplate:animated:completion:]
  -[CPInterfaceController _pushInformationTemplate:presentationStyle:animated:completion:]
  -[CPInterfaceController _pushEntityTemplate:presentationStyle:animated:completion:]
  -[CPInterfaceController _presentActionSheetTemplate:animated:completion:]
  -[CPInterfaceController _presentAlertTemplate:animated:completion:]
  -[CPInterfaceController _pushVoiceControlTemplate:animated:completion:]
  -[CPInterfaceController _synchronousTemplateProvider]
  -[CPInterfaceController presentTemplate:animated:completion:]
  -[CPInterfaceController popToTemplate:animated:completion:]
  -[CPInterfaceController pushTemplate:animated:completion:]
  -[CPInterfaceController dismissTemplateAnimated:completion:]
  -[CPInterfaceController popTemplateAnimated:completion:]
  -[CPInterfaceController popToRootTemplateAnimated:completion:]
  -[CPInterfaceController updateTabBarTemplate:]
  -[CPInterfaceController _connectToListenerEndpoint:]
  -[CPInterfaceController setTemplateProvider:]
  -[CPInterfaceController bannerTappedWithIdentifier:]
  -[CPInterfaceController bannerDidAppearWithIdentifier:]
  -[CPInterfaceController bannerDidDisappearWithIdentifier:]
  -[CPInterfaceController clientExceededHierarchyDepthLimit]
  -[CPInterfaceController clientPushedIllegalTemplateOfClass:]
  -[CPInterfaceController clientExceededTabBarTabLimit]
  -[CPInterfaceController clientExceededAudioMetadataThrottleLimit]
  -[CPInterfaceController templateIdentifierDidPop:]
  -[CPInterfaceController templateIdentifierDidDismiss:]
  -[CPInterfaceController updateInterestingLayoutGuideWithInsets:]
  -[CPInterfaceController clientPushNowPlayingTemplateAnimated:]
  -[CPInterfaceController windowProvider]
  -[CPInterfaceController presentedTemplate]
  -[CPInterfaceController setPresentedTemplate:]
  -[CPInterfaceController lastPresentedTemplate]
  -[CPInterfaceController setLastPresentedTemplate:]
  -[CPInterfaceController _activeMapTemplate]
  -[CPInterfaceController setPrefersDarkUserInterfaceStyle:]
  -[CPInterfaceController topTemplate]
  -[CPInterfaceController presentTemplate:animated:]
  -[CPInterfaceController popToTemplate:animated:]
  -[CPInterfaceController dismissTemplateAnimated:]
  -[CPInterfaceController popTemplateAnimated:]
  -[CPInterfaceController popToRootTemplateAnimated:]
  -[CPInterfaceController _listenerEndpointForSettings:]
  -[CPInterfaceController prefersDarkUserInterfaceStyle]
  -[CPInterfaceController rootTemplate]
  -[CPInterfaceController setRootTemplate:]
  -[CPInterfaceController setTemplateStack:]
  -[CPInterfaceController carWindow]
  -[CPInterfaceController setCarWindow:]
  -[CPInterfaceController setWindowProvider:]


CPButton : NSObject /usr/lib/libSystem.B.dylib <CPControl, NSSecureCoding>
 @property  @? handler
 @property  CPImageSet *imageSet
 @property  <CPControlDelegate> *delegate
 @property  UIImage *image
 @property  NSString *title
 @property  BOOL enabled
 @property  NSUUID *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPButton supportsSecureCoding]

  // instance methods
  -[CPButton .cxx_destruct]
  -[CPButton handler]
  -[CPButton setTitle:]
  -[CPButton setIdentifier:]
  -[CPButton image]
  -[CPButton encodeWithCoder:]
  -[CPButton identifier]
  -[CPButton title]
  -[CPButton setHandler:]
  -[CPButton isEnabled]
  -[CPButton setEnabled:]
  -[CPButton setDelegate:]
  -[CPButton delegate]
  -[CPButton initWithCoder:]
  -[CPButton imageSet]
  -[CPButton handlePrimaryAction]
  -[CPButton handlePressesStart]
  -[CPButton handlePressesEnd]
  -[CPButton setImageSet:]
  -[CPButton initWithImage:handler:]


CPAlertTemplate : CPTemplate <CPAlertDelegate>
 @property  <CPAlertDelegate> *templateDelegate
 @property  NSArray *titleVariants
 @property  NSArray *actions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPAlertTemplate supportsSecureCoding]
  +[CPAlertTemplate maximumActionCount]

  // instance methods
  -[CPAlertTemplate actions]
  -[CPAlertTemplate .cxx_destruct]
  -[CPAlertTemplate encodeWithCoder:]
  -[CPAlertTemplate _addAction:]
  -[CPAlertTemplate initWithCoder:]
  -[CPAlertTemplate handleAlertActionForIdentifier:]
  -[CPAlertTemplate titleVariants]
  -[CPAlertTemplate initWithTitleVariants:actions:]


CPBarButton : NSObject /usr/lib/libSystem.B.dylib <CPControl, NSSecureCoding>
 @property  @? handler
 @property  <CPBarButtonDelegate> *delegate
 @property  BOOL enabled
 @property  long long buttonStyle
 @property  UIImage *image
 @property  NSString *title
 @property  unsigned long buttonType
 @property  NSUUID *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPBarButton supportsSecureCoding]

  // instance methods
  -[CPBarButton buttonType]
  -[CPBarButton initWithTitle:handler:]
  -[CPBarButton buttonStyle]
  -[CPBarButton .cxx_destruct]
  -[CPBarButton setImage:]
  -[CPBarButton handler]
  -[CPBarButton setTitle:]
  -[CPBarButton setIdentifier:]
  -[CPBarButton image]
  -[CPBarButton encodeWithCoder:]
  -[CPBarButton identifier]
  -[CPBarButton title]
  -[CPBarButton setHandler:]
  -[CPBarButton isEnabled]
  -[CPBarButton setButtonStyle:]
  -[CPBarButton setEnabled:]
  -[CPBarButton setDelegate:]
  -[CPBarButton delegate]
  -[CPBarButton initWithCoder:]
  -[CPBarButton handlePrimaryAction]
  -[CPBarButton handlePressesStart]
  -[CPBarButton handlePressesEnd]
  -[CPBarButton initWithImage:handler:]
  -[CPBarButton initWithType:handler:]


CPNowPlayingTemplate : CPTemplate <CPNowPlayingClientTemplateDelegate>
 @property  CARObserverHashTable *nowPlayingObservers
 @property  NAFuture *templateProviderFuture
 @property  NSArray *nowPlayingButtons
 @property  BOOL upNextButtonEnabled
 @property  NSString *upNextTitle
 @property  BOOL albumArtistButtonEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPNowPlayingTemplate supportsSecureCoding]
  +[CPNowPlayingTemplate sharedTemplate]

  // instance methods
  -[CPNowPlayingTemplate init]
  -[CPNowPlayingTemplate .cxx_destruct]
  -[CPNowPlayingTemplate encodeWithCoder:]
  -[CPNowPlayingTemplate setTrailingNavigationBarButtons:]
  -[CPNowPlayingTemplate removeObserver:]
  -[CPNowPlayingTemplate addObserver:]
  -[CPNowPlayingTemplate initWithCoder:]
  -[CPNowPlayingTemplate setUpNextButtonEnabled:]
  -[CPNowPlayingTemplate setAlbumArtistButtonEnabled:]
  -[CPNowPlayingTemplate updateNowPlayingButtons:]
  -[CPNowPlayingTemplate handleActionForControlIdentifier:]
  -[CPNowPlayingTemplate leadingNavigationBarButtons]
  -[CPNowPlayingTemplate setLeadingNavigationBarButtons:]
  -[CPNowPlayingTemplate trailingNavigationBarButtons]
  -[CPNowPlayingTemplate upNextButtonTapped]
  -[CPNowPlayingTemplate albumArtistButtonTapped]
  -[CPNowPlayingTemplate nowPlayingButtons]
  -[CPNowPlayingTemplate isUpNextButtonEnabled]
  -[CPNowPlayingTemplate isAlbumArtistButtonEnabled]
  -[CPNowPlayingTemplate upNextTitle]
  -[CPNowPlayingTemplate nowPlayingObservers]
  -[CPNowPlayingTemplate _updateLowerRegionButtons:]
  -[CPNowPlayingTemplate _updateNowPlayingTemplate]
  -[CPNowPlayingTemplate handleAction:forControlIdentifier:]
  -[CPNowPlayingTemplate setUpNextTitle:]
  -[CPNowPlayingTemplate setNowPlayingObservers:]


CPListSection : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *header
 @property  NSString *sectionIndexTitle
 @property  NSArray *items

  // class methods
  +[CPListSection supportsSecureCoding]

  // instance methods
  -[CPListSection initWithItems:]
  -[CPListSection header]
  -[CPListSection numberOfItems]
  -[CPListSection itemAtIndex:]
  -[CPListSection items]
  -[CPListSection .cxx_destruct]
  -[CPListSection encodeWithCoder:]
  -[CPListSection indexOfItem:]
  -[CPListSection initWithCoder:]
  -[CPListSection replaceItems:]
  -[CPListSection initWithItems:header:sectionIndexTitle:]
  -[CPListSection sectionIndexTitle]
  -[CPListSection replaceItemAtIndex:withItem:]


CPWindow : UIWindow /System/Library/Frameworks/Foundation.framework/Foundation
 @property  NSLayoutConstraint *topConstraint
 @property  NSLayoutConstraint *bottomConstraint
 @property  NSLayoutConstraint *leftConstraint
 @property  NSLayoutConstraint *rightConstraint
 @property  UILayoutGuide *mapButtonSafeAreaLayoutGuide
 @property  UIWindowScene *windowScene
 @property  CPTemplateApplicationScene *templateApplicationScene

  // instance methods
  -[CPWindow bottomConstraint]
  -[CPWindow setBottomConstraint:]
  -[CPWindow .cxx_destruct]
  -[CPWindow setTopConstraint:]
  -[CPWindow topConstraint]
  -[CPWindow leftConstraint]
  -[CPWindow rightConstraint]
  -[CPWindow setLeftConstraint:]
  -[CPWindow setRightConstraint:]
  -[CPWindow updateLayoutGuideWithInsets:]
  -[CPWindow initWithFrame:templateScene:]
  -[CPWindow templateApplicationScene]
  -[CPWindow setTemplateApplicationScene:]
  -[CPWindow mapButtonSafeAreaLayoutGuide]


CPVoiceControlState : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSArray *titleVariants
 @property  UIImage *image
 @property  NSString *identifier
 @property  BOOL repeats

  // class methods
  +[CPVoiceControlState supportsSecureCoding]

  // instance methods
  -[CPVoiceControlState .cxx_destruct]
  -[CPVoiceControlState image]
  -[CPVoiceControlState encodeWithCoder:]
  -[CPVoiceControlState identifier]
  -[CPVoiceControlState repeats]
  -[CPVoiceControlState initWithCoder:]
  -[CPVoiceControlState titleVariants]
  -[CPVoiceControlState initWithIdentifier:titleVariants:image:repeats:]


CPVoiceControlTemplate : CPTemplate <CPVoiceControlTemplateDelegate>
 @property  NAFuture *templateProviderFuture
 @property  NSArray *voiceControlStates
 @property  NSString *activeStateIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPVoiceControlTemplate supportsSecureCoding]

  // instance methods
  -[CPVoiceControlTemplate .cxx_destruct]
  -[CPVoiceControlTemplate encodeWithCoder:]
  -[CPVoiceControlTemplate setTrailingNavigationBarButtons:]
  -[CPVoiceControlTemplate initWithCoder:]
  -[CPVoiceControlTemplate leadingNavigationBarButtons]
  -[CPVoiceControlTemplate setLeadingNavigationBarButtons:]
  -[CPVoiceControlTemplate trailingNavigationBarButtons]
  -[CPVoiceControlTemplate voiceControlStates]
  -[CPVoiceControlTemplate initWithVoiceControlStates:]
  -[CPVoiceControlTemplate activateVoiceControlStateWithIdentifier:]
  -[CPVoiceControlTemplate activeStateIdentifier]


CPImageSetAssetRegistration : NSObject /usr/lib/libSystem.B.dylib
 @property  UITraitCollection *baseTraitCollection
 @property  UITraitCollection *lightTraitCollection
 @property  UITraitCollection *darkTraitCollection
 @property  UIImage *combinedImage

  // instance methods
  -[CPImageSetAssetRegistration dealloc]
  -[CPImageSetAssetRegistration .cxx_destruct]
  -[CPImageSetAssetRegistration combinedImage]
  -[CPImageSetAssetRegistration lightTraitCollection]
  -[CPImageSetAssetRegistration darkTraitCollection]
  -[CPImageSetAssetRegistration initWithLightImage:darkImage:baseTraitCollection:]
  -[CPImageSetAssetRegistration baseTraitCollection]


CPImageSet : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  CPImageSetAssetRegistration *currentAssetRegistration
 @property  UIImage *lightContentImage
 @property  UIImage *darkContentImage

  // class methods
  +[CPImageSet supportsSecureCoding]

  // instance methods
  -[CPImageSet initWithImage:]
  -[CPImageSet .cxx_destruct]
  -[CPImageSet image]
  -[CPImageSet encodeWithCoder:]
  -[CPImageSet isEqual:]
  -[CPImageSet initWithCoder:]
  -[CPImageSet initWithImage:treatmentBlock:]
  -[CPImageSet lightContentImage]
  -[CPImageSet darkContentImage]
  -[CPImageSet currentAssetRegistration]
  -[CPImageSet setCurrentAssetRegistration:]
  -[CPImageSet setDarkContentImage:]
  -[CPImageSet setLightContentImage:]
  -[CPImageSet initWithLightContentImage:darkContentImage:]
  -[CPImageSet swapStyles]
  -[CPImageSet resizeImagesToSize:]


CPNowPlayingButton : NSObject /usr/lib/libSystem.B.dylib <CPControl, NSSecureCoding>
 @property  @? handler
 @property  <CPControlDelegate> *delegate
 @property  BOOL enabled
 @property  BOOL selected
 @property  NSUUID *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPNowPlayingButton supportsSecureCoding]

  // instance methods
  -[CPNowPlayingButton setSelected:]
  -[CPNowPlayingButton .cxx_destruct]
  -[CPNowPlayingButton isSelected]
  -[CPNowPlayingButton handler]
  -[CPNowPlayingButton setIdentifier:]
  -[CPNowPlayingButton encodeWithCoder:]
  -[CPNowPlayingButton identifier]
  -[CPNowPlayingButton setHandler:]
  -[CPNowPlayingButton isEnabled]
  -[CPNowPlayingButton setEnabled:]
  -[CPNowPlayingButton initWithHandler:]
  -[CPNowPlayingButton setDelegate:]
  -[CPNowPlayingButton delegate]
  -[CPNowPlayingButton initWithCoder:]
  -[CPNowPlayingButton handlePrimaryAction]


CPNowPlayingShuffleButton : CPNowPlayingButton

CPNowPlayingAddToLibraryButton : CPNowPlayingButton

CPNowPlayingMoreButton : CPNowPlayingButton

CPNowPlayingPlaybackRateButton : CPNowPlayingButton

CPNowPlayingRepeatButton : CPNowPlayingButton

CPNowPlayingImageButton : CPNowPlayingButton
 @property  CPImageSet *imageSet
 @property  UIImage *image

  // class methods
  +[CPNowPlayingImageButton supportsSecureCoding]

  // instance methods
  -[CPNowPlayingImageButton .cxx_destruct]
  -[CPNowPlayingImageButton image]
  -[CPNowPlayingImageButton encodeWithCoder:]
  -[CPNowPlayingImageButton initWithCoder:]
  -[CPNowPlayingImageButton imageSet]
  -[CPNowPlayingImageButton setImageSet:]
  -[CPNowPlayingImageButton initWithImage:handler:]


CPTabBarTemplate : CPTemplate <CPTabBarClientTemplateDelegate>
 @property  unsigned long indexOfSelectedTab
 @property  <CPTabBarTemplateProviding> *templateProvider
 @property  NAFuture *templateProviderFuture
 @property  CPInterfaceController *interfaceController
 @property  <CPTabBarTemplateDelegate> *delegate
 @property  NSArray *templates
 @property  CPTemplate *selectedTemplate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPTabBarTemplate supportsSecureCoding]
  +[CPTabBarTemplate maximumTabCount]

  // instance methods
  -[CPTabBarTemplate .cxx_destruct]
  -[CPTabBarTemplate encodeWithCoder:]
  -[CPTabBarTemplate templates]
  -[CPTabBarTemplate setTrailingNavigationBarButtons:]
  -[CPTabBarTemplate interfaceController]
  -[CPTabBarTemplate setInterfaceController:]
  -[CPTabBarTemplate setDelegate:]
  -[CPTabBarTemplate delegate]
  -[CPTabBarTemplate initWithCoder:]
  -[CPTabBarTemplate indexOfSelectedTab]
  -[CPTabBarTemplate handleActionForControlIdentifier:]
  -[CPTabBarTemplate leadingNavigationBarButtons]
  -[CPTabBarTemplate setLeadingNavigationBarButtons:]
  -[CPTabBarTemplate trailingNavigationBarButtons]
  -[CPTabBarTemplate templateProvider]
  -[CPTabBarTemplate setTemplateProvider:]
  -[CPTabBarTemplate validateTemplates:]
  -[CPTabBarTemplate setIndexOfSelectedTab:]
  -[CPTabBarTemplate initWithTemplates:]
  -[CPTabBarTemplate updateTemplates:]
  -[CPTabBarTemplate selectedTemplate]


CPGridTemplate : CPTemplate <CPGridTemplateClientDelegate, CPBarButtonProviding>
 @property  NAFuture *templateProviderFuture
 @property  NSArray *gridButtons
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *leadingNavigationBarButtons
 @property  NSArray *trailingNavigationBarButtons
 @property  CPBarButton *backButton

  // class methods
  +[CPGridTemplate supportsSecureCoding]

  // instance methods
  -[CPGridTemplate .cxx_destruct]
  -[CPGridTemplate encodeWithCoder:]
  -[CPGridTemplate title]
  -[CPGridTemplate initWithCoder:]
  -[CPGridTemplate handleActionForControlIdentifier:]
  -[CPGridTemplate gridButtons]
  -[CPGridTemplate initWithTitle:gridButtons:]


CPListItem : NSObject /usr/lib/libSystem.B.dylib <CPListItemPrivate, NSSecureCoding, CPSelectableListItem>
 @property  CPImageSet *imageSet
 @property  CPImageSet *accessoryImageSet
 @property  NSUUID *identifier
 @property  CPListTemplate *listTemplate
 @property  long long accessoryType
 @property  BOOL explicitContent
 @property  double playbackProgress
 @property  BOOL playing
 @property  long long playingIndicatorLocation
 @property  @? handler
 @property  NSString *text
 @property  id userInfo
 @property  NSString *detailText
 @property  UIImage *image
 @property  UIImage *accessoryImage
 @property  BOOL showsDisclosureIndicator
 @property  BOOL showsExplicitLabel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPListItem supportsSecureCoding]
  +[CPListItem maximumImageSize]

  // instance methods
  -[CPListItem setPlaying:]
  -[CPListItem isPlaying]
  -[CPListItem _setNeedsUpdate]
  -[CPListItem playbackProgress]
  -[CPListItem showsDisclosureIndicator]
  -[CPListItem setShowsDisclosureIndicator:]
  -[CPListItem setUserInfo:]
  -[CPListItem accessoryType]
  -[CPListItem isExplicitContent]
  -[CPListItem text]
  -[CPListItem .cxx_destruct]
  -[CPListItem setImage:]
  -[CPListItem handler]
  -[CPListItem setAccessoryType:]
  -[CPListItem image]
  -[CPListItem encodeWithCoder:]
  -[CPListItem identifier]
  -[CPListItem detailText]
  -[CPListItem setHandler:]
  -[CPListItem userInfo]
  -[CPListItem setDetailText:]
  -[CPListItem isEqual:]
  -[CPListItem setPlaybackProgress:]
  -[CPListItem accessoryImage]
  -[CPListItem setAccessoryImage:]
  -[CPListItem setText:]
  -[CPListItem initWithCoder:]
  -[CPListItem setExplicitContent:]
  -[CPListItem initWithText:detailText:]
  -[CPListItem initWithText:detailText:image:accessoryImage:accessoryType:]
  -[CPListItem imageSet]
  -[CPListItem setImageSet:]
  -[CPListItem listTemplate]
  -[CPListItem setListTemplate:]
  -[CPListItem initWithText:detailText:image:]
  -[CPListItem accessoryImageSet]
  -[CPListItem playingIndicatorLocation]
  -[CPListItem initWithText:detailText:image:showsDisclosureIndicator:]
  -[CPListItem setPlayingIndicatorLocation:]
  -[CPListItem setShowsExplicitLabel:]
  -[CPListItem showsExplicitLabel]
  -[CPListItem setAccessoryImageSet:]


CPListTemplate : CPTemplate <CPListClientTemplateDelegate, CPBarButtonProviding>
 @property  NSMutableSet *itemsToReload
 @property  NAFuture *templateProviderFuture
 @property  <CPListTemplateDelegate> *delegate
 @property  NSArray *sections
 @property  NSString *title
 @property  unsigned long sectionCount
 @property  unsigned long itemCount
 @property  NSArray *emptyViewTitleVariants
 @property  NSArray *emptyViewSubtitleVariants
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *leadingNavigationBarButtons
 @property  NSArray *trailingNavigationBarButtons
 @property  CPBarButton *backButton

  // class methods
  +[CPListTemplate supportsSecureCoding]
  +[CPListTemplate maximumItemCount]
  +[CPListTemplate maximumSectionCount]

  // instance methods
  -[CPListTemplate performUpdate]
  -[CPListTemplate sectionCount]
  -[CPListTemplate itemCount]
  -[CPListTemplate .cxx_destruct]
  -[CPListTemplate encodeWithCoder:]
  -[CPListTemplate title]
  -[CPListTemplate sections]
  -[CPListTemplate indexPathForItem:]
  -[CPListTemplate initWithTitle:sections:]
  -[CPListTemplate updateSections:]
  -[CPListTemplate setDelegate:]
  -[CPListTemplate delegate]
  -[CPListTemplate initWithCoder:]
  -[CPListTemplate listTemplate:didSelectListItemWithIdentifier:completionHandler:]
  -[CPListTemplate listTemplate:didSelectImageAtIndex:inImageRowItem:]
  -[CPListTemplate _setItemNeedsUpdate:]
  -[CPListTemplate _linkItemsInSection:]
  -[CPListTemplate _sectionsByTrimmingAndLinkingSections:]
  -[CPListTemplate emptyViewTitleVariants]
  -[CPListTemplate emptyViewSubtitleVariants]
  -[CPListTemplate itemsToReload]
  -[CPListTemplate _itemForHostItemWithIdentifier:]
  -[CPListTemplate setEmptyViewTitleVariants:]
  -[CPListTemplate setEmptyViewSubtitleVariants:]
  -[CPListTemplate setItemsToReload:]


CPInformationItem : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *title
 @property  NSString *detail

  // class methods
  +[CPInformationItem supportsSecureCoding]

  // instance methods
  -[CPInformationItem .cxx_destruct]
  -[CPInformationItem encodeWithCoder:]
  -[CPInformationItem _init]
  -[CPInformationItem title]
  -[CPInformationItem detail]
  -[CPInformationItem initWithCoder:]
  -[CPInformationItem initWithTitle:detail:]


CPManeuver : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  unsigned long maneuverType
 @property  NSArray *roadFollowingManeuverVariants
 @property  unsigned long trafficSide
 @property  unsigned long junctionType
 @property  NSMeasurement *junctionExitAngle
 @property  NSSet *junctionElementAngles
 @property  NSArray *stringInstructionVariants
 @property  long long displayStyle
 @property  CPImageSet *junctionImageSet
 @property  CPImageSet *dashboardSymbolImageSet
 @property  CPImageSet *dashboardJunctionImageSet
 @property  CPImageSet *notificationSymbolImageSet
 @property  CPImageSet *symbolSet
 @property  UIImage *symbolImage
 @property  UIImage *junctionImage
 @property  NSArray *instructionVariants
 @property  CPTravelEstimates *initialTravelEstimates
 @property  NSArray *attributedInstructionVariants
 @property  UIImage *dashboardSymbolImage
 @property  UIImage *dashboardJunctionImage
 @property  NSArray *dashboardInstructionVariants
 @property  NSArray *dashboardAttributedInstructionVariants
 @property  UIImage *notificationSymbolImage
 @property  NSArray *notificationInstructionVariants
 @property  NSArray *notificationAttributedInstructionVariants
 @property  id userInfo

  // class methods
  +[CPManeuver supportsSecureCoding]
  +[CPManeuver _descriptionForManeuverType:]
  +[CPManeuver _descriptionForTrafficSide:]
  +[CPManeuver _descriptionForJunctionType:]

  // instance methods
  -[CPManeuver copyWithZone:]
  -[CPManeuver init]
  -[CPManeuver setUserInfo:]
  -[CPManeuver setManeuverType:]
  -[CPManeuver .cxx_destruct]
  -[CPManeuver encodeWithCoder:]
  -[CPManeuver identifier]
  -[CPManeuver userInfo]
  -[CPManeuver setSymbolImage:]
  -[CPManeuver symbolImage]
  -[CPManeuver isEqual:]
  -[CPManeuver displayStyle]
  -[CPManeuver maneuverType]
  -[CPManeuver setDisplayStyle:]
  -[CPManeuver junctionType]
  -[CPManeuver setJunctionType:]
  -[CPManeuver initWithCoder:]
  -[CPManeuver symbolSet]
  -[CPManeuver instructionVariants]
  -[CPManeuver attributedInstructionVariants]
  -[CPManeuver roadFollowingManeuverVariants]
  -[CPManeuver initialTravelEstimates]
  -[CPManeuver trafficSide]
  -[CPManeuver junctionExitAngle]
  -[CPManeuver junctionElementAngles]
  -[CPManeuver junctionImageSet]
  -[CPManeuver dashboardSymbolImageSet]
  -[CPManeuver dashboardInstructionVariants]
  -[CPManeuver dashboardAttributedInstructionVariants]
  -[CPManeuver dashboardJunctionImageSet]
  -[CPManeuver notificationSymbolImageSet]
  -[CPManeuver notificationInstructionVariants]
  -[CPManeuver notificationAttributedInstructionVariants]
  -[CPManeuver setSymbolSet:]
  -[CPManeuver setJunctionImageSet:]
  -[CPManeuver setInstructionVariants:]
  -[CPManeuver setAttributedInstructionVariants:]
  -[CPManeuver setRoadFollowingManeuverVariants:]
  -[CPManeuver setInitialTravelEstimates:]
  -[CPManeuver setTrafficSide:]
  -[CPManeuver setJunctionExitAngle:]
  -[CPManeuver setJunctionElementAngles:]
  -[CPManeuver setDashboardSymbolImageSet:]
  -[CPManeuver setDashboardInstructionVariants:]
  -[CPManeuver setDashboardAttributedInstructionVariants:]
  -[CPManeuver setDashboardJunctionImageSet:]
  -[CPManeuver setNotificationSymbolImageSet:]
  -[CPManeuver setNotificationInstructionVariants:]
  -[CPManeuver setNotificationAttributedInstructionVariants:]
  -[CPManeuver junctionImage]
  -[CPManeuver stringInstructionVariants]
  -[CPManeuver setJunctionImage:]
  -[CPManeuver dashboardSymbolImage]
  -[CPManeuver setDashboardSymbolImage:]
  -[CPManeuver dashboardJunctionImage]
  -[CPManeuver setDashboardJunctionImage:]
  -[CPManeuver notificationSymbolImage]
  -[CPManeuver setNotificationSymbolImage:]


CPMapTemplate : CPTemplate <CPMapButtonDelegate, CPMapClientTemplateDelegate, CPBannerDelegate, CPNavigationAlertUpdating, CPBarButtonProviding>
 @property  NSMutableDictionary *postedBannerObjects
 @property  NAFuture *navigationSessionProviderFuture
 @property  NAFuture *templateProviderFuture
 @property  <CPBannerProviding> *bannerProvider
 @property  <CPNavigationSessionProviding> *navigationSessionProvider
 @property  NSArray *tripPreviews
 @property  UIColor *guidanceBackgroundColor
 @property  unsigned long tripEstimateStyle
 @property  NSArray *mapButtons
 @property  BOOL automaticallyHidesNavigationBar
 @property  BOOL hidesButtonsWithNavigationBar
 @property  <CPMapTemplateDelegate> *mapDelegate
 @property  BOOL panningInterfaceVisible
 @property  CPNavigationAlert *currentNavigationAlert
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *leadingNavigationBarButtons
 @property  NSArray *trailingNavigationBarButtons
 @property  CPBarButton *backButton

  // class methods
  +[CPMapTemplate supportsSecureCoding]

  // instance methods
  -[CPMapTemplate setMapDelegate:]
  -[CPMapTemplate init]
  -[CPMapTemplate .cxx_destruct]
  -[CPMapTemplate encodeWithCoder:]
  -[CPMapTemplate mapDelegate]
  -[CPMapTemplate initWithCoder:]
  -[CPMapTemplate mapButton:setHidden:]
  -[CPMapTemplate mapButton:setImageSet:]
  -[CPMapTemplate mapButton:setFocusedImage:]
  -[CPMapTemplate handleActionForControlIdentifier:]
  -[CPMapTemplate _displayStyleForManeuver:]
  -[CPMapTemplate _postBannerIfNecessaryForManeuver:]
  -[CPMapTemplate _updateBannerIfNecessaryForManeuver:travelEstimates:]
  -[CPMapTemplate setBannerProvider:]
  -[CPMapTemplate setNavigationSessionProvider:]
  -[CPMapTemplate previewTripIdentifier:usingRouteIdentifier:]
  -[CPMapTemplate startTripIdentifier:usingRouteIdentifier:]
  -[CPMapTemplate clientPanBeganWithDirection:]
  -[CPMapTemplate clientPanEndedWithDirection:]
  -[CPMapTemplate clientPanWithDirection:]
  -[CPMapTemplate clientPanGestureBegan]
  -[CPMapTemplate clientPanGestureWithDeltaPoint:velocity:]
  -[CPMapTemplate clientPanGestureEndedWithVelocity:]
  -[CPMapTemplate clientPanViewDidAppear]
  -[CPMapTemplate clientPanViewDidDisappear]
  -[CPMapTemplate clientPanViewWillDisappear]
  -[CPMapTemplate clientNavigationAlertWillAppear:]
  -[CPMapTemplate clientNavigationAlertDidAppear:]
  -[CPMapTemplate clientNavigationAlertWillDisappear:context:]
  -[CPMapTemplate clientNavigationAlertDidDisappear:context:]
  -[CPMapTemplate clientTripCanceledByExternalNavigation]
  -[CPMapTemplate clientTripAlreadyStartedException]
  -[CPMapTemplate dismissNavigationAlertAnimated:completion:]
  -[CPMapTemplate bannerTappedWithIdentifier:]
  -[CPMapTemplate bannerDidAppearWithIdentifier:]
  -[CPMapTemplate bannerDidDisappearWithIdentifier:]
  -[CPMapTemplate mapButtons]
  -[CPMapTemplate automaticallyHidesNavigationBar]
  -[CPMapTemplate hidesButtonsWithNavigationBar]
  -[CPMapTemplate guidanceBackgroundColor]
  -[CPMapTemplate tripEstimateStyle]
  -[CPMapTemplate showTripPreviews:selectedTrip:textConfiguration:]
  -[CPMapTemplate updateTravelEstimates:forTrip:withTimeRemainingColor:]
  -[CPMapTemplate navigationSessionProviderFuture]
  -[CPMapTemplate _postBannerIfNecessaryForNavigationAlert:]
  -[CPMapTemplate currentNavigationAlert]
  -[CPMapTemplate tripPreviews]
  -[CPMapTemplate _resolveTrip:routeChoice:completion:]
  -[CPMapTemplate postedBannerObjects]
  -[CPMapTemplate bannerProvider]
  -[CPMapTemplate _updateNavigationAlert:]
  -[CPMapTemplate setGuidanceBackgroundColor:]
  -[CPMapTemplate setTripEstimateStyle:]
  -[CPMapTemplate setAutomaticallyHidesNavigationBar:]
  -[CPMapTemplate setHidesButtonsWithNavigationBar:]
  -[CPMapTemplate showTripPreviews:textConfiguration:]
  -[CPMapTemplate showRouteChoicesPreviewForTrip:textConfiguration:]
  -[CPMapTemplate hideTripPreviews]
  -[CPMapTemplate updateTravelEstimates:forTrip:]
  -[CPMapTemplate startNavigationSessionForTrip:]
  -[CPMapTemplate presentNavigationAlert:animated:]
  -[CPMapTemplate setMapButtons:]
  -[CPMapTemplate showPanningInterfaceAnimated:]
  -[CPMapTemplate dismissPanningInterfaceAnimated:]
  -[CPMapTemplate isPanningInterfaceVisible]
  -[CPMapTemplate setPostedBannerObjects:]
  -[CPMapTemplate setNavigationSessionProviderFuture:]
  -[CPMapTemplate navigationSessionProvider]


CPPointOfInterest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSUUID *identifier
 @property  CPImageSet *pinImageSet
 @property  MKMapItem *location
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *summary
 @property  NSString *detailTitle
 @property  NSString *detailSubtitle
 @property  NSString *detailSummary
 @property  UIImage *pinImage
 @property  CPTextButton *primaryButton
 @property  CPTextButton *secondaryButton
 @property  id userInfo

  // class methods
  +[CPPointOfInterest supportsSecureCoding]

  // instance methods
  -[CPPointOfInterest summary]
  -[CPPointOfInterest setSubtitle:]
  -[CPPointOfInterest setUserInfo:]
  -[CPPointOfInterest .cxx_destruct]
  -[CPPointOfInterest setSummary:]
  -[CPPointOfInterest setTitle:]
  -[CPPointOfInterest setLocation:]
  -[CPPointOfInterest encodeWithCoder:]
  -[CPPointOfInterest identifier]
  -[CPPointOfInterest title]
  -[CPPointOfInterest setDetailTitle:]
  -[CPPointOfInterest setDetailSubtitle:]
  -[CPPointOfInterest detailTitle]
  -[CPPointOfInterest detailSubtitle]
  -[CPPointOfInterest userInfo]
  -[CPPointOfInterest setPrimaryButton:]
  -[CPPointOfInterest setSecondaryButton:]
  -[CPPointOfInterest isEqual:]
  -[CPPointOfInterest location]
  -[CPPointOfInterest subtitle]
  -[CPPointOfInterest pinImage]
  -[CPPointOfInterest primaryButton]
  -[CPPointOfInterest secondaryButton]
  -[CPPointOfInterest initWithCoder:]
  -[CPPointOfInterest setPinImage:]
  -[CPPointOfInterest pinImageSet]
  -[CPPointOfInterest detailSummary]
  -[CPPointOfInterest isEqualToPointOfInterest:]
  -[CPPointOfInterest initWithLocation:title:subtitle:summary:detailTitle:detailSubtitle:detailSummary:pinImage:]
  -[CPPointOfInterest setDetailSummary:]
  -[CPPointOfInterest setPinImageSet:]


CPPointsOfInterestEntity : CPEntity <NSSecureCoding, CPPointsOfInterestProviding>
 @property  NSString *title
 @property  NSArray *pointsOfInterest

  // class methods
  +[CPPointsOfInterestEntity supportsSecureCoding]

  // instance methods
  -[CPPointsOfInterestEntity .cxx_destruct]
  -[CPPointsOfInterestEntity setTitle:]
  -[CPPointsOfInterestEntity encodeWithCoder:]
  -[CPPointsOfInterestEntity objectForIdentifier:]
  -[CPPointsOfInterestEntity title]
  -[CPPointsOfInterestEntity initWithCoder:]
  -[CPPointsOfInterestEntity pointsOfInterest]
  -[CPPointsOfInterestEntity setPointsOfInterest:]
  -[CPPointsOfInterestEntity initWithTitle:pointsOfInterest:]


CPInformationTemplate : CPTemplate <CPTemplateDelegate, NSSecureCoding>
 @property  NAFuture *templateProviderFuture
 @property  long long layout
 @property  NSString *title
 @property  NSArray *items
 @property  NSArray *actions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPInformationTemplate supportsSecureCoding]

  // instance methods
  -[CPInformationTemplate setItems:]
  -[CPInformationTemplate actions]
  -[CPInformationTemplate setActions:]
  -[CPInformationTemplate performUpdate]
  -[CPInformationTemplate items]
  -[CPInformationTemplate .cxx_destruct]
  -[CPInformationTemplate setTitle:]
  -[CPInformationTemplate encodeWithCoder:]
  -[CPInformationTemplate title]
  -[CPInformationTemplate layout]
  -[CPInformationTemplate initWithCoder:]
  -[CPInformationTemplate handleActionForControlIdentifier:]
  -[CPInformationTemplate _sanitizeItems:]
  -[CPInformationTemplate _sanitizeButtons:]
  -[CPInformationTemplate initWithTitle:layout:items:actions:]
  -[CPInformationTemplate updateTemplatePropertiesFromTemplate:]


CPEntity : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSUUID *identifier

  // class methods
  +[CPEntity supportsSecureCoding]

  // instance methods
  -[CPEntity .cxx_destruct]
  -[CPEntity encodeWithCoder:]
  -[CPEntity identifier]
  -[CPEntity objectForIdentifier:]
  -[CPEntity _init]
  -[CPEntity initWithCoder:]


CPNavigationAlert : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSUUID *identifier
 @property  <CPNavigationAlertUpdating> *navigationAlertUpdateTarget
 @property  NSArray *titleVariants
 @property  NSArray *subtitleVariants
 @property  CPImageSet *imageSet
 @property  UIImage *image
 @property  CPAlertAction *primaryAction
 @property  CPAlertAction *secondaryAction
 @property  double duration

  // class methods
  +[CPNavigationAlert supportsSecureCoding]

  // instance methods
  -[CPNavigationAlert .cxx_destruct]
  -[CPNavigationAlert setIdentifier:]
  -[CPNavigationAlert image]
  -[CPNavigationAlert encodeWithCoder:]
  -[CPNavigationAlert identifier]
  -[CPNavigationAlert primaryAction]
  -[CPNavigationAlert initWithCoder:]
  -[CPNavigationAlert duration]
  -[CPNavigationAlert imageSet]
  -[CPNavigationAlert titleVariants]
  -[CPNavigationAlert setNavigationAlertUpdateTarget:]
  -[CPNavigationAlert secondaryAction]
  -[CPNavigationAlert _initWithTitleVariants:subtitleVariants:imageSet:primaryAction:secondaryAction:duration:]
  -[CPNavigationAlert navigationAlertUpdateTarget]
  -[CPNavigationAlert subtitleVariants]
  -[CPNavigationAlert initWithTitleVariants:subtitleVariants:imageSet:primaryAction:secondaryAction:duration:]
  -[CPNavigationAlert initWithTitleVariants:subtitleVariants:image:primaryAction:secondaryAction:duration:]
  -[CPNavigationAlert updateTitleVariants:subtitleVariants:]


CPSearchTemplate : CPTemplate <CPSearchClientTemplateDelegate>
 @property  NSArray *listItems
 @property  NAFuture *templateProviderFuture
 @property  <CPSearchTemplateDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSearchTemplate .cxx_destruct]
  -[CPSearchTemplate setTrailingNavigationBarButtons:]
  -[CPSearchTemplate setDelegate:]
  -[CPSearchTemplate delegate]
  -[CPSearchTemplate listItems]
  -[CPSearchTemplate setListItems:]
  -[CPSearchTemplate leadingNavigationBarButtons]
  -[CPSearchTemplate setLeadingNavigationBarButtons:]
  -[CPSearchTemplate trailingNavigationBarButtons]
  -[CPSearchTemplate searchTemplate:updateSearchResultsForSearchText:completionResults:]
  -[CPSearchTemplate searchTemplate:selectedResult:completionHandler:]
  -[CPSearchTemplate searchTemplateSearchButtonPressed:]


CPPointOfInterestTemplate : CPTemplate <NSSecureCoding, CPEntityProviding, CPEntityClientTemplateDelegate>
 @property  CPPointsOfInterestEntity *poiEntity
 @property  NSArray *pointsOfInterest
 @property  NAFuture *templateProviderFuture
 @property  NSString *title
 @property  unsigned long selectedIndex
 @property  <CPPointOfInterestTemplateDelegate> *pointOfInterestDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPPointOfInterestTemplate supportsSecureCoding]

  // instance methods
  -[CPPointOfInterestTemplate entity]
  -[CPPointOfInterestTemplate performUpdate]
  -[CPPointOfInterestTemplate .cxx_destruct]
  -[CPPointOfInterestTemplate setTitle:]
  -[CPPointOfInterestTemplate encodeWithCoder:]
  -[CPPointOfInterestTemplate title]
  -[CPPointOfInterestTemplate selectedIndex]
  -[CPPointOfInterestTemplate setSelectedIndex:]
  -[CPPointOfInterestTemplate initWithCoder:]
  -[CPPointOfInterestTemplate handleActionForControlIdentifier:]
  -[CPPointOfInterestTemplate handleMapRegionDidChange:]
  -[CPPointOfInterestTemplate handleDidSelectPointOfInterestWithIdentifier:]
  -[CPPointOfInterestTemplate pointsOfInterest]
  -[CPPointOfInterestTemplate setPointsOfInterest:]
  -[CPPointOfInterestTemplate poiEntity]
  -[CPPointOfInterestTemplate pointOfInterestDelegate]
  -[CPPointOfInterestTemplate _pointOfInterestWithIdentifier:]
  -[CPPointOfInterestTemplate initWithTitle:pointsOfInterest:selectedIndex:]
  -[CPPointOfInterestTemplate setPointsOfInterest:selectedIndex:]
  -[CPPointOfInterestTemplate setPointOfInterestDelegate:]
  -[CPPointOfInterestTemplate setPoiEntity:]


CPEndpointListenerWrapper : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding>
 @property  NSObject<OS_xpc_object> *endpoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPEndpointListenerWrapper setEndpoint:]
  -[CPEndpointListenerWrapper initWithXPCDictionary:]
  -[CPEndpointListenerWrapper endpoint]
  -[CPEndpointListenerWrapper .cxx_destruct]
  -[CPEndpointListenerWrapper encodeWithXPCDictionary:]
  -[CPEndpointListenerWrapper initWithXPCEndpoint:]


CPRequestEndpointAction : BSAction /System/Library/PrivateFrameworks/CarKit.framework/CarKit
  // instance methods
  -[CPRequestEndpointAction canSendResponse]


CPListImageRowItem : NSObject /usr/lib/libSystem.B.dylib <CPListItemPrivate, NSSecureCoding, CPSelectableListItem>
 @property  NSArray *gridImagesSet
 @property  NSUUID *identifier
 @property  CPListTemplate *listTemplate
 @property  NSString *text
 @property  id userInfo
 @property  @? handler
 @property  NSArray *gridImages
 @property  @? listImageRowHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPListImageRowItem supportsSecureCoding]
  +[CPListImageRowItem maximumImageSize]

  // instance methods
  -[CPListImageRowItem _setNeedsUpdate]
  -[CPListImageRowItem setUserInfo:]
  -[CPListImageRowItem text]
  -[CPListImageRowItem .cxx_destruct]
  -[CPListImageRowItem handler]
  -[CPListImageRowItem encodeWithCoder:]
  -[CPListImageRowItem identifier]
  -[CPListImageRowItem setHandler:]
  -[CPListImageRowItem userInfo]
  -[CPListImageRowItem setText:]
  -[CPListImageRowItem initWithCoder:]
  -[CPListImageRowItem listTemplate]
  -[CPListImageRowItem setListTemplate:]
  -[CPListImageRowItem listImageRowHandler]
  -[CPListImageRowItem updateImages:]
  -[CPListImageRowItem gridImagesSet]
  -[CPListImageRowItem initWithText:images:]
  -[CPListImageRowItem gridImages]
  -[CPListImageRowItem setListImageRowHandler:]
  -[CPListImageRowItem setGridImagesSet:]


CPUITemplateApplicationSceneSettings : UIApplicationSceneSettings /System/Library/Frameworks/Foundation.framework/Foundation <CPUITemplateApplicationSceneSettings>
 @property  NSObject<OS_xpc_object> *endpoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPUITemplateApplicationSceneSettings endpoint]
  -[CPUITemplateApplicationSceneSettings mutableCopyWithZone:]


CPUIMutableTemplateApplicationSceneSettings : UIMutableApplicationSceneSettings /System/Library/Frameworks/Foundation.framework/Foundation <CPUITemplateApplicationSceneSettings>
 @property  NSObject<OS_xpc_object> *endpoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPUIMutableTemplateApplicationSceneSettings copyWithZone:]
  -[CPUIMutableTemplateApplicationSceneSettings setEndpoint:]
  -[CPUIMutableTemplateApplicationSceneSettings endpoint]


CPDashboardController : NSObject /usr/lib/libSystem.B.dylib <CPDashboardClientInterface>
 @property  NSXPCConnection *connection
 @property  <CPDashboardProviding> *dashboardProvider
 @property  NSArray *shortcutButtons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPDashboardController _dashboardProvidingInterface]
  +[CPDashboardController _dashboardClientInterface]

  // instance methods
  -[CPDashboardController .cxx_destruct]
  -[CPDashboardController setConnection:]
  -[CPDashboardController _invalidate]
  -[CPDashboardController _init]
  -[CPDashboardController _connectionInterrupted]
  -[CPDashboardController _connectionInvalidated]
  -[CPDashboardController connection]
  -[CPDashboardController handleActionForControlIdentifier:]
  -[CPDashboardController _sceneConnect:]
  -[CPDashboardController _connectToListenerEndpoint:]
  -[CPDashboardController dashboardProvider]
  -[CPDashboardController setDashboardProvider:]
  -[CPDashboardController shortcutButtons]
  -[CPDashboardController setShortcutButtons:]


CPTemplateApplicationSceneGeometrySettingsDiffAction : NSObject /usr/lib/libSystem.B.dylib <_UISceneSettingsDiffAction>
 @property  UIApplicationSceneSettingsDiffInspector *sceneSettingsGeometryMutationDiffInspector
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPTemplateApplicationSceneGeometrySettingsDiffAction _updateSceneGeometryWithSettingObserverContext:windowScene:transitionContext:]
  -[CPTemplateApplicationSceneGeometrySettingsDiffAction sceneSettingsGeometryMutationDiffInspector]
  -[CPTemplateApplicationSceneGeometrySettingsDiffAction .cxx_destruct]
  -[CPTemplateApplicationSceneGeometrySettingsDiffAction setSceneSettingsGeometryMutationDiffInspector:]
  -[CPTemplateApplicationSceneGeometrySettingsDiffAction _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:]


CPAlertAction : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSString *title
 @property  unsigned long style
 @property  @? handler

  // class methods
  +[CPAlertAction supportsSecureCoding]

  // instance methods
  -[CPAlertAction .cxx_destruct]
  -[CPAlertAction initWithTitle:style:handler:]
  -[CPAlertAction handler]
  -[CPAlertAction setIdentifier:]
  -[CPAlertAction encodeWithCoder:]
  -[CPAlertAction identifier]
  -[CPAlertAction title]
  -[CPAlertAction initWithCoder:]
  -[CPAlertAction style]


CPGridButton : NSObject /usr/lib/libSystem.B.dylib <CPControl, NSSecureCoding>
 @property  @? handler
 @property  CPImageSet *imageSet
 @property  <CPControlDelegate> *delegate
 @property  BOOL enabled
 @property  UIImage *image
 @property  NSArray *titleVariants
 @property  NSUUID *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPGridButton supportsSecureCoding]

  // instance methods
  -[CPGridButton .cxx_destruct]
  -[CPGridButton handler]
  -[CPGridButton setIdentifier:]
  -[CPGridButton image]
  -[CPGridButton encodeWithCoder:]
  -[CPGridButton identifier]
  -[CPGridButton _init]
  -[CPGridButton setHandler:]
  -[CPGridButton isEnabled]
  -[CPGridButton setEnabled:]
  -[CPGridButton setDelegate:]
  -[CPGridButton delegate]
  -[CPGridButton initWithCoder:]
  -[CPGridButton imageSet]
  -[CPGridButton handlePrimaryAction]
  -[CPGridButton setImageSet:]
  -[CPGridButton titleVariants]
  -[CPGridButton initWithTitleVariants:image:handler:]


CPMessageComposeBarButton : CPBarButton
 @property  NSString *title

  // instance methods
  -[CPMessageComposeBarButton initWithImage:]
  -[CPMessageComposeBarButton init]


CPInformationRatingItem : CPInformationItem <NSSecureCoding>
 @property  NSNumber *rating
 @property  NSNumber *maximumRating

  // class methods
  +[CPInformationRatingItem supportsSecureCoding]

  // instance methods
  -[CPInformationRatingItem .cxx_destruct]
  -[CPInformationRatingItem encodeWithCoder:]
  -[CPInformationRatingItem maximumRating]
  -[CPInformationRatingItem rating]
  -[CPInformationRatingItem initWithCoder:]
  -[CPInformationRatingItem initWithTitle:detail:]
  -[CPInformationRatingItem _santizeRatingItem]
  -[CPInformationRatingItem initWithRating:maximumRating:title:detail:]


CPUITemplateDashboardSceneSpecification : UIApplicationStarkSceneSpecification /System/Library/Frameworks/Foundation.framework/Foundation
  // instance methods
  -[CPUITemplateDashboardSceneSpecification settingsClass]
  -[CPUITemplateDashboardSceneSpecification baseSceneComponentClassDictionary]
  -[CPUITemplateDashboardSceneSpecification initialSettingsDiffActions]
  -[CPUITemplateDashboardSceneSpecification uiSceneMinimumClass]
  -[CPUITemplateDashboardSceneSpecification uiSceneSessionRole]


CPTextButton : NSObject /usr/lib/libSystem.B.dylib <CPControl, NSSecureCoding>
 @property  @? handler
 @property  <CPControlDelegate> *delegate
 @property  BOOL enabled
 @property  NSString *title
 @property  long long textStyle
 @property  NSUUID *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPTextButton supportsSecureCoding]

  // instance methods
  -[CPTextButton setTextStyle:]
  -[CPTextButton .cxx_destruct]
  -[CPTextButton textStyle]
  -[CPTextButton handler]
  -[CPTextButton setTitle:]
  -[CPTextButton setIdentifier:]
  -[CPTextButton encodeWithCoder:]
  -[CPTextButton identifier]
  -[CPTextButton title]
  -[CPTextButton setHandler:]
  -[CPTextButton isEnabled]
  -[CPTextButton setEnabled:]
  -[CPTextButton setDelegate:]
  -[CPTextButton delegate]
  -[CPTextButton initWithCoder:]
  -[CPTextButton handlePrimaryAction]
  -[CPTextButton handlePressesStart]
  -[CPTextButton handlePressesEnd]
  -[CPTextButton initWithTitle:textStyle:handler:]


CPContact : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  CPContactEntity *contactEntity
 @property  NSString *name
 @property  UIImage *image
 @property  NSArray *actions
 @property  NSString *subtitle
 @property  NSString *informativeText

  // class methods
  +[CPContact supportsSecureCoding]

  // instance methods
  -[CPContact actions]
  -[CPContact setSubtitle:]
  -[CPContact setActions:]
  -[CPContact setInformativeText:]
  -[CPContact .cxx_destruct]
  -[CPContact setImage:]
  -[CPContact name]
  -[CPContact image]
  -[CPContact encodeWithCoder:]
  -[CPContact informativeText]
  -[CPContact subtitle]
  -[CPContact setName:]
  -[CPContact initWithCoder:]
  -[CPContact contactEntity]
  -[CPContact initWithName:image:]
  -[CPContact setContactEntity:]


CPContactMessageButton : CPButton
 @property  NSString *phoneOrEmail

  // class methods
  +[CPContactMessageButton supportsSecureCoding]

  // instance methods
  -[CPContactMessageButton .cxx_destruct]
  -[CPContactMessageButton encodeWithCoder:]
  -[CPContactMessageButton initWithCoder:]
  -[CPContactMessageButton phoneOrEmail]
  -[CPContactMessageButton initWithPhoneOrEmail:]


CPContactCallButton : CPButton
  // class methods
  +[CPContactCallButton supportsSecureCoding]

  // instance methods
  -[CPContactCallButton initWithHandler:]


CPContactDirectionsButton : CPButton
  // class methods
  +[CPContactDirectionsButton supportsSecureCoding]

  // instance methods
  -[CPContactDirectionsButton initWithHandler:]


CPTripPreviewTextConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *startButtonTitle
 @property  NSString *additionalRoutesButtonTitle
 @property  NSString *overviewButtonTitle

  // class methods
  +[CPTripPreviewTextConfiguration supportsSecureCoding]

  // instance methods
  -[CPTripPreviewTextConfiguration .cxx_destruct]
  -[CPTripPreviewTextConfiguration encodeWithCoder:]
  -[CPTripPreviewTextConfiguration initWithCoder:]
  -[CPTripPreviewTextConfiguration startButtonTitle]
  -[CPTripPreviewTextConfiguration additionalRoutesButtonTitle]
  -[CPTripPreviewTextConfiguration overviewButtonTitle]
  -[CPTripPreviewTextConfiguration initWithStartButtonTitle:additionalRoutesButtonTitle:overviewButtonTitle:]


CPContactTemplate : CPTemplate <NSSecureCoding, CPEntityProviding, CPEntityClientTemplateDelegate, CPBarButtonProviding>
 @property  NAFuture *templateProviderFuture
 @property  CPContact *contact
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *leadingNavigationBarButtons
 @property  NSArray *trailingNavigationBarButtons
 @property  CPBarButton *backButton

  // class methods
  +[CPContactTemplate supportsSecureCoding]

  // instance methods
  -[CPContactTemplate entity]
  -[CPContactTemplate performUpdate]
  -[CPContactTemplate contact]
  -[CPContactTemplate setContact:]
  -[CPContactTemplate initWithContact:]
  -[CPContactTemplate .cxx_destruct]
  -[CPContactTemplate encodeWithCoder:]
  -[CPContactTemplate initWithCoder:]
  -[CPContactTemplate handleActionForControlIdentifier:]


CPRouteChoice : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSArray *summaryVariants
 @property  NSArray *additionalInformationVariants
 @property  NSArray *selectionSummaryVariants
 @property  id userInfo

  // class methods
  +[CPRouteChoice supportsSecureCoding]

  // instance methods
  -[CPRouteChoice copyWithZone:]
  -[CPRouteChoice init]
  -[CPRouteChoice setUserInfo:]
  -[CPRouteChoice .cxx_destruct]
  -[CPRouteChoice setIdentifier:]
  -[CPRouteChoice encodeWithCoder:]
  -[CPRouteChoice identifier]
  -[CPRouteChoice userInfo]
  -[CPRouteChoice isEqual:]
  -[CPRouteChoice initWithCoder:]
  -[CPRouteChoice initWithSummaryVariants:additionalInformationVariants:selectionSummaryVariants:]
  -[CPRouteChoice summaryVariants]
  -[CPRouteChoice additionalInformationVariants]
  -[CPRouteChoice selectionSummaryVariants]
  -[CPRouteChoice setSummaryVariants:]
  -[CPRouteChoice setAdditionalInformationVariants:]
  -[CPRouteChoice setSelectionSummaryVariants:]


CPTrip : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSUUID *identifier
 @property  MKMapItem *origin
 @property  MKMapItem *destination
 @property  NSArray *routeChoices
 @property  id userInfo

  // class methods
  +[CPTrip supportsSecureCoding]

  // instance methods
  -[CPTrip destination]
  -[CPTrip init]
  -[CPTrip origin]
  -[CPTrip setUserInfo:]
  -[CPTrip .cxx_destruct]
  -[CPTrip setIdentifier:]
  -[CPTrip encodeWithCoder:]
  -[CPTrip identifier]
  -[CPTrip userInfo]
  -[CPTrip initWithCoder:]
  -[CPTrip routeChoices]
  -[CPTrip initWithOrigin:destination:routeChoices:]


CPDashboardButton : NSObject /usr/lib/libSystem.B.dylib <CPControl, NSSecureCoding>
 @property  @? handler
 @property  CPImageSet *imageSet
 @property  <CPControlDelegate> *delegate
 @property  UIImage *image
 @property  NSArray *titleVariants
 @property  NSArray *subtitleVariants
 @property  NSUUID *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPDashboardButton supportsSecureCoding]

  // instance methods
  -[CPDashboardButton .cxx_destruct]
  -[CPDashboardButton handler]
  -[CPDashboardButton setIdentifier:]
  -[CPDashboardButton image]
  -[CPDashboardButton encodeWithCoder:]
  -[CPDashboardButton identifier]
  -[CPDashboardButton _init]
  -[CPDashboardButton setHandler:]
  -[CPDashboardButton setDelegate:]
  -[CPDashboardButton delegate]
  -[CPDashboardButton initWithCoder:]
  -[CPDashboardButton imageSet]
  -[CPDashboardButton handlePrimaryAction]
  -[CPDashboardButton setImageSet:]
  -[CPDashboardButton titleVariants]
  -[CPDashboardButton subtitleVariants]
  -[CPDashboardButton initWithTitleVariants:subtitleVariants:image:handler:]


CPTemplateApplicationScene : UIScene /System/Library/Frameworks/Foundation.framework/Foundation <_UISceneUIWindowHosting, _UIContextBinderContextCreationPolicyHolding, UICoordinateSpace, _UISceneSettingsDiffAction, CPWindowProviding>
 @property  CPWindow *carWindow
 @property  UIApplicationSceneSettingsDiffInspector *sceneSettingsInterfaceStyleDiffInspector
 @property  <CPTemplateApplicationSceneDelegate> *delegate
 @property  CPInterfaceController *interfaceController
 @property  UIScreen *_screen
 @property  long long _interfaceOrientation
 @property  <UICoordinateSpace> *_coordinateSpace
 @property  UITraitCollection *_traitCollection
 @property  UIStatusBarManager *_statusBarManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  UITraitCollection *carTraitCollection

  // class methods
  +[CPTemplateApplicationScene _hostsWindows]
  +[CPTemplateApplicationScene activeTemplateScene]

  // instance methods
  -[CPTemplateApplicationScene _detachWindow:]
  -[CPTemplateApplicationScene _allWindowsIncludingInternalWindows:onlyVisibleWindows:]
  -[CPTemplateApplicationScene convertRect:fromCoordinateSpace:]
  -[CPTemplateApplicationScene initWithSession:connectionOptions:]
  -[CPTemplateApplicationScene _interfaceOrientation]
  -[CPTemplateApplicationScene .cxx_destruct]
  -[CPTemplateApplicationScene _safeAreaInsetsForInterfaceOrientation:]
  -[CPTemplateApplicationScene _invalidate]
  -[CPTemplateApplicationScene convertRect:toCoordinateSpace:]
  -[CPTemplateApplicationScene convertPoint:fromCoordinateSpace:]
  -[CPTemplateApplicationScene bounds]
  -[CPTemplateApplicationScene interfaceController]
  -[CPTemplateApplicationScene _definition]
  -[CPTemplateApplicationScene _updateVisibleWindowOrderWithTest:]
  -[CPTemplateApplicationScene _windowUpdatedVisibility:]
  -[CPTemplateApplicationScene _windowUpdatedProperties:]
  -[CPTemplateApplicationScene convertPoint:toCoordinateSpace:]
  -[CPTemplateApplicationScene _permitContextCreationForBindingDescription:]
  -[CPTemplateApplicationScene _readySceneForConnection]
  -[CPTemplateApplicationScene _fbsSceneLayerForWindow:]
  -[CPTemplateApplicationScene _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:]
  -[CPTemplateApplicationScene _coordinateSpace]
  -[CPTemplateApplicationScene _componentForKey:]
  -[CPTemplateApplicationScene _attachWindow:]
  -[CPTemplateApplicationScene _screen]
  -[CPTemplateApplicationScene carTraitCollection]
  -[CPTemplateApplicationScene _sceneWillConnect]
  -[CPTemplateApplicationScene updateLayoutGuideWithInsets:]
  -[CPTemplateApplicationScene carWindow]
  -[CPTemplateApplicationScene setCarWindow:]
  -[CPTemplateApplicationScene _deliverInterfaceControllerToDelegate]
  -[CPTemplateApplicationScene _refreshTraitCollection]
  -[CPTemplateApplicationScene _shouldCreateCarWindow]
  -[CPTemplateApplicationScene _shouldCallAppDelegate]
  -[CPTemplateApplicationScene sceneSettingsInterfaceStyleDiffInspector]
  -[CPTemplateApplicationScene setSceneSettingsInterfaceStyleDiffInspector:]


CPTemplate : NSObject /usr/lib/libSystem.B.dylib <CPBarButtonDelegate, CPBarButtonProviding, CPControlDelegate, CPTemplateDelegate, NSSecureCoding>
 @property  <CPBaseTemplateProviding> *templateProvider
 @property  BOOL needsUpdate
 @property  NAFuture *templateProviderFuture
 @property  NSUUID *identifier
 @property  <CPTemplateDelegate> *templateDelegate
 @property  NSArray *internalLeadingBarButtons
 @property  NSArray *internalTrailingBarButtons
 @property  id userInfo
 @property  NSString *tabTitle
 @property  UIImage *tabImage
 @property  long long tabSystemItem
 @property  BOOL showsTabBadge
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *leadingNavigationBarButtons
 @property  NSArray *trailingNavigationBarButtons
 @property  CPBarButton *backButton

  // class methods
  +[CPTemplate supportsSecureCoding]

  // instance methods
  -[CPTemplate setNeedsUpdate]
  -[CPTemplate performUpdate]
  -[CPTemplate init]
  -[CPTemplate setUserInfo:]
  -[CPTemplate .cxx_destruct]
  -[CPTemplate encodeWithCoder:]
  -[CPTemplate identifier]
  -[CPTemplate needsUpdate]
  -[CPTemplate userInfo]
  -[CPTemplate setTrailingNavigationBarButtons:]
  -[CPTemplate templateWillAppear:animated:]
  -[CPTemplate templateDidAppear:animated:]
  -[CPTemplate templateWillDisappear:animated:]
  -[CPTemplate templateDidDisappear:animated:]
  -[CPTemplate isEqual:]
  -[CPTemplate setNeedsUpdate:]
  -[CPTemplate backButton]
  -[CPTemplate setBackButton:]
  -[CPTemplate tabImage]
  -[CPTemplate initWithCoder:]
  -[CPTemplate setTabImage:]
  -[CPTemplate control:setEnabled:]
  -[CPTemplate templateDelegate]
  -[CPTemplate handleActionForControlIdentifier:]
  -[CPTemplate leadingNavigationBarButtons]
  -[CPTemplate setLeadingNavigationBarButtons:]
  -[CPTemplate trailingNavigationBarButtons]
  -[CPTemplate templateProvider]
  -[CPTemplate setTemplateDelegate:]
  -[CPTemplate connectTemplateProvider:]
  -[CPTemplate setTemplateProvider:]
  -[CPTemplate invalidateTemplateProvider]
  -[CPTemplate barButton:setImage:]
  -[CPTemplate barButton:setTitle:]
  -[CPTemplate templateProviderFuture]
  -[CPTemplate control:setSelected:]
  -[CPTemplate internalLeadingBarButtons]
  -[CPTemplate internalTrailingBarButtons]
  -[CPTemplate tabTitle]
  -[CPTemplate tabSystemItem]
  -[CPTemplate showsTabBadge]
  -[CPTemplate setTemplateProviderFuture:]
  -[CPTemplate setInternalLeadingBarButtons:]
  -[CPTemplate setInternalTrailingBarButtons:]
  -[CPTemplate setTabTitle:]
  -[CPTemplate setTabSystemItem:]
  -[CPTemplate setShowsTabBadge:]


CPContactEntity : CPEntity <CPContactProviding, NSSecureCoding>
 @property  NSString *name
 @property  CPImageSet *imageSet
 @property  NSArray *actionButtons
 @property  NSString *subtitle
 @property  NSString *informativeText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPContactEntity supportsSecureCoding]

  // instance methods
  -[CPContactEntity setSubtitle:]
  -[CPContactEntity setActionButtons:]
  -[CPContactEntity actionButtons]
  -[CPContactEntity setInformativeText:]
  -[CPContactEntity .cxx_destruct]
  -[CPContactEntity name]
  -[CPContactEntity encodeWithCoder:]
  -[CPContactEntity objectForIdentifier:]
  -[CPContactEntity isEqual:]
  -[CPContactEntity informativeText]
  -[CPContactEntity subtitle]
  -[CPContactEntity setName:]
  -[CPContactEntity initWithCoder:]
  -[CPContactEntity imageSet]
  -[CPContactEntity setImageSet:]
  -[CPContactEntity initWithName:imageSet:]


CPUITemplateApplicationSceneSpecification : UIApplicationStarkSceneSpecification /System/Library/Frameworks/Foundation.framework/Foundation
  // instance methods
  -[CPUITemplateApplicationSceneSpecification settingsClass]
  -[CPUITemplateApplicationSceneSpecification baseSceneComponentClassDictionary]
  -[CPUITemplateApplicationSceneSpecification initialSettingsDiffActions]
  -[CPUITemplateApplicationSceneSpecification uiSceneMinimumClass]
  -[CPUITemplateApplicationSceneSpecification uiSceneSessionRole]


CPMessageListItemLeadingConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  CPImageSet *leadingImageSet
 @property  BOOL unread
 @property  long long leadingItem
 @property  UIImage *leadingImage

  // class methods
  +[CPMessageListItemLeadingConfiguration supportsSecureCoding]

  // instance methods
  -[CPMessageListItemLeadingConfiguration .cxx_destruct]
  -[CPMessageListItemLeadingConfiguration encodeWithCoder:]
  -[CPMessageListItemLeadingConfiguration leadingImage]
  -[CPMessageListItemLeadingConfiguration initWithLeadingItem:leadingImage:unread:]
  -[CPMessageListItemLeadingConfiguration isUnread]
  -[CPMessageListItemLeadingConfiguration initWithCoder:]
  -[CPMessageListItemLeadingConfiguration leadingItem]
  -[CPMessageListItemLeadingConfiguration leadingImageSet]
  -[CPMessageListItemLeadingConfiguration setLeadingImageSet:]


CPMessageListItemTrailingConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  CPImageSet *trailingImageSet
 @property  long long trailingItem
 @property  UIImage *trailingImage

  // class methods
  +[CPMessageListItemTrailingConfiguration supportsSecureCoding]

  // instance methods
  -[CPMessageListItemTrailingConfiguration .cxx_destruct]
  -[CPMessageListItemTrailingConfiguration encodeWithCoder:]
  -[CPMessageListItemTrailingConfiguration trailingImage]
  -[CPMessageListItemTrailingConfiguration initWithCoder:]
  -[CPMessageListItemTrailingConfiguration trailingItem]
  -[CPMessageListItemTrailingConfiguration trailingImageSet]
  -[CPMessageListItemTrailingConfiguration initWithTrailingItem:trailingImage:]
  -[CPMessageListItemTrailingConfiguration setTrailingImageSet:]


CPMessageListItem : NSObject /usr/lib/libSystem.B.dylib <CPListItemPrivate, NSSecureCoding, CPListTemplateItem>
 @property  NSUUID *identifier
 @property  CPListTemplate *listTemplate
 @property  NSString *text
 @property  NSString *conversationIdentifier
 @property  NSString *phoneOrEmailAddress
 @property  CPMessageListItemLeadingConfiguration *leadingConfiguration
 @property  CPMessageListItemTrailingConfiguration *trailingConfiguration
 @property  NSString *detailText
 @property  NSString *trailingText
 @property  id userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPMessageListItem supportsSecureCoding]

  // instance methods
  -[CPMessageListItem _setNeedsUpdate]
  -[CPMessageListItem conversationIdentifier]
  -[CPMessageListItem setUserInfo:]
  -[CPMessageListItem text]
  -[CPMessageListItem setConversationIdentifier:]
  -[CPMessageListItem .cxx_destruct]
  -[CPMessageListItem trailingText]
  -[CPMessageListItem setTrailingText:]
  -[CPMessageListItem encodeWithCoder:]
  -[CPMessageListItem identifier]
  -[CPMessageListItem detailText]
  -[CPMessageListItem userInfo]
  -[CPMessageListItem initWithConversationIdentifier:text:leadingConfiguration:trailingConfiguration:detailText:trailingText:]
  -[CPMessageListItem setDetailText:]
  -[CPMessageListItem isEqual:]
  -[CPMessageListItem setText:]
  -[CPMessageListItem initWithCoder:]
  -[CPMessageListItem listTemplate]
  -[CPMessageListItem setListTemplate:]
  -[CPMessageListItem phoneOrEmailAddress]
  -[CPMessageListItem leadingConfiguration]
  -[CPMessageListItem trailingConfiguration]
  -[CPMessageListItem initWithFullName:phoneOrEmailAddress:leadingConfiguration:trailingConfiguration:detailText:trailingText:]
  -[CPMessageListItem setLeadingConfiguration:]
  -[CPMessageListItem setTrailingConfiguration:]
  -[CPMessageListItem setPhoneOrEmailAddress:]


01 00 0100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSAction 
01 00 0200 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARObserverHashTable 
01 00 0200 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARSessionStatus 
01 00 0500 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLPlacemark 
01 00 0300 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUITemplateDashboardWidgetSceneSettings 
01 00 0700 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSCAContextSceneLayer 
01 00 0600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 0900 /System/Library/Frameworks/MapKit.framework/MapKit: MKMapItem 
01 00 0900 /System/Library/Frameworks/MapKit.framework/MapKit: MKPlacemark 
01 00 0800 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAFuture 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMeasurement 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0c00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitLength 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListenerEndpoint 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneSettings 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneSettingsDiffInspector 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationStarkSceneSpecification 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageAsset 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMutableApplicationSceneSettings 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScene 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContextBinder 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIWindowHostingSceneSafeAreaInsetsSettingsDiffAction 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIWindowSceneFBSSceneTransitionContextDrivenLifecycleSettingsDiffAction 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIWindowSceneUserInterfaceStyleSettingsDiffAction 
