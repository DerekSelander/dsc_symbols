|| __DATA.__common __mapNumber
|| __DATA.__common __updateTimer
|| __DATA.__data _ARPresentationThermalPolicyCameraCaptureRate
|| __DATA.__data _ARPresentationThermalPolicyCameraPosition
|| __DATA.__data _ARPresentationThermalPolicyCameraType
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyCameraMatrix
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyCameraReadoutTime
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyCameraToImuPosition
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyCameraToImuRotation
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyImageHeight
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyImageWidth
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyLensType
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyRadialDistortion
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyTangentialDistortion
|| __DATA.__data _ARWorldTrackingBackWideCalibrationParametersKeyTimestampCorrectionForCamera
|| __DATA.__objc_data _OBJC_CLASS_$_AR2D3DSkeletonLiftingData
|| __DATA.__objc_data _OBJC_CLASS_$_AR2DSkeletonDetectionPostProcessGPU
|| __DATA.__objc_data _OBJC_CLASS_$_AR2DSkeletonDetectionPostProcessingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_AR2DSkeletonDetectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_AR2DSkeletonDetectionTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_AR2DSkeletonRawEspressoResult
|| __DATA.__objc_data _OBJC_CLASS_$_AR3DSkeletonDetectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_AR3DSkeletonDetectionResults
|| __DATA.__objc_data _OBJC_CLASS_$_AR3DSkeletonLiftingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_AR3DSkeletonRetargetingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARArchive
|| __DATA.__objc_data _OBJC_CLASS_$_ARBoardController
|| __DATA.__objc_data _OBJC_CLASS_$_ARBody2D
|| __DATA.__objc_data _OBJC_CLASS_$_ARBodyAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARBodyTrackingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARCameraParameters
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingAnimTime
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingAnimationView
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingArc
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingBasicSpring
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingBlendableSplineGroup
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingButton
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingControlBlurredBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingControlPointContainer
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingCorner
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingDelayedAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingDeviceController
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingDotsRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingGlyphRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingGlyphState
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingHeuristic
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingHeuristicAnyPlane
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingHeuristicCollection
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingHeuristicDelay
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingHeuristicHorizontalPlane
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingHeuristicTracking
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingHeuristicVerticalPlane
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingInstanceTransform
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingMetalSplineData
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingMotionTracker
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingOverlayView
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingPillButton
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingQuaternionSpring
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingRoundedButton
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingSpline
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingSplineGroup
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingSpringDouble3
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingState
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingStateActivated
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingStateDeactivating
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingStateHidden
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingStateRelocalizing
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingStateSpring
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingTransformations
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingUpdateManager
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoachingWrappedButton
|| __DATA.__objc_data _OBJC_CLASS_$_ARCollaborationData
|| __DATA.__objc_data _OBJC_CLASS_$_ARCompositeSignaler
|| __DATA.__objc_data _OBJC_CLASS_$_ARCompositeStats
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoreRESkeletonResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARCoreRESkeletonResults
|| __DATA.__objc_data _OBJC_CLASS_$_ARCriticalTimer
|| __DATA.__objc_data _OBJC_CLASS_$_ARCubemapCompletion
|| __DATA.__objc_data _OBJC_CLASS_$_ARCubemapGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_ARCustomTechniquesConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARDepthBasedPersonDetectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARDepthEstimationTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARDevicePerformanceLevel
|| __DATA.__objc_data _OBJC_CLASS_$_ARDevicePerformanceMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_ARDualGuidedFilter
|| __DATA.__objc_data _OBJC_CLASS_$_AREnvironmentProbeAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_AREnvironmentProbeManager
|| __DATA.__objc_data _OBJC_CLASS_$_AREnvironmentProbeUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_AREspressoInputBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_ARFLSpring
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceData
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceGeometry
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceLightEstimationTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceTrackingData
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceTrackingImageSensor
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceTrackingInternalTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARFaceTrackingResults
|| __DATA.__objc_data _OBJC_CLASS_$_ARFrameTimingData
|| __DATA.__objc_data _OBJC_CLASS_$_ARGPUCubemapConverter
|| __DATA.__objc_data _OBJC_CLASS_$_ARGPUCubemapHistogram
|| __DATA.__objc_data _OBJC_CLASS_$_ARGPUCubemapProjector
|| __DATA.__objc_data _OBJC_CLASS_$_ARGPUImageUndistortion
|| __DATA.__objc_data _OBJC_CLASS_$_ARGPUSphericalBlur
|| __DATA.__objc_data _OBJC_CLASS_$_ARGPUWarper
|| __DATA.__objc_data _OBJC_CLASS_$_ARHWFaceDetection
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageCroppingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageDetectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageRotationTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageScalingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageTrackingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARImageTrackingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARInternalCompositor
|| __DATA.__objc_data _OBJC_CLASS_$_ARInternalFaceTrackingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARKeyFrame
|| __DATA.__objc_data _OBJC_CLASS_$_ARMLImageDownScalingResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARMLImageDownScalingResultData
|| __DATA.__objc_data _OBJC_CLASS_$_ARMLImageDownScalingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARMLImageProcessingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARMatteGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_ARModifiedImageData
|| __DATA.__objc_data _OBJC_CLASS_$_ARNeutralFaceGeometry
|| __DATA.__objc_data _OBJC_CLASS_$_ARODTResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARObjectAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARObjectDetectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARObjectDetectionResultData
|| __DATA.__objc_data _OBJC_CLASS_$_ARObjectScanningConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARParticipantAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARPatchGrid
|| __DATA.__objc_data _OBJC_CLASS_$_ARPersonDetectionData
|| __DATA.__objc_data _OBJC_CLASS_$_ARPersonDetectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARPersonDetectionTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARPersonOcclusionParentTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARPersonOcclusionTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARPlaneAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_ARPlaneGeometry
|| __DATA.__objc_data _OBJC_CLASS_$_ARPlaneWorld
|| __DATA.__objc_data _OBJC_CLASS_$_ARPointCloud
|| __DATA.__objc_data _OBJC_CLASS_$_ARPose
|| __DATA.__objc_data _OBJC_CLASS_$_ARPoseContext
|| __DATA.__objc_data _OBJC_CLASS_$_ARPositionalTrackingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARPredictedPose
|| __DATA.__objc_data _OBJC_CLASS_$_ARPredictedSample
|| __DATA.__objc_data _OBJC_CLASS_$_ARPredictedSamplesQueue
|| __DATA.__objc_data _OBJC_CLASS_$_ARPredictionStats
|| __DATA.__objc_data _OBJC_CLASS_$_ARPresentationDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_ARPresentationDisplay
|| __DATA.__objc_data _OBJC_CLASS_$_ARPresentationDisplayLinkHelper
|| __DATA.__objc_data _OBJC_CLASS_$_ARPresentationFrame
|| __DATA.__objc_data _OBJC_CLASS_$_ARPresentationFramePool
|| __DATA.__objc_data _OBJC_CLASS_$_ARPresentationFramePool_Eye
|| __DATA.__objc_data _OBJC_CLASS_$_ARPresentationOverrides
|| __DATA.__objc_data _OBJC_CLASS_$_ARPresentationStats
|| __DATA.__objc_data _OBJC_CLASS_$_ARPresentationTarget
|| __DATA.__objc_data _OBJC_CLASS_$_ARPresentationThermalPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_ARPresentation_Eye
|| __DATA.__objc_data _OBJC_CLASS_$_ARProbeFilter
|| __DATA.__objc_data _OBJC_CLASS_$_ARQAHelper
|| __DATA.__objc_data _OBJC_CLASS_$_ARQuickLookPreviewItem
|| __DATA.__objc_data _OBJC_CLASS_$_ARRaycastQuery
|| __DATA.__objc_data _OBJC_CLASS_$_ARRaycastResult
|| __DATA.__objc_data _OBJC_CLASS_$_ARRecordingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARRecordingTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARReferenceImage
|| __DATA.__objc_data _OBJC_CLASS_$_ARReferenceImageCachedError
|| __DATA.__objc_data _OBJC_CLASS_$_ARReferenceObject
|| __DATA.__objc_data _OBJC_CLASS_$_ARRenderStats
|| __DATA.__objc_data _OBJC_CLASS_$_ARReplayConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ARReplayMovieDataWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_ARReplayResultDataPublicTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARReplayResultDataTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARReplaySensor
|| __DATA.__objc_data _OBJC_CLASS_$_ARReplaySensorPublic
|| __DATA.__objc_data _OBJC_CLASS_$_ARReplayTimestampedData
|| __DATA.__objc_data _OBJC_CLASS_$_ARSCNCompositor
|| __DATA.__objc_data _OBJC_CLASS_$_ARSCNFaceGeometry
|| __DATA.__objc_data _OBJC_CLASS_$_ARSCNPlaneGeometry
|| __DATA.__objc_data _OBJC_CLASS_$_ARSCNVisualizationHelper
|| __DATA.__objc_data _OBJC_CLASS_$_ARSKView
|| __DATA.__objc_data _OBJC_CLASS_$_ARScreenImageCapturer
|| __DATA.__objc_data _OBJC_CLASS_$_ARScreenRecorder
|| __DATA.__objc_data _OBJC_CLASS_$_ARScreenRecording
|| __DATA.__objc_data _OBJC_CLASS_$_ARSegmentationSingleTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARSegmentationTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_ARSharedGPUDevice
|| __DATA.__objc_data _OBJC_CLASS_$_ARSinglePassRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_ARSkeleton
|| __DATA.__objc_data _OBJC_CLASS_$_ARSkeleton2D
|| __DATA.__objc_data _OBJC_CLASS_$_ARSkeleton3D
|| __DATA.__objc_data _OBJC_CLASS_$_ARSkeletonDefinition
|| __DATA.__objc_data _OBJC_CLASS_$_ARStarBoardPresentationView
|| __DATA.__objc_data _OBJC_CLASS_$_ARStarBoardSceneComponent
|| __DATA.__objc_data _OBJC_CLASS_$_ARStarBoardSceneManager
|| __DATA.__objc_data _OBJC_CLASS_$_ARStarBoardViewController
|| __DATA.__objc_data _OBJC_CLASS_$_ARTrackedRaycast
|| __DATA.__objc_data _OBJC_CLASS_$_ARWorldMap
|| __DATA.__objc_data _OBJC_CLASS_$_ARWorldTrackingParticipantAnchorData
|| __DATA.__objc_data _OBJC_METACLASS_$_AR2D3DSkeletonLiftingData
|| __DATA.__objc_data _OBJC_METACLASS_$_AR2DSkeletonDetectionPostProcessGPU
|| __DATA.__objc_data _OBJC_METACLASS_$_AR2DSkeletonDetectionPostProcessingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_AR2DSkeletonDetectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AR2DSkeletonDetectionTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_AR2DSkeletonRawEspressoResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AR3DSkeletonDetectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AR3DSkeletonDetectionResults
|| __DATA.__objc_data _OBJC_METACLASS_$_AR3DSkeletonLiftingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_AR3DSkeletonRetargetingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARArchive
|| __DATA.__objc_data _OBJC_METACLASS_$_ARBoardController
|| __DATA.__objc_data _OBJC_METACLASS_$_ARBody2D
|| __DATA.__objc_data _OBJC_METACLASS_$_ARBodyAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARBodyTrackingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCameraParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingAnimTime
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingAnimationView
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingArc
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingBasicSpring
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingBlendableSplineGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingButton
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingControlBlurredBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingControlPointContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingCorner
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingDelayedAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingDeviceController
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingDotsRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingGlyphRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingGlyphState
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingHeuristic
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingHeuristicAnyPlane
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingHeuristicCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingHeuristicDelay
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingHeuristicHorizontalPlane
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingHeuristicTracking
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingHeuristicVerticalPlane
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingInstanceTransform
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingMetalSplineData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingMotionTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingOverlayView
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingPillButton
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingQuaternionSpring
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingRoundedButton
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingSpline
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingSplineGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingSpringDouble3
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingState
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingStateActivated
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingStateDeactivating
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingStateHidden
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingStateRelocalizing
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingStateSpring
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingTransformations
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingUpdateManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoachingWrappedButton
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCollaborationData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCompositeSignaler
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCompositeStats
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoreRESkeletonResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCoreRESkeletonResults
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCriticalTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCubemapCompletion
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCubemapGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_ARCustomTechniquesConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDepthBasedPersonDetectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDepthEstimationTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDevicePerformanceLevel
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDevicePerformanceMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARDualGuidedFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_AREnvironmentProbeAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_AREnvironmentProbeManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AREnvironmentProbeUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_AREspressoInputBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFLSpring
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceGeometry
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceLightEstimationTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceTrackingData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceTrackingImageSensor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceTrackingInternalTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFaceTrackingResults
|| __DATA.__objc_data _OBJC_METACLASS_$_ARFrameTimingData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGPUCubemapConverter
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGPUCubemapHistogram
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGPUCubemapProjector
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGPUImageUndistortion
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGPUSphericalBlur
|| __DATA.__objc_data _OBJC_METACLASS_$_ARGPUWarper
|| __DATA.__objc_data _OBJC_METACLASS_$_ARHWFaceDetection
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageCroppingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageDetectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageRotationTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageScalingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageTrackingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARImageTrackingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARInternalCompositor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARInternalFaceTrackingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARKeyFrame
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMLImageDownScalingResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMLImageDownScalingResultData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMLImageDownScalingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMLImageProcessingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARMatteGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_ARModifiedImageData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARNeutralFaceGeometry
|| __DATA.__objc_data _OBJC_METACLASS_$_ARODTResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARObjectAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARObjectDetectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARObjectDetectionResultData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARObjectScanningConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARParticipantAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPatchGrid
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPersonDetectionData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPersonDetectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPersonDetectionTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPersonOcclusionParentTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPersonOcclusionTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPlaneAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPlaneGeometry
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPlaneWorld
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPointCloud
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPose
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPoseContext
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPositionalTrackingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPredictedPose
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPredictedSample
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPredictedSamplesQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPredictionStats
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPresentationDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPresentationDisplay
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPresentationDisplayLinkHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPresentationFrame
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPresentationFramePool
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPresentationFramePool_Eye
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPresentationOverrides
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPresentationStats
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPresentationTarget
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPresentationThermalPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_ARPresentation_Eye
|| __DATA.__objc_data _OBJC_METACLASS_$_ARProbeFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_ARQAHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_ARQuickLookPreviewItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRaycastQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRaycastResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRecordingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRecordingTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReferenceImage
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReferenceImageCachedError
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReferenceObject
|| __DATA.__objc_data _OBJC_METACLASS_$_ARRenderStats
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReplayConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReplayMovieDataWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReplayResultDataPublicTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReplayResultDataTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReplaySensor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReplaySensorPublic
|| __DATA.__objc_data _OBJC_METACLASS_$_ARReplayTimestampedData
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSCNCompositor
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSCNFaceGeometry
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSCNPlaneGeometry
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSCNVisualizationHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSKView
|| __DATA.__objc_data _OBJC_METACLASS_$_ARScreenImageCapturer
|| __DATA.__objc_data _OBJC_METACLASS_$_ARScreenRecorder
|| __DATA.__objc_data _OBJC_METACLASS_$_ARScreenRecording
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSegmentationSingleTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSegmentationTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSharedGPUDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSinglePassRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSkeleton
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSkeleton2D
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSkeleton3D
|| __DATA.__objc_data _OBJC_METACLASS_$_ARSkeletonDefinition
|| __DATA.__objc_data _OBJC_METACLASS_$_ARStarBoardPresentationView
|| __DATA.__objc_data _OBJC_METACLASS_$_ARStarBoardSceneComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_ARStarBoardSceneManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ARStarBoardViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_ARTrackedRaycast
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWorldMap
|| __DATA.__objc_data _OBJC_METACLASS_$_ARWorldTrackingParticipantAnchorData
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARConfiguration._videoFormat
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARImageDetectionTechnique._needsWorldTrackingPoseData
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARNeutralFaceGeometry._texCoordinatesVector
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARNeutralFaceGeometry._trianglesIndicesVector
|| __DATA.__objc_ivar _OBJC_IVAR_$_ARNeutralFaceGeometry._verticesVector
|| __DATA_CONST.__const _ARBackFacingSuperWideImageSensorExposureDurationUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingSuperWideImageSensorFrameRateUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingSuperWideImageSensorGeometridDistortionCorrectionEnabledDefaultsKey
|| __DATA_CONST.__const _ARBackFacingSuperWideImageSensorISOUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingSuperWideImageSensorResolutionUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingSuperWideImageSensorVideoBinnedUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingSuperWideImageSensorWhiteBalanceUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorAutoFocusRangeUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorAutoFocusUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorExposureDurationUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorFrameRateUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorISOUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorLensPositionUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorResolutionUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorSmoothAutoFocusUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorVideoBinnedUserDefaultsKey
|| __DATA_CONST.__const _ARBackFacingWideImageSensorWhiteBalanceUserDefaultsKey
|| __DATA_CONST.__const _ARBlendShapeLocationBrowDownLeft
|| __DATA_CONST.__const _ARBlendShapeLocationBrowDownRight
|| __DATA_CONST.__const _ARBlendShapeLocationBrowInnerUp
|| __DATA_CONST.__const _ARBlendShapeLocationBrowOuterUpLeft
|| __DATA_CONST.__const _ARBlendShapeLocationBrowOuterUpRight
|| __DATA_CONST.__const _ARBlendShapeLocationCheekPuff
|| __DATA_CONST.__const _ARBlendShapeLocationCheekSquintLeft
|| __DATA_CONST.__const _ARBlendShapeLocationCheekSquintRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeBlinkLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeBlinkRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookDownLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookDownRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookInLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookInRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookOutLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookOutRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookUpLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeLookUpRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeSquintLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeSquintRight
|| __DATA_CONST.__const _ARBlendShapeLocationEyeWideLeft
|| __DATA_CONST.__const _ARBlendShapeLocationEyeWideRight
|| __DATA_CONST.__const _ARBlendShapeLocationJawForward
|| __DATA_CONST.__const _ARBlendShapeLocationJawLeft
|| __DATA_CONST.__const _ARBlendShapeLocationJawOpen
|| __DATA_CONST.__const _ARBlendShapeLocationJawRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthClose
|| __DATA_CONST.__const _ARBlendShapeLocationMouthDimpleLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthDimpleRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthFrownLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthFrownRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthFunnel
|| __DATA_CONST.__const _ARBlendShapeLocationMouthLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthLowerDownLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthLowerDownRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthPressLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthPressRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthPucker
|| __DATA_CONST.__const _ARBlendShapeLocationMouthRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthRollLower
|| __DATA_CONST.__const _ARBlendShapeLocationMouthRollUpper
|| __DATA_CONST.__const _ARBlendShapeLocationMouthShrugLower
|| __DATA_CONST.__const _ARBlendShapeLocationMouthShrugUpper
|| __DATA_CONST.__const _ARBlendShapeLocationMouthSmileLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthSmileRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthStretchLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthStretchRight
|| __DATA_CONST.__const _ARBlendShapeLocationMouthUpperUpLeft
|| __DATA_CONST.__const _ARBlendShapeLocationMouthUpperUpRight
|| __DATA_CONST.__const _ARBlendShapeLocationNoseSneerLeft
|| __DATA_CONST.__const _ARBlendShapeLocationNoseSneerRight
|| __DATA_CONST.__const _ARBlendShapeLocationTongueOut
|| __DATA_CONST.__const _ARBodyTrackingFlipXCoordinates
|| __DATA_CONST.__const _ARBodyTrackingJointExtrapolationTimeLimitSeconds
|| __DATA_CONST.__const _ARBodyTrackingMultipleBodyAnchors
|| __DATA_CONST.__const _ARBodyTrackingUseANEfor2DJoints
|| __DATA_CONST.__const _ARDefaultRelocalizationTimeoutUserDefaultsKey
|| __DATA_CONST.__const _AREnvironmentTexturingMinimumProbeUpdateIntervalUserDefaultsKey
|| __DATA_CONST.__const _AREnvironmentTexturingWantsHDRUserDefaultsKey
|| __DATA_CONST.__const _ARErrorDomain
|| __DATA_CONST.__const _ARErrorItemsUserInfoKey
|| __DATA_CONST.__const _ARFaceTrackingImageSensorDepthDataFilteringUserDefaultsKey
|| __DATA_CONST.__const _ARFaceTrackingImageSensorFrameRateLowUserDefaultsKey
|| __DATA_CONST.__const _ARFaceTrackingImageSensorFrameRateLowestUserDefaultsKey
|| __DATA_CONST.__const _ARFaceTrackingImageSensorFrameRateNormalUserDefaultsKey
|| __DATA_CONST.__const _ARFaceTrackingImageSensorMirrorUserDefaultsKey
|| __DATA_CONST.__const _ARFaceTrackingImageSensorUsePreviousImageDataWhenDroppingDefaultsKey
|| __DATA_CONST.__const _ARFrontFacingImageSensorExposureDurationUserDefaultsKey
|| __DATA_CONST.__const _ARFrontFacingImageSensorFrameRateUserDefaultsKey
|| __DATA_CONST.__const _ARFrontFacingImageSensorISOUserDefaultsKey
|| __DATA_CONST.__const _ARFrontFacingImageSensorResolutionUserDefaultsKey
|| __DATA_CONST.__const _ARFrontFacingImageSensorVideoBinnedUserDefaultsKey
|| __DATA_CONST.__const _ARFrontFacingImageSensorWhiteBalanceUserDefaultsKey
|| __DATA_CONST.__const _ARImageCroppingTechniqueCroppedRect
|| __DATA_CONST.__const _ARImageDataDictionaryCMTimeKey
|| __DATA_CONST.__const _ARImageDataDictionaryCameraIntrinsicsKey
|| __DATA_CONST.__const _ARImageDataDictionaryExposureDurationKey
|| __DATA_CONST.__const _ARImageDataDictionaryTimestampKey
|| __DATA_CONST.__const _ARImageDetectionCustomAssetCatalogUserDefaultsKey
|| __DATA_CONST.__const _ARImageDetectionFixedPriorityProcessingQueueKey
|| __DATA_CONST.__const _ARImageDetectionPercentageThresholdKey
|| __DATA_CONST.__const _ARKitBuildVersionString
|| __DATA_CONST.__const _ARLeftBrowInner
|| __DATA_CONST.__const _ARLeftBrowMiddle
|| __DATA_CONST.__const _ARLeftBrowOuter
|| __DATA_CONST.__const _ARLeftEyeInnerCorner
|| __DATA_CONST.__const _ARLeftEyeLowerInner
|| __DATA_CONST.__const _ARLeftEyeLowerOuter
|| __DATA_CONST.__const _ARLeftEyeOuterCorner
|| __DATA_CONST.__const _ARLeftEyePupil
|| __DATA_CONST.__const _ARLeftEyeUpperInner
|| __DATA_CONST.__const _ARLeftEyeUpperOuter
|| __DATA_CONST.__const _ARLocationIntegrationSlamConfigurationName
|| __DATA_CONST.__const _ARMLImageDownScalingRegionOfInterest
|| __DATA_CONST.__const _ARMLImageDownScalingRotationOfResultTensorKey
|| __DATA_CONST.__const _ARMattingDepthDilationRadius
|| __DATA_CONST.__const _ARMattingDepthScale
|| __DATA_CONST.__const _ARMattingDisableSoftEdges
|| __DATA_CONST.__const _ARMattingEpsilon
|| __DATA_CONST.__const _ARMattingErosionRadius
|| __DATA_CONST.__const _ARMattingGuideDoubleMLResolutionForIPad
|| __DATA_CONST.__const _ARMattingUncertaintyRadius
|| __DATA_CONST.__const _ARMattingUseTemporalSmoothing
|| __DATA_CONST.__const _ARMeasureAppSlamConfigurationName
|| __DATA_CONST.__const _ARMotionSensorSampleRateUserDefaultsKey
|| __DATA_CONST.__const _ARMouthCenterLower
|| __DATA_CONST.__const _ARMouthCenterPhiltrum
|| __DATA_CONST.__const _ARMouthInnerDown
|| __DATA_CONST.__const _ARMouthInnerDownLeft
|| __DATA_CONST.__const _ARMouthInnerDownRight
|| __DATA_CONST.__const _ARMouthInnerUp
|| __DATA_CONST.__const _ARMouthInnerUpLeft
|| __DATA_CONST.__const _ARMouthInnerUpRight
|| __DATA_CONST.__const _ARMouthLeftCorner
|| __DATA_CONST.__const _ARMouthLeftDown1
|| __DATA_CONST.__const _ARMouthLeftDown2
|| __DATA_CONST.__const _ARMouthLeftPhiltrum
|| __DATA_CONST.__const _ARMouthLeftUp1
|| __DATA_CONST.__const _ARMouthLeftUp2
|| __DATA_CONST.__const _ARMouthRightCorner
|| __DATA_CONST.__const _ARMouthRightDown1
|| __DATA_CONST.__const _ARMouthRightDown2
|| __DATA_CONST.__const _ARMouthRightPhiltrum
|| __DATA_CONST.__const _ARMouthRightUp1
|| __DATA_CONST.__const _ARMouthRightUp2
|| __DATA_CONST.__const _ARMulticamModeEnabledUserDefaultKey
|| __DATA_CONST.__const _ARNoseAlaLeft1
|| __DATA_CONST.__const _ARNoseAlaLeft2
|| __DATA_CONST.__const _ARNoseAlaRight1
|| __DATA_CONST.__const _ARNoseAlaRight2
|| __DATA_CONST.__const _ARNoseBaseCenter
|| __DATA_CONST.__const _ARNoseBaseCenterLeft
|| __DATA_CONST.__const _ARNoseBaseCenterRight
|| __DATA_CONST.__const _ARNoseBaseLeft
|| __DATA_CONST.__const _ARNoseBaseRight
|| __DATA_CONST.__const _ARNoseRidge1
|| __DATA_CONST.__const _ARNoseRidge2
|| __DATA_CONST.__const _ARNoseRidgeRoot
|| __DATA_CONST.__const _ARNoseRidgeTip
|| __DATA_CONST.__const _ARObjectDetectionFixedPriorityProcessingQueueKey
|| __DATA_CONST.__const _ARObjectDetectionRegionProposalModel
|| __DATA_CONST.__const _ARObjectScanningSlamConfigurationName
|| __DATA_CONST.__const _ARPersonOcclusionParentTechniqueShouldDropFramesWhenBusy
|| __DATA_CONST.__const _ARPixelBufferBytesPerRow
|| __DATA_CONST.__const _ARPixelBufferData
|| __DATA_CONST.__const _ARPixelBufferFormat
|| __DATA_CONST.__const _ARPixelBufferHeight
|| __DATA_CONST.__const _ARPixelBufferWidth
|| __DATA_CONST.__const _ARPlaneEstimationEnableMLOnANEDevicesUserDefaultsKey
|| __DATA_CONST.__const _ARPlaneEstimationLineFeaturesAlwaysOnUserDefaultsKey
|| __DATA_CONST.__const _ARPlaneEstimationMinimumDetectionCountUserDefaultsKey
|| __DATA_CONST.__const _ARPlaneEstimationMinimumVergenceAngleUserDefaultsKey
|| __DATA_CONST.__const _ARPredictionStatsEnabled
|| __DATA_CONST.__const _ARPresentationAlignmentPeriod
|| __DATA_CONST.__const _ARPresentationBackFacingImageSensorFrameRateUserDefaultsKey
|| __DATA_CONST.__const _ARPresentationCACThresholdValue
|| __DATA_CONST.__const _ARPresentationCompositorForceDisabled
|| __DATA_CONST.__const _ARPresentationDisableRenderDecouplingKey
|| __DATA_CONST.__const _ARPresentationEnableCACKey
|| __DATA_CONST.__const _ARPresentationForceDisabled
|| __DATA_CONST.__const _ARPresentationForceDisplayMode
|| __DATA_CONST.__const _ARPresentationForceHeldModeSupported
|| __DATA_CONST.__const _ARPresentationForceWornModeSupported
|| __DATA_CONST.__const _ARPresentationFrameDropSoundEnabled
|| __DATA_CONST.__const _ARPresentationInitCustomCompositorQueue
|| __DATA_CONST.__const _ARPresentationMinVsyncsPerFrameKey
|| __DATA_CONST.__const _ARPresentationMinimumThermalNotificationHysterisisWindow
|| __DATA_CONST.__const _ARPresentationOverrideCACThreshold
|| __DATA_CONST.__const _ARPresentationPerQuadCAC
|| __DATA_CONST.__const _ARPresentationShowCACKey
|| __DATA_CONST.__const _ARPresentationShowDistortionKey
|| __DATA_CONST.__const _ARPresentationShowPerformanceHUD
|| __DATA_CONST.__const _ARPresentationSkipDistortionKey
|| __DATA_CONST.__const _ARPresentationSkipGammaCorrectionKey
|| __DATA_CONST.__const _ARPresentationSkipPositionalWarpKey
|| __DATA_CONST.__const _ARPresentationSkipStarBoardToggle
|| __DATA_CONST.__const _ARPresentationSkipVignetteKey
|| __DATA_CONST.__const _ARPresentationSkipWarpKey
|| __DATA_CONST.__const _ARPresentationTestRasterizationMaps
|| __DATA_CONST.__const _ARPresentationThermalMitigationEnabled
|| __DATA_CONST.__const _ARPresentationWornModeForceDisabled
|| __DATA_CONST.__const _ARQLAllowObjectScaling
|| __DATA_CONST.__const _ARQLCanonicalWebPageURL
|| __DATA_CONST.__const _ARRecordingFormatOverrideDefaultsKey
|| __DATA_CONST.__const _ARReferenceObjectArchiveExtension
|| __DATA_CONST.__const _ARReplaySensorCropFramesUserDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorDisplaySynchronizationMarkerDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorDisplaySynchronizationMarkerFrameCountDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorFilePathAdvanceFramesPerSecondMultiplierUserDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorFilePathAdvanceToFrameUserDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorFilePathNextFrameIndexUserDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorFramerateUserDefaultsKey
|| __DATA_CONST.__const _ARReplaySensorSynchronousModeUserDefaultsKey
|| __DATA_CONST.__const _ARRightBrowInner
|| __DATA_CONST.__const _ARRightBrowMiddle
|| __DATA_CONST.__const _ARRightBrowOuter
|| __DATA_CONST.__const _ARRightEyeInnerCorner
|| __DATA_CONST.__const _ARRightEyeLowerInner
|| __DATA_CONST.__const _ARRightEyeLowerOuter
|| __DATA_CONST.__const _ARRightEyeOuterCorner
|| __DATA_CONST.__const _ARRightEyePupil
|| __DATA_CONST.__const _ARRightEyeUpperInner
|| __DATA_CONST.__const _ARRightEyeUpperOuter
|| __DATA_CONST.__const _ARSCNViewAttemptRenderSynchronisationARFrame
|| __DATA_CONST.__const _ARSCNViewRendersCameraGrain
|| __DATA_CONST.__const _ARSCNViewRendersMotionBlur
|| __DATA_CONST.__const _ARScreenRecorderErrorDomain
|| __DATA_CONST.__const _ARSegmentationTechniqueForceSupportedUserDefaultsKey
|| __DATA_CONST.__const _ARSessionCameraPositionUserDefaultsKey
|| __DATA_CONST.__const _ARSessionFeaturePointAccumulationCount
|| __DATA_CONST.__const _ARSessionForceRecordingDefaultsKey
|| __DATA_CONST.__const _ARSessionMirroredFrameOutputUserDefaultsKey
|| __DATA_CONST.__const _ARSessionQATracingEnabledUserDefaultsKey
|| __DATA_CONST.__const _ARSessionQATracingForceQuitAppUserDefaultsKey
|| __DATA_CONST.__const _ARSessionQATracingFramesLabelOffsetUserDefaultsKey
|| __DATA_CONST.__const _ARSessionQATracingScreenCustomScreenRecorderSTAR
|| __DATA_CONST.__const _ARSessionQATracingScreenRecordingDefaultsKey
|| __DATA_CONST.__const _ARSessionRecordingFilePathDefaultsKey
|| __DATA_CONST.__const _ARSessionReplayFilePathManuallyUserDefaultsKey
|| __DATA_CONST.__const _ARSessionReplayFilePathUserDefaultsKey
|| __DATA_CONST.__const _ARSessionUseIOKitUserDefaultsKey
|| __DATA_CONST.__const _ARSkeletonJointNameHead
|| __DATA_CONST.__const _ARSkeletonJointNameLeftFoot
|| __DATA_CONST.__const _ARSkeletonJointNameLeftHand
|| __DATA_CONST.__const _ARSkeletonJointNameLeftShoulder
|| __DATA_CONST.__const _ARSkeletonJointNameRightFoot
|| __DATA_CONST.__const _ARSkeletonJointNameRightHand
|| __DATA_CONST.__const _ARSkeletonJointNameRightShoulder
|| __DATA_CONST.__const _ARSkeletonJointNameRoot
|| __DATA_CONST.__const _ARTestUserDefaultsKey
|| __DATA_CONST.__const _ARUseDispatchWorkloopDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingBackSuperWideCalibrationParametersUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingBackWideCalibrationParametersUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingCollaborativeMappingStatisticsDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingDeviceModelUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingDisableR1UserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingForceDisableFrontCameraDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingIMUCalibrationParametersUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingLineFeaturesAlwaysOnUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingLineFeaturesUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingMinVergenceAngleUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingParticipantAnchorsUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingPoseGraphUpdatesUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingResultLatencyUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingSLAMConfigurationUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingSimluateHWFeatureDetectionDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingUseFixedIntrinsicsUserDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingUseSuperWideDefaultsKey
|| __DATA_CONST.__const _ARWorldTrackingVisionDataUserDefaultsKey
|| __DATA_CONST.__const _AUTO_FOCUS_ENABLED
|| __DATA_CONST.__const _AVMetadataIdentifierCVPixelBufferAttachment
|| __DATA_CONST.__const _AVMetadataIdentifierIMUDataType
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARAccelerometerData
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARCustomData
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARDeviceOrientationData
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARDeviceString
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARGyroscopeData
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARImageData
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARKitVersion
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeAROSVersion
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARRecordedResultClasses
|| __DATA_CONST.__const _AVMetadataIdentifierQuickTimeARSensorDataTypeInformation
|| __DATA_CONST.__const _AVMetadataIdentifierRawAccelerometerReadings
|| __DATA_CONST.__const _AVMetadataIdentifierRawDeviceMotionReadings
|| __DATA_CONST.__const _AVMetadataIdentifierRawGyroscopeReadings
|| __DATA_CONST.__const _AVMetadataIdentifierRawLocationReadings
|| __DATA_CONST.__const _AVMetadataIdentifierRecordingEnvironment
|| __DATA_CONST.__const _AVMetadataIdentifierStarData
|| __DATA_CONST.__const _AVMetadataIdentifierStreamDataType
|| __DATA_CONST.__const _AVStreamIdentifierQuickTimeARAudio
|| __DATA_CONST.__const _AVStreamIdentifierQuickTimeARImageData
|| __DATA_CONST.__const _BTC_AUTOMATIC_SCALE_ESTIMATION
|| __DATA_CONST.__const _CVPixelBufferAttachmentAccelerometerTemperatureKey
|| __DATA_CONST.__const _FRAME_SEMANTICS_KEY
|| __DATA_CONST.__const _FTC_MAX_TRACKED_FACES_KEY
|| __DATA_CONST.__const _FTC_WORLD_TRACKING_ENABLED_KEY
|| __DATA_CONST.__const _ITC_MAX_NUMBER_OF_TRACKING_IMAGES_KEY
|| __DATA_CONST.__const _MAX_NUMBER_OF_DETECTION_IMAGES_KEY
|| __DATA_CONST.__const _MAX_NUMBER_OF_DETECTION_OBJECTS_KEY
|| __DATA_CONST.__const _MAX_NUMBER_OF_TRACKED_IMAGES_KEY
|| __DATA_CONST.__const _RAYCAST_DETAILS_KEY
|| __DATA_CONST.__const _RAYCAST_PER_SESSION_KEY
|| __DATA_CONST.__const _RENDER_ENGINE_KEY
|| __DATA_CONST.__const _RawAccelerometerIdentifierValue
|| __DATA_CONST.__const _RawDeviceMotionIdentifierValue
|| __DATA_CONST.__const _RawGyroscopeIdentifierValue
|| __DATA_CONST.__const _RawLocationIdentifierValue
|| __DATA_CONST.__const _SCENE_UNDERSTANDING_NUMBER_OF_DETECTED_PLANES
|| __DATA_CONST.__const _SCENE_UNDERSTANDING_PLANES_CLASS
|| __DATA_CONST.__const _SESSION_DID_PAUSE_DARWIN_NOTIFICATION
|| __DATA_CONST.__const _SESSION_DID_RUN_DARWIN_NOTIFICATION
|| __DATA_CONST.__const _SESSION_DID_SWITCH_TO_WORN_MODE
|| __DATA_CONST.__const _SESSION_DURATION_KEY
|| __DATA_CONST.__const _StarConfigKey
|| __DATA_CONST.__const _StarModeKey
|| __DATA_CONST.__const _THROTTLE_STATE_KEY
|| __DATA_CONST.__const _WORLD_MAP_LOAD_GIVEUP_TIME
|| __DATA_CONST.__const _WORLD_MAP_LOAD_SUCCESS_TIME
|| __DATA_CONST.__const _WORLD_MAP_SAVE_MAPPING_STATUS
|| __DATA_CONST.__const _WTC_COLLABORATIVE_SESSION_ENABLED_KEY
|| __DATA_CONST.__const _WTC_COLLABORATIVE_SESSION_MAX_NUMBER_OF_USERS_KEY
|| __DATA_CONST.__const _WTC_ENVIRONMENT_TEXTURING_HDR_KEY
|| __DATA_CONST.__const _WTC_ENVIRONMENT_TEXTURING_KEY
|| __DATA_CONST.__const _WTC_USER_FACE_TRACKING_ENABLED_KEY
|| __DATA_DIRTY.__common __initialRaycastResults
|| __DATA_DIRTY.__common __resultsHistory
|| __DATA_DIRTY.__common __targetRaycastResultUpdates
|| __DATA_DIRTY.__common __trackedRaycastSemaphore
|| __DATA_DIRTY.__common __trackedRaycasts
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AR2DSkeletonDetectionResults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARAccelerometerData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARAudioData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARBKSAccelerometer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARCamera
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARCameraAlignmentData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARDeviceOrientationData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARDeviceOrientationSensor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARDirectionalLightEstimate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARDisplayLink
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AREnvironmentTexturingTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARExposureLightEstimationTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARFaceTrackingConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARFaceTrackingTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARFilteredMLDepthData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARFrame
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARFrameContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARGyroscopeData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARHitTestResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARIOMotionSensor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARImageBasedTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARImageData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARImageDetectionResultData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARImageDetectionTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARImageNoiseTexture
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARImageSensor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARImageSensorSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARKitUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARLightEstimate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARLightEstimationData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARLocationData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARLocationSensor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARMLDepthData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARMattingImageMetaData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARMotionSensor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARNoiseParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARODTHandleManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARObjectDetectionTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AROrientationTrackingConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARParentImageSensor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARParentImageSensorSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARParentTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARPlaneData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARPlaneEstimationTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARPresentation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARPresentationThermalPolicyManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARProximityCollaborationData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARProximityData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARProximitySensor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARQATracer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARRawSceneUnderstandingData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARRecordingTechniquePublic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARRenderSyncScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARRenderSyncSchedulerBlockWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARRollingNumberSeries
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARRunLoop
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARSCNView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARSegmentationData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARSessionMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARStarData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARTechniqueGatherContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARTechniqueParallelGatherContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARTechniqueSequentialGatherContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARTimeKeyedList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARTrackedRaycastPostProcessor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARVideoFormat
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARWorldAlignmentData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARWorldAlignmentTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARWorldTrackingConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARWorldTrackingErrorData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARWorldTrackingFeaturePointData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARWorldTrackingOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARWorldTrackingPoseData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARWorldTrackingReferenceAnchorData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARWorldTrackingState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARWorldTrackingTechnique
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__ARDisplayLinkHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__ARSessionMetricsDefaultReporter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AR2DSkeletonDetectionResults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARAccelerometerData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARAudioData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARBKSAccelerometer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARCamera
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARCameraAlignmentData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARDeviceOrientationData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARDeviceOrientationSensor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARDirectionalLightEstimate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARDisplayLink
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AREnvironmentTexturingTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARExposureLightEstimationTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARFaceTrackingConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARFaceTrackingTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARFilteredMLDepthData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARFrame
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARFrameContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARGyroscopeData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARHitTestResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARIOMotionSensor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARImageBasedTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARImageData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARImageDetectionResultData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARImageDetectionTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARImageNoiseTexture
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARImageSensor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARImageSensorSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARKitUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARLightEstimate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARLightEstimationData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARLocationData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARLocationSensor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARMLDepthData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARMattingImageMetaData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARMotionSensor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARNoiseParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARODTHandleManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARObjectDetectionTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AROrientationTrackingConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARParentImageSensor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARParentImageSensorSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARParentTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARPlaneData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARPlaneEstimationTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARPresentation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARPresentationThermalPolicyManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARProximityCollaborationData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARProximityData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARProximitySensor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARQATracer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARRawSceneUnderstandingData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARRecordingTechniquePublic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARRenderSyncScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARRenderSyncSchedulerBlockWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARRollingNumberSeries
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARRunLoop
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARSCNView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARSegmentationData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARSessionMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARStarData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARTechniqueGatherContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARTechniqueParallelGatherContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARTechniqueSequentialGatherContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARTimeKeyedList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARTrackedRaycastPostProcessor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARVideoFormat
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARWorldAlignmentData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARWorldAlignmentTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARWorldTrackingConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARWorldTrackingErrorData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARWorldTrackingFeaturePointData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARWorldTrackingOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARWorldTrackingPoseData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARWorldTrackingReferenceAnchorData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARWorldTrackingState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARWorldTrackingTechnique
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__ARDisplayLinkHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__ARSessionMetricsDefaultReporter
|| __TEXT.__const _ARErrorCodeFaceTrackingFailed
|| __TEXT.__const _ARErrorCodeImageDetectionQualityEstimationFailed
|| __TEXT.__const _ARErrorCodePhotoLibraryAccessUnauthorized
|| __TEXT.__const _ARErrorCodeRecordingFailed
|| __TEXT.__const _ARErrorCodeTechniqueFailed
|| __TEXT.__const _ARErrorCodeUnsupportedCaptureSessionConfiguration
|| __TEXT.__const _ARErrorCodeUnsupportedSensorData
|| __TEXT.__const _ARErrorEspressoModelLoadingFailed
|| __TEXT.__const _ARFLDefaultRubberbandFactor
|| __TEXT.__const _ARFLSpringParametersBouncy
|| __TEXT.__const _ARFLSpringParametersTight
|| __TEXT.__const _ARKitVersionNumber
|| __TEXT.__const _ARKitVersionString
|| __TEXT.__const _ARPlaneDetectionAllWithoutAnchors
|| __TEXT.__const _ARPlaneDetectionOptionGridExtent
|| __TEXT.__const _ARPlaneDetectionOptionWorldAligned
|| __TEXT.__const _ARRigDependencyTable
|| __TEXT.__const _ARRigDependencyTableColCount
|| __TEXT.__const _ARRigDependencyTableRowCount
|| __TEXT.__const _ARRigInputJointsCount
|| __TEXT.__const _ARRigInputJointsDependencies
|| __TEXT.__const _ARRigOutputJointsCount
|| __TEXT.__const _ARSCNCompositorOccluderBitMask
|| __TEXT.__const _ARSCNDebugOptionShowFeaturePoints
|| __TEXT.__const _ARSCNDebugOptionShowOcclusionGeometry
|| __TEXT.__const _ARSCNDebugOptionShowWorldOrigin
|| __TEXT.__const _ARTrackedRaycastOrientationChangeAllowanceInDegreesPerSecond
|| __TEXT.__const _ARTrackedRaycastResultSmoothingOrientationToleranceInRadians
|| __TEXT.__const _ARTrackedRaycastResultSmoothingPositionToleranceInMeters
|| __TEXT.__const _ARTrackedRaycastUpdateFramerate
|| __TEXT.__const _ARWorldTrackingResultLatencyDefault
|| __TEXT.__const _COMPOSITE_CA_SLOP_TIME
|| __TEXT.__const _COMPOSITE_SCHEDULE_SLOP_TIME
|| __TEXT.__const _COMPOSITE_SLOP_TIME
|| __TEXT.__const _COMPOSITE_STD_DEV_MULTIPLIER
|| __TEXT.__const _CONTROLLER_LONGPRESS_THRESHOLD
|| __TEXT.__const _MAXIMUM_HELD_REFRESH_RATE
|| __TEXT.__const _MAX_FRAME_PACING_INTERVAL
|| __TEXT.__const _ar_faceLeftEyeTriangleCount
|| __TEXT.__const _ar_faceMouthTriangleCount
|| __TEXT.__const _ar_faceRightEyeTriangleCount
|| __TEXT.__const _ar_faceTriangleIndicesLeftEye
|| __TEXT.__const _ar_faceTriangleIndicesMouth
|| __TEXT.__const _ar_faceTriangleIndicesRightEye
|| __TEXT.__const _kARCoachingAutoActivationDelay
|| __TEXT.__const _kARCoachingDeviceRenderParamsHorizontal
|| __TEXT.__const _kARCoachingDeviceRenderParamsVertical
|| __TEXT.__const _kARCoachingDotsRenderParamsHorizontal
|| __TEXT.__const _kARCoachingDotsRenderParamsVertical
|| __TEXT.__const _kARCoachingFadeInDuration
|| __TEXT.__const _kARCoachingFadeOutDuration
|| __TEXT.__const _kARCoachingMinimumActiveTime
|| __TEXT.__const _kARCoachingVerticalPlaneYOffset
|| __TEXT.__const _squash
|| __TEXT.__text _ARAdjustIntrincisForMirroring
|| __TEXT.__text _ARAdjustIntrincisForOrientation
|| __TEXT.__text _ARAdjustIntrinsicsForViewportSize
|| __TEXT.__text _ARAnchorsForPoseGraphUpdates
|| __TEXT.__text _ARAnchorsFromAnchorsData
|| __TEXT.__text _ARAppleNeuralEngine
|| __TEXT.__text _ARC3DCircumcircleContainsPoint
|| __TEXT.__text _ARC3DCircumcircleContainsPoint_BROKEN
|| __TEXT.__text _ARC3DComputeLinesIntersection
|| __TEXT.__text _ARC3DComputeLinesIntersectionForPoints
|| __TEXT.__text _ARC3DEdgeCrossingSegment
|| __TEXT.__text _ARC3DLinkFromTriangleToTriangle
|| __TEXT.__text _ARC3DLinkFromTriangleWithEdge
|| __TEXT.__text _ARC3DLinkIndexFromTriangleToTriangle
|| __TEXT.__text _ARC3DLinkIndicesFromTriangleToTriangle
|| __TEXT.__text _ARC3DNeighborSharingVertex
|| __TEXT.__text _ARC3DNeighborSharingVertices
|| __TEXT.__text _ARC3DPointFallsOnTriangleEdge
|| __TEXT.__text _ARC3DPointFallsOnTriangleEdgeAndLinks
|| __TEXT.__text _ARC3DSegmentIntersectsSegment
|| __TEXT.__text _ARC3DShapeConnectedComponentTriangulate
|| __TEXT.__text _ARC3DShapeConnectedComponentTriangulatePseudopolygon
|| __TEXT.__text _ARC3DShapeTriangulationAddEdge
|| __TEXT.__text _ARC3DShapeTriangulationAddPoint
|| __TEXT.__text _ARC3DShapeTriangulationCheckConsistency
|| __TEXT.__text _ARC3DShapeTriangulationClean
|| __TEXT.__text _ARC3DShapeTriangulationGetNewTriangle
|| __TEXT.__text _ARC3DShapeTriangulationInit
|| __TEXT.__text _ARC3DShapeTriangulationListCreate
|| __TEXT.__text _ARC3DShapeTriangulationListDestroy
|| __TEXT.__text _ARC3DShapeTriangulationListInsert
|| __TEXT.__text _ARC3DShapeTriangulationResolveSwaps
|| __TEXT.__text _ARC3DShapeTriangulationStackCreate
|| __TEXT.__text _ARC3DShapeTriangulationStackDestroy
|| __TEXT.__text _ARC3DShapeTriangulationStackPop
|| __TEXT.__text _ARC3DShapeTriangulationStackPush
|| __TEXT.__text _ARC3DShapeTriangulationTriangleArea
|| __TEXT.__text _ARC3DShapeTriangulationTriangleContainingPoint
|| __TEXT.__text _ARC3DShapeTriangulationTriangleContainingVertex
|| __TEXT.__text _ARC3DShapeTriangulationTriangleCrossesSegment
|| __TEXT.__text _ARC3DShapeTriangulationTriangleMark
|| __TEXT.__text _ARC3DShapeTriangulationTriangleSplitInside
|| __TEXT.__text _ARC3DShapeTriangulationTriangleSplitOnEdge
|| __TEXT.__text _ARC3DVertexNotSharedByTriangles
|| __TEXT.__text _ARCCT2RGB
|| __TEXT.__text _ARCGRectRotate
|| __TEXT.__text _ARCameraFieldOfViewFromIntrinsics
|| __TEXT.__text _ARCameraImageToViewTransform
|| __TEXT.__text _ARCameraToDisplayRotation
|| __TEXT.__text _ARCameraToWorldTransformFromCMRotationMatrix
|| __TEXT.__text _ARCoachingDeviceRenderParamsLerp
|| __TEXT.__text _ARCoachingDotsRenderParamsLerp
|| __TEXT.__text _ARCoachingGlyphPerspectiveCenter
|| __TEXT.__text _ARCoachingGlyphPerspectiveEye
|| __TEXT.__text _ARCoachingLayoutScalar
|| __TEXT.__text _ARConvertTicksToSeconds
|| __TEXT.__text _ARCoreMediaRGBFaceTrackingEnabled
|| __TEXT.__text _ARCorrectCVPixelBufferOrientation
|| __TEXT.__text _ARCreateBodyPoseEstimationEvaluation
|| __TEXT.__text _ARCreateDownScaledGrayscaleImageAndMask
|| __TEXT.__text _ARCreateFixedPriorityDispatchQueue
|| __TEXT.__text _ARCreateFixedPriorityDispatchQueueWithQOS
|| __TEXT.__text _ARCreateFixedPriorityMultiThreadedDispatchQueue
|| __TEXT.__text _ARCreateNonFixedPriorityDispatchQueue
|| __TEXT.__text _ARCreatePixelBufferFromCGImage
|| __TEXT.__text _ARCreatePixelBufferWithPaddingToFillMinimumDimension
|| __TEXT.__text _ARCreateSynchronizationMarker
|| __TEXT.__text _ARCreateTexture
|| __TEXT.__text _ARCubemapSimilarity
|| __TEXT.__text _ARDepth32BitsBufferToBGRA
|| __TEXT.__text _ARDepth32BitsBufferToBGRAWithScaling
|| __TEXT.__text _ARDepthRepresentationDictionary
|| __TEXT.__text _ARDeviceClass
|| __TEXT.__text _ARDeviceHMESupported
|| __TEXT.__text _ARDeviceHasHomeButton
|| __TEXT.__text _ARDeviceIsiPad
|| __TEXT.__text _ARDeviceName
|| __TEXT.__text _ARDeviceRequiresFrameTrendControllerWorkaround
|| __TEXT.__text _ARDeviceString
|| __TEXT.__text _ARDeviceSupported
|| __TEXT.__text _ARDeviceSupportsMulticamMode
|| __TEXT.__text _ARDeviceSupportsSceneLuminanceEstimation
|| __TEXT.__text _ARDeviceSupportsSuperWideCamera
|| __TEXT.__text _ARDictionaryFromAnchors
|| __TEXT.__text _ARDispatchAfterLeewayForTimeInterval
|| __TEXT.__text _ARDisplayCenterTransformForCaptureDevicePosition
|| __TEXT.__text _AREarthMoversDistance
|| __TEXT.__text _AREqualTransforms
|| __TEXT.__text _ARErrorWithCodeAndUserInfo
|| __TEXT.__text _AREstimatedSceneLuminanceForCamera
|| __TEXT.__text _AREulerAnglesFromMatrix
|| __TEXT.__text _ARFLCompoundSpringIsStable
|| __TEXT.__text _ARFLCompoundSpringMake
|| __TEXT.__text _ARFLCompoundSpringMakeWithDampingRatioResponse
|| __TEXT.__text _ARFLCompoundSpringSetAnchorImmediately
|| __TEXT.__text _ARFLCompoundSpringSetAnchorWithIntermediatePositionAndResponse
|| __TEXT.__text _ARFLCompoundSpringSetAnchorWithResponse
|| __TEXT.__text _ARFLCompoundSpringSetDampingImmediately
|| __TEXT.__text _ARFLCompoundSpringSetDampingRatioImmediately
|| __TEXT.__text _ARFLCompoundSpringSetDampingRatioSmoothly
|| __TEXT.__text _ARFLCompoundSpringSetDampingWithResponse
|| __TEXT.__text _ARFLCompoundSpringSetResponseImmediately
|| __TEXT.__text _ARFLCompoundSpringSetResponseSmoothly
|| __TEXT.__text _ARFLCompoundSpringSetStiffnessImmediately
|| __TEXT.__text _ARFLCompoundSpringSetStiffnessWithResponse
|| __TEXT.__text _ARFLCompoundSpringStep
|| __TEXT.__text _ARFLDeceleratedRestPosition
|| __TEXT.__text _ARFLInverseRubberbandValue
|| __TEXT.__text _ARFLRubberbandValue
|| __TEXT.__text _ARFLSimpleSpringIsStable
|| __TEXT.__text _ARFLSimpleSpringMake
|| __TEXT.__text _ARFLSimpleSpringMakeWithDampingRatioResponse
|| __TEXT.__text _ARFLSimpleSpringSetDampingRatioResponse
|| __TEXT.__text _ARFLSimpleSpringStep
|| __TEXT.__text _ARFLSpringConvertDampingRatioResponseToStiffnessDamping
|| __TEXT.__text _ARFLSpringConvertMassStiffnessDampingToDampingRatioResponse
|| __TEXT.__text _ARFLSpringConvertMassStiffnessDampingToStiffnessDamping
|| __TEXT.__text _ARFLSpringConvertStiffnessDampingToDampingRatioResponse
|| __TEXT.__text _ARFLSpringParametersMake
|| __TEXT.__text _ARFaceLandmarkDataFromLabeledFacePosition
|| __TEXT.__text _ARFaceTrackingDevice
|| __TEXT.__text _ARFilterFaceTrackingPayload
|| __TEXT.__text _ARFrontFacingCameraFlip
|| __TEXT.__text _ARFrontWideCameraTransformFromBackWideAngleCameraTransform
|| __TEXT.__text _ARFrontWideCameraTransformFromBackWideAngleCameraTransformWithZFlip
|| __TEXT.__text _ARGetCV3DCameraLensDistortionModelFromLensType
|| __TEXT.__text _ARGetIntrinsicsFromCalibrationDictionary
|| __TEXT.__text _ARGetLensTypeFromCalibrationDictionary
|| __TEXT.__text _ARGetRadialDistortionFromCalibrationDictionary
|| __TEXT.__text _ARGetStreamDataTypeFromARImageData
|| __TEXT.__text _ARGetTangentialDistortionFromCalibrationDictionary
|| __TEXT.__text _ARHasH10
|| __TEXT.__text _ARIMUtoCameraCoordinateTransform
|| __TEXT.__text _ARImageContextFromImageData
|| __TEXT.__text _ARInnerScaleFromMatrix
|| __TEXT.__text _ARIntrinsicsFromDeviceFormat
|| __TEXT.__text _ARIntrinsicsFromTangent
|| __TEXT.__text _ARIsAirPlaneModeEnabled
|| __TEXT.__text _ARKitBundle
|| __TEXT.__text _ARLinkedOnOrAfterEmet
|| __TEXT.__text _ARLinkedOnOrAfterPeace
|| __TEXT.__text _ARLinkedOnOrAfterPeaceE
|| __TEXT.__text _ARLinkedOnOrAfterYukon
|| __TEXT.__text _ARMLModelAddANEVersion
|| __TEXT.__text _ARMakeSRT
|| __TEXT.__text _ARMapExposureOffset
|| __TEXT.__text _ARMapLightIntensity
|| __TEXT.__text _ARMatrix3x3CopyValues
|| __TEXT.__text _ARMatrix3x3Description
|| __TEXT.__text _ARMatrix3x3FromArray
|| __TEXT.__text _ARMatrix3x3FromColumnMajorFlatArray
|| __TEXT.__text _ARMatrix3x3FromMatrix4x4
|| __TEXT.__text _ARMatrix3x3FromNSData
|| __TEXT.__text _ARMatrix3x3MakeColumnMajorTransform
|| __TEXT.__text _ARMatrix3x3MakeRowMajorTransform
|| __TEXT.__text _ARMatrix3x3MatlabDescription
|| __TEXT.__text _ARMatrix3x3RowMajorArray
|| __TEXT.__text _ARMatrix3x3ToColumnMajorFlatArray
|| __TEXT.__text _ARMatrix4x3FromNSData
|| __TEXT.__text _ARMatrix4x4ColumnMajorCopyValues
|| __TEXT.__text _ARMatrix4x4ColumnMajorRotationAndTranslation
|| __TEXT.__text _ARMatrix4x4CopyValues
|| __TEXT.__text _ARMatrix4x4Description
|| __TEXT.__text _ARMatrix4x4Dictionary
|| __TEXT.__text _ARMatrix4x4DoubleToFloat
|| __TEXT.__text _ARMatrix4x4FloatToDouble
|| __TEXT.__text _ARMatrix4x4FromCMRotationMatrix
|| __TEXT.__text _ARMatrix4x4FromDictionary
|| __TEXT.__text _ARMatrix4x4FromNSData
|| __TEXT.__text _ARMatrix4x4FromRotationAndTranslation
|| __TEXT.__text _ARMatrix4x4MakeColumnMajorTransform
|| __TEXT.__text _ARMatrix4x4MakeRowMajorTransform
|| __TEXT.__text _ARMatrix4x4MatlabDescription
|| __TEXT.__text _ARMatrix4x4MirrorX
|| __TEXT.__text _ARMatrix4x4RowMajorRotationAndTranslation
|| __TEXT.__text _ARMatrixFromScale
|| __TEXT.__text _ARMatrixMakeFrustum
|| __TEXT.__text _ARMatrixMakePerspective
|| __TEXT.__text _ARMatrixPerspectiveFlipZ
|| __TEXT.__text _ARNeutralBodySkeleton3DLocalTransforms
|| __TEXT.__text _ARNeutralBodySkeleton3DModelTransforms
|| __TEXT.__text _ARNormalizedTransform
|| __TEXT.__text _AROSTypeToString
|| __TEXT.__text _AROSVersionString
|| __TEXT.__text _ARParseAndAddCalibrationParameters
|| __TEXT.__text _ARParseAndAddCameraCalibrationParameters
|| __TEXT.__text _ARParseAndAddImuCalibrationParameters
|| __TEXT.__text _ARPearlCameraSupported
|| __TEXT.__text _ARPixelBufferFromDictionaryRepresentation
|| __TEXT.__text _ARPixelBufferToDictionaryRepresentation
|| __TEXT.__text _ARPixelBufferWithCIImage
|| __TEXT.__text _ARPlaneClassificationForSceneUnderstandingLabel
|| __TEXT.__text _ARPowerUsageForPowerPressureLevel
|| __TEXT.__text _ARPowerUsageForThermalState
|| __TEXT.__text _ARPrimaryLightFromSphericalHarmonics
|| __TEXT.__text _ARProximitySensorSupported
|| __TEXT.__text _ARReadDepthBufferFromFile
|| __TEXT.__text _ARRecreatePixelBufferPoolOnConfigurationChanges
|| __TEXT.__text _ARReflectedLightMeterCalibrationConstantForDevice
|| __TEXT.__text _ARReleaseRigEvaluationData
|| __TEXT.__text _ARRenderingToVisionCameraCoordinateTransform
|| __TEXT.__text _ARRenderingToVisionCoordinateTransform
|| __TEXT.__text _ARReplaySensorClassForMovieURL
|| __TEXT.__text _ARResizeBufferWithNearestNeighbors
|| __TEXT.__text _ARRigInputJoints
|| __TEXT.__text _ARRigOutputJoints
|| __TEXT.__text _ARSavePixelBufferPGM
|| __TEXT.__text _ARSavePixelBufferPPM
|| __TEXT.__text _ARScalePixelBufferMaxDimensionToNewDimension
|| __TEXT.__text _ARScreenRecorderErrorCodeCreateDescription
|| __TEXT.__text _ARScreenRecorderErrorCreate
|| __TEXT.__text _ARSensorDataTypesToString
|| __TEXT.__text _ARSessionRunOptionsToString
|| __TEXT.__text _ARSphericalHarmonicsByApplyingRotation
|| __TEXT.__text _ARSphericalHarmonicsByFlippingZAxis
|| __TEXT.__text _ARSphericalHarmonicsDataWithAmbientLight
|| __TEXT.__text _ARSphericalHarmonicsDataWithCoefficients
|| __TEXT.__text _ARSphericalHarmonicsDotProduct
|| __TEXT.__text _ARSphericalHarmonicsWithDirection
|| __TEXT.__text _ARStreamIdentifierForDeviceTypeAndPosition
|| __TEXT.__text _ARSurfaceExtentTypeForPlaneDetectionType
|| __TEXT.__text _ARSurfaceOrientationForPlaneDetectionType
|| __TEXT.__text _ARTrackingStateReasonToString
|| __TEXT.__text _ARTrackingStateToString
|| __TEXT.__text _ARUnWrapFixedPointUnsigned13_3_OneComponent16Buffer_Depth32BitsBuffer
|| __TEXT.__text _ARUnWrapOneComponent16BufferDepth32BitsBuffer
|| __TEXT.__text _ARUserDefaultsForceDisableFrontCameraInWorldTracking
|| __TEXT.__text _ARUserDefaultsMulticamModeEnabled
|| __TEXT.__text _ARUserDefaultsShouldUseSuperWideForVIO
|| __TEXT.__text _ARVector2FromNSData
|| __TEXT.__text _ARVector3Description
|| __TEXT.__text _ARVector3FromArray
|| __TEXT.__text _ARVector3FromNSData
|| __TEXT.__text _ARVector3MatlabDescription
|| __TEXT.__text _ARVector3ScalarMultiplication
|| __TEXT.__text _ARVector4Description
|| __TEXT.__text _ARVector4FromArray
|| __TEXT.__text _ARVector4MatlabDescription
|| __TEXT.__text _ARVersionStringForIdentifier
|| __TEXT.__text _ARViewToCameraImageTransform
|| __TEXT.__text _ARVisionCameraToRenderingCoordinateTransform
|| __TEXT.__text _ARVisionDataParametersForWorldTrackingOptions
|| __TEXT.__text _ARVisionToRenderingCoordinateTransform
|| __TEXT.__text _ARVisionTransformFromWorldTransform
|| __TEXT.__text _ARWorldToCameraTransformFromCMRotationMatrix
|| __TEXT.__text _ARWorldTransformFromVisionTransform
|| __TEXT.__text _ARWrapCVPixelBufferVImage
|| __TEXT.__text _ARWrapDepth32BitsBufferOneComponent16Buffer
|| __TEXT.__text _ARWrapDepth32BitsBuffer_FixedPointUnsigned13_3_OneComponent16Buffer
|| __TEXT.__text _ARYawDifference
|| __TEXT.__text _AVCaptureDevicePositionFromStreamIdentifier
|| __TEXT.__text _AVCaptureDeviceTypeFromStreamIdentifier
|| __TEXT.__text _CV3DSLAMCameraVideoModeForResolutionAndDeviceType
|| __TEXT.__text _NSStringARPredictionStatsType
|| __TEXT.__text _NSStringFromARCollaborationData
|| __TEXT.__text _NSStringFromAREnvironmentTexturing
|| __TEXT.__text _NSStringFromARFrameSemantics
|| __TEXT.__text _NSStringFromARPlaneClassification
|| __TEXT.__text _NSStringFromARPlaneClassificationStatus
|| __TEXT.__text _NSStringFromARPlaneDetection
|| __TEXT.__text _NSStringFromARPresentationMode
|| __TEXT.__text _NSStringFromARWorldAlignment
|| __TEXT.__text _NSStringFromARWorldMappingStatus
|| __TEXT.__text _NSStringFromAttitudeReferenceFrame
|| __TEXT.__text _NSStringFromCV3DSLAMCalibrationReturn
|| __TEXT.__text _NSStringFromCV3DSurfaceDetectionExtentType
|| __TEXT.__text _NSStringFromCV3DSurfaceDetectionOrientation
|| __TEXT.__text _NSStringFromCV3DVIOReturn
|| __TEXT.__text _NSStringFromCV3DVIOSurfaceDetectionRuntimeConfiguration
|| __TEXT.__text _NSStringFromMagneticFieldCalibrationAccuracy
|| __TEXT.__text _NSStringFromSLAMCMDataType
|| __TEXT.__text _NSStringFromSceneUnderstandingLabel
|| __TEXT.__text _NSStringFromUIInterfaceOrientation
|| __TEXT.__text _TimerCallback
|| __TEXT.__text __ARFLSimpleSpringFromCompoundSpring
|| __TEXT.__text __Z10createUUIDv
|| __TEXT.__text __Z10homogenizeRKDv2_f
|| __TEXT.__text __Z10homogenizeRKDv3_f
|| __TEXT.__text __Z10homogenizeRKN3cva6MatrixIfLj2ELj1ELb0EEE
|| __TEXT.__text __Z10homogenizeRKN3cva6MatrixIfLj3ELj1ELb0EEE
|| __TEXT.__text __Z12dehomogenizeRKDv3_f
|| __TEXT.__text __Z12dehomogenizeRKDv4_f
|| __TEXT.__text __Z12dehomogenizeRKN3cva6MatrixIfLj3ELj1ELb0EEE
|| __TEXT.__text __Z12dehomogenizeRKN3cva6MatrixIfLj4ELj1ELb0EEE
|| __TEXT.__text __Z13createCubemapm
|| __TEXT.__text __Z14MakeMatrix3x4fffffffffffff
|| __TEXT.__text __Z16hartleyNormalizeRKNSt3__15arrayIN3cva6MatrixIfLj3ELj1ELb0EEELm4EEERS4_RNS2_IfLj3ELj3ELb0EEE
|| __TEXT.__text __Z17computeHomographyRKNSt3__15arrayIN3cva6MatrixIfLj3ELj1ELb0EEELm4EEES6_RNS2_IfLj3ELj3ELb0EEE
|| __TEXT.__text __Z18homographySquareToRKNSt3__15arrayIN3cva6MatrixIfLj3ELj1ELb0EEELm4EEE
|| __TEXT.__text __Z18isBoxInViewFrustumRK13simd_float4x4RKDv3_fS1_RK13simd_float3x3ff
|| __TEXT.__text __Z21ARCVAMatrixFromMatrix13simd_float3x3
|| __TEXT.__text __Z21ARCVAMatrixFromMatrix13simd_float4x4
|| __TEXT.__text __Z21ARMatrixFromCVAMatrixRKN3cva6MatrixIfLj3ELj3ELb0EEE
|| __TEXT.__text __Z21ARMatrixFromCVAMatrixRKN3cva6MatrixIfLj4ELj4ELb0EEE
|| __TEXT.__text __Z21VIOPoseResultCallbackPvdP10__CVBufferPKdS3_20CV3DVIOTrackingStatePK14__CFDictionary
|| __TEXT.__text __Z22VIOErrorResultCallbackPvd12CV3DVIOErrorPK14__CFDictionary
|| __TEXT.__text __Z26ARSurfaceDetectionCallbackPvdP26CV3DSurfaceDetectionResult
|| __TEXT.__text __Z27ARCollaborationDataCallbackPv18CV3DSLAMCMDataTypePK8__CFDataPKv
|| __TEXT.__text __Z27AsynchronousHitTestCallbackPvP18CV3DHitTestResults
|| __TEXT.__text __Z28ARSceneUnderstandingCallbackPvdP28CV3DSceneUnderstandingResult
|| __TEXT.__text __Z31ARPixelBufferConvertYCbCrToARGBP10__CVBufferS0_
|| __TEXT.__text __Z32randomBoxPointInWorldCoordinatesRK13simd_float4x4RKDv3_f
|| __TEXT.__text __Z34randomPlanePointInWorldCoordinatesRK15ARTexturedPlane
|| __TEXT.__text __Z5roundRKN3cva6MatrixIfLj2ELj1ELb0EEE
|| __TEXT.__text __Z5roundRKN3cva6MatrixIfLj3ELj1ELb0EEE
|| __TEXT.__text __Z6toUUIDPK8__CFUUID
|| __TEXT.__text __Z7convertPK26CV3DSurfaceDetectionResult
|| __TEXT.__text __Z7convertRK13simd_float3x3
|| __TEXT.__text __Z7convertRK13simd_float4x4
|| __TEXT.__text __Z7convertRK15ARTexturedPlane
|| __TEXT.__text __Z7convertRK25CV3DSurfaceDetectionPlane
|| __TEXT.__text __Z7convertRKDv2_f
|| __TEXT.__text __Z7convertRKDv3_f
|| __TEXT.__text __Z7convertRKN3cva6MatrixIfLj3ELj3ELb0EEE
|| __TEXT.__text __ZN10thirdparty10quadprogpp12print_matrixEPKcRKNS0_6MatrixIdEEii
|| __TEXT.__text __ZN10thirdparty10quadprogpp14add_constraintERNS0_6MatrixIdEES3_RNS0_6VectorIdEERiRd
|| __TEXT.__text __ZN10thirdparty10quadprogpp14cholesky_solveERKNS0_6MatrixIdEERNS0_6VectorIdEERKS6_
|| __TEXT.__text __ZN10thirdparty10quadprogpp14solve_quadprogERNS0_6MatrixIdEERNS0_6VectorIdEERKS2_RKS5_S8_SA_S6_
|| __TEXT.__text __ZN10thirdparty10quadprogpp17delete_constraintERNS0_6MatrixIdEES3_RNS0_6VectorIiEERNS4_IdEEiiRii
|| __TEXT.__text __ZN10thirdparty10quadprogpp22cholesky_decompositionERNS0_6MatrixIdEE
|| __TEXT.__text __ZN10thirdparty10quadprogpp3seqEjj
|| __TEXT.__text __ZN10thirdparty10quadprogpp9singletonEj
|| __TEXT.__text __ZN5arkit10loadParamsE22ARNoiseModelIdentifierRNSt3__16vectorIfNS1_9allocatorIfEEEERNS2_IS5_NS3_IS5_EEEERNS2_IS8_NS3_IS8_EEEESC_S6_
|| __TEXT.__text __ZN5arkit11invgaussianEff
|| __TEXT.__text __ZN5arkit11normalizeL1ERKNSt3__16vectorIfNS0_9allocatorIfEEEE
|| __TEXT.__text __ZN5arkit11wrapRawDataEPKvm
|| __TEXT.__text __ZN5arkit12ChromaFilter6filterERKNS_12ImageViewYUVERKNSt3__16vectorINS_8LandmarkENS4_9allocatorIS6_EEEE
|| __TEXT.__text __ZN5arkit12ChromaFilter7uvl2indERKN3cva6MatrixIfLj3ELj1ELb0EEE
|| __TEXT.__text __ZN5arkit12ChromaFilter7xyz2uvlERKN3cva6MatrixIfLj3ELj1ELb0EEERS3_
|| __TEXT.__text __ZN5arkit12ChromaFilter9ycbcr2xyzERKN3cva6MatrixIfLj4ELj1ELb0EEE
|| __TEXT.__text __ZN5arkit12KeyMapBufferIPKvNSt3__16vectorIhNS3_9allocatorIhEEEEE4findERKS2_PS7_
|| __TEXT.__text __ZN5arkit12KeyMapBufferIPKvNSt3__16vectorIhNS3_9allocatorIhEEEEE6insertERKS2_RKS7_
|| __TEXT.__text __ZN5arkit12KeyMapBufferIPKvNSt3__16vectorIhNS3_9allocatorIhEEEEEC1Em
|| __TEXT.__text __ZN5arkit12KeyMapBufferIPKvNSt3__16vectorIhNS3_9allocatorIhEEEEEC2Em
|| __TEXT.__text __ZN5arkit13mixtureKernelERKNSt3__16vectorIfNS0_9allocatorIfEEEES6_j
|| __TEXT.__text __ZN5arkit14RTFSPContainer12rtfspDefaultEv
|| __TEXT.__text __ZN5arkit14RTFSPContainer16loadRtfspDefaultEv
|| __TEXT.__text __ZN5arkit14RTFSPContainer9loadRtfspENSt3__18optionalIKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
|| __TEXT.__text __ZN5arkit14RTFSPContainer9loadRtfspERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZN5arkit14RTFSPContainer9loadRtfspERNSt3__113basic_istreamIcNS1_11char_traitsIcEEEE
|| __TEXT.__text __ZN5arkit14gaussianKernelEfi
|| __TEXT.__text __ZN5arkit14mixtureKernelsERKNSt3__16vectorINS1_IfNS0_9allocatorIfEEEENS2_IS4_EEEES8_j
|| __TEXT.__text __ZN5arkit14persondetector17nonMaxSuppressionERKNSt3__16vectorINS0_10PredictionENS1_9allocatorIS3_EEEEif
|| __TEXT.__text __ZN5arkit14persondetector3IOUE6CGRectS1_
|| __TEXT.__text __ZN5arkit14persondetector6offsetEiiiiii
|| __TEXT.__text __ZN5arkit14persondetector7sigmoidEf
|| __TEXT.__text __ZN5arkit15unflattenParamsERKNSt3__16vectorIfNS0_9allocatorIfEEEES6_S6_S6_RS4_RNS1_IS4_NS2_IS4_EEEERNS1_IS9_NS2_IS9_EEEESD_
|| __TEXT.__text __ZN5arkit16FaceTrackingDataC1ERKN3cva6MatrixIfLj3ELj3ELb0EEERKNSt3__16vectorINS_8LandmarkENS6_9allocatorIS8_EEEE
|| __TEXT.__text __ZN5arkit16FaceTrackingDataC2ERKN3cva6MatrixIfLj3ELj3ELb0EEERKNSt3__16vectorINS_8LandmarkENS6_9allocatorIS8_EEEE
|| __TEXT.__text __ZN5arkit18FaceLightOptimizer11solveLinearERKN3cva6MatrixIfLj0ELj1ELb0EEERKNS2_IfLj0ELj0ELb0EEEb
|| __TEXT.__text __ZN5arkit18FaceLightOptimizer14solveQuadraticERKN3cva6MatrixIfLj0ELj1ELb0EEERKNS2_IfLj0ELj0ELb0EEEbfb
|| __TEXT.__text __ZN5arkit18FaceLightOptimizer15penaltyFunctionERKN3cva6MatrixIfLj9ELj1ELb0EEERKNS2_IfLj0ELj1ELb0EEERKNS2_IfLj0ELj0ELb0EEE
|| __TEXT.__text __ZN5arkit18FaceLightOptimizer17computeConfidenceERKN3cva6MatrixIfLj9ELj1ELb0EEERKNS2_IfLj0ELj1ELb0EEERKNS2_IfLj0ELj0ELb0EEE
|| __TEXT.__text __ZN5arkit18FaceLightOptimizer7computeERKNSt3__16vectorINS1_4pairIfN3cva6MatrixIfLj1ELj0ELb0EEEEENS1_9allocatorIS7_EEEERKNS2_ImNS8_ImEEEEffb
|| __TEXT.__text __ZN5arkit18FaceLightOptimizer9inlierSetERKN3cva6MatrixIfLj9ELj1ELb0EEEfNS2_IfLj0ELj1ELb0EEERKNS2_IfLj0ELj0ELb0EEE
|| __TEXT.__text __ZN5arkit19PrecomputedFaceDataC1ENSt3__18optionalIKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
|| __TEXT.__text __ZN5arkit19PrecomputedFaceDataC2ENSt3__18optionalIKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
|| __TEXT.__text __ZN5arkit19PrecomputedFaceDataD1Ev
|| __TEXT.__text __ZN5arkit19PrecomputedFaceDataD2Ev
|| __TEXT.__text __ZN5arkit19mapColorTemperatureEf
|| __TEXT.__text __ZN5arkit19sampleSignalToNoiseEfRKNSt3__16vectorIfNS0_9allocatorIfEEEERiS7_RfS8_
|| __TEXT.__text __ZN5arkit20kFLEDarkCoefficientsEv
|| __TEXT.__text __ZN5arkit21FacialLightEstimation13estimateLightERKNS_10FLEOptionsERKNS_16FaceTrackingDataERKNS_12ImageViewYUVE
|| __TEXT.__text __ZN5arkit21FacialLightEstimation13rotateShCoeffERKN3cva6MatrixIfLj9ELj1ELb0EEERKNS2_IfLj3ELj3ELb0EEE
|| __TEXT.__text __ZN5arkit21FacialLightEstimation15flipAxesShCoeffERKN3cva6MatrixIfLj9ELj1ELb0EEEbbb
|| __TEXT.__text __ZN5arkit21FacialLightEstimation25populateValidImageSamplesERKN3cva9ArrayViewIhLj2EEERKNSt3__16vectorIiNS6_9allocatorIiEEEERKNS7_INS_8LandmarkENS8_ISD_EEEESC_
|| __TEXT.__text __ZN5arkit21FacialLightEstimationC1Ev
|| __TEXT.__text __ZN5arkit21FacialLightEstimationC2Ev
|| __TEXT.__text __ZN5arkit22gaussianMixtureKernelsE22ARNoiseModelIdentifierfj
|| __TEXT.__text __ZN5arkit26kFLEInequalityCoefficientsEv
|| __TEXT.__text __ZN5arkit3btr13ProjectPointsERKNSt3__16vectorIN3cva6MatrixIdLj3ELj1ELb0EEENS1_9allocatorIS5_EEEERKNS0_14CameraPoseInfoE
|| __TEXT.__text __ZN5arkit3btr15ScaleCorrection10GetDbgDataEv
|| __TEXT.__text __ZN5arkit3btr15ScaleCorrection13EstimateScaleERKNS0_16RegistrationDataERNS1_7OutcomeE
|| __TEXT.__text __ZN5arkit3btr15ScaleCorrectionC1ERKNS0_21ScaleCorrectionConfigE
|| __TEXT.__text __ZN5arkit3btr15ScaleCorrectionC2ERKNS0_21ScaleCorrectionConfigE
|| __TEXT.__text __ZN5arkit3btr16BodyRegistration12RegisterBodyEPKDv2_fmPKDv3_fmPK13simd_float4x4mPK13simd_float3x3SA_
|| __TEXT.__text __ZN5arkit3btr22ComputeReprojectionAvgERKNS0_14CameraPoseInfoERKNS0_19Correspondences2d3dE
|| __TEXT.__text __ZN5arkit3btr22ComputeTotalBoneLengthERKNSt3__16vectorIN3cva6MatrixIdLj3ELj1ELb0EEENS1_9allocatorIS5_EEEE
|| __TEXT.__text __ZN5arkit3btr25ComputeReprojectionErrorSEfRKNSt3__16vectorIPKNS0_16RegistrationDataENS1_9allocatorIS5_EEEE
|| __TEXT.__text __ZN5arkit3btr31EstimateScaleReprojectionLinearERKNSt3__16vectorINS0_16RegistrationDataENS1_9allocatorIS3_EEEE
|| __TEXT.__text __ZN5arkit3sumERKNSt3__16vectorINS1_IfNS0_9allocatorIfEEEENS2_IS4_EEEEj
|| __TEXT.__text __ZN5arkit4wrapEP10__CVBuffer
|| __TEXT.__text __ZN5arkit6Random10globalSeedEv
|| __TEXT.__text __ZN5arkit6Random19seedFromCurrentTimeEv
|| __TEXT.__text __ZN5arkit8gaussianEff
|| __TEXT.__text __ZN5arkit9runSolverERKNSt3__16vectorINS0_4pairIfN3cva6MatrixIfLj1ELj0ELb0EEEEENS0_9allocatorIS6_EEEERKNS_10FLEOptionsE
|| __TEXT.__text __ZN5arkit9unflattenENSt3__16vectorIfNS0_9allocatorIfEEEEDv3_j
|| __TEXT.__text __ZN5arkit9unflattenERKNSt3__16vectorIfNS0_9allocatorIfEEEEDv2_j
|| __TEXT.__text __ZNK5arkit16FaceTrackingData10nLandmarksEv
|| __TEXT.__text __ZNK5arkit16FaceTrackingData17filteredLandmarksERKNSt3__16vectorIiNS1_9allocatorIiEEEE
|| __TEXT.__text __ZNK5arkit19PrecomputedFaceData13nCoefficientsEv
|| __TEXT.__text __ZNK5arkit19PrecomputedFaceData17getValidSampleIDsEi
|| __TEXT.__text __ZNK5arkit19PrecomputedFaceData17getValidSampleIDsEv
|| __TEXT.__text __ZNK5arkit19PrecomputedFaceData6getRTFERKNSt3__16vectorIiNS1_9allocatorIiEEEE
|| __TEXT.__text __ZNK5arkit19PrecomputedFaceData6getRTFEi
|| __TEXT.__text __ZNK5arkit19PrecomputedFaceData8nSamplesEv
|| __TEXT.__text __ZeqRK7ARPatchS1_
|| __TEXT.__text _ar_createAttributeDictionaryNew
|| __TEXT.__text _ar_pixelBufferPoolCreateNew
|| __TEXT.__text _copyHIDServicePlugin
|| __TEXT.__text _getCurrentTimeInSeconds
|| __TEXT.__text _rawAccelerometerCallback
|| __TEXT.__text _rawGyroscopeCallback
|| __TEXT.__text _rawIOHIDEventCallback
__ ARDisplayDevice: _ARDisplayDeviceHMEHeadlockedKey
__ ARDisplayDevice: _ARDisplayDeviceHMEStatusKey
__ ARDisplayDevice: _OBJC_CLASS_$_ARDisplayDeviceInterface
__ ARDisplayDevice: _OBJC_CLASS_$_ARDisplayDeviceUserDefaults
__ ARDisplayDevice: _OBJC_CLASS_$_ARDisplayExtensionService
__ AVFoundation: _AVCaptureDeviceTypeBuiltInMicrophone
__ AVFoundation: _AVCaptureDeviceTypeBuiltInTrueDepthCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInUltraWideCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInWideAngleCamera
__ AVFoundation: _AVCaptureExposureDurationCurrent
__ AVFoundation: _AVCaptureISOCurrent
__ AVFoundation: _AVCaptureLensPositionCurrent
__ AVFoundation: _AVCaptureSessionErrorKey
__ AVFoundation: _AVCaptureSessionInterruptionEndedNotification
__ AVFoundation: _AVCaptureSessionPresetInputPriority
__ AVFoundation: _AVCaptureSessionRuntimeErrorNotification
__ AVFoundation: _AVCaptureSessionSetAuthorizedToUseCameraInMultipleForegroundAppLayout
__ AVFoundation: _AVCaptureSessionWasInterruptedNotification
__ AVFoundation: _AVChannelLayoutKey
__ AVFoundation: _AVEncoderBitRateKey
__ AVFoundation: _AVFileTypeMPEG4
__ AVFoundation: _AVFileTypeQuickTimeMovie
__ AVFoundation: _AVFormatIDKey
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeDepthData
__ AVFoundation: _AVMediaTypeMetadata
__ AVFoundation: _AVMediaTypeMetadataObject
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVMediaTypeVisionData
__ AVFoundation: _AVMetadataIdentifierQuickTimeCoreMotion
__ AVFoundation: _AVMetadataObjectTypeFace
__ AVFoundation: _AVMetadataObjectTypeTrackedFaces
__ AVFoundation: _AVNumberOfChannelsKey
__ AVFoundation: _AVSampleRateKey
__ AVFoundation: _AVTrackAssociationTypeMetadataReferent
__ AVFoundation: _AVVideoAverageBitRateKey
__ AVFoundation: _AVVideoCodecKey
__ AVFoundation: _AVVideoCodecTypeH264
__ AVFoundation: _AVVideoCompressionPropertiesKey
__ AVFoundation: _AVVideoExpectedSourceFrameRateKey
__ AVFoundation: _AVVideoHeightKey
__ AVFoundation: _AVVideoMaxKeyFrameIntervalKey
__ AVFoundation: _AVVideoProfileLevelH264HighAutoLevel
__ AVFoundation: _AVVideoProfileLevelKey
__ AVFoundation: _AVVideoWidthKey
__ AVFoundation: _OBJC_CLASS_$_AVAssetReader
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderOutputMetadataAdaptor
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderTrackOutput
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriter
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInput
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInputMetadataAdaptor
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInputPixelBufferAdaptor
__ AVFoundation: _OBJC_CLASS_$_AVCaptureAudioDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureConnection
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDataOutputSynchronizer
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDepthDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDevice
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceDiscoverySession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureMetadataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureMultiCamSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSynchronizedDepthData
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSynchronizedMetadataObjectData
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSynchronizedSampleBufferData
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVisionDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVDepthData
__ AVFoundation: _OBJC_CLASS_$_AVMetadataTrackedFacesObject
__ AVFoundation: _OBJC_CLASS_$_AVMutableMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVTimedMetadataGroup
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ Accelerate: _kvImage_YpCbCrToARGBMatrix_ITU_R_709_2
__ Accelerate: _vImageBuffer_Init
__ Accelerate: _vImageBuffer_InitWithCVPixelBuffer
__ Accelerate: _vImageCVImageFormat_CreateWithCVPixelBuffer
__ Accelerate: _vImageCVImageFormat_Release
__ Accelerate: _vImageCVImageFormat_SetChromaSiting
__ Accelerate: _vImageCVImageFormat_SetColorSpace
__ Accelerate: _vImageConvert_420Yp8_CbCr8ToARGB8888
__ Accelerate: _vImageConvert_YpCbCrToARGB_GenerateConversion
__ Accelerate: _vImageCopyBuffer
__ Accelerate: _vImageExtractChannel_ARGB8888
__ Accelerate: _vImageHorizontalReflect_Planar8
__ Accelerate: _vImageOverwriteChannelsWithScalar_Planar8
__ Accelerate: _vImageRotate90_ARGB8888
__ Accelerate: _vImageRotate90_Planar8
__ Accelerate: _vImageRotate90_PlanarF
__ Accelerate: _vImageScale_ARGB8888
__ Accelerate: _vImageScale_Planar8
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientPushValueForDistributionKey
__ AppleCV3D: _CV3DGetVersionInfo
__ AppleCV3D: _CV3DMLModelCreate
__ AppleCV3D: _CV3DMLModelRelease
__ AppleCV3D: _CV3DODTAdd3dObject
__ AppleCV3D: _CV3DODTAddPlanarObject
__ AppleCV3D: _CV3DODTCreate
__ AppleCV3D: _CV3DODTCreateWithOptions
__ AppleCV3D: _CV3DODTCreateWithOptionsAndModel
__ AppleCV3D: _CV3DODTDetectWithMetadata
__ AppleCV3D: _CV3DODTGetMaxSupportedNumberImagesToTrack
__ AppleCV3D: _CV3DODTImagePredict
__ AppleCV3D: _CV3DODTImagePredictInWorld
__ AppleCV3D: _CV3DODTObjectInfoRelease
__ AppleCV3D: _CV3DODTRelease
__ AppleCV3D: _CV3DODTSetMaximumTrackingTime
__ AppleCV3D: _CV3DODTSetPerformanceMode
__ AppleCV3D: _CV3DODTSetStarMode
__ AppleCV3D: _CV3DODTTrack
__ AppleCV3D: _CV3DODTTrackAndEstimateScale
__ AppleCV3D: _CV3DODTVerifyReferenceImage
__ AppleCV3D: _CV3DODTWaitForAllObjectsAddToFinish
__ AppleCV3D: _CV3DPerformHitTest
__ AppleCV3D: _CV3DReleaseHitTestResults
__ AppleCV3D: _CV3DReleaseSceneUnderstandingResult
__ AppleCV3D: _CV3DRemoveTrackableHitTest
__ AppleCV3D: _CV3DSLAMCalibrationAddCameraParameters
__ AppleCV3D: _CV3DSLAMCalibrationAddIMUParameters
__ AppleCV3D: _CV3DSLAMCalibrationCreate
__ AppleCV3D: _CV3DSLAMCalibrationDetectRuntimeHardware
__ AppleCV3D: _CV3DSLAMCalibrationRelease
__ AppleCV3D: _CV3DSLAMCameraModelTypeFromString
__ AppleCV3D: _CV3DSLAMCameraVideoModeFromString
__ AppleCV3D: _CV3DSLAMConfigCalcFeaturePointDetectionResolution
__ AppleCV3D: _CV3DSLAMConfigCalcLineDetectionResolution
__ AppleCV3D: _CV3DSLAMConfigCreate
__ AppleCV3D: _CV3DSLAMConfigDisableLineTracking
__ AppleCV3D: _CV3DSLAMConfigEnableLineTracking
__ AppleCV3D: _CV3DSLAMConfigEnableLineTrackingAlways
__ AppleCV3D: _CV3DSLAMConfigEnableRangingBasedRelocalization
__ AppleCV3D: _CV3DSLAMConfigOutputCollaborativeMappingStatistics
__ AppleCV3D: _CV3DSLAMConfigPresetFromString
__ AppleCV3D: _CV3DSLAMConfigRelease
__ AppleCV3D: _CV3DSLAMConfigSetMapFromCFData
__ AppleCV3D: _CV3DSLAMConfigSetRelocalizationEnabled
__ AppleCV3D: _CV3DSLAMConfigUseDeterministicMode
__ AppleCV3D: _CV3DSLAMConfigUseHWFeaturePoints
__ AppleCV3D: _CV3DSLAMConfigUseSWProxyFeaturePoints
__ AppleCV3D: _CV3DSetAsynchronousHitTestCallback
__ AppleCV3D: _CV3DSetupHitTesting
__ AppleCV3D: _CV3DSurfaceDetectionCreateWithArgs
__ AppleCV3D: _CV3DSurfaceDetectionDefaultParameters
__ AppleCV3D: _CV3DSurfaceDetectionRelease
__ AppleCV3D: _CV3DSurfaceDetectionReleaseResult
__ AppleCV3D: _CV3DSurfaceDetectionRemoveSurfaces
__ AppleCV3D: _CV3DSurfaceDetectionSingleShotSurfaces
__ AppleCV3D: _CV3DUpdateHitTestResultPose
__ AppleCV3D: _CV3DVIOActivateSceneUnderstanding
__ AppleCV3D: _CV3DVIOAddAnchor
__ AppleCV3D: _CV3DVIOAddCameraCalibrationToDictionaryV2
__ AppleCV3D: _CV3DVIOAddIMUCalibrationToDictionaryV2
__ AppleCV3D: _CV3DVIOAlignAndMergeMaps
__ AppleCV3D: _CV3DVIOClearMap
__ AppleCV3D: _CV3DVIOCreate
__ AppleCV3D: _CV3DVIOCreateCMPoseAnchorData
__ AppleCV3D: _CV3DVIOCreateKeyframesFromMap
__ AppleCV3D: _CV3DVIOCreatePointsFromMap
__ AppleCV3D: _CV3DVIODeactivateSceneUnderstanding
__ AppleCV3D: _CV3DVIOExtractObjectMap
__ AppleCV3D: _CV3DVIOGetAVCaptureConfig2
__ AppleCV3D: _CV3DVIOGetCMOjbectAnchorMetadata
__ AppleCV3D: _CV3DVIOGetCMPoseAnchorTransformation
__ AppleCV3D: _CV3DVIOGetCameraCalibration
__ AppleCV3D: _CV3DVIOGetMapBounds
__ AppleCV3D: _CV3DVIOGetPose
__ AppleCV3D: _CV3DVIOGetSession
__ AppleCV3D: _CV3DVIOGetSurfaceDefaultRuntimeConfiguration
__ AppleCV3D: _CV3DVIOInitialize2
__ AppleCV3D: _CV3DVIOIsVideoModeSupported
__ AppleCV3D: _CV3DVIOLoadSurfaceMap
__ AppleCV3D: _CV3DVIOPushAccel
__ AppleCV3D: _CV3DVIOPushCMData
__ AppleCV3D: _CV3DVIOPushFrameWithMetadata
__ AppleCV3D: _CV3DVIOPushGyro
__ AppleCV3D: _CV3DVIOPushPRMeasurementForSession
__ AppleCV3D: _CV3DVIORelease
__ AppleCV3D: _CV3DVIORemoveAnchor
__ AppleCV3D: _CV3DVIOSerializeMap
__ AppleCV3D: _CV3DVIOSerializeSurfaceMap
__ AppleCV3D: _CV3DVIOSetCMDataCallback
__ AppleCV3D: _CV3DVIOSetPoseCallback
__ AppleCV3D: _CV3DVIOSetSceneUnderstandingCallback
__ AppleCV3D: _CV3DVIOSetSurfaceDetectionCallback
__ AppleCV3D: _CV3DVIOSetSurfaceDetectionConfiguration
__ AppleCV3D: _CV3DVIOSetVIOErrorCallback
__ AppleCV3D: _CV3DVIOSetupSceneUnderstanding
__ AppleCV3D: _CV3DVIOSetupSurfaceDetection
__ AppleCV3D: _SetDefaultCameraCalibrationData
__ AppleCV3D: _SetDefaultImuCalibrationData
__ AppleCV3D: _SetDefaultRangingSensorCalibrationData
__ AppleCV3D: _kCV3DODT_DeterministicMode
__ AppleCV3D: _kCV3DODT_ForceDetection
__ AppleCV3D: _kCV3DODT_MaxNumberImagesToTrack
__ AppleCV3D: _kCV3DVIOPoseMetadata_CameraSwitchingStatistics
__ AppleCV3D: _kCV3DVIOPoseMetadata_CameraToIMURotation
__ AppleCV3D: _kCV3DVIOPoseMetadata_HealthTrackingMap
__ AppleCV3D: _kCV3DVIOPoseMetadata_MapKeyframeQuality
__ AppleCV3D: _kCV3DVIOPoseMetadata_MapMergeStatsArray
__ AppleCV3D: _kCV3DVIOPoseMetadata_MapSize
__ AppleCV3D: _kCV3DVIOPoseMetadata_NewAnchors
__ AppleCV3D: _kCV3DVIOPoseMetadata_NumberReinitializationAttempts
__ AppleCV3D: _kCV3DVIOPoseMetadata_PointCloud
__ AppleCV3D: _kCV3DVIOPoseMetadata_RelocalizationIsGlobal
__ AppleCV3D: _kCV3DVIOPoseMetadata_RelocalizationSucceeded
__ AppleCV3D: _kCV3DVIOPoseMetadata_RelocalizationTimestamp
__ AppleCV3D: _kCV3DVIOPoseMetadata_RemovedAnchorNames
__ AppleCV3D: _kCV3DVIOPoseMetadata_Timestamp
__ AppleCV3D: _kCV3DVIOPoseMetadata_UpdatedAnchors
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateAccelerometerBias
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateCovariance
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateCovarianceAccelerometerBiasDof
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateCovarianceAccelerometerBiasOffset
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateCovarianceGyroBiasDof
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateCovarianceGyroBiasOffset
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateCovarianceOrientationDof
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateCovarianceOrientationOffset
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateCovariancePositionDof
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateCovariancePositionOffset
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateCovarianceVelocityDof
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateCovarianceVelocityOffset
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateGyroBias
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateOrientation
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStatePosition
__ AppleCV3D: _kCV3DVIOPoseMetadata_VIOEngineOldestStateVelocity
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigFeatureBinningEnabled
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigFeatureDetectionThreshold
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigFeatureOrientationAssignmentEnabled
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigGuassianPyramidOctaveCount
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigGuassianPyramidOctaveDownscaleFactor
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigMaxBurstDuration
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigMaxKeypointCount
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigMinBurstFrameDuration
__ AppleCV3D: _kCV3DVIO_AVCaptureConfigMinFrameDuration
__ AppleCV3D: _kCV3DVIO_CalibrationForDeviceModel
__ AppleCV3D: _kCV3DVIO_CameraDescription
__ AppleCV3D: _kCV3DVIO_CameraVideoMode
__ AppleCV3D: _kCV3DVIO_DeterministicMode
__ AppleCV3D: _kCV3DVIO_EffectiveFocusLength
__ AppleCV3D: _kCV3DVIO_EnableLineTracking
__ AppleCV3D: _kCV3DVIO_EnableLineTrackingAlways
__ AppleCV3D: _kCV3DVIO_IntrinsicsDictionary
__ AppleCV3D: _kCV3DVIO_LensType
__ AppleCV3D: _kCV3DVIO_MapLoadFromCFData
__ AppleCV3D: _kCV3DVIO_PrincipalPoint
__ AppleCV3D: _kCV3DVIO_RadialDistortionCoefficients
__ AppleCV3D: _kCV3DVIO_SLAMConfigurationName
__ AppleCV3D: _kCV3DVIO_SkipExtrinsicsDeserializationKey
__ AppleCV3D: _kCV3DVIO_SkipExtrinsicsSerializationKey
__ AppleCV3D: _kCV3DVIO_TangentialDistortionCoefficients
__ AppleCV3D: _kCV3DVIO_TurnOnRelocalization
__ AppleCV3D: _kCV3DVIO_UseHWFeaturePoints
__ AppleCV3D: _kCV3DVIO_UseSWProxyFeaturePoints
__ AppleCV3DMOVKit: _OBJC_CLASS_$_CVACMAccelerometerData
__ AppleCV3DMOVKit: _OBJC_CLASS_$_CVACMGyroData
__ AppleCV3DMOVKit: _OBJC_CLASS_$_MOVReaderInterface
__ AppleCV3DMOVKit: _OBJC_CLASS_$_MOVWriterInterface
__ AppleCV3DMOVKit: _OBJC_CLASS_$_MetadataWrapper
__ AppleCV3DMOVKit: _kCoreLocationIdentifierValue
__ AppleCV3DMOVKit: _kIMUMotionIdentifierValue
__ AppleCV3DMOVKit: _kMOVSummaryDeviceString
__ AppleCV3DMOVKit: _kRawAccelerometerIdentifierValue
__ AppleCV3DMOVKit: _kRawGyroscopeIdentifierValue
__ AppleCV3DModels: _CV3DModelsCreateObjectRegionProposalModelData
__ AppleCV3DModels: _CV3DModelsCreateSceneUnderstandingModelData
__ AppleCVA: _CVAFaceKitCopySemantics
__ AppleCVA: _CVAFaceKitCreate
__ AppleCVA: _CVAFaceKitGetErrorDescription
__ AppleCVA: _CVAFaceKitMaximumNumberOfTrackedFaces
__ AppleCVA: _CVAFaceKitProcess
__ AppleCVA: _kCVAFaceKit_AddDebugInfo
__ AppleCVA: _kCVAFaceKit_AddMesh
__ AppleCVA: _kCVAFaceKit_Animation
__ AppleCVA: _kCVAFaceKit_AnimationBlendshapes
__ AppleCVA: _kCVAFaceKit_AnimationGaze
__ AppleCVA: _kCVAFaceKit_AnimationLeftEyePitch
__ AppleCVA: _kCVAFaceKit_AnimationLeftEyeYaw
__ AppleCVA: _kCVAFaceKit_AnimationRightEyePitch
__ AppleCVA: _kCVAFaceKit_AnimationRightEyeYaw
__ AppleCVA: _kCVAFaceKit_AnimationTongueOut
__ AppleCVA: _kCVAFaceKit_BlendshapeActivations
__ AppleCVA: _kCVAFaceKit_BlendshapeNames
__ AppleCVA: _kCVAFaceKit_Callback
__ AppleCVA: _kCVAFaceKit_CameraRGB
__ AppleCVA: _kCVAFaceKit_DataFailure
__ AppleCVA: _kCVAFaceKit_DebugInfo
__ AppleCVA: _kCVAFaceKit_Depth
__ AppleCVA: _kCVAFaceKit_DepthUnit
__ AppleCVA: _kCVAFaceKit_DetectedFaceAngleInfoRoll
__ AppleCVA: _kCVAFaceKit_DetectedFaceFaceID
__ AppleCVA: _kCVAFaceKit_DetectedFaceRect
__ AppleCVA: _kCVAFaceKit_DetectedFacesArray
__ AppleCVA: _kCVAFaceKit_Extrinsics
__ AppleCVA: _kCVAFaceKit_FaceID
__ AppleCVA: _kCVAFaceKit_FailureType
__ AppleCVA: _kCVAFaceKit_Geometry
__ AppleCVA: _kCVAFaceKit_GeometryLeftEye
__ AppleCVA: _kCVAFaceKit_GeometryRightEye
__ AppleCVA: _kCVAFaceKit_GeometryVertices
__ AppleCVA: _kCVAFaceKit_Intrinsics
__ AppleCVA: _kCVAFaceKit_Mesh
__ AppleCVA: _kCVAFaceKit_MeshQuadIndices
__ AppleCVA: _kCVAFaceKit_MeshTexcoords
__ AppleCVA: _kCVAFaceKit_MeshVertices
__ AppleCVA: _kCVAFaceKit_Pose
__ AppleCVA: _kCVAFaceKit_RGB
__ AppleCVA: _kCVAFaceKit_RawData
__ AppleCVA: _kCVAFaceKit_Rotation
__ AppleCVA: _kCVAFaceKit_SetCameraDepthFromRGB
__ AppleCVA: _kCVAFaceKit_SmoothData
__ AppleCVA: _kCVAFaceKit_TensorUUID
__ AppleCVA: _kCVAFaceKit_Timestamp
__ AppleCVA: _kCVAFaceKit_TrackedFacesArray
__ AppleCVA: _kCVAFaceKit_Translation
__ AppleCVA: _kCVAFaceKit_UseHardwareAcceleration
__ AppleNeuralEngine: _OBJC_CLASS_$__ANEDeviceInfo
__ BackBoardServices: _OBJC_CLASS_$_BKSAccelerometer
__ CoreAppleCVA: __ZN3cva6Logger6Target3logENS0_8SeverityEPKcz
__ CoreAppleCVA: __ZN3cva6Logger8instanceEv
__ CoreAppleCVA: __ZN3cva6VecLibIfE4gemmEbbiiifPKfiS3_ifPfi
__ CoreAppleCVA: __ZN3cva6vecLib4sysvIdEEvciiPT_iPiS3_iS3_iS4_
__ CoreAppleCVA: __ZN3cva6vecLib5gesvdIfEEvcciiPKT_iPS2_S5_iS5_iS5_iPi
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFMachPortCreateRunLoopSource
__ CoreFoundation: _CFMachPortCreateWithPort
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopObserverCreateWithHandler
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopRemoveObserver
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopRun
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopStop
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateFromString
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSURLIsReadableKey
__ CoreFoundation: _NSURLIsWritableKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleExecutableKey
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGDataProviderCopyData
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageGetAlphaInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetBytesPerRow
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPointCreateDictionaryRepresentation
__ CoreGraphics: _CGPointMakeWithDictionaryRepresentation
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectCreateDictionaryRepresentation
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectMakeWithDictionaryRepresentation
__ CoreGraphics: _CGRectStandardize
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeCreateDictionaryRepresentation
__ CoreGraphics: _CGSizeZero
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _OBJC_CLASS_$_CIVector
__ CoreImage: _OBJC_CLASS_$_CIWarpKernel
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _OBJC_CLASS_$__CLVIOEstimation
__ CoreLocation: _kCLDistanceFilterNone
__ CoreLocation: _kCLLocationAccuracyBest
__ CoreML: _OBJC_CLASS_$_MLArrayBatchProvider
__ CoreML: _OBJC_CLASS_$_MLFeatureValue
__ CoreML: _OBJC_CLASS_$_MLModel
__ CoreML: _OBJC_CLASS_$_MLPredictionOptions
__ CoreMedia: _CMAudioFormatDescriptionCreate
__ CoreMedia: _CMClockGetTime
__ CoreMedia: _CMFormatDescriptionGetMediaSubType
__ CoreMedia: _CMGetAttachment
__ CoreMedia: _CMMetadataDataTypeRegistryRegisterDataType
__ CoreMedia: _CMMetadataFormatDescriptionCreateWithMetadataSpecifications
__ CoreMedia: _CMMetadataFormatDescriptionGetIdentifiers
__ CoreMedia: _CMSampleBufferGetImageBuffer
__ CoreMedia: _CMSampleBufferGetPresentationTimeStamp
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeCopyAsDictionary
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeMakeFromDictionary
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMTimeRangeMake
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _CMVideoFormatDescriptionGetDimensions
__ CoreMedia: _kCMMetadataBaseDataType_JSON
__ CoreMedia: _kCMMetadataBaseDataType_RawData
__ CoreMedia: _kCMMetadataBaseDataType_UInt8
__ CoreMedia: _kCMMetadataBaseDataType_UTF8
__ CoreMedia: _kCMMetadataFormatDescriptionMetadataSpecificationKey_DataType
__ CoreMedia: _kCMMetadataFormatDescriptionMetadataSpecificationKey_Identifier
__ CoreMedia: _kCMSampleBufferAttachmentKey_CameraIntrinsicMatrix
__ CoreMedia: _kCMSampleBufferAttachmentKey_DroppedFrameReason
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimeRangeZero
__ CoreMedia: _kCMTimeZero
__ CoreMedia: _kFigCaptureSampleBufferAttachmentKey_MetadataDictionary
__ CoreMedia: _kFigCaptureStreamMetadata_SNR
__ CoreMedia: _kFigDepthBlurEffectMetadataKey_RenderingParameters
__ CoreMedia: _kFigDepthBlurEffectMetadataKey_SimulatedAperture
__ CoreMedia: _kFigDepthMetadataAttachmentKey_Accuracy
__ CoreMedia: _kFigDepthMetadataAttachmentKey_ExtrinsicMatrix
__ CoreMedia: _kFigDepthMetadataAttachmentKey_Filtered
__ CoreMedia: _kFigDepthMetadataAttachmentKey_IntrinsicMatrix
__ CoreMedia: _kFigDepthMetadataAttachmentKey_IntrinsicMatrixReferenceDimensions
__ CoreMedia: _kFigDepthMetadataAttachmentKey_InverseLensDistortionCoefficients
__ CoreMedia: _kFigDepthMetadataAttachmentKey_LensDistortionCenter
__ CoreMedia: _kFigDepthMetadataAttachmentKey_LensDistortionCoefficients
__ CoreMedia: _kFigDepthMetadataAttachmentKey_PixelSize
__ CoreMedia: _kFigDepthMetadataAttachmentKey_Quality
__ CoreMedia: _kFigDepthPrivateMetadataAttachmentKey_DepthDataVersion
__ CoreMotion: _OBJC_CLASS_$_CMDeviceMotion
__ CoreMotion: _OBJC_CLASS_$_CMMotionManager
__ CoreRE: _RERelease
__ CoreRE: _RERigAssetBuilderAddAimConstraint
__ CoreRE: _RERigAssetBuilderAddJointRigNode
__ CoreRE: _RERigAssetBuilderAddOrientConstraint
__ CoreRE: _RERigAssetBuilderAddParentConstraint
__ CoreRE: _RERigAssetBuilderAddPointConstraint
__ CoreRE: _RERigAssetBuilderAddTransformRigNode
__ CoreRE: _RERigAssetBuilderAddTwoBoneIKHandle
__ CoreRE: _RERigAssetBuilderCreate
__ CoreRE: _RERigAssetBuilderFinishRigDefinition
__ CoreRE: _RERigAssetBuilderGetRigDefinition
__ CoreRE: _RERigAssetBuilderReserveAimConstraints
__ CoreRE: _RERigAssetBuilderReserveJointRigNodes
__ CoreRE: _RERigAssetBuilderReserveOrientConstraints
__ CoreRE: _RERigAssetBuilderReserveParentConstraints
__ CoreRE: _RERigAssetBuilderReservePointConstraints
__ CoreRE: _RERigAssetBuilderReserveTransformRigNodes
__ CoreRE: _RERigAssetBuilderSetAimConstraintPointAtRigNodes
__ CoreRE: _RERigAssetBuilderSetAimConstraintPointUpRigNode
__ CoreRE: _RERigAssetBuilderSetAimConstraintUpAxisRigNode
__ CoreRE: _RERigAssetBuilderSetAimConstraintUpWorldAxis
__ CoreRE: _RERigAssetBuilderSetConstraintComponentChannels
__ CoreRE: _RERigAssetBuilderSetConstraintRigNodes
__ CoreRE: _RERigAssetBuilderSetRigNodeConstraints
__ CoreRE: _RERigAssetBuilderSetRigNodeParent
__ CoreRE: _RERigAssetBuilderSetRigNodeRotation
__ CoreRE: _RERigAssetBuilderSetRigNodeRotationOrientation
__ CoreRE: _RERigAssetBuilderSetRigNodeScale
__ CoreRE: _RERigAssetBuilderSetRigNodeScaleOrientation
__ CoreRE: _RERigAssetBuilderSetRigNodeTranslation
__ CoreRE: _RERigAssetBuilderSetTwoBoneIKHandleTwistOffset
__ CoreRE: _RERigEvaluationCalculateJointsFromPositions
__ CoreRE: _RERigEvaluationCreateWithJoints
__ CoreRE: _RERigEvaluationGetInputJointCountForRig
__ CoreRE: _RERigEvaluationGetOutputJointCountForRig
__ CoreRE: _RERigEvaluationGetOutputJointNameForRig
__ CoreRE: _RERigEvaluationGetParentJointName
__ CoreUI: _OBJC_CLASS_$_CUICatalog
__ CoreVideo: _CVBufferGetAttachments
__ CoreVideo: _CVBufferRelease
__ CoreVideo: _CVBufferRetain
__ CoreVideo: _CVBufferSetAttachment
__ CoreVideo: _CVMetalTextureCacheCreate
__ CoreVideo: _CVMetalTextureCacheCreateTextureFromImage
__ CoreVideo: _CVMetalTextureGetTexture
__ CoreVideo: _CVPixelBufferCreate
__ CoreVideo: _CVPixelBufferCreateWithBytes
__ CoreVideo: _CVPixelBufferGetBaseAddress
__ CoreVideo: _CVPixelBufferGetBaseAddressOfPlane
__ CoreVideo: _CVPixelBufferGetBytesPerRow
__ CoreVideo: _CVPixelBufferGetBytesPerRowOfPlane
__ CoreVideo: _CVPixelBufferGetHeight
__ CoreVideo: _CVPixelBufferGetHeightOfPlane
__ CoreVideo: _CVPixelBufferGetIOSurface
__ CoreVideo: _CVPixelBufferGetPixelFormatType
__ CoreVideo: _CVPixelBufferGetWidth
__ CoreVideo: _CVPixelBufferGetWidthOfPlane
__ CoreVideo: _CVPixelBufferLockBaseAddress
__ CoreVideo: _CVPixelBufferPoolCreate
__ CoreVideo: _CVPixelBufferPoolCreatePixelBuffer
__ CoreVideo: _CVPixelBufferPoolGetPixelBufferAttributes
__ CoreVideo: _CVPixelBufferPoolRelease
__ CoreVideo: _CVPixelBufferRelease
__ CoreVideo: _CVPixelBufferRetain
__ CoreVideo: _CVPixelBufferUnlockBaseAddress
__ CoreVideo: _kCVImageBufferChromaLocation_Center
__ CoreVideo: _kCVPixelBufferCGBitmapContextCompatibilityKey
__ CoreVideo: _kCVPixelBufferCGImageCompatibilityKey
__ CoreVideo: _kCVPixelBufferHeightKey
__ CoreVideo: _kCVPixelBufferIOSurfacePropertiesKey
__ CoreVideo: _kCVPixelBufferPixelFormatTypeKey
__ CoreVideo: _kCVPixelBufferPlaneAlignmentKey
__ CoreVideo: _kCVPixelBufferWidthKey
__ Espresso: __ZN8Espresso20get_internal_contextEPv
__ Espresso: _espresso_context_destroy
__ Espresso: _espresso_context_set_low_precision_accumulation
__ Espresso: _espresso_create_context
__ Espresso: _espresso_create_plan
__ Espresso: _espresso_network_bind_buffer
__ Espresso: _espresso_network_bind_direct_cvpixelbuffer
__ Espresso: _espresso_network_bind_input_vimagebuffer_bgra8
__ Espresso: _espresso_network_get_version
__ Espresso: _espresso_network_query_blob_dimensions
__ Espresso: _espresso_network_select_configuration
__ Espresso: _espresso_plan_add_network
__ Espresso: _espresso_plan_build
__ Espresso: _espresso_plan_build_clean
__ Espresso: _espresso_plan_destroy
__ Espresso: _espresso_plan_execute_sync
__ Foundation: _NSClassFromString
__ Foundation: _NSFilePathErrorKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSPopAutoreleasePool
__ Foundation: _NSProcessInfoThermalStateDidChangeNotification
__ Foundation: _NSPushAutoreleasePool
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSCondition
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ IOKit: _IOHIDEventGetFloatValue
__ IOKit: _IOHIDEventGetTimeStamp
__ IOKit: _IOHIDEventGetType
__ IOKit: _IOHIDEventSystemClientCopyServices
__ IOKit: _IOHIDEventSystemClientCreateWithType
__ IOKit: _IOHIDEventSystemClientRegisterEventCallback
__ IOKit: _IOHIDEventSystemClientScheduleWithDispatchQueue
__ IOKit: _IOHIDEventSystemClientSetMatching
__ IOKit: _IOHIDEventSystemClientUnregisterEventCallback
__ IOKit: _IOHIDEventSystemClientUnscheduleFromDispatchQueue
__ IOKit: _IOHIDServiceClientCopyProperty
__ IOKit: _IOHIDServiceClientSetProperty
__ IOSurface: _IOSurfaceCreate
__ IOSurface: _IOSurfaceGetBaseAddress
__ IOSurface: _IOSurfaceGetHeight
__ IOSurface: _IOSurfaceGetID
__ IOSurface: _IOSurfaceGetWidth
__ IOSurface: _IOSurfaceLock
__ IOSurface: _IOSurfaceUnlock
__ IOSurface: _kIOSurfaceAllocSize
__ IOSurface: _kIOSurfaceBytesPerElement
__ IOSurface: _kIOSurfaceBytesPerRow
__ IOSurface: _kIOSurfaceCacheMode
__ IOSurface: _kIOSurfaceHeight
__ IOSurface: _kIOSurfacePixelFormat
__ IOSurface: _kIOSurfaceWidth
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithURL
__ MOVStreamIO: _OBJC_CLASS_$_MOVStreamIOUtility
__ Metal: _MTLCreateSystemDefaultDevice
__ Metal: _MTLTraceEnabledSPI
__ Metal: _MTLTraceEventSPI
__ Metal: _OBJC_CLASS_$_MTLCommandQueueDescriptor
__ Metal: _OBJC_CLASS_$_MTLDepthStencilDescriptor
__ Metal: _OBJC_CLASS_$_MTLFunctionConstantValues
__ Metal: _OBJC_CLASS_$_MTLRasterizationRateLayerDescriptor
__ Metal: _OBJC_CLASS_$_MTLRasterizationRateMapDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPassDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPipelineDescriptor
__ Metal: _OBJC_CLASS_$_MTLSharedEventListener
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ Metal: _OBJC_CLASS_$_MTLVertexDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageConvolution
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageGuidedFilter
__ Photos: _OBJC_CLASS_$_PHAssetChangeRequest
__ Photos: _OBJC_CLASS_$_PHPhotoLibrary
__ Proximity: _OBJC_CLASS_$_PRCollaborationData
__ Proximity: _OBJC_CLASS_$_PRPeer
__ Proximity: _OBJC_CLASS_$_PRRangingSession
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CARenderServerSnapshot
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DRotate
__ QuartzCore: _CATransform3DScale
__ QuartzCore: _CATransform3DTranslate
__ QuartzCore: _OBJC_CLASS_$_CADisplay
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMetalLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFilterDestOut
__ QuartzCore: _kCAFilterMaximum
__ QuartzCore: _kCASnapshotDestination
__ QuartzCore: _kCASnapshotDisplayName
__ QuartzCore: _kCASnapshotEnforceSecureMode
__ QuartzCore: _kCASnapshotMode
__ QuartzCore: _kCASnapshotModeDisplay
__ QuartzCore: _kCASnapshotOriginX
__ QuartzCore: _kCASnapshotOriginY
__ ReplayKit: _OBJC_CLASS_$_RPScreenRecorder
__ SceneKit: _OBJC_CLASS_$_SCNBox
__ SceneKit: _OBJC_CLASS_$_SCNCamera
__ SceneKit: _OBJC_CLASS_$_SCNGeometry
__ SceneKit: _OBJC_CLASS_$_SCNGeometryElement
__ SceneKit: _OBJC_CLASS_$_SCNGeometrySource
__ SceneKit: _OBJC_CLASS_$_SCNLight
__ SceneKit: _OBJC_CLASS_$_SCNMaterial
__ SceneKit: _OBJC_CLASS_$_SCNMaterialProperty
__ SceneKit: _OBJC_CLASS_$_SCNNode
__ SceneKit: _OBJC_CLASS_$_SCNRendererEvents
__ SceneKit: _OBJC_CLASS_$_SCNRendererViewPoint
__ SceneKit: _OBJC_CLASS_$_SCNScene
__ SceneKit: _OBJC_CLASS_$_SCNTechnique
__ SceneKit: _OBJC_CLASS_$_SCNView
__ SceneKit: _OBJC_METACLASS_$_SCNGeometry
__ SceneKit: _OBJC_METACLASS_$_SCNView
__ SceneKit: _SCNGeometrySourceSemanticNormal
__ SceneKit: _SCNGeometrySourceSemanticTexcoord
__ SceneKit: _SCNGeometrySourceSemanticVertex
__ SceneKit: _SCNLightTypeProbe
__ SceneKit: _SCNLightingModelConstant
__ SceneKit: _SCNPreferredRenderingAPIKey
__ SpriteKit: _OBJC_CLASS_$_SKNode
__ SpriteKit: _OBJC_CLASS_$_SKView
__ SpriteKit: _OBJC_METACLASS_$_SKView
__ StarBoardFoundation: _OBJC_CLASS_$_SRHMEConfig
__ StarBoardFoundation: _OBJC_CLASS_$_SRSceneSettings
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSStringFromCGRect
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIColorEffect
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UIScene
__ UIKit: _OBJC_CLASS_$_UISceneSession
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffect
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$_UIWindowScene
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_METACLASS_$_UIVisualEffectView
__ UIKit: _UIAccessibilityDarkerSystemColorsEnabled
__ UIKit: _UIAccessibilityDarkerSystemColorsStatusDidChangeNotification
__ UIKit: _UIApplicationDidChangeStatusBarOrientationNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIDeviceOrientationDidChangeNotification
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleSubhead
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIRoundToScreenScale
__ UIKit: _UIWindowDidRotateNotification
__ UIKit: _UIWindowNewOrientationUserInfoKey
__ UIKit: _UIWindowWillAnimateRotationNotification
__ UIKit: _UIWindowWillRotateNotification
__ VideoToolbox: _VTImageRotationSessionCreate
__ VideoToolbox: _VTImageRotationSessionInvalidate
__ VideoToolbox: _VTImageRotationSessionRelease
__ VideoToolbox: _VTImageRotationSessionSetProperty
__ VideoToolbox: _VTImageRotationSessionTransferImage
__ VideoToolbox: _VTPixelTransferSessionCreate
__ VideoToolbox: _VTPixelTransferSessionInvalidate
__ VideoToolbox: _VTPixelTransferSessionTransferImage
__ VideoToolbox: _VTSessionSetProperty
__ VideoToolbox: _kVTImageRotationPropertyKey_FlipHorizontalOrientation
__ VideoToolbox: _kVTImageRotationPropertyKey_FlipVerticalOrientation
__ VideoToolbox: _kVTPixelTransferPropertyKey_SourceCropRectangle
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _NSVersionOfRunTimeLibrary
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___cxa_atexit
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___invert_f3
__ libSystem.B.dylib: ___invert_f4
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___sincospif_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _acos
__ libSystem.B.dylib: _acosf
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _asin
__ libSystem.B.dylib: _asinf
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _atan2f
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _cosf
__ libSystem.B.dylib: _cosh
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_pthread_root_queue_create
__ libSystem.B.dylib: _dispatch_queue_attr_make_initially_inactive
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_workloop_create_inactive
__ libSystem.B.dylib: _dispatch_workloop_set_qos_class_floor
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _expf
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fseek
__ libSystem.B.dylib: _fseeko
__ libSystem.B.dylib: _ftello
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _log2
__ libSystem.B.dylib: _log2f
__ libSystem.B.dylib: _logf
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_get_times
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _matrix_identity_float3x3
__ libSystem.B.dylib: _matrix_identity_float4x4
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _mk_timer_arm_leeway
__ libSystem.B.dylib: _mk_timer_cancel
__ libSystem.B.dylib: _mk_timer_create
__ libSystem.B.dylib: _mk_timer_destroy
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _posix_memalign
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _pthread_getschedparam
__ libSystem.B.dylib: _pthread_mach_thread_np
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _pthread_set_fixedpriority_self
__ libSystem.B.dylib: _pthread_set_qos_class_self_np
__ libSystem.B.dylib: _pthread_setname_np
__ libSystem.B.dylib: _pthread_setschedparam
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _rand_r
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _sinf
__ libSystem.B.dylib: _sinh
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _tan
__ libSystem.B.dylib: _tanf
__ libSystem.B.dylib: _thread_policy_set
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _vm_page_mask
__ libSystem.B.dylib: dyld_stub_binder
__ libarchive.2.dylib: _archive_entry_filetype
__ libarchive.2.dylib: _archive_entry_free
__ libarchive.2.dylib: _archive_entry_new
__ libarchive.2.dylib: _archive_entry_pathname
__ libarchive.2.dylib: _archive_entry_set_atime
__ libarchive.2.dylib: _archive_entry_set_birthtime
__ libarchive.2.dylib: _archive_entry_set_ctime
__ libarchive.2.dylib: _archive_entry_set_filetype
__ libarchive.2.dylib: _archive_entry_set_mtime
__ libarchive.2.dylib: _archive_entry_set_pathname
__ libarchive.2.dylib: _archive_entry_set_perm
__ libarchive.2.dylib: _archive_entry_set_size
__ libarchive.2.dylib: _archive_error_string
__ libarchive.2.dylib: _archive_read_data
__ libarchive.2.dylib: _archive_read_free
__ libarchive.2.dylib: _archive_read_new
__ libarchive.2.dylib: _archive_read_next_header
__ libarchive.2.dylib: _archive_read_open_filename
__ libarchive.2.dylib: _archive_read_support_filter_compress
__ libarchive.2.dylib: _archive_read_support_format_zip
__ libarchive.2.dylib: _archive_write_data
__ libarchive.2.dylib: _archive_write_free
__ libarchive.2.dylib: _archive_write_header
__ libarchive.2.dylib: _archive_write_new
__ libarchive.2.dylib: _archive_write_open_filename
__ libarchive.2.dylib: _archive_write_set_format_zip
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9has_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt11logic_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt11logic_errorD1Ev
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt12out_of_rangeD1Ev
__ libc++.1.dylib: __ZNSt13runtime_errorC1EPKc
__ libc++.1.dylib: __ZNSt13runtime_errorD1Ev
__ libc++.1.dylib: __ZNSt19bad_optional_accessD1Ev
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE4peekEv
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6ignoreEli
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC1ERS3_b
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERf
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERi
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeEPKcl
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__14coutE
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16localeC1ERKS0_
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__17codecvtIcc11__mbstate_tE2idE
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt8bad_castC1Ev
__ libc++.1.dylib: __ZNSt8bad_castD1Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__113basic_istreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTINSt3__113basic_ostreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTINSt3__115basic_streambufIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTINSt3__119__shared_weak_countE
__ libc++.1.dylib: __ZTIPKc
__ libc++.1.dylib: __ZTISt11logic_error
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTISt12out_of_range
__ libc++.1.dylib: __ZTISt13runtime_error
__ libc++.1.dylib: __ZTISt19bad_optional_access
__ libc++.1.dylib: __ZTISt8bad_cast
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZTVSt12out_of_range
__ libc++.1.dylib: __ZTVSt19bad_optional_access
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __ZdlPvSt11align_val_t
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: __ZnwmSt11align_val_t
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_rethrow
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
__ libobjc.A.dylib: _object_getClassName
ARMatteGenerator : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long uncertaintyRadius
 @property  unsigned long erosionRadius
 @property  unsigned long dilationRadius

  // instance methods
  -[ARMatteGenerator .cxx_destruct]
  -[ARMatteGenerator uncertaintyRadius]
  -[ARMatteGenerator setUncertaintyRadius:]
  -[ARMatteGenerator erosionRadius]
  -[ARMatteGenerator setErosionRadius:]
  -[ARMatteGenerator _commonInitWithDevice:matteResolution:useSmoothing:]
  -[ARMatteGenerator setupBuffersForFrame:]
  -[ARMatteGenerator setupAlphaBufferForFrame:]
  -[ARMatteGenerator encodeCoefficients:frame:coefficientsForeground:coefficientsBackground:]
  -[ARMatteGenerator setupDepthBufferForFrame:]
  -[ARMatteGenerator initWithDevice:matteResolution:useSmoothing:]
  -[ARMatteGenerator initWithDevice:matteResolution:]
  -[ARMatteGenerator setDilationRadius:]
  -[ARMatteGenerator generateMatteFromFrame:commandBuffer:]
  -[ARMatteGenerator generateDilatedDepthFromFrame:commandBuffer:]
  -[ARMatteGenerator dilationRadius]


AR3DSkeletonRetargetingTechnique : ARTechnique
 @property  ARCoreRESkeletonResults *latestResults
 @property  {ARRigEvaluationData=^{RERigAssetBuilder}^{RERigEvaluation}} evaluationRigData
 @property  NSObject<OS_dispatch_semaphore> *resultSemaphore
 @property  ARWorldTrackingPoseData *currentWorldTrackingPose
 @property  BOOL automaticSkeletonScaleEstimationEnabled

  // instance methods
  -[AR3DSkeletonRetargetingTechnique init]
  -[AR3DSkeletonRetargetingTechnique dealloc]
  -[AR3DSkeletonRetargetingTechnique isEqual:]
  -[AR3DSkeletonRetargetingTechnique .cxx_destruct]
  -[AR3DSkeletonRetargetingTechnique .cxx_construct]
  -[AR3DSkeletonRetargetingTechnique processData:]
  -[AR3DSkeletonRetargetingTechnique evaluationRigData]
  -[AR3DSkeletonRetargetingTechnique _retargetSkeleton:]
  -[AR3DSkeletonRetargetingTechnique setLatestResults:]
  -[AR3DSkeletonRetargetingTechnique latestResults]
  -[AR3DSkeletonRetargetingTechnique setCurrentWorldTrackingPose:]
  -[AR3DSkeletonRetargetingTechnique _estimateCameraPoseFromMatchingImageData:to3DData:pCameraFromBody:pScaleOut:]
  -[AR3DSkeletonRetargetingTechnique currentWorldTrackingPose]
  -[AR3DSkeletonRetargetingTechnique automaticSkeletonScaleEstimationEnabled]
  -[AR3DSkeletonRetargetingTechnique processResultData:timestamp:context:]
  -[AR3DSkeletonRetargetingTechnique requestResultDataAtTimestamp:context:]
  -[AR3DSkeletonRetargetingTechnique setAutomaticSkeletonScaleEstimationEnabled:]
  -[AR3DSkeletonRetargetingTechnique setEvaluationRigData:]
  -[AR3DSkeletonRetargetingTechnique resultSemaphore]
  -[AR3DSkeletonRetargetingTechnique setResultSemaphore:]


ARTrackedRaycastPostProcessor : NSObject /usr/lib/libc++.1.dylib
 @property  ARSession *session
 @property  NSArray *trackedRaycasts

  // instance methods
  -[ARTrackedRaycastPostProcessor dealloc]
  -[ARTrackedRaycastPostProcessor .cxx_destruct]
  -[ARTrackedRaycastPostProcessor session]
  -[ARTrackedRaycastPostProcessor setSession:]
  -[ARTrackedRaycastPostProcessor initWithSession:]
  -[ARTrackedRaycastPostProcessor processInitialResults:forRaycast:]
  -[ARTrackedRaycastPostProcessor invalidateRaycastWithIdentifier:]
  -[ARTrackedRaycastPostProcessor result:isCloseEnoughToInitialResultForRaycast:]
  -[ARTrackedRaycastPostProcessor startUpdateTimer]
  -[ARTrackedRaycastPostProcessor updatePose:referenceOriginTransform:oldRayOrigin:oldRayDirection:newRayOrigin:newRayDirection:]
  -[ARTrackedRaycastPostProcessor updateFromTimer:]
  -[ARTrackedRaycastPostProcessor trackedRaycasts]
  -[ARTrackedRaycastPostProcessor addTrackedRaycast:andProcessInitialResults:]
  -[ARTrackedRaycastPostProcessor removeTrackedRaycastWithIdentifier:]
  -[ARTrackedRaycastPostProcessor invalidateAllRaycasts]
  -[ARTrackedRaycastPostProcessor processUpdatedResults:]
  -[ARTrackedRaycastPostProcessor performBlockWhileLockingRaycasts:]
  -[ARTrackedRaycastPostProcessor updateFromPoseGraphEventWithData:referenceOriginTransform:]


ARDualGuidedFilter : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long uncertaintyRadius
 @property  unsigned long erosionRadius
 @property  double epsilon

  // instance methods
  -[ARDualGuidedFilter .cxx_destruct]
  -[ARDualGuidedFilter epsilon]
  -[ARDualGuidedFilter setEpsilon:]
  -[ARDualGuidedFilter initWithDevice:useSmoothing:]
  -[ARDualGuidedFilter uncertaintyRadius]
  -[ARDualGuidedFilter setUncertaintyRadius:]
  -[ARDualGuidedFilter erosionRadius]
  -[ARDualGuidedFilter setErosionRadius:]
  -[ARDualGuidedFilter encodeDualCoefficients:guide:stencil:coefficientsTextureFG:coefficientsTextureBG:]
  -[ARDualGuidedFilter setupBuffersWithWidth:andHeight:]
  -[ARDualGuidedFilter encodeBoxBlurToCommandBuffer:input:intermediate:output:]


ARTrackedRaycast : NSObject /usr/lib/libc++.1.dylib
 @property  NSUUID *identifier
 @property  @? updateHandler
 @property  ARWorldTrackingTechnique *attachedWorldTrackingTechnique
 @property  ARRaycastQuery *trackedQuery

  // instance methods
  -[ARTrackedRaycast query]
  -[ARTrackedRaycast .cxx_destruct]
  -[ARTrackedRaycast identifier]
  -[ARTrackedRaycast updateHandler]
  -[ARTrackedRaycast stopTracking]
  -[ARTrackedRaycast setTrackedQuery:]
  -[ARTrackedRaycast attachedWorldTrackingTechnique]
  -[ARTrackedRaycast setAttachedWorldTrackingTechnique:]
  -[ARTrackedRaycast initWithIdentifier:ray:worldTrackingTechnique:updateHandler:]
  -[ARTrackedRaycast trackedQuery]


AR2DSkeletonDetectionTechnique : ARMLImageProcessingTechnique
  // instance methods
  -[AR2DSkeletonDetectionTechnique init]
  -[AR2DSkeletonDetectionTechnique .cxx_destruct]
  -[AR2DSkeletonDetectionTechnique .cxx_construct]
  -[AR2DSkeletonDetectionTechnique _startLoadingMLModelSignpost]
  -[AR2DSkeletonDetectionTechnique _endLoadingMLModelSignpost]
  -[AR2DSkeletonDetectionTechnique _startMLProcessingSignpostWithTimestamp:]
  -[AR2DSkeletonDetectionTechnique _endMLProcessingSignpostWithTimestamp:]
  -[AR2DSkeletonDetectionTechnique _startMLRunNetworkSignpostWithTimestamp:]
  -[AR2DSkeletonDetectionTechnique _endMLRunNetworkSignpostWithTimestamp:]
  -[AR2DSkeletonDetectionTechnique _startMLCreateResultSignpostWithTimestamp:orientation:outputSize:]
  -[AR2DSkeletonDetectionTechnique _endMLCreateResultSignpostWithTimestamp:]
  -[AR2DSkeletonDetectionTechnique changeEspressoConfig:]
  -[AR2DSkeletonDetectionTechnique requiredTimeInterval]
  -[AR2DSkeletonDetectionTechnique networkInputParams]
  -[AR2DSkeletonDetectionTechnique defaultEngine]
  -[AR2DSkeletonDetectionTechnique createResultDataFromTensors:numberOfOutputTensors:imageDataForNeuralNetwork:inputImageData:rotationNeeded:regionOfInterest:]


AR2DSkeletonDetectionPostProcessingTechnique : ARImageBasedTechnique
 @property  AR2DSkeletonRawEspressoResult *previousRawEspressoResult

  // instance methods
  -[AR2DSkeletonDetectionPostProcessingTechnique init]
  -[AR2DSkeletonDetectionPostProcessingTechnique .cxx_destruct]
  -[AR2DSkeletonDetectionPostProcessingTechnique .cxx_construct]
  -[AR2DSkeletonDetectionPostProcessingTechnique processData:]
  -[AR2DSkeletonDetectionPostProcessingTechnique requiredTimeInterval]
  -[AR2DSkeletonDetectionPostProcessingTechnique previousRawEspressoResult]
  -[AR2DSkeletonDetectionPostProcessingTechnique setPreviousRawEspressoResult:]


ARPersonDetectionTechnique : ARMLImageProcessingTechnique <ARTechniqueBusyState>
 @property  ARPersonDetectionData *latestResult
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isBusy

  // instance methods
  -[ARPersonDetectionTechnique init]
  -[ARPersonDetectionTechnique dealloc]
  -[ARPersonDetectionTechnique .cxx_destruct]
  -[ARPersonDetectionTechnique _startLoadingMLModelSignpost]
  -[ARPersonDetectionTechnique _endLoadingMLModelSignpost]
  -[ARPersonDetectionTechnique _startMLProcessingSignpostWithTimestamp:]
  -[ARPersonDetectionTechnique _endMLProcessingSignpostWithTimestamp:]
  -[ARPersonDetectionTechnique _startMLRunNetworkSignpostWithTimestamp:]
  -[ARPersonDetectionTechnique _endMLRunNetworkSignpostWithTimestamp:]
  -[ARPersonDetectionTechnique _startMLCreateResultSignpostWithTimestamp:orientation:outputSize:]
  -[ARPersonDetectionTechnique _endMLCreateResultSignpostWithTimestamp:]
  -[ARPersonDetectionTechnique changeEspressoConfig:]
  -[ARPersonDetectionTechnique requiredTimeInterval]
  -[ARPersonDetectionTechnique createResultDataFromTensors:numberOfOutputTensors:imageDataForNeuralNetwork:inputImageData:rotationNeeded:regionOfInterest:]
  -[ARPersonDetectionTechnique sigmoid:]
  -[ARPersonDetectionTechnique resultDataClasses]
  -[ARPersonDetectionTechnique isLoadedModelVersionCorrect:]
  -[ARPersonDetectionTechnique latestResult]
  -[ARPersonDetectionTechnique setLatestResult:]


AR2DSkeletonDetectionResult : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  unsigned long jointCount
 @property  r^ joints
 @property  r* jointTrackingStates
 @property  r^ rawJointsOutput
 @property  r^f liftingData3D
 @property  unsigned long liftingJointCount
 @property  AR2D3DSkeletonLiftingData *liftingData

  // class methods
  +[AR2DSkeletonDetectionResult supportsSecureCoding]

  // instance methods
  -[AR2DSkeletonDetectionResult isEqual:]
  -[AR2DSkeletonDetectionResult copyWithZone:]
  -[AR2DSkeletonDetectionResult encodeWithCoder:]
  -[AR2DSkeletonDetectionResult initWithCoder:]
  -[AR2DSkeletonDetectionResult .cxx_destruct]
  -[AR2DSkeletonDetectionResult .cxx_construct]
  -[AR2DSkeletonDetectionResult joints]
  -[AR2DSkeletonDetectionResult liftingData]
  -[AR2DSkeletonDetectionResult jointCount]
  -[AR2DSkeletonDetectionResult initWithJoints:trackingStates:numberOfJoints:rotation:croppedRect:liftingData:]
  -[AR2DSkeletonDetectionResult liftingData3D]
  -[AR2DSkeletonDetectionResult rawJointsOutput]
  -[AR2DSkeletonDetectionResult jointTrackingStates]
  -[AR2DSkeletonDetectionResult liftingJointCount]
  -[AR2DSkeletonDetectionResult computeDistanceBetweenSkeletonDetectionResult:]


AR2DSkeletonDetectionResults : NSObject /usr/lib/libc++.1.dylib <AREspressoTensorResultData, NSCopying>
 @property  NSArray *detectedSkeletons
 @property  double timestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AR2DSkeletonDetectionResults init]
  -[AR2DSkeletonDetectionResults copyWithZone:]
  -[AR2DSkeletonDetectionResults .cxx_destruct]
  -[AR2DSkeletonDetectionResults timestamp]
  -[AR2DSkeletonDetectionResults setTimestamp:]
  -[AR2DSkeletonDetectionResults detectedSkeletons]
  -[AR2DSkeletonDetectionResults setDetectedSkeletons:]


AR2DSkeletonRawEspressoResult : NSObject /usr/lib/libc++.1.dylib <ARResultData>
 @property  ^v outputTensors
 @property  unsigned long numberOfOutputTensors
 @property  ARImageData *imageDataForNeuralNetwork
 @property  ARImageData *inputImageData
 @property  long long rotationNeeded
 @property  {CGSize=dd} regionOfInterest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AR2DSkeletonRawEspressoResult .cxx_destruct]
  -[AR2DSkeletonRawEspressoResult regionOfInterest]
  -[AR2DSkeletonRawEspressoResult setRegionOfInterest:]
  -[AR2DSkeletonRawEspressoResult setOutputTensors:]
  -[AR2DSkeletonRawEspressoResult setNumberOfOutputTensors:]
  -[AR2DSkeletonRawEspressoResult setImageDataForNeuralNetwork:]
  -[AR2DSkeletonRawEspressoResult setInputImageData:]
  -[AR2DSkeletonRawEspressoResult setRotationNeeded:]
  -[AR2DSkeletonRawEspressoResult outputTensors]
  -[AR2DSkeletonRawEspressoResult rotationNeeded]
  -[AR2DSkeletonRawEspressoResult imageDataForNeuralNetwork]
  -[AR2DSkeletonRawEspressoResult inputImageData]
  -[AR2DSkeletonRawEspressoResult numberOfOutputTensors]


AR3DSkeletonLiftingTechnique : ARMLImageProcessingTechnique
  // class methods
  +[AR3DSkeletonLiftingTechnique _adjustBoneLength:count:]
  +[AR3DSkeletonLiftingTechnique _transformRelativeToHip:count:]

  // instance methods
  -[AR3DSkeletonLiftingTechnique init]
  -[AR3DSkeletonLiftingTechnique .cxx_destruct]
  -[AR3DSkeletonLiftingTechnique _startLoadingMLModelSignpost]
  -[AR3DSkeletonLiftingTechnique _endLoadingMLModelSignpost]
  -[AR3DSkeletonLiftingTechnique _startMLProcessingSignpostWithTimestamp:]
  -[AR3DSkeletonLiftingTechnique _endMLProcessingSignpostWithTimestamp:]
  -[AR3DSkeletonLiftingTechnique _startMLRunNetworkSignpostWithTimestamp:]
  -[AR3DSkeletonLiftingTechnique _endMLRunNetworkSignpostWithTimestamp:]
  -[AR3DSkeletonLiftingTechnique _startMLCreateResultSignpostWithTimestamp:orientation:outputSize:]
  -[AR3DSkeletonLiftingTechnique _endMLCreateResultSignpostWithTimestamp:]
  -[AR3DSkeletonLiftingTechnique changeEspressoConfig:]
  -[AR3DSkeletonLiftingTechnique requiredTimeInterval]
  -[AR3DSkeletonLiftingTechnique requiredSensorDataTypes]
  -[AR3DSkeletonLiftingTechnique processEspressoTensor:]


ARGPUSphericalBlur : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ARGPUSphericalBlur init]
  -[ARGPUSphericalBlur .cxx_destruct]
  -[ARGPUSphericalBlur blurCubemapTexture:roughness:rotation:]


ARImageTrackingTechnique : ARImageDetectionTechnique
  // instance methods
  -[ARImageTrackingTechnique initWithReferenceImages:maximumNumberOfTrackedImages:deterministicMode:]
  -[ARImageTrackingTechnique initWithReferenceImages:maximumNumberOfTrackedImages:]


ARReferenceImageCachedError : NSObject /usr/lib/libc++.1.dylib
 @property  NSError *error

  // instance methods
  -[ARReferenceImageCachedError .cxx_destruct]
  -[ARReferenceImageCachedError error]
  -[ARReferenceImageCachedError setError:]


ARReferenceImage : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  double estimatedQuality
 @property  ARReferenceImageCachedError *cachedVerificationError
 @property  {CGSize=dd} imageSize
 @property  ^{__CVBuffer=} pixelBuffer
 @property  ^{__CVBuffer=} alphaMask
 @property  NSUUID *identifier
 @property  NSString *name
 @property  {CGSize=dd} physicalSize
 @property  NSString *resourceGroupName

  // class methods
  +[ARReferenceImage supportsSecureCoding]
  +[ARReferenceImage referenceImagesInGroupNamed:catalogName:bundle:]
  +[ARReferenceImage referenceImagesInGroupNamed:catalog:]
  +[ARReferenceImage referenceImagesInGroupNamed:bundle:]
  +[ARReferenceImage referenceImagesInGroupNamed:catalogURL:]

  // instance methods
  -[ARReferenceImage dealloc]
  -[ARReferenceImage isEqual:]
  -[ARReferenceImage name]
  -[ARReferenceImage copyWithZone:]
  -[ARReferenceImage encodeWithCoder:]
  -[ARReferenceImage initWithCoder:]
  -[ARReferenceImage .cxx_destruct]
  -[ARReferenceImage setName:]
  -[ARReferenceImage identifier]
  -[ARReferenceImage pixelBuffer]
  -[ARReferenceImage imageSize]
  -[ARReferenceImage physicalSize]
  -[ARReferenceImage initWithCIImage:orientation:physicalWidth:alphaInfo:addPadding:]
  -[ARReferenceImage initWithCGImage:orientation:physicalWidth:addPadding:]
  -[ARReferenceImage setResourceGroupName:]
  -[ARReferenceImage estimatedQuality]
  -[ARReferenceImage cachedVerificationError]
  -[ARReferenceImage setCachedVerificationError:]
  -[ARReferenceImage initWithPixelBuffer:orientation:physicalWidth:addPadding:]
  -[ARReferenceImage initWithCGImage:orientation:physicalWidth:]
  -[ARReferenceImage initWithPixelBuffer:orientation:physicalWidth:]
  -[ARReferenceImage validateWithCompletionHandler:]
  -[ARReferenceImage estimateQualityWithCompletionHandler:]
  -[ARReferenceImage resourceGroupName]
  -[ARReferenceImage setEstimatedQuality:]
  -[ARReferenceImage alphaMask]


AR3DSkeletonDetectionResult : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  unsigned long jointCount
 @property  r^ joints
 @property  AR2DSkeletonDetectionResult *skeletonDetectionResult2D

  // class methods
  +[AR3DSkeletonDetectionResult supportsSecureCoding]
  +[AR3DSkeletonDetectionResult childrenIndices]
  +[AR3DSkeletonDetectionResult jointNames]
  +[AR3DSkeletonDetectionResult parentIndices]

  // instance methods
  -[AR3DSkeletonDetectionResult isEqual:]
  -[AR3DSkeletonDetectionResult copyWithZone:]
  -[AR3DSkeletonDetectionResult encodeWithCoder:]
  -[AR3DSkeletonDetectionResult initWithCoder:]
  -[AR3DSkeletonDetectionResult .cxx_destruct]
  -[AR3DSkeletonDetectionResult .cxx_construct]
  -[AR3DSkeletonDetectionResult joints]
  -[AR3DSkeletonDetectionResult createResultScaledByFactor:]
  -[AR3DSkeletonDetectionResult skeletonDetectionResult2D]
  -[AR3DSkeletonDetectionResult jointCount]
  -[AR3DSkeletonDetectionResult initWithJoints:numberOfJoints:referenceDetectionResult:]
  -[AR3DSkeletonDetectionResult isJointTracked:]


AR3DSkeletonDetectionResults : NSObject /usr/lib/libc++.1.dylib <ARResultData, NSCopying>
 @property  NSArray *detectedSkeletons
 @property  double timestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AR3DSkeletonDetectionResults copyWithZone:]
  -[AR3DSkeletonDetectionResults .cxx_destruct]
  -[AR3DSkeletonDetectionResults timestamp]
  -[AR3DSkeletonDetectionResults setTimestamp:]
  -[AR3DSkeletonDetectionResults detectedSkeletons]
  -[AR3DSkeletonDetectionResults setDetectedSkeletons:]


AREnvironmentTexturingTechnique : ARTechnique
 @property  AREnvironmentProbeManager *probeManager
 @property  BOOL networkIntialized
 @property  BOOL wantsHDREnvironmentTextures

  // instance methods
  -[AREnvironmentTexturingTechnique isEqual:]
  -[AREnvironmentTexturingTechnique .cxx_destruct]
  -[AREnvironmentTexturingTechnique prepare]
  -[AREnvironmentTexturingTechnique processData:]
  -[AREnvironmentTexturingTechnique requestResultDataAtTimestamp:context:]
  -[AREnvironmentTexturingTechnique requiredSensorDataTypes]
  -[AREnvironmentTexturingTechnique probeManager]
  -[AREnvironmentTexturingTechnique setProbeManager:]
  -[AREnvironmentTexturingTechnique networkIntialized]
  -[AREnvironmentTexturingTechnique setNetworkIntialized:]
  -[AREnvironmentTexturingTechnique wantsHDREnvironmentTextures]
  -[AREnvironmentTexturingTechnique initWithOptions:wantsHDREnvironmentTextures:]
  -[AREnvironmentTexturingTechnique reconfigurableFrom:]
  -[AREnvironmentTexturingTechnique reconfigureFrom:]


ARImageData : NSObject /usr/lib/libc++.1.dylib <ARDictionaryCoding, ARSensorData, NSCopying, NSSecureCoding>
 @property  double timestamp
 @property  NSDate *captureDate
 @property  double currentCaptureTimestamp
 @property  {?=[3]} cameraIntrinsics
 @property  ^{__CVBuffer=} pixelBuffer
 @property  BOOL mirrored
 @property  {CGSize=dd} imageResolution
 @property  unsigned long lensType
 @property  void radialDistortion
 @property  void tangentialDistortion
 @property  double exposureDuration
 @property  float exposureTargetOffset
 @property  float temperature
 @property  float signalToNoiseRatio
 @property  float ISO
 @property  long long deviceOrientation
 @property  ARFaceData *faceData
 @property  AVDepthData *depthData
 @property  double depthDataTimestamp
 @property  ^{__CVBuffer=} visionData
 @property  long long cameraPosition
 @property  NSString *cameraType
 @property  long long captureFramesPerSecond
 @property  ARImageData *originalImage
 @property  BOOL secondary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARImageData supportsSecureCoding]
  +[ARImageData captureDateFromPresentationTimestamp:session:]

  // instance methods
  -[ARImageData dealloc]
  -[ARImageData isEqual:]
  -[ARImageData copyWithZone:]
  -[ARImageData encodeWithCoder:]
  -[ARImageData initWithCoder:]
  -[ARImageData .cxx_destruct]
  -[ARImageData initWithDictionary:]
  -[ARImageData timestamp]
  -[ARImageData setTimestamp:]
  -[ARImageData pixelBuffer]
  -[ARImageData depthData]
  -[ARImageData cameraType]
  -[ARImageData cameraIntrinsics]
  -[ARImageData setCameraIntrinsics:]
  -[ARImageData deviceOrientation]
  -[ARImageData setDeviceOrientation:]
  -[ARImageData initWithImageData:]
  -[ARImageData setTemperature:]
  -[ARImageData temperature]
  -[ARImageData lensType]
  -[ARImageData captureDate]
  -[ARImageData setCaptureDate:]
  -[ARImageData exposureDuration]
  -[ARImageData ISO]
  -[ARImageData exposureTargetOffset]
  -[ARImageData isMirrored]
  -[ARImageData setMirrored:]
  -[ARImageData originalImage]
  -[ARImageData setCameraType:]
  -[ARImageData setPixelBuffer:]
  -[ARImageData setExposureDuration:]
  -[ARImageData cameraPosition]
  -[ARImageData setCameraPosition:]
  -[ARImageData setSecondary:]
  -[ARImageData imageResolution]
  -[ARImageData visionData]
  -[ARImageData setVisionData:]
  -[ARImageData currentCaptureTimestamp]
  -[ARImageData radialDistortion]
  -[ARImageData tangentialDistortion]
  -[ARImageData signalToNoiseRatio]
  -[ARImageData faceData]
  -[ARImageData depthDataTimestamp]
  -[ARImageData captureFramesPerSecond]
  -[ARImageData isSecondary]
  -[ARImageData initWithPixelBuffer:captureFramePerSecond:captureDevice:captureSession:timestamp:intrinsics:exif:]
  -[ARImageData matchesPixelBufferPointerRecursively:]
  -[ARImageData setCurrentCaptureTimestamp:]
  -[ARImageData setExposureTargetOffset:]
  -[ARImageData setSignalToNoiseRatio:]
  -[ARImageData setISO:]
  -[ARImageData setLensType:]
  -[ARImageData setRadialDistortion:]
  -[ARImageData setTangentialDistortion:]
  -[ARImageData setCaptureFramesPerSecond:]
  -[ARImageData setFaceData:]
  -[ARImageData setDepthData:]
  -[ARImageData setDepthDataTimestamp:]
  -[ARImageData encodeToDictionary]
  -[ARImageData initWithSampleBuffer:captureFramePerSecond:captureDevice:captureSession:]
  -[ARImageData setImageResolution:]


ARModifiedImageData : ARImageData
 @property  ARImageData *originalImage
 @property  NSDictionary *metaData

  // instance methods
  -[ARModifiedImageData .cxx_destruct]
  -[ARModifiedImageData initWithImageData:]
  -[ARModifiedImageData metaData]
  -[ARModifiedImageData setMetaData:]
  -[ARModifiedImageData originalImage]


ARCameraParameters : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  {CGSize=dd} imageResolution
 @property  {CGPoint=dd} focalLength
 @property  {CGPoint=dd} principalPoint

  // class methods
  +[ARCameraParameters supportsSecureCoding]

  // instance methods
  -[ARCameraParameters copyWithZone:]
  -[ARCameraParameters encodeWithCoder:]
  -[ARCameraParameters initWithCoder:]
  -[ARCameraParameters focalLength]
  -[ARCameraParameters imageResolution]
  -[ARCameraParameters principalPoint]
  -[ARCameraParameters initWithFocalLength:imageResolution:principalPoint:]


ARImageBasedTechnique : ARTechnique
  // instance methods
  -[ARImageBasedTechnique init]
  -[ARImageBasedTechnique .cxx_destruct]
  -[ARImageBasedTechnique processData:]
  -[ARImageBasedTechnique requestResultDataAtTimestamp:context:]
  -[ARImageBasedTechnique pushResultData:forTimestamp:]
  -[ARImageBasedTechnique context:matchesFrameReference:]
  -[ARImageBasedTechnique prepareResultData:forContext:]
  -[ARImageBasedTechnique pushResultData:forFrameReference:]
  -[ARImageBasedTechnique pushResultData:forFrame:]


ARImageDetectionTechnique : ARImageBasedTechnique
 @property  ARWorldTrackingPoseData *currentWorldTrackingPose
 @property  ARODTHandleManager *odtTHandleManger
 @property  NSDictionary *referenceImageMap
 @property  BOOL finishedLoadingImages
 @property  BOOL enableAutomaticImageScaleEstimation

  // class methods
  +[ARImageDetectionTechnique _redetectionRequiredForContext:]

  // instance methods
  -[ARImageDetectionTechnique isEqual:]
  -[ARImageDetectionTechnique .cxx_destruct]
  -[ARImageDetectionTechnique .cxx_construct]
  -[ARImageDetectionTechnique prepare]
  -[ARImageDetectionTechnique processData:]
  -[ARImageDetectionTechnique setCurrentWorldTrackingPose:]
  -[ARImageDetectionTechnique currentWorldTrackingPose]
  -[ARImageDetectionTechnique processResultData:timestamp:context:]
  -[ARImageDetectionTechnique requiredTimeInterval]
  -[ARImageDetectionTechnique requiredSensorDataTypes]
  -[ARImageDetectionTechnique initWithReferenceImages:maximumNumberOfTrackedImages:continuousDetection:deterministicMode:processingQueue:]
  -[ARImageDetectionTechnique initWithReferenceImages:maximumNumberOfTrackedImages:]
  -[ARImageDetectionTechnique initWithReferenceImages:maximumNumberOfTrackedImages:processingQueue:]
  -[ARImageDetectionTechnique odtTHandleManger]
  -[ARImageDetectionTechnique syncWithProcessedImage]
  -[ARImageDetectionTechnique finishedLoadingImages]
  -[ARImageDetectionTechnique _enqueueImageForTrackingSynced:]
  -[ARImageDetectionTechnique _enqueueImageForTrackingNonBlocking:]
  -[ARImageDetectionTechnique referenceImageMap]
  -[ARImageDetectionTechnique _addReferenceImagesAppleCV3D]
  -[ARImageDetectionTechnique _loadReferenceImages]
  -[ARImageDetectionTechnique _trackImagesWithImageData:timeBudget:]
  -[ARImageDetectionTechnique enableAutomaticImageScaleEstimation]
  -[ARImageDetectionTechnique setPowerUsage:]
  -[ARImageDetectionTechnique updateDevicePerformanceLevel:]
  -[ARImageDetectionTechnique initWithReferenceImages:]
  -[ARImageDetectionTechnique captureBehavior]
  -[ARImageDetectionTechnique deterministicMode]
  -[ARImageDetectionTechnique predictAtTimeStamp:timeBudget:predictedWorldTrackingPose:]
  -[ARImageDetectionTechnique updateARPresentationMode:]
  -[ARImageDetectionTechnique setEnableAutomaticImageScaleEstimation:]


ARMLImageDownScalingTechnique : ARImageBasedTechnique
 @property  BOOL centerCropImage
 @property  BOOL generateMattingMetaData

  // instance methods
  -[ARMLImageDownScalingTechnique dealloc]
  -[ARMLImageDownScalingTechnique isEqual:]
  -[ARMLImageDownScalingTechnique .cxx_destruct]
  -[ARMLImageDownScalingTechnique initWithSize:]
  -[ARMLImageDownScalingTechnique processData:]
  -[ARMLImageDownScalingTechnique requiredTimeInterval]
  -[ARMLImageDownScalingTechnique centerCropImage]
  -[ARMLImageDownScalingTechnique _getDeviceOrientation]
  -[ARMLImageDownScalingTechnique _imageDataForNeuralNetwork:scaledSize:deviceOrientation:pRegionOfInterest:pRotationOfResultTensor:]
  -[ARMLImageDownScalingTechnique _convertImageColorSpace:]
  -[ARMLImageDownScalingTechnique generateMattingMetaData]
  -[ARMLImageDownScalingTechnique initWithSize:requiredTimeInterval:]
  -[ARMLImageDownScalingTechnique lockOrientation:]
  -[ARMLImageDownScalingTechnique setCenterCropImage:]
  -[ARMLImageDownScalingTechnique setGenerateMattingMetaData:]


ARFaceTrackingData : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSUUID *identifier
 @property  BOOL isValid
 @property  NSDictionary *trackingData
 @property  {?=[4]} transform
 @property  {?=[4]} leftEyeTransform
 @property  {?=[4]} rightEyeTransform
 @property  void gazePoint
 @property  unsigned long vertexCount
 @property  r^ vertices
 @property  r^ imageVertices
 @property  unsigned long normalCount
 @property  r^ normals
 @property  unsigned long blendShapeCoefficientsCount
 @property  r^f blendShapeCoefficients
 @property  NSError *trackingError
 @property  float tongueOut

  // class methods
  +[ARFaceTrackingData supportsSecureCoding]
  +[ARFaceTrackingData sharedNeutralGeometry]

  // instance methods
  -[ARFaceTrackingData isEqual:]
  -[ARFaceTrackingData copyWithZone:]
  -[ARFaceTrackingData isValid]
  -[ARFaceTrackingData encodeWithCoder:]
  -[ARFaceTrackingData initWithCoder:]
  -[ARFaceTrackingData .cxx_destruct]
  -[ARFaceTrackingData identifier]
  -[ARFaceTrackingData transform]
  -[ARFaceTrackingData .cxx_construct]
  -[ARFaceTrackingData vertices]
  -[ARFaceTrackingData initPrivate]
  -[ARFaceTrackingData vertexCount]
  -[ARFaceTrackingData initWithTrackingData:transformToMirrored:anchorIdentifier:]
  -[ARFaceTrackingData _extractMetaDataAndTransformToMirrored:]
  -[ARFaceTrackingData trackingData]
  -[ARFaceTrackingData initWithTrackingData:anchorIdentifier:]
  -[ARFaceTrackingData blendShapeCoefficientsCount]
  -[ARFaceTrackingData blendShapeCoefficients]
  -[ARFaceTrackingData normalCount]
  -[ARFaceTrackingData normals]
  -[ARFaceTrackingData imageVertices]
  -[ARFaceTrackingData leftEyeTransform]
  -[ARFaceTrackingData rightEyeTransform]
  -[ARFaceTrackingData gazePoint]
  -[ARFaceTrackingData trackingError]
  -[ARFaceTrackingData tongueOut]


ARFaceTrackingResults : NSObject /usr/lib/libc++.1.dylib <ARResultData>
 @property  NSArray *trackedFaces
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARFaceTrackingResults .cxx_destruct]
  -[ARFaceTrackingResults anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARFaceTrackingResults trackedFaces]
  -[ARFaceTrackingResults setTrackedFaces:]


ARImageRotationTechnique : ARTechnique
 @property  long long rotationAngle
 @property  long long mirrorMode

  // instance methods
  -[ARImageRotationTechnique dealloc]
  -[ARImageRotationTechnique isEqual:]
  -[ARImageRotationTechnique rotationAngle]
  -[ARImageRotationTechnique processData:]
  -[ARImageRotationTechnique requiredSensorDataTypes]
  -[ARImageRotationTechnique mirrorMode]
  -[ARImageRotationTechnique initWithRotation:mirror:]
  -[ARImageRotationTechnique _rotateAccelerate:pOutputBuffer:]


ARFaceTrackingImageSensor : ARImageSensor <AVCaptureMetadataOutputObjectsDelegate>
 @property  BOOL recordingMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARFaceTrackingImageSensor dealloc]
  -[ARFaceTrackingImageSensor .cxx_destruct]
  -[ARFaceTrackingImageSensor stop]
  -[ARFaceTrackingImageSensor captureOutput:didOutputSampleBuffer:fromConnection:]
  -[ARFaceTrackingImageSensor captureOutput:didOutputMetadataObjects:fromConnection:]
  -[ARFaceTrackingImageSensor dataOutputSynchronizer:didOutputSynchronizedDataCollection:]
  -[ARFaceTrackingImageSensor initWithSettings:captureSession:captureQueue:]
  -[ARFaceTrackingImageSensor configureCaptureSession]
  -[ARFaceTrackingImageSensor _configureMetaDataOutput]
  -[ARFaceTrackingImageSensor configureCaptureDevice]
  -[ARFaceTrackingImageSensor prepareToStart]
  -[ARFaceTrackingImageSensor capturedSynchedOutput:didOutputSampleBuffer:fromVideoConnection:metaDataOutput:didOutputMetadataObjects:didOutputDepthData:atTime:]
  -[ARFaceTrackingImageSensor recordingMode]
  -[ARFaceTrackingImageSensor providedDataTypes]
  -[ARFaceTrackingImageSensor outputsForSynchronizer]
  -[ARFaceTrackingImageSensor setRecordingMode:]


ARMotionSensor : NSObject /usr/lib/libc++.1.dylib <ARSensor>
 @property  double interval
 @property  <ARSensorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long powerUsage

  // instance methods
  -[ARMotionSensor dealloc]
  -[ARMotionSensor delegate]
  -[ARMotionSensor setDelegate:]
  -[ARMotionSensor .cxx_destruct]
  -[ARMotionSensor stop]
  -[ARMotionSensor start]
  -[ARMotionSensor interval]
  -[ARMotionSensor setInterval:]
  -[ARMotionSensor preferredInterval]
  -[ARMotionSensor providedDataTypes]
  -[ARMotionSensor gyroscopeOutput:]
  -[ARMotionSensor accelerometerOutput:]
  -[ARMotionSensor initWithMotionManager:]


ARAnchor : NSObject /usr/lib/libc++.1.dylib <ARAnchorCopying, NSSecureCoding>
 @property  NSUUID *sessionIdentifier
 @property  {?=[4]} transform
 @property  {?=[4]} referenceTransform
 @property  double lastUpdateTimestamp
 @property  NSUUID *identifier
 @property  NSString *name

  // class methods
  +[ARAnchor supportsSecureCoding]

  // instance methods
  -[ARAnchor isEqual:]
  -[ARAnchor name]
  -[ARAnchor copyWithZone:]
  -[ARAnchor encodeWithCoder:]
  -[ARAnchor initWithCoder:]
  -[ARAnchor .cxx_destruct]
  -[ARAnchor identifier]
  -[ARAnchor initWithTransform:]
  -[ARAnchor transform]
  -[ARAnchor initWithAnchor:]
  -[ARAnchor debugQuickLookObject]
  -[ARAnchor setTransform:]
  -[ARAnchor sessionIdentifier]
  -[ARAnchor setSessionIdentifier:]
  -[ARAnchor _description:]
  -[ARAnchor setLastUpdateTimestamp:]
  -[ARAnchor lastUpdateTimestamp]
  -[ARAnchor isEqualToAnchor:]
  -[ARAnchor referenceTransform]
  -[ARAnchor initWithName:transform:]
  -[ARAnchor initWithIdentifier:transform:]
  -[ARAnchor setReferenceTransform:]


ARIOMotionSensor : NSObject /usr/lib/libc++.1.dylib <ARSensor>
 @property  <ARSensorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long powerUsage

  // instance methods
  -[ARIOMotionSensor init]
  -[ARIOMotionSensor dealloc]
  -[ARIOMotionSensor delegate]
  -[ARIOMotionSensor setDelegate:]
  -[ARIOMotionSensor .cxx_destruct]
  -[ARIOMotionSensor stop]
  -[ARIOMotionSensor start]
  -[ARIOMotionSensor preferredSampleRate]
  -[ARIOMotionSensor providedDataTypes]
  -[ARIOMotionSensor accelerometerDidOutputEvent:timestamp:]
  -[ARIOMotionSensor gyroscopeDidOutputEvent:timestamp:]


ARFaceTrackingInternalTechnique : ARImageBasedTechnique
 @property  long long maximumNumberOfTrackedFaces

  // class methods
  +[ARFaceTrackingInternalTechnique initialize]
  +[ARFaceTrackingInternalTechnique isSupported]

  // instance methods
  -[ARFaceTrackingInternalTechnique init]
  -[ARFaceTrackingInternalTechnique dealloc]
  -[ARFaceTrackingInternalTechnique isEqual:]
  -[ARFaceTrackingInternalTechnique initWithOptions:]
  -[ARFaceTrackingInternalTechnique .cxx_destruct]
  -[ARFaceTrackingInternalTechnique processData:]
  -[ARFaceTrackingInternalTechnique requiredTimeInterval]
  -[ARFaceTrackingInternalTechnique resultDataClasses]
  -[ARFaceTrackingInternalTechnique requiredSensorDataTypes]
  -[ARFaceTrackingInternalTechnique captureBehavior]
  -[ARFaceTrackingInternalTechnique initWithMaximumNumberOfTrackedFaces:options:]
  -[ARFaceTrackingInternalTechnique _enqueueImageForFaceTrackingNonBlocking:]
  -[ARFaceTrackingInternalTechnique faceTrackingOptionsFromImageData:withCallback:]
  -[ARFaceTrackingInternalTechnique maximumNumberOfTrackedFaces]


ARPointCloud : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  unsigned long count
 @property  r^ points
 @property  r^Q identifiers

  // class methods
  +[ARPointCloud supportsSecureCoding]
  +[ARPointCloud concatPointClouds:]
  +[ARPointCloud emptyPointCloud]

  // instance methods
  -[ARPointCloud isEqual:]
  -[ARPointCloud count]
  -[ARPointCloud encodeWithCoder:]
  -[ARPointCloud initWithCoder:]
  -[ARPointCloud .cxx_destruct]
  -[ARPointCloud .cxx_construct]
  -[ARPointCloud points]
  -[ARPointCloud identifiers]
  -[ARPointCloud centroid]
  -[ARPointCloud standardDeviation]
  -[ARPointCloud initWithPointsVector:identifiersVector:]
  -[ARPointCloud initWithPointsVector:identifiersVector:vergenceAngleCosinesVector:]
  -[ARPointCloud vergenceAngleCosines]
  -[ARPointCloud initWithPointData:]
  -[ARPointCloud computeBounds]
  -[ARPointCloud filterPointCloudFrom:ellipsoid:]
  -[ARPointCloud filterPointCloudWithIdentifiers:]
  -[ARPointCloud _hitTestPointFromOrigin:withDirection:maximumAngle:]
  -[ARPointCloud pointCloudByApplyingTransform:]


ARImageCroppingTechnique : ARTechnique
 @property  {CGSize=dd} croppedImageSize

  // instance methods
  -[ARImageCroppingTechnique dealloc]
  -[ARImageCroppingTechnique isEqual:]
  -[ARImageCroppingTechnique processData:]
  -[ARImageCroppingTechnique requiredSensorDataTypes]
  -[ARImageCroppingTechnique croppedImageSize]
  -[ARImageCroppingTechnique initWithCroppedImageSize:]


ARAccelerometerData : NSObject /usr/lib/libc++.1.dylib <ARDictionaryCoding, ARMetadataWrapperCoding, ARMutableSensorData, NSSecureCoding>
 @property  double timestamp
 @property  {?=ddd} acceleration
 @property  double temperature
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARAccelerometerData supportsSecureCoding]

  // instance methods
  -[ARAccelerometerData isEqual:]
  -[ARAccelerometerData copyWithZone:]
  -[ARAccelerometerData encodeWithCoder:]
  -[ARAccelerometerData initWithCoder:]
  -[ARAccelerometerData initWithDictionary:]
  -[ARAccelerometerData timestamp]
  -[ARAccelerometerData setTimestamp:]
  -[ARAccelerometerData acceleration]
  -[ARAccelerometerData setTemperature:]
  -[ARAccelerometerData temperature]
  -[ARAccelerometerData setAcceleration:]
  -[ARAccelerometerData encodeToDictionary]
  -[ARAccelerometerData encodeToMetadataWrapper]
  -[ARAccelerometerData initWithMetadataWrapper:]


ARSessionMetrics : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ARSessionMetrics init]
  -[ARSessionMetrics queue]
  -[ARSessionMetrics .cxx_destruct]
  -[ARSessionMetrics _baseKey]
  -[ARSessionMetrics initWithReporter:]
  -[ARSessionMetrics _recordSessionEnd]
  -[ARSessionMetrics _checkRenderEngine:withConfiguration:]
  -[ARSessionMetrics configBasedKey:]
  -[ARSessionMetrics arkitBasedKey:]
  -[ARSessionMetrics _recordBadFramePercentageFinal:]
  -[ARSessionMetrics _recordBadFramePercentageWithBucket:]
  -[ARSessionMetrics sessionStarted:withConfiguration:]
  -[ARSessionMetrics sessionDidUpdateFrame:]
  -[ARSessionMetrics sessionUpdateThermalState:]
  -[ARSessionMetrics saveMapWithFrame:]
  -[ARSessionMetrics recordRaycast:tracked:]
  -[ARSessionMetrics sessionSwitchedPresentationMode:]
  -[ARSessionMetrics sessionStopped]


_ARSessionMetricsDefaultReporter : NSObject /usr/lib/libc++.1.dylib <ARSessionMetricsReporting>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_ARSessionMetricsDefaultReporter addValue:forScalarKey:]
  -[_ARSessionMetricsDefaultReporter pushValue:forDistributionKey:]
  -[_ARSessionMetricsDefaultReporter postDarwinNotification:]


ARFaceTrackingConfiguration : ARConfiguration
 @property  BOOL lowPower
 @property  long long maximumNumberOfTrackedFaces
 @property  BOOL worldTrackingEnabled

  // class methods
  +[ARFaceTrackingConfiguration new]
  +[ARFaceTrackingConfiguration isSupported]
  +[ARFaceTrackingConfiguration supportsWorldTracking]
  +[ARFaceTrackingConfiguration supportedVideoFormatsForWorldTracking]
  +[ARFaceTrackingConfiguration supportedNumberOfTrackedFaces]
  +[ARFaceTrackingConfiguration supportsFrameSemantics:]
  +[ARFaceTrackingConfiguration supportedVideoFormats]

  // instance methods
  -[ARFaceTrackingConfiguration init]
  -[ARFaceTrackingConfiguration isEqual:]
  -[ARFaceTrackingConfiguration copyWithZone:]
  -[ARFaceTrackingConfiguration setLightEstimationEnabled:]
  -[ARFaceTrackingConfiguration setCameraPosition:]
  -[ARFaceTrackingConfiguration maximumNumberOfTrackedFaces]
  -[ARFaceTrackingConfiguration isWorldTrackingEnabled]
  -[ARFaceTrackingConfiguration setWorldTrackingEnabled:]
  -[ARFaceTrackingConfiguration setMaximumNumberOfTrackedFaces:]
  -[ARFaceTrackingConfiguration createTechniquesWithParallelTechniques:serialTechniques:]
  -[ARFaceTrackingConfiguration imageSensorSettingsForWorldTracking]
  -[ARFaceTrackingConfiguration parentImageSensorSettings]
  -[ARFaceTrackingConfiguration imageSensorSettingsForLowPower]
  -[ARFaceTrackingConfiguration imageSensorSettings]
  -[ARFaceTrackingConfiguration lowPower]
  -[ARFaceTrackingConfiguration setMirroredFrameOutput:]
  -[ARFaceTrackingConfiguration secondaryTechniques]
  -[ARFaceTrackingConfiguration renderingTechnique]
  -[ARFaceTrackingConfiguration setLowPower:]


ARInternalFaceTrackingConfiguration : ARConfiguration
 @property  long long maximumNumberOfTrackedFaces
 @property  BOOL useAlternativeResources

  // class methods
  +[ARInternalFaceTrackingConfiguration new]
  +[ARInternalFaceTrackingConfiguration isSupported]
  +[ARInternalFaceTrackingConfiguration supportedVideoFormats]

  // instance methods
  -[ARInternalFaceTrackingConfiguration init]
  -[ARInternalFaceTrackingConfiguration isEqual:]
  -[ARInternalFaceTrackingConfiguration copyWithZone:]
  -[ARInternalFaceTrackingConfiguration setLightEstimationEnabled:]
  -[ARInternalFaceTrackingConfiguration setCameraPosition:]
  -[ARInternalFaceTrackingConfiguration maximumNumberOfTrackedFaces]
  -[ARInternalFaceTrackingConfiguration setMaximumNumberOfTrackedFaces:]
  -[ARInternalFaceTrackingConfiguration createTechniquesWithParallelTechniques:serialTechniques:]
  -[ARInternalFaceTrackingConfiguration imageSensorSettings]
  -[ARInternalFaceTrackingConfiguration setMirroredFrameOutput:]
  -[ARInternalFaceTrackingConfiguration renderingTechnique]
  -[ARInternalFaceTrackingConfiguration useAlternativeResources]
  -[ARInternalFaceTrackingConfiguration setUseAlternativeResources:]


ARParentImageSensor : NSObject /usr/lib/libc++.1.dylib <AVCaptureAudioDataOutputSampleBufferDelegate, ARSensor>
 @property  NSMutableArray *sensors
 @property  BOOL running
 @property  BOOL interrupted
 @property  BOOL unrecoverable
 @property  <ARSensorDelegate> *delegate
 @property  ARParentImageSensorSettings *settings
 @property  unsigned long powerUsage
 @property  AVCaptureSession *captureSession
 @property  AVCaptureDeviceInput *audioInput
 @property  AVCaptureAudioDataOutput *audioOutput
 @property  AVCaptureConnection *audioConnection
 @property  BOOL recordingMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARParentImageSensor dealloc]
  -[ARParentImageSensor delegate]
  -[ARParentImageSensor setDelegate:]
  -[ARParentImageSensor .cxx_destruct]
  -[ARParentImageSensor stop]
  -[ARParentImageSensor start]
  -[ARParentImageSensor initWithSettings:]
  -[ARParentImageSensor running]
  -[ARParentImageSensor settings]
  -[ARParentImageSensor setRunning:]
  -[ARParentImageSensor interrupted]
  -[ARParentImageSensor setInterrupted:]
  -[ARParentImageSensor captureOutput:didOutputSampleBuffer:fromConnection:]
  -[ARParentImageSensor captureSession]
  -[ARParentImageSensor audioOutput]
  -[ARParentImageSensor audioInput]
  -[ARParentImageSensor reconfigure:]
  -[ARParentImageSensor _configureAudioCapture]
  -[ARParentImageSensor setPowerUsage:]
  -[ARParentImageSensor recordingMode]
  -[ARParentImageSensor providedDataTypes]
  -[ARParentImageSensor setRecordingMode:]
  -[ARParentImageSensor forceUpdatePowerUsage:]
  -[ARParentImageSensor powerUsage]
  -[ARParentImageSensor addSensorForSettings:]
  -[ARParentImageSensor unrecoverable]
  -[ARParentImageSensor canReconfigure:]
  -[ARParentImageSensor _validateMicrophoneAuthorization]
  -[ARParentImageSensor sensors]
  -[ARParentImageSensor _validateCameraAuthorization]
  -[ARParentImageSensor captureSessionStateChanged:]
  -[ARParentImageSensor setUnrecoverable:]
  -[ARParentImageSensor updateCaptureDeviceConfigurations:]
  -[ARParentImageSensor setSensors:]
  -[ARParentImageSensor audioConnection]


ARWorldTrackingOptions : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  ARImageSensorSettings *imageSensorSettings
 @property  ARImageSensorSettings *imageSensorSettingsForSuperWide
 @property  NSString *deviceModel
 @property  BOOL relocalizationEnabled
 @property  ARWorldMap *initialWorldMap
 @property  NSString *slamConfiguration
 @property  BOOL deterministicMode
 @property  unsigned long planeDetection
 @property  double minVergenceAngle
 @property  BOOL mlModelEnabled
 @property  BOOL deliverRawSceneUnderstandingResults
 @property  BOOL collaborationEnabled
 @property  NSDictionary *dictionary
 @property  NSDictionary *activeVideoFormatsMap

  // instance methods
  -[ARWorldTrackingOptions init]
  -[ARWorldTrackingOptions isEqual:]
  -[ARWorldTrackingOptions copyWithZone:]
  -[ARWorldTrackingOptions .cxx_destruct]
  -[ARWorldTrackingOptions dictionary]
  -[ARWorldTrackingOptions deviceModel]
  -[ARWorldTrackingOptions setDeviceModel:]
  -[ARWorldTrackingOptions setPlaneDetection:]
  -[ARWorldTrackingOptions deterministicMode]
  -[ARWorldTrackingOptions initialWorldMap]
  -[ARWorldTrackingOptions isCollaborationEnabled]
  -[ARWorldTrackingOptions planeDetection]
  -[ARWorldTrackingOptions initWithImageSensorSettings:]
  -[ARWorldTrackingOptions setDeterministicMode:]
  -[ARWorldTrackingOptions imageSensorSettings]
  -[ARWorldTrackingOptions setImageSensorSettings:]
  -[ARWorldTrackingOptions updateCameraMap]
  -[ARWorldTrackingOptions imageSensorSettingsForSuperWide]
  -[ARWorldTrackingOptions cameraIdForCaptureDeviceType:]
  -[ARWorldTrackingOptions shouldUseSuperWide]
  -[ARWorldTrackingOptions setupCameraCalibration:forImageSensorSettings:deviceModel:]
  -[ARWorldTrackingOptions slamConfiguration]
  -[ARWorldTrackingOptions relocalizationEnabled]
  -[ARWorldTrackingOptions setImageSensorSettingsForSuperWide:]
  -[ARWorldTrackingOptions activeVideoFormatsMap]
  -[ARWorldTrackingOptions createSLAMCalibration:]
  -[ARWorldTrackingOptions createSLAMConfig:]
  -[ARWorldTrackingOptions setRelocalizationEnabled:]
  -[ARWorldTrackingOptions setInitialWorldMap:]
  -[ARWorldTrackingOptions setSlamConfiguration:]
  -[ARWorldTrackingOptions minVergenceAngle]
  -[ARWorldTrackingOptions setMinVergenceAngle:]
  -[ARWorldTrackingOptions mlModelEnabled]
  -[ARWorldTrackingOptions setMlModelEnabled:]
  -[ARWorldTrackingOptions deliverRawSceneUnderstandingResults]
  -[ARWorldTrackingOptions setDeliverRawSceneUnderstandingResults:]
  -[ARWorldTrackingOptions setCollaborationEnabled:]


ARCoachingControlBlurredBackgroundView : UIVisualEffectView /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 @property  long long backgroundStyle
 @property  long long controlStyle
 @property  BOOL highlighted
 @property  BOOL selected
 @property  BOOL enabled

  // class methods
  +[ARCoachingControlBlurredBackgroundView selectedEffectsForARDarkStyle]
  +[ARCoachingControlBlurredBackgroundView normalEffectsForARDarkStyle]
  +[ARCoachingControlBlurredBackgroundView selectedEffectsForDarkModeStyle]
  +[ARCoachingControlBlurredBackgroundView normalEffectsForDarkModeStyle]
  +[ARCoachingControlBlurredBackgroundView selectedEffects]
  +[ARCoachingControlBlurredBackgroundView disabledSelectedEffects]
  +[ARCoachingControlBlurredBackgroundView disabledEffectsForStudioStyle]
  +[ARCoachingControlBlurredBackgroundView disabledEffectsForARStyle]
  +[ARCoachingControlBlurredBackgroundView highlightedEffectsForStudioStyle]
  +[ARCoachingControlBlurredBackgroundView highlightedEffectsForARStyle]
  +[ARCoachingControlBlurredBackgroundView normalEffectsForStudioStyle]
  +[ARCoachingControlBlurredBackgroundView normalEffectsForARStyle]

  // instance methods
  -[ARCoachingControlBlurredBackgroundView setEnabled:]
  -[ARCoachingControlBlurredBackgroundView isEnabled]
  -[ARCoachingControlBlurredBackgroundView isSelected]
  -[ARCoachingControlBlurredBackgroundView isHighlighted]
  -[ARCoachingControlBlurredBackgroundView setHighlighted:]
  -[ARCoachingControlBlurredBackgroundView setSelected:]
  -[ARCoachingControlBlurredBackgroundView setBackgroundStyle:]
  -[ARCoachingControlBlurredBackgroundView backgroundStyle]
  -[ARCoachingControlBlurredBackgroundView controlStyle]
  -[ARCoachingControlBlurredBackgroundView setControlStyle:]
  -[ARCoachingControlBlurredBackgroundView updateBackgroundEffects]
  -[ARCoachingControlBlurredBackgroundView initWithFrame:backgroundStyle:controlStyle:]


ARDevicePerformanceMonitor : NSObject /usr/lib/libc++.1.dylib
 @property  ARDevicePerformanceLevel *currentDeviceCondition
 @property  double lastNotifiedTimeStamp
 @property  ARDevicePerformanceLevel *pendingDeviceCondition
 @property  NSTimer *notificationTimer
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  <ARDevicePerformanceMonitorDelegate> *delegate

  // instance methods
  -[ARDevicePerformanceMonitor init]
  -[ARDevicePerformanceMonitor dealloc]
  -[ARDevicePerformanceMonitor delegate]
  -[ARDevicePerformanceMonitor setDelegate:]
  -[ARDevicePerformanceMonitor .cxx_destruct]
  -[ARDevicePerformanceMonitor setDelegateQueue:]
  -[ARDevicePerformanceMonitor delegateQueue]
  -[ARDevicePerformanceMonitor notificationTimer]
  -[ARDevicePerformanceMonitor setNotificationTimer:]
  -[ARDevicePerformanceMonitor _initialDeviceCondition]
  -[ARDevicePerformanceMonitor _thermalStateChangedNotification:]
  -[ARDevicePerformanceMonitor _processThermalStateChanged:]
  -[ARDevicePerformanceMonitor lastNotifiedTimeStamp]
  -[ARDevicePerformanceMonitor currentDeviceCondition]
  -[ARDevicePerformanceMonitor pendingDeviceCondition]
  -[ARDevicePerformanceMonitor setLastNotifiedTimeStamp:]
  -[ARDevicePerformanceMonitor _updateDelegateWithDeviceCondition:]
  -[ARDevicePerformanceMonitor _clearNotificationTimer]
  -[ARDevicePerformanceMonitor _notificationTimerFired:]
  -[ARDevicePerformanceMonitor _shouldUpdateDelegateForDevicePerformanceLevel:]
  -[ARDevicePerformanceMonitor setPendingDeviceCondition:]
  -[ARDevicePerformanceMonitor _startNotificationTimerIfNeeded]
  -[ARDevicePerformanceMonitor setCurrentDeviceCondition:]
  -[ARDevicePerformanceMonitor deviceCondition]


ARConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  BOOL autoFocusEnabled
 @property  NSString *deviceModel
 @property  ARParentImageSensorSettings *parentImageSensorSettings
 @property  ARImageSensorSettings *imageSensorSettings
 @property  NSArray *customSensors
 @property  unsigned long lightEstimation
 @property  unsigned long frameDebugOptions
 @property  long long cameraPosition
 @property  BOOL allowCameraInMultipleForegroundAppLayout
 @property  BOOL mirroredFrameOutput
 @property  <ARReplaySensorProtocol> *replaySensor
 @property  ARVideoFormat *videoFormat
 @property  long long worldAlignment
 @property  BOOL lightEstimationEnabled
 @property  BOOL providesAudioData
 @property  unsigned long frameSemantics

  // class methods
  +[ARConfiguration isSupported]
  +[ARConfiguration supportsFrameSemantics:]
  +[ARConfiguration supportedVideoFormats]
  +[ARConfiguration recordingConfigurationWithConfiguration:recordingTechnique:fileURL:]
  +[ARConfiguration recordingConfigurationWithConfiguration:recordingTechnique:]
  +[ARConfiguration replayConfigurationWithConfiguration:replaySensor:replayingResultDataClasses:]

  // instance methods
  -[ARConfiguration init]
  -[ARConfiguration isEqual:]
  -[ARConfiguration copyWithZone:]
  -[ARConfiguration .cxx_destruct]
  -[ARConfiguration initPrivate]
  -[ARConfiguration deviceModel]
  -[ARConfiguration videoFormat]
  -[ARConfiguration setVideoFormat:]
  -[ARConfiguration cameraPosition]
  -[ARConfiguration setWorldAlignment:]
  -[ARConfiguration setLightEstimationEnabled:]
  -[ARConfiguration setCameraPosition:]
  -[ARConfiguration frameSemantics]
  -[ARConfiguration isAutoFocusEnabled]
  -[ARConfiguration setLightEstimation:]
  -[ARConfiguration createTechniquesWithParallelTechniques:serialTechniques:]
  -[ARConfiguration replaySensor]
  -[ARConfiguration worldAlignment]
  -[ARConfiguration parentImageSensorSettings]
  -[ARConfiguration setAutoFocusEnabled:]
  -[ARConfiguration imageSensorSettings]
  -[ARConfiguration setMirroredFrameOutput:]
  -[ARConfiguration secondaryTechniques]
  -[ARConfiguration renderingTechnique]
  -[ARConfiguration allowCameraInMultipleForegroundAppLayout]
  -[ARConfiguration providesAudioData]
  -[ARConfiguration setAllowCameraInMultipleForegroundAppLayout:]
  -[ARConfiguration lightEstimation]
  -[ARConfiguration customSensors]
  -[ARConfiguration mirroredFrameOutput]
  -[ARConfiguration techniques]
  -[ARConfiguration frameDebugOptions]
  -[ARConfiguration descriptionWithoutBrackets]
  -[ARConfiguration setCustomSensors:]
  -[ARConfiguration isLightEstimationEnabled]
  -[ARConfiguration setFrameSemantics:]
  -[ARConfiguration isKindOfConfiguration:]
  -[ARConfiguration setProvidesAudioData:]
  -[ARConfiguration setFrameDebugOptions:]


ARImageTrackingConfiguration : ARConfiguration
 @property  BOOL autoFocusEnabled
 @property  NSSet *trackingImages
 @property  long long maximumNumberOfTrackedImages

  // class methods
  +[ARImageTrackingConfiguration new]
  +[ARImageTrackingConfiguration isSupported]
  +[ARImageTrackingConfiguration supportsFrameSemantics:]
  +[ARImageTrackingConfiguration supportedVideoFormats]

  // instance methods
  -[ARImageTrackingConfiguration init]
  -[ARImageTrackingConfiguration isEqual:]
  -[ARImageTrackingConfiguration copyWithZone:]
  -[ARImageTrackingConfiguration .cxx_destruct]
  -[ARImageTrackingConfiguration maximumNumberOfTrackedImages]
  -[ARImageTrackingConfiguration trackingImages]
  -[ARImageTrackingConfiguration createTechniquesWithParallelTechniques:serialTechniques:]
  -[ARImageTrackingConfiguration setMaximumNumberOfTrackedImages:]
  -[ARImageTrackingConfiguration setTrackingImages:]


ARVideoFormat : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSArray *frameRatesByPowerUsage
 @property  AVCaptureDevice *device
 @property  AVCaptureDeviceFormat *deviceFormat
 @property  AVCaptureDeviceFormat *depthDataFormat
 @property  NSString *captureDeviceType
 @property  long long captureDevicePosition
 @property  {CGSize=dd} imageResolution
 @property  long long framesPerSecond

  // class methods
  +[ARVideoFormat supportedVideoFormatsForDevicePosition:deviceType:]
  +[ARVideoFormat bestVideoFormatForDevicePosition:deviceType:resolution:frameRate:videoBinned:]
  +[ARVideoFormat bestDepthFormatForDeviceFormat:]

  // instance methods
  -[ARVideoFormat isEqual:]
  -[ARVideoFormat copyWithZone:]
  -[ARVideoFormat .cxx_destruct]
  -[ARVideoFormat framesPerSecond]
  -[ARVideoFormat device]
  -[ARVideoFormat setDepthDataFormat:]
  -[ARVideoFormat depthDataFormat]
  -[ARVideoFormat deviceFormat]
  -[ARVideoFormat imageResolution]
  -[ARVideoFormat captureDevicePosition]
  -[ARVideoFormat captureDeviceType]
  -[ARVideoFormat initWithImageResolution:captureDevicePosition:captureDeviceType:]
  -[ARVideoFormat initWithCaptureDevice:format:]
  -[ARVideoFormat setFrameRatesByPowerUsage:]
  -[ARVideoFormat frameRatesByPowerUsage]


ARPresentationFramePool_Eye : NSObject /usr/lib/libc++.1.dylib
 @property  {?=[4]} eyeOffset
 @property  {?=[4]} projection

  // instance methods
  -[ARPresentationFramePool_Eye projection]
  -[ARPresentationFramePool_Eye setProjection:]
  -[ARPresentationFramePool_Eye eyeOffset]
  -[ARPresentationFramePool_Eye setEyeOffset:]


ARPresentationFramePool : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableArray *forwardFlow
 @property  ARPresentationDescriptor *descriptor
 @property  ARPresentationDisplay *display

  // instance methods
  -[ARPresentationFramePool .cxx_destruct]
  -[ARPresentationFramePool descriptor]
  -[ARPresentationFramePool setDescriptor:]
  -[ARPresentationFramePool setDisplay:]
  -[ARPresentationFramePool display]
  -[ARPresentationFramePool _invalidateFrames]
  -[ARPresentationFramePool _snapViewport:]
  -[ARPresentationFramePool _addPresentationFrame]
  -[ARPresentationFramePool _lock_updateMSAATextures:]
  -[ARPresentationFramePool _lock_updateForwardFlowBuffer:]
  -[ARPresentationFramePool _updateViewports]
  -[ARPresentationFramePool mainRenderPassDescriptor:zfar:]
  -[ARPresentationFramePool _hasPresentationFrameToRender]
  -[ARPresentationFramePool _findPresentationFrame:]
  -[ARPresentationFramePool _signalPresentationFrameToRender]
  -[ARPresentationFramePool _updateRenderPassDescriptor:]
  -[ARPresentationFramePool _createTexture:textureSize:name:]
  -[ARPresentationFramePool _lock_hasPresentationFrameToRender]
  -[ARPresentationFramePool _deleteMSAATextures]
  -[ARPresentationFramePool _lock_deleteForwardFlowBuffer]
  -[ARPresentationFramePool _createMultisampleTexture:pixelFormat:textureSize:]
  -[ARPresentationFramePool initWithCommandQueue:compositorEvent:applicationEvent:]
  -[ARPresentationFramePool allocateTextures]
  -[ARPresentationFramePool makePresentationFrame:frameNumber:]
  -[ARPresentationFramePool waitForPresentationFrameToRenderUsingBlock:]
  -[ARPresentationFramePool updateWarpPose:scanoutStart:scanoutEnd:]
  -[ARPresentationFramePool findPresentationFrame:]
  -[ARPresentationFramePool skipComposite:]
  -[ARPresentationFramePool findPresentationFrameToComposite:]
  -[ARPresentationFramePool findPresentationFrameToPresent]
  -[ARPresentationFramePool lastFrameRendered]
  -[ARPresentationFramePool forwardFlow]
  -[ARPresentationFramePool setForwardFlow:]


ARLightEstimate : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSData *sphericalHarmonicsCoefficients
 @property  double ambientIntensity
 @property  double ambientColorTemperature

  // class methods
  +[ARLightEstimate supportsSecureCoding]

  // instance methods
  -[ARLightEstimate encodeWithCoder:]
  -[ARLightEstimate initWithCoder:]
  -[ARLightEstimate sphericalHarmonicsCoefficients]
  -[ARLightEstimate ambientIntensity]
  -[ARLightEstimate ambientColorTemperature]
  -[ARLightEstimate initWithAmbientIntensity:temperature:]


ARDirectionalLightEstimate : ARLightEstimate <NSCopying>
 @property  double timestamp
 @property  double confidenceRating
 @property  NSData *sphericalHarmonicsCoefficients
 @property  void primaryLightDirection
 @property  double primaryLightIntensity

  // class methods
  +[ARDirectionalLightEstimate supportsSecureCoding]

  // instance methods
  -[ARDirectionalLightEstimate copyWithZone:]
  -[ARDirectionalLightEstimate encodeWithCoder:]
  -[ARDirectionalLightEstimate initWithCoder:]
  -[ARDirectionalLightEstimate .cxx_destruct]
  -[ARDirectionalLightEstimate timestamp]
  -[ARDirectionalLightEstimate setTimestamp:]
  -[ARDirectionalLightEstimate sphericalHarmonicsCoefficients]
  -[ARDirectionalLightEstimate initWithSphericalHarmonics:ambientIntensity:temperature:]
  -[ARDirectionalLightEstimate confidenceRating]
  -[ARDirectionalLightEstimate setConfidenceRating:]
  -[ARDirectionalLightEstimate initWithDirectionalLightEstimate:]
  -[ARDirectionalLightEstimate lightEstimateByApplyingRotation:]
  -[ARDirectionalLightEstimate primaryLightDirection]
  -[ARDirectionalLightEstimate primaryLightIntensity]


ARCoachingUpdateManager : NSObject /usr/lib/libc++.1.dylib
 @property  <ARCoachingUpdateManagerDelegate> *delegate

  // instance methods
  -[ARCoachingUpdateManager dealloc]
  -[ARCoachingUpdateManager delegate]
  -[ARCoachingUpdateManager setDelegate:]
  -[ARCoachingUpdateManager .cxx_destruct]
  -[ARCoachingUpdateManager stop]
  -[ARCoachingUpdateManager start]
  -[ARCoachingUpdateManager update]
  -[ARCoachingUpdateManager drawWithTimeDelta:]
  -[ARCoachingUpdateManager init:metalLayer:]


ARRecordingTechniquePublic : ARTechnique <MOVWriterInterfaceDelegate, ARRecordingTechniqueProtocol>
 @property  unsigned long state
 @property  NSURL *outputFileURL
 @property  BOOL expectDepthData
 @property  BOOL expectAudioData
 @property  BOOL expectCustomData
 @property  BOOL shouldSaveVideoInPhotosLibrary
 @property  <ARRecordingTechniqueDelegate> *recordingTechniqueDelegate
 @property  unsigned long recordingSensorDataTypes
 @property  NSSet *recordingResultDataClasses
 @property  ARParentImageSensorSettings *parentImageSensorSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARRecordingTechniquePublic isSupported]
  +[ARRecordingTechniquePublic metadataIdentifierForARSensorDataClass:error:]
  +[ARRecordingTechniquePublic metadataIdentifierForARRecordableResultsClass:]

  // instance methods
  -[ARRecordingTechniquePublic init]
  -[ARRecordingTechniquePublic dealloc]
  -[ARRecordingTechniquePublic isEqual:]
  -[ARRecordingTechniquePublic .cxx_destruct]
  -[ARRecordingTechniquePublic finished]
  -[ARRecordingTechniquePublic state]
  -[ARRecordingTechniquePublic setState:]
  -[ARRecordingTechniquePublic _finish:]
  -[ARRecordingTechniquePublic didFailWithError:]
  -[ARRecordingTechniquePublic outputFileURL]
  -[ARRecordingTechniquePublic startRecording]
  -[ARRecordingTechniquePublic processData:]
  -[ARRecordingTechniquePublic writeImageData:]
  -[ARRecordingTechniquePublic requiredSensorDataTypes]
  -[ARRecordingTechniquePublic parentImageSensorSettings]
  -[ARRecordingTechniquePublic recordingSensorDataTypes]
  -[ARRecordingTechniquePublic recordingResultDataClasses]
  -[ARRecordingTechniquePublic initWithFileURL:recordingSensorDataTypes:recordingResultDataClasses:]
  -[ARRecordingTechniquePublic initWithFileURL:sensorDataTypes:]
  -[ARRecordingTechniquePublic initWithFileURL:recordingSensorDataTypes:recordingResultDataClasses:startImmediately:]
  -[ARRecordingTechniquePublic finishRecording]
  -[ARRecordingTechniquePublic _startRecording]
  -[ARRecordingTechniquePublic processTimeSensitiveNSCoderObject:withTimestamp:metadataID:]
  -[ARRecordingTechniquePublic _finishRecording]
  -[ARRecordingTechniquePublic _fail:]
  -[ARRecordingTechniquePublic recordingTechniqueDelegate]
  -[ARRecordingTechniquePublic writeAudioData:]
  -[ARRecordingTechniquePublic writeStarData:]
  -[ARRecordingTechniquePublic writeSensorData:]
  -[ARRecordingTechniquePublic removeTemporaryVideoFile]
  -[ARRecordingTechniquePublic createFileMetadata]
  -[ARRecordingTechniquePublic setupSensorTracks]
  -[ARRecordingTechniquePublic setupCustomTrack]
  -[ARRecordingTechniquePublic setupStarDataTrack]
  -[ARRecordingTechniquePublic expectAudioData]
  -[ARRecordingTechniquePublic allowedToWrite]
  -[ARRecordingTechniquePublic writeDepthMap:withTimestamp:]
  -[ARRecordingTechniquePublic copyVideoToPhotoLibrary]
  -[ARRecordingTechniquePublic isReadyToRecord]
  -[ARRecordingTechniquePublic didFinishRecording]
  -[ARRecordingTechniquePublic recordCustomData:forTimestamp:]
  -[ARRecordingTechniquePublic abortRecording]
  -[ARRecordingTechniquePublic expectDepthData]
  -[ARRecordingTechniquePublic setExpectDepthData:]
  -[ARRecordingTechniquePublic setExpectAudioData:]
  -[ARRecordingTechniquePublic expectCustomData]
  -[ARRecordingTechniquePublic setExpectCustomData:]
  -[ARRecordingTechniquePublic shouldSaveVideoInPhotosLibrary]
  -[ARRecordingTechniquePublic setShouldSaveVideoInPhotosLibrary:]
  -[ARRecordingTechniquePublic setRecordingTechniqueDelegate:]
  -[ARRecordingTechniquePublic setParentImageSensorSettings:]
  -[ARRecordingTechniquePublic computeVideoTransformForDeviceOrientationWithCameraPosition:]
  -[ARRecordingTechniquePublic writeResultData:withTimestamp:]


ARRecordingTechnique : ARTechnique <ARRecordingTechniqueProtocol>
 @property  NSURL *outputFileURL
 @property  BOOL expectDepthData
 @property  BOOL expectAudioData
 @property  BOOL expectCustomData
 @property  BOOL shouldSaveVideoInPhotosLibrary
 @property  <ARRecordingTechniqueDelegate> *recordingTechniqueDelegate
 @property  unsigned long recordingSensorDataTypes
 @property  NSSet *recordingResultDataClasses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARRecordingTechnique metadataIdentifierForARRecordableResultsClass:]

  // instance methods
  -[ARRecordingTechnique init]
  -[ARRecordingTechnique dealloc]
  -[ARRecordingTechnique isEqual:]
  -[ARRecordingTechnique .cxx_destruct]
  -[ARRecordingTechnique observeValueForKeyPath:ofObject:change:context:]
  -[ARRecordingTechnique outputFileURL]
  -[ARRecordingTechnique startRecording]
  -[ARRecordingTechnique processData:]
  -[ARRecordingTechnique writeImageData:]
  -[ARRecordingTechnique requestResultDataAtTimestamp:context:]
  -[ARRecordingTechnique requiredSensorDataTypes]
  -[ARRecordingTechnique recordingSensorDataTypes]
  -[ARRecordingTechnique recordingResultDataClasses]
  -[ARRecordingTechnique initWithFileURL:recordingSensorDataTypes:recordingResultDataClasses:]
  -[ARRecordingTechnique initWithFileURL:sensorDataTypes:]
  -[ARRecordingTechnique initWithFileURL:recordingSensorDataTypes:recordingResultDataClasses:startImmediately:]
  -[ARRecordingTechnique finishRecording]
  -[ARRecordingTechnique recordingTechniqueDelegate]
  -[ARRecordingTechnique writeAudioData:]
  -[ARRecordingTechnique removeTemporaryVideoFile]
  -[ARRecordingTechnique createFileMetadata]
  -[ARRecordingTechnique setupCustomTrack]
  -[ARRecordingTechnique expectAudioData]
  -[ARRecordingTechnique writeDepthMap:withTimestamp:]
  -[ARRecordingTechnique copyVideoToPhotoLibrary]
  -[ARRecordingTechnique recordCustomData:forTimestamp:]
  -[ARRecordingTechnique expectDepthData]
  -[ARRecordingTechnique setExpectDepthData:]
  -[ARRecordingTechnique setExpectAudioData:]
  -[ARRecordingTechnique expectCustomData]
  -[ARRecordingTechnique setExpectCustomData:]
  -[ARRecordingTechnique shouldSaveVideoInPhotosLibrary]
  -[ARRecordingTechnique setShouldSaveVideoInPhotosLibrary:]
  -[ARRecordingTechnique setRecordingTechniqueDelegate:]
  -[ARRecordingTechnique computeVideoTransformForDeviceOrientationWithCameraPosition:]
  -[ARRecordingTechnique writeOutCachedSensorDataIfPresent]
  -[ARRecordingTechnique writeAccelerometerMetadata:]
  -[ARRecordingTechnique writeGyroscopeMetadata:]
  -[ARRecordingTechnique writeDeviceOrientationMetadata:]
  -[ARRecordingTechnique writeLocationMetadata:]
  -[ARRecordingTechnique writeMetadata:withTimestamp:toInputAdaptor:withIdentifier:]
  -[ARRecordingTechnique createAssetWriter]
  -[ARRecordingTechnique setupSensorTracksWithImageData:]
  -[ARRecordingTechnique setupResultTracks]
  -[ARRecordingTechnique startAssetWriterAtTimestamp:]
  -[ARRecordingTechnique initAssetWriterIfRequiredWithImageData:]
  -[ARRecordingTechnique writePixelBuffer:withTimestamp:]
  -[ARRecordingTechnique getMetadataForBuffer:additionalMetadata:]
  -[ARRecordingTechnique writeMetadata:withTimestamp:toInputAdaptor:withIdentifier:withMetaItems:]
  -[ARRecordingTechnique writeImageMetadata:]
  -[ARRecordingTechnique makeMetaDataDictionaryItems:withIdentifier:]
  -[ARRecordingTechnique getJsonFriendlyCopy:]
  -[ARRecordingTechnique isValidJSONObject:path:]


ARCoachingTransformations : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[ARCoachingTransformations scale:]
  +[ARCoachingTransformations degreesToRadians:]
  +[ARCoachingTransformations translate:]
  +[ARCoachingTransformations rotate:axis:]
  +[ARCoachingTransformations perspective_fov:aspect:near:far:]
  +[ARCoachingTransformations lookAt:center:up:]
  +[ARCoachingTransformations ortho2d:right:bottom:top:near:far:]
  +[ARCoachingTransformations fromMatrix:]


ARPersonOcclusionTechnique : ARTechnique
  // instance methods
  -[ARPersonOcclusionTechnique init]
  -[ARPersonOcclusionTechnique dealloc]
  -[ARPersonOcclusionTechnique .cxx_destruct]
  -[ARPersonOcclusionTechnique .cxx_construct]
  -[ARPersonOcclusionTechnique requestResultDataAtTimestamp:context:]
  -[ARPersonOcclusionTechnique postProcessSegmentation:depthBuffer:detectionData:pResultingDepthBuffer:]


ARRunLoop : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL cancelled

  // instance methods
  -[ARRunLoop init]
  -[ARRunLoop dealloc]
  -[ARRunLoop .cxx_destruct]
  -[ARRunLoop initWithName:]
  -[ARRunLoop cancel]
  -[ARRunLoop start]
  -[ARRunLoop cancelled]
  -[ARRunLoop setCancelled:]
  -[ARRunLoop _startThread]
  -[ARRunLoop _runloop_handleActivity:]
  -[ARRunLoop runOnRunLoop:]
  -[ARRunLoop _runloop_pushAutoreleasePool]
  -[ARRunLoop _runloop_popAutoreleasePool]


ARTechnique : NSObject /usr/lib/libc++.1.dylib
 @property  <ARTechniqueDelegate> *delegate
 @property  unsigned long powerUsage
 @property  double bonusLatency
 @property  NSNumber *traceKey

  // class methods
  +[ARTechnique techniqueOfClass:inArray:]

  // instance methods
  -[ARTechnique init]
  -[ARTechnique isEqual:]
  -[ARTechnique delegate]
  -[ARTechnique setDelegate:]
  -[ARTechnique .cxx_destruct]
  -[ARTechnique prepare]
  -[ARTechnique processData:]
  -[ARTechnique processResultData:timestamp:context:]
  -[ARTechnique requestResultDataAtTimestamp:context:]
  -[ARTechnique requiredTimeInterval]
  -[ARTechnique resultDataClasses]
  -[ARTechnique requiredSensorDataTypes]
  -[ARTechnique reconfigurableFrom:]
  -[ARTechnique reconfigureFrom:]
  -[ARTechnique traceKey]
  -[ARTechnique setPowerUsage:]
  -[ARTechnique captureBehavior]
  -[ARTechnique deterministicMode]
  -[ARTechnique powerUsage]
  -[ARTechnique initWithParallelTechniques:]
  -[ARTechnique initWithTechniques:]
  -[ARTechnique techniques]
  -[ARTechnique techniqueOfClass:]
  -[ARTechnique siblingTechniquesDidChange:]
  -[ARTechnique predictedResultDataAtTimestamp:context:]
  -[ARTechnique mergeResultData:intoData:context:]
  -[ARTechnique replaceTechniques:]
  -[ARTechnique bonusLatency]
  -[ARTechnique setBonusLatency:]


ARSegmentationTechnique : ARMLImageProcessingTechnique
  // instance methods
  -[ARSegmentationTechnique init]
  -[ARSegmentationTechnique dealloc]
  -[ARSegmentationTechnique .cxx_destruct]
  -[ARSegmentationTechnique _startLoadingMLModelSignpost]
  -[ARSegmentationTechnique _endLoadingMLModelSignpost]
  -[ARSegmentationTechnique _startMLProcessingSignpostWithTimestamp:]
  -[ARSegmentationTechnique _endMLProcessingSignpostWithTimestamp:]
  -[ARSegmentationTechnique _startMLRunNetworkSignpostWithTimestamp:]
  -[ARSegmentationTechnique _endMLRunNetworkSignpostWithTimestamp:]
  -[ARSegmentationTechnique _startMLCreateResultSignpostWithTimestamp:orientation:outputSize:]
  -[ARSegmentationTechnique _endMLCreateResultSignpostWithTimestamp:]
  -[ARSegmentationTechnique requiredTimeInterval]
  -[ARSegmentationTechnique resultDataClasses]
  -[ARSegmentationTechnique isLoadedModelVersionCorrect:]
  -[ARSegmentationTechnique preProcessNetworkInputImage:]
  -[ARSegmentationTechnique createResultDataFromTensors:numberOfOutputTensors:inputImageData:rotationNeeded:regionOfInterest:]
  -[ARSegmentationTechnique createSegmentationResultDataFromTensors:inputImageData:rotationNeeded:regionOfInterest:]
  -[ARSegmentationTechnique runNeuralNetworkWithImageData:originalImageData:regionOfInterest:rotationOfResultTensor:]


ARSegmentationSingleTechnique : ARSegmentationTechnique

ARKeyFrame : NSObject /usr/lib/libc++.1.dylib
 @property  {?=[4]} transform
 @property  ARPointCloud *featurePoints
 @property  {?=[3]} cameraIntrinsics

  // instance methods
  -[ARKeyFrame .cxx_destruct]
  -[ARKeyFrame transform]
  -[ARKeyFrame cameraIntrinsics]
  -[ARKeyFrame setCameraIntrinsics:]
  -[ARKeyFrame featurePoints]
  -[ARKeyFrame initWithKeyframeData:featurePoints:referenceOriginTransform:]


ARNoiseParameters : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[ARNoiseParameters modelIdentifierForDevicePosition:longEdgeImageResolution:]


ARStarBoardPresentationView : UIView /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 @property  CAMetalLayer *metalLayer

  // class methods
  +[ARStarBoardPresentationView layerClass]

  // instance methods
  -[ARStarBoardPresentationView initWithFrame:]
  -[ARStarBoardPresentationView metalLayer]


ARStarBoardViewController : UIViewController /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 @property  CAMetalLayer *presentationLayer
 @property  NSString *statisticsString

  // instance methods
  -[ARStarBoardViewController .cxx_destruct]
  -[ARStarBoardViewController loadView]
  -[ARStarBoardViewController supportedInterfaceOrientations]
  -[ARStarBoardViewController viewDidLayoutSubviews]
  -[ARStarBoardViewController presentationLayer]
  -[ARStarBoardViewController preferredInterfaceOrientationForPresentation]
  -[ARStarBoardViewController updateEchelonHUDPlacement:]
  -[ARStarBoardViewController setupEchelonHUDPlacement:]
  -[ARStarBoardViewController setupStatisticsWithView:]
  -[ARStarBoardViewController setStatisticsString:]
  -[ARStarBoardViewController updateDescriptor:]
  -[ARStarBoardViewController statisticsString]


ARHWFaceDetection : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  long long ID
 @property  double rollAngleInDegrees
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingBox
 @property  long long detectionOrientation
 @property  {?=qiIq} time

  // class methods
  +[ARHWFaceDetection supportsSecureCoding]
  +[ARHWFaceDetection faceDetectionFromDictionary:]

  // instance methods
  -[ARHWFaceDetection isEqual:]
  -[ARHWFaceDetection encodeWithCoder:]
  -[ARHWFaceDetection initWithCoder:]
  -[ARHWFaceDetection time]
  -[ARHWFaceDetection boundingBox]
  -[ARHWFaceDetection setTime:]
  -[ARHWFaceDetection setBoundingBox:]
  -[ARHWFaceDetection ID]
  -[ARHWFaceDetection setID:]
  -[ARHWFaceDetection rollAngleInDegrees]
  -[ARHWFaceDetection isEqualToFaceDetection:]
  -[ARHWFaceDetection detectionOrientation]
  -[ARHWFaceDetection setRollAngleInDegrees:]
  -[ARHWFaceDetection setDetectionOrientation:]


ARWorldTrackingTechnique : ARImageBasedTechnique
 @property  ARWorldTrackingOptions *mutableOptions
 @property  {?=[4]} referenceOriginTransform
 @property  ^{CV3DVIOContext=} vioHandle
 @property  unsigned long vioSessionIdentifier
 @property  ARTrackedRaycastPostProcessor *trackedRaycastPostProcessor
 @property  ARWorldTrackingOptions *options

  // class methods
  +[ARWorldTrackingTechnique isSupported]
  +[ARWorldTrackingTechnique supportsVideoResolution:forDeviceType:]

  // instance methods
  -[ARWorldTrackingTechnique init]
  -[ARWorldTrackingTechnique dealloc]
  -[ARWorldTrackingTechnique isEqual:]
  -[ARWorldTrackingTechnique options]
  -[ARWorldTrackingTechnique initWithOptions:]
  -[ARWorldTrackingTechnique .cxx_destruct]
  -[ARWorldTrackingTechnique addObserver:]
  -[ARWorldTrackingTechnique removeObserver:]
  -[ARWorldTrackingTechnique .cxx_construct]
  -[ARWorldTrackingTechnique prepare]
  -[ARWorldTrackingTechnique processData:]
  -[ARWorldTrackingTechnique _didFailWithError:]
  -[ARWorldTrackingTechnique pushCollaborationData:]
  -[ARWorldTrackingTechnique invalidateAllRaycasts]
  -[ARWorldTrackingTechnique stopRaycast:]
  -[ARWorldTrackingTechnique requiredTimeInterval]
  -[ARWorldTrackingTechnique resultDataClasses]
  -[ARWorldTrackingTechnique requiredSensorDataTypes]
  -[ARWorldTrackingTechnique reconfigurableFrom:]
  -[ARWorldTrackingTechnique reconfigureFrom:]
  -[ARWorldTrackingTechnique prepareResultData:forContext:]
  -[ARWorldTrackingTechnique captureBehavior]
  -[ARWorldTrackingTechnique deterministicMode]
  -[ARWorldTrackingTechnique predictedResultDataAtTimestamp:context:]
  -[ARWorldTrackingTechnique mergeResultData:intoData:context:]
  -[ARWorldTrackingTechnique mutableOptions]
  -[ARWorldTrackingTechnique setMutableOptions:]
  -[ARWorldTrackingTechnique vioHandleState]
  -[ARWorldTrackingTechnique initializeSceneUnderstandingIfNeeded]
  -[ARWorldTrackingTechnique getObservers]
  -[ARWorldTrackingTechnique _initializeVIOHandle]
  -[ARWorldTrackingTechnique _initializeSurfaceDetection]
  -[ARWorldTrackingTechnique vioSessionIdentifier]
  -[ARWorldTrackingTechnique hitTestIntent:forRay:isTracked:]
  -[ARWorldTrackingTechnique raycastResultsFrom:forRay:]
  -[ARWorldTrackingTechnique referenceOriginTransform]
  -[ARWorldTrackingTechnique raycastResultFrom:]
  -[ARWorldTrackingTechnique _updatePoseDataTrackingState:vioTrackingState:stateDetails:]
  -[ARWorldTrackingTechnique _reportCollaborationData:type:metadata:]
  -[ARWorldTrackingTechnique _mappingStatusFromStateDetails:timestamp:]
  -[ARWorldTrackingTechnique _featurePointDataFromDictionary:]
  -[ARWorldTrackingTechnique cameraTransformAtTimestamp:]
  -[ARWorldTrackingTechnique serializeMapData:]
  -[ARWorldTrackingTechnique clearMap]
  -[ARWorldTrackingTechnique serializeSurfaceData]
  -[ARWorldTrackingTechnique loadSurfaceData:]
  -[ARWorldTrackingTechnique addReferenceAnchors:]
  -[ARWorldTrackingTechnique removeReferenceAnchors:]
  -[ARWorldTrackingTechnique raycast:]
  -[ARWorldTrackingTechnique trackedRaycast:updateHandler:]
  -[ARWorldTrackingTechnique stopAllRaycasts]
  -[ARWorldTrackingTechnique didUpdateRaycastResult:]
  -[ARWorldTrackingTechnique _updatePose:frame:rotationMatrix:translationVector:trackingState:stateDetails:]
  -[ARWorldTrackingTechnique _reportError:error:]
  -[ARWorldTrackingTechnique setReferenceOriginTransform:]
  -[ARWorldTrackingTechnique vioHandle]
  -[ARWorldTrackingTechnique setVioHandle:]
  -[ARWorldTrackingTechnique trackedRaycastPostProcessor]
  -[ARWorldTrackingTechnique setTrackedRaycastPostProcessor:]


ARExposureLightEstimationTechnique : ARTechnique
  // instance methods
  -[ARExposureLightEstimationTechnique init]
  -[ARExposureLightEstimationTechnique .cxx_destruct]
  -[ARExposureLightEstimationTechnique .cxx_construct]
  -[ARExposureLightEstimationTechnique processData:]
  -[ARExposureLightEstimationTechnique requestResultDataAtTimestamp:context:]
  -[ARExposureLightEstimationTechnique requiredSensorDataTypes]


ARStarBoardSceneComponent : NSObject /usr/lib/libc++.1.dylib <_UISceneComponentProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIScene *_scene

  // instance methods
  -[ARStarBoardSceneComponent .cxx_destruct]
  -[ARStarBoardSceneComponent _scene:willTransitionToActivationState:withReasonsMask:]
  -[ARStarBoardSceneComponent _sceneWillInvalidate:]
  -[ARStarBoardSceneComponent initWithScene:]
  -[ARStarBoardSceneComponent _scene]
  -[ARStarBoardSceneComponent _setScene:]


ARStarBoardSceneManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[ARStarBoardSceneManager sharedInstance]

  // instance methods
  -[ARStarBoardSceneManager init]
  -[ARStarBoardSceneManager .cxx_destruct]
  -[ARStarBoardSceneManager starBoardSceneConnected:]
  -[ARStarBoardSceneManager starBoardSceneDisconnected:]
  -[ARStarBoardSceneManager addSceneObserver:]


ARBoardController : NSObject /usr/lib/libc++.1.dylib <ARStarBoardSceneManagerObserver>
 @property  CAMetalLayer *springBoardLayer
 @property  CAMetalLayer *activeLayer
 @property  unsigned long currentBoardScene
 @property  NSString *statistics
 @property  SRHMEConfig *currentConfig
 @property  <ARBoardControllerDelegate> *delegate
 @property  UIView *view
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARBoardController delegate]
  -[ARBoardController setDelegate:]
  -[ARBoardController .cxx_destruct]
  -[ARBoardController statistics]
  -[ARBoardController setStatistics:]
  -[ARBoardController view]
  -[ARBoardController setView:]
  -[ARBoardController initWithView:]
  -[ARBoardController isDrawableAvailable]
  -[ARBoardController nextDrawable]
  -[ARBoardController starBoardSceneConnected:]
  -[ARBoardController starBoardSceneDisconnected:]
  -[ARBoardController setActiveLayer:]
  -[ARBoardController _switchToStarBoard]
  -[ARBoardController _switchToSpringBoard]
  -[ARBoardController activeLayer]
  -[ARBoardController _updateMetalLayer:descriptor:]
  -[ARBoardController _handleStarBoardSceneConnect:]
  -[ARBoardController _evaluateCompositorDestination:]
  -[ARBoardController updateLayerBounds]
  -[ARBoardController updateMetalLayer:]
  -[ARBoardController currentConfig]
  -[ARBoardController setCurrentConfig:]
  -[ARBoardController currentBoardScene]
  -[ARBoardController setCurrentBoardScene:]
  -[ARBoardController springBoardLayer]
  -[ARBoardController setSpringBoardLayer:]


ARBody2D : NSObject /usr/lib/libc++.1.dylib
 @property  ARSkeleton2D *skeleton

  // class methods
  +[ARBody2D supportsSecureCoding]

  // instance methods
  -[ARBody2D isEqual:]
  -[ARBody2D encodeWithCoder:]
  -[ARBody2D initWithCoder:]
  -[ARBody2D .cxx_destruct]
  -[ARBody2D skeleton]
  -[ARBody2D initWithSkeleton2D:]


AREnvironmentProbeAnchor : ARAnchor
 @property  <MTLTexture> *environmentTexture
 @property  NSData *colorHistogram
 @property  float opaquePixelPercentage
 @property  NSUUID *trackedPlaneIdentifier
 @property  void extent

  // class methods
  +[AREnvironmentProbeAnchor supportsSecureCoding]

  // instance methods
  -[AREnvironmentProbeAnchor encodeWithCoder:]
  -[AREnvironmentProbeAnchor initWithCoder:]
  -[AREnvironmentProbeAnchor .cxx_destruct]
  -[AREnvironmentProbeAnchor initWithTransform:]
  -[AREnvironmentProbeAnchor initWithAnchor:]
  -[AREnvironmentProbeAnchor extent]
  -[AREnvironmentProbeAnchor colorHistogram]
  -[AREnvironmentProbeAnchor initWithName:transform:]
  -[AREnvironmentProbeAnchor initWithIdentifier:transform:]
  -[AREnvironmentProbeAnchor initWithIdentifier:transform:extent:]
  -[AREnvironmentProbeAnchor setTrackedPlaneIdentifier:]
  -[AREnvironmentProbeAnchor environmentTexture]
  -[AREnvironmentProbeAnchor trackedPlaneIdentifier]
  -[AREnvironmentProbeAnchor opaquePixelPercentage]
  -[AREnvironmentProbeAnchor initWithTransform:extent:]
  -[AREnvironmentProbeAnchor initWithName:transform:extent:]
  -[AREnvironmentProbeAnchor initWithIdentifier:onPlane:]
  -[AREnvironmentProbeAnchor setEnvironmentTexture:]
  -[AREnvironmentProbeAnchor setColorHistogram:]
  -[AREnvironmentProbeAnchor setOpaquePixelPercentage:]


ARLocationSensor : NSObject /usr/lib/libc++.1.dylib <CLLocationManagerDelegate, ARSensor>
 @property  ARLocationData *currentLocation
 @property  <ARSensorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long powerUsage

  // instance methods
  -[ARLocationSensor init]
  -[ARLocationSensor dealloc]
  -[ARLocationSensor delegate]
  -[ARLocationSensor setDelegate:]
  -[ARLocationSensor .cxx_destruct]
  -[ARLocationSensor stop]
  -[ARLocationSensor start]
  -[ARLocationSensor locationManager:didUpdateLocations:]
  -[ARLocationSensor locationManager:didFailWithError:]
  -[ARLocationSensor locationManager:didChangeAuthorizationStatus:]
  -[ARLocationSensor currentLocation]
  -[ARLocationSensor setCurrentLocation:]
  -[ARLocationSensor providedDataTypes]
  -[ARLocationSensor _validateLocationAuthorizationAndStartUpdates]
  -[ARLocationSensor updateEstimationFromVIOPose:imageData:]
  -[ARLocationSensor updateARSessionState:]


ARRaycastQuery : NSObject /usr/lib/libc++.1.dylib
 @property  void origin
 @property  void direction
 @property  long long target
 @property  long long targetAlignment

  // instance methods
  -[ARRaycastQuery isEqual:]
  -[ARRaycastQuery target]
  -[ARRaycastQuery origin]
  -[ARRaycastQuery direction]
  -[ARRaycastQuery targetAlignment]
  -[ARRaycastQuery initWithOrigin:direction:allowingTarget:alignment:]


ARWorldTrackingConfiguration : ARConfiguration
 @property  BOOL relocalizationEnabled
 @property  NSString *slamConfiguration
 @property  double minVergenceAngle
 @property  BOOL mlModelEnabled
 @property  BOOL deliverRawSceneUnderstandingResults
 @property  BOOL skeletonDetectionEnabled
 @property  BOOL shouldUseSuperWideIfAvailable
 @property  ARImageSensorSettings *imageSensorSettingsForSuperWide
 @property  BOOL autoFocusEnabled
 @property  long long environmentTexturing
 @property  BOOL wantsHDREnvironmentTextures
 @property  unsigned long planeDetection
 @property  ARWorldMap *initialWorldMap
 @property  NSSet *detectionImages
 @property  BOOL automaticImageScaleEstimationEnabled
 @property  long long maximumNumberOfTrackedImages
 @property  NSSet *detectionObjects
 @property  BOOL collaborationEnabled
 @property  BOOL userFaceTrackingEnabled

  // class methods
  +[ARWorldTrackingConfiguration new]
  +[ARWorldTrackingConfiguration isSupported]
  +[ARWorldTrackingConfiguration supportsFrameSemantics:]
  +[ARWorldTrackingConfiguration supportedVideoFormats]
  +[ARWorldTrackingConfiguration supportsUserFaceTracking]
  +[ARWorldTrackingConfiguration supportedVideoFormatsForUserFaceTracking]
  +[ARWorldTrackingConfiguration supportedVideoFormatsForSuperWide]
  +[ARWorldTrackingConfiguration supportsFrontCameraFaceAnchors]

  // instance methods
  -[ARWorldTrackingConfiguration init]
  -[ARWorldTrackingConfiguration isEqual:]
  -[ARWorldTrackingConfiguration copyWithZone:]
  -[ARWorldTrackingConfiguration .cxx_destruct]
  -[ARWorldTrackingConfiguration setPlaneDetection:]
  -[ARWorldTrackingConfiguration wantsHDREnvironmentTextures]
  -[ARWorldTrackingConfiguration maximumNumberOfTrackedImages]
  -[ARWorldTrackingConfiguration initialWorldMap]
  -[ARWorldTrackingConfiguration detectionImages]
  -[ARWorldTrackingConfiguration detectionObjects]
  -[ARWorldTrackingConfiguration environmentTexturing]
  -[ARWorldTrackingConfiguration userFaceTrackingEnabled]
  -[ARWorldTrackingConfiguration isCollaborationEnabled]
  -[ARWorldTrackingConfiguration planeDetection]
  -[ARWorldTrackingConfiguration createTechniquesWithParallelTechniques:serialTechniques:]
  -[ARWorldTrackingConfiguration parentImageSensorSettings]
  -[ARWorldTrackingConfiguration imageSensorSettings]
  -[ARWorldTrackingConfiguration secondaryTechniques]
  -[ARWorldTrackingConfiguration imageSensorSettingsForSuperWide]
  -[ARWorldTrackingConfiguration shouldUseSuperWide]
  -[ARWorldTrackingConfiguration slamConfiguration]
  -[ARWorldTrackingConfiguration relocalizationEnabled]
  -[ARWorldTrackingConfiguration setRelocalizationEnabled:]
  -[ARWorldTrackingConfiguration setInitialWorldMap:]
  -[ARWorldTrackingConfiguration setSlamConfiguration:]
  -[ARWorldTrackingConfiguration minVergenceAngle]
  -[ARWorldTrackingConfiguration setMinVergenceAngle:]
  -[ARWorldTrackingConfiguration setMlModelEnabled:]
  -[ARWorldTrackingConfiguration deliverRawSceneUnderstandingResults]
  -[ARWorldTrackingConfiguration setDeliverRawSceneUnderstandingResults:]
  -[ARWorldTrackingConfiguration setCollaborationEnabled:]
  -[ARWorldTrackingConfiguration setMaximumNumberOfTrackedImages:]
  -[ARWorldTrackingConfiguration setWantsHDREnvironmentTextures:]
  -[ARWorldTrackingConfiguration imageSensorSettingsForUserFaceTracking]
  -[ARWorldTrackingConfiguration shouldEnableVisionDataForImageSensorSettings:]
  -[ARWorldTrackingConfiguration _trackingOptions]
  -[ARWorldTrackingConfiguration automaticImageScaleEstimationEnabled]
  -[ARWorldTrackingConfiguration isMLModelEnabled]
  -[ARWorldTrackingConfiguration setUserFaceTrackingEnabled:]
  -[ARWorldTrackingConfiguration isSkeletonDetectionEnabled]
  -[ARWorldTrackingConfiguration shouldUseSuperWideIfAvailable]
  -[ARWorldTrackingConfiguration setDetectionImages:]
  -[ARWorldTrackingConfiguration setFrontCameraFaceAnchorsEnabled:]
  -[ARWorldTrackingConfiguration setEnvironmentTexturing:]
  -[ARWorldTrackingConfiguration setAutomaticImageScaleEstimationEnabled:]
  -[ARWorldTrackingConfiguration setDetectionObjects:]
  -[ARWorldTrackingConfiguration setSkeletonDetectionEnabled:]
  -[ARWorldTrackingConfiguration setShouldUseSuperWideIfAvailable:]


ARParentTechnique : ARTechnique <ARTechniqueDelegate>
 @property  NSArray *techniques
 @property  NSArray *_internalTechniques
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARParentTechnique techniquesByReplacingOriginalTechniques:withReplacementTechniques:passingTest:]
  +[ARParentTechnique techinqueInArray:passingTest:]
  +[ARParentTechnique techniquesByForceReplacingTechniques:withMatchingClassTechniques:]

  // instance methods
  -[ARParentTechnique isEqual:]
  -[ARParentTechnique .cxx_destruct]
  -[ARParentTechnique prepare]
  -[ARParentTechnique processData:]
  -[ARParentTechnique technique:didOutputResultData:timestamp:context:]
  -[ARParentTechnique processResultData:timestamp:context:]
  -[ARParentTechnique requestResultDataAtTimestamp:context:]
  -[ARParentTechnique requiredTimeInterval]
  -[ARParentTechnique resultDataClasses]
  -[ARParentTechnique technique:didFailWithError:]
  -[ARParentTechnique requiredSensorDataTypes]
  -[ARParentTechnique reconfigurableFrom:]
  -[ARParentTechnique reconfigureFrom:]
  -[ARParentTechnique setPowerUsage:]
  -[ARParentTechnique initWithParallelTechniques:]
  -[ARParentTechnique initWithTechniques:]
  -[ARParentTechnique techniques]
  -[ARParentTechnique techniqueOfClass:]
  -[ARParentTechnique siblingTechniquesDidChange:]
  -[ARParentTechnique predictedResultDataAtTimestamp:context:]
  -[ARParentTechnique setBonusLatency:]
  -[ARParentTechnique setTechniques:]
  -[ARParentTechnique initWithTechniques:delegate:]
  -[ARParentTechnique _submitResultsForTimestamp:context:]
  -[ARParentTechnique set_internalTechniques:]
  -[ARParentTechnique _internalTechniques]
  -[ARParentTechnique reuseTechniques:]


ARPersonOcclusionParentTechnique : ARParentTechnique
  // instance methods
  -[ARPersonOcclusionParentTechnique processData:]
  -[ARPersonOcclusionParentTechnique initWithTechniques:delegate:]


ARSinglePassRenderer : NSObject /usr/lib/libc++.1.dylib
 @property  SCNRenderer *sceneRenderer
 @property  ARPresentation *presentation

  // instance methods
  -[ARSinglePassRenderer .cxx_destruct]
  -[ARSinglePassRenderer setPresentation:]
  -[ARSinglePassRenderer presentation]
  -[ARSinglePassRenderer sceneRenderer]
  -[ARSinglePassRenderer initWithSCNRenderer:]
  -[ARSinglePassRenderer renderFrame:]


ARPositionalTrackingConfiguration : ARConfiguration
 @property  BOOL relocalizationEnabled
 @property  BOOL vioFusionEnabled
 @property  unsigned long planeDetection
 @property  ARWorldMap *initialWorldMap

  // class methods
  +[ARPositionalTrackingConfiguration new]
  +[ARPositionalTrackingConfiguration isSupported]
  +[ARPositionalTrackingConfiguration supportedVideoFormats]

  // instance methods
  -[ARPositionalTrackingConfiguration init]
  -[ARPositionalTrackingConfiguration isEqual:]
  -[ARPositionalTrackingConfiguration copyWithZone:]
  -[ARPositionalTrackingConfiguration .cxx_destruct]
  -[ARPositionalTrackingConfiguration setPlaneDetection:]
  -[ARPositionalTrackingConfiguration initialWorldMap]
  -[ARPositionalTrackingConfiguration planeDetection]
  -[ARPositionalTrackingConfiguration createTechniquesWithParallelTechniques:serialTechniques:]
  -[ARPositionalTrackingConfiguration imageSensorSettings]
  -[ARPositionalTrackingConfiguration setRelocalizationEnabled:]
  -[ARPositionalTrackingConfiguration setInitialWorldMap:]
  -[ARPositionalTrackingConfiguration worldTrackingOptions]
  -[ARPositionalTrackingConfiguration isRelocalizationEnabled]
  -[ARPositionalTrackingConfiguration isVIOFusionEnabled]
  -[ARPositionalTrackingConfiguration setVioFusionEnabled:]


ARProximityData : NSObject /usr/lib/libc++.1.dylib <ARSensorData>
 @property  double timestamp
 @property  double timestampLocalSync
 @property  double timestampGlobalSync
 @property  PRRelativePosition *measurement
 @property  PRPeer *peer
 @property  unsigned long vioSessionID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARProximityData .cxx_destruct]
  -[ARProximityData timestamp]
  -[ARProximityData measurement]
  -[ARProximityData setTimestamp:]
  -[ARProximityData peer]
  -[ARProximityData vioSessionID]
  -[ARProximityData timestampLocalSync]
  -[ARProximityData timestampGlobalSync]
  -[ARProximityData initWithMeasurement:peer:vioSessionID:]
  -[ARProximityData setTimestampLocalSync:]
  -[ARProximityData setTimestampGlobalSync:]


ARProximityCollaborationData : NSObject /usr/lib/libc++.1.dylib <ARSensorData>
 @property  PRCollaborationData *collaborationData
 @property  PRPeer *peer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double timestamp

  // instance methods
  -[ARProximityCollaborationData .cxx_destruct]
  -[ARProximityCollaborationData timestamp]
  -[ARProximityCollaborationData setTimestamp:]
  -[ARProximityCollaborationData peer]
  -[ARProximityCollaborationData initWithPRCollaborationData:peer:]
  -[ARProximityCollaborationData collaborationData]


ARDevicePerformanceLevel : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  unsigned long thermalLevel
 @property  unsigned long batteryLevel

  // class methods
  +[ARDevicePerformanceLevel ARDevicethermalStateFromNSProcessInfoThermalState:]

  // instance methods
  -[ARDevicePerformanceLevel isEqual:]
  -[ARDevicePerformanceLevel copyWithZone:]
  -[ARDevicePerformanceLevel batteryLevel]
  -[ARDevicePerformanceLevel thermalLevel]
  -[ARDevicePerformanceLevel initWithNSProcessInfoThermalState:initWithBatteryLevel:]
  -[ARDevicePerformanceLevel initWithThermalLevel:initWithBatteryLevel:]


AROrientationTrackingConfiguration : ARConfiguration
 @property  BOOL autoFocusEnabled

  // class methods
  +[AROrientationTrackingConfiguration new]
  +[AROrientationTrackingConfiguration supportsFrameSemantics:]
  +[AROrientationTrackingConfiguration supportedVideoFormats]

  // instance methods
  -[AROrientationTrackingConfiguration init]


ARPatchGrid : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long size
 @property  r^{?=} patches
 @property  float pivot

  // instance methods
  -[ARPatchGrid isEqual:]
  -[ARPatchGrid copyWithZone:]
  -[ARPatchGrid .cxx_destruct]
  -[ARPatchGrid size]
  -[ARPatchGrid .cxx_construct]
  -[ARPatchGrid pivot]
  -[ARPatchGrid initWithPatchesVector:pivotAngle:]
  -[ARPatchGrid patches]


ARGPUImageUndistortion : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ARGPUImageUndistortion init]
  -[ARGPUImageUndistortion .cxx_destruct]
  -[ARGPUImageUndistortion undistortFisheyeImage:withFisheyeIntrinsics:withFisheyeRadialCoefficients:toRectilinearImage:withRectilinearIntrinsics:]


ARQAHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[ARQAHelper arrayWithVector2:]
  +[ARQAHelper arrayWithVector3:]
  +[ARQAHelper techniquesArray:array:]
  +[ARQAHelper generateTagsForConfiguration:replaySensor:technique:]
  +[ARQAHelper arrayOf3dPoints:count:]
  +[ARQAHelper arrayOf2dPoints:count:]
  +[ARQAHelper arrayWithMatrix4x4:]
  +[ARQAHelper dictionaryFromVertices:vertexCount:textureCoordinates:textureCoordinateCount:]
  +[ARQAHelper dictionaryFromPatchGrid:]
  +[ARQAHelper _meanDepthValueFromFrame:]
  +[ARQAHelper extractAnchorDataForFrame:]
  +[ARQAHelper extractDetectedBodiesForFrame:]
  +[ARQAHelper arrayWithVector4:]
  +[ARQAHelper headerInformationWithSize:frameLabelRect:configuration:technique:]
  +[ARQAHelper traceFrameData:withFrameIndex:]
  +[ARQAHelper dictionaryFromCLLocation:]
  +[ARQAHelper dictionaryFromRaycastQuery:]
  +[ARQAHelper arrayFromRaycastResults:]


ARCoachingState : NSObject /usr/lib/libc++.1.dylib
 @property  ARCoachingOverlayView *view
 @property  long long requirements
 @property  BOOL isViewActiveForState

  // instance methods
  -[ARCoachingState .cxx_destruct]
  -[ARCoachingState exit]
  -[ARCoachingState requirements]
  -[ARCoachingState view]
  -[ARCoachingState setView:]
  -[ARCoachingState initWithView:]
  -[ARCoachingState enter]
  -[ARCoachingState isViewActiveForState]
  -[ARCoachingState doAction:]


ARCoachingStateHidden : ARCoachingState
  // instance methods
  -[ARCoachingStateHidden exit]
  -[ARCoachingStateHidden enter]
  -[ARCoachingStateHidden isViewActiveForState]
  -[ARCoachingStateHidden doAction:]


ARCoachingStateActivated : ARCoachingState
  // instance methods
  -[ARCoachingStateActivated .cxx_destruct]
  -[ARCoachingStateActivated enter]
  -[ARCoachingStateActivated doAction:]


ARCoachingStateDeactivating : ARCoachingState
  // instance methods
  -[ARCoachingStateDeactivating .cxx_destruct]
  -[ARCoachingStateDeactivating enter]
  -[ARCoachingStateDeactivating isViewActiveForState]
  -[ARCoachingStateDeactivating doAction:]


ARCoachingStateRelocalizing : ARCoachingState
  // instance methods
  -[ARCoachingStateRelocalizing .cxx_destruct]
  -[ARCoachingStateRelocalizing requirements]
  -[ARCoachingStateRelocalizing initWithView:]
  -[ARCoachingStateRelocalizing enter]
  -[ARCoachingStateRelocalizing doAction:]


ARSCNCompositor : NSObject /usr/lib/libc++.1.dylib
 @property  ARFrame *currentFrame
 @property  long long mode
 @property  long long compositorAlgorithm
 @property  unsigned long foregroundBitMask
 @property  long long currentOrientation
 @property  BOOL showOcclusionGeometry
 @property  unsigned long uncertaintyRadius
 @property  unsigned long erosionRadius
 @property  double depthScale
 @property  unsigned long dilationRadius
 @property  double filterEpsilon
 @property  double filterScale
 @property  double filterOffset

  // class methods
  +[ARSCNCompositor mattingWithDepthAndDualTechnique]
  +[ARSCNCompositor mattingTechniqueDual]
  +[ARSCNCompositor techniqueDictionaryWithName:]

  // instance methods
  -[ARSCNCompositor dealloc]
  -[ARSCNCompositor .cxx_destruct]
  -[ARSCNCompositor mode]
  -[ARSCNCompositor currentFrame]
  -[ARSCNCompositor currentOrientation]
  -[ARSCNCompositor uncertaintyRadius]
  -[ARSCNCompositor setUncertaintyRadius:]
  -[ARSCNCompositor erosionRadius]
  -[ARSCNCompositor setErosionRadius:]
  -[ARSCNCompositor setDilationRadius:]
  -[ARSCNCompositor dilationRadius]
  -[ARSCNCompositor setCompositorAlgorithm:]
  -[ARSCNCompositor executeOverlayMatteCallbackDual:]
  -[ARSCNCompositor executeOcclusionDepthStencilCallback:]
  -[ARSCNCompositor orientedVerticesWithResolution:]
  -[ARSCNCompositor encodeAlphaResampleToCommandBuffer:resolution:input:output:]
  -[ARSCNCompositor encodeDepthResampleToCommandBuffer:resolution:input:output:]
  -[ARSCNCompositor initWithView:mode:algorithm:]
  -[ARSCNCompositor setForegroundBitMask:]
  -[ARSCNCompositor setFilterEpsilon:]
  -[ARSCNCompositor setFilterScale:]
  -[ARSCNCompositor setFilterOffset:]
  -[ARSCNCompositor compositorAlgorithm]
  -[ARSCNCompositor setCurrentFrame:]
  -[ARSCNCompositor foregroundBitMask]
  -[ARSCNCompositor setCurrentOrientation:]
  -[ARSCNCompositor showOcclusionGeometry]
  -[ARSCNCompositor setShowOcclusionGeometry:]
  -[ARSCNCompositor depthScale]
  -[ARSCNCompositor setDepthScale:]
  -[ARSCNCompositor filterEpsilon]
  -[ARSCNCompositor filterScale]
  -[ARSCNCompositor filterOffset]


ARCamera : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  {CGSize=dd} imageResolution
 @property  double exposureDuration
 @property  float exposureOffset
 @property  {?=[3]} intrinsics
 @property  unsigned long lensType
 @property  void radialDistortion
 @property  void tangentialDistortion
 @property  {?=[4]} transform
 @property  long long trackingState
 @property  long long trackingStateReason
 @property  long long devicePosition
 @property  void eulerAngles
 @property  {?=[4]} projectionMatrix

  // class methods
  +[ARCamera supportsSecureCoding]

  // instance methods
  -[ARCamera isEqual:]
  -[ARCamera copyWithZone:]
  -[ARCamera encodeWithCoder:]
  -[ARCamera initWithCoder:]
  -[ARCamera transform]
  -[ARCamera debugQuickLookObject]
  -[ARCamera focalLength]
  -[ARCamera setTransform:]
  -[ARCamera trackingState]
  -[ARCamera setTrackingState:]
  -[ARCamera lensType]
  -[ARCamera exposureDuration]
  -[ARCamera devicePosition]
  -[ARCamera setDevicePosition:]
  -[ARCamera setExposureDuration:]
  -[ARCamera eulerAngles]
  -[ARCamera trackingStateReason]
  -[ARCamera projectionMatrix]
  -[ARCamera setExposureOffset:]
  -[ARCamera exposureOffset]
  -[ARCamera _description:]
  -[ARCamera imageResolution]
  -[ARCamera radialDistortion]
  -[ARCamera tangentialDistortion]
  -[ARCamera principalPoint]
  -[ARCamera setLensType:]
  -[ARCamera setRadialDistortion:]
  -[ARCamera setTangentialDistortion:]
  -[ARCamera setImageResolution:]
  -[ARCamera projectionMatrixForOrientation:viewportSize:zNear:zFar:]
  -[ARCamera viewMatrixForOrientation:]
  -[ARCamera initWithIntrinsics:imageResolution:]
  -[ARCamera displayCenterTransform]
  -[ARCamera projectPoint:orientation:viewportSize:]
  -[ARCamera unprojectPoint:ontoPlaneWithTransform:orientation:viewportSize:]
  -[ARCamera setTrackingStateReason:]
  -[ARCamera intrinsics]
  -[ARCamera setIntrinsics:]


ARFrameContext : NSObject /usr/lib/libc++.1.dylib <ARResultDataContext>
 @property  BOOL didRelocalize
 @property  {?=[4]} relocalizationDeltaTransform
 @property  {?=[4]} sessionTransform
 @property  BOOL sessionTransformUpdated
 @property  BOOL sessionTransformReset
 @property  BOOL sessionTransformShouldResumeCameraHeading
 @property  BOOL sessionTransformShouldResumeCameraPosition
 @property  BOOL shouldRemoveExistingAnchors
 @property  NSMutableSet *collaborationData
 @property  ARImageData *imageData
 @property  ARDeviceOrientationData *orientationData
 @property  ARLocationData *locationData
 @property  long long worldAlignment
 @property  ARWorldMap *worldMap
 @property  unsigned long frameDebugOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARFrameContext init]
  -[ARFrameContext .cxx_destruct]
  -[ARFrameContext imageData]
  -[ARFrameContext setImageData:]
  -[ARFrameContext setLocationData:]
  -[ARFrameContext locationData]
  -[ARFrameContext cameraPosition]
  -[ARFrameContext setWorldAlignment:]
  -[ARFrameContext addAnchor:]
  -[ARFrameContext removeAnchor:]
  -[ARFrameContext resultDataOfClass:]
  -[ARFrameContext anchorsToAdd]
  -[ARFrameContext worldAlignment]
  -[ARFrameContext frameDebugOptions]
  -[ARFrameContext setFrameDebugOptions:]
  -[ARFrameContext collaborationData]
  -[ARFrameContext anchorsToRemove]
  -[ARFrameContext setSessionTransform:]
  -[ARFrameContext resetSessionTransform]
  -[ARFrameContext resumeSessionCameraPosition]
  -[ARFrameContext resumeSessionCameraPositionAndHeading]
  -[ARFrameContext clearAddedAnchors]
  -[ARFrameContext orientationData]
  -[ARFrameContext setOrientationData:]
  -[ARFrameContext worldMap]
  -[ARFrameContext setWorldMap:]
  -[ARFrameContext didRelocalize]
  -[ARFrameContext setDidRelocalize:]
  -[ARFrameContext relocalizationDeltaTransform]
  -[ARFrameContext setRelocalizationDeltaTransform:]
  -[ARFrameContext sessionTransform]
  -[ARFrameContext sessionTransformUpdated]
  -[ARFrameContext sessionTransformReset]
  -[ARFrameContext sessionTransformShouldResumeCameraHeading]
  -[ARFrameContext sessionTransformShouldResumeCameraPosition]
  -[ARFrameContext shouldRemoveExistingAnchors]
  -[ARFrameContext setCollaborationData:]


ARPredictedPose : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long type
 @property  unsigned long frameNumber
 @property  double predictionTime
 @property  ARPose *pose

  // class methods
  +[ARPredictedPose predictedPoseAsDictionary:]

  // instance methods
  -[ARPredictedPose type]
  -[ARPredictedPose .cxx_destruct]
  -[ARPredictedPose pose]
  -[ARPredictedPose frameNumber]
  -[ARPredictedPose predictionTime]
  -[ARPredictedPose initWithType:pose:frameNumber:predictionTime:]


ARPredictedSample : NSObject /usr/lib/libc++.1.dylib
 @property  ARPredictedPose *renderPose
 @property  ARPredictedPose *compositeStartPose
 @property  ARPredictedPose *compositeEndPose
 @property  ARPredictedPose *screenDrawingPose

  // instance methods
  -[ARPredictedSample .cxx_destruct]
  -[ARPredictedSample renderPose]
  -[ARPredictedSample setRenderPose:]
  -[ARPredictedSample compositeStartPose]
  -[ARPredictedSample setCompositeStartPose:]
  -[ARPredictedSample compositeEndPose]
  -[ARPredictedSample setCompositeEndPose:]
  -[ARPredictedSample screenDrawingPose]
  -[ARPredictedSample setScreenDrawingPose:]


ARPredictedSamplesQueue : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableArray *allSamples
 @property  int capacity

  // instance methods
  -[ARPredictedSamplesQueue init]
  -[ARPredictedSamplesQueue .cxx_destruct]
  -[ARPredictedSamplesQueue capacity]
  -[ARPredictedSamplesQueue setCapacity:]
  -[ARPredictedSamplesQueue samples]
  -[ARPredictedSamplesQueue add:]
  -[ARPredictedSamplesQueue allSamples]
  -[ARPredictedSamplesQueue setAllSamples:]


ARPredictionStats : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableArray *predictedSamples
 @property  ARPredictedSamplesQueue *predictedSamplesQueue
 @property  ARCriticalTimer *sleepTimer
 @property  long long predictedSamplesIndex
 @property  long long predictedSamplesCount
 @property  NSObject<OS_dispatch_queue> *predictionQueue
 @property  ARSession *session

  // class methods
  +[ARPredictionStats enabled]

  // instance methods
  -[ARPredictionStats init]
  -[ARPredictionStats .cxx_destruct]
  -[ARPredictionStats samples]
  -[ARPredictionStats session]
  -[ARPredictionStats setSession:]
  -[ARPredictionStats _fillSlotWithFrameNumber:type:pose:timeStamp:]
  -[ARPredictionStats predictionQueue]
  -[ARPredictionStats _findSlotForFrameNumber:]
  -[ARPredictionStats _isSlotIndexValid:]
  -[ARPredictionStats _isTimeStamp:withinStart:andEnd:]
  -[ARPredictionStats _schedulePredictionAtTime:frameNumber:]
  -[ARPredictionStats predictedSamples]
  -[ARPredictionStats predictedSamplesQueue]
  -[ARPredictionStats _resetSlotForSlotIndex:]
  -[ARPredictionStats sleepTimer]
  -[ARPredictionStats _getIndexFromFrameNumber:]
  -[ARPredictionStats _slotIndex:hasFrameNumber:]
  -[ARPredictionStats predictedRenderingPose:frameNumber:timeStamp:]
  -[ARPredictionStats predictedCompositingStartPose:frameNumber:timeStamp:]
  -[ARPredictionStats predictedCompositingEndPose:frameNumber:timeStamp:]
  -[ARPredictionStats drawablePresentedAtTime:frameNumber:presentTime:vsyncTime:]
  -[ARPredictionStats _nextIndex:]
  -[ARPredictionStats _previousIndex:]
  -[ARPredictionStats _isPoseValid:]
  -[ARPredictionStats setPredictedSamples:]
  -[ARPredictionStats setPredictedSamplesQueue:]
  -[ARPredictionStats setSleepTimer:]
  -[ARPredictionStats predictedSamplesIndex]
  -[ARPredictionStats setPredictedSamplesIndex:]
  -[ARPredictionStats predictedSamplesCount]
  -[ARPredictionStats setPredictedSamplesCount:]
  -[ARPredictionStats setPredictionQueue:]


ARPlaneData : NSObject /usr/lib/libc++.1.dylib <ARResultData>
 @property  ^{CV3DSurfaceDetectionResult=^{CV3DSurfaceDetectionPlane}Q} detectionResult
 @property  BOOL sceneUnderstandingEnabled
 @property  unsigned long detectionTypeMask
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARPlaneData setSemanticsFromCV3D:sceneUnderstandingEnabled:onPlane:]

  // instance methods
  -[ARPlaneData dealloc]
  -[ARPlaneData .cxx_destruct]
  -[ARPlaneData anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARPlaneData detectionResult]
  -[ARPlaneData initWithDetectionResult:detectionTypeMask:sceneUnderstandingEnabled:]
  -[ARPlaneData _updatedAnchor:forPlane:referenceOriginTransform:]
  -[ARPlaneData _anchorForPlane:identifier:referenceOriginTransform:]
  -[ARPlaneData _surfaceOrientedPivotForPlane:]
  -[ARPlaneData _planeToWorldTransformForPlane:pivot:]
  -[ARPlaneData _worldAlignmentRotationForReferenceTransform:planeAlignment:]
  -[ARPlaneData _updateExtentsForPlaneAnchor:plane:pivot:]
  -[ARPlaneData sceneUnderstandingEnabled]
  -[ARPlaneData _boundsForPlane:surfaceOrientedPivot:alignmentRotation:]
  -[ARPlaneData _geometryForPlane:surfaceOrientedPivot:alignmentRotation:planeBounds:]
  -[ARPlaneData detectionTypeMask]
  -[ARPlaneData _gridExtentForPlane:surfaceOrientedPivot:alignmentRotation:]
  -[ARPlaneData _orientedBoundsForPlane:surfaceOrientedPivot:alignmentRotation:]
  -[ARPlaneData hitTestFromOrigin:withDirection:referenceOriginTransform:planeAlignment:]


ARObjectDetectionResult : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  {?=[4]} visionTransform
 @property  ARReferenceObject *referenceObject

  // class methods
  +[ARObjectDetectionResult supportsSecureCoding]

  // instance methods
  -[ARObjectDetectionResult isEqual:]
  -[ARObjectDetectionResult copyWithZone:]
  -[ARObjectDetectionResult encodeWithCoder:]
  -[ARObjectDetectionResult initWithCoder:]
  -[ARObjectDetectionResult .cxx_destruct]
  -[ARObjectDetectionResult setReferenceObject:]
  -[ARObjectDetectionResult referenceObject]
  -[ARObjectDetectionResult setVisionTransform:]
  -[ARObjectDetectionResult visionTransform]


ARObjectDetectionResultData : NSObject /usr/lib/libc++.1.dylib <ARResultData, NSCopying, NSSecureCoding>
 @property  NSArray *detectedObjects
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARObjectDetectionResultData supportsSecureCoding]

  // instance methods
  -[ARObjectDetectionResultData isEqual:]
  -[ARObjectDetectionResultData copyWithZone:]
  -[ARObjectDetectionResultData encodeWithCoder:]
  -[ARObjectDetectionResultData initWithCoder:]
  -[ARObjectDetectionResultData .cxx_destruct]
  -[ARObjectDetectionResultData setDetectedObjects:]
  -[ARObjectDetectionResultData anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARObjectDetectionResultData detectedObjects]


ARGPUCubemapProjector : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ARGPUCubemapProjector init]
  -[ARGPUCubemapProjector .cxx_destruct]
  -[ARGPUCubemapProjector projectToCube:transformWorldFromCube:planes:blend:]


ARGPUCubemapHistogram : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ARGPUCubemapHistogram init]
  -[ARGPUCubemapHistogram .cxx_destruct]
  -[ARGPUCubemapHistogram colorHistogramForCubemap:]


ARGPUCubemapConverter : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ARGPUCubemapConverter init]
  -[ARGPUCubemapConverter .cxx_destruct]
  -[ARGPUCubemapConverter equirectangularTextureFromCubemapTexture:rotation:size:]
  -[ARGPUCubemapConverter cubemapTextureFromEquirectangularTexture:rotation:size:]


ARSKView : SKView /System/Library/Frameworks/VideoToolbox.framework/VideoToolbox <ARInternalSessionObserver, ARSessionProviding>
 @property  NSObject<ARSKViewDelegate> *delegate
 @property  ARSession *session
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARSKView dealloc]
  -[ARSKView initWithCoder:]
  -[ARSKView .cxx_destruct]
  -[ARSKView session]
  -[ARSKView setSession:]
  -[ARSKView commonInit]
  -[ARSKView initWithFrame:]
  -[ARSKView layoutSubviews]
  -[ARSKView session:didFailWithError:]
  -[ARSKView session:cameraDidChangeTrackingState:]
  -[ARSKView sessionWasInterrupted:]
  -[ARSKView sessionInterruptionEnded:]
  -[ARSKView session:didOutputAudioSampleBuffer:]
  -[ARSKView session:didUpdateFrame:]
  -[ARSKView hitTest:types:]
  -[ARSKView _anchorForNode:inFrame:]
  -[ARSKView _updateNode:forAnchor:projectionMatrix:camera:orientation:]
  -[ARSKView _updateAnchors:camera:]
  -[ARSKView sessionShouldAttemptRelocalization:completion:]
  -[ARSKView anchorForNode:]
  -[ARSKView nodeForAnchor:]


ARFrame : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  double currentCaptureTimestamp
 @property  ^{__CVBuffer=} capturedImage
 @property  NSArray *anchors
 @property  ARLightEstimate *lightEstimate
 @property  long long worldMappingStatus
 @property  BOOL predicted
 @property  ARPointCloud *featurePoints
 @property  ARPointCloud *referenceFeaturePoints
 @property  NSArray *cachedPointClouds
 @property  {?=[4]} referenceOriginTransform
 @property  {?=[4]} referenceOriginDelta
 @property  {?=[4]} sessionOriginTransform
 @property  {?=[4]} worldAlignmentTransform
 @property  long long worldAlignment
 @property  ARFrameTimingData *timingData
 @property  ARWorldTrackingErrorData *worldTrackingErrorData
 @property  NSDictionary *worldTrackingStateDetails
 @property  ARWorldTrackingState *worldTrackingState
 @property  long long renderFramesPerSecond
 @property  BOOL shouldRestrictFrameRate
 @property  NSDate *captureDate
 @property  ARRawSceneUnderstandingData *rawSceneUnderstandingData
 @property  double estimatedLuminance
 @property  ^{__CVBuffer=} segmentationBuffer
 @property  ^{__CVBuffer=} estimatedDepthData
 @property  ^{__CVBuffer=} downSampledMattingPixelBuffer
 @property  ^{__CVBuffer=} mattingScaleImagePixelBuffer
 @property  NSArray *detectedBodies
 @property  ARFaceData *faceData
 @property  AVDepthData *capturedDepthData
 @property  ARVideoFormat *currentlyActiveVideoFormat
 @property  double capturedDepthDataTimestamp
 @property  <MTLTexture> *imageNoiseTexture
 @property  float imageNoiseIntensity
 @property  double timestamp
 @property  <MTLTexture> *cameraGrainTexture
 @property  float cameraGrainIntensity
 @property  ARCamera *camera
 @property  ARPointCloud *rawFeaturePoints
 @property  ARBody2D *detectedBody

  // class methods
  +[ARFrame supportsSecureCoding]

  // instance methods
  -[ARFrame dealloc]
  -[ARFrame isEqual:]
  -[ARFrame copyWithZone:]
  -[ARFrame encodeWithCoder:]
  -[ARFrame initWithCoder:]
  -[ARFrame .cxx_destruct]
  -[ARFrame timestamp]
  -[ARFrame timingData]
  -[ARFrame camera]
  -[ARFrame captureDate]
  -[ARFrame setCaptureDate:]
  -[ARFrame capturedImage]
  -[ARFrame setCapturedImage:]
  -[ARFrame anchors]
  -[ARFrame setWorldAlignment:]
  -[ARFrame setTimingData:]
  -[ARFrame setAnchors:]
  -[ARFrame estimatedDepthData]
  -[ARFrame mattingScaleImagePixelBuffer]
  -[ARFrame segmentationBuffer]
  -[ARFrame worldTrackingState]
  -[ARFrame worldMappingStatus]
  -[ARFrame worldAlignmentTransform]
  -[ARFrame lightEstimate]
  -[ARFrame featurePoints]
  -[ARFrame currentCaptureTimestamp]
  -[ARFrame faceData]
  -[ARFrame setFaceData:]
  -[ARFrame worldAlignment]
  -[ARFrame referenceOriginTransform]
  -[ARFrame setWorldTrackingState:]
  -[ARFrame setCurrentlyActiveVideoFormat:]
  -[ARFrame setWorldMappingStatus:]
  -[ARFrame setReferenceOriginTransform:]
  -[ARFrame setLightEstimate:]
  -[ARFrame detectedBodies]
  -[ARFrame cameraGrainIntensity]
  -[ARFrame worldTrackingStateDetails]
  -[ARFrame worldTrackingErrorData]
  -[ARFrame currentlyActiveVideoFormat]
  -[ARFrame hitTest:types:]
  -[ARFrame initWithCamera:timestamp:]
  -[ARFrame isPredicted]
  -[ARFrame transformPointToNDCSpace:]
  -[ARFrame _hitTestFromOrigin:withDirection:types:]
  -[ARFrame sessionOriginTransformAvailable]
  -[ARFrame worldAlignmentTransformAvailable]
  -[ARFrame _hitTestEstimatedPlanesFromOrigin:withDirection:planeAlignment:]
  -[ARFrame _horizontalPlaneEstimateFromFeaturePoint:fromOrigin:withDirection:]
  -[ARFrame initWithTimestamp:context:]
  -[ARFrame initWithTimestampAndNoContext:]
  -[ARFrame setPredictedTimestamp:]
  -[ARFrame setSegmentationBuffer:]
  -[ARFrame setEstimatedDepthData:]
  -[ARFrame setDownSampledMattingPixelBuffer:]
  -[ARFrame setMattingScaleImagePixelBuffer:]
  -[ARFrame detectedBody]
  -[ARFrame raycastQueryFromPoint:allowingTarget:alignment:]
  -[ARFrame displayTransformForOrientation:viewportSize:]
  -[ARFrame rawFeaturePoints]
  -[ARFrame capturedDepthData]
  -[ARFrame cameraGrainTexture]
  -[ARFrame _updatePredicted:]
  -[ARFrame referenceOriginTransformAvailable]
  -[ARFrame referenceOriginTransformUpdated]
  -[ARFrame setReferenceOriginTransformUpdated:]
  -[ARFrame referenceOriginChanged]
  -[ARFrame setReferenceOriginChanged:]
  -[ARFrame setReferenceOriginDelta:]
  -[ARFrame referenceOriginDeltaAvailable]
  -[ARFrame setSessionOriginTransform:]
  -[ARFrame setWorldAlignmentTransform:]
  -[ARFrame gravityAlignedReferenceOriginTransform]
  -[ARFrame capturedDepthDataTimestamp]
  -[ARFrame setCapturedDepthDataTimestamp:]
  -[ARFrame setFeaturePoints:]
  -[ARFrame referenceFeaturePoints]
  -[ARFrame setReferenceFeaturePoints:]
  -[ARFrame cachedPointClouds]
  -[ARFrame setCachedPointClouds:]
  -[ARFrame referenceOriginDelta]
  -[ARFrame sessionOriginTransform]
  -[ARFrame setWorldTrackingErrorData:]
  -[ARFrame setWorldTrackingStateDetails:]
  -[ARFrame renderFramesPerSecond]
  -[ARFrame setRenderFramesPerSecond:]
  -[ARFrame shouldRestrictFrameRate]
  -[ARFrame setShouldRestrictFrameRate:]
  -[ARFrame rawSceneUnderstandingData]
  -[ARFrame setRawSceneUnderstandingData:]
  -[ARFrame estimatedLuminance]
  -[ARFrame setEstimatedLuminance:]
  -[ARFrame downSampledMattingPixelBuffer]
  -[ARFrame setDetectedBodies:]
  -[ARFrame setCapturedDepthData:]
  -[ARFrame imageNoiseTexture]
  -[ARFrame setImageNoiseTexture:]
  -[ARFrame imageNoiseIntensity]
  -[ARFrame setImageNoiseIntensity:]


ARFrameTimingData : NSObject /usr/lib/libc++.1.dylib
 @property  double videoLatency
 @property  NSDictionary *timestamps

  // instance methods
  -[ARFrameTimingData init]
  -[ARFrameTimingData .cxx_destruct]
  -[ARFrameTimingData timestamps]
  -[ARFrameTimingData addTimestamp:forDataOfClass:]
  -[ARFrameTimingData videoLatency]
  -[ARFrameTimingData setVideoLatency:]


ARRenderSyncScheduler : NSObject /usr/lib/libc++.1.dylib
 @property  double inputJitterBufferInterval
 @property  long long expectedFramesPerSecond
 @property  double vsyncOffset
 @property  BOOL schedulingActive
 @property  unsigned long excessiveCallbackOptions

  // instance methods
  -[ARRenderSyncScheduler init]
  -[ARRenderSyncScheduler .cxx_destruct]
  -[ARRenderSyncScheduler _callback]
  -[ARRenderSyncScheduler initWithExpectedFramesPerSecond:]
  -[ARRenderSyncScheduler vsyncOffset]
  -[ARRenderSyncScheduler setVsyncOffset:]
  -[ARRenderSyncScheduler excessiveCallbackOptions]
  -[ARRenderSyncScheduler _tryNextBlockWithTotalTried:]
  -[ARRenderSyncScheduler _callbackActionForBlockWithLatency:]
  -[ARRenderSyncScheduler inputJitterBufferInterval]
  -[ARRenderSyncScheduler expectedFramesPerSecond]
  -[ARRenderSyncScheduler setExpectedFramesPerSecond:]
  -[ARRenderSyncScheduler schedulingActive]
  -[ARRenderSyncScheduler setSchedulingActive:]
  -[ARRenderSyncScheduler submitBlock:]
  -[ARRenderSyncScheduler setInputJitterBufferInterval:]
  -[ARRenderSyncScheduler setExcessiveCallbackOptions:]


ARRenderSyncSchedulerBlockWrapper : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *entryTimestamp
 @property  @? block

  // instance methods
  -[ARRenderSyncSchedulerBlockWrapper .cxx_destruct]
  -[ARRenderSyncSchedulerBlockWrapper block]
  -[ARRenderSyncSchedulerBlockWrapper setBlock:]
  -[ARRenderSyncSchedulerBlockWrapper setEntryTimestamp:]
  -[ARRenderSyncSchedulerBlockWrapper entryTimestamp]


ARCoachingDelayedAnimation : UIViewPropertyAnimator /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 @property  double coachingDelayTime

  // instance methods
  -[ARCoachingDelayedAnimation coachingDelayTime]
  -[ARCoachingDelayedAnimation setCoachingDelayTime:]


ARCoachingOverlayView : UIView /System/Library/Frameworks/QuartzCore.framework/QuartzCore <ARInternalSessionObserver>
 @property  BOOL isUIAnimating
 @property  BOOL wasEverActivated
 @property  BOOL isRelocalizing
 @property  long long trackingStateReasonOverride
 @property  BOOL trackingStateNormalOverride
 @property  <ARCoachingOverlayViewDelegate> *delegate
 @property  NSObject<ARSessionProviding> *sessionProvider
 @property  ARSession *session
 @property  long long goal
 @property  BOOL activatesAutomatically
 @property  BOOL isActive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARCoachingOverlayView dealloc]
  -[ARCoachingOverlayView encodeWithCoder:]
  -[ARCoachingOverlayView initWithCoder:]
  -[ARCoachingOverlayView delegate]
  -[ARCoachingOverlayView setDelegate:]
  -[ARCoachingOverlayView .cxx_destruct]
  -[ARCoachingOverlayView isActive]
  -[ARCoachingOverlayView observeValueForKeyPath:ofObject:change:context:]
  -[ARCoachingOverlayView session]
  -[ARCoachingOverlayView setSession:]
  -[ARCoachingOverlayView teardown]
  -[ARCoachingOverlayView initWithFrame:]
  -[ARCoachingOverlayView setActive:animated:]
  -[ARCoachingOverlayView buttonPress:]
  -[ARCoachingOverlayView fadeOut]
  -[ARCoachingOverlayView session:didFailWithError:]
  -[ARCoachingOverlayView session:didUpdateFrame:]
  -[ARCoachingOverlayView setGoal:]
  -[ARCoachingOverlayView goal]
  -[ARCoachingOverlayView startup]
  -[ARCoachingOverlayView wasEverActivated]
  -[ARCoachingOverlayView checkActivationHeuristics]
  -[ARCoachingOverlayView isRelocalizing]
  -[ARCoachingOverlayView fadeInWithButton:]
  -[ARCoachingOverlayView isUIAnimating]
  -[ARCoachingOverlayView checkDeactivationHeuristics]
  -[ARCoachingOverlayView updateWithFrame:]
  -[ARCoachingOverlayView session:willRunWithConfiguration:]
  -[ARCoachingOverlayView setupView]
  -[ARCoachingOverlayView setActivatesAutomatically:]
  -[ARCoachingOverlayView swapState:]
  -[ARCoachingOverlayView validateSessionGoal]
  -[ARCoachingOverlayView restartIfActive]
  -[ARCoachingOverlayView doStateAction:]
  -[ARCoachingOverlayView finishAllUIAnimations]
  -[ARCoachingOverlayView generateHeuristicsForActive:]
  -[ARCoachingOverlayView updateCoachingRequirements]
  -[ARCoachingOverlayView resolveCoachingMessage]
  -[ARCoachingOverlayView killUIAnimations]
  -[ARCoachingOverlayView calcFadeDurationIn:withButton:]
  -[ARCoachingOverlayView setCoachingMessage:animationState:]
  -[ARCoachingOverlayView crossFadeCoachingMessage:]
  -[ARCoachingOverlayView updateUIAnimations]
  -[ARCoachingOverlayView setSessionProvider:]
  -[ARCoachingOverlayView sessionProvider]
  -[ARCoachingOverlayView activatesAutomatically]
  -[ARCoachingOverlayView trackingStateReasonOverride]
  -[ARCoachingOverlayView setTrackingStateReasonOverride:]
  -[ARCoachingOverlayView trackingStateNormalOverride]
  -[ARCoachingOverlayView setTrackingStateNormalOverride:]


ARPresentationFrame : NSObject /usr/lib/libc++.1.dylib
 @property  double timestamp
 @property  unsigned long frameNumber
 @property  unsigned long waitFrameNumber
 @property  unsigned long waitNumber
 @property  ARFrame *frame
 @property  ARRenderStats *frameStatsRender
 @property  {?=[4]} transform
 @property  void depthHints
 @property  <MTLSharedEvent> *applicationEvent
 @property  <MTLSharedEvent> *compositorEvent
 @property  NSArray *presentationTargets

  // instance methods
  -[ARPresentationFrame .cxx_destruct]
  -[ARPresentationFrame transform]
  -[ARPresentationFrame timestamp]
  -[ARPresentationFrame setTimestamp:]
  -[ARPresentationFrame frame]
  -[ARPresentationFrame setTransform:]
  -[ARPresentationFrame setFrame:]
  -[ARPresentationFrame frameNumber]
  -[ARPresentationFrame setFrameNumber:]
  -[ARPresentationFrame presentationTargets]
  -[ARPresentationFrame frameStatsRender]
  -[ARPresentationFrame initWithPresentationTargets:compositorEvent:applicationEvent:]
  -[ARPresentationFrame waitBeforeStartingRender:]
  -[ARPresentationFrame signalAfterFinishingRender:]
  -[ARPresentationFrame compositorEvent]
  -[ARPresentationFrame waitNumber]
  -[ARPresentationFrame applicationEvent]
  -[ARPresentationFrame presentationTargetForEyeLocation:]
  -[ARPresentationFrame setWaitNumber:]
  -[ARPresentationFrame waitFrameNumber]
  -[ARPresentationFrame setWaitFrameNumber:]
  -[ARPresentationFrame setFrameStatsRender:]
  -[ARPresentationFrame depthHints]
  -[ARPresentationFrame setDepthHints:]


ARImageSensorSettings : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  ARVideoFormat *videoFormat
 @property  BOOL autoFocusEnabled
 @property  BOOL mirrorVideoOutput
 @property  BOOL visionDataOutputEnabled
 @property  float maxGainOverride
 @property  BOOL geometricDistortionCorrectionEnabled
 @property  NSString *metaData
 @property  NSDictionary *visionDataOutputParameters
 @property  BOOL enabled

  // instance methods
  -[ARImageSensorSettings isEqual:]
  -[ARImageSensorSettings copyWithZone:]
  -[ARImageSensorSettings setEnabled:]
  -[ARImageSensorSettings .cxx_destruct]
  -[ARImageSensorSettings isEnabled]
  -[ARImageSensorSettings metaData]
  -[ARImageSensorSettings setMetaData:]
  -[ARImageSensorSettings videoFormat]
  -[ARImageSensorSettings setVideoFormat:]
  -[ARImageSensorSettings setGeometricDistortionCorrectionEnabled:]
  -[ARImageSensorSettings maxGainOverride]
  -[ARImageSensorSettings setMaxGainOverride:]
  -[ARImageSensorSettings geometricDistortionCorrectionEnabled]
  -[ARImageSensorSettings mirrorVideoOutput]
  -[ARImageSensorSettings initWithVideoFormat:]
  -[ARImageSensorSettings setAutoFocusEnabled:]
  -[ARImageSensorSettings setMirrorVideoOutput:]
  -[ARImageSensorSettings setVisionDataOutputEnabled:]
  -[ARImageSensorSettings visionDataOutputEnabled]
  -[ARImageSensorSettings setVisionDataOutputParameters:]
  -[ARImageSensorSettings autoFocusEnabled]
  -[ARImageSensorSettings visionDataOutputParameters]


ARParentImageSensorSettings : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  BOOL audioCaptureEnabled
 @property  BOOL allowCameraInMultipleForegroundAppLayout
 @property  NSArray *settings

  // instance methods
  -[ARParentImageSensorSettings init]
  -[ARParentImageSensorSettings isEqual:]
  -[ARParentImageSensorSettings copyWithZone:]
  -[ARParentImageSensorSettings .cxx_destruct]
  -[ARParentImageSensorSettings settings]
  -[ARParentImageSensorSettings setSettings:]
  -[ARParentImageSensorSettings allowCameraInMultipleForegroundAppLayout]
  -[ARParentImageSensorSettings audioCaptureEnabled]
  -[ARParentImageSensorSettings setAudioCaptureEnabled:]
  -[ARParentImageSensorSettings setAllowCameraInMultipleForegroundAppLayout:]


ARImageSensor : NSObject /usr/lib/libc++.1.dylib <AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureDataOutputSynchronizerDelegate, ARSensor>
 @property  float defaultLensPosition
 @property  long long captureFramesPerSecond
 @property  BOOL runningSingleShotAutoFocus
 @property  <ARSensorDelegate> *delegate
 @property  ARImageSensorSettings *settings
 @property  AVCaptureDevice *captureDevice
 @property  AVCaptureSession *captureSession
 @property  AVCaptureDeviceInput *videoInput
 @property  AVCaptureVideoDataOutput *videoOutput
 @property  AVCaptureConnection *videoConnection
 @property  AVCaptureConnection *visionDataConnection
 @property  NSArray *outputsForSynchronizer
 @property  AVCaptureDataOutputSynchronizer *outputSynchronizer
 @property  NSObject<OS_dispatch_queue> *captureQueue
 @property  unsigned long powerUsage
 @property  NSMutableArray *connections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARImageSensor registerSignPostForImageData:]
  +[ARImageSensor defaultLensPosition]

  // instance methods
  -[ARImageSensor init]
  -[ARImageSensor dealloc]
  -[ARImageSensor delegate]
  -[ARImageSensor setDelegate:]
  -[ARImageSensor .cxx_destruct]
  -[ARImageSensor stop]
  -[ARImageSensor start]
  -[ARImageSensor observeValueForKeyPath:ofObject:change:context:]
  -[ARImageSensor settings]
  -[ARImageSensor connections]
  -[ARImageSensor setConnections:]
  -[ARImageSensor captureOutput:didOutputSampleBuffer:fromConnection:]
  -[ARImageSensor captureOutput:didDropSampleBuffer:fromConnection:]
  -[ARImageSensor dataOutputSynchronizer:didOutputSynchronizedDataCollection:]
  -[ARImageSensor captureSession]
  -[ARImageSensor captureDevice]
  -[ARImageSensor videoOutput]
  -[ARImageSensor videoInput]
  -[ARImageSensor triggerVisionDataBurst]
  -[ARImageSensor logPrefix]
  -[ARImageSensor reconfigure:]
  -[ARImageSensor captureFramesPerSecond]
  -[ARImageSensor setCaptureFramesPerSecond:]
  -[ARImageSensor setPowerUsage:]
  -[ARImageSensor initWithSettings:captureSession:captureQueue:]
  -[ARImageSensor configureCaptureSession]
  -[ARImageSensor configureCaptureDevice]
  -[ARImageSensor prepareToStart]
  -[ARImageSensor captureQueue]
  -[ARImageSensor outputSynchronizer]
  -[ARImageSensor providedDataTypes]
  -[ARImageSensor outputsForSynchronizer]
  -[ARImageSensor forceUpdatePowerUsage:]
  -[ARImageSensor powerUsage]
  -[ARImageSensor updateCaptureDeviceFrameRate:]
  -[ARImageSensor canReconfigure:]
  -[ARImageSensor enableSensor:]
  -[ARImageSensor defaultLensPosition]
  -[ARImageSensor setDefaultLensPosition:]
  -[ARImageSensor _configureCameraFocusForDevice:]
  -[ARImageSensor _setActiveFormat]
  -[ARImageSensor _configureFrameRateForDevice:]
  -[ARImageSensor _configureVisionDataOutputForSession:]
  -[ARImageSensor _configureCameraExposureForDevice:]
  -[ARImageSensor _configureCameraWhiteBalanceForDevice:]
  -[ARImageSensor _configureImageControlModeForDevice:]
  -[ARImageSensor configureGeometricDistortionCorrectionForDevice:]
  -[ARImageSensor _configureFrameRateForDevice:frameRate:]
  -[ARImageSensor setRunningSingleShotAutoFocus:]
  -[ARImageSensor enableAutoFocusForDevice:]
  -[ARImageSensor _dispatchImageData:]
  -[ARImageSensor runningSingleShotAutoFocus]
  -[ARImageSensor videoConnection]
  -[ARImageSensor visionDataConnection]


ARRaycastResult : NSObject /usr/lib/libc++.1.dylib
 @property  long long target
 @property  ARAnchor *anchor
 @property  {?=[4]} localTransform
 @property  NSUUID *anchorIdentifier
 @property  {?=[4]} worldTransform
 @property  long long targetAlignment

  // instance methods
  -[ARRaycastResult .cxx_destruct]
  -[ARRaycastResult setTarget:]
  -[ARRaycastResult target]
  -[ARRaycastResult anchor]
  -[ARRaycastResult setAnchor:]
  -[ARRaycastResult setLocalTransform:]
  -[ARRaycastResult localTransform]
  -[ARRaycastResult worldTransform]
  -[ARRaycastResult _description:]
  -[ARRaycastResult targetAlignment]
  -[ARRaycastResult initWithWorldTransform:target:targetAlignment:]
  -[ARRaycastResult anchorIdentifier]
  -[ARRaycastResult setAnchorIdentifier:]


ARPlaneAnchor : ARAnchor
 @property  void center
 @property  void extent
 @property  ARPlaneGeometry *geometry
 @property  ARPatchGrid *gridExtent
 @property  float uncertaintyAlongNormal
 @property  long long worldAlignmentRotation
 @property  long long classificationStatus
 @property  long long classification
 @property  NSDictionary *possibleClassifications
 @property  NSString *classificationLabel
 @property  long long alignment

  // class methods
  +[ARPlaneAnchor supportsSecureCoding]
  +[ARPlaneAnchor isClassificationSupported]

  // instance methods
  -[ARPlaneAnchor encodeWithCoder:]
  -[ARPlaneAnchor initWithCoder:]
  -[ARPlaneAnchor .cxx_destruct]
  -[ARPlaneAnchor initWithAnchor:]
  -[ARPlaneAnchor alignment]
  -[ARPlaneAnchor extent]
  -[ARPlaneAnchor debugQuickLookObject]
  -[ARPlaneAnchor center]
  -[ARPlaneAnchor setCenter:]
  -[ARPlaneAnchor setExtent:]
  -[ARPlaneAnchor geometry]
  -[ARPlaneAnchor setGeometry:]
  -[ARPlaneAnchor area]
  -[ARPlaneAnchor classification]
  -[ARPlaneAnchor classificationLabel]
  -[ARPlaneAnchor setClassification:]
  -[ARPlaneAnchor _description:]
  -[ARPlaneAnchor classificationStatus]
  -[ARPlaneAnchor gridExtent]
  -[ARPlaneAnchor initWithIdentifier:transform:alignment:]
  -[ARPlaneAnchor _hitTestFromOrigin:withDirection:usingExtent:usingGeometry:]
  -[ARPlaneAnchor setWorldAlignmentRotation:]
  -[ARPlaneAnchor setUncertaintyAlongNormal:]
  -[ARPlaneAnchor worldAlignmentRotation]
  -[ARPlaneAnchor setGridExtent:]
  -[ARPlaneAnchor setClassificationStatus:]
  -[ARPlaneAnchor setPossibleClassifications:]
  -[ARPlaneAnchor setClassificationLabel:]
  -[ARPlaneAnchor uncertaintyAlongNormal]
  -[ARPlaneAnchor possibleClassifications]


ARLightEstimationData : NSObject /usr/lib/libc++.1.dylib <ARResultData>
 @property  ARLightEstimate *lightEstimate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARLightEstimationData .cxx_destruct]
  -[ARLightEstimationData timestamp]
  -[ARLightEstimationData lightEstimate]
  -[ARLightEstimationData setLightEstimate:]


ARCriticalTimer : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ARCriticalTimer init]
  -[ARCriticalTimer dealloc]
  -[ARCriticalTimer .cxx_destruct]
  -[ARCriticalTimer cancel]
  -[ARCriticalTimer completionHandler]
  -[ARCriticalTimer start:withCallback:]


ARGPUWarper : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ARGPUWarper init]
  -[ARGPUWarper .cxx_destruct]
  -[ARGPUWarper warpCameraImage:withExposureOffset:withCameraIntrinsics:withCameraTransform:toPlane:withLoadAction:synchronous:]
  -[ARGPUWarper warpPlane:toPlane:withLoadAction:synchronous:]


ARMattingImageMetaData : NSObject /usr/lib/libc++.1.dylib <ARResultData>
 @property  double timestamp
 @property  ^{__CVBuffer=} downSampledImageBuffer
 @property  ^{__CVBuffer=} mattingScaleImageBuffer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARMattingImageMetaData dealloc]
  -[ARMattingImageMetaData timestamp]
  -[ARMattingImageMetaData initWithTimestamp:downSampledImageBuffer:mattingScaleImageBuffer:]
  -[ARMattingImageMetaData downSampledImageBuffer]
  -[ARMattingImageMetaData mattingScaleImageBuffer]


ARPresentationOverrides : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL skipDistortion
 @property  BOOL enableCAC
 @property  BOOL skipVignette
 @property  BOOL skipWarp
 @property  BOOL skipPositionalWarp
 @property  BOOL showDistortion
 @property  BOOL showCAC
 @property  BOOL skipGammaCorrection
 @property  long long minVsyncsPerFrame
 @property  long long forceDisplayMode
 @property  BOOL perQuadCAC
 @property  BOOL overrideCACThreshold
 @property  float CACThresholdValue
 @property  float alignmentPeriod
 @property  BOOL showPerformanceHUD
 @property  BOOL enableThermalMitigation

  // instance methods
  -[ARPresentationOverrides init]
  -[ARPresentationOverrides updateDefaults]
  -[ARPresentationOverrides updateBool:value:]
  -[ARPresentationOverrides updateInteger:value:]
  -[ARPresentationOverrides updateFloat:value:]
  -[ARPresentationOverrides setBoolKey:value:]
  -[ARPresentationOverrides setIntegerKey:value:]
  -[ARPresentationOverrides setFloatKey:value:]
  -[ARPresentationOverrides clearModifications]
  -[ARPresentationOverrides setSkipDistortion:]
  -[ARPresentationOverrides setEnableCAC:]
  -[ARPresentationOverrides setSkipVignette:]
  -[ARPresentationOverrides setSkipWarp:]
  -[ARPresentationOverrides setSkipPositionalWarp:]
  -[ARPresentationOverrides setShowDistortion:]
  -[ARPresentationOverrides setShowCAC:]
  -[ARPresentationOverrides setSkipGammaCorrection:]
  -[ARPresentationOverrides setMinVsyncsPerFrame:]
  -[ARPresentationOverrides setShowPerformanceHUD:]
  -[ARPresentationOverrides setAlignmentPeriod:]
  -[ARPresentationOverrides skipDistortion]
  -[ARPresentationOverrides enableCAC]
  -[ARPresentationOverrides skipVignette]
  -[ARPresentationOverrides skipWarp]
  -[ARPresentationOverrides skipPositionalWarp]
  -[ARPresentationOverrides showDistortion]
  -[ARPresentationOverrides showCAC]
  -[ARPresentationOverrides skipGammaCorrection]
  -[ARPresentationOverrides minVsyncsPerFrame]
  -[ARPresentationOverrides forceDisplayMode]
  -[ARPresentationOverrides setForceDisplayMode:]
  -[ARPresentationOverrides perQuadCAC]
  -[ARPresentationOverrides overrideCACThreshold]
  -[ARPresentationOverrides CACThresholdValue]
  -[ARPresentationOverrides alignmentPeriod]
  -[ARPresentationOverrides showPerformanceHUD]
  -[ARPresentationOverrides enableThermalMitigation]


ARObjectAnchor : ARAnchor
 @property  ARReferenceObject *referenceObject

  // class methods
  +[ARObjectAnchor supportsSecureCoding]

  // instance methods
  -[ARObjectAnchor name]
  -[ARObjectAnchor encodeWithCoder:]
  -[ARObjectAnchor initWithCoder:]
  -[ARObjectAnchor .cxx_destruct]
  -[ARObjectAnchor initWithAnchor:]
  -[ARObjectAnchor referenceObject]
  -[ARObjectAnchor isTracked]
  -[ARObjectAnchor initWithReferenceObject:transform:]


ARProximitySensor : NSObject /usr/lib/libc++.1.dylib <PRRangingSessionDelegate, ARSensor>
 @property  BOOL running
 @property  <ARSensorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long powerUsage

  // instance methods
  -[ARProximitySensor init]
  -[ARProximitySensor dealloc]
  -[ARProximitySensor delegate]
  -[ARProximitySensor setDelegate:]
  -[ARProximitySensor .cxx_destruct]
  -[ARProximitySensor stop]
  -[ARProximitySensor start]
  -[ARProximitySensor isRunning]
  -[ARProximitySensor setRunning:]
  -[ARProximitySensor pushCollaborationData:]
  -[ARProximitySensor providedDataTypes]
  -[ARProximitySensor _requestInitialCollaborationData]
  -[ARProximitySensor rangingSession:didFailWithError:]
  -[ARProximitySensor rangingSession:didMeasurePeer:atRelativePosition:]
  -[ARProximitySensor rangingSession:didOutputCollaborationData:]


ARFaceData : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSArray *detectedFaces
 @property  NSDictionary *faceMeshPayload
 @property  BOOL mirrored

  // class methods
  +[ARFaceData supportsSecureCoding]

  // instance methods
  -[ARFaceData init]
  -[ARFaceData isEqual:]
  -[ARFaceData encodeWithCoder:]
  -[ARFaceData initWithCoder:]
  -[ARFaceData .cxx_destruct]
  -[ARFaceData isMirrored]
  -[ARFaceData setMirrored:]
  -[ARFaceData detectedFaces]
  -[ARFaceData setDetectedFaces:]
  -[ARFaceData initWithMetadataObjects:mirroredVideoInput:stripDetectionData:]
  -[ARFaceData faceMeshPayload]
  -[ARFaceData setFaceMeshPayload:]


ARWorldMap : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  long long version
 @property  NSData *trackingData
 @property  NSData *surfaceData
 @property  {?=[4]} referenceOriginTransform
 @property  void center
 @property  void extent
 @property  NSArray *anchors
 @property  ARPointCloud *rawFeaturePoints

  // class methods
  +[ARWorldMap supportsSecureCoding]
  +[ARWorldMap featurePointsForTrackingData:referenceOriginTransform:]
  +[ARWorldMap boundsForTrackingData:]
  +[ARWorldMap keyframesForTrackingData:withFeaturePoints:referenceOriginTransform:]

  // instance methods
  -[ARWorldMap isEqual:]
  -[ARWorldMap copyWithZone:]
  -[ARWorldMap encodeWithCoder:]
  -[ARWorldMap initWithCoder:]
  -[ARWorldMap .cxx_destruct]
  -[ARWorldMap version]
  -[ARWorldMap extent]
  -[ARWorldMap center]
  -[ARWorldMap anchors]
  -[ARWorldMap setAnchors:]
  -[ARWorldMap trackingData]
  -[ARWorldMap referenceOriginTransform]
  -[ARWorldMap rawFeaturePoints]
  -[ARWorldMap initWithTrackingData:referenceOriginTransform:featurePoints:bounds:]
  -[ARWorldMap initWithTrackingData:referenceOriginTransform:]
  -[ARWorldMap surfaceData]
  -[ARWorldMap extractReferenceObjectWithTransform:center:extent:error:]
  -[ARWorldMap setSurfaceData:]


ARWorldAlignmentTechnique : ARTechnique
 @property  long long alignment
 @property  long long cameraPosition
 @property  CMMotionManager *motionManager

  // instance methods
  -[ARWorldAlignmentTechnique isEqual:]
  -[ARWorldAlignmentTechnique .cxx_destruct]
  -[ARWorldAlignmentTechnique alignment]
  -[ARWorldAlignmentTechnique motionManager]
  -[ARWorldAlignmentTechnique cameraPosition]
  -[ARWorldAlignmentTechnique processData:]
  -[ARWorldAlignmentTechnique requestResultDataAtTimestamp:context:]
  -[ARWorldAlignmentTechnique resultDataClasses]
  -[ARWorldAlignmentTechnique requiredSensorDataTypes]
  -[ARWorldAlignmentTechnique initWithAlignment:cameraPosition:]
  -[ARWorldAlignmentTechnique predictedResultDataAtTimestamp:context:]
  -[ARWorldAlignmentTechnique _handleTrackingStateChanges:initialized:relocalized:]
  -[ARWorldAlignmentTechnique _referenceDeviceOrientation:]
  -[ARWorldAlignmentTechnique _referenceTrackingAlignmentWithPoseData:deviceOrientation:]
  -[ARWorldAlignmentTechnique _updateHeadingAlignmentWithPoseData:deviceOrientation:timestamp:]
  -[ARWorldAlignmentTechnique _deviceOrientationPoseDataFromDeviceOrientation:]
  -[ARWorldAlignmentTechnique _trackingAlignmentAngleForPoseData:deviceOrientation:]
  -[ARWorldAlignmentTechnique initWithAlignment:]
  -[ARWorldAlignmentTechnique setMotionManager:]


ARCameraAlignmentData : NSObject /usr/lib/libc++.1.dylib <ARResultData, NSSecureCoding>
 @property  double timestamp
 @property  {?=[4]} cameraTransform
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARCameraAlignmentData supportsSecureCoding]

  // instance methods
  -[ARCameraAlignmentData init]
  -[ARCameraAlignmentData isEqual:]
  -[ARCameraAlignmentData encodeWithCoder:]
  -[ARCameraAlignmentData initWithCoder:]
  -[ARCameraAlignmentData timestamp]
  -[ARCameraAlignmentData setTimestamp:]
  -[ARCameraAlignmentData cameraTransform]
  -[ARCameraAlignmentData setCameraTransform:]


ARWorldAlignmentData : NSObject /usr/lib/libc++.1.dylib <ARResultData, NSSecureCoding>
 @property  {?=[4]} worldAlignmentTransform
 @property  unsigned long worldAlignmentModifiers
 @property  BOOL worldAlignmentReset
 @property  BOOL referenceOriginChanged
 @property  BOOL sessionShouldResumeCameraPosition
 @property  BOOL sessionShouldResumeCameraPositionAndHeading
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARWorldAlignmentData supportsSecureCoding]

  // instance methods
  -[ARWorldAlignmentData init]
  -[ARWorldAlignmentData encodeWithCoder:]
  -[ARWorldAlignmentData initWithCoder:]
  -[ARWorldAlignmentData worldAlignmentTransform]
  -[ARWorldAlignmentData worldAlignmentModifiers]
  -[ARWorldAlignmentData referenceOriginChanged]
  -[ARWorldAlignmentData setReferenceOriginChanged:]
  -[ARWorldAlignmentData setWorldAlignmentTransform:]
  -[ARWorldAlignmentData setSessionShouldResumeCameraPositionAndHeading:]
  -[ARWorldAlignmentData setWorldAlignmentReset:]
  -[ARWorldAlignmentData setSessionShouldResumeCameraPosition:]
  -[ARWorldAlignmentData worldAlignmentReset]
  -[ARWorldAlignmentData sessionShouldResumeCameraPosition]
  -[ARWorldAlignmentData sessionShouldResumeCameraPositionAndHeading]


ARCoachingAnimationView : UIView /System/Library/Frameworks/QuartzCore.framework/QuartzCore <ARCoachingUpdateManagerDelegate>
 @property  long long animationState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARCoachingAnimationView dealloc]
  -[ARCoachingAnimationView initWithCoder:]
  -[ARCoachingAnimationView .cxx_destruct]
  -[ARCoachingAnimationView initWithFrame:]
  -[ARCoachingAnimationView layoutSubviews]
  -[ARCoachingAnimationView animationState]
  -[ARCoachingAnimationView setAnimationState:]
  -[ARCoachingAnimationView updateForCurrentTime:timeDelta:]
  -[ARCoachingAnimationView resizeForDrawable:]
  -[ARCoachingAnimationView drawInDrawable:withCommandBuffer:timeDelta:]
  -[ARCoachingAnimationView setupView]
  -[ARCoachingAnimationView startCoachingAnimation:]
  -[ARCoachingAnimationView killCoachingAnimation]
  -[ARCoachingAnimationView updateWithFrame:motionTracker:]
  -[ARCoachingAnimationView orientationChanged]
  -[ARCoachingAnimationView clampCubeToQuarterRotation]
  -[ARCoachingAnimationView updateMetalLayer]
  -[ARCoachingAnimationView updateCubeRotation:motionTracker:]
  -[ARCoachingAnimationView calcNextAnimationSwitchTime:forState:]
  -[ARCoachingAnimationView updateAlternatingPlanes:]
  -[ARCoachingAnimationView updateVerticalClamp:]


ARFLSpring : NSObject /usr/lib/libc++.1.dylib
 @property  double retargetResponseFraction
 @property  double projectionDeceleration
 @property  double value
 @property  double target
 @property  double velocity
 @property  double projectedTarget
 @property  {ARFLSpringParameters=dddd} parameters
 @property  {ARFLSpringParameters=dddd} trackingParameters
 @property  BOOL tracking
 @property  double minimumTarget
 @property  double maximumTarget
 @property  double rubberbandRange
 @property  double rubberbandFactor

  // class methods
  +[ARFLSpring springWithValue:]

  // instance methods
  -[ARFLSpring init]
  -[ARFLSpring setTarget:]
  -[ARFLSpring target]
  -[ARFLSpring value]
  -[ARFLSpring setValue:]
  -[ARFLSpring parameters]
  -[ARFLSpring setParameters:]
  -[ARFLSpring velocity]
  -[ARFLSpring setVelocity:]
  -[ARFLSpring isTracking]
  -[ARFLSpring setTracking:]
  -[ARFLSpring initWithValue:]
  -[ARFLSpring step:]
  -[ARFLSpring resetImmediatelyToValue:]
  -[ARFLSpring _projectedTargetForVelocity:]
  -[ARFLSpring _effectiveParameters]
  -[ARFLSpring _updateForEffectiveParameters]
  -[ARFLSpring projectedTarget]
  -[ARFLSpring setTrackingParameters:]
  -[ARFLSpring usesDampingRatioResponseForSmoothing]
  -[ARFLSpring setUsesDampingRatioResponseForSmoothing:]
  -[ARFLSpring trackingParameters]
  -[ARFLSpring minimumTarget]
  -[ARFLSpring setMinimumTarget:]
  -[ARFLSpring maximumTarget]
  -[ARFLSpring setMaximumTarget:]
  -[ARFLSpring rubberbandRange]
  -[ARFLSpring setRubberbandRange:]
  -[ARFLSpring rubberbandFactor]
  -[ARFLSpring setRubberbandFactor:]
  -[ARFLSpring retargetResponseFraction]
  -[ARFLSpring setRetargetResponseFraction:]
  -[ARFLSpring projectionDeceleration]
  -[ARFLSpring setProjectionDeceleration:]


ARCubemapGenerator : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ARCubemapGenerator init]
  -[ARCubemapGenerator .cxx_destruct]
  -[ARCubemapGenerator cubemapWithTransform:extent:lastHistogram:fromPlanes:cameraImage:cameraTransform:cameraIntrinsics:cameraExposure:cameraExposureOffset:completionHandler:]


ARSession : NSObject /usr/lib/libc++.1.dylib <ARSensorDelegate, ARTechniqueDelegate, ARWorldTrackingTechniqueObserver, ARDevicePerformanceMonitorDelegate, ARPresentationInternalObserver>
 @property  NSUUID *identifier
 @property  unsigned long state
 @property  ARConfiguration *configurationInternal
 @property  ARParentTechnique *technique
 @property  ARParentTechnique *secondaryTechnique
 @property  NSArray *availableSensors
 @property  unsigned long runningSensors
 @property  unsigned long pausedSensors
 @property  unsigned long powerUsage
 @property  ARQATracer *tracer
 @property  ARDeviceOrientationData *latestDeviceOrientationData
 @property  ARLocationData *latestLocationData
 @property  ARPresentation *presentation
 @property  {?=[4]} cyclopToCameraTransform
 @property  BOOL relocalizing
 @property  <ARSessionDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  ARFrame *currentFrame
 @property  ARConfiguration *configuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARSession initialize]
  +[ARSession _supportsConfiguration:]
  +[ARSession supportsConfiguration:forPresentationMode:error:]
  +[ARSession _applySessionOverrides:outError:]
  +[ARSession forceEnvironmentTexturingTechniqueToManualMode:]

  // instance methods
  -[ARSession init]
  -[ARSession dealloc]
  -[ARSession delegate]
  -[ARSession setDelegate:]
  -[ARSession .cxx_destruct]
  -[ARSession identifier]
  -[ARSession pause]
  -[ARSession setIdentifier:]
  -[ARSession _removeObserver:]
  -[ARSession state]
  -[ARSession setState:]
  -[ARSession configuration]
  -[ARSession _stateQueue]
  -[ARSession setDelegateQueue:]
  -[ARSession delegateQueue]
  -[ARSession _addObserver:]
  -[ARSession presentation]
  -[ARSession currentFrame]
  -[ARSession predictedDeviceTransformAtTimestamp:]
  -[ARSession runWithConfiguration:options:]
  -[ARSession runWithConfiguration:]
  -[ARSession setTechnique:]
  -[ARSession technique]
  -[ARSession tracer]
  -[ARSession addAnchor:]
  -[ARSession removeAnchor:]
  -[ARSession technique:didOutputResultData:timestamp:context:]
  -[ARSession annotateAnchorToRaycastResults:]
  -[ARSession technique:didFailWithError:]
  -[ARSession setPowerUsage:]
  -[ARSession sensor:didFailWithError:]
  -[ARSession sensor:didOutputSensorData:]
  -[ARSession powerUsage]
  -[ARSession replaySensor]
  -[ARSession sensorDidPause:]
  -[ARSession sensorDidRestart:]
  -[ARSession minimumNotificationTimeWindow]
  -[ARSession deviceConditionMonitor:deviceConditionChanged:]
  -[ARSession technique:didChangeState:]
  -[ARSession technique:didOutputCollaborationData:]
  -[ARSession raycast:]
  -[ARSession trackedRaycast:updateHandler:]
  -[ARSession predictedAppPointTransformAtTimestamp:]
  -[ARSession _updatePowerPressureLevelWithToken:]
  -[ARSession _updatePowerUsage]
  -[ARSession _updateThermalState:]
  -[ARSession configurationInternal]
  -[ARSession _sessionDidFailWithError:]
  -[ARSession relocalizing]
  -[ARSession _updateSessionWithConfiguration:options:]
  -[ARSession _updateSessionStateWithConfiguration:options:]
  -[ARSession pausedSensors]
  -[ARSession _configureInitialThermalPolicy]
  -[ARSession _stopAllSensors]
  -[ARSession _getObservers]
  -[ARSession _cameraTransformForResultData:previousFrame:]
  -[ARSession _updatePowerUsageForced:]
  -[ARSession _changePowerUsage:forced:]
  -[ARSession wantsPredictedAnchorTracking]
  -[ARSession secondaryTechnique]
  -[ARSession availableSensors]
  -[ARSession _updateAnchorsForFrame:resultDatas:context:addedAnchors:updatedAnchors:removedAnchors:]
  -[ARSession _sessionDidUpdateAnchors:]
  -[ARSession _sessionDidAddAnchors:]
  -[ARSession _sessionDidRemoveAnchors:]
  -[ARSession _setPrimaryTechnique:secondaryTechnique:]
  -[ARSession setupResultRequestSyncScheduler:forTechnique:]
  -[ARSession setupSessionForTechniques:]
  -[ARSession setSecondaryTechnique:]
  -[ARSession isUserFaceTracking]
  -[ARSession _updateSensorsWithConfiguration:]
  -[ARSession runningSensors]
  -[ARSession _stopSensorsWithDataTypes:keepingDataTypes:]
  -[ARSession setConfigurationInternal:]
  -[ARSession _sessionWillRunWithConfiguration:]
  -[ARSession _startSensorsWithDataTypes:]
  -[ARSession _configureSensorsForRecording]
  -[ARSession _updateOriginTransformForFrame:previousFrame:modifiers:context:]
  -[ARSession is6DofFaceTracking]
  -[ARSession _updateFeaturePointsForFrame:previousFrame:trackingStateChanged:context:]
  -[ARSession setRelocalizing:]
  -[ARSession _sessionShouldAttemptRelocalization]
  -[ARSession _sessionCameraDidChangeTrackingState:]
  -[ARSession _sessionDidUpdateFrame:]
  -[ARSession _shouldSkipAnchorCreationForData:]
  -[ARSession _sessionDidOutputCollaborationData:]
  -[ARSession setRunningSensors:]
  -[ARSession setAvailableSensors:]
  -[ARSession _imageSensorForConfiguration:existingSensor:]
  -[ARSession _replaceOrAddSensor:]
  -[ARSession latestLocationData]
  -[ARSession setPausedSensors:]
  -[ARSession isPrimaryImageData:]
  -[ARSession handleStarData:]
  -[ARSession _sessionDidOutputAudioData:]
  -[ARSession setLatestDeviceOrientationData:]
  -[ARSession _currentFrameContext]
  -[ARSession latestDeviceOrientationData]
  -[ARSession setLatestLocationData:]
  -[ARSession _interruptSession]
  -[ARSession _endInterruption]
  -[ARSession _enforceThermalMitigationPolicyForDeviceCondition:]
  -[ARSession _updateTechniquesWithPerformanceLevel:]
  -[ARSession _presentation:willTransitionToMode:]
  -[ARSession _updateTechniquesWithPresentationMode:]
  -[ARSession _presentation:didTransitionToMode:]
  -[ARSession presentation:willTransitionToMode:]
  -[ARSession presentation:didTransitionToMode:]
  -[ARSession setWorldOrigin:]
  -[ARSession forceEnvironmentTexturingToManualMode:]
  -[ARSession getCurrentWorldMapWithCompletionHandler:]
  -[ARSession createReferenceObjectWithTransform:center:extent:completionHandler:]
  -[ARSession originTransform]
  -[ARSession setOriginTransform:]
  -[ARSession cyclopToCameraTransform]
  -[ARSession setCyclopToCameraTransform:]
  -[ARSession _changePowerUsage:]
  -[ARSession predictedAppPointFrameAtTimestamp:frame:]
  -[ARSession frameWithCameraImage]
  -[ARSession updateWithCollaborationData:]
  -[ARSession _setPrimaryTechnique:]
  -[ARSession setTracer:]


ARCoachingWrappedButton : UIButton /System/Library/Frameworks/QuartzCore.framework/QuartzCore
  // instance methods
  -[ARCoachingWrappedButton setHighlighted:]
  -[ARCoachingWrappedButton sendAction:to:forEvent:]
  -[ARCoachingWrappedButton wrapperButton]


ARCoachingButton : UIControl /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 @property  ARCoachingWrappedButton *button
 @property  ARCoachingControlBlurredBackgroundView *blurredBackgroundView
 @property  long long buttonStyle
 @property  long long textStyle
 @property  UIFont *regularFont
 @property  UIFont *boldFont
 @property  UIColor *white35PercentColor
 @property  UIColor *white100PercentColor
 @property  UIColor *white70PercentColor
 @property  UIColor *black35PercentColor
 @property  UIColor *black70PercentColor
 @property  UIColor *blue100PercentColor
 @property  UIColor *blue50PercentColor
 @property  long long currentStyle
 @property  UIColor *white75PercentColor
 @property  UIColor *white52PercentColor
 @property  UIColor *white26PercentColor
 @property  long long controlStyle
 @property  {UIEdgeInsets=dddd} contentEdgeInsets
 @property  {UIEdgeInsets=dddd} largeImageInsets
 @property  NSString *title
 @property  UIImage *image

  // instance methods
  -[ARCoachingButton setEnabled:]
  -[ARCoachingButton .cxx_destruct]
  -[ARCoachingButton title]
  -[ARCoachingButton setTitle:]
  -[ARCoachingButton image]
  -[ARCoachingButton setImage:]
  -[ARCoachingButton setTextStyle:]
  -[ARCoachingButton textStyle]
  -[ARCoachingButton intrinsicContentSize]
  -[ARCoachingButton button]
  -[ARCoachingButton addTarget:action:forControlEvents:]
  -[ARCoachingButton traitCollectionDidChange:]
  -[ARCoachingButton layoutSubviews]
  -[ARCoachingButton setHighlighted:]
  -[ARCoachingButton systemLayoutSizeFittingSize:]
  -[ARCoachingButton systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:]
  -[ARCoachingButton setSelected:]
  -[ARCoachingButton setContentEdgeInsets:]
  -[ARCoachingButton contentEdgeInsets]
  -[ARCoachingButton setButton:]
  -[ARCoachingButton setCurrentStyle:]
  -[ARCoachingButton currentStyle]
  -[ARCoachingButton controlStyle]
  -[ARCoachingButton setControlStyle:]
  -[ARCoachingButton buttonStyle]
  -[ARCoachingButton setButtonStyle:]
  -[ARCoachingButton initWithTitle:buttonStyle:textStyle:controlStyle:adjustsFontForContentSizeCategory:]
  -[ARCoachingButton _didUpdateDarkenColorsSetting:]
  -[ARCoachingButton _didUpdateContentSizeCategory:]
  -[ARCoachingButton initWithButton:buttonStyle:textStyle:controlStyle:largeImageInsets:]
  -[ARCoachingButton _updateTitleStyleForButton:withControlStyle:]
  -[ARCoachingButton regularFont]
  -[ARCoachingButton blurredBackgroundView]
  -[ARCoachingButton boldFont]
  -[ARCoachingButton white100PercentColor]
  -[ARCoachingButton white70PercentColor]
  -[ARCoachingButton white35PercentColor]
  -[ARCoachingButton white75PercentColor]
  -[ARCoachingButton white52PercentColor]
  -[ARCoachingButton white26PercentColor]
  -[ARCoachingButton blue100PercentColor]
  -[ARCoachingButton blue50PercentColor]
  -[ARCoachingButton black70PercentColor]
  -[ARCoachingButton black35PercentColor]
  -[ARCoachingButton _colorDarkenedIfNeededForColor:]
  -[ARCoachingButton updateCurrentAppearanceIfNeeded]
  -[ARCoachingButton initWithTitle:buttonStyle:textStyle:controlStyle:]
  -[ARCoachingButton largeImageInsets]
  -[ARCoachingButton setLargeImageInsets:]
  -[ARCoachingButton setBlurredBackgroundView:]
  -[ARCoachingButton setRegularFont:]
  -[ARCoachingButton setBoldFont:]
  -[ARCoachingButton setWhite35PercentColor:]
  -[ARCoachingButton setWhite100PercentColor:]
  -[ARCoachingButton setWhite70PercentColor:]
  -[ARCoachingButton setBlack35PercentColor:]
  -[ARCoachingButton setBlack70PercentColor:]
  -[ARCoachingButton setBlue100PercentColor:]
  -[ARCoachingButton setBlue50PercentColor:]
  -[ARCoachingButton setWhite75PercentColor:]
  -[ARCoachingButton setWhite52PercentColor:]
  -[ARCoachingButton setWhite26PercentColor:]


ARBodyTrackingConfiguration : ARConfiguration
 @property  ARImageSensorSettings *imageSensorSettingsForSuperWide
 @property  BOOL autoFocusEnabled
 @property  ARWorldMap *initialWorldMap
 @property  long long environmentTexturing
 @property  BOOL wantsHDREnvironmentTextures
 @property  unsigned long planeDetection
 @property  NSSet *detectionImages
 @property  BOOL automaticImageScaleEstimationEnabled
 @property  BOOL automaticSkeletonScaleEstimationEnabled
 @property  long long maximumNumberOfTrackedImages

  // class methods
  +[ARBodyTrackingConfiguration new]
  +[ARBodyTrackingConfiguration isSupported]
  +[ARBodyTrackingConfiguration supportsFrameSemantics:]
  +[ARBodyTrackingConfiguration supportedVideoFormats]
  +[ARBodyTrackingConfiguration supportedVideoFormatsForSuperWide]

  // instance methods
  -[ARBodyTrackingConfiguration init]
  -[ARBodyTrackingConfiguration isEqual:]
  -[ARBodyTrackingConfiguration copyWithZone:]
  -[ARBodyTrackingConfiguration .cxx_destruct]
  -[ARBodyTrackingConfiguration setPlaneDetection:]
  -[ARBodyTrackingConfiguration automaticSkeletonScaleEstimationEnabled]
  -[ARBodyTrackingConfiguration setAutomaticSkeletonScaleEstimationEnabled:]
  -[ARBodyTrackingConfiguration wantsHDREnvironmentTextures]
  -[ARBodyTrackingConfiguration maximumNumberOfTrackedImages]
  -[ARBodyTrackingConfiguration initialWorldMap]
  -[ARBodyTrackingConfiguration detectionImages]
  -[ARBodyTrackingConfiguration environmentTexturing]
  -[ARBodyTrackingConfiguration planeDetection]
  -[ARBodyTrackingConfiguration createTechniquesWithParallelTechniques:serialTechniques:]
  -[ARBodyTrackingConfiguration parentImageSensorSettings]
  -[ARBodyTrackingConfiguration imageSensorSettings]
  -[ARBodyTrackingConfiguration imageSensorSettingsForSuperWide]
  -[ARBodyTrackingConfiguration shouldUseSuperWide]
  -[ARBodyTrackingConfiguration setInitialWorldMap:]
  -[ARBodyTrackingConfiguration setMaximumNumberOfTrackedImages:]
  -[ARBodyTrackingConfiguration setWantsHDREnvironmentTextures:]
  -[ARBodyTrackingConfiguration shouldEnableVisionDataForImageSensorSettings:]
  -[ARBodyTrackingConfiguration _trackingOptions]
  -[ARBodyTrackingConfiguration automaticImageScaleEstimationEnabled]
  -[ARBodyTrackingConfiguration setDetectionImages:]
  -[ARBodyTrackingConfiguration setEnvironmentTexturing:]
  -[ARBodyTrackingConfiguration setAutomaticImageScaleEstimationEnabled:]


ARSCNView : SCNView /System/Library/Frameworks/SpriteKit.framework/SpriteKit <ARInternalSessionObserver, _SCNSceneRendererDelegate, ARPresentationDelegate, ARSessionProviding>
 @property  BOOL providesOcclusionGeometry
 @property  BOOL segmentationUseEstimatedDepthData
 @property  BOOL automaticallyOccludesVirtualContent
 @property  unsigned long occlusionExcludedBitMask
 @property  long long compositorAlgorithm
 @property  BOOL runningWithSegmentation
 @property  BOOL shouldRestrictFrameRate
 @property  long long targetFramesPerSecond
 @property  long long developerPreferredFramesPerSecond
 @property  BOOL drawsCameraImage
 @property  long long frameToRemoveRotationSnapshotOn
 @property  long long rotationSnapshotState
 @property  long long actualPreferredFramesPerSecond
 @property  ARFrame *currentRenderFrame
 @property  <ARSCNViewDelegate> *delegate
 @property  ARSession *session
 @property  SCNScene *scene
 @property  BOOL automaticallyUpdatesLighting
 @property  BOOL rendersCameraGrain
 @property  BOOL rendersMotionBlur
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARSCNView encodeWithCoder:]
  -[ARSCNView initWithCoder:]
  -[ARSCNView setDelegate:]
  -[ARSCNView .cxx_destruct]
  -[ARSCNView session]
  -[ARSCNView setSession:]
  -[ARSCNView _commonInit]
  -[ARSCNView initWithFrame:]
  -[ARSCNView layoutSubviews]
  -[ARSCNView didMoveToWindow]
  -[ARSCNView setScene:]
  -[ARSCNView setPreferredFramesPerSecond:]
  -[ARSCNView windowWillRotateNotification:]
  -[ARSCNView windowWillAnimateRotateNotification:]
  -[ARSCNView windowDidRotateNotification:]
  -[ARSCNView cleanupLingeringRotationState]
  -[ARSCNView preferredFramesPerSecond]
  -[ARSCNView session:didFailWithError:]
  -[ARSCNView session:cameraDidChangeTrackingState:]
  -[ARSCNView sessionWasInterrupted:]
  -[ARSCNView sessionInterruptionEnded:]
  -[ARSCNView session:didOutputAudioSampleBuffer:]
  -[ARSCNView session:didUpdateFrame:]
  -[ARSCNView session:didAddAnchors:]
  -[ARSCNView session:didUpdateAnchors:]
  -[ARSCNView session:didRemoveAnchors:]
  -[ARSCNView initWithFrame:options:]
  -[ARSCNView sceneRenderer]
  -[ARSCNView debugOptions]
  -[ARSCNView setDebugOptions:]
  -[ARSCNView setPointOfView:]
  -[ARSCNView _renderer:updateAtTime:]
  -[ARSCNView _drawAtTime:]
  -[ARSCNView _updateBackingSize]
  -[ARSCNView setCompositorAlgorithm:]
  -[ARSCNView compositorAlgorithm]
  -[ARSCNView hitTest:types:]
  -[ARSCNView _anchorForNode:inFrame:]
  -[ARSCNView session:didChangeState:]
  -[ARSCNView sessionShouldAttemptRelocalization:completion:]
  -[ARSCNView session:willRunWithConfiguration:]
  -[ARSCNView anchorForNode:]
  -[ARSCNView nodeForAnchor:]
  -[ARSCNView raycastQueryFromPoint:allowingTarget:alignment:]
  -[ARSCNView shouldRestrictFrameRate]
  -[ARSCNView setShouldRestrictFrameRate:]
  -[ARSCNView drawsCameraImage]
  -[ARSCNView _updateCamera:]
  -[ARSCNView _forceUpdateCamera]
  -[ARSCNView setupCompositor]
  -[ARSCNView currentRenderFrame]
  -[ARSCNView setRunningWithSegmentation:]
  -[ARSCNView _updateOcclusionCompositor]
  -[ARSCNView setAutomaticallyOccludesVirtualContent:]
  -[ARSCNView automaticallyOccludesVirtualContent]
  -[ARSCNView _addOcclusionGeometryForAnchor:]
  -[ARSCNView _hitTest:frame:types:]
  -[ARSCNView setDrawsCameraImage:]
  -[ARSCNView setDeveloperPreferredFramesPerSecond:]
  -[ARSCNView _updatePreferredFramesPerSecond]
  -[ARSCNView drawsCameraImageAndNilPresentation]
  -[ARSCNView rotationSnapshotState]
  -[ARSCNView _warpPixelBuffer:withCamera:]
  -[ARSCNView _renderCapturedPixelBuffer:]
  -[ARSCNView _updateProbesWithFrame:]
  -[ARSCNView automaticallyUpdatesLighting]
  -[ARSCNView _updateLighting:]
  -[ARSCNView frameToRemoveRotationSnapshotOn]
  -[ARSCNView setRotationSnapshotState:]
  -[ARSCNView setFrameToRemoveRotationSnapshotOn:]
  -[ARSCNView _removeAnchors:]
  -[ARSCNView _addAnchors:]
  -[ARSCNView _updateAnchors:frame:]
  -[ARSCNView _updateDebugVisualization:]
  -[ARSCNView _updateFramesPerSecondWithTarget:shouldRestrictFrameRate:]
  -[ARSCNView setSegmentationUseEstimatedDepthData:]
  -[ARSCNView providesOcclusionGeometry]
  -[ARSCNView _updateNode:forAnchor:frame:]
  -[ARSCNView setTargetFramesPerSecond:]
  -[ARSCNView developerPreferredFramesPerSecond]
  -[ARSCNView targetFramesPerSecond]
  -[ARSCNView compositor]
  -[ARSCNView _loadWarpKernalForLensType:]
  -[ARSCNView presentationIsReadyForNextRender:]
  -[ARSCNView setAutomaticallyUpdatesLighting:]
  -[ARSCNView runningWithSegmentation]
  -[ARSCNView setOcclusionExcludedBitMask:]
  -[ARSCNView occlusionExcludedBitMask]
  -[ARSCNView setAutomaticallyOccludesUsingSegmentation:]
  -[ARSCNView automaticallyOccludesUsingSegmentation]
  -[ARSCNView setProvidesOcclusionGeometry:]
  -[ARSCNView occlusionGeometryNodeForAnchor:]
  -[ARSCNView unprojectPoint:ontoPlaneWithTransform:]
  -[ARSCNView setActualPreferredFramesPerSecond:]
  -[ARSCNView actualPreferredFramesPerSecond]
  -[ARSCNView rendersCameraGrain]
  -[ARSCNView setRendersCameraGrain:]
  -[ARSCNView rendersMotionBlur]
  -[ARSCNView setRendersMotionBlur:]
  -[ARSCNView segmentationUseEstimatedDepthData]


ARSCNVisualizationHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[ARSCNVisualizationHelper createAxesNode:]
  +[ARSCNVisualizationHelper createGeometryForPointCloud:]
  +[ARSCNVisualizationHelper createMaterialWithTexture:]


ARCoachingGlyphState : NSObject /usr/lib/libc++.1.dylib
 @property  <ARCoachingGlyphStateDelegate> *delegate
 @property  unsigned long snapState
 @property  {?=} quaternionTarget
 @property  void scaleTarget
 @property  void topPlaneTranslationTarget
 @property  void bottomPlaneTranslationTarget
 @property  BOOL isVertical

  // instance methods
  -[ARCoachingGlyphState init]
  -[ARCoachingGlyphState delegate]
  -[ARCoachingGlyphState setDelegate:]
  -[ARCoachingGlyphState .cxx_destruct]
  -[ARCoachingGlyphState isVertical]
  -[ARCoachingGlyphState setIsVertical:]
  -[ARCoachingGlyphState snapState]
  -[ARCoachingGlyphState setSnapState:]
  -[ARCoachingGlyphState computeQuaternionTarget]
  -[ARCoachingGlyphState setQuaternionTarget:]
  -[ARCoachingGlyphState computeScaleTarget]
  -[ARCoachingGlyphState setScaleTarget:]
  -[ARCoachingGlyphState computeTopPlaneTranslationTarget]
  -[ARCoachingGlyphState setTopPlaneTranslationTarget:]
  -[ARCoachingGlyphState computeBottomPlaneTranslationTarget]
  -[ARCoachingGlyphState setBottomPlaneTranslationTarget:]
  -[ARCoachingGlyphState quaternionTarget]
  -[ARCoachingGlyphState scaleTarget]
  -[ARCoachingGlyphState topPlaneTranslationTarget]
  -[ARCoachingGlyphState bottomPlaneTranslationTarget]


ARCoachingAnimTime : NSObject /usr/lib/libc++.1.dylib
 @property  double absoluteTime
 @property  double startTime
 @property  double duration
 @property  double oscillatingTime
 @property  double delta
 @property  double deltaPercentage

  // instance methods
  -[ARCoachingAnimTime init]
  -[ARCoachingAnimTime duration]
  -[ARCoachingAnimTime setDuration:]
  -[ARCoachingAnimTime startTime]
  -[ARCoachingAnimTime setStartTime:]
  -[ARCoachingAnimTime absoluteTime]
  -[ARCoachingAnimTime setAbsoluteTime:]
  -[ARCoachingAnimTime delta]
  -[ARCoachingAnimTime oscillatingTime]
  -[ARCoachingAnimTime deltaPercentage]


ARCoachingInstanceTransform : NSObject /usr/lib/libc++.1.dylib
 @property  {?=[4]} transform
 @property  void localScale
 @property  void recordedScale
 @property  void localTranslation
 @property  void recordedTranslation

  // instance methods
  -[ARCoachingInstanceTransform transform]
  -[ARCoachingInstanceTransform init:]
  -[ARCoachingInstanceTransform doTransform]
  -[ARCoachingInstanceTransform setRecordedScale:]
  -[ARCoachingInstanceTransform setRecordedTranslation:]
  -[ARCoachingInstanceTransform localScale]
  -[ARCoachingInstanceTransform localTranslation]
  -[ARCoachingInstanceTransform setLocalScale:]
  -[ARCoachingInstanceTransform setLocalTranslation:]
  -[ARCoachingInstanceTransform recordedScale]
  -[ARCoachingInstanceTransform recordedTranslation]


ARCoachingMetalSplineData : NSObject /usr/lib/libc++.1.dylib
 @property  <MTLBuffer> *controlPointsBuffer
 @property  <MTLBuffer> *controlPointIndicesBuffer
 @property  <MTLBuffer> *patchUserDataBuffer
 @property  <MTLBuffer> *tessellationFactorsBuffer
 @property  <MTLBuffer> *instanceBuffer
 @property  int patchCount
 @property  NSArray *instanceTransforms
 @property  ARCoachingBlendableSplineGroup *shapes
 @property  ARCoachingControlPointContainer *recordedControlPoints
 @property  void recordedScale
 @property  void recordedTranslation

  // instance methods
  -[ARCoachingMetalSplineData .cxx_destruct]
  -[ARCoachingMetalSplineData shapes]
  -[ARCoachingMetalSplineData init:]
  -[ARCoachingMetalSplineData patchCount]
  -[ARCoachingMetalSplineData recordedScale]
  -[ARCoachingMetalSplineData recordedTranslation]
  -[ARCoachingMetalSplineData makeShapes]
  -[ARCoachingMetalSplineData resetInstanceTransforms:]
  -[ARCoachingMetalSplineData recordState]
  -[ARCoachingMetalSplineData shapeBlendWithStart:startCount:end:endCount:t:]
  -[ARCoachingMetalSplineData computeShapeBlendWithEnd:endCount:t:]
  -[ARCoachingMetalSplineData computeShapeBlendWithEnd:endCount:]
  -[ARCoachingMetalSplineData computeShapeBlendWithStart:startCount:end:endCount:t:]
  -[ARCoachingMetalSplineData computeInstanceTransformScale:t:]
  -[ARCoachingMetalSplineData computeInstanceTransformScale:s1:t:]
  -[ARCoachingMetalSplineData computeInstanceTransformScale:]
  -[ARCoachingMetalSplineData computeInstanceTransformTranslate:t:index:]
  -[ARCoachingMetalSplineData computeInstanceTransformTranslate:x1:t:index:]
  -[ARCoachingMetalSplineData computeInstanceTransformTranslate:index:]
  -[ARCoachingMetalSplineData controlPointsBuffer]
  -[ARCoachingMetalSplineData controlPointIndicesBuffer]
  -[ARCoachingMetalSplineData patchUserDataBuffer]
  -[ARCoachingMetalSplineData tessellationFactorsBuffer]
  -[ARCoachingMetalSplineData instanceBuffer]
  -[ARCoachingMetalSplineData instanceTransforms]
  -[ARCoachingMetalSplineData recordedControlPoints]


ARQATracer : NSObject /usr/lib/libc++.1.dylib <ARInternalSessionObserver, ARReplaySensorDelegate>
 @property  NSString *traceOutputFilePath
 @property  UILabel *replayFrameLabel
 @property  ARScreenRecording *screenRecorder
 @property  {CGPoint=dd} offset
 @property  BOOL forceQuitApp
 @property  BOOL recordScreen
 @property  ARPresentationStats *presentationStats
 @property  <ARQATracerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARQATracer isEnabled]

  // instance methods
  -[ARQATracer init]
  -[ARQATracer dealloc]
  -[ARQATracer delegate]
  -[ARQATracer setDelegate:]
  -[ARQATracer .cxx_destruct]
  -[ARQATracer stop]
  -[ARQATracer setOffset:]
  -[ARQATracer offset]
  -[ARQATracer start:]
  -[ARQATracer session:didUpdateFrame:]
  -[ARQATracer session:didChangeState:]
  -[ARQATracer traceRaycastQuery:]
  -[ARQATracer traceRaycastResults:]
  -[ARQATracer createTraceOutputDirectory]
  -[ARQATracer setTraceOutputFilePath:]
  -[ARQATracer traceOutputFilePath]
  -[ARQATracer setRecordScreen:]
  -[ARQATracer setForceQuitApp:]
  -[ARQATracer writeStringToOutputStream:]
  -[ARQATracer receiveDefaults]
  -[ARQATracer addFrameLabel:]
  -[ARQATracer replayFrameLabel]
  -[ARQATracer recordScreen]
  -[ARQATracer setScreenRecorder:]
  -[ARQATracer screenRecorder]
  -[ARQATracer writeJSONObjectToStream:prefix:]
  -[ARQATracer flushDataBufferToFile]
  -[ARQATracer forceQuitApp]
  -[ARQATracer presentationStats]
  -[ARQATracer _createRecordablePixelBufferFromSegmentationBuffer:]
  -[ARQATracer setReplayFrameLabel:]
  -[ARQATracer update:session:]
  -[ARQATracer replaySensorDidFinishReplayingData]
  -[ARQATracer setPresentationStats:]


ARDisplayLink : NSObject /usr/lib/libc++.1.dylib
 @property  long long preferredFramesPerSecond
 @property  double vsyncOffset
 @property  ARRunLoop *runloop

  // instance methods
  -[ARDisplayLink init]
  -[ARDisplayLink dealloc]
  -[ARDisplayLink invalidate]
  -[ARDisplayLink .cxx_destruct]
  -[ARDisplayLink runloop]
  -[ARDisplayLink setPreferredFramesPerSecond:]
  -[ARDisplayLink preferredFramesPerSecond]
  -[ARDisplayLink initWithPreferredFramesPerSecond:callback:]
  -[ARDisplayLink vsyncOffset]
  -[ARDisplayLink setVsyncOffset:]
  -[ARDisplayLink _recomputeActualVsyncOffsetWithVsyncOffset:preferredFramesPerSecond:]
  -[ARDisplayLink displayLinkCallback]


_ARDisplayLinkHelper : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_ARDisplayLinkHelper .cxx_destruct]
  -[_ARDisplayLinkHelper callback:]
  -[_ARDisplayLinkHelper initWithDisplayLink:]


ARQuickLookPreviewItem : NSObject /usr/lib/libc++.1.dylib <QLPreviewItemPrivateProtocol, QLPreviewItem>
 @property  NSURL *fileURL
 @property  NSURL *canonicalWebPageURL
 @property  BOOL allowsContentScaling
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURL *previewItemURL
 @property  NSString *previewItemTitle
 @property  NSString *previewItemContentType
 @property  NSURL *previewItemURLForDisplay
 @property  BOOL isPromisedItem
 @property  double autoPlaybackPosition
 @property  UIColor *backgroundColorOverride
 @property  BOOL wantsDefaultMediaPlayer
 @property  NSString *MIMEType
 @property  NSDictionary *previewOptions

  // instance methods
  -[ARQuickLookPreviewItem .cxx_destruct]
  -[ARQuickLookPreviewItem fileURL]
  -[ARQuickLookPreviewItem setFileURL:]
  -[ARQuickLookPreviewItem initWithFileAtURL:]
  -[ARQuickLookPreviewItem setCanonicalWebPageURL:]
  -[ARQuickLookPreviewItem previewItemURL]
  -[ARQuickLookPreviewItem previewOptions]
  -[ARQuickLookPreviewItem canonicalWebPageURL]
  -[ARQuickLookPreviewItem allowsContentScaling]
  -[ARQuickLookPreviewItem setAllowsContentScaling:]


ARPresentationTarget : NSObject /usr/lib/libc++.1.dylib
 @property  {?=[4]} eyeTransform
 @property  <MTLTexture> *colorTexture
 @property  <MTLTexture> *depthTexture
 @property  {?=dddddd} viewport
 @property  {?=[4]} projectionMatrix
 @property  {?=[4]} viewMatrix
 @property  {?=[4]} warpCameraMatrix
 @property  double warpCameraMatrixTimestamp
 @property  {?=[4]} warpCameraMatrixEnd
 @property  double warpCameraMatrixEndTimestamp
 @property  MTLRenderPassDescriptor *renderPassDescriptor
 @property  long long eyeLocation

  // instance methods
  -[ARPresentationTarget .cxx_destruct]
  -[ARPresentationTarget renderPassDescriptor]
  -[ARPresentationTarget viewport]
  -[ARPresentationTarget setViewport:]
  -[ARPresentationTarget projectionMatrix]
  -[ARPresentationTarget colorTexture]
  -[ARPresentationTarget viewMatrix]
  -[ARPresentationTarget setViewMatrix:]
  -[ARPresentationTarget setProjectionMatrix:]
  -[ARPresentationTarget setEyeTransform:]
  -[ARPresentationTarget eyeTransform]
  -[ARPresentationTarget setRenderPassDescriptor:]
  -[ARPresentationTarget setWarpCameraMatrix:]
  -[ARPresentationTarget setWarpCameraMatrixTimestamp:]
  -[ARPresentationTarget setWarpCameraMatrixEnd:]
  -[ARPresentationTarget setWarpCameraMatrixEndTimestamp:]
  -[ARPresentationTarget depthTexture]
  -[ARPresentationTarget initWithEyeLocation:colorTexture:depthTexture:]
  -[ARPresentationTarget eyeLocation]
  -[ARPresentationTarget _forwardNewMatrix:]
  -[ARPresentationTarget _inverseOldMatrix:]
  -[ARPresentationTarget _warpMatrixFromOldToNew:oldEyeTransform:]
  -[ARPresentationTarget viewportDescription:debugName:]
  -[ARPresentationTarget setColorTexture:]
  -[ARPresentationTarget setDepthTexture:]
  -[ARPresentationTarget positionalWarpTransforms:warpStart:warpEnd:warpStartForward:warpStartInverse:]
  -[ARPresentationTarget positionalWarpTransforms:warpStart:warpEnd:]
  -[ARPresentationTarget positionalWarpTransforms:warpStartInverse:warpEndInverse:]
  -[ARPresentationTarget rotationalWarpTransforms:warpStart:warpEnd:]
  -[ARPresentationTarget warpCameraMatrix]
  -[ARPresentationTarget warpCameraMatrixTimestamp]
  -[ARPresentationTarget warpCameraMatrixEnd]
  -[ARPresentationTarget warpCameraMatrixEndTimestamp]


ARReplaySensor : NSObject /usr/lib/libc++.1.dylib <ARInternalSessionObserver, ARReplaySensorProtocol>
 @property  int imageIndex
 @property  long long nextFrameIndex
 @property  long long targetFrameIndex
 @property  <ARSensorDelegate> *delegate
 @property  <ARReplaySensorDelegate> *replaySensorDelegate
 @property  NSURL *sequenceURL
 @property  NSString *deviceModel
 @property  NSString *osVersion
 @property  NSString *arkitVersion
 @property  {CGSize=dd} imageResolution
 @property  double nominalFrameRate
 @property  unsigned long recordedSensorTypes
 @property  NSSet *recordedResultClasses
 @property  NSArray *recordedResultClassList
 @property  BOOL isReplayingManually
 @property  BOOL synchronousMode
 @property  unsigned long forcePlaybackFramesPerSecond
 @property  float advanceFramesPerSecondMultiplier
 @property  NSSet *customDataClasses
 @property  BOOL interrupted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long powerUsage
 @property  BOOL finishedReplaying

  // instance methods
  -[ARReplaySensor dealloc]
  -[ARReplaySensor isEqual:]
  -[ARReplaySensor delegate]
  -[ARReplaySensor setDelegate:]
  -[ARReplaySensor .cxx_destruct]
  -[ARReplaySensor failWithError:]
  -[ARReplaySensor stop]
  -[ARReplaySensor start]
  -[ARReplaySensor observeValueForKeyPath:ofObject:change:context:]
  -[ARReplaySensor interrupt]
  -[ARReplaySensor hasMoreData]
  -[ARReplaySensor currentTime]
  -[ARReplaySensor interrupted]
  -[ARReplaySensor osVersion]
  -[ARReplaySensor deviceModel]
  -[ARReplaySensor advance]
  -[ARReplaySensor nominalFrameRate]
  -[ARReplaySensor endInterruption]
  -[ARReplaySensor imageResolution]
  -[ARReplaySensor providedDataTypes]
  -[ARReplaySensor isSynchronousMode]
  -[ARReplaySensor initWithDataFromFile:]
  -[ARReplaySensor initWithSequenceURL:manualReplay:]
  -[ARReplaySensor initWithSequenceURL:manualReplay:synchronousMode:]
  -[ARReplaySensor advanceFrame]
  -[ARReplaySensor advanceToFrameIndex:]
  -[ARReplaySensor replayTechniqueForResultDataClasses:]
  -[ARReplaySensor customDataForTimestamp:]
  -[ARReplaySensor replaySensorDelegate]
  -[ARReplaySensor setReplaySensorDelegate:]
  -[ARReplaySensor sequenceURL]
  -[ARReplaySensor arkitVersion]
  -[ARReplaySensor recordedSensorTypes]
  -[ARReplaySensor recordedResultClasses]
  -[ARReplaySensor recordedResultClassList]
  -[ARReplaySensor isReplayingManually]
  -[ARReplaySensor finishedReplaying]
  -[ARReplaySensor forcePlaybackFramesPerSecond]
  -[ARReplaySensor setForcePlaybackFramesPerSecond:]
  -[ARReplaySensor nextFrameIndex]
  -[ARReplaySensor advanceFramesPerSecondMultiplier]
  -[ARReplaySensor setAdvanceFramesPerSecondMultiplier:]
  -[ARReplaySensor customDataClasses]
  -[ARReplaySensor setCustomDataClasses:]
  -[ARReplaySensor readFileMetadataFromAsset:]
  -[ARReplaySensor endReplay]
  -[ARReplaySensor prepareForReplay]
  -[ARReplaySensor startReplayIfNeeded]
  -[ARReplaySensor initializeAssetReaderWithAsset:buffersOnly:]
  -[ARReplaySensor loadAllMetadata]
  -[ARReplaySensor fastForwardIndexesToTime:]
  -[ARReplaySensor preloadNextPixelBuffers:]
  -[ARReplaySensor setTargetFrameIndex:]
  -[ARReplaySensor getResultDataForClasses:atTimestamp:]
  -[ARReplaySensor track:hasMetadataIdentifier:]
  -[ARReplaySensor createAndAddMetadataAdaptorForTrack:]
  -[ARReplaySensor unpackItemsOfClass:withIdentifier:inOutputAdaptor:]
  -[ARReplaySensor enumerateDataWithIdentifier:inOutputAdaptor:usingBlock:]
  -[ARReplaySensor unpackTimestampedCV3DDictionaryItemsOfClass:withIdentifier:inOutputAdaptor:]
  -[ARReplaySensor unpackTimestampedItemsOfClasses:withIdentifier:inOutputAdaptor:]
  -[ARReplaySensor createResultForTimestampGetterBlockFromTimestampedResults:]
  -[ARReplaySensor setImageIndex:]
  -[ARReplaySensor tick]
  -[ARReplaySensor targetFrameIndex]
  -[ARReplaySensor imageIndex]
  -[ARReplaySensor hasImageDataForTimestamp:]
  -[ARReplaySensor getNextImageData]
  -[ARReplaySensor hasAccelerometerDataForTime:]
  -[ARReplaySensor getNextAccelerometerData]
  -[ARReplaySensor _didOutputSensorData:]
  -[ARReplaySensor hasGyroDataForTime:]
  -[ARReplaySensor getNextGyroData]
  -[ARReplaySensor hasDeviceOrientationDataForTime:]
  -[ARReplaySensor getNextDeviceOrientationData]
  -[ARReplaySensor hasLocationDataForTime:]
  -[ARReplaySensor getNextLocationData]
  -[ARReplaySensor setNextFrameIndex:]
  -[ARReplaySensor requestNextPixelBufferForTimestamp:]
  -[ARReplaySensor requestNextDepthPixelBufferForTimestamp:]


ARReplayResultDataTechnique : ARTechnique
 @property  NSSet *resultDataClasses
 @property  @? retrieveResultsForTimestampBlock

  // instance methods
  -[ARReplayResultDataTechnique isEqual:]
  -[ARReplayResultDataTechnique .cxx_destruct]
  -[ARReplayResultDataTechnique requestResultDataAtTimestamp:context:]
  -[ARReplayResultDataTechnique resultDataClasses]
  -[ARReplayResultDataTechnique setResultDataClasses:]
  -[ARReplayResultDataTechnique setRetrieveResultsForTimestampBlock:]
  -[ARReplayResultDataTechnique retrieveResultsForTimestampBlock]


ARReplayTimestampedData : NSObject /usr/lib/libc++.1.dylib
 @property  double timestamp
 @property  id data

  // instance methods
  -[ARReplayTimestampedData .cxx_destruct]
  -[ARReplayTimestampedData data]
  -[ARReplayTimestampedData setData:]
  -[ARReplayTimestampedData timestamp]
  -[ARReplayTimestampedData setTimestamp:]


ARCoachingControlPointContainer : NSObject /usr/lib/libc++.1.dylib
 @property  ^{?=f} controlPoints
 @property  unsigned int numControlPoints

  // instance methods
  -[ARCoachingControlPointContainer .cxx_destruct]
  -[ARCoachingControlPointContainer .cxx_construct]
  -[ARCoachingControlPointContainer controlPoints]
  -[ARCoachingControlPointContainer numControlPoints]
  -[ARCoachingControlPointContainer initWithControlPoints:numControlPoints:]
  -[ARCoachingControlPointContainer overwriteWithControlPoints:numControlPoints:]


ARCoachingSpline : NSObject /usr/lib/libc++.1.dylib
 @property  ^{?=f} controlPoints
 @property  unsigned int numControlPoints
 @property  ^{?=} patchData
 @property  unsigned int patchDataLength
 @property  ^S indices
 @property  unsigned int numIndices

  // class methods
  +[ARCoachingSpline interpolate:p1:p2:p3:t:]
  +[ARCoachingSpline interpolateTangent:p1:p2:p3:t:]

  // instance methods
  -[ARCoachingSpline .cxx_destruct]
  -[ARCoachingSpline .cxx_construct]
  -[ARCoachingSpline indices]
  -[ARCoachingSpline controlPoints]
  -[ARCoachingSpline patchDataLength]
  -[ARCoachingSpline numControlPoints]
  -[ARCoachingSpline numIndices]
  -[ARCoachingSpline patchData]
  -[ARCoachingSpline genTubeIndicesWithPattern:]
  -[ARCoachingSpline genLeftCapWithWidth:]
  -[ARCoachingSpline genRightCapWithWidth:]
  -[ARCoachingSpline initWithPoints:numPoints:relativeThickness:pattern:mat:]


ARCoachingArc : ARCoachingSpline
  // instance methods
  -[ARCoachingArc initWithRadius:mat:]


ARCoachingCorner : ARCoachingSpline
  // instance methods
  -[ARCoachingCorner initWithRadius:relativeThickness:anchorA:anchorB:cornerEdge:mat:]


ARCoachingSplineGroup : NSObject /usr/lib/libc++.1.dylib
 @property  ^{?=f} controlPoints
 @property  unsigned int numControlPoints
 @property  ^{?=} patchData
 @property  unsigned int patchDataLength
 @property  ^S indices
 @property  unsigned int numIndices

  // instance methods
  -[ARCoachingSplineGroup .cxx_destruct]
  -[ARCoachingSplineGroup .cxx_construct]
  -[ARCoachingSplineGroup indices]
  -[ARCoachingSplineGroup controlPoints]
  -[ARCoachingSplineGroup patchDataLength]
  -[ARCoachingSplineGroup numControlPoints]
  -[ARCoachingSplineGroup numIndices]
  -[ARCoachingSplineGroup patchData]
  -[ARCoachingSplineGroup initWithSplines:]


ARCoachingBlendableSplineGroup : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *controlPoints
 @property  ^{?=} patchData
 @property  unsigned int patchDataLength
 @property  ^S indices
 @property  unsigned int numIndices

  // instance methods
  -[ARCoachingBlendableSplineGroup .cxx_destruct]
  -[ARCoachingBlendableSplineGroup .cxx_construct]
  -[ARCoachingBlendableSplineGroup indices]
  -[ARCoachingBlendableSplineGroup controlPoints]
  -[ARCoachingBlendableSplineGroup patchDataLength]
  -[ARCoachingBlendableSplineGroup numIndices]
  -[ARCoachingBlendableSplineGroup patchData]
  -[ARCoachingBlendableSplineGroup initWithSplineGroups:]


ARPresentationStats : NSObject /usr/lib/libc++.1.dylib
 @property  double averageCompositeTime
 @property  double averageRenderTime
 @property  double vsyncTime
 @property  double averageTotalTime
 @property  double averageTotalTimePercent
 @property  double averageCompositeTimePercent
 @property  double averageRenderTimePercent
 @property  NSArray *predictedSamples
 @property  long long mode

  // instance methods
  -[ARPresentationStats .cxx_destruct]
  -[ARPresentationStats setMode:]
  -[ARPresentationStats mode]
  -[ARPresentationStats asDictionary]
  -[ARPresentationStats predictedSamples]
  -[ARPresentationStats setPredictedSamples:]
  -[ARPresentationStats averageCompositeTime]
  -[ARPresentationStats averageCompositeTimePercent]
  -[ARPresentationStats averageRenderTime]
  -[ARPresentationStats averageRenderTimePercent]
  -[ARPresentationStats vsyncTime]
  -[ARPresentationStats averageTotalTime]
  -[ARPresentationStats averageTotalTimePercent]
  -[ARPresentationStats _predictedSamplesDescription]
  -[ARPresentationStats setAverageCompositeTime:]
  -[ARPresentationStats setAverageRenderTime:]
  -[ARPresentationStats setVsyncTime:]
  -[ARPresentationStats setAverageTotalTime:]
  -[ARPresentationStats setAverageTotalTimePercent:]
  -[ARPresentationStats setAverageCompositeTimePercent:]
  -[ARPresentationStats setAverageRenderTimePercent:]


ARArchive : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *filePaths

  // instance methods
  -[ARArchive init]
  -[ARArchive .cxx_destruct]
  -[ARArchive initWithContentsOfURL:error:]
  -[ARArchive writeToURL:error:]
  -[ARArchive _loadArchiveFromURL:error:]
  -[ARArchive addData:withPath:]
  -[ARArchive dataForResourceAtPath:]
  -[ARArchive _readDataForEntry:archive:]
  -[ARArchive filePaths]
  -[ARArchive addData:withFilename:extension:]
  -[ARArchive dataForResource:withExtension:]


ARODTResult : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long detectedObjectID
 @property  {?=[4]} visionTransform
 @property  ^v imageContext
 @property  double estimatedScaleFactor

  // instance methods
  -[ARODTResult setEstimatedScaleFactor:]
  -[ARODTResult setVisionTransform:]
  -[ARODTResult imageContext]
  -[ARODTResult detectedObjectID]
  -[ARODTResult visionTransform]
  -[ARODTResult setImageContext:]
  -[ARODTResult estimatedScaleFactor]
  -[ARODTResult setDetectedObjectID:]


ARODTHandleManager : NSObject /usr/lib/libc++.1.dylib
 @property  long long maximumNumberOfTrackedImages
 @property  BOOL continuousDetection
 @property  BOOL deterministicMode

  // class methods
  +[ARODTHandleManager verifyReferenceImage:]
  +[ARODTHandleManager accumulateReferenceImageErrorsForResult:refImage:objectID:pReferenceImageMap:pFailedReferenceImageNames:pUserErrorType:]
  +[ARODTHandleManager handleAccumulatedErrorType:failedReferenceImageNames:]
  +[ARODTHandleManager suggestionInternalError]
  +[ARODTHandleManager actualNumberOfImagesTracked:]
  +[ARODTHandleManager suggestionInvalidImage]
  +[ARODTHandleManager suggestionInvalidFeature]
  +[ARODTHandleManager _calibrationDataFromImageData:pCalibrationData:]

  // instance methods
  -[ARODTHandleManager init]
  -[ARODTHandleManager dealloc]
  -[ARODTHandleManager isEqual:]
  -[ARODTHandleManager .cxx_destruct]
  -[ARODTHandleManager initWithMaximumNumberOfTrackedImages:continuousDetection:deterministicMode:]
  -[ARODTHandleManager waitForAllObjectsAddToFinish]
  -[ARODTHandleManager addReferenceImage:tracking:pObjectID:]
  -[ARODTHandleManager maximumNumberOfTrackedImages]
  -[ARODTHandleManager trackPlanarObjectAndEstimateScaleForImageData:worldTrackingPose:imageContext:timeBudget:pResultArray:]
  -[ARODTHandleManager trackPlanarObjectForImageData:imageContext:timeBudget:pResultArray:]
  -[ARODTHandleManager updatePowerUsage:]
  -[ARODTHandleManager updateDevicePerformanceLevel:]
  -[ARODTHandleManager predictPlanarObjectsAtTimestamp:worldTrackingPose:timeBudget:pResultArray:]
  -[ARODTHandleManager updateStereoMode:]
  -[ARODTHandleManager deterministicMode]
  -[ARODTHandleManager _odtPerformanceModeFromDevicePerformanceLevel:]
  -[ARODTHandleManager continuousDetection]
  -[ARODTHandleManager initWithMaximumNumberOfTrackedImages:]
  -[ARODTHandleManager initWithRegionProposalModel]
  -[ARODTHandleManager addReferenceObject:tracking:pObjectID:]
  -[ARODTHandleManager detectReferenceObjectsForImageData:worldTrackingPose:imageContext:pResultArray:]
  -[ARODTHandleManager releaseODTHandle]


ARPresentation : NSObject /usr/lib/libc++.1.dylib <ARBoardControllerDelegate, ARInternalSessionObserver>
 @property  BOOL willUpdateSettings
 @property  BOOL updatingSettings
 @property  ARFrame *frameCopy
 @property  ARPresentationFrame *currentPresentationFrame
 @property  BOOL isARSessionStateIgnored
 @property  long long state
 @property  NSThread *renderThread
 @property  <ARPresentationInternalObserver> *observer
 @property  ARPresentationFramePool *framePool
 @property  long long preferredFramesPerSecond
 @property  long long actualFramesPerSecond
 @property  BOOL headLocked
 @property  {?=[4]} headLockedTransform
 @property  ARPresentationOverrides *overrides
 @property  ARBoardController *boardController
 @property  ARSession *session
 @property  long long presentationMode
 @property  BOOL cameraCompositingDisabled
 @property  <ARPresentationDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  UIView *view
 @property  ARPresentationDisplay *activeDisplay
 @property  ARPresentationDescriptor *activeDescriptor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARPresentation compositorPlistKeysEnabled]
  +[ARPresentation isSupportedOnOSVersion]
  +[ARPresentation supportsPresentationMode:]
  +[ARPresentation isWornModeSupported]
  +[ARPresentation _ARDeviceHeldModeSupported]
  +[ARPresentation setCompositorForceDisabled:]
  +[ARPresentation compositorForceDisabled]
  +[ARPresentation supportsStereoAR]
  +[ARPresentation setWornModeForceDisabled:]
  +[ARPresentation wornModeForceDisabled]
  +[ARPresentation isCompositorEnabled]

  // instance methods
  -[ARPresentation dealloc]
  -[ARPresentation observer]
  -[ARPresentation delegate]
  -[ARPresentation setDelegate:]
  -[ARPresentation .cxx_destruct]
  -[ARPresentation pause]
  -[ARPresentation resume]
  -[ARPresentation observeValueForKeyPath:ofObject:change:context:]
  -[ARPresentation state]
  -[ARPresentation setObserver:]
  -[ARPresentation setState:]
  -[ARPresentation session]
  -[ARPresentation setSession:]
  -[ARPresentation setDelegateQueue:]
  -[ARPresentation delegateQueue]
  -[ARPresentation view]
  -[ARPresentation setView:]
  -[ARPresentation present]
  -[ARPresentation supportedInterfaceOrientations]
  -[ARPresentation initWithView:]
  -[ARPresentation startFrame]
  -[ARPresentation setPreferredFramesPerSecond:]
  -[ARPresentation shutdown]
  -[ARPresentation preferredFramesPerSecond]
  -[ARPresentation actualFramesPerSecond]
  -[ARPresentation overrides]
  -[ARPresentation session:didFailWithError:]
  -[ARPresentation sessionWasInterrupted:]
  -[ARPresentation sessionInterruptionEnded:]
  -[ARPresentation presentationMode]
  -[ARPresentation orientationChanged:]
  -[ARPresentation updateLayerBounds]
  -[ARPresentation boardController:didSwitchToDeviceWorn:]
  -[ARPresentation boardControlerDidSwitchToDeviceHeld:]
  -[ARPresentation activeDisplay]
  -[ARPresentation session:didChangeState:]
  -[ARPresentation handleSTARData:]
  -[ARPresentation currentPresentationFrame]
  -[ARPresentation activeDescriptor]
  -[ARPresentation transitionToDescriptor:error:]
  -[ARPresentation makePresentationFrame]
  -[ARPresentation updatePresentationStats:]
  -[ARPresentation _createCompositorCommandQueue]
  -[ARPresentation _setupGCStereoARInteraction]
  -[ARPresentation _stopSystem]
  -[ARPresentation setHeldModeConfig]
  -[ARPresentation setDescriptor:presentationDisplay:error:]
  -[ARPresentation setDeviceWorn:]
  -[ARPresentation setDeviceHeld]
  -[ARPresentation setModeFromDisplayConfig:]
  -[ARPresentation setPresentationMode:]
  -[ARPresentation _supportsPresentationMode:]
  -[ARPresentation _setRealTimePriority]
  -[ARPresentation _standardPriority]
  -[ARPresentation isDescriptorSupported:error:]
  -[ARPresentation updateSettingsPending]
  -[ARPresentation _startCompositorRunLoop]
  -[ARPresentation _startRenderThread]
  -[ARPresentation _resumeSystem]
  -[ARPresentation _pauseSystem]
  -[ARPresentation _stopRenderThread]
  -[ARPresentation _stopCompositorRunLoop]
  -[ARPresentation _renderThreadCallback]
  -[ARPresentation _signalPausedRenderThreadAtShutdown]
  -[ARPresentation _compositorRunLoopCallback]
  -[ARPresentation updatePresentationModeOverride]
  -[ARPresentation executeDispatchedBlocks]
  -[ARPresentation _updateAntialiasingIfNeeded]
  -[ARPresentation _applyChangesIfNeeded]
  -[ARPresentation _updateSignalValue:]
  -[ARPresentation _getDisplayPersistenceTime:]
  -[ARPresentation getReprojectionPoseForTime:]
  -[ARPresentation _renderStatsString]
  -[ARPresentation _updateStatisticsWidgets]
  -[ARPresentation advanceFrameCopy]
  -[ARPresentation compositeAndDistort]
  -[ARPresentation _tickRendererOnVsync]
  -[ARPresentation newDummyARFrame]
  -[ARPresentation frameCopy]
  -[ARPresentation isFrameCopyValid:]
  -[ARPresentation _addNotifyListener:]
  -[ARPresentation setCurrentPresentationFrame:]
  -[ARPresentation waitForOptimalPrediction]
  -[ARPresentation _indexForEyeLocation:]
  -[ARPresentation _startOrResumeSystem]
  -[ARPresentation _releasePresentationAssertion]
  -[ARPresentation _acquirePresentationAssertion]
  -[ARPresentation _startSystem]
  -[ARPresentation dispatchOnNextComposite:]
  -[ARPresentation _registerSystemButtonEvents:]
  -[ARPresentation _handleControllerDidConnectNotification:]
  -[ARPresentation _handleControllerEvent:button:value:pressed:]
  -[ARPresentation _recenterController:]
  -[ARPresentation _createAlignmentQuaternionForTransform:controllerOrientation:]
  -[ARPresentation _commonInitWithView:]
  -[ARPresentation framePool]
  -[ARPresentation togglePresentationMode]
  -[ARPresentation _compositorDisplayLinkCallback]
  -[ARPresentation willUpdateSettings]
  -[ARPresentation setWillUpdateSettings:]
  -[ARPresentation updatingSettings]
  -[ARPresentation setUpdatingSettings:]
  -[ARPresentation setFrameCopy:]
  -[ARPresentation isARSessionStateIgnored]
  -[ARPresentation setIsARSessionStateIgnored:]
  -[ARPresentation renderThread]
  -[ARPresentation setActualFramesPerSecond:]
  -[ARPresentation headLocked]
  -[ARPresentation setHeadLocked:]
  -[ARPresentation headLockedTransform]
  -[ARPresentation setHeadLockedTransform:]
  -[ARPresentation boardController]
  -[ARPresentation isCameraCompositingDisabled]
  -[ARPresentation setCameraCompositingDisabled:]


ARPresentationDisplayLinkHelper : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ARPresentationDisplayLinkHelper .cxx_destruct]
  -[ARPresentationDisplayLinkHelper callback:]
  -[ARPresentationDisplayLinkHelper initWithARPresentation:]


ARPresentation_Eye : NSObject /usr/lib/libc++.1.dylib
 @property  <MTLBuffer> *distortionVertexBuffer
 @property  <MTLBuffer> *distortionIndexBuffer
 @property  unsigned long distortionIndexCount
 @property  unsigned long distortionIndexType
 @property  {?=dddddd} viewport
 @property  unsigned long primitiveType

  // instance methods
  -[ARPresentation_Eye .cxx_destruct]
  -[ARPresentation_Eye viewport]
  -[ARPresentation_Eye primitiveType]
  -[ARPresentation_Eye setViewport:]
  -[ARPresentation_Eye setPrimitiveType:]
  -[ARPresentation_Eye distortionVertexBuffer]
  -[ARPresentation_Eye setDistortionVertexBuffer:]
  -[ARPresentation_Eye distortionIndexBuffer]
  -[ARPresentation_Eye setDistortionIndexBuffer:]
  -[ARPresentation_Eye distortionIndexCount]
  -[ARPresentation_Eye setDistortionIndexCount:]
  -[ARPresentation_Eye distortionIndexType]
  -[ARPresentation_Eye setDistortionIndexType:]


ARInternalCompositor : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL warpActive
 @property  BOOL isInitialized

  // instance methods
  -[ARInternalCompositor dealloc]
  -[ARInternalCompositor .cxx_destruct]
  -[ARInternalCompositor _prepare]
  -[ARInternalCompositor isInitialized]
  -[ARInternalCompositor initWithCommandQueue:presentation:framePool:overrides:]
  -[ARInternalCompositor setDescriptor:display:]
  -[ARInternalCompositor isWarpActive]
  -[ARInternalCompositor compositeAndDistortFrame:destinationTexture:backgroundPixelBuffer:]
  -[ARInternalCompositor createCompositeHeldModePipelineStateWithMTLLib:]
  -[ARInternalCompositor createRotWarpPipelineStateWithMTLLib:]
  -[ARInternalCompositor createPosWarpPipelineStateWithMTLLib:]
  -[ARInternalCompositor createForwardFlowPipelineStateWithMTLLib:]
  -[ARInternalCompositor createAlignmentLinePipelineStateWithMTLLib:]
  -[ARInternalCompositor _createTextureFromPixelBuffer:pixelFormat:planeIndex:]
  -[ARInternalCompositor gammaFromLuminance:]
  -[ARInternalCompositor setupDistortWithFrame:]
  -[ARInternalCompositor setupStereoDistortion]
  -[ARInternalCompositor setupMonoOrNoDistortion]
  -[ARInternalCompositor compositeHeldMode:commandBuffer:outputTarget:backgroundPixelBuffer:]
  -[ARInternalCompositor warpAndDistortWornMode:commandBuffer:outputTarget:]
  -[ARInternalCompositor createDistortionVertexPipeline:vs:fs:]
  -[ARInternalCompositor createFullscreenQuadPipeline:vs:fs:]


ARMLDepthData : NSObject /usr/lib/libc++.1.dylib <ARResultData>
 @property  double timestamp
 @property  ^{__CVBuffer=} depthBuffer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARMLDepthData dealloc]
  -[ARMLDepthData timestamp]
  -[ARMLDepthData depthBuffer]
  -[ARMLDepthData initWithTimestamp:depthBuffer:]


ARFilteredMLDepthData : ARMLDepthData

ARPresentationThermalPolicyManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *thermalPolicyMap

  // class methods
  +[ARPresentationThermalPolicyManager sharedInstance]
  +[ARPresentationThermalPolicyManager thermalMitigationEnabled]
  +[ARPresentationThermalPolicyManager minimumThermalHysterisWindow]

  // instance methods
  -[ARPresentationThermalPolicyManager init]
  -[ARPresentationThermalPolicyManager .cxx_destruct]
  -[ARPresentationThermalPolicyManager policyForCondition:andTechniques:]
  -[ARPresentationThermalPolicyManager _generateThermalPolicyMap]
  -[ARPresentationThermalPolicyManager _containsTrackingTechnique:inTechniques:]
  -[ARPresentationThermalPolicyManager _minCameraFPSForImageTrackingInDeviceCondition:]
  -[ARPresentationThermalPolicyManager thermalPolicyMap]
  -[ARPresentationThermalPolicyManager _cameraFPSFactoringInTechniques:condition:]
  -[ARPresentationThermalPolicyManager _cameraFPSOverride]
  -[ARPresentationThermalPolicyManager _policyForCondition:]
  -[ARPresentationThermalPolicyManager _updateBackCameraConfigIfNeeded:techniques:condition:]
  -[ARPresentationThermalPolicyManager setThermalPolicyMap:]


ARScreenRecorder : NSObject /usr/lib/libc++.1.dylib
 @property  double firstFrameTime
 @property  double previousFrameTime
 @property  BOOL isRecording
 @property  AVAssetWriter *assetWriter
 @property  AVAssetWriterInput *imageInput
 @property  AVAssetWriterInputPixelBufferAdaptor *imageInputAdaptor
 @property  NSObject<OS_dispatch_queue> *writerQueue
 @property  NSObject<OS_dispatch_source> *timer
 @property  NSURL *fileURL

  // class methods
  +[ARScreenRecorder sharedRecorder]

  // instance methods
  -[ARScreenRecorder init]
  -[ARScreenRecorder .cxx_destruct]
  -[ARScreenRecorder fileURL]
  -[ARScreenRecorder setFileURL:]
  -[ARScreenRecorder timer]
  -[ARScreenRecorder setTimer:]
  -[ARScreenRecorder _timerFired]
  -[ARScreenRecorder isRecording]
  -[ARScreenRecorder imageInput]
  -[ARScreenRecorder assetWriter]
  -[ARScreenRecorder setAssetWriter:]
  -[ARScreenRecorder startRecordingWithHandler:]
  -[ARScreenRecorder _recordingUrl]
  -[ARScreenRecorder setPreviousFrameTime:]
  -[ARScreenRecorder setFirstFrameTime:]
  -[ARScreenRecorder setIsRecording:]
  -[ARScreenRecorder writerQueue]
  -[ARScreenRecorder _finishRecordingWithCompletionHandler:]
  -[ARScreenRecorder stopCaptureWithHandler:]
  -[ARScreenRecorder _submitFrame:forTime:]
  -[ARScreenRecorder previousFrameTime]
  -[ARScreenRecorder _setupTracksWithImageHeight:width:time:]
  -[ARScreenRecorder firstFrameTime]
  -[ARScreenRecorder _appendFrame:forTime:]
  -[ARScreenRecorder setImageInput:]
  -[ARScreenRecorder setImageInputAdaptor:]
  -[ARScreenRecorder _addImageStreamTrack:]
  -[ARScreenRecorder imageInputAdaptor]
  -[ARScreenRecorder _appendImageData:forTime:]
  -[ARScreenRecorder stopRecordingAndSaveToCameraRoll:]
  -[ARScreenRecorder setWriterQueue:]


ARFaceLightEstimationTechnique : ARTechnique
  // class methods
  +[ARFaceLightEstimationTechnique _computeShSmoothingAlpha:]
  +[ARFaceLightEstimationTechnique _transformFaceTrackingData:]

  // instance methods
  -[ARFaceLightEstimationTechnique init]
  -[ARFaceLightEstimationTechnique dealloc]
  -[ARFaceLightEstimationTechnique .cxx_destruct]
  -[ARFaceLightEstimationTechnique .cxx_construct]
  -[ARFaceLightEstimationTechnique processData:]
  -[ARFaceLightEstimationTechnique requestResultDataAtTimestamp:context:]
  -[ARFaceLightEstimationTechnique requiredSensorDataTypes]


ARLocationData : NSObject /usr/lib/libc++.1.dylib <ARDictionaryCoding, ARMetadataWrapperCoding, ARSensorData, NSSecureCoding>
 @property  CLLocation *location
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double timestamp

  // class methods
  +[ARLocationData supportsSecureCoding]

  // instance methods
  -[ARLocationData isEqual:]
  -[ARLocationData copyWithZone:]
  -[ARLocationData encodeWithCoder:]
  -[ARLocationData initWithCoder:]
  -[ARLocationData .cxx_destruct]
  -[ARLocationData initWithDictionary:]
  -[ARLocationData timestamp]
  -[ARLocationData location]
  -[ARLocationData setTimestamp:]
  -[ARLocationData setLocation:]
  -[ARLocationData initWithLocation:]
  -[ARLocationData encodeToDictionary]
  -[ARLocationData encodeToMetadataWrapper]
  -[ARLocationData initWithMetadataWrapper:]


ARTechniqueGatherContext : NSObject /usr/lib/libc++.1.dylib <ARResultDataContext>
 @property  id parentContext
 @property  NSArray *gatheredData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARTechniqueGatherContext .cxx_destruct]
  -[ARTechniqueGatherContext parentContext]
  -[ARTechniqueGatherContext imageData]
  -[ARTechniqueGatherContext cameraPosition]
  -[ARTechniqueGatherContext resultDataOfClass:]
  -[ARTechniqueGatherContext anchorsToAdd]
  -[ARTechniqueGatherContext initWithParentContext:]
  -[ARTechniqueGatherContext gatheredData]
  -[ARTechniqueGatherContext captureGatheredData]
  -[ARTechniqueGatherContext anchorsToRemove]


ARTechniqueSequentialGatherContext : ARTechniqueGatherContext
  // instance methods
  -[ARTechniqueSequentialGatherContext .cxx_destruct]
  -[ARTechniqueSequentialGatherContext initWithParentContext:]
  -[ARTechniqueSequentialGatherContext addResultData:]
  -[ARTechniqueSequentialGatherContext gatheredData]


ARTechniqueParallelGatherContext : ARTechniqueGatherContext
 @property  BOOL requiredTimeIntervalComplete

  // instance methods
  -[ARTechniqueParallelGatherContext .cxx_destruct]
  -[ARTechniqueParallelGatherContext initWithParentContext:previousContext:requiredTechniqueIndices:deterministicTechniqueIndices:techniques:]
  -[ARTechniqueParallelGatherContext setRequiredTimeIntervalComplete:]
  -[ARTechniqueParallelGatherContext deterministicResultsCaptured]
  -[ARTechniqueParallelGatherContext gatheredData]
  -[ARTechniqueParallelGatherContext addResultData:forTechniqueAtIndex:]
  -[ARTechniqueParallelGatherContext requiredTimeIntervalComplete]
  -[ARTechniqueParallelGatherContext captureGatheredData]
  -[ARTechniqueParallelGatherContext _allGatheredDataByTechniqueIndex]
  -[ARTechniqueParallelGatherContext lateResultDataForTechniqueAtIndex:]


ARPlaneEstimationTechnique : ARTechnique <ARWorldTrackingTechniqueObserver>
 @property  ARWorldTrackingTechnique *worldTrackingTechnique
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARPlaneEstimationTechnique detectPlanes:withFrame:]
  +[ARPlaneEstimationTechnique _detectPlanesWithDetector:types:camera:referenceFeaturePoints:referenceOriginTransform:]

  // instance methods
  -[ARPlaneEstimationTechnique dealloc]
  -[ARPlaneEstimationTechnique isEqual:]
  -[ARPlaneEstimationTechnique .cxx_destruct]
  -[ARPlaneEstimationTechnique requestResultDataAtTimestamp:context:]
  -[ARPlaneEstimationTechnique resultDataClasses]
  -[ARPlaneEstimationTechnique reconfigurableFrom:]
  -[ARPlaneEstimationTechnique reconfigureFrom:]
  -[ARPlaneEstimationTechnique siblingTechniquesDidChange:]
  -[ARPlaneEstimationTechnique technique:didDetectPlane:timestamp:]
  -[ARPlaneEstimationTechnique technique:didOutputSceneUnderstandingData:timestamp:]
  -[ARPlaneEstimationTechnique initWithTrackingTechnique:]
  -[ARPlaneEstimationTechnique worldTrackingTechnique]
  -[ARPlaneEstimationTechnique setWorldTrackingTechnique:]


ARFaceTrackingTechnique : ARImageBasedTechnique
 @property  BOOL isFaceTracked
 @property  long long maximumNumberOfTrackedFaces

  // class methods
  +[ARFaceTrackingTechnique isSupported]

  // instance methods
  -[ARFaceTrackingTechnique init]
  -[ARFaceTrackingTechnique isEqual:]
  -[ARFaceTrackingTechnique .cxx_destruct]
  -[ARFaceTrackingTechnique processData:]
  -[ARFaceTrackingTechnique resultDataClasses]
  -[ARFaceTrackingTechnique requiredSensorDataTypes]
  -[ARFaceTrackingTechnique maximumNumberOfTrackedFaces]
  -[ARFaceTrackingTechnique initWithMaximumNumberOfTrackedFaces:]
  -[ARFaceTrackingTechnique isFaceTracked]
  -[ARFaceTrackingTechnique setIsFaceTracked:]


ARReferenceObject : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSUUID *identifier
 @property  long long version
 @property  NSData *trackingData
 @property  {?=[4]} referenceOriginTransform
 @property  NSSet *keyframes
 @property  NSString *name
 @property  void center
 @property  void extent
 @property  void scale
 @property  NSString *resourceGroupName
 @property  ARPointCloud *rawFeaturePoints

  // class methods
  +[ARReferenceObject supportsSecureCoding]
  +[ARReferenceObject referenceObjectsInGroupNamed:catalogName:bundle:]
  +[ARReferenceObject referenceObjectsInGroupNamed:catalog:]
  +[ARReferenceObject referenceObjectsInGroupNamed:bundle:]
  +[ARReferenceObject referenceObjectsInGroupNamed:catalogURL:]

  // instance methods
  -[ARReferenceObject isEqual:]
  -[ARReferenceObject name]
  -[ARReferenceObject encodeWithCoder:]
  -[ARReferenceObject initWithCoder:]
  -[ARReferenceObject .cxx_destruct]
  -[ARReferenceObject setName:]
  -[ARReferenceObject identifier]
  -[ARReferenceObject version]
  -[ARReferenceObject scale]
  -[ARReferenceObject extent]
  -[ARReferenceObject center]
  -[ARReferenceObject setResourceGroupName:]
  -[ARReferenceObject resourceGroupName]
  -[ARReferenceObject trackingData]
  -[ARReferenceObject referenceOriginTransform]
  -[ARReferenceObject rawFeaturePoints]
  -[ARReferenceObject initWithTrackingData:referenceOriginTransform:]
  -[ARReferenceObject initWithArchiveURL:error:]
  -[ARReferenceObject exportObjectToURL:previewImage:error:]
  -[ARReferenceObject referenceObjectByApplyingTransform:]
  -[ARReferenceObject referenceObjectByMergingObject:error:]
  -[ARReferenceObject keyframes]


ARDeviceOrientationData : NSObject /usr/lib/libc++.1.dylib <ARDictionaryCoding, ARMetadataWrapperCoding, ARMutableSensorData, NSSecureCoding>
 @property  CMDeviceMotion *deviceMotion
 @property  double timestamp
 @property  {?=ddddddddd} rotationMatrix
 @property  {?=[4]} rotationMatrixENU
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARDeviceOrientationData supportsSecureCoding]

  // instance methods
  -[ARDeviceOrientationData isEqual:]
  -[ARDeviceOrientationData copyWithZone:]
  -[ARDeviceOrientationData encodeWithCoder:]
  -[ARDeviceOrientationData initWithCoder:]
  -[ARDeviceOrientationData .cxx_destruct]
  -[ARDeviceOrientationData initWithDictionary:]
  -[ARDeviceOrientationData timestamp]
  -[ARDeviceOrientationData setTimestamp:]
  -[ARDeviceOrientationData deviceMotion]
  -[ARDeviceOrientationData rotationMatrix]
  -[ARDeviceOrientationData setRotationMatrix:]
  -[ARDeviceOrientationData encodeToDictionary]
  -[ARDeviceOrientationData encodeToMetadataWrapper]
  -[ARDeviceOrientationData initWithMetadataWrapper:]
  -[ARDeviceOrientationData setDeviceMotion:]
  -[ARDeviceOrientationData rotationMatrixENU]


ARGyroscopeData : NSObject /usr/lib/libc++.1.dylib <ARDictionaryCoding, ARMetadataWrapperCoding, ARMutableSensorData, NSSecureCoding>
 @property  double timestamp
 @property  {?=ddd} rotationRate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARGyroscopeData supportsSecureCoding]

  // instance methods
  -[ARGyroscopeData isEqual:]
  -[ARGyroscopeData copyWithZone:]
  -[ARGyroscopeData encodeWithCoder:]
  -[ARGyroscopeData initWithCoder:]
  -[ARGyroscopeData initWithDictionary:]
  -[ARGyroscopeData timestamp]
  -[ARGyroscopeData setTimestamp:]
  -[ARGyroscopeData rotationRate]
  -[ARGyroscopeData setRotationRate:]
  -[ARGyroscopeData encodeToDictionary]
  -[ARGyroscopeData encodeToMetadataWrapper]
  -[ARGyroscopeData initWithMetadataWrapper:]


ARCoachingRoundedButton : ARCoachingButton
  // instance methods
  -[ARCoachingRoundedButton initWithTitle:buttonStyle:textStyle:controlStyle:adjustsFontForContentSizeCategory:]
  -[ARCoachingRoundedButton _setupViewWithCornerRadius:]
  -[ARCoachingRoundedButton initWithTitle:buttonStyle:textStyle:controlStyle:cornerRadius:adjustsFontForContentSizeCategory:]
  -[ARCoachingRoundedButton initWithTitle:buttonStyle:textStyle:controlStyle:cornerRadius:]


ARNeutralFaceGeometry : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long vertexCount
 @property  r^ vertices
 @property  unsigned long textureCoordinateCount
 @property  r^ textureCoordinates
 @property  unsigned long triangleCount
 @property  r^s triangleIndices

  // class methods
  +[ARNeutralFaceGeometry sharedNeutralGeometry]

  // instance methods
  -[ARNeutralFaceGeometry .cxx_destruct]
  -[ARNeutralFaceGeometry .cxx_construct]
  -[ARNeutralFaceGeometry vertices]
  -[ARNeutralFaceGeometry vertexCount]
  -[ARNeutralFaceGeometry textureCoordinates]
  -[ARNeutralFaceGeometry triangleIndices]
  -[ARNeutralFaceGeometry triangleCount]
  -[ARNeutralFaceGeometry textureCoordinateCount]
  -[ARNeutralFaceGeometry initFromFaceKitSemantics]


ARFaceGeometry : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  unsigned long vertexCount
 @property  r^ vertices
 @property  unsigned long textureCoordinateCount
 @property  r^ textureCoordinates
 @property  unsigned long triangleCount
 @property  r^s triangleIndices

  // class methods
  +[ARFaceGeometry supportsSecureCoding]

  // instance methods
  -[ARFaceGeometry isEqual:]
  -[ARFaceGeometry copyWithZone:]
  -[ARFaceGeometry encodeWithCoder:]
  -[ARFaceGeometry initWithCoder:]
  -[ARFaceGeometry .cxx_destruct]
  -[ARFaceGeometry .cxx_construct]
  -[ARFaceGeometry vertices]
  -[ARFaceGeometry initPrivate]
  -[ARFaceGeometry vertexCount]
  -[ARFaceGeometry textureCoordinates]
  -[ARFaceGeometry initWithBlendShapes:]
  -[ARFaceGeometry triangleIndices]
  -[ARFaceGeometry triangleCount]
  -[ARFaceGeometry normalCount]
  -[ARFaceGeometry normals]
  -[ARFaceGeometry textureCoordinateCount]
  -[ARFaceGeometry initWithFaceTrackingData:]
  -[ARFaceGeometry initWithCustomVertices:verticesCount:]
  -[ARFaceGeometry positionForLabeledFacePosition:]
  -[ARFaceGeometry normalForLabeledFacePosition:]
  -[ARFaceGeometry closestVertexIndexToLabeledFacePosition:]


ARSCNFaceGeometry : SCNGeometry /System/Library/Frameworks/SpriteKit.framework/SpriteKit
 @property  <MTLBuffer> *vertexBuffer
 @property  <MTLBuffer> *normalBuffer
 @property  <MTLBuffer> *textureBuffer

  // class methods
  +[ARSCNFaceGeometry faceGeometryWithDevice:eyesFilled:mouthFilled:]
  +[ARSCNFaceGeometry faceGeometryWithDevice:]
  +[ARSCNFaceGeometry faceGeometryWithDevice:fillMesh:]

  // instance methods
  -[ARSCNFaceGeometry .cxx_destruct]
  -[ARSCNFaceGeometry vertexBuffer]
  -[ARSCNFaceGeometry setVertexBuffer:]
  -[ARSCNFaceGeometry setNormalBuffer:]
  -[ARSCNFaceGeometry setTextureBuffer:]
  -[ARSCNFaceGeometry normalBuffer]
  -[ARSCNFaceGeometry updateFromFaceGeometry:]
  -[ARSCNFaceGeometry textureBuffer]


ARCompositeSignaler : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ARCompositeSignaler init]
  -[ARCompositeSignaler .cxx_destruct]
  -[ARCompositeSignaler signalRenderThread]
  -[ARCompositeSignaler signalCompositorThread]
  -[ARCompositeSignaler waitCompositorThread]
  -[ARCompositeSignaler waitRenderThreadUsingBlock:]
  -[ARCompositeSignaler signalRenderThreadWhenPaused]


ARDepthEstimationTechnique : ARMLImageProcessingTechnique <ARTechniqueBusyState>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isBusy

  // instance methods
  -[ARDepthEstimationTechnique init]
  -[ARDepthEstimationTechnique dealloc]
  -[ARDepthEstimationTechnique .cxx_destruct]
  -[ARDepthEstimationTechnique _startLoadingMLModelSignpost]
  -[ARDepthEstimationTechnique _endLoadingMLModelSignpost]
  -[ARDepthEstimationTechnique _startMLProcessingSignpostWithTimestamp:]
  -[ARDepthEstimationTechnique _endMLProcessingSignpostWithTimestamp:]
  -[ARDepthEstimationTechnique _startMLRunNetworkSignpostWithTimestamp:]
  -[ARDepthEstimationTechnique _endMLRunNetworkSignpostWithTimestamp:]
  -[ARDepthEstimationTechnique _startMLCreateResultSignpostWithTimestamp:orientation:outputSize:]
  -[ARDepthEstimationTechnique _endMLCreateResultSignpostWithTimestamp:]
  -[ARDepthEstimationTechnique requiredTimeInterval]
  -[ARDepthEstimationTechnique createResultDataFromTensors:numberOfOutputTensors:imageDataForNeuralNetwork:inputImageData:rotationNeeded:regionOfInterest:]
  -[ARDepthEstimationTechnique resultDataClasses]
  -[ARDepthEstimationTechnique isLoadedModelVersionCorrect:]
  -[ARDepthEstimationTechnique numberOfInputChannelsToExpectInNetwork]
  -[ARDepthEstimationTechnique networkModeDidChange:toMode:]


ARCoachingHeuristic : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL satisfied
 @property  long long requirements

  // instance methods
  -[ARCoachingHeuristic requirements]
  -[ARCoachingHeuristic setSatisfied:]
  -[ARCoachingHeuristic updateWithFrame:]
  -[ARCoachingHeuristic satisfied]


ARCoachingHeuristicCollection : ARCoachingHeuristic
  // instance methods
  -[ARCoachingHeuristicCollection init]
  -[ARCoachingHeuristicCollection clear]
  -[ARCoachingHeuristicCollection .cxx_destruct]
  -[ARCoachingHeuristicCollection requirements]
  -[ARCoachingHeuristicCollection addHeuristic:]
  -[ARCoachingHeuristicCollection updateWithFrame:]


ARCoachingHeuristicTracking : ARCoachingHeuristic
  // instance methods
  -[ARCoachingHeuristicTracking requirements]
  -[ARCoachingHeuristicTracking updateWithFrame:]
  -[ARCoachingHeuristicTracking satisfied]


ARCoachingHeuristicHorizontalPlane : ARCoachingHeuristic
  // instance methods
  -[ARCoachingHeuristicHorizontalPlane requirements]
  -[ARCoachingHeuristicHorizontalPlane updateWithFrame:]


ARCoachingHeuristicVerticalPlane : ARCoachingHeuristic
  // instance methods
  -[ARCoachingHeuristicVerticalPlane requirements]
  -[ARCoachingHeuristicVerticalPlane updateWithFrame:]


ARCoachingHeuristicAnyPlane : ARCoachingHeuristic
  // instance methods
  -[ARCoachingHeuristicAnyPlane requirements]
  -[ARCoachingHeuristicAnyPlane updateWithFrame:]


ARCoachingHeuristicDelay : ARCoachingHeuristic
  // instance methods
  -[ARCoachingHeuristicDelay requirements]
  -[ARCoachingHeuristicDelay initWithDuration:]
  -[ARCoachingHeuristicDelay updateWithFrame:]


ARCubemapCompletion : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL generateHDROutput

  // class methods
  +[ARCubemapCompletion sharedInstance]

  // instance methods
  -[ARCubemapCompletion init]
  -[ARCubemapCompletion dealloc]
  -[ARCubemapCompletion .cxx_destruct]
  -[ARCubemapCompletion .cxx_construct]
  -[ARCubemapCompletion setGenerateHDROutput:]
  -[ARCubemapCompletion completeCubemap:cameraExposure:rotationWorldFromCube:]
  -[ARCubemapCompletion generateSeamSmoothingTexture]
  -[ARCubemapCompletion srgbToLog:]
  -[ARCubemapCompletion grayCubemapOfSize:]
  -[ARCubemapCompletion completeLatLongImage:]
  -[ARCubemapCompletion toVImageBuffer:]
  -[ARCubemapCompletion toTexture:]
  -[ARCubemapCompletion generateHDROutput]


ARStarData : NSObject /usr/lib/libc++.1.dylib <ARSensorData, NSSecureCoding>
 @property  long long mode
 @property  double timestamp
 @property  SRHMEConfig *config
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARStarData supportsSecureCoding]

  // instance methods
  -[ARStarData encodeWithCoder:]
  -[ARStarData initWithCoder:]
  -[ARStarData .cxx_destruct]
  -[ARStarData setMode:]
  -[ARStarData config]
  -[ARStarData timestamp]
  -[ARStarData mode]
  -[ARStarData setTimestamp:]
  -[ARStarData initWithSession:]


ARImageScalingTechnique : ARTechnique
 @property  {CGSize=dd} scaledSize
 @property  unsigned int conversionPixelFormatType
 @property  unsigned char downscaleFactor

  // instance methods
  -[ARImageScalingTechnique dealloc]
  -[ARImageScalingTechnique isEqual:]
  -[ARImageScalingTechnique scaledSize]
  -[ARImageScalingTechnique processData:]
  -[ARImageScalingTechnique requiredSensorDataTypes]
  -[ARImageScalingTechnique initWithScaledSize:]
  -[ARImageScalingTechnique setConversionPixelFormatType:]
  -[ARImageScalingTechnique downscaleFactor]
  -[ARImageScalingTechnique initWithDownscaleFactor:]
  -[ARImageScalingTechnique conversionPixelFormatType]


ARCoachingDotsRenderer : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ARCoachingDotsRenderer .cxx_destruct]
  -[ARCoachingDotsRenderer init:pixelFormat:metalLibrary:sampleCount:]
  -[ARCoachingDotsRenderer encode:renderCommandEncoder:mvp:visible:renderParams:time:]


ARCoachingStateSpring : ARFLSpring
  // instance methods
  -[ARCoachingStateSpring initWithValue:]


ARCoachingBasicSpring : NSObject /usr/lib/libc++.1.dylib
 @property  float tension
 @property  float friction
 @property  float input
 @property  float output

  // instance methods
  -[ARCoachingBasicSpring input]
  -[ARCoachingBasicSpring setInput:]
  -[ARCoachingBasicSpring friction]
  -[ARCoachingBasicSpring setFriction:]
  -[ARCoachingBasicSpring tension]
  -[ARCoachingBasicSpring setTension:]
  -[ARCoachingBasicSpring output]
  -[ARCoachingBasicSpring initWithTension:friction:]
  -[ARCoachingBasicSpring stepWithDeltaTime:]
  -[ARCoachingBasicSpring setInput:velocity:]


ARCoachingSpringDouble3 : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *springs
 @property  void value
 @property  void target
 @property  void velocity
 @property  void floatValue
 @property  double response
 @property  double dampingRatio

  // instance methods
  -[ARCoachingSpringDouble3 floatValue]
  -[ARCoachingSpringDouble3 init]
  -[ARCoachingSpringDouble3 .cxx_destruct]
  -[ARCoachingSpringDouble3 setTarget:]
  -[ARCoachingSpringDouble3 target]
  -[ARCoachingSpringDouble3 value]
  -[ARCoachingSpringDouble3 setValue:]
  -[ARCoachingSpringDouble3 response]
  -[ARCoachingSpringDouble3 velocity]
  -[ARCoachingSpringDouble3 setVelocity:]
  -[ARCoachingSpringDouble3 setResponse:]
  -[ARCoachingSpringDouble3 dampingRatio]
  -[ARCoachingSpringDouble3 springs]
  -[ARCoachingSpringDouble3 setFloatValue:]
  -[ARCoachingSpringDouble3 setDampingRatio:]
  -[ARCoachingSpringDouble3 stepWithDeltaTime:]


ARCoachingQuaternionSpring : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *springs
 @property  {?=} value
 @property  {?=} target
 @property  {?=} velocity
 @property  double response
 @property  double dampingRatio

  // instance methods
  -[ARCoachingQuaternionSpring init]
  -[ARCoachingQuaternionSpring .cxx_destruct]
  -[ARCoachingQuaternionSpring setTarget:]
  -[ARCoachingQuaternionSpring target]
  -[ARCoachingQuaternionSpring value]
  -[ARCoachingQuaternionSpring setValue:]
  -[ARCoachingQuaternionSpring response]
  -[ARCoachingQuaternionSpring velocity]
  -[ARCoachingQuaternionSpring setVelocity:]
  -[ARCoachingQuaternionSpring setResponse:]
  -[ARCoachingQuaternionSpring dampingRatio]
  -[ARCoachingQuaternionSpring springs]
  -[ARCoachingQuaternionSpring setDampingRatio:]
  -[ARCoachingQuaternionSpring stepWithDeltaTime:]


ARKitUserDefaults : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[ARKitUserDefaults synchronize]
  +[ARKitUserDefaults setValue:forKey:]
  +[ARKitUserDefaults objectForKey:]
  +[ARKitUserDefaults removeObjectForKey:]
  +[ARKitUserDefaults setObject:forKey:]
  +[ARKitUserDefaults valueForKey:]
  +[ARKitUserDefaults boolForKey:]
  +[ARKitUserDefaults stringForKey:]
  +[ARKitUserDefaults integerForKey:]
  +[ARKitUserDefaults floatForKey:]
  +[ARKitUserDefaults setBool:forKey:]
  +[ARKitUserDefaults numberForKey:]
  +[ARKitUserDefaults defaultValues]
  +[ARKitUserDefaults removeAllKeys]
  +[ARKitUserDefaults resolutionDictionaryForKey:]
  +[ARKitUserDefaults keysWhitelistedForProcessEnvironmentOverride]


ARPose : NSObject /usr/lib/libc++.1.dylib
 @property  double timestamp
 @property  {?=[4]} transform

  // instance methods
  -[ARPose transform]
  -[ARPose timestamp]
  -[ARPose initWithTimestamp:transform:]


ARScreenImageCapturer : NSObject /usr/lib/libc++.1.dylib
 @property  double serverScale
 @property  long long interfaceOrientation

  // class methods
  +[ARScreenImageCapturer sharedData]
  +[ARScreenImageCapturer screenShot]
  +[ARScreenImageCapturer screenShotCA]
  +[ARScreenImageCapturer scaleToSize:newSize:]

  // instance methods
  -[ARScreenImageCapturer interfaceOrientation]
  -[ARScreenImageCapturer setInterfaceOrientation:]
  -[ARScreenImageCapturer setServerScale:]
  -[ARScreenImageCapturer serverScale]


ARAudioData : NSObject /usr/lib/libc++.1.dylib <ARSensorData>
 @property  double timestamp
 @property  ^{opaqueCMSampleBuffer=} sampleBuffer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARAudioData dealloc]
  -[ARAudioData timestamp]
  -[ARAudioData setTimestamp:]
  -[ARAudioData initWithSampleBuffer:]
  -[ARAudioData sampleBuffer]


ARScreenRecording : NSObject /usr/lib/libc++.1.dylib
 @property  UIViewController *parentViewController
 @property  RPScreenRecorder *recorder
 @property  BOOL saveInPhotosLibrary

  // instance methods
  -[ARScreenRecording .cxx_destruct]
  -[ARScreenRecording recorder]
  -[ARScreenRecording setRecorder:]
  -[ARScreenRecording parentViewController]
  -[ARScreenRecording setParentViewController:]
  -[ARScreenRecording initWith:]
  -[ARScreenRecording startRecordingWithHandler:]
  -[ARScreenRecording stopRecordingWithHandler:]
  -[ARScreenRecording saveInPhotosLibrary]
  -[ARScreenRecording setSaveInPhotosLibrary:]


ARImageAnchor : ARAnchor <ARTrackable>
 @property  BOOL detectionOnly
 @property  BOOL isTracked
 @property  ARReferenceImage *referenceImage
 @property  double estimatedScaleFactor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARImageAnchor supportsSecureCoding]

  // instance methods
  -[ARImageAnchor name]
  -[ARImageAnchor encodeWithCoder:]
  -[ARImageAnchor initWithCoder:]
  -[ARImageAnchor .cxx_destruct]
  -[ARImageAnchor initWithAnchor:]
  -[ARImageAnchor referenceImage]
  -[ARImageAnchor setEstimatedScaleFactor:]
  -[ARImageAnchor estimatedScaleFactor]
  -[ARImageAnchor setDetectionOnly:]
  -[ARImageAnchor isTracked]
  -[ARImageAnchor isDetectionOnly]
  -[ARImageAnchor setIsTracked:]
  -[ARImageAnchor initWithReferenceImage:transform:detectionOnly:tracked:]
  -[ARImageAnchor copyWithTrackedState:]


ARPresentationDisplay : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  ARDisplayDeviceConfig *displayConfig
 @property  {CGSize=dd} viewSize
 @property  long long viewOrientation
 @property  BOOL held
 @property  BOOL worn
 @property  BOOL monoscopic
 @property  BOOL stereoscopic
 @property  long long presentationMode
 @property  long long cameraCompositing
 @property  long long displayLayout

  // instance methods
  -[ARPresentationDisplay isEqual:]
  -[ARPresentationDisplay copyWithZone:]
  -[ARPresentationDisplay .cxx_destruct]
  -[ARPresentationDisplay setViewSize:]
  -[ARPresentationDisplay viewSize]
  -[ARPresentationDisplay displayConfig]
  -[ARPresentationDisplay presentationMode]
  -[ARPresentationDisplay isMonoscopic]
  -[ARPresentationDisplay isHeld]
  -[ARPresentationDisplay isStereoscopic]
  -[ARPresentationDisplay isWorn]
  -[ARPresentationDisplay viewOrientation]
  -[ARPresentationDisplay initWithDisplayConfig:]
  -[ARPresentationDisplay setViewOrientation:]
  -[ARPresentationDisplay cameraCompositing]
  -[ARPresentationDisplay displayLayout]
  -[ARPresentationDisplay isEqualToDisplay:]


AR2D3DSkeletonLiftingData : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  r^ joints
 @property  unsigned long jointCount
 @property  r^f liftingData3D
 @property  unsigned long liftingData3DElementCount

  // class methods
  +[AR2D3DSkeletonLiftingData supportsSecureCoding]

  // instance methods
  -[AR2D3DSkeletonLiftingData isEqual:]
  -[AR2D3DSkeletonLiftingData copyWithZone:]
  -[AR2D3DSkeletonLiftingData encodeWithCoder:]
  -[AR2D3DSkeletonLiftingData initWithCoder:]
  -[AR2D3DSkeletonLiftingData .cxx_destruct]
  -[AR2D3DSkeletonLiftingData .cxx_construct]
  -[AR2D3DSkeletonLiftingData joints]
  -[AR2D3DSkeletonLiftingData jointCount]
  -[AR2D3DSkeletonLiftingData initWithHumanForLifting:imageSize:rotation:croppedRect:]
  -[AR2D3DSkeletonLiftingData liftingData3DElementCount]
  -[AR2D3DSkeletonLiftingData liftingData3D]
  -[AR2D3DSkeletonLiftingData _rotateAndUndoCroppingFromRect:]
  -[AR2D3DSkeletonLiftingData _prepareLiftingInput:jointTrackingState:imageSize:pMultiArray:]
  -[AR2D3DSkeletonLiftingData initWithJoints:numberOfJoints:rotation:croppedRect:liftingData3D:liftingData3DElementCount:]


ARPlaneGeometry : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  void center
 @property  void extent
 @property  unsigned long vertexCount
 @property  r^ vertices
 @property  unsigned long textureCoordinateCount
 @property  r^ textureCoordinates
 @property  unsigned long triangleCount
 @property  r^s triangleIndices
 @property  unsigned long boundaryVertexCount
 @property  r^ boundaryVertices

  // class methods
  +[ARPlaneGeometry supportsSecureCoding]

  // instance methods
  -[ARPlaneGeometry encodeWithCoder:]
  -[ARPlaneGeometry initWithCoder:]
  -[ARPlaneGeometry .cxx_destruct]
  -[ARPlaneGeometry .cxx_construct]
  -[ARPlaneGeometry extent]
  -[ARPlaneGeometry center]
  -[ARPlaneGeometry vertices]
  -[ARPlaneGeometry vertexCount]
  -[ARPlaneGeometry textureCoordinates]
  -[ARPlaneGeometry triangleIndices]
  -[ARPlaneGeometry triangleCount]
  -[ARPlaneGeometry textureCoordinateCount]
  -[ARPlaneGeometry initWithBoundaryVertices:center:extent:]
  -[ARPlaneGeometry boundaryVertices]
  -[ARPlaneGeometry boundaryVertexCount]
  -[ARPlaneGeometry initWithVertices:triangleIndices:boundaryVertexCount:center:extent:]


ARSCNPlaneGeometry : SCNGeometry /System/Library/Frameworks/SpriteKit.framework/SpriteKit
  // class methods
  +[ARSCNPlaneGeometry planeGeometryWithDevice:]

  // instance methods
  -[ARSCNPlaneGeometry .cxx_destruct]
  -[ARSCNPlaneGeometry updateFromPlaneGeometry:]


ARHitTestResult : NSObject /usr/lib/libc++.1.dylib
 @property  ARAnchor *anchor
 @property  double distance
 @property  {?=[4]} localTransform
 @property  {?=[4]} worldTransform
 @property  unsigned long type

  // instance methods
  -[ARHitTestResult type]
  -[ARHitTestResult .cxx_destruct]
  -[ARHitTestResult initWithType:]
  -[ARHitTestResult debugQuickLookObject]
  -[ARHitTestResult anchor]
  -[ARHitTestResult setDistance:]
  -[ARHitTestResult distance]
  -[ARHitTestResult setAnchor:]
  -[ARHitTestResult setLocalTransform:]
  -[ARHitTestResult localTransform]
  -[ARHitTestResult worldTransform]
  -[ARHitTestResult setWorldTransform:]
  -[ARHitTestResult _description:]


ARPlaneWorld : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[ARPlaneWorld findMergedPlanes::]

  // instance methods
  -[ARPlaneWorld init]
  -[ARPlaneWorld .cxx_destruct]
  -[ARPlaneWorld .cxx_construct]
  -[ARPlaneWorld planes]
  -[ARPlaneWorld updatePlanes:withCameraImage:exposureOffset:transform:intrinsics:synchronous:]
  -[ARPlaneWorld initWithTextureSize:]
  -[ARPlaneWorld updatePlanes:withCurrentDetections:synchronous:]


ARSkeletonDefinition : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long jointCount
 @property  NSArray *jointNames
 @property  NSArray *parentIndices
 @property  ARSkeleton3D *neutralBodySkeleton3D

  // class methods
  +[ARSkeletonDefinition defaultBody3DSkeletonDefinition]
  +[ARSkeletonDefinition defaultBody2DSkeletonDefinition]

  // instance methods
  -[ARSkeletonDefinition .cxx_destruct]
  -[ARSkeletonDefinition jointCount]
  -[ARSkeletonDefinition jointNames]
  -[ARSkeletonDefinition parentIndices]
  -[ARSkeletonDefinition initDefault3DSkeletonDefinition]
  -[ARSkeletonDefinition initDefault2DSkeletonDefinition]
  -[ARSkeletonDefinition indexForJointName:]
  -[ARSkeletonDefinition neutralBodySkeleton3D]


AR2DSkeletonDetectionPostProcessGPU : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[AR2DSkeletonDetectionPostProcessGPU init]
  -[AR2DSkeletonDetectionPostProcessGPU dealloc]
  -[AR2DSkeletonDetectionPostProcessGPU .cxx_destruct]
  -[AR2DSkeletonDetectionPostProcessGPU process:counter:]


ARPoseContext : NSObject /usr/lib/libc++.1.dylib <ARResultDataContext>
 @property  long long cameraPosition
 @property  @? cameraTransformCallback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARPoseContext .cxx_destruct]
  -[ARPoseContext imageData]
  -[ARPoseContext cameraPosition]
  -[ARPoseContext setCameraPosition:]
  -[ARPoseContext resultDataOfClass:]
  -[ARPoseContext cameraTransformCallback]
  -[ARPoseContext setCameraTransformCallback:]


AREnvironmentProbeManager : NSObject /usr/lib/libc++.1.dylib
 @property  long long mode

  // instance methods
  -[AREnvironmentProbeManager .cxx_destruct]
  -[AREnvironmentProbeManager mode]
  -[AREnvironmentProbeManager .cxx_construct]
  -[AREnvironmentProbeManager initWithMode:]
  -[AREnvironmentProbeManager updateProbesForTimestamp:planes:imageData:pose:enableDirectTexturingForProbesWithIdentifier:]
  -[AREnvironmentProbeManager insertIntoQueue:]
  -[AREnvironmentProbeManager requestTextureForProbe:]
  -[AREnvironmentProbeManager addProbeWithAnchor:timestamp:textureImmediately:]
  -[AREnvironmentProbeManager updateProbesFromExistingAnchors:]


ARProbeFilter : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[ARProbeFilter filter:]


AREnvironmentProbeUpdate : NSObject /usr/lib/libc++.1.dylib <ARResultData>
 @property  AREnvironmentProbeManager *manager
 @property  NSArray *addedProbeAnchors
 @property  NSArray *updatedProbeAnchors
 @property  NSArray *removedProbeAnchors
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AREnvironmentProbeUpdate .cxx_destruct]
  -[AREnvironmentProbeUpdate manager]
  -[AREnvironmentProbeUpdate setManager:]
  -[AREnvironmentProbeUpdate anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[AREnvironmentProbeUpdate setAddedProbeAnchors:]
  -[AREnvironmentProbeUpdate setUpdatedProbeAnchors:]
  -[AREnvironmentProbeUpdate setRemovedProbeAnchors:]
  -[AREnvironmentProbeUpdate removedProbeAnchors]
  -[AREnvironmentProbeUpdate addedProbeAnchors]
  -[AREnvironmentProbeUpdate updatedProbeAnchors]


ARImageDetectionResult : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  {?=[4]} visionTransform
 @property  double estimatedScaleFactor
 @property  ARReferenceImage *referenceImage
 @property  {?=[4]} worldTrackingCameraTransformAtDetection
 @property  ^v imageContext

  // class methods
  +[ARImageDetectionResult supportsSecureCoding]

  // instance methods
  -[ARImageDetectionResult isEqual:]
  -[ARImageDetectionResult copyWithZone:]
  -[ARImageDetectionResult encodeWithCoder:]
  -[ARImageDetectionResult initWithCoder:]
  -[ARImageDetectionResult .cxx_destruct]
  -[ARImageDetectionResult referenceImage]
  -[ARImageDetectionResult setEstimatedScaleFactor:]
  -[ARImageDetectionResult setVisionTransform:]
  -[ARImageDetectionResult imageContext]
  -[ARImageDetectionResult setWorldTrackingCameraTransformAtDetection:]
  -[ARImageDetectionResult visionTransform]
  -[ARImageDetectionResult setImageContext:]
  -[ARImageDetectionResult setReferenceImage:]
  -[ARImageDetectionResult estimatedScaleFactor]
  -[ARImageDetectionResult worldTrackingCameraTransformAtDetection]


ARImageDetectionResultData : NSObject /usr/lib/libc++.1.dylib <ARResultData, NSCopying, NSSecureCoding>
 @property  BOOL detectionOnly
 @property  BOOL predicted
 @property  BOOL providesWorldTrackingCameraPose
 @property  ARCamera *currentCamera
 @property  NSArray *detectedImages
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARImageDetectionResultData supportsSecureCoding]

  // instance methods
  -[ARImageDetectionResultData isEqual:]
  -[ARImageDetectionResultData copyWithZone:]
  -[ARImageDetectionResultData encodeWithCoder:]
  -[ARImageDetectionResultData initWithCoder:]
  -[ARImageDetectionResultData .cxx_destruct]
  -[ARImageDetectionResultData anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARImageDetectionResultData detectedImages]
  -[ARImageDetectionResultData setDetectedImages:]
  -[ARImageDetectionResultData setProvidesWorldTrackingCameraPose:]
  -[ARImageDetectionResultData setDetectionOnly:]
  -[ARImageDetectionResultData setPredicted:]
  -[ARImageDetectionResultData predicted]
  -[ARImageDetectionResultData detectionOnly]
  -[ARImageDetectionResultData setCurrentCamera:]
  -[ARImageDetectionResultData providesWorldTrackingCameraPose]
  -[ARImageDetectionResultData currentCamera]


ARBodyAnchor : ARAnchor <ARTrackable>
 @property  ARBody2D *referenceBody
 @property  ARSkeleton3D *skeleton
 @property  double estimatedScaleFactor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isTracked

  // class methods
  +[ARBodyAnchor supportsSecureCoding]

  // instance methods
  -[ARBodyAnchor isEqual:]
  -[ARBodyAnchor encodeWithCoder:]
  -[ARBodyAnchor initWithCoder:]
  -[ARBodyAnchor .cxx_destruct]
  -[ARBodyAnchor initWithAnchor:]
  -[ARBodyAnchor skeleton]
  -[ARBodyAnchor estimatedScaleFactor]
  -[ARBodyAnchor isTracked]
  -[ARBodyAnchor referenceBody]
  -[ARBodyAnchor copyWithTrackedState:]
  -[ARBodyAnchor initWithIdentifier:transform:tracked:skeletonData:]
  -[ARBodyAnchor isEqualToARBodyAnchor:]


ARDeviceOrientationSensor : NSObject /usr/lib/libc++.1.dylib <ARPassiveSensor>
 @property  <ARSensorDelegate> *delegate
 @property  long long worldAlignment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long powerUsage

  // instance methods
  -[ARDeviceOrientationSensor dealloc]
  -[ARDeviceOrientationSensor delegate]
  -[ARDeviceOrientationSensor setDelegate:]
  -[ARDeviceOrientationSensor .cxx_destruct]
  -[ARDeviceOrientationSensor stop]
  -[ARDeviceOrientationSensor start]
  -[ARDeviceOrientationSensor currentData]
  -[ARDeviceOrientationSensor providedDataTypes]
  -[ARDeviceOrientationSensor worldAlignment]
  -[ARDeviceOrientationSensor initWithMotionManager:alignment:]


ARTimeKeyedList : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ARTimeKeyedList init]
  -[ARTimeKeyedList clear]
  -[ARTimeKeyedList .cxx_destruct]
  -[ARTimeKeyedList initWithMaxSize:]
  -[ARTimeKeyedList appendObject:forTime:]
  -[ARTimeKeyedList nearestObjectForTime:]
  -[ARTimeKeyedList insertionIndexForTime:]


ARReplaySensorPublic : NSObject /usr/lib/libc++.1.dylib <ARReplaySensorProtocol>
 @property  int imageIndex
 @property  long long nextFrameIndex
 @property  long long targetFrameIndex
 @property  double recordingTimeToReplayTimeOffset
 @property  BOOL recordingTimeToReplayTimeOffsetReset
 @property  <ARSensorDelegate> *delegate
 @property  <ARReplaySensorDelegate> *replaySensorDelegate
 @property  NSURL *sequenceURL
 @property  NSString *deviceModel
 @property  NSString *osVersion
 @property  NSString *arkitVersion
 @property  {CGSize=dd} imageResolution
 @property  double nominalFrameRate
 @property  unsigned long recordedSensorTypes
 @property  NSSet *recordedResultClasses
 @property  NSArray *recordedResultClassList
 @property  BOOL isReplayingManually
 @property  BOOL synchronousMode
 @property  unsigned long forcePlaybackFramesPerSecond
 @property  float advanceFramesPerSecondMultiplier
 @property  NSSet *customDataClasses
 @property  ARParentImageSensorSettings *parentImageSensorSettings
 @property  NSString *mainVideoStreamIdentifier
 @property  BOOL interrupted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long powerUsage
 @property  BOOL finishedReplaying

  // instance methods
  -[ARReplaySensorPublic dealloc]
  -[ARReplaySensorPublic isEqual:]
  -[ARReplaySensorPublic delegate]
  -[ARReplaySensorPublic setDelegate:]
  -[ARReplaySensorPublic .cxx_destruct]
  -[ARReplaySensorPublic failWithError:]
  -[ARReplaySensorPublic stop]
  -[ARReplaySensorPublic start]
  -[ARReplaySensorPublic observeValueForKeyPath:ofObject:change:context:]
  -[ARReplaySensorPublic interrupt]
  -[ARReplaySensorPublic currentTime]
  -[ARReplaySensorPublic interrupted]
  -[ARReplaySensorPublic osVersion]
  -[ARReplaySensorPublic deviceModel]
  -[ARReplaySensorPublic advance]
  -[ARReplaySensorPublic nominalFrameRate]
  -[ARReplaySensorPublic endInterruption]
  -[ARReplaySensorPublic imageResolution]
  -[ARReplaySensorPublic providedDataTypes]
  -[ARReplaySensorPublic isSynchronousMode]
  -[ARReplaySensorPublic parentImageSensorSettings]
  -[ARReplaySensorPublic initWithDataFromFile:]
  -[ARReplaySensorPublic initWithSequenceURL:manualReplay:]
  -[ARReplaySensorPublic initWithSequenceURL:manualReplay:synchronousMode:]
  -[ARReplaySensorPublic advanceFrame]
  -[ARReplaySensorPublic advanceToFrameIndex:]
  -[ARReplaySensorPublic replayTechniqueForResultDataClasses:]
  -[ARReplaySensorPublic customDataForTimestamp:]
  -[ARReplaySensorPublic replaySensorDelegate]
  -[ARReplaySensorPublic setReplaySensorDelegate:]
  -[ARReplaySensorPublic sequenceURL]
  -[ARReplaySensorPublic arkitVersion]
  -[ARReplaySensorPublic recordedSensorTypes]
  -[ARReplaySensorPublic recordedResultClasses]
  -[ARReplaySensorPublic recordedResultClassList]
  -[ARReplaySensorPublic isReplayingManually]
  -[ARReplaySensorPublic finishedReplaying]
  -[ARReplaySensorPublic forcePlaybackFramesPerSecond]
  -[ARReplaySensorPublic setForcePlaybackFramesPerSecond:]
  -[ARReplaySensorPublic nextFrameIndex]
  -[ARReplaySensorPublic advanceFramesPerSecondMultiplier]
  -[ARReplaySensorPublic setAdvanceFramesPerSecondMultiplier:]
  -[ARReplaySensorPublic customDataClasses]
  -[ARReplaySensorPublic setCustomDataClasses:]
  -[ARReplaySensorPublic setParentImageSensorSettings:]
  -[ARReplaySensorPublic endReplay]
  -[ARReplaySensorPublic prepareForReplay]
  -[ARReplaySensorPublic startReplayIfNeeded]
  -[ARReplaySensorPublic setTargetFrameIndex:]
  -[ARReplaySensorPublic setImageIndex:]
  -[ARReplaySensorPublic tick]
  -[ARReplaySensorPublic targetFrameIndex]
  -[ARReplaySensorPublic imageIndex]
  -[ARReplaySensorPublic _didOutputSensorData:]
  -[ARReplaySensorPublic setNextFrameIndex:]
  -[ARReplaySensorPublic readFileMetadata]
  -[ARReplaySensorPublic getResultDataForClasses:upToRecordTime:]
  -[ARReplaySensorPublic keyedArchiveConverterForClasses:]
  -[ARReplaySensorPublic getItemsFromStream:upToMovieTime:converter:]
  -[ARReplaySensorPublic currentCMTime]
  -[ARReplaySensorPublic peekNextWrappedImageDataForAllRequiredStreams]
  -[ARReplaySensorPublic _replaySensorFinishedReplayingData]
  -[ARReplaySensorPublic imageDataToReplayForTimestamp:]
  -[ARReplaySensorPublic getNextWrappedImageDataForReplay]
  -[ARReplaySensorPublic wrappedImageDataOrderedByTime:]
  -[ARReplaySensorPublic recordingTimeToReplayTimeOffsetReset]
  -[ARReplaySensorPublic setRecordingTimeToReplayTimeOffsetReset:]
  -[ARReplaySensorPublic setRecordingTimeToReplayTimeOffset:]
  -[ARReplaySensorPublic metadataWrapperConverter:]
  -[ARReplaySensorPublic recordingTimeToReplayTimeOffset]
  -[ARReplaySensorPublic starDataConverter]
  -[ARReplaySensorPublic peekNextWrappedImageDataForStreamIdentifier:]
  -[ARReplaySensorPublic keyedArchiveConverter:]
  -[ARReplaySensorPublic getWrappedItemsFromStream:upToMovieTime:converter:]
  -[ARReplaySensorPublic getNextWrappedItemsFromStream:converter:]
  -[ARReplaySensorPublic availableVideoFormatForDeviceType:position:]
  -[ARReplaySensorPublic mainVideoStreamIdentifier]
  -[ARReplaySensorPublic setMainVideoStreamIdentifier:]


ARReplayResultDataPublicTechnique : ARTechnique
 @property  NSSet *resultDataClasses
 @property  @? retrieveResultsForTimestampBlock

  // instance methods
  -[ARReplayResultDataPublicTechnique isEqual:]
  -[ARReplayResultDataPublicTechnique .cxx_destruct]
  -[ARReplayResultDataPublicTechnique requestResultDataAtTimestamp:context:]
  -[ARReplayResultDataPublicTechnique resultDataClasses]
  -[ARReplayResultDataPublicTechnique setResultDataClasses:]
  -[ARReplayResultDataPublicTechnique setRetrieveResultsForTimestampBlock:]
  -[ARReplayResultDataPublicTechnique retrieveResultsForTimestampBlock]


ARReplayMovieDataWrapper : NSObject /usr/lib/libc++.1.dylib
 @property  double timestamp
 @property  id data

  // instance methods
  -[ARReplayMovieDataWrapper .cxx_destruct]
  -[ARReplayMovieDataWrapper data]
  -[ARReplayMovieDataWrapper setData:]
  -[ARReplayMovieDataWrapper timestamp]
  -[ARReplayMovieDataWrapper setTimestamp:]


ARFaceAnchor : ARAnchor <ARTrackable>
 @property  ARFaceTrackingData *trackingData
 @property  BOOL isTracked
 @property  NSError *trackingError
 @property  ARFaceGeometry *geometry
 @property  {?=[4]} leftEyeTransform
 @property  {?=[4]} rightEyeTransform
 @property  void lookAtPoint
 @property  NSDictionary *blendShapes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARFaceAnchor initialize]
  +[ARFaceAnchor supportsSecureCoding]
  +[ARFaceAnchor blendShapeToMirroredBlendShapeMapping]
  +[ARFaceAnchor blendShapeMapping]
  +[ARFaceAnchor mirroredBlendShapeMapping]

  // instance methods
  -[ARFaceAnchor encodeWithCoder:]
  -[ARFaceAnchor initWithCoder:]
  -[ARFaceAnchor .cxx_destruct]
  -[ARFaceAnchor initWithAnchor:]
  -[ARFaceAnchor geometry]
  -[ARFaceAnchor trackingData]
  -[ARFaceAnchor imageVertices]
  -[ARFaceAnchor leftEyeTransform]
  -[ARFaceAnchor rightEyeTransform]
  -[ARFaceAnchor gazePoint]
  -[ARFaceAnchor trackingError]
  -[ARFaceAnchor initWithIdentifier:trackingData:]
  -[ARFaceAnchor isTracked]
  -[ARFaceAnchor initWithExistingFaceAnchor:tracked:trackingError:]
  -[ARFaceAnchor blendShapes]
  -[ARFaceAnchor lookAtPoint]
  -[ARFaceAnchor setIsTracked:]
  -[ARFaceAnchor isEqualToFaceAnchor:]
  -[ARFaceAnchor setTrackingData:]
  -[ARFaceAnchor setTrackingError:]


ARWorldTrackingState : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  long long state
 @property  long long reason
 @property  BOOL majorRelocalization
 @property  BOOL minorRelocalization
 @property  BOOL poseGraphUpdated
 @property  long long vioTrackingState
 @property  double lastMajorRelocalizationTimestamp
 @property  double originTimestamp

  // class methods
  +[ARWorldTrackingState supportsSecureCoding]

  // instance methods
  -[ARWorldTrackingState isEqual:]
  -[ARWorldTrackingState copyWithZone:]
  -[ARWorldTrackingState encodeWithCoder:]
  -[ARWorldTrackingState initWithCoder:]
  -[ARWorldTrackingState reason]
  -[ARWorldTrackingState state]
  -[ARWorldTrackingState setState:]
  -[ARWorldTrackingState setReason:]
  -[ARWorldTrackingState originTimestamp]
  -[ARWorldTrackingState setOriginTimestamp:]
  -[ARWorldTrackingState vioTrackingState]
  -[ARWorldTrackingState poseGraphUpdated]
  -[ARWorldTrackingState majorRelocalization]
  -[ARWorldTrackingState setMajorRelocalization:]
  -[ARWorldTrackingState minorRelocalization]
  -[ARWorldTrackingState setMinorRelocalization:]
  -[ARWorldTrackingState setPoseGraphUpdated:]
  -[ARWorldTrackingState setVioTrackingState:]
  -[ARWorldTrackingState setLastMajorRelocalizationTimestamp:]
  -[ARWorldTrackingState lastMajorRelocalizationTimestamp]


ARWorldTrackingPoseData : NSObject /usr/lib/libc++.1.dylib <ARResultData, NSSecureCoding>
 @property  double timestamp
 @property  {?=[4]} visionCameraTransform
 @property  ARWorldTrackingState *worldTrackingState
 @property  NSDictionary *vioStateDetails
 @property  ARVideoFormat *currentlyActiveVideoFormat
 @property  long long worldMappingStatus
 @property  {?=[4]} cameraTransform
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARWorldTrackingPoseData supportsSecureCoding]

  // instance methods
  -[ARWorldTrackingPoseData isEqual:]
  -[ARWorldTrackingPoseData encodeWithCoder:]
  -[ARWorldTrackingPoseData initWithCoder:]
  -[ARWorldTrackingPoseData .cxx_destruct]
  -[ARWorldTrackingPoseData timestamp]
  -[ARWorldTrackingPoseData setTimestamp:]
  -[ARWorldTrackingPoseData initWithTimestamp:]
  -[ARWorldTrackingPoseData worldTrackingState]
  -[ARWorldTrackingPoseData worldMappingStatus]
  -[ARWorldTrackingPoseData visionCameraTransform]
  -[ARWorldTrackingPoseData cameraTransform]
  -[ARWorldTrackingPoseData setVisionCameraTransform:]
  -[ARWorldTrackingPoseData setCameraTransform:]
  -[ARWorldTrackingPoseData setWorldTrackingState:]
  -[ARWorldTrackingPoseData setVioStateDetails:]
  -[ARWorldTrackingPoseData setCurrentlyActiveVideoFormat:]
  -[ARWorldTrackingPoseData setWorldMappingStatus:]
  -[ARWorldTrackingPoseData vioStateDetails]
  -[ARWorldTrackingPoseData currentlyActiveVideoFormat]


ARWorldTrackingFeaturePointData : NSObject /usr/lib/libc++.1.dylib <ARResultData, NSSecureCoding>
 @property  double timestamp
 @property  ARPointCloud *visionFeaturePoints
 @property  ARPointCloud *featurePoints
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARWorldTrackingFeaturePointData supportsSecureCoding]

  // instance methods
  -[ARWorldTrackingFeaturePointData isEqual:]
  -[ARWorldTrackingFeaturePointData encodeWithCoder:]
  -[ARWorldTrackingFeaturePointData initWithCoder:]
  -[ARWorldTrackingFeaturePointData .cxx_destruct]
  -[ARWorldTrackingFeaturePointData timestamp]
  -[ARWorldTrackingFeaturePointData initWithTimestamp:]
  -[ARWorldTrackingFeaturePointData featurePoints]
  -[ARWorldTrackingFeaturePointData setVisionFeaturePoints:]
  -[ARWorldTrackingFeaturePointData setFeaturePoints:]
  -[ARWorldTrackingFeaturePointData visionFeaturePoints]


ARWorldTrackingReferenceAnchorData : NSObject /usr/lib/libc++.1.dylib <ARResultData, NSSecureCoding>
 @property  double timestamp
 @property  NSSet *updatedAnchors
 @property  NSSet *addedAnchors
 @property  NSSet *removedAnchors
 @property  NSSet *receivedAnchors
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARWorldTrackingReferenceAnchorData supportsSecureCoding]

  // instance methods
  -[ARWorldTrackingReferenceAnchorData isEqual:]
  -[ARWorldTrackingReferenceAnchorData encodeWithCoder:]
  -[ARWorldTrackingReferenceAnchorData initWithCoder:]
  -[ARWorldTrackingReferenceAnchorData .cxx_destruct]
  -[ARWorldTrackingReferenceAnchorData timestamp]
  -[ARWorldTrackingReferenceAnchorData setTimestamp:]
  -[ARWorldTrackingReferenceAnchorData updatedAnchors]
  -[ARWorldTrackingReferenceAnchorData anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARWorldTrackingReferenceAnchorData initWithUpdatedAnchors:addedAnchors:removedAnchors:]
  -[ARWorldTrackingReferenceAnchorData addedAnchors]
  -[ARWorldTrackingReferenceAnchorData setReceivedAnchors:]
  -[ARWorldTrackingReferenceAnchorData removedAnchors]
  -[ARWorldTrackingReferenceAnchorData receivedAnchors]


ARWorldTrackingParticipantAnchorData : NSObject /usr/lib/libc++.1.dylib <ARResultData>
 @property  NSSet *anchors
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARWorldTrackingParticipantAnchorData .cxx_destruct]
  -[ARWorldTrackingParticipantAnchorData anchors]
  -[ARWorldTrackingParticipantAnchorData anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]
  -[ARWorldTrackingParticipantAnchorData initWithAnchors:]


ARWorldTrackingErrorData : NSObject /usr/lib/libc++.1.dylib <ARResultData, NSSecureCoding>
 @property  double timestamp
 @property  long long errorCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARWorldTrackingErrorData supportsSecureCoding]

  // instance methods
  -[ARWorldTrackingErrorData isEqual:]
  -[ARWorldTrackingErrorData encodeWithCoder:]
  -[ARWorldTrackingErrorData initWithCoder:]
  -[ARWorldTrackingErrorData timestamp]
  -[ARWorldTrackingErrorData initWithTimestamp:]
  -[ARWorldTrackingErrorData errorCode]
  -[ARWorldTrackingErrorData setErrorCode:]


ARPresentationThermalPolicy : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableDictionary *cameraConfigurations

  // instance methods
  -[ARPresentationThermalPolicy init]
  -[ARPresentationThermalPolicy copyWithZone:]
  -[ARPresentationThermalPolicy .cxx_destruct]
  -[ARPresentationThermalPolicy cameraConfigurations]
  -[ARPresentationThermalPolicy addCameraConfig:]
  -[ARPresentationThermalPolicy cameraConfigForDeviceType:position:]
  -[ARPresentationThermalPolicy updateCameraConfig:]
  -[ARPresentationThermalPolicy _keyForType:position:]


ARObjectDetectionTechnique : ARImageBasedTechnique
 @property  BOOL finishedLoadingObjects
 @property  ARWorldTrackingPoseData *currentWorldTrackingPose
 @property  NSDictionary *referenceObjecteMap
 @property  NSArray *detectionObjects

  // instance methods
  -[ARObjectDetectionTechnique isEqual:]
  -[ARObjectDetectionTechnique .cxx_destruct]
  -[ARObjectDetectionTechnique prepare]
  -[ARObjectDetectionTechnique processData:]
  -[ARObjectDetectionTechnique setCurrentWorldTrackingPose:]
  -[ARObjectDetectionTechnique currentWorldTrackingPose]
  -[ARObjectDetectionTechnique processResultData:timestamp:context:]
  -[ARObjectDetectionTechnique requiredTimeInterval]
  -[ARObjectDetectionTechnique updateDevicePerformanceLevel:]
  -[ARObjectDetectionTechnique detectionObjects]
  -[ARObjectDetectionTechnique initWithDetectionObjects:]
  -[ARObjectDetectionTechnique finishedLoadingObjects]
  -[ARObjectDetectionTechnique updatePresentationMode:]
  -[ARObjectDetectionTechnique _loadReferenceObjects]
  -[ARObjectDetectionTechnique setFinishedLoadingObjects:]
  -[ARObjectDetectionTechnique _enqueueObjectForDetectionNonBlocking:]
  -[ARObjectDetectionTechnique referenceObjecteMap]


ARCoachingMotionTracker : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL isMoving
 @property  BOOL didStartMoving
 @property  BOOL didStopMoving

  // instance methods
  -[ARCoachingMotionTracker init]
  -[ARCoachingMotionTracker clear]
  -[ARCoachingMotionTracker isMoving]
  -[ARCoachingMotionTracker didStopMoving]
  -[ARCoachingMotionTracker updateWithFrame:]
  -[ARCoachingMotionTracker didStartMoving]
  -[ARCoachingMotionTracker calcAverageVelocity]
  -[ARCoachingMotionTracker setIsMoving:]


ARPresentationDescriptor : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  long long HUDOption
 @property  long long presentationWarp
 @property  void viewportDepthRange
 @property  void viewportDepthRangeNDC
 @property  unsigned long drawablePixelFormat
 @property  unsigned long drawableCount
 @property  NSArray *supportedMultisampleCount
 @property  unsigned long colorPixelFormat
 @property  unsigned long depthPixelFormat
 @property  void depthRange
 @property  long long layout
 @property  long long multisampleCount

  // class methods
  +[ARPresentationDescriptor supportsSecureCoding]

  // instance methods
  -[ARPresentationDescriptor init]
  -[ARPresentationDescriptor isEqual:]
  -[ARPresentationDescriptor copyWithZone:]
  -[ARPresentationDescriptor encodeWithCoder:]
  -[ARPresentationDescriptor initWithCoder:]
  -[ARPresentationDescriptor .cxx_destruct]
  -[ARPresentationDescriptor layout]
  -[ARPresentationDescriptor setLayout:]
  -[ARPresentationDescriptor colorPixelFormat]
  -[ARPresentationDescriptor depthPixelFormat]
  -[ARPresentationDescriptor setColorPixelFormat:]
  -[ARPresentationDescriptor viewportDepthRangeNDC]
  -[ARPresentationDescriptor viewportDepthRange]
  -[ARPresentationDescriptor isReverseZ]
  -[ARPresentationDescriptor multisampleCount]
  -[ARPresentationDescriptor HUDOption]
  -[ARPresentationDescriptor drawablePixelFormat]
  -[ARPresentationDescriptor drawableCount]
  -[ARPresentationDescriptor setDrawableCount:]
  -[ARPresentationDescriptor setDepthPixelFormat:]
  -[ARPresentationDescriptor depthRange]
  -[ARPresentationDescriptor setDepthRange:]
  -[ARPresentationDescriptor setMultisampleCount:]
  -[ARPresentationDescriptor setHUDOption:]
  -[ARPresentationDescriptor supportedMultisampleCount]
  -[ARPresentationDescriptor presentationWarp]
  -[ARPresentationDescriptor setPresentationWarp:]
  -[ARPresentationDescriptor setDrawablePixelFormat:]
  -[ARPresentationDescriptor isEqualToDescriptor:]


ARCoachingDeviceController : NSObject /usr/lib/libc++.1.dylib
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  {CGPoint=dd} position
 @property  {CATransform3D=dddddddddddddddd} transform
 @property  float opacity

  // instance methods
  -[ARCoachingDeviceController .cxx_destruct]
  -[ARCoachingDeviceController transform]
  -[ARCoachingDeviceController position]
  -[ARCoachingDeviceController bounds]
  -[ARCoachingDeviceController setBounds:]
  -[ARCoachingDeviceController opacity]
  -[ARCoachingDeviceController setOpacity:]
  -[ARCoachingDeviceController setTransform:]
  -[ARCoachingDeviceController setPosition:]
  -[ARCoachingDeviceController initWithDeviceMaskImage:solidColor:]
  -[ARCoachingDeviceController initWithDeviceMaskImage:]
  -[ARCoachingDeviceController update:visible:layer:renderParams:]
  -[ARCoachingDeviceController setLayerParent:]


ARRollingNumberSeries : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long windowSize
 @property  unsigned long count
 @property  double sum
 @property  double max
 @property  double min
 @property  double average
 @property  double variance

  // instance methods
  -[ARRollingNumberSeries dealloc]
  -[ARRollingNumberSeries count]
  -[ARRollingNumberSeries clear]
  -[ARRollingNumberSeries max]
  -[ARRollingNumberSeries min]
  -[ARRollingNumberSeries average]
  -[ARRollingNumberSeries initWithWindowSize:]
  -[ARRollingNumberSeries variance]
  -[ARRollingNumberSeries sum]
  -[ARRollingNumberSeries appendNumber:]
  -[ARRollingNumberSeries windowSize]


ARParticipantAnchor : ARAnchor

ARBKSAccelerometer : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[ARBKSAccelerometer sharedWeakAccelerometerHandle]
  +[ARBKSAccelerometer sharedAccelerometerHandle]

  // instance methods
  -[ARBKSAccelerometer dealloc]
  -[ARBKSAccelerometer .cxx_destruct]
  -[ARBKSAccelerometer currentOrientation]
  -[ARBKSAccelerometer initPrivate]


ARSharedGPUDevice : NSObject /usr/lib/libc++.1.dylib
 @property  <MTLDevice> *device

  // class methods
  +[ARSharedGPUDevice sharedInstance]

  // instance methods
  -[ARSharedGPUDevice .cxx_destruct]
  -[ARSharedGPUDevice device]
  -[ARSharedGPUDevice setDevice:]


ARCoachingGlyphRenderer : NSObject /usr/lib/libc++.1.dylib <ARCoachingGlyphStateDelegate>
 @property  double currentAnimationTime
 @property  ARCoachingGlyphState *state
 @property  float rotationAngleY
 @property  float a_vel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARCoachingGlyphRenderer .cxx_destruct]
  -[ARCoachingGlyphRenderer state]
  -[ARCoachingGlyphRenderer setOrientationAngle:]
  -[ARCoachingGlyphRenderer initWithLayer:device:pixelFormat:sampleCount:deviceMaskImage:]
  -[ARCoachingGlyphRenderer currentAnimationTime]
  -[ARCoachingGlyphRenderer resetAnimationTime:]
  -[ARCoachingGlyphRenderer resizeIfNeeded:]
  -[ARCoachingGlyphRenderer drawWithTimeDelta:drawable:commandBuffer:]
  -[ARCoachingGlyphRenderer snapStateChanged]
  -[ARCoachingGlyphRenderer quaternionTargetChanged]
  -[ARCoachingGlyphRenderer scaleTargetChanged]
  -[ARCoachingGlyphRenderer topPlaneTranslationTargetChanged]
  -[ARCoachingGlyphRenderer bottomPlaneTranslationTargetChanged]
  -[ARCoachingGlyphRenderer setA_vel:]
  -[ARCoachingGlyphRenderer setRotationAngleY:]
  -[ARCoachingGlyphRenderer a_vel]
  -[ARCoachingGlyphRenderer stepSprings:]
  -[ARCoachingGlyphRenderer updateAngularVelocity]
  -[ARCoachingGlyphRenderer computeRotation:]
  -[ARCoachingGlyphRenderer computeTesselationFactorsForCommandBuffer:]
  -[ARCoachingGlyphRenderer renderPostTessellationInDrawable:withCommandBuffer:]
  -[ARCoachingGlyphRenderer generateTexturesWithSize:]
  -[ARCoachingGlyphRenderer resetData]
  -[ARCoachingGlyphRenderer resetSprings]
  -[ARCoachingGlyphRenderer restartAnimation]
  -[ARCoachingGlyphRenderer rotationAngleY]


ARCollaborationData : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  long long version
 @property  double timestamp
 @property  NSData *vioData
 @property  long long vioDataType
 @property  unsigned long vioSessionID
 @property  NSUUID *anchorIdentifier
 @property  NSSet *anchors
 @property  PRCollaborationData *prCollaborationData
 @property  PRPeer *prPeer
 @property  long long priority

  // class methods
  +[ARCollaborationData supportsSecureCoding]

  // instance methods
  -[ARCollaborationData encodeWithCoder:]
  -[ARCollaborationData initWithCoder:]
  -[ARCollaborationData .cxx_destruct]
  -[ARCollaborationData version]
  -[ARCollaborationData timestamp]
  -[ARCollaborationData priority]
  -[ARCollaborationData anchors]
  -[ARCollaborationData setAnchors:]
  -[ARCollaborationData anchorIdentifier]
  -[ARCollaborationData setAnchorIdentifier:]
  -[ARCollaborationData vioSessionID]
  -[ARCollaborationData vioDataType]
  -[ARCollaborationData vioData]
  -[ARCollaborationData initWithVIOData:type:sessionID:]
  -[ARCollaborationData prCollaborationData]
  -[ARCollaborationData prPeer]
  -[ARCollaborationData initWithProximityCollaborationData:sessionID:]
  -[ARCollaborationData setPrCollaborationData:]
  -[ARCollaborationData setPrPeer:]


ARSegmentationData : NSObject /usr/lib/libc++.1.dylib <ARResultData>
 @property  double timestamp
 @property  ^{__CVBuffer=} segmentationBuffer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARSegmentationData dealloc]
  -[ARSegmentationData timestamp]
  -[ARSegmentationData segmentationBuffer]
  -[ARSegmentationData initWithTimestamp:segmentationBuffer:]


ARRecordingConfiguration : ARCustomTechniquesConfiguration <ARRecordingTechniqueDelegate>
 @property  unsigned long state
 @property  ARRecordingTechniquePublic *recordingTechnique
 @property  @? finishBlock
 @property  NSURL *fileURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARRecordingConfiguration isSupported]
  +[ARRecordingConfiguration supportsFrameSemantics:]

  // instance methods
  -[ARRecordingConfiguration isEqual:]
  -[ARRecordingConfiguration copyWithZone:]
  -[ARRecordingConfiguration .cxx_destruct]
  -[ARRecordingConfiguration state]
  -[ARRecordingConfiguration fileURL]
  -[ARRecordingConfiguration setState:]
  -[ARRecordingConfiguration initPrivate]
  -[ARRecordingConfiguration videoFormat]
  -[ARRecordingConfiguration setVideoFormat:]
  -[ARRecordingConfiguration startRecording]
  -[ARRecordingConfiguration worldAlignment]
  -[ARRecordingConfiguration parentImageSensorSettings]
  -[ARRecordingConfiguration imageSensorSettings]
  -[ARRecordingConfiguration secondaryTechniques]
  -[ARRecordingConfiguration initWithBaseConfiguration:recordingTechnique:]
  -[ARRecordingConfiguration technique:didFinishWithResult:]
  -[ARRecordingConfiguration abortRecording]
  -[ARRecordingConfiguration initWithBaseConfiguration:fileURL:]
  -[ARRecordingConfiguration recordingTechnique]
  -[ARRecordingConfiguration setFinishBlock:]
  -[ARRecordingConfiguration finishBlock]
  -[ARRecordingConfiguration finishRecordingWithHandler:]
  -[ARRecordingConfiguration ensureTechniqueAndCustomSensorCompatibility]
  -[ARRecordingConfiguration setRecordingTechnique:]


ARObjectScanningConfiguration : ARConfiguration
 @property  BOOL mlModelEnabled
 @property  BOOL deliverRawSceneUnderstandingResults
 @property  BOOL autoFocusEnabled
 @property  unsigned long planeDetection

  // class methods
  +[ARObjectScanningConfiguration new]
  +[ARObjectScanningConfiguration isSupported]
  +[ARObjectScanningConfiguration supportsFrameSemantics:]
  +[ARObjectScanningConfiguration supportedVideoFormats]

  // instance methods
  -[ARObjectScanningConfiguration init]
  -[ARObjectScanningConfiguration isEqual:]
  -[ARObjectScanningConfiguration copyWithZone:]
  -[ARObjectScanningConfiguration setPlaneDetection:]
  -[ARObjectScanningConfiguration planeDetection]
  -[ARObjectScanningConfiguration createTechniquesWithParallelTechniques:serialTechniques:]
  -[ARObjectScanningConfiguration imageSensorSettings]
  -[ARObjectScanningConfiguration setMlModelEnabled:]
  -[ARObjectScanningConfiguration deliverRawSceneUnderstandingResults]
  -[ARObjectScanningConfiguration setDeliverRawSceneUnderstandingResults:]
  -[ARObjectScanningConfiguration isMLModelEnabled]


ARCompositeStats : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long vsyncCount
 @property  double vsyncStart
 @property  double vsyncEnd
 @property  double vsyncTime
 @property  double vsyncTimeActual
 @property  double compositeStart
 @property  double compositeEndCPU
 @property  double compositeTimeCPU
 @property  double compositeEnd
 @property  double compositeTime
 @property  double compositeStartTarget
 @property  double compositeStartTargetTimeBeforeVsyncEnd
 @property  double compositePresent

  // instance methods
  -[ARCompositeStats vsyncTime]
  -[ARCompositeStats vsyncEnd]
  -[ARCompositeStats startComposite]
  -[ARCompositeStats endComposite:]
  -[ARCompositeStats compositeTime]
  -[ARCompositeStats setCompositePresent:]
  -[ARCompositeStats endCompositeCPU]
  -[ARCompositeStats compositeStartTarget]
  -[ARCompositeStats tickComposite:vsyncCounter:]
  -[ARCompositeStats setCompositeStartTarget:]
  -[ARCompositeStats setCompositeStartTargetTimeBeforeVsyncEnd:]
  -[ARCompositeStats vsyncStart]
  -[ARCompositeStats compositeStartTargetTimeBeforeVsyncEnd]
  -[ARCompositeStats vsyncCount]
  -[ARCompositeStats vsyncTimeActual]
  -[ARCompositeStats compositeStart]
  -[ARCompositeStats compositeEndCPU]
  -[ARCompositeStats compositeTimeCPU]
  -[ARCompositeStats compositeEnd]
  -[ARCompositeStats compositePresent]


ARRenderStats : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long vsyncCount
 @property  double vsyncStart
 @property  double vsyncEnd
 @property  double vsyncTime
 @property  double vsyncTimeActual
 @property  double renderStart
 @property  double renderEndCPU
 @property  double renderTimeCPU
 @property  double renderEnd
 @property  double renderTime
 @property  BOOL composited
 @property  double renderEndEstimate

  // instance methods
  -[ARRenderStats renderTime]
  -[ARRenderStats renderComposited]
  -[ARRenderStats isComposited]
  -[ARRenderStats renderStart]
  -[ARRenderStats renderEndCPU]
  -[ARRenderStats vsyncTime]
  -[ARRenderStats vsyncEnd]
  -[ARRenderStats renderEnd]
  -[ARRenderStats vsyncStart]
  -[ARRenderStats tickRender:]
  -[ARRenderStats setRenderEndEstimate:]
  -[ARRenderStats startRender]
  -[ARRenderStats endRender]
  -[ARRenderStats renderEndEstimate]
  -[ARRenderStats renderTimeCPU]
  -[ARRenderStats endRenderCPU]
  -[ARRenderStats vsyncCount]
  -[ARRenderStats vsyncTimeActual]


ARSkeleton : NSObject /usr/lib/libc++.1.dylib
 @property  ARSkeletonDefinition *definition
 @property  unsigned long jointCount

  // instance methods
  -[ARSkeleton .cxx_destruct]
  -[ARSkeleton definition]
  -[ARSkeleton initPrivate]
  -[ARSkeleton jointCount]
  -[ARSkeleton isJointTracked:]


ARSkeleton3D : ARSkeleton <NSSecureCoding>
 @property  ARCoreRESkeletonResult *coreRESkeleton
 @property  r^{?=[4]} jointModelTransforms
 @property  r^{?=[4]} jointLocalTransforms

  // class methods
  +[ARSkeleton3D supportsSecureCoding]

  // instance methods
  -[ARSkeleton3D isEqual:]
  -[ARSkeleton3D encodeWithCoder:]
  -[ARSkeleton3D initWithCoder:]
  -[ARSkeleton3D .cxx_destruct]
  -[ARSkeleton3D definition]
  -[ARSkeleton3D jointCount]
  -[ARSkeleton3D jointModelTransforms]
  -[ARSkeleton3D isJointTracked:]
  -[ARSkeleton3D initWithCoreRESkeletonResult:]
  -[ARSkeleton3D jointLocalTransforms]
  -[ARSkeleton3D coreRESkeleton]
  -[ARSkeleton3D modelTransformForJointName:]
  -[ARSkeleton3D localTransformForJointName:]


ARSkeleton2D : ARSkeleton <NSSecureCoding>
 @property  r^ jointLandmarks

  // class methods
  +[ARSkeleton2D supportsSecureCoding]

  // instance methods
  -[ARSkeleton2D isEqual:]
  -[ARSkeleton2D encodeWithCoder:]
  -[ARSkeleton2D initWithCoder:]
  -[ARSkeleton2D .cxx_destruct]
  -[ARSkeleton2D definition]
  -[ARSkeleton2D jointCount]
  -[ARSkeleton2D isJointTracked:]
  -[ARSkeleton2D jointLandmarks]
  -[ARSkeleton2D initWithDetectedSkeleton:]
  -[ARSkeleton2D landmarkForJointNamed:]


ARRawSceneUnderstandingData : NSObject /usr/lib/libc++.1.dylib <ARResultData>
 @property  ^{CV3DSceneUnderstandingResult=^{CV3DSceneUnderstandingImage}q} resultRef
 @property  double timestamp
 @property  ^v sceneUnderstandingResultRef
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARRawSceneUnderstandingData dealloc]
  -[ARRawSceneUnderstandingData timestamp]
  -[ARRawSceneUnderstandingData initWithTimestamp:resultRef:]
  -[ARRawSceneUnderstandingData sceneUnderstandingResultRef]
  -[ARRawSceneUnderstandingData resultRef]


AREspressoInputBuffer : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL isValid
 @property  ARImageData *imageDataForNeuralNetwork
 @property  ARImageData *originalImageData
 @property  {CGSize=dd} regionOfInterest
 @property  long long rotationOfResultTensor

  // instance methods
  -[AREspressoInputBuffer isValid]
  -[AREspressoInputBuffer .cxx_destruct]
  -[AREspressoInputBuffer regionOfInterest]
  -[AREspressoInputBuffer setRegionOfInterest:]
  -[AREspressoInputBuffer originalImageData]
  -[AREspressoInputBuffer setIsValid:]
  -[AREspressoInputBuffer setImageDataForNeuralNetwork:]
  -[AREspressoInputBuffer imageDataForNeuralNetwork]
  -[AREspressoInputBuffer setOriginalImageData:]
  -[AREspressoInputBuffer rotationOfResultTensor]
  -[AREspressoInputBuffer setRotationOfResultTensor:]


ARMLImageProcessingTechnique : ARImageBasedTechnique <ARTechniqueBusyState>
 @property  BOOL prepComplete
 @property  NSString *networkFilePath
 @property  NSArray *inputTensorNames
 @property  NSArray *outputTensorNames
 @property  {CGSize=dd} networkInputScaleBeforeRotation
 @property  BOOL failedToLoadNetwork
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isBusy

  // class methods
  +[ARMLImageProcessingTechnique isSupported]

  // instance methods
  -[ARMLImageProcessingTechnique dealloc]
  -[ARMLImageProcessingTechnique .cxx_destruct]
  -[ARMLImageProcessingTechnique .cxx_construct]
  -[ARMLImageProcessingTechnique isBusy]
  -[ARMLImageProcessingTechnique prepare]
  -[ARMLImageProcessingTechnique espressoPlan]
  -[ARMLImageProcessingTechnique espressoNetwork]
  -[ARMLImageProcessingTechnique processData:]
  -[ARMLImageProcessingTechnique initWithDispatchQueue:inputTensorNames:outputTensorNames:networkInputScaleBeforeRotation:networkFilePath:]
  -[ARMLImageProcessingTechnique _startLoadingMLModelSignpost]
  -[ARMLImageProcessingTechnique _endLoadingMLModelSignpost]
  -[ARMLImageProcessingTechnique _startMLProcessingSignpostWithTimestamp:]
  -[ARMLImageProcessingTechnique _endMLProcessingSignpostWithTimestamp:]
  -[ARMLImageProcessingTechnique _startMLRunNetworkSignpostWithTimestamp:]
  -[ARMLImageProcessingTechnique _endMLRunNetworkSignpostWithTimestamp:]
  -[ARMLImageProcessingTechnique _startMLCreateResultSignpostWithTimestamp:orientation:outputSize:]
  -[ARMLImageProcessingTechnique _endMLCreateResultSignpostWithTimestamp:]
  -[ARMLImageProcessingTechnique changeEspressoConfig:]
  -[ARMLImageProcessingTechnique requiredTimeInterval]
  -[ARMLImageProcessingTechnique networkInputParams]
  -[ARMLImageProcessingTechnique defaultEngine]
  -[ARMLImageProcessingTechnique createResultDataFromTensors:numberOfOutputTensors:imageDataForNeuralNetwork:inputImageData:rotationNeeded:regionOfInterest:]
  -[ARMLImageProcessingTechnique resultDataClasses]
  -[ARMLImageProcessingTechnique isLoadedModelVersionCorrect:]
  -[ARMLImageProcessingTechnique espressoOutputTensorsData]
  -[ARMLImageProcessingTechnique requiredSensorDataTypes]
  -[ARMLImageProcessingTechnique processEspressoTensor:]
  -[ARMLImageProcessingTechnique captureBehavior]
  -[ARMLImageProcessingTechnique _getDeviceOrientation]
  -[ARMLImageProcessingTechnique lockOrientation:]
  -[ARMLImageProcessingTechnique failedToLoadNetwork]
  -[ARMLImageProcessingTechnique networkModesForOrientation:]
  -[ARMLImageProcessingTechnique preProcessNetworkInputImage:]
  -[ARMLImageProcessingTechnique inputTensorNames]
  -[ARMLImageProcessingTechnique espressoOutputTensorsSize]
  -[ARMLImageProcessingTechnique runNeuralNetworkWithImageData:originalImageData:regionOfInterest:rotationOfResultTensor:]
  -[ARMLImageProcessingTechnique numberOfInputChannelsToExpectInNetwork]
  -[ARMLImageProcessingTechnique networkModeDidChange:toMode:]
  -[ARMLImageProcessingTechnique defaultEngineName]
  -[ARMLImageProcessingTechnique outputTensorNames]
  -[ARMLImageProcessingTechnique loadMLWithPath:networkMode:]
  -[ARMLImageProcessingTechnique setPrepComplete:]
  -[ARMLImageProcessingTechnique prepComplete]
  -[ARMLImageProcessingTechnique _asynchronousProcessDownSampledImage:]
  -[ARMLImageProcessingTechnique _asynchronousProcessEspressoTensor:]
  -[ARMLImageProcessingTechnique _resampleImage:rotationOfResultTensor:networkInputSize:]
  -[ARMLImageProcessingTechnique _runNeuralNetworkAndPushResult:originalImageData:regionOfInterest:rotationOfResultTensor:]
  -[ARMLImageProcessingTechnique _getAREspressoInputBuffer]
  -[ARMLImageProcessingTechnique processImageDataThroughNeuralNetwork:originalImageData:regionOfInterest:rotationOfResultTensor:]
  -[ARMLImageProcessingTechnique processingSemaphore]
  -[ARMLImageProcessingTechnique orientationForInitializingEspresso]
  -[ARMLImageProcessingTechnique networkFilePath]
  -[ARMLImageProcessingTechnique setNetworkFilePath:]
  -[ARMLImageProcessingTechnique networkInputScaleBeforeRotation]


ARPersonDetectionResult : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingBox

  // class methods
  +[ARPersonDetectionResult supportsSecureCoding]

  // instance methods
  -[ARPersonDetectionResult copyWithZone:]
  -[ARPersonDetectionResult encodeWithCoder:]
  -[ARPersonDetectionResult initWithCoder:]
  -[ARPersonDetectionResult boundingBox]
  -[ARPersonDetectionResult setBoundingBox:]
  -[ARPersonDetectionResult initWithBoundingBox:]
  -[ARPersonDetectionResult rectScaledToSizeOfPixelBuffer:]


ARDepthBasedPersonDetectionResult : ARPersonDetectionResult
 @property  double sumDepthValues
 @property  long long numberDepthPixels

  // instance methods
  -[ARDepthBasedPersonDetectionResult copyWithZone:]
  -[ARDepthBasedPersonDetectionResult encodeWithCoder:]
  -[ARDepthBasedPersonDetectionResult initWithCoder:]
  -[ARDepthBasedPersonDetectionResult initWithBoundingBox:]
  -[ARDepthBasedPersonDetectionResult sumDepthValues]
  -[ARDepthBasedPersonDetectionResult setSumDepthValues:]
  -[ARDepthBasedPersonDetectionResult numberDepthPixels]
  -[ARDepthBasedPersonDetectionResult setNumberDepthPixels:]


ARPersonDetectionData : NSObject /usr/lib/libc++.1.dylib <ARResultData>
 @property  double timestamp
 @property  NSArray *detectedObjects
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARPersonDetectionData .cxx_destruct]
  -[ARPersonDetectionData timestamp]
  -[ARPersonDetectionData setTimestamp:]
  -[ARPersonDetectionData setDetectedObjects:]
  -[ARPersonDetectionData detectedObjects]
  -[ARPersonDetectionData transformToCVPixelBuffer:depthBuffer:]


ARCoachingPillButton : ARCoachingRoundedButton
  // instance methods
  -[ARCoachingPillButton layoutSubviews]


ARReplayConfiguration : ARCustomTechniquesConfiguration <ARReplaySensorDelegate>
 @property  NSURL *fileURL
 @property  <ARReplayConfigurationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARReplayConfiguration supportsFrameSemantics:]

  // instance methods
  -[ARReplayConfiguration isEqual:]
  -[ARReplayConfiguration copyWithZone:]
  -[ARReplayConfiguration delegate]
  -[ARReplayConfiguration setDelegate:]
  -[ARReplayConfiguration .cxx_destruct]
  -[ARReplayConfiguration pause]
  -[ARReplayConfiguration fileURL]
  -[ARReplayConfiguration play]
  -[ARReplayConfiguration initPrivate]
  -[ARReplayConfiguration worldAlignment]
  -[ARReplayConfiguration parentImageSensorSettings]
  -[ARReplayConfiguration imageSensorSettings]
  -[ARReplayConfiguration secondaryTechniques]
  -[ARReplayConfiguration imageSensorSettingsForSuperWide]
  -[ARReplayConfiguration initWithBaseConfiguration:replaySensor:replayingResultDataClasses:]
  -[ARReplayConfiguration replaySensorDidFinishReplayingData]
  -[ARReplayConfiguration initWithBaseConfiguration:fileURL:outError:manualMode:synchronousMode:]
  -[ARReplayConfiguration initWithBaseConfiguration:fileURL:outError:]


ARMLImageDownScalingResult : NSObject /usr/lib/libc++.1.dylib
 @property  ^{__CVBuffer=} pixelBuffer
 @property  {CGSize=dd} imageResolution
 @property  {CGSize=dd} regionOfInterest
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRegion

  // instance methods
  -[ARMLImageDownScalingResult dealloc]
  -[ARMLImageDownScalingResult pixelBuffer]
  -[ARMLImageDownScalingResult regionOfInterest]
  -[ARMLImageDownScalingResult setPixelBuffer:]
  -[ARMLImageDownScalingResult imageResolution]
  -[ARMLImageDownScalingResult initWithPixelBuffer:regionOfInterest:cropRegion:]
  -[ARMLImageDownScalingResult cropRegion]


ARMLImageDownScalingResultData : NSObject /usr/lib/libc++.1.dylib <ARResultData>
 @property  double timestamp
 @property  long long rotationOfResultTensor
 @property  NSArray *downScalingResults
 @property  ARImageData *originalImageData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARMLImageDownScalingResultData .cxx_destruct]
  -[ARMLImageDownScalingResultData timestamp]
  -[ARMLImageDownScalingResultData originalImageData]
  -[ARMLImageDownScalingResultData initWithResultDataArray:timestamp:rotationOfResultTensor:originalImageData:]
  -[ARMLImageDownScalingResultData rotationOfResultTensor]
  -[ARMLImageDownScalingResultData downScalingResults]


ARImageNoiseTexture : NSObject /usr/lib/libc++.1.dylib
 @property  <MTLTexture> *texture

  // class methods
  +[ARImageNoiseTexture sharedInstanceForCameraPosition:longEdgeImageResolution:]

  // instance methods
  -[ARImageNoiseTexture .cxx_destruct]
  -[ARImageNoiseTexture texture]
  -[ARImageNoiseTexture snrToNoiseIntensity:]
  -[ARImageNoiseTexture initWithNoiseModel:]


ARCustomTechniquesConfiguration : ARConfiguration
 @property  NSArray *techniques
 @property  ARWorldMap *initialWorldMap
 @property  ARConfiguration *templateConfiguration

  // class methods
  +[ARCustomTechniquesConfiguration new]
  +[ARCustomTechniquesConfiguration supportedVideoFormats]

  // instance methods
  -[ARCustomTechniquesConfiguration init]
  -[ARCustomTechniquesConfiguration isEqual:]
  -[ARCustomTechniquesConfiguration copyWithZone:]
  -[ARCustomTechniquesConfiguration .cxx_destruct]
  -[ARCustomTechniquesConfiguration initPrivate]
  -[ARCustomTechniquesConfiguration setVideoFormat:]
  -[ARCustomTechniquesConfiguration setCameraPosition:]
  -[ARCustomTechniquesConfiguration initialWorldMap]
  -[ARCustomTechniquesConfiguration worldAlignment]
  -[ARCustomTechniquesConfiguration imageSensorSettings]
  -[ARCustomTechniquesConfiguration imageSensorSettingsForSuperWide]
  -[ARCustomTechniquesConfiguration templateConfiguration]
  -[ARCustomTechniquesConfiguration techniques]
  -[ARCustomTechniquesConfiguration setCustomSensors:]
  -[ARCustomTechniquesConfiguration isLightEstimationEnabled]
  -[ARCustomTechniquesConfiguration setProvidesAudioData:]
  -[ARCustomTechniquesConfiguration setTechniques:]
  -[ARCustomTechniquesConfiguration setTemplateConfiguration:]
  -[ARCustomTechniquesConfiguration ensureTechniqueAndCustomSensorCompatibility]
  -[ARCustomTechniquesConfiguration configureRecordingTechnique]
  -[ARCustomTechniquesConfiguration _updateCaptureSettings]


ARCoreRESkeletonResult : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSUUID *identifier
 @property  unsigned long jointTransformCount
 @property  r^{?=[4]} jointModelTransforms
 @property  r^{?=[4]} jointLocalTransforms
 @property  r^{?={?=}} localJointTransformsSRT
 @property  AR3DSkeletonDetectionResult *liftedSkeletonData
 @property  {?=[4]} visionTransform
 @property  double estimatedScaleFactor

  // class methods
  +[ARCoreRESkeletonResult initialize]
  +[ARCoreRESkeletonResult supportsSecureCoding]
  +[ARCoreRESkeletonResult jointNames]
  +[ARCoreRESkeletonResult jointParentIndices]

  // instance methods
  -[ARCoreRESkeletonResult isEqual:]
  -[ARCoreRESkeletonResult copyWithZone:]
  -[ARCoreRESkeletonResult encodeWithCoder:]
  -[ARCoreRESkeletonResult initWithCoder:]
  -[ARCoreRESkeletonResult .cxx_destruct]
  -[ARCoreRESkeletonResult identifier]
  -[ARCoreRESkeletonResult .cxx_construct]
  -[ARCoreRESkeletonResult setEstimatedScaleFactor:]
  -[ARCoreRESkeletonResult setVisionTransform:]
  -[ARCoreRESkeletonResult initWithModelJointTransforms:localJointTransformsSRT:numberOfTransforms:liftedSkeletonData:identifier:]
  -[ARCoreRESkeletonResult liftedSkeletonData]
  -[ARCoreRESkeletonResult jointTransformCount]
  -[ARCoreRESkeletonResult jointModelTransforms]
  -[ARCoreRESkeletonResult isJointTracked:]
  -[ARCoreRESkeletonResult visionTransform]
  -[ARCoreRESkeletonResult estimatedScaleFactor]
  -[ARCoreRESkeletonResult jointLocalTransforms]
  -[ARCoreRESkeletonResult localJointTransformsSRT]


ARCoreRESkeletonResults : NSObject /usr/lib/libc++.1.dylib <ARResultData, NSCopying>
 @property  NSArray *retargetedSkeletons
 @property  double timestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARCoreRESkeletonResults isEqual:]
  -[ARCoreRESkeletonResults copyWithZone:]
  -[ARCoreRESkeletonResults .cxx_destruct]
  -[ARCoreRESkeletonResults timestamp]
  -[ARCoreRESkeletonResults setTimestamp:]
  -[ARCoreRESkeletonResults setRetargetedSkeletons:]
  -[ARCoreRESkeletonResults retargetedSkeletons]
  -[ARCoreRESkeletonResults anchorsForCameraWithTransform:referenceOriginTransform:existingAnchors:anchorsToRemove:]


gan_modelInput : NSObject /usr/lib/libc++.1.dylib <MLFeatureProvider>
 @property  MLMultiArray *input
 @property  NSSet *featureNames

  // instance methods
  -[gan_modelInput .cxx_destruct]
  -[gan_modelInput input]
  -[gan_modelInput featureValueForName:]
  -[gan_modelInput featureNames]
  -[gan_modelInput setInput:]
  -[gan_modelInput initWithInput:]


gan_modelOutput : NSObject /usr/lib/libc++.1.dylib <MLFeatureProvider>
 @property  MLMultiArray *output
 @property  NSSet *featureNames

  // instance methods
  -[gan_modelOutput .cxx_destruct]
  -[gan_modelOutput featureValueForName:]
  -[gan_modelOutput featureNames]
  -[gan_modelOutput output]
  -[gan_modelOutput setOutput:]
  -[gan_modelOutput initWithOutput:]


gan_model : NSObject /usr/lib/libc++.1.dylib
 @property  MLModel *model

  // class methods
  +[gan_model urlOfModelInThisBundle]

  // instance methods
  -[gan_model init]
  -[gan_model .cxx_destruct]
  -[gan_model initWithContentsOfURL:error:]
  -[gan_model model]
  -[gan_model predictionFromFeatures:error:]
  -[gan_model predictionFromFeatures:options:error:]
  -[gan_model initWithContentsOfURL:configuration:error:]
  -[gan_model initWithConfiguration:error:]
  -[gan_model predictionsFromInputs:options:error:]
  -[gan_model predictionFromInput:error:]


SCNTechnique(SCNTechniqueCompositorAdditions)
	// instance methods
	-[SCNTechnique(SCNTechniqueCompositorAdditions) passForName:]

NSUUID(ARAdditions)
	// class methods
	+[NSUUID(ARAdditions) ar_UUIDWithCVPixelBuffer:]
	+[NSUUID(ARAdditions) ar_UUIDWithData:]
	+[NSUUID(ARAdditions) ar_UUIDWithIntegerValue:]
	+[NSUUID(ARAdditions) ar_UUIDWithCFUUIDRef:]
	+[NSUUID(ARAdditions) ar_zeroUUID]

	// instance methods
	-[NSUUID(ARAdditions) ar_CFUUIDRef]
	-[NSUUID(ARAdditions) ar_integerValue]

NSArray(ARAdditions)
	// instance methods
	-[NSArray(ARAdditions) ar_firstObjectPassingTest:]

NSUserDefaults(AppleGlobalDomain)
	// class methods
	+[NSUserDefaults(AppleGlobalDomain) appleGlobalDomainARKItDefaults]
	+[NSUserDefaults(AppleGlobalDomain) appleGlobalDomain]
	+[NSUserDefaults(AppleGlobalDomain) appleGlobalDomainARKitKeys]

UIImage(WithMBExtensions)
	// class methods
	+[UIImage(WithMBExtensions) imageScaled:newSize:]

NSCoder(ARKit)
	// instance methods
	-[NSCoder(ARKit) decodeMatrix4x4ForKey:]
	-[NSCoder(ARKit) decodeVector3ForKey:]
	-[NSCoder(ARKit) encodeMatrix4x4:forKey:]
	-[NSCoder(ARKit) encodeVector3:forKey:]
	-[NSCoder(ARKit) decodeMatrix3x3ForKey:]
	-[NSCoder(ARKit) encodeMatrix3x3:forKey:]
	-[NSCoder(ARKit) encodeCMRotationMatrix:forKey:]
	-[NSCoder(ARKit) decodeCMRotationMatrixForKey:]
	-[NSCoder(ARKit) encodeVector2:forKey:]
	-[NSCoder(ARKit) decodeVector2ForKey:]
	-[NSCoder(ARKit) encodeMatrix4x3:forKey:]
	-[NSCoder(ARKit) decodeMatrix4x3ForKey:]

01 00 0940 /System/Library/PrivateFrameworks/ARDisplayDevice.framework/ARDisplayDevice: ARDisplayDeviceInterface 
01 00 0940 /System/Library/PrivateFrameworks/ARDisplayDevice.framework/ARDisplayDevice: ARDisplayDeviceUserDefaults 
01 00 0940 /System/Library/PrivateFrameworks/ARDisplayDevice.framework/ARDisplayDevice: ARDisplayExtensionService 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReader 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderOutputMetadataAdaptor 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderTrackOutput 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriter 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInput 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInputMetadataAdaptor 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInputPixelBufferAdaptor 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureAudioDataOutput 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureConnection 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDataOutputSynchronizer 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDepthDataOutput 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDevice 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceDiscoverySession 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureMetadataOutput 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureMultiCamSession 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSynchronizedDepthData 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSynchronizedMetadataObjectData 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSynchronizedSampleBufferData 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoDataOutput 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVisionDataOutput 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVDepthData 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataTrackedFacesObject 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableMetadataItem 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVTimedMetadataGroup 
01 00 2000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0a00 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSAccelerometer 
01 00 1e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplay 
01 00 1e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMetalLayer 
01 00 1e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 1900 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 1900 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 1900 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIVector 
01 00 1900 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIWarpKernel 
01 00 1c00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 1c00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 1b00 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMDeviceMotion 
01 00 1b00 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMMotionManager 
01 00 1400 /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI: CUICatalog 
01 00 0400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: CVACMAccelerometerData 
01 00 0400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: CVACMGyroData 
01 00 1100 /System/Library/Frameworks/CoreML.framework/CoreML: MLArrayBatchProvider 
01 00 1100 /System/Library/Frameworks/CoreML.framework/CoreML: MLFeatureValue 
01 00 1100 /System/Library/Frameworks/CoreML.framework/CoreML: MLModel 
01 00 1100 /System/Library/Frameworks/CoreML.framework/CoreML: MLPredictionOptions 
01 00 0400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: MOVReaderInterface 
01 00 0500 /System/Library/PrivateFrameworks/MOVStreamIO.framework/MOVStreamIO: MOVStreamIOUtility 
01 00 0400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: MOVWriterInterface 
01 00 0d00 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageConvolution 
01 00 0d00 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageGuidedFilter 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLCommandQueueDescriptor 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLDepthStencilDescriptor 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLFunctionConstantValues 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLRasterizationRateLayerDescriptor 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLRasterizationRateMapDescriptor 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPassDescriptor 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPipelineDescriptor 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLSharedEventListener 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLVertexDescriptor 
01 00 0400 /System/Library/PrivateFrameworks/AppleCV3DMOVKit.framework/AppleCV3DMOVKit: MetadataWrapper 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSCondition 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 2200 /System/Library/Frameworks/Photos.framework/Photos: PHAssetChangeRequest 
01 00 2200 /System/Library/Frameworks/Photos.framework/Photos: PHPhotoLibrary 
01 00 0b00 /System/Library/PrivateFrameworks/Proximity.framework/Proximity: PRCollaborationData 
01 00 0b00 /System/Library/PrivateFrameworks/Proximity.framework/Proximity: PRPeer 
01 00 0b00 /System/Library/PrivateFrameworks/Proximity.framework/Proximity: PRRangingSession 
01 00 1300 /System/Library/Frameworks/ReplayKit.framework/ReplayKit: RPScreenRecorder 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNBox 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNCamera 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNGeometry 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNGeometryElement 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNGeometrySource 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNLight 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNMaterial 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNMaterialProperty 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNNode 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNRendererEvents 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNRendererViewPoint 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNScene 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNTechnique 
01 00 2400 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNView 
01 00 2500 /System/Library/Frameworks/SpriteKit.framework/SpriteKit: SKNode 
01 00 2500 /System/Library/Frameworks/SpriteKit.framework/SpriteKit: SKView 
01 00 0800 /System/Library/PrivateFrameworks/StarBoardFoundation.framework/StarBoardFoundation: SRHMEConfig 
01 00 0800 /System/Library/PrivateFrameworks/StarBoardFoundation.framework/StarBoardFoundation: SRSceneSettings 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColorEffect 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScene 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UISceneSession 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffect 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 1d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowScene 
01 00 0700 /System/Library/PrivateFrameworks/AppleNeuralEngine.framework/AppleNeuralEngine: _ANEDeviceInfo 
01 00 1c00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: _CLVIOEstimation 
