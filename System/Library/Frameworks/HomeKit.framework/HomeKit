|| __DATA.__common _kInvalidHMPresenceEventActivationGranularity
|| __DATA.__common _kInvalidHMPresenceEventType
|| __DATA.__common _kInvalidHMPresenceEventUserType
|| __DATA.__data _HMHomeManagerGenerationCounterNotification
|| __DATA.__data _HMHomeManagerPreferencesChangedNotification
|| __DATA.__data _HMHomeManagerSpeakersConfiguredChangedNotification
|| __DATA.__data _HMHomeManagerTelevisionAccessoryAddedNotification
|| __DATA.__data _HMUserCloudShareManagerWakePrefix
|| __DATA.__data _HMUserCloudShareMultiUserStatusChangedNotification
|| __DATA.__data _kAddMediaSystemRequest
|| __DATA.__data _kMediaSystemBuilderSessionIDKey
|| __DATA.__data _kMediaSystemCodingKey
|| __DATA.__data _kMediaSystemCompatibleCodingKey
|| __DATA.__data _kMediaSystemComponentRoleCodingKey
|| __DATA.__data _kMediaSystemComponentUUIDCodingKey
|| __DATA.__data _kMediaSystemComponentsCodingKey
|| __DATA.__data _kMediaSystemConfiguredNameCodingKey
|| __DATA.__data _kMediaSystemHandlerCodingKey
|| __DATA.__data _kMediaSystemNameCodingKey
|| __DATA.__data _kMediaSystemRemovedNotification
|| __DATA.__data _kMediaSystemRoleTypeCodingKey
|| __DATA.__data _kMediaSystemRootSettingsCodingKey
|| __DATA.__data _kMediaSystemRootSettingsUpdatedNotification
|| __DATA.__data _kMediaSystemSetAppDataRequestKey
|| __DATA.__data _kMediaSystemUUIDCodingKey
|| __DATA.__data _kMediaSystemUpdatedNotification
|| __DATA.__data _kMediaSystemsCodingKey
|| __DATA.__data _kRemoveMediaSystemRequest
|| __DATA.__data _kUpdateMediaSystemRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryAdvertisementInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryAllowedHost
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryBrowser
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryCategory
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryCollectionSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryCollectionSettingItem
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryDataSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryInvitation
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryNetworkAccessViolation
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryNetworkProtectionGroup
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryNumberSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryOwnershipToken
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryProfile
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySelectionSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySelectionSettingItem
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettingConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettingGroup
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettings
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySetupCompletedInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySetupPayload
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryStringSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMAddAccessoryRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMAudioControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMBulletinBoardNotification
|| __DATA.__objc_data _OBJC_CLASS_$_HMBulletinBoardNotificationServiceGroup
|| __DATA.__objc_data _OBJC_CLASS_$_HMBulletinObjectTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HMCalendarEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraAudioCodec
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraAudioControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraBulletinBoardSmartNotification
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClip
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipAssetContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipDecryptionManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipDownloadAssetDataTask
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipEncryptedDataContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipEncryptionContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipEncryptionManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipFetchVideoAssetContextOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipPosterFrame
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipPosterFrameDownloadOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipSignificantEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipVideoAssetContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipVideoHLSPlaylistGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipVideoSegment
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraProfile
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraSettingsControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraSnapshotControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraSource
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraStream
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraStreamAudioPreferences
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraStreamControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraStreamPreferences
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraStreamVideoPreferences
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraUserSettings
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraVideoResolution
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraView
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristic
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicBatchRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicReadRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicThresholdRangeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicWriteRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMCollectionSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMCollectionSettingItem
|| __DATA.__objc_data _OBJC_CLASS_$_HMDataSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMDemoCameraClip
|| __DATA.__objc_data _OBJC_CLASS_$_HMDevice
|| __DATA.__objc_data _OBJC_CLASS_$_HMDeviceSetupOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDeviceSetupOperationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDeviceSetupRequestMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HMDeviceSetupResponseMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HMDeviceSetupSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDurationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMHTMLDocument
|| __DATA.__objc_data _OBJC_CLASS_$_HMHomeCloudShareResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMHomeInvitationData
|| __DATA.__objc_data _OBJC_CLASS_$_HMIncomingHomeInvitationData
|| __DATA.__objc_data _OBJC_CLASS_$_HMLocalization
|| __DATA.__objc_data _OBJC_CLASS_$_HMLocationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaProfile
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaSystemBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaSystemComponent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaSystemRole
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableAssistantAccessControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableCalendarEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableCharacteristicEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableCharacteristicThresholdRangeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableDurationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableHomeManagerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableLocationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableMediaContentProfileAccessControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableMediaPlaybackAction
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableMediaSystemComponent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutablePresenceEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableSignificantTimeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMNetworkConfigurationProfile
|| __DATA.__objc_data _OBJC_CLASS_$_HMNetworkConfigurationWiFiOptions
|| __DATA.__objc_data _OBJC_CLASS_$_HMNetworkRouterProfile
|| __DATA.__objc_data _OBJC_CLASS_$_HMNumberRange
|| __DATA.__objc_data _OBJC_CLASS_$_HMNumberSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMOutgoingHomeInvitationData
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBAccessoryReference
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBActionContainer
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBActionSet
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBCharacteristicReference
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBCharacteristicWriteAction
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBEncodeOption
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBHomeReference
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBMediaPlaybackAction
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBServiceReference
|| __DATA.__objc_data _OBJC_CLASS_$_HMPresenceEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMPresenceEventActivation
|| __DATA.__objc_data _OBJC_CLASS_$_HMRemoteLoginAnisetteDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_HMRemoteLoginHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMSelectionSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMSelectionSettingItem
|| __DATA.__objc_data _OBJC_CLASS_$_HMService
|| __DATA.__objc_data _OBJC_CLASS_$_HMSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMSettingConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_HMSettingValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMSetupAccessoryBrowsingRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMSetupAccessoryDescription
|| __DATA.__objc_data _OBJC_CLASS_$_HMSetupAccessoryPayload
|| __DATA.__objc_data _OBJC_CLASS_$_HMSetupViewController
|| __DATA.__objc_data _OBJC_CLASS_$_HMSignificantTimeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMSoftwareUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_HMSoftwareUpdateController
|| __DATA.__objc_data _OBJC_CLASS_$_HMSoftwareUpdateDocumentation
|| __DATA.__objc_data _OBJC_CLASS_$_HMSoftwareUpdateDocumentationMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMSoftwareUpdateManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMStringSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMSymptom
|| __DATA.__objc_data _OBJC_CLASS_$_HMSymptomFixSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMSymptomsHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMTelevisionProfile
|| __DATA.__objc_data _OBJC_CLASS_$_HMTimeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMUserCloudShareClientInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMUserCloudShareInvitation
|| __DATA.__objc_data _OBJC_CLASS_$_HMUserCloudShareWithOwnerOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMUserInviteInformation
|| __DATA.__objc_data _OBJC_CLASS_$__HMAccessorySetting
|| __DATA.__objc_data _OBJC_CLASS_$__HMCameraProfile
|| __DATA.__objc_data _OBJC_CLASS_$__HMCameraStream
|| __DATA.__objc_data _OBJC_CLASS_$__HMCameraStreamControl
|| __DATA.__objc_data _OBJC_CLASS_$__HMCameraUserSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryAdvertisementInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryAllowedHost
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryBrowser
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryCollectionSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryCollectionSettingItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryDataSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryInvitation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryNetworkAccessViolation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryNetworkProtectionGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryNumberSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryOwnershipToken
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySelectionSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySelectionSettingItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettingConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettingGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySetupCompletedInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySetupPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryStringSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAddAccessoryRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAudioControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMBulletinBoardNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_HMBulletinBoardNotificationServiceGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_HMBulletinObjectTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCalendarEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraAudioCodec
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraAudioControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraBulletinBoardSmartNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClip
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipAssetContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipDecryptionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipDownloadAssetDataTask
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipEncryptedDataContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipEncryptionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipEncryptionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipFetchVideoAssetContextOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipPosterFrame
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipPosterFrameDownloadOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipSignificantEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipVideoAssetContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipVideoHLSPlaylistGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipVideoSegment
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraSettingsControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraSnapshotControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraStream
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraStreamAudioPreferences
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraStreamControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraStreamPreferences
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraStreamVideoPreferences
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraUserSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraVideoResolution
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraView
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristic
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicBatchRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicReadRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicThresholdRangeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicWriteRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCollectionSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCollectionSettingItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDataSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDemoCameraClip
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDeviceSetupOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDeviceSetupOperationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDeviceSetupRequestMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDeviceSetupResponseMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDeviceSetupSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDurationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMHTMLDocument
|| __DATA.__objc_data _OBJC_METACLASS_$_HMHomeCloudShareResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMHomeInvitationData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMIncomingHomeInvitationData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMLocalization
|| __DATA.__objc_data _OBJC_METACLASS_$_HMLocationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaSystemBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaSystemComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaSystemRole
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableAssistantAccessControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableCalendarEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableCharacteristicEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableCharacteristicThresholdRangeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableDurationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableHomeManagerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableLocationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableMediaContentProfileAccessControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableMediaPlaybackAction
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableMediaSystemComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutablePresenceEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableSignificantTimeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMNetworkConfigurationProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMNetworkConfigurationWiFiOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_HMNetworkRouterProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMNumberRange
|| __DATA.__objc_data _OBJC_METACLASS_$_HMNumberSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMOutgoingHomeInvitationData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBAccessoryReference
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBActionContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBActionSet
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBCharacteristicReference
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBCharacteristicWriteAction
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBEncodeOption
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBHomeReference
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBMediaPlaybackAction
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBServiceReference
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPresenceEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPresenceEventActivation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMRemoteLoginAnisetteDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_HMRemoteLoginHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSelectionSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSelectionSettingItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HMService
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSettingConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSettingValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSetupAccessoryBrowsingRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSetupAccessoryDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSetupAccessoryPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSetupViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSignificantTimeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSoftwareUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSoftwareUpdateController
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSoftwareUpdateDocumentation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSoftwareUpdateDocumentationMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSoftwareUpdateManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMStringSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSymptom
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSymptomFixSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSymptomsHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMTelevisionProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMTimeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUserCloudShareClientInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUserCloudShareInvitation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUserCloudShareWithOwnerOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUserInviteInformation
|| __DATA.__objc_data _OBJC_METACLASS_$__HMAccessorySetting
|| __DATA.__objc_data _OBJC_METACLASS_$__HMCameraProfile
|| __DATA.__objc_data _OBJC_METACLASS_$__HMCameraStream
|| __DATA.__objc_data _OBJC_METACLASS_$__HMCameraStreamControl
|| __DATA.__objc_data _OBJC_METACLASS_$__HMCameraUserSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMAccessorySettingConstraint._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBAccessoryReference._homeReference
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBAccessoryReference._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionContainer._characteristicWriteAction
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionContainer._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionContainer._mediaPlaybackAction
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionContainer._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionSet._actionSetType
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionSet._actions
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionSet._homeUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionSet._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionSet._uuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBCharacteristicReference._serviceReference
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBCharacteristicReference._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBCharacteristicWriteAction._actionUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBCharacteristicWriteAction._characteristicReference
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBCharacteristicWriteAction._targetValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBEncodeOption._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBEncodeOption._isSPI
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBEncodeOption._isXPC
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBHomeReference._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMediaPlaybackAction._actionUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMediaPlaybackAction._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMediaPlaybackAction._mediaPlaybackState
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMediaPlaybackAction._mediaProfiles
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMediaPlaybackAction._playbackArchive
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMediaPlaybackAction._volume
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._hapCategories
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._hapCharacteristics
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._hapServices
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._version
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataCategory._desc
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataCategory._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataCategory._number
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataCategory._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataCharacteristic._desc
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataCharacteristic._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataService._desc
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataService._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBServiceReference._accessoryReference
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBServiceReference._uniqueIdentifier
|| __DATA_CONST.__const _HMAccessControlUserCodingKey
|| __DATA_CONST.__const _HMAccessoryAddControlTargetsMessageKey
|| __DATA_CONST.__const _HMAccessoryAllowedHostAddressesCodingKey
|| __DATA_CONST.__const _HMAccessoryAllowedHostNameCodingKey
|| __DATA_CONST.__const _HMAccessoryAllowedHostPurposeCodingKey
|| __DATA_CONST.__const _HMAccessoryAllowedHostsCodingKey
|| __DATA_CONST.__const _HMAccessoryAssociationOptionsCodingKey
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAirConditioner
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAirDehumidifier
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAirHeater
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAirHumidifier
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAirPort
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAirPurifier
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAppleTV
|| __DATA_CONST.__const _HMAccessoryCategoryTypeBridge
|| __DATA_CONST.__const _HMAccessoryCategoryTypeDoor
|| __DATA_CONST.__const _HMAccessoryCategoryTypeDoorLock
|| __DATA_CONST.__const _HMAccessoryCategoryTypeFan
|| __DATA_CONST.__const _HMAccessoryCategoryTypeFaucet
|| __DATA_CONST.__const _HMAccessoryCategoryTypeGarageDoorOpener
|| __DATA_CONST.__const _HMAccessoryCategoryTypeHomePod
|| __DATA_CONST.__const _HMAccessoryCategoryTypeIPCamera
|| __DATA_CONST.__const _HMAccessoryCategoryTypeLightbulb
|| __DATA_CONST.__const _HMAccessoryCategoryTypeOther
|| __DATA_CONST.__const _HMAccessoryCategoryTypeOutlet
|| __DATA_CONST.__const _HMAccessoryCategoryTypeProgrammableSwitch
|| __DATA_CONST.__const _HMAccessoryCategoryTypeRangeExtender
|| __DATA_CONST.__const _HMAccessoryCategoryTypeSecuritySystem
|| __DATA_CONST.__const _HMAccessoryCategoryTypeSensor
|| __DATA_CONST.__const _HMAccessoryCategoryTypeShowerHead
|| __DATA_CONST.__const _HMAccessoryCategoryTypeSpeaker
|| __DATA_CONST.__const _HMAccessoryCategoryTypeSprinkler
|| __DATA_CONST.__const _HMAccessoryCategoryTypeSwitch
|| __DATA_CONST.__const _HMAccessoryCategoryTypeTargetController
|| __DATA_CONST.__const _HMAccessoryCategoryTypeTelevision
|| __DATA_CONST.__const _HMAccessoryCategoryTypeTelevisionDeprecated
|| __DATA_CONST.__const _HMAccessoryCategoryTypeThermostat
|| __DATA_CONST.__const _HMAccessoryCategoryTypeVideoDoorbell
|| __DATA_CONST.__const _HMAccessoryCategoryTypeWiFiRouter
|| __DATA_CONST.__const _HMAccessoryCategoryTypeWindow
|| __DATA_CONST.__const _HMAccessoryCategoryTypeWindowCovering
|| __DATA_CONST.__const _HMAccessoryCertificationStatusCodingKey
|| __DATA_CONST.__const _HMAccessoryConfigureControlTargetsMessage
|| __DATA_CONST.__const _HMAccessoryConfiguredProtectionGroupUUIDCodingKey
|| __DATA_CONST.__const _HMAccessoryConnectivityInfoCodingKey
|| __DATA_CONST.__const _HMAccessoryControlTargetsCodingKey
|| __DATA_CONST.__const _HMAccessoryControlTargetsMessageKey
|| __DATA_CONST.__const _HMAccessoryControlTargetsUpdatedMessage
|| __DATA_CONST.__const _HMAccessoryControllableCodingKey
|| __DATA_CONST.__const _HMAccessoryControllableMessageKey
|| __DATA_CONST.__const _HMAccessoryControllableUpdatedMessage
|| __DATA_CONST.__const _HMAccessoryCurrentAccessoryCodingKey
|| __DATA_CONST.__const _HMAccessoryCurrentNetworkProtectionModeCodingKey
|| __DATA_CONST.__const _HMAccessoryDeleteSiriHistoryRequestMessage
|| __DATA_CONST.__const _HMAccessoryDeviceCodingKey
|| __DATA_CONST.__const _HMAccessoryListControlTargetsMessageKey
|| __DATA_CONST.__const _HMAccessoryMultiUserSupportCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkAccessViolationCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkAccessViolationLastOccurrenceDateCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkAccessViolationLastResetDateCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkConfigurationRestrictedCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupAddedNotification
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupCategoryCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupManufacturerCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupMessageKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupProtectionModeCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupProtectionModeMessageKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupProtectionModeUpdateRequest
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupRemovedNotification
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupUUIDCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupUUIDMessageKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionSupportCodingKey
|| __DATA_CONST.__const _HMAccessoryPairingIdentityCodingKey
|| __DATA_CONST.__const _HMAccessoryPairingIdentityIncludePrivateKeyMessageKey
|| __DATA_CONST.__const _HMAccessoryPairingIdentityRequestMessage
|| __DATA_CONST.__const _HMAccessoryProtectionGroupUUIDCodingKey
|| __DATA_CONST.__const _HMAccessoryRemoteLoginCodingKey
|| __DATA_CONST.__const _HMAccessoryRemoveControlTargetsMessageKey
|| __DATA_CONST.__const _HMAccessoryResetControlTargetsMessageKey
|| __DATA_CONST.__const _HMAccessoryRootSettingsCodingKey
|| __DATA_CONST.__const _HMAccessoryRootSettingsMessageKey
|| __DATA_CONST.__const _HMAccessorySerializedDataKey
|| __DATA_CONST.__const _HMAccessorySettingAddConstraintMessage
|| __DATA_CONST.__const _HMAccessorySettingAddedNotification
|| __DATA_CONST.__const _HMAccessorySettingConstraintAddMessageKey
|| __DATA_CONST.__const _HMAccessorySettingConstraintMessageKey
|| __DATA_CONST.__const _HMAccessorySettingConstraintRemoveMessageKey
|| __DATA_CONST.__const _HMAccessorySettingConstraintsCodingKey
|| __DATA_CONST.__const _HMAccessorySettingGroupAddGroupMessage
|| __DATA_CONST.__const _HMAccessorySettingGroupAddSettingMessage
|| __DATA_CONST.__const _HMAccessorySettingGroupAddedNotification
|| __DATA_CONST.__const _HMAccessorySettingGroupGroupMessageKey
|| __DATA_CONST.__const _HMAccessorySettingGroupGroupsCodingKey
|| __DATA_CONST.__const _HMAccessorySettingGroupIdentifierCodingKey
|| __DATA_CONST.__const _HMAccessorySettingGroupNameCodingKey
|| __DATA_CONST.__const _HMAccessorySettingGroupNotificationKey
|| __DATA_CONST.__const _HMAccessorySettingGroupPresenceInMediaSystemUpdateMessage
|| __DATA_CONST.__const _HMAccessorySettingGroupRemoveGroupMessage
|| __DATA_CONST.__const _HMAccessorySettingGroupRemoveSettingMessage
|| __DATA_CONST.__const _HMAccessorySettingGroupRemovedNotification
|| __DATA_CONST.__const _HMAccessorySettingGroupSettingMessageKey
|| __DATA_CONST.__const _HMAccessorySettingGroupSettingsCodingKey
|| __DATA_CONST.__const _HMAccessorySettingIdentifierCodingKey
|| __DATA_CONST.__const _HMAccessorySettingNameCodingKey
|| __DATA_CONST.__const _HMAccessorySettingNotificationKey
|| __DATA_CONST.__const _HMAccessorySettingPropertiesCodingKey
|| __DATA_CONST.__const _HMAccessorySettingReflectedCodingKey
|| __DATA_CONST.__const _HMAccessorySettingReflectedUpdatedNotification
|| __DATA_CONST.__const _HMAccessorySettingRemoveConstraintMessage
|| __DATA_CONST.__const _HMAccessorySettingRemovedNotification
|| __DATA_CONST.__const _HMAccessorySettingReplaceConstraintsMessage
|| __DATA_CONST.__const _HMAccessorySettingTypeCodingKey
|| __DATA_CONST.__const _HMAccessorySettingUpdateConstraintsMessage
|| __DATA_CONST.__const _HMAccessorySettingUpdateValueMessage
|| __DATA_CONST.__const _HMAccessorySettingValueCodingKey
|| __DATA_CONST.__const _HMAccessorySettingValueMessageKey
|| __DATA_CONST.__const _HMAccessorySettingValueUpdatedNotification
|| __DATA_CONST.__const _HMAccessorySettingsRootGroupKeyPath
|| __DATA_CONST.__const _HMAccessorySettingsUpdatedMessage
|| __DATA_CONST.__const _HMAccessorySoftwareUpdateCodingKey
|| __DATA_CONST.__const _HMAccessorySoftwareVersionCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsCompanionInitiatedRestartCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsIdentifyCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsMediaAccessControlCodingKey
|| __DATA_CONST.__const _HMAccessorySymptomsHandlerUpdatedMessage
|| __DATA_CONST.__const _HMAccessoryTargetControlSupportCodingKey
|| __DATA_CONST.__const _HMAccessoryTargetControlSupportMessageKey
|| __DATA_CONST.__const _HMAccessoryTargetControlUpdatedMessage
|| __DATA_CONST.__const _HMAccessoryTargetControllerHardwareSupportCodingKey
|| __DATA_CONST.__const _HMAccessoryTargetControllerHardwareSupportMessageKey
|| __DATA_CONST.__const _HMAccessoryTargetControllerSupportCodingKey
|| __DATA_CONST.__const _HMAccessoryTargetControllerSupportMessageKey
|| __DATA_CONST.__const _HMAccessoryTargetNetworkProtectionModeCodingKey
|| __DATA_CONST.__const _HMAccessoryUpdateControlTargetsMessageKey
|| __DATA_CONST.__const _HMAccessoryWiFiCredentialTypeCodingKey
|| __DATA_CONST.__const _HMAccessoryWiFiNetworkInfoCodingKey
|| __DATA_CONST.__const _HMAccessoryWiFiReconfigurationSupportCodingKey
|| __DATA_CONST.__const _HMActionSetNameKeyHomeArrival
|| __DATA_CONST.__const _HMActionSetNameKeyHomeDeparture
|| __DATA_CONST.__const _HMActionSetNameKeySleep
|| __DATA_CONST.__const _HMActionSetNameKeyWakeUp
|| __DATA_CONST.__const _HMActionSetSerializedDataKey
|| __DATA_CONST.__const _HMActionSetSerializedDictionaryProtocolKey
|| __DATA_CONST.__const _HMActionSetSerializedDictionaryProtocolProtoBuf
|| __DATA_CONST.__const _HMActionSetSerializedDictionaryVersionKey
|| __DATA_CONST.__const _HMActionSetSerializedDictionaryVersion_1_0
|| __DATA_CONST.__const _HMActionSetShortcutsActionsCodingKey
|| __DATA_CONST.__const _HMActionSetTypeHomeArrival
|| __DATA_CONST.__const _HMActionSetTypeHomeDeparture
|| __DATA_CONST.__const _HMActionSetTypeShortcutsComponent
|| __DATA_CONST.__const _HMActionSetTypeSleep
|| __DATA_CONST.__const _HMActionSetTypeTriggerOwned
|| __DATA_CONST.__const _HMActionSetTypeUserDefined
|| __DATA_CONST.__const _HMActionSetTypeWakeUp
|| __DATA_CONST.__const _HMAddAccessoryRequestAccessoryNameCodingKey
|| __DATA_CONST.__const _HMAddAccessoryRequestCategoryCodingKey
|| __DATA_CONST.__const _HMAddAccessoryRequestIdentifierCodingKey
|| __DATA_CONST.__const _HMAppStoreIDAppShack
|| __DATA_CONST.__const _HMAppStoreIDLocal
|| __DATA_CONST.__const _HMAssistantAccessControlAccessoriesCodingKey
|| __DATA_CONST.__const _HMAssistantAccessControlEnabledCodingKey
|| __DATA_CONST.__const _HMAssistantAccessControlOptionsCodingKey
|| __DATA_CONST.__const _HMBulletinCameraClipIDKey
|| __DATA_CONST.__const _HMBulletinCameraNotificationIDKey
|| __DATA_CONST.__const _HMBulletinCameraNotificationIDsKey
|| __DATA_CONST.__const _HMBulletinCameraProfileIDKey
|| __DATA_CONST.__const _HMBulletinContextAccessoryIDKey
|| __DATA_CONST.__const _HMBulletinContextCharacteristicIDKey
|| __DATA_CONST.__const _HMBulletinContextHomeIDKey
|| __DATA_CONST.__const _HMBulletinContextHomeNameKey
|| __DATA_CONST.__const _HMBulletinContextRoomServiceNameKey
|| __DATA_CONST.__const _HMBulletinContextServiceIDKey
|| __DATA_CONST.__const _HMBulletinContextTriggerIDKey
|| __DATA_CONST.__const _HMBulletinContextTriggerNameKey
|| __DATA_CONST.__const _HMCameraClipHLSPlaylistEncryptionKeyURLString
|| __DATA_CONST.__const _HMCameraClipHTTPHeaderNameStreamingAssetVersion
|| __DATA_CONST.__const _HMCameraClipManagerDeleteAllClipsMessage
|| __DATA_CONST.__const _HMCameraClipManagerDeleteClipMessage
|| __DATA_CONST.__const _HMCameraClipManagerDidChangeClipsMessage
|| __DATA_CONST.__const _HMCameraClipManagerDidFetchClipsMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchClipForSignificantEventMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchClipMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchClipsMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchCountOfClipsMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchPosterFramesAssetContextMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchVideoSegmentsAssetContextMessage
|| __DATA_CONST.__const _HMCameraClipManagerImportClipsMessage
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyAssetContext
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyClip
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyClipImportData
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyClipUUID
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyCountOfClips
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyDateAfter
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyDateBefore
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyFetchUUID
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyFetchedClips
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyLimit
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyRemovedClipUUIDs
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeySignificantEventUUID
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyUpdatedClips
|| __DATA_CONST.__const _HMCameraClipManagerSubscribeMessage
|| __DATA_CONST.__const _HMCameraClipManagerUnsubscribeMessage
|| __DATA_CONST.__const _HMCameraProfileDeleteAllClipsMessage
|| __DATA_CONST.__const _HMCameraSignificantEventKeyPath
|| __DATA_CONST.__const _HMCameraUserSettingsAccessModeChangeNotificationEnabledMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsAccessModeIndicatorEnabledMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsAccessModeMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsCodingKey
|| __DATA_CONST.__const _HMCameraUserSettingsDidUpdateMessage
|| __DATA_CONST.__const _HMCameraUserSettingsMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsNightVisionModeEnabledMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsPresenceTypeMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsRecordingAudioEnabledMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsRecordingDurationMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsRecordingTriggerMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsSnapshotsAllowedMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateAccessModeChangeNotificationEnabledMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateAccessModeIndicatorEnabledMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateAccessModeMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateNightVisionModeEnabledMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateRecordingAudioEnabledMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateRecordingTriggerEventsMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateSnapshotsAllowedMessage
|| __DATA_CONST.__const _HMCharacteristicKeyPath
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatArray
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatBool
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatData
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatDictionary
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatFloat
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatInt
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatString
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatTLV8
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatUInt16
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatUInt32
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatUInt64
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatUInt8
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsArcDegree
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsCelsius
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsFahrenheit
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsLux
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsMicrogramsPerCubicMeter
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsPartsPerMillion
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsPercentage
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsSeconds
|| __DATA_CONST.__const _HMCharacteristicPropertyHidden
|| __DATA_CONST.__const _HMCharacteristicPropertyReadable
|| __DATA_CONST.__const _HMCharacteristicPropertyRequiresAuthorizationData
|| __DATA_CONST.__const _HMCharacteristicPropertySupportsEventNotification
|| __DATA_CONST.__const _HMCharacteristicPropertyWritable
|| __DATA_CONST.__const _HMCharacteristicSerializedDataKey
|| __DATA_CONST.__const _HMCharacteristicTypeActive
|| __DATA_CONST.__const _HMCharacteristicTypeActiveIdentifier
|| __DATA_CONST.__const _HMCharacteristicTypeAdminOnlyAccess
|| __DATA_CONST.__const _HMCharacteristicTypeAirParticulateDensity
|| __DATA_CONST.__const _HMCharacteristicTypeAirParticulateSize
|| __DATA_CONST.__const _HMCharacteristicTypeAirQuality
|| __DATA_CONST.__const _HMCharacteristicTypeAudioFeedback
|| __DATA_CONST.__const _HMCharacteristicTypeBatteryLevel
|| __DATA_CONST.__const _HMCharacteristicTypeBrightness
|| __DATA_CONST.__const _HMCharacteristicTypeButtonEvent
|| __DATA_CONST.__const _HMCharacteristicTypeCarbonDioxideDetected
|| __DATA_CONST.__const _HMCharacteristicTypeCarbonDioxideLevel
|| __DATA_CONST.__const _HMCharacteristicTypeCarbonDioxidePeakLevel
|| __DATA_CONST.__const _HMCharacteristicTypeCarbonMonoxideDetected
|| __DATA_CONST.__const _HMCharacteristicTypeCarbonMonoxideLevel
|| __DATA_CONST.__const _HMCharacteristicTypeCarbonMonoxidePeakLevel
|| __DATA_CONST.__const _HMCharacteristicTypeChargingState
|| __DATA_CONST.__const _HMCharacteristicTypeClosedCaptions
|| __DATA_CONST.__const _HMCharacteristicTypeColorTemperature
|| __DATA_CONST.__const _HMCharacteristicTypeConfiguredName
|| __DATA_CONST.__const _HMCharacteristicTypeContactState
|| __DATA_CONST.__const _HMCharacteristicTypeCoolingThreshold
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentAirPurifierState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentDoorState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentFanState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentHeaterCoolerState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentHeatingCooling
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentHorizontalTilt
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentHumidifierDehumidifierState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentLightLevel
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentLockMechanismState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentMediaState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentPosition
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentRelativeHumidity
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentSecuritySystemState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentSlatState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentTemperature
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentTilt
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentVerticalTilt
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentVisibilityState
|| __DATA_CONST.__const _HMCharacteristicTypeDehumidifierThreshold
|| __DATA_CONST.__const _HMCharacteristicTypeDigitalZoom
|| __DATA_CONST.__const _HMCharacteristicTypeFilterChangeIndication
|| __DATA_CONST.__const _HMCharacteristicTypeFilterLifeLevel
|| __DATA_CONST.__const _HMCharacteristicTypeFilterResetChangeIndication
|| __DATA_CONST.__const _HMCharacteristicTypeFirmwareVersion
|| __DATA_CONST.__const _HMCharacteristicTypeHardwareVersion
|| __DATA_CONST.__const _HMCharacteristicTypeHeatingThreshold
|| __DATA_CONST.__const _HMCharacteristicTypeHoldPosition
|| __DATA_CONST.__const _HMCharacteristicTypeHue
|| __DATA_CONST.__const _HMCharacteristicTypeHumidifierThreshold
|| __DATA_CONST.__const _HMCharacteristicTypeIdentifier
|| __DATA_CONST.__const _HMCharacteristicTypeIdentify
|| __DATA_CONST.__const _HMCharacteristicTypeImageMirroring
|| __DATA_CONST.__const _HMCharacteristicTypeImageRotation
|| __DATA_CONST.__const _HMCharacteristicTypeInUse
|| __DATA_CONST.__const _HMCharacteristicTypeInputDeviceType
|| __DATA_CONST.__const _HMCharacteristicTypeInputEvent
|| __DATA_CONST.__const _HMCharacteristicTypeInputSourceType
|| __DATA_CONST.__const _HMCharacteristicTypeIsConfigured
|| __DATA_CONST.__const _HMCharacteristicTypeIsHidden
|| __DATA_CONST.__const _HMCharacteristicTypeLabelIndex
|| __DATA_CONST.__const _HMCharacteristicTypeLabelNamespace
|| __DATA_CONST.__const _HMCharacteristicTypeLeakDetected
|| __DATA_CONST.__const _HMCharacteristicTypeLockManagementAutoSecureTimeout
|| __DATA_CONST.__const _HMCharacteristicTypeLockManagementControlPoint
|| __DATA_CONST.__const _HMCharacteristicTypeLockMechanismLastKnownAction
|| __DATA_CONST.__const _HMCharacteristicTypeLockPhysicalControls
|| __DATA_CONST.__const _HMCharacteristicTypeLogs
|| __DATA_CONST.__const _HMCharacteristicTypeManufacturer
|| __DATA_CONST.__const _HMCharacteristicTypeModel
|| __DATA_CONST.__const _HMCharacteristicTypeMotionDetected
|| __DATA_CONST.__const _HMCharacteristicTypeMute
|| __DATA_CONST.__const _HMCharacteristicTypeName
|| __DATA_CONST.__const _HMCharacteristicTypeNightVision
|| __DATA_CONST.__const _HMCharacteristicTypeNitrogenDioxideDensity
|| __DATA_CONST.__const _HMCharacteristicTypeObstructionDetected
|| __DATA_CONST.__const _HMCharacteristicTypeOccupancyDetected
|| __DATA_CONST.__const _HMCharacteristicTypeOpticalZoom
|| __DATA_CONST.__const _HMCharacteristicTypeOutletInUse
|| __DATA_CONST.__const _HMCharacteristicTypeOutputState
|| __DATA_CONST.__const _HMCharacteristicTypeOzoneDensity
|| __DATA_CONST.__const _HMCharacteristicTypePM10Density
|| __DATA_CONST.__const _HMCharacteristicTypePM2_5Density
|| __DATA_CONST.__const _HMCharacteristicTypePictureMode
|| __DATA_CONST.__const _HMCharacteristicTypePositionState
|| __DATA_CONST.__const _HMCharacteristicTypePowerMode
|| __DATA_CONST.__const _HMCharacteristicTypePowerModeSelection
|| __DATA_CONST.__const _HMCharacteristicTypePowerState
|| __DATA_CONST.__const _HMCharacteristicTypeProgramMode
|| __DATA_CONST.__const _HMCharacteristicTypeRemainingDuration
|| __DATA_CONST.__const _HMCharacteristicTypeRemoteKey
|| __DATA_CONST.__const _HMCharacteristicTypeRotationDirection
|| __DATA_CONST.__const _HMCharacteristicTypeRotationSpeed
|| __DATA_CONST.__const _HMCharacteristicTypeSaturation
|| __DATA_CONST.__const _HMCharacteristicTypeSecuritySystemAlarmType
|| __DATA_CONST.__const _HMCharacteristicTypeSelectedAudioStreamConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSelectedCameraRecordingConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSelectedStreamConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSerialNumber
|| __DATA_CONST.__const _HMCharacteristicTypeSetDuration
|| __DATA_CONST.__const _HMCharacteristicTypeSetupDataStreamTransport
|| __DATA_CONST.__const _HMCharacteristicTypeSetupStreamEndpoint
|| __DATA_CONST.__const _HMCharacteristicTypeSiriInputType
|| __DATA_CONST.__const _HMCharacteristicTypeSlatType
|| __DATA_CONST.__const _HMCharacteristicTypeSleepDiscoveryMode
|| __DATA_CONST.__const _HMCharacteristicTypeSmokeDetected
|| __DATA_CONST.__const _HMCharacteristicTypeSoftwareVersion
|| __DATA_CONST.__const _HMCharacteristicTypeStatusActive
|| __DATA_CONST.__const _HMCharacteristicTypeStatusFault
|| __DATA_CONST.__const _HMCharacteristicTypeStatusJammed
|| __DATA_CONST.__const _HMCharacteristicTypeStatusLowBattery
|| __DATA_CONST.__const _HMCharacteristicTypeStatusTampered
|| __DATA_CONST.__const _HMCharacteristicTypeStreamingStatus
|| __DATA_CONST.__const _HMCharacteristicTypeSulphurDioxideDensity
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedAudioRecordingConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedAudioStreamConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedCameraRecordingConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedDataStreamConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedRTPConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedTargetConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedVideoRecordingConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedVideoStreamConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSwingMode
|| __DATA_CONST.__const _HMCharacteristicTypeTargetAirPurifierState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetDoorState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetFanState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetHeaterCoolerState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetHeatingCooling
|| __DATA_CONST.__const _HMCharacteristicTypeTargetHorizontalTilt
|| __DATA_CONST.__const _HMCharacteristicTypeTargetHumidifierDehumidifierState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetList
|| __DATA_CONST.__const _HMCharacteristicTypeTargetLockMechanismState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetMediaState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetPosition
|| __DATA_CONST.__const _HMCharacteristicTypeTargetRelativeHumidity
|| __DATA_CONST.__const _HMCharacteristicTypeTargetSecuritySystemState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetTemperature
|| __DATA_CONST.__const _HMCharacteristicTypeTargetTilt
|| __DATA_CONST.__const _HMCharacteristicTypeTargetVerticalTilt
|| __DATA_CONST.__const _HMCharacteristicTypeTargetVisibilityState
|| __DATA_CONST.__const _HMCharacteristicTypeTemperatureUnits
|| __DATA_CONST.__const _HMCharacteristicTypeValveType
|| __DATA_CONST.__const _HMCharacteristicTypeVersion
|| __DATA_CONST.__const _HMCharacteristicTypeVolatileOrganicCompoundDensity
|| __DATA_CONST.__const _HMCharacteristicTypeVolume
|| __DATA_CONST.__const _HMCharacteristicTypeVolumeControlType
|| __DATA_CONST.__const _HMCharacteristicTypeVolumeSelector
|| __DATA_CONST.__const _HMCharacteristicTypeWaterLevel
|| __DATA_CONST.__const _HMCharacteristicValueKeyPath
|| __DATA_CONST.__const _HMDeviceIDSIdentifierCodingKey
|| __DATA_CONST.__const _HMDeviceRPDeviceIRKCodingKey
|| __DATA_CONST.__const _HMDeviceSetupFollowupIdentifier
|| __DATA_CONST.__const _HMDeviceSetupSessionCloseMessage
|| __DATA_CONST.__const _HMDeviceSetupSessionDataMessageKey
|| __DATA_CONST.__const _HMDeviceSetupSessionErrorMessageKey
|| __DATA_CONST.__const _HMDeviceSetupSessionIdentifierMessageKey
|| __DATA_CONST.__const _HMDeviceSetupSessionOpenMessage
|| __DATA_CONST.__const _HMDeviceSetupSessionReceiveDataMessage
|| __DATA_CONST.__const _HMDeviceSetupSessionRoleMessageKey
|| __DATA_CONST.__const _HMDeviceSetupSessionUserInfoMessageKey
|| __DATA_CONST.__const _HMErrorDomain
|| __DATA_CONST.__const _HMHomeAccessoryErrorMessage
|| __DATA_CONST.__const _HMHomeAccessoryNetworkProtectionGroupsCodingKey
|| __DATA_CONST.__const _HMHomeAddAccessoryRequestDumpStateKey
|| __DATA_CONST.__const _HMHomeAddNetworkRouterEnabledCodingKey
|| __DATA_CONST.__const _HMHomeAddNetworkRouterEnabledMessageKey
|| __DATA_CONST.__const _HMHomeAutomaticSoftwareUpdateEnabledCodingKey
|| __DATA_CONST.__const _HMHomeConfirmResidentRequestKey
|| __DATA_CONST.__const _HMHomeEnableMultiUserRequestKey
|| __DATA_CONST.__const _HMHomeErrorMessageKey
|| __DATA_CONST.__const _HMHomeExecuteActionsActionInfoKey
|| __DATA_CONST.__const _HMHomeExecuteActionsRequestKey
|| __DATA_CONST.__const _HMHomeHasAnyUserAcknowledgedCameraRecordingOnboardingChangeNotificationKey
|| __DATA_CONST.__const _HMHomeHasAnyUserAcknowledgedCameraRecordingOnboardingValueCodingKey
|| __DATA_CONST.__const _HMHomeHubStateCodingKey
|| __DATA_CONST.__const _HMHomeHubStateMessageKey
|| __DATA_CONST.__const _HMHomeHubStateUpdatedMessage
|| __DATA_CONST.__const _HMHomeInternalSetMinHomeKitVersionForAccessoryNetworkProtectionChangeRequest
|| __DATA_CONST.__const _HMHomeInternalSetMiniumumNetworkRouterSupportHomeKitVersionRequest
|| __DATA_CONST.__const _HMHomeLocationStatusUpdateNotificationKey
|| __DATA_CONST.__const _HMHomeLocationStatusValueCodingKey
|| __DATA_CONST.__const _HMHomeLocationStatusValueKey
|| __DATA_CONST.__const _HMHomeManagerAddRequestKey
|| __DATA_CONST.__const _HMHomeManagerCheckForAddAccessoryRequestsMessageKey
|| __DATA_CONST.__const _HMHomeManagerConnectivityInfoRequestMessage
|| __DATA_CONST.__const _HMHomeManagerDataSyncStateMessageKey
|| __DATA_CONST.__const _HMHomeManagerDestinationMessageKey
|| __DATA_CONST.__const _HMHomeManagerFetchAddAccessoryRequestsMessageKey
|| __DATA_CONST.__const _HMHomeManagerIdmsAccountUsernameModified
|| __DATA_CONST.__const _HMHomeManagerMediaAccessoryControlRequestMessage
|| __DATA_CONST.__const _HMHomeManagerNameValidationConflictNameKey
|| __DATA_CONST.__const _HMHomeManagerNameValidationOptionsMessageKey
|| __DATA_CONST.__const _HMHomeManagerOptionsMessageKey
|| __DATA_CONST.__const _HMHomeManagerPairingIdentityRequestMessage
|| __DATA_CONST.__const _HMHomeManagerPendingRequestsMessageKey
|| __DATA_CONST.__const _HMHomeManagerQueryHomeNamepaceMessage
|| __DATA_CONST.__const _HMHomeManagerQueryNameMessageKey
|| __DATA_CONST.__const _HMHomeManagerQueryNameValidMessageKey
|| __DATA_CONST.__const _HMHomeManagerRemoveAccountRequestMessage
|| __DATA_CONST.__const _HMHomeManagerResolveAccountRequestMessage
|| __DATA_CONST.__const _HMHomeManagerRuntimeStateUpdateNotificationMessage
|| __DATA_CONST.__const _HMHomeManagerRuntimeStateUpdateRequestMessage
|| __DATA_CONST.__const _HMHomeManagerRuntimeStateUpdateRequestMessageKey
|| __DATA_CONST.__const _HMHomeManagerSecurePingMessageKey
|| __DATA_CONST.__const _HMHomeManagerStatusMessageKey
|| __DATA_CONST.__const _HMHomeManagerStatusUpdatedMessage
|| __DATA_CONST.__const _HMHomeMediaMinimumUserPrivilegeCodingKey
|| __DATA_CONST.__const _HMHomeMediaPasswordCodingKey
|| __DATA_CONST.__const _HMHomeMediaPasswordMessageKey
|| __DATA_CONST.__const _HMHomeMediaPeerToPeerEnabledCodingKey
|| __DATA_CONST.__const _HMHomeMultiUserEnabledChangeNotificationKey
|| __DATA_CONST.__const _HMHomeMultiUserEnabledValueCodingKey
|| __DATA_CONST.__const _HMHomeNetworkProtectionModeCodingKey
|| __DATA_CONST.__const _HMHomeNetworkProtectionModeUpdatedNotification
|| __DATA_CONST.__const _HMHomeNetworkRouterSupportDisableReasonCodingKey
|| __DATA_CONST.__const _HMHomeNetworkRouterSupportDisableReasonMessageKey
|| __DATA_CONST.__const _HMHomeNetworkRouterSupportDisableReasonUpdatedNotification
|| __DATA_CONST.__const _HMHomeReplacedAccessoryUUIDMessageKey
|| __DATA_CONST.__const _HMHomeResidentDevicesListMessageKey
|| __DATA_CONST.__const _HMHomeSerializedDataKey
|| __DATA_CONST.__const _HMHomeSetHasAnyUserAcknowledgedCameraRecordingOnboardingRequestKey
|| __DATA_CONST.__const _HMHomeUpdateAutomaticSoftwareUpdateMessage
|| __DATA_CONST.__const _HMHomeUpdateMediaPasswordMessage
|| __DATA_CONST.__const _HMHomeUpdateMediaPeerToPeerEnabledMessage
|| __DATA_CONST.__const _HMHomeUpdateMinimumMediaUserPrivilegeMessage
|| __DATA_CONST.__const _HMHomeUpdateNetworkProtectionModeRequest
|| __DATA_CONST.__const _HMHomeUserConsentForAccessoryReplacementRequestKey
|| __DATA_CONST.__const _HMHomeUserConsentResponseForAccessoryMessageKey
|| __DATA_CONST.__const _HMIntentOutcomeFailure
|| __DATA_CONST.__const _HMIntentOutcomeInProgress
|| __DATA_CONST.__const _HMIntentOutcomeSuccess
|| __DATA_CONST.__const _HMIntentOutcomeUnsecuringNotAllowed
|| __DATA_CONST.__const _HMIntentOutcomeUnsecuringUnlockRequired
|| __DATA_CONST.__const _HMMediaPlaybackActionPlaybackArchiveCodingKey
|| __DATA_CONST.__const _HMMediaPlaybackActionPlaybackArchiveMessageKey
|| __DATA_CONST.__const _HMMediaPlaybackActionProfilesCodingKey
|| __DATA_CONST.__const _HMMediaPlaybackActionProfilesMessageKey
|| __DATA_CONST.__const _HMMediaPlaybackActionStateCodingKey
|| __DATA_CONST.__const _HMMediaPlaybackActionStateMessageKey
|| __DATA_CONST.__const _HMMediaPlaybackActionVolumeCodingKey
|| __DATA_CONST.__const _HMMediaPlaybackActionVolumeMessageKey
|| __DATA_CONST.__const _HMMediaProfileRouteUIDCodingKey
|| __DATA_CONST.__const _HMMediaProfileSessionCodingKey
|| __DATA_CONST.__const _HMMediaProfileSessionUUIDCodingKey
|| __DATA_CONST.__const _HMMediaSessionAudioControlMutedCodingKey
|| __DATA_CONST.__const _HMMediaSessionAudioControlMutedMessageKey
|| __DATA_CONST.__const _HMMediaSessionAudioControlUpdatedMessage
|| __DATA_CONST.__const _HMMediaSessionAudioControlVolumeCodingKey
|| __DATA_CONST.__const _HMMediaSessionAudioControlVolumeMessageKey
|| __DATA_CONST.__const _HMMediaSessionMediaUniqueIdentifierMessageKey
|| __DATA_CONST.__const _HMMediaSessionPlaybackStateCodingKey
|| __DATA_CONST.__const _HMMediaSessionPlaybackStateMessageKey
|| __DATA_CONST.__const _HMMediaSessionPlaybackUpdatedMessage
|| __DATA_CONST.__const _HMMediaSessionPropertyListMessageKey
|| __DATA_CONST.__const _HMMediaSessionRefreshPlaybackMessage
|| __DATA_CONST.__const _HMMediaSessionRepeatStateMessageKey
|| __DATA_CONST.__const _HMMediaSessionRouteUIDCodingKey
|| __DATA_CONST.__const _HMMediaSessionRouteUIDMessageKey
|| __DATA_CONST.__const _HMMediaSessionRouteUIDUpdatedMessage
|| __DATA_CONST.__const _HMMediaSessionSetAudioControlMessage
|| __DATA_CONST.__const _HMMediaSessionSetPlaybackMessage
|| __DATA_CONST.__const _HMMediaSessionShuffleStateMessageKey
|| __DATA_CONST.__const _HMMediaSessionUUIDMessageKey
|| __DATA_CONST.__const _HMMediaSessionVolumeMessageKey
|| __DATA_CONST.__const _HMNetworkConfigurationNetworkAccessRestrictedMessageKey
|| __DATA_CONST.__const _HMNetworkConfigurationProfileAccessViolationMessageKey
|| __DATA_CONST.__const _HMNetworkConfigurationProfileAccessViolationUpdatedNotification
|| __DATA_CONST.__const _HMNetworkConfigurationProfileAllowedHostsMessageKey
|| __DATA_CONST.__const _HMNetworkConfigurationProfileCurrentProtectionModeMessageKey
|| __DATA_CONST.__const _HMNetworkConfigurationProfileHostsUpdatedNotification
|| __DATA_CONST.__const _HMNetworkConfigurationProfileProtectionModeUpdateRequest
|| __DATA_CONST.__const _HMNetworkConfigurationProfileProtectionModeUpdatedNotification
|| __DATA_CONST.__const _HMNetworkConfigurationProfileTargetProtectionModeMessageKey
|| __DATA_CONST.__const _HMNetworkConfigurationProfileWiFiCredentialTypeMessageKey
|| __DATA_CONST.__const _HMNetworkConfigurationProfileWiFiReconfigurationRequest
|| __DATA_CONST.__const _HMNetworkConfigurationProfileWiFiReconfigurationSupportMessageKey
|| __DATA_CONST.__const _HMNetworkConfigurationProfileWiFiReconfigurationUpdatedNotification
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerAddOverridesDataKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerAddOverridesMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerAddOverridesReplaceKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsListOnlyKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsProductGroupKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsProductNumberKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsRawOutputKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsResponseKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesFirmwareVersionKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesIgnoreOverridesKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesProductGroupKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesProductNumberKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesRawOutputKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesResponseKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerFetchCloudChangesForceChangeNotificationsKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerFetchCloudChangesMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerRemoveLocalRulesMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerRemoveOverridesMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerRemoveOverridesProductGroupKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerRemoveOverridesProductNumberKey
|| __DATA_CONST.__const _HMNetworkRouterProfileIsSatelliteCodingKey
|| __DATA_CONST.__const _HMNetworkRouterProfileNetworkStatusCodingKey
|| __DATA_CONST.__const _HMNetworkRouterProfileNetworkStatusMessageKey
|| __DATA_CONST.__const _HMNetworkRouterProfileNetworkStatusUpdatedNotification
|| __DATA_CONST.__const _HMNetworkRouterProfileSatelliteProfilesCodingKey
|| __DATA_CONST.__const _HMNetworkRouterProfileSatelliteProfilesUpdatedNotification
|| __DATA_CONST.__const _HMNetworkRouterSatelliteProfileIdentifiersMessageKey
|| __DATA_CONST.__const _HMPresenceKeyPath
|| __DATA_CONST.__const _HMPresenceTypeAnyUserAtHome
|| __DATA_CONST.__const _HMPresenceTypeCurrentUserAtHome
|| __DATA_CONST.__const _HMPresenceTypeCurrentUserNotAtHome
|| __DATA_CONST.__const _HMPresenceTypeNoUserAtHome
|| __DATA_CONST.__const _HMPresenceTypeUsersAtHome
|| __DATA_CONST.__const _HMPresenceTypeUsersNotAtHome
|| __DATA_CONST.__const _HMRemoteLoginHandlerUpdateLoggedInAccountMessage
|| __DATA_CONST.__const _HMResidentDeviceCapabilitiesMessageKey
|| __DATA_CONST.__const _HMResidentDeviceDeviceCodingKey
|| __DATA_CONST.__const _HMResidentDeviceEnabledMessageKey
|| __DATA_CONST.__const _HMResidentDeviceStatusMessageKey
|| __DATA_CONST.__const _HMServiceConfiguredNameMessageKey
|| __DATA_CONST.__const _HMServiceLastKnownSleepDiscoveryModeCodingKey
|| __DATA_CONST.__const _HMServiceMediaSourceDisplayOrderCodingKey
|| __DATA_CONST.__const _HMServiceMediaSourceDisplayOrderModifiableCodingKey
|| __DATA_CONST.__const _HMServiceMediaSourceIdentifierCodingKey
|| __DATA_CONST.__const _HMServiceMediaSourceIdentifierMessageKey
|| __DATA_CONST.__const _HMServiceMediaSourceIdentifierUpdatedNotification
|| __DATA_CONST.__const _HMServiceNameModifiableCodingKey
|| __DATA_CONST.__const _HMServiceSerializedDataKey
|| __DATA_CONST.__const _HMServiceSubtypeGenericValve
|| __DATA_CONST.__const _HMServiceSubtypeIrrigationValve
|| __DATA_CONST.__const _HMServiceSubtypeShowerheadValve
|| __DATA_CONST.__const _HMServiceSubtypeUnknown
|| __DATA_CONST.__const _HMServiceSubtypeWaterFaucetValve
|| __DATA_CONST.__const _HMServiceTypeAccessoryInformation
|| __DATA_CONST.__const _HMServiceTypeAirPurifier
|| __DATA_CONST.__const _HMServiceTypeAirQualitySensor
|| __DATA_CONST.__const _HMServiceTypeAudioStreamManagement
|| __DATA_CONST.__const _HMServiceTypeBattery
|| __DATA_CONST.__const _HMServiceTypeCameraControl
|| __DATA_CONST.__const _HMServiceTypeCameraRTPStreamManagement
|| __DATA_CONST.__const _HMServiceTypeCameraRecordingManagement
|| __DATA_CONST.__const _HMServiceTypeCarbonDioxideSensor
|| __DATA_CONST.__const _HMServiceTypeCarbonMonoxideSensor
|| __DATA_CONST.__const _HMServiceTypeContactSensor
|| __DATA_CONST.__const _HMServiceTypeDataStreamTransportManagement
|| __DATA_CONST.__const _HMServiceTypeDoor
|| __DATA_CONST.__const _HMServiceTypeDoorbell
|| __DATA_CONST.__const _HMServiceTypeFan
|| __DATA_CONST.__const _HMServiceTypeFaucet
|| __DATA_CONST.__const _HMServiceTypeFilterMaintenance
|| __DATA_CONST.__const _HMServiceTypeGarageDoorOpener
|| __DATA_CONST.__const _HMServiceTypeHeaterCooler
|| __DATA_CONST.__const _HMServiceTypeHumidifierDehumidifier
|| __DATA_CONST.__const _HMServiceTypeHumiditySensor
|| __DATA_CONST.__const _HMServiceTypeInputSource
|| __DATA_CONST.__const _HMServiceTypeIrrigationSystem
|| __DATA_CONST.__const _HMServiceTypeLabel
|| __DATA_CONST.__const _HMServiceTypeLeakSensor
|| __DATA_CONST.__const _HMServiceTypeLightSensor
|| __DATA_CONST.__const _HMServiceTypeLightbulb
|| __DATA_CONST.__const _HMServiceTypeLockManagement
|| __DATA_CONST.__const _HMServiceTypeLockMechanism
|| __DATA_CONST.__const _HMServiceTypeMicrophone
|| __DATA_CONST.__const _HMServiceTypeMotionSensor
|| __DATA_CONST.__const _HMServiceTypeOccupancySensor
|| __DATA_CONST.__const _HMServiceTypeOutlet
|| __DATA_CONST.__const _HMServiceTypeSecuritySystem
|| __DATA_CONST.__const _HMServiceTypeSiri
|| __DATA_CONST.__const _HMServiceTypeSlats
|| __DATA_CONST.__const _HMServiceTypeSmokeSensor
|| __DATA_CONST.__const _HMServiceTypeSpeaker
|| __DATA_CONST.__const _HMServiceTypeStatefulProgrammableSwitch
|| __DATA_CONST.__const _HMServiceTypeStatelessProgrammableSwitch
|| __DATA_CONST.__const _HMServiceTypeSwitch
|| __DATA_CONST.__const _HMServiceTypeTargetControl
|| __DATA_CONST.__const _HMServiceTypeTargetControlManagement
|| __DATA_CONST.__const _HMServiceTypeTelevision
|| __DATA_CONST.__const _HMServiceTypeTemperatureSensor
|| __DATA_CONST.__const _HMServiceTypeThermostat
|| __DATA_CONST.__const _HMServiceTypeValve
|| __DATA_CONST.__const _HMServiceTypeVentilationFan
|| __DATA_CONST.__const _HMServiceTypeWindow
|| __DATA_CONST.__const _HMServiceTypeWindowCovering
|| __DATA_CONST.__const _HMSettingConstraintIdentifierCodingKey
|| __DATA_CONST.__const _HMSettingConstraintTypeCodingKey
|| __DATA_CONST.__const _HMSettingConstraintValueCodingKey
|| __DATA_CONST.__const _HMSettingDataCodingKey
|| __DATA_CONST.__const _HMSettingGroupsCodingKey
|| __DATA_CONST.__const _HMSettingParentCodingKey
|| __DATA_CONST.__const _HMSettingUpdateValueMessage
|| __DATA_CONST.__const _HMSetupAccessoryBrowsingCategorySpeakers
|| __DATA_CONST.__const _HMShortcutsOwnedActionSetsCodingKey
|| __DATA_CONST.__const _HMShortcutsSerializedDataKey
|| __DATA_CONST.__const _HMShortcutsSerializedDictionaryProtocolKey
|| __DATA_CONST.__const _HMShortcutsSerializedDictionaryProtocolProtoBuf
|| __DATA_CONST.__const _HMShortcutsSerializedDictionaryVersionKey
|| __DATA_CONST.__const _HMShortcutsSerializedDictionaryVersion_1_0
|| __DATA_CONST.__const _HMSignificantEventSunrise
|| __DATA_CONST.__const _HMSignificantEventSunset
|| __DATA_CONST.__const _HMSoftwareUpdateControllerFetchMessage
|| __DATA_CONST.__const _HMSoftwareUpdateControllerStartUpdateMessage
|| __DATA_CONST.__const _HMSoftwareUpdateControllerUpdateMessageKey
|| __DATA_CONST.__const _HMSoftwareUpdateDocumentationCodingKey
|| __DATA_CONST.__const _HMSoftwareUpdateDocumentationMessageKey
|| __DATA_CONST.__const _HMSoftwareUpdateDocumentationMetadataCodingKey
|| __DATA_CONST.__const _HMSoftwareUpdateDocumentationMetadataMessageKey
|| __DATA_CONST.__const _HMSoftwareUpdateDocumentationUpdatedMessage
|| __DATA_CONST.__const _HMSoftwareUpdateDownloadSizeCodingKey
|| __DATA_CONST.__const _HMSoftwareUpdateIdentifierCodingKey
|| __DATA_CONST.__const _HMSoftwareUpdateManagerFetchMessage
|| __DATA_CONST.__const _HMSoftwareUpdateManagerIdentifierMessageKey
|| __DATA_CONST.__const _HMSoftwareUpdateManagerStartMessage
|| __DATA_CONST.__const _HMSoftwareUpdateManagerStartUpdateMessage
|| __DATA_CONST.__const _HMSoftwareUpdateManagerStopMessage
|| __DATA_CONST.__const _HMSoftwareUpdateManagerTargetIdentifierString
|| __DATA_CONST.__const _HMSoftwareUpdateManagerUpdateAvailableUpdateMessage
|| __DATA_CONST.__const _HMSoftwareUpdateManagerUpdateMessageKey
|| __DATA_CONST.__const _HMSoftwareUpdateRequestDocumentationMessage
|| __DATA_CONST.__const _HMSoftwareUpdateStateCodingKey
|| __DATA_CONST.__const _HMSoftwareUpdateStateMessageKey
|| __DATA_CONST.__const _HMSoftwareUpdateUpdateDocumentationMetadataMessage
|| __DATA_CONST.__const _HMSoftwareUpdateUpdateStateMessage
|| __DATA_CONST.__const _HMSoftwareUpdateVersionCodingKey
|| __DATA_CONST.__const _HMSymptomsHandlerCodingKey
|| __DATA_CONST.__const _HMSymptomsHandlerFixErrorMessage
|| __DATA_CONST.__const _HMSymptomsHandlerSFDeviceIdentifierCodingKey
|| __DATA_CONST.__const _HMSymptomsHandlerSFDeviceIdentifierMessageKey
|| __DATA_CONST.__const _HMSymptomsHandlerSFDeviceIdentifierUpdatedMessage
|| __DATA_CONST.__const _HMSymptomsHandlerSymptomsUpdatedMessage
|| __DATA_CONST.__const _HMTelevisionAccessoriesConfiguredStatusKey
|| __DATA_CONST.__const _HMTelevisionProfileSourceDisplayOrderMessageKey
|| __DATA_CONST.__const _HMTelevisionProfileSourceDisplayOrderUpdateRequest
|| __DATA_CONST.__const _HMTelevisionProfileSourceDisplayOrderUpdatedNotification
|| __DATA_CONST.__const _HMUserAssistantAccessControlAccessoryIDsMessageKey
|| __DATA_CONST.__const _HMUserAssistantAccessControlCodingKey
|| __DATA_CONST.__const _HMUserAssistantAccessControlMessageKey
|| __DATA_CONST.__const _HMUserAssistantAccessControlUpdateMessage
|| __DATA_CONST.__const _HMUserCloudShareManagerAccountEncodedClientInfoKey
|| __DATA_CONST.__const _HMUserCloudShareManagerContainerDidAcceptCodingKey
|| __DATA_CONST.__const _HMUserCloudShareManagerContainerIDsCodingKey
|| __DATA_CONST.__const _HMUserCloudShareManagerDidReceiveShareMessage
|| __DATA_CONST.__const _HMUserCloudShareManagerRegisterMessage
|| __DATA_CONST.__const _HMUserCloudShareManagerTargetIdentifierUUIDString
|| __DATA_CONST.__const _HMUserFailedAccessoriesKey
|| __DATA_CONST.__const _HMUserMediaContentProfileAccessControlAccessoriesCodingKey
|| __DATA_CONST.__const _HMUserMediaContentProfileAccessControlAccessoryIDsMessageKey
|| __DATA_CONST.__const _HMUserMediaContentProfileAccessControlUpdateMessage
|| __DATA_CONST.__const _HMUserNotificationContentActionURLKey
|| __DATA_CONST.__const _HMUserPairingIdentityCodingKey
|| __DATA_CONST.__const _HMUserPairingIdentityRequestMessage
|| __DATA_CONST.__const _HMUserPrivateSettingsCodingKey
|| __DATA_CONST.__const _HMUserShareClientInfoCodingKey
|| __DATA_CONST.__const _HMUserShareClientPayloadRequestMessage
|| __DATA_CONST.__const _HMUserShareContainerIDCodingKey
|| __DATA_CONST.__const _HMUserShareFromUserCodingKey
|| __DATA_CONST.__const _HMUserShareHomeCodingKey
|| __DATA_CONST.__const _HMUserShareLookupInfoKey
|| __DATA_CONST.__const _HMUserShareLookupRequestMessage
|| __DATA_CONST.__const _HMUserShareToUserCodingKey
|| __DATA_CONST.__const _HMUserShareTokenCodingKey
|| __DATA_CONST.__const _HMUserShareURLCodingKey
|| __DATA_CONST.__const _HMUserSharedSettingsCodingKey
|| __DATA_CONST.__const _HMWorkflowDataKey
|| __DATA_CONST.__const _kAccessAllowedWhenLockedKey
|| __DATA_CONST.__const _kAccessAllowedWhenLockedUpdatedNotificationKey
|| __DATA_CONST.__const _kAccessoriesConfiguredStatusKey
|| __DATA_CONST.__const _kAccessoryIsSuspendCapableCodingKey
|| __DATA_CONST.__const _kAccessoryReprovisionStateUpdateNotificationKey
|| __DATA_CONST.__const _kAccessoryReprovisionedNotificationKey
|| __DATA_CONST.__const _kAccessoryReprovisonStateKey
|| __DATA_CONST.__const _kAddAccessoryProgressNotificationKey
|| __DATA_CONST.__const _kAssistantCurrentHomeIdentifierKey
|| __DATA_CONST.__const _kAudioVolumeSetting
|| __DATA_CONST.__const _kCanCacheHomeConfigurationKey
|| __DATA_CONST.__const _kCanUseCachedHomeConfigurationKey
|| __DATA_CONST.__const _kConfigTestingModeKey
|| __DATA_CONST.__const _kEnableHomeNotificationsNotificationKey
|| __DATA_CONST.__const _kEnableHomeNotificationsRequestKey
|| __DATA_CONST.__const _kFilenameKey
|| __DATA_CONST.__const _kHomeCountKey
|| __DATA_CONST.__const _kHomeNetworkProtectionModeMessageKey
|| __DATA_CONST.__const _kHomesConfiguredStatusKey
|| __DATA_CONST.__const _kIncomingInvitesPresentKey
|| __DATA_CONST.__const _kProvisioningStatusKey
|| __DATA_CONST.__const _kRenameServiceRequestKey
|| __DATA_CONST.__const _kReprovisionAccessoryRequestKey
|| __DATA_CONST.__const _kResidentProvisioningStatusChangedNotificationKey
|| __DATA_CONST.__const _kSearchForAccessoriesNeedingReprovisioningRequestKey
|| __DATA_CONST.__const _kServiceConfigurationStateCodingKey
|| __DATA_CONST.__const _kServiceConfigurationStateKey
|| __DATA_CONST.__const _kServiceConfigurationStateUpdatedNotificationKey
|| __DATA_CONST.__const _kServiceConfiguredNameCodingKey
|| __DATA_CONST.__const _kServiceDefaultNameCodingKey
|| __DATA_CONST.__const _kServiceDefaultNameUpdatedNotificationKey
|| __DATA_CONST.__const _kServiceLabelIndexCodingKey
|| __DATA_CONST.__const _kServiceLabelNamespaceCodingKey
|| __DATA_CONST.__const _kServiceSubtypeCodingKey
|| __DATA_CONST.__const _kServiceSubtypeKey
|| __DATA_CONST.__const _kServiceSubtypeUpdatedNotificationKey
|| __DATA_CONST.__const _kSetAudioVolumeRequestKey
|| __DATA_CONST.__const _kSiriIntentKey
|| __DATA_CONST.__const _kSiriIntentRequestKey
|| __DATA_CONST.__const _kSiriIntentRequestTypeKey
|| __DATA_CONST.__const _kSiriSyncDataValidityKey
|| __DATA_CONST.__const _kSiriSyncRequestingAppKey
|| __DATA_CONST.__const _kSpeakersConfiguredStatusKey
|| __DATA_CONST.__const _kSymptomsCodingKey
|| __DATA_CONST.__const _kUpdateAccessAllowedWhenLockedRequestKey
|| __DATA_CONST.__const _kUpdateUserCamerasAccessLevelRequestKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMActionSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMApplicationData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAssistantAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMCharacteristicWriteAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDelegateCaller
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMEventTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHAPMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHAPMetadataCategory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHAPMetadataCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHAPMetadataService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHome
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHomeAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHomeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHomeManagerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMIncomingHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMMediaContentProfileAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMMediaPlaybackAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMMediaSystem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMMutableArray
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMNetworkRouterFirewallRuleManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMOutgoingHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPBMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPBMetadataCategory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPBMetadataCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPBMetadataService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPendingRequests
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMResidentDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMRoom
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMServiceGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSettingGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSettingsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSettingsCreator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSettingsMessageHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMShortcutAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMTimerTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUserCameraAccess
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUserCloudShareManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUserPresenceAuthorization
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUserPresenceCompute
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMZone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HMContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMActionSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMApplicationData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAssistantAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMCharacteristicWriteAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDelegateCaller
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMEventTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHAPMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHAPMetadataCategory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHAPMetadataCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHAPMetadataService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHome
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHomeAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHomeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHomeManagerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMIncomingHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMMediaContentProfileAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMMediaPlaybackAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMMediaSystem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMMutableArray
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMNetworkRouterFirewallRuleManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMOutgoingHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPBMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPBMetadataCategory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPBMetadataCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPBMetadataService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPendingRequests
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMResidentDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMRoom
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMServiceGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSettingGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSettingsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSettingsCreator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSettingsMessageHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMShortcutAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMTimerTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUserCameraAccess
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUserCloudShareManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUserPresenceAuthorization
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUserPresenceCompute
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMZone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HMContext
|| __TEXT.__const _HMCameraClipEncryptedDataContextInitializationVectorLength
|| __TEXT.__const _HMCameraClipEncryptedDataContextTagLength
|| __TEXT.__const _HMCameraClipManagerAssetContextExpirationBuffer
|| __TEXT.__const _HMHomeMaxMediaPasswordLength
|| __TEXT.__const _VOLUME_MIN_DELTA
|| __TEXT.__text _HMAccessoryAllowedHostPurposeAsString
|| __TEXT.__text _HMAccessoryCurrentNetworkProtectionModeAsString
|| __TEXT.__text _HMAccessoryNetworkProtectionModeAsString
|| __TEXT.__text _HMAccessorySettingConstraintTypeFromString
|| __TEXT.__text _HMAccessorySettingConstraintTypeToString
|| __TEXT.__text _HMAccessorySettingPropertiesFromString
|| __TEXT.__text _HMAccessorySettingPropertiesToString
|| __TEXT.__text _HMAccessorySettingTypeFromString
|| __TEXT.__text _HMAccessorySettingTypeToString
|| __TEXT.__text _HMAccessoryWiFiCredentialTypeAsString
|| __TEXT.__text _HMAreSnapshotsAllowedForCameraAccessMode
|| __TEXT.__text _HMAreStringsEqualIgnoringCase
|| __TEXT.__text _HMAssistantAccessControlOptionsToString
|| __TEXT.__text _HMCameraAccessModeAsString
|| __TEXT.__text _HMCameraSignificantEventTypeAsString
|| __TEXT.__text _HMCameraSignificantEventsFromReasons
|| __TEXT.__text _HMCameraSupportedFeaturesAsString
|| __TEXT.__text _HMDispatchQueueNameString
|| __TEXT.__text _HMEventTriggerActivationStateAsString
|| __TEXT.__text _HMHomeManagerAreAnyAccessoriesConfigured
|| __TEXT.__text _HMHomeManagerAreAnySpeakersConfigured
|| __TEXT.__text _HMHomeManagerAreAnyTelevisionAccessoriesConfigured
|| __TEXT.__text _HMHomeManagerNameValidationOptionsToString
|| __TEXT.__text _HMHomeManagerOptionsToString
|| __TEXT.__text _HMHomeManagerStatusToString
|| __TEXT.__text _HMHomeSupportedFeatureAsString
|| __TEXT.__text _HMIsMotionActivityDetectionAllowedForCameraAccessMode
|| __TEXT.__text _HMIsRecordingAllowedForCameraAccessMode
|| __TEXT.__text _HMIsStreamingAllowedForCameraAccessMode
|| __TEXT.__text _HMIsValidCameraSignificantEvent
|| __TEXT.__text _HMNetworkProtectionModeAsString
|| __TEXT.__text _HMNetworkRouterSupportAsString
|| __TEXT.__text _HMNetworkRouterSupportDisableReasonAsString
|| __TEXT.__text _HMNetworkStatusAsString
|| __TEXT.__text _HMPBAccessoryReferenceReadFrom
|| __TEXT.__text _HMPBActionContainerReadFrom
|| __TEXT.__text _HMPBActionSetReadFrom
|| __TEXT.__text _HMPBCharacteristicReferenceReadFrom
|| __TEXT.__text _HMPBCharacteristicWriteActionReadFrom
|| __TEXT.__text _HMPBEncodeOptionReadFrom
|| __TEXT.__text _HMPBHomeReferenceReadFrom
|| __TEXT.__text _HMPBMediaPlaybackActionReadFrom
|| __TEXT.__text _HMPBMetadataCategoryReadFrom
|| __TEXT.__text _HMPBMetadataCharacteristicReadFrom
|| __TEXT.__text _HMPBMetadataReadFrom
|| __TEXT.__text _HMPBMetadataServiceReadFrom
|| __TEXT.__text _HMPBServiceReferenceReadFrom
|| __TEXT.__text _HMPresenceEventActivationGranularityAsString
|| __TEXT.__text _HMPresenceEventTypeAsString
|| __TEXT.__text _HMPresenceEventUserTypeAsString
|| __TEXT.__text _HMResidentDeviceCapabilitiesDescription
|| __TEXT.__text _HMResidentDeviceStatusDescription
|| __TEXT.__text _HMSettingConstraintTypeToString
|| __TEXT.__text _HMSetupAccessoryProgressAsString
|| __TEXT.__text _HMSoftwareUpdateStateToString
|| __TEXT.__text _HMStringFromCameraClipEncryptionScheme
|| __TEXT.__text _HMStringFromCameraClipSignificantEventConfidenceLevel
|| __TEXT.__text _HMStringFromCameraClipSignificantEventReason
|| __TEXT.__text _HMStringFromHomeLocation
|| __TEXT.__text _HMStringFromIntentRequestType
|| __TEXT.__text _HMUserCameraAccessLevelAsString
|| __TEXT.__text _HMUserDefaultCamerasAccessLevel
|| __TEXT.__text _HMUserIsRecordingAllowedWithCameraAccessLevel
|| __TEXT.__text _HMUserIsStreamingAllowedWithCameraAccessLevel
|| __TEXT.__text _HMUserIsValidCameraAccessLevel
|| __TEXT.__text _HMUserPresenceAuthorizationStatusAsString
|| __TEXT.__text _HMUserPresenceComputeStatusAsString
|| __TEXT.__text _HMUserPrivilegeToString
|| __TEXT.__text ___HMHomeConfirmResident
|| __TEXT.__text _allowedCharValueTypes
|| __TEXT.__text _appendToShortDescription
|| __TEXT.__text _areHomesConfigured
|| __TEXT.__text _areIncomingInvitesPresent
|| __TEXT.__text _describeDataSyncState
|| __TEXT.__text _describeServiceConfigurationState
|| __TEXT.__text _determineConfigurationsCacheDirectory
|| __TEXT.__text _determineHomeKitCacheDirectory
|| __TEXT.__text _encodeRootObject
|| __TEXT.__text _errorAsString
|| __TEXT.__text _eventTypeForPresenceTypeAndGranularity
|| __TEXT.__text _generateURLForHomeKitObject
|| __TEXT.__text _getAssistantConfigurationSnapshot
|| __TEXT.__text _getAssistantConfigurationVersion
|| __TEXT.__text _getHomeConfigurationVersion
|| __TEXT.__text _getLastSyncedAssistantConfigurationVersion
|| __TEXT.__text _getNumberValueForKey
|| __TEXT.__text _getSiriHomeIdentifier
|| __TEXT.__text _granularityForEventType
|| __TEXT.__text _initializeMappingsAndPaths
|| __TEXT.__text _isAllowedCharType
|| __TEXT.__text _isEqualAllowingNil
|| __TEXT.__text _isEqualDeepCompare
|| __TEXT.__text _isPresenceAuthorizationValid
|| __TEXT.__text _isRestoreSupportedForCharacteristic
|| __TEXT.__text _isValidPresenceType
|| __TEXT.__text _localizationKeyForAccessoryCategoryType
|| __TEXT.__text _localizationKeyForCharacteristicType
|| __TEXT.__text _localizationKeyForServiceType
|| __TEXT.__text _localizedDescriptionKeyForError
|| __TEXT.__text _localizedWiFiStringKey
|| __TEXT.__text _mapInternalCameraErrorCodes
|| __TEXT.__text _playbackStateAsString
|| __TEXT.__text _presenceTypeForEventTypeAndGranularity
|| __TEXT.__text _removeConfigurationsCacheDirectory
|| __TEXT.__text _removeHomeKitCacheDirectory
|| __TEXT.__text _runOnMainQueue
|| __TEXT.__text _userConsentAsString
|| __TEXT.__text _userTypeForPresenceTypeAndGranularity
|| __TEXT.__text _usersListApplicable
__ Accounts: _OBJC_CLASS_$_ACAccount
__ AuthKit: _OBJC_CLASS_$_AKAnisetteData
__ AuthKit: _OBJC_CLASS_$_AKDevice
__ CloudKit: _OBJC_CLASS_$_CKDeviceToDeviceShareInvitationToken
__ CloudKit: _OBJC_CLASS_$_CKFetchShareParticipantsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKShare
__ CloudKit: _OBJC_CLASS_$_CKUserIdentityLookupInfo
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreLocation: _OBJC_CLASS_$_CLBeaconRegion
__ CoreLocation: _OBJC_CLASS_$_CLCircularRegion
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _OBJC_CLASS_$_CLRegion
__ CoreUtils: _NSAppendPrintF
__ CoreUtils: _NSPrintF
__ CoreUtils: _NSRandomData
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedFileSizeDescription
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ HMFoundation: _HMFBooleanToString
__ HMFoundation: _HMFEqualObjects
__ HMFoundation: _HMFGetLogCategory
__ HMFoundation: _HMFGetLogIdentifier
__ HMFoundation: _HMFHomeKitLoggingSubsystem
__ HMFoundation: _HMFLocationAuthorizationUpdatedNotification
__ HMFoundation: _HMFMethodDescription
__ HMFoundation: _HMFObjectDescription
__ HMFoundation: _HMFProductInfoFatsaOSVersion
__ HMFoundation: _OBJC_CLASS_$_HMFActivity
__ HMFoundation: _OBJC_CLASS_$_HMFAttributeDescription
__ HMFoundation: _OBJC_CLASS_$_HMFDigest
__ HMFoundation: _OBJC_CLASS_$_HMFKey
__ HMFoundation: _OBJC_CLASS_$_HMFLocationAuthorization
__ HMFoundation: _OBJC_CLASS_$_HMFLogCategory
__ HMFoundation: _OBJC_CLASS_$_HMFMessage
__ HMFoundation: _OBJC_CLASS_$_HMFMessageDestination
__ HMFoundation: _OBJC_CLASS_$_HMFMessageDispatcher
__ HMFoundation: _OBJC_CLASS_$_HMFMessageTransport
__ HMFoundation: _OBJC_CLASS_$_HMFMutableMessage
__ HMFoundation: _OBJC_CLASS_$_HMFOSTransaction
__ HMFoundation: _OBJC_CLASS_$_HMFObject
__ HMFoundation: _OBJC_CLASS_$_HMFOperation
__ HMFoundation: _OBJC_CLASS_$_HMFPairingIdentity
__ HMFoundation: _OBJC_CLASS_$_HMFPreferences
__ HMFoundation: _OBJC_CLASS_$_HMFPrivateObjectFormatter
__ HMFoundation: _OBJC_CLASS_$_HMFScheduler
__ HMFoundation: _OBJC_CLASS_$_HMFSoftwareVersion
__ HMFoundation: _OBJC_CLASS_$_HMFTimer
__ HMFoundation: _OBJC_CLASS_$_HMFUnfairLock
__ HMFoundation: _OBJC_CLASS_$_HMFWiFiNetworkInfo
__ HMFoundation: _OBJC_METACLASS_$_HMFMessageTransport
__ HMFoundation: _OBJC_METACLASS_$_HMFObject
__ HMFoundation: _OBJC_METACLASS_$_HMFOperation
__ HMFoundation: _kDumpStateStateKey
__ Intents: _OBJC_CLASS_$_INControlHomeIntent
__ NetAppsUtilities: _OBJC_CLASS_$_NAFuture
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ QuartzCore: _OBJC_CLASS_$_CAContext
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ SAObjects: _OBJC_CLASS_$_SAHACommandCompleted
__ SAObjects: _SAHACommandOutcomeFOUND_NO_MATCHING_ENTITIESValue
__ Security: _SecPasswordCreateWithRandomDigits
__ Security: _SecPasswordIsPasswordWeak
__ TCC: _TCCAccessPreflight
__ TCC: _TCCAccessRequest
__ TCC: _kTCCServiceMicrophone
__ TCC: _kTCCServiceWillow
__ TouchRemote: _OBJC_CLASS_$_TRRequestMessage
__ TouchRemote: _OBJC_CLASS_$_TRResponseMessage
__ TouchRemote: _OBJC_METACLASS_$_TRRequestMessage
__ TouchRemote: _OBJC_METACLASS_$_TRResponseMessage
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: __UIApplicationLinkedOnVersion
__ UIKit: ___UIApplicationLinkedOnOrAfter
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CCCryptorGCMOneshotDecrypt
__ libSystem.B.dylib: _CCCryptorGCMOneshotEncrypt
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_suspend
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
_HMCameraSettingsControl : _HMCameraControl
 @property  HMCharacteristic *nightVision
 @property  HMCharacteristic *currentHorizontalTilt
 @property  HMCharacteristic *targetHorizontalTilt
 @property  HMCharacteristic *currentVerticalTilt
 @property  HMCharacteristic *targetVerticalTilt
 @property  HMCharacteristic *opticalZoom
 @property  HMCharacteristic *digitalZoom
 @property  HMCharacteristic *imageRotation
 @property  HMCharacteristic *imageMirroring

  // instance methods
  -[_HMCameraSettingsControl .cxx_destruct]
  -[_HMCameraSettingsControl initWithCameraProfile:service:profileUniqueIdentifier:]
  -[_HMCameraSettingsControl nightVision]
  -[_HMCameraSettingsControl setNightVision:]
  -[_HMCameraSettingsControl currentHorizontalTilt]
  -[_HMCameraSettingsControl setCurrentHorizontalTilt:]
  -[_HMCameraSettingsControl targetHorizontalTilt]
  -[_HMCameraSettingsControl setTargetHorizontalTilt:]
  -[_HMCameraSettingsControl currentVerticalTilt]
  -[_HMCameraSettingsControl setCurrentVerticalTilt:]
  -[_HMCameraSettingsControl targetVerticalTilt]
  -[_HMCameraSettingsControl setTargetVerticalTilt:]
  -[_HMCameraSettingsControl opticalZoom]
  -[_HMCameraSettingsControl setOpticalZoom:]
  -[_HMCameraSettingsControl digitalZoom]
  -[_HMCameraSettingsControl setDigitalZoom:]
  -[_HMCameraSettingsControl imageRotation]
  -[_HMCameraSettingsControl setImageRotation:]
  -[_HMCameraSettingsControl imageMirroring]
  -[_HMCameraSettingsControl setImageMirroring:]


HMLocationEvent : HMEvent <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  HMFLocationAuthorization *authorization
 @property  int locationAuthorization
 @property  CLRegion *region

  // class methods
  +[HMLocationEvent supportsSecureCoding]
  +[HMLocationEvent createWithDictionary:home:]

  // instance methods
  -[HMLocationEvent dealloc]
  -[HMLocationEvent copyWithZone:]
  -[HMLocationEvent mutableCopyWithZone:]
  -[HMLocationEvent encodeWithCoder:]
  -[HMLocationEvent initWithCoder:]
  -[HMLocationEvent .cxx_destruct]
  -[HMLocationEvent region]
  -[HMLocationEvent setRegion:]
  -[HMLocationEvent authorization]
  -[HMLocationEvent initWithRegion:]
  -[HMLocationEvent __configureWithContext:eventTrigger:]
  -[HMLocationEvent locationAuthorization]
  -[HMLocationEvent setLocationAuthorization:]
  -[HMLocationEvent _updateRegion:completionHandler:]
  -[HMLocationEvent _serializeForAdd]
  -[HMLocationEvent initWithDict:region:]
  -[HMLocationEvent _retrieveLocationEvent]
  -[HMLocationEvent updateRegion:completionHandler:]
  -[HMLocationEvent _handleEventUpdatedNotification:]
  -[HMLocationEvent __locationAuthorizationUpdated:]
  -[HMLocationEvent _mergeWithNewObject:operations:]


HMMutableLocationEvent : HMLocationEvent
 @property  CLRegion *region


HMCameraStreamControl : HMCameraControl <_HMCameraStreamControlDelegate>
 @property  _HMCameraStreamControl *streamControl
 @property  <HMCameraStreamControlDelegate> *delegate
 @property  unsigned long streamState
 @property  HMCameraStream *cameraStream
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMCameraStreamControl delegate]
  -[HMCameraStreamControl setDelegate:]
  -[HMCameraStreamControl .cxx_destruct]
  -[HMCameraStreamControl streamControl]
  -[HMCameraStreamControl streamState]
  -[HMCameraStreamControl cameraStream]
  -[HMCameraStreamControl startStreamWithPreferences:]
  -[HMCameraStreamControl stopStream]
  -[HMCameraStreamControl cameraStreamControlDidStartStream:]
  -[HMCameraStreamControl cameraStreamControl:didStopStream:]
  -[HMCameraStreamControl initWithStreamControl:]
  -[HMCameraStreamControl startStream]
  -[HMCameraStreamControl setStreamControl:]


HMAccessorySettingConstraint : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSUUID *identifier
 @property  long long type
 @property  <NSCopying><NSSecureCoding> *value

  // class methods
  +[HMAccessorySettingConstraint supportsSecureCoding]
  +[HMAccessorySettingConstraint shortDescription]
  +[HMAccessorySettingConstraint supportedValueClasses]

  // instance methods
  -[HMAccessorySettingConstraint init]
  -[HMAccessorySettingConstraint isEqual:]
  -[HMAccessorySettingConstraint copyWithZone:]
  -[HMAccessorySettingConstraint type]
  -[HMAccessorySettingConstraint encodeWithCoder:]
  -[HMAccessorySettingConstraint initWithCoder:]
  -[HMAccessorySettingConstraint .cxx_destruct]
  -[HMAccessorySettingConstraint identifier]
  -[HMAccessorySettingConstraint value]
  -[HMAccessorySettingConstraint shortDescription]
  -[HMAccessorySettingConstraint descriptionWithPointer:]
  -[HMAccessorySettingConstraint initWithType:value:]


HMCharacteristic : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, HMObjectMerge>
 @property  NSDictionary *serializedDictionaryRepresentation
 @property  _HMContext *context
 @property  NSNumber *instanceID
 @property  HMService *service
 @property  NSString *characteristicType
 @property  NSArray *properties
 @property  BOOL requiresDeviceUnlock
 @property  id value
 @property  BOOL notificationEnabledByThisClient
 @property  BOOL notificationEnabled
 @property  NSDate *valueUpdatedTime
 @property  NSDate *notificationEnabledTime
 @property  BOOL hasAuthorizationData
 @property  NSString *localizedDescription
 @property  HMCharacteristicMetadata *metadata
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCharacteristic supportsSecureCoding]
  +[HMCharacteristic logCategory]
  +[HMCharacteristic _characteristicTypeAsString:]
  +[HMCharacteristic __localizedDescriptionForCharacteristicType:]
  +[HMCharacteristic localizedDescriptionForCharacteristicType:]
  +[HMCharacteristic characteristicWithCharacteristicReference:home:]
  +[HMCharacteristic characteristicWithSerializedDictionaryRepresentation:home:]

  // instance methods
  -[HMCharacteristic init]
  -[HMCharacteristic isEqual:]
  -[HMCharacteristic localizedDescription]
  -[HMCharacteristic encodeWithCoder:]
  -[HMCharacteristic initWithCoder:]
  -[HMCharacteristic .cxx_destruct]
  -[HMCharacteristic value]
  -[HMCharacteristic setValue:]
  -[HMCharacteristic context]
  -[HMCharacteristic uniqueIdentifier]
  -[HMCharacteristic setContext:]
  -[HMCharacteristic properties]
  -[HMCharacteristic metadata]
  -[HMCharacteristic characteristicType]
  -[HMCharacteristic setProperties:]
  -[HMCharacteristic service]
  -[HMCharacteristic setService:]
  -[HMCharacteristic logIdentifier]
  -[HMCharacteristic instanceID]
  -[HMCharacteristic _mergeWithNewObject:operations:]
  -[HMCharacteristic mapHAPProperties:]
  -[HMCharacteristic setCharacteristicType:]
  -[HMCharacteristic notificationEnabledByThisClient]
  -[HMCharacteristic setNotificationEnabledByThisClient:]
  -[HMCharacteristic requiresDeviceUnlock]
  -[HMCharacteristic setRequiresDeviceUnlock:]
  -[HMCharacteristic hasAuthorizationData]
  -[HMCharacteristic setHasAuthorizationData:]
  -[HMCharacteristic valueUpdatedTime]
  -[HMCharacteristic setValueUpdatedTime:]
  -[HMCharacteristic isNotificationEnabled]
  -[HMCharacteristic setNotificationEnabled:]
  -[HMCharacteristic notificationEnabledTime]
  -[HMCharacteristic setNotificationEnabledTime:]
  -[HMCharacteristic _writeValue:completionHandler:]
  -[HMCharacteristic _readValueWithCompletionHandler:]
  -[HMCharacteristic _enableNotification:completionHandler:]
  -[HMCharacteristic _updateAuthorizationData:completionHandler:]
  -[HMCharacteristic __configureWithContext:service:]
  -[HMCharacteristic setValueUpdateTime:]
  -[HMCharacteristic _updateValue:updateTime:]
  -[HMCharacteristic writeValue:completionHandler:]
  -[HMCharacteristic readValueWithCompletionHandler:]
  -[HMCharacteristic enableNotification:completionHandler:]
  -[HMCharacteristic updateAuthorizationData:completionHandler:]
  -[HMCharacteristic _characteristicTypeDescription]
  -[HMCharacteristic serializedDictionaryRepresentation]


HMUserListRemoteViewController : _UIRemoteViewController /System/Library/Frameworks/Intents.framework/Intents <HMUserManagementRemoteHost>
 @property  <HMUserManagementRemoteHost> *delegate

  // class methods
  +[HMUserListRemoteViewController exportedInterface]
  +[HMUserListRemoteViewController serviceViewControllerInterface]
  +[HMUserListRemoteViewController requestViewControllerWithConnectionHandler:]

  // instance methods
  -[HMUserListRemoteViewController delegate]
  -[HMUserListRemoteViewController setDelegate:]
  -[HMUserListRemoteViewController .cxx_destruct]
  -[HMUserListRemoteViewController viewDidLoad]
  -[HMUserListRemoteViewController viewServiceDidTerminateWithError:]
  -[HMUserListRemoteViewController userManagementDidFinishWithError:]
  -[HMUserListRemoteViewController userManagementDidLoad]


HMCameraControl : NSObject /usr/lib/libSystem.B.dylib

HMPredicateUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[HMPredicateUtilities validatePredicate:]
  +[HMPredicateUtilities notificationTriggersInPredicate:]
  +[HMPredicateUtilities rewritePredicateForClient:home:]
  +[HMPredicateUtilities rewritePredicateForDaemon:characteristicIsInvalid:]
  +[HMPredicateUtilities containsPresenceEvents:]
  +[HMPredicateUtilities areOnlyHourAndMinuteSet:]


HMHomeAccessControl : HMAccessControl
 @property  BOOL owner
 @property  BOOL administrator
 @property  BOOL remoteAccessAllowed
 @property  HMUserPresenceAuthorization *presenceAuthStatus
 @property  HMUserPresenceCompute *presenceComputeStatus
 @property  HMUserCameraAccess *camerasAccess

  // instance methods
  -[HMHomeAccessControl isEqual:]
  -[HMHomeAccessControl .cxx_destruct]
  -[HMHomeAccessControl setOwner:]
  -[HMHomeAccessControl isOwner]
  -[HMHomeAccessControl presenceAuthorizationStatus]
  -[HMHomeAccessControl isAdministrator]
  -[HMHomeAccessControl setAdministrator:]
  -[HMHomeAccessControl isRemoteAccessAllowed]
  -[HMHomeAccessControl presenceComputationStatus]
  -[HMHomeAccessControl camerasAccess]
  -[HMHomeAccessControl updatePresenceAuthorizationStatus:completionHandler:]
  -[HMHomeAccessControl initWithUser:owner:administratorPrivilege:remoteAccess:presenceAuthStatus:presenceComputeStatus:camerasAccess:]
  -[HMHomeAccessControl setRemoteAccessAllowed:]
  -[HMHomeAccessControl presenceAuthStatus]
  -[HMHomeAccessControl setPresenceAuthStatus:]
  -[HMHomeAccessControl presenceComputeStatus]
  -[HMHomeAccessControl setPresenceComputeStatus:]
  -[HMHomeAccessControl setCamerasAccess:]
  -[HMHomeAccessControl camerasAccessLevel]
  -[HMHomeAccessControl updateAdministratorAccess:completionHandler:]
  -[HMHomeAccessControl updateRemoteAccess:completionHandler:]
  -[HMHomeAccessControl updateCamerasAccessLevel:completionHandler:]


HMXPCClientConnectionProxy : HMFMessageTransport /System/Library/Frameworks/Foundation.framework/Foundation <HMXPCMessageTransport>
 @property  @? refreshHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMXPCClientConnectionProxy messageWithName:identifier:target:payload:responseHandler:]

  // instance methods
  -[HMXPCClientConnectionProxy .cxx_destruct]
  -[HMXPCClientConnectionProxy sendMessage:completionHandler:]
  -[HMXPCClientConnectionProxy handleMessage:]
  -[HMXPCClientConnectionProxy handleMessage:responseHandler:]
  -[HMXPCClientConnectionProxy refreshHandler]
  -[HMXPCClientConnectionProxy initWithRefreshHandler:]
  -[HMXPCClientConnectionProxy setRefreshHandler:]


HMXPCClient : HMFMessageTransport /System/Library/Frameworks/Foundation.framework/Foundation
 @property  NSXPCConnection *connection
 @property  BOOL connectionValid
 @property  BOOL requiresCheckin
 @property  int notifyRegisterToken
 @property  BOOL notifyRegistered
 @property  @? reconnectionHandler

  // instance methods
  -[HMXPCClient init]
  -[HMXPCClient dealloc]
  -[HMXPCClient .cxx_destruct]
  -[HMXPCClient connection]
  -[HMXPCClient setConnection:]
  -[HMXPCClient sendMessage:completionHandler:]
  -[HMXPCClient notifyRegistered]
  -[HMXPCClient notifyRegisterToken]
  -[HMXPCClient connectionValid]
  -[HMXPCClient reconnectionHandler]
  -[HMXPCClient setRequiresCheckin:]
  -[HMXPCClient setConnectionValid:]
  -[HMXPCClient requiresCheckin]
  -[HMXPCClient setNotifyRegisterToken:]
  -[HMXPCClient setNotifyRegistered:]
  -[HMXPCClient setReconnectionHandler:]
  -[HMXPCClient registerReconnectionHandler:]


HMCameraClipEncryptedDataContext : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSData *initializationVector
 @property  NSData *ciphertext
 @property  NSData *tag
 @property  NSData *dataRepresentation

  // instance methods
  -[HMCameraClipEncryptedDataContext isEqual:]
  -[HMCameraClipEncryptedDataContext copyWithZone:]
  -[HMCameraClipEncryptedDataContext .cxx_destruct]
  -[HMCameraClipEncryptedDataContext dataRepresentation]
  -[HMCameraClipEncryptedDataContext initWithDataRepresentation:]
  -[HMCameraClipEncryptedDataContext tag]
  -[HMCameraClipEncryptedDataContext initializationVector]
  -[HMCameraClipEncryptedDataContext initWithInitializationVector:ciphertext:tag:]
  -[HMCameraClipEncryptedDataContext ciphertext]


_HMCameraStream : _HMCameraSource <HMFMessageReceiver>
 @property  unsigned long audioStreamSetting
 @property  NSNumber *audioVolume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // instance methods
  -[_HMCameraStream dealloc]
  -[_HMCameraStream .cxx_destruct]
  -[_HMCameraStream audioVolume]
  -[_HMCameraStream setAudioVolume:]
  -[_HMCameraStream _updateAudioVolume:completionHandler:]
  -[_HMCameraStream _updateAudioStreamSetting:completionHandler:]
  -[_HMCameraStream _issueUpdateAudioStreamSettingRequest:completionHandler:]
  -[_HMCameraStream _handleAudioStreamSettingUpdate:completionHandler:error:]
  -[_HMCameraStream setAudioStreamSetting:]
  -[_HMCameraStream initWithSessionID:slotIdentifier:context:profileUniqueIdentifier:aspectRatio:audioStreamSetting:]
  -[_HMCameraStream audioStreamSetting]
  -[_HMCameraStream updateAudioVolume:completionHandler:]
  -[_HMCameraStream updateAudioStreamSetting:completionHandler:]


HMSymptom : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  long long type
 @property  NSString *localizedTitle

  // class methods
  +[HMSymptom supportsSecureCoding]
  +[HMSymptom symptomWithType:]
  +[HMSymptom unarchive:]
  +[HMSymptom unarchiveSymptomDict:]
  +[HMSymptom archive:]
  +[HMSymptom archiveSymptomDict:]

  // instance methods
  -[HMSymptom isEqual:]
  -[HMSymptom type]
  -[HMSymptom encodeWithCoder:]
  -[HMSymptom initWithCoder:]
  -[HMSymptom .cxx_destruct]
  -[HMSymptom initWithType:]
  -[HMSymptom localizedTitle]


HMDevice : NSObject /usr/lib/libSystem.B.dylib <HMFObject, HMObjectMerge, NSSecureCoding>
 @property  NSUUID *idsIdentifier
 @property  HMFKey *rapportIRK
 @property  NSUUID *uuid
 @property  NSString *name
 @property  NSUUID *uniqueIdentifier
 @property  BOOL currentDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMDevice supportsSecureCoding]
  +[HMDevice shortDescription]

  // instance methods
  -[HMDevice init]
  -[HMDevice isEqual:]
  -[HMDevice name]
  -[HMDevice encodeWithCoder:]
  -[HMDevice initWithCoder:]
  -[HMDevice .cxx_destruct]
  -[HMDevice setName:]
  -[HMDevice uuid]
  -[HMDevice uniqueIdentifier]
  -[HMDevice shortDescription]
  -[HMDevice privateDescription]
  -[HMDevice rapportIRK]
  -[HMDevice attributeDescriptions]
  -[HMDevice idsIdentifier]
  -[HMDevice _mergeWithNewObject:operations:]
  -[HMDevice setRapportIRK:]
  -[HMDevice isCurrentDevice]
  -[HMDevice IDSDeviceForIDSService:]


HMCharacteristicEvent : HMEvent <NSSecureCoding, HMCharacteristicEventProtocol, NSCopying, NSMutableCopying>
 @property  <NSCopying> *triggerValue
 @property  HMCharacteristic *characteristic
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCharacteristicEvent supportsSecureCoding]
  +[HMCharacteristicEvent createWithDictionary:home:]

  // instance methods
  -[HMCharacteristicEvent copyWithZone:]
  -[HMCharacteristicEvent mutableCopyWithZone:]
  -[HMCharacteristicEvent encodeWithCoder:]
  -[HMCharacteristicEvent initWithCoder:]
  -[HMCharacteristicEvent .cxx_destruct]
  -[HMCharacteristicEvent setCharacteristic:]
  -[HMCharacteristicEvent characteristic]
  -[HMCharacteristicEvent setTriggerValue:]
  -[HMCharacteristicEvent triggerValue]
  -[HMCharacteristicEvent _serializeForAdd]
  -[HMCharacteristicEvent _handleEventUpdatedNotification:]
  -[HMCharacteristicEvent _mergeWithNewObject:operations:]
  -[HMCharacteristicEvent initWithDict:characteristic:triggerValue:]
  -[HMCharacteristicEvent _updateTriggerValue:completionHandler:]
  -[HMCharacteristicEvent initWithCharacteristic:triggerValue:]
  -[HMCharacteristicEvent updateTriggerValue:completionHandler:]


HMMutableCharacteristicEvent : HMCharacteristicEvent
 @property  HMCharacteristic *characteristic
 @property  <NSCopying> *triggerValue


HMAccessoryCategory : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, HMObjectMerge, HMFDumpState>
 @property  NSString *categoryType
 @property  NSString *name
 @property  BOOL isWiFiRouterAccessoryCategory
 @property  BOOL isTelevisionAccessoryCategory
 @property  NSString *localizedDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[HMAccessoryCategory supportsSecureCoding]

  // instance methods
  -[HMAccessoryCategory init]
  -[HMAccessoryCategory isEqual:]
  -[HMAccessoryCategory name]
  -[HMAccessoryCategory localizedDescription]
  -[HMAccessoryCategory encodeWithCoder:]
  -[HMAccessoryCategory initWithCoder:]
  -[HMAccessoryCategory .cxx_destruct]
  -[HMAccessoryCategory setName:]
  -[HMAccessoryCategory uniqueIdentifier]
  -[HMAccessoryCategory categoryType]
  -[HMAccessoryCategory setCategoryType:]
  -[HMAccessoryCategory initWithType:name:]
  -[HMAccessoryCategory dumpState]
  -[HMAccessoryCategory _mergeWithNewObject:operations:]
  -[HMAccessoryCategory isTelevisionAccessoryCategory]
  -[HMAccessoryCategory isWiFiRouterAccessoryCategory]


HMAccessorySetupCompletedInfo : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSArray *addedAccessoryUUIDs

  // class methods
  +[HMAccessorySetupCompletedInfo supportsSecureCoding]

  // instance methods
  -[HMAccessorySetupCompletedInfo encodeWithCoder:]
  -[HMAccessorySetupCompletedInfo initWithCoder:]
  -[HMAccessorySetupCompletedInfo .cxx_destruct]
  -[HMAccessorySetupCompletedInfo addedAccessoryUUIDs]
  -[HMAccessorySetupCompletedInfo initWithAccessoryList:]
  -[HMAccessorySetupCompletedInfo setAddedAccessoryUUIDs:]


HMNumberRange : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *minValue
 @property  NSNumber *maxValue

  // class methods
  +[HMNumberRange numberRangeWithMaxValue:]
  +[HMNumberRange numberRangeWithMinValue:]
  +[HMNumberRange numberRangeWithMinValue:maxValue:]

  // instance methods
  -[HMNumberRange .cxx_destruct]
  -[HMNumberRange maxValue]
  -[HMNumberRange minValue]
  -[HMNumberRange initWithMinValue:maxValue:]


HMCharacteristicThresholdRangeEvent : HMEvent <HMCharacteristicEventProtocol, NSSecureCoding, NSCopying, NSMutableCopying>
 @property  HMCharacteristic *characteristic
 @property  HMNumberRange *thresholdRange
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCharacteristicThresholdRangeEvent supportsSecureCoding]
  +[HMCharacteristicThresholdRangeEvent createWithDictionary:home:]
  +[HMCharacteristicThresholdRangeEvent isSupportedForHome:]

  // instance methods
  -[HMCharacteristicThresholdRangeEvent copyWithZone:]
  -[HMCharacteristicThresholdRangeEvent mutableCopyWithZone:]
  -[HMCharacteristicThresholdRangeEvent encodeWithCoder:]
  -[HMCharacteristicThresholdRangeEvent initWithCoder:]
  -[HMCharacteristicThresholdRangeEvent .cxx_destruct]
  -[HMCharacteristicThresholdRangeEvent setCharacteristic:]
  -[HMCharacteristicThresholdRangeEvent characteristic]
  -[HMCharacteristicThresholdRangeEvent _serializeForAdd]
  -[HMCharacteristicThresholdRangeEvent _handleEventUpdatedNotification:]
  -[HMCharacteristicThresholdRangeEvent initWithDict:characteristic:thresholdRange:]
  -[HMCharacteristicThresholdRangeEvent setThresholdRange:]
  -[HMCharacteristicThresholdRangeEvent thresholdRange]
  -[HMCharacteristicThresholdRangeEvent _updateThresholdRange:completionHandler:]
  -[HMCharacteristicThresholdRangeEvent initWithCharacteristic:thresholdRange:]
  -[HMCharacteristicThresholdRangeEvent updateThresholdRange:completionHandler:]


HMMutableCharacteristicThresholdRangeEvent : HMCharacteristicThresholdRangeEvent
 @property  HMCharacteristic *characteristic
 @property  HMNumberRange *thresholdRange


HMCameraSnapshot : HMCameraSource
 @property  _HMCameraSnapshot *snapshot
 @property  NSDate *captureDate

  // instance methods
  -[HMCameraSnapshot .cxx_destruct]
  -[HMCameraSnapshot snapshot]
  -[HMCameraSnapshot setSnapshot:]
  -[HMCameraSnapshot initWithSnapshot:]
  -[HMCameraSnapshot captureDate]


_HMCameraSnapshotControl : _HMCameraControl
 @property  <_HMCameraSnapshotControlDelegate> *delegate
 @property  HMCameraSnapshot *mostRecentSnapshot

  // instance methods
  -[_HMCameraSnapshotControl delegate]
  -[_HMCameraSnapshotControl setDelegate:]
  -[_HMCameraSnapshotControl .cxx_destruct]
  -[_HMCameraSnapshotControl takeSnapshot]
  -[_HMCameraSnapshotControl _handleMostSnapshot:]
  -[_HMCameraSnapshotControl _takeSnapshot]
  -[_HMCameraSnapshotControl _callDelegate:error:]
  -[_HMCameraSnapshotControl _handleSnapshot:error:cameraSessionID:mostRecent:]
  -[_HMCameraSnapshotControl mostRecentSnapshot]
  -[_HMCameraSnapshotControl setMostRecentSnapshot:]
  -[_HMCameraSnapshotControl _callMostRecentSnapshotUpdateDelegate]
  -[_HMCameraSnapshotControl _fetchCameraSnapshotForBulletinContext:completionHandler:]
  -[_HMCameraSnapshotControl _handleCreateSnapshotWithBulletinContext:error:cameraSessionID:completionHandler:]
  -[_HMCameraSnapshotControl initWithCameraProfile:service:profileUniqueIdentifier:mostRecentSnapshot:]
  -[_HMCameraSnapshotControl _registerNotificationHandlers]
  -[_HMCameraSnapshotControl fetchCameraSnapshotForBulletinContext:completionHandler:]
  -[_HMCameraSnapshotControl _mergeNewSnapshot:operations:]


HMDurationEvent : HMTimeEvent <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  double duration

  // class methods
  +[HMDurationEvent supportsSecureCoding]
  +[HMDurationEvent createWithDictionary:home:]

  // instance methods
  -[HMDurationEvent copyWithZone:]
  -[HMDurationEvent mutableCopyWithZone:]
  -[HMDurationEvent encodeWithCoder:]
  -[HMDurationEvent initWithCoder:]
  -[HMDurationEvent duration]
  -[HMDurationEvent setOffset:]
  -[HMDurationEvent setDuration:]
  -[HMDurationEvent initWithDuration:]
  -[HMDurationEvent _serializeForAdd]
  -[HMDurationEvent _handleEventUpdatedNotification:]
  -[HMDurationEvent initWithDict:duration:]
  -[HMDurationEvent _updateDuration:completionHandler:]
  -[HMDurationEvent updateDuration:completionHandler:]


HMMutableDurationEvent : HMDurationEvent
 @property  double duration


HMResidentDevice : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, HMFObject, HMObjectMerge, NSSecureCoding>
 @property  _HMContext *context
 @property  BOOL enabled
 @property  unsigned long status
 @property  unsigned long capabilities
 @property  HMHome *home
 @property  NSUUID *accountIdentifier
 @property  NSUUID *uuid
 @property  <HMResidentDeviceDelegate> *delegate
 @property  NSUUID *uniqueIdentifier
 @property  HMDevice *device
 @property  NSString *name
 @property  BOOL currentDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMResidentDevice supportsSecureCoding]
  +[HMResidentDevice shortDescription]
  +[HMResidentDevice logCategory]

  // instance methods
  -[HMResidentDevice init]
  -[HMResidentDevice name]
  -[HMResidentDevice setEnabled:]
  -[HMResidentDevice encodeWithCoder:]
  -[HMResidentDevice initWithCoder:]
  -[HMResidentDevice delegate]
  -[HMResidentDevice setDelegate:]
  -[HMResidentDevice .cxx_destruct]
  -[HMResidentDevice uuid]
  -[HMResidentDevice status]
  -[HMResidentDevice context]
  -[HMResidentDevice uniqueIdentifier]
  -[HMResidentDevice isEnabled]
  -[HMResidentDevice setContext:]
  -[HMResidentDevice device]
  -[HMResidentDevice accountIdentifier]
  -[HMResidentDevice home]
  -[HMResidentDevice setStatus:]
  -[HMResidentDevice shortDescription]
  -[HMResidentDevice setAccountIdentifier:]
  -[HMResidentDevice capabilities]
  -[HMResidentDevice setCapabilities:]
  -[HMResidentDevice privateDescription]
  -[HMResidentDevice setHome:]
  -[HMResidentDevice logIdentifier]
  -[HMResidentDevice attributeDescriptions]
  -[HMResidentDevice _mergeWithNewObject:operations:]
  -[HMResidentDevice isCurrentDevice]
  -[HMResidentDevice __configureWithContext:home:]
  -[HMResidentDevice updatedEnabled:completionHandler:]
  -[HMResidentDevice handleRuntimeStateUpdate:]


HMCameraStreamAudioPreferences : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSNumber *volume
 @property  NSSet *codecs

  // class methods
  +[HMCameraStreamAudioPreferences supportsSecureCoding]

  // instance methods
  -[HMCameraStreamAudioPreferences isEqual:]
  -[HMCameraStreamAudioPreferences encodeWithCoder:]
  -[HMCameraStreamAudioPreferences initWithCoder:]
  -[HMCameraStreamAudioPreferences .cxx_destruct]
  -[HMCameraStreamAudioPreferences volume]
  -[HMCameraStreamAudioPreferences codecs]
  -[HMCameraStreamAudioPreferences initWithVolume:codecs:]


HMCameraStreamVideoPreferences : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSSet *resolutions

  // class methods
  +[HMCameraStreamVideoPreferences supportsSecureCoding]

  // instance methods
  -[HMCameraStreamVideoPreferences isEqual:]
  -[HMCameraStreamVideoPreferences encodeWithCoder:]
  -[HMCameraStreamVideoPreferences initWithCoder:]
  -[HMCameraStreamVideoPreferences .cxx_destruct]
  -[HMCameraStreamVideoPreferences resolutions]
  -[HMCameraStreamVideoPreferences initWithResolutions:]


HMCameraStreamPreferences : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  HMCameraStreamAudioPreferences *audioPreferences
 @property  HMCameraStreamVideoPreferences *videoPreferences

  // class methods
  +[HMCameraStreamPreferences supportsSecureCoding]

  // instance methods
  -[HMCameraStreamPreferences isEqual:]
  -[HMCameraStreamPreferences encodeWithCoder:]
  -[HMCameraStreamPreferences initWithCoder:]
  -[HMCameraStreamPreferences .cxx_destruct]
  -[HMCameraStreamPreferences audioPreferences]
  -[HMCameraStreamPreferences videoPreferences]
  -[HMCameraStreamPreferences initWithAudioPreferences:videoPreferences:]


HMDelegateCaller : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[HMDelegateCaller delegateCallerWithOperationQueue:]

  // instance methods
  -[HMDelegateCaller init]
  -[HMDelegateCaller initWithQueue:]
  -[HMDelegateCaller callCompletion:error:]
  -[HMDelegateCaller invokeBlock:]
  -[HMDelegateCaller callCompletion:error:snapshot:]
  -[HMDelegateCaller _localizedError:]
  -[HMDelegateCaller callCompletion:error:obj:]
  -[HMDelegateCaller callCompletion:obj:error:]
  -[HMDelegateCaller callCompletion:value:error:]
  -[HMDelegateCaller callCompletion:errorString:]
  -[HMDelegateCaller callCompletion:error:dictionary:]
  -[HMDelegateCaller callCompletion:isUsingHomeKit:isUsingCloudServices:error:]
  -[HMDelegateCaller callCompletion:home:error:]
  -[HMDelegateCaller callCompletion:room:error:]
  -[HMDelegateCaller callCompletion:zone:error:]
  -[HMDelegateCaller callCompletion:serviceGroup:error:]
  -[HMDelegateCaller callCompletion:actionSet:error:]
  -[HMDelegateCaller callCompletion:error:boolValue:array:]
  -[HMDelegateCaller callCompletion:error:array:]
  -[HMDelegateCaller callCompletion:array:additionalAccessoryInfo:error:]
  -[HMDelegateCaller callCompletion:array:]
  -[HMDelegateCaller callCompletion:invitations:error:]
  -[HMDelegateCaller callCompletion:user:error:]
  -[HMDelegateCaller callCompletion:error:proxiedDevice:]
  -[HMDelegateCaller callCompletion:error:mediaSystem:]
  -[HMDelegateCaller callCompletion:value:conflictName:error:]


__HMMainThreadDelegateCaller : HMDelegateCaller
  // instance methods
  -[__HMMainThreadDelegateCaller invokeBlock:]


__HMQueueDelegateCaller : HMDelegateCaller
  // instance methods
  -[__HMQueueDelegateCaller .cxx_destruct]
  -[__HMQueueDelegateCaller initWithQueue:]
  -[__HMQueueDelegateCaller invokeBlock:]


__HMOperationQueueDelegateCaller : HMDelegateCaller
  // instance methods
  -[__HMOperationQueueDelegateCaller init]
  -[__HMOperationQueueDelegateCaller .cxx_destruct]
  -[__HMOperationQueueDelegateCaller initWithQueue:]
  -[__HMOperationQueueDelegateCaller initWithOperationQueue:]
  -[__HMOperationQueueDelegateCaller invokeBlock:]


HMTimeEvent : HMEvent
  // class methods
  +[HMTimeEvent isSupportedForHome:]


HMPBAccessoryReference : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasHomeReference
 @property  HMPBHomeReference *homeReference
 @property  BOOL hasUniqueIdentifier
 @property  NSData *uniqueIdentifier

  // class methods
  +[HMPBAccessoryReference accessoryReferenceWithAccessory:]
  +[HMPBAccessoryReference accessoryReferenceWithData:]

  // instance methods
  -[HMPBAccessoryReference isEqual:]
  -[HMPBAccessoryReference copyWithZone:]
  -[HMPBAccessoryReference .cxx_destruct]
  -[HMPBAccessoryReference dictionaryRepresentation]
  -[HMPBAccessoryReference uniqueIdentifier]
  -[HMPBAccessoryReference writeTo:]
  -[HMPBAccessoryReference mergeFrom:]
  -[HMPBAccessoryReference readFrom:]
  -[HMPBAccessoryReference copyTo:]
  -[HMPBAccessoryReference setUniqueIdentifier:]
  -[HMPBAccessoryReference hasUniqueIdentifier]
  -[HMPBAccessoryReference setHomeReference:]
  -[HMPBAccessoryReference hasHomeReference]
  -[HMPBAccessoryReference homeReference]


HMDeviceSetupOperationHandler : NSObject /usr/lib/libSystem.B.dylib <HMDeviceSetupSessionDelegate, HMFLogging, TROperationHandler>
 @property  HMDeviceSetupSession *setupSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDeviceSetupOperationHandler logCategory]

  // instance methods
  -[HMDeviceSetupOperationHandler init]
  -[HMDeviceSetupOperationHandler dealloc]
  -[HMDeviceSetupOperationHandler .cxx_destruct]
  -[HMDeviceSetupOperationHandler logIdentifier]
  -[HMDeviceSetupOperationHandler registerMessageHandlersForSession:]
  -[HMDeviceSetupOperationHandler setupSession]
  -[HMDeviceSetupOperationHandler _handleReceivedRequest:responseHandler:]
  -[HMDeviceSetupOperationHandler setupSession:didCloseWithError:]
  -[HMDeviceSetupOperationHandler setupSession:didReceiveExchangeData:completionHandler:]


HMCameraClip : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *streamingAssetVersion
 @property  HMCameraClipEncryptionContext *encryptionContext
 @property  NSArray *videoSegments
 @property  NSUUID *uniqueIdentifier
 @property  NSDate *startDate
 @property  double duration
 @property  BOOL complete
 @property  double targetFragmentDuration
 @property  NSData *encryptionKey
 @property  NSArray *posterFrames
 @property  NSSet *significantEvents
 @property  NSDictionary *videoAssetRequiredHTTPHeaders
 @property  BOOL canAskForUserFeedback

  // class methods
  +[HMCameraClip supportsSecureCoding]
  +[HMCameraClip requiredHTTPHeadersForStreamingAssetVersion:]

  // instance methods
  -[HMCameraClip isEqual:]
  -[HMCameraClip copyWithZone:]
  -[HMCameraClip encodeWithCoder:]
  -[HMCameraClip initWithCoder:]
  -[HMCameraClip .cxx_destruct]
  -[HMCameraClip startDate]
  -[HMCameraClip uniqueIdentifier]
  -[HMCameraClip duration]
  -[HMCameraClip isComplete]
  -[HMCameraClip encryptionKey]
  -[HMCameraClip targetFragmentDuration]
  -[HMCameraClip streamingAssetVersion]
  -[HMCameraClip encryptionContext]
  -[HMCameraClip posterFrames]
  -[HMCameraClip videoSegments]
  -[HMCameraClip significantEvents]
  -[HMCameraClip initWithUniqueIdentifier:startDate:duration:targetFragmentDuration:isComplete:streamingAssetVersion:encryptionContext:posterFrames:videoSegments:significantEvents:]
  -[HMCameraClip canAskForUserFeedback]
  -[HMCameraClip videoAssetRequiredHTTPHeaders]


HMProvisionAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload

  // class methods
  +[HMProvisionAnisetteDataRequest supportsSecureCoding]
  +[HMProvisionAnisetteDataRequest messageName]
  +[HMProvisionAnisetteDataRequest objWithDict:]
  +[HMProvisionAnisetteDataRequest objWithMessage:]
  +[HMProvisionAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMProvisionAnisetteDataRequest messageName]
  -[HMProvisionAnisetteDataRequest messagePayload]
  -[HMProvisionAnisetteDataRequest xpcMessageName]


HMProvisionAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  BOOL didSucceed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload

  // class methods
  +[HMProvisionAnisetteDataResponse supportsSecureCoding]
  +[HMProvisionAnisetteDataResponse messageName]
  +[HMProvisionAnisetteDataResponse objWithDict:]
  +[HMProvisionAnisetteDataResponse objWithMessage:]
  +[HMProvisionAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMProvisionAnisetteDataResponse encodeWithCoder:]
  -[HMProvisionAnisetteDataResponse initWithCoder:]
  -[HMProvisionAnisetteDataResponse messageName]
  -[HMProvisionAnisetteDataResponse didSucceed]
  -[HMProvisionAnisetteDataResponse messagePayload]
  -[HMProvisionAnisetteDataResponse setDidSucceed:]
  -[HMProvisionAnisetteDataResponse xpcMessageName]


HMSyncAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  NSData *simData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload

  // class methods
  +[HMSyncAnisetteDataRequest supportsSecureCoding]
  +[HMSyncAnisetteDataRequest messageName]
  +[HMSyncAnisetteDataRequest objWithDict:]
  +[HMSyncAnisetteDataRequest objWithMessage:]
  +[HMSyncAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMSyncAnisetteDataRequest encodeWithCoder:]
  -[HMSyncAnisetteDataRequest initWithCoder:]
  -[HMSyncAnisetteDataRequest .cxx_destruct]
  -[HMSyncAnisetteDataRequest messageName]
  -[HMSyncAnisetteDataRequest messagePayload]
  -[HMSyncAnisetteDataRequest xpcMessageName]
  -[HMSyncAnisetteDataRequest simData]
  -[HMSyncAnisetteDataRequest setSimData:]


HMSyncAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  BOOL didSucceed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload

  // class methods
  +[HMSyncAnisetteDataResponse supportsSecureCoding]
  +[HMSyncAnisetteDataResponse messageName]
  +[HMSyncAnisetteDataResponse objWithDict:]
  +[HMSyncAnisetteDataResponse objWithMessage:]
  +[HMSyncAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMSyncAnisetteDataResponse encodeWithCoder:]
  -[HMSyncAnisetteDataResponse initWithCoder:]
  -[HMSyncAnisetteDataResponse messageName]
  -[HMSyncAnisetteDataResponse didSucceed]
  -[HMSyncAnisetteDataResponse messagePayload]
  -[HMSyncAnisetteDataResponse setDidSucceed:]
  -[HMSyncAnisetteDataResponse xpcMessageName]


HMEraseAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload

  // class methods
  +[HMEraseAnisetteDataRequest supportsSecureCoding]
  +[HMEraseAnisetteDataRequest messageName]
  +[HMEraseAnisetteDataRequest objWithDict:]
  +[HMEraseAnisetteDataRequest objWithMessage:]
  +[HMEraseAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMEraseAnisetteDataRequest messageName]
  -[HMEraseAnisetteDataRequest messagePayload]
  -[HMEraseAnisetteDataRequest xpcMessageName]


HMEraseAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  BOOL didSucceed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload

  // class methods
  +[HMEraseAnisetteDataResponse supportsSecureCoding]
  +[HMEraseAnisetteDataResponse messageName]
  +[HMEraseAnisetteDataResponse objWithDict:]
  +[HMEraseAnisetteDataResponse objWithMessage:]
  +[HMEraseAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMEraseAnisetteDataResponse encodeWithCoder:]
  -[HMEraseAnisetteDataResponse initWithCoder:]
  -[HMEraseAnisetteDataResponse messageName]
  -[HMEraseAnisetteDataResponse didSucceed]
  -[HMEraseAnisetteDataResponse messagePayload]
  -[HMEraseAnisetteDataResponse setDidSucceed:]
  -[HMEraseAnisetteDataResponse xpcMessageName]


HMFetchAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  BOOL shouldProvision
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload

  // class methods
  +[HMFetchAnisetteDataRequest supportsSecureCoding]
  +[HMFetchAnisetteDataRequest messageName]
  +[HMFetchAnisetteDataRequest objWithDict:]
  +[HMFetchAnisetteDataRequest objWithMessage:]
  +[HMFetchAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMFetchAnisetteDataRequest encodeWithCoder:]
  -[HMFetchAnisetteDataRequest initWithCoder:]
  -[HMFetchAnisetteDataRequest messageName]
  -[HMFetchAnisetteDataRequest messagePayload]
  -[HMFetchAnisetteDataRequest xpcMessageName]
  -[HMFetchAnisetteDataRequest shouldProvision]
  -[HMFetchAnisetteDataRequest setShouldProvision:]


HMFetchAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  AKAnisetteData *anisetteData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload

  // class methods
  +[HMFetchAnisetteDataResponse supportsSecureCoding]
  +[HMFetchAnisetteDataResponse messageName]
  +[HMFetchAnisetteDataResponse objWithDict:]
  +[HMFetchAnisetteDataResponse objWithMessage:]
  +[HMFetchAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMFetchAnisetteDataResponse encodeWithCoder:]
  -[HMFetchAnisetteDataResponse initWithCoder:]
  -[HMFetchAnisetteDataResponse .cxx_destruct]
  -[HMFetchAnisetteDataResponse messageName]
  -[HMFetchAnisetteDataResponse messagePayload]
  -[HMFetchAnisetteDataResponse xpcMessageName]
  -[HMFetchAnisetteDataResponse anisetteData]
  -[HMFetchAnisetteDataResponse setAnisetteData:]


HMLegacyAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  NSString *dsid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload

  // class methods
  +[HMLegacyAnisetteDataRequest supportsSecureCoding]
  +[HMLegacyAnisetteDataRequest messageName]
  +[HMLegacyAnisetteDataRequest objWithDict:]
  +[HMLegacyAnisetteDataRequest objWithMessage:]
  +[HMLegacyAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMLegacyAnisetteDataRequest encodeWithCoder:]
  -[HMLegacyAnisetteDataRequest initWithCoder:]
  -[HMLegacyAnisetteDataRequest .cxx_destruct]
  -[HMLegacyAnisetteDataRequest dsid]
  -[HMLegacyAnisetteDataRequest setDsid:]
  -[HMLegacyAnisetteDataRequest messageName]
  -[HMLegacyAnisetteDataRequest messagePayload]
  -[HMLegacyAnisetteDataRequest xpcMessageName]


HMLegacyAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  AKAnisetteData *anisetteData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload

  // class methods
  +[HMLegacyAnisetteDataResponse supportsSecureCoding]
  +[HMLegacyAnisetteDataResponse messageName]
  +[HMLegacyAnisetteDataResponse objWithDict:]
  +[HMLegacyAnisetteDataResponse objWithMessage:]
  +[HMLegacyAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMLegacyAnisetteDataResponse encodeWithCoder:]
  -[HMLegacyAnisetteDataResponse initWithCoder:]
  -[HMLegacyAnisetteDataResponse .cxx_destruct]
  -[HMLegacyAnisetteDataResponse messageName]
  -[HMLegacyAnisetteDataResponse messagePayload]
  -[HMLegacyAnisetteDataResponse xpcMessageName]
  -[HMLegacyAnisetteDataResponse anisetteData]
  -[HMLegacyAnisetteDataResponse setAnisetteData:]


HMTrigger : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver, NSSecureCoding, HMObjectMerge>
 @property  BOOL enabled
 @property  NSString *name
 @property  _HMContext *context
 @property  NSUUID *uuid
 @property  HMMutableArray *currentActionSets
 @property  HMHome *home
 @property  NSDate *lastFireDate
 @property  HMDevice *ownerDevice
 @property  HMUser *owner
 @property  HMDevice *creatorDevice
 @property  HMUser *creator
 @property  NSArray *actionSets
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMTrigger supportsSecureCoding]

  // instance methods
  -[HMTrigger dealloc]
  -[HMTrigger name]
  -[HMTrigger _invalidate]
  -[HMTrigger setEnabled:]
  -[HMTrigger encodeWithCoder:]
  -[HMTrigger initWithCoder:]
  -[HMTrigger .cxx_destruct]
  -[HMTrigger setName:]
  -[HMTrigger initWithName:]
  -[HMTrigger setOwner:]
  -[HMTrigger uuid]
  -[HMTrigger context]
  -[HMTrigger uniqueIdentifier]
  -[HMTrigger isEnabled]
  -[HMTrigger owner]
  -[HMTrigger setUuid:]
  -[HMTrigger home]
  -[HMTrigger creator]
  -[HMTrigger setHome:]
  -[HMTrigger messageTargetUUID]
  -[HMTrigger messageReceiveQueue]
  -[HMTrigger actionSets]
  -[HMTrigger setLastFireDate:]
  -[HMTrigger _serializeForAdd]
  -[HMTrigger _mergeWithNewObject:operations:]
  -[HMTrigger _registerNotificationHandlers]
  -[HMTrigger __configureWithContext:home:]
  -[HMTrigger _unconfigure]
  -[HMTrigger currentActionSets]
  -[HMTrigger ownerDevice]
  -[HMTrigger _addActionSet:completionHandler:]
  -[HMTrigger _updateActionSet:add:completionHandler:]
  -[HMTrigger _removeActionSet:completionHandler:]
  -[HMTrigger _updateName:completionHandler:]
  -[HMTrigger _enable:completionHandler:]
  -[HMTrigger addActionSetOfType:completionHandler:]
  -[HMTrigger _addActionSetOfType:completionHandler:]
  -[HMTrigger _handleTriggerFired:]
  -[HMTrigger _handleUpdatedActionSetNotification:]
  -[HMTrigger _handleTriggerRenamedNotification:]
  -[HMTrigger _handleTriggerActivatedNotification:]
  -[HMTrigger _handleTriggerFiredNotification:]
  -[HMTrigger lastFireDate]
  -[HMTrigger creatorDevice]
  -[HMTrigger setOwnerDevice:]
  -[HMTrigger addActionSet:completionHandler:]
  -[HMTrigger removeActionSet:completionHandler:]
  -[HMTrigger updateName:completionHandler:]
  -[HMTrigger enable:completionHandler:]
  -[HMTrigger addActionSetWithCompletionHandler:]
  -[HMTrigger compatibleWithApp]
  -[HMTrigger setCurrentActionSets:]


HMSetupAccessoryDescription : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *appIdentifier
 @property  HMSetupAccessoryPayload *setupAccessoryPayload
 @property  BOOL addAndSetupAccessories
 @property  BOOL isTrustedOrigin
 @property  HMSetupAccessoryBrowsingRequest *accessoryBrowsingRequest
 @property  NSString *accessoryName
 @property  NSString *manufacturerName
 @property  HMAccessoryCategory *category
 @property  NSUUID *accessoryUUID
 @property  NSString *suggestedRoomName
 @property  NSString *storeID
 @property  NSString *bundleID
 @property  NSString *setupID
 @property  NSString *setupCode
 @property  HMAccessoryOwnershipToken *ownershipToken
 @property  NSUUID *addRequestIdentifier
 @property  BOOL legacyAPI
 @property  BOOL supportsIP
 @property  BOOL supportsWAC
 @property  BOOL supportsBTLE
 @property  BOOL paired
 @property  unsigned long certificationStatus
 @property  BOOL userConsentedForReplace
 @property  HMAccessory *accessoryBeingReplaced
 @property  NSString *accessoryServerIdentifier
 @property  BOOL hasAddRequest
 @property  NSUUID *homeUUID
 @property  NSString *homeName
 @property  unsigned long userConsentReasons

  // class methods
  +[HMSetupAccessoryDescription supportsSecureCoding]
  +[HMSetupAccessoryDescription setupAccessoryProgressAsString:]

  // instance methods
  -[HMSetupAccessoryDescription isEqual:]
  -[HMSetupAccessoryDescription copyWithZone:]
  -[HMSetupAccessoryDescription encodeWithCoder:]
  -[HMSetupAccessoryDescription initWithCoder:]
  -[HMSetupAccessoryDescription .cxx_destruct]
  -[HMSetupAccessoryDescription category]
  -[HMSetupAccessoryDescription setCategory:]
  -[HMSetupAccessoryDescription bundleID]
  -[HMSetupAccessoryDescription setBundleID:]
  -[HMSetupAccessoryDescription homeUUID]
  -[HMSetupAccessoryDescription accessoryUUID]
  -[HMSetupAccessoryDescription accessoryName]
  -[HMSetupAccessoryDescription storeID]
  -[HMSetupAccessoryDescription setAppIdentifier:]
  -[HMSetupAccessoryDescription appIdentifier]
  -[HMSetupAccessoryDescription isPaired]
  -[HMSetupAccessoryDescription manufacturerName]
  -[HMSetupAccessoryDescription setManufacturerName:]
  -[HMSetupAccessoryDescription setStoreID:]
  -[HMSetupAccessoryDescription ownershipToken]
  -[HMSetupAccessoryDescription dumpState]
  -[HMSetupAccessoryDescription setAccessoryName:]
  -[HMSetupAccessoryDescription homeName]
  -[HMSetupAccessoryDescription initWithAccessoryUUID:accessoryName:appID:homeName:homeUUID:trustedOrigin:]
  -[HMSetupAccessoryDescription initToSetupAccessories:legacyAPI:homeName:homeUUID:trustedOrigin:]
  -[HMSetupAccessoryDescription initToSetupAccessories:legacyAPI:homeName:homeUUID:trustedOrigin:browseRequest:]
  -[HMSetupAccessoryDescription initToSetupAccessoriesWithSetupAccessoryPayload:appID:homeName:homeUUID:trustedOrigin:ownershipToken:]
  -[HMSetupAccessoryDescription setLegacyAPI:]
  -[HMSetupAccessoryDescription setAccessoryBrowsingRequest:]
  -[HMSetupAccessoryDescription setSetupAccessoryPayload:]
  -[HMSetupAccessoryDescription setAccessoryUUID:]
  -[HMSetupAccessoryDescription setupAccessoryPayload]
  -[HMSetupAccessoryDescription supportsIP]
  -[HMSetupAccessoryDescription supportsWAC]
  -[HMSetupAccessoryDescription supportsBTLE]
  -[HMSetupAccessoryDescription setupCode]
  -[HMSetupAccessoryDescription setupID]
  -[HMSetupAccessoryDescription certificationStatus]
  -[HMSetupAccessoryDescription addAndSetupAccessories]
  -[HMSetupAccessoryDescription isTrustedOrigin]
  -[HMSetupAccessoryDescription accessoryBrowsingRequest]
  -[HMSetupAccessoryDescription suggestedRoomName]
  -[HMSetupAccessoryDescription addRequestIdentifier]
  -[HMSetupAccessoryDescription legacyAPI]
  -[HMSetupAccessoryDescription setAddAndSetupAccessories:]
  -[HMSetupAccessoryDescription setIsTrustedOrigin:]
  -[HMSetupAccessoryDescription setCertificationStatus:]
  -[HMSetupAccessoryDescription setSuggestedRoomName:]
  -[HMSetupAccessoryDescription userConsentedForReplace]
  -[HMSetupAccessoryDescription setUserConsentedForReplace:]
  -[HMSetupAccessoryDescription initWithAccessoryUUID:accessoryName:appID:homeName:homeUUID:]
  -[HMSetupAccessoryDescription initToSetupAccessories:legacyAPI:homeName:homeUUID:]
  -[HMSetupAccessoryDescription initToSetupAccessoriesWithSetupAccessoryPayload:appID:homeName:homeUUID:]
  -[HMSetupAccessoryDescription initWithAddRequest:setupAccessoryPayload:appID:ownershipToken:]
  -[HMSetupAccessoryDescription updateWithSetupAccessoryPayload:]
  -[HMSetupAccessoryDescription updateWithAccessory:]
  -[HMSetupAccessoryDescription updateOwnershipToken:]
  -[HMSetupAccessoryDescription updateAppIdentifier:]
  -[HMSetupAccessoryDescription setSetupCode:]
  -[HMSetupAccessoryDescription hasAddRequest]
  -[HMSetupAccessoryDescription userConsentReasons]
  -[HMSetupAccessoryDescription accessoryBeingReplaced]
  -[HMSetupAccessoryDescription setAccessoryBeingReplaced:]
  -[HMSetupAccessoryDescription setAddRequestIdentifier:]
  -[HMSetupAccessoryDescription accessoryServerIdentifier]
  -[HMSetupAccessoryDescription setAccessoryServerIdentifier:]


HMCameraClipDecryptionManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *key

  // instance methods
  -[HMCameraClipDecryptionManager key]
  -[HMCameraClipDecryptionManager .cxx_destruct]
  -[HMCameraClipDecryptionManager initWithKey:]
  -[HMCameraClipDecryptionManager dataFromEncryptedDataContext:]


HMObjectMergeOperations : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *operations

  // instance methods
  -[HMObjectMergeOperations init]
  -[HMObjectMergeOperations .cxx_destruct]
  -[HMObjectMergeOperations operations]
  -[HMObjectMergeOperations setOperations:]
  -[HMObjectMergeOperations _addOperation:]
  -[HMObjectMergeOperations _executeOperationsOnQueue:]


HMObjectMergeCollection : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *currentExistingObjects
 @property  HMObjectMergeOperations *currentOperations
 @property  NSMutableArray *currentAddedObjects
 @property  NSMutableArray *currentRemovedObjects
 @property  NSMutableArray *currentModifiedObjects
 @property  NSMapTable *commonObjectsMaps
 @property  NSArray *addedObjects
 @property  NSArray *removedObjects
 @property  NSArray *modifiedObjects
 @property  NSArray *existingObjects
 @property  BOOL modified
 @property  unsigned long modifiedCount

  // instance methods
  -[HMObjectMergeCollection init]
  -[HMObjectMergeCollection .cxx_destruct]
  -[HMObjectMergeCollection addedObjects]
  -[HMObjectMergeCollection removedObjects]
  -[HMObjectMergeCollection isModified]
  -[HMObjectMergeCollection initWithExistingObjects:newObjects:operations:]
  -[HMObjectMergeCollection _enumerateObjectRemoveWithBlock:]
  -[HMObjectMergeCollection _replaceAddedObjectsWithObjectsFromArray:]
  -[HMObjectMergeCollection _enumerateObjectAdditionWithBlock:]
  -[HMObjectMergeCollection currentExistingObjects]
  -[HMObjectMergeCollection modifiedCount]
  -[HMObjectMergeCollection currentAddedObjects]
  -[HMObjectMergeCollection currentRemovedObjects]
  -[HMObjectMergeCollection currentModifiedObjects]
  -[HMObjectMergeCollection setCurrentAddedObjects:]
  -[HMObjectMergeCollection currentOperations]
  -[HMObjectMergeCollection commonObjectsMaps]
  -[HMObjectMergeCollection existingObjects]
  -[HMObjectMergeCollection modifiedObjects]
  -[HMObjectMergeCollection _mergeCommonObjects]
  -[HMObjectMergeCollection mergeCommonObjectsNoMergeCount]
  -[HMObjectMergeCollection setCurrentExistingObjects:]
  -[HMObjectMergeCollection setCurrentOperations:]
  -[HMObjectMergeCollection setCurrentRemovedObjects:]
  -[HMObjectMergeCollection setCurrentModifiedObjects:]
  -[HMObjectMergeCollection setCommonObjectsMaps:]


HMCameraAudioCodec : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned long audioCodec

  // class methods
  +[HMCameraAudioCodec supportsSecureCoding]
  +[HMCameraAudioCodec isValid:]

  // instance methods
  -[HMCameraAudioCodec isEqual:]
  -[HMCameraAudioCodec encodeWithCoder:]
  -[HMCameraAudioCodec initWithCoder:]
  -[HMCameraAudioCodec audioCodec]
  -[HMCameraAudioCodec initWithAudioCodecType:]


HMSetupRemoteViewController : _UIRemoteViewController /System/Library/Frameworks/Intents.framework/Intents <HMSetupRemoteHost>
 @property  <HMSetupRemoteHost> *delegate

  // class methods
  +[HMSetupRemoteViewController exportedInterface]
  +[HMSetupRemoteViewController serviceViewControllerInterface]
  +[HMSetupRemoteViewController requestViewControllerWithConnectionHandler:]

  // instance methods
  -[HMSetupRemoteViewController delegate]
  -[HMSetupRemoteViewController setDelegate:]
  -[HMSetupRemoteViewController .cxx_destruct]
  -[HMSetupRemoteViewController viewDidLoad]
  -[HMSetupRemoteViewController viewServiceDidTerminateWithError:]
  -[HMSetupRemoteViewController accessorySetupDidFinishWithError:]
  -[HMSetupRemoteViewController accessorySetupDidLoad]
  -[HMSetupRemoteViewController accessorySetupDidFinishWithInfo:error:]
  -[HMSetupRemoteViewController accessorySetupDidBeginPairing]
  -[HMSetupRemoteViewController accessorySetupDidFinishPairing]


HMBulletinBoardNotificationServiceGroup : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, HMFMessageReceiver, NSSecureCoding, HMObjectMerge>
 @property  _HMContext *context
 @property  NSSet *cameraProfileUUIDs
 @property  NSSet *associatedServiceUUIDs
 @property  NSArray *cameraProfiles
 @property  NSArray *associatedServices
 @property  NSUUID *targetUUID
 @property  NSString *logID
 @property  HMBulletinBoardNotification *bulletinBoardNotification
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMBulletinBoardNotificationServiceGroup supportsSecureCoding]
  +[HMBulletinBoardNotificationServiceGroup logCategory]

  // instance methods
  -[HMBulletinBoardNotificationServiceGroup init]
  -[HMBulletinBoardNotificationServiceGroup dealloc]
  -[HMBulletinBoardNotificationServiceGroup encodeWithCoder:]
  -[HMBulletinBoardNotificationServiceGroup initWithCoder:]
  -[HMBulletinBoardNotificationServiceGroup .cxx_destruct]
  -[HMBulletinBoardNotificationServiceGroup context]
  -[HMBulletinBoardNotificationServiceGroup uniqueIdentifier]
  -[HMBulletinBoardNotificationServiceGroup setContext:]
  -[HMBulletinBoardNotificationServiceGroup logIdentifier]
  -[HMBulletinBoardNotificationServiceGroup messageTargetUUID]
  -[HMBulletinBoardNotificationServiceGroup messageReceiveQueue]
  -[HMBulletinBoardNotificationServiceGroup logID]
  -[HMBulletinBoardNotificationServiceGroup _mergeWithNewObject:operations:]
  -[HMBulletinBoardNotificationServiceGroup _registerNotificationHandlers]
  -[HMBulletinBoardNotificationServiceGroup _requestServiceGroup]
  -[HMBulletinBoardNotificationServiceGroup _handleBulletinBoardNotificationServiceGroupUpdateNotification:]
  -[HMBulletinBoardNotificationServiceGroup handleConfigureNotification:]
  -[HMBulletinBoardNotificationServiceGroup setCameraProfileUUIDs:]
  -[HMBulletinBoardNotificationServiceGroup setAssociatedServiceUUIDs:]
  -[HMBulletinBoardNotificationServiceGroup _findObjects]
  -[HMBulletinBoardNotificationServiceGroup bulletinBoardNotification]
  -[HMBulletinBoardNotificationServiceGroup cameraProfiles]
  -[HMBulletinBoardNotificationServiceGroup cameraProfileUUIDs]
  -[HMBulletinBoardNotificationServiceGroup associatedServiceUUIDs]
  -[HMBulletinBoardNotificationServiceGroup setCameraProfiles:]
  -[HMBulletinBoardNotificationServiceGroup associatedServices]
  -[HMBulletinBoardNotificationServiceGroup setAssociatedServices:]
  -[HMBulletinBoardNotificationServiceGroup _callServiceGroupUpdate]
  -[HMBulletinBoardNotificationServiceGroup targetUUID]
  -[HMBulletinBoardNotificationServiceGroup __configureWithContext:]


HMPBActionSet : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasName
 @property  NSString *name
 @property  NSMutableArray *actions
 @property  BOOL hasActionSetType
 @property  NSString *actionSetType
 @property  BOOL hasUuid
 @property  NSData *uuid
 @property  BOOL hasHomeUUID
 @property  NSData *homeUUID

  // class methods
  +[HMPBActionSet actionsType]

  // instance methods
  -[HMPBActionSet isEqual:]
  -[HMPBActionSet name]
  -[HMPBActionSet copyWithZone:]
  -[HMPBActionSet .cxx_destruct]
  -[HMPBActionSet setName:]
  -[HMPBActionSet dictionaryRepresentation]
  -[HMPBActionSet uuid]
  -[HMPBActionSet setUuid:]
  -[HMPBActionSet writeTo:]
  -[HMPBActionSet homeUUID]
  -[HMPBActionSet actionSetType]
  -[HMPBActionSet mergeFrom:]
  -[HMPBActionSet readFrom:]
  -[HMPBActionSet copyTo:]
  -[HMPBActionSet hasName]
  -[HMPBActionSet actions]
  -[HMPBActionSet setActions:]
  -[HMPBActionSet hasUuid]
  -[HMPBActionSet actionsCount]
  -[HMPBActionSet actionsAtIndex:]
  -[HMPBActionSet clearActions]
  -[HMPBActionSet addActions:]
  -[HMPBActionSet setActionSetType:]
  -[HMPBActionSet setHomeUUID:]
  -[HMPBActionSet hasActionSetType]
  -[HMPBActionSet hasHomeUUID]


_HMAudioControl : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver, HMObjectMerge>
 @property  HMMediaSession *mediaSession
 @property  NSUUID *uniqueIdentifier
 @property  <_HMAudioControlDelegate> *delegate
 @property  float volume
 @property  BOOL muted
 @property  _HMContext *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // instance methods
  -[_HMAudioControl delegate]
  -[_HMAudioControl setDelegate:]
  -[_HMAudioControl .cxx_destruct]
  -[_HMAudioControl context]
  -[_HMAudioControl uniqueIdentifier]
  -[_HMAudioControl setContext:]
  -[_HMAudioControl volume]
  -[_HMAudioControl setVolume:]
  -[_HMAudioControl setMuted:]
  -[_HMAudioControl isMuted]
  -[_HMAudioControl messageTargetUUID]
  -[_HMAudioControl messageReceiveQueue]
  -[_HMAudioControl _mergeWithNewObject:operations:]
  -[_HMAudioControl _registerNotificationHandlers]
  -[_HMAudioControl __configureWithContext:]
  -[_HMAudioControl _handleAudioControlUpdated:]
  -[_HMAudioControl mediaSession]
  -[_HMAudioControl messageDestination]
  -[_HMAudioControl initWithMediaSession:]
  -[_HMAudioControl updateVolume:completionHandler:]
  -[_HMAudioControl updateMuted:completionHandler:]


HMAudioControl : NSObject /usr/lib/libSystem.B.dylib <_HMAudioControlDelegate, HMObjectMerge>
 @property  _HMAudioControl *audioControl
 @property  float volume
 @property  BOOL muted
 @property  <HMAudioControlDelegate> *delegate
 @property  HMMediaSession *mediaSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier

  // instance methods
  -[HMAudioControl delegate]
  -[HMAudioControl setDelegate:]
  -[HMAudioControl .cxx_destruct]
  -[HMAudioControl uniqueIdentifier]
  -[HMAudioControl volume]
  -[HMAudioControl setVolume:]
  -[HMAudioControl setMuted:]
  -[HMAudioControl isMuted]
  -[HMAudioControl _mergeWithNewObject:operations:]
  -[HMAudioControl __configureWithContext:]
  -[HMAudioControl mediaSession]
  -[HMAudioControl audioControl:didUpdateVolume:]
  -[HMAudioControl audioControl:didUpdateMuted:]
  -[HMAudioControl initWithMediaSession:]
  -[HMAudioControl updateVolume:completionHandler:]
  -[HMAudioControl updateMuted:completionHandler:]
  -[HMAudioControl audioControl]
  -[HMAudioControl setMediaSession:]
  -[HMAudioControl setAudioControl:]


HMApplicationData : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *applicationData
 @property  NSSet *allowedObjectClasses
 @property  NSArray *allKeys
 @property  NSArray *allValues

  // instance methods
  -[HMApplicationData init]
  -[HMApplicationData isEqual:]
  -[HMApplicationData allKeys]
  -[HMApplicationData objectForKey:]
  -[HMApplicationData allValues]
  -[HMApplicationData objectForKeyedSubscript:]
  -[HMApplicationData setObject:forKey:]
  -[HMApplicationData .cxx_destruct]
  -[HMApplicationData dictionary]
  -[HMApplicationData setObject:forKeyedSubscript:]
  -[HMApplicationData dictionaryRepresentation]
  -[HMApplicationData applicationData]
  -[HMApplicationData setApplicationData:]
  -[HMApplicationData initWithContentsOfDictionary:allowedObjectClasses:]
  -[HMApplicationData initWithContentsOfDictionary:]
  -[HMApplicationData isAllowedClassForObject:]
  -[HMApplicationData allowedObjectClasses]
  -[HMApplicationData setAllowedObjectClasses:]


HMCharacteristicMetadata : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, HMObjectMerge>
 @property  NSNumber *minimumValue
 @property  NSNumber *maximumValue
 @property  NSNumber *stepValue
 @property  NSNumber *maxLength
 @property  NSString *format
 @property  NSString *units
 @property  NSString *manufacturerDescription
 @property  NSArray *validValues
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[HMCharacteristicMetadata supportsSecureCoding]

  // instance methods
  -[HMCharacteristicMetadata init]
  -[HMCharacteristicMetadata encodeWithCoder:]
  -[HMCharacteristicMetadata initWithCoder:]
  -[HMCharacteristicMetadata .cxx_destruct]
  -[HMCharacteristicMetadata uniqueIdentifier]
  -[HMCharacteristicMetadata format]
  -[HMCharacteristicMetadata setFormat:]
  -[HMCharacteristicMetadata setMinimumValue:]
  -[HMCharacteristicMetadata setMaximumValue:]
  -[HMCharacteristicMetadata minimumValue]
  -[HMCharacteristicMetadata maximumValue]
  -[HMCharacteristicMetadata setStepValue:]
  -[HMCharacteristicMetadata stepValue]
  -[HMCharacteristicMetadata maxLength]
  -[HMCharacteristicMetadata setMaxLength:]
  -[HMCharacteristicMetadata units]
  -[HMCharacteristicMetadata setUnits:]
  -[HMCharacteristicMetadata _mergeWithNewObject:operations:]
  -[HMCharacteristicMetadata manufacturerDescription]
  -[HMCharacteristicMetadata validValues]
  -[HMCharacteristicMetadata setManufacturerDescription:]
  -[HMCharacteristicMetadata setValidValues:]


HMCharacteristicRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  HMCharacteristic *characteristic

  // instance methods
  -[HMCharacteristicRequest .cxx_destruct]
  -[HMCharacteristicRequest characteristic]
  -[HMCharacteristicRequest initWithCharacteristic:]


HMCharacteristicReadRequest : HMCharacteristicRequest
  // class methods
  +[HMCharacteristicReadRequest readRequestWithCharacteristic:]

  // instance methods
  -[HMCharacteristicReadRequest isEqual:]
  -[HMCharacteristicReadRequest initWithCharacteristic:]


HMCharacteristicWriteRequest : HMCharacteristicRequest
 @property  id value

  // class methods
  +[HMCharacteristicWriteRequest writeRequestWithCharacteristic:value:]

  // instance methods
  -[HMCharacteristicWriteRequest isEqual:]
  -[HMCharacteristicWriteRequest .cxx_destruct]
  -[HMCharacteristicWriteRequest value]
  -[HMCharacteristicWriteRequest initWithCharacteristic:value:]


HMCharacteristicResponse : NSObject /usr/lib/libSystem.B.dylib
 @property  HMCharacteristicRequest *request
 @property  NSError *error

  // instance methods
  -[HMCharacteristicResponse isEqual:]
  -[HMCharacteristicResponse .cxx_destruct]
  -[HMCharacteristicResponse error]
  -[HMCharacteristicResponse setRequest:]
  -[HMCharacteristicResponse request]
  -[HMCharacteristicResponse initWithRequest:error:]


HMCharacteristicBatchRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *requests
 @property  @? progressHandler
 @property  @? completionHandler

  // class methods
  +[HMCharacteristicBatchRequest validateRequestTypes:requestClass:]
  +[HMCharacteristicBatchRequest characteristicBatchRequestWithReadRequests:]
  +[HMCharacteristicBatchRequest characteristicBatchRequestWithWriteRequests:]

  // instance methods
  -[HMCharacteristicBatchRequest .cxx_destruct]
  -[HMCharacteristicBatchRequest progressHandler]
  -[HMCharacteristicBatchRequest setProgressHandler:]
  -[HMCharacteristicBatchRequest completionHandler]
  -[HMCharacteristicBatchRequest setCompletionHandler:]
  -[HMCharacteristicBatchRequest requests]
  -[HMCharacteristicBatchRequest setRequests:]
  -[HMCharacteristicBatchRequest initWithRequests:requestClass:]


HMCameraClipFetchAssetContextOperationDataSource : NSObject /usr/lib/libSystem.B.dylib <HMCameraClipFetchAssetContextOperationDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMCameraClipFetchAssetContextOperationDataSource dataTaskWithURL:httpHeaderFields:]
  -[HMCameraClipFetchAssetContextOperationDataSource dataFromEncryptedDataContext:usingDecryptionManager:]
  -[HMCameraClipFetchAssetContextOperationDataSource writeData:toFileURL:error:]
  -[HMCameraClipFetchAssetContextOperationDataSource outputStreamToFileAtURL:shouldAppend:]


HMDeviceSetupResponseMessage : TRResponseMessage /System/Library/PrivateFrameworks/InstallCoordination.framework/InstallCoordination
 @property  NSData *payload

  // class methods
  +[HMDeviceSetupResponseMessage supportsSecureCoding]

  // instance methods
  -[HMDeviceSetupResponseMessage init]
  -[HMDeviceSetupResponseMessage encodeWithCoder:]
  -[HMDeviceSetupResponseMessage initWithCoder:]
  -[HMDeviceSetupResponseMessage .cxx_destruct]
  -[HMDeviceSetupResponseMessage initWithPayload:]
  -[HMDeviceSetupResponseMessage payload]


HMCameraClipCryptoUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[HMCameraClipCryptoUtilities zeroingDataFromData:]
  +[HMCameraClipCryptoUtilities secureRandomZeroingDataWithLength:]


HMCameraBulletinBoardSmartNotification : HMBulletinBoardNotification
 @property  HMCameraUserSettings *cameraUserSettings
 @property  unsigned long notificationEventTriggers

  // class methods
  +[HMCameraBulletinBoardSmartNotification notificationEventTriggersInPredicate:]
  +[HMCameraBulletinBoardSmartNotification predicateForCameraSignificantEvent:]

  // instance methods
  -[HMCameraBulletinBoardSmartNotification .cxx_destruct]
  -[HMCameraBulletinBoardSmartNotification commitWithCompletionHandler:]
  -[HMCameraBulletinBoardSmartNotification targetUUID]
  -[HMCameraBulletinBoardSmartNotification setCameraUserSettings:]
  -[HMCameraBulletinBoardSmartNotification cameraUserSettings]
  -[HMCameraBulletinBoardSmartNotification initWithBulletinBoardNotification:]
  -[HMCameraBulletinBoardSmartNotification __configureWithContext:cameraUserSettings:]
  -[HMCameraBulletinBoardSmartNotification notificationEventTriggers]


HMCameraView : UIView /System/Library/Frameworks/Intents.framework/Intents
 @property  HMCameraSource *cameraSource

  // instance methods
  -[HMCameraView .cxx_destruct]
  -[HMCameraView setCameraSource:]
  -[HMCameraView cameraSource]


HMSettingsMessageHandler : NSObject /usr/lib/libSystem.B.dylib
 @property  _HMContext *context

  // instance methods
  -[HMSettingsMessageHandler .cxx_destruct]
  -[HMSettingsMessageHandler context]
  -[HMSettingsMessageHandler setContext:]
  -[HMSettingsMessageHandler sendUpdateValueMessage:value:completionHandler:]


HMSettingsCreator : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[HMSettingsCreator createSettingsWithOwner:]


HMSettingsController : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, HMSettingManager, HMSettingsOwner>
 @property  HMSettingsMessageHandler *messageHandler
 @property  HMSettingGroup *rootGroup
 @property  NSDictionary *encodedSettings
 @property  NSMapTable *groupsMap
 @property  NSMapTable *settingsMap
 @property  _HMContext *context
 @property  NSUUID *parentIdentifier
 @property  NSString *codingKey
 @property  HMSettings *settings
 @property  <HMSettingsDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSettingsController logCategory]

  // instance methods
  -[HMSettingsController delegate]
  -[HMSettingsController setDelegate:]
  -[HMSettingsController .cxx_destruct]
  -[HMSettingsController context]
  -[HMSettingsController setContext:]
  -[HMSettingsController settings]
  -[HMSettingsController setMessageHandler:]
  -[HMSettingsController messageHandler]
  -[HMSettingsController logIdentifier]
  -[HMSettingsController rootGroup]
  -[HMSettingsController setRootGroup:]
  -[HMSettingsController parentIdentifier]
  -[HMSettingsController mergeWith:]
  -[HMSettingsController initWithParentIdentifier:codingKey:messageHandler:settingsCreator:]
  -[HMSettingsController settingsMap]
  -[HMSettingsController groupsMap]
  -[HMSettingsController _updateSettingsWithBlock:]
  -[HMSettingsController settingsDidChangeWithRootGroup:addedGroups:addedSettings:changedSettings:]
  -[HMSettingsController codingKey]
  -[HMSettingsController __notifyDelegateSettingsDidUpdate]
  -[HMSettingsController __notifyDelegateSettingsWillUpdateWithCompletionHandler:]
  -[HMSettingsController updateValueForSetting:value:completionHandler:]
  -[HMSettingsController initWithParentIdentifier:codingKey:]
  -[HMSettingsController settingForIdentifier:]
  -[HMSettingsController settingGroupForIdentifier:]
  -[HMSettingsController notifyDelegateOfUpdate]
  -[HMSettingsController decodeWithCoder:]
  -[HMSettingsController configureWithContext:]
  -[HMSettingsController encodedSettings]
  -[HMSettingsController setEncodedSettings:]
  -[HMSettingsController setGroupsMap:]
  -[HMSettingsController setSettingsMap:]


HMCameraStream : HMCameraSource
 @property  _HMCameraStream *stream
 @property  unsigned long audioStreamSetting

  // instance methods
  -[HMCameraStream .cxx_destruct]
  -[HMCameraStream initWithStream:]
  -[HMCameraStream stream]
  -[HMCameraStream setStream:]
  -[HMCameraStream audioVolume]
  -[HMCameraStream setAudioStreamSetting:]
  -[HMCameraStream audioStreamSetting]
  -[HMCameraStream updateAudioVolume:completionHandler:]
  -[HMCameraStream updateAudioStreamSetting:completionHandler:]


HMEvent : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, HMObjectMerge, HMFMessageReceiver>
 @property  _HMContext *context
 @property  NSUUID *uuid
 @property  BOOL endEvent
 @property  NSString *triggerType
 @property  HMEventTrigger *eventTrigger
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMEvent supportsSecureCoding]
  +[HMEvent sharedTriggerActivationSupportedForHome:]
  +[HMEvent isSupportedForHome:]

  // instance methods
  -[HMEvent init]
  -[HMEvent isEqual:]
  -[HMEvent _invalidate]
  -[HMEvent encodeWithCoder:]
  -[HMEvent initWithCoder:]
  -[HMEvent .cxx_destruct]
  -[HMEvent uuid]
  -[HMEvent context]
  -[HMEvent uniqueIdentifier]
  -[HMEvent setContext:]
  -[HMEvent initWithDict:]
  -[HMEvent messageTargetUUID]
  -[HMEvent messageReceiveQueue]
  -[HMEvent triggerType]
  -[HMEvent __configureWithContext:eventTrigger:]
  -[HMEvent eventTrigger]
  -[HMEvent _serializeForAdd]
  -[HMEvent _handleEventUpdatedNotification:]
  -[HMEvent _mergeWithNewObject:operations:]
  -[HMEvent _registerNotificationHandlers]
  -[HMEvent _updateTriggerType]
  -[HMEvent setEventTrigger:]
  -[HMEvent isEndEvent]
  -[HMEvent setEndEvent:]


HMSoftwareUpdateController : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver, HMObjectMerge>
 @property  _HMContext *context
 @property  HMAccessory *accessory
 @property  HMSoftwareUpdate *availableUpdate
 @property  BOOL controllable
 @property  <HMSoftwareUpdateControllerDelegate> *delegate
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMSoftwareUpdateController logCategory]
  +[HMSoftwareUpdateController namespace]

  // instance methods
  -[HMSoftwareUpdateController init]
  -[HMSoftwareUpdateController isEqual:]
  -[HMSoftwareUpdateController delegate]
  -[HMSoftwareUpdateController setDelegate:]
  -[HMSoftwareUpdateController .cxx_destruct]
  -[HMSoftwareUpdateController context]
  -[HMSoftwareUpdateController uniqueIdentifier]
  -[HMSoftwareUpdateController setContext:]
  -[HMSoftwareUpdateController accessory]
  -[HMSoftwareUpdateController setAccessory:]
  -[HMSoftwareUpdateController logIdentifier]
  -[HMSoftwareUpdateController messageTargetUUID]
  -[HMSoftwareUpdateController messageReceiveQueue]
  -[HMSoftwareUpdateController _mergeWithNewObject:operations:]
  -[HMSoftwareUpdateController messageDestination]
  -[HMSoftwareUpdateController configureWithContext:]
  -[HMSoftwareUpdateController availableUpdate]
  -[HMSoftwareUpdateController isControllable]
  -[HMSoftwareUpdateController setAvailableUpdate:]
  -[HMSoftwareUpdateController initWithAccessory:]
  -[HMSoftwareUpdateController fetchAvailableUpdateWithCompletionHandler:]
  -[HMSoftwareUpdateController startUpdate:completionHandler:]


HMEventTrigger : HMTrigger <NSSecureCoding>
 @property  NSPredicate *internalPredicate
 @property  HMMutableArray *currentEvents
 @property  NSArray *allEvents
 @property  unsigned long activationState
 @property  NSArray *events
 @property  NSArray *endEvents
 @property  NSPredicate *predicate
 @property  NSArray *recurrences
 @property  BOOL executeOnce
 @property  unsigned long triggerActivationState

  // class methods
  +[HMEventTrigger supportsSecureCoding]
  +[HMEventTrigger createWithDictionary:home:]
  +[HMEventTrigger __validateRecurrences:]
  +[HMEventTrigger _predicateForEvaluatingTriggerOccurringBeforeSignificantEvent:applyingOffset:]
  +[HMEventTrigger negateOffset:]
  +[HMEventTrigger _predicateForEvaluatingTriggerOccurringAfterSignificantEvent:applyingOffset:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringAfterSignificantEvent:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringBeforeSignificantEvent:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringAfterDateWithComponents:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringBeforeDateWithComponents:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringOnDateWithComponents:]
  +[HMEventTrigger predicateForEvaluatingTriggerWithCharacteristic:relatedBy:toValue:]
  +[HMEventTrigger _predicateForEvaluatingTriggerWithCharacteristic:value:valueFormatString:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringBeforeSignificantEvent:applyingOffset:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringAfterSignificantEvent:applyingOffset:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringBetweenSignificantEvent:secondSignificantEvent:]
  +[HMEventTrigger predicateForEvaluatingTriggerWithPresence:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringBetweenDateWithComponents:secondDateWithComponents:]
  +[HMEventTrigger predicateForEvaluatingTriggerWithCharacteristic:matchingValue:]
  +[HMEventTrigger isActionAffectedByEndEvents:]

  // instance methods
  -[HMEventTrigger encodeWithCoder:]
  -[HMEventTrigger initWithCoder:]
  -[HMEventTrigger .cxx_destruct]
  -[HMEventTrigger predicate]
  -[HMEventTrigger allEvents]
  -[HMEventTrigger events]
  -[HMEventTrigger activationState]
  -[HMEventTrigger internalPredicate]
  -[HMEventTrigger setInternalPredicate:]
  -[HMEventTrigger recurrences]
  -[HMEventTrigger setRecurrences:]
  -[HMEventTrigger _serializeForAdd]
  -[HMEventTrigger _mergeWithNewObject:operations:]
  -[HMEventTrigger _registerNotificationHandlers]
  -[HMEventTrigger __configureWithContext:home:]
  -[HMEventTrigger compatibleWithApp]
  -[HMEventTrigger initInternalWithName:events:endEvents:recurrences:predicate:]
  -[HMEventTrigger initWithName:events:endEvents:recurrences:predicate:]
  -[HMEventTrigger currentEvents]
  -[HMEventTrigger _addEvent:completionHandler:]
  -[HMEventTrigger _removeEvent:completionHandler:]
  -[HMEventTrigger _updateEvents:endEvent:completionHandler:]
  -[HMEventTrigger _updateCharacterisiticReferenceInNewEvent:]
  -[HMEventTrigger _updatePredicate:completionHandler:]
  -[HMEventTrigger _updateRecurrences:completionHandler:]
  -[HMEventTrigger _updateExecuteOnce:completionHandler:]
  -[HMEventTrigger _handleEventTriggerConditionNotification:]
  -[HMEventTrigger _handleEventTriggerRecurrencesNotification:]
  -[HMEventTrigger _handleEventTriggerExecuteOnceNotification:]
  -[HMEventTrigger handleEventAddedNotification:]
  -[HMEventTrigger handleEventsRemovedNotification:]
  -[HMEventTrigger handleActivationStateNotification:]
  -[HMEventTrigger handleEventsUpdatedNotification:]
  -[HMEventTrigger setExecuteOnce:]
  -[HMEventTrigger addedEvent:]
  -[HMEventTrigger setActivationState:]
  -[HMEventTrigger executeOnce]
  -[HMEventTrigger containsSharedTriggerActivationBits]
  -[HMEventTrigger initWithName:events:predicate:]
  -[HMEventTrigger endEvents]
  -[HMEventTrigger triggerActivationState]
  -[HMEventTrigger addEvent:completionHandler:]
  -[HMEventTrigger removeEvent:completionHandler:]
  -[HMEventTrigger updateEvents:completionHandler:]
  -[HMEventTrigger updateEndEvents:completionHandler:]
  -[HMEventTrigger _updateCharacteristicReference]
  -[HMEventTrigger updatePredicate:completionHandler:]
  -[HMEventTrigger updateRecurrences:completionHandler:]
  -[HMEventTrigger updateExecuteOnce:completionHandler:]
  -[HMEventTrigger setCurrentEvents:]


HMUserCameraAccess : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *number
 @property  unsigned long value

  // class methods
  +[HMUserCameraAccess accessWithNumber:]
  +[HMUserCameraAccess accessWithValue:]
  +[HMUserCameraAccess accessWithMessage:]
  +[HMUserCameraAccess accessWithDict:]
  +[HMUserCameraAccess accessWithCoder:]

  // instance methods
  -[HMUserCameraAccess isEqual:]
  -[HMUserCameraAccess value]
  -[HMUserCameraAccess number]
  -[HMUserCameraAccess initWithNumber:]
  -[HMUserCameraAccess addToCoder:]
  -[HMUserCameraAccess addToPayload:]


HMSettings : NSObject /usr/lib/libSystem.B.dylib
 @property  <HMSettingsOwner> *owner
 @property  HMSettingGroup *rootGroup
 @property  BOOL controllable
 @property  <HMSettingsDelegate> *delegate

  // instance methods
  -[HMSettings delegate]
  -[HMSettings setDelegate:]
  -[HMSettings .cxx_destruct]
  -[HMSettings owner]
  -[HMSettings rootGroup]
  -[HMSettings initWithSettingsOwner:]
  -[HMSettings isControllable]


HMCameraSettingsControl : HMCameraControl
 @property  _HMCameraSettingsControl *settingsControl
 @property  HMCharacteristic *nightVision
 @property  HMCharacteristic *currentHorizontalTilt
 @property  HMCharacteristic *targetHorizontalTilt
 @property  HMCharacteristic *currentVerticalTilt
 @property  HMCharacteristic *targetVerticalTilt
 @property  HMCharacteristic *opticalZoom
 @property  HMCharacteristic *digitalZoom
 @property  HMCharacteristic *imageRotation
 @property  HMCharacteristic *imageMirroring

  // instance methods
  -[HMCameraSettingsControl .cxx_destruct]
  -[HMCameraSettingsControl nightVision]
  -[HMCameraSettingsControl currentHorizontalTilt]
  -[HMCameraSettingsControl targetHorizontalTilt]
  -[HMCameraSettingsControl currentVerticalTilt]
  -[HMCameraSettingsControl targetVerticalTilt]
  -[HMCameraSettingsControl opticalZoom]
  -[HMCameraSettingsControl digitalZoom]
  -[HMCameraSettingsControl imageRotation]
  -[HMCameraSettingsControl imageMirroring]
  -[HMCameraSettingsControl settingsControl]
  -[HMCameraSettingsControl initWithSettingsControl:]
  -[HMCameraSettingsControl setSettingsControl:]


HMSoftwareUpdate : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver, HMObjectMerge, NSSecureCoding>
 @property  _HMContext *context
 @property  HMAccessory *accessory
 @property  NSUUID *identifier
 @property  HMSoftwareUpdateDocumentationMetadata *documentationMetadata
 @property  <HMSoftwareUpdateDelegate> *delegate
 @property  NSUUID *uniqueIdentifier
 @property  HMFSoftwareVersion *version
 @property  long long state
 @property  unsigned long downloadSize
 @property  BOOL documentationAvailable
 @property  HMSoftwareUpdateDocumentation *documentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMSoftwareUpdate supportsSecureCoding]
  +[HMSoftwareUpdate logCategory]

  // instance methods
  -[HMSoftwareUpdate init]
  -[HMSoftwareUpdate dealloc]
  -[HMSoftwareUpdate isEqual:]
  -[HMSoftwareUpdate encodeWithCoder:]
  -[HMSoftwareUpdate initWithCoder:]
  -[HMSoftwareUpdate delegate]
  -[HMSoftwareUpdate setDelegate:]
  -[HMSoftwareUpdate .cxx_destruct]
  -[HMSoftwareUpdate identifier]
  -[HMSoftwareUpdate setIdentifier:]
  -[HMSoftwareUpdate version]
  -[HMSoftwareUpdate state]
  -[HMSoftwareUpdate context]
  -[HMSoftwareUpdate uniqueIdentifier]
  -[HMSoftwareUpdate setState:]
  -[HMSoftwareUpdate setContext:]
  -[HMSoftwareUpdate accessory]
  -[HMSoftwareUpdate setAccessory:]
  -[HMSoftwareUpdate logIdentifier]
  -[HMSoftwareUpdate messageTargetUUID]
  -[HMSoftwareUpdate messageReceiveQueue]
  -[HMSoftwareUpdate documentation]
  -[HMSoftwareUpdate downloadSize]
  -[HMSoftwareUpdate _mergeWithNewObject:operations:]
  -[HMSoftwareUpdate _registerNotificationHandlers]
  -[HMSoftwareUpdate messageDestination]
  -[HMSoftwareUpdate configureWithContext:]
  -[HMSoftwareUpdate initWithVersion:downloadSize:state:]
  -[HMSoftwareUpdate initWithVersion:downloadSize:state:documentationMetadata:]
  -[HMSoftwareUpdate documentationMetadata]
  -[HMSoftwareUpdate _handleUpdatedState:]
  -[HMSoftwareUpdate _handleUpdatedDocumentationMetadata:]
  -[HMSoftwareUpdate _handleUpdatedDocumentation:]
  -[HMSoftwareUpdate isDocumentationAvailable]
  -[HMSoftwareUpdate setDocumentationMetadata:]
  -[HMSoftwareUpdate requestDocumentation]
  -[HMSoftwareUpdate setDocumentation:]
  -[HMSoftwareUpdate initWithVersion:downloadSize:]
  -[HMSoftwareUpdate updateState:completionHandler:]
  -[HMSoftwareUpdate updateDocumentationMetadata:completionHandler:]


HMSetupAccessoryBrowsingRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSArray *filterCategories

  // class methods
  +[HMSetupAccessoryBrowsingRequest supportsSecureCoding]

  // instance methods
  -[HMSetupAccessoryBrowsingRequest init]
  -[HMSetupAccessoryBrowsingRequest isEqual:]
  -[HMSetupAccessoryBrowsingRequest encodeWithCoder:]
  -[HMSetupAccessoryBrowsingRequest initWithCoder:]
  -[HMSetupAccessoryBrowsingRequest .cxx_destruct]
  -[HMSetupAccessoryBrowsingRequest initWithFilterCategories:]
  -[HMSetupAccessoryBrowsingRequest filterCategories]


HMCameraClipPosterFrameDownloadOperation : HMFOperation /System/Library/Frameworks/Foundation.framework/Foundation <HMFLogging>
 @property  HMCameraClipManager *clipManager
 @property  <HMCameraClipFetchAssetContextOperationDataSource> *dataSource
 @property  HMCameraClip *clip
 @property  HMCameraClipPosterFrame *posterFrame
 @property  NSURL *destinationFileURL
 @property  @? downloadPosterFrameCompletionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraClipPosterFrameDownloadOperation logCategory]

  // instance methods
  -[HMCameraClipPosterFrameDownloadOperation .cxx_destruct]
  -[HMCameraClipPosterFrameDownloadOperation main]
  -[HMCameraClipPosterFrameDownloadOperation dataSource]
  -[HMCameraClipPosterFrameDownloadOperation cancelWithError:]
  -[HMCameraClipPosterFrameDownloadOperation clip]
  -[HMCameraClipPosterFrameDownloadOperation logIdentifier]
  -[HMCameraClipPosterFrameDownloadOperation destinationFileURL]
  -[HMCameraClipPosterFrameDownloadOperation setDestinationFileURL:]
  -[HMCameraClipPosterFrameDownloadOperation initWithClipManager:clip:posterFrame:dataSource:]
  -[HMCameraClipPosterFrameDownloadOperation posterFrame]
  -[HMCameraClipPosterFrameDownloadOperation downloadPosterFrameCompletionBlock]
  -[HMCameraClipPosterFrameDownloadOperation fetchImageData]
  -[HMCameraClipPosterFrameDownloadOperation writeImageData:]
  -[HMCameraClipPosterFrameDownloadOperation finishWithImageData:]
  -[HMCameraClipPosterFrameDownloadOperation fetchAssetContext]
  -[HMCameraClipPosterFrameDownloadOperation downloadImageDataForAssetContext:]
  -[HMCameraClipPosterFrameDownloadOperation decryptData:]
  -[HMCameraClipPosterFrameDownloadOperation clipManager]
  -[HMCameraClipPosterFrameDownloadOperation initWithClipManager:clip:posterFrame:]
  -[HMCameraClipPosterFrameDownloadOperation setDownloadPosterFrameCompletionBlock:]


HMPBCharacteristicReference : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasServiceReference
 @property  HMPBServiceReference *serviceReference
 @property  BOOL hasUniqueIdentifier
 @property  NSData *uniqueIdentifier

  // class methods
  +[HMPBCharacteristicReference characteristicReferenceWithCharacteristic:]
  +[HMPBCharacteristicReference characteristicReferenceWithData:]

  // instance methods
  -[HMPBCharacteristicReference isEqual:]
  -[HMPBCharacteristicReference copyWithZone:]
  -[HMPBCharacteristicReference .cxx_destruct]
  -[HMPBCharacteristicReference dictionaryRepresentation]
  -[HMPBCharacteristicReference uniqueIdentifier]
  -[HMPBCharacteristicReference writeTo:]
  -[HMPBCharacteristicReference mergeFrom:]
  -[HMPBCharacteristicReference readFrom:]
  -[HMPBCharacteristicReference copyTo:]
  -[HMPBCharacteristicReference setUniqueIdentifier:]
  -[HMPBCharacteristicReference hasUniqueIdentifier]
  -[HMPBCharacteristicReference setServiceReference:]
  -[HMPBCharacteristicReference hasServiceReference]
  -[HMPBCharacteristicReference serviceReference]


HMMediaPlaybackAction : HMAction <NSSecureCoding, HMObjectMerge, NSCopying, NSMutableCopying>
 @property  NSSet *mediaProfiles
 @property  long long state
 @property  NSNumber *volume
 @property  MPPlaybackArchive *playbackArchive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[HMMediaPlaybackAction supportsSecureCoding]
  +[HMMediaPlaybackAction isSupportedForHome:]
  +[HMMediaPlaybackAction mediaPlaybackActionWithProtoBuf:home:]
  +[HMMediaPlaybackAction _actionWithInfo:home:]

  // instance methods
  -[HMMediaPlaybackAction init]
  -[HMMediaPlaybackAction isEqual:]
  -[HMMediaPlaybackAction copyWithZone:]
  -[HMMediaPlaybackAction mutableCopyWithZone:]
  -[HMMediaPlaybackAction type]
  -[HMMediaPlaybackAction isValid]
  -[HMMediaPlaybackAction encodeWithCoder:]
  -[HMMediaPlaybackAction initWithCoder:]
  -[HMMediaPlaybackAction .cxx_destruct]
  -[HMMediaPlaybackAction state]
  -[HMMediaPlaybackAction setState:]
  -[HMMediaPlaybackAction initWithUUID:]
  -[HMMediaPlaybackAction volume]
  -[HMMediaPlaybackAction setVolume:]
  -[HMMediaPlaybackAction _handleUpdates:]
  -[HMMediaPlaybackAction _serializeForAdd]
  -[HMMediaPlaybackAction _mergeWithNewObject:operations:]
  -[HMMediaPlaybackAction encodeAsProtoBuf]
  -[HMMediaPlaybackAction initWithMediaProfiles:playbackState:volume:playbackArchive:uuid:]
  -[HMMediaPlaybackAction mediaProfiles]
  -[HMMediaPlaybackAction playbackArchive]
  -[HMMediaPlaybackAction setMediaProfiles:]
  -[HMMediaPlaybackAction setPlaybackArchive:]
  -[HMMediaPlaybackAction initWithPlaybackAction:uuid:]
  -[HMMediaPlaybackAction _updateWithAction:completionHandler:]
  -[HMMediaPlaybackAction _updateWithSerializedAction:home:]
  -[HMMediaPlaybackAction initWithMediaProfiles:playbackState:volume:playbackArchive:]
  -[HMMediaPlaybackAction accessoryProfiles]
  -[HMMediaPlaybackAction updateWithAction:completionHandler:]


HMMutableMediaPlaybackAction : HMMediaPlaybackAction <NSCopying>
 @property  NSSet *mediaProfiles
 @property  long long state
 @property  NSNumber *volume
 @property  MPPlaybackArchive *playbackArchive

  // instance methods
  -[HMMutableMediaPlaybackAction copyWithZone:]
  -[HMMutableMediaPlaybackAction setState:]
  -[HMMutableMediaPlaybackAction setVolume:]
  -[HMMutableMediaPlaybackAction setMediaProfiles:]
  -[HMMutableMediaPlaybackAction setPlaybackArchive:]


_HMCameraAudioControl : _HMCameraControl
 @property  HMCharacteristic *mute
 @property  HMCharacteristic *volume

  // instance methods
  -[_HMCameraAudioControl .cxx_destruct]
  -[_HMCameraAudioControl volume]
  -[_HMCameraAudioControl initWithCameraProfile:service:profileUniqueIdentifier:]
  -[_HMCameraAudioControl mute]


HMMediaSystem : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, HMFMessageReceiver, NSSecureCoding, HMObjectMerge, HMControllable, HMMediaObject, HMApplicationData, HMAccessorySettingsContainer>
 @property  _HMContext *context
 @property  HMHome *home
 @property  NSUUID *uuid
 @property  HMMutableArray *componentsArray
 @property  HMApplicationData *applicationData
 @property  <HMMediaSystemDelegate> *delegate
 @property  NSString *name
 @property  NSString *configuredName
 @property  NSUUID *uniqueIdentifier
 @property  BOOL compatible
 @property  NSArray *components
 @property  HMAccessoryCategory *category
 @property  HMSymptomsHandler *symptomsHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  BOOL controllable
 @property  HMMediaSession *mediaSession
 @property  HMAccessorySettings *settings
 @property  HMHome *containerHome

  // class methods
  +[HMMediaSystem supportsSecureCoding]
  +[HMMediaSystem logCategory]
  +[HMMediaSystem mediaSystemWithDictionary:home:]

  // instance methods
  -[HMMediaSystem init]
  -[HMMediaSystem dealloc]
  -[HMMediaSystem isEqual:]
  -[HMMediaSystem name]
  -[HMMediaSystem _invalidate]
  -[HMMediaSystem encodeWithCoder:]
  -[HMMediaSystem initWithCoder:]
  -[HMMediaSystem delegate]
  -[HMMediaSystem setDelegate:]
  -[HMMediaSystem .cxx_destruct]
  -[HMMediaSystem setName:]
  -[HMMediaSystem category]
  -[HMMediaSystem uuid]
  -[HMMediaSystem context]
  -[HMMediaSystem components]
  -[HMMediaSystem uniqueIdentifier]
  -[HMMediaSystem setContext:]
  -[HMMediaSystem home]
  -[HMMediaSystem settings]
  -[HMMediaSystem setSettings:]
  -[HMMediaSystem setHome:]
  -[HMMediaSystem applicationData]
  -[HMMediaSystem logIdentifier]
  -[HMMediaSystem messageTargetUUID]
  -[HMMediaSystem messageReceiveQueue]
  -[HMMediaSystem updateApplicationData:completionHandler:]
  -[HMMediaSystem setApplicationData:]
  -[HMMediaSystem isCompatible]
  -[HMMediaSystem _mergeWithNewObject:operations:]
  -[HMMediaSystem _registerNotificationHandlers]
  -[HMMediaSystem __configureWithContext:home:]
  -[HMMediaSystem mediaSession]
  -[HMMediaSystem isControllable]
  -[HMMediaSystem initWithHome:uuid:name:configuredName:compatible:components:settings:symptomHandler:]
  -[HMMediaSystem symptomsHandler]
  -[HMMediaSystem _handleRootSettingsUpdated:]
  -[HMMediaSystem _handleSystemUpdatedNotification:]
  -[HMMediaSystem componentsArray]
  -[HMMediaSystem _updateApplicationData:completionHandler:]
  -[HMMediaSystem notifyDelegateOfUpdatedSettings:]
  -[HMMediaSystem _mergeWithNewObject:operations:includeSettingsAndAppData:]
  -[HMMediaSystem notifyDelegateOfUpdatedComponents:]
  -[HMMediaSystem notifyDelegateOfUpdatedName:]
  -[HMMediaSystem configuredName]
  -[HMMediaSystem setConfiguredName:]
  -[HMMediaSystem notifyDelegateOfUpdatedConfiguredName:]
  -[HMMediaSystem notifyDelegateOfUpdatedApplicationData:]
  -[HMMediaSystem notifyDelegateOfUpdatedMediaSession:]
  -[HMMediaSystem containerHome]
  -[HMMediaSystem _updateAccessoryReference]
  -[HMMediaSystem updateMediaSession:forMediaProfile:]
  -[HMMediaSystem setComponentsArray:]


HMPBMediaPlaybackAction : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasActionUUID
 @property  NSData *actionUUID
 @property  NSMutableArray *mediaProfiles
 @property  BOOL hasMediaPlaybackState
 @property  int mediaPlaybackState
 @property  BOOL hasVolume
 @property  NSData *volume
 @property  BOOL hasPlaybackArchive
 @property  NSData *playbackArchive

  // class methods
  +[HMPBMediaPlaybackAction mediaProfilesType]

  // instance methods
  -[HMPBMediaPlaybackAction isEqual:]
  -[HMPBMediaPlaybackAction copyWithZone:]
  -[HMPBMediaPlaybackAction .cxx_destruct]
  -[HMPBMediaPlaybackAction dictionaryRepresentation]
  -[HMPBMediaPlaybackAction writeTo:]
  -[HMPBMediaPlaybackAction mergeFrom:]
  -[HMPBMediaPlaybackAction readFrom:]
  -[HMPBMediaPlaybackAction copyTo:]
  -[HMPBMediaPlaybackAction volume]
  -[HMPBMediaPlaybackAction setVolume:]
  -[HMPBMediaPlaybackAction hasVolume]
  -[HMPBMediaPlaybackAction actionUUID]
  -[HMPBMediaPlaybackAction mediaProfiles]
  -[HMPBMediaPlaybackAction playbackArchive]
  -[HMPBMediaPlaybackAction mediaPlaybackState]
  -[HMPBMediaPlaybackAction hasPlaybackArchive]
  -[HMPBMediaPlaybackAction setActionUUID:]
  -[HMPBMediaPlaybackAction setMediaProfiles:]
  -[HMPBMediaPlaybackAction setMediaPlaybackState:]
  -[HMPBMediaPlaybackAction setPlaybackArchive:]
  -[HMPBMediaPlaybackAction addMediaProfiles:]
  -[HMPBMediaPlaybackAction mediaProfilesCount]
  -[HMPBMediaPlaybackAction clearMediaProfiles]
  -[HMPBMediaPlaybackAction mediaProfilesAtIndex:]
  -[HMPBMediaPlaybackAction hasActionUUID]
  -[HMPBMediaPlaybackAction setHasMediaPlaybackState:]
  -[HMPBMediaPlaybackAction hasMediaPlaybackState]


HMSoftwareUpdateManager : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver>
 @property  _HMContext *context
 @property  NSUUID *identifier
 @property  BOOL started
 @property  <HMSoftwareUpdateManagerDelegate> *delegate
 @property  HMSoftwareUpdate *availableUpdate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMSoftwareUpdateManager logCategory]

  // instance methods
  -[HMSoftwareUpdateManager init]
  -[HMSoftwareUpdateManager dealloc]
  -[HMSoftwareUpdateManager delegate]
  -[HMSoftwareUpdateManager setDelegate:]
  -[HMSoftwareUpdateManager .cxx_destruct]
  -[HMSoftwareUpdateManager identifier]
  -[HMSoftwareUpdateManager isStarted]
  -[HMSoftwareUpdateManager stop]
  -[HMSoftwareUpdateManager context]
  -[HMSoftwareUpdateManager startWithCompletionHandler:]
  -[HMSoftwareUpdateManager setStarted:]
  -[HMSoftwareUpdateManager reconnect]
  -[HMSoftwareUpdateManager messageTargetUUID]
  -[HMSoftwareUpdateManager messageReceiveQueue]
  -[HMSoftwareUpdateManager messageDestination]
  -[HMSoftwareUpdateManager availableUpdate]
  -[HMSoftwareUpdateManager setAvailableUpdate:]
  -[HMSoftwareUpdateManager __registerForMessages]
  -[HMSoftwareUpdateManager _handleUpdatedAvailableUpdate:]
  -[HMSoftwareUpdateManager _handleFetch:]
  -[HMSoftwareUpdateManager _handleStartUpdate:]
  -[HMSoftwareUpdateManager _reallyStartWithCompletionHandler:]
  -[HMSoftwareUpdateManager updateAvailableUpdate:completionHandler:]


HMCameraClipEncryptionContext : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSData *key
 @property  unsigned long scheme

  // class methods
  +[HMCameraClipEncryptionContext supportsSecureCoding]

  // instance methods
  -[HMCameraClipEncryptionContext isEqual:]
  -[HMCameraClipEncryptionContext copyWithZone:]
  -[HMCameraClipEncryptionContext key]
  -[HMCameraClipEncryptionContext encodeWithCoder:]
  -[HMCameraClipEncryptionContext initWithCoder:]
  -[HMCameraClipEncryptionContext scheme]
  -[HMCameraClipEncryptionContext .cxx_destruct]
  -[HMCameraClipEncryptionContext initWithKey:scheme:]


HMPBServiceReference : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasAccessoryReference
 @property  HMPBAccessoryReference *accessoryReference
 @property  BOOL hasUniqueIdentifier
 @property  NSData *uniqueIdentifier

  // class methods
  +[HMPBServiceReference serviceReferenceWithService:]
  +[HMPBServiceReference serviceReferenceWithData:]

  // instance methods
  -[HMPBServiceReference isEqual:]
  -[HMPBServiceReference copyWithZone:]
  -[HMPBServiceReference .cxx_destruct]
  -[HMPBServiceReference dictionaryRepresentation]
  -[HMPBServiceReference uniqueIdentifier]
  -[HMPBServiceReference writeTo:]
  -[HMPBServiceReference mergeFrom:]
  -[HMPBServiceReference readFrom:]
  -[HMPBServiceReference copyTo:]
  -[HMPBServiceReference setUniqueIdentifier:]
  -[HMPBServiceReference hasUniqueIdentifier]
  -[HMPBServiceReference hasAccessoryReference]
  -[HMPBServiceReference accessoryReference]
  -[HMPBServiceReference setAccessoryReference:]


HMCharacteristicWriteAction : HMAction <NSSecureCoding, HMObjectMerge>
 @property  HMCharacteristic *characteristic
 @property  id targetValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[HMCharacteristicWriteAction supportsSecureCoding]
  +[HMCharacteristicWriteAction _actionWithInfo:home:]

  // instance methods
  -[HMCharacteristicWriteAction isEqual:]
  -[HMCharacteristicWriteAction type]
  -[HMCharacteristicWriteAction isValid]
  -[HMCharacteristicWriteAction encodeWithCoder:]
  -[HMCharacteristicWriteAction initWithCoder:]
  -[HMCharacteristicWriteAction .cxx_destruct]
  -[HMCharacteristicWriteAction initWithUUID:]
  -[HMCharacteristicWriteAction targetValue]
  -[HMCharacteristicWriteAction setTargetValue:]
  -[HMCharacteristicWriteAction _handleUpdates:]
  -[HMCharacteristicWriteAction setCharacteristic:]
  -[HMCharacteristicWriteAction characteristic]
  -[HMCharacteristicWriteAction _serializeForAdd]
  -[HMCharacteristicWriteAction _mergeWithNewObject:operations:]
  -[HMCharacteristicWriteAction requiresDeviceUnlock]
  -[HMCharacteristicWriteAction encodeAsProtoBuf]
  -[HMCharacteristicWriteAction __configureWithContext:actionSet:]
  -[HMCharacteristicWriteAction initWithCharacteristic:targetValue:]
  -[HMCharacteristicWriteAction commonInitWith:targetValue:]
  -[HMCharacteristicWriteAction _updateTargetValue:completionHandler:]
  -[HMCharacteristicWriteAction allowedTargetValueClasses]
  -[HMCharacteristicWriteAction initWithCharacteristic:targetValue:uuid:]
  -[HMCharacteristicWriteAction isKindOfAllowedTargetValueClass:]
  -[HMCharacteristicWriteAction updateTargetValue:completionHandler:]
  -[HMCharacteristicWriteAction initWithProtoBuf:home:]


HMCameraClipPosterFrame : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  unsigned long byteOffset
 @property  unsigned long sizeInBytes
 @property  double timeOffset
 @property  unsigned long width
 @property  unsigned long height

  // class methods
  +[HMCameraClipPosterFrame supportsSecureCoding]

  // instance methods
  -[HMCameraClipPosterFrame isEqual:]
  -[HMCameraClipPosterFrame copyWithZone:]
  -[HMCameraClipPosterFrame encodeWithCoder:]
  -[HMCameraClipPosterFrame initWithCoder:]
  -[HMCameraClipPosterFrame width]
  -[HMCameraClipPosterFrame height]
  -[HMCameraClipPosterFrame sizeInBytes]
  -[HMCameraClipPosterFrame timeOffset]
  -[HMCameraClipPosterFrame byteOffset]
  -[HMCameraClipPosterFrame initWithTimeOffset:width:height:byteOffset:sizeInBytes:]


_HMCameraSource : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver>
 @property  _HMContext *context
 @property  NSNumber *aspectRatio
 @property  NSUUID *profileUniqueIdentifier
 @property  NSNumber *slotIdentifier
 @property  NSString *sessionID
 @property  HMCameraView *cameraView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // instance methods
  -[_HMCameraSource .cxx_destruct]
  -[_HMCameraSource context]
  -[_HMCameraSource aspectRatio]
  -[_HMCameraSource sessionID]
  -[_HMCameraSource messageTargetUUID]
  -[_HMCameraSource messageReceiveQueue]
  -[_HMCameraSource cameraView]
  -[_HMCameraSource setCameraView:]
  -[_HMCameraSource initWithSessionID:slotIdentifier:context:profileUniqueIdentifier:aspectRatio:]
  -[_HMCameraSource profileUniqueIdentifier]
  -[_HMCameraSource slotIdentifier]


HMHomeInvitation : NSObject /usr/lib/libSystem.B.dylib <HMObjectMerge, NSSecureCoding>
 @property  _HMContext *context
 @property  HMHomeInvitationData *invitationData
 @property  HMHome *home
 @property  NSUUID *identifier
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  long long invitationState
 @property  NSURL *homeObjectURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[HMHomeInvitation supportsSecureCoding]

  // instance methods
  -[HMHomeInvitation isEqual:]
  -[HMHomeInvitation encodeWithCoder:]
  -[HMHomeInvitation initWithCoder:]
  -[HMHomeInvitation .cxx_destruct]
  -[HMHomeInvitation identifier]
  -[HMHomeInvitation startDate]
  -[HMHomeInvitation endDate]
  -[HMHomeInvitation context]
  -[HMHomeInvitation uniqueIdentifier]
  -[HMHomeInvitation setContext:]
  -[HMHomeInvitation home]
  -[HMHomeInvitation setHome:]
  -[HMHomeInvitation invitationState]
  -[HMHomeInvitation _mergeWithNewObject:operations:]
  -[HMHomeInvitation invitationData]
  -[HMHomeInvitation initWithInvitationData:home:]
  -[HMHomeInvitation homeObjectURL]
  -[HMHomeInvitation cancelInviteWithCompletionHandler:]
  -[HMHomeInvitation _updateInvitationState:]
  -[HMHomeInvitation initWithCoder:invitationData:]
  -[HMHomeInvitation setInvitationData:]


HMOutgoingHomeInvitation : HMHomeInvitation
 @property  HMUser *invitee
 @property  NSArray *accessoryInvitations

  // class methods
  +[HMOutgoingHomeInvitation supportsSecureCoding]
  +[HMOutgoingHomeInvitation homeInvitationsFromData:home:]
  +[HMOutgoingHomeInvitation homeInvitationsFromEncodedData:home:]

  // instance methods
  -[HMOutgoingHomeInvitation encodeWithCoder:]
  -[HMOutgoingHomeInvitation initWithCoder:]
  -[HMOutgoingHomeInvitation .cxx_destruct]
  -[HMOutgoingHomeInvitation _mergeWithNewObject:operations:]
  -[HMOutgoingHomeInvitation __configureWithContext:home:]
  -[HMOutgoingHomeInvitation initWithInvitationData:home:]
  -[HMOutgoingHomeInvitation cancelInviteWithCompletionHandler:]
  -[HMOutgoingHomeInvitation _cancelInviteWithCompletionHandler:]
  -[HMOutgoingHomeInvitation accessoryInvitations]
  -[HMOutgoingHomeInvitation _mergeWithNewAccessoryInvitations:operations:]
  -[HMOutgoingHomeInvitation invitee]


HMIncomingHomeInvitation : HMHomeInvitation
 @property  HMHomeManager *homeManager
 @property  HMUser *inviter
 @property  NSString *homeName
 @property  NSUUID *homeUUID

  // class methods
  +[HMIncomingHomeInvitation supportsSecureCoding]
  +[HMIncomingHomeInvitation homeInvitationsFromData:homeManager:]
  +[HMIncomingHomeInvitation homeInvitationsFromEncodedData:homeManager:]

  // instance methods
  -[HMIncomingHomeInvitation encodeWithCoder:]
  -[HMIncomingHomeInvitation initWithCoder:]
  -[HMIncomingHomeInvitation .cxx_destruct]
  -[HMIncomingHomeInvitation homeUUID]
  -[HMIncomingHomeInvitation homeName]
  -[HMIncomingHomeInvitation homeManager]
  -[HMIncomingHomeInvitation _mergeWithNewObject:operations:]
  -[HMIncomingHomeInvitation cancelInviteWithCompletionHandler:]
  -[HMIncomingHomeInvitation _cancelInviteWithCompletionHandler:]
  -[HMIncomingHomeInvitation setHomeManager:]
  -[HMIncomingHomeInvitation initWithInvitationData:homeManager:]
  -[HMIncomingHomeInvitation _acceptInviteWithCompletionHandler:]
  -[HMIncomingHomeInvitation _acceptInviteWithPresenceAuthStatus:completionHandler:]
  -[HMIncomingHomeInvitation __configureWithContext:homeManager:]
  -[HMIncomingHomeInvitation acceptInviteWithCompletionHandler:]
  -[HMIncomingHomeInvitation acceptInviteWithPresenceAuthStatus:completionHandler:]
  -[HMIncomingHomeInvitation inviter]


HMSetupViewController : UIViewController /System/Library/Frameworks/Intents.framework/Intents <HMSetupRemoteHost, _UIRemoteViewControllerContaining>
 @property  HMHome *home
 @property  HMSetupAccessoryDescription *accessoryDescription
 @property  BOOL shouldPresentWhenLoaded
 @property  @? loadHandler
 @property  _UIAsyncInvocation *cancelServiceInvocation
 @property  HMSetupRemoteViewController *remoteViewController
 @property  @? completionHandler
 @property  BOOL cancelling
 @property  BOOL disconnected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UIRemoteViewController *_containedRemoteViewController

  // instance methods
  -[HMSetupViewController init]
  -[HMSetupViewController .cxx_destruct]
  -[HMSetupViewController home]
  -[HMSetupViewController completionHandler]
  -[HMSetupViewController setCompletionHandler:]
  -[HMSetupViewController viewDidLoad]
  -[HMSetupViewController supportedInterfaceOrientations]
  -[HMSetupViewController _containedRemoteViewController]
  -[HMSetupViewController remoteViewController]
  -[HMSetupViewController setRemoteViewController:]
  -[HMSetupViewController setHome:]
  -[HMSetupViewController _requestRemoteViewController]
  -[HMSetupViewController setDisconnected:]
  -[HMSetupViewController isDisconnected]
  -[HMSetupViewController accessorySetupDidFinishWithError:]
  -[HMSetupViewController accessorySetupDidLoad]
  -[HMSetupViewController accessorySetupDidFinishWithInfo:error:]
  -[HMSetupViewController accessorySetupDidBeginPairing]
  -[HMSetupViewController accessorySetupDidFinishPairing]
  -[HMSetupViewController setupFailedWithError:]
  -[HMSetupViewController setupInterruptedWithError:]
  -[HMSetupViewController initWithHome:accessoryDescription:loadHandler:]
  -[HMSetupViewController setAccessoryDescription:]
  -[HMSetupViewController setLoadHandler:]
  -[HMSetupViewController setCancelling:]
  -[HMSetupViewController setShouldPresentWhenLoaded:]
  -[HMSetupViewController _finishSetupWithInfo:error:]
  -[HMSetupViewController _configureAndAddRemoteViewController]
  -[HMSetupViewController setCancelServiceInvocation:]
  -[HMSetupViewController accessoryDescription]
  -[HMSetupViewController shouldPresentWhenLoaded]
  -[HMSetupViewController _presentAsTopmostViewController]
  -[HMSetupViewController loadHandler]
  -[HMSetupViewController presentWhenLoaded]
  -[HMSetupViewController isCancelling]
  -[HMSetupViewController cancelServiceInvocation]


HMCameraClipDownloadAssetDataTask : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableURLRequest *urlRequest
 @property  <HMCameraClipDownloadAssetDataTaskHandling> *handler

  // instance methods
  -[HMCameraClipDownloadAssetDataTask handler]
  -[HMCameraClipDownloadAssetDataTask .cxx_destruct]
  -[HMCameraClipDownloadAssetDataTask urlRequest]
  -[HMCameraClipDownloadAssetDataTask initWithURL:httpHeaderFields:]
  -[HMCameraClipDownloadAssetDataTask downloadDataForByteRange:]
  -[HMCameraClipDownloadAssetDataTask initWithURL:httpHeaderFields:handler:]


HMCameraClipDownloadAssetDataTaskHandler : NSObject /usr/lib/libSystem.B.dylib <HMCameraClipDownloadAssetDataTaskHandling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMCameraClipDownloadAssetDataTaskHandler resumeDataTaskWithRequest:completionHandler:]


HMNetworkRouterFirewallRuleManager : NSObject /usr/lib/libSystem.B.dylib
 @property  HMHomeManager *homeManager
 @property  HMFMessageDestination *messageDestination

  // instance methods
  -[HMNetworkRouterFirewallRuleManager .cxx_destruct]
  -[HMNetworkRouterFirewallRuleManager homeManager]
  -[HMNetworkRouterFirewallRuleManager messageDestination]
  -[HMNetworkRouterFirewallRuleManager __sendMessage:]
  -[HMNetworkRouterFirewallRuleManager _dumpCloudRecordsForProductGroup:productNumber:rawOutput:listOnly:completion:]
  -[HMNetworkRouterFirewallRuleManager _dumpLocalRulesForProductGroup:productNumber:firmwareVersion:ignoreOverrides:rawOutput:completion:]
  -[HMNetworkRouterFirewallRuleManager _addOverrides:replace:completion:]
  -[HMNetworkRouterFirewallRuleManager _removeOverridesForProductGroup:productNumber:completion:]
  -[HMNetworkRouterFirewallRuleManager _fetchCloudChangesWithForceChangesFound:completion:]
  -[HMNetworkRouterFirewallRuleManager initWithHomeManager:]
  -[HMNetworkRouterFirewallRuleManager listCloudRecordsForProductGroup:rawOutput:completion:]
  -[HMNetworkRouterFirewallRuleManager dumpCloudRecordsForProductGroup:productNumber:rawOutput:completion:]
  -[HMNetworkRouterFirewallRuleManager dumpAllLocalRulesIgnoringOverrides:rawOutput:completion:]
  -[HMNetworkRouterFirewallRuleManager dumpLocalRulesForProductGroup:ignoreOverrides:rawOutput:completion:]
  -[HMNetworkRouterFirewallRuleManager dumpLocalRulesForProductGroup:productNumber:firmwareVersion:ignoreOverrides:rawOutput:completion:]
  -[HMNetworkRouterFirewallRuleManager removeAllLocalRulesWithCompletion:]
  -[HMNetworkRouterFirewallRuleManager setOverrides:completion:]
  -[HMNetworkRouterFirewallRuleManager addOverrides:completion:]
  -[HMNetworkRouterFirewallRuleManager removeAllOverridesWithCompletion:]
  -[HMNetworkRouterFirewallRuleManager removeOverridesForProductGroup:productNumber:completion:]
  -[HMNetworkRouterFirewallRuleManager fetchCloudChangesWithCompletion:]
  -[HMNetworkRouterFirewallRuleManager fetchCloudChangesAndForceChangesFoundWithCompletion:]


HMPBMetadataCategory : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasType
 @property  NSString *type
 @property  BOOL hasDesc
 @property  NSString *desc
 @property  BOOL hasNumber
 @property  int number

  // instance methods
  -[HMPBMetadataCategory isEqual:]
  -[HMPBMetadataCategory copyWithZone:]
  -[HMPBMetadataCategory type]
  -[HMPBMetadataCategory setType:]
  -[HMPBMetadataCategory .cxx_destruct]
  -[HMPBMetadataCategory dictionaryRepresentation]
  -[HMPBMetadataCategory writeTo:]
  -[HMPBMetadataCategory mergeFrom:]
  -[HMPBMetadataCategory readFrom:]
  -[HMPBMetadataCategory copyTo:]
  -[HMPBMetadataCategory number]
  -[HMPBMetadataCategory setNumber:]
  -[HMPBMetadataCategory hasType]
  -[HMPBMetadataCategory desc]
  -[HMPBMetadataCategory setDesc:]
  -[HMPBMetadataCategory hasDesc]
  -[HMPBMetadataCategory setHasNumber:]
  -[HMPBMetadataCategory hasNumber]


HMRoom : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, HMObjectMerge, HMMutableApplicationData>
 @property  _HMContext *context
 @property  HMHome *home
 @property  NSUUID *uuid
 @property  NSString *name
 @property  NSArray *accessories
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMApplicationData *applicationData
 @property  NSUUID *applicationDataIdentifier

  // class methods
  +[HMRoom supportsSecureCoding]

  // instance methods
  -[HMRoom init]
  -[HMRoom name]
  -[HMRoom _invalidate]
  -[HMRoom encodeWithCoder:]
  -[HMRoom initWithCoder:]
  -[HMRoom .cxx_destruct]
  -[HMRoom setName:]
  -[HMRoom initWithName:]
  -[HMRoom uuid]
  -[HMRoom context]
  -[HMRoom uniqueIdentifier]
  -[HMRoom setUuid:]
  -[HMRoom setContext:]
  -[HMRoom home]
  -[HMRoom setHome:]
  -[HMRoom accessories]
  -[HMRoom applicationData]
  -[HMRoom updateApplicationData:completionHandler:]
  -[HMRoom setApplicationData:]
  -[HMRoom _mergeWithNewObject:operations:]
  -[HMRoom __configureWithContext:home:]
  -[HMRoom _unconfigure]
  -[HMRoom _updateName:completionHandler:]
  -[HMRoom updateName:completionHandler:]
  -[HMRoom applicationDataIdentifier]
  -[HMRoom _updateRoomName:completionHandler:]


HMSettingGroup : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSString *keyPath
 @property  NSString *name
 @property  NSMutableArray *internalSettings
 @property  NSMutableArray *internalGroups
 @property  NSString *localizedTitle
 @property  NSArray *settings
 @property  NSArray *groups

  // class methods
  +[HMSettingGroup supportsSecureCoding]

  // instance methods
  -[HMSettingGroup name]
  -[HMSettingGroup encodeWithCoder:]
  -[HMSettingGroup initWithCoder:]
  -[HMSettingGroup .cxx_destruct]
  -[HMSettingGroup identifier]
  -[HMSettingGroup keyPath]
  -[HMSettingGroup settings]
  -[HMSettingGroup merge:]
  -[HMSettingGroup localizedTitle]
  -[HMSettingGroup groups]
  -[HMSettingGroup setKeyPath:]
  -[HMSettingGroup addGroup:]
  -[HMSettingGroup addSetting:]
  -[HMSettingGroup internalGroups]
  -[HMSettingGroup internalSettings]
  -[HMSettingGroup initWithIdentifier:name:groups:settings:]
  -[HMSettingGroup setInternalSettings:]
  -[HMSettingGroup setInternalGroups:]


HMRemoteLoginAnisetteDataProvider : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver, AKAnisetteServiceProtocol, NSSecureCoding, NSCopying>
 @property  NSUUID *uuid
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMDelegateCaller *delegateCaller
 @property  HMFMessageDispatcher *msgDispatcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMRemoteLoginAnisetteDataProvider supportsSecureCoding]

  // instance methods
  -[HMRemoteLoginAnisetteDataProvider copyWithZone:]
  -[HMRemoteLoginAnisetteDataProvider encodeWithCoder:]
  -[HMRemoteLoginAnisetteDataProvider initWithCoder:]
  -[HMRemoteLoginAnisetteDataProvider .cxx_destruct]
  -[HMRemoteLoginAnisetteDataProvider uuid]
  -[HMRemoteLoginAnisetteDataProvider clientQueue]
  -[HMRemoteLoginAnisetteDataProvider messageTargetUUID]
  -[HMRemoteLoginAnisetteDataProvider messageReceiveQueue]
  -[HMRemoteLoginAnisetteDataProvider provisionAnisetteWithCompletion:]
  -[HMRemoteLoginAnisetteDataProvider syncAnisetteWithSIMData:completion:]
  -[HMRemoteLoginAnisetteDataProvider eraseAnisetteWithCompletion:]
  -[HMRemoteLoginAnisetteDataProvider fetchAnisetteDataAndProvisionIfNecessary:withCompletion:]
  -[HMRemoteLoginAnisetteDataProvider legacyAnisetteDataForDSID:withCompletion:]
  -[HMRemoteLoginAnisetteDataProvider setClientQueue:]
  -[HMRemoteLoginAnisetteDataProvider delegateCaller]
  -[HMRemoteLoginAnisetteDataProvider setDelegateCaller:]
  -[HMRemoteLoginAnisetteDataProvider setMsgDispatcher:]
  -[HMRemoteLoginAnisetteDataProvider msgDispatcher]
  -[HMRemoteLoginAnisetteDataProvider _configureClientQueue:delegateCaller:msgDispatcher:]


HMCameraClipFetchVideoAssetContextOperation : HMFOperation /System/Library/Frameworks/Foundation.framework/Foundation
 @property  <HMCameraClipFetchAssetContextOperationDataSource> *dataSource
 @property  HMCameraClipManager *clipManager
 @property  HMCameraClip *clip
 @property  NSURL *clipDestinationFileURL
 @property  NSURL *hlsPlaylistDestinationFileURL
 @property  @? downloadProgressHandler
 @property  @? fetchVideoAssetContextCompletionBlock

  // class methods
  +[HMCameraClipFetchVideoAssetContextOperation logCategory]

  // instance methods
  -[HMCameraClipFetchVideoAssetContextOperation .cxx_destruct]
  -[HMCameraClipFetchVideoAssetContextOperation main]
  -[HMCameraClipFetchVideoAssetContextOperation dataSource]
  -[HMCameraClipFetchVideoAssetContextOperation cancelWithError:]
  -[HMCameraClipFetchVideoAssetContextOperation clip]
  -[HMCameraClipFetchVideoAssetContextOperation logIdentifier]
  -[HMCameraClipFetchVideoAssetContextOperation decryptData:]
  -[HMCameraClipFetchVideoAssetContextOperation clipManager]
  -[HMCameraClipFetchVideoAssetContextOperation initWithClipManager:clip:dataSource:]
  -[HMCameraClipFetchVideoAssetContextOperation fetchVideoAssetContextCompletionBlock]
  -[HMCameraClipFetchVideoAssetContextOperation fetchVideoAssetContext]
  -[HMCameraClipFetchVideoAssetContextOperation downloadVideoAsset:]
  -[HMCameraClipFetchVideoAssetContextOperation writeHLSPlaylistForVideoAssetContext:]
  -[HMCameraClipFetchVideoAssetContextOperation finishWithVideoAssetContext:]
  -[HMCameraClipFetchVideoAssetContextOperation downloadProgressHandler]
  -[HMCameraClipFetchVideoAssetContextOperation clipDestinationFileURL]
  -[HMCameraClipFetchVideoAssetContextOperation updateDownloadProgressToPercentageComplete:]
  -[HMCameraClipFetchVideoAssetContextOperation downloadVideoSegment:forDataTask:andAppendToOutputStream:]
  -[HMCameraClipFetchVideoAssetContextOperation hlsPlaylistDestinationFileURL]
  -[HMCameraClipFetchVideoAssetContextOperation initWithClipManager:clip:]
  -[HMCameraClipFetchVideoAssetContextOperation setClipDestinationFileURL:]
  -[HMCameraClipFetchVideoAssetContextOperation setHlsPlaylistDestinationFileURL:]
  -[HMCameraClipFetchVideoAssetContextOperation setDownloadProgressHandler:]
  -[HMCameraClipFetchVideoAssetContextOperation setFetchVideoAssetContextCompletionBlock:]


_HMCameraSnapshot : _HMCameraSource
 @property  NSDate *captureDate

  // instance methods
  -[_HMCameraSnapshot dealloc]
  -[_HMCameraSnapshot .cxx_destruct]
  -[_HMCameraSnapshot captureDate]
  -[_HMCameraSnapshot initWithSessionID:slotIdentifier:context:profileUniqueIdentifier:aspectRatio:captureDate:]
  -[_HMCameraSnapshot _releaseSlotIdentifier]


HMBulletinObjectTuple : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *queryName
 @property  NSString *uuidString

  // class methods
  +[HMBulletinObjectTuple tupleWithQueryType:uuidString:]

  // instance methods
  -[HMBulletinObjectTuple .cxx_destruct]
  -[HMBulletinObjectTuple uuidString]
  -[HMBulletinObjectTuple queryName]
  -[HMBulletinObjectTuple initWithQueryType:uuidString:]


HMCameraVideoResolution : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned long videoResolution

  // class methods
  +[HMCameraVideoResolution supportsSecureCoding]
  +[HMCameraVideoResolution isValid:]

  // instance methods
  -[HMCameraVideoResolution isEqual:]
  -[HMCameraVideoResolution encodeWithCoder:]
  -[HMCameraVideoResolution initWithCoder:]
  -[HMCameraVideoResolution videoResolution]
  -[HMCameraVideoResolution initWithVideoResolutionType:]


HMSymptomsHandler : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, HMFMessageReceiver, HMFLogging, HMObjectMerge>
 @property  _HMContext *context
 @property  NSHashTable *fixSessions
 @property  NSUUID *uuid
 @property  HMMutableArray *currentSymptoms
 @property  NSUUID *sfDeviceIdentifier
 @property  NSSet *symptoms
 @property  <HMSymptomsHandlerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[HMSymptomsHandler supportsSecureCoding]
  +[HMSymptomsHandler logCategory]

  // instance methods
  -[HMSymptomsHandler init]
  -[HMSymptomsHandler encodeWithCoder:]
  -[HMSymptomsHandler initWithCoder:]
  -[HMSymptomsHandler delegate]
  -[HMSymptomsHandler setDelegate:]
  -[HMSymptomsHandler .cxx_destruct]
  -[HMSymptomsHandler uuid]
  -[HMSymptomsHandler context]
  -[HMSymptomsHandler uniqueIdentifier]
  -[HMSymptomsHandler setContext:]
  -[HMSymptomsHandler initWithUUID:]
  -[HMSymptomsHandler logIdentifier]
  -[HMSymptomsHandler messageTargetUUID]
  -[HMSymptomsHandler messageReceiveQueue]
  -[HMSymptomsHandler _mergeWithNewObject:operations:]
  -[HMSymptomsHandler __configureWithContext:]
  -[HMSymptomsHandler registerForMessages]
  -[HMSymptomsHandler currentSymptoms]
  -[HMSymptomsHandler _handleSymptomsUpdated:]
  -[HMSymptomsHandler _handleSFDeviceIdentifierUpdated:]
  -[HMSymptomsHandler symptoms]
  -[HMSymptomsHandler sfDeviceIdentifier]
  -[HMSymptomsHandler _addFixSession:]
  -[HMSymptomsHandler _findAndRemoveFixSessionsForSymptom:]
  -[HMSymptomsHandler _callSymptomsUpdatedDelegate:]
  -[HMSymptomsHandler setSFDeviceIdentifier:]
  -[HMSymptomsHandler _callFixSessionAvailabilityUpdatedDelegate]
  -[HMSymptomsHandler fixSessions]
  -[HMSymptomsHandler newFixSessionForSymptom:]
  -[HMSymptomsHandler initiateFixWithCompletionHandler:]
  -[HMSymptomsHandler setFixSessions:]


HMAddUserViewController : UIViewController /System/Library/Frameworks/Intents.framework/Intents <HMUserManagementRemoteHost>
 @property  HMHome *home
 @property  BOOL shouldPresentWhenLoaded
 @property  @? loadHandler
 @property  _UIAsyncInvocation *cancelServiceInvocation
 @property  HMAddUserRemoteViewController *remoteViewController
 @property  @? completionHandler

  // instance methods
  -[HMAddUserViewController .cxx_destruct]
  -[HMAddUserViewController home]
  -[HMAddUserViewController completionHandler]
  -[HMAddUserViewController setCompletionHandler:]
  -[HMAddUserViewController viewDidLoad]
  -[HMAddUserViewController supportedInterfaceOrientations]
  -[HMAddUserViewController shouldAutorotate]
  -[HMAddUserViewController remoteViewController]
  -[HMAddUserViewController setRemoteViewController:]
  -[HMAddUserViewController setHome:]
  -[HMAddUserViewController _requestRemoteViewController]
  -[HMAddUserViewController userManagementDidFinishWithError:]
  -[HMAddUserViewController userManagementDidLoad]
  -[HMAddUserViewController setLoadHandler:]
  -[HMAddUserViewController setShouldPresentWhenLoaded:]
  -[HMAddUserViewController _configureAndAddRemoteViewController]
  -[HMAddUserViewController setCancelServiceInvocation:]
  -[HMAddUserViewController shouldPresentWhenLoaded]
  -[HMAddUserViewController _presentAsTopmostViewController]
  -[HMAddUserViewController loadHandler]
  -[HMAddUserViewController presentWhenLoaded]
  -[HMAddUserViewController cancelServiceInvocation]
  -[HMAddUserViewController _finishSetupWithError:]
  -[HMAddUserViewController initWithHome:loadHandler:]


HMServiceGroup : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, HMFMessageReceiver, NSSecureCoding, HMObjectMerge, HMMutableApplicationData>
 @property  _HMContext *context
 @property  HMMutableArray *currentServices
 @property  NSUUID *uuid
 @property  HMHome *home
 @property  NSString *name
 @property  NSArray *services
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  HMApplicationData *applicationData
 @property  NSUUID *applicationDataIdentifier

  // class methods
  +[HMServiceGroup supportsSecureCoding]
  +[HMServiceGroup logCategory]

  // instance methods
  -[HMServiceGroup init]
  -[HMServiceGroup dealloc]
  -[HMServiceGroup name]
  -[HMServiceGroup _invalidate]
  -[HMServiceGroup encodeWithCoder:]
  -[HMServiceGroup initWithCoder:]
  -[HMServiceGroup .cxx_destruct]
  -[HMServiceGroup setName:]
  -[HMServiceGroup uuid]
  -[HMServiceGroup context]
  -[HMServiceGroup uniqueIdentifier]
  -[HMServiceGroup setContext:]
  -[HMServiceGroup home]
  -[HMServiceGroup services]
  -[HMServiceGroup setHome:]
  -[HMServiceGroup applicationData]
  -[HMServiceGroup logIdentifier]
  -[HMServiceGroup messageTargetUUID]
  -[HMServiceGroup messageReceiveQueue]
  -[HMServiceGroup updateApplicationData:completionHandler:]
  -[HMServiceGroup setApplicationData:]
  -[HMServiceGroup _mergeWithNewObject:operations:]
  -[HMServiceGroup _registerNotificationHandlers]
  -[HMServiceGroup __configureWithContext:home:]
  -[HMServiceGroup _unconfigure]
  -[HMServiceGroup _updateName:completionHandler:]
  -[HMServiceGroup updateName:completionHandler:]
  -[HMServiceGroup _findService:]
  -[HMServiceGroup applicationDataIdentifier]
  -[HMServiceGroup currentServices]
  -[HMServiceGroup _addService:completionHandler:]
  -[HMServiceGroup _removeService:completionHandler:]
  -[HMServiceGroup _handleServiceAddedNotification:]
  -[HMServiceGroup _handleServiceRemovedNotification:]
  -[HMServiceGroup _handleServiceGroupRenamedNotification:]
  -[HMServiceGroup initWithName:uuid:]
  -[HMServiceGroup _removeServices:]
  -[HMServiceGroup addService:completionHandler:]
  -[HMServiceGroup removeService:completionHandler:]
  -[HMServiceGroup setCurrentServices:]


_HMNetworkConfigurationProfile : _HMAccessoryProfile
 @property  long long targetProtectionMode
 @property  long long currentProtectionMode
 @property  BOOL networkAccessRestricted
 @property  NSArray *allowedHosts
 @property  HMAccessoryNetworkAccessViolation *accessViolation
 @property  BOOL supportsWiFiReconfiguration
 @property  long long credentialType
 @property  <_HMNetworkConfigurationProfileDelegate> *delegate

  // instance methods
  -[_HMNetworkConfigurationProfile delegate]
  -[_HMNetworkConfigurationProfile setDelegate:]
  -[_HMNetworkConfigurationProfile .cxx_destruct]
  -[_HMNetworkConfigurationProfile credentialType]
  -[_HMNetworkConfigurationProfile setCredentialType:]
  -[_HMNetworkConfigurationProfile messageTargetUUID]
  -[_HMNetworkConfigurationProfile messageReceiveQueue]
  -[_HMNetworkConfigurationProfile _mergeWithNewObject:operations:]
  -[_HMNetworkConfigurationProfile _registerNotificationHandlers]
  -[_HMNetworkConfigurationProfile messageDestination]
  -[_HMNetworkConfigurationProfile _handleProtectionModeUpdated:]
  -[_HMNetworkConfigurationProfile _handleHostsUpdated:]
  -[_HMNetworkConfigurationProfile _handleAccessViolationUpdated:]
  -[_HMNetworkConfigurationProfile _handleWiFiReconfigurationUpdated:]
  -[_HMNetworkConfigurationProfile currentProtectionMode]
  -[_HMNetworkConfigurationProfile isNetworkAccessRestricted]
  -[_HMNetworkConfigurationProfile targetProtectionMode]
  -[_HMNetworkConfigurationProfile setCurrentProtectionMode:]
  -[_HMNetworkConfigurationProfile setTargetProtectionMode:]
  -[_HMNetworkConfigurationProfile _notifyDelegateOfUpdatedProtectionMode]
  -[_HMNetworkConfigurationProfile setNetworkAccessRestricted:]
  -[_HMNetworkConfigurationProfile _notifyDelegateOfNetworkAccessModeChanged]
  -[_HMNetworkConfigurationProfile allowedHosts]
  -[_HMNetworkConfigurationProfile setAllowedHosts:]
  -[_HMNetworkConfigurationProfile _notifyDelegateOfUpdatedAllowedHosts]
  -[_HMNetworkConfigurationProfile accessViolation]
  -[_HMNetworkConfigurationProfile setAccessViolation:]
  -[_HMNetworkConfigurationProfile _notifyDelegateOfUpdatedAccessViolation]
  -[_HMNetworkConfigurationProfile supportsWiFiReconfiguration]
  -[_HMNetworkConfigurationProfile setSupportsWiFiReconfiguration:]
  -[_HMNetworkConfigurationProfile _notifyDelegateOfUpdatedWiFiReconfigurationSupport]
  -[_HMNetworkConfigurationProfile _notifyDelegateOfUpdatedWiFiCredentialType]
  -[_HMNetworkConfigurationProfile __checkContextAndCompletionHandler:]
  -[_HMNetworkConfigurationProfile __sendMessage:completionHandler:]
  -[_HMNetworkConfigurationProfile initWithAccessoryIdentifier:targetProtection:currentProtection:networkAccessRestricted:allowedHosts:accessViolation:supportsWiFiReconfiguration:credentialType:]
  -[_HMNetworkConfigurationProfile updateProtectionMode:completionHandler:]
  -[_HMNetworkConfigurationProfile reconfigureWiFiWithOptions:completionHandler:]


HMNetworkConfigurationProfile : HMAccessoryProfile <_HMNetworkConfigurationProfileDelegate>
 @property  long long targetProtectionMode
 @property  long long currentProtectionMode
 @property  NSArray *allowedHosts
 @property  HMAccessoryNetworkAccessViolation *accessViolation
 @property  BOOL supportsWiFiReconfiguration
 @property  long long credentialType
 @property  <HMNetworkConfigurationProfileDelegate> *delegate
 @property  BOOL networkAccessRestricted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMNetworkConfigurationProfile delegate]
  -[HMNetworkConfigurationProfile setDelegate:]
  -[HMNetworkConfigurationProfile .cxx_destruct]
  -[HMNetworkConfigurationProfile credentialType]
  -[HMNetworkConfigurationProfile _mergeWithNewObject:operations:]
  -[HMNetworkConfigurationProfile currentProtectionMode]
  -[HMNetworkConfigurationProfile isNetworkAccessRestricted]
  -[HMNetworkConfigurationProfile targetProtectionMode]
  -[HMNetworkConfigurationProfile allowedHosts]
  -[HMNetworkConfigurationProfile accessViolation]
  -[HMNetworkConfigurationProfile supportsWiFiReconfiguration]
  -[HMNetworkConfigurationProfile networkConfigurationProfileDidUpdateProtectionMode:]
  -[HMNetworkConfigurationProfile networkConfigurationProfileDidUpdateNetworkAccessMode:]
  -[HMNetworkConfigurationProfile networkConfigurationProfileDidUpdateAllowedHosts:]
  -[HMNetworkConfigurationProfile networkConfigurationProfileDidUpdateAccessViolation:]
  -[HMNetworkConfigurationProfile networkConfigurationProfileDidUpdateWiFiReconfigurationSupport:]
  -[HMNetworkConfigurationProfile networkConfigurationProfileDidUpdateWiFiCredentialType:]
  -[HMNetworkConfigurationProfile initWithAccessoryIdentifier:targetProtection:currentProtection:networkAccessRestricted:allowedHosts:accessViolation:supportsWiFiReconfiguration:credentialType:]
  -[HMNetworkConfigurationProfile updateProtectionMode:completionHandler:]
  -[HMNetworkConfigurationProfile reconfigureWiFiWithOptions:completionHandler:]


_HMNetworkRouterProfile : _HMAccessoryProfile
 @property  unsigned long networkStatus
 @property  BOOL satellite
 @property  NSSet *identifiersForSatelliteProfiles
 @property  <_HMNetworkRouterProfileDelegate> *delegate

  // class methods
  +[_HMNetworkRouterProfile supportsSecureCoding]

  // instance methods
  -[_HMNetworkRouterProfile initWithCoder:]
  -[_HMNetworkRouterProfile delegate]
  -[_HMNetworkRouterProfile setDelegate:]
  -[_HMNetworkRouterProfile .cxx_destruct]
  -[_HMNetworkRouterProfile messageTargetUUID]
  -[_HMNetworkRouterProfile messageReceiveQueue]
  -[_HMNetworkRouterProfile networkStatus]
  -[_HMNetworkRouterProfile _registerNotificationHandlers]
  -[_HMNetworkRouterProfile handleRuntimeStateUpdate:]
  -[_HMNetworkRouterProfile messageDestination]
  -[_HMNetworkRouterProfile _handleNetworkStatusUpdated:]
  -[_HMNetworkRouterProfile _handleSatelliteProfilesUpdated:]
  -[_HMNetworkRouterProfile identifiersForSatelliteProfiles]
  -[_HMNetworkRouterProfile setIdentifiersForSatelliteProfiles:]
  -[_HMNetworkRouterProfile setNetworkStatus:]
  -[_HMNetworkRouterProfile checkForUpdatedIdentifiersForSatellites:]
  -[_HMNetworkRouterProfile checkForUpdatedNetworkStatus:]
  -[_HMNetworkRouterProfile __handleNetworkStatusUpdated:]
  -[_HMNetworkRouterProfile isSatellite]
  -[_HMNetworkRouterProfile setSatellite:]


HMNetworkRouterProfile : HMAccessoryProfile <_HMNetworkRouterProfileDelegate>
 @property  unsigned long networkStatus
 @property  <HMNetworkRouterProfileDelegate> *delegate
 @property  BOOL satellite
 @property  NSArray *satelliteProfiles
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMNetworkRouterProfile delegate]
  -[HMNetworkRouterProfile setDelegate:]
  -[HMNetworkRouterProfile .cxx_destruct]
  -[HMNetworkRouterProfile services]
  -[HMNetworkRouterProfile networkStatus]
  -[HMNetworkRouterProfile _mergeWithNewObject:operations:]
  -[HMNetworkRouterProfile initWithNetworkRouterProfile:]
  -[HMNetworkRouterProfile networkRouterProfile]
  -[HMNetworkRouterProfile identifiersForSatelliteProfiles]
  -[HMNetworkRouterProfile setIdentifiersForSatelliteProfiles:]
  -[HMNetworkRouterProfile routerProfileDidUpdateIdentifiersForSatellites:]
  -[HMNetworkRouterProfile routerProfileDidUpdateNetworkStatus:]
  -[HMNetworkRouterProfile isSatellite]
  -[HMNetworkRouterProfile satelliteProfiles]


HMUserCloudShareClientInfo : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSData *accountAuthToken

  // class methods
  +[HMUserCloudShareClientInfo supportsSecureCoding]

  // instance methods
  -[HMUserCloudShareClientInfo encodeWithCoder:]
  -[HMUserCloudShareClientInfo initWithCoder:]
  -[HMUserCloudShareClientInfo .cxx_destruct]
  -[HMUserCloudShareClientInfo initWithAccountAuthToken:]
  -[HMUserCloudShareClientInfo accountAuthToken]


HMTimerTrigger : HMTrigger <NSSecureCoding>
 @property  NSDate *fireDate
 @property  NSTimeZone *timeZone
 @property  NSDateComponents *recurrence
 @property  NSString *significantEvent
 @property  NSDateComponents *significantEventOffset
 @property  NSArray *recurrences
 @property  NSCalendar *recurrenceCalendar

  // class methods
  +[HMTimerTrigger supportsSecureCoding]

  // instance methods
  -[HMTimerTrigger init]
  -[HMTimerTrigger encodeWithCoder:]
  -[HMTimerTrigger initWithCoder:]
  -[HMTimerTrigger fireDate]
  -[HMTimerTrigger setFireDate:]
  -[HMTimerTrigger setTimeZone:]
  -[HMTimerTrigger .cxx_destruct]
  -[HMTimerTrigger timeZone]
  -[HMTimerTrigger recurrence]
  -[HMTimerTrigger setRecurrence:]
  -[HMTimerTrigger recurrences]
  -[HMTimerTrigger setRecurrences:]
  -[HMTimerTrigger _serializeForAdd]
  -[HMTimerTrigger _mergeWithNewObject:operations:]
  -[HMTimerTrigger _registerNotificationHandlers]
  -[HMTimerTrigger _handleTriggerFired:]
  -[HMTimerTrigger _updateRecurrences:completionHandler:]
  -[HMTimerTrigger significantEvent]
  -[HMTimerTrigger updateRecurrences:completionHandler:]
  -[HMTimerTrigger _updateFireDate:completionHandler:]
  -[HMTimerTrigger _updateTimeZone:completionHandler:]
  -[HMTimerTrigger _updateSignificantEvent:completionHandler:]
  -[HMTimerTrigger _updateSignificantEventOffset:completionHandler:]
  -[HMTimerTrigger _updateRecurrence:completionHandler:]
  -[HMTimerTrigger significantEventOffset]
  -[HMTimerTrigger setSignificantEvent:]
  -[HMTimerTrigger setSignificantEventOffset:]
  -[HMTimerTrigger _handleScheduleChangedNotification:]
  -[HMTimerTrigger initWithName:fireDate:timeZone:recurrence:recurrenceCalendar:]
  -[HMTimerTrigger initWithName:fireDate:timeZone:recurrences:]
  -[HMTimerTrigger initWithName:significantEvent:significantEventOffset:recurrences:]
  -[HMTimerTrigger updateFireDate:completionHandler:]
  -[HMTimerTrigger updateTimeZone:completionHandler:]
  -[HMTimerTrigger updateSignificantEvent:completionHandler:]
  -[HMTimerTrigger updateSignificantEventOffset:completionHandler:]
  -[HMTimerTrigger updateRecurrence:completionHandler:]
  -[HMTimerTrigger recurrenceCalendar]


_HMCameraProfile : _HMAccessoryProfile
 @property  NSArray *controls
 @property  HMCameraUserSettings *userSettings
 @property  HMCameraClipManager *clipManager
 @property  _HMCameraStreamControl *streamControlInternal
 @property  _HMCameraSnapshotControl *snapshotControlInternal
 @property  _HMCameraSettingsControl *settingsControl
 @property  _HMCameraAudioControl *speakerControl
 @property  _HMCameraAudioControl *microphoneControl

  // class methods
  +[_HMCameraProfile supportsSecureCoding]

  // instance methods
  -[_HMCameraProfile init]
  -[_HMCameraProfile encodeWithCoder:]
  -[_HMCameraProfile initWithCoder:]
  -[_HMCameraProfile .cxx_destruct]
  -[_HMCameraProfile userSettings]
  -[_HMCameraProfile controls]
  -[_HMCameraProfile _registerNotificationHandlers]
  -[_HMCameraProfile settingsControl]
  -[_HMCameraProfile clipManager]
  -[_HMCameraProfile _createControls:]
  -[_HMCameraProfile streamControlInternal]
  -[_HMCameraProfile snapshotControlInternal]
  -[_HMCameraProfile microphoneControl]
  -[_HMCameraProfile speakerControl]
  -[_HMCameraProfile __configureWithContext:accessory:]
  -[_HMCameraProfile setClipManager:]
  -[_HMCameraProfile setUserSettings:]
  -[_HMCameraProfile addUserSettings:]
  -[_HMCameraProfile deleteAllClipsWithCompletionHandler:]


HMAccessoryInvitation : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, HMObjectMerge>
 @property  NSUUID *identifier
 @property  HMAccessory *accessory
 @property  long long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[HMAccessoryInvitation supportsSecureCoding]

  // instance methods
  -[HMAccessoryInvitation encodeWithCoder:]
  -[HMAccessoryInvitation initWithCoder:]
  -[HMAccessoryInvitation .cxx_destruct]
  -[HMAccessoryInvitation identifier]
  -[HMAccessoryInvitation setIdentifier:]
  -[HMAccessoryInvitation state]
  -[HMAccessoryInvitation uniqueIdentifier]
  -[HMAccessoryInvitation setState:]
  -[HMAccessoryInvitation accessory]
  -[HMAccessoryInvitation setAccessory:]
  -[HMAccessoryInvitation _mergeWithNewObject:operations:]
  -[HMAccessoryInvitation initWithAccessory:identifier:state:]


HMSignificantTimeEvent : HMTimeEvent <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  NSString *significantEvent
 @property  NSDateComponents *offset

  // class methods
  +[HMSignificantTimeEvent supportsSecureCoding]
  +[HMSignificantTimeEvent createWithDictionary:home:]

  // instance methods
  -[HMSignificantTimeEvent copyWithZone:]
  -[HMSignificantTimeEvent mutableCopyWithZone:]
  -[HMSignificantTimeEvent encodeWithCoder:]
  -[HMSignificantTimeEvent initWithCoder:]
  -[HMSignificantTimeEvent .cxx_destruct]
  -[HMSignificantTimeEvent setOffset:]
  -[HMSignificantTimeEvent offset]
  -[HMSignificantTimeEvent _serializeForAdd]
  -[HMSignificantTimeEvent _handleEventUpdatedNotification:]
  -[HMSignificantTimeEvent significantEvent]
  -[HMSignificantTimeEvent _updateSignificantEvent:completionHandler:]
  -[HMSignificantTimeEvent setSignificantEvent:]
  -[HMSignificantTimeEvent updateSignificantEvent:completionHandler:]
  -[HMSignificantTimeEvent initWithDict:significantEvent:offset:]
  -[HMSignificantTimeEvent _update:completionHandler:]
  -[HMSignificantTimeEvent _updateOffset:completionHandler:]
  -[HMSignificantTimeEvent initWithSignificantEvent:offset:]
  -[HMSignificantTimeEvent updateOffset:completionHandler:]


HMMutableSignificantTimeEvent : HMSignificantTimeEvent
 @property  NSString *significantEvent
 @property  NSDateComponents *offset


HMCameraProfile : HMAccessoryProfile <HMFLogging>
 @property  _HMCameraProfile *cameraProfile
 @property  HMCameraStreamControl *streamControl
 @property  HMCameraSnapshotControl *snapshotControl
 @property  HMCameraSettingsControl *settingsControl
 @property  HMCameraAudioControl *speakerControl
 @property  HMCameraAudioControl *microphoneControl
 @property  HMCameraUserSettings *userSettings
 @property  <HMCameraProfileUserSettingsDelegate> *userSettingsDelegate
 @property  HMCameraClipManager *clipManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraProfile logCategory]

  // instance methods
  -[HMCameraProfile .cxx_destruct]
  -[HMCameraProfile userSettings]
  -[HMCameraProfile services]
  -[HMCameraProfile logIdentifier]
  -[HMCameraProfile cameraProfile]
  -[HMCameraProfile _mergeWithNewObject:operations:]
  -[HMCameraProfile streamControl]
  -[HMCameraProfile setStreamControl:]
  -[HMCameraProfile settingsControl]
  -[HMCameraProfile setSettingsControl:]
  -[HMCameraProfile clipManager]
  -[HMCameraProfile microphoneControl]
  -[HMCameraProfile speakerControl]
  -[HMCameraProfile deleteAllClipsWithCompletionHandler:]
  -[HMCameraProfile snapshotControl]
  -[HMCameraProfile userSettingsDelegate]
  -[HMCameraProfile initWithCameraProfile:]
  -[HMCameraProfile setSnapshotControl:]
  -[HMCameraProfile setSpeakerControl:]
  -[HMCameraProfile setMicrophoneControl:]
  -[HMCameraProfile setUserSettingsDelegate:]


HMCalendarEvent : HMTimeEvent <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  NSDateComponents *fireDateComponents

  // class methods
  +[HMCalendarEvent supportsSecureCoding]
  +[HMCalendarEvent createWithDictionary:home:]

  // instance methods
  -[HMCalendarEvent copyWithZone:]
  -[HMCalendarEvent mutableCopyWithZone:]
  -[HMCalendarEvent encodeWithCoder:]
  -[HMCalendarEvent initWithCoder:]
  -[HMCalendarEvent .cxx_destruct]
  -[HMCalendarEvent _serializeForAdd]
  -[HMCalendarEvent _handleEventUpdatedNotification:]
  -[HMCalendarEvent initWithDict:fireDateComponents:]
  -[HMCalendarEvent setFireDateComponents:]
  -[HMCalendarEvent fireDateComponents]
  -[HMCalendarEvent _updateFireDateComponents:completionHandler:]
  -[HMCalendarEvent initWithFireDateComponents:]
  -[HMCalendarEvent updateFireDateComponents:completionHandler:]


HMMutableCalendarEvent : HMCalendarEvent
 @property  NSDateComponents *fireDateComponents


HMAddAccessoryRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  HMHome *home
 @property  NSUUID *requestIdentifier
 @property  NSString *accessoryName
 @property  HMAccessoryCategory *accessoryCategory
 @property  BOOL requiresSetupPayloadURL
 @property  BOOL requiresOwnershipToken

  // class methods
  +[HMAddAccessoryRequest supportsSecureCoding]

  // instance methods
  -[HMAddAccessoryRequest isEqual:]
  -[HMAddAccessoryRequest encodeWithCoder:]
  -[HMAddAccessoryRequest initWithCoder:]
  -[HMAddAccessoryRequest .cxx_destruct]
  -[HMAddAccessoryRequest accessoryName]
  -[HMAddAccessoryRequest home]
  -[HMAddAccessoryRequest requestIdentifier]
  -[HMAddAccessoryRequest setHome:]
  -[HMAddAccessoryRequest accessoryCategory]
  -[HMAddAccessoryRequest requiresSetupPayloadURL]
  -[HMAddAccessoryRequest payloadWithOwnershipToken:]
  -[HMAddAccessoryRequest payloadWithURL:ownershipToken:]
  -[HMAddAccessoryRequest initWithIdentifer:accessoryName:accessoryCategory:]
  -[HMAddAccessoryRequest requiresOwnershipToken]


HMAsset : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *dictionaryRepresentation
 @property  NSString *identifier
 @property  NSDictionary *metadata
 @property  NSURL *resourceURL

  // class methods
  +[HMAsset supportsSecureCoding]

  // instance methods
  -[HMAsset isEqual:]
  -[HMAsset encodeWithCoder:]
  -[HMAsset initWithCoder:]
  -[HMAsset .cxx_destruct]
  -[HMAsset identifier]
  -[HMAsset resourceURL]
  -[HMAsset dictionaryRepresentation]
  -[HMAsset metadata]
  -[HMAsset initWithIdentifier:metadata:resourceURL:]


HMDeviceSetupOperation : NSOperation /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities <HMDeviceSetupSessionDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMDeviceSetupSession *setupSession
 @property  BOOL executing
 @property  BOOL finished
 @property  TRSession *session
 @property  NSError *error
 @property  HMAccessory *accessory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDeviceSetupOperation automaticallyNotifiesObserversForKey:]
  +[HMDeviceSetupOperation logCategory]

  // instance methods
  -[HMDeviceSetupOperation init]
  -[HMDeviceSetupOperation .cxx_destruct]
  -[HMDeviceSetupOperation error]
  -[HMDeviceSetupOperation cancel]
  -[HMDeviceSetupOperation start]
  -[HMDeviceSetupOperation setError:]
  -[HMDeviceSetupOperation setFinished:]
  -[HMDeviceSetupOperation isFinished]
  -[HMDeviceSetupOperation isExecuting]
  -[HMDeviceSetupOperation isAsynchronous]
  -[HMDeviceSetupOperation finish]
  -[HMDeviceSetupOperation session]
  -[HMDeviceSetupOperation cancelWithError:]
  -[HMDeviceSetupOperation initWithSession:]
  -[HMDeviceSetupOperation clientQueue]
  -[HMDeviceSetupOperation setExecuting:]
  -[HMDeviceSetupOperation accessory]
  -[HMDeviceSetupOperation setAccessory:]
  -[HMDeviceSetupOperation logIdentifier]
  -[HMDeviceSetupOperation setupSession]
  -[HMDeviceSetupOperation setupSession:didCloseWithError:]
  -[HMDeviceSetupOperation setupSession:didReceiveExchangeData:completionHandler:]
  -[HMDeviceSetupOperation _reallyStart]


HMAccessoryAllowedHost : HMFObject /System/Library/Frameworks/Foundation.framework/Foundation <NSSecureCoding>
 @property  NSString *name
 @property  unsigned long purpose
 @property  NSString *address
 @property  NSSet *addresses

  // class methods
  +[HMAccessoryAllowedHost supportsSecureCoding]

  // instance methods
  -[HMAccessoryAllowedHost name]
  -[HMAccessoryAllowedHost encodeWithCoder:]
  -[HMAccessoryAllowedHost initWithCoder:]
  -[HMAccessoryAllowedHost .cxx_destruct]
  -[HMAccessoryAllowedHost address]
  -[HMAccessoryAllowedHost purpose]
  -[HMAccessoryAllowedHost addresses]
  -[HMAccessoryAllowedHost initWithName:purpose:addresses:]


HMUserInviteInformation : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *userID
 @property  BOOL administrator
 @property  BOOL remoteAccessAllowed
 @property  unsigned long camerasAccessLevel

  // instance methods
  -[HMUserInviteInformation init]
  -[HMUserInviteInformation userID]
  -[HMUserInviteInformation .cxx_destruct]
  -[HMUserInviteInformation isAdministrator]
  -[HMUserInviteInformation isRemoteAccessAllowed]
  -[HMUserInviteInformation camerasAccessLevel]
  -[HMUserInviteInformation initWithUser:administrator:remoteAccess:camerasAccessLevel:]
  -[HMUserInviteInformation initWithUser:administrator:remoteAccess:]


HMHome : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, NSSecureCoding, HMFMessageReceiver, HMObjectMerge, HMMutableApplicationData>
 @property  NSArray *accessories
 @property  BOOL supportsAddingNetworkRouter
 @property  NSArray *rooms
 @property  NSArray *zones
 @property  NSArray *serviceGroups
 @property  HMUser *currentUser
 @property  NSArray *users
 @property  NSArray *actionSets
 @property  NSArray *triggers
 @property  BOOL automaticSoftwareUpdateEnabled
 @property  long long minimumMediaUserPrivilege
 @property  BOOL mediaPeerToPeerEnabled
 @property  NSString *mediaPassword
 @property  long long protectionMode
 @property  NSArray *accessoryProtectionGroups
 @property  unsigned long networkRouterSupportDisableReason
 @property  unsigned long networkRouterSupport
 @property  NSString *name
 @property  CLLocation *homeLocation
 @property  HMSetupViewController *setupViewController
 @property  <HMSetupRemoteService> *setupRemoteViewController
 @property  HMUser *currentUser
 @property  HMMutableArray *currentRooms
 @property  HMMutableArray *currentZones
 @property  HMMutableArray *currentServiceGroups
 @property  HMMutableArray *currentTriggerOwnedActionSets
 @property  HMMutableArray *currentActions
 @property  HMMutableArray *currentTriggers
 @property  HMMutableArray *currentUsers
 @property  HMMutableArray *currentResidentDevices
 @property  HMMutableArray *currentOutgoingInvitations
 @property  BOOL automaticSoftwareUpdateEnabled
 @property  long long minimumMediaUserPrivilege
 @property  BOOL mediaPeerToPeerEnabled
 @property  NSString *mediaPassword
 @property  BOOL ownerUser
 @property  BOOL adminUser
 @property  NSDate *notificationsUpdatedTime
 @property  int locationAuthorization
 @property  BOOL notificationEnableRequested
 @property  BOOL multiUserEnabled
 @property  BOOL hasAnyUserAcknowledgedCameraRecordingOnboarding
 @property  NSOperationQueue *shareWithHomeOwnerOperationQueue
 @property  long long protectionMode
 @property  unsigned long networkRouterSupport
 @property  unsigned long networkRouterSupportDisableReason
 @property  HMMutableArray *currentAccessoryProtectionGroups
 @property  _HMContext *context
 @property  HMHomeManager *homeManager
 @property  NSUUID *uuid
 @property  HMRoom *homeAsRoom
 @property  BOOL primary
 @property  BOOL notificationsEnabled
 @property  HMMutableArray *currentActionSets
 @property  HMMutableArray *currentMediaSystems
 @property  NSArray *triggerOwnedActionSets
 @property  HMFMessageDestination *messageDestination
 @property  HMMutableArray *currentAccessories
 @property  long long homeLocationStatus
 @property  NSSet *supportedFeatures
 @property  <HMHomeDelegate> *delegate
 @property  unsigned long homeHubState
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  HMApplicationData *applicationData
 @property  NSUUID *applicationDataIdentifier

  // class methods
  +[HMHome supportsSecureCoding]
  +[HMHome logCategory]
  +[HMHome isValidMediaPassword:error:]
  +[HMHome accessorySupportsMediaAccessControl:]
  +[HMHome generateMediaPasswordWithError:]

  // instance methods
  -[HMHome init]
  -[HMHome dealloc]
  -[HMHome name]
  -[HMHome invalidate]
  -[HMHome _invalidate]
  -[HMHome encodeWithCoder:]
  -[HMHome initWithCoder:]
  -[HMHome delegate]
  -[HMHome setDelegate:]
  -[HMHome .cxx_destruct]
  -[HMHome setName:]
  -[HMHome uuid]
  -[HMHome context]
  -[HMHome uniqueIdentifier]
  -[HMHome owner]
  -[HMHome location]
  -[HMHome setContext:]
  -[HMHome currentUser]
  -[HMHome users]
  -[HMHome setNotificationsEnabled:]
  -[HMHome _privateDelegate]
  -[HMHome setCurrentUser:]
  -[HMHome mediaSystems]
  -[HMHome homeAccessControlForUser:]
  -[HMHome accessories]
  -[HMHome mediaPassword]
  -[HMHome minimumMediaUserPrivilege]
  -[HMHome isMediaPeerToPeerEnabled]
  -[HMHome applicationData]
  -[HMHome logIdentifier]
  -[HMHome messageTargetUUID]
  -[HMHome messageReceiveQueue]
  -[HMHome roomForEntireHome]
  -[HMHome rooms]
  -[HMHome addAccessory:completionHandler:]
  -[HMHome addRoomWithName:completionHandler:]
  -[HMHome assignAccessory:toRoom:completionHandler:]
  -[HMHome updateApplicationData:completionHandler:]
  -[HMHome actionSets]
  -[HMHome serviceGroups]
  -[HMHome triggers]
  -[HMHome zones]
  -[HMHome enableMultiUserWithCompletionHandler:]
  -[HMHome setApplicationData:]
  -[HMHome supportedFeatures]
  -[HMHome isPrimary]
  -[HMHome setPrimary:]
  -[HMHome setSupportedFeatures:]
  -[HMHome homeManager]
  -[HMHome locationAuthorization]
  -[HMHome setLocationAuthorization:]
  -[HMHome _notifyDelegateOfTriggerUpdated:]
  -[HMHome __locationAuthorizationUpdated:]
  -[HMHome _mergeWithNewObject:operations:]
  -[HMHome enableNotification:forCharacteristics:completionHandler:]
  -[HMHome mergeWithNewObjectNoMergeCount:]
  -[HMHome accessoryWithUUID:]
  -[HMHome updateAccessForUser:administrator:completionHandler:]
  -[HMHome updateAccessForUser:remoteAccess:completionHandler:]
  -[HMHome updateAccessForUser:camerasAccessLevel:completionHandler:]
  -[HMHome _registerNotificationHandlers]
  -[HMHome handleRuntimeStateUpdate:]
  -[HMHome currentActionSets]
  -[HMHome _removeActionSet:completionHandler:]
  -[HMHome _updateName:completionHandler:]
  -[HMHome createAndAddActionSetWithName:type:uuid:]
  -[HMHome triggerOwnedActionSets]
  -[HMHome removeActionSet:completionHandler:]
  -[HMHome updateName:completionHandler:]
  -[HMHome setCurrentActionSets:]
  -[HMHome messageDestination]
  -[HMHome residentDevices]
  -[HMHome mediaProfileWithUUID:]
  -[HMHome mediaProfileWithProfileUUID:]
  -[HMHome _cancelInvitation:completionHandler:]
  -[HMHome setHomeManager:]
  -[HMHome _acceptInvitation:completionHandler:]
  -[HMHome __configureWithContext:homeManager:]
  -[HMHome updateApplicationData:forRoom:completionHandler:]
  -[HMHome notifyDelegateOfAppDataUpdateForRoom:]
  -[HMHome applicationDataIdentifier]
  -[HMHome updateApplicationData:forServiceGroup:completionHandler:]
  -[HMHome initWithName:uuid:]
  -[HMHome notifyDelegateOfAppDataUpdateForServiceGroup:]
  -[HMHome _removeServices:]
  -[HMHome setHomeAsRoom:]
  -[HMHome homeAsRoom]
  -[HMHome _setupBuiltinActionSets:]
  -[HMHome shareWithHomeOwnerOperationQueue]
  -[HMHome setHomeLocationStatus:]
  -[HMHome currentUsers]
  -[HMHome currentResidentDevices]
  -[HMHome outgoingInvitations]
  -[HMHome accessoryProtectionGroups]
  -[HMHome sendConfigureBulletinNotification]
  -[HMHome homeLocation]
  -[HMHome __updateLocation:mergeOperations:]
  -[HMHome currentMediaSystems]
  -[HMHome createActionSetWithName:type:uuid:]
  -[HMHome currentTriggerOwnedActionSets]
  -[HMHome _unconfigureHome]
  -[HMHome _mergeCurrentHomeRoomsWithNewHomeRooms:operations:]
  -[HMHome _mergeCurrentHomeZonesWithNewHomeZones:operations:]
  -[HMHome _mergeCurrentHomeAccessoriesWithNewHomeAccessories:operations:]
  -[HMHome _mergeCurrentHomeServiceGroupsWithNewHomeServiceGroups:operations:]
  -[HMHome _mergeCurrentHomeActionSetsWithNewHomeActionSets:operations:]
  -[HMHome _mergeCurrentHomeTriggerOwnedActionSetsWithNewHomeActionSets:operations:]
  -[HMHome _mergeCurrentHomeTriggersWithNewHomeTriggers:operations:]
  -[HMHome _mergeCurrentHomeUsersWithNewHomeUsers:operations:]
  -[HMHome _mergeCurrentHomeResidentDevicesWithNewHomeResidentDevices:operations:]
  -[HMHome _mergeCurrentHomeInvitationsWithNewHomeInvitations:operations:]
  -[HMHome _mergeCurrentHomeMediaSystemsWithNewMediaSystems:operations:]
  -[HMHome _mergeCurrentHomeAccessoryNetworkProtectionGroupsWithNewAccessoryNetworkProtectionGroups:operations:]
  -[HMHome multiUserEnabled]
  -[HMHome setMultiUserEnabled:]
  -[HMHome hasAnyUserAcknowledgedCameraRecordingOnboarding]
  -[HMHome setHasAnyUserAcknowledgedCameraRecordingOnboarding:]
  -[HMHome _notifyDelegateOfAppDataUpdate]
  -[HMHome homeHubState]
  -[HMHome _notifyDelegateOfHomeHubStateUpdate]
  -[HMHome homeLocationStatus]
  -[HMHome isAdminUser]
  -[HMHome setAdminUser:]
  -[HMHome isOwnerUser]
  -[HMHome setOwnerUser:]
  -[HMHome areNotificationsEnabled]
  -[HMHome notificationsUpdatedTime]
  -[HMHome setNotificationsUpdatedTime:]
  -[HMHome isAutomaticSoftwareUpdateEnabled]
  -[HMHome setAutomaticSoftwareUpdateEnabled:]
  -[HMHome setMinimumMediaUserPrivilege:]
  -[HMHome setMediaPeerToPeerEnabled:]
  -[HMHome setMediaPassword:]
  -[HMHome protectionMode]
  -[HMHome setProtectionMode:]
  -[HMHome networkRouterSupportDisableReason]
  -[HMHome setNetworkRouterSupportDisableReason:]
  -[HMHome networkRouterSupport]
  -[HMHome setNetworkRouterSupport:]
  -[HMHome _didUpdateNetworkRouterSupport]
  -[HMHome _notifyUpdatedSupportedFeatures]
  -[HMHome currentRooms]
  -[HMHome _mergeRoomsForMergeCollection:currentRooms:]
  -[HMHome currentZones]
  -[HMHome roomWithUUID:]
  -[HMHome setCurrentRooms:]
  -[HMHome currentAccessories]
  -[HMHome _mergeAccessoriesForMergeCollection:currentAccessories:]
  -[HMHome currentServiceGroups]
  -[HMHome currentTriggers]
  -[HMHome _notifyDelegateOfTriggerRemoved:]
  -[HMHome triggerOwnedActionSetWithUUID:]
  -[HMHome actionSetWithUUID:]
  -[HMHome _notifyDelegateOfTriggerAdded:]
  -[HMHome currentOutgoingInvitations]
  -[HMHome _configureOutgoingInvitiation:]
  -[HMHome _notifyDelegateOfRemovedMediaSystem:]
  -[HMHome _notifyDelegateOfAddedMediaSystem:]
  -[HMHome currentAccessoryProtectionGroups]
  -[HMHome _didRemoveAccessoryNetworkProtectionGroup:]
  -[HMHome _didAddAccessoryNetworkProtectionGroup:]
  -[HMHome _didUpdateAccessoryNetworkProtectionGroup:]
  -[HMHome _enableMultiUserWithCompletionHandler:]
  -[HMHome _setHasAnyUserAcknowledgedCameraRecordingOnboardingWithCompleteionHandler:]
  -[HMHome _handleHomeRenamedNotification:]
  -[HMHome _handleHomeLocationUpdateNotificaton:]
  -[HMHome _handleZoneAddedNotification:]
  -[HMHome _handleZoneRemovedNotification:]
  -[HMHome _handleServiceGroupAddedNotification:]
  -[HMHome _handleServiceGroupRemovedNotification:]
  -[HMHome _handleActionSetAddedNotification:]
  -[HMHome _handleActionSetRemovedNotification:]
  -[HMHome _handleTimerTriggerAddedNotification:]
  -[HMHome _handleEventTriggerAddedNotification:]
  -[HMHome _handleEventTriggerOwnerDeviceNotification:]
  -[HMHome _handleEventTriggerOwnerUserNotification:]
  -[HMHome _handleTriggerRemovedNotification:]
  -[HMHome _handleAccessoryAddedNotification:]
  -[HMHome _handleAddAccessoryProgressNotification:]
  -[HMHome _handleAccessoryRemovedNotification:]
  -[HMHome _handleUserAddedNotification:]
  -[HMHome _handleUserInvitationsUpdatedNotification:]
  -[HMHome _handleUpdatedUserAccessNotification:]
  -[HMHome _handleUpdatedPresenceAuthNotification:]
  -[HMHome _handleUpdatedPresenceComputeNotification:]
  -[HMHome _handleUserRemovedNotification:]
  -[HMHome _handleAccessoryErrorNotification:]
  -[HMHome _handleMultipleCharacteristicValuesUpdated:]
  -[HMHome _handleRequestAccessorySetupCodeRequestKey:]
  -[HMHome _handleUpdatedResidentDevice:]
  -[HMHome _handleNotificationsEnabled:]
  -[HMHome _handleAccessoryInfoUpdatedNotification:]
  -[HMHome _handleAccessoryReprovisionedNotification:]
  -[HMHome _handleAccessoryReprovisionStateUpdate:]
  -[HMHome _handleMediaSystemRemovedNotification:]
  -[HMHome _handleHomeHubStateUpdatedNotification:]
  -[HMHome _handleHomeNetworkProtectionModeUpdatedNotification:]
  -[HMHome _handleHomeNetworkRouterSupportUpdated:]
  -[HMHome _handleAccessoryNetworkProtectionGroupAddedNotification:]
  -[HMHome _handleAccessoryNetworkProtectionGroupRemovedNotification:]
  -[HMHome _handleHomeLocationStatusUpdateNotification:]
  -[HMHome _handleMultiUserEnabledChangeNotification:]
  -[HMHome _handleHasAnyUserAcknowledgedCameraRecordingOnboardingChangeNotification:]
  -[HMHome zoneWithUUID:]
  -[HMHome serviceGroupWithUUID:]
  -[HMHome _addTrigger:triggerUUID:message:]
  -[HMHome triggerWithUUID:]
  -[HMHome _addIdentifier:bridgeUUID:]
  -[HMHome removeAccessory:completionHandler:]
  -[HMHome _callProgressHandler:updatingAccessoryDescription:fromMessage:]
  -[HMHome _removeIdentifier:bridgeUUID:]
  -[HMHome _startSearchForAccessoriesNeedingReprovisioning]
  -[HMHome handleStartWithError:response:]
  -[HMHome _reprovisionAccessory:completionHandler:]
  -[HMHome _findUserWithID:]
  -[HMHome _updateAccessForUser:camerasAccessLevel:completionHandler:]
  -[HMHome _retrieveLocation]
  -[HMHome _updateInvitation:invitationState:completionHandler:]
  -[HMHome _enableNotifications:completionHandler:]
  -[HMHome _enableNotification:forCharacteristics:completionHandler:]
  -[HMHome notificationEnableRequested]
  -[HMHome setNotificationEnableRequested:]
  -[HMHome _handleRuntimeStateUpdate:]
  -[HMHome setupViewController]
  -[HMHome setupRemoteViewController]
  -[HMHome setSetupViewController:]
  -[HMHome handleDaemonInterruptedNotification:]
  -[HMHome handleUIApplicationWillResignActiveNotification:]
  -[HMHome _launchSetupViewController:completionHandler:]
  -[HMHome _notifyDelegateOfUpdatedHomeLocationStatus]
  -[HMHome _notifyDelegateOfAppDataUpdateForRoom:]
  -[HMHome _notifyDelegateOfAppDataUpdateForServiceGroup:]
  -[HMHome _notifyDelegateOfAppDataUpdateForActionSet:]
  -[HMHome _notifyDelegateOfAccessControlUpdateForUser:]
  -[HMHome _notifyDelegateOfAccesoryInvitationsUpdateForUser:]
  -[HMHome _removeIncompatibleTrigger:]
  -[HMHome updateApplicationData:forAppDataContainer:appDataContainerUUIDKeyName:completionHandler:]
  -[HMHome _updateApplicationData:forAppDataContainer:appDataContainerUUIDKeyName:completionHandler:]
  -[HMHome initWithName:uuid:homeAsRoomUUID:homeAsRoomName:actionSets:]
  -[HMHome _setSupportedFeature:enabled:]
  -[HMHome supportsAddingNetworkRouter]
  -[HMHome controlTargets]
  -[HMHome targetControllers]
  -[HMHome unconfigureHome]
  -[HMHome isMultiUserEnabled]
  -[HMHome setHasAnyUserAcknowledgedCameraRecordingOnboardingWithCompletionHandler:]
  -[HMHome roomWithName:]
  -[HMHome zoneWithName:]
  -[HMHome serviceGroupWithName:]
  -[HMHome actionSetWithName:]
  -[HMHome triggerWithName:]
  -[HMHome accessoryWithUniqueIdentifier:]
  -[HMHome profileWithUniqueIdentifier:]
  -[HMHome notifyDelegatesOfExecution:actionSet:]
  -[HMHome removeServices:]
  -[HMHome startSearchForAccessoriesNeedingReprovisioning]
  -[HMHome reprovisionAccessory:completionHandler:]
  -[HMHome updateForUser:presenceAuthorizationStatus:completionHandler:]
  -[HMHome enableNotifications:completionHandler:]
  -[HMHome reEnableNotifications]
  -[HMHome _getContainerForAppData:]
  -[HMHome notifyDelegateOfAppDataUpdateForActionSet:]
  -[HMHome _invokeDelegateForAppData:]
  -[HMHome notifyDelegateOfAccessControlUpdateForUser:]
  -[HMHome notifyDelegateOfAccesoryInvitationsUpdateForUser:]
  -[HMHome updateApplicationData:forActionSet:completionHandler:]
  -[HMHome setSetupRemoteViewController:]
  -[HMHome setCurrentZones:]
  -[HMHome setCurrentServiceGroups:]
  -[HMHome setCurrentTriggerOwnedActionSets:]
  -[HMHome currentActions]
  -[HMHome setCurrentActions:]
  -[HMHome setCurrentTriggers:]
  -[HMHome setCurrentUsers:]
  -[HMHome setCurrentResidentDevices:]
  -[HMHome setCurrentOutgoingInvitations:]
  -[HMHome setShareWithHomeOwnerOperationQueue:]
  -[HMHome setCurrentAccessoryProtectionGroups:]
  -[HMHome setCurrentMediaSystems:]
  -[HMHome setCurrentAccessories:]
  -[HMHome __defaultProgressHandlerForAddAccessory]
  -[HMHome _addAccessory:accessoryDescription:password:setupCodeDeferred:progress:completionHandler:]
  -[HMHome addAccessory:password:progress:completionHandler:]
  -[HMHome _cancelPairingForAccessoryWithUUID:completionHandler:]
  -[HMHome _continuePairingForAccessoryWithUUID:setupCode:completionHandler:]
  -[HMHome _addAndSetupAccessoriesWithSetupPayloadURL:browseRequest:suggestedRoomName:ownershipToken:addRequest:legacyAPI:trustedOrigin:completionHandler:]
  -[HMHome establishShareWithHomeOwner:container:completionHandler:]
  -[HMHome _startPairingWithAccessoryDescription:setupRemoteViewController:progressHandler:completionHandler:]
  -[HMHome userDidRespondToConsentRequestForSetupAccessoryDescription:withResponse:]
  -[HMHome addAccessoryWithAccessorySetupPayload:progress:completionHandler:]
  -[HMHome addAccessoryWithPayload:completionHandler:]
  -[HMHome startPairingWithAccessoryDescription:setupRemoteViewController:progress:completion:]
  -[HMHome _cancelPairingForAccessoryWithDescription:completionHandler:]
  -[HMHome _removeAccessory:completionHandler:]
  -[HMHome _assignAccessory:toRoom:completionHandler:]
  -[HMHome _performBatchCharacteristicRequest:]
  -[HMHome addAccessory:password:completionHandler:]
  -[HMHome startPairingWithAccessory:accessorySetupDescription:setupRemoteViewController:progress:completionHandler:]
  -[HMHome cancelPairingForAccessoryWithUUID:completionHandler:]
  -[HMHome continuePairingForAccessoryWithUUID:setupCode:completionHandler:]
  -[HMHome addAndSetupAccessoriesWithCompletionHandler:]
  -[HMHome addAndSetupAccessoriesWithPayload:completionHandler:]
  -[HMHome addAndSetUpNewAccessoriesWithCompletionHandler:]
  -[HMHome shareWithHomeOwner:container:completionHandler:]
  -[HMHome addAccessoryWithSetupPayload:completionHandler:]
  -[HMHome addAndSetupAccessoriesWithSetupPayload:completionHandler:]
  -[HMHome startDiscoveringSymptomsForNearbyDevices]
  -[HMHome stopDiscoveringSymptomsForNearbyDevices]
  -[HMHome startPairingWithAccessoryDescription:setupRemoteViewController:progressHandler:completionHandler:]
  -[HMHome cancelPairingForAccessoryWithDescription:completionHandler:]
  -[HMHome servicesWithTypes:]
  -[HMHome unblockAccessory:completionHandler:]
  -[HMHome performBatchCharacteristicRequest:]
  -[HMHome _addRoomWithName:completionHandler:]
  -[HMHome _removeRoom:completionHandler:]
  -[HMHome removeRoom:completionHandler:]
  -[HMHome _addZoneWithName:completionHandler:]
  -[HMHome _removeZone:completionHandler:]
  -[HMHome addZoneWithName:completionHandler:]
  -[HMHome removeZone:completionHandler:]
  -[HMHome _addServiceGroupWithName:completionHandler:]
  -[HMHome _removeServiceGroup:completionHandler:]
  -[HMHome addServiceGroupWithName:completionHandler:]
  -[HMHome removeServiceGroup:completionHandler:]
  -[HMHome _manageUsersWithCompletionHandler:]
  -[HMHome _inviteWithUserInformation:completionHandler:]
  -[HMHome _removeUser:completionHandler:]
  -[HMHome _createFailedAccessoriesListFromError:]
  -[HMHome _addUsersWithCompletionHandler:]
  -[HMHome inviteUsersWithInviteInformation:completionHandler:]
  -[HMHome removeUser:completionHandler:]
  -[HMHome manageUsersWithCompletionHandler:]
  -[HMHome administrator]
  -[HMHome addUsersWithCompletionHandler:]
  -[HMHome addUserWithCompletionHandler:]
  -[HMHome addUserWithoutConfirmation:privilege:completionHandler:]
  -[HMHome addUser:withCompletionHandler:]
  -[HMHome inviteUsers:completionHandler:]
  -[HMHome removeUserWithoutConfirmation:completionHandler:]
  -[HMHome _addActionSetWithName:completionHandler:]
  -[HMHome _executeActionSet:completionHandler:]
  -[HMHome executeActions:completionHandler:]
  -[HMHome builtinActionSetOfType:]
  -[HMHome addActionSetWithName:completionHandler:]
  -[HMHome executeActionSet:completionHandler:]
  -[HMHome _addTrigger:completionHandler:]
  -[HMHome _removeTrigger:completionHandler:]
  -[HMHome _userDidConfirmExecution:ofTriggerWithIdentifier:completionHandler:]
  -[HMHome _removeMediaSystem:completionHandler:]
  -[HMHome addTrigger:completionHandler:]
  -[HMHome removeTrigger:completionHandler:]
  -[HMHome userDidConfirmExecution:ofTrigger:completionHandler:]
  -[HMHome userDidConfirmExecution:ofTriggerWithIdentifier:completionHandler:]
  -[HMHome removeMediaSystem:completionHandler:]
  -[HMHome _queryRemoteAccessWithCompletionHandler:]
  -[HMHome _enableRemoteAccess:completionHandler:]
  -[HMHome queryRemoteAccessWithCompletionHandler:]
  -[HMHome enableRemoteAccess:completionHandler:]
  -[HMHome updateAutomaticSoftwareUpdateEnabled:completionHandler:]
  -[HMHome updateMinimumMediaUserPrivilege:completionHandler:]
  -[HMHome updateMediaPeerToPeerEnabled:completionHandler:]
  -[HMHome updateMediaPassword:completionHandler:]
  -[HMHome updateNetworkProtection:completionHandler:]
  -[HMHome updateAccessoryNetworkProtectionGroup:protectionMode:completion:]
  -[HMHome setNetworkRouterSupportMinimumHomeKitVersion:completionHandler:]
  -[HMHome setAccessoryNetworkProtectionChangeSupportMinHomeKitVersion:completionHandler:]


HMAccessorySettings : HMSettings <HMFLogging, HMObjectMerge>
 @property  _HMContext *context
 @property  <HMControllable> *settingsControl
 @property  <HMAccessorySettingsContainer> *settingsContainer
 @property  BOOL controllable
 @property  <HMAccessorySettingsDelegate> *delegate
 @property  HMAccessory *accessory
 @property  HMAccessorySettingGroup *rootGroup
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[HMAccessorySettings logCategory]
  +[HMAccessorySettings localizationKeyForKeyPath:]

  // instance methods
  -[HMAccessorySettings delegate]
  -[HMAccessorySettings setDelegate:]
  -[HMAccessorySettings .cxx_destruct]
  -[HMAccessorySettings context]
  -[HMAccessorySettings uniqueIdentifier]
  -[HMAccessorySettings accessory]
  -[HMAccessorySettings rootGroup]
  -[HMAccessorySettings _mergeWithNewObject:operations:]
  -[HMAccessorySettings _updateSettingsWithBlock:]
  -[HMAccessorySettings __notifyDelegateSettingsDidUpdate]
  -[HMAccessorySettings isControllable]
  -[HMAccessorySettings settingsControl]
  -[HMAccessorySettings setSettingsControl:]
  -[HMAccessorySettings initWithSettingsContainer:settingsControl:rootGroup:]
  -[HMAccessorySettings setSettingsContainer:]
  -[HMAccessorySettings settingsContainer]
  -[HMAccessorySettings __notifyDelegateSettingsWillUpdateWithCompletionHanlder:]
  -[HMAccessorySettings _configureWithContext:]


HMCameraClipVideoAssetContext : HMCameraClipAssetContext <NSCopying, NSSecureCoding>
 @property  NSData *hlsPlaylist

  // class methods
  +[HMCameraClipVideoAssetContext supportsSecureCoding]

  // instance methods
  -[HMCameraClipVideoAssetContext isEqual:]
  -[HMCameraClipVideoAssetContext copyWithZone:]
  -[HMCameraClipVideoAssetContext encodeWithCoder:]
  -[HMCameraClipVideoAssetContext initWithCoder:]
  -[HMCameraClipVideoAssetContext .cxx_destruct]
  -[HMCameraClipVideoAssetContext hlsPlaylist]
  -[HMCameraClipVideoAssetContext initWithURL:expirationDate:requiredHTTPHeaders:]
  -[HMCameraClipVideoAssetContext initWithURL:expirationDate:requiredHTTPHeaders:hlsPlaylist:]


_HMCameraControl : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver>
 @property  _HMContext *context
 @property  HMHome *home
 @property  _HMCameraProfile *cameraProfile
 @property  HMService *service
 @property  NSUUID *profileUniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // instance methods
  -[_HMCameraControl .cxx_destruct]
  -[_HMCameraControl context]
  -[_HMCameraControl setContext:]
  -[_HMCameraControl home]
  -[_HMCameraControl service]
  -[_HMCameraControl setHome:]
  -[_HMCameraControl messageTargetUUID]
  -[_HMCameraControl messageReceiveQueue]
  -[_HMCameraControl cameraProfile]
  -[_HMCameraControl initWithCameraProfile:service:profileUniqueIdentifier:]
  -[_HMCameraControl profileUniqueIdentifier]
  -[_HMCameraControl _registerNotificationHandlers]
  -[_HMCameraControl __configureWithContext:home:]


HMHomeManager : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, HMFMessageReceiver, HMMutableApplicationData, HMApplicationData>
 @property  HMMutableArray *currentHomes
 @property  HMMutableArray *homeInvitations
 @property  NSOperationQueue *mergeOperationQueue
 @property  HMHome *primaryHome
 @property  BOOL didUpdateHomes
 @property  BOOL frameworkMergeComplete
 @property  int serverGenerationCounterToken
 @property  unsigned long serverGenerationCounter
 @property  NSNumber *fileGenerationCounter
 @property  NSNumber *fileMetadataVersion
 @property  NSString *homeCacheDir
 @property  NSString *homeDataCache
 @property  NSString *metadataCache
 @property  BOOL mediaAccessoryControlRequested
 @property  NSSet *addAccessoryRequests
 @property  NSUUID *uuid
 @property  _HMContext *context
 @property  unsigned long generationCounter
 @property  unsigned long metadataVersion
 @property  BOOL viewServiceActive
 @property  unsigned long options
 @property  HMHomeManagerConfiguration *configuration
 @property  NSArray *incomingHomeInvitations
 @property  HMHome *currentHome
 @property  HMAccessory *currentAccessory
 @property  BOOL dataSyncInProgress
 @property  unsigned long dataSyncState
 @property  unsigned long status
 @property  BOOL thisDeviceResidentCapable
 @property  BOOL residentEnabledForThisDevice
 @property  BOOL accessAllowedWhenLocked
 @property  unsigned long residentProvisioningStatus
 @property  HMNetworkRouterFirewallRuleManager *firewallRuleManager
 @property  HMUserCloudShareManager *userCloudShareManager
 @property  <HMHomeManagerDelegate> *delegate
 @property  unsigned long authorizationStatus
 @property  NSArray *homes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  HMApplicationData *applicationData
 @property  NSUUID *applicationDataIdentifier

  // class methods
  +[HMHomeManager logCategory]
  +[HMHomeManager dataSyncInProgressFromDataSyncState:]

  // instance methods
  -[HMHomeManager init]
  -[HMHomeManager dealloc]
  -[HMHomeManager options]
  -[HMHomeManager initWithOptions:]
  -[HMHomeManager delegate]
  -[HMHomeManager setDelegate:]
  -[HMHomeManager .cxx_destruct]
  -[HMHomeManager uuid]
  -[HMHomeManager status]
  -[HMHomeManager context]
  -[HMHomeManager configuration]
  -[HMHomeManager setStatus:]
  -[HMHomeManager authorizationStatus]
  -[HMHomeManager _privateDelegate]
  -[HMHomeManager homes]
  -[HMHomeManager primaryHome]
  -[HMHomeManager currentHome]
  -[HMHomeManager pairingIdentityForAccessoryWithIdentifier:completionHandler:]
  -[HMHomeManager currentAccessory]
  -[HMHomeManager dataSyncState]
  -[HMHomeManager applicationData]
  -[HMHomeManager initWithHomeMangerConfiguration:]
  -[HMHomeManager generationCounter]
  -[HMHomeManager messageTargetUUID]
  -[HMHomeManager messageReceiveQueue]
  -[HMHomeManager isDataSyncInProgress]
  -[HMHomeManager addHomeWithName:completionHandler:]
  -[HMHomeManager updateApplicationData:completionHandler:]
  -[HMHomeManager updateiCloudSwitchState:completionHandler:]
  -[HMHomeManager setApplicationData:]
  -[HMHomeManager metadataCache]
  -[HMHomeManager setMetadataCache:]
  -[HMHomeManager metadataVersion]
  -[HMHomeManager setMetadataVersion:]
  -[HMHomeManager _registerNotificationHandlers]
  -[HMHomeManager _updateApplicationData:completionHandler:]
  -[HMHomeManager _declineInvitation:completionHandler:]
  -[HMHomeManager _acceptInvitation:completionHandler:]
  -[HMHomeManager _acceptInvitation:presenceAuthStatus:completionHandler:]
  -[HMHomeManager applicationDataIdentifier]
  -[HMHomeManager _mergeCurrentHomeInvitationsWithNewHomeInvitations:operations:]
  -[HMHomeManager _notifyDelegateOfAppDataUpdate]
  -[HMHomeManager _handleUserInvitationsUpdatedNotification:]
  -[HMHomeManager isViewServiceActive]
  -[HMHomeManager setViewServiceActive:]
  -[HMHomeManager checkName:inHome:withValidationOptions:completionHandler:]
  -[HMHomeManager _fetchHomeConfigurationWithRefreshRequested:]
  -[HMHomeManager __start]
  -[HMHomeManager addAccessoryRequests]
  -[HMHomeManager _notifyPendingAddRequests:]
  -[HMHomeManager currentHomes]
  -[HMHomeManager homeInvitations]
  -[HMHomeManager setDataSyncState:]
  -[HMHomeManager _updateStatusWithPayload:]
  -[HMHomeManager _updateDataSyncState:]
  -[HMHomeManager _notifyResidentProvisioningStatus:]
  -[HMHomeManager _updatePrimaryHome:completionHandler:]
  -[HMHomeManager _addHomeWithName:completionHandler:]
  -[HMHomeManager _removeHome:completionHandler:]
  -[HMHomeManager eraseHomeDataWithCompletionHandler:]
  -[HMHomeManager eraseHomeDataAndDeleteMetadata:completionHandler:]
  -[HMHomeManager _eraseHomeDataAndDeleteMetadata:completionHandler:]
  -[HMHomeManager _logControl:completionHandler:]
  -[HMHomeManager _queryHomeKitUsageStateWithCompletionHandler:]
  -[HMHomeManager _handleQueryHomeKitUsageStateResponse:completionHandler:]
  -[HMHomeManager _queryVersionWithCompletionHandler:]
  -[HMHomeManager _dumpState:payload:completion:]
  -[HMHomeManager _deleteDuetEvents:completion:]
  -[HMHomeManager _checkEventValidity:completion:]
  -[HMHomeManager _logAppViewEvent:name:uuid:information:completion:]
  -[HMHomeManager _primaryAccountDidChange:modified:completionHandler:]
  -[HMHomeManager _primaryAccountWasDeletedWithCompletionHandler:]
  -[HMHomeManager _queryMetadata:completionHandler:]
  -[HMHomeManager _setMetadata:completionHandler:]
  -[HMHomeManager _shouldDisplayiCloudSwitchWithCompletionHandler:]
  -[HMHomeManager _queryiCloudSwitchStateWithCompletionHandler:]
  -[HMHomeManager _updateiCloudSwitchState:completionHandler:]
  -[HMHomeManager _updateResidentEnabledForThisDevice:completionHandler:]
  -[HMHomeManager _updateAccessAllowedWhenLocked:completionHandler:]
  -[HMHomeManager _checkName:inHome:withValidationOptions:completionHandler:]
  -[HMHomeManager mediaAccessoryControlRequested]
  -[HMHomeManager _registerForMediaAccessoryControl:completionHandler:]
  -[HMHomeManager serverGenerationCounter]
  -[HMHomeManager _updateHomes:]
  -[HMHomeManager _updateCurrentHome:]
  -[HMHomeManager _setResidentProvisioningStatus:]
  -[HMHomeManager _requestRuntimeUpdate:]
  -[HMHomeManager _writeCaches:homeData:metadata:]
  -[HMHomeManager _processHomeConfigurationRequest:refreshRequested:]
  -[HMHomeManager isThisDeviceResidentCapable]
  -[HMHomeManager setThisDeviceResidentCapable:]
  -[HMHomeManager notifyResidentCapableUpdated:]
  -[HMHomeManager isResidentEnabledForThisDevice]
  -[HMHomeManager setResidentEnabledForThisDevice:]
  -[HMHomeManager notifyResidentEnabledUpdated:]
  -[HMHomeManager isAccessAllowedWhenLocked]
  -[HMHomeManager setAccessAllowedWhenLocked:]
  -[HMHomeManager _notifyAccessAllowedWhenLockedUpdated:]
  -[HMHomeManager _homeWithUUID:]
  -[HMHomeManager setGenerationCounter:]
  -[HMHomeManager didUpdateHomes]
  -[HMHomeManager _mergeCurrentHomesWithNewHomes:newPrimaryHome:newCurrentHome:newInvitations:newAppData:refreshRequested:]
  -[HMHomeManager setDidUpdateHomes:]
  -[HMHomeManager setCurrentAccessory:]
  -[HMHomeManager _updateAppData:]
  -[HMHomeManager _requestRefresh]
  -[HMHomeManager _addAccessoryRequestsFromArray:]
  -[HMHomeManager _updateAddAccessoryRequestsAndNotify:]
  -[HMHomeManager setFrameworkMergeComplete:]
  -[HMHomeManager __handleHomeManagerState:]
  -[HMHomeManager setHomeDataCache:]
  -[HMHomeManager setFileGenerationCounter:]
  -[HMHomeManager setFileMetadataVersion:]
  -[HMHomeManager homeCacheDir]
  -[HMHomeManager homeDataCache]
  -[HMHomeManager fileGenerationCounter]
  -[HMHomeManager fileMetadataVersion]
  -[HMHomeManager _removeCacheFiles:]
  -[HMHomeManager _handleRuntimeStateUpdatePayload:]
  -[HMHomeManager setAddAccessoryRequests:]
  -[HMHomeManager setCurrentHome:]
  -[HMHomeManager setPrimaryHome:]
  -[HMHomeManager mergeOperationQueue]
  -[HMHomeManager _mergeCurrentAppDataWithNewAppData:operations:]
  -[HMHomeManager _handleHomeAddedNotification:]
  -[HMHomeManager _handleHomeRemovedNotification:]
  -[HMHomeManager _handlePrimaryChangedNotification:]
  -[HMHomeManager _handleCurrentHomeChangedNotification:]
  -[HMHomeManager _handleHomesDidUpdateNotification:]
  -[HMHomeManager _handleMetadataUpdatedNotification:]
  -[HMHomeManager _handleResidentDeviceCapableUpdatedNotification:]
  -[HMHomeManager _handleResidentEnabledForThisDeviceUpdatedNotification:]
  -[HMHomeManager _handleAccessAllowedWhenLockedUpdatedNotification:]
  -[HMHomeManager _handleStatusUpdated:]
  -[HMHomeManager _handleResidentProvisioningStatusChanged:]
  -[HMHomeManager _handleRuntimeStateUpdateNotification:]
  -[HMHomeManager _handleCheckForAddAccessoryRequests]
  -[HMHomeManager _updateInvitation:presenceAuthStatus:invitationState:completionHandler:]
  -[HMHomeManager setResidentProvisioningStatus:]
  -[HMHomeManager setMediaAccessoryControlRequested:]
  -[HMHomeManager _pairingIdentityForAccessoryWithIdentifier:completionHandler:]
  -[HMHomeManager frameworkMergeComplete]
  -[HMHomeManager incomingHomeInvitations]
  -[HMHomeManager residentProvisioningStatus]
  -[HMHomeManager updatePrimaryHome:completionHandler:]
  -[HMHomeManager removeHome:completionHandler:]
  -[HMHomeManager resetConfiguration:withoutPopup:completionHandler:]
  -[HMHomeManager logControl:completionHandler:]
  -[HMHomeManager queryHomeKitUsageStateWithCompletionHandler:]
  -[HMHomeManager queryVersionWithCompletionHandler:]
  -[HMHomeManager dumpState:payload:completion:]
  -[HMHomeManager deleteDuetEvents:completion:]
  -[HMHomeManager checkEventValidity:completion:]
  -[HMHomeManager logAppViewEvent:name:uuid:information:completion:]
  -[HMHomeManager primaryAccountDidChange:completionHandler:]
  -[HMHomeManager primaryAccountWasModified:completionHandler:]
  -[HMHomeManager idmsAccountUsernameModifiedWithCompletionHandler:]
  -[HMHomeManager primaryAccountWasDeletedWithCompletionHandler:]
  -[HMHomeManager queryMetadata:completionHandler:]
  -[HMHomeManager setMetadata:completionHandler:]
  -[HMHomeManager shouldDisplayiCloudSwitchWithCompletionHandler:]
  -[HMHomeManager queryiCloudSwitchStateWithCompletionHandler:]
  -[HMHomeManager updateResidentEnabledForThisDevice:completionHandler:]
  -[HMHomeManager updateAccessAllowedWhenLocked:completionHandler:]
  -[HMHomeManager __resolveAccountHandle:completionHandler:]
  -[HMHomeManager __removeAccountWithIdentifier:completionHandler:]
  -[HMHomeManager __removeAccountWithHandle:completionHandler:]
  -[HMHomeManager _pingDeviceWithUUID:secure:completionHandler:]
  -[HMHomeManager _pingDeviceWithDestination:secure:completionHandler:]
  -[HMHomeManager __processSyncResponse:refreshRequested:completionHandler:]
  -[HMHomeManager _determineCacheFiles]
  -[HMHomeManager _isValidCachedHomeConfiguration:]
  -[HMHomeManager _dumpCaches:metadata:]
  -[HMHomeManager registerForMediaAccessoryControl:completionHandler:]
  -[HMHomeManager userCloudShareManager]
  -[HMHomeManager setCurrentHomes:]
  -[HMHomeManager setHomeInvitations:]
  -[HMHomeManager setMergeOperationQueue:]
  -[HMHomeManager serverGenerationCounterToken]
  -[HMHomeManager setServerGenerationCounterToken:]
  -[HMHomeManager firewallRuleManager]


HMCameraSnapshotControl : HMCameraControl <_HMCameraSnapshotControlDelegate>
 @property  _HMCameraSnapshotControl *snapshotControl
 @property  <HMCameraSnapshotControlDelegate> *delegate
 @property  HMCameraSnapshot *mostRecentSnapshot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMCameraSnapshotControl delegate]
  -[HMCameraSnapshotControl setDelegate:]
  -[HMCameraSnapshotControl .cxx_destruct]
  -[HMCameraSnapshotControl takeSnapshot]
  -[HMCameraSnapshotControl mostRecentSnapshot]
  -[HMCameraSnapshotControl cameraSnapshotControl:didTakeSnapshot:error:]
  -[HMCameraSnapshotControl cameraSnapshotControlDidUpdateMostRecentSnapshot:]
  -[HMCameraSnapshotControl fetchCameraSnapshotForBulletinContext:completionHandler:]
  -[HMCameraSnapshotControl initWithSnapshotControl:]
  -[HMCameraSnapshotControl snapshotControl]
  -[HMCameraSnapshotControl setSnapshotControl:]


HMSoftwareUpdateDocumentationMetadata : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSURL *URL
 @property  HMFDigest *digest

  // class methods
  +[HMSoftwareUpdateDocumentationMetadata supportsSecureCoding]

  // instance methods
  -[HMSoftwareUpdateDocumentationMetadata init]
  -[HMSoftwareUpdateDocumentationMetadata isEqual:]
  -[HMSoftwareUpdateDocumentationMetadata copyWithZone:]
  -[HMSoftwareUpdateDocumentationMetadata encodeWithCoder:]
  -[HMSoftwareUpdateDocumentationMetadata initWithCoder:]
  -[HMSoftwareUpdateDocumentationMetadata .cxx_destruct]
  -[HMSoftwareUpdateDocumentationMetadata URL]
  -[HMSoftwareUpdateDocumentationMetadata digest]
  -[HMSoftwareUpdateDocumentationMetadata initWithURL:digest:]


HMAccessoryProfile : NSObject /usr/lib/libSystem.B.dylib <HMObjectMerge>
 @property  _HMAccessoryProfile *accessoryProfile
 @property  NSUUID *profileUniqueIdentifier
 @property  NSUUID *uniqueIdentifier
 @property  NSArray *services
 @property  HMAccessory *accessory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMAccessoryProfile isEqual:]
  -[HMAccessoryProfile .cxx_destruct]
  -[HMAccessoryProfile uniqueIdentifier]
  -[HMAccessoryProfile services]
  -[HMAccessoryProfile accessory]
  -[HMAccessoryProfile _mergeWithNewObject:operations:]
  -[HMAccessoryProfile profileUniqueIdentifier]
  -[HMAccessoryProfile handleRuntimeStateUpdate:]
  -[HMAccessoryProfile accessoryProfile]
  -[HMAccessoryProfile initWithAccessoryProfile:]


HMHAPMetadataCharacteristic : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *type
 @property  NSString *chrDescription

  // instance methods
  -[HMHAPMetadataCharacteristic type]
  -[HMHAPMetadataCharacteristic setType:]
  -[HMHAPMetadataCharacteristic .cxx_destruct]
  -[HMHAPMetadataCharacteristic chrDescription]
  -[HMHAPMetadataCharacteristic setChrDescription:]


HMHAPMetadataService : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *type
 @property  NSString *svcDescription

  // instance methods
  -[HMHAPMetadataService type]
  -[HMHAPMetadataService setType:]
  -[HMHAPMetadataService .cxx_destruct]
  -[HMHAPMetadataService svcDescription]
  -[HMHAPMetadataService setSvcDescription:]


HMHAPMetadataCategory : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *categoryNumber
 @property  NSString *categoryType
 @property  NSString *categoryDescription

  // instance methods
  -[HMHAPMetadataCategory .cxx_destruct]
  -[HMHAPMetadataCategory categoryType]
  -[HMHAPMetadataCategory setCategoryType:]
  -[HMHAPMetadataCategory categoryDescription]
  -[HMHAPMetadataCategory categoryNumber]
  -[HMHAPMetadataCategory setCategoryNumber:]
  -[HMHAPMetadataCategory setCategoryDescription:]


HMHAPMetadata : NSObject /usr/lib/libSystem.B.dylib <HMProtoBufMerge>
 @property  NSDictionary *hapChrMap
 @property  NSDictionary *hapSvcMap
 @property  NSDictionary *hapCategoryMap
 @property  NSNumber *version
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMHAPMetadata getSharedInstance]

  // instance methods
  -[HMHAPMetadata .cxx_destruct]
  -[HMHAPMetadata version]
  -[HMHAPMetadata setVersion:]
  -[HMHAPMetadata shouldNotCacheCharacteristicOfType:]
  -[HMHAPMetadata characteristicTypeDescription:]
  -[HMHAPMetadata categoryForNumber:]
  -[HMHAPMetadata applyProtoBufData:callbackOperations:]
  -[HMHAPMetadata hapSvcMap]
  -[HMHAPMetadata hapChrMap]
  -[HMHAPMetadata hapCategoryMap]
  -[HMHAPMetadata categoryForCategoryType:]
  -[HMHAPMetadata setHapChrMap:]
  -[HMHAPMetadata setHapSvcMap:]
  -[HMHAPMetadata setHapCategoryMap:]
  -[HMHAPMetadata serviceTypeDescription:]


HMAccessoryAdvertisementInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *deviceIdentifier

  // instance methods
  -[HMAccessoryAdvertisementInfo .cxx_destruct]
  -[HMAccessoryAdvertisementInfo deviceIdentifier]
  -[HMAccessoryAdvertisementInfo initWithAccessoryIdentifier:]


HMAccessory : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, NSSecureCoding, HMFMessageReceiver, HMObjectMerge, HMMutableApplicationData, HMAccessorySettingsContainer, HMControllable>
 @property  NSArray *televisionProfiles
 @property  NSDictionary *serializedDictionaryRepresentation
 @property  NSArray *cameraProfiles
 @property  HMNetworkConfigurationProfile *networkConfigurationProfile
 @property  _HMContext *context
 @property  HMAccessoryCategory *category
 @property  BOOL reachable
 @property  long long reachableTransports
 @property  HMMutableArray *currentServices
 @property  BOOL bridgedAccessory
 @property  unsigned long transportTypes
 @property  unsigned long additionalSetupStatus
 @property  NSNumber *accessoryFlags
 @property  long long associationOptions
 @property  NSUUID *accountIdentifier
 @property  NSArray *controlTargetUUIDs
 @property  BOOL supportsTargetControl
 @property  BOOL supportsTargetController
 @property  BOOL targetControllerHardwareSupport
 @property  BOOL supportsMultiUser
 @property  BOOL supportsCompanionInitiatedRestart
 @property  NSUUID *uuid
 @property  NSString *name
 @property  NSString *configuredName
 @property  NSString *deviceIdentifier
 @property  HMRoom *room
 @property  HMHome *home
 @property  BOOL paired
 @property  NSString *model
 @property  NSString *manufacturer
 @property  NSString *firmwareVersion
 @property  NSString *serialNumber
 @property  NSString *bundleID
 @property  NSString *storeID
 @property  BOOL firmwareUpdateAvailable
 @property  unsigned long accessoryReprovisionState
 @property  HMAccessorySettings *settings
 @property  HMFPairingIdentity *pairingIdentity
 @property  HMFSoftwareVersion *softwareVersion
 @property  HMRemoteLoginHandler *remoteLoginHandler
 @property  HMSymptomsHandler *symptomsHandler
 @property  NSArray *uniqueIdentifiersForBridgedAccessories
 @property  HMMutableArray *accessoryProfiles
 @property  long long certificationStatus
 @property  BOOL supportsMediaAccessControl
 @property  HMFWiFiNetworkInfo *wifiNetworkInfo
 @property  BOOL suspendCapable
 @property  NSArray *bridgedAccessories
 @property  NSUUID *networkProtectionGroupUUID
 @property  NSUUID *identifier
 @property  NSUUID *uniqueIdentifier
 @property  <HMAccessoryDelegate> *delegate
 @property  BOOL bridged
 @property  NSArray *identifiersForBridgedAccessories
 @property  NSArray *services
 @property  NSArray *profiles
 @property  BOOL blocked
 @property  BOOL supportsIdentify
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  HMApplicationData *applicationData
 @property  NSUUID *applicationDataIdentifier
 @property  HMHome *containerHome
 @property  BOOL controllable

  // class methods
  +[HMAccessory supportsSecureCoding]
  +[HMAccessory logCategory]
  +[HMAccessory accessoryWithAccessoryReference:home:]
  +[HMAccessory _televisionProfilesForAccessoryServices:]
  +[HMAccessory _networkRouterProfilesForAccessoryProfiles:]
  +[HMAccessory _cameraProfilesForAccessoryProfiles:]
  +[HMAccessory _mediaProfilesForAccessoryProfiles:]
  +[HMAccessory _networkConfigurationProfilesForCoder:accessoryIdentifier:]
  +[HMAccessory accessoryWithSerializedDictionaryRepresentation:home:]

  // instance methods
  -[HMAccessory init]
  -[HMAccessory dealloc]
  -[HMAccessory name]
  -[HMAccessory encodeWithCoder:]
  -[HMAccessory initWithCoder:]
  -[HMAccessory delegate]
  -[HMAccessory setDelegate:]
  -[HMAccessory .cxx_destruct]
  -[HMAccessory setName:]
  -[HMAccessory identifier]
  -[HMAccessory category]
  -[HMAccessory setCategory:]
  -[HMAccessory uuid]
  -[HMAccessory context]
  -[HMAccessory uniqueIdentifier]
  -[HMAccessory bundleID]
  -[HMAccessory isBlocked]
  -[HMAccessory setUuid:]
  -[HMAccessory setBundleID:]
  -[HMAccessory model]
  -[HMAccessory setContext:]
  -[HMAccessory device]
  -[HMAccessory setModel:]
  -[HMAccessory deviceIdentifier]
  -[HMAccessory setDeviceIdentifier:]
  -[HMAccessory accountIdentifier]
  -[HMAccessory home]
  -[HMAccessory settings]
  -[HMAccessory setSettings:]
  -[HMAccessory serialNumber]
  -[HMAccessory firmwareVersion]
  -[HMAccessory setAccountIdentifier:]
  -[HMAccessory _privateDelegate]
  -[HMAccessory storeID]
  -[HMAccessory services]
  -[HMAccessory manufacturer]
  -[HMAccessory setManufacturer:]
  -[HMAccessory setHome:]
  -[HMAccessory transportTypes]
  -[HMAccessory mediaProfile]
  -[HMAccessory pairingIdentityWithPrivateKey:completionHandler:]
  -[HMAccessory applicationData]
  -[HMAccessory room]
  -[HMAccessory setDevice:]
  -[HMAccessory paired]
  -[HMAccessory setPaired:]
  -[HMAccessory logIdentifier]
  -[HMAccessory pairingIdentity]
  -[HMAccessory softwareVersion]
  -[HMAccessory isReachable]
  -[HMAccessory setReachable:]
  -[HMAccessory messageTargetUUID]
  -[HMAccessory messageReceiveQueue]
  -[HMAccessory setSerialNumber:]
  -[HMAccessory updateApplicationData:completionHandler:]
  -[HMAccessory remoteLoginHandler]
  -[HMAccessory setApplicationData:]
  -[HMAccessory profiles]
  -[HMAccessory setRoom:]
  -[HMAccessory setStoreID:]
  -[HMAccessory deleteSiriHistoryWithCompletion:]
  -[HMAccessory setFirmwareVersion:]
  -[HMAccessory updateAccessoryInfo:]
  -[HMAccessory _mergeWithNewObject:operations:]
  -[HMAccessory _writeValue:forCharacteristic:completionHandler:]
  -[HMAccessory _readValueForCharacteristic:completionHandler:]
  -[HMAccessory _updateAuthorizationData:forService:characteristic:completionHandler:]
  -[HMAccessory _findCharacteristic:forService:]
  -[HMAccessory __configureWithContext:home:]
  -[HMAccessory handleRuntimeStateUpdate:]
  -[HMAccessory _unconfigure]
  -[HMAccessory _updateName:completionHandler:]
  -[HMAccessory updateName:completionHandler:]
  -[HMAccessory certificationStatus]
  -[HMAccessory setCertificationStatus:]
  -[HMAccessory cameraProfiles]
  -[HMAccessory _findServiceWithUniqueIdentifier:]
  -[HMAccessory serializedDictionaryRepresentation]
  -[HMAccessory televisionProfiles]
  -[HMAccessory isControllable]
  -[HMAccessory accessoryProfiles]
  -[HMAccessory symptomsHandler]
  -[HMAccessory _handleRootSettingsUpdated:]
  -[HMAccessory configuredName]
  -[HMAccessory setConfiguredName:]
  -[HMAccessory containerHome]
  -[HMAccessory _findService:]
  -[HMAccessory networkRouterProfile]
  -[HMAccessory applicationDataIdentifier]
  -[HMAccessory currentServices]
  -[HMAccessory setCurrentServices:]
  -[HMAccessory bridgedAccessories]
  -[HMAccessory supportsTargetControl]
  -[HMAccessory supportsTargetController]
  -[HMAccessory _copyFrom:]
  -[HMAccessory uniqueIdentifiersForBridgedAccessories]
  -[HMAccessory setUniqueIdentifiersForBridgedAccessories:]
  -[HMAccessory setAccessoryReprovisionState:]
  -[HMAccessory _handleMultipleCharacteristicsUpdated:informDelegate:]
  -[HMAccessory controlTargets]
  -[HMAccessory targetControllers]
  -[HMAccessory _updateRoom:completionHandler:]
  -[HMAccessory supportsMediaAccessControl]
  -[HMAccessory isCurrentAccessory]
  -[HMAccessory setCurrentAccessory:]
  -[HMAccessory _configureProfilesWithContext:]
  -[HMAccessory softwareUpdateController]
  -[HMAccessory bridgedAccessory]
  -[HMAccessory controlTargetUUIDs]
  -[HMAccessory _notifyDelegateOfUpdatedSettings:]
  -[HMAccessory additionalSetupStatus]
  -[HMAccessory suspendCapable]
  -[HMAccessory setSuspendCapable:]
  -[HMAccessory reachableTransports]
  -[HMAccessory setReachableTransports:]
  -[HMAccessory setBridgedAccessory:]
  -[HMAccessory setTransportTypes:]
  -[HMAccessory setAccessoryProfiles:]
  -[HMAccessory setAdditionalSetupStatus:]
  -[HMAccessory accessoryFlags]
  -[HMAccessory setAccessoryFlags:]
  -[HMAccessory firmwareUpdateAvailable]
  -[HMAccessory setFirmwareUpdateAvailable:]
  -[HMAccessory setSoftwareVersion:]
  -[HMAccessory setSoftwareUpdateController:]
  -[HMAccessory setRemoteLoginHandler:]
  -[HMAccessory wifiNetworkInfo]
  -[HMAccessory setWifiNetworkInfo:]
  -[HMAccessory setSupportsTargetControl:]
  -[HMAccessory setSupportsTargetController:]
  -[HMAccessory targetControllerHardwareSupport]
  -[HMAccessory setTargetControllerHardwareSupport:]
  -[HMAccessory setSymptomsHandler:]
  -[HMAccessory supportsMultiUser]
  -[HMAccessory setSupportsMultiUser:]
  -[HMAccessory supportsCompanionInitiatedRestart]
  -[HMAccessory setSupportsCompanionInitiatedRestart:]
  -[HMAccessory _notifyDelegateOfAddedControlTarget:]
  -[HMAccessory _notifyDelegateOfRemovedControlTarget:]
  -[HMAccessory setControlTargetUUIDs:]
  -[HMAccessory _mergeServices:operations:]
  -[HMAccessory _mergeControlTargets:operations:]
  -[HMAccessory _notifyClientsOfTargetControlSupportUpdate]
  -[HMAccessory _notifyClientsOfMultiUserSupportUpdate]
  -[HMAccessory _notifyClientsOfSupportsCompanionInitiatedRestartUpdate]
  -[HMAccessory _notifyDelegateOfAppDataUpdateForService:]
  -[HMAccessory setControllable:]
  -[HMAccessory _notifyDelegatesOfUpdatedControllable]
  -[HMAccessory accessoryReprovisionState]
  -[HMAccessory supportsIdentify]
  -[HMAccessory setSupportsIdentify:]
  -[HMAccessory _notifyDelegatesOfAdditionalSetupRequiredChange]
  -[HMAccessory _mergeProfileObjects:currentOperations:]
  -[HMAccessory __updateSymptomsHandler:operations:]
  -[HMAccessory setSupportsMediaAccessControl:]
  -[HMAccessory networkProtectionGroupUUID]
  -[HMAccessory setNetworkProtectionGroupUUID:]
  -[HMAccessory __handleConnectivityChanged:completionHandler:]
  -[HMAccessory _identifyWithCompletionHandler:]
  -[HMAccessory _deleteSiriHistoryWithCompletion:]
  -[HMAccessory updateApplicationData:forService:completionHandler:]
  -[HMAccessory _updateApplicationData:forService:completionHandler:]
  -[HMAccessory _notifyClientsOfSymptomsHandlerAddedOrRemoved:]
  -[HMAccessory addControlTargetUUIDs:]
  -[HMAccessory removeControlTargetUUIDs:]
  -[HMAccessory isBridged]
  -[HMAccessory identifiersForBridgedAccessories]
  -[HMAccessory resetControlTargetUUIDs]
  -[HMAccessory _accessoryInformationService]
  -[HMAccessory _valueForCharacteristic:ofService:]
  -[HMAccessory isFirmwareUpdateAvailable]
  -[HMAccessory isAdditionalSetupRequired]
  -[HMAccessory queryAdvertisementInformationWithCompletionHandler:]
  -[HMAccessory isSuspendCapable]
  -[HMAccessory associationOptions]
  -[HMAccessory updateAccessoryName:completionHandler:]
  -[HMAccessory _setNotifyValue:forCharacteristic:]
  -[HMAccessory _updateAssociatedServiceType:forService:completionHandler:]
  -[HMAccessory _updateName:forService:completionHandler:]
  -[HMAccessory _handleCharacteristicValueUpdated:]
  -[HMAccessory _handleRenamed:]
  -[HMAccessory _handleConnectivityChanged:]
  -[HMAccessory _handleCharacteristicsUpdated:]
  -[HMAccessory _handleAccessoryNotificationsUpdated:]
  -[HMAccessory _checkForTelevisionProfileChanges:]
  -[HMAccessory _handleAccessoryFlagsChanged:]
  -[HMAccessory identifyWithCompletionHandler:]
  -[HMAccessory _updateFromAccessory:]
  -[HMAccessory _listPairingsWithCompletionHandler:]
  -[HMAccessory _handleServiceRenamed:]
  -[HMAccessory _handleServiceDefaultNameUpdate:]
  -[HMAccessory _handleServiceTypeAssociated:]
  -[HMAccessory _handleServiceSubtype:]
  -[HMAccessory _handleServiceConfigurationState:]
  -[HMAccessory _handleServiceMediaSourceIdentifierUpdated:]
  -[HMAccessory _handleAccessoryCategoryChanged:]
  -[HMAccessory notifyDelegateOfAppDataUpdateForService:]
  -[HMAccessory _handleAccessoryControllableChanged:]
  -[HMAccessory _handleSymptomsHandlerUpdatedMessage:]
  -[HMAccessory addControlTarget:completionHandler:]
  -[HMAccessory removeControlTarget:completionHandler:]
  -[HMAccessory resetControlTargetsWithCompletionHandler:]
  -[HMAccessory _handleControlTargetsUpdatedMessage:]
  -[HMAccessory _handleTargetControlSupportUpdatedMessage:]
  -[HMAccessory _handleMultiUserSupportUpdatedMessage:]
  -[HMAccessory _handleSupportsCompanionInitiatedRestartUpdatedMessage:]
  -[HMAccessory setAssociationOptions:]
  -[HMAccessory networkConfigurationProfile]


HMHomeCloudShareResponse : NSObject /usr/lib/libSystem.B.dylib
 @property  CKShareParticipant *participant
 @property  HMUser *ownerUser
 @property  HMUserCloudShareClientInfo *clientInfo

  // instance methods
  -[HMHomeCloudShareResponse .cxx_destruct]
  -[HMHomeCloudShareResponse clientInfo]
  -[HMHomeCloudShareResponse participant]
  -[HMHomeCloudShareResponse ownerUser]
  -[HMHomeCloudShareResponse initWithOwnerUser:pariticipant:clientInfo:]


HMCameraClipSignificantEvent : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long reason
 @property  NSDate *dateOfOccurrence
 @property  double timeOffsetWithinClip
 @property  unsigned long confidenceLevel
 @property  BOOL canAskForUserFeedback

  // class methods
  +[HMCameraClipSignificantEvent supportsSecureCoding]

  // instance methods
  -[HMCameraClipSignificantEvent isEqual:]
  -[HMCameraClipSignificantEvent copyWithZone:]
  -[HMCameraClipSignificantEvent encodeWithCoder:]
  -[HMCameraClipSignificantEvent initWithCoder:]
  -[HMCameraClipSignificantEvent reason]
  -[HMCameraClipSignificantEvent .cxx_destruct]
  -[HMCameraClipSignificantEvent uniqueIdentifier]
  -[HMCameraClipSignificantEvent confidenceLevel]
  -[HMCameraClipSignificantEvent canAskForUserFeedback]
  -[HMCameraClipSignificantEvent initWithUniqueIdentifier:reason:timeOffsetWithinClip:dateOfOccurrence:confidenceLevel:]
  -[HMCameraClipSignificantEvent timeOffsetWithinClip]
  -[HMCameraClipSignificantEvent dateOfOccurrence]
  -[HMCameraClipSignificantEvent initWithUniqueIdentifier:reason:dateOfOccurrence:confidenceLevel:]


_HMAccessorySettingGroup : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, HMFMessageReceiver, NSSecureCoding, HMFMerging>
 @property  HMAccessorySettings *accessorySettings
 @property  _HMContext *context
 @property  <_HMAccesorySettingGroupDelegate> *delegate
 @property  NSUUID *identifier
 @property  NSString *name
 @property  NSArray *settings
 @property  NSArray *groups
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[_HMAccessorySettingGroup supportsSecureCoding]
  +[_HMAccessorySettingGroup shortDescription]
  +[_HMAccessorySettingGroup logCategory]
  +[_HMAccessorySettingGroup supportedSettingsClasses]
  +[_HMAccessorySettingGroup supportedGroupsClasses]

  // instance methods
  -[_HMAccessorySettingGroup init]
  -[_HMAccessorySettingGroup dealloc]
  -[_HMAccessorySettingGroup isEqual:]
  -[_HMAccessorySettingGroup name]
  -[_HMAccessorySettingGroup encodeWithCoder:]
  -[_HMAccessorySettingGroup initWithCoder:]
  -[_HMAccessorySettingGroup delegate]
  -[_HMAccessorySettingGroup setDelegate:]
  -[_HMAccessorySettingGroup .cxx_destruct]
  -[_HMAccessorySettingGroup initWithName:]
  -[_HMAccessorySettingGroup identifier]
  -[_HMAccessorySettingGroup context]
  -[_HMAccessorySettingGroup setContext:]
  -[_HMAccessorySettingGroup settings]
  -[_HMAccessorySettingGroup groups]
  -[_HMAccessorySettingGroup shortDescription]
  -[_HMAccessorySettingGroup clientQueue]
  -[_HMAccessorySettingGroup logIdentifier]
  -[_HMAccessorySettingGroup mergeObject:]
  -[_HMAccessorySettingGroup descriptionWithPointer:]
  -[_HMAccessorySettingGroup messageTargetUUID]
  -[_HMAccessorySettingGroup messageReceiveQueue]
  -[_HMAccessorySettingGroup messageDestination]
  -[_HMAccessorySettingGroup addGroup:]
  -[_HMAccessorySettingGroup addSetting:]
  -[_HMAccessorySettingGroup configureWithAccessorySettings:context:]
  -[_HMAccessorySettingGroup setAccessorySettings:]
  -[_HMAccessorySettingGroup accessorySettings]
  -[_HMAccessorySettingGroup notifyDelegateOfAddedSetting:]
  -[_HMAccessorySettingGroup notifyDelegateOfRemovedSetting:]
  -[_HMAccessorySettingGroup removeSetting:]
  -[_HMAccessorySettingGroup notifyDelegateOfAddedGroup:]
  -[_HMAccessorySettingGroup notifyDelegateOfRemovedGroup:]
  -[_HMAccessorySettingGroup removeGroup:]
  -[_HMAccessorySettingGroup mergeSettings:]
  -[_HMAccessorySettingGroup mergeGroups:]
  -[_HMAccessorySettingGroup settingWithIdentifier:]
  -[_HMAccessorySettingGroup addSetting:toGroup:completionHandler:]
  -[_HMAccessorySettingGroup removeSetting:fromGroup:completionHandler:]
  -[_HMAccessorySettingGroup groupWithIdentifier:]
  -[_HMAccessorySettingGroup addGroup:toGroup:completionHandler:]
  -[_HMAccessorySettingGroup removeGroup:fromGroup:completionHandler:]


HMAccessorySettingGroup : HMSettingGroup <_HMAccesorySettingGroupDelegate, HMFLogging>
 @property  _HMAccessorySettingGroup *internal
 @property  HMAccessorySettingGroup *group
 @property  NSString *keyPath
 @property  NSString *localizedTitle
 @property  NSArray *settings
 @property  NSArray *groups
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessorySettingGroup logCategory]

  // instance methods
  -[HMAccessorySettingGroup init]
  -[HMAccessorySettingGroup isEqual:]
  -[HMAccessorySettingGroup .cxx_destruct]
  -[HMAccessorySettingGroup setGroup:]
  -[HMAccessorySettingGroup keyPath]
  -[HMAccessorySettingGroup initWithKeyPath:]
  -[HMAccessorySettingGroup group]
  -[HMAccessorySettingGroup internal]
  -[HMAccessorySettingGroup settings]
  -[HMAccessorySettingGroup localizedTitle]
  -[HMAccessorySettingGroup groups]
  -[HMAccessorySettingGroup logIdentifier]
  -[HMAccessorySettingGroup initWithInternal:]
  -[HMAccessorySettingGroup addGroup:]
  -[HMAccessorySettingGroup addSetting:]
  -[HMAccessorySettingGroup _settingGroup:didAddSetting:]
  -[HMAccessorySettingGroup _settingGroup:didRemoveSetting:]
  -[HMAccessorySettingGroup removeSetting:]
  -[HMAccessorySettingGroup _settingGroup:didAddSettingGroup:]
  -[HMAccessorySettingGroup _settingGroup:didRemoveSettingGroup:]
  -[HMAccessorySettingGroup removeGroup:]
  -[HMAccessorySettingGroup _notifyClientOfAddedSetting:]
  -[HMAccessorySettingGroup _notifyClientOfRemovedSetting:]
  -[HMAccessorySettingGroup _notifyClientOfAddedGroup:]
  -[HMAccessorySettingGroup _notifyClientOfRemovedGroup:]
  -[HMAccessorySettingGroup addSetting:completionHandler:]
  -[HMAccessorySettingGroup removeSetting:completionHandler:]
  -[HMAccessorySettingGroup addGroup:completionHandler:]
  -[HMAccessorySettingGroup removeGroup:completionHandler:]


HMCameraClipAssetContext : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSURL *url
 @property  NSDate *expirationDate
 @property  NSDictionary *requiredHTTPHeaders

  // class methods
  +[HMCameraClipAssetContext supportsSecureCoding]

  // instance methods
  -[HMCameraClipAssetContext init]
  -[HMCameraClipAssetContext isEqual:]
  -[HMCameraClipAssetContext copyWithZone:]
  -[HMCameraClipAssetContext encodeWithCoder:]
  -[HMCameraClipAssetContext initWithCoder:]
  -[HMCameraClipAssetContext .cxx_destruct]
  -[HMCameraClipAssetContext url]
  -[HMCameraClipAssetContext expirationDate]
  -[HMCameraClipAssetContext requiredHTTPHeaders]
  -[HMCameraClipAssetContext initWithURL:expirationDate:requiredHTTPHeaders:]


HMCameraUserSettings : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, HMFMessageReceiver>
 @property  _HMCameraUserSettings *cameraUserSettings
 @property  NSUUID *uniqueIdentifier
 @property  _HMContext *context
 @property  HMAccessory *accessory
 @property  unsigned long supportedFeatures
 @property  unsigned long currentAccessMode
 @property  unsigned long recordingStorageDuration
 @property  unsigned long recordingEventTriggers
 @property  BOOL snapshotsAllowed
 @property  HMCameraBulletinBoardSmartNotification *smartNotificationBulletin
 @property  BOOL accessModeIndicatorEnabled
 @property  BOOL nightVisionModeEnabled
 @property  BOOL recordingAudioEnabled
 @property  BOOL accessModeChangeNotificationEnabled
 @property  BOOL cameraManuallyDisabled
 @property  <HMCameraUserSettingsDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMCameraUserSettings logCategory]

  // instance methods
  -[HMCameraUserSettings delegate]
  -[HMCameraUserSettings setDelegate:]
  -[HMCameraUserSettings .cxx_destruct]
  -[HMCameraUserSettings context]
  -[HMCameraUserSettings uniqueIdentifier]
  -[HMCameraUserSettings setContext:]
  -[HMCameraUserSettings accessory]
  -[HMCameraUserSettings setAccessory:]
  -[HMCameraUserSettings logIdentifier]
  -[HMCameraUserSettings messageTargetUUID]
  -[HMCameraUserSettings messageReceiveQueue]
  -[HMCameraUserSettings supportedFeatures]
  -[HMCameraUserSettings messageDestination]
  -[HMCameraUserSettings setCameraUserSettings:]
  -[HMCameraUserSettings cameraUserSettings]
  -[HMCameraUserSettings configureWithAccessory:context:]
  -[HMCameraUserSettings initWithCameraUserSettings:]
  -[HMCameraUserSettings _mergeNewSettings:operations:]
  -[HMCameraUserSettings smartNotificationBulletin]
  -[HMCameraUserSettings accessModeAtHome]
  -[HMCameraUserSettings accessModeNotAtHome]
  -[HMCameraUserSettings currentAccessMode]
  -[HMCameraUserSettings recordingEventTriggers]
  -[HMCameraUserSettings isAccessModeIndicatorEnabled]
  -[HMCameraUserSettings areSnapshotsAllowed]
  -[HMCameraUserSettings isNightVisionModeEnabled]
  -[HMCameraUserSettings isRecordingAudioEnabled]
  -[HMCameraUserSettings isAccessModeChangeNotificationEnabled]
  -[HMCameraUserSettings isCameraManuallyDisabled]
  -[HMCameraUserSettings updateWithSettings:]
  -[HMCameraUserSettings _callSettingsDidUpdateDelegate]
  -[HMCameraUserSettings accessModeForPresenceType:]
  -[HMCameraUserSettings updateAccessMode:forPresenceEventType:completionHandler:]
  -[HMCameraUserSettings updateRecordingStorageDuration:completionHandler:]
  -[HMCameraUserSettings updateRecordingEventTriggers:completionHandler:]
  -[HMCameraUserSettings updateAccessModeIndicatorEnabled:completionHandler:]
  -[HMCameraUserSettings updateSnapshotsAllowed:completionHandler:]
  -[HMCameraUserSettings updateNightVisionModeEnabled:completionHandler:]
  -[HMCameraUserSettings updateRecordingAudioEnabled:completionHandler:]
  -[HMCameraUserSettings updateAccessModeChangeNotificationEnabled:completionHandler:]
  -[HMCameraUserSettings recordingStorageDuration]


HMCameraAudioControl : HMCameraControl
 @property  _HMCameraAudioControl *audioControl
 @property  HMCharacteristic *mute
 @property  HMCharacteristic *volume

  // instance methods
  -[HMCameraAudioControl .cxx_destruct]
  -[HMCameraAudioControl volume]
  -[HMCameraAudioControl audioControl]
  -[HMCameraAudioControl setAudioControl:]
  -[HMCameraAudioControl mute]
  -[HMCameraAudioControl initWithAudioControl:]


HMPresenceEventActivation : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *number
 @property  unsigned long value

  // class methods
  +[HMPresenceEventActivation activationGranularityWithNumber:]
  +[HMPresenceEventActivation activationGranularityWithValue:]
  +[HMPresenceEventActivation activationGranularityWithMessage:]
  +[HMPresenceEventActivation activationGranularityWithDict:]
  +[HMPresenceEventActivation activationGranularityWithCoder:]

  // instance methods
  -[HMPresenceEventActivation isEqual:]
  -[HMPresenceEventActivation value]
  -[HMPresenceEventActivation number]
  -[HMPresenceEventActivation initWithNumber:]
  -[HMPresenceEventActivation addToCoder:]
  -[HMPresenceEventActivation addToPayload:]


HMRemoteLoginMessage : HMFObject /System/Library/Frameworks/Foundation.framework/Foundation <NSSecureCoding>
 @property  NSString *sessionID
 @property  NSError *error

  // class methods
  +[HMRemoteLoginMessage supportsSecureCoding]

  // instance methods
  -[HMRemoteLoginMessage encodeWithCoder:]
  -[HMRemoteLoginMessage initWithCoder:]
  -[HMRemoteLoginMessage .cxx_destruct]
  -[HMRemoteLoginMessage error]
  -[HMRemoteLoginMessage setError:]
  -[HMRemoteLoginMessage sessionID]
  -[HMRemoteLoginMessage initWithSessionID:]
  -[HMRemoteLoginMessage initNewMessage]


HMAddUserRemoteViewController : _UIRemoteViewController /System/Library/Frameworks/Intents.framework/Intents <HMUserManagementRemoteHost>
 @property  <HMUserManagementRemoteHost> *delegate

  // class methods
  +[HMAddUserRemoteViewController exportedInterface]
  +[HMAddUserRemoteViewController serviceViewControllerInterface]
  +[HMAddUserRemoteViewController requestViewControllerWithConnectionHandler:]

  // instance methods
  -[HMAddUserRemoteViewController delegate]
  -[HMAddUserRemoteViewController setDelegate:]
  -[HMAddUserRemoteViewController .cxx_destruct]
  -[HMAddUserRemoteViewController viewDidLoad]
  -[HMAddUserRemoteViewController viewServiceDidTerminateWithError:]
  -[HMAddUserRemoteViewController userManagementDidFinishWithError:]
  -[HMAddUserRemoteViewController userManagementDidLoad]


HMAccessoryOwnershipToken : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSData *internalData

  // class methods
  +[HMAccessoryOwnershipToken supportsSecureCoding]

  // instance methods
  -[HMAccessoryOwnershipToken isEqual:]
  -[HMAccessoryOwnershipToken copyWithZone:]
  -[HMAccessoryOwnershipToken encodeWithCoder:]
  -[HMAccessoryOwnershipToken initWithCoder:]
  -[HMAccessoryOwnershipToken initWithData:]
  -[HMAccessoryOwnershipToken .cxx_destruct]
  -[HMAccessoryOwnershipToken internalData]
  -[HMAccessoryOwnershipToken setInternalData:]


HMAccessorySetupPayload : NSObject /usr/lib/libSystem.B.dylib
 @property  HMSetupAccessoryPayload *internalSetupPayload
 @property  HMAddAccessoryRequest *addRequest
 @property  HMAccessoryOwnershipToken *ownershipToken
 @property  HMSetupAccessoryBrowsingRequest *accessoryBrowsingRequest
 @property  NSString *suggestedRoomName

  // instance methods
  -[HMAccessorySetupPayload initWithURL:]
  -[HMAccessorySetupPayload .cxx_destruct]
  -[HMAccessorySetupPayload ownershipToken]
  -[HMAccessorySetupPayload setAccessoryBrowsingRequest:]
  -[HMAccessorySetupPayload accessoryBrowsingRequest]
  -[HMAccessorySetupPayload suggestedRoomName]
  -[HMAccessorySetupPayload setSuggestedRoomName:]
  -[HMAccessorySetupPayload initWithAddRequest:url:ownershipToken:]
  -[HMAccessorySetupPayload internalSetupPayload]
  -[HMAccessorySetupPayload addRequest]
  -[HMAccessorySetupPayload initWithURL:ownershipToken:]
  -[HMAccessorySetupPayload _parseURLForBrowsingRequest:]
  -[HMAccessorySetupPayload setInternalSetupPayload:]


HMMediaContentProfileAccessControl : HMAccessControl <NSCopying, NSMutableCopying>
 @property  NSArray *accessories

  // class methods
  +[HMMediaContentProfileAccessControl shortDescription]
  +[HMMediaContentProfileAccessControl isAccessorySupported:]

  // instance methods
  -[HMMediaContentProfileAccessControl isEqual:]
  -[HMMediaContentProfileAccessControl copyWithZone:]
  -[HMMediaContentProfileAccessControl mutableCopyWithZone:]
  -[HMMediaContentProfileAccessControl .cxx_destruct]
  -[HMMediaContentProfileAccessControl initWithUser:]
  -[HMMediaContentProfileAccessControl shortDescription]
  -[HMMediaContentProfileAccessControl accessories]
  -[HMMediaContentProfileAccessControl descriptionWithPointer:]
  -[HMMediaContentProfileAccessControl initWithUser:accessories:]


HMMutableMediaContentProfileAccessControl : HMMediaContentProfileAccessControl
 @property  NSArray *accessories

  // instance methods
  -[HMMutableMediaContentProfileAccessControl addAccessory:]
  -[HMMutableMediaContentProfileAccessControl setAccessories:]
  -[HMMutableMediaContentProfileAccessControl removeAccessory:]


HMPBHomeReference : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasUniqueIdentifier
 @property  NSData *uniqueIdentifier

  // class methods
  +[HMPBHomeReference homeReferenceWithData:]
  +[HMPBHomeReference homeReferenceWithHome:]

  // instance methods
  -[HMPBHomeReference isEqual:]
  -[HMPBHomeReference copyWithZone:]
  -[HMPBHomeReference .cxx_destruct]
  -[HMPBHomeReference dictionaryRepresentation]
  -[HMPBHomeReference uniqueIdentifier]
  -[HMPBHomeReference writeTo:]
  -[HMPBHomeReference mergeFrom:]
  -[HMPBHomeReference readFrom:]
  -[HMPBHomeReference copyTo:]
  -[HMPBHomeReference setUniqueIdentifier:]
  -[HMPBHomeReference hasUniqueIdentifier]


HMUserCloudShareWithOwnerOperation : NSOperation /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities <HMFLogging>
 @property  HMUser *currentUser
 @property  HMUser *ownerUser
 @property  CKShare *share
 @property  CKContainer *container
 @property  @? completion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMUserCloudShareWithOwnerOperation logCategory]

  // instance methods
  -[HMUserCloudShareWithOwnerOperation container]
  -[HMUserCloudShareWithOwnerOperation .cxx_destruct]
  -[HMUserCloudShareWithOwnerOperation main]
  -[HMUserCloudShareWithOwnerOperation setCompletion:]
  -[HMUserCloudShareWithOwnerOperation completion]
  -[HMUserCloudShareWithOwnerOperation currentUser]
  -[HMUserCloudShareWithOwnerOperation share]
  -[HMUserCloudShareWithOwnerOperation setShare:]
  -[HMUserCloudShareWithOwnerOperation logIdentifier]
  -[HMUserCloudShareWithOwnerOperation ownerUser]
  -[HMUserCloudShareWithOwnerOperation initWithShare:container:ownerUser:currentUser:]
  -[HMUserCloudShareWithOwnerOperation sendShareToOwner:from:savedOwnerAsParticipant:share:completion:]
  -[HMUserCloudShareWithOwnerOperation saveShareAndObtainSavedOwner:completion:]
  -[HMUserCloudShareWithOwnerOperation removeOwnerAsParticipant:completion:]
  -[HMUserCloudShareWithOwnerOperation fetchParticipantForLookupInfo:completion:]


HMAccessoryBrowser : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver>
 @property  _HMContext *context
 @property  NSUUID *uuid
 @property  HMMutableArray *accessories
 @property  unsigned long generationCounter
 @property  BOOL browsing
 @property  <HMAccessoryBrowserDelegate> *delegate
 @property  NSArray *discoveredAccessories
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // instance methods
  -[HMAccessoryBrowser init]
  -[HMAccessoryBrowser dealloc]
  -[HMAccessoryBrowser delegate]
  -[HMAccessoryBrowser setDelegate:]
  -[HMAccessoryBrowser .cxx_destruct]
  -[HMAccessoryBrowser uuid]
  -[HMAccessoryBrowser context]
  -[HMAccessoryBrowser setUuid:]
  -[HMAccessoryBrowser _start]
  -[HMAccessoryBrowser accessories]
  -[HMAccessoryBrowser isBrowsing]
  -[HMAccessoryBrowser setBrowsing:]
  -[HMAccessoryBrowser generationCounter]
  -[HMAccessoryBrowser messageTargetUUID]
  -[HMAccessoryBrowser messageReceiveQueue]
  -[HMAccessoryBrowser stopSearchingForNewAccessories]
  -[HMAccessoryBrowser startSearchingForNewAccessories]
  -[HMAccessoryBrowser _registerNotificationHandlers]
  -[HMAccessoryBrowser handleStartWithError:response:]
  -[HMAccessoryBrowser setGenerationCounter:]
  -[HMAccessoryBrowser setAccessories:]
  -[HMAccessoryBrowser _startSearchingForNewAccessories]
  -[HMAccessoryBrowser _fetchNewAccessoriesWithPrivacyCheck]
  -[HMAccessoryBrowser _stopSearchingForNewAccessories]
  -[HMAccessoryBrowser discoveredAccessories]
  -[HMAccessoryBrowser _updateNewAccessories:]
  -[HMAccessoryBrowser _fetchNewAccessories]
  -[HMAccessoryBrowser _handleNewAccessoriesFound:]
  -[HMAccessoryBrowser _handleNewAccessoriesRemoved:]


_HMAccessoryProfile : NSObject /usr/lib/libSystem.B.dylib <HMObjectMerge, HMFMessageReceiver, NSSecureCoding>
 @property  _HMContext *context
 @property  HMAccessory *accessory
 @property  HMHome *home
 @property  NSUUID *profileUniqueIdentifier
 @property  NSArray *services
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[_HMAccessoryProfile supportsSecureCoding]

  // instance methods
  -[_HMAccessoryProfile init]
  -[_HMAccessoryProfile isEqual:]
  -[_HMAccessoryProfile encodeWithCoder:]
  -[_HMAccessoryProfile initWithCoder:]
  -[_HMAccessoryProfile .cxx_destruct]
  -[_HMAccessoryProfile context]
  -[_HMAccessoryProfile uniqueIdentifier]
  -[_HMAccessoryProfile home]
  -[_HMAccessoryProfile services]
  -[_HMAccessoryProfile accessory]
  -[_HMAccessoryProfile messageTargetUUID]
  -[_HMAccessoryProfile messageReceiveQueue]
  -[_HMAccessoryProfile _mergeWithNewObject:operations:]
  -[_HMAccessoryProfile profileUniqueIdentifier]
  -[_HMAccessoryProfile _registerNotificationHandlers]
  -[_HMAccessoryProfile handleRuntimeStateUpdate:]
  -[_HMAccessoryProfile initWithUUID:services:]
  -[_HMAccessoryProfile __configureWithContext:accessory:]


HMSymptomFixSession : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, HMFTimerDelegate>
 @property  _HMContext *context
 @property  NSString *logIdentifier
 @property  long long state
 @property  NSError *error
 @property  SFDeviceRepairSession *deviceRepairSession
 @property  BOOL deviceRepairSessionFinished
 @property  BOOL hasSymptomDisappeared
 @property  HMFTimer *symptomDisappearanceTimer
 @property  HMSymptom *symptom
 @property  NSUUID *deviceIdentifier
 @property  unsigned int deviceRepairFlags
 @property  <HMSymptomFixSessionDelegate> *delegate
 @property  UIViewController *presentingViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSymptomFixSession logCategory]
  +[HMSymptomFixSession _createDeviceRepairSession]
  +[HMSymptomFixSession _createSymptomDisappearanceTimer]

  // instance methods
  -[HMSymptomFixSession init]
  -[HMSymptomFixSession dealloc]
  -[HMSymptomFixSession delegate]
  -[HMSymptomFixSession setDelegate:]
  -[HMSymptomFixSession .cxx_destruct]
  -[HMSymptomFixSession error]
  -[HMSymptomFixSession stop]
  -[HMSymptomFixSession start]
  -[HMSymptomFixSession setError:]
  -[HMSymptomFixSession state]
  -[HMSymptomFixSession context]
  -[HMSymptomFixSession setState:]
  -[HMSymptomFixSession deviceIdentifier]
  -[HMSymptomFixSession presentingViewController]
  -[HMSymptomFixSession _updateState]
  -[HMSymptomFixSession setPresentingViewController:]
  -[HMSymptomFixSession logIdentifier]
  -[HMSymptomFixSession timerDidFire:]
  -[HMSymptomFixSession initWithSymptom:deviceIdentifier:context:]
  -[HMSymptomFixSession setDeviceRepairFlags:]
  -[HMSymptomFixSession noteSymptomDisappeared]
  -[HMSymptomFixSession symptom]
  -[HMSymptomFixSession setDeviceRepairSession:]
  -[HMSymptomFixSession deviceRepairSession]
  -[HMSymptomFixSession deviceRepairFlags]
  -[HMSymptomFixSession _updateForDeviceSetupProgressEvent:error:]
  -[HMSymptomFixSession setSymptomDisappearanceTimer:]
  -[HMSymptomFixSession setHasSymptomDisappeared:]
  -[HMSymptomFixSession setDeviceRepairSessionFinished:]
  -[HMSymptomFixSession _startSymptomDisappearanceTimer]
  -[HMSymptomFixSession isDeviceRepairSessionFinished]
  -[HMSymptomFixSession hasSymptomDisappeared]
  -[HMSymptomFixSession symptomDisappearanceTimer]


HMSetting : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  long long type
 @property  <HMSettingManager> *settingManager
 @property  NSUUID *identifier
 @property  NSString *name
 @property  id value
 @property  NSString *keyPath
 @property  Class valueClass
 @property  unsigned long properties
 @property  HMSettingValue *internalValue
 @property  BOOL writable
 @property  NSString *localizedTitle

  // class methods
  +[HMSetting supportsSecureCoding]

  // instance methods
  -[HMSetting isEqual:]
  -[HMSetting name]
  -[HMSetting type]
  -[HMSetting setType:]
  -[HMSetting encodeWithCoder:]
  -[HMSetting initWithCoder:]
  -[HMSetting .cxx_destruct]
  -[HMSetting setName:]
  -[HMSetting identifier]
  -[HMSetting value]
  -[HMSetting keyPath]
  -[HMSetting setValue:]
  -[HMSetting properties]
  -[HMSetting setProperties:]
  -[HMSetting valueClass]
  -[HMSetting setValueClass:]
  -[HMSetting merge:]
  -[HMSetting localizedTitle]
  -[HMSetting setKeyPath:]
  -[HMSetting isWritable]
  -[HMSetting updateValue:completionHandler:]
  -[HMSetting setSettingManager:]
  -[HMSetting valueForUpdate:]
  -[HMSetting initWithIdentifier:name:type:value:properties:]
  -[HMSetting settingManager]
  -[HMSetting _initWithIdentifier:name:type:value:properties:]
  -[HMSetting initWithInternal]
  -[HMSetting internalValue]


HMDataSetting : HMSetting
  // instance methods
  -[HMDataSetting isKindOfClass:]
  -[HMDataSetting valueForUpdate:]
  -[HMDataSetting internalValue]


HMNumberSetting : HMSetting
 @property  NSNumber *minimumValue
 @property  NSNumber *maximumValue
 @property  NSNumber *stepValue

  // instance methods
  -[HMNumberSetting isKindOfClass:]
  -[HMNumberSetting .cxx_destruct]
  -[HMNumberSetting minimumValue]
  -[HMNumberSetting maximumValue]
  -[HMNumberSetting stepValue]
  -[HMNumberSetting valueForUpdate:]
  -[HMNumberSetting internalValue]


HMStringSetting : HMSetting
  // instance methods
  -[HMStringSetting isKindOfClass:]
  -[HMStringSetting valueForUpdate:]
  -[HMStringSetting internalValue]


HMSelectionSetting : HMSetting
 @property  NSArray *items

  // instance methods
  -[HMSelectionSetting isKindOfClass:]
  -[HMSelectionSetting .cxx_destruct]
  -[HMSelectionSetting items]
  -[HMSelectionSetting valueForUpdate:]
  -[HMSelectionSetting internalValue]


HMSelectionSettingItem : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSString *title
 @property  NSString *localizedTitle

  // class methods
  +[HMSelectionSettingItem supportsSecureCoding]

  // instance methods
  -[HMSelectionSettingItem copyWithZone:]
  -[HMSelectionSettingItem encodeWithCoder:]
  -[HMSelectionSettingItem initWithCoder:]
  -[HMSelectionSettingItem .cxx_destruct]
  -[HMSelectionSettingItem identifier]
  -[HMSelectionSettingItem title]
  -[HMSelectionSettingItem localizedTitle]


HMCollectionSetting : HMSetting <NSFastEnumeration>
 @property  NSSet *itemValueClasses

  // class methods
  +[HMCollectionSetting defaultItemValueClasses]
  +[HMCollectionSetting itemValueClassesForKeyPath:]
  +[HMCollectionSetting setItemValueClass:forKeyPath:]
  +[HMCollectionSetting setItemValueClasses:forKeyPath:]

  // instance methods
  -[HMCollectionSetting isKindOfClass:]
  -[HMCollectionSetting countByEnumeratingWithState:objects:count:]
  -[HMCollectionSetting .cxx_destruct]
  -[HMCollectionSetting setItemValueClass:]
  -[HMCollectionSetting setItemValueClasses:]
  -[HMCollectionSetting itemValueClasses]


HMCollectionSettingItem : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  <NSObject><NSCopying><NSSecureCoding> *value

  // class methods
  +[HMCollectionSettingItem supportsSecureCoding]

  // instance methods
  -[HMCollectionSettingItem copyWithZone:]
  -[HMCollectionSettingItem encodeWithCoder:]
  -[HMCollectionSettingItem initWithCoder:]
  -[HMCollectionSettingItem .cxx_destruct]
  -[HMCollectionSettingItem identifier]
  -[HMCollectionSettingItem value]


HMClientConnection : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMXPCClient *xpcClient
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSUUID *uuid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMClientConnection sharedInstance]
  +[HMClientConnection areHomesConfigured]
  +[HMClientConnection siriHomeIdentifier]
  +[HMClientConnection areAnyAccessoriesConfigured]
  +[HMClientConnection areAnySpeakersConfigured]
  +[HMClientConnection areAnyTelevisionAccessoriesConfigured]

  // instance methods
  -[HMClientConnection init]
  -[HMClientConnection dealloc]
  -[HMClientConnection .cxx_destruct]
  -[HMClientConnection uuid]
  -[HMClientConnection _registerToDaemon]
  -[HMClientConnection setUuid:]
  -[HMClientConnection _start]
  -[HMClientConnection clientQueue]
  -[HMClientConnection messageTargetUUID]
  -[HMClientConnection messageReceiveQueue]
  -[HMClientConnection setMsgDispatcher:]
  -[HMClientConnection msgDispatcher]
  -[HMClientConnection initWithNoValidation]
  -[HMClientConnection xpcClient]
  -[HMClientConnection _reportResultsTohandler:]
  -[HMClientConnection _reportIntentResultTohandler:]
  -[HMClientConnection sendSiriCommand:completionHandler:]
  -[HMClientConnection sendIntentRequestCommand:withPayload:completionHandler:]
  -[HMClientConnection requestSiriSyncDataWithValidity:completion:]
  -[HMClientConnection setXpcClient:]


HMRemoteLoginHandler : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver, NSSecureCoding, HMObjectMerge>
 @property  _HMContext *context
 @property  NSUUID *uuid
 @property  HMAccessory *accessory
 @property  NSString *currentSessionID
 @property  BOOL controllable
 @property  ACAccount *loggedInAccount
 @property  BOOL sessionInProgress
 @property  HMRemoteLoginAnisetteDataProvider *anisetteDataProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[HMRemoteLoginHandler supportsSecureCoding]

  // instance methods
  -[HMRemoteLoginHandler init]
  -[HMRemoteLoginHandler encodeWithCoder:]
  -[HMRemoteLoginHandler initWithCoder:]
  -[HMRemoteLoginHandler .cxx_destruct]
  -[HMRemoteLoginHandler uuid]
  -[HMRemoteLoginHandler context]
  -[HMRemoteLoginHandler uniqueIdentifier]
  -[HMRemoteLoginHandler setContext:]
  -[HMRemoteLoginHandler accessory]
  -[HMRemoteLoginHandler messageTargetUUID]
  -[HMRemoteLoginHandler messageReceiveQueue]
  -[HMRemoteLoginHandler loggedInAccount]
  -[HMRemoteLoginHandler updateLoggedInAccount:completionHandler:]
  -[HMRemoteLoginHandler anisetteDataProvider]
  -[HMRemoteLoginHandler _mergeWithNewObject:operations:]
  -[HMRemoteLoginHandler messageDestination]
  -[HMRemoteLoginHandler isControllable]
  -[HMRemoteLoginHandler registerForMessages]
  -[HMRemoteLoginHandler _configureWithContext:]
  -[HMRemoteLoginHandler _handleRemoteLoginAccountUpdated:]
  -[HMRemoteLoginHandler setLoggedInAccount:]
  -[HMRemoteLoginHandler currentSessionID]
  -[HMRemoteLoginHandler _callAccountUpdateDelegate:]
  -[HMRemoteLoginHandler _companionLoginWithAccount:completion:]
  -[HMRemoteLoginHandler _handleLoginResponse:error:completion:]
  -[HMRemoteLoginHandler setCurrentSessionID:]
  -[HMRemoteLoginHandler _queryProxiedDevice:]
  -[HMRemoteLoginHandler _handleQueryProxiedDeviceResponse:error:completion:]
  -[HMRemoteLoginHandler _proxyLoginWithAuthResults:completion:]
  -[HMRemoteLoginHandler _signout:]
  -[HMRemoteLoginHandler _handleRemoteLoginSignoutResponse:error:completion:]
  -[HMRemoteLoginHandler isSessionInProgress]
  -[HMRemoteLoginHandler companionLoginWithAccount:completion:]
  -[HMRemoteLoginHandler queryProxiedDevice:]
  -[HMRemoteLoginHandler proxyLoginWithAuthResults:completion:]
  -[HMRemoteLoginHandler signout:]


HMPendingRequests : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *contextLists

  // instance methods
  -[HMPendingRequests init]
  -[HMPendingRequests .cxx_destruct]
  -[HMPendingRequests addCompletionBlock:forIdentifier:]
  -[HMPendingRequests removeCompletionBlockForIdentifier:]
  -[HMPendingRequests removeEventForIdentifier:]
  -[HMPendingRequests addEvent:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests addEvents:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests removeEventsForIdentifier:]
  -[HMPendingRequests retrieveCompletionBlockForIdentifier:]
  -[HMPendingRequests removeTriggerForIdentifier:]
  -[HMPendingRequests removeAccessoryForIdentifier:]
  -[HMPendingRequests removeAccessoryDescriptionForIdentifier:]
  -[HMPendingRequests removeProgressBlockForIdentifier:]
  -[HMPendingRequests retrieveAccessoryDescriptionForIdentifier:]
  -[HMPendingRequests retrieveProgressBlockForIdentifier:]
  -[HMPendingRequests addAccessory:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests addAccessoryDescription:progressBlock:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests addTrigger:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests contextLists]
  -[HMPendingRequests _addRequest:ofType:forIdentifier:]
  -[HMPendingRequests _retrieveRequestOfType:forIdentifier:remove:]
  -[HMPendingRequests addRequest:ofType:forIdentifier:]
  -[HMPendingRequests removeRequestOfType:forIdentifier:]
  -[HMPendingRequests retrieveRequestOfType:forIdentifier:]
  -[HMPendingRequests addAction:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests removeActionForIdentifier:]
  -[HMPendingRequests addApplicationData:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests removeApplicationDataForIdentifier:]
  -[HMPendingRequests addProgressHandler:forAccessoryIdentifier:]
  -[HMPendingRequests addMediaSystemBuilder:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests removeMediaSystemBuilderForIdentifier:]
  -[HMPendingRequests setContextLists:]


HMZone : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver, NSSecureCoding, HMObjectMerge>
 @property  _HMContext *context
 @property  HMMutableArray *currentRooms
 @property  NSUUID *uuid
 @property  HMHome *home
 @property  NSString *name
 @property  NSArray *rooms
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMZone supportsSecureCoding]

  // instance methods
  -[HMZone init]
  -[HMZone dealloc]
  -[HMZone name]
  -[HMZone _invalidate]
  -[HMZone encodeWithCoder:]
  -[HMZone initWithCoder:]
  -[HMZone .cxx_destruct]
  -[HMZone setName:]
  -[HMZone uuid]
  -[HMZone context]
  -[HMZone uniqueIdentifier]
  -[HMZone setUuid:]
  -[HMZone setContext:]
  -[HMZone home]
  -[HMZone setHome:]
  -[HMZone messageTargetUUID]
  -[HMZone messageReceiveQueue]
  -[HMZone rooms]
  -[HMZone _mergeWithNewObject:operations:]
  -[HMZone _registerNotificationHandlers]
  -[HMZone __configureWithContext:home:]
  -[HMZone _unconfigure]
  -[HMZone _updateName:completionHandler:]
  -[HMZone updateName:completionHandler:]
  -[HMZone initWithName:uuid:]
  -[HMZone currentRooms]
  -[HMZone roomWithUUID:]
  -[HMZone setCurrentRooms:]
  -[HMZone _removeRoom:completionHandler:]
  -[HMZone _removeRoom:]
  -[HMZone removeRoom:completionHandler:]
  -[HMZone _addRoom:completionHandler:]
  -[HMZone _handleRoomAddedNotification:]
  -[HMZone _handleRoomRemovedNotification:]
  -[HMZone _handleZoneRenamedNotification:]
  -[HMZone addRoom:completionHandler:]


HMUser : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, HMFMessageReceiver, HMSettingsContainer, NSSecureCoding, HMObjectMerge>
 @property  _HMContext *context
 @property  NSString *name
 @property  NSString *userID
 @property  HMFPairingIdentity *pairingIdentity
 @property  <HMUserDelegatePrivate> *delegate
 @property  HMSettingsController *settingsController
 @property  HMSettingsController *privateSettingsController
 @property  HMHomeAccessControl *homeAccessControl
 @property  HMAssistantAccessControl *assistantAccessControl
 @property  HMMediaContentProfileAccessControl *mediaContentProfileAccessControl
 @property  NSUUID *uuid
 @property  HMHome *home
 @property  BOOL currentUser
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  HMSettings *settings
 @property  HMSettings *privateSettings

  // class methods
  +[HMUser supportsSecureCoding]
  +[HMUser logCategory]

  // instance methods
  -[HMUser init]
  -[HMUser dealloc]
  -[HMUser name]
  -[HMUser encodeWithCoder:]
  -[HMUser initWithCoder:]
  -[HMUser delegate]
  -[HMUser setDelegate:]
  -[HMUser userID]
  -[HMUser .cxx_destruct]
  -[HMUser setName:]
  -[HMUser uuid]
  -[HMUser context]
  -[HMUser uniqueIdentifier]
  -[HMUser setContext:]
  -[HMUser setUserID:]
  -[HMUser home]
  -[HMUser settings]
  -[HMUser setCurrentUser:]
  -[HMUser isCurrentUser]
  -[HMUser setHome:]
  -[HMUser pairingIdentityWithCompletionHandler:]
  -[HMUser assistantAccessControlForHome:]
  -[HMUser logIdentifier]
  -[HMUser pairingIdentity]
  -[HMUser messageTargetUUID]
  -[HMUser messageReceiveQueue]
  -[HMUser updateAssistantAccessControl:forHome:completionHandler:]
  -[HMUser userSettingsForHome:]
  -[HMUser privateSettings]
  -[HMUser _mergeWithNewObject:operations:]
  -[HMUser updatePresenceAuthorizationStatus:completionHandler:]
  -[HMUser _registerNotificationHandlers]
  -[HMUser __configureWithContext:home:]
  -[HMUser _unconfigure]
  -[HMUser messageDestination]
  -[HMUser initWithUserID:name:uuid:home:]
  -[HMUser _mergeWithNewAccessoryInvitations:operations:]
  -[HMUser mergePendingAccessoryInvitationsWithOutgoingInvitation:operations:]
  -[HMUser updateHomeAccessControl:remoteAccess:camerasAccess:]
  -[HMUser initWithUserID:name:uuid:home:homeAccessControl:]
  -[HMUser setPendingAccessoryInvitationsWithOutgoingInvitation:]
  -[HMUser homeAccessControl]
  -[HMUser sendClientShareURL:shareToken:containerID:fromUser:completion:]
  -[HMUser fetchShareLookupInfo:]
  -[HMUser settingsController]
  -[HMUser privateSettingsController]
  -[HMUser _handleUpdatedAssistantAccessControl:]
  -[HMUser _handleMultiUserStatusChangedNotification:]
  -[HMUser setAssistantAccessControl:]
  -[HMUser assistantAccessControl]
  -[HMUser mediaContentProfileAccessControl]
  -[HMUser setMediaContentProfileAccessControl:]
  -[HMUser _filterAccessoryInvitationsFromOutgoingInvitation:]
  -[HMUser _updatePresenceAuthorizationStatus:completionHandler:]
  -[HMUser setPairingIdentity:]
  -[HMUser pendingAccessoryInvitations]
  -[HMUser setHomeAccessControl:]
  -[HMUser mediaContentProfileAccessControlForHome:]
  -[HMUser updateMediaContentProfileAccessControl:forHome:completionHandler:]


HMCameraSource : NSObject /usr/lib/libSystem.B.dylib
 @property  _HMCameraSource *source

  // instance methods
  -[HMCameraSource setSource:]
  -[HMCameraSource .cxx_destruct]
  -[HMCameraSource source]
  -[HMCameraSource aspectRatio]
  -[HMCameraSource initWithSource:]


HMPBMetadataCharacteristic : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasType
 @property  NSString *type
 @property  BOOL hasDesc
 @property  NSString *desc

  // instance methods
  -[HMPBMetadataCharacteristic isEqual:]
  -[HMPBMetadataCharacteristic copyWithZone:]
  -[HMPBMetadataCharacteristic type]
  -[HMPBMetadataCharacteristic setType:]
  -[HMPBMetadataCharacteristic .cxx_destruct]
  -[HMPBMetadataCharacteristic dictionaryRepresentation]
  -[HMPBMetadataCharacteristic writeTo:]
  -[HMPBMetadataCharacteristic mergeFrom:]
  -[HMPBMetadataCharacteristic readFrom:]
  -[HMPBMetadataCharacteristic copyTo:]
  -[HMPBMetadataCharacteristic hasType]
  -[HMPBMetadataCharacteristic desc]
  -[HMPBMetadataCharacteristic setDesc:]
  -[HMPBMetadataCharacteristic hasDesc]


_HMContext : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  NSObject<OS_dispatch_queue> *queue
 @property  HMPendingRequests *pendingRequests
 @property  HMDelegateCaller *delegateCaller
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMXPCClient *messageTransport

  // class methods
  +[_HMContext contextWithName:]
  +[_HMContext contextWithName:delegateCaller:]

  // instance methods
  -[_HMContext init]
  -[_HMContext name]
  -[_HMContext queue]
  -[_HMContext .cxx_destruct]
  -[_HMContext pendingRequests]
  -[_HMContext delegateCaller]
  -[_HMContext messageDispatcher]
  -[_HMContext subcontextWithName:]
  -[_HMContext messageTransport]
  -[_HMContext initWithName:pendingRequests:delegateCaller:messageDispatcher:]


HMAction : NSObject /usr/lib/libSystem.B.dylib <HMObjectMerge, NSSecureCoding, NSCopying>
 @property  _HMContext *context
 @property  unsigned long type
 @property  NSUUID *uuid
 @property  HMActionSet *actionSet
 @property  BOOL valid
 @property  BOOL requiresDeviceUnlock
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAction supportsSecureCoding]
  +[HMAction _actionWithInfo:home:]

  // instance methods
  -[HMAction init]
  -[HMAction copyWithZone:]
  -[HMAction _invalidate]
  -[HMAction type]
  -[HMAction isValid]
  -[HMAction encodeWithCoder:]
  -[HMAction initWithCoder:]
  -[HMAction .cxx_destruct]
  -[HMAction uuid]
  -[HMAction context]
  -[HMAction uniqueIdentifier]
  -[HMAction setUuid:]
  -[HMAction setContext:]
  -[HMAction initWithUUID:]
  -[HMAction actionType]
  -[HMAction _handleUpdates:]
  -[HMAction _serializeForAdd]
  -[HMAction _mergeWithNewObject:operations:]
  -[HMAction requiresDeviceUnlock]
  -[HMAction encodeAsProtoBuf]
  -[HMAction setActionSet:]
  -[HMAction actionSet]
  -[HMAction __configureWithContext:actionSet:]


HMCameraClipVideoHLSPlaylistGenerator : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableString *hlsPlaylistString
 @property  NSURL *url
 @property  NSData *hlsPlaylist

  // class methods
  +[HMCameraClipVideoHLSPlaylistGenerator _hlsPlaylistEncryptionMethodNameForScheme:]

  // instance methods
  -[HMCameraClipVideoHLSPlaylistGenerator .cxx_destruct]
  -[HMCameraClipVideoHLSPlaylistGenerator url]
  -[HMCameraClipVideoHLSPlaylistGenerator finish]
  -[HMCameraClipVideoHLSPlaylistGenerator hlsPlaylist]
  -[HMCameraClipVideoHLSPlaylistGenerator hlsPlaylistString]
  -[HMCameraClipVideoHLSPlaylistGenerator addSegment:]
  -[HMCameraClipVideoHLSPlaylistGenerator initWithClip:url:]
  -[HMCameraClipVideoHLSPlaylistGenerator addSegments:]


HMCameraClipManager : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, HMFMessageReceiver>
 @property  HMFUnfairLock *lock
 @property  _HMContext *context
 @property  NSUUID *profileUniqueIdentifier
 @property  NSNotificationCenter *notificationCenter
 @property  NSMutableDictionary *clipsByFetchUUID
 @property  NSMutableDictionary *videoAssetContextsByClipUUID
 @property  NSHashTable *observers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMCameraClipManager logCategory]

  // instance methods
  -[HMCameraClipManager dealloc]
  -[HMCameraClipManager lock]
  -[HMCameraClipManager .cxx_destruct]
  -[HMCameraClipManager addObserver:]
  -[HMCameraClipManager removeObserver:]
  -[HMCameraClipManager context]
  -[HMCameraClipManager notificationCenter]
  -[HMCameraClipManager observers]
  -[HMCameraClipManager configure]
  -[HMCameraClipManager logIdentifier]
  -[HMCameraClipManager messageTargetUUID]
  -[HMCameraClipManager messageReceiveQueue]
  -[HMCameraClipManager unsubscribe]
  -[HMCameraClipManager profileUniqueIdentifier]
  -[HMCameraClipManager fetchPosterFramesAssetContextForClip:completion:]
  -[HMCameraClipManager fetchVideoSegmentsAssetContextForClip:completion:]
  -[HMCameraClipManager initWithContext:profileUniqueIdentifier:]
  -[HMCameraClipManager deleteAllClipsWithCompletionHandler:]
  -[HMCameraClipManager initWithContext:profileUniqueIdentifier:notificationCenter:]
  -[HMCameraClipManager subscribe]
  -[HMCameraClipManager videoAssetContextsByClipUUID]
  -[HMCameraClipManager clipForResponsePayload:]
  -[HMCameraClipManager finishFetchingClipsForFetchUUID:]
  -[HMCameraClipManager prepareToFetchClipsForFetchUUID:]
  -[HMCameraClipManager handleDidChangeClipsMessage:]
  -[HMCameraClipManager handleDidFetchClipsMessage:]
  -[HMCameraClipManager handleDaemonReconnectedNotification:]
  -[HMCameraClipManager assetContextForResponsePayload:]
  -[HMCameraClipManager videoSegmentsAssetContextForClip:]
  -[HMCameraClipManager clipsByFetchUUID]
  -[HMCameraClipManager clipsForMessage:withKey:]
  -[HMCameraClipManager updateVideoSegmentsAssetContextForClip:]
  -[HMCameraClipManager orderedClipsForMessage:withKey:]
  -[HMCameraClipManager handleFetchedClips:forFetchUUID:]
  -[HMCameraClipManager fetchClipWithUUID:completion:]
  -[HMCameraClipManager fetchAllClipsWithCompletion:]
  -[HMCameraClipManager fetchClipForSignificantEventWithUUID:completion:]
  -[HMCameraClipManager fetchClipsWithDateInterval:limit:completion:]
  -[HMCameraClipManager fetchClipsBeforeDate:withLimit:completion:]
  -[HMCameraClipManager fetchClipsAfterDate:withLimit:completion:]
  -[HMCameraClipManager fetchCountOfAllClipsWithCompletion:]
  -[HMCameraClipManager fetchCountOfClipsWithDateInterval:completion:]
  -[HMCameraClipManager fetchCountOfClipsBeforeDate:completion:]
  -[HMCameraClipManager fetchCountOfClipsAfterDate:completion:]
  -[HMCameraClipManager deleteClipWithUUID:completion:]
  -[HMCameraClipManager importClipsWithImportData:completion:]


HMAccessoryNetworkProtectionGroup : NSObject /usr/lib/libSystem.B.dylib <HMObjectMerge, NSSecureCoding>
 @property  HMHome *home
 @property  NSUUID *uuid
 @property  NSString *manufacturer
 @property  HMAccessoryCategory *category
 @property  long long targetProtectionMode
 @property  NSUUID *uniqueIdentifier
 @property  NSArray *accessories
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessoryNetworkProtectionGroup supportsSecureCoding]

  // instance methods
  -[HMAccessoryNetworkProtectionGroup encodeWithCoder:]
  -[HMAccessoryNetworkProtectionGroup initWithCoder:]
  -[HMAccessoryNetworkProtectionGroup .cxx_destruct]
  -[HMAccessoryNetworkProtectionGroup category]
  -[HMAccessoryNetworkProtectionGroup setCategory:]
  -[HMAccessoryNetworkProtectionGroup uuid]
  -[HMAccessoryNetworkProtectionGroup uniqueIdentifier]
  -[HMAccessoryNetworkProtectionGroup home]
  -[HMAccessoryNetworkProtectionGroup manufacturer]
  -[HMAccessoryNetworkProtectionGroup setManufacturer:]
  -[HMAccessoryNetworkProtectionGroup setHome:]
  -[HMAccessoryNetworkProtectionGroup accessories]
  -[HMAccessoryNetworkProtectionGroup _mergeWithNewObject:operations:]
  -[HMAccessoryNetworkProtectionGroup targetProtectionMode]
  -[HMAccessoryNetworkProtectionGroup setTargetProtectionMode:]
  -[HMAccessoryNetworkProtectionGroup _configureWithHome:]
  -[HMAccessoryNetworkProtectionGroup initWithUUID:manufacturer:category:protectionMode:]
  -[HMAccessoryNetworkProtectionGroup updateProtectionMode:completion:]


HMSoftwareUpdateDocumentation : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  HMHTMLDocument *releaseNotesSummary
 @property  HMHTMLDocument *releaseNotes
 @property  HMHTMLDocument *licenseAgreement
 @property  NSNumber *licenseAgreementVersion

  // class methods
  +[HMSoftwareUpdateDocumentation supportsSecureCoding]

  // instance methods
  -[HMSoftwareUpdateDocumentation init]
  -[HMSoftwareUpdateDocumentation encodeWithCoder:]
  -[HMSoftwareUpdateDocumentation initWithCoder:]
  -[HMSoftwareUpdateDocumentation .cxx_destruct]
  -[HMSoftwareUpdateDocumentation releaseNotes]
  -[HMSoftwareUpdateDocumentation licenseAgreement]
  -[HMSoftwareUpdateDocumentation initWithReleaseNotesSummary:releaseNotes:licenseAgreement:licenseAgreementVersion:]
  -[HMSoftwareUpdateDocumentation releaseNotesSummary]
  -[HMSoftwareUpdateDocumentation licenseAgreementVersion]


HMUserCloudShareManager : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver>
 @property  _HMContext *context
 @property  NSUUID *identifier
 @property  BOOL registered
 @property  NSArray *containerIDs
 @property  <HMUserCloudShareManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMUserCloudShareManager logCategory]

  // instance methods
  -[HMUserCloudShareManager init]
  -[HMUserCloudShareManager dealloc]
  -[HMUserCloudShareManager isRegistered]
  -[HMUserCloudShareManager delegate]
  -[HMUserCloudShareManager setDelegate:]
  -[HMUserCloudShareManager .cxx_destruct]
  -[HMUserCloudShareManager identifier]
  -[HMUserCloudShareManager context]
  -[HMUserCloudShareManager initWithContext:]
  -[HMUserCloudShareManager setRegistered:]
  -[HMUserCloudShareManager configure]
  -[HMUserCloudShareManager reconnect]
  -[HMUserCloudShareManager setContainerIDs:]
  -[HMUserCloudShareManager containerIDs]
  -[HMUserCloudShareManager messageTargetUUID]
  -[HMUserCloudShareManager messageReceiveQueue]
  -[HMUserCloudShareManager messageDestination]
  -[HMUserCloudShareManager __registerForMessages]
  -[HMUserCloudShareManager _handleDidReceiveShare:]
  -[HMUserCloudShareManager _registerWithCompletion:]
  -[HMUserCloudShareManager registerForContainerIDs:completion:]


_HMCameraUserSettings : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, HMFLogging>
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long supportedFeatures
 @property  unsigned long accessModeAtHome
 @property  unsigned long accessModeNotAtHome
 @property  unsigned long currentAccessMode
 @property  unsigned long recordingEventTriggers
 @property  BOOL snapshotsAllowed
 @property  BOOL accessModeIndicatorEnabled
 @property  BOOL nightVisionModeEnabled
 @property  BOOL recordingAudioEnabled
 @property  BOOL accessModeChangeNotificationEnabled
 @property  BOOL cameraManuallyDisabled
 @property  HMCameraBulletinBoardSmartNotification *smartNotificationBulletin
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HMCameraUserSettings supportsSecureCoding]
  +[_HMCameraUserSettings logCategory]

  // instance methods
  -[_HMCameraUserSettings encodeWithCoder:]
  -[_HMCameraUserSettings initWithCoder:]
  -[_HMCameraUserSettings .cxx_destruct]
  -[_HMCameraUserSettings uniqueIdentifier]
  -[_HMCameraUserSettings logIdentifier]
  -[_HMCameraUserSettings supportedFeatures]
  -[_HMCameraUserSettings smartNotificationBulletin]
  -[_HMCameraUserSettings accessModeAtHome]
  -[_HMCameraUserSettings accessModeNotAtHome]
  -[_HMCameraUserSettings currentAccessMode]
  -[_HMCameraUserSettings recordingEventTriggers]
  -[_HMCameraUserSettings isAccessModeIndicatorEnabled]
  -[_HMCameraUserSettings areSnapshotsAllowed]
  -[_HMCameraUserSettings isNightVisionModeEnabled]
  -[_HMCameraUserSettings isRecordingAudioEnabled]
  -[_HMCameraUserSettings isAccessModeChangeNotificationEnabled]
  -[_HMCameraUserSettings isCameraManuallyDisabled]
  -[_HMCameraUserSettings initWithUUID:supportedFeatures:accessModeAtHome:accessModeNotAtHome:currentAccessMode:recordingEventTriggers:snapshotsAllowed:accessModeIndicatorEnabled:nightVisionModeEnabled:recordingAudioEnabled:accessModeChangeNotificationEnabled:cameraManuallyDisabled:smartNotification:]


HMPresenceEvent : HMEvent <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  NSString *presenceType
 @property  HMPresenceEventActivation *activation
 @property  unsigned long activationGranularity
 @property  HMMutableArray *observedUsers
 @property  unsigned long presenceEventType
 @property  unsigned long presenceUserType

  // class methods
  +[HMPresenceEvent supportsSecureCoding]
  +[HMPresenceEvent createWithDictionary:home:]
  +[HMPresenceEvent isSupportedForHome:]
  +[HMPresenceEvent users:home:presenceType:]

  // instance methods
  -[HMPresenceEvent copyWithZone:]
  -[HMPresenceEvent mutableCopyWithZone:]
  -[HMPresenceEvent encodeWithCoder:]
  -[HMPresenceEvent initWithCoder:]
  -[HMPresenceEvent .cxx_destruct]
  -[HMPresenceEvent users]
  -[HMPresenceEvent _serializeForAdd]
  -[HMPresenceEvent _handleEventUpdatedNotification:]
  -[HMPresenceEvent presenceEventType]
  -[HMPresenceEvent _update:completionHandler:]
  -[HMPresenceEvent initWithDict:presenceType:users:activation:]
  -[HMPresenceEvent initWithPresenceType:users:]
  -[HMPresenceEvent initWithDict:presenceType:users:activationGranularity:]
  -[HMPresenceEvent initWithPresenceEventType:presenceUserType:users:]
  -[HMPresenceEvent presenceType]
  -[HMPresenceEvent activation]
  -[HMPresenceEvent activationGranularity]
  -[HMPresenceEvent presenceUserType]
  -[HMPresenceEvent setPresenceType:]
  -[HMPresenceEvent setActivation:]
  -[HMPresenceEvent observedUsers]
  -[HMPresenceEvent _updatePresenceType:completionHandler:]
  -[HMPresenceEvent _updateUsers:completionHandler:]
  -[HMPresenceEvent initWithPresenceType:]
  -[HMPresenceEvent initWithPresenceEventType:presenceUserType:]
  -[HMPresenceEvent setPresenceEventType:]
  -[HMPresenceEvent setPresenceUserType:]
  -[HMPresenceEvent updatePresenceType:completionHandler:]
  -[HMPresenceEvent updateUsers:completionHandler:]


HMMutablePresenceEvent : HMPresenceEvent
 @property  NSString *presenceType
 @property  NSArray *users
 @property  unsigned long presenceEventType
 @property  unsigned long presenceUserType


HMMediaSystemRole : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned long type

  // class methods
  +[HMMediaSystemRole supportsSecureCoding]
  +[HMMediaSystemRole leftRole]
  +[HMMediaSystemRole rightRole]

  // instance methods
  -[HMMediaSystemRole isEqual:]
  -[HMMediaSystemRole type]
  -[HMMediaSystemRole encodeWithCoder:]
  -[HMMediaSystemRole initWithCoder:]
  -[HMMediaSystemRole initWithDictionary:]
  -[HMMediaSystemRole serialize]
  -[HMMediaSystemRole initWithRole:]


HMUserPresenceCompute : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *number
 @property  unsigned long value

  // class methods
  +[HMUserPresenceCompute computeWithMessage:]
  +[HMUserPresenceCompute computeWithCoder:]
  +[HMUserPresenceCompute computeWithNumber:]
  +[HMUserPresenceCompute computeWithValue:]
  +[HMUserPresenceCompute computeWithDict:]

  // instance methods
  -[HMUserPresenceCompute isEqual:]
  -[HMUserPresenceCompute value]
  -[HMUserPresenceCompute number]
  -[HMUserPresenceCompute initWithNumber:]
  -[HMUserPresenceCompute addToCoder:]
  -[HMUserPresenceCompute addToPayload:]


HMCameraClipEncryptionManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *key

  // instance methods
  -[HMCameraClipEncryptionManager init]
  -[HMCameraClipEncryptionManager key]
  -[HMCameraClipEncryptionManager .cxx_destruct]
  -[HMCameraClipEncryptionManager initWithKey:]
  -[HMCameraClipEncryptionManager encryptedDataContextFromData:]


HMSettingConstraint : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSUUID *identifier
 @property  long long type
 @property  <NSCopying><NSSecureCoding> *value

  // class methods
  +[HMSettingConstraint supportsSecureCoding]
  +[HMSettingConstraint shortDescription]
  +[HMSettingConstraint supportedValueClasses]

  // instance methods
  -[HMSettingConstraint init]
  -[HMSettingConstraint isEqual:]
  -[HMSettingConstraint copyWithZone:]
  -[HMSettingConstraint type]
  -[HMSettingConstraint encodeWithCoder:]
  -[HMSettingConstraint initWithCoder:]
  -[HMSettingConstraint .cxx_destruct]
  -[HMSettingConstraint identifier]
  -[HMSettingConstraint value]
  -[HMSettingConstraint shortDescription]
  -[HMSettingConstraint descriptionWithPointer:]
  -[HMSettingConstraint initWithType:value:]


HMHTMLDocument : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *stringValue
 @property  NSAttributedString *attributedString

  // class methods
  +[HMHTMLDocument supportsSecureCoding]

  // instance methods
  -[HMHTMLDocument isEqual:]
  -[HMHTMLDocument copyWithZone:]
  -[HMHTMLDocument encodeWithCoder:]
  -[HMHTMLDocument initWithCoder:]
  -[HMHTMLDocument stringValue]
  -[HMHTMLDocument .cxx_destruct]
  -[HMHTMLDocument initWithString:]
  -[HMHTMLDocument initWithData:error:]
  -[HMHTMLDocument initWithURL:error:]
  -[HMHTMLDocument attributedString]
  -[HMHTMLDocument validateAndReturnError:]


__HMHomeDataSyncOperation : HMFOperation /System/Library/Frameworks/Foundation.framework/Foundation
 @property  HMHomeManager *manager
 @property  BOOL refresh

  // instance methods
  -[__HMHomeDataSyncOperation .cxx_destruct]
  -[__HMHomeDataSyncOperation main]
  -[__HMHomeDataSyncOperation manager]
  -[__HMHomeDataSyncOperation isRefresh]
  -[__HMHomeDataSyncOperation initWithHomeManager:]
  -[__HMHomeDataSyncOperation setRefresh:]
  -[__HMHomeDataSyncOperation initWithHomeManager:timeout:]


HMShortcutAction : HMAction
 @property  WFHomeWorkflow *shortcut

  // class methods
  +[HMShortcutAction supportsSecureCoding]
  +[HMShortcutAction isSupportedForHome:]
  +[HMShortcutAction _actionWithInfo:home:]

  // instance methods
  -[HMShortcutAction type]
  -[HMShortcutAction isValid]
  -[HMShortcutAction initWithCoder:]
  -[HMShortcutAction .cxx_destruct]
  -[HMShortcutAction shortcut]
  -[HMShortcutAction initWithShortcut:]
  -[HMShortcutAction _serializeForAdd]
  -[HMShortcutAction requiresDeviceUnlock]


HMAccessControl : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned long cachedHash
 @property  HMUser *user

  // class methods
  +[HMAccessControl supportsSecureCoding]

  // instance methods
  -[HMAccessControl init]
  -[HMAccessControl isEqual:]
  -[HMAccessControl user]
  -[HMAccessControl encodeWithCoder:]
  -[HMAccessControl initWithCoder:]
  -[HMAccessControl .cxx_destruct]
  -[HMAccessControl initWithUser:]
  -[HMAccessControl setUser:]
  -[HMAccessControl cachedHash]


HMHomeInvitationData : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  long long invitationState

  // class methods
  +[HMHomeInvitationData supportsSecureCoding]
  +[HMHomeInvitationData homeInvitationStateDescription:]

  // instance methods
  -[HMHomeInvitationData encodeWithCoder:]
  -[HMHomeInvitationData initWithCoder:]
  -[HMHomeInvitationData .cxx_destruct]
  -[HMHomeInvitationData identifier]
  -[HMHomeInvitationData startDate]
  -[HMHomeInvitationData endDate]
  -[HMHomeInvitationData setEndDate:]
  -[HMHomeInvitationData invitationState]
  -[HMHomeInvitationData setInvitationState:]
  -[HMHomeInvitationData initWithInvitationState:invitationIdentifier:expiryDate:]


HMOutgoingHomeInvitationData : HMHomeInvitationData
 @property  NSString *inviteeName
 @property  NSString *inviteeUserID
 @property  NSUUID *inviteeUUID

  // class methods
  +[HMOutgoingHomeInvitationData supportsSecureCoding]

  // instance methods
  -[HMOutgoingHomeInvitationData encodeWithCoder:]
  -[HMOutgoingHomeInvitationData initWithCoder:]
  -[HMOutgoingHomeInvitationData .cxx_destruct]
  -[HMOutgoingHomeInvitationData inviteeUserID]
  -[HMOutgoingHomeInvitationData inviteeName]
  -[HMOutgoingHomeInvitationData inviteeUUID]
  -[HMOutgoingHomeInvitationData initWithUUID:inviteeUserID:inviteeName:invitationState:expiryDate:]
  -[HMOutgoingHomeInvitationData setInviteeName:]


HMIncomingHomeInvitationData : HMHomeInvitationData
 @property  NSString *inviterName
 @property  NSString *inviterUserID
 @property  NSString *homeName
 @property  NSUUID *homeUUID
 @property  NSUUID *inviterUUID

  // class methods
  +[HMIncomingHomeInvitationData supportsSecureCoding]

  // instance methods
  -[HMIncomingHomeInvitationData encodeWithCoder:]
  -[HMIncomingHomeInvitationData initWithCoder:]
  -[HMIncomingHomeInvitationData .cxx_destruct]
  -[HMIncomingHomeInvitationData homeUUID]
  -[HMIncomingHomeInvitationData homeName]
  -[HMIncomingHomeInvitationData inviterUserID]
  -[HMIncomingHomeInvitationData inviterName]
  -[HMIncomingHomeInvitationData inviterUUID]
  -[HMIncomingHomeInvitationData initWithInviterUserID:invitationIdentifier:inviterName:invitationState:homeName:homeUUID:expiryDate:]
  -[HMIncomingHomeInvitationData setInviterName:]


HMMediaSystemBuilder : NSObject /usr/lib/libSystem.B.dylib <HMFLogging>
 @property  _HMContext *context
 @property  NSUUID *uuid
 @property  NSUUID *mediaSystemUUID
 @property  NSString *builderSessionID
 @property  HMHome *home
 @property  HMMediaSystem *mediaSystem
 @property  HMMutableArray *componentsArray
 @property  NSString *name
 @property  NSString *configuredName
 @property  NSArray *components
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMMediaSystemBuilder logCategory]
  +[HMMediaSystemBuilder supportsMediaSystem:]
  +[HMMediaSystemBuilder canSupportMediaSystem:]

  // instance methods
  -[HMMediaSystemBuilder init]
  -[HMMediaSystemBuilder dealloc]
  -[HMMediaSystemBuilder name]
  -[HMMediaSystemBuilder .cxx_destruct]
  -[HMMediaSystemBuilder setName:]
  -[HMMediaSystemBuilder uuid]
  -[HMMediaSystemBuilder context]
  -[HMMediaSystemBuilder components]
  -[HMMediaSystemBuilder setContext:]
  -[HMMediaSystemBuilder home]
  -[HMMediaSystemBuilder setComponents:]
  -[HMMediaSystemBuilder logIdentifier]
  -[HMMediaSystemBuilder initWithHome:]
  -[HMMediaSystemBuilder commitWithCompletionHandler:]
  -[HMMediaSystemBuilder componentsArray]
  -[HMMediaSystemBuilder configuredName]
  -[HMMediaSystemBuilder setConfiguredName:]
  -[HMMediaSystemBuilder setComponentsArray:]
  -[HMMediaSystemBuilder _initializeContext]
  -[HMMediaSystemBuilder _commitWithCompletionHandler:]
  -[HMMediaSystemBuilder builderSessionID]
  -[HMMediaSystemBuilder setBuilderSessionID:]
  -[HMMediaSystemBuilder mediaSystemUUID]
  -[HMMediaSystemBuilder mediaSystem]
  -[HMMediaSystemBuilder _callCompletion:builderSessionID:error:response:]
  -[HMMediaSystemBuilder initWithMediaSystem:]


HMSetupAccessoryPayload : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *accessoryName
 @property  NSString *setupCode
 @property  NSString *setupID
 @property  NSNumber *categoryNumber
 @property  BOOL supportsIP
 @property  BOOL supportsWAC
 @property  BOOL supportsBTLE
 @property  BOOL paired
 @property  NSNumber *flags
 @property  NSURL *setupPayloadURL
 @property  HMAccessoryCategory *category

  // class methods
  +[HMSetupAccessoryPayload supportsSecureCoding]

  // instance methods
  -[HMSetupAccessoryPayload isEqual:]
  -[HMSetupAccessoryPayload copyWithZone:]
  -[HMSetupAccessoryPayload encodeWithCoder:]
  -[HMSetupAccessoryPayload initWithCoder:]
  -[HMSetupAccessoryPayload .cxx_destruct]
  -[HMSetupAccessoryPayload flags]
  -[HMSetupAccessoryPayload category]
  -[HMSetupAccessoryPayload accessoryName]
  -[HMSetupAccessoryPayload setFlags:]
  -[HMSetupAccessoryPayload paired]
  -[HMSetupAccessoryPayload setPaired:]
  -[HMSetupAccessoryPayload setAccessoryName:]
  -[HMSetupAccessoryPayload supportsIP]
  -[HMSetupAccessoryPayload supportsWAC]
  -[HMSetupAccessoryPayload supportsBTLE]
  -[HMSetupAccessoryPayload setupCode]
  -[HMSetupAccessoryPayload setupID]
  -[HMSetupAccessoryPayload categoryNumber]
  -[HMSetupAccessoryPayload setSetupCode:]
  -[HMSetupAccessoryPayload setupPayloadURL]
  -[HMSetupAccessoryPayload initWithSetupPayloadURL:error:]
  -[HMSetupAccessoryPayload setCategoryNumber:]
  -[HMSetupAccessoryPayload _parseSetupPayload:]
  -[HMSetupAccessoryPayload setSupportsIP:]
  -[HMSetupAccessoryPayload setSupportsBTLE:]
  -[HMSetupAccessoryPayload setSupportsWAC:]
  -[HMSetupAccessoryPayload setSetupID:]
  -[HMSetupAccessoryPayload setSetupPayloadURL:]
  -[HMSetupAccessoryPayload initWithSetupCode:]
  -[HMSetupAccessoryPayload initWithSetupPayload:]


HMMutableArray : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *internal
 @property  NSArray *array
 @property  unsigned long count

  // class methods
  +[HMMutableArray array]
  +[HMMutableArray arrayWithArray:]

  // instance methods
  -[HMMutableArray isEqual:]
  -[HMMutableArray count]
  -[HMMutableArray addObject:]
  -[HMMutableArray removeObject:]
  -[HMMutableArray initWithArray:]
  -[HMMutableArray array]
  -[HMMutableArray removeAllObjects]
  -[HMMutableArray containsObject:]
  -[HMMutableArray replaceObject:]
  -[HMMutableArray addObjectsFromArray:]
  -[HMMutableArray removeObjectsInArray:]
  -[HMMutableArray setArray:]
  -[HMMutableArray .cxx_destruct]
  -[HMMutableArray filteredArrayUsingPredicate:]
  -[HMMutableArray internal]
  -[HMMutableArray firstItemWithUUID:]
  -[HMMutableArray firstItemWithName:]
  -[HMMutableArray firstItemWithValue:forKey:]
  -[HMMutableArray addObjectIfNotPresent:]
  -[HMMutableArray itemsWithValue:forKey:]
  -[HMMutableArray setIfDifferent:]
  -[HMMutableArray firstItemWithUniqueIdentifier:]
  -[HMMutableArray firstItemWithInstanceID:]
  -[HMMutableArray firstItemWithCharacteristicType:]


HMDeviceSetupSession : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, HMFMessageReceiver>
 @property  _HMContext *context
 @property  BOOL open
 @property  <HMDeviceSetupSessionDelegate> *delegate
 @property  NSUUID *identifier
 @property  long long role
 @property  NSDictionary *userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDeviceSetupSession logCategory]
  +[HMDeviceSetupSession homeManagerDestination]

  // instance methods
  -[HMDeviceSetupSession init]
  -[HMDeviceSetupSession dealloc]
  -[HMDeviceSetupSession userInfo]
  -[HMDeviceSetupSession open]
  -[HMDeviceSetupSession close]
  -[HMDeviceSetupSession delegate]
  -[HMDeviceSetupSession role]
  -[HMDeviceSetupSession .cxx_destruct]
  -[HMDeviceSetupSession identifier]
  -[HMDeviceSetupSession setUserInfo:]
  -[HMDeviceSetupSession context]
  -[HMDeviceSetupSession isOpen]
  -[HMDeviceSetupSession setOpen:]
  -[HMDeviceSetupSession logIdentifier]
  -[HMDeviceSetupSession messageTargetUUID]
  -[HMDeviceSetupSession messageReceiveQueue]
  -[HMDeviceSetupSession _closeWithError:]
  -[HMDeviceSetupSession initWithRole:delegate:]
  -[HMDeviceSetupSession sendExchangeData:completionHandler:]
  -[HMDeviceSetupSession messageDestination]
  -[HMDeviceSetupSession __registerForMessages]
  -[HMDeviceSetupSession _handleDisconnection:]
  -[HMDeviceSetupSession __handleReceivedExchangeData:]
  -[HMDeviceSetupSession __handleClose:]
  -[HMDeviceSetupSession _handleOpenedSession]
  -[HMDeviceSetupSession __closeWithError:]
  -[HMDeviceSetupSession _reallySendExchangeData:completionHandler:]


HMAssistantAccessControl : HMAccessControl <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  BOOL enabled
 @property  BOOL allowUnauthenticatedRequests
 @property  NSArray *accessories

  // class methods
  +[HMAssistantAccessControl supportsSecureCoding]
  +[HMAssistantAccessControl shortDescription]
  +[HMAssistantAccessControl isAccessorySupported:]

  // instance methods
  -[HMAssistantAccessControl isEqual:]
  -[HMAssistantAccessControl copyWithZone:]
  -[HMAssistantAccessControl mutableCopyWithZone:]
  -[HMAssistantAccessControl options]
  -[HMAssistantAccessControl encodeWithCoder:]
  -[HMAssistantAccessControl initWithCoder:]
  -[HMAssistantAccessControl .cxx_destruct]
  -[HMAssistantAccessControl initWithUser:]
  -[HMAssistantAccessControl isEnabled]
  -[HMAssistantAccessControl shortDescription]
  -[HMAssistantAccessControl accessories]
  -[HMAssistantAccessControl descriptionWithPointer:]
  -[HMAssistantAccessControl allowUnauthenticatedRequests]


HMMutableAssistantAccessControl : HMAssistantAccessControl
 @property  BOOL enabled
 @property  BOOL allowUnauthenticatedRequests
 @property  NSArray *accessories

  // instance methods
  -[HMMutableAssistantAccessControl copyWithZone:]
  -[HMMutableAssistantAccessControl options]
  -[HMMutableAssistantAccessControl setEnabled:]
  -[HMMutableAssistantAccessControl setOptions:]
  -[HMMutableAssistantAccessControl isEnabled]
  -[HMMutableAssistantAccessControl accessories]
  -[HMMutableAssistantAccessControl addAccessory:]
  -[HMMutableAssistantAccessControl setAccessories:]
  -[HMMutableAssistantAccessControl removeAccessory:]
  -[HMMutableAssistantAccessControl allowUnauthenticatedRequests]
  -[HMMutableAssistantAccessControl setAllowUnauthenticatedRequests:]


HMActionSet : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver, NSSecureCoding, HMObjectMerge, HMMutableApplicationData>
 @property  NSDictionary *shortcutsDictionaryRepresentation
 @property  _HMContext *context
 @property  NSString *name
 @property  HMMutableArray *currentActions
 @property  HMHome *home
 @property  NSUUID *uuid
 @property  BOOL executionInProgress
 @property  NSSet *actions
 @property  BOOL executing
 @property  NSString *actionSetType
 @property  NSUUID *uniqueIdentifier
 @property  NSDate *lastExecutionDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  HMApplicationData *applicationData
 @property  NSUUID *applicationDataIdentifier

  // class methods
  +[HMActionSet supportsSecureCoding]
  +[HMActionSet actionSetFromProtoBuf:home:]
  +[HMActionSet allowedActionClasses]
  +[HMActionSet shortcutsComponentActionSet]

  // instance methods
  -[HMActionSet init]
  -[HMActionSet dealloc]
  -[HMActionSet name]
  -[HMActionSet _invalidate]
  -[HMActionSet encodeWithCoder:]
  -[HMActionSet initWithCoder:]
  -[HMActionSet .cxx_destruct]
  -[HMActionSet setName:]
  -[HMActionSet isExecuting]
  -[HMActionSet uuid]
  -[HMActionSet context]
  -[HMActionSet uniqueIdentifier]
  -[HMActionSet setContext:]
  -[HMActionSet actionSetType]
  -[HMActionSet home]
  -[HMActionSet actions]
  -[HMActionSet setHome:]
  -[HMActionSet applicationData]
  -[HMActionSet messageTargetUUID]
  -[HMActionSet messageReceiveQueue]
  -[HMActionSet updateApplicationData:completionHandler:]
  -[HMActionSet setApplicationData:]
  -[HMActionSet _mergeWithNewObject:operations:]
  -[HMActionSet requiresDeviceUnlock]
  -[HMActionSet encodeAsProtoBuf]
  -[HMActionSet shortcutsDictionaryRepresentation]
  -[HMActionSet initWithShortcutsDictionaryRepresentation:home:]
  -[HMActionSet _registerNotificationHandlers]
  -[HMActionSet __configureWithContext:home:]
  -[HMActionSet _unconfigure]
  -[HMActionSet _updateName:completionHandler:]
  -[HMActionSet updateName:completionHandler:]
  -[HMActionSet _updateAction:changes:completionHandler:]
  -[HMActionSet applicationDataIdentifier]
  -[HMActionSet initWithName:type:uuid:]
  -[HMActionSet currentActions]
  -[HMActionSet setCurrentActions:]
  -[HMActionSet _addAction:completionHandler:]
  -[HMActionSet _doAddAction:uuid:completionHandler:]
  -[HMActionSet _removeAction:completionHandler:]
  -[HMActionSet _doRemoveActionWithUUID:completionHandler:]
  -[HMActionSet setExecutionInProgress:]
  -[HMActionSet setLastExecutionDate:]
  -[HMActionSet _handleActionAddedNotification:]
  -[HMActionSet _handleActionRemovedNotification:]
  -[HMActionSet _handleActionUpdatedNotification:]
  -[HMActionSet _handleActionSetRenamedNotification:]
  -[HMActionSet _handleActionSetStartExecutionNotification:]
  -[HMActionSet _handleActionSetExecutedNotification:]
  -[HMActionSet executionInProgress]
  -[HMActionSet lastExecutionDate]
  -[HMActionSet addAction:completionHandler:]
  -[HMActionSet removeAction:completionHandler:]


HMPBMetadata : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasVersion
 @property  int version
 @property  NSMutableArray *hapCharacteristics
 @property  NSMutableArray *hapServices
 @property  NSMutableArray *hapCategories

  // class methods
  +[HMPBMetadata hapCharacteristicsType]
  +[HMPBMetadata hapServicesType]
  +[HMPBMetadata hapCategoriesType]

  // instance methods
  -[HMPBMetadata isEqual:]
  -[HMPBMetadata copyWithZone:]
  -[HMPBMetadata .cxx_destruct]
  -[HMPBMetadata version]
  -[HMPBMetadata dictionaryRepresentation]
  -[HMPBMetadata setVersion:]
  -[HMPBMetadata writeTo:]
  -[HMPBMetadata mergeFrom:]
  -[HMPBMetadata readFrom:]
  -[HMPBMetadata copyTo:]
  -[HMPBMetadata hasVersion]
  -[HMPBMetadata setHasVersion:]
  -[HMPBMetadata hapCharacteristicsCount]
  -[HMPBMetadata hapCharacteristics]
  -[HMPBMetadata hapServicesCount]
  -[HMPBMetadata hapServices]
  -[HMPBMetadata hapCategoriesCount]
  -[HMPBMetadata hapCategories]
  -[HMPBMetadata addHapCharacteristics:]
  -[HMPBMetadata addHapServices:]
  -[HMPBMetadata addHapCategories:]
  -[HMPBMetadata clearHapCharacteristics]
  -[HMPBMetadata hapCharacteristicsAtIndex:]
  -[HMPBMetadata clearHapServices]
  -[HMPBMetadata hapServicesAtIndex:]
  -[HMPBMetadata clearHapCategories]
  -[HMPBMetadata hapCategoriesAtIndex:]
  -[HMPBMetadata setHapCharacteristics:]
  -[HMPBMetadata setHapServices:]
  -[HMPBMetadata setHapCategories:]


_HMTelevisionProfile : _HMAccessoryProfile
 @property  NSArray *mediaSourceDisplayOrder
 @property  BOOL mediaSourceDisplayOrderModifiable
 @property  <_HMTelevisionProfileDelegate> *delegate

  // instance methods
  -[_HMTelevisionProfile delegate]
  -[_HMTelevisionProfile setDelegate:]
  -[_HMTelevisionProfile .cxx_destruct]
  -[_HMTelevisionProfile messageTargetUUID]
  -[_HMTelevisionProfile messageReceiveQueue]
  -[_HMTelevisionProfile _registerNotificationHandlers]
  -[_HMTelevisionProfile initWithTelevisionService:linkedServices:]
  -[_HMTelevisionProfile messageDestination]
  -[_HMTelevisionProfile mediaSourceDisplayOrder]
  -[_HMTelevisionProfile mediaSourceDisplayOrderModifiable]
  -[_HMTelevisionProfile _handleSourceDisplayOrderUpdated:]
  -[_HMTelevisionProfile setMediaSourceDisplayOrder:]
  -[_HMTelevisionProfile _notifyDelegateOfUpdatedSourceDisplayOrder:]
  -[_HMTelevisionProfile isMediaSourceDisplayOrderModifiable]
  -[_HMTelevisionProfile updateMediaSourceDisplayOrder:completionHandler:]


HMTelevisionProfile : HMAccessoryProfile <_HMTelevisionProfileDelegate>
 @property  NSArray *mediaSourceDisplayOrder
 @property  BOOL mediaSourceDisplayOrderModifiable
 @property  <HMTelevisionProfileDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMTelevisionProfile delegate]
  -[HMTelevisionProfile setDelegate:]
  -[HMTelevisionProfile .cxx_destruct]
  -[HMTelevisionProfile _mergeWithNewObject:operations:]
  -[HMTelevisionProfile initWithTelevisionService:linkedServices:]
  -[HMTelevisionProfile mediaSourceDisplayOrder]
  -[HMTelevisionProfile mediaSourceDisplayOrderModifiable]
  -[HMTelevisionProfile televisionProfileDidUpdateSourceDisplayOrder:]
  -[HMTelevisionProfile updateMediaSourceDisplayOrder:completionHandler:]


HMSettingValue : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  long long type
 @property  NSNumber *numberValue
 @property  NSString *stringValue
 @property  NSData *dataValue
 @property  NSUUID *selectionIdentifier
 @property  NSString *selectionValue

  // class methods
  +[HMSettingValue supportsSecureCoding]

  // instance methods
  -[HMSettingValue isEqual:]
  -[HMSettingValue copyWithZone:]
  -[HMSettingValue type]
  -[HMSettingValue encodeWithCoder:]
  -[HMSettingValue initWithCoder:]
  -[HMSettingValue stringValue]
  -[HMSettingValue .cxx_destruct]
  -[HMSettingValue dataValue]
  -[HMSettingValue numberValue]
  -[HMSettingValue initDataSettingWithValue:]
  -[HMSettingValue initNumberSettingWithValue:]
  -[HMSettingValue initStringSettingWithValue:]
  -[HMSettingValue initWithType:stringValue:numberValue:dataValue:selectionIdentifier:selectionValue:]
  -[HMSettingValue selectionIdentifier]
  -[HMSettingValue selectionValue]


_HMMediaProfile : _HMAccessoryProfile
 @property  HMMediaSession *mediaSession
 @property  NSString *routeUID
 @property  <_HMMediaProfileDelegate> *delegate

  // class methods
  +[_HMMediaProfile supportsSecureCoding]

  // instance methods
  -[_HMMediaProfile encodeWithCoder:]
  -[_HMMediaProfile initWithCoder:]
  -[_HMMediaProfile delegate]
  -[_HMMediaProfile setDelegate:]
  -[_HMMediaProfile .cxx_destruct]
  -[_HMMediaProfile routeUID]
  -[_HMMediaProfile setRouteUID:]
  -[_HMMediaProfile handleRuntimeStateUpdate:]
  -[_HMMediaProfile mediaSession]
  -[_HMMediaProfile setMediaSession:]
  -[_HMMediaProfile __configureWithContext:accessory:]
  -[_HMMediaProfile _notifyDelegateOfUpdatedMediaSession:]


HMMediaProfile : HMAccessoryProfile <_HMMediaProfileDelegate, HMMediaObject, HMAccessorySettingsContainer>
 @property  NSString *routeUID
 @property  <HMMediaProfileDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMMediaSession *mediaSession
 @property  HMAccessorySettings *settings
 @property  HMHome *containerHome

  // instance methods
  -[HMMediaProfile init]
  -[HMMediaProfile delegate]
  -[HMMediaProfile setDelegate:]
  -[HMMediaProfile .cxx_destruct]
  -[HMMediaProfile settings]
  -[HMMediaProfile routeUID]
  -[HMMediaProfile _mergeWithNewObject:operations:]
  -[HMMediaProfile mediaSession]
  -[HMMediaProfile containerHome]
  -[HMMediaProfile initWithAccessoryProfile:]
  -[HMMediaProfile mediaProfile:didUpdateMediaSession:]


HMPBCharacteristicWriteAction : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasActionUUID
 @property  NSData *actionUUID
 @property  BOOL hasTargetValue
 @property  NSData *targetValue
 @property  BOOL hasCharacteristicReference
 @property  HMPBCharacteristicReference *characteristicReference

  // instance methods
  -[HMPBCharacteristicWriteAction isEqual:]
  -[HMPBCharacteristicWriteAction copyWithZone:]
  -[HMPBCharacteristicWriteAction .cxx_destruct]
  -[HMPBCharacteristicWriteAction dictionaryRepresentation]
  -[HMPBCharacteristicWriteAction writeTo:]
  -[HMPBCharacteristicWriteAction mergeFrom:]
  -[HMPBCharacteristicWriteAction readFrom:]
  -[HMPBCharacteristicWriteAction copyTo:]
  -[HMPBCharacteristicWriteAction targetValue]
  -[HMPBCharacteristicWriteAction setTargetValue:]
  -[HMPBCharacteristicWriteAction actionUUID]
  -[HMPBCharacteristicWriteAction setActionUUID:]
  -[HMPBCharacteristicWriteAction hasActionUUID]
  -[HMPBCharacteristicWriteAction characteristicReference]
  -[HMPBCharacteristicWriteAction setCharacteristicReference:]
  -[HMPBCharacteristicWriteAction hasTargetValue]
  -[HMPBCharacteristicWriteAction hasCharacteristicReference]


_HMAccessorySetting : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, HMFMessageReceiver, HMFMerging, NSSecureCoding>
 @property  HMAccessorySettings *accessorySettings
 @property  _HMContext *context
 @property  <_HMAccesorySettingDelegate> *delegate
 @property  NSUUID *identifier
 @property  long long type
 @property  unsigned long properties
 @property  NSString *name
 @property  NSArray *constraints
 @property  <NSCopying><NSSecureCoding> *value
 @property  BOOL reflected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[_HMAccessorySetting supportsSecureCoding]
  +[_HMAccessorySetting shortDescription]
  +[_HMAccessorySetting logCategory]
  +[_HMAccessorySetting supportedValueClasses]
  +[_HMAccessorySetting _encodedConstraintsToRemove:]
  +[_HMAccessorySetting _encodedConstraintsToAdd:]
  +[_HMAccessorySetting _replaceConstraintsPayloadWithAdditions:removals:]
  +[_HMAccessorySetting supportedConstraintClasses]

  // instance methods
  -[_HMAccessorySetting dealloc]
  -[_HMAccessorySetting isEqual:]
  -[_HMAccessorySetting name]
  -[_HMAccessorySetting type]
  -[_HMAccessorySetting encodeWithCoder:]
  -[_HMAccessorySetting initWithCoder:]
  -[_HMAccessorySetting delegate]
  -[_HMAccessorySetting setDelegate:]
  -[_HMAccessorySetting .cxx_destruct]
  -[_HMAccessorySetting identifier]
  -[_HMAccessorySetting constraints]
  -[_HMAccessorySetting value]
  -[_HMAccessorySetting setValue:]
  -[_HMAccessorySetting context]
  -[_HMAccessorySetting setContext:]
  -[_HMAccessorySetting properties]
  -[_HMAccessorySetting shortDescription]
  -[_HMAccessorySetting addConstraint:]
  -[_HMAccessorySetting removeConstraint:]
  -[_HMAccessorySetting setConstraints:]
  -[_HMAccessorySetting logIdentifier]
  -[_HMAccessorySetting mergeObject:]
  -[_HMAccessorySetting descriptionWithPointer:]
  -[_HMAccessorySetting messageTargetUUID]
  -[_HMAccessorySetting messageReceiveQueue]
  -[_HMAccessorySetting updateValue:completionHandler:]
  -[_HMAccessorySetting _registerNotificationHandlers]
  -[_HMAccessorySetting messageDestination]
  -[_HMAccessorySetting configureWithAccessorySettings:context:]
  -[_HMAccessorySetting setAccessorySettings:]
  -[_HMAccessorySetting accessorySettings]
  -[_HMAccessorySetting _handleUpdatedValue:]
  -[_HMAccessorySetting _handleAddedConstraint:]
  -[_HMAccessorySetting _handleRemovedConstraint:]
  -[_HMAccessorySetting _handleReflectedUpdate:]
  -[_HMAccessorySetting notifyDelegateOfAddedConstraint:]
  -[_HMAccessorySetting notifyDelegateOfRemovedConstraint:]
  -[_HMAccessorySetting isReflected]
  -[_HMAccessorySetting setReflected:]
  -[_HMAccessorySetting mergeConstraints:]
  -[_HMAccessorySetting initWithType:properties:name:constraints:]
  -[_HMAccessorySetting constraintWithType:]
  -[_HMAccessorySetting addConstraint:completionHandler:]
  -[_HMAccessorySetting removeConstraint:completionHandler:]
  -[_HMAccessorySetting replaceConstraints:withConstraints:completionHandler:]
  -[_HMAccessorySetting updateConstraints:completionHandler:]


HMAccessorySetting : HMSetting <_HMAccesorySettingDelegate, HMFLogging>
 @property  _HMAccessorySetting *internal
 @property  HMAccessorySettingGroup *group
 @property  NSString *keyPath
 @property  Class valueClass
 @property  BOOL reflected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessorySetting automaticallyNotifiesObserversForKey:]
  +[HMAccessorySetting logCategory]
  +[HMAccessorySetting settingForInternal:]

  // instance methods
  -[HMAccessorySetting init]
  -[HMAccessorySetting isEqual:]
  -[HMAccessorySetting .cxx_destruct]
  -[HMAccessorySetting setGroup:]
  -[HMAccessorySetting value]
  -[HMAccessorySetting keyPath]
  -[HMAccessorySetting group]
  -[HMAccessorySetting internal]
  -[HMAccessorySetting valueClass]
  -[HMAccessorySetting logIdentifier]
  -[HMAccessorySetting isWritable]
  -[HMAccessorySetting updateValue:completionHandler:]
  -[HMAccessorySetting initWithInternal:]
  -[HMAccessorySetting isReflected]
  -[HMAccessorySetting _settingWillUpdateReflected:]
  -[HMAccessorySetting _settingDidUpdateReflected:]
  -[HMAccessorySetting _settingWillUpdateValue:]
  -[HMAccessorySetting _settingDidUpdateValue:]
  -[HMAccessorySetting initWithKey:properties:value:]


HMAccessoryDataSetting : HMAccessorySetting
  // instance methods
  -[HMAccessoryDataSetting valueClass]
  -[HMAccessoryDataSetting initWithKey:properties:value:]


HMAccessoryNumberSetting : HMAccessorySetting
 @property  NSNumber *minimumValue
 @property  NSNumber *maximumValue
 @property  NSNumber *stepValue

  // instance methods
  -[HMAccessoryNumberSetting valueClass]
  -[HMAccessoryNumberSetting minimumValue]
  -[HMAccessoryNumberSetting maximumValue]
  -[HMAccessoryNumberSetting stepValue]
  -[HMAccessoryNumberSetting initWithKey:properties:value:]
  -[HMAccessoryNumberSetting initWithKey:properties:value:minimumValue:maximumValue:stepValue:]


HMAccessoryStringSetting : HMAccessorySetting
  // instance methods
  -[HMAccessoryStringSetting valueClass]
  -[HMAccessoryStringSetting initWithKey:properties:value:]


HMAccessorySelectionSettingItem : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  HMAccessorySelectionSetting *setting
 @property  NSString *keyPath
 @property  NSUUID *identifier
 @property  NSString *title
 @property  NSString *localizedTitle

  // class methods
  +[HMAccessorySelectionSettingItem supportsSecureCoding]

  // instance methods
  -[HMAccessorySelectionSettingItem init]
  -[HMAccessorySelectionSettingItem isEqual:]
  -[HMAccessorySelectionSettingItem copyWithZone:]
  -[HMAccessorySelectionSettingItem encodeWithCoder:]
  -[HMAccessorySelectionSettingItem initWithCoder:]
  -[HMAccessorySelectionSettingItem .cxx_destruct]
  -[HMAccessorySelectionSettingItem identifier]
  -[HMAccessorySelectionSettingItem keyPath]
  -[HMAccessorySelectionSettingItem title]
  -[HMAccessorySelectionSettingItem localizedTitle]
  -[HMAccessorySelectionSettingItem initWithTitle:]
  -[HMAccessorySelectionSettingItem setting]
  -[HMAccessorySelectionSettingItem setSetting:]


HMAccessorySelectionSetting : HMAccessorySetting <_HMAccesorySettingDelegate>
 @property  NSArray *items
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMAccessorySelectionSetting items]
  -[HMAccessorySelectionSetting initWithInternal:]
  -[HMAccessorySelectionSetting _setting:didAddConstraint:]
  -[HMAccessorySelectionSetting initWithKey:properties:value:]
  -[HMAccessorySelectionSetting initWithKey:properties:value:items:]
  -[HMAccessorySelectionSetting addItem:completionHandler:]
  -[HMAccessorySelectionSetting removeItem:completionHandler:]


HMAccessoryCollectionSettingItem : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  HMAccessoryCollectionSetting *setting
 @property  NSData *serializedValue
 @property  NSUUID *identifier
 @property  <NSObject><NSCopying><NSSecureCoding> *value

  // class methods
  +[HMAccessoryCollectionSettingItem supportsSecureCoding]
  +[HMAccessoryCollectionSettingItem shortDescription]

  // instance methods
  -[HMAccessoryCollectionSettingItem init]
  -[HMAccessoryCollectionSettingItem isEqual:]
  -[HMAccessoryCollectionSettingItem copyWithZone:]
  -[HMAccessoryCollectionSettingItem encodeWithCoder:]
  -[HMAccessoryCollectionSettingItem initWithCoder:]
  -[HMAccessoryCollectionSettingItem .cxx_destruct]
  -[HMAccessoryCollectionSettingItem identifier]
  -[HMAccessoryCollectionSettingItem value]
  -[HMAccessoryCollectionSettingItem shortDescription]
  -[HMAccessoryCollectionSettingItem initWithValue:]
  -[HMAccessoryCollectionSettingItem descriptionWithPointer:]
  -[HMAccessoryCollectionSettingItem setting]
  -[HMAccessoryCollectionSettingItem setSetting:]
  -[HMAccessoryCollectionSettingItem serializedValue]


_HMAccessoryCollectionSettingItemClassManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[_HMAccessoryCollectionSettingItemClassManager sharedManager]
  +[_HMAccessoryCollectionSettingItemClassManager defaultItemValueClasses]

  // instance methods
  -[_HMAccessoryCollectionSettingItemClassManager init]
  -[_HMAccessoryCollectionSettingItemClassManager .cxx_destruct]
  -[_HMAccessoryCollectionSettingItemClassManager itemValueClassesForKeyPath:]
  -[_HMAccessoryCollectionSettingItemClassManager setItemValueClasses:forKeyPath:]


HMAccessoryCollectionSetting : HMAccessorySetting <NSFastEnumeration>
 @property  NSSet *itemValueClasses

  // class methods
  +[HMAccessoryCollectionSetting itemValueClassesForKeyPath:]
  +[HMAccessoryCollectionSetting setItemValueClass:forKeyPath:]
  +[HMAccessoryCollectionSetting setItemValueClasses:forKeyPath:]

  // instance methods
  -[HMAccessoryCollectionSetting countByEnumeratingWithState:objects:count:]
  -[HMAccessoryCollectionSetting value]
  -[HMAccessoryCollectionSetting valueClass]
  -[HMAccessoryCollectionSetting updateValue:completionHandler:]
  -[HMAccessoryCollectionSetting initWithInternal:]
  -[HMAccessoryCollectionSetting setItemValueClass:]
  -[HMAccessoryCollectionSetting setItemValueClasses:]
  -[HMAccessoryCollectionSetting itemValueClasses]
  -[HMAccessoryCollectionSetting _setting:didAddConstraint:]
  -[HMAccessoryCollectionSetting _setting:didRemoveConstraint:]
  -[HMAccessoryCollectionSetting initWithKey:properties:value:]
  -[HMAccessoryCollectionSetting addItem:completionHandler:]
  -[HMAccessoryCollectionSetting removeItem:completionHandler:]
  -[HMAccessoryCollectionSetting replaceItems:withItems:completionHandler:]
  -[HMAccessoryCollectionSetting replaceItem:withItem:completionHandler:]


HMService : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, NSSecureCoding, HMObjectMerge, HMMutableApplicationData>
 @property  NSDictionary *serializedDictionaryRepresentation
 @property  _HMContext *context
 @property  NSNumber *instanceID
 @property  HMAccessory *accessory
 @property  NSString *serviceType
 @property  NSString *defaultName
 @property  NSString *associatedServiceType
 @property  NSString *serviceSubtype
 @property  long long configurationState
 @property  HMBulletinBoardNotification *bulletinBoardNotificationInternal
 @property  NSURL *homeObjectURLInternal
 @property  HMMutableArray *currentCharacteristics
 @property  NSNumber *lastKnownDiscoveryMode
 @property  NSNumber *mediaSourceIdentifier
 @property  BOOL nameModifiable
 @property  NSUUID *uuid
 @property  NSArray *linkedServiceInstanceIDs
 @property  NSString *name
 @property  NSString *configuredName
 @property  NSArray *mediaSourceDisplayOrder
 @property  BOOL mediaSourceDisplayOrderModifiable
 @property  NSString *localizedDescription
 @property  NSArray *characteristics
 @property  NSUUID *uniqueIdentifier
 @property  BOOL userInteractive
 @property  BOOL primaryService
 @property  NSArray *linkedServices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMApplicationData *applicationData
 @property  NSUUID *applicationDataIdentifier

  // class methods
  +[HMService supportsSecureCoding]
  +[HMService logCategory]
  +[HMService serviceWithServiceReference:home:]
  +[HMService serviceWithSerializedDictionaryRepresentation:home:]
  +[HMService _mapToServiceConfigurationStateFromIsConfiguredValue:]
  +[HMService initializeCharacteristicDictionaries]
  +[HMService _serviceTypeAsString:]
  +[HMService defaultCharacteristicByServiceDictionary]
  +[HMService characteristicBlacklistForShortcutConditions]
  +[HMService _mapToIsConfiguredValueFromServiceConfigurationState:]
  +[HMService __localizedDescriptionForServiceType:]
  +[HMService localizedDescriptionForServiceType:]

  // instance methods
  -[HMService init]
  -[HMService isEqual:]
  -[HMService name]
  -[HMService localizedDescription]
  -[HMService encodeWithCoder:]
  -[HMService initWithCoder:]
  -[HMService .cxx_destruct]
  -[HMService setName:]
  -[HMService uuid]
  -[HMService context]
  -[HMService uniqueIdentifier]
  -[HMService setUuid:]
  -[HMService setContext:]
  -[HMService serviceType]
  -[HMService defaultName]
  -[HMService setServiceType:]
  -[HMService accessory]
  -[HMService setAccessory:]
  -[HMService applicationData]
  -[HMService logIdentifier]
  -[HMService updateApplicationData:completionHandler:]
  -[HMService setApplicationData:]
  -[HMService configurationState]
  -[HMService characteristics]
  -[HMService instanceID]
  -[HMService _mergeWithNewObject:operations:]
  -[HMService _updateName:completionHandler:]
  -[HMService updateName:completionHandler:]
  -[HMService bulletinBoardNotification]
  -[HMService serializedDictionaryRepresentation]
  -[HMService linkedServiceInstanceIDs]
  -[HMService configuredName]
  -[HMService setConfiguredName:]
  -[HMService _findCharacteristic:]
  -[HMService homeObjectURL]
  -[HMService applicationDataIdentifier]
  -[HMService __configureWithContext:accessory:]
  -[HMService _removeCharacteristic:]
  -[HMService _addCharacteristic:]
  -[HMService _handleUpdateName:]
  -[HMService _handleUpdateDefaultName:]
  -[HMService _handleUpdateAssociatedServiceType:]
  -[HMService _handleUpdateServiceSubtype:]
  -[HMService _handleUpdateConfigurationState:]
  -[HMService _handleMediaSourceIdentifierUpdated:]
  -[HMService _findCharacteristicWithUniqueIdentifier:]
  -[HMService mediaSourceDisplayOrder]
  -[HMService mediaSourceDisplayOrderModifiable]
  -[HMService setMediaSourceDisplayOrder:]
  -[HMService bulletinBoardNotificationInternal]
  -[HMService currentCharacteristics]
  -[HMService _serviceTypeDescription]
  -[HMService characteristicsSupportedForShortcutConditions]
  -[HMService lastKnownDiscoveryMode]
  -[HMService homeObjectURLInternal]
  -[HMService isNameModifiable]
  -[HMService _updateAssociatedServiceType:completionHandler:]
  -[HMService associatedServiceType]
  -[HMService _updateConfigurationState:completionHandler:]
  -[HMService setDefaultName:]
  -[HMService isUserInteractive]
  -[HMService setAssociatedServiceType:]
  -[HMService serviceSubtype]
  -[HMService setServiceSubtype:]
  -[HMService setConfigurationState:]
  -[HMService setLastKnownDiscoveryMode:]
  -[HMService _addLastKnownSleepDiscoveryModeDidUpdateDelegateCallbackToOperations:]
  -[HMService mediaSourceIdentifier]
  -[HMService setMediaSourceDisplayOrderModifiable:]
  -[HMService isPrimaryService]
  -[HMService setMediaSourceIdentifier:]
  -[HMService _hasCharacteristic:]
  -[HMService defaultCharacteristic]
  -[HMService hasSleepDiscoveryMode]
  -[HMService lastKnownSleepDiscoveryMode]
  -[HMService linkedServices]
  -[HMService updateAssociatedServiceType:completionHandler:]
  -[HMService updateConfigurationState:completionHandler:]
  -[HMService _handleUpdateServicePrimary:]
  -[HMService _handleMarkServiceInteractive:]
  -[HMService _hasCharacteristicOfType:]
  -[HMService nameModifiable]
  -[HMService setNameModifiable:]
  -[HMService setCurrentCharacteristics:]


HMUserPresenceAuthorization : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *number
 @property  unsigned long value

  // class methods
  +[HMUserPresenceAuthorization authWithMessage:]
  +[HMUserPresenceAuthorization authWithCoder:]
  +[HMUserPresenceAuthorization authWithNumber:]
  +[HMUserPresenceAuthorization authWithValue:]
  +[HMUserPresenceAuthorization authWithDict:]

  // instance methods
  -[HMUserPresenceAuthorization isEqual:]
  -[HMUserPresenceAuthorization value]
  -[HMUserPresenceAuthorization number]
  -[HMUserPresenceAuthorization initWithNumber:]
  -[HMUserPresenceAuthorization addToCoder:]
  -[HMUserPresenceAuthorization addToPayload:]


HMCameraClipVideoSegment : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  double duration
 @property  unsigned long byteLength
 @property  unsigned long byteOffset
 @property  BOOL initSegment

  // class methods
  +[HMCameraClipVideoSegment supportsSecureCoding]

  // instance methods
  -[HMCameraClipVideoSegment isEqual:]
  -[HMCameraClipVideoSegment copyWithZone:]
  -[HMCameraClipVideoSegment encodeWithCoder:]
  -[HMCameraClipVideoSegment initWithCoder:]
  -[HMCameraClipVideoSegment duration]
  -[HMCameraClipVideoSegment byteLength]
  -[HMCameraClipVideoSegment byteOffset]
  -[HMCameraClipVideoSegment isInitSegment]
  -[HMCameraClipVideoSegment initWithDuration:byteLength:byteOffset:isInitSegment:]


HMLocalization : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *localizedStrings

  // class methods
  +[HMLocalization sharedManager]

  // instance methods
  -[HMLocalization init]
  -[HMLocalization .cxx_destruct]
  -[HMLocalization localizedStrings]
  -[HMLocalization getLocalizedOrCustomString:]
  -[HMLocalization getLocalizedString:]
  -[HMLocalization _updateLocalizedStrings]
  -[HMLocalization handleLocaleDidChange:]


HMPBActionContainer : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasCharacteristicWriteAction
 @property  HMPBCharacteristicWriteAction *characteristicWriteAction
 @property  BOOL hasMediaPlaybackAction
 @property  HMPBMediaPlaybackAction *mediaPlaybackAction

  // instance methods
  -[HMPBActionContainer isEqual:]
  -[HMPBActionContainer copyWithZone:]
  -[HMPBActionContainer type]
  -[HMPBActionContainer setType:]
  -[HMPBActionContainer .cxx_destruct]
  -[HMPBActionContainer dictionaryRepresentation]
  -[HMPBActionContainer writeTo:]
  -[HMPBActionContainer mergeFrom:]
  -[HMPBActionContainer readFrom:]
  -[HMPBActionContainer copyTo:]
  -[HMPBActionContainer typeAsString:]
  -[HMPBActionContainer StringAsType:]
  -[HMPBActionContainer setHasType:]
  -[HMPBActionContainer hasType]
  -[HMPBActionContainer setMediaPlaybackAction:]
  -[HMPBActionContainer setCharacteristicWriteAction:]
  -[HMPBActionContainer characteristicWriteAction]
  -[HMPBActionContainer mediaPlaybackAction]
  -[HMPBActionContainer hasCharacteristicWriteAction]
  -[HMPBActionContainer hasMediaPlaybackAction]


HMBulletinBoardNotification : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, HMObjectMerge, HMFMessageReceiver, HMFLogging>
 @property  NSUUID *targetUUID
 @property  NSString *logID
 @property  _HMContext *context
 @property  HMService *service
 @property  BOOL enabled
 @property  NSPredicate *condition
 @property  HMBulletinBoardNotificationServiceGroup *notificationServiceGroup
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMBulletinBoardNotification supportsSecureCoding]
  +[HMBulletinBoardNotification logCategory]

  // instance methods
  -[HMBulletinBoardNotification init]
  -[HMBulletinBoardNotification setEnabled:]
  -[HMBulletinBoardNotification encodeWithCoder:]
  -[HMBulletinBoardNotification initWithCoder:]
  -[HMBulletinBoardNotification .cxx_destruct]
  -[HMBulletinBoardNotification condition]
  -[HMBulletinBoardNotification context]
  -[HMBulletinBoardNotification uniqueIdentifier]
  -[HMBulletinBoardNotification isEnabled]
  -[HMBulletinBoardNotification setContext:]
  -[HMBulletinBoardNotification service]
  -[HMBulletinBoardNotification setCondition:]
  -[HMBulletinBoardNotification logIdentifier]
  -[HMBulletinBoardNotification messageTargetUUID]
  -[HMBulletinBoardNotification messageReceiveQueue]
  -[HMBulletinBoardNotification commitWithCompletionHandler:]
  -[HMBulletinBoardNotification logID]
  -[HMBulletinBoardNotification _mergeWithNewObject:operations:]
  -[HMBulletinBoardNotification _registerNotificationHandlers]
  -[HMBulletinBoardNotification targetUUID]
  -[HMBulletinBoardNotification __configureWithContext:]
  -[HMBulletinBoardNotification _commitWithCompletionHandler:]
  -[HMBulletinBoardNotification _handleBulletinBoardNotificationUpdateNotification:]
  -[HMBulletinBoardNotification notificationServiceGroup]
  -[HMBulletinBoardNotification _callBulletinBoardNotificationUpdatedDelegate]


HMMediaSystemComponent : NSObject /usr/lib/libSystem.B.dylib <HMFLogging, NSSecureCoding, HMObjectMerge, NSCopying, NSMutableCopying>
 @property  NSUUID *uuid
 @property  HMAccessory *accessory
 @property  HMMediaProfile *mediaProfile
 @property  HMMediaSystemRole *role
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMMediaSystemComponent supportsSecureCoding]
  +[HMMediaSystemComponent logCategory]
  +[HMMediaSystemComponent mediaSystemComponentWithDictionary:home:]

  // instance methods
  -[HMMediaSystemComponent init]
  -[HMMediaSystemComponent dealloc]
  -[HMMediaSystemComponent isEqual:]
  -[HMMediaSystemComponent copyWithZone:]
  -[HMMediaSystemComponent mutableCopyWithZone:]
  -[HMMediaSystemComponent _invalidate]
  -[HMMediaSystemComponent encodeWithCoder:]
  -[HMMediaSystemComponent initWithCoder:]
  -[HMMediaSystemComponent role]
  -[HMMediaSystemComponent .cxx_destruct]
  -[HMMediaSystemComponent uuid]
  -[HMMediaSystemComponent uniqueIdentifier]
  -[HMMediaSystemComponent serialize]
  -[HMMediaSystemComponent setRole:]
  -[HMMediaSystemComponent accessory]
  -[HMMediaSystemComponent setAccessory:]
  -[HMMediaSystemComponent mediaProfile]
  -[HMMediaSystemComponent logIdentifier]
  -[HMMediaSystemComponent initWithMediaProfile:role:]
  -[HMMediaSystemComponent _mergeWithNewObject:operations:]
  -[HMMediaSystemComponent _updateAccessoryReference:]
  -[HMMediaSystemComponent initWithUUID:mediaProfile:role:]


HMMutableMediaSystemComponent : HMMediaSystemComponent
 @property  HMMediaSystemRole *role


HMAccessoryNetworkAccessViolation : HMFObject /System/Library/Frameworks/Foundation.framework/Foundation <NSSecureCoding>
 @property  BOOL currentViolation
 @property  NSDate *lastViolationDate
 @property  NSDate *lastResetDate

  // class methods
  +[HMAccessoryNetworkAccessViolation supportsSecureCoding]

  // instance methods
  -[HMAccessoryNetworkAccessViolation isEqual:]
  -[HMAccessoryNetworkAccessViolation encodeWithCoder:]
  -[HMAccessoryNetworkAccessViolation initWithCoder:]
  -[HMAccessoryNetworkAccessViolation .cxx_destruct]
  -[HMAccessoryNetworkAccessViolation lastViolationDate]
  -[HMAccessoryNetworkAccessViolation lastResetDate]
  -[HMAccessoryNetworkAccessViolation initWithLastViolationDate:lastViolationResetDate:]
  -[HMAccessoryNetworkAccessViolation hasCurrentViolation]


HMUserCloudShareInvitation : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *shareURL
 @property  CKDeviceToDeviceShareInvitationToken *shareToken
 @property  NSString *containerID
 @property  HMHome *home
 @property  HMUser *user
 @property  HMUser *fromUser

  // instance methods
  -[HMUserCloudShareInvitation user]
  -[HMUserCloudShareInvitation .cxx_destruct]
  -[HMUserCloudShareInvitation home]
  -[HMUserCloudShareInvitation containerID]
  -[HMUserCloudShareInvitation shareURL]
  -[HMUserCloudShareInvitation initWithUser:URL:shareToken:containerID:forHome:fromUser:]
  -[HMUserCloudShareInvitation shareToken]
  -[HMUserCloudShareInvitation fromUser]


HMNetworkConfigurationWiFiOptions : HMFObject /System/Library/Frameworks/Foundation.framework/Foundation
 @property  long long credentialType

  // instance methods
  -[HMNetworkConfigurationWiFiOptions credentialType]
  -[HMNetworkConfigurationWiFiOptions initWithCredentialType:]


_HMMediaSession : NSObject /usr/lib/libSystem.B.dylib <HMFMessageReceiver, HMObjectMerge>
 @property  NSUUID *uuid
 @property  NSUUID *uniqueIdentifier
 @property  NSUUID *messageTargetUUID
 @property  <_HMMediaSessionDelegate> *delegate
 @property  long long playbackState
 @property  long long shuffleState
 @property  long long repeatState
 @property  NSString *mediaUniqueIdentifier
 @property  NSString *routeUID
 @property  _HMContext *context
 @property  HMAudioControl *audioControl
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // instance methods
  -[_HMMediaSession isEqual:]
  -[_HMMediaSession delegate]
  -[_HMMediaSession setDelegate:]
  -[_HMMediaSession .cxx_destruct]
  -[_HMMediaSession uuid]
  -[_HMMediaSession context]
  -[_HMMediaSession uniqueIdentifier]
  -[_HMMediaSession setUuid:]
  -[_HMMediaSession setContext:]
  -[_HMMediaSession messageTargetUUID]
  -[_HMMediaSession messageReceiveQueue]
  -[_HMMediaSession playbackState]
  -[_HMMediaSession routeUID]
  -[_HMMediaSession setRouteUID:]
  -[_HMMediaSession setPlaybackState:]
  -[_HMMediaSession _mergeWithNewObject:operations:]
  -[_HMMediaSession _registerNotificationHandlers]
  -[_HMMediaSession messageDestination]
  -[_HMMediaSession audioControl]
  -[_HMMediaSession updatePlaybackState:]
  -[_HMMediaSession _handleSessionPlaybackUpdated:]
  -[_HMMediaSession _handleSessionRouteUIDUpdated:]
  -[_HMMediaSession _updateMediaState:completion:]
  -[_HMMediaSession _notifyDelegateOfUpdatedPlaybackState:]
  -[_HMMediaSession _notifyDelegateOfUpdatedMediaState:]
  -[_HMMediaSession _notifyDelegateOfUpdatedRouteUID:]
  -[_HMMediaSession initWithUUID:routeUID:playbackState:audioControl:]
  -[_HMMediaSession setMessageTargetUUID:]
  -[_HMMediaSession shuffleState]
  -[_HMMediaSession setShuffleState:]
  -[_HMMediaSession repeatState]
  -[_HMMediaSession setRepeatState:]
  -[_HMMediaSession mediaUniqueIdentifier]
  -[_HMMediaSession setMediaUniqueIdentifier:]
  -[_HMMediaSession setPlaybackState:completionHandler:]
  -[_HMMediaSession refreshPlaybackStateWithCompletionHandler:]


HMMediaSession : NSObject /usr/lib/libSystem.B.dylib <_HMMediaSessionDelegate, HMObjectMerge, NSSecureCoding>
 @property  _HMMediaSession *mediaSession
 @property  NSUUID *uuid
 @property  HMMediaProfile *mediaProfile
 @property  NSString *routeUID
 @property  NSUUID *uniqueIdentifier
 @property  <HMMediaSessionDelegate> *delegate
 @property  long long playbackState
 @property  long long shuffleState
 @property  long long repeatState
 @property  NSString *mediaUniqueIdentifier
 @property  HMAudioControl *audioControl
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMMediaSession supportsSecureCoding]

  // instance methods
  -[HMMediaSession isEqual:]
  -[HMMediaSession encodeWithCoder:]
  -[HMMediaSession initWithCoder:]
  -[HMMediaSession delegate]
  -[HMMediaSession setDelegate:]
  -[HMMediaSession .cxx_destruct]
  -[HMMediaSession uuid]
  -[HMMediaSession uniqueIdentifier]
  -[HMMediaSession setUuid:]
  -[HMMediaSession mediaProfile]
  -[HMMediaSession messageTargetUUID]
  -[HMMediaSession playbackState]
  -[HMMediaSession routeUID]
  -[HMMediaSession _mergeWithNewObject:operations:]
  -[HMMediaSession mediaSession]
  -[HMMediaSession audioControl]
  -[HMMediaSession setMediaSession:]
  -[HMMediaSession configure:messageTargetUUID:]
  -[HMMediaSession initWithUUID:routeUID:playbackState:]
  -[HMMediaSession updatePlaybackState:]
  -[HMMediaSession mediaSession:didUpdatePlaybackState:]
  -[HMMediaSession mediaSession:didUpdateMediaState:]
  -[HMMediaSession mediaSession:didUpdateRouteUID:]
  -[HMMediaSession shuffleState]
  -[HMMediaSession repeatState]
  -[HMMediaSession mediaUniqueIdentifier]
  -[HMMediaSession refreshPlaybackStateWithCompletionHandler:]
  -[HMMediaSession playbackStateDescription]
  -[HMMediaSession resumeWithCompletionHandler:]
  -[HMMediaSession pauseWithCompletionHandler:]
  -[HMMediaSession setMediaProfile:]


HMPBMetadataService : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasType
 @property  NSString *type
 @property  BOOL hasDesc
 @property  NSString *desc

  // instance methods
  -[HMPBMetadataService isEqual:]
  -[HMPBMetadataService copyWithZone:]
  -[HMPBMetadataService type]
  -[HMPBMetadataService setType:]
  -[HMPBMetadataService .cxx_destruct]
  -[HMPBMetadataService dictionaryRepresentation]
  -[HMPBMetadataService writeTo:]
  -[HMPBMetadataService mergeFrom:]
  -[HMPBMetadataService readFrom:]
  -[HMPBMetadataService copyTo:]
  -[HMPBMetadataService hasType]
  -[HMPBMetadataService desc]
  -[HMPBMetadataService setDesc:]
  -[HMPBMetadataService hasDesc]


HMUserListViewController : UIViewController /System/Library/Frameworks/Intents.framework/Intents <HMUserManagementRemoteHost>
 @property  HMHome *home
 @property  BOOL shouldPresentWhenLoaded
 @property  @? loadHandler
 @property  _UIAsyncInvocation *cancelServiceInvocation
 @property  HMUserListRemoteViewController *remoteViewController
 @property  @? completionHandler

  // instance methods
  -[HMUserListViewController .cxx_destruct]
  -[HMUserListViewController home]
  -[HMUserListViewController completionHandler]
  -[HMUserListViewController setCompletionHandler:]
  -[HMUserListViewController viewDidLoad]
  -[HMUserListViewController supportedInterfaceOrientations]
  -[HMUserListViewController shouldAutorotate]
  -[HMUserListViewController remoteViewController]
  -[HMUserListViewController setRemoteViewController:]
  -[HMUserListViewController setHome:]
  -[HMUserListViewController _requestRemoteViewController]
  -[HMUserListViewController userManagementDidFinishWithError:]
  -[HMUserListViewController userManagementDidLoad]
  -[HMUserListViewController setLoadHandler:]
  -[HMUserListViewController setShouldPresentWhenLoaded:]
  -[HMUserListViewController _configureAndAddRemoteViewController]
  -[HMUserListViewController setCancelServiceInvocation:]
  -[HMUserListViewController shouldPresentWhenLoaded]
  -[HMUserListViewController _presentAsTopmostViewController]
  -[HMUserListViewController loadHandler]
  -[HMUserListViewController presentWhenLoaded]
  -[HMUserListViewController cancelServiceInvocation]
  -[HMUserListViewController _finishSetupWithError:]
  -[HMUserListViewController initWithHome:loadHandler:]


HMHomeManagerConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying>
 @property  unsigned long cachePolicy
 @property  BOOL shouldConnect
 @property  BOOL canUseCache
 @property  NSURL *cacheURL
 @property  HMFLocationAuthorization *locationAuthorization
 @property  unsigned long options
 @property  BOOL discretionary
 @property  NSOperationQueue *delegateQueue

  // class methods
  +[HMHomeManagerConfiguration defaultConfiguration]
  +[HMHomeManagerConfiguration defaultPrivateConfiguration]

  // instance methods
  -[HMHomeManagerConfiguration init]
  -[HMHomeManagerConfiguration copyWithZone:]
  -[HMHomeManagerConfiguration mutableCopyWithZone:]
  -[HMHomeManagerConfiguration options]
  -[HMHomeManagerConfiguration .cxx_destruct]
  -[HMHomeManagerConfiguration delegateQueue]
  -[HMHomeManagerConfiguration setCachePolicy:]
  -[HMHomeManagerConfiguration isDiscretionary]
  -[HMHomeManagerConfiguration cachePolicy]
  -[HMHomeManagerConfiguration initWithOptions:cachePolicy:]
  -[HMHomeManagerConfiguration cacheURL]
  -[HMHomeManagerConfiguration locationAuthorization]
  -[HMHomeManagerConfiguration shouldConnect]
  -[HMHomeManagerConfiguration setShouldConnect:]
  -[HMHomeManagerConfiguration canUseCache]


HMMutableHomeManagerConfiguration : HMHomeManagerConfiguration
 @property  HMFLocationAuthorization *locationAuthorization
 @property  unsigned long cachePolicy
 @property  unsigned long options
 @property  BOOL discretionary
 @property  NSOperationQueue *delegateQueue

  // instance methods
  -[HMMutableHomeManagerConfiguration copyWithZone:]
  -[HMMutableHomeManagerConfiguration mutableCopyWithZone:]
  -[HMMutableHomeManagerConfiguration options]
  -[HMMutableHomeManagerConfiguration .cxx_destruct]
  -[HMMutableHomeManagerConfiguration setOptions:]
  -[HMMutableHomeManagerConfiguration setDiscretionary:]
  -[HMMutableHomeManagerConfiguration setDelegateQueue:]
  -[HMMutableHomeManagerConfiguration delegateQueue]
  -[HMMutableHomeManagerConfiguration setCachePolicy:]
  -[HMMutableHomeManagerConfiguration isDiscretionary]
  -[HMMutableHomeManagerConfiguration cachePolicy]
  -[HMMutableHomeManagerConfiguration initWithOptions:cachePolicy:]
  -[HMMutableHomeManagerConfiguration locationAuthorization]
  -[HMMutableHomeManagerConfiguration setLocationAuthorization:]
  -[HMMutableHomeManagerConfiguration shouldConnect]


HMDeviceSetupRequestMessage : TRRequestMessage /System/Library/PrivateFrameworks/InstallCoordination.framework/InstallCoordination
 @property  NSData *payload

  // class methods
  +[HMDeviceSetupRequestMessage supportsSecureCoding]

  // instance methods
  -[HMDeviceSetupRequestMessage init]
  -[HMDeviceSetupRequestMessage encodeWithCoder:]
  -[HMDeviceSetupRequestMessage initWithCoder:]
  -[HMDeviceSetupRequestMessage .cxx_destruct]
  -[HMDeviceSetupRequestMessage initWithPayload:]
  -[HMDeviceSetupRequestMessage payload]


HMPBEncodeOption : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasIsXPC
 @property  BOOL isXPC
 @property  BOOL hasIsSPI
 @property  BOOL isSPI

  // instance methods
  -[HMPBEncodeOption isEqual:]
  -[HMPBEncodeOption copyWithZone:]
  -[HMPBEncodeOption dictionaryRepresentation]
  -[HMPBEncodeOption writeTo:]
  -[HMPBEncodeOption mergeFrom:]
  -[HMPBEncodeOption readFrom:]
  -[HMPBEncodeOption copyTo:]
  -[HMPBEncodeOption setIsXPC:]
  -[HMPBEncodeOption setHasIsXPC:]
  -[HMPBEncodeOption hasIsXPC]
  -[HMPBEncodeOption setIsSPI:]
  -[HMPBEncodeOption setHasIsSPI:]
  -[HMPBEncodeOption hasIsSPI]
  -[HMPBEncodeOption isXPC]
  -[HMPBEncodeOption isSPI]


HMDIdentifierSaltStore : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *identifierSalt
 @property  NSData *assistantIdentifierSalt

  // instance methods
  -[HMDIdentifierSaltStore init]
  -[HMDIdentifierSaltStore .cxx_destruct]
  -[HMDIdentifierSaltStore identifierSalt]
  -[HMDIdentifierSaltStore setIdentifierSalt:]
  -[HMDIdentifierSaltStore assistantIdentifierSalt]
  -[HMDIdentifierSaltStore setAssistantIdentifierSalt:]


HMDemoCameraClip : HMCameraClip
 @property  NSURL *clipURL

  // instance methods
  -[HMDemoCameraClip .cxx_destruct]
  -[HMDemoCameraClip initWithClipURL:startDate:duration:significantEvents:]
  -[HMDemoCameraClip initWithCameraProfile:clipURL:startDate:duration:significantEvents:]
  -[HMDemoCameraClip clipURL]


_HMCameraStreamControl : _HMCameraControl
 @property  unsigned long streamState
 @property  NSString *streamSessionID
 @property  <_HMCameraStreamControlDelegate> *delegate
 @property  HMCameraStream *cameraStream

  // instance methods
  -[_HMCameraStreamControl dealloc]
  -[_HMCameraStreamControl delegate]
  -[_HMCameraStreamControl setDelegate:]
  -[_HMCameraStreamControl .cxx_destruct]
  -[_HMCameraStreamControl initWithCameraProfile:service:profileUniqueIdentifier:]
  -[_HMCameraStreamControl streamState]
  -[_HMCameraStreamControl cameraStream]
  -[_HMCameraStreamControl startStreamWithPreferences:]
  -[_HMCameraStreamControl stopStream]
  -[_HMCameraStreamControl _registerNotificationHandlers]
  -[_HMCameraStreamControl homedRestarted:]
  -[_HMCameraStreamControl _resetState:]
  -[_HMCameraStreamControl setCameraStream:]
  -[_HMCameraStreamControl setStreamSessionID:]
  -[_HMCameraStreamControl setStreamState:]
  -[_HMCameraStreamControl _callVideoStoppedDelegate:]
  -[_HMCameraStreamControl _handleVideoStreamStopped:]
  -[_HMCameraStreamControl streamSessionID]
  -[_HMCameraStreamControl _startStreamWithPreferences:]
  -[_HMCameraStreamControl _handleNegotiateStreamResponse:streamPreferences:error:sessionID:]
  -[_HMCameraStreamControl _handleVideoStreamStartResponse:streamPreferences:error:sessionID:]
  -[_HMCameraStreamControl _callVideoStartedDelegate]
  -[_HMCameraStreamControl _stopStream]
  -[_HMCameraStreamControl _handleVideoStopResponse:error:sessionID:]


NSError(HMError)
	// class methods
	+[NSError(HMError) hmErrorWithCode:]
	+[NSError(HMError) hmErrorWithCode:description:reason:suggestion:underlyingError:]
	+[NSError(HMError) hmErrorWithCode:userInfo:]
	+[NSError(HMError) hmInternalErrorWithCode:underlyingError:]
	+[NSError(HMError) hmErrorWithCode:description:reason:suggestion:]
	+[NSError(HMError) hmInternalErrorWithCode:]
	+[NSError(HMError) hmPrivateErrorWithCode:]
	+[NSError(HMError) hmInternalErrorWithCode:userInfo:]
	+[NSError(HMError) hmPrivateErrorWithCode:underlyingError:]

	// instance methods
	-[NSError(HMError) isHMError]

HMFMessage(CLLocation)
	// instance methods
	-[HMFMessage(CLLocation) locationForKey:]

NSXPCInterface(HMSetupRemoteProtocols)
	// class methods
	+[NSXPCInterface(HMSetupRemoteProtocols) hm_userManagementRemoteServiceInterface]
	+[NSXPCInterface(HMSetupRemoteProtocols) hm_userManagementRemoteHostInterface]
	+[NSXPCInterface(HMSetupRemoteProtocols) hm_setupRemoteServiceInterface]
	+[NSXPCInterface(HMSetupRemoteProtocols) hm_setupRemoteHostInterface]

INControlHomeIntent(Logging)
	// instance methods
	-[INControlHomeIntent(Logging) shortDescriptionWithOutcome:]

CLLocationManager(HomeLocation)
	// class methods
	+[CLLocationManager(HomeLocation) referenceFrameDescription:]
	+[CLLocationManager(HomeLocation) convertAuthStatusToBool:]
	+[CLLocationManager(HomeLocation) locationAuthorizationDescription:]
	+[CLLocationManager(HomeLocation) regionStateDescription:]
	+[CLLocationManager(HomeLocation) regionDescription:]
	+[CLLocationManager(HomeLocation) convertToHMDLocationAuthorization:]
	+[CLLocationManager(HomeLocation) hmdLocationAuthorizationAsString:]
	+[CLLocationManager(HomeLocation) convertToHMDRegionState:]
	+[CLLocationManager(HomeLocation) hmdRegionStateAsString:]

NSDictionary(HomeLocation)
	// instance methods
	-[NSDictionary(HomeLocation) regionFromDataForKey:]
	-[NSDictionary(HomeLocation) locationFromDataForKey:]

NSCoder(HMExtensions)
	// instance methods
	-[NSCoder(HMExtensions) decodeArrayOfConditionalObjects:forKey:]
	-[NSCoder(HMExtensions) encodeArrayOfConditionalObjects:forKey:]
	-[NSCoder(HMExtensions) encodeSetOfConditionalObjects:forKey:]
	-[NSCoder(HMExtensions) decodeSetOfConditionalObjects:forKey:]

NSData(HomeKit)
	// instance methods
	-[NSData(HomeKit) stringInHexFormat]
	-[NSData(HomeKit) generateSHA1]

NSString(HomeKit)
	// instance methods
	-[NSString(HomeKit) generateSHA1]

NSDate(HomeKit)
	// class methods
	+[NSDate(HomeKit) dayOfTheWeek]
	+[NSDate(HomeKit) iso8601dateFromString:]

NSMapTable(HomeKit)
	// instance methods
	-[NSMapTable(HomeKit) allKeys]

NSUUID(HomeKitClient)
	// class methods
	+[NSUUID(HomeKitClient) deriveUUIDFromBaseUUID:withSalts:]
	+[NSUUID(HomeKitClient) deriveUUIDFromBaseUUID:]
	+[NSUUID(HomeKitClient) deriveUUIDFromBaseUUID:identifierSalt:withSalts:]
	+[NSUUID(HomeKitClient) setIdentifierSalt:assistantSalt:]
	+[NSUUID(HomeKitClient) uuid:identifierSalt:withSalts:]
	+[NSUUID(HomeKitClient) deriveUUIDFromBaseUUID:identifierSalt:]
	+[NSUUID(HomeKitClient) deriveUUIDForAssistantFromBaseUUID:]
	+[NSUUID(HomeKitClient) deriveUUIDForAssistantFromBaseUUID:withSalts:]

	// instance methods
	-[NSUUID(HomeKitClient) convertToData]

01 00 0700 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 0900 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAnisetteData 
01 00 0900 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKDevice 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAContext 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDeviceToDeviceShareInvitationToken 
01 00 0600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchShareParticipantsOperation 
01 00 0600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 0600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKShare 
01 00 0600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKUserIdentityLookupInfo 
01 00 0a00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLBeaconRegion 
01 00 0a00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLCircularRegion 
01 00 0a00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0a00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0a00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLRegion 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFActivity 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFAttributeDescription 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFDigest 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFKey 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFLocationAuthorization 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFLogCategory 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessage 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessageDestination 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessageDispatcher 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessageTransport 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMutableMessage 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFOSTransaction 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFObject 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFOperation 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPairingIdentity 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPreferences 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPrivateObjectFormatter 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFScheduler 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFSoftwareVersion 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFTimer 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFUnfairLock 
01 00 0c00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFWiFiNetworkInfo 
01 00 0400 /System/Library/Frameworks/Intents.framework/Intents: INControlHomeIntent 
01 00 0e00 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAFuture 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1400 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0f00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1100 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHACommandCompleted 
01 00 0100 /System/Library/PrivateFrameworks/TouchRemote.framework/TouchRemote: TRRequestMessage 
01 00 0100 /System/Library/PrivateFrameworks/TouchRemote.framework/TouchRemote: TRResponseMessage 
01 00 0300 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0300 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0300 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0300 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0300 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
