|| __DATA.__common _kInvalidHMPresenceEventActivationGranularity
|| __DATA.__common _kInvalidHMPresenceEventType
|| __DATA.__common _kInvalidHMPresenceEventUserType
|| __DATA.__data _HMAccessorySetHasOnboardedForNaturalLightingMessage
|| __DATA.__data _HMAccessorySettingsPartialFetchFailureInformationPayloadKey
|| __DATA.__data _HMAssistantSyncDataCacheUpdatedNotification
|| __DATA.__data _HMHomeManagerAppleTVAccessoryAddedNotification
|| __DATA.__data _HMHomeManagerGenerationCounterNotification
|| __DATA.__data _HMHomeManagerHomePodsConfiguredChangedNotification
|| __DATA.__data _HMHomeManagerPreferencesChangedNotification
|| __DATA.__data _HMHomeManagerSmallHomePodsConfiguredChangedNotification
|| __DATA.__data _HMHomeManagerSpeakersConfiguredChangedNotification
|| __DATA.__data _HMHomeManagerTelevisionAccessoryAddedNotification
|| __DATA.__data _HMMediaSystemAudioDestinationCodingKey
|| __DATA.__data _HMUserCloudShareManagerRepairWakePrefix
|| __DATA.__data _HMUserCloudShareManagerWakePrefix
|| __DATA.__data _HMUserCloudShareMultiUserStatusChangedNotification
|| __DATA.__data _kAddMediaSystemRequest
|| __DATA.__data _kMediaSystemBuilderSessionIDKey
|| __DATA.__data _kMediaSystemCodingKey
|| __DATA.__data _kMediaSystemCompatibleCodingKey
|| __DATA.__data _kMediaSystemComponentRoleCodingKey
|| __DATA.__data _kMediaSystemComponentUUIDCodingKey
|| __DATA.__data _kMediaSystemComponentsCodingKey
|| __DATA.__data _kMediaSystemConfiguredNameCodingKey
|| __DATA.__data _kMediaSystemHandlerCodingKey
|| __DATA.__data _kMediaSystemNameCodingKey
|| __DATA.__data _kMediaSystemRemovedMessage
|| __DATA.__data _kMediaSystemRoleTypeCodingKey
|| __DATA.__data _kMediaSystemRootSettingsCodingKey
|| __DATA.__data _kMediaSystemRootSettingsUpdatedNotification
|| __DATA.__data _kMediaSystemSetAppDataRequestKey
|| __DATA.__data _kMediaSystemUUIDCodingKey
|| __DATA.__data _kMediaSystemUpdatedNotification
|| __DATA.__data _kMediaSystemsCodingKey
|| __DATA.__data _kRemoveMediaSystemRequest
|| __DATA.__data _kUpdateMediaSystemRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessCodeAddRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessCodeAddRequestValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessCodeConstraints
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessCodeManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessCodeModificationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessCodeModificationResponseValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessCodeRemoveRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessCodeRemoveRequestValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessCodeUpdateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessCodeUpdateRequestValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessCodeUserInformation
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessCodeUserInformationValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessCodeValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryAccessCode
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryAccessCodeConstraintsFetchResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryAccessCodeConstraintsFetchResponseValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryAccessCodeFetchResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryAccessCodeFetchResponseValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryAccessCodeValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryAdvertisementInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryAllowedHost
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryBrowser
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryCategory
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryCollectionSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryCollectionSettingItem
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryDataSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryDiagnosticsMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryDiagnosticsOptions
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryEventTopic
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryInfoDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryInfoEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryInfoProtoAccessoryInfoEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryInfoProtoWifiNetworkInfoEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryInfoWifiInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryInvitation
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryNetworkAccessViolation
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryNumberSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryOwnershipToken
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySelectionSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySelectionSettingItem
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettingConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettingFetchResult
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettingGroup
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettings
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettingsAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettingsController
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettingsFetchRequestMessagePayload
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettingsFetchResponseMessagePayload
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettingsMessageDispatcherFinishSendingMessageEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettingsMessageDispatcherStartSendingMessageEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettingsPartialFetchFailureInformation
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySettingsUpdateRequestMessagePayload
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySetupCompletedInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySetupManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySetupPayload
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySetupRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessorySetupResult
|| __DATA.__objc_data _OBJC_CLASS_$_HMAccessoryStringSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMAddAccessoryRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMAttributeReadRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMAttributeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMAttributeResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMAttributeWriteRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMAudioControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMBatchRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMBooleanSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMBoundedIntegerSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMBulletinBoardNotification
|| __DATA.__objc_data _OBJC_CLASS_$_HMBulletinBoardNotificationServiceGroup
|| __DATA.__objc_data _OBJC_CLASS_$_HMBulletinObjectTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPAccessoryPairing
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPAccessorySetupPayload
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPEcosystem
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPEcosystemConfigureAccessoryRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPEcosystemConfigureAccessoryResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPEcosystemFetchRoomsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPEcosystemFetchRoomsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPEcosystemMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPEcosystemPairAccessoryRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPEcosystemPairAccessoryResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPEcosystemRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPEcosystemResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPHome
|| __DATA.__objc_data _OBJC_CLASS_$_HMCHIPVendor
|| __DATA.__objc_data _OBJC_CLASS_$_HMCacheEntry
|| __DATA.__objc_data _OBJC_CLASS_$_HMCalendarEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraActivityZone
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraAudioCodec
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraAudioControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraBulletinBoardNotificationCondition
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraBulletinBoardSmartNotification
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClip
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipAssetContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipDecryptionManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipDownloadAssetDataTask
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipEncryptedDataContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipEncryptionContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipEncryptionManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipFetchVideoAssetContextOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipSignificantEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipVideoAssetContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipVideoDataSegment
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipVideoFileCombiner
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipVideoHLSPlaylistGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipVideoInitSegment
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraClipVideoSegment
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraObjectFetchClient
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraObjectFetchServer
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraRecordingEventManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraRecordingReachabilityEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraRecordingReachabilityEventManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraSettingsControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraSignificantEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraSignificantEventPersonFamiliarityNotificationCondition
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraSignificantEventReasonNotificationCondition
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraSnapshotControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraSource
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraStream
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraStreamAudioPreferences
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraStreamControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraStreamPreferences
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraStreamVideoPreferences
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraUserNotificationSettings
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraUserSettings
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraVideoResolution
|| __DATA.__objc_data _OBJC_CLASS_$_HMCameraView
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicBatchRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicReadRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicThresholdRangeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMCharacteristicWriteRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMClientContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMCollectionSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMCollectionSettingItem
|| __DATA.__objc_data _OBJC_CLASS_$_HMCoreAnalyticsBooleanFieldData
|| __DATA.__objc_data _OBJC_CLASS_$_HMCoreAnalyticsFieldData
|| __DATA.__objc_data _OBJC_CLASS_$_HMCoreAnalyticsIntegerFieldData
|| __DATA.__objc_data _OBJC_CLASS_$_HMCoreAnalyticsMetricEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMCoreAnalyticsStringFieldData
|| __DATA.__objc_data _OBJC_CLASS_$_HMCoreAnalyticsTimedMetricEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDataSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMDemoCameraClip
|| __DATA.__objc_data _OBJC_CLASS_$_HMDevice
|| __DATA.__objc_data _OBJC_CLASS_$_HMDeviceSetupOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDeviceSetupOperationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDeviceSetupRequestMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HMDeviceSetupResponseMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HMDeviceSetupSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDurationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMEventTopicHelper
|| __DATA.__objc_data _OBJC_CLASS_$_HMExecuteRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMFObjectCacheHMAccessoryCategory
|| __DATA.__objc_data _OBJC_CLASS_$_HMFaceClassification
|| __DATA.__objc_data _OBJC_CLASS_$_HMFaceCrop
|| __DATA.__objc_data _OBJC_CLASS_$_HMFaceprint
|| __DATA.__objc_data _OBJC_CLASS_$_HMHTMLDocument
|| __DATA.__objc_data _OBJC_CLASS_$_HMHomeAccessCode
|| __DATA.__objc_data _OBJC_CLASS_$_HMHomeAccessCodeValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMHomeCloudShareResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMHomeEventTopic
|| __DATA.__objc_data _OBJC_CLASS_$_HMHomeFetchLightProfileSettingsResult
|| __DATA.__objc_data _OBJC_CLASS_$_HMHomeInvitationData
|| __DATA.__objc_data _OBJC_CLASS_$_HMHomePersonManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMHomeWalletKey
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingChangeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingValueEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingsProtoAvailableLanguageListEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingsProtoBoolSettingEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingsProtoBoolValueEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingsProtoBoundedIntegerSettingEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingsProtoIntegerValueEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingsProtoLanguageSettingEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingsProtoLanguageValueEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingsProtoSettingChangeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingsProtoStringSettingEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingsProtoStringValueEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableSettingsProtoValueEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMImmutableStringSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMIncomingHomeInvitationData
|| __DATA.__objc_data _OBJC_CLASS_$_HMLanguageSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMLanguageValueListSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMLightProfileSettings
|| __DATA.__objc_data _OBJC_CLASS_$_HMLocationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMManagedConfigurationProfileInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMMatterHome
|| __DATA.__objc_data _OBJC_CLASS_$_HMMatterRequestHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMMatterRoom
|| __DATA.__objc_data _OBJC_CLASS_$_HMMatterTopology
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaContentProfileAccessControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaDestination
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaDestinationController
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaDestinationControllerData
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaGroupProtoJoinedMediaDestination
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaGroupProtoJoinedMediaParticipantData
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaGroupProtoMediaDestination
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaGroupProtoMediaDestinationAggregateData
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaGroupProtoMediaDestinationControllerData
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaGroupProtoMediaGroupData
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaGroupProtoMediaSystemRoles
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaProfile
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaSystemBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaSystemComponent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMediaSystemRole
|| __DATA.__objc_data _OBJC_CLASS_$_HMMultiUserSettingsForMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_HMMultiuserSettingsMessenger
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableAccessorySettingsPartialFetchFailureInformation
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableAssistantAccessControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableCHIPAccessoryPairing
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableCHIPAccessorySetupPayload
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableCHIPEcosystem
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableCHIPHome
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableCHIPVendor
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableCalendarEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableCameraBulletinBoardNotificationCondition
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableCameraUserNotificationSettings
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableCharacteristicEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableCharacteristicThresholdRangeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableClientContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableDurationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableHomePersonManagerSettings
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableHomeWalletKeyDeviceState
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableLocationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableMediaContentProfileAccessControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableMediaDestination
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableMediaDestinationControllerData
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableMediaPlaybackAction
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableMediaSystemComponent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutablePerson
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutablePersonFaceCrop
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutablePhotosPersonManagerSettings
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutablePresenceEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableReportContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableSetupAccessoryPayload
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableSignificantTimeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableUserInviteInformation
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableUserListeningHistoryUpdateControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMMutableXPCMessageTransportConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMNetworkConfigurationProfile
|| __DATA.__objc_data _OBJC_CLASS_$_HMNetworkConfigurationWiFiOptions
|| __DATA.__objc_data _OBJC_CLASS_$_HMNumberRange
|| __DATA.__objc_data _OBJC_CLASS_$_HMNumberSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMOutgoingHomeInvitationData
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBAccessoryReference
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBActionContainer
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBActionSet
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBCharacteristicReference
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBCharacteristicWriteAction
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBEncodeOption
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBHomeReference
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBMediaPlaybackAction
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBNaturalLightingAction
|| __DATA.__objc_data _OBJC_CLASS_$_HMPBServiceReference
|| __DATA.__objc_data _OBJC_CLASS_$_HMParsedEventTopic
|| __DATA.__objc_data _OBJC_CLASS_$_HMPerson
|| __DATA.__objc_data _OBJC_CLASS_$_HMPersonFaceCrop
|| __DATA.__objc_data _OBJC_CLASS_$_HMPersonLink
|| __DATA.__objc_data _OBJC_CLASS_$_HMPersonManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMPhotosPersonManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMPlainTextDocument
|| __DATA.__objc_data _OBJC_CLASS_$_HMPoint
|| __DATA.__objc_data _OBJC_CLASS_$_HMPredicateUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_HMPresenceEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMPresenceEventActivation
|| __DATA.__objc_data _OBJC_CLASS_$_HMRemoteLoginAnisetteDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_HMRemoteLoginHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMRemovedUserInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMReportContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMRequestBase
|| __DATA.__objc_data _OBJC_CLASS_$_HMResponseBase
|| __DATA.__objc_data _OBJC_CLASS_$_HMSelectionSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMSelectionSettingItem
|| __DATA.__objc_data _OBJC_CLASS_$_HMSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMSettingBooleanValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMSettingConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_HMSettingIntegerValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMSettingLanguageValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMSettingStringValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMSettingValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMSettingVersionValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMSetupAccessoryDescription
|| __DATA.__objc_data _OBJC_CLASS_$_HMSetupAccessoryPayload
|| __DATA.__objc_data _OBJC_CLASS_$_HMSignificantTimeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMSiriEndpointApplyOnboardingSelectionsPayload
|| __DATA.__objc_data _OBJC_CLASS_$_HMSiriEndpointApplyOnboardingSelectionsResponsePayload
|| __DATA.__objc_data _OBJC_CLASS_$_HMSiriEndpointDeleteSiriHistoryMessagePayload
|| __DATA.__objc_data _OBJC_CLASS_$_HMSiriEndpointOnboardingSelections
|| __DATA.__objc_data _OBJC_CLASS_$_HMSiriEndpointProfile
|| __DATA.__objc_data _OBJC_CLASS_$_HMSiriEndpointProfileAssistant
|| __DATA.__objc_data _OBJC_CLASS_$_HMSoftwareUpdateController
|| __DATA.__objc_data _OBJC_CLASS_$_HMSoftwareUpdateDocumentation
|| __DATA.__objc_data _OBJC_CLASS_$_HMSoftwareUpdateDocumentationMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMStringListSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMStringSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMSupportedAccessoryDiagnostics
|| __DATA.__objc_data _OBJC_CLASS_$_HMSymptom
|| __DATA.__objc_data _OBJC_CLASS_$_HMSymptomFixSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMTelevisionProfile
|| __DATA.__objc_data _OBJC_CLASS_$_HMThreadExternalCommissioner
|| __DATA.__objc_data _OBJC_CLASS_$_HMThreadNetworkCredentials
|| __DATA.__objc_data _OBJC_CLASS_$_HMThreadNetworkMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMTimeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMTriggerDeleteAfterExecutionPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_HMTriggerDeletePolicy
|| __DATA.__objc_data _OBJC_CLASS_$_HMTriggerPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_HMUserActionPredictionDuetPredictionStore
|| __DATA.__objc_data _OBJC_CLASS_$_HMUserActionPredictionDuetPredictionValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMUserCloudShareClientInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMUserCloudShareInvitation
|| __DATA.__objc_data _OBJC_CLASS_$_HMUserCloudShareRepairInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMUserCloudShareWithOwnerOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMUserInviteInformation
|| __DATA.__objc_data _OBJC_CLASS_$_HMUserListeningHistoryUpdateControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMXPCEventRouterProtoEventsMessage
|| __DATA.__objc_data _OBJC_CLASS_$__HMAccessorySetting
|| __DATA.__objc_data _OBJC_CLASS_$__HMAccessorySettingGroup
|| __DATA.__objc_data _OBJC_CLASS_$__HMCameraControl
|| __DATA.__objc_data _OBJC_CLASS_$__HMCameraProfile
|| __DATA.__objc_data _OBJC_CLASS_$__HMCameraStreamControl
|| __DATA.__objc_data _OBJC_CLASS_$__HMCameraUserSettings
|| __DATA.__objc_data _OBJC_CLASS_$__HMLightProfile
|| __DATA.__objc_data _OBJC_CLASS_$__HMMediaProfile
|| __DATA.__objc_data _OBJC_CLASS_$__HMMutableCameraUserSettings
|| __DATA.__objc_data _OBJC_CLASS_$__HMSiriEndpointProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessCodeAddRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessCodeAddRequestValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessCodeConstraints
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessCodeManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessCodeModificationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessCodeModificationResponseValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessCodeRemoveRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessCodeRemoveRequestValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessCodeUpdateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessCodeUpdateRequestValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessCodeUserInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessCodeUserInformationValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessCodeValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryAccessCode
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryAccessCodeConstraintsFetchResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryAccessCodeConstraintsFetchResponseValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryAccessCodeFetchResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryAccessCodeFetchResponseValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryAccessCodeValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryAdvertisementInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryAllowedHost
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryBrowser
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryCollectionSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryCollectionSettingItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryDataSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryDiagnosticsMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryDiagnosticsOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryEventTopic
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryInfoDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryInfoEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryInfoProtoAccessoryInfoEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryInfoProtoWifiNetworkInfoEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryInfoWifiInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryInvitation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryNetworkAccessViolation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryNumberSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryOwnershipToken
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySelectionSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySelectionSettingItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettingConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettingFetchResult
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettingGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettingsAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettingsController
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettingsFetchRequestMessagePayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettingsFetchResponseMessagePayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettingsMessageDispatcherFinishSendingMessageEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettingsMessageDispatcherStartSendingMessageEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettingsPartialFetchFailureInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySettingsUpdateRequestMessagePayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySetupCompletedInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySetupManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySetupPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySetupRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessorySetupResult
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAccessoryStringSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAddAccessoryRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAttributeReadRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAttributeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAttributeResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAttributeWriteRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMAudioControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMBatchRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMBooleanSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMBoundedIntegerSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMBulletinBoardNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_HMBulletinBoardNotificationServiceGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_HMBulletinObjectTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPAccessoryPairing
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPAccessorySetupPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPEcosystem
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPEcosystemConfigureAccessoryRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPEcosystemConfigureAccessoryResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPEcosystemFetchRoomsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPEcosystemFetchRoomsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPEcosystemMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPEcosystemPairAccessoryRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPEcosystemPairAccessoryResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPEcosystemRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPEcosystemResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPHome
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCHIPVendor
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCacheEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCalendarEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraActivityZone
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraAudioCodec
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraAudioControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraBulletinBoardNotificationCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraBulletinBoardSmartNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClip
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipAssetContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipDecryptionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipDownloadAssetDataTask
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipEncryptedDataContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipEncryptionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipEncryptionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipFetchVideoAssetContextOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipSignificantEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipVideoAssetContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipVideoDataSegment
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipVideoFileCombiner
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipVideoHLSPlaylistGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipVideoInitSegment
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraClipVideoSegment
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraObjectFetchClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraObjectFetchServer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraRecordingEventManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraRecordingReachabilityEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraRecordingReachabilityEventManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraSettingsControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraSignificantEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraSignificantEventPersonFamiliarityNotificationCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraSignificantEventReasonNotificationCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraSnapshotControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraStream
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraStreamAudioPreferences
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraStreamControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraStreamPreferences
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraStreamVideoPreferences
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraUserNotificationSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraUserSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraVideoResolution
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCameraView
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicBatchRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicReadRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicThresholdRangeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCharacteristicWriteRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMClientContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCollectionSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCollectionSettingItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCoreAnalyticsBooleanFieldData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCoreAnalyticsFieldData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCoreAnalyticsIntegerFieldData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCoreAnalyticsMetricEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCoreAnalyticsStringFieldData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMCoreAnalyticsTimedMetricEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDataSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDemoCameraClip
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDeviceSetupOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDeviceSetupOperationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDeviceSetupRequestMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDeviceSetupResponseMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDeviceSetupSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDurationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEventTopicHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_HMExecuteRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFObjectCacheHMAccessoryCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFaceClassification
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFaceCrop
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFaceprint
|| __DATA.__objc_data _OBJC_METACLASS_$_HMHTMLDocument
|| __DATA.__objc_data _OBJC_METACLASS_$_HMHomeAccessCode
|| __DATA.__objc_data _OBJC_METACLASS_$_HMHomeAccessCodeValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMHomeCloudShareResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMHomeEventTopic
|| __DATA.__objc_data _OBJC_METACLASS_$_HMHomeFetchLightProfileSettingsResult
|| __DATA.__objc_data _OBJC_METACLASS_$_HMHomeInvitationData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMHomePersonManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMHomeWalletKey
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingChangeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingValueEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingsProtoAvailableLanguageListEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingsProtoBoolSettingEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingsProtoBoolValueEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingsProtoBoundedIntegerSettingEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingsProtoIntegerValueEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingsProtoLanguageSettingEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingsProtoLanguageValueEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingsProtoSettingChangeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingsProtoStringSettingEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingsProtoStringValueEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableSettingsProtoValueEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMImmutableStringSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMIncomingHomeInvitationData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMLanguageSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMLanguageValueListSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMLightProfileSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HMLocationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMManagedConfigurationProfileInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMatterHome
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMatterRequestHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMatterRoom
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMatterTopology
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaContentProfileAccessControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaDestinationController
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaDestinationControllerData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaGroupProtoJoinedMediaDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaGroupProtoJoinedMediaParticipantData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaGroupProtoMediaDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaGroupProtoMediaDestinationAggregateData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaGroupProtoMediaDestinationControllerData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaGroupProtoMediaGroupData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaGroupProtoMediaSystemRoles
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaSystemBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaSystemComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMediaSystemRole
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMultiUserSettingsForMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMultiuserSettingsMessenger
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableAccessorySettingsPartialFetchFailureInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableAssistantAccessControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableCHIPAccessoryPairing
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableCHIPAccessorySetupPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableCHIPEcosystem
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableCHIPHome
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableCHIPVendor
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableCalendarEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableCameraBulletinBoardNotificationCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableCameraUserNotificationSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableCharacteristicEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableCharacteristicThresholdRangeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableClientContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableDurationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableHomePersonManagerSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableHomeWalletKeyDeviceState
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableLocationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableMediaContentProfileAccessControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableMediaDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableMediaDestinationControllerData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableMediaPlaybackAction
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableMediaSystemComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutablePerson
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutablePersonFaceCrop
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutablePhotosPersonManagerSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutablePresenceEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableReportContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableSetupAccessoryPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableSignificantTimeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableUserInviteInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableUserListeningHistoryUpdateControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMMutableXPCMessageTransportConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMNetworkConfigurationProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMNetworkConfigurationWiFiOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_HMNumberRange
|| __DATA.__objc_data _OBJC_METACLASS_$_HMNumberSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMOutgoingHomeInvitationData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBAccessoryReference
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBActionContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBActionSet
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBCharacteristicReference
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBCharacteristicWriteAction
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBEncodeOption
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBHomeReference
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBMediaPlaybackAction
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBNaturalLightingAction
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPBServiceReference
|| __DATA.__objc_data _OBJC_METACLASS_$_HMParsedEventTopic
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPerson
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPersonFaceCrop
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPersonLink
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPersonManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPhotosPersonManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPlainTextDocument
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPoint
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPredicateUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPresenceEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMPresenceEventActivation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMRemoteLoginAnisetteDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_HMRemoteLoginHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMRemovedUserInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMReportContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMRequestBase
|| __DATA.__objc_data _OBJC_METACLASS_$_HMResponseBase
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSelectionSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSelectionSettingItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSettingBooleanValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSettingConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSettingIntegerValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSettingLanguageValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSettingStringValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSettingValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSettingVersionValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSetupAccessoryDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSetupAccessoryPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSignificantTimeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSiriEndpointApplyOnboardingSelectionsPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSiriEndpointApplyOnboardingSelectionsResponsePayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSiriEndpointDeleteSiriHistoryMessagePayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSiriEndpointOnboardingSelections
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSiriEndpointProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSiriEndpointProfileAssistant
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSoftwareUpdateController
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSoftwareUpdateDocumentation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSoftwareUpdateDocumentationMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMStringListSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMStringSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSupportedAccessoryDiagnostics
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSymptom
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSymptomFixSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMTelevisionProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMThreadExternalCommissioner
|| __DATA.__objc_data _OBJC_METACLASS_$_HMThreadNetworkCredentials
|| __DATA.__objc_data _OBJC_METACLASS_$_HMThreadNetworkMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMTimeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMTriggerDeleteAfterExecutionPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_HMTriggerDeletePolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_HMTriggerPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUserActionPredictionDuetPredictionStore
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUserActionPredictionDuetPredictionValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUserCloudShareClientInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUserCloudShareInvitation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUserCloudShareRepairInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUserCloudShareWithOwnerOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUserInviteInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMUserListeningHistoryUpdateControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMXPCEventRouterProtoEventsMessage
|| __DATA.__objc_data _OBJC_METACLASS_$__HMAccessorySetting
|| __DATA.__objc_data _OBJC_METACLASS_$__HMAccessorySettingGroup
|| __DATA.__objc_data _OBJC_METACLASS_$__HMCameraControl
|| __DATA.__objc_data _OBJC_METACLASS_$__HMCameraProfile
|| __DATA.__objc_data _OBJC_METACLASS_$__HMCameraStreamControl
|| __DATA.__objc_data _OBJC_METACLASS_$__HMCameraUserSettings
|| __DATA.__objc_data _OBJC_METACLASS_$__HMLightProfile
|| __DATA.__objc_data _OBJC_METACLASS_$__HMMediaProfile
|| __DATA.__objc_data _OBJC_METACLASS_$__HMMutableCameraUserSettings
|| __DATA.__objc_data _OBJC_METACLASS_$__HMSiriEndpointProfile
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMAccessoryInfoProtoAccessoryInfoEvent._accessoryInfoEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMAccessoryInfoProtoAccessoryInfoEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMAccessoryInfoProtoAccessoryInfoEvent._readOnly
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMAccessoryInfoProtoAccessoryInfoEvent._wifiNetworkInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMAccessoryInfoProtoWifiNetworkInfoEvent._macAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMAccessoryInfoProtoWifiNetworkInfoEvent._networkSSID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMAccessorySettingConstraint._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoAvailableLanguageListEvent._languages
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoBoolSettingEvent._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoBoolValueEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoBoolValueEvent._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoBoundedIntegerSettingEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoBoundedIntegerSettingEvent._maxValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoBoundedIntegerSettingEvent._minValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoBoundedIntegerSettingEvent._stepValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoBoundedIntegerSettingEvent._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoIntegerValueEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoIntegerValueEvent._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoLanguageSettingEvent._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoLanguageValueEvent._inputLanguageCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoLanguageValueEvent._outputVoiceGenderCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoLanguageValueEvent._outputVoiceLanguageCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoLanguageValueEvent._voiceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoSettingChangeEvent._availableLanguages
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoSettingChangeEvent._boolSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoSettingChangeEvent._boundedIntegerSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoSettingChangeEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoSettingChangeEvent._keyPath
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoSettingChangeEvent._languageSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoSettingChangeEvent._readOnly
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoSettingChangeEvent._settingChangeEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoSettingChangeEvent._stringSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoStringSettingEvent._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoStringValueEvent._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoValueEvent._boolValueEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoValueEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoValueEvent._integerValueEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoValueEvent._languageValueEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoValueEvent._settingValueEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMImmutableSettingsProtoValueEvent._stringValueEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoJoinedMediaDestination._group
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoJoinedMediaDestination._mediaDestination
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoJoinedMediaParticipantData._destination
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoJoinedMediaParticipantData._destinationController
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaDestination._audioGroupIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaDestination._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaDestination._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaDestination._parentIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaDestination._supportedOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaDestinationAggregateData._destinationControllerDatas
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaDestinationAggregateData._destinations
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaDestinationAggregateData._groups
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaDestinationControllerData._availableDestinations
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaDestinationControllerData._destinationIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaDestinationControllerData._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaDestinationControllerData._parentIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaGroupData._associatedGroupIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaGroupData._destinationIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaGroupData._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaGroupData._mediaSystem
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaGroupData._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaGroupData._parentIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaSystemRoles._leftDestinationIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMMediaGroupProtoMediaSystemRoles._rightDestinationIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBAccessoryReference._homeReference
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBAccessoryReference._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionContainer._characteristicWriteAction
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionContainer._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionContainer._mediaPlaybackAction
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionContainer._naturalLightingAction
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionContainer._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionSet._actionSetType
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionSet._actions
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionSet._homeUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionSet._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBActionSet._uuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBCharacteristicReference._serviceReference
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBCharacteristicReference._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBCharacteristicWriteAction._actionUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBCharacteristicWriteAction._characteristicReference
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBCharacteristicWriteAction._targetValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBEncodeOption._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBEncodeOption._isSPI
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBEncodeOption._isXPC
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBHomeReference._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMediaPlaybackAction._actionUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMediaPlaybackAction._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMediaPlaybackAction._mediaPlaybackState
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMediaPlaybackAction._mediaProfiles
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMediaPlaybackAction._playbackArchive
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMediaPlaybackAction._volume
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._hapCategories
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._hapCharacteristics
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._hapServices
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._version
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataCategory._desc
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataCategory._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataCategory._number
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataCategory._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataCharacteristic._desc
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataCharacteristic._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataService._desc
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadataService._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBNaturalLightingAction._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBNaturalLightingAction._lightProfileUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBNaturalLightingAction._naturalLightingEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBNaturalLightingAction._uuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBServiceReference._accessoryReference
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBServiceReference._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMUserActionPredictionDuetPredictionStore._predictions
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMUserActionPredictionDuetPredictionValue._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMUserActionPredictionDuetPredictionValue._homeIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMUserActionPredictionDuetPredictionValue._predictionType
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMUserActionPredictionDuetPredictionValue._score
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMUserActionPredictionDuetPredictionValue._targetAccessoryServiceIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMUserActionPredictionDuetPredictionValue._targetIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMXPCEventRouterProtoEventsMessage._cachedEvents
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMXPCEventRouterProtoEventsMessage._events
|| __DATA.__objc_ivar _OBJC_IVAR_$__HMCameraControl._lock
|| __DATA_CONST.__const _HMAccessCodeManagerDidAddAccessoryAccessCodesMessage
|| __DATA_CONST.__const _HMAccessCodeManagerDidAddHomeAccessCodesMessage
|| __DATA_CONST.__const _HMAccessCodeManagerDidRemoveAccessoryAccessCodesMessage
|| __DATA_CONST.__const _HMAccessCodeManagerDidRemoveHomeAccessCodesMessage
|| __DATA_CONST.__const _HMAccessCodeManagerDidUpdateAccessoryAccessCodesMessage
|| __DATA_CONST.__const _HMAccessCodeManagerDidUpdateHomeAccessCodesMessage
|| __DATA_CONST.__const _HMAccessCodeManagerFetchAccessCodeConstraintsMessage
|| __DATA_CONST.__const _HMAccessCodeManagerFetchAccessCodesMessage
|| __DATA_CONST.__const _HMAccessCodeManagerFetchCachedAccessCodesMessage
|| __DATA_CONST.__const _HMAccessCodeManagerFetchHomeAccessCodesMessage
|| __DATA_CONST.__const _HMAccessCodeManagerGenerateNewUserAccessCodeMessage
|| __DATA_CONST.__const _HMAccessCodeManagerMessageKeyAccessCodeModificationRequests
|| __DATA_CONST.__const _HMAccessCodeManagerMessageKeyAccessCodeModificationResponseValues
|| __DATA_CONST.__const _HMAccessCodeManagerMessageKeyAccessCodeString
|| __DATA_CONST.__const _HMAccessCodeManagerMessageKeyAccessCodeValue
|| __DATA_CONST.__const _HMAccessCodeManagerMessageKeyAccessoryAccessCodeConstraintsFetchResponseValues
|| __DATA_CONST.__const _HMAccessCodeManagerMessageKeyAccessoryAccessCodeFetchResponseValues
|| __DATA_CONST.__const _HMAccessCodeManagerMessageKeyAccessoryAccessCodeValues
|| __DATA_CONST.__const _HMAccessCodeManagerMessageKeyAccessoryUUIDs
|| __DATA_CONST.__const _HMAccessCodeManagerMessageKeyHomeAccessCodeValue
|| __DATA_CONST.__const _HMAccessCodeManagerMessageKeyHomeAccessCodeValues
|| __DATA_CONST.__const _HMAccessCodeManagerMessageKeyUserInformationValue
|| __DATA_CONST.__const _HMAccessCodeManagerMessageKeyUserUUIDString
|| __DATA_CONST.__const _HMAccessCodeManagerRemoveHomeAccessCodeMessage
|| __DATA_CONST.__const _HMAccessCodeManagerRemoveSimpleLabelAccessCodeMessage
|| __DATA_CONST.__const _HMAccessCodeManagerResetAccessoryAccessCodesMessage
|| __DATA_CONST.__const _HMAccessCodeManagerSetAccessCodeForUserMessage
|| __DATA_CONST.__const _HMAccessCodeManagerSetUserInformationMessage
|| __DATA_CONST.__const _HMAccessCodeManagerSubmitAccessCodeModificationRequestsMessage
|| __DATA_CONST.__const _HMAccessCodeManagerSubscribeMessage
|| __DATA_CONST.__const _HMAccessCodeManagerUnsubscribeMessage
|| __DATA_CONST.__const _HMAccessControlUserCodingKey
|| __DATA_CONST.__const _HMAccessoryActivateCHIPPairingModeAndCreateSetupPayloadStringMessage
|| __DATA_CONST.__const _HMAccessoryActivateCHIPPairingModeMessage
|| __DATA_CONST.__const _HMAccessoryAddControlTargetsMessageKey
|| __DATA_CONST.__const _HMAccessoryAllowedHostAddressesCodingKey
|| __DATA_CONST.__const _HMAccessoryAllowedHostNameCodingKey
|| __DATA_CONST.__const _HMAccessoryAllowedHostPurposeCodingKey
|| __DATA_CONST.__const _HMAccessoryAllowedHostUnrestrictedCodingKey
|| __DATA_CONST.__const _HMAccessoryAllowedHostsCodingKey
|| __DATA_CONST.__const _HMAccessoryAssociationOptionsCodingKey
|| __DATA_CONST.__const _HMAccessoryAudioDestinationCodingKey
|| __DATA_CONST.__const _HMAccessoryAudioDestinationControllerCodingKey
|| __DATA_CONST.__const _HMAccessoryAudioDestinationControllerDataCodingKey
|| __DATA_CONST.__const _HMAccessoryAuditPairingsMessageKey
|| __DATA_CONST.__const _HMAccessoryAuthMethodMessageKey
|| __DATA_CONST.__const _HMAccessoryCHIPPairingsMessageKey
|| __DATA_CONST.__const _HMAccessoryCHIPSetupPayloadStringMessageKey
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAirConditioner
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAirDehumidifier
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAirHeater
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAirHumidifier
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAirPort
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAirPurifier
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAppleTV
|| __DATA_CONST.__const _HMAccessoryCategoryTypeAudioReceiver
|| __DATA_CONST.__const _HMAccessoryCategoryTypeBridge
|| __DATA_CONST.__const _HMAccessoryCategoryTypeDoor
|| __DATA_CONST.__const _HMAccessoryCategoryTypeDoorLock
|| __DATA_CONST.__const _HMAccessoryCategoryTypeFan
|| __DATA_CONST.__const _HMAccessoryCategoryTypeFaucet
|| __DATA_CONST.__const _HMAccessoryCategoryTypeGarageDoorOpener
|| __DATA_CONST.__const _HMAccessoryCategoryTypeHomePod
|| __DATA_CONST.__const _HMAccessoryCategoryTypeIPCamera
|| __DATA_CONST.__const _HMAccessoryCategoryTypeLightbulb
|| __DATA_CONST.__const _HMAccessoryCategoryTypeOther
|| __DATA_CONST.__const _HMAccessoryCategoryTypeOutlet
|| __DATA_CONST.__const _HMAccessoryCategoryTypeProgrammableSwitch
|| __DATA_CONST.__const _HMAccessoryCategoryTypeRangeExtender
|| __DATA_CONST.__const _HMAccessoryCategoryTypeSecuritySystem
|| __DATA_CONST.__const _HMAccessoryCategoryTypeSensor
|| __DATA_CONST.__const _HMAccessoryCategoryTypeShowerHead
|| __DATA_CONST.__const _HMAccessoryCategoryTypeSpeaker
|| __DATA_CONST.__const _HMAccessoryCategoryTypeSprinkler
|| __DATA_CONST.__const _HMAccessoryCategoryTypeSwitch
|| __DATA_CONST.__const _HMAccessoryCategoryTypeTargetController
|| __DATA_CONST.__const _HMAccessoryCategoryTypeTelevision
|| __DATA_CONST.__const _HMAccessoryCategoryTypeTelevisionDeprecated
|| __DATA_CONST.__const _HMAccessoryCategoryTypeTelevisionSetTopBox
|| __DATA_CONST.__const _HMAccessoryCategoryTypeTelevisionStreamingStick
|| __DATA_CONST.__const _HMAccessoryCategoryTypeThermostat
|| __DATA_CONST.__const _HMAccessoryCategoryTypeVideoDoorbell
|| __DATA_CONST.__const _HMAccessoryCategoryTypeWiFiRouter
|| __DATA_CONST.__const _HMAccessoryCategoryTypeWindow
|| __DATA_CONST.__const _HMAccessoryCategoryTypeWindowCovering
|| __DATA_CONST.__const _HMAccessoryCertificationStatusCodingKey
|| __DATA_CONST.__const _HMAccessoryConfigureControlTargetsMessage
|| __DATA_CONST.__const _HMAccessoryConfiguredProtectionGroupUUIDCodingKey
|| __DATA_CONST.__const _HMAccessoryConnectivityChangedNotification
|| __DATA_CONST.__const _HMAccessoryConnectivityInfoCodingKey
|| __DATA_CONST.__const _HMAccessoryControlTargetsCodingKey
|| __DATA_CONST.__const _HMAccessoryControlTargetsMessageKey
|| __DATA_CONST.__const _HMAccessoryControlTargetsUpdatedMessage
|| __DATA_CONST.__const _HMAccessoryControllableCodingKey
|| __DATA_CONST.__const _HMAccessoryControllableMessageKey
|| __DATA_CONST.__const _HMAccessoryControllableUpdatedMessage
|| __DATA_CONST.__const _HMAccessoryCurrentAccessoryCodingKey
|| __DATA_CONST.__const _HMAccessoryCurrentNetworkProtectionModeCodingKey
|| __DATA_CONST.__const _HMAccessoryDeleteSiriHistoryRequestMessage
|| __DATA_CONST.__const _HMAccessoryDeviceCodingKey
|| __DATA_CONST.__const _HMAccessoryDiagnosticsDelayKey
|| __DATA_CONST.__const _HMAccessoryDiagnosticsEnableClipsKey
|| __DATA_CONST.__const _HMAccessoryDiagnosticsLogSizeKey
|| __DATA_CONST.__const _HMAccessoryDiagnosticsMetadataCodingKey
|| __DATA_CONST.__const _HMAccessoryDiagnosticsRecordAudioKey
|| __DATA_CONST.__const _HMAccessoryDiagnosticsTransferRequestMessage
|| __DATA_CONST.__const _HMAccessoryDiagnosticsTransferSupportCodingKey
|| __DATA_CONST.__const _HMAccessoryDiagnosticsTransferSupportMessageKey
|| __DATA_CONST.__const _HMAccessoryDiagnosticsTransferUpdatedMessage
|| __DATA_CONST.__const _HMAccessoryDiagnosticsTypeKey
|| __DATA_CONST.__const _HMAccessoryDidUpdateCHIPPairingsMessage
|| __DATA_CONST.__const _HMAccessoryFetchCHIPPairingsMessage
|| __DATA_CONST.__const _HMAccessoryFetchManagedConfigurationProfilesMessage
|| __DATA_CONST.__const _HMAccessoryHasOnboardedForNaturalLightingKey
|| __DATA_CONST.__const _HMAccessoryHomeLevelLocationServiceSettingCodingKey
|| __DATA_CONST.__const _HMAccessoryInfoWifiKeyPath
|| __DATA_CONST.__const _HMAccessoryListControlTargetsMessageKey
|| __DATA_CONST.__const _HMAccessoryManagedConfigurationIdentifierMessageKey
|| __DATA_CONST.__const _HMAccessoryManagedConfigurationProfilesCodingKey
|| __DATA_CONST.__const _HMAccessoryMultiUserSupportCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkAccessViolationCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkAccessViolationLastOccurrenceDateCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkAccessViolationLastResetDateCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkConfigurationRestrictedCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupAddedNotification
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupCategoryCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupManufacturerCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupMessageKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupProtectionModeCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupProtectionModeMessageKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupProtectionModeUpdateRequest
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupRemovedNotification
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupUUIDCodingKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionGroupUUIDMessageKey
|| __DATA_CONST.__const _HMAccessoryNetworkProtectionSupportCodingKey
|| __DATA_CONST.__const _HMAccessoryPairingIdentityCodingKey
|| __DATA_CONST.__const _HMAccessoryPairingIdentityIncludePrivateKeyMessageKey
|| __DATA_CONST.__const _HMAccessoryPairingIdentityRequestMessage
|| __DATA_CONST.__const _HMAccessoryPairingIdentityUpdatedNotification
|| __DATA_CONST.__const _HMAccessoryPendingConfigurationIdentifierKey
|| __DATA_CONST.__const _HMAccessoryPreferredMediaUserCodingKey
|| __DATA_CONST.__const _HMAccessoryPreferredMediaUserIsAutomaticMessageKey
|| __DATA_CONST.__const _HMAccessoryPreferredMediaUserSelectionTypeMessageKey
|| __DATA_CONST.__const _HMAccessoryPreferredUserSelectionTypeCodingKey
|| __DATA_CONST.__const _HMAccessoryProtectionGroupUUIDCodingKey
|| __DATA_CONST.__const _HMAccessoryReachableTransportsMessageKey
|| __DATA_CONST.__const _HMAccessoryRemoteLoginCodingKey
|| __DATA_CONST.__const _HMAccessoryRemoveCHIPPairingsMessage
|| __DATA_CONST.__const _HMAccessoryRemoveControlTargetsMessageKey
|| __DATA_CONST.__const _HMAccessoryRemoveManagedConfigurationProfileMessage
|| __DATA_CONST.__const _HMAccessoryResetControlTargetsMessageKey
|| __DATA_CONST.__const _HMAccessoryRootSettingsCodingKey
|| __DATA_CONST.__const _HMAccessoryRootSettingsMessageKey
|| __DATA_CONST.__const _HMAccessorySerializedDataKey
|| __DATA_CONST.__const _HMAccessorySettingAddConstraintMessage
|| __DATA_CONST.__const _HMAccessorySettingAddedNotification
|| __DATA_CONST.__const _HMAccessorySettingConstraintAddMessageKey
|| __DATA_CONST.__const _HMAccessorySettingConstraintMessageKey
|| __DATA_CONST.__const _HMAccessorySettingConstraintRemoveMessageKey
|| __DATA_CONST.__const _HMAccessorySettingConstraintsCodingKey
|| __DATA_CONST.__const _HMAccessorySettingGroupAddedNotification
|| __DATA_CONST.__const _HMAccessorySettingGroupGroupsCodingKey
|| __DATA_CONST.__const _HMAccessorySettingGroupIdentifierCodingKey
|| __DATA_CONST.__const _HMAccessorySettingGroupNameCodingKey
|| __DATA_CONST.__const _HMAccessorySettingGroupNotificationKey
|| __DATA_CONST.__const _HMAccessorySettingGroupRemovedNotification
|| __DATA_CONST.__const _HMAccessorySettingGroupSettingsCodingKey
|| __DATA_CONST.__const _HMAccessorySettingIdentifierCodingKey
|| __DATA_CONST.__const _HMAccessorySettingNameCodingKey
|| __DATA_CONST.__const _HMAccessorySettingNotificationKey
|| __DATA_CONST.__const _HMAccessorySettingPropertiesCodingKey
|| __DATA_CONST.__const _HMAccessorySettingReflectedCodingKey
|| __DATA_CONST.__const _HMAccessorySettingReflectedUpdatedNotification
|| __DATA_CONST.__const _HMAccessorySettingRemoveConstraintMessage
|| __DATA_CONST.__const _HMAccessorySettingRemovedNotification
|| __DATA_CONST.__const _HMAccessorySettingReplaceConstraintsMessage
|| __DATA_CONST.__const _HMAccessorySettingTypeCodingKey
|| __DATA_CONST.__const _HMAccessorySettingUpdateConstraintsMessage
|| __DATA_CONST.__const _HMAccessorySettingUpdateValueMessage
|| __DATA_CONST.__const _HMAccessorySettingValueCodingKey
|| __DATA_CONST.__const _HMAccessorySettingValueMessageKey
|| __DATA_CONST.__const _HMAccessorySettingValueUpdatedNotification
|| __DATA_CONST.__const _HMAccessorySettingsFetchRequestMessage
|| __DATA_CONST.__const _HMAccessorySettingsMessengerTargetNameSpace
|| __DATA_CONST.__const _HMAccessorySettingsRootGroupKeyPath
|| __DATA_CONST.__const _HMAccessorySettingsUpdateRequestMessage
|| __DATA_CONST.__const _HMAccessorySettingsUpdatedMessage
|| __DATA_CONST.__const _HMAccessorySetupCoordinatorCancelStagedCHIPAccessoryPairingMessage
|| __DATA_CONST.__const _HMAccessorySetupCoordinatorCreateCHIPSetupAccessoryPayloadMessage
|| __DATA_CONST.__const _HMAccessorySetupCoordinatorCreateCHIPSetupPayloadStringMessage
|| __DATA_CONST.__const _HMAccessorySetupCoordinatorMessageKeyCHIPAccessoryPairingIdentifier
|| __DATA_CONST.__const _HMAccessorySetupCoordinatorMessageKeyCHIPSetupPayloadDecimalStringRepresentation
|| __DATA_CONST.__const _HMAccessorySetupCoordinatorMessageKeySetupAccessoryPayload
|| __DATA_CONST.__const _HMAccessorySetupCoordinatorMessageKeySetupPayloadString
|| __DATA_CONST.__const _HMAccessorySetupCoordinatorMessageKeySetupPayloadURL
|| __DATA_CONST.__const _HMAccessorySetupCoordinatorStageCHIPAccessoryPairingMessage
|| __DATA_CONST.__const _HMAccessorySetupManagerFailAccessorySetupMessage
|| __DATA_CONST.__const _HMAccessorySetupManagerFetchPendingSetupAccessoryDescriptionMessage
|| __DATA_CONST.__const _HMAccessorySetupManagerFinishAccessorySetupMessage
|| __DATA_CONST.__const _HMAccessorySetupManagerMessageKeyAccessorySetupCompletedInfo
|| __DATA_CONST.__const _HMAccessorySetupManagerMessageKeyError
|| __DATA_CONST.__const _HMAccessorySetupManagerMessageKeyMatterTopology
|| __DATA_CONST.__const _HMAccessorySetupManagerMessageKeyRequest
|| __DATA_CONST.__const _HMAccessorySetupManagerMessageKeyResult
|| __DATA_CONST.__const _HMAccessorySetupManagerMessageKeySetupAccessoryDescription
|| __DATA_CONST.__const _HMAccessorySetupManagerMessageKeyUserInfo
|| __DATA_CONST.__const _HMAccessorySetupManagerPerformAccessorySetupMessage
|| __DATA_CONST.__const _HMAccessorySetupManagerPerformMatterEcosystemAccessorySetupMessage
|| __DATA_CONST.__const _HMAccessorySetupManagerResumeAccessorySetupMessage
|| __DATA_CONST.__const _HMAccessorySoftwareUpdateCodingKey
|| __DATA_CONST.__const _HMAccessorySoftwareVersionCodingKey
|| __DATA_CONST.__const _HMAccessorySupportedDiagnosticsCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsAccessCodeCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsAnnounceCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsCHIPCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsCompanionInitiatedRestartCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsCoordinationDoorbellChimeCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsDoorbellChimeCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsIdentifyCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsManagedConfigurationProfileCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsMediaAccessControlCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsMessagedHomePodSettingsCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsMusicAlarmCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsPreferredMediaUserCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsUserMediaSettingsCodingKey
|| __DATA_CONST.__const _HMAccessorySupportsWalletCodingKey
|| __DATA_CONST.__const _HMAccessorySuspendStateCodingKey
|| __DATA_CONST.__const _HMAccessorySymptomsHandlerUpdatedMessage
|| __DATA_CONST.__const _HMAccessoryTargetControlSupportCodingKey
|| __DATA_CONST.__const _HMAccessoryTargetControlSupportMessageKey
|| __DATA_CONST.__const _HMAccessoryTargetControlUpdatedMessage
|| __DATA_CONST.__const _HMAccessoryTargetControllerHardwareSupportCodingKey
|| __DATA_CONST.__const _HMAccessoryTargetControllerHardwareSupportMessageKey
|| __DATA_CONST.__const _HMAccessoryTargetControllerSupportCodingKey
|| __DATA_CONST.__const _HMAccessoryTargetControllerSupportMessageKey
|| __DATA_CONST.__const _HMAccessoryTargetNetworkProtectionModeCodingKey
|| __DATA_CONST.__const _HMAccessoryTriggerPairingIdentityUpdatedNotificationRequest
|| __DATA_CONST.__const _HMAccessoryUUIDPayloadKey
|| __DATA_CONST.__const _HMAccessoryUpdateControlTargetsMessageKey
|| __DATA_CONST.__const _HMAccessoryUpdatePendingConfigurationIdentifierMessage
|| __DATA_CONST.__const _HMAccessoryUpdatePreferredMediaUserRequestMessage
|| __DATA_CONST.__const _HMAccessoryUpdateShouldProcessTransactionRemovalValuePayloadKey
|| __DATA_CONST.__const _HMAccessoryUpdateShouldProcessTransactionRemovalValueRequestMessage
|| __DATA_CONST.__const _HMAccessoryValidateAuthMethodRequestMessage
|| __DATA_CONST.__const _HMAccessoryWakeSuspendedAccessoryMessage
|| __DATA_CONST.__const _HMAccessoryWakeSuspendedAccessoryWakeTypeKey
|| __DATA_CONST.__const _HMAccessoryWiFiCredentialTypeCodingKey
|| __DATA_CONST.__const _HMAccessoryWiFiNetworkInfoCodingKey
|| __DATA_CONST.__const _HMAccessoryWiFiReconfigurationSupportCodingKey
|| __DATA_CONST.__const _HMAccessorysupportsThirdPartyMusicCodingKey
|| __DATA_CONST.__const _HMActionSetNameKeyHomeArrival
|| __DATA_CONST.__const _HMActionSetNameKeyHomeDeparture
|| __DATA_CONST.__const _HMActionSetNameKeySleep
|| __DATA_CONST.__const _HMActionSetNameKeyWakeUp
|| __DATA_CONST.__const _HMActionSetSerializedDataKey
|| __DATA_CONST.__const _HMActionSetSerializedDictionaryProtocolKey
|| __DATA_CONST.__const _HMActionSetSerializedDictionaryProtocolProtoBuf
|| __DATA_CONST.__const _HMActionSetSerializedDictionaryVersionKey
|| __DATA_CONST.__const _HMActionSetSerializedDictionaryVersion_1_0
|| __DATA_CONST.__const _HMActionSetShortcutsActionsCodingKey
|| __DATA_CONST.__const _HMActionSetTypeHomeArrival
|| __DATA_CONST.__const _HMActionSetTypeHomeDeparture
|| __DATA_CONST.__const _HMActionSetTypeShortcutsComponent
|| __DATA_CONST.__const _HMActionSetTypeSleep
|| __DATA_CONST.__const _HMActionSetTypeTriggerOwned
|| __DATA_CONST.__const _HMActionSetTypeUserDefined
|| __DATA_CONST.__const _HMActionSetTypeWakeUp
|| __DATA_CONST.__const _HMActiveAssertionAdaptiveMessageKey
|| __DATA_CONST.__const _HMActiveAssertionMessage
|| __DATA_CONST.__const _HMActiveAssertionStateMessageKey
|| __DATA_CONST.__const _HMActivityIdentifierKey
|| __DATA_CONST.__const _HMActivityMetricIdentifierKey
|| __DATA_CONST.__const _HMActivityNameKey
|| __DATA_CONST.__const _HMAddAccessoryRequestAccessoryDescriptionCodingKey
|| __DATA_CONST.__const _HMAddAccessoryRequestAccessoryNameCodingKey
|| __DATA_CONST.__const _HMAddAccessoryRequestCategoryCodingKey
|| __DATA_CONST.__const _HMAddAccessoryRequestIdentifierCodingKey
|| __DATA_CONST.__const _HMAppStoreIDAppShack
|| __DATA_CONST.__const _HMAppStoreIDLocal
|| __DATA_CONST.__const _HMAppleTVAccessoriesConfiguredStatusKey
|| __DATA_CONST.__const _HMAssistantAccessControlAccessoriesCodingKey
|| __DATA_CONST.__const _HMAssistantAccessControlActivityNotificationsEnabledForPersonalRequestsCodingKey
|| __DATA_CONST.__const _HMAssistantAccessControlEnabledCodingKey
|| __DATA_CONST.__const _HMAssistantAccessControlOptionsCodingKey
|| __DATA_CONST.__const _HMAssistantObjectTagAccessory
|| __DATA_CONST.__const _HMAssistantObjectTagActionSet
|| __DATA_CONST.__const _HMAssistantObjectTagDestinationController
|| __DATA_CONST.__const _HMAssistantObjectTagHome
|| __DATA_CONST.__const _HMAssistantObjectTagMediaGroup
|| __DATA_CONST.__const _HMAssistantObjectTagRoom
|| __DATA_CONST.__const _HMAssistantObjectTagService
|| __DATA_CONST.__const _HMAssistantObjectTagServiceGroup
|| __DATA_CONST.__const _HMAssistantObjectTagTrigger
|| __DATA_CONST.__const _HMAssistantObjectTagZone
|| __DATA_CONST.__const _HMAssistantSyncDataCacheFileName
|| __DATA_CONST.__const _HMAttributeNameACTIVE
|| __DATA_CONST.__const _HMAttributeNameNATURALLIGHTING
|| __DATA_CONST.__const _HMBulletinCameraClipIDKey
|| __DATA_CONST.__const _HMBulletinCameraNotificationIDKey
|| __DATA_CONST.__const _HMBulletinCameraProfileIDKey
|| __DATA_CONST.__const _HMBulletinCameraSignificantEventUUIDsKey
|| __DATA_CONST.__const _HMBulletinContextAccessoryIDKey
|| __DATA_CONST.__const _HMBulletinContextCharacteristicIDKey
|| __DATA_CONST.__const _HMBulletinContextHomeIDKey
|| __DATA_CONST.__const _HMBulletinContextHomeNameKey
|| __DATA_CONST.__const _HMBulletinContextRoomServiceNameKey
|| __DATA_CONST.__const _HMBulletinContextServiceIDKey
|| __DATA_CONST.__const _HMBulletinContextTriggerIDKey
|| __DATA_CONST.__const _HMBulletinContextTriggerNameKey
|| __DATA_CONST.__const _HMBulletinDateKey
|| __DATA_CONST.__const _HMBulletinReasonDoorbellPressed
|| __DATA_CONST.__const _HMBulletinReasonKey
|| __DATA_CONST.__const _HMBulletinReasonMotionDetected
|| __DATA_CONST.__const _HMBulletinReasonSignificantEvent
|| __DATA_CONST.__const _HMCHIPEcosystemMessageDataKey
|| __DATA_CONST.__const _HMCHIPEcosystemMessageTypeConfigureAccessory
|| __DATA_CONST.__const _HMCHIPEcosystemMessageTypeFetchRooms
|| __DATA_CONST.__const _HMCHIPEcosystemMessageTypeKey
|| __DATA_CONST.__const _HMCHIPEcosystemMessageTypePairAccessory
|| __DATA_CONST.__const _HMCHIPEcosystemUUIDKey
|| __DATA_CONST.__const _HMCameraClipHLSPlaylistEncryptionKeyURLString
|| __DATA_CONST.__const _HMCameraClipHTTPHeaderNameStreamingAssetVersion
|| __DATA_CONST.__const _HMCameraClipManagerDeleteAllClipsMessage
|| __DATA_CONST.__const _HMCameraClipManagerDeleteClipMessage
|| __DATA_CONST.__const _HMCameraClipManagerDidChangeClipsMessage
|| __DATA_CONST.__const _HMCameraClipManagerDidChangeSignificantEventsMessage
|| __DATA_CONST.__const _HMCameraClipManagerDidFetchSignificantEventsMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchClipForSignificantEventMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchClipMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchClipsMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchCountOfClipsMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchFaceCropDataRepresentationMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchFaceCropURLMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchHeroFrameDataRepresentationMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchHeroFrameURLMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchSignificantEventsMessage
|| __DATA_CONST.__const _HMCameraClipManagerFetchVideoSegmentsAssetContextMessage
|| __DATA_CONST.__const _HMCameraClipManagerHandleFaceMisclassificationMessage
|| __DATA_CONST.__const _HMCameraClipManagerImportClipsMessage
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyAssetContext
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyClip
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyClipImportData
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyClipUUID
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyClipUUIDs
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyCountOfClips
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyDataRepresentation
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyDateAfter
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyDateBefore
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyFetchedURL
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyLimit
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyQuality
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyRemovedClipUUIDs
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyRemovedSignificantEventUUIDs
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyShouldOrderAscending
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeySignificantEventUUIDs
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeySignificantEvents
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyUpdatedClips
|| __DATA_CONST.__const _HMCameraClipManagerMessageKeyUpdatedSignificantEvents
|| __DATA_CONST.__const _HMCameraClipManagerPerformCloudPullMessage
|| __DATA_CONST.__const _HMCameraClipManagerSubmitClipsMessage
|| __DATA_CONST.__const _HMCameraClipManagerSubscribeMessage
|| __DATA_CONST.__const _HMCameraClipManagerUnsubscribeMessage
|| __DATA_CONST.__const _HMCameraObjectFetchClientDidFetchObjectsMessage
|| __DATA_CONST.__const _HMCameraObjectFetchClientMessageKeyFetchedObjects
|| __DATA_CONST.__const _HMCameraObjectFetchClientMessageKeyUUID
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerDeleteAllEventsMessage
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerDidChangeEventsMessage
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerFetchCountOfEventsMessage
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerFetchEventsMessage
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerMessageKeyCountOfEvents
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerMessageKeyDateAfter
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerMessageKeyDateBefore
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerMessageKeyLimit
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerMessageKeyRemovedEventsUUIDs
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerMessageKeyShouldOrderAscending
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerMessageKeyUpdatedEvents
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerMessageResponseKeyFetchedEvents
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerPerformCloudPullMessage
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerSubscribeMessage
|| __DATA_CONST.__const _HMCameraRecordingReachabilityEventManagerUnsubscribeMessage
|| __DATA_CONST.__const _HMCameraSignificantEventKeyPath
|| __DATA_CONST.__const _HMCameraSignificantEventPersonFamiliarityKeyPath
|| __DATA_CONST.__const _HMCameraStreamAudioVolumeSettingMessageKey
|| __DATA_CONST.__const _HMCameraStreamNegotiateStreamMessage
|| __DATA_CONST.__const _HMCameraStreamSetAudioStreamSettingMessage
|| __DATA_CONST.__const _HMCameraStreamSetAudioVolumeMessage
|| __DATA_CONST.__const _HMCameraStreamStopStreamMessage
|| __DATA_CONST.__const _HMCameraStreamStoppedMessage
|| __DATA_CONST.__const _HMCameraUserSettingsAccessModeChangeNotificationEnabledMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsAccessModeIndicatorEnabledMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsAccessModeMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsActivityZonesIncludedForSignificantEventDetectionMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsCodingKey
|| __DATA_CONST.__const _HMCameraUserSettingsDidUpdateMessage
|| __DATA_CONST.__const _HMCameraUserSettingsMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsNightVisionModeEnabledMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsPresenceTypeMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsReachabilityEventNotificationEnabledMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsRecordingAudioEnabledMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsRecordingTriggerMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsSnapshotsAllowedMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateAccessModeChangeNotificationEnabledMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateAccessModeIndicatorEnabledMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateAccessModeMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateActivityZonesMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateActivityZonesMessageKey
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateNightVisionModeEnabledMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateReachabilityEventNotificationEnabledMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateRecordingAudioEnabledMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateRecordingTriggerEventsMessage
|| __DATA_CONST.__const _HMCameraUserSettingsUpdateSnapshotsAllowedMessage
|| __DATA_CONST.__const _HMCharacteristicKeyPath
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatArray
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatBool
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatData
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatDictionary
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatFloat
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatInt
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatString
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatTLV8
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatUInt16
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatUInt32
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatUInt64
|| __DATA_CONST.__const _HMCharacteristicMetadataFormatUInt8
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsArcDegree
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsCelsius
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsFahrenheit
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsLux
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsMicrogramsPerCubicMeter
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsPartsPerMillion
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsPercentage
|| __DATA_CONST.__const _HMCharacteristicMetadataUnitsSeconds
|| __DATA_CONST.__const _HMCharacteristicPropertyHidden
|| __DATA_CONST.__const _HMCharacteristicPropertyReadable
|| __DATA_CONST.__const _HMCharacteristicPropertyRequiresAuthorizationData
|| __DATA_CONST.__const _HMCharacteristicPropertySupportsEventNotification
|| __DATA_CONST.__const _HMCharacteristicPropertyWritable
|| __DATA_CONST.__const _HMCharacteristicSerializedDataKey
|| __DATA_CONST.__const _HMCharacteristicTypeActive
|| __DATA_CONST.__const _HMCharacteristicTypeActiveIdentifier
|| __DATA_CONST.__const _HMCharacteristicTypeAdminOnlyAccess
|| __DATA_CONST.__const _HMCharacteristicTypeAirParticulateDensity
|| __DATA_CONST.__const _HMCharacteristicTypeAirParticulateSize
|| __DATA_CONST.__const _HMCharacteristicTypeAirQuality
|| __DATA_CONST.__const _HMCharacteristicTypeAudioFeedback
|| __DATA_CONST.__const _HMCharacteristicTypeBatteryLevel
|| __DATA_CONST.__const _HMCharacteristicTypeBrightness
|| __DATA_CONST.__const _HMCharacteristicTypeButtonEvent
|| __DATA_CONST.__const _HMCharacteristicTypeCarbonDioxideDetected
|| __DATA_CONST.__const _HMCharacteristicTypeCarbonDioxideLevel
|| __DATA_CONST.__const _HMCharacteristicTypeCarbonDioxidePeakLevel
|| __DATA_CONST.__const _HMCharacteristicTypeCarbonMonoxideDetected
|| __DATA_CONST.__const _HMCharacteristicTypeCarbonMonoxideLevel
|| __DATA_CONST.__const _HMCharacteristicTypeCarbonMonoxidePeakLevel
|| __DATA_CONST.__const _HMCharacteristicTypeChargingState
|| __DATA_CONST.__const _HMCharacteristicTypeClosedCaptions
|| __DATA_CONST.__const _HMCharacteristicTypeColorTemperature
|| __DATA_CONST.__const _HMCharacteristicTypeConfiguredName
|| __DATA_CONST.__const _HMCharacteristicTypeContactState
|| __DATA_CONST.__const _HMCharacteristicTypeCoolingThreshold
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentAirPurifierState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentDoorState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentFanState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentHeaterCoolerState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentHeatingCooling
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentHorizontalTilt
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentHumidifierDehumidifierState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentLightLevel
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentLockMechanismState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentMediaState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentPosition
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentRelativeHumidity
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentSecuritySystemState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentSlatState
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentTemperature
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentTilt
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentVerticalTilt
|| __DATA_CONST.__const _HMCharacteristicTypeCurrentVisibilityState
|| __DATA_CONST.__const _HMCharacteristicTypeDehumidifierThreshold
|| __DATA_CONST.__const _HMCharacteristicTypeDigitalZoom
|| __DATA_CONST.__const _HMCharacteristicTypeFilterChangeIndication
|| __DATA_CONST.__const _HMCharacteristicTypeFilterLifeLevel
|| __DATA_CONST.__const _HMCharacteristicTypeFilterResetChangeIndication
|| __DATA_CONST.__const _HMCharacteristicTypeFirmwareVersion
|| __DATA_CONST.__const _HMCharacteristicTypeHardwareVersion
|| __DATA_CONST.__const _HMCharacteristicTypeHeatingThreshold
|| __DATA_CONST.__const _HMCharacteristicTypeHoldPosition
|| __DATA_CONST.__const _HMCharacteristicTypeHue
|| __DATA_CONST.__const _HMCharacteristicTypeHumidifierThreshold
|| __DATA_CONST.__const _HMCharacteristicTypeIdentifier
|| __DATA_CONST.__const _HMCharacteristicTypeIdentify
|| __DATA_CONST.__const _HMCharacteristicTypeImageMirroring
|| __DATA_CONST.__const _HMCharacteristicTypeImageRotation
|| __DATA_CONST.__const _HMCharacteristicTypeInUse
|| __DATA_CONST.__const _HMCharacteristicTypeInputDeviceType
|| __DATA_CONST.__const _HMCharacteristicTypeInputEvent
|| __DATA_CONST.__const _HMCharacteristicTypeInputSourceType
|| __DATA_CONST.__const _HMCharacteristicTypeIsConfigured
|| __DATA_CONST.__const _HMCharacteristicTypeIsHidden
|| __DATA_CONST.__const _HMCharacteristicTypeLabelIndex
|| __DATA_CONST.__const _HMCharacteristicTypeLabelNamespace
|| __DATA_CONST.__const _HMCharacteristicTypeLeakDetected
|| __DATA_CONST.__const _HMCharacteristicTypeLockManagementAutoSecureTimeout
|| __DATA_CONST.__const _HMCharacteristicTypeLockManagementControlPoint
|| __DATA_CONST.__const _HMCharacteristicTypeLockMechanismLastKnownAction
|| __DATA_CONST.__const _HMCharacteristicTypeLockPhysicalControls
|| __DATA_CONST.__const _HMCharacteristicTypeLogs
|| __DATA_CONST.__const _HMCharacteristicTypeManufacturer
|| __DATA_CONST.__const _HMCharacteristicTypeModel
|| __DATA_CONST.__const _HMCharacteristicTypeMotionDetected
|| __DATA_CONST.__const _HMCharacteristicTypeMute
|| __DATA_CONST.__const _HMCharacteristicTypeName
|| __DATA_CONST.__const _HMCharacteristicTypeNightVision
|| __DATA_CONST.__const _HMCharacteristicTypeNitrogenDioxideDensity
|| __DATA_CONST.__const _HMCharacteristicTypeObstructionDetected
|| __DATA_CONST.__const _HMCharacteristicTypeOccupancyDetected
|| __DATA_CONST.__const _HMCharacteristicTypeOpticalZoom
|| __DATA_CONST.__const _HMCharacteristicTypeOutletInUse
|| __DATA_CONST.__const _HMCharacteristicTypeOutputState
|| __DATA_CONST.__const _HMCharacteristicTypeOzoneDensity
|| __DATA_CONST.__const _HMCharacteristicTypePM10Density
|| __DATA_CONST.__const _HMCharacteristicTypePM2_5Density
|| __DATA_CONST.__const _HMCharacteristicTypePictureMode
|| __DATA_CONST.__const _HMCharacteristicTypePositionState
|| __DATA_CONST.__const _HMCharacteristicTypePowerMode
|| __DATA_CONST.__const _HMCharacteristicTypePowerModeSelection
|| __DATA_CONST.__const _HMCharacteristicTypePowerState
|| __DATA_CONST.__const _HMCharacteristicTypeProgramMode
|| __DATA_CONST.__const _HMCharacteristicTypeRemainingDuration
|| __DATA_CONST.__const _HMCharacteristicTypeRemoteKey
|| __DATA_CONST.__const _HMCharacteristicTypeRotationDirection
|| __DATA_CONST.__const _HMCharacteristicTypeRotationSpeed
|| __DATA_CONST.__const _HMCharacteristicTypeSaturation
|| __DATA_CONST.__const _HMCharacteristicTypeSecuritySystemAlarmType
|| __DATA_CONST.__const _HMCharacteristicTypeSelectedAudioStreamConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSelectedCameraRecordingConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSelectedDiagnosticsModes
|| __DATA_CONST.__const _HMCharacteristicTypeSelectedStreamConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSerialNumber
|| __DATA_CONST.__const _HMCharacteristicTypeSetDuration
|| __DATA_CONST.__const _HMCharacteristicTypeSetupStreamEndpoint
|| __DATA_CONST.__const _HMCharacteristicTypeSlatType
|| __DATA_CONST.__const _HMCharacteristicTypeSleepDiscoveryMode
|| __DATA_CONST.__const _HMCharacteristicTypeSmokeDetected
|| __DATA_CONST.__const _HMCharacteristicTypeSoftwareVersion
|| __DATA_CONST.__const _HMCharacteristicTypeStatusActive
|| __DATA_CONST.__const _HMCharacteristicTypeStatusFault
|| __DATA_CONST.__const _HMCharacteristicTypeStatusJammed
|| __DATA_CONST.__const _HMCharacteristicTypeStatusLowBattery
|| __DATA_CONST.__const _HMCharacteristicTypeStatusTampered
|| __DATA_CONST.__const _HMCharacteristicTypeStreamingStatus
|| __DATA_CONST.__const _HMCharacteristicTypeSulphurDioxideDensity
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedAudioRecordingConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedAudioStreamConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedCameraRecordingConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedDiagnosticsModes
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedDiagnosticsSnapshot
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedRTPConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedTargetConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedVideoRecordingConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSupportedVideoStreamConfiguration
|| __DATA_CONST.__const _HMCharacteristicTypeSwingMode
|| __DATA_CONST.__const _HMCharacteristicTypeTargetAirPurifierState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetDoorState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetFanState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetHeaterCoolerState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetHeatingCooling
|| __DATA_CONST.__const _HMCharacteristicTypeTargetHorizontalTilt
|| __DATA_CONST.__const _HMCharacteristicTypeTargetHumidifierDehumidifierState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetList
|| __DATA_CONST.__const _HMCharacteristicTypeTargetLockMechanismState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetMediaState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetPosition
|| __DATA_CONST.__const _HMCharacteristicTypeTargetRelativeHumidity
|| __DATA_CONST.__const _HMCharacteristicTypeTargetSecuritySystemState
|| __DATA_CONST.__const _HMCharacteristicTypeTargetTemperature
|| __DATA_CONST.__const _HMCharacteristicTypeTargetTilt
|| __DATA_CONST.__const _HMCharacteristicTypeTargetVerticalTilt
|| __DATA_CONST.__const _HMCharacteristicTypeTargetVisibilityState
|| __DATA_CONST.__const _HMCharacteristicTypeTemperatureUnits
|| __DATA_CONST.__const _HMCharacteristicTypeValveType
|| __DATA_CONST.__const _HMCharacteristicTypeVersion
|| __DATA_CONST.__const _HMCharacteristicTypeVolatileOrganicCompoundDensity
|| __DATA_CONST.__const _HMCharacteristicTypeVolume
|| __DATA_CONST.__const _HMCharacteristicTypeVolumeControlType
|| __DATA_CONST.__const _HMCharacteristicTypeVolumeSelector
|| __DATA_CONST.__const _HMCharacteristicTypeWaterLevel
|| __DATA_CONST.__const _HMCharacteristicValueKeyPath
|| __DATA_CONST.__const _HMClientConnectionIDMSAccountUsernameModified
|| __DATA_CONST.__const _HMDeviceIDSDestinationStringCodingKey
|| __DATA_CONST.__const _HMDeviceIDSIdentifierCodingKey
|| __DATA_CONST.__const _HMDeviceRPDeviceIRKCodingKey
|| __DATA_CONST.__const _HMDeviceSetupFollowupIdentifier
|| __DATA_CONST.__const _HMDeviceSetupSessionCloseMessage
|| __DATA_CONST.__const _HMDeviceSetupSessionDataMessageKey
|| __DATA_CONST.__const _HMDeviceSetupSessionErrorMessageKey
|| __DATA_CONST.__const _HMDeviceSetupSessionIdentifierMessageKey
|| __DATA_CONST.__const _HMDeviceSetupSessionOpenMessage
|| __DATA_CONST.__const _HMDeviceSetupSessionReceiveDataMessage
|| __DATA_CONST.__const _HMDeviceSetupSessionRoleMessageKey
|| __DATA_CONST.__const _HMDeviceSetupSessionUserInfoMessageKey
|| __DATA_CONST.__const _HMErrorDomain
|| __DATA_CONST.__const _HMFeatureDomain
|| __DATA_CONST.__const _HMFetchAppleMediaAccessorySleepWakeStateKey
|| __DATA_CONST.__const _HMFetchAppleMediaAccessorySleepWakeStateMessage
|| __DATA_CONST.__const _HMHomeAccessControlOverrideCodingKey
|| __DATA_CONST.__const _HMHomeAccessNotAllowedReasonCodeCodingKey
|| __DATA_CONST.__const _HMHomeAccessoryErrorMessage
|| __DATA_CONST.__const _HMHomeAccessoryNetworkProtectionGroupsCodingKey
|| __DATA_CONST.__const _HMHomeAccessorySetupCodeFailureMessage
|| __DATA_CONST.__const _HMHomeAddAccessoryRequestDumpStateKey
|| __DATA_CONST.__const _HMHomeAddNetworkRouterEnabledCodingKey
|| __DATA_CONST.__const _HMHomeAddNetworkRouterEnabledMessageKey
|| __DATA_CONST.__const _HMHomeAddWalletKeyMessage
|| __DATA_CONST.__const _HMHomeAddWalletKeyMessageKeyOptions
|| __DATA_CONST.__const _HMHomeAddWalletKeyToPairedWatchesMessage
|| __DATA_CONST.__const _HMHomeAppBundleIdentifier
|| __DATA_CONST.__const _HMHomeAutomaticSoftwareUpdateEnabledCodingKey
|| __DATA_CONST.__const _HMHomeAutomaticThirdPartyAccessorySoftwareUpdateEnabledCodingKey
|| __DATA_CONST.__const _HMHomeBulletinNotificationsSupportedCodingKey
|| __DATA_CONST.__const _HMHomeConfirmResidentRequestKey
|| __DATA_CONST.__const _HMHomeDidAddWalletKeyMessage
|| __DATA_CONST.__const _HMHomeDidOnboardLocationServicesCodingKey
|| __DATA_CONST.__const _HMHomeDidRemoveWalletKeyMessage
|| __DATA_CONST.__const _HMHomeEnableExpressForWalletKeyMessage
|| __DATA_CONST.__const _HMHomeEnableExpressForWalletKeyMessageKeyAuthData
|| __DATA_CONST.__const _HMHomeEnableHomeAppleMediaNotificationsKey
|| __DATA_CONST.__const _HMHomeEnableMultiUserRequestKey
|| __DATA_CONST.__const _HMHomeErrorMessageKey
|| __DATA_CONST.__const _HMHomeExecuteActionsActionInfoKey
|| __DATA_CONST.__const _HMHomeExecuteActionsRequestKey
|| __DATA_CONST.__const _HMHomeFetchAvailableWalletKeyEncodedPKPassMessage
|| __DATA_CONST.__const _HMHomeFetchAvailableWalletKeyEncodedPKPassMessageKeyFileHandle
|| __DATA_CONST.__const _HMHomeFetchLastModifiedServiceOfTypeMessage
|| __DATA_CONST.__const _HMHomeFetchLightProfilesSettingsMessage
|| __DATA_CONST.__const _HMHomeFetchWalletKeyColorMessage
|| __DATA_CONST.__const _HMHomeFetchWalletKeyColorMessageKeyColor
|| __DATA_CONST.__const _HMHomeHasAnyUserAcknowledgedCameraRecordingOnboardingValueCodingKey
|| __DATA_CONST.__const _HMHomeHasOnboardedForAccessCodeCodingKey
|| __DATA_CONST.__const _HMHomeHasOnboardedForWalletKeyCodingKey
|| __DATA_CONST.__const _HMHomeHubStateCodingKey
|| __DATA_CONST.__const _HMHomeHubStateMessageKey
|| __DATA_CONST.__const _HMHomeHubStateUpdatedMessage
|| __DATA_CONST.__const _HMHomeInternalSetMinHomeKitVersionForAccessoryNetworkProtectionChangeRequest
|| __DATA_CONST.__const _HMHomeInternalSetMiniumumNetworkRouterSupportHomeKitVersionRequest
|| __DATA_CONST.__const _HMHomeIsUserAllowedAccessCodingKey
|| __DATA_CONST.__const _HMHomeJoinOrFormThreadNetworkMessageKey
|| __DATA_CONST.__const _HMHomeLocationForFeedbackLocationUpdateTimeStampKey
|| __DATA_CONST.__const _HMHomeLocationForFeedbackUsingCoreRoutineKey
|| __DATA_CONST.__const _HMHomeLocationForFeedbackUsingHomeKitKMeanKey
|| __DATA_CONST.__const _HMHomeLocationServicesEnabledCodingKey
|| __DATA_CONST.__const _HMHomeLocationStatusUpdateNotificationKey
|| __DATA_CONST.__const _HMHomeLocationStatusValueCodingKey
|| __DATA_CONST.__const _HMHomeLocationStatusValueKey
|| __DATA_CONST.__const _HMHomeManagerAccessoryIdentifierKey
|| __DATA_CONST.__const _HMHomeManagerAdapativeMessageKey
|| __DATA_CONST.__const _HMHomeManagerAddRequestKey
|| __DATA_CONST.__const _HMHomeManagerAssistantIdentifierSaltKey
|| __DATA_CONST.__const _HMHomeManagerAttemptHH2AutoMigrationMessage
|| __DATA_CONST.__const _HMHomeManagerAutoAddWalletKeySupressionAssertionAcquireMessage
|| __DATA_CONST.__const _HMHomeManagerAutoAddWalletKeySupressionAssertionReleaseMessage
|| __DATA_CONST.__const _HMHomeManagerCheckForAddAccessoryRequestsMessageKey
|| __DATA_CONST.__const _HMHomeManagerConnectivityInfoRequestMessage
|| __DATA_CONST.__const _HMHomeManagerConvertFirewallRulesMessageKey
|| __DATA_CONST.__const _HMHomeManagerDataSyncStateMessageKey
|| __DATA_CONST.__const _HMHomeManagerDestinationMessageKey
|| __DATA_CONST.__const _HMHomeManagerDumpStateCompositeSettingsMessageKey
|| __DATA_CONST.__const _HMHomeManagerDumpStateDaemonStateMessageKey
|| __DATA_CONST.__const _HMHomeManagerDumpStateEventRouterStateMessageKey
|| __DATA_CONST.__const _HMHomeManagerDumpStateMessage
|| __DATA_CONST.__const _HMHomeManagerDumpStateMessagesCountersMessageKey
|| __DATA_CONST.__const _HMHomeManagerDumpStateXPCMessagesCountersMessageKey
|| __DATA_CONST.__const _HMHomeManagerEnableUARPPacketCaptureEnableMessageKey
|| __DATA_CONST.__const _HMHomeManagerEnableUARPPacketCaptureMessage
|| __DATA_CONST.__const _HMHomeManagerEnableUARPPacketCapturePathMessageKey
|| __DATA_CONST.__const _HMHomeManagerEventRouterChangeRegistrationsMessageName
|| __DATA_CONST.__const _HMHomeManagerEventRouterEventUpdatesMessageName
|| __DATA_CONST.__const _HMHomeManagerFetchAddAccessoryRequestsMessageKey
|| __DATA_CONST.__const _HMHomeManagerForceFailROARMigrationMessageKey
|| __DATA_CONST.__const _HMHomeManagerIsDaemonRunningWithROARFramework
|| __DATA_CONST.__const _HMHomeManagerIsThisOSCapableOfRunningHH2
|| __DATA_CONST.__const _HMHomeManagerJSONDataRequestMessageKey
|| __DATA_CONST.__const _HMHomeManagerJSONToTLVFileDataMessageKey
|| __DATA_CONST.__const _HMHomeManagerLastRemovedCurrentAccessoryUUIDCodingKey
|| __DATA_CONST.__const _HMHomeManagerLocalNetworkPingMessageKey
|| __DATA_CONST.__const _HMHomeManagerMediaAccessoryControlRequestMessage
|| __DATA_CONST.__const _HMHomeManagerMessageKeyHomeUUID
|| __DATA_CONST.__const _HMHomeManagerMonitorDeviceMessageKey
|| __DATA_CONST.__const _HMHomeManagerMultiUserStatusMessageKey
|| __DATA_CONST.__const _HMHomeManagerNameValidationConflictNameKey
|| __DATA_CONST.__const _HMHomeManagerNameValidationOptionsMessageKey
|| __DATA_CONST.__const _HMHomeManagerOptionsMessageKey
|| __DATA_CONST.__const _HMHomeManagerPairingIdentityRequestMessage
|| __DATA_CONST.__const _HMHomeManagerPendingRequestsMessageKey
|| __DATA_CONST.__const _HMHomeManagerQueryHomeNamepaceMessage
|| __DATA_CONST.__const _HMHomeManagerQueryMetadataMessage
|| __DATA_CONST.__const _HMHomeManagerQueryNameMessageKey
|| __DATA_CONST.__const _HMHomeManagerQueryNameValidMessageKey
|| __DATA_CONST.__const _HMHomeManagerQueryVersionMessage
|| __DATA_CONST.__const _HMHomeManagerRemoveAccountRequestMessage
|| __DATA_CONST.__const _HMHomeManagerResolveAccountRequestMessage
|| __DATA_CONST.__const _HMHomeManagerRuntimeStateUpdateNotificationMessage
|| __DATA_CONST.__const _HMHomeManagerRuntimeStateUpdateRequestMessage
|| __DATA_CONST.__const _HMHomeManagerRuntimeStateUpdateRequestMessageKey
|| __DATA_CONST.__const _HMHomeManagerSecurePingMessageKey
|| __DATA_CONST.__const _HMHomeManagerSetMetadataMessage
|| __DATA_CONST.__const _HMHomeManagerShouldFetchMessageKey
|| __DATA_CONST.__const _HMHomeManagerShouldSkipKeyRollForROARMessageKey
|| __DATA_CONST.__const _HMHomeManagerStatusMessageKey
|| __DATA_CONST.__const _HMHomeManagerStatusUpdatedMessage
|| __DATA_CONST.__const _HMHomeManagerUpdateAccessoryToHH2PairingMessage
|| __DATA_CONST.__const _HMHomeManagerUpgradeToHH2FrameworkMessage
|| __DATA_CONST.__const _HMHomeManagerUserOptedToHH2
|| __DATA_CONST.__const _HMHomeMediaMinimumUserPrivilegeCodingKey
|| __DATA_CONST.__const _HMHomeMediaPasswordCodingKey
|| __DATA_CONST.__const _HMHomeMediaPasswordMessageKey
|| __DATA_CONST.__const _HMHomeMediaPeerToPeerEnabledCodingKey
|| __DATA_CONST.__const _HMHomeMessageKeyLightProfileUUIDs
|| __DATA_CONST.__const _HMHomeMessageKeySettingsByLightProfileUUIDs
|| __DATA_CONST.__const _HMHomeMultiUserEnabledChangeNotificationKey
|| __DATA_CONST.__const _HMHomeMultiUserEnabledValueCodingKey
|| __DATA_CONST.__const _HMHomeNetworkProtectionModeCodingKey
|| __DATA_CONST.__const _HMHomeNetworkRouterSupportDisableReasonCodingKey
|| __DATA_CONST.__const _HMHomeNetworkRouterSupportDisableReasonMessageKey
|| __DATA_CONST.__const _HMHomeNetworkRouterSupportDisableReasonUpdatedNotification
|| __DATA_CONST.__const _HMHomePersonManagerSettingsCodingKey
|| __DATA_CONST.__const _HMHomePersonManagerSettingsMessageKey
|| __DATA_CONST.__const _HMHomePodVariantCodingKey
|| __DATA_CONST.__const _HMHomePodsConfiguredStatusKey
|| __DATA_CONST.__const _HMHomeReplacedAccessoryUUIDMessageKey
|| __DATA_CONST.__const _HMHomeReportDomainMessageKey
|| __DATA_CONST.__const _HMHomeReportTimeoutMessageKey
|| __DATA_CONST.__const _HMHomeRequestInfoMessageKey
|| __DATA_CONST.__const _HMHomeResetAndRemoveAllCHIPPairingsFromAccessoryMessage
|| __DATA_CONST.__const _HMHomeResidentDevicesListMessageKey
|| __DATA_CONST.__const _HMHomeResolveThreadNetworkRequestKey
|| __DATA_CONST.__const _HMHomeRetrieveAsyncResultsMessage
|| __DATA_CONST.__const _HMHomeRetriveHomeLocationForFeedbackMessage
|| __DATA_CONST.__const _HMHomeSerializedDataKey
|| __DATA_CONST.__const _HMHomeSetHasAnyUserAcknowledgedCameraRecordingOnboardingRequestKey
|| __DATA_CONST.__const _HMHomeSetHasOnboardedForAccessCodeMessage
|| __DATA_CONST.__const _HMHomeSetHasOnboardedForWalletKeyMessage
|| __DATA_CONST.__const _HMHomeSetSoundCheckRequestKey
|| __DATA_CONST.__const _HMHomeSiriEndpointSupportedCodingKey
|| __DATA_CONST.__const _HMHomeSoundCheckCodingKey
|| __DATA_CONST.__const _HMHomeTestUpdateToROARCodingKey
|| __DATA_CONST.__const _HMHomeTestUpgradeToROARFrameworkRequestKey
|| __DATA_CONST.__const _HMHomeThreadNetworkCredentialsMessageKey
|| __DATA_CONST.__const _HMHomeThreadNetworkIDCodingKey
|| __DATA_CONST.__const _HMHomeUIServiceBundleIdentifier
|| __DATA_CONST.__const _HMHomeUnjoinThreadNetworkMessageKey
|| __DATA_CONST.__const _HMHomeUpdateAutomaticSoftwareUpdateMessage
|| __DATA_CONST.__const _HMHomeUpdateAutomaticThirdPartyAccessorySoftwareUpdateMessage
|| __DATA_CONST.__const _HMHomeUpdateDidOnboardLocationServicesRequestKey
|| __DATA_CONST.__const _HMHomeUpdateLocationServicesEnabledRequestKey
|| __DATA_CONST.__const _HMHomeUpdateMediaPasswordMessage
|| __DATA_CONST.__const _HMHomeUpdateMediaPeerToPeerEnabledMessage
|| __DATA_CONST.__const _HMHomeUpdateMinimumMediaUserPrivilegeMessage
|| __DATA_CONST.__const _HMHomeUpdateNetworkProtectionModeRequest
|| __DATA_CONST.__const _HMHomeUpdatePersonManagerSettingsMessage
|| __DATA_CONST.__const _HMHomeUpdateUserAnnounceAccessRequestKey
|| __DATA_CONST.__const _HMHomeUpdatedToROARCodingKey
|| __DATA_CONST.__const _HMHomeUserAnnounceAccessInformationKey
|| __DATA_CONST.__const _HMHomeUserConsentForAccessoryReplacementRequestKey
|| __DATA_CONST.__const _HMHomeUserConsentResponseForAccessoryMessageKey
|| __DATA_CONST.__const _HMHomeUserInviteInformationKey
|| __DATA_CONST.__const _HMHomeWalletKeyErrorDomain
|| __DATA_CONST.__const _HMHomeWalletKeyErrorUserInfoKeyErrorByDevice
|| __DATA_CONST.__const _HMHomeWalletKeyManagerFetchDeviceStateForPairedWatchesMessage
|| __DATA_CONST.__const _HMHomeWalletKeyManagerFetchDeviceStateMessage
|| __DATA_CONST.__const _HMHomeWalletKeyManagerMessageKeyDeviceState
|| __DATA_CONST.__const _HMHomeWalletKeyManagerMessageKeyDeviceStateForPairedWatches
|| __DATA_CONST.__const _HMHomeWalletKeyManagerMessageKeyIgnoredErrorCodes
|| __DATA_CONST.__const _HMHomeWalletKeyManagerMessageKeyWalletKeyUUID
|| __DATA_CONST.__const _HMImmutableSettingKeyPathPayloadKey
|| __DATA_CONST.__const _HMImmutableSettingKeyPathsPayloadKey
|| __DATA_CONST.__const _HMImmutableSettingReadOnlyPayloadKey
|| __DATA_CONST.__const _HMImmutableSettingTypePayloadKey
|| __DATA_CONST.__const _HMImmutableSettingValuePayloadKey
|| __DATA_CONST.__const _HMImmutableSettingValueTypePayloadKey
|| __DATA_CONST.__const _HMImmutableSettingsPayloadKey
|| __DATA_CONST.__const _HMIntentOutcomeFailure
|| __DATA_CONST.__const _HMIntentOutcomeInProgress
|| __DATA_CONST.__const _HMIntentOutcomeSuccess
|| __DATA_CONST.__const _HMIntentOutcomeUnsecuringNotAllowed
|| __DATA_CONST.__const _HMIntentOutcomeUnsecuringUnlockRequired
|| __DATA_CONST.__const _HMLightProfileBrightnessMessageKey
|| __DATA_CONST.__const _HMLightProfileColorTemperatureMessageKey
|| __DATA_CONST.__const _HMLightProfileFetchNaturalLightColorTemperatureForBrightnessMessage
|| __DATA_CONST.__const _HMLightProfileNaturalLightingEnabledKey
|| __DATA_CONST.__const _HMLightProfileSetNaturalLightingEnabledMessage
|| __DATA_CONST.__const _HMLightProfileSetNaturalLightingEnabledMessageKey
|| __DATA_CONST.__const _HMLightProfileSetNaturalLightingEnabledShouldRetryOnFailureMessageKey
|| __DATA_CONST.__const _HMLightProfileSettingsCodingKey
|| __DATA_CONST.__const _HMLightProfileSettingsDidUpdateMessage
|| __DATA_CONST.__const _HMLightProfileUUIDCodingKey
|| __DATA_CONST.__const _HMLogEventSessionRootUUIDKey
|| __DATA_CONST.__const _HMLogEventSessionServiceNameKey
|| __DATA_CONST.__const _HMMediaDestinationAudioGroupIdentifierCodingKey
|| __DATA_CONST.__const _HMMediaDestinationAudioGroupIdentifierPayloadKey
|| __DATA_CONST.__const _HMMediaDestinationControllerUpdateDestinationRequestMessage
|| __DATA_CONST.__const _HMMediaDestinationControllerUpdateOptionsPayloadKey
|| __DATA_CONST.__const _HMMediaDestinationDerivedDestinationChangedReason
|| __DATA_CONST.__const _HMMediaDestinationIdentifierCodingKey
|| __DATA_CONST.__const _HMMediaDestinationIdentifierPayloadKey
|| __DATA_CONST.__const _HMMediaDestinationIsTargetPayloadKey
|| __DATA_CONST.__const _HMMediaDestinationNullIdentifierString
|| __DATA_CONST.__const _HMMediaDestinationParentIdentifierCodingKey
|| __DATA_CONST.__const _HMMediaDestinationSupportedOptionsCodingKey
|| __DATA_CONST.__const _HMMediaDestinationSupportedOptionsNumberCodingKey
|| __DATA_CONST.__const _HMMediaDestinationSupportedOptionsPayloadKey
|| __DATA_CONST.__const _HMMediaDestinationUpdateAudioGroupIdentifierRequestMessage
|| __DATA_CONST.__const _HMMediaDestinationUpdateSupportedOptionsRequestMessage
|| __DATA_CONST.__const _HMMediaDestinationUpdatedNotification
|| __DATA_CONST.__const _HMMediaPlaybackActionPlaybackArchiveCodingKey
|| __DATA_CONST.__const _HMMediaPlaybackActionPlaybackArchiveMessageKey
|| __DATA_CONST.__const _HMMediaPlaybackActionProfilesCodingKey
|| __DATA_CONST.__const _HMMediaPlaybackActionProfilesMessageKey
|| __DATA_CONST.__const _HMMediaPlaybackActionStateCodingKey
|| __DATA_CONST.__const _HMMediaPlaybackActionStateMessageKey
|| __DATA_CONST.__const _HMMediaPlaybackActionVolumeCodingKey
|| __DATA_CONST.__const _HMMediaPlaybackActionVolumeMessageKey
|| __DATA_CONST.__const _HMMediaProfileCapabilitiesCodingKey
|| __DATA_CONST.__const _HMMediaProfileRouteUIDCodingKey
|| __DATA_CONST.__const _HMMediaProfileSessionCodingKey
|| __DATA_CONST.__const _HMMediaProfileSessionUUIDCodingKey
|| __DATA_CONST.__const _HMMediaSessionAudioControlMutedCodingKey
|| __DATA_CONST.__const _HMMediaSessionAudioControlMutedMessageKey
|| __DATA_CONST.__const _HMMediaSessionAudioControlUpdatedMessage
|| __DATA_CONST.__const _HMMediaSessionAudioControlVolumeCodingKey
|| __DATA_CONST.__const _HMMediaSessionAudioControlVolumeMessageKey
|| __DATA_CONST.__const _HMMediaSessionIdentifierKey
|| __DATA_CONST.__const _HMMediaSessionMediaUniqueIdentifierCodingKey
|| __DATA_CONST.__const _HMMediaSessionMediaUniqueIdentifierMessageKey
|| __DATA_CONST.__const _HMMediaSessionMutedMessageKey
|| __DATA_CONST.__const _HMMediaSessionPlaybackStateCodingKey
|| __DATA_CONST.__const _HMMediaSessionPlaybackStateMessageKey
|| __DATA_CONST.__const _HMMediaSessionPlaybackUpdatedMessage
|| __DATA_CONST.__const _HMMediaSessionPropertyListMessageKey
|| __DATA_CONST.__const _HMMediaSessionRefreshPlaybackMessage
|| __DATA_CONST.__const _HMMediaSessionRepeatStateCodingKey
|| __DATA_CONST.__const _HMMediaSessionRepeatStateMessageKey
|| __DATA_CONST.__const _HMMediaSessionRequestMessageInformationKey
|| __DATA_CONST.__const _HMMediaSessionRouteUIDCodingKey
|| __DATA_CONST.__const _HMMediaSessionRouteUIDMessageKey
|| __DATA_CONST.__const _HMMediaSessionRouteUIDUpdatedMessage
|| __DATA_CONST.__const _HMMediaSessionSetAudioControlMessage
|| __DATA_CONST.__const _HMMediaSessionSetPlaybackMessage
|| __DATA_CONST.__const _HMMediaSessionShuffleStateCodingKey
|| __DATA_CONST.__const _HMMediaSessionShuffleStateMessageKey
|| __DATA_CONST.__const _HMMediaSessionUUIDMessageKey
|| __DATA_CONST.__const _HMMediaSessionVolumeMessageKey
|| __DATA_CONST.__const _HMNetworkConfigurationProfileAccessViolationMessageKey
|| __DATA_CONST.__const _HMNetworkConfigurationProfileAccessViolationUpdatedNotification
|| __DATA_CONST.__const _HMNetworkConfigurationProfileAllowedHostsMessageKey
|| __DATA_CONST.__const _HMNetworkConfigurationProfileHostsUpdatedNotification
|| __DATA_CONST.__const _HMNetworkConfigurationProfilePreviewAllowedHostsRequest
|| __DATA_CONST.__const _HMNetworkConfigurationProfileWiFiCredentialTypeMessageKey
|| __DATA_CONST.__const _HMNetworkConfigurationProfileWiFiReconfigurationRequest
|| __DATA_CONST.__const _HMNetworkConfigurationProfileWiFiReconfigurationSupportMessageKey
|| __DATA_CONST.__const _HMNetworkConfigurationProfileWiFiReconfigurationUpdatedNotification
|| __DATA_CONST.__const _HMNetworkConfigurationProfileWiFiRotateCredentialMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerAddOverridesDataKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerAddOverridesMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerAddOverridesReplaceKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsListOnlyKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsProductGroupKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsProductNumberKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsRawOutputKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsResponseKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsVerifySignaturesKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesFirmwareVersionKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesIgnoreOverridesKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesProductGroupKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesProductNumberKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesRawOutputKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpLocalRulesResponseKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataFirmwareVersionKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataIgnoreOverridesKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataProductGroupKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataProductNumberKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataRawOutputKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataResponseKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerFetchCloudChangesForceChangeNotificationsKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerFetchCloudChangesMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerRemoveLocalRulesMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerRemoveOverridesMessageKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerRemoveOverridesProductGroupKey
|| __DATA_CONST.__const _HMNetworkRouterFirewallRuleManagerRemoveOverridesProductNumberKey
|| __DATA_CONST.__const _HMNetworkRouterProfileIsSatelliteCodingKey
|| __DATA_CONST.__const _HMNetworkRouterProfileNetworkStatusCodingKey
|| __DATA_CONST.__const _HMNetworkRouterProfileNetworkStatusMessageKey
|| __DATA_CONST.__const _HMNetworkRouterProfileNetworkStatusUpdatedNotification
|| __DATA_CONST.__const _HMNetworkRouterProfileSatelliteProfilesCodingKey
|| __DATA_CONST.__const _HMNetworkRouterProfileSatelliteProfilesUpdatedNotification
|| __DATA_CONST.__const _HMNetworkRouterSatelliteProfileIdentifiersMessageKey
|| __DATA_CONST.__const _HMObjectMergeUniqueIdentifierKey
|| __DATA_CONST.__const _HMPersonManagerAddOrUpdateFaceCropsMessage
|| __DATA_CONST.__const _HMPersonManagerAddOrUpdateFaceprintsMessage
|| __DATA_CONST.__const _HMPersonManagerAddOrUpdatePersonsMessage
|| __DATA_CONST.__const _HMPersonManagerAssociateFaceCropsMessage
|| __DATA_CONST.__const _HMPersonManagerDidChangePersonDataMessage
|| __DATA_CONST.__const _HMPersonManagerDisassociateFaceCropsMessage
|| __DATA_CONST.__const _HMPersonManagerFetchFaceCropsMessage
|| __DATA_CONST.__const _HMPersonManagerFetchFaceprintsMessage
|| __DATA_CONST.__const _HMPersonManagerFetchPersonFaceCropsMessage
|| __DATA_CONST.__const _HMPersonManagerFetchPersonsMessage
|| __DATA_CONST.__const _HMPersonManagerFetchUnassociatedFaceCropsMessage
|| __DATA_CONST.__const _HMPersonManagerMessageKeyFaceCropUUIDs
|| __DATA_CONST.__const _HMPersonManagerMessageKeyFaceCrops
|| __DATA_CONST.__const _HMPersonManagerMessageKeyFaceprintUUIDs
|| __DATA_CONST.__const _HMPersonManagerMessageKeyFaceprints
|| __DATA_CONST.__const _HMPersonManagerMessageKeyPersonUUIDs
|| __DATA_CONST.__const _HMPersonManagerMessageKeyPersons
|| __DATA_CONST.__const _HMPersonManagerMessageKeyRemovedFaceCropUUIDs
|| __DATA_CONST.__const _HMPersonManagerMessageKeyRemovedFaceprintUUIDs
|| __DATA_CONST.__const _HMPersonManagerMessageKeyRemovedPersonUUIDs
|| __DATA_CONST.__const _HMPersonManagerMessageKeySource
|| __DATA_CONST.__const _HMPersonManagerMessageKeyUpdatedFaceprints
|| __DATA_CONST.__const _HMPersonManagerMessageKeyUpdatedPersonFaceCrops
|| __DATA_CONST.__const _HMPersonManagerMessageKeyUpdatedPersons
|| __DATA_CONST.__const _HMPersonManagerMessageKeyUpdatedUnassociatedFaceCrops
|| __DATA_CONST.__const _HMPersonManagerPerformCloudPullMessage
|| __DATA_CONST.__const _HMPersonManagerRemoveFaceCropsMessage
|| __DATA_CONST.__const _HMPersonManagerRemoveFaceprintsMessage
|| __DATA_CONST.__const _HMPersonManagerRemovePersonsMessage
|| __DATA_CONST.__const _HMPersonManagerSubscribeMessage
|| __DATA_CONST.__const _HMPersonManagerUnsubscribeMessage
|| __DATA_CONST.__const _HMPersonSettingsManagerClassificationNotificationsEnabledKey
|| __DATA_CONST.__const _HMPersonSettingsManagerFetchClassificationNotificationsEnabledForPersonMessage
|| __DATA_CONST.__const _HMPersonSettingsManagerPersonUUIDKey
|| __DATA_CONST.__const _HMPersonSettingsManagerSetClassificationNotificationsEnabledForPersonMessage
|| __DATA_CONST.__const _HMPresenceKeyPath
|| __DATA_CONST.__const _HMPresenceTypeAnyUserAtHome
|| __DATA_CONST.__const _HMPresenceTypeCurrentUserAtHome
|| __DATA_CONST.__const _HMPresenceTypeCurrentUserNotAtHome
|| __DATA_CONST.__const _HMPresenceTypeNoUserAtHome
|| __DATA_CONST.__const _HMPresenceTypeUsersAtHome
|| __DATA_CONST.__const _HMPresenceTypeUsersNotAtHome
|| __DATA_CONST.__const _HMPrincipalClassKey
|| __DATA_CONST.__const _HMProcessNameKey
|| __DATA_CONST.__const _HMProductColorCodingKey
|| __DATA_CONST.__const _HMRemoteLoginHandlerUpdateLoggedInAccountMessage
|| __DATA_CONST.__const _HMReportDomainAssistant
|| __DATA_CONST.__const _HMReportDomainHomeUtil
|| __DATA_CONST.__const _HMResidentDeviceCapabilitiesMessageKey
|| __DATA_CONST.__const _HMResidentDeviceDeviceCodingKey
|| __DATA_CONST.__const _HMResidentDeviceEnabledMessageKey
|| __DATA_CONST.__const _HMResidentDeviceStatusMessageKey
|| __DATA_CONST.__const _HMServiceConfiguredNameMessageKey
|| __DATA_CONST.__const _HMServiceLastKnownOperatingStateAbnormalReasonsCodingKey
|| __DATA_CONST.__const _HMServiceLastKnownOperatingStateCodingKey
|| __DATA_CONST.__const _HMServiceLastKnownSleepDiscoveryModeCodingKey
|| __DATA_CONST.__const _HMServiceMediaSourceDisplayOrderCodingKey
|| __DATA_CONST.__const _HMServiceMediaSourceDisplayOrderModifiableCodingKey
|| __DATA_CONST.__const _HMServiceMediaSourceIdentifierCodingKey
|| __DATA_CONST.__const _HMServiceMediaSourceIdentifierMessageKey
|| __DATA_CONST.__const _HMServiceMediaSourceIdentifierUpdatedNotification
|| __DATA_CONST.__const _HMServiceNameModifiableCodingKey
|| __DATA_CONST.__const _HMServiceSerializedDataKey
|| __DATA_CONST.__const _HMServiceSubtypeGenericValve
|| __DATA_CONST.__const _HMServiceSubtypeIrrigationValve
|| __DATA_CONST.__const _HMServiceSubtypeShowerheadValve
|| __DATA_CONST.__const _HMServiceSubtypeUnknown
|| __DATA_CONST.__const _HMServiceSubtypeWaterFaucetValve
|| __DATA_CONST.__const _HMServiceTargetAccessoryUUID
|| __DATA_CONST.__const _HMServiceTypeAccessoryInformation
|| __DATA_CONST.__const _HMServiceTypeAirPurifier
|| __DATA_CONST.__const _HMServiceTypeAirQualitySensor
|| __DATA_CONST.__const _HMServiceTypeBattery
|| __DATA_CONST.__const _HMServiceTypeCameraControl
|| __DATA_CONST.__const _HMServiceTypeCameraRTPStreamManagement
|| __DATA_CONST.__const _HMServiceTypeCameraRecordingManagement
|| __DATA_CONST.__const _HMServiceTypeCarbonDioxideSensor
|| __DATA_CONST.__const _HMServiceTypeCarbonMonoxideSensor
|| __DATA_CONST.__const _HMServiceTypeContactSensor
|| __DATA_CONST.__const _HMServiceTypeDiagnostics
|| __DATA_CONST.__const _HMServiceTypeDoor
|| __DATA_CONST.__const _HMServiceTypeDoorbell
|| __DATA_CONST.__const _HMServiceTypeFan
|| __DATA_CONST.__const _HMServiceTypeFaucet
|| __DATA_CONST.__const _HMServiceTypeFilterMaintenance
|| __DATA_CONST.__const _HMServiceTypeGarageDoorOpener
|| __DATA_CONST.__const _HMServiceTypeHeaterCooler
|| __DATA_CONST.__const _HMServiceTypeHumidifierDehumidifier
|| __DATA_CONST.__const _HMServiceTypeHumiditySensor
|| __DATA_CONST.__const _HMServiceTypeInputSource
|| __DATA_CONST.__const _HMServiceTypeIrrigationSystem
|| __DATA_CONST.__const _HMServiceTypeLabel
|| __DATA_CONST.__const _HMServiceTypeLeakSensor
|| __DATA_CONST.__const _HMServiceTypeLightSensor
|| __DATA_CONST.__const _HMServiceTypeLightbulb
|| __DATA_CONST.__const _HMServiceTypeLockManagement
|| __DATA_CONST.__const _HMServiceTypeLockMechanism
|| __DATA_CONST.__const _HMServiceTypeMicrophone
|| __DATA_CONST.__const _HMServiceTypeMotionSensor
|| __DATA_CONST.__const _HMServiceTypeOccupancySensor
|| __DATA_CONST.__const _HMServiceTypeOutlet
|| __DATA_CONST.__const _HMServiceTypeSecuritySystem
|| __DATA_CONST.__const _HMServiceTypeSlats
|| __DATA_CONST.__const _HMServiceTypeSmokeSensor
|| __DATA_CONST.__const _HMServiceTypeSpeaker
|| __DATA_CONST.__const _HMServiceTypeStatefulProgrammableSwitch
|| __DATA_CONST.__const _HMServiceTypeStatelessProgrammableSwitch
|| __DATA_CONST.__const _HMServiceTypeSwitch
|| __DATA_CONST.__const _HMServiceTypeTargetControl
|| __DATA_CONST.__const _HMServiceTypeTargetControlManagement
|| __DATA_CONST.__const _HMServiceTypeTelevision
|| __DATA_CONST.__const _HMServiceTypeTemperatureSensor
|| __DATA_CONST.__const _HMServiceTypeThermostat
|| __DATA_CONST.__const _HMServiceTypeValve
|| __DATA_CONST.__const _HMServiceTypeVentilationFan
|| __DATA_CONST.__const _HMServiceTypeWindow
|| __DATA_CONST.__const _HMServiceTypeWindowCovering
|| __DATA_CONST.__const _HMSettingConstraintIdentifierCodingKey
|| __DATA_CONST.__const _HMSettingConstraintTypeCodingKey
|| __DATA_CONST.__const _HMSettingConstraintValueCodingKey
|| __DATA_CONST.__const _HMSettingDataCodingKey
|| __DATA_CONST.__const _HMSettingGroupsCodingKey
|| __DATA_CONST.__const _HMSettingKeyPathMessageKey
|| __DATA_CONST.__const _HMSettingParentCodingKey
|| __DATA_CONST.__const _HMSettingTargetTypeMessageKey
|| __DATA_CONST.__const _HMSettingUpdateValueMessage
|| __DATA_CONST.__const _HMSettingsContainerSettingsInitializedKey
|| __DATA_CONST.__const _HMSetupAccessoryPayloadCHIPURLScheme
|| __DATA_CONST.__const _HMSetupAccessoryPayloadHAPURLScheme
|| __DATA_CONST.__const _HMSetupAccessoryPayloadMatterURLScheme
|| __DATA_CONST.__const _HMShortcutsOwnedActionSetsCodingKey
|| __DATA_CONST.__const _HMShortcutsSerializedDataKey
|| __DATA_CONST.__const _HMShortcutsSerializedDictionaryProtocolKey
|| __DATA_CONST.__const _HMShortcutsSerializedDictionaryProtocolProtoBuf
|| __DATA_CONST.__const _HMShortcutsSerializedDictionaryVersionKey
|| __DATA_CONST.__const _HMShortcutsSerializedDictionaryVersion_1_0
|| __DATA_CONST.__const _HMSignificantEventSunrise
|| __DATA_CONST.__const _HMSignificantEventSunset
|| __DATA_CONST.__const _HMSiriEndpointApplyOnboardingSelectionsRequestMessage
|| __DATA_CONST.__const _HMSiriEndpointOnboardingResultPayloadKey
|| __DATA_CONST.__const _HMSiriEndpointOnboardingSelectionsAirPlayEnabledPayloadKey
|| __DATA_CONST.__const _HMSiriEndpointOnboardingSelectionsAllowHeySiriPayloadKey
|| __DATA_CONST.__const _HMSiriEndpointOnboardingSelectionsExplicitContentAllowedPayloadKey
|| __DATA_CONST.__const _HMSiriEndpointOnboardingSelectionsPayloadKey
|| __DATA_CONST.__const _HMSiriEndpointOnboardingSelectionsShareSiriAnalyticsPayloadKey
|| __DATA_CONST.__const _HMSiriEndpointOnboardingSelectionsSiriEnabledPayloadKey
|| __DATA_CONST.__const _HMSiriEndpointProfileActiveIdentifierCodingKey
|| __DATA_CONST.__const _HMSiriEndpointProfileAssistantActiveCodingKey
|| __DATA_CONST.__const _HMSiriEndpointProfileAssistantIdentifierCodingKey
|| __DATA_CONST.__const _HMSiriEndpointProfileAssistantNameCodingKey
|| __DATA_CONST.__const _HMSiriEndpointProfileAssistantsCodingKey
|| __DATA_CONST.__const _HMSiriEndpointProfileCapabilityCodingKey
|| __DATA_CONST.__const _HMSiriEndpointProfileEnableNotificationEnableKey
|| __DATA_CONST.__const _HMSiriEndpointProfileEnableNotificationMessage
|| __DATA_CONST.__const _HMSiriEndpointProfileEnableNotificationOptionsKey
|| __DATA_CONST.__const _HMSiriEndpointProfileManuallyDisabledCodingKey
|| __DATA_CONST.__const _HMSiriEndpointProfileMultifunctionButtonCodingKey
|| __DATA_CONST.__const _HMSiriEndpointProfilePropertyListMessageKey
|| __DATA_CONST.__const _HMSiriEndpointProfileRefreshStateMessage
|| __DATA_CONST.__const _HMSiriEndpointProfileSessionCodingKey
|| __DATA_CONST.__const _HMSiriEndpointProfileSessionHubIdentifierCodingKey
|| __DATA_CONST.__const _HMSiriEndpointProfileSessionStateCodingKey
|| __DATA_CONST.__const _HMSiriEndpointProfileSettingsCodingKey
|| __DATA_CONST.__const _HMSiriEndpointProfileSiriEngineVersionCodingKey
|| __DATA_CONST.__const _HMSiriEndpointProfileUpdateStateMessage
|| __DATA_CONST.__const _HMSiriEndpointProfileVersionCodingKey
|| __DATA_CONST.__const _HMSmallHomePodsConfiguredStatusKey
|| __DATA_CONST.__const _HMSoftwareUpdateControllerChangeUpdateSourceMessage
|| __DATA_CONST.__const _HMSoftwareUpdateControllerFetchMessage
|| __DATA_CONST.__const _HMSoftwareUpdateControllerRemoveStagedUpdateMessage
|| __DATA_CONST.__const _HMSoftwareUpdateControllerStartUpdateMessage
|| __DATA_CONST.__const _HMSoftwareUpdateControllerUpdateDocumentationPathKey
|| __DATA_CONST.__const _HMSoftwareUpdateControllerUpdateMessageKey
|| __DATA_CONST.__const _HMSoftwareUpdateControllerUpdatePathKey
|| __DATA_CONST.__const _HMSoftwareUpdateControllerUpdateSourceKey
|| __DATA_CONST.__const _HMSoftwareUpdateControllerUpdateUserInitiatedStagingKey
|| __DATA_CONST.__const _HMSoftwareUpdateDocumentationCodingKey
|| __DATA_CONST.__const _HMSoftwareUpdateDocumentationMessageKey
|| __DATA_CONST.__const _HMSoftwareUpdateDocumentationMetadataCodingKey
|| __DATA_CONST.__const _HMSoftwareUpdateDocumentationMetadataMessageKey
|| __DATA_CONST.__const _HMSoftwareUpdateDocumentationUpdatedMessage
|| __DATA_CONST.__const _HMSoftwareUpdateDownloadSizeCodingKey
|| __DATA_CONST.__const _HMSoftwareUpdateIdentifierCodingKey
|| __DATA_CONST.__const _HMSoftwareUpdateInstallDurationCodingKey
|| __DATA_CONST.__const _HMSoftwareUpdateManagerFetchMessage
|| __DATA_CONST.__const _HMSoftwareUpdateManagerIdentifierMessageKey
|| __DATA_CONST.__const _HMSoftwareUpdateManagerStartMessage
|| __DATA_CONST.__const _HMSoftwareUpdateManagerStartUpdateMessage
|| __DATA_CONST.__const _HMSoftwareUpdateManagerStopMessage
|| __DATA_CONST.__const _HMSoftwareUpdateManagerTargetIdentifierString
|| __DATA_CONST.__const _HMSoftwareUpdateManagerUpdateAvailableUpdateMessage
|| __DATA_CONST.__const _HMSoftwareUpdateManagerUpdateMessageKey
|| __DATA_CONST.__const _HMSoftwareUpdateNeedsAttentionReasonsMessage
|| __DATA_CONST.__const _HMSoftwareUpdateNeedsAttentionReasonsMessageKey
|| __DATA_CONST.__const _HMSoftwareUpdateReleaseDateCodingKey
|| __DATA_CONST.__const _HMSoftwareUpdateRequestDocumentationMessage
|| __DATA_CONST.__const _HMSoftwareUpdateRequestNeedsAttentionReasonsMessage
|| __DATA_CONST.__const _HMSoftwareUpdateStateCodingKey
|| __DATA_CONST.__const _HMSoftwareUpdateStateMessageKey
|| __DATA_CONST.__const _HMSoftwareUpdateUpdateDocumentationMetadataMessage
|| __DATA_CONST.__const _HMSoftwareUpdateUpdateStateMessage
|| __DATA_CONST.__const _HMSoftwareUpdateUpdateTypeCodingKey
|| __DATA_CONST.__const _HMSoftwareUpdateVersionCodingKey
|| __DATA_CONST.__const _HMSupportedStereoPairVersionsCodingKey
|| __DATA_CONST.__const _HMSymptomsHandlerCodingKey
|| __DATA_CONST.__const _HMSymptomsHandlerFixErrorMessage
|| __DATA_CONST.__const _HMSymptomsHandlerSFDeviceIdentifierCodingKey
|| __DATA_CONST.__const _HMSymptomsHandlerSFDeviceIdentifierMessageKey
|| __DATA_CONST.__const _HMSymptomsHandlerSFDeviceIdentifierUpdatedMessage
|| __DATA_CONST.__const _HMSymptomsHandlerSymptomsUpdatedMessage
|| __DATA_CONST.__const _HMTelevisionAccessoriesConfiguredStatusKey
|| __DATA_CONST.__const _HMTelevisionProfileSourceDisplayOrderMessageKey
|| __DATA_CONST.__const _HMTelevisionProfileSourceDisplayOrderUpdateRequest
|| __DATA_CONST.__const _HMTelevisionProfileSourceDisplayOrderUpdatedNotification
|| __DATA_CONST.__const _HMTriggerConfiguredNameCodingKey
|| __DATA_CONST.__const _HMTriggerConfiguredNameKey
|| __DATA_CONST.__const _HMTriggerDeleteAfterExecutionPolicyCodingKey
|| __DATA_CONST.__const _HMTriggerDeleteAfterExecutionPolicyIdentifierString
|| __DATA_CONST.__const _HMTriggerDeleteAfterExecutionPolicyKey
|| __DATA_CONST.__const _HMTriggerPolicyCodingKey
|| __DATA_CONST.__const _HMTriggerPolicyKey
|| __DATA_CONST.__const _HMTriggerPolicyUUIDCodingKey
|| __DATA_CONST.__const _HMTriggerPolicyUUIDKey
|| __DATA_CONST.__const _HMTriggerRemovePolicyKey
|| __DATA_CONST.__const _HMTriggerUpdatePolicyKey
|| __DATA_CONST.__const _HMUserActionPredictionDuetDataSourceCacheKey
|| __DATA_CONST.__const _HMUserActionPredictionDuetDataSourceCacheName
|| __DATA_CONST.__const _HMUserActionPredictionRefreshMessage
|| __DATA_CONST.__const _HMUserAnnounceAccessCodingKey
|| __DATA_CONST.__const _HMUserAnnounceSettingsCodingKey
|| __DATA_CONST.__const _HMUserAnnounceSettingsUpdateMessage
|| __DATA_CONST.__const _HMUserAssistantAccessControlAccessoryIDsMessageKey
|| __DATA_CONST.__const _HMUserAssistantAccessControlCodingKey
|| __DATA_CONST.__const _HMUserAssistantAccessControlMessageKey
|| __DATA_CONST.__const _HMUserAssistantAccessControlUpdateMessage
|| __DATA_CONST.__const _HMUserCloudShareManagerAccountEncodedClientInfoKey
|| __DATA_CONST.__const _HMUserCloudShareManagerContainerDidAcceptCodingKey
|| __DATA_CONST.__const _HMUserCloudShareManagerContainerIDsCodingKey
|| __DATA_CONST.__const _HMUserCloudShareManagerDidReceiveRepairMessage
|| __DATA_CONST.__const _HMUserCloudShareManagerDidReceiveShareMessage
|| __DATA_CONST.__const _HMUserCloudShareManagerRegisterMessage
|| __DATA_CONST.__const _HMUserCloudShareManagerTargetIdentifierUUIDString
|| __DATA_CONST.__const _HMUserFailedAccessoriesKey
|| __DATA_CONST.__const _HMUserIsAllowedAccessCodingKey
|| __DATA_CONST.__const _HMUserListeningHistoryUpdateControlAccessoriesCodingKey
|| __DATA_CONST.__const _HMUserListeningHistoryUpdateControlAccessoryIDsMessageKey
|| __DATA_CONST.__const _HMUserListeningHistoryUpdateControlUpdateMessage
|| __DATA_CONST.__const _HMUserMediaContentProfileAccessControlAccessoriesCodingKey
|| __DATA_CONST.__const _HMUserMediaContentProfileAccessControlAccessoryIDsMessageKey
|| __DATA_CONST.__const _HMUserMediaContentProfileAccessControlUpdateMessage
|| __DATA_CONST.__const _HMUserNeedsMultiUserItunesRepairCodingKey
|| __DATA_CONST.__const _HMUserNeedsMultiUseriTunesRepairMessage
|| __DATA_CONST.__const _HMUserNotificationContentActionURLKey
|| __DATA_CONST.__const _HMUserPairingIdentityCodingKey
|| __DATA_CONST.__const _HMUserPairingIdentityRequestMessage
|| __DATA_CONST.__const _HMUserPhotosPersonManagerSettingsCodingKey
|| __DATA_CONST.__const _HMUserPhotosPersonManagerSettingsMessageKey
|| __DATA_CONST.__const _HMUserPrivateSettingsCodingKey
|| __DATA_CONST.__const _HMUserSenderCorrelationIdentifierCodingKey
|| __DATA_CONST.__const _HMUserShareClientInfoCodingKey
|| __DATA_CONST.__const _HMUserShareClientPayloadRequestMessage
|| __DATA_CONST.__const _HMUserShareContainerIDCodingKey
|| __DATA_CONST.__const _HMUserShareFromUserCodingKey
|| __DATA_CONST.__const _HMUserShareHomeCodingKey
|| __DATA_CONST.__const _HMUserShareLookupInfoKey
|| __DATA_CONST.__const _HMUserShareLookupRequestMessage
|| __DATA_CONST.__const _HMUserShareRepairInfoMessageKey
|| __DATA_CONST.__const _HMUserShareRepairRequestMessage
|| __DATA_CONST.__const _HMUserShareToUserCodingKey
|| __DATA_CONST.__const _HMUserShareTokenCodingKey
|| __DATA_CONST.__const _HMUserShareURLCodingKey
|| __DATA_CONST.__const _HMUserSharedSettingsCodingKey
|| __DATA_CONST.__const _HMUserUpdatePhotosPersonManagerSettingsMessage
|| __DATA_CONST.__const _HMWorkflowDataKey
|| __DATA_CONST.__const _HMXPCAccessorySetupMachServiceName
|| __DATA_CONST.__const _HMXPCClientUUIDKey
|| __DATA_CONST.__const _HMXPCEventRouterSubscriptionAdditionsMessageKey
|| __DATA_CONST.__const _HMXPCEventRouterSubscriptionEventsMessageKey
|| __DATA_CONST.__const _HMXPCEventRouterSubscriptionRemovalsMessageKey
|| __DATA_CONST.__const _HMXPCEventRouterSubscriptionTopicsMessageKey
|| __DATA_CONST.__const _HMXPCMachServiceName
|| __DATA_CONST.__const _HMXPCMessageSentDateKey
|| __DATA_CONST.__const _kAccessAllowedWhenLockedKey
|| __DATA_CONST.__const _kAccessAllowedWhenLockedUpdatedNotificationKey
|| __DATA_CONST.__const _kAccessoriesConfiguredStatusKey
|| __DATA_CONST.__const _kAccessoryIsSuspendCapableCodingKey
|| __DATA_CONST.__const _kAccessoryPairingStateChangedNotification
|| __DATA_CONST.__const _kAccessoryReachableTransportsCodingKey
|| __DATA_CONST.__const _kAccessoryReprovisionStateUpdateNotificationKey
|| __DATA_CONST.__const _kAccessoryReprovisionedNotificationKey
|| __DATA_CONST.__const _kAccessoryReprovisonStateKey
|| __DATA_CONST.__const _kAddAccessoryProgressNotificationKey
|| __DATA_CONST.__const _kAddServiceGroupRequestKey
|| __DATA_CONST.__const _kAddServiceRequestKey
|| __DATA_CONST.__const _kAssistantCurrentHomeIdentifierKey
|| __DATA_CONST.__const _kAssistantCurrentHomeNameKey
|| __DATA_CONST.__const _kBulletinBoardNotificationCommitRequestKey
|| __DATA_CONST.__const _kBulletinBoardNotificationServiceGroupRequestKey
|| __DATA_CONST.__const _kCacheConfigurationsDirName
|| __DATA_CONST.__const _kCanCacheHomeConfigurationKey
|| __DATA_CONST.__const _kCanUseCachedHomeConfigurationKey
|| __DATA_CONST.__const _kDumpStateAllKey
|| __DATA_CONST.__const _kDumpStateDaemonStateKey
|| __DATA_CONST.__const _kEnableHomeNotificationsNotificationKey
|| __DATA_CONST.__const _kEnableHomeNotificationsRequestKey
|| __DATA_CONST.__const _kFilenameKey
|| __DATA_CONST.__const _kHomeCountKey
|| __DATA_CONST.__const _kHomeNetworkProtectionModeMessageKey
|| __DATA_CONST.__const _kHomesConfiguredStatusKey
|| __DATA_CONST.__const _kIncomingInvitesPresentKey
|| __DATA_CONST.__const _kProvisioningStatusKey
|| __DATA_CONST.__const _kRemoveServiceGroupRequestKey
|| __DATA_CONST.__const _kRemoveServiceRequestKey
|| __DATA_CONST.__const _kRenameServiceGroupRequestKey
|| __DATA_CONST.__const _kRenameServiceRequestKey
|| __DATA_CONST.__const _kReprovisionAccessoryRequestKey
|| __DATA_CONST.__const _kResidentProvisioningStatusChangedNotificationKey
|| __DATA_CONST.__const _kSearchForAccessoriesNeedingReprovisioningRequestKey
|| __DATA_CONST.__const _kServiceConfigurationStateCodingKey
|| __DATA_CONST.__const _kServiceConfigurationStateKey
|| __DATA_CONST.__const _kServiceConfigurationStateUpdatedNotificationKey
|| __DATA_CONST.__const _kServiceConfiguredNameCodingKey
|| __DATA_CONST.__const _kServiceDefaultNameCodingKey
|| __DATA_CONST.__const _kServiceDefaultNameUpdatedNotificationKey
|| __DATA_CONST.__const _kServiceGroupNameCodingKey
|| __DATA_CONST.__const _kServiceGroupNameKey
|| __DATA_CONST.__const _kServiceGroupServiceUUIDsCodingKey
|| __DATA_CONST.__const _kServiceGroupServicesCodingKey
|| __DATA_CONST.__const _kServiceGroupUUIDCodingKey
|| __DATA_CONST.__const _kServiceGroupUUIDKey
|| __DATA_CONST.__const _kServiceGroupsCodingKey
|| __DATA_CONST.__const _kServiceLabelIndexCodingKey
|| __DATA_CONST.__const _kServiceLabelNamespaceCodingKey
|| __DATA_CONST.__const _kServiceSubtypeCodingKey
|| __DATA_CONST.__const _kServiceSubtypeKey
|| __DATA_CONST.__const _kServiceSubtypeUpdatedNotificationKey
|| __DATA_CONST.__const _kSiriIntentKey
|| __DATA_CONST.__const _kSiriIntentRequestKey
|| __DATA_CONST.__const _kSiriIntentRequestTypeKey
|| __DATA_CONST.__const _kSiriSyncDataValidityKey
|| __DATA_CONST.__const _kSpeakersConfiguredStatusKey
|| __DATA_CONST.__const _kSymptomsCodingKey
|| __DATA_CONST.__const _kUpdateAccessAllowedWhenLockedRequestKey
|| __DATA_CONST.__const _kUpdateUserCamerasAccessLevelRequestKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAccessoryNetworkProtectionGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAccessoryProfile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAccessorySettingsDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAccessorySettingsMessenger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAccessorySettingsMetricsDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAccessorySetupCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMActionSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAnnounceUserSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMApplicationData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMAssistantAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMCacheManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMCameraProfile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMCharacteristicWriteAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMCoreAnalyticsMetricEventDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDelegateCaller
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDiskCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMEventTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMFrameworkCacheManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHAPMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHAPMetadataCategory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHAPMetadataCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHAPMetadataService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHome
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHomeAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHomeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHomeManagerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHomePersonManagerSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMHomeWalletKeyDeviceState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMIncomingHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMLightProfile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMLightProfileNaturalLightingAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMLocalization
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMMediaPlaybackAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMMediaSystem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMMutableArray
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMMutableHomeManagerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMNetworkRouterFirewallRuleManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMNetworkRouterProfile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMObjectMergeCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMOutgoingHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPBMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPBMetadataCategory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPBMetadataCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPBMetadataService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPendingRequests
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPersonSettingsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPhotosPersonManagerSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMResidentDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMRoom
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMServiceGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSettingGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSettingsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSettingsCreator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSettingsMessageHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMShortcutAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSiriEndpointProfilesMessenger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSoftwareUpdate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSoftwareUpdateManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMSymptomsHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMTimerTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUserActionPrediction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUserActionPredictionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUserActionPredictionDuetDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUserActionPredictionProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUserActionPredictionTransformer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUserCameraAccess
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUserCloudShareManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUserPresenceAuthorization
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMUserPresenceCompute
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMXPCClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMXPCEventRouterClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMXPCMessageTransportConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMZone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HMContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAccessoryNetworkProtectionGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAccessoryProfile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAccessorySettingsDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAccessorySettingsMessenger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAccessorySettingsMetricsDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAccessorySetupCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMActionSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAnnounceUserSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMApplicationData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMAssistantAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMCacheManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMCameraProfile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMCharacteristicWriteAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMCoreAnalyticsMetricEventDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDelegateCaller
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDiskCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMEventTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMFrameworkCacheManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHAPMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHAPMetadataCategory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHAPMetadataCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHAPMetadataService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHome
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHomeAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHomeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHomeManagerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHomePersonManagerSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMHomeWalletKeyDeviceState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMIncomingHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMLightProfile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMLightProfileNaturalLightingAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMLocalization
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMMediaPlaybackAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMMediaSystem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMMutableArray
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMMutableHomeManagerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMNetworkRouterFirewallRuleManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMNetworkRouterProfile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMObjectMergeCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMOutgoingHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPBMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPBMetadataCategory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPBMetadataCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPBMetadataService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPendingRequests
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPersonSettingsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPhotosPersonManagerSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMResidentDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMRoom
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMServiceGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSettingGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSettingsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSettingsCreator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSettingsMessageHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMShortcutAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSiriEndpointProfilesMessenger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSoftwareUpdate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSoftwareUpdateManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMSymptomsHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMTimerTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUserActionPrediction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUserActionPredictionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUserActionPredictionDuetDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUserActionPredictionProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUserActionPredictionTransformer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUserCameraAccess
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUserCloudShareManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUserPresenceAuthorization
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMUserPresenceCompute
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMXPCClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMXPCEventRouterClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMXPCMessageTransportConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMZone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HMContext
|| __TEXT.__const _HMAccessoryEventTopicSuffixIDColor
|| __TEXT.__const _HMAccessoryEventTopicSuffixIDInvalid
|| __TEXT.__const _HMAccessoryEventTopicSuffixIDParticipantData
|| __TEXT.__const _HMAccessoryEventTopicSuffixIDPrimaryUser
|| __TEXT.__const _HMAccessoryEventTopicSuffixIDSoftwareCapabilities
|| __TEXT.__const _HMAccessoryEventTopicSuffixIDWifiInfo
|| __TEXT.__const _HMCameraClipEncryptedDataContextInitializationVectorLength
|| __TEXT.__const _HMCameraClipEncryptedDataContextTagLength
|| __TEXT.__const _HMCameraClipExpirationTimeInterval
|| __TEXT.__const _HMCameraClipManagerAssetContextExpirationBuffer
|| __TEXT.__const _HMCameraRecordingEventsExpirationTimeInterval
|| __TEXT.__const _HMCameraUserNotificationSettingsVersionLatest
|| __TEXT.__const _HMFaceCropEntireImageFaceBoundingBox
|| __TEXT.__const _HMHomeEventTopicSuffixIDAggregateData
|| __TEXT.__const _HMHomeEventTopicSuffixIDInvalid
|| __TEXT.__const _HMHomeMaxMediaPasswordLength
|| __TEXT.__const _HMHomeWalletKeyColorDefault
|| __TEXT.__const _VOLUME_MIN_DELTA
|| __TEXT.__text _HMAccessoryAllowedHostPurposeAsString
|| __TEXT.__text _HMAccessoryCertificationStatusToString
|| __TEXT.__text _HMAccessoryCurrentNetworkProtectionModeAsString
|| __TEXT.__text _HMAccessoryInfoEventComponentsFromTopic
|| __TEXT.__text _HMAccessoryInfoEventTopicFromComponents
|| __TEXT.__text _HMAccessoryInfoProtoAccessoryInfoEventReadFrom
|| __TEXT.__text _HMAccessoryInfoProtoWifiNetworkInfoEventReadFrom
|| __TEXT.__text _HMAccessoryNetworkProtectionModeAsString
|| __TEXT.__text _HMAccessorySettingConstraintTypeFromString
|| __TEXT.__text _HMAccessorySettingConstraintTypeToString
|| __TEXT.__text _HMAccessorySettingPropertiesFromString
|| __TEXT.__text _HMAccessorySettingPropertiesToString
|| __TEXT.__text _HMAccessorySettingTypeFromString
|| __TEXT.__text _HMAccessorySettingTypeToString
|| __TEXT.__text _HMAccessorySettingsDataSourceSubscribeOptionsAsString
|| __TEXT.__text _HMAccessorySettingsPartialFetchFailureTypeToString
|| __TEXT.__text _HMAccessoryTransportTypesToString
|| __TEXT.__text _HMAccessoryWiFiCredentialTypeAsString
|| __TEXT.__text _HMAccountStatusToString
|| __TEXT.__text _HMActionTypeAsString
|| __TEXT.__text _HMArabicNumeralByChineseNumeralDictionary
|| __TEXT.__text _HMAreSnapshotsAllowedForCameraAccessMode
|| __TEXT.__text _HMAreStringsEqualIgnoringCase
|| __TEXT.__text _HMAssistantAccessControlOptionsToString
|| __TEXT.__text _HMCameraAccessModeAsString
|| __TEXT.__text _HMCameraAudioStreamSettingAsString
|| __TEXT.__text _HMCameraSignificantEventPersonFamiliarityOptionsAsString
|| __TEXT.__text _HMCameraSignificantEventTypesAsString
|| __TEXT.__text _HMCameraSignificantEventTypesFromReasons
|| __TEXT.__text _HMCameraSupportedFeaturesAsString
|| __TEXT.__text _HMDailyRotatedUUID
|| __TEXT.__text _HMDispatchQueueNameString
|| __TEXT.__text _HMDurationsApproximatelyEqual
|| __TEXT.__text _HMEventTriggerActivationStateAsString
|| __TEXT.__text _HMGenerateDecimalDigitPasswordWithLength
|| __TEXT.__text _HMHomeAddWalletKeyErrorCodeAsString
|| __TEXT.__text _HMHomeAddWalletKeyOptionsDescription
|| __TEXT.__text _HMHomeManagerAreAnyAccessoriesConfigured
|| __TEXT.__text _HMHomeManagerAreAnyAppleTVAccessoriesConfigured
|| __TEXT.__text _HMHomeManagerAreAnySpeakersConfigured
|| __TEXT.__text _HMHomeManagerAreAnyTelevisionAccessoriesConfigured
|| __TEXT.__text _HMHomeManagerNameValidationOptionsToString
|| __TEXT.__text _HMHomeManagerOptionsShortDescription
|| __TEXT.__text _HMHomeManagerOptionsToString
|| __TEXT.__text _HMHomeManagerStatusToString
|| __TEXT.__text _HMHomeSupportedFeatureAsString
|| __TEXT.__text _HMHomeWalletKeyColorAsString
|| __TEXT.__text _HMImmutableSettingChangeEventComponentsFromTopic
|| __TEXT.__text _HMImmutableSettingChangeEventTopicFromComponents
|| __TEXT.__text _HMImmutableSettingTypeAsString
|| __TEXT.__text _HMImmutableSettingValueComponentsFromTopic
|| __TEXT.__text _HMImmutableSettingValueEventTopicFromComponents
|| __TEXT.__text _HMImmutableSettingValueTypeAsString
|| __TEXT.__text _HMImmutableSettingsProtoAvailableLanguageListEventReadFrom
|| __TEXT.__text _HMImmutableSettingsProtoBoolSettingEventReadFrom
|| __TEXT.__text _HMImmutableSettingsProtoBoolValueEventReadFrom
|| __TEXT.__text _HMImmutableSettingsProtoBoundedIntegerSettingEventReadFrom
|| __TEXT.__text _HMImmutableSettingsProtoIntegerValueEventReadFrom
|| __TEXT.__text _HMImmutableSettingsProtoLanguageSettingEventReadFrom
|| __TEXT.__text _HMImmutableSettingsProtoLanguageValueEventReadFrom
|| __TEXT.__text _HMImmutableSettingsProtoSettingChangeEventReadFrom
|| __TEXT.__text _HMImmutableSettingsProtoStringSettingEventReadFrom
|| __TEXT.__text _HMImmutableSettingsProtoStringValueEventReadFrom
|| __TEXT.__text _HMImmutableSettingsProtoValueEventReadFrom
|| __TEXT.__text _HMIsMotionDetectionAllowedForCameraAccessMode
|| __TEXT.__text _HMIsPasswordWeak
|| __TEXT.__text _HMIsRecordingAllowedForCameraAccessMode
|| __TEXT.__text _HMIsSignificantEventDetectionAllowedForCameraAccessMode
|| __TEXT.__text _HMIsStreamingAllowedForCameraAccessMode
|| __TEXT.__text _HMLightProfileSupportedFeaturesAsString
|| __TEXT.__text _HMMaxLengthForNaming
|| __TEXT.__text _HMMediaDestinationControllerUpateOptionsAsString
|| __TEXT.__text _HMMediaDestinationSupportOptionsAsString
|| __TEXT.__text _HMMediaDestinationTypeAsString
|| __TEXT.__text _HMMediaGroupProtoJoinedMediaDestinationReadFrom
|| __TEXT.__text _HMMediaGroupProtoJoinedMediaParticipantDataReadFrom
|| __TEXT.__text _HMMediaGroupProtoMediaDestinationAggregateDataReadFrom
|| __TEXT.__text _HMMediaGroupProtoMediaDestinationControllerDataReadFrom
|| __TEXT.__text _HMMediaGroupProtoMediaDestinationReadFrom
|| __TEXT.__text _HMMediaGroupProtoMediaGroupDataReadFrom
|| __TEXT.__text _HMMediaGroupProtoMediaSystemRolesReadFrom
|| __TEXT.__text _HMMediaSystemRoleTypeAsString
|| __TEXT.__text _HMNetworkProtectionModeAsString
|| __TEXT.__text _HMNetworkRouterSupportAsString
|| __TEXT.__text _HMNetworkRouterSupportDisableReasonAsString
|| __TEXT.__text _HMNetworkStatusAsString
|| __TEXT.__text _HMPBAccessoryReferenceReadFrom
|| __TEXT.__text _HMPBActionContainerReadFrom
|| __TEXT.__text _HMPBActionSetReadFrom
|| __TEXT.__text _HMPBCharacteristicReferenceReadFrom
|| __TEXT.__text _HMPBCharacteristicWriteActionReadFrom
|| __TEXT.__text _HMPBEncodeOptionReadFrom
|| __TEXT.__text _HMPBHomeReferenceReadFrom
|| __TEXT.__text _HMPBMediaPlaybackActionReadFrom
|| __TEXT.__text _HMPBMetadataCategoryReadFrom
|| __TEXT.__text _HMPBMetadataCharacteristicReadFrom
|| __TEXT.__text _HMPBMetadataReadFrom
|| __TEXT.__text _HMPBMetadataServiceReadFrom
|| __TEXT.__text _HMPBNaturalLightingActionReadFrom
|| __TEXT.__text _HMPBServiceReferenceReadFrom
|| __TEXT.__text _HMPresenceEventActivationGranularityAsString
|| __TEXT.__text _HMPresenceEventTypeAsString
|| __TEXT.__text _HMPresenceEventUserTypeAsString
|| __TEXT.__text _HMProxify
|| __TEXT.__text _HMResidentDeviceCapabilitiesDescription
|| __TEXT.__text _HMResidentDeviceStatusDescription
|| __TEXT.__text _HMServiceOperatingStateAbnormalReasonsAsString
|| __TEXT.__text _HMServiceOperatingStateAsString
|| __TEXT.__text _HMSettingConstraintTypeToString
|| __TEXT.__text _HMSettingVersionValueTypeAsString
|| __TEXT.__text _HMSetupAccessoryProgressAsString
|| __TEXT.__text _HMSiriEndpointOnboardingResultAsString
|| __TEXT.__text _HMSiriEndpointProfileAssistantActiveTypeToString
|| __TEXT.__text _HMSiriEndpointProfileCapabilityToString
|| __TEXT.__text _HMSiriEndpointProfileMultifunctionButtonTypeToString
|| __TEXT.__text _HMSiriEndpointProfileSessionStateTypeToString
|| __TEXT.__text _HMSoftwareUpdateAssetSourceAsString
|| __TEXT.__text _HMSoftwareUpdateNeedsAttentionReasonsToString
|| __TEXT.__text _HMSoftwareUpdateStateToString
|| __TEXT.__text _HMSoftwareUpdateUpdateTypeToString
|| __TEXT.__text _HMStringFromAccessoryCommunicationProtocol
|| __TEXT.__text _HMStringFromCameraClipEncryptionScheme
|| __TEXT.__text _HMStringFromCameraClipQuality
|| __TEXT.__text _HMStringFromCameraSignificantEventConfidenceLevel
|| __TEXT.__text _HMStringFromCameraSignificantEventReason
|| __TEXT.__text _HMStringFromHomeLocation
|| __TEXT.__text _HMStringFromIntentRequestType
|| __TEXT.__text _HMStringFromPersonFaceCropSource
|| __TEXT.__text _HMTimedRotatedUUID
|| __TEXT.__text _HMUserActionPredictionDuetPredictionStoreReadFrom
|| __TEXT.__text _HMUserActionPredictionDuetPredictionValueReadFrom
|| __TEXT.__text _HMUserCameraAccessLevelAsString
|| __TEXT.__text _HMUserDefaultCamerasAccessLevel
|| __TEXT.__text _HMUserIsRecordingAllowedWithCameraAccessLevel
|| __TEXT.__text _HMUserIsStreamingAllowedWithCameraAccessLevel
|| __TEXT.__text _HMUserIsValidCameraAccessLevel
|| __TEXT.__text _HMUserPresenceAuthorizationStatusAsString
|| __TEXT.__text _HMUserPresenceComputeStatusAsString
|| __TEXT.__text _HMUserPrivilegeToString
|| __TEXT.__text _HMXPCClientEntitlementsShortDescription
|| __TEXT.__text _HMXPCEventRouterProtoEventsMessageReadFrom
|| __TEXT.__text ___HMHomeConfirmResident
|| __TEXT.__text _allowedCharValueTypes
|| __TEXT.__text _appendToShortDescription
|| __TEXT.__text _areAnyHomePodsConfigured
|| __TEXT.__text _areAnySmallHomePodsConfigured
|| __TEXT.__text _areHomesConfigured
|| __TEXT.__text _areIncomingInvitesPresent
|| __TEXT.__text _describeDataSyncState
|| __TEXT.__text _describeServiceConfigurationState
|| __TEXT.__text _encodeRootObject
|| __TEXT.__text _errorAsString
|| __TEXT.__text _eventTypeForPresenceTypeAndGranularity
|| __TEXT.__text _generateURLForHomeKitObject
|| __TEXT.__text _getAssistantConfigurationSnapshot
|| __TEXT.__text _getAssistantConfigurationVersion
|| __TEXT.__text _getHomeConfigurationVersion
|| __TEXT.__text _getLastSyncedAssistantConfigurationVersion
|| __TEXT.__text _getNumberValueForKey
|| __TEXT.__text _granularityForEventType
|| __TEXT.__text _hm_assistantIdentifier
|| __TEXT.__text _hm_assistantIdentifierWithSalts
|| __TEXT.__text _initializeMappingsAndPaths
|| __TEXT.__text _isAllowedCharType
|| __TEXT.__text _isEqualAllowingNil
|| __TEXT.__text _isInternalBuild
|| __TEXT.__text _isPresenceAuthorizationValid
|| __TEXT.__text _isRestoreSupportedForCharacteristic
|| __TEXT.__text _isValidHMSoftwareUpdateAssetSourceString
|| __TEXT.__text _isValidPresenceType
|| __TEXT.__text _localizationKeyForAccessoryCategoryType
|| __TEXT.__text _localizationKeyForCharacteristicType
|| __TEXT.__text _localizationKeyForServiceType
|| __TEXT.__text _localizedDescriptionKeyForError
|| __TEXT.__text _localizedWiFiStringKey
|| __TEXT.__text _playbackStateAsString
|| __TEXT.__text _pluralLocalizationKeyForAccessoryCategoryType
|| __TEXT.__text _presenceTypeForEventTypeAndGranularity
|| __TEXT.__text _resolveCacheDirectory
|| __TEXT.__text _resolveConfigurationsCacheDirectory
|| __TEXT.__text _resolveHMCacheDirectory
|| __TEXT.__text _resolveHomeKitCacheDirectory
|| __TEXT.__text _runOnMainQueue
|| __TEXT.__text _stringToHMSoftwareUpdateAssetSource
|| __TEXT.__text _userConsentAsString
|| __TEXT.__text _userTypeForPresenceTypeAndGranularity
|| __TEXT.__text _usersListApplicable
|| __TEXT.__text _validHMSoftwareUpdateAssetSourceStrings
__ AVFoundation: _AVFileTypeMPEG4
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _OBJC_CLASS_$_AVAssetReader
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderTrackOutput
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriter
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInput
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ Accounts: _OBJC_CLASS_$_ACAccount
__ AirPlayRoutePrediction: _OBJC_CLASS_$_ARPHomeControlSuggester
__ AuthKit: _AKAuthenticationAlternateDSIDKey
__ AuthKit: _AKAuthenticationPasswordKey
__ AuthKit: _AKAuthenticationRawPasswordKey
__ AuthKit: _AKAuthenticationUsernameKey
__ AuthKit: _OBJC_CLASS_$_AKAnisetteData
__ AuthKit: _OBJC_CLASS_$_AKDevice
__ CloudKit: _OBJC_CLASS_$_CKDeviceToDeviceShareInvitationToken
__ CloudKit: _OBJC_CLASS_$_CKFetchShareParticipantsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKShare
__ CloudKit: _OBJC_CLASS_$_CKUserIdentityLookupInfo
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreLocation: _OBJC_CLASS_$_CLBeaconRegion
__ CoreLocation: _OBJC_CLASS_$_CLCircularRegion
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _OBJC_CLASS_$_CLRegion
__ CoreMedia: _CMSampleBufferGetNumSamples
__ CoreMedia: _kCMTimeZero
__ CoreUtils: _NSPrintF
__ CoreUtils: _NSRandomData
__ Foundation: _NSEqualPoints
__ Foundation: _NSEqualRects
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedFileSizeDescription
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSObjectNotAvailableException
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromPoint
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromRect
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDataDetector
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSExtensionItem
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNetService
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSProxy
__ HMFoundation: _HMFBooleanToString
__ HMFoundation: _HMFCreateOsLogHandle
__ HMFoundation: _HMFDispatchQueueName
__ HMFoundation: _HMFEnabledStatusToString
__ HMFoundation: _HMFEqualObjects
__ HMFoundation: _HMFErrorDomain
__ HMFoundation: _HMFEventDictionaryFromFormatWithUUID
__ HMFoundation: _HMFGetActivityIdentifier
__ HMFoundation: _HMFGetLogIdentifier
__ HMFoundation: _HMFGetOsLogHandle
__ HMFoundation: _HMFHomeKitLoggingSubsystem
__ HMFoundation: _HMFLocationAuthorizationUpdatedNotification
__ HMFoundation: _HMFMethodDescription
__ HMFoundation: _HMFObjectDescription
__ HMFoundation: _HMFProductInfoArcherOSVersion
__ HMFoundation: _HMFProductInfoFatsaOSVersion
__ HMFoundation: _HMFQOSClassFromQualityOfService
__ HMFoundation: _HMFQualityOfServiceToString
__ HMFoundation: _OBJC_CLASS_$_HMFActivity
__ HMFoundation: _OBJC_CLASS_$_HMFAssertion
__ HMFoundation: _OBJC_CLASS_$_HMFAttributeDescription
__ HMFoundation: _OBJC_CLASS_$_HMFDigest
__ HMFoundation: _OBJC_CLASS_$_HMFKey
__ HMFoundation: _OBJC_CLASS_$_HMFLocationAuthorization
__ HMFoundation: _OBJC_CLASS_$_HMFMACAddress
__ HMFoundation: _OBJC_CLASS_$_HMFMessage
__ HMFoundation: _OBJC_CLASS_$_HMFMessageDestination
__ HMFoundation: _OBJC_CLASS_$_HMFMessageDispatcher
__ HMFoundation: _OBJC_CLASS_$_HMFMessageTransport
__ HMFoundation: _OBJC_CLASS_$_HMFMutableMessage
__ HMFoundation: _OBJC_CLASS_$_HMFOSTransaction
__ HMFoundation: _OBJC_CLASS_$_HMFObject
__ HMFoundation: _OBJC_CLASS_$_HMFObjectCacheNSString
__ HMFoundation: _OBJC_CLASS_$_HMFObjectCacheNSUUID
__ HMFoundation: _OBJC_CLASS_$_HMFOperation
__ HMFoundation: _OBJC_CLASS_$_HMFPairingIdentity
__ HMFoundation: _OBJC_CLASS_$_HMFPairingKey
__ HMFoundation: _OBJC_CLASS_$_HMFPreferences
__ HMFoundation: _OBJC_CLASS_$_HMFPrivateObjectFormatter
__ HMFoundation: _OBJC_CLASS_$_HMFProcessInfo
__ HMFoundation: _OBJC_CLASS_$_HMFProductInfo
__ HMFoundation: _OBJC_CLASS_$_HMFSoftwareVersion
__ HMFoundation: _OBJC_CLASS_$_HMFSystemInfo
__ HMFoundation: _OBJC_CLASS_$_HMFSystemPreference
__ HMFoundation: _OBJC_CLASS_$_HMFTimer
__ HMFoundation: _OBJC_CLASS_$_HMFUnfairLock
__ HMFoundation: _OBJC_CLASS_$_HMFVersion
__ HMFoundation: _OBJC_CLASS_$_HMFWiFiNetworkInfo
__ HMFoundation: _OBJC_METACLASS_$_HMFAssertion
__ HMFoundation: _OBJC_METACLASS_$_HMFMessageTransport
__ HMFoundation: _OBJC_METACLASS_$_HMFObject
__ HMFoundation: _OBJC_METACLASS_$_HMFOperation
__ HMFoundation: __HMFPreconditionFailure
__ HMFoundation: ___HMFActivityScopeLeave
__ HMFoundation: _kDumpStateStateKey
__ HomeKitEventRouter: _HMEProtoEventInfoReadFrom
__ HomeKitEventRouter: _OBJC_CLASS_$_HMEEvent
__ HomeKitEventRouter: _OBJC_CLASS_$_HMEEventInfo
__ HomeKitEventRouter: _OBJC_CLASS_$_HMEEventMetadata
__ HomeKitEventRouter: _OBJC_CLASS_$_HMELastEventStore
__ HomeKitEventRouter: _OBJC_CLASS_$_HMEPersistentConnectionClient
__ HomeKitEventRouter: _OBJC_CLASS_$_HMEProtoEventInfo
__ HomeKitEventRouter: _OBJC_METACLASS_$_HMEEvent
__ Intents: _OBJC_CLASS_$_INControlHomeIntent
__ NetAppsUtilities: _OBJC_CLASS_$_NAFuture
__ NetAppsUtilities: _OBJC_CLASS_$_NAScheduler
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ QuartzCore: _OBJC_CLASS_$_CAContext
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ SAObjects: _OBJC_CLASS_$_SAHACommandCompleted
__ SAObjects: _OBJC_CLASS_$_SAHACurrentHome
__ SAObjects: _SAHACommandOutcomeFOUND_NO_MATCHING_ENTITIESValue
__ Security: _SecPasswordCreateWithRandomDigits
__ Security: _SecPasswordIsPasswordWeak
__ Security: _SecPasswordIsPasswordWeak2
__ SoftLinking: __sl_dlopen
__ TCC: _TCCAccessPreflight
__ TCC: _TCCAccessRequest
__ TCC: _kTCCServiceMicrophone
__ TCC: _kTCCServiceWillow
__ TouchRemote: _OBJC_CLASS_$_TRRequestMessage
__ TouchRemote: _OBJC_CLASS_$_TRResponseMessage
__ TouchRemote: _OBJC_METACLASS_$_TRRequestMessage
__ TouchRemote: _OBJC_METACLASS_$_TRResponseMessage
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CCCryptorGCMOneshotDecrypt
__ libSystem.B.dylib: _CCCryptorGCMOneshotEncrypt
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_initially_inactive
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libnetwork.dylib: _nw_connection_cancel
__ libnetwork.dylib: _nw_connection_create
__ libnetwork.dylib: _nw_connection_receive_message
__ libnetwork.dylib: _nw_connection_send
__ libnetwork.dylib: _nw_connection_set_path_changed_handler
__ libnetwork.dylib: _nw_connection_set_queue
__ libnetwork.dylib: _nw_connection_set_state_changed_handler
__ libnetwork.dylib: _nw_connection_set_viability_changed_handler
__ libnetwork.dylib: _nw_connection_start
__ libnetwork.dylib: _nw_error_copy_cf_error
__ libnetwork.dylib: _nw_path_get_status
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getInstanceSize
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_destructInstance
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
__ libobjc.A.dylib: _object_setClass
HMMediaGroupProtoMediaDestination : PBCodable <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasParentIdentifier
 @property  NSString *parentIdentifier
 @property  BOOL hasSupportedOptions
 @property  unsigned long supportedOptions
 @property  BOOL hasAudioGroupIdentifier
 @property  NSString *audioGroupIdentifier

  // instance methods
  -[HMMediaGroupProtoMediaDestination mergeFrom:]
  -[HMMediaGroupProtoMediaDestination setSupportedOptions:]
  -[HMMediaGroupProtoMediaDestination .cxx_destruct]
  -[HMMediaGroupProtoMediaDestination dictionaryRepresentation]
  -[HMMediaGroupProtoMediaDestination writeTo:]
  -[HMMediaGroupProtoMediaDestination hasParentIdentifier]
  -[HMMediaGroupProtoMediaDestination isEqual:]
  -[HMMediaGroupProtoMediaDestination copyTo:]
  -[HMMediaGroupProtoMediaDestination readFrom:]
  -[HMMediaGroupProtoMediaDestination identifier]
  -[HMMediaGroupProtoMediaDestination supportedOptions]
  -[HMMediaGroupProtoMediaDestination parentIdentifier]
  -[HMMediaGroupProtoMediaDestination setIdentifier:]
  -[HMMediaGroupProtoMediaDestination setParentIdentifier:]
  -[HMMediaGroupProtoMediaDestination hasIdentifier]
  -[HMMediaGroupProtoMediaDestination copyWithZone:]
  -[HMMediaGroupProtoMediaDestination setAudioGroupIdentifier:]
  -[HMMediaGroupProtoMediaDestination setHasSupportedOptions:]
  -[HMMediaGroupProtoMediaDestination hasSupportedOptions]
  -[HMMediaGroupProtoMediaDestination hasAudioGroupIdentifier]
  -[HMMediaGroupProtoMediaDestination audioGroupIdentifier]


HMPersonManager : NSObject <HMFMessageReceiver>
 @property  NSNotificationCenter *notificationCenter
 @property  @? fetchClientFactory
 @property  HMFUnfairLock *lock
 @property  _HMContext *context
 @property  NSHashTable *observers
 @property  NSUUID *UUID
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMPersonManager configure]
  -[HMPersonManager notificationCenter]
  -[HMPersonManager subscribe]
  -[HMPersonManager UUID]
  -[HMPersonManager .cxx_destruct]
  -[HMPersonManager addObserver:]
  -[HMPersonManager messageReceiveQueue]
  -[HMPersonManager observers]
  -[HMPersonManager dealloc]
  -[HMPersonManager messageTargetUUID]
  -[HMPersonManager lock]
  -[HMPersonManager unsubscribe]
  -[HMPersonManager removeObserver:]
  -[HMPersonManager context]
  -[HMPersonManager fetchClientFactory]
  -[HMPersonManager associateFaceCropsWithUUIDs:toPersonWithUUID:forSource:completion:]
  -[HMPersonManager handleDidChangePersonDataMessage:]
  -[HMPersonManager handleDaemonReconnectedNotification:]
  -[HMPersonManager initWithContext:UUID:notificationCenter:]
  -[HMPersonManager performCloudPullWithCompletion:]
  -[HMPersonManager fetchPersonsWithUUIDs:completion:]
  -[HMPersonManager fetchAllPersonsWithCompletion:]
  -[HMPersonManager fetchFaceCropsWithUUIDs:completion:]
  -[HMPersonManager fetchFaceCropsForPersonsWithUUIDs:completion:]
  -[HMPersonManager fetchAllPersonFaceCropsWithCompletion:]
  -[HMPersonManager fetchAllUnassociatedFaceCropsWithCompletion:]
  -[HMPersonManager fetchFaceprintsForFaceCropsWithUUIDs:completion:]
  -[HMPersonManager fetchAllFaceprintsWithCompletion:]
  -[HMPersonManager addOrUpdatePersons:completion:]
  -[HMPersonManager addOrUpdateFaceCrops:completion:]
  -[HMPersonManager addOrUpdateFaceprints:completion:]
  -[HMPersonManager associateFaceCropsWithUUIDs:toPersonWithUUID:completion:]
  -[HMPersonManager disassociateFaceCropsWithUUIDs:completion:]
  -[HMPersonManager removePersonsWithUUIDs:completion:]
  -[HMPersonManager removeFaceCropsWithUUIDs:completion:]
  -[HMPersonManager removeFaceprintsWithUUIDs:completion:]
  -[HMPersonManager setFetchClientFactory:]


_HMCameraSettingsControl : _HMCameraControl
 @property  HMCharacteristic *nightVision
 @property  HMCharacteristic *currentHorizontalTilt
 @property  HMCharacteristic *targetHorizontalTilt
 @property  HMCharacteristic *currentVerticalTilt
 @property  HMCharacteristic *targetVerticalTilt
 @property  HMCharacteristic *opticalZoom
 @property  HMCharacteristic *digitalZoom
 @property  HMCharacteristic *imageRotation
 @property  HMCharacteristic *imageMirroring

  // instance methods
  -[_HMCameraSettingsControl .cxx_destruct]
  -[_HMCameraSettingsControl initWithCameraProfile:profileUniqueIdentifier:service:]
  -[_HMCameraSettingsControl nightVision]
  -[_HMCameraSettingsControl setNightVision:]
  -[_HMCameraSettingsControl currentHorizontalTilt]
  -[_HMCameraSettingsControl setCurrentHorizontalTilt:]
  -[_HMCameraSettingsControl targetHorizontalTilt]
  -[_HMCameraSettingsControl setTargetHorizontalTilt:]
  -[_HMCameraSettingsControl currentVerticalTilt]
  -[_HMCameraSettingsControl setCurrentVerticalTilt:]
  -[_HMCameraSettingsControl targetVerticalTilt]
  -[_HMCameraSettingsControl setTargetVerticalTilt:]
  -[_HMCameraSettingsControl opticalZoom]
  -[_HMCameraSettingsControl setOpticalZoom:]
  -[_HMCameraSettingsControl digitalZoom]
  -[_HMCameraSettingsControl setDigitalZoom:]
  -[_HMCameraSettingsControl imageRotation]
  -[_HMCameraSettingsControl setImageRotation:]
  -[_HMCameraSettingsControl imageMirroring]
  -[_HMCameraSettingsControl setImageMirroring:]


HMLocationEvent : HMEvent <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  HMFLocationAuthorization *authorization
 @property  long long locationAuthorization
 @property  CLRegion *region

  // class methods
  +[HMLocationEvent supportsSecureCoding]
  +[HMLocationEvent createWithDictionary:home:]

  // instance methods
  -[HMLocationEvent setRegion:]
  -[HMLocationEvent region]
  -[HMLocationEvent initWithCoder:]
  -[HMLocationEvent setLocationAuthorization:]
  -[HMLocationEvent .cxx_destruct]
  -[HMLocationEvent _unconfigure]
  -[HMLocationEvent authorization]
  -[HMLocationEvent locationAuthorization]
  -[HMLocationEvent initWithRegion:]
  -[HMLocationEvent mutableCopyWithZone:]
  -[HMLocationEvent copyWithZone:]
  -[HMLocationEvent encodeWithCoder:]
  -[HMLocationEvent initWithDict:region:]
  -[HMLocationEvent __configureWithContext:eventTrigger:]
  -[HMLocationEvent _serializeForAdd]
  -[HMLocationEvent _updateFromDictionary:]
  -[HMLocationEvent _retrieveLocationEvent]
  -[HMLocationEvent _mergeWithNewObject:]
  -[HMLocationEvent updateRegion:completionHandler:]
  -[HMLocationEvent __locationAuthorizationUpdated:]


HMMutableLocationEvent : HMLocationEvent
 @property  CLRegion *region


HMCameraStreamControl : HMCameraControl <_HMCameraStreamControlDelegate>
 @property  _HMCameraStreamControl *streamControl
 @property  <HMCameraStreamControlDelegate> *delegate
 @property  unsigned long streamState
 @property  HMCameraStream *cameraStream
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMCameraStreamControl .cxx_destruct]
  -[HMCameraStreamControl setDelegate:]
  -[HMCameraStreamControl delegate]
  -[HMCameraStreamControl streamState]
  -[HMCameraStreamControl streamControl]
  -[HMCameraStreamControl cameraStream]
  -[HMCameraStreamControl startStreamWithPreferences:]
  -[HMCameraStreamControl stopStream]
  -[HMCameraStreamControl cameraStreamControlDidStartStream:]
  -[HMCameraStreamControl cameraStreamControl:didStopStream:]
  -[HMCameraStreamControl initWithStreamControl:]
  -[HMCameraStreamControl startStream]


HMAccessorySettingConstraint : NSObject <NSSecureCoding, NSCopying>
 @property  NSUUID *identifier
 @property  long long type
 @property  id value

  // class methods
  +[HMAccessorySettingConstraint supportsSecureCoding]
  +[HMAccessorySettingConstraint shortDescription]
  +[HMAccessorySettingConstraint supportedValueClasses]

  // instance methods
  -[HMAccessorySettingConstraint initWithCoder:]
  -[HMAccessorySettingConstraint initWithType:value:]
  -[HMAccessorySettingConstraint .cxx_destruct]
  -[HMAccessorySettingConstraint descriptionWithPointer:]
  -[HMAccessorySettingConstraint init]
  -[HMAccessorySettingConstraint isEqual:]
  -[HMAccessorySettingConstraint identifier]
  -[HMAccessorySettingConstraint value]
  -[HMAccessorySettingConstraint type]
  -[HMAccessorySettingConstraint shortDescription]
  -[HMAccessorySettingConstraint copyWithZone:]
  -[HMAccessorySettingConstraint encodeWithCoder:]
  -[HMAccessorySettingConstraint initWithIdentifier:type:value:]


HMCharacteristic : NSObject <NSSecureCoding, HMObjectMerge>
 @property  NSDictionary *serializedDictionaryRepresentation
 @property  _HMContext *context
 @property  NSNumber *instanceID
 @property  HMService *service
 @property  NSString *characteristicType
 @property  NSArray *properties
 @property  BOOL requiresDeviceUnlock
 @property  id value
 @property  BOOL notificationEnabledByThisClient
 @property  BOOL notificationEnabled
 @property  NSDate *valueUpdatedTime
 @property  NSDate *notificationEnabledTime
 @property  BOOL hasAuthorizationData
 @property  NSString *localizedDescription
 @property  HMCharacteristicMetadata *metadata
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCharacteristic supportsSecureCoding]
  +[HMCharacteristic logCategory]
  +[HMCharacteristic _characteristicTypeAsString:]
  +[HMCharacteristic __localizedDescriptionForCharacteristicType:]
  +[HMCharacteristic localizedDescriptionForCharacteristicType:]
  +[HMCharacteristic characteristicWithCharacteristicReference:home:]
  +[HMCharacteristic characteristicWithSerializedDictionaryRepresentation:home:]

  // instance methods
  -[HMCharacteristic instanceID]
  -[HMCharacteristic localizedDescription]
  -[HMCharacteristic uniqueIdentifier]
  -[HMCharacteristic initWithCoder:]
  -[HMCharacteristic setCharacteristicType:]
  -[HMCharacteristic .cxx_destruct]
  -[HMCharacteristic isNotificationEnabled]
  -[HMCharacteristic _unconfigure]
  -[HMCharacteristic properties]
  -[HMCharacteristic init]
  -[HMCharacteristic isEqual:]
  -[HMCharacteristic setValue:]
  -[HMCharacteristic characteristicType]
  -[HMCharacteristic setProperties:]
  -[HMCharacteristic metadata]
  -[HMCharacteristic service]
  -[HMCharacteristic value]
  -[HMCharacteristic setContext:]
  -[HMCharacteristic logIdentifier]
  -[HMCharacteristic setService:]
  -[HMCharacteristic encodeWithCoder:]
  -[HMCharacteristic context]
  -[HMCharacteristic _mergeWithNewObject:]
  -[HMCharacteristic _unconfigureContext]
  -[HMCharacteristic mapHAPProperties:]
  -[HMCharacteristic notificationEnabledByThisClient]
  -[HMCharacteristic setNotificationEnabledByThisClient:]
  -[HMCharacteristic requiresDeviceUnlock]
  -[HMCharacteristic setRequiresDeviceUnlock:]
  -[HMCharacteristic hasAuthorizationData]
  -[HMCharacteristic setHasAuthorizationData:]
  -[HMCharacteristic valueUpdatedTime]
  -[HMCharacteristic setValueUpdatedTime:]
  -[HMCharacteristic setNotificationEnabled:]
  -[HMCharacteristic notificationEnabledTime]
  -[HMCharacteristic setNotificationEnabledTime:]
  -[HMCharacteristic _writeValue:completionHandler:]
  -[HMCharacteristic _readValueWithCompletionHandler:]
  -[HMCharacteristic _enableNotification:completionHandler:]
  -[HMCharacteristic _updateAuthorizationData:completionHandler:]
  -[HMCharacteristic __configureWithContext:service:]
  -[HMCharacteristic setValueUpdateTime:]
  -[HMCharacteristic _updateValue:updateTime:messageSentDate:]
  -[HMCharacteristic writeValue:completionHandler:]
  -[HMCharacteristic readValueWithCompletionHandler:]
  -[HMCharacteristic enableNotification:completionHandler:]
  -[HMCharacteristic updateAuthorizationData:completionHandler:]
  -[HMCharacteristic _characteristicTypeDescription]
  -[HMCharacteristic serializedDictionaryRepresentation]


HMAccessCodeRemoveRequestValue : NSObject <HMFObject, HMAccessCodeModificationRequestValue, NSCopying, NSSecureCoding>
 @property  HMAccessoryAccessCodeValue *accessoryAccessCodeValue
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *accessoryUUID

  // class methods
  +[HMAccessCodeRemoveRequestValue supportsSecureCoding]
  +[HMAccessCodeRemoveRequestValue shortDescription]

  // instance methods
  -[HMAccessCodeRemoveRequestValue accessoryUUID]
  -[HMAccessCodeRemoveRequestValue privateDescription]
  -[HMAccessCodeRemoveRequestValue initWithCoder:]
  -[HMAccessCodeRemoveRequestValue .cxx_destruct]
  -[HMAccessCodeRemoveRequestValue attributeDescriptions]
  -[HMAccessCodeRemoveRequestValue isEqual:]
  -[HMAccessCodeRemoveRequestValue shortDescription]
  -[HMAccessCodeRemoveRequestValue copyWithZone:]
  -[HMAccessCodeRemoveRequestValue encodeWithCoder:]
  -[HMAccessCodeRemoveRequestValue accessoryAccessCodeValue]
  -[HMAccessCodeRemoveRequestValue initWithAccessoryAccessCodeValue:]


HMManagedConfigurationProfileInfo : HMFObject <NSSecureCoding, NSCopying>
 @property  NSString *identifier
 @property  NSData *profileData

  // class methods
  +[HMManagedConfigurationProfileInfo supportsSecureCoding]

  // instance methods
  -[HMManagedConfigurationProfileInfo initWithCoder:]
  -[HMManagedConfigurationProfileInfo .cxx_destruct]
  -[HMManagedConfigurationProfileInfo profileData]
  -[HMManagedConfigurationProfileInfo identifier]
  -[HMManagedConfigurationProfileInfo copyWithZone:]
  -[HMManagedConfigurationProfileInfo encodeWithCoder:]
  -[HMManagedConfigurationProfileInfo initWithIdentifier:profileData:]


HMUserListRemoteViewController : _UIRemoteViewController <HMUserManagementRemoteHost>
 @property  <HMUserManagementRemoteHost> *delegate

  // class methods
  +[HMUserListRemoteViewController requestViewControllerWithConnectionHandler:]
  +[HMUserListRemoteViewController exportedInterface]
  +[HMUserListRemoteViewController serviceViewControllerInterface]

  // instance methods
  -[HMUserListRemoteViewController viewServiceDidTerminateWithError:]
  -[HMUserListRemoteViewController .cxx_destruct]
  -[HMUserListRemoteViewController viewDidLoad]
  -[HMUserListRemoteViewController setDelegate:]
  -[HMUserListRemoteViewController delegate]
  -[HMUserListRemoteViewController userManagementDidFinishWithError:]
  -[HMUserListRemoteViewController userManagementDidLoad]


HMCoreAnalyticsFieldData : HMFObject
 @property  NSString *name
 @property  NSObject *value

  // instance methods
  -[HMCoreAnalyticsFieldData initWithName:value:]
  -[HMCoreAnalyticsFieldData name]
  -[HMCoreAnalyticsFieldData .cxx_destruct]
  -[HMCoreAnalyticsFieldData initWithName:]
  -[HMCoreAnalyticsFieldData value]


HMAccessorySettingsFetchResponseMessagePayload : NSObject <HMFLogging, HMFObject, HMMessageEncoding>
 @property  NSArray *settings
 @property  HMAccessorySettingsPartialFetchFailureInformation *failureInformation
 @property  NSArray *fetchResults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMAccessorySettingsFetchResponseMessagePayload logCategory]
  +[HMAccessorySettingsFetchResponseMessagePayload shortDescription]

  // instance methods
  -[HMAccessorySettingsFetchResponseMessagePayload privateDescription]
  -[HMAccessorySettingsFetchResponseMessagePayload .cxx_destruct]
  -[HMAccessorySettingsFetchResponseMessagePayload attributeDescriptions]
  -[HMAccessorySettingsFetchResponseMessagePayload isEqual:]
  -[HMAccessorySettingsFetchResponseMessagePayload fetchResults]
  -[HMAccessorySettingsFetchResponseMessagePayload shortDescription]
  -[HMAccessorySettingsFetchResponseMessagePayload initWithPayload:]
  -[HMAccessorySettingsFetchResponseMessagePayload settings]
  -[HMAccessorySettingsFetchResponseMessagePayload failureInformation]
  -[HMAccessorySettingsFetchResponseMessagePayload initWithSettings:failureInformation:]
  -[HMAccessorySettingsFetchResponseMessagePayload payloadCopy]


HMSettingBooleanValue : HMImmutableSettingValue
 @property  BOOL boolValue

  // instance methods
  -[HMSettingBooleanValue attributeDescriptions]
  -[HMSettingBooleanValue initWithBoolValue:]
  -[HMSettingBooleanValue isEqual:]
  -[HMSettingBooleanValue boolValue]
  -[HMSettingBooleanValue initWithPayload:]
  -[HMSettingBooleanValue payloadCopy]
  -[HMSettingBooleanValue protoPayload]
  -[HMSettingBooleanValue initWithProtoPayload:]


HMXPCEventRouterClient : NSObject <HMFMessageReceiver, HMEPersistentConnectionClientDelegate, HMFLogging>
 @property  NSUUID *identifier
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSString *changeRegistrationsMessageName
 @property  NSString *updateMessageName
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMEPersistentConnectionClient *eventRouterClient
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMXPCEventRouterClient logCategory]

  // instance methods
  -[HMXPCEventRouterClient configure]
  -[HMXPCEventRouterClient .cxx_destruct]
  -[HMXPCEventRouterClient eventRouter]
  -[HMXPCEventRouterClient changeRegistrationsMessageName]
  -[HMXPCEventRouterClient _handleUpdateEventsMessage:]
  -[HMXPCEventRouterClient initWithMessageTargetUUID:queue:messageDispatcher:changeRegistrationsMessageName:updateMessageName:eventRouterClientFactory:]
  -[HMXPCEventRouterClient identifier]
  -[HMXPCEventRouterClient updateMessageName]
  -[HMXPCEventRouterClient messageReceiveQueue]
  -[HMXPCEventRouterClient eventRouterClient]
  -[HMXPCEventRouterClient sendChangeRegistrationsMessageWithAddedFilters:removedFilters:completion:]
  -[HMXPCEventRouterClient workQueue]
  -[HMXPCEventRouterClient messageDispatcher]
  -[HMXPCEventRouterClient initWithMessageTargetUUID:queue:messageDispatcher:changeRegistrationsMessageName:updateMessageName:storeReadHandle:storeWriteHandle:]
  -[HMXPCEventRouterClient messageTargetUUID]
  -[HMXPCEventRouterClient logIdentifier]
  -[HMXPCEventRouterClient messageDestination]


HMCameraControl : NSObject

HMPredicateUtilities : NSObject
  // class methods
  +[HMPredicateUtilities validatePredicate:]
  +[HMPredicateUtilities significantEventTypesInComparisonPredicate:]
  +[HMPredicateUtilities personFamiliarityOptionsInComparisonPredicate:]
  +[HMPredicateUtilities rewritePredicateForClient:home:]
  +[HMPredicateUtilities rewritePredicateForDaemon:characteristicIsInvalid:]
  +[HMPredicateUtilities containsPresenceEvents:]
  +[HMPredicateUtilities bitwiseAndValueWithKeyPath:inComparisonPredicate:validValues:]
  +[HMPredicateUtilities bitwiseAndValueWithKeyPath:inPredicate:validValues:]
  +[HMPredicateUtilities areOnlyHourAndMinuteSet:]


HMHomeAccessControl : HMAccessControl
 @property  BOOL owner
 @property  BOOL administrator
 @property  BOOL remoteAccessAllowed
 @property  BOOL accessAllowed
 @property  unsigned long accessNotAllowedReasonCode
 @property  HMUserPresenceAuthorization *presenceAuthStatus
 @property  HMUserPresenceCompute *presenceComputeStatus
 @property  HMUserCameraAccess *camerasAccess
 @property  BOOL announceAccessAllowed

  // instance methods
  -[HMHomeAccessControl updateAdministratorAccess:completionHandler:]
  -[HMHomeAccessControl setAdministrator:]
  -[HMHomeAccessControl initWithUser:allowAccess:owner:administratorPrivilege:remoteAccess:presenceAuthStatus:presenceComputeStatus:announceAccess:camerasAccess:]
  -[HMHomeAccessControl setPresenceAuthStatus:]
  -[HMHomeAccessControl updateCamerasAccessLevel:completionHandler:]
  -[HMHomeAccessControl isAdministrator]
  -[HMHomeAccessControl updatePresenceAuthorizationStatus:completionHandler:]
  -[HMHomeAccessControl setAccessAllowed:]
  -[HMHomeAccessControl .cxx_destruct]
  -[HMHomeAccessControl setRemoteAccessAllowed:]
  -[HMHomeAccessControl setAccessNotAllowedReasonCode:]
  -[HMHomeAccessControl accessNotAllowedReasonCode]
  -[HMHomeAccessControl setOwner:]
  -[HMHomeAccessControl isAccessAllowed]
  -[HMHomeAccessControl isEqual:]
  -[HMHomeAccessControl presenceComputeStatus]
  -[HMHomeAccessControl isOwner]
  -[HMHomeAccessControl presenceAuthorizationStatus]
  -[HMHomeAccessControl camerasAccessLevel]
  -[HMHomeAccessControl isRemoteAccessAllowed]
  -[HMHomeAccessControl camerasAccess]
  -[HMHomeAccessControl setCamerasAccess:]
  -[HMHomeAccessControl presenceAuthStatus]
  -[HMHomeAccessControl updateRemoteAccess:completionHandler:]
  -[HMHomeAccessControl setPresenceComputeStatus:]
  -[HMHomeAccessControl isAnnounceAccessAllowed]
  -[HMHomeAccessControl setAnnounceAccessAllowed:]
  -[HMHomeAccessControl presenceComputationStatus]
  -[HMHomeAccessControl updateAnnounceAccess:completionHandler:]


HMXPCClientConnectionProxy : HMFMessageTransport <HMXPCClientMessageHandling>
 @property  HMXPCClient *client
 @property  @? refreshHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMXPCClientConnectionProxy sendMessage:completionHandler:]
  -[HMXPCClientConnectionProxy initWithRefreshHandler:]
  -[HMXPCClientConnectionProxy fetchUserInfo:]
  -[HMXPCClientConnectionProxy .cxx_destruct]
  -[HMXPCClientConnectionProxy setClient:]
  -[HMXPCClientConnectionProxy refreshHandler]
  -[HMXPCClientConnectionProxy handleMessage:responseHandler:]
  -[HMXPCClientConnectionProxy client]
  -[HMXPCClientConnectionProxy handleMessage:]
  -[HMXPCClientConnectionProxy setRefreshHandler:]


HMXPCClient : HMFMessageTransport <HMFMessageTransportDelegate, HMFLogging>
 @property  NSString *logIdentifier
 @property  NSXPCConnection *connection
 @property  BOOL connectionValid
 @property  BOOL requiresCheckin
 @property  BOOL isAuthorizedForHomeDataAccess
 @property  int notifyRegisterToken
 @property  NSUUID *UUID
 @property  HMXPCMessageTransportConfiguration *configuration
 @property  NSDictionary *userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMXPCClient remoteObjectInterface]
  +[HMXPCClient exportedInterface]
  +[HMXPCClient logCategory]

  // instance methods
  -[HMXPCClient sendMessage:completionHandler:]
  -[HMXPCClient setRequiresCheckin:]
  -[HMXPCClient UUID]
  -[HMXPCClient setIsAuthorizedForHomeDataAccess:]
  -[HMXPCClient isAuthorizedForHomeDataAccess]
  -[HMXPCClient messageTransport:didReceiveMessage:]
  -[HMXPCClient configuration]
  -[HMXPCClient notifyRegisterToken]
  -[HMXPCClient setNotifyRegisterToken:]
  -[HMXPCClient .cxx_destruct]
  -[HMXPCClient setConnection:]
  -[HMXPCClient init]
  -[HMXPCClient connection]
  -[HMXPCClient initWithConfiguration:]
  -[HMXPCClient registerReconnectionHandler:]
  -[HMXPCClient requiresCheckin]
  -[HMXPCClient setConnectionValid:]
  -[HMXPCClient userInfo]
  -[HMXPCClient dealloc]
  -[HMXPCClient connectionValid]
  -[HMXPCClient logIdentifier]
  -[HMXPCClient initWithConfiguration:userInfo:]


HMCHIPEcosystemFetchRoomsResponse : HMCHIPEcosystemResponse
 @property  NSArray *rooms
 @property  HMMatterRoom *suggestedRoom

  // class methods
  +[HMCHIPEcosystemFetchRoomsResponse supportsSecureCoding]

  // instance methods
  -[HMCHIPEcosystemFetchRoomsResponse messageType]
  -[HMCHIPEcosystemFetchRoomsResponse initWithCoder:]
  -[HMCHIPEcosystemFetchRoomsResponse rooms]
  -[HMCHIPEcosystemFetchRoomsResponse .cxx_destruct]
  -[HMCHIPEcosystemFetchRoomsResponse attributeDescriptions]
  -[HMCHIPEcosystemFetchRoomsResponse isEqual:]
  -[HMCHIPEcosystemFetchRoomsResponse encodeWithCoder:]
  -[HMCHIPEcosystemFetchRoomsResponse suggestedRoom]
  -[HMCHIPEcosystemFetchRoomsResponse initWithRooms:suggestion:]


HMBoundedIntegerSetting : HMImmutableSetting
 @property  long long integerValue
 @property  long long maxValue
 @property  long long minValue
 @property  long long valueStepSize

  // instance methods
  -[HMBoundedIntegerSetting integerValue]
  -[HMBoundedIntegerSetting attributeDescriptions]
  -[HMBoundedIntegerSetting minValue]
  -[HMBoundedIntegerSetting isEqual:]
  -[HMBoundedIntegerSetting maxValue]
  -[HMBoundedIntegerSetting payloadCopy]
  -[HMBoundedIntegerSetting protoPayload]
  -[HMBoundedIntegerSetting initWithProtoPayload:]
  -[HMBoundedIntegerSetting valueStepSize]
  -[HMBoundedIntegerSetting initWithKeyPath:readOnly:integerValue:maxValue:minValue:valueStepSize:]
  -[HMBoundedIntegerSetting settingWithSettingValue:]
  -[HMBoundedIntegerSetting settingValue]
  -[HMBoundedIntegerSetting initWithKeyPath:readOnly:payload:]


HMAccessCodeAddRequest : NSObject <HMAccessCodeModificationRequest>
 @property  HMAccessCodeValue *accessCodeValue
 @property  HMAccessory *accessory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMAccessCodeAddRequest accessory]
  -[HMAccessCodeAddRequest .cxx_destruct]
  -[HMAccessCodeAddRequest accessCodeValue]
  -[HMAccessCodeAddRequest initWithAccessCodeValue:accessory:]
  -[HMAccessCodeAddRequest createAccessCodeAddRequestValue]


HMLightProfileSettings : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  BOOL naturalLightingEnabled
 @property  unsigned long supportedFeatures
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMLightProfileSettings supportsSecureCoding]
  +[HMLightProfileSettings shortDescription]

  // instance methods
  -[HMLightProfileSettings privateDescription]
  -[HMLightProfileSettings initWithCoder:]
  -[HMLightProfileSettings attributeDescriptions]
  -[HMLightProfileSettings isEqual:]
  -[HMLightProfileSettings supportedFeatures]
  -[HMLightProfileSettings shortDescription]
  -[HMLightProfileSettings copyWithZone:]
  -[HMLightProfileSettings encodeWithCoder:]
  -[HMLightProfileSettings isNaturalLightingEnabled]
  -[HMLightProfileSettings initWithSupportedFeatures:naturalLightingEnabled:]


HMSettingVersionValue : HMImmutableSettingValue
 @property  HMFVersion *version
 @property  long long type

  // instance methods
  -[HMSettingVersionValue .cxx_destruct]
  -[HMSettingVersionValue attributeDescriptions]
  -[HMSettingVersionValue isEqual:]
  -[HMSettingVersionValue type]
  -[HMSettingVersionValue version]
  -[HMSettingVersionValue initWithPayload:]
  -[HMSettingVersionValue payloadCopy]
  -[HMSettingVersionValue initWithVersion:type:]


HMCameraClipEncryptedDataContext : NSObject <NSCopying>
 @property  NSData *initializationVector
 @property  NSData *ciphertext
 @property  NSData *tag
 @property  NSData *dataRepresentation

  // instance methods
  -[HMCameraClipEncryptedDataContext tag]
  -[HMCameraClipEncryptedDataContext dataRepresentation]
  -[HMCameraClipEncryptedDataContext .cxx_destruct]
  -[HMCameraClipEncryptedDataContext isEqual:]
  -[HMCameraClipEncryptedDataContext initWithDataRepresentation:]
  -[HMCameraClipEncryptedDataContext ciphertext]
  -[HMCameraClipEncryptedDataContext copyWithZone:]
  -[HMCameraClipEncryptedDataContext initializationVector]
  -[HMCameraClipEncryptedDataContext initWithInitializationVector:ciphertext:tag:]


_HMPrivacySettingsProvider : NSObject <_HMPrivacySettingsProvider>
 @property  unsigned long cachedAuthorizationStatus
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HMPrivacySettingsProvider cachedAuthorizationStatus]
  -[_HMPrivacySettingsProvider queryAuthorizationStatus]
  -[_HMPrivacySettingsProvider requestAccessWithQueue:completion:]


HMImmutableSettingsProtoAvailableLanguageListEvent : PBCodable <NSCopying>
 @property  NSMutableArray *languages

  // class methods
  +[HMImmutableSettingsProtoAvailableLanguageListEvent languagesType]

  // instance methods
  -[HMImmutableSettingsProtoAvailableLanguageListEvent mergeFrom:]
  -[HMImmutableSettingsProtoAvailableLanguageListEvent languages]
  -[HMImmutableSettingsProtoAvailableLanguageListEvent .cxx_destruct]
  -[HMImmutableSettingsProtoAvailableLanguageListEvent setLanguages:]
  -[HMImmutableSettingsProtoAvailableLanguageListEvent dictionaryRepresentation]
  -[HMImmutableSettingsProtoAvailableLanguageListEvent writeTo:]
  -[HMImmutableSettingsProtoAvailableLanguageListEvent isEqual:]
  -[HMImmutableSettingsProtoAvailableLanguageListEvent copyTo:]
  -[HMImmutableSettingsProtoAvailableLanguageListEvent languagesCount]
  -[HMImmutableSettingsProtoAvailableLanguageListEvent readFrom:]
  -[HMImmutableSettingsProtoAvailableLanguageListEvent copyWithZone:]
  -[HMImmutableSettingsProtoAvailableLanguageListEvent clearLanguages]
  -[HMImmutableSettingsProtoAvailableLanguageListEvent addLanguages:]
  -[HMImmutableSettingsProtoAvailableLanguageListEvent languagesAtIndex:]


HMImmutableSettingValue : NSObject <HMMessageEncoding, HMFObject>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMImmutableSettingValue shortDescription]

  // instance methods
  -[HMImmutableSettingValue privateDescription]
  -[HMImmutableSettingValue attributeDescriptions]
  -[HMImmutableSettingValue isEqual:]
  -[HMImmutableSettingValue shortDescription]
  -[HMImmutableSettingValue initWithPayload:]
  -[HMImmutableSettingValue payloadCopy]
  -[HMImmutableSettingValue initSettingValue]
  -[HMImmutableSettingValue protoPayload]
  -[HMImmutableSettingValue initWithProtoPayload:]


HMHomePersonManagerSettings : NSObject <HMFObject, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  BOOL faceClassificationEnabled
 @property  BOOL enabled
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMHomePersonManagerSettings supportsSecureCoding]
  +[HMHomePersonManagerSettings shortDescription]

  // instance methods
  -[HMHomePersonManagerSettings privateDescription]
  -[HMHomePersonManagerSettings initWithCoder:]
  -[HMHomePersonManagerSettings attributeDescriptions]
  -[HMHomePersonManagerSettings isEqual:]
  -[HMHomePersonManagerSettings isEnabled]
  -[HMHomePersonManagerSettings mutableCopyWithZone:]
  -[HMHomePersonManagerSettings shortDescription]
  -[HMHomePersonManagerSettings copyWithZone:]
  -[HMHomePersonManagerSettings encodeWithCoder:]
  -[HMHomePersonManagerSettings isFaceClassificationEnabled]
  -[HMHomePersonManagerSettings setFaceClassificationEnabled:]


HMMutableHomePersonManagerSettings : HMHomePersonManagerSettings
 @property  BOOL faceClassificationEnabled

  // instance methods
  -[HMMutableHomePersonManagerSettings copyWithZone:]
  -[HMMutableHomePersonManagerSettings setEnabled:]


HMSymptom : NSObject <NSSecureCoding>
 @property  long long type
 @property  NSString *localizedTitle

  // class methods
  +[HMSymptom supportsSecureCoding]
  +[HMSymptom archive:]
  +[HMSymptom symptomWithType:]
  +[HMSymptom unarchive:]
  +[HMSymptom unarchiveSymptomDict:]
  +[HMSymptom archiveSymptomDict:]

  // instance methods
  -[HMSymptom localizedTitle]
  -[HMSymptom initWithType:]
  -[HMSymptom initWithCoder:]
  -[HMSymptom .cxx_destruct]
  -[HMSymptom isEqual:]
  -[HMSymptom type]
  -[HMSymptom encodeWithCoder:]


HMXPCMessageTransportConfiguration : NSObject <HMFObject, NSCopying, NSMutableCopying>
 @property  unsigned long requiredEntitlements
 @property  BOOL requiresHomeDataAccess
 @property  NSString *machServiceName
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMXPCMessageTransportConfiguration shortDescription]

  // instance methods
  -[HMXPCMessageTransportConfiguration requiredEntitlements]
  -[HMXPCMessageTransportConfiguration machServiceName]
  -[HMXPCMessageTransportConfiguration setRequiredEntitlements:]
  -[HMXPCMessageTransportConfiguration privateDescription]
  -[HMXPCMessageTransportConfiguration .cxx_destruct]
  -[HMXPCMessageTransportConfiguration initWithMachServiceName:]
  -[HMXPCMessageTransportConfiguration attributeDescriptions]
  -[HMXPCMessageTransportConfiguration isEqual:]
  -[HMXPCMessageTransportConfiguration mutableCopyWithZone:]
  -[HMXPCMessageTransportConfiguration shortDescription]
  -[HMXPCMessageTransportConfiguration copyWithZone:]
  -[HMXPCMessageTransportConfiguration requiresHomeDataAccess]
  -[HMXPCMessageTransportConfiguration setRequiresHomeDataAccess:]


HMMutableXPCMessageTransportConfiguration : HMXPCMessageTransportConfiguration
 @property  unsigned long requiredEntitlements
 @property  BOOL requiresHomeDataAccess

  // instance methods
  -[HMMutableXPCMessageTransportConfiguration copyWithZone:]


HMDevice : NSObject <HMFObject, HMObjectMerge, NSSecureCoding>
 @property  HMFKey *rapportIRK
 @property  NSString *idsDestination
 @property  NSUUID *uuid
 @property  NSString *name
 @property  NSUUID *idsIdentifier
 @property  NSUUID *uniqueIdentifier
 @property  BOOL currentDevice
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDevice supportsSecureCoding]
  +[HMDevice shortDescription]

  // instance methods
  -[HMDevice idsIdentifier]
  -[HMDevice name]
  -[HMDevice privateDescription]
  -[HMDevice uniqueIdentifier]
  -[HMDevice initWithCoder:]
  -[HMDevice .cxx_destruct]
  -[HMDevice rapportIRK]
  -[HMDevice setName:]
  -[HMDevice attributeDescriptions]
  -[HMDevice init]
  -[HMDevice isEqual:]
  -[HMDevice isCurrentDevice]
  -[HMDevice uuid]
  -[HMDevice shortDescription]
  -[HMDevice idsDestination]
  -[HMDevice encodeWithCoder:]
  -[HMDevice _mergeWithNewObject:]
  -[HMDevice initWithUUID:name:isCurrentDevice:idsIdentifier:idsDestination:rapportIRK:]
  -[HMDevice setRapportIRK:]
  -[HMDevice IDSDeviceForIDSService:]
  -[HMDevice IDSDestinationForIDSService:]


HMStringListSetting : HMImmutableSetting
 @property  NSArray *stringListValue

  // instance methods
  -[HMStringListSetting .cxx_destruct]
  -[HMStringListSetting attributeDescriptions]
  -[HMStringListSetting isEqual:]
  -[HMStringListSetting payloadCopy]
  -[HMStringListSetting initWithKeyPath:readOnly:payload:]
  -[HMStringListSetting stringListValue]
  -[HMStringListSetting initWithKeyPath:readOnly:stringListValue:]


HMAccessorySettingsController : NSObject <HMFLogging>
 @property  <HMAccessorySettingsMessengerFactory> *messengerFactory
 @property  HMAccessorySettingsMetricsDispatcher *metricsDispatcher
 @property  <HMAccessorySettingsControllerDataSource> *dataSource
 @property  _HMContext *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessorySettingsController logCategory]

  // instance methods
  -[HMAccessorySettingsController messengerFactory]
  -[HMAccessorySettingsController setDataSource:]
  -[HMAccessorySettingsController .cxx_destruct]
  -[HMAccessorySettingsController dataSource]
  -[HMAccessorySettingsController dataSourceHomeWithHomeIdentifier:]
  -[HMAccessorySettingsController metricsDispatcher]
  -[HMAccessorySettingsController messengerWithHomeUUID:]
  -[HMAccessorySettingsController context]
  -[HMAccessorySettingsController initWithContext:messengerFactory:metricsDispatcher:]
  -[HMAccessorySettingsController updateAccessorySettingWithHomeIdentifier:accessoryIdentifier:keyPath:settingValue:completionHandler:]
  -[HMAccessorySettingsController updateAccessorySettingWithAccessoryIdentifier:keyPath:settingValue:completionHandler:]


HMCameraClipVideoFileCombiner : NSObject <HMFLogging>
 @property  NSArray *videoFileURLs
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraClipVideoFileCombiner logCategory]

  // instance methods
  -[HMCameraClipVideoFileCombiner .cxx_destruct]
  -[HMCameraClipVideoFileCombiner queue]
  -[HMCameraClipVideoFileCombiner videoFileURLs]
  -[HMCameraClipVideoFileCombiner writeSamplesFromOutputs:toInput:completion:]
  -[HMCameraClipVideoFileCombiner initWithVideoFileURLs:queue:]
  -[HMCameraClipVideoFileCombiner combineToOutputFileURL:completion:]


HMCHIPEcosystemConfigureAccessoryResponse : HMCHIPEcosystemResponse
  // class methods
  +[HMCHIPEcosystemConfigureAccessoryResponse supportsSecureCoding]

  // instance methods
  -[HMCHIPEcosystemConfigureAccessoryResponse messageType]


HMImmutableSettingsProtoBoolValueEvent : PBCodable <NSCopying>
 @property  BOOL hasValue
 @property  BOOL value

  // instance methods
  -[HMImmutableSettingsProtoBoolValueEvent mergeFrom:]
  -[HMImmutableSettingsProtoBoolValueEvent setHasValue:]
  -[HMImmutableSettingsProtoBoolValueEvent hasValue]
  -[HMImmutableSettingsProtoBoolValueEvent dictionaryRepresentation]
  -[HMImmutableSettingsProtoBoolValueEvent writeTo:]
  -[HMImmutableSettingsProtoBoolValueEvent isEqual:]
  -[HMImmutableSettingsProtoBoolValueEvent copyTo:]
  -[HMImmutableSettingsProtoBoolValueEvent readFrom:]
  -[HMImmutableSettingsProtoBoolValueEvent setValue:]
  -[HMImmutableSettingsProtoBoolValueEvent value]
  -[HMImmutableSettingsProtoBoolValueEvent copyWithZone:]


HMCharacteristicEvent : HMEvent <NSSecureCoding, HMCharacteristicEventProtocol, NSCopying, NSMutableCopying>
 @property  <NSCopying> *triggerValue
 @property  HMCharacteristic *characteristic
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCharacteristicEvent supportsSecureCoding]
  +[HMCharacteristicEvent createWithDictionary:home:]

  // instance methods
  -[HMCharacteristicEvent initWithCoder:]
  -[HMCharacteristicEvent .cxx_destruct]
  -[HMCharacteristicEvent mutableCopyWithZone:]
  -[HMCharacteristicEvent triggerValue]
  -[HMCharacteristicEvent copyWithZone:]
  -[HMCharacteristicEvent setTriggerValue:]
  -[HMCharacteristicEvent encodeWithCoder:]
  -[HMCharacteristicEvent _serializeForAdd]
  -[HMCharacteristicEvent _updateFromDictionary:]
  -[HMCharacteristicEvent _mergeWithNewObject:]
  -[HMCharacteristicEvent initWithDict:characteristic:triggerValue:]
  -[HMCharacteristicEvent characteristic]
  -[HMCharacteristicEvent initWithCharacteristic:triggerValue:]
  -[HMCharacteristicEvent setCharacteristic:]
  -[HMCharacteristicEvent updateTriggerValue:completionHandler:]


HMMutableCharacteristicEvent : HMCharacteristicEvent
 @property  HMCharacteristic *characteristic
 @property  <NSCopying> *triggerValue


HMCHIPEcosystemConfigureAccessoryRequest : HMCHIPEcosystemRequest
 @property  HMMatterRoom *accessoryRoom
 @property  NSString *accessoryName

  // class methods
  +[HMCHIPEcosystemConfigureAccessoryRequest supportsSecureCoding]

  // instance methods
  -[HMCHIPEcosystemConfigureAccessoryRequest messageType]
  -[HMCHIPEcosystemConfigureAccessoryRequest initWithCoder:]
  -[HMCHIPEcosystemConfigureAccessoryRequest .cxx_destruct]
  -[HMCHIPEcosystemConfigureAccessoryRequest attributeDescriptions]
  -[HMCHIPEcosystemConfigureAccessoryRequest isEqual:]
  -[HMCHIPEcosystemConfigureAccessoryRequest accessoryName]
  -[HMCHIPEcosystemConfigureAccessoryRequest encodeWithCoder:]
  -[HMCHIPEcosystemConfigureAccessoryRequest accessoryRoom]
  -[HMCHIPEcosystemConfigureAccessoryRequest initWithAccessoryName:accessoryRoom:]
  -[HMCHIPEcosystemConfigureAccessoryRequest responseWithSuccess]


HMAccessCodeUpdateRequestValue : NSObject <HMFObject, HMAccessCodeModificationRequestValue, NSCopying, NSSecureCoding>
 @property  HMAccessoryAccessCodeValue *accessoryAccessCodeValue
 @property  HMAccessCodeValue *updatedAccessCodeValue
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *accessoryUUID

  // class methods
  +[HMAccessCodeUpdateRequestValue supportsSecureCoding]
  +[HMAccessCodeUpdateRequestValue shortDescription]

  // instance methods
  -[HMAccessCodeUpdateRequestValue accessoryUUID]
  -[HMAccessCodeUpdateRequestValue privateDescription]
  -[HMAccessCodeUpdateRequestValue initWithCoder:]
  -[HMAccessCodeUpdateRequestValue .cxx_destruct]
  -[HMAccessCodeUpdateRequestValue attributeDescriptions]
  -[HMAccessCodeUpdateRequestValue isEqual:]
  -[HMAccessCodeUpdateRequestValue shortDescription]
  -[HMAccessCodeUpdateRequestValue copyWithZone:]
  -[HMAccessCodeUpdateRequestValue encodeWithCoder:]
  -[HMAccessCodeUpdateRequestValue accessoryAccessCodeValue]
  -[HMAccessCodeUpdateRequestValue updatedAccessCodeValue]
  -[HMAccessCodeUpdateRequestValue initWithAccessoryAccessCodeValue:updatedAccessCodeValue:]


HMFObjectCacheHMAccessoryCategory : NSObject
  // class methods
  +[HMFObjectCacheHMAccessoryCategory cachedInstanceForHMAccessoryCategory:]


HMAccessoryCategory : NSObject <HMFDumpState, NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  BOOL isWiFiRouterAccessoryCategory
 @property  BOOL isTelevisionAccessoryCategory
 @property  NSString *categoryType
 @property  NSString *localizedDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessoryCategory supportsSecureCoding]

  // instance methods
  -[HMAccessoryCategory categoryType]
  -[HMAccessoryCategory name]
  -[HMAccessoryCategory localizedDescription]
  -[HMAccessoryCategory uniqueIdentifier]
  -[HMAccessoryCategory initWithCoder:]
  -[HMAccessoryCategory localizedDescriptionPlural]
  -[HMAccessoryCategory .cxx_destruct]
  -[HMAccessoryCategory initWithType:name:]
  -[HMAccessoryCategory init]
  -[HMAccessoryCategory isEqual:]
  -[HMAccessoryCategory dumpState]
  -[HMAccessoryCategory isWiFiRouterAccessoryCategory]
  -[HMAccessoryCategory copyWithZone:]
  -[HMAccessoryCategory isTelevisionAccessoryCategory]
  -[HMAccessoryCategory encodeWithCoder:]


HMAccessorySetupCompletedInfo : NSObject <HMFObject, NSSecureCoding>
 @property  NSArray *addedAccessoryUUIDs
 @property  NSString *homeUUID
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessorySetupCompletedInfo supportsSecureCoding]
  +[HMAccessorySetupCompletedInfo shortDescription]

  // instance methods
  -[HMAccessorySetupCompletedInfo privateDescription]
  -[HMAccessorySetupCompletedInfo initWithCoder:]
  -[HMAccessorySetupCompletedInfo .cxx_destruct]
  -[HMAccessorySetupCompletedInfo attributeDescriptions]
  -[HMAccessorySetupCompletedInfo isEqual:]
  -[HMAccessorySetupCompletedInfo homeUUID]
  -[HMAccessorySetupCompletedInfo shortDescription]
  -[HMAccessorySetupCompletedInfo encodeWithCoder:]
  -[HMAccessorySetupCompletedInfo addedAccessoryUUIDs]
  -[HMAccessorySetupCompletedInfo initWithHomeUUID:addedAccessoryUUIDs:]


HMMediaDestination : NSObject <HMFLogging, HMFObject, NSCopying, NSMutableCopying, NSSecureCoding, HMEProtoBufferCoding>
 @property  unsigned long supportedOptions
 @property  NSUUID *audioGroupIdentifier
 @property  NSUUID *uniqueIdentifier
 @property  NSString *identifier
 @property  NSUUID *parentIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMMediaDestination supportsSecureCoding]
  +[HMMediaDestination logCategory]
  +[HMMediaDestination shortDescription]
  +[HMMediaDestination payloadForDestination:options:]
  +[HMMediaDestination payloadForNullDestination]

  // instance methods
  -[HMMediaDestination privateDescription]
  -[HMMediaDestination uniqueIdentifier]
  -[HMMediaDestination initWithCoder:]
  -[HMMediaDestination setSupportedOptions:]
  -[HMMediaDestination .cxx_destruct]
  -[HMMediaDestination attributeDescriptions]
  -[HMMediaDestination isEqual:]
  -[HMMediaDestination identifier]
  -[HMMediaDestination supportedOptions]
  -[HMMediaDestination parentIdentifier]
  -[HMMediaDestination mutableCopyWithZone:]
  -[HMMediaDestination shortDescription]
  -[HMMediaDestination copyWithZone:]
  -[HMMediaDestination logIdentifier]
  -[HMMediaDestination encodeWithCoder:]
  -[HMMediaDestination setAudioGroupIdentifier:]
  -[HMMediaDestination audioGroupIdentifier]
  -[HMMediaDestination initWithUniqueIdentifier:parentIdentifier:supportedOptions:audioGroupIdentifier:]
  -[HMMediaDestination containsSupportedOptions:]
  -[HMMediaDestination encodeToProtoBufferData]
  -[HMMediaDestination initWithProtoBufferData:]
  -[HMMediaDestination initWithUniqueIdentifier:parentIdentifier:supportedOptions:]
  -[HMMediaDestination containsHomeTheaterSupportedOptions]
  -[HMMediaDestination containsMediaSystemSupportedOptions]


HMMutableMediaDestination : HMMediaDestination
 @property  unsigned long supportedOptions
 @property  NSUUID *audioGroupIdentifier

  // class methods
  +[HMMutableMediaDestination logCategory]

  // instance methods
  -[HMMutableMediaDestination copyWithZone:]


HMNumberRange : NSObject
 @property  NSNumber *minValue
 @property  NSNumber *maxValue

  // class methods
  +[HMNumberRange numberRangeWithMaxValue:]
  +[HMNumberRange numberRangeWithMinValue:]
  +[HMNumberRange numberRangeWithMinValue:maxValue:]

  // instance methods
  -[HMNumberRange initWithMinValue:maxValue:]
  -[HMNumberRange .cxx_destruct]
  -[HMNumberRange minValue]
  -[HMNumberRange isEqual:]
  -[HMNumberRange maxValue]


HMCharacteristicThresholdRangeEvent : HMEvent <HMCharacteristicEventProtocol, NSSecureCoding, NSCopying, NSMutableCopying>
 @property  HMCharacteristic *characteristic
 @property  HMNumberRange *thresholdRange
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCharacteristicThresholdRangeEvent supportsSecureCoding]
  +[HMCharacteristicThresholdRangeEvent createWithDictionary:home:]
  +[HMCharacteristicThresholdRangeEvent isSupportedForHome:]

  // instance methods
  -[HMCharacteristicThresholdRangeEvent initWithCoder:]
  -[HMCharacteristicThresholdRangeEvent .cxx_destruct]
  -[HMCharacteristicThresholdRangeEvent mutableCopyWithZone:]
  -[HMCharacteristicThresholdRangeEvent copyWithZone:]
  -[HMCharacteristicThresholdRangeEvent encodeWithCoder:]
  -[HMCharacteristicThresholdRangeEvent _serializeForAdd]
  -[HMCharacteristicThresholdRangeEvent _updateFromDictionary:]
  -[HMCharacteristicThresholdRangeEvent _mergeWithNewObject:]
  -[HMCharacteristicThresholdRangeEvent characteristic]
  -[HMCharacteristicThresholdRangeEvent setCharacteristic:]
  -[HMCharacteristicThresholdRangeEvent initWithDict:characteristic:thresholdRange:]
  -[HMCharacteristicThresholdRangeEvent setThresholdRange:]
  -[HMCharacteristicThresholdRangeEvent thresholdRange]
  -[HMCharacteristicThresholdRangeEvent initWithCharacteristic:thresholdRange:]
  -[HMCharacteristicThresholdRangeEvent updateThresholdRange:completionHandler:]


HMMutableCharacteristicThresholdRangeEvent : HMCharacteristicThresholdRangeEvent
 @property  HMCharacteristic *characteristic
 @property  HMNumberRange *thresholdRange


HMCameraSnapshot : HMCameraSource <HMFObject>
 @property  BOOL didFillSlot
 @property  NSDate *captureDate
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraSnapshot logCategory]
  +[HMCameraSnapshot shortDescription]

  // instance methods
  -[HMCameraSnapshot privateDescription]
  -[HMCameraSnapshot captureDate]
  -[HMCameraSnapshot .cxx_destruct]
  -[HMCameraSnapshot attributeDescriptions]
  -[HMCameraSnapshot shortDescription]
  -[HMCameraSnapshot dealloc]
  -[HMCameraSnapshot _releaseSlotIdentifier]
  -[HMCameraSnapshot setDidFillSlot:]
  -[HMCameraSnapshot initWithProfileUniqueIdentifier:slotIdentifier:aspectRatio:captureDate:]
  -[HMCameraSnapshot fillSlotWithCompletionHandler:]
  -[HMCameraSnapshot didFillSlot]


_HMCameraSnapshotControl : _HMCameraControl
 @property  <_HMCameraSnapshotControlDelegate> *delegate
 @property  HMCameraSnapshot *mostRecentSnapshot

  // class methods
  +[_HMCameraSnapshotControl logCategory]

  // instance methods
  -[_HMCameraSnapshotControl .cxx_destruct]
  -[_HMCameraSnapshotControl setDelegate:]
  -[_HMCameraSnapshotControl takeSnapshot]
  -[_HMCameraSnapshotControl delegate]
  -[_HMCameraSnapshotControl _takeSnapshot]
  -[_HMCameraSnapshotControl _handleMostRecentSnapshot:]
  -[_HMCameraSnapshotControl _fetchCameraSnapshotForBulletinContext:completionHandler:]
  -[_HMCameraSnapshotControl mostRecentSnapshot]
  -[_HMCameraSnapshotControl setMostRecentSnapshot:]
  -[_HMCameraSnapshotControl _notifyDelegateOfMostRecentSnapshotUpdated]
  -[_HMCameraSnapshotControl __configureWithContext:home:]
  -[_HMCameraSnapshotControl _handleMostRecentSnapshotUpdatedMessage:]
  -[_HMCameraSnapshotControl _handleSnapshot:error:isMostRecent:]
  -[_HMCameraSnapshotControl _handleCreateSnapshotWithBulletinContext:error:completionHandler:]
  -[_HMCameraSnapshotControl _notifyDelegateOfDidTakeSnapshot:error:]
  -[_HMCameraSnapshotControl initWithCameraProfile:profileUniqueIdentifier:mostRecentSnapshot:]
  -[_HMCameraSnapshotControl fetchCameraSnapshotForBulletinContext:completionHandler:]
  -[_HMCameraSnapshotControl mergeNewSnapshotControl:]
  -[_HMCameraSnapshotControl _registerNotificationHandlers]


__HMActiveAssertion : HMFAssertion
 @property  HMHomeManager *manager

  // instance methods
  -[__HMActiveAssertion .cxx_destruct]
  -[__HMActiveAssertion initWithName:]
  -[__HMActiveAssertion manager]
  -[__HMActiveAssertion dealloc]
  -[__HMActiveAssertion invalidate]
  -[__HMActiveAssertion initWithHomeManager:reason:]


HMAnnounceUserSettings : HMFObject <NSSecureCoding>
 @property  unsigned long deviceNotificationMode

  // class methods
  +[HMAnnounceUserSettings supportsSecureCoding]
  +[HMAnnounceUserSettings shortDescription]

  // instance methods
  -[HMAnnounceUserSettings privateDescription]
  -[HMAnnounceUserSettings initWithCoder:]
  -[HMAnnounceUserSettings attributeDescriptions]
  -[HMAnnounceUserSettings isEqual:]
  -[HMAnnounceUserSettings deviceNotificationMode]
  -[HMAnnounceUserSettings shortDescription]
  -[HMAnnounceUserSettings initWithDeviceNotificationMode:]
  -[HMAnnounceUserSettings encodeWithCoder:]


HMMediaGroupProtoMediaSystemRoles : PBCodable <NSCopying>
 @property  BOOL hasLeftDestinationIdentifier
 @property  NSString *leftDestinationIdentifier
 @property  BOOL hasRightDestinationIdentifier
 @property  NSString *rightDestinationIdentifier

  // instance methods
  -[HMMediaGroupProtoMediaSystemRoles mergeFrom:]
  -[HMMediaGroupProtoMediaSystemRoles .cxx_destruct]
  -[HMMediaGroupProtoMediaSystemRoles dictionaryRepresentation]
  -[HMMediaGroupProtoMediaSystemRoles writeTo:]
  -[HMMediaGroupProtoMediaSystemRoles isEqual:]
  -[HMMediaGroupProtoMediaSystemRoles copyTo:]
  -[HMMediaGroupProtoMediaSystemRoles readFrom:]
  -[HMMediaGroupProtoMediaSystemRoles copyWithZone:]
  -[HMMediaGroupProtoMediaSystemRoles setLeftDestinationIdentifier:]
  -[HMMediaGroupProtoMediaSystemRoles setRightDestinationIdentifier:]
  -[HMMediaGroupProtoMediaSystemRoles hasLeftDestinationIdentifier]
  -[HMMediaGroupProtoMediaSystemRoles hasRightDestinationIdentifier]
  -[HMMediaGroupProtoMediaSystemRoles leftDestinationIdentifier]
  -[HMMediaGroupProtoMediaSystemRoles rightDestinationIdentifier]


HMDurationEvent : HMTimeEvent <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  double duration

  // class methods
  +[HMDurationEvent supportsSecureCoding]
  +[HMDurationEvent createWithDictionary:home:]

  // instance methods
  -[HMDurationEvent initWithDuration:]
  -[HMDurationEvent initWithCoder:]
  -[HMDurationEvent setDuration:]
  -[HMDurationEvent mutableCopyWithZone:]
  -[HMDurationEvent setOffset:]
  -[HMDurationEvent copyWithZone:]
  -[HMDurationEvent duration]
  -[HMDurationEvent encodeWithCoder:]
  -[HMDurationEvent _serializeForAdd]
  -[HMDurationEvent _updateFromDictionary:]
  -[HMDurationEvent initWithDict:duration:]
  -[HMDurationEvent updateDuration:completionHandler:]


HMMutableDurationEvent : HMDurationEvent
 @property  double duration


HMResidentDevice : NSObject <HMFLogging, HMFObject, HMObjectMerge, NSSecureCoding>
 @property  _HMContext *context
 @property  BOOL enabled
 @property  unsigned long status
 @property  unsigned long capabilities
 @property  HMHome *home
 @property  NSUUID *accountIdentifier
 @property  NSUUID *uuid
 @property  <HMResidentDeviceDelegate> *delegate
 @property  NSUUID *uniqueIdentifier
 @property  HMDevice *device
 @property  NSString *name
 @property  BOOL currentDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMResidentDevice supportsSecureCoding]
  +[HMResidentDevice logCategory]
  +[HMResidentDevice shortDescription]

  // instance methods
  -[HMResidentDevice home]
  -[HMResidentDevice setCapabilities:]
  -[HMResidentDevice name]
  -[HMResidentDevice privateDescription]
  -[HMResidentDevice uniqueIdentifier]
  -[HMResidentDevice initWithCoder:]
  -[HMResidentDevice capabilities]
  -[HMResidentDevice .cxx_destruct]
  -[HMResidentDevice _unconfigure]
  -[HMResidentDevice setDelegate:]
  -[HMResidentDevice attributeDescriptions]
  -[HMResidentDevice init]
  -[HMResidentDevice setHome:]
  -[HMResidentDevice isEnabled]
  -[HMResidentDevice isCurrentDevice]
  -[HMResidentDevice accountIdentifier]
  -[HMResidentDevice status]
  -[HMResidentDevice uuid]
  -[HMResidentDevice delegate]
  -[HMResidentDevice setStatus:]
  -[HMResidentDevice setAccountIdentifier:]
  -[HMResidentDevice shortDescription]
  -[HMResidentDevice setContext:]
  -[HMResidentDevice logIdentifier]
  -[HMResidentDevice setEnabled:]
  -[HMResidentDevice device]
  -[HMResidentDevice encodeWithCoder:]
  -[HMResidentDevice context]
  -[HMResidentDevice _mergeWithNewObject:]
  -[HMResidentDevice _unconfigureContext]
  -[HMResidentDevice __configureWithContext:home:]
  -[HMResidentDevice updatedEnabled:completionHandler:]
  -[HMResidentDevice handleRuntimeStateUpdate:]


HMCameraStreamAudioPreferences : NSObject <NSSecureCoding>
 @property  NSSet *codecs

  // class methods
  +[HMCameraStreamAudioPreferences supportsSecureCoding]

  // instance methods
  -[HMCameraStreamAudioPreferences initWithCoder:]
  -[HMCameraStreamAudioPreferences codecs]
  -[HMCameraStreamAudioPreferences .cxx_destruct]
  -[HMCameraStreamAudioPreferences setCodecs:]
  -[HMCameraStreamAudioPreferences isEqual:]
  -[HMCameraStreamAudioPreferences encodeWithCoder:]


HMCameraStreamVideoPreferences : NSObject <NSSecureCoding>
 @property  NSSet *resolutions

  // class methods
  +[HMCameraStreamVideoPreferences supportsSecureCoding]

  // instance methods
  -[HMCameraStreamVideoPreferences initWithCoder:]
  -[HMCameraStreamVideoPreferences .cxx_destruct]
  -[HMCameraStreamVideoPreferences isEqual:]
  -[HMCameraStreamVideoPreferences encodeWithCoder:]
  -[HMCameraStreamVideoPreferences resolutions]
  -[HMCameraStreamVideoPreferences setResolutions:]


HMCameraStreamPreferences : NSObject <NSSecureCoding>
 @property  HMCameraStreamAudioPreferences *audioPreferences
 @property  HMCameraStreamVideoPreferences *videoPreferences
 @property  long long minimumRequiredAvailableOrInUseStreams
 @property  BOOL shouldTakeOwnershipOfExistingStream

  // class methods
  +[HMCameraStreamPreferences supportsSecureCoding]

  // instance methods
  -[HMCameraStreamPreferences initWithCoder:]
  -[HMCameraStreamPreferences .cxx_destruct]
  -[HMCameraStreamPreferences isEqual:]
  -[HMCameraStreamPreferences encodeWithCoder:]
  -[HMCameraStreamPreferences setAudioPreferences:]
  -[HMCameraStreamPreferences setVideoPreferences:]
  -[HMCameraStreamPreferences videoPreferences]
  -[HMCameraStreamPreferences audioPreferences]
  -[HMCameraStreamPreferences minimumRequiredAvailableOrInUseStreams]
  -[HMCameraStreamPreferences shouldTakeOwnershipOfExistingStream]
  -[HMCameraStreamPreferences setMinimumRequiredAvailableOrInUseStreams:]
  -[HMCameraStreamPreferences setShouldTakeOwnershipOfExistingStream:]
  -[HMCameraStreamPreferences initWithAudioPreferences:videoPreferences:]


HMHomeEventTopic : NSObject
  // class methods
  +[HMHomeEventTopic suffixIDFromTopicSuffix:]
  +[HMHomeEventTopic topicFromSuffixID:homeUUID:]


HMDelegateCaller : NSObject
  // class methods
  +[HMDelegateCaller delegateCallerWithOperationQueue:]

  // instance methods
  -[HMDelegateCaller callCompletion:error:mediaSystem:]
  -[HMDelegateCaller callCompletion:errorString:]
  -[HMDelegateCaller callCompletion:error:proxiedDevice:]
  -[HMDelegateCaller callCompletion:zone:error:]
  -[HMDelegateCaller _localizedError:]
  -[HMDelegateCaller callCompletion:actionSet:error:]
  -[HMDelegateCaller callCompletion:room:error:]
  -[HMDelegateCaller callCompletion:array:]
  -[HMDelegateCaller init]
  -[HMDelegateCaller callCompletion:value:conflictName:error:]
  -[HMDelegateCaller callCompletion:value:error:]
  -[HMDelegateCaller callCompletion:error:boolValue:array:]
  -[HMDelegateCaller initWithQueue:]
  -[HMDelegateCaller callCompletion:error:dictionary:]
  -[HMDelegateCaller callCompletion:serviceGroup:error:]
  -[HMDelegateCaller callCompletion:home:error:]
  -[HMDelegateCaller callCompletion:error:]
  -[HMDelegateCaller callCompletion:error:snapshot:]
  -[HMDelegateCaller callCompletion:isUsingHomeKit:isUsingCloudServices:error:]
  -[HMDelegateCaller callCompletion:error:obj:]
  -[HMDelegateCaller callCompletion:array:additionalAccessoryInfo:error:]
  -[HMDelegateCaller invokeBlock:]
  -[HMDelegateCaller callCompletion:obj:error:]
  -[HMDelegateCaller callCompletion:service:error:]
  -[HMDelegateCaller callCompletion:user:error:]
  -[HMDelegateCaller callCompletion:invitations:error:]
  -[HMDelegateCaller callCompletion:error:array:]


__HMMainThreadDelegateCaller : HMDelegateCaller
  // instance methods
  -[__HMMainThreadDelegateCaller invokeBlock:]


__HMQueueDelegateCaller : HMDelegateCaller
  // instance methods
  -[__HMQueueDelegateCaller .cxx_destruct]
  -[__HMQueueDelegateCaller initWithQueue:]
  -[__HMQueueDelegateCaller invokeBlock:]


__HMOperationQueueDelegateCaller : HMDelegateCaller
  // instance methods
  -[__HMOperationQueueDelegateCaller .cxx_destruct]
  -[__HMOperationQueueDelegateCaller init]
  -[__HMOperationQueueDelegateCaller initWithQueue:]
  -[__HMOperationQueueDelegateCaller initWithOperationQueue:]
  -[__HMOperationQueueDelegateCaller invokeBlock:]


HMTimeEvent : HMEvent
  // class methods
  +[HMTimeEvent isSupportedForHome:]


HMCHIPEcosystemFetchRoomsRequest : HMCHIPEcosystemRequest
 @property  HMMatterHome *home

  // class methods
  +[HMCHIPEcosystemFetchRoomsRequest supportsSecureCoding]

  // instance methods
  -[HMCHIPEcosystemFetchRoomsRequest home]
  -[HMCHIPEcosystemFetchRoomsRequest messageType]
  -[HMCHIPEcosystemFetchRoomsRequest initWithCoder:]
  -[HMCHIPEcosystemFetchRoomsRequest .cxx_destruct]
  -[HMCHIPEcosystemFetchRoomsRequest attributeDescriptions]
  -[HMCHIPEcosystemFetchRoomsRequest isEqual:]
  -[HMCHIPEcosystemFetchRoomsRequest initWithHome:]
  -[HMCHIPEcosystemFetchRoomsRequest encodeWithCoder:]


HMMediaDestinationController : NSObject <HMFLogging, HMObjectMerge, HMFObject>
 @property  <HMMediaDestinationControllerDataSource> *dataSource
 @property  _HMContext *context
 @property  NSUUID *destinationIdentifier
 @property  NSArray *availableDestinationIdentifiers
 @property  <HMMediaDestinationControllerDelegate> *delegate
 @property  NSUUID *identifier
 @property  NSArray *availableDestinations
 @property  <HMMediaDestination> *destination
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMMediaDestinationController logCategory]
  +[HMMediaDestinationController shortDescription]

  // instance methods
  -[HMMediaDestinationController privateDescription]
  -[HMMediaDestinationController uniqueIdentifier]
  -[HMMediaDestinationController setDataSource:]
  -[HMMediaDestinationController .cxx_destruct]
  -[HMMediaDestinationController destination]
  -[HMMediaDestinationController setDelegate:]
  -[HMMediaDestinationController attributeDescriptions]
  -[HMMediaDestinationController dataSource]
  -[HMMediaDestinationController isEqual:]
  -[HMMediaDestinationController identifier]
  -[HMMediaDestinationController destinationIdentifier]
  -[HMMediaDestinationController delegate]
  -[HMMediaDestinationController shortDescription]
  -[HMMediaDestinationController setContext:]
  -[HMMediaDestinationController logIdentifier]
  -[HMMediaDestinationController updateDestination:options:completionHandler:]
  -[HMMediaDestinationController context]
  -[HMMediaDestinationController _mergeWithNewObject:]
  -[HMMediaDestinationController availableDestinationIdentifiers]
  -[HMMediaDestinationController initWithIdentifier:destinationIdentifier:availableDestinationIdentifiers:]
  -[HMMediaDestinationController callCompletionHandler:error:]
  -[HMMediaDestinationController callCompletionHandler:]
  -[HMMediaDestinationController availableDestinationIdentifiersIsEqualToIdentifiers:]
  -[HMMediaDestinationController notifyDidUpdateDestination]
  -[HMMediaDestinationController notifyDidUpdateAvailableDestinations]
  -[HMMediaDestinationController initWithControllerData:]
  -[HMMediaDestinationController updateDestination:completionHandler:]
  -[HMMediaDestinationController configureWithContext:dataSource:]
  -[HMMediaDestinationController unconfigure]
  -[HMMediaDestinationController setAvailableDestinationIdentifiers:]
  -[HMMediaDestinationController setDestinationIdentifier:]
  -[HMMediaDestinationController availableDestinations]


HMPBNaturalLightingAction : PBCodable <NSCopying>
 @property  BOOL hasUuid
 @property  NSData *uuid
 @property  BOOL hasNaturalLightingEnabled
 @property  BOOL naturalLightingEnabled
 @property  BOOL hasLightProfileUUID
 @property  NSData *lightProfileUUID

  // instance methods
  -[HMPBNaturalLightingAction hasUuid]
  -[HMPBNaturalLightingAction mergeFrom:]
  -[HMPBNaturalLightingAction .cxx_destruct]
  -[HMPBNaturalLightingAction dictionaryRepresentation]
  -[HMPBNaturalLightingAction writeTo:]
  -[HMPBNaturalLightingAction isEqual:]
  -[HMPBNaturalLightingAction copyTo:]
  -[HMPBNaturalLightingAction readFrom:]
  -[HMPBNaturalLightingAction uuid]
  -[HMPBNaturalLightingAction copyWithZone:]
  -[HMPBNaturalLightingAction setUuid:]
  -[HMPBNaturalLightingAction naturalLightingEnabled]
  -[HMPBNaturalLightingAction setLightProfileUUID:]
  -[HMPBNaturalLightingAction setNaturalLightingEnabled:]
  -[HMPBNaturalLightingAction setHasNaturalLightingEnabled:]
  -[HMPBNaturalLightingAction hasNaturalLightingEnabled]
  -[HMPBNaturalLightingAction hasLightProfileUUID]
  -[HMPBNaturalLightingAction lightProfileUUID]


HMPBAccessoryReference : PBCodable <NSCopying>
 @property  BOOL hasHomeReference
 @property  HMPBHomeReference *homeReference
 @property  BOOL hasUniqueIdentifier
 @property  NSData *uniqueIdentifier

  // class methods
  +[HMPBAccessoryReference accessoryReferenceWithAccessory:]
  +[HMPBAccessoryReference accessoryReferenceWithData:]

  // instance methods
  -[HMPBAccessoryReference hasUniqueIdentifier]
  -[HMPBAccessoryReference setUniqueIdentifier:]
  -[HMPBAccessoryReference mergeFrom:]
  -[HMPBAccessoryReference uniqueIdentifier]
  -[HMPBAccessoryReference .cxx_destruct]
  -[HMPBAccessoryReference dictionaryRepresentation]
  -[HMPBAccessoryReference writeTo:]
  -[HMPBAccessoryReference isEqual:]
  -[HMPBAccessoryReference copyTo:]
  -[HMPBAccessoryReference readFrom:]
  -[HMPBAccessoryReference copyWithZone:]
  -[HMPBAccessoryReference setHomeReference:]
  -[HMPBAccessoryReference hasHomeReference]
  -[HMPBAccessoryReference homeReference]


HMImmutableSettingChangeEvent : HMEEvent
 @property  HMImmutableSetting *setting

  // class methods
  +[HMImmutableSettingChangeEvent decodeSettingFromEvent:error:]

  // instance methods
  -[HMImmutableSettingChangeEvent encodedData]
  -[HMImmutableSettingChangeEvent .cxx_destruct]
  -[HMImmutableSettingChangeEvent setting]
  -[HMImmutableSettingChangeEvent initWithSetting:eventSource:eventTimestamp:]


HMHomeAccessCode : NSObject <HMFObject>
 @property  HMAccessCodeValue *accessCodeValue
 @property  HMAccessCodeUserInformation *userInformation
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMHomeAccessCode shortDescription]
  +[HMHomeAccessCode homeAccessCodeWithValue:home:]

  // instance methods
  -[HMHomeAccessCode privateDescription]
  -[HMHomeAccessCode .cxx_destruct]
  -[HMHomeAccessCode attributeDescriptions]
  -[HMHomeAccessCode shortDescription]
  -[HMHomeAccessCode userInformation]
  -[HMHomeAccessCode accessCodeValue]
  -[HMHomeAccessCode initWithAccessCodeValue:userInformation:]
  -[HMHomeAccessCode createHomeAccessCodeValue]


HMCameraClipVideoInitSegment : HMCameraClipVideoSegment

HMDeviceSetupOperationHandler : NSObject <HMDeviceSetupSessionDelegate, HMFLogging, TROperationHandler>
 @property  HMDeviceSetupSession *setupSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDeviceSetupOperationHandler logCategory]

  // instance methods
  -[HMDeviceSetupOperationHandler .cxx_destruct]
  -[HMDeviceSetupOperationHandler init]
  -[HMDeviceSetupOperationHandler dealloc]
  -[HMDeviceSetupOperationHandler registerMessageHandlersForSession:]
  -[HMDeviceSetupOperationHandler logIdentifier]
  -[HMDeviceSetupOperationHandler setupSession]
  -[HMDeviceSetupOperationHandler _handleReceivedRequest:responseHandler:]
  -[HMDeviceSetupOperationHandler setupSession:didCloseWithError:]
  -[HMDeviceSetupOperationHandler setupSession:didReceiveExchangeData:completionHandler:]


_HMMediaProfile : _HMAccessoryProfile
 @property  <_HMMediaProfileDelegate> *delegate
 @property  HMMediaSession *mediaSession
 @property  NSString *routeUID
 @property  unsigned long capability

  // class methods
  +[_HMMediaProfile supportsSecureCoding]

  // instance methods
  -[_HMMediaProfile routeUID]
  -[_HMMediaProfile capability]
  -[_HMMediaProfile initWithCoder:]
  -[_HMMediaProfile .cxx_destruct]
  -[_HMMediaProfile setRouteUID:]
  -[_HMMediaProfile setDelegate:]
  -[_HMMediaProfile delegate]
  -[_HMMediaProfile encodeWithCoder:]
  -[_HMMediaProfile setCapability:]
  -[_HMMediaProfile handleRuntimeStateUpdate:]
  -[_HMMediaProfile __configureWithContext:accessory:]
  -[_HMMediaProfile mediaSession]
  -[_HMMediaProfile _notifyDelegateOfUpdatedMediaSession:]
  -[_HMMediaProfile setMediaSession:]


HMCHIPEcosystemResponse : HMCHIPEcosystemMessage <NSSecureCoding>
  // class methods
  +[HMCHIPEcosystemResponse supportsSecureCoding]
  +[HMCHIPEcosystemResponse responseFromExtensionItem:error:]

  // instance methods
  -[HMCHIPEcosystemResponse initWithCoder:]
  -[HMCHIPEcosystemResponse init]
  -[HMCHIPEcosystemResponse extensionItemRepresentation]


HMAccessCodeModificationResponseValue : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *accessoryUUID
 @property  HMAccessoryAccessCodeValue *accessoryAccessCodeValue
 @property  HMAccessCodeValue *accessCodeValue
 @property  long long operationType
 @property  NSError *error
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessCodeModificationResponseValue supportsSecureCoding]
  +[HMAccessCodeModificationResponseValue shortDescription]

  // instance methods
  -[HMAccessCodeModificationResponseValue operationType]
  -[HMAccessCodeModificationResponseValue accessoryUUID]
  -[HMAccessCodeModificationResponseValue privateDescription]
  -[HMAccessCodeModificationResponseValue initWithCoder:]
  -[HMAccessCodeModificationResponseValue .cxx_destruct]
  -[HMAccessCodeModificationResponseValue attributeDescriptions]
  -[HMAccessCodeModificationResponseValue isEqual:]
  -[HMAccessCodeModificationResponseValue shortDescription]
  -[HMAccessCodeModificationResponseValue copyWithZone:]
  -[HMAccessCodeModificationResponseValue setError:]
  -[HMAccessCodeModificationResponseValue encodeWithCoder:]
  -[HMAccessCodeModificationResponseValue error]
  -[HMAccessCodeModificationResponseValue accessoryAccessCodeValue]
  -[HMAccessCodeModificationResponseValue accessCodeValue]
  -[HMAccessCodeModificationResponseValue initWithAccessoryUUID:accessoryAccessCodeValue:accessCodeValue:operationType:error:]
  -[HMAccessCodeModificationResponseValue setAccessoryAccessCodeValue:]
  -[HMAccessCodeModificationResponseValue setAccessCodeValue:]


HMCameraClip : NSObject <HMFObject, NSCopying, NSSecureCoding, HMCameraRecordingEvent>
 @property  NSString *streamingAssetVersion
 @property  HMCameraClipEncryptionContext *encryptionContext
 @property  NSArray *videoSegments
 @property  NSUUID *uniqueIdentifier
 @property  NSDate *startDate
 @property  double duration
 @property  BOOL complete
 @property  BOOL donated
 @property  long long quality
 @property  double targetFragmentDuration
 @property  NSData *encryptionKey
 @property  NSArray *videoDataSegments
 @property  NSSet *significantEvents
 @property  NSDictionary *videoAssetRequiredHTTPHeaders
 @property  BOOL canAskForUserFeedback
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *dateOfOccurrence

  // class methods
  +[HMCameraClip supportsSecureCoding]
  +[HMCameraClip shortDescription]
  +[HMCameraClip requiredHTTPHeadersForStreamingAssetVersion:]

  // instance methods
  -[HMCameraClip privateDescription]
  -[HMCameraClip uniqueIdentifier]
  -[HMCameraClip initWithCoder:]
  -[HMCameraClip .cxx_destruct]
  -[HMCameraClip encryptionKey]
  -[HMCameraClip attributeDescriptions]
  -[HMCameraClip quality]
  -[HMCameraClip isEqual:]
  -[HMCameraClip startDate]
  -[HMCameraClip isComplete]
  -[HMCameraClip shortDescription]
  -[HMCameraClip copyWithZone:]
  -[HMCameraClip duration]
  -[HMCameraClip encodeWithCoder:]
  -[HMCameraClip isDonated]
  -[HMCameraClip streamingAssetVersion]
  -[HMCameraClip encryptionContext]
  -[HMCameraClip significantEvents]
  -[HMCameraClip canAskForUserFeedback]
  -[HMCameraClip videoSegments]
  -[HMCameraClip targetFragmentDuration]
  -[HMCameraClip initWithUniqueIdentifier:startDate:duration:targetFragmentDuration:isComplete:isDonated:quality:streamingAssetVersion:encryptionContext:videoSegments:significantEvents:]
  -[HMCameraClip dateOfOccurrence]
  -[HMCameraClip videoAssetRequiredHTTPHeaders]
  -[HMCameraClip videoDataSegments]


HMProvisionAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMProvisionAnisetteDataRequest supportsSecureCoding]
  +[HMProvisionAnisetteDataRequest messageName]
  +[HMProvisionAnisetteDataRequest objWithDict:]
  +[HMProvisionAnisetteDataRequest objWithMessage:]
  +[HMProvisionAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMProvisionAnisetteDataRequest messagePayload]
  -[HMProvisionAnisetteDataRequest messageName]
  -[HMProvisionAnisetteDataRequest xpcMessageName]


HMProvisionAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  BOOL didSucceed
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMProvisionAnisetteDataResponse supportsSecureCoding]
  +[HMProvisionAnisetteDataResponse messageName]
  +[HMProvisionAnisetteDataResponse objWithDict:]
  +[HMProvisionAnisetteDataResponse objWithMessage:]
  +[HMProvisionAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMProvisionAnisetteDataResponse messagePayload]
  -[HMProvisionAnisetteDataResponse initWithCoder:]
  -[HMProvisionAnisetteDataResponse messageName]
  -[HMProvisionAnisetteDataResponse setDidSucceed:]
  -[HMProvisionAnisetteDataResponse encodeWithCoder:]
  -[HMProvisionAnisetteDataResponse didSucceed]
  -[HMProvisionAnisetteDataResponse xpcMessageName]


HMSyncAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  NSData *simData
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSyncAnisetteDataRequest supportsSecureCoding]
  +[HMSyncAnisetteDataRequest messageName]
  +[HMSyncAnisetteDataRequest objWithDict:]
  +[HMSyncAnisetteDataRequest objWithMessage:]
  +[HMSyncAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMSyncAnisetteDataRequest messagePayload]
  -[HMSyncAnisetteDataRequest initWithCoder:]
  -[HMSyncAnisetteDataRequest .cxx_destruct]
  -[HMSyncAnisetteDataRequest simData]
  -[HMSyncAnisetteDataRequest messageName]
  -[HMSyncAnisetteDataRequest encodeWithCoder:]
  -[HMSyncAnisetteDataRequest xpcMessageName]
  -[HMSyncAnisetteDataRequest setSimData:]


HMSyncAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  BOOL didSucceed
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSyncAnisetteDataResponse supportsSecureCoding]
  +[HMSyncAnisetteDataResponse messageName]
  +[HMSyncAnisetteDataResponse objWithDict:]
  +[HMSyncAnisetteDataResponse objWithMessage:]
  +[HMSyncAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMSyncAnisetteDataResponse messagePayload]
  -[HMSyncAnisetteDataResponse initWithCoder:]
  -[HMSyncAnisetteDataResponse messageName]
  -[HMSyncAnisetteDataResponse setDidSucceed:]
  -[HMSyncAnisetteDataResponse encodeWithCoder:]
  -[HMSyncAnisetteDataResponse didSucceed]
  -[HMSyncAnisetteDataResponse xpcMessageName]


HMEraseAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMEraseAnisetteDataRequest supportsSecureCoding]
  +[HMEraseAnisetteDataRequest messageName]
  +[HMEraseAnisetteDataRequest objWithDict:]
  +[HMEraseAnisetteDataRequest objWithMessage:]
  +[HMEraseAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMEraseAnisetteDataRequest messagePayload]
  -[HMEraseAnisetteDataRequest messageName]
  -[HMEraseAnisetteDataRequest xpcMessageName]


HMEraseAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  BOOL didSucceed
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMEraseAnisetteDataResponse supportsSecureCoding]
  +[HMEraseAnisetteDataResponse messageName]
  +[HMEraseAnisetteDataResponse objWithDict:]
  +[HMEraseAnisetteDataResponse objWithMessage:]
  +[HMEraseAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMEraseAnisetteDataResponse messagePayload]
  -[HMEraseAnisetteDataResponse initWithCoder:]
  -[HMEraseAnisetteDataResponse messageName]
  -[HMEraseAnisetteDataResponse setDidSucceed:]
  -[HMEraseAnisetteDataResponse encodeWithCoder:]
  -[HMEraseAnisetteDataResponse didSucceed]
  -[HMEraseAnisetteDataResponse xpcMessageName]


HMFetchAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  BOOL shouldProvision
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFetchAnisetteDataRequest supportsSecureCoding]
  +[HMFetchAnisetteDataRequest messageName]
  +[HMFetchAnisetteDataRequest objWithDict:]
  +[HMFetchAnisetteDataRequest objWithMessage:]
  +[HMFetchAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMFetchAnisetteDataRequest messagePayload]
  -[HMFetchAnisetteDataRequest initWithCoder:]
  -[HMFetchAnisetteDataRequest messageName]
  -[HMFetchAnisetteDataRequest encodeWithCoder:]
  -[HMFetchAnisetteDataRequest xpcMessageName]
  -[HMFetchAnisetteDataRequest shouldProvision]
  -[HMFetchAnisetteDataRequest setShouldProvision:]


HMFetchAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  AKAnisetteData *anisetteData
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFetchAnisetteDataResponse supportsSecureCoding]
  +[HMFetchAnisetteDataResponse messageName]
  +[HMFetchAnisetteDataResponse objWithDict:]
  +[HMFetchAnisetteDataResponse objWithMessage:]
  +[HMFetchAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMFetchAnisetteDataResponse messagePayload]
  -[HMFetchAnisetteDataResponse initWithCoder:]
  -[HMFetchAnisetteDataResponse .cxx_destruct]
  -[HMFetchAnisetteDataResponse messageName]
  -[HMFetchAnisetteDataResponse encodeWithCoder:]
  -[HMFetchAnisetteDataResponse xpcMessageName]
  -[HMFetchAnisetteDataResponse anisetteData]
  -[HMFetchAnisetteDataResponse setAnisetteData:]


HMLegacyAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  NSString *dsid
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMLegacyAnisetteDataRequest supportsSecureCoding]
  +[HMLegacyAnisetteDataRequest messageName]
  +[HMLegacyAnisetteDataRequest objWithDict:]
  +[HMLegacyAnisetteDataRequest objWithMessage:]
  +[HMLegacyAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMLegacyAnisetteDataRequest setDsid:]
  -[HMLegacyAnisetteDataRequest messagePayload]
  -[HMLegacyAnisetteDataRequest dsid]
  -[HMLegacyAnisetteDataRequest initWithCoder:]
  -[HMLegacyAnisetteDataRequest .cxx_destruct]
  -[HMLegacyAnisetteDataRequest messageName]
  -[HMLegacyAnisetteDataRequest encodeWithCoder:]
  -[HMLegacyAnisetteDataRequest xpcMessageName]


HMLegacyAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  AKAnisetteData *anisetteData
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMLegacyAnisetteDataResponse supportsSecureCoding]
  +[HMLegacyAnisetteDataResponse messageName]
  +[HMLegacyAnisetteDataResponse objWithDict:]
  +[HMLegacyAnisetteDataResponse objWithMessage:]
  +[HMLegacyAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMLegacyAnisetteDataResponse messagePayload]
  -[HMLegacyAnisetteDataResponse initWithCoder:]
  -[HMLegacyAnisetteDataResponse .cxx_destruct]
  -[HMLegacyAnisetteDataResponse messageName]
  -[HMLegacyAnisetteDataResponse encodeWithCoder:]
  -[HMLegacyAnisetteDataResponse xpcMessageName]
  -[HMLegacyAnisetteDataResponse anisetteData]
  -[HMLegacyAnisetteDataResponse setAnisetteData:]


HMLanguageValueListSetting : HMImmutableSetting
 @property  NSArray *languageValues

  // instance methods
  -[HMLanguageValueListSetting .cxx_destruct]
  -[HMLanguageValueListSetting attributeDescriptions]
  -[HMLanguageValueListSetting isEqual:]
  -[HMLanguageValueListSetting payloadCopy]
  -[HMLanguageValueListSetting protoPayload]
  -[HMLanguageValueListSetting initWithProtoPayload:]
  -[HMLanguageValueListSetting initWithKeyPath:readOnly:payload:]
  -[HMLanguageValueListSetting initWithKeyPath:readOnly:languageValues:]
  -[HMLanguageValueListSetting languageValues]


HMTrigger : NSObject <HMFLogging, HMFMessageReceiver, NSSecureCoding, HMObjectMerge>
 @property  BOOL enabled
 @property  NSString *name
 @property  NSString *assistantIdentifier
 @property  _HMContext *context
 @property  NSUUID *uuid
 @property  HMMutableArray *currentActionSets
 @property  HMHome *home
 @property  NSDate *lastFireDate
 @property  HMDevice *ownerDevice
 @property  HMUser *owner
 @property  NSString *configuredName
 @property  HMDevice *creatorDevice
 @property  HMUser *creator
 @property  HMTriggerPolicy *policy
 @property  NSArray *actionSets
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMTrigger supportsSecureCoding]
  +[HMTrigger logCategory]
  +[HMTrigger isValidPolicy:]

  // instance methods
  -[HMTrigger home]
  -[HMTrigger name]
  -[HMTrigger uniqueIdentifier]
  -[HMTrigger initWithCoder:]
  -[HMTrigger .cxx_destruct]
  -[HMTrigger ownerDevice]
  -[HMTrigger setOwnerDevice:]
  -[HMTrigger setPolicy:]
  -[HMTrigger creator]
  -[HMTrigger _unconfigure]
  -[HMTrigger setName:]
  -[HMTrigger policy]
  -[HMTrigger setOwner:]
  -[HMTrigger setHome:]
  -[HMTrigger owner]
  -[HMTrigger assistantIdentifier]
  -[HMTrigger messageReceiveQueue]
  -[HMTrigger isEnabled]
  -[HMTrigger uuid]
  -[HMTrigger actionSets]
  -[HMTrigger messageTargetUUID]
  -[HMTrigger logIdentifier]
  -[HMTrigger configuredName]
  -[HMTrigger setAssistantIdentifier:]
  -[HMTrigger setEnabled:]
  -[HMTrigger setUuid:]
  -[HMTrigger encodeWithCoder:]
  -[HMTrigger context]
  -[HMTrigger setLastFireDate:]
  -[HMTrigger _serializeForAdd]
  -[HMTrigger _mergeWithNewObject:]
  -[HMTrigger _unconfigureContext]
  -[HMTrigger __configureWithContext:home:]
  -[HMTrigger _registerNotificationHandlers]
  -[HMTrigger currentActionSets]
  -[HMTrigger _recomputeAssistantIdentifier]
  -[HMTrigger _updateActionSetFromResponse:responsePayload:]
  -[HMTrigger _updateClientWithResults:withError:]
  -[HMTrigger _addActionSet:completionHandler:]
  -[HMTrigger _updateActionSet:add:completionHandler:]
  -[HMTrigger _removeActionSet:completionHandler:]
  -[HMTrigger _updateName:configuredName:completionHandler:]
  -[HMTrigger _updateTriggerNameFromResponse:responsePayload:]
  -[HMTrigger _enable:completionHandler:]
  -[HMTrigger addActionSetOfType:completionHandler:]
  -[HMTrigger _addActionSetOfType:completionHandler:]
  -[HMTrigger setConfiguredName:]
  -[HMTrigger _handleTriggerFired:]
  -[HMTrigger _handleTriggerFiredNotification:]
  -[HMTrigger initWithName:configuredName:]
  -[HMTrigger lastFireDate]
  -[HMTrigger creatorDevice]
  -[HMTrigger recomputeAssistantIdentifier]
  -[HMTrigger addActionSet:completionHandler:]
  -[HMTrigger removeActionSet:completionHandler:]
  -[HMTrigger updateName:completionHandler:]
  -[HMTrigger updateName:configuredName:completionHandler:]
  -[HMTrigger enable:completionHandler:]
  -[HMTrigger addActionSetWithCompletionHandler:]
  -[HMTrigger updatePolicy:completionHandler:]
  -[HMTrigger removePolicy:completionHandler:]
  -[HMTrigger compatibleWithApp]
  -[HMTrigger setCurrentActionSets:]


HMUserActionPredictionController : NSObject <HMUserActionPredictionSubscriber, HMFLogging>
 @property  HMUserActionPredictionProvider *predictionProvider
 @property  NSUUID *homeIdentifier
 @property  _HMContext *context
 @property  <HMUserActionPredictionControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMUserActionPredictionController logCategory]

  // instance methods
  -[HMUserActionPredictionController homeIdentifier]
  -[HMUserActionPredictionController didUpdatePredictions:forHomeWithIdentifier:]
  -[HMUserActionPredictionController .cxx_destruct]
  -[HMUserActionPredictionController predictionProvider]
  -[HMUserActionPredictionController setDelegate:]
  -[HMUserActionPredictionController configureWithContext:]
  -[HMUserActionPredictionController delegate]
  -[HMUserActionPredictionController setContext:]
  -[HMUserActionPredictionController initWithHomeIdentifier:predictionProvider:]
  -[HMUserActionPredictionController predictions]
  -[HMUserActionPredictionController fetchPredictionsWithCompletion:]
  -[HMUserActionPredictionController context]


HMSetupAccessoryDescription : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSString *appIdentifier
 @property  HMSetupAccessoryPayload *setupAccessoryPayload
 @property  BOOL addAndSetupAccessories
 @property  NSString *marketingName
 @property  NSURL *installationGuideURL
 @property  NSString *accessoryName
 @property  NSString *manufacturerName
 @property  HMAccessoryCategory *category
 @property  NSUUID *accessoryUUID
 @property  NSUUID *suggestedRoomUUID
 @property  NSString *suggestedAccessoryName
 @property  NSString *suggestedRoomName
 @property  NSString *storeID
 @property  NSString *bundleID
 @property  NSString *setupID
 @property  NSString *setupCode
 @property  HMAccessoryOwnershipToken *ownershipToken
 @property  NSUUID *addRequestIdentifier
 @property  BOOL supportsIP
 @property  BOOL supportsWAC
 @property  BOOL supportsBTLE
 @property  BOOL paired
 @property  unsigned long certificationStatus
 @property  BOOL userConsentedForReplace
 @property  HMAccessory *accessoryBeingReplaced
 @property  NSString *accessoryServerIdentifier
 @property  HMMatterTopology *topology
 @property  BOOL entitledForHomeKitSPI
 @property  BOOL entitledForThirdPartySetupAccessoryPayload
 @property  BOOL hasAddRequest
 @property  NSUUID *homeUUID
 @property  NSUUID *suggestedRoomUniqueIdentifier
 @property  NSError *cancellationReason
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSetupAccessoryDescription supportsSecureCoding]
  +[HMSetupAccessoryDescription shortDescription]

  // instance methods
  -[HMSetupAccessoryDescription isPaired]
  -[HMSetupAccessoryDescription appIdentifier]
  -[HMSetupAccessoryDescription setStoreID:]
  -[HMSetupAccessoryDescription bundleID]
  -[HMSetupAccessoryDescription accessoryUUID]
  -[HMSetupAccessoryDescription setManufacturerName:]
  -[HMSetupAccessoryDescription privateDescription]
  -[HMSetupAccessoryDescription initWithCoder:]
  -[HMSetupAccessoryDescription storeID]
  -[HMSetupAccessoryDescription setAppIdentifier:]
  -[HMSetupAccessoryDescription setAccessoryUUID:]
  -[HMSetupAccessoryDescription setOwnershipToken:]
  -[HMSetupAccessoryDescription .cxx_destruct]
  -[HMSetupAccessoryDescription marketingName]
  -[HMSetupAccessoryDescription attributeDescriptions]
  -[HMSetupAccessoryDescription manufacturerName]
  -[HMSetupAccessoryDescription isEqual:]
  -[HMSetupAccessoryDescription setupID]
  -[HMSetupAccessoryDescription accessoryName]
  -[HMSetupAccessoryDescription homeUUID]
  -[HMSetupAccessoryDescription setBundleID:]
  -[HMSetupAccessoryDescription topology]
  -[HMSetupAccessoryDescription ownershipToken]
  -[HMSetupAccessoryDescription shortDescription]
  -[HMSetupAccessoryDescription category]
  -[HMSetupAccessoryDescription copyWithZone:]
  -[HMSetupAccessoryDescription setCategory:]
  -[HMSetupAccessoryDescription encodeWithCoder:]
  -[HMSetupAccessoryDescription cancellationReason]
  -[HMSetupAccessoryDescription setupCode]
  -[HMSetupAccessoryDescription initWithAccessoryUUID:accessoryName:appID:homeUUID:]
  -[HMSetupAccessoryDescription initWithSetupAccessoryPayload:appID:homeUUID:ownershipToken:]
  -[HMSetupAccessoryDescription setSetupAccessoryPayload:]
  -[HMSetupAccessoryDescription setAccessoryName:]
  -[HMSetupAccessoryDescription setupAccessoryPayload]
  -[HMSetupAccessoryDescription supportsIP]
  -[HMSetupAccessoryDescription supportsWAC]
  -[HMSetupAccessoryDescription supportsBTLE]
  -[HMSetupAccessoryDescription addRequestIdentifier]
  -[HMSetupAccessoryDescription suggestedRoomUUID]
  -[HMSetupAccessoryDescription addAndSetupAccessories]
  -[HMSetupAccessoryDescription certificationStatus]
  -[HMSetupAccessoryDescription suggestedRoomName]
  -[HMSetupAccessoryDescription suggestedAccessoryName]
  -[HMSetupAccessoryDescription installationGuideURL]
  -[HMSetupAccessoryDescription isEntitledForHomeKitSPI]
  -[HMSetupAccessoryDescription isEntitledForThirdPartySetupAccessoryPayload]
  -[HMSetupAccessoryDescription accessoryServerIdentifier]
  -[HMSetupAccessoryDescription initWithAppIdentifier:homeUUID:]
  -[HMSetupAccessoryDescription setAddAndSetupAccessories:]
  -[HMSetupAccessoryDescription setCertificationStatus:]
  -[HMSetupAccessoryDescription setSuggestedRoomUUID:]
  -[HMSetupAccessoryDescription setSuggestedRoomName:]
  -[HMSetupAccessoryDescription setSuggestedAccessoryName:]
  -[HMSetupAccessoryDescription userConsentedForReplace]
  -[HMSetupAccessoryDescription setUserConsentedForReplace:]
  -[HMSetupAccessoryDescription setCancellationReason:]
  -[HMSetupAccessoryDescription setEntitledForHomeKitSPI:]
  -[HMSetupAccessoryDescription setEntitledForThirdPartySetupAccessoryPayload:]
  -[HMSetupAccessoryDescription setAccessoryServerIdentifier:]
  -[HMSetupAccessoryDescription setTopology:]
  -[HMSetupAccessoryDescription accessoryBeingReplaced]
  -[HMSetupAccessoryDescription initWithAccessoryUUID:accessoryName:appID:homeName:homeUUID:trustedOrigin:]
  -[HMSetupAccessoryDescription initToSetupAccessoriesWithSetupAccessoryPayload:appID:homeName:homeUUID:trustedOrigin:ownershipToken:]
  -[HMSetupAccessoryDescription initWithAddRequest:setupAccessoryPayload:appID:ownershipToken:]
  -[HMSetupAccessoryDescription initWithStagedCHIPAccessoryPairingIdentifier:]
  -[HMSetupAccessoryDescription updateWithSetupAccessoryPayload:]
  -[HMSetupAccessoryDescription updateWithAccessory:]
  -[HMSetupAccessoryDescription updateOwnershipToken:]
  -[HMSetupAccessoryDescription updateAppIdentifier:]
  -[HMSetupAccessoryDescription updateAccessoryCategory:]
  -[HMSetupAccessoryDescription setSetupCode:]
  -[HMSetupAccessoryDescription hasAddRequest]
  -[HMSetupAccessoryDescription suggestedRoomUniqueIdentifier]
  -[HMSetupAccessoryDescription setMarketingName:]
  -[HMSetupAccessoryDescription setInstallationGuideURL:]
  -[HMSetupAccessoryDescription setAccessoryBeingReplaced:]
  -[HMSetupAccessoryDescription setAddRequestIdentifier:]


HMCameraClipDecryptionManager : NSObject
 @property  NSData *key

  // instance methods
  -[HMCameraClipDecryptionManager .cxx_destruct]
  -[HMCameraClipDecryptionManager initWithKey:]
  -[HMCameraClipDecryptionManager key]
  -[HMCameraClipDecryptionManager dataFromEncryptedDataContext:]


HMObjectMergeCollection : NSObject
 @property  NSMutableArray *currentExistingObjects
 @property  NSMutableArray *currentAddedObjects
 @property  NSMutableArray *currentRemovedObjects
 @property  NSMutableArray *currentModifiedObjects
 @property  NSMapTable *commonObjectsMaps
 @property  NSArray *addedObjects
 @property  NSArray *removedObjects
 @property  NSArray *modifiedObjects
 @property  NSArray *existingObjects
 @property  BOOL modified
 @property  unsigned long modifiedCount

  // instance methods
  -[HMObjectMergeCollection initWithExistingObjects:newObjects:]
  -[HMObjectMergeCollection existingObjects]
  -[HMObjectMergeCollection _replaceAddedObjectsWithObjectsFromArray:]
  -[HMObjectMergeCollection commonObjectsMaps]
  -[HMObjectMergeCollection currentExistingObjects]
  -[HMObjectMergeCollection modifiedCount]
  -[HMObjectMergeCollection addedObjects]
  -[HMObjectMergeCollection .cxx_destruct]
  -[HMObjectMergeCollection removedObjects]
  -[HMObjectMergeCollection init]
  -[HMObjectMergeCollection mergeCommonObjectsNoMergeCount]
  -[HMObjectMergeCollection setCommonObjectsMaps:]
  -[HMObjectMergeCollection _enumerateObjectAdditionWithBlock:]
  -[HMObjectMergeCollection currentRemovedObjects]
  -[HMObjectMergeCollection _mergeCommonObjects]
  -[HMObjectMergeCollection finalMergeCollection]
  -[HMObjectMergeCollection _enumerateObjectRemoveWithBlock:]
  -[HMObjectMergeCollection currentAddedObjects]
  -[HMObjectMergeCollection setCurrentRemovedObjects:]
  -[HMObjectMergeCollection isModified]
  -[HMObjectMergeCollection setCurrentAddedObjects:]
  -[HMObjectMergeCollection currentModifiedObjects]
  -[HMObjectMergeCollection modifiedObjects]
  -[HMObjectMergeCollection setCurrentModifiedObjects:]
  -[HMObjectMergeCollection setCurrentExistingObjects:]


HMCameraAudioCodec : NSObject <NSSecureCoding>
 @property  unsigned long audioCodec

  // class methods
  +[HMCameraAudioCodec supportsSecureCoding]
  +[HMCameraAudioCodec isValid:]

  // instance methods
  -[HMCameraAudioCodec initWithCoder:]
  -[HMCameraAudioCodec isEqual:]
  -[HMCameraAudioCodec encodeWithCoder:]
  -[HMCameraAudioCodec audioCodec]
  -[HMCameraAudioCodec initWithAudioCodecType:]


HMThreadNetworkMetadata : HMFObject <NSSecureCoding>
 @property  NSString *name
 @property  unsigned char channel
 @property  NSData *PANID
 @property  NSData *extendedPANID
 @property  NSData *masterKey
 @property  NSString *passPhrase
 @property  NSData *PSKc

  // class methods
  +[HMThreadNetworkMetadata supportsSecureCoding]

  // instance methods
  -[HMThreadNetworkMetadata masterKey]
  -[HMThreadNetworkMetadata name]
  -[HMThreadNetworkMetadata PSKc]
  -[HMThreadNetworkMetadata initWithCoder:]
  -[HMThreadNetworkMetadata PANID]
  -[HMThreadNetworkMetadata .cxx_destruct]
  -[HMThreadNetworkMetadata channel]
  -[HMThreadNetworkMetadata encodeWithCoder:]
  -[HMThreadNetworkMetadata initWithName:channel:PANID:extendedPANID:masterKey:passPhrase:PSKc:]
  -[HMThreadNetworkMetadata extendedPANID]
  -[HMThreadNetworkMetadata passPhrase]


HMBulletinBoardNotificationServiceGroup : NSObject <HMFLogging, HMFMessageReceiver, NSSecureCoding, HMObjectMerge>
 @property  _HMContext *context
 @property  NSSet *cameraProfileUUIDs
 @property  NSSet *associatedServiceUUIDs
 @property  NSArray *cameraProfiles
 @property  NSArray *associatedServices
 @property  NSUUID *targetUUID
 @property  NSString *logID
 @property  HMBulletinBoardNotification *bulletinBoardNotification
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMBulletinBoardNotificationServiceGroup supportsSecureCoding]
  +[HMBulletinBoardNotificationServiceGroup logCategory]

  // instance methods
  -[HMBulletinBoardNotificationServiceGroup uniqueIdentifier]
  -[HMBulletinBoardNotificationServiceGroup initWithCoder:]
  -[HMBulletinBoardNotificationServiceGroup logID]
  -[HMBulletinBoardNotificationServiceGroup .cxx_destruct]
  -[HMBulletinBoardNotificationServiceGroup _unconfigure]
  -[HMBulletinBoardNotificationServiceGroup init]
  -[HMBulletinBoardNotificationServiceGroup messageReceiveQueue]
  -[HMBulletinBoardNotificationServiceGroup setContext:]
  -[HMBulletinBoardNotificationServiceGroup messageTargetUUID]
  -[HMBulletinBoardNotificationServiceGroup logIdentifier]
  -[HMBulletinBoardNotificationServiceGroup encodeWithCoder:]
  -[HMBulletinBoardNotificationServiceGroup targetUUID]
  -[HMBulletinBoardNotificationServiceGroup context]
  -[HMBulletinBoardNotificationServiceGroup _mergeWithNewObject:]
  -[HMBulletinBoardNotificationServiceGroup _unconfigureContext]
  -[HMBulletinBoardNotificationServiceGroup _registerNotificationHandlers]
  -[HMBulletinBoardNotificationServiceGroup _requestServiceGroup]
  -[HMBulletinBoardNotificationServiceGroup _handleBulletinBoardNotificationServiceGroupUpdateNotification:]
  -[HMBulletinBoardNotificationServiceGroup handleConfigureNotification:]
  -[HMBulletinBoardNotificationServiceGroup setCameraProfileUUIDs:]
  -[HMBulletinBoardNotificationServiceGroup setAssociatedServiceUUIDs:]
  -[HMBulletinBoardNotificationServiceGroup _findObjects]
  -[HMBulletinBoardNotificationServiceGroup bulletinBoardNotification]
  -[HMBulletinBoardNotificationServiceGroup cameraProfiles]
  -[HMBulletinBoardNotificationServiceGroup cameraProfileUUIDs]
  -[HMBulletinBoardNotificationServiceGroup associatedServiceUUIDs]
  -[HMBulletinBoardNotificationServiceGroup setCameraProfiles:]
  -[HMBulletinBoardNotificationServiceGroup associatedServices]
  -[HMBulletinBoardNotificationServiceGroup setAssociatedServices:]
  -[HMBulletinBoardNotificationServiceGroup _callServiceGroupUpdate]
  -[HMBulletinBoardNotificationServiceGroup __configureWithContext:]


HMHomeWalletKey : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *UUID
 @property  NSURL *customURL
 @property  BOOL expressEnabled
 @property  long long color
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMHomeWalletKey supportsSecureCoding]
  +[HMHomeWalletKey shortDescription]

  // instance methods
  -[HMHomeWalletKey UUID]
  -[HMHomeWalletKey privateDescription]
  -[HMHomeWalletKey initWithCoder:]
  -[HMHomeWalletKey color]
  -[HMHomeWalletKey .cxx_destruct]
  -[HMHomeWalletKey attributeDescriptions]
  -[HMHomeWalletKey isEqual:]
  -[HMHomeWalletKey shortDescription]
  -[HMHomeWalletKey copyWithZone:]
  -[HMHomeWalletKey encodeWithCoder:]
  -[HMHomeWalletKey customURL]
  -[HMHomeWalletKey isExpressEnabled]
  -[HMHomeWalletKey initWithUUID:customURL:expressEnabled:color:]


_HMLightProfile : _HMAccessoryProfile
 @property  HMLightProfile *lightProfile
 @property  HMLightProfileSettings *settings

  // class methods
  +[_HMLightProfile supportsSecureCoding]

  // instance methods
  -[_HMLightProfile initWithCoder:]
  -[_HMLightProfile .cxx_destruct]
  -[_HMLightProfile setSettings:]
  -[_HMLightProfile settings]
  -[_HMLightProfile _registerNotificationHandlers]
  -[_HMLightProfile lightProfile]
  -[_HMLightProfile handleSettingsDidUpdate:]
  -[_HMLightProfile initWithUUID:services:settings:]


HMPBActionSet : PBCodable <NSCopying>
 @property  BOOL hasName
 @property  NSString *name
 @property  NSMutableArray *actions
 @property  BOOL hasActionSetType
 @property  NSString *actionSetType
 @property  BOOL hasUuid
 @property  NSData *uuid
 @property  BOOL hasHomeUUID
 @property  NSData *homeUUID

  // class methods
  +[HMPBActionSet actionsType]

  // instance methods
  -[HMPBActionSet hasUuid]
  -[HMPBActionSet setActions:]
  -[HMPBActionSet mergeFrom:]
  -[HMPBActionSet name]
  -[HMPBActionSet addActions:]
  -[HMPBActionSet actionsAtIndex:]
  -[HMPBActionSet .cxx_destruct]
  -[HMPBActionSet hasName]
  -[HMPBActionSet dictionaryRepresentation]
  -[HMPBActionSet actionsCount]
  -[HMPBActionSet actions]
  -[HMPBActionSet writeTo:]
  -[HMPBActionSet setName:]
  -[HMPBActionSet isEqual:]
  -[HMPBActionSet copyTo:]
  -[HMPBActionSet readFrom:]
  -[HMPBActionSet homeUUID]
  -[HMPBActionSet clearActions]
  -[HMPBActionSet uuid]
  -[HMPBActionSet actionSetType]
  -[HMPBActionSet copyWithZone:]
  -[HMPBActionSet hasHomeUUID]
  -[HMPBActionSet setUuid:]
  -[HMPBActionSet setHomeUUID:]
  -[HMPBActionSet setActionSetType:]
  -[HMPBActionSet hasActionSetType]


HMMediaGroupProtoMediaDestinationControllerData : PBCodable <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasParentIdentifier
 @property  NSString *parentIdentifier
 @property  BOOL hasDestinationIdentifier
 @property  NSString *destinationIdentifier
 @property  NSMutableArray *availableDestinations

  // class methods
  +[HMMediaGroupProtoMediaDestinationControllerData availableDestinationsType]

  // instance methods
  -[HMMediaGroupProtoMediaDestinationControllerData mergeFrom:]
  -[HMMediaGroupProtoMediaDestinationControllerData .cxx_destruct]
  -[HMMediaGroupProtoMediaDestinationControllerData dictionaryRepresentation]
  -[HMMediaGroupProtoMediaDestinationControllerData writeTo:]
  -[HMMediaGroupProtoMediaDestinationControllerData hasParentIdentifier]
  -[HMMediaGroupProtoMediaDestinationControllerData isEqual:]
  -[HMMediaGroupProtoMediaDestinationControllerData copyTo:]
  -[HMMediaGroupProtoMediaDestinationControllerData readFrom:]
  -[HMMediaGroupProtoMediaDestinationControllerData identifier]
  -[HMMediaGroupProtoMediaDestinationControllerData destinationIdentifier]
  -[HMMediaGroupProtoMediaDestinationControllerData parentIdentifier]
  -[HMMediaGroupProtoMediaDestinationControllerData setIdentifier:]
  -[HMMediaGroupProtoMediaDestinationControllerData setParentIdentifier:]
  -[HMMediaGroupProtoMediaDestinationControllerData hasIdentifier]
  -[HMMediaGroupProtoMediaDestinationControllerData copyWithZone:]
  -[HMMediaGroupProtoMediaDestinationControllerData setDestinationIdentifier:]
  -[HMMediaGroupProtoMediaDestinationControllerData availableDestinations]
  -[HMMediaGroupProtoMediaDestinationControllerData addAvailableDestinations:]
  -[HMMediaGroupProtoMediaDestinationControllerData availableDestinationsCount]
  -[HMMediaGroupProtoMediaDestinationControllerData clearAvailableDestinations]
  -[HMMediaGroupProtoMediaDestinationControllerData availableDestinationsAtIndex:]
  -[HMMediaGroupProtoMediaDestinationControllerData hasDestinationIdentifier]
  -[HMMediaGroupProtoMediaDestinationControllerData setAvailableDestinations:]


HMMTagHandlersManager : NSObject
  // instance methods
  -[HMMTagHandlersManager .cxx_destruct]
  -[HMMTagHandlersManager init]
  -[HMMTagHandlersManager addHandler:forTagName:]
  -[HMMTagHandlersManager handlersForTagName:]


HMUserActionPrediction : NSObject <HMFLogging, HMFObject, NSSecureCoding>
 @property  NSUUID *targetGroupUUID
 @property  unsigned long targetGroupType
 @property  NSUUID *predictionTargetUUID
 @property  NSUUID *targetServiceUUID
 @property  unsigned long predictionType
 @property  double predictionScore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMUserActionPrediction supportsSecureCoding]
  +[HMUserActionPrediction logCategory]
  +[HMUserActionPrediction shortDescription]

  // instance methods
  -[HMUserActionPrediction privateDescription]
  -[HMUserActionPrediction initWithCoder:]
  -[HMUserActionPrediction .cxx_destruct]
  -[HMUserActionPrediction attributeDescriptions]
  -[HMUserActionPrediction isEqual:]
  -[HMUserActionPrediction isEqualIgnoringScore:]
  -[HMUserActionPrediction shortDescription]
  -[HMUserActionPrediction encodeWithCoder:]
  -[HMUserActionPrediction initWithPredictionTargetUUID:targetServiceUUID:targetGroupUUID:targetGroupType:predictionType:predictionScore:]
  -[HMUserActionPrediction predictionTargetUUID]
  -[HMUserActionPrediction targetServiceUUID]
  -[HMUserActionPrediction predictionType]
  -[HMUserActionPrediction predictionScore]
  -[HMUserActionPrediction initWithPredictionTargetUUID:targetServiceUUID:predictionType:predictionScore:]
  -[HMUserActionPrediction isEqual:ignoreScore:ignoreGroupProperties:]
  -[HMUserActionPrediction targetGroupUUID]
  -[HMUserActionPrediction targetGroupType]
  -[HMUserActionPrediction initWithPredictionTargetUUID:predictionType:predictionScore:]
  -[HMUserActionPrediction initWithPredictionTargetUUID:targetServiceUUID:targetServiceGroupUUID:predictionType:predictionScore:]
  -[HMUserActionPrediction copyRemovingGroup]
  -[HMUserActionPrediction isEqualIgnoringScoreAndGroupProperties:]


HMAccessCodeUserInformationValue : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSString *simpleLabel
 @property  NSUUID *userUUID
 @property  HMRemovedUserInfo *removedUserInfo
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessCodeUserInformationValue supportsSecureCoding]
  +[HMAccessCodeUserInformationValue shortDescription]

  // instance methods
  -[HMAccessCodeUserInformationValue privateDescription]
  -[HMAccessCodeUserInformationValue initWithCoder:]
  -[HMAccessCodeUserInformationValue userUUID]
  -[HMAccessCodeUserInformationValue .cxx_destruct]
  -[HMAccessCodeUserInformationValue attributeDescriptions]
  -[HMAccessCodeUserInformationValue isEqual:]
  -[HMAccessCodeUserInformationValue shortDescription]
  -[HMAccessCodeUserInformationValue copyWithZone:]
  -[HMAccessCodeUserInformationValue encodeWithCoder:]
  -[HMAccessCodeUserInformationValue simpleLabel]
  -[HMAccessCodeUserInformationValue removedUserInfo]
  -[HMAccessCodeUserInformationValue initWithSimpleLabel:userUUID:removedUserInfo:]


HMCHIPAccessorySetupPayload : NSObject <HMFObject, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *setupPayloadString
 @property  NSNumber *vendorID
 @property  NSNumber *productID
 @property  NSString *serialNumber
 @property  BOOL requiresCustomFlow
 @property  NSNumber *setupCode
 @property  NSNumber *discriminator
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCHIPAccessorySetupPayload supportsSecureCoding]
  +[HMCHIPAccessorySetupPayload shortDescription]

  // instance methods
  -[HMCHIPAccessorySetupPayload serialNumber]
  -[HMCHIPAccessorySetupPayload setSerialNumber:]
  -[HMCHIPAccessorySetupPayload privateDescription]
  -[HMCHIPAccessorySetupPayload initWithCoder:]
  -[HMCHIPAccessorySetupPayload setVendorID:]
  -[HMCHIPAccessorySetupPayload setProductID:]
  -[HMCHIPAccessorySetupPayload .cxx_destruct]
  -[HMCHIPAccessorySetupPayload productID]
  -[HMCHIPAccessorySetupPayload vendorID]
  -[HMCHIPAccessorySetupPayload attributeDescriptions]
  -[HMCHIPAccessorySetupPayload isEqual:]
  -[HMCHIPAccessorySetupPayload mutableCopyWithZone:]
  -[HMCHIPAccessorySetupPayload shortDescription]
  -[HMCHIPAccessorySetupPayload copyWithZone:]
  -[HMCHIPAccessorySetupPayload encodeWithCoder:]
  -[HMCHIPAccessorySetupPayload setupCode]
  -[HMCHIPAccessorySetupPayload discriminator]
  -[HMCHIPAccessorySetupPayload setupPayloadString]
  -[HMCHIPAccessorySetupPayload requiresCustomFlow]
  -[HMCHIPAccessorySetupPayload initWithSetupCode:discriminator:]
  -[HMCHIPAccessorySetupPayload setSetupPayloadString:]
  -[HMCHIPAccessorySetupPayload setRequiresCustomFlow:]


HMMutableCHIPAccessorySetupPayload : HMCHIPAccessorySetupPayload
 @property  NSString *setupPayloadString
 @property  NSNumber *vendorID
 @property  NSNumber *productID
 @property  NSString *serialNumber
 @property  BOOL requiresCustomFlow

  // instance methods
  -[HMMutableCHIPAccessorySetupPayload copyWithZone:]


HMUserCloudShareRepairInfo : NSObject <NSSecureCoding>
 @property  NSUUID *identifier
 @property  long long version

  // class methods
  +[HMUserCloudShareRepairInfo supportsSecureCoding]

  // instance methods
  -[HMUserCloudShareRepairInfo initWithCoder:]
  -[HMUserCloudShareRepairInfo .cxx_destruct]
  -[HMUserCloudShareRepairInfo init]
  -[HMUserCloudShareRepairInfo identifier]
  -[HMUserCloudShareRepairInfo version]
  -[HMUserCloudShareRepairInfo encodeWithCoder:]
  -[HMUserCloudShareRepairInfo initWithIdentifier:version:]


_HMAudioControl : NSObject <HMFMessageReceiver, HMObjectMerge>
 @property  HMMediaSession *mediaSession
 @property  NSUUID *uniqueIdentifier
 @property  <_HMAudioControlDelegate> *delegate
 @property  float volume
 @property  BOOL muted
 @property  _HMContext *context
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HMAudioControl setMuted:]
  -[_HMAudioControl isMuted]
  -[_HMAudioControl volume]
  -[_HMAudioControl uniqueIdentifier]
  -[_HMAudioControl setVolume:]
  -[_HMAudioControl .cxx_destruct]
  -[_HMAudioControl _unconfigure]
  -[_HMAudioControl setDelegate:]
  -[_HMAudioControl messageReceiveQueue]
  -[_HMAudioControl delegate]
  -[_HMAudioControl setContext:]
  -[_HMAudioControl messageTargetUUID]
  -[_HMAudioControl messageDestination]
  -[_HMAudioControl context]
  -[_HMAudioControl _mergeWithNewObject:]
  -[_HMAudioControl _unconfigureContext]
  -[_HMAudioControl _registerNotificationHandlers]
  -[_HMAudioControl mediaSession]
  -[_HMAudioControl __configureWithContext:]
  -[_HMAudioControl _handleAudioControlUpdated:]
  -[_HMAudioControl initWithMediaSession:]
  -[_HMAudioControl updateVolume:completionHandler:]
  -[_HMAudioControl updateMuted:completionHandler:]


HMAudioControl : NSObject <_HMAudioControlDelegate, HMObjectMerge>
 @property  _HMAudioControl *audioControl
 @property  float volume
 @property  BOOL muted
 @property  <HMAudioControlDelegate> *delegate
 @property  HMMediaSession *mediaSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier

  // instance methods
  -[HMAudioControl setMuted:]
  -[HMAudioControl isMuted]
  -[HMAudioControl volume]
  -[HMAudioControl uniqueIdentifier]
  -[HMAudioControl setVolume:]
  -[HMAudioControl .cxx_destruct]
  -[HMAudioControl _unconfigure]
  -[HMAudioControl setDelegate:]
  -[HMAudioControl delegate]
  -[HMAudioControl _mergeWithNewObject:]
  -[HMAudioControl mediaSession]
  -[HMAudioControl setMediaSession:]
  -[HMAudioControl __configureWithContext:]
  -[HMAudioControl audioControl:didUpdateVolume:]
  -[HMAudioControl audioControl:didUpdateMuted:]
  -[HMAudioControl initWithMediaSession:]
  -[HMAudioControl updateVolume:completionHandler:]
  -[HMAudioControl updateMuted:completionHandler:]
  -[HMAudioControl audioControl]
  -[HMAudioControl setAudioControl:]


HMMatterRequestHandler : NSObject <NSExtensionRequestHandling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMMatterRequestHandler beginRequestWithExtensionContext:]
  -[HMMatterRequestHandler fetchRoomsInHome:completion:]
  -[HMMatterRequestHandler pairAccessoryInHome:onboardingPayload:completion:]
  -[HMMatterRequestHandler configureAccessoryWithName:room:completion:]


HMApplicationData : NSObject
 @property  NSMutableDictionary *applicationData
 @property  NSSet *allowedObjectClasses
 @property  NSArray *allKeys
 @property  NSArray *allValues

  // instance methods
  -[HMApplicationData objectForKey:]
  -[HMApplicationData setObject:forKey:]
  -[HMApplicationData objectForKeyedSubscript:]
  -[HMApplicationData allValues]
  -[HMApplicationData .cxx_destruct]
  -[HMApplicationData dictionaryRepresentation]
  -[HMApplicationData dictionary]
  -[HMApplicationData allKeys]
  -[HMApplicationData setObject:forKeyedSubscript:]
  -[HMApplicationData init]
  -[HMApplicationData isEqual:]
  -[HMApplicationData applicationData]
  -[HMApplicationData setApplicationData:]
  -[HMApplicationData initWithContentsOfDictionary:allowedObjectClasses:]
  -[HMApplicationData initWithContentsOfDictionary:]
  -[HMApplicationData isAllowedClassForObject:]
  -[HMApplicationData allowedObjectClasses]
  -[HMApplicationData setAllowedObjectClasses:]


HMAccessCodeUpdateRequest : NSObject <HMAccessCodeModificationRequest>
 @property  HMAccessoryAccessCode *accessoryAccessCode
 @property  HMAccessCodeValue *updatedAccessCodeValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMAccessCodeUpdateRequest .cxx_destruct]
  -[HMAccessCodeUpdateRequest updatedAccessCodeValue]
  -[HMAccessCodeUpdateRequest accessoryAccessCode]
  -[HMAccessCodeUpdateRequest initWithAccessoryAccessCode:updatedAccessCodeValue:]
  -[HMAccessCodeUpdateRequest createAccessCodeUpdateRequestValue]


HMCharacteristicMetadata : NSObject <NSSecureCoding, HMObjectMerge, NSCopying>
 @property  NSNumber *minimumValue
 @property  NSNumber *maximumValue
 @property  NSNumber *stepValue
 @property  NSNumber *maxLength
 @property  NSString *format
 @property  NSString *units
 @property  NSString *manufacturerDescription
 @property  NSArray *validValues
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCharacteristicMetadata supportsSecureCoding]

  // instance methods
  -[HMCharacteristicMetadata setMaximumValue:]
  -[HMCharacteristicMetadata minimumValue]
  -[HMCharacteristicMetadata stepValue]
  -[HMCharacteristicMetadata setMinimumValue:]
  -[HMCharacteristicMetadata maxLength]
  -[HMCharacteristicMetadata validValues]
  -[HMCharacteristicMetadata uniqueIdentifier]
  -[HMCharacteristicMetadata initWithCoder:]
  -[HMCharacteristicMetadata .cxx_destruct]
  -[HMCharacteristicMetadata setFormat:]
  -[HMCharacteristicMetadata setStepValue:]
  -[HMCharacteristicMetadata init]
  -[HMCharacteristicMetadata isEqual:]
  -[HMCharacteristicMetadata maximumValue]
  -[HMCharacteristicMetadata format]
  -[HMCharacteristicMetadata units]
  -[HMCharacteristicMetadata setUnits:]
  -[HMCharacteristicMetadata copyWithZone:]
  -[HMCharacteristicMetadata setMaxLength:]
  -[HMCharacteristicMetadata encodeWithCoder:]
  -[HMCharacteristicMetadata _mergeWithNewObject:]
  -[HMCharacteristicMetadata manufacturerDescription]
  -[HMCharacteristicMetadata setManufacturerDescription:]
  -[HMCharacteristicMetadata setValidValues:]


HMRequestBase : NSObject
  // instance methods
  -[HMRequestBase _init]


HMResponseBase : NSObject
 @property  HMRequestBase *request
 @property  <NSCopying><NSObject> *value
 @property  NSError *error

  // instance methods
  -[HMResponseBase setRequest:]
  -[HMResponseBase .cxx_destruct]
  -[HMResponseBase request]
  -[HMResponseBase value]
  -[HMResponseBase error]
  -[HMResponseBase initWithRequest:value:error:]
  -[HMResponseBase initWithRequest:error:]


HMCharacteristicRequest : HMRequestBase
 @property  HMCharacteristic *characteristic

  // instance methods
  -[HMCharacteristicRequest .cxx_destruct]
  -[HMCharacteristicRequest characteristic]
  -[HMCharacteristicRequest initWithCharacteristic:]


HMCharacteristicReadRequest : HMCharacteristicRequest <HMReadOperation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCharacteristicReadRequest readRequestWithCharacteristic:]

  // instance methods
  -[HMCharacteristicReadRequest isEqual:]
  -[HMCharacteristicReadRequest initWithCharacteristic:]


HMCharacteristicWriteRequest : HMCharacteristicRequest <HMWriteOperation>
 @property  <NSCopying><NSObject> *value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCharacteristicWriteRequest writeRequestWithCharacteristic:value:]

  // instance methods
  -[HMCharacteristicWriteRequest .cxx_destruct]
  -[HMCharacteristicWriteRequest isEqual:]
  -[HMCharacteristicWriteRequest value]
  -[HMCharacteristicWriteRequest initWithCharacteristic:value:]


HMCharacteristicResponse : HMResponseBase
 @property  HMCharacteristicRequest *request

  // instance methods
  -[HMCharacteristicResponse isEqual:]
  -[HMCharacteristicResponse initWithRequest:value:error:]
  -[HMCharacteristicResponse initWithRequest:error:]


HMAttributeRequest : HMRequestBase
 @property  HMAccessoryProfile *accessoryProfile
 @property  NSString *attribute

  // instance methods
  -[HMAttributeRequest attribute]
  -[HMAttributeRequest .cxx_destruct]
  -[HMAttributeRequest accessoryProfile]
  -[HMAttributeRequest initWithAccessoryProfile:attribute:]


HMAttributeReadRequest : HMAttributeRequest <HMReadOperation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAttributeReadRequest readRequestWithAccessoryProfile:attribute:]

  // instance methods
  -[HMAttributeReadRequest isEqual:]


HMAttributeWriteRequest : HMAttributeRequest <HMWriteOperation>
 @property  <NSCopying><NSObject> *value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAttributeWriteRequest writeRequestWithAccessoryProfile:attribute:value:]

  // instance methods
  -[HMAttributeWriteRequest .cxx_destruct]
  -[HMAttributeWriteRequest isEqual:]
  -[HMAttributeWriteRequest value]
  -[HMAttributeWriteRequest initWithAccessoryProfile:attribute:value:]


HMAttributeResponse : HMResponseBase
 @property  HMAttributeRequest *request

  // instance methods
  -[HMAttributeResponse isEqual:]


HMExecuteRequest : HMRequestBase <HMExecuteOperation>
 @property  HMActionSet *actionSet
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMExecuteRequest executeRequestWithActionSet:]

  // instance methods
  -[HMExecuteRequest .cxx_destruct]
  -[HMExecuteRequest isEqual:]
  -[HMExecuteRequest actionSet]
  -[HMExecuteRequest initWithActionSet:]


HMClientContext : NSObject <NSCopying, NSMutableCopying>
 @property  NSString *metricIdentifier

  // instance methods
  -[HMClientContext .cxx_destruct]
  -[HMClientContext mutableCopyWithZone:]
  -[HMClientContext copyWithZone:]
  -[HMClientContext metricIdentifier]
  -[HMClientContext initWithMetricIdentifier:]
  -[HMClientContext setMetricIdentifier:]


HMMutableClientContext : HMClientContext
 @property  NSString *metricIdentifier

  // class methods
  +[HMMutableClientContext clientContextWithMetricIdentifier:]

  // instance methods
  -[HMMutableClientContext mutableCopyWithZone:]
  -[HMMutableClientContext copyWithZone:]
  -[HMMutableClientContext initWithMetricIdentifier:]


HMReportContext : NSObject <NSCopying, NSMutableCopying>
 @property  double reportTimeout
 @property  NSString *reportDomain
 @property  NSData *requestInfo

  // class methods
  +[HMReportContext reportContextWithDomain:requestInfo:timeout:]

  // instance methods
  -[HMReportContext .cxx_destruct]
  -[HMReportContext requestInfo]
  -[HMReportContext mutableCopyWithZone:]
  -[HMReportContext copyWithZone:]
  -[HMReportContext initWithReportDomain:requestInfo:timeout:]
  -[HMReportContext reportDomain]
  -[HMReportContext reportTimeout]
  -[HMReportContext setReportTimeout:]


HMMutableReportContext : HMReportContext
 @property  NSString *reportDomain
 @property  NSData *requestInfo
 @property  double reportTimeout

  // class methods
  +[HMMutableReportContext reportContextWithDomain:requestInfo:timeout:]
  +[HMMutableReportContext reportContextWithDomain:requestInfo:]

  // instance methods
  -[HMMutableReportContext mutableCopyWithZone:]
  -[HMMutableReportContext copyWithZone:]
  -[HMMutableReportContext initWithReportDomain:requestInfo:timeout:]


HMBatchRequest : NSObject
 @property  NSArray *requests
 @property  HMClientContext *clientContext
 @property  @? progressHandler
 @property  @? completionHandler
 @property  HMReportContext *reportContext

  // class methods
  +[HMBatchRequest validateRequestTypes:requestClass:]
  +[HMBatchRequest batchRequestWithReadRequests:]
  +[HMBatchRequest batchRequestWithWriteRequests:]
  +[HMBatchRequest batchRequestWithExecuteRequests:]

  // instance methods
  -[HMBatchRequest setRequests:]
  -[HMBatchRequest requests]
  -[HMBatchRequest clientContext]
  -[HMBatchRequest .cxx_destruct]
  -[HMBatchRequest setProgressHandler:]
  -[HMBatchRequest setCompletionHandler:]
  -[HMBatchRequest setClientContext:]
  -[HMBatchRequest progressHandler]
  -[HMBatchRequest completionHandler]
  -[HMBatchRequest initWithRequests:requestClass:]
  -[HMBatchRequest setReportContext:]
  -[HMBatchRequest reportContext]


HMCharacteristicBatchRequest : NSObject
 @property  HMBatchRequest *batchRequest
 @property  @? progressHandler
 @property  @? completionHandler

  // class methods
  +[HMCharacteristicBatchRequest characteristicBatchRequestWithReadRequests:]
  +[HMCharacteristicBatchRequest characteristicBatchRequestWithWriteRequests:]

  // instance methods
  -[HMCharacteristicBatchRequest requests]
  -[HMCharacteristicBatchRequest .cxx_destruct]
  -[HMCharacteristicBatchRequest setProgressHandler:]
  -[HMCharacteristicBatchRequest setCompletionHandler:]
  -[HMCharacteristicBatchRequest progressHandler]
  -[HMCharacteristicBatchRequest completionHandler]
  -[HMCharacteristicBatchRequest initWithBatchRequest:]
  -[HMCharacteristicBatchRequest batchRequest]
  -[HMCharacteristicBatchRequest setBatchRequest:]


HMCameraClipFetchAssetContextOperationDataSource : NSObject <HMCameraClipFetchAssetContextOperationDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMCameraClipFetchAssetContextOperationDataSource copyItemAtURL:toURL:error:]
  -[HMCameraClipFetchAssetContextOperationDataSource removeItemAtURL:error:]
  -[HMCameraClipFetchAssetContextOperationDataSource dataTaskWithURL:httpHeaderFields:]
  -[HMCameraClipFetchAssetContextOperationDataSource dataFromEncryptedDataContext:usingDecryptionManager:]
  -[HMCameraClipFetchAssetContextOperationDataSource writeData:toFileURL:error:]
  -[HMCameraClipFetchAssetContextOperationDataSource outputStreamToFileAtURL:shouldAppend:]
  -[HMCameraClipFetchAssetContextOperationDataSource createTemporaryDirectoryAppropriateForURL:error:]
  -[HMCameraClipFetchAssetContextOperationDataSource createVideoFileCombinerWithVideoFileURLs:queue:]


HMDeviceSetupResponseMessage : TRResponseMessage
 @property  NSData *payload

  // class methods
  +[HMDeviceSetupResponseMessage supportsSecureCoding]

  // instance methods
  -[HMDeviceSetupResponseMessage initWithCoder:]
  -[HMDeviceSetupResponseMessage payload]
  -[HMDeviceSetupResponseMessage .cxx_destruct]
  -[HMDeviceSetupResponseMessage init]
  -[HMDeviceSetupResponseMessage initWithPayload:]
  -[HMDeviceSetupResponseMessage encodeWithCoder:]


HMCameraClipCryptoUtilities : NSObject
  // class methods
  +[HMCameraClipCryptoUtilities zeroingDataFromData:]
  +[HMCameraClipCryptoUtilities secureRandomZeroingDataWithLength:]


HMCameraRecordingEventManager : NSObject <HMCameraClipManagerObserver, HMCameraRecordingReachabilityEventManagerObserver, HMFLogging>
 @property  _HMContext *context
 @property  HMCameraRecordingReachabilityEventManager *reachabilityEventManager
 @property  HMCameraClipManager *clipManager
 @property  HMFUnfairLock *lock
 @property  NSHashTable *observers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraRecordingEventManager logCategory]

  // instance methods
  -[HMCameraRecordingEventManager .cxx_destruct]
  -[HMCameraRecordingEventManager addObserver:]
  -[HMCameraRecordingEventManager observers]
  -[HMCameraRecordingEventManager lock]
  -[HMCameraRecordingEventManager removeObserver:]
  -[HMCameraRecordingEventManager context]
  -[HMCameraRecordingEventManager performCloudPullWithCompletion:]
  -[HMCameraRecordingEventManager clipManager]
  -[HMCameraRecordingEventManager reachabilityEventManager]
  -[HMCameraRecordingEventManager fetchEventsWithDateInterval:limit:shouldOrderAscending:completion:]
  -[HMCameraRecordingEventManager fetchEventsWithDateInterval:quality:limit:shouldOrderAscending:completion:]
  -[HMCameraRecordingEventManager mergedRecordingEventsWithRecordingEvents1:recordingEvents2:limit:shouldOrderAscending:]
  -[HMCameraRecordingEventManager fetchCountOfEventsWithDateInterval:completion:]
  -[HMCameraRecordingEventManager deleteAllEventsWithCompletionHandler:]
  -[HMCameraRecordingEventManager notifyObserversOfUpdatedEvents:removedEventsWithUUIDs:]
  -[HMCameraRecordingEventManager clipManager:didUpdateClips:]
  -[HMCameraRecordingEventManager clipManager:didRemoveClipsWithUUIDs:]
  -[HMCameraRecordingEventManager reachabilityEventManager:didUpdateReachabilityEvents:]
  -[HMCameraRecordingEventManager reachabilityEventManager:didRemoveReachabilityEventsWithUUIDs:]
  -[HMCameraRecordingEventManager initWithContext:clipManager:reachabilityEventManager:]
  -[HMCameraRecordingEventManager fetchEventsWithDateInterval:limit:completion:]
  -[HMCameraRecordingEventManager fetchAllEventsWithCompletion:]
  -[HMCameraRecordingEventManager fetchCountOfAllEventsWithCompletion:]


HMCameraBulletinBoardSmartNotification : HMBulletinBoardNotification
 @property  HMCameraUserSettings *cameraUserSettings
 @property  unsigned long significantEventTypes
 @property  unsigned long personFamiliarityOptions

  // class methods
  +[HMCameraBulletinBoardSmartNotification significantEventTypesInPredicate:]
  +[HMCameraBulletinBoardSmartNotification personFamiliarityOptionsInPredicate:]
  +[HMCameraBulletinBoardSmartNotification predicateForSignificantEventTypes:]
  +[HMCameraBulletinBoardSmartNotification predicateForPersonFamiliarityOptions:]
  +[HMCameraBulletinBoardSmartNotification predicateForSignificantEventTypes:personFamiliarityOptions:]

  // instance methods
  -[HMCameraBulletinBoardSmartNotification .cxx_destruct]
  -[HMCameraBulletinBoardSmartNotification commitWithCompletionHandler:]
  -[HMCameraBulletinBoardSmartNotification targetUUID]
  -[HMCameraBulletinBoardSmartNotification cameraUserSettings]
  -[HMCameraBulletinBoardSmartNotification setCameraUserSettings:]
  -[HMCameraBulletinBoardSmartNotification initWithBulletinBoardNotification:]
  -[HMCameraBulletinBoardSmartNotification significantEventTypes]
  -[HMCameraBulletinBoardSmartNotification personFamiliarityOptions]
  -[HMCameraBulletinBoardSmartNotification __configureWithContext:cameraUserSettings:]


HMHomePersonManager : HMPersonManager <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMHomePersonManager logCategory]
  +[HMHomePersonManager personManagerUUIDFromHomeUUID:]

  // instance methods
  -[HMHomePersonManager logIdentifier]
  -[HMHomePersonManager initWithHome:]


HMImmutableSettingsProtoBoolSettingEvent : PBCodable <NSCopying>
 @property  BOOL hasValue
 @property  HMImmutableSettingsProtoBoolValueEvent *value

  // instance methods
  -[HMImmutableSettingsProtoBoolSettingEvent mergeFrom:]
  -[HMImmutableSettingsProtoBoolSettingEvent hasValue]
  -[HMImmutableSettingsProtoBoolSettingEvent .cxx_destruct]
  -[HMImmutableSettingsProtoBoolSettingEvent dictionaryRepresentation]
  -[HMImmutableSettingsProtoBoolSettingEvent writeTo:]
  -[HMImmutableSettingsProtoBoolSettingEvent isEqual:]
  -[HMImmutableSettingsProtoBoolSettingEvent copyTo:]
  -[HMImmutableSettingsProtoBoolSettingEvent readFrom:]
  -[HMImmutableSettingsProtoBoolSettingEvent setValue:]
  -[HMImmutableSettingsProtoBoolSettingEvent value]
  -[HMImmutableSettingsProtoBoolSettingEvent copyWithZone:]


HMMediaGroupProtoJoinedMediaDestination : PBCodable <NSCopying>
 @property  BOOL hasMediaDestination
 @property  HMMediaGroupProtoMediaDestination *mediaDestination
 @property  BOOL hasGroup
 @property  HMMediaGroupProtoMediaGroupData *group

  // instance methods
  -[HMMediaGroupProtoJoinedMediaDestination setGroup:]
  -[HMMediaGroupProtoJoinedMediaDestination mergeFrom:]
  -[HMMediaGroupProtoJoinedMediaDestination hasGroup]
  -[HMMediaGroupProtoJoinedMediaDestination .cxx_destruct]
  -[HMMediaGroupProtoJoinedMediaDestination dictionaryRepresentation]
  -[HMMediaGroupProtoJoinedMediaDestination writeTo:]
  -[HMMediaGroupProtoJoinedMediaDestination mediaDestination]
  -[HMMediaGroupProtoJoinedMediaDestination setMediaDestination:]
  -[HMMediaGroupProtoJoinedMediaDestination hasMediaDestination]
  -[HMMediaGroupProtoJoinedMediaDestination isEqual:]
  -[HMMediaGroupProtoJoinedMediaDestination copyTo:]
  -[HMMediaGroupProtoJoinedMediaDestination readFrom:]
  -[HMMediaGroupProtoJoinedMediaDestination group]
  -[HMMediaGroupProtoJoinedMediaDestination copyWithZone:]


HMCameraView : UIView
 @property  HMCameraSource *cameraSource

  // instance methods
  -[HMCameraView willMoveToWindow:]
  -[HMCameraView .cxx_destruct]
  -[HMCameraView cameraSource]
  -[HMCameraView _fillSlotForCameraSource]
  -[HMCameraView setCameraSource:]


HMAccessorySettingsMessageDispatcherStartSendingMessageEvent : HMCoreAnalyticsMetricEvent
 @property  NSString *messageName

  // instance methods
  -[HMAccessorySettingsMessageDispatcherStartSendingMessageEvent .cxx_destruct]
  -[HMAccessorySettingsMessageDispatcherStartSendingMessageEvent eventPayload]
  -[HMAccessorySettingsMessageDispatcherStartSendingMessageEvent messageName]
  -[HMAccessorySettingsMessageDispatcherStartSendingMessageEvent initWithMessageName:]


HMCacheManager : HMFObject <HMCacheDelegate, HMFTimerDelegate>
 @property  <HMPersistentCache> *persistentCache
 @property  NSMapTable *cacheMap
 @property  NSMutableDictionary *pendingWrites
 @property  HMFTimer *writeDebounceTimer
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMCacheManager timerDidFire:]
  -[HMCacheManager cacheWithName:]
  -[HMCacheManager pendingWrites]
  -[HMCacheManager initWithTimerFactory:persistentCache:]
  -[HMCacheManager .cxx_destruct]
  -[HMCacheManager _loadCacheNamed:]
  -[HMCacheManager cacheDidUpdate:]
  -[HMCacheManager persistentCache]
  -[HMCacheManager cacheWithName:completion:]
  -[HMCacheManager _cacheWithName:]
  -[HMCacheManager workQueue]
  -[HMCacheManager _saveCache:]
  -[HMCacheManager cacheMap]
  -[HMCacheManager writeDebounceTimer]


HMSettingsMessageHandler : NSObject
  // instance methods
  -[HMSettingsMessageHandler .cxx_destruct]
  -[HMSettingsMessageHandler sendUpdateValueMessage:value:completionHandler:]
  -[HMSettingsMessageHandler configureWithContext:]


HMSettingsCreator : NSObject
  // instance methods
  -[HMSettingsCreator createSettingsWithOwner:]


HMSettingsController : NSObject <HMFLogging, HMSettingManager, HMSettingsOwner>
 @property  HMSettingsMessageHandler *messageHandler
 @property  NSDictionary *encodedSettings
 @property  _HMContext *context
 @property  NSUUID *parentIdentifier
 @property  NSString *codingKey
 @property  HMSettings *settings
 @property  <HMSettingsDelegate> *delegate
 @property  HMSettingGroup *rootGroup
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSettingsController logCategory]

  // instance methods
  -[HMSettingsController messageHandler]
  -[HMSettingsController setEncodedSettings:]
  -[HMSettingsController hasSettings]
  -[HMSettingsController setMessageHandler:]
  -[HMSettingsController hasSettingGroups]
  -[HMSettingsController updateValueForSetting:value:completionHandler:]
  -[HMSettingsController .cxx_destruct]
  -[HMSettingsController encodedSettings]
  -[HMSettingsController initWithParentIdentifier:codingKey:messageHandler:settingsCreator:]
  -[HMSettingsController setDelegate:]
  -[HMSettingsController setSettingGroup:withParentGroupKeyPath:]
  -[HMSettingsController notifyDelegateOfUpdate]
  -[HMSettingsController configureWithContext:]
  -[HMSettingsController codingKey]
  -[HMSettingsController initWithParentIdentifier:homeUUID:codingKey:]
  -[HMSettingsController mergeWith:settingsInitializedWasModified:]
  -[HMSettingsController settingForKeyPath:]
  -[HMSettingsController rootGroup]
  -[HMSettingsController setSetting:withGroupKeyPath:]
  -[HMSettingsController __notifyDelegateDidUpdateKeyPath:]
  -[HMSettingsController __notifyDelegateSettingsDidUpdate]
  -[HMSettingsController parentIdentifier]
  -[HMSettingsController delegate]
  -[HMSettingsController setContext:]
  -[HMSettingsController setRootGroup:]
  -[HMSettingsController logIdentifier]
  -[HMSettingsController settingGroupForKeyPath:]
  -[HMSettingsController settings]
  -[HMSettingsController context]
  -[HMSettingsController decodeWithCoder:]


HMCameraStream : HMCameraSource <HMFMessageReceiver>
 @property  NSString *sessionID
 @property  unsigned long internalAudioStreamSetting
 @property  NSNumber *internalAudioVolume
 @property  NSNumber *audioVolume
 @property  unsigned long audioStreamSetting
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraStream logCategory]

  // instance methods
  -[HMCameraStream sessionID]
  -[HMCameraStream audioVolume]
  -[HMCameraStream .cxx_destruct]
  -[HMCameraStream dealloc]
  -[HMCameraStream internalAudioStreamSetting]
  -[HMCameraStream internalAudioVolume]
  -[HMCameraStream _updateAudioStreamSetting:completionHandler:]
  -[HMCameraStream _updateAudioVolume:completionHandler:]
  -[HMCameraStream updateAudioStreamSetting:completionHandler:]
  -[HMCameraStream _issueUpdateAudioStreamSettingRequest:completionHandler:]
  -[HMCameraStream _handleAudioStreamSettingUpdate:withError:context:completionHandler:]
  -[HMCameraStream setInternalAudioVolume:]
  -[HMCameraStream setInternalAudioStreamSetting:]
  -[HMCameraStream initWithProfileUniqueIdentifier:sessionID:slotIdentifier:aspectRatio:audioStreamSetting:]
  -[HMCameraStream audioStreamSetting]
  -[HMCameraStream updateAudioVolume:completionHandler:]
  -[HMCameraStream setAudioStreamSetting:]


HMEvent : NSObject <NSSecureCoding, HMObjectMerge>
 @property  _HMContext *context
 @property  NSUUID *uuid
 @property  BOOL endEvent
 @property  NSString *triggerType
 @property  HMEventTrigger *eventTrigger
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMEvent supportsSecureCoding]
  +[HMEvent sharedTriggerActivationSupportedForHome:]
  +[HMEvent isSupportedForHome:]

  // instance methods
  -[HMEvent uniqueIdentifier]
  -[HMEvent initWithCoder:]
  -[HMEvent .cxx_destruct]
  -[HMEvent _unconfigure]
  -[HMEvent initWithDict:]
  -[HMEvent init]
  -[HMEvent isEqual:]
  -[HMEvent triggerType]
  -[HMEvent setEndEvent:]
  -[HMEvent uuid]
  -[HMEvent setContext:]
  -[HMEvent encodeWithCoder:]
  -[HMEvent context]
  -[HMEvent __configureWithContext:eventTrigger:]
  -[HMEvent eventTrigger]
  -[HMEvent _updateEventWithPayload:completionHandler:]
  -[HMEvent _serializeForAdd]
  -[HMEvent _updateFromDictionary:]
  -[HMEvent _mergeWithNewObject:]
  -[HMEvent _unconfigureContext]
  -[HMEvent _updateTriggerType]
  -[HMEvent setEventTrigger:]
  -[HMEvent isEndEvent]


HMCoreAnalyticsBooleanFieldData : HMCoreAnalyticsFieldData
  // instance methods
  -[HMCoreAnalyticsBooleanFieldData initWithName:boolValue:]


HMAccessCodeManager : NSObject <HMFLogging, HMFMessageReceiver>
 @property  HMHome *home
 @property  _HMContext *context
 @property  NSUUID *UUID
 @property  NSNotificationCenter *notificationCenter
 @property  NSHashTable *observers
 @property  NSArray *accessoriesSupportingAccessCodes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMAccessCodeManager logCategory]
  +[HMAccessCodeManager accessCodeManagerUUIDFromHomeUUID:]
  +[HMAccessCodeManager generateAccessCodeValueFromConstraints:accessoryAccessCodes:homeAccessCodes:]
  +[HMAccessCodeManager greatestLowerBoundForAccessCodeLengthFromConstraints:]
  +[HMAccessCodeManager leastUpperBoundForAccessCodeLengthFromConstraints:]
  +[HMAccessCodeManager _accessCodeLengthFromLowerBound:upperBound:]
  +[HMAccessCodeManager _createAccessCodeWithLength:]
  +[HMAccessCodeManager valueObjectsForAccessCodeModificationRequests:home:]
  +[HMAccessCodeManager convertPotentialUniqueIdentifier:toUUIDForUserInHome:]
  +[HMAccessCodeManager doesAccessCode:conflictWithExistingAccessCodes:]
  +[HMAccessCodeManager isWeakAccessCode:]
  +[HMAccessCodeManager generateAccessCodeValueFromConstraints:existingAccessCodes:]
  +[HMAccessCodeManager accessCodeConstraints]

  // instance methods
  -[HMAccessCodeManager configure]
  -[HMAccessCodeManager home]
  -[HMAccessCodeManager notificationCenter]
  -[HMAccessCodeManager UUID]
  -[HMAccessCodeManager .cxx_destruct]
  -[HMAccessCodeManager addObserver:]
  -[HMAccessCodeManager messageReceiveQueue]
  -[HMAccessCodeManager observers]
  -[HMAccessCodeManager messageTargetUUID]
  -[HMAccessCodeManager logIdentifier]
  -[HMAccessCodeManager removeObserver:]
  -[HMAccessCodeManager initWithHome:]
  -[HMAccessCodeManager context]
  -[HMAccessCodeManager _subscribe]
  -[HMAccessCodeManager handleDaemonReconnectedNotification:]
  -[HMAccessCodeManager initWithHome:context:UUID:notificationCenter:]
  -[HMAccessCodeManager handleDidAddAccessoryAccessCodesMessage:]
  -[HMAccessCodeManager handleDidUpdateAccessoryAccessCodesMessage:]
  -[HMAccessCodeManager handleDidRemoveAccessoryAccessCodesMessage:]
  -[HMAccessCodeManager handleDidAddHomeAccessCodesMessage:]
  -[HMAccessCodeManager handleDidUpdateHomeAccessCodesMessage:]
  -[HMAccessCodeManager handleDidRemoveHomeAccessCodesMessage:]
  -[HMAccessCodeManager _unsubscribe]
  -[HMAccessCodeManager _sendMessageWithName:payload:responseHandler:]
  -[HMAccessCodeManager removeSimpleLabelAccessCode:completion:]
  -[HMAccessCodeManager setAccessCode:forUserWithUUID:completion:]
  -[HMAccessCodeManager accessoriesSupportingAccessCodes]
  -[HMAccessCodeManager fetchAccessCodesFromAccessories:completion:]
  -[HMAccessCodeManager fetchAccessCodeConstraintsFromAccessories:completion:]
  -[HMAccessCodeManager fetchHomeAccessCodesWithCompletion:]
  -[HMAccessCodeManager setUserInformation:forHomeAccessCodeWithValue:completion:]
  -[HMAccessCodeManager removeHomeAccessCodeWithValue:completion:]
  -[HMAccessCodeManager submitAccessCodeModificationRequests:completion:]
  -[HMAccessCodeManager generateAccessCodeForUser:completion:]
  -[HMAccessCodeManager setAccessCode:forUser:completion:]
  -[HMAccessCodeManager resetAccessoryAccessCodesWithValueMatchingHomeAccessCode:completion:]
  -[HMAccessCodeManager fetchCachedAccessoryAccessCodesWithCompletion:]


HMSoftwareUpdateController : NSObject <HMFMessageReceiver, HMObjectMerge>
 @property  _HMContext *context
 @property  HMAccessory *accessory
 @property  HMSoftwareUpdate *availableUpdate
 @property  BOOL controllable
 @property  <HMSoftwareUpdateControllerDelegate> *delegate
 @property  NSUUID *uniqueIdentifier
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSoftwareUpdateController namespace]
  +[HMSoftwareUpdateController logCategory]

  // instance methods
  -[HMSoftwareUpdateController accessory]
  -[HMSoftwareUpdateController setAccessory:]
  -[HMSoftwareUpdateController uniqueIdentifier]
  -[HMSoftwareUpdateController .cxx_destruct]
  -[HMSoftwareUpdateController initWithAccessory:]
  -[HMSoftwareUpdateController setDelegate:]
  -[HMSoftwareUpdateController init]
  -[HMSoftwareUpdateController isEqual:]
  -[HMSoftwareUpdateController isControllable]
  -[HMSoftwareUpdateController messageReceiveQueue]
  -[HMSoftwareUpdateController delegate]
  -[HMSoftwareUpdateController setContext:]
  -[HMSoftwareUpdateController messageTargetUUID]
  -[HMSoftwareUpdateController logIdentifier]
  -[HMSoftwareUpdateController messageDestination]
  -[HMSoftwareUpdateController context]
  -[HMSoftwareUpdateController _mergeWithNewObject:]
  -[HMSoftwareUpdateController availableUpdate]
  -[HMSoftwareUpdateController setAvailableUpdate:]
  -[HMSoftwareUpdateController configureWithContext:accessory:]
  -[HMSoftwareUpdateController fetchAvailableUpdateWithCompletionHandler:]
  -[HMSoftwareUpdateController startUpdate:completionHandler:]
  -[HMSoftwareUpdateController changeUpdateSource:path:documentationPath:userInitiatedStaging:completion:]
  -[HMSoftwareUpdateController removeStagedSoftwareUpdate:]


HMEventTrigger : HMTrigger <NSSecureCoding>
 @property  NSPredicate *internalPredicate
 @property  HMMutableArray *currentEvents
 @property  NSArray *allEvents
 @property  unsigned long activationState
 @property  NSArray *events
 @property  NSArray *endEvents
 @property  NSPredicate *predicate
 @property  NSArray *recurrences
 @property  BOOL executeOnce
 @property  unsigned long triggerActivationState

  // class methods
  +[HMEventTrigger supportsSecureCoding]
  +[HMEventTrigger createWithDictionary:home:]
  +[HMEventTrigger __validateRecurrences:]
  +[HMEventTrigger _predicateForEvaluatingTriggerOccurringBeforeSignificantEvent:applyingOffset:]
  +[HMEventTrigger negateOffset:]
  +[HMEventTrigger _predicateForEvaluatingTriggerOccurringAfterSignificantEvent:applyingOffset:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringAfterSignificantEvent:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringBeforeSignificantEvent:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringAfterDateWithComponents:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringBeforeDateWithComponents:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringOnDateWithComponents:]
  +[HMEventTrigger predicateForEvaluatingTriggerWithCharacteristic:relatedBy:toValue:]
  +[HMEventTrigger _predicateForEvaluatingTriggerWithCharacteristic:value:valueFormatString:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringBeforeSignificantEvent:applyingOffset:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringAfterSignificantEvent:applyingOffset:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringBetweenSignificantEvent:secondSignificantEvent:]
  +[HMEventTrigger predicateForEvaluatingTriggerWithPresence:]
  +[HMEventTrigger predicateForEvaluatingTriggerOccurringBetweenDateWithComponents:secondDateWithComponents:]
  +[HMEventTrigger predicateForEvaluatingTriggerWithCharacteristic:matchingValue:]
  +[HMEventTrigger isActionAffectedByEndEvents:]

  // instance methods
  -[HMEventTrigger activationState]
  -[HMEventTrigger events]
  -[HMEventTrigger initWithCoder:]
  -[HMEventTrigger predicate]
  -[HMEventTrigger .cxx_destruct]
  -[HMEventTrigger internalPredicate]
  -[HMEventTrigger allEvents]
  -[HMEventTrigger setInternalPredicate:]
  -[HMEventTrigger setActivationState:]
  -[HMEventTrigger encodeWithCoder:]
  -[HMEventTrigger endEvents]
  -[HMEventTrigger recurrences]
  -[HMEventTrigger _serializeForAdd]
  -[HMEventTrigger _mergeWithNewObject:]
  -[HMEventTrigger __configureWithContext:home:]
  -[HMEventTrigger _registerNotificationHandlers]
  -[HMEventTrigger compatibleWithApp]
  -[HMEventTrigger initInternalWithName:configuredName:events:endEvents:recurrences:predicate:]
  -[HMEventTrigger initWithName:events:endEvents:recurrences:predicate:]
  -[HMEventTrigger currentEvents]
  -[HMEventTrigger _addEvent:completionHandler:]
  -[HMEventTrigger _handleAddEventFromResponse:newEventPayload:]
  -[HMEventTrigger _removeEvent:completionHandler:]
  -[HMEventTrigger _handleEventsRemovedFromResponse:]
  -[HMEventTrigger _updateEvents:endEvent:completionHandler:]
  -[HMEventTrigger _updateEventsFromResponse:responsePayload:]
  -[HMEventTrigger _updateCharacterisiticReferenceInNewEvent:]
  -[HMEventTrigger _updatePredicate:completionHandler:]
  -[HMEventTrigger _updateRecurrences:completionHandler:]
  -[HMEventTrigger setRecurrences:]
  -[HMEventTrigger _updateExecuteOnce:completionHandler:]
  -[HMEventTrigger setExecuteOnce:]
  -[HMEventTrigger handleActivationStateNotification:]
  -[HMEventTrigger addedEvent:]
  -[HMEventTrigger executeOnce]
  -[HMEventTrigger containsSharedTriggerActivationBits]
  -[HMEventTrigger initWithName:events:predicate:]
  -[HMEventTrigger triggerActivationState]
  -[HMEventTrigger addEvent:completionHandler:]
  -[HMEventTrigger removeEvent:completionHandler:]
  -[HMEventTrigger updateEvents:completionHandler:]
  -[HMEventTrigger updateEndEvents:completionHandler:]
  -[HMEventTrigger _updateCharacteristicReference]
  -[HMEventTrigger updatePredicate:completionHandler:]
  -[HMEventTrigger updateRecurrences:completionHandler:]
  -[HMEventTrigger updateExecuteOnce:completionHandler:]
  -[HMEventTrigger setCurrentEvents:]


HMAccessoryInfo : NSObject
 @property  BOOL readOnly

  // instance methods
  -[HMAccessoryInfo isReadOnly]
  -[HMAccessoryInfo protoPayload]
  -[HMAccessoryInfo initWithProtoPayload:]
  -[HMAccessoryInfo initWithReadOnly:]


HMAccessoryInfoWifiInfo : HMAccessoryInfo
 @property  NSString *macAddress
 @property  NSString *networkSSID

  // instance methods
  -[HMAccessoryInfoWifiInfo .cxx_destruct]
  -[HMAccessoryInfoWifiInfo macAddress]
  -[HMAccessoryInfoWifiInfo protoPayload]
  -[HMAccessoryInfoWifiInfo initWithProtoPayload:]
  -[HMAccessoryInfoWifiInfo initWithMacAddress:networkSSID:readOnly:]
  -[HMAccessoryInfoWifiInfo networkSSID]
  -[HMAccessoryInfoWifiInfo initWithWifiNetworkInfo:readOnly:]
  -[HMAccessoryInfoWifiInfo hmfWifiNetworkInfo]


HMUserCameraAccess : NSObject
 @property  NSNumber *number
 @property  unsigned long value

  // class methods
  +[HMUserCameraAccess accessWithValue:]
  +[HMUserCameraAccess accessWithNumber:]
  +[HMUserCameraAccess accessWithCoder:]
  +[HMUserCameraAccess accessWithMessage:]
  +[HMUserCameraAccess accessWithDict:]

  // instance methods
  -[HMUserCameraAccess number]
  -[HMUserCameraAccess initWithNumber:]
  -[HMUserCameraAccess addToCoder:]
  -[HMUserCameraAccess isEqual:]
  -[HMUserCameraAccess value]
  -[HMUserCameraAccess addToPayload:]


HMAccessoryEventTopic : NSObject
  // class methods
  +[HMAccessoryEventTopic suffixIDFromTopicSuffix:]
  +[HMAccessoryEventTopic topicFromSuffixID:homeUUID:accessoryUUID:]


HMSettings : NSObject
 @property  <HMSettingsOwner> *owner
 @property  HMSettingGroup *rootGroup
 @property  BOOL controllable
 @property  <HMSettingsDelegate> *delegate

  // instance methods
  -[HMSettings .cxx_destruct]
  -[HMSettings setDelegate:]
  -[HMSettings owner]
  -[HMSettings isControllable]
  -[HMSettings rootGroup]
  -[HMSettings delegate]
  -[HMSettings longDescription]
  -[HMSettings initWithSettingsOwner:]


HMPersonFaceCrop : HMFaceCrop <NSMutableCopying>
 @property  NSUUID *unassociatedFaceCropUUID
 @property  long long source
 @property  NSUUID *personUUID

  // class methods
  +[HMPersonFaceCrop supportsSecureCoding]

  // instance methods
  -[HMPersonFaceCrop initWithCoder:]
  -[HMPersonFaceCrop personUUID]
  -[HMPersonFaceCrop .cxx_destruct]
  -[HMPersonFaceCrop attributeDescriptions]
  -[HMPersonFaceCrop isEqual:]
  -[HMPersonFaceCrop setSource:]
  -[HMPersonFaceCrop mutableCopyWithZone:]
  -[HMPersonFaceCrop copyWithZone:]
  -[HMPersonFaceCrop source]
  -[HMPersonFaceCrop encodeWithCoder:]
  -[HMPersonFaceCrop unassociatedFaceCropUUID]
  -[HMPersonFaceCrop initWithUUID:dataRepresentation:dateCreated:faceBoundingBox:personUUID:]
  -[HMPersonFaceCrop setUnassociatedFaceCropUUID:]


HMMutablePersonFaceCrop : HMPersonFaceCrop
 @property  NSUUID *unassociatedFaceCropUUID
 @property  long long source

  // instance methods
  -[HMMutablePersonFaceCrop copyWithZone:]


HMCHIPEcosystemPairAccessoryResponse : HMCHIPEcosystemResponse
  // class methods
  +[HMCHIPEcosystemPairAccessoryResponse supportsSecureCoding]

  // instance methods
  -[HMCHIPEcosystemPairAccessoryResponse messageType]


HMCameraSettingsControl : HMCameraControl
 @property  _HMCameraSettingsControl *settingsControl
 @property  HMCharacteristic *nightVision
 @property  HMCharacteristic *currentHorizontalTilt
 @property  HMCharacteristic *targetHorizontalTilt
 @property  HMCharacteristic *currentVerticalTilt
 @property  HMCharacteristic *targetVerticalTilt
 @property  HMCharacteristic *opticalZoom
 @property  HMCharacteristic *digitalZoom
 @property  HMCharacteristic *imageRotation
 @property  HMCharacteristic *imageMirroring

  // instance methods
  -[HMCameraSettingsControl .cxx_destruct]
  -[HMCameraSettingsControl nightVision]
  -[HMCameraSettingsControl currentHorizontalTilt]
  -[HMCameraSettingsControl targetHorizontalTilt]
  -[HMCameraSettingsControl currentVerticalTilt]
  -[HMCameraSettingsControl targetVerticalTilt]
  -[HMCameraSettingsControl opticalZoom]
  -[HMCameraSettingsControl digitalZoom]
  -[HMCameraSettingsControl imageRotation]
  -[HMCameraSettingsControl imageMirroring]
  -[HMCameraSettingsControl settingsControl]
  -[HMCameraSettingsControl initWithSettingsControl:]
  -[HMCameraSettingsControl setSettingsControl:]


HMAccessCodeAddRequestValue : NSObject <HMFObject, HMAccessCodeModificationRequestValue, NSCopying, NSSecureCoding>
 @property  HMAccessCodeValue *accessCodeValue
 @property  NSUUID *accessoryUUID
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessCodeAddRequestValue supportsSecureCoding]
  +[HMAccessCodeAddRequestValue shortDescription]

  // instance methods
  -[HMAccessCodeAddRequestValue accessoryUUID]
  -[HMAccessCodeAddRequestValue privateDescription]
  -[HMAccessCodeAddRequestValue initWithCoder:]
  -[HMAccessCodeAddRequestValue .cxx_destruct]
  -[HMAccessCodeAddRequestValue attributeDescriptions]
  -[HMAccessCodeAddRequestValue isEqual:]
  -[HMAccessCodeAddRequestValue shortDescription]
  -[HMAccessCodeAddRequestValue copyWithZone:]
  -[HMAccessCodeAddRequestValue encodeWithCoder:]
  -[HMAccessCodeAddRequestValue accessCodeValue]
  -[HMAccessCodeAddRequestValue initWithAccessCodeValue:accessoryUUID:]


HMAccessoryDiagnosticsOptions : NSObject <NSSecureCoding, NSCopying>
 @property  BOOL metadataRequired
 @property  NSNumber *logSize
 @property  BOOL recordAudio
 @property  BOOL enableAudioClips
 @property  NSNumber *delay
 @property  long long snapshotType

  // class methods
  +[HMAccessoryDiagnosticsOptions supportsSecureCoding]

  // instance methods
  -[HMAccessoryDiagnosticsOptions initWithCoder:]
  -[HMAccessoryDiagnosticsOptions delay]
  -[HMAccessoryDiagnosticsOptions .cxx_destruct]
  -[HMAccessoryDiagnosticsOptions snapshotType]
  -[HMAccessoryDiagnosticsOptions payloadMetadata]
  -[HMAccessoryDiagnosticsOptions logSize]
  -[HMAccessoryDiagnosticsOptions copyWithZone:]
  -[HMAccessoryDiagnosticsOptions encodeWithCoder:]
  -[HMAccessoryDiagnosticsOptions recordAudio]
  -[HMAccessoryDiagnosticsOptions enableAudioClips]
  -[HMAccessoryDiagnosticsOptions initWithLogSizeBytes:delaySeconds:snapshotType:recordAudio:enableAudioClips:cloudkitMetadataRequired:]
  -[HMAccessoryDiagnosticsOptions metadataRequired]


HMCameraSignificantEventReasonNotificationCondition : NSObject <HMFObject, NSCopying>
 @property  unsigned long significantEventTypes
 @property  NSPredicate *predicate
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraSignificantEventReasonNotificationCondition shortDescription]

  // instance methods
  -[HMCameraSignificantEventReasonNotificationCondition initWithPredicate:]
  -[HMCameraSignificantEventReasonNotificationCondition privateDescription]
  -[HMCameraSignificantEventReasonNotificationCondition predicate]
  -[HMCameraSignificantEventReasonNotificationCondition attributeDescriptions]
  -[HMCameraSignificantEventReasonNotificationCondition isEqual:]
  -[HMCameraSignificantEventReasonNotificationCondition shortDescription]
  -[HMCameraSignificantEventReasonNotificationCondition copyWithZone:]
  -[HMCameraSignificantEventReasonNotificationCondition significantEventTypes]
  -[HMCameraSignificantEventReasonNotificationCondition initWithSignificantEventTypes:]


HMSoftwareUpdate : NSObject <HMFMessageReceiver, HMFLogging, HMObjectMerge, NSSecureCoding>
 @property  _HMContext *context
 @property  HMAccessory *accessory
 @property  unsigned long needsAttentionReasons
 @property  NSUUID *identifier
 @property  HMSoftwareUpdateDocumentationMetadata *documentationMetadata
 @property  unsigned long updateType
 @property  <HMSoftwareUpdateDelegate> *delegate
 @property  NSUUID *uniqueIdentifier
 @property  HMFSoftwareVersion *version
 @property  long long state
 @property  unsigned long downloadSize
 @property  double installDuration
 @property  BOOL documentationAvailable
 @property  HMSoftwareUpdateDocumentation *documentation
 @property  NSDate *releaseDate
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSoftwareUpdate supportsSecureCoding]
  +[HMSoftwareUpdate logCategory]

  // instance methods
  -[HMSoftwareUpdate releaseDate]
  -[HMSoftwareUpdate accessory]
  -[HMSoftwareUpdate setAccessory:]
  -[HMSoftwareUpdate uniqueIdentifier]
  -[HMSoftwareUpdate initWithCoder:]
  -[HMSoftwareUpdate .cxx_destruct]
  -[HMSoftwareUpdate _unconfigure]
  -[HMSoftwareUpdate setDelegate:]
  -[HMSoftwareUpdate setState:]
  -[HMSoftwareUpdate updateType]
  -[HMSoftwareUpdate init]
  -[HMSoftwareUpdate isEqual:]
  -[HMSoftwareUpdate configureWithContext:]
  -[HMSoftwareUpdate documentation]
  -[HMSoftwareUpdate identifier]
  -[HMSoftwareUpdate downloadSize]
  -[HMSoftwareUpdate state]
  -[HMSoftwareUpdate messageReceiveQueue]
  -[HMSoftwareUpdate delegate]
  -[HMSoftwareUpdate setIdentifier:]
  -[HMSoftwareUpdate version]
  -[HMSoftwareUpdate setContext:]
  -[HMSoftwareUpdate messageTargetUUID]
  -[HMSoftwareUpdate logIdentifier]
  -[HMSoftwareUpdate setUpdateType:]
  -[HMSoftwareUpdate messageDestination]
  -[HMSoftwareUpdate encodeWithCoder:]
  -[HMSoftwareUpdate context]
  -[HMSoftwareUpdate _mergeWithNewObject:]
  -[HMSoftwareUpdate _unconfigureContext]
  -[HMSoftwareUpdate _registerNotificationHandlers]
  -[HMSoftwareUpdate initWithVersion:downloadSize:state:installDuration:documentationMetadata:releaseDate:]
  -[HMSoftwareUpdate documentationMetadata]
  -[HMSoftwareUpdate _requestNeedsAttentionReasonsWithCompletionHandler:]
  -[HMSoftwareUpdate _handleUpdatedState:]
  -[HMSoftwareUpdate _handleUpdatedDocumentationMetadata:]
  -[HMSoftwareUpdate _handleUpdatedDocumentation:]
  -[HMSoftwareUpdate _handleUpdatedNeedsAttentionReasonsMessage:]
  -[HMSoftwareUpdate isDocumentationAvailable]
  -[HMSoftwareUpdate setDocumentationMetadata:]
  -[HMSoftwareUpdate requestDocumentation]
  -[HMSoftwareUpdate setDocumentation:]
  -[HMSoftwareUpdate needsAttentionReasons]
  -[HMSoftwareUpdate setNeedsAttentionReasons:]
  -[HMSoftwareUpdate installDuration]
  -[HMSoftwareUpdate initWithVersion:downloadSize:]
  -[HMSoftwareUpdate initWithVersion:downloadSize:state:]
  -[HMSoftwareUpdate initWithVersion:downloadSize:state:documentationMetadata:]
  -[HMSoftwareUpdate initWithVersion:downloadSize:state:installDuration:documentationMetadata:]
  -[HMSoftwareUpdate updateState:completionHandler:]
  -[HMSoftwareUpdate updateDocumentationMetadata:completionHandler:]
  -[HMSoftwareUpdate fetchNeedsAttentionReasonsWithCompletionHandler:]


HMCoreAnalyticsTimedMetricEvent : HMCoreAnalyticsMetricEvent
 @property  NSDate *startedDate
 @property  NSDate *finishedDate
 @property  NSNumber *duration

  // instance methods
  -[HMCoreAnalyticsTimedMetricEvent .cxx_destruct]
  -[HMCoreAnalyticsTimedMetricEvent eventPayload]
  -[HMCoreAnalyticsTimedMetricEvent finish]
  -[HMCoreAnalyticsTimedMetricEvent startedDate]
  -[HMCoreAnalyticsTimedMetricEvent start]
  -[HMCoreAnalyticsTimedMetricEvent finishedDate]
  -[HMCoreAnalyticsTimedMetricEvent setStartedDate:]
  -[HMCoreAnalyticsTimedMetricEvent setFinishedDate:]
  -[HMCoreAnalyticsTimedMetricEvent duration]
  -[HMCoreAnalyticsTimedMetricEvent durationData]


HMUserActionPredictionTransformer : NSObject <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMUserActionPredictionTransformer logCategory]

  // instance methods
  -[HMUserActionPredictionTransformer predictionForDuetScenePrediction:home:]
  -[HMUserActionPredictionTransformer predictionForDuetAccessoryPrediction:home:]
  -[HMUserActionPredictionTransformer predictionWithSameTargetGroupAsPrediction:inPredictions:]
  -[HMUserActionPredictionTransformer matchingAccessoryForDuetAccessoryPrediction:home:]
  -[HMUserActionPredictionTransformer matchingServiceForDuetAccessoryPrediction:onAccessory:home:]
  -[HMUserActionPredictionTransformer isValidPredictionForAccessory:targetServiceIdentifier:]
  -[HMUserActionPredictionTransformer predictionsWithDuetPredictions:forHome:]


HMPBCharacteristicReference : PBCodable <NSCopying>
 @property  BOOL hasServiceReference
 @property  HMPBServiceReference *serviceReference
 @property  BOOL hasUniqueIdentifier
 @property  NSData *uniqueIdentifier

  // class methods
  +[HMPBCharacteristicReference characteristicReferenceWithCharacteristic:]
  +[HMPBCharacteristicReference characteristicReferenceWithData:]

  // instance methods
  -[HMPBCharacteristicReference hasUniqueIdentifier]
  -[HMPBCharacteristicReference setUniqueIdentifier:]
  -[HMPBCharacteristicReference mergeFrom:]
  -[HMPBCharacteristicReference uniqueIdentifier]
  -[HMPBCharacteristicReference .cxx_destruct]
  -[HMPBCharacteristicReference dictionaryRepresentation]
  -[HMPBCharacteristicReference writeTo:]
  -[HMPBCharacteristicReference isEqual:]
  -[HMPBCharacteristicReference copyTo:]
  -[HMPBCharacteristicReference readFrom:]
  -[HMPBCharacteristicReference copyWithZone:]
  -[HMPBCharacteristicReference setServiceReference:]
  -[HMPBCharacteristicReference hasServiceReference]
  -[HMPBCharacteristicReference serviceReference]


HMAccessorySettingsFetchRequestMessagePayload : NSObject <HMFLogging, HMFObject, HMMessageEncoding>
 @property  NSUUID *accessoryUUID
 @property  NSArray *keyPaths
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMAccessorySettingsFetchRequestMessagePayload logCategory]
  +[HMAccessorySettingsFetchRequestMessagePayload shortDescription]

  // instance methods
  -[HMAccessorySettingsFetchRequestMessagePayload keyPaths]
  -[HMAccessorySettingsFetchRequestMessagePayload accessoryUUID]
  -[HMAccessorySettingsFetchRequestMessagePayload privateDescription]
  -[HMAccessorySettingsFetchRequestMessagePayload .cxx_destruct]
  -[HMAccessorySettingsFetchRequestMessagePayload attributeDescriptions]
  -[HMAccessorySettingsFetchRequestMessagePayload isEqual:]
  -[HMAccessorySettingsFetchRequestMessagePayload shortDescription]
  -[HMAccessorySettingsFetchRequestMessagePayload initWithPayload:]
  -[HMAccessorySettingsFetchRequestMessagePayload payloadCopy]
  -[HMAccessorySettingsFetchRequestMessagePayload initWithAccessoryUUID:keyPaths:]


HMMediaPlaybackAction : HMAction <NSSecureCoding, HMObjectMerge, NSCopying, NSMutableCopying>
 @property  NSSet *mediaProfiles
 @property  long long state
 @property  NSNumber *volume
 @property  MPPlaybackArchive *playbackArchive
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMMediaPlaybackAction supportsSecureCoding]
  +[HMMediaPlaybackAction isSupportedForHome:]
  +[HMMediaPlaybackAction mediaPlaybackActionWithProtoBuf:home:]
  +[HMMediaPlaybackAction _actionWithInfo:home:]

  // instance methods
  -[HMMediaPlaybackAction volume]
  -[HMMediaPlaybackAction initWithCoder:]
  -[HMMediaPlaybackAction setVolume:]
  -[HMMediaPlaybackAction isValid]
  -[HMMediaPlaybackAction .cxx_destruct]
  -[HMMediaPlaybackAction initWithUUID:]
  -[HMMediaPlaybackAction setState:]
  -[HMMediaPlaybackAction init]
  -[HMMediaPlaybackAction isEqual:]
  -[HMMediaPlaybackAction state]
  -[HMMediaPlaybackAction playbackArchive]
  -[HMMediaPlaybackAction type]
  -[HMMediaPlaybackAction mutableCopyWithZone:]
  -[HMMediaPlaybackAction copyWithZone:]
  -[HMMediaPlaybackAction _handleUpdates:]
  -[HMMediaPlaybackAction encodeWithCoder:]
  -[HMMediaPlaybackAction _serializeForAdd]
  -[HMMediaPlaybackAction _mergeWithNewObject:]
  -[HMMediaPlaybackAction encodeAsProtoBuf]
  -[HMMediaPlaybackAction accessoryProfiles]
  -[HMMediaPlaybackAction initWithMediaProfiles:playbackState:volume:playbackArchive:uuid:]
  -[HMMediaPlaybackAction mediaProfiles]
  -[HMMediaPlaybackAction __configureWithContext:actionSet:]
  -[HMMediaPlaybackAction setMediaProfiles:]
  -[HMMediaPlaybackAction setPlaybackArchive:]
  -[HMMediaPlaybackAction initWithPlaybackAction:uuid:]
  -[HMMediaPlaybackAction _updateWithAction:completionHandler:]
  -[HMMediaPlaybackAction _updateWithSerializedAction:home:]
  -[HMMediaPlaybackAction initWithMediaProfiles:playbackState:volume:playbackArchive:]
  -[HMMediaPlaybackAction updateWithAction:completionHandler:]


HMMutableMediaPlaybackAction : HMMediaPlaybackAction <NSCopying>
 @property  NSSet *mediaProfiles
 @property  long long state
 @property  NSNumber *volume
 @property  MPPlaybackArchive *playbackArchive

  // instance methods
  -[HMMutableMediaPlaybackAction setVolume:]
  -[HMMutableMediaPlaybackAction setState:]
  -[HMMutableMediaPlaybackAction copyWithZone:]
  -[HMMutableMediaPlaybackAction setMediaProfiles:]
  -[HMMutableMediaPlaybackAction setPlaybackArchive:]


HMAccessorySettingsMessageDispatcherFinishSendingMessageEvent : HMCoreAnalyticsTimedMetricEvent
 @property  NSString *messageName

  // instance methods
  -[HMAccessorySettingsMessageDispatcherFinishSendingMessageEvent .cxx_destruct]
  -[HMAccessorySettingsMessageDispatcherFinishSendingMessageEvent eventPayload]
  -[HMAccessorySettingsMessageDispatcherFinishSendingMessageEvent messageName]
  -[HMAccessorySettingsMessageDispatcherFinishSendingMessageEvent initWithMessageName:]


HMCoreAnalyticsMetricEvent : HMFObject
 @property  NSString *name
 @property  NSError *error

  // instance methods
  -[HMCoreAnalyticsMetricEvent name]
  -[HMCoreAnalyticsMetricEvent .cxx_destruct]
  -[HMCoreAnalyticsMetricEvent initWithName:]
  -[HMCoreAnalyticsMetricEvent eventPayload]
  -[HMCoreAnalyticsMetricEvent setError:]
  -[HMCoreAnalyticsMetricEvent error]


_HMCameraAudioControl : _HMCameraControl
 @property  HMCharacteristic *mute
 @property  HMCharacteristic *volume

  // instance methods
  -[_HMCameraAudioControl mute]
  -[_HMCameraAudioControl volume]
  -[_HMCameraAudioControl .cxx_destruct]
  -[_HMCameraAudioControl initWithCameraProfile:profileUniqueIdentifier:service:]


HMAccessCodeConstraints : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  unsigned long allowedCharacterSets
 @property  long long minimumLength
 @property  long long maximumLength
 @property  long long maximumAllowedAccessCodes
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessCodeConstraints supportsSecureCoding]
  +[HMAccessCodeConstraints shortDescription]

  // instance methods
  -[HMAccessCodeConstraints privateDescription]
  -[HMAccessCodeConstraints initWithCoder:]
  -[HMAccessCodeConstraints maximumLength]
  -[HMAccessCodeConstraints attributeDescriptions]
  -[HMAccessCodeConstraints isEqual:]
  -[HMAccessCodeConstraints shortDescription]
  -[HMAccessCodeConstraints copyWithZone:]
  -[HMAccessCodeConstraints encodeWithCoder:]
  -[HMAccessCodeConstraints minimumLength]
  -[HMAccessCodeConstraints initWithAllowedCharacterSets:minimumLength:maximumLength:maximumAllowedAccessCodes:]
  -[HMAccessCodeConstraints allowedCharacterSets]
  -[HMAccessCodeConstraints maximumAllowedAccessCodes]


HMMediaSystem : NSObject <HMFLogging, HMFMessageReceiver, HMControllable, HMMediaDestinationInternal, HMAccessorySettingsContainerInternal, HMObjectMerge, NSSecureCoding, HMAccessorySettingsContainer, HMApplicationData, HMMediaDestination, HMMediaObject>
 @property  _HMContext *context
 @property  HMHome *home
 @property  HMAccessorySettingsDataSource *accessorySettingsDataSource
 @property  NSUUID *uuid
 @property  HMMutableArray *componentsArray
 @property  HMApplicationData *applicationData
 @property  HMMediaDestination *audioDestination
 @property  <HMMediaSystemDelegate> *delegate
 @property  NSString *name
 @property  NSString *configuredName
 @property  NSUUID *uniqueIdentifier
 @property  BOOL compatible
 @property  NSArray *components
 @property  HMAccessoryCategory *category
 @property  HMSymptomsHandler *symptomsHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  BOOL controllable
 @property  NSArray *audioDestinationMediaProfiles
 @property  NSString *audioDestinationParentIdentifier
 @property  NSUUID *audioDestinationGroupIdentifier
 @property  NSString *audioDestinationIdentifier
 @property  NSString *audioDestinationName
 @property  long long audioDestinationType
 @property  BOOL supportsAudioDestination
 @property  BOOL supportsAudioGroup
 @property  NSUUID *containerUUID
 @property  HMHome *containerHome
 @property  HMMediaSession *mediaSession
 @property  HMAccessorySettings *settings

  // class methods
  +[HMMediaSystem supportsSecureCoding]
  +[HMMediaSystem mediaSystemWithDictionary:home:]
  +[HMMediaSystem logCategory]

  // instance methods
  -[HMMediaSystem home]
  -[HMMediaSystem name]
  -[HMMediaSystem uniqueIdentifier]
  -[HMMediaSystem initWithCoder:]
  -[HMMediaSystem accessorySettingsDataSource]
  -[HMMediaSystem .cxx_destruct]
  -[HMMediaSystem _unconfigure]
  -[HMMediaSystem setName:]
  -[HMMediaSystem setDelegate:]
  -[HMMediaSystem setSettings:]
  -[HMMediaSystem isEqual:]
  -[HMMediaSystem setHome:]
  -[HMMediaSystem components]
  -[HMMediaSystem isControllable]
  -[HMMediaSystem isCompatible]
  -[HMMediaSystem messageReceiveQueue]
  -[HMMediaSystem uuid]
  -[HMMediaSystem delegate]
  -[HMMediaSystem setContext:]
  -[HMMediaSystem messageTargetUUID]
  -[HMMediaSystem category]
  -[HMMediaSystem supportsAudioDestination]
  -[HMMediaSystem audioDestinationIdentifier]
  -[HMMediaSystem logIdentifier]
  -[HMMediaSystem configuredName]
  -[HMMediaSystem applicationData]
  -[HMMediaSystem setApplicationData:]
  -[HMMediaSystem updateApplicationData:completionHandler:]
  -[HMMediaSystem encodeWithCoder:]
  -[HMMediaSystem settings]
  -[HMMediaSystem context]
  -[HMMediaSystem _mergeWithNewObject:]
  -[HMMediaSystem _unconfigureContext]
  -[HMMediaSystem audioDestinationName]
  -[HMMediaSystem audioDestinationType]
  -[HMMediaSystem supportsAudioGroup]
  -[HMMediaSystem updateAudioDestinationSupportedOptions:completion:]
  -[HMMediaSystem audioDestinationMediaProfiles]
  -[HMMediaSystem audioDestinationParentIdentifier]
  -[HMMediaSystem audioDestinationGroupIdentifier]
  -[HMMediaSystem __configureWithContext:home:]
  -[HMMediaSystem _registerNotificationHandlers]
  -[HMMediaSystem callCompletionHandler:error:]
  -[HMMediaSystem callCompletionHandler:]
  -[HMMediaSystem mediaSession]
  -[HMMediaSystem setConfiguredName:]
  -[HMMediaSystem initWithHome:uuid:name:configuredName:compatible:components:settings:symptomHandler:]
  -[HMMediaSystem symptomsHandler]
  -[HMMediaSystem componentsArray]
  -[HMMediaSystem audioDestination]
  -[HMMediaSystem _handleRootSettingsUpdated:]
  -[HMMediaSystem _handleSystemUpdatedNotification:]
  -[HMMediaSystem _updateApplicationData:completionHandler:]
  -[HMMediaSystem notifyDelegateOfUpdatedSettings:]
  -[HMMediaSystem _mergeWithNewObject:includeSettingsAndAppData:]
  -[HMMediaSystem notifyDelegateOfUpdatedComponents:]
  -[HMMediaSystem notifyDelegateOfUpdatedName:]
  -[HMMediaSystem notifyDelegateOfUpdatedConfiguredName:]
  -[HMMediaSystem notifyDelegateOfUpdatedApplicationData:]
  -[HMMediaSystem setAudioDestination:]
  -[HMMediaSystem notifyDelegateOfUpdatedAudioDestination]
  -[HMMediaSystem notifyDelegateOfUpdatedMediaSession:]
  -[HMMediaSystem containerHome]
  -[HMMediaSystem containerUUID]
  -[HMMediaSystem _updateAccessoryReference]
  -[HMMediaSystem updateMediaSession:forMediaProfile:]
  -[HMMediaSystem setAccessorySettingsDataSource:]
  -[HMMediaSystem setComponentsArray:]


HMCHIPEcosystem : NSObject <HMFObject, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSUUID *UUID
 @property  NSData *rootPublicKey
 @property  HMCHIPVendor *vendor
 @property  NSNumber *identifier
 @property  NSString *name
 @property  BOOL appleEcosystem
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCHIPEcosystem supportsSecureCoding]
  +[HMCHIPEcosystem shortDescription]

  // instance methods
  -[HMCHIPEcosystem vendor]
  -[HMCHIPEcosystem UUID]
  -[HMCHIPEcosystem name]
  -[HMCHIPEcosystem privateDescription]
  -[HMCHIPEcosystem initWithCoder:]
  -[HMCHIPEcosystem .cxx_destruct]
  -[HMCHIPEcosystem attributeDescriptions]
  -[HMCHIPEcosystem isEqual:]
  -[HMCHIPEcosystem identifier]
  -[HMCHIPEcosystem mutableCopyWithZone:]
  -[HMCHIPEcosystem shortDescription]
  -[HMCHIPEcosystem initWithIdentifier:name:]
  -[HMCHIPEcosystem copyWithZone:]
  -[HMCHIPEcosystem encodeWithCoder:]
  -[HMCHIPEcosystem initWithRootPublicKey:vendor:]
  -[HMCHIPEcosystem rootPublicKey]
  -[HMCHIPEcosystem isAppleEcosystem]


HMMutableCHIPEcosystem : HMCHIPEcosystem
 @property  HMCHIPVendor *vendor

  // instance methods
  -[HMMutableCHIPEcosystem copyWithZone:]


HMPBMediaPlaybackAction : PBCodable <NSCopying>
 @property  BOOL hasActionUUID
 @property  NSData *actionUUID
 @property  NSMutableArray *mediaProfiles
 @property  BOOL hasMediaPlaybackState
 @property  int mediaPlaybackState
 @property  BOOL hasVolume
 @property  NSData *volume
 @property  BOOL hasPlaybackArchive
 @property  NSData *playbackArchive

  // class methods
  +[HMPBMediaPlaybackAction mediaProfilesType]

  // instance methods
  -[HMPBMediaPlaybackAction mergeFrom:]
  -[HMPBMediaPlaybackAction volume]
  -[HMPBMediaPlaybackAction setVolume:]
  -[HMPBMediaPlaybackAction .cxx_destruct]
  -[HMPBMediaPlaybackAction dictionaryRepresentation]
  -[HMPBMediaPlaybackAction writeTo:]
  -[HMPBMediaPlaybackAction isEqual:]
  -[HMPBMediaPlaybackAction copyTo:]
  -[HMPBMediaPlaybackAction readFrom:]
  -[HMPBMediaPlaybackAction playbackArchive]
  -[HMPBMediaPlaybackAction hasVolume]
  -[HMPBMediaPlaybackAction actionUUID]
  -[HMPBMediaPlaybackAction copyWithZone:]
  -[HMPBMediaPlaybackAction mediaProfiles]
  -[HMPBMediaPlaybackAction setMediaProfiles:]
  -[HMPBMediaPlaybackAction mediaPlaybackState]
  -[HMPBMediaPlaybackAction hasPlaybackArchive]
  -[HMPBMediaPlaybackAction setActionUUID:]
  -[HMPBMediaPlaybackAction setMediaPlaybackState:]
  -[HMPBMediaPlaybackAction setPlaybackArchive:]
  -[HMPBMediaPlaybackAction addMediaProfiles:]
  -[HMPBMediaPlaybackAction mediaProfilesCount]
  -[HMPBMediaPlaybackAction clearMediaProfiles]
  -[HMPBMediaPlaybackAction mediaProfilesAtIndex:]
  -[HMPBMediaPlaybackAction hasActionUUID]
  -[HMPBMediaPlaybackAction setHasMediaPlaybackState:]
  -[HMPBMediaPlaybackAction hasMediaPlaybackState]


HMSoftwareUpdateManager : NSObject <HMFMessageReceiver>
 @property  _HMContext *context
 @property  NSUUID *identifier
 @property  BOOL started
 @property  <HMSoftwareUpdateManagerDelegate> *delegate
 @property  HMSoftwareUpdate *availableUpdate
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSoftwareUpdateManager logCategory]

  // instance methods
  -[HMSoftwareUpdateManager setStarted:]
  -[HMSoftwareUpdateManager .cxx_destruct]
  -[HMSoftwareUpdateManager isStarted]
  -[HMSoftwareUpdateManager _unconfigure]
  -[HMSoftwareUpdateManager stop]
  -[HMSoftwareUpdateManager setDelegate:]
  -[HMSoftwareUpdateManager init]
  -[HMSoftwareUpdateManager identifier]
  -[HMSoftwareUpdateManager initWithContext:]
  -[HMSoftwareUpdateManager messageReceiveQueue]
  -[HMSoftwareUpdateManager startWithCompletionHandler:]
  -[HMSoftwareUpdateManager delegate]
  -[HMSoftwareUpdateManager messageTargetUUID]
  -[HMSoftwareUpdateManager __registerForMessages]
  -[HMSoftwareUpdateManager messageDestination]
  -[HMSoftwareUpdateManager reconnect]
  -[HMSoftwareUpdateManager context]
  -[HMSoftwareUpdateManager _unconfigureContext]
  -[HMSoftwareUpdateManager availableUpdate]
  -[HMSoftwareUpdateManager setAvailableUpdate:]
  -[HMSoftwareUpdateManager _handleUpdatedAvailableUpdate:]
  -[HMSoftwareUpdateManager _handleFetch:]
  -[HMSoftwareUpdateManager _handleStartUpdate:]
  -[HMSoftwareUpdateManager _reallyStartWithCompletionHandler:]
  -[HMSoftwareUpdateManager updateAvailableUpdate:completionHandler:]


HMCameraClipEncryptionContext : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *key
 @property  unsigned long scheme

  // class methods
  +[HMCameraClipEncryptionContext supportsSecureCoding]

  // instance methods
  -[HMCameraClipEncryptionContext initWithCoder:]
  -[HMCameraClipEncryptionContext .cxx_destruct]
  -[HMCameraClipEncryptionContext isEqual:]
  -[HMCameraClipEncryptionContext scheme]
  -[HMCameraClipEncryptionContext key]
  -[HMCameraClipEncryptionContext copyWithZone:]
  -[HMCameraClipEncryptionContext encodeWithCoder:]
  -[HMCameraClipEncryptionContext initWithKey:scheme:]


HMSiriEndpointDeleteSiriHistoryMessagePayload : NSObject <HMFObject, HMMessageEncoding>
 @property  NSUUID *accessoryUUID
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSiriEndpointDeleteSiriHistoryMessagePayload messageName]
  +[HMSiriEndpointDeleteSiriHistoryMessagePayload logCategory]
  +[HMSiriEndpointDeleteSiriHistoryMessagePayload shortDescription]

  // instance methods
  -[HMSiriEndpointDeleteSiriHistoryMessagePayload accessoryUUID]
  -[HMSiriEndpointDeleteSiriHistoryMessagePayload privateDescription]
  -[HMSiriEndpointDeleteSiriHistoryMessagePayload .cxx_destruct]
  -[HMSiriEndpointDeleteSiriHistoryMessagePayload attributeDescriptions]
  -[HMSiriEndpointDeleteSiriHistoryMessagePayload isEqual:]
  -[HMSiriEndpointDeleteSiriHistoryMessagePayload shortDescription]
  -[HMSiriEndpointDeleteSiriHistoryMessagePayload initWithPayload:]
  -[HMSiriEndpointDeleteSiriHistoryMessagePayload payloadCopy]
  -[HMSiriEndpointDeleteSiriHistoryMessagePayload initWithAccessoryUUID:]


HMPBServiceReference : PBCodable <NSCopying>
 @property  BOOL hasAccessoryReference
 @property  HMPBAccessoryReference *accessoryReference
 @property  BOOL hasUniqueIdentifier
 @property  NSData *uniqueIdentifier

  // class methods
  +[HMPBServiceReference serviceReferenceWithService:]
  +[HMPBServiceReference serviceReferenceWithData:]

  // instance methods
  -[HMPBServiceReference hasUniqueIdentifier]
  -[HMPBServiceReference setUniqueIdentifier:]
  -[HMPBServiceReference mergeFrom:]
  -[HMPBServiceReference uniqueIdentifier]
  -[HMPBServiceReference .cxx_destruct]
  -[HMPBServiceReference dictionaryRepresentation]
  -[HMPBServiceReference writeTo:]
  -[HMPBServiceReference isEqual:]
  -[HMPBServiceReference copyTo:]
  -[HMPBServiceReference readFrom:]
  -[HMPBServiceReference copyWithZone:]
  -[HMPBServiceReference hasAccessoryReference]
  -[HMPBServiceReference accessoryReference]
  -[HMPBServiceReference setAccessoryReference:]


HMAccessorySettingFetchResult : NSObject <HMFObject>
 @property  long long failureType
 @property  NSString *keyPath
 @property  HMImmutableSetting *setting
 @property  NSError *error
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessorySettingFetchResult shortDescription]
  +[HMAccessorySettingFetchResult fetchResultsWithKeyPaths:failureType:]

  // instance methods
  -[HMAccessorySettingFetchResult privateDescription]
  -[HMAccessorySettingFetchResult .cxx_destruct]
  -[HMAccessorySettingFetchResult setting]
  -[HMAccessorySettingFetchResult attributeDescriptions]
  -[HMAccessorySettingFetchResult failureType]
  -[HMAccessorySettingFetchResult keyPath]
  -[HMAccessorySettingFetchResult shortDescription]
  -[HMAccessorySettingFetchResult error]
  -[HMAccessorySettingFetchResult initWithSetting:]
  -[HMAccessorySettingFetchResult initWithKeyPath:failureType:]
  -[HMAccessorySettingFetchResult initWithKeyPath:setting:failureType:]


HMMediaGroupProtoMediaDestinationAggregateData : PBCodable <NSCopying>
 @property  NSMutableArray *destinations
 @property  NSMutableArray *destinationControllerDatas
 @property  NSMutableArray *groups

  // class methods
  +[HMMediaGroupProtoMediaDestinationAggregateData destinationType]
  +[HMMediaGroupProtoMediaDestinationAggregateData groupType]
  +[HMMediaGroupProtoMediaDestinationAggregateData destinationControllerDataType]

  // instance methods
  -[HMMediaGroupProtoMediaDestinationAggregateData mergeFrom:]
  -[HMMediaGroupProtoMediaDestinationAggregateData setGroups:]
  -[HMMediaGroupProtoMediaDestinationAggregateData setDestinations:]
  -[HMMediaGroupProtoMediaDestinationAggregateData .cxx_destruct]
  -[HMMediaGroupProtoMediaDestinationAggregateData groupsCount]
  -[HMMediaGroupProtoMediaDestinationAggregateData clearGroups]
  -[HMMediaGroupProtoMediaDestinationAggregateData dictionaryRepresentation]
  -[HMMediaGroupProtoMediaDestinationAggregateData writeTo:]
  -[HMMediaGroupProtoMediaDestinationAggregateData addGroup:]
  -[HMMediaGroupProtoMediaDestinationAggregateData destinations]
  -[HMMediaGroupProtoMediaDestinationAggregateData isEqual:]
  -[HMMediaGroupProtoMediaDestinationAggregateData copyTo:]
  -[HMMediaGroupProtoMediaDestinationAggregateData readFrom:]
  -[HMMediaGroupProtoMediaDestinationAggregateData addDestination:]
  -[HMMediaGroupProtoMediaDestinationAggregateData groupAtIndex:]
  -[HMMediaGroupProtoMediaDestinationAggregateData copyWithZone:]
  -[HMMediaGroupProtoMediaDestinationAggregateData destinationsCount]
  -[HMMediaGroupProtoMediaDestinationAggregateData clearDestinations]
  -[HMMediaGroupProtoMediaDestinationAggregateData destinationAtIndex:]
  -[HMMediaGroupProtoMediaDestinationAggregateData groups]
  -[HMMediaGroupProtoMediaDestinationAggregateData addDestinationControllerData:]
  -[HMMediaGroupProtoMediaDestinationAggregateData destinationControllerDatasCount]
  -[HMMediaGroupProtoMediaDestinationAggregateData clearDestinationControllerDatas]
  -[HMMediaGroupProtoMediaDestinationAggregateData destinationControllerDataAtIndex:]
  -[HMMediaGroupProtoMediaDestinationAggregateData destinationControllerDatas]
  -[HMMediaGroupProtoMediaDestinationAggregateData setDestinationControllerDatas:]


HMCharacteristicWriteAction : HMAction <NSSecureCoding, HMObjectMerge>
 @property  HMCharacteristic *characteristic
 @property  id targetValue
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCharacteristicWriteAction supportsSecureCoding]
  +[HMCharacteristicWriteAction _actionWithInfo:home:]
  +[HMCharacteristicWriteAction allowedTargetValueClassesForShortcuts]

  // instance methods
  -[HMCharacteristicWriteAction initWithCoder:]
  -[HMCharacteristicWriteAction isValid]
  -[HMCharacteristicWriteAction targetValue]
  -[HMCharacteristicWriteAction .cxx_destruct]
  -[HMCharacteristicWriteAction initWithUUID:]
  -[HMCharacteristicWriteAction isEqual:]
  -[HMCharacteristicWriteAction setTargetValue:]
  -[HMCharacteristicWriteAction type]
  -[HMCharacteristicWriteAction _handleUpdates:]
  -[HMCharacteristicWriteAction encodeWithCoder:]
  -[HMCharacteristicWriteAction _serializeForAdd]
  -[HMCharacteristicWriteAction _mergeWithNewObject:]
  -[HMCharacteristicWriteAction requiresDeviceUnlock]
  -[HMCharacteristicWriteAction encodeAsProtoBuf]
  -[HMCharacteristicWriteAction characteristic]
  -[HMCharacteristicWriteAction setCharacteristic:]
  -[HMCharacteristicWriteAction __configureWithContext:actionSet:]
  -[HMCharacteristicWriteAction initWithCharacteristic:targetValue:]
  -[HMCharacteristicWriteAction commonInitWith:targetValue:]
  -[HMCharacteristicWriteAction _updateTargetValue:completionHandler:]
  -[HMCharacteristicWriteAction initWithCharacteristic:targetValue:uuid:]
  -[HMCharacteristicWriteAction isKindOfAllowedTargetValueClass:]
  -[HMCharacteristicWriteAction updateTargetValue:completionHandler:]
  -[HMCharacteristicWriteAction initWithProtoBuf:home:]


HMCameraClipVideoDataSegment : HMCameraClipVideoSegment
 @property  double duration
 @property  double timeOffset

  // class methods
  +[HMCameraClipVideoDataSegment supportsSecureCoding]

  // instance methods
  -[HMCameraClipVideoDataSegment initWithCoder:]
  -[HMCameraClipVideoDataSegment timeOffset]
  -[HMCameraClipVideoDataSegment attributeDescriptions]
  -[HMCameraClipVideoDataSegment isEqual:]
  -[HMCameraClipVideoDataSegment copyWithZone:]
  -[HMCameraClipVideoDataSegment duration]
  -[HMCameraClipVideoDataSegment encodeWithCoder:]
  -[HMCameraClipVideoDataSegment initWithByteLength:byteOffset:duration:timeOffset:]


HMCHIPAccessoryPairing : NSObject <HMFObject, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSUUID *UUID
 @property  NSNumber *identifier
 @property  HMCHIPHome *home
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCHIPAccessoryPairing supportsSecureCoding]
  +[HMCHIPAccessoryPairing shortDescription]

  // instance methods
  -[HMCHIPAccessoryPairing home]
  -[HMCHIPAccessoryPairing UUID]
  -[HMCHIPAccessoryPairing privateDescription]
  -[HMCHIPAccessoryPairing initWithCoder:]
  -[HMCHIPAccessoryPairing .cxx_destruct]
  -[HMCHIPAccessoryPairing attributeDescriptions]
  -[HMCHIPAccessoryPairing isEqual:]
  -[HMCHIPAccessoryPairing identifier]
  -[HMCHIPAccessoryPairing mutableCopyWithZone:]
  -[HMCHIPAccessoryPairing shortDescription]
  -[HMCHIPAccessoryPairing copyWithZone:]
  -[HMCHIPAccessoryPairing encodeWithCoder:]
  -[HMCHIPAccessoryPairing initWithIdentifier:home:]


HMMutableCHIPAccessoryPairing : HMCHIPAccessoryPairing
 @property  HMCHIPHome *home

  // instance methods
  -[HMMutableCHIPAccessoryPairing copyWithZone:]


HMCoreAnalyticsMetricEventDispatcher : HMFObject
  // instance methods
  -[HMCoreAnalyticsMetricEventDispatcher sendEvent:]
  -[HMCoreAnalyticsMetricEventDispatcher .cxx_destruct]
  -[HMCoreAnalyticsMetricEventDispatcher init]
  -[HMCoreAnalyticsMetricEventDispatcher initWithSendEventHandler:]


HMHomeInvitation : NSObject <HMObjectMerge, NSSecureCoding>
 @property  _HMContext *context
 @property  HMHomeInvitationData *invitationData
 @property  HMHome *home
 @property  NSUUID *identifier
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  long long invitationState
 @property  NSURL *homeObjectURL
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMHomeInvitation supportsSecureCoding]

  // instance methods
  -[HMHomeInvitation home]
  -[HMHomeInvitation uniqueIdentifier]
  -[HMHomeInvitation initWithCoder:]
  -[HMHomeInvitation .cxx_destruct]
  -[HMHomeInvitation isEqual:]
  -[HMHomeInvitation setHome:]
  -[HMHomeInvitation identifier]
  -[HMHomeInvitation startDate]
  -[HMHomeInvitation setContext:]
  -[HMHomeInvitation endDate]
  -[HMHomeInvitation invitationState]
  -[HMHomeInvitation encodeWithCoder:]
  -[HMHomeInvitation context]
  -[HMHomeInvitation _mergeWithNewObject:]
  -[HMHomeInvitation invitationData]
  -[HMHomeInvitation initWithInvitationData:home:]
  -[HMHomeInvitation homeObjectURL]
  -[HMHomeInvitation cancelInviteWithCompletionHandler:]
  -[HMHomeInvitation _updateInvitationState:]
  -[HMHomeInvitation initWithCoder:invitationData:]
  -[HMHomeInvitation setInvitationData:]


HMOutgoingHomeInvitation : HMHomeInvitation
 @property  NSDictionary *appleSharingDict
 @property  HMUser *invitee
 @property  NSArray *accessoryInvitations

  // class methods
  +[HMOutgoingHomeInvitation supportsSecureCoding]
  +[HMOutgoingHomeInvitation homeInvitationsFromEncodedData:home:]
  +[HMOutgoingHomeInvitation homeInvitationsFromData:home:]

  // instance methods
  -[HMOutgoingHomeInvitation initWithCoder:]
  -[HMOutgoingHomeInvitation .cxx_destruct]
  -[HMOutgoingHomeInvitation _unconfigure]
  -[HMOutgoingHomeInvitation invitee]
  -[HMOutgoingHomeInvitation encodeWithCoder:]
  -[HMOutgoingHomeInvitation _mergeWithNewObject:]
  -[HMOutgoingHomeInvitation _unconfigureContext]
  -[HMOutgoingHomeInvitation __configureWithContext:home:]
  -[HMOutgoingHomeInvitation initWithInvitationData:home:]
  -[HMOutgoingHomeInvitation cancelInviteWithCompletionHandler:]
  -[HMOutgoingHomeInvitation _cancelInviteWithCompletionHandler:]
  -[HMOutgoingHomeInvitation accessoryInvitations]
  -[HMOutgoingHomeInvitation _mergeWithNewAccessoryInvitations:]
  -[HMOutgoingHomeInvitation appleSharingDict]


HMIncomingHomeInvitation : HMHomeInvitation
 @property  HMHomeManager *homeManager
 @property  HMUser *inviter
 @property  NSString *homeName
 @property  NSUUID *homeUUID

  // class methods
  +[HMIncomingHomeInvitation supportsSecureCoding]
  +[HMIncomingHomeInvitation homeInvitationsFromEncodedData:homeManager:]
  +[HMIncomingHomeInvitation homeInvitationsFromData:homeManager:]

  // instance methods
  -[HMIncomingHomeInvitation homeManager]
  -[HMIncomingHomeInvitation initWithCoder:]
  -[HMIncomingHomeInvitation .cxx_destruct]
  -[HMIncomingHomeInvitation _unconfigure]
  -[HMIncomingHomeInvitation setHomeManager:]
  -[HMIncomingHomeInvitation homeName]
  -[HMIncomingHomeInvitation inviter]
  -[HMIncomingHomeInvitation homeUUID]
  -[HMIncomingHomeInvitation encodeWithCoder:]
  -[HMIncomingHomeInvitation _mergeWithNewObject:]
  -[HMIncomingHomeInvitation _unconfigureContext]
  -[HMIncomingHomeInvitation cancelInviteWithCompletionHandler:]
  -[HMIncomingHomeInvitation initWithInvitationData:homeManager:]
  -[HMIncomingHomeInvitation __configureWithContext:homeManager:]
  -[HMIncomingHomeInvitation ignoreInviteWithCompletionHandler:]
  -[HMIncomingHomeInvitation acceptInviteWithCompletionHandler:]
  -[HMIncomingHomeInvitation acceptInviteWithPresenceAuthStatus:completionHandler:]
  -[HMIncomingHomeInvitation reportJunkInviteWithCompletionHandler:]
  -[HMIncomingHomeInvitation isForPKSharingMessageInvitationWithAppleSharingDict:]


HMCameraClipDownloadAssetDataTask : NSObject
 @property  NSMutableURLRequest *urlRequest
 @property  <HMCameraClipDownloadAssetDataTaskHandling> *handler

  // instance methods
  -[HMCameraClipDownloadAssetDataTask urlRequest]
  -[HMCameraClipDownloadAssetDataTask .cxx_destruct]
  -[HMCameraClipDownloadAssetDataTask handler]
  -[HMCameraClipDownloadAssetDataTask initWithURL:httpHeaderFields:]
  -[HMCameraClipDownloadAssetDataTask initWithURL:httpHeaderFields:handler:]
  -[HMCameraClipDownloadAssetDataTask downloadDataForByteRange:]


HMCameraClipDownloadAssetDataTaskHandler : NSObject <HMCameraClipDownloadAssetDataTaskHandling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMCameraClipDownloadAssetDataTaskHandler resumeDataTaskWithRequest:completionHandler:]


HMAccessorySetupRequest : NSObject <HMFObject, NSSecureCoding, NSCopying>
 @property  HMAccessorySetupPayload *payload
 @property  NSUUID *homeUniqueIdentifier
 @property  NSUUID *suggestedRoomUniqueIdentifier
 @property  NSString *suggestedAccessoryName
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessorySetupRequest supportsSecureCoding]
  +[HMAccessorySetupRequest shortDescription]

  // instance methods
  -[HMAccessorySetupRequest setPayload:]
  -[HMAccessorySetupRequest privateDescription]
  -[HMAccessorySetupRequest initWithCoder:]
  -[HMAccessorySetupRequest payload]
  -[HMAccessorySetupRequest homeUniqueIdentifier]
  -[HMAccessorySetupRequest .cxx_destruct]
  -[HMAccessorySetupRequest attributeDescriptions]
  -[HMAccessorySetupRequest isEqual:]
  -[HMAccessorySetupRequest shortDescription]
  -[HMAccessorySetupRequest copyWithZone:]
  -[HMAccessorySetupRequest encodeWithCoder:]
  -[HMAccessorySetupRequest suggestedAccessoryName]
  -[HMAccessorySetupRequest setSuggestedAccessoryName:]
  -[HMAccessorySetupRequest suggestedRoomUniqueIdentifier]
  -[HMAccessorySetupRequest setHomeUniqueIdentifier:]
  -[HMAccessorySetupRequest setSuggestedRoomUniqueIdentifier:]


HMNetworkRouterFirewallRuleManager : NSObject
 @property  HMHomeManager *homeManager
 @property  HMFMessageDestination *messageDestination

  // instance methods
  -[HMNetworkRouterFirewallRuleManager initWithHomeManager:]
  -[HMNetworkRouterFirewallRuleManager homeManager]
  -[HMNetworkRouterFirewallRuleManager __sendMessage:]
  -[HMNetworkRouterFirewallRuleManager addOverrides:completion:]
  -[HMNetworkRouterFirewallRuleManager _dumpCloudRecordsForProductGroup:productNumber:rawOutput:listOnly:verifySignatures:completion:]
  -[HMNetworkRouterFirewallRuleManager .cxx_destruct]
  -[HMNetworkRouterFirewallRuleManager listCloudRecordsForProductGroup:rawOutput:completion:]
  -[HMNetworkRouterFirewallRuleManager dumpLocalRulesForProductGroup:ignoreOverrides:rawOutput:completion:]
  -[HMNetworkRouterFirewallRuleManager dumpAllLocalRulesIgnoringOverrides:rawOutput:completion:]
  -[HMNetworkRouterFirewallRuleManager fetchCloudChangesAndForceChangesFoundWithCompletion:]
  -[HMNetworkRouterFirewallRuleManager _fetchCloudChangesWithForceChangesFound:completion:]
  -[HMNetworkRouterFirewallRuleManager fetchCloudChangesWithCompletion:]
  -[HMNetworkRouterFirewallRuleManager removeOverridesForProductGroup:productNumber:completion:]
  -[HMNetworkRouterFirewallRuleManager dumpCloudRecordsForProductGroup:productNumber:rawOutput:verifySignatures:completion:]
  -[HMNetworkRouterFirewallRuleManager _addOverrides:replace:completion:]
  -[HMNetworkRouterFirewallRuleManager setOverrides:completion:]
  -[HMNetworkRouterFirewallRuleManager removeAllOverridesWithCompletion:]
  -[HMNetworkRouterFirewallRuleManager _dumpLocalRulesForProductGroup:productNumber:firmwareVersion:ignoreOverrides:rawOutput:completion:]
  -[HMNetworkRouterFirewallRuleManager removeAllLocalRulesWithCompletion:]
  -[HMNetworkRouterFirewallRuleManager _dumpPairedMetadataForProductGroup:productNumber:firmwareVersion:ignoreOverrides:rawOutput:completion:]
  -[HMNetworkRouterFirewallRuleManager dumpPairedMetadataForProductGroup:productNumber:firmwareVersion:ignoreOverrides:rawOutput:completion:]
  -[HMNetworkRouterFirewallRuleManager dumpLocalRulesForProductGroup:productNumber:firmwareVersion:ignoreOverrides:rawOutput:completion:]
  -[HMNetworkRouterFirewallRuleManager messageDestination]
  -[HMNetworkRouterFirewallRuleManager _removeOverridesForProductGroup:productNumber:completion:]


HMPBMetadataCategory : PBCodable <NSCopying>
 @property  BOOL hasType
 @property  NSString *type
 @property  BOOL hasDesc
 @property  NSString *desc
 @property  BOOL hasNumber
 @property  int number

  // instance methods
  -[HMPBMetadataCategory number]
  -[HMPBMetadataCategory mergeFrom:]
  -[HMPBMetadataCategory setHasNumber:]
  -[HMPBMetadataCategory setType:]
  -[HMPBMetadataCategory .cxx_destruct]
  -[HMPBMetadataCategory dictionaryRepresentation]
  -[HMPBMetadataCategory writeTo:]
  -[HMPBMetadataCategory setDesc:]
  -[HMPBMetadataCategory hasType]
  -[HMPBMetadataCategory isEqual:]
  -[HMPBMetadataCategory copyTo:]
  -[HMPBMetadataCategory readFrom:]
  -[HMPBMetadataCategory type]
  -[HMPBMetadataCategory setNumber:]
  -[HMPBMetadataCategory hasDesc]
  -[HMPBMetadataCategory copyWithZone:]
  -[HMPBMetadataCategory hasNumber]
  -[HMPBMetadataCategory desc]


HMImmutableSettingsProtoIntegerValueEvent : PBCodable <NSCopying>
 @property  BOOL hasValue
 @property  long long value

  // instance methods
  -[HMImmutableSettingsProtoIntegerValueEvent mergeFrom:]
  -[HMImmutableSettingsProtoIntegerValueEvent setHasValue:]
  -[HMImmutableSettingsProtoIntegerValueEvent hasValue]
  -[HMImmutableSettingsProtoIntegerValueEvent dictionaryRepresentation]
  -[HMImmutableSettingsProtoIntegerValueEvent writeTo:]
  -[HMImmutableSettingsProtoIntegerValueEvent isEqual:]
  -[HMImmutableSettingsProtoIntegerValueEvent copyTo:]
  -[HMImmutableSettingsProtoIntegerValueEvent readFrom:]
  -[HMImmutableSettingsProtoIntegerValueEvent setValue:]
  -[HMImmutableSettingsProtoIntegerValueEvent value]
  -[HMImmutableSettingsProtoIntegerValueEvent copyWithZone:]


HMFrameworkCacheManager : HMCacheManager
  // class methods
  +[HMFrameworkCacheManager sharedInstance]

  // instance methods
  -[HMFrameworkCacheManager initWithTimerFactory:]


HMRoom : NSObject <NSSecureCoding, HMObjectMerge, HMMutableApplicationData>
 @property  _HMContext *context
 @property  NSString *assistantIdentifier
 @property  HMHome *home
 @property  NSUUID *uuid
 @property  NSString *name
 @property  NSArray *accessories
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *applicationDataIdentifier
 @property  HMApplicationData *applicationData

  // class methods
  +[HMRoom supportsSecureCoding]

  // instance methods
  -[HMRoom home]
  -[HMRoom name]
  -[HMRoom uniqueIdentifier]
  -[HMRoom initWithCoder:]
  -[HMRoom .cxx_destruct]
  -[HMRoom _unconfigure]
  -[HMRoom setName:]
  -[HMRoom initWithName:]
  -[HMRoom init]
  -[HMRoom setHome:]
  -[HMRoom assistantIdentifier]
  -[HMRoom uuid]
  -[HMRoom setContext:]
  -[HMRoom setAssistantIdentifier:]
  -[HMRoom applicationData]
  -[HMRoom setApplicationData:]
  -[HMRoom accessories]
  -[HMRoom setUuid:]
  -[HMRoom updateApplicationData:completionHandler:]
  -[HMRoom encodeWithCoder:]
  -[HMRoom context]
  -[HMRoom _mergeWithNewObject:]
  -[HMRoom _unconfigureContext]
  -[HMRoom __configureWithContext:home:]
  -[HMRoom _recomputeAssistantIdentifier]
  -[HMRoom recomputeAssistantIdentifier]
  -[HMRoom updateName:completionHandler:]
  -[HMRoom _updateName:completionHandler:]
  -[HMRoom applicationDataIdentifier]
  -[HMRoom _updateRoomName:completionHandler:]


HMSettingGroup : NSObject <NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSString *name
 @property  NSString *keyPath
 @property  NSString *localizedTitle
 @property  NSArray *settings
 @property  NSArray *groups

  // class methods
  +[HMSettingGroup supportsSecureCoding]

  // instance methods
  -[HMSettingGroup localizedTitle]
  -[HMSettingGroup name]
  -[HMSettingGroup initWithCoder:]
  -[HMSettingGroup .cxx_destruct]
  -[HMSettingGroup fixNestedKeyPaths]
  -[HMSettingGroup addGroup:]
  -[HMSettingGroup setKeyPath:]
  -[HMSettingGroup addSetting:]
  -[HMSettingGroup identifier]
  -[HMSettingGroup keyPath]
  -[HMSettingGroup _longDescriptionWithCurrentGroup:currentSettings:]
  -[HMSettingGroup initWithIdentifier:name:groups:settings:]
  -[HMSettingGroup longDescription]
  -[HMSettingGroup groups]
  -[HMSettingGroup encodeWithCoder:]
  -[HMSettingGroup settings]


HMAccessoryAccessCodeConstraintsFetchResponse : NSObject
 @property  HMAccessory *accessory
 @property  HMAccessCodeConstraints *constraints
 @property  NSError *error

  // class methods
  +[HMAccessoryAccessCodeConstraintsFetchResponse responseWithValue:home:]

  // instance methods
  -[HMAccessoryAccessCodeConstraintsFetchResponse accessory]
  -[HMAccessoryAccessCodeConstraintsFetchResponse constraints]
  -[HMAccessoryAccessCodeConstraintsFetchResponse .cxx_destruct]
  -[HMAccessoryAccessCodeConstraintsFetchResponse setError:]
  -[HMAccessoryAccessCodeConstraintsFetchResponse error]
  -[HMAccessoryAccessCodeConstraintsFetchResponse initWithAccessory:constraints:error:]


HMRemoteLoginAnisetteDataProvider : NSObject <HMFMessageReceiver, AKAnisetteServiceProtocol, NSSecureCoding, NSCopying>
 @property  NSUUID *uuid
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMDelegateCaller *delegateCaller
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMRemoteLoginAnisetteDataProvider supportsSecureCoding]

  // instance methods
  -[HMRemoteLoginAnisetteDataProvider clientQueue]
  -[HMRemoteLoginAnisetteDataProvider initWithCoder:]
  -[HMRemoteLoginAnisetteDataProvider setClientQueue:]
  -[HMRemoteLoginAnisetteDataProvider provisionAnisetteWithCompletion:]
  -[HMRemoteLoginAnisetteDataProvider .cxx_destruct]
  -[HMRemoteLoginAnisetteDataProvider syncAnisetteWithSIMData:completion:]
  -[HMRemoteLoginAnisetteDataProvider eraseAnisetteWithCompletion:]
  -[HMRemoteLoginAnisetteDataProvider msgDispatcher]
  -[HMRemoteLoginAnisetteDataProvider legacyAnisetteDataForDSID:withCompletion:]
  -[HMRemoteLoginAnisetteDataProvider messageReceiveQueue]
  -[HMRemoteLoginAnisetteDataProvider fetchAnisetteDataAndProvisionIfNecessary:withCompletion:]
  -[HMRemoteLoginAnisetteDataProvider delegateCaller]
  -[HMRemoteLoginAnisetteDataProvider uuid]
  -[HMRemoteLoginAnisetteDataProvider messageTargetUUID]
  -[HMRemoteLoginAnisetteDataProvider copyWithZone:]
  -[HMRemoteLoginAnisetteDataProvider encodeWithCoder:]
  -[HMRemoteLoginAnisetteDataProvider setDelegateCaller:]
  -[HMRemoteLoginAnisetteDataProvider setMsgDispatcher:]
  -[HMRemoteLoginAnisetteDataProvider _configureClientQueue:delegateCaller:msgDispatcher:]


HMCameraClipFetchVideoAssetContextOperation : HMFOperation
 @property  <HMCameraClipFetchAssetContextOperationDataSource> *dataSource
 @property  HMCameraClipManager *clipManager
 @property  HMCameraClip *clip
 @property  {_NSRange=QQ} videoDataSegmentsRange
 @property  NSURL *clipDestinationFileURL
 @property  NSURL *hlsPlaylistDestinationFileURL
 @property  @? downloadProgressHandler
 @property  @? fetchVideoAssetContextCompletionBlock

  // class methods
  +[HMCameraClipFetchVideoAssetContextOperation logCategory]

  // instance methods
  -[HMCameraClipFetchVideoAssetContextOperation clip]
  -[HMCameraClipFetchVideoAssetContextOperation main]
  -[HMCameraClipFetchVideoAssetContextOperation .cxx_destruct]
  -[HMCameraClipFetchVideoAssetContextOperation dataSource]
  -[HMCameraClipFetchVideoAssetContextOperation cancelWithError:]
  -[HMCameraClipFetchVideoAssetContextOperation logIdentifier]
  -[HMCameraClipFetchVideoAssetContextOperation clipManager]
  -[HMCameraClipFetchVideoAssetContextOperation initWithClipManager:clip:dataSource:]
  -[HMCameraClipFetchVideoAssetContextOperation clipDestinationFileURL]
  -[HMCameraClipFetchVideoAssetContextOperation hlsPlaylistDestinationFileURL]
  -[HMCameraClipFetchVideoAssetContextOperation fetchVideoAssetContextCompletionBlock]
  -[HMCameraClipFetchVideoAssetContextOperation fetchVideoAssetContext]
  -[HMCameraClipFetchVideoAssetContextOperation downloadVideoAsset:]
  -[HMCameraClipFetchVideoAssetContextOperation writeHLSPlaylistForVideoAssetContext:]
  -[HMCameraClipFetchVideoAssetContextOperation finishWithVideoAssetContext:]
  -[HMCameraClipFetchVideoAssetContextOperation downloadProgressHandler]
  -[HMCameraClipFetchVideoAssetContextOperation videoDataSegmentsRange]
  -[HMCameraClipFetchVideoAssetContextOperation updateDownloadProgressToPercentageComplete:]
  -[HMCameraClipFetchVideoAssetContextOperation videoSegmentsToDownload]
  -[HMCameraClipFetchVideoAssetContextOperation downloadVideoSegment:forDataTask:andAppendToOutputStream:]
  -[HMCameraClipFetchVideoAssetContextOperation decryptData:]
  -[HMCameraClipFetchVideoAssetContextOperation initWithClipManager:clip:]
  -[HMCameraClipFetchVideoAssetContextOperation setVideoDataSegmentsRange:]
  -[HMCameraClipFetchVideoAssetContextOperation setClipDestinationFileURL:]
  -[HMCameraClipFetchVideoAssetContextOperation setHlsPlaylistDestinationFileURL:]
  -[HMCameraClipFetchVideoAssetContextOperation setDownloadProgressHandler:]
  -[HMCameraClipFetchVideoAssetContextOperation setFetchVideoAssetContextCompletionBlock:]


HMAccessoryAccessCodeConstraintsFetchResponseValue : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *accessoryUUID
 @property  HMAccessCodeConstraints *constraints
 @property  NSError *error
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessoryAccessCodeConstraintsFetchResponseValue supportsSecureCoding]
  +[HMAccessoryAccessCodeConstraintsFetchResponseValue shortDescription]

  // instance methods
  -[HMAccessoryAccessCodeConstraintsFetchResponseValue accessoryUUID]
  -[HMAccessoryAccessCodeConstraintsFetchResponseValue privateDescription]
  -[HMAccessoryAccessCodeConstraintsFetchResponseValue initWithCoder:]
  -[HMAccessoryAccessCodeConstraintsFetchResponseValue constraints]
  -[HMAccessoryAccessCodeConstraintsFetchResponseValue .cxx_destruct]
  -[HMAccessoryAccessCodeConstraintsFetchResponseValue attributeDescriptions]
  -[HMAccessoryAccessCodeConstraintsFetchResponseValue isEqual:]
  -[HMAccessoryAccessCodeConstraintsFetchResponseValue shortDescription]
  -[HMAccessoryAccessCodeConstraintsFetchResponseValue copyWithZone:]
  -[HMAccessoryAccessCodeConstraintsFetchResponseValue setError:]
  -[HMAccessoryAccessCodeConstraintsFetchResponseValue encodeWithCoder:]
  -[HMAccessoryAccessCodeConstraintsFetchResponseValue error]
  -[HMAccessoryAccessCodeConstraintsFetchResponseValue initWithAccessory:constraints:error:]


HMMediaDestinationControllerData : NSObject <HMFLogging, HMFObject, NSCopying, NSMutableCopying, NSSecureCoding, HMEProtoBufferCoding>
 @property  NSUUID *destinationIdentifier
 @property  NSArray *availableDestinationIdentifiers
 @property  NSUUID *identifier
 @property  NSUUID *parentIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMMediaDestinationControllerData supportsSecureCoding]
  +[HMMediaDestinationControllerData logCategory]
  +[HMMediaDestinationControllerData shortDescription]

  // instance methods
  -[HMMediaDestinationControllerData privateDescription]
  -[HMMediaDestinationControllerData initWithCoder:]
  -[HMMediaDestinationControllerData .cxx_destruct]
  -[HMMediaDestinationControllerData attributeDescriptions]
  -[HMMediaDestinationControllerData isEqual:]
  -[HMMediaDestinationControllerData identifier]
  -[HMMediaDestinationControllerData destinationIdentifier]
  -[HMMediaDestinationControllerData parentIdentifier]
  -[HMMediaDestinationControllerData mutableCopyWithZone:]
  -[HMMediaDestinationControllerData shortDescription]
  -[HMMediaDestinationControllerData copyWithZone:]
  -[HMMediaDestinationControllerData logIdentifier]
  -[HMMediaDestinationControllerData encodeWithCoder:]
  -[HMMediaDestinationControllerData encodeToProtoBufferData]
  -[HMMediaDestinationControllerData initWithProtoBufferData:]
  -[HMMediaDestinationControllerData availableDestinationIdentifiers]
  -[HMMediaDestinationControllerData setAvailableDestinationIdentifiers:]
  -[HMMediaDestinationControllerData setDestinationIdentifier:]
  -[HMMediaDestinationControllerData initWithIdentifier:parentIdentifier:destinationIdentifier:availableDestinationIdentifiers:]


HMMutableMediaDestinationControllerData : HMMediaDestinationControllerData
 @property  NSUUID *destinationIdentifier
 @property  NSArray *availableDestinationIdentifiers

  // class methods
  +[HMMutableMediaDestinationControllerData logCategory]

  // instance methods
  -[HMMutableMediaDestinationControllerData copyWithZone:]


HMDarwinNotificationProvider : HMFObject <HMDarwinNotificationProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDarwinNotificationProvider notifyRegisterDispatch:outToken:queue:handler:]
  -[HMDarwinNotificationProvider notifyRegisterCheck:outToken:]
  -[HMDarwinNotificationProvider notifyGetState:state:]
  -[HMDarwinNotificationProvider notifyCancel:]


HMBulletinObjectTuple : NSObject
 @property  NSString *queryName
 @property  NSString *uuidString

  // class methods
  +[HMBulletinObjectTuple tupleWithQueryType:uuidString:]

  // instance methods
  -[HMBulletinObjectTuple uuidString]
  -[HMBulletinObjectTuple .cxx_destruct]
  -[HMBulletinObjectTuple queryName]
  -[HMBulletinObjectTuple initWithQueryType:uuidString:]


HMCameraVideoResolution : NSObject <NSSecureCoding>
 @property  unsigned long videoResolution

  // class methods
  +[HMCameraVideoResolution supportsSecureCoding]
  +[HMCameraVideoResolution isValid:]

  // instance methods
  -[HMCameraVideoResolution initWithCoder:]
  -[HMCameraVideoResolution isEqual:]
  -[HMCameraVideoResolution encodeWithCoder:]
  -[HMCameraVideoResolution videoResolution]
  -[HMCameraVideoResolution initWithVideoResolutionType:]


HMSymptomsHandler : NSObject <NSSecureCoding, HMFMessageReceiver, HMFLogging, HMObjectMerge>
 @property  _HMContext *context
 @property  NSHashTable *fixSessions
 @property  NSUUID *accessoryUUID
 @property  NSUUID *uuid
 @property  HMMutableArray *currentSymptoms
 @property  NSUUID *sfDeviceIdentifier
 @property  NSSet *symptoms
 @property  <HMSymptomsHandlerDelegate> *delegate
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[HMSymptomsHandler supportsSecureCoding]
  +[HMSymptomsHandler logCategory]

  // instance methods
  -[HMSymptomsHandler accessoryUUID]
  -[HMSymptomsHandler uniqueIdentifier]
  -[HMSymptomsHandler initWithCoder:]
  -[HMSymptomsHandler setAccessoryUUID:]
  -[HMSymptomsHandler .cxx_destruct]
  -[HMSymptomsHandler _unconfigure]
  -[HMSymptomsHandler initWithUUID:]
  -[HMSymptomsHandler setDelegate:]
  -[HMSymptomsHandler init]
  -[HMSymptomsHandler symptoms]
  -[HMSymptomsHandler messageReceiveQueue]
  -[HMSymptomsHandler uuid]
  -[HMSymptomsHandler delegate]
  -[HMSymptomsHandler setContext:]
  -[HMSymptomsHandler messageTargetUUID]
  -[HMSymptomsHandler logIdentifier]
  -[HMSymptomsHandler encodeWithCoder:]
  -[HMSymptomsHandler context]
  -[HMSymptomsHandler _mergeWithNewObject:]
  -[HMSymptomsHandler _unconfigureContext]
  -[HMSymptomsHandler __configureWithContext:]
  -[HMSymptomsHandler _registerForMessages]
  -[HMSymptomsHandler currentSymptoms]
  -[HMSymptomsHandler _handleSymptomsUpdated:]
  -[HMSymptomsHandler _handleSFDeviceIdentifierUpdated:]
  -[HMSymptomsHandler sfDeviceIdentifier]
  -[HMSymptomsHandler _addFixSession:]
  -[HMSymptomsHandler _findAndRemoveFixSessionsForSymptom:]
  -[HMSymptomsHandler _callSymptomsUpdatedDelegate:]
  -[HMSymptomsHandler setSFDeviceIdentifier:]
  -[HMSymptomsHandler _callFixSessionAvailabilityUpdatedDelegate]
  -[HMSymptomsHandler fixSessions]
  -[HMSymptomsHandler newFixSessionForSymptom:]
  -[HMSymptomsHandler initiateFixWithCompletionHandler:]
  -[HMSymptomsHandler setFixSessions:]


HMFaceprint : NSObject <NSCopying, NSSecureCoding>
 @property  NSUUID *UUID
 @property  NSData *data
 @property  NSUUID *modelUUID
 @property  NSUUID *faceCropUUID

  // class methods
  +[HMFaceprint supportsSecureCoding]

  // instance methods
  -[HMFaceprint UUID]
  -[HMFaceprint initWithCoder:]
  -[HMFaceprint .cxx_destruct]
  -[HMFaceprint data]
  -[HMFaceprint isEqual:]
  -[HMFaceprint copyWithZone:]
  -[HMFaceprint encodeWithCoder:]
  -[HMFaceprint modelUUID]
  -[HMFaceprint faceCropUUID]
  -[HMFaceprint initWithUUID:data:modelUUID:faceCropUUID:]


HMAccessoryInfoDataProvider : NSObject <HMEEventConsumer, HMFLogging>
 @property  <HMESubscriptionProviding> *eventSubscriptionProvider
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  _HMContext *context
 @property  <HMAccessoryInfoDataProviderDataSource> *dataSource
 @property  <HMAccessoryInfoDataProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessoryInfoDataProvider logCategory]

  // instance methods
  -[HMAccessoryInfoDataProvider setDataSource:]
  -[HMAccessoryInfoDataProvider .cxx_destruct]
  -[HMAccessoryInfoDataProvider homeUUIDForIdentifier:]
  -[HMAccessoryInfoDataProvider didReceiveEvent:topic:]
  -[HMAccessoryInfoDataProvider setDelegate:]
  -[HMAccessoryInfoDataProvider dataSource]
  -[HMAccessoryInfoDataProvider didReceiveCachedEvent:topic:source:]
  -[HMAccessoryInfoDataProvider dataSourceHomeWithHomeIdentifier:]
  -[HMAccessoryInfoDataProvider eventSubscriptionProvider]
  -[HMAccessoryInfoDataProvider workQueue]
  -[HMAccessoryInfoDataProvider delegate]
  -[HMAccessoryInfoDataProvider accessoryUUIDForIdentifier:homeIdentifier:]
  -[HMAccessoryInfoDataProvider _didReceiveEvent:topic:]
  -[HMAccessoryInfoDataProvider context]
  -[HMAccessoryInfoDataProvider notifyDelegateDidReceiveWifiNetworkInfoUpdatesForAccessoryWithIdentifier:wifiNetworkInfo:]
  -[HMAccessoryInfoDataProvider initWithContext:subscriptionProvider:]
  -[HMAccessoryInfoDataProvider subscribeToAccessoryInfoWithHomeIdentifier:accessoryIdentifier:accessoryInfoTypes:completionHandler:]
  -[HMAccessoryInfoDataProvider unsubscribeToAccessoryInfoWithHomeIdentifier:accessoryIdentifier:accessoryInfoTypes:completionHandler:]


HMServiceGroup : NSObject <HMFLogging, NSSecureCoding, HMObjectMerge, HMMutableApplicationData>
 @property  _HMContext *context
 @property  NSString *assistantIdentifier
 @property  HMMutableArray *currentServices
 @property  NSUUID *uuid
 @property  HMHome *home
 @property  NSString *name
 @property  NSArray *services
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *applicationDataIdentifier
 @property  HMApplicationData *applicationData

  // class methods
  +[HMServiceGroup supportsSecureCoding]
  +[HMServiceGroup logCategory]

  // instance methods
  -[HMServiceGroup home]
  -[HMServiceGroup services]
  -[HMServiceGroup name]
  -[HMServiceGroup uniqueIdentifier]
  -[HMServiceGroup initWithCoder:]
  -[HMServiceGroup .cxx_destruct]
  -[HMServiceGroup _unconfigure]
  -[HMServiceGroup setName:]
  -[HMServiceGroup init]
  -[HMServiceGroup setHome:]
  -[HMServiceGroup assistantIdentifier]
  -[HMServiceGroup uuid]
  -[HMServiceGroup setContext:]
  -[HMServiceGroup logIdentifier]
  -[HMServiceGroup setAssistantIdentifier:]
  -[HMServiceGroup applicationData]
  -[HMServiceGroup setApplicationData:]
  -[HMServiceGroup updateApplicationData:completionHandler:]
  -[HMServiceGroup encodeWithCoder:]
  -[HMServiceGroup context]
  -[HMServiceGroup _mergeWithNewObject:]
  -[HMServiceGroup _unconfigureContext]
  -[HMServiceGroup __configureWithContext:home:]
  -[HMServiceGroup _recomputeAssistantIdentifier]
  -[HMServiceGroup recomputeAssistantIdentifier]
  -[HMServiceGroup updateName:completionHandler:]
  -[HMServiceGroup _updateName:completionHandler:]
  -[HMServiceGroup applicationDataIdentifier]
  -[HMServiceGroup currentServices]
  -[HMServiceGroup _addOrRemove:service:completionHandler:]
  -[HMServiceGroup initWithName:uuid:]
  -[HMServiceGroup _removeServices:]
  -[HMServiceGroup addService:completionHandler:]
  -[HMServiceGroup removeService:completionHandler:]
  -[HMServiceGroup setCurrentServices:]


_HMNetworkConfigurationProfile : _HMAccessoryProfile
 @property  long long targetProtectionMode
 @property  long long currentProtectionMode
 @property  BOOL networkAccessRestricted
 @property  NSArray *allowedHosts
 @property  HMAccessoryNetworkAccessViolation *accessViolation
 @property  BOOL supportsWiFiReconfiguration
 @property  long long credentialType
 @property  <_HMNetworkConfigurationProfileDelegate> *delegate

  // instance methods
  -[_HMNetworkConfigurationProfile credentialType]
  -[_HMNetworkConfigurationProfile .cxx_destruct]
  -[_HMNetworkConfigurationProfile setCredentialType:]
  -[_HMNetworkConfigurationProfile setDelegate:]
  -[_HMNetworkConfigurationProfile messageReceiveQueue]
  -[_HMNetworkConfigurationProfile delegate]
  -[_HMNetworkConfigurationProfile messageTargetUUID]
  -[_HMNetworkConfigurationProfile messageDestination]
  -[_HMNetworkConfigurationProfile _mergeWithNewObject:]
  -[_HMNetworkConfigurationProfile _registerNotificationHandlers]
  -[_HMNetworkConfigurationProfile _handleHostsUpdated:]
  -[_HMNetworkConfigurationProfile _handleAccessViolationUpdated:]
  -[_HMNetworkConfigurationProfile _handleWiFiReconfigurationUpdated:]
  -[_HMNetworkConfigurationProfile currentProtectionMode]
  -[_HMNetworkConfigurationProfile isNetworkAccessRestricted]
  -[_HMNetworkConfigurationProfile targetProtectionMode]
  -[_HMNetworkConfigurationProfile setCurrentProtectionMode:]
  -[_HMNetworkConfigurationProfile setTargetProtectionMode:]
  -[_HMNetworkConfigurationProfile _notifyDelegateOfUpdatedProtectionMode]
  -[_HMNetworkConfigurationProfile setNetworkAccessRestricted:]
  -[_HMNetworkConfigurationProfile _notifyDelegateOfNetworkAccessModeChanged]
  -[_HMNetworkConfigurationProfile allowedHosts]
  -[_HMNetworkConfigurationProfile setAllowedHosts:]
  -[_HMNetworkConfigurationProfile _notifyDelegateOfUpdatedAllowedHosts]
  -[_HMNetworkConfigurationProfile accessViolation]
  -[_HMNetworkConfigurationProfile setAccessViolation:]
  -[_HMNetworkConfigurationProfile _notifyDelegateOfUpdatedAccessViolation]
  -[_HMNetworkConfigurationProfile supportsWiFiReconfiguration]
  -[_HMNetworkConfigurationProfile setSupportsWiFiReconfiguration:]
  -[_HMNetworkConfigurationProfile _notifyDelegateOfUpdatedWiFiReconfigurationSupport]
  -[_HMNetworkConfigurationProfile _notifyDelegateOfUpdatedWiFiCredentialType]
  -[_HMNetworkConfigurationProfile initWithAccessoryIdentifier:targetProtection:currentProtection:networkAccessRestricted:allowedHosts:accessViolation:supportsWiFiReconfiguration:credentialType:]
  -[_HMNetworkConfigurationProfile reconfigureWiFiWithOptions:completionHandler:]
  -[_HMNetworkConfigurationProfile previewAllowedHostsForAutoProtectionModeWithCompletionHandler:]


HMNetworkConfigurationProfile : HMAccessoryProfile <_HMNetworkConfigurationProfileDelegate>
 @property  long long targetProtectionMode
 @property  long long currentProtectionMode
 @property  NSArray *allowedHosts
 @property  HMAccessoryNetworkAccessViolation *accessViolation
 @property  BOOL supportsWiFiReconfiguration
 @property  long long credentialType
 @property  <HMNetworkConfigurationProfileDelegate> *delegate
 @property  BOOL networkAccessRestricted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMNetworkConfigurationProfile credentialType]
  -[HMNetworkConfigurationProfile .cxx_destruct]
  -[HMNetworkConfigurationProfile setDelegate:]
  -[HMNetworkConfigurationProfile delegate]
  -[HMNetworkConfigurationProfile _mergeWithNewObject:]
  -[HMNetworkConfigurationProfile currentProtectionMode]
  -[HMNetworkConfigurationProfile isNetworkAccessRestricted]
  -[HMNetworkConfigurationProfile targetProtectionMode]
  -[HMNetworkConfigurationProfile allowedHosts]
  -[HMNetworkConfigurationProfile accessViolation]
  -[HMNetworkConfigurationProfile supportsWiFiReconfiguration]
  -[HMNetworkConfigurationProfile networkConfigurationProfileDidUpdateProtectionMode:]
  -[HMNetworkConfigurationProfile networkConfigurationProfileDidUpdateNetworkAccessMode:]
  -[HMNetworkConfigurationProfile networkConfigurationProfileDidUpdateAllowedHosts:]
  -[HMNetworkConfigurationProfile networkConfigurationProfileDidUpdateAccessViolation:]
  -[HMNetworkConfigurationProfile networkConfigurationProfileDidUpdateWiFiReconfigurationSupport:]
  -[HMNetworkConfigurationProfile networkConfigurationProfileDidUpdateWiFiCredentialType:]
  -[HMNetworkConfigurationProfile initWithAccessoryIdentifier:targetProtection:currentProtection:networkAccessRestricted:allowedHosts:accessViolation:supportsWiFiReconfiguration:credentialType:]
  -[HMNetworkConfigurationProfile reconfigureWiFiWithOptions:completionHandler:]
  -[HMNetworkConfigurationProfile previewAllowedHostsForAutoProtectionModeWithCompletionHandler:]


HMPlainTextDocument : NSObject <NSCopying, NSSecureCoding>
 @property  _HMDocument *document
 @property  NSString *stringValue
 @property  NSAttributedString *attributedString

  // class methods
  +[HMPlainTextDocument supportsSecureCoding]
  +[HMPlainTextDocument logCategory]

  // instance methods
  -[HMPlainTextDocument stringValue]
  -[HMPlainTextDocument attributedString]
  -[HMPlainTextDocument initWithCoder:]
  -[HMPlainTextDocument document]
  -[HMPlainTextDocument .cxx_destruct]
  -[HMPlainTextDocument isEqual:]
  -[HMPlainTextDocument initWithString:]
  -[HMPlainTextDocument initWithData:error:]
  -[HMPlainTextDocument copyWithZone:]
  -[HMPlainTextDocument encodeWithCoder:]
  -[HMPlainTextDocument initWithURL:error:]


HMPersonSettingsManager : NSObject <HMFLogging>
 @property  HMFMessageDestination *messageDestination
 @property  NSUUID *UUID
 @property  _HMContext *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMPersonSettingsManager logCategory]
  +[HMPersonSettingsManager personSettingsManagerUUIDFromHomeUUID:]

  // instance methods
  -[HMPersonSettingsManager UUID]
  -[HMPersonSettingsManager .cxx_destruct]
  -[HMPersonSettingsManager logIdentifier]
  -[HMPersonSettingsManager messageDestination]
  -[HMPersonSettingsManager initWithHome:]
  -[HMPersonSettingsManager context]
  -[HMPersonSettingsManager _sendMessageWithName:payload:responseHandler:]
  -[HMPersonSettingsManager initWithContext:UUID:]
  -[HMPersonSettingsManager fetchClassificationNotificationsEnabledForPersonWithUUID:completion:]
  -[HMPersonSettingsManager updateClassificationNotificationsEnabled:forPersonWithUUID:completion:]


_HMNetworkRouterProfile : _HMAccessoryProfile
 @property  unsigned long networkStatus
 @property  BOOL satellite
 @property  NSSet *identifiersForSatelliteProfiles
 @property  <_HMNetworkRouterProfileDelegate> *delegate

  // class methods
  +[_HMNetworkRouterProfile supportsSecureCoding]

  // instance methods
  -[_HMNetworkRouterProfile initWithCoder:]
  -[_HMNetworkRouterProfile .cxx_destruct]
  -[_HMNetworkRouterProfile setDelegate:]
  -[_HMNetworkRouterProfile setNetworkStatus:]
  -[_HMNetworkRouterProfile messageReceiveQueue]
  -[_HMNetworkRouterProfile delegate]
  -[_HMNetworkRouterProfile messageTargetUUID]
  -[_HMNetworkRouterProfile messageDestination]
  -[_HMNetworkRouterProfile networkStatus]
  -[_HMNetworkRouterProfile _registerNotificationHandlers]
  -[_HMNetworkRouterProfile handleRuntimeStateUpdate:]
  -[_HMNetworkRouterProfile _handleNetworkStatusUpdated:]
  -[_HMNetworkRouterProfile _handleSatelliteProfilesUpdated:]
  -[_HMNetworkRouterProfile identifiersForSatelliteProfiles]
  -[_HMNetworkRouterProfile setIdentifiersForSatelliteProfiles:]
  -[_HMNetworkRouterProfile checkForUpdatedIdentifiersForSatellites:]
  -[_HMNetworkRouterProfile checkForUpdatedNetworkStatus:]
  -[_HMNetworkRouterProfile __handleNetworkStatusUpdated:]
  -[_HMNetworkRouterProfile isSatellite]
  -[_HMNetworkRouterProfile setSatellite:]


HMNetworkRouterProfile : HMAccessoryProfile <_HMNetworkRouterProfileDelegate>
 @property  unsigned long networkStatus
 @property  <HMNetworkRouterProfileDelegate> *delegate
 @property  BOOL satellite
 @property  NSArray *satelliteProfiles
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMNetworkRouterProfile services]
  -[HMNetworkRouterProfile .cxx_destruct]
  -[HMNetworkRouterProfile setDelegate:]
  -[HMNetworkRouterProfile delegate]
  -[HMNetworkRouterProfile networkStatus]
  -[HMNetworkRouterProfile _mergeWithNewObject:]
  -[HMNetworkRouterProfile initWithNetworkRouterProfile:]
  -[HMNetworkRouterProfile networkRouterProfile]
  -[HMNetworkRouterProfile identifiersForSatelliteProfiles]
  -[HMNetworkRouterProfile setIdentifiersForSatelliteProfiles:]
  -[HMNetworkRouterProfile routerProfileDidUpdateIdentifiersForSatellites:]
  -[HMNetworkRouterProfile routerProfileDidUpdateNetworkStatus:]
  -[HMNetworkRouterProfile isSatellite]
  -[HMNetworkRouterProfile satelliteProfiles]


HMAccessoryAccessCodeValue : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *accessoryUUID
 @property  HMAccessCodeValue *accessCodeValue
 @property  NSNumber *uniqueIdentifier
 @property  BOOL hasRestrictions
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessoryAccessCodeValue supportsSecureCoding]
  +[HMAccessoryAccessCodeValue shortDescription]

  // instance methods
  -[HMAccessoryAccessCodeValue accessoryUUID]
  -[HMAccessoryAccessCodeValue privateDescription]
  -[HMAccessoryAccessCodeValue uniqueIdentifier]
  -[HMAccessoryAccessCodeValue initWithCoder:]
  -[HMAccessoryAccessCodeValue .cxx_destruct]
  -[HMAccessoryAccessCodeValue attributeDescriptions]
  -[HMAccessoryAccessCodeValue isEqual:]
  -[HMAccessoryAccessCodeValue shortDescription]
  -[HMAccessoryAccessCodeValue copyWithZone:]
  -[HMAccessoryAccessCodeValue encodeWithCoder:]
  -[HMAccessoryAccessCodeValue accessCodeValue]
  -[HMAccessoryAccessCodeValue hasRestrictions]
  -[HMAccessoryAccessCodeValue initWithAccessoryUUID:accessCodeValue:uniqueIdentifier:hasRestrictions:]


HMUserCloudShareClientInfo : NSObject <NSSecureCoding>
 @property  NSData *accountAuthToken

  // class methods
  +[HMUserCloudShareClientInfo supportsSecureCoding]

  // instance methods
  -[HMUserCloudShareClientInfo initWithCoder:]
  -[HMUserCloudShareClientInfo .cxx_destruct]
  -[HMUserCloudShareClientInfo encodeWithCoder:]
  -[HMUserCloudShareClientInfo initWithAccountAuthToken:]
  -[HMUserCloudShareClientInfo accountAuthToken]


HMTimerTrigger : HMTrigger <NSSecureCoding>
 @property  NSDate *fireDate
 @property  NSTimeZone *timeZone
 @property  NSDateComponents *recurrence
 @property  NSString *significantEvent
 @property  NSDateComponents *significantEventOffset
 @property  NSArray *recurrences
 @property  NSCalendar *recurrenceCalendar

  // class methods
  +[HMTimerTrigger supportsSecureCoding]

  // instance methods
  -[HMTimerTrigger setFireDate:]
  -[HMTimerTrigger setTimeZone:]
  -[HMTimerTrigger timeZone]
  -[HMTimerTrigger initWithCoder:]
  -[HMTimerTrigger .cxx_destruct]
  -[HMTimerTrigger setRecurrence:]
  -[HMTimerTrigger init]
  -[HMTimerTrigger fireDate]
  -[HMTimerTrigger recurrence]
  -[HMTimerTrigger encodeWithCoder:]
  -[HMTimerTrigger recurrences]
  -[HMTimerTrigger _serializeForAdd]
  -[HMTimerTrigger _mergeWithNewObject:]
  -[HMTimerTrigger _handleTriggerFired:]
  -[HMTimerTrigger _updateRecurrences:completionHandler:]
  -[HMTimerTrigger setRecurrences:]
  -[HMTimerTrigger significantEvent]
  -[HMTimerTrigger updateRecurrences:completionHandler:]
  -[HMTimerTrigger _updateFireDate:completionHandler:]
  -[HMTimerTrigger _updateTimerTriggerWithResponse:payloadToSend:]
  -[HMTimerTrigger _updateTimeZone:completionHandler:]
  -[HMTimerTrigger _updateSignificantEvent:completionHandler:]
  -[HMTimerTrigger _updateSignificantEventOffset:completionHandler:]
  -[HMTimerTrigger _updateRecurrence:completionHandler:]
  -[HMTimerTrigger _updateTimerTriggerPropertiesFromResponse:]
  -[HMTimerTrigger significantEventOffset]
  -[HMTimerTrigger setSignificantEvent:]
  -[HMTimerTrigger setSignificantEventOffset:]
  -[HMTimerTrigger initWithName:fireDate:timeZone:recurrence:recurrenceCalendar:]
  -[HMTimerTrigger initWithName:fireDate:timeZone:recurrences:]
  -[HMTimerTrigger initWithName:significantEvent:significantEventOffset:recurrences:]
  -[HMTimerTrigger updateFireDate:completionHandler:]
  -[HMTimerTrigger updateTimeZone:completionHandler:]
  -[HMTimerTrigger updateSignificantEvent:completionHandler:]
  -[HMTimerTrigger updateSignificantEventOffset:completionHandler:]
  -[HMTimerTrigger updateRecurrence:completionHandler:]
  -[HMTimerTrigger recurrenceCalendar]


_HMCameraProfile : _HMAccessoryProfile
 @property  NSArray *controls
 @property  HMCameraUserSettings *userSettings
 @property  HMCameraRecordingEventManager *recordingEventManager
 @property  HMCameraClipManager *clipManager
 @property  HMCameraRecordingReachabilityEventManager *reachabilityEventManager
 @property  _HMCameraStreamControl *streamControlInternal
 @property  _HMCameraSnapshotControl *snapshotControlInternal
 @property  _HMCameraSettingsControl *settingsControl
 @property  _HMCameraAudioControl *speakerControl
 @property  _HMCameraAudioControl *microphoneControl

  // class methods
  +[_HMCameraProfile supportsSecureCoding]

  // instance methods
  -[_HMCameraProfile userSettings]
  -[_HMCameraProfile initWithCoder:]
  -[_HMCameraProfile .cxx_destruct]
  -[_HMCameraProfile controls]
  -[_HMCameraProfile encodeWithCoder:]
  -[_HMCameraProfile __configureWithContext:accessory:]
  -[_HMCameraProfile initWithUUID:services:]
  -[_HMCameraProfile clipManager]
  -[_HMCameraProfile reachabilityEventManager]
  -[_HMCameraProfile settingsControl]
  -[_HMCameraProfile _createControls:]
  -[_HMCameraProfile streamControlInternal]
  -[_HMCameraProfile snapshotControlInternal]
  -[_HMCameraProfile microphoneControl]
  -[_HMCameraProfile speakerControl]
  -[_HMCameraProfile setClipManager:]
  -[_HMCameraProfile setReachabilityEventManager:]
  -[_HMCameraProfile setRecordingEventManager:]
  -[_HMCameraProfile setUserSettings:]
  -[_HMCameraProfile addUserSettings:]
  -[_HMCameraProfile recordingEventManager]


HMAccessorySetupResult : NSObject <HMFObject, NSSecureCoding, NSCopying>
 @property  NSUUID *homeUniqueIdentifier
 @property  NSArray *accessoryUniqueIdentifiers
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessorySetupResult supportsSecureCoding]
  +[HMAccessorySetupResult shortDescription]

  // instance methods
  -[HMAccessorySetupResult privateDescription]
  -[HMAccessorySetupResult initWithCoder:]
  -[HMAccessorySetupResult homeUniqueIdentifier]
  -[HMAccessorySetupResult .cxx_destruct]
  -[HMAccessorySetupResult attributeDescriptions]
  -[HMAccessorySetupResult isEqual:]
  -[HMAccessorySetupResult shortDescription]
  -[HMAccessorySetupResult copyWithZone:]
  -[HMAccessorySetupResult encodeWithCoder:]
  -[HMAccessorySetupResult accessoryUniqueIdentifiers]
  -[HMAccessorySetupResult initWithHomeUniqueIdentifier:accessoryUniqueIdentifiers:]


HMCameraUserNotificationSettings : NSObject <HMFObject, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  long long version
 @property  BOOL accessModeChangeNotificationEnabled
 @property  BOOL reachabilityEventNotificationEnabled
 @property  BOOL smartBulletinBoardNotificationEnabled
 @property  NSPredicate *smartBulletinBoardNotificationCondition
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraUserNotificationSettings supportsSecureCoding]
  +[HMCameraUserNotificationSettings shortDescription]

  // instance methods
  -[HMCameraUserNotificationSettings privateDescription]
  -[HMCameraUserNotificationSettings initWithCoder:]
  -[HMCameraUserNotificationSettings .cxx_destruct]
  -[HMCameraUserNotificationSettings attributeDescriptions]
  -[HMCameraUserNotificationSettings init]
  -[HMCameraUserNotificationSettings setVersion:]
  -[HMCameraUserNotificationSettings isEqual:]
  -[HMCameraUserNotificationSettings version]
  -[HMCameraUserNotificationSettings mutableCopyWithZone:]
  -[HMCameraUserNotificationSettings shortDescription]
  -[HMCameraUserNotificationSettings copyWithZone:]
  -[HMCameraUserNotificationSettings encodeWithCoder:]
  -[HMCameraUserNotificationSettings isAccessModeChangeNotificationEnabled]
  -[HMCameraUserNotificationSettings isReachabilityEventNotificationEnabled]
  -[HMCameraUserNotificationSettings isSmartBulletinBoardNotificationEnabled]
  -[HMCameraUserNotificationSettings smartBulletinBoardNotificationCondition]
  -[HMCameraUserNotificationSettings setAccessModeChangeNotificationEnabled:]
  -[HMCameraUserNotificationSettings setReachabilityEventNotificationEnabled:]
  -[HMCameraUserNotificationSettings setSmartBulletinBoardNotificationEnabled:]
  -[HMCameraUserNotificationSettings setSmartBulletinBoardNotificationCondition:]


HMMutableCameraUserNotificationSettings : HMCameraUserNotificationSettings
 @property  long long version
 @property  BOOL accessModeChangeNotificationEnabled
 @property  BOOL reachabilityEventNotificationEnabled
 @property  BOOL smartBulletinBoardNotificationEnabled
 @property  NSPredicate *smartBulletinBoardNotificationCondition

  // instance methods
  -[HMMutableCameraUserNotificationSettings copyWithZone:]


HMLightProfileNaturalLightingAction : HMAction <NSSecureCoding, HMObjectMerge, HMFLogging, HMFObject>
 @property  BOOL naturalLightingEnabled
 @property  HMLightProfile *lightProfile
 @property  NSUUID *lightProfileUUID
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMLightProfileNaturalLightingAction new]
  +[HMLightProfileNaturalLightingAction supportsSecureCoding]
  +[HMLightProfileNaturalLightingAction logCategory]
  +[HMLightProfileNaturalLightingAction shortDescription]
  +[HMLightProfileNaturalLightingAction _actionWithInfo:home:]

  // instance methods
  -[HMLightProfileNaturalLightingAction privateDescription]
  -[HMLightProfileNaturalLightingAction initWithCoder:]
  -[HMLightProfileNaturalLightingAction isValid]
  -[HMLightProfileNaturalLightingAction .cxx_destruct]
  -[HMLightProfileNaturalLightingAction initWithUUID:]
  -[HMLightProfileNaturalLightingAction attributeDescriptions]
  -[HMLightProfileNaturalLightingAction init]
  -[HMLightProfileNaturalLightingAction isEqual:]
  -[HMLightProfileNaturalLightingAction type]
  -[HMLightProfileNaturalLightingAction shortDescription]
  -[HMLightProfileNaturalLightingAction logIdentifier]
  -[HMLightProfileNaturalLightingAction _handleUpdates:]
  -[HMLightProfileNaturalLightingAction encodeWithCoder:]
  -[HMLightProfileNaturalLightingAction _serializeForAdd]
  -[HMLightProfileNaturalLightingAction _mergeWithNewObject:]
  -[HMLightProfileNaturalLightingAction encodeAsProtoBuf]
  -[HMLightProfileNaturalLightingAction isNaturalLightingEnabled]
  -[HMLightProfileNaturalLightingAction setNaturalLightingEnabled:]
  -[HMLightProfileNaturalLightingAction lightProfileUUID]
  -[HMLightProfileNaturalLightingAction lightProfile]
  -[HMLightProfileNaturalLightingAction __configureWithContext:actionSet:]
  -[HMLightProfileNaturalLightingAction initWithUUID:lightProfileUUID:naturalLightingEnabled:]
  -[HMLightProfileNaturalLightingAction setLightProfile:]
  -[HMLightProfileNaturalLightingAction initWithLightProfile:naturalLightingEnabled:]
  -[HMLightProfileNaturalLightingAction initWithPBNaturalLightingAction:home:]
  -[HMLightProfileNaturalLightingAction updateNaturalLightingEnabled:completionHandler:]


HMAccessorySettingsMetricsDispatcher : HMFObject
 @property  HMCoreAnalyticsMetricEventDispatcher *metricEventDispatcher

  // instance methods
  -[HMAccessorySettingsMetricsDispatcher startEventWithMessage:]
  -[HMAccessorySettingsMetricsDispatcher finishTrackingEventWithIdentifier:]
  -[HMAccessorySettingsMetricsDispatcher .cxx_destruct]
  -[HMAccessorySettingsMetricsDispatcher startTrackingEvent:withEventIdentifier:]
  -[HMAccessorySettingsMetricsDispatcher metricEventDispatcher]
  -[HMAccessorySettingsMetricsDispatcher initWithCoreAnalyticsMetricDispatcher:]
  -[HMAccessorySettingsMetricsDispatcher submitEventWithMessage:error:]


HMPerson : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *UUID
 @property  NSString *name
 @property  NSSet *personLinks
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMPerson supportsSecureCoding]
  +[HMPerson shortDescription]

  // instance methods
  -[HMPerson UUID]
  -[HMPerson name]
  -[HMPerson privateDescription]
  -[HMPerson initWithCoder:]
  -[HMPerson .cxx_destruct]
  -[HMPerson initWithUUID:]
  -[HMPerson setName:]
  -[HMPerson attributeDescriptions]
  -[HMPerson isEqual:]
  -[HMPerson mutableCopyWithZone:]
  -[HMPerson shortDescription]
  -[HMPerson copyWithZone:]
  -[HMPerson encodeWithCoder:]
  -[HMPerson setUUID:]
  -[HMPerson personLinks]
  -[HMPerson setPersonLinks:]


HMMutablePerson : HMPerson
 @property  NSUUID *UUID
 @property  NSString *name
 @property  NSSet *personLinks

  // instance methods
  -[HMMutablePerson copyWithZone:]


HMAccessCodeModificationResponse : NSObject
 @property  HMAccessory *accessory
 @property  HMAccessoryAccessCode *accessoryAccessCode
 @property  HMAccessCodeValue *accessCodeValue
 @property  long long operationType
 @property  NSError *error

  // class methods
  +[HMAccessCodeModificationResponse responseWithValue:accessory:]

  // instance methods
  -[HMAccessCodeModificationResponse accessory]
  -[HMAccessCodeModificationResponse operationType]
  -[HMAccessCodeModificationResponse .cxx_destruct]
  -[HMAccessCodeModificationResponse setError:]
  -[HMAccessCodeModificationResponse error]
  -[HMAccessCodeModificationResponse accessCodeValue]
  -[HMAccessCodeModificationResponse setAccessCodeValue:]
  -[HMAccessCodeModificationResponse accessoryAccessCode]
  -[HMAccessCodeModificationResponse initWithAccessory:accessoryAccessCode:accessCodeValue:operationType:error:]
  -[HMAccessCodeModificationResponse setAccessoryAccessCode:]


HMImmutableSettingValueEvent : HMEEvent
 @property  HMImmutableSettingValue *settingValue

  // class methods
  +[HMImmutableSettingValueEvent decodeSettingValueFromEvent:error:]

  // instance methods
  -[HMImmutableSettingValueEvent encodedData]
  -[HMImmutableSettingValueEvent .cxx_destruct]
  -[HMImmutableSettingValueEvent settingValue]
  -[HMImmutableSettingValueEvent initSettingValue:eventSource:eventTimestamp:]


HMAccessoryInvitation : NSObject <NSSecureCoding, HMObjectMerge>
 @property  NSUUID *identifier
 @property  HMAccessory *accessory
 @property  long long state
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessoryInvitation supportsSecureCoding]

  // instance methods
  -[HMAccessoryInvitation accessory]
  -[HMAccessoryInvitation setAccessory:]
  -[HMAccessoryInvitation uniqueIdentifier]
  -[HMAccessoryInvitation initWithCoder:]
  -[HMAccessoryInvitation .cxx_destruct]
  -[HMAccessoryInvitation setState:]
  -[HMAccessoryInvitation identifier]
  -[HMAccessoryInvitation state]
  -[HMAccessoryInvitation setIdentifier:]
  -[HMAccessoryInvitation encodeWithCoder:]
  -[HMAccessoryInvitation _mergeWithNewObject:]
  -[HMAccessoryInvitation initWithAccessory:identifier:state:]


HMSignificantTimeEvent : HMTimeEvent <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  NSString *significantEvent
 @property  NSDateComponents *offset

  // class methods
  +[HMSignificantTimeEvent supportsSecureCoding]
  +[HMSignificantTimeEvent createWithDictionary:home:]

  // instance methods
  -[HMSignificantTimeEvent initWithCoder:]
  -[HMSignificantTimeEvent offset]
  -[HMSignificantTimeEvent .cxx_destruct]
  -[HMSignificantTimeEvent mutableCopyWithZone:]
  -[HMSignificantTimeEvent setOffset:]
  -[HMSignificantTimeEvent copyWithZone:]
  -[HMSignificantTimeEvent encodeWithCoder:]
  -[HMSignificantTimeEvent _serializeForAdd]
  -[HMSignificantTimeEvent _updateFromDictionary:]
  -[HMSignificantTimeEvent _mergeWithNewObject:]
  -[HMSignificantTimeEvent significantEvent]
  -[HMSignificantTimeEvent setSignificantEvent:]
  -[HMSignificantTimeEvent updateSignificantEvent:completionHandler:]
  -[HMSignificantTimeEvent initWithDict:significantEvent:offset:]
  -[HMSignificantTimeEvent initWithSignificantEvent:offset:]
  -[HMSignificantTimeEvent updateOffset:completionHandler:]


HMMutableSignificantTimeEvent : HMSignificantTimeEvent
 @property  NSString *significantEvent
 @property  NSDateComponents *offset


HMAccessorySettingsAdapter : NSObject <HMAccessorySettingsDataSourceDelegate>
 @property  HMAccessorySettingGroup *rootGroup
 @property  HMAccessorySettingsDataSource *accessoryDataSource
 @property  HMAccessorySettingsController *accessorySettingsController
 @property  NSUUID *homeIdentifier
 @property  NSUUID *accessoryIdentifier
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMAccessory *accessory
 @property  HMAccessorySettings *accessorySettings
 @property  _HMContext *accessoryContext
 @property  HMLanguageValueListSetting *availableLanguageSetting
 @property  HMLanguageSetting *selectedLanguageSetting
 @property  NSArray *tapAssistanceSelections
 @property  <HMAccessorySettingsAdapterDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessorySettingsAdapter logCategory]
  +[HMAccessorySettingsAdapter defaultSettings]
  +[HMAccessorySettingsAdapter languageKeyPaths]
  +[HMAccessorySettingsAdapter selectedLanguageSettingKeyPath]
  +[HMAccessorySettingsAdapter defaultSettingsContainsKeyPath:]
  +[HMAccessorySettingsAdapter isKeyPathForBooleanSettingType:]
  +[HMAccessorySettingsAdapter isKeyPathForConstrainedNumberSettingType:]
  +[HMAccessorySettingsAdapter scaleUpNumberSettingValue:]
  +[HMAccessorySettingsAdapter isKeyPathForTapAssistanceSelectionSettingType:]
  +[HMAccessorySettingsAdapter scaleDownNumberSettingValue:]
  +[HMAccessorySettingsAdapter availableLanguagesKeyPath]
  +[HMAccessorySettingsAdapter tapAssistanceSelectionTitles]
  +[HMAccessorySettingsAdapter constraintSettingScaleFactor]
  +[HMAccessorySettingsAdapter tapAssistanceSelectionItemWithIndex:]
  +[HMAccessorySettingsAdapter itemIndexWithTapAssistanceSelectionItem:]
  +[HMAccessorySettingsAdapter defaultSettingsConstraintsForKeyPath:]
  +[HMAccessorySettingsAdapter defaultSettingsAllKeyPaths]

  // instance methods
  -[HMAccessorySettingsAdapter accessory]
  -[HMAccessorySettingsAdapter accessorySettingsDataSource:didReceiveSettingsUpdatesForAccessoryWithIdentifier:settings:]
  -[HMAccessorySettingsAdapter homeIdentifier]
  -[HMAccessorySettingsAdapter .cxx_destruct]
  -[HMAccessorySettingsAdapter setDelegate:]
  -[HMAccessorySettingsAdapter accessoryIdentifier]
  -[HMAccessorySettingsAdapter rootGroup]
  -[HMAccessorySettingsAdapter workQueue]
  -[HMAccessorySettingsAdapter delegate]
  -[HMAccessorySettingsAdapter setRootGroup:]
  -[HMAccessorySettingsAdapter accessorySettingWithKeyPath:]
  -[HMAccessorySettingsAdapter createRootSettingGroup]
  -[HMAccessorySettingsAdapter accessorySettings]
  -[HMAccessorySettingsAdapter accessoryDataSource]
  -[HMAccessorySettingsAdapter _transformAccessorySettingToLanguageSetting:]
  -[HMAccessorySettingsAdapter accessorySettingsController]
  -[HMAccessorySettingsAdapter setSelectedLanguageSetting:]
  -[HMAccessorySettingsAdapter selectedLanguageSetting]
  -[HMAccessorySettingsAdapter availableLanguageSetting]
  -[HMAccessorySettingsAdapter _addOrUpdateLanguageSetting:availableLanguagesSetting:]
  -[HMAccessorySettingsAdapter updateBooleanSettingWithKeyPath:value:]
  -[HMAccessorySettingsAdapter updateNumberSettingWithKeyPath:value:]
  -[HMAccessorySettingsAdapter transformSelectionToInteger:integerValue:]
  -[HMAccessorySettingsAdapter updateTapAssistanceSelectionSettingWithKeyPath:value:]
  -[HMAccessorySettingsAdapter createKeyPathArrayWithKeyPath:]
  -[HMAccessorySettingsAdapter setAccessorySettings:]
  -[HMAccessorySettingsAdapter appendKeyPath:withNextKey:]
  -[HMAccessorySettingsAdapter createTapAssistanceSelections]
  -[HMAccessorySettingsAdapter setTapAssistanceSelections:]
  -[HMAccessorySettingsAdapter groupKeyArrayFromKeyPath:]
  -[HMAccessorySettingsAdapter findOrAddAccessorySettingGroupWithKeyPath:]
  -[HMAccessorySettingsAdapter settingKeyFromKeyPath:]
  -[HMAccessorySettingsAdapter createTapAssistanceSelectionSettingFromNumberConstraint:properties:value:min:max:step:]
  -[HMAccessorySettingsAdapter accessoryContext]
  -[HMAccessorySettingsAdapter isValidSelectionItemNumberConstraintValue:min:max:step:]
  -[HMAccessorySettingsAdapter tapAssistanceSelections]
  -[HMAccessorySettingsAdapter tapAssistanceSelectionSetting:]
  -[HMAccessorySettingsAdapter transformIntegerToSelection:]
  -[HMAccessorySettingsAdapter _handleLanguageSettingUpdate:]
  -[HMAccessorySettingsAdapter setAvailableLanguageSetting:]
  -[HMAccessorySettingsAdapter _findSettingInGroupForKeyPath:group:]
  -[HMAccessorySettingsAdapter legacyLanguageSettingFromSelectedSetting:selections:]
  -[HMAccessorySettingsAdapter languageSelectionItemFromValue:]
  -[HMAccessorySettingsAdapter initWithHomeIdentifier:accessoryIdentifier:dataSource:controller:workQueue:accessory:context:]
  -[HMAccessorySettingsAdapter configureWithCompletionHandler:]
  -[HMAccessorySettingsAdapter updateWithKeyPath:value:completionHandler:]
  -[HMAccessorySettingsAdapter accessoryNumberSettingWithKeyPath:]
  -[HMAccessorySettingsAdapter booleanSettingValueWithKeyPath:]
  -[HMAccessorySettingsAdapter accessoryLanguageSetting]
  -[HMAccessorySettingsAdapter numberSettingValueWithKeyPath:]
  -[HMAccessorySettingsAdapter tapAssistanceSelectionSettingValue:]


HMCameraProfile : HMAccessoryProfile <HMFLogging>
 @property  _HMCameraProfile *cameraProfile
 @property  HMCameraStreamControl *streamControl
 @property  HMCameraSnapshotControl *snapshotControl
 @property  HMCameraSettingsControl *settingsControl
 @property  HMCameraAudioControl *speakerControl
 @property  HMCameraAudioControl *microphoneControl
 @property  HMCameraUserSettings *userSettings
 @property  <HMCameraProfileUserSettingsDelegate> *userSettingsDelegate
 @property  HMCameraClipManager *clipManager
 @property  HMCameraRecordingReachabilityEventManager *reachabilityEventManager
 @property  HMCameraRecordingEventManager *recordingEventManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraProfile logCategory]

  // instance methods
  -[HMCameraProfile userSettings]
  -[HMCameraProfile services]
  -[HMCameraProfile .cxx_destruct]
  -[HMCameraProfile logIdentifier]
  -[HMCameraProfile _mergeWithNewObject:]
  -[HMCameraProfile streamControl]
  -[HMCameraProfile clipManager]
  -[HMCameraProfile reachabilityEventManager]
  -[HMCameraProfile settingsControl]
  -[HMCameraProfile setSettingsControl:]
  -[HMCameraProfile microphoneControl]
  -[HMCameraProfile speakerControl]
  -[HMCameraProfile recordingEventManager]
  -[HMCameraProfile cameraProfile]
  -[HMCameraProfile snapshotControl]
  -[HMCameraProfile userSettingsDelegate]
  -[HMCameraProfile initWithCameraProfile:]
  -[HMCameraProfile setStreamControl:]
  -[HMCameraProfile setSnapshotControl:]
  -[HMCameraProfile setSpeakerControl:]
  -[HMCameraProfile setMicrophoneControl:]
  -[HMCameraProfile setUserSettingsDelegate:]


HMCalendarEvent : HMTimeEvent <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  NSDateComponents *fireDateComponents

  // class methods
  +[HMCalendarEvent supportsSecureCoding]
  +[HMCalendarEvent createWithDictionary:home:]

  // instance methods
  -[HMCalendarEvent initWithCoder:]
  -[HMCalendarEvent .cxx_destruct]
  -[HMCalendarEvent mutableCopyWithZone:]
  -[HMCalendarEvent copyWithZone:]
  -[HMCalendarEvent encodeWithCoder:]
  -[HMCalendarEvent _serializeForAdd]
  -[HMCalendarEvent _updateFromDictionary:]
  -[HMCalendarEvent _mergeWithNewObject:]
  -[HMCalendarEvent initWithDict:fireDateComponents:]
  -[HMCalendarEvent fireDateComponents]
  -[HMCalendarEvent setFireDateComponents:]
  -[HMCalendarEvent initWithFireDateComponents:]
  -[HMCalendarEvent updateFireDateComponents:completionHandler:]


HMMutableCalendarEvent : HMCalendarEvent
 @property  NSDateComponents *fireDateComponents


HMAddAccessoryRequest : NSObject <HMFObject, NSSecureCoding>
 @property  HMHome *home
 @property  NSUUID *requestIdentifier
 @property  HMSetupAccessoryDescription *accessoryDescription
 @property  NSString *accessoryName
 @property  HMAccessoryCategory *accessoryCategory
 @property  BOOL requiresSetupPayloadURL
 @property  BOOL requiresOwnershipToken
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAddAccessoryRequest supportsSecureCoding]
  +[HMAddAccessoryRequest shortDescription]

  // instance methods
  -[HMAddAccessoryRequest home]
  -[HMAddAccessoryRequest requestIdentifier]
  -[HMAddAccessoryRequest accessoryCategory]
  -[HMAddAccessoryRequest privateDescription]
  -[HMAddAccessoryRequest initWithCoder:]
  -[HMAddAccessoryRequest .cxx_destruct]
  -[HMAddAccessoryRequest attributeDescriptions]
  -[HMAddAccessoryRequest isEqual:]
  -[HMAddAccessoryRequest setHome:]
  -[HMAddAccessoryRequest accessoryName]
  -[HMAddAccessoryRequest shortDescription]
  -[HMAddAccessoryRequest encodeWithCoder:]
  -[HMAddAccessoryRequest requiresSetupPayloadURL]
  -[HMAddAccessoryRequest payloadWithOwnershipToken:]
  -[HMAddAccessoryRequest payloadWithURL:ownershipToken:]
  -[HMAddAccessoryRequest initWithIdentifer:accessoryName:accessoryCategory:]
  -[HMAddAccessoryRequest requiresOwnershipToken]
  -[HMAddAccessoryRequest accessoryDescription]
  -[HMAddAccessoryRequest setAccessoryDescription:]


HMAsset : NSObject
 @property  NSDictionary *dictionaryRepresentation
 @property  NSString *identifier
 @property  NSDictionary *metadata
 @property  NSURL *resourceURL

  // class methods
  +[HMAsset supportsSecureCoding]

  // instance methods
  -[HMAsset initWithCoder:]
  -[HMAsset .cxx_destruct]
  -[HMAsset dictionaryRepresentation]
  -[HMAsset isEqual:]
  -[HMAsset identifier]
  -[HMAsset metadata]
  -[HMAsset resourceURL]
  -[HMAsset encodeWithCoder:]
  -[HMAsset initWithIdentifier:metadata:resourceURL:]


HMDeviceSetupOperation : NSOperation <HMDeviceSetupSessionDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMDeviceSetupSession *setupSession
 @property  BOOL executing
 @property  BOOL finished
 @property  TRSession *session
 @property  NSError *error
 @property  HMAccessory *accessory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDeviceSetupOperation automaticallyNotifiesObserversForKey:]
  +[HMDeviceSetupOperation logCategory]

  // instance methods
  -[HMDeviceSetupOperation initWithSession:]
  -[HMDeviceSetupOperation isAsynchronous]
  -[HMDeviceSetupOperation setFinished:]
  -[HMDeviceSetupOperation accessory]
  -[HMDeviceSetupOperation clientQueue]
  -[HMDeviceSetupOperation setAccessory:]
  -[HMDeviceSetupOperation isFinished]
  -[HMDeviceSetupOperation .cxx_destruct]
  -[HMDeviceSetupOperation isExecuting]
  -[HMDeviceSetupOperation setQualityOfService:]
  -[HMDeviceSetupOperation setExecuting:]
  -[HMDeviceSetupOperation init]
  -[HMDeviceSetupOperation cancel]
  -[HMDeviceSetupOperation finish]
  -[HMDeviceSetupOperation start]
  -[HMDeviceSetupOperation cancelWithError:]
  -[HMDeviceSetupOperation dealloc]
  -[HMDeviceSetupOperation logIdentifier]
  -[HMDeviceSetupOperation session]
  -[HMDeviceSetupOperation setError:]
  -[HMDeviceSetupOperation error]
  -[HMDeviceSetupOperation setupSession]
  -[HMDeviceSetupOperation setupSession:didCloseWithError:]
  -[HMDeviceSetupOperation setupSession:didReceiveExchangeData:completionHandler:]


HMAccessoryAllowedHost : HMFObject <NSSecureCoding>
 @property  NSString *name
 @property  unsigned long purpose
 @property  NSString *address
 @property  NSSet *addresses
 @property  BOOL unrestricted

  // class methods
  +[HMAccessoryAllowedHost supportsSecureCoding]

  // instance methods
  -[HMAccessoryAllowedHost purpose]
  -[HMAccessoryAllowedHost addresses]
  -[HMAccessoryAllowedHost name]
  -[HMAccessoryAllowedHost initWithCoder:]
  -[HMAccessoryAllowedHost .cxx_destruct]
  -[HMAccessoryAllowedHost address]
  -[HMAccessoryAllowedHost encodeWithCoder:]
  -[HMAccessoryAllowedHost isUnrestricted]


HMCoreAnalyticsIntegerFieldData : HMCoreAnalyticsFieldData
  // instance methods
  -[HMCoreAnalyticsIntegerFieldData initWithName:integerValue:]


HMHome : NSObject <HMSiriEndpointProfilesMessengerFactory, HMFLogging, HMMutableApplicationData, HMObjectMerge, HMFMessageReceiver, NSSecureCoding>
 @property  BOOL hasOnboardedForAccessCode
 @property  NSString *walletKeyPassSerialNumber
 @property  BOOL hasOnboardedForWalletKey
 @property  NSArray *accessories
 @property  BOOL supportsAddingNetworkRouter
 @property  NSArray *rooms
 @property  NSArray *zones
 @property  NSArray *serviceGroups
 @property  HMUser *currentUser
 @property  NSArray *users
 @property  NSArray *actionSets
 @property  NSArray *triggers
 @property  BOOL automaticSoftwareUpdateEnabled
 @property  BOOL automaticThirdPartyAccessorySoftwareUpdateEnabled
 @property  long long minimumMediaUserPrivilege
 @property  BOOL mediaPeerToPeerEnabled
 @property  NSString *mediaPassword
 @property  long long protectionMode
 @property  NSArray *accessoryProtectionGroups
 @property  unsigned long networkRouterSupportDisableReason
 @property  unsigned long networkRouterSupport
 @property  NSUUID *threadNetworkCredentialsUUID
 @property  NSString *threadNetworkID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMHomePersonManager *personManager
 @property  HMHomePersonManagerSettings *personManagerSettings
 @property  HMPersonSettingsManager *personSettingsManager
 @property  NSString *name
 @property  CLLocation *homeLocation
 @property  HMUser *currentUser
 @property  HMMutableArray *currentRooms
 @property  HMMutableArray *currentZones
 @property  HMMutableArray *currentServiceGroups
 @property  HMMutableArray *currentTriggerOwnedActionSets
 @property  HMMutableArray *currentTriggers
 @property  HMMutableArray *currentUsers
 @property  HMMutableArray *currentResidentDevices
 @property  HMMutableArray *currentOutgoingInvitations
 @property  BOOL automaticSoftwareUpdateEnabled
 @property  BOOL automaticThirdPartyAccessorySoftwareUpdateEnabled
 @property  long long minimumMediaUserPrivilege
 @property  BOOL mediaPeerToPeerEnabled
 @property  NSString *mediaPassword
 @property  BOOL ownerUser
 @property  BOOL adminUser
 @property  NSDate *notificationsUpdatedTime
 @property  long long locationAuthorization
 @property  BOOL notificationEnableRequested
 @property  BOOL notificationEnableRequestedForAppleMediaAccessories
 @property  BOOL multiUserEnabled
 @property  BOOL hasAnyUserAcknowledgedCameraRecordingOnboarding
 @property  NSOperationQueue *shareWithHomeOwnerOperationQueue
 @property  long long protectionMode
 @property  unsigned long networkRouterSupport
 @property  unsigned long networkRouterSupportDisableReason
 @property  HMMutableArray *currentAccessoryProtectionGroups
 @property  NSString *threadNetworkID
 @property  NSArray *managedTriggers
 @property  NSString *assistantIdentifier
 @property  BOOL soundCheckEnabled
 @property  BOOL locationServicesEnabled
 @property  BOOL didOnboardLocationServices
 @property  _HMContext *context
 @property  HMHomeManager *homeManager
 @property  NSUUID *uuid
 @property  HMRoom *homeAsRoom
 @property  BOOL primary
 @property  BOOL notificationsEnabled
 @property  HMMutableArray *currentActionSets
 @property  HMMutableArray *currentMediaSystems
 @property  NSArray *triggerOwnedActionSets
 @property  HMFMessageDestination *messageDestination
 @property  HMMutableArray *currentAccessories
 @property  long long homeLocationStatus
 @property  HMHomePersonManager *personManager
 @property  HMHomePersonManagerSettings *personManagerSettings
 @property  HMPersonSettingsManager *personSettingsManager
 @property  BOOL isUpdatedToROAR
 @property  BOOL bulletinNotificationsSupported
 @property  HMFVersion *supportedSiriEndPointVersion
 @property  BOOL hasOnboardedForAccessCode
 @property  BOOL hasOnboardedForWalletKey
 @property  NSSet *supportedFeatures
 @property  <HMHomeDelegate> *delegate
 @property  unsigned long homeHubState
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *applicationDataIdentifier
 @property  HMApplicationData *applicationData
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMHome supportsSecureCoding]
  +[HMHome logCategory]
  +[HMHome passSerialNumberWithHomeUUID:userUUID:]
  +[HMHome errorByDeviceWithOverallError:]
  +[HMHome isValidMediaPassword:error:]
  +[HMHome accessorySupportsMediaAccessControl:]
  +[HMHome generateMediaPasswordWithError:]

  // instance methods
  -[HMHome setNotificationsEnabled:]
  -[HMHome homeManager]
  -[HMHome setPrimary:]
  -[HMHome triggers]
  -[HMHome name]
  -[HMHome uniqueIdentifier]
  -[HMHome zones]
  -[HMHome initWithCoder:]
  -[HMHome updateSoundCheckEnabled:completion:]
  -[HMHome rooms]
  -[HMHome setLocationServicesEnabled:]
  -[HMHome setLocationAuthorization:]
  -[HMHome outgoingInvitations]
  -[HMHome .cxx_destruct]
  -[HMHome _unconfigure]
  -[HMHome isMediaPeerToPeerEnabled]
  -[HMHome minimumMediaUserPrivilege]
  -[HMHome mediaPassword]
  -[HMHome setName:]
  -[HMHome homeAccessControlForUser:]
  -[HMHome mediaSystems]
  -[HMHome setDelegate:]
  -[HMHome isLocationServicesEnabled]
  -[HMHome isPrimary]
  -[HMHome setHomeManager:]
  -[HMHome init]
  -[HMHome owner]
  -[HMHome assistantIdentifier]
  -[HMHome setSupportedFeatures:]
  -[HMHome soundCheckEnabled]
  -[HMHome isUpdatedToROAR]
  -[HMHome supportedFeatures]
  -[HMHome enableMultiUserWithCompletionHandler:]
  -[HMHome location]
  -[HMHome locationAuthorization]
  -[HMHome currentUser]
  -[HMHome messageReceiveQueue]
  -[HMHome setCurrentUser:]
  -[HMHome uuid]
  -[HMHome delegate]
  -[HMHome accessoryWithUniqueIdentifier:]
  -[HMHome setContext:]
  -[HMHome actionSets]
  -[HMHome messageTargetUUID]
  -[HMHome logIdentifier]
  -[HMHome _privateDelegate]
  -[HMHome setAssistantIdentifier:]
  -[HMHome applicationData]
  -[HMHome setApplicationData:]
  -[HMHome accessories]
  -[HMHome messageDestination]
  -[HMHome roomForEntireHome]
  -[HMHome setSoundCheckEnabled:]
  -[HMHome addAccessory:completionHandler:]
  -[HMHome addRoomWithName:completionHandler:]
  -[HMHome assignAccessory:toRoom:completionHandler:]
  -[HMHome updateApplicationData:completionHandler:]
  -[HMHome encodeWithCoder:]
  -[HMHome users]
  -[HMHome context]
  -[HMHome serviceGroups]
  -[HMHome administrator]
  -[HMHome _notifyDelegateOfTriggerUpdated:]
  -[HMHome _mergeWithNewObject:]
  -[HMHome __locationAuthorizationUpdated:]
  -[HMHome _unconfigureContext]
  -[HMHome enableNotification:forCharacteristics:completionHandler:]
  -[HMHome mergeWithNewObjectNoMergeCount:]
  -[HMHome accessoryWithUUID:]
  -[HMHome updateAccessForUser:administrator:completionHandler:]
  -[HMHome updateAccessForUser:remoteAccess:completionHandler:]
  -[HMHome updateAccessForUser:camerasAccessLevel:completionHandler:]
  -[HMHome updateAccessForUser:announceAccess:completionHandler:]
  -[HMHome setHasOnboardedForAccessCode:]
  -[HMHome createAccessCodeManager]
  -[HMHome setHasOnboardedForAccessCodeWithCompletion:]
  -[HMHome hasOnboardedForAccessCode]
  -[HMHome _registerNotificationHandlers]
  -[HMHome unconfigure]
  -[HMHome setHasOnboardedForWalletKey:]
  -[HMHome addWalletKeyWithOptions:completionHandler:]
  -[HMHome fetchExistingWalletKeyUUIDWithCompletion:]
  -[HMHome fetchWalletKeyDeviceStateWithCompletion:]
  -[HMHome fetchWalletKeyEncodedPKPassWithIgnoredErrorCodes:completion:]
  -[HMHome fetchWalletKeyDeviceStateForPairedWatchesWithCompletion:]
  -[HMHome walletKeyPassSerialNumber]
  -[HMHome setHasOnboardedForWalletKeyWithCompletion:]
  -[HMHome addWalletKeyWithOptions:completion:]
  -[HMHome fetchHasWalletKeyWithCompletion:]
  -[HMHome addWalletKeyToPairedWatchesWithOptions:completion:]
  -[HMHome enableExpressForWalletKeyWithAuthData:completion:]
  -[HMHome fetchWalletKeyCustomURLWithCompletion:]
  -[HMHome fetchWalletKeyEncodedPKPass:]
  -[HMHome fetchAvailableWalletKeyEncodedPKPass:]
  -[HMHome fetchIsExpressEnabledForWalletKeyWithCompletion:]
  -[HMHome fetchWalleKeyExpressEnablementConflictingPassDescription:]
  -[HMHome fetchWalletKeyColorWithCompletion:]
  -[HMHome fetchIsWalletKeySupportedWithCompletion:]
  -[HMHome fetchIsWalletKeySupportedOnAnyPairedWatchWithCompletion:]
  -[HMHome hasOnboardedForWalletKey]
  -[HMHome currentActionSets]
  -[HMHome _recomputeAssistantIdentifier]
  -[HMHome _removeActionSet:completionHandler:]
  -[HMHome createAndAddActionSetWithName:type:uuid:]
  -[HMHome triggerOwnedActionSets]
  -[HMHome recomputeAssistantIdentifier]
  -[HMHome removeActionSet:completionHandler:]
  -[HMHome updateName:completionHandler:]
  -[HMHome setCurrentActionSets:]
  -[HMHome residentDevices]
  -[HMHome personManagerSettings]
  -[HMHome updatePersonManagerSettings:completion:]
  -[HMHome fetchSettingsForLightProfiles:withCompletion:]
  -[HMHome mediaProfileWithUUID:]
  -[HMHome mediaProfileWithProfileUUID:]
  -[HMHome _cancelInvitation:completionHandler:]
  -[HMHome _acceptInvitation:completionHandler:]
  -[HMHome __configureWithContext:homeManager:]
  -[HMHome _updateName:completionHandler:]
  -[HMHome updateApplicationData:forRoom:completionHandler:]
  -[HMHome notifyDelegateOfAppDataUpdateForRoom:]
  -[HMHome applicationDataIdentifier]
  -[HMHome joinThreadNetworkWithCompletion:]
  -[HMHome joinThreadNetwork:withCompletion:]
  -[HMHome unjoinThreadNetworkWithCompletion:]
  -[HMHome updateApplicationData:forServiceGroup:completionHandler:]
  -[HMHome initWithName:uuid:]
  -[HMHome notifyDelegateOfAppDataUpdateForServiceGroup:]
  -[HMHome _removeServices:]
  -[HMHome lightProfileWithProfileUUID:]
  -[HMHome setHomeAsRoom:]
  -[HMHome homeAsRoom]
  -[HMHome _setupBuiltinActionSets:]
  -[HMHome currentRooms]
  -[HMHome currentZones]
  -[HMHome currentTriggerOwnedActionSets]
  -[HMHome currentTriggers]
  -[HMHome currentServiceGroups]
  -[HMHome currentAccessories]
  -[HMHome currentUsers]
  -[HMHome currentResidentDevices]
  -[HMHome currentMediaSystems]
  -[HMHome shareWithHomeOwnerOperationQueue]
  -[HMHome accessoryProtectionGroups]
  -[HMHome sendConfigureBulletinNotification]
  -[HMHome homeLocation]
  -[HMHome homeLocationStatus]
  -[HMHome __updateLocation:locationStatus:]
  -[HMHome configurePersonManagerWithSettings:]
  -[HMHome createActionSetWithName:type:uuid:]
  -[HMHome _mergeCurrentHomeRoomsWithNewHomeRooms:]
  -[HMHome _mergeCurrentHomeZonesWithNewHomeZones:]
  -[HMHome _mergeCurrentHomeAccessoriesWithNewHomeAccessories:]
  -[HMHome _mergeCurrentHomeServiceGroupsWithNewHomeServiceGroups:]
  -[HMHome _mergeCurrentHomeActionSetsWithNewHomeActionSets:]
  -[HMHome _mergeCurrentHomeTriggerOwnedActionSetsWithNewHomeActionSets:]
  -[HMHome _mergeCurrentHomeTriggersWithNewHomeTriggers:]
  -[HMHome _mergeCurrentHomeUsersWithNewHomeUsers:]
  -[HMHome _mergeCurrentHomeResidentDevicesWithNewHomeResidentDevices:]
  -[HMHome _mergeCurrentHomeInvitationsWithNewHomeInvitations:]
  -[HMHome _mergeCurrentHomeMediaSystemsWithNewMediaSystems:]
  -[HMHome _mergeCurrentHomeAccessoryNetworkProtectionGroupsWithNewAccessoryNetworkProtectionGroups:]
  -[HMHome didOnboardLocationServices]
  -[HMHome setDidOnboardLocationServices:]
  -[HMHome multiUserEnabled]
  -[HMHome setMultiUserEnabled:]
  -[HMHome hasAnyUserAcknowledgedCameraRecordingOnboarding]
  -[HMHome setHasAnyUserAcknowledgedCameraRecordingOnboarding:]
  -[HMHome _notifyDelegateOfAppDataUpdate]
  -[HMHome homeHubState]
  -[HMHome _notifyDelegateOfHomeHubStateUpdate]
  -[HMHome isAdminUser]
  -[HMHome setAdminUser:]
  -[HMHome isOwnerUser]
  -[HMHome setOwnerUser:]
  -[HMHome areNotificationsEnabled]
  -[HMHome notificationsUpdatedTime]
  -[HMHome setNotificationsUpdatedTime:]
  -[HMHome isAutomaticSoftwareUpdateEnabled]
  -[HMHome setAutomaticSoftwareUpdateEnabled:]
  -[HMHome isAutomaticThirdPartyAccessorySoftwareUpdateEnabled]
  -[HMHome setAutomaticThirdPartyAccessorySoftwareUpdateEnabled:]
  -[HMHome setMinimumMediaUserPrivilege:]
  -[HMHome setMediaPeerToPeerEnabled:]
  -[HMHome setMediaPassword:]
  -[HMHome protectionMode]
  -[HMHome setProtectionMode:]
  -[HMHome networkRouterSupportDisableReason]
  -[HMHome setNetworkRouterSupportDisableReason:]
  -[HMHome networkRouterSupport]
  -[HMHome setNetworkRouterSupport:]
  -[HMHome _didUpdateNetworkRouterSupport]
  -[HMHome _notifyUpdatedSupportedFeatures]
  -[HMHome setPersonManagerSettings:]
  -[HMHome supportedSiriEndPointVersion]
  -[HMHome setSupportedSiriEndPointVersion:]
  -[HMHome areBulletinNotificationsSupported]
  -[HMHome setBulletinNotificationsSupported:]
  -[HMHome _mergeRoomsForMergeCollection:currentRooms:]
  -[HMHome roomWithUUID:]
  -[HMHome _mergeAccessoriesForMergeCollection:currentAccessories:]
  -[HMHome _notifyDelegateOfTriggerRemoved:]
  -[HMHome triggerOwnedActionSetWithUUID:]
  -[HMHome actionSetWithUUID:]
  -[HMHome _notifyDelegateOfTriggerAdded:]
  -[HMHome currentOutgoingInvitations]
  -[HMHome _configureOutgoingInvitation:]
  -[HMHome _notifyDelegateOfRemovedMediaSystem:]
  -[HMHome _notifyDelegateOfAddedMediaSystem:]
  -[HMHome currentAccessoryProtectionGroups]
  -[HMHome _didRemoveAccessoryNetworkProtectionGroup:]
  -[HMHome _didAddAccessoryNetworkProtectionGroup:]
  -[HMHome _didUpdateAccessoryNetworkProtectionGroup:]
  -[HMHome _handleHomeLocationUpdateNotificaton:]
  -[HMHome _handleAccessoryAddedNotification:]
  -[HMHome _handleAddAccessoryProgressNotification:]
  -[HMHome _handleUserAddedNotification:]
  -[HMHome _handleUserInvitationsUpdatedNotification:]
  -[HMHome _handleUpdatedPresenceComputeNotification:]
  -[HMHome _handleUserRemovedNotification:]
  -[HMHome _handleAccessoryErrorNotification:]
  -[HMHome _handleMultipleCharacteristicValuesUpdated:]
  -[HMHome _handleAccessorySetupCodeFailureMessage:]
  -[HMHome _handleUpdatedResidentDevice:]
  -[HMHome _handleNotificationsEnabled:]
  -[HMHome _handleAccessoryInfoUpdatedNotification:]
  -[HMHome _handleAccessoryReprovisionedNotification:]
  -[HMHome _handleAccessoryReprovisionStateUpdate:]
  -[HMHome _handleMediaSystemRemovedNotification:]
  -[HMHome _handleHomeHubStateUpdatedNotification:]
  -[HMHome _handleHomeNetworkRouterSupportUpdated:]
  -[HMHome _handleAccessoryNetworkProtectionGroupAddedNotification:]
  -[HMHome _handleAccessoryNetworkProtectionGroupRemovedNotification:]
  -[HMHome _handleHomeLocationStatusUpdateNotification:]
  -[HMHome _handleMultiUserEnabledChangeNotification:]
  -[HMHome _handleAccessoryConnectivityChangedNotification:]
  -[HMHome _handleDidAddWalletKeyMessage:]
  -[HMHome _handleDidRemoveWalletKeyMessage:]
  -[HMHome _handleHomeLocationUpdate:]
  -[HMHome _addTrigger:triggerUUID:completion:]
  -[HMHome triggerWithUUID:]
  -[HMHome _addIdentifier:bridgeUUID:]
  -[HMHome removeAccessory:completionHandler:]
  -[HMHome _callProgressHandler:updatingAccessoryDescription:fromMessage:]
  -[HMHome _startSearchForAccessoriesNeedingReprovisioning]
  -[HMHome handleStartWithError:response:]
  -[HMHome _reprovisionAccessory:completionHandler:]
  -[HMHome _findUserWithID:]
  -[HMHome __updateHomeAccessControlFromResponsePayload:forUser:]
  -[HMHome _retrieveLocation]
  -[HMHome _updateInvitation:invitationState:completionHandler:]
  -[HMHome _enableNotifications:includeAppleMediaAccessoryNotifications:completionHandler:]
  -[HMHome _enableNotification:forCharacteristics:completionHandler:]
  -[HMHome notificationEnableRequested]
  -[HMHome notificationEnableRequestedForAppleMediaAccessories]
  -[HMHome setNotificationEnableRequested:]
  -[HMHome setNotificationEnableRequestedForAppleMediaAccessories:]
  -[HMHome _handleRuntimeStateUpdate:reason:]
  -[HMHome _notifySetupFailedIfInHomeUIService:]
  -[HMHome setHomeLocationStatus:]
  -[HMHome _notifyDelegateOfUpdatedHomeLocationStatus]
  -[HMHome serviceGroupWithUUID:]
  -[HMHome _notifyDelegateOfAppDataUpdateForRoom:]
  -[HMHome _notifyDelegateOfAppDataUpdateForServiceGroup:]
  -[HMHome _notifyDelegateOfAppDataUpdateForActionSet:]
  -[HMHome _notifyDelegateOfAccessControlUpdateForUser:]
  -[HMHome _notifyDelegateOfAccesoryInvitationsUpdateForUser:]
  -[HMHome _removeIncompatibleTrigger:]
  -[HMHome updateApplicationData:forAppDataContainer:appDataContainerUUIDKeyName:completionHandler:]
  -[HMHome _updateApplicationData:forAppDataContainer:appDataContainerUUIDKeyName:completionHandler:]
  -[HMHome initWithName:uuid:homeAsRoomUUID:homeAsRoomName:actionSets:]
  -[HMHome _setSupportedFeature:enabled:]
  -[HMHome supportsAddingNetworkRouter]
  -[HMHome controlTargets]
  -[HMHome targetControllers]
  -[HMHome recomputeAssistantIdentifiersWithCompletion:]
  -[HMHome isMultiUserEnabled]
  -[HMHome setHasAnyUserAcknowledgedCameraRecordingOnboardingWithCompletionHandler:]
  -[HMHome updateLocationServicesEnabled:completion:]
  -[HMHome updateDidOnboardLocationServices:completion:]
  -[HMHome roomWithName:]
  -[HMHome zoneWithUUID:]
  -[HMHome zoneWithName:]
  -[HMHome serviceGroupWithName:]
  -[HMHome actionSetWithName:]
  -[HMHome triggerWithName:]
  -[HMHome userWithUUID:]
  -[HMHome profileWithUniqueIdentifier:]
  -[HMHome _addActionSetFromResponse:completion:]
  -[HMHome _handleActionSetRemovedFromResponse:responsePayload:]
  -[HMHome notifyDelegatesOfExecution:actionSet:]
  -[HMHome _addEventTriggerFromResponse:withEventTrigger:completion:]
  -[HMHome _addTimerTriggerFromResponse:withTimerTrigger:completion:]
  -[HMHome _removeTriggerFromResponse:completion:]
  -[HMHome _handleAccessoryRemovedResponse:]
  -[HMHome removeServices:]
  -[HMHome startSearchForAccessoriesNeedingReprovisioning]
  -[HMHome reprovisionAccessory:completionHandler:]
  -[HMHome updateForUser:presenceAuthorizationStatus:completionHandler:]
  -[HMHome enableNotifications:completionHandler:]
  -[HMHome enableNotifications:includeAppleMediaAccessoryNotifications:completionHandler:]
  -[HMHome reEnableNotifications]
  -[HMHome handleRuntimeStateUpdate:reason:]
  -[HMHome _getContainerForAppData:]
  -[HMHome notifyDelegateOfAppDataUpdateForActionSet:]
  -[HMHome _invokeDelegateForAppData:]
  -[HMHome notifyDelegateOfAccessControlUpdateForUser:]
  -[HMHome notifyDelegateOfAccesoryInvitationsUpdateForUser:]
  -[HMHome _notifyDelegateOfBulletinNotificationsSupportedUpdate]
  -[HMHome updateApplicationData:forActionSet:completionHandler:]
  -[HMHome personManager]
  -[HMHome setPersonManager:]
  -[HMHome personSettingsManager]
  -[HMHome mediaDestintionsWithSupportedOptions:]
  -[HMHome mediaDestintionsWithHomeTheaterSupportedOptions]
  -[HMHome fetchLastModifiedServiceOfType:completionHandler:]
  -[HMHome threadNetworkID]
  -[HMHome setThreadNetworkID:]
  -[HMHome managedTriggers]
  -[HMHome setManagedTriggers:]
  -[HMHome setIsUpdatedToROAR:]
  -[HMHome setCurrentServiceGroups:]
  -[HMHome setCurrentTriggerOwnedActionSets:]
  -[HMHome setCurrentTriggers:]
  -[HMHome setCurrentUsers:]
  -[HMHome setCurrentResidentDevices:]
  -[HMHome setCurrentOutgoingInvitations:]
  -[HMHome setShareWithHomeOwnerOperationQueue:]
  -[HMHome setCurrentAccessoryProtectionGroups:]
  -[HMHome setCurrentMediaSystems:]
  -[HMHome setCurrentAccessories:]
  -[HMHome __defaultProgressHandlerForAddAccessory]
  -[HMHome _addAccessory:accessoryDescription:password:setupCodeDeferred:progress:completionHandler:]
  -[HMHome addAccessory:password:progress:completionHandler:]
  -[HMHome _cancelPairingForAccessoryWithUUID:completionHandler:]
  -[HMHome _continuePairingForAccessoryWithUUID:setupCode:completionHandler:]
  -[HMHome establishShareWithHomeOwner:container:completionHandler:]
  -[HMHome establishShareWithHomeOwner:container:allowWriteAccess:completionHandler:]
  -[HMHome _startPairingWithAccessoryDescription:progressHandler:completionHandler:]
  -[HMHome userDidRespondToConsentRequestForSetupAccessoryDescription:withResponse:]
  -[HMHome _cancelPairingForAccessoryWithDescription:completionHandler:]
  -[HMHome _removeAccessory:completionHandler:]
  -[HMHome _assignAccessory:toRoom:completionHandler:]
  -[HMHome _performBatchRequest:activity:]
  -[HMHome _executeActionSet:activity:reportContext:completionHandler:]
  -[HMHome __handleExecuteRequest:activity:batchRequest:]
  -[HMHome __responseHandlerForRequests:progressHandler:completionHandler:activity:]
  -[HMHome _retrieveResultsWithReportingContext:progressHandler:completionHandler:activity:]
  -[HMHome addAccessory:password:completionHandler:]
  -[HMHome startPairingWithAccessory:accessorySetupDescription:progress:completionHandler:]
  -[HMHome cancelPairingForAccessoryWithUUID:completionHandler:]
  -[HMHome continuePairingForAccessoryWithUUID:setupCode:completionHandler:]
  -[HMHome addAndSetupAccessoriesWithCompletionHandler:]
  -[HMHome addAndSetupAccessoriesWithPayload:completionHandler:]
  -[HMHome addAndSetUpNewAccessoriesWithSuggestedRoomName:completionHandler:]
  -[HMHome shareWithHomeOwner:container:completionHandler:]
  -[HMHome addAccessoryWithAccessorySetupPayload:progress:completionHandler:]
  -[HMHome startDiscoveringSymptomsForNearbyDevices]
  -[HMHome stopDiscoveringSymptomsForNearbyDevices]
  -[HMHome startPairingWithAccessoryDescription:progress:completion:]
  -[HMHome cancelPairingForAccessoryWithDescription:completionHandler:]
  -[HMHome servicesWithTypes:]
  -[HMHome unblockAccessory:completionHandler:]
  -[HMHome performBatchCharacteristicRequest:]
  -[HMHome performBatchRequest:]
  -[HMHome retrieveResultsWithReportingContext:progressHandler:completionHandler:]
  -[HMHome _addRoomWithName:completionHandler:]
  -[HMHome _removeRoom:completionHandler:]
  -[HMHome removeRoom:completionHandler:]
  -[HMHome _addZoneWithName:completionHandler:]
  -[HMHome _removeZone:completionHandler:]
  -[HMHome addZoneWithName:completionHandler:]
  -[HMHome removeZone:completionHandler:]
  -[HMHome _addServiceGroupWithName:completionHandler:]
  -[HMHome _removeServiceGroup:completionHandler:]
  -[HMHome addServiceGroupWithName:completionHandler:]
  -[HMHome removeServiceGroup:completionHandler:]
  -[HMHome _manageUsersWithCompletionHandler:]
  -[HMHome _inviteWithUserInformation:completionHandler:]
  -[HMHome _removeUser:completionHandler:]
  -[HMHome _createFailedAccessoriesListFromError:]
  -[HMHome inviteUsersWithInviteInformation:completionHandler:]
  -[HMHome removeUser:completionHandler:]
  -[HMHome manageUsersWithCompletionHandler:]
  -[HMHome addUserWithCompletionHandler:]
  -[HMHome addUserWithoutConfirmation:privilege:completionHandler:]
  -[HMHome addUser:withCompletionHandler:]
  -[HMHome inviteUsers:completionHandler:]
  -[HMHome removeUserWithoutConfirmation:completionHandler:]
  -[HMHome _addActionSetWithName:completionHandler:]
  -[HMHome executeActions:completionHandler:]
  -[HMHome builtinActionSetOfType:]
  -[HMHome addActionSetWithName:completionHandler:]
  -[HMHome executeActionSet:completionHandler:]
  -[HMHome _addTrigger:completionHandler:]
  -[HMHome _removeTrigger:completionHandler:]
  -[HMHome _userDidConfirmExecution:ofTriggerWithIdentifier:completionHandler:]
  -[HMHome _removeMediaSystem:completionHandler:]
  -[HMHome addTrigger:completionHandler:]
  -[HMHome removeTrigger:completionHandler:]
  -[HMHome userDidConfirmExecution:ofTrigger:completionHandler:]
  -[HMHome userDidConfirmExecution:ofTriggerWithIdentifier:completionHandler:]
  -[HMHome removeMediaSystem:completionHandler:]
  -[HMHome queryRemoteAccessWithCompletionHandler:]
  -[HMHome enableRemoteAccess:completionHandler:]
  -[HMHome updateAutomaticSoftwareUpdateEnabled:completionHandler:]
  -[HMHome updateAutomaticThirdPartyAccessorySoftwareUpdateEnabled:completionHandler:]
  -[HMHome updateMinimumMediaUserPrivilege:completionHandler:]
  -[HMHome updateMediaPeerToPeerEnabled:completionHandler:]
  -[HMHome updateMediaPassword:completionHandler:]
  -[HMHome updateNetworkProtection:completionHandler:]
  -[HMHome updateAccessoryNetworkProtectionGroup:protectionMode:completion:]
  -[HMHome setNetworkRouterSupportMinimumHomeKitVersion:completionHandler:]
  -[HMHome setAccessoryNetworkProtectionChangeSupportMinHomeKitVersion:completionHandler:]
  -[HMHome userActionPredictionController]
  -[HMHome threadNetworkCredentialsUUID]
  -[HMHome resolveThreadNetworkCredentialsWithCompletion:]
  -[HMHome accessoryWithEndpointIdentifier:]
  -[HMHome accessoryWithSiriEndpointIdentifier:]
  -[HMHome accessoryWithIdsIdentifier:]
  -[HMHome retrieveHomeKitLocationForFeedbackWithCompletionHandler:]
  -[HMHome createSiriEndpointProfilesMessenger]
  -[HMHome photosPersonManagerWithUUID:]
  -[HMHome photosPersonManagerForUser:]
  -[HMHome personManagerWithUUID:]
  -[HMHome resetAndRemoveAllCHIPPairingsFromAccessory:completion:]


HMAccessorySettings : HMSettings <HMFLogging, HMObjectMerge>
 @property  _HMContext *context
 @property  <HMControllable> *settingsControl
 @property  <HMAccessorySettingsContainerInternal> *settingsContainerInternal
 @property  BOOL controllable
 @property  <HMAccessorySettingsDelegate> *delegate
 @property  HMAccessory *accessory
 @property  <HMAccessorySettingsContainer> *settingsContainer
 @property  HMAccessorySettingGroup *rootGroup
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[HMAccessorySettings logCategory]
  +[HMAccessorySettings localizationKeyForKeyPath:]

  // instance methods
  -[HMAccessorySettings accessory]
  -[HMAccessorySettings uniqueIdentifier]
  -[HMAccessorySettings .cxx_destruct]
  -[HMAccessorySettings setDelegate:]
  -[HMAccessorySettings _configureWithContext:]
  -[HMAccessorySettings isControllable]
  -[HMAccessorySettings rootGroup]
  -[HMAccessorySettings delegate]
  -[HMAccessorySettings context]
  -[HMAccessorySettings _mergeWithNewObject:]
  -[HMAccessorySettings settingsControl]
  -[HMAccessorySettings setSettingsControl:]
  -[HMAccessorySettings initWithSettingsContainer:settingsControl:rootGroup:]
  -[HMAccessorySettings setSettingsContainerInternal:]
  -[HMAccessorySettings _updateSettingsWithBlock:]
  -[HMAccessorySettings settingsContainer]
  -[HMAccessorySettings settingsContainerInternal]
  -[HMAccessorySettings _notifyDelegateDidUpdateKeyPath:]


HMCHIPEcosystemMessage : NSObject <HMFObject, NSSecureCoding>
 @property  NSString *messageType
 @property  NSUUID *uuid
 @property  NSExtensionItem *extensionItemRepresentation
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCHIPEcosystemMessage supportsSecureCoding]
  +[HMCHIPEcosystemMessage shortDescription]

  // instance methods
  -[HMCHIPEcosystemMessage messageType]
  -[HMCHIPEcosystemMessage privateDescription]
  -[HMCHIPEcosystemMessage initWithCoder:]
  -[HMCHIPEcosystemMessage .cxx_destruct]
  -[HMCHIPEcosystemMessage attributeDescriptions]
  -[HMCHIPEcosystemMessage init]
  -[HMCHIPEcosystemMessage isEqual:]
  -[HMCHIPEcosystemMessage uuid]
  -[HMCHIPEcosystemMessage shortDescription]
  -[HMCHIPEcosystemMessage encodeWithCoder:]
  -[HMCHIPEcosystemMessage extensionItemRepresentation]


HMSiriEndpointOnboardingSelections : NSObject <HMFLogging, HMFObject, HMMessageEncoding>
 @property  BOOL hasSiriEnabled
 @property  BOOL hasAllowHeySiri
 @property  BOOL hasAirPlayEnabled
 @property  BOOL hasShareSiriAnalyticsEnabled
 @property  BOOL hasExplicitContentAllowed
 @property  BOOL hasLanguageValue
 @property  BOOL hasAnnounceEnabled
 @property  BOOL hasDoorbellChimeEnabled
 @property  BOOL hasLightWhenUsingSiriEnabled
 @property  BOOL siriEnabled
 @property  BOOL allowHeySiri
 @property  BOOL airPlayEnabled
 @property  BOOL shareSiriAnalyticsEnabled
 @property  BOOL explicitContentAllowed
 @property  HMSettingLanguageValue *languageValue
 @property  BOOL doorbellChimeEnabled
 @property  BOOL announceEnabled
 @property  BOOL lightWhenUsingSiriEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMSiriEndpointOnboardingSelections logCategory]
  +[HMSiriEndpointOnboardingSelections shortDescription]

  // instance methods
  -[HMSiriEndpointOnboardingSelections privateDescription]
  -[HMSiriEndpointOnboardingSelections .cxx_destruct]
  -[HMSiriEndpointOnboardingSelections isSiriEnabled]
  -[HMSiriEndpointOnboardingSelections attributeDescriptions]
  -[HMSiriEndpointOnboardingSelections init]
  -[HMSiriEndpointOnboardingSelections isEqual:]
  -[HMSiriEndpointOnboardingSelections isExplicitContentAllowed]
  -[HMSiriEndpointOnboardingSelections shortDescription]
  -[HMSiriEndpointOnboardingSelections initWithPayload:]
  -[HMSiriEndpointOnboardingSelections isAnnounceEnabled]
  -[HMSiriEndpointOnboardingSelections payloadCopy]
  -[HMSiriEndpointOnboardingSelections languageValue]
  -[HMSiriEndpointOnboardingSelections _initWithSiriEnabled:allowHeySiri:airPlayEnabled:playbackInfluencesForYouEnabled:shareSiriAnalyticsEnabled:explicitContentAllowed:languageValue:]
  -[HMSiriEndpointOnboardingSelections setSiriEnabled:]
  -[HMSiriEndpointOnboardingSelections setAllowHeySiri:]
  -[HMSiriEndpointOnboardingSelections setAirPlayEnabled:]
  -[HMSiriEndpointOnboardingSelections setShareSiriAnalyticsEnabled:]
  -[HMSiriEndpointOnboardingSelections setExplicitContentAllowed:]
  -[HMSiriEndpointOnboardingSelections setLanguageValue:]
  -[HMSiriEndpointOnboardingSelections setDoorbellChimeEnabled:]
  -[HMSiriEndpointOnboardingSelections setAnnounceEnabled:]
  -[HMSiriEndpointOnboardingSelections setLightWhenUsingSiriEnabled:]
  -[HMSiriEndpointOnboardingSelections setHasLanguageValue:]
  -[HMSiriEndpointOnboardingSelections allowHeySiri]
  -[HMSiriEndpointOnboardingSelections isAirPlayEnabled]
  -[HMSiriEndpointOnboardingSelections isShareSiriAnalyticsEnabled]
  -[HMSiriEndpointOnboardingSelections isDoorbellChimeEnabled]
  -[HMSiriEndpointOnboardingSelections isLightWhenUsingSiriEnabled]
  -[HMSiriEndpointOnboardingSelections hasSiriEnabled]
  -[HMSiriEndpointOnboardingSelections hasAllowHeySiri]
  -[HMSiriEndpointOnboardingSelections hasAirPlayEnabled]
  -[HMSiriEndpointOnboardingSelections hasExplicitContentAllowed]
  -[HMSiriEndpointOnboardingSelections hasShareSiriAnalyticsEnabled]
  -[HMSiriEndpointOnboardingSelections hasDoorbellChimeEnabled]
  -[HMSiriEndpointOnboardingSelections hasAnnounceEnabled]
  -[HMSiriEndpointOnboardingSelections hasLightWhenUsingSiriEnabled]
  -[HMSiriEndpointOnboardingSelections hasLanguageValue]
  -[HMSiriEndpointOnboardingSelections setHasAllowHeySiri:]
  -[HMSiriEndpointOnboardingSelections setHasSiriEnabled:]
  -[HMSiriEndpointOnboardingSelections setHasAirPlayEnabled:]
  -[HMSiriEndpointOnboardingSelections setHasExplicitContentAllowed:]
  -[HMSiriEndpointOnboardingSelections setHasShareSiriAnalyticsEnabled:]
  -[HMSiriEndpointOnboardingSelections setHasAnnounceEnabled:]
  -[HMSiriEndpointOnboardingSelections setHasDoorbellChimeEnabled:]
  -[HMSiriEndpointOnboardingSelections setHasLightWhenUsingSiriEnabled:]
  -[HMSiriEndpointOnboardingSelections initWithSiriEnabled:allowHeySiri:airPlayEnabled:playbackInfluencesForYouEnabled:shareSiriAnalyticsEnabled:explicitContentAllowed:languageValue:]
  -[HMSiriEndpointOnboardingSelections initWithSiriEnabled:allowHeySiri:airPlayEnabled:playbackInfluencesForYouEnabled:shareSiriAnalyticsEnabled:explicitContentAllowed:]
  -[HMSiriEndpointOnboardingSelections initWithSiriEnabled:allowHeySiri:airPlayEnabled:languageValue:]
  -[HMSiriEndpointOnboardingSelections initWithSiriEnabled:allowHeySiri:airPlayEnabled:]


HMCameraClipVideoAssetContext : HMCameraClipAssetContext <NSCopying, NSSecureCoding>
 @property  NSData *hlsPlaylist

  // class methods
  +[HMCameraClipVideoAssetContext supportsSecureCoding]

  // instance methods
  -[HMCameraClipVideoAssetContext initWithCoder:]
  -[HMCameraClipVideoAssetContext .cxx_destruct]
  -[HMCameraClipVideoAssetContext isEqual:]
  -[HMCameraClipVideoAssetContext copyWithZone:]
  -[HMCameraClipVideoAssetContext encodeWithCoder:]
  -[HMCameraClipVideoAssetContext hlsPlaylist]
  -[HMCameraClipVideoAssetContext initWithURL:expirationDate:requiredHTTPHeaders:]
  -[HMCameraClipVideoAssetContext initWithURL:expirationDate:requiredHTTPHeaders:hlsPlaylist:]


_HMCameraControl : NSObject <HMFLogging, HMFMessageReceiver>
 @property  _HMContext *context
 @property  _HMCameraProfile *cameraProfile
 @property  NSUUID *profileUniqueIdentifier
 @property  HMHome *home
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[_HMCameraControl logCategory]

  // instance methods
  -[_HMCameraControl home]
  -[_HMCameraControl .cxx_destruct]
  -[_HMCameraControl setHome:]
  -[_HMCameraControl messageReceiveQueue]
  -[_HMCameraControl setContext:]
  -[_HMCameraControl messageTargetUUID]
  -[_HMCameraControl logIdentifier]
  -[_HMCameraControl context]
  -[_HMCameraControl initWithCameraProfile:profileUniqueIdentifier:]
  -[_HMCameraControl profileUniqueIdentifier]
  -[_HMCameraControl __configureWithContext:home:]
  -[_HMCameraControl _registerNotificationHandlers]
  -[_HMCameraControl cameraProfile]
  -[_HMCameraControl setCameraProfile:]


HMAccessorySettingsDataSource : NSObject <HMEEventConsumer, HMFLogging>
 @property  HMLocalization *localizationManager
 @property  <HMESubscriptionProviding> *eventSubscriptionProvider
 @property  NSMutableDictionary *cacheMap
 @property  HMCacheManager *cacheManager
 @property  HMAccessorySettingsMetricsDispatcher *metricsDispatcher
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HMAccessorySettingsDataSourceDataSource> *dataSource
 @property  _HMContext *context
 @property  <HMAccessorySettingsMessengerFactory> *messengerFactory
 @property  <HMAccessorySettingsDataSourceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessorySettingsDataSource logCategory]
  +[HMAccessorySettingsDataSource defaultLanguageValue]

  // instance methods
  -[HMAccessorySettingsDataSource _saveSettings:toCache:]
  -[HMAccessorySettingsDataSource _loadCacheIfNeededHomeUUID:accessoryUUID:completion:]
  -[HMAccessorySettingsDataSource messengerFactory]
  -[HMAccessorySettingsDataSource setCache:forHomeUUID:accessoryUUID:]
  -[HMAccessorySettingsDataSource setDataSource:]
  -[HMAccessorySettingsDataSource _cacheSettings:homeUUID:accessoryUUID:]
  -[HMAccessorySettingsDataSource subscribeToAccessorySettingsOnDaemonWithHomeUUID:accessoryUUID:keyPaths:options:completionHandler:]
  -[HMAccessorySettingsDataSource unsubscribeToAccessorySettingsWithHomeIdentifier:accessoryIdentifier:keyPaths:completionHandler:]
  -[HMAccessorySettingsDataSource .cxx_destruct]
  -[HMAccessorySettingsDataSource defaultSettingsWithHomeIdentifier:accessoryIdentifier:keyPaths:]
  -[HMAccessorySettingsDataSource homeUUIDForIdentifier:]
  -[HMAccessorySettingsDataSource _settingsFromCache:forKeyPaths:]
  -[HMAccessorySettingsDataSource didReceiveEvent:topic:]
  -[HMAccessorySettingsDataSource setDelegate:]
  -[HMAccessorySettingsDataSource _loadCacheForHomeUUID:accessoryUUID:]
  -[HMAccessorySettingsDataSource dataSource]
  -[HMAccessorySettingsDataSource didReceiveCachedEvent:topic:source:]
  -[HMAccessorySettingsDataSource dataSourceHomeWithHomeIdentifier:]
  -[HMAccessorySettingsDataSource readAccessorySettingsFromCache:homeUUID:accessoryUUID:keyPaths:]
  -[HMAccessorySettingsDataSource metricsDispatcher]
  -[HMAccessorySettingsDataSource cacheManager]
  -[HMAccessorySettingsDataSource fetchAccessorySettingsWithAccessoryIdentifier:keyPaths:completionHandler:]
  -[HMAccessorySettingsDataSource eventSubscriptionProvider]
  -[HMAccessorySettingsDataSource fetchCachedAccessorySettingsWithHomeIdentifier:accessoryIdentifier:keyPaths:completionHandler:]
  -[HMAccessorySettingsDataSource messengerWithHomeUUID:]
  -[HMAccessorySettingsDataSource workQueue]
  -[HMAccessorySettingsDataSource delegate]
  -[HMAccessorySettingsDataSource initWithContext:localizationManager:messengerFactory:subscriptionProvider:cacheManager:metricsDispatcher:]
  -[HMAccessorySettingsDataSource cacheMap]
  -[HMAccessorySettingsDataSource dealloc]
  -[HMAccessorySettingsDataSource cacheForHomeUUID:accessoryUUID:]
  -[HMAccessorySettingsDataSource fetchAccessorySettingsWithHomeIdentifier:accessoryIdentifier:keyPaths:completionHandler:]
  -[HMAccessorySettingsDataSource _cacheSettingsToDisk:homeUUID:accessoryUUID:]
  -[HMAccessorySettingsDataSource localizationKeyForKeyPath:]
  -[HMAccessorySettingsDataSource accessoryUUIDForIdentifier:homeIdentifier:]
  -[HMAccessorySettingsDataSource _didReceiveEvent:topic:]
  -[HMAccessorySettingsDataSource subscribeToAccessorySettingsWithAccessoryIdentifier:keyPaths:options:completionHandler:]
  -[HMAccessorySettingsDataSource subscribeToAccessorySettingsWithHomeIdentifier:accessoryIdentifier:keyPaths:options:completionHandler:]
  -[HMAccessorySettingsDataSource localizedTitleForKeyPath:]
  -[HMAccessorySettingsDataSource localizationManager]
  -[HMAccessorySettingsDataSource notifyDelegateDidReceiveSettingsUpdatesForAccessoryWithIdentifier:settings:]
  -[HMAccessorySettingsDataSource context]


HMPhotosPersonManager : HMPersonManager <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMPhotosPersonManager logCategory]
  +[HMPhotosPersonManager personManagerUUIDFromUserUUID:]

  // instance methods
  -[HMPhotosPersonManager initWithUser:]
  -[HMPhotosPersonManager logIdentifier]
  -[HMPhotosPersonManager initWithContext:UUID:]


HMMatterHome : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *uuid
 @property  NSString *name
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMMatterHome supportsSecureCoding]
  +[HMMatterHome shortDescription]

  // instance methods
  -[HMMatterHome name]
  -[HMMatterHome privateDescription]
  -[HMMatterHome initWithCoder:]
  -[HMMatterHome .cxx_destruct]
  -[HMMatterHome attributeDescriptions]
  -[HMMatterHome isEqual:]
  -[HMMatterHome uuid]
  -[HMMatterHome shortDescription]
  -[HMMatterHome copyWithZone:]
  -[HMMatterHome encodeWithCoder:]
  -[HMMatterHome initWithUUID:name:]


HMAccessoryInfoEvent : HMEEvent
 @property  HMAccessoryInfo *accessoryInfo

  // class methods
  +[HMAccessoryInfoEvent decodeAccessoryInfoFromEvent:error:]

  // instance methods
  -[HMAccessoryInfoEvent encodedData]
  -[HMAccessoryInfoEvent .cxx_destruct]
  -[HMAccessoryInfoEvent accessoryInfo]
  -[HMAccessoryInfoEvent initWithAccessoryInfo:eventSource:eventTimestamp:]


__HMHomeManagerRefreshRequest : HMFOperation
 @property  unsigned long generationCounter

  // instance methods
  -[__HMHomeManagerRefreshRequest main]
  -[__HMHomeManagerRefreshRequest generationCounter]
  -[__HMHomeManagerRefreshRequest initWithGenerationCounter:timeout:]


HMHomeManager : NSObject <HMAccessorySettingsControllerFactory, HMAccessorySettingsControllerDataSource, HMAccessoryInfoDataProviderFactory, HMAccessoryInfoDataProviderDataSource, HMAccessorySettingsDataSourceDataSource, HMAccessorySettingsMessengerFactory, HMAccessorySettingsMetricsDispatcherFactory, HMAccessorySettingsDataSourceFactory, HMCoreAnalyticsMetricEventDispatcherFactory, HMFLogging, HMFTimerDelegate, HMUserActionPredictionProviderDataSource, HMFMessageReceiver, HMMutableApplicationData, HMApplicationData>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMMutableArray *homeInvitations
 @property  HMHome *primaryHome
 @property  BOOL didUpdateHomes
 @property  BOOL frameworkMergeComplete
 @property  int serverGenerationCounterToken
 @property  unsigned long serverGenerationCounter
 @property  NSNumber *fileGenerationCounter
 @property  NSNumber *fileMetadataVersion
 @property  NSString *homeCacheDir
 @property  NSString *homeDataCache
 @property  NSString *metadataCache
 @property  BOOL mediaAccessoryControlRequested
 @property  NSSet *addAccessoryRequests
 @property  <HMDarwinNotificationProvider> *darwinNotificationProvider
 @property  @? timerFactory
 @property  HMXPCEventRouterClient *xpcEventRouterClient
 @property  HMCoreAnalyticsMetricEventDispatcher *coreAnalyticsMetricEventDispatcher
 @property  HMAccessorySettingsMetricsDispatcher *accessorySettingsMetricsDispatcher
 @property  HMMutableArray *currentHomes
 @property  NSUUID *uuid
 @property  _HMContext *context
 @property  unsigned long generationCounter
 @property  unsigned long metadataVersion
 @property  double homeManagerCreationTimeStamp
 @property  BOOL viewServiceActive
 @property  HMCacheManager *cacheManager
 @property  HMUserActionPredictionProvider *predictionProvider
 @property  BOOL daemonRunningWithROARFramework
 @property  BOOL osCapableOfRunningROAR
 @property  unsigned long options
 @property  HMHomeManagerConfiguration *configuration
 @property  NSArray *incomingHomeInvitations
 @property  HMHome *currentHome
 @property  HMAccessory *currentAccessory
 @property  BOOL dataSyncInProgress
 @property  unsigned long dataSyncState
 @property  unsigned long status
 @property  BOOL thisDeviceResidentCapable
 @property  BOOL residentEnabledForThisDevice
 @property  BOOL accessAllowedWhenLocked
 @property  unsigned long residentProvisioningStatus
 @property  HMNetworkRouterFirewallRuleManager *firewallRuleManager
 @property  HMUserCloudShareManager *userCloudShareManager
 @property  HMAccessorySetupCoordinator *accessorySetupCoordinator
 @property  NSUUID *lastRemovedCurrentAccessoryUUID
 @property  BOOL optedToHH2
 @property  long long multiUserStatus
 @property  <HMHomeManagerDelegate> *delegate
 @property  unsigned long authorizationStatus
 @property  NSArray *homes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  NSUUID *applicationDataIdentifier
 @property  HMApplicationData *applicationData

  // class methods
  +[HMHomeManager logCategory]
  +[HMHomeManager unconfigureQueue]
  +[HMHomeManager dataSyncInProgressFromDataSyncState:]
  +[HMHomeManager instanceTracker]

  // instance methods
  -[HMHomeManager timerDidFire:]
  -[HMHomeManager metadataCache]
  -[HMHomeManager currentHome]
  -[HMHomeManager configuration]
  -[HMHomeManager options]
  -[HMHomeManager metadataVersion]
  -[HMHomeManager authorizationStatus]
  -[HMHomeManager .cxx_destruct]
  -[HMHomeManager eventRouter]
  -[HMHomeManager initWithOptions:]
  -[HMHomeManager updateiCloudSwitchState:completionHandler:]
  -[HMHomeManager predictionProvider]
  -[HMHomeManager dataSyncState]
  -[HMHomeManager pairingIdentityForAccessoryWithIdentifier:completionHandler:]
  -[HMHomeManager primaryHome]
  -[HMHomeManager setDelegate:]
  -[HMHomeManager init]
  -[HMHomeManager __start]
  -[HMHomeManager cacheManager]
  -[HMHomeManager setMetadataCache:]
  -[HMHomeManager messageReceiveQueue]
  -[HMHomeManager initWithHomeMangerConfiguration:]
  -[HMHomeManager setGenerationCounter:]
  -[HMHomeManager status]
  -[HMHomeManager uuid]
  -[HMHomeManager delegate]
  -[HMHomeManager hasOptedToHH2]
  -[HMHomeManager setStatus:]
  -[HMHomeManager currentAccessory]
  -[HMHomeManager dealloc]
  -[HMHomeManager messageTargetUUID]
  -[HMHomeManager logIdentifier]
  -[HMHomeManager homes]
  -[HMHomeManager _privateDelegate]
  -[HMHomeManager generationCounter]
  -[HMHomeManager applicationData]
  -[HMHomeManager setApplicationData:]
  -[HMHomeManager currentHomes]
  -[HMHomeManager isDataSyncInProgress]
  -[HMHomeManager addHomeWithName:completionHandler:]
  -[HMHomeManager updateApplicationData:completionHandler:]
  -[HMHomeManager context]
  -[HMHomeManager accessorySettingsMetricsDispatcher]
  -[HMHomeManager createAccessorySettingsController]
  -[HMHomeManager createAccessorySettingsMessengerWithHomeUUID:]
  -[HMHomeManager accessorySettingsController:homeWithHomeIdentifier:]
  -[HMHomeManager _registerNotificationHandlers]
  -[HMHomeManager unconfigure]
  -[HMHomeManager _updateApplicationData:completionHandler:]
  -[HMHomeManager homeWithUniqueIdentifier:]
  -[HMHomeManager _declineInvitation:completionHandler:]
  -[HMHomeManager _ignoreInvitation:completionHandler:]
  -[HMHomeManager _acceptInvitation:completionHandler:]
  -[HMHomeManager _acceptInvitation:presenceAuthStatus:completionHandler:]
  -[HMHomeManager _reportJunkInvitation:completionHandler:]
  -[HMHomeManager applicationDataIdentifier]
  -[HMHomeManager createMultiuserSettingsMessenger]
  -[HMHomeManager accessoryInfoDataProvider:transformHomeUUID:accessoryUUID:toClientHomeIdentifier:clientAccessoryIdentifier:]
  -[HMHomeManager accessoryInfoDataProvider:homeWithHomeIdentifier:]
  -[HMHomeManager createAccessoryInfoDataProvider]
  -[HMHomeManager notifyDelegateOfBatchNotificationsStartWithReason:]
  -[HMHomeManager notifyDelegateOfBatchNotificationsEndWithReason:]
  -[HMHomeManager _mergeCurrentHomeInvitationsWithNewHomeInvitations:]
  -[HMHomeManager _notifyDelegateOfAppDataUpdate]
  -[HMHomeManager _handleUserInvitationsUpdatedNotification:]
  -[HMHomeManager addAndSetupAccessoriesWithPayload:completionHandler:]
  -[HMHomeManager isViewServiceActive]
  -[HMHomeManager setViewServiceActive:]
  -[HMHomeManager accessorySettingsDataSource:transformHomeUUID:accessoryUUID:toClientHomeIdentifier:clientAccessoryIdentifier:]
  -[HMHomeManager accessorySettingsDataSource:homeWithHomeIdentifier:]
  -[HMHomeManager initWithUUID:homeMangerConfiguration:context:xpcEventRouterClient:timerFactory:darwinNotificationProvider:]
  -[HMHomeManager handleInstanceCreated]
  -[HMHomeManager __preconfigure]
  -[HMHomeManager incomingHomeInvitations]
  -[HMHomeManager homeInvitations]
  -[HMHomeManager handleInstanceDestroyed]
  -[HMHomeManager darwinNotificationProvider]
  -[HMHomeManager xpcEventRouterClient]
  -[HMHomeManager addAccessoryRequests]
  -[HMHomeManager _notifyPendingAddRequests:]
  -[HMHomeManager setDataSyncState:]
  -[HMHomeManager _updateStatusWithPayload:sourceIsFetch:]
  -[HMHomeManager _fetchHomeConfigurationWithRefreshRequested:]
  -[HMHomeManager _updateDataSyncState:]
  -[HMHomeManager setMultiUserStatus:]
  -[HMHomeManager _notifyResidentProvisioningStatus:]
  -[HMHomeManager serverGenerationCounter]
  -[HMHomeManager _removeHome:completionHandler:]
  -[HMHomeManager eraseHomeDataWithCompletionHandler:]
  -[HMHomeManager eraseHomeDataAndDeleteMetadata:completionHandler:]
  -[HMHomeManager _eraseHomeDataAndDeleteMetadata:completionHandler:]
  -[HMHomeManager _queryHomeKitUsageStateWithCompletionHandler:]
  -[HMHomeManager _handleQueryHomeKitUsageStateResponse:completionHandler:]
  -[HMHomeManager _deleteDuetEvents:completion:]
  -[HMHomeManager _shouldDisplayiCloudSwitchWithCompletionHandler:]
  -[HMHomeManager _queryiCloudSwitchStateWithCompletionHandler:]
  -[HMHomeManager _updateiCloudSwitchState:completionHandler:]
  -[HMHomeManager _updateResidentEnabledForThisDevice:completionHandler:]
  -[HMHomeManager _updateAccessAllowedWhenLocked:completionHandler:]
  -[HMHomeManager _generateFirewallRuleTLVsFromNetworkDeclarations:completionHandler:]
  -[HMHomeManager _checkName:inHome:withValidationOptions:completionHandler:]
  -[HMHomeManager mediaAccessoryControlRequested]
  -[HMHomeManager _registerForMediaAccessoryControl:completionHandler:]
  -[HMHomeManager _updateHomes:]
  -[HMHomeManager _updateCurrentHome:]
  -[HMHomeManager _setResidentProvisioningStatus:]
  -[HMHomeManager _requestRuntimeUpdate:]
  -[HMHomeManager _writeCaches:homeData:metadata:]
  -[HMHomeManager _processHomeConfigurationRequest:refreshRequested:]
  -[HMHomeManager configureCoreAnalyticsMetricEventDispatcherWithFactory:]
  -[HMHomeManager configureAccessorySettingsMetricsDispatcherWithFactory:]
  -[HMHomeManager accessorySetupCoordinator]
  -[HMHomeManager isThisDeviceResidentCapable]
  -[HMHomeManager setThisDeviceResidentCapable:]
  -[HMHomeManager notifyResidentCapableUpdated:]
  -[HMHomeManager isResidentEnabledForThisDevice]
  -[HMHomeManager setResidentEnabledForThisDevice:]
  -[HMHomeManager notifyResidentEnabledUpdated:]
  -[HMHomeManager isAccessAllowedWhenLocked]
  -[HMHomeManager setAccessAllowedWhenLocked:]
  -[HMHomeManager _notifyAccessAllowedWhenLockedUpdated:]
  -[HMHomeManager _homeWithUUID:]
  -[HMHomeManager setDaemonRunningWithROARFramework:]
  -[HMHomeManager setOsCapableOfRunningROAR:]
  -[HMHomeManager setHasOptedToHH2:]
  -[HMHomeManager isDaemonRunningWithROARFramework]
  -[HMHomeManager isThisOSCapableOfRunningROAR]
  -[HMHomeManager _handleHH2StateWithPayload:]
  -[HMHomeManager _recomputeAssistantIdentifiers]
  -[HMHomeManager setMetadataVersion:]
  -[HMHomeManager didUpdateHomes]
  -[HMHomeManager _mergeCurrentHomesWithNewHomes:newPrimaryHome:newCurrentHome:newInvitations:newAppData:refreshRequested:]
  -[HMHomeManager setDidUpdateHomes:]
  -[HMHomeManager _updateAppData:]
  -[HMHomeManager lastRemovedCurrentAccessoryUUID]
  -[HMHomeManager _requestRefresh]
  -[HMHomeManager _addAccessoryRequestsFromArray:]
  -[HMHomeManager _updateAddAccessoryRequestsAndNotify:]
  -[HMHomeManager setFrameworkMergeComplete:]
  -[HMHomeManager __handleHomeManagerState:]
  -[HMHomeManager setHomeDataCache:]
  -[HMHomeManager setFileGenerationCounter:]
  -[HMHomeManager setFileMetadataVersion:]
  -[HMHomeManager homeCacheDir]
  -[HMHomeManager homeDataCache]
  -[HMHomeManager fileGenerationCounter]
  -[HMHomeManager fileMetadataVersion]
  -[HMHomeManager _removeCacheFiles:]
  -[HMHomeManager _handleRuntimeStateUpdatePayload:reason:]
  -[HMHomeManager setAddAccessoryRequests:]
  -[HMHomeManager setCurrentHome:]
  -[HMHomeManager setPrimaryHome:]
  -[HMHomeManager timerFactory]
  -[HMHomeManager __mergeCurrentHomesWithNewHomes:newPrimaryHome:newCurrentHome:newInvitations:newAppData:refreshRequested:]
  -[HMHomeManager _mergeCurrentAppDataWithNewAppData:]
  -[HMHomeManager _handleHomeAddedNotification:]
  -[HMHomeManager _handleHomeRemovedNotification:]
  -[HMHomeManager _handlePrimaryChangedNotification:]
  -[HMHomeManager _handleCurrentHomeChangedNotification:]
  -[HMHomeManager _handleHomesDidUpdateNotification:]
  -[HMHomeManager _handleMetadataUpdatedNotification:]
  -[HMHomeManager _handleResidentDeviceCapableUpdatedNotification:]
  -[HMHomeManager _handleResidentEnabledForThisDeviceUpdatedNotification:]
  -[HMHomeManager _handleAccessAllowedWhenLockedUpdatedNotification:]
  -[HMHomeManager _handleStatusUpdated:]
  -[HMHomeManager _handleResidentProvisioningStatusChanged:]
  -[HMHomeManager _handleRuntimeStateUpdateNotification:]
  -[HMHomeManager _handleCheckForAddAccessoryRequests]
  -[HMHomeManager _updateInvitation:presenceAuthStatus:invitationState:invitationOptions:completionHandler:]
  -[HMHomeManager setResidentProvisioningStatus:]
  -[HMHomeManager setMediaAccessoryControlRequested:]
  -[HMHomeManager _pairingIdentityForAccessoryWithIdentifier:completionHandler:]
  -[HMHomeManager _forceBatchNotificationsEnd]
  -[HMHomeManager homesForUserActionPredictionProviderDataSource:]
  -[HMHomeManager frameworkMergeComplete]
  -[HMHomeManager multiUserStatus]
  -[HMHomeManager _updateStatusWithPayload:]
  -[HMHomeManager residentProvisioningStatus]
  -[HMHomeManager _refreshBeforeDate:completionHandler:]
  -[HMHomeManager updatePrimaryHome:completionHandler:]
  -[HMHomeManager removeHome:completionHandler:]
  -[HMHomeManager resetConfiguration:withoutPopup:completionHandler:]
  -[HMHomeManager queryHomeKitUsageStateWithCompletionHandler:]
  -[HMHomeManager queryVersionWithCompletionHandler:]
  -[HMHomeManager dumpState:payload:completion:]
  -[HMHomeManager fetchEventCounters:]
  -[HMHomeManager resetEventCounters:]
  -[HMHomeManager requestLogEventDailySchedulerStatusWithCompletion:]
  -[HMHomeManager submitLogEventDailySchedulerRegisteredBlocksWithCompletion:]
  -[HMHomeManager deleteDuetEvents:completion:]
  -[HMHomeManager queryMetadata:completionHandler:]
  -[HMHomeManager setMetadata:completionHandler:]
  -[HMHomeManager shouldDisplayiCloudSwitchWithCompletionHandler:]
  -[HMHomeManager queryiCloudSwitchStateWithCompletionHandler:]
  -[HMHomeManager updateResidentEnabledForThisDevice:completionHandler:]
  -[HMHomeManager updateAccessAllowedWhenLocked:completionHandler:]
  -[HMHomeManager generateFirewallRuleTLVsFromNetworkDeclarations:completionHandler:]
  -[HMHomeManager checkName:inHome:withValidationOptions:completionHandler:]
  -[HMHomeManager __resolveAccountHandle:completionHandler:]
  -[HMHomeManager __removeAccountWithIdentifier:completionHandler:]
  -[HMHomeManager __removeAccountWithHandle:completionHandler:]
  -[HMHomeManager _pingDeviceWithUUID:monitor:secure:restrictToLocalNetwork:completionHandler:]
  -[HMHomeManager _pingDeviceWithDestination:monitor:secure:restrictToLocalNetwork:completionHandler:]
  -[HMHomeManager __processSyncResponse:refreshRequested:completionHandler:]
  -[HMHomeManager _determineCacheFiles]
  -[HMHomeManager _isValidCachedHomeConfiguration:]
  -[HMHomeManager _dumpCaches:metadata:]
  -[HMHomeManager registerForMediaAccessoryControl:completionHandler:]
  -[HMHomeManager upgradeToROARWithCompletionHandler:]
  -[HMHomeManager attemptHH2AutoMigrationWithCompletionHandler:]
  -[HMHomeManager launchHomeUIServiceToResumeSetupWithUserInfo:completionHandler:]
  -[HMHomeManager finishAddAccessoryRequest:withSetupCompletedInfo:error:completionHandler:]
  -[HMHomeManager needsOSUpdateToRunHH2]
  -[HMHomeManager setHomeInvitations:]
  -[HMHomeManager serverGenerationCounterToken]
  -[HMHomeManager setServerGenerationCounterToken:]
  -[HMHomeManager setXpcEventRouterClient:]
  -[HMHomeManager coreAnalyticsMetricEventDispatcher]
  -[HMHomeManager setCoreAnalyticsMetricEventDispatcher:]
  -[HMHomeManager setAccessorySettingsMetricsDispatcher:]
  -[HMHomeManager homeManagerCreationTimeStamp]
  -[HMHomeManager setHomeManagerCreationTimeStamp:]
  -[HMHomeManager setCacheManager:]
  -[HMHomeManager setPredictionProvider:]
  -[HMHomeManager firewallRuleManager]
  -[HMHomeManager userCloudShareManager]
  -[HMHomeManager _enableUARPPacketCapture:capturePath:completionHandler:]
  -[HMHomeManager _beginActiveAssertionWithReason:]
  -[HMHomeManager _endActiveAssertion:]
  -[HMHomeManager enableUARPPacketCapture:capturePath:completionHandler:]
  -[HMHomeManager createAccessorySettingsDataSource]
  -[HMHomeManager createAccessorySettingsMetricsDispatcherWithCoreAnalyticsMetricDispatcher:]
  -[HMHomeManager createAutoAddWalletKeySupressionAssertionWithIncomingInvitation:completion:]
  -[HMHomeManager createCoreAnalyticsMetricEventDispatcher]
  -[HMHomeManager checkAndLogMultipleInstanceWarning]


HMAccessorySettingsUpdateRequestMessagePayload : NSObject <HMFLogging, HMFObject, HMMessageEncoding>
 @property  NSUUID *accessoryUUID
 @property  NSString *keyPath
 @property  HMImmutableSettingValue *settingValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMAccessorySettingsUpdateRequestMessagePayload logCategory]
  +[HMAccessorySettingsUpdateRequestMessagePayload shortDescription]

  // instance methods
  -[HMAccessorySettingsUpdateRequestMessagePayload accessoryUUID]
  -[HMAccessorySettingsUpdateRequestMessagePayload privateDescription]
  -[HMAccessorySettingsUpdateRequestMessagePayload .cxx_destruct]
  -[HMAccessorySettingsUpdateRequestMessagePayload attributeDescriptions]
  -[HMAccessorySettingsUpdateRequestMessagePayload isEqual:]
  -[HMAccessorySettingsUpdateRequestMessagePayload keyPath]
  -[HMAccessorySettingsUpdateRequestMessagePayload shortDescription]
  -[HMAccessorySettingsUpdateRequestMessagePayload initWithPayload:]
  -[HMAccessorySettingsUpdateRequestMessagePayload payloadCopy]
  -[HMAccessorySettingsUpdateRequestMessagePayload settingValue]
  -[HMAccessorySettingsUpdateRequestMessagePayload initWithAccessoryUUID:keyPath:settingValue:]


_HMSiriEndpointProfile : _HMAccessoryProfile <HMFLogging, HMFObject>
 @property  HMSiriEndpointProfilesMessenger *messenger
 @property  <_HMSiriEndpointProfileDelegate> *delegate
 @property  long long sessionState
 @property  NSUUID *sessionHubIdentifer
 @property  NSString *siriEndpointVersion
 @property  unsigned long capability
 @property  NSString *siriEngineVersion
 @property  NSNumber *activeIdentifier
 @property  BOOL manuallyDisabled
 @property  long long multifunctionButton
 @property  NSArray *assistants
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[_HMSiriEndpointProfile supportsSecureCoding]
  +[_HMSiriEndpointProfile logCategory]
  +[_HMSiriEndpointProfile shortDescription]

  // instance methods
  -[_HMSiriEndpointProfile privateDescription]
  -[_HMSiriEndpointProfile capability]
  -[_HMSiriEndpointProfile initWithCoder:]
  -[_HMSiriEndpointProfile messenger]
  -[_HMSiriEndpointProfile .cxx_destruct]
  -[_HMSiriEndpointProfile setDelegate:]
  -[_HMSiriEndpointProfile attributeDescriptions]
  -[_HMSiriEndpointProfile setSessionState:]
  -[_HMSiriEndpointProfile sessionState]
  -[_HMSiriEndpointProfile delegate]
  -[_HMSiriEndpointProfile shortDescription]
  -[_HMSiriEndpointProfile logIdentifier]
  -[_HMSiriEndpointProfile messageDestination]
  -[_HMSiriEndpointProfile encodeWithCoder:]
  -[_HMSiriEndpointProfile setCapability:]
  -[_HMSiriEndpointProfile _mergeWithNewObject:]
  -[_HMSiriEndpointProfile _registerNotificationHandlers]
  -[_HMSiriEndpointProfile __configureWithContext:accessory:]
  -[_HMSiriEndpointProfile setMessenger:]
  -[_HMSiriEndpointProfile _handleUpdateProfileState:]
  -[_HMSiriEndpointProfile notifyClientDidUpdateSessionState]
  -[_HMSiriEndpointProfile sessionHubIdentifer]
  -[_HMSiriEndpointProfile setSessionHubIdentifer:]
  -[_HMSiriEndpointProfile siriEndpointVersion]
  -[_HMSiriEndpointProfile setSiriEndpointVersion:]
  -[_HMSiriEndpointProfile siriEngineVersion]
  -[_HMSiriEndpointProfile setSiriEngineVersion:]
  -[_HMSiriEndpointProfile activeIdentifier]
  -[_HMSiriEndpointProfile setActiveIdentifier:]
  -[_HMSiriEndpointProfile manuallyDisabled]
  -[_HMSiriEndpointProfile setManuallyDisabled:]
  -[_HMSiriEndpointProfile multifunctionButton]
  -[_HMSiriEndpointProfile setMultifunctionButton:]
  -[_HMSiriEndpointProfile _mergeAssistants:]
  -[_HMSiriEndpointProfile assistants]
  -[_HMSiriEndpointProfile setAssistants:]
  -[_HMSiriEndpointProfile applyOnboardingSelections:completionHandler:]
  -[_HMSiriEndpointProfile deleteSiriHistoryWithCompletionHandler:]
  -[_HMSiriEndpointProfile refreshStateWithCompletionHandler:]
  -[_HMSiriEndpointProfile setNotifications:options:completionHandler:]


HMFaceCrop : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *UUID
 @property  NSData *dataRepresentation
 @property  NSDate *dateCreated
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} faceBoundingBox
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFaceCrop supportsSecureCoding]
  +[HMFaceCrop shortDescription]

  // instance methods
  -[HMFaceCrop UUID]
  -[HMFaceCrop privateDescription]
  -[HMFaceCrop initWithCoder:]
  -[HMFaceCrop dataRepresentation]
  -[HMFaceCrop .cxx_destruct]
  -[HMFaceCrop attributeDescriptions]
  -[HMFaceCrop isEqual:]
  -[HMFaceCrop dateCreated]
  -[HMFaceCrop shortDescription]
  -[HMFaceCrop copyWithZone:]
  -[HMFaceCrop encodeWithCoder:]
  -[HMFaceCrop initWithUUID:dataRepresentation:dateCreated:faceBoundingBox:]
  -[HMFaceCrop faceBoundingBox]


HMSettingStringValue : HMImmutableSettingValue
 @property  NSString *stringValue

  // instance methods
  -[HMSettingStringValue stringValue]
  -[HMSettingStringValue .cxx_destruct]
  -[HMSettingStringValue attributeDescriptions]
  -[HMSettingStringValue isEqual:]
  -[HMSettingStringValue initWithStringValue:]
  -[HMSettingStringValue initWithPayload:]
  -[HMSettingStringValue payloadCopy]
  -[HMSettingStringValue protoPayload]
  -[HMSettingStringValue initWithProtoPayload:]


HMCameraSnapshotControl : HMCameraControl <_HMCameraSnapshotControlDelegate>
 @property  _HMCameraSnapshotControl *snapshotControl
 @property  <HMCameraSnapshotControlDelegate> *delegate
 @property  HMCameraSnapshot *mostRecentSnapshot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMCameraSnapshotControl .cxx_destruct]
  -[HMCameraSnapshotControl setDelegate:]
  -[HMCameraSnapshotControl takeSnapshot]
  -[HMCameraSnapshotControl delegate]
  -[HMCameraSnapshotControl mostRecentSnapshot]
  -[HMCameraSnapshotControl cameraSnapshotControl:didTakeSnapshot:error:]
  -[HMCameraSnapshotControl cameraSnapshotControlDidUpdateMostRecentSnapshot:]
  -[HMCameraSnapshotControl fetchCameraSnapshotForBulletinContext:completionHandler:]
  -[HMCameraSnapshotControl initWithSnapshotControl:]
  -[HMCameraSnapshotControl snapshotControl]


HMUserActionPredictionDuetDataSource : NSObject <HMFLogging>
 @property  NSArray *predictions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMUserActionPredictionDuetDataSource logCategory]

  // instance methods
  -[HMUserActionPredictionDuetDataSource .cxx_destruct]
  -[HMUserActionPredictionDuetDataSource predictions]
  -[HMUserActionPredictionDuetDataSource initWithCacheManager:]
  -[HMUserActionPredictionDuetDataSource initWithCacheManager:suggestionProvider:]
  -[HMUserActionPredictionDuetDataSource fetchPredictionsFromCache]
  -[HMUserActionPredictionDuetDataSource fetchPredictionsFromDuet]


HMSoftwareUpdateDocumentationMetadata : NSObject <NSCopying, NSSecureCoding>
 @property  NSURL *URL
 @property  HMFDigest *digest

  // class methods
  +[HMSoftwareUpdateDocumentationMetadata supportsSecureCoding]

  // instance methods
  -[HMSoftwareUpdateDocumentationMetadata initWithCoder:]
  -[HMSoftwareUpdateDocumentationMetadata .cxx_destruct]
  -[HMSoftwareUpdateDocumentationMetadata digest]
  -[HMSoftwareUpdateDocumentationMetadata init]
  -[HMSoftwareUpdateDocumentationMetadata isEqual:]
  -[HMSoftwareUpdateDocumentationMetadata URL]
  -[HMSoftwareUpdateDocumentationMetadata copyWithZone:]
  -[HMSoftwareUpdateDocumentationMetadata encodeWithCoder:]
  -[HMSoftwareUpdateDocumentationMetadata initWithURL:digest:]


HMAccessoryProfile : NSObject <HMObjectMerge>
 @property  _HMAccessoryProfile *accessoryProfile
 @property  NSUUID *profileUniqueIdentifier
 @property  NSUUID *uuid
 @property  NSUUID *uniqueIdentifier
 @property  NSArray *services
 @property  HMAccessory *accessory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMAccessoryProfile accessory]
  -[HMAccessoryProfile services]
  -[HMAccessoryProfile uniqueIdentifier]
  -[HMAccessoryProfile .cxx_destruct]
  -[HMAccessoryProfile isEqual:]
  -[HMAccessoryProfile assistantIdentifier]
  -[HMAccessoryProfile uuid]
  -[HMAccessoryProfile _mergeWithNewObject:]
  -[HMAccessoryProfile profileUniqueIdentifier]
  -[HMAccessoryProfile handleRuntimeStateUpdate:]
  -[HMAccessoryProfile recomputeAssistantIdentifier]
  -[HMAccessoryProfile accessoryProfile]
  -[HMAccessoryProfile initWithAccessoryProfile:]
  -[HMAccessoryProfile refreshStateWithCompletionHandler:]


HMHAPMetadataCharacteristic : NSObject
 @property  NSString *type
 @property  NSString *chrDescription

  // instance methods
  -[HMHAPMetadataCharacteristic setType:]
  -[HMHAPMetadataCharacteristic .cxx_destruct]
  -[HMHAPMetadataCharacteristic chrDescription]
  -[HMHAPMetadataCharacteristic type]
  -[HMHAPMetadataCharacteristic setChrDescription:]


HMHAPMetadataService : NSObject
 @property  NSString *type
 @property  NSString *svcDescription

  // instance methods
  -[HMHAPMetadataService svcDescription]
  -[HMHAPMetadataService setType:]
  -[HMHAPMetadataService .cxx_destruct]
  -[HMHAPMetadataService setSvcDescription:]
  -[HMHAPMetadataService type]


HMHAPMetadataCategory : NSObject
 @property  NSNumber *categoryNumber
 @property  NSString *categoryType
 @property  NSString *categoryDescription

  // instance methods
  -[HMHAPMetadataCategory categoryType]
  -[HMHAPMetadataCategory setCategoryType:]
  -[HMHAPMetadataCategory setCategoryNumber:]
  -[HMHAPMetadataCategory .cxx_destruct]
  -[HMHAPMetadataCategory setCategoryDescription:]
  -[HMHAPMetadataCategory categoryNumber]
  -[HMHAPMetadataCategory categoryDescription]


HMHAPMetadata : NSObject <HMProtoBufMerge>
 @property  NSDictionary *hapChrMap
 @property  NSDictionary *hapSvcMap
 @property  NSDictionary *hapCategoryMap
 @property  NSNumber *version
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMHAPMetadata getSharedInstance]

  // instance methods
  -[HMHAPMetadata setHapCategoryMap:]
  -[HMHAPMetadata .cxx_destruct]
  -[HMHAPMetadata init]
  -[HMHAPMetadata setHapSvcMap:]
  -[HMHAPMetadata setVersion:]
  -[HMHAPMetadata setHapChrMap:]
  -[HMHAPMetadata shouldNotCacheCharacteristicOfType:]
  -[HMHAPMetadata categoryForCategoryType:]
  -[HMHAPMetadata hapCategoryMap]
  -[HMHAPMetadata serviceTypeDescription:]
  -[HMHAPMetadata version]
  -[HMHAPMetadata characteristicTypeDescription:]
  -[HMHAPMetadata applyProtoBufData:]
  -[HMHAPMetadata hapChrMap]
  -[HMHAPMetadata categoryForNumber:]
  -[HMHAPMetadata hapSvcMap]


HMCameraActivityZone : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *points

  // class methods
  +[HMCameraActivityZone supportsSecureCoding]

  // instance methods
  -[HMCameraActivityZone initWithCoder:]
  -[HMCameraActivityZone .cxx_destruct]
  -[HMCameraActivityZone isEqual:]
  -[HMCameraActivityZone points]
  -[HMCameraActivityZone copyWithZone:]
  -[HMCameraActivityZone initWithPoints:]
  -[HMCameraActivityZone encodeWithCoder:]


HMAccessoryAdvertisementInfo : NSObject
 @property  NSString *deviceIdentifier

  // instance methods
  -[HMAccessoryAdvertisementInfo .cxx_destruct]
  -[HMAccessoryAdvertisementInfo deviceIdentifier]
  -[HMAccessoryAdvertisementInfo initWithAccessoryIdentifier:]


HMAccessory : NSObject <HMMediaDestinationControllerDataSource, HMFLogging, HMFObject, HMAccessorySettingsContainerInternal, HMControllable, HMMediaDestinationInternal, HMMutableApplicationData, HMObjectMerge, HMFMessageReceiver, HMAccessorySettingsAdapterDelegate, NSSecureCoding, HMApplicationData, HMMediaDestination>
 @property  NSArray *televisionProfiles
 @property  NSString *deviceIdentifier
 @property  HMHome *home
 @property  NSString *configuredName
 @property  BOOL currentAccessory
 @property  NSString *serialNumber
 @property  NSString *storeID
 @property  NSString *bundleID
 @property  BOOL firmwareUpdateAvailable
 @property  unsigned long accessoryReprovisionState
 @property  long long certificationStatus
 @property  HMRemoteLoginHandler *remoteLoginHandler
 @property  HMSymptomsHandler *symptomsHandler
 @property  long long associationOptions
 @property  unsigned long transportTypes
 @property  long long reachableTransports
 @property  HMFWiFiNetworkInfo *wifiNetworkInfo
 @property  BOOL supportsMultiUser
 @property  BOOL supportsHomeLevelLocationServiceSetting
 @property  BOOL supportsCompanionInitiatedRestart
 @property  BOOL supportsMusicAlarm
 @property  HMMediaDestinationController *audioDestinationController
 @property  BOOL supportsAnnounce
 @property  BOOL supportsDoorbellChime
 @property  BOOL supportsUserMediaSettings
 @property  BOOL supportsCoordinationDoorbellChime
 @property  BOOL supportsThirdPartyMusic
 @property  BOOL supportsPreferredMediaUser
 @property  BOOL supportsManagedConfigurationProfile
 @property  unsigned long homePodVariant
 @property  BOOL supportsAccessCodes
 @property  unsigned long suspendedState
 @property  BOOL supportsWalletKey
 @property  BOOL supportsAudioGroup
 @property  BOOL suspendCapable
 @property  long long productColor
 @property  BOOL supportsMessagedHomePodSettings
 @property  NSString *pendingConfigurationIdentifier
 @property  NSDictionary *serializedDictionaryRepresentation
 @property  NSArray *cameraProfiles
 @property  BOOL supportsCHIP
 @property  HMNetworkConfigurationProfile *networkConfigurationProfile
 @property  NSSet *lightProfiles
 @property  BOOL hasOnboardedForNaturalLighting
 @property  HMAccessoryCategory *category
 @property  HMAccessorySettingsDataSource *accessorySettingsDataSource
 @property  HMAccessorySettingsController *accessorySettingsController
 @property  BOOL currentAccessory
 @property  BOOL reachable
 @property  long long reachableTransports
 @property  HMMutableArray *currentServices
 @property  BOOL bridgedAccessory
 @property  unsigned long transportTypes
 @property  unsigned long additionalSetupStatus
 @property  NSNumber *accessoryFlags
 @property  long long associationOptions
 @property  NSUUID *accountIdentifier
 @property  NSArray *controlTargetUUIDs
 @property  HMAccessorySettings *settings
 @property  HMAccessorySettingsAdapter *settingsAdapter
 @property  BOOL supportsTargetControl
 @property  BOOL supportsTargetController
 @property  BOOL targetControllerHardwareSupport
 @property  BOOL supportsMultiUser
 @property  BOOL supportsCompanionInitiatedRestart
 @property  BOOL supportsMusicAlarm
 @property  BOOL supportsDiagnosticsTransfer
 @property  HMSupportedAccessoryDiagnostics *supportedDiagnostics
 @property  BOOL supportsAnnounce
 @property  BOOL supportsThirdPartyMusic
 @property  BOOL supportsPreferredMediaUser
 @property  BOOL supportsDoorbellChime
 @property  BOOL supportsUserMediaSettings
 @property  BOOL supportsCoordinationDoorbellChime
 @property  unsigned long preferredUserSelectionType
 @property  NSUUID *preferredMediaUserUUID
 @property  BOOL supportsAccessCodes
 @property  unsigned long suspendedState
 @property  BOOL suspendCapable
 @property  NSString *assistantIdentifier
 @property  NSString *pendingConfigurationIdentifier
 @property  BOOL supportsManagedConfigurationProfile
 @property  BOOL supportsMessagedHomePodSettings
 @property  BOOL supportsHomeLevelLocationServiceSetting
 @property  NSString *name
 @property  NSString *configuredName
 @property  NSString *deviceIdentifier
 @property  HMRoom *room
 @property  HMHome *home
 @property  BOOL paired
 @property  NSString *model
 @property  NSString *manufacturer
 @property  NSString *firmwareVersion
 @property  NSString *serialNumber
 @property  NSString *bundleID
 @property  NSString *storeID
 @property  BOOL firmwareUpdateAvailable
 @property  unsigned long accessoryReprovisionState
 @property  HMFPairingIdentity *pairingIdentity
 @property  HMFSoftwareVersion *softwareVersion
 @property  HMRemoteLoginHandler *remoteLoginHandler
 @property  HMSymptomsHandler *symptomsHandler
 @property  NSArray *uniqueIdentifiersForBridgedAccessories
 @property  HMMutableArray *accessoryProfiles
 @property  long long certificationStatus
 @property  BOOL supportsMediaAccessControl
 @property  BOOL supportsCHIP
 @property  HMFWiFiNetworkInfo *wifiNetworkInfo
 @property  NSArray *bridgedAccessories
 @property  NSUUID *networkProtectionGroupUUID
 @property  _HMContext *context
 @property  BOOL hasOnboardedForNaturalLighting
 @property  HMMediaDestinationController *audioDestinationController
 @property  HMMediaDestination *audioDestination
 @property  unsigned long supportedStereoPairVersions
 @property  unsigned long homePodVariant
 @property  BOOL supportsWalletKey
 @property  long long productColor
 @property  NSUUID *uuid
 @property  BOOL additionalSetupRequired
 @property  BOOL controllable
 @property  NSUUID *identifier
 @property  NSUUID *uniqueIdentifier
 @property  <HMAccessoryDelegate> *delegate
 @property  BOOL bridged
 @property  NSArray *identifiersForBridgedAccessories
 @property  NSArray *services
 @property  NSArray *profiles
 @property  BOOL blocked
 @property  BOOL supportsIdentify
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  NSUUID *containerUUID
 @property  HMHome *containerHome
 @property  NSArray *audioDestinationMediaProfiles
 @property  NSString *audioDestinationParentIdentifier
 @property  NSUUID *audioDestinationGroupIdentifier
 @property  NSString *audioDestinationIdentifier
 @property  NSString *audioDestinationName
 @property  long long audioDestinationType
 @property  BOOL supportsAudioDestination
 @property  BOOL supportsAudioGroup
 @property  NSUUID *applicationDataIdentifier
 @property  HMApplicationData *applicationData
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMAccessory supportsSecureCoding]
  +[HMAccessory logCategory]
  +[HMAccessory shortDescription]
  +[HMAccessory _siriEndpointProfilesForAccessoryProfiles:]
  +[HMAccessory accessoryWithAccessoryReference:home:]
  +[HMAccessory _televisionProfilesForAccessoryServices:]
  +[HMAccessory _lightProfilesForAccessoryProfiles:]
  +[HMAccessory _networkRouterProfilesForAccessoryProfiles:]
  +[HMAccessory _cameraProfilesForAccessoryProfiles:]
  +[HMAccessory _mediaProfilesForAccessoryProfiles:]
  +[HMAccessory _networkConfigurationProfilesForCoder:accessoryIdentifier:]
  +[HMAccessory accessoryWithSerializedDictionaryRepresentation:home:]

  // instance methods
  -[HMAccessory home]
  -[HMAccessory serialNumber]
  -[HMAccessory isBlocked]
  -[HMAccessory softwareVersion]
  -[HMAccessory productColor]
  -[HMAccessory room]
  -[HMAccessory profiles]
  -[HMAccessory setStoreID:]
  -[HMAccessory bundleID]
  -[HMAccessory setDevice:]
  -[HMAccessory services]
  -[HMAccessory setSerialNumber:]
  -[HMAccessory name]
  -[HMAccessory pairingIdentity]
  -[HMAccessory privateDescription]
  -[HMAccessory uniqueIdentifier]
  -[HMAccessory initWithCoder:]
  -[HMAccessory storeID]
  -[HMAccessory setFirmwareVersion:]
  -[HMAccessory setRoom:]
  -[HMAccessory setPaired:]
  -[HMAccessory accessorySettingsDataSource]
  -[HMAccessory firmwareVersion]
  -[HMAccessory .cxx_destruct]
  -[HMAccessory manufacturer]
  -[HMAccessory _unconfigure]
  -[HMAccessory initWithUUID:]
  -[HMAccessory mediaProfile]
  -[HMAccessory setName:]
  -[HMAccessory pairingIdentityWithPrivateKey:completionHandler:]
  -[HMAccessory setDelegate:]
  -[HMAccessory setSettings:]
  -[HMAccessory attributeDescriptions]
  -[HMAccessory endpointIdentifier]
  -[HMAccessory init]
  -[HMAccessory setHome:]
  -[HMAccessory assistantIdentifier]
  -[HMAccessory isReachable]
  -[HMAccessory identifier]
  -[HMAccessory isControllable]
  -[HMAccessory setManufacturer:]
  -[HMAccessory messageReceiveQueue]
  -[HMAccessory setBundleID:]
  -[HMAccessory model]
  -[HMAccessory accountIdentifier]
  -[HMAccessory transportTypes]
  -[HMAccessory deleteSiriHistoryWithCompletion:]
  -[HMAccessory deviceIdentifier]
  -[HMAccessory uuid]
  -[HMAccessory delegate]
  -[HMAccessory setReachable:]
  -[HMAccessory paired]
  -[HMAccessory setAccountIdentifier:]
  -[HMAccessory setModel:]
  -[HMAccessory shortDescription]
  -[HMAccessory setContext:]
  -[HMAccessory setSoftwareVersion:]
  -[HMAccessory messageTargetUUID]
  -[HMAccessory category]
  -[HMAccessory supportsAudioDestination]
  -[HMAccessory audioDestinationIdentifier]
  -[HMAccessory homePodVariant]
  -[HMAccessory logIdentifier]
  -[HMAccessory configuredName]
  -[HMAccessory setDeviceIdentifier:]
  -[HMAccessory _privateDelegate]
  -[HMAccessory setAssistantIdentifier:]
  -[HMAccessory setCategory:]
  -[HMAccessory applicationData]
  -[HMAccessory setApplicationData:]
  -[HMAccessory supportsMultiUser]
  -[HMAccessory device]
  -[HMAccessory updateApplicationData:completionHandler:]
  -[HMAccessory audioDestinationController]
  -[HMAccessory encodeWithCoder:]
  -[HMAccessory settings]
  -[HMAccessory setTransportTypes:]
  -[HMAccessory isBridged]
  -[HMAccessory updateAccessoryInfo:]
  -[HMAccessory supportedStereoPairVersions]
  -[HMAccessory remoteLoginHandler]
  -[HMAccessory context]
  -[HMAccessory _mergeWithNewObject:]
  -[HMAccessory _unconfigureContext]
  -[HMAccessory _writeValue:forCharacteristic:completionHandler:]
  -[HMAccessory _readValueForCharacteristic:completionHandler:]
  -[HMAccessory _updateAuthorizationData:forService:characteristic:completionHandler:]
  -[HMAccessory _findCharacteristic:forService:]
  -[HMAccessory audioDestinationName]
  -[HMAccessory audioDestinationType]
  -[HMAccessory supportsAudioGroup]
  -[HMAccessory updateAudioDestinationSupportedOptions:completion:]
  -[HMAccessory audioDestinationMediaProfiles]
  -[HMAccessory audioDestinationParentIdentifier]
  -[HMAccessory audioDestinationGroupIdentifier]
  -[HMAccessory __configureWithContext:home:]
  -[HMAccessory accessoryProfiles]
  -[HMAccessory siriEndpointProfile]
  -[HMAccessory siriEndpointIdentifier]
  -[HMAccessory callCompletionHandler:error:]
  -[HMAccessory callCompletionHandler:]
  -[HMAccessory mediaDestinationController:destinationWithIdentifier:]
  -[HMAccessory _recomputeAssistantIdentifier]
  -[HMAccessory setConfiguredName:]
  -[HMAccessory recomputeAssistantIdentifier]
  -[HMAccessory updateName:completionHandler:]
  -[HMAccessory certificationStatus]
  -[HMAccessory setCertificationStatus:]
  -[HMAccessory cameraProfiles]
  -[HMAccessory lightProfiles]
  -[HMAccessory _findServiceWithUniqueIdentifier:]
  -[HMAccessory serializedDictionaryRepresentation]
  -[HMAccessory televisionProfiles]
  -[HMAccessory supportsAccessCodes]
  -[HMAccessory suspendedState]
  -[HMAccessory wakeSuspendedAccessoryWithWakeType:completion:]
  -[HMAccessory setWifiNetworkInfo:]
  -[HMAccessory wifiNetworkInfo]
  -[HMAccessory uniqueIdentifiersForBridgedAccessories]
  -[HMAccessory bridgedAccessories]
  -[HMAccessory symptomsHandler]
  -[HMAccessory audioDestination]
  -[HMAccessory _handleRootSettingsUpdated:]
  -[HMAccessory setAudioDestination:]
  -[HMAccessory containerHome]
  -[HMAccessory containerUUID]
  -[HMAccessory setAccessorySettingsDataSource:]
  -[HMAccessory _findService:]
  -[HMAccessory networkRouterProfile]
  -[HMAccessory _updateName:completionHandler:]
  -[HMAccessory applicationDataIdentifier]
  -[HMAccessory currentServices]
  -[HMAccessory setCurrentServices:]
  -[HMAccessory adapter:didUpdateSettings:]
  -[HMAccessory accessorySettingsController]
  -[HMAccessory adapter:didUpdateSettingKeyPaths:]
  -[HMAccessory setSupportedStereoPairVersions:]
  -[HMAccessory supportsTargetControl]
  -[HMAccessory supportsTargetController]
  -[HMAccessory _copyFrom:]
  -[HMAccessory setUniqueIdentifiersForBridgedAccessories:]
  -[HMAccessory setAccessoryReprovisionState:]
  -[HMAccessory _handleMultipleCharacteristicsUpdated:message:informDelegate:]
  -[HMAccessory controlTargets]
  -[HMAccessory targetControllers]
  -[HMAccessory _updateRoom:completionHandler:]
  -[HMAccessory supportsMediaAccessControl]
  -[HMAccessory handleRuntimeStateUpdate:completionHandler:]
  -[HMAccessory supportsUserMediaSettings]
  -[HMAccessory isCurrentAccessory]
  -[HMAccessory accessoryReprovisionState]
  -[HMAccessory associationOptions]
  -[HMAccessory reachableTransports]
  -[HMAccessory supportsHomeLevelLocationServiceSetting]
  -[HMAccessory supportsCompanionInitiatedRestart]
  -[HMAccessory supportsMusicAlarm]
  -[HMAccessory supportsAnnounce]
  -[HMAccessory supportsDoorbellChime]
  -[HMAccessory supportsCoordinationDoorbellChime]
  -[HMAccessory supportsThirdPartyMusic]
  -[HMAccessory supportsPreferredMediaUser]
  -[HMAccessory supportsManagedConfigurationProfile]
  -[HMAccessory supportsWalletKey]
  -[HMAccessory suspendCapable]
  -[HMAccessory supportsMessagedHomePodSettings]
  -[HMAccessory settingsAdapter]
  -[HMAccessory setAccessorySettingsController:]
  -[HMAccessory createSettingsAdapterWithDataSource:controller:context:]
  -[HMAccessory configureSettingsAdapterWithCompletionHandler:]
  -[HMAccessory _configureProfilesWithContext:]
  -[HMAccessory softwareUpdateController]
  -[HMAccessory bridgedAccessory]
  -[HMAccessory controlTargetUUIDs]
  -[HMAccessory preferredMediaUserUUID]
  -[HMAccessory _notifyDelegateOfUpdatedSettings:]
  -[HMAccessory updatePreferredMediaUserSelectionType:user:completionHandler:]
  -[HMAccessory setPreferredMediaUserUUID:]
  -[HMAccessory setPreferredUserSelectionType:]
  -[HMAccessory additionalSetupStatus]
  -[HMAccessory setSuspendCapable:]
  -[HMAccessory setSuspendedState:]
  -[HMAccessory setControllable:]
  -[HMAccessory setReachableTransports:]
  -[HMAccessory setBridgedAccessory:]
  -[HMAccessory setCurrentAccessory:]
  -[HMAccessory setAccessoryProfiles:]
  -[HMAccessory setAdditionalSetupStatus:]
  -[HMAccessory accessoryFlags]
  -[HMAccessory setAccessoryFlags:]
  -[HMAccessory isFirmwareUpdateAvailable]
  -[HMAccessory setFirmwareUpdateAvailable:]
  -[HMAccessory setSoftwareUpdateController:]
  -[HMAccessory setRemoteLoginHandler:]
  -[HMAccessory setSupportsTargetControl:]
  -[HMAccessory setSupportsTargetController:]
  -[HMAccessory targetControllerHardwareSupport]
  -[HMAccessory setTargetControllerHardwareSupport:]
  -[HMAccessory setSymptomsHandler:]
  -[HMAccessory setSupportsMultiUser:]
  -[HMAccessory setSupportsHomeLevelLocationServiceSetting:]
  -[HMAccessory setSupportsCompanionInitiatedRestart:]
  -[HMAccessory setSupportsMusicAlarm:]
  -[HMAccessory setSupportsAnnounce:]
  -[HMAccessory supportsDiagnosticsTransfer]
  -[HMAccessory setSupportsDiagnosticsTransfer:]
  -[HMAccessory setSupportsThirdPartyMusic:]
  -[HMAccessory setSupportsPreferredMediaUser:]
  -[HMAccessory setSupportsDoorbellChime:]
  -[HMAccessory setSupportsUserMediaSettings:]
  -[HMAccessory setSupportsAccessCodes:]
  -[HMAccessory setSupportsWalletKey:]
  -[HMAccessory setSupportsManagedConfigurationProfile:]
  -[HMAccessory setProductColor:]
  -[HMAccessory setSupportsMessagedHomePodSettings:]
  -[HMAccessory _notifyDelegateOfAddedControlTarget:]
  -[HMAccessory _notifyDelegateOfRemovedControlTarget:]
  -[HMAccessory setControlTargetUUIDs:]
  -[HMAccessory _mergeServices:]
  -[HMAccessory _mergeControlTargets:]
  -[HMAccessory _notifyClientsOfTargetControlSupportUpdate]
  -[HMAccessory _notifyClientsOfMultiUserSupportUpdate]
  -[HMAccessory _notifyClientsOfHomeLevelLocationServiceSettingSupportUpdate]
  -[HMAccessory _notifyClientsOfSupportsCompanionInitiatedRestartUpdate]
  -[HMAccessory _notifyClientsOfSupportsMusicAlarmUpdate]
  -[HMAccessory _notifyDelegateOfAppDataUpdateForService:]
  -[HMAccessory _invokeDidUpdateSupportsWalletKeyDelegate:]
  -[HMAccessory _notifyDelegatesOfUpdatedControllable]
  -[HMAccessory hasOnboardedForNaturalLighting]
  -[HMAccessory setHasOnboardedForNaturalLighting:]
  -[HMAccessory _notifyClientsOfDiagnosticsTransferSupportUpdate]
  -[HMAccessory supportsIdentify]
  -[HMAccessory setSupportsIdentify:]
  -[HMAccessory _notifyDelegatesOfAdditionalSetupRequiredChange]
  -[HMAccessory _mergeProfileObjects:]
  -[HMAccessory __updateSymptomsHandler:]
  -[HMAccessory setSupportsMediaAccessControl:]
  -[HMAccessory supportsCHIP]
  -[HMAccessory setSupportsCHIP:]
  -[HMAccessory networkProtectionGroupUUID]
  -[HMAccessory setNetworkProtectionGroupUUID:]
  -[HMAccessory notifyDelegateOfAudioDestinationUpdate]
  -[HMAccessory setAudioDestinationController:]
  -[HMAccessory notifyDelegateOfAudioDestinationControllerUpdate]
  -[HMAccessory preferredUserSelectionType]
  -[HMAccessory notifyDelegateUpdatedPreferredMediaUser]
  -[HMAccessory notifyDelegateUpdatedSupportsPreferredMediaUser]
  -[HMAccessory pendingConfigurationIdentifier]
  -[HMAccessory setPendingConfigurationIdentifier:]
  -[HMAccessory _handleConnectivityChanged:]
  -[HMAccessory _identifyWithCompletionHandler:]
  -[HMAccessory _deleteSiriHistoryWithCompletion:]
  -[HMAccessory updateApplicationData:forService:completionHandler:]
  -[HMAccessory _updateApplicationData:forService:completionHandler:]
  -[HMAccessory _notifyClientsOfSymptomsHandlerAddedOrRemoved:]
  -[HMAccessory addControlTargetUUIDs:]
  -[HMAccessory removeControlTargetUUIDs:]
  -[HMAccessory setSupportedDiagnostics:]
  -[HMAccessory initiateDiagnosticsTransferWithOptions:completionHandler:]
  -[HMAccessory setSettingsAdapter:]
  -[HMAccessory updateShouldProcessTransactionRemovalWithValue:completion:]
  -[HMAccessory identifiersForBridgedAccessories]
  -[HMAccessory setSupportsCoordinationDoorbellChime:]
  -[HMAccessory resetControlTargetUUIDs]
  -[HMAccessory setHomePodVariant:]
  -[HMAccessory preferredMediaUser]
  -[HMAccessory updatePreferredMediaUser:completionHandler:]
  -[HMAccessory fetchManagedConfigurationProfilesWithCompletionHandler:]
  -[HMAccessory removeManagedConfigurationProfileWithIdentifier:completionHandler:]
  -[HMAccessory _handlePairingIdentityUpdate:]
  -[HMAccessory isUserNotifiedOfSoftwareUpdate]
  -[HMAccessory markAsUserNotifiedOfSoftwareUpdateWithCompletion:]
  -[HMAccessory markAsUserNotifiedOfSoftwareUpdateWithVersion:completion:]
  -[HMAccessory clearUserNotifiedOfSoftwareUpdateWithCompletion:]
  -[HMAccessory _accessoryInformationService]
  -[HMAccessory _valueForCharacteristic:ofService:]
  -[HMAccessory isAdditionalSetupRequired]
  -[HMAccessory queryAdvertisementInformationWithCompletionHandler:]
  -[HMAccessory validatePairingAuthMethodWithCompletion:]
  -[HMAccessory isSuspendCapable]
  -[HMAccessory updateAccessoryName:completionHandler:]
  -[HMAccessory _setNotifyValue:forCharacteristic:]
  -[HMAccessory _updateAssociatedServiceType:forService:completionHandler:]
  -[HMAccessory _updateName:forService:completionHandler:]
  -[HMAccessory _handleCharacteristicValueUpdated:]
  -[HMAccessory _handleRenamed:]
  -[HMAccessory _handlePairingStateChanged:]
  -[HMAccessory _handleCharacteristicsUpdated:]
  -[HMAccessory _handleAccessoryNotificationsUpdated:]
  -[HMAccessory _handleAccessoryFlagsChanged:]
  -[HMAccessory identifyWithCompletionHandler:]
  -[HMAccessory _updateFromAccessory:]
  -[HMAccessory _listPairingsWithCompletionHandler:]
  -[HMAccessory _auditPairingsWithCompletionHandler:]
  -[HMAccessory _handleServiceRenamed:]
  -[HMAccessory _handleServiceDefaultNameUpdate:]
  -[HMAccessory _handleServiceTypeAssociated:]
  -[HMAccessory _handleServiceSubtype:]
  -[HMAccessory _handleServiceConfigurationState:]
  -[HMAccessory _handleServiceMediaSourceIdentifierUpdated:]
  -[HMAccessory _handleAccessoryCategoryChanged:]
  -[HMAccessory notifyDelegateOfAppDataUpdateForService:]
  -[HMAccessory _handleAccessoryControllableChanged:]
  -[HMAccessory _handleSymptomsHandlerUpdatedMessage:]
  -[HMAccessory addControlTarget:completionHandler:]
  -[HMAccessory removeControlTarget:completionHandler:]
  -[HMAccessory resetControlTargetsWithCompletionHandler:]
  -[HMAccessory _handleControlTargetsUpdatedMessage:]
  -[HMAccessory _handleTargetControlSupportUpdatedMessage:]
  -[HMAccessory _handleMultiUserSupportUpdatedMessage:]
  -[HMAccessory _handleSupportsCompanionInitiatedRestartUpdatedMessage:]
  -[HMAccessory _handleSupportsDiagnosticsTransferUpdateMessage:]
  -[HMAccessory supportedDiagnostics]
  -[HMAccessory initiateDiagnosticsTransferWithCompletionHandler:]
  -[HMAccessory updateSettingWithKeyPath:value:completionHandler:]
  -[HMAccessory setAssociationOptions:]
  -[HMAccessory updatePendingConfigurationIdentifier:completionHandler:]
  -[HMAccessory activateCHIPPairingModeWithCompletion:]
  -[HMAccessory fetchCHIPPairingsWithCompletion:]
  -[HMAccessory removeCHIPPairings:completion:]
  -[HMAccessory setCHIPPairingModeActive:withCompletion:]
  -[HMAccessory activateCHIPPairingModeAndCreateSetupPayloadStringWithCompletion:]
  -[HMAccessory networkConfigurationProfile]
  -[HMAccessory setHasOnboardedForNaturalLightingWithCompletion:]


HMCHIPVendor : NSObject <HMFObject, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  BOOL appleVendor
 @property  NSUUID *UUID
 @property  NSNumber *identifier
 @property  NSString *name
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCHIPVendor supportsSecureCoding]
  +[HMCHIPVendor shortDescription]
  +[HMCHIPVendor UUIDFromIdentifier:]

  // instance methods
  -[HMCHIPVendor UUID]
  -[HMCHIPVendor name]
  -[HMCHIPVendor privateDescription]
  -[HMCHIPVendor initWithCoder:]
  -[HMCHIPVendor .cxx_destruct]
  -[HMCHIPVendor attributeDescriptions]
  -[HMCHIPVendor isEqual:]
  -[HMCHIPVendor identifier]
  -[HMCHIPVendor mutableCopyWithZone:]
  -[HMCHIPVendor shortDescription]
  -[HMCHIPVendor initWithIdentifier:name:]
  -[HMCHIPVendor copyWithZone:]
  -[HMCHIPVendor encodeWithCoder:]
  -[HMCHIPVendor isAppleVendor]
  -[HMCHIPVendor setAppleVendor:]


HMMutableCHIPVendor : HMCHIPVendor
 @property  NSString *name
 @property  BOOL appleVendor

  // instance methods
  -[HMMutableCHIPVendor copyWithZone:]


HMAccessoryInfoProtoWifiNetworkInfoEvent : PBCodable <NSCopying>
 @property  BOOL hasMacAddress
 @property  NSString *macAddress
 @property  BOOL hasNetworkSSID
 @property  NSString *networkSSID

  // instance methods
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent mergeFrom:]
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent .cxx_destruct]
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent dictionaryRepresentation]
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent writeTo:]
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent isEqual:]
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent copyTo:]
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent readFrom:]
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent setMacAddress:]
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent copyWithZone:]
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent hasMacAddress]
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent macAddress]
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent networkSSID]
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent setNetworkSSID:]
  -[HMAccessoryInfoProtoWifiNetworkInfoEvent hasNetworkSSID]


HMCacheEntry : HMFObject <NSSecureCoding>
 @property  NSData *data
 @property  NSDate *lastModificationDate
 @property  BOOL isExpired

  // class methods
  +[HMCacheEntry supportsSecureCoding]
  +[HMCacheEntry shortDescription]

  // instance methods
  -[HMCacheEntry initWithCoder:]
  -[HMCacheEntry .cxx_destruct]
  -[HMCacheEntry isExpired]
  -[HMCacheEntry data]
  -[HMCacheEntry lastModificationDate]
  -[HMCacheEntry encodeWithCoder:]
  -[HMCacheEntry initWithData:lastModificationDate:]


HMHomeCloudShareResponse : NSObject
 @property  CKShareParticipant *participant
 @property  HMUser *ownerUser
 @property  HMUserCloudShareClientInfo *clientInfo

  // instance methods
  -[HMHomeCloudShareResponse .cxx_destruct]
  -[HMHomeCloudShareResponse clientInfo]
  -[HMHomeCloudShareResponse participant]
  -[HMHomeCloudShareResponse ownerUser]
  -[HMHomeCloudShareResponse initWithOwnerUser:pariticipant:clientInfo:]


HMCameraClipSignificantEvent : HMCameraSignificantEvent
 @property  double timeOffsetWithinClip
 @property  NSUUID *clipUUID

  // class methods
  +[HMCameraClipSignificantEvent supportsSecureCoding]

  // instance methods
  -[HMCameraClipSignificantEvent initWithCoder:]
  -[HMCameraClipSignificantEvent .cxx_destruct]
  -[HMCameraClipSignificantEvent attributeDescriptions]
  -[HMCameraClipSignificantEvent isEqual:]
  -[HMCameraClipSignificantEvent clipUUID]
  -[HMCameraClipSignificantEvent encodeWithCoder:]
  -[HMCameraClipSignificantEvent initWithUniqueIdentifier:reason:dateOfOccurrence:confidenceLevel:cameraProfileUUID:faceClassification:timeOffsetWithinClip:clipUUID:]
  -[HMCameraClipSignificantEvent timeOffsetWithinClip]
  -[HMCameraClipSignificantEvent initWithUniqueIdentifier:reason:dateOfOccurrence:confidenceLevel:faceClassification:timeOffsetWithinClip:clipUUID:]


HMCameraObjectFetchServer : HMFObject <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMutableArray *currentlyBatchedFetchedObjects
 @property  HMFMessageTransport *transport
 @property  unsigned long totalFetchedObjectsCount
 @property  NSUUID *clientUUID
 @property  BOOL canHandleMoreFetchedObjects
 @property  unsigned long fetchedObjectsBatchLimit
 @property  unsigned long totalFetchedObjectsLimit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraObjectFetchServer logCategory]

  // instance methods
  -[HMCameraObjectFetchServer setTransport:]
  -[HMCameraObjectFetchServer transport]
  -[HMCameraObjectFetchServer .cxx_destruct]
  -[HMCameraObjectFetchServer clientUUID]
  -[HMCameraObjectFetchServer workQueue]
  -[HMCameraObjectFetchServer logIdentifier]
  -[HMCameraObjectFetchServer initWithClientUUID:transport:workQueue:]
  -[HMCameraObjectFetchServer totalFetchedObjectsCount]
  -[HMCameraObjectFetchServer totalFetchedObjectsLimit]
  -[HMCameraObjectFetchServer canHandleMoreFetchedObjects]
  -[HMCameraObjectFetchServer currentlyBatchedFetchedObjects]
  -[HMCameraObjectFetchServer fetchedObjectsBatchLimit]
  -[HMCameraObjectFetchServer _notifyTransport:ofFetchedObjects:forClientUUID:responseHandler:]
  -[HMCameraObjectFetchServer setTotalFetchedObjectsCount:]
  -[HMCameraObjectFetchServer initWithFetchMessage:workQueue:]
  -[HMCameraObjectFetchServer handleFetchedObject:]
  -[HMCameraObjectFetchServer sendCurrentlyBatchedFetchedObjectsWithCompletion:]
  -[HMCameraObjectFetchServer setFetchedObjectsBatchLimit:]
  -[HMCameraObjectFetchServer setTotalFetchedObjectsLimit:]


_HMAccessorySettingGroup : NSObject <HMFLogging, HMFMessageReceiver, NSSecureCoding, HMFMerging>
 @property  HMAccessorySettings *accessorySettings
 @property  _HMContext *context
 @property  <_HMAccesorySettingGroupDelegate> *delegate
 @property  NSUUID *identifier
 @property  NSString *name
 @property  NSArray *settings
 @property  NSArray *groups
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[_HMAccessorySettingGroup supportsSecureCoding]
  +[_HMAccessorySettingGroup logCategory]
  +[_HMAccessorySettingGroup shortDescription]
  +[_HMAccessorySettingGroup supportedSettingsClasses]
  +[_HMAccessorySettingGroup supportedGroupsClasses]

  // instance methods
  -[_HMAccessorySettingGroup clientQueue]
  -[_HMAccessorySettingGroup name]
  -[_HMAccessorySettingGroup initWithCoder:]
  -[_HMAccessorySettingGroup removeSetting:]
  -[_HMAccessorySettingGroup .cxx_destruct]
  -[_HMAccessorySettingGroup _unconfigure]
  -[_HMAccessorySettingGroup setDelegate:]
  -[_HMAccessorySettingGroup initWithName:]
  -[_HMAccessorySettingGroup descriptionWithPointer:]
  -[_HMAccessorySettingGroup addGroup:]
  -[_HMAccessorySettingGroup init]
  -[_HMAccessorySettingGroup addSetting:]
  -[_HMAccessorySettingGroup isEqual:]
  -[_HMAccessorySettingGroup removeGroup:]
  -[_HMAccessorySettingGroup identifier]
  -[_HMAccessorySettingGroup messageReceiveQueue]
  -[_HMAccessorySettingGroup delegate]
  -[_HMAccessorySettingGroup shortDescription]
  -[_HMAccessorySettingGroup setContext:]
  -[_HMAccessorySettingGroup messageTargetUUID]
  -[_HMAccessorySettingGroup logIdentifier]
  -[_HMAccessorySettingGroup groups]
  -[_HMAccessorySettingGroup messageDestination]
  -[_HMAccessorySettingGroup encodeWithCoder:]
  -[_HMAccessorySettingGroup settings]
  -[_HMAccessorySettingGroup context]
  -[_HMAccessorySettingGroup _unconfigureContext]
  -[_HMAccessorySettingGroup configureWithAccessorySettings:context:]
  -[_HMAccessorySettingGroup mergeObject:]
  -[_HMAccessorySettingGroup accessorySettings]
  -[_HMAccessorySettingGroup setAccessorySettings:]
  -[_HMAccessorySettingGroup resetSettings]
  -[_HMAccessorySettingGroup resetGroups]
  -[_HMAccessorySettingGroup notifyDelegateOfAddedSetting:]
  -[_HMAccessorySettingGroup notifyDelegateOfRemovedSetting:]
  -[_HMAccessorySettingGroup notifyDelegateOfAddedGroup:]
  -[_HMAccessorySettingGroup notifyDelegateOfRemovedGroup:]
  -[_HMAccessorySettingGroup mergeSettings:]
  -[_HMAccessorySettingGroup mergeGroups:]
  -[_HMAccessorySettingGroup settingWithIdentifier:]
  -[_HMAccessorySettingGroup groupWithIdentifier:]


HMAccessorySettingGroup : HMSettingGroup <_HMAccesorySettingGroupDelegate, HMFLogging>
 @property  _HMAccessorySettingGroup *internal
 @property  HMAccessorySettingGroup *group
 @property  NSString *localizedTitle
 @property  NSArray *settings
 @property  NSArray *groups
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessorySettingGroup logCategory]

  // instance methods
  -[HMAccessorySettingGroup internal]
  -[HMAccessorySettingGroup localizedTitle]
  -[HMAccessorySettingGroup setGroup:]
  -[HMAccessorySettingGroup removeSetting:]
  -[HMAccessorySettingGroup initWithKeyPath:]
  -[HMAccessorySettingGroup .cxx_destruct]
  -[HMAccessorySettingGroup initWithInternal:]
  -[HMAccessorySettingGroup _notifyClientOfAddedGroup:]
  -[HMAccessorySettingGroup accessorySettingGroupWithKeyPath:]
  -[HMAccessorySettingGroup addGroup:]
  -[HMAccessorySettingGroup init]
  -[HMAccessorySettingGroup addSetting:]
  -[HMAccessorySettingGroup isEqual:]
  -[HMAccessorySettingGroup removeGroup:]
  -[HMAccessorySettingGroup _settingGroup:didRemoveSettingGroup:]
  -[HMAccessorySettingGroup keyPath]
  -[HMAccessorySettingGroup group]
  -[HMAccessorySettingGroup _settingGroup:didRemoveSetting:]
  -[HMAccessorySettingGroup isReflectedEqual:]
  -[HMAccessorySettingGroup _notifyClientOfRemovedGroup:]
  -[HMAccessorySettingGroup _notifyClientOfAddedSetting:]
  -[HMAccessorySettingGroup mergeReflected:]
  -[HMAccessorySettingGroup _settingGroup:didAddSetting:]
  -[HMAccessorySettingGroup logIdentifier]
  -[HMAccessorySettingGroup _notifyClientOfRemovedSetting:]
  -[HMAccessorySettingGroup accessorySettingWithKeyPath:]
  -[HMAccessorySettingGroup groups]
  -[HMAccessorySettingGroup _settingGroup:didAddSettingGroup:]
  -[HMAccessorySettingGroup settings]


HMCameraObjectFetchClient : HMFObject <HMFLogging, HMFMessageReceiver>
 @property  NSMutableArray *fetchedObjects
 @property  NSUUID *UUID
 @property  _HMContext *context
 @property  NSString *messageName
 @property  HMFMessageDestination *destination
 @property  NSDictionary *payload
 @property  Class classForUnarchiving
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMCameraObjectFetchClient logCategory]

  // instance methods
  -[HMCameraObjectFetchClient setPayload:]
  -[HMCameraObjectFetchClient fetchedObjects]
  -[HMCameraObjectFetchClient UUID]
  -[HMCameraObjectFetchClient payload]
  -[HMCameraObjectFetchClient .cxx_destruct]
  -[HMCameraObjectFetchClient destination]
  -[HMCameraObjectFetchClient messageName]
  -[HMCameraObjectFetchClient messageReceiveQueue]
  -[HMCameraObjectFetchClient dealloc]
  -[HMCameraObjectFetchClient messageTargetUUID]
  -[HMCameraObjectFetchClient logIdentifier]
  -[HMCameraObjectFetchClient context]
  -[HMCameraObjectFetchClient initWithUUID:context:messageName:destination:]
  -[HMCameraObjectFetchClient setClassForUnarchiving:]
  -[HMCameraObjectFetchClient fetchWithCompletion:]
  -[HMCameraObjectFetchClient handleDidFetchObjectsMessage:]
  -[HMCameraObjectFetchClient classForUnarchiving]


HMAccessoryAccessCodeFetchResponse : NSObject
 @property  HMAccessory *accessory
 @property  NSArray *accessoryAccessCodes
 @property  NSError *error

  // class methods
  +[HMAccessoryAccessCodeFetchResponse responseWithValue:accessory:]

  // instance methods
  -[HMAccessoryAccessCodeFetchResponse accessory]
  -[HMAccessoryAccessCodeFetchResponse .cxx_destruct]
  -[HMAccessoryAccessCodeFetchResponse setError:]
  -[HMAccessoryAccessCodeFetchResponse error]
  -[HMAccessoryAccessCodeFetchResponse initWithAccessory:accessoryAccessCodes:error:]
  -[HMAccessoryAccessCodeFetchResponse accessoryAccessCodes]


HMLanguageSetting : HMImmutableSetting
 @property  HMSettingLanguageValue *languageValue

  // instance methods
  -[HMLanguageSetting .cxx_destruct]
  -[HMLanguageSetting attributeDescriptions]
  -[HMLanguageSetting isEqual:]
  -[HMLanguageSetting payloadCopy]
  -[HMLanguageSetting protoPayload]
  -[HMLanguageSetting initWithProtoPayload:]
  -[HMLanguageSetting settingWithSettingValue:]
  -[HMLanguageSetting settingValue]
  -[HMLanguageSetting initWithKeyPath:readOnly:payload:]
  -[HMLanguageSetting initWithKeyPath:readOnly:languageValue:]
  -[HMLanguageSetting languageValue]


HMCameraClipAssetContext : NSObject <NSCopying, NSSecureCoding>
 @property  NSURL *url
 @property  NSDate *expirationDate
 @property  NSDictionary *requiredHTTPHeaders

  // class methods
  +[HMCameraClipAssetContext supportsSecureCoding]

  // instance methods
  -[HMCameraClipAssetContext initWithCoder:]
  -[HMCameraClipAssetContext url]
  -[HMCameraClipAssetContext .cxx_destruct]
  -[HMCameraClipAssetContext init]
  -[HMCameraClipAssetContext isEqual:]
  -[HMCameraClipAssetContext copyWithZone:]
  -[HMCameraClipAssetContext expirationDate]
  -[HMCameraClipAssetContext encodeWithCoder:]
  -[HMCameraClipAssetContext requiredHTTPHeaders]
  -[HMCameraClipAssetContext initWithURL:expirationDate:requiredHTTPHeaders:]


HMAccessorySettingsPartialFetchFailureInformation : NSObject <HMFObject, HMMessageEncoding, NSCopying, NSMutableCopying>
 @property  NSDictionary *failureTypes
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessorySettingsPartialFetchFailureInformation shortDescription]

  // instance methods
  -[HMAccessorySettingsPartialFetchFailureInformation privateDescription]
  -[HMAccessorySettingsPartialFetchFailureInformation failureTypes]
  -[HMAccessorySettingsPartialFetchFailureInformation .cxx_destruct]
  -[HMAccessorySettingsPartialFetchFailureInformation attributeDescriptions]
  -[HMAccessorySettingsPartialFetchFailureInformation init]
  -[HMAccessorySettingsPartialFetchFailureInformation isEqual:]
  -[HMAccessorySettingsPartialFetchFailureInformation mutableCopyWithZone:]
  -[HMAccessorySettingsPartialFetchFailureInformation shortDescription]
  -[HMAccessorySettingsPartialFetchFailureInformation copyWithZone:]
  -[HMAccessorySettingsPartialFetchFailureInformation initWithPayload:]
  -[HMAccessorySettingsPartialFetchFailureInformation failedKeyPaths]
  -[HMAccessorySettingsPartialFetchFailureInformation fetchFailureTypeForKeyPath:]
  -[HMAccessorySettingsPartialFetchFailureInformation payloadCopy]
  -[HMAccessorySettingsPartialFetchFailureInformation initWithFailureTypes:]
  -[HMAccessorySettingsPartialFetchFailureInformation setFetchFailureType:forKeyPath:]


HMMutableAccessorySettingsPartialFetchFailureInformation : HMAccessorySettingsPartialFetchFailureInformation
  // instance methods
  -[HMMutableAccessorySettingsPartialFetchFailureInformation setFetchFailureType:forKeyPath:]


HMCameraUserSettings : NSObject <HMFLogging, HMFMessageReceiver, HMFObject>
 @property  _HMCameraUserSettings *cameraUserSettings
 @property  HMCameraBulletinBoardSmartNotification *smartNotificationBulletin
 @property  _HMContext *context
 @property  HMAccessory *accessory
 @property  unsigned long supportedFeatures
 @property  unsigned long currentAccessMode
 @property  unsigned long recordingEventTriggers
 @property  BOOL snapshotsAllowed
 @property  BOOL accessModeIndicatorEnabled
 @property  BOOL nightVisionModeEnabled
 @property  BOOL recordingAudioEnabled
 @property  BOOL accessModeChangeNotificationEnabled
 @property  BOOL cameraManuallyDisabled
 @property  NSSet *activityZones
 @property  BOOL activityZonesIncludedForSignificantEventDetection
 @property  BOOL reachabilityChangeNotificationEnabled
 @property  BOOL reachabilityEventNotificationEnabled
 @property  <HMCameraUserSettingsDelegate> *delegate
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMCameraUserSettings logCategory]
  +[HMCameraUserSettings shortDescription]

  // instance methods
  -[HMCameraUserSettings accessory]
  -[HMCameraUserSettings setAccessory:]
  -[HMCameraUserSettings privateDescription]
  -[HMCameraUserSettings uniqueIdentifier]
  -[HMCameraUserSettings .cxx_destruct]
  -[HMCameraUserSettings setDelegate:]
  -[HMCameraUserSettings attributeDescriptions]
  -[HMCameraUserSettings supportedFeatures]
  -[HMCameraUserSettings messageReceiveQueue]
  -[HMCameraUserSettings delegate]
  -[HMCameraUserSettings shortDescription]
  -[HMCameraUserSettings setContext:]
  -[HMCameraUserSettings messageTargetUUID]
  -[HMCameraUserSettings logIdentifier]
  -[HMCameraUserSettings messageDestination]
  -[HMCameraUserSettings context]
  -[HMCameraUserSettings cameraUserSettings]
  -[HMCameraUserSettings setCameraUserSettings:]
  -[HMCameraUserSettings configureWithAccessory:context:]
  -[HMCameraUserSettings initWithCameraUserSettings:]
  -[HMCameraUserSettings isAccessModeChangeNotificationEnabled]
  -[HMCameraUserSettings isReachabilityEventNotificationEnabled]
  -[HMCameraUserSettings _mergeNewSettings:]
  -[HMCameraUserSettings smartNotificationBulletinForSettings:]
  -[HMCameraUserSettings setSmartNotificationBulletin:]
  -[HMCameraUserSettings smartNotificationBulletin]
  -[HMCameraUserSettings handleSettingsDidUpdateMessage:]
  -[HMCameraUserSettings accessModeAtHome]
  -[HMCameraUserSettings accessModeNotAtHome]
  -[HMCameraUserSettings updateActivityZones:areActivityZonesIncludedForSignificantEventDetection:completionHandler:]
  -[HMCameraUserSettings updateReachabilityEventNotificationEnabled:completionHandler:]
  -[HMCameraUserSettings _updateSettings:shouldNotifyDelegate:]
  -[HMCameraUserSettings currentAccessMode]
  -[HMCameraUserSettings recordingEventTriggers]
  -[HMCameraUserSettings isAccessModeIndicatorEnabled]
  -[HMCameraUserSettings areSnapshotsAllowed]
  -[HMCameraUserSettings isNightVisionModeEnabled]
  -[HMCameraUserSettings isRecordingAudioEnabled]
  -[HMCameraUserSettings isCameraManuallyDisabled]
  -[HMCameraUserSettings activityZones]
  -[HMCameraUserSettings areActivityZonesIncludedForSignificantEventDetection]
  -[HMCameraUserSettings _notifyDelegatesOfUpdatedSettings]
  -[HMCameraUserSettings accessModeForPresenceType:]
  -[HMCameraUserSettings updateAccessMode:forPresenceEventType:completionHandler:]
  -[HMCameraUserSettings updateRecordingEventTriggers:completionHandler:]
  -[HMCameraUserSettings updateAccessModeIndicatorEnabled:completionHandler:]
  -[HMCameraUserSettings updateSnapshotsAllowed:completionHandler:]
  -[HMCameraUserSettings updateNightVisionModeEnabled:completionHandler:]
  -[HMCameraUserSettings updateRecordingAudioEnabled:completionHandler:]
  -[HMCameraUserSettings updateAccessModeChangeNotificationEnabled:completionHandler:]
  -[HMCameraUserSettings updateActivityZones:completionHandler:]
  -[HMCameraUserSettings updateReachabilityChangeNotificationEnabled:completionHandler:]
  -[HMCameraUserSettings isReachabilityChangeNotificationEnabled]


HMCameraAudioControl : HMCameraControl
 @property  _HMCameraAudioControl *audioControl
 @property  HMCharacteristic *mute
 @property  HMCharacteristic *volume

  // instance methods
  -[HMCameraAudioControl mute]
  -[HMCameraAudioControl volume]
  -[HMCameraAudioControl .cxx_destruct]
  -[HMCameraAudioControl audioControl]
  -[HMCameraAudioControl setAudioControl:]
  -[HMCameraAudioControl initWithAudioControl:]


HMUserActionPredictionDuetPredictionStore : PBCodable <NSCopying>
 @property  NSMutableArray *predictions

  // class methods
  +[HMUserActionPredictionDuetPredictionStore predictionType]

  // instance methods
  -[HMUserActionPredictionDuetPredictionStore mergeFrom:]
  -[HMUserActionPredictionDuetPredictionStore .cxx_destruct]
  -[HMUserActionPredictionDuetPredictionStore dictionaryRepresentation]
  -[HMUserActionPredictionDuetPredictionStore writeTo:]
  -[HMUserActionPredictionDuetPredictionStore isEqual:]
  -[HMUserActionPredictionDuetPredictionStore copyTo:]
  -[HMUserActionPredictionDuetPredictionStore readFrom:]
  -[HMUserActionPredictionDuetPredictionStore copyWithZone:]
  -[HMUserActionPredictionDuetPredictionStore predictions]
  -[HMUserActionPredictionDuetPredictionStore setPredictions:]
  -[HMUserActionPredictionDuetPredictionStore addPrediction:]
  -[HMUserActionPredictionDuetPredictionStore predictionsCount]
  -[HMUserActionPredictionDuetPredictionStore clearPredictions]
  -[HMUserActionPredictionDuetPredictionStore predictionAtIndex:]


HMCameraBulletinBoardNotificationCondition : NSObject <HMFObject, NSCopying, NSMutableCopying>
 @property  HMCameraSignificantEventReasonNotificationCondition *significantEventReasonCondition
 @property  HMCameraSignificantEventPersonFamiliarityNotificationCondition *significantEventPersonFamiliarityCondition
 @property  NSPredicate *dateComponentsPredicate
 @property  NSPredicate *presencePredicate
 @property  NSPredicate *predicate
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraBulletinBoardNotificationCondition shortDescription]

  // instance methods
  -[HMCameraBulletinBoardNotificationCondition initWithPredicate:]
  -[HMCameraBulletinBoardNotificationCondition privateDescription]
  -[HMCameraBulletinBoardNotificationCondition predicate]
  -[HMCameraBulletinBoardNotificationCondition .cxx_destruct]
  -[HMCameraBulletinBoardNotificationCondition attributeDescriptions]
  -[HMCameraBulletinBoardNotificationCondition init]
  -[HMCameraBulletinBoardNotificationCondition mutableCopyWithZone:]
  -[HMCameraBulletinBoardNotificationCondition shortDescription]
  -[HMCameraBulletinBoardNotificationCondition copyWithZone:]
  -[HMCameraBulletinBoardNotificationCondition significantEventReasonCondition]
  -[HMCameraBulletinBoardNotificationCondition significantEventPersonFamiliarityCondition]
  -[HMCameraBulletinBoardNotificationCondition dateComponentsPredicate]
  -[HMCameraBulletinBoardNotificationCondition presencePredicate]
  -[HMCameraBulletinBoardNotificationCondition setSignificantEventReasonCondition:]
  -[HMCameraBulletinBoardNotificationCondition setSignificantEventPersonFamiliarityCondition:]
  -[HMCameraBulletinBoardNotificationCondition setDateComponentsPredicate:]
  -[HMCameraBulletinBoardNotificationCondition setPresencePredicate:]


HMMutableCameraBulletinBoardNotificationCondition : HMCameraBulletinBoardNotificationCondition
 @property  HMCameraSignificantEventReasonNotificationCondition *significantEventReasonCondition
 @property  HMCameraSignificantEventPersonFamiliarityNotificationCondition *significantEventPersonFamiliarityCondition
 @property  NSPredicate *dateComponentsPredicate
 @property  NSPredicate *presencePredicate

  // instance methods
  -[HMMutableCameraBulletinBoardNotificationCondition copyWithZone:]


HMPresenceEventActivation : NSObject
 @property  NSNumber *number
 @property  unsigned long value

  // class methods
  +[HMPresenceEventActivation activationGranularityWithNumber:]
  +[HMPresenceEventActivation activationGranularityWithValue:]
  +[HMPresenceEventActivation activationGranularityWithMessage:]
  +[HMPresenceEventActivation activationGranularityWithDict:]
  +[HMPresenceEventActivation activationGranularityWithCoder:]

  // instance methods
  -[HMPresenceEventActivation number]
  -[HMPresenceEventActivation initWithNumber:]
  -[HMPresenceEventActivation addToCoder:]
  -[HMPresenceEventActivation isEqual:]
  -[HMPresenceEventActivation value]
  -[HMPresenceEventActivation addToPayload:]


HMRemoteLoginMessage : HMFObject <NSSecureCoding>
 @property  NSString *sessionID
 @property  NSError *error

  // class methods
  +[HMRemoteLoginMessage supportsSecureCoding]

  // instance methods
  -[HMRemoteLoginMessage sessionID]
  -[HMRemoteLoginMessage initWithCoder:]
  -[HMRemoteLoginMessage .cxx_destruct]
  -[HMRemoteLoginMessage initWithSessionID:]
  -[HMRemoteLoginMessage setError:]
  -[HMRemoteLoginMessage encodeWithCoder:]
  -[HMRemoteLoginMessage error]
  -[HMRemoteLoginMessage initNewMessage]


HMAccessoryOwnershipToken : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *internalData

  // class methods
  +[HMAccessoryOwnershipToken supportsSecureCoding]

  // instance methods
  -[HMAccessoryOwnershipToken initWithCoder:]
  -[HMAccessoryOwnershipToken .cxx_destruct]
  -[HMAccessoryOwnershipToken internalData]
  -[HMAccessoryOwnershipToken isEqual:]
  -[HMAccessoryOwnershipToken initWithData:]
  -[HMAccessoryOwnershipToken copyWithZone:]
  -[HMAccessoryOwnershipToken encodeWithCoder:]


HMAccessorySetupPayload : NSObject <NSCopying, NSSecureCoding>
 @property  HMSetupAccessoryPayload *internalSetupPayload
 @property  HMAccessoryOwnershipToken *ownershipToken

  // class methods
  +[HMAccessorySetupPayload supportsSecureCoding]

  // instance methods
  -[HMAccessorySetupPayload initWithCoder:]
  -[HMAccessorySetupPayload .cxx_destruct]
  -[HMAccessorySetupPayload isEqual:]
  -[HMAccessorySetupPayload ownershipToken]
  -[HMAccessorySetupPayload copyWithZone:]
  -[HMAccessorySetupPayload encodeWithCoder:]
  -[HMAccessorySetupPayload initWithURL:]
  -[HMAccessorySetupPayload internalSetupPayload]
  -[HMAccessorySetupPayload initWithInternalSetupPayload:ownershipToken:]
  -[HMAccessorySetupPayload initWithURL:ownershipToken:]


HMMediaContentProfileAccessControl : HMAccessControl <NSCopying, NSMutableCopying>
 @property  NSArray *accessories

  // class methods
  +[HMMediaContentProfileAccessControl isAccessorySupported:]
  +[HMMediaContentProfileAccessControl shortDescription]

  // instance methods
  -[HMMediaContentProfileAccessControl initWithUser:]
  -[HMMediaContentProfileAccessControl .cxx_destruct]
  -[HMMediaContentProfileAccessControl descriptionWithPointer:]
  -[HMMediaContentProfileAccessControl isEqual:]
  -[HMMediaContentProfileAccessControl initWithUser:accessories:]
  -[HMMediaContentProfileAccessControl mutableCopyWithZone:]
  -[HMMediaContentProfileAccessControl shortDescription]
  -[HMMediaContentProfileAccessControl copyWithZone:]
  -[HMMediaContentProfileAccessControl accessories]


HMMutableMediaContentProfileAccessControl : HMMediaContentProfileAccessControl
 @property  NSArray *accessories

  // instance methods
  -[HMMutableMediaContentProfileAccessControl addAccessory:]
  -[HMMutableMediaContentProfileAccessControl setAccessories:]
  -[HMMutableMediaContentProfileAccessControl removeAccessory:]


HMAccessoryAccessCode : NSObject <HMFObject>
 @property  HMAccessory *accessory
 @property  HMAccessCodeValue *accessCodeValue
 @property  NSNumber *uniqueIdentifier
 @property  BOOL hasRestrictions
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessoryAccessCode shortDescription]
  +[HMAccessoryAccessCode accessoryAccessCodeWithValue:accessory:]

  // instance methods
  -[HMAccessoryAccessCode accessory]
  -[HMAccessoryAccessCode privateDescription]
  -[HMAccessoryAccessCode uniqueIdentifier]
  -[HMAccessoryAccessCode .cxx_destruct]
  -[HMAccessoryAccessCode attributeDescriptions]
  -[HMAccessoryAccessCode shortDescription]
  -[HMAccessoryAccessCode accessCodeValue]
  -[HMAccessoryAccessCode createAccessoryAccessCodeValue]
  -[HMAccessoryAccessCode hasRestrictions]
  -[HMAccessoryAccessCode initWithAccessory:accessCodeValue:uniqueIdentifier:hasRestrictions:]


HMPBHomeReference : PBCodable <NSCopying>
 @property  BOOL hasUniqueIdentifier
 @property  NSData *uniqueIdentifier

  // class methods
  +[HMPBHomeReference homeReferenceWithData:]
  +[HMPBHomeReference homeReferenceWithHome:]

  // instance methods
  -[HMPBHomeReference hasUniqueIdentifier]
  -[HMPBHomeReference setUniqueIdentifier:]
  -[HMPBHomeReference mergeFrom:]
  -[HMPBHomeReference uniqueIdentifier]
  -[HMPBHomeReference .cxx_destruct]
  -[HMPBHomeReference dictionaryRepresentation]
  -[HMPBHomeReference writeTo:]
  -[HMPBHomeReference isEqual:]
  -[HMPBHomeReference copyTo:]
  -[HMPBHomeReference readFrom:]
  -[HMPBHomeReference copyWithZone:]


HMCameraRecordingReachabilityEvent : NSObject <HMCameraRecordingEvent, NSSecureCoding>
 @property  NSUUID *uniqueIdentifier
 @property  BOOL reachable
 @property  NSDate *dateOfOccurrence
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraRecordingReachabilityEvent supportsSecureCoding]

  // instance methods
  -[HMCameraRecordingReachabilityEvent uniqueIdentifier]
  -[HMCameraRecordingReachabilityEvent initWithCoder:]
  -[HMCameraRecordingReachabilityEvent .cxx_destruct]
  -[HMCameraRecordingReachabilityEvent isEqual:]
  -[HMCameraRecordingReachabilityEvent isReachable]
  -[HMCameraRecordingReachabilityEvent encodeWithCoder:]
  -[HMCameraRecordingReachabilityEvent dateOfOccurrence]
  -[HMCameraRecordingReachabilityEvent initWithUniqueIdentifier:dateOfOccurrence:reachable:]


HMUserCloudShareWithOwnerOperation : NSOperation <HMFLogging>
 @property  NSUUID *operationID
 @property  HMUser *currentUser
 @property  HMUser *ownerUser
 @property  CKShare *share
 @property  CKContainer *container
 @property  BOOL allowWriteAccess
 @property  @? analyticsEventSender
 @property  @? completion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMUserCloudShareWithOwnerOperation logCategory]

  // instance methods
  -[HMUserCloudShareWithOwnerOperation share]
  -[HMUserCloudShareWithOwnerOperation completion]
  -[HMUserCloudShareWithOwnerOperation setCompletion:]
  -[HMUserCloudShareWithOwnerOperation main]
  -[HMUserCloudShareWithOwnerOperation operationID]
  -[HMUserCloudShareWithOwnerOperation container]
  -[HMUserCloudShareWithOwnerOperation .cxx_destruct]
  -[HMUserCloudShareWithOwnerOperation currentUser]
  -[HMUserCloudShareWithOwnerOperation logIdentifier]
  -[HMUserCloudShareWithOwnerOperation setShare:]
  -[HMUserCloudShareWithOwnerOperation ownerUser]
  -[HMUserCloudShareWithOwnerOperation initWithShare:container:ownerUser:allowWriteAccess:currentUser:]
  -[HMUserCloudShareWithOwnerOperation initWithShare:container:ownerUser:allowWriteAccess:currentUser:analyticsEventSender:]
  -[HMUserCloudShareWithOwnerOperation analyticsEventSender]
  -[HMUserCloudShareWithOwnerOperation allowWriteAccess]
  -[HMUserCloudShareWithOwnerOperation sendShareToOwner:from:savedOwnerAsParticipant:share:completion:]
  -[HMUserCloudShareWithOwnerOperation saveShareAndObtainSavedOwner:completion:]
  -[HMUserCloudShareWithOwnerOperation removeOwnerAsParticipant:completion:]
  -[HMUserCloudShareWithOwnerOperation fetchParticipantForLookupInfo:completion:]


HMAccessoryBrowser : NSObject <HMFMessageReceiver>
 @property  _HMContext *context
 @property  NSUUID *uuid
 @property  HMMutableArray *accessories
 @property  unsigned long generationCounter
 @property  BOOL browsing
 @property  <HMAccessoryBrowserDelegate> *delegate
 @property  NSArray *discoveredAccessories
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessoryBrowser unconfigureQueue]

  // instance methods
  -[HMAccessoryBrowser setAccessories:]
  -[HMAccessoryBrowser setBrowsing:]
  -[HMAccessoryBrowser .cxx_destruct]
  -[HMAccessoryBrowser _start]
  -[HMAccessoryBrowser isBrowsing]
  -[HMAccessoryBrowser setDelegate:]
  -[HMAccessoryBrowser init]
  -[HMAccessoryBrowser messageReceiveQueue]
  -[HMAccessoryBrowser setGenerationCounter:]
  -[HMAccessoryBrowser uuid]
  -[HMAccessoryBrowser delegate]
  -[HMAccessoryBrowser dealloc]
  -[HMAccessoryBrowser messageTargetUUID]
  -[HMAccessoryBrowser generationCounter]
  -[HMAccessoryBrowser accessories]
  -[HMAccessoryBrowser stopSearchingForNewAccessories]
  -[HMAccessoryBrowser startSearchingForNewAccessories]
  -[HMAccessoryBrowser setUuid:]
  -[HMAccessoryBrowser context]
  -[HMAccessoryBrowser _registerNotificationHandlers]
  -[HMAccessoryBrowser handleStartWithError:response:]
  -[HMAccessoryBrowser discoveredAccessories]
  -[HMAccessoryBrowser _startSearchingForNewAccessories]
  -[HMAccessoryBrowser _fetchNewAccessoriesWithPrivacyCheck]
  -[HMAccessoryBrowser stopSearchingForNewAccessoriesWithError:]
  -[HMAccessoryBrowser _stopSearchingForNewAccessoriesWithError:]
  -[HMAccessoryBrowser _updateNewAccessories:]
  -[HMAccessoryBrowser _fetchNewAccessories]
  -[HMAccessoryBrowser _handleNewAccessoriesFound:]
  -[HMAccessoryBrowser _handleNewAccessoriesRemoved:]


HMImmutableStringSetting : HMImmutableSetting
 @property  NSString *stringValue

  // instance methods
  -[HMImmutableStringSetting stringValue]
  -[HMImmutableStringSetting .cxx_destruct]
  -[HMImmutableStringSetting attributeDescriptions]
  -[HMImmutableStringSetting isEqual:]
  -[HMImmutableStringSetting payloadCopy]
  -[HMImmutableStringSetting protoPayload]
  -[HMImmutableStringSetting initWithProtoPayload:]
  -[HMImmutableStringSetting settingWithSettingValue:]
  -[HMImmutableStringSetting settingValue]
  -[HMImmutableStringSetting initWithKeyPath:readOnly:payload:]
  -[HMImmutableStringSetting initWithKeyPath:readOnly:stringValue:]


HMAccessoryDiagnosticsMetadata : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *snapshotPath
 @property  NSDictionary *urlParameters
 @property  NSURL *privacyPolicyURL
 @property  NSURL *uploadDestination
 @property  NSNumber *consentVersion
 @property  NSNumber *uploadType

  // class methods
  +[HMAccessoryDiagnosticsMetadata supportsSecureCoding]

  // instance methods
  -[HMAccessoryDiagnosticsMetadata initWithCoder:]
  -[HMAccessoryDiagnosticsMetadata privacyPolicyURL]
  -[HMAccessoryDiagnosticsMetadata .cxx_destruct]
  -[HMAccessoryDiagnosticsMetadata attributeDescriptions]
  -[HMAccessoryDiagnosticsMetadata copyWithZone:]
  -[HMAccessoryDiagnosticsMetadata encodeWithCoder:]
  -[HMAccessoryDiagnosticsMetadata snapshotPath]
  -[HMAccessoryDiagnosticsMetadata urlParameters]
  -[HMAccessoryDiagnosticsMetadata uploadDestination]
  -[HMAccessoryDiagnosticsMetadata consentVersion]
  -[HMAccessoryDiagnosticsMetadata uploadType]
  -[HMAccessoryDiagnosticsMetadata initWithSnapshotPath:urlParameters:privacyPolicyURL:uploadDestination:consentVersion:uploadType:]


_HMAccessoryProfile : NSObject <HMObjectMerge, HMFMessageReceiver, NSSecureCoding>
 @property  NSString *assistantIdentifier
 @property  _HMContext *context
 @property  HMAccessory *accessory
 @property  HMHome *home
 @property  NSUUID *profileUniqueIdentifier
 @property  NSArray *services
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[_HMAccessoryProfile supportsSecureCoding]

  // instance methods
  -[_HMAccessoryProfile home]
  -[_HMAccessoryProfile accessory]
  -[_HMAccessoryProfile services]
  -[_HMAccessoryProfile uniqueIdentifier]
  -[_HMAccessoryProfile initWithCoder:]
  -[_HMAccessoryProfile .cxx_destruct]
  -[_HMAccessoryProfile _unconfigure]
  -[_HMAccessoryProfile isEqual:]
  -[_HMAccessoryProfile assistantIdentifier]
  -[_HMAccessoryProfile messageReceiveQueue]
  -[_HMAccessoryProfile messageTargetUUID]
  -[_HMAccessoryProfile setAssistantIdentifier:]
  -[_HMAccessoryProfile encodeWithCoder:]
  -[_HMAccessoryProfile context]
  -[_HMAccessoryProfile _mergeWithNewObject:]
  -[_HMAccessoryProfile _unconfigureContext]
  -[_HMAccessoryProfile profileUniqueIdentifier]
  -[_HMAccessoryProfile _registerNotificationHandlers]
  -[_HMAccessoryProfile handleRuntimeStateUpdate:]
  -[_HMAccessoryProfile __configureWithContext:accessory:]
  -[_HMAccessoryProfile _recomputeAssistantIdentifier]
  -[_HMAccessoryProfile recomputeAssistantIdentifier]
  -[_HMAccessoryProfile initWithUUID:services:]


HMSymptomFixSession : NSObject <HMFLogging, HMFTimerDelegate>
 @property  _HMContext *context
 @property  NSString *logIdentifier
 @property  long long state
 @property  NSError *error
 @property  SFDeviceRepairSession *deviceRepairSession
 @property  BOOL deviceRepairSessionFinished
 @property  BOOL hasSymptomDisappeared
 @property  HMFTimer *symptomDisappearanceTimer
 @property  HMSymptom *symptom
 @property  NSUUID *deviceIdentifier
 @property  unsigned int deviceRepairFlags
 @property  <HMSymptomFixSessionDelegate> *delegate
 @property  UIViewController *presentingViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSymptomFixSession logCategory]
  +[HMSymptomFixSession _createDeviceRepairSession]
  +[HMSymptomFixSession _createSymptomDisappearanceTimer]

  // instance methods
  -[HMSymptomFixSession timerDidFire:]
  -[HMSymptomFixSession _updateState]
  -[HMSymptomFixSession .cxx_destruct]
  -[HMSymptomFixSession setPresentingViewController:]
  -[HMSymptomFixSession stop]
  -[HMSymptomFixSession setDelegate:]
  -[HMSymptomFixSession setState:]
  -[HMSymptomFixSession presentingViewController]
  -[HMSymptomFixSession init]
  -[HMSymptomFixSession symptom]
  -[HMSymptomFixSession state]
  -[HMSymptomFixSession deviceIdentifier]
  -[HMSymptomFixSession delegate]
  -[HMSymptomFixSession start]
  -[HMSymptomFixSession dealloc]
  -[HMSymptomFixSession logIdentifier]
  -[HMSymptomFixSession setError:]
  -[HMSymptomFixSession error]
  -[HMSymptomFixSession context]
  -[HMSymptomFixSession initWithSymptom:deviceIdentifier:context:]
  -[HMSymptomFixSession setDeviceRepairFlags:]
  -[HMSymptomFixSession noteSymptomDisappeared]
  -[HMSymptomFixSession setDeviceRepairSession:]
  -[HMSymptomFixSession deviceRepairSession]
  -[HMSymptomFixSession deviceRepairFlags]
  -[HMSymptomFixSession _updateForDeviceSetupProgressEvent:error:]
  -[HMSymptomFixSession setSymptomDisappearanceTimer:]
  -[HMSymptomFixSession setHasSymptomDisappeared:]
  -[HMSymptomFixSession setDeviceRepairSessionFinished:]
  -[HMSymptomFixSession _startSymptomDisappearanceTimer]
  -[HMSymptomFixSession isDeviceRepairSessionFinished]
  -[HMSymptomFixSession hasSymptomDisappeared]
  -[HMSymptomFixSession symptomDisappearanceTimer]


HMSetting : NSObject <NSSecureCoding>
 @property  NSString *keyPath
 @property  long long type
 @property  <HMSettingManager> *settingManager
 @property  NSString *name
 @property  id value
 @property  Class valueClass
 @property  unsigned long properties
 @property  HMSettingValue *internalValue
 @property  BOOL writable
 @property  NSString *localizedTitle
 @property  NSUUID *identifier

  // class methods
  +[HMSetting supportsSecureCoding]

  // instance methods
  -[HMSetting merge:]
  -[HMSetting localizedTitle]
  -[HMSetting name]
  -[HMSetting initWithCoder:]
  -[HMSetting setType:]
  -[HMSetting .cxx_destruct]
  -[HMSetting properties]
  -[HMSetting valueForUpdate:]
  -[HMSetting setName:]
  -[HMSetting internalValue]
  -[HMSetting setKeyPath:]
  -[HMSetting isEqual:]
  -[HMSetting updateValue:completionHandler:]
  -[HMSetting identifier]
  -[HMSetting keyPath]
  -[HMSetting setValue:]
  -[HMSetting setProperties:]
  -[HMSetting isWritable]
  -[HMSetting valueClass]
  -[HMSetting value]
  -[HMSetting type]
  -[HMSetting setValueClass:]
  -[HMSetting encodeWithCoder:]
  -[HMSetting setSettingManager:]
  -[HMSetting initWithIdentifier:name:type:value:properties:]
  -[HMSetting settingManager]
  -[HMSetting _initWithIdentifier:name:type:value:properties:]
  -[HMSetting initWithInternal]


HMDataSetting : HMSetting
  // instance methods
  -[HMDataSetting valueForUpdate:]
  -[HMDataSetting internalValue]
  -[HMDataSetting isKindOfClass:]


HMNumberSetting : HMSetting
 @property  NSNumber *minimumValue
 @property  NSNumber *maximumValue
 @property  NSNumber *stepValue

  // instance methods
  -[HMNumberSetting minimumValue]
  -[HMNumberSetting stepValue]
  -[HMNumberSetting .cxx_destruct]
  -[HMNumberSetting valueForUpdate:]
  -[HMNumberSetting internalValue]
  -[HMNumberSetting maximumValue]
  -[HMNumberSetting isKindOfClass:]


HMStringSetting : HMSetting
  // instance methods
  -[HMStringSetting valueForUpdate:]
  -[HMStringSetting internalValue]
  -[HMStringSetting isKindOfClass:]


HMSelectionSetting : HMSetting
 @property  NSArray *items

  // instance methods
  -[HMSelectionSetting items]
  -[HMSelectionSetting .cxx_destruct]
  -[HMSelectionSetting valueForUpdate:]
  -[HMSelectionSetting internalValue]
  -[HMSelectionSetting isKindOfClass:]


HMSelectionSettingItem : NSObject <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSString *title
 @property  NSString *localizedTitle

  // class methods
  +[HMSelectionSettingItem supportsSecureCoding]

  // instance methods
  -[HMSelectionSettingItem localizedTitle]
  -[HMSelectionSettingItem initWithCoder:]
  -[HMSelectionSettingItem .cxx_destruct]
  -[HMSelectionSettingItem identifier]
  -[HMSelectionSettingItem title]
  -[HMSelectionSettingItem copyWithZone:]
  -[HMSelectionSettingItem encodeWithCoder:]


HMCollectionSetting : HMSetting <NSFastEnumeration>
 @property  NSSet *itemValueClasses

  // class methods
  +[HMCollectionSetting defaultItemValueClasses]
  +[HMCollectionSetting itemValueClassesForKeyPath:]
  +[HMCollectionSetting setItemValueClass:forKeyPath:]
  +[HMCollectionSetting setItemValueClasses:forKeyPath:]

  // instance methods
  -[HMCollectionSetting .cxx_destruct]
  -[HMCollectionSetting countByEnumeratingWithState:objects:count:]
  -[HMCollectionSetting isKindOfClass:]
  -[HMCollectionSetting setItemValueClass:]
  -[HMCollectionSetting setItemValueClasses:]
  -[HMCollectionSetting itemValueClasses]


HMCollectionSettingItem : NSObject <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  <NSObject><NSCopying><NSSecureCoding> *value

  // class methods
  +[HMCollectionSettingItem supportsSecureCoding]

  // instance methods
  -[HMCollectionSettingItem initWithCoder:]
  -[HMCollectionSettingItem .cxx_destruct]
  -[HMCollectionSettingItem identifier]
  -[HMCollectionSettingItem value]
  -[HMCollectionSettingItem copyWithZone:]
  -[HMCollectionSettingItem encodeWithCoder:]


HMImmutableSettingsProtoBoundedIntegerSettingEvent : PBCodable <NSCopying>
 @property  BOOL hasValue
 @property  HMImmutableSettingsProtoIntegerValueEvent *value
 @property  BOOL hasMinValue
 @property  long long minValue
 @property  BOOL hasMaxValue
 @property  long long maxValue
 @property  BOOL hasStepValue
 @property  long long stepValue

  // instance methods
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent stepValue]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent mergeFrom:]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent hasValue]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent .cxx_destruct]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent setMaxValue:]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent dictionaryRepresentation]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent setMinValue:]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent setStepValue:]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent writeTo:]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent minValue]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent isEqual:]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent copyTo:]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent maxValue]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent readFrom:]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent setValue:]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent value]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent setHasMaxValue:]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent hasMaxValue]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent hasMinValue]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent copyWithZone:]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent hasStepValue]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent setHasMinValue:]
  -[HMImmutableSettingsProtoBoundedIntegerSettingEvent setHasStepValue:]


HMCoreAnalyticsStringFieldData : HMCoreAnalyticsFieldData
  // instance methods
  -[HMCoreAnalyticsStringFieldData initWithName:stringValue:]


HMAccessCodeRemoveRequest : NSObject <HMAccessCodeModificationRequest>
 @property  HMAccessoryAccessCode *accessoryAccessCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMAccessCodeRemoveRequest .cxx_destruct]
  -[HMAccessCodeRemoveRequest accessoryAccessCode]
  -[HMAccessCodeRemoveRequest createAccessCodeRemoveRequestValue]
  -[HMAccessCodeRemoveRequest initWithAccessoryAccessCode:]


HMClientConnection : NSObject <HMFMessageReceiver>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMXPCClient *xpcClient
 @property  NSUUID *uuid
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMClientConnection sharedInstance]
  +[HMClientConnection siriCurrentHome]
  +[HMClientConnection areAnyAccessoriesConfigured]
  +[HMClientConnection siriHomeIdentifier]
  +[HMClientConnection areAnySmallHomePodsConfigured]
  +[HMClientConnection areAnySpeakersConfigured]
  +[HMClientConnection areAnyAppleTVAccessoriesConfigured]
  +[HMClientConnection areAnyTelevisionAccessoriesConfigured]
  +[HMClientConnection areAnyHomePodsConfigured]
  +[HMClientConnection areHomesConfigured]

  // instance methods
  -[HMClientConnection setXpcClient:]
  -[HMClientConnection clientQueue]
  -[HMClientConnection initWithNoValidation]
  -[HMClientConnection .cxx_destruct]
  -[HMClientConnection _start]
  -[HMClientConnection msgDispatcher]
  -[HMClientConnection xpcClient]
  -[HMClientConnection _primaryAccountWasDeletedWithCompletionHandler:]
  -[HMClientConnection _reportResultsTohandler:]
  -[HMClientConnection init]
  -[HMClientConnection notifyAccountStatusUpdate:accountIdentifier:withCompletionHandler:]
  -[HMClientConnection _registerToDaemon]
  -[HMClientConnection messageReceiveQueue]
  -[HMClientConnection requestSiriSyncDataWithValidity:completion:]
  -[HMClientConnection _IDMSAccountUsernameModifiedWithCompletionHandler:]
  -[HMClientConnection uuid]
  -[HMClientConnection _primaryAccountDidChange:modified:completionHandler:]
  -[HMClientConnection _invokeCompletionHandler:withError:]
  -[HMClientConnection _reportIntentResultTohandler:]
  -[HMClientConnection messageTargetUUID]
  -[HMClientConnection sendIntentRequestCommand:withPayload:completionHandler:]
  -[HMClientConnection setUuid:]
  -[HMClientConnection sendSiriCommand:completionHandler:]


HMMultiuserSettingsMessenger : NSObject <HMFLogging, HMFObject>
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSUUID *messageTargetUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMMultiuserSettingsMessenger logCategory]
  +[HMMultiuserSettingsMessenger shortDescription]

  // instance methods
  -[HMMultiuserSettingsMessenger privateDescription]
  -[HMMultiuserSettingsMessenger .cxx_destruct]
  -[HMMultiuserSettingsMessenger attributeDescriptions]
  -[HMMultiuserSettingsMessenger messageDispatcher]
  -[HMMultiuserSettingsMessenger shortDescription]
  -[HMMultiuserSettingsMessenger messageTargetUUID]
  -[HMMultiuserSettingsMessenger logIdentifier]
  -[HMMultiuserSettingsMessenger initWithMessageDispatcher:messageTargetUUID:]
  -[HMMultiuserSettingsMessenger sendFetchMultiuserSettingsRequest:]


HMRemoteLoginHandler : NSObject <HMFMessageReceiver, NSSecureCoding, HMObjectMerge>
 @property  _HMContext *context
 @property  NSUUID *uuid
 @property  HMAccessory *accessory
 @property  NSString *currentSessionID
 @property  BOOL controllable
 @property  ACAccount *loggedInAccount
 @property  BOOL sessionInProgress
 @property  HMRemoteLoginAnisetteDataProvider *anisetteDataProvider
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[HMRemoteLoginHandler supportsSecureCoding]

  // instance methods
  -[HMRemoteLoginHandler accessory]
  -[HMRemoteLoginHandler uniqueIdentifier]
  -[HMRemoteLoginHandler initWithCoder:]
  -[HMRemoteLoginHandler .cxx_destruct]
  -[HMRemoteLoginHandler init]
  -[HMRemoteLoginHandler _configureWithContext:]
  -[HMRemoteLoginHandler isControllable]
  -[HMRemoteLoginHandler messageReceiveQueue]
  -[HMRemoteLoginHandler signout:]
  -[HMRemoteLoginHandler uuid]
  -[HMRemoteLoginHandler setContext:]
  -[HMRemoteLoginHandler messageTargetUUID]
  -[HMRemoteLoginHandler messageDestination]
  -[HMRemoteLoginHandler encodeWithCoder:]
  -[HMRemoteLoginHandler _signout:]
  -[HMRemoteLoginHandler loggedInAccount]
  -[HMRemoteLoginHandler updateLoggedInAccount:completionHandler:]
  -[HMRemoteLoginHandler anisetteDataProvider]
  -[HMRemoteLoginHandler context]
  -[HMRemoteLoginHandler _mergeWithNewObject:]
  -[HMRemoteLoginHandler registerForMessages]
  -[HMRemoteLoginHandler _handleRemoteLoginAccountUpdated:]
  -[HMRemoteLoginHandler setLoggedInAccount:]
  -[HMRemoteLoginHandler currentSessionID]
  -[HMRemoteLoginHandler _callAccountUpdateDelegate:]
  -[HMRemoteLoginHandler _companionLoginWithAccount:completion:]
  -[HMRemoteLoginHandler _handleLoginResponse:error:completion:]
  -[HMRemoteLoginHandler setCurrentSessionID:]
  -[HMRemoteLoginHandler _queryProxiedDevice:]
  -[HMRemoteLoginHandler _handleQueryProxiedDeviceResponse:error:completion:]
  -[HMRemoteLoginHandler _proxyLoginWithAuthResults:completion:]
  -[HMRemoteLoginHandler _handleRemoteLoginSignoutResponse:error:completion:]
  -[HMRemoteLoginHandler isSessionInProgress]
  -[HMRemoteLoginHandler companionLoginWithAccount:completion:]
  -[HMRemoteLoginHandler queryProxiedDevice:]
  -[HMRemoteLoginHandler proxyLoginWithAuthResults:completion:]


HMSettingIntegerValue : HMImmutableSettingValue
 @property  long long integerValue

  // instance methods
  -[HMSettingIntegerValue integerValue]
  -[HMSettingIntegerValue attributeDescriptions]
  -[HMSettingIntegerValue isEqual:]
  -[HMSettingIntegerValue initWithPayload:]
  -[HMSettingIntegerValue payloadCopy]
  -[HMSettingIntegerValue protoPayload]
  -[HMSettingIntegerValue initWithProtoPayload:]
  -[HMSettingIntegerValue initWithIntegerValue:]


HMPendingRequests : NSObject
 @property  NSMutableArray *contextLists

  // instance methods
  -[HMPendingRequests addTrigger:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests removeTriggerForIdentifier:]
  -[HMPendingRequests contextLists]
  -[HMPendingRequests addAccessory:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests .cxx_destruct]
  -[HMPendingRequests addMediaSystemBuilder:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests retrieveAccessoryDescriptionForIdentifier:]
  -[HMPendingRequests setContextLists:]
  -[HMPendingRequests removeActionForIdentifier:]
  -[HMPendingRequests removeMediaSystemBuilderForIdentifier:]
  -[HMPendingRequests addRequest:ofType:forIdentifier:]
  -[HMPendingRequests addApplicationData:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests removeApplicationDataForIdentifier:]
  -[HMPendingRequests removeEventsForIdentifier:]
  -[HMPendingRequests init]
  -[HMPendingRequests addEvent:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests addCompletionBlock:forIdentifier:]
  -[HMPendingRequests retrieveCompletionBlockForIdentifier:]
  -[HMPendingRequests addAccessoryDescription:progressBlock:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests removeAccessoryForIdentifier:]
  -[HMPendingRequests uuidForAccessoryDescriptionUUID:]
  -[HMPendingRequests _retrieveRequestOfType:forIdentifier:remove:]
  -[HMPendingRequests _addRequest:ofType:forIdentifier:]
  -[HMPendingRequests removeRequestOfType:forIdentifier:]
  -[HMPendingRequests addProgressHandler:forAccessoryIdentifier:]
  -[HMPendingRequests removeCompletionBlockForIdentifier:]
  -[HMPendingRequests removeEventForIdentifier:]
  -[HMPendingRequests retrieveRequestOfType:forIdentifier:]
  -[HMPendingRequests addAction:andCompletionBlock:forIdentifier:]
  -[HMPendingRequests retrieveProgressBlockForIdentifier:]
  -[HMPendingRequests removeProgressBlockForIdentifier:]
  -[HMPendingRequests removeAccessoryDescriptionForIdentifier:]
  -[HMPendingRequests addEvents:andCompletionBlock:forIdentifier:]


HMZone : NSObject <NSSecureCoding, HMObjectMerge>
 @property  _HMContext *context
 @property  NSString *assistantIdentifier
 @property  HMMutableArray *currentRooms
 @property  NSUUID *uuid
 @property  HMHome *home
 @property  NSString *name
 @property  NSArray *rooms
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMZone supportsSecureCoding]

  // instance methods
  -[HMZone home]
  -[HMZone name]
  -[HMZone uniqueIdentifier]
  -[HMZone initWithCoder:]
  -[HMZone rooms]
  -[HMZone .cxx_destruct]
  -[HMZone _unconfigure]
  -[HMZone setName:]
  -[HMZone init]
  -[HMZone setHome:]
  -[HMZone assistantIdentifier]
  -[HMZone uuid]
  -[HMZone setContext:]
  -[HMZone setAssistantIdentifier:]
  -[HMZone setUuid:]
  -[HMZone encodeWithCoder:]
  -[HMZone context]
  -[HMZone _mergeWithNewObject:]
  -[HMZone _unconfigureContext]
  -[HMZone __configureWithContext:home:]
  -[HMZone _recomputeAssistantIdentifier]
  -[HMZone recomputeAssistantIdentifier]
  -[HMZone updateName:completionHandler:]
  -[HMZone _updateName:completionHandler:]
  -[HMZone initWithName:uuid:]
  -[HMZone currentRooms]
  -[HMZone roomWithUUID:]
  -[HMZone setCurrentRooms:]
  -[HMZone _removeRoom:completionHandler:]
  -[HMZone _removeRoom:]
  -[HMZone removeRoom:completionHandler:]
  -[HMZone _addRoom:completionHandler:]
  -[HMZone addRoom:completionHandler:]


HMCHIPEcosystemRequest : HMCHIPEcosystemMessage <NSSecureCoding>
  // class methods
  +[HMCHIPEcosystemRequest supportsSecureCoding]
  +[HMCHIPEcosystemRequest unknownRequestError]
  +[HMCHIPEcosystemRequest requestFromExtensionItem:error:]

  // instance methods
  -[HMCHIPEcosystemRequest initWithCoder:]
  -[HMCHIPEcosystemRequest init]
  -[HMCHIPEcosystemRequest extensionItemRepresentation]


HMImmutableSetting : NSObject <HMMessageEncoding, HMFObject>
 @property  NSString *keyPath
 @property  BOOL readOnly
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMImmutableSetting shortDescription]

  // instance methods
  -[HMImmutableSetting privateDescription]
  -[HMImmutableSetting .cxx_destruct]
  -[HMImmutableSetting attributeDescriptions]
  -[HMImmutableSetting isEqual:]
  -[HMImmutableSetting isReadOnly]
  -[HMImmutableSetting keyPath]
  -[HMImmutableSetting shortDescription]
  -[HMImmutableSetting initWithPayload:]
  -[HMImmutableSetting payloadCopy]
  -[HMImmutableSetting protoPayload]
  -[HMImmutableSetting initWithProtoPayload:]
  -[HMImmutableSetting initWithKeyPath:readOnly:]
  -[HMImmutableSetting settingWithSettingValue:]
  -[HMImmutableSetting settingValue]


HMUser : NSObject <HMFLogging, HMFMessageReceiver, HMSettingsContainer, NSSecureCoding, HMObjectMerge>
 @property  HMPhotosPersonManager *photosPersonManager
 @property  HMPhotosPersonManagerSettings *photosPersonManagerSettings
 @property  HMPhotosPersonManagerSettings *personManagerSettings
 @property  NSString *name
 @property  NSString *userID
 @property  IDSURI *userIDSURI
 @property  HMFPairingIdentity *pairingIdentity
 @property  <HMUserDelegatePrivate> *delegate
 @property  HMSettingsController *settingsController
 @property  HMSettingsController *privateSettingsController
 @property  HMAnnounceUserSettings *announceUserSettings
 @property  BOOL needsiTunesMultiUserRepair
 @property  HMHomeAccessControl *homeAccessControl
 @property  HMAssistantAccessControl *assistantAccessControl
 @property  HMMediaContentProfileAccessControl *mediaContentProfileAccessControl
 @property  HMUserListeningHistoryUpdateControl *userListeningHistoryUpdateControl
 @property  NSUUID *uuid
 @property  HMHome *home
 @property  _HMContext *context
 @property  BOOL currentUser
 @property  HMPhotosPersonManager *photosPersonManager
 @property  HMPhotosPersonManagerSettings *photosPersonManagerSettings
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  HMSettings *settings
 @property  HMSettings *privateSettings
 @property  BOOL settingsInitialized

  // class methods
  +[HMUser supportsSecureCoding]
  +[HMUser logCategory]

  // instance methods
  -[HMUser home]
  -[HMUser name]
  -[HMUser pairingIdentity]
  -[HMUser uniqueIdentifier]
  -[HMUser initWithCoder:]
  -[HMUser userID]
  -[HMUser senderCorrelationIdentifier]
  -[HMUser updatePresenceAuthorizationStatus:completionHandler:]
  -[HMUser setUserID:]
  -[HMUser .cxx_destruct]
  -[HMUser isCurrentUser]
  -[HMUser _unconfigure]
  -[HMUser assistantAccessControlForHome:]
  -[HMUser pairingIdentityWithCompletionHandler:]
  -[HMUser setName:]
  -[HMUser setDelegate:]
  -[HMUser init]
  -[HMUser setHome:]
  -[HMUser userSettingsForHome:]
  -[HMUser privateSettings]
  -[HMUser userListeningHistoryUpdateControlForHome:]
  -[HMUser messageReceiveQueue]
  -[HMUser setCurrentUser:]
  -[HMUser uuid]
  -[HMUser delegate]
  -[HMUser setContext:]
  -[HMUser messageTargetUUID]
  -[HMUser logIdentifier]
  -[HMUser messageDestination]
  -[HMUser updateUserListeningHistoryUpdateControl:forHome:completionHandler:]
  -[HMUser encodeWithCoder:]
  -[HMUser settings]
  -[HMUser updateAssistantAccessControl:forHome:completionHandler:]
  -[HMUser context]
  -[HMUser settingsController]
  -[HMUser _mergeWithNewObject:]
  -[HMUser _unconfigureContext]
  -[HMUser __configureWithContext:home:]
  -[HMUser _registerNotificationHandlers]
  -[HMUser setPhotosPersonManagerSettings:]
  -[HMUser updatePhotosPersonManagerSettings:completion:]
  -[HMUser photosPersonManager]
  -[HMUser photosPersonManagerSettings]
  -[HMUser setPhotosPersonManager:]
  -[HMUser configurePhotosPersonManagerWithSettings:]
  -[HMUser personManagerSettings]
  -[HMUser updatePersonManagerSettings:completion:]
  -[HMUser initWithUserID:name:uuid:home:]
  -[HMUser _mergeWithNewAccessoryInvitations:]
  -[HMUser mergePendingAccessoryInvitationsWithOutgoingInvitation:]
  -[HMUser homeAccessControl]
  -[HMUser initWithUserID:name:uuid:home:homeAccessControl:]
  -[HMUser setPendingAccessoryInvitationsWithOutgoingInvitation:]
  -[HMUser sendClientShareURL:shareToken:containerID:fromUser:completion:]
  -[HMUser fetchShareLookupInfo:]
  -[HMUser privateSettingsController]
  -[HMUser _handleUpdatedAssistantAccessControl:]
  -[HMUser _handleMultiUserStatusChangedNotification:]
  -[HMUser setAssistantAccessControl:]
  -[HMUser assistantAccessControl]
  -[HMUser announceUserSettings]
  -[HMUser setAnnounceUserSettings:]
  -[HMUser mediaContentProfileAccessControl]
  -[HMUser setMediaContentProfileAccessControl:]
  -[HMUser userListeningHistoryUpdateControl]
  -[HMUser setUserListeningHistoryUpdateControl:]
  -[HMUser _filterAccessoryInvitationsFromOutgoingInvitation:]
  -[HMUser _updatePresenceAuthorizationStatus:completionHandler:]
  -[HMUser setPairingIdentity:]
  -[HMUser pendingAccessoryInvitations]
  -[HMUser needsiTunesMultiUserRepair]
  -[HMUser setNeedsiTunesMultiUserRepair:]
  -[HMUser settingsInitialized]
  -[HMUser setHomeAccessControl:]
  -[HMUser updateHomeAccessControl:remoteAccess:announceAccess:camerasAccess:]
  -[HMUser updateAnnounceUserSettings:forHome:completionHandler:]
  -[HMUser mediaContentProfileAccessControlForHome:]
  -[HMUser updateMediaContentProfileAccessControl:forHome:completionHandler:]
  -[HMUser userIDSURI]
  -[HMUser sendClientShareRepairRequest:containerID:completion:]
  -[HMUser setNeedsiTunesMultiUserRepair:completion:]


HMHTMLDocument : NSObject <NSCopying, NSSecureCoding>
 @property  _HMDocument *document
 @property  NSString *stringValue
 @property  NSAttributedString *attributedString

  // class methods
  +[HMHTMLDocument supportsSecureCoding]

  // instance methods
  -[HMHTMLDocument stringValue]
  -[HMHTMLDocument attributedString]
  -[HMHTMLDocument initWithCoder:]
  -[HMHTMLDocument document]
  -[HMHTMLDocument .cxx_destruct]
  -[HMHTMLDocument isEqual:]
  -[HMHTMLDocument initWithString:]
  -[HMHTMLDocument initWithData:error:]
  -[HMHTMLDocument validateAndReturnError:]
  -[HMHTMLDocument copyWithZone:]
  -[HMHTMLDocument encodeWithCoder:]
  -[HMHTMLDocument initWithURL:error:]


_HMNetworkPath : NSObject <_HMNetworkPath>
 @property  NSObject<OS_nw_path> *nwPath
 @property  int status
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HMNetworkPath .cxx_destruct]
  -[_HMNetworkPath nwPath]
  -[_HMNetworkPath status]
  -[_HMNetworkPath initWithNwPath:]
  -[_HMNetworkPath setNwPath:]


_HMNetworkConnection : NSObject <_HMNetworkConnection>
 @property  NSObject<OS_nw_connection> *nwConnection
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HMNetworkConnection .cxx_destruct]
  -[_HMNetworkConnection setStateChangedHandler:]
  -[_HMNetworkConnection setQueue:]
  -[_HMNetworkConnection cancel]
  -[_HMNetworkConnection initWithEndpoint:parameters:]
  -[_HMNetworkConnection queue]
  -[_HMNetworkConnection start]
  -[_HMNetworkConnection nwConnection]
  -[_HMNetworkConnection sendData:context:isComplete:completion:]
  -[_HMNetworkConnection receiveMessageWithCompletion:]
  -[_HMNetworkConnection setViabilityChangedHandler:]
  -[_HMNetworkConnection setPathChangedHandler:]


HMMatterTopology : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *appBundleID
 @property  NSArray *homes

  // class methods
  +[HMMatterTopology supportsSecureCoding]

  // instance methods
  -[HMMatterTopology appBundleID]
  -[HMMatterTopology initWithCoder:]
  -[HMMatterTopology .cxx_destruct]
  -[HMMatterTopology isEqual:]
  -[HMMatterTopology copyWithZone:]
  -[HMMatterTopology homes]
  -[HMMatterTopology encodeWithCoder:]
  -[HMMatterTopology initWithHomes:appBundleID:]
  -[HMMatterTopology initWithHomes:]


HMCameraSignificantEvent : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long reason
 @property  NSDate *dateOfOccurrence
 @property  unsigned long confidenceLevel
 @property  NSUUID *cameraProfileUUID
 @property  HMFaceClassification *faceClassification
 @property  BOOL canAskForUserFeedback
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraSignificantEvent supportsSecureCoding]
  +[HMCameraSignificantEvent shortDescription]

  // instance methods
  -[HMCameraSignificantEvent confidenceLevel]
  -[HMCameraSignificantEvent privateDescription]
  -[HMCameraSignificantEvent uniqueIdentifier]
  -[HMCameraSignificantEvent initWithCoder:]
  -[HMCameraSignificantEvent .cxx_destruct]
  -[HMCameraSignificantEvent attributeDescriptions]
  -[HMCameraSignificantEvent isEqual:]
  -[HMCameraSignificantEvent reason]
  -[HMCameraSignificantEvent shortDescription]
  -[HMCameraSignificantEvent copyWithZone:]
  -[HMCameraSignificantEvent encodeWithCoder:]
  -[HMCameraSignificantEvent canAskForUserFeedback]
  -[HMCameraSignificantEvent dateOfOccurrence]
  -[HMCameraSignificantEvent initWithUniqueIdentifier:reason:dateOfOccurrence:confidenceLevel:cameraProfileUUID:faceClassification:]
  -[HMCameraSignificantEvent cameraProfileUUID]
  -[HMCameraSignificantEvent faceClassification]
  -[HMCameraSignificantEvent initWithUniqueIdentifier:reason:dateOfOccurrence:confidenceLevel:faceClassification:]


HMCHIPEcosystemPairAccessoryRequest : HMCHIPEcosystemRequest
 @property  HMMatterHome *home
 @property  NSString *pairingIdentifier

  // class methods
  +[HMCHIPEcosystemPairAccessoryRequest supportsSecureCoding]

  // instance methods
  -[HMCHIPEcosystemPairAccessoryRequest home]
  -[HMCHIPEcosystemPairAccessoryRequest messageType]
  -[HMCHIPEcosystemPairAccessoryRequest initWithCoder:]
  -[HMCHIPEcosystemPairAccessoryRequest .cxx_destruct]
  -[HMCHIPEcosystemPairAccessoryRequest attributeDescriptions]
  -[HMCHIPEcosystemPairAccessoryRequest isEqual:]
  -[HMCHIPEcosystemPairAccessoryRequest pairingIdentifier]
  -[HMCHIPEcosystemPairAccessoryRequest encodeWithCoder:]
  -[HMCHIPEcosystemPairAccessoryRequest initWithPairingIdentifier:home:]


HMCameraSource : NSObject <HMFMessageReceiver, HMFLogging>
 @property  _HMContext *context
 @property  NSUUID *profileUniqueIdentifier
 @property  NSNumber *slotIdentifier
 @property  HMCameraView *cameraView
 @property  double currentAspectRatio
 @property  double aspectRatio
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraSource logCategory]

  // instance methods
  -[HMCameraSource aspectRatio]
  -[HMCameraSource .cxx_destruct]
  -[HMCameraSource messageReceiveQueue]
  -[HMCameraSource setContext:]
  -[HMCameraSource messageTargetUUID]
  -[HMCameraSource logIdentifier]
  -[HMCameraSource context]
  -[HMCameraSource initWithProfileUniqueIdentifier:slotIdentifier:aspectRatio:]
  -[HMCameraSource slotIdentifier]
  -[HMCameraSource profileUniqueIdentifier]
  -[HMCameraSource fillSlotWithCompletionHandler:]
  -[HMCameraSource currentAspectRatio]
  -[HMCameraSource cameraView]
  -[HMCameraSource setCameraView:]


HMMultiUserSettingsForMetrics : NSObject <HMFLogging, HMFObject, HMMessageEncoding>
 @property  NSNumber *numSharedUsers
 @property  NSNumber *numUsersWithSettings
 @property  NSNumber *numUsersWithIdentifyVoiceOff
 @property  NSNumber *numUsersWithPlayBackInfluencesForYouOff
 @property  NSNumber *numUsersCloudShareTrustNotConfigured
 @property  NSNumber *numUsersSharedBackingStoreNotStarted
 @property  NSNumber *numUsersSharedBackingStoreRunning
 @property  NSNumber *numUsersSharedBackingStoreNotRunningDueToError
 @property  NSNumber *numUsersSharedBackingStoreNotRunningDueToStopped
 @property  NSNumber *numUsersSharedBackingStoreSharedZoneWaitingForShareInvitation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMMultiUserSettingsForMetrics logCategory]
  +[HMMultiUserSettingsForMetrics shortDescription]

  // instance methods
  -[HMMultiUserSettingsForMetrics privateDescription]
  -[HMMultiUserSettingsForMetrics .cxx_destruct]
  -[HMMultiUserSettingsForMetrics shortDescription]
  -[HMMultiUserSettingsForMetrics initWithPayload:]
  -[HMMultiUserSettingsForMetrics payloadCopy]
  -[HMMultiUserSettingsForMetrics initWithNumSharedUsers:numUsersWithSettings:numUsersWithIdentifyVoiceOff:numUsersWithPlayBackInfluencesForYouOff:numUsersCloudShareTrustNotConfigured:numUsersSharedBackingStoreNotStarted:numUsersSharedBackingStoreRunning:numUsersSharedBackingStoreNotRunningDueToError:numUsersSharedBackingStoreNotRunningDueToStopped:numUsersSharedBackingStoreSharedZoneWaitingForShareInvitation:]
  -[HMMultiUserSettingsForMetrics numSharedUsers]
  -[HMMultiUserSettingsForMetrics numUsersWithSettings]
  -[HMMultiUserSettingsForMetrics numUsersCloudShareTrustNotConfigured]
  -[HMMultiUserSettingsForMetrics numUsersWithIdentifyVoiceOff]
  -[HMMultiUserSettingsForMetrics numUsersWithPlayBackInfluencesForYouOff]
  -[HMMultiUserSettingsForMetrics numUsersSharedBackingStoreNotStarted]
  -[HMMultiUserSettingsForMetrics numUsersSharedBackingStoreRunning]
  -[HMMultiUserSettingsForMetrics numUsersSharedBackingStoreNotRunningDueToError]
  -[HMMultiUserSettingsForMetrics numUsersSharedBackingStoreNotRunningDueToStopped]
  -[HMMultiUserSettingsForMetrics numUsersSharedBackingStoreSharedZoneWaitingForShareInvitation]
  -[HMMultiUserSettingsForMetrics setNumSharedUsers:]
  -[HMMultiUserSettingsForMetrics setNumUsersWithSettings:]
  -[HMMultiUserSettingsForMetrics setNumUsersWithIdentifyVoiceOff:]
  -[HMMultiUserSettingsForMetrics setNumUsersWithPlayBackInfluencesForYouOff:]
  -[HMMultiUserSettingsForMetrics setNumUsersCloudShareTrustNotConfigured:]
  -[HMMultiUserSettingsForMetrics setNumUsersSharedBackingStoreNotStarted:]
  -[HMMultiUserSettingsForMetrics setNumUsersSharedBackingStoreRunning:]
  -[HMMultiUserSettingsForMetrics setNumUsersSharedBackingStoreNotRunningDueToError:]
  -[HMMultiUserSettingsForMetrics setNumUsersSharedBackingStoreNotRunningDueToStopped:]
  -[HMMultiUserSettingsForMetrics setNumUsersSharedBackingStoreSharedZoneWaitingForShareInvitation:]


HMPBMetadataCharacteristic : PBCodable <NSCopying>
 @property  BOOL hasType
 @property  NSString *type
 @property  BOOL hasDesc
 @property  NSString *desc

  // instance methods
  -[HMPBMetadataCharacteristic mergeFrom:]
  -[HMPBMetadataCharacteristic setType:]
  -[HMPBMetadataCharacteristic .cxx_destruct]
  -[HMPBMetadataCharacteristic dictionaryRepresentation]
  -[HMPBMetadataCharacteristic writeTo:]
  -[HMPBMetadataCharacteristic setDesc:]
  -[HMPBMetadataCharacteristic hasType]
  -[HMPBMetadataCharacteristic isEqual:]
  -[HMPBMetadataCharacteristic copyTo:]
  -[HMPBMetadataCharacteristic readFrom:]
  -[HMPBMetadataCharacteristic type]
  -[HMPBMetadataCharacteristic hasDesc]
  -[HMPBMetadataCharacteristic copyWithZone:]
  -[HMPBMetadataCharacteristic desc]


_HMContext : NSObject <HMFLogging>
 @property  NSString *name
 @property  NSObject<OS_dispatch_queue> *queue
 @property  HMPendingRequests *pendingRequests
 @property  HMDelegateCaller *delegateCaller
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMXPCClient *xpcClient
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HMContext contextWithName:xpcClient:delegateCaller:]
  +[_HMContext contextWithName:]
  +[_HMContext logCategory]
  +[_HMContext contextWithName:xpcClient:]

  // instance methods
  -[_HMContext pendingRequests]
  -[_HMContext name]
  -[_HMContext .cxx_destruct]
  -[_HMContext xpcClient]
  -[_HMContext init]
  -[_HMContext initWithName:pendingRequests:delegateCaller:messageDispatcher:xpcClient:]
  -[_HMContext subcontextWithName:]
  -[_HMContext messageDispatcher]
  -[_HMContext delegateCaller]
  -[_HMContext queue]
  -[_HMContext logIdentifier]


HMFaceClassification : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *personManagerUUID
 @property  HMPerson *person
 @property  HMFaceCrop *faceCrop
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFaceClassification supportsSecureCoding]
  +[HMFaceClassification shortDescription]

  // instance methods
  -[HMFaceClassification privateDescription]
  -[HMFaceClassification initWithCoder:]
  -[HMFaceClassification .cxx_destruct]
  -[HMFaceClassification person]
  -[HMFaceClassification attributeDescriptions]
  -[HMFaceClassification isEqual:]
  -[HMFaceClassification faceCrop]
  -[HMFaceClassification shortDescription]
  -[HMFaceClassification copyWithZone:]
  -[HMFaceClassification encodeWithCoder:]
  -[HMFaceClassification personManagerUUID]
  -[HMFaceClassification initWithPersonManagerUUID:person:faceCrop:]


HMCHIPExtensionContext : NSExtensionContext
  // class methods
  +[HMCHIPExtensionContext _allowedItemPayloadClasses]


HMCHIPExtensionHostContext : HMCHIPExtensionContext

HMDiskCache : HMFObject <HMPersistentCache>
 @property  NSString *cachePath

  // instance methods
  -[HMDiskCache .cxx_destruct]
  -[HMDiskCache loadCachedObjectsForCacheWithName:]
  -[HMDiskCache initWithCachePath:]
  -[HMDiskCache cachePath]
  -[HMDiskCache storeCachedObjects:forCacheName:]


HMAction : NSObject <HMObjectMerge, NSSecureCoding, NSCopying>
 @property  _HMContext *context
 @property  unsigned long type
 @property  NSUUID *uuid
 @property  HMActionSet *actionSet
 @property  BOOL valid
 @property  BOOL requiresDeviceUnlock
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAction supportsSecureCoding]
  +[HMAction _actionWithInfo:home:]

  // instance methods
  -[HMAction uniqueIdentifier]
  -[HMAction initWithCoder:]
  -[HMAction isValid]
  -[HMAction .cxx_destruct]
  -[HMAction _unconfigure]
  -[HMAction initWithUUID:]
  -[HMAction init]
  -[HMAction isEqual:]
  -[HMAction type]
  -[HMAction uuid]
  -[HMAction setContext:]
  -[HMAction copyWithZone:]
  -[HMAction _handleUpdates:]
  -[HMAction setUuid:]
  -[HMAction encodeWithCoder:]
  -[HMAction actionSet]
  -[HMAction context]
  -[HMAction _serializeForAdd]
  -[HMAction _mergeWithNewObject:]
  -[HMAction _unconfigureContext]
  -[HMAction requiresDeviceUnlock]
  -[HMAction encodeAsProtoBuf]
  -[HMAction __configureWithContext:actionSet:]
  -[HMAction setActionSet:]


HMCameraClipVideoHLSPlaylistGenerator : NSObject
 @property  NSMutableString *hlsPlaylistString
 @property  NSURL *url
 @property  NSData *hlsPlaylist

  // class methods
  +[HMCameraClipVideoHLSPlaylistGenerator _hlsPlaylistEncryptionMethodNameForScheme:]

  // instance methods
  -[HMCameraClipVideoHLSPlaylistGenerator url]
  -[HMCameraClipVideoHLSPlaylistGenerator addSegment:]
  -[HMCameraClipVideoHLSPlaylistGenerator .cxx_destruct]
  -[HMCameraClipVideoHLSPlaylistGenerator finish]
  -[HMCameraClipVideoHLSPlaylistGenerator addSegments:]
  -[HMCameraClipVideoHLSPlaylistGenerator hlsPlaylist]
  -[HMCameraClipVideoHLSPlaylistGenerator hlsPlaylistString]
  -[HMCameraClipVideoHLSPlaylistGenerator initWithClip:url:]


HMCameraClipManager : NSObject <HMFLogging, HMFMessageReceiver>
 @property  HMFUnfairLock *lock
 @property  _HMContext *context
 @property  NSUUID *profileUniqueIdentifier
 @property  NSNotificationCenter *notificationCenter
 @property  NSMutableDictionary *clipsByFetchUUID
 @property  NSMutableDictionary *significantEventsByFetchUUID
 @property  NSMutableDictionary *videoAssetContextsByClipUUID
 @property  NSHashTable *observers
 @property  @? fetchClientFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMCameraClipManager logCategory]

  // instance methods
  -[HMCameraClipManager configure]
  -[HMCameraClipManager notificationCenter]
  -[HMCameraClipManager subscribe]
  -[HMCameraClipManager .cxx_destruct]
  -[HMCameraClipManager addObserver:]
  -[HMCameraClipManager messageReceiveQueue]
  -[HMCameraClipManager observers]
  -[HMCameraClipManager dealloc]
  -[HMCameraClipManager messageTargetUUID]
  -[HMCameraClipManager logIdentifier]
  -[HMCameraClipManager lock]
  -[HMCameraClipManager unsubscribe]
  -[HMCameraClipManager removeObserver:]
  -[HMCameraClipManager context]
  -[HMCameraClipManager fetchClientFactory]
  -[HMCameraClipManager handleDaemonReconnectedNotification:]
  -[HMCameraClipManager performCloudPullWithCompletion:]
  -[HMCameraClipManager setFetchClientFactory:]
  -[HMCameraClipManager profileUniqueIdentifier]
  -[HMCameraClipManager fetchClipsWithDateInterval:quality:limit:shouldOrderAscending:completion:]
  -[HMCameraClipManager fetchCountOfClipsWithDateInterval:completion:]
  -[HMCameraClipManager deleteAllClipsWithCompletionHandler:]
  -[HMCameraClipManager fetchVideoSegmentsAssetContextForClip:completion:]
  -[HMCameraClipManager initWithContext:profileUniqueIdentifier:]
  -[HMCameraClipManager initWithContext:profileUniqueIdentifier:notificationCenter:]
  -[HMCameraClipManager videoAssetContextsByClipUUID]
  -[HMCameraClipManager fetchClipsWithDateInterval:limit:shouldOrderAscending:completion:]
  -[HMCameraClipManager fetchCountOfClipsWithDateInterval:quality:completion:]
  -[HMCameraClipManager fetchSignificantEventsWithDateInterval:limit:shouldOrderAscending:completion:]
  -[HMCameraClipManager handleDidChangeClipsMessage:]
  -[HMCameraClipManager handleDidChangeSignificantEventsMessage:]
  -[HMCameraClipManager videoSegmentsAssetContextForClip:]
  -[HMCameraClipManager updateVideoSegmentsAssetContextForClip:]
  -[HMCameraClipManager fetchClipWithUUID:completion:]
  -[HMCameraClipManager fetchClipForSignificantEventWithUUID:completion:]
  -[HMCameraClipManager fetchAllClipsWithCompletion:]
  -[HMCameraClipManager fetchCountOfAllClipsWithCompletion:]
  -[HMCameraClipManager fetchHeroFrameDataRepresentationForClipWithUUID:completion:]
  -[HMCameraClipManager fetchHeroFrameURLOfClipWithUUID:completion:]
  -[HMCameraClipManager fetchFaceCropDataRepresentationForSignificantEventWithUUID:completion:]
  -[HMCameraClipManager fetchFaceCropURLForSignificantEventWithUUID:completion:]
  -[HMCameraClipManager fetchSignificantEventsWithUUIDs:completion:]
  -[HMCameraClipManager fetchAllSignificantEventsWithCompletion:]
  -[HMCameraClipManager fetchSignificantEventsWithDateInterval:limit:completion:]
  -[HMCameraClipManager deleteClipWithUUID:completion:]
  -[HMCameraClipManager handleFaceMisclassificationForSignificantEvent:completion:]
  -[HMCameraClipManager donateClipsWithUUIDs:completion:]
  -[HMCameraClipManager importClipsWithImportData:completion:]
  -[HMCameraClipManager clipsByFetchUUID]
  -[HMCameraClipManager significantEventsByFetchUUID]


HMAccessorySetupCoordinator : NSObject <HMFLogging, HMFMessageReceiver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMAccessorySetupCoordinator UUID]
  +[HMAccessorySetupCoordinator logCategory]
  +[HMAccessorySetupCoordinator setupPayloadURLFromSetupPayloadURLString:]
  +[HMAccessorySetupCoordinator isSetupPayloadURL:]
  +[HMAccessorySetupCoordinator isHAPSetupPayloadURL:]
  +[HMAccessorySetupCoordinator isCHIPSetupPayloadURL:]
  +[HMAccessorySetupCoordinator isCHIPFeatureEnabled]
  +[HMAccessorySetupCoordinator isSetupPayloadURLString:]
  +[HMAccessorySetupCoordinator communicationProtocolForSetupPayloadURLString:]
  +[HMAccessorySetupCoordinator setCHIPFeatureEnabled:]

  // instance methods
  -[HMAccessorySetupCoordinator configure]
  -[HMAccessorySetupCoordinator createSetupAccessoryPayloadWithSetupPayloadURL:completionHandler:]
  -[HMAccessorySetupCoordinator createSetupAccessoryPayloadWithCHIPSetupCode:completionHandler:]
  -[HMAccessorySetupCoordinator stageCHIPAccessoryPairingWithPayload:completionHandler:]
  -[HMAccessorySetupCoordinator .cxx_destruct]
  -[HMAccessorySetupCoordinator createCHIPSetupPayloadStringForStagedPairingWithIdentifier:completionHandler:]
  -[HMAccessorySetupCoordinator initWithContext:]
  -[HMAccessorySetupCoordinator messageReceiveQueue]
  -[HMAccessorySetupCoordinator cancelStagedCHIPAccessoryPairingWithIdentifier:completionHandler:]
  -[HMAccessorySetupCoordinator messageTargetUUID]
  -[HMAccessorySetupCoordinator createSetupAccessoryPayloadWithSetupPayloadURLString:completionHandler:]
  -[HMAccessorySetupCoordinator createSetupAccessoryPayloadWithCHIPDecimalStringRepresentation:completionHandler:]


HMAccessoryNetworkProtectionGroup : NSObject <HMObjectMerge, NSSecureCoding>
 @property  HMHome *home
 @property  NSUUID *uuid
 @property  NSString *manufacturer
 @property  HMAccessoryCategory *category
 @property  long long targetProtectionMode
 @property  NSUUID *uniqueIdentifier
 @property  NSArray *accessories
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessoryNetworkProtectionGroup supportsSecureCoding]

  // instance methods
  -[HMAccessoryNetworkProtectionGroup home]
  -[HMAccessoryNetworkProtectionGroup uniqueIdentifier]
  -[HMAccessoryNetworkProtectionGroup initWithCoder:]
  -[HMAccessoryNetworkProtectionGroup .cxx_destruct]
  -[HMAccessoryNetworkProtectionGroup manufacturer]
  -[HMAccessoryNetworkProtectionGroup setHome:]
  -[HMAccessoryNetworkProtectionGroup setManufacturer:]
  -[HMAccessoryNetworkProtectionGroup uuid]
  -[HMAccessoryNetworkProtectionGroup category]
  -[HMAccessoryNetworkProtectionGroup setCategory:]
  -[HMAccessoryNetworkProtectionGroup accessories]
  -[HMAccessoryNetworkProtectionGroup encodeWithCoder:]
  -[HMAccessoryNetworkProtectionGroup _mergeWithNewObject:]
  -[HMAccessoryNetworkProtectionGroup targetProtectionMode]
  -[HMAccessoryNetworkProtectionGroup setTargetProtectionMode:]
  -[HMAccessoryNetworkProtectionGroup _configureWithHome:]
  -[HMAccessoryNetworkProtectionGroup initWithUUID:manufacturer:category:protectionMode:]
  -[HMAccessoryNetworkProtectionGroup updateProtectionMode:completion:]


HMUserListeningHistoryUpdateControl : NSObject <NSCopying, NSMutableCopying>
 @property  NSArray *accessories

  // instance methods
  -[HMUserListeningHistoryUpdateControl .cxx_destruct]
  -[HMUserListeningHistoryUpdateControl isEqual:]
  -[HMUserListeningHistoryUpdateControl mutableCopyWithZone:]
  -[HMUserListeningHistoryUpdateControl copyWithZone:]
  -[HMUserListeningHistoryUpdateControl accessories]
  -[HMUserListeningHistoryUpdateControl initWithAccessories:]


HMMutableUserListeningHistoryUpdateControl : HMUserListeningHistoryUpdateControl
 @property  NSArray *accessories

  // instance methods
  -[HMMutableUserListeningHistoryUpdateControl addAccessory:]
  -[HMMutableUserListeningHistoryUpdateControl setAccessories:]
  -[HMMutableUserListeningHistoryUpdateControl removeAccessory:]
  -[HMMutableUserListeningHistoryUpdateControl copyWithZone:]
  -[HMMutableUserListeningHistoryUpdateControl accessories]
  -[HMMutableUserListeningHistoryUpdateControl initWithAccessories:]


HMRemovedUserInfo : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  NSUUID *userUUID
 @property  NSString *userID
 @property  NSDate *dateRemoved
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMRemovedUserInfo supportsSecureCoding]
  +[HMRemovedUserInfo shortDescription]

  // instance methods
  -[HMRemovedUserInfo name]
  -[HMRemovedUserInfo privateDescription]
  -[HMRemovedUserInfo initWithCoder:]
  -[HMRemovedUserInfo userID]
  -[HMRemovedUserInfo userUUID]
  -[HMRemovedUserInfo .cxx_destruct]
  -[HMRemovedUserInfo attributeDescriptions]
  -[HMRemovedUserInfo dateRemoved]
  -[HMRemovedUserInfo isEqual:]
  -[HMRemovedUserInfo shortDescription]
  -[HMRemovedUserInfo copyWithZone:]
  -[HMRemovedUserInfo encodeWithCoder:]
  -[HMRemovedUserInfo initWithName:userUUID:userID:dateRemoved:]


HMAccessorySettingsMessenger : NSObject <HMFLogging, HMFObject>
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMAccessorySettingsMetricsDispatcher *metricsDispatcher
 @property  NSUUID *messageTargetUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMAccessorySettingsMessenger logCategory]
  +[HMAccessorySettingsMessenger shortDescription]
  +[HMAccessorySettingsMessenger messageTargetUUIDWithHomeUUID:]
  +[HMAccessorySettingsMessenger legacyMessageTargetUUIDWithHomeUUID:]

  // instance methods
  -[HMAccessorySettingsMessenger privateDescription]
  -[HMAccessorySettingsMessenger .cxx_destruct]
  -[HMAccessorySettingsMessenger attributeDescriptions]
  -[HMAccessorySettingsMessenger metricsDispatcher]
  -[HMAccessorySettingsMessenger messageDispatcher]
  -[HMAccessorySettingsMessenger shortDescription]
  -[HMAccessorySettingsMessenger messageTargetUUID]
  -[HMAccessorySettingsMessenger logIdentifier]
  -[HMAccessorySettingsMessenger sendUpdateAccessorySettingRequestWithAccessoryUUID:keyPath:settingValue:completionHandler:]
  -[HMAccessorySettingsMessenger sendFetchAccessorySettingsRequestWithAccessoryUUID:keyPaths:completionHandler:]
  -[HMAccessorySettingsMessenger initWithMessageDispatcher:messageTargetUUID:metricsDispatcher:]
  -[HMAccessorySettingsMessenger submitMetricEventWithMessage:error:]


HMXPCEventRouterProtoEventsMessage : PBCodable <NSCopying>
 @property  NSMutableArray *events
 @property  NSMutableArray *cachedEvents

  // class methods
  +[HMXPCEventRouterProtoEventsMessage eventsType]
  +[HMXPCEventRouterProtoEventsMessage cachedEventsType]

  // instance methods
  -[HMXPCEventRouterProtoEventsMessage mergeFrom:]
  -[HMXPCEventRouterProtoEventsMessage events]
  -[HMXPCEventRouterProtoEventsMessage .cxx_destruct]
  -[HMXPCEventRouterProtoEventsMessage dictionaryRepresentation]
  -[HMXPCEventRouterProtoEventsMessage writeTo:]
  -[HMXPCEventRouterProtoEventsMessage clearEvents]
  -[HMXPCEventRouterProtoEventsMessage eventsCount]
  -[HMXPCEventRouterProtoEventsMessage isEqual:]
  -[HMXPCEventRouterProtoEventsMessage copyTo:]
  -[HMXPCEventRouterProtoEventsMessage addEvents:]
  -[HMXPCEventRouterProtoEventsMessage readFrom:]
  -[HMXPCEventRouterProtoEventsMessage setEvents:]
  -[HMXPCEventRouterProtoEventsMessage copyWithZone:]
  -[HMXPCEventRouterProtoEventsMessage cachedEvents]
  -[HMXPCEventRouterProtoEventsMessage addCachedEvents:]
  -[HMXPCEventRouterProtoEventsMessage eventsAtIndex:]
  -[HMXPCEventRouterProtoEventsMessage cachedEventsCount]
  -[HMXPCEventRouterProtoEventsMessage clearCachedEvents]
  -[HMXPCEventRouterProtoEventsMessage cachedEventsAtIndex:]
  -[HMXPCEventRouterProtoEventsMessage setCachedEvents:]


HMBooleanSetting : HMImmutableSetting
 @property  BOOL boolValue

  // instance methods
  -[HMBooleanSetting attributeDescriptions]
  -[HMBooleanSetting isEqual:]
  -[HMBooleanSetting boolValue]
  -[HMBooleanSetting payloadCopy]
  -[HMBooleanSetting protoPayload]
  -[HMBooleanSetting initWithProtoPayload:]
  -[HMBooleanSetting settingWithSettingValue:]
  -[HMBooleanSetting settingValue]
  -[HMBooleanSetting initWithKeyPath:readOnly:payload:]
  -[HMBooleanSetting initWithKeyPath:readOnly:boolValue:]


HMMediaGroupProtoMediaGroupData : PBCodable <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasParentIdentifier
 @property  NSString *parentIdentifier
 @property  NSMutableArray *destinationIdentifiers
 @property  BOOL hasAssociatedGroupIdentifier
 @property  NSString *associatedGroupIdentifier
 @property  BOOL hasMediaSystem
 @property  HMMediaGroupProtoMediaSystemRoles *mediaSystem

  // class methods
  +[HMMediaGroupProtoMediaGroupData destinationIdentifiersType]

  // instance methods
  -[HMMediaGroupProtoMediaGroupData mergeFrom:]
  -[HMMediaGroupProtoMediaGroupData name]
  -[HMMediaGroupProtoMediaGroupData .cxx_destruct]
  -[HMMediaGroupProtoMediaGroupData hasName]
  -[HMMediaGroupProtoMediaGroupData dictionaryRepresentation]
  -[HMMediaGroupProtoMediaGroupData writeTo:]
  -[HMMediaGroupProtoMediaGroupData setName:]
  -[HMMediaGroupProtoMediaGroupData hasParentIdentifier]
  -[HMMediaGroupProtoMediaGroupData isEqual:]
  -[HMMediaGroupProtoMediaGroupData copyTo:]
  -[HMMediaGroupProtoMediaGroupData readFrom:]
  -[HMMediaGroupProtoMediaGroupData identifier]
  -[HMMediaGroupProtoMediaGroupData parentIdentifier]
  -[HMMediaGroupProtoMediaGroupData setIdentifier:]
  -[HMMediaGroupProtoMediaGroupData setParentIdentifier:]
  -[HMMediaGroupProtoMediaGroupData hasIdentifier]
  -[HMMediaGroupProtoMediaGroupData copyWithZone:]
  -[HMMediaGroupProtoMediaGroupData addDestinationIdentifiers:]
  -[HMMediaGroupProtoMediaGroupData destinationIdentifiersCount]
  -[HMMediaGroupProtoMediaGroupData clearDestinationIdentifiers]
  -[HMMediaGroupProtoMediaGroupData destinationIdentifiersAtIndex:]
  -[HMMediaGroupProtoMediaGroupData setAssociatedGroupIdentifier:]
  -[HMMediaGroupProtoMediaGroupData setMediaSystem:]
  -[HMMediaGroupProtoMediaGroupData hasAssociatedGroupIdentifier]
  -[HMMediaGroupProtoMediaGroupData hasMediaSystem]
  -[HMMediaGroupProtoMediaGroupData destinationIdentifiers]
  -[HMMediaGroupProtoMediaGroupData setDestinationIdentifiers:]
  -[HMMediaGroupProtoMediaGroupData associatedGroupIdentifier]
  -[HMMediaGroupProtoMediaGroupData mediaSystem]


HMSoftwareUpdateDocumentation : NSObject <NSSecureCoding>
 @property  HMHTMLDocument *releaseNotesSummary
 @property  HMHTMLDocument *releaseNotes
 @property  HMPlainTextDocument *textReleaseNotes
 @property  HMHTMLDocument *licenseAgreement
 @property  NSNumber *licenseAgreementVersion

  // class methods
  +[HMSoftwareUpdateDocumentation supportsSecureCoding]

  // instance methods
  -[HMSoftwareUpdateDocumentation initWithCoder:]
  -[HMSoftwareUpdateDocumentation .cxx_destruct]
  -[HMSoftwareUpdateDocumentation init]
  -[HMSoftwareUpdateDocumentation licenseAgreement]
  -[HMSoftwareUpdateDocumentation releaseNotes]
  -[HMSoftwareUpdateDocumentation encodeWithCoder:]
  -[HMSoftwareUpdateDocumentation initWithReleaseNotesSummary:releaseNotes:textReleaseNotes:licenseAgreement:licenseAgreementVersion:]
  -[HMSoftwareUpdateDocumentation releaseNotesSummary]
  -[HMSoftwareUpdateDocumentation textReleaseNotes]
  -[HMSoftwareUpdateDocumentation licenseAgreementVersion]


HMUserCloudShareManager : NSObject <HMFMessageReceiver>
 @property  _HMContext *context
 @property  NSUUID *identifier
 @property  BOOL registered
 @property  NSArray *containerIDs
 @property  <HMUserCloudShareManagerDelegate> *delegate
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMUserCloudShareManager logCategory]

  // instance methods
  -[HMUserCloudShareManager configure]
  -[HMUserCloudShareManager isRegistered]
  -[HMUserCloudShareManager .cxx_destruct]
  -[HMUserCloudShareManager setRegistered:]
  -[HMUserCloudShareManager _unconfigure]
  -[HMUserCloudShareManager setContainerIDs:]
  -[HMUserCloudShareManager containerIDs]
  -[HMUserCloudShareManager setDelegate:]
  -[HMUserCloudShareManager init]
  -[HMUserCloudShareManager _handleDidReceiveShare:]
  -[HMUserCloudShareManager identifier]
  -[HMUserCloudShareManager initWithContext:]
  -[HMUserCloudShareManager messageReceiveQueue]
  -[HMUserCloudShareManager _registerWithCompletion:]
  -[HMUserCloudShareManager delegate]
  -[HMUserCloudShareManager messageTargetUUID]
  -[HMUserCloudShareManager __registerForMessages]
  -[HMUserCloudShareManager registerForContainerIDs:completion:]
  -[HMUserCloudShareManager messageDestination]
  -[HMUserCloudShareManager _handleDidReceiveRepairRequest:]
  -[HMUserCloudShareManager reconnect]
  -[HMUserCloudShareManager context]


_HMCameraUserSettings : NSObject <HMFObject, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSUUID *UUID
 @property  unsigned long supportedFeatures
 @property  unsigned long accessModeAtHome
 @property  unsigned long accessModeNotAtHome
 @property  unsigned long currentAccessMode
 @property  unsigned long recordingEventTriggers
 @property  BOOL snapshotsAllowed
 @property  BOOL periodicSnapshotsAllowed
 @property  BOOL accessModeIndicatorEnabled
 @property  BOOL nightVisionModeEnabled
 @property  BOOL recordingAudioEnabled
 @property  BOOL cameraManuallyDisabled
 @property  HMCameraUserNotificationSettings *notificationSettings
 @property  NSSet *activityZones
 @property  BOOL activityZonesIncludedForSignificantEventDetection
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HMCameraUserSettings supportsSecureCoding]
  +[_HMCameraUserSettings shortDescription]

  // instance methods
  -[_HMCameraUserSettings UUID]
  -[_HMCameraUserSettings privateDescription]
  -[_HMCameraUserSettings initWithCoder:]
  -[_HMCameraUserSettings setNotificationSettings:]
  -[_HMCameraUserSettings .cxx_destruct]
  -[_HMCameraUserSettings notificationSettings]
  -[_HMCameraUserSettings initWithUUID:]
  -[_HMCameraUserSettings attributeDescriptions]
  -[_HMCameraUserSettings isEqual:]
  -[_HMCameraUserSettings setSupportedFeatures:]
  -[_HMCameraUserSettings supportedFeatures]
  -[_HMCameraUserSettings mutableCopyWithZone:]
  -[_HMCameraUserSettings shortDescription]
  -[_HMCameraUserSettings copyWithZone:]
  -[_HMCameraUserSettings encodeWithCoder:]
  -[_HMCameraUserSettings setUUID:]
  -[_HMCameraUserSettings accessModeAtHome]
  -[_HMCameraUserSettings accessModeNotAtHome]
  -[_HMCameraUserSettings currentAccessMode]
  -[_HMCameraUserSettings recordingEventTriggers]
  -[_HMCameraUserSettings isAccessModeIndicatorEnabled]
  -[_HMCameraUserSettings areSnapshotsAllowed]
  -[_HMCameraUserSettings isNightVisionModeEnabled]
  -[_HMCameraUserSettings isRecordingAudioEnabled]
  -[_HMCameraUserSettings isCameraManuallyDisabled]
  -[_HMCameraUserSettings activityZones]
  -[_HMCameraUserSettings areActivityZonesIncludedForSignificantEventDetection]
  -[_HMCameraUserSettings arePeriodicSnapshotsAllowed]
  -[_HMCameraUserSettings setAccessModeAtHome:]
  -[_HMCameraUserSettings setAccessModeNotAtHome:]
  -[_HMCameraUserSettings setCurrentAccessMode:]
  -[_HMCameraUserSettings setRecordingEventTriggers:]
  -[_HMCameraUserSettings setSnapshotsAllowed:]
  -[_HMCameraUserSettings setPeriodicSnapshotsAllowed:]
  -[_HMCameraUserSettings setAccessModeIndicatorEnabled:]
  -[_HMCameraUserSettings setNightVisionModeEnabled:]
  -[_HMCameraUserSettings setRecordingAudioEnabled:]
  -[_HMCameraUserSettings setCameraManuallyDisabled:]
  -[_HMCameraUserSettings setActivityZones:]
  -[_HMCameraUserSettings setActivityZonesIncludedForSignificantEventDetection:]


_HMMutableCameraUserSettings : _HMCameraUserSettings
 @property  NSUUID *UUID
 @property  unsigned long supportedFeatures
 @property  unsigned long accessModeAtHome
 @property  unsigned long accessModeNotAtHome
 @property  unsigned long currentAccessMode
 @property  unsigned long recordingEventTriggers
 @property  BOOL snapshotsAllowed
 @property  BOOL periodicSnapshotsAllowed
 @property  BOOL accessModeIndicatorEnabled
 @property  BOOL nightVisionModeEnabled
 @property  BOOL recordingAudioEnabled
 @property  BOOL cameraManuallyDisabled
 @property  HMCameraUserNotificationSettings *notificationSettings
 @property  NSSet *activityZones
 @property  BOOL activityZonesIncludedForSignificantEventDetection

  // instance methods
  -[_HMMutableCameraUserSettings copyWithZone:]


HMAccessoryAccessCodeFetchResponseValue : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *accessoryUUID
 @property  NSArray *accessoryAccessCodeValues
 @property  NSError *error
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessoryAccessCodeFetchResponseValue supportsSecureCoding]
  +[HMAccessoryAccessCodeFetchResponseValue shortDescription]

  // instance methods
  -[HMAccessoryAccessCodeFetchResponseValue accessoryUUID]
  -[HMAccessoryAccessCodeFetchResponseValue privateDescription]
  -[HMAccessoryAccessCodeFetchResponseValue initWithCoder:]
  -[HMAccessoryAccessCodeFetchResponseValue .cxx_destruct]
  -[HMAccessoryAccessCodeFetchResponseValue attributeDescriptions]
  -[HMAccessoryAccessCodeFetchResponseValue isEqual:]
  -[HMAccessoryAccessCodeFetchResponseValue shortDescription]
  -[HMAccessoryAccessCodeFetchResponseValue copyWithZone:]
  -[HMAccessoryAccessCodeFetchResponseValue setError:]
  -[HMAccessoryAccessCodeFetchResponseValue encodeWithCoder:]
  -[HMAccessoryAccessCodeFetchResponseValue error]
  -[HMAccessoryAccessCodeFetchResponseValue accessoryAccessCodeValues]
  -[HMAccessoryAccessCodeFetchResponseValue initWithAccessoryUUID:accessoryAccessCodeValues:error:]


HMPoint : NSObject <NSCopying, NSSecureCoding>
 @property  {CGPoint=dd} point

  // class methods
  +[HMPoint supportsSecureCoding]

  // instance methods
  -[HMPoint initWithCoder:]
  -[HMPoint isEqual:]
  -[HMPoint point]
  -[HMPoint copyWithZone:]
  -[HMPoint encodeWithCoder:]
  -[HMPoint initWithPoint:]


HMPresenceEvent : HMEvent <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  NSString *presenceType
 @property  HMPresenceEventActivation *activation
 @property  unsigned long activationGranularity
 @property  HMMutableArray *observedUsers
 @property  unsigned long presenceEventType
 @property  unsigned long presenceUserType

  // class methods
  +[HMPresenceEvent supportsSecureCoding]
  +[HMPresenceEvent createWithDictionary:home:]
  +[HMPresenceEvent isSupportedForHome:]
  +[HMPresenceEvent users:home:presenceType:]

  // instance methods
  -[HMPresenceEvent initWithCoder:]
  -[HMPresenceEvent .cxx_destruct]
  -[HMPresenceEvent mutableCopyWithZone:]
  -[HMPresenceEvent copyWithZone:]
  -[HMPresenceEvent encodeWithCoder:]
  -[HMPresenceEvent users]
  -[HMPresenceEvent _serializeForAdd]
  -[HMPresenceEvent _updateFromDictionary:]
  -[HMPresenceEvent _mergeWithNewObject:]
  -[HMPresenceEvent presenceEventType]
  -[HMPresenceEvent initWithDict:presenceType:users:activation:]
  -[HMPresenceEvent initWithPresenceType:users:]
  -[HMPresenceEvent initWithDict:presenceType:users:activationGranularity:]
  -[HMPresenceEvent initWithPresenceEventType:presenceUserType:users:]
  -[HMPresenceEvent presenceType]
  -[HMPresenceEvent activation]
  -[HMPresenceEvent activationGranularity]
  -[HMPresenceEvent presenceUserType]
  -[HMPresenceEvent setPresenceType:]
  -[HMPresenceEvent setActivation:]
  -[HMPresenceEvent observedUsers]
  -[HMPresenceEvent initWithPresenceType:]
  -[HMPresenceEvent initWithPresenceEventType:presenceUserType:]
  -[HMPresenceEvent setPresenceEventType:]
  -[HMPresenceEvent setPresenceUserType:]
  -[HMPresenceEvent updatePresenceType:completionHandler:]
  -[HMPresenceEvent updateUsers:completionHandler:]


HMMutablePresenceEvent : HMPresenceEvent
 @property  NSString *presenceType
 @property  NSArray *users
 @property  unsigned long presenceEventType
 @property  unsigned long presenceUserType


HMMediaSystemRole : NSObject <NSSecureCoding>
 @property  unsigned long type

  // class methods
  +[HMMediaSystemRole supportsSecureCoding]
  +[HMMediaSystemRole leftRole]
  +[HMMediaSystemRole rightRole]
  +[HMMediaSystemRole roleFromDictionary:roleOutput:]

  // instance methods
  -[HMMediaSystemRole initWithCoder:]
  -[HMMediaSystemRole isEqual:]
  -[HMMediaSystemRole serialize]
  -[HMMediaSystemRole initWithDictionary:]
  -[HMMediaSystemRole type]
  -[HMMediaSystemRole encodeWithCoder:]
  -[HMMediaSystemRole initWithRole:]


HMUserInviteInformation : NSObject <HMFObject, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *userID
 @property  BOOL administrator
 @property  BOOL remoteAccessAllowed
 @property  unsigned long camerasAccessLevel
 @property  BOOL announceAccessAllowed
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMUserInviteInformation supportsSecureCoding]
  +[HMUserInviteInformation shortDescription]

  // instance methods
  -[HMUserInviteInformation privateDescription]
  -[HMUserInviteInformation isAdministrator]
  -[HMUserInviteInformation initWithCoder:]
  -[HMUserInviteInformation userID]
  -[HMUserInviteInformation setUserID:]
  -[HMUserInviteInformation .cxx_destruct]
  -[HMUserInviteInformation attributeDescriptions]
  -[HMUserInviteInformation isEqual:]
  -[HMUserInviteInformation camerasAccessLevel]
  -[HMUserInviteInformation mutableCopyWithZone:]
  -[HMUserInviteInformation shortDescription]
  -[HMUserInviteInformation isRemoteAccessAllowed]
  -[HMUserInviteInformation copyWithZone:]
  -[HMUserInviteInformation encodeWithCoder:]
  -[HMUserInviteInformation isAnnounceAccessAllowed]
  -[HMUserInviteInformation initWithUser:administrator:remoteAccess:]
  -[HMUserInviteInformation initWithUser:administrator:remoteAccess:announceAccess:camerasAccessLevel:]


HMMutableUserInviteInformation : HMUserInviteInformation
 @property  NSString *userID

  // instance methods
  -[HMMutableUserInviteInformation copyWithZone:]


HMImmutableSettingsProtoLanguageValueEvent : PBCodable <NSCopying>
 @property  BOOL hasInputLanguageCode
 @property  NSString *inputLanguageCode
 @property  BOOL hasOutputVoiceLanguageCode
 @property  NSString *outputVoiceLanguageCode
 @property  BOOL hasOutputVoiceGenderCode
 @property  NSString *outputVoiceGenderCode
 @property  BOOL hasVoiceName
 @property  NSString *voiceName

  // instance methods
  -[HMImmutableSettingsProtoLanguageValueEvent mergeFrom:]
  -[HMImmutableSettingsProtoLanguageValueEvent .cxx_destruct]
  -[HMImmutableSettingsProtoLanguageValueEvent dictionaryRepresentation]
  -[HMImmutableSettingsProtoLanguageValueEvent writeTo:]
  -[HMImmutableSettingsProtoLanguageValueEvent isEqual:]
  -[HMImmutableSettingsProtoLanguageValueEvent copyTo:]
  -[HMImmutableSettingsProtoLanguageValueEvent readFrom:]
  -[HMImmutableSettingsProtoLanguageValueEvent hasVoiceName]
  -[HMImmutableSettingsProtoLanguageValueEvent copyWithZone:]
  -[HMImmutableSettingsProtoLanguageValueEvent voiceName]
  -[HMImmutableSettingsProtoLanguageValueEvent setVoiceName:]
  -[HMImmutableSettingsProtoLanguageValueEvent hasInputLanguageCode]
  -[HMImmutableSettingsProtoLanguageValueEvent hasOutputVoiceLanguageCode]
  -[HMImmutableSettingsProtoLanguageValueEvent hasOutputVoiceGenderCode]
  -[HMImmutableSettingsProtoLanguageValueEvent inputLanguageCode]
  -[HMImmutableSettingsProtoLanguageValueEvent outputVoiceLanguageCode]
  -[HMImmutableSettingsProtoLanguageValueEvent outputVoiceGenderCode]
  -[HMImmutableSettingsProtoLanguageValueEvent setInputLanguageCode:]
  -[HMImmutableSettingsProtoLanguageValueEvent setOutputVoiceLanguageCode:]
  -[HMImmutableSettingsProtoLanguageValueEvent setOutputVoiceGenderCode:]


HMUserPresenceCompute : NSObject
 @property  NSNumber *number
 @property  unsigned long value

  // class methods
  +[HMUserPresenceCompute computeWithCoder:]
  +[HMUserPresenceCompute computeWithMessage:]
  +[HMUserPresenceCompute computeWithDict:]
  +[HMUserPresenceCompute computeWithValue:]
  +[HMUserPresenceCompute computeWithNumber:]

  // instance methods
  -[HMUserPresenceCompute number]
  -[HMUserPresenceCompute initWithNumber:]
  -[HMUserPresenceCompute addToCoder:]
  -[HMUserPresenceCompute isEqual:]
  -[HMUserPresenceCompute value]
  -[HMUserPresenceCompute addToPayload:]


HMImmutableSettingsProtoValueEvent : PBCodable <NSCopying>
 @property  BOOL hasStringValueEvent
 @property  HMImmutableSettingsProtoStringValueEvent *stringValueEvent
 @property  BOOL hasIntegerValueEvent
 @property  HMImmutableSettingsProtoIntegerValueEvent *integerValueEvent
 @property  BOOL hasBoolValueEvent
 @property  HMImmutableSettingsProtoBoolValueEvent *boolValueEvent
 @property  BOOL hasLanguageValueEvent
 @property  HMImmutableSettingsProtoLanguageValueEvent *languageValueEvent
 @property  BOOL hasSettingValueEvent
 @property  int settingValueEvent

  // instance methods
  -[HMImmutableSettingsProtoValueEvent mergeFrom:]
  -[HMImmutableSettingsProtoValueEvent .cxx_destruct]
  -[HMImmutableSettingsProtoValueEvent dictionaryRepresentation]
  -[HMImmutableSettingsProtoValueEvent writeTo:]
  -[HMImmutableSettingsProtoValueEvent isEqual:]
  -[HMImmutableSettingsProtoValueEvent copyTo:]
  -[HMImmutableSettingsProtoValueEvent readFrom:]
  -[HMImmutableSettingsProtoValueEvent copyWithZone:]
  -[HMImmutableSettingsProtoValueEvent setBoolValueEvent:]
  -[HMImmutableSettingsProtoValueEvent hasBoolValueEvent]
  -[HMImmutableSettingsProtoValueEvent boolValueEvent]
  -[HMImmutableSettingsProtoValueEvent hasSettingValueEvent]
  -[HMImmutableSettingsProtoValueEvent settingValueEvent]
  -[HMImmutableSettingsProtoValueEvent setStringValueEvent:]
  -[HMImmutableSettingsProtoValueEvent hasStringValueEvent]
  -[HMImmutableSettingsProtoValueEvent stringValueEvent]
  -[HMImmutableSettingsProtoValueEvent setIntegerValueEvent:]
  -[HMImmutableSettingsProtoValueEvent hasIntegerValueEvent]
  -[HMImmutableSettingsProtoValueEvent integerValueEvent]
  -[HMImmutableSettingsProtoValueEvent clearOneofValuesForSettingValueEvent]
  -[HMImmutableSettingsProtoValueEvent setLanguageValueEvent:]
  -[HMImmutableSettingsProtoValueEvent hasLanguageValueEvent]
  -[HMImmutableSettingsProtoValueEvent setSettingValueEvent:]
  -[HMImmutableSettingsProtoValueEvent setHasSettingValueEvent:]
  -[HMImmutableSettingsProtoValueEvent settingValueEventAsString:]
  -[HMImmutableSettingsProtoValueEvent StringAsSettingValueEvent:]
  -[HMImmutableSettingsProtoValueEvent languageValueEvent]


HMCameraClipEncryptionManager : NSObject
 @property  NSData *key

  // instance methods
  -[HMCameraClipEncryptionManager .cxx_destruct]
  -[HMCameraClipEncryptionManager init]
  -[HMCameraClipEncryptionManager initWithKey:]
  -[HMCameraClipEncryptionManager key]
  -[HMCameraClipEncryptionManager encryptedDataContextFromData:]


HMSettingConstraint : NSObject <NSSecureCoding, NSCopying>
 @property  NSUUID *identifier
 @property  long long type
 @property  <NSCopying><NSSecureCoding> *value

  // class methods
  +[HMSettingConstraint supportsSecureCoding]
  +[HMSettingConstraint shortDescription]
  +[HMSettingConstraint supportedValueClasses]

  // instance methods
  -[HMSettingConstraint initWithCoder:]
  -[HMSettingConstraint initWithType:value:]
  -[HMSettingConstraint .cxx_destruct]
  -[HMSettingConstraint descriptionWithPointer:]
  -[HMSettingConstraint init]
  -[HMSettingConstraint isEqual:]
  -[HMSettingConstraint identifier]
  -[HMSettingConstraint value]
  -[HMSettingConstraint type]
  -[HMSettingConstraint shortDescription]
  -[HMSettingConstraint copyWithZone:]
  -[HMSettingConstraint encodeWithCoder:]


_HMDocument : NSObject <NSCopying>
 @property  NSString *stringValue
 @property  NSAttributedString *attributedString

  // instance methods
  -[_HMDocument stringValue]
  -[_HMDocument attributedString]
  -[_HMDocument .cxx_destruct]
  -[_HMDocument isEqual:]
  -[_HMDocument initWithString:]
  -[_HMDocument initWithData:error:]
  -[_HMDocument copyWithZone:]
  -[_HMDocument initWithURL:error:]


HMUserActionPredictionProvider : NSObject <HMFMessageReceiver, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSUUID *uuid
 @property  <HMUserActionPredictionProviderDataSource> *dataSource
 @property  HMUserActionPredictionDuetDataSource *duetDataSource
 @property  HMUserActionPredictionTransformer *predictionTransformer
 @property  NSMutableDictionary *lastMappedPredictionsPerHome
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMUserActionPredictionProvider logCategory]

  // instance methods
  -[HMUserActionPredictionProvider configure]
  -[HMUserActionPredictionProvider .cxx_destruct]
  -[HMUserActionPredictionProvider dataSource]
  -[HMUserActionPredictionProvider messageReceiveQueue]
  -[HMUserActionPredictionProvider workQueue]
  -[HMUserActionPredictionProvider messageDispatcher]
  -[HMUserActionPredictionProvider uuid]
  -[HMUserActionPredictionProvider messageTargetUUID]
  -[HMUserActionPredictionProvider unconfigure]
  -[HMUserActionPredictionProvider fetchPredictionsForHomeWithIdentifier:completion:]
  -[HMUserActionPredictionProvider addSubscriber:forHomeIdentifier:]
  -[HMUserActionPredictionProvider removeSubscriber:forHomeIdentifier:]
  -[HMUserActionPredictionProvider initWithWorkQueue:messageDispatcher:UUID:dataSource:duetDataSource:predictionTransformer:]
  -[HMUserActionPredictionProvider recalculatePredictions]
  -[HMUserActionPredictionProvider duetDataSource]
  -[HMUserActionPredictionProvider _handleRefreshPredictionsMessage:]
  -[HMUserActionPredictionProvider lastMappedPredictionsPerHome]
  -[HMUserActionPredictionProvider predictionTransformer]


HMHomeAccessCodeValue : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  HMAccessCodeValue *accessCodeValue
 @property  HMAccessCodeUserInformationValue *userInformationValue
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMHomeAccessCodeValue supportsSecureCoding]
  +[HMHomeAccessCodeValue shortDescription]
  +[HMHomeAccessCodeValue homeAccessCodeValueWithStringValue:userUUID:]
  +[HMHomeAccessCodeValue homeAccessCodeValueWithStringValue:label:]
  +[HMHomeAccessCodeValue homeAccessCodeValueWithStringValue:removedUserInfo:]

  // instance methods
  -[HMHomeAccessCodeValue privateDescription]
  -[HMHomeAccessCodeValue initWithCoder:]
  -[HMHomeAccessCodeValue .cxx_destruct]
  -[HMHomeAccessCodeValue attributeDescriptions]
  -[HMHomeAccessCodeValue isEqual:]
  -[HMHomeAccessCodeValue shortDescription]
  -[HMHomeAccessCodeValue copyWithZone:]
  -[HMHomeAccessCodeValue encodeWithCoder:]
  -[HMHomeAccessCodeValue accessCodeValue]
  -[HMHomeAccessCodeValue userInformationValue]
  -[HMHomeAccessCodeValue initWithAccessCodeValue:userInformationValue:]


HMParsedEventTopic : NSObject <HMParsedAccessoryEventTopic, HMParsedAccessorySettingEventTopic, HMParsedHomeEventTopic>
 @property  NSUUID *homeUUID
 @property  NSUUID *userUUID
 @property  NSUUID *accessoryUUID
 @property  NSString *accessorySettingKeyPath
 @property  NSString *topicSuffix
 @property  NSString *originalTopic
 @property  unsigned long accessoryEventTopicSuffixID
 @property  unsigned long homeEventTopicSuffixID

  // instance methods
  -[HMParsedEventTopic accessoryUUID]
  -[HMParsedEventTopic setAccessoryUUID:]
  -[HMParsedEventTopic userUUID]
  -[HMParsedEventTopic .cxx_destruct]
  -[HMParsedEventTopic initWithTopic:]
  -[HMParsedEventTopic homeUUID]
  -[HMParsedEventTopic setHomeUUID:]
  -[HMParsedEventTopic asAccessoryTopic]
  -[HMParsedEventTopic accessorySettingKeyPath]
  -[HMParsedEventTopic topicSuffix]
  -[HMParsedEventTopic accessoryEventTopicSuffixID]
  -[HMParsedEventTopic homeEventTopicSuffixID]
  -[HMParsedEventTopic asAccessorySettingTopic]
  -[HMParsedEventTopic asHomeEventTopic]
  -[HMParsedEventTopic originalTopic]
  -[HMParsedEventTopic setTopicSuffix:]
  -[HMParsedEventTopic setUserUUID:]
  -[HMParsedEventTopic setAccessorySettingKeyPath:]


HMEventTopicHelper : NSObject
  // class methods
  +[HMEventTopicHelper decodeTopic:]


__HMHomeDataSyncOperation : HMFOperation
 @property  HMHomeManager *manager
 @property  BOOL refresh

  // instance methods
  -[__HMHomeDataSyncOperation initWithHomeManager:]
  -[__HMHomeDataSyncOperation main]
  -[__HMHomeDataSyncOperation initWithHomeManager:timeout:]
  -[__HMHomeDataSyncOperation .cxx_destruct]
  -[__HMHomeDataSyncOperation manager]
  -[__HMHomeDataSyncOperation setRefresh:]
  -[__HMHomeDataSyncOperation isRefresh]


HMSiriEndpointApplyOnboardingSelectionsResponsePayload : NSObject <HMFLogging, HMFObject, HMMessageEncoding>
 @property  long long onboardingResult
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMSiriEndpointApplyOnboardingSelectionsResponsePayload logCategory]
  +[HMSiriEndpointApplyOnboardingSelectionsResponsePayload shortDescription]

  // instance methods
  -[HMSiriEndpointApplyOnboardingSelectionsResponsePayload privateDescription]
  -[HMSiriEndpointApplyOnboardingSelectionsResponsePayload attributeDescriptions]
  -[HMSiriEndpointApplyOnboardingSelectionsResponsePayload isEqual:]
  -[HMSiriEndpointApplyOnboardingSelectionsResponsePayload shortDescription]
  -[HMSiriEndpointApplyOnboardingSelectionsResponsePayload initWithPayload:]
  -[HMSiriEndpointApplyOnboardingSelectionsResponsePayload payloadCopy]
  -[HMSiriEndpointApplyOnboardingSelectionsResponsePayload onboardingResult]
  -[HMSiriEndpointApplyOnboardingSelectionsResponsePayload initWithOnboardingResult:]


HMShortcutAction : HMAction
 @property  WFHomeWorkflow *shortcut

  // class methods
  +[HMShortcutAction supportsSecureCoding]
  +[HMShortcutAction isSupportedForHome:]
  +[HMShortcutAction _actionWithInfo:home:]

  // instance methods
  -[HMShortcutAction initWithCoder:]
  -[HMShortcutAction isValid]
  -[HMShortcutAction .cxx_destruct]
  -[HMShortcutAction initWithShortcut:]
  -[HMShortcutAction shortcut]
  -[HMShortcutAction type]
  -[HMShortcutAction _serializeForAdd]
  -[HMShortcutAction requiresDeviceUnlock]


HMCameraSignificantEventPersonFamiliarityNotificationCondition : NSObject <HMFObject, NSCopying>
 @property  unsigned long personFamiliarityOptions
 @property  NSPredicate *predicate
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraSignificantEventPersonFamiliarityNotificationCondition shortDescription]

  // instance methods
  -[HMCameraSignificantEventPersonFamiliarityNotificationCondition initWithPredicate:]
  -[HMCameraSignificantEventPersonFamiliarityNotificationCondition privateDescription]
  -[HMCameraSignificantEventPersonFamiliarityNotificationCondition predicate]
  -[HMCameraSignificantEventPersonFamiliarityNotificationCondition attributeDescriptions]
  -[HMCameraSignificantEventPersonFamiliarityNotificationCondition isEqual:]
  -[HMCameraSignificantEventPersonFamiliarityNotificationCondition shortDescription]
  -[HMCameraSignificantEventPersonFamiliarityNotificationCondition copyWithZone:]
  -[HMCameraSignificantEventPersonFamiliarityNotificationCondition personFamiliarityOptions]
  -[HMCameraSignificantEventPersonFamiliarityNotificationCondition initWithPersonFamiliarityOptions:]


HMTriggerPolicy : NSObject <NSSecureCoding>
 @property  NSUUID *identifier

  // class methods
  +[HMTriggerPolicy supportsSecureCoding]

  // instance methods
  -[HMTriggerPolicy initWithCoder:]
  -[HMTriggerPolicy .cxx_destruct]
  -[HMTriggerPolicy init]
  -[HMTriggerPolicy identifier]
  -[HMTriggerPolicy _initWithIdentifier:]
  -[HMTriggerPolicy encodeWithCoder:]


HMTriggerDeletePolicy : HMTriggerPolicy
  // class methods
  +[HMTriggerDeletePolicy supportsSecureCoding]

  // instance methods
  -[HMTriggerDeletePolicy initWithCoder:]
  -[HMTriggerDeletePolicy init]
  -[HMTriggerDeletePolicy _initWithIdentifier:]
  -[HMTriggerDeletePolicy encodeWithCoder:]


HMTriggerDeleteAfterExecutionPolicy : HMTriggerDeletePolicy
  // class methods
  +[HMTriggerDeleteAfterExecutionPolicy supportsSecureCoding]
  +[HMTriggerDeleteAfterExecutionPolicy deleteAfterExecutionPolicy]

  // instance methods
  -[HMTriggerDeleteAfterExecutionPolicy initWithCoder:]
  -[HMTriggerDeleteAfterExecutionPolicy init]
  -[HMTriggerDeleteAfterExecutionPolicy _init]
  -[HMTriggerDeleteAfterExecutionPolicy encodeWithCoder:]
  -[HMTriggerDeleteAfterExecutionPolicy initWithPayload:payload:]


HMAccessControl : NSObject <NSSecureCoding>
 @property  unsigned long cachedHash
 @property  HMUser *user

  // class methods
  +[HMAccessControl supportsSecureCoding]

  // instance methods
  -[HMAccessControl initWithUser:]
  -[HMAccessControl cachedHash]
  -[HMAccessControl initWithCoder:]
  -[HMAccessControl .cxx_destruct]
  -[HMAccessControl user]
  -[HMAccessControl setUser:]
  -[HMAccessControl init]
  -[HMAccessControl isEqual:]
  -[HMAccessControl encodeWithCoder:]


HMHomeInvitationData : NSObject <NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  long long invitationState

  // class methods
  +[HMHomeInvitationData supportsSecureCoding]
  +[HMHomeInvitationData homeInvitationStateDescription:]

  // instance methods
  -[HMHomeInvitationData initWithCoder:]
  -[HMHomeInvitationData setEndDate:]
  -[HMHomeInvitationData .cxx_destruct]
  -[HMHomeInvitationData identifier]
  -[HMHomeInvitationData setInvitationState:]
  -[HMHomeInvitationData startDate]
  -[HMHomeInvitationData endDate]
  -[HMHomeInvitationData invitationState]
  -[HMHomeInvitationData encodeWithCoder:]
  -[HMHomeInvitationData initWithInvitationState:invitationIdentifier:endDate:]


HMOutgoingHomeInvitationData : HMHomeInvitationData
 @property  NSString *inviteeName
 @property  NSString *inviteeUserID
 @property  NSUUID *inviteeUUID

  // class methods
  +[HMOutgoingHomeInvitationData supportsSecureCoding]

  // instance methods
  -[HMOutgoingHomeInvitationData initWithCoder:]
  -[HMOutgoingHomeInvitationData .cxx_destruct]
  -[HMOutgoingHomeInvitationData encodeWithCoder:]
  -[HMOutgoingHomeInvitationData inviteeUserID]
  -[HMOutgoingHomeInvitationData inviteeName]
  -[HMOutgoingHomeInvitationData inviteeUUID]
  -[HMOutgoingHomeInvitationData initWithUUID:inviteeUserID:inviteeName:invitationState:expiryDate:]
  -[HMOutgoingHomeInvitationData setInviteeName:]


HMIncomingHomeInvitationData : HMHomeInvitationData
 @property  NSString *inviterName
 @property  NSString *inviterUserID
 @property  NSString *homeName
 @property  NSUUID *homeUUID
 @property  NSUUID *inviterUUID
 @property  NSString *inviterMergeID

  // class methods
  +[HMIncomingHomeInvitationData supportsSecureCoding]

  // instance methods
  -[HMIncomingHomeInvitationData initWithCoder:]
  -[HMIncomingHomeInvitationData .cxx_destruct]
  -[HMIncomingHomeInvitationData homeName]
  -[HMIncomingHomeInvitationData homeUUID]
  -[HMIncomingHomeInvitationData encodeWithCoder:]
  -[HMIncomingHomeInvitationData inviterUserID]
  -[HMIncomingHomeInvitationData inviterName]
  -[HMIncomingHomeInvitationData inviterUUID]
  -[HMIncomingHomeInvitationData inviterMergeID]
  -[HMIncomingHomeInvitationData initWithInviterUserID:invitationIdentifier:inviterName:invitationState:homeName:homeUUID:expiryDate:]
  -[HMIncomingHomeInvitationData setInviterName:]


HMMediaSystemBuilder : NSObject <HMFLogging>
 @property  _HMContext *context
 @property  HMFActivity *activity
 @property  NSUUID *uuid
 @property  NSUUID *mediaSystemUUID
 @property  NSString *builderSessionID
 @property  HMHome *home
 @property  HMMediaSystem *mediaSystem
 @property  HMMutableArray *componentsArray
 @property  NSString *name
 @property  NSString *configuredName
 @property  NSArray *components
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMMediaSystemBuilder logCategory]
  +[HMMediaSystemBuilder isStereoPairingSupportedForAccessories:]
  +[HMMediaSystemBuilder supportsMediaSystem:]
  +[HMMediaSystemBuilder canSupportMediaSystem:]

  // instance methods
  -[HMMediaSystemBuilder home]
  -[HMMediaSystemBuilder name]
  -[HMMediaSystemBuilder .cxx_destruct]
  -[HMMediaSystemBuilder setComponents:]
  -[HMMediaSystemBuilder setName:]
  -[HMMediaSystemBuilder activity]
  -[HMMediaSystemBuilder components]
  -[HMMediaSystemBuilder uuid]
  -[HMMediaSystemBuilder setContext:]
  -[HMMediaSystemBuilder logIdentifier]
  -[HMMediaSystemBuilder configuredName]
  -[HMMediaSystemBuilder initWithHome:]
  -[HMMediaSystemBuilder commitWithCompletionHandler:]
  -[HMMediaSystemBuilder context]
  -[HMMediaSystemBuilder setConfiguredName:]
  -[HMMediaSystemBuilder componentsArray]
  -[HMMediaSystemBuilder mediaSystem]
  -[HMMediaSystemBuilder initWithHome:mediaSystemUUID:context:components:]
  -[HMMediaSystemBuilder _commitWithCompletionHandler:]
  -[HMMediaSystemBuilder builderSessionID]
  -[HMMediaSystemBuilder setBuilderSessionID:]
  -[HMMediaSystemBuilder mediaSystemUUID]
  -[HMMediaSystemBuilder _callCompletion:builderSessionID:error:response:]
  -[HMMediaSystemBuilder initWithMediaSystem:]


HMMutableArray : NSObject
 @property  NSMutableArray *internal
 @property  NSArray *array
 @property  unsigned long count

  // class methods
  +[HMMutableArray array]
  +[HMMutableArray arrayWithArray:]

  // instance methods
  -[HMMutableArray internal]
  -[HMMutableArray containsObject:]
  -[HMMutableArray removeAllObjects]
  -[HMMutableArray initWithArray:]
  -[HMMutableArray addObjectsFromArray:]
  -[HMMutableArray firstItemWithUUID:]
  -[HMMutableArray removeObject:]
  -[HMMutableArray filteredArrayUsingPredicate:]
  -[HMMutableArray firstItemWithValue:forKey:]
  -[HMMutableArray addObject:]
  -[HMMutableArray array]
  -[HMMutableArray .cxx_destruct]
  -[HMMutableArray count]
  -[HMMutableArray firstItemWithCharacteristicType:]
  -[HMMutableArray firstItemWithInstanceID:]
  -[HMMutableArray firstItemWithUniqueIdentifier:]
  -[HMMutableArray isEqual:]
  -[HMMutableArray itemsWithValue:forKey:]
  -[HMMutableArray replaceObject:]
  -[HMMutableArray setArray:]
  -[HMMutableArray setIfDifferent:]
  -[HMMutableArray removeObjectsInArray:]
  -[HMMutableArray firstItemWithName:]
  -[HMMutableArray addObjectIfNotPresent:]


HMDeviceSetupSession : NSObject <HMFLogging, HMFMessageReceiver>
 @property  _HMContext *context
 @property  BOOL open
 @property  <HMDeviceSetupSessionDelegate> *delegate
 @property  NSUUID *identifier
 @property  long long role
 @property  NSDictionary *userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDeviceSetupSession logCategory]
  +[HMDeviceSetupSession homeManagerDestination]

  // instance methods
  -[HMDeviceSetupSession setUserInfo:]
  -[HMDeviceSetupSession _closeWithError:]
  -[HMDeviceSetupSession .cxx_destruct]
  -[HMDeviceSetupSession isOpen]
  -[HMDeviceSetupSession init]
  -[HMDeviceSetupSession identifier]
  -[HMDeviceSetupSession setOpen:]
  -[HMDeviceSetupSession messageReceiveQueue]
  -[HMDeviceSetupSession role]
  -[HMDeviceSetupSession delegate]
  -[HMDeviceSetupSession userInfo]
  -[HMDeviceSetupSession close]
  -[HMDeviceSetupSession dealloc]
  -[HMDeviceSetupSession messageTargetUUID]
  -[HMDeviceSetupSession logIdentifier]
  -[HMDeviceSetupSession __registerForMessages]
  -[HMDeviceSetupSession open]
  -[HMDeviceSetupSession messageDestination]
  -[HMDeviceSetupSession context]
  -[HMDeviceSetupSession initWithRole:delegate:]
  -[HMDeviceSetupSession sendExchangeData:qualityOfService:completionHandler:]
  -[HMDeviceSetupSession _handleDisconnection:]
  -[HMDeviceSetupSession __handleReceivedExchangeData:]
  -[HMDeviceSetupSession __handleClose:]
  -[HMDeviceSetupSession _handleOpenedSession]
  -[HMDeviceSetupSession __closeWithError:]
  -[HMDeviceSetupSession _reallySendExchangeData:qualityOfService:completionHandler:]


HMPersonLink : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *personUUID
 @property  NSUUID *personManagerUUID
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMPersonLink supportsSecureCoding]
  +[HMPersonLink shortDescription]

  // instance methods
  -[HMPersonLink privateDescription]
  -[HMPersonLink initWithCoder:]
  -[HMPersonLink personUUID]
  -[HMPersonLink .cxx_destruct]
  -[HMPersonLink attributeDescriptions]
  -[HMPersonLink isEqual:]
  -[HMPersonLink shortDescription]
  -[HMPersonLink copyWithZone:]
  -[HMPersonLink encodeWithCoder:]
  -[HMPersonLink personManagerUUID]
  -[HMPersonLink initWithPersonUUID:personManagerUUID:]


HMImmutableSettingsProtoLanguageSettingEvent : PBCodable <NSCopying>
 @property  BOOL hasValue
 @property  HMImmutableSettingsProtoLanguageValueEvent *value

  // instance methods
  -[HMImmutableSettingsProtoLanguageSettingEvent mergeFrom:]
  -[HMImmutableSettingsProtoLanguageSettingEvent hasValue]
  -[HMImmutableSettingsProtoLanguageSettingEvent .cxx_destruct]
  -[HMImmutableSettingsProtoLanguageSettingEvent dictionaryRepresentation]
  -[HMImmutableSettingsProtoLanguageSettingEvent writeTo:]
  -[HMImmutableSettingsProtoLanguageSettingEvent isEqual:]
  -[HMImmutableSettingsProtoLanguageSettingEvent copyTo:]
  -[HMImmutableSettingsProtoLanguageSettingEvent readFrom:]
  -[HMImmutableSettingsProtoLanguageSettingEvent setValue:]
  -[HMImmutableSettingsProtoLanguageSettingEvent value]
  -[HMImmutableSettingsProtoLanguageSettingEvent copyWithZone:]


HMAssistantAccessControl : HMAccessControl <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  BOOL enabled
 @property  BOOL allowUnauthenticatedRequests
 @property  NSArray *accessories
 @property  BOOL activityNotificationsEnabledForPersonalRequests

  // class methods
  +[HMAssistantAccessControl supportsSecureCoding]
  +[HMAssistantAccessControl isAccessorySupported:]
  +[HMAssistantAccessControl shortDescription]

  // instance methods
  -[HMAssistantAccessControl initWithUser:]
  -[HMAssistantAccessControl initWithCoder:]
  -[HMAssistantAccessControl options]
  -[HMAssistantAccessControl areActivityNotificationsEnabledForPersonalRequests]
  -[HMAssistantAccessControl .cxx_destruct]
  -[HMAssistantAccessControl descriptionWithPointer:]
  -[HMAssistantAccessControl isEqual:]
  -[HMAssistantAccessControl isEnabled]
  -[HMAssistantAccessControl mutableCopyWithZone:]
  -[HMAssistantAccessControl shortDescription]
  -[HMAssistantAccessControl copyWithZone:]
  -[HMAssistantAccessControl allowUnauthenticatedRequests]
  -[HMAssistantAccessControl accessories]
  -[HMAssistantAccessControl encodeWithCoder:]


HMMutableAssistantAccessControl : HMAssistantAccessControl
 @property  BOOL enabled
 @property  BOOL allowUnauthenticatedRequests
 @property  BOOL activityNotificationsEnabledForPersonalRequests
 @property  NSArray *accessories

  // instance methods
  -[HMMutableAssistantAccessControl addAccessory:]
  -[HMMutableAssistantAccessControl setAccessories:]
  -[HMMutableAssistantAccessControl removeAccessory:]
  -[HMMutableAssistantAccessControl options]
  -[HMMutableAssistantAccessControl setOptions:]
  -[HMMutableAssistantAccessControl areActivityNotificationsEnabledForPersonalRequests]
  -[HMMutableAssistantAccessControl setAllowUnauthenticatedRequests:]
  -[HMMutableAssistantAccessControl isEnabled]
  -[HMMutableAssistantAccessControl copyWithZone:]
  -[HMMutableAssistantAccessControl setEnabled:]
  -[HMMutableAssistantAccessControl allowUnauthenticatedRequests]
  -[HMMutableAssistantAccessControl accessories]
  -[HMMutableAssistantAccessControl setActivityNotificationsEnabledForPersonalRequests:]


HMActionSet : NSObject <HMFMessageReceiver, NSSecureCoding, HMObjectMerge, HMMutableApplicationData>
 @property  NSDictionary *shortcutsDictionaryRepresentation
 @property  _HMContext *context
 @property  NSString *name
 @property  HMMutableArray *currentActions
 @property  NSString *assistantIdentifier
 @property  HMHome *home
 @property  NSUUID *uuid
 @property  BOOL executionInProgress
 @property  NSSet *actions
 @property  BOOL executing
 @property  NSString *actionSetType
 @property  NSUUID *uniqueIdentifier
 @property  NSDate *lastExecutionDate
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *applicationDataIdentifier
 @property  HMApplicationData *applicationData

  // class methods
  +[HMActionSet supportsSecureCoding]
  +[HMActionSet actionSetFromProtoBuf:home:]
  +[HMActionSet allowedActionClasses]
  +[HMActionSet shortcutsComponentActionSet]

  // instance methods
  -[HMActionSet home]
  -[HMActionSet currentActions]
  -[HMActionSet name]
  -[HMActionSet uniqueIdentifier]
  -[HMActionSet initWithCoder:]
  -[HMActionSet .cxx_destruct]
  -[HMActionSet _unconfigure]
  -[HMActionSet actions]
  -[HMActionSet isExecuting]
  -[HMActionSet setName:]
  -[HMActionSet init]
  -[HMActionSet setHome:]
  -[HMActionSet assistantIdentifier]
  -[HMActionSet messageReceiveQueue]
  -[HMActionSet uuid]
  -[HMActionSet setContext:]
  -[HMActionSet actionSetType]
  -[HMActionSet messageTargetUUID]
  -[HMActionSet setAssistantIdentifier:]
  -[HMActionSet shortcutsDictionaryRepresentation]
  -[HMActionSet applicationData]
  -[HMActionSet setApplicationData:]
  -[HMActionSet updateApplicationData:completionHandler:]
  -[HMActionSet encodeWithCoder:]
  -[HMActionSet context]
  -[HMActionSet _mergeWithNewObject:]
  -[HMActionSet _unconfigureContext]
  -[HMActionSet requiresDeviceUnlock]
  -[HMActionSet encodeAsProtoBuf]
  -[HMActionSet initWithShortcutsDictionaryRepresentation:home:]
  -[HMActionSet __configureWithContext:home:]
  -[HMActionSet _registerNotificationHandlers]
  -[HMActionSet _recomputeAssistantIdentifier]
  -[HMActionSet recomputeAssistantIdentifier]
  -[HMActionSet updateName:completionHandler:]
  -[HMActionSet _updateAction:changes:completionHandler:]
  -[HMActionSet _updateName:completionHandler:]
  -[HMActionSet applicationDataIdentifier]
  -[HMActionSet initWithName:type:uuid:]
  -[HMActionSet setCurrentActions:]
  -[HMActionSet _handleActionSetRenameFromPayload:completion:]
  -[HMActionSet _addAction:completionHandler:]
  -[HMActionSet _doAddAction:uuid:]
  -[HMActionSet _removeAction:completionHandler:]
  -[HMActionSet _doRemoveActionWithUUID:completionHandler:]
  -[HMActionSet _handleActionRemovedFromPayload:completion:]
  -[HMActionSet _handleActionUpdatedFromResponse:completion:]
  -[HMActionSet setExecutionInProgress:]
  -[HMActionSet setLastExecutionDate:]
  -[HMActionSet _handleActionSetStartExecutionNotification:]
  -[HMActionSet _handleActionSetExecutedNotification:]
  -[HMActionSet executionInProgress]
  -[HMActionSet lastExecutionDate]
  -[HMActionSet addAction:completionHandler:]
  -[HMActionSet removeAction:completionHandler:]


HMProxyObject : NSProxy
  // instance methods
  -[HMProxyObject self]
  -[HMProxyObject performSelector:]
  -[HMProxyObject performSelector:withObject:withObject:]
  -[HMProxyObject performSelector:withObject:]
  -[HMProxyObject doesNotRecognizeSelector:]
  -[HMProxyObject conformsToProtocol:]
  -[HMProxyObject class]
  -[HMProxyObject methodSignatureForSelector:]
  -[HMProxyObject forwardingTargetForSelector:]
  -[HMProxyObject respondsToSelector:]
  -[HMProxyObject isEqual:]
  -[HMProxyObject isKindOfClass:]
  -[HMProxyObject superclass]
  -[HMProxyObject isMemberOfClass:]


HMProxyObjectIVar : HMProxyObject
  // instance methods
  -[HMProxyObjectIVar self]
  -[HMProxyObjectIVar dealloc]


HMProxyObjectAssoc : HMProxyObject
  // instance methods
  -[HMProxyObjectAssoc self]


HMPBMetadata : PBCodable <NSCopying>
 @property  BOOL hasVersion
 @property  int version
 @property  NSMutableArray *hapCharacteristics
 @property  NSMutableArray *hapServices
 @property  NSMutableArray *hapCategories

  // class methods
  +[HMPBMetadata hapCharacteristicsType]
  +[HMPBMetadata hapServicesType]
  +[HMPBMetadata hapCategoriesType]

  // instance methods
  -[HMPBMetadata mergeFrom:]
  -[HMPBMetadata hapServices]
  -[HMPBMetadata hasVersion]
  -[HMPBMetadata .cxx_destruct]
  -[HMPBMetadata dictionaryRepresentation]
  -[HMPBMetadata setHasVersion:]
  -[HMPBMetadata writeTo:]
  -[HMPBMetadata setVersion:]
  -[HMPBMetadata isEqual:]
  -[HMPBMetadata copyTo:]
  -[HMPBMetadata readFrom:]
  -[HMPBMetadata version]
  -[HMPBMetadata copyWithZone:]
  -[HMPBMetadata hapCharacteristics]
  -[HMPBMetadata hapCharacteristicsCount]
  -[HMPBMetadata hapServicesCount]
  -[HMPBMetadata hapCategoriesCount]
  -[HMPBMetadata hapCategories]
  -[HMPBMetadata addHapCharacteristics:]
  -[HMPBMetadata addHapServices:]
  -[HMPBMetadata addHapCategories:]
  -[HMPBMetadata clearHapCharacteristics]
  -[HMPBMetadata hapCharacteristicsAtIndex:]
  -[HMPBMetadata clearHapServices]
  -[HMPBMetadata hapServicesAtIndex:]
  -[HMPBMetadata clearHapCategories]
  -[HMPBMetadata hapCategoriesAtIndex:]
  -[HMPBMetadata setHapCharacteristics:]
  -[HMPBMetadata setHapServices:]
  -[HMPBMetadata setHapCategories:]


HMImmutableSettingsProtoSettingChangeEvent : PBCodable <NSCopying>
 @property  BOOL hasKeyPath
 @property  NSString *keyPath
 @property  BOOL hasReadOnly
 @property  BOOL readOnly
 @property  BOOL hasStringSetting
 @property  HMImmutableSettingsProtoStringSettingEvent *stringSetting
 @property  BOOL hasBoundedIntegerSetting
 @property  HMImmutableSettingsProtoBoundedIntegerSettingEvent *boundedIntegerSetting
 @property  BOOL hasBoolSetting
 @property  HMImmutableSettingsProtoBoolSettingEvent *boolSetting
 @property  BOOL hasLanguageSetting
 @property  HMImmutableSettingsProtoLanguageSettingEvent *languageSetting
 @property  BOOL hasAvailableLanguages
 @property  HMImmutableSettingsProtoAvailableLanguageListEvent *availableLanguages
 @property  BOOL hasSettingChangeEvent
 @property  int settingChangeEvent

  // instance methods
  -[HMImmutableSettingsProtoSettingChangeEvent readOnly]
  -[HMImmutableSettingsProtoSettingChangeEvent mergeFrom:]
  -[HMImmutableSettingsProtoSettingChangeEvent .cxx_destruct]
  -[HMImmutableSettingsProtoSettingChangeEvent setReadOnly:]
  -[HMImmutableSettingsProtoSettingChangeEvent dictionaryRepresentation]
  -[HMImmutableSettingsProtoSettingChangeEvent writeTo:]
  -[HMImmutableSettingsProtoSettingChangeEvent hasKeyPath]
  -[HMImmutableSettingsProtoSettingChangeEvent availableLanguages]
  -[HMImmutableSettingsProtoSettingChangeEvent setKeyPath:]
  -[HMImmutableSettingsProtoSettingChangeEvent isEqual:]
  -[HMImmutableSettingsProtoSettingChangeEvent copyTo:]
  -[HMImmutableSettingsProtoSettingChangeEvent readFrom:]
  -[HMImmutableSettingsProtoSettingChangeEvent keyPath]
  -[HMImmutableSettingsProtoSettingChangeEvent copyWithZone:]
  -[HMImmutableSettingsProtoSettingChangeEvent hasReadOnly]
  -[HMImmutableSettingsProtoSettingChangeEvent hasBoundedIntegerSetting]
  -[HMImmutableSettingsProtoSettingChangeEvent boundedIntegerSetting]
  -[HMImmutableSettingsProtoSettingChangeEvent setBoundedIntegerSetting:]
  -[HMImmutableSettingsProtoSettingChangeEvent hasAvailableLanguages]
  -[HMImmutableSettingsProtoSettingChangeEvent setAvailableLanguages:]
  -[HMImmutableSettingsProtoSettingChangeEvent languageSetting]
  -[HMImmutableSettingsProtoSettingChangeEvent setLanguageSetting:]
  -[HMImmutableSettingsProtoSettingChangeEvent hasStringSetting]
  -[HMImmutableSettingsProtoSettingChangeEvent stringSetting]
  -[HMImmutableSettingsProtoSettingChangeEvent setStringSetting:]
  -[HMImmutableSettingsProtoSettingChangeEvent hasSettingChangeEvent]
  -[HMImmutableSettingsProtoSettingChangeEvent settingChangeEvent]
  -[HMImmutableSettingsProtoSettingChangeEvent hasBoolSetting]
  -[HMImmutableSettingsProtoSettingChangeEvent boolSetting]
  -[HMImmutableSettingsProtoSettingChangeEvent setBoolSetting:]
  -[HMImmutableSettingsProtoSettingChangeEvent clearOneofValuesForSettingChangeEvent]
  -[HMImmutableSettingsProtoSettingChangeEvent setHasReadOnly:]
  -[HMImmutableSettingsProtoSettingChangeEvent hasLanguageSetting]
  -[HMImmutableSettingsProtoSettingChangeEvent setSettingChangeEvent:]
  -[HMImmutableSettingsProtoSettingChangeEvent setHasSettingChangeEvent:]
  -[HMImmutableSettingsProtoSettingChangeEvent settingChangeEventAsString:]
  -[HMImmutableSettingsProtoSettingChangeEvent StringAsSettingChangeEvent:]


HMSupportedAccessoryDiagnostics : NSObject <NSSecureCoding, NSCopying>
 @property  unsigned long supportedTypes
 @property  long long supportedFormat
 @property  unsigned long supportedOptions
 @property  unsigned long supportedAudio

  // class methods
  +[HMSupportedAccessoryDiagnostics supportsSecureCoding]

  // instance methods
  -[HMSupportedAccessoryDiagnostics initWithCoder:]
  -[HMSupportedAccessoryDiagnostics supportedTypes]
  -[HMSupportedAccessoryDiagnostics isEqual:]
  -[HMSupportedAccessoryDiagnostics supportedOptions]
  -[HMSupportedAccessoryDiagnostics copyWithZone:]
  -[HMSupportedAccessoryDiagnostics encodeWithCoder:]
  -[HMSupportedAccessoryDiagnostics initWithSupportedTypes:format:audio:options:]
  -[HMSupportedAccessoryDiagnostics supportedFormat]
  -[HMSupportedAccessoryDiagnostics supportedAudio]


HMImmutableSettingsProtoStringValueEvent : PBCodable <NSCopying>
 @property  BOOL hasValue
 @property  NSString *value

  // instance methods
  -[HMImmutableSettingsProtoStringValueEvent mergeFrom:]
  -[HMImmutableSettingsProtoStringValueEvent hasValue]
  -[HMImmutableSettingsProtoStringValueEvent .cxx_destruct]
  -[HMImmutableSettingsProtoStringValueEvent dictionaryRepresentation]
  -[HMImmutableSettingsProtoStringValueEvent writeTo:]
  -[HMImmutableSettingsProtoStringValueEvent isEqual:]
  -[HMImmutableSettingsProtoStringValueEvent copyTo:]
  -[HMImmutableSettingsProtoStringValueEvent readFrom:]
  -[HMImmutableSettingsProtoStringValueEvent setValue:]
  -[HMImmutableSettingsProtoStringValueEvent value]
  -[HMImmutableSettingsProtoStringValueEvent copyWithZone:]


_HMTelevisionProfile : _HMAccessoryProfile
 @property  NSArray *mediaSourceDisplayOrder
 @property  BOOL mediaSourceDisplayOrderModifiable
 @property  <_HMTelevisionProfileDelegate> *delegate

  // instance methods
  -[_HMTelevisionProfile .cxx_destruct]
  -[_HMTelevisionProfile setDelegate:]
  -[_HMTelevisionProfile messageReceiveQueue]
  -[_HMTelevisionProfile delegate]
  -[_HMTelevisionProfile messageTargetUUID]
  -[_HMTelevisionProfile messageDestination]
  -[_HMTelevisionProfile _registerNotificationHandlers]
  -[_HMTelevisionProfile initWithTelevisionService:linkedServices:]
  -[_HMTelevisionProfile mediaSourceDisplayOrder]
  -[_HMTelevisionProfile mediaSourceDisplayOrderModifiable]
  -[_HMTelevisionProfile _handleSourceDisplayOrderUpdated:]
  -[_HMTelevisionProfile setMediaSourceDisplayOrder:]
  -[_HMTelevisionProfile _notifyDelegateOfUpdatedSourceDisplayOrder:]
  -[_HMTelevisionProfile isMediaSourceDisplayOrderModifiable]
  -[_HMTelevisionProfile updateMediaSourceDisplayOrder:completionHandler:]


HMTelevisionProfile : HMAccessoryProfile <_HMTelevisionProfileDelegate>
 @property  NSArray *mediaSourceDisplayOrder
 @property  BOOL mediaSourceDisplayOrderModifiable
 @property  <HMTelevisionProfileDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMTelevisionProfile .cxx_destruct]
  -[HMTelevisionProfile setDelegate:]
  -[HMTelevisionProfile delegate]
  -[HMTelevisionProfile _mergeWithNewObject:]
  -[HMTelevisionProfile initWithTelevisionService:linkedServices:]
  -[HMTelevisionProfile mediaSourceDisplayOrder]
  -[HMTelevisionProfile mediaSourceDisplayOrderModifiable]
  -[HMTelevisionProfile televisionProfileDidUpdateSourceDisplayOrder:]
  -[HMTelevisionProfile updateMediaSourceDisplayOrder:completionHandler:]


HMSiriEndpointApplyOnboardingSelectionsPayload : NSObject <HMFLogging, HMFObject, HMMessageEncoding>
 @property  NSUUID *accessoryUUID
 @property  HMSiriEndpointOnboardingSelections *onboardingSelections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMSiriEndpointApplyOnboardingSelectionsPayload logCategory]
  +[HMSiriEndpointApplyOnboardingSelectionsPayload shortDescription]

  // instance methods
  -[HMSiriEndpointApplyOnboardingSelectionsPayload accessoryUUID]
  -[HMSiriEndpointApplyOnboardingSelectionsPayload privateDescription]
  -[HMSiriEndpointApplyOnboardingSelectionsPayload .cxx_destruct]
  -[HMSiriEndpointApplyOnboardingSelectionsPayload attributeDescriptions]
  -[HMSiriEndpointApplyOnboardingSelectionsPayload isEqual:]
  -[HMSiriEndpointApplyOnboardingSelectionsPayload shortDescription]
  -[HMSiriEndpointApplyOnboardingSelectionsPayload initWithPayload:]
  -[HMSiriEndpointApplyOnboardingSelectionsPayload payloadCopy]
  -[HMSiriEndpointApplyOnboardingSelectionsPayload onboardingSelections]
  -[HMSiriEndpointApplyOnboardingSelectionsPayload initWithAccessoryUUID:onboardingSelections:]


HMSettingValue : NSObject <NSCopying, NSSecureCoding>
 @property  long long type
 @property  NSNumber *numberValue
 @property  NSString *stringValue
 @property  NSData *dataValue
 @property  NSUUID *selectionIdentifier
 @property  NSString *selectionValue

  // class methods
  +[HMSettingValue supportsSecureCoding]

  // instance methods
  -[HMSettingValue stringValue]
  -[HMSettingValue initWithCoder:]
  -[HMSettingValue initNumberSettingWithValue:]
  -[HMSettingValue .cxx_destruct]
  -[HMSettingValue numberValue]
  -[HMSettingValue isEqual:]
  -[HMSettingValue selectionIdentifier]
  -[HMSettingValue initDataSettingWithValue:]
  -[HMSettingValue type]
  -[HMSettingValue initStringSettingWithValue:]
  -[HMSettingValue initWithType:stringValue:numberValue:dataValue:selectionIdentifier:selectionValue:]
  -[HMSettingValue copyWithZone:]
  -[HMSettingValue dataValue]
  -[HMSettingValue encodeWithCoder:]
  -[HMSettingValue selectionValue]


HMHomeWalletKeyDeviceState : NSObject <HMFObject, NSSecureCoding, NSCopying>
 @property  HMHomeWalletKey *walletKey
 @property  NSString *expressEnablementConflictingPassDescription
 @property  BOOL canAddWalletKey
 @property  long long canAddWalletKeyErrorCode
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMHomeWalletKeyDeviceState supportsSecureCoding]
  +[HMHomeWalletKeyDeviceState shortDescription]

  // instance methods
  -[HMHomeWalletKeyDeviceState privateDescription]
  -[HMHomeWalletKeyDeviceState initWithCoder:]
  -[HMHomeWalletKeyDeviceState .cxx_destruct]
  -[HMHomeWalletKeyDeviceState attributeDescriptions]
  -[HMHomeWalletKeyDeviceState isEqual:]
  -[HMHomeWalletKeyDeviceState mutableCopyWithZone:]
  -[HMHomeWalletKeyDeviceState shortDescription]
  -[HMHomeWalletKeyDeviceState copyWithZone:]
  -[HMHomeWalletKeyDeviceState encodeWithCoder:]
  -[HMHomeWalletKeyDeviceState walletKey]
  -[HMHomeWalletKeyDeviceState expressEnablementConflictingPassDescription]
  -[HMHomeWalletKeyDeviceState canAddWalletKey]
  -[HMHomeWalletKeyDeviceState canAddWalletKeyErrorCode]
  -[HMHomeWalletKeyDeviceState setCanAddWalletKeyErrorCode:]
  -[HMHomeWalletKeyDeviceState setCanAddWalletKey:]
  -[HMHomeWalletKeyDeviceState setWalletKey:]
  -[HMHomeWalletKeyDeviceState setExpressEnablementConflictingPassDescription:]


HMMutableHomeWalletKeyDeviceState : HMHomeWalletKeyDeviceState
 @property  HMHomeWalletKey *walletKey
 @property  NSString *expressEnablementConflictingPassDescription
 @property  long long canAddWalletKeyErrorCode
 @property  BOOL canAddWalletKey

  // instance methods
  -[HMMutableHomeWalletKeyDeviceState copyWithZone:]


HMMediaProfile : HMAccessoryProfile <_HMMediaProfileDelegate, HMAccessorySettingsContainerInternal, HMMediaObject, HMAccessorySettingsContainer, HMSleepWakeStateProvider>
 @property  NSString *routeUID
 @property  unsigned long capability
 @property  <HMMediaProfileDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *containerUUID
 @property  HMHome *containerHome
 @property  HMMediaSession *mediaSession
 @property  HMAccessorySettings *settings

  // instance methods
  -[HMMediaProfile routeUID]
  -[HMMediaProfile capability]
  -[HMMediaProfile .cxx_destruct]
  -[HMMediaProfile setDelegate:]
  -[HMMediaProfile init]
  -[HMMediaProfile delegate]
  -[HMMediaProfile settings]
  -[HMMediaProfile setCapability:]
  -[HMMediaProfile _mergeWithNewObject:]
  -[HMMediaProfile mediaSession]
  -[HMMediaProfile mediaProfile:didUpdateMediaSession:]
  -[HMMediaProfile containerHome]
  -[HMMediaProfile containerUUID]
  -[HMMediaProfile refreshStateWithCompletionHandler:]
  -[HMMediaProfile fetchAccessorySleepWakeStateWithCompletion:]
  -[HMMediaProfile initWithMediaProfile:]


HMSiriEndpointProfilesMessenger : NSObject <HMFLogging>
 @property  NSUUID *messageTargetUUID
 @property  HMFMessageDispatcher *messageDispatcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSiriEndpointProfilesMessenger logCategory]
  +[HMSiriEndpointProfilesMessenger messageTargetUUIDWithHomeUUID:]

  // instance methods
  -[HMSiriEndpointProfilesMessenger .cxx_destruct]
  -[HMSiriEndpointProfilesMessenger messageDispatcher]
  -[HMSiriEndpointProfilesMessenger messageTargetUUID]
  -[HMSiriEndpointProfilesMessenger logIdentifier]
  -[HMSiriEndpointProfilesMessenger sendApplyOnboardingSelectionsRequestWithAccessoryUUID:onboardingSelections:completionHandler:]
  -[HMSiriEndpointProfilesMessenger sendDeleteSiriHistoryRequestWithAccessoryUUID:completionHandler:]
  -[HMSiriEndpointProfilesMessenger initWithMessageTargetUUID:messageDispatcher:]


HMPBCharacteristicWriteAction : PBCodable <NSCopying>
 @property  BOOL hasActionUUID
 @property  NSData *actionUUID
 @property  BOOL hasTargetValue
 @property  NSData *targetValue
 @property  BOOL hasCharacteristicReference
 @property  HMPBCharacteristicReference *characteristicReference

  // instance methods
  -[HMPBCharacteristicWriteAction mergeFrom:]
  -[HMPBCharacteristicWriteAction targetValue]
  -[HMPBCharacteristicWriteAction .cxx_destruct]
  -[HMPBCharacteristicWriteAction dictionaryRepresentation]
  -[HMPBCharacteristicWriteAction writeTo:]
  -[HMPBCharacteristicWriteAction isEqual:]
  -[HMPBCharacteristicWriteAction copyTo:]
  -[HMPBCharacteristicWriteAction readFrom:]
  -[HMPBCharacteristicWriteAction setTargetValue:]
  -[HMPBCharacteristicWriteAction actionUUID]
  -[HMPBCharacteristicWriteAction copyWithZone:]
  -[HMPBCharacteristicWriteAction setActionUUID:]
  -[HMPBCharacteristicWriteAction hasActionUUID]
  -[HMPBCharacteristicWriteAction characteristicReference]
  -[HMPBCharacteristicWriteAction setCharacteristicReference:]
  -[HMPBCharacteristicWriteAction hasTargetValue]
  -[HMPBCharacteristicWriteAction hasCharacteristicReference]


_HMAccessorySetting : NSObject <HMFLogging, HMFMessageReceiver, HMFMerging, NSSecureCoding>
 @property  HMAccessorySettings *accessorySettings
 @property  _HMContext *context
 @property  <_HMAccesorySettingDelegate> *delegate
 @property  NSUUID *identifier
 @property  long long type
 @property  unsigned long properties
 @property  NSString *name
 @property  NSArray *constraints
 @property  <NSCopying><NSSecureCoding> *value
 @property  BOOL reflected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[_HMAccessorySetting supportsSecureCoding]
  +[_HMAccessorySetting logCategory]
  +[_HMAccessorySetting shortDescription]
  +[_HMAccessorySetting supportedValueClasses]
  +[_HMAccessorySetting _encodedConstraintsToRemove:]
  +[_HMAccessorySetting _encodedConstraintsToAdd:]
  +[_HMAccessorySetting _replaceConstraintsPayloadWithAdditions:removals:keyPath:]
  +[_HMAccessorySetting supportedConstraintClasses]

  // instance methods
  -[_HMAccessorySetting name]
  -[_HMAccessorySetting initWithCoder:]
  -[_HMAccessorySetting constraints]
  -[_HMAccessorySetting .cxx_destruct]
  -[_HMAccessorySetting properties]
  -[_HMAccessorySetting setConstraints:]
  -[_HMAccessorySetting setDelegate:]
  -[_HMAccessorySetting descriptionWithPointer:]
  -[_HMAccessorySetting isEqual:]
  -[_HMAccessorySetting updateValue:completionHandler:]
  -[_HMAccessorySetting identifier]
  -[_HMAccessorySetting setValue:]
  -[_HMAccessorySetting addConstraint:]
  -[_HMAccessorySetting messageReceiveQueue]
  -[_HMAccessorySetting removeConstraint:]
  -[_HMAccessorySetting value]
  -[_HMAccessorySetting type]
  -[_HMAccessorySetting delegate]
  -[_HMAccessorySetting shortDescription]
  -[_HMAccessorySetting setContext:]
  -[_HMAccessorySetting messageTargetUUID]
  -[_HMAccessorySetting logIdentifier]
  -[_HMAccessorySetting messageDestination]
  -[_HMAccessorySetting encodeWithCoder:]
  -[_HMAccessorySetting context]
  -[_HMAccessorySetting _unconfigureContext]
  -[_HMAccessorySetting _registerNotificationHandlers]
  -[_HMAccessorySetting unconfigure]
  -[_HMAccessorySetting configureWithAccessorySettings:context:]
  -[_HMAccessorySetting mergeObject:]
  -[_HMAccessorySetting accessorySettings]
  -[_HMAccessorySetting setAccessorySettings:]
  -[_HMAccessorySetting isReflected]
  -[_HMAccessorySetting _handleUpdatedValue:]
  -[_HMAccessorySetting notifyDelegateOfAddedConstraint:]
  -[_HMAccessorySetting notifyDelegateOfRemovedConstraint:]
  -[_HMAccessorySetting mergeConstraints:]
  -[_HMAccessorySetting initWithType:properties:name:constraints:]
  -[_HMAccessorySetting constraintWithType:]
  -[_HMAccessorySetting addConstraint:completionHandler:]
  -[_HMAccessorySetting removeConstraint:completionHandler:]
  -[_HMAccessorySetting setReflected:]
  -[_HMAccessorySetting replaceConstraints:withConstraints:completionHandler:]
  -[_HMAccessorySetting updateConstraints:completionHandler:]


HMAccessorySetting : HMSetting <_HMAccesorySettingDelegate, HMFLogging>
 @property  _HMAccessorySetting *internal
 @property  HMAccessorySettingGroup *group
 @property  NSString *keyPath
 @property  Class valueClass
 @property  NSUUID *identifier
 @property  BOOL reflected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessorySetting automaticallyNotifiesObserversForKey:]
  +[HMAccessorySetting logCategory]
  +[HMAccessorySetting settingForInternal:]

  // instance methods
  -[HMAccessorySetting internal]
  -[HMAccessorySetting setGroup:]
  -[HMAccessorySetting .cxx_destruct]
  -[HMAccessorySetting initWithInternal:]
  -[HMAccessorySetting init]
  -[HMAccessorySetting isEqual:]
  -[HMAccessorySetting updateValue:completionHandler:]
  -[HMAccessorySetting identifier]
  -[HMAccessorySetting keyPath]
  -[HMAccessorySetting group]
  -[HMAccessorySetting isWritable]
  -[HMAccessorySetting valueClass]
  -[HMAccessorySetting value]
  -[HMAccessorySetting logIdentifier]
  -[HMAccessorySetting isReflected]
  -[HMAccessorySetting updateReflected:]
  -[HMAccessorySetting keyPathForSetting:]
  -[HMAccessorySetting _settingWillUpdateValue:]
  -[HMAccessorySetting _settingDidUpdateValue:]
  -[HMAccessorySetting settingWillUpdateReflected]
  -[HMAccessorySetting settingDidUpdateReflected]
  -[HMAccessorySetting initWithKey:properties:value:]


HMAccessoryDataSetting : HMAccessorySetting
  // instance methods
  -[HMAccessoryDataSetting valueClass]
  -[HMAccessoryDataSetting initWithKey:properties:value:]


HMAccessoryNumberSetting : HMAccessorySetting
 @property  NSNumber *minimumValue
 @property  NSNumber *maximumValue
 @property  NSNumber *stepValue

  // instance methods
  -[HMAccessoryNumberSetting minimumValue]
  -[HMAccessoryNumberSetting stepValue]
  -[HMAccessoryNumberSetting maximumValue]
  -[HMAccessoryNumberSetting valueClass]
  -[HMAccessoryNumberSetting updateValue:]
  -[HMAccessoryNumberSetting initWithKey:properties:value:minimumValue:maximumValue:stepValue:]
  -[HMAccessoryNumberSetting initWithKey:properties:value:]


HMAccessoryStringSetting : HMAccessorySetting
  // instance methods
  -[HMAccessoryStringSetting valueClass]
  -[HMAccessoryStringSetting initWithKey:properties:value:]


HMAccessorySelectionSettingItem : NSObject <NSCopying, NSSecureCoding>
 @property  HMAccessorySelectionSetting *setting
 @property  NSString *keyPath
 @property  NSUUID *identifier
 @property  NSString *title
 @property  NSString *localizedTitle

  // class methods
  +[HMAccessorySelectionSettingItem supportsSecureCoding]

  // instance methods
  -[HMAccessorySelectionSettingItem localizedTitle]
  -[HMAccessorySelectionSettingItem initWithCoder:]
  -[HMAccessorySelectionSettingItem initWithTitle:]
  -[HMAccessorySelectionSettingItem .cxx_destruct]
  -[HMAccessorySelectionSettingItem setting]
  -[HMAccessorySelectionSettingItem init]
  -[HMAccessorySelectionSettingItem isEqual:]
  -[HMAccessorySelectionSettingItem identifier]
  -[HMAccessorySelectionSettingItem keyPath]
  -[HMAccessorySelectionSettingItem title]
  -[HMAccessorySelectionSettingItem copyWithZone:]
  -[HMAccessorySelectionSettingItem encodeWithCoder:]
  -[HMAccessorySelectionSettingItem setSetting:]


HMAccessorySelectionSetting : HMAccessorySetting <_HMAccesorySettingDelegate>
 @property  NSArray *items
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMAccessorySelectionSetting items]
  -[HMAccessorySelectionSetting initWithInternal:]
  -[HMAccessorySelectionSetting updateValue:]
  -[HMAccessorySelectionSetting initWithKey:properties:value:items:]
  -[HMAccessorySelectionSetting _setting:didAddConstraint:]
  -[HMAccessorySelectionSetting initWithKey:properties:value:]
  -[HMAccessorySelectionSetting addItem:completionHandler:]
  -[HMAccessorySelectionSetting removeItem:completionHandler:]


HMAccessoryCollectionSettingItem : NSObject <NSCopying, NSSecureCoding>
 @property  HMAccessoryCollectionSetting *setting
 @property  NSData *serializedValue
 @property  NSUUID *identifier
 @property  <NSObject><NSCopying><NSSecureCoding> *value

  // class methods
  +[HMAccessoryCollectionSettingItem supportsSecureCoding]
  +[HMAccessoryCollectionSettingItem shortDescription]
  +[HMAccessoryCollectionSettingItem requiresCustomItemValueClassesToDecodeForKeyPath:]

  // instance methods
  -[HMAccessoryCollectionSettingItem initWithCoder:]
  -[HMAccessoryCollectionSettingItem .cxx_destruct]
  -[HMAccessoryCollectionSettingItem setting]
  -[HMAccessoryCollectionSettingItem descriptionWithPointer:]
  -[HMAccessoryCollectionSettingItem init]
  -[HMAccessoryCollectionSettingItem isEqual:]
  -[HMAccessoryCollectionSettingItem initWithValue:]
  -[HMAccessoryCollectionSettingItem identifier]
  -[HMAccessoryCollectionSettingItem value]
  -[HMAccessoryCollectionSettingItem shortDescription]
  -[HMAccessoryCollectionSettingItem copyWithZone:]
  -[HMAccessoryCollectionSettingItem encodeWithCoder:]
  -[HMAccessoryCollectionSettingItem setSetting:]
  -[HMAccessoryCollectionSettingItem initWithIdentifier:value:]
  -[HMAccessoryCollectionSettingItem shouldBlockValueDecode]
  -[HMAccessoryCollectionSettingItem serializedValue]


_HMAccessoryCollectionSettingItemClassManager : NSObject
  // class methods
  +[_HMAccessoryCollectionSettingItemClassManager sharedManager]
  +[_HMAccessoryCollectionSettingItemClassManager defaultItemValueClasses]

  // instance methods
  -[_HMAccessoryCollectionSettingItemClassManager .cxx_destruct]
  -[_HMAccessoryCollectionSettingItemClassManager init]
  -[_HMAccessoryCollectionSettingItemClassManager itemValueClassesForKeyPath:]
  -[_HMAccessoryCollectionSettingItemClassManager setItemValueClasses:forKeyPath:]
  -[_HMAccessoryCollectionSettingItemClassManager hasCustomItemValueClassesForKeyPath:]
  -[_HMAccessoryCollectionSettingItemClassManager removeItemValueClassesForKeyPath:]


HMAccessoryCollectionSetting : HMAccessorySetting <NSFastEnumeration>
 @property  NSSet *itemValueClasses

  // class methods
  +[HMAccessoryCollectionSetting itemValueClassesForKeyPath:]
  +[HMAccessoryCollectionSetting setItemValueClass:forKeyPath:]
  +[HMAccessoryCollectionSetting setItemValueClasses:forKeyPath:]
  +[HMAccessoryCollectionSetting removeItemValueClassesForKeyPath:]

  // instance methods
  -[HMAccessoryCollectionSetting initWithInternal:]
  -[HMAccessoryCollectionSetting updateValue:completionHandler:]
  -[HMAccessoryCollectionSetting valueClass]
  -[HMAccessoryCollectionSetting value]
  -[HMAccessoryCollectionSetting countByEnumeratingWithState:objects:count:]
  -[HMAccessoryCollectionSetting setItemValueClass:]
  -[HMAccessoryCollectionSetting setItemValueClasses:]
  -[HMAccessoryCollectionSetting itemValueClasses]
  -[HMAccessoryCollectionSetting _setting:didAddConstraint:]
  -[HMAccessoryCollectionSetting _setting:didRemoveConstraint:]
  -[HMAccessoryCollectionSetting initWithKey:properties:value:]
  -[HMAccessoryCollectionSetting addItem:completionHandler:]
  -[HMAccessoryCollectionSetting removeItem:completionHandler:]
  -[HMAccessoryCollectionSetting replaceItems:withItems:completionHandler:]
  -[HMAccessoryCollectionSetting replaceItem:withItem:completionHandler:]


HMService : NSObject <HMFLogging, NSSecureCoding, HMObjectMerge, HMMutableApplicationData>
 @property  NSDictionary *serializedDictionaryRepresentation
 @property  _HMContext *context
 @property  NSNumber *instanceID
 @property  HMAccessory *accessory
 @property  NSString *serviceType
 @property  NSString *defaultName
 @property  NSString *associatedServiceType
 @property  NSString *serviceSubtype
 @property  long long configurationState
 @property  HMBulletinBoardNotification *bulletinBoardNotificationInternal
 @property  NSURL *homeObjectURLInternal
 @property  HMMutableArray *currentCharacteristics
 @property  NSNumber *lastKnownDiscoveryMode
 @property  NSNumber *lastKnownOperatingStateValue
 @property  NSNumber *lastKnownOperatingStateAbnormalReasonsValue
 @property  NSNumber *mediaSourceIdentifier
 @property  BOOL nameModifiable
 @property  NSString *assistantIdentifier
 @property  NSUUID *targetAccessoryUUID
 @property  NSUUID *uuid
 @property  NSArray *linkedServiceInstanceIDs
 @property  NSString *name
 @property  NSUUID *accessoryUUID
 @property  NSString *configuredName
 @property  NSArray *mediaSourceDisplayOrder
 @property  BOOL mediaSourceDisplayOrderModifiable
 @property  NSString *localizedDescription
 @property  NSArray *characteristics
 @property  NSUUID *uniqueIdentifier
 @property  BOOL userInteractive
 @property  BOOL primaryService
 @property  NSArray *linkedServices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *applicationDataIdentifier
 @property  HMApplicationData *applicationData

  // class methods
  +[HMService supportsSecureCoding]
  +[HMService logCategory]
  +[HMService serviceWithServiceReference:home:]
  +[HMService serviceWithSerializedDictionaryRepresentation:home:]
  +[HMService _mapToServiceConfigurationStateFromIsConfiguredValue:]
  +[HMService initializeCharacteristicDictionaries]
  +[HMService _serviceTypeAsString:]
  +[HMService defaultCharacteristicByServiceDictionary]
  +[HMService characteristicBlacklistForShortcutConditions]
  +[HMService _mapToIsConfiguredValueFromServiceConfigurationState:]
  +[HMService __localizedDescriptionForServiceType:]
  +[HMService localizedDescriptionForServiceType:]

  // instance methods
  -[HMService instanceID]
  -[HMService accessory]
  -[HMService characteristics]
  -[HMService setAccessory:]
  -[HMService accessoryUUID]
  -[HMService name]
  -[HMService localizedDescription]
  -[HMService uniqueIdentifier]
  -[HMService initWithCoder:]
  -[HMService setServiceType:]
  -[HMService defaultName]
  -[HMService .cxx_destruct]
  -[HMService _unconfigure]
  -[HMService setName:]
  -[HMService init]
  -[HMService isEqual:]
  -[HMService assistantIdentifier]
  -[HMService linkedServices]
  -[HMService uuid]
  -[HMService setContext:]
  -[HMService logIdentifier]
  -[HMService configuredName]
  -[HMService setAssistantIdentifier:]
  -[HMService applicationData]
  -[HMService setApplicationData:]
  -[HMService setUuid:]
  -[HMService updateApplicationData:completionHandler:]
  -[HMService encodeWithCoder:]
  -[HMService configurationState]
  -[HMService context]
  -[HMService serviceType]
  -[HMService _mergeWithNewObject:]
  -[HMService _unconfigureContext]
  -[HMService __configureWithContext:accessory:]
  -[HMService _recomputeAssistantIdentifier]
  -[HMService setConfiguredName:]
  -[HMService recomputeAssistantIdentifier]
  -[HMService updateName:completionHandler:]
  -[HMService bulletinBoardNotification]
  -[HMService serializedDictionaryRepresentation]
  -[HMService linkedServiceInstanceIDs]
  -[HMService _findCharacteristic:]
  -[HMService homeObjectURL]
  -[HMService _updateName:completionHandler:]
  -[HMService applicationDataIdentifier]
  -[HMService _removeCharacteristic:]
  -[HMService _addCharacteristic:]
  -[HMService _handleUpdateName:]
  -[HMService _handleUpdateDefaultName:]
  -[HMService _handleUpdateAssociatedServiceType:]
  -[HMService _handleUpdateServiceSubtype:]
  -[HMService _handleUpdateConfigurationState:]
  -[HMService _handleMediaSourceIdentifierUpdated:]
  -[HMService _findCharacteristicWithUniqueIdentifier:]
  -[HMService mediaSourceDisplayOrder]
  -[HMService mediaSourceDisplayOrderModifiable]
  -[HMService setMediaSourceDisplayOrder:]
  -[HMService bulletinBoardNotificationInternal]
  -[HMService currentCharacteristics]
  -[HMService _serviceTypeDescription]
  -[HMService characteristicsSupportedForShortcutConditions]
  -[HMService lastKnownOperatingStateValue]
  -[HMService lastKnownOperatingStateAbnormalReasonsValue]
  -[HMService homeObjectURLInternal]
  -[HMService targetAccessoryUUID]
  -[HMService isNameModifiable]
  -[HMService _updateAssociatedServiceType:completionHandler:]
  -[HMService associatedServiceType]
  -[HMService _updateConfigurationState:completionHandler:]
  -[HMService setDefaultName:]
  -[HMService isUserInteractive]
  -[HMService setAssociatedServiceType:]
  -[HMService serviceSubtype]
  -[HMService setServiceSubtype:]
  -[HMService setConfigurationState:]
  -[HMService setLastKnownOperatingStateValue:]
  -[HMService setLastKnownOperatingStateAbnormalReasonsValue:]
  -[HMService _addLastKnownOperatingStateWithResponsesDidUpdateDelegateCallbackToOperations]
  -[HMService mediaSourceIdentifier]
  -[HMService setMediaSourceDisplayOrderModifiable:]
  -[HMService isPrimaryService]
  -[HMService setMediaSourceIdentifier:]
  -[HMService _hasCharacteristic:]
  -[HMService defaultCharacteristic]
  -[HMService hasSleepDiscoveryMode]
  -[HMService lastKnownSleepDiscoveryMode]
  -[HMService hasOperatingState]
  -[HMService hasOperatingStateAbnormalReasons]
  -[HMService lastKnownOperatingState]
  -[HMService lastKnownOperatingStateAbnormalReasons]
  -[HMService updateAssociatedServiceType:completionHandler:]
  -[HMService updateConfigurationState:completionHandler:]
  -[HMService _handleUpdateServicePrimary:]
  -[HMService _handleMarkServiceInteractive:]
  -[HMService _hasCharacteristicOfType:]
  -[HMService nameModifiable]
  -[HMService setNameModifiable:]
  -[HMService setCurrentCharacteristics:]
  -[HMService lastKnownDiscoveryMode]
  -[HMService setLastKnownDiscoveryMode:]
  -[HMService setTargetAccessoryUUID:]


HMUserPresenceAuthorization : NSObject
 @property  NSNumber *number
 @property  unsigned long value

  // class methods
  +[HMUserPresenceAuthorization authWithValue:]
  +[HMUserPresenceAuthorization authWithMessage:]
  +[HMUserPresenceAuthorization authWithDict:]
  +[HMUserPresenceAuthorization authWithNumber:]
  +[HMUserPresenceAuthorization authWithCoder:]

  // instance methods
  -[HMUserPresenceAuthorization number]
  -[HMUserPresenceAuthorization initWithNumber:]
  -[HMUserPresenceAuthorization addToCoder:]
  -[HMUserPresenceAuthorization isEqual:]
  -[HMUserPresenceAuthorization value]
  -[HMUserPresenceAuthorization addToPayload:]


HMCameraClipVideoSegment : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  unsigned long byteLength
 @property  unsigned long byteOffset
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraClipVideoSegment supportsSecureCoding]
  +[HMCameraClipVideoSegment shortDescription]

  // instance methods
  -[HMCameraClipVideoSegment privateDescription]
  -[HMCameraClipVideoSegment initWithCoder:]
  -[HMCameraClipVideoSegment byteLength]
  -[HMCameraClipVideoSegment byteOffset]
  -[HMCameraClipVideoSegment attributeDescriptions]
  -[HMCameraClipVideoSegment isEqual:]
  -[HMCameraClipVideoSegment shortDescription]
  -[HMCameraClipVideoSegment copyWithZone:]
  -[HMCameraClipVideoSegment encodeWithCoder:]
  -[HMCameraClipVideoSegment initWithByteLength:byteOffset:]


HMHomeFetchLightProfileSettingsResult : NSObject <HMFObject, NSSecureCoding, NSCopying>
 @property  NSError *error
 @property  HMLightProfileSettings *settings
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMHomeFetchLightProfileSettingsResult supportsSecureCoding]
  +[HMHomeFetchLightProfileSettingsResult shortDescription]

  // instance methods
  -[HMHomeFetchLightProfileSettingsResult privateDescription]
  -[HMHomeFetchLightProfileSettingsResult initWithCoder:]
  -[HMHomeFetchLightProfileSettingsResult .cxx_destruct]
  -[HMHomeFetchLightProfileSettingsResult initWithError:]
  -[HMHomeFetchLightProfileSettingsResult attributeDescriptions]
  -[HMHomeFetchLightProfileSettingsResult isEqual:]
  -[HMHomeFetchLightProfileSettingsResult initWithSettings:]
  -[HMHomeFetchLightProfileSettingsResult shortDescription]
  -[HMHomeFetchLightProfileSettingsResult copyWithZone:]
  -[HMHomeFetchLightProfileSettingsResult encodeWithCoder:]
  -[HMHomeFetchLightProfileSettingsResult settings]
  -[HMHomeFetchLightProfileSettingsResult error]


HMMediaGroupProtoJoinedMediaParticipantData : PBCodable <NSCopying>
 @property  BOOL hasDestination
 @property  HMMediaGroupProtoJoinedMediaDestination *destination
 @property  BOOL hasDestinationController
 @property  HMMediaGroupProtoMediaDestinationControllerData *destinationController

  // instance methods
  -[HMMediaGroupProtoJoinedMediaParticipantData mergeFrom:]
  -[HMMediaGroupProtoJoinedMediaParticipantData setDestination:]
  -[HMMediaGroupProtoJoinedMediaParticipantData .cxx_destruct]
  -[HMMediaGroupProtoJoinedMediaParticipantData dictionaryRepresentation]
  -[HMMediaGroupProtoJoinedMediaParticipantData destinationController]
  -[HMMediaGroupProtoJoinedMediaParticipantData writeTo:]
  -[HMMediaGroupProtoJoinedMediaParticipantData destination]
  -[HMMediaGroupProtoJoinedMediaParticipantData hasDestination]
  -[HMMediaGroupProtoJoinedMediaParticipantData setDestinationController:]
  -[HMMediaGroupProtoJoinedMediaParticipantData isEqual:]
  -[HMMediaGroupProtoJoinedMediaParticipantData copyTo:]
  -[HMMediaGroupProtoJoinedMediaParticipantData readFrom:]
  -[HMMediaGroupProtoJoinedMediaParticipantData copyWithZone:]
  -[HMMediaGroupProtoJoinedMediaParticipantData hasDestinationController]


HMAutoAddWalletKeySupressionAssertion : HMFAssertion
 @property  HMHomeManager *homeManager
 @property  NSUUID *homeUUID

  // instance methods
  -[HMAutoAddWalletKeySupressionAssertion homeManager]
  -[HMAutoAddWalletKeySupressionAssertion .cxx_destruct]
  -[HMAutoAddWalletKeySupressionAssertion homeUUID]
  -[HMAutoAddWalletKeySupressionAssertion invalidate]
  -[HMAutoAddWalletKeySupressionAssertion initWithHomeManager:homeUUID:]
  -[HMAutoAddWalletKeySupressionAssertion acquireWithCompletion:]


HMSiriEndpointProfile : HMAccessoryProfile <_HMSiriEndpointProfileDelegate, HMFLogging, HMFObject>
 @property  unsigned long capability
 @property  NSNumber *activeIdentifier
 @property  long long sessionState
 @property  NSUUID *sessionHubIdentifer
 @property  NSString *siriEndpointVersion
 @property  BOOL needsOnboarding
 @property  BOOL supportsOnboarding
 @property  NSString *capabilityToString
 @property  NSString *siriEngineVersion
 @property  BOOL manuallyDisabled
 @property  long long multifunctionButton
 @property  NSArray *assistants
 @property  HMSiriEndpointProfileAssistant *currentAssistant
 @property  <HMSiriEndpointProfileDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMSiriEndpointProfile logCategory]
  +[HMSiriEndpointProfile shortDescription]

  // instance methods
  -[HMSiriEndpointProfile privateDescription]
  -[HMSiriEndpointProfile capability]
  -[HMSiriEndpointProfile .cxx_destruct]
  -[HMSiriEndpointProfile setDelegate:]
  -[HMSiriEndpointProfile attributeDescriptions]
  -[HMSiriEndpointProfile init]
  -[HMSiriEndpointProfile sessionState]
  -[HMSiriEndpointProfile delegate]
  -[HMSiriEndpointProfile shortDescription]
  -[HMSiriEndpointProfile logIdentifier]
  -[HMSiriEndpointProfile _mergeWithNewObject:]
  -[HMSiriEndpointProfile initWithSiriEndpointProfile:]
  -[HMSiriEndpointProfile siriEndpointProfile]
  -[HMSiriEndpointProfile siriEndpointProfile:didUpdateSessionState:]
  -[HMSiriEndpointProfile sessionHubIdentifer]
  -[HMSiriEndpointProfile siriEndpointProfile:didUpdateSessionHubIdentifier:]
  -[HMSiriEndpointProfile siriEndpointVersion]
  -[HMSiriEndpointProfile siriEngineVersion]
  -[HMSiriEndpointProfile siriEndpointProfile:didUpdateSiriEngineVersion:]
  -[HMSiriEndpointProfile siriEndpointProfile:didUpdateNeedsOnboarding:]
  -[HMSiriEndpointProfile siriEndpointProfile:didUpdateSupportsOnboarding:]
  -[HMSiriEndpointProfile activeIdentifier]
  -[HMSiriEndpointProfile siriEndpointProfile:didUpdateActiveIdentifier:]
  -[HMSiriEndpointProfile manuallyDisabled]
  -[HMSiriEndpointProfile siriEndpointProfile:didUpdateManuallyDisabled:]
  -[HMSiriEndpointProfile multifunctionButton]
  -[HMSiriEndpointProfile siriEndpointProfile:didUpdateMultifunctionButton:]
  -[HMSiriEndpointProfile siriEndpointProfile:didUpdateAssistants:]
  -[HMSiriEndpointProfile assistants]
  -[HMSiriEndpointProfile applyOnboardingSelections:completionHandler:]
  -[HMSiriEndpointProfile deleteSiriHistoryWithCompletionHandler:]
  -[HMSiriEndpointProfile refreshStateWithCompletionHandler:]
  -[HMSiriEndpointProfile setNotifications:options:completionHandler:]
  -[HMSiriEndpointProfile supportsOnboarding]
  -[HMSiriEndpointProfile currentAssistant]
  -[HMSiriEndpointProfile isNeedsOnboarding]
  -[HMSiriEndpointProfile capabilityToString]
  -[HMSiriEndpointProfile supportsOnBoarding]


HMLocalization : NSObject
 @property  NSArray *stringTable

  // class methods
  +[HMLocalization sharedManager]

  // instance methods
  -[HMLocalization stringTable]
  -[HMLocalization handleLocaleDidChange:]
  -[HMLocalization .cxx_destruct]
  -[HMLocalization init]
  -[HMLocalization getLocalizedString:]
  -[HMLocalization _updateLocalizedStrings]
  -[HMLocalization getLocalizedOrCustomString:]


HMImmutableSettingsProtoStringSettingEvent : PBCodable <NSCopying>
 @property  BOOL hasValue
 @property  HMImmutableSettingsProtoStringValueEvent *value

  // instance methods
  -[HMImmutableSettingsProtoStringSettingEvent mergeFrom:]
  -[HMImmutableSettingsProtoStringSettingEvent hasValue]
  -[HMImmutableSettingsProtoStringSettingEvent .cxx_destruct]
  -[HMImmutableSettingsProtoStringSettingEvent dictionaryRepresentation]
  -[HMImmutableSettingsProtoStringSettingEvent writeTo:]
  -[HMImmutableSettingsProtoStringSettingEvent isEqual:]
  -[HMImmutableSettingsProtoStringSettingEvent copyTo:]
  -[HMImmutableSettingsProtoStringSettingEvent readFrom:]
  -[HMImmutableSettingsProtoStringSettingEvent setValue:]
  -[HMImmutableSettingsProtoStringSettingEvent value]
  -[HMImmutableSettingsProtoStringSettingEvent copyWithZone:]


HMCHIPHome : NSObject <HMFObject, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSUUID *UUID
 @property  NSNumber *identifier
 @property  NSNumber *index
 @property  NSString *name
 @property  HMCHIPEcosystem *ecosystem
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCHIPHome supportsSecureCoding]
  +[HMCHIPHome shortDescription]

  // instance methods
  -[HMCHIPHome UUID]
  -[HMCHIPHome name]
  -[HMCHIPHome privateDescription]
  -[HMCHIPHome initWithCoder:]
  -[HMCHIPHome .cxx_destruct]
  -[HMCHIPHome attributeDescriptions]
  -[HMCHIPHome isEqual:]
  -[HMCHIPHome identifier]
  -[HMCHIPHome index]
  -[HMCHIPHome mutableCopyWithZone:]
  -[HMCHIPHome shortDescription]
  -[HMCHIPHome copyWithZone:]
  -[HMCHIPHome encodeWithCoder:]
  -[HMCHIPHome ecosystem]
  -[HMCHIPHome initWithIdentifier:index:name:ecosystem:]
  -[HMCHIPHome initWithIdentifier:name:ecosystem:]


HMMutableCHIPHome : HMCHIPHome
 @property  NSString *name
 @property  HMCHIPEcosystem *ecosystem

  // instance methods
  -[HMMutableCHIPHome copyWithZone:]


HMAccessoryInfoProtoAccessoryInfoEvent : PBCodable <NSCopying>
 @property  BOOL hasReadOnly
 @property  BOOL readOnly
 @property  BOOL hasWifiNetworkInfo
 @property  HMAccessoryInfoProtoWifiNetworkInfoEvent *wifiNetworkInfo
 @property  BOOL hasAccessoryInfoEvent
 @property  int accessoryInfoEvent

  // instance methods
  -[HMAccessoryInfoProtoAccessoryInfoEvent readOnly]
  -[HMAccessoryInfoProtoAccessoryInfoEvent mergeFrom:]
  -[HMAccessoryInfoProtoAccessoryInfoEvent .cxx_destruct]
  -[HMAccessoryInfoProtoAccessoryInfoEvent setReadOnly:]
  -[HMAccessoryInfoProtoAccessoryInfoEvent dictionaryRepresentation]
  -[HMAccessoryInfoProtoAccessoryInfoEvent writeTo:]
  -[HMAccessoryInfoProtoAccessoryInfoEvent isEqual:]
  -[HMAccessoryInfoProtoAccessoryInfoEvent copyTo:]
  -[HMAccessoryInfoProtoAccessoryInfoEvent readFrom:]
  -[HMAccessoryInfoProtoAccessoryInfoEvent copyWithZone:]
  -[HMAccessoryInfoProtoAccessoryInfoEvent hasReadOnly]
  -[HMAccessoryInfoProtoAccessoryInfoEvent hasAccessoryInfoEvent]
  -[HMAccessoryInfoProtoAccessoryInfoEvent accessoryInfoEvent]
  -[HMAccessoryInfoProtoAccessoryInfoEvent setWifiNetworkInfo:]
  -[HMAccessoryInfoProtoAccessoryInfoEvent wifiNetworkInfo]
  -[HMAccessoryInfoProtoAccessoryInfoEvent hasWifiNetworkInfo]
  -[HMAccessoryInfoProtoAccessoryInfoEvent setHasReadOnly:]
  -[HMAccessoryInfoProtoAccessoryInfoEvent clearOneofValuesForAccessoryInfoEvent]
  -[HMAccessoryInfoProtoAccessoryInfoEvent setAccessoryInfoEvent:]
  -[HMAccessoryInfoProtoAccessoryInfoEvent setHasAccessoryInfoEvent:]
  -[HMAccessoryInfoProtoAccessoryInfoEvent accessoryInfoEventAsString:]
  -[HMAccessoryInfoProtoAccessoryInfoEvent StringAsAccessoryInfoEvent:]


HMSettingLanguageValue : HMImmutableSettingValue
 @property  NSString *inputLanguageCode
 @property  NSString *outputVoiceLanguageCode
 @property  NSString *outputVoiceGenderCode
 @property  NSString *voiceName

  // instance methods
  -[HMSettingLanguageValue .cxx_destruct]
  -[HMSettingLanguageValue attributeDescriptions]
  -[HMSettingLanguageValue isEqual:]
  -[HMSettingLanguageValue voiceName]
  -[HMSettingLanguageValue initWithPayload:]
  -[HMSettingLanguageValue payloadCopy]
  -[HMSettingLanguageValue protoPayload]
  -[HMSettingLanguageValue initWithProtoPayload:]
  -[HMSettingLanguageValue inputLanguageCode]
  -[HMSettingLanguageValue outputVoiceLanguageCode]
  -[HMSettingLanguageValue outputVoiceGenderCode]
  -[HMSettingLanguageValue initWithInputLanguageCode:outputVoiceLanguageCode:outputVoiceGenderCode:voiceName:]
  -[HMSettingLanguageValue initWithInputLanguageCode:outputVoiceLanguageCode:outputVoiceGenderCode:]


HMCameraRecordingReachabilityEventManager : NSObject <HMFMessageReceiver, HMFLogging>
 @property  _HMContext *context
 @property  NSUUID *uniqueIdentifier
 @property  NSNotificationCenter *notificationCenter
 @property  HMFUnfairLock *lock
 @property  NSHashTable *observers
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCameraRecordingReachabilityEventManager logCategory]

  // instance methods
  -[HMCameraRecordingReachabilityEventManager configure]
  -[HMCameraRecordingReachabilityEventManager notificationCenter]
  -[HMCameraRecordingReachabilityEventManager subscribe]
  -[HMCameraRecordingReachabilityEventManager uniqueIdentifier]
  -[HMCameraRecordingReachabilityEventManager .cxx_destruct]
  -[HMCameraRecordingReachabilityEventManager addObserver:]
  -[HMCameraRecordingReachabilityEventManager messageReceiveQueue]
  -[HMCameraRecordingReachabilityEventManager observers]
  -[HMCameraRecordingReachabilityEventManager dealloc]
  -[HMCameraRecordingReachabilityEventManager messageTargetUUID]
  -[HMCameraRecordingReachabilityEventManager logIdentifier]
  -[HMCameraRecordingReachabilityEventManager lock]
  -[HMCameraRecordingReachabilityEventManager unsubscribe]
  -[HMCameraRecordingReachabilityEventManager removeObserver:]
  -[HMCameraRecordingReachabilityEventManager context]
  -[HMCameraRecordingReachabilityEventManager handleDaemonReconnectedNotification:]
  -[HMCameraRecordingReachabilityEventManager performCloudPullWithCompletion:]
  -[HMCameraRecordingReachabilityEventManager fetchEventsWithDateInterval:limit:shouldOrderAscending:completion:]
  -[HMCameraRecordingReachabilityEventManager fetchCountOfEventsWithDateInterval:completion:]
  -[HMCameraRecordingReachabilityEventManager deleteAllEventsWithCompletionHandler:]
  -[HMCameraRecordingReachabilityEventManager fetchEventsWithDateInterval:limit:completion:]
  -[HMCameraRecordingReachabilityEventManager fetchAllEventsWithCompletion:]
  -[HMCameraRecordingReachabilityEventManager fetchCountOfAllEventsWithCompletion:]
  -[HMCameraRecordingReachabilityEventManager initWithContext:uniqueIdentifier:]
  -[HMCameraRecordingReachabilityEventManager initWithContext:uniqueIdentifier:notificationCenter:]
  -[HMCameraRecordingReachabilityEventManager handleDidChangeEventsMessage:]
  -[HMCameraRecordingReachabilityEventManager fetchEventsBeforeDate:withLimit:completion:]
  -[HMCameraRecordingReachabilityEventManager fetchEventsAfterDate:withLimit:completion:]


HMPBActionContainer : PBCodable <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasCharacteristicWriteAction
 @property  HMPBCharacteristicWriteAction *characteristicWriteAction
 @property  BOOL hasMediaPlaybackAction
 @property  HMPBMediaPlaybackAction *mediaPlaybackAction
 @property  BOOL hasNaturalLightingAction
 @property  HMPBNaturalLightingAction *naturalLightingAction

  // instance methods
  -[HMPBActionContainer mergeFrom:]
  -[HMPBActionContainer setType:]
  -[HMPBActionContainer .cxx_destruct]
  -[HMPBActionContainer dictionaryRepresentation]
  -[HMPBActionContainer writeTo:]
  -[HMPBActionContainer setHasType:]
  -[HMPBActionContainer hasType]
  -[HMPBActionContainer isEqual:]
  -[HMPBActionContainer copyTo:]
  -[HMPBActionContainer typeAsString:]
  -[HMPBActionContainer readFrom:]
  -[HMPBActionContainer StringAsType:]
  -[HMPBActionContainer type]
  -[HMPBActionContainer copyWithZone:]
  -[HMPBActionContainer setMediaPlaybackAction:]
  -[HMPBActionContainer setCharacteristicWriteAction:]
  -[HMPBActionContainer setNaturalLightingAction:]
  -[HMPBActionContainer characteristicWriteAction]
  -[HMPBActionContainer mediaPlaybackAction]
  -[HMPBActionContainer naturalLightingAction]
  -[HMPBActionContainer hasCharacteristicWriteAction]
  -[HMPBActionContainer hasMediaPlaybackAction]
  -[HMPBActionContainer hasNaturalLightingAction]


HMBulletinBoardNotification : NSObject <NSSecureCoding, HMObjectMerge, HMFMessageReceiver, HMFLogging>
 @property  NSUUID *targetUUID
 @property  NSString *logID
 @property  _HMContext *context
 @property  HMService *service
 @property  BOOL enabled
 @property  NSPredicate *condition
 @property  HMBulletinBoardNotificationServiceGroup *notificationServiceGroup
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMBulletinBoardNotification supportsSecureCoding]
  +[HMBulletinBoardNotification logCategory]

  // instance methods
  -[HMBulletinBoardNotification condition]
  -[HMBulletinBoardNotification uniqueIdentifier]
  -[HMBulletinBoardNotification initWithCoder:]
  -[HMBulletinBoardNotification logID]
  -[HMBulletinBoardNotification setCondition:]
  -[HMBulletinBoardNotification .cxx_destruct]
  -[HMBulletinBoardNotification _unconfigure]
  -[HMBulletinBoardNotification init]
  -[HMBulletinBoardNotification messageReceiveQueue]
  -[HMBulletinBoardNotification isEnabled]
  -[HMBulletinBoardNotification service]
  -[HMBulletinBoardNotification setContext:]
  -[HMBulletinBoardNotification messageTargetUUID]
  -[HMBulletinBoardNotification logIdentifier]
  -[HMBulletinBoardNotification setEnabled:]
  -[HMBulletinBoardNotification commitWithCompletionHandler:]
  -[HMBulletinBoardNotification encodeWithCoder:]
  -[HMBulletinBoardNotification targetUUID]
  -[HMBulletinBoardNotification context]
  -[HMBulletinBoardNotification _mergeWithNewObject:]
  -[HMBulletinBoardNotification _unconfigureContext]
  -[HMBulletinBoardNotification _registerNotificationHandlers]
  -[HMBulletinBoardNotification __configureWithContext:]
  -[HMBulletinBoardNotification initWithEnabled:condition:]
  -[HMBulletinBoardNotification _commitWithCompletionHandler:]
  -[HMBulletinBoardNotification _handleBulletinBoardNotificationUpdateNotification:]
  -[HMBulletinBoardNotification notificationServiceGroup]
  -[HMBulletinBoardNotification _callBulletinBoardNotificationUpdatedDelegate]


HMMediaSystemComponent : NSObject <HMFLogging, NSSecureCoding, HMObjectMerge, NSCopying, NSMutableCopying>
 @property  NSUUID *uuid
 @property  HMAccessory *accessory
 @property  HMMediaProfile *mediaProfile
 @property  HMMediaSystemRole *role
 @property  NSUUID *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMMediaSystemComponent supportsSecureCoding]
  +[HMMediaSystemComponent logCategory]
  +[HMMediaSystemComponent mediaSystemComponentWithDictionary:home:]

  // instance methods
  -[HMMediaSystemComponent accessory]
  -[HMMediaSystemComponent setAccessory:]
  -[HMMediaSystemComponent uniqueIdentifier]
  -[HMMediaSystemComponent initWithCoder:]
  -[HMMediaSystemComponent setRole:]
  -[HMMediaSystemComponent .cxx_destruct]
  -[HMMediaSystemComponent _unconfigure]
  -[HMMediaSystemComponent mediaProfile]
  -[HMMediaSystemComponent init]
  -[HMMediaSystemComponent isEqual:]
  -[HMMediaSystemComponent serialize]
  -[HMMediaSystemComponent role]
  -[HMMediaSystemComponent uuid]
  -[HMMediaSystemComponent mutableCopyWithZone:]
  -[HMMediaSystemComponent copyWithZone:]
  -[HMMediaSystemComponent logIdentifier]
  -[HMMediaSystemComponent initWithMediaProfile:role:]
  -[HMMediaSystemComponent encodeWithCoder:]
  -[HMMediaSystemComponent _mergeWithNewObject:]
  -[HMMediaSystemComponent _updateAccessoryReference:]
  -[HMMediaSystemComponent initWithUUID:mediaProfile:role:]


HMMutableMediaSystemComponent : HMMediaSystemComponent
 @property  HMMediaSystemRole *role


HMAccessoryNetworkAccessViolation : HMFObject <NSSecureCoding>
 @property  BOOL currentViolation
 @property  NSDate *lastViolationDate
 @property  NSDate *lastResetDate

  // class methods
  +[HMAccessoryNetworkAccessViolation supportsSecureCoding]

  // instance methods
  -[HMAccessoryNetworkAccessViolation initWithCoder:]
  -[HMAccessoryNetworkAccessViolation .cxx_destruct]
  -[HMAccessoryNetworkAccessViolation isEqual:]
  -[HMAccessoryNetworkAccessViolation encodeWithCoder:]
  -[HMAccessoryNetworkAccessViolation lastViolationDate]
  -[HMAccessoryNetworkAccessViolation lastResetDate]
  -[HMAccessoryNetworkAccessViolation initWithLastViolationDate:lastViolationResetDate:]
  -[HMAccessoryNetworkAccessViolation hasCurrentViolation]


HMUserCloudShareInvitation : NSObject
 @property  NSURL *shareURL
 @property  CKDeviceToDeviceShareInvitationToken *shareToken
 @property  NSString *containerID
 @property  HMHome *home
 @property  HMUser *user
 @property  HMUser *fromUser

  // instance methods
  -[HMUserCloudShareInvitation home]
  -[HMUserCloudShareInvitation shareURL]
  -[HMUserCloudShareInvitation .cxx_destruct]
  -[HMUserCloudShareInvitation user]
  -[HMUserCloudShareInvitation containerID]
  -[HMUserCloudShareInvitation fromUser]
  -[HMUserCloudShareInvitation initWithUser:URL:shareToken:containerID:forHome:fromUser:]
  -[HMUserCloudShareInvitation shareToken]


HMAccessCodeValue : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSString *stringValue
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessCodeValue supportsSecureCoding]
  +[HMAccessCodeValue shortDescription]

  // instance methods
  -[HMAccessCodeValue stringValue]
  -[HMAccessCodeValue privateDescription]
  -[HMAccessCodeValue initWithCoder:]
  -[HMAccessCodeValue .cxx_destruct]
  -[HMAccessCodeValue attributeDescriptions]
  -[HMAccessCodeValue isEqual:]
  -[HMAccessCodeValue initWithStringValue:]
  -[HMAccessCodeValue shortDescription]
  -[HMAccessCodeValue copyWithZone:]
  -[HMAccessCodeValue encodeWithCoder:]


HMSetupAccessoryPayload : NSObject <HMFObject, NSMutableCopying, NSCopying, NSSecureCoding>
 @property  NSURL *setupPayloadURL
 @property  NSString *setupID
 @property  NSNumber *categoryNumber
 @property  NSString *productNumber
 @property  BOOL supportsIP
 @property  BOOL supportsWAC
 @property  BOOL supportsBTLE
 @property  BOOL paired
 @property  NSNumber *threadIdentifier
 @property  HMCHIPAccessorySetupPayload *chipAccessorySetupPayload
 @property  NSString *setupCode
 @property  long long communicationProtocol
 @property  HMAccessoryCategory *category
 @property  BOOL requiresMatterCustomCommissioningFlow
 @property  NSString *accessoryName
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSetupAccessoryPayload supportsSecureCoding]
  +[HMSetupAccessoryPayload shortDescription]

  // instance methods
  -[HMSetupAccessoryPayload isPaired]
  -[HMSetupAccessoryPayload setThreadIdentifier:]
  -[HMSetupAccessoryPayload privateDescription]
  -[HMSetupAccessoryPayload initWithCoder:]
  -[HMSetupAccessoryPayload setPaired:]
  -[HMSetupAccessoryPayload setCategoryNumber:]
  -[HMSetupAccessoryPayload .cxx_destruct]
  -[HMSetupAccessoryPayload attributeDescriptions]
  -[HMSetupAccessoryPayload isEqual:]
  -[HMSetupAccessoryPayload setupID]
  -[HMSetupAccessoryPayload accessoryName]
  -[HMSetupAccessoryPayload threadIdentifier]
  -[HMSetupAccessoryPayload mutableCopyWithZone:]
  -[HMSetupAccessoryPayload shortDescription]
  -[HMSetupAccessoryPayload productNumber]
  -[HMSetupAccessoryPayload category]
  -[HMSetupAccessoryPayload copyWithZone:]
  -[HMSetupAccessoryPayload categoryNumber]
  -[HMSetupAccessoryPayload encodeWithCoder:]
  -[HMSetupAccessoryPayload setupCode]
  -[HMSetupAccessoryPayload supportsIP]
  -[HMSetupAccessoryPayload supportsWAC]
  -[HMSetupAccessoryPayload supportsBTLE]
  -[HMSetupAccessoryPayload initWithSetupPayloadURL:error:]
  -[HMSetupAccessoryPayload initWithHAPSetupPayloadURL:error:]
  -[HMSetupAccessoryPayload initWithSetupCode:communicationProtocol:]
  -[HMSetupAccessoryPayload setSetupPayloadURL:]
  -[HMSetupAccessoryPayload setSupportsIP:]
  -[HMSetupAccessoryPayload setSupportsBTLE:]
  -[HMSetupAccessoryPayload setSupportsWAC:]
  -[HMSetupAccessoryPayload setSetupID:]
  -[HMSetupAccessoryPayload setProductNumber:]
  -[HMSetupAccessoryPayload initWithHAPSetupCode:]
  -[HMSetupAccessoryPayload chipAccessorySetupPayload]
  -[HMSetupAccessoryPayload setChipAccessorySetupPayload:]
  -[HMSetupAccessoryPayload communicationProtocol]
  -[HMSetupAccessoryPayload setupPayloadURL]
  -[HMSetupAccessoryPayload initWithSetupCode:]
  -[HMSetupAccessoryPayload requiresMatterCustomCommissioningFlow]


HMMutableSetupAccessoryPayload : HMSetupAccessoryPayload
 @property  NSURL *setupPayloadURL
 @property  NSString *setupID
 @property  NSNumber *categoryNumber
 @property  NSString *productNumber
 @property  BOOL supportsIP
 @property  BOOL supportsWAC
 @property  BOOL supportsBTLE
 @property  BOOL paired
 @property  NSNumber *threadIdentifier
 @property  HMCHIPAccessorySetupPayload *chipAccessorySetupPayload

  // instance methods
  -[HMMutableSetupAccessoryPayload copyWithZone:]


HMNetworkConfigurationWiFiOptions : HMFObject
 @property  long long credentialType
 @property  BOOL rotate

  // instance methods
  -[HMNetworkConfigurationWiFiOptions credentialType]
  -[HMNetworkConfigurationWiFiOptions rotate]
  -[HMNetworkConfigurationWiFiOptions initWithCredentialType:]
  -[HMNetworkConfigurationWiFiOptions setRotate:]


_HMMediaSession : NSObject <HMFMessageReceiver, HMObjectMerge>
 @property  NSUUID *uuid
 @property  NSUUID *uniqueIdentifier
 @property  NSUUID *messageTargetUUID
 @property  <_HMMediaSessionDelegate> *delegate
 @property  long long playbackState
 @property  long long shuffleState
 @property  long long repeatState
 @property  NSString *mediaUniqueIdentifier
 @property  NSString *routeUID
 @property  _HMContext *context
 @property  HMAudioControl *audioControl
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HMMediaSession playbackState]
  -[_HMMediaSession routeUID]
  -[_HMMediaSession setPlaybackState:]
  -[_HMMediaSession uniqueIdentifier]
  -[_HMMediaSession .cxx_destruct]
  -[_HMMediaSession setRouteUID:]
  -[_HMMediaSession setDelegate:]
  -[_HMMediaSession isEqual:]
  -[_HMMediaSession messageReceiveQueue]
  -[_HMMediaSession uuid]
  -[_HMMediaSession delegate]
  -[_HMMediaSession setContext:]
  -[_HMMediaSession messageTargetUUID]
  -[_HMMediaSession messageDestination]
  -[_HMMediaSession setUuid:]
  -[_HMMediaSession context]
  -[_HMMediaSession _mergeWithNewObject:]
  -[_HMMediaSession _registerNotificationHandlers]
  -[_HMMediaSession updateMediaState:]
  -[_HMMediaSession audioControl]
  -[_HMMediaSession refreshPlaybackStateWithCompletionHandler:]
  -[_HMMediaSession _handleSessionPlaybackUpdated:]
  -[_HMMediaSession _handleSessionRouteUIDUpdated:]
  -[_HMMediaSession shuffleState]
  -[_HMMediaSession repeatState]
  -[_HMMediaSession mediaUniqueIdentifier]
  -[_HMMediaSession _updateMediaState:completion:]
  -[_HMMediaSession _notifyDelegateOfUpdatedPlaybackState:]
  -[_HMMediaSession setShuffleState:]
  -[_HMMediaSession setRepeatState:]
  -[_HMMediaSession setMediaUniqueIdentifier:]
  -[_HMMediaSession _notifyDelegateOfUpdatedMediaState]
  -[_HMMediaSession _notifyDelegateOfUpdatedRouteUID:]
  -[_HMMediaSession initWithUUID:routeUID:playbackState:shuffleState:repeatState:audioControl:mediaUniqueIdentifier:]
  -[_HMMediaSession setMessageTargetUUID:]
  -[_HMMediaSession setPlaybackState:completionHandler:]
  -[_HMMediaSession updatePlaybackState:]


HMMediaSession : NSObject <_HMMediaSessionDelegate, HMObjectMerge, NSSecureCoding>
 @property  _HMMediaSession *mediaSession
 @property  NSUUID *uuid
 @property  HMMediaProfile *mediaProfile
 @property  NSString *routeUID
 @property  NSUUID *uniqueIdentifier
 @property  <HMMediaSessionDelegate> *delegate
 @property  long long playbackState
 @property  long long shuffleState
 @property  long long repeatState
 @property  NSString *mediaUniqueIdentifier
 @property  HMAudioControl *audioControl
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMMediaSession supportsSecureCoding]

  // instance methods
  -[HMMediaSession playbackState]
  -[HMMediaSession routeUID]
  -[HMMediaSession uniqueIdentifier]
  -[HMMediaSession initWithCoder:]
  -[HMMediaSession .cxx_destruct]
  -[HMMediaSession _unconfigure]
  -[HMMediaSession resumeWithCompletionHandler:]
  -[HMMediaSession mediaProfile]
  -[HMMediaSession setDelegate:]
  -[HMMediaSession isEqual:]
  -[HMMediaSession uuid]
  -[HMMediaSession delegate]
  -[HMMediaSession messageTargetUUID]
  -[HMMediaSession setUuid:]
  -[HMMediaSession encodeWithCoder:]
  -[HMMediaSession _mergeWithNewObject:]
  -[HMMediaSession mediaSession]
  -[HMMediaSession configure:messageTargetUUID:]
  -[HMMediaSession initWithUUID:routeUID:playbackState:shuffleState:repeatState:mediaUniqueIdentifier:]
  -[HMMediaSession updateMediaState:]
  -[HMMediaSession setMediaSession:]
  -[HMMediaSession audioControl]
  -[HMMediaSession refreshPlaybackStateWithCompletionHandler:]
  -[HMMediaSession mediaSession:didUpdatePlaybackState:]
  -[HMMediaSession mediaSessionDidUpdate:]
  -[HMMediaSession shuffleState]
  -[HMMediaSession repeatState]
  -[HMMediaSession mediaUniqueIdentifier]
  -[HMMediaSession mediaSession:didUpdateRouteUID:]
  -[HMMediaSession updatePlaybackState:]
  -[HMMediaSession playbackStateDescription]
  -[HMMediaSession pauseWithCompletionHandler:]
  -[HMMediaSession updatePlaybackState:completionHandler:]
  -[HMMediaSession setMediaProfile:]


HMPBMetadataService : PBCodable <NSCopying>
 @property  BOOL hasType
 @property  NSString *type
 @property  BOOL hasDesc
 @property  NSString *desc

  // instance methods
  -[HMPBMetadataService mergeFrom:]
  -[HMPBMetadataService setType:]
  -[HMPBMetadataService .cxx_destruct]
  -[HMPBMetadataService dictionaryRepresentation]
  -[HMPBMetadataService writeTo:]
  -[HMPBMetadataService setDesc:]
  -[HMPBMetadataService hasType]
  -[HMPBMetadataService isEqual:]
  -[HMPBMetadataService copyTo:]
  -[HMPBMetadataService readFrom:]
  -[HMPBMetadataService type]
  -[HMPBMetadataService hasDesc]
  -[HMPBMetadataService copyWithZone:]
  -[HMPBMetadataService desc]


HMUserListViewController : UIViewController <HMUserManagementRemoteHost>
 @property  HMHome *home
 @property  BOOL shouldPresentWhenLoaded
 @property  @? loadHandler
 @property  _UIAsyncInvocation *cancelServiceInvocation
 @property  HMUserListRemoteViewController *remoteViewController
 @property  @? completionHandler

  // instance methods
  -[HMUserListViewController home]
  -[HMUserListViewController remoteViewController]
  -[HMUserListViewController .cxx_destruct]
  -[HMUserListViewController viewDidLoad]
  -[HMUserListViewController shouldAutorotate]
  -[HMUserListViewController setHome:]
  -[HMUserListViewController setCompletionHandler:]
  -[HMUserListViewController setRemoteViewController:]
  -[HMUserListViewController setLoadHandler:]
  -[HMUserListViewController completionHandler]
  -[HMUserListViewController supportedInterfaceOrientations]
  -[HMUserListViewController loadHandler]
  -[HMUserListViewController userManagementDidFinishWithError:]
  -[HMUserListViewController userManagementDidLoad]
  -[HMUserListViewController initWithHome:loadHandler:]
  -[HMUserListViewController presentWhenLoaded]
  -[HMUserListViewController _requestRemoteViewController]
  -[HMUserListViewController setShouldPresentWhenLoaded:]
  -[HMUserListViewController _finishSetupWithError:]
  -[HMUserListViewController _configureAndAddRemoteViewController]
  -[HMUserListViewController setCancelServiceInvocation:]
  -[HMUserListViewController shouldPresentWhenLoaded]
  -[HMUserListViewController _presentAsTopmostViewController]
  -[HMUserListViewController cancelServiceInvocation]


HMHomeManagerConfiguration : NSObject <NSCopying, NSMutableCopying>
 @property  unsigned long cachePolicy
 @property  BOOL shouldConnect
 @property  BOOL canUseCache
 @property  NSURL *cacheURL
 @property  HMFLocationAuthorization *locationAuthorization
 @property  unsigned long options
 @property  BOOL discretionary
 @property  BOOL adaptive
 @property  NSOperationQueue *delegateQueue

  // class methods
  +[HMHomeManagerConfiguration defaultPrivateConfiguration]
  +[HMHomeManagerConfiguration defaultConfiguration]

  // instance methods
  -[HMHomeManagerConfiguration cacheURL]
  -[HMHomeManagerConfiguration setCachePolicy:]
  -[HMHomeManagerConfiguration delegateQueue]
  -[HMHomeManagerConfiguration isAdaptive]
  -[HMHomeManagerConfiguration cachePolicy]
  -[HMHomeManagerConfiguration canUseCache]
  -[HMHomeManagerConfiguration options]
  -[HMHomeManagerConfiguration .cxx_destruct]
  -[HMHomeManagerConfiguration initWithOptions:cachePolicy:]
  -[HMHomeManagerConfiguration init]
  -[HMHomeManagerConfiguration isDiscretionary]
  -[HMHomeManagerConfiguration locationAuthorization]
  -[HMHomeManagerConfiguration shouldConnect]
  -[HMHomeManagerConfiguration mutableCopyWithZone:]
  -[HMHomeManagerConfiguration copyWithZone:]
  -[HMHomeManagerConfiguration setShouldConnect:]


HMMutableHomeManagerConfiguration : HMHomeManagerConfiguration
 @property  HMFLocationAuthorization *locationAuthorization
 @property  unsigned long cachePolicy
 @property  unsigned long options
 @property  BOOL discretionary
 @property  BOOL adaptive
 @property  NSOperationQueue *delegateQueue

  // instance methods
  -[HMMutableHomeManagerConfiguration setCachePolicy:]
  -[HMMutableHomeManagerConfiguration delegateQueue]
  -[HMMutableHomeManagerConfiguration isAdaptive]
  -[HMMutableHomeManagerConfiguration cachePolicy]
  -[HMMutableHomeManagerConfiguration setDelegateQueue:]
  -[HMMutableHomeManagerConfiguration setLocationAuthorization:]
  -[HMMutableHomeManagerConfiguration options]
  -[HMMutableHomeManagerConfiguration setOptions:]
  -[HMMutableHomeManagerConfiguration .cxx_destruct]
  -[HMMutableHomeManagerConfiguration setDiscretionary:]
  -[HMMutableHomeManagerConfiguration initWithOptions:cachePolicy:]
  -[HMMutableHomeManagerConfiguration setAdaptive:]
  -[HMMutableHomeManagerConfiguration isDiscretionary]
  -[HMMutableHomeManagerConfiguration locationAuthorization]
  -[HMMutableHomeManagerConfiguration shouldConnect]
  -[HMMutableHomeManagerConfiguration mutableCopyWithZone:]
  -[HMMutableHomeManagerConfiguration copyWithZone:]


HMThreadNetworkCredentials : NSObject
 @property  NSString *networkName
 @property  NSData *extendedPANID
 @property  NSString *commissionerPassphrase
 @property  NSData *PSKc

  // instance methods
  -[HMThreadNetworkCredentials PSKc]
  -[HMThreadNetworkCredentials .cxx_destruct]
  -[HMThreadNetworkCredentials networkName]
  -[HMThreadNetworkCredentials extendedPANID]
  -[HMThreadNetworkCredentials initWithNetworkName:extendedPANID:commissionerPassphrase:]
  -[HMThreadNetworkCredentials initWithNetworkName:extendedPANID:PSKc:]
  -[HMThreadNetworkCredentials commissionerPassphrase]


HMThreadExternalCommissioner : NSObject <BorderAgentListener, HMFCancellable, HMFTimerDelegate, HMFLogging, HMThreadExternalCommissioner>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  double finderTimeoutInterval
 @property  HMThreadNetworkCredentials *credentials
 @property  NSUUID *credentialsUUID
 @property  HMHome *credentialsHome
 @property  BorderAgentFinder *borderAgentFinder
 @property  BOOL active
 @property  NSError *cancelError
 @property  @? finderCompletion
 @property  HMFTimer *finderTimer
 @property  BorderAgentConnector *borderAgentConnector
 @property  BOOL commissioning
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMThreadExternalCommissioner logCategory]

  // instance methods
  -[HMThreadExternalCommissioner timerDidFire:]
  -[HMThreadExternalCommissioner isActive]
  -[HMThreadExternalCommissioner .cxx_destruct]
  -[HMThreadExternalCommissioner _cancelWithError:]
  -[HMThreadExternalCommissioner initCommon]
  -[HMThreadExternalCommissioner cancel]
  -[HMThreadExternalCommissioner workQueue]
  -[HMThreadExternalCommissioner setActive:]
  -[HMThreadExternalCommissioner credentials]
  -[HMThreadExternalCommissioner logIdentifier]
  -[HMThreadExternalCommissioner initWithHome:]
  -[HMThreadExternalCommissioner cancelError]
  -[HMThreadExternalCommissioner initWithFinderTimeoutInterval:borderAgentFinder:]
  -[HMThreadExternalCommissioner borderAgentFinder]
  -[HMThreadExternalCommissioner _ensureSetupCodeFormat:]
  -[HMThreadExternalCommissioner setCancelError:]
  -[HMThreadExternalCommissioner finderTimeoutInterval]
  -[HMThreadExternalCommissioner _computeJoinerPassphraseFromSetupCode:]
  -[HMThreadExternalCommissioner _commissionAccessoryWithService:eui64:commissionerPassphrase:PSKc:joinerPassphrase:completion:]
  -[HMThreadExternalCommissioner _findBorderRouterForCredentials:completion:]
  -[HMThreadExternalCommissioner _resolveCredentialsWithCompletion:]
  -[HMThreadExternalCommissioner finderCompletion]
  -[HMThreadExternalCommissioner setFinderCompletion:]
  -[HMThreadExternalCommissioner borderAgentConnector]
  -[HMThreadExternalCommissioner isCommissioning]
  -[HMThreadExternalCommissioner credentialsHome]
  -[HMThreadExternalCommissioner setCredentials:]
  -[HMThreadExternalCommissioner finderTimer]
  -[HMThreadExternalCommissioner setFinderTimer:]
  -[HMThreadExternalCommissioner setBorderAgentConnector:]
  -[HMThreadExternalCommissioner setCommissioning:]
  -[HMThreadExternalCommissioner _txtRecordDataMatches:]
  -[HMThreadExternalCommissioner credentialsUUID]
  -[HMThreadExternalCommissioner agentChanged]
  -[HMThreadExternalCommissioner commissionAccessoryWithEui64:setupCode:completion:]
  -[HMThreadExternalCommissioner initWithNetworkCredentials:]


HMLightProfile : HMAccessoryProfile <HMFLogging>
 @property  NSString *logIdentifier
 @property  _HMLightProfile *lightProfile
 @property  <HMLightProfileDelegate> *delegate
 @property  HMLightProfileSettings *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMLightProfile logCategory]

  // instance methods
  -[HMLightProfile .cxx_destruct]
  -[HMLightProfile setDelegate:]
  -[HMLightProfile delegate]
  -[HMLightProfile fetchSettingsWithCompletion:]
  -[HMLightProfile logIdentifier]
  -[HMLightProfile settings]
  -[HMLightProfile _mergeWithNewObject:]
  -[HMLightProfile lightProfile]
  -[HMLightProfile updateSettings:withReason:]
  -[HMLightProfile initWithLightProfile:]
  -[HMLightProfile setNaturalLightingEnabled:shouldRetryOnFailure:completion:]
  -[HMLightProfile setNaturalLightingEnabled:completionHandler:]
  -[HMLightProfile fetchNaturalLightColorTemperatureForBrightness:completion:]


HMDeviceSetupRequestMessage : TRRequestMessage
 @property  NSData *payload
 @property  long long qualityOfService

  // class methods
  +[HMDeviceSetupRequestMessage supportsSecureCoding]

  // instance methods
  -[HMDeviceSetupRequestMessage initWithCoder:]
  -[HMDeviceSetupRequestMessage payload]
  -[HMDeviceSetupRequestMessage qualityOfService]
  -[HMDeviceSetupRequestMessage .cxx_destruct]
  -[HMDeviceSetupRequestMessage setQualityOfService:]
  -[HMDeviceSetupRequestMessage init]
  -[HMDeviceSetupRequestMessage initWithPayload:]
  -[HMDeviceSetupRequestMessage encodeWithCoder:]


HMSiriEndpointProfileAssistant : NSObject <HMFLogging, HMFObject, HMObjectMerge, NSSecureCoding>
 @property  NSString *name
 @property  long long active
 @property  NSNumber *identifier
 @property  BOOL siriAssistant
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[HMSiriEndpointProfileAssistant supportsSecureCoding]
  +[HMSiriEndpointProfileAssistant logCategory]
  +[HMSiriEndpointProfileAssistant shortDescription]
  +[HMSiriEndpointProfileAssistant uniqueIdentifierNamespace]

  // instance methods
  -[HMSiriEndpointProfileAssistant name]
  -[HMSiriEndpointProfileAssistant privateDescription]
  -[HMSiriEndpointProfileAssistant uniqueIdentifier]
  -[HMSiriEndpointProfileAssistant initWithCoder:]
  -[HMSiriEndpointProfileAssistant active]
  -[HMSiriEndpointProfileAssistant .cxx_destruct]
  -[HMSiriEndpointProfileAssistant setName:]
  -[HMSiriEndpointProfileAssistant identifier]
  -[HMSiriEndpointProfileAssistant setActive:]
  -[HMSiriEndpointProfileAssistant shortDescription]
  -[HMSiriEndpointProfileAssistant encodeWithCoder:]
  -[HMSiriEndpointProfileAssistant _mergeWithNewObject:]
  -[HMSiriEndpointProfileAssistant initWithIdentifier:name:active:]
  -[HMSiriEndpointProfileAssistant isSiriAssistant]


HMAccessCodeUserInformation : NSObject <HMFObject>
 @property  NSString *simpleLabel
 @property  HMUser *user
 @property  HMRemovedUserInfo *removedUserInfo
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessCodeUserInformation shortDescription]
  +[HMAccessCodeUserInformation userInformationWithValue:home:]

  // instance methods
  -[HMAccessCodeUserInformation initWithUser:]
  -[HMAccessCodeUserInformation privateDescription]
  -[HMAccessCodeUserInformation .cxx_destruct]
  -[HMAccessCodeUserInformation user]
  -[HMAccessCodeUserInformation attributeDescriptions]
  -[HMAccessCodeUserInformation shortDescription]
  -[HMAccessCodeUserInformation createAccessCodeUserInformationValue]
  -[HMAccessCodeUserInformation simpleLabel]
  -[HMAccessCodeUserInformation removedUserInfo]
  -[HMAccessCodeUserInformation initWithSimpleLabel:user:removedUserInfo:]
  -[HMAccessCodeUserInformation initWithSimpleLabel:]
  -[HMAccessCodeUserInformation initWithRemovedUserInfo:]


HMPBEncodeOption : PBCodable <NSCopying>
 @property  BOOL hasIsXPC
 @property  BOOL isXPC
 @property  BOOL hasIsSPI
 @property  BOOL isSPI

  // instance methods
  -[HMPBEncodeOption mergeFrom:]
  -[HMPBEncodeOption isXPC]
  -[HMPBEncodeOption isSPI]
  -[HMPBEncodeOption dictionaryRepresentation]
  -[HMPBEncodeOption writeTo:]
  -[HMPBEncodeOption isEqual:]
  -[HMPBEncodeOption copyTo:]
  -[HMPBEncodeOption readFrom:]
  -[HMPBEncodeOption hasIsXPC]
  -[HMPBEncodeOption hasIsSPI]
  -[HMPBEncodeOption copyWithZone:]
  -[HMPBEncodeOption setIsXPC:]
  -[HMPBEncodeOption setIsSPI:]
  -[HMPBEncodeOption setHasIsXPC:]
  -[HMPBEncodeOption setHasIsSPI:]


HMAccessorySetupManager : NSObject <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMAccessorySetupManager UUID]
  +[HMAccessorySetupManager logCategory]

  // instance methods
  -[HMAccessorySetupManager .cxx_destruct]
  -[HMAccessorySetupManager init]
  -[HMAccessorySetupManager initWithContext:]
  -[HMAccessorySetupManager performAccessorySetupUsingRequest:completionHandler:]
  -[HMAccessorySetupManager resumeAccessorySetupWithUserInfo:completionHandler:]
  -[HMAccessorySetupManager finishAccessorySetupForAddAccessoryRequest:withSetupCompletedInfo:completionHandler:]
  -[HMAccessorySetupManager failAccessorySetupForAddAccessoryRequest:withError:completionHandler:]
  -[HMAccessorySetupManager finishAccessorySetupForAddAccessoryRequest:completionHandler:]
  -[HMAccessorySetupManager performMatterEcosystemAccessorySetupUsingRequest:topology:completionHandler:]
  -[HMAccessorySetupManager finishAccessorySetupWithCompletionHandler:]
  -[HMAccessorySetupManager finishAccessorySetupWithSetupCompletedInfo:completionHandler:]
  -[HMAccessorySetupManager failAccessorySetupWithError:completionHandler:]
  -[HMAccessorySetupManager addAndSetUpAccessoriesForTopology:completionHandler:]
  -[HMAccessorySetupManager fetchPendingSetupAccessoryDescriptionWithCompletionHandler:]


HMUserActionPredictionDuetPredictionValue : PBCodable <NSCopying>
 @property  BOOL hasHomeIdentifier
 @property  NSString *homeIdentifier
 @property  BOOL hasTargetIdentifier
 @property  NSString *targetIdentifier
 @property  BOOL hasTargetAccessoryServiceIdentifier
 @property  NSString *targetAccessoryServiceIdentifier
 @property  BOOL hasScore
 @property  double score
 @property  BOOL hasPredictionType
 @property  int predictionType

  // instance methods
  -[HMUserActionPredictionDuetPredictionValue targetIdentifier]
  -[HMUserActionPredictionDuetPredictionValue hasScore]
  -[HMUserActionPredictionDuetPredictionValue setScore:]
  -[HMUserActionPredictionDuetPredictionValue setHasScore:]
  -[HMUserActionPredictionDuetPredictionValue mergeFrom:]
  -[HMUserActionPredictionDuetPredictionValue homeIdentifier]
  -[HMUserActionPredictionDuetPredictionValue .cxx_destruct]
  -[HMUserActionPredictionDuetPredictionValue dictionaryRepresentation]
  -[HMUserActionPredictionDuetPredictionValue setHomeIdentifier:]
  -[HMUserActionPredictionDuetPredictionValue writeTo:]
  -[HMUserActionPredictionDuetPredictionValue isEqual:]
  -[HMUserActionPredictionDuetPredictionValue copyTo:]
  -[HMUserActionPredictionDuetPredictionValue readFrom:]
  -[HMUserActionPredictionDuetPredictionValue score]
  -[HMUserActionPredictionDuetPredictionValue setTargetIdentifier:]
  -[HMUserActionPredictionDuetPredictionValue copyWithZone:]
  -[HMUserActionPredictionDuetPredictionValue predictionType]
  -[HMUserActionPredictionDuetPredictionValue hasPredictionType]
  -[HMUserActionPredictionDuetPredictionValue targetAccessoryServiceIdentifier]
  -[HMUserActionPredictionDuetPredictionValue setTargetAccessoryServiceIdentifier:]
  -[HMUserActionPredictionDuetPredictionValue setPredictionType:]
  -[HMUserActionPredictionDuetPredictionValue hasHomeIdentifier]
  -[HMUserActionPredictionDuetPredictionValue hasTargetIdentifier]
  -[HMUserActionPredictionDuetPredictionValue hasTargetAccessoryServiceIdentifier]
  -[HMUserActionPredictionDuetPredictionValue setHasPredictionType:]
  -[HMUserActionPredictionDuetPredictionValue predictionTypeAsString:]
  -[HMUserActionPredictionDuetPredictionValue StringAsPredictionType:]


HMMatterRoom : NSObject <HMFObject, NSCopying, NSSecureCoding>
 @property  NSUUID *uuid
 @property  NSString *name
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMMatterRoom supportsSecureCoding]
  +[HMMatterRoom shortDescription]

  // instance methods
  -[HMMatterRoom name]
  -[HMMatterRoom privateDescription]
  -[HMMatterRoom initWithCoder:]
  -[HMMatterRoom .cxx_destruct]
  -[HMMatterRoom attributeDescriptions]
  -[HMMatterRoom isEqual:]
  -[HMMatterRoom uuid]
  -[HMMatterRoom shortDescription]
  -[HMMatterRoom copyWithZone:]
  -[HMMatterRoom encodeWithCoder:]
  -[HMMatterRoom initWithUUID:name:]


HMIdentifierSaltStore : NSObject
 @property  NSData *identifierSalt
 @property  NSData *assistantIdentifierSalt

  // instance methods
  -[HMIdentifierSaltStore .cxx_destruct]
  -[HMIdentifierSaltStore init]
  -[HMIdentifierSaltStore identifierSalt]
  -[HMIdentifierSaltStore setIdentifierSalt:]
  -[HMIdentifierSaltStore assistantIdentifierSalt]
  -[HMIdentifierSaltStore setAssistantIdentifierSalt:]


HMPhotosPersonManagerSettings : NSObject <HMFObject, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  BOOL importingFromPhotoLibraryEnabled
 @property  BOOL sharingFaceClassificationsEnabled
 @property  BOOL enabled
 @property  BOOL sharingFaceClassificationsAllowed
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMPhotosPersonManagerSettings supportsSecureCoding]
  +[HMPhotosPersonManagerSettings shortDescription]

  // instance methods
  -[HMPhotosPersonManagerSettings privateDescription]
  -[HMPhotosPersonManagerSettings initWithCoder:]
  -[HMPhotosPersonManagerSettings attributeDescriptions]
  -[HMPhotosPersonManagerSettings isEqual:]
  -[HMPhotosPersonManagerSettings isEnabled]
  -[HMPhotosPersonManagerSettings mutableCopyWithZone:]
  -[HMPhotosPersonManagerSettings shortDescription]
  -[HMPhotosPersonManagerSettings copyWithZone:]
  -[HMPhotosPersonManagerSettings encodeWithCoder:]
  -[HMPhotosPersonManagerSettings isImportingFromPhotoLibraryEnabled]
  -[HMPhotosPersonManagerSettings isSharingFaceClassificationsEnabled]
  -[HMPhotosPersonManagerSettings setImportingFromPhotoLibraryEnabled:]
  -[HMPhotosPersonManagerSettings setSharingFaceClassificationsEnabled:]
  -[HMPhotosPersonManagerSettings isSharingFaceClassificationsAllowed]


HMMutablePhotosPersonManagerSettings : HMPhotosPersonManagerSettings
 @property  BOOL importingFromPhotoLibraryEnabled
 @property  BOOL sharingFaceClassificationsEnabled

  // instance methods
  -[HMMutablePhotosPersonManagerSettings copyWithZone:]
  -[HMMutablePhotosPersonManagerSettings setEnabled:]
  -[HMMutablePhotosPersonManagerSettings setSharingFaceClassificationsAllowed:]


HMDemoCameraClip : HMCameraClip
 @property  NSURL *clipURL

  // instance methods
  -[HMDemoCameraClip .cxx_destruct]
  -[HMDemoCameraClip clipURL]
  -[HMDemoCameraClip initWithClipURL:startDate:duration:significantEvents:]
  -[HMDemoCameraClip initWithCameraProfile:clipURL:startDate:duration:significantEvents:]


_HMCameraStreamControl : _HMCameraControl <HMFLogging>
 @property  unsigned long streamState
 @property  NSString *streamSessionID
 @property  <_HMCameraStreamControlDelegate> *delegate
 @property  HMCameraStream *cameraStream
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HMCameraStreamControl logCategory]

  // instance methods
  -[_HMCameraStreamControl .cxx_destruct]
  -[_HMCameraStreamControl setDelegate:]
  -[_HMCameraStreamControl delegate]
  -[_HMCameraStreamControl dealloc]
  -[_HMCameraStreamControl setStreamState:]
  -[_HMCameraStreamControl streamState]
  -[_HMCameraStreamControl initWithCameraProfile:profileUniqueIdentifier:]
  -[_HMCameraStreamControl cameraStream]
  -[_HMCameraStreamControl startStreamWithPreferences:]
  -[_HMCameraStreamControl stopStream]
  -[_HMCameraStreamControl _registerNotificationHandlers]
  -[_HMCameraStreamControl setCameraStream:]
  -[_HMCameraStreamControl setStreamSessionID:]
  -[_HMCameraStreamControl _callVideoStoppedDelegate:]
  -[_HMCameraStreamControl _handleVideoStreamStopped:]
  -[_HMCameraStreamControl _resetStateWithError:]
  -[_HMCameraStreamControl streamSessionID]
  -[_HMCameraStreamControl _handleStreamStartedWithResponse:sessionID:error:]
  -[_HMCameraStreamControl _callVideoStartedDelegate]
  -[_HMCameraStreamControl _stopStream]
  -[_HMCameraStreamControl _handleVideoStopResponse:error:sessionID:]


HMCache : HMFObject <HMCache>
 @property  NSString *cacheName
 @property  NSDictionary *cachedObjects
 @property  <HMCacheDelegate> *delegate
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMCache shortDescription]

  // instance methods
  -[HMCache numberForKey:]
  -[HMCache name]
  -[HMCache dataForKey:]
  -[HMCache cacheName]
  -[HMCache .cxx_destruct]
  -[HMCache removeObjectForKey:]
  -[HMCache _setData:forKey:]
  -[HMCache setDelegate:]
  -[HMCache stringForKey:]
  -[HMCache setString:forKey:]
  -[HMCache setNumber:forKey:]
  -[HMCache setData:forKey:]
  -[HMCache delegate]
  -[HMCache cachedObjects]
  -[HMCache initWithCachedObjects:name:]


(HMConnectivity)
	// class methods
	+[(HMConnectivity) hmErrorWithCode:]
	+[(HMConnectivity) hm_errorWithNWError:]
	+[(HMConnectivity) hmErrorWithCode:description:reason:suggestion:underlyingError:]
	+[(HMConnectivity) hmErrorWithCode:userInfo:]
	+[(HMConnectivity) hmInternalErrorWithCode:underlyingError:]
	+[(HMConnectivity) hmPrivateErrorWithCode:description:underlyingError:]
	+[(HMConnectivity) hmErrorWithCode:description:reason:suggestion:]
	+[(HMConnectivity) hmInternalErrorWithCode:]
	+[(HMConnectivity) hmPrivateErrorWithCode:]
	+[(HMConnectivity) hmInternalErrorWithCode:userInfo:]
	+[(HMConnectivity) hmPrivateErrorWithCode:underlyingError:]

	// instance methods
	-[(HMConnectivity) isHMError]
	-[(HMConnectivity) hmPublicError]

INControlHomeIntent(Logging)
	// instance methods
	-[INControlHomeIntent(Logging) shortDescriptionWithOutcome:]

NSCoder(ObjectCache)
	// instance methods
	-[NSCoder(ObjectCache) hm_decodeAndCacheStringForKey:]
	-[NSCoder(ObjectCache) hm_decodeAndCacheUUIDFromStringForKey:]
	-[NSCoder(ObjectCache) hm_decodeArrayOfConditionalObjects:forKey:]
	-[NSCoder(ObjectCache) hm_decodeAndCacheUUIDForKey:]
	-[NSCoder(ObjectCache) hm_decodeHMAccessoryCategoryAndCacheForKey:]
	-[NSCoder(ObjectCache) hm_decodeAndCacheTruncatedNameStringForKey:]
	-[NSCoder(ObjectCache) hm_encodeArrayOfConditionalObjects:forKey:]
	-[NSCoder(ObjectCache) hm_encodeSetOfConditionalObjects:forKey:]
	-[NSCoder(ObjectCache) hm_decodeSetOfConditionalObjects:forKey:]

CLLocationManager(HomeLocation)
	// class methods
	+[CLLocationManager(HomeLocation) hm_isLocationAllowedForAuthorizationStatus:]
	+[CLLocationManager(HomeLocation) hm_hmdLocationAuthorizationFromCLAuthorizationStatus:]
	+[CLLocationManager(HomeLocation) hm_hmdRegionStateFromCLRegionState:]

CLRegion(HomeLocation)
	// instance methods
	-[CLRegion(HomeLocation) hm_description]

(HomeLocation)
	// instance methods
	-[(HomeLocation) hm_regionFromDataForKey:]
	-[(HomeLocation) hm_locationFromDataForKey:]

(TrimDots)
	// instance methods
	-[(TrimDots) hm_truncatedNameString]
	-[(TrimDots) hm_generateSHA1]
	-[(TrimDots) stringByTransformingFirstWordUsingBlock:]
	-[(TrimDots) stringByCapitalizingFirstWord]
	-[(TrimDots) hm_containsAnyTextCheckingTypeInTypes:]

NSXPCInterface(HMUserManagementRemoteProtocols)
	// class methods
	+[NSXPCInterface(HMUserManagementRemoteProtocols) hm_userManagementRemoteServiceInterface]
	+[NSXPCInterface(HMUserManagementRemoteProtocols) hm_userManagementRemoteHostInterface]

(HomeKit)
	// instance methods
	-[(HomeKit) hm_stringInHexFormat]
	-[(HomeKit) hm_generateSHA1]

(HomeKit)
	// class methods
	+[(HomeKit) hm_dayOfTheWeek]
	+[(HomeKit) hm_iso8601dateFromString:]

NSMapTable(HomeKit)
	// instance methods
	-[NSMapTable(HomeKit) hm_allKeys]

NSUUID(HomeKitClient)
	// class methods
	+[NSUUID(HomeKitClient) hm_deriveUUIDFromBaseUUID:withSalts:]
	+[NSUUID(HomeKitClient) hm_deriveUUIDFromBaseUUID:]
	+[NSUUID(HomeKitClient) hm_deriveUUIDFromBaseUUID:identifierSalt:withSalts:]
	+[NSUUID(HomeKitClient) hm_deriveUUIDForAssistantFromBaseUUID:withSalts:]
	+[NSUUID(HomeKitClient) hm_setIdentifierSalt:]
	+[NSUUID(HomeKitClient) hm_setAssistantIdentifierSalt:]
	+[NSUUID(HomeKitClient) hm_uuid:identifierSalt:withSalts:]
	+[NSUUID(HomeKitClient) hm_deriveUUIDFromBaseUUID:identifierSalt:]
	+[NSUUID(HomeKitClient) hm_deriveUUIDForAssistantFromBaseUUID:]

	// instance methods
	-[NSUUID(HomeKitClient) hm_convertToData]

01 00 0700 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 0900 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAnisetteData 
01 00 0900 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKDevice 
01 00 1c00 /System/Library/PrivateFrameworks/AirPlayRoutePrediction.framework/AirPlayRoutePrediction: ARPHomeControlSuggester 
01 00 0a00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReader 
01 00 0a00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderTrackOutput 
01 00 0a00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriter 
01 00 0a00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInput 
01 00 0a00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 1400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAContext 
01 00 1400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0b00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDeviceToDeviceShareInvitationToken 
01 00 0b00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchShareParticipantsOperation 
01 00 0b00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 0b00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKShare 
01 00 0b00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKUserIdentityLookupInfo 
01 00 0c00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLBeaconRegion 
01 00 0c00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLCircularRegion 
01 00 0c00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0c00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0c00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLRegion 
01 00 0500 /System/Library/PrivateFrameworks/HomeKitEventRouter.framework/HomeKitEventRouter: HMEEvent 
01 00 0500 /System/Library/PrivateFrameworks/HomeKitEventRouter.framework/HomeKitEventRouter: HMEEventInfo 
01 00 0500 /System/Library/PrivateFrameworks/HomeKitEventRouter.framework/HomeKitEventRouter: HMEEventMetadata 
01 00 0500 /System/Library/PrivateFrameworks/HomeKitEventRouter.framework/HomeKitEventRouter: HMELastEventStore 
01 00 0500 /System/Library/PrivateFrameworks/HomeKitEventRouter.framework/HomeKitEventRouter: HMEPersistentConnectionClient 
01 00 0500 /System/Library/PrivateFrameworks/HomeKitEventRouter.framework/HomeKitEventRouter: HMEProtoEventInfo 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFActivity 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFAssertion 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFAttributeDescription 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFDigest 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFKey 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFLocationAuthorization 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMACAddress 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessage 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessageDestination 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessageDispatcher 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessageTransport 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMutableMessage 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFOSTransaction 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFObject 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFObjectCacheNSString 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFObjectCacheNSUUID 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFOperation 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPairingIdentity 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPairingKey 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPreferences 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPrivateObjectFormatter 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFProcessInfo 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFProductInfo 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFSoftwareVersion 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFSystemInfo 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFSystemPreference 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFTimer 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFUnfairLock 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFVersion 
01 00 1000 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFWiFiNetworkInfo 
01 00 0400 /System/Library/Frameworks/Intents.framework/Intents: INControlHomeIntent 
01 00 1100 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAFuture 
01 00 1100 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAScheduler 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDataDetector 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionItem 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNetService 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1300 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1500 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHACommandCompleted 
01 00 1500 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHACurrentHome 
01 00 0100 /System/Library/PrivateFrameworks/TouchRemote.framework/TouchRemote: TRRequestMessage 
01 00 0100 /System/Library/PrivateFrameworks/TouchRemote.framework/TouchRemote: TRResponseMessage 
01 00 0300 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0300 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0300 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0300 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0300 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
