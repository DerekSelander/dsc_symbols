|| __DATA.__common __scnDebuggingInfo
|| __DATA.__common __scnPerformanceData
|| __DATA.__data _SCNSceneKitVersionNumber
|| __DATA.__objc_data _OBJC_CLASS_$_SCNAccelerationConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNActionGroup
|| __DATA.__objc_data _OBJC_CLASS_$_SCNActionReference
|| __DATA.__objc_data _OBJC_CLASS_$_SCNAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_SCNAnimationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SCNAnimationPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_SCNAnimationReference
|| __DATA.__objc_data _OBJC_CLASS_$_SCNAssetCatalog
|| __DATA.__objc_data _OBJC_CLASS_$_SCNAudioPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_SCNAudioSource
|| __DATA.__objc_data _OBJC_CLASS_$_SCNAuthoringEnvironment
|| __DATA.__objc_data _OBJC_CLASS_$_SCNAuthoringEnvironment2
|| __DATA.__objc_data _OBJC_CLASS_$_SCNAvoidOccluderConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNBillboardConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNCameraControlEventHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SCNCapsule
|| __DATA.__objc_data _OBJC_CLASS_$_SCNCone
|| __DATA.__objc_data _OBJC_CLASS_$_SCNConstantScaleConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNCylinder
|| __DATA.__objc_data _OBJC_CLASS_$_SCNDistanceConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNEventHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SCNExportOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SCNFloor
|| __DATA.__objc_data _OBJC_CLASS_$_SCNGeometryTessellator
|| __DATA.__objc_data _OBJC_CLASS_$_SCNHitTestResult
|| __DATA.__objc_data _OBJC_CLASS_$_SCNIKConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNImageSource
|| __DATA.__objc_data _OBJC_CLASS_$_SCNKeyedArchiver
|| __DATA.__objc_data _OBJC_CLASS_$_SCNKeyedUnarchiver
|| __DATA.__objc_data _OBJC_CLASS_$_SCNLevelOfDetail
|| __DATA.__objc_data _OBJC_CLASS_$_SCNLookAtConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNManipulableItem
|| __DATA.__objc_data _OBJC_CLASS_$_SCNManipulator
|| __DATA.__objc_data _OBJC_CLASS_$_SCNMetalLayer
|| __DATA.__objc_data _OBJC_CLASS_$_SCNMorpher
|| __DATA.__objc_data _OBJC_CLASS_$_SCNNodeReference
|| __DATA.__objc_data _OBJC_CLASS_$_SCNParticlePropertyController
|| __DATA.__objc_data _OBJC_CLASS_$_SCNParticleSystem
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPass
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPassContext
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPhysicsBallSocketJoint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPhysicsBehavior
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPhysicsBody
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPhysicsCharacter
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPhysicsConeTwistJoint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPhysicsContact
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPhysicsField
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPhysicsHingeJoint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPhysicsShape
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPhysicsSliderJoint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPhysicsVehicle
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPhysicsVehicleWheel
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPhysicsWorld
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPlane
|| __DATA.__objc_data _OBJC_CLASS_$_SCNProgram
|| __DATA.__objc_data _OBJC_CLASS_$_SCNPyramid
|| __DATA.__objc_data _OBJC_CLASS_$_SCNReferenceNode
|| __DATA.__objc_data _OBJC_CLASS_$_SCNRendererEvents
|| __DATA.__objc_data _OBJC_CLASS_$_SCNRendererViewPoint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNReplicatorConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNSceneDatabase
|| __DATA.__objc_data _OBJC_CLASS_$_SCNSceneSource
|| __DATA.__objc_data _OBJC_CLASS_$_SCNShape
|| __DATA.__objc_data _OBJC_CLASS_$_SCNSkinner
|| __DATA.__objc_data _OBJC_CLASS_$_SCNSliderConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNStatisticsProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SCNTechnique
|| __DATA.__objc_data _OBJC_CLASS_$_SCNText
|| __DATA.__objc_data _OBJC_CLASS_$_SCNTimingFunction
|| __DATA.__objc_data _OBJC_CLASS_$_SCNTorus
|| __DATA.__objc_data _OBJC_CLASS_$_SCNTransformConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_SCNTube
|| __DATA.__objc_data _OBJC_CLASS_$__SCNShadableCompilationIssue
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNAccelerationConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNActionGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNActionReference
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNAnimationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNAnimationPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNAnimationReference
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNAssetCatalog
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNAudioPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNAudioSource
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNAuthoringEnvironment
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNAuthoringEnvironment2
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNAvoidOccluderConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNBillboardConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNCameraControlEventHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNCapsule
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNCone
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNConstantScaleConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNCylinder
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNDistanceConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNEventHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNExportOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNFloor
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNGeometryTessellator
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNHitTestResult
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNIKConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNImageSource
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNKeyedArchiver
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNKeyedUnarchiver
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNLevelOfDetail
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNLookAtConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNManipulableItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNManipulator
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNMetalLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNMorpher
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNNodeReference
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNParticlePropertyController
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNParticleSystem
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPass
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPassContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPhysicsBallSocketJoint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPhysicsBehavior
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPhysicsBody
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPhysicsCharacter
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPhysicsConeTwistJoint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPhysicsContact
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPhysicsField
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPhysicsHingeJoint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPhysicsShape
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPhysicsSliderJoint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPhysicsVehicle
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPhysicsVehicleWheel
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPhysicsWorld
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPlane
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNProgram
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNPyramid
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNReferenceNode
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNRendererEvents
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNRendererViewPoint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNReplicatorConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNSceneDatabase
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNSceneSource
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNShape
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNSkinner
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNSliderConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNStatisticsProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNTechnique
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNText
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNTimingFunction
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNTorus
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNTransformConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_SCNTube
|| __DATA.__objc_data _OBJC_METACLASS_$__SCNShadableCompilationIssue
|| __DATA_CONST.__const _SCNAnimationCommitOnCompletion
|| __DATA_CONST.__const _SCNBindingValueTransformerKey
|| __DATA_CONST.__const _SCNCaptureDeviceOutputConsumerOptionContainsAlpha
|| __DATA_CONST.__const _SCNConsistencyElementIDErrorKey
|| __DATA_CONST.__const _SCNConsistencyElementTypeErrorKey
|| __DATA_CONST.__const _SCNConsistencyLineNumberErrorKey
|| __DATA_CONST.__const _SCNDataProviderAnimationTime
|| __DATA_CONST.__const _SCNDataProviderCAWaitTime
|| __DATA_CONST.__const _SCNDataProviderCPUIdleTime
|| __DATA_CONST.__const _SCNDataProviderClientUpdateTime
|| __DATA_CONST.__const _SCNDataProviderConstraintsTime
|| __DATA_CONST.__const _SCNDataProviderFPS
|| __DATA_CONST.__const _SCNDataProviderFrameTime
|| __DATA_CONST.__const _SCNDataProviderGPUDeviceUtil
|| __DATA_CONST.__const _SCNDataProviderGPURendererUtil
|| __DATA_CONST.__const _SCNDataProviderGPUTilerUtil
|| __DATA_CONST.__const _SCNDataProviderParticleTime
|| __DATA_CONST.__const _SCNDataProviderPhysicsTime
|| __DATA_CONST.__const _SCNDataProviderPrimitivesProcessed
|| __DATA_CONST.__const _SCNDataProviderRenderTime
|| __DATA_CONST.__const _SCNDetailedErrorsKey
|| __DATA_CONST.__const _SCNErrorDomain
|| __DATA_CONST.__const _SCNExportSceneIdentifier
|| __DATA_CONST.__const _SCNFreeViewCameraName
|| __DATA_CONST.__const _SCNGeometrySourceSemanticBoneIndices
|| __DATA_CONST.__const _SCNGeometrySourceSemanticBoneWeights
|| __DATA_CONST.__const _SCNGeometrySourceSemanticColor
|| __DATA_CONST.__const _SCNGeometrySourceSemanticEdgeCrease
|| __DATA_CONST.__const _SCNGeometrySourceSemanticNormal
|| __DATA_CONST.__const _SCNGeometrySourceSemanticTangent
|| __DATA_CONST.__const _SCNGeometrySourceSemanticTexcoord
|| __DATA_CONST.__const _SCNGeometrySourceSemanticVertex
|| __DATA_CONST.__const _SCNGeometrySourceSemanticVertexCrease
|| __DATA_CONST.__const _SCNHitTestAllLayers
|| __DATA_CONST.__const _SCNHitTestBackFaceCullingKey
|| __DATA_CONST.__const _SCNHitTestBoundingBoxOnlyKey
|| __DATA_CONST.__const _SCNHitTestCategoryBitMaskKey
|| __DATA_CONST.__const _SCNHitTestClipToZRangeKey
|| __DATA_CONST.__const _SCNHitTestFirstFoundOnlyKey
|| __DATA_CONST.__const _SCNHitTestIgnoreChildNodesKey
|| __DATA_CONST.__const _SCNHitTestIgnoreHiddenNodesKey
|| __DATA_CONST.__const _SCNHitTestIgnoreTransparentNodesKey
|| __DATA_CONST.__const _SCNHitTestLayerMaskKey
|| __DATA_CONST.__const _SCNHitTestOptionCategoryBitMask
|| __DATA_CONST.__const _SCNHitTestOptionIgnoreLightArea
|| __DATA_CONST.__const _SCNHitTestOptionSearchMode
|| __DATA_CONST.__const _SCNHitTestOptionShowDebugInfo
|| __DATA_CONST.__const _SCNHitTestRootNodeKey
|| __DATA_CONST.__const _SCNHitTestSearchModeKey
|| __DATA_CONST.__const _SCNHitTestSortResultsKey
|| __DATA_CONST.__const _SCNLightConstantAttenuationKey
|| __DATA_CONST.__const _SCNLightFallOffAngleKey
|| __DATA_CONST.__const _SCNLightFallOffExponentKey
|| __DATA_CONST.__const _SCNLightGoboProjectShadows
|| __DATA_CONST.__const _SCNLightHotspotBeamKey
|| __DATA_CONST.__const _SCNLightLinearAttenuationKey
|| __DATA_CONST.__const _SCNLightQuadraticAttenuationKey
|| __DATA_CONST.__const _SCNLightSpotFalloffExponentKey
|| __DATA_CONST.__const _SCNLightTypeAmbient
|| __DATA_CONST.__const _SCNLightTypeArea
|| __DATA_CONST.__const _SCNLightTypeDirectional
|| __DATA_CONST.__const _SCNLightTypeIES
|| __DATA_CONST.__const _SCNLightTypeOmni
|| __DATA_CONST.__const _SCNLightTypeProbe
|| __DATA_CONST.__const _SCNLightTypeSpot
|| __DATA_CONST.__const _SCNLightingModelBlinn
|| __DATA_CONST.__const _SCNLightingModelConstant
|| __DATA_CONST.__const _SCNLightingModelLambert
|| __DATA_CONST.__const _SCNLightingModelNone
|| __DATA_CONST.__const _SCNLightingModelPhong
|| __DATA_CONST.__const _SCNLightingModelPhysicallyBased
|| __DATA_CONST.__const _SCNLightingModelShadowOnly
|| __DATA_CONST.__const _SCNModelTransform
|| __DATA_CONST.__const _SCNModelViewProjectionTransform
|| __DATA_CONST.__const _SCNModelViewTransform
|| __DATA_CONST.__const _SCNNormalTransform
|| __DATA_CONST.__const _SCNParticlePropertyAngle
|| __DATA_CONST.__const _SCNParticlePropertyAngularVelocity
|| __DATA_CONST.__const _SCNParticlePropertyBounce
|| __DATA_CONST.__const _SCNParticlePropertyCharge
|| __DATA_CONST.__const _SCNParticlePropertyColor
|| __DATA_CONST.__const _SCNParticlePropertyContactNormal
|| __DATA_CONST.__const _SCNParticlePropertyContactPoint
|| __DATA_CONST.__const _SCNParticlePropertyFrame
|| __DATA_CONST.__const _SCNParticlePropertyFrameRate
|| __DATA_CONST.__const _SCNParticlePropertyFriction
|| __DATA_CONST.__const _SCNParticlePropertyLife
|| __DATA_CONST.__const _SCNParticlePropertyOpacity
|| __DATA_CONST.__const _SCNParticlePropertyPosition
|| __DATA_CONST.__const _SCNParticlePropertyRotationAxis
|| __DATA_CONST.__const _SCNParticlePropertySize
|| __DATA_CONST.__const _SCNParticlePropertyVelocity
|| __DATA_CONST.__const _SCNPhysicsShapeCollisionMarginKey
|| __DATA_CONST.__const _SCNPhysicsShapeKeepAsCompoundKey
|| __DATA_CONST.__const _SCNPhysicsShapeOptionCollisionMargin
|| __DATA_CONST.__const _SCNPhysicsShapeScaleKey
|| __DATA_CONST.__const _SCNPhysicsShapeTypeBoundingBox
|| __DATA_CONST.__const _SCNPhysicsShapeTypeConcavePolyhedron
|| __DATA_CONST.__const _SCNPhysicsShapeTypeConvexHull
|| __DATA_CONST.__const _SCNPhysicsShapeTypeKey
|| __DATA_CONST.__const _SCNPhysicsTestBackfaceCullingKey
|| __DATA_CONST.__const _SCNPhysicsTestCollisionBitMaskKey
|| __DATA_CONST.__const _SCNPhysicsTestSearchModeAll
|| __DATA_CONST.__const _SCNPhysicsTestSearchModeAny
|| __DATA_CONST.__const _SCNPhysicsTestSearchModeClosest
|| __DATA_CONST.__const _SCNPhysicsTestSearchModeKey
|| __DATA_CONST.__const _SCNPreferLowPowerDeviceKey
|| __DATA_CONST.__const _SCNPreferredDeviceKey
|| __DATA_CONST.__const _SCNPreferredRenderingAPIKey
|| __DATA_CONST.__const _SCNPrimitiveCapSegments
|| __DATA_CONST.__const _SCNPrimitiveChamferSegments
|| __DATA_CONST.__const _SCNPrimitiveGenerateMappingCoordinates
|| __DATA_CONST.__const _SCNPrimitiveHeightSegments
|| __DATA_CONST.__const _SCNPrimitiveLengthSegments
|| __DATA_CONST.__const _SCNPrimitivePipeSegments
|| __DATA_CONST.__const _SCNPrimitiveRingSegments
|| __DATA_CONST.__const _SCNPrimitiveRotationSegments
|| __DATA_CONST.__const _SCNPrimitiveSphereSegments
|| __DATA_CONST.__const _SCNPrimitiveSphereType
|| __DATA_CONST.__const _SCNPrimitiveTypeGeosphere
|| __DATA_CONST.__const _SCNPrimitiveTypeSphere
|| __DATA_CONST.__const _SCNPrimitiveVertexTransformation
|| __DATA_CONST.__const _SCNPrimitiveWidthSegments
|| __DATA_CONST.__const _SCNProgramMappingChannelKey
|| __DATA_CONST.__const _SCNProjectionTransform
|| __DATA_CONST.__const _SCNRenderPassName
|| __DATA_CONST.__const _SCNRendererOffscreenSampleCount
|| __DATA_CONST.__const _SCNSceneEndTimeAttributeKey
|| __DATA_CONST.__const _SCNSceneExportCompressGeometryElements
|| __DATA_CONST.__const _SCNSceneExportCompressMorphTargets
|| __DATA_CONST.__const _SCNSceneExportDestinationURL
|| __DATA_CONST.__const _SCNSceneExportEmbedImages
|| __DATA_CONST.__const _SCNSceneExportEmbedReferences
|| __DATA_CONST.__const _SCNSceneExportPresentationTree
|| __DATA_CONST.__const _SCNSceneExportUTIKey
|| __DATA_CONST.__const _SCNSceneFrameRateAttributeKey
|| __DATA_CONST.__const _SCNSceneSourceAdjustInvalidCameraClippingPlanesKey
|| __DATA_CONST.__const _SCNSceneSourceAnimationImportPolicyDoNotPlay
|| __DATA_CONST.__const _SCNSceneSourceAnimationImportPolicyKey
|| __DATA_CONST.__const _SCNSceneSourceAnimationImportPolicyPlay
|| __DATA_CONST.__const _SCNSceneSourceAnimationImportPolicyPlayRepeatedly
|| __DATA_CONST.__const _SCNSceneSourceAnimationImportPolicyPlayUsingSceneTimeBase
|| __DATA_CONST.__const _SCNSceneSourceAnimationLoadingModeKey
|| __DATA_CONST.__const _SCNSceneSourceAnimationLoadingModePlayUsingSceneTime
|| __DATA_CONST.__const _SCNSceneSourceAssetAuthorKey
|| __DATA_CONST.__const _SCNSceneSourceAssetAuthoringToolKey
|| __DATA_CONST.__const _SCNSceneSourceAssetContributorsKey
|| __DATA_CONST.__const _SCNSceneSourceAssetCreatedDateKey
|| __DATA_CONST.__const _SCNSceneSourceAssetDirectoryURLsKey
|| __DATA_CONST.__const _SCNSceneSourceAssetModifiedDateKey
|| __DATA_CONST.__const _SCNSceneSourceAssetUnitKey
|| __DATA_CONST.__const _SCNSceneSourceAssetUnitMeterKey
|| __DATA_CONST.__const _SCNSceneSourceAssetUnitNameKey
|| __DATA_CONST.__const _SCNSceneSourceAssetUpAxisKey
|| __DATA_CONST.__const _SCNSceneSourceCheckConsistencyKey
|| __DATA_CONST.__const _SCNSceneSourceConvertToYUpIfNeededKey
|| __DATA_CONST.__const _SCNSceneSourceConvertToYUpKey
|| __DATA_CONST.__const _SCNSceneSourceConvertUnitsToMetersKey
|| __DATA_CONST.__const _SCNSceneSourceCreateCameraIfAbsentKey
|| __DATA_CONST.__const _SCNSceneSourceCreateLightIfAbsentKey
|| __DATA_CONST.__const _SCNSceneSourceCreateNormalsIfAbsentKey
|| __DATA_CONST.__const _SCNSceneSourceDocumentDestinationURL
|| __DATA_CONST.__const _SCNSceneSourceFlattenSceneKey
|| __DATA_CONST.__const _SCNSceneSourceForceInProcess
|| __DATA_CONST.__const _SCNSceneSourceForceMorphNormals
|| __DATA_CONST.__const _SCNSceneSourceFormat
|| __DATA_CONST.__const _SCNSceneSourceFormatC3D
|| __DATA_CONST.__const _SCNSceneSourceFormatCOLLADA
|| __DATA_CONST.__const _SCNSceneSourceFormatHint
|| __DATA_CONST.__const _SCNSceneSourceFormatOBJ
|| __DATA_CONST.__const _SCNSceneSourceFormatSCN
|| __DATA_CONST.__const _SCNSceneSourceGeometryMemoryUsageKey
|| __DATA_CONST.__const _SCNSceneSourceInputSource
|| __DATA_CONST.__const _SCNSceneSourceLoadTexturesInCPUMemory
|| __DATA_CONST.__const _SCNSceneSourceLoadingOptionPreserveOriginalTopology
|| __DATA_CONST.__const _SCNSceneSourceOverrideAssetURLsKey
|| __DATA_CONST.__const _SCNSceneSourceSceneIndexKey
|| __DATA_CONST.__const _SCNSceneSourceShouldCacheKey
|| __DATA_CONST.__const _SCNSceneSourceSkipConsistencyCheckKey
|| __DATA_CONST.__const _SCNSceneSourceStrictConformanceKey
|| __DATA_CONST.__const _SCNSceneSourceTextureMemoryUsageKey
|| __DATA_CONST.__const _SCNSceneSourceUseModelIOToLoadDAEFiles
|| __DATA_CONST.__const _SCNSceneSourceUseSafeModeKey
|| __DATA_CONST.__const _SCNSceneSourceVerboseMode
|| __DATA_CONST.__const _SCNSceneStartTimeAttributeKey
|| __DATA_CONST.__const _SCNSceneUpAxisAttributeKey
|| __DATA_CONST.__const _SCNSceneWriteToURLShouldKeepReferencesToFilesOption
|| __DATA_CONST.__const _SCNSceneWriteToURLShouldZipOption
|| __DATA_CONST.__const _SCNShaderModifierEntryPointFragment
|| __DATA_CONST.__const _SCNShaderModifierEntryPointGeometry
|| __DATA_CONST.__const _SCNShaderModifierEntryPointLightingModel
|| __DATA_CONST.__const _SCNShaderModifierEntryPointSurface
|| __DATA_CONST.__const _SCNTextureOffsetXKey
|| __DATA_CONST.__const _SCNTextureOffsetYKey
|| __DATA_CONST.__const _SCNViewTransform
|| __DATA_CONST.__const __SCNShadableDidCompileNotificationName
|| __DATA_CONST.__const __SCNShadableIssuesKey
|| __DATA_CONST.__const _kC3DIOSceneSourceAutoAdjustInvalidZRange
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNBox
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNCamera
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNCameraController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNCameraNavigationController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNGeometry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNGeometryElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNGeometrySource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNLight
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNMaterial
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNMaterialProperty
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNOffscreenRenderer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNRenderer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNScene
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNSphere
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNTextureSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCNView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNBox
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNCamera
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNCameraController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNCameraNavigationController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNGeometry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNGeometryElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNGeometrySource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNLight
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNMaterial
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNMaterialProperty
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNOffscreenRenderer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNRenderer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNScene
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNSphere
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNTextureSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCNView
|| __TEXT.__const _SCNMatrix4Identity
|| __TEXT.__const _SCNVector3Zero
|| __TEXT.__const _SCNVector4Zero
|| __TEXT.__const _kSCNAuthoringLayerIndex
|| __TEXT.__const _kSCNAuthoringLayerMask
|| __TEXT.__const _kSCNAuthoringOverlayLayerIndex
|| __TEXT.__const _kSCNAuthoringOverlayLayerMask
|| __TEXT.__text _C3DGetFileDecryptionCallbacks
|| __TEXT.__text _C3DSetFileDecryptionCallbacks
|| __TEXT.__text _SCNExportJavaScriptModule
|| __TEXT.__text _SCNGetExternalTextureSource
|| __TEXT.__text _SCNGetPerformanceStatistics
|| __TEXT.__text _SCNGetResourceBundle
|| __TEXT.__text _SCNGetShaderCollectionOutputURL
|| __TEXT.__text _SCNHasSpecialResourceBundle
|| __TEXT.__text _SCNMatrix4EqualToMatrix4
|| __TEXT.__text _SCNMatrix4FromGLKMatrix4
|| __TEXT.__text _SCNMatrix4Invert
|| __TEXT.__text _SCNMatrix4IsIdentity
|| __TEXT.__text _SCNMatrix4MakeRotation
|| __TEXT.__text _SCNMatrix4Mult
|| __TEXT.__text _SCNMatrix4Rotate
|| __TEXT.__text _SCNMatrix4Scale
|| __TEXT.__text _SCNMatrix4ToGLKMatrix4
|| __TEXT.__text _SCNNodeGetBoundingSphere
|| __TEXT.__text _SCNNodesToMDLAsset
|| __TEXT.__text _SCNResolveImageContents
|| __TEXT.__text _SCNSetExternalTextureSource
|| __TEXT.__text _SCNSetPerformanceStatisticsEnabled
|| __TEXT.__text _SCNSetResourceBundle
|| __TEXT.__text _SCNSetShaderCollectionEnabled
|| __TEXT.__text _SCNTextureContentWithGLInfo
|| __TEXT.__text _SCNVector3EqualToVector3
|| __TEXT.__text _SCNVector4EqualToVector4
|| __TEXT.__text _SCNWriteMTLTextureToData
|| __TEXT.__text __SCNGetCollectedShadersForPid
|| __TEXT.__text __SCNGetPerformanceStatisticsForPid
|| __TEXT.__text __SCNSetLinearRenderingEnabled
|| __TEXT.__text __SCNSetShaderCacheURL
|| __TEXT.__text __SCNSetShouldPostShadableCompilationNotifications
|| __TEXT.__text __SCNShadableConvertShaderToMetalIfNeeded
|| __TEXT.__text __SCNStartCollectingPerformanceStatisticsForPid
|| __TEXT.__text __SCNStopCollectingPerformanceStatisticsForPid
|| __TEXT.__text _scn_frustum_classify_aabb
|| __TEXT.__text _scn_matrix_compute_normal
|| __TEXT.__text _scn_matrix_fast_invert
|| __TEXT.__text _scn_plane_intersect_3_planes
|| __TEXT.__text _scn_triangle_barycentric_coordinates
|| __TEXT.__text _scn_triangle_point_distance_squared
__ AVFoundation: _AVFileTypeQuickTimeMovie
__ AVFoundation: _AVMediaCharacteristicContainsAlphaChannel
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVVideoCodecH264
__ AVFoundation: _AVVideoCodecKey
__ AVFoundation: _AVVideoHeightKey
__ AVFoundation: _AVVideoWidthKey
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriter
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInput
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInputPixelBufferAdaptor
__ AVFoundation: _OBJC_CLASS_$_AVAudioEngine
__ AVFoundation: _OBJC_CLASS_$_AVAudioEnvironmentNode
__ AVFoundation: _OBJC_CLASS_$_AVAudioFile
__ AVFoundation: _OBJC_CLASS_$_AVAudioFormat
__ AVFoundation: _OBJC_CLASS_$_AVAudioPCMBuffer
__ AVFoundation: _OBJC_CLASS_$_AVAudioPlayerNode
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItemVideoOutput
__ Accelerate: _vImageDecodeVectorHalf
__ Accelerate: _vImageEncodeVectorHalf
__ Accelerate: _vImageEncodeVectorOptionsCreate
__ Accelerate: _vImageEncodeVectorOptionsFree
__ Accelerate: _vImageEncodeVectorOptionsSetQuantization
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendArray
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayApplyFunction
__ CoreFoundation: _CFArrayContainsValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateCopy
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayCreateMutableCopy
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetFirstIndexOfValue
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayGetValues
__ CoreFoundation: _CFArrayInsertValueAtIndex
__ CoreFoundation: _CFArrayRemoveAllValues
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFArrayReplaceValues
__ CoreFoundation: _CFArraySetValueAtIndex
__ CoreFoundation: _CFArraySortValues
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBagAddValue
__ CoreFoundation: _CFBagCreateMutable
__ CoreFoundation: _CFBagGetCountOfValue
__ CoreFoundation: _CFBagRemoveValue
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCopyBundleURL
__ CoreFoundation: _CFBundleCopyLocalizedString
__ CoreFoundation: _CFBundleCopyResourceURL
__ CoreFoundation: _CFBundleGetBundleWithIdentifier
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFBundleGetPackageInfo
__ CoreFoundation: _CFCharacterSetGetPredefined
__ CoreFoundation: _CFCharacterSetIsCharacterMember
__ CoreFoundation: _CFCopyDescription
__ CoreFoundation: _CFCopySearchPathForDirectoriesInDomains
__ CoreFoundation: _CFCopyTypeIDDescription
__ CoreFoundation: _CFDataAppendBytes
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateCopy
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataCreateMutableCopy
__ CoreFoundation: _CFDataCreateWithBytesNoCopy
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetMutableBytePtr
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDataSetLength
__ CoreFoundation: _CFDateCreate
__ CoreFoundation: _CFDateFormatterCreate
__ CoreFoundation: _CFDateFormatterCreateStringWithDate
__ CoreFoundation: _CFDateFormatterSetFormat
__ CoreFoundation: _CFDateFormatterSetProperty
__ CoreFoundation: _CFDateGetTypeID
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryApplyFunction
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryContainsValue
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateCopy
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetCountOfKey
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryGetValueIfPresent
__ CoreFoundation: _CFDictionaryRemoveAllValues
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFErrorCopyRecoverySuggestion
__ CoreFoundation: _CFErrorCopyUserInfo
__ CoreFoundation: _CFErrorCreate
__ CoreFoundation: _CFErrorGetCode
__ CoreFoundation: _CFErrorGetDomain
__ CoreFoundation: _CFGetAllocator
__ CoreFoundation: _CFGetRetainCount
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFLocaleCopyCurrent
__ CoreFoundation: _CFMakeCollectable
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterPostNotificationWithOptions
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetType
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPropertyListCreateData
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFPropertyListWrite
__ CoreFoundation: _CFReadStreamClose
__ CoreFoundation: _CFReadStreamCreateWithFile
__ CoreFoundation: _CFReadStreamOpen
__ CoreFoundation: _CFReadStreamRead
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopCopyCurrentMode
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopObserverCreate
__ CoreFoundation: _CFRunLoopObserverInvalidate
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetApplyFunction
__ CoreFoundation: _CFSetContainsValue
__ CoreFoundation: _CFSetCreateCopy
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetGetCount
__ CoreFoundation: _CFSetGetValue
__ CoreFoundation: _CFSetRemoveAllValues
__ CoreFoundation: _CFSetRemoveValue
__ CoreFoundation: _CFSetSetValue
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringAppendFormat
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCompareWithOptions
__ CoreFoundation: _CFStringCreateArrayBySeparatingStrings
__ CoreFoundation: _CFStringCreateByCombiningStrings
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFStringFindAndReplace
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetDoubleValue
__ CoreFoundation: _CFStringGetIntValue
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetMaximumSizeForEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringHasPrefix
__ CoreFoundation: _CFStringLowercase
__ CoreFoundation: _CFStringReplace
__ CoreFoundation: _CFStringReplaceAll
__ CoreFoundation: _CFStringTrimWhitespace
__ CoreFoundation: _CFStringUppercase
__ CoreFoundation: _CFTimeZoneCreateWithTimeIntervalFromGMT
__ CoreFoundation: _CFURLCopyAbsoluteURL
__ CoreFoundation: _CFURLCopyFileSystemPath
__ CoreFoundation: _CFURLCopyLastPathComponent
__ CoreFoundation: _CFURLCopyPath
__ CoreFoundation: _CFURLCopyPathExtension
__ CoreFoundation: _CFURLCopyScheme
__ CoreFoundation: _CFURLCopyStrictPath
__ CoreFoundation: _CFURLCreateCopyAppendingPathComponent
__ CoreFoundation: _CFURLCreateCopyAppendingPathExtension
__ CoreFoundation: _CFURLCreateCopyDeletingLastPathComponent
__ CoreFoundation: _CFURLCreateCopyDeletingPathExtension
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _CFURLCreateWithString
__ CoreFoundation: _CFURLGetBytes
__ CoreFoundation: _CFURLGetFileSystemRepresentation
__ CoreFoundation: _CFURLGetString
__ CoreFoundation: _CFURLGetTypeID
__ CoreFoundation: _CFURLHasDirectoryPath
__ CoreFoundation: _CFWriteStreamClose
__ CoreFoundation: _CFWriteStreamCopyProperty
__ CoreFoundation: _CFWriteStreamCreateWithAllocatedBuffers
__ CoreFoundation: _CFWriteStreamCreateWithFile
__ CoreFoundation: _CFWriteStreamOpen
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFRuntimeCreateInstance
__ CoreFoundation: __CFRuntimeGetClassWithTypeID
__ CoreFoundation: __CFRuntimeRegisterClass
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorMalloc
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFDateFormatterTimeZone
__ CoreFoundation: _kCFErrorDomainPOSIX
__ CoreFoundation: _kCFErrorLocalizedDescriptionKey
__ CoreFoundation: _kCFErrorLocalizedRecoverySuggestionKey
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFStreamPropertyDataWritten
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFTypeSetCallBacks
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetBitmapInfo
__ CoreGraphics: _CGBitmapContextGetBitsPerComponent
__ CoreGraphics: _CGBitmapContextGetBitsPerPixel
__ CoreGraphics: _CGBitmapContextGetBytesPerRow
__ CoreGraphics: _CGBitmapContextGetColorSpace
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGBitmapContextGetHeight
__ CoreGraphics: _CGBitmapContextGetWidth
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorGetTypeID
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorRetain
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceGetBaseColorSpace
__ CoreGraphics: _CGColorSpaceGetNumberOfComponents
__ CoreGraphics: _CGColorSpaceIsWideGamutRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGColorTransformConvertColor
__ CoreGraphics: _CGColorTransformConvertColorComponents
__ CoreGraphics: _CGColorTransformConvertData
__ CoreGraphics: _CGColorTransformCreate
__ CoreGraphics: _CGColorTransformRelease
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextFlush
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRetain
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetFillColor
__ CoreGraphics: _CGContextSetFillColorSpace
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGFontCopyFullName
__ CoreGraphics: _CGFontCopyGlyphNameForGlyph
__ CoreGraphics: _CGFontRelease
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageGetAlphaInfo
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetTypeID
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPathAddArcToPoint
__ CoreGraphics: _CGPathAddCurveToPoint
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddQuadCurveToPoint
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathApply
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPathRetain
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceExtendedLinearSRGB
__ CoreGraphics: _kCGColorSpaceExtendedSRGB
__ CoreGraphics: _kCGColorSpaceGenericGrayGamma2_2
__ CoreGraphics: _kCGColorSpaceLinearGray
__ CoreGraphics: _kCGColorSpaceLinearSRGB
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIFilter
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _OBJC_CLASS_$_CIVector
__ CoreImage: _kCIAttributeClass
__ CoreImage: _kCIAttributeType
__ CoreImage: _kCIAttributeTypeAngle
__ CoreImage: _kCIAttributeTypeBoolean
__ CoreImage: _kCIAttributeTypeCount
__ CoreImage: _kCIAttributeTypeDistance
__ CoreImage: _kCIAttributeTypeInteger
__ CoreImage: _kCIAttributeTypeOffset
__ CoreImage: _kCIAttributeTypePosition
__ CoreImage: _kCIAttributeTypePosition3
__ CoreImage: _kCIAttributeTypeRectangle
__ CoreImage: _kCIAttributeTypeScalar
__ CoreImage: _kCIAttributeTypeTime
__ CoreImage: _kCIInputImageKey
__ CoreImage: _kCIOutputImageKey
__ CoreMedia: _CMSampleBufferGetImageBuffer
__ CoreSymbolication: _CSIsNull
__ CoreSymbolication: _CSRelease
__ CoreSymbolication: _CSSymbolGetRange
__ CoreSymbolication: _CSSymbolicatorCreateWithPid
__ CoreSymbolication: _CSSymbolicatorForeachSymbolWithMangledNameAtTime
__ CoreSymbolication: _CSSymbolicatorGetTask
__ CoreSymbolication: _clear_mapped_memory
__ CoreSymbolication: _create_mapped_memory_cache_for_task
__ CoreSymbolication: _destroy_mapped_memory_cache
__ CoreSymbolication: _mapped_memory_read
__ CoreText: _CTFontCopyGraphicsFont
__ CoreText: _CTFontCreatePathForGlyph
__ CoreText: _CTFontDrawGlyphs
__ CoreText: _CTFontGetAdvancesForGlyphs
__ CoreText: _CTFontGetAscent
__ CoreText: _CTFontGetBoundingBox
__ CoreText: _CTFontGetDescent
__ CoreText: _CTFontGetGlyphsForCharacters
__ CoreText: _CTFontGetLeading
__ CoreText: _CTFrameGetLineOrigins
__ CoreText: _CTFrameGetLines
__ CoreText: _CTFramesetterCreateFrame
__ CoreText: _CTFramesetterCreateWithAttributedString
__ CoreText: _CTFramesetterSuggestFrameSizeWithConstraints
__ CoreText: _CTLineGetGlyphRuns
__ CoreText: _CTRunGetAdvances
__ CoreText: _CTRunGetAttributes
__ CoreText: _CTRunGetGlyphCount
__ CoreText: _CTRunGetGlyphs
__ CoreText: _kCTFontAttributeName
__ CoreUI: _OBJC_CLASS_$_CUICatalog
__ CoreVideo: _CVMetalTextureCacheCreate
__ CoreVideo: _CVMetalTextureCacheCreateTextureFromImage
__ CoreVideo: _CVMetalTextureCacheFlush
__ CoreVideo: _CVMetalTextureGetTexture
__ CoreVideo: _CVPixelBufferGetBaseAddress
__ CoreVideo: _CVPixelBufferGetBytesPerRow
__ CoreVideo: _CVPixelBufferGetHeight
__ CoreVideo: _CVPixelBufferGetHeightOfPlane
__ CoreVideo: _CVPixelBufferGetIOSurface
__ CoreVideo: _CVPixelBufferGetPixelFormatType
__ CoreVideo: _CVPixelBufferGetWidth
__ CoreVideo: _CVPixelBufferGetWidthOfPlane
__ CoreVideo: _CVPixelBufferLockBaseAddress
__ CoreVideo: _CVPixelBufferPoolCreatePixelBuffer
__ CoreVideo: _CVPixelBufferUnlockBaseAddress
__ CoreVideo: _kCVPixelBufferCGImageCompatibilityKey
__ CoreVideo: _kCVPixelBufferHeightKey
__ CoreVideo: _kCVPixelBufferMetalCompatibilityKey
__ CoreVideo: _kCVPixelBufferPixelFormatTypeKey
__ CoreVideo: _kCVPixelBufferWidthKey
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDefaultMallocZone
__ Foundation: _NSExtensionHostDidBecomeActiveNotification
__ Foundation: _NSExtensionHostWillResignActiveNotification
__ Foundation: _NSFileHandleReadCompletionNotification
__ Foundation: _NSFileModificationDate
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSByteCountFormatter
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_METACLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_METACLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSValue
__ GLKit: _OBJC_CLASS_$_GLKTextureLoader
__ IOKit: _IOIteratorNext
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IOServiceGetMatchingServices
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMasterPortDefault
__ IOSurface: _IOSurfaceCreate
__ IOSurface: _IOSurfaceDecrementUseCount
__ IOSurface: _IOSurfaceIncrementUseCount
__ IOSurface: _kIOSurfaceAllocSize
__ IOSurface: _kIOSurfaceBytesPerElement
__ IOSurface: _kIOSurfaceBytesPerRow
__ IOSurface: _kIOSurfaceHeight
__ IOSurface: _kIOSurfacePixelFormat
__ IOSurface: _kIOSurfaceWidth
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _kCGImagePropertyDPIHeight
__ ImageIO: _kCGImagePropertyDPIWidth
__ ImageIO: _kCGImagePropertyOrientation
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImageSourceShouldAllowFloat
__ ImageIO: _kCGImageSourceShouldCache
__ Metal: _MTLCreateSystemDefaultDevice
__ Metal: _MTLDataTypeString
__ Metal: _MTLPixelFormatGetInfo
__ Metal: _MTLValidationEnabled
__ Metal: _OBJC_CLASS_$_MTLCompileOptions
__ Metal: _OBJC_CLASS_$_MTLComputePipelineDescriptor
__ Metal: _OBJC_CLASS_$_MTLDepthStencilDescriptor
__ Metal: _OBJC_CLASS_$_MTLFunctionConstantValues
__ Metal: _OBJC_CLASS_$_MTLRenderPassDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPipelineDescriptor
__ Metal: _OBJC_CLASS_$_MTLSamplerDescriptor
__ Metal: _OBJC_CLASS_$_MTLStageInputOutputDescriptor
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ Metal: _OBJC_CLASS_$_MTLVertexDescriptor
__ MetalKit: _MTKTextureLoaderOptionSRGB
__ MetalKit: _OBJC_CLASS_$_MTKTextureLoader
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageGaussianBlur
__ ModelIO: _MDLVertexAttributeAOCoord
__ ModelIO: _MDLVertexAttributeAnisotropy
__ ModelIO: _MDLVertexAttributeBinormal
__ ModelIO: _MDLVertexAttributeColor
__ ModelIO: _MDLVertexAttributeJointIndices
__ ModelIO: _MDLVertexAttributeJointWeights
__ ModelIO: _MDLVertexAttributeLightmapCoord
__ ModelIO: _MDLVertexAttributeNormal
__ ModelIO: _MDLVertexAttributeOcclusionValue
__ ModelIO: _MDLVertexAttributePosition
__ ModelIO: _MDLVertexAttributeTangent
__ ModelIO: _MDLVertexAttributeTextureCoordinate
__ ModelIO: _OBJC_CLASS_$_MDLAnimationBindComponent
__ ModelIO: _OBJC_CLASS_$_MDLAsset
__ ModelIO: _OBJC_CLASS_$_MDLCamera
__ ModelIO: _OBJC_CLASS_$_MDLLight
__ ModelIO: _OBJC_CLASS_$_MDLLightProbe
__ ModelIO: _OBJC_CLASS_$_MDLMaterial
__ ModelIO: _OBJC_CLASS_$_MDLMaterialProperty
__ ModelIO: _OBJC_CLASS_$_MDLMesh
__ ModelIO: _OBJC_CLASS_$_MDLMeshBufferAllocatorDefault
__ ModelIO: _OBJC_CLASS_$_MDLMeshBufferData
__ ModelIO: _OBJC_CLASS_$_MDLObject
__ ModelIO: _OBJC_CLASS_$_MDLPackedJointAnimation
__ ModelIO: _OBJC_CLASS_$_MDLPhysicallyPlausibleLight
__ ModelIO: _OBJC_CLASS_$_MDLPhysicallyPlausibleScatteringFunction
__ ModelIO: _OBJC_CLASS_$_MDLSkeleton
__ ModelIO: _OBJC_CLASS_$_MDLSkyCubeTexture
__ ModelIO: _OBJC_CLASS_$_MDLSubmesh
__ ModelIO: _OBJC_CLASS_$_MDLSubmeshTopology
__ ModelIO: _OBJC_CLASS_$_MDLTexture
__ ModelIO: _OBJC_CLASS_$_MDLTextureSampler
__ ModelIO: _OBJC_CLASS_$_MDLTransform
__ ModelIO: _OBJC_CLASS_$_MDLTransformStack
__ ModelIO: _OBJC_CLASS_$_MDLVertexDescriptor
__ OpenGLES: _OBJC_CLASS_$_EAGLContext
__ OpenGLES: _glActiveTexture
__ OpenGLES: _glAttachShader
__ OpenGLES: _glBindAttribLocation
__ OpenGLES: _glBindBuffer
__ OpenGLES: _glBindFramebuffer
__ OpenGLES: _glBindRenderbuffer
__ OpenGLES: _glBindTexture
__ OpenGLES: _glBindVertexArrayOES
__ OpenGLES: _glBlendColor
__ OpenGLES: _glBlendEquation
__ OpenGLES: _glBlendEquationSeparate
__ OpenGLES: _glBlendFunc
__ OpenGLES: _glBlendFuncSeparate
__ OpenGLES: _glBufferData
__ OpenGLES: _glClear
__ OpenGLES: _glClearColor
__ OpenGLES: _glCompileShader
__ OpenGLES: _glCompressedTexImage2D
__ OpenGLES: _glCreateProgram
__ OpenGLES: _glCreateShader
__ OpenGLES: _glCullFace
__ OpenGLES: _glDeleteBuffers
__ OpenGLES: _glDeleteFramebuffers
__ OpenGLES: _glDeleteProgram
__ OpenGLES: _glDeleteRenderbuffers
__ OpenGLES: _glDeleteShader
__ OpenGLES: _glDeleteTextures
__ OpenGLES: _glDeleteVertexArraysOES
__ OpenGLES: _glDepthFunc
__ OpenGLES: _glDepthMask
__ OpenGLES: _glDisable
__ OpenGLES: _glDiscardFramebufferEXT
__ OpenGLES: _glDrawArrays
__ OpenGLES: _glDrawElements
__ OpenGLES: _glEnable
__ OpenGLES: _glEnableVertexAttribArray
__ OpenGLES: _glFlush
__ OpenGLES: _glFlushMappedBufferRangeEXT
__ OpenGLES: _glFramebufferRenderbuffer
__ OpenGLES: _glFramebufferTexture2D
__ OpenGLES: _glFrontFace
__ OpenGLES: _glGenBuffers
__ OpenGLES: _glGenFramebuffers
__ OpenGLES: _glGenRenderbuffers
__ OpenGLES: _glGenTextures
__ OpenGLES: _glGenVertexArraysOES
__ OpenGLES: _glGenerateMipmap
__ OpenGLES: _glGetActiveAttrib
__ OpenGLES: _glGetActiveUniform
__ OpenGLES: _glGetAttribLocation
__ OpenGLES: _glGetError
__ OpenGLES: _glGetFloatv
__ OpenGLES: _glGetIntegerv
__ OpenGLES: _glGetProgramInfoLog
__ OpenGLES: _glGetProgramiv
__ OpenGLES: _glGetRenderbufferParameteriv
__ OpenGLES: _glGetShaderInfoLog
__ OpenGLES: _glGetShaderiv
__ OpenGLES: _glGetUniformLocation
__ OpenGLES: _glIsEnabled
__ OpenGLES: _glLinkProgram
__ OpenGLES: _glMapBufferRangeEXT
__ OpenGLES: _glPixelStorei
__ OpenGLES: _glPolygonOffset
__ OpenGLES: _glPopGroupMarkerEXT
__ OpenGLES: _glPushGroupMarkerEXT
__ OpenGLES: _glReadPixels
__ OpenGLES: _glRenderbufferStorage
__ OpenGLES: _glRenderbufferStorageMultisampleAPPLE
__ OpenGLES: _glResolveMultisampleFramebufferAPPLE
__ OpenGLES: _glScissor
__ OpenGLES: _glShaderSource
__ OpenGLES: _glStencilFuncSeparate
__ OpenGLES: _glStencilMask
__ OpenGLES: _glStencilMaskSeparate
__ OpenGLES: _glStencilOpSeparate
__ OpenGLES: _glTexImage2D
__ OpenGLES: _glTexParameterf
__ OpenGLES: _glTexParameteri
__ OpenGLES: _glTexSubImage2D
__ OpenGLES: _glUniform1f
__ OpenGLES: _glUniform1fv
__ OpenGLES: _glUniform1i
__ OpenGLES: _glUniform2fv
__ OpenGLES: _glUniform2i
__ OpenGLES: _glUniform3f
__ OpenGLES: _glUniform3fv
__ OpenGLES: _glUniform3i
__ OpenGLES: _glUniform4f
__ OpenGLES: _glUniform4fv
__ OpenGLES: _glUniform4i
__ OpenGLES: _glUniformMatrix4fv
__ OpenGLES: _glUnmapBufferOES
__ OpenGLES: _glUseProgram
__ OpenGLES: _glVertexAttribDivisor
__ OpenGLES: _glVertexAttribPointer
__ OpenGLES: _glViewport
__ OpenGLES: _kEAGLColorFormatRGBA8
__ OpenGLES: _kEAGLContextPropertySharegroup
__ OpenGLES: _kEAGLContextPropertyVisibleInDebugTools
__ OpenGLES: _kEAGLDrawablePropertyColorFormat
__ OpenGLES: _kEAGLDrawablePropertyRetainedBacking
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DConcat
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DMakeTranslation
__ QuartzCore: _OBJC_CLASS_$_CAAnimation
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAEAGLLayer
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAMetalLayer
__ QuartzCore: _OBJC_CLASS_$_CAPropertyAnimation
__ QuartzCore: _OBJC_CLASS_$_CARenderer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_METACLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_METACLASS_$_CAMetalLayer
__ QuartzCore: _kCAAlignmentCenter
__ QuartzCore: _kCAAlignmentJustified
__ QuartzCore: _kCAAlignmentLeft
__ QuartzCore: _kCAAlignmentNatural
__ QuartzCore: _kCAAlignmentRight
__ QuartzCore: _kCAAnimationCubic
__ QuartzCore: _kCAAnimationCubicPaced
__ QuartzCore: _kCAAnimationDiscrete
__ QuartzCore: _kCAAnimationLinear
__ QuartzCore: _kCAAnimationPaced
__ QuartzCore: _kCAFillModeBackwards
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAFillModeRemoved
__ QuartzCore: _kCAMediaTimingFunctionDefault
__ QuartzCore: _kCATransactionDisableActions
__ QuartzCore: _kCATruncationEnd
__ QuartzCore: _kCATruncationMiddle
__ QuartzCore: _kCATruncationNone
__ QuartzCore: _kCATruncationStart
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSStringFromCGRect
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIFocusSystem
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIRotationGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIFocusItemRegion
__ UIKit: _OBJC_CLASS_$__UIFocusRegion
__ UIKit: _OBJC_METACLASS_$_UIImage
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidChangeStatusBarOrientationNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsPopContext
__ UIKit: _UIGraphicsPushContext
__ UIKit: _UIImagePNGRepresentation
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _CC_SHA256_Final
__ libSystem.B.dylib: _CC_SHA256_Init
__ libSystem.B.dylib: _CC_SHA256_Update
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___cxa_atexit
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___invert_d4
__ libSystem.B.dylib: ___invert_f3
__ libSystem.B.dylib: ___invert_f4
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___snprintf_chk
__ libSystem.B.dylib: ___sprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: ___strcat_chk
__ libSystem.B.dylib: ___strcpy_chk
__ libSystem.B.dylib: ___tanpi
__ libSystem.B.dylib: ___tolower
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _access
__ libSystem.B.dylib: _acosf
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _asin
__ libSystem.B.dylib: _asinf
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atan2f
__ libSystem.B.dylib: _atanf
__ libSystem.B.dylib: _atof
__ libSystem.B.dylib: _atoi
__ libSystem.B.dylib: _bsearch
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _cbrtf
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _cosf
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_apply
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_wait
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _exp2f
__ libSystem.B.dylib: _expf
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fmodf
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fputc
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _ldexp
__ libSystem.B.dylib: _ldexpf
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _log10f
__ libSystem.B.dylib: _log2f
__ libSystem.B.dylib: _logf
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _matrix_identity_float4x4
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _memset_pattern4
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _posix_memalign
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _proc_disable_wakemon
__ libSystem.B.dylib: _pthread_attr_destroy
__ libSystem.B.dylib: _pthread_attr_init
__ libSystem.B.dylib: _pthread_attr_setschedparam
__ libSystem.B.dylib: _pthread_attr_setschedpolicy
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_exit
__ libSystem.B.dylib: _pthread_getname_np
__ libSystem.B.dylib: _pthread_getspecific
__ libSystem.B.dylib: _pthread_key_create
__ libSystem.B.dylib: _pthread_main_np
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_destroy
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_setpolicy_np
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _pthread_rwlock_rdlock
__ libSystem.B.dylib: _pthread_rwlock_unlock
__ libSystem.B.dylib: _pthread_rwlock_wrlock
__ libSystem.B.dylib: _pthread_rwlockattr_destroy
__ libSystem.B.dylib: _pthread_rwlockattr_init
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _pthread_set_fixedpriority_self
__ libSystem.B.dylib: _pthread_setname_np
__ libSystem.B.dylib: _pthread_setspecific
__ libSystem.B.dylib: _qsort
__ libSystem.B.dylib: _qsort_r
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _realpath$DARWIN_EXTSN
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _sinf
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _sprintf
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strcpy
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _strtod
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _tan
__ libSystem.B.dylib: _tanf
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _valloc
__ libSystem.B.dylib: _vm_allocate
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _vm_page_size
__ libSystem.B.dylib: _vsnprintf
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignERKS5_mm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16__sortIRNS_6__lessImmEEPmEEvT0_S5_T_
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__19to_stringEi
__ libc++.1.dylib: __ZSt7nothrow
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __ZdlPvSt11align_val_t
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: __ZnwmSt11align_val_t
__ libc++.1.dylib: __ZnwmSt11align_val_tRKSt9nothrow_t
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___gxx_personality_v0
__ libcompression.dylib: _compression_stream_destroy
__ libcompression.dylib: _compression_stream_init
__ libcompression.dylib: _compression_stream_process
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _class_addProtocol
__ libobjc.A.dylib: _class_copyMethodList
__ libobjc.A.dylib: _class_copyPropertyList
__ libobjc.A.dylib: _class_getClassMethod
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _class_getProperty
__ libobjc.A.dylib: _class_getSuperclass
__ libobjc.A.dylib: _method_getImplementation
__ libobjc.A.dylib: _method_getName
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getMetaClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_getProtocol
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _property_getAttributes
__ libobjc.A.dylib: _property_getName
__ libxml2.2.dylib: _xmlFreeTextWriter
__ libxml2.2.dylib: _xmlNewTextWriterFilename
__ libxml2.2.dylib: _xmlTextWriterEndDocument
__ libxml2.2.dylib: _xmlTextWriterEndElement
__ libxml2.2.dylib: _xmlTextWriterSetIndent
__ libxml2.2.dylib: _xmlTextWriterStartDocument
__ libxml2.2.dylib: _xmlTextWriterStartElement
__ libxml2.2.dylib: _xmlTextWriterWriteAttribute
__ libxml2.2.dylib: _xmlTextWriterWriteElement
__ libxml2.2.dylib: _xmlTextWriterWriteFormatAttribute
__ libxml2.2.dylib: _xmlTextWriterWriteFormatElement
__ libxml2.2.dylib: _xmlTextWriterWriteFormatString
__ libxml2.2.dylib: _xmlTextWriterWriteString
__ libz.1.dylib: _crc32
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
SCNActionHide : SCNAction
  // class methods
  +[SCNActionHide supportsSecureCoding]
  +[SCNActionHide hide]
  +[SCNActionHide unhide]

  // instance methods
  -[SCNActionHide init]
  -[SCNActionHide copyWithZone:]
  -[SCNActionHide encodeWithCoder:]
  -[SCNActionHide initWithCoder:]
  -[SCNActionHide parameters]
  -[SCNActionHide reversedAction]


SCNAudioPlayer : NSObject
 @property  ^{__C3DScene=} scene
 @property  BOOL customAudioNode
 @property  BOOL completed
 @property  AVAudioPlayerNode *audioPlayer
 @property  @? willStartPlayback
 @property  @? didFinishPlayback
 @property  AVAudioNode *audioNode
 @property  SCNAudioSource *audioSource

  // class methods
  +[SCNAudioPlayer audioPlayerWithAVAudioNode:]
  +[SCNAudioPlayer audioPlayerWithSource:]

  // instance methods
  -[SCNAudioPlayer dealloc]
  -[SCNAudioPlayer recycle]
  -[SCNAudioPlayer reset]
  -[SCNAudioPlayer completed]
  -[SCNAudioPlayer setCompleted:]
  -[SCNAudioPlayer play]
  -[SCNAudioPlayer scene]
  -[SCNAudioPlayer initWithSource:]
  -[SCNAudioPlayer audioPlayer]
  -[SCNAudioPlayer audioSource]
  -[SCNAudioPlayer initWithAVAudioNode:]
  -[SCNAudioPlayer setWillStartPlayback:]
  -[SCNAudioPlayer setDidFinishPlayback:]
  -[SCNAudioPlayer didFinishPlayback]
  -[SCNAudioPlayer willStartPlayback]
  -[SCNAudioPlayer audioBufferFormat]
  -[SCNAudioPlayer setNodeRef:]
  -[SCNAudioPlayer nodeRef]
  -[SCNAudioPlayer __CFObject]
  -[SCNAudioPlayer audioNode]
  -[SCNAudioPlayer customAudioNode]


SCNAudioSource : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL positional
 @property  float volume
 @property  float rate
 @property  float reverbBlend
 @property  BOOL loops
 @property  BOOL shouldStream

  // class methods
  +[SCNAudioSource supportsSecureCoding]
  +[SCNAudioSource audioSourceNamed:]
  +[SCNAudioSource audioSourceWithAVAudioPCMBuffer:]

  // instance methods
  -[SCNAudioSource dealloc]
  -[SCNAudioSource load]
  -[SCNAudioSource copyWithZone:]
  -[SCNAudioSource copy]
  -[SCNAudioSource encodeWithCoder:]
  -[SCNAudioSource initWithCoder:]
  -[SCNAudioSource initWithURL:]
  -[SCNAudioSource duration]
  -[SCNAudioSource _load]
  -[SCNAudioSource volume]
  -[SCNAudioSource setVolume:]
  -[SCNAudioSource setRate:]
  -[SCNAudioSource rate]
  -[SCNAudioSource fileName]
  -[SCNAudioSource loadIfNeeded]
  -[SCNAudioSource renderingAlgorithm]
  -[SCNAudioSource reverbBlend]
  -[SCNAudioSource setReverbBlend:]
  -[SCNAudioSource audioBuffer]
  -[SCNAudioSource shouldStream]
  -[SCNAudioSource loops]
  -[SCNAudioSource audioFile]
  -[SCNAudioSource audioBufferFormat]
  -[SCNAudioSource initWithAVAudioPCMBuffer:]
  -[SCNAudioSource setPositional:]
  -[SCNAudioSource isPositional]
  -[SCNAudioSource _loadURLWithBundle:]
  -[SCNAudioSource initWithFileNamed:inBundle:]
  -[SCNAudioSource initWithFileNamed:]
  -[SCNAudioSource setLoops:]
  -[SCNAudioSource setShouldStream:]
  -[SCNAudioSource _customEncodingOfSCNAudioSource:]
  -[SCNAudioSource _customDecodingOfSCNAudioSource:]


SCNCoreAnimationSource : SCNImageSource
 @property  CALayer *layer

  // instance methods
  -[SCNCoreAnimationSource dealloc]
  -[SCNCoreAnimationSource isOpaque]
  -[SCNCoreAnimationSource layer]
  -[SCNCoreAnimationSource setLayer:]
  -[SCNCoreAnimationSource textureSource]


SCNTextureCoreAnimationSource : SCNTextureOffscreenRenderingSource
 @property  CALayer *layer

  // instance methods
  -[SCNTextureCoreAnimationSource dealloc]
  -[SCNTextureCoreAnimationSource layer]
  -[SCNTextureCoreAnimationSource setLayer:]
  -[SCNTextureCoreAnimationSource metalTextureWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNTextureCoreAnimationSource __renderLayer:withCARenderer:engineContext:viewport:atTime:forceUpdate:didUpdate:]
  -[SCNTextureCoreAnimationSource layerToFocusForRenderedLayer:]
  -[SCNTextureCoreAnimationSource _resizeLayer:toSize:updateLayer:updateTransform:caRenderer:]
  -[SCNTextureCoreAnimationSource clearValue]
  -[SCNTextureCoreAnimationSource __renderLayerUsingMetal:withCARenderer:engineContext:viewport:atTime:forceUpdate:didUpdate:]
  -[SCNTextureCoreAnimationSource cleanup:]
  -[SCNTextureCoreAnimationSource layerSizeInPixels]
  -[SCNTextureCoreAnimationSource _textureWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNTextureCoreAnimationSource __updateTextureWithLayer:texture:engineContext:sampler:]
  -[SCNTextureCoreAnimationSource supportsMetal]
  -[SCNTextureCoreAnimationSource prefersGL3]
  -[SCNTextureCoreAnimationSource renderWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNTextureCoreAnimationSource layerContentsScaleFactor]
  -[SCNTextureCoreAnimationSource textureWithEngineContext:textureSampler:nextFrameTime:]


SCNMTLMorph : NSObject
  // instance methods
  -[SCNMTLMorph dealloc]
  -[SCNMTLMorph newBufferWithLength:]
  -[SCNMTLMorph sparseIndexSize]
  -[SCNMTLMorph _prepareTargetDataForIndex:morph:baseMesh:]
  -[SCNMTLMorph _writeSources:dstTypes:sourcesCount:inBuffer:stride:length:sparse:positionScale:]
  -[SCNMTLMorph initWithMorph:baseGeometry:resourceManager:]
  -[SCNMTLMorph isCompatibleWithMorph:]
  -[SCNMTLMorph morphMesh:morph:renderContext:]
  -[SCNMTLMorph morphIncrementalMesh:morpher:renderContext:]
  -[SCNMTLMorph unifyMesh:renderContext:]
  -[SCNMTLMorph morphSparseMesh:morpher:renderContext:]


SCNMTLSkin : NSObject
  // instance methods
  -[SCNMTLSkin dealloc]
  -[SCNMTLSkin initWithSkinner:baseMesh:baseGeometry:resourceManager:]
  -[SCNMTLSkin skinMesh:with:skinner:renderContext:]


SCNPhysicsField : NSObject <NSCopying, NSSecureCoding>
 @property  double strength
 @property  double falloffExponent
 @property  double minimumDistance
 @property  BOOL active
 @property  BOOL exclusive
 @property  {SCNVector3=fff} halfExtent
 @property  BOOL usesEllipsoidalExtent
 @property  long long scope
 @property  {SCNVector3=fff} offset
 @property  {SCNVector3=fff} direction
 @property  unsigned long categoryBitMask

  // class methods
  +[SCNPhysicsField supportsSecureCoding]
  +[SCNPhysicsField field]
  +[SCNPhysicsField dragField]
  +[SCNPhysicsField vortexField]
  +[SCNPhysicsField noiseFieldWithSmoothness:animationSpeed:]
  +[SCNPhysicsField turbulenceFieldWithSmoothness:animationSpeed:]
  +[SCNPhysicsField springField]
  +[SCNPhysicsField electricField]
  +[SCNPhysicsField magneticField]
  +[SCNPhysicsField customFieldWithEvaluationBlock:]
  +[SCNPhysicsField radialGravityField]
  +[SCNPhysicsField linearGravityField]
  +[SCNPhysicsField _setDisplayScaleFactor:]
  +[SCNPhysicsField _displayScaleFactor]

  // instance methods
  -[SCNPhysicsField init]
  -[SCNPhysicsField dealloc]
  -[SCNPhysicsField copyWithZone:]
  -[SCNPhysicsField copy]
  -[SCNPhysicsField encodeWithCoder:]
  -[SCNPhysicsField initWithCoder:]
  -[SCNPhysicsField isActive]
  -[SCNPhysicsField setActive:]
  -[SCNPhysicsField _owner]
  -[SCNPhysicsField _handle]
  -[SCNPhysicsField setOffset:]
  -[SCNPhysicsField direction]
  -[SCNPhysicsField setDirection:]
  -[SCNPhysicsField offset]
  -[SCNPhysicsField scope]
  -[SCNPhysicsField setScope:]
  -[SCNPhysicsField exclusive]
  -[SCNPhysicsField setExclusive:]
  -[SCNPhysicsField _commonInit]
  -[SCNPhysicsField _setOwner:]
  -[SCNPhysicsField categoryBitMask]
  -[SCNPhysicsField setCategoryBitMask:]
  -[SCNPhysicsField setStrength:]
  -[SCNPhysicsField strength]
  -[SCNPhysicsField isExclusive]
  -[SCNPhysicsField setMinimumDistance:]
  -[SCNPhysicsField minimumDistance]
  -[SCNPhysicsField _removeOwner]
  -[SCNPhysicsField _createField]
  -[SCNPhysicsField _setupCommonProperties]
  -[SCNPhysicsField setHalfExtent:]
  -[SCNPhysicsField setFalloffExponent:]
  -[SCNPhysicsField setUsesEllipsoidalExtent:]
  -[SCNPhysicsField falloffExponent]
  -[SCNPhysicsField halfExtent]
  -[SCNPhysicsField usesEllipsoidalExtent]
  -[SCNPhysicsField supportsDirection]
  -[SCNPhysicsField supportsOffset]
  -[SCNPhysicsField _willRemoveFromPhysicsWorld]
  -[SCNPhysicsField _setWorld:]
  -[SCNPhysicsField evalAtLocation:]


SCNPhysicsLinearGravityField : SCNPhysicsField
  // instance methods
  -[SCNPhysicsLinearGravityField gravity]
  -[SCNPhysicsLinearGravityField setDirection:]
  -[SCNPhysicsLinearGravityField _createField]
  -[SCNPhysicsLinearGravityField supportsOffset]


SCNPhysicsRadialGravityField : SCNPhysicsField
  // instance methods
  -[SCNPhysicsRadialGravityField _createField]
  -[SCNPhysicsRadialGravityField supportsDirection]


SCNPhysicsSpringField : SCNPhysicsField
  // instance methods
  -[SCNPhysicsSpringField _createField]
  -[SCNPhysicsSpringField supportsDirection]


SCNPhysicsMagneticField : SCNPhysicsField
  // instance methods
  -[SCNPhysicsMagneticField setDirection:]
  -[SCNPhysicsMagneticField _createField]


SCNPhysicsElectricField : SCNPhysicsField
  // instance methods
  -[SCNPhysicsElectricField _createField]
  -[SCNPhysicsElectricField supportsDirection]


SCNPhysicsDragField : SCNPhysicsField
  // instance methods
  -[SCNPhysicsDragField _createField]
  -[SCNPhysicsDragField supportsDirection]
  -[SCNPhysicsDragField supportsOffset]


SCNPhysicsCustomField : SCNPhysicsField
 @property  @? block

  // instance methods
  -[SCNPhysicsCustomField dealloc]
  -[SCNPhysicsCustomField block]
  -[SCNPhysicsCustomField setBlock:]
  -[SCNPhysicsCustomField _createField]


SCNPhysicsVortexField : SCNPhysicsField
  // instance methods
  -[SCNPhysicsVortexField init]
  -[SCNPhysicsVortexField setDirection:]
  -[SCNPhysicsVortexField axis]
  -[SCNPhysicsVortexField _createField]


SCNPhysicsNoiseField : SCNPhysicsField
 @property  double smoothness
 @property  double animationSpeed

  // class methods
  +[SCNPhysicsNoiseField supportsSecureCoding]

  // instance methods
  -[SCNPhysicsNoiseField init]
  -[SCNPhysicsNoiseField encodeWithCoder:]
  -[SCNPhysicsNoiseField initWithCoder:]
  -[SCNPhysicsNoiseField valueForUndefinedKey:]
  -[SCNPhysicsNoiseField setValue:forUndefinedKey:]
  -[SCNPhysicsNoiseField setSmoothness:]
  -[SCNPhysicsNoiseField setAnimationSpeed:]
  -[SCNPhysicsNoiseField smoothness]
  -[SCNPhysicsNoiseField animationSpeed]
  -[SCNPhysicsNoiseField _createField]
  -[SCNPhysicsNoiseField supportsDirection]
  -[SCNPhysicsNoiseField supportsOffset]


SCNPhysicsTurbulenceField : SCNPhysicsNoiseField
  // instance methods
  -[SCNPhysicsTurbulenceField _createField]


SCNJitterer : NSObject
 @property  BOOL enabled

  // class methods
  +[SCNJitterer initialize]

  // instance methods
  -[SCNJitterer dealloc]
  -[SCNJitterer setEnabled:]
  -[SCNJitterer isEnabled]
  -[SCNJitterer update]
  -[SCNJitterer initWithDelegate:]
  -[SCNJitterer loadDelegate]
  -[SCNJitterer restart]
  -[SCNJitterer jitter]
  -[SCNJitterer stopIfNeeded]
  -[SCNJitterer delegateWillDie]
  -[SCNJitterer isAborting]


SCNPhysicsHingeJoint : SCNPhysicsBehavior
 @property  SCNPhysicsBody *bodyA
 @property  {SCNVector3=fff} axisA
 @property  {SCNVector3=fff} anchorA
 @property  SCNPhysicsBody *bodyB
 @property  {SCNVector3=fff} axisB
 @property  {SCNVector3=fff} anchorB

  // class methods
  +[SCNPhysicsHingeJoint supportsSecureCoding]
  +[SCNPhysicsHingeJoint jointWithBodyA:axisA:anchorA:bodyB:axisB:anchorB:]
  +[SCNPhysicsHingeJoint jointWithBody:axis:anchor:]

  // instance methods
  -[SCNPhysicsHingeJoint dealloc]
  -[SCNPhysicsHingeJoint encodeWithCoder:]
  -[SCNPhysicsHingeJoint initWithCoder:]
  -[SCNPhysicsHingeJoint bodyA]
  -[SCNPhysicsHingeJoint bodyB]
  -[SCNPhysicsHingeJoint initWithBodyA:axisA:anchorA:bodyB:axisB:anchorB:]
  -[SCNPhysicsHingeJoint initWithBody:axis:anchor:]
  -[SCNPhysicsHingeJoint axisA]
  -[SCNPhysicsHingeJoint setAxisA:]
  -[SCNPhysicsHingeJoint axisB]
  -[SCNPhysicsHingeJoint setAxisB:]
  -[SCNPhysicsHingeJoint anchorA]
  -[SCNPhysicsHingeJoint setAnchorA:]
  -[SCNPhysicsHingeJoint anchorB]
  -[SCNPhysicsHingeJoint setAnchorB:]
  -[SCNPhysicsHingeJoint _addToPhysicsWorld:]
  -[SCNPhysicsHingeJoint _willRemoveFromPhysicsWorld:]


SCNManipulator : NSObject
 @property  SCNAuthoringEnvironment *authoringEnvironment
 @property  {SCNMatrix4=ffffffffffffffff} transform
 @property  SCNNode *manipulatorNode
 @property  NSOrderedSet *targets
 @property  SCNNode *target
 @property  long long xAlignment
 @property  long long yAlignment
 @property  long long zAlignment
 @property  BOOL readonly
 @property  unsigned long features

  // instance methods
  -[SCNManipulator init]
  -[SCNManipulator dealloc]
  -[SCNManipulator copy]
  -[SCNManipulator setTarget:]
  -[SCNManipulator target]
  -[SCNManipulator transform]
  -[SCNManipulator features]
  -[SCNManipulator scene]
  -[SCNManipulator isDragging]
  -[SCNManipulator mouseUp:]
  -[SCNManipulator hitTest:]
  -[SCNManipulator mouseDown:]
  -[SCNManipulator setFeatures:]
  -[SCNManipulator targets]
  -[SCNManipulator mouseMoved:]
  -[SCNManipulator setTargets:]
  -[SCNManipulator authoringEnvironment]
  -[SCNManipulator updateManipulatorNode]
  -[SCNManipulator _deleteOriginalData]
  -[SCNManipulator setupNode]
  -[SCNManipulator updateManipulatorComponents]
  -[SCNManipulator effectiveEditingSpace]
  -[SCNManipulator manipulatorNode]
  -[SCNManipulator _effectiveFeatures]
  -[SCNManipulator unhighlightSelectedNode]
  -[SCNManipulator _updateActionWithEvent:]
  -[SCNManipulator _snapPositionToAlign:original:unit:axisMove:rayStart:rayDir:didSnap:snapIndexes:]
  -[SCNManipulator updateItemsPosition]
  -[SCNManipulator updateItemsRotation:]
  -[SCNManipulator updateItemsScale:]
  -[SCNManipulator _updateCloneStateWithEvent:]
  -[SCNManipulator _applyWithEvent:]
  -[SCNManipulator readonly]
  -[SCNManipulator _saveOriginalData]
  -[SCNManipulator clearSnapIndexes]
  -[SCNManipulator validateClones]
  -[SCNManipulator _prepareSnapToAlignData:minOffset:maxOffset:]
  -[SCNManipulator prepareSnapToAlignData]
  -[SCNManipulator prepareSnapToAlignDataIfNeeded]
  -[SCNManipulator _setAuthoringEnvironment:]
  -[SCNManipulator updateManipulatorPosition:]
  -[SCNManipulator editingSpaceChanged]
  -[SCNManipulator setAlternateMode:]
  -[SCNManipulator setReadonly:]
  -[SCNManipulator lockLayout]
  -[SCNManipulator unlockLayout]
  -[SCNManipulator mouseDragged:]
  -[SCNManipulator removeClonesFromScene]
  -[SCNManipulator addClonesToScene]
  -[SCNManipulator setupClones]
  -[SCNManipulator snapGuideIndexesOnAxis:]
  -[SCNManipulator snapInfoAtIndex:axis:]
  -[SCNManipulator xAlignment]
  -[SCNManipulator setXAlignment:]
  -[SCNManipulator yAlignment]
  -[SCNManipulator setYAlignment:]
  -[SCNManipulator zAlignment]
  -[SCNManipulator setZAlignment:]


SCNSpriteKitSource : SCNImageSource
 @property  SKScene *scene

  // instance methods
  -[SCNSpriteKitSource dealloc]
  -[SCNSpriteKitSource isOpaque]
  -[SCNSpriteKitSource scene]
  -[SCNSpriteKitSource setScene:]
  -[SCNSpriteKitSource textureSource]


SCNTextureSpriteKitSource : SCNTextureOffscreenRenderingSource
 @property  SKScene *scene

  // instance methods
  -[SCNTextureSpriteKitSource dealloc]
  -[SCNTextureSpriteKitSource scene]
  -[SCNTextureSpriteKitSource setScene:]
  -[SCNTextureSpriteKitSource metalTextureWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNTextureSpriteKitSource cleanup:]
  -[SCNTextureSpriteKitSource renderWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNTextureSpriteKitSource textureWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNTextureSpriteKitSource __renderSKScene:withSKSCNRenderer:engineContext:viewport:atTime:]
  -[SCNTextureSpriteKitSource __updateTextureWithSKScene:engineContext:sampler:]


SCNPhysicsContact : NSObject
 @property  SCNNode *nodeA
 @property  SCNNode *nodeB
 @property  {SCNVector3=fff} contactPoint
 @property  {SCNVector3=fff} contactNormal
 @property  double collisionImpulse
 @property  double penetrationDistance
 @property  double sweepTestFraction

  // class methods
  +[SCNPhysicsContact _contactWithManifold:index:]

  // instance methods
  -[SCNPhysicsContact dealloc]
  -[SCNPhysicsContact contactPoint]
  -[SCNPhysicsContact _setupWithManifold:index:point:]
  -[SCNPhysicsContact _fillNodeA:nodeB:contactPoint:collisionImpulse:distance:hitFraction:]
  -[SCNPhysicsContact _fillNodeA:nodeB:]
  -[SCNPhysicsContact nodeA]
  -[SCNPhysicsContact nodeB]
  -[SCNPhysicsContact contactNormal]
  -[SCNPhysicsContact collisionImpulse]
  -[SCNPhysicsContact penetrationDistance]
  -[SCNPhysicsContact sweepTestFraction]
  -[SCNPhysicsContact _prepareUpdate]
  -[SCNPhysicsContact _shouldPostUpdate]


C3DAnimationBinding : NSObject
  // instance methods
  -[C3DAnimationBinding dealloc]


SCNNodeComponent : NSObject
 @property  long long type
 @property  id component
 @property  SCNNodeComponent *next

  // instance methods
  -[SCNNodeComponent type]
  -[SCNNodeComponent setType:]
  -[SCNNodeComponent .cxx_destruct]
  -[SCNNodeComponent next]
  -[SCNNodeComponent component]
  -[SCNNodeComponent setComponent:]
  -[SCNNodeComponent setNext:]
  -[SCNNodeComponent initWithType:component:]


SCNNodeWeakComponent : NSObject
 @property  long long type
 @property  id component
 @property  SCNNodeComponent *next

  // instance methods
  -[SCNNodeWeakComponent type]
  -[SCNNodeWeakComponent setType:]
  -[SCNNodeWeakComponent .cxx_destruct]
  -[SCNNodeWeakComponent next]
  -[SCNNodeWeakComponent component]
  -[SCNNodeWeakComponent setComponent:]
  -[SCNNodeWeakComponent setNext:]
  -[SCNNodeWeakComponent initWithType:component:]


SCNActionRunBlock : SCNAction
  // class methods
  +[SCNActionRunBlock supportsSecureCoding]
  +[SCNActionRunBlock runBlock:queue:]

  // instance methods
  -[SCNActionRunBlock init]
  -[SCNActionRunBlock dealloc]
  -[SCNActionRunBlock copyWithZone:]
  -[SCNActionRunBlock encodeWithCoder:]
  -[SCNActionRunBlock initWithCoder:]
  -[SCNActionRunBlock isCustom]
  -[SCNActionRunBlock reversedAction]
  -[SCNActionRunBlock updateWithTarget:forTime:]


SCNMTLShadableKey : NSObject
  // instance methods
  -[SCNMTLShadableKey isEqual:]


SCNMetalWireframeResource : NSObject
  // instance methods
  -[SCNMetalWireframeResource dealloc]


SCNMTLResourceManager : NSObject
 @property  SCNMTLLibraryManager *libraryManager
 @property  <MTLDevice> *device
 @property  <MTLCommandQueue> *commandQueue

  // class methods
  +[SCNMTLResourceManager unregisterManagerForDevice:]
  +[SCNMTLResourceManager resourceManagerForDevice:]

  // instance methods
  -[SCNMTLResourceManager dealloc]
  -[SCNMTLResourceManager device]
  -[SCNMTLResourceManager newTextureWithDescriptor:]
  -[SCNMTLResourceManager newBufferWithLength:options:]
  -[SCNMTLResourceManager newBufferWithBytes:length:options:]
  -[SCNMTLResourceManager commandQueue]
  -[SCNMTLResourceManager initWithDevice:]
  -[SCNMTLResourceManager flush]
  -[SCNMTLResourceManager newComputePipelineStateWithFunctionName:]
  -[SCNMTLResourceManager libraryManager]
  -[SCNMTLResourceManager newRenderPipelineStateWithDesc:]
  -[SCNMTLResourceManager renderResourceForMesh:dataKind:]
  -[SCNMTLResourceManager computePipelineStateForKernel:]
  -[SCNMTLResourceManager newComputePipelineStateForKernel:withStageDescriptor:constants:constantsHash:]
  -[SCNMTLResourceManager renderResourceForMorph:baseGeometry:]
  -[SCNMTLResourceManager renderResourceForSkinner:baseMesh:baseGeometry:]
  -[SCNMTLResourceManager renderResourcesForEffectSlot:withEngineContext:]
  -[SCNMTLResourceManager defaultLightingEnvironmentRadianceTexture]
  -[SCNMTLResourceManager _meshSourceWillDie:]
  -[SCNMTLResourceManager _meshElementWillDie:]
  -[SCNMTLResourceManager _meshWillDie:]
  -[SCNMTLResourceManager _imageWillDie:]
  -[SCNMTLResourceManager _imageProxyWillDie:]
  -[SCNMTLResourceManager _programWillDie:]
  -[SCNMTLResourceManager _passWillDie:]
  -[SCNMTLResourceManager _materialWillDie:]
  -[SCNMTLResourceManager _geometryWillDie:]
  -[SCNMTLResourceManager _morphWillDie:]
  -[SCNMTLResourceManager _skinWillDie:]
  -[SCNMTLResourceManager _programHashCodeWillDie:]
  -[SCNMTLResourceManager _removeMatchingProgram:pass:]
  -[SCNMTLResourceManager renderResourceForMeshElement:]
  -[SCNMTLResourceManager _bufferForData:bytesPerIndex:]
  -[SCNMTLResourceManager __updateMutableMesh:withMetalMesh:]
  -[SCNMTLResourceManager renderResourceForMeshSource:]
  -[SCNMTLResourceManager newConstantBufferWithLength:options:]
  -[SCNMTLResourceManager renderResourceForSampler:]
  -[SCNMTLResourceManager removeAllShaders]
  -[SCNMTLResourceManager resetRasterizerStates]
  -[SCNMTLResourceManager renderResourceForRasterizerState:reverseZ:]
  -[SCNMTLResourceManager renderResourceForTessellatedGeometry:]
  -[SCNMTLResourceManager wireframeResourceForRendererElement:engineContext:passInstance:hashPass:]
  -[SCNMTLResourceManager newIndexBufferWithLength:options:]
  -[SCNMTLResourceManager renderResourceForMaterial:geometry:renderPipeline:engineContext:]
  -[SCNMTLResourceManager dispatchForTexture:computeEncoder:pipelineState:]
  -[SCNMTLResourceManager dispatchForCubemap:computeEncoder:pipelineState:]
  -[SCNMTLResourceManager stats]
  -[SCNMTLResourceManager depthAndStencilStateWithReadWriteDepthDisabled]
  -[SCNMTLResourceManager setLibraryManager:]
  -[SCNMTLResourceManager newComputePipelineStateWithFunctionName:constantValues:]
  -[SCNMTLResourceManager cubemapTextureForLatlongTexture:pixelFormat:engineContext:needsMipmap:]
  -[SCNMTLResourceManager renderResourceForImageProxy:sampler:engineContext:]
  -[SCNMTLResourceManager renderResourceForImage:sampler:options:engineContext:]
  -[SCNMTLResourceManager _textureDescriptorFromImage:needsMipMap:textureOptions:]
  -[SCNMTLResourceManager _copyImage:toTexture:desc:textureOptions:needsMipMapGeneration:]
  -[SCNMTLResourceManager convertTextureToCubeMapIfApplicable:engineContext:needsMipmap:]
  -[SCNMTLResourceManager newTextureUsingMTKTextureLoaderWithURL:options:]
  -[SCNMTLResourceManager _enqueueCopyFromTexture:toTexture:blitEncoder:generateMipMaps:]
  -[SCNMTLResourceManager latlongTextureForCubemap:pixelFormat:renderContext:needsMipmap:]
  -[SCNMTLResourceManager unstageTexture:commandBuffer:]
  -[SCNMTLResourceManager defaultTexture]
  -[SCNMTLResourceManager defaultCubeTexture]
  -[SCNMTLResourceManager defaultTexture3D]
  -[SCNMTLResourceManager iesTextureForProfile:renderContext:]
  -[SCNMTLResourceManager reloadPipelinesIfNeeded]
  -[SCNMTLResourceManager irradianceTextureForEnvironmentTexture:renderContext:applySH:]
  -[SCNMTLResourceManager radianceTextureForEnvironmentTexture:engineContext:commandBuffer:]
  -[SCNMTLResourceManager renderResourceForProgramDesc:renderPassDescriptor:]
  -[SCNMTLResourceManager specularDFGTextureWithRenderContext:]
  -[SCNMTLResourceManager areaLightPrecomputedDataTexture]
  -[SCNMTLResourceManager defaultLightingEnvironmentIrradianceTexture]
  -[SCNMTLResourceManager defaultProgramUsingTessellation:]
  -[SCNMTLResourceManager _bakeSphericalHamonicsBasedIrradianceTexture:forEnvironmentTexture:renderContext:applySH:]
  -[SCNMTLResourceManager sphericalHarmonicsForEnvironmentTexture:order:commandBuffer:]
  -[SCNMTLResourceManager newRadianceTextureForEnvironmentTexture:engineContext:cpuAccessible:commandBuffer:]
  -[SCNMTLResourceManager _bakeStochasticIrradianceTexture:forEnvironmentTexture:mipmapLevelForSampling:useTextureView:renderContext:]
  -[SCNMTLResourceManager textureForSamplingTexture:atSize:mipmapLevelCount:renderContext:]
  -[SCNMTLResourceManager shFromCPU:commandBuffer:]
  -[SCNMTLResourceManager newComputePipelineStateWithFunctionName:library:]
  -[SCNMTLResourceManager _createPipelineStateWithDescriptor:desc:pipeline:]
  -[SCNMTLResourceManager _newComputeDescriptorForPipelineDesc:library:]
  -[SCNMTLResourceManager _configureComputePipeline:withDescriptor:]
  -[SCNMTLResourceManager newComputePipelineStateForDesc:library:]
  -[SCNMTLResourceManager getUniqueStageDescriptor:]
  -[SCNMTLResourceManager computePipelineStateForKernel:threadGroupSizeIsMultipleOfThreadExecutionWidth:]
  -[SCNMTLResourceManager newComputePipelineStateWithFunctionName:library:constantValues:]


SCNRenderTarget : NSObject
 @property  id texture
 @property  NSString *name
 @property  long long referenceCount
 @property  long long timeStamp
 @property  BOOL viewportDependant
 @property  unsigned char renderBufferFormat

  // instance methods
  -[SCNRenderTarget dealloc]
  -[SCNRenderTarget name]
  -[SCNRenderTarget setName:]
  -[SCNRenderTarget setTexture:]
  -[SCNRenderTarget texture]
  -[SCNRenderTarget timeStamp]
  -[SCNRenderTarget setTimeStamp:]
  -[SCNRenderTarget ciImage]
  -[SCNRenderTarget initWithDescription:size:arrayLength:]
  -[SCNRenderTarget viewportDependant]
  -[SCNRenderTarget renderBufferFormat]
  -[SCNRenderTarget matchesDescription:size:arrayLength:]
  -[SCNRenderTarget textureForSliceIndex:]
  -[SCNRenderTarget referenceCount]
  -[SCNRenderTarget setReferenceCount:]


SCNActionPlaySound : SCNAction
  // class methods
  +[SCNActionPlaySound supportsSecureCoding]
  +[SCNActionPlaySound playAudioSource:waitForCompletion:]

  // instance methods
  -[SCNActionPlaySound init]
  -[SCNActionPlaySound copyWithZone:]
  -[SCNActionPlaySound encodeWithCoder:]
  -[SCNActionPlaySound initWithCoder:]
  -[SCNActionPlaySound parameters]
  -[SCNActionPlaySound reversedAction]
  -[SCNActionPlaySound _setupDuration]


SCNTechnique : NSObject <SCNAnimatable, NSCopying, NSSecureCoding>
 @property  NSDictionary *dictionaryRepresentation
 @property  <MTLLibrary> *library
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *animationKeys

  // class methods
  +[SCNTechnique supportsSecureCoding]
  +[SCNTechnique techniqueWithDictionary:]
  +[SCNTechnique techniqueBySequencingTechniques:]
  +[SCNTechnique techniqueWithTechniqueRef:]

  // instance methods
  -[SCNTechnique dealloc]
  -[SCNTechnique copyWithZone:]
  -[SCNTechnique copy]
  -[SCNTechnique encodeWithCoder:]
  -[SCNTechnique initWithCoder:]
  -[SCNTechnique objectForKeyedSubscript:]
  -[SCNTechnique setObject:forKeyedSubscript:]
  -[SCNTechnique valueForUndefinedKey:]
  -[SCNTechnique setValue:forUndefinedKey:]
  -[SCNTechnique dictionaryRepresentation]
  -[SCNTechnique scene]
  -[SCNTechnique addAnimation:]
  -[SCNTechnique animationForKey:]
  -[SCNTechnique removeAnimationForKey:]
  -[SCNTechnique addAnimation:forKey:]
  -[SCNTechnique removeAllAnimations]
  -[SCNTechnique animationKeys]
  -[SCNTechnique library]
  -[SCNTechnique setLibrary:]
  -[SCNTechnique passAtIndex:]
  -[SCNTechnique __CFObject]
  -[SCNTechnique sceneRef]
  -[SCNTechnique initWithTechniqueRef:]
  -[SCNTechnique techniqueRef]
  -[SCNTechnique _symbolsAssignedValues]
  -[SCNTechnique setValue:forSymbolNamed:]
  -[SCNTechnique addAnimationPlayer:forKey:]
  -[SCNTechnique _scnAnimationForKey:]
  -[SCNTechnique animationPlayerForKey:]
  -[SCNTechnique animationManager]
  -[SCNTechnique _pauseAnimation:forKey:pausedByNode:]
  -[SCNTechnique removeAnimationForKey:blendOutDuration:]
  -[SCNTechnique initPresentationTechniqueWithTechniqueRef:]
  -[SCNTechnique _setupPasses]
  -[SCNTechnique _customEncodingOfSCNTechnique:]
  -[SCNTechnique _customDecodingOfSCNTechnique:]
  -[SCNTechnique removeAnimationForKey:fadeOutDuration:]
  -[SCNTechnique pauseAnimationForKey:]
  -[SCNTechnique resumeAnimationForKey:]
  -[SCNTechnique setSpeed:forAnimationKey:]
  -[SCNTechnique isAnimationForKeyPaused:]
  -[SCNTechnique handleBindingOfSymbol:usingBlock:]
  -[SCNTechnique valueForSymbolNamed:]
  -[SCNTechnique __removeAnimation:forKey:]
  -[SCNTechnique _syncObjCAnimations]
  -[SCNTechnique _copyAnimationsFrom:]
  -[SCNTechnique _scnBindings]
  -[SCNTechnique bindAnimatablePath:toObject:withKeyPath:options:]
  -[SCNTechnique unbindAnimatablePath:]
  -[SCNTechnique removeAllBindings]
  -[SCNTechnique copyAnimationChannelForKeyPath:animation:]
  -[SCNTechnique isPausedOrPausedByInheritance]
  -[SCNTechnique presentationInstance]
  -[SCNTechnique _didInstallInEngineContext:]


SCNPassContext : NSObject
 @property  double time
 @property  <MTLCommandQueue> *commandQueue
 @property  <MTLCommandBuffer> *commandBuffer
 @property  <MTLDevice> *device

  // instance methods
  -[SCNPassContext time]
  -[SCNPassContext device]
  -[SCNPassContext commandBuffer]
  -[SCNPassContext commandQueue]
  -[SCNPassContext inputTextureWithName:]
  -[SCNPassContext outputTextureWithName:]


SCNPass : NSObject
 @property  @? initializationHandler
 @property  @? executionHandler

  // instance methods
  -[SCNPass dealloc]
  -[SCNPass invalidate]
  -[SCNPass initWithFXPass:technique:]
  -[SCNPass setInitializationHandler:]
  -[SCNPass initializationHandler]
  -[SCNPass setExecutionHandler:]
  -[SCNPass executionHandler]
  -[SCNPass setValue:forPassPropertyKey:]
  -[SCNPass valueForPassPropertyKey:]


SCNPhysicsShape : NSObject <NSCopying, NSSecureCoding>
 @property  NSDictionary *options
 @property  id sourceObject
 @property  NSArray *transforms

  // class methods
  +[SCNPhysicsShape supportsSecureCoding]
  +[SCNPhysicsShape shapeWithGeometry:options:]
  +[SCNPhysicsShape shapeWithNode:options:]
  +[SCNPhysicsShape shapeWithShapes:transforms:]
  +[SCNPhysicsShape defaultShapeForGeometry:]

  // instance methods
  -[SCNPhysicsShape dealloc]
  -[SCNPhysicsShape copyWithZone:]
  -[SCNPhysicsShape copy]
  -[SCNPhysicsShape options]
  -[SCNPhysicsShape encodeWithCoder:]
  -[SCNPhysicsShape initWithCoder:]
  -[SCNPhysicsShape _handle]
  -[SCNPhysicsShape transforms]
  -[SCNPhysicsShape sourceObject]
  -[SCNPhysicsShape initWithContent:options:]
  -[SCNPhysicsShape _setTransforms:]
  -[SCNPhysicsShape _customEncodingOfSCNPhysicsShape:]
  -[SCNPhysicsShape _customDecodingOfSCNPhysicsShape:]
  -[SCNPhysicsShape setReferenceObject:]
  -[SCNPhysicsShape initWithCachedObject:options:]
  -[SCNPhysicsShape referenceObject]


SCNActionWait : SCNAction
  // class methods
  +[SCNActionWait supportsSecureCoding]
  +[SCNActionWait waitForDuration:withRange:]
  +[SCNActionWait waitForDuration:]

  // instance methods
  -[SCNActionWait init]
  -[SCNActionWait encodeWithCoder:]
  -[SCNActionWait initWithCoder:]
  -[SCNActionWait reversedAction]


SCNPhysicsCharacter : SCNPhysicsBehavior
 @property  double velocity
 @property  double jumpSpeed

  // instance methods
  -[SCNPhysicsCharacter dealloc]
  -[SCNPhysicsCharacter _update]
  -[SCNPhysicsCharacter velocity]
  -[SCNPhysicsCharacter setVelocity:]
  -[SCNPhysicsCharacter setWalkingDirection:]
  -[SCNPhysicsCharacter _addToPhysicsWorld:]
  -[SCNPhysicsCharacter _willRemoveFromPhysicsWorld:]
  -[SCNPhysicsCharacter _handleCreateIfNeeded:]
  -[SCNPhysicsCharacter initWithCharacter:]
  -[SCNPhysicsCharacter canJump]
  -[SCNPhysicsCharacter jump]
  -[SCNPhysicsCharacter setJumpSpeed:]
  -[SCNPhysicsCharacter jumpSpeed]


SCNMaterialPropertyTextureProviderSource : SCNTextureSource <SCNMaterialPropertyTextureProviderHelper>
 @property  <SCNMaterialPropertyTextureProvider> *textureProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCNMaterialPropertyTextureProviderSource dealloc]
  -[SCNMaterialPropertyTextureProviderSource metalTextureWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNMaterialPropertyTextureProviderSource cleanup:]
  -[SCNMaterialPropertyTextureProviderSource renderWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNMaterialPropertyTextureProviderSource cachedTextureWithURL:token:]
  -[SCNMaterialPropertyTextureProviderSource setTextureProvider:]
  -[SCNMaterialPropertyTextureProviderSource textureProvider]
  -[SCNMaterialPropertyTextureProviderSource connectToProxy:]


SCNReferenceNode : SCNNode
 @property  NSURL *referenceURL
 @property  long long loadingPolicy
 @property  BOOL loaded

  // class methods
  +[SCNReferenceNode supportsSecureCoding]
  +[SCNReferenceNode referenceNodeWithURL:]

  // instance methods
  -[SCNReferenceNode dealloc]
  -[SCNReferenceNode load]
  -[SCNReferenceNode copyWithZone:]
  -[SCNReferenceNode encodeWithCoder:]
  -[SCNReferenceNode initWithCoder:]
  -[SCNReferenceNode initWithURL:]
  -[SCNReferenceNode unload]
  -[SCNReferenceNode isLoaded]
  -[SCNReferenceNode referenceURL]
  -[SCNReferenceNode _catalog]
  -[SCNReferenceNode setOverrides:]
  -[SCNReferenceNode overrides]
  -[SCNReferenceNode _resolveURL]
  -[SCNReferenceNode setReferenceURL:]
  -[SCNReferenceNode _isNameUnique:]
  -[SCNReferenceNode _diffObject:with:path:]
  -[SCNReferenceNode _diffNode:with:path:]
  -[SCNReferenceNode removeAllOverrides]
  -[SCNReferenceNode _loadReferencedSceneWithURL:catalog:]
  -[SCNReferenceNode _applyUnsharing:alreadyShared:]
  -[SCNReferenceNode _applyOverride:forKeyPath:]
  -[SCNReferenceNode setLoadingPolicy:]
  -[SCNReferenceNode _loadWithCatalog:]
  -[SCNReferenceNode _loadWithURL:catalog:]
  -[SCNReferenceNode _applyOverrides]
  -[SCNReferenceNode collectOverrides]
  -[SCNReferenceNode addOverride:forKeyPath:]
  -[SCNReferenceNode removeForKeyPath:]
  -[SCNReferenceNode setOverride:forKeyPath:]
  -[SCNReferenceNode _isAReference]
  -[SCNReferenceNode _loadWithURL:]
  -[SCNReferenceNode loadingPolicy]


SCNNodeReference : SCNReferenceNode
 @property  NSString *referenceSceneName
 @property  NSString *referenceNodeName

  // instance methods
  -[SCNNodeReference dealloc]
  -[SCNNodeReference _reloadWithScene:]
  -[SCNNodeReference referenceSceneName]
  -[SCNNodeReference setReferenceSceneName:]
  -[SCNNodeReference referenceNodeName]
  -[SCNNodeReference setReferenceNodeName:]


SCNAnimationReference : CAAnimationGroup /System/Library/Frameworks/MetalKit.framework/MetalKit
 @property  NSString *referenceName

  // instance methods
  -[SCNAnimationReference dealloc]
  -[SCNAnimationReference copyWithZone:]
  -[SCNAnimationReference encodeWithCoder:]
  -[SCNAnimationReference initWithCoder:]
  -[SCNAnimationReference _isAReference]
  -[SCNAnimationReference setReferenceName:]
  -[SCNAnimationReference referenceName]


SCNActionReference : SCNActionGroup
 @property  NSString *referenceName

  // instance methods
  -[SCNActionReference dealloc]
  -[SCNActionReference copyWithZone:]
  -[SCNActionReference encodeWithCoder:]
  -[SCNActionReference initWithCoder:]
  -[SCNActionReference _isAReference]
  -[SCNActionReference setReferenceName:]
  -[SCNActionReference referenceName]


SCNMTLRenderContext : NSObject <SCNBufferStream>
 @property  long long pendingGPUFrameCount
 @property  long long sampleCount
 @property  double contentScaleFactor
 @property  double superSamplingFactor
 @property  {SCNMatrix4=ffffffffffffffff} screenTransform
 @property  BOOL wantsWideGamut
 @property  BOOL disableLinearRendering
 @property  BOOL enableARMode
 @property  BOOL shouldDelegateARCompositing
 @property  BOOL isOpaque
 @property  long long currentFrameIndex
 @property  BOOL showsAuthoringEnvironment
 @property  BOOL enablesDeferredShading
 @property  BOOL reverseZ
 @property  BOOL collectsCompilationErrors
 @property  NSMutableDictionary *compilationErrors
 @property  NSString *generatedTexturePath
 @property  unsigned int features
 @property  int profile
 @property  SCNMTLResourceManager *resourceManager
 @property  unsigned long debugOptions
 @property  <MTLRenderCommandEncoder> *currentRenderCommandEncoder
 @property  MTLRenderPassDescriptor *currentRenderPassDescriptor
 @property  <MTLCommandBuffer> *currentCommandBuffer
 @property  <MTLCommandBuffer> *resourceCommandBuffer
 @property  ^{SCNMTLComputeCommandEncoder=[31@][31Q][128@][16@]@@@^{SCNMTLBufferPool}I[2Q][1Q]} resourceComputeEncoder
 @property  ^{SCNMTLBlitCommandEncoder=@@} resourceBlitEncoder
 @property  <MTLDevice> *device
 @property  ^{__C3DEngineContext=} engineContext
 @property  <MTLTexture> *textureTarget
 @property  CAMetalLayer *layerTarget
 @property  long long preferredFramesPerSecond
 @property  BOOL shouldPresentAfterMinimumDuration
 @property  NSObject<OS_dispatch_queue> *resourceQueue
 @property  NSObject<OS_dispatch_group> *resourceGroup
 @property  MTLRenderPassDescriptor *clientRenderPassDescriptor
 @property  <MTLRenderCommandEncoder> *clientRenderCommandEncoder
 @property  <MTLCommandBuffer> *clientCommandBuffer
 @property  <MTLCommandQueue> *clientCommandQueue
 @property  <MTLCommandQueue> *commandQueue
 @property  ^v frameConstantBufferPool
 @property  ^v frameTexturePool
 @property  ^v renderEncoder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCNMTLRenderContext registerBindings]

  // instance methods
  -[SCNMTLRenderContext dealloc]
  -[SCNMTLRenderContext .cxx_destruct]
  -[SCNMTLRenderContext .cxx_construct]
  -[SCNMTLRenderContext device]
  -[SCNMTLRenderContext isOpaque]
  -[SCNMTLRenderContext commandQueue]
  -[SCNMTLRenderContext pushDebugGroup:]
  -[SCNMTLRenderContext popDebugGroup]
  -[SCNMTLRenderContext sampleCount]
  -[SCNMTLRenderContext setSampleCount:]
  -[SCNMTLRenderContext profile]
  -[SCNMTLRenderContext features]
  -[SCNMTLRenderContext contentScaleFactor]
  -[SCNMTLRenderContext setContentScaleFactor:]
  -[SCNMTLRenderContext setPreferredFramesPerSecond:]
  -[SCNMTLRenderContext preferredFramesPerSecond]
  -[SCNMTLRenderContext renderSize]
  -[SCNMTLRenderContext writeBytes:length:]
  -[SCNMTLRenderContext resourceManager]
  -[SCNMTLRenderContext renderEncoder]
  -[SCNMTLRenderContext resourceQueue]
  -[SCNMTLRenderContext mapVolatileMesh:verticesCount:]
  -[SCNMTLRenderContext unmapVolatileMesh:modifiedVerticesCount:]
  -[SCNMTLRenderContext drawRenderElement:withPass:]
  -[SCNMTLRenderContext screenTransform]
  -[SCNMTLRenderContext textureForEffectSlot:]
  -[SCNMTLRenderContext enableARMode]
  -[SCNMTLRenderContext shouldDelegateARCompositing]
  -[SCNMTLRenderContext _drawFullScreenTexture:over:]
  -[SCNMTLRenderContext resourceComputeEncoder]
  -[SCNMTLRenderContext currentFrameIndex]
  -[SCNMTLRenderContext engineContext]
  -[SCNMTLRenderContext textureTarget]
  -[SCNMTLRenderContext layerTarget]
  -[SCNMTLRenderContext showsAuthoringEnvironment]
  -[SCNMTLRenderContext renderSKSceneWithRenderer:overlay:atTime:]
  -[SCNMTLRenderContext cubeArrayTypeIfSupported]
  -[SCNMTLRenderContext _finalRenderTexture]
  -[SCNMTLRenderContext clientRenderPassDescriptor]
  -[SCNMTLRenderContext frameConstantBufferPool]
  -[SCNMTLRenderContext currentCommandBuffer]
  -[SCNMTLRenderContext clientRenderCommandEncoder]
  -[SCNMTLRenderContext clientCommandBuffer]
  -[SCNMTLRenderContext beginRenderPass:renderEncoder:parameters:]
  -[SCNMTLRenderContext endRenderPass]
  -[SCNMTLRenderContext frameTexturePool]
  -[SCNMTLRenderContext reverseZ]
  -[SCNMTLRenderContext stats]
  -[SCNMTLRenderContext renderMesh:meshElement:withProgram:engineContext:transform:color:rasterizerStates:blendState:texture:depthBias:]
  -[SCNMTLRenderContext resourceBlitEncoder]
  -[SCNMTLRenderContext renderVideoBackground:engineContext:]
  -[SCNMTLRenderContext renderBackground:engineContext:passInstance:]
  -[SCNMTLRenderContext supportsMTLFeatureSet:]
  -[SCNMTLRenderContext enablesDeferredShading]
  -[SCNMTLRenderContext disableLinearRendering]
  -[SCNMTLRenderContext setGeneratedTexturePath:]
  -[SCNMTLRenderContext setClientCommandBuffer:]
  -[SCNMTLRenderContext setClientRenderPassDescriptor:]
  -[SCNMTLRenderContext setClientRenderCommandEncoder:]
  -[SCNMTLRenderContext clientCommandQueue]
  -[SCNMTLRenderContext resetVolatileMeshes]
  -[SCNMTLRenderContext resetVolatileMeshElements]
  -[SCNMTLRenderContext setClientCommandQueue:]
  -[SCNMTLRenderContext _createResourceCommandBufferIfNeeded]
  -[SCNMTLRenderContext _clearRenderCaches]
  -[SCNMTLRenderContext resourceCommandBuffer]
  -[SCNMTLRenderContext _updateProjectionMatrixForOrthographicSkyboxRenderingIfNeeded:]
  -[SCNMTLRenderContext setRasterizerStates:]
  -[SCNMTLRenderContext _zFarForSkyboxRenderingProjectionMatrix:defaultZFar:]
  -[SCNMTLRenderContext _setMeshBuffers:]
  -[SCNMTLRenderContext _drawMeshElement:instanceCount:]
  -[SCNMTLRenderContext startProcessingRendererElementsWithEngineIterationContext:]
  -[SCNMTLRenderContext beginDeferredLighting]
  -[SCNMTLRenderContext renderLight:lightType:lightData:]
  -[SCNMTLRenderContext endDeferredLighting]
  -[SCNMTLRenderContext debugOptions]
  -[SCNMTLRenderContext drawWireframeOverlayForElements:range:store:passInstance:]
  -[SCNMTLRenderContext stopProcessingRendererElements:]
  -[SCNMTLRenderContext _drawPBRTextures]
  -[SCNMTLRenderContext _drawShadowMaps]
  -[SCNMTLRenderContext irradianceTextureForEffectSlot:]
  -[SCNMTLRenderContext _newMTLBufferFromPoolWithLength:]
  -[SCNMTLRenderContext _recycleMTLBufferToPool:]
  -[SCNMTLRenderContext _createPassWithVertex:fragment:]
  -[SCNMTLRenderContext currentRenderPassDescriptor]
  -[SCNMTLRenderContext radianceTextureForEffectSlot:]
  -[SCNMTLRenderContext _reduceStatsOfConstantBuffer:]
  -[SCNMTLRenderContext initWithDevice:engineContext:]
  -[SCNMTLRenderContext setScreenTransform:]
  -[SCNMTLRenderContext setWantsWideGamut:]
  -[SCNMTLRenderContext wantsWideGamut]
  -[SCNMTLRenderContext pendingGPUFrameCount]
  -[SCNMTLRenderContext setDisableLinearRendering:]
  -[SCNMTLRenderContext setEnableARMode:]
  -[SCNMTLRenderContext setShouldDelegateARCompositing:]
  -[SCNMTLRenderContext setReverseZ:]
  -[SCNMTLRenderContext setIsOpaque:]
  -[SCNMTLRenderContext _clearUnusedBindingPoints]
  -[SCNMTLRenderContext setRendererPremultipliedBackgroundColor:]
  -[SCNMTLRenderContext resourceGroup]
  -[SCNMTLRenderContext beginFrame:]
  -[SCNMTLRenderContext endFrameSceneSpecifics]
  -[SCNMTLRenderContext endFrameWaitingUntilCompleted:]
  -[SCNMTLRenderContext _reflectionProbeArrayTexture]
  -[SCNMTLRenderContext _setReflectionProbeArrayTexture:]
  -[SCNMTLRenderContext _clusterInfo]
  -[SCNMTLRenderContext newRenderTargetWithDescription:size:arrayLength:]
  -[SCNMTLRenderContext _logLightingInformation]
  -[SCNMTLRenderContext _setSceneBufferAtVertexIndex:fragmentIndex:]
  -[SCNMTLRenderContext _drawPatchForMeshElement:instanceCount:]
  -[SCNMTLRenderContext processRendererElements:count:engineIterationContext:]
  -[SCNMTLRenderContext _prepareMaterialTextures:]
  -[SCNMTLRenderContext setShowsAuthoringEnvironment:]
  -[SCNMTLRenderContext collectsCompilationErrors]
  -[SCNMTLRenderContext setCollectsCompilationErrors:]
  -[SCNMTLRenderContext compilationErrors]
  -[SCNMTLRenderContext createVolatileMeshElementOfType:primitiveCount:bytesPerIndex:]
  -[SCNMTLRenderContext unmapVolatileMeshElement:]
  -[SCNMTLRenderContext drawFullScreenQuadForPass:]
  -[SCNMTLRenderContext currentRenderCommandEncoder]
  -[SCNMTLRenderContext renderTime]
  -[SCNMTLRenderContext endRenderCommandEncoding]
  -[SCNMTLRenderContext setCurrentPassHash:]
  -[SCNMTLRenderContext setCurrentPassMaterial:]
  -[SCNMTLRenderContext getCurrentPassHash]
  -[SCNMTLRenderContext getCurrentPassMaterial]
  -[SCNMTLRenderContext setDebugOptions:]
  -[SCNMTLRenderContext setEnablesDeferredShading:]
  -[SCNMTLRenderContext shouldPresentAfterMinimumDuration]
  -[SCNMTLRenderContext setShouldPresentAfterMinimumDuration:]
  -[SCNMTLRenderContext superSamplingFactor]
  -[SCNMTLRenderContext setSuperSamplingFactor:]
  -[SCNMTLRenderContext generatedTexturePath]


SCNPhysicsBehavior : NSObject <NSSecureCoding>
  // class methods
  +[SCNPhysicsBehavior supportsSecureCoding]

  // instance methods
  -[SCNPhysicsBehavior encodeWithCoder:]
  -[SCNPhysicsBehavior initWithCoder:]
  -[SCNPhysicsBehavior bodyA]
  -[SCNPhysicsBehavior bodyB]
  -[SCNPhysicsBehavior hasReferenceToPhysicsBody:]


SCNMTLBufferAllocatorSubBuffer : SCNMTLBuffer
  // instance methods
  -[SCNMTLBufferAllocatorSubBuffer dealloc]
  -[SCNMTLBufferAllocatorSubBuffer initWithPage:]


SCNFixedSizePage : NSObject
 @property  <MTLBuffer> *buffer

  // instance methods
  -[SCNFixedSizePage dealloc]
  -[SCNFixedSizePage buffer]
  -[SCNFixedSizePage isFull]
  -[SCNFixedSizePage deallocateElementAtOffset:]
  -[SCNFixedSizePage _allocateElement]
  -[SCNFixedSizePage initWithBuffer:elementSize:]
  -[SCNFixedSizePage hasFreeElementsLeft]
  -[SCNFixedSizePage newSubBuffer]


SCNMTLBufferAllocator : NSObject
 @property  unsigned long bufferSize
 @property  unsigned long elementSize

  // instance methods
  -[SCNMTLBufferAllocator dealloc]
  -[SCNMTLBufferAllocator elementSize]
  -[SCNMTLBufferAllocator bufferSize]
  -[SCNMTLBufferAllocator initWithDevice:fixedSizeElement:buffersize:name:]
  -[SCNMTLBufferAllocator newSubBufferWithBytes:length:renderContext:]
  -[SCNMTLBufferAllocator _newSubBuffer]


SCNStatisticsProvider : NSObject
  // instance methods
  -[SCNStatisticsProvider startCollectingPerformanceStatisticsForPid:]
  -[SCNStatisticsProvider stopCollectingPerformanceStatisticsForPid:]
  -[SCNStatisticsProvider performanceStatisticsForPid:]
  -[SCNStatisticsProvider collectedShadersForPid:]


SCNWeakPointer : NSObject
 @property  id weakRef

  // instance methods
  -[SCNWeakPointer .cxx_destruct]
  -[SCNWeakPointer weakRef]
  -[SCNWeakPointer copyWeakRef]
  -[SCNWeakPointer setWeakRef:]


SCNActionPerformSelector : SCNAction
  // class methods
  +[SCNActionPerformSelector supportsSecureCoding]
  +[SCNActionPerformSelector performSelector:onTarget:]

  // instance methods
  -[SCNActionPerformSelector init]
  -[SCNActionPerformSelector dealloc]
  -[SCNActionPerformSelector copyWithZone:]
  -[SCNActionPerformSelector encodeWithCoder:]
  -[SCNActionPerformSelector initWithCoder:]
  -[SCNActionPerformSelector isCustom]
  -[SCNActionPerformSelector reversedAction]
  -[SCNActionPerformSelector updateWithTarget:forTime:]


SCNCameraController : NSObject
 @property  BOOL drivenByDefaultNavigationCameraController
 @property  void simdUp
 @property  void simdTarget
 @property  {SCNVector3=fff} up
 @property  float verticalMaximumAngle
 @property  float horizontalMaximumAngle
 @property  <SCNCameraControllerDelegate> *delegate
 @property  SCNNode *pointOfView
 @property  long long interactionMode
 @property  {SCNVector3=fff} target
 @property  BOOL automaticTarget
 @property  {SCNVector3=fff} worldUp
 @property  BOOL inertiaEnabled
 @property  float inertiaFriction
 @property  BOOL inertiaRunning
 @property  float minimumVerticalAngle
 @property  float maximumVerticalAngle
 @property  float minimumHorizontalAngle
 @property  float maximumHorizontalAngle

  // instance methods
  -[SCNCameraController init]
  -[SCNCameraController dealloc]
  -[SCNCameraController delegate]
  -[SCNCameraController setDelegate:]
  -[SCNCameraController setTarget:]
  -[SCNCameraController target]
  -[SCNCameraController interactionMode]
  -[SCNCameraController _endDraggingWithVelocity:]
  -[SCNCameraController setUp:]
  -[SCNCameraController up]
  -[SCNCameraController _setInertiaRunning:]
  -[SCNCameraController simdTarget]
  -[SCNCameraController setSimdTarget:]
  -[SCNCameraController simdUp]
  -[SCNCameraController setSimdUp:]
  -[SCNCameraController setPointOfView:updateUpTransform:]
  -[SCNCameraController isInertiaRunning]
  -[SCNCameraController maximumVerticalAngle]
  -[SCNCameraController maximumHorizontalAngle]
  -[SCNCameraController setMaximumVerticalAngle:]
  -[SCNCameraController setMaximumHorizontalAngle:]
  -[SCNCameraController _translateInCameraSpaceByX:Y:Z:]
  -[SCNCameraController pointOfView]
  -[SCNCameraController _resetOrientationState]
  -[SCNCameraController _rotateByX:Y:]
  -[SCNCameraController _directionForScreenPoint:viewport:]
  -[SCNCameraController useOrbitInteractionMode]
  -[SCNCameraController unrolledWorldOrientation:]
  -[SCNCameraController automaticTarget]
  -[SCNCameraController _mapToSphere:inViewport:]
  -[SCNCameraController rotateByX:Y:]
  -[SCNCameraController _updateArcballOrientation]
  -[SCNCameraController drivenByDefaultNavigationCameraController]
  -[SCNCameraController _updateRotation]
  -[SCNCameraController _capOrientationAnglesToMaximum]
  -[SCNCameraController _orientationForMode]
  -[SCNCameraController _convertRotationFromWorldToPointOfView:]
  -[SCNCameraController _updateInertiaAtTime:]
  -[SCNCameraController worldUp]
  -[SCNCameraController setWorldUp:]
  -[SCNCameraController setPointOfView:]
  -[SCNCameraController setInteractionMode:]
  -[SCNCameraController inertiaEnabled]
  -[SCNCameraController setInertiaEnabled:]
  -[SCNCameraController inertiaFriction]
  -[SCNCameraController setInertiaFriction:]
  -[SCNCameraController minimumVerticalAngle]
  -[SCNCameraController minimumHorizontalAngle]
  -[SCNCameraController setMinimumVerticalAngle:]
  -[SCNCameraController setMinimumHorizontalAngle:]
  -[SCNCameraController verticalMaximumAngle]
  -[SCNCameraController horizontalMaximumAngle]
  -[SCNCameraController setVerticalMaximumAngle:]
  -[SCNCameraController setHorizontalMaximumAngle:]
  -[SCNCameraController translateInCameraSpaceByX:Y:Z:]
  -[SCNCameraController translateInScreenSpaceTo:viewport:]
  -[SCNCameraController rollCameraSpaceBy:withPoint:viewport:]
  -[SCNCameraController rollAroundTarget:]
  -[SCNCameraController dollyToTarget:]
  -[SCNCameraController clearRoll]
  -[SCNCameraController stopInertia]
  -[SCNCameraController frameNodes:]
  -[SCNCameraController lookAtWith:target:]
  -[SCNCameraController beginInteraction:withViewport:]
  -[SCNCameraController continueInteraction:withViewport:sensitivity:]
  -[SCNCameraController endInteraction:withViewport:velocity:]
  -[SCNCameraController rollBy:aroundScreenPoint:viewport:]
  -[SCNCameraController dollyBy:onScreenPoint:viewport:]
  -[SCNCameraController _targetRelativeToPointOfViewParent]
  -[SCNCameraController _isLocationValid:inViewport:]
  -[SCNCameraController setAutomaticTarget:]
  -[SCNCameraController _orthographicViewSpaceTranslationForZoomAtScreenPoint:scaleDelta:viewport:]
  -[SCNCameraController updateInertiaAtTime:]
  -[SCNCameraController setDrivenByDefaultNavigationCameraController:]


SCNAction : NSObject <NSCopying, NSSecureCoding>
 @property  double duration
 @property  long long timingMode
 @property  @? timingFunction
 @property  double speed

  // class methods
  +[SCNAction supportsSecureCoding]
  +[SCNAction fadeInWithDuration:]
  +[SCNAction fadeOutWithDuration:]
  +[SCNAction hide]
  +[SCNAction runBlock:]
  +[SCNAction sequence:]
  +[SCNAction unhide]
  +[SCNAction removeFromParentNode]
  +[SCNAction runBlock:queue:]
  +[SCNAction playAudioSource:waitForCompletion:]
  +[SCNAction waitForDuration:withRange:]
  +[SCNAction waitForDuration:]
  +[SCNAction actionNamed:]
  +[SCNAction performSelector:onTarget:]
  +[SCNAction moveByX:y:z:duration:]
  +[SCNAction rotateByX:y:z:duration:]
  +[SCNAction rotateToX:y:z:duration:]
  +[SCNAction rotateByAngle:aroundAxis:duration:]
  +[SCNAction rotateToAxisAngle:duration:]
  +[SCNAction rotateToX:y:z:duration:shortestUnitArc:]
  +[SCNAction scaleBy:duration:]
  +[SCNAction scaleTo:duration:]
  +[SCNAction repeatAction:count:]
  +[SCNAction repeatActionForever:]
  +[SCNAction fadeOpacityBy:duration:]
  +[SCNAction fadeOpacityTo:duration:]
  +[SCNAction customActionWithDuration:actionBlock:]
  +[SCNAction editingModeEnabled]
  +[SCNAction setEditingModeEnabled:]
  +[SCNAction moveBy:duration:]
  +[SCNAction moveTo:duration:]
  +[SCNAction group:]
  +[SCNAction runAction:onChildNodeWithName:]
  +[SCNAction javaScriptActionWithScript:duration:]

  // instance methods
  -[SCNAction init]
  -[SCNAction dealloc]
  -[SCNAction copyWithZone:]
  -[SCNAction copy]
  -[SCNAction encodeWithCoder:]
  -[SCNAction initWithCoder:]
  -[SCNAction setFinished:]
  -[SCNAction finished]
  -[SCNAction setCompletionBlock:]
  -[SCNAction setKey:]
  -[SCNAction duration]
  -[SCNAction parameters]
  -[SCNAction setDuration:]
  -[SCNAction timingFunction]
  -[SCNAction setTimingFunction:]
  -[SCNAction speed]
  -[SCNAction setSpeed:]
  -[SCNAction isCustom]
  -[SCNAction isRelative]
  -[SCNAction caction]
  -[SCNAction setCppAction:]
  -[SCNAction reversedAction]
  -[SCNAction updateWithTarget:forTime:]
  -[SCNAction durationRange]
  -[SCNAction setDurationRange:]
  -[SCNAction timingMode]
  -[SCNAction setTimingMode:]
  -[SCNAction wasPausedWithTarget:atTime:]
  -[SCNAction willResumeWithTarget:atTime:]
  -[SCNAction timeJumpWithTarget:timeOffset:]
  -[SCNAction ratioForTime:]
  -[SCNAction wasAddedToTarget:atTime:]
  -[SCNAction wasRemovedFromTarget:atTime:]
  -[SCNAction willStartWithTarget:atTime:]


SCNActionTargetState : NSObject
 @property  {SCNVector3=fff} position
 @property  {SCNVector3=fff} euler
 @property  {SCNVector3=fff} scale
 @property  {SCNVector4=ffff} rotation
 @property  BOOL usesEuler
 @property  float opacity

  // instance methods
  -[SCNActionTargetState scale]
  -[SCNActionTargetState position]
  -[SCNActionTargetState setScale:]
  -[SCNActionTargetState opacity]
  -[SCNActionTargetState setOpacity:]
  -[SCNActionTargetState rotation]
  -[SCNActionTargetState setRotation:]
  -[SCNActionTargetState setPosition:]
  -[SCNActionTargetState euler]
  -[SCNActionTargetState setEuler:]
  -[SCNActionTargetState usesEuler]
  -[SCNActionTargetState setUsesEuler:]


SCNSpriteKitEventHandler : NSObject
 @property  SKScene *scene

  // instance methods
  -[SCNSpriteKitEventHandler init]
  -[SCNSpriteKitEventHandler dealloc]
  -[SCNSpriteKitEventHandler touchesBegan:withEvent:]
  -[SCNSpriteKitEventHandler touchesMoved:withEvent:]
  -[SCNSpriteKitEventHandler touchesEnded:withEvent:]
  -[SCNSpriteKitEventHandler touchesCancelled:withEvent:]
  -[SCNSpriteKitEventHandler scene]
  -[SCNSpriteKitEventHandler setScene:]


SCNMTLBuffer : NSObject
 @property  long long usedCount
 @property  <MTLBuffer> *buffer
 @property  unsigned long offset
 @property  ^v contents
 @property  id dataSource

  // instance methods
  -[SCNMTLBuffer dealloc]
  -[SCNMTLBuffer contents]
  -[SCNMTLBuffer setOffset:]
  -[SCNMTLBuffer setBuffer:]
  -[SCNMTLBuffer buffer]
  -[SCNMTLBuffer offset]
  -[SCNMTLBuffer dataSource]
  -[SCNMTLBuffer setDataSource:]
  -[SCNMTLBuffer decrementUsedCount]
  -[SCNMTLBuffer incrementUsedCount]
  -[SCNMTLBuffer setUsedCount:]
  -[SCNMTLBuffer usedCount]


SCNMTLResourceBinding : NSObject
 @property  MTLArgument *argument
 @property  <MTLArgumentEncoder> *argumentEncoder
 @property  unsigned long type
 @property  NSString *name
 @property  NSMutableArray *usedResources
 @property  BOOL needsRenderResource
 @property  id bindBlock

  // instance methods
  -[SCNMTLResourceBinding init]
  -[SCNMTLResourceBinding dealloc]
  -[SCNMTLResourceBinding name]
  -[SCNMTLResourceBinding type]
  -[SCNMTLResourceBinding argument]
  -[SCNMTLResourceBinding setBindBlock:]
  -[SCNMTLResourceBinding bindBlock]
  -[SCNMTLResourceBinding needsRenderResource]
  -[SCNMTLResourceBinding argumentEncoder]
  -[SCNMTLResourceBinding usedResources]
  -[SCNMTLResourceBinding setNeedsRenderResource:]
  -[SCNMTLResourceBinding setArgument:]
  -[SCNMTLResourceBinding setArgumentEncoder:]


SCNMTLSemanticResourceBinding : SCNMTLResourceBinding
 @property  long long semanticsCount
 @property  long long bufferSize

  // instance methods
  -[SCNMTLSemanticResourceBinding dealloc]
  -[SCNMTLSemanticResourceBinding bufferSize]
  -[SCNMTLSemanticResourceBinding setBufferSize:]
  -[SCNMTLSemanticResourceBinding semanticsCount]
  -[SCNMTLSemanticResourceBinding setSemanticsCount:]


SCNMTLPassResourceBinding : SCNMTLResourceBinding
 @property  long long inputsCount
 @property  long long bufferSize

  // instance methods
  -[SCNMTLPassResourceBinding init]
  -[SCNMTLPassResourceBinding dealloc]
  -[SCNMTLPassResourceBinding bufferSize]
  -[SCNMTLPassResourceBinding setBufferSize:]
  -[SCNMTLPassResourceBinding inputsCount]
  -[SCNMTLPassResourceBinding setInputsCount:]


SCNMTLShadable : NSObject
 @property  long long materialModificationCount
 @property  long long geometryModificationCount

  // instance methods
  -[SCNMTLShadable dealloc]
  -[SCNMTLShadable materialModificationCount]
  -[SCNMTLShadable geometryModificationCount]
  -[SCNMTLShadable setMaterialModificationCount:]
  -[SCNMTLShadable setGeometryModificationCount:]
  -[SCNMTLShadable setResource:ofType:atIndices:]
  -[SCNMTLShadable bufferAtIndices:]
  -[SCNMTLShadable textureAtIndices:]
  -[SCNMTLShadable samplerAtIndices:]


SCNMTLRenderPipeline : NSObject
 @property  <MTLRenderPipelineState> *state
 @property  MTLVertexDescriptor *vertexDescriptor
 @property  <MTLFunction> *vertexFunction
 @property  <MTLFunction> *fragmentFunction
 @property  NSArray *frameBufferBindings
 @property  NSArray *nodeBufferBindings
 @property  NSArray *passBufferBindings
 @property  NSArray *shadableBufferBindings
 @property  NSArray *lightBufferBindings
 @property  unsigned int vertexBuffersUsageMask

  // instance methods
  -[SCNMTLRenderPipeline init]
  -[SCNMTLRenderPipeline dealloc]
  -[SCNMTLRenderPipeline state]
  -[SCNMTLRenderPipeline setState:]
  -[SCNMTLRenderPipeline setVertexDescriptor:]
  -[SCNMTLRenderPipeline setVertexFunction:]
  -[SCNMTLRenderPipeline setFragmentFunction:]
  -[SCNMTLRenderPipeline fragmentFunction]
  -[SCNMTLRenderPipeline vertexFunction]
  -[SCNMTLRenderPipeline vertexDescriptor]
  -[SCNMTLRenderPipeline shadableBufferBindings]
  -[SCNMTLRenderPipeline frameBufferBindings]
  -[SCNMTLRenderPipeline passBufferBindings]
  -[SCNMTLRenderPipeline lightBufferBindings]
  -[SCNMTLRenderPipeline nodeBufferBindings]
  -[SCNMTLRenderPipeline matchesRenderPassDescriptor:]
  -[SCNMTLRenderPipeline _computeUsageForArguments:function:]
  -[SCNMTLRenderPipeline vertexBuffersUsageMask]
  -[SCNMTLRenderPipeline setFrameBufferBindings:]
  -[SCNMTLRenderPipeline setNodeBufferBindings:]
  -[SCNMTLRenderPipeline setLightBufferBindings:]
  -[SCNMTLRenderPipeline setPassBufferBindings:]
  -[SCNMTLRenderPipeline setShadableBufferBindings:]


SCNMTLComputePipeline : NSObject
 @property  <MTLComputePipelineState> *state
 @property  <MTLFunction> *computeFunction

  // instance methods
  -[SCNMTLComputePipeline init]
  -[SCNMTLComputePipeline dealloc]
  -[SCNMTLComputePipeline state]
  -[SCNMTLComputePipeline setState:]
  -[SCNMTLComputePipeline setComputeFunction:]
  -[SCNMTLComputePipeline computeFunction]


SCNMTLMesh : NSObject
 @property  NSArray *buffers
 @property  NSArray *elements
 @property  MTLStageInputOutputDescriptor *stageDescriptor
 @property  MTLVertexDescriptor *vertexDescriptor
 @property  unsigned long vertexDescriptorHash
 @property  MTLVertexDescriptor *tessellationVertexDescriptor
 @property  unsigned long tessellationVertexDescriptorHash
 @property  <MTLBuffer> *volatileBuffer
 @property  unsigned long volatileOffset
 @property  unsigned long volatileStride
 @property  unsigned long volatileSize
 @property  long long verticesCount
 @property  long long mutabilityTimestamp

  // instance methods
  -[SCNMTLMesh dealloc]
  -[SCNMTLMesh elements]
  -[SCNMTLMesh setElements:]
  -[SCNMTLMesh setVertexDescriptor:]
  -[SCNMTLMesh vertexDescriptor]
  -[SCNMTLMesh buffers]
  -[SCNMTLMesh setBuffers:]
  -[SCNMTLMesh bufferForAttribute:]
  -[SCNMTLMesh stageDescriptor]
  -[SCNMTLMesh mutabilityTimestamp]
  -[SCNMTLMesh setMutabilityTimestamp:]
  -[SCNMTLMesh verticesCount]
  -[SCNMTLMesh setVerticesCount:]
  -[SCNMTLMesh setVolatileStride:]
  -[SCNMTLMesh volatileBuffer]
  -[SCNMTLMesh volatileOffset]
  -[SCNMTLMesh volatileStride]
  -[SCNMTLMesh setVolatileSize:]
  -[SCNMTLMesh setVolatileBuffer:]
  -[SCNMTLMesh setVolatileOffset:]
  -[SCNMTLMesh volatileSize]
  -[SCNMTLMesh tessellationVertexDescriptorHash]
  -[SCNMTLMesh vertexDescriptorHash]
  -[SCNMTLMesh buildTessellationVertexDescriptorIfNeeded]
  -[SCNMTLMesh tessellationVertexDescriptor]
  -[SCNMTLMesh setStageDescriptor:]


SCNMTLMeshElement : NSObject
 @property  long long indexCount
 @property  unsigned long instanceCount
 @property  long long sharedIndexBufferOffset
 @property  SCNMTLBuffer *indexBuffer
 @property  unsigned long indexType
 @property  unsigned long primitiveType
 @property  long long primitiveCount
 @property  long long effectiveIndexOffset
 @property  long long effectiveIndexCount

  // instance methods
  -[SCNMTLMeshElement dealloc]
  -[SCNMTLMeshElement indexType]
  -[SCNMTLMeshElement setIndexType:]
  -[SCNMTLMeshElement primitiveType]
  -[SCNMTLMeshElement setInstanceCount:]
  -[SCNMTLMeshElement instanceCount]
  -[SCNMTLMeshElement indexCount]
  -[SCNMTLMeshElement indexBuffer]
  -[SCNMTLMeshElement setIndexCount:]
  -[SCNMTLMeshElement setPrimitiveType:]
  -[SCNMTLMeshElement primitiveCount]
  -[SCNMTLMeshElement setIndexBuffer:]
  -[SCNMTLMeshElement setSharedIndexBufferOffset:]
  -[SCNMTLMeshElement setupWithElement:]
  -[SCNMTLMeshElement effectiveIndexCount]
  -[SCNMTLMeshElement effectiveIndexOffset]
  -[SCNMTLMeshElement sharedIndexBufferOffset]
  -[SCNMTLMeshElement setPrimitiveRange:]


SCNActionJavaScript : SCNAction
  // class methods
  +[SCNActionJavaScript supportsSecureCoding]
  +[SCNActionJavaScript javaScriptActionWithDuration:script:]

  // instance methods
  -[SCNActionJavaScript dealloc]
  -[SCNActionJavaScript copyWithZone:]
  -[SCNActionJavaScript encodeWithCoder:]
  -[SCNActionJavaScript initWithCoder:]
  -[SCNActionJavaScript initWithString:]
  -[SCNActionJavaScript parameters]
  -[SCNActionJavaScript isCustom]
  -[SCNActionJavaScript reversedAction]


SCNManipulableItem : NSObject
 @property  SCNNode *node
 @property  id component
 @property  unsigned long elementIndex
 @property  {SCNMatrix4=ffffffffffffffff} transform
 @property  {SCNMatrix4=ffffffffffffffff} worldTransform
 @property  {SCNVector3=fff} elementPosition

  // class methods
  +[SCNManipulableItem removeItemsFromScene:]
  +[SCNManipulableItem addItems:toScene:]

  // instance methods
  -[SCNManipulableItem dealloc]
  -[SCNManipulableItem isEqual:]
  -[SCNManipulableItem transform]
  -[SCNManipulableItem scale]
  -[SCNManipulableItem node]
  -[SCNManipulableItem setTransform:]
  -[SCNManipulableItem setNode:]
  -[SCNManipulableItem setPosition:]
  -[SCNManipulableItem setScreenSize:]
  -[SCNManipulableItem component]
  -[SCNManipulableItem setComponent:]
  -[SCNManipulableItem screenSize]
  -[SCNManipulableItem parentItem]
  -[SCNManipulableItem elementPosition]
  -[SCNManipulableItem worldTransform]
  -[SCNManipulableItem setWorldTransform:]
  -[SCNManipulableItem validateClone]
  -[SCNManipulableItem cloneForManipulators]
  -[SCNManipulableItem elementIndex]
  -[SCNManipulableItem isNodeManipulator]
  -[SCNManipulableItem setElementIndex:]


SCNNodeManipulableItem : SCNManipulableItem
  // class methods
  +[SCNNodeManipulableItem removeItemsFromScene:]
  +[SCNNodeManipulableItem addItems:toScene:]
  +[SCNNodeManipulableItem nodeManipulatorItemWithNode:screenSize:]

  // instance methods
  -[SCNNodeManipulableItem transform]
  -[SCNNodeManipulableItem scale]
  -[SCNNodeManipulableItem setTransform:]
  -[SCNNodeManipulableItem setPosition:]
  -[SCNNodeManipulableItem parentItem]
  -[SCNNodeManipulableItem worldTransform]
  -[SCNNodeManipulableItem setWorldTransform:]
  -[SCNNodeManipulableItem validateClone]
  -[SCNNodeManipulableItem cloneForManipulators]
  -[SCNNodeManipulableItem isNodeManipulator]


SCNPhysicsBody : NSObject <NSCopying, NSSecureCoding>
 @property  long long type
 @property  double mass
 @property  {SCNVector3=fff} momentOfInertia
 @property  BOOL usesDefaultMomentOfInertia
 @property  double charge
 @property  double friction
 @property  double restitution
 @property  double rollingFriction
 @property  SCNPhysicsShape *physicsShape
 @property  BOOL isResting
 @property  BOOL allowsResting
 @property  {SCNVector3=fff} velocity
 @property  {SCNVector4=ffff} angularVelocity
 @property  double damping
 @property  double angularDamping
 @property  {SCNVector3=fff} velocityFactor
 @property  {SCNVector3=fff} angularVelocityFactor
 @property  unsigned long categoryBitMask
 @property  unsigned long collisionBitMask
 @property  unsigned long contactTestBitMask
 @property  BOOL affectedByGravity
 @property  double continuousCollisionDetectionThreshold
 @property  {SCNVector3=fff} centerOfMassOffset
 @property  double linearRestingThreshold
 @property  double angularRestingThreshold

  // class methods
  +[SCNPhysicsBody supportsSecureCoding]
  +[SCNPhysicsBody bodyWithType:shape:]
  +[SCNPhysicsBody staticBody]
  +[SCNPhysicsBody dynamicBody]
  +[SCNPhysicsBody kinematicBody]

  // instance methods
  -[SCNPhysicsBody dealloc]
  -[SCNPhysicsBody _activate]
  -[SCNPhysicsBody copyWithZone:]
  -[SCNPhysicsBody copy]
  -[SCNPhysicsBody type]
  -[SCNPhysicsBody setType:]
  -[SCNPhysicsBody encodeWithCoder:]
  -[SCNPhysicsBody initWithCoder:]
  -[SCNPhysicsBody _owner]
  -[SCNPhysicsBody _handle]
  -[SCNPhysicsBody velocity]
  -[SCNPhysicsBody setVelocity:]
  -[SCNPhysicsBody mass]
  -[SCNPhysicsBody setMass:]
  -[SCNPhysicsBody damping]
  -[SCNPhysicsBody setDamping:]
  -[SCNPhysicsBody friction]
  -[SCNPhysicsBody setFriction:]
  -[SCNPhysicsBody _setOwner:]
  -[SCNPhysicsBody setCharge:]
  -[SCNPhysicsBody angularVelocity]
  -[SCNPhysicsBody isResting]
  -[SCNPhysicsBody restitution]
  -[SCNPhysicsBody setResting:]
  -[SCNPhysicsBody collisionBitMask]
  -[SCNPhysicsBody setCollisionBitMask:]
  -[SCNPhysicsBody categoryBitMask]
  -[SCNPhysicsBody setCategoryBitMask:]
  -[SCNPhysicsBody setContactTestBitMask:]
  -[SCNPhysicsBody setAffectedByGravity:]
  -[SCNPhysicsBody setRestitution:]
  -[SCNPhysicsBody setAngularDamping:]
  -[SCNPhysicsBody charge]
  -[SCNPhysicsBody setAngularVelocity:]
  -[SCNPhysicsBody angularDamping]
  -[SCNPhysicsBody resetTransform]
  -[SCNPhysicsBody _removeOwner]
  -[SCNPhysicsBody sceneRef]
  -[SCNPhysicsBody _createBody]
  -[SCNPhysicsBody initWithType:shape:]
  -[SCNPhysicsBody setLinearRestingThreshold:]
  -[SCNPhysicsBody setAngularRestingThreshold:]
  -[SCNPhysicsBody _shapeHandleWithShape:owner:]
  -[SCNPhysicsBody moveToTransform:]
  -[SCNPhysicsBody physicsShape]
  -[SCNPhysicsBody rollingFriction]
  -[SCNPhysicsBody setRollingFriction:]
  -[SCNPhysicsBody linearRestingThreshold]
  -[SCNPhysicsBody angularRestingThreshold]
  -[SCNPhysicsBody velocityFactor]
  -[SCNPhysicsBody setVelocityFactor:]
  -[SCNPhysicsBody angularVelocityFactor]
  -[SCNPhysicsBody setAngularVelocityFactor:]
  -[SCNPhysicsBody contactTestBitMask]
  -[SCNPhysicsBody allowsResting]
  -[SCNPhysicsBody setAllowsResting:]
  -[SCNPhysicsBody isAffectedByGravity]
  -[SCNPhysicsBody usesDefaultMomentOfInertia]
  -[SCNPhysicsBody setUsesDefaultMomentOfInertia:]
  -[SCNPhysicsBody momentOfInertia]
  -[SCNPhysicsBody setMomentOfInertia:]
  -[SCNPhysicsBody centerOfMassOffset]
  -[SCNPhysicsBody setCenterOfMassOffset:]
  -[SCNPhysicsBody continuousCollisionDetectionThreshold]
  -[SCNPhysicsBody setContinuousCollisionDetectionThreshold:]
  -[SCNPhysicsBody setPhysicsShape:]
  -[SCNPhysicsBody _didDecodeSCNPhysicsBody:]
  -[SCNPhysicsBody respondsToCollision]
  -[SCNPhysicsBody setLinearSleepingThreshold:]
  -[SCNPhysicsBody linearSleepingThreshold]
  -[SCNPhysicsBody setAngularSleepingThreshold:]
  -[SCNPhysicsBody angularSleepingThreshold]
  -[SCNPhysicsBody continuousCollisionDetection]
  -[SCNPhysicsBody applyForce:impulse:]
  -[SCNPhysicsBody applyForce:atPosition:impulse:]
  -[SCNPhysicsBody applyTorque:impulse:]
  -[SCNPhysicsBody clearAllForces]
  -[SCNPhysicsBody resetToTransform:]
  -[SCNPhysicsBody moveToPosition:]
  -[SCNPhysicsBody rotateToAxisAngle:]
  -[SCNPhysicsBody _ownerWillDie]


SCNActionRunAction : SCNAction
  // class methods
  +[SCNActionRunAction runAction:onFirstChildWithName:]
  +[SCNActionRunAction runAction:afterActionWithKey:]

  // instance methods
  -[SCNActionRunAction init]
  -[SCNActionRunAction dealloc]
  -[SCNActionRunAction copyWithZone:]
  -[SCNActionRunAction isCustom]
  -[SCNActionRunAction reversedAction]
  -[SCNActionRunAction updateWithTarget:forTime:]
  -[SCNActionRunAction willStartWithTarget:atTime:]


SCNActionFade : SCNAction
  // class methods
  +[SCNActionFade supportsSecureCoding]
  +[SCNActionFade fadeInWithDuration:]
  +[SCNActionFade fadeOutWithDuration:]
  +[SCNActionFade fadeOpacityBy:duration:]
  +[SCNActionFade fadeOpacityTo:duration:]

  // instance methods
  -[SCNActionFade init]
  -[SCNActionFade copyWithZone:]
  -[SCNActionFade encodeWithCoder:]
  -[SCNActionFade initWithCoder:]
  -[SCNActionFade parameters]
  -[SCNActionFade reversedAction]


SCNMTLLibrary : NSObject
 @property  <MTLLibrary> *library

  // instance methods
  -[SCNMTLLibrary dealloc]
  -[SCNMTLLibrary _load]
  -[SCNMTLLibrary library]
  -[SCNMTLLibrary initWithPath:manager:]


SCNMTLLibraryManager : NSObject
  // class methods
  +[SCNMTLLibraryManager hashCodeForSource:macros:]

  // instance methods
  -[SCNMTLLibraryManager dealloc]
  -[SCNMTLLibraryManager device]
  -[SCNMTLLibraryManager initWithDevice:]
  -[SCNMTLLibraryManager frameworkLibrary]
  -[SCNMTLLibraryManager waitForShadersCompilation]
  -[SCNMTLLibraryManager _setEngineStats:]
  -[SCNMTLLibraryManager clearCompiledLibraries]
  -[SCNMTLLibraryManager libraryForSourceCode:options:]
  -[SCNMTLLibraryManager defaultLibrary]
  -[SCNMTLLibraryManager commonProfileCacheLibrary]
  -[SCNMTLLibraryManager shaderCompilationGroup]
  -[SCNMTLLibraryManager deviceQueue]
  -[SCNMTLLibraryManager libraryForFile:]
  -[SCNMTLLibraryManager libraryForProgramDesc:completionHandler:]


SCNPhysicsWorld : NSObject <NSSecureCoding>
 @property  {SCNVector3=fff} gravity
 @property  double speed
 @property  double timeStep
 @property  <SCNPhysicsContactDelegate> *contactDelegate
 @property  NSArray *allBehaviors

  // class methods
  +[SCNPhysicsWorld supportsSecureCoding]

  // instance methods
  -[SCNPhysicsWorld dealloc]
  -[SCNPhysicsWorld encodeWithCoder:]
  -[SCNPhysicsWorld initWithCoder:]
  -[SCNPhysicsWorld .cxx_destruct]
  -[SCNPhysicsWorld gravity]
  -[SCNPhysicsWorld valueForUndefinedKey:]
  -[SCNPhysicsWorld scale]
  -[SCNPhysicsWorld _reset]
  -[SCNPhysicsWorld .cxx_construct]
  -[SCNPhysicsWorld _handle]
  -[SCNPhysicsWorld setScale:]
  -[SCNPhysicsWorld commonInit]
  -[SCNPhysicsWorld speed]
  -[SCNPhysicsWorld setSpeed:]
  -[SCNPhysicsWorld scene]
  -[SCNPhysicsWorld initWithScene:]
  -[SCNPhysicsWorld _isDefault]
  -[SCNPhysicsWorld setScene:]
  -[SCNPhysicsWorld removeBehavior:]
  -[SCNPhysicsWorld addBehavior:]
  -[SCNPhysicsWorld removeAllBehaviors]
  -[SCNPhysicsWorld contactDelegate]
  -[SCNPhysicsWorld setContactDelegate:]
  -[SCNPhysicsWorld setGravity:]
  -[SCNPhysicsWorld timeStep]
  -[SCNPhysicsWorld setTimeStep:]
  -[SCNPhysicsWorld _postCommandWithBlock:]
  -[SCNPhysicsWorld _aetherHandle]
  -[SCNPhysicsWorld _removeFieldFromWorld:]
  -[SCNPhysicsWorld _addFieldToWorld:]
  -[SCNPhysicsWorld _allowGhostObjects]
  -[SCNPhysicsWorld removePhysicsBody:handle:]
  -[SCNPhysicsWorld addPhysicsBody:nodeRef:colGroup:colMask:colTest:]
  -[SCNPhysicsWorld _preTick:]
  -[SCNPhysicsWorld wakeUpAllBodies]
  -[SCNPhysicsWorld parseSpecialKey:withPath:intoDestination:]
  -[SCNPhysicsWorld _rayTestWithSegmentFromPoint:toPoint:options:]
  -[SCNPhysicsWorld _createDynamicWorldIfNeeded]
  -[SCNPhysicsWorld _customEncodingOfSCNPhysicsWorld:]
  -[SCNPhysicsWorld _customDecodingOfSCNPhysicsWorld:]
  -[SCNPhysicsWorld _didDecodeSCNPhysicsWorld:]
  -[SCNPhysicsWorld _physicsContact]
  -[SCNPhysicsWorld sceneWillDie]
  -[SCNPhysicsWorld objectInAllBehaviorsAtIndex:]
  -[SCNPhysicsWorld allBehaviors]
  -[SCNPhysicsWorld rayTestWithSegmentFromPoint:toPoint:options:]
  -[SCNPhysicsWorld contactTestBetweenBody:andBody:options:]
  -[SCNPhysicsWorld contactTestWithBody:options:]
  -[SCNPhysicsWorld convexSweepTestWithShape:fromTransform:toTransform:options:]
  -[SCNPhysicsWorld updateCollisionPairs]
  -[SCNPhysicsWorld _needsRedraw]
  -[SCNPhysicsWorld enumerateBodiesUsingBlock:]
  -[SCNPhysicsWorld _findFieldAttachedToNode:]
  -[SCNPhysicsWorld _updatePhysicsFieldsTransforms]
  -[SCNPhysicsWorld _step:]
  -[SCNPhysicsWorld _defaultVehicleRayCaster]
  -[SCNPhysicsWorld _drawDebugInAuthoringEnvironment:]


SCNLight : NSObject <SCNAnimatable, NSCopying, NSSecureCoding>
 @property  NSString *type
 @property  id color
 @property  double temperature
 @property  double intensity
 @property  NSString *name
 @property  BOOL castsShadow
 @property  id shadowColor
 @property  double shadowRadius
 @property  {CGSize=dd} shadowMapSize
 @property  unsigned long shadowSampleCount
 @property  long long shadowMode
 @property  double shadowBias
 @property  BOOL automaticallyAdjustsShadowProjection
 @property  double maximumShadowDistance
 @property  BOOL forcesBackFaceCasters
 @property  BOOL sampleDistributedShadowMaps
 @property  unsigned long shadowCascadeCount
 @property  double shadowCascadeSplittingFactor
 @property  double orthographicScale
 @property  double zNear
 @property  double zFar
 @property  double attenuationStartDistance
 @property  double attenuationEndDistance
 @property  double attenuationFalloffExponent
 @property  double spotInnerAngle
 @property  double spotOuterAngle
 @property  NSURL *IESProfileURL
 @property  NSData *sphericalHarmonicsCoefficients
 @property  long long probeType
 @property  long long probeUpdateType
 @property  void probeExtents
 @property  void probeOffset
 @property  BOOL parallaxCorrectionEnabled
 @property  void parallaxExtentsFactor
 @property  void parallaxCenterOffset
 @property  SCNMaterialProperty *probeEnvironment
 @property  long long areaType
 @property  void areaExtents
 @property  NSArray *areaPolygonVertices
 @property  BOOL drawsArea
 @property  BOOL doubleSided
 @property  SCNMaterialProperty *gobo
 @property  unsigned long categoryBitMask
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *animationKeys

  // class methods
  +[SCNLight supportsSecureCoding]
  +[SCNLight light]
  +[SCNLight lightWithMDLLight:]
  +[SCNLight lightWithMDLLightProbe:]
  +[SCNLight lightWithLightRef:]

  // instance methods
  -[SCNLight init]
  -[SCNLight dealloc]
  -[SCNLight name]
  -[SCNLight copyWithZone:]
  -[SCNLight copy]
  -[SCNLight type]
  -[SCNLight setType:]
  -[SCNLight encodeWithCoder:]
  -[SCNLight initWithCoder:]
  -[SCNLight setName:]
  -[SCNLight identifier]
  -[SCNLight observeValueForKeyPath:ofObject:change:context:]
  -[SCNLight setIdentifier:]
  -[SCNLight color]
  -[SCNLight setColor:]
  -[SCNLight intensity]
  -[SCNLight setIntensity:]
  -[SCNLight shadowRadius]
  -[SCNLight setShadowRadius:]
  -[SCNLight shadowColor]
  -[SCNLight setShadowColor:]
  -[SCNLight scene]
  -[SCNLight addAnimation:]
  -[SCNLight animationForKey:]
  -[SCNLight removeAnimationForKey:]
  -[SCNLight addAnimation:forKey:]
  -[SCNLight removeAllAnimations]
  -[SCNLight animationKeys]
  -[SCNLight setDoubleSided:]
  -[SCNLight categoryBitMask]
  -[SCNLight setCategoryBitMask:]
  -[SCNLight attributeForKey:]
  -[SCNLight setAttribute:forKey:]
  -[SCNLight setTemperature:]
  -[SCNLight temperature]
  -[SCNLight doubleSided]
  -[SCNLight setAttenuationStartDistance:]
  -[SCNLight setAttenuationEndDistance:]
  -[SCNLight setAttenuationFalloffExponent:]
  -[SCNLight attenuationStartDistance]
  -[SCNLight attenuationEndDistance]
  -[SCNLight attenuationFalloffExponent]
  -[SCNLight sphericalHarmonicsCoefficients]
  -[SCNLight setSphericalHarmonicsCoefficients:]
  -[SCNLight zNear]
  -[SCNLight setZNear:]
  -[SCNLight zFar]
  -[SCNLight setZFar:]
  -[SCNLight spotInnerAngle]
  -[SCNLight spotOuterAngle]
  -[SCNLight setSpotInnerAngle:]
  -[SCNLight setSpotOuterAngle:]
  -[SCNLight __CFObject]
  -[SCNLight sceneRef]
  -[SCNLight addAnimationPlayer:forKey:]
  -[SCNLight _scnAnimationForKey:]
  -[SCNLight animationPlayerForKey:]
  -[SCNLight animationManager]
  -[SCNLight _pauseAnimation:forKey:pausedByNode:]
  -[SCNLight removeAnimationForKey:blendOutDuration:]
  -[SCNLight removeAnimationForKey:fadeOutDuration:]
  -[SCNLight pauseAnimationForKey:]
  -[SCNLight resumeAnimationForKey:]
  -[SCNLight setSpeed:forAnimationKey:]
  -[SCNLight isAnimationForKeyPaused:]
  -[SCNLight __removeAnimation:forKey:]
  -[SCNLight _syncObjCAnimations]
  -[SCNLight _copyAnimationsFrom:]
  -[SCNLight _scnBindings]
  -[SCNLight bindAnimatablePath:toObject:withKeyPath:options:]
  -[SCNLight unbindAnimatablePath:]
  -[SCNLight removeAllBindings]
  -[SCNLight copyAnimationChannelForKeyPath:animation:]
  -[SCNLight isPausedOrPausedByInheritance]
  -[SCNLight presentationInstance]
  -[SCNLight setOrthographicScale:]
  -[SCNLight _syncObjCModel]
  -[SCNLight initWithLightRef:]
  -[SCNLight _syncEntityObjCModel]
  -[SCNLight initPresentationLightWithLightRef:]
  -[SCNLight presentationLight]
  -[SCNLight castsShadow]
  -[SCNLight setCastsShadow:]
  -[SCNLight shadowSampleCount]
  -[SCNLight setShadowSampleCount:]
  -[SCNLight orthographicScale]
  -[SCNLight maximumShadowDistance]
  -[SCNLight setMaximumShadowDistance:]
  -[SCNLight automaticallyAdjustsShadowProjection]
  -[SCNLight setAutomaticallyAdjustsShadowProjection:]
  -[SCNLight shadowCascadeCount]
  -[SCNLight setShadowCascadeCount:]
  -[SCNLight gobo]
  -[SCNLight IESProfileURL]
  -[SCNLight setIESProfileURL:]
  -[SCNLight areaType]
  -[SCNLight setAreaType:]
  -[SCNLight areaExtents]
  -[SCNLight setAreaExtents:]
  -[SCNLight areaPolygonVertices]
  -[SCNLight setAreaPolygonVertices:]
  -[SCNLight drawsArea]
  -[SCNLight setDrawsArea:]
  -[SCNLight probeType]
  -[SCNLight setProbeType:]
  -[SCNLight probeUpdateType]
  -[SCNLight setProbeUpdateType:]
  -[SCNLight probeExtents]
  -[SCNLight setProbeExtents:]
  -[SCNLight probeOffset]
  -[SCNLight setProbeOffset:]
  -[SCNLight parallaxCorrectionEnabled]
  -[SCNLight setParallaxCorrectionEnabled:]
  -[SCNLight probeEnvironment]
  -[SCNLight setSpotFalloffExponent:]
  -[SCNLight spotFalloffExponent]
  -[SCNLight _resyncObjCModelOfPerTypeParameters]
  -[SCNLight forcesBackFaceCasters]
  -[SCNLight setForcesBackFaceCasters:]
  -[SCNLight usesDeferredShadows]
  -[SCNLight usesModulatedMode]
  -[SCNLight setUsesDeferredShadows:]
  -[SCNLight setUsesModulatedMode:]
  -[SCNLight setIESProfileURL:resolvedURL:]
  -[SCNLight setSampleDistributedShadowMaps:]
  -[SCNLight setShadowCascadeSplittingFactor:]
  -[SCNLight _customEncodingOfSCNLight:]
  -[SCNLight _customDecodingOfSCNLight:]
  -[SCNLight setBaked:]
  -[SCNLight setShouldBakeDirectLighting:]
  -[SCNLight setShouldBakeIndirectLighting:]
  -[SCNLight set_sphericalHarmonics:]
  -[SCNLight setParallaxCenterOffset:]
  -[SCNLight setParallaxExtentsFactor:]
  -[SCNLight setShadowMapSize:]
  -[SCNLight setShadowBias:]
  -[SCNLight setTechnique:]
  -[SCNLight _didDecodeSCNLight:]
  -[SCNLight lightRef]
  -[SCNLight copyAnimationChannelForKeyPath:property:]
  -[SCNLight _sphericalHarmonics]
  -[SCNLight shouldBakeDirectLighting]
  -[SCNLight shouldBakeIndirectLighting]
  -[SCNLight isBaked]
  -[SCNLight shadowBias]
  -[SCNLight shadowMapSize]
  -[SCNLight technique]
  -[SCNLight forceBackFaceCasters]
  -[SCNLight setForceBackFaceCasters:]
  -[SCNLight adjustsShadowProjection]
  -[SCNLight setAdjustsShadowProjection:]
  -[SCNLight sampleDistributedShadowMaps]
  -[SCNLight shadowCascadeSplittingFactor]
  -[SCNLight _shadowCascadeDebugFactor]
  -[SCNLight set_shadowCascadeDebugFactor:]
  -[SCNLight shadowMode]
  -[SCNLight setShadowMode:]
  -[SCNLight parallaxCenterOffset]
  -[SCNLight parallaxExtentsFactor]
  -[SCNLight hasGobo]


SCNMaterial : NSObject <SCNAnimatable, SCNShadable, NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  SCNMaterialProperty *diffuse
 @property  SCNMaterialProperty *ambient
 @property  SCNMaterialProperty *specular
 @property  SCNMaterialProperty *emission
 @property  SCNMaterialProperty *transparent
 @property  SCNMaterialProperty *reflective
 @property  SCNMaterialProperty *multiply
 @property  SCNMaterialProperty *normal
 @property  SCNMaterialProperty *displacement
 @property  SCNMaterialProperty *ambientOcclusion
 @property  SCNMaterialProperty *selfIllumination
 @property  SCNMaterialProperty *metalness
 @property  SCNMaterialProperty *roughness
 @property  SCNMaterialProperty *clearCoat
 @property  SCNMaterialProperty *clearCoatRoughness
 @property  SCNMaterialProperty *clearCoatNormal
 @property  double shininess
 @property  double transparency
 @property  NSString *lightingModelName
 @property  BOOL litPerPixel
 @property  BOOL doubleSided
 @property  unsigned long fillMode
 @property  long long cullMode
 @property  long long transparencyMode
 @property  BOOL locksAmbientWithDiffuse
 @property  BOOL writesToDepthBuffer
 @property  long long colorBufferWriteMask
 @property  BOOL readsFromDepthBuffer
 @property  double fresnelExponent
 @property  long long blendMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *animationKeys
 @property  SCNProgram *program
 @property  NSDictionary *shaderModifiers

  // class methods
  +[SCNMaterial resolveInstanceMethod:]
  +[SCNMaterial supportsSecureCoding]
  +[SCNMaterial accessInstanceVariablesDirectly]
  +[SCNMaterial material]
  +[SCNMaterial materialWithMDLMaterial:]
  +[SCNMaterial materialWithMaterialRef:]
  +[SCNMaterial materialWithColor:]
  +[SCNMaterial materialWithContents:]
  +[SCNMaterial materialNamed:]

  // instance methods
  -[SCNMaterial init]
  -[SCNMaterial dealloc]
  -[SCNMaterial name]
  -[SCNMaterial copyWithZone:]
  -[SCNMaterial copy]
  -[SCNMaterial encodeWithCoder:]
  -[SCNMaterial initWithCoder:]
  -[SCNMaterial setName:]
  -[SCNMaterial identifier]
  -[SCNMaterial contents]
  -[SCNMaterial valueForUndefinedKey:]
  -[SCNMaterial setValue:forUndefinedKey:]
  -[SCNMaterial setIdentifier:]
  -[SCNMaterial multiply]
  -[SCNMaterial color]
  -[SCNMaterial debugQuickLookObject]
  -[SCNMaterial properties]
  -[SCNMaterial setColor:]
  -[SCNMaterial content]
  -[SCNMaterial setContents:]
  -[SCNMaterial scene]
  -[SCNMaterial addAnimation:]
  -[SCNMaterial setFillMode:]
  -[SCNMaterial animationForKey:]
  -[SCNMaterial removeAnimationForKey:]
  -[SCNMaterial addAnimation:forKey:]
  -[SCNMaterial removeAllAnimations]
  -[SCNMaterial animationKeys]
  -[SCNMaterial normal]
  -[SCNMaterial isDoubleSided]
  -[SCNMaterial setDoubleSided:]
  -[SCNMaterial setContent:]
  -[SCNMaterial blendMode]
  -[SCNMaterial setBlendMode:]
  -[SCNMaterial _setAttributes:]
  -[SCNMaterial fillMode]
  -[SCNMaterial setCullMode:]
  -[SCNMaterial doubleSided]
  -[SCNMaterial program]
  -[SCNMaterial setProgram:]
  -[SCNMaterial shaderModifiers]
  -[SCNMaterial emission]
  -[SCNMaterial specular]
  -[SCNMaterial ambientOcclusion]
  -[SCNMaterial roughness]
  -[SCNMaterial selfIllumination]
  -[SCNMaterial ambient]
  -[SCNMaterial diffuse]
  -[SCNMaterial reflective]
  -[SCNMaterial transparent]
  -[SCNMaterial metalness]
  -[SCNMaterial displacement]
  -[SCNMaterial setLightingModelName:]
  -[SCNMaterial setShininess:]
  -[SCNMaterial _integrateModelKitComputedMaps:withGeometry:node:texturePathProvider:vertexAttributeNamed:materialPropertyNamed:filePath:]
  -[SCNMaterial __CFObject]
  -[SCNMaterial setColorBufferWriteMask:]
  -[SCNMaterial sceneRef]
  -[SCNMaterial setTransparency:]
  -[SCNMaterial addAnimationPlayer:forKey:]
  -[SCNMaterial _scnAnimationForKey:]
  -[SCNMaterial animationPlayerForKey:]
  -[SCNMaterial animationManager]
  -[SCNMaterial _pauseAnimation:forKey:pausedByNode:]
  -[SCNMaterial removeAnimationForKey:blendOutDuration:]
  -[SCNMaterial removeAnimationForKey:fadeOutDuration:]
  -[SCNMaterial pauseAnimationForKey:]
  -[SCNMaterial resumeAnimationForKey:]
  -[SCNMaterial setSpeed:forAnimationKey:]
  -[SCNMaterial isAnimationForKeyPaused:]
  -[SCNMaterial handleBindingOfSymbol:usingBlock:]
  -[SCNMaterial __removeAnimation:forKey:]
  -[SCNMaterial _syncObjCAnimations]
  -[SCNMaterial _copyAnimationsFrom:]
  -[SCNMaterial _scnBindings]
  -[SCNMaterial bindAnimatablePath:toObject:withKeyPath:options:]
  -[SCNMaterial unbindAnimatablePath:]
  -[SCNMaterial removeAllBindings]
  -[SCNMaterial copyAnimationChannelForKeyPath:animation:]
  -[SCNMaterial isPausedOrPausedByInheritance]
  -[SCNMaterial presentationInstance]
  -[SCNMaterial _syncObjCModel]
  -[SCNMaterial _syncEntityObjCModel]
  -[SCNMaterial copyAnimationChannelForKeyPath:property:]
  -[SCNMaterial initWithMaterialRef:]
  -[SCNMaterial materialRef]
  -[SCNMaterial initPresentationMaterialWithMaterialRef:]
  -[SCNMaterial presentationMaterial]
  -[SCNMaterial commonProfile]
  -[SCNMaterial _materialPropertyClass]
  -[SCNMaterial clearCoat]
  -[SCNMaterial clearCoatRoughness]
  -[SCNMaterial clearCoatNormal]
  -[SCNMaterial builtinProperties]
  -[SCNMaterial customMaterialProperties]
  -[SCNMaterial _setupMaterialProperty:]
  -[SCNMaterial _property:]
  -[SCNMaterial isLitPerPixel]
  -[SCNMaterial _copyAttributes:]
  -[SCNMaterial shininess]
  -[SCNMaterial transparency]
  -[SCNMaterial transparencyMode]
  -[SCNMaterial setTransparencyMode:]
  -[SCNMaterial lightingModelName]
  -[SCNMaterial setLitPerPixel:]
  -[SCNMaterial cullMode]
  -[SCNMaterial locksAmbientWithDiffuse]
  -[SCNMaterial setLocksAmbientWithDiffuse:]
  -[SCNMaterial avoidsOverLighting]
  -[SCNMaterial setAvoidsOverLighting:]
  -[SCNMaterial fresnelExponent]
  -[SCNMaterial setFresnelExponent:]
  -[SCNMaterial writesToDepthBuffer]
  -[SCNMaterial setWritesToDepthBuffer:]
  -[SCNMaterial readsFromDepthBuffer]
  -[SCNMaterial setReadsFromDepthBuffer:]
  -[SCNMaterial colorBufferWriteMask]
  -[SCNMaterial copyShaderModifiersFrom:]
  -[SCNMaterial _setupShadableHelperIfNeeded]
  -[SCNMaterial setShaderModifiers:]
  -[SCNMaterial __shadableHelper]
  -[SCNMaterial shaderModifiersArgumentsNames]
  -[SCNMaterial handleUnbindingOfSymbol:usingBlock:]
  -[SCNMaterial _shadableSetValue:forUndefinedKey:]
  -[SCNMaterial _customEncodingOfSCNMaterial:]
  -[SCNMaterial _customDecodingOfSCNMaterial:]
  -[SCNMaterial setIndexOfRefraction:]
  -[SCNMaterial setSelfIlluminationOcclusion:]
  -[SCNMaterial indexOfRefraction]
  -[SCNMaterial selfIlluminationOcclusion]
  -[SCNMaterial litPerPixel]
  -[SCNMaterial materialRefCreateIfNeeded]
  -[SCNMaterial customMaterialPropertyNames]
  -[SCNMaterial customMaterialAttributeNames]
  -[SCNMaterial customMaterialAttributes]
  -[SCNMaterial debugQuickLookData]


SCNParticleSystem : NSObject <NSCopying, NSSecureCoding, SCNAnimatable>
 @property  double emissionDuration
 @property  double emissionDurationVariation
 @property  double idleDuration
 @property  double idleDurationVariation
 @property  BOOL loops
 @property  double birthRate
 @property  double birthRateVariation
 @property  double warmupDuration
 @property  SCNGeometry *emitterShape
 @property  long long birthLocation
 @property  long long birthDirection
 @property  double spreadingAngle
 @property  {SCNVector3=fff} emittingDirection
 @property  {SCNVector3=fff} orientationDirection
 @property  {SCNVector3=fff} acceleration
 @property  BOOL local
 @property  double particleAngle
 @property  double particleAngleVariation
 @property  double particleVelocity
 @property  double particleVelocityVariation
 @property  double particleAngularVelocity
 @property  double particleAngularVelocityVariation
 @property  double particleLifeSpan
 @property  double particleLifeSpanVariation
 @property  SCNParticleSystem *systemSpawnedOnDying
 @property  SCNParticleSystem *systemSpawnedOnCollision
 @property  SCNParticleSystem *systemSpawnedOnLiving
 @property  id particleImage
 @property  unsigned long imageSequenceColumnCount
 @property  unsigned long imageSequenceRowCount
 @property  double imageSequenceInitialFrame
 @property  double imageSequenceInitialFrameVariation
 @property  double imageSequenceFrameRate
 @property  double imageSequenceFrameRateVariation
 @property  long long imageSequenceAnimationMode
 @property  UIColor *particleColor
 @property  {SCNVector4=ffff} particleColorVariation
 @property  double particleSize
 @property  double particleSizeVariation
 @property  double particleIntensity
 @property  double particleIntensityVariation
 @property  long long blendMode
 @property  BOOL blackPassEnabled
 @property  long long orientationMode
 @property  long long sortingMode
 @property  BOOL lightingEnabled
 @property  BOOL affectedByGravity
 @property  BOOL affectedByPhysicsFields
 @property  BOOL particleDiesOnCollision
 @property  NSArray *colliderNodes
 @property  double particleMass
 @property  double particleMassVariation
 @property  double particleBounce
 @property  double particleBounceVariation
 @property  double particleFriction
 @property  double particleFrictionVariation
 @property  double particleCharge
 @property  double particleChargeVariation
 @property  double dampingFactor
 @property  double speedFactor
 @property  double stretchFactor
 @property  double fresnelExponent
 @property  NSDictionary *propertyControllers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *animationKeys

  // class methods
  +[SCNParticleSystem supportsSecureCoding]
  +[SCNParticleSystem particleSystem]
  +[SCNParticleSystem particleSystemNamed:inDirectory:]
  +[SCNParticleSystem particleSystemWithParticleSystemRef:]

  // instance methods
  -[SCNParticleSystem init]
  -[SCNParticleSystem dealloc]
  -[SCNParticleSystem name]
  -[SCNParticleSystem copyWithZone:]
  -[SCNParticleSystem copy]
  -[SCNParticleSystem encodeWithCoder:]
  -[SCNParticleSystem initWithCoder:]
  -[SCNParticleSystem setName:]
  -[SCNParticleSystem identifier]
  -[SCNParticleSystem setIdentifier:]
  -[SCNParticleSystem reset]
  -[SCNParticleSystem seed]
  -[SCNParticleSystem renderingMode]
  -[SCNParticleSystem scene]
  -[SCNParticleSystem addAnimation:]
  -[SCNParticleSystem animationForKey:]
  -[SCNParticleSystem removeAnimationForKey:]
  -[SCNParticleSystem addAnimation:forKey:]
  -[SCNParticleSystem removeAllAnimations]
  -[SCNParticleSystem animationKeys]
  -[SCNParticleSystem affectedByGravity]
  -[SCNParticleSystem setAffectedByGravity:]
  -[SCNParticleSystem isLocal]
  -[SCNParticleSystem setRenderingMode:]
  -[SCNParticleSystem stretchFactor]
  -[SCNParticleSystem setStretchFactor:]
  -[SCNParticleSystem acceleration]
  -[SCNParticleSystem blendMode]
  -[SCNParticleSystem setBlendMode:]
  -[SCNParticleSystem setLocal:]
  -[SCNParticleSystem birthRate]
  -[SCNParticleSystem setBirthRate:]
  -[SCNParticleSystem emitterShape]
  -[SCNParticleSystem setEmitterShape:]
  -[SCNParticleSystem setSeed:]
  -[SCNParticleSystem setAcceleration:]
  -[SCNParticleSystem setParticleSize:]
  -[SCNParticleSystem particleSize]
  -[SCNParticleSystem loops]
  -[SCNParticleSystem __CFObject]
  -[SCNParticleSystem setLoops:]
  -[SCNParticleSystem sceneRef]
  -[SCNParticleSystem addAnimationPlayer:forKey:]
  -[SCNParticleSystem _scnAnimationForKey:]
  -[SCNParticleSystem animationPlayerForKey:]
  -[SCNParticleSystem animationManager]
  -[SCNParticleSystem _pauseAnimation:forKey:pausedByNode:]
  -[SCNParticleSystem removeAnimationForKey:blendOutDuration:]
  -[SCNParticleSystem removeAnimationForKey:fadeOutDuration:]
  -[SCNParticleSystem pauseAnimationForKey:]
  -[SCNParticleSystem resumeAnimationForKey:]
  -[SCNParticleSystem setSpeed:forAnimationKey:]
  -[SCNParticleSystem isAnimationForKeyPaused:]
  -[SCNParticleSystem __removeAnimation:forKey:]
  -[SCNParticleSystem _syncObjCAnimations]
  -[SCNParticleSystem _copyAnimationsFrom:]
  -[SCNParticleSystem _scnBindings]
  -[SCNParticleSystem bindAnimatablePath:toObject:withKeyPath:options:]
  -[SCNParticleSystem unbindAnimatablePath:]
  -[SCNParticleSystem removeAllBindings]
  -[SCNParticleSystem isPausedOrPausedByInheritance]
  -[SCNParticleSystem presentationInstance]
  -[SCNParticleSystem _isAReference]
  -[SCNParticleSystem setReferenceName:]
  -[SCNParticleSystem referenceName]
  -[SCNParticleSystem _syncObjCModel]
  -[SCNParticleSystem _syncEntityObjCModel]
  -[SCNParticleSystem fresnelExponent]
  -[SCNParticleSystem setFresnelExponent:]
  -[SCNParticleSystem particleSystemRef]
  -[SCNParticleSystem setParticleColor:]
  -[SCNParticleSystem particleImage]
  -[SCNParticleSystem setParticleImage:]
  -[SCNParticleSystem emissionDuration]
  -[SCNParticleSystem setEmissionDuration:]
  -[SCNParticleSystem emissionDurationVariation]
  -[SCNParticleSystem setEmissionDurationVariation:]
  -[SCNParticleSystem idleDuration]
  -[SCNParticleSystem setIdleDuration:]
  -[SCNParticleSystem idleDurationVariation]
  -[SCNParticleSystem setIdleDurationVariation:]
  -[SCNParticleSystem birthRateVariation]
  -[SCNParticleSystem setBirthRateVariation:]
  -[SCNParticleSystem warmupDuration]
  -[SCNParticleSystem setWarmupDuration:]
  -[SCNParticleSystem birthLocation]
  -[SCNParticleSystem setBirthLocation:]
  -[SCNParticleSystem birthDirection]
  -[SCNParticleSystem setBirthDirection:]
  -[SCNParticleSystem emittingDirection]
  -[SCNParticleSystem setEmittingDirection:]
  -[SCNParticleSystem orientationDirection]
  -[SCNParticleSystem setOrientationDirection:]
  -[SCNParticleSystem spreadingAngle]
  -[SCNParticleSystem setSpreadingAngle:]
  -[SCNParticleSystem setIsLocal:]
  -[SCNParticleSystem affectedByPhysicsFields]
  -[SCNParticleSystem setAffectedByPhysicsFields:]
  -[SCNParticleSystem physicsCollisionsEnabled]
  -[SCNParticleSystem setPhysicsCollisionsEnabled:]
  -[SCNParticleSystem isLightingEnabled]
  -[SCNParticleSystem setLightingEnabled:]
  -[SCNParticleSystem areSoftParticlesEnabled]
  -[SCNParticleSystem setSoftParticlesEnabled:]
  -[SCNParticleSystem particleDiesOnCollision]
  -[SCNParticleSystem setParticleDiesOnCollision:]
  -[SCNParticleSystem isBlackPassEnabled]
  -[SCNParticleSystem setBlackPassEnabled:]
  -[SCNParticleSystem particleAngle]
  -[SCNParticleSystem setParticleAngle:]
  -[SCNParticleSystem particleAngleVariation]
  -[SCNParticleSystem setParticleAngleVariation:]
  -[SCNParticleSystem particleVelocity]
  -[SCNParticleSystem setParticleVelocity:]
  -[SCNParticleSystem particleVelocityVariation]
  -[SCNParticleSystem setParticleVelocityVariation:]
  -[SCNParticleSystem particleAngularVelocity]
  -[SCNParticleSystem setParticleAngularVelocity:]
  -[SCNParticleSystem particleAngularVelocityVariation]
  -[SCNParticleSystem setParticleAngularVelocityVariation:]
  -[SCNParticleSystem particleLifeSpan]
  -[SCNParticleSystem setParticleLifeSpan:]
  -[SCNParticleSystem particleLifeSpanVariation]
  -[SCNParticleSystem setParticleLifeSpanVariation:]
  -[SCNParticleSystem particleBounce]
  -[SCNParticleSystem setParticleBounce:]
  -[SCNParticleSystem particleBounceVariation]
  -[SCNParticleSystem setParticleBounceVariation:]
  -[SCNParticleSystem particleFriction]
  -[SCNParticleSystem setParticleFriction:]
  -[SCNParticleSystem particleFrictionVariation]
  -[SCNParticleSystem setParticleFrictionVariation:]
  -[SCNParticleSystem particleCharge]
  -[SCNParticleSystem setParticleCharge:]
  -[SCNParticleSystem particleChargeVariation]
  -[SCNParticleSystem setParticleChargeVariation:]
  -[SCNParticleSystem particleColor]
  -[SCNParticleSystem particleColorVariation]
  -[SCNParticleSystem setParticleColorVariation:]
  -[SCNParticleSystem systemSpawnedOnCollision]
  -[SCNParticleSystem setSystemSpawnedOnCollision:]
  -[SCNParticleSystem systemSpawnedOnDying]
  -[SCNParticleSystem setSystemSpawnedOnDying:]
  -[SCNParticleSystem systemSpawnedOnLiving]
  -[SCNParticleSystem setSystemSpawnedOnLiving:]
  -[SCNParticleSystem particleSizeVariation]
  -[SCNParticleSystem setParticleSizeVariation:]
  -[SCNParticleSystem orientationMode]
  -[SCNParticleSystem setOrientationMode:]
  -[SCNParticleSystem imageSequenceAnimationMode]
  -[SCNParticleSystem setImageSequenceAnimationMode:]
  -[SCNParticleSystem particleGeometries]
  -[SCNParticleSystem setParticleGeometries:]
  -[SCNParticleSystem colliderNodes]
  -[SCNParticleSystem setColliderNodes:]
  -[SCNParticleSystem propertyControllers]
  -[SCNParticleSystem setPropertyControllers:]
  -[SCNParticleSystem sortingMode]
  -[SCNParticleSystem setSortingMode:]
  -[SCNParticleSystem particleMass]
  -[SCNParticleSystem setParticleMass:]
  -[SCNParticleSystem particleMassVariation]
  -[SCNParticleSystem setParticleMassVariation:]
  -[SCNParticleSystem dampingFactor]
  -[SCNParticleSystem setDampingFactor:]
  -[SCNParticleSystem speedFactor]
  -[SCNParticleSystem setSpeedFactor:]
  -[SCNParticleSystem fixedTimeStep]
  -[SCNParticleSystem setFixedTimeStep:]
  -[SCNParticleSystem imageSequenceRowCount]
  -[SCNParticleSystem setImageSequenceRowCount:]
  -[SCNParticleSystem imageSequenceColumnCount]
  -[SCNParticleSystem setImageSequenceColumnCount:]
  -[SCNParticleSystem imageSequenceInitialFrame]
  -[SCNParticleSystem setImageSequenceInitialFrame:]
  -[SCNParticleSystem imageSequenceInitialFrameVariation]
  -[SCNParticleSystem setImageSequenceInitialFrameVariation:]
  -[SCNParticleSystem imageSequenceFrameRate]
  -[SCNParticleSystem setImageSequenceFrameRate:]
  -[SCNParticleSystem imageSequenceFrameRateVariation]
  -[SCNParticleSystem setImageSequenceFrameRateVariation:]
  -[SCNParticleSystem initWithParticleSystemRef:]
  -[SCNParticleSystem initPresentationSystemWithSystemRef:]
  -[SCNParticleSystem _updateParticleC3DImage:]
  -[SCNParticleSystem softParticlesEnabled]
  -[SCNParticleSystem lightingEnabled]
  -[SCNParticleSystem blackPassEnabled]
  -[SCNParticleSystem _customEncodingOfSCNParticleSystem:]
  -[SCNParticleSystem _customDecodingOfSCNParticleSystem:]
  -[SCNParticleSystem setParticleIntensity:]
  -[SCNParticleSystem setParticleIntensityVariation:]
  -[SCNParticleSystem typeOfProperty:]
  -[SCNParticleSystem _setParticleImagePath:withResolvedPath:]
  -[SCNParticleSystem lightEmissionRadiusFactor]
  -[SCNParticleSystem setLightEmissionRadiusFactor:]
  -[SCNParticleSystem particleIntensity]
  -[SCNParticleSystem particleIntensityVariation]
  -[SCNParticleSystem handleEvent:forProperties:withBlock:]
  -[SCNParticleSystem addModifierForProperties:atStage:withBlock:]
  -[SCNParticleSystem removeModifiersOfStage:]
  -[SCNParticleSystem removeAllModifiers]


SCNNode : NSObject <NSCopying, NSSecureCoding, SCNAnimatable, SCNActionable, SCNBoundingVolume, UIFocusItem>
 @property  {SCNVector3=fff} worldUp
 @property  {SCNVector3=fff} worldRight
 @property  {SCNVector3=fff} worldFront
 @property  {?=[4]} simdTransform
 @property  void simdPosition
 @property  void simdRotation
 @property  {?=} simdOrientation
 @property  void simdEulerAngles
 @property  void simdScale
 @property  {?=[4]} simdPivot
 @property  void simdWorldPosition
 @property  {?=} simdWorldOrientation
 @property  {?=[4]} simdWorldTransform
 @property  void simdWorldUp
 @property  void simdWorldRight
 @property  void simdWorldFront
 @property  long long authoringCameraType
 @property  NSString *name
 @property  SCNLight *light
 @property  SCNCamera *camera
 @property  SCNGeometry *geometry
 @property  SCNSkinner *skinner
 @property  SCNMorpher *morpher
 @property  {SCNMatrix4=ffffffffffffffff} transform
 @property  {SCNMatrix4=ffffffffffffffff} worldTransform
 @property  {SCNVector3=fff} position
 @property  {SCNVector3=fff} worldPosition
 @property  {SCNVector4=ffff} rotation
 @property  {SCNVector4=ffff} orientation
 @property  {SCNVector4=ffff} worldOrientation
 @property  {SCNVector3=fff} eulerAngles
 @property  {SCNVector3=fff} scale
 @property  {SCNMatrix4=ffffffffffffffff} pivot
 @property  BOOL hidden
 @property  double opacity
 @property  long long renderingOrder
 @property  BOOL castsShadow
 @property  long long movabilityHint
 @property  SCNNode *parentNode
 @property  NSArray *childNodes
 @property  SCNPhysicsBody *physicsBody
 @property  SCNPhysicsField *physicsField
 @property  NSArray *constraints
 @property  NSArray *filters
 @property  SCNNode *presentationNode
 @property  BOOL paused
 @property  <SCNNodeRendererDelegate> *rendererDelegate
 @property  unsigned long categoryBitMask
 @property  long long focusBehavior
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *animationKeys
 @property  BOOL hasActions
 @property  NSArray *actionKeys
 @property  NSArray *preferredFocusEnvironments
 @property  <UIFocusEnvironment> *parentFocusEnvironment
 @property  <UIFocusItemContainer> *focusItemContainer
 @property  UIView *preferredFocusedView
 @property  BOOL canBecomeFocused
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame

  // class methods
  +[SCNNode resolveInstanceMethod:]
  +[SCNNode supportsSecureCoding]
  +[SCNNode node]
  +[SCNNode nodeWithMDLObject:masterObjects:sceneNodes:skinnedMeshes:skelNodesMap:options:]
  +[SCNNode nodeWithMDLObject:]
  +[SCNNode nodeWithMDLAsset:]
  +[SCNNode nodeWithGeometry:]
  +[SCNNode simdLocalFront]
  +[SCNNode simdLocalUp]
  +[SCNNode simdLocalRight]
  +[SCNNode nodeWithNodeRef:]
  +[SCNNode _dumpNodeTree:tab:]
  +[SCNNode keyPathsForValuesAffectingPosition]
  +[SCNNode keyPathsForValuesAffectingTransform]
  +[SCNNode keyPathsForValuesAffectingRotation]
  +[SCNNode keyPathsForValuesAffectingEulerAngles]
  +[SCNNode keyPathsForValuesAffectingOrientation]
  +[SCNNode keyPathsForValuesAffectingScale]
  +[SCNNode localUp]
  +[SCNNode localRight]
  +[SCNNode localFront]

  // instance methods
  -[SCNNode init]
  -[SCNNode dealloc]
  -[SCNNode name]
  -[SCNNode copyWithZone:]
  -[SCNNode copy]
  -[SCNNode encodeWithCoder:]
  -[SCNNode initWithCoder:]
  -[SCNNode setName:]
  -[SCNNode identifier]
  -[SCNNode constraints]
  -[SCNNode transform]
  -[SCNNode valueForKeyPath:]
  -[SCNNode valueForUndefinedKey:]
  -[SCNNode setValue:forUndefinedKey:]
  -[SCNNode setValue:forKeyPath:]
  -[SCNNode setIdentifier:]
  -[SCNNode dump]
  -[SCNNode parentNode]
  -[SCNNode scale]
  -[SCNNode removeAllActions]
  -[SCNNode position]
  -[SCNNode orientation]
  -[SCNNode isPaused]
  -[SCNNode isHidden]
  -[SCNNode setOrientation:]
  -[SCNNode debugQuickLookObject]
  -[SCNNode filters]
  -[SCNNode setScale:]
  -[SCNNode opacity]
  -[SCNNode setOpacity:]
  -[SCNNode setTransform:]
  -[SCNNode rotation]
  -[SCNNode setRotation:]
  -[SCNNode setEntity:]
  -[SCNNode entity]
  -[SCNNode setPosition:]
  -[SCNNode setPaused:]
  -[SCNNode setHidden:]
  -[SCNNode setFilters:]
  -[SCNNode setNeedsFocusUpdate]
  -[SCNNode updateFocusIfNeeded]
  -[SCNNode shouldUpdateFocusInContext:]
  -[SCNNode didUpdateFocusInContext:withAnimationCoordinator:]
  -[SCNNode preferredFocusEnvironments]
  -[SCNNode parentFocusEnvironment]
  -[SCNNode canBecomeFocused]
  -[SCNNode _isEligibleForFocusInteraction]
  -[SCNNode actions]
  -[SCNNode scene]
  -[SCNNode addAnimation:]
  -[SCNNode animationForKey:]
  -[SCNNode removeAnimationForKey:]
  -[SCNNode addAnimation:forKey:]
  -[SCNNode removeAllAnimations]
  -[SCNNode renderInContext:]
  -[SCNNode animationKeys]
  -[SCNNode _setParent:]
  -[SCNNode categoryBitMask]
  -[SCNNode setCategoryBitMask:]
  -[SCNNode _updateTransform]
  -[SCNNode _setScale:]
  -[SCNNode geometry]
  -[SCNNode setGeometry:]
  -[SCNNode quaternion]
  -[SCNNode setConstraints:]
  -[SCNNode actionForKey:]
  -[SCNNode hidden]
  -[SCNNode hasActions]
  -[SCNNode childNodes]
  -[SCNNode _setAttributes:]
  -[SCNNode attributeForKey:]
  -[SCNNode setAttribute:forKey:]
  -[SCNNode setCamera:]
  -[SCNNode camera]
  -[SCNNode setQuaternion:]
  -[SCNNode indexOfChildNode:]
  -[SCNNode removeFromParentNode]
  -[SCNNode insertChildNode:atIndex:]
  -[SCNNode addChildNode:]
  -[SCNNode enumerateChildNodesUsingBlock:]
  -[SCNNode _setPosition:]
  -[SCNNode eulerAngles]
  -[SCNNode _registerAsObserver]
  -[SCNNode lookAt:]
  -[SCNNode setPhysicsBody:]
  -[SCNNode physicsBody]
  -[SCNNode clone]
  -[SCNNode morpher]
  -[SCNNode _addSkinnerWithMDLMesh:sceneNodes:]
  -[SCNNode light]
  -[SCNNode setLight:]
  -[SCNNode setMorpher:]
  -[SCNNode setSkinner:]
  -[SCNNode _associatedMDLObject]
  -[SCNNode _bakeNodes:folderPath:inVertex:bakeAO:quality:attenuation:geomSetter:terminateSetter:]
  -[SCNNode nodeRef]
  -[SCNNode __CFObject]
  -[SCNNode setEulerAngles:]
  -[SCNNode setRenderingOrder:]
  -[SCNNode setSimdWorldTransform:]
  -[SCNNode enumerateHierarchyUsingBlock:]
  -[SCNNode worldTransform]
  -[SCNNode setWorldTransform:]
  -[SCNNode childNodesPassingTest:]
  -[SCNNode getBoundingBoxMin:max:]
  -[SCNNode convertPosition:toNode:]
  -[SCNNode sceneRef]
  -[SCNNode flattenedCopy]
  -[SCNNode setAuthoringEnvironmentNode:]
  -[SCNNode setHittable:]
  -[SCNNode addAudioPlayer:]
  -[SCNNode audioPlayers]
  -[SCNNode removeAudioPlayer:]
  -[SCNNode addAnimationPlayer:forKey:]
  -[SCNNode _scnAnimationForKey:]
  -[SCNNode animationPlayerForKey:]
  -[SCNNode animationManager]
  -[SCNNode _pauseAnimation:forKey:pausedByNode:]
  -[SCNNode removeAnimationForKey:blendOutDuration:]
  -[SCNNode removeAnimationForKey:fadeOutDuration:]
  -[SCNNode pauseAnimationForKey:]
  -[SCNNode resumeAnimationForKey:]
  -[SCNNode setSpeed:forAnimationKey:]
  -[SCNNode isAnimationForKeyPaused:]
  -[SCNNode __removeAnimation:forKey:]
  -[SCNNode _syncObjCAnimations]
  -[SCNNode _copyAnimationsFrom:]
  -[SCNNode _scnBindings]
  -[SCNNode bindAnimatablePath:toObject:withKeyPath:options:]
  -[SCNNode unbindAnimatablePath:]
  -[SCNNode removeAllBindings]
  -[SCNNode copyAnimationChannelForKeyPath:animation:]
  -[SCNNode isPausedOrPausedByInheritance]
  -[SCNNode presentationInstance]
  -[SCNNode particleSystems]
  -[SCNNode removeParticleSystem:]
  -[SCNNode addParticleSystem:]
  -[SCNNode _isAReference]
  -[SCNNode simdLocalTranslateBy:]
  -[SCNNode simdLocalRotateBy:]
  -[SCNNode simdWorldTransform]
  -[SCNNode simdWorldPosition]
  -[SCNNode simdConvertVector:toNode:]
  -[SCNNode simdWorldOrientation]
  -[SCNNode simdWorldFront]
  -[SCNNode setSimdWorldOrientation:]
  -[SCNNode setSimdPosition:]
  -[SCNNode simdOrientation]
  -[SCNNode setSimdOrientation:]
  -[SCNNode simdWorldRight]
  -[SCNNode simdConvertPosition:fromNode:]
  -[SCNNode simdConvertVector:fromNode:]
  -[SCNNode simdWorldUp]
  -[SCNNode simdRotateBy:aroundTarget:]
  -[SCNNode worldUp]
  -[SCNNode _removeAction:forKey:]
  -[SCNNode rotationRepresentation]
  -[SCNNode setGizmo:]
  -[SCNNode convertTransform:toNode:]
  -[SCNNode presentationNode]
  -[SCNNode childNodeWithName:recursively:]
  -[SCNNode runAction:]
  -[SCNNode parseSpecialKey:withPath:intoDestination:]
  -[SCNNode _syncObjCModel]
  -[SCNNode _syncEntityObjCModel]
  -[SCNNode castsShadow]
  -[SCNNode setCastsShadow:]
  -[SCNNode initPresentationNodeWithNodeRef:]
  -[SCNNode physicsField]
  -[SCNNode _dump:]
  -[SCNNode pivot]
  -[SCNNode setPivot:]
  -[SCNNode renderingOrder]
  -[SCNNode movabilityHint]
  -[SCNNode setMovabilityHint:]
  -[SCNNode rendererDelegate]
  -[SCNNode setRendererDelegate:]
  -[SCNNode setPhysicsField:]
  -[SCNNode authoringEnvironmentNode]
  -[SCNNode focusBehavior]
  -[SCNNode setFocusBehavior:]
  -[SCNNode authoringEnvironmentCompanionNode]
  -[SCNNode setAuthoringEnvironmentCompanionNode:]
  -[SCNNode isGizmo]
  -[SCNNode actionKeys]
  -[SCNNode runAction:forKey:]
  -[SCNNode skinner]
  -[SCNNode _copyRecursively]
  -[SCNNode initWithNodeRef:]
  -[SCNNode _childNodesPassingTest:recursively:output:]
  -[SCNNode childNodesPassingTest:recursively:]
  -[SCNNode _enumerateChildNodesUsingBlock:]
  -[SCNNode _childNodesWithAttribute:output:recursively:]
  -[SCNNode objectInChildNodesWithAttribute:firstOnly:]
  -[SCNNode _findComponentWithType:]
  -[SCNNode _setComponent:withType:]
  -[SCNNode simdConvertPosition:toNode:]
  -[SCNNode _updateAffine]
  -[SCNNode simdRotation]
  -[SCNNode _quaternion]
  -[SCNNode simdEulerAngles]
  -[SCNNode setSimdEulerAngles:]
  -[SCNNode simdPosition]
  -[SCNNode setSimdScale:]
  -[SCNNode simdScale]
  -[SCNNode setSimdRotation:]
  -[SCNNode setSimdTransform:]
  -[SCNNode simdTransform]
  -[SCNNode setSimdWorldPosition:]
  -[SCNNode setSimdPivot:]
  -[SCNNode simdPivot]
  -[SCNNode _removeComponentWithType:]
  -[SCNNode _assignComponent:toContainerWithType:]
  -[SCNNode __light]
  -[SCNNode __skinner]
  -[SCNNode __morpher]
  -[SCNNode __camera]
  -[SCNNode __geometry]
  -[SCNNode _reSyncModelTree]
  -[SCNNode countOfChildNodes]
  -[SCNNode insertObject:inChildNodesAtIndex:]
  -[SCNNode canAddChildNode:]
  -[SCNNode _setHasFocusableChild]
  -[SCNNode _setPausedOrPausedByInheritance:]
  -[SCNNode __insertObject:inChildNodesAtIndex:]
  -[SCNNode __removeObjectFromChildNodesAtIndex:]
  -[SCNNode removeObjectFromChildNodesAtIndex:]
  -[SCNNode _updateFocusableCache]
  -[SCNNode replaceObjectInChildNodesAtIndex:withObject:]
  -[SCNNode simdGetBoundingSphereCenter:radius:]
  -[SCNNode isPresentationInstance]
  -[SCNNode getBoundingSphereCenter:radius:]
  -[SCNNode flattenedClone]
  -[SCNNode _focusableCandidates:]
  -[SCNNode _isEffectivelyHidden]
  -[SCNNode isFocusInteractionEnabled]
  -[SCNNode _isEligibleForFocus]
  -[SCNNode removeActionForKey:]
  -[SCNNode runAction:forKey:completionHandler:]
  -[SCNNode _removeDeadParticleSystem:]
  -[SCNNode _particleSystems]
  -[SCNNode _audioPlayers]
  -[SCNNode simdConvertTransform:toNode:]
  -[SCNNode simdConvertTransform:fromNode:]
  -[SCNNode setBoundingBoxMin:max:]
  -[SCNNode _customEncodingOfSCNNode:usePresentationInstance:]
  -[SCNNode _encodeNodePropertiesWithCoder:]
  -[SCNNode _customDecodingOfSCNNode:]
  -[SCNNode _didDecodeSCNNode:]
  -[SCNNode runAction:completionHandler:]
  -[SCNNode _initChildNodesArray]
  -[SCNNode _dumpTree]
  -[SCNNode objectInChildNodesWithName:]
  -[SCNNode enumerateNodesUsingBlock:]
  -[SCNNode childNodesWithAttribute:recursively:]
  -[SCNNode childNodeWithName:]
  -[SCNNode jsChildNodesWithAttribute:]
  -[SCNNode hitTestWithSegmentFromPoint:toPoint:options:]
  -[SCNNode worldOrientation]
  -[SCNNode setWorldOrientation:]
  -[SCNNode _setQuaternion:]
  -[SCNNode _euler]
  -[SCNNode setWorldPosition:]
  -[SCNNode worldPosition]
  -[SCNNode isHittable]
  -[SCNNode mutableChildNodes]
  -[SCNNode isJoint]
  -[SCNNode setIsJoint:]
  -[SCNNode objectInChildNodesAtIndex:]
  -[SCNNode removeAllChilds]
  -[SCNNode replaceChildNode:with:]
  -[SCNNode getFrustum:withViewport:]
  -[SCNNode getBoundingSphere]
  -[SCNNode getBoundingBox]
  -[SCNNode _subdividedCopyWithSubdivisionLevel:]
  -[SCNNode removeAllParticleSystems]
  -[SCNNode countOfParticleSystems]
  -[SCNNode objectInParticleSystemsAtIndex:]
  -[SCNNode insertObject:inParticleSystemsAtIndex:]
  -[SCNNode removeObjectFromParticleSystemsAtIndex:]
  -[SCNNode replaceObjectInParticleSystemsAtIndex:withObject:]
  -[SCNNode removeAllAudioPlayers]
  -[SCNNode countOfAudioPlayers]
  -[SCNNode objectInAudioPlayersAtIndex:]
  -[SCNNode insertObject:inAudioPlayersAtIndex:]
  -[SCNNode removeObjectFromAudioPlayersAtIndex:]
  -[SCNNode replaceObjectInAudioPlayerAtIndex:withObject:]
  -[SCNNode convertPosition:fromNode:]
  -[SCNNode convertVector:toNode:]
  -[SCNNode convertVector:fromNode:]
  -[SCNNode convertTransform:fromNode:]
  -[SCNNode authoringEnvironmentPresentationNode]
  -[SCNNode setAuthoringEnvironmentPresentationNode:]
  -[SCNNode simdLookAt:]
  -[SCNNode simdLookAt:up:localFront:]
  -[SCNNode worldRight]
  -[SCNNode worldFront]
  -[SCNNode lookAt:up:localFront:]
  -[SCNNode localTranslateBy:]
  -[SCNNode localRotateBy:]
  -[SCNNode rotateBy:aroundTarget:]
  -[SCNNode setAuthoringCameraType:]
  -[SCNNode authoringCameraType]
  -[SCNNode debugQuickLookData]


SCNScene : NSObject <NSSecureCoding>
 @property  SCNNode *rootNode
 @property  SCNPhysicsWorld *physicsWorld
 @property  SCNMaterialProperty *background
 @property  SCNMaterialProperty *lightingEnvironment
 @property  double fogStartDistance
 @property  double fogEndDistance
 @property  double fogDensityExponent
 @property  id fogColor
 @property  BOOL wantsScreenSpaceReflection
 @property  long long screenSpaceReflectionSampleCount
 @property  double screenSpaceReflectionMaximumDistance
 @property  double screenSpaceReflectionStride
 @property  BOOL paused

  // class methods
  +[SCNScene supportsSecureCoding]
  +[SCNScene scene]
  +[SCNScene canImportFileExtension:]
  +[SCNScene sceneWithMDLAsset:options:]
  +[SCNScene sceneWithMDLAsset:]
  +[SCNScene sceneWithURL:options:error:]
  +[SCNScene sceneNamed:inDirectory:options:]
  +[SCNScene sceneWithData:options:]
  +[SCNScene sceneNamed:]
  +[SCNScene sceneNamed:options:]
  +[SCNScene sceneWithURL:options:]
  +[SCNScene sceneWithURL:atIndex:options:]
  +[SCNScene sceneWithData:atIndex:options:]
  +[SCNScene sceneWithSceneRef:]
  +[SCNScene canImportFileUTI:]
  +[SCNScene supportedFileUTIsForImport]
  +[SCNScene supportedFileUTIsForExport]
  +[SCNScene _indexPathForNode:]
  +[SCNScene jsConstructor]

  // instance methods
  -[SCNScene init]
  -[SCNScene dealloc]
  -[SCNScene encodeWithCoder:]
  -[SCNScene initWithCoder:]
  -[SCNScene lock]
  -[SCNScene unlock]
  -[SCNScene valueForUndefinedKey:]
  -[SCNScene setValue:forUndefinedKey:]
  -[SCNScene rootNode]
  -[SCNScene isPaused]
  -[SCNScene root]
  -[SCNScene debugQuickLookObject]
  -[SCNScene background]
  -[SCNScene startTime]
  -[SCNScene setPaused:]
  -[SCNScene endTime]
  -[SCNScene setEndTime:]
  -[SCNScene setStartTime:]
  -[SCNScene scene]
  -[SCNScene _scenes]
  -[SCNScene attributeForKey:]
  -[SCNScene setAttribute:forKey:]
  -[SCNScene playbackSpeed]
  -[SCNScene setPlaybackSpeed:]
  -[SCNScene _setRootNode:]
  -[SCNScene upAxis]
  -[SCNScene setUpAxis:]
  -[SCNScene setFrameRate:]
  -[SCNScene frameRate]
  -[SCNScene _resetSceneTimeRange]
  -[SCNScene __CFObject]
  -[SCNScene physicsWorld]
  -[SCNScene sceneRef]
  -[SCNScene copyAnimationChannelForKeyPath:animation:]
  -[SCNScene isPausedOrPausedByInheritance]
  -[SCNScene particleSystems]
  -[SCNScene removeParticleSystem:]
  -[SCNScene _physicsWorldCreateIfNeeded:]
  -[SCNScene _syncObjCModel]
  -[SCNScene copyAnimationChannelForKeyPath:property:]
  -[SCNScene removeAllParticleSystems]
  -[SCNScene initWithSceneRef:]
  -[SCNScene writeToURLWithUSDKit:]
  -[SCNScene writeToURL:options:delegate:progressHandler:]
  -[SCNScene _nodeWithIndexPath:]
  -[SCNScene initForJavascript:]
  -[SCNScene lightingEnvironment]
  -[SCNScene set_allowsDefaultLightingEnvironmentFallback:]
  -[SCNScene _customEncodingOfSCNScene:]
  -[SCNScene _didEncodeSCNScene:]
  -[SCNScene _customDecodingOfSCNScene:]
  -[SCNScene setRootNode:]
  -[SCNScene setFogStartDistance:]
  -[SCNScene setFogEndDistance:]
  -[SCNScene setFogDensityExponent:]
  -[SCNScene setWantsScreenSpaceReflection:]
  -[SCNScene setScreenSpaceReflectionSampleCount:]
  -[SCNScene setScreenSpaceReflectionMaximumDistance:]
  -[SCNScene setScreenSpaceReflectionStride:]
  -[SCNScene setFogColor:]
  -[SCNScene _didDecodeSCNScene:]
  -[SCNScene _clearSceneRef]
  -[SCNScene _setSourceURL:]
  -[SCNScene setSceneSource:]
  -[SCNScene sceneSource]
  -[SCNScene setRootNode:forLayer:]
  -[SCNScene rootNodeForLayer:]
  -[SCNScene _scaleSceneBy:]
  -[SCNScene _allowsDefaultLightingEnvironmentFallback]
  -[SCNScene fogColor]
  -[SCNScene fogEndDistance]
  -[SCNScene fogDensityExponent]
  -[SCNScene fogStartDistance]
  -[SCNScene wantsScreenSpaceReflection]
  -[SCNScene screenSpaceReflectionSampleCount]
  -[SCNScene screenSpaceReflectionDepthThreshold]
  -[SCNScene setScreenSpaceReflectionDepthThreshold:]
  -[SCNScene screenSpaceReflectionMaximumDistance]
  -[SCNScene screenSpaceReflectionStride]
  -[SCNScene _dumpToDisk]
  -[SCNScene addSceneAnimation:forKey:target:]
  -[SCNScene addParticleSystem:withTransform:]
  -[SCNScene setPausedForEditing:]
  -[SCNScene isPausedForEditing]
  -[SCNScene _subnodeFromIndexPath:]
  -[SCNScene _prettifyForPreview]
  -[SCNScene _exportAsMovieOperationWithDestinationURL:size:attributes:delegate:didEndSelector:userInfo:]
  -[SCNScene writeToURL:options:]
  -[SCNScene exportAsMovieOperationWithDestinationURL:size:attributes:delegate:didEndSelector:userInfo:]
  -[SCNScene debugQuickLookObjectWithPointOfView:]


SCNRendererViewPoint : NSObject
 @property  {SCNMatrix4=ffffffffffffffff} viewMatrix
 @property  {SCNMatrix4=ffffffffffffffff} projectionMatrix
 @property  MTLRenderPassDescriptor *passDescriptor
 @property  {?=dddddd} viewport

  // instance methods
  -[SCNRendererViewPoint dealloc]
  -[SCNRendererViewPoint viewport]
  -[SCNRendererViewPoint setViewport:]
  -[SCNRendererViewPoint projectionMatrix]
  -[SCNRendererViewPoint viewMatrix]
  -[SCNRendererViewPoint passDescriptor]
  -[SCNRendererViewPoint setPassDescriptor:]
  -[SCNRendererViewPoint setViewMatrix:]
  -[SCNRendererViewPoint setProjectionMatrix:]


SCNRendererEvents : NSObject
 @property  <MTLEvent> *waitEvent
 @property  unsigned long waitFrame
 @property  <MTLEvent> *signalEvent
 @property  unsigned long signalFrame

  // instance methods
  -[SCNRendererEvents dealloc]
  -[SCNRendererEvents waitBeforeSubmittingRender:]
  -[SCNRendererEvents signalAfterSubmittingRender:]
  -[SCNRendererEvents waitEvent]
  -[SCNRendererEvents setWaitEvent:]
  -[SCNRendererEvents waitFrame]
  -[SCNRendererEvents setWaitFrame:]
  -[SCNRendererEvents signalEvent]
  -[SCNRendererEvents setSignalEvent:]
  -[SCNRendererEvents signalFrame]
  -[SCNRendererEvents setSignalFrame:]


SCNRendererTransitionContext : NSObject
 @property  SCNScene *outgoingScene
 @property  SKTransition *transition
 @property  double transitionStartTime
 @property  SCNNode *outgoingPointOfView

  // instance methods
  -[SCNRendererTransitionContext dealloc]
  -[SCNRendererTransitionContext copyWithZone:]
  -[SCNRendererTransitionContext transition]
  -[SCNRendererTransitionContext setTransition:]
  -[SCNRendererTransitionContext transitionStartTime]
  -[SCNRendererTransitionContext setTransitionStartTime:]
  -[SCNRendererTransitionContext outgoingPointOfView]
  -[SCNRendererTransitionContext setOutgoingPointOfView:]
  -[SCNRendererTransitionContext outgoingScene]
  -[SCNRendererTransitionContext setOutgoingScene:]
  -[SCNRendererTransitionContext transitionPass]
  -[SCNRendererTransitionContext prepareRendererAtIndex:withScene:renderSize:pointOfView:parentRenderer:]


SCNRenderer : NSObject <SCNSceneRenderer, SCNTechniqueSupport>
 @property  SCNScene *scene
 @property  double nextFrameTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double sceneTime
 @property  <SCNSceneRendererDelegate> *delegate
 @property  BOOL playing
 @property  BOOL loops
 @property  SCNNode *pointOfView
 @property  BOOL autoenablesDefaultLighting
 @property  BOOL jitteringEnabled
 @property  BOOL temporalAntialiasingEnabled
 @property  BOOL showsStatistics
 @property  unsigned long debugOptions
 @property  SKScene *overlaySKScene
 @property  unsigned long renderingAPI
 @property  ^v context
 @property  <MTLRenderCommandEncoder> *currentRenderCommandEncoder
 @property  <MTLDevice> *device
 @property  unsigned long colorPixelFormat
 @property  unsigned long depthPixelFormat
 @property  unsigned long stencilPixelFormat
 @property  <MTLCommandQueue> *commandQueue
 @property  AVAudioEngine *audioEngine
 @property  AVAudioEnvironmentNode *audioEnvironmentNode
 @property  SCNNode *audioListener
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} currentViewport
 @property  BOOL usesReverseZ
 @property  SCNTechnique *technique

  // class methods
  +[SCNRenderer rendererWithContext:options:]
  +[SCNRenderer rendererWithDevice:options:]

  // instance methods
  -[SCNRenderer init]
  -[SCNRenderer dealloc]
  -[SCNRenderer delegate]
  -[SCNRenderer setDelegate:]
  -[SCNRenderer lock]
  -[SCNRenderer unlock]
  -[SCNRenderer _update:]
  -[SCNRenderer context]
  -[SCNRenderer setContext:]
  -[SCNRenderer device]
  -[SCNRenderer commandQueue]
  -[SCNRenderer backgroundColor]
  -[SCNRenderer setBackgroundColor:]
  -[SCNRenderer viewport]
  -[SCNRenderer scene]
  -[SCNRenderer _setInterfaceOrientation:]
  -[SCNRenderer _endFrame]
  -[SCNRenderer setScene:]
  -[SCNRenderer _sampleCount]
  -[SCNRenderer setFrozen:]
  -[SCNRenderer _stop]
  -[SCNRenderer currentTime]
  -[SCNRenderer isPlaying]
  -[SCNRenderer _contentsScaleFactor]
  -[SCNRenderer _beginFrame]
  -[SCNRenderer metalDevice]
  -[SCNRenderer _pause]
  -[SCNRenderer nextFrameTime]
  -[SCNRenderer render]
  -[SCNRenderer setPlaying:]
  -[SCNRenderer _renderingQueue]
  -[SCNRenderer _aspectRatio]
  -[SCNRenderer setCurrentTime:]
  -[SCNRenderer createSnapshot:]
  -[SCNRenderer _backingSize]
  -[SCNRenderer _nextFrameTime]
  -[SCNRenderer metalLayer]
  -[SCNRenderer stencilPixelFormat]
  -[SCNRenderer loops]
  -[SCNRenderer __CFObject]
  -[SCNRenderer setLoops:]
  -[SCNRenderer _jitterAtStep:updateMainFramebuffer:redisplay:jitterer:]
  -[SCNRenderer hitTest:options:]
  -[SCNRenderer _authoringEnvironment]
  -[SCNRenderer overlaySKScene]
  -[SCNRenderer showsStatistics]
  -[SCNRenderer updateAtTime:]
  -[SCNRenderer currentCommandBuffer]
  -[SCNRenderer _engineContext]
  -[SCNRenderer debugOptions]
  -[SCNRenderer currentRenderPassDescriptor]
  -[SCNRenderer currentRenderCommandEncoder]
  -[SCNRenderer setDebugOptions:]
  -[SCNRenderer _superSamplingFactor]
  -[SCNRenderer _screenTransform]
  -[SCNRenderer _disableLinearRendering]
  -[SCNRenderer _enableARMode]
  -[SCNRenderer _shouldDelegateARCompositing]
  -[SCNRenderer _showsAuthoringEnvironment]
  -[SCNRenderer pointOfView]
  -[SCNRenderer setPointOfView:]
  -[SCNRenderer setTechnique:]
  -[SCNRenderer technique]
  -[SCNRenderer hitTestWithSegmentFromPoint:toPoint:options:]
  -[SCNRenderer _viewport]
  -[SCNRenderer renderingAPI]
  -[SCNRenderer sceneTime]
  -[SCNRenderer setSceneTime:]
  -[SCNRenderer set_antialiasingMode:]
  -[SCNRenderer _updateEngineCallbacks]
  -[SCNRenderer _UIOrientationDidChangeNotification:]
  -[SCNRenderer _initWithOptions:isPrivateRenderer:privateRendererOwner:clearsOnDraw:context:renderingAPI:]
  -[SCNRenderer adjustViewportForRendering:]
  -[SCNRenderer _invalidateFramebuffer]
  -[SCNRenderer _prepareSKRenderer]
  -[SCNRenderer _prepareRenderTarget]
  -[SCNRenderer _deleteGLFramebuffer]
  -[SCNRenderer _createPrepareFramebufferIfNeeded]
  -[SCNRenderer _createOffscreenFramebufferIfNeeded]
  -[SCNRenderer _prepareGLRenderTarget]
  -[SCNRenderer _preparePixelFormat]
  -[SCNRenderer _antialiasingMode]
  -[SCNRenderer _projectPoint:viewport:]
  -[SCNRenderer _unprojectPoint:viewport:]
  -[SCNRenderer _getFrameIndex]
  -[SCNRenderer _prepareForTransition:outgoingScene:outgoingPointOfView:completionHandler:]
  -[SCNRenderer _defaultPOVForScene:]
  -[SCNRenderer _c3dBackgroundColorDidChange]
  -[SCNRenderer _setupSKRendererIfNeeded]
  -[SCNRenderer _overlaysDidUpdate:]
  -[SCNRenderer _installContext]
  -[SCNRenderer set_preparePixelFormat:]
  -[SCNRenderer colorPixelFormat]
  -[SCNRenderer _collectCompilationErrors]
  -[SCNRenderer _renderContextMetal]
  -[SCNRenderer _preparePreloadRenderer]
  -[SCNRenderer _prepareObject:shouldAbortBlock:]
  -[SCNRenderer _releasePreloadRenderer]
  -[SCNRenderer _preloadResource:abortHandler:]
  -[SCNRenderer _setSceneTime:]
  -[SCNRenderer updateCurrentTimeIfPlayingWithSystemTime:]
  -[SCNRenderer _systemTime]
  -[SCNRenderer _updateSystemTimeAndDeltaTimeWithCurrentTime:]
  -[SCNRenderer _updateWithSystemTime:]
  -[SCNRenderer _needsRepetitiveRedraw]
  -[SCNRenderer _hitTest:viewport:options:]
  -[SCNRenderer _isNodeInsideFrustum:withPointOfView:viewport:]
  -[SCNRenderer _nodesInsideFrustumWithPointOfView:viewport:]
  -[SCNRenderer _play]
  -[SCNRenderer setupAuthoringEnvironement]
  -[SCNRenderer _resolveAndDiscardGL]
  -[SCNRenderer set_showsAuthoringEnvironment:]
  -[SCNRenderer usesReverseZ]
  -[SCNRenderer _compilationErrors]
  -[SCNRenderer _reloadDebugOptions]
  -[SCNRenderer currentViewport]
  -[SCNRenderer _drawAtTime:]
  -[SCNRenderer setUsesReverseZ:]
  -[SCNRenderer isJitteringEnabled]
  -[SCNRenderer isTemporalAntialiasingEnabled]
  -[SCNRenderer _renderSceneWithEngineContext:sceneTime:]
  -[SCNRenderer _computeNextFrameTime]
  -[SCNRenderer set_nextFrameTime:]
  -[SCNRenderer updateAndDrawStatisticsIfNeeded]
  -[SCNRenderer _needsRedrawAsap]
  -[SCNRenderer _drawSceneWithNewRenderer:]
  -[SCNRenderer _drawSceneWithLegacyRenderer:]
  -[SCNRenderer _clearBackBuffer]
  -[SCNRenderer set_systemTime:]
  -[SCNRenderer set_deltaTime:]
  -[SCNRenderer _installViewport]
  -[SCNRenderer set_viewport:]
  -[SCNRenderer renderAtTime:]
  -[SCNRenderer _drawScene:]
  -[SCNRenderer MTLTexture]
  -[SCNRenderer _updatePointOfView]
  -[SCNRenderer _renderAtTime:]
  -[SCNRenderer _renderAtTime:viewport:encoder:passDescriptor:commandQueue:commandBuffer:]
  -[SCNRenderer renderWithViewport:commandBuffer:passDescriptor:]
  -[SCNRenderer renderWithCommandBuffer:viewPoints:]
  -[SCNRenderer _installGLContextAndSetViewport]
  -[SCNRenderer _createSnapshotAtTime:withSize:antialiasingMode:]
  -[SCNRenderer _setBackingSize:]
  -[SCNRenderer snapshotRendererWithSize:]
  -[SCNRenderer _computedLightingEnvironmentMapsPath]
  -[SCNRenderer set_computedLightingEnvironmentMapsPath:]
  -[SCNRenderer _setupOffscreenRendererWithSize:]
  -[SCNRenderer setOverlaySKScene:]
  -[SCNRenderer setJitteringEnabled:]
  -[SCNRenderer autoenablesDefaultLighting]
  -[SCNRenderer setAutoenablesDefaultLighting:]
  -[SCNRenderer autoAdjustCamera]
  -[SCNRenderer setAutoAdjustCamera:]
  -[SCNRenderer set_superSamplingFactor:]
  -[SCNRenderer set_screenTransform:]
  -[SCNRenderer set_collectCompilationErrors:]
  -[SCNRenderer __setTransitionContext:]
  -[SCNRenderer updateProbes:atTime:]
  -[SCNRenderer renderAtTime:viewport:commandBuffer:passDescriptor:]
  -[SCNRenderer _interfaceOrientationDidChange]
  -[SCNRenderer presentScene:withTransition:incomingPointOfView:completionHandler:]
  -[SCNRenderer isNodeInsideFrustum:withPointOfView:]
  -[SCNRenderer nodesInsideFrustumWithPointOfView:]
  -[SCNRenderer projectPoint:]
  -[SCNRenderer unprojectPoint:]
  -[SCNRenderer prepareObject:shouldAbortBlock:]
  -[SCNRenderer prepareObjects:withCompletionHandler:]
  -[SCNRenderer setTemporalAntialiasingEnabled:]
  -[SCNRenderer setShowsStatistics:]
  -[SCNRenderer depthPixelFormat]
  -[SCNRenderer audioEngine]
  -[SCNRenderer audioEnvironmentNode]
  -[SCNRenderer audioListener]
  -[SCNRenderer setAudioListener:]
  -[SCNRenderer _setContentsScaleFactor:]
  -[SCNRenderer set_aspectRatio:]
  -[SCNRenderer _rendererContextGL]
  -[SCNRenderer setPointOfCulling:]
  -[SCNRenderer pointOfCulling]
  -[SCNRenderer _projectPoints:count:viewport:]
  -[SCNRenderer _didRenderScene:]
  -[SCNRenderer _willRenderScene:]
  -[SCNRenderer _readSubdivCacheForHash:]
  -[SCNRenderer _writeSubdivCacheForHash:dataProvider:]
  -[SCNRenderer setScene:completionHandler:]
  -[SCNRenderer resolvedBackgroundColorDidChange]
  -[SCNRenderer disableOverlays]
  -[SCNRenderer setDisableOverlays:]
  -[SCNRenderer _copyPassDescription]
  -[SCNRenderer _copyRenderGraphDescription]
  -[SCNRenderer _renderGraphFrameRecordingAtPath:withCompletion:]
  -[SCNRenderer _recordWithoutExecute]
  -[SCNRenderer set_recordWithoutExecute:]
  -[SCNRenderer programWithNode:withMaterial:]
  -[SCNRenderer _privateRendererShouldForwardSceneRendererDelegationMessagesToOwner]
  -[SCNRenderer set_privateRendererShouldForwardSceneRendererDelegationMessagesToOwner:]
  -[SCNRenderer _drawOverlaySceneAtTime:]
  -[SCNRenderer setRendersContinuously:]
  -[SCNRenderer jitteringEnabled]
  -[SCNRenderer temporalAntialiasingEnabled]
  -[SCNRenderer frozen]
  -[SCNRenderer _copyPerformanceStatistics]
  -[SCNRenderer _displayLinkStatsTick]
  -[SCNRenderer _displayLinkStatsTack]
  -[SCNRenderer _runningInExtension]
  -[SCNRenderer _presentFramebuffer]
  -[SCNRenderer _enablesDeferredShading]
  -[SCNRenderer set_enablesDeferredShading:]
  -[SCNRenderer set_disableLinearRendering:]
  -[SCNRenderer set_enableARMode:]
  -[SCNRenderer set_shouldDelegateARCompositing:]
  -[SCNRenderer _drawableSafeAreaInsets]
  -[SCNRenderer set_drawableSafeAreaInsets:]
  -[SCNRenderer _drawWithJitteringPresentationMode]
  -[SCNRenderer _draw]
  -[SCNRenderer renderAtTime:viewport:encoder:passDescriptor:commandQueue:]
  -[SCNRenderer renderAtTime:commandBuffer:viewPoints:]
  -[SCNRenderer renderWithViewpoints:events:]
  -[SCNRenderer snapshotAtTime:]
  -[SCNRenderer snapshotAtTime:withSize:antialiasingMode:]
  -[SCNRenderer _updateProbes:withProgress:]
  -[SCNRenderer copySnapshotWithSize:]
  -[SCNRenderer initOffscreenRendererWithSize:options:]
  -[SCNRenderer privateRendererOwner]
  -[SCNRenderer renderMovieToURL:size:antialiasingMode:attributes:error:]


SCNOffscreenRenderer : SCNRenderer
 @property  unsigned int textureID
 @property  unsigned long antialiasingMode
 @property  {CGSize=dd} size

  // class methods
  +[SCNOffscreenRenderer offscreenRendererWithDevice:size:]
  +[SCNOffscreenRenderer offscreenRendererWithContext:size:]

  // instance methods
  -[SCNOffscreenRenderer size]
  -[SCNOffscreenRenderer setSize:]
  -[SCNOffscreenRenderer snapshot]
  -[SCNOffscreenRenderer antialiasingMode]
  -[SCNOffscreenRenderer textureID]
  -[SCNOffscreenRenderer setAntialiasingMode:]


SCNOrderedDictionary : NSObject
  // instance methods
  -[SCNOrderedDictionary dealloc]
  -[SCNOrderedDictionary copy]
  -[SCNOrderedDictionary count]
  -[SCNOrderedDictionary allKeys]
  -[SCNOrderedDictionary objectAtIndex:]
  -[SCNOrderedDictionary removeAllObjects]
  -[SCNOrderedDictionary setValue:forKey:]
  -[SCNOrderedDictionary objectForKey:]
  -[SCNOrderedDictionary removeObjectForKey:]
  -[SCNOrderedDictionary allValues]
  -[SCNOrderedDictionary setObject:forKey:]
  -[SCNOrderedDictionary dictionary]
  -[SCNOrderedDictionary keys]
  -[SCNOrderedDictionary valueForKey:]
  -[SCNOrderedDictionary _setupFrom:]
  -[SCNOrderedDictionary applyFunction:withContext:]


SCNRecursiveLock : NSObject
  // instance methods
  -[SCNRecursiveLock init]
  -[SCNRecursiveLock dealloc]
  -[SCNRecursiveLock lock]
  -[SCNRecursiveLock unlock]


SCN_CAKeyframeAnimation : CAKeyframeAnimation /System/Library/Frameworks/MetalKit.framework/MetalKit
  // class methods
  +[SCN_CAKeyframeAnimation supportsSecureCoding]

  // instance methods
  -[SCN_CAKeyframeAnimation dealloc]
  -[SCN_CAKeyframeAnimation copyWithZone:]
  -[SCN_CAKeyframeAnimation encodeWithCoder:]
  -[SCN_CAKeyframeAnimation initWithCoder:]
  -[SCN_CAKeyframeAnimation setValues:]
  -[SCN_CAKeyframeAnimation values]
  -[SCN_CAKeyframeAnimation keyPath]
  -[SCN_CAKeyframeAnimation duration]
  -[SCN_CAKeyframeAnimation setDuration:]
  -[SCN_CAKeyframeAnimation timingFunction]
  -[SCN_CAKeyframeAnimation setTimingFunction:]
  -[SCN_CAKeyframeAnimation speed]
  -[SCN_CAKeyframeAnimation setSpeed:]
  -[SCN_CAKeyframeAnimation isAdditive]
  -[SCN_CAKeyframeAnimation setFillMode:]
  -[SCN_CAKeyframeAnimation setTimeOffset:]
  -[SCN_CAKeyframeAnimation setAutoreverses:]
  -[SCN_CAKeyframeAnimation setRepeatCount:]
  -[SCN_CAKeyframeAnimation timeOffset]
  -[SCN_CAKeyframeAnimation setKeyPath:]
  -[SCN_CAKeyframeAnimation setRemovedOnCompletion:]
  -[SCN_CAKeyframeAnimation setKeyTimes:]
  -[SCN_CAKeyframeAnimation setTimingFunctions:]
  -[SCN_CAKeyframeAnimation setFadeInDuration:]
  -[SCN_CAKeyframeAnimation setFadeOutDuration:]
  -[SCN_CAKeyframeAnimation fadeInDuration]
  -[SCN_CAKeyframeAnimation fadeOutDuration]
  -[SCN_CAKeyframeAnimation keyTimes]
  -[SCN_CAKeyframeAnimation setAdditive:]
  -[SCN_CAKeyframeAnimation setTensionValues:]
  -[SCN_CAKeyframeAnimation autoreverses]
  -[SCN_CAKeyframeAnimation repeatCount]
  -[SCN_CAKeyframeAnimation repeatDuration]
  -[SCN_CAKeyframeAnimation fillMode]
  -[SCN_CAKeyframeAnimation setRepeatDuration:]
  -[SCN_CAKeyframeAnimation additive]
  -[SCN_CAKeyframeAnimation isRemovedOnCompletion]
  -[SCN_CAKeyframeAnimation timingFunctions]
  -[SCN_CAKeyframeAnimation tensionValues]
  -[SCN_CAKeyframeAnimation continuityValues]
  -[SCN_CAKeyframeAnimation setContinuityValues:]
  -[SCN_CAKeyframeAnimation biasValues]
  -[SCN_CAKeyframeAnimation setBiasValues:]
  -[SCN_CAKeyframeAnimation isCumulative]
  -[SCN_CAKeyframeAnimation setCumulative:]
  -[SCN_CAKeyframeAnimation cumulative]
  -[SCN_CAKeyframeAnimation setUsesSceneTimeBase:]
  -[SCN_CAKeyframeAnimation usesSceneTimeBase]
  -[SCN_CAKeyframeAnimation setC3dAnimation:]
  -[SCN_CAKeyframeAnimation _convertToCA]
  -[SCN_CAKeyframeAnimation _clearC3DCache]
  -[SCN_CAKeyframeAnimation setCommitsOnCompletion:]
  -[SCN_CAKeyframeAnimation commitsOnCompletion]
  -[SCN_CAKeyframeAnimation setAnimationEvents:]
  -[SCN_CAKeyframeAnimation animationEvents]
  -[SCN_CAKeyframeAnimation c3dAnimation]


SCNAnimationEvent : NSObject
  // class methods
  +[SCNAnimationEvent animationEventWithKeyTime:block:]

  // instance methods
  -[SCNAnimationEvent init]
  -[SCNAnimationEvent dealloc]
  -[SCNAnimationEvent time]
  -[SCNAnimationEvent setTime:]
  -[SCNAnimationEvent eventBlock]
  -[SCNAnimationEvent setEventBlock:]


SCNTimingFunction : NSObject <NSSecureCoding>
  // class methods
  +[SCNTimingFunction supportsSecureCoding]
  +[SCNTimingFunction functionWithTimingMode:]
  +[SCNTimingFunction functionWithCAMediaTimingFunction:]

  // instance methods
  -[SCNTimingFunction dealloc]
  -[SCNTimingFunction encodeWithCoder:]
  -[SCNTimingFunction initWithCoder:]
  -[SCNTimingFunction initWithTimingFunctionRef:]
  -[SCNTimingFunction c3dTimingFunction]


SCNAnimation : NSObject <SCNAnimation, NSCopying, NSSecureCoding>
 @property  double duration
 @property  NSString *keyPath
 @property  SCNTimingFunction *timingFunction
 @property  double blendInDuration
 @property  double blendOutDuration
 @property  BOOL removedOnCompletion
 @property  BOOL appliedOnCompletion
 @property  double repeatCount
 @property  BOOL autoreverses
 @property  double startDelay
 @property  double timeOffset
 @property  BOOL fillsForward
 @property  BOOL fillsBackward
 @property  BOOL usesSceneTimeBase
 @property  @? animationDidStart
 @property  @? animationDidStop
 @property  NSArray *animationEvents
 @property  BOOL additive
 @property  BOOL cumulative
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCNAnimation supportsSecureCoding]
  +[SCNAnimation animationWithCAAnimation:]
  +[SCNAnimation animationWithMDLTransform:]
  +[SCNAnimation animationNamed:]
  +[SCNAnimation animationWithC3DAnimation:]
  +[SCNAnimation animationWithContentsOfURL:]
  +[SCNAnimation animationFromScene:]

  // instance methods
  -[SCNAnimation dealloc]
  -[SCNAnimation copyWithZone:]
  -[SCNAnimation encodeWithCoder:]
  -[SCNAnimation initWithCoder:]
  -[SCNAnimation keyPath]
  -[SCNAnimation valueForUndefinedKey:]
  -[SCNAnimation setValue:forUndefinedKey:]
  -[SCNAnimation duration]
  -[SCNAnimation setDuration:]
  -[SCNAnimation timingFunction]
  -[SCNAnimation setTimingFunction:]
  -[SCNAnimation isAdditive]
  -[SCNAnimation setTimeOffset:]
  -[SCNAnimation setAutoreverses:]
  -[SCNAnimation setRepeatCount:]
  -[SCNAnimation timeOffset]
  -[SCNAnimation setKeyPath:]
  -[SCNAnimation setRemovedOnCompletion:]
  -[SCNAnimation setFadeInDuration:]
  -[SCNAnimation setFadeOutDuration:]
  -[SCNAnimation fadeInDuration]
  -[SCNAnimation fadeOutDuration]
  -[SCNAnimation setAdditive:]
  -[SCNAnimation autoreverses]
  -[SCNAnimation repeatCount]
  -[SCNAnimation repeatDuration]
  -[SCNAnimation setRepeatDuration:]
  -[SCNAnimation isRemovedOnCompletion]
  -[SCNAnimation isCumulative]
  -[SCNAnimation setCumulative:]
  -[SCNAnimation _didMutate]
  -[SCNAnimation setStartDelay:]
  -[SCNAnimation startDelay]
  -[SCNAnimation setUsesSceneTimeBase:]
  -[SCNAnimation __CFObject]
  -[SCNAnimation userAnimation]
  -[SCNAnimation prepareWithTarget:implicitDuration:]
  -[SCNAnimation usesSceneTimeBase]
  -[SCNAnimation _syncObjCModel]
  -[SCNAnimation animationRef]
  -[SCNAnimation setAnimationEvents:]
  -[SCNAnimation animationEvents]
  -[SCNAnimation caAnimation]
  -[SCNAnimation _setAnimationRef:]
  -[SCNAnimation initWithC3DAnimation:]
  -[SCNAnimation isAppliedOnCompletion]
  -[SCNAnimation fillsForward]
  -[SCNAnimation fillsBackward]
  -[SCNAnimation setAppliedOnCompletion:]
  -[SCNAnimation setFillsForward:]
  -[SCNAnimation setFillsBackward:]
  -[SCNAnimation initWithCAAnimation:]
  -[SCNAnimation setBlendInDuration:]
  -[SCNAnimation setBlendOutDuration:]
  -[SCNAnimation animationDidStart]
  -[SCNAnimation setAnimationDidStart:]
  -[SCNAnimation animationDidStop]
  -[SCNAnimation setAnimationDidStop:]
  -[SCNAnimation blendInDuration]
  -[SCNAnimation blendOutDuration]


SCNAnimationPlayer : NSObject <SCNAnimatable, NSCopying, NSSecureCoding>
 @property  SCNAnimation *animation
 @property  double speed
 @property  double blendFactor
 @property  BOOL paused
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *animationKeys

  // class methods
  +[SCNAnimationPlayer supportsSecureCoding]
  +[SCNAnimationPlayer animationPlayerWithSCNAnimation:]
  +[SCNAnimationPlayer animationPlayerWithAnimationPlayerRef:]
  +[SCNAnimationPlayer animationPlayerWithAnimation:]

  // instance methods
  -[SCNAnimationPlayer dealloc]
  -[SCNAnimationPlayer copyWithZone:]
  -[SCNAnimationPlayer encodeWithCoder:]
  -[SCNAnimationPlayer initWithCoder:]
  -[SCNAnimationPlayer stop]
  -[SCNAnimationPlayer setWeight:]
  -[SCNAnimationPlayer commonInit]
  -[SCNAnimationPlayer weight]
  -[SCNAnimationPlayer speed]
  -[SCNAnimationPlayer setSpeed:]
  -[SCNAnimationPlayer animation]
  -[SCNAnimationPlayer paused]
  -[SCNAnimationPlayer setPaused:]
  -[SCNAnimationPlayer play]
  -[SCNAnimationPlayer scene]
  -[SCNAnimationPlayer addAnimation:]
  -[SCNAnimationPlayer animationForKey:]
  -[SCNAnimationPlayer removeAnimationForKey:]
  -[SCNAnimationPlayer addAnimation:forKey:]
  -[SCNAnimationPlayer removeAllAnimations]
  -[SCNAnimationPlayer animationKeys]
  -[SCNAnimationPlayer blendFactor]
  -[SCNAnimationPlayer _setAnimation:]
  -[SCNAnimationPlayer __CFObject]
  -[SCNAnimationPlayer sceneRef]
  -[SCNAnimationPlayer prepareWithTarget:implicitDuration:]
  -[SCNAnimationPlayer addAnimationPlayer:forKey:]
  -[SCNAnimationPlayer _scnAnimationForKey:]
  -[SCNAnimationPlayer animationPlayerForKey:]
  -[SCNAnimationPlayer animationManager]
  -[SCNAnimationPlayer _pauseAnimation:forKey:pausedByNode:]
  -[SCNAnimationPlayer removeAnimationForKey:blendOutDuration:]
  -[SCNAnimationPlayer removeAnimationForKey:fadeOutDuration:]
  -[SCNAnimationPlayer pauseAnimationForKey:]
  -[SCNAnimationPlayer resumeAnimationForKey:]
  -[SCNAnimationPlayer setSpeed:forAnimationKey:]
  -[SCNAnimationPlayer isAnimationForKeyPaused:]
  -[SCNAnimationPlayer __removeAnimation:forKey:]
  -[SCNAnimationPlayer _syncObjCAnimations]
  -[SCNAnimationPlayer _copyAnimationsFrom:]
  -[SCNAnimationPlayer _scnBindings]
  -[SCNAnimationPlayer bindAnimatablePath:toObject:withKeyPath:options:]
  -[SCNAnimationPlayer unbindAnimatablePath:]
  -[SCNAnimationPlayer removeAllBindings]
  -[SCNAnimationPlayer copyAnimationChannelForKeyPath:animation:]
  -[SCNAnimationPlayer animationPlayerRef]
  -[SCNAnimationPlayer initWithAnimationPlayerRef:]
  -[SCNAnimationPlayer initWithSCNAnimation:]
  -[SCNAnimationPlayer setBlendFactor:]
  -[SCNAnimationPlayer stopWithBlendOutDuration:]
  -[SCNAnimationPlayer stopWithFadeOutDuration:]


SCNSceneSource : NSObject <NSKeyedUnarchiverDelegate>
 @property  NSURL *url
 @property  NSData *data
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCNSceneSource sceneSourceWithURL:options:]
  +[SCNSceneSource sceneSourceWithData:options:]
  +[SCNSceneSource _shouldCacheWithOptions:]
  +[SCNSceneSource _cachedSceneSourceForURL:options:]
  +[SCNSceneSource _cacheSceneSource:forURL:options:]
  +[SCNSceneSource _removeCachedSceneSourceIfNeededForURL:]
  +[SCNSceneSource sceneTypes]
  +[SCNSceneSource sceneFileTypes]

  // instance methods
  -[SCNSceneSource dealloc]
  -[SCNSceneSource propertyForKey:]
  -[SCNSceneSource data]
  -[SCNSceneSource unarchiver:cannotDecodeObjectOfClassName:originalClasses:]
  -[SCNSceneSource url]
  -[SCNSceneSource debugQuickLookObject]
  -[SCNSceneSource initWithData:options:]
  -[SCNSceneSource initWithURL:options:]
  -[SCNSceneSource library]
  -[SCNSceneSource sceneWithClass:options:error:]
  -[SCNSceneSource _createSceneRefWithOptions:statusHandler:]
  -[SCNSceneSource sceneSourceOptions]
  -[SCNSceneSource sceneCount]
  -[SCNSceneSource sceneWithOptions:error:]
  -[SCNSceneSource _sceneWithClass:options:statusHandler:]
  -[SCNSceneSource sceneWithClass:options:statusHandler:]
  -[SCNSceneSource copyPropertiesAtIndex:options:]
  -[SCNSceneSource _appendToEntries:entriesWithType:passingTest:entryObjectConstructor:]
  -[SCNSceneSource entryWithIdentifier:withClass:]
  -[SCNSceneSource identifiersOfEntriesWithClass:]
  -[SCNSceneSource countOfScenes]
  -[SCNSceneSource sceneAtIndex:options:]
  -[SCNSceneSource sceneAtIndex:options:error:]
  -[SCNSceneSource sceneWithOptions:statusHandler:]
  -[SCNSceneSource sceneSourceRef]
  -[SCNSceneSource c3dDataRepresentation]
  -[SCNSceneSource entriesPassingTest:]
  -[SCNSceneSource entryWithID:withClass:]
  -[SCNSceneSource IDsOfEntriesWithClass:]
  -[SCNSceneSource sourceStatus]
  -[SCNSceneSource canExportToColladaWithNoDataLoss]
  -[SCNSceneSource performConsistencyCheck]
  -[SCNSceneSource debugQuickLookData]


SCNHitTestResult : NSObject
 @property  void simdLocalCoordinates
 @property  void simdWorldCoordinates
 @property  void simdLocalNormal
 @property  void simdWorldNormal
 @property  {?=[4]} simdModelTransform
 @property  SCNNode *node
 @property  long long geometryIndex
 @property  long long faceIndex
 @property  {SCNVector3=fff} localCoordinates
 @property  {SCNVector3=fff} worldCoordinates
 @property  {SCNVector3=fff} localNormal
 @property  {SCNVector3=fff} worldNormal
 @property  {SCNMatrix4=ffffffffffffffff} modelTransform
 @property  SCNNode *boneNode

  // class methods
  +[SCNHitTestResult hitTestResultsFromHitTestResultRef:]

  // instance methods
  -[SCNHitTestResult dealloc]
  -[SCNHitTestResult node]
  -[SCNHitTestResult faceIndex]
  -[SCNHitTestResult initWithResult:]
  -[SCNHitTestResult worldCoordinates]
  -[SCNHitTestResult simdLocalCoordinates]
  -[SCNHitTestResult simdWorldCoordinates]
  -[SCNHitTestResult simdLocalNormal]
  -[SCNHitTestResult simdWorldNormal]
  -[SCNHitTestResult textureCoordinatesWithMappingChannel:]
  -[SCNHitTestResult geometryIndex]
  -[SCNHitTestResult boneNode]
  -[SCNHitTestResult localCoordinates]
  -[SCNHitTestResult localNormal]
  -[SCNHitTestResult worldNormal]
  -[SCNHitTestResult textureCoordinate]
  -[SCNHitTestResult modelTransform]
  -[SCNHitTestResult simdModelTransform]


SCNAuthoringEnvironment2 : NSObject
 @property  SCNNode *authoringLayer
 @property  SCNNode *authoringOverlayLayer
 @property  SCNManipulator *manipulator
 @property  long long displayMask

  // class methods
  +[SCNAuthoringEnvironment2 authoringEnvironmentForScene:createIfNeeded:]
  +[SCNAuthoringEnvironment2 authoringEnvironmentForScene:]

  // instance methods
  -[SCNAuthoringEnvironment2 dealloc]
  -[SCNAuthoringEnvironment2 initWithScene:]
  -[SCNAuthoringEnvironment2 selectNode:]
  -[SCNAuthoringEnvironment2 cancelSelection]
  -[SCNAuthoringEnvironment2 authoringOverlayLayer]
  -[SCNAuthoringEnvironment2 prepareScene:]
  -[SCNAuthoringEnvironment2 addedNode:]
  -[SCNAuthoringEnvironment2 setDisplayMask:]
  -[SCNAuthoringEnvironment2 geometryForLightType:]
  -[SCNAuthoringEnvironment2 particlesGeometry]
  -[SCNAuthoringEnvironment2 cameraGeometry]
  -[SCNAuthoringEnvironment2 cameraOrthographicFrustumGeometry]
  -[SCNAuthoringEnvironment2 cameraFrustumGeometry]
  -[SCNAuthoringEnvironment2 cameraNearPlaneGeometry]
  -[SCNAuthoringEnvironment2 fieldGeometry]
  -[SCNAuthoringEnvironment2 addLightNode:]
  -[SCNAuthoringEnvironment2 addParticlesNode:]
  -[SCNAuthoringEnvironment2 addCameraNode:]
  -[SCNAuthoringEnvironment2 addPhysicsFieldNode:]
  -[SCNAuthoringEnvironment2 removeLightNode:]
  -[SCNAuthoringEnvironment2 removeParticlesNode:]
  -[SCNAuthoringEnvironment2 removeCameraNode:]
  -[SCNAuthoringEnvironment2 removePhysicsFieldNode:]
  -[SCNAuthoringEnvironment2 _resetLightAuthoringWithContainerNode:source:light:]
  -[SCNAuthoringEnvironment2 updateLightTypeForNode:source:light:screenspaceScalingFactor:]
  -[SCNAuthoringEnvironment2 setupParticleMeshEmitter:authoringNode:]
  -[SCNAuthoringEnvironment2 _updateRootsVisibility]
  -[SCNAuthoringEnvironment2 authoringCameraNodes]
  -[SCNAuthoringEnvironment2 manipulator]
  -[SCNAuthoringEnvironment2 removedNode:]
  -[SCNAuthoringEnvironment2 addNodeToSelection:]
  -[SCNAuthoringEnvironment2 selectNodes:]
  -[SCNAuthoringEnvironment2 updateLightNode:withSourceNode:]
  -[SCNAuthoringEnvironment2 updateParticlesNode:withSourceNode:]
  -[SCNAuthoringEnvironment2 updateCameraNode:withSourceNode:]
  -[SCNAuthoringEnvironment2 updateFieldNode:withSourceNode:]
  -[SCNAuthoringEnvironment2 updateWithRenderer:]
  -[SCNAuthoringEnvironment2 authoringLayer]
  -[SCNAuthoringEnvironment2 displayMask]
  -[SCNAuthoringEnvironment2 didTapAtPoint:]
  -[SCNAuthoringEnvironment2 setAuthoringCamera:forView:]
  -[SCNAuthoringEnvironment2 authoringCamera:]


SCNFloor : SCNGeometry
 @property  double reflectivity
 @property  double reflectionFalloffStart
 @property  double reflectionFalloffEnd
 @property  unsigned long reflectionCategoryBitMask
 @property  double width
 @property  double length
 @property  double reflectionResolutionScaleFactor

  // class methods
  +[SCNFloor supportsSecureCoding]
  +[SCNFloor floor]

  // instance methods
  -[SCNFloor init]
  -[SCNFloor dealloc]
  -[SCNFloor length]
  -[SCNFloor copyWithZone:]
  -[SCNFloor setLength:]
  -[SCNFloor encodeWithCoder:]
  -[SCNFloor initWithCoder:]
  -[SCNFloor width]
  -[SCNFloor height]
  -[SCNFloor setWidth:]
  -[SCNFloor setHeight:]
  -[SCNFloor copyAnimationChannelForKeyPath:animation:]
  -[SCNFloor _syncObjCModel]
  -[SCNFloor reflectionFalloffStart]
  -[SCNFloor reflectionFalloffEnd]
  -[SCNFloor setReflectionFalloffStart:]
  -[SCNFloor setReflectionFalloffEnd:]
  -[SCNFloor reflectivity]
  -[SCNFloor setReflectivity:]
  -[SCNFloor reflectionResolutionScaleFactor]
  -[SCNFloor setReflectionResolutionScaleFactor:]
  -[SCNFloor reflectionSampleCount]
  -[SCNFloor setReflectionSampleCount:]
  -[SCNFloor reflectionCategoryBitMask]
  -[SCNFloor setReflectionCategoryBitMask:]
  -[SCNFloor _customDecodingOfSCNFloor:]
  -[SCNFloor initWithFloorGeometryRef:]
  -[SCNFloor floorRef]
  -[SCNFloor reflectionFallOffStart]
  -[SCNFloor reflectionFallOffEnd]
  -[SCNFloor setReflectionFallOffStart:]
  -[SCNFloor setReflectionFallOffEnd:]
  -[SCNFloor __createCFObject]


SCNCamera : NSObject <SCNAnimatable, SCNTechniqueSupport, NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  double fieldOfView
 @property  long long projectionDirection
 @property  double focalLength
 @property  double sensorHeight
 @property  double zNear
 @property  double zFar
 @property  BOOL automaticallyAdjustsZRange
 @property  BOOL usesOrthographicProjection
 @property  double orthographicScale
 @property  {SCNMatrix4=ffffffffffffffff} projectionTransform
 @property  BOOL wantsDepthOfField
 @property  double focusDistance
 @property  long long focalBlurSampleCount
 @property  double fStop
 @property  long long apertureBladeCount
 @property  double motionBlurIntensity
 @property  double screenSpaceAmbientOcclusionIntensity
 @property  double screenSpaceAmbientOcclusionRadius
 @property  double screenSpaceAmbientOcclusionBias
 @property  double screenSpaceAmbientOcclusionDepthThreshold
 @property  double screenSpaceAmbientOcclusionNormalThreshold
 @property  BOOL wantsHDR
 @property  double exposureOffset
 @property  double averageGray
 @property  double whitePoint
 @property  BOOL wantsExposureAdaptation
 @property  double exposureAdaptationBrighteningSpeedFactor
 @property  double exposureAdaptationDarkeningSpeedFactor
 @property  double minimumExposure
 @property  double maximumExposure
 @property  double bloomThreshold
 @property  long long bloomIterationCount
 @property  double bloomIterationSpread
 @property  double bloomIntensity
 @property  double bloomBlurRadius
 @property  double vignettingPower
 @property  double vignettingIntensity
 @property  double colorFringeStrength
 @property  double colorFringeIntensity
 @property  double saturation
 @property  double contrast
 @property  double grainIntensity
 @property  double grainScale
 @property  BOOL grainIsColored
 @property  double whiteBalanceTemperature
 @property  double whiteBalanceTint
 @property  SCNMaterialProperty *colorGrading
 @property  unsigned long categoryBitMask
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *animationKeys
 @property  SCNTechnique *technique

  // class methods
  +[SCNCamera supportsSecureCoding]
  +[SCNCamera camera]
  +[SCNCamera cameraWithMDLCamera:]
  +[SCNCamera cameraWithCameraRef:]
  +[SCNCamera keyPathsForValuesAffectingFieldOfView]
  +[SCNCamera keyPathsForValuesAffectingFocalLength]

  // instance methods
  -[SCNCamera init]
  -[SCNCamera dealloc]
  -[SCNCamera name]
  -[SCNCamera copyWithZone:]
  -[SCNCamera copy]
  -[SCNCamera encodeWithCoder:]
  -[SCNCamera initWithCoder:]
  -[SCNCamera setName:]
  -[SCNCamera identifier]
  -[SCNCamera setIdentifier:]
  -[SCNCamera saturation]
  -[SCNCamera debugQuickLookObject]
  -[SCNCamera whitePoint]
  -[SCNCamera aspectRatio]
  -[SCNCamera setAspectRatio:]
  -[SCNCamera focalLength]
  -[SCNCamera setFocalLength:]
  -[SCNCamera setSaturation:]
  -[SCNCamera contrast]
  -[SCNCamera setContrast:]
  -[SCNCamera scene]
  -[SCNCamera addAnimation:]
  -[SCNCamera setFillMode:]
  -[SCNCamera animationForKey:]
  -[SCNCamera removeAnimationForKey:]
  -[SCNCamera addAnimation:forKey:]
  -[SCNCamera removeAllAnimations]
  -[SCNCamera animationKeys]
  -[SCNCamera categoryBitMask]
  -[SCNCamera setCategoryBitMask:]
  -[SCNCamera fillMode]
  -[SCNCamera fieldOfView]
  -[SCNCamera setAperture:]
  -[SCNCamera aperture]
  -[SCNCamera focusDistance]
  -[SCNCamera setFieldOfView:]
  -[SCNCamera _registerAsObserver]
  -[SCNCamera apertureBladeCount]
  -[SCNCamera setFocusDistance:]
  -[SCNCamera zNear]
  -[SCNCamera setZNear:]
  -[SCNCamera zFar]
  -[SCNCamera setZFar:]
  -[SCNCamera fStop]
  -[SCNCamera setFStop:]
  -[SCNCamera setApertureBladeCount:]
  -[SCNCamera sensorHeight]
  -[SCNCamera useLegacyFov]
  -[SCNCamera yFov]
  -[SCNCamera focalBlurRadius]
  -[SCNCamera usesOrthographicProjection]
  -[SCNCamera setSensorHeight:]
  -[SCNCamera setFocalBlurRadius:]
  -[SCNCamera setUsesOrthographicProjection:]
  -[SCNCamera __CFObject]
  -[SCNCamera sceneRef]
  -[SCNCamera addAnimationPlayer:forKey:]
  -[SCNCamera _scnAnimationForKey:]
  -[SCNCamera animationPlayerForKey:]
  -[SCNCamera animationManager]
  -[SCNCamera _pauseAnimation:forKey:pausedByNode:]
  -[SCNCamera removeAnimationForKey:blendOutDuration:]
  -[SCNCamera removeAnimationForKey:fadeOutDuration:]
  -[SCNCamera pauseAnimationForKey:]
  -[SCNCamera resumeAnimationForKey:]
  -[SCNCamera setSpeed:forAnimationKey:]
  -[SCNCamera isAnimationForKeyPaused:]
  -[SCNCamera __removeAnimation:forKey:]
  -[SCNCamera _syncObjCAnimations]
  -[SCNCamera _copyAnimationsFrom:]
  -[SCNCamera _scnBindings]
  -[SCNCamera bindAnimatablePath:toObject:withKeyPath:options:]
  -[SCNCamera unbindAnimatablePath:]
  -[SCNCamera removeAllBindings]
  -[SCNCamera copyAnimationChannelForKeyPath:animation:]
  -[SCNCamera isPausedOrPausedByInheritance]
  -[SCNCamera presentationInstance]
  -[SCNCamera setOrthographicScale:]
  -[SCNCamera cameraRef]
  -[SCNCamera _syncObjCModel]
  -[SCNCamera _syncEntityObjCModel]
  -[SCNCamera orthographicScale]
  -[SCNCamera setTechnique:]
  -[SCNCamera technique]
  -[SCNCamera presentationCamera]
  -[SCNCamera hasCustomProjectionTransform]
  -[SCNCamera xFov]
  -[SCNCamera projectionDirection]
  -[SCNCamera setAutomaticallyAdjustsZRange:]
  -[SCNCamera initWithCameraRef:]
  -[SCNCamera setXFov:]
  -[SCNCamera setYFov:]
  -[SCNCamera _updateFocalLength]
  -[SCNCamera initPresentationCameraWithCameraRef:]
  -[SCNCamera bloomIterationCount]
  -[SCNCamera setBloomIterationCount:]
  -[SCNCamera dofIntensity]
  -[SCNCamera setDofIntensity:]
  -[SCNCamera _updateFieldOfView]
  -[SCNCamera setProjectionDirection:]
  -[SCNCamera projectionTransformWithViewportSize:]
  -[SCNCamera wantsDepthOfField]
  -[SCNCamera setWantsDepthOfField:]
  -[SCNCamera focalBlurSampleCount]
  -[SCNCamera setFocalBlurSampleCount:]
  -[SCNCamera focalSize]
  -[SCNCamera setFocalSize:]
  -[SCNCamera automaticallyAdjustsZRange]
  -[SCNCamera wantsHDR]
  -[SCNCamera setWantsHDR:]
  -[SCNCamera setWhitePoint:]
  -[SCNCamera averageGray]
  -[SCNCamera setAverageGray:]
  -[SCNCamera wantsExposureAdaptation]
  -[SCNCamera setWantsExposureAdaptation:]
  -[SCNCamera exposureAdaptationDuration]
  -[SCNCamera setExposureAdaptationDuration:]
  -[SCNCamera exposureAdaptationBrighteningSpeedFactor]
  -[SCNCamera setExposureAdaptationBrighteningSpeedFactor:]
  -[SCNCamera exposureAdaptationDarkeningSpeedFactor]
  -[SCNCamera setExposureAdaptationDarkeningSpeedFactor:]
  -[SCNCamera exposureAdaptationHistogramRangeLowProbability]
  -[SCNCamera setExposureAdaptationHistogramRangeLowProbability:]
  -[SCNCamera exposureAdaptationHistogramRangeHighProbability]
  -[SCNCamera setExposureAdaptationHistogramRangeHighProbability:]
  -[SCNCamera exposureAdaptationMode]
  -[SCNCamera setExposureAdaptationMode:]
  -[SCNCamera minimumExposure]
  -[SCNCamera setMinimumExposure:]
  -[SCNCamera maximumExposure]
  -[SCNCamera setMaximumExposure:]
  -[SCNCamera bloomIntensity]
  -[SCNCamera setBloomIntensity:]
  -[SCNCamera bloomThreshold]
  -[SCNCamera setBloomThreshold:]
  -[SCNCamera bloomIterationSpread]
  -[SCNCamera setBloomIterationSpread:]
  -[SCNCamera bloomBlurRadius]
  -[SCNCamera setBloomBlurRadius:]
  -[SCNCamera vignettingPower]
  -[SCNCamera setVignettingPower:]
  -[SCNCamera vignettingIntensity]
  -[SCNCamera setVignettingIntensity:]
  -[SCNCamera colorFringeStrength]
  -[SCNCamera setColorFringeStrength:]
  -[SCNCamera colorFringeIntensity]
  -[SCNCamera setColorFringeIntensity:]
  -[SCNCamera grainIntensity]
  -[SCNCamera setGrainIntensity:]
  -[SCNCamera grainScale]
  -[SCNCamera setGrainScale:]
  -[SCNCamera grainIsColored]
  -[SCNCamera setGrainIsColored:]
  -[SCNCamera whiteBalanceTemperature]
  -[SCNCamera setWhiteBalanceTemperature:]
  -[SCNCamera whiteBalanceTint]
  -[SCNCamera setWhiteBalanceTint:]
  -[SCNCamera motionBlurIntensity]
  -[SCNCamera setMotionBlurIntensity:]
  -[SCNCamera screenSpaceAmbientOcclusionIntensity]
  -[SCNCamera setScreenSpaceAmbientOcclusionIntensity:]
  -[SCNCamera screenSpaceAmbientOcclusionRadius]
  -[SCNCamera setScreenSpaceAmbientOcclusionRadius:]
  -[SCNCamera screenSpaceAmbientOcclusionBias]
  -[SCNCamera setScreenSpaceAmbientOcclusionBias:]
  -[SCNCamera screenSpaceAmbientOcclusionDepthThreshold]
  -[SCNCamera setScreenSpaceAmbientOcclusionDepthThreshold:]
  -[SCNCamera screenSpaceAmbientOcclusionNormalThreshold]
  -[SCNCamera setScreenSpaceAmbientOcclusionNormalThreshold:]
  -[SCNCamera screenSpaceAmbientOcclusionSampleCount]
  -[SCNCamera setScreenSpaceAmbientOcclusionSampleCount:]
  -[SCNCamera screenSpaceAmbientOcclusionDownSample]
  -[SCNCamera setScreenSpaceAmbientOcclusionDownSample:]
  -[SCNCamera setProjectionTransform:]
  -[SCNCamera _customEncodingOfSCNCamera:]
  -[SCNCamera setExposureOffset:]
  -[SCNCamera _didDecodeSCNCamera:]
  -[SCNCamera bloomIteration]
  -[SCNCamera setBloomIteration:]
  -[SCNCamera grainSlice]
  -[SCNCamera setGrainSlice:]
  -[SCNCamera grainTexture]
  -[SCNCamera setGrainTexture:]
  -[SCNCamera exposureOffset]
  -[SCNCamera fieldOfViewOrientation]
  -[SCNCamera setFieldOfViewOrientation:]
  -[SCNCamera xMag]
  -[SCNCamera setXMag:]
  -[SCNCamera yMag]
  -[SCNCamera setYMag:]
  -[SCNCamera projectionTransform]
  -[SCNCamera colorGrading]
  -[SCNCamera focalDistance]
  -[SCNCamera setFocalDistance:]
  -[SCNCamera debugQuickLookData]


SCNMaterialAttachment : NSObject
 @property  unsigned int glID
 @property  unsigned int target
 @property  ^v context
 @property  {CGSize=dd} size
 @property  NSDictionary *options

  // class methods
  +[SCNMaterialAttachment materialAttachmentWithGLKTextureInfo:]

  // instance methods
  -[SCNMaterialAttachment dealloc]
  -[SCNMaterialAttachment options]
  -[SCNMaterialAttachment setTarget:]
  -[SCNMaterialAttachment target]
  -[SCNMaterialAttachment size]
  -[SCNMaterialAttachment context]
  -[SCNMaterialAttachment setOptions:]
  -[SCNMaterialAttachment setContext:]
  -[SCNMaterialAttachment setSize:]
  -[SCNMaterialAttachment glID]
  -[SCNMaterialAttachment setGlID:]


SCNMaterialProperty : NSObject <SCNAnimatable, NSSecureCoding>
 @property  id contents
 @property  double intensity
 @property  long long minificationFilter
 @property  long long magnificationFilter
 @property  long long mipFilter
 @property  {SCNMatrix4=ffffffffffffffff} contentsTransform
 @property  long long wrapS
 @property  long long wrapT
 @property  long long mappingChannel
 @property  long long textureComponents
 @property  double maxAnisotropy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *animationKeys

  // class methods
  +[SCNMaterialProperty supportsSecureCoding]
  +[SCNMaterialProperty copyC3DImageFromImage:]
  +[SCNMaterialProperty copyImageFromC3DImage:]
  +[SCNMaterialProperty copyC3DImageFromImage:textureOptions:wasCached:]
  +[SCNMaterialProperty _copyC3DImageFromImageData:typeID:]
  +[SCNMaterialProperty copyC3DImageFromImage:textureOptions:]
  +[SCNMaterialProperty _copyImageFromC3DImage:]
  +[SCNMaterialProperty materialPropertyWithContents:]
  +[SCNMaterialProperty captureDeviceOutputConsumerWithOptions:]
  +[SCNMaterialProperty dvt_supportedTypesForPropertyContents]
  +[SCNMaterialProperty captureDeviceOutputConsumer]

  // instance methods
  -[SCNMaterialProperty floatValue]
  -[SCNMaterialProperty init]
  -[SCNMaterialProperty dealloc]
  -[SCNMaterialProperty copyWithZone:]
  -[SCNMaterialProperty copy]
  -[SCNMaterialProperty parent]
  -[SCNMaterialProperty encodeWithCoder:]
  -[SCNMaterialProperty initWithCoder:]
  -[SCNMaterialProperty contents]
  -[SCNMaterialProperty slotName]
  -[SCNMaterialProperty color]
  -[SCNMaterialProperty image]
  -[SCNMaterialProperty setImage:]
  -[SCNMaterialProperty setColor:]
  -[SCNMaterialProperty intensity]
  -[SCNMaterialProperty setIntensity:]
  -[SCNMaterialProperty content]
  -[SCNMaterialProperty attachment]
  -[SCNMaterialProperty setBorderColor:]
  -[SCNMaterialProperty setAttachment:]
  -[SCNMaterialProperty setContents:]
  -[SCNMaterialProperty layer]
  -[SCNMaterialProperty addAnimation:]
  -[SCNMaterialProperty propertyName]
  -[SCNMaterialProperty animationForKey:]
  -[SCNMaterialProperty removeAnimationForKey:]
  -[SCNMaterialProperty addAnimation:forKey:]
  -[SCNMaterialProperty removeAllAnimations]
  -[SCNMaterialProperty contentsTransform]
  -[SCNMaterialProperty animationKeys]
  -[SCNMaterialProperty setLayer:]
  -[SCNMaterialProperty _setColor:]
  -[SCNMaterialProperty borderColor]
  -[SCNMaterialProperty _setParent:]
  -[SCNMaterialProperty setMinificationFilter:]
  -[SCNMaterialProperty setContent:]
  -[SCNMaterialProperty _clearContents]
  -[SCNMaterialProperty setContentsTransform:]
  -[SCNMaterialProperty propertyType]
  -[SCNMaterialProperty magnificationFilter]
  -[SCNMaterialProperty setMagnificationFilter:]
  -[SCNMaterialProperty minificationFilter]
  -[SCNMaterialProperty setMaxAnisotropy:]
  -[SCNMaterialProperty setMipFilter:]
  -[SCNMaterialProperty captureDevice]
  -[SCNMaterialProperty setCaptureDevice:]
  -[SCNMaterialProperty avPlayer]
  -[SCNMaterialProperty setFloatValue:]
  -[SCNMaterialProperty mipFilter]
  -[SCNMaterialProperty mappingChannel]
  -[SCNMaterialProperty setMappingChannel:]
  -[SCNMaterialProperty textureComponents]
  -[SCNMaterialProperty setTextureComponents:]
  -[SCNMaterialProperty setAvPlayer:]
  -[SCNMaterialProperty maxAnisotropy]
  -[SCNMaterialProperty getC3DImageRef]
  -[SCNMaterialProperty _setImagePath:withResolvedPath:]
  -[SCNMaterialProperty setWrapS:]
  -[SCNMaterialProperty setWrapT:]
  -[SCNMaterialProperty __CFObject]
  -[SCNMaterialProperty sceneRef]
  -[SCNMaterialProperty effectSlot]
  -[SCNMaterialProperty addAnimationPlayer:forKey:]
  -[SCNMaterialProperty _scnAnimationForKey:]
  -[SCNMaterialProperty animationPlayerForKey:]
  -[SCNMaterialProperty animationManager]
  -[SCNMaterialProperty _pauseAnimation:forKey:pausedByNode:]
  -[SCNMaterialProperty removeAnimationForKey:blendOutDuration:]
  -[SCNMaterialProperty removeAnimationForKey:fadeOutDuration:]
  -[SCNMaterialProperty pauseAnimationForKey:]
  -[SCNMaterialProperty resumeAnimationForKey:]
  -[SCNMaterialProperty setSpeed:forAnimationKey:]
  -[SCNMaterialProperty isAnimationForKeyPaused:]
  -[SCNMaterialProperty __removeAnimation:forKey:]
  -[SCNMaterialProperty _syncObjCAnimations]
  -[SCNMaterialProperty _copyAnimationsFrom:]
  -[SCNMaterialProperty _scnBindings]
  -[SCNMaterialProperty bindAnimatablePath:toObject:withKeyPath:options:]
  -[SCNMaterialProperty unbindAnimatablePath:]
  -[SCNMaterialProperty removeAllBindings]
  -[SCNMaterialProperty copyAnimationChannelForKeyPath:animation:]
  -[SCNMaterialProperty isPausedOrPausedByInheritance]
  -[SCNMaterialProperty presentationInstance]
  -[SCNMaterialProperty setTextureProvider:]
  -[SCNMaterialProperty textureProvider]
  -[SCNMaterialProperty _syncObjCModel]
  -[SCNMaterialProperty parentWillDie:]
  -[SCNMaterialProperty initWithParent:propertyType:]
  -[SCNMaterialProperty copyPropertiesFrom:]
  -[SCNMaterialProperty presentationMaterialProperty]
  -[SCNMaterialProperty commonProfile]
  -[SCNMaterialProperty _setC3DImageRef:]
  -[SCNMaterialProperty _setupContentsFromC3DImage]
  -[SCNMaterialProperty _hasDefaultValues]
  -[SCNMaterialProperty unlinkCustomPropertyWithParent:]
  -[SCNMaterialProperty linkCustomPropertyWithParent:andCustomName:]
  -[SCNMaterialProperty _animationPathForKey:]
  -[SCNMaterialProperty _updateMaterialColor:]
  -[SCNMaterialProperty _updateMaterialNumber:]
  -[SCNMaterialProperty textureSampler]
  -[SCNMaterialProperty _updateMaterialFilters]
  -[SCNMaterialProperty _presentationMappingChannel]
  -[SCNMaterialProperty effectSlotCreateIfNeeded:]
  -[SCNMaterialProperty _updateMaterialBorderColor:]
  -[SCNMaterialProperty _updateMaterialAttachment:]
  -[SCNMaterialProperty _textureOptions]
  -[SCNMaterialProperty _updateMaterialImage:]
  -[SCNMaterialProperty _updateC3DImageWithContents:]
  -[SCNMaterialProperty _updateMaterialSKScene:]
  -[SCNMaterialProperty _updateMaterialSKTexture:]
  -[SCNMaterialProperty _updateMaterialLayer:]
  -[SCNMaterialProperty _updateMaterialAVPlayer:]
  -[SCNMaterialProperty _updateMaterialCaptureDevice:]
  -[SCNMaterialProperty _updateMaterialCaptureDeviceOutputConsumerSource:]
  -[SCNMaterialProperty _updateMaterialTextureProvider:]
  -[SCNMaterialProperty _layerDidChange:]
  -[SCNMaterialProperty _updateMaterialUIComponent:]
  -[SCNMaterialProperty setSkScene:]
  -[SCNMaterialProperty setSkTexture:]
  -[SCNMaterialProperty setMtlTexture:]
  -[SCNMaterialProperty setUIView:]
  -[SCNMaterialProperty setUIWindow:]
  -[SCNMaterialProperty setCaptureDeviceOutputConsumerSource:]
  -[SCNMaterialProperty _updateMaterialProceduralContents:]
  -[SCNMaterialProperty _updateMaterialMTLTexture:]
  -[SCNMaterialProperty __allocateContentTransformIfNeeded]
  -[SCNMaterialProperty _updateMaterialPropertyTransform:]
  -[SCNMaterialProperty wrapS]
  -[SCNMaterialProperty wrapT]
  -[SCNMaterialProperty sRGBTexture]
  -[SCNMaterialProperty setSRGBTexture:]
  -[SCNMaterialProperty initPresentationMaterialPropertyWithModelProperty:]
  -[SCNMaterialProperty borderColor4]
  -[SCNMaterialProperty _skSceneDidChange:]
  -[SCNMaterialProperty _customEncodingOfSCNMaterialProperty:]
  -[SCNMaterialProperty _customDecodingOfSCNMaterialProperty:]
  -[SCNMaterialProperty _didDecodeSCNMaterialProperty:]
  -[SCNMaterialProperty initWithParent:andCustomName:]
  -[SCNMaterialProperty __runtimeResolvedPath]
  -[SCNMaterialProperty color4]
  -[SCNMaterialProperty pvrtcData]
  -[SCNMaterialProperty skScene]
  -[SCNMaterialProperty skTexture]
  -[SCNMaterialProperty captureDeviceOutputConsumerSource]
  -[SCNMaterialProperty UIView]
  -[SCNMaterialProperty setProceduralContents:]
  -[SCNMaterialProperty proceduralContents]
  -[SCNMaterialProperty mtlTexture]


SCNGeometry : NSObject <SCNAnimatable, SCNBoundingVolume, SCNShadable, NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  NSArray *materials
 @property  SCNMaterial *firstMaterial
 @property  NSArray *geometrySources
 @property  NSArray *geometryElements
 @property  long long geometryElementCount
 @property  NSArray *levelsOfDetail
 @property  SCNGeometryTessellator *tessellator
 @property  unsigned long subdivisionLevel
 @property  BOOL wantsAdaptiveSubdivision
 @property  SCNGeometryElement *edgeCreasesElement
 @property  SCNGeometrySource *edgeCreasesSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *animationKeys
 @property  SCNProgram *program
 @property  NSDictionary *shaderModifiers

  // class methods
  +[SCNGeometry resolveInstanceMethod:]
  +[SCNGeometry supportsSecureCoding]
  +[SCNGeometry geometry]
  +[SCNGeometry geometryWithMDLMesh:]
  +[SCNGeometry geometryWithMDLMesh:submesh:]
  +[SCNGeometry geometryWithSources:elements:]
  +[SCNGeometry geometryWithSources:elements:sourceChannels:]
  +[SCNGeometry morpherWithMDLMesh:]
  +[SCNGeometry geometryWithGeometryRef:]
  +[SCNGeometry planeWithWidth:height:options:]
  +[SCNGeometry boxWithWidth:height:length:cornerRadius:options:]
  +[SCNGeometry pyramidWithWidth:height:length:options:]
  +[SCNGeometry sphereWithRadius:options:]
  +[SCNGeometry cylinderWithRadius:height:options:]
  +[SCNGeometry coneWithHeight:topRadius:bottomRadius:options:]
  +[SCNGeometry tubeWithInnerRadius:outerRadius:height:options:]
  +[SCNGeometry capsuleWithRadius:height:options:]
  +[SCNGeometry torusWithRingRadius:pipeRadius:options:]
  +[SCNGeometry floorWithOptions:]

  // instance methods
  -[SCNGeometry init]
  -[SCNGeometry dealloc]
  -[SCNGeometry name]
  -[SCNGeometry copyWithZone:]
  -[SCNGeometry copy]
  -[SCNGeometry mutableCopy]
  -[SCNGeometry encodeWithCoder:]
  -[SCNGeometry initWithCoder:]
  -[SCNGeometry setName:]
  -[SCNGeometry identifier]
  -[SCNGeometry valueForUndefinedKey:]
  -[SCNGeometry setValue:forUndefinedKey:]
  -[SCNGeometry setIdentifier:]
  -[SCNGeometry debugQuickLookObject]
  -[SCNGeometry primitiveType]
  -[SCNGeometry scene]
  -[SCNGeometry addAnimation:]
  -[SCNGeometry animationForKey:]
  -[SCNGeometry removeAnimationForKey:]
  -[SCNGeometry addAnimation:forKey:]
  -[SCNGeometry removeAllAnimations]
  -[SCNGeometry animationKeys]
  -[SCNGeometry _setAttributes:]
  -[SCNGeometry levelsOfDetail]
  -[SCNGeometry setLevelsOfDetail:]
  -[SCNGeometry program]
  -[SCNGeometry setProgram:]
  -[SCNGeometry shaderModifiers]
  -[SCNGeometry material]
  -[SCNGeometry _expand]
  -[SCNGeometry setMaterial:]
  -[SCNGeometry setPrimitiveType:]
  -[SCNGeometry setEdgeCreasesSource:]
  -[SCNGeometry setEdgeCreasesElement:]
  -[SCNGeometry geometrySourceChannels]
  -[SCNGeometry geometrySources]
  -[SCNGeometry geometrySourcesForSemantic:]
  -[SCNGeometry geometryElements]
  -[SCNGeometry firstMaterial]
  -[SCNGeometry geometryElementCount]
  -[SCNGeometry materials]
  -[SCNGeometry geometryElementAtIndex:]
  -[SCNGeometry setSubdivisionLevel:]
  -[SCNGeometry setWantsAdaptiveSubdivision:]
  -[SCNGeometry setTessellator:]
  -[SCNGeometry setMaterials:]
  -[SCNGeometry __CFObject]
  -[SCNGeometry getBoundingBoxMin:max:]
  -[SCNGeometry sceneRef]
  -[SCNGeometry addAnimationPlayer:forKey:]
  -[SCNGeometry _scnAnimationForKey:]
  -[SCNGeometry animationPlayerForKey:]
  -[SCNGeometry animationManager]
  -[SCNGeometry _pauseAnimation:forKey:pausedByNode:]
  -[SCNGeometry removeAnimationForKey:blendOutDuration:]
  -[SCNGeometry removeAnimationForKey:fadeOutDuration:]
  -[SCNGeometry pauseAnimationForKey:]
  -[SCNGeometry resumeAnimationForKey:]
  -[SCNGeometry setSpeed:forAnimationKey:]
  -[SCNGeometry isAnimationForKeyPaused:]
  -[SCNGeometry handleBindingOfSymbol:usingBlock:]
  -[SCNGeometry __removeAnimation:forKey:]
  -[SCNGeometry _syncObjCAnimations]
  -[SCNGeometry _copyAnimationsFrom:]
  -[SCNGeometry _scnBindings]
  -[SCNGeometry bindAnimatablePath:toObject:withKeyPath:options:]
  -[SCNGeometry unbindAnimatablePath:]
  -[SCNGeometry removeAllBindings]
  -[SCNGeometry copyAnimationChannelForKeyPath:animation:]
  -[SCNGeometry isPausedOrPausedByInheritance]
  -[SCNGeometry presentationInstance]
  -[SCNGeometry geometryRef]
  -[SCNGeometry replaceMaterialAtIndex:withMaterial:]
  -[SCNGeometry _syncObjCModel]
  -[SCNGeometry _syncEntityObjCModel]
  -[SCNGeometry materialRef]
  -[SCNGeometry customMaterialProperties]
  -[SCNGeometry copyShaderModifiersFrom:]
  -[SCNGeometry _setupShadableHelperIfNeeded]
  -[SCNGeometry setShaderModifiers:]
  -[SCNGeometry __shadableHelper]
  -[SCNGeometry shaderModifiersArgumentsNames]
  -[SCNGeometry handleUnbindingOfSymbol:usingBlock:]
  -[SCNGeometry _shadableSetValue:forUndefinedKey:]
  -[SCNGeometry materialRefCreateIfNeeded]
  -[SCNGeometry customMaterialPropertyNames]
  -[SCNGeometry customMaterialAttributeNames]
  -[SCNGeometry customMaterialAttributes]
  -[SCNGeometry presentationGeometry]
  -[SCNGeometry simdGetBoundingSphereCenter:radius:]
  -[SCNGeometry isPresentationInstance]
  -[SCNGeometry getBoundingSphereCenter:radius:]
  -[SCNGeometry setGeometryRef:]
  -[SCNGeometry setBoundingBoxMin:max:]
  -[SCNGeometry getBoundingSphere]
  -[SCNGeometry getBoundingBox]
  -[SCNGeometry setFirstMaterial:]
  -[SCNGeometry setValueForKey:optionKey:options:]
  -[SCNGeometry initWithGeometryRef:]
  -[SCNGeometry _setupObjCModelFrom:]
  -[SCNGeometry __createCFObject]
  -[SCNGeometry geometryDescription]
  -[SCNGeometry _setGeometryRef:]
  -[SCNGeometry initPresentationGeometryWithGeometryRef:]
  -[SCNGeometry _setupGeometrySources]
  -[SCNGeometry _setupGeometryElements]
  -[SCNGeometry subdivisionLevel]
  -[SCNGeometry wantsAdaptiveSubdivision]
  -[SCNGeometry _subdivisionSettings]
  -[SCNGeometry set_subdivisionSettings:]
  -[SCNGeometry tessellator]
  -[SCNGeometry _copyAttributesTo:]
  -[SCNGeometry _materialWithName:]
  -[SCNGeometry mutableMaterials]
  -[SCNGeometry _firstMaterial]
  -[SCNGeometry removeMaterialAtIndex:]
  -[SCNGeometry insertMaterial:atIndex:]
  -[SCNGeometry replaceObjectInMaterialsAtIndex:withObject:]
  -[SCNGeometry insertObject:inMaterialsAtIndex:]
  -[SCNGeometry removeObjectFromMaterialsAtIndex:]
  -[SCNGeometry removeAllMaterials]
  -[SCNGeometry parseSpecialKey:withPath:intoDestination:remainingPath:]
  -[SCNGeometry replaceMaterial:with:]
  -[SCNGeometry removeMaterial:]
  -[SCNGeometry _customEncodingOfSCNGeometry:]
  -[SCNGeometry _customDecodingOfSCNGeometry:]
  -[SCNGeometry _releaseCachedSourcesAndElements]
  -[SCNGeometry geometrySourceForSemantic:]
  -[SCNGeometry _hasFixedBoundingBoxExtrema]
  -[SCNGeometry interleavedCopy]
  -[SCNGeometry _renderableCopy]
  -[SCNGeometry keyForNodeAttributes]
  -[SCNGeometry materialWithName:]
  -[SCNGeometry countOfMaterials]
  -[SCNGeometry objectInMaterialsAtIndex:]
  -[SCNGeometry edgeCreasesElement]
  -[SCNGeometry edgeCreasesSource]
  -[SCNGeometry _unifyNormals]
  -[SCNGeometry _geometryByWeldingVerticesWithThreshold:normalThreshold:]
  -[SCNGeometry _geometryByUnifyingNormalsWithCreaseThreshold:]
  -[SCNGeometry _geometryByAddingSourcesOfSkinner:]
  -[SCNGeometry _geometryByRemovingSkinnerSources]
  -[SCNGeometry _discardOriginalTopology]
  -[SCNGeometry debugQuickLookData]


SCNMutableGeometry : SCNGeometry
  // instance methods
  -[SCNMutableGeometry mutableGeometrySourcesForSemantic:]
  -[SCNMutableGeometry mutateGeometrySourcesWithSemantics:usingBlock:]


SCNAssetCatalogCacheEntry : NSObject
 @property  id item
 @property  double timestamp

  // instance methods
  -[SCNAssetCatalogCacheEntry dealloc]
  -[SCNAssetCatalogCacheEntry item]
  -[SCNAssetCatalogCacheEntry setItem:]
  -[SCNAssetCatalogCacheEntry timestamp]
  -[SCNAssetCatalogCacheEntry setTimestamp:]


SCNAssetCatalog : NSObject
 @property  NSURL *catalogURL

  // class methods
  +[SCNAssetCatalog clearCache]
  +[SCNAssetCatalog assetCatalogWithURL:]
  +[SCNAssetCatalog objectWithName:class:]
  +[SCNAssetCatalog assetCatalogForResourceURL:]
  +[SCNAssetCatalog recursivePathsForResourcesOfType:inDirectory:]
  +[SCNAssetCatalog assetCatalogNamed:]

  // instance methods
  -[SCNAssetCatalog dealloc]
  -[SCNAssetCatalog sceneWithURL:]
  -[SCNAssetCatalog catalogURL]
  -[SCNAssetCatalog animationNamed:]
  -[SCNAssetCatalog actionNamed:]
  -[SCNAssetCatalog particleSystemNamed:]
  -[SCNAssetCatalog sceneNamed:]
  -[SCNAssetCatalog cacheObject:withTimestamp:forKey:]
  -[SCNAssetCatalog URLOfResourceNamed:]
  -[SCNAssetCatalog pathByMakingURLRelativeToCatalog:]


SCNSceneDatabase : NSObject <NSSecureCoding>
  // class methods
  +[SCNSceneDatabase supportsSecureCoding]
  +[SCNSceneDatabase lookUpKeyForObjectNamed:class:]
  +[SCNSceneDatabase sceneDatabase]

  // instance methods
  -[SCNSceneDatabase init]
  -[SCNSceneDatabase dealloc]
  -[SCNSceneDatabase encodeWithCoder:]
  -[SCNSceneDatabase initWithCoder:]
  -[SCNSceneDatabase addInstance:withName:class:]


SCNSceneLookUpUnarchiver : NSObject <NSSecureCoding>
  // class methods
  +[SCNSceneLookUpUnarchiver supportsSecureCoding]

  // instance methods
  -[SCNSceneLookUpUnarchiver encodeWithCoder:]
  -[SCNSceneLookUpUnarchiver initWithCoder:]


SCNParticlePropertyController : NSObject <NSSecureCoding, NSCopying>
 @property  CAAnimation *animation
 @property  long long inputMode
 @property  double inputScale
 @property  double inputBias
 @property  SCNNode *inputOrigin
 @property  NSString *inputProperty

  // class methods
  +[SCNParticlePropertyController supportsSecureCoding]
  +[SCNParticlePropertyController particlePropertyControllerWithAnimation:]
  +[SCNParticlePropertyController controllerWithAnimation:]

  // instance methods
  -[SCNParticlePropertyController init]
  -[SCNParticlePropertyController dealloc]
  -[SCNParticlePropertyController copyWithZone:]
  -[SCNParticlePropertyController copy]
  -[SCNParticlePropertyController encodeWithCoder:]
  -[SCNParticlePropertyController initWithCoder:]
  -[SCNParticlePropertyController inputScale]
  -[SCNParticlePropertyController setInputScale:]
  -[SCNParticlePropertyController inputBias]
  -[SCNParticlePropertyController setInputBias:]
  -[SCNParticlePropertyController animation]
  -[SCNParticlePropertyController setInputMode:]
  -[SCNParticlePropertyController inputMode]
  -[SCNParticlePropertyController setAnimation:]
  -[SCNParticlePropertyController inputOrigin]
  -[SCNParticlePropertyController setInputOrigin:]
  -[SCNParticlePropertyController setC3dAnimation:]
  -[SCNParticlePropertyController inputProperty]
  -[SCNParticlePropertyController c3dAnimation]
  -[SCNParticlePropertyController setInputProperty:]
  -[SCNParticlePropertyController _customEncodingOfSCNParticlePropertyController:]
  -[SCNParticlePropertyController _customDecodingOfSCNParticlePropertyController:]


SCNSkinner : NSObject <NSSecureCoding>
 @property  SCNNode *skeleton
 @property  SCNGeometry *baseGeometry
 @property  {SCNMatrix4=ffffffffffffffff} baseGeometryBindTransform
 @property  NSArray *boneInverseBindTransforms
 @property  NSArray *bones
 @property  SCNGeometrySource *boneWeights
 @property  SCNGeometrySource *boneIndices

  // class methods
  +[SCNSkinner supportsSecureCoding]
  +[SCNSkinner skinnerWithBaseGeometry:bones:boneInverseBindTransforms:boneWeights:boneIndices:]
  +[SCNSkinner skinnerWithSkinnerRef:]
  +[SCNSkinner _createSkinnerWithVertexCount:bones:boneWeights:boneIndices:baseGeometry:]
  +[SCNSkinner createSkinnerWithBaseGeometry:bones:boneWeights:boneIndices:]
  +[SCNSkinner _createSkinnerWithCompressedData:bonesCount:vertexCount:]
  +[SCNSkinner _skinnerWithBaseGeometry:skinnableGeometry:bones:boneInverseBindTransforms:bindMatrix:]

  // instance methods
  -[SCNSkinner dealloc]
  -[SCNSkinner copyWithZone:]
  -[SCNSkinner copy]
  -[SCNSkinner encodeWithCoder:]
  -[SCNSkinner initWithCoder:]
  -[SCNSkinner scene]
  -[SCNSkinner setSkeleton:]
  -[SCNSkinner skeleton]
  -[SCNSkinner joints]
  -[SCNSkinner setBaseGeometryBindTransform:]
  -[SCNSkinner __CFObject]
  -[SCNSkinner sceneRef]
  -[SCNSkinner _syncObjCModel]
  -[SCNSkinner _setBaseGeometry:]
  -[SCNSkinner skinnerRef]
  -[SCNSkinner bones]
  -[SCNSkinner setBones:]
  -[SCNSkinner initWithSkinnerRef:]
  -[SCNSkinner _setSkeleton:]
  -[SCNSkinner set_bonesAndIndicesCompression:]
  -[SCNSkinner setBoneInverseBindTransforms:]
  -[SCNSkinner baseGeometry]
  -[SCNSkinner baseGeometryBindTransform]
  -[SCNSkinner boneWeights]
  -[SCNSkinner boneIndices]
  -[SCNSkinner boneInverseBindTransforms]
  -[SCNSkinner wantsCPUSkinning]
  -[SCNSkinner setWantsCPUSkinning:]
  -[SCNSkinner _bonesAndIndicesCompression]
  -[SCNSkinner setBaseGeometry:]


SCNMetalLayer : CAMetalLayer /System/Library/Frameworks/MetalKit.framework/MetalKit <SCNSceneRenderer, SCNTechniqueSupport>
 @property  SCNScene *scene
 @property  unsigned long antialiasingMode
 @property  BOOL syncTimeWithCoreAnimation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double sceneTime
 @property  <SCNSceneRendererDelegate> *delegate
 @property  BOOL playing
 @property  BOOL loops
 @property  SCNNode *pointOfView
 @property  BOOL autoenablesDefaultLighting
 @property  BOOL jitteringEnabled
 @property  BOOL temporalAntialiasingEnabled
 @property  BOOL showsStatistics
 @property  unsigned long debugOptions
 @property  SKScene *overlaySKScene
 @property  unsigned long renderingAPI
 @property  ^v context
 @property  <MTLRenderCommandEncoder> *currentRenderCommandEncoder
 @property  <MTLDevice> *device
 @property  unsigned long colorPixelFormat
 @property  unsigned long depthPixelFormat
 @property  unsigned long stencilPixelFormat
 @property  <MTLCommandQueue> *commandQueue
 @property  AVAudioEngine *audioEngine
 @property  AVAudioEnvironmentNode *audioEnvironmentNode
 @property  SCNNode *audioListener
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} currentViewport
 @property  BOOL usesReverseZ
 @property  SCNTechnique *technique

  // class methods
  +[SCNMetalLayer automaticallyNotifiesObserversForKey:]
  +[SCNMetalLayer keyPathsForValuesAffectingValueForKey:]
  +[SCNMetalLayer _kvoKeysForwardedToRenderer]

  // instance methods
  -[SCNMetalLayer init]
  -[SCNMetalLayer dealloc]
  -[SCNMetalLayer delegate]
  -[SCNMetalLayer setDelegate:]
  -[SCNMetalLayer pause]
  -[SCNMetalLayer stop]
  -[SCNMetalLayer context]
  -[SCNMetalLayer device]
  -[SCNMetalLayer commandQueue]
  -[SCNMetalLayer commonInit]
  -[SCNMetalLayer setBackgroundColor:]
  -[SCNMetalLayer layer]
  -[SCNMetalLayer play]
  -[SCNMetalLayer scene]
  -[SCNMetalLayer setNeedsDisplay]
  -[SCNMetalLayer setScene:]
  -[SCNMetalLayer initWithLayer:]
  -[SCNMetalLayer displayLink]
  -[SCNMetalLayer setPreferredFramesPerSecond:]
  -[SCNMetalLayer currentTime]
  -[SCNMetalLayer isPlaying]
  -[SCNMetalLayer display]
  -[SCNMetalLayer contentLayer]
  -[SCNMetalLayer stop:]
  -[SCNMetalLayer preferredFramesPerSecond]
  -[SCNMetalLayer canDrawConcurrently]
  -[SCNMetalLayer setPlaying:]
  -[SCNMetalLayer play:]
  -[SCNMetalLayer pause:]
  -[SCNMetalLayer renderer]
  -[SCNMetalLayer setRenderer:]
  -[SCNMetalLayer setCurrentTime:]
  -[SCNMetalLayer stencilPixelFormat]
  -[SCNMetalLayer loops]
  -[SCNMetalLayer setLoops:]
  -[SCNMetalLayer _canJitter]
  -[SCNMetalLayer hitTest:options:]
  -[SCNMetalLayer _authoringEnvironment]
  -[SCNMetalLayer overlaySKScene]
  -[SCNMetalLayer showsStatistics]
  -[SCNMetalLayer debugOptions]
  -[SCNMetalLayer currentRenderPassDescriptor]
  -[SCNMetalLayer currentRenderCommandEncoder]
  -[SCNMetalLayer setDebugOptions:]
  -[SCNMetalLayer _showsAuthoringEnvironment]
  -[SCNMetalLayer SCN_displayLinkCallback:]
  -[SCNMetalLayer pointOfView]
  -[SCNMetalLayer setPointOfView:]
  -[SCNMetalLayer setTechnique:]
  -[SCNMetalLayer technique]
  -[SCNMetalLayer hitTestWithSegmentFromPoint:toPoint:options:]
  -[SCNMetalLayer _viewport]
  -[SCNMetalLayer renderingAPI]
  -[SCNMetalLayer sceneTime]
  -[SCNMetalLayer setSceneTime:]
  -[SCNMetalLayer antialiasingMode]
  -[SCNMetalLayer scn_backingLayer]
  -[SCNMetalLayer _sceneDidUpdate:]
  -[SCNMetalLayer colorPixelFormat]
  -[SCNMetalLayer set_showsAuthoringEnvironment:]
  -[SCNMetalLayer usesReverseZ]
  -[SCNMetalLayer currentViewport]
  -[SCNMetalLayer _drawAtTime:]
  -[SCNMetalLayer setUsesReverseZ:]
  -[SCNMetalLayer isJitteringEnabled]
  -[SCNMetalLayer isTemporalAntialiasingEnabled]
  -[SCNMetalLayer setOverlaySKScene:]
  -[SCNMetalLayer setJitteringEnabled:]
  -[SCNMetalLayer autoenablesDefaultLighting]
  -[SCNMetalLayer setAutoenablesDefaultLighting:]
  -[SCNMetalLayer _jitterRedisplay]
  -[SCNMetalLayer presentScene:withTransition:incomingPointOfView:completionHandler:]
  -[SCNMetalLayer isNodeInsideFrustum:withPointOfView:]
  -[SCNMetalLayer nodesInsideFrustumWithPointOfView:]
  -[SCNMetalLayer projectPoint:]
  -[SCNMetalLayer unprojectPoint:]
  -[SCNMetalLayer prepareObject:shouldAbortBlock:]
  -[SCNMetalLayer prepareObjects:withCompletionHandler:]
  -[SCNMetalLayer setTemporalAntialiasingEnabled:]
  -[SCNMetalLayer setShowsStatistics:]
  -[SCNMetalLayer depthPixelFormat]
  -[SCNMetalLayer audioEngine]
  -[SCNMetalLayer audioEnvironmentNode]
  -[SCNMetalLayer audioListener]
  -[SCNMetalLayer setAudioListener:]
  -[SCNMetalLayer setPointOfCulling:]
  -[SCNMetalLayer pointOfCulling]
  -[SCNMetalLayer setAntialiasingMode:]
  -[SCNMetalLayer rendererOptions]
  -[SCNMetalLayer _checkAndUpdateDisplayLinkStateIfNeeded]
  -[SCNMetalLayer pauseDisplayLink]
  -[SCNMetalLayer resumeDisplayLink]
  -[SCNMetalLayer rendersIntoMaterial]
  -[SCNMetalLayer setRendersIntoMaterial:]
  -[SCNMetalLayer projectPoints:count:]
  -[SCNMetalLayer _isGLLayerBacked]
  -[SCNMetalLayer _systemTimeAnimationStarted:]
  -[SCNMetalLayer scn_inLiveResize]
  -[SCNMetalLayer _cancelJitterRedisplay]
  -[SCNMetalLayer _supportsJitteringSyncRedraw]
  -[SCNMetalLayer syncTimeWithCoreAnimation]
  -[SCNMetalLayer setSyncTimeWithCoreAnimation:]


SCNDisplayLink : NSObject
 @property  BOOL paused
 @property  float preferredFrameRate
 @property  @? adaptativeFrameRate

  // instance methods
  -[SCNDisplayLink init]
  -[SCNDisplayLink dealloc]
  -[SCNDisplayLink invalidate]
  -[SCNDisplayLink isPaused]
  -[SCNDisplayLink _cleanup]
  -[SCNDisplayLink initWithQueue:block:]
  -[SCNDisplayLink setPaused:]
  -[SCNDisplayLink _isInvalidated]
  -[SCNDisplayLink setNeedsDisplay]
  -[SCNDisplayLink setPreferredFrameRate:]
  -[SCNDisplayLink setPaused:nextFrameTimeHint:lastUpdate:]
  -[SCNDisplayLink preferredFrameRate]
  -[SCNDisplayLink _caDisplayLinkCallback]
  -[SCNDisplayLink _callbackWithTime:]
  -[SCNDisplayLink adaptativeFrameRate]
  -[SCNDisplayLink setAdaptativeFrameRate:]
  -[SCNDisplayLink queuedFrameCount]


C3DIONSZipFileArchive : NSObject
  // instance methods
  -[C3DIONSZipFileArchive dealloc]
  -[C3DIONSZipFileArchive invalidate]
  -[C3DIONSZipFileArchive isValid]
  -[C3DIONSZipFileArchive writeToFile:options:error:]
  -[C3DIONSZipFileArchive archiveData]
  -[C3DIONSZipFileArchive initWithPath:options:error:]
  -[C3DIONSZipFileArchive contentsForEntryName:]
  -[C3DIONSZipFileArchive initWithEntryNames:contents:properties:options:]
  -[C3DIONSZipFileArchive initWithData:options:error:]
  -[C3DIONSZipFileArchive initWithEntryNames:dataProvider:options:]
  -[C3DIONSZipFileArchive entryNames]
  -[C3DIONSZipFileArchive streamForEntryName:]
  -[C3DIONSZipFileArchive writeContentsForEntryName:toFile:options:error:]
  -[C3DIONSZipFileArchive propertiesForEntryName:]
  -[C3DIONSZipFileArchive archiveStream]


SCNPhysicsBallSocketJoint : SCNPhysicsBehavior
 @property  SCNPhysicsBody *bodyA
 @property  {SCNVector3=fff} anchorA
 @property  SCNPhysicsBody *bodyB
 @property  {SCNVector3=fff} anchorB

  // class methods
  +[SCNPhysicsBallSocketJoint supportsSecureCoding]
  +[SCNPhysicsBallSocketJoint jointWithBodyA:anchorA:bodyB:anchorB:]
  +[SCNPhysicsBallSocketJoint jointWithBody:anchor:]

  // instance methods
  -[SCNPhysicsBallSocketJoint dealloc]
  -[SCNPhysicsBallSocketJoint encodeWithCoder:]
  -[SCNPhysicsBallSocketJoint initWithCoder:]
  -[SCNPhysicsBallSocketJoint bodyA]
  -[SCNPhysicsBallSocketJoint bodyB]
  -[SCNPhysicsBallSocketJoint anchorA]
  -[SCNPhysicsBallSocketJoint setAnchorA:]
  -[SCNPhysicsBallSocketJoint anchorB]
  -[SCNPhysicsBallSocketJoint setAnchorB:]
  -[SCNPhysicsBallSocketJoint _addToPhysicsWorld:]
  -[SCNPhysicsBallSocketJoint _willRemoveFromPhysicsWorld:]
  -[SCNPhysicsBallSocketJoint initWithBodyA:anchorA:bodyB:anchorB:]
  -[SCNPhysicsBallSocketJoint initWithBody:anchor:]


SCNPhysicsVehicleWheel : NSObject <NSCopying, NSSecureCoding>
 @property  SCNNode *node
 @property  double suspensionStiffness
 @property  double suspensionCompression
 @property  double suspensionDamping
 @property  double maximumSuspensionTravel
 @property  double frictionSlip
 @property  double maximumSuspensionForce
 @property  {SCNVector3=fff} connectionPosition
 @property  {SCNVector3=fff} steeringAxis
 @property  {SCNVector3=fff} axle
 @property  double radius
 @property  double suspensionRestLength

  // class methods
  +[SCNPhysicsVehicleWheel supportsSecureCoding]
  +[SCNPhysicsVehicleWheel wheelWithNode:]

  // instance methods
  -[SCNPhysicsVehicleWheel init]
  -[SCNPhysicsVehicleWheel dealloc]
  -[SCNPhysicsVehicleWheel copyWithZone:]
  -[SCNPhysicsVehicleWheel copy]
  -[SCNPhysicsVehicleWheel encodeWithCoder:]
  -[SCNPhysicsVehicleWheel initWithCoder:]
  -[SCNPhysicsVehicleWheel node]
  -[SCNPhysicsVehicleWheel radius]
  -[SCNPhysicsVehicleWheel setRadius:]
  -[SCNPhysicsVehicleWheel setNode:]
  -[SCNPhysicsVehicleWheel isFront]
  -[SCNPhysicsVehicleWheel setConnectionPosition:]
  -[SCNPhysicsVehicleWheel suspensionStiffness]
  -[SCNPhysicsVehicleWheel setSuspensionStiffness:]
  -[SCNPhysicsVehicleWheel suspensionCompression]
  -[SCNPhysicsVehicleWheel setSuspensionCompression:]
  -[SCNPhysicsVehicleWheel suspensionDamping]
  -[SCNPhysicsVehicleWheel setSuspensionDamping:]
  -[SCNPhysicsVehicleWheel maximumSuspensionTravel]
  -[SCNPhysicsVehicleWheel setMaximumSuspensionTravel:]
  -[SCNPhysicsVehicleWheel frictionSlip]
  -[SCNPhysicsVehicleWheel setFrictionSlip:]
  -[SCNPhysicsVehicleWheel maximumSuspensionForce]
  -[SCNPhysicsVehicleWheel setMaximumSuspensionForce:]
  -[SCNPhysicsVehicleWheel connectionPosition]
  -[SCNPhysicsVehicleWheel steeringAxis]
  -[SCNPhysicsVehicleWheel setSteeringAxis:]
  -[SCNPhysicsVehicleWheel axle]
  -[SCNPhysicsVehicleWheel setAxle:]
  -[SCNPhysicsVehicleWheel suspensionRestLength]
  -[SCNPhysicsVehicleWheel setSuspensionRestLength:]
  -[SCNPhysicsVehicleWheel setIsFront:]
  -[SCNPhysicsVehicleWheel _setVehicle:]
  -[SCNPhysicsVehicleWheel _setWheelIndex:]


C3DBinding : NSObject
 @property  id sourceObject
 @property  NSString *keyPathSrc
 @property  NSString *keyPathDst
 @property  NSDictionary *options

  // instance methods
  -[C3DBinding dealloc]
  -[C3DBinding options]
  -[C3DBinding setOptions:]
  -[C3DBinding sourceObject]
  -[C3DBinding setSourceObject:]
  -[C3DBinding setKeyPathDst:]
  -[C3DBinding setKeyPathSrc:]
  -[C3DBinding keyPathSrc]
  -[C3DBinding keyPathDst]


SCNPlane : SCNGeometry
 @property  double width
 @property  double height
 @property  long long widthSegmentCount
 @property  long long heightSegmentCount
 @property  double cornerRadius
 @property  long long cornerSegmentCount

  // class methods
  +[SCNPlane supportsSecureCoding]
  +[SCNPlane planeWithWidth:height:]

  // instance methods
  -[SCNPlane init]
  -[SCNPlane copyWithZone:]
  -[SCNPlane copy]
  -[SCNPlane encodeWithCoder:]
  -[SCNPlane initWithCoder:]
  -[SCNPlane width]
  -[SCNPlane height]
  -[SCNPlane setWidth:]
  -[SCNPlane setHeight:]
  -[SCNPlane primitiveType]
  -[SCNPlane setCornerRadius:]
  -[SCNPlane cornerRadius]
  -[SCNPlane setPrimitiveType:]
  -[SCNPlane getBoundingBoxMin:max:]
  -[SCNPlane copyAnimationChannelForKeyPath:animation:]
  -[SCNPlane presentationGeometry]
  -[SCNPlane getBoundingSphereCenter:radius:]
  -[SCNPlane _setupObjCModelFrom:]
  -[SCNPlane __createCFObject]
  -[SCNPlane _syncObjCModel:]
  -[SCNPlane initPresentationParametricGeometryWithParametricGeometryRef:]
  -[SCNPlane presentationPlane]
  -[SCNPlane widthSegmentCount]
  -[SCNPlane setWidthSegmentCount:]
  -[SCNPlane heightSegmentCount]
  -[SCNPlane setHeightSegmentCount:]
  -[SCNPlane cornerSegmentCount]
  -[SCNPlane setCornerSegmentCount:]
  -[SCNPlane initWithParametricGeometryRef:]


SCNBox : SCNGeometry
 @property  double width
 @property  double height
 @property  double length
 @property  double chamferRadius
 @property  long long widthSegmentCount
 @property  long long heightSegmentCount
 @property  long long lengthSegmentCount
 @property  long long chamferSegmentCount

  // class methods
  +[SCNBox supportsSecureCoding]
  +[SCNBox box]
  +[SCNBox boxWithWidth:height:length:chamferRadius:]

  // instance methods
  -[SCNBox init]
  -[SCNBox length]
  -[SCNBox copyWithZone:]
  -[SCNBox copy]
  -[SCNBox setLength:]
  -[SCNBox encodeWithCoder:]
  -[SCNBox initWithCoder:]
  -[SCNBox width]
  -[SCNBox height]
  -[SCNBox setWidth:]
  -[SCNBox setHeight:]
  -[SCNBox primitiveType]
  -[SCNBox setPrimitiveType:]
  -[SCNBox getBoundingBoxMin:max:]
  -[SCNBox copyAnimationChannelForKeyPath:animation:]
  -[SCNBox presentationGeometry]
  -[SCNBox getBoundingSphereCenter:radius:]
  -[SCNBox _setupObjCModelFrom:]
  -[SCNBox __createCFObject]
  -[SCNBox _syncObjCModel:]
  -[SCNBox initPresentationParametricGeometryWithParametricGeometryRef:]
  -[SCNBox widthSegmentCount]
  -[SCNBox setWidthSegmentCount:]
  -[SCNBox heightSegmentCount]
  -[SCNBox setHeightSegmentCount:]
  -[SCNBox initWithParametricGeometryRef:]
  -[SCNBox presentationBox]
  -[SCNBox setChamferRadius:]
  -[SCNBox chamferRadius]
  -[SCNBox lengthSegmentCount]
  -[SCNBox setLengthSegmentCount:]
  -[SCNBox chamferSegmentCount]
  -[SCNBox setChamferSegmentCount:]


SCNPyramid : SCNGeometry
 @property  double width
 @property  double height
 @property  double length
 @property  long long widthSegmentCount
 @property  long long heightSegmentCount
 @property  long long lengthSegmentCount

  // class methods
  +[SCNPyramid supportsSecureCoding]
  +[SCNPyramid pyramidWithWidth:height:length:]

  // instance methods
  -[SCNPyramid init]
  -[SCNPyramid length]
  -[SCNPyramid copyWithZone:]
  -[SCNPyramid copy]
  -[SCNPyramid setLength:]
  -[SCNPyramid encodeWithCoder:]
  -[SCNPyramid initWithCoder:]
  -[SCNPyramid width]
  -[SCNPyramid height]
  -[SCNPyramid setWidth:]
  -[SCNPyramid setHeight:]
  -[SCNPyramid primitiveType]
  -[SCNPyramid setPrimitiveType:]
  -[SCNPyramid getBoundingBoxMin:max:]
  -[SCNPyramid copyAnimationChannelForKeyPath:animation:]
  -[SCNPyramid presentationGeometry]
  -[SCNPyramid getBoundingSphereCenter:radius:]
  -[SCNPyramid _setupObjCModelFrom:]
  -[SCNPyramid __createCFObject]
  -[SCNPyramid _syncObjCModel:]
  -[SCNPyramid initPresentationParametricGeometryWithParametricGeometryRef:]
  -[SCNPyramid widthSegmentCount]
  -[SCNPyramid setWidthSegmentCount:]
  -[SCNPyramid heightSegmentCount]
  -[SCNPyramid setHeightSegmentCount:]
  -[SCNPyramid initWithParametricGeometryRef:]
  -[SCNPyramid lengthSegmentCount]
  -[SCNPyramid setLengthSegmentCount:]
  -[SCNPyramid presentationPyramid]


SCNSphere : SCNGeometry
 @property  double radius
 @property  BOOL geodesic
 @property  long long segmentCount

  // class methods
  +[SCNSphere supportsSecureCoding]
  +[SCNSphere sphereWithRadius:]

  // instance methods
  -[SCNSphere init]
  -[SCNSphere copyWithZone:]
  -[SCNSphere copy]
  -[SCNSphere encodeWithCoder:]
  -[SCNSphere initWithCoder:]
  -[SCNSphere radius]
  -[SCNSphere setRadius:]
  -[SCNSphere primitiveType]
  -[SCNSphere setSegmentCount:]
  -[SCNSphere segmentCount]
  -[SCNSphere setPrimitiveType:]
  -[SCNSphere setGeodesic:]
  -[SCNSphere getBoundingBoxMin:max:]
  -[SCNSphere setRadialSpan:]
  -[SCNSphere copyAnimationChannelForKeyPath:animation:]
  -[SCNSphere presentationGeometry]
  -[SCNSphere getBoundingSphereCenter:radius:]
  -[SCNSphere _setupObjCModelFrom:]
  -[SCNSphere __createCFObject]
  -[SCNSphere _syncObjCModel:]
  -[SCNSphere initPresentationParametricGeometryWithParametricGeometryRef:]
  -[SCNSphere initWithParametricGeometryRef:]
  -[SCNSphere presentationSphere]
  -[SCNSphere isGeodesic]
  -[SCNSphere radialSpan]
  -[SCNSphere isHemispheric]
  -[SCNSphere setHemispheric:]
  -[SCNSphere geodesic]


SCNCylinder : SCNGeometry
 @property  double radius
 @property  double height
 @property  long long radialSegmentCount
 @property  long long heightSegmentCount

  // class methods
  +[SCNCylinder supportsSecureCoding]
  +[SCNCylinder cylinderWithRadius:height:]

  // instance methods
  -[SCNCylinder init]
  -[SCNCylinder copyWithZone:]
  -[SCNCylinder copy]
  -[SCNCylinder encodeWithCoder:]
  -[SCNCylinder initWithCoder:]
  -[SCNCylinder height]
  -[SCNCylinder setHeight:]
  -[SCNCylinder radius]
  -[SCNCylinder setRadius:]
  -[SCNCylinder primitiveType]
  -[SCNCylinder setPrimitiveType:]
  -[SCNCylinder getBoundingBoxMin:max:]
  -[SCNCylinder setRadialSpan:]
  -[SCNCylinder copyAnimationChannelForKeyPath:animation:]
  -[SCNCylinder presentationGeometry]
  -[SCNCylinder getBoundingSphereCenter:radius:]
  -[SCNCylinder _setupObjCModelFrom:]
  -[SCNCylinder __createCFObject]
  -[SCNCylinder _syncObjCModel:]
  -[SCNCylinder initPresentationParametricGeometryWithParametricGeometryRef:]
  -[SCNCylinder heightSegmentCount]
  -[SCNCylinder setHeightSegmentCount:]
  -[SCNCylinder initWithParametricGeometryRef:]
  -[SCNCylinder radialSpan]
  -[SCNCylinder presentationCylinder]
  -[SCNCylinder radialSegmentCount]
  -[SCNCylinder setRadialSegmentCount:]


SCNCone : SCNGeometry
 @property  double topRadius
 @property  double bottomRadius
 @property  double height
 @property  long long radialSegmentCount
 @property  long long heightSegmentCount

  // class methods
  +[SCNCone supportsSecureCoding]
  +[SCNCone coneWithTopRadius:bottomRadius:height:]

  // instance methods
  -[SCNCone init]
  -[SCNCone copyWithZone:]
  -[SCNCone copy]
  -[SCNCone encodeWithCoder:]
  -[SCNCone initWithCoder:]
  -[SCNCone height]
  -[SCNCone setHeight:]
  -[SCNCone primitiveType]
  -[SCNCone setPrimitiveType:]
  -[SCNCone getBoundingBoxMin:max:]
  -[SCNCone copyAnimationChannelForKeyPath:animation:]
  -[SCNCone presentationGeometry]
  -[SCNCone getBoundingSphereCenter:radius:]
  -[SCNCone _setupObjCModelFrom:]
  -[SCNCone __createCFObject]
  -[SCNCone _syncObjCModel:]
  -[SCNCone initPresentationParametricGeometryWithParametricGeometryRef:]
  -[SCNCone heightSegmentCount]
  -[SCNCone setHeightSegmentCount:]
  -[SCNCone initWithParametricGeometryRef:]
  -[SCNCone radialSegmentCount]
  -[SCNCone setRadialSegmentCount:]
  -[SCNCone presentationCone]
  -[SCNCone topRadius]
  -[SCNCone bottomRadius]
  -[SCNCone setTopRadius:]
  -[SCNCone setBottomRadius:]


SCNTube : SCNGeometry
 @property  double innerRadius
 @property  double outerRadius
 @property  double height
 @property  long long radialSegmentCount
 @property  long long heightSegmentCount

  // class methods
  +[SCNTube supportsSecureCoding]
  +[SCNTube tubeWithInnerRadius:outerRadius:height:]

  // instance methods
  -[SCNTube init]
  -[SCNTube copyWithZone:]
  -[SCNTube copy]
  -[SCNTube encodeWithCoder:]
  -[SCNTube initWithCoder:]
  -[SCNTube height]
  -[SCNTube setHeight:]
  -[SCNTube primitiveType]
  -[SCNTube setPrimitiveType:]
  -[SCNTube getBoundingBoxMin:max:]
  -[SCNTube setRadialSpan:]
  -[SCNTube copyAnimationChannelForKeyPath:animation:]
  -[SCNTube presentationGeometry]
  -[SCNTube getBoundingSphereCenter:radius:]
  -[SCNTube _setupObjCModelFrom:]
  -[SCNTube __createCFObject]
  -[SCNTube _syncObjCModel:]
  -[SCNTube initPresentationParametricGeometryWithParametricGeometryRef:]
  -[SCNTube heightSegmentCount]
  -[SCNTube setHeightSegmentCount:]
  -[SCNTube initWithParametricGeometryRef:]
  -[SCNTube radialSpan]
  -[SCNTube radialSegmentCount]
  -[SCNTube setRadialSegmentCount:]
  -[SCNTube presentationTube]
  -[SCNTube outerRadius]
  -[SCNTube setInnerRadius:]
  -[SCNTube setOuterRadius:]
  -[SCNTube innerRadius]


SCNCapsule : SCNGeometry
 @property  double capRadius
 @property  double height
 @property  long long radialSegmentCount
 @property  long long heightSegmentCount
 @property  long long capSegmentCount

  // class methods
  +[SCNCapsule supportsSecureCoding]
  +[SCNCapsule capsuleWithCapRadius:height:]

  // instance methods
  -[SCNCapsule init]
  -[SCNCapsule copyWithZone:]
  -[SCNCapsule copy]
  -[SCNCapsule encodeWithCoder:]
  -[SCNCapsule initWithCoder:]
  -[SCNCapsule height]
  -[SCNCapsule setHeight:]
  -[SCNCapsule primitiveType]
  -[SCNCapsule setPrimitiveType:]
  -[SCNCapsule getBoundingBoxMin:max:]
  -[SCNCapsule copyAnimationChannelForKeyPath:animation:]
  -[SCNCapsule presentationGeometry]
  -[SCNCapsule getBoundingSphereCenter:radius:]
  -[SCNCapsule _setupObjCModelFrom:]
  -[SCNCapsule __createCFObject]
  -[SCNCapsule _syncObjCModel:]
  -[SCNCapsule initPresentationParametricGeometryWithParametricGeometryRef:]
  -[SCNCapsule heightSegmentCount]
  -[SCNCapsule setHeightSegmentCount:]
  -[SCNCapsule initWithParametricGeometryRef:]
  -[SCNCapsule radialSegmentCount]
  -[SCNCapsule setRadialSegmentCount:]
  -[SCNCapsule presentationCapsule]
  -[SCNCapsule capRadius]
  -[SCNCapsule setCapRadius:]
  -[SCNCapsule capSegmentCount]
  -[SCNCapsule setCapSegmentCount:]


SCNTorus : SCNGeometry
 @property  double ringRadius
 @property  double pipeRadius
 @property  long long ringSegmentCount
 @property  long long pipeSegmentCount

  // class methods
  +[SCNTorus supportsSecureCoding]
  +[SCNTorus torusWithRingRadius:pipeRadius:]

  // instance methods
  -[SCNTorus init]
  -[SCNTorus copyWithZone:]
  -[SCNTorus copy]
  -[SCNTorus encodeWithCoder:]
  -[SCNTorus initWithCoder:]
  -[SCNTorus primitiveType]
  -[SCNTorus setPrimitiveType:]
  -[SCNTorus getBoundingBoxMin:max:]
  -[SCNTorus setPipeSegmentCount:]
  -[SCNTorus setRingSegmentCount:]
  -[SCNTorus setRadialSpan:]
  -[SCNTorus setRingRadius:]
  -[SCNTorus copyAnimationChannelForKeyPath:animation:]
  -[SCNTorus presentationGeometry]
  -[SCNTorus getBoundingSphereCenter:radius:]
  -[SCNTorus _setupObjCModelFrom:]
  -[SCNTorus __createCFObject]
  -[SCNTorus _syncObjCModel:]
  -[SCNTorus initPresentationParametricGeometryWithParametricGeometryRef:]
  -[SCNTorus initWithParametricGeometryRef:]
  -[SCNTorus radialSpan]
  -[SCNTorus presentationTorus]
  -[SCNTorus ringRadius]
  -[SCNTorus pipeRadius]
  -[SCNTorus setPipeRadius:]
  -[SCNTorus ringSegmentCount]
  -[SCNTorus pipeSegmentCount]


SCNActionCustom : SCNAction
  // class methods
  +[SCNActionCustom supportsSecureCoding]
  +[SCNActionCustom customActionWithDuration:actionBlock:]

  // instance methods
  -[SCNActionCustom init]
  -[SCNActionCustom dealloc]
  -[SCNActionCustom copyWithZone:]
  -[SCNActionCustom encodeWithCoder:]
  -[SCNActionCustom initWithCoder:]
  -[SCNActionCustom isCustom]
  -[SCNActionCustom reversedAction]


SCNPhysicsConeTwistJoint : SCNPhysicsBehavior
 @property  SCNPhysicsBody *bodyA
 @property  {SCNMatrix4=ffffffffffffffff} frameA
 @property  SCNPhysicsBody *bodyB
 @property  {SCNMatrix4=ffffffffffffffff} frameB
 @property  double maximumAngularLimit1
 @property  double maximumAngularLimit2
 @property  double maximumTwistAngle

  // class methods
  +[SCNPhysicsConeTwistJoint supportsSecureCoding]
  +[SCNPhysicsConeTwistJoint jointWithBodyA:frameA:bodyB:frameB:]
  +[SCNPhysicsConeTwistJoint jointWithBody:frame:]

  // instance methods
  -[SCNPhysicsConeTwistJoint dealloc]
  -[SCNPhysicsConeTwistJoint encodeWithCoder:]
  -[SCNPhysicsConeTwistJoint initWithCoder:]
  -[SCNPhysicsConeTwistJoint bodyA]
  -[SCNPhysicsConeTwistJoint bodyB]
  -[SCNPhysicsConeTwistJoint _addToPhysicsWorld:]
  -[SCNPhysicsConeTwistJoint _willRemoveFromPhysicsWorld:]
  -[SCNPhysicsConeTwistJoint initWithBodyA:frameA:bodyB:frameB:]
  -[SCNPhysicsConeTwistJoint initWithBody:frame:]
  -[SCNPhysicsConeTwistJoint frameA]
  -[SCNPhysicsConeTwistJoint setFrameA:]
  -[SCNPhysicsConeTwistJoint frameB]
  -[SCNPhysicsConeTwistJoint setFrameB:]
  -[SCNPhysicsConeTwistJoint maximumAngularLimit1]
  -[SCNPhysicsConeTwistJoint setMaximumAngularLimit1:]
  -[SCNPhysicsConeTwistJoint maximumAngularLimit2]
  -[SCNPhysicsConeTwistJoint setMaximumAngularLimit2:]
  -[SCNPhysicsConeTwistJoint maximumTwistAngle]
  -[SCNPhysicsConeTwistJoint setMaximumTwistAngle:]


C3DEngineNotificationQueueTransientWrapper : NSObject
  // instance methods
  -[C3DEngineNotificationQueueTransientWrapper dealloc]
  -[C3DEngineNotificationQueueTransientWrapper setEngineNotificationQueue:]
  -[C3DEngineNotificationQueueTransientWrapper engineNotificationQueue]


SCNView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <SCNSceneRenderer, SCNTechniqueSupport>
 @property  SCNScene *scene
 @property  BOOL rendersContinuously
 @property  BOOL allowsCameraControl
 @property  <SCNCameraControlConfiguration> *cameraControlConfiguration
 @property  SCNCameraController *defaultCameraController
 @property  long long preferredFramesPerSecond
 @property  EAGLContext *eaglContext
 @property  unsigned long antialiasingMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double sceneTime
 @property  <SCNSceneRendererDelegate> *delegate
 @property  BOOL playing
 @property  BOOL loops
 @property  SCNNode *pointOfView
 @property  BOOL autoenablesDefaultLighting
 @property  BOOL jitteringEnabled
 @property  BOOL temporalAntialiasingEnabled
 @property  BOOL showsStatistics
 @property  unsigned long debugOptions
 @property  SKScene *overlaySKScene
 @property  unsigned long renderingAPI
 @property  ^v context
 @property  <MTLRenderCommandEncoder> *currentRenderCommandEncoder
 @property  <MTLDevice> *device
 @property  unsigned long colorPixelFormat
 @property  unsigned long depthPixelFormat
 @property  unsigned long stencilPixelFormat
 @property  <MTLCommandQueue> *commandQueue
 @property  AVAudioEngine *audioEngine
 @property  AVAudioEnvironmentNode *audioEnvironmentNode
 @property  SCNNode *audioListener
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} currentViewport
 @property  BOOL usesReverseZ
 @property  SCNTechnique *technique

  // class methods
  +[SCNView automaticallyNotifiesObserversForKey:]
  +[SCNView keyPathsForValuesAffectingValueForKey:]
  +[SCNView layerClass]
  +[SCNView lowLatency]
  +[SCNView currentUIFocusEnvironment]
  +[SCNView deviceForOptions:]
  +[SCNView _kvoKeysForwardedToRenderer]
  +[SCNView renderingAPIForOptions:]
  +[SCNView _isMetalSupported]

  // instance methods
  -[SCNView init]
  -[SCNView dealloc]
  -[SCNView encodeWithCoder:]
  -[SCNView initWithCoder:]
  -[SCNView delegate]
  -[SCNView setDelegate:]
  -[SCNView lock]
  -[SCNView unlock]
  -[SCNView observeValueForKeyPath:ofObject:change:context:]
  -[SCNView context]
  -[SCNView device]
  -[SCNView isOpaque]
  -[SCNView commandQueue]
  -[SCNView snapshot]
  -[SCNView eventHandler]
  -[SCNView setEventHandler:]
  -[SCNView setHidden:]
  -[SCNView backgroundColor]
  -[SCNView setBackgroundColor:]
  -[SCNView initWithFrame:]
  -[SCNView traitCollectionDidChange:]
  -[SCNView _preferredFocusMovementStyle]
  -[SCNView layoutSubviews]
  -[SCNView touchesBegan:withEvent:]
  -[SCNView touchesMoved:withEvent:]
  -[SCNView touchesEnded:withEvent:]
  -[SCNView touchesCancelled:withEvent:]
  -[SCNView scene]
  -[SCNView safeAreaInsetsDidChange]
  -[SCNView didMoveToWindow]
  -[SCNView setContentScaleFactor:]
  -[SCNView displayLayer:]
  -[SCNView setNeedsDisplay]
  -[SCNView willMoveToWindow:]
  -[SCNView drawRect:]
  -[SCNView hitTest:withEvent:]
  -[SCNView _updateOpacity]
  -[SCNView setScene:]
  -[SCNView _searchForFocusRegionsInContext:]
  -[SCNView _regionForFocusedItem:inCoordinateSpace:]
  -[SCNView displayLink]
  -[SCNView setDisplayLink:]
  -[SCNView setPreferredFramesPerSecond:]
  -[SCNView isPlaying]
  -[SCNView _defaultBackgroundColor]
  -[SCNView _controlsOwnScaleFactor]
  -[SCNView stop:]
  -[SCNView preferredFramesPerSecond]
  -[SCNView setPlaying:]
  -[SCNView play:]
  -[SCNView pause:]
  -[SCNView renderer]
  -[SCNView _renderingQueue]
  -[SCNView _enterBackground:]
  -[SCNView stencilPixelFormat]
  -[SCNView initWithFrame:options:]
  -[SCNView loops]
  -[SCNView __CFObject]
  -[SCNView setLoops:]
  -[SCNView _canJitter]
  -[SCNView hitTest:options:]
  -[SCNView _authoringEnvironment]
  -[SCNView overlaySKScene]
  -[SCNView showsStatistics]
  -[SCNView updateAtTime:]
  -[SCNView debugOptions]
  -[SCNView currentRenderPassDescriptor]
  -[SCNView currentRenderCommandEncoder]
  -[SCNView setDebugOptions:]
  -[SCNView _superSamplingFactor]
  -[SCNView _screenTransform]
  -[SCNView _disableLinearRendering]
  -[SCNView _enableARMode]
  -[SCNView _shouldDelegateARCompositing]
  -[SCNView _showsAuthoringEnvironment]
  -[SCNView SCN_displayLinkCallback:]
  -[SCNView _renderThreadPriority]
  -[SCNView _initializeDisplayLinkWithCompletionHandler:]
  -[SCNView pointOfView]
  -[SCNView setPointOfView:]
  -[SCNView setTechnique:]
  -[SCNView technique]
  -[SCNView hitTestWithSegmentFromPoint:toPoint:options:]
  -[SCNView _viewport]
  -[SCNView renderingAPI]
  -[SCNView sceneTime]
  -[SCNView setSceneTime:]
  -[SCNView antialiasingMode]
  -[SCNView scn_backingLayer]
  -[SCNView _isEditor]
  -[SCNView _sceneDidUpdate:]
  -[SCNView colorPixelFormat]
  -[SCNView set_showsAuthoringEnvironment:]
  -[SCNView usesReverseZ]
  -[SCNView currentViewport]
  -[SCNView _drawAtTime:]
  -[SCNView setUsesReverseZ:]
  -[SCNView isJitteringEnabled]
  -[SCNView isTemporalAntialiasingEnabled]
  -[SCNView setOverlaySKScene:]
  -[SCNView setJitteringEnabled:]
  -[SCNView autoenablesDefaultLighting]
  -[SCNView setAutoenablesDefaultLighting:]
  -[SCNView set_superSamplingFactor:]
  -[SCNView set_screenTransform:]
  -[SCNView _jitterRedisplay]
  -[SCNView presentScene:withTransition:incomingPointOfView:completionHandler:]
  -[SCNView isNodeInsideFrustum:withPointOfView:]
  -[SCNView nodesInsideFrustumWithPointOfView:]
  -[SCNView projectPoint:]
  -[SCNView unprojectPoint:]
  -[SCNView prepareObject:shouldAbortBlock:]
  -[SCNView prepareObjects:withCompletionHandler:]
  -[SCNView setTemporalAntialiasingEnabled:]
  -[SCNView setShowsStatistics:]
  -[SCNView depthPixelFormat]
  -[SCNView audioEngine]
  -[SCNView audioEnvironmentNode]
  -[SCNView audioListener]
  -[SCNView setAudioListener:]
  -[SCNView setPointOfCulling:]
  -[SCNView pointOfCulling]
  -[SCNView setRendersContinuously:]
  -[SCNView _enablesDeferredShading]
  -[SCNView set_enablesDeferredShading:]
  -[SCNView set_disableLinearRendering:]
  -[SCNView set_enableARMode:]
  -[SCNView set_shouldDelegateARCompositing:]
  -[SCNView _updateProbes:withProgress:]
  -[SCNView setAntialiasingMode:]
  -[SCNView defaultCameraController]
  -[SCNView _checkAndUpdateDisplayLinkStateIfNeeded]
  -[SCNView pauseDisplayLink]
  -[SCNView resumeDisplayLink]
  -[SCNView _systemTimeAnimationStarted:]
  -[SCNView scn_inLiveResize]
  -[SCNView _supportsJitteringSyncRedraw]
  -[SCNView scn_setBackingLayer:]
  -[SCNView eaglContext]
  -[SCNView _enterForeground:]
  -[SCNView setAllowsCameraControl:]
  -[SCNView setNavigationCameraController:]
  -[SCNView _selectRenderingAPIWithOptions:]
  -[SCNView _commonInit:]
  -[SCNView set_ibPreferredRenderingAPI:]
  -[SCNView set_ibWantsMultisampling:]
  -[SCNView _ibWantsMultisampling]
  -[SCNView set_ibSceneName:]
  -[SCNView allowsCameraControl]
  -[SCNView _ibSceneName]
  -[SCNView _ibPreferredRenderingAPI]
  -[SCNView _flushDisplayLink]
  -[SCNView scn_setGestureRecognizers:]
  -[SCNView _setNeedsDisplay]
  -[SCNView _scnUpdateContentsGravity]
  -[SCNView drawableResizesAsynchronously]
  -[SCNView setDrawableResizesAsynchronously:]
  -[SCNView _updateContentsScaleFactor]
  -[SCNView backingSizeForBoundSize:]
  -[SCNView _updateBackingSize]
  -[SCNView navigationCameraController]
  -[SCNView _flipY:]
  -[SCNView scn_updateGestureRecognizers]
  -[SCNView _adjustBackingLayerPixelFormat]
  -[SCNView _backgroundDidChange]
  -[SCNView _createDisplayLinkIfNeeded]
  -[SCNView setPointOfView:animate:]
  -[SCNView _getFocusableNodes]
  -[SCNView _focusFrameForSCNNode:]
  -[SCNView skipFramesIfNoDrawableAvailable]
  -[SCNView setSkipFramesIfNoDrawableAvailable:]
  -[SCNView set_renderOptions:]
  -[SCNView _renderOptions]
  -[SCNView asynchronousResizing]
  -[SCNView setAsynchronousResizing:]
  -[SCNView _resetContentsScaleFactor]
  -[SCNView cameraControlConfiguration]
  -[SCNView rendersContinuously]
  -[SCNView eventHandlerWantsRedraw]
  -[SCNView _wantsSceneRendererDelegationMessages]
  -[SCNView set_wantsSceneRendererDelegationMessages:]
  -[SCNView switchToCameraNamed:]
  -[SCNView switchToNextCamera]
  -[SCNView ibPreferredRenderingAPI]
  -[SCNView setIbPreferredRenderingAPI:]
  -[SCNView ibSceneName]
  -[SCNView setIbSceneName:]
  -[SCNView ibWantsMultisampling]
  -[SCNView setIbWantsMultisampling:]
  -[SCNView _runFPSTestWithDuration:]
  -[SCNView setEaglContext:]
  -[SCNView _focusedItemRegionContainer]


USKHelper : NSObject
  // class methods
  +[USKHelper scene:nodeAtPath:type:]
  +[USKHelper node:propertyWithName:type:role:]


USKToken_helper : NSObject
  // class methods
  +[USKToken_helper tokenWithString:]


USKObjectPath_helper : NSObject
  // class methods
  +[USKObjectPath_helper objectPathWithString:]


USKData_helper : NSObject
  // class methods
  +[USKData_helper dataWithToken:]
  +[USKData_helper dataWithInt:]
  +[USKData_helper dataWithDouble:]
  +[USKData_helper dataWithString:]


SCNCommonProfileProgramCache : NSObject
  // instance methods
  -[SCNCommonProfileProgramCache init]
  -[SCNCommonProfileProgramCache dealloc]


SCNCommonProfileProgramGenerator : NSObject
 @property  int profile

  // class methods
  +[SCNCommonProfileProgramGenerator generatorWithProfile:]
  +[SCNCommonProfileProgramGenerator deferredGeneratorWithProfile:]

  // instance methods
  -[SCNCommonProfileProgramGenerator init]
  -[SCNCommonProfileProgramGenerator dealloc]
  -[SCNCommonProfileProgramGenerator profile]
  -[SCNCommonProfileProgramGenerator emptyShaderCache]
  -[SCNCommonProfileProgramGenerator programWithHashCode:engineContext:trackedResource:introspectionDataPtr:]
  -[SCNCommonProfileProgramGenerator releaseProgramForResource:]


SCNGeometryTessellator : NSObject <NSCopying, NSSecureCoding>
 @property  double tessellationFactorScale
 @property  unsigned long tessellationPartitionMode
 @property  BOOL adaptive
 @property  BOOL screenSpace
 @property  double edgeTessellationFactor
 @property  double insideTessellationFactor
 @property  double maximumEdgeLength
 @property  long long smoothingMode

  // class methods
  +[SCNGeometryTessellator supportsSecureCoding]

  // instance methods
  -[SCNGeometryTessellator init]
  -[SCNGeometryTessellator dealloc]
  -[SCNGeometryTessellator copyWithZone:]
  -[SCNGeometryTessellator encodeWithCoder:]
  -[SCNGeometryTessellator initWithCoder:]
  -[SCNGeometryTessellator isAdaptive]
  -[SCNGeometryTessellator setAdaptive:]
  -[SCNGeometryTessellator addClient:]
  -[SCNGeometryTessellator removeClient:]
  -[SCNGeometryTessellator setTessellationFactorScale:]
  -[SCNGeometryTessellator setTessellationPartitionMode:]
  -[SCNGeometryTessellator tessellationPartitionMode]
  -[SCNGeometryTessellator clientWillDie:]
  -[SCNGeometryTessellator tessellatorValueDidChangeForClient:]
  -[SCNGeometryTessellator isScreenSpace]
  -[SCNGeometryTessellator tessellationFactorScale]
  -[SCNGeometryTessellator smoothingMode]
  -[SCNGeometryTessellator edgeTessellationFactor]
  -[SCNGeometryTessellator insideTessellationFactor]
  -[SCNGeometryTessellator maximumEdgeLength]
  -[SCNGeometryTessellator _tessellatorValueForGeometry:]
  -[SCNGeometryTessellator tessellatorValueDidChange]
  -[SCNGeometryTessellator setSmoothingMode:]
  -[SCNGeometryTessellator adaptive]
  -[SCNGeometryTessellator screenSpace]
  -[SCNGeometryTessellator setScreenSpace:]
  -[SCNGeometryTessellator setEdgeTessellationFactor:]
  -[SCNGeometryTessellator setInsideTessellationFactor:]
  -[SCNGeometryTessellator setMaximumEdgeLength:]


SCNCommonProfileProgramGeneratorGL : SCNCommonProfileProgramGenerator
  // instance methods
  -[SCNCommonProfileProgramGeneratorGL init]
  -[SCNCommonProfileProgramGeneratorGL profile]
  -[SCNCommonProfileProgramGeneratorGL initWithProfile:]
  -[SCNCommonProfileProgramGeneratorGL _newProgramWithHashCode:engineContext:introspectionDataPtr:]


_C3DProgressDebugger : NSObject
  // class methods
  +[_C3DProgressDebugger observeValueForKeyPath:ofObject:change:context:]


SCNMTLArgumentBinder : NSObject
  // instance methods
  -[SCNMTLArgumentBinder dealloc]
  -[SCNMTLArgumentBinder initWithBlock:frequency:needsRenderResource:]


SCNMTLShaderBindingsGenerator : NSObject
  // class methods
  +[SCNMTLShaderBindingsGenerator allocateRegistry]
  +[SCNMTLShaderBindingsGenerator registerSemantic:withBlock:]
  +[SCNMTLShaderBindingsGenerator registerShadableArgumentBindingBlockForBuffers:textures:samplers:]
  +[SCNMTLShaderBindingsGenerator registerArgument:frequency:needsRenderResource:block:]
  +[SCNMTLShaderBindingsGenerator registerArgument:frequency:block:]
  +[SCNMTLShaderBindingsGenerator registerUserBlockTrampoline:]
  +[SCNMTLShaderBindingsGenerator deallocateRegistry]

  // instance methods
  -[SCNMTLShaderBindingsGenerator init]
  -[SCNMTLShaderBindingsGenerator dealloc]
  -[SCNMTLShaderBindingsGenerator addResourceBindingsForArgument:frequency:needsRenderResource:block:]
  -[SCNMTLShaderBindingsGenerator addPassResourceBindingsForArgument:]
  -[SCNMTLShaderBindingsGenerator _parseArguments:function:renderPipeline:]
  -[SCNMTLShaderBindingsGenerator _searchArguments:forArgumentNamed:type:]
  -[SCNMTLShaderBindingsGenerator _dictionaryForFrequency:]
  -[SCNMTLShaderBindingsGenerator _checkForAssociatedSamplerOnBinding:argument:]
  -[SCNMTLShaderBindingsGenerator generateBindingsForPipeline:withReflection:program:material:geometry:pass:]


SCNMorpher : NSObject <SCNAnimatable, NSSecureCoding>
 @property  NSArray *targets
 @property  NSArray *weights
 @property  long long calculationMode
 @property  BOOL unifiesNormals
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *animationKeys

  // class methods
  +[SCNMorpher supportsSecureCoding]
  +[SCNMorpher morpher]
  +[SCNMorpher morpherWithMorphRef:]
  +[SCNMorpher weightIndexStringForIndex:]
  +[SCNMorpher SCNUID_classForElementOfArray:]

  // instance methods
  -[SCNMorpher init]
  -[SCNMorpher dealloc]
  -[SCNMorpher name]
  -[SCNMorpher copyWithZone:]
  -[SCNMorpher copy]
  -[SCNMorpher encodeWithCoder:]
  -[SCNMorpher initWithCoder:]
  -[SCNMorpher setName:]
  -[SCNMorpher identifier]
  -[SCNMorpher setIdentifier:]
  -[SCNMorpher weights]
  -[SCNMorpher setWeights:]
  -[SCNMorpher scene]
  -[SCNMorpher addAnimation:]
  -[SCNMorpher animationForKey:]
  -[SCNMorpher removeAnimationForKey:]
  -[SCNMorpher addAnimation:forKey:]
  -[SCNMorpher removeAllAnimations]
  -[SCNMorpher animationKeys]
  -[SCNMorpher setCalculationMode:]
  -[SCNMorpher targets]
  -[SCNMorpher calculationMode]
  -[SCNMorpher setTargets:withInBetweenTargetCounts:inBetweenWeights:]
  -[SCNMorpher setTargets:]
  -[SCNMorpher __CFObject]
  -[SCNMorpher sceneRef]
  -[SCNMorpher addAnimationPlayer:forKey:]
  -[SCNMorpher _scnAnimationForKey:]
  -[SCNMorpher animationPlayerForKey:]
  -[SCNMorpher animationManager]
  -[SCNMorpher _pauseAnimation:forKey:pausedByNode:]
  -[SCNMorpher removeAnimationForKey:blendOutDuration:]
  -[SCNMorpher removeAnimationForKey:fadeOutDuration:]
  -[SCNMorpher pauseAnimationForKey:]
  -[SCNMorpher resumeAnimationForKey:]
  -[SCNMorpher setSpeed:forAnimationKey:]
  -[SCNMorpher isAnimationForKeyPaused:]
  -[SCNMorpher __removeAnimation:forKey:]
  -[SCNMorpher _syncObjCAnimations]
  -[SCNMorpher _copyAnimationsFrom:]
  -[SCNMorpher _scnBindings]
  -[SCNMorpher bindAnimatablePath:toObject:withKeyPath:options:]
  -[SCNMorpher unbindAnimatablePath:]
  -[SCNMorpher removeAllBindings]
  -[SCNMorpher copyAnimationChannelForKeyPath:animation:]
  -[SCNMorpher isPausedOrPausedByInheritance]
  -[SCNMorpher presentationInstance]
  -[SCNMorpher _syncObjCModel]
  -[SCNMorpher _syncEntityObjCModel]
  -[SCNMorpher morphRef]
  -[SCNMorpher initWithMorphRef:]
  -[SCNMorpher clearInBetweens]
  -[SCNMorpher initPresentationMorpherWithMorphRef:]
  -[SCNMorpher presentationMorpher]
  -[SCNMorpher _weightIndexForTargetNamed:]
  -[SCNMorpher setWeight:forTargetAtIndex:]
  -[SCNMorpher weightForTargetAtIndex:]
  -[SCNMorpher setUnifiesNormals:]
  -[SCNMorpher unifiesNormals]
  -[SCNMorpher _customEncodingOfSCNMorpher:]
  -[SCNMorpher _customDecodingOfSCNMorpher:]
  -[SCNMorpher _didDecodeSCNMorpher:]
  -[SCNMorpher setWeight:forTargetNamed:]
  -[SCNMorpher weightForTargetNamed:]
  -[SCNMorpher channelTargetCounts]
  -[SCNMorpher channelTargetWeights]
  -[SCNMorpher setChannelTargetCounts:]
  -[SCNMorpher setChannelTargetWeights:]
  -[SCNMorpher targetsAndInBetween]
  -[SCNMorpher _updateTargetsAndInBetween:]
  -[SCNMorpher inBetweenTargetsForTargetAtIndex:]
  -[SCNMorpher inBetweenWeightsForTargetAtIndex:]
  -[SCNMorpher shouldMorphNormals]
  -[SCNMorpher setShouldMorphNormals:]
  -[SCNMorpher wantsCPUMorphing]
  -[SCNMorpher setWantsCPUMorphing:]
  -[SCNMorpher convertToAdditiveWithBaseGeometry:]
  -[SCNMorpher _isUsingSparseTargets]
  -[SCNMorpher convertToSparseWithBaseGeometry:]


SCNBoundingBox : NSObject
 @property  {SCNVector3=fff} min
 @property  {SCNVector3=fff} max

  // instance methods
  -[SCNBoundingBox setMax:]
  -[SCNBoundingBox max]
  -[SCNBoundingBox setMin:]
  -[SCNBoundingBox min]


SCNBoundingSphere : NSObject
 @property  {SCNVector3=fff} center
 @property  double radius

  // instance methods
  -[SCNBoundingSphere center]
  -[SCNBoundingSphere setCenter:]
  -[SCNBoundingSphere radius]
  -[SCNBoundingSphere setRadius:]


SCNActionSequence : SCNAction
  // class methods
  +[SCNActionSequence supportsSecureCoding]
  +[SCNActionSequence sequenceWithActions:]

  // instance methods
  -[SCNActionSequence init]
  -[SCNActionSequence dealloc]
  -[SCNActionSequence copyWithZone:]
  -[SCNActionSequence encodeWithCoder:]
  -[SCNActionSequence initWithCoder:]
  -[SCNActionSequence isCustom]
  -[SCNActionSequence reversedAction]


_SCNUIKitSourceRegistry : NSObject
  // class methods
  +[_SCNUIKitSourceRegistry sharedInstance]
  +[_SCNUIKitSourceRegistry registerUIKitSource:]
  +[_SCNUIKitSourceRegistry unregisterUIKitSource:]

  // instance methods
  -[_SCNUIKitSourceRegistry init]
  -[_SCNUIKitSourceRegistry dealloc]
  -[_SCNUIKitSourceRegistry remove:]
  -[_SCNUIKitSourceRegistry apply:]
  -[_SCNUIKitSourceRegistry add:]


_SCNUIApplicationObserver : UIViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // class methods
  +[_SCNUIApplicationObserver sharedInstance]


_SCNSnapshotWindow : UIWindow /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[_SCNSnapshotWindow dealloc]
  -[_SCNSnapshotWindow _setFirstResponder:]
  -[_SCNSnapshotWindow _hitTest:withEvent:windowServerHitTestWindow:]
  -[_SCNSnapshotWindow _canBecomeKeyWindow]
  -[_SCNSnapshotWindow _isSettingFirstResponder]
  -[_SCNSnapshotWindow warpPoint:]
  -[_SCNSnapshotWindow scnView]
  -[_SCNSnapshotWindow _warpPoint:outOfBounds:]


SCNUIKitSource : SCNImageSource
 @property  UIView *uiView
 @property  UIWindow *uiWindow

  // instance methods
  -[SCNUIKitSource init]
  -[SCNUIKitSource dealloc]
  -[SCNUIKitSource isOpaque]
  -[SCNUIKitSource textureSource]
  -[SCNUIKitSource supportsMetal]
  -[SCNUIKitSource setUiView:]
  -[SCNUIKitSource setUiWindow:]
  -[SCNUIKitSource uiView]
  -[SCNUIKitSource prepareWindowIfNeeded]
  -[SCNUIKitSource uiWindow]


SCNTextureUIKitSource : SCNTextureCoreAnimationSource
 @property  UIView *uiView
 @property  UIWindow *uiWindow
 @property  id source

  // instance methods
  -[SCNTextureUIKitSource dealloc]
  -[SCNTextureUIKitSource setSource:]
  -[SCNTextureUIKitSource source]
  -[SCNTextureUIKitSource layer]
  -[SCNTextureUIKitSource setup]
  -[SCNTextureUIKitSource layerToFocusForRenderedLayer:]
  -[SCNTextureUIKitSource clearValue]
  -[SCNTextureUIKitSource cleanup:]
  -[SCNTextureUIKitSource layerSizeInPixels]
  -[SCNTextureUIKitSource supportsMetal]
  -[SCNTextureUIKitSource layerContentsScaleFactor]
  -[SCNTextureUIKitSource textureWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNTextureUIKitSource setUiView:]
  -[SCNTextureUIKitSource setUiWindow:]
  -[SCNTextureUIKitSource uiView]
  -[SCNTextureUIKitSource uiWindow]
  -[SCNTextureUIKitSource _layerTreeDidUpdate]


SCNActionMove : SCNAction
  // class methods
  +[SCNActionMove supportsSecureCoding]
  +[SCNActionMove moveByX:y:z:duration:]
  +[SCNActionMove moveToX:y:z:duration:]
  +[SCNActionMove moveBy:duration:]
  +[SCNActionMove moveTo:duration:]

  // instance methods
  -[SCNActionMove init]
  -[SCNActionMove copyWithZone:]
  -[SCNActionMove encodeWithCoder:]
  -[SCNActionMove initWithCoder:]
  -[SCNActionMove parameters]
  -[SCNActionMove isRelative]
  -[SCNActionMove reversedAction]


SCNKeyedUnarchiver : NSKeyedUnarchiver /System/Library/Frameworks/ModelIO.framework/ModelIO
 @property  NSArray *currentMorphTargets
 @property  NSURL *documentURL
 @property  NSDictionary *context
 @property  SCNAssetCatalog *assetCatalog
 @property  NSString *lookUpKey
 @property  id lookUpFoundInstance
 @property  NSURL *documentEnclosingURL

  // instance methods
  -[SCNKeyedUnarchiver dealloc]
  -[SCNKeyedUnarchiver context]
  -[SCNKeyedUnarchiver documentURL]
  -[SCNKeyedUnarchiver setContext:]
  -[SCNKeyedUnarchiver setDocumentURL:]
  -[SCNKeyedUnarchiver assetCatalog]
  -[SCNKeyedUnarchiver documentEnclosingURL]
  -[SCNKeyedUnarchiver setCurrentMorphTargets:]
  -[SCNKeyedUnarchiver initForReadingWithData:secure:]
  -[SCNKeyedUnarchiver setAssetCatalog:]
  -[SCNKeyedUnarchiver setLookUpKey:]
  -[SCNKeyedUnarchiver lookUpFoundInstance]
  -[SCNKeyedUnarchiver lookUpKey]
  -[SCNKeyedUnarchiver setLookUpFoundInstance:]
  -[SCNKeyedUnarchiver currentMorphTargets]


SCNKeyedArchiver : NSKeyedArchiver /System/Library/Frameworks/ModelIO.framework/ModelIO
 @property  BOOL skipMorphTargets
 @property  NSDictionary *options

  // class methods
  +[SCNKeyedArchiver archivedDataWithRootObject:options:]

  // instance methods
  -[SCNKeyedArchiver dealloc]
  -[SCNKeyedArchiver options]
  -[SCNKeyedArchiver setOptions:]
  -[SCNKeyedArchiver setSkipMorphTargets:]
  -[SCNKeyedArchiver skipMorphTargets]


SCNTransaction : NSObject
  // class methods
  +[SCNTransaction setValue:forKey:]
  +[SCNTransaction lock]
  +[SCNTransaction unlock]
  +[SCNTransaction valueForKey:]
  +[SCNTransaction completionBlock]
  +[SCNTransaction setCompletionBlock:]
  +[SCNTransaction begin]
  +[SCNTransaction commit]
  +[SCNTransaction currentState]
  +[SCNTransaction flush]
  +[SCNTransaction setDisableActions:]
  +[SCNTransaction animationDuration]
  +[SCNTransaction animationTimingFunction]
  +[SCNTransaction setAnimationDuration:]
  +[SCNTransaction setAnimationTimingFunction:]
  +[SCNTransaction disableActions]
  +[SCNTransaction postCommandWithContext:object:applyBlock:]
  +[SCNTransaction immediateMode]
  +[SCNTransaction setImmediateMode:]
  +[SCNTransaction postCommandWithContext:object:keyPath:applyBlock:]
  +[SCNTransaction commitImmediate]
  +[SCNTransaction postCommandWithContext:object:key:applyBlock:]
  +[SCNTransaction setImmediateModeRestrictedContext:]
  +[SCNTransaction immediateModeRestrictedContext]
  +[SCNTransaction checkUncommittedTransactions]

  // instance methods
  -[SCNTransaction lock]
  -[SCNTransaction unlock]
  -[SCNTransaction begin]
  -[SCNTransaction commit]
  -[SCNTransaction flush]
  -[SCNTransaction setDisableActions:]
  -[SCNTransaction animationDuration]
  -[SCNTransaction animationTimingFunction]
  -[SCNTransaction setAnimationDuration:]
  -[SCNTransaction setAnimationTimingFunction:]
  -[SCNTransaction disableActions]


SCNGeometrySource : NSObject <NSSecureCoding>
 @property  NSData *data
 @property  NSString *semantic
 @property  long long vectorCount
 @property  BOOL floatComponents
 @property  long long componentsPerVector
 @property  long long bytesPerComponent
 @property  long long dataOffset
 @property  long long dataStride

  // class methods
  +[SCNGeometrySource supportsSecureCoding]
  +[SCNGeometrySource geometrySourceWithData:semantic:vectorCount:floatComponents:componentsPerVector:bytesPerComponent:dataOffset:dataStride:]
  +[SCNGeometrySource geometrySourceWithMDLVertexAttribute:mesh:]
  +[SCNGeometrySource geometrySourceWithMeshSourceRef:]
  +[SCNGeometrySource _geometrySourceWithData:semantic:vectorCount:componentType:componentCount:dataOffset:dataStride:]
  +[SCNGeometrySource geometrySourceWithVertices:count:]
  +[SCNGeometrySource dataByConvertingDoublesToFloats:count:]
  +[SCNGeometrySource dataWithVector3Array:count:bytesPerComponent:]
  +[SCNGeometrySource dataWithPointArray:count:bytesPerComponent:]
  +[SCNGeometrySource geometrySourceWithNormals:count:]
  +[SCNGeometrySource geometrySourceWithTextureCoordinates:count:]
  +[SCNGeometrySource geometrySourceWithColorComponents:count:hasAlpha:colorSpace:]
  +[SCNGeometrySource geometrySourceWithBuffer:vertexFormat:semantic:vertexCount:dataOffset:dataStride:]
  +[SCNGeometrySource _geometrySourceWithSource:vertexFormat:]

  // instance methods
  -[SCNGeometrySource init]
  -[SCNGeometrySource dealloc]
  -[SCNGeometrySource encodeWithCoder:]
  -[SCNGeometrySource initWithCoder:]
  -[SCNGeometrySource data]
  -[SCNGeometrySource scene]
  -[SCNGeometrySource semantic]
  -[SCNGeometrySource _componentType]
  -[SCNGeometrySource dataStride]
  -[SCNGeometrySource dataOffset]
  -[SCNGeometrySource vectorCount]
  -[SCNGeometrySource setMkSemantic:]
  -[SCNGeometrySource mkSemantic]
  -[SCNGeometrySource __CFObject]
  -[SCNGeometrySource sceneRef]
  -[SCNGeometrySource _clearC3DCache]
  -[SCNGeometrySource meshSource]
  -[SCNGeometrySource initWithMeshSource:]
  -[SCNGeometrySource bytesPerComponent]
  -[SCNGeometrySource floatComponents]
  -[SCNGeometrySource componentsPerVector]
  -[SCNGeometrySource _encodeDataAsHalf]
  -[SCNGeometrySource set_encodeDataAsHalf:]
  -[SCNGeometrySource initWithData:semantic:vectorCount:floatComponents:componentsPerVector:bytesPerComponent:dataOffset:dataStride:]
  -[SCNGeometrySource initWithData:semantic:vectorCount:componentType:componentCount:dataOffset:dataStride:]
  -[SCNGeometrySource initWithBuffer:vertexFormat:semantic:vertexCount:dataOffset:dataStride:]
  -[SCNGeometrySource _uninterleaveData:count:srcOffset:srcStride:dstStride:]
  -[SCNGeometrySource _printData]


SCNMutableGeometrySource : SCNGeometrySource
 @property  NSMutableData *mutableData

  // instance methods
  -[SCNMutableGeometrySource mutableData]


SCNGeometryElement : NSObject <NSSecureCoding>
 @property  NSData *data
 @property  long long primitiveType
 @property  long long primitiveCount
 @property  {_NSRange=QQ} primitiveRange
 @property  long long bytesPerIndex
 @property  double pointSize
 @property  double minimumPointScreenSpaceRadius
 @property  double maximumPointScreenSpaceRadius

  // class methods
  +[SCNGeometryElement supportsSecureCoding]
  +[SCNGeometryElement geometryElementWithMDLSubmesh:]
  +[SCNGeometryElement geometryElementWithData:primitiveType:primitiveCount:bytesPerIndex:]
  +[SCNGeometryElement geometryElementWithData:primitiveType:primitiveCount:indicesChannelCount:interleavedIndicesChannels:bytesPerIndex:]
  +[SCNGeometryElement geometryElementWithMeshElementRef:]
  +[SCNGeometryElement _optimizedGeometryElementWithData:primitiveType:primitiveCount:bytesPerIndex:]

  // instance methods
  -[SCNGeometryElement init]
  -[SCNGeometryElement dealloc]
  -[SCNGeometryElement encodeWithCoder:]
  -[SCNGeometryElement initWithCoder:]
  -[SCNGeometryElement data]
  -[SCNGeometryElement pointSize]
  -[SCNGeometryElement setPointSize:]
  -[SCNGeometryElement primitiveType]
  -[SCNGeometryElement scene]
  -[SCNGeometryElement indexCount]
  -[SCNGeometryElement indicesChannelCount]
  -[SCNGeometryElement bytesPerIndex]
  -[SCNGeometryElement hasInterleavedIndicesChannels]
  -[SCNGeometryElement primitiveCount]
  -[SCNGeometryElement __CFObject]
  -[SCNGeometryElement sceneRef]
  -[SCNGeometryElement setPrimitiveRange:]
  -[SCNGeometryElement meshElement]
  -[SCNGeometryElement _printData]
  -[SCNGeometryElement initWithMeshElement:]
  -[SCNGeometryElement initWithData:primitiveType:primitiveCount:indicesChannelCount:interleavedIndicesChannels:bytesPerIndex:]
  -[SCNGeometryElement primitiveRange]
  -[SCNGeometryElement minimumPointScreenSpaceRadius]
  -[SCNGeometryElement setMinimumPointScreenSpaceRadius:]
  -[SCNGeometryElement maximumPointScreenSpaceRadius]
  -[SCNGeometryElement setMaximumPointScreenSpaceRadius:]
  -[SCNGeometryElement _optimizeTriangleIndices]
  -[SCNGeometryElement _computeACMR]


SCNAuthoringEnvironment : NSObject
 @property  <SCNSceneRenderer> *sceneRenderer
 @property  NSArray *selectedNodes
 @property  BOOL selectionIsReadonly
 @property  SCNManipulator *manipulator
 @property  SCNNode *authoringOverlayLayer
 @property  BOOL shouldSnapOnGrid
 @property  BOOL shouldSnapToAlign
 @property  BOOL graphicalSelectionEnabled
 @property  BOOL surroundToSelect
 @property  long long authoringDisplayMask
 @property  double gridUnit
 @property  long long editingSpace
 @property  {SCNMatrix4=ffffffffffffffff} viewMatrix
 @property  <SCNAuthoringEnvironmentDelegate> *delegate

  // class methods
  +[SCNAuthoringEnvironment authoringEnvironmentForSceneRenderer:createIfNeeded:]
  +[SCNAuthoringEnvironment defaultAuthoringDisplayMask]
  +[SCNAuthoringEnvironment rendererForSceneRenderer:]
  +[SCNAuthoringEnvironment authoringEnvironmentForSceneRenderer:]

  // instance methods
  -[SCNAuthoringEnvironment init]
  -[SCNAuthoringEnvironment dealloc]
  -[SCNAuthoringEnvironment delegate]
  -[SCNAuthoringEnvironment setDelegate:]
  -[SCNAuthoringEnvironment update]
  -[SCNAuthoringEnvironment renderer]
  -[SCNAuthoringEnvironment selectedItems]
  -[SCNAuthoringEnvironment editingSpace]
  -[SCNAuthoringEnvironment authoringOverlayLayer]
  -[SCNAuthoringEnvironment gridUnit]
  -[SCNAuthoringEnvironment shouldSnapToAlign]
  -[SCNAuthoringEnvironment shouldSnapOnGrid]
  -[SCNAuthoringEnvironment viewMatrix]
  -[SCNAuthoringEnvironment sceneRenderer]
  -[SCNAuthoringEnvironment authoringDisplayMask]
  -[SCNAuthoringEnvironment setAuthoringDisplayMask:]
  -[SCNAuthoringEnvironment manipulator]
  -[SCNAuthoringEnvironment didTapAtPoint:]
  -[SCNAuthoringEnvironment _initWithEngineContext:]
  -[SCNAuthoringEnvironment _setupAuthoringEnv2:]
  -[SCNAuthoringEnvironment setupAuthoringEnv2]
  -[SCNAuthoringEnvironment authoringEnvironment2]
  -[SCNAuthoringEnvironment sceneDidChange:]
  -[SCNAuthoringEnvironment beginEditingNodes:]
  -[SCNAuthoringEnvironment selectedNodes]
  -[SCNAuthoringEnvironment selectionIsReadonly]
  -[SCNAuthoringEnvironment setSelectionIsReadonly:]
  -[SCNAuthoringEnvironment setEditingSpace:]
  -[SCNAuthoringEnvironment cancelEdition]
  -[SCNAuthoringEnvironment beginEditingNode:]
  -[SCNAuthoringEnvironment saveInitialSelection]
  -[SCNAuthoringEnvironment beginOrbiting]
  -[SCNAuthoringEnvironment endOrbiting]
  -[SCNAuthoringEnvironment drawLineFromPoint:toPoint:color:]
  -[SCNAuthoringEnvironment drawString:atPoint:color:]
  -[SCNAuthoringEnvironment isEditingSubComponent]
  -[SCNAuthoringEnvironment setShouldSnapOnGrid:]
  -[SCNAuthoringEnvironment setShouldSnapToAlign:]
  -[SCNAuthoringEnvironment graphicalSelectionEnabled]
  -[SCNAuthoringEnvironment setGraphicalSelectionEnabled:]
  -[SCNAuthoringEnvironment surroundToSelect]
  -[SCNAuthoringEnvironment setSurroundToSelect:]


SCNEventHandler : NSObject
 @property  SCNView *view
 @property  BOOL enableFreeCamera
 @property  BOOL autoSwitchToFreeCamera
 @property  SCNNode *freeCamera

  // instance methods
  -[SCNEventHandler init]
  -[SCNEventHandler dealloc]
  -[SCNEventHandler setDelegate:]
  -[SCNEventHandler view]
  -[SCNEventHandler setView:]
  -[SCNEventHandler gestureRecognizers]
  -[SCNEventHandler sceneWillChange]
  -[SCNEventHandler sceneDidChange]
  -[SCNEventHandler viewWillDrawAtTime:]
  -[SCNEventHandler viewDidDrawAtTime:]
  -[SCNEventHandler cameraWillChange]
  -[SCNEventHandler cameraDidChange]
  -[SCNEventHandler wantsRedraw]
  -[SCNEventHandler setEnableFreeCamera:]
  -[SCNEventHandler freeCamera]
  -[SCNEventHandler enableFreeCamera]
  -[SCNEventHandler autoSwitchToFreeCamera]
  -[SCNEventHandler setAutoSwitchToFreeCamera:]
  -[SCNEventHandler activateFreeCamera]


SCNCameraControlEventHandler : SCNEventHandler
 @property  BOOL gimbalLockMode
 @property  {SCNVector3=fff} gimbalLockVector
 @property  unsigned long stickyAxis
 @property  BOOL enableInertia
 @property  double friction
 @property  BOOL allowsTranslation
 @property  BOOL automaticCameraTarget
 @property  {SCNVector3=fff} cameraTarget

  // class methods
  +[SCNCameraControlEventHandler frontVectorWithPointOfView:]
  +[SCNCameraControlEventHandler matrixWithNoRoll:]

  // instance methods
  -[SCNCameraControlEventHandler init]
  -[SCNCameraControlEventHandler dealloc]
  -[SCNCameraControlEventHandler enabled]
  -[SCNCameraControlEventHandler setEnabled:]
  -[SCNCameraControlEventHandler gestureRecognizerShouldBegin:]
  -[SCNCameraControlEventHandler gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[SCNCameraControlEventHandler gestureRecognizers]
  -[SCNCameraControlEventHandler friction]
  -[SCNCameraControlEventHandler setFriction:]
  -[SCNCameraControlEventHandler _handlePan:]
  -[SCNCameraControlEventHandler zoomFactor]
  -[SCNCameraControlEventHandler _handlePinch:]
  -[SCNCameraControlEventHandler setZoomFactor:]
  -[SCNCameraControlEventHandler _setInertiaRunning:]
  -[SCNCameraControlEventHandler clearRoll]
  -[SCNCameraControlEventHandler sceneWillChange]
  -[SCNCameraControlEventHandler sceneDidChange]
  -[SCNCameraControlEventHandler viewWillDrawAtTime:]
  -[SCNCameraControlEventHandler cameraWillChange]
  -[SCNCameraControlEventHandler cameraDidChange]
  -[SCNCameraControlEventHandler wantsRedraw]
  -[SCNCameraControlEventHandler setEnableFreeCamera:]
  -[SCNCameraControlEventHandler freeCamera]
  -[SCNCameraControlEventHandler activateFreeCamera]
  -[SCNCameraControlEventHandler invalidateCameraTarget]
  -[SCNCameraControlEventHandler setAutomaticCameraTarget:]
  -[SCNCameraControlEventHandler _switchToFreeViewCamera]
  -[SCNCameraControlEventHandler frontVector]
  -[SCNCameraControlEventHandler _browseScale]
  -[SCNCameraControlEventHandler setCameraTarget:]
  -[SCNCameraControlEventHandler _resetFreeViewCamera]
  -[SCNCameraControlEventHandler _prepareFreeViewCamera]
  -[SCNCameraControlEventHandler viewedObjectSphere]
  -[SCNCameraControlEventHandler updateBrowseScaleFactor]
  -[SCNCameraControlEventHandler _freeCameraActivated]
  -[SCNCameraControlEventHandler _installFreeViewCameraIfNeeded]
  -[SCNCameraControlEventHandler computeAutomaticTargetPoint]
  -[SCNCameraControlEventHandler cameraAutomaticTargetPoint]
  -[SCNCameraControlEventHandler cameraTarget]
  -[SCNCameraControlEventHandler zoomBy:animate:]
  -[SCNCameraControlEventHandler _translationCoef]
  -[SCNCameraControlEventHandler focusNode:]
  -[SCNCameraControlEventHandler _resetBrowseScaleFactor]
  -[SCNCameraControlEventHandler _rotateWithDrag:mode:stickyAxis:]
  -[SCNCameraControlEventHandler _isInertiaRunning]
  -[SCNCameraControlEventHandler _onInertiaTimer]
  -[SCNCameraControlEventHandler _3DConnexionIsPressed]
  -[SCNCameraControlEventHandler computeBoundingSphereOmittingFloorsForNode:sphere:]
  -[SCNCameraControlEventHandler _handlePress:]
  -[SCNCameraControlEventHandler _handleRotation:]
  -[SCNCameraControlEventHandler _handleDoubleTap:]
  -[SCNCameraControlEventHandler beginGesture:]
  -[SCNCameraControlEventHandler pinchWithGestureRecognizer:]
  -[SCNCameraControlEventHandler panWithGestureRecognizer:]
  -[SCNCameraControlEventHandler rotateWithGestureRecognizer:]
  -[SCNCameraControlEventHandler _startBrowsingIfNeeded:]
  -[SCNCameraControlEventHandler _beginTranslateAtLocation:]
  -[SCNCameraControlEventHandler endDraggingWithVelocity:]
  -[SCNCameraControlEventHandler _translateTo:]
  -[SCNCameraControlEventHandler allowsTranslation]
  -[SCNCameraControlEventHandler setAllowsTranslation:]
  -[SCNCameraControlEventHandler enableInertia]
  -[SCNCameraControlEventHandler setEnableInertia:]
  -[SCNCameraControlEventHandler gimbalLockMode]
  -[SCNCameraControlEventHandler setGimbalLockMode:]
  -[SCNCameraControlEventHandler gimbalLockVector]
  -[SCNCameraControlEventHandler setGimbalLockVector:]
  -[SCNCameraControlEventHandler automaticCameraTarget]
  -[SCNCameraControlEventHandler stickyAxis]
  -[SCNCameraControlEventHandler setStickyAxis:]
  -[SCNCameraControlEventHandler rotateOf:]
  -[SCNCameraControlEventHandler zoomBy:]
  -[SCNCameraControlEventHandler translateByX:Y:Z:]
  -[SCNCameraControlEventHandler rotateWithVector:mode:]


SCNActionRotate : SCNAction
  // class methods
  +[SCNActionRotate supportsSecureCoding]
  +[SCNActionRotate rotateByX:y:z:duration:]
  +[SCNActionRotate rotateToX:y:z:duration:]
  +[SCNActionRotate rotateByAngle:aroundAxis:duration:]
  +[SCNActionRotate rotateToAxisAngle:duration:]
  +[SCNActionRotate rotateToX:y:z:duration:shortestUnitArc:]

  // instance methods
  -[SCNActionRotate init]
  -[SCNActionRotate copyWithZone:]
  -[SCNActionRotate encodeWithCoder:]
  -[SCNActionRotate initWithCoder:]
  -[SCNActionRotate parameters]
  -[SCNActionRotate isRelative]
  -[SCNActionRotate reversedAction]


SCNCommonProfileProgramGeneratorMetal : SCNCommonProfileProgramGenerator
  // instance methods
  -[SCNCommonProfileProgramGeneratorMetal init]
  -[SCNCommonProfileProgramGeneratorMetal dealloc]
  -[SCNCommonProfileProgramGeneratorMetal profile]
  -[SCNCommonProfileProgramGeneratorMetal emptyShaderCache]
  -[SCNCommonProfileProgramGeneratorMetal _newProgramWithHashCode:engineContext:introspectionDataPtr:]
  -[SCNCommonProfileProgramGeneratorMetal _loadSourceCode]
  -[SCNCommonProfileProgramGeneratorMetal _newProgramWithHashCodeWithFunctionConstants:engineContext:introspectionDataPtr:]


SCNCameraNavigationController : NSObject <SCNEventHandler, SCNCameraControllerDelegate>
 @property  SCNCameraController *cameraController
 @property  <SCNCameraNavigationControllerDelegate> *delegate
 @property  unsigned long stickyAxis
 @property  {SCNVector3=fff} cameraTarget
 @property  BOOL gimbalLockMode
 @property  BOOL enableInertia
 @property  double friction
 @property  BOOL automaticCameraTarget
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL autoSwitchToFreeCamera
 @property  BOOL allowsTranslation
 @property  double flyModeVelocity
 @property  double panSensitivity
 @property  double truckSensitivity
 @property  double rotationSensitivity
 @property  BOOL enabled
 @property  BOOL enableFreeCamera
 @property  SCNNode *freeCamera
 @property  SCNView *view

  // instance methods
  -[SCNCameraNavigationController dealloc]
  -[SCNCameraNavigationController enabled]
  -[SCNCameraNavigationController setEnabled:]
  -[SCNCameraNavigationController delegate]
  -[SCNCameraNavigationController setDelegate:]
  -[SCNCameraNavigationController .cxx_destruct]
  -[SCNCameraNavigationController .cxx_construct]
  -[SCNCameraNavigationController view]
  -[SCNCameraNavigationController setView:]
  -[SCNCameraNavigationController gestureRecognizerShouldBegin:]
  -[SCNCameraNavigationController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[SCNCameraNavigationController gestureRecognizers]
  -[SCNCameraNavigationController friction]
  -[SCNCameraNavigationController setFriction:]
  -[SCNCameraNavigationController initWithView:]
  -[SCNCameraNavigationController _handlePan:]
  -[SCNCameraNavigationController zoomFactor]
  -[SCNCameraNavigationController _handlePinch:]
  -[SCNCameraNavigationController setZoomFactor:]
  -[SCNCameraNavigationController cameraController]
  -[SCNCameraNavigationController _targetDistance]
  -[SCNCameraNavigationController pointOfView]
  -[SCNCameraNavigationController cameraInertiaWillStartForController:]
  -[SCNCameraNavigationController cameraInertiaDidEndForController:]
  -[SCNCameraNavigationController worldFront]
  -[SCNCameraNavigationController sceneWillChange]
  -[SCNCameraNavigationController sceneDidChange]
  -[SCNCameraNavigationController viewWillDrawAtTime:]
  -[SCNCameraNavigationController viewDidDrawAtTime:]
  -[SCNCameraNavigationController cameraWillChange]
  -[SCNCameraNavigationController cameraDidChange]
  -[SCNCameraNavigationController wantsRedraw]
  -[SCNCameraNavigationController setEnableFreeCamera:]
  -[SCNCameraNavigationController freeCamera]
  -[SCNCameraNavigationController enableFreeCamera]
  -[SCNCameraNavigationController autoSwitchToFreeCamera]
  -[SCNCameraNavigationController setAutoSwitchToFreeCamera:]
  -[SCNCameraNavigationController activateFreeCamera]
  -[SCNCameraNavigationController invalidateCameraTarget]
  -[SCNCameraNavigationController setAutomaticCameraTarget:]
  -[SCNCameraNavigationController _switchToFreeViewCamera]
  -[SCNCameraNavigationController setCameraTarget:]
  -[SCNCameraNavigationController _resetFreeViewCamera]
  -[SCNCameraNavigationController _prepareFreeViewCamera]
  -[SCNCameraNavigationController _freeCameraActivated]
  -[SCNCameraNavigationController _installFreeViewCameraIfNeeded]
  -[SCNCameraNavigationController cameraAutomaticTargetPoint]
  -[SCNCameraNavigationController cameraTarget]
  -[SCNCameraNavigationController zoomBy:animate:]
  -[SCNCameraNavigationController _translationCoef]
  -[SCNCameraNavigationController focusNode:]
  -[SCNCameraNavigationController _handlePress:]
  -[SCNCameraNavigationController _handleRotation:]
  -[SCNCameraNavigationController _handleDoubleTap:]
  -[SCNCameraNavigationController beginGesture:]
  -[SCNCameraNavigationController pinchWithGestureRecognizer:]
  -[SCNCameraNavigationController panWithGestureRecognizer:]
  -[SCNCameraNavigationController rotateWithGestureRecognizer:]
  -[SCNCameraNavigationController _startBrowsingIfNeeded:]
  -[SCNCameraNavigationController allowsTranslation]
  -[SCNCameraNavigationController setAllowsTranslation:]
  -[SCNCameraNavigationController enableInertia]
  -[SCNCameraNavigationController setEnableInertia:]
  -[SCNCameraNavigationController gimbalLockMode]
  -[SCNCameraNavigationController setGimbalLockMode:]
  -[SCNCameraNavigationController gimbalLockVector]
  -[SCNCameraNavigationController setGimbalLockVector:]
  -[SCNCameraNavigationController automaticCameraTarget]
  -[SCNCameraNavigationController stickyAxis]
  -[SCNCameraNavigationController setStickyAxis:]
  -[SCNCameraNavigationController rotateOf:]
  -[SCNCameraNavigationController zoomBy:]
  -[SCNCameraNavigationController translateByX:Y:Z:]
  -[SCNCameraNavigationController _computeAutomaticTargetPointIfNeeded]
  -[SCNCameraNavigationController focusNodes:]
  -[SCNCameraNavigationController _pointOfViewUsesOrthographicProjection]
  -[SCNCameraNavigationController _pointOfViewOrthographicScale]
  -[SCNCameraNavigationController _orthographicScaleForZoomFactor:]
  -[SCNCameraNavigationController _sceneBoundingSphere]
  -[SCNCameraNavigationController _orthographicZoomFactorForProposedZoomFactor:]
  -[SCNCameraNavigationController _setPointOfViewOrthographicScale:]
  -[SCNCameraNavigationController _cappedTranslationDelta:]
  -[SCNCameraNavigationController __didChangePointOfView]
  -[SCNCameraNavigationController _defaultTargetForScene:]
  -[SCNCameraNavigationController _stopInertia]
  -[SCNCameraNavigationController _setupUpVector]
  -[SCNCameraNavigationController _willBeginInteraction]
  -[SCNCameraNavigationController _computeTranslationOrigin3DFromPoint:]
  -[SCNCameraNavigationController __willChangePointOfView]
  -[SCNCameraNavigationController _modeSensitivity]
  -[SCNCameraNavigationController _translateToViewPoint:]
  -[SCNCameraNavigationController panSensitivity]
  -[SCNCameraNavigationController truckSensitivity]
  -[SCNCameraNavigationController rotationSensitivity]
  -[SCNCameraNavigationController flyModeVelocity]
  -[SCNCameraNavigationController setFlyModeVelocity:]
  -[SCNCameraNavigationController setPanSensitivity:]
  -[SCNCameraNavigationController setTruckSensitivity:]
  -[SCNCameraNavigationController setRotationSensitivity:]
  -[SCNCameraNavigationController _effectiveStickyAxis]
  -[SCNCameraNavigationController _computeBoundingSphereOmittingFloorsForNode:sphere:]
  -[SCNCameraNavigationController _computeStickyAxisIfNeeded:]


SCNTextureSource : NSObject
  // instance methods
  -[SCNTextureSource dealloc]
  -[SCNTextureSource setSize:]
  -[SCNTextureSource nextFrameTime]
  -[SCNTextureSource metalTextureWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNTextureSource rendererContextForTextureSourceWithEngineContext:]
  -[SCNTextureSource cleanup:]
  -[SCNTextureSource _textureWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNTextureSource glTextureCache]
  -[SCNTextureSource setGlTextureCache:]
  -[SCNTextureSource supportsMetal]
  -[SCNTextureSource MTLTextureCache]
  -[SCNTextureSource setMTLTextureCache:]
  -[SCNTextureSource prefersGL3]
  -[SCNTextureSource renderWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNTextureSource textureWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNTextureSource textureSize]


SCNImageSource : NSObject
  // instance methods
  -[SCNImageSource isOpaque]
  -[SCNImageSource textureSource]
  -[SCNImageSource connectToProxy:]
  -[SCNImageSource isPremultiplied]


SCNTextureOffscreenRenderingSource : SCNTextureSource
  // instance methods
  -[SCNTextureOffscreenRenderingSource _bindFramebuffer:]
  -[SCNTextureOffscreenRenderingSource _unbindFramebuffer:]
  -[SCNTextureOffscreenRenderingSource _buildMipmaps:]
  -[SCNTextureOffscreenRenderingSource cleanup:]
  -[SCNTextureOffscreenRenderingSource __prepareFramebufferWithSize:withEngineContext:textureSampler:needsStencil:]
  -[SCNTextureOffscreenRenderingSource textureSize]
  -[SCNTextureOffscreenRenderingSource _createFramebufferWithEngineContext:size:]


SCNSourceRendererRegistry : NSObject
  // class methods
  +[SCNSourceRendererRegistry sharedRegistry]

  // instance methods
  -[SCNSourceRendererRegistry init]
  -[SCNSourceRendererRegistry dealloc]
  -[SCNSourceRendererRegistry rendererDidChange:]
  -[SCNSourceRendererRegistry sourceRendererForEngineContext:source:textureSource:targetTexture:]
  -[SCNSourceRendererRegistry endFrameForEngineContext:]
  -[SCNSourceRendererRegistry removeSourceRenderersForEngineContext:]
  -[SCNSourceRendererRegistry removeSourceRenderersForSource:]


SCNDelegateSource : SCNImageSource
 @property  id delegate

  // instance methods
  -[SCNDelegateSource dealloc]
  -[SCNDelegateSource delegate]
  -[SCNDelegateSource setDelegate:]
  -[SCNDelegateSource isOpaque]
  -[SCNDelegateSource textureSource]


SCNTextureDelegateSource : SCNTextureOffscreenRenderingSource
 @property  id delegate

  // instance methods
  -[SCNTextureDelegateSource dealloc]
  -[SCNTextureDelegateSource delegate]
  -[SCNTextureDelegateSource setDelegate:]
  -[SCNTextureDelegateSource cleanup:]
  -[SCNTextureDelegateSource renderWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNTextureDelegateSource textureWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNTextureDelegateSource __updateTextureWithDelegate:engineContext:]


SCNExportOperation : NSOperation /System/Library/Frameworks/ModelIO.framework/ModelIO
  // instance methods
  -[SCNExportOperation error]
  -[SCNExportOperation progress]
  -[SCNExportOperation canceled]
  -[SCNExportOperation succeded]


_SCNExportOperation : SCNExportOperation
 @property  id delegate
 @property  ^v userInfo
 @property  SEL didEndSelector
 @property  SCNScene *scene
 @property  {CGSize=dd} size
 @property  double startTime
 @property  double endTime
 @property  double progress
 @property  BOOL canceled
 @property  BOOL succeded
 @property  NSDictionary *attributes
 @property  NSURL *outputURL
 @property  SCNNode *pointOfView
 @property  NSError *error
 @property  unsigned long antialiasingMode
 @property  SCNRenderer *renderer

  // instance methods
  -[_SCNExportOperation dealloc]
  -[_SCNExportOperation userInfo]
  -[_SCNExportOperation delegate]
  -[_SCNExportOperation setDelegate:]
  -[_SCNExportOperation size]
  -[_SCNExportOperation error]
  -[_SCNExportOperation cancel]
  -[_SCNExportOperation attributes]
  -[_SCNExportOperation setError:]
  -[_SCNExportOperation progress]
  -[_SCNExportOperation setUserInfo:]
  -[_SCNExportOperation setAttributes:]
  -[_SCNExportOperation canceled]
  -[_SCNExportOperation setCanceled:]
  -[_SCNExportOperation setSize:]
  -[_SCNExportOperation outputURL]
  -[_SCNExportOperation startTime]
  -[_SCNExportOperation endTime]
  -[_SCNExportOperation setEndTime:]
  -[_SCNExportOperation setStartTime:]
  -[_SCNExportOperation setProgress:]
  -[_SCNExportOperation scene]
  -[_SCNExportOperation setScene:]
  -[_SCNExportOperation setOutputURL:]
  -[_SCNExportOperation renderer]
  -[_SCNExportOperation setRenderer:]
  -[_SCNExportOperation pointOfView]
  -[_SCNExportOperation setPointOfView:]
  -[_SCNExportOperation antialiasingMode]
  -[_SCNExportOperation setAntialiasingMode:]
  -[_SCNExportOperation setDidEndSelector:]
  -[_SCNExportOperation succeded]
  -[_SCNExportOperation didEndSelector]
  -[_SCNExportOperation setSucceded:]


SCNMovieExportOperation : _SCNExportOperation
  // instance methods
  -[SCNMovieExportOperation dealloc]
  -[SCNMovieExportOperation main]
  -[SCNMovieExportOperation initWithRenderer:size:attributes:outputURL:]
  -[SCNMovieExportOperation _copySnapshot:]
  -[SCNMovieExportOperation renderAndAppendWithPresentationTime:usingAdaptor:metalTextureCache:cvQueue:completionBlock:]
  -[SCNMovieExportOperation appendImage:withPresentationTime:usingAdaptor:]
  -[SCNMovieExportOperation _finishedExport]
  -[SCNMovieExportOperation _setupMovieToWritableFile:]


SCNPhysicsSliderJoint : SCNPhysicsBehavior
 @property  SCNPhysicsBody *bodyA
 @property  {SCNVector3=fff} axisA
 @property  {SCNVector3=fff} anchorA
 @property  SCNPhysicsBody *bodyB
 @property  {SCNVector3=fff} axisB
 @property  {SCNVector3=fff} anchorB
 @property  double minimumLinearLimit
 @property  double maximumLinearLimit
 @property  double minimumAngularLimit
 @property  double maximumAngularLimit
 @property  double motorTargetLinearVelocity
 @property  double motorMaximumForce
 @property  double motorTargetAngularVelocity
 @property  double motorMaximumTorque

  // class methods
  +[SCNPhysicsSliderJoint supportsSecureCoding]
  +[SCNPhysicsSliderJoint jointWithBodyA:axisA:anchorA:bodyB:axisB:anchorB:]
  +[SCNPhysicsSliderJoint jointWithBody:axis:anchor:]

  // instance methods
  -[SCNPhysicsSliderJoint dealloc]
  -[SCNPhysicsSliderJoint encodeWithCoder:]
  -[SCNPhysicsSliderJoint initWithCoder:]
  -[SCNPhysicsSliderJoint bodyA]
  -[SCNPhysicsSliderJoint bodyB]
  -[SCNPhysicsSliderJoint initWithBodyA:axisA:anchorA:bodyB:axisB:anchorB:]
  -[SCNPhysicsSliderJoint initWithBody:axis:anchor:]
  -[SCNPhysicsSliderJoint axisA]
  -[SCNPhysicsSliderJoint setAxisA:]
  -[SCNPhysicsSliderJoint axisB]
  -[SCNPhysicsSliderJoint setAxisB:]
  -[SCNPhysicsSliderJoint anchorA]
  -[SCNPhysicsSliderJoint setAnchorA:]
  -[SCNPhysicsSliderJoint anchorB]
  -[SCNPhysicsSliderJoint setAnchorB:]
  -[SCNPhysicsSliderJoint _addToPhysicsWorld:]
  -[SCNPhysicsSliderJoint _willRemoveFromPhysicsWorld:]
  -[SCNPhysicsSliderJoint minimumLinearLimit]
  -[SCNPhysicsSliderJoint setMinimumLinearLimit:]
  -[SCNPhysicsSliderJoint maximumLinearLimit]
  -[SCNPhysicsSliderJoint setMaximumLinearLimit:]
  -[SCNPhysicsSliderJoint minimumAngularLimit]
  -[SCNPhysicsSliderJoint setMinimumAngularLimit:]
  -[SCNPhysicsSliderJoint maximumAngularLimit]
  -[SCNPhysicsSliderJoint setMaximumAngularLimit:]
  -[SCNPhysicsSliderJoint motorTargetLinearVelocity]
  -[SCNPhysicsSliderJoint setMotorTargetLinearVelocity:]
  -[SCNPhysicsSliderJoint motorMaximumForce]
  -[SCNPhysicsSliderJoint setMotorMaximumForce:]
  -[SCNPhysicsSliderJoint motorTargetAngularVelocity]
  -[SCNPhysicsSliderJoint setMotorTargetAngularVelocity:]
  -[SCNPhysicsSliderJoint motorMaximumTorque]
  -[SCNPhysicsSliderJoint setMotorMaximumTorque:]


SCNLowLatencyMetalLayer : CAMetalLayer /System/Library/Frameworks/MetalKit.framework/MetalKit
  // instance methods
  -[SCNLowLatencyMetalLayer lowLatency]
  -[SCNLowLatencyMetalLayer maximumDrawableCount]


SCNActionScale : SCNAction
  // class methods
  +[SCNActionScale supportsSecureCoding]
  +[SCNActionScale scaleBy:duration:]
  +[SCNActionScale scaleTo:duration:]

  // instance methods
  -[SCNActionScale init]
  -[SCNActionScale copyWithZone:]
  -[SCNActionScale encodeWithCoder:]
  -[SCNActionScale initWithCoder:]
  -[SCNActionScale parameters]
  -[SCNActionScale isRelative]
  -[SCNActionScale reversedAction]


SCNActionGroup : SCNAction
  // class methods
  +[SCNActionGroup supportsSecureCoding]
  +[SCNActionGroup groupWithActions:]

  // instance methods
  -[SCNActionGroup init]
  -[SCNActionGroup dealloc]
  -[SCNActionGroup copyWithZone:]
  -[SCNActionGroup encodeWithCoder:]
  -[SCNActionGroup initWithCoder:]
  -[SCNActionGroup finished]
  -[SCNActionGroup isCustom]
  -[SCNActionGroup reversedAction]
  -[SCNActionGroup setupWithActions:]


SCNJSImage : UIImage /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // class methods
  +[SCNJSImage imageWithURL:]
  +[SCNJSImage SCNJSExportProtocol]
  +[SCNJSImage imageWithPath:]


SCNJSValue : NSValue /System/Library/Frameworks/ModelIO.framework/ModelIO
  // class methods
  +[SCNJSValue SCNJSExportProtocol]
  +[SCNJSValue valueWithVector3:]
  +[SCNJSValue valueWithVector4:]
  +[SCNJSValue valueWithMatrix4:]

  // instance methods
  -[SCNJSValue vector3]
  -[SCNJSValue vector4]
  -[SCNJSValue matrix4]


SCNJSValueTmpImp : NSObject
  // class methods
  +[SCNJSValueTmpImp valueWithVector4:inContext:]
  +[SCNJSValueTmpImp valueWithVector3:inContext:]
  +[SCNJSValueTmpImp valueWithTransform3D:inContext:]

  // instance methods
  -[SCNJSValueTmpImp toVector4]
  -[SCNJSValueTmpImp toVector3]
  -[SCNJSValueTmpImp toTransform3D]


SCNActionRemove : SCNAction
  // class methods
  +[SCNActionRemove supportsSecureCoding]
  +[SCNActionRemove removeFromParentNode]

  // instance methods
  -[SCNActionRemove init]
  -[SCNActionRemove copyWithZone:]
  -[SCNActionRemove encodeWithCoder:]
  -[SCNActionRemove initWithCoder:]
  -[SCNActionRemove reversedAction]
  -[SCNActionRemove updateWithTarget:forTime:]
  -[SCNActionRemove willStartWithTarget:atTime:]


SCNPhysicsVehicle : SCNPhysicsBehavior
 @property  double speedInKilometersPerHour
 @property  NSArray *wheels
 @property  SCNPhysicsBody *chassisBody

  // class methods
  +[SCNPhysicsVehicle supportsSecureCoding]
  +[SCNPhysicsVehicle vehicleWithChassisBody:wheels:]

  // instance methods
  -[SCNPhysicsVehicle dealloc]
  -[SCNPhysicsVehicle encodeWithCoder:]
  -[SCNPhysicsVehicle initWithCoder:]
  -[SCNPhysicsVehicle _update]
  -[SCNPhysicsVehicle valueForKeyPath:]
  -[SCNPhysicsVehicle setValue:forKeyPath:]
  -[SCNPhysicsVehicle physicsWorld]
  -[SCNPhysicsVehicle _addToPhysicsWorld:]
  -[SCNPhysicsVehicle _willRemoveFromPhysicsWorld:]
  -[SCNPhysicsVehicle _handleCreateIfNeeded:]
  -[SCNPhysicsVehicle hasReferenceToPhysicsBody:]
  -[SCNPhysicsVehicle btVehicle]
  -[SCNPhysicsVehicle applyEngineForce:forWheelAtIndex:]
  -[SCNPhysicsVehicle setSteeringAngle:forWheelAtIndex:]
  -[SCNPhysicsVehicle applyBrakingForce:forWheelAtIndex:]
  -[SCNPhysicsVehicle speedInKilometersPerHour]
  -[SCNPhysicsVehicle wheels]
  -[SCNPhysicsVehicle chassisBody]
  -[SCNPhysicsVehicle _initializeWheelsArray]
  -[SCNPhysicsVehicle initWithChassisBody:wheels:]
  -[SCNPhysicsVehicle _createWheel:]
  -[SCNPhysicsVehicle wheelAtIndex:]
  -[SCNPhysicsVehicle _customDecodingOfSCNPhysicsVehicle:]


SCNAVPlayerSource : SCNTextureSource
 @property  AVPlayer *player

  // instance methods
  -[SCNAVPlayerSource init]
  -[SCNAVPlayerSource dealloc]
  -[SCNAVPlayerSource player]
  -[SCNAVPlayerSource setPlayer:]
  -[SCNAVPlayerSource registerPlayer:]
  -[SCNAVPlayerSource unregisterPlayer:]
  -[SCNAVPlayerSource metalTextureWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNAVPlayerSource cleanup:]
  -[SCNAVPlayerSource connectToProxy:]
  -[SCNAVPlayerSource discardVideoData]


SCNCaptureDeviceSource : SCNTextureSource <AVCaptureVideoDataOutputSampleBufferDelegate>
 @property  AVCaptureDevice *captureDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCNCaptureDeviceSource dealloc]
  -[SCNCaptureDeviceSource captureOutput:didOutputSampleBuffer:fromConnection:]
  -[SCNCaptureDeviceSource captureDevice]
  -[SCNCaptureDeviceSource setCaptureDevice:]
  -[SCNCaptureDeviceSource metalTextureWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNCaptureDeviceSource cleanup:]
  -[SCNCaptureDeviceSource connectToProxy:]
  -[SCNCaptureDeviceSource discardVideoData]


SCNCaptureDeviceOutputConsumerSource : SCNTextureSource <SCNCaptureDeviceOutputConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCNCaptureDeviceOutputConsumerSource init]
  -[SCNCaptureDeviceOutputConsumerSource dealloc]
  -[SCNCaptureDeviceOutputConsumerSource initWithOptions:]
  -[SCNCaptureDeviceOutputConsumerSource setPixelBuffer:]
  -[SCNCaptureDeviceOutputConsumerSource metalTextureWithEngineContext:textureSampler:nextFrameTime:]
  -[SCNCaptureDeviceOutputConsumerSource cleanup:]
  -[SCNCaptureDeviceOutputConsumerSource connectToProxy:]
  -[SCNCaptureDeviceOutputConsumerSource discardVideoData]
  -[SCNCaptureDeviceOutputConsumerSource setSampleBuffer:]
  -[SCNCaptureDeviceOutputConsumerSource containsAlpha]


SCNConstraint : NSObject <NSCopying, NSSecureCoding, SCNAnimatable>
 @property  BOOL enabled
 @property  double influenceFactor
 @property  BOOL incremental
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *animationKeys

  // class methods
  +[SCNConstraint supportsSecureCoding]

  // instance methods
  -[SCNConstraint init]
  -[SCNConstraint dealloc]
  -[SCNConstraint name]
  -[SCNConstraint copyWithZone:]
  -[SCNConstraint copy]
  -[SCNConstraint setEnabled:]
  -[SCNConstraint encodeWithCoder:]
  -[SCNConstraint initWithCoder:]
  -[SCNConstraint setName:]
  -[SCNConstraint isEnabled]
  -[SCNConstraint copyTo:]
  -[SCNConstraint commonInit]
  -[SCNConstraint scene]
  -[SCNConstraint addAnimation:]
  -[SCNConstraint animationForKey:]
  -[SCNConstraint removeAnimationForKey:]
  -[SCNConstraint addAnimation:forKey:]
  -[SCNConstraint removeAllAnimations]
  -[SCNConstraint animationKeys]
  -[SCNConstraint setIncremental:]
  -[SCNConstraint isIncremental]
  -[SCNConstraint __CFObject]
  -[SCNConstraint sceneRef]
  -[SCNConstraint addAnimationPlayer:forKey:]
  -[SCNConstraint _scnAnimationForKey:]
  -[SCNConstraint animationPlayerForKey:]
  -[SCNConstraint animationManager]
  -[SCNConstraint _pauseAnimation:forKey:pausedByNode:]
  -[SCNConstraint removeAnimationForKey:blendOutDuration:]
  -[SCNConstraint removeAnimationForKey:fadeOutDuration:]
  -[SCNConstraint pauseAnimationForKey:]
  -[SCNConstraint resumeAnimationForKey:]
  -[SCNConstraint setSpeed:forAnimationKey:]
  -[SCNConstraint isAnimationForKeyPaused:]
  -[SCNConstraint __removeAnimation:forKey:]
  -[SCNConstraint _syncObjCAnimations]
  -[SCNConstraint _copyAnimationsFrom:]
  -[SCNConstraint _scnBindings]
  -[SCNConstraint bindAnimatablePath:toObject:withKeyPath:options:]
  -[SCNConstraint unbindAnimatablePath:]
  -[SCNConstraint removeAllBindings]
  -[SCNConstraint copyAnimationChannelForKeyPath:animation:]
  -[SCNConstraint isPausedOrPausedByInheritance]
  -[SCNConstraint constraintRef]
  -[SCNConstraint influenceFactor]
  -[SCNConstraint setInfluenceFactor:]
  -[SCNConstraint setConstraintRef:]
  -[SCNConstraint finalizeDecodeConstraint:]


SCNLookAtConstraint : SCNConstraint
 @property  SCNNode *target
 @property  {SCNVector3=fff} targetOffset
 @property  {SCNVector3=fff} localFront
 @property  {SCNVector3=fff} worldUp
 @property  BOOL gimbalLockEnabled

  // class methods
  +[SCNLookAtConstraint supportsSecureCoding]
  +[SCNLookAtConstraint lookAtConstraintWithTarget:]

  // instance methods
  -[SCNLookAtConstraint dealloc]
  -[SCNLookAtConstraint copyWithZone:]
  -[SCNLookAtConstraint encodeWithCoder:]
  -[SCNLookAtConstraint initWithCoder:]
  -[SCNLookAtConstraint setTarget:]
  -[SCNLookAtConstraint target]
  -[SCNLookAtConstraint initWithTarget:]
  -[SCNLookAtConstraint setTargetOffset:]
  -[SCNLookAtConstraint targetOffset]
  -[SCNLookAtConstraint upVector]
  -[SCNLookAtConstraint worldUp]
  -[SCNLookAtConstraint setWorldUp:]
  -[SCNLookAtConstraint localFront]
  -[SCNLookAtConstraint setLocalFront:]
  -[SCNLookAtConstraint setUpVector:]
  -[SCNLookAtConstraint gimbalLockEnabled]
  -[SCNLookAtConstraint setGimbalLockEnabled:]
  -[SCNLookAtConstraint _customEncodingOfSCNLookAtConstraint:]
  -[SCNLookAtConstraint _customDecodingOfSCNLookAtConstraint:]


SCNDistanceConstraint : SCNConstraint
 @property  SCNNode *target
 @property  double minimumDistance
 @property  double maximumDistance

  // class methods
  +[SCNDistanceConstraint supportsSecureCoding]
  +[SCNDistanceConstraint distanceConstraint]
  +[SCNDistanceConstraint distanceConstraintWithTarget:]

  // instance methods
  -[SCNDistanceConstraint init]
  -[SCNDistanceConstraint dealloc]
  -[SCNDistanceConstraint copyWithZone:]
  -[SCNDistanceConstraint encodeWithCoder:]
  -[SCNDistanceConstraint initWithCoder:]
  -[SCNDistanceConstraint setTarget:]
  -[SCNDistanceConstraint target]
  -[SCNDistanceConstraint targetDirection]
  -[SCNDistanceConstraint setTargetDirection:]
  -[SCNDistanceConstraint setMinimumDistance:]
  -[SCNDistanceConstraint minimumDistance]
  -[SCNDistanceConstraint maximumDistance]
  -[SCNDistanceConstraint setMaximumDistance:]
  -[SCNDistanceConstraint _customEncodingOfSCNDistanceConstraint:]
  -[SCNDistanceConstraint _customDecodingOfSCNDistanceConstraint:]
  -[SCNDistanceConstraint keepTargetDirection]
  -[SCNDistanceConstraint setKeepTargetDirection:]


SCNReplicatorConstraint : SCNConstraint
 @property  SCNNode *target
 @property  BOOL replicatesOrientation
 @property  BOOL replicatesPosition
 @property  BOOL replicatesScale
 @property  {SCNVector4=ffff} orientationOffset
 @property  {SCNVector3=fff} positionOffset
 @property  {SCNVector3=fff} scaleOffset

  // class methods
  +[SCNReplicatorConstraint supportsSecureCoding]
  +[SCNReplicatorConstraint replicatorConstraint]
  +[SCNReplicatorConstraint replicatorConstraintWithTarget:]

  // instance methods
  -[SCNReplicatorConstraint init]
  -[SCNReplicatorConstraint copyWithZone:]
  -[SCNReplicatorConstraint encodeWithCoder:]
  -[SCNReplicatorConstraint initWithCoder:]
  -[SCNReplicatorConstraint setTarget:]
  -[SCNReplicatorConstraint target]
  -[SCNReplicatorConstraint positionOffset]
  -[SCNReplicatorConstraint setPositionOffset:]
  -[SCNReplicatorConstraint scaleOffset]
  -[SCNReplicatorConstraint replicatesOrientation]
  -[SCNReplicatorConstraint setReplicatesOrientation:]
  -[SCNReplicatorConstraint replicatesPosition]
  -[SCNReplicatorConstraint setReplicatesPosition:]
  -[SCNReplicatorConstraint replicatesScale]
  -[SCNReplicatorConstraint setReplicatesScale:]
  -[SCNReplicatorConstraint orientationOffset]
  -[SCNReplicatorConstraint setOrientationOffset:]
  -[SCNReplicatorConstraint setScaleOffset:]
  -[SCNReplicatorConstraint _customEncodingOfSCNReplicatorConstraint:]
  -[SCNReplicatorConstraint _customDecodingOfSCNReplicatorConstraint:]


SCNAccelerationConstraint : SCNConstraint
 @property  double maximumLinearAcceleration
 @property  double maximumLinearVelocity
 @property  double decelerationDistance
 @property  double damping

  // class methods
  +[SCNAccelerationConstraint supportsSecureCoding]
  +[SCNAccelerationConstraint accelerationConstraint]

  // instance methods
  -[SCNAccelerationConstraint init]
  -[SCNAccelerationConstraint copyWithZone:]
  -[SCNAccelerationConstraint encodeWithCoder:]
  -[SCNAccelerationConstraint initWithCoder:]
  -[SCNAccelerationConstraint damping]
  -[SCNAccelerationConstraint setDamping:]
  -[SCNAccelerationConstraint maximumLinearVelocity]
  -[SCNAccelerationConstraint setMaximumLinearVelocity:]
  -[SCNAccelerationConstraint maximumLinearAcceleration]
  -[SCNAccelerationConstraint setMaximumLinearAcceleration:]
  -[SCNAccelerationConstraint decelerationDistance]
  -[SCNAccelerationConstraint setDecelerationDistance:]


SCNSliderConstraint : SCNConstraint
 @property  unsigned long collisionCategoryBitMask
 @property  double radius
 @property  {SCNVector3=fff} offset

  // class methods
  +[SCNSliderConstraint supportsSecureCoding]
  +[SCNSliderConstraint sliderConstraint]

  // instance methods
  -[SCNSliderConstraint init]
  -[SCNSliderConstraint copyWithZone:]
  -[SCNSliderConstraint encodeWithCoder:]
  -[SCNSliderConstraint initWithCoder:]
  -[SCNSliderConstraint setOffset:]
  -[SCNSliderConstraint radius]
  -[SCNSliderConstraint setRadius:]
  -[SCNSliderConstraint offset]
  -[SCNSliderConstraint collisionCategoryBitMask]
  -[SCNSliderConstraint setCollisionCategoryBitMask:]


SCNAvoidOccluderConstraint : SCNConstraint
 @property  <SCNAvoidOccluderConstraintDelegate> *delegate
 @property  SCNNode *target
 @property  unsigned long occluderCategoryBitMask
 @property  double bias

  // class methods
  +[SCNAvoidOccluderConstraint supportsSecureCoding]
  +[SCNAvoidOccluderConstraint avoidOccluderConstraint]
  +[SCNAvoidOccluderConstraint avoidOccluderConstraintWithTarget:]

  // instance methods
  -[SCNAvoidOccluderConstraint init]
  -[SCNAvoidOccluderConstraint dealloc]
  -[SCNAvoidOccluderConstraint copyWithZone:]
  -[SCNAvoidOccluderConstraint encodeWithCoder:]
  -[SCNAvoidOccluderConstraint initWithCoder:]
  -[SCNAvoidOccluderConstraint delegate]
  -[SCNAvoidOccluderConstraint setDelegate:]
  -[SCNAvoidOccluderConstraint setTarget:]
  -[SCNAvoidOccluderConstraint target]
  -[SCNAvoidOccluderConstraint setBias:]
  -[SCNAvoidOccluderConstraint bias]
  -[SCNAvoidOccluderConstraint occluderCategoryBitMask]
  -[SCNAvoidOccluderConstraint setOccluderCategoryBitMask:]
  -[SCNAvoidOccluderConstraint _customEncodingOfSCNAvoidOccluderConstraint:]
  -[SCNAvoidOccluderConstraint _customDecodingOfSCNAvoidOccluderConstraint:]


SCNBillboardConstraint : SCNConstraint
 @property  unsigned long freeAxes

  // class methods
  +[SCNBillboardConstraint supportsSecureCoding]
  +[SCNBillboardConstraint billboardConstraint]

  // instance methods
  -[SCNBillboardConstraint init]
  -[SCNBillboardConstraint copyWithZone:]
  -[SCNBillboardConstraint encodeWithCoder:]
  -[SCNBillboardConstraint initWithCoder:]
  -[SCNBillboardConstraint setPreserveScale:]
  -[SCNBillboardConstraint setFreeAxes:]
  -[SCNBillboardConstraint freeAxes]
  -[SCNBillboardConstraint preserveScale]


SCNConstantScaleConstraint : SCNConstraint
 @property  float scale
 @property  BOOL screenSpace

  // class methods
  +[SCNConstantScaleConstraint supportsSecureCoding]
  +[SCNConstantScaleConstraint constantScaleConstraint]

  // instance methods
  -[SCNConstantScaleConstraint init]
  -[SCNConstantScaleConstraint copyWithZone:]
  -[SCNConstantScaleConstraint encodeWithCoder:]
  -[SCNConstantScaleConstraint initWithCoder:]
  -[SCNConstantScaleConstraint scale]
  -[SCNConstantScaleConstraint setScale:]
  -[SCNConstantScaleConstraint screenSpace]
  -[SCNConstantScaleConstraint setScreenSpace:]


SCNTransformConstraint : SCNConstraint
  // class methods
  +[SCNTransformConstraint supportsSecureCoding]
  +[SCNTransformConstraint transformConstraintInWorldSpace:withBlock:]
  +[SCNTransformConstraint positionConstraintInWorldSpace:withBlock:]
  +[SCNTransformConstraint orientationConstraintInWorldSpace:withBlock:]

  // instance methods
  -[SCNTransformConstraint copyWithZone:]
  -[SCNTransformConstraint initWithCoder:]
  -[SCNTransformConstraint initTransformInWorld:withBlock:]
  -[SCNTransformConstraint initPositionInWorld:withBlock:]
  -[SCNTransformConstraint initOrientationInWorldSpace:withBlock:]


SCNIKJoint : NSObject
 @property  SCNNode *joint
 @property  double maxAllowedRotationAngle

  // instance methods
  -[SCNIKJoint joint]
  -[SCNIKJoint setJoint:]
  -[SCNIKJoint maxAllowedRotationAngle]
  -[SCNIKJoint setMaxAllowedRotationAngle:]


SCNIKConstraint : SCNConstraint
 @property  SCNNode *chainRootNode
 @property  {SCNVector3=fff} targetPosition

  // class methods
  +[SCNIKConstraint supportsSecureCoding]
  +[SCNIKConstraint inverseKinematicsConstraintWithChainRootNode:]

  // instance methods
  -[SCNIKConstraint init]
  -[SCNIKConstraint dealloc]
  -[SCNIKConstraint copyWithZone:]
  -[SCNIKConstraint encodeWithCoder:]
  -[SCNIKConstraint initWithCoder:]
  -[SCNIKConstraint targetPosition]
  -[SCNIKConstraint setTargetPosition:]
  -[SCNIKConstraint initWithChainRootNode:]
  -[SCNIKConstraint setMaxAllowedRotationAngle:forJoint:]
  -[SCNIKConstraint maxAllowedRotationAngleForJoint:]
  -[SCNIKConstraint chainRootNode]
  -[SCNIKConstraint setChainRootNode:]
  -[SCNIKConstraint jointForNode:]
  -[SCNIKConstraint _customEncodingOfSCNIKConstraint:]
  -[SCNIKConstraint _customDecodingOfSCNIKConstraint:]
  -[SCNIKConstraint _didDecodeSCNIKConstraint:]


SCNDeferredProgramGeneratorMetal : SCNCommonProfileProgramGenerator
  // instance methods
  -[SCNDeferredProgramGeneratorMetal init]
  -[SCNDeferredProgramGeneratorMetal dealloc]
  -[SCNDeferredProgramGeneratorMetal profile]
  -[SCNDeferredProgramGeneratorMetal _newProgramWithHashCode:engineContext:introspectionDataPtr:]


SCNActionRepeat : SCNAction
  // class methods
  +[SCNActionRepeat supportsSecureCoding]
  +[SCNActionRepeat repeatAction:count:]
  +[SCNActionRepeat repeatActionForever:]

  // instance methods
  -[SCNActionRepeat init]
  -[SCNActionRepeat dealloc]
  -[SCNActionRepeat copyWithZone:]
  -[SCNActionRepeat encodeWithCoder:]
  -[SCNActionRepeat initWithCoder:]
  -[SCNActionRepeat isCustom]
  -[SCNActionRepeat reversedAction]


SCNBufferBinding : NSObject
 @property  NSString *name
 @property  @? block
 @property  long long frequency

  // instance methods
  -[SCNBufferBinding dealloc]
  -[SCNBufferBinding name]
  -[SCNBufferBinding setName:]
  -[SCNBufferBinding block]
  -[SCNBufferBinding setBlock:]
  -[SCNBufferBinding frequency]
  -[SCNBufferBinding setFrequency:]


SCNProgramSemanticInfo : NSObject <NSSecureCoding>
 @property  NSString *semantic
 @property  NSDictionary *options

  // class methods
  +[SCNProgramSemanticInfo supportsSecureCoding]
  +[SCNProgramSemanticInfo infoWithSemantic:options:]

  // instance methods
  -[SCNProgramSemanticInfo dealloc]
  -[SCNProgramSemanticInfo options]
  -[SCNProgramSemanticInfo encodeWithCoder:]
  -[SCNProgramSemanticInfo initWithCoder:]
  -[SCNProgramSemanticInfo setOptions:]
  -[SCNProgramSemanticInfo semantic]
  -[SCNProgramSemanticInfo setSemantic:]


SCNProgram : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *vertexShader
 @property  NSString *fragmentShader
 @property  NSString *vertexFunctionName
 @property  NSString *fragmentFunctionName
 @property  BOOL opaque
 @property  <SCNProgramDelegate> *delegate
 @property  <MTLLibrary> *library

  // class methods
  +[SCNProgram supportsSecureCoding]
  +[SCNProgram program]
  +[SCNProgram programWithLibrary:]

  // instance methods
  -[SCNProgram init]
  -[SCNProgram dealloc]
  -[SCNProgram name]
  -[SCNProgram copyWithZone:]
  -[SCNProgram copy]
  -[SCNProgram encodeWithCoder:]
  -[SCNProgram initWithCoder:]
  -[SCNProgram delegate]
  -[SCNProgram setDelegate:]
  -[SCNProgram setName:]
  -[SCNProgram isOpaque]
  -[SCNProgram setOpaque:]
  -[SCNProgram library]
  -[SCNProgram setLibrary:]
  -[SCNProgram setVertexShader:]
  -[SCNProgram setFragmentShader:]
  -[SCNProgram setVertexFunctionName:]
  -[SCNProgram setFragmentFunctionName:]
  -[SCNProgram handleBindingOfBufferNamed:frequency:usingBlock:]
  -[SCNProgram setSemantic:forSymbol:options:]
  -[SCNProgram semanticForSymbol:]
  -[SCNProgram vertexShader]
  -[SCNProgram fragmentShader]
  -[SCNProgram vertexFunctionName]
  -[SCNProgram fragmentFunctionName]
  -[SCNProgram setSemanticInfos:]
  -[SCNProgram _customEncodingOfSCNProgram:]
  -[SCNProgram _customDecodingOfSCNProgram:]
  -[SCNProgram setSourceFile:]
  -[SCNProgram shadingLanguage]
  -[SCNProgram sourceFile]
  -[SCNProgram _optionsForSymbol:]
  -[SCNProgram _allSymbolsWithSceneKitSemantic]
  -[SCNProgram _bufferBindings]
  -[SCNProgram setSemantic:forSymbol:]


SCNShadableHelper : NSObject <NSSecureCoding>
 @property  NSDictionary *shaderModifiers
 @property  SCNProgram *program
 @property  id owner
 @property  NSArray *shaderModifiersArgumentsNames

  // class methods
  +[SCNShadableHelper supportsSecureCoding]

  // instance methods
  -[SCNShadableHelper dealloc]
  -[SCNShadableHelper encodeWithCoder:]
  -[SCNShadableHelper initWithCoder:]
  -[SCNShadableHelper initWithOwner:]
  -[SCNShadableHelper owner]
  -[SCNShadableHelper isOpaque]
  -[SCNShadableHelper _commonInit]
  -[SCNShadableHelper program]
  -[SCNShadableHelper setProgram:]
  -[SCNShadableHelper shaderModifiers]
  -[SCNShadableHelper __CFObject]
  -[SCNShadableHelper handleBindingOfSymbol:usingBlock:]
  -[SCNShadableHelper _technique]
  -[SCNShadableHelper ownerWillDie]
  -[SCNShadableHelper setShaderModifiers:]
  -[SCNShadableHelper copyModifiersFrom:]
  -[SCNShadableHelper shaderModifiersArgumentsNames]
  -[SCNShadableHelper handleUnbindingOfSymbol:usingBlock:]
  -[SCNShadableHelper _stopObservingProgram]
  -[SCNShadableHelper _programDidChange:]
  -[SCNShadableHelper _setC3DProgram]
  -[SCNShadableHelper _startObservingProgram]
  -[SCNShadableHelper _parseAndSetShaderModifier:]
  -[SCNShadableHelper shaderModifierCache]
  -[SCNShadableHelper _updateC3DProgramInputForSymbol:]
  -[SCNShadableHelper _programFromPassAtIndex:]
  -[SCNShadableHelper _updateC3DProgramInput:forSymbol:]
  -[SCNShadableHelper _updateAllC3DProgramInputs]
  -[SCNShadableHelper _setC3DProgramDelegate]
  -[SCNShadableHelper _customEncodingOfSCNShadableHelper:]
  -[SCNShadableHelper _customDecodingOfSCNShadableHelper:]
  -[SCNShadableHelper _didDecodeSCNShadableHelper:]
  -[SCNShadableHelper _bindValueForSymbol:atLocation:programID:node:renderer:]
  -[SCNShadableHelper _unbindValueForSymbol:atLocation:programID:node:renderer:]


_SCNShadableCompilationIssue : NSObject
 @property  <SCNShadable> *shadable
 @property  NSString *entryPoint
 @property  NSString *effectiveModifier
 @property  NSString *message
 @property  unsigned long type
 @property  long long line

  // class methods
  +[_SCNShadableCompilationIssue issueWithShadable:entryPoint:effectiveModifier:message:line:type:]

  // instance methods
  -[_SCNShadableCompilationIssue dealloc]
  -[_SCNShadableCompilationIssue type]
  -[_SCNShadableCompilationIssue message]
  -[_SCNShadableCompilationIssue line]
  -[_SCNShadableCompilationIssue shadable]
  -[_SCNShadableCompilationIssue entryPoint]
  -[_SCNShadableCompilationIssue effectiveModifier]


SCNText : SCNGeometry
 @property  double extrusionDepth
 @property  id string
 @property  UIFont *font
 @property  BOOL wrapped
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} containerFrame
 @property  NSString *truncationMode
 @property  NSString *alignmentMode
 @property  double chamferRadius
 @property  UIBezierPath *chamferProfile
 @property  double flatness

  // class methods
  +[SCNText supportsSecureCoding]
  +[SCNText text]
  +[SCNText textWithString:extrusionDepth:]

  // instance methods
  -[SCNText init]
  -[SCNText string]
  -[SCNText dealloc]
  -[SCNText copyWithZone:]
  -[SCNText copy]
  -[SCNText encodeWithCoder:]
  -[SCNText initWithCoder:]
  -[SCNText setString:]
  -[SCNText params]
  -[SCNText primitiveType]
  -[SCNText setFont:]
  -[SCNText font]
  -[SCNText setAlignmentMode:]
  -[SCNText flatness]
  -[SCNText setFlatness:]
  -[SCNText isWrapped]
  -[SCNText setWrapped:]
  -[SCNText truncationMode]
  -[SCNText setTruncationMode:]
  -[SCNText alignmentMode]
  -[SCNText setPrimitiveType:]
  -[SCNText getBoundingBoxMin:max:]
  -[SCNText presentationGeometry]
  -[SCNText getBoundingSphereCenter:radius:]
  -[SCNText __createCFObject]
  -[SCNText _syncObjCModel:]
  -[SCNText setChamferRadius:]
  -[SCNText chamferRadius]
  -[SCNText extrusionDepth]
  -[SCNText setExtrusionDepth:]
  -[SCNText chamferProfile]
  -[SCNText setChamferProfile:]
  -[SCNText containerFrame]
  -[SCNText setContainerFrame:]
  -[SCNText initPresentationTextGeometryWithTextGeometryRef:]
  -[SCNText initWithTextGeometryRef:]
  -[SCNText _customEncodingOfSCNText:]
  -[SCNText _customDecodingOfSCNText:]
  -[SCNText setDiscretizedStraightLineMaxLength:]
  -[SCNText set_wantsSeparateGeometryElements:]
  -[SCNText copyAnimationPathForKeyPath:animation:]
  -[SCNText _wantsSeparateGeometryElements]
  -[SCNText discretizedStraightLineMaxLength]


SCNShape : SCNGeometry
 @property  UIBezierPath *path
 @property  double extrusionDepth
 @property  long long chamferMode
 @property  double chamferRadius
 @property  UIBezierPath *chamferProfile

  // class methods
  +[SCNShape supportsSecureCoding]
  +[SCNShape shapeWithPath:extrusionDepth:]

  // instance methods
  -[SCNShape init]
  -[SCNShape dealloc]
  -[SCNShape copyWithZone:]
  -[SCNShape copy]
  -[SCNShape encodeWithCoder:]
  -[SCNShape initWithCoder:]
  -[SCNShape path]
  -[SCNShape setPath:]
  -[SCNShape params]
  -[SCNShape primitiveType]
  -[SCNShape setPrimitiveType:]
  -[SCNShape getBoundingBoxMin:max:]
  -[SCNShape copyAnimationChannelForKeyPath:animation:]
  -[SCNShape presentationGeometry]
  -[SCNShape getBoundingSphereCenter:radius:]
  -[SCNShape __createCFObject]
  -[SCNShape _syncObjCModel:]
  -[SCNShape setChamferRadius:]
  -[SCNShape chamferRadius]
  -[SCNShape extrusionDepth]
  -[SCNShape setExtrusionDepth:]
  -[SCNShape chamferMode]
  -[SCNShape setChamferMode:]
  -[SCNShape chamferProfile]
  -[SCNShape setChamferProfile:]
  -[SCNShape setDiscretizedStraightLineMaxLength:]
  -[SCNShape discretizedStraightLineMaxLength]
  -[SCNShape initPresentationShapeGeometryWithShapeGeometryRef:]
  -[SCNShape _customEncodingOfSCNShape:]
  -[SCNShape _customDecodingOfSCNShape:]
  -[SCNShape initWithShapeGeometryRef:]


SCNLevelOfDetail : NSObject <NSCopying, NSSecureCoding>
 @property  SCNGeometry *geometry
 @property  double screenSpaceRadius
 @property  double worldSpaceDistance

  // class methods
  +[SCNLevelOfDetail supportsSecureCoding]
  +[SCNLevelOfDetail levelOfDetailWithGeometry:screenSpaceRadius:]
  +[SCNLevelOfDetail levelOfDetailWithGeometry:worldSpaceDistance:]

  // instance methods
  -[SCNLevelOfDetail dealloc]
  -[SCNLevelOfDetail copyWithZone:]
  -[SCNLevelOfDetail copy]
  -[SCNLevelOfDetail encodeWithCoder:]
  -[SCNLevelOfDetail initWithCoder:]
  -[SCNLevelOfDetail geometry]
  -[SCNLevelOfDetail __CFObject]
  -[SCNLevelOfDetail thresholdMode]
  -[SCNLevelOfDetail thresholdValue]
  -[SCNLevelOfDetail screenSpaceRadius]
  -[SCNLevelOfDetail worldSpaceDistance]
  -[SCNLevelOfDetail _setupWithGeometry:thresholdMode:value:]
  -[SCNLevelOfDetail initWithGeometry:thresholdMode:lod:]
  -[SCNLevelOfDetail _customEncodingOfSCNLevelOfDetail:]
  -[SCNLevelOfDetail _didDecodeSCNLevelOfDetail:]
  -[SCNLevelOfDetail initWithGeometry:thresholdMode:thresholdValue:]


SCNMTLTessellator : NSObject
  // instance methods
  -[SCNMTLTessellator dealloc]
  -[SCNMTLTessellator update:]
  -[SCNMTLTessellator initWithGeometry:resourceManager:]
  -[SCNMTLTessellator pipelineStateHashForMeshElement:patchType:]
  -[SCNMTLTessellator newPipelineStateConfiguratorForMeshElement:patchType:device:]
  -[SCNMTLTessellator draw:]
  -[SCNMTLTessellator _pipelineStateHashForMeshElement:patchType:]
  -[SCNMTLTessellator updateUniformTessellator:]
  -[SCNMTLTessellator updateScreenSpaceAdaptiveTessellator:parameters:]
  -[SCNMTLTessellator updateConstrainedEdgeLengthTessellator:withMesh:computeCommandEncoder:]
  -[SCNMTLTessellator updateSubdivisionSurfaceTessellator:parameters:]
  -[SCNMTLTessellator uniformTessellationDrawMeshElement:forMesh:instanceCount:renderCommandEncoder:renderContext:]
  -[SCNMTLTessellator screenSpaceAdaptiveTessellationDrawMeshElement:forMesh:instanceCount:renderCommandEncoder:renderContext:]
  -[SCNMTLTessellator constrainedEdgeLengthTessellationDrawMeshElement:forMesh:instanceCount:renderCommandEncoder:renderContext:]
  -[SCNMTLTessellator subdivisionSurfaceTessellationDraw:]


MDLAsset(SCNModelIO)
	// class methods
	+[MDLAsset(SCNModelIO) assetWithSCNNode:]
	+[MDLAsset(SCNModelIO) assetWithSCNNode:bufferAllocator:]
	+[MDLAsset(SCNModelIO) assetWithSCNScene:]
	+[MDLAsset(SCNModelIO) assetWithSCNScene:bufferAllocator:]

MDLObject(SCNModelIO)
	// class methods
	+[MDLObject(SCNModelIO) objectWithSCNNode:]
	+[MDLObject(SCNModelIO) objectWithSCNNode:bufferAllocator:]

	// instance methods
	-[MDLObject(SCNModelIO) _updateAssociatedSCNNodeWithGeometrySetter:texturePathProvider:vertexAttributeNamed:materialPropertyNamed:]
	-[MDLObject(SCNModelIO) _associatedSCNNode]

MDLMesh(SCNModelIO)
	// class methods
	+[MDLMesh(SCNModelIO) meshWithSCNGeometry:bufferAllocator:]
	+[MDLMesh(SCNModelIO) meshWithSCNGeometry:]

MDLSubmesh(SCNModelIO)
	// class methods
	+[MDLSubmesh(SCNModelIO) submeshWithSCNGeometryElement:bufferAllocator:positionSourceChannel:]
	+[MDLSubmesh(SCNModelIO) submeshWithUniquedIndexData:andSCNGeometryElement:bufferAllocator:]
	+[MDLSubmesh(SCNModelIO) newSubmeshWithSCNGeometryElement:bufferAllocator:]
	+[MDLSubmesh(SCNModelIO) newSubmeshWithSCNGeometryElement:bufferAllocator:positionSourceChannel:]
	+[MDLSubmesh(SCNModelIO) newSubmeshWithUniquedIndexData:andSCNGeometryElement:bufferAllocator:]
	+[MDLSubmesh(SCNModelIO) newSubmeshWithGeometryData:indexBufferLength:interleaved:channelCount:channelIdx:bytesPerIndex:indexType:geometryType:allocator:indexCount:topology:]
	+[MDLSubmesh(SCNModelIO) submeshWithSCNGeometryElement:]
	+[MDLSubmesh(SCNModelIO) submeshWithSCNGeometryElement:bufferAllocator:]

MDLMaterial(SCNModelIO)
	// class methods
	+[MDLMaterial(SCNModelIO) materialWithSCNMaterial:]

MDLLightProbe(SCNModelIO)
	// class methods
	+[MDLLightProbe(SCNModelIO) lightProbeWithSCNLight:node:]

MDLLight(SCNModelIO)
	// class methods
	+[MDLLight(SCNModelIO) lightWithSCNLight:]

MDLCamera(SCNModelIO)
	// class methods
	+[MDLCamera(SCNModelIO) cameraWithSCNCamera:]

NSDictionary(SCNExtensions)
	// instance methods
	-[NSDictionary(SCNExtensions) SCN_safeHash]
	-[NSDictionary(SCNExtensions) SCNVector3Value]
	-[NSDictionary(SCNExtensions) SCNMatrix4Value]
	-[NSDictionary(SCNExtensions) SCNVector4Value]
	-[NSDictionary(SCNExtensions) SCNMutableDeepCopy]

NSString(SCNExtensions)
	// instance methods
	-[NSString(SCNExtensions) SCN_safeHash]
	-[NSString(SCNExtensions) scn_stringByReplacingCharactersInRanges:withStrings:]

NSData(SCNExtensions)
	// instance methods
	-[NSData(SCNExtensions) _operateOnDataUsingCompressionAlgorithm:operation:]
	-[NSData(SCNExtensions) scn_compressedDataUsingCompressionAlgorithm:]
	-[NSData(SCNExtensions) scn_uncompressedDataUsingCompressionAlgorithm:]
	-[NSData(SCNExtensions) scn_indexedDataEncodingHighWatermarkWithBytesPerIndex:]
	-[NSData(SCNExtensions) scn_indexedDataDecodingHighWatermarkWithBytesPerIndex:]
	-[NSData(SCNExtensions) scn_indexedDataEncodingDeltaWithBytesPerIndex:]
	-[NSData(SCNExtensions) scn_indexedDataDecodingDeltaWithBytesPerIndex:]
	-[NSData(SCNExtensions) scn_indexedDataEncodingTrianglePairsWithBytesPerIndex:]
	-[NSData(SCNExtensions) scn_indexedDataDecodingTrianglePairsWithBytesPerIndex:]

NSObject(SCN_DisplayLinkExtensions)
	// instance methods
	-[NSObject(SCN_DisplayLinkExtensions) SCN_setupDisplayLinkWithQueue:]

UIColor(SCNAdditions)
	// class methods
	+[UIColor(SCNAdditions) scn_colorWithC3DColor:]
	+[UIColor(SCNAdditions) color::::]

	// instance methods
	-[UIColor(SCNAdditions) g]
	-[UIColor(SCNAdditions) r]
	-[UIColor(SCNAdditions) b]
	-[UIColor(SCNAdditions) a]
	-[UIColor(SCNAdditions) scn_C3DColorIgnoringColorSpace:success:]

NSArray(SCNAdditions)
	// class methods
	+[NSArray(SCNAdditions) SCN_arrayWithSimdMatrix4:]

	// instance methods
	-[NSArray(SCNAdditions) SCN_simdMatrix4Value]
	-[NSArray(SCNAdditions) SCNMutableDeepCopy]

NSValue(Core3DKitAdditions)
	// class methods
	+[NSValue(Core3DKitAdditions) valueWithSCNMatrix4:]
	+[NSValue(Core3DKitAdditions) valueWithSCNVector3:]
	+[NSValue(Core3DKitAdditions) valueWithSCNVector4:]
	+[NSValue(Core3DKitAdditions) SCN_valueWithCGPoint:]
	+[NSValue(Core3DKitAdditions) SCN_valueWithSimdMatrix4:]

	// instance methods
	-[NSValue(Core3DKitAdditions) SCNVector3Value]
	-[NSValue(Core3DKitAdditions) SCNMatrix4Value]
	-[NSValue(Core3DKitAdditions) SCN_simdMatrix4Value]
	-[NSValue(Core3DKitAdditions) SCNVector4Value]
	-[NSValue(Core3DKitAdditions) SCN_CGPointValue]

CAAnimation(SceneKitAdditions)
	// class methods
	+[CAAnimation(SceneKitAdditions) animationWithSCNAnimation:]

	// instance methods
	-[CAAnimation(SceneKitAdditions) setFadeInDuration:]
	-[CAAnimation(SceneKitAdditions) setFadeOutDuration:]
	-[CAAnimation(SceneKitAdditions) fadeInDuration]
	-[CAAnimation(SceneKitAdditions) fadeOutDuration]
	-[CAAnimation(SceneKitAdditions) setUsesSceneTimeBase:]
	-[CAAnimation(SceneKitAdditions) usesSceneTimeBase]
	-[CAAnimation(SceneKitAdditions) setCommitsOnCompletion:]
	-[CAAnimation(SceneKitAdditions) commitsOnCompletion]
	-[CAAnimation(SceneKitAdditions) setAnimationEvents:]
	-[CAAnimation(SceneKitAdditions) animationEvents]

CAKeyframeAnimation(SCNAddition)
	// instance methods
	-[CAKeyframeAnimation(SCNAddition) SCN_evaluateAtTime:reverse:to:]

CALayer(SCN_JSSupport)
	// class methods
	+[CALayer(SCN_JSSupport) SCNJSExportProtocol]

01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriter 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInput 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInputPixelBufferAdaptor 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioEngine 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioEnvironmentNode 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioFile 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioFormat 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioPCMBuffer 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioPlayerNode 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoDataOutput 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItemVideoOutput 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimation 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAEAGLLayer 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMetalLayer 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAPropertyAnimation 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CARenderer 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 1100 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 1100 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIFilter 
01 00 1100 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 1100 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIVector 
01 00 0400 /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI: CUICatalog 
01 00 1700 /System/Library/Frameworks/OpenGLES.framework/OpenGLES: EAGLContext 
01 00 1800 /System/Library/Frameworks/GLKit.framework/GLKit: GLKTextureLoader 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLAnimationBindComponent 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLAsset 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLCamera 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLLight 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLLightProbe 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLMaterial 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLMaterialProperty 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLMesh 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLMeshBufferAllocatorDefault 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLMeshBufferData 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLObject 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLPackedJointAnimation 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLPhysicallyPlausibleLight 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLPhysicallyPlausibleScatteringFunction 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLSkeleton 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLSkyCubeTexture 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLSubmesh 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLSubmeshTopology 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLTexture 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLTextureSampler 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLTransform 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLTransformStack 
01 00 0200 /System/Library/Frameworks/ModelIO.framework/ModelIO: MDLVertexDescriptor 
01 00 1900 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageGaussianBlur 
01 00 0600 /System/Library/Frameworks/MetalKit.framework/MetalKit: MTKTextureLoader 
01 00 0700 /System/Library/Frameworks/Metal.framework/Metal: MTLCompileOptions 
01 00 0700 /System/Library/Frameworks/Metal.framework/Metal: MTLComputePipelineDescriptor 
01 00 0700 /System/Library/Frameworks/Metal.framework/Metal: MTLDepthStencilDescriptor 
01 00 0700 /System/Library/Frameworks/Metal.framework/Metal: MTLFunctionConstantValues 
01 00 0700 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPassDescriptor 
01 00 0700 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPipelineDescriptor 
01 00 0700 /System/Library/Frameworks/Metal.framework/Metal: MTLSamplerDescriptor 
01 00 0700 /System/Library/Frameworks/Metal.framework/Metal: MTLStageInputOutputDescriptor 
01 00 0700 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 0700 /System/Library/Frameworks/Metal.framework/Metal: MTLVertexDescriptor 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSByteCountFormatter 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1e00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusSystem 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIRotationGestureRecognizer 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFocusItemRegion 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFocusRegion 
