|| __DATA.__objc_data _OBJC_CLASS_$_LPAppLinkPresentationProperties
|| __DATA.__objc_data _OBJC_CLASS_$_LPAppStoreStoryMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPAppleMusicTVShowMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPAppleNewsMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPApplePhotosMomentMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPApplePhotosStatusMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPAppleTVMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPArtworkMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPAssociatedApplicationMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPAudio
|| __DATA.__objc_data _OBJC_CLASS_$_LPAudioMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPAudioProperties
|| __DATA.__objc_data _OBJC_CLASS_$_LPBusinessChatMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPCaptionButtonPresentationProperties
|| __DATA.__objc_data _OBJC_CLASS_$_LPEvent
|| __DATA.__objc_data _OBJC_CLASS_$_LPEventTimeline
|| __DATA.__objc_data _OBJC_CLASS_$_LPFileMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPGameCenterInvitationMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPImageAttachmentSubstitute
|| __DATA.__objc_data _OBJC_CLASS_$_LPImagePresentationProperties
|| __DATA.__objc_data _OBJC_CLASS_$_LPInlineMediaPlaybackInformation
|| __DATA.__objc_data _OBJC_CLASS_$_LPLinkHTMLGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_LPLinkHTMLTextGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_LPLinkMetadataPreviewTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_LPLinkMetadataStatusTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_LPLinkMetadataStoreTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_LPMapCollectionMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPMapCollectionPublisherMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPMapMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPMessagesPayload
|| __DATA.__objc_data _OBJC_CLASS_$_LPMetadataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_LPMultipleMetadataPresentationTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_LPSharingMetadataWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_LPSharingStatusMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPSpecializationMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPStreamingAudioPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_LPSummarizedLinkMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPVideo
|| __DATA.__objc_data _OBJC_CLASS_$_LPVideoAttachmentSubstitute
|| __DATA.__objc_data _OBJC_CLASS_$_LPVideoMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPVideoProperties
|| __DATA.__objc_data _OBJC_CLASS_$_LPWalletPassMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPYouTubePlayerView
|| __DATA.__objc_data _OBJC_CLASS_$_LPYouTubeURLComponents
|| __DATA.__objc_data _OBJC_CLASS_$_LPiCloudFamilyInvitationMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiCloudSharingMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaAlbumMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaArtistMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaAudioBookMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaBookMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaMovieBundleMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaMovieMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaMusicVideoMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaPlaylistMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaPodcastEpisodeMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaPodcastMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaRadioMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaSoftwareMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaSongMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaTVEpisodeMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesMediaTVSeasonMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_LPiTunesUserProfileMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPAppLinkPresentationProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_LPAppStoreStoryMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPAppleMusicTVShowMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPAppleNewsMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPApplePhotosMomentMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPApplePhotosStatusMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPAppleTVMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPArtworkMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPAssociatedApplicationMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPAudio
|| __DATA.__objc_data _OBJC_METACLASS_$_LPAudioMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPAudioProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_LPBusinessChatMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPCaptionButtonPresentationProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_LPEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_LPEventTimeline
|| __DATA.__objc_data _OBJC_METACLASS_$_LPFileMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPGameCenterInvitationMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPImageAttachmentSubstitute
|| __DATA.__objc_data _OBJC_METACLASS_$_LPImagePresentationProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_LPInlineMediaPlaybackInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_LPLinkHTMLGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_LPLinkHTMLTextGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_LPLinkMetadataPreviewTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_LPLinkMetadataStatusTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_LPLinkMetadataStoreTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_LPMapCollectionMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPMapCollectionPublisherMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPMapMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPMessagesPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_LPMetadataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_LPMultipleMetadataPresentationTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_LPSharingMetadataWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_LPSharingStatusMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPSpecializationMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPStreamingAudioPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_LPSummarizedLinkMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPVideo
|| __DATA.__objc_data _OBJC_METACLASS_$_LPVideoAttachmentSubstitute
|| __DATA.__objc_data _OBJC_METACLASS_$_LPVideoMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPVideoProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_LPWalletPassMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPYouTubePlayerView
|| __DATA.__objc_data _OBJC_METACLASS_$_LPYouTubeURLComponents
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiCloudFamilyInvitationMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiCloudSharingMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaAlbumMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaArtistMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaAudioBookMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaBookMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaMovieBundleMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaMovieMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaMusicVideoMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaPlaylistMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaPodcastEpisodeMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaPodcastMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaRadioMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaSoftwareMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaSongMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaTVEpisodeMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesMediaTVSeasonMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_LPiTunesUserProfileMetadata
|| __DATA_CONST.__const _LPErrorDomain
|| __DATA_CONST.__const _LPYouTubePlayerErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPCaptionBarPresentationProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPCaptionPresentationProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPCaptionRowPresentationProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPIconMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPImageMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPImageProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPLinkMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPLinkMetadataObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPLinkMetadataPresentationTransformer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPLinkView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPMIMETypeRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPPresentationSpecializations
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPTestingOverrides
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LPWebLinkPresentationProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPCaptionBarPresentationProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPCaptionPresentationProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPCaptionRowPresentationProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPIconMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPImageMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPImageProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPLinkMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPLinkMetadataObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPLinkMetadataPresentationTransformer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPLinkView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPMIMETypeRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPPresentationSpecializations
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPTestingOverrides
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LPWebLinkPresentationProperties
|| __TEXT.__text _LPLogChannelFetching
|| __TEXT.__text _LPLogChannelPlugin
|| __TEXT.__text _LPLogChannelSerialization
|| __TEXT.__text _LPLogChannelTranscoding
|| __TEXT.__text _LPLogChannelUI
|| __TEXT.__text _LPLogChannelVideo
__ AVFoundation: _AVAssetMediaServicesWereResetNotification
__ AVFoundation: _AVAudioSessionCategoryAmbient
__ AVFoundation: _AVAudioSessionCategoryPlayback
__ AVFoundation: _AVFileTypeMPEG4
__ AVFoundation: _AVLayerVideoGravityResizeAspectFill
__ AVFoundation: _AVMediaCharacteristicAudible
__ AVFoundation: _AVMediaCharacteristicVisual
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVPlayerWaitingToMinimizeStallsReason
__ AVFoundation: _AVURLAssetReferenceRestrictionsKey
__ AVFoundation: _AVURLAssetUseClientURLLoadingExclusively
__ AVFoundation: _AVVideoAverageBitRateKey
__ AVFoundation: _AVVideoCodecKey
__ AVFoundation: _AVVideoCodecTypeH264
__ AVFoundation: _AVVideoCompressionPropertiesKey
__ AVFoundation: _AVVideoHeightKey
__ AVFoundation: _AVVideoWidthKey
__ AVFoundation: _OBJC_CLASS_$_AVAssetImageGenerator
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriter
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInput
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInputPixelBufferAdaptor
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLooper
__ AVFoundation: _OBJC_CLASS_$_AVQueuePlayer
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVKit: _OBJC_CLASS_$_AVPlayerController
__ AVKit: _OBJC_CLASS_$_AVPlayerViewController
__ AVKit: _OBJC_CLASS_$___AVPlayerLayerView
__ AVKit: _OBJC_METACLASS_$_AVPlayerViewController
__ Accelerate: _vImageBuffer_Init
__ Accelerate: _vImageBuffer_InitWithCGImage
__ Accelerate: _vImageCGImageFormat_IsEqual
__ Accelerate: _vImageConvert_AnyToAny
__ Accelerate: _vImageConverter_CreateWithCGImageFormat
__ Accelerate: _vImageConverter_MustOperateOutOfPlace
__ Accelerate: _vImageConverter_Release
__ Accelerate: _vImageHistogramCalculation_ARGB8888
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AppleMediaServices: _AMSAccountMediaTypeAppStore
__ AppleMediaServices: _AMSLookupKeyProfileProduct
__ AppleMediaServices: _OBJC_CLASS_$_AMSBag
__ AppleMediaServices: _OBJC_CLASS_$_AMSBagKeySet
__ AppleMediaServices: _OBJC_CLASS_$_AMSLookup
__ AppleMediaServices: _OBJC_CLASS_$_AMSProcessInfo
__ AppleMediaServices: _OBJC_METACLASS_$_AMSLookup
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Celestial: _AVSystemController_AudioVolumeChangeReasonNotificationParameter
__ Celestial: _AVSystemController_SystemVolumeDidChangeNotification
__ CloudKit: _CKShareThumbnailImageDataKey
__ CloudKit: _CKShareTitleKey
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKFetchWhitelistedBundleIDsOperation
__ CloudKit: _kCKAllowMasqueradingEntitlementKey
__ CloudKit: _kCKCloudServicesCloudKitServiceEntitlementKey
__ CloudKit: _kCKCloudServicesEntitlementKey
__ Contacts: _OBJC_CLASS_$_CNMutablePostalAddress
__ Contacts: _OBJC_CLASS_$_CNPostalAddress
__ Contacts: _OBJC_CLASS_$_CNPostalAddressFormatter
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSURLCreationDateKey
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _NSURLHasHiddenExtensionKey
__ CoreFoundation: _NSURLLocalizedNameKey
__ CoreFoundation: _NSURLTypeIdentifierKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceSupportsOutput
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawImageFromRect
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGFloatIsValid
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDecode
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetRenderingIntent
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageHasAlpha
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPathCreateWithEllipseInRect
__ CoreGraphics: _CGPathCreateWithRect
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreLocation: _CLLocationCoordinate2DIsValid
__ CoreLocation: _CLLocationCoordinate2DMake
__ CoreLocation: _OBJC_CLASS_$_CLGeocoder
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _kCLLocationAccuracyBest
__ CoreLocation: _kCLLocationCoordinate2DInvalid
__ CoreMedia: _CMTimeAbsoluteValue
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeMinimum
__ CoreMedia: _CMTimeRangeGetEnd
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _kCMTimeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _UTTypeCopyDescription
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTagClassMIMEType
__ CoreServices: _kUTTypeFolder
__ CoreServices: _kUTTypeImage
__ CoreServices: _kUTTypePlainText
__ CoreServices: _kUTTypeVCard
__ CoreText: _CTFontCreateWithFontDescriptorAndOptions
__ CoreText: _CTFontDescriptorCopyAttribute
__ CoreText: _CTFontDescriptorCreateWithTextStyle
__ CoreText: _CTFontGetSize
__ CoreText: _kCTFontCSSWeightAttribute
__ CoreText: _kCTFontContentSizeCategoryL
__ CoreText: _kCTUIFontTextStyleCaption1
__ CoreVideo: _CVBufferRelease
__ CoreVideo: _CVPixelBufferGetBaseAddress
__ CoreVideo: _CVPixelBufferGetBytesPerRow
__ CoreVideo: _CVPixelBufferLockBaseAddress
__ CoreVideo: _CVPixelBufferPoolCreatePixelBuffer
__ CoreVideo: _CVPixelBufferRelease
__ CoreVideo: _CVPixelBufferUnlockBaseAddress
__ CoreVideo: _kCVPixelBufferCGBitmapContextCompatibilityKey
__ CoreVideo: _kCVPixelBufferPixelFormatTypeKey
__ Foundation: _NSClassFromString
__ Foundation: _NSHomeDirectory
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSByteCountFormatter
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSListFormatter
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ IconServices: _OBJC_CLASS_$_ISIcon
__ IconServices: _OBJC_CLASS_$_ISImage
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCopyTypeIdentifiers
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateThumbnailAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _kCGImagePropertyAPNGDelayTime
__ ImageIO: _kCGImagePropertyGIFDelayTime
__ ImageIO: _kCGImagePropertyGIFDictionary
__ ImageIO: _kCGImagePropertyPNGDictionary
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImageSourceCreateThumbnailFromImageAlways
__ ImageIO: _kCGImageSourceCreateThumbnailWithTransform
__ ImageIO: _kCGImageSourceShouldCache
__ ImageIO: _kCGImageSourceSkipMetadata
__ ImageIO: _kCGImageSourceSubsampleFactor
__ ImageIO: _kCGImageSourceThumbnailMaxPixelSize
__ ImageIO: _kCGImageSourceUseHardwareAcceleration
__ MediaRemote: _MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID
__ MediaRemote: _MRMediaRemoteSendCommand
__ MediaRemote: _MRMediaRemoteSetAppPlaybackQueue
__ MediaRemote: _MRSystemAppPlaybackQueueCreate
__ MediaRemote: _MRSystemAppPlaybackQueueSetGenericTrackIdentifiers
__ MediaRemote: _MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback
__ MediaRemote: _MRSystemAppPlaybackQueueSetLocalQueryFirstItemPID
__ MediaRemote: _MRSystemAppPlaybackQueueSetRadioStationIDType
__ MediaRemote: _MRSystemAppPlaybackQueueSetRadioStationStringIdentifier
__ MediaRemote: _MRSystemAppPlaybackQueueSetShouldOverrideManuallyCuratedQueue
__ MediaRemote: _MRSystemAppPlaybackQueueSetTracklistStoreIDs
__ MediaRemote: _kMRMediaRemoteOptionRemoteControlInterfaceIdentifier
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DMakeAffineTransform
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _OBJC_CLASS_$_CAAnimation
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATextLayer
__ QuartzCore: _kCACornerCurveCircular
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFillModeBackwards
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCALineCapRound
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailGenerationRequest
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailGenerator
__ SoftLinking: __sl_dlopen_audited
__ TCC: _TCCAccessPreflight
__ TCC: _kTCCServiceMediaLibrary
__ TCC: _kTCCServicePhotos
__ UIKit: _NSAttachmentAttributeName
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSDataAsset
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIContextMenuInteraction
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDocumentInteractionController
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageAsset
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIVibrancyEffect
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIAccessibilityDarkerSystemColorsStatusDidChangeNotification
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityReduceMotionStatusDidChangeNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorTraitsAttribute
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleFootnote2
__ UIKit: _UIFontTextStyleSubhead
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIFontWeightThin
__ UIKit: _UIFontWeightTrait
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIImageSymbolWeightForFontWeight
__ URLFormatting: _OBJC_CLASS_$_URLFormattingTestingOverrides
__ WebKit: _OBJC_CLASS_$_WKProcessPool
__ WebKit: _OBJC_CLASS_$_WKUserContentController
__ WebKit: _OBJC_CLASS_$_WKUserScript
__ WebKit: _OBJC_CLASS_$_WKWebView
__ WebKit: _OBJC_CLASS_$_WKWebViewConfiguration
__ WebKit: _OBJC_CLASS_$_WKWebsiteDataStore
__ WebKit: _OBJC_CLASS_$_WebView
__ WebKit: _OBJC_CLASS_$__WKProcessPoolConfiguration
__ WebKit: _OBJC_CLASS_$__WKWebsiteDataStoreConfiguration
__ WebKit: _WebKitInitialize
__ WebKit: _WebThreadLock
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _container_create_or_lookup_app_group_paths_for_current_user
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _xpc_copy_entitlement_for_self
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
LPActionDisablingCALayerDelegate : NSObject /usr/lib/libc++.1.dylib <CALayerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPActionDisablingCALayerDelegate shared]

  // instance methods
  -[LPActionDisablingCALayerDelegate actionForLayer:forKey:]


LPHTMLComponent : NSObject /usr/lib/libc++.1.dylib
 @property  LPLinkHTMLGenerator *generator
 @property  DOMElement *element
 @property  NSString *themePath

  // class methods
  +[LPHTMLComponent styleSet]
  +[LPHTMLComponent ruleDictionaryForStyle:]
  +[LPHTMLComponent ruleDictionaryForStyleWithDarkInterface:]
  +[LPHTMLComponent additionalGlobalOutOfLineStyleDeclarations]

  // instance methods
  -[LPHTMLComponent generator]
  -[LPHTMLComponent addChild:]
  -[LPHTMLComponent .cxx_destruct]
  -[LPHTMLComponent themePath]
  -[LPHTMLComponent element]
  -[LPHTMLComponent initWithTagName:themePath:generator:]
  -[LPHTMLComponent childThemePathWithName:]


LPCSSVariable : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *name
 @property  BOOL important

  // instance methods
  -[LPCSSVariable initWithName:]
  -[LPCSSVariable isImportant]
  -[LPCSSVariable .cxx_destruct]
  -[LPCSSVariable name]
  -[LPCSSVariable initWithName:important:]
  -[LPCSSVariable variableByResolvingWithThemePath:]


LPCSSResolver : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableDictionary *localVariables
 @property  NSMutableSet *pendingVariables
 @property  LPTheme *theme
 @property  BOOL useCSSVariables
 @property  BOOL useInlineStyles
 @property  BOOL useVariablesWhenUsingInlineStyles
 @property  BOOL includeClassNamesWhenUsingInlineStyles
 @property  BOOL includeDarkInterfaceInlineStyles
 @property  BOOL generateEmailCompatibleMarkup

  // instance methods
  -[LPCSSResolver components]
  -[LPCSSResolver .cxx_destruct]
  -[LPCSSResolver theme]
  -[LPCSSResolver useCSSVariables]
  -[LPCSSResolver resolveCSSValue:]
  -[LPCSSResolver enumerateResolvedRulesFromRuleDictionary:withBlock:]
  -[LPCSSResolver buildCSSDeclarationsFromRuleDictionary:withPrefix:suffix:spacer:forBuffer:]
  -[LPCSSResolver buildPendingVariableSetForRuleDictionary:]
  -[LPCSSResolver ruleDictionaryForStyle:forComponentClass:withDarkInterface:]
  -[LPCSSResolver buildInlineStyleForRuleDictionary:]
  -[LPCSSResolver initWithTheme:]
  -[LPCSSResolver buildStyleSheet]
  -[LPCSSResolver addStyle:toElement:inComponent:]
  -[LPCSSResolver setStyle:toElement:inComponent:]
  -[LPCSSResolver registerAlternateStyle:inComponent:]
  -[LPCSSResolver localVariablesAsCSSVariables]
  -[LPCSSResolver themeVariablesAsCSSVariables]
  -[LPCSSResolver localVariables]
  -[LPCSSResolver pendingVariables]
  -[LPCSSResolver useInlineStyles]
  -[LPCSSResolver setUseInlineStyles:]
  -[LPCSSResolver useVariablesWhenUsingInlineStyles]
  -[LPCSSResolver setUseVariablesWhenUsingInlineStyles:]
  -[LPCSSResolver includeClassNamesWhenUsingInlineStyles]
  -[LPCSSResolver setIncludeClassNamesWhenUsingInlineStyles:]
  -[LPCSSResolver includeDarkInterfaceInlineStyles]
  -[LPCSSResolver setIncludeDarkInterfaceInlineStyles:]
  -[LPCSSResolver generateEmailCompatibleMarkup]
  -[LPCSSResolver setGenerateEmailCompatibleMarkup:]


LPMediaAssetFetcher : LPFetcher <NSURLSessionDataDelegate>
 @property  NSURL *URL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPMediaAssetFetcher URLSession:dataTask:didReceiveData:]
  -[LPMediaAssetFetcher .cxx_destruct]
  -[LPMediaAssetFetcher stopLoading]
  -[LPMediaAssetFetcher URLSession:task:didCompleteWithError:]
  -[LPMediaAssetFetcher URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[LPMediaAssetFetcher cancel]
  -[LPMediaAssetFetcher URL]
  -[LPMediaAssetFetcher setURL:]
  -[LPMediaAssetFetcher _resolveVideo]
  -[LPMediaAssetFetcher _completedWithVideo:]
  -[LPMediaAssetFetcher videoProperties]
  -[LPMediaAssetFetcher audioProperties]
  -[LPMediaAssetFetcher _completedWithAudio:]
  -[LPMediaAssetFetcher fetchWithConfiguration:completionHandler:]


LPFetcherVideoResponse : LPFetcherResponse
 @property  LPVideo *video

  // class methods
  +[LPFetcherVideoResponse videoPropertiesForFetcher:]

  // instance methods
  -[LPFetcherVideoResponse .cxx_destruct]
  -[LPFetcherVideoResponse video]
  -[LPFetcherVideoResponse initWithVideo:fetcher:]


LPFetcherAudioResponse : LPFetcherResponse
 @property  LPAudio *audio

  // class methods
  +[LPFetcherAudioResponse audioPropertiesForFetcher:]

  // instance methods
  -[LPFetcherAudioResponse audio]
  -[LPFetcherAudioResponse .cxx_destruct]
  -[LPFetcherAudioResponse initWithAudio:fetcher:]


LPLinkMetadataPreviewTransformer : NSObject /usr/lib/libc++.1.dylib
 @property  LPLinkMetadata *metadata
 @property  NSURL *URL
 @property  NSString *previewSummary
 @property  LPImage *previewImage

  // instance methods
  -[LPLinkMetadataPreviewTransformer previewSummary]
  -[LPLinkMetadataPreviewTransformer .cxx_destruct]
  -[LPLinkMetadataPreviewTransformer previewImage]
  -[LPLinkMetadataPreviewTransformer URL]
  -[LPLinkMetadataPreviewTransformer metadata]
  -[LPLinkMetadataPreviewTransformer initWithMetadata:URL:]


LPInlineMediaPlaybackInformation : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long type
 @property  NSString *storeIdentifier
 @property  NSString *storefrontIdentifier
 @property  NSArray *offers
 @property  BOOL isAvailableForAnonymousDownload
 @property  NSURL *previewURL
 @property  NSString *persistentIdentifier
 @property  LPAudio *audio

  // instance methods
  -[LPInlineMediaPlaybackInformation storeIdentifier]
  -[LPInlineMediaPlaybackInformation setStorefrontIdentifier:]
  -[LPInlineMediaPlaybackInformation storefrontIdentifier]
  -[LPInlineMediaPlaybackInformation audio]
  -[LPInlineMediaPlaybackInformation setPreviewURL:]
  -[LPInlineMediaPlaybackInformation setPersistentIdentifier:]
  -[LPInlineMediaPlaybackInformation initWithType:]
  -[LPInlineMediaPlaybackInformation .cxx_destruct]
  -[LPInlineMediaPlaybackInformation offers]
  -[LPInlineMediaPlaybackInformation setOffers:]
  -[LPInlineMediaPlaybackInformation previewURL]
  -[LPInlineMediaPlaybackInformation persistentIdentifier]
  -[LPInlineMediaPlaybackInformation type]
  -[LPInlineMediaPlaybackInformation setAudio:]
  -[LPInlineMediaPlaybackInformation setStoreIdentifier:]
  -[LPInlineMediaPlaybackInformation availability]
  -[LPInlineMediaPlaybackInformation isAvailableForAnonymousDownload]


LPEmailCompatibleHTMLCaptionBarComponent : LPHTMLComponent
  // class methods
  +[LPEmailCompatibleHTMLCaptionBarComponent styleSet]
  +[LPEmailCompatibleHTMLCaptionBarComponent baseRules]
  +[LPEmailCompatibleHTMLCaptionBarComponent ruleDictionaryForStyle:]
  +[LPEmailCompatibleHTMLCaptionBarComponent ruleDictionaryForStyleWithDarkInterface:]

  // instance methods
  -[LPEmailCompatibleHTMLCaptionBarComponent .cxx_destruct]
  -[LPEmailCompatibleHTMLCaptionBarComponent buildComponents]
  -[LPEmailCompatibleHTMLCaptionBarComponent initWithStyle:presentationProperties:themePath:generator:]


LPStreamingVideoView : LPVideoView
  // instance methods
  -[LPStreamingVideoView setPlaying:]
  -[LPStreamingVideoView setMuted:]
  -[LPStreamingVideoView volume]
  -[LPStreamingVideoView setVolume:]
  -[LPStreamingVideoView dealloc]
  -[LPStreamingVideoView isMuted]
  -[LPStreamingVideoView .cxx_destruct]
  -[LPStreamingVideoView observeValueForKeyPath:ofObject:change:context:]
  -[LPStreamingVideoView shouldAutoPlay]
  -[LPStreamingVideoView destroyPlayer]
  -[LPStreamingVideoView initWithVideo:style:posterFrame:posterFrameStyle:configuration:]
  -[LPStreamingVideoView createPlayerItemAdjustedForLoopingWithAsset:completionHandler:]
  -[LPStreamingVideoView resetToPlaceholderView]
  -[LPStreamingVideoView didFailToPlay]
  -[LPStreamingVideoView createPlayerIfNeeded]
  -[LPStreamingVideoView layoutComponentView]
  -[LPStreamingVideoView fullScreenVideoDidPresent]
  -[LPStreamingVideoView fullScreenVideoWillDismiss]
  -[LPStreamingVideoView beginLoadingMediaForPreroll]
  -[LPStreamingVideoView releaseDecodingResourcesIfInactive]
  -[LPStreamingVideoView usesSharedAudioSession]
  -[LPStreamingVideoView shouldShowMuteButton]
  -[LPStreamingVideoView createFullScreenVideoViewController]
  -[LPStreamingVideoView usesCustomFullScreenImplementation]
  -[LPStreamingVideoView createVideoPlayerView]
  -[LPStreamingVideoView prepareForDisplayWithCompletionHandler:]


LPStreamingMediaMetadataProviderSpecialization : LPMetadataProviderSpecialization
  // class methods
  +[LPStreamingMediaMetadataProviderSpecialization specialization]
  +[LPStreamingMediaMetadataProviderSpecialization specializedMetadataProviderForResourceWithContext:]

  // instance methods
  -[LPStreamingMediaMetadataProviderSpecialization fail]
  -[LPStreamingMediaMetadataProviderSpecialization .cxx_destruct]
  -[LPStreamingMediaMetadataProviderSpecialization cancel]
  -[LPStreamingMediaMetadataProviderSpecialization done]
  -[LPStreamingMediaMetadataProviderSpecialization start]


LPImageProperties : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *accessibilityText
 @property  long long type
 @property  UIColor *overlaidTextColor

  // instance methods
  -[LPImageProperties copyWithZone:]
  -[LPImageProperties setType:]
  -[LPImageProperties .cxx_destruct]
  -[LPImageProperties accessibilityText]
  -[LPImageProperties type]
  -[LPImageProperties isEqual:]
  -[LPImageProperties setAccessibilityText:]
  -[LPImageProperties overlaidTextColor]
  -[LPImageProperties setOverlaidTextColor:]


LPImage : NSObject /usr/lib/libc++.1.dylib <LPAsynchronousResource, NSSecureCoding>
 @property  UIImage *platformImage
 @property  unsigned long _encodedSize
 @property  {CGSize=dd} _pixelSize
 @property  BOOL _isImperceptible
 @property  BOOL _hasTransparency
 @property  BOOL _animated
 @property  BOOL _fallbackIcon
 @property  NSArray *_remoteURLsForEmailCompatibleOutput
 @property  NSString *_srcsetForRemoteURLs
 @property  @? _alternateHTMLImageGenerator
 @property  NSItemProvider *_itemProvider
 @property  LPImage *_darkInterfaceAlternativeImage
 @property  NSURL *fileURL
 @property  NSData *data
 @property  NSString *MIMEType
 @property  LPImageProperties *properties
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPImage supportsSecureCoding]
  +[LPImage _PNGImageNamed:template:]
  +[LPImage _loadImageSubsampledToScreenSizeFromData:]
  +[LPImage _PNGImageNamed:]
  +[LPImage _PDFImageNamed:template:]

  // instance methods
  -[LPImage fileURL]
  -[LPImage _isImperceptible]
  -[LPImage _srcsetForRemoteURLs]
  -[LPImage _asTemplate]
  -[LPImage _isFallbackIcon]
  -[LPImage _hasTransparency]
  -[LPImage set_fallbackIcon:]
  -[LPImage set_remoteURLsForEmailCompatibleOutput:]
  -[LPImage _darkInterfaceAlternativeImage]
  -[LPImage _setDarkInterfaceAlternativeImage:]
  -[LPImage setPlatformImage:]
  -[LPImage _alternateHTMLImageGenerator]
  -[LPImage set_alternateHTMLImageGenerator:]
  -[LPImage init]
  -[LPImage .cxx_destruct]
  -[LPImage _itemProvider]
  -[LPImage encodeWithCoder:]
  -[LPImage data]
  -[LPImage setFileURL:]
  -[LPImage isEqual:]
  -[LPImage MIMEType]
  -[LPImage initWithItemProvider:properties:placeholderImage:]
  -[LPImage initWithData:MIMEType:]
  -[LPImage initWithPlatformImage:]
  -[LPImage properties]
  -[LPImage _initWithImage:]
  -[LPImage _pixelSize]
  -[LPImage initWithCoder:]
  -[LPImage initWithData:MIMEType:properties:]
  -[LPImage _isAnimated]
  -[LPImage _initWithCGImage:]
  -[LPImage platformImage]
  -[LPImage initByReferencingFileURL:MIMEType:properties:]
  -[LPImage initWithPlatformImage:properties:]
  -[LPImage _initWithPlatformImageGenerator:]
  -[LPImage _shouldEncodeData]
  -[LPImage _waitForAsynchronouslyLoadedImageIfNeeded]
  -[LPImage _createDataFromPlatformImage]
  -[LPImage _mapDataFromFileURL]
  -[LPImage _remoteURLsForEmailCompatibleOutput]
  -[LPImage needsAsynchronousLoad]
  -[LPImage _initWithImage:properties:]
  -[LPImage loadAsynchronouslyWithCompletionHandler:]
  -[LPImage initByReferencingFileURL:MIMEType:]
  -[LPImage _initWithCGImage:properties:]
  -[LPImage _synchronouslyDecodePlatformImageWithMaximumSize:]
  -[LPImage _preparePlatformImageWithCompletionHandler:]
  -[LPImage _encodedSize]


LPImageRemoteURLRepresentation : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long scale
 @property  NSURL *URL

  // instance methods
  -[LPImageRemoteURLRepresentation initWithScale:URL:]
  -[LPImageRemoteURLRepresentation .cxx_destruct]
  -[LPImageRemoteURLRepresentation URL]
  -[LPImageRemoteURLRepresentation scale]


LPHTMLQuoteComponent : LPHTMLComponent
  // class methods
  +[LPHTMLQuoteComponent styleSet]
  +[LPHTMLQuoteComponent baseRules]
  +[LPHTMLQuoteComponent ruleDictionaryForStyle:]

  // instance methods
  -[LPHTMLQuoteComponent initWithText:style:themePath:generator:]


LPApplicationIdentification : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[LPApplicationIdentification isCNNMobile]
  +[LPApplicationIdentification isMessagesViewService]
  +[LPApplicationIdentification isMobileReminders]
  +[LPApplicationIdentification isMobileNotes]
  +[LPApplicationIdentification hasClipServicesEntitlement]


LPEmailCompatibleHTMLIconComponent : LPHTMLComponent
  // class methods
  +[LPEmailCompatibleHTMLIconComponent styleSet]
  +[LPEmailCompatibleHTMLIconComponent baseRules]
  +[LPEmailCompatibleHTMLIconComponent ruleDictionaryForStyle:]

  // instance methods
  -[LPEmailCompatibleHTMLIconComponent initWithImage:style:properties:themePath:generator:]


LPLinkHTMLGenerator : NSObject /usr/lib/libc++.1.dylib
 @property  DOMDocument *parentDocument
 @property  LPCSSResolver *cssResolver
 @property  long long style
 @property  LPTheme *theme
 @property  BOOL isPreliminary
 @property  BOOL delegateRespondsToURLForResource
 @property  BOOL useFlexibleWidth
 @property  BOOL hasTallMedia
 @property  UIColor *backgroundColor
 @property  LPPointUnit *rootWidth
 @property  LPPointUnit *minimumRootHeight
 @property  BOOL hasPendingMetadataProvider
 @property  BOOL _useVariablesWhenUsingInlineStyles
 @property  BOOL _includeClassNamesWhenUsingInlineStyles
 @property  BOOL _includeDarkInterfaceInlineStyles
 @property  BOOL _allowsTapToLoad
 @property  BOOL _disableAutoPlay
 @property  BOOL _canTapToLoad
 @property  <LPLinkHTMLGeneratorDelegate> *delegate
 @property  DOMDocumentFragment *documentFragment
 @property  BOOL useInlineStyles
 @property  BOOL applyCornerRadiusToLink
 @property  BOOL generateEmailCompatibleMarkup
 @property  LPLinkMetadata *metadata
 @property  NSURL *URL

  // class methods
  +[LPLinkHTMLGenerator initialize]

  // instance methods
  -[LPLinkHTMLGenerator setMetadata:]
  -[LPLinkHTMLGenerator _rebuildView]
  -[LPLinkHTMLGenerator _URLForImage:]
  -[LPLinkHTMLGenerator initWithURL:document:]
  -[LPLinkHTMLGenerator _fetchMetadata]
  -[LPLinkHTMLGenerator initWithPresentationProperties:URL:document:]
  -[LPLinkHTMLGenerator _setPresentationProperties:]
  -[LPLinkHTMLGenerator _setMetadata:isFinal:]
  -[LPLinkHTMLGenerator _computePresentationPropertiesFromMetadata]
  -[LPLinkHTMLGenerator isPreliminary]
  -[LPLinkHTMLGenerator hasTallMedia]
  -[LPLinkHTMLGenerator _createMediaTopCaptionBar]
  -[LPLinkHTMLGenerator _createMediaBottomCaptionBar]
  -[LPLinkHTMLGenerator _createRootElement]
  -[LPLinkHTMLGenerator clearCurrentLayout]
  -[LPLinkHTMLGenerator injectCSSIfNeeded]
  -[LPLinkHTMLGenerator _createMediaComponent]
  -[LPLinkHTMLGenerator _createQuoteComponent]
  -[LPLinkHTMLGenerator _createCaptionBar]
  -[LPLinkHTMLGenerator hasPendingMetadataProvider]
  -[LPLinkHTMLGenerator initWithMetadataLoadedFromURL:document:]
  -[LPLinkHTMLGenerator initWithPresentationProperties:document:]
  -[LPLinkHTMLGenerator documentFragment]
  -[LPLinkHTMLGenerator _setAllowsTapToLoad:]
  -[LPLinkHTMLGenerator _setUseVariablesWhenUsingInlineStyles:]
  -[LPLinkHTMLGenerator _setIncludeClassNamesWhenUsingInlineStyles:]
  -[LPLinkHTMLGenerator useFlexibleWidth]
  -[LPLinkHTMLGenerator init]
  -[LPLinkHTMLGenerator _setIncludeDarkInterfaceInlineStyles:]
  -[LPLinkHTMLGenerator setApplyCornerRadiusToLink:]
  -[LPLinkHTMLGenerator delegateRespondsToURLForResource]
  -[LPLinkHTMLGenerator _URLForResource:withMIMEType:]
  -[LPLinkHTMLGenerator minimumRootHeight]
  -[LPLinkHTMLGenerator _canTapToLoad]
  -[LPLinkHTMLGenerator _didFollowLink]
  -[LPLinkHTMLGenerator _allowsTapToLoad]
  -[LPLinkHTMLGenerator _disableAutoPlay]
  -[LPLinkHTMLGenerator _setDisableAutoPlay:]
  -[LPLinkHTMLGenerator applyCornerRadiusToLink]
  -[LPLinkHTMLGenerator backgroundColor]
  -[LPLinkHTMLGenerator .cxx_destruct]
  -[LPLinkHTMLGenerator theme]
  -[LPLinkHTMLGenerator rootWidth]
  -[LPLinkHTMLGenerator setDelegate:]
  -[LPLinkHTMLGenerator URL]
  -[LPLinkHTMLGenerator metadata]
  -[LPLinkHTMLGenerator parentDocument]
  -[LPLinkHTMLGenerator delegate]
  -[LPLinkHTMLGenerator useInlineStyles]
  -[LPLinkHTMLGenerator setUseInlineStyles:]
  -[LPLinkHTMLGenerator generateEmailCompatibleMarkup]
  -[LPLinkHTMLGenerator setGenerateEmailCompatibleMarkup:]
  -[LPLinkHTMLGenerator _useVariablesWhenUsingInlineStyles]
  -[LPLinkHTMLGenerator _includeDarkInterfaceInlineStyles]
  -[LPLinkHTMLGenerator _includeClassNamesWhenUsingInlineStyles]
  -[LPLinkHTMLGenerator cssResolver]
  -[LPLinkHTMLGenerator style]


LPLinkMetadata : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  unsigned long _encodedSize
 @property  unsigned int version
 @property  NSString *summary
 @property  NSString *selectedText
 @property  NSString *siteName
 @property  NSString *itemType
 @property  NSURL *relatedURL
 @property  NSString *creator
 @property  NSString *creatorFacebookProfile
 @property  NSString *creatorTwitterUsername
 @property  NSString *appleContentID
 @property  NSString *appleSummary
 @property  LPImage *icon
 @property  LPIconMetadata *iconMetadata
 @property  LPImage *image
 @property  NSArray *alternateImages
 @property  LPImageMetadata *imageMetadata
 @property  LPVideo *video
 @property  LPVideoMetadata *videoMetadata
 @property  LPAudio *audio
 @property  LPAudioMetadata *audioMetadata
 @property  NSArray *icons
 @property  NSArray *images
 @property  NSArray *videos
 @property  NSArray *streamingVideos
 @property  NSArray *audios
 @property  LPAssociatedApplicationMetadata *associatedApplication
 @property  LPSpecializationMetadata *specialization
 @property  NSURL *originalURL
 @property  NSURL *URL
 @property  NSString *title
 @property  NSItemProvider *iconProvider
 @property  NSItemProvider *imageProvider
 @property  NSItemProvider *videoProvider
 @property  NSURL *remoteVideoURL

  // class methods
  +[LPLinkMetadata supportsSecureCoding]
  +[LPLinkMetadata metadataWithDataRepresentation:]
  +[LPLinkMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPLinkMetadata summary]
  -[LPLinkMetadata copyWithZone:]
  -[LPLinkMetadata originalURL]
  -[LPLinkMetadata itemType]
  -[LPLinkMetadata init]
  -[LPLinkMetadata _copyPropertiesFrom:onlyUpgradeFields:]
  -[LPLinkMetadata relatedURL]
  -[LPLinkMetadata setRelatedURL:]
  -[LPLinkMetadata appleSummary]
  -[LPLinkMetadata creatorFacebookProfile]
  -[LPLinkMetadata setCreatorFacebookProfile:]
  -[LPLinkMetadata creatorTwitterUsername]
  -[LPLinkMetadata setCreatorTwitterUsername:]
  -[LPLinkMetadata appleContentID]
  -[LPLinkMetadata setAppleContentID:]
  -[LPLinkMetadata setAppleSummary:]
  -[LPLinkMetadata iconMetadata]
  -[LPLinkMetadata setIconMetadata:]
  -[LPLinkMetadata imageMetadata]
  -[LPLinkMetadata setImageMetadata:]
  -[LPLinkMetadata setVideos:]
  -[LPLinkMetadata streamingVideos]
  -[LPLinkMetadata setStreamingVideos:]
  -[LPLinkMetadata setAudios:]
  -[LPLinkMetadata associatedApplication]
  -[LPLinkMetadata setAssociatedApplication:]
  -[LPLinkMetadata _copyPropertiesOnlyUpgradingFieldsFrom:]
  -[LPLinkMetadata _isLoadingAsynchronousFields]
  -[LPLinkMetadata _isDeferringAsynchronousLoads]
  -[LPLinkMetadata audio]
  -[LPLinkMetadata imageProvider]
  -[LPLinkMetadata _wasCopiedFromIncompleteMetadata]
  -[LPLinkMetadata videoProvider]
  -[LPLinkMetadata _enumerateAsynchronousFields:]
  -[LPLinkMetadata _loadAsynchronousFieldsWithLoadGroup:]
  -[LPLinkMetadata setVideoProvider:]
  -[LPLinkMetadata _reduceSizeByDroppingResourcesIfNeeded]
  -[LPLinkMetadata remoteVideoURL]
  -[LPLinkMetadata setRemoteVideoURL:]
  -[LPLinkMetadata _hasAnyAsynchronousFields]
  -[LPLinkMetadata _loadAsynchronousFieldsWithUpdateHandler:]
  -[LPLinkMetadata setImages:]
  -[LPLinkMetadata _createAsynchronousLoadDeferralToken]
  -[LPLinkMetadata _invokePendingAsynchronousLoadUpdateHandlers]
  -[LPLinkMetadata alternateImages]
  -[LPLinkMetadata setAlternateImages:]
  -[LPLinkMetadata specialization]
  -[LPLinkMetadata setIcons:]
  -[LPLinkMetadata audios]
  -[LPLinkMetadata .cxx_destruct]
  -[LPLinkMetadata setImage:]
  -[LPLinkMetadata setSummary:]
  -[LPLinkMetadata _decodeAllImagesWithMaximumSize:]
  -[LPLinkMetadata icon]
  -[LPLinkMetadata iconProvider]
  -[LPLinkMetadata images]
  -[LPLinkMetadata selectedText]
  -[LPLinkMetadata icons]
  -[LPLinkMetadata setTitle:]
  -[LPLinkMetadata image]
  -[LPLinkMetadata encodeWithCoder:]
  -[LPLinkMetadata setIcon:]
  -[LPLinkMetadata title]
  -[LPLinkMetadata setItemType:]
  -[LPLinkMetadata siteName]
  -[LPLinkMetadata setIconProvider:]
  -[LPLinkMetadata setCreator:]
  -[LPLinkMetadata isEqual:]
  -[LPLinkMetadata video]
  -[LPLinkMetadata creator]
  -[LPLinkMetadata version]
  -[LPLinkMetadata setAudio:]
  -[LPLinkMetadata setVideo:]
  -[LPLinkMetadata setSpecialization:]
  -[LPLinkMetadata dataRepresentation]
  -[LPLinkMetadata URL]
  -[LPLinkMetadata setURL:]
  -[LPLinkMetadata videos]
  -[LPLinkMetadata setSelectedText:]
  -[LPLinkMetadata initWithCoder:]
  -[LPLinkMetadata setImageProvider:]
  -[LPLinkMetadata setOriginalURL:]
  -[LPLinkMetadata setSiteName:]
  -[LPLinkMetadata _initWithDictionary:]
  -[LPLinkMetadata _populateMetadataForBackwardCompatibility]
  -[LPLinkMetadata setAudioMetadata:]
  -[LPLinkMetadata audioMetadata]
  -[LPLinkMetadata setVideoMetadata:]
  -[LPLinkMetadata videoMetadata]
  -[LPLinkMetadata _encodedSize]


LPPlaceholderLinkMetadata : LPLinkMetadata

LPIconMetadata : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  unsigned int version
 @property  NSURL *URL
 @property  NSString *accessibilityText

  // class methods
  +[LPIconMetadata supportsSecureCoding]

  // instance methods
  -[LPIconMetadata init]
  -[LPIconMetadata _initWithURL:]
  -[LPIconMetadata .cxx_destruct]
  -[LPIconMetadata accessibilityText]
  -[LPIconMetadata encodeWithCoder:]
  -[LPIconMetadata isEqual:]
  -[LPIconMetadata version]
  -[LPIconMetadata URL]
  -[LPIconMetadata setURL:]
  -[LPIconMetadata initWithCoder:]
  -[LPIconMetadata setAccessibilityText:]


LPImageMetadata : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  unsigned int version
 @property  NSURL *URL
 @property  NSString *type
 @property  {CGSize=dd} size
 @property  NSString *accessibilityText

  // class methods
  +[LPImageMetadata supportsSecureCoding]

  // instance methods
  -[LPImageMetadata init]
  -[LPImageMetadata size]
  -[LPImageMetadata setType:]
  -[LPImageMetadata .cxx_destruct]
  -[LPImageMetadata accessibilityText]
  -[LPImageMetadata encodeWithCoder:]
  -[LPImageMetadata type]
  -[LPImageMetadata isEqual:]
  -[LPImageMetadata setSize:]
  -[LPImageMetadata version]
  -[LPImageMetadata URL]
  -[LPImageMetadata setURL:]
  -[LPImageMetadata initWithCoder:]
  -[LPImageMetadata _initWithDictionary:]
  -[LPImageMetadata setAccessibilityText:]


LPArtworkMetadata : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  unsigned int version
 @property  NSURL *URL
 @property  NSDictionary *colors

  // class methods
  +[LPArtworkMetadata supportsSecureCoding]

  // instance methods
  -[LPArtworkMetadata colors]
  -[LPArtworkMetadata copyWithZone:]
  -[LPArtworkMetadata setColors:]
  -[LPArtworkMetadata init]
  -[LPArtworkMetadata .cxx_destruct]
  -[LPArtworkMetadata encodeWithCoder:]
  -[LPArtworkMetadata isEqual:]
  -[LPArtworkMetadata version]
  -[LPArtworkMetadata URL]
  -[LPArtworkMetadata setURL:]
  -[LPArtworkMetadata initWithCoder:]


LPVideoMetadata : NSObject /usr/lib/libc++.1.dylib <LPMediaMetadata, NSSecureCoding>
 @property  unsigned int version
 @property  NSURL *URL
 @property  NSString *type
 @property  {CGSize=dd} size
 @property  NSString *accessibilityText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPVideoMetadata supportsSecureCoding]

  // instance methods
  -[LPVideoMetadata init]
  -[LPVideoMetadata size]
  -[LPVideoMetadata setType:]
  -[LPVideoMetadata .cxx_destruct]
  -[LPVideoMetadata accessibilityText]
  -[LPVideoMetadata encodeWithCoder:]
  -[LPVideoMetadata type]
  -[LPVideoMetadata isEqual:]
  -[LPVideoMetadata setSize:]
  -[LPVideoMetadata version]
  -[LPVideoMetadata URL]
  -[LPVideoMetadata setURL:]
  -[LPVideoMetadata initWithCoder:]
  -[LPVideoMetadata _initWithDictionary:]
  -[LPVideoMetadata setAccessibilityText:]


LPAudioMetadata : NSObject /usr/lib/libc++.1.dylib <LPMediaMetadata, NSSecureCoding>
 @property  unsigned int version
 @property  NSURL *URL
 @property  NSString *type
 @property  NSString *accessibilityText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPAudioMetadata supportsSecureCoding]

  // instance methods
  -[LPAudioMetadata init]
  -[LPAudioMetadata setType:]
  -[LPAudioMetadata .cxx_destruct]
  -[LPAudioMetadata accessibilityText]
  -[LPAudioMetadata encodeWithCoder:]
  -[LPAudioMetadata type]
  -[LPAudioMetadata isEqual:]
  -[LPAudioMetadata version]
  -[LPAudioMetadata URL]
  -[LPAudioMetadata setURL:]
  -[LPAudioMetadata initWithCoder:]
  -[LPAudioMetadata _initWithDictionary:]
  -[LPAudioMetadata setAccessibilityText:]


LPSpecializationMetadata : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  BOOL _dummyPropertyForObservation

  // class methods
  +[LPSpecializationMetadata supportsSecureCoding]
  +[LPSpecializationMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPSpecializationMetadata copyWithZone:]
  -[LPSpecializationMetadata _enumerateAsynchronousFields:]
  -[LPSpecializationMetadata _dummyPropertyForObservation]
  -[LPSpecializationMetadata encodeWithCoder:]
  -[LPSpecializationMetadata initWithCoder:]


LPiTunesMediaSongMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer, LPLinkMetadataStatusTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *artist
 @property  NSString *album
 @property  NSString *lyrics
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata
 @property  NSURL *previewURL
 @property  NSArray *offers

  // class methods
  +[LPiTunesMediaSongMetadata supportsSecureCoding]
  +[LPiTunesMediaSongMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]
  +[LPiTunesMediaSongMetadata transcriptBoldTextFont]
  +[LPiTunesMediaSongMetadata statusForText:]

  // instance methods
  -[LPiTunesMediaSongMetadata lyrics]
  -[LPiTunesMediaSongMetadata album]
  -[LPiTunesMediaSongMetadata copyWithZone:]
  -[LPiTunesMediaSongMetadata artwork]
  -[LPiTunesMediaSongMetadata storeIdentifier]
  -[LPiTunesMediaSongMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaSongMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaSongMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaSongMetadata setAlbum:]
  -[LPiTunesMediaSongMetadata artworkMetadata]
  -[LPiTunesMediaSongMetadata setArtworkMetadata:]
  -[LPiTunesMediaSongMetadata initializeForTransformer:]
  -[LPiTunesMediaSongMetadata destroyForTransformer:]
  -[LPiTunesMediaSongMetadata statusForTransformer:]
  -[LPiTunesMediaSongMetadata actionURLForTransformer:]
  -[LPiTunesMediaSongMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaSongMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaSongMetadata setPreviewURL:]
  -[LPiTunesMediaSongMetadata .cxx_destruct]
  -[LPiTunesMediaSongMetadata name]
  -[LPiTunesMediaSongMetadata storeFrontIdentifier]
  -[LPiTunesMediaSongMetadata offers]
  -[LPiTunesMediaSongMetadata inlinePlaybackInformationForURL:]
  -[LPiTunesMediaSongMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaSongMetadata setOffers:]
  -[LPiTunesMediaSongMetadata previewURL]
  -[LPiTunesMediaSongMetadata encodeWithCoder:]
  -[LPiTunesMediaSongMetadata setLyrics:]
  -[LPiTunesMediaSongMetadata setArtist:]
  -[LPiTunesMediaSongMetadata isEqual:]
  -[LPiTunesMediaSongMetadata artist]
  -[LPiTunesMediaSongMetadata setArtwork:]
  -[LPiTunesMediaSongMetadata setStoreIdentifier:]
  -[LPiTunesMediaSongMetadata setName:]
  -[LPiTunesMediaSongMetadata initWithCoder:]
  -[LPiTunesMediaSongMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaSongMetadata previewImageForTransformer:]


LPiTunesMediaAlbumMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *artist
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata
 @property  NSArray *offers

  // class methods
  +[LPiTunesMediaAlbumMetadata supportsSecureCoding]
  +[LPiTunesMediaAlbumMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaAlbumMetadata copyWithZone:]
  -[LPiTunesMediaAlbumMetadata artwork]
  -[LPiTunesMediaAlbumMetadata storeIdentifier]
  -[LPiTunesMediaAlbumMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaAlbumMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaAlbumMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaAlbumMetadata artworkMetadata]
  -[LPiTunesMediaAlbumMetadata setArtworkMetadata:]
  -[LPiTunesMediaAlbumMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaAlbumMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaAlbumMetadata .cxx_destruct]
  -[LPiTunesMediaAlbumMetadata name]
  -[LPiTunesMediaAlbumMetadata storeFrontIdentifier]
  -[LPiTunesMediaAlbumMetadata offers]
  -[LPiTunesMediaAlbumMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaAlbumMetadata setOffers:]
  -[LPiTunesMediaAlbumMetadata encodeWithCoder:]
  -[LPiTunesMediaAlbumMetadata setArtist:]
  -[LPiTunesMediaAlbumMetadata isEqual:]
  -[LPiTunesMediaAlbumMetadata artist]
  -[LPiTunesMediaAlbumMetadata setArtwork:]
  -[LPiTunesMediaAlbumMetadata setStoreIdentifier:]
  -[LPiTunesMediaAlbumMetadata setName:]
  -[LPiTunesMediaAlbumMetadata initWithCoder:]
  -[LPiTunesMediaAlbumMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaAlbumMetadata previewImageForTransformer:]


LPiTunesMediaMusicVideoMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *artist
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata

  // class methods
  +[LPiTunesMediaMusicVideoMetadata supportsSecureCoding]
  +[LPiTunesMediaMusicVideoMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaMusicVideoMetadata copyWithZone:]
  -[LPiTunesMediaMusicVideoMetadata artwork]
  -[LPiTunesMediaMusicVideoMetadata storeIdentifier]
  -[LPiTunesMediaMusicVideoMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaMusicVideoMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaMusicVideoMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaMusicVideoMetadata artworkMetadata]
  -[LPiTunesMediaMusicVideoMetadata setArtworkMetadata:]
  -[LPiTunesMediaMusicVideoMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaMusicVideoMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaMusicVideoMetadata .cxx_destruct]
  -[LPiTunesMediaMusicVideoMetadata name]
  -[LPiTunesMediaMusicVideoMetadata storeFrontIdentifier]
  -[LPiTunesMediaMusicVideoMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaMusicVideoMetadata encodeWithCoder:]
  -[LPiTunesMediaMusicVideoMetadata setArtist:]
  -[LPiTunesMediaMusicVideoMetadata isEqual:]
  -[LPiTunesMediaMusicVideoMetadata artist]
  -[LPiTunesMediaMusicVideoMetadata setArtwork:]
  -[LPiTunesMediaMusicVideoMetadata setStoreIdentifier:]
  -[LPiTunesMediaMusicVideoMetadata setName:]
  -[LPiTunesMediaMusicVideoMetadata initWithCoder:]
  -[LPiTunesMediaMusicVideoMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaMusicVideoMetadata previewImageForTransformer:]


LPiTunesMediaArtistMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *genre
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata

  // class methods
  +[LPiTunesMediaArtistMetadata supportsSecureCoding]
  +[LPiTunesMediaArtistMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaArtistMetadata copyWithZone:]
  -[LPiTunesMediaArtistMetadata artwork]
  -[LPiTunesMediaArtistMetadata storeIdentifier]
  -[LPiTunesMediaArtistMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaArtistMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaArtistMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaArtistMetadata genre]
  -[LPiTunesMediaArtistMetadata artworkMetadata]
  -[LPiTunesMediaArtistMetadata setArtworkMetadata:]
  -[LPiTunesMediaArtistMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaArtistMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaArtistMetadata .cxx_destruct]
  -[LPiTunesMediaArtistMetadata name]
  -[LPiTunesMediaArtistMetadata storeFrontIdentifier]
  -[LPiTunesMediaArtistMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaArtistMetadata encodeWithCoder:]
  -[LPiTunesMediaArtistMetadata isEqual:]
  -[LPiTunesMediaArtistMetadata setArtwork:]
  -[LPiTunesMediaArtistMetadata setStoreIdentifier:]
  -[LPiTunesMediaArtistMetadata setName:]
  -[LPiTunesMediaArtistMetadata setGenre:]
  -[LPiTunesMediaArtistMetadata initWithCoder:]
  -[LPiTunesMediaArtistMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaArtistMetadata previewImageForTransformer:]


LPiTunesUserProfileMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata

  // class methods
  +[LPiTunesUserProfileMetadata supportsSecureCoding]
  +[LPiTunesUserProfileMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesUserProfileMetadata copyWithZone:]
  -[LPiTunesUserProfileMetadata artwork]
  -[LPiTunesUserProfileMetadata _enumerateAsynchronousFields:]
  -[LPiTunesUserProfileMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesUserProfileMetadata artworkMetadata]
  -[LPiTunesUserProfileMetadata setArtworkMetadata:]
  -[LPiTunesUserProfileMetadata presentationPropertiesForTransformer:]
  -[LPiTunesUserProfileMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesUserProfileMetadata .cxx_destruct]
  -[LPiTunesUserProfileMetadata name]
  -[LPiTunesUserProfileMetadata encodeWithCoder:]
  -[LPiTunesUserProfileMetadata isEqual:]
  -[LPiTunesUserProfileMetadata setArtwork:]
  -[LPiTunesUserProfileMetadata setName:]
  -[LPiTunesUserProfileMetadata initWithCoder:]
  -[LPiTunesUserProfileMetadata previewSummaryForTransformer:]
  -[LPiTunesUserProfileMetadata previewImageForTransformer:]


LPiTunesMediaPlaylistMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *curator
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata

  // class methods
  +[LPiTunesMediaPlaylistMetadata supportsSecureCoding]
  +[LPiTunesMediaPlaylistMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaPlaylistMetadata copyWithZone:]
  -[LPiTunesMediaPlaylistMetadata artwork]
  -[LPiTunesMediaPlaylistMetadata storeIdentifier]
  -[LPiTunesMediaPlaylistMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaPlaylistMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaPlaylistMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaPlaylistMetadata artworkMetadata]
  -[LPiTunesMediaPlaylistMetadata setArtworkMetadata:]
  -[LPiTunesMediaPlaylistMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaPlaylistMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaPlaylistMetadata .cxx_destruct]
  -[LPiTunesMediaPlaylistMetadata name]
  -[LPiTunesMediaPlaylistMetadata storeFrontIdentifier]
  -[LPiTunesMediaPlaylistMetadata curator]
  -[LPiTunesMediaPlaylistMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaPlaylistMetadata encodeWithCoder:]
  -[LPiTunesMediaPlaylistMetadata setCurator:]
  -[LPiTunesMediaPlaylistMetadata isEqual:]
  -[LPiTunesMediaPlaylistMetadata setArtwork:]
  -[LPiTunesMediaPlaylistMetadata setStoreIdentifier:]
  -[LPiTunesMediaPlaylistMetadata setName:]
  -[LPiTunesMediaPlaylistMetadata initWithCoder:]
  -[LPiTunesMediaPlaylistMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaPlaylistMetadata previewImageForTransformer:]


LPiTunesMediaRadioMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *curator
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata

  // class methods
  +[LPiTunesMediaRadioMetadata supportsSecureCoding]
  +[LPiTunesMediaRadioMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaRadioMetadata copyWithZone:]
  -[LPiTunesMediaRadioMetadata artwork]
  -[LPiTunesMediaRadioMetadata storeIdentifier]
  -[LPiTunesMediaRadioMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaRadioMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaRadioMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaRadioMetadata artworkMetadata]
  -[LPiTunesMediaRadioMetadata setArtworkMetadata:]
  -[LPiTunesMediaRadioMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaRadioMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaRadioMetadata .cxx_destruct]
  -[LPiTunesMediaRadioMetadata name]
  -[LPiTunesMediaRadioMetadata storeFrontIdentifier]
  -[LPiTunesMediaRadioMetadata curator]
  -[LPiTunesMediaRadioMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaRadioMetadata encodeWithCoder:]
  -[LPiTunesMediaRadioMetadata setCurator:]
  -[LPiTunesMediaRadioMetadata isEqual:]
  -[LPiTunesMediaRadioMetadata setArtwork:]
  -[LPiTunesMediaRadioMetadata setStoreIdentifier:]
  -[LPiTunesMediaRadioMetadata setName:]
  -[LPiTunesMediaRadioMetadata initWithCoder:]
  -[LPiTunesMediaRadioMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaRadioMetadata previewImageForTransformer:]


LPiTunesMediaSoftwareMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *subtitle
 @property  NSString *genre
 @property  NSString *platform
 @property  LPImage *icon
 @property  NSArray *screenshots
 @property  LPVideo *previewVideo
 @property  BOOL isMessagesOnlyApp
 @property  LPImage *messagesAppIcon

  // class methods
  +[LPiTunesMediaSoftwareMetadata supportsSecureCoding]
  +[LPiTunesMediaSoftwareMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaSoftwareMetadata copyWithZone:]
  -[LPiTunesMediaSoftwareMetadata setSubtitle:]
  -[LPiTunesMediaSoftwareMetadata storeIdentifier]
  -[LPiTunesMediaSoftwareMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaSoftwareMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaSoftwareMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaSoftwareMetadata genre]
  -[LPiTunesMediaSoftwareMetadata screenshots]
  -[LPiTunesMediaSoftwareMetadata setScreenshots:]
  -[LPiTunesMediaSoftwareMetadata previewVideo]
  -[LPiTunesMediaSoftwareMetadata setPreviewVideo:]
  -[LPiTunesMediaSoftwareMetadata isMessagesOnlyApp]
  -[LPiTunesMediaSoftwareMetadata setIsMessagesOnlyApp:]
  -[LPiTunesMediaSoftwareMetadata messagesAppIcon]
  -[LPiTunesMediaSoftwareMetadata setMessagesAppIcon:]
  -[LPiTunesMediaSoftwareMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaSoftwareMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaSoftwareMetadata .cxx_destruct]
  -[LPiTunesMediaSoftwareMetadata name]
  -[LPiTunesMediaSoftwareMetadata storeFrontIdentifier]
  -[LPiTunesMediaSoftwareMetadata icon]
  -[LPiTunesMediaSoftwareMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaSoftwareMetadata encodeWithCoder:]
  -[LPiTunesMediaSoftwareMetadata setIcon:]
  -[LPiTunesMediaSoftwareMetadata platform]
  -[LPiTunesMediaSoftwareMetadata isEqual:]
  -[LPiTunesMediaSoftwareMetadata subtitle]
  -[LPiTunesMediaSoftwareMetadata setStoreIdentifier:]
  -[LPiTunesMediaSoftwareMetadata setPlatform:]
  -[LPiTunesMediaSoftwareMetadata setName:]
  -[LPiTunesMediaSoftwareMetadata setGenre:]
  -[LPiTunesMediaSoftwareMetadata initWithCoder:]
  -[LPiTunesMediaSoftwareMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaSoftwareMetadata previewImageForTransformer:]


LPiTunesMediaBookMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *author
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata
 @property  BOOL hasSpineOnRight

  // class methods
  +[LPiTunesMediaBookMetadata supportsSecureCoding]
  +[LPiTunesMediaBookMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaBookMetadata author]
  -[LPiTunesMediaBookMetadata copyWithZone:]
  -[LPiTunesMediaBookMetadata artwork]
  -[LPiTunesMediaBookMetadata setAuthor:]
  -[LPiTunesMediaBookMetadata storeIdentifier]
  -[LPiTunesMediaBookMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaBookMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaBookMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaBookMetadata artworkMetadata]
  -[LPiTunesMediaBookMetadata setArtworkMetadata:]
  -[LPiTunesMediaBookMetadata hasSpineOnRight]
  -[LPiTunesMediaBookMetadata setHasSpineOnRight:]
  -[LPiTunesMediaBookMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaBookMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaBookMetadata .cxx_destruct]
  -[LPiTunesMediaBookMetadata name]
  -[LPiTunesMediaBookMetadata storeFrontIdentifier]
  -[LPiTunesMediaBookMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaBookMetadata encodeWithCoder:]
  -[LPiTunesMediaBookMetadata isEqual:]
  -[LPiTunesMediaBookMetadata setArtwork:]
  -[LPiTunesMediaBookMetadata setStoreIdentifier:]
  -[LPiTunesMediaBookMetadata setName:]
  -[LPiTunesMediaBookMetadata initWithCoder:]
  -[LPiTunesMediaBookMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaBookMetadata previewImageForTransformer:]


LPiTunesMediaAudioBookMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *author
 @property  NSString *narrator
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata
 @property  NSURL *previewURL

  // class methods
  +[LPiTunesMediaAudioBookMetadata supportsSecureCoding]
  +[LPiTunesMediaAudioBookMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaAudioBookMetadata author]
  -[LPiTunesMediaAudioBookMetadata copyWithZone:]
  -[LPiTunesMediaAudioBookMetadata artwork]
  -[LPiTunesMediaAudioBookMetadata setAuthor:]
  -[LPiTunesMediaAudioBookMetadata storeIdentifier]
  -[LPiTunesMediaAudioBookMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaAudioBookMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaAudioBookMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaAudioBookMetadata artworkMetadata]
  -[LPiTunesMediaAudioBookMetadata setArtworkMetadata:]
  -[LPiTunesMediaAudioBookMetadata setNarrator:]
  -[LPiTunesMediaAudioBookMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaAudioBookMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaAudioBookMetadata setPreviewURL:]
  -[LPiTunesMediaAudioBookMetadata .cxx_destruct]
  -[LPiTunesMediaAudioBookMetadata name]
  -[LPiTunesMediaAudioBookMetadata storeFrontIdentifier]
  -[LPiTunesMediaAudioBookMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaAudioBookMetadata previewURL]
  -[LPiTunesMediaAudioBookMetadata encodeWithCoder:]
  -[LPiTunesMediaAudioBookMetadata isEqual:]
  -[LPiTunesMediaAudioBookMetadata narrator]
  -[LPiTunesMediaAudioBookMetadata setArtwork:]
  -[LPiTunesMediaAudioBookMetadata setStoreIdentifier:]
  -[LPiTunesMediaAudioBookMetadata setName:]
  -[LPiTunesMediaAudioBookMetadata initWithCoder:]
  -[LPiTunesMediaAudioBookMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaAudioBookMetadata previewImageForTransformer:]


LPiTunesMediaPodcastEpisodeMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *episodeName
 @property  NSString *podcastName
 @property  NSString *artist
 @property  NSDate *releaseDate
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata
 @property  NSArray *offers

  // class methods
  +[LPiTunesMediaPodcastEpisodeMetadata supportsSecureCoding]
  +[LPiTunesMediaPodcastEpisodeMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaPodcastEpisodeMetadata releaseDate]
  -[LPiTunesMediaPodcastEpisodeMetadata copyWithZone:]
  -[LPiTunesMediaPodcastEpisodeMetadata artwork]
  -[LPiTunesMediaPodcastEpisodeMetadata storeIdentifier]
  -[LPiTunesMediaPodcastEpisodeMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaPodcastEpisodeMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaPodcastEpisodeMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaPodcastEpisodeMetadata artworkMetadata]
  -[LPiTunesMediaPodcastEpisodeMetadata setArtworkMetadata:]
  -[LPiTunesMediaPodcastEpisodeMetadata episodeName]
  -[LPiTunesMediaPodcastEpisodeMetadata setEpisodeName:]
  -[LPiTunesMediaPodcastEpisodeMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaPodcastEpisodeMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaPodcastEpisodeMetadata .cxx_destruct]
  -[LPiTunesMediaPodcastEpisodeMetadata storeFrontIdentifier]
  -[LPiTunesMediaPodcastEpisodeMetadata offers]
  -[LPiTunesMediaPodcastEpisodeMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaPodcastEpisodeMetadata setOffers:]
  -[LPiTunesMediaPodcastEpisodeMetadata encodeWithCoder:]
  -[LPiTunesMediaPodcastEpisodeMetadata setArtist:]
  -[LPiTunesMediaPodcastEpisodeMetadata isEqual:]
  -[LPiTunesMediaPodcastEpisodeMetadata artist]
  -[LPiTunesMediaPodcastEpisodeMetadata setArtwork:]
  -[LPiTunesMediaPodcastEpisodeMetadata setStoreIdentifier:]
  -[LPiTunesMediaPodcastEpisodeMetadata setReleaseDate:]
  -[LPiTunesMediaPodcastEpisodeMetadata initWithCoder:]
  -[LPiTunesMediaPodcastEpisodeMetadata podcastName]
  -[LPiTunesMediaPodcastEpisodeMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaPodcastEpisodeMetadata previewImageForTransformer:]
  -[LPiTunesMediaPodcastEpisodeMetadata setPodcastName:]


LPiTunesMediaPodcastMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *artist
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata
 @property  NSArray *offers

  // class methods
  +[LPiTunesMediaPodcastMetadata supportsSecureCoding]
  +[LPiTunesMediaPodcastMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaPodcastMetadata copyWithZone:]
  -[LPiTunesMediaPodcastMetadata artwork]
  -[LPiTunesMediaPodcastMetadata storeIdentifier]
  -[LPiTunesMediaPodcastMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaPodcastMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaPodcastMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaPodcastMetadata artworkMetadata]
  -[LPiTunesMediaPodcastMetadata setArtworkMetadata:]
  -[LPiTunesMediaPodcastMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaPodcastMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaPodcastMetadata .cxx_destruct]
  -[LPiTunesMediaPodcastMetadata name]
  -[LPiTunesMediaPodcastMetadata storeFrontIdentifier]
  -[LPiTunesMediaPodcastMetadata offers]
  -[LPiTunesMediaPodcastMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaPodcastMetadata setOffers:]
  -[LPiTunesMediaPodcastMetadata encodeWithCoder:]
  -[LPiTunesMediaPodcastMetadata setArtist:]
  -[LPiTunesMediaPodcastMetadata isEqual:]
  -[LPiTunesMediaPodcastMetadata artist]
  -[LPiTunesMediaPodcastMetadata setArtwork:]
  -[LPiTunesMediaPodcastMetadata setStoreIdentifier:]
  -[LPiTunesMediaPodcastMetadata setName:]
  -[LPiTunesMediaPodcastMetadata initWithCoder:]
  -[LPiTunesMediaPodcastMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaPodcastMetadata previewImageForTransformer:]


LPiTunesMediaTVEpisodeMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *episodeName
 @property  NSString *seasonName
 @property  NSString *genre
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata

  // class methods
  +[LPiTunesMediaTVEpisodeMetadata supportsSecureCoding]
  +[LPiTunesMediaTVEpisodeMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaTVEpisodeMetadata copyWithZone:]
  -[LPiTunesMediaTVEpisodeMetadata artwork]
  -[LPiTunesMediaTVEpisodeMetadata storeIdentifier]
  -[LPiTunesMediaTVEpisodeMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaTVEpisodeMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaTVEpisodeMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaTVEpisodeMetadata genre]
  -[LPiTunesMediaTVEpisodeMetadata artworkMetadata]
  -[LPiTunesMediaTVEpisodeMetadata setArtworkMetadata:]
  -[LPiTunesMediaTVEpisodeMetadata episodeName]
  -[LPiTunesMediaTVEpisodeMetadata setEpisodeName:]
  -[LPiTunesMediaTVEpisodeMetadata seasonName]
  -[LPiTunesMediaTVEpisodeMetadata setSeasonName:]
  -[LPiTunesMediaTVEpisodeMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaTVEpisodeMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaTVEpisodeMetadata .cxx_destruct]
  -[LPiTunesMediaTVEpisodeMetadata storeFrontIdentifier]
  -[LPiTunesMediaTVEpisodeMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaTVEpisodeMetadata encodeWithCoder:]
  -[LPiTunesMediaTVEpisodeMetadata isEqual:]
  -[LPiTunesMediaTVEpisodeMetadata setArtwork:]
  -[LPiTunesMediaTVEpisodeMetadata setStoreIdentifier:]
  -[LPiTunesMediaTVEpisodeMetadata setGenre:]
  -[LPiTunesMediaTVEpisodeMetadata initWithCoder:]
  -[LPiTunesMediaTVEpisodeMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaTVEpisodeMetadata previewImageForTransformer:]


LPiTunesMediaTVSeasonMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *genre
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata

  // class methods
  +[LPiTunesMediaTVSeasonMetadata supportsSecureCoding]
  +[LPiTunesMediaTVSeasonMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaTVSeasonMetadata copyWithZone:]
  -[LPiTunesMediaTVSeasonMetadata artwork]
  -[LPiTunesMediaTVSeasonMetadata storeIdentifier]
  -[LPiTunesMediaTVSeasonMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaTVSeasonMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaTVSeasonMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaTVSeasonMetadata genre]
  -[LPiTunesMediaTVSeasonMetadata artworkMetadata]
  -[LPiTunesMediaTVSeasonMetadata setArtworkMetadata:]
  -[LPiTunesMediaTVSeasonMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaTVSeasonMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaTVSeasonMetadata .cxx_destruct]
  -[LPiTunesMediaTVSeasonMetadata name]
  -[LPiTunesMediaTVSeasonMetadata storeFrontIdentifier]
  -[LPiTunesMediaTVSeasonMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaTVSeasonMetadata encodeWithCoder:]
  -[LPiTunesMediaTVSeasonMetadata isEqual:]
  -[LPiTunesMediaTVSeasonMetadata setArtwork:]
  -[LPiTunesMediaTVSeasonMetadata setStoreIdentifier:]
  -[LPiTunesMediaTVSeasonMetadata setName:]
  -[LPiTunesMediaTVSeasonMetadata setGenre:]
  -[LPiTunesMediaTVSeasonMetadata initWithCoder:]
  -[LPiTunesMediaTVSeasonMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaTVSeasonMetadata previewImageForTransformer:]


LPAppleMusicTVShowMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata

  // class methods
  +[LPAppleMusicTVShowMetadata supportsSecureCoding]
  +[LPAppleMusicTVShowMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPAppleMusicTVShowMetadata copyWithZone:]
  -[LPAppleMusicTVShowMetadata artwork]
  -[LPAppleMusicTVShowMetadata storeIdentifier]
  -[LPAppleMusicTVShowMetadata setStoreFrontIdentifier:]
  -[LPAppleMusicTVShowMetadata _enumerateAsynchronousFields:]
  -[LPAppleMusicTVShowMetadata populateMetadataForBackwardCompatibility:]
  -[LPAppleMusicTVShowMetadata artworkMetadata]
  -[LPAppleMusicTVShowMetadata setArtworkMetadata:]
  -[LPAppleMusicTVShowMetadata presentationPropertiesForTransformer:]
  -[LPAppleMusicTVShowMetadata canGeneratePresentationPropertiesForURL:]
  -[LPAppleMusicTVShowMetadata .cxx_destruct]
  -[LPAppleMusicTVShowMetadata name]
  -[LPAppleMusicTVShowMetadata storeFrontIdentifier]
  -[LPAppleMusicTVShowMetadata storeIdentifierForTransformer:]
  -[LPAppleMusicTVShowMetadata encodeWithCoder:]
  -[LPAppleMusicTVShowMetadata isEqual:]
  -[LPAppleMusicTVShowMetadata setArtwork:]
  -[LPAppleMusicTVShowMetadata setStoreIdentifier:]
  -[LPAppleMusicTVShowMetadata setName:]
  -[LPAppleMusicTVShowMetadata initWithCoder:]
  -[LPAppleMusicTVShowMetadata previewSummaryForTransformer:]
  -[LPAppleMusicTVShowMetadata previewImageForTransformer:]


LPiTunesMediaMovieMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *genre
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata
 @property  LPImage *branding
 @property  NSString *brandingText

  // class methods
  +[LPiTunesMediaMovieMetadata supportsSecureCoding]
  +[LPiTunesMediaMovieMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaMovieMetadata copyWithZone:]
  -[LPiTunesMediaMovieMetadata artwork]
  -[LPiTunesMediaMovieMetadata storeIdentifier]
  -[LPiTunesMediaMovieMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaMovieMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaMovieMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaMovieMetadata genre]
  -[LPiTunesMediaMovieMetadata artworkMetadata]
  -[LPiTunesMediaMovieMetadata setArtworkMetadata:]
  -[LPiTunesMediaMovieMetadata setBranding:]
  -[LPiTunesMediaMovieMetadata brandingText]
  -[LPiTunesMediaMovieMetadata setBrandingText:]
  -[LPiTunesMediaMovieMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaMovieMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaMovieMetadata .cxx_destruct]
  -[LPiTunesMediaMovieMetadata name]
  -[LPiTunesMediaMovieMetadata storeFrontIdentifier]
  -[LPiTunesMediaMovieMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaMovieMetadata encodeWithCoder:]
  -[LPiTunesMediaMovieMetadata isEqual:]
  -[LPiTunesMediaMovieMetadata branding]
  -[LPiTunesMediaMovieMetadata setArtwork:]
  -[LPiTunesMediaMovieMetadata setStoreIdentifier:]
  -[LPiTunesMediaMovieMetadata setName:]
  -[LPiTunesMediaMovieMetadata setGenre:]
  -[LPiTunesMediaMovieMetadata initWithCoder:]
  -[LPiTunesMediaMovieMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaMovieMetadata previewImageForTransformer:]


LPiTunesMediaMovieBundleMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPLinkMetadataStoreTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *genre
 @property  LPImage *artwork
 @property  LPArtworkMetadata *artworkMetadata

  // class methods
  +[LPiTunesMediaMovieBundleMetadata supportsSecureCoding]
  +[LPiTunesMediaMovieBundleMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiTunesMediaMovieBundleMetadata copyWithZone:]
  -[LPiTunesMediaMovieBundleMetadata artwork]
  -[LPiTunesMediaMovieBundleMetadata storeIdentifier]
  -[LPiTunesMediaMovieBundleMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaMovieBundleMetadata _enumerateAsynchronousFields:]
  -[LPiTunesMediaMovieBundleMetadata populateMetadataForBackwardCompatibility:]
  -[LPiTunesMediaMovieBundleMetadata genre]
  -[LPiTunesMediaMovieBundleMetadata artworkMetadata]
  -[LPiTunesMediaMovieBundleMetadata setArtworkMetadata:]
  -[LPiTunesMediaMovieBundleMetadata presentationPropertiesForTransformer:]
  -[LPiTunesMediaMovieBundleMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiTunesMediaMovieBundleMetadata .cxx_destruct]
  -[LPiTunesMediaMovieBundleMetadata name]
  -[LPiTunesMediaMovieBundleMetadata storeFrontIdentifier]
  -[LPiTunesMediaMovieBundleMetadata storeIdentifierForTransformer:]
  -[LPiTunesMediaMovieBundleMetadata encodeWithCoder:]
  -[LPiTunesMediaMovieBundleMetadata isEqual:]
  -[LPiTunesMediaMovieBundleMetadata setArtwork:]
  -[LPiTunesMediaMovieBundleMetadata setStoreIdentifier:]
  -[LPiTunesMediaMovieBundleMetadata setName:]
  -[LPiTunesMediaMovieBundleMetadata setGenre:]
  -[LPiTunesMediaMovieBundleMetadata initWithCoder:]
  -[LPiTunesMediaMovieBundleMetadata previewSummaryForTransformer:]
  -[LPiTunesMediaMovieBundleMetadata previewImageForTransformer:]


LPiCloudSharingMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *applicationBundleIdenfier
 @property  NSString *application
 @property  NSString *title
 @property  LPImage *icon

  // class methods
  +[LPiCloudSharingMetadata supportsSecureCoding]
  +[LPiCloudSharingMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]
  +[LPiCloudSharingMetadata _bundleIdentifierMap]

  // instance methods
  -[LPiCloudSharingMetadata copyWithZone:]
  -[LPiCloudSharingMetadata application]
  -[LPiCloudSharingMetadata localizedApplicationName]
  -[LPiCloudSharingMetadata _enumerateAsynchronousFields:]
  -[LPiCloudSharingMetadata populateMetadataForBackwardCompatibility:]
  -[LPiCloudSharingMetadata applicationBundleIdenfier]
  -[LPiCloudSharingMetadata setApplicationBundleIdenfier:]
  -[LPiCloudSharingMetadata computeIcon]
  -[LPiCloudSharingMetadata _topCaptionStringWithApplicationName:]
  -[LPiCloudSharingMetadata _bottomCaptionStringWithApplicationName:]
  -[LPiCloudSharingMetadata presentationPropertiesForTransformer:]
  -[LPiCloudSharingMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiCloudSharingMetadata .cxx_destruct]
  -[LPiCloudSharingMetadata icon]
  -[LPiCloudSharingMetadata setTitle:]
  -[LPiCloudSharingMetadata encodeWithCoder:]
  -[LPiCloudSharingMetadata setIcon:]
  -[LPiCloudSharingMetadata title]
  -[LPiCloudSharingMetadata isEqual:]
  -[LPiCloudSharingMetadata setApplication:]
  -[LPiCloudSharingMetadata initWithCoder:]
  -[LPiCloudSharingMetadata previewSummaryForTransformer:]
  -[LPiCloudSharingMetadata previewImageForTransformer:]


LPGameCenterInvitationMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *game
 @property  LPImage *image
 @property  LPImage *icon
 @property  unsigned int numberOfPlayers
 @property  unsigned int minimumNumberOfPlayers
 @property  unsigned int maximumNumberOfPlayers

  // class methods
  +[LPGameCenterInvitationMetadata supportsSecureCoding]
  +[LPGameCenterInvitationMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPGameCenterInvitationMetadata copyWithZone:]
  -[LPGameCenterInvitationMetadata game]
  -[LPGameCenterInvitationMetadata _enumerateAsynchronousFields:]
  -[LPGameCenterInvitationMetadata populateMetadataForBackwardCompatibility:]
  -[LPGameCenterInvitationMetadata setGame:]
  -[LPGameCenterInvitationMetadata numberOfPlayers]
  -[LPGameCenterInvitationMetadata setNumberOfPlayers:]
  -[LPGameCenterInvitationMetadata minimumNumberOfPlayers]
  -[LPGameCenterInvitationMetadata setMinimumNumberOfPlayers:]
  -[LPGameCenterInvitationMetadata maximumNumberOfPlayers]
  -[LPGameCenterInvitationMetadata setMaximumNumberOfPlayers:]
  -[LPGameCenterInvitationMetadata presentationPropertiesForTransformer:]
  -[LPGameCenterInvitationMetadata canGeneratePresentationPropertiesForURL:]
  -[LPGameCenterInvitationMetadata .cxx_destruct]
  -[LPGameCenterInvitationMetadata setImage:]
  -[LPGameCenterInvitationMetadata icon]
  -[LPGameCenterInvitationMetadata invitationText]
  -[LPGameCenterInvitationMetadata playerCountText]
  -[LPGameCenterInvitationMetadata image]
  -[LPGameCenterInvitationMetadata encodeWithCoder:]
  -[LPGameCenterInvitationMetadata setIcon:]
  -[LPGameCenterInvitationMetadata isEqual:]
  -[LPGameCenterInvitationMetadata initWithCoder:]
  -[LPGameCenterInvitationMetadata previewSummaryForTransformer:]
  -[LPGameCenterInvitationMetadata previewImageForTransformer:]


LPiCloudFamilyInvitationMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *action
 @property  NSString *kind
 @property  LPImage *image
 @property  LPImage *icon

  // class methods
  +[LPiCloudFamilyInvitationMetadata supportsSecureCoding]
  +[LPiCloudFamilyInvitationMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPiCloudFamilyInvitationMetadata copyWithZone:]
  -[LPiCloudFamilyInvitationMetadata setSubtitle:]
  -[LPiCloudFamilyInvitationMetadata _enumerateAsynchronousFields:]
  -[LPiCloudFamilyInvitationMetadata populateMetadataForBackwardCompatibility:]
  -[LPiCloudFamilyInvitationMetadata presentationPropertiesForTransformer:]
  -[LPiCloudFamilyInvitationMetadata canGeneratePresentationPropertiesForURL:]
  -[LPiCloudFamilyInvitationMetadata setAction:]
  -[LPiCloudFamilyInvitationMetadata .cxx_destruct]
  -[LPiCloudFamilyInvitationMetadata setImage:]
  -[LPiCloudFamilyInvitationMetadata action]
  -[LPiCloudFamilyInvitationMetadata icon]
  -[LPiCloudFamilyInvitationMetadata kind]
  -[LPiCloudFamilyInvitationMetadata setTitle:]
  -[LPiCloudFamilyInvitationMetadata image]
  -[LPiCloudFamilyInvitationMetadata encodeWithCoder:]
  -[LPiCloudFamilyInvitationMetadata setKind:]
  -[LPiCloudFamilyInvitationMetadata setIcon:]
  -[LPiCloudFamilyInvitationMetadata title]
  -[LPiCloudFamilyInvitationMetadata isEqual:]
  -[LPiCloudFamilyInvitationMetadata subtitle]
  -[LPiCloudFamilyInvitationMetadata initWithCoder:]
  -[LPiCloudFamilyInvitationMetadata previewSummaryForTransformer:]
  -[LPiCloudFamilyInvitationMetadata previewImageForTransformer:]


LPMapMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name
 @property  {CLLocationCoordinate2D=dd} location
 @property  NSString *address
 @property  CNPostalAddress *addressComponents
 @property  NSString *category
 @property  LPImage *categoryIcon
 @property  NSString *searchQuery
 @property  NSString *directionsType
 @property  NSNumber *transportType
 @property  NSString *directionsSourceAddress
 @property  CNPostalAddress *directionsSourceAddressComponents
 @property  NSString *directionsSourceLocationName
 @property  NSString *directionsDestinationAddress
 @property  CNPostalAddress *directionsDestinationAddressComponents
 @property  NSString *directionsDestinationLocationName
 @property  NSNumber *distance
 @property  LPImage *image
 @property  LPImage *darkImage

  // class methods
  +[LPMapMetadata supportsSecureCoding]
  +[LPMapMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPMapMetadata _style]
  -[LPMapMetadata _address]
  -[LPMapMetadata copyWithZone:]
  -[LPMapMetadata distance]
  -[LPMapMetadata setDistance:]
  -[LPMapMetadata category]
  -[LPMapMetadata init]
  -[LPMapMetadata _enumerateAsynchronousFields:]
  -[LPMapMetadata populateMetadataForBackwardCompatibility:]
  -[LPMapMetadata setAddress:]
  -[LPMapMetadata categoryIcon]
  -[LPMapMetadata directionsSourceAddress]
  -[LPMapMetadata directionsSourceAddressComponents]
  -[LPMapMetadata directionsSourceLocationName]
  -[LPMapMetadata directionsDestinationAddress]
  -[LPMapMetadata directionsDestinationAddressComponents]
  -[LPMapMetadata directionsDestinationLocationName]
  -[LPMapMetadata _directionsSourceAddress]
  -[LPMapMetadata _directionsDestinationAddress]
  -[LPMapMetadata presentationPropertiesForTransformer:]
  -[LPMapMetadata address]
  -[LPMapMetadata canGeneratePresentationPropertiesForURL:]
  -[LPMapMetadata setDirectionsType:]
  -[LPMapMetadata directionsType]
  -[LPMapMetadata .cxx_destruct]
  -[LPMapMetadata setImage:]
  -[LPMapMetadata name]
  -[LPMapMetadata setCategoryIcon:]
  -[LPMapMetadata setDarkImage:]
  -[LPMapMetadata setDirectionsSourceAddress:]
  -[LPMapMetadata setDirectionsSourceLocationName:]
  -[LPMapMetadata setDirectionsSourceAddressComponents:]
  -[LPMapMetadata setDirectionsDestinationAddress:]
  -[LPMapMetadata setDirectionsDestinationAddressComponents:]
  -[LPMapMetadata setDirectionsDestinationLocationName:]
  -[LPMapMetadata image]
  -[LPMapMetadata setLocation:]
  -[LPMapMetadata encodeWithCoder:]
  -[LPMapMetadata transportType]
  -[LPMapMetadata _isDirections]
  -[LPMapMetadata _deduplicatedAddress]
  -[LPMapMetadata _singleLineVerboseDescription]
  -[LPMapMetadata _iconForTransport]
  -[LPMapMetadata _resolvedImage]
  -[LPMapMetadata _singleLineShortDescription]
  -[LPMapMetadata _topLineForTransformer:]
  -[LPMapMetadata _bottomLineForTwoUpForTransformer:]
  -[LPMapMetadata addressComponents]
  -[LPMapMetadata isEqual:]
  -[LPMapMetadata location]
  -[LPMapMetadata setAddressComponents:]
  -[LPMapMetadata setSearchQuery:]
  -[LPMapMetadata _name]
  -[LPMapMetadata setCategory:]
  -[LPMapMetadata searchQuery]
  -[LPMapMetadata setName:]
  -[LPMapMetadata darkImage]
  -[LPMapMetadata setTransportType:]
  -[LPMapMetadata initWithCoder:]
  -[LPMapMetadata previewSummaryForTransformer:]
  -[LPMapMetadata previewImageForTransformer:]


LPMapCollectionMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name
 @property  unsigned int numberOfItems
 @property  LPImage *icon
 @property  LPImage *image
 @property  LPImage *darkImage
 @property  NSArray *addresses
 @property  NSString *publisherName
 @property  LPImage *publisherIcon

  // class methods
  +[LPMapCollectionMetadata supportsSecureCoding]
  +[LPMapCollectionMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPMapCollectionMetadata copyWithZone:]
  -[LPMapCollectionMetadata addresses]
  -[LPMapCollectionMetadata numberOfItems]
  -[LPMapCollectionMetadata setNumberOfItems:]
  -[LPMapCollectionMetadata _enumerateAsynchronousFields:]
  -[LPMapCollectionMetadata populateMetadataForBackwardCompatibility:]
  -[LPMapCollectionMetadata setPublisherName:]
  -[LPMapCollectionMetadata publisherIcon]
  -[LPMapCollectionMetadata setPublisherIcon:]
  -[LPMapCollectionMetadata presentationPropertiesForTransformer:]
  -[LPMapCollectionMetadata canGeneratePresentationPropertiesForURL:]
  -[LPMapCollectionMetadata .cxx_destruct]
  -[LPMapCollectionMetadata setImage:]
  -[LPMapCollectionMetadata name]
  -[LPMapCollectionMetadata icon]
  -[LPMapCollectionMetadata setDarkImage:]
  -[LPMapCollectionMetadata image]
  -[LPMapCollectionMetadata encodeWithCoder:]
  -[LPMapCollectionMetadata setIcon:]
  -[LPMapCollectionMetadata _resolvedImage]
  -[LPMapCollectionMetadata isEqual:]
  -[LPMapCollectionMetadata publisherName]
  -[LPMapCollectionMetadata setName:]
  -[LPMapCollectionMetadata setAddresses:]
  -[LPMapCollectionMetadata _bottomLine]
  -[LPMapCollectionMetadata darkImage]
  -[LPMapCollectionMetadata initWithCoder:]
  -[LPMapCollectionMetadata previewSummaryForTransformer:]
  -[LPMapCollectionMetadata previewImageForTransformer:]


LPMapCollectionPublisherMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name
 @property  LPImage *icon
 @property  unsigned int numberOfPublishedCollections

  // class methods
  +[LPMapCollectionPublisherMetadata supportsSecureCoding]
  +[LPMapCollectionPublisherMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPMapCollectionPublisherMetadata copyWithZone:]
  -[LPMapCollectionPublisherMetadata _enumerateAsynchronousFields:]
  -[LPMapCollectionPublisherMetadata populateMetadataForBackwardCompatibility:]
  -[LPMapCollectionPublisherMetadata numberOfPublishedCollections]
  -[LPMapCollectionPublisherMetadata setNumberOfPublishedCollections:]
  -[LPMapCollectionPublisherMetadata presentationPropertiesForTransformer:]
  -[LPMapCollectionPublisherMetadata canGeneratePresentationPropertiesForURL:]
  -[LPMapCollectionPublisherMetadata .cxx_destruct]
  -[LPMapCollectionPublisherMetadata name]
  -[LPMapCollectionPublisherMetadata icon]
  -[LPMapCollectionPublisherMetadata encodeWithCoder:]
  -[LPMapCollectionPublisherMetadata setIcon:]
  -[LPMapCollectionPublisherMetadata isEqual:]
  -[LPMapCollectionPublisherMetadata setName:]
  -[LPMapCollectionPublisherMetadata _bottomLine]
  -[LPMapCollectionPublisherMetadata initWithCoder:]
  -[LPMapCollectionPublisherMetadata previewSummaryForTransformer:]
  -[LPMapCollectionPublisherMetadata previewImageForTransformer:]


LPFileMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility, LPMultipleMetadataPresentationTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name
 @property  NSString *type
 @property  unsigned long size
 @property  LPImage *thumbnail
 @property  LPImage *icon
 @property  NSDate *creationDate

  // class methods
  +[LPFileMetadata supportsSecureCoding]
  +[LPFileMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPFileMetadata copyWithZone:]
  -[LPFileMetadata thumbnail]
  -[LPFileMetadata _enumerateAsynchronousFields:]
  -[LPFileMetadata populateMetadataForBackwardCompatibility:]
  -[LPFileMetadata presentationPropertiesForTransformer:]
  -[LPFileMetadata canGeneratePresentationPropertiesForURL:]
  -[LPFileMetadata creationDate]
  -[LPFileMetadata _isImage]
  -[LPFileMetadata size]
  -[LPFileMetadata setType:]
  -[LPFileMetadata .cxx_destruct]
  -[LPFileMetadata name]
  -[LPFileMetadata icon]
  -[LPFileMetadata setThumbnail:]
  -[LPFileMetadata encodeWithCoder:]
  -[LPFileMetadata setIcon:]
  -[LPFileMetadata type]
  -[LPFileMetadata isEqual:]
  -[LPFileMetadata setSize:]
  -[LPFileMetadata summaryTypeForTransformer:]
  -[LPFileMetadata _fileTypeStringForTransformer:]
  -[LPFileMetadata _fileDetailStringForTransformer:]
  -[LPFileMetadata _isWatchFace]
  -[LPFileMetadata _nameForTransformer:]
  -[LPFileMetadata _bottomCaptionStringForTransformer:]
  -[LPFileMetadata _shouldUseSquareIcon]
  -[LPFileMetadata _shouldUseCircularIcon]
  -[LPFileMetadata _shouldUseBackground]
  -[LPFileMetadata _singleLineDescriptionForRemoteFileWithTransformer:]
  -[LPFileMetadata _isPlainText]
  -[LPFileMetadata setCreationDate:]
  -[LPFileMetadata setName:]
  -[LPFileMetadata initWithCoder:]
  -[LPFileMetadata previewSummaryForTransformer:]
  -[LPFileMetadata previewImageForTransformer:]


LPAppleNewsMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *source
 @property  NSString *title

  // class methods
  +[LPAppleNewsMetadata supportsSecureCoding]
  +[LPAppleNewsMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPAppleNewsMetadata copyWithZone:]
  -[LPAppleNewsMetadata setSource:]
  -[LPAppleNewsMetadata presentationPropertiesForTransformer:]
  -[LPAppleNewsMetadata canGeneratePresentationPropertiesForURL:]
  -[LPAppleNewsMetadata source]
  -[LPAppleNewsMetadata .cxx_destruct]
  -[LPAppleNewsMetadata setTitle:]
  -[LPAppleNewsMetadata encodeWithCoder:]
  -[LPAppleNewsMetadata title]
  -[LPAppleNewsMetadata isEqual:]
  -[LPAppleNewsMetadata initWithCoder:]
  -[LPAppleNewsMetadata previewSummaryForTransformer:]
  -[LPAppleNewsMetadata previewImageForTransformer:]


LPAppleTVMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *title
 @property  NSString *subtitle
 @property  LPImage *artwork

  // class methods
  +[LPAppleTVMetadata supportsSecureCoding]
  +[LPAppleTVMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPAppleTVMetadata copyWithZone:]
  -[LPAppleTVMetadata artwork]
  -[LPAppleTVMetadata setSubtitle:]
  -[LPAppleTVMetadata _enumerateAsynchronousFields:]
  -[LPAppleTVMetadata presentationPropertiesForTransformer:]
  -[LPAppleTVMetadata canGeneratePresentationPropertiesForURL:]
  -[LPAppleTVMetadata .cxx_destruct]
  -[LPAppleTVMetadata setTitle:]
  -[LPAppleTVMetadata encodeWithCoder:]
  -[LPAppleTVMetadata title]
  -[LPAppleTVMetadata isEqual:]
  -[LPAppleTVMetadata setArtwork:]
  -[LPAppleTVMetadata subtitle]
  -[LPAppleTVMetadata initWithCoder:]
  -[LPAppleTVMetadata previewSummaryForTransformer:]
  -[LPAppleTVMetadata previewImageForTransformer:]


LPApplePhotosMomentMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *title
 @property  unsigned long photoCount
 @property  unsigned long videoCount
 @property  unsigned long otherItemCount
 @property  LPImage *keyPhoto
 @property  NSDate *expirationDate
 @property  NSDate *earliestAssetDate
 @property  NSDate *latestAssetDate

  // class methods
  +[LPApplePhotosMomentMetadata supportsSecureCoding]
  +[LPApplePhotosMomentMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPApplePhotosMomentMetadata copyWithZone:]
  -[LPApplePhotosMomentMetadata _enumerateAsynchronousFields:]
  -[LPApplePhotosMomentMetadata populateMetadataForBackwardCompatibility:]
  -[LPApplePhotosMomentMetadata setKeyPhoto:]
  -[LPApplePhotosMomentMetadata presentationPropertiesForTransformer:]
  -[LPApplePhotosMomentMetadata canGeneratePresentationPropertiesForURL:]
  -[LPApplePhotosMomentMetadata videoCount]
  -[LPApplePhotosMomentMetadata setExpirationDate:]
  -[LPApplePhotosMomentMetadata .cxx_destruct]
  -[LPApplePhotosMomentMetadata setTitle:]
  -[LPApplePhotosMomentMetadata encodeWithCoder:]
  -[LPApplePhotosMomentMetadata title]
  -[LPApplePhotosMomentMetadata photoCount]
  -[LPApplePhotosMomentMetadata isEqual:]
  -[LPApplePhotosMomentMetadata keyPhoto]
  -[LPApplePhotosMomentMetadata expirationDate]
  -[LPApplePhotosMomentMetadata setPhotoCount:]
  -[LPApplePhotosMomentMetadata otherItemCount]
  -[LPApplePhotosMomentMetadata setOtherItemCount:]
  -[LPApplePhotosMomentMetadata earliestAssetDate]
  -[LPApplePhotosMomentMetadata setEarliestAssetDate:]
  -[LPApplePhotosMomentMetadata latestAssetDate]
  -[LPApplePhotosMomentMetadata setLatestAssetDate:]
  -[LPApplePhotosMomentMetadata setVideoCount:]
  -[LPApplePhotosMomentMetadata initWithCoder:]
  -[LPApplePhotosMomentMetadata previewSummaryForTransformer:]
  -[LPApplePhotosMomentMetadata previewImageForTransformer:]


LPApplePhotosStatusMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSAttributedString *status

  // class methods
  +[LPApplePhotosStatusMetadata supportsSecureCoding]
  +[LPApplePhotosStatusMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPApplePhotosStatusMetadata copyWithZone:]
  -[LPApplePhotosStatusMetadata presentationPropertiesForTransformer:]
  -[LPApplePhotosStatusMetadata canGeneratePresentationPropertiesForURL:]
  -[LPApplePhotosStatusMetadata .cxx_destruct]
  -[LPApplePhotosStatusMetadata encodeWithCoder:]
  -[LPApplePhotosStatusMetadata isEqual:]
  -[LPApplePhotosStatusMetadata setStatus:]
  -[LPApplePhotosStatusMetadata status]
  -[LPApplePhotosStatusMetadata initWithCoder:]


LPSharingStatusMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSAttributedString *status

  // class methods
  +[LPSharingStatusMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPSharingStatusMetadata copyWithZone:]
  -[LPSharingStatusMetadata presentationPropertiesForTransformer:]
  -[LPSharingStatusMetadata canGeneratePresentationPropertiesForURL:]
  -[LPSharingStatusMetadata .cxx_destruct]
  -[LPSharingStatusMetadata isEqual:]
  -[LPSharingStatusMetadata setStatus:]
  -[LPSharingStatusMetadata status]


LPBusinessChatMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *subtitle

  // class methods
  +[LPBusinessChatMetadata supportsSecureCoding]
  +[LPBusinessChatMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPBusinessChatMetadata copyWithZone:]
  -[LPBusinessChatMetadata setSubtitle:]
  -[LPBusinessChatMetadata presentationPropertiesForTransformer:]
  -[LPBusinessChatMetadata canGeneratePresentationPropertiesForURL:]
  -[LPBusinessChatMetadata .cxx_destruct]
  -[LPBusinessChatMetadata encodeWithCoder:]
  -[LPBusinessChatMetadata isEqual:]
  -[LPBusinessChatMetadata subtitle]
  -[LPBusinessChatMetadata initWithCoder:]
  -[LPBusinessChatMetadata previewSummaryForTransformer:]
  -[LPBusinessChatMetadata previewImageForTransformer:]


LPWalletPassMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer, LPLinkMetadataBackwardCompatibility>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name
 @property  long long style
 @property  NSDate *eventDate
 @property  NSDate *expirationDate

  // class methods
  +[LPWalletPassMetadata supportsSecureCoding]
  +[LPWalletPassMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPWalletPassMetadata copyWithZone:]
  -[LPWalletPassMetadata eventDate]
  -[LPWalletPassMetadata populateMetadataForBackwardCompatibility:]
  -[LPWalletPassMetadata presentationPropertiesForTransformer:]
  -[LPWalletPassMetadata canGeneratePresentationPropertiesForURL:]
  -[LPWalletPassMetadata setExpirationDate:]
  -[LPWalletPassMetadata _subtitle]
  -[LPWalletPassMetadata .cxx_destruct]
  -[LPWalletPassMetadata name]
  -[LPWalletPassMetadata setEventDate:]
  -[LPWalletPassMetadata encodeWithCoder:]
  -[LPWalletPassMetadata isEqual:]
  -[LPWalletPassMetadata expirationDate]
  -[LPWalletPassMetadata setName:]
  -[LPWalletPassMetadata setStyle:]
  -[LPWalletPassMetadata initWithCoder:]
  -[LPWalletPassMetadata previewSummaryForTransformer:]
  -[LPWalletPassMetadata previewImageForTransformer:]
  -[LPWalletPassMetadata style]


LPAppStoreStoryMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer, LPLinkMetadataPreviewTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *subtitle

  // class methods
  +[LPAppStoreStoryMetadata supportsSecureCoding]
  +[LPAppStoreStoryMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPAppStoreStoryMetadata copyWithZone:]
  -[LPAppStoreStoryMetadata setSubtitle:]
  -[LPAppStoreStoryMetadata presentationPropertiesForTransformer:]
  -[LPAppStoreStoryMetadata canGeneratePresentationPropertiesForURL:]
  -[LPAppStoreStoryMetadata .cxx_destruct]
  -[LPAppStoreStoryMetadata encodeWithCoder:]
  -[LPAppStoreStoryMetadata isEqual:]
  -[LPAppStoreStoryMetadata subtitle]
  -[LPAppStoreStoryMetadata initWithCoder:]
  -[LPAppStoreStoryMetadata previewSummaryForTransformer:]
  -[LPAppStoreStoryMetadata previewImageForTransformer:]


LPSummarizedLinkMetadata : LPSpecializationMetadata <LPLinkMetadataPresentationTransformer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPSummarizedLinkMetadata supportsSecureCoding]
  +[LPSummarizedLinkMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPSummarizedLinkMetadata copyWithZone:]
  -[LPSummarizedLinkMetadata presentationPropertiesForTransformer:]
  -[LPSummarizedLinkMetadata canGeneratePresentationPropertiesForURL:]
  -[LPSummarizedLinkMetadata encodeWithCoder:]
  -[LPSummarizedLinkMetadata isEqual:]
  -[LPSummarizedLinkMetadata initWithCoder:]


LPAssociatedApplicationMetadata : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *bundleIdentifier
 @property  LPImage *icon
 @property  NSString *caption
 @property  NSString *action
 @property  long long clipAction

  // class methods
  +[LPAssociatedApplicationMetadata supportsSecureCoding]
  +[LPAssociatedApplicationMetadata keyPathsForValuesAffecting_dummyPropertyForObservation]

  // instance methods
  -[LPAssociatedApplicationMetadata copyWithZone:]
  -[LPAssociatedApplicationMetadata clipAction]
  -[LPAssociatedApplicationMetadata setClipAction:]
  -[LPAssociatedApplicationMetadata setAction:]
  -[LPAssociatedApplicationMetadata setCaption:]
  -[LPAssociatedApplicationMetadata .cxx_destruct]
  -[LPAssociatedApplicationMetadata action]
  -[LPAssociatedApplicationMetadata icon]
  -[LPAssociatedApplicationMetadata encodeWithCoder:]
  -[LPAssociatedApplicationMetadata setIcon:]
  -[LPAssociatedApplicationMetadata setBundleIdentifier:]
  -[LPAssociatedApplicationMetadata isEqual:]
  -[LPAssociatedApplicationMetadata bundleIdentifier]
  -[LPAssociatedApplicationMetadata initWithCoder:]
  -[LPAssociatedApplicationMetadata caption]


LPHorizontalCaptionPairView : LPComponentView <LPTextStyleable, LPContentInsettable>
  // instance methods
  -[LPHorizontalCaptionPairView setContentInset:]
  -[LPHorizontalCaptionPairView ascender]
  -[LPHorizontalCaptionPairView init]
  -[LPHorizontalCaptionPairView firstLineLeading]
  -[LPHorizontalCaptionPairView lastLineDescent]
  -[LPHorizontalCaptionPairView computedNumberOfLines]
  -[LPHorizontalCaptionPairView setOverrideMaximumNumberOfLines:]
  -[LPHorizontalCaptionPairView _layoutCaptionPairForSize:applyingLayout:]
  -[LPHorizontalCaptionPairView initWithLeadingText:leadingStyle:trailingText:trailingStyle:button:balancingMode:]
  -[LPHorizontalCaptionPairView buttonPressed:]
  -[LPHorizontalCaptionPairView .cxx_destruct]
  -[LPHorizontalCaptionPairView descender]
  -[LPHorizontalCaptionPairView sizeThatFits:]
  -[LPHorizontalCaptionPairView layoutComponentView]


LPLinkMetadataStatusTransformer : NSObject /usr/lib/libc++.1.dylib
 @property  LPLinkMetadata *metadata
 @property  <LPLinkMetadataStatusTransformerDelegate> *delegate
 @property  BOOL wantsStatusItem
 @property  NSAttributedString *statusText
 @property  NSURL *actionURL
 @property  NSURL *canonicalURL

  // instance methods
  -[LPLinkMetadataStatusTransformer originalURL]
  -[LPLinkMetadataStatusTransformer setMetadata:]
  -[LPLinkMetadataStatusTransformer canonicalURL]
  -[LPLinkMetadataStatusTransformer wantsStatusItem]
  -[LPLinkMetadataStatusTransformer dealloc]
  -[LPLinkMetadataStatusTransformer .cxx_destruct]
  -[LPLinkMetadataStatusTransformer statusText]
  -[LPLinkMetadataStatusTransformer actionURL]
  -[LPLinkMetadataStatusTransformer setDelegate:]
  -[LPLinkMetadataStatusTransformer metadata]
  -[LPLinkMetadataStatusTransformer delegate]
  -[LPLinkMetadataStatusTransformer initWithMetadata:URL:]


LPEmailCompatibleHTMLImageComponent : LPHTMLComponent
  // class methods
  +[LPEmailCompatibleHTMLImageComponent styleSet]
  +[LPEmailCompatibleHTMLImageComponent ruleDictionaryForStyle:]

  // instance methods
  -[LPEmailCompatibleHTMLImageComponent initWithImage:style:themePath:generator:]


LPHighlightGestureRecognizer : UIGestureRecognizer /System/Library/Frameworks/WebKit.framework/WebKit
  // instance methods
  -[LPHighlightGestureRecognizer touchesBegan:withEvent:]
  -[LPHighlightGestureRecognizer startHighlightIfPossible]
  -[LPHighlightGestureRecognizer updateHighlight]
  -[LPHighlightGestureRecognizer cancelHighlight]
  -[LPHighlightGestureRecognizer _locationInWindow]
  -[LPHighlightGestureRecognizer touchesCancelled:withEvent:]
  -[LPHighlightGestureRecognizer touchesMoved:withEvent:]
  -[LPHighlightGestureRecognizer touchesEnded:withEvent:]


LPRedditMetadataProviderSpecialization : LPMetadataProviderSpecialization
  // class methods
  +[LPRedditMetadataProviderSpecialization specialization]
  +[LPRedditMetadataProviderSpecialization generateSpecializedMetadataForCompleteMetadata:withContext:completionHandler:]

  // instance methods
  -[LPRedditMetadataProviderSpecialization .cxx_destruct]


LPFetcherConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  WKWebView *webViewForProcessSharing
 @property  long long maximumResponseCount
 @property  LPEvent *rootEvent

  // instance methods
  -[LPFetcherConfiguration copyWithZone:]
  -[LPFetcherConfiguration rootEvent]
  -[LPFetcherConfiguration setRootEvent:]
  -[LPFetcherConfiguration webViewForProcessSharing]
  -[LPFetcherConfiguration maximumResponseCount]
  -[LPFetcherConfiguration setMaximumResponseCount:]
  -[LPFetcherConfiguration dealloc]
  -[LPFetcherConfiguration .cxx_destruct]
  -[LPFetcherConfiguration setWebViewForProcessSharing:]


LPFetcher : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned int _loggingID
 @property  LPEvent *_event
 @property  id userData

  // instance methods
  -[LPFetcher _event]
  -[LPFetcher setUserData:]
  -[LPFetcher init]
  -[LPFetcher _loggingID]
  -[LPFetcher set_event:]
  -[LPFetcher .cxx_destruct]
  -[LPFetcher userData]
  -[LPFetcher cancel]
  -[LPFetcher fetchWithConfiguration:completionHandler:]


LPURLFetcher : LPFetcher <WKNavigationDelegate>
 @property  NSURL *URL
 @property  Class responseClass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPURLFetcher _failedWithErrorCode:underlyingError:]
  -[LPURLFetcher _completedWithData:MIMEType:error:]
  -[LPURLFetcher responseClass]
  -[LPURLFetcher webView:didFailProvisionalNavigation:withError:]
  -[LPURLFetcher .cxx_destruct]
  -[LPURLFetcher setResponseClass:]
  -[LPURLFetcher cancel]
  -[LPURLFetcher webView:decidePolicyForNavigationAction:decisionHandler:]
  -[LPURLFetcher webView:decidePolicyForNavigationResponse:decisionHandler:]
  -[LPURLFetcher webView:didFinishNavigation:]
  -[LPURLFetcher webViewWebContentProcessDidTerminate:]
  -[LPURLFetcher URL]
  -[LPURLFetcher webView:didFailNavigation:withError:]
  -[LPURLFetcher setURL:]
  -[LPURLFetcher fetchWithConfiguration:completionHandler:]


LPAssociatedApplicationMetadataFetcher : LPFetcher
 @property  NSURL *URL
 @property  NSString *bundleIdentifier

  // instance methods
  -[LPAssociatedApplicationMetadataFetcher _failedWithErrorCode:underlyingError:]
  -[LPAssociatedApplicationMetadataFetcher _completedWithClipMetadata:iconURL:error:]
  -[LPAssociatedApplicationMetadataFetcher .cxx_destruct]
  -[LPAssociatedApplicationMetadataFetcher cancel]
  -[LPAssociatedApplicationMetadataFetcher setBundleIdentifier:]
  -[LPAssociatedApplicationMetadataFetcher URL]
  -[LPAssociatedApplicationMetadataFetcher bundleIdentifier]
  -[LPAssociatedApplicationMetadataFetcher setURL:]
  -[LPAssociatedApplicationMetadataFetcher fetchWithConfiguration:completionHandler:]


LPFetcherResponse : NSObject /usr/lib/libc++.1.dylib
 @property  long long state
 @property  id userData

  // instance methods
  -[LPFetcherResponse .cxx_destruct]
  -[LPFetcherResponse userData]
  -[LPFetcherResponse state]
  -[LPFetcherResponse initWithState:fetcher:]


LPFetcherImageResponse : LPFetcherResponse <LPFetcherURLResponse>
 @property  LPImage *image
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPFetcherImageResponse isValidMIMEType:]
  +[LPFetcherImageResponse responseForFetcher:withData:MIMEType:]
  +[LPFetcherImageResponse imagePropertiesForFetcher:]

  // instance methods
  -[LPFetcherImageResponse initWithImage:fetcher:]
  -[LPFetcherImageResponse .cxx_destruct]
  -[LPFetcherImageResponse image]


LPFetcherJSONResponse : LPFetcherResponse <LPFetcherURLResponse>
 @property  id rootObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPFetcherJSONResponse isValidMIMEType:]
  +[LPFetcherJSONResponse responseForFetcher:withData:MIMEType:]

  // instance methods
  -[LPFetcherJSONResponse rootObject]
  -[LPFetcherJSONResponse initWithRootObject:fetcher:]
  -[LPFetcherJSONResponse .cxx_destruct]


LPFetcherStringResponse : LPFetcherResponse
 @property  NSString *string

  // instance methods
  -[LPFetcherStringResponse initWithString:fetcher:]
  -[LPFetcherStringResponse .cxx_destruct]
  -[LPFetcherStringResponse string]


LPFetcherURLResponse : LPFetcherResponse
 @property  NSURL *URL

  // instance methods
  -[LPFetcherURLResponse initWithURL:fetcher:]
  -[LPFetcherURLResponse .cxx_destruct]
  -[LPFetcherURLResponse URL]


LPFetcherErrorResponse : LPFetcherResponse
 @property  NSError *error

  // instance methods
  -[LPFetcherErrorResponse .cxx_destruct]
  -[LPFetcherErrorResponse error]
  -[LPFetcherErrorResponse initWithError:fetcher:]


LPFetcherClipMetadataResponse : LPFetcherResponse
 @property  CPSClipMetadata *metadata
 @property  NSURL *iconURL

  // instance methods
  -[LPFetcherClipMetadataResponse initWithClipMetadata:iconURL:fetcher:]
  -[LPFetcherClipMetadataResponse .cxx_destruct]
  -[LPFetcherClipMetadataResponse metadata]
  -[LPFetcherClipMetadataResponse iconURL]


LPFetcherGroupTask : NSObject /usr/lib/libc++.1.dylib
 @property  LPFetcher *fetcher
 @property  LPFetcherResponse *response
 @property  BOOL hasStarted

  // instance methods
  -[LPFetcherGroupTask hasStarted]
  -[LPFetcherGroupTask setHasStarted:]
  -[LPFetcherGroupTask fetcher]
  -[LPFetcherGroupTask setFetcher:]
  -[LPFetcherGroupTask .cxx_destruct]
  -[LPFetcherGroupTask setResponse:]
  -[LPFetcherGroupTask response]


LPFetcherGroup : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[LPFetcherGroup _completed]
  -[LPFetcherGroup startFetchesIfNeeded]
  -[LPFetcherGroup _addFetcher:atIndex:]
  -[LPFetcherGroup numberOfActiveFetches]
  -[LPFetcherGroup evaluateCompleteness]
  -[LPFetcherGroup _responsesRespectingPolicy]
  -[LPFetcherGroup appendFetcher:]
  -[LPFetcherGroup initWithPolicy:configuration:description:completionHandler:]
  -[LPFetcherGroup prependFetcher:]
  -[LPFetcherGroup doneAddingFetchers]
  -[LPFetcherGroup .cxx_destruct]
  -[LPFetcherGroup cancel]


LPURLSuffixChecker : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[LPURLSuffixChecker addStringToFailedSuffixes:]
  -[LPURLSuffixChecker dealloc]
  -[LPURLSuffixChecker initWithSuffixes:]
  -[LPURLSuffixChecker hasSuffix:remainingPrefix:]
  -[LPURLSuffixChecker hasSuffix:]
  -[LPURLSuffixChecker .cxx_destruct]
  -[LPURLSuffixChecker insertString:intoTrieWithCache:]


LPApplicationCompatibilityQuirks : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[LPApplicationCompatibilityQuirks needsFreshWKUserContentController]


LPAppleNewsMetadataProviderSpecialization : LPMetadataProviderSpecialization
  // class methods
  +[LPAppleNewsMetadataProviderSpecialization specialization]
  +[LPAppleNewsMetadataProviderSpecialization generateSpecializedMetadataForCompleteMetadata:withContext:completionHandler:]


LPHTMLVerticalTextStackComponent : LPHTMLComponent
  // class methods
  +[LPHTMLVerticalTextStackComponent additionalRulesForStyle:]
  +[LPHTMLVerticalTextStackComponent styleSet]
  +[LPHTMLVerticalTextStackComponent baseRules]
  +[LPHTMLVerticalTextStackComponent ruleDictionaryForStyle:]

  // instance methods
  -[LPHTMLVerticalTextStackComponent componentForRow:style:name:firstLineLeading:]
  -[LPHTMLVerticalTextStackComponent .cxx_destruct]
  -[LPHTMLVerticalTextStackComponent buildComponents]
  -[LPHTMLVerticalTextStackComponent initWithStyle:presentationProperties:themePath:generator:]


LPYouTubeVideoView : LPVideoView <LPYouTubePlayerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPYouTubeVideoView setPlaying:]
  -[LPYouTubeVideoView setMuted:]
  -[LPYouTubeVideoView volume]
  -[LPYouTubeVideoView setVolume:]
  -[LPYouTubeVideoView isMuted]
  -[LPYouTubeVideoView enterCustomFullScreen]
  -[LPYouTubeVideoView .cxx_destruct]
  -[LPYouTubeVideoView youTubePlayer:didChangeToState:]
  -[LPYouTubeVideoView youTubePlayer:didReceiveError:]
  -[LPYouTubeVideoView youTubePlayer:didChangeToFullScreen:]
  -[LPYouTubeVideoView initWithVideo:style:posterFrame:posterFrameStyle:configuration:]
  -[LPYouTubeVideoView usesSharedAudioSession]
  -[LPYouTubeVideoView shouldShowMuteButton]
  -[LPYouTubeVideoView usesCustomFullScreenImplementation]
  -[LPYouTubeVideoView createVideoPlayerView]


LPEmailCompatibleHTMLInnerLinkComponent : LPHTMLComponent
  // instance methods
  -[LPEmailCompatibleHTMLInnerLinkComponent initWithThemePath:generator:]


LPMultipleImageView : LPComponentView
  // instance methods
  -[LPMultipleImageView init]
  -[LPMultipleImageView .cxx_destruct]
  -[LPMultipleImageView ensureImageViews]
  -[LPMultipleImageView _availableSizeForImageNumber:withLayout:withinSize:]
  -[LPMultipleImageView _computeRectForImageAtIndex:fittingSize:width:height:size:multipleImageLayout:]
  -[LPMultipleImageView layoutImagesForSize:applyingLayout:]
  -[LPMultipleImageView initWithImages:style:]
  -[LPMultipleImageView sizeThatFits:]
  -[LPMultipleImageView layoutComponentView]


LPVideoViewConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  BOOL disablePlayback
 @property  BOOL disablePlaybackControls
 @property  BOOL disableAutoPlay
 @property  BOOL allowsLoadingMediaWithAutoPlayDisabled
 @property  double fullScreenTransitionCornerRadius

  // instance methods
  -[LPVideoViewConfiguration copyWithZone:]
  -[LPVideoViewConfiguration disablePlayback]
  -[LPVideoViewConfiguration setDisablePlayback:]
  -[LPVideoViewConfiguration disablePlaybackControls]
  -[LPVideoViewConfiguration setDisablePlaybackControls:]
  -[LPVideoViewConfiguration setDisableAutoPlay:]
  -[LPVideoViewConfiguration allowsLoadingMediaWithAutoPlayDisabled]
  -[LPVideoViewConfiguration setAllowsLoadingMediaWithAutoPlayDisabled:]
  -[LPVideoViewConfiguration fullScreenTransitionCornerRadius]
  -[LPVideoViewConfiguration setFullScreenTransitionCornerRadius:]
  -[LPVideoViewConfiguration disableAutoPlay]


LPVideoView : LPComponentView <CALayerDelegate, UIGestureRecognizerDelegate, LPMediaPlayer>
 @property  LPVideoViewConfiguration *configuration
 @property  BOOL shouldAutoPlay
 @property  BOOL shouldShowMuteButton
 @property  BOOL usesSharedAudioSession
 @property  BOOL muted
 @property  BOOL playing
 @property  BOOL waitingForPlayback
 @property  BOOL fullScreen
 @property  BOOL hasEverPlayed
 @property  double volume
 @property  LPVideo *video
 @property  UIView *playbackView
 @property  unsigned int loggingID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL active
 @property  BOOL shouldUnmuteWhenUserAdjustsVolume
 @property  unsigned long lastInteractionTimestamp
 @property  double unobscuredAreaFraction

  // instance methods
  -[LPVideoView applicationWillEnterForeground:]
  -[LPVideoView setFullScreen:]
  -[LPVideoView setPlaying:]
  -[LPVideoView isPlaying]
  -[LPVideoView setMuted:]
  -[LPVideoView volume]
  -[LPVideoView init]
  -[LPVideoView setVolume:]
  -[LPVideoView applicationDidEnterBackground:]
  -[LPVideoView dealloc]
  -[LPVideoView isMuted]
  -[LPVideoView isParented]
  -[LPVideoView didEncounterPossiblyTransientPlaybackError]
  -[LPVideoView didEncounterPlaybackError]
  -[LPVideoView fullScreenVideoDidDismiss]
  -[LPVideoView enterCustomFullScreen]
  -[LPVideoView .cxx_destruct]
  -[LPVideoView isWaitingForPlayback]
  -[LPVideoView _buildVideoPlaceholderView]
  -[LPVideoView updatePlayButtonVisibility]
  -[LPVideoView showMuteButton]
  -[LPVideoView _createPulsingLoadIndicator]
  -[LPVideoView _startPlaybackWatchdogTimer]
  -[LPVideoView _createPosterFrameView]
  -[LPVideoView updateMuteButton]
  -[LPVideoView showPlayButtonAnimated:]
  -[LPVideoView hidePlayButtonAnimated:]
  -[LPVideoView _muteButtonHighlightLongPressRecognized:]
  -[LPVideoView _muteButtonTapRecognized:]
  -[LPVideoView userInteractedWithVideoView]
  -[LPVideoView hideMuteButton]
  -[LPVideoView fadeInMuteButton]
  -[LPVideoView shouldUnmuteWhenUserAdjustsVolume]
  -[LPVideoView lastInteractionTimestamp]
  -[LPVideoView unobscuredAreaFraction]
  -[LPVideoView componentViewDidMoveToWindow]
  -[LPVideoView shouldAllowHighlightToRecognizeSimultaneouslyWithGesture:]
  -[LPVideoView tapRecognized:]
  -[LPVideoView setActive:]
  -[LPVideoView isActive]
  -[LPVideoView enterFullScreen]
  -[LPVideoView sizeThatFits:]
  -[LPVideoView isFullScreen]
  -[LPVideoView configuration]
  -[LPVideoView video]
  -[LPVideoView shouldAutoPlay]
  -[LPVideoView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[LPVideoView loggingID]
  -[LPVideoView initWithVideo:style:posterFrame:posterFrameStyle:configuration:]
  -[LPVideoView playbackView]
  -[LPVideoView recreateFullScreenViewControllerIfNeeded]
  -[LPVideoView destroyFullScreenViewController]
  -[LPVideoView didChangePlayingState:]
  -[LPVideoView resetToPlaceholderView]
  -[LPVideoView hasEverPlayed]
  -[LPVideoView setHasEverPlayed:]
  -[LPVideoView setWaitingForPlayback:]
  -[LPVideoView _swapVideoPlaceholderForVideoForAutoPlay:]
  -[LPVideoView removePlaceholderViews]
  -[LPVideoView didChangeMutedState:]
  -[LPVideoView layoutComponentView]
  -[LPVideoView fullScreenVideoDidPresent]
  -[LPVideoView fullScreenVideoWillDismiss]
  -[LPVideoView beginLoadingMediaForPreroll]
  -[LPVideoView usesSharedAudioSession]
  -[LPVideoView shouldShowMuteButton]
  -[LPVideoView createFullScreenVideoViewController]
  -[LPVideoView usesCustomFullScreenImplementation]
  -[LPVideoView createVideoPlayerView]
  -[LPVideoView prepareForDisplayWithCompletionHandler:]


LPCaptionButtonPresentationProperties : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *text
 @property  @? callback

  // instance methods
  -[LPCaptionButtonPresentationProperties callback]
  -[LPCaptionButtonPresentationProperties text]
  -[LPCaptionButtonPresentationProperties .cxx_destruct]
  -[LPCaptionButtonPresentationProperties setCallback:]
  -[LPCaptionButtonPresentationProperties setText:]


LPCaptionPresentationProperties : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *text
 @property  NSAttributedString *attributedText
 @property  UIColor *color
 @property  double textScale
 @property  NSNumber *maximumNumberOfLines

  // instance methods
  -[LPCaptionPresentationProperties attributedText]
  -[LPCaptionPresentationProperties setAttributedText:]
  -[LPCaptionPresentationProperties init]
  -[LPCaptionPresentationProperties text]
  -[LPCaptionPresentationProperties .cxx_destruct]
  -[LPCaptionPresentationProperties setTextScale:]
  -[LPCaptionPresentationProperties textScale]
  -[LPCaptionPresentationProperties color]
  -[LPCaptionPresentationProperties setMaximumNumberOfLines:]
  -[LPCaptionPresentationProperties maximumNumberOfLines]
  -[LPCaptionPresentationProperties setColor:]
  -[LPCaptionPresentationProperties setText:]


LPCaptionRowPresentationProperties : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL hasAnyContent
 @property  LPCaptionPresentationProperties *leading
 @property  LPCaptionPresentationProperties *trailing
 @property  LPCaptionButtonPresentationProperties *button

  // instance methods
  -[LPCaptionRowPresentationProperties left]
  -[LPCaptionRowPresentationProperties hasAnyContent]
  -[LPCaptionRowPresentationProperties init]
  -[LPCaptionRowPresentationProperties applyToAllCaptions:]
  -[LPCaptionRowPresentationProperties .cxx_destruct]
  -[LPCaptionRowPresentationProperties right]
  -[LPCaptionRowPresentationProperties leading]
  -[LPCaptionRowPresentationProperties trailing]
  -[LPCaptionRowPresentationProperties button]
  -[LPCaptionRowPresentationProperties setButton:]


LPCaptionBarPresentationProperties : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL hasAnyContent
 @property  LPImage *leadingIcon
 @property  {CGSize=dd} leadingIconSize
 @property  NSArray *additionalLeadingIcons
 @property  LPImagePresentationProperties *leadingIconProperties
 @property  LPImage *trailingIcon
 @property  {CGSize=dd} trailingIconSize
 @property  NSArray *additionalTrailingIcons
 @property  LPImagePresentationProperties *trailingIconProperties
 @property  long long leadingAccessoryType
 @property  long long trailingAccessoryType
 @property  NSString *buttonCaption
 @property  LPCaptionRowPresentationProperties *aboveTop
 @property  LPCaptionRowPresentationProperties *top
 @property  LPCaptionRowPresentationProperties *bottom
 @property  LPCaptionRowPresentationProperties *belowBottom
 @property  BOOL shouldHighlightIndependently
 @property  NSNumber *minimumHeight

  // instance methods
  -[LPCaptionBarPresentationProperties top]
  -[LPCaptionBarPresentationProperties setTrailingIcon:]
  -[LPCaptionBarPresentationProperties trailingIcon]
  -[LPCaptionBarPresentationProperties leadingIcon]
  -[LPCaptionBarPresentationProperties hasAnyContent]
  -[LPCaptionBarPresentationProperties init]
  -[LPCaptionBarPresentationProperties setLeadingIcon:]
  -[LPCaptionBarPresentationProperties aboveTop]
  -[LPCaptionBarPresentationProperties applyToAllCaptions:]
  -[LPCaptionBarPresentationProperties bottom]
  -[LPCaptionBarPresentationProperties belowBottom]
  -[LPCaptionBarPresentationProperties .cxx_destruct]
  -[LPCaptionBarPresentationProperties leadingIconProperties]
  -[LPCaptionBarPresentationProperties trailingIconProperties]
  -[LPCaptionBarPresentationProperties leadingAccessoryType]
  -[LPCaptionBarPresentationProperties trailingAccessoryType]
  -[LPCaptionBarPresentationProperties leftAccessoryType]
  -[LPCaptionBarPresentationProperties rightAccessoryType]
  -[LPCaptionBarPresentationProperties leadingIconSize]
  -[LPCaptionBarPresentationProperties setLeadingIconSize:]
  -[LPCaptionBarPresentationProperties additionalLeadingIcons]
  -[LPCaptionBarPresentationProperties setAdditionalLeadingIcons:]
  -[LPCaptionBarPresentationProperties setLeadingIconProperties:]
  -[LPCaptionBarPresentationProperties trailingIconSize]
  -[LPCaptionBarPresentationProperties setTrailingIconSize:]
  -[LPCaptionBarPresentationProperties additionalTrailingIcons]
  -[LPCaptionBarPresentationProperties setAdditionalTrailingIcons:]
  -[LPCaptionBarPresentationProperties setTrailingIconProperties:]
  -[LPCaptionBarPresentationProperties setLeadingAccessoryType:]
  -[LPCaptionBarPresentationProperties setTrailingAccessoryType:]
  -[LPCaptionBarPresentationProperties buttonCaption]
  -[LPCaptionBarPresentationProperties setButtonCaption:]
  -[LPCaptionBarPresentationProperties shouldHighlightIndependently]
  -[LPCaptionBarPresentationProperties setShouldHighlightIndependently:]
  -[LPCaptionBarPresentationProperties leftIcon]
  -[LPCaptionBarPresentationProperties minimumHeight]
  -[LPCaptionBarPresentationProperties rightIcon]
  -[LPCaptionBarPresentationProperties setMinimumHeight:]
  -[LPCaptionBarPresentationProperties leftIconProperties]
  -[LPCaptionBarPresentationProperties rightIconProperties]


LPImagePresentationProperties : NSObject /usr/lib/libc++.1.dylib
 @property  long long filter
 @property  long long scalingMode
 @property  BOOL shouldApplyBackground
 @property  BOOL requireFixedSize
 @property  UIColor *backgroundColor
 @property  UIColor *maskColor

  // instance methods
  -[LPImagePresentationProperties setFilter:]
  -[LPImagePresentationProperties setBackgroundColor:]
  -[LPImagePresentationProperties init]
  -[LPImagePresentationProperties filter]
  -[LPImagePresentationProperties maskColor]
  -[LPImagePresentationProperties backgroundColor]
  -[LPImagePresentationProperties .cxx_destruct]
  -[LPImagePresentationProperties shouldApplyBackground]
  -[LPImagePresentationProperties setShouldApplyBackground:]
  -[LPImagePresentationProperties requireFixedSize]
  -[LPImagePresentationProperties setRequireFixedSize:]
  -[LPImagePresentationProperties setMaskColor:]
  -[LPImagePresentationProperties setScalingMode:]
  -[LPImagePresentationProperties scalingMode]


LPSharingMetadataWrapper : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  LPLinkMetadata *metadata
 @property  BOOL hasFetchedSubresources
 @property  BOOL hasCompletedFetch

  // class methods
  +[LPSharingMetadataWrapper supportsSecureCoding]

  // instance methods
  -[LPSharingMetadataWrapper setMetadata:]
  -[LPSharingMetadataWrapper .cxx_destruct]
  -[LPSharingMetadataWrapper hasCompletedFetch]
  -[LPSharingMetadataWrapper hasFetchedSubresources]
  -[LPSharingMetadataWrapper setHasCompletedFetch:]
  -[LPSharingMetadataWrapper encodeWithCoder:]
  -[LPSharingMetadataWrapper dataRepresentation]
  -[LPSharingMetadataWrapper metadata]
  -[LPSharingMetadataWrapper initWithCoder:]
  -[LPSharingMetadataWrapper setHasFetchedSubresources:]


LPHTMLGlyphComponent : LPHTMLComponent
  // class methods
  +[LPHTMLGlyphComponent styleSet]
  +[LPHTMLGlyphComponent ruleDictionaryForStyle:]
  +[LPHTMLGlyphComponent ruleDictionaryForStyleWithDarkInterface:]

  // instance methods
  -[LPHTMLGlyphComponent initWithStyle:generator:]


LPHTMLCaptionBarComponent : LPHTMLComponent
  // class methods
  +[LPHTMLCaptionBarComponent additionalRulesForStyle:]
  +[LPHTMLCaptionBarComponent styleSet]
  +[LPHTMLCaptionBarComponent baseRules]
  +[LPHTMLCaptionBarComponent ruleDictionaryForStyle:]

  // instance methods
  -[LPHTMLCaptionBarComponent initWithStyle:presentationProperties:useProgressSpinner:themePath:generator:]
  -[LPHTMLCaptionBarComponent .cxx_destruct]
  -[LPHTMLCaptionBarComponent buildComponents]


LPSettings : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[LPSettings initialize]
  +[LPSettings showDebugIndicators]
  +[LPSettings updateFromDefaults]
  +[LPSettings disableLegacyStoreLookups]
  +[LPSettings disableAnimations]
  +[LPSettings disableAutoPlay]
  +[LPSettings subsampleImagesToScreenSize]


LPHTMLHorizontalCaptionPairComponent : LPHTMLComponent
  // class methods
  +[LPHTMLHorizontalCaptionPairComponent styleSet]
  +[LPHTMLHorizontalCaptionPairComponent ruleDictionaryForStyle:]

  // instance methods
  -[LPHTMLHorizontalCaptionPairComponent initWithThemePath:generator:]


LPiTunesMediaMetadataProviderSpecialization : LPMetadataProviderSpecialization
  // class methods
  +[LPiTunesMediaMetadataProviderSpecialization specialization]
  +[LPiTunesMediaMetadataProviderSpecialization determineOrientationOfScreenshotsInArray:]
  +[LPiTunesMediaMetadataProviderSpecialization assetArrayScreenshotArray:]
  +[LPiTunesMediaMetadataProviderSpecialization assetArrayFromScreenshotArray:]
  +[LPiTunesMediaMetadataProviderSpecialization extractOffers:]
  +[LPiTunesMediaMetadataProviderSpecialization assetArrayFromScreenshotDictionary:usingPreferredPlatformArray:]
  +[LPiTunesMediaMetadataProviderSpecialization assetFromVideoPreviewDictionary:usingPreferredPlatformArray:]
  +[LPiTunesMediaMetadataProviderSpecialization specializedMetadataProviderForURLWithContext:]
  +[LPiTunesMediaMetadataProviderSpecialization specializedMetadataProviderForMetadata:withContext:]

  // instance methods
  -[LPiTunesMediaMetadataProviderSpecialization schema]
  -[LPiTunesMediaMetadataProviderSpecialization fail]
  -[LPiTunesMediaMetadataProviderSpecialization .cxx_destruct]
  -[LPiTunesMediaMetadataProviderSpecialization initWithIdentifier:storefrontCountryCode:withContext:]
  -[LPiTunesMediaMetadataProviderSpecialization processResponseDictionary:withStorefrontIdentifier:]
  -[LPiTunesMediaMetadataProviderSpecialization resolve]
  -[LPiTunesMediaMetadataProviderSpecialization completed]
  -[LPiTunesMediaMetadataProviderSpecialization cancel]
  -[LPiTunesMediaMetadataProviderSpecialization done]
  -[LPiTunesMediaMetadataProviderSpecialization start]


LPiTunesStoreInformation : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long capabilities
 @property  NSString *storefrontIdentifier

  // class methods
  +[LPiTunesStoreInformation shared]
  +[LPiTunesStoreInformation _convertCapabilities:]
  +[LPiTunesStoreInformation _convertNewStorefrontIdentifier:]

  // instance methods
  -[LPiTunesStoreInformation _setCapabilities:]
  -[LPiTunesStoreInformation init]
  -[LPiTunesStoreInformation storefrontIdentifier]
  -[LPiTunesStoreInformation .cxx_destruct]
  -[LPiTunesStoreInformation registerForStoreAvailablityChangesWithToken:handler:]
  -[LPiTunesStoreInformation unregisterForStoreAvailablityChangesWithToken:]
  -[LPiTunesStoreInformation userStateForMediaStorefrontIdentifier:]
  -[LPiTunesStoreInformation _setStorefrontIdentifier:]
  -[LPiTunesStoreInformation _storefrontDidChangeNotification]
  -[LPiTunesStoreInformation _capabilitiesDidChangeNotification]
  -[LPiTunesStoreInformation _notifyChangeHandlers]
  -[LPiTunesStoreInformation capabilities]


LPiTunesMediaLookupItemArtwork : NSObject /usr/lib/libc++.1.dylib
 @property  long long height
 @property  long long width

  // class methods
  +[LPiTunesMediaLookupItemArtwork colorForColorKind:inColorDictionary:]

  // instance methods
  -[LPiTunesMediaLookupItemArtwork colors]
  -[LPiTunesMediaLookupItemArtwork width]
  -[LPiTunesMediaLookupItemArtwork .cxx_destruct]
  -[LPiTunesMediaLookupItemArtwork initWithDictionary:]
  -[LPiTunesMediaLookupItemArtwork URLWithHeight:width:cropStyle:format:]
  -[LPiTunesMediaLookupItemArtwork height]


LPIndeterminateProgressSpinnerView : LPComponentView
  // instance methods
  -[LPIndeterminateProgressSpinnerView .cxx_destruct]
  -[LPIndeterminateProgressSpinnerView ensurePlatformView]
  -[LPIndeterminateProgressSpinnerView sizeThatFits:]
  -[LPIndeterminateProgressSpinnerView layoutComponentView]


LPHTMLIconComponent : LPHTMLComponent
  // class methods
  +[LPHTMLIconComponent styleSet]
  +[LPHTMLIconComponent ruleDictionaryForStyle:]
  +[LPHTMLIconComponent ruleDictionaryForStyleWithDarkInterface:]

  // instance methods
  -[LPHTMLIconComponent initProgressSpinnerIconWithStyle:themePath:generator:]
  -[LPHTMLIconComponent initWithImage:style:properties:themePath:generator:]


LPHTMLMultipleImageComponent : LPHTMLComponent
  // class methods
  +[LPHTMLMultipleImageComponent additionalRulesForStyle:]
  +[LPHTMLMultipleImageComponent styleSet]
  +[LPHTMLMultipleImageComponent baseRules]
  +[LPHTMLMultipleImageComponent ruleDictionaryForStyle:]
  +[LPHTMLMultipleImageComponent ruleDictionaryForStyleWithDarkInterface:]
  +[LPHTMLMultipleImageComponent additionalGlobalOutOfLineStyleDeclarations]

  // instance methods
  -[LPHTMLMultipleImageComponent initWithImages:style:themePath:generator:constrainHeight:]
  -[LPHTMLMultipleImageComponent .cxx_destruct]
  -[LPHTMLMultipleImageComponent _computeRowAndColumnSpecificationsForImages:]
  -[LPHTMLMultipleImageComponent buildComponents]


LPiTunesMediaLookupTask : AMSLookup /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices
  // instance methods
  -[LPiTunesMediaLookupTask _compileQueryParametersWithBundleIds:itemIds:]
  -[LPiTunesMediaLookupTask start:]
  -[LPiTunesMediaLookupTask .cxx_destruct]
  -[LPiTunesMediaLookupTask callerID]
  -[LPiTunesMediaLookupTask sharedBag]
  -[LPiTunesMediaLookupTask initWithIdentifier:storefrontCountryCode:]


LPiTunesMediaOffer : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *previewURL
 @property  NSString *type
 @property  BOOL hasAudio
 @property  BOOL hasVideo

  // class methods
  +[LPiTunesMediaOffer typeForOffer:]
  +[LPiTunesMediaOffer previewURLForOffer:]
  +[LPiTunesMediaOffer hasAudioForOffer:]
  +[LPiTunesMediaOffer hasVideoForOffer:]

  // instance methods
  -[LPiTunesMediaOffer hasVideo]
  -[LPiTunesMediaOffer .cxx_destruct]
  -[LPiTunesMediaOffer previewURL]
  -[LPiTunesMediaOffer initWithDictionary:]
  -[LPiTunesMediaOffer type]
  -[LPiTunesMediaOffer hasAudio]


LPMediaPlaybackManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[LPMediaPlaybackManager shared]

  // instance methods
  -[LPMediaPlaybackManager init]
  -[LPMediaPlaybackManager volumeChanged:]
  -[LPMediaPlaybackManager audioSession]
  -[LPMediaPlaybackManager .cxx_destruct]
  -[LPMediaPlaybackManager addMediaPlayer:]
  -[LPMediaPlaybackManager _updateAudioSessionCategory]
  -[LPMediaPlaybackManager removeMediaPlayer:]
  -[LPMediaPlaybackManager mediaPlayer:didChangePlayingState:]
  -[LPMediaPlaybackManager mediaPlayer:didChangeMutedState:]
  -[LPMediaPlaybackManager _deactivateAllPlayingMediaPlayersExcept:]
  -[LPMediaPlaybackManager _sharedSessionHasPlayingAudio]
  -[LPMediaPlaybackManager releaseDecodingResourcesForInactivePlayers]


LPHTMLCaptionBarAccessoryComponent : LPHTMLComponent
  // class methods
  +[LPHTMLCaptionBarAccessoryComponent additionalRulesForStyle:]
  +[LPHTMLCaptionBarAccessoryComponent styleSet]
  +[LPHTMLCaptionBarAccessoryComponent baseRules]
  +[LPHTMLCaptionBarAccessoryComponent ruleDictionaryForStyle:]
  +[LPHTMLCaptionBarAccessoryComponent ruleDictionaryForStyleWithDarkInterface:]

  // instance methods
  -[LPHTMLCaptionBarAccessoryComponent initWithType:style:themePath:generator:]


LPVerticalTextStackView : LPComponentView <LPContentInsettable>
  // instance methods
  -[LPVerticalTextStackView setContentInset:]
  -[LPVerticalTextStackView init]
  -[LPVerticalTextStackView .cxx_destruct]
  -[LPVerticalTextStackView _layoutTextStackForSize:applyingLayout:]
  -[LPVerticalTextStackView sizeThatFits:]
  -[LPVerticalTextStackView addArrangedSubview:]
  -[LPVerticalTextStackView initWithStyle:]
  -[LPVerticalTextStackView layoutComponentView]


LPiTunesMediaAsset : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *URL
 @property  NSDictionary *colors
 @property  NSString *name
 @property  LPFetcher *fetcher

  // instance methods
  -[LPiTunesMediaAsset colors]
  -[LPiTunesMediaAsset fetcher]
  -[LPiTunesMediaAsset .cxx_destruct]
  -[LPiTunesMediaAsset name]
  -[LPiTunesMediaAsset initWithVideoURL:name:]
  -[LPiTunesMediaAsset initWithImageURL:colors:name:]
  -[LPiTunesMediaAsset initWithName:customFetcherClass:]
  -[LPiTunesMediaAsset URL]
  -[LPiTunesMediaAsset metadata]


LPiTunesMediaSongUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *artist
 @property  NSString *album
 @property  NSString *lyrics
 @property  LPiTunesMediaAsset *artwork
 @property  NSArray *offers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaSongUnresolvedMetadata lyrics]
  -[LPiTunesMediaSongUnresolvedMetadata album]
  -[LPiTunesMediaSongUnresolvedMetadata artwork]
  -[LPiTunesMediaSongUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaSongUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaSongUnresolvedMetadata setAlbum:]
  -[LPiTunesMediaSongUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaSongUnresolvedMetadata name]
  -[LPiTunesMediaSongUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaSongUnresolvedMetadata offers]
  -[LPiTunesMediaSongUnresolvedMetadata setOffers:]
  -[LPiTunesMediaSongUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaSongUnresolvedMetadata resolve]
  -[LPiTunesMediaSongUnresolvedMetadata setLyrics:]
  -[LPiTunesMediaSongUnresolvedMetadata setArtist:]
  -[LPiTunesMediaSongUnresolvedMetadata artist]
  -[LPiTunesMediaSongUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaSongUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaSongUnresolvedMetadata setName:]


LPiTunesMediaAlbumUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *artist
 @property  LPiTunesMediaAsset *artwork
 @property  NSArray *offers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaAlbumUnresolvedMetadata artwork]
  -[LPiTunesMediaAlbumUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaAlbumUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaAlbumUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaAlbumUnresolvedMetadata name]
  -[LPiTunesMediaAlbumUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaAlbumUnresolvedMetadata offers]
  -[LPiTunesMediaAlbumUnresolvedMetadata setOffers:]
  -[LPiTunesMediaAlbumUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaAlbumUnresolvedMetadata resolve]
  -[LPiTunesMediaAlbumUnresolvedMetadata setArtist:]
  -[LPiTunesMediaAlbumUnresolvedMetadata artist]
  -[LPiTunesMediaAlbumUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaAlbumUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaAlbumUnresolvedMetadata setName:]


LPiTunesMediaMusicVideoUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *artist
 @property  LPiTunesMediaAsset *artwork
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaMusicVideoUnresolvedMetadata artwork]
  -[LPiTunesMediaMusicVideoUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaMusicVideoUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaMusicVideoUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaMusicVideoUnresolvedMetadata name]
  -[LPiTunesMediaMusicVideoUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaMusicVideoUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaMusicVideoUnresolvedMetadata resolve]
  -[LPiTunesMediaMusicVideoUnresolvedMetadata setArtist:]
  -[LPiTunesMediaMusicVideoUnresolvedMetadata artist]
  -[LPiTunesMediaMusicVideoUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaMusicVideoUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaMusicVideoUnresolvedMetadata setName:]


LPiTunesMediaArtistUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *genre
 @property  LPiTunesMediaAsset *artwork
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaArtistUnresolvedMetadata artwork]
  -[LPiTunesMediaArtistUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaArtistUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaArtistUnresolvedMetadata genre]
  -[LPiTunesMediaArtistUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaArtistUnresolvedMetadata name]
  -[LPiTunesMediaArtistUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaArtistUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaArtistUnresolvedMetadata resolve]
  -[LPiTunesMediaArtistUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaArtistUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaArtistUnresolvedMetadata setName:]
  -[LPiTunesMediaArtistUnresolvedMetadata setGenre:]


LPiTunesMediaPlaylistUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *curator
 @property  LPiTunesMediaAsset *artwork
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaPlaylistUnresolvedMetadata artwork]
  -[LPiTunesMediaPlaylistUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaPlaylistUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaPlaylistUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaPlaylistUnresolvedMetadata name]
  -[LPiTunesMediaPlaylistUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaPlaylistUnresolvedMetadata curator]
  -[LPiTunesMediaPlaylistUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaPlaylistUnresolvedMetadata resolve]
  -[LPiTunesMediaPlaylistUnresolvedMetadata setCurator:]
  -[LPiTunesMediaPlaylistUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaPlaylistUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaPlaylistUnresolvedMetadata setName:]


LPiTunesMediaRadioUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *curator
 @property  LPiTunesMediaAsset *artwork
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaRadioUnresolvedMetadata artwork]
  -[LPiTunesMediaRadioUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaRadioUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaRadioUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaRadioUnresolvedMetadata name]
  -[LPiTunesMediaRadioUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaRadioUnresolvedMetadata curator]
  -[LPiTunesMediaRadioUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaRadioUnresolvedMetadata resolve]
  -[LPiTunesMediaRadioUnresolvedMetadata setCurator:]
  -[LPiTunesMediaRadioUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaRadioUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaRadioUnresolvedMetadata setName:]


LPiTunesMediaSoftwareUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *subtitle
 @property  NSString *genre
 @property  NSString *platform
 @property  NSNumber *isHiddenFromSpringboard
 @property  NSNumber *hasMessagesExtension
 @property  LPiTunesMediaAsset *icon
 @property  LPiTunesMediaAsset *messagesAppIcon
 @property  NSArray *screenshots
 @property  LPiTunesMediaAsset *previewVideo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaSoftwareUnresolvedMetadata setSubtitle:]
  -[LPiTunesMediaSoftwareUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaSoftwareUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaSoftwareUnresolvedMetadata genre]
  -[LPiTunesMediaSoftwareUnresolvedMetadata screenshots]
  -[LPiTunesMediaSoftwareUnresolvedMetadata setScreenshots:]
  -[LPiTunesMediaSoftwareUnresolvedMetadata previewVideo]
  -[LPiTunesMediaSoftwareUnresolvedMetadata setPreviewVideo:]
  -[LPiTunesMediaSoftwareUnresolvedMetadata messagesAppIcon]
  -[LPiTunesMediaSoftwareUnresolvedMetadata setMessagesAppIcon:]
  -[LPiTunesMediaSoftwareUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaSoftwareUnresolvedMetadata name]
  -[LPiTunesMediaSoftwareUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaSoftwareUnresolvedMetadata icon]
  -[LPiTunesMediaSoftwareUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaSoftwareUnresolvedMetadata isHiddenFromSpringboard]
  -[LPiTunesMediaSoftwareUnresolvedMetadata setIsHiddenFromSpringboard:]
  -[LPiTunesMediaSoftwareUnresolvedMetadata resolve]
  -[LPiTunesMediaSoftwareUnresolvedMetadata setIcon:]
  -[LPiTunesMediaSoftwareUnresolvedMetadata setHasMessagesExtension:]
  -[LPiTunesMediaSoftwareUnresolvedMetadata hasMessagesExtension]
  -[LPiTunesMediaSoftwareUnresolvedMetadata platform]
  -[LPiTunesMediaSoftwareUnresolvedMetadata subtitle]
  -[LPiTunesMediaSoftwareUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaSoftwareUnresolvedMetadata setPlatform:]
  -[LPiTunesMediaSoftwareUnresolvedMetadata setName:]
  -[LPiTunesMediaSoftwareUnresolvedMetadata setGenre:]


LPiTunesMediaBookUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *author
 @property  LPiTunesMediaAsset *artwork
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaBookUnresolvedMetadata author]
  -[LPiTunesMediaBookUnresolvedMetadata artwork]
  -[LPiTunesMediaBookUnresolvedMetadata setAuthor:]
  -[LPiTunesMediaBookUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaBookUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaBookUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaBookUnresolvedMetadata name]
  -[LPiTunesMediaBookUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaBookUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaBookUnresolvedMetadata resolve]
  -[LPiTunesMediaBookUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaBookUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaBookUnresolvedMetadata setName:]


LPiTunesMediaAudioBookUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *author
 @property  NSString *narrator
 @property  LPiTunesMediaAsset *artwork
 @property  NSArray *offers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaAudioBookUnresolvedMetadata author]
  -[LPiTunesMediaAudioBookUnresolvedMetadata artwork]
  -[LPiTunesMediaAudioBookUnresolvedMetadata setAuthor:]
  -[LPiTunesMediaAudioBookUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaAudioBookUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaAudioBookUnresolvedMetadata setNarrator:]
  -[LPiTunesMediaAudioBookUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaAudioBookUnresolvedMetadata name]
  -[LPiTunesMediaAudioBookUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaAudioBookUnresolvedMetadata offers]
  -[LPiTunesMediaAudioBookUnresolvedMetadata setOffers:]
  -[LPiTunesMediaAudioBookUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaAudioBookUnresolvedMetadata resolve]
  -[LPiTunesMediaAudioBookUnresolvedMetadata narrator]
  -[LPiTunesMediaAudioBookUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaAudioBookUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaAudioBookUnresolvedMetadata setName:]


LPiTunesMediaPodcastEpisodeUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *episodeName
 @property  NSString *podcastName
 @property  NSString *artist
 @property  NSString *releaseDate
 @property  LPiTunesMediaAsset *artwork
 @property  NSArray *offers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata releaseDate]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata artwork]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata episodeName]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata setEpisodeName:]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata offers]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata setOffers:]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata resolve]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata setArtist:]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata artist]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata setReleaseDate:]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata podcastName]
  -[LPiTunesMediaPodcastEpisodeUnresolvedMetadata setPodcastName:]


LPiTunesMediaPodcastUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *artist
 @property  LPiTunesMediaAsset *artwork
 @property  NSArray *offers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaPodcastUnresolvedMetadata artwork]
  -[LPiTunesMediaPodcastUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaPodcastUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaPodcastUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaPodcastUnresolvedMetadata name]
  -[LPiTunesMediaPodcastUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaPodcastUnresolvedMetadata offers]
  -[LPiTunesMediaPodcastUnresolvedMetadata setOffers:]
  -[LPiTunesMediaPodcastUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaPodcastUnresolvedMetadata resolve]
  -[LPiTunesMediaPodcastUnresolvedMetadata setArtist:]
  -[LPiTunesMediaPodcastUnresolvedMetadata artist]
  -[LPiTunesMediaPodcastUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaPodcastUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaPodcastUnresolvedMetadata setName:]


LPiTunesMediaTVEpisodeUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *episodeName
 @property  NSString *seasonName
 @property  NSString *genre
 @property  LPiTunesMediaAsset *artwork
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata artwork]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata genre]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata episodeName]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata setEpisodeName:]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata seasonName]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata setSeasonName:]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata resolve]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaTVEpisodeUnresolvedMetadata setGenre:]


LPiTunesMediaTVSeasonUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *genre
 @property  LPiTunesMediaAsset *artwork
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaTVSeasonUnresolvedMetadata artwork]
  -[LPiTunesMediaTVSeasonUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaTVSeasonUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaTVSeasonUnresolvedMetadata genre]
  -[LPiTunesMediaTVSeasonUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaTVSeasonUnresolvedMetadata name]
  -[LPiTunesMediaTVSeasonUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaTVSeasonUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaTVSeasonUnresolvedMetadata resolve]
  -[LPiTunesMediaTVSeasonUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaTVSeasonUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaTVSeasonUnresolvedMetadata setName:]
  -[LPiTunesMediaTVSeasonUnresolvedMetadata setGenre:]


LPiTunesMediaTVShowUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  LPiTunesMediaAsset *artwork
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaTVShowUnresolvedMetadata artwork]
  -[LPiTunesMediaTVShowUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaTVShowUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaTVShowUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaTVShowUnresolvedMetadata name]
  -[LPiTunesMediaTVShowUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaTVShowUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaTVShowUnresolvedMetadata resolve]
  -[LPiTunesMediaTVShowUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaTVShowUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaTVShowUnresolvedMetadata setName:]


LPiTunesMediaMovieUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *genre
 @property  LPiTunesMediaAsset *artwork
 @property  NSArray *offers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaMovieUnresolvedMetadata artwork]
  -[LPiTunesMediaMovieUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaMovieUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaMovieUnresolvedMetadata genre]
  -[LPiTunesMediaMovieUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaMovieUnresolvedMetadata name]
  -[LPiTunesMediaMovieUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaMovieUnresolvedMetadata offers]
  -[LPiTunesMediaMovieUnresolvedMetadata setOffers:]
  -[LPiTunesMediaMovieUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaMovieUnresolvedMetadata resolve]
  -[LPiTunesMediaMovieUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaMovieUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaMovieUnresolvedMetadata setName:]
  -[LPiTunesMediaMovieUnresolvedMetadata setGenre:]


LPiTunesMediaMovieBundleUnresolvedMetadata : NSObject /usr/lib/libc++.1.dylib <LPiTunesMediaUnresolvedMetadata>
 @property  NSString *storeFrontIdentifier
 @property  NSString *storeIdentifier
 @property  NSString *name
 @property  NSString *genre
 @property  LPiTunesMediaAsset *artwork
 @property  NSArray *offers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPiTunesMediaMovieBundleUnresolvedMetadata artwork]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata storeIdentifier]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata setStoreFrontIdentifier:]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata genre]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata .cxx_destruct]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata name]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata storeFrontIdentifier]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata offers]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata setOffers:]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata assetsToFetch]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata resolve]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata setArtwork:]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata setStoreIdentifier:]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata setName:]
  -[LPiTunesMediaMovieBundleUnresolvedMetadata setGenre:]


LPFlippedView : UIView /System/Library/Frameworks/WebKit.framework/WebKit
  // instance methods
  -[LPFlippedView isFlipped]


LPAnimationMaskView : UIView /System/Library/Frameworks/WebKit.framework/WebKit
 @property  UIImage *image
 @property  long long animationOrigin
 @property  UIView *imageView

  // instance methods
  -[LPAnimationMaskView imageView]
  -[LPAnimationMaskView init]
  -[LPAnimationMaskView .cxx_destruct]
  -[LPAnimationMaskView setImage:]
  -[LPAnimationMaskView image]
  -[LPAnimationMaskView setAnimationOrigin:]
  -[LPAnimationMaskView animationOrigin]
  -[LPAnimationMaskView layoutSubviews]


LPMIMETypeRegistry : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[LPMIMETypeRegistry isJSONType:]
  +[LPMIMETypeRegistry MIMETypeForUTI:]
  +[LPMIMETypeRegistry isVideoType:]
  +[LPMIMETypeRegistry fileExtensionForUTI:]
  +[LPMIMETypeRegistry isWebPageType:]
  +[LPMIMETypeRegistry isARAssetType:]
  +[LPMIMETypeRegistry UTIForFileExtension:]
  +[LPMIMETypeRegistry fileExtensionForMIMEType:]
  +[LPMIMETypeRegistry isHLSType:]
  +[LPMIMETypeRegistry isMediaType:]
  +[LPMIMETypeRegistry UTIForMIMEType:]
  +[LPMIMETypeRegistry isNonAnimatedMultiframeImageType:]
  +[LPMIMETypeRegistry isImageType:]


LPImageStackView : LPComponentView
  // instance methods
  -[LPImageStackView init]
  -[LPImageStackView .cxx_destruct]
  -[LPImageStackView initWithImages:style:]
  -[LPImageStackView _layoutImagesForSize:applyingLayout:]
  -[LPImageStackView sizeThatFits:]
  -[LPImageStackView setDelegate:]
  -[LPImageStackView layoutComponentView]


LPMetadataProvider : NSObject /usr/lib/libc++.1.dylib <WKNavigationDelegate, LPMetadataProviderSpecializationDelegate>
 @property  @? completionHandler
 @property  BOOL cancelled
 @property  LPEvent *_event
 @property  BOOL useSpecializedProviders
 @property  BOOL fetchSubresources
 @property  unsigned long allowedSpecializedProviders
 @property  BOOL shouldFetchSubresources
 @property  double timeout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPMetadataProvider requestMetadataForURL:completionHandler:]
  +[LPMetadataProvider _copyDefaultWebViewConfiguration]
  +[LPMetadataProvider _defaultUserAgent]
  +[LPMetadataProvider _incompleteMetadataRequests]
  +[LPMetadataProvider requestMetadataForWebView:completionHandler:]
  +[LPMetadataProvider _callbackQueue]

  // instance methods
  -[LPMetadataProvider setCancelled:]
  -[LPMetadataProvider _event]
  -[LPMetadataProvider init]
  -[LPMetadataProvider timeout]
  -[LPMetadataProvider setTimeout:]
  -[LPMetadataProvider dealloc]
  -[LPMetadataProvider _failedWithErrorCode:underlyingError:]
  -[LPMetadataProvider webView:didFailProvisionalNavigation:withError:]
  -[LPMetadataProvider .cxx_destruct]
  -[LPMetadataProvider _startWatchdogTimer]
  -[LPMetadataProvider startFetchingMetadataForURL:completionHandler:]
  -[LPMetadataProvider startFetchingMetadataForWebView:completionHandler:]
  -[LPMetadataProvider _cancelDueToTimeout]
  -[LPMetadataProvider _stopWatchdogTimer]
  -[LPMetadataProvider _willStartFetchingMetadata]
  -[LPMetadataProvider _switchToSpecializationIfPossibleForURL:]
  -[LPMetadataProvider _fetchImplicitIcons]
  -[LPMetadataProvider _internalStartFetchingMetadataFromURL]
  -[LPMetadataProvider _fetchMetadataFromWebView]
  -[LPMetadataProvider _fetchSubresources]
  -[LPMetadataProvider _switchToSpecializationIfPossibleForMIMEType:URL:hasLoadedResource:]
  -[LPMetadataProvider _fetchedMetadata:]
  -[LPMetadataProvider _setMetadata:onlyUpgradeFields:]
  -[LPMetadataProvider _redistinguishImagesAndIcons]
  -[LPMetadataProvider _simplifyTitle]
  -[LPMetadataProvider _switchToSpecializationIfPossibleForMetadata:URL:]
  -[LPMetadataProvider subresourceFetcherConfiguration]
  -[LPMetadataProvider _fetchAssociatedApplicationMetadataWithCompletionHandler:]
  -[LPMetadataProvider _postProcessResolvedMetadataWithCompletionHandler:]
  -[LPMetadataProvider setFetchSubresources:]
  -[LPMetadataProvider _generateSpecializationIfPossibleForCompleteMetadata:URL:completionHandler:]
  -[LPMetadataProvider metadataProviderSpecialization:didFetchPreliminaryMetadata:]
  -[LPMetadataProvider _startFetchingMetadataForURL:completionHandler:]
  -[LPMetadataProvider fetchSubresources]
  -[LPMetadataProvider _startFetchingMetadataForWebView:completionHandler:]
  -[LPMetadataProvider startFetchingSubresourcesForPartialMetadata:completionHandler:]
  -[LPMetadataProvider allowedSpecializedProviders]
  -[LPMetadataProvider setAllowedSpecializedProviders:]
  -[LPMetadataProvider shouldFetchSubresources]
  -[LPMetadataProvider useSpecializedProviders]
  -[LPMetadataProvider setShouldFetchSubresources:]
  -[LPMetadataProvider setUseSpecializedProviders:]
  -[LPMetadataProvider _completedWithError:]
  -[LPMetadataProvider cancel]
  -[LPMetadataProvider cancelled]
  -[LPMetadataProvider webView:decidePolicyForNavigationAction:decisionHandler:]
  -[LPMetadataProvider webView:didStartProvisionalNavigation:]
  -[LPMetadataProvider webView:decidePolicyForNavigationResponse:decisionHandler:]
  -[LPMetadataProvider completionHandler]
  -[LPMetadataProvider webView:didFinishNavigation:]
  -[LPMetadataProvider webViewWebContentProcessDidTerminate:]
  -[LPMetadataProvider webView:didFailNavigation:withError:]
  -[LPMetadataProvider setCompletionHandler:]
  -[LPMetadataProvider metadataProviderSpecializationDidFail:]
  -[LPMetadataProvider metadataProviderSpecialization:didCompleteWithMetadata:]


LPFetcherAccessibilityEnabledImageResponse : LPFetcherImageResponse
  // class methods
  +[LPFetcherAccessibilityEnabledImageResponse imagePropertiesForFetcher:]


LPFetcherAccessibilityEnabledVideoResponse : LPFetcherVideoResponse
  // class methods
  +[LPFetcherAccessibilityEnabledVideoResponse videoPropertiesForFetcher:]


LPFetcherAccessibilityEnabledAudioResponse : LPFetcherAudioResponse
  // class methods
  +[LPFetcherAccessibilityEnabledAudioResponse audioPropertiesForFetcher:]


LPiTunesPlayButtonControl : LPPlayButtonControl
  // instance methods
  -[LPiTunesPlayButtonControl didMoveToWindow]
  -[LPiTunesPlayButtonControl buttonPressed:]
  -[LPiTunesPlayButtonControl .cxx_destruct]
  -[LPiTunesPlayButtonControl willMoveToWindow:]
  -[LPiTunesPlayButtonControl updatePlaybackState]
  -[LPiTunesPlayButtonControl matchesNowPlayingItem]
  -[LPiTunesPlayButtonControl updatePlayState]
  -[LPiTunesPlayButtonControl startListeningForPlayback]
  -[LPiTunesPlayButtonControl stopListeningForPlayback]
  -[LPiTunesPlayButtonControl createPlaybackQueue]
  -[LPiTunesPlayButtonControl mediaPlaybackApplicationID]
  -[LPiTunesPlayButtonControl initWithPlaybackInformation:style:]
  -[LPiTunesPlayButtonControl startPlaying]


LPAVPlayerViewController : AVPlayerViewController /System/Library/PrivateFrameworks/Celestial.framework/Celestial
  // instance methods
  -[LPAVPlayerViewController dealloc]
  -[LPAVPlayerViewController .cxx_destruct]
  -[LPAVPlayerViewController observeValueForKeyPath:ofObject:change:context:]
  -[LPAVPlayerViewController initWithPlayerLayerView:]
  -[LPAVPlayerViewController prepareForDisplayWithCompletionHandler:]


LPFullScreenVideoController : NSObject /usr/lib/libc++.1.dylib <AVPlayerViewControllerDelegatePrivate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPFullScreenVideoController dismiss]
  -[LPFullScreenVideoController .cxx_destruct]
  -[LPFullScreenVideoController present]
  -[LPFullScreenVideoController setUpFullScreenVideoViewControllerIfNeeded]
  -[LPFullScreenVideoController didCompleteDismissal]
  -[LPFullScreenVideoController playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:]
  -[LPFullScreenVideoController playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:]
  -[LPFullScreenVideoController playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:]
  -[LPFullScreenVideoController initWithPlayer:sourceView:]
  -[LPFullScreenVideoController prepareForDisplayWithCompletionHandler:]


LPCardHeadingPresentationProperties : LPWebLinkPresentationProperties
  // instance methods
  -[LPCardHeadingPresentationProperties initWithStyle:topCaption:bottomCaption:icon:]
  -[LPCardHeadingPresentationProperties initWithStyle:topCaption:attributedBottomCaption:icons:]


LPMetadataProviderSpecialization : NSObject /usr/lib/libc++.1.dylib
 @property  <LPMetadataProviderSpecializationDelegate> *delegate
 @property  NSURL *URL
 @property  LPMetadataProviderSpecializationContext *context

  // class methods
  +[LPMetadataProviderSpecialization specialization]
  +[LPMetadataProviderSpecialization generateSpecializedMetadataForCompleteMetadata:withContext:completionHandler:]
  +[LPMetadataProviderSpecialization specializedMetadataProviderForURLWithContext:]
  +[LPMetadataProviderSpecialization specializedMetadataProviderForMetadata:withContext:]
  +[LPMetadataProviderSpecialization specializedMetadataProviderForResourceWithContext:]

  // instance methods
  -[LPMetadataProviderSpecialization context]
  -[LPMetadataProviderSpecialization initWithContext:]
  -[LPMetadataProviderSpecialization .cxx_destruct]
  -[LPMetadataProviderSpecialization cancel]
  -[LPMetadataProviderSpecialization setDelegate:]
  -[LPMetadataProviderSpecialization URL]
  -[LPMetadataProviderSpecialization delegate]
  -[LPMetadataProviderSpecialization start]


LPMetadataProviderSpecializationContext : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *URL
 @property  NSString *MIMEType
 @property  BOOL hasLoadedResource
 @property  BOOL shouldFetchSubresources
 @property  WKWebView *webView
 @property  unsigned long allowedSpecializations
 @property  LPEvent *event
 @property  @? eventGenerator

  // instance methods
  -[LPMetadataProviderSpecializationContext webView]
  -[LPMetadataProviderSpecializationContext .cxx_destruct]
  -[LPMetadataProviderSpecializationContext event]
  -[LPMetadataProviderSpecializationContext setEvent:]
  -[LPMetadataProviderSpecializationContext initWithURL:MIMEType:webView:hasLoadedResource:shouldFetchSubresources:allowedSpecializations:]
  -[LPMetadataProviderSpecializationContext setEventGenerator:]
  -[LPMetadataProviderSpecializationContext ensureEvent]
  -[LPMetadataProviderSpecializationContext shouldFetchSubresources]
  -[LPMetadataProviderSpecializationContext eventGenerator]
  -[LPMetadataProviderSpecializationContext allowedSpecializations]
  -[LPMetadataProviderSpecializationContext hasLoadedResource]
  -[LPMetadataProviderSpecializationContext MIMEType]
  -[LPMetadataProviderSpecializationContext URL]


LPAppLinkPresentationProperties : NSObject /usr/lib/libc++.1.dylib <LPLinkPresentationPropertyProvider>
 @property  LPCaptionBarPresentationProperties *captionBar
 @property  LPCaptionBarPresentationProperties *mediaTopCaptionBar
 @property  LPCaptionBarPresentationProperties *mediaBottomCaptionBar
 @property  NSString *topCaption
 @property  NSString *bottomCaption
 @property  NSString *trailingTopCaption
 @property  NSString *trailingBottomCaption
 @property  NSString *mediaTopCaption
 @property  NSString *mediaBottomCaption
 @property  LPImage *image
 @property  LPImage *icon
 @property  LPVideo *video
 @property  UIColor *backgroundColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPAppLinkPresentationProperties setBackgroundColor:]
  -[LPAppLinkPresentationProperties captionBar]
  -[LPAppLinkPresentationProperties bottomCaption]
  -[LPAppLinkPresentationProperties trailingTopCaption]
  -[LPAppLinkPresentationProperties trailingBottomCaption]
  -[LPAppLinkPresentationProperties mediaTopCaption]
  -[LPAppLinkPresentationProperties mediaBottomCaption]
  -[LPAppLinkPresentationProperties mediaBottomCaptionBar]
  -[LPAppLinkPresentationProperties mediaTopCaptionBar]
  -[LPAppLinkPresentationProperties setCaptionBar:]
  -[LPAppLinkPresentationProperties setMediaBottomCaptionBar:]
  -[LPAppLinkPresentationProperties backgroundColor]
  -[LPAppLinkPresentationProperties .cxx_destruct]
  -[LPAppLinkPresentationProperties setImage:]
  -[LPAppLinkPresentationProperties icon]
  -[LPAppLinkPresentationProperties setMediaTopCaptionBar:]
  -[LPAppLinkPresentationProperties image]
  -[LPAppLinkPresentationProperties setIcon:]
  -[LPAppLinkPresentationProperties setTopCaption:]
  -[LPAppLinkPresentationProperties setBottomCaption:]
  -[LPAppLinkPresentationProperties setTrailingTopCaption:]
  -[LPAppLinkPresentationProperties setTrailingBottomCaption:]
  -[LPAppLinkPresentationProperties setMediaTopCaption:]
  -[LPAppLinkPresentationProperties setMediaBottomCaption:]
  -[LPAppLinkPresentationProperties video]
  -[LPAppLinkPresentationProperties setVideo:]
  -[LPAppLinkPresentationProperties style]
  -[LPAppLinkPresentationProperties topCaption]


LPEmailCompatibleHTMLTableComponent : LPHTMLComponent
  // class methods
  +[LPEmailCompatibleHTMLTableComponent styleSet]
  +[LPEmailCompatibleHTMLTableComponent ruleDictionaryForStyle:]
  +[LPEmailCompatibleHTMLTableComponent ruleDictionaryForStyleWithDarkInterface:]

  // instance methods
  -[LPEmailCompatibleHTMLTableComponent addChildAsRow:]
  -[LPEmailCompatibleHTMLTableComponent initWithThemePath:generator:]


LPHTMLImageContainerComponent : LPHTMLComponent
  // class methods
  +[LPHTMLImageContainerComponent styleSet]
  +[LPHTMLImageContainerComponent ruleDictionaryForStyle:]

  // instance methods
  -[LPHTMLImageContainerComponent initWithThemePath:generator:]


LPApplePhotosMetadataProviderSpecialization : LPMetadataProviderSpecialization <PXPhotoLibraryUIChangeObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPApplePhotosMetadataProviderSpecialization specialization]
  +[LPApplePhotosMetadataProviderSpecialization specializedMetadataProviderForURLWithContext:]

  // instance methods
  -[LPApplePhotosMetadataProviderSpecialization fail]
  -[LPApplePhotosMetadataProviderSpecialization photoLibraryDidChangeOnMainQueue:]
  -[LPApplePhotosMetadataProviderSpecialization dealloc]
  -[LPApplePhotosMetadataProviderSpecialization .cxx_destruct]
  -[LPApplePhotosMetadataProviderSpecialization didFetchAsset:]
  -[LPApplePhotosMetadataProviderSpecialization completeWithMetadata:]
  -[LPApplePhotosMetadataProviderSpecialization cancel]
  -[LPApplePhotosMetadataProviderSpecialization start]


LPHTMLLinkComponent : LPHTMLComponent <DOMEventListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPHTMLLinkComponent additionalRulesForStyle:]
  +[LPHTMLLinkComponent styleSet]
  +[LPHTMLLinkComponent baseRules]
  +[LPHTMLLinkComponent ruleDictionaryForStyle:]
  +[LPHTMLLinkComponent ruleDictionaryForStyleWithDarkInterface:]

  // instance methods
  -[LPHTMLLinkComponent initWithURL:generator:]
  -[LPHTMLLinkComponent handleEvent:]


LPiTunesMediaStorefrontMappings : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[LPiTunesMediaStorefrontMappings storefrontIdentifierFromCountryCode:]
  +[LPiTunesMediaStorefrontMappings isValidStorefrontCountryCode:]
  +[LPiTunesMediaStorefrontMappings defaultStorefrontCountryCode]


LPEvent : NSObject /usr/lib/libc++.1.dylib
 @property  long long type
 @property  NSString *subtitle
 @property  double startTime
 @property  double endTime
 @property  double duration
 @property  long long status
 @property  NSURL *URL
 @property  LPEvent *parent
 @property  NSArray *children

  // instance methods
  -[LPEvent endTime]
  -[LPEvent parent]
  -[LPEvent isComplete]
  -[LPEvent init]
  -[LPEvent children]
  -[LPEvent childWithType:subtitle:]
  -[LPEvent didCompleteWithErrorCode:]
  -[LPEvent didCompleteWithStatus:]
  -[LPEvent .cxx_destruct]
  -[LPEvent initWithType:subtitle:]
  -[LPEvent _childrenAreComplete]
  -[LPEvent type]
  -[LPEvent subtitle]
  -[LPEvent URL]
  -[LPEvent setURL:]
  -[LPEvent status]
  -[LPEvent startTime]
  -[LPEvent duration]


LPEventTimeline : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[LPEventTimeline eventWithType:subtitle:]


LPVideoProperties : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  UIColor *_overlappingControlsColor
 @property  BOOL hasAudio
 @property  NSString *accessibilityText

  // instance methods
  -[LPVideoProperties copyWithZone:]
  -[LPVideoProperties .cxx_destruct]
  -[LPVideoProperties _overlappingControlsColor]
  -[LPVideoProperties accessibilityText]
  -[LPVideoProperties _setOverlappingControlsColor:]
  -[LPVideoProperties isEqual:]
  -[LPVideoProperties hasAudio]
  -[LPVideoProperties setHasAudio:]
  -[LPVideoProperties setAccessibilityText:]


LPVideo : NSObject /usr/lib/libc++.1.dylib <AVAssetResourceLoaderDelegate, LPAsynchronousResource, NSSecureCoding>
 @property  unsigned long _encodedSize
 @property  AVAsset *_asset
 @property  NSItemProvider *_itemProvider
 @property  NSURL *fileURL
 @property  NSURL *streamingURL
 @property  NSURL *youTubeURL
 @property  NSData *data
 @property  NSString *MIMEType
 @property  BOOL hasAudio
 @property  LPVideoProperties *properties
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPVideo supportsSecureCoding]

  // instance methods
  -[LPVideo fileURL]
  -[LPVideo _asset]
  -[LPVideo init]
  -[LPVideo initWithYouTubeURL:]
  -[LPVideo initWithItemProvider:properties:]
  -[LPVideo youTubeURL]
  -[LPVideo initWithStreamingURL:hasAudio:]
  -[LPVideo dealloc]
  -[LPVideo .cxx_destruct]
  -[LPVideo _intrinsicSizeWithCompletionHandler:]
  -[LPVideo _itemProvider]
  -[LPVideo encodeWithCoder:]
  -[LPVideo data]
  -[LPVideo setFileURL:]
  -[LPVideo _intrinsicSizeIfKnown]
  -[LPVideo _uninstallMediaServicesResetNotificationHandler]
  -[LPVideo _initWithVideo:]
  -[LPVideo initWithData:MIMEType:hasAudio:]
  -[LPVideo _installMediaServicesResetNotificationHandler]
  -[LPVideo initByReferencingFileURL:MIMEType:hasAudio:]
  -[LPVideo resourceLoader:shouldWaitForLoadingOfRequestedResource:]
  -[LPVideo isEqual:]
  -[LPVideo MIMEType]
  -[LPVideo hasAudio]
  -[LPVideo properties]
  -[LPVideo initWithYouTubeURL:properties:]
  -[LPVideo initWithCoder:]
  -[LPVideo initWithStreamingURL:properties:]
  -[LPVideo initWithData:MIMEType:properties:]
  -[LPVideo streamingURL]
  -[LPVideo initByReferencingFileURL:MIMEType:properties:]
  -[LPVideo _shouldEncodeData]
  -[LPVideo _mapDataFromFileURL]
  -[LPVideo needsAsynchronousLoad]
  -[LPVideo loadAsynchronouslyWithCompletionHandler:]
  -[LPVideo _encodedSize]


LPAppleTVMetadataProviderSpecialization : LPMetadataProviderSpecialization
  // class methods
  +[LPAppleTVMetadataProviderSpecialization specialization]
  +[LPAppleTVMetadataProviderSpecialization generateSpecializedMetadataForCompleteMetadata:withContext:completionHandler:]


LPStreamingAudioPlayer : NSObject /usr/lib/libc++.1.dylib <LPMediaPlayer>
 @property  float progress
 @property  unsigned long state
 @property  BOOL active
 @property  BOOL muted
 @property  BOOL playing
 @property  BOOL fullScreen
 @property  BOOL usesSharedAudioSession
 @property  BOOL shouldUnmuteWhenUserAdjustsVolume
 @property  unsigned long lastInteractionTimestamp
 @property  double unobscuredAreaFraction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPStreamingAudioPlayer playerWithAudio:]

  // instance methods
  -[LPStreamingAudioPlayer removeClient:]
  -[LPStreamingAudioPlayer addClient:]
  -[LPStreamingAudioPlayer transitionToState:]
  -[LPStreamingAudioPlayer play]
  -[LPStreamingAudioPlayer isPlaying]
  -[LPStreamingAudioPlayer pause]
  -[LPStreamingAudioPlayer dealloc]
  -[LPStreamingAudioPlayer isMuted]
  -[LPStreamingAudioPlayer .cxx_destruct]
  -[LPStreamingAudioPlayer shouldUnmuteWhenUserAdjustsVolume]
  -[LPStreamingAudioPlayer initWithAudio:]
  -[LPStreamingAudioPlayer dispatchDidChangeProgressToAllClients:]
  -[LPStreamingAudioPlayer dispatchDidFailToPlayToAllClients]
  -[LPStreamingAudioPlayer dispatchDidTransitionToStateToAllClients:]
  -[LPStreamingAudioPlayer setActive:]
  -[LPStreamingAudioPlayer isActive]
  -[LPStreamingAudioPlayer isFullScreen]
  -[LPStreamingAudioPlayer observeValueForKeyPath:ofObject:change:context:]
  -[LPStreamingAudioPlayer progress]
  -[LPStreamingAudioPlayer state]
  -[LPStreamingAudioPlayer usesSharedAudioSession]


LPImageView : LPComponentView
  // instance methods
  -[LPImageView init]
  -[LPImageView .cxx_destruct]
  -[LPImageView initWithImage:properties:style:]
  -[LPImageView shouldApplyBackground]
  -[LPImageView updateCornerRadius]
  -[LPImageView installDarkeningViewIfNeeded]
  -[LPImageView _updateScalingMode]
  -[LPImageView _createImageViewWithImage:]
  -[LPImageView updateShadowPath]
  -[LPImageView ensureImageView]
  -[LPImageView _createOverlayViewWithOpacity:]
  -[LPImageView imageSizeThatFits:]
  -[LPImageView scalingModeForSize:]
  -[LPImageView _setImageViewScalingMode:]
  -[LPImageView sizeThatFits:]
  -[LPImageView _filter]
  -[LPImageView layoutComponentView]


LPTextView : LPComponentView <LPTextStyleable, LPContentInsettable>
 @property  NSAttributedString *attributedString
 @property  LPTextViewStyle *style

  // instance methods
  -[LPTextView setContentInset:]
  -[LPTextView ascender]
  -[LPTextView init]
  -[LPTextView initWithText:style:]
  -[LPTextView firstLineLeading]
  -[LPTextView lastLineDescent]
  -[LPTextView computedNumberOfLines]
  -[LPTextView setOverrideMaximumNumberOfLines:]
  -[LPTextView .cxx_destruct]
  -[LPTextView lastBaselineAnchor]
  -[LPTextView attributedString]
  -[LPTextView _createTextViewWithAttributedString:style:]
  -[LPTextView effectiveMaximumNumberOfLines]
  -[LPTextView descender]
  -[LPTextView sizeThatFits:]
  -[LPTextView firstBaselineAnchor]
  -[LPTextView effectiveInsets]
  -[LPTextView layoutComponentView]
  -[LPTextView style]


LPCaptionBarAccessoryView : LPComponentView
 @property  {CGSize=dd} size

  // instance methods
  -[LPCaptionBarAccessoryView init]
  -[LPCaptionBarAccessoryView size]
  -[LPCaptionBarAccessoryView .cxx_destruct]
  -[LPCaptionBarAccessoryView _createImageViewWithImage:]
  -[LPCaptionBarAccessoryView ensureAccessoryView]
  -[LPCaptionBarAccessoryView initWithType:side:]
  -[LPCaptionBarAccessoryView layoutComponentView]


LPAppStoreStoryMetadataProviderSpecialization : LPMetadataProviderSpecialization
  // class methods
  +[LPAppStoreStoryMetadataProviderSpecialization specialization]
  +[LPAppStoreStoryMetadataProviderSpecialization generateSpecializedMetadataForCompleteMetadata:withContext:completionHandler:]


LPHTMLVideoComponent : LPHTMLComponent <DOMEventListener>
 @property  BOOL muted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPHTMLVideoComponent styleSet]
  +[LPHTMLVideoComponent ruleDictionaryForStyle:]
  +[LPHTMLVideoComponent ruleDictionaryForStyleWithDarkInterface:]
  +[LPHTMLVideoComponent additionalGlobalOutOfLineStyleDeclarations]

  // instance methods
  -[LPHTMLVideoComponent play]
  -[LPHTMLVideoComponent isPlaying]
  -[LPHTMLVideoComponent setMuted:]
  -[LPHTMLVideoComponent isVisible]
  -[LPHTMLVideoComponent pause]
  -[LPHTMLVideoComponent initWithVideo:style:posterFrame:posterFrameStyle:themePath:generator:]
  -[LPHTMLVideoComponent isMuted]
  -[LPHTMLVideoComponent .cxx_destruct]
  -[LPHTMLVideoComponent updateVisibility]
  -[LPHTMLVideoComponent buildComponentWithPosterFrame:posterFrameStyle:]
  -[LPHTMLVideoComponent createVideoElement]
  -[LPHTMLVideoComponent resolvedVideoElement]
  -[LPHTMLVideoComponent youTubeParametersForVideoURL:]
  -[LPHTMLVideoComponent togglePlaying]
  -[LPHTMLVideoComponent handleEvent:]
  -[LPHTMLVideoComponent shouldAutoPlay]


LPEmailCompatibleHTMLLinkComponent : LPHTMLComponent
  // class methods
  +[LPEmailCompatibleHTMLLinkComponent styleSet]
  +[LPEmailCompatibleHTMLLinkComponent baseRules]
  +[LPEmailCompatibleHTMLLinkComponent ruleDictionaryForStyle:]

  // instance methods
  -[LPEmailCompatibleHTMLLinkComponent initWithURL:generator:]


LPPointUnit : NSObject /usr/lib/libc++.1.dylib <LPCSSText, LPHTMLAttributeText>
 @property  double value

  // class methods
  +[LPPointUnit zero]

  // instance methods
  -[LPPointUnit initWithValue:]
  -[LPPointUnit value]
  -[LPPointUnit _lp_CSSText]
  -[LPPointUnit _lp_HTMLAttributeText]


LPSize : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  LPPointUnit *width
 @property  LPPointUnit *height
 @property  {CGSize=dd} asSize
 @property  BOOL empty

  // instance methods
  -[LPSize copyWithZone:]
  -[LPSize init]
  -[LPSize asSize]
  -[LPSize width]
  -[LPSize .cxx_destruct]
  -[LPSize initWithSquareSize:]
  -[LPSize initWithSquarePoints:]
  -[LPSize initWithSize:]
  -[LPSize height]
  -[LPSize isEmpty]


LPPadding : NSObject /usr/lib/libc++.1.dylib <LPCSSText, NSCopying>
 @property  LPPointUnit *top
 @property  LPPointUnit *leading
 @property  LPPointUnit *bottom
 @property  LPPointUnit *trailing

  // instance methods
  -[LPPadding copyWithZone:]
  -[LPPadding top]
  -[LPPadding init]
  -[LPPadding bottom]
  -[LPPadding .cxx_destruct]
  -[LPPadding setTrailing:]
  -[LPPadding setLeading:]
  -[LPPadding asInsetsForLTR:]
  -[LPPadding leading]
  -[LPPadding trailing]
  -[LPPadding setTop:]
  -[LPPadding setBottom:]
  -[LPPadding _lp_CSSText]


LPTextViewStyle : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  UIColor *color
 @property  UIFont *font
 @property  unsigned int maximumLines
 @property  long long textAlignment
 @property  LPPointUnit *firstLineLeading
 @property  LPPointUnit *lastLineDescent
 @property  LPGlyphStyle *leadingGlyph
 @property  LPPadding *padding
 @property  BOOL shouldScaleMaximumLinesWithDynamicType

  // instance methods
  -[LPTextViewStyle copyWithZone:]
  -[LPTextViewStyle initWithPlatform:]
  -[LPTextViewStyle setTextAlignment:]
  -[LPTextViewStyle textAlignment]
  -[LPTextViewStyle firstLineLeading]
  -[LPTextViewStyle lastLineDescent]
  -[LPTextViewStyle .cxx_destruct]
  -[LPTextViewStyle color]
  -[LPTextViewStyle adjustedForString:]
  -[LPTextViewStyle leadingGlyph]
  -[LPTextViewStyle maximumLines]
  -[LPTextViewStyle setMaximumLines:]
  -[LPTextViewStyle setFirstLineLeading:]
  -[LPTextViewStyle setLastLineDescent:]
  -[LPTextViewStyle setLeadingGlyph:]
  -[LPTextViewStyle shouldScaleMaximumLinesWithDynamicType]
  -[LPTextViewStyle setShouldScaleMaximumLinesWithDynamicType:]
  -[LPTextViewStyle padding]
  -[LPTextViewStyle setFont:]
  -[LPTextViewStyle setColor:]
  -[LPTextViewStyle font]


LPTextRowStyle : NSObject /usr/lib/libc++.1.dylib
 @property  LPTextViewStyle *leading
 @property  LPTextViewStyle *trailing
 @property  long long balancingMode

  // instance methods
  -[LPTextRowStyle left]
  -[LPTextRowStyle initWithPlatform:]
  -[LPTextRowStyle .cxx_destruct]
  -[LPTextRowStyle right]
  -[LPTextRowStyle applyToAllTextViewStyles:]
  -[LPTextRowStyle balancingMode]
  -[LPTextRowStyle setBalancingMode:]
  -[LPTextRowStyle leading]
  -[LPTextRowStyle trailing]


LPVerticalTextStackViewStyle : NSObject /usr/lib/libc++.1.dylib <LPEmailCompatibleCaptionBarItemChild>
 @property  LPPointUnit *firstLineLeading
 @property  LPPointUnit *lastLineDescent
 @property  LPTextRowStyle *aboveTopCaption
 @property  LPTextRowStyle *topCaption
 @property  LPTextRowStyle *bottomCaption
 @property  LPTextRowStyle *belowBottomCaption
 @property  unsigned int maximumNumberOfLines
 @property  BOOL shouldAlignToBaselines
 @property  LPPadding *captionTextPadding
 @property  LPPadding *emailCompatibleMargin

  // instance methods
  -[LPVerticalTextStackViewStyle bottomCaption]
  -[LPVerticalTextStackViewStyle initWithPlatform:]
  -[LPVerticalTextStackViewStyle firstLineLeading]
  -[LPVerticalTextStackViewStyle lastLineDescent]
  -[LPVerticalTextStackViewStyle aboveTopCaption]
  -[LPVerticalTextStackViewStyle belowBottomCaption]
  -[LPVerticalTextStackViewStyle .cxx_destruct]
  -[LPVerticalTextStackViewStyle shouldAlignToBaselines]
  -[LPVerticalTextStackViewStyle setMaximumNumberOfLines:]
  -[LPVerticalTextStackViewStyle maximumNumberOfLines]
  -[LPVerticalTextStackViewStyle setFirstLineLeading:]
  -[LPVerticalTextStackViewStyle setLastLineDescent:]
  -[LPVerticalTextStackViewStyle applyToAllTextViewStyles:]
  -[LPVerticalTextStackViewStyle emailCompatibleMargin]
  -[LPVerticalTextStackViewStyle setShouldAlignToBaselines:]
  -[LPVerticalTextStackViewStyle captionTextPadding]
  -[LPVerticalTextStackViewStyle topCaption]


LPCaptionBarAccessoryStyle : NSObject /usr/lib/libc++.1.dylib
 @property  LPPadding *margin

  // instance methods
  -[LPCaptionBarAccessoryStyle init]
  -[LPCaptionBarAccessoryStyle margin]
  -[LPCaptionBarAccessoryStyle .cxx_destruct]


LPShadowStyle : NSObject /usr/lib/libc++.1.dylib
 @property  double radius
 @property  double opacity
 @property  UIColor *color

  // class methods
  +[LPShadowStyle cardHeadingIconShadow]

  // instance methods
  -[LPShadowStyle init]
  -[LPShadowStyle .cxx_destruct]
  -[LPShadowStyle color]
  -[LPShadowStyle opacity]
  -[LPShadowStyle radius]
  -[LPShadowStyle setColor:]
  -[LPShadowStyle setRadius:]
  -[LPShadowStyle setOpacity:]


LPButtonStyle : NSObject /usr/lib/libc++.1.dylib
 @property  UIColor *foregroundColor
 @property  UIColor *backgroundColor
 @property  UIFont *font
 @property  LPPadding *padding
 @property  LPPadding *margin

  // class methods
  +[LPButtonStyle systemPillButtonStyleForPlatform:]

  // instance methods
  -[LPButtonStyle foregroundColor]
  -[LPButtonStyle setForegroundColor:]
  -[LPButtonStyle setBackgroundColor:]
  -[LPButtonStyle init]
  -[LPButtonStyle setPadding:]
  -[LPButtonStyle margin]
  -[LPButtonStyle backgroundColor]
  -[LPButtonStyle .cxx_destruct]
  -[LPButtonStyle padding]
  -[LPButtonStyle setFont:]
  -[LPButtonStyle font]
  -[LPButtonStyle setMargin:]


LPImageViewStyle : NSObject /usr/lib/libc++.1.dylib <LPEmailCompatibleCaptionBarItemChild, NSCopying>
 @property  LPSize *fixedSize
 @property  BOOL requireFixedSize
 @property  LPSize *minimumSize
 @property  LPPointUnit *fixedFallbackImageSize
 @property  LPPadding *margin
 @property  LPPadding *padding
 @property  long long scalingMode
 @property  long long filter
 @property  long long verticalAlignment
 @property  LPShadowStyle *shadow
 @property  UIColor *maskColor
 @property  double opacity
 @property  BOOL allowsPlatterPresentation
 @property  UIColor *backgroundColor
 @property  LPPointUnit *backgroundInset
 @property  LPPointUnit *cornerRadius
 @property  double darkeningAmount

  // instance methods
  -[LPImageViewStyle minimumSize]
  -[LPImageViewStyle copyWithZone:]
  -[LPImageViewStyle setFilter:]
  -[LPImageViewStyle setShadow:]
  -[LPImageViewStyle setBackgroundColor:]
  -[LPImageViewStyle shadow]
  -[LPImageViewStyle init]
  -[LPImageViewStyle filter]
  -[LPImageViewStyle setCornerRadius:]
  -[LPImageViewStyle setFixedSize:]
  -[LPImageViewStyle maskColor]
  -[LPImageViewStyle darkeningAmount]
  -[LPImageViewStyle margin]
  -[LPImageViewStyle backgroundColor]
  -[LPImageViewStyle .cxx_destruct]
  -[LPImageViewStyle requireFixedSize]
  -[LPImageViewStyle setRequireFixedSize:]
  -[LPImageViewStyle setMaskColor:]
  -[LPImageViewStyle setDarkeningAmount:]
  -[LPImageViewStyle fixedFallbackImageSize]
  -[LPImageViewStyle setFixedFallbackImageSize:]
  -[LPImageViewStyle opacity]
  -[LPImageViewStyle allowsPlatterPresentation]
  -[LPImageViewStyle verticalAlignment]
  -[LPImageViewStyle setVerticalAlignment:]
  -[LPImageViewStyle setScalingMode:]
  -[LPImageViewStyle setMinimumSize:]
  -[LPImageViewStyle emailCompatibleMargin]
  -[LPImageViewStyle scalingMode]
  -[LPImageViewStyle setAllowsPlatterPresentation:]
  -[LPImageViewStyle fixedSize]
  -[LPImageViewStyle padding]
  -[LPImageViewStyle backgroundInset]
  -[LPImageViewStyle setBackgroundInset:]
  -[LPImageViewStyle cornerRadius]
  -[LPImageViewStyle setOpacity:]


LPGlyphStyle : NSObject /usr/lib/libc++.1.dylib
 @property  LPImage *image
 @property  LPPadding *padding
 @property  double opacity
 @property  LPImageViewStyle *imageStyle
 @property  LPPointUnit *baselineOffset

  // instance methods
  -[LPGlyphStyle setBaselineOffset:]
  -[LPGlyphStyle init]
  -[LPGlyphStyle .cxx_destruct]
  -[LPGlyphStyle setImage:]
  -[LPGlyphStyle imageStyle]
  -[LPGlyphStyle image]
  -[LPGlyphStyle opacity]
  -[LPGlyphStyle initSearchGlyph]
  -[LPGlyphStyle padding]
  -[LPGlyphStyle baselineOffset]
  -[LPGlyphStyle setOpacity:]


LPVideoPlayButtonStyle : NSObject /usr/lib/libc++.1.dylib
 @property  LPSize *size
 @property  LPSize *backgroundSize
 @property  double disabledOpacity

  // instance methods
  -[LPVideoPlayButtonStyle initWithPlatform:]
  -[LPVideoPlayButtonStyle size]
  -[LPVideoPlayButtonStyle .cxx_destruct]
  -[LPVideoPlayButtonStyle disabledOpacity]
  -[LPVideoPlayButtonStyle setBackgroundSize:]
  -[LPVideoPlayButtonStyle setDisabledOpacity:]
  -[LPVideoPlayButtonStyle backgroundSize]
  -[LPVideoPlayButtonStyle setSize:]


LPVideoViewStyle : NSObject /usr/lib/libc++.1.dylib
 @property  LPVideoPlayButtonStyle *playButton
 @property  LPImageViewStyle *muteButton
 @property  LPPadding *muteButtonPadding
 @property  double muteButtonOpacity
 @property  double muteButtonHighlightedOpacity
 @property  UIColor *pulsingLoadIndicatorColor
 @property  double pulsingLoadIndicatorMaximumOpacity
 @property  double pulsingLoadIndicatorDuration
 @property  CAMediaTimingFunction *pulsingLoadIndicatorTimingFunction

  // instance methods
  -[LPVideoViewStyle initWithPlatform:]
  -[LPVideoViewStyle muteButton]
  -[LPVideoViewStyle .cxx_destruct]
  -[LPVideoViewStyle playButton]
  -[LPVideoViewStyle muteButtonPadding]
  -[LPVideoViewStyle pulsingLoadIndicatorColor]
  -[LPVideoViewStyle pulsingLoadIndicatorMaximumOpacity]
  -[LPVideoViewStyle pulsingLoadIndicatorDuration]
  -[LPVideoViewStyle pulsingLoadIndicatorTimingFunction]
  -[LPVideoViewStyle muteButtonOpacity]
  -[LPVideoViewStyle muteButtonHighlightedOpacity]
  -[LPVideoViewStyle setMuteButtonOpacity:]
  -[LPVideoViewStyle setMuteButtonHighlightedOpacity:]
  -[LPVideoViewStyle setPulsingLoadIndicatorColor:]
  -[LPVideoViewStyle setPulsingLoadIndicatorMaximumOpacity:]
  -[LPVideoViewStyle setPulsingLoadIndicatorDuration:]
  -[LPVideoViewStyle setPulsingLoadIndicatorTimingFunction:]


LPMusicPlayButtonStyle : NSObject /usr/lib/libc++.1.dylib
 @property  LPSize *size
 @property  UIColor *keyColor
 @property  UIColor *secondaryColor

  // instance methods
  -[LPMusicPlayButtonStyle init]
  -[LPMusicPlayButtonStyle setSecondaryColor:]
  -[LPMusicPlayButtonStyle size]
  -[LPMusicPlayButtonStyle .cxx_destruct]
  -[LPMusicPlayButtonStyle keyColor]
  -[LPMusicPlayButtonStyle setKeyColor:]
  -[LPMusicPlayButtonStyle setSize:]
  -[LPMusicPlayButtonStyle secondaryColor]


LPCaptionBarStyle : NSObject /usr/lib/libc++.1.dylib
 @property  LPImageViewStyle *leadingIcon
 @property  LPImageViewStyle *trailingIcon
 @property  LPCaptionBarAccessoryStyle *leadingAccessory
 @property  LPCaptionBarAccessoryStyle *trailingAccessory
 @property  LPVerticalTextStackViewStyle *textStack
 @property  LPPointUnit *minimumWidth
 @property  LPImageViewStyle *placeholderIcon
 @property  LPMusicPlayButtonStyle *playButton
 @property  LPPadding *playButtonPadding
 @property  LPButtonStyle *button

  // instance methods
  -[LPCaptionBarStyle setMinimumWidth:]
  -[LPCaptionBarStyle minimumWidth]
  -[LPCaptionBarStyle trailingIcon]
  -[LPCaptionBarStyle leadingIcon]
  -[LPCaptionBarStyle .cxx_destruct]
  -[LPCaptionBarStyle playButton]
  -[LPCaptionBarStyle leftAccessory]
  -[LPCaptionBarStyle rightAccessory]
  -[LPCaptionBarStyle leadingAccessory]
  -[LPCaptionBarStyle trailingAccessory]
  -[LPCaptionBarStyle initWithPlatform:sizeClass:]
  -[LPCaptionBarStyle placeholderIcon]
  -[LPCaptionBarStyle playButtonPadding]
  -[LPCaptionBarStyle leftIcon]
  -[LPCaptionBarStyle textStack]
  -[LPCaptionBarStyle button]
  -[LPCaptionBarStyle rightIcon]
  -[LPCaptionBarStyle setButton:]


LPTapToLoadViewStyle : NSObject /usr/lib/libc++.1.dylib
 @property  UIColor *backgroundColor
 @property  UIColor *tapHighlightColor
 @property  LPTextViewStyle *caption
 @property  LPPointUnit *width
 @property  LPPointUnit *height

  // instance methods
  -[LPTapToLoadViewStyle setHeight:]
  -[LPTapToLoadViewStyle setBackgroundColor:]
  -[LPTapToLoadViewStyle initWithPlatform:]
  -[LPTapToLoadViewStyle setWidth:]
  -[LPTapToLoadViewStyle width]
  -[LPTapToLoadViewStyle backgroundColor]
  -[LPTapToLoadViewStyle .cxx_destruct]
  -[LPTapToLoadViewStyle setTapHighlightColor:]
  -[LPTapToLoadViewStyle height]
  -[LPTapToLoadViewStyle tapHighlightColor]
  -[LPTapToLoadViewStyle caption]


LPThemeParametersObserver : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[LPThemeParametersObserver shared]

  // instance methods
  -[LPThemeParametersObserver addClient:]
  -[LPThemeParametersObserver init]
  -[LPThemeParametersObserver dealloc]
  -[LPThemeParametersObserver .cxx_destruct]
  -[LPThemeParametersObserver didChangeContentSizeCategory:]
  -[LPThemeParametersObserver didChangeDarkenColorsStatus:]
  -[LPThemeParametersObserver didChangeThemeParameters]


LPTheme : NSObject /usr/lib/libc++.1.dylib
 @property  UIColor *backgroundColor
 @property  UIColor *highlightColor
 @property  LPCaptionBarStyle *captionBar
 @property  LPTextViewStyle *quotedText
 @property  LPImageViewStyle *mediaImage
 @property  LPImageViewStyle *placeholderIcon
 @property  LPVideoViewStyle *mediaVideo
 @property  UIColor *mediaBackgroundColor
 @property  LPCaptionBarStyle *mediaTopCaptionBar
 @property  LPCaptionBarStyle *mediaBottomCaptionBar
 @property  LPTapToLoadViewStyle *tapToLoad
 @property  UIFont *domainNameIndicatorFont
 @property  UIFont *domainNameIndicatorIconFont
 @property  LPPointUnit *maximumWidth
 @property  LPPointUnit *maximumIntrinsicHeight
 @property  double widthFractionForTallMedia

  // class methods
  +[LPTheme addClient:]
  +[LPTheme themeWithStyle:icon:platform:sizeClass:]
  +[LPTheme primaryLabelColor]
  +[LPTheme iconPlatterPaddingForReason:]
  +[LPTheme iconPlatterCornerRadius]
  +[LPTheme regularTheme]
  +[LPTheme largestIconSizeInPoints]
  +[LPTheme invalidateThemeCache]
  +[LPTheme secondaryLabelColor]

  // instance methods
  -[LPTheme setBackgroundColor:]
  -[LPTheme maximumWidth]
  -[LPTheme valueForUndefinedKey:]
  -[LPTheme setMaximumWidth:]
  -[LPTheme captionBar]
  -[LPTheme mediaBottomCaptionBar]
  -[LPTheme mediaTopCaptionBar]
  -[LPTheme quotedText]
  -[LPTheme mediaImage]
  -[LPTheme mediaVideo]
  -[LPTheme setHighlightColor:]
  -[LPTheme backgroundColor]
  -[LPTheme .cxx_destruct]
  -[LPTheme placeholderIcon]
  -[LPTheme initWithStyle:icon:platform:sizeClass:]
  -[LPTheme adjustForStyle]
  -[LPTheme mediaBackgroundColor]
  -[LPTheme setMediaBackgroundColor:]
  -[LPTheme domainNameIndicatorFont]
  -[LPTheme domainNameIndicatorIconFont]
  -[LPTheme maximumIntrinsicHeight]
  -[LPTheme setMaximumIntrinsicHeight:]
  -[LPTheme widthFractionForTallMedia]
  -[LPTheme setWidthFractionForTallMedia:]
  -[LPTheme highlightColor]
  -[LPTheme tapToLoad]
  -[LPTheme CSSTextForThemeProperty:allowsAlternateProperties:]
  -[LPTheme valueForThemeProperty:]
  -[LPTheme CSSTextForProperty:withValue:allowsAlternateProperties:]
  -[LPTheme CSSCustomPropertiesForThemePropertiesInSet:]


LPImageAttachmentSubstitute : LPImage <NSSecureCoding>
 @property  long long index

  // class methods
  +[LPImageAttachmentSubstitute supportsSecureCoding]

  // instance methods
  -[LPImageAttachmentSubstitute index]
  -[LPImageAttachmentSubstitute initWithImage:]
  -[LPImageAttachmentSubstitute setIndex:]
  -[LPImageAttachmentSubstitute encodeWithCoder:]
  -[LPImageAttachmentSubstitute initWithCoder:]
  -[LPImageAttachmentSubstitute _shouldEncodeData]


LPVideoAttachmentSubstitute : LPVideo <NSSecureCoding>
 @property  long long index

  // class methods
  +[LPVideoAttachmentSubstitute supportsSecureCoding]

  // instance methods
  -[LPVideoAttachmentSubstitute index]
  -[LPVideoAttachmentSubstitute setIndex:]
  -[LPVideoAttachmentSubstitute encodeWithCoder:]
  -[LPVideoAttachmentSubstitute initWithVideo:]
  -[LPVideoAttachmentSubstitute initWithCoder:]
  -[LPVideoAttachmentSubstitute _shouldEncodeData]


RichLinkAttachmentSubstituter : NSObject /usr/lib/libc++.1.dylib <NSKeyedArchiverDelegate, NSKeyedUnarchiverDelegate>
 @property  NSMutableArray *archivedAttachments
 @property  NSArray *attachmentsForUnarchiving
 @property  BOOL shouldSubstituteAttachments
 @property  BOOL shouldIgnoreAppStoreMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[RichLinkAttachmentSubstituter init]
  -[RichLinkAttachmentSubstituter unarchiver:didDecodeObject:]
  -[RichLinkAttachmentSubstituter .cxx_destruct]
  -[RichLinkAttachmentSubstituter applyAttachmentSubstitutionForObject:]
  -[RichLinkAttachmentSubstituter archivedAttachments]
  -[RichLinkAttachmentSubstituter attachmentsForUnarchiving]
  -[RichLinkAttachmentSubstituter setAttachmentsForUnarchiving:]
  -[RichLinkAttachmentSubstituter shouldSubstituteAttachments]
  -[RichLinkAttachmentSubstituter setShouldSubstituteAttachments:]
  -[RichLinkAttachmentSubstituter shouldIgnoreAppStoreMetadata]
  -[RichLinkAttachmentSubstituter setShouldIgnoreAppStoreMetadata:]
  -[RichLinkAttachmentSubstituter archiver:willEncodeObject:]


LPMessagesPayload : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  LPLinkMetadata *metadata
 @property  BOOL placeholder
 @property  BOOL needsSubresourceFetch
 @property  BOOL needsCompleteFetch

  // class methods
  +[LPMessagesPayload supportsSecureCoding]
  +[LPMessagesPayload _linkWithDataRepresentation:substitutingAttachments:attachments:]
  +[LPMessagesPayload linkWithDataRepresentation:attachments:]
  +[LPMessagesPayload linkWithDataRepresentationWithoutSubstitutingAttachments:]

  // instance methods
  -[LPMessagesPayload setMetadata:]
  -[LPMessagesPayload .cxx_destruct]
  -[LPMessagesPayload encodeWithCoder:]
  -[LPMessagesPayload isPlaceholder]
  -[LPMessagesPayload setPlaceholder:]
  -[LPMessagesPayload setNeedsSubresourceFetch:]
  -[LPMessagesPayload setNeedsCompleteFetch:]
  -[LPMessagesPayload _needsWorkaroundForAppStoreTransformerCrash]
  -[LPMessagesPayload performSubstitutionWithAttachments:]
  -[LPMessagesPayload dataRepresentationWithOutOfLineAttachments:]
  -[LPMessagesPayload needsCompleteFetch]
  -[LPMessagesPayload needsSubresourceFetch]
  -[LPMessagesPayload metadata]
  -[LPMessagesPayload initWithCoder:]


LPPlayButtonControl : UIControl /System/Library/Frameworks/WebKit.framework/WebKit <UIGestureRecognizerDelegate>
 @property  UIImageView *imageView
 @property  BOOL indeterminate
 @property  float progress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPPlayButtonControl imageView]
  -[LPPlayButtonControl isIndeterminate]
  -[LPPlayButtonControl _didScroll]
  -[LPPlayButtonControl _createBackgroundView]
  -[LPPlayButtonControl setImageView:]
  -[LPPlayButtonControl hideProgressAnimated:]
  -[LPPlayButtonControl buttonPressed:]
  -[LPPlayButtonControl .cxx_destruct]
  -[LPPlayButtonControl buttonSize]
  -[LPPlayButtonControl intrinsicContentSize]
  -[LPPlayButtonControl defaultBackgroundColor]
  -[LPPlayButtonControl playImage]
  -[LPPlayButtonControl endIndeterminateAnimation]
  -[LPPlayButtonControl showPlayIndicator:]
  -[LPPlayButtonControl setPlayButtonState:]
  -[LPPlayButtonControl beginIndeterminateAnimation]
  -[LPPlayButtonControl traitCollectionDidChange:]
  -[LPPlayButtonControl sizeThatFits:]
  -[LPPlayButtonControl _createImageView]
  -[LPPlayButtonControl _createOuterProgressView]
  -[LPPlayButtonControl _createInnerProgressView]
  -[LPPlayButtonControl _createHighlightView]
  -[LPPlayButtonControl setShowOuterBorder:]
  -[LPPlayButtonControl setShowBorder:]
  -[LPPlayButtonControl _hideTapHighlight]
  -[LPPlayButtonControl _updateEnabledState]
  -[LPPlayButtonControl _updateOuterProgressLayerStroke]
  -[LPPlayButtonControl _showPlayIndicator:]
  -[LPPlayButtonControl _toggleToPlayState]
  -[LPPlayButtonControl outerBorderColor]
  -[LPPlayButtonControl _createProgressIndicatorViewWithBounds:lineWidth:]
  -[LPPlayButtonControl _updateInnerProgressLayerStroke]
  -[LPPlayButtonControl installRecognizersOnView:]
  -[LPPlayButtonControl _createBorderView]
  -[LPPlayButtonControl setEnabled:]
  -[LPPlayButtonControl initWithStyle:]
  -[LPPlayButtonControl setProgress:]
  -[LPPlayButtonControl progress]
  -[LPPlayButtonControl _highlightLongPressRecognized:]
  -[LPPlayButtonControl gestureRecognizer:canPreventGestureRecognizer:]
  -[LPPlayButtonControl gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[LPPlayButtonControl buttonCornerRadius]
  -[LPPlayButtonControl pauseImage]
  -[LPPlayButtonControl layoutSubviews]
  -[LPPlayButtonControl setProgress:animated:]


LPPlayButtonShapeView : UIView /System/Library/Frameworks/WebKit.framework/WebKit
 @property  CAShapeLayer *layer

  // class methods
  +[LPPlayButtonShapeView layerClass]


LPPlayButtonView : LPComponentView <LPContentInsettable>
  // instance methods
  -[LPPlayButtonView setContentInset:]
  -[LPPlayButtonView dealloc]
  -[LPPlayButtonView .cxx_destruct]
  -[LPPlayButtonView initWithPlaybackInformation:style:]
  -[LPPlayButtonView updateButton]
  -[LPPlayButtonView installiTunesButton]
  -[LPPlayButtonView installDisablediTunesButton]
  -[LPPlayButtonView installPlaceholderButton]
  -[LPPlayButtonView installPreviewButton]
  -[LPPlayButtonView installAudioButton]
  -[LPPlayButtonView updateButtonForSongOrAlbum]
  -[LPPlayButtonView updateButtonForPodcast]
  -[LPPlayButtonView updateButtonForRadio]
  -[LPPlayButtonView updateButtonForAudioBook]
  -[LPPlayButtonView updateButtonForAudioFile]
  -[LPPlayButtonView layoutComponentView]


LPLinkViewComponents : NSObject /usr/lib/libc++.1.dylib
 @property  LPCaptionBarView *captionBar
 @property  LPComponentView *media
 @property  UIView *mediaBackground
 @property  LPCaptionBarView *mediaTopCaptionBar
 @property  LPCaptionBarView *mediaBottomCaptionBar
 @property  LPTextView *quote
 @property  LPDomainNameIndicator *domainNameIndicator

  // instance methods
  -[LPLinkViewComponents captionBar]
  -[LPLinkViewComponents mediaBottomCaptionBar]
  -[LPLinkViewComponents mediaTopCaptionBar]
  -[LPLinkViewComponents quote]
  -[LPLinkViewComponents media]
  -[LPLinkViewComponents setCaptionBar:]
  -[LPLinkViewComponents setMediaBottomCaptionBar:]
  -[LPLinkViewComponents .cxx_destruct]
  -[LPLinkViewComponents setMediaTopCaptionBar:]
  -[LPLinkViewComponents setMedia:]
  -[LPLinkViewComponents setQuote:]
  -[LPLinkViewComponents mediaBackground]
  -[LPLinkViewComponents setMediaBackground:]
  -[LPLinkViewComponents domainNameIndicator]
  -[LPLinkViewComponents setDomainNameIndicator:]


LPLinkView : UIView /System/Library/Frameworks/WebKit.framework/WebKit <UIContextMenuInteractionDelegate, UIGestureRecognizerDelegate, CAAnimationDelegate, LPComponentViewDelegate, LPTapToLoadViewDelegate, LPThemeClient>
 @property  <LPLinkViewDelegate> *delegate
 @property  {UIEdgeInsets=dddd} contentInset
 @property  NSURL *URL
 @property  NSURL *_overrideURL
 @property  BOOL _disableAnimations
 @property  long long _animationOrigin
 @property  BOOL _needsMessagesTranscriptPushCounterAnimation
 @property  BOOL _disableTapGesture
 @property  BOOL _disableHighlightGesture
 @property  BOOL _disablePreviewGesture
 @property  BOOL _disablePlayback
 @property  BOOL _disablePlaybackControls
 @property  BOOL _disableAutoPlay
 @property  BOOL _allowsLoadingMediaWithAutoPlayDisabled
 @property  BOOL _allowsTapToLoad
 @property  BOOL _usesDeferredLayout
 @property  BOOL _forceFlexibleWidth
 @property  BOOL _applyCornerRadius
 @property  long long _style
 @property  {UIEdgeInsets=dddd} _textSafeAreaInset
 @property  unsigned long _preferredSizeClass
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _primaryCaptionBarFrame
 @property  NSString *_sourceBundleIdentifier
 @property  LPLinkMetadata *metadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPLinkView setContentInset:]
  -[LPLinkView contentInset]
  -[LPLinkView _style]
  -[LPLinkView animationDidStop:finished:]
  -[LPLinkView contextMenuInteraction:willDisplayMenuForConfiguration:animator:]
  -[LPLinkView _overrideURL]
  -[LPLinkView setMetadata:]
  -[LPLinkView _edgesPropagatingSafeAreaInsetsToDescendants]
  -[LPLinkView _fetchMetadata]
  -[LPLinkView _setPresentationProperties:]
  -[LPLinkView _setMetadata:isFinal:]
  -[LPLinkView _createCaptionBar]
  -[LPLinkView _setAllowsTapToLoad:]
  -[LPLinkView init]
  -[LPLinkView _allowsTapToLoad]
  -[LPLinkView _disableAutoPlay]
  -[LPLinkView _setDisableAutoPlay:]
  -[LPLinkView _didScroll]
  -[LPLinkView contextMenuInteraction:configurationForMenuAtLocation:]
  -[LPLinkView _invalidateLayout]
  -[LPLinkView initWithFrame:]
  -[LPLinkView initWithURL:]
  -[LPLinkView _setSourceBundleIdentifier:]
  -[LPLinkView _createMediaView]
  -[LPLinkView .cxx_destruct]
  -[LPLinkView initWithMetadata:]
  -[LPLinkView _disablePlayback]
  -[LPLinkView _disablePlaybackControls]
  -[LPLinkView _allowsLoadingMediaWithAutoPlayDisabled]
  -[LPLinkView componentViewDidChangeIntrinsicContentSize:]
  -[LPLinkView intrinsicContentSize]
  -[LPLinkView encodeWithCoder:]
  -[LPLinkView _animationOrigin]
  -[LPLinkView componentView:allowedImageFilterForFilter:]
  -[LPLinkView _setDisableAnimations:]
  -[LPLinkView _setForceFlexibleWidth:]
  -[LPLinkView themeParametersDidChange]
  -[LPLinkView sizeThatFits:]
  -[LPLinkView _setApplyCornerRadius:]
  -[LPLinkView _setPreferredSizeClass:]
  -[LPLinkView _setDisableTapGesture:]
  -[LPLinkView _commonInitWithURL:]
  -[LPLinkView _configureWithoutLoadingMetadataFromURLs:]
  -[LPLinkView _fetchMetadataForURL:withSubresources:completionHandler:]
  -[LPLinkView initWithPresentationProperties:URL:]
  -[LPLinkView _updateMetadataIsComplete]
  -[LPLinkView _invalidatePresentationProperties]
  -[LPLinkView _setMetadataInternal:]
  -[LPLinkView _computePresentationPropertiesFromMetadataIfNeeded]
  -[LPLinkView _layoutLinkView]
  -[LPLinkView _createQuotedTextView]
  -[LPLinkView _layoutLinkViewForSize:applyingLayout:]
  -[LPLinkView _createMediaTopCaptionBarView]
  -[LPLinkView _createMediaBottomCaptionBarView]
  -[LPLinkView _createDomainNameIndicator]
  -[LPLinkView animateOutAndRemoveViews]
  -[LPLinkView _shouldApplyCornerRadius]
  -[LPLinkView _uninstallTapGestureRecognizers]
  -[LPLinkView _uninstallHighlightGestureRecognizers]
  -[LPLinkView _shouldClipAnimationView]
  -[LPLinkView _createComponents]
  -[LPLinkView animateInViews]
  -[LPLinkView animateBackgroundColor]
  -[LPLinkView _rebuildGestureRecognizersIfNeeded]
  -[LPLinkView _setupView]
  -[LPLinkView _shouldUseAnimations]
  -[LPLinkView _rebuildSubviewsWithAnimation:]
  -[LPLinkView animateFromOldFrame:oldMediaBackgroundFrame:oldCaptionBarView:]
  -[LPLinkView _setOverrideURL:]
  -[LPLinkView _createTapToLoadView]
  -[LPLinkView _videoViewConfiguration]
  -[LPLinkView _isUsingAppClipPresentation]
  -[LPLinkView _addHighlightRecognizerToView:forMedia:]
  -[LPLinkView _addTapRecognizerToView:forMedia:]
  -[LPLinkView _captionBarButtonPressed:]
  -[LPLinkView _disableHighlightGesture]
  -[LPLinkView _installHighlightGestureRecognizers]
  -[LPLinkView _installTapGestureRecognizers]
  -[LPLinkView _disablePreviewGesture]
  -[LPLinkView _uninstallPreviewGestureRecognizer]
  -[LPLinkView _installPreviewGestureRecognizer]
  -[LPLinkView _mediaTapRecognized:]
  -[LPLinkView _setHighlightMedia:]
  -[LPLinkView _captionTapRecognized:]
  -[LPLinkView _mediaHighlightRecognized:]
  -[LPLinkView _captionHighlightRecognized:]
  -[LPLinkView _cancelActiveHighlight]
  -[LPLinkView _setHighlightCaption:]
  -[LPLinkView _openURLAllowingSensitiveSchemes:allowingAssociatedApplications:]
  -[LPLinkView tapToLoadViewWasTapped:]
  -[LPLinkView initWithMetadataLoadedFromURL:]
  -[LPLinkView initWithPresentationProperties:]
  -[LPLinkView set_preferredSizeClass:]
  -[LPLinkView _setTextSafeAreaInset:]
  -[LPLinkView _primaryCaptionBarFrame]
  -[LPLinkView _setDisableHighlightGesture:]
  -[LPLinkView _setDisablePreviewGesture:]
  -[LPLinkView _disableAnimations]
  -[LPLinkView _needsMessagesTranscriptPushCounterAnimation]
  -[LPLinkView _setNeedsMessagesTranscriptPushCounterAnimation:]
  -[LPLinkView _disableTapGesture]
  -[LPLinkView _setAllowsLoadingMediaWithAutoPlayDisabled:]
  -[LPLinkView _setDisablePlayback:]
  -[LPLinkView _setDisablePlaybackControls:]
  -[LPLinkView _setAnimationOrigin:]
  -[LPLinkView _usesDeferredLayout]
  -[LPLinkView _setUsesDeferredLayout:]
  -[LPLinkView _forceFlexibleWidth]
  -[LPLinkView _textSafeAreaInset]
  -[LPLinkView _sourceBundleIdentifier]
  -[LPLinkView setDelegate:]
  -[LPLinkView URL]
  -[LPLinkView gestureRecognizer:canPreventGestureRecognizer:]
  -[LPLinkView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[LPLinkView _setMaskImage:]
  -[LPLinkView _preferredSizeClass]
  -[LPLinkView setURL:]
  -[LPLinkView metadata]
  -[LPLinkView gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[LPLinkView gestureRecognizer:shouldReceiveTouch:]
  -[LPLinkView delegate]
  -[LPLinkView setSuppressMask:]
  -[LPLinkView layoutSubviews]
  -[LPLinkView initWithCoder:]
  -[LPLinkView _applyCornerRadius]
  -[LPLinkView _initWithMultipleMetadata:]
  -[LPLinkView _setMultipleMetadata:]
  -[LPLinkView _initWithMetadataLoadedFromURLs:]
  -[LPLinkView _setAction:withText:]


LPComponentView : UIView /System/Library/Frameworks/WebKit.framework/WebKit
 @property  <LPComponentViewDelegate> *delegate

  // instance methods
  -[LPComponentView didMoveToWindow]
  -[LPComponentView init]
  -[LPComponentView initWithFrame:]
  -[LPComponentView .cxx_destruct]
  -[LPComponentView componentViewDidMoveToWindow]
  -[LPComponentView shouldAllowHighlightToRecognizeSimultaneouslyWithGesture:]
  -[LPComponentView sizeThatFits:]
  -[LPComponentView isFlipped]
  -[LPComponentView setDelegate:]
  -[LPComponentView delegate]
  -[LPComponentView layoutSubviews]
  -[LPComponentView initWithCoder:]
  -[LPComponentView layoutComponentView]


LPEmailCompatibleHTMLTextComponent : LPHTMLComponent
  // class methods
  +[LPEmailCompatibleHTMLTextComponent styleSet]
  +[LPEmailCompatibleHTMLTextComponent baseRules]
  +[LPEmailCompatibleHTMLTextComponent ruleDictionaryForStyle:]

  // instance methods
  -[LPEmailCompatibleHTMLTextComponent initWithCaption:style:themePath:generator:]


LPAudioProperties : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *accessibilityText

  // instance methods
  -[LPAudioProperties copyWithZone:]
  -[LPAudioProperties .cxx_destruct]
  -[LPAudioProperties accessibilityText]
  -[LPAudioProperties isEqual:]
  -[LPAudioProperties setAccessibilityText:]


LPAudio : NSObject /usr/lib/libc++.1.dylib <AVAssetResourceLoaderDelegate, NSSecureCoding>
 @property  unsigned long _encodedSize
 @property  NSData *data
 @property  NSString *MIMEType
 @property  AVAsset *_asset
 @property  NSURL *fileURL
 @property  NSURL *streamingURL
 @property  LPAudioProperties *properties
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPAudio supportsSecureCoding]

  // instance methods
  -[LPAudio fileURL]
  -[LPAudio _asset]
  -[LPAudio init]
  -[LPAudio .cxx_destruct]
  -[LPAudio encodeWithCoder:]
  -[LPAudio data]
  -[LPAudio setFileURL:]
  -[LPAudio resourceLoader:shouldWaitForLoadingOfRequestedResource:]
  -[LPAudio _initWithAudio:]
  -[LPAudio isEqual:]
  -[LPAudio MIMEType]
  -[LPAudio properties]
  -[LPAudio initWithCoder:]
  -[LPAudio initWithStreamingURL:properties:]
  -[LPAudio streamingURL]
  -[LPAudio initByReferencingFileURL:MIMEType:properties:]
  -[LPAudio _shouldEncodeData]
  -[LPAudio _mapDataFromFileURL]
  -[LPAudio _encodedSize]


LPiTunesMediaURLComponents : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *identifier
 @property  NSString *storefrontCountryCode

  // class methods
  +[LPiTunesMediaURLComponents identifierFromQueryItems:pathComponent:]
  +[LPiTunesMediaURLComponents storefrontCountryCodeFromPathComponent:]

  // instance methods
  -[LPiTunesMediaURLComponents initWithURL:]
  -[LPiTunesMediaURLComponents .cxx_destruct]
  -[LPiTunesMediaURLComponents storefrontCountryCode]
  -[LPiTunesMediaURLComponents identifier]


LPYouTubePlayerScriptMessageHandler : NSObject /usr/lib/libc++.1.dylib <WKScriptMessageHandler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPYouTubePlayerScriptMessageHandler .cxx_destruct]
  -[LPYouTubePlayerScriptMessageHandler userContentController:didReceiveScriptMessage:]
  -[LPYouTubePlayerScriptMessageHandler initWithPlayerView:]


LPYouTubePlayerView : UIView /System/Library/Frameworks/WebKit.framework/WebKit <UIScrollViewDelegate, WKNavigationDelegate>
 @property  <LPYouTubePlayerDelegate> *delegate
 @property  BOOL startsPlayingAutomatically
 @property  BOOL showsControls
 @property  double startTime
 @property  double endTime
 @property  BOOL muted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPYouTubePlayerView endTime]
  -[LPYouTubePlayerView setEndTime:]
  -[LPYouTubePlayerView setStartTime:]
  -[LPYouTubePlayerView play]
  -[LPYouTubePlayerView setMuted:]
  -[LPYouTubePlayerView pause]
  -[LPYouTubePlayerView initWithFrame:]
  -[LPYouTubePlayerView dealloc]
  -[LPYouTubePlayerView _webView:navigation:didFailProvisionalLoadInSubframe:withError:]
  -[LPYouTubePlayerView isMuted]
  -[LPYouTubePlayerView setShowsControls:]
  -[LPYouTubePlayerView loadVideoWithID:]
  -[LPYouTubePlayerView seekTo:]
  -[LPYouTubePlayerView webView:didFailProvisionalNavigation:withError:]
  -[LPYouTubePlayerView .cxx_destruct]
  -[LPYouTubePlayerView enterFullScreen]
  -[LPYouTubePlayerView exitFullScreen]
  -[LPYouTubePlayerView didReceiveScriptMessage:]
  -[LPYouTubePlayerView dispatchErrorWithCode:]
  -[LPYouTubePlayerView _evaluatePlayerCommand:]
  -[LPYouTubePlayerView _parameterScript]
  -[LPYouTubePlayerView loadVideoWithURL:]
  -[LPYouTubePlayerView loadVideoWithEmbedURL:]
  -[LPYouTubePlayerView showsControls]
  -[LPYouTubePlayerView startsPlayingAutomatically]
  -[LPYouTubePlayerView setStartsPlayingAutomatically:]
  -[LPYouTubePlayerView scrollViewDidScroll:]
  -[LPYouTubePlayerView setDelegate:]
  -[LPYouTubePlayerView webView:didFailNavigation:withError:]
  -[LPYouTubePlayerView delegate]
  -[LPYouTubePlayerView layoutSubviews]
  -[LPYouTubePlayerView startTime]
  -[LPYouTubePlayerView createVideoPlayerView]


LPEmailCompatibleHTMLCaptionBarItemComponent : LPHTMLComponent
  // class methods
  +[LPEmailCompatibleHTMLCaptionBarItemComponent styleSet]
  +[LPEmailCompatibleHTMLCaptionBarItemComponent ruleDictionaryForStyle:]

  // instance methods
  -[LPEmailCompatibleHTMLCaptionBarItemComponent initWithStyle:themePath:generator:]


LPLinkMetadataPresentationTransformer : NSObject /usr/lib/libc++.1.dylib
 @property  LPLinkMetadata *metadata
 @property  NSURL *URL
 @property  BOOL complete
 @property  BOOL allowsTapToLoad
 @property  BOOL allowsTapping
 @property  unsigned long preferredSizeClass
 @property  LPImage *sourceContextIcon
 @property  NSString *sourceBundleIdentifier
 @property  double scaleFactor
 @property  NSURL *originalURL
 @property  NSURL *canonicalURL
 @property  BOOL hasMedia

  // instance methods
  -[LPLinkMetadataPresentationTransformer sourceBundleIdentifier]
  -[LPLinkMetadataPresentationTransformer originalURL]
  -[LPLinkMetadataPresentationTransformer isComplete]
  -[LPLinkMetadataPresentationTransformer setMetadata:]
  -[LPLinkMetadataPresentationTransformer domainName]
  -[LPLinkMetadataPresentationTransformer setAllowsTapToLoad:]
  -[LPLinkMetadataPresentationTransformer presentationProperties]
  -[LPLinkMetadataPresentationTransformer init]
  -[LPLinkMetadataPresentationTransformer canonicalURL]
  -[LPLinkMetadataPresentationTransformer commonPresentationPropertiesForStyle:]
  -[LPLinkMetadataPresentationTransformer _populateProperties:withPrimaryImage:]
  -[LPLinkMetadataPresentationTransformer _populateProperties:withPrimaryIcon:]
  -[LPLinkMetadataPresentationTransformer _rowConfiguration]
  -[LPLinkMetadataPresentationTransformer .cxx_destruct]
  -[LPLinkMetadataPresentationTransformer setComplete:]
  -[LPLinkMetadataPresentationTransformer setSourceBundleIdentifier:]
  -[LPLinkMetadataPresentationTransformer unspecializedPresentationProperties]
  -[LPLinkMetadataPresentationTransformer domainNameForIndicator]
  -[LPLinkMetadataPresentationTransformer unspecializedPresentationPropertiesForStyle:]
  -[LPLinkMetadataPresentationTransformer _populateProperties:withPrimaryIcon:iconProperties:]
  -[LPLinkMetadataPresentationTransformer _prefersImageAsIconWithStyle:]
  -[LPLinkMetadataPresentationTransformer setPreferredSizeClass:]
  -[LPLinkMetadataPresentationTransformer setAllowsTapping:]
  -[LPLinkMetadataPresentationTransformer titleForStyle:]
  -[LPLinkMetadataPresentationTransformer shouldUseAppClipPresentation]
  -[LPLinkMetadataPresentationTransformer subtitleForStyle:]
  -[LPLinkMetadataPresentationTransformer videoForStyle:]
  -[LPLinkMetadataPresentationTransformer quotedTextForStyle:]
  -[LPLinkMetadataPresentationTransformer sourceContextIcon]
  -[LPLinkMetadataPresentationTransformer rendererStyle]
  -[LPLinkMetadataPresentationTransformer mainCaptionBarForStyle:]
  -[LPLinkMetadataPresentationTransformer backgroundColorForStyle:]
  -[LPLinkMetadataPresentationTransformer imageForStyle:icon:alternateImages:]
  -[LPLinkMetadataPresentationTransformer _prefersLeadingIconWithStyle:]
  -[LPLinkMetadataPresentationTransformer audioForStyle:]
  -[LPLinkMetadataPresentationTransformer _prefersIconAsImage]
  -[LPLinkMetadataPresentationTransformer allowsTapToLoad]
  -[LPLinkMetadataPresentationTransformer allowsTapping]
  -[LPLinkMetadataPresentationTransformer setSourceContextIcon:]
  -[LPLinkMetadataPresentationTransformer URL]
  -[LPLinkMetadataPresentationTransformer preferredSizeClass]
  -[LPLinkMetadataPresentationTransformer setURL:]
  -[LPLinkMetadataPresentationTransformer metadata]
  -[LPLinkMetadataPresentationTransformer scaleFactor]
  -[LPLinkMetadataPresentationTransformer setScaleFactor:]
  -[LPLinkMetadataPresentationTransformer hasMedia]


LPiCloudSharingMetadataProviderSpecialization : LPMetadataProviderSpecialization
  // class methods
  +[LPiCloudSharingMetadataProviderSpecialization specialization]
  +[LPiCloudSharingMetadataProviderSpecialization specializedMetadataProviderForURLWithContext:]
  +[LPiCloudSharingMetadataProviderSpecialization extractApplicationFromURL:]
  +[LPiCloudSharingMetadataProviderSpecialization extractTitleFromURL:]
  +[LPiCloudSharingMetadataProviderSpecialization applicationNameMap]

  // instance methods
  -[LPiCloudSharingMetadataProviderSpecialization fail]
  -[LPiCloudSharingMetadataProviderSpecialization .cxx_destruct]
  -[LPiCloudSharingMetadataProviderSpecialization cancel]
  -[LPiCloudSharingMetadataProviderSpecialization initWithContext:applicationFromURL:titleFromURL:]
  -[LPiCloudSharingMetadataProviderSpecialization canUseCloudKit]
  -[LPiCloudSharingMetadataProviderSpecialization completeUsingApplication:title:]
  -[LPiCloudSharingMetadataProviderSpecialization iconFromShare:]
  -[LPiCloudSharingMetadataProviderSpecialization completeWithShareMetadata:bundleIDs:]
  -[LPiCloudSharingMetadataProviderSpecialization applicationFromBundleIdentifiers:containerIdentifier:]
  -[LPiCloudSharingMetadataProviderSpecialization start]


LPStatistics : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[LPStatistics incrementMetric:]


LPStreamingAudioPlayButtonControl : LPPlayButtonControl <LPStreamingAudioPlayerClient>
  // instance methods
  -[LPStreamingAudioPlayButtonControl dealloc]
  -[LPStreamingAudioPlayButtonControl buttonPressed:]
  -[LPStreamingAudioPlayButtonControl .cxx_destruct]
  -[LPStreamingAudioPlayButtonControl streamingAudioPlayer:didChangeProgress:]
  -[LPStreamingAudioPlayButtonControl streamingAudioPlayer:didTransitionToState:]
  -[LPStreamingAudioPlayButtonControl streamingAudioPlayerDidFailToPlay:]
  -[LPStreamingAudioPlayButtonControl initWithAudio:style:]


LPYouTubeURLComponents : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *videoID
 @property  double startTime

  // class methods
  +[LPYouTubeURLComponents parseYouTubeTimeFormat:outTime:]
  +[LPYouTubeURLComponents formatAsYouTubeTime:]

  // instance methods
  -[LPYouTubeURLComponents setStartTime:]
  -[LPYouTubeURLComponents .cxx_destruct]
  -[LPYouTubeURLComponents videoID]
  -[LPYouTubeURLComponents setVideoID:]
  -[LPYouTubeURLComponents startTime]


LPPresentationSpecializations : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[LPPresentationSpecializations isiCloudURL:]
  +[LPPresentationSpecializations isRedditPostURL:]
  +[LPPresentationSpecializations redditJSONURLForRedditPostURL:]
  +[LPPresentationSpecializations isAppleNewsURL:]
  +[LPPresentationSpecializations youTubeVideoComponentsForEmbedURL:]
  +[LPPresentationSpecializations isiTunesStoreOrAdjacentURL:]
  +[LPPresentationSpecializations isAppleTVURL:]
  +[LPPresentationSpecializations canonicalMetadataURLForURL:]
  +[LPPresentationSpecializations userAgentForURL:]
  +[LPPresentationSpecializations shouldLoadInsteadOfUsingExistingWebViewForURL:]
  +[LPPresentationSpecializations isTwitterProfileImageURL:]
  +[LPPresentationSpecializations isRedditStaticImage:]
  +[LPPresentationSpecializations isKnownBlankImageURL:]
  +[LPPresentationSpecializations articleTitleFromTitle:withURL:]
  +[LPPresentationSpecializations isAppStoreStoryURL:]
  +[LPPresentationSpecializations isMuninURL:]
  +[LPPresentationSpecializations isAppleMapsURL:]
  +[LPPresentationSpecializations isAppleMapsCollectionURL:]
  +[LPPresentationSpecializations isGoogleSearchURL:]
  +[LPPresentationSpecializations isGoogleURL:]
  +[LPPresentationSpecializations searchQueryForURL:]
  +[LPPresentationSpecializations youTubeVideoComponentsForVideoURL:]
  +[LPPresentationSpecializations isMicroblogPost:]
  +[LPPresentationSpecializations shouldPreferMiniStyleForURL:]
  +[LPPresentationSpecializations isSinaWeiboURL:]
  +[LPPresentationSpecializations isTweetURL:]
  +[LPPresentationSpecializations isYouTubeURL:]
  +[LPPresentationSpecializations nonMobileTweetURLForTweetURL:]
  +[LPPresentationSpecializations nonMobileRedditURLForRedditURL:]
  +[LPPresentationSpecializations nonDirectURLForImgurURL:]
  +[LPPresentationSpecializations nonMobileYouTubeURLForURL:]
  +[LPPresentationSpecializations youTubeVideoURLForEmbedURL:]
  +[LPPresentationSpecializations destinationForGoogleRedirectURL:]
  +[LPPresentationSpecializations isGitHubURL:]
  +[LPPresentationSpecializations isTwitterShortenerURL:]
  +[LPPresentationSpecializations isTikTokURL:]
  +[LPPresentationSpecializations isYouTubeVideoURL:]
  +[LPPresentationSpecializations isYouTubeEmbedURL:]


LPHTMLTapToLoadComponent : LPHTMLComponent <DOMEventListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPHTMLTapToLoadComponent styleSet]
  +[LPHTMLTapToLoadComponent ruleDictionaryForStyle:]
  +[LPHTMLTapToLoadComponent ruleDictionaryForStyleWithDarkInterface:]

  // instance methods
  -[LPHTMLTapToLoadComponent .cxx_destruct]
  -[LPHTMLTapToLoadComponent handleEvent:]
  -[LPHTMLTapToLoadComponent buildComponents]
  -[LPHTMLTapToLoadComponent initWithThemePath:generator:]


LPLinkMetadataObserver : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[LPLinkMetadataObserver stopObserving]
  -[LPLinkMetadataObserver dealloc]
  -[LPLinkMetadataObserver .cxx_destruct]
  -[LPLinkMetadataObserver observeValueForKeyPath:ofObject:change:context:]
  -[LPLinkMetadataObserver initWithMetadata:callback:]


LPAnimatedImageTranscoder : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[LPAnimatedImageTranscoder encodeQueue]

  // instance methods
  -[LPAnimatedImageTranscoder .cxx_destruct]
  -[LPAnimatedImageTranscoder failed]
  -[LPAnimatedImageTranscoder transcodeWithCompletionHandler:]
  -[LPAnimatedImageTranscoder cancel]
  -[LPAnimatedImageTranscoder initWithAnimatedImage:]
  -[LPAnimatedImageTranscoder observeValueForKeyPath:ofObject:change:context:]
  -[LPAnimatedImageTranscoder _transcodeWithCompletionHandler:]
  -[LPAnimatedImageTranscoder encodeUntilNotReadyForMoreMediaData]
  -[LPAnimatedImageTranscoder removeReadyForDataObserverIfNeeded]
  -[LPAnimatedImageTranscoder encodeNextFrame]


LPResources : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[LPResources muteButton]
  +[LPResources chevron]
  +[LPResources pagesIcon]
  +[LPResources notesIcon]
  +[LPResources numbersIcon]
  +[LPResources keynoteIcon]
  +[LPResources iCloudDriveIcon]
  +[LPResources remindersIcon]
  +[LPResources clearCachedResources]
  +[LPResources playButton]
  +[LPResources unmuteButton]
  +[LPResources textIcon]
  +[LPResources indeterminateProgressSpinner]
  +[LPResources indeterminateProgressSpinnerDarkInterface]
  +[LPResources metadataExtractorJS]
  +[LPResources searchGlyph]
  +[LPResources pauseButton]
  +[LPResources fileIcon]
  +[LPResources transportDriveIcon]
  +[LPResources transportWalkIcon]
  +[LPResources transportTransitIcon]
  +[LPResources transportBicycleIcon]
  +[LPResources safariIcon]
  +[LPResources telephoneIcon]
  +[LPResources appClipIcon]


LPTestingOverrides : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[LPTestingOverrides forceEnableAllEntitlements]
  +[LPTestingOverrides forceContentSizeCategory]
  +[LPTestingOverrides forceRTL]
  +[LPTestingOverrides forceSubsampleImagesToScreenSize]
  +[LPTestingOverrides reset]
  +[LPTestingOverrides setForceRTL:]
  +[LPTestingOverrides setCustomLoader:]
  +[LPTestingOverrides setForceImageLoadingScaleFactor:]
  +[LPTestingOverrides setForceSubsampleImagesToScreenSize:]
  +[LPTestingOverrides setForceContentSizeCategory:]
  +[LPTestingOverrides setForceEnableAllEntitlements:]
  +[LPTestingOverrides setForceAllowPreviewingFilesOutsideApplicationContainer:]
  +[LPTestingOverrides forceAllowPreviewingFilesOutsideApplicationContainer]
  +[LPTestingOverrides customLoader]
  +[LPTestingOverrides forceImageLoadingScaleFactor]


LPFileMetadataProviderSpecialization : LPMetadataProviderSpecialization <LPMetadataProviderSpecializationDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPFileMetadataProviderSpecialization specialization]
  +[LPFileMetadataProviderSpecialization specializedMetadataProviderForURLWithContext:]
  +[LPFileMetadataProviderSpecialization _thumbnailQueue]
  +[LPFileMetadataProviderSpecialization specializedMetadataProviderForResourceWithContext:]

  // instance methods
  -[LPFileMetadataProviderSpecialization complete]
  -[LPFileMetadataProviderSpecialization .cxx_destruct]
  -[LPFileMetadataProviderSpecialization cancel]
  -[LPFileMetadataProviderSpecialization fetchMetadataFromURL:]
  -[LPFileMetadataProviderSpecialization fetchMetadataForReachableFile:]
  -[LPFileMetadataProviderSpecialization generateFallbackMetadataForUnreachableFile:]
  -[LPFileMetadataProviderSpecialization fetchIconAndThumbnailFromQuickLookForURL:]
  -[LPFileMetadataProviderSpecialization updatePreliminaryMetadata]
  -[LPFileMetadataProviderSpecialization cleanUpTemporaryFile]
  -[LPFileMetadataProviderSpecialization metadataProviderSpecializationDidFail:]
  -[LPFileMetadataProviderSpecialization metadataProviderSpecialization:didCompleteWithMetadata:]
  -[LPFileMetadataProviderSpecialization start]


LPHTMLImageComponent : LPHTMLComponent
  // class methods
  +[LPHTMLImageComponent styleSet]
  +[LPHTMLImageComponent baseRules]
  +[LPHTMLImageComponent ruleDictionaryForStyle:]
  +[LPHTMLImageComponent ruleDictionaryForStyleWithDarkInterface:]

  // instance methods
  -[LPHTMLImageComponent initWithImage:properties:style:themePath:generator:isChildOfMultipleImageComponent:]


LPEmailCompatibleHTMLQuoteComponent : LPHTMLComponent
  // class methods
  +[LPEmailCompatibleHTMLQuoteComponent styleSet]
  +[LPEmailCompatibleHTMLQuoteComponent baseRules]
  +[LPEmailCompatibleHTMLQuoteComponent ruleDictionaryForStyle:]
  +[LPEmailCompatibleHTMLQuoteComponent ruleDictionaryForStyleWithDarkInterface:]

  // instance methods
  -[LPEmailCompatibleHTMLQuoteComponent initWithText:style:themePath:generator:]


LPAppleMapsMetadataProviderSpecialization : LPMetadataProviderSpecialization
  // class methods
  +[LPAppleMapsMetadataProviderSpecialization specialization]
  +[LPAppleMapsMetadataProviderSpecialization specializedMetadataProviderForURLWithContext:]

  // instance methods
  -[LPAppleMapsMetadataProviderSpecialization complete]
  -[LPAppleMapsMetadataProviderSpecialization fail]
  -[LPAppleMapsMetadataProviderSpecialization .cxx_destruct]
  -[LPAppleMapsMetadataProviderSpecialization geocoder]
  -[LPAppleMapsMetadataProviderSpecialization cancel]
  -[LPAppleMapsMetadataProviderSpecialization continueWithBaseSnapshotOptions:mapItems:]
  -[LPAppleMapsMetadataProviderSpecialization completeWithCollection]
  -[LPAppleMapsMetadataProviderSpecialization completeWithCuratedCollection]
  -[LPAppleMapsMetadataProviderSpecialization completeWithPublisher]
  -[LPAppleMapsMetadataProviderSpecialization completeWithDirections]
  -[LPAppleMapsMetadataProviderSpecialization completeWithSearchQuery:]
  -[LPAppleMapsMetadataProviderSpecialization resolveMapRegionWithCompletionHandler:]
  -[LPAppleMapsMetadataProviderSpecialization completeWithMapItem:]
  -[LPAppleMapsMetadataProviderSpecialization completeWithPlacemark:]
  -[LPAppleMapsMetadataProviderSpecialization start]


LPCaptionBarView : LPComponentView <CAAnimationDelegate>
 @property  BOOL useProgressSpinner
 @property  {UIEdgeInsets=dddd} textSafeAreaInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPCaptionBarView animationDidStop:finished:]
  -[LPCaptionBarView init]
  -[LPCaptionBarView .cxx_destruct]
  -[LPCaptionBarView animateOut]
  -[LPCaptionBarView sizeThatFits:]
  -[LPCaptionBarView animateInWithBaseAnimation:currentTime:]
  -[LPCaptionBarView initWithStyle:presentationProperties:]
  -[LPCaptionBarView setUseProgressSpinner:]
  -[LPCaptionBarView setPlaybackInformation:]
  -[LPCaptionBarView setTextSafeAreaInset:]
  -[LPCaptionBarView _buildViewsForCaptionBarIfNeeded]
  -[LPCaptionBarView _layoutCaptionBarForSize:applyingLayout:]
  -[LPCaptionBarView useProgressSpinner]
  -[LPCaptionBarView textSafeAreaInset]
  -[LPCaptionBarView button]
  -[LPCaptionBarView layoutComponentView]


LPWebLinkPresentationProperties : NSObject /usr/lib/libc++.1.dylib <LPLinkPresentationPropertyProvider>
 @property  BOOL preliminary
 @property  long long style
 @property  LPCaptionBarPresentationProperties *captionBar
 @property  LPCaptionBarPresentationProperties *mediaTopCaptionBar
 @property  LPCaptionBarPresentationProperties *mediaBottomCaptionBar
 @property  NSString *quotedText
 @property  LPImage *image
 @property  LPImagePresentationProperties *imageProperties
 @property  NSArray *alternateImages
 @property  LPVideo *video
 @property  LPAudio *audio
 @property  UIColor *backgroundColor
 @property  NSNumber *minimumHeight
 @property  LPInlineMediaPlaybackInformation *inlinePlaybackInformation
 @property  NSString *domainNameForIndicator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPWebLinkPresentationProperties setBackgroundColor:]
  -[LPWebLinkPresentationProperties captionBar]
  -[LPWebLinkPresentationProperties isPreliminary]
  -[LPWebLinkPresentationProperties mediaBottomCaptionBar]
  -[LPWebLinkPresentationProperties mediaTopCaptionBar]
  -[LPWebLinkPresentationProperties quotedText]
  -[LPWebLinkPresentationProperties audio]
  -[LPWebLinkPresentationProperties alternateImages]
  -[LPWebLinkPresentationProperties setAlternateImages:]
  -[LPWebLinkPresentationProperties setCaptionBar:]
  -[LPWebLinkPresentationProperties setMediaBottomCaptionBar:]
  -[LPWebLinkPresentationProperties backgroundColor]
  -[LPWebLinkPresentationProperties .cxx_destruct]
  -[LPWebLinkPresentationProperties setImage:]
  -[LPWebLinkPresentationProperties setMediaTopCaptionBar:]
  -[LPWebLinkPresentationProperties setInlinePlaybackInformation:]
  -[LPWebLinkPresentationProperties inlinePlaybackInformation]
  -[LPWebLinkPresentationProperties image]
  -[LPWebLinkPresentationProperties imageProperties]
  -[LPWebLinkPresentationProperties domainNameForIndicator]
  -[LPWebLinkPresentationProperties setPreliminary:]
  -[LPWebLinkPresentationProperties setQuotedText:]
  -[LPWebLinkPresentationProperties setDomainNameForIndicator:]
  -[LPWebLinkPresentationProperties video]
  -[LPWebLinkPresentationProperties setImageProperties:]
  -[LPWebLinkPresentationProperties setAudio:]
  -[LPWebLinkPresentationProperties minimumHeight]
  -[LPWebLinkPresentationProperties setVideo:]
  -[LPWebLinkPresentationProperties setMinimumHeight:]
  -[LPWebLinkPresentationProperties setStyle:]
  -[LPWebLinkPresentationProperties style]


LPEmailCompatibleHTMLVerticalTextStackComponent : LPHTMLComponent
  // class methods
  +[LPEmailCompatibleHTMLVerticalTextStackComponent styleSet]
  +[LPEmailCompatibleHTMLVerticalTextStackComponent baseRules]
  +[LPEmailCompatibleHTMLVerticalTextStackComponent ruleDictionaryForStyle:]

  // instance methods
  -[LPEmailCompatibleHTMLVerticalTextStackComponent .cxx_destruct]
  -[LPEmailCompatibleHTMLVerticalTextStackComponent componentForRow:style:name:]
  -[LPEmailCompatibleHTMLVerticalTextStackComponent buildComponents]
  -[LPEmailCompatibleHTMLVerticalTextStackComponent initWithStyle:presentationProperties:themePath:generator:]


LPDomainNameIndicator : LPComponentView
  // instance methods
  -[LPDomainNameIndicator init]
  -[LPDomainNameIndicator .cxx_destruct]
  -[LPDomainNameIndicator sizeThatFits:]
  -[LPDomainNameIndicator initWithDomainName:theme:]
  -[LPDomainNameIndicator layoutComponentView]


LPLinkMetadataStoreTransformer : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[LPLinkMetadataStoreTransformer storeIdentifier]
  -[LPLinkMetadataStoreTransformer .cxx_destruct]
  -[LPLinkMetadataStoreTransformer initWithMetadata:URL:]


LPLinkHTMLTextGenerator : NSObject /usr/lib/libc++.1.dylib <LPLinkHTMLGeneratorDelegate>
 @property  <LPLinkHTMLTextGeneratorDelegate> *delegate
 @property  BOOL generateEmailCompatibleMarkup
 @property  LPLinkMetadata *metadata
 @property  NSURL *URL
 @property  NSString *HTMLFragmentString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[LPLinkHTMLTextGenerator initialize]

  // instance methods
  -[LPLinkHTMLTextGenerator setMetadata:]
  -[LPLinkHTMLTextGenerator linkHTMLGenerator:URLForResource:withMIMEType:]
  -[LPLinkHTMLTextGenerator init]
  -[LPLinkHTMLTextGenerator initWithURL:]
  -[LPLinkHTMLTextGenerator .cxx_destruct]
  -[LPLinkHTMLTextGenerator initWithPresentationProperties:URL:]
  -[LPLinkHTMLTextGenerator HTMLFragmentString]
  -[LPLinkHTMLTextGenerator _commonInitWithPresentationProperties:URL:]
  -[LPLinkHTMLTextGenerator setDelegate:]
  -[LPLinkHTMLTextGenerator URL]
  -[LPLinkHTMLTextGenerator metadata]
  -[LPLinkHTMLTextGenerator delegate]
  -[LPLinkHTMLTextGenerator generateEmailCompatibleMarkup]
  -[LPLinkHTMLTextGenerator setGenerateEmailCompatibleMarkup:]


LPCaptionBarButtonView : LPComponentView
  // instance methods
  -[LPCaptionBarButtonView init]
  -[LPCaptionBarButtonView .cxx_destruct]
  -[LPCaptionBarButtonView removeTarget:action:]
  -[LPCaptionBarButtonView sizeThatFits:]
  -[LPCaptionBarButtonView initWithCaption:style:]
  -[LPCaptionBarButtonView addTarget:action:]
  -[LPCaptionBarButtonView layoutComponentView]


LPPlaceholderPlayButtonControl : LPPlayButtonControl
  // instance methods
  -[LPPlaceholderPlayButtonControl initWithStyle:]


LPTapToLoadView : LPComponentView <CAAnimationDelegate, UIGestureRecognizerDelegate>
 @property  <LPTapToLoadViewDelegate> *tapToLoadViewDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LPTapToLoadView animationDidStop:finished:]
  -[LPTapToLoadView _tapRecognized:]
  -[LPTapToLoadView init]
  -[LPTapToLoadView _didScroll]
  -[LPTapToLoadView .cxx_destruct]
  -[LPTapToLoadView sizeThatFits:]
  -[LPTapToLoadView animateOutWithCompletionHandler:]
  -[LPTapToLoadView setTapToLoadViewDelegate:]
  -[LPTapToLoadView initWithStyle:]
  -[LPTapToLoadView _buildViews]
  -[LPTapToLoadView _animateToProgressView]
  -[LPTapToLoadView _createIndeterminateProgressIndicator]
  -[LPTapToLoadView tapToLoadViewDelegate]
  -[LPTapToLoadView _highlightLongPressRecognized:]
  -[LPTapToLoadView gestureRecognizer:canPreventGestureRecognizer:]
  -[LPTapToLoadView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[LPTapToLoadView layoutComponentView]


LPHTMLTextComponent : LPHTMLComponent
  // class methods
  +[LPHTMLTextComponent styleSet]
  +[LPHTMLTextComponent secondToLastComponentOfStyle:]
  +[LPHTMLTextComponent ruleDictionaryForStyle:]

  // instance methods
  -[LPHTMLTextComponent initWithCaption:style:firstLineLeading:themePath:generator:]


LPMultipleMetadataPresentationTransformer : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long preferredSizeClass

  // instance methods
  -[LPMultipleMetadataPresentationTransformer summary]
  -[LPMultipleMetadataPresentationTransformer .cxx_destruct]
  -[LPMultipleMetadataPresentationTransformer initWithMetadata:]
  -[LPMultipleMetadataPresentationTransformer setPreferredSizeClass:]
  -[LPMultipleMetadataPresentationTransformer _summaryCounts]
  -[LPMultipleMetadataPresentationTransformer _summarySubtitle]
  -[LPMultipleMetadataPresentationTransformer summaryImages]
  -[LPMultipleMetadataPresentationTransformer preferredSizeClass]
  -[LPMultipleMetadataPresentationTransformer summaryMetadata]


LPEmailCompatibleHTMLCaptionBarRowComponent : LPHTMLComponent
  // class methods
  +[LPEmailCompatibleHTMLCaptionBarRowComponent styleSet]
  +[LPEmailCompatibleHTMLCaptionBarRowComponent ruleDictionaryForStyle:]

  // instance methods
  -[LPEmailCompatibleHTMLCaptionBarRowComponent initWithThemePath:generator:]


UIColor(LPExtras)
	// class methods
	+[UIColor(LPExtras) _lp_colorWithDynamicProvider:]
	+[UIColor(LPExtras) _lp_colorNamed:]

	// instance methods
	-[UIColor(LPExtras) _lp_CSSTextForcingUserInterfaceStyle:]
	-[UIColor(LPExtras) _lp_CSSTextHexFormatForcingUserInterfaceStyle:]
	-[UIColor(LPExtras) _lp_colorForcingUserInterfaceStyle:]
	-[UIColor(LPExtras) _lp_CSSTextHexFormat]
	-[UIColor(LPExtras) _lp_CSSText]
	-[UIColor(LPExtras) _lp_CSSTextWithAlternatePropertiesForName:]
	-[UIColor(LPExtras) _lp_HTMLAttributeText]

UIImageView(LPExtras)
	// instance methods
	-[UIImageView(LPExtras) _lp_setTintColor:]

UIFont(LPExtras)
	// instance methods
	-[UIFont(LPExtras) _lp_CSSFontWeight]
	-[UIFont(LPExtras) _lp_symbolWeight]

UIImage(LPExtras)
	// class methods
	+[UIImage(LPExtras) _lp_systemImageNamed:]
	+[UIImage(LPExtras) _lp_createImageWithCGImage:]

	// instance methods
	-[UIImage(LPExtras) _lp_CGImage]
	-[UIImage(LPExtras) _lp_pixelSize]
	-[UIImage(LPExtras) _lp_hasTransparency]

NSItemProvider(LPExtras)
	// class methods
	+[NSItemProvider(LPExtras) _lp_itemProviderWithData:MIMEType:]

	// instance methods
	-[NSItemProvider(LPExtras) _lp_loadFirstDataRepresentationMatchingMIMETypePredicate:completionHandler:]

UIView(LPExtras)
	// class methods
	+[UIView(LPExtras) _lp_createFlippedView]

	// instance methods
	-[UIView(LPExtras) _lp_backingScaleFactor]
	-[UIView(LPExtras) _lp_setBackgroundColor:]
	-[UIView(LPExtras) _lp_insertSubview:belowSubview:]
	-[UIView(LPExtras) _lp_insertSubview:aboveSubview:]
	-[UIView(LPExtras) _lp_setOpacity:]
	-[UIView(LPExtras) _lp_setCornerRadius:continuous:]
	-[UIView(LPExtras) _lp_prefersDarkInterface]
	-[UIView(LPExtras) _lp_setCornerRadius:]
	-[UIView(LPExtras) _lp_bringSubviewToFront:]
	-[UIView(LPExtras) _lp_isLTR]
	-[UIView(LPExtras) _lp_setNeedsLayout]

(LPInternal)
	// instance methods
	-[(LPInternal) _lp_stringType]
	-[(LPInternal) _lp_setStringType:]

(LPInternal)
	// instance methods
	-[(LPInternal) _lp_isHTTPFamilyOrLinkPresentationTestingURL]
	-[(LPInternal) _lp_hasAllowedNonHTTPScheme]
	-[(LPInternal) _lp_componentsNoCopy]
	-[(LPInternal) _lp_isTelephoneURL]
	-[(LPInternal) _lp_formattedTelephoneNumber]
	-[(LPInternal) _lp_components]
	-[(LPInternal) _lp_pathComponentAtIndex:]
	-[(LPInternal) _lp_valueForQueryKey:]

CAAnimation(LPExtras)
	// instance methods
	-[CAAnimation(LPExtras) _lp_copyWithBeginTime:]

CASpringAnimation(LPExtras)
	// class methods
	+[CASpringAnimation(LPExtras) _lp_springWithMass:stiffness:damping:]

(LPExtras)
	// class methods
	+[(LPExtras) _lp_valueWithCGRect:]
	+[(LPExtras) _lp_valueWithCGSize:]

	// instance methods
	-[(LPExtras) _lp_CGRectValue]

NSCoder(LPExtras)
	// instance methods
	-[NSCoder(LPExtras) _lp_strictlyDecodeLPImageForKey:]
	-[NSCoder(LPExtras) _lp_strictlyDecodeObjectOfClass:forKey:]
	-[NSCoder(LPExtras) _lp_strictlyDecodeLPVideoForKey:]
	-[NSCoder(LPExtras) _lp_strictlyDecodeArrayOfLPImagesForKey:]
	-[NSCoder(LPExtras) _lp_strictlyDecodeArrayOfObjectsOfClass:forKey:]
	-[NSCoder(LPExtras) _lp_strictlyDecodeTopLevelObjectOfClasses:forKey:error:]
	-[NSCoder(LPExtras) _lp_encodeURLIfNotNilOrLocalFile:forKey:]
	-[NSCoder(LPExtras) _lp_encodeArrayIfNotEmpty:forKey:]
	-[NSCoder(LPExtras) _lp_strictlyDecodeTopLevelObjectOfClass:forKey:error:]
	-[NSCoder(LPExtras) _lp_strictlyDecodeDictionaryOfObjectsWithKeysOfClass:andObjectsOfClass:forKey:]
	-[NSCoder(LPExtras) _lp_strictlyDecodeObjectOfClasses:forKey:]
	-[NSCoder(LPExtras) _lp_strictlyDecodeArrayOfObjectsOfClasses:forKey:]
	-[NSCoder(LPExtras) _lp_strictlyDecodeNSAttributedStringForKey:]
	-[NSCoder(LPExtras) _lp_strictlyDecodeNSDataForKey:]
	-[NSCoder(LPExtras) _lp_strictlyDecodeNSStringForKey:]
	-[NSCoder(LPExtras) _lp_strictlyDecodeColorForKey:]
	-[NSCoder(LPExtras) _lp_encodeObjectIfNotNil:forKey:]
	-[NSCoder(LPExtras) _lp_encodeColorIfNotNil:forKey:]

(LPExtras)
	// instance methods
	-[(LPExtras) _lp_CSSText]

UITraitCollection(LPExtras)
	// instance methods
	-[UITraitCollection(LPExtras) _lp_prefersDarkInterface]

(LPInternal)
	// instance methods
	-[(LPInternal) _lp_isEqualIgnoringCase:]
	-[(LPInternal) _lp_stringType]
	-[(LPInternal) _lp_setStringType:]
	-[(LPInternal) _lp_isEqualToAnyIgnoringCase:]
	-[(LPInternal) _lp_hasCaseInsensitiveSuffix:]
	-[(LPInternal) _lp_similarityToString:]
	-[(LPInternal) _lp_isEqualToAny:]
	-[(LPInternal) _lp_directionallyIsolatedString]

01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBag 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBagKeySet 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLookup 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSProcessInfo 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetImageGenerator 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriter 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInput 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInputPixelBufferAdaptor 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 0c00 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerController 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLayer 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLooper 
01 00 0c00 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerViewController 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVQueuePlayer 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0a00 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 1a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimation 
01 00 1a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 1a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATextLayer 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchWhitelistedBundleIDsOperation 
01 00 0300 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLGeocoder 
01 00 0300 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0200 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutablePostalAddress 
01 00 0200 /System/Library/Frameworks/Contacts.framework/Contacts: CNPostalAddress 
01 00 0200 /System/Library/Frameworks/Contacts.framework/Contacts: CNPostalAddressFormatter 
01 00 0500 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISIcon 
01 00 0500 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImage 
01 00 0500 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 0400 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0400 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSByteCountFormatter 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: NSDataAsset 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1b00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSListFormatter 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1e00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1b00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 1b00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 1b00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1500 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailGenerationRequest 
01 00 1500 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailGenerator 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuInteraction 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentInteractionController 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageAsset 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIVibrancyEffect 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 0100 /System/Library/PrivateFrameworks/URLFormatting.framework/URLFormatting: URLFormattingTestingOverrides 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKProcessPool 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKUserContentController 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKUserScript 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebView 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebViewConfiguration 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebsiteDataStore 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WebView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: _WKProcessPoolConfiguration 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: _WKWebsiteDataStoreConfiguration 
01 00 0c00 /System/Library/Frameworks/AVKit.framework/AVKit: __AVPlayerLayerView 
