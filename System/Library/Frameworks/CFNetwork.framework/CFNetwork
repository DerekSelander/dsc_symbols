|| __DATA.__data _CFNetDiagnosticNotifyKey
|| __DATA.__data _kNSURLSessionLaunchOnDemandClientIdentifierKey
|| __DATA.__data _kNSURLSessionLaunchOnDemandNotificationName
|| __DATA.__data _kNSURLSessionLaunchOnDemandSessionIdentifierKey
|| __DATA.__objc_data _OBJC_CLASS_$_AVAssetDownloadTask
|| __DATA.__objc_data _OBJC_CLASS_$_NSGZipDecoder
|| __DATA.__objc_data _OBJC_CLASS_$_NSHost
|| __DATA.__objc_data _OBJC_CLASS_$_NSNetService
|| __DATA.__objc_data _OBJC_CLASS_$_NSNetServiceBrowser
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLDownload
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLSessionAVAggregateAssetDownloadTask
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLSessionAVAssetDownloadTask
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLSessionStreamTask
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLSessionTaskDependency
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLSessionTaskDependencyDescription
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLSessionTaskDependencyTree
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLSessionWebSocketMessage
|| __DATA.__objc_data _OBJC_CLASS_$__NSCFServer
|| __DATA.__objc_data _OBJC_CLASS_$__NSHSTSStorage
|| __DATA.__objc_data _OBJC_CLASS_$__NSHTTPAlternativeServiceEntry
|| __DATA.__objc_data _OBJC_CLASS_$__NSHTTPAlternativeServicesFilter
|| __DATA.__objc_data _OBJC_CLASS_$__NSHTTPConnectionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAssetDownloadTask
|| __DATA.__objc_data _OBJC_METACLASS_$_NSGZipDecoder
|| __DATA.__objc_data _OBJC_METACLASS_$_NSHost
|| __DATA.__objc_data _OBJC_METACLASS_$_NSNetService
|| __DATA.__objc_data _OBJC_METACLASS_$_NSNetServiceBrowser
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLDownload
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLSessionAVAggregateAssetDownloadTask
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLSessionAVAssetDownloadTask
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLSessionStreamTask
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLSessionTaskDependency
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLSessionTaskDependencyDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLSessionTaskDependencyTree
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLSessionWebSocketMessage
|| __DATA.__objc_data _OBJC_METACLASS_$__NSCFServer
|| __DATA.__objc_data _OBJC_METACLASS_$__NSHSTSStorage
|| __DATA.__objc_data _OBJC_METACLASS_$__NSHTTPAlternativeServiceEntry
|| __DATA.__objc_data _OBJC_METACLASS_$__NSHTTPAlternativeServicesFilter
|| __DATA.__objc_data _OBJC_METACLASS_$__NSHTTPConnectionInfo
|| __DATA_CONST.__const _CFNetDiagnosticProtocolFTP
|| __DATA_CONST.__const _CFNetDiagnosticProtocolHTTP
|| __DATA_CONST.__const _CFNetDiagnosticProtocolIMAP
|| __DATA_CONST.__const _CFNetDiagnosticProtocolOSCAR
|| __DATA_CONST.__const _CFNetDiagnosticProtocolSMTP
|| __DATA_CONST.__const _CFNetDiagnosticProtocolUnknown
|| __DATA_CONST.__const _NSHTTPCookieComment
|| __DATA_CONST.__const _NSHTTPCookieCommentURL
|| __DATA_CONST.__const _NSHTTPCookieDiscard
|| __DATA_CONST.__const _NSHTTPCookieDomain
|| __DATA_CONST.__const _NSHTTPCookieExpires
|| __DATA_CONST.__const _NSHTTPCookieManagerAcceptPolicyChangedNotification
|| __DATA_CONST.__const _NSHTTPCookieManagerCookiesChangedNotification
|| __DATA_CONST.__const _NSHTTPCookieMaximumAge
|| __DATA_CONST.__const _NSHTTPCookieName
|| __DATA_CONST.__const _NSHTTPCookieOriginURL
|| __DATA_CONST.__const _NSHTTPCookiePath
|| __DATA_CONST.__const _NSHTTPCookiePort
|| __DATA_CONST.__const _NSHTTPCookieSameSiteLax
|| __DATA_CONST.__const _NSHTTPCookieSameSitePolicy
|| __DATA_CONST.__const _NSHTTPCookieSameSiteStrict
|| __DATA_CONST.__const _NSHTTPCookieSecure
|| __DATA_CONST.__const _NSHTTPCookieValue
|| __DATA_CONST.__const _NSHTTPCookieVersion
|| __DATA_CONST.__const _NSNetServicesErrorCode
|| __DATA_CONST.__const _NSNetServicesErrorDomain
|| __DATA_CONST.__const _NSTCPConnectionConditionsUnmetReasonErrorDomain
|| __DATA_CONST.__const _NSURLAuthenticationMethodClientCertificate
|| __DATA_CONST.__const _NSURLAuthenticationMethodDefault
|| __DATA_CONST.__const _NSURLAuthenticationMethodHTMLForm
|| __DATA_CONST.__const _NSURLAuthenticationMethodHTTPBasic
|| __DATA_CONST.__const _NSURLAuthenticationMethodHTTPDigest
|| __DATA_CONST.__const _NSURLAuthenticationMethodNTLM
|| __DATA_CONST.__const _NSURLAuthenticationMethodNegotiate
|| __DATA_CONST.__const _NSURLAuthenticationMethodOAuth
|| __DATA_CONST.__const _NSURLAuthenticationMethodServerTrust
|| __DATA_CONST.__const _NSURLAuthenticationMethodXMobileMeAuthToken
|| __DATA_CONST.__const _NSURLConnectionBackgroundDownloadCompletedInvocation
|| __DATA_CONST.__const _NSURLConnectionBackgroundDownloadDestinationURL
|| __DATA_CONST.__const _NSURLConnectionBackgroundDownloadIdentifier
|| __DATA_CONST.__const _NSURLConnectionBackgroundDownloadMediaKind
|| __DATA_CONST.__const _NSURLConnectionBackgroundDownloadPreCompletedInvocation
|| __DATA_CONST.__const _NSURLConnectionIsBackgroundDownload
|| __DATA_CONST.__const _NSURLCredentialStorageChangedNotification
|| __DATA_CONST.__const _NSURLCredentialStorageRemoveSynchronizableCredentials
|| __DATA_CONST.__const _NSURLProtectionSpaceFTP
|| __DATA_CONST.__const _NSURLProtectionSpaceFTPProxy
|| __DATA_CONST.__const _NSURLProtectionSpaceHTTP
|| __DATA_CONST.__const _NSURLProtectionSpaceHTTPProxy
|| __DATA_CONST.__const _NSURLProtectionSpaceHTTPS
|| __DATA_CONST.__const _NSURLProtectionSpaceHTTPSProxy
|| __DATA_CONST.__const _NSURLProtectionSpaceSOCKSProxy
|| __DATA_CONST.__const _NSURLSessionDownloadTaskResumeData
|| __DATA_CONST.__const _NSURLSessionProxyErrorDomain
|| __DATA_CONST.__const _NSURLSessionSourceApplicationBundleIdentifierIsExternal
|| __DATA_CONST.__const _NSURLSessionTaskOriginalStartTimeKey
|| __DATA_CONST.__const __NSServerConfigurationOutboundConnectionProxyDictionary
|| __DATA_CONST.__const __NSServerConfigurationSOCKS5ServerCredentials
|| __DATA_CONST.__const __NSURLErrorWebSocketHandshakeFailureReasonKey
|| __DATA_CONST.__const __kATSAllowsArbitraryLoadsForMediaKey
|| __DATA_CONST.__const __kCFHTTPCookiePolicyPropertyIsTopLevelNavigation
|| __DATA_CONST.__const __kCFHTTPCookiePolicyPropertySiteForCookies
|| __DATA_CONST.__const __kCFHTTPServerAllInterfacesIdentifier
|| __DATA_CONST.__const __kCFHTTPServerAllowAnonymousServer
|| __DATA_CONST.__const __kCFHTTPServerBoundInterfaceIdentifier
|| __DATA_CONST.__const __kCFHTTPServerConnectionClientTrust
|| __DATA_CONST.__const __kCFHTTPServerConnectionMaxRequestBufferSize
|| __DATA_CONST.__const __kCFHTTPServerConnectionPeer
|| __DATA_CONST.__const __kCFHTTPServerConnectionPeerCerts
|| __DATA_CONST.__const __kCFHTTPServerConnectionServer
|| __DATA_CONST.__const __kCFHTTPServerErrorDomain
|| __DATA_CONST.__const __kCFHTTPServerFailingRequest
|| __DATA_CONST.__const __kCFHTTPServerFailingResponse
|| __DATA_CONST.__const __kCFHTTPServerHTTPServiceType
|| __DATA_CONST.__const __kCFHTTPServerIdleTimeout
|| __DATA_CONST.__const __kCFHTTPServerKeychain
|| __DATA_CONST.__const __kCFHTTPServerName
|| __DATA_CONST.__const __kCFHTTPServerRequestConnection
|| __DATA_CONST.__const __kCFHTTPServerRequestHTTPVersion
|| __DATA_CONST.__const __kCFHTTPServerRequestHeaderOrderKey
|| __DATA_CONST.__const __kCFHTTPServerRequestHeaderValuesKey
|| __DATA_CONST.__const __kCFHTTPServerRequestHeaders
|| __DATA_CONST.__const __kCFHTTPServerRequestMethod
|| __DATA_CONST.__const __kCFHTTPServerRequestPath
|| __DATA_CONST.__const __kCFHTTPServerRequestURL
|| __DATA_CONST.__const __kCFHTTPServerRequireClientCertificate
|| __DATA_CONST.__const __kCFHTTPServerResponseConnection
|| __DATA_CONST.__const __kCFHTTPServerResponseMessage
|| __DATA_CONST.__const __kCFHTTPServerResponseRequest
|| __DATA_CONST.__const __kCFHTTPServerSSLSettings
|| __DATA_CONST.__const __kCFHTTPServerServerIdentity
|| __DATA_CONST.__const __kCFHTTPServerServerTrustChain
|| __DATA_CONST.__const __kCFHTTPServerServicePort
|| __DATA_CONST.__const __kCFHTTPServerServiceType
|| __DATA_CONST.__const __kCFHTTPServerStreamSSLSettings
|| __DATA_CONST.__const __kCFHTTPServerWatchdogTimeout
|| __DATA_CONST.__const __kCFHostByPassMasterAddressLookupString
|| __DATA_CONST.__const __kCFHostConnectByNamePortString
|| __DATA_CONST.__const __kCFHostIPv4AddressesString
|| __DATA_CONST.__const __kCFHostIPv6AddressesString
|| __DATA_CONST.__const __kCFHostMasterAddressLookupString
|| __DATA_CONST.__const __kCFHostProcessedDNSTypeSRVHostInfoString
|| __DATA_CONST.__const __kCFHostProcessedDNSTypeSRVString
|| __DATA_CONST.__const __kCFNetworkHSTSExpiry
|| __DATA_CONST.__const __kCFNetworkHSTSIncludeSubDomains
|| __DATA_CONST.__const __kCFNetworkHSTSPreloaded
|| __DATA_CONST.__const __kCFNullHostInfoTypeString
|| __DATA_CONST.__const __kCFStreamErrorCodeKey
|| __DATA_CONST.__const __kCFStreamErrorDomainKey
|| __DATA_CONST.__const __kCFStreamPropertyAllowConstrainedNetworkAccess
|| __DATA_CONST.__const __kCFStreamPropertyAllowExpensiveAccess
|| __DATA_CONST.__const __kCFStreamPropertyConnectionIsExpensive
|| __DATA_CONST.__const __kCFStreamPropertyConnectionStatistics
|| __DATA_CONST.__const __kCFStreamPropertyConnectionViabilityChangedBlock
|| __DATA_CONST.__const __kCFStreamPropertyDNSIncludeAWDL
|| __DATA_CONST.__const __kCFStreamPropertyDNSIncludeP2P
|| __DATA_CONST.__const __kCFStreamPropertyEnableConnectionStatistics
|| __DATA_CONST.__const __kCFStreamPropertyFTPLogInOnly
|| __DATA_CONST.__const __kCFStreamPropertyFTPRemoveResource
|| __DATA_CONST.__const __kCFStreamPropertyIndefiniteConnectionKickInterval
|| __DATA_CONST.__const __kCFStreamPropertyLargeDownload
|| __DATA_CONST.__const __kCFStreamPropertyLocalAddressPreference
|| __DATA_CONST.__const __kCFStreamPropertyLowThroughputBlock
|| __DATA_CONST.__const __kCFStreamPropertyLowThroughputThreshold
|| __DATA_CONST.__const __kCFStreamPropertyNPNProtocolsAvailable
|| __DATA_CONST.__const __kCFStreamPropertyNPNSelectedProtocol
|| __DATA_CONST.__const __kCFStreamPropertyNoCompanion
|| __DATA_CONST.__const __kCFStreamPropertyPrefersNoProxy
|| __DATA_CONST.__const __kCFStreamPropertyPreventsAppSSO
|| __DATA_CONST.__const __kCFStreamPropertyProhibitInfraWiFi
|| __DATA_CONST.__const __kCFStreamPropertyQOSClass
|| __DATA_CONST.__const __kCFStreamPropertyRaceTCPQUICForDomains
|| __DATA_CONST.__const __kCFStreamPropertySSLClientCertificateState
|| __DATA_CONST.__const __kCFStreamPropertySSLClientCertificates
|| __DATA_CONST.__const __kCFStreamPropertySSLClientSideAuthentication
|| __DATA_CONST.__const __kCFStreamPropertySSLNegotiatedCipher
|| __DATA_CONST.__const __kCFStreamPropertySSLNegotiatedProtocol
|| __DATA_CONST.__const __kCFStreamPropertySocketImmediateBufferSize
|| __DATA_CONST.__const __kCFStreamPropertySocketImmediateBufferTimeOut
|| __DATA_CONST.__const __kCFStreamPropertySocketLowPriorityIO
|| __DATA_CONST.__const __kCFStreamPropertyTCPAdaptiveReadTimeout
|| __DATA_CONST.__const __kCFStreamPropertyTCPAdaptiveWriteTimeout
|| __DATA_CONST.__const __kCFStreamPropertyTCPConnectionMetadata
|| __DATA_CONST.__const __kCFStreamPropertyTCPInfo
|| __DATA_CONST.__const __kCFStreamPropertyTCPKeepAliveOffload
|| __DATA_CONST.__const __kCFStreamPropertyTCPKeepAliveParameters
|| __DATA_CONST.__const __kCFStreamPropertyWatchdogTimeout
|| __DATA_CONST.__const __kCFStreamSSLDisableEphemeralDiffieHellmanCiphers
|| __DATA_CONST.__const __kCFStreamSSLShouldSetPeerID
|| __DATA_CONST.__const __kCFStreamSSLTrustedLeafCertificates
|| __DATA_CONST.__const __kCFStreamSSLUseFalseStart
|| __DATA_CONST.__const __kCFStreamSocketEnableECN
|| __DATA_CONST.__const __kCFStreamSocketSetNoDelay
|| __DATA_CONST.__const __kCFStreamSocketSetRecvAnyIf
|| __DATA_CONST.__const __kCFURLCachePartitionKey
|| __DATA_CONST.__const __kCFURLConnectionPropertyATSContext
|| __DATA_CONST.__const __kCFURLConnectionPropertyATSFrameworkOverrides
|| __DATA_CONST.__const __kCFURLConnectionPropertyRespectConnectionClose
|| __DATA_CONST.__const __kCFURLConnectionPropertyShouldReportTimingDataToAWD
|| __DATA_CONST.__const __kCFURLConnectionPropertyShouldSniff
|| __DATA_CONST.__const __kCFURLConnectionPropertyTimingDataOptions
|| __DATA_CONST.__const __kCFURLConnectionSessionDelegate
|| __DATA_CONST.__const __kCFURLConnectionSessionEventConnectionDidFail
|| __DATA_CONST.__const __kCFURLConnectionSessionEventConnectionDidFinishLoading
|| __DATA_CONST.__const __kCFURLConnectionSessionEventConnectionDidReceiveData
|| __DATA_CONST.__const __kCFURLConnectionSessionEventConnectionDidReceiveResponse
|| __DATA_CONST.__const __kCFURLConnectionSessionEventConnectionRequiresAuth
|| __DATA_CONST.__const __kCFURLConnectionSessionEventConnectionTerminating
|| __DATA_CONST.__const __kCFURLConnectionSessionHTTPLoaderLimits
|| __DATA_CONST.__const __kCFURLErrorAuthFailedResponseKey
|| __DATA_CONST.__const __kCFURLStorageSessionIsPrivate
|| __DATA_CONST.__const __kCFURLStorageSessionProcessSharing
|| __DATA_CONST.__const __kTCPKeepAliveParametersEnabled
|| __DATA_CONST.__const __kTCPKeepAliveParametersIdleTime
|| __DATA_CONST.__const __kTCPKeepAliveParametersInterval
|| __DATA_CONST.__const _kCFDNSServiceFailureKey
|| __DATA_CONST.__const _kCFErrorDomainCFNetwork
|| __DATA_CONST.__const _kCFErrorDomainWinSock
|| __DATA_CONST.__const _kCFFTPResourceGroup
|| __DATA_CONST.__const _kCFFTPResourceLink
|| __DATA_CONST.__const _kCFFTPResourceModDate
|| __DATA_CONST.__const _kCFFTPResourceMode
|| __DATA_CONST.__const _kCFFTPResourceName
|| __DATA_CONST.__const _kCFFTPResourceOwner
|| __DATA_CONST.__const _kCFFTPResourceSize
|| __DATA_CONST.__const _kCFFTPResourceType
|| __DATA_CONST.__const _kCFFTPStatusCodeKey
|| __DATA_CONST.__const _kCFGetAddrInfoFailureKey
|| __DATA_CONST.__const _kCFHTTPAuthenticationAccountDomain
|| __DATA_CONST.__const _kCFHTTPAuthenticationPassword
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeBasic
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeDigest
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeKerberos
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeNTLM
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeNegotiate
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeNegotiate2
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeXMobileMeAuthToken
|| __DATA_CONST.__const _kCFHTTPAuthenticationUsername
|| __DATA_CONST.__const _kCFHTTPCookieDomain
|| __DATA_CONST.__const _kCFHTTPCookieLocalFileDomain
|| __DATA_CONST.__const _kCFHTTPCookieName
|| __DATA_CONST.__const _kCFHTTPCookiePath
|| __DATA_CONST.__const _kCFHTTPCookieValue
|| __DATA_CONST.__const _kCFHTTPRedirectionResponse
|| __DATA_CONST.__const _kCFHTTPVersion1_0
|| __DATA_CONST.__const _kCFHTTPVersion1_1
|| __DATA_CONST.__const _kCFHTTPVersion2_0
|| __DATA_CONST.__const _kCFHTTPVersion3_0
|| __DATA_CONST.__const _kCFHostAddressesString
|| __DATA_CONST.__const _kCFHostDNSTypeSRVString
|| __DATA_CONST.__const _kCFHostNamesString
|| __DATA_CONST.__const _kCFHostReachabilityString
|| __DATA_CONST.__const _kCFNetDiagnosticPingOptionDataLength
|| __DATA_CONST.__const _kCFNetDiagnosticPingOptionPacketCount
|| __DATA_CONST.__const _kCFNetDiagnosticPingOptionTimeout
|| __DATA_CONST.__const _kCFNetDiagnosticPingOptionTrafficClass
|| __DATA_CONST.__const _kCFNetDiagnosticPingOptionTypeOfService
|| __DATA_CONST.__const _kCFNetworkProxiesHTTPEnable
|| __DATA_CONST.__const _kCFNetworkProxiesHTTPPort
|| __DATA_CONST.__const _kCFNetworkProxiesHTTPProxy
|| __DATA_CONST.__const _kCFNetworkProxiesProxyAutoConfigEnable
|| __DATA_CONST.__const _kCFNetworkProxiesProxyAutoConfigJavaScript
|| __DATA_CONST.__const _kCFNetworkProxiesProxyAutoConfigURLString
|| __DATA_CONST.__const _kCFProxyAutoConfigurationHTTPResponseKey
|| __DATA_CONST.__const _kCFProxyAutoConfigurationJavaScriptKey
|| __DATA_CONST.__const _kCFProxyAutoConfigurationURLKey
|| __DATA_CONST.__const _kCFProxyHostNameKey
|| __DATA_CONST.__const _kCFProxyPasswordKey
|| __DATA_CONST.__const _kCFProxyPortNumberKey
|| __DATA_CONST.__const _kCFProxyTypeAutoConfigurationJavaScript
|| __DATA_CONST.__const _kCFProxyTypeAutoConfigurationURL
|| __DATA_CONST.__const _kCFProxyTypeFTP
|| __DATA_CONST.__const _kCFProxyTypeHTTP
|| __DATA_CONST.__const _kCFProxyTypeHTTPS
|| __DATA_CONST.__const _kCFProxyTypeKey
|| __DATA_CONST.__const _kCFProxyTypeNone
|| __DATA_CONST.__const _kCFProxyTypeSOCKS
|| __DATA_CONST.__const _kCFProxyUsernameKey
|| __DATA_CONST.__const _kCFSOCKSNegotiationMethodKey
|| __DATA_CONST.__const _kCFSOCKSStatusCodeKey
|| __DATA_CONST.__const _kCFSOCKSVersionKey
|| __DATA_CONST.__const _kCFStreamNetworkServiceType
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeAVStreaming
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeBackground
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeBackgroundSystemInitiated
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeCallSignaling
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeNetworkControl
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeOAM
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeResponsiveAV
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeResponsiveData
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeVideo
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeVoIP
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeVoice
|| __DATA_CONST.__const _kCFStreamPropertyAccountIdentifier
|| __DATA_CONST.__const _kCFStreamPropertyAllowConstrainedNetworkAccess
|| __DATA_CONST.__const _kCFStreamPropertyAllowExpensiveNetworkAccess
|| __DATA_CONST.__const _kCFStreamPropertyBoundInterfaceIdentifier
|| __DATA_CONST.__const _kCFStreamPropertyCONNECTAdditionalHeaders
|| __DATA_CONST.__const _kCFStreamPropertyCONNECTProxy
|| __DATA_CONST.__const _kCFStreamPropertyCONNECTProxyHost
|| __DATA_CONST.__const _kCFStreamPropertyCONNECTProxyPort
|| __DATA_CONST.__const _kCFStreamPropertyCONNECTResponse
|| __DATA_CONST.__const _kCFStreamPropertyConditionalConnectionProperties
|| __DATA_CONST.__const _kCFStreamPropertyConnectionFallbackEnabled
|| __DATA_CONST.__const _kCFStreamPropertyConnectionFastFallbackEnabled
|| __DATA_CONST.__const _kCFStreamPropertyConnectionIsCellular
|| __DATA_CONST.__const _kCFStreamPropertyConnectionIsExpensive
|| __DATA_CONST.__const _kCFStreamPropertyConnectionIsMultipath
|| __DATA_CONST.__const _kCFStreamPropertyDUETConditional
|| __DATA_CONST.__const _kCFStreamPropertyDataConnectionServiceType
|| __DATA_CONST.__const _kCFStreamPropertyDataContextIdentifier
|| __DATA_CONST.__const _kCFStreamPropertyDataContextOnDemand
|| __DATA_CONST.__const _kCFStreamPropertyFTPAttemptPersistentConnection
|| __DATA_CONST.__const _kCFStreamPropertyFTPFetchResourceInfo
|| __DATA_CONST.__const _kCFStreamPropertyFTPFileTransferOffset
|| __DATA_CONST.__const _kCFStreamPropertyFTPPassword
|| __DATA_CONST.__const _kCFStreamPropertyFTPProxy
|| __DATA_CONST.__const _kCFStreamPropertyFTPProxyHost
|| __DATA_CONST.__const _kCFStreamPropertyFTPProxyPassword
|| __DATA_CONST.__const _kCFStreamPropertyFTPProxyPort
|| __DATA_CONST.__const _kCFStreamPropertyFTPProxyUser
|| __DATA_CONST.__const _kCFStreamPropertyFTPResourceSize
|| __DATA_CONST.__const _kCFStreamPropertyFTPUsePassiveMode
|| __DATA_CONST.__const _kCFStreamPropertyFTPUserName
|| __DATA_CONST.__const _kCFStreamPropertyHTTPAttemptPersistentConnection
|| __DATA_CONST.__const _kCFStreamPropertyHTTPFinalRequest
|| __DATA_CONST.__const _kCFStreamPropertyHTTPFinalURL
|| __DATA_CONST.__const _kCFStreamPropertyHTTPProxy
|| __DATA_CONST.__const _kCFStreamPropertyHTTPProxyHost
|| __DATA_CONST.__const _kCFStreamPropertyHTTPProxyPort
|| __DATA_CONST.__const _kCFStreamPropertyHTTPRequestBytesWrittenCount
|| __DATA_CONST.__const _kCFStreamPropertyHTTPResponseHeader
|| __DATA_CONST.__const _kCFStreamPropertyHTTPSProxyHost
|| __DATA_CONST.__const _kCFStreamPropertyHTTPSProxyPort
|| __DATA_CONST.__const _kCFStreamPropertyHTTPShouldAutoredirect
|| __DATA_CONST.__const _kCFStreamPropertyHTTPUseSystemProxySettings
|| __DATA_CONST.__const _kCFStreamPropertyIndefiniteConnection
|| __DATA_CONST.__const _kCFStreamPropertyInterfaceIdentifier
|| __DATA_CONST.__const _kCFStreamPropertyMPTCPConnectedSubflowCount
|| __DATA_CONST.__const _kCFStreamPropertyMPTCPPrimarySubflowInterfaceName
|| __DATA_CONST.__const _kCFStreamPropertyMPTCPSubflowCount
|| __DATA_CONST.__const _kCFStreamPropertyMPTCPSubflowSwitchCounts
|| __DATA_CONST.__const _kCFStreamPropertyNoCellular
|| __DATA_CONST.__const _kCFStreamPropertyOpportunisticConnection
|| __DATA_CONST.__const _kCFStreamPropertyPersistentConnection
|| __DATA_CONST.__const _kCFStreamPropertyProxyLocalBypass
|| __DATA_CONST.__const _kCFStreamPropertySSLContext
|| __DATA_CONST.__const _kCFStreamPropertySSLPeerCertificates
|| __DATA_CONST.__const _kCFStreamPropertySSLPeerTrust
|| __DATA_CONST.__const _kCFStreamPropertySSLSettings
|| __DATA_CONST.__const _kCFStreamPropertySocketExtendedBackgroundIdleMode
|| __DATA_CONST.__const _kCFStreamPropertySocketRemoteHost
|| __DATA_CONST.__const _kCFStreamPropertySocketRemoteNetService
|| __DATA_CONST.__const _kCFStreamPropertySourceApplication
|| __DATA_CONST.__const _kCFStreamPropertySourceApplicationBundleIdentifier
|| __DATA_CONST.__const _kCFStreamSSLAllowsAnyRoot
|| __DATA_CONST.__const _kCFStreamSSLAllowsExpiredCertificates
|| __DATA_CONST.__const _kCFStreamSSLAllowsExpiredRoots
|| __DATA_CONST.__const _kCFStreamSSLCertificates
|| __DATA_CONST.__const _kCFStreamSSLEnabledCiphers
|| __DATA_CONST.__const _kCFStreamSSLIsServer
|| __DATA_CONST.__const _kCFStreamSSLLevel
|| __DATA_CONST.__const _kCFStreamSSLPSKIdentity
|| __DATA_CONST.__const _kCFStreamSSLPSKSharedSecret
|| __DATA_CONST.__const _kCFStreamSSLPeerName
|| __DATA_CONST.__const _kCFStreamSSLValidatesCertificateChain
|| __DATA_CONST.__const _kCFStreamSocketSecurityLevelTLSv1SSLv3
|| __DATA_CONST.__const _kCFStreamSocketSecurityLevelTLSv1_0
|| __DATA_CONST.__const _kCFStreamSocketSecurityLevelTLSv1_0SSLv3
|| __DATA_CONST.__const _kCFStreamSocketSecurityLevelTLSv1_1
|| __DATA_CONST.__const _kCFStreamSocketSecurityLevelTLSv1_2
|| __DATA_CONST.__const _kCFURLConnectionProhibitAuthChallengeUI
|| __DATA_CONST.__const _kCFURLConnectionPropertyStrictContentLength
|| __DATA_CONST.__const _kCFURLConnectionSocketStreamProperties
|| __DATA_CONST.__const _kCFURLConnectionSuspensionThreshold
|| __DATA_CONST.__const _kCFURLConnectionURLConnectionProperties
|| __DATA_CONST.__const _kCFURLCredentialKerberosTicketAllowDelegation
|| __DATA_CONST.__const _kCFURLErrorFailingURLErrorKey
|| __DATA_CONST.__const _kCFURLErrorFailingURLStringErrorKey
|| __DATA_CONST.__const _kCFURLErrorPeerAddressKey
|| __DATA_CONST.__const _kCFURLRequestAllowAllPOSTCaching
|| __DATA_CONST.__const _kCFURLRequestContentDecoderSkipURLCheck
|| __DATA_CONST.__const _kCFURLRequestDoNotDecodeData
|| __DATA_CONST.__const _kCFURLRequestPreAuthXMMeAuthToken
|| __DATA_CONST.__const _kConditionalConnectionActivityName
|| __DATA_CONST.__const _kConditionalConnectionClientOptInDiscretionary
|| __DATA_CONST.__const _kConditionalConnectionInTransitionalDiscretionaryPeriod
|| __DATA_CONST.__const _kConditionalConnectionIsDiscretionary
|| __DATA_CONST.__const _kConditionalConnectionIsUpload
|| __DATA_CONST.__const _kConditionalConnectionOnBehalfOfPairedDevice
|| __DATA_CONST.__const _kConditionalConnectionRequirementDuetPreClearedMode
|| __DATA_CONST.__const _kConditionalConnectionRequirementPowerPluggedIn
|| __DATA_CONST.__const _kConditionalConnectionRequirementTimeWindowDelay
|| __DATA_CONST.__const _kConditionalConnectionRequirementTimeWindowDuration
|| __DATA_CONST.__const _kConditionalConnectionRequirementWorkload
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAssetDownloadURLSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCachedURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSHTTPCookie
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSHTTPCookieStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSHTTPURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSMutableURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLAuthenticationChallenge
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLCredential
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLCredentialStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLProtectionSpace
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLProtocol
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionDataTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionDownloadTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionEffectiveConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionMutableEffectiveConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionTaskMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionTaskTransactionMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionUploadTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionWebSocketTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__NSHTTPAlternativeServicesStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__NSURLSessionConnectionBeginProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__NSURLSessionConnectionEstablishProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$___NSCFURLSessionTaskInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$___NSCFURLSessionXPC
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$___NSURLSessionStatistics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAssetDownloadURLSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCachedURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSHTTPCookie
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSHTTPCookieStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSHTTPURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSMutableURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLAuthenticationChallenge
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLCredential
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLCredentialStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLProtectionSpace
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLProtocol
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionDataTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionDownloadTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionEffectiveConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionMutableEffectiveConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionTaskMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionTaskTransactionMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionUploadTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionWebSocketTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__NSHTTPAlternativeServicesStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__NSURLSessionConnectionBeginProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__NSURLSessionConnectionEstablishProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$___NSCFURLSessionTaskInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$___NSCFURLSessionXPC
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$___NSURLSessionStatistics
|| __TEXT.__const _NSURLSessionDefaultLoadingPriority
|| __TEXT.__const _NSURLSessionTaskPriorityDefault
|| __TEXT.__const _NSURLSessionTaskPriorityHigh
|| __TEXT.__const _NSURLSessionTaskPriorityLow
|| __TEXT.__const _NSURLSessionTransferSizeUnknown
|| __TEXT.__const _kCFStreamErrorDomainFTP
|| __TEXT.__const _kCFStreamErrorDomainHTTP
|| __TEXT.__const _kCFStreamErrorDomainMach
|| __TEXT.__const _kCFStreamErrorDomainNetDB
|| __TEXT.__const _kCFStreamErrorDomainNetServices
|| __TEXT.__const _kCFStreamErrorDomainSystemConfiguration
|| __TEXT.__const _kCFStreamErrorDomainWinSock
|| __TEXT.__const _kCFStreamErrorHTTPConnectionLost
|| __TEXT.__const _kCFURLResponseExpectedContentLengthUnknown
|| __TEXT.__text _CFCachedURLResponseCopyReceiverDataArray
|| __TEXT.__text _CFCachedURLResponseCreateWithData
|| __TEXT.__text _CFCachedURLResponseGetReceiverData
|| __TEXT.__text _CFCachedURLResponseGetStoragePolicy
|| __TEXT.__text _CFCachedURLResponseGetWrappedResponse
|| __TEXT.__text _CFCachedURLResponseSetStoragePolicy
|| __TEXT.__text _CFFTPCreateParsedResourceListing
|| __TEXT.__text _CFHTTPAuthenticationAppliesToRequest
|| __TEXT.__text _CFHTTPAuthenticationCopyDomains
|| __TEXT.__text _CFHTTPAuthenticationCopyMethod
|| __TEXT.__text _CFHTTPAuthenticationCopyRealm
|| __TEXT.__text _CFHTTPAuthenticationCreateFromResponse
|| __TEXT.__text _CFHTTPAuthenticationGetTypeID
|| __TEXT.__text _CFHTTPAuthenticationIsValid
|| __TEXT.__text _CFHTTPAuthenticationRequiresAccountDomain
|| __TEXT.__text _CFHTTPAuthenticationRequiresOrderedRequests
|| __TEXT.__text _CFHTTPAuthenticationRequiresUserNameAndPassword
|| __TEXT.__text _CFHTTPCookieCopyDomain
|| __TEXT.__text _CFHTTPCookieCopyName
|| __TEXT.__text _CFHTTPCookieCopyPath
|| __TEXT.__text _CFHTTPCookieCopyProperties
|| __TEXT.__text _CFHTTPCookieCopyRequestHeaderFields
|| __TEXT.__text _CFHTTPCookieCopyValue
|| __TEXT.__text _CFHTTPCookieCreateWithProperties
|| __TEXT.__text _CFHTTPCookieCreateWithResponseHeaderFields
|| __TEXT.__text _CFHTTPCookieGetExpirationTime
|| __TEXT.__text _CFHTTPCookieGetFlags
|| __TEXT.__text _CFHTTPCookieGetTypeID
|| __TEXT.__text _CFHTTPCookieIsHTTPOnly
|| __TEXT.__text _CFHTTPCookieIsSecure
|| __TEXT.__text _CFHTTPCookieStorageAddObserver
|| __TEXT.__text _CFHTTPCookieStorageCopyCookies
|| __TEXT.__text _CFHTTPCookieStorageCopyCookiesForURL
|| __TEXT.__text _CFHTTPCookieStorageCreateFromFile
|| __TEXT.__text _CFHTTPCookieStorageCreateFromIdentifyingData
|| __TEXT.__text _CFHTTPCookieStorageCreateIdentifyingData
|| __TEXT.__text _CFHTTPCookieStorageDeleteAllCookies
|| __TEXT.__text _CFHTTPCookieStorageDeleteCookie
|| __TEXT.__text _CFHTTPCookieStorageGetCookieAcceptPolicy
|| __TEXT.__text _CFHTTPCookieStorageRemoveObserver
|| __TEXT.__text _CFHTTPCookieStorageScheduleWithRunLoop
|| __TEXT.__text _CFHTTPCookieStorageSetCookie
|| __TEXT.__text _CFHTTPCookieStorageSetCookieAcceptPolicy
|| __TEXT.__text _CFHTTPCookieStorageSetCookies
|| __TEXT.__text _CFHTTPCookieStorageUnscheduleFromRunLoop
|| __TEXT.__text _CFHTTPMessageAddAuthentication
|| __TEXT.__text _CFHTTPMessageAppendBytes
|| __TEXT.__text _CFHTTPMessageApplyCredentialDictionary
|| __TEXT.__text _CFHTTPMessageApplyCredentials
|| __TEXT.__text _CFHTTPMessageCopyAllHeaderFields
|| __TEXT.__text _CFHTTPMessageCopyBody
|| __TEXT.__text _CFHTTPMessageCopyHeaderFieldValue
|| __TEXT.__text _CFHTTPMessageCopyRequestMethod
|| __TEXT.__text _CFHTTPMessageCopyRequestURL
|| __TEXT.__text _CFHTTPMessageCopyResponseStatusLine
|| __TEXT.__text _CFHTTPMessageCopySerializedMessage
|| __TEXT.__text _CFHTTPMessageCopyVersion
|| __TEXT.__text _CFHTTPMessageCreateCopy
|| __TEXT.__text _CFHTTPMessageCreateEmpty
|| __TEXT.__text _CFHTTPMessageCreateRequest
|| __TEXT.__text _CFHTTPMessageCreateResponse
|| __TEXT.__text _CFHTTPMessageGetResponseStatusCode
|| __TEXT.__text _CFHTTPMessageGetTypeID
|| __TEXT.__text _CFHTTPMessageIsHeaderComplete
|| __TEXT.__text _CFHTTPMessageIsRequest
|| __TEXT.__text _CFHTTPMessageSetBody
|| __TEXT.__text _CFHTTPMessageSetHeaderFieldValue
|| __TEXT.__text _CFHostCancelInfoResolution
|| __TEXT.__text _CFHostCreateCopy
|| __TEXT.__text _CFHostCreateWithAddress
|| __TEXT.__text _CFHostCreateWithName
|| __TEXT.__text _CFHostGetAddressing
|| __TEXT.__text _CFHostGetInfo
|| __TEXT.__text _CFHostGetNames
|| __TEXT.__text _CFHostGetReachability
|| __TEXT.__text _CFHostGetSRVRecords
|| __TEXT.__text _CFHostGetTypeID
|| __TEXT.__text _CFHostScheduleWithRunLoop
|| __TEXT.__text _CFHostSetClient
|| __TEXT.__text _CFHostStartInfoResolution
|| __TEXT.__text _CFHostUnscheduleFromRunLoop
|| __TEXT.__text _CFNetDiagnosticCopyNetworkStatusActively
|| __TEXT.__text _CFNetDiagnosticCopyNetworkStatusPassively
|| __TEXT.__text _CFNetDiagnosticCreateBasic
|| __TEXT.__text _CFNetDiagnosticCreateWithStreams
|| __TEXT.__text _CFNetDiagnosticCreateWithURL
|| __TEXT.__text _CFNetDiagnosticDiagnoseProblemInteractively
|| __TEXT.__text _CFNetDiagnosticPing
|| __TEXT.__text _CFNetDiagnosticPingWithOptions
|| __TEXT.__text _CFNetDiagnosticSetName
|| __TEXT.__text _CFNetDiagnosticSetProtocol
|| __TEXT.__text _CFNetDiagnosticSetServiceID
|| __TEXT.__text _CFNetServiceBrowserCreate
|| __TEXT.__text _CFNetServiceBrowserGetTypeID
|| __TEXT.__text _CFNetServiceBrowserInvalidate
|| __TEXT.__text _CFNetServiceBrowserScheduleWithRunLoop
|| __TEXT.__text _CFNetServiceBrowserSearchForDomains
|| __TEXT.__text _CFNetServiceBrowserSearchForServices
|| __TEXT.__text _CFNetServiceBrowserStopSearch
|| __TEXT.__text _CFNetServiceBrowserUnscheduleFromRunLoop
|| __TEXT.__text _CFNetServiceCancel
|| __TEXT.__text _CFNetServiceCreate
|| __TEXT.__text _CFNetServiceCreateCopy
|| __TEXT.__text _CFNetServiceCreateDictionaryWithTXTData
|| __TEXT.__text _CFNetServiceCreateTXTDataWithDictionary
|| __TEXT.__text _CFNetServiceGetAddressing
|| __TEXT.__text _CFNetServiceGetDomain
|| __TEXT.__text _CFNetServiceGetInfo
|| __TEXT.__text _CFNetServiceGetName
|| __TEXT.__text _CFNetServiceGetPortNumber
|| __TEXT.__text _CFNetServiceGetTXTData
|| __TEXT.__text _CFNetServiceGetTargetHost
|| __TEXT.__text _CFNetServiceGetType
|| __TEXT.__text _CFNetServiceGetTypeID
|| __TEXT.__text _CFNetServiceMonitorCreate
|| __TEXT.__text _CFNetServiceMonitorGetTypeID
|| __TEXT.__text _CFNetServiceMonitorInvalidate
|| __TEXT.__text _CFNetServiceMonitorScheduleWithRunLoop
|| __TEXT.__text _CFNetServiceMonitorStart
|| __TEXT.__text _CFNetServiceMonitorStop
|| __TEXT.__text _CFNetServiceMonitorUnscheduleFromRunLoop
|| __TEXT.__text _CFNetServiceRegisterWithOptions
|| __TEXT.__text _CFNetServiceResolveWithTimeout
|| __TEXT.__text _CFNetServiceScheduleWithRunLoop
|| __TEXT.__text _CFNetServiceSetClient
|| __TEXT.__text _CFNetServiceSetInfo
|| __TEXT.__text _CFNetServiceSetTXTData
|| __TEXT.__text _CFNetServiceUnscheduleFromRunLoop
|| __TEXT.__text _CFNetworkCopyProxiesForAutoConfigurationScript
|| __TEXT.__text _CFNetworkCopyProxiesForURL
|| __TEXT.__text _CFNetworkCopySystemProxySettings
|| __TEXT.__text _CFNetworkExecuteProxyAutoConfigurationScript
|| __TEXT.__text _CFNetworkExecuteProxyAutoConfigurationURL
|| __TEXT.__text _CFReadStreamCreateForHTTPRequest
|| __TEXT.__text _CFReadStreamCreateForStreamedHTTPRequest
|| __TEXT.__text _CFReadStreamCreateWithFTPURL
|| __TEXT.__text _CFStreamCreatePairWithSocketToCFHost
|| __TEXT.__text _CFStreamCreatePairWithSocketToNetService
|| __TEXT.__text _CFURLAuthChallengeCreate
|| __TEXT.__text _CFURLAuthChallengeGetError
|| __TEXT.__text _CFURLAuthChallengeGetFailureResponse
|| __TEXT.__text _CFURLAuthChallengeGetPreviousFailureCount
|| __TEXT.__text _CFURLAuthChallengeGetProposedCredential
|| __TEXT.__text _CFURLAuthChallengeGetProtectionSpace
|| __TEXT.__text _CFURLCacheAddCachedResponseForRequest
|| __TEXT.__text _CFURLCacheCopyResponseForRequest
|| __TEXT.__text _CFURLCacheCopySharedURLCache
|| __TEXT.__text _CFURLCacheCreate
|| __TEXT.__text _CFURLCacheCurrentDiskUsage
|| __TEXT.__text _CFURLCacheDiskCapacity
|| __TEXT.__text _CFURLCacheMemoryCapacity
|| __TEXT.__text _CFURLCacheRemoveAllCachedResponses
|| __TEXT.__text _CFURLCacheRemoveCachedResponseForRequest
|| __TEXT.__text _CFURLCacheSetDiskCapacity
|| __TEXT.__text _CFURLCacheSetMemoryCapacity
|| __TEXT.__text _CFURLCacheSetSharedURLCache
|| __TEXT.__text _CFURLConnectionCancel
|| __TEXT.__text _CFURLConnectionCreate
|| __TEXT.__text _CFURLConnectionCreateWithProperties
|| __TEXT.__text _CFURLConnectionHalt
|| __TEXT.__text _CFURLConnectionInvalidateConnectionCache
|| __TEXT.__text _CFURLConnectionPerformDefaultHandlingForChallenge
|| __TEXT.__text _CFURLConnectionRejectChallenge
|| __TEXT.__text _CFURLConnectionResume
|| __TEXT.__text _CFURLConnectionScheduleDownloadWithRunLoop
|| __TEXT.__text _CFURLConnectionScheduleWithRunLoop
|| __TEXT.__text _CFURLConnectionSendSynchronousRequest
|| __TEXT.__text _CFURLConnectionSetDelegateDispatchQueue
|| __TEXT.__text _CFURLConnectionStart
|| __TEXT.__text _CFURLConnectionUnscheduleFromRunLoop
|| __TEXT.__text _CFURLConnectionUseCredential
|| __TEXT.__text _CFURLCredentialContainsPassword
|| __TEXT.__text _CFURLCredentialCopyPassword
|| __TEXT.__text _CFURLCredentialCreate
|| __TEXT.__text _CFURLCredentialCreateWithIdentityAndCertificateArray
|| __TEXT.__text _CFURLCredentialCreateWithTrust
|| __TEXT.__text _CFURLCredentialGetPersistence
|| __TEXT.__text _CFURLCredentialGetUsername
|| __TEXT.__text _CFURLCredentialStorageCopyAllCredentials
|| __TEXT.__text _CFURLCredentialStorageCopyCredentialsForProtectionSpace
|| __TEXT.__text _CFURLCredentialStorageCopyDefaultCredentialForProtectionSpace
|| __TEXT.__text _CFURLCredentialStorageCreate
|| __TEXT.__text _CFURLCredentialStorageRemoveCredentialForProtectionSpace
|| __TEXT.__text _CFURLCredentialStorageSetCredentialForProtectionSpace
|| __TEXT.__text _CFURLCredentialStorageSetDefaultCredentialForProtectionSpace
|| __TEXT.__text _CFURLDownloadCancel
|| __TEXT.__text _CFURLDownloadCopyResumeData
|| __TEXT.__text _CFURLDownloadCreate
|| __TEXT.__text _CFURLDownloadCreateAndStartWithLoadingConnection
|| __TEXT.__text _CFURLDownloadCreateWithResumeData
|| __TEXT.__text _CFURLDownloadDeletesUponFailure
|| __TEXT.__text _CFURLDownloadScheduleWithRunLoop
|| __TEXT.__text _CFURLDownloadSetDeletesUponFailure
|| __TEXT.__text _CFURLDownloadSetDestination
|| __TEXT.__text _CFURLDownloadStart
|| __TEXT.__text _CFURLProtectionSpaceCreate
|| __TEXT.__text _CFURLProtectionSpaceGetAuthenticationScheme
|| __TEXT.__text _CFURLProtectionSpaceGetHost
|| __TEXT.__text _CFURLProtectionSpaceGetPort
|| __TEXT.__text _CFURLProtectionSpaceGetRealm
|| __TEXT.__text _CFURLProtectionSpaceGetServerTrust
|| __TEXT.__text _CFURLProtectionSpaceGetServerType
|| __TEXT.__text _CFURLProtectionSpaceIsProxy
|| __TEXT.__text _CFURLProtectionSpaceReceivesCredentialSecurely
|| __TEXT.__text _CFURLProtocolGetCachedResponse
|| __TEXT.__text _CFURLProtocolGetClient
|| __TEXT.__text _CFURLProtocolGetRequest
|| __TEXT.__text _CFURLProtocolRegisterImplementation
|| __TEXT.__text _CFURLProtocolUnregisterImplementation
|| __TEXT.__text _CFURLRequestAppendHTTPHeaderFieldValue
|| __TEXT.__text _CFURLRequestCopyAllHTTPHeaderFields
|| __TEXT.__text _CFURLRequestCopyHTTPCookieStorage
|| __TEXT.__text _CFURLRequestCopyHTTPHeaderFieldValue
|| __TEXT.__text _CFURLRequestCopyHTTPRequest
|| __TEXT.__text _CFURLRequestCopyHTTPRequestBody
|| __TEXT.__text _CFURLRequestCopyHTTPRequestBodyParts
|| __TEXT.__text _CFURLRequestCopyHTTPRequestBodyStream
|| __TEXT.__text _CFURLRequestCopyHTTPRequestMethod
|| __TEXT.__text _CFURLRequestCreate
|| __TEXT.__text _CFURLRequestCreateCopy
|| __TEXT.__text _CFURLRequestCreateHTTPRequest
|| __TEXT.__text _CFURLRequestCreateMutable
|| __TEXT.__text _CFURLRequestCreateMutableCopy
|| __TEXT.__text _CFURLRequestCreateMutableHTTPRequest
|| __TEXT.__text _CFURLRequestGetCachePolicy
|| __TEXT.__text _CFURLRequestGetMainDocumentURL
|| __TEXT.__text _CFURLRequestGetRequestPriority
|| __TEXT.__text _CFURLRequestGetSSLProperties
|| __TEXT.__text _CFURLRequestGetTimeoutInterval
|| __TEXT.__text _CFURLRequestGetURL
|| __TEXT.__text _CFURLRequestSetAllowsCellularAccess
|| __TEXT.__text _CFURLRequestSetCachePolicy
|| __TEXT.__text _CFURLRequestSetHTTPCookieStorage
|| __TEXT.__text _CFURLRequestSetHTTPCookieStorageAcceptPolicy
|| __TEXT.__text _CFURLRequestSetHTTPHeaderFieldValue
|| __TEXT.__text _CFURLRequestSetHTTPRequestBody
|| __TEXT.__text _CFURLRequestSetHTTPRequestBodyParts
|| __TEXT.__text _CFURLRequestSetHTTPRequestBodyStream
|| __TEXT.__text _CFURLRequestSetHTTPRequestMethod
|| __TEXT.__text _CFURLRequestSetMainDocumentURL
|| __TEXT.__text _CFURLRequestSetMultipleHTTPHeaderFields
|| __TEXT.__text _CFURLRequestSetNetworkServiceType
|| __TEXT.__text _CFURLRequestSetProxySettings
|| __TEXT.__text _CFURLRequestSetRequestPriority
|| __TEXT.__text _CFURLRequestSetSSLProperties
|| __TEXT.__text _CFURLRequestSetShouldHandleHTTPCookies
|| __TEXT.__text _CFURLRequestSetShouldPipelineHTTP
|| __TEXT.__text _CFURLRequestSetShouldStartSynchronously
|| __TEXT.__text _CFURLRequestSetTimeoutInterval
|| __TEXT.__text _CFURLRequestSetURL
|| __TEXT.__text _CFURLRequestShouldHandleHTTPCookies
|| __TEXT.__text _CFURLResponseConnectionDidFallback
|| __TEXT.__text _CFURLResponseConnectionIsCellular
|| __TEXT.__text _CFURLResponseCopyPeerAddress
|| __TEXT.__text _CFURLResponseCopySuggestedFilename
|| __TEXT.__text _CFURLResponseCreate
|| __TEXT.__text _CFURLResponseCreateWithHTTPResponse
|| __TEXT.__text _CFURLResponseDataIsEncoded
|| __TEXT.__text _CFURLResponseGetCreationTime
|| __TEXT.__text _CFURLResponseGetExpectedContentLength
|| __TEXT.__text _CFURLResponseGetExpirationTime
|| __TEXT.__text _CFURLResponseGetHTTPResponse
|| __TEXT.__text _CFURLResponseGetMIMEType
|| __TEXT.__text _CFURLResponseGetRecommendedCachePolicy
|| __TEXT.__text _CFURLResponseGetTextEncodingName
|| __TEXT.__text _CFURLResponseGetTypeID
|| __TEXT.__text _CFURLResponseGetURL
|| __TEXT.__text _CFURLResponseSetExpectedContentLength
|| __TEXT.__text _CFURLResponseSetExpiration
|| __TEXT.__text _CFURLResponseSetMIMEType
|| __TEXT.__text _CFURLResponseSetRecommendedCachePolicy
|| __TEXT.__text _CFWriteStreamCreateWithFTPURL
|| __TEXT.__text __CFCachedURLResponseGetMemMappedData
|| __TEXT.__text __CFCachedURLResponseSetBecameFileBackedCallBackBlock
|| __TEXT.__text __CFErrorCreateWithStreamError
|| __TEXT.__text __CFHTTPAuthenticationApplyProxyAuthorizationToRequest
|| __TEXT.__text __CFHTTPAuthenticationPasswordInClear
|| __TEXT.__text __CFHTTPCookieCreateCookiesWithResponseMessage
|| __TEXT.__text __CFHTTPCookieCreateWithStringAndPartition
|| __TEXT.__text __CFHTTPCookieStorageCopyCookiesForURLWithMainDocumentURL
|| __TEXT.__text __CFHTTPCookieStorageCopyRequestHeaderFieldsForURL
|| __TEXT.__text __CFHTTPCookieStorageCreateInMemory
|| __TEXT.__text __CFHTTPCookieStorageCreateWithProperties
|| __TEXT.__text __CFHTTPCookieStorageFlushCookieStores
|| __TEXT.__text __CFHTTPCookieStorageGetDefault
|| __TEXT.__text __CFHTTPCookieStorageSetCookiesWithResponseHeaderFields
|| __TEXT.__text __CFHTTPMessageCanRetry
|| __TEXT.__text __CFHTTPMessageSetResponseProxyURL
|| __TEXT.__text __CFHTTPMessageSetResponseURL
|| __TEXT.__text __CFHTTPParsedCookiesWithResponseHeaderFields
|| __TEXT.__text __CFHTTPServerConnectionCopyProperty
|| __TEXT.__text __CFHTTPServerConnectionGetClient
|| __TEXT.__text __CFHTTPServerConnectionGetTypeID
|| __TEXT.__text __CFHTTPServerConnectionInvalidate
|| __TEXT.__text __CFHTTPServerConnectionIsValid
|| __TEXT.__text __CFHTTPServerConnectionScheduleWithRunLoopAndMode
|| __TEXT.__text __CFHTTPServerConnectionSetClient
|| __TEXT.__text __CFHTTPServerConnectionSetDispatchQueue
|| __TEXT.__text __CFHTTPServerConnectionSetProperty
|| __TEXT.__text __CFHTTPServerCopyProperty
|| __TEXT.__text __CFHTTPServerCreateService
|| __TEXT.__text __CFHTTPServerCreateWithAcceptedSocket
|| __TEXT.__text __CFHTTPServerCreateWithStreams
|| __TEXT.__text __CFHTTPServerGetClient
|| __TEXT.__text __CFHTTPServerGetTypeID
|| __TEXT.__text __CFHTTPServerInvalidate
|| __TEXT.__text __CFHTTPServerIsValid
|| __TEXT.__text __CFHTTPServerRequestCopyBodyStream
|| __TEXT.__text __CFHTTPServerRequestCopyProperty
|| __TEXT.__text __CFHTTPServerRequestCreateResponseMessage
|| __TEXT.__text __CFHTTPServerRequestGetClient
|| __TEXT.__text __CFHTTPServerRequestGetTypeID
|| __TEXT.__text __CFHTTPServerRequestSetClient
|| __TEXT.__text __CFHTTPServerResponseCopyProperty
|| __TEXT.__text __CFHTTPServerResponseCreateWithBodyStream
|| __TEXT.__text __CFHTTPServerResponseCreateWithData
|| __TEXT.__text __CFHTTPServerResponseEnqueue
|| __TEXT.__text __CFHTTPServerResponseGetClient
|| __TEXT.__text __CFHTTPServerResponseGetTypeID
|| __TEXT.__text __CFHTTPServerResponseSetClient
|| __TEXT.__text __CFHTTPServerScheduleWithRunLoopAndMode
|| __TEXT.__text __CFHTTPServerSetDispatchQueue
|| __TEXT.__text __CFHTTPServerSetProperty
|| __TEXT.__text __CFHostIsDomainTopLevel
|| __TEXT.__text __CFHostIsDomainTopLevelForCertificatePolicy
|| __TEXT.__text __CFHostIsDomainTopLevelForCookiePolicy
|| __TEXT.__text __CFHostStartInfoResolutionForInterface
|| __TEXT.__text __CFNetServiceCreateFromServiceName
|| __TEXT.__text __CFNetServiceCreateFromURL
|| __TEXT.__text __CFNetworkCopyATSContext
|| __TEXT.__text __CFNetworkCopyHSTSPolicies
|| __TEXT.__text __CFNetworkCopyPreferredLanguageCode
|| __TEXT.__text __CFNetworkErrorCopyLocalizedDescriptionWithHostname
|| __TEXT.__text __CFNetworkErrorGetLocalizedDescription
|| __TEXT.__text __CFNetworkErrorGetLocalizedFailureReason
|| __TEXT.__text __CFNetworkErrorGetLocalizedRecoverySuggestion
|| __TEXT.__text __CFNetworkExecuteProxyAutoConfigurationURLDelegated
|| __TEXT.__text __CFNetworkHTTPConnectionCacheGetLimit
|| __TEXT.__text __CFNetworkHTTPConnectionCacheSetLimit
|| __TEXT.__text __CFNetworkIsKnownHSTSHostWithSession
|| __TEXT.__text __CFNetworkResetHSTS
|| __TEXT.__text __CFNetworkResetHSTSHosts
|| __TEXT.__text __CFNetworkResetHSTSHostsSinceDate
|| __TEXT.__text __CFNetworkResetHSTSHostsWithSession
|| __TEXT.__text __CFNetworkSetATSContext
|| __TEXT.__text __CFNetworkSetHSTSStoragePath
|| __TEXT.__text __CFNetworkSetOverrideSystemProxySettings
|| __TEXT.__text __CFServerCreate
|| __TEXT.__text __CFServerGetPort
|| __TEXT.__text __CFServerInvalidate
|| __TEXT.__text __CFServerStart
|| __TEXT.__text __CFSocketStreamCreatePair
|| __TEXT.__text __CFStreamErrorFromCFError
|| __TEXT.__text __CFStringCreateRFC2616DateStringWithGregorianDate
|| __TEXT.__text __CFURLCacheCopyCacheDirectory
|| __TEXT.__text __CFURLCacheLoadMemoryFromDiskNow
|| __TEXT.__text __CFURLCachePersistMemoryToDiskNow
|| __TEXT.__text __CFURLCachePurgeMemoryCache
|| __TEXT.__text __CFURLCacheSetCacheEventCallBackBlock
|| __TEXT.__text __CFURLCacheSetMemoryLimit
|| __TEXT.__text __CFURLConnectionCopyTimingData
|| __TEXT.__text __CFURLConnectionSetFrameworkStubs
|| __TEXT.__text __CFURLCreateDataAndPropertiesFromResource
|| __TEXT.__text __CFURLCredentialCreateArchive
|| __TEXT.__text __CFURLCredentialCreateForKerberosTicket
|| __TEXT.__text __CFURLCredentialCreateFromArchive
|| __TEXT.__text __CFURLCredentialCreateOAuth1
|| __TEXT.__text __CFURLCredentialCreateOAuth2
|| __TEXT.__text __CFURLCredentialCreateXMobileMeAuthToken
|| __TEXT.__text __CFURLDestroyResource
|| __TEXT.__text __CFURLProtocolSendCacheResponseIsValidCallback
|| __TEXT.__text __CFURLProtocolSendDidFailCallback
|| __TEXT.__text __CFURLProtocolSendDidFinishLoadingCallback
|| __TEXT.__text __CFURLProtocolSendDidLoadDataCallback
|| __TEXT.__text __CFURLProtocolSendDidReceiveResponseCallback
|| __TEXT.__text __CFURLRequestCopyContentDispositionEncodingFallbackArray
|| __TEXT.__text __CFURLRequestCopyProtocolPropertyForKey
|| __TEXT.__text __CFURLRequestCreateArchiveList
|| __TEXT.__text __CFURLRequestCreateFromArchiveList
|| __TEXT.__text __CFURLRequestSetAllowedProtocolTypes
|| __TEXT.__text __CFURLRequestSetContentDispositionEncodingFallbackArray
|| __TEXT.__text __CFURLRequestSetProtocolProperty
|| __TEXT.__text __CFURLRequestSetShouldPipelineNonIdempotentHTTP
|| __TEXT.__text __CFURLRequestSetShouldSkipPipelineProbe
|| __TEXT.__text __CFURLRequestSetStorageSession
|| __TEXT.__text __CFURLResponseCreateArchiveList
|| __TEXT.__text __CFURLResponseCreateFromArchiveList
|| __TEXT.__text __CFURLResponseGetFreshnessLifetime
|| __TEXT.__text __CFURLResponseGetSSLCertificateContext
|| __TEXT.__text __CFURLResponseMustRevalidate
|| __TEXT.__text __CFURLResponseSetCreationTime
|| __TEXT.__text __CFURLStorageSessionCopyCache
|| __TEXT.__text __CFURLStorageSessionCopyCookieStorage
|| __TEXT.__text __CFURLStorageSessionCopyCredentialStorage
|| __TEXT.__text __CFURLStorageSessionCopyIdentifier
|| __TEXT.__text __CFURLStorageSessionCopyProcessDefault
|| __TEXT.__text __CFURLStorageSessionCreate
|| __TEXT.__text __CFURLStorageSessionCreateWithData
|| __TEXT.__text __CFURLStorageSessionGetTypeID
|| __TEXT.__text __CFURLWriteDataAndPropertiesToResource
|| __TEXT.__text ___AuthBrokerMain
|| __TEXT.__text ___CFNetworkAgentMessageProcessorMain
|| __TEXT.__text ___CFTubeSetTubeTypeNotifier
|| __TEXT.__text _cfnTranslateCFError
|| __TEXT.__text _kCFNIE
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAbsoluteTimeGetDayOfWeek
__ CoreFoundation: _CFAbsoluteTimeGetGregorianDate
__ CoreFoundation: _CFAllocatorAllocate
__ CoreFoundation: _CFAllocatorCreate
__ CoreFoundation: _CFAllocatorDeallocate
__ CoreFoundation: _CFAllocatorGetDefault
__ CoreFoundation: _CFArrayAppendArray
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayApplyFunction
__ CoreFoundation: _CFArrayBSearchValues
__ CoreFoundation: _CFArrayContainsValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateCopy
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayCreateMutableCopy
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetFirstIndexOfValue
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayGetValues
__ CoreFoundation: _CFArrayInsertValueAtIndex
__ CoreFoundation: _CFArrayRemoveAllValues
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFArrayReplaceValues
__ CoreFoundation: _CFArraySortValues
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCopyExecutableURL
__ CoreFoundation: _CFBundleCopyLocalizationForLocalizationInfo
__ CoreFoundation: _CFBundleCopyLocalizedString
__ CoreFoundation: _CFBundleCopyResourceURL
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFBundleGetBundleWithIdentifier
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetLocalizationInfoForLocalization
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFBundleGetValueForInfoDictionaryKey
__ CoreFoundation: _CFCharacterSetCreateWithCharactersInString
__ CoreFoundation: _CFCharacterSetGetPredefined
__ CoreFoundation: _CFCharacterSetIsCharacterMember
__ CoreFoundation: _CFCopyDescription
__ CoreFoundation: _CFCopyHomeDirectoryURLForUser
__ CoreFoundation: _CFCopySearchPathForDirectoriesInDomains
__ CoreFoundation: _CFCopyUserName
__ CoreFoundation: _CFDataAppendBytes
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateCopy
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataCreateMutableCopy
__ CoreFoundation: _CFDataCreateWithBytesNoCopy
__ CoreFoundation: _CFDataDeleteBytes
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetMutableBytePtr
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDataSetLength
__ CoreFoundation: _CFDateCreate
__ CoreFoundation: _CFDateGetAbsoluteTime
__ CoreFoundation: _CFDateGetTypeID
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryApplyFunction
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateCopy
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryGetValueIfPresent
__ CoreFoundation: _CFDictionaryRemoveAllValues
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionaryReplaceValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFErrorCopyDescription
__ CoreFoundation: _CFErrorCopyUserInfo
__ CoreFoundation: _CFErrorCreate
__ CoreFoundation: _CFErrorGetCode
__ CoreFoundation: _CFErrorGetDomain
__ CoreFoundation: _CFErrorGetTypeID
__ CoreFoundation: _CFGetAllocator
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFGregorianDateGetAbsoluteTime
__ CoreFoundation: _CFGregorianDateIsValid
__ CoreFoundation: _CFHash
__ CoreFoundation: _CFLocaleGetSystem
__ CoreFoundation: _CFLog
__ CoreFoundation: _CFMachPortCreateRunLoopSource
__ CoreFoundation: _CFMachPortCreateWithPort
__ CoreFoundation: _CFMachPortGetTypeID
__ CoreFoundation: _CFMachPortInvalidate
__ CoreFoundation: _CFMakeCollectable
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNullGetTypeID
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberFormatterCreate
__ CoreFoundation: _CFNumberFormatterGetValueFromString
__ CoreFoundation: _CFNumberFormatterSetProperty
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPropertyListCreateData
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFPropertyListCreateWithStream
__ CoreFoundation: _CFPropertyListIsValid
__ CoreFoundation: _CFPropertyListWrite
__ CoreFoundation: _CFReadStreamClose
__ CoreFoundation: _CFReadStreamCopyDispatchQueue
__ CoreFoundation: _CFReadStreamCopyError
__ CoreFoundation: _CFReadStreamCopyProperty
__ CoreFoundation: _CFReadStreamCreate
__ CoreFoundation: _CFReadStreamCreateWithBytesNoCopy
__ CoreFoundation: _CFReadStreamCreateWithFile
__ CoreFoundation: _CFReadStreamGetError
__ CoreFoundation: _CFReadStreamGetInfoPointer
__ CoreFoundation: _CFReadStreamGetStatus
__ CoreFoundation: _CFReadStreamGetTypeID
__ CoreFoundation: _CFReadStreamHasBytesAvailable
__ CoreFoundation: _CFReadStreamOpen
__ CoreFoundation: _CFReadStreamRead
__ CoreFoundation: _CFReadStreamScheduleWithRunLoop
__ CoreFoundation: _CFReadStreamSetClient
__ CoreFoundation: _CFReadStreamSetDispatchQueue
__ CoreFoundation: _CFReadStreamSetProperty
__ CoreFoundation: _CFReadStreamSignalEvent
__ CoreFoundation: _CFReadStreamUnscheduleFromRunLoop
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopAddTimer
__ CoreFoundation: _CFRunLoopContainsSource
__ CoreFoundation: _CFRunLoopCopyCurrentMode
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopIsWaiting
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopRemoveTimer
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceGetContext
__ CoreFoundation: _CFRunLoopSourceGetTypeID
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopSourceIsValid
__ CoreFoundation: _CFRunLoopSourceSignal
__ CoreFoundation: _CFRunLoopStop
__ CoreFoundation: _CFRunLoopTimerCreate
__ CoreFoundation: _CFRunLoopTimerCreateWithHandler
__ CoreFoundation: _CFRunLoopTimerGetTypeID
__ CoreFoundation: _CFRunLoopTimerInvalidate
__ CoreFoundation: _CFRunLoopTimerIsValid
__ CoreFoundation: _CFRunLoopTimerSetNextFireDate
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetApplyFunction
__ CoreFoundation: _CFSetContainsValue
__ CoreFoundation: _CFSetCreate
__ CoreFoundation: _CFSetCreateCopy
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetCreateMutableCopy
__ CoreFoundation: _CFSetGetCount
__ CoreFoundation: _CFSetGetTypeID
__ CoreFoundation: _CFSetGetValues
__ CoreFoundation: _CFSetRemoveAllValues
__ CoreFoundation: _CFSetRemoveValue
__ CoreFoundation: _CFSetSetValue
__ CoreFoundation: _CFShow
__ CoreFoundation: _CFSocketCopyAddress
__ CoreFoundation: _CFSocketCopyPeerAddress
__ CoreFoundation: _CFSocketCreate
__ CoreFoundation: _CFSocketCreateRunLoopSource
__ CoreFoundation: _CFSocketCreateWithNative
__ CoreFoundation: _CFSocketDisableCallBacks
__ CoreFoundation: _CFSocketEnableCallBacks
__ CoreFoundation: _CFSocketGetNative
__ CoreFoundation: _CFSocketGetSocketFlags
__ CoreFoundation: _CFSocketGetTypeID
__ CoreFoundation: _CFSocketInvalidate
__ CoreFoundation: _CFSocketIsValid
__ CoreFoundation: _CFSocketSetAddress
__ CoreFoundation: _CFSocketSetSocketFlags
__ CoreFoundation: _CFStreamCreateBoundPair
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringAppendCString
__ CoreFoundation: _CFStringAppendCharacters
__ CoreFoundation: _CFStringAppendFormat
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCompareWithOptions
__ CoreFoundation: _CFStringConvertEncodingToNSStringEncoding
__ CoreFoundation: _CFStringConvertIANACharSetNameToEncoding
__ CoreFoundation: _CFStringConvertNSStringEncodingToEncoding
__ CoreFoundation: _CFStringCreateArrayBySeparatingStrings
__ CoreFoundation: _CFStringCreateByCombiningStrings
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringCreateExternalRepresentation
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringCreateWithBytesNoCopy
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithCStringNoCopy
__ CoreFoundation: _CFStringCreateWithCharacters
__ CoreFoundation: _CFStringCreateWithFileSystemRepresentation
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithFormatAndArguments
__ CoreFoundation: _CFStringCreateWithPascalString
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringDelete
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFStringFindCharacterFromSet
__ CoreFoundation: _CFStringFindWithOptions
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetDoubleValue
__ CoreFoundation: _CFStringGetFastestEncoding
__ CoreFoundation: _CFStringGetFileSystemRepresentation
__ CoreFoundation: _CFStringGetIntValue
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetMaximumSizeForEncoding
__ CoreFoundation: _CFStringGetMaximumSizeOfFileSystemRepresentation
__ CoreFoundation: _CFStringGetPascalString
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringHasPrefix
__ CoreFoundation: _CFStringHasSuffix
__ CoreFoundation: _CFStringInsert
__ CoreFoundation: _CFStringLowercase
__ CoreFoundation: _CFStringReplace
__ CoreFoundation: _CFStringTrimWhitespace
__ CoreFoundation: _CFTimeZoneCopyDefault
__ CoreFoundation: _CFTimeZoneCopySystem
__ CoreFoundation: _CFTimeZoneCreateWithTimeIntervalFromGMT
__ CoreFoundation: _CFTimeZoneGetSecondsFromGMT
__ CoreFoundation: _CFURLCanBeDecomposed
__ CoreFoundation: _CFURLCopyAbsoluteURL
__ CoreFoundation: _CFURLCopyFileSystemPath
__ CoreFoundation: _CFURLCopyHostName
__ CoreFoundation: _CFURLCopyLastPathComponent
__ CoreFoundation: _CFURLCopyNetLocation
__ CoreFoundation: _CFURLCopyPassword
__ CoreFoundation: _CFURLCopyPath
__ CoreFoundation: _CFURLCopyPathExtension
__ CoreFoundation: _CFURLCopyResourcePropertyForKey
__ CoreFoundation: _CFURLCopyResourceSpecifier
__ CoreFoundation: _CFURLCopyScheme
__ CoreFoundation: _CFURLCopyStrictPath
__ CoreFoundation: _CFURLCopyUserName
__ CoreFoundation: _CFURLCreateAbsoluteURLWithBytes
__ CoreFoundation: _CFURLCreateCopyAppendingPathComponent
__ CoreFoundation: _CFURLCreateCopyDeletingLastPathComponent
__ CoreFoundation: _CFURLCreateCopyDeletingPathExtension
__ CoreFoundation: _CFURLCreateDataAndPropertiesFromResource
__ CoreFoundation: _CFURLCreateFromFileSystemRepresentation
__ CoreFoundation: _CFURLCreateStringByAddingPercentEscapes
__ CoreFoundation: _CFURLCreateStringByReplacingPercentEscapes
__ CoreFoundation: _CFURLCreateStringByReplacingPercentEscapesUsingEncoding
__ CoreFoundation: _CFURLCreateWithBytes
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _CFURLCreateWithFileSystemPathRelativeToBase
__ CoreFoundation: _CFURLCreateWithString
__ CoreFoundation: _CFURLGetBaseURL
__ CoreFoundation: _CFURLGetByteRangeForComponent
__ CoreFoundation: _CFURLGetBytes
__ CoreFoundation: _CFURLGetFileSystemRepresentation
__ CoreFoundation: _CFURLGetPortNumber
__ CoreFoundation: _CFURLGetString
__ CoreFoundation: _CFURLGetTypeID
__ CoreFoundation: _CFURLHasDirectoryPath
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateFromString
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _CFUUIDGetTypeID
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationGetResponseValue
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _CFWriteStreamCanAcceptBytes
__ CoreFoundation: _CFWriteStreamClose
__ CoreFoundation: _CFWriteStreamCopyError
__ CoreFoundation: _CFWriteStreamCopyProperty
__ CoreFoundation: _CFWriteStreamCreate
__ CoreFoundation: _CFWriteStreamCreateWithAllocatedBuffers
__ CoreFoundation: _CFWriteStreamCreateWithFile
__ CoreFoundation: _CFWriteStreamGetError
__ CoreFoundation: _CFWriteStreamGetStatus
__ CoreFoundation: _CFWriteStreamGetTypeID
__ CoreFoundation: _CFWriteStreamOpen
__ CoreFoundation: _CFWriteStreamScheduleWithRunLoop
__ CoreFoundation: _CFWriteStreamSetClient
__ CoreFoundation: _CFWriteStreamSetDispatchQueue
__ CoreFoundation: _CFWriteStreamSetProperty
__ CoreFoundation: _CFWriteStreamSignalEvent
__ CoreFoundation: _CFWriteStreamUnscheduleFromRunLoop
__ CoreFoundation: _CFWriteStreamWrite
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: __CFGetProgname
__ CoreFoundation: __CFMZEnabled
__ CoreFoundation: __CFMainPThread
__ CoreFoundation: __CFReadStreamSignalEventDelayed
__ CoreFoundation: __CFRunLoop01
__ CoreFoundation: __CFRuntimeCreateInstance
__ CoreFoundation: __CFRuntimeGetClassWithTypeID
__ CoreFoundation: __CFRuntimeRegisterClass
__ CoreFoundation: __CFURLCopyComponents
__ CoreFoundation: __CFURLCopyPropertyListRepresentation
__ CoreFoundation: __CFURLCreateFromComponents
__ CoreFoundation: __CFURLCreateFromPropertyListRepresentation
__ CoreFoundation: __CFURLGetEncoding
__ CoreFoundation: __CFWriteStreamCreateFromFileDescriptor
__ CoreFoundation: __CFWriteStreamSignalEventDelayed
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___CFDataMtbl
__ CoreFoundation: ___CFSocketRead
__ CoreFoundation: ___CFSocketSetSocketReadBufferAttrs
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFStreamPropertyFileNativeHandle
__ CoreFoundation: _kCFAbsoluteTimeIntervalSince1904
__ CoreFoundation: _kCFAbsoluteTimeIntervalSince1970
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorMalloc
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleNameKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFErrorDescriptionKey
__ CoreFoundation: _kCFErrorDomainMach
__ CoreFoundation: _kCFErrorDomainOSStatus
__ CoreFoundation: _kCFErrorDomainPOSIX
__ CoreFoundation: _kCFErrorLocalizedDescriptionKey
__ CoreFoundation: _kCFErrorLocalizedFailureReasonKey
__ CoreFoundation: _kCFErrorLocalizedRecoverySuggestionKey
__ CoreFoundation: _kCFNull
__ CoreFoundation: _kCFNumberFormatterExponentSymbol
__ CoreFoundation: _kCFNumberNegativeInfinity
__ CoreFoundation: _kCFNumberPositiveInfinity
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFStreamErrorDomainSOCKS
__ CoreFoundation: _kCFStreamErrorDomainSSL
__ CoreFoundation: _kCFStreamPropertyDataWritten
__ CoreFoundation: _kCFStreamPropertySOCKSPassword
__ CoreFoundation: _kCFStreamPropertySOCKSProxyHost
__ CoreFoundation: _kCFStreamPropertySOCKSProxyPort
__ CoreFoundation: _kCFStreamPropertySOCKSUser
__ CoreFoundation: _kCFStreamPropertySOCKSVersion
__ CoreFoundation: _kCFStreamSocketSOCKSVersion4
__ CoreFoundation: _kCFStreamSocketSOCKSVersion5
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFTypeSetCallBacks
__ CoreFoundation: _kCFURLFileSizeKey
__ CoreFoundation: _kCFURLHTTPStatusCode
__ CoreFoundation: _kCFURLHTTPStatusLine
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationTextFieldTitlesKey
__ CoreFoundation: _kCFUserNotificationTextFieldValuesKey
__ Foundation: _NSFileModificationDate
__ Foundation: _NSFileOwnerAccountName
__ Foundation: _NSFilePosixPermissions
__ Foundation: _NSFileSize
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSProgressFileOperationKindDownloading
__ Foundation: _NSProgressFileOperationKindUploading
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSURLErrorFailingURLErrorKey
__ Foundation: _NSURLErrorFailingURLPeerTrustErrorKey
__ Foundation: _NSURLErrorFailingURLStringErrorKey
__ Foundation: _NSURLErrorNetworkUnavailableReasonKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPipe
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLError
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ IOKit: _IOPMAssertionCreateWithProperties
__ IOKit: _IOPMAssertionRelease
__ IOKit: _IOPMAssertionSetProperty
__ Security: _NtlmCreateClientRequest
__ Security: _NtlmGeneratePasswordHashes
__ Security: _NtlmGeneratorCreate
__ Security: _NtlmGeneratorRelease
__ Security: _SSLClose
__ Security: _SSLContextGetTypeID
__ Security: _SSLCopyDistinguishedNames
__ Security: _SSLCopyPeerTrust
__ Security: _SSLCreateContext
__ Security: _SSLGetCertificate
__ Security: _SSLGetClientCertificateState
__ Security: _SSLGetClientSideAuthenticate
__ Security: _SSLGetNegotiatedCipher
__ Security: _SSLGetNegotiatedProtocolVersion
__ Security: _SSLGetPeerDomainName
__ Security: _SSLGetPeerDomainNameLength
__ Security: _SSLGetPeerID
__ Security: _SSLGetProtocolVersionMax
__ Security: _SSLGetProtocolVersionMin
__ Security: _SSLGetSessionState
__ Security: _SSLHandshake
__ Security: _SSLProtocolFromVersionCodepoint
__ Security: _SSLRead
__ Security: _SSLSetALPNData
__ Security: _SSLSetALPNFunc
__ Security: _SSLSetAllowAnonymousCiphers
__ Security: _SSLSetCertificate
__ Security: _SSLSetClientSideAuthenticate
__ Security: _SSLSetConnection
__ Security: _SSLSetDHEEnabled
__ Security: _SSLSetEnabledCiphers
__ Security: _SSLSetIOFuncs
__ Security: _SSLSetNPNData
__ Security: _SSLSetNPNFunc
__ Security: _SSLSetPSKIdentity
__ Security: _SSLSetPSKSharedSecret
__ Security: _SSLSetPeerDomainName
__ Security: _SSLSetPeerID
__ Security: _SSLSetProtocolVersionMax
__ Security: _SSLSetProtocolVersionMin
__ Security: _SSLSetSessionConfig
__ Security: _SSLSetSessionOption
__ Security: _SSLWrite
__ Security: _SecAccessControlCopyData
__ Security: _SecAccessControlCreateFromData
__ Security: _SecAccessControlGetTypeID
__ Security: _SecCertificateCopyCommonName
__ Security: _SecCertificateCopyDNSNames
__ Security: _SecCertificateCopyData
__ Security: _SecCertificateCopyEmailAddresses
__ Security: _SecCertificateCopyIssuerSummary
__ Security: _SecCertificateCopySubjectSummary
__ Security: _SecCertificateCreateWithData
__ Security: _SecCertificateGetSignatureHashAlgorithm
__ Security: _SecCertificateGetTypeID
__ Security: _SecGenerateSelfSignedCertificate
__ Security: _SecIdentityCopyCertificate
__ Security: _SecIdentityCopyPrivateKey
__ Security: _SecIdentityCreate
__ Security: _SecIdentityGetTypeID
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecKeyGeneratePair
__ Security: _SecKeyGetAlgorithmId
__ Security: _SecKeyGetBlockSize
__ Security: _SecKeyGetTypeID
__ Security: _SecPolicyCopyProperties
__ Security: _SecPolicyCreateBasicX509
__ Security: _SecPolicyCreateSSL
__ Security: _SecPolicyCreateWithProperties
__ Security: _SecPolicyGetTypeID
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTrustCopyExceptions
__ Security: _SecTrustCopyPolicies
__ Security: _SecTrustCopyProperties
__ Security: _SecTrustCopyPublicKey
__ Security: _SecTrustCopyResult
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustDeserialize
__ Security: _SecTrustEvaluate
__ Security: _SecTrustEvaluateFastAsync
__ Security: _SecTrustEvaluateWithError
__ Security: _SecTrustGetCertificateAtIndex
__ Security: _SecTrustGetCertificateCount
__ Security: _SecTrustGetTypeID
__ Security: _SecTrustReportNetworkingAnalytics
__ Security: _SecTrustSerialize
__ Security: _SecTrustSetExceptions
__ Security: _SecTrustSetPinningPolicyName
__ Security: _SecTrustSetPolicies
__ Security: __NtlmCreateClientResponse
__ Security: __SSLCopyPeerCertificates
__ Security: __SSLGetDiffieHellmanParams
__ Security: __SSLSetAllowsAnyRoot
__ Security: __SSLSetAllowsExpiredCerts
__ Security: __SSLSetAllowsExpiredRoots
__ Security: __SSLSetDiffieHellmanParams
__ Security: _kSSLSessionConfig_3DES_fallback
__ Security: _kSSLSessionConfig_ATSv1
__ Security: _kSSLSessionConfig_ATSv1_noPFS
__ Security: _kSSLSessionConfig_TLSv1_3DES_fallback
__ Security: _kSSLSessionConfig_TLSv1_RC4_fallback
__ Security: _kSSLSessionConfig_TLSv1_fallback
__ Security: _kSSLSessionConfig_legacy
__ Security: _kSSLSessionConfig_legacy_DHE
__ Security: _kSSLSessionConfig_standard
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccount
__ Security: _kSecAttrAuthenticationType
__ Security: _kSecAttrAuthenticationTypeDefault
__ Security: _kSecAttrAuthenticationTypeHTMLForm
__ Security: _kSecAttrAuthenticationTypeHTTPBasic
__ Security: _kSecAttrAuthenticationTypeHTTPDigest
__ Security: _kSecAttrAuthenticationTypeNTLM
__ Security: _kSecAttrComment
__ Security: _kSecAttrCreator
__ Security: _kSecAttrDescription
__ Security: _kSecAttrKeySizeInBits
__ Security: _kSecAttrKeyType
__ Security: _kSecAttrKeyTypeRSA
__ Security: _kSecAttrLabel
__ Security: _kSecAttrNoLegacy
__ Security: _kSecAttrPath
__ Security: _kSecAttrPort
__ Security: _kSecAttrProtocol
__ Security: _kSecAttrProtocolFTP
__ Security: _kSecAttrProtocolFTPProxy
__ Security: _kSecAttrProtocolFTPS
__ Security: _kSecAttrProtocolHTTP
__ Security: _kSecAttrProtocolHTTPProxy
__ Security: _kSecAttrProtocolHTTPS
__ Security: _kSecAttrProtocolHTTPSProxy
__ Security: _kSecAttrProtocolSOCKS
__ Security: _kSecAttrSecurityDomain
__ Security: _kSecAttrServer
__ Security: _kSecAttrSynchronizable
__ Security: _kSecAttrSynchronizableAny
__ Security: _kSecCSRBasicContraintsPathLen
__ Security: _kSecCertificateKeyUsage
__ Security: _kSecClass
__ Security: _kSecClassIdentity
__ Security: _kSecClassInternetPassword
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecMatchLimitOne
__ Security: _kSecOidCommonName
__ Security: _kSecOidOrganization
__ Security: _kSecPolicyOid
__ Security: _kSecReturnAttributes
__ Security: _kSecReturnData
__ Security: _kSecReturnRef
__ Security: _kSecSubjectAltName
__ Security: _kSecTrustCertificateTransparency
__ Security: _kSecUseSystemKeychain
__ Security: _kSecValueData
__ Security: _kSecValueRef
__ Security: _sec_certificate_copy_ref
__ Security: _sec_identity_copy_ref
__ Security: _sec_identity_create_with_certificates
__ Security: _sec_protocol_metadata_access_distinguished_names
__ Security: _sec_protocol_metadata_access_peer_certificate_chain
__ Security: _sec_protocol_metadata_access_sent_certificates
__ Security: _sec_protocol_metadata_challenge_parameters_are_equal
__ Security: _sec_protocol_metadata_copy_sec_identity
__ Security: _sec_protocol_metadata_copy_sec_trust
__ Security: _sec_protocol_metadata_get_negotiated_ciphersuite
__ Security: _sec_protocol_metadata_get_negotiated_protocol
__ Security: _sec_protocol_metadata_get_negotiated_protocol_version
__ Security: _sec_protocol_metadata_get_negotiated_tls_ciphersuite
__ Security: _sec_protocol_metadata_get_negotiated_tls_protocol_version
__ Security: _sec_protocol_metadata_peers_are_equal
__ Security: _sec_protocol_options_add_pre_shared_key
__ Security: _sec_protocol_options_add_tls_ciphersuite
__ Security: _sec_protocol_options_add_tls_ciphersuite_group
__ Security: _sec_protocol_options_add_transport_specific_application_protocol
__ Security: _sec_protocol_options_get_default_max_tls_protocol_version
__ Security: _sec_protocol_options_get_default_min_tls_protocol_version
__ Security: _sec_protocol_options_set_challenge_block
__ Security: _sec_protocol_options_set_local_identity
__ Security: _sec_protocol_options_set_peer_authentication_optional
__ Security: _sec_protocol_options_set_peer_authentication_required
__ Security: _sec_protocol_options_set_tls_diffie_hellman_parameters
__ Security: _sec_protocol_options_set_tls_false_start_enabled
__ Security: _sec_protocol_options_set_tls_is_fallback_attempt
__ Security: _sec_protocol_options_set_tls_max_version
__ Security: _sec_protocol_options_set_tls_min_version
__ Security: _sec_protocol_options_set_tls_resumption_enabled
__ Security: _sec_protocol_options_set_tls_server_name
__ Security: _sec_protocol_options_set_tls_sni_disabled
__ Security: _sec_protocol_options_set_tls_tickets_enabled
__ Security: _sec_protocol_options_set_verify_block
__ Security: _sec_release
__ Security: _sec_retain
__ Security: _sec_trust_copy_ref
__ SoftLinking: __sl_dlopen_audited
__ SystemConfiguration: _SCDynamicStoreCopyComputerName
__ SystemConfiguration: _SCDynamicStoreCopyKeyList
__ SystemConfiguration: _SCDynamicStoreCopyMultiple
__ SystemConfiguration: _SCDynamicStoreCopyProxies
__ SystemConfiguration: _SCDynamicStoreCopyValue
__ SystemConfiguration: _SCDynamicStoreCreate
__ SystemConfiguration: _SCDynamicStoreCreateWithOptions
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkGlobalEntity
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkInterfaceEntity
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkServiceEntity
__ SystemConfiguration: _SCDynamicStoreRemoveValue
__ SystemConfiguration: _SCDynamicStoreSetValue
__ SystemConfiguration: _SCNetworkConnectionCreateWithServiceID
__ SystemConfiguration: _SCNetworkConnectionGetStatus
__ SystemConfiguration: _SCNetworkConnectionGetTypeID
__ SystemConfiguration: _SCNetworkConnectionScheduleWithRunLoop
__ SystemConfiguration: _SCNetworkConnectionUnscheduleFromRunLoop
__ SystemConfiguration: _SCNetworkProxiesCopyMatching
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilityGetTypeID
__ SystemConfiguration: _SCNetworkReachabilityScheduleWithRunLoop
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilitySetDispatchQueue
__ SystemConfiguration: _SCNetworkReachabilityUnscheduleFromRunLoop
__ SystemConfiguration: _SCNetworkSignatureCopyIdentifierForConnectedSocket
__ SystemConfiguration: _kCFErrorDomainSystemConfiguration
__ SystemConfiguration: _kSCDynamicStoreDomainSetup
__ SystemConfiguration: _kSCDynamicStoreDomainState
__ SystemConfiguration: _kSCDynamicStorePropNetPrimaryInterface
__ SystemConfiguration: _kSCDynamicStorePropNetPrimaryService
__ SystemConfiguration: _kSCEntNetDNS
__ SystemConfiguration: _kSCEntNetIPv4
__ SystemConfiguration: _kSCEntNetInterface
__ SystemConfiguration: _kSCEntNetLink
__ SystemConfiguration: _kSCPropNetDNSServerAddresses
__ SystemConfiguration: _kSCPropNetIPv4Addresses
__ SystemConfiguration: _kSCPropNetIPv4Router
__ SystemConfiguration: _kSCPropNetInterfaceDeviceName
__ SystemConfiguration: _kSCPropNetInterfaceSubType
__ SystemConfiguration: _kSCPropNetInterfaceType
__ SystemConfiguration: _kSCPropNetLinkActive
__ SystemConfiguration: _kSCPropNetLinkDetaching
__ SystemConfiguration: _kSCPropNetProxiesFTPEnable
__ SystemConfiguration: _kSCPropNetProxiesFallBackAllowed
__ SystemConfiguration: _kSCPropNetProxiesHTTPEnable
__ SystemConfiguration: _kSCPropNetProxiesHTTPSEnable
__ SystemConfiguration: _kSCPropNetProxiesSOCKSEnable
__ SystemConfiguration: _kSCPropNetServiceOrder
__ SystemConfiguration: _kSCValNetInterfaceSubTypeL2TP
__ SystemConfiguration: _kSCValNetInterfaceSubTypePPTP
__ SystemConfiguration: _kSCValNetInterfaceTypePPP
__ libSystem.B.dylib: _APP_SANDBOX_READ_WRITE
__ libSystem.B.dylib: _CC_MD5_Final
__ libSystem.B.dylib: _CC_MD5_Init
__ libSystem.B.dylib: _CC_MD5_Update
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _DNSServiceAddRecord
__ libSystem.B.dylib: _DNSServiceBrowse
__ libSystem.B.dylib: _DNSServiceConstructFullName
__ libSystem.B.dylib: _DNSServiceCreateConnection
__ libSystem.B.dylib: _DNSServiceEnumerateDomains
__ libSystem.B.dylib: _DNSServiceProcessResult
__ libSystem.B.dylib: _DNSServiceQueryRecord
__ libSystem.B.dylib: _DNSServiceRefDeallocate
__ libSystem.B.dylib: _DNSServiceRefSockFD
__ libSystem.B.dylib: _DNSServiceRegister
__ libSystem.B.dylib: _DNSServiceRemoveRecord
__ libSystem.B.dylib: _DNSServiceResolve
__ libSystem.B.dylib: _DNSServiceUpdateRecord
__ libSystem.B.dylib: _SANDBOX_CHECK_NO_REPORT
__ libSystem.B.dylib: _TXTRecordCreate
__ libSystem.B.dylib: _TXTRecordDeallocate
__ libSystem.B.dylib: _TXTRecordGetBytesPtr
__ libSystem.B.dylib: _TXTRecordGetCount
__ libSystem.B.dylib: _TXTRecordGetItemAtIndex
__ libSystem.B.dylib: _TXTRecordGetLength
__ libSystem.B.dylib: _TXTRecordSetValue
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___cxa_atexit
__ libSystem.B.dylib: ___darwin_check_fd_set_overflow
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: ___tolower
__ libSystem.B.dylib: __dispatch_data_destructor_free
__ libSystem.B.dylib: __dispatch_data_empty
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_mach_recv
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __getaddrinfo_interface_async_call
__ libSystem.B.dylib: __getnameinfo_interface_async_call
__ libSystem.B.dylib: __os_crash
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_nospin_lock_lock
__ libSystem.B.dylib: __os_nospin_lock_unlock
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_error_termination_imminent
__ libSystem.B.dylib: __xpc_runtime_is_app_sandboxed
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: __xpc_type_uint64
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _acl_free
__ libSystem.B.dylib: _acl_get_link_np
__ libSystem.B.dylib: _acl_to_text
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _asprintf
__ libSystem.B.dylib: _atoi
__ libSystem.B.dylib: _atol
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _confstr
__ libSystem.B.dylib: _container_system_group_path_for_identifier
__ libSystem.B.dylib: _dirstat_np
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_f
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_block_create_with_voucher_and_qos_class
__ libSystem.B.dylib: _dispatch_data_apply
__ libSystem.B.dylib: _dispatch_data_create
__ libSystem.B.dylib: _dispatch_data_create_alloc
__ libSystem.B.dylib: _dispatch_data_create_concat
__ libSystem.B.dylib: _dispatch_data_create_map
__ libSystem.B.dylib: _dispatch_data_create_subrange
__ libSystem.B.dylib: _dispatch_data_get_size
__ libSystem.B.dylib: _dispatch_get_current_queue
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_io_barrier
__ libSystem.B.dylib: _dispatch_io_close
__ libSystem.B.dylib: _dispatch_io_create
__ libSystem.B.dylib: _dispatch_io_get_descriptor
__ libSystem.B.dylib: _dispatch_io_set_low_water
__ libSystem.B.dylib: _dispatch_io_write
__ libSystem.B.dylib: _dispatch_main
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_sync_f
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dup
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fchown
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fdopen
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fgetxattr
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fputc
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeaddrinfo
__ libSystem.B.dylib: _freeifaddrs
__ libSystem.B.dylib: _fseeko
__ libSystem.B.dylib: _fsetxattr
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _ftello
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getaddrinfo
__ libSystem.B.dylib: _getaddrinfo_async_handle_reply
__ libSystem.B.dylib: _getaddrinfo_async_start
__ libSystem.B.dylib: _getegid
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _geteuid
__ libSystem.B.dylib: _getgid
__ libSystem.B.dylib: _gethostbyname
__ libSystem.B.dylib: _gethostname
__ libSystem.B.dylib: _getifaddrs
__ libSystem.B.dylib: _getnameinfo
__ libSystem.B.dylib: _getnameinfo_async_handle_reply
__ libSystem.B.dylib: _getnameinfo_async_start
__ libSystem.B.dylib: _getpeername
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprotobyname
__ libSystem.B.dylib: _getrlimit
__ libSystem.B.dylib: _getsockname
__ libSystem.B.dylib: _getsockopt
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _host_check_multiuser_mode
__ libSystem.B.dylib: _if_indextoname
__ libSystem.B.dylib: _if_nametoindex
__ libSystem.B.dylib: _inet_addr
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _inet_pton
__ libSystem.B.dylib: _ioctl
__ libSystem.B.dylib: _issetugid
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _lseek
__ libSystem.B.dylib: _lstat
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _mkpath_np
__ libSystem.B.dylib: _mkstemps
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _modf
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_check
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _open_dprotected_np
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_release
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_allows_internal_security_policies
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _os_variant_has_internal_ui
__ libSystem.B.dylib: _perror
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _pthread_attr_destroy
__ libSystem.B.dylib: _pthread_attr_init
__ libSystem.B.dylib: _pthread_attr_setdetachstate
__ libSystem.B.dylib: _pthread_cond_destroy
__ libSystem.B.dylib: _pthread_cond_init
__ libSystem.B.dylib: _pthread_cond_signal
__ libSystem.B.dylib: _pthread_cond_wait
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_mach_thread_np
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_destroy
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _pthread_setschedparam
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _qsort
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _recvfrom
__ libSystem.B.dylib: _removefile
__ libSystem.B.dylib: _rename
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _sandbox_check_by_audit_token
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _sandbox_extension_release
__ libSystem.B.dylib: _select
__ libSystem.B.dylib: _sendto
__ libSystem.B.dylib: _setrlimit
__ libSystem.B.dylib: _setsockopt
__ libSystem.B.dylib: _signal
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strcasecmp
__ libSystem.B.dylib: _strcasestr
__ libSystem.B.dylib: _strchr
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlcat
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncasecmp
__ libSystem.B.dylib: _strncasecmp_l
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _strndup
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _strrchr
__ libSystem.B.dylib: _strstr
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _strtoll
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _strtouq
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _syslog
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _uuid_copy
__ libSystem.B.dylib: _uuid_unparse_upper
__ libSystem.B.dylib: _voucher_copy
__ libSystem.B.dylib: _write
__ libSystem.B.dylib: _xpc_array_append_value
__ libSystem.B.dylib: _xpc_array_apply
__ libSystem.B.dylib: _xpc_array_create
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_array_get_value
__ libSystem.B.dylib: _xpc_array_set_string
__ libSystem.B.dylib: _xpc_array_set_uint64
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_get_audit_token
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_count
__ libSystem.B.dylib: _xpc_dictionary_get_data
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_release
__ libSystem.B.dylib: _xpc_retain
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: _xpc_uint64_create
__ libSystem.B.dylib: _xpc_uint64_get_value
__ libSystem.B.dylib: dyld_stub_binder
__ libapple_nghttp2.dylib: _nghttp2_check_header_name
__ libapple_nghttp2.dylib: _nghttp2_check_header_value
__ libapple_nghttp2.dylib: _nghttp2_option_del
__ libapple_nghttp2.dylib: _nghttp2_option_new
__ libapple_nghttp2.dylib: _nghttp2_option_set_no_auto_window_update
__ libapple_nghttp2.dylib: _nghttp2_priority_spec_init
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_new
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_before_frame_send_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_error_callback2
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_begin_headers_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_data_chunk_recv_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_frame_not_send_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_frame_recv_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_frame_send_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_header_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_invalid_frame_recv_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_invalid_header_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_stream_close_callback
__ libapple_nghttp2.dylib: _nghttp2_session_client_new2
__ libapple_nghttp2.dylib: _nghttp2_session_consume_connection
__ libapple_nghttp2.dylib: _nghttp2_session_del
__ libapple_nghttp2.dylib: _nghttp2_session_get_local_window_size
__ libapple_nghttp2.dylib: _nghttp2_session_get_next_stream_id
__ libapple_nghttp2.dylib: _nghttp2_session_get_stream_user_data
__ libapple_nghttp2.dylib: _nghttp2_session_mem_recv
__ libapple_nghttp2.dylib: _nghttp2_session_mem_send
__ libapple_nghttp2.dylib: _nghttp2_session_resume_data
__ libapple_nghttp2.dylib: _nghttp2_session_set_next_stream_id
__ libapple_nghttp2.dylib: _nghttp2_session_set_stream_user_data
__ libapple_nghttp2.dylib: _nghttp2_session_terminate_session
__ libapple_nghttp2.dylib: _nghttp2_session_want_read
__ libapple_nghttp2.dylib: _nghttp2_session_want_write
__ libapple_nghttp2.dylib: _nghttp2_strerror
__ libapple_nghttp2.dylib: _nghttp2_submit_ping
__ libapple_nghttp2.dylib: _nghttp2_submit_priority
__ libapple_nghttp2.dylib: _nghttp2_submit_request
__ libapple_nghttp2.dylib: _nghttp2_submit_rst_stream
__ libapple_nghttp2.dylib: _nghttp2_submit_settings
__ libapple_nghttp2.dylib: _nghttp2_submit_window_update
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9has_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5eraseEmm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC1ERS3_b
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count4lockEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPmi
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__15mutex4lockEv
__ libc++.1.dylib: __ZNSt3__15mutex6unlockEv
__ libc++.1.dylib: __ZNSt3__15mutexD1Ev
__ libc++.1.dylib: __ZNSt3__16localeC1ERKS0_
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__17codecvtIcc11__mbstate_tE2idE
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__19to_stringEi
__ libc++.1.dylib: __ZNSt3__19to_stringEj
__ libc++.1.dylib: __ZNSt3__19to_stringEx
__ libc++.1.dylib: __ZNSt3__19to_stringEy
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___gxx_personality_v0
__ libicucore.A.dylib: _uidna_IDNToASCII
__ libnetwork.dylib: __nw_content_context_default_message
__ libnetwork.dylib: __nw_content_context_final_send
__ libnetwork.dylib: __nw_content_context_new_inbound_message
__ libnetwork.dylib: __nw_endpoint_alternative_unknown
__ libnetwork.dylib: __nw_parameters_configure_protocol_default_configuration
__ libnetwork.dylib: __nw_parameters_configure_protocol_disable
__ libnetwork.dylib: _kNWErrorDomainDNS
__ libnetwork.dylib: _kNWErrorDomainPOSIX
__ libnetwork.dylib: _kNWErrorDomainTLS
__ libnetwork.dylib: _kTCPListenerInterfaceAll
__ libnetwork.dylib: _network_proxy_copy_host
__ libnetwork.dylib: _network_proxy_create_from_parameters
__ libnetwork.dylib: _network_proxy_get_port
__ libnetwork.dylib: _network_proxy_get_type
__ libnetwork.dylib: _network_proxy_is_transparent
__ libnetwork.dylib: _nw_activity_activate
__ libnetwork.dylib: _nw_activity_complete_with_reason
__ libnetwork.dylib: _nw_activity_create
__ libnetwork.dylib: _nw_activity_get_token
__ libnetwork.dylib: _nw_activity_is_selected_for_reporting
__ libnetwork.dylib: _nw_activity_set_parent_activity
__ libnetwork.dylib: _nw_advertise_descriptor_create_bonjour_service
__ libnetwork.dylib: _nw_authentication_challenge_copy_http_message
__ libnetwork.dylib: _nw_authentication_challenge_get_attempt_count
__ libnetwork.dylib: _nw_authentication_credential_create
__ libnetwork.dylib: _nw_authentication_credential_set_password
__ libnetwork.dylib: _nw_authentication_credential_set_username
__ libnetwork.dylib: _nw_connection_add_client_event
__ libnetwork.dylib: _nw_connection_append_and_start_application_protocol
__ libnetwork.dylib: _nw_connection_better_path_available
__ libnetwork.dylib: _nw_connection_cancel
__ libnetwork.dylib: _nw_connection_copy_connected_local_endpoint
__ libnetwork.dylib: _nw_connection_copy_connected_path
__ libnetwork.dylib: _nw_connection_copy_connected_remote_endpoint
__ libnetwork.dylib: _nw_connection_copy_current_path
__ libnetwork.dylib: _nw_connection_copy_endpoint
__ libnetwork.dylib: _nw_connection_copy_establishment_report_on_queue
__ libnetwork.dylib: _nw_connection_copy_metadata
__ libnetwork.dylib: _nw_connection_copy_protocol_metadata
__ libnetwork.dylib: _nw_connection_copy_tcp_info
__ libnetwork.dylib: _nw_connection_create
__ libnetwork.dylib: _nw_connection_decrement_estimated_bytes
__ libnetwork.dylib: _nw_connection_end_activity
__ libnetwork.dylib: _nw_connection_fillout_tcp_statistics
__ libnetwork.dylib: _nw_connection_get_id
__ libnetwork.dylib: _nw_connection_get_uuid
__ libnetwork.dylib: _nw_connection_increment_estimated_bytes
__ libnetwork.dylib: _nw_connection_modify_connected_protocol_stack
__ libnetwork.dylib: _nw_connection_multipath_copy_subflow_counts
__ libnetwork.dylib: _nw_connection_multipath_get_primary_subflow_interface_index
__ libnetwork.dylib: _nw_connection_multipath_get_subflow_count
__ libnetwork.dylib: _nw_connection_receive
__ libnetwork.dylib: _nw_connection_receive_message
__ libnetwork.dylib: _nw_connection_receive_with_context
__ libnetwork.dylib: _nw_connection_register_context
__ libnetwork.dylib: _nw_connection_reset_expected_progress_target
__ libnetwork.dylib: _nw_connection_reset_traffic_class
__ libnetwork.dylib: _nw_connection_restart
__ libnetwork.dylib: _nw_connection_send
__ libnetwork.dylib: _nw_connection_set_adaptive_read_handler
__ libnetwork.dylib: _nw_connection_set_adaptive_write_handler
__ libnetwork.dylib: _nw_connection_set_alternate_path_state_handler
__ libnetwork.dylib: _nw_connection_set_event_handler
__ libnetwork.dylib: _nw_connection_set_excessive_keepalive_handler
__ libnetwork.dylib: _nw_connection_set_low_throughput_handler
__ libnetwork.dylib: _nw_connection_set_queue
__ libnetwork.dylib: _nw_connection_set_read_close_handler
__ libnetwork.dylib: _nw_connection_set_state_changed_handler
__ libnetwork.dylib: _nw_connection_set_viability_changed_handler
__ libnetwork.dylib: _nw_connection_set_write_close_handler
__ libnetwork.dylib: _nw_connection_start
__ libnetwork.dylib: _nw_connection_start_activity
__ libnetwork.dylib: _nw_connection_unregister_context
__ libnetwork.dylib: _nw_connection_used_fallback
__ libnetwork.dylib: _nw_connection_used_tfo
__ libnetwork.dylib: _nw_connection_uses_multipath
__ libnetwork.dylib: _nw_content_context_copy_protocol_metadata
__ libnetwork.dylib: _nw_content_context_create
__ libnetwork.dylib: _nw_content_context_get_is_final
__ libnetwork.dylib: _nw_content_context_set_is_final
__ libnetwork.dylib: _nw_content_context_set_metadata_for_protocol
__ libnetwork.dylib: _nw_context_activate
__ libnetwork.dylib: _nw_context_copy_implicit_context
__ libnetwork.dylib: _nw_context_create
__ libnetwork.dylib: _nw_context_get_identifier
__ libnetwork.dylib: _nw_context_get_privacy_level
__ libnetwork.dylib: _nw_context_set_isolate_protocol_cache
__ libnetwork.dylib: _nw_context_set_privacy_level
__ libnetwork.dylib: _nw_endpoint_add_alternative
__ libnetwork.dylib: _nw_endpoint_copy_address_string
__ libnetwork.dylib: _nw_endpoint_copy_proxy_original_endpoint
__ libnetwork.dylib: _nw_endpoint_create_host_with_numeric_port
__ libnetwork.dylib: _nw_endpoint_enumerate_cnames
__ libnetwork.dylib: _nw_endpoint_get_address
__ libnetwork.dylib: _nw_endpoint_get_description
__ libnetwork.dylib: _nw_endpoint_get_hostname
__ libnetwork.dylib: _nw_endpoint_get_port
__ libnetwork.dylib: _nw_endpoint_get_type
__ libnetwork.dylib: _nw_endpoint_set_alternate_port
__ libnetwork.dylib: _nw_error_copy_cf_error
__ libnetwork.dylib: _nw_error_get_error_code
__ libnetwork.dylib: _nw_establishment_report_copy_dictionary
__ libnetwork.dylib: _nw_establishment_report_create_from_dictionary
__ libnetwork.dylib: _nw_establishment_report_enumerate_protocols
__ libnetwork.dylib: _nw_establishment_report_enumerate_resolution_reports
__ libnetwork.dylib: _nw_establishment_report_get_attempt_started_after_milliseconds
__ libnetwork.dylib: _nw_establishment_report_get_duration_milliseconds
__ libnetwork.dylib: _nw_establishment_report_get_flow_started_after_milliseconds
__ libnetwork.dylib: _nw_establishment_report_get_resolution_started_after_milliseconds
__ libnetwork.dylib: _nw_interface_create_with_index
__ libnetwork.dylib: _nw_interface_create_with_name
__ libnetwork.dylib: _nw_interface_get_name
__ libnetwork.dylib: _nw_interface_get_subtype
__ libnetwork.dylib: _nw_interface_get_type
__ libnetwork.dylib: _nw_ip_options_set_local_address_preference
__ libnetwork.dylib: _nw_listener_cancel
__ libnetwork.dylib: _nw_listener_create_with_port
__ libnetwork.dylib: _nw_listener_get_port
__ libnetwork.dylib: _nw_listener_set_advertise_descriptor
__ libnetwork.dylib: _nw_listener_set_new_connection_handler
__ libnetwork.dylib: _nw_listener_set_queue
__ libnetwork.dylib: _nw_listener_set_state_changed_handler
__ libnetwork.dylib: _nw_listener_start
__ libnetwork.dylib: _nw_parameters_add_protocol_stack_member
__ libnetwork.dylib: _nw_parameters_add_proxy_options
__ libnetwork.dylib: _nw_parameters_copy
__ libnetwork.dylib: _nw_parameters_copy_default_protocol_stack
__ libnetwork.dylib: _nw_parameters_copy_preferred_netagent_domains
__ libnetwork.dylib: _nw_parameters_copy_preferred_netagent_types
__ libnetwork.dylib: _nw_parameters_copy_prohibited_interface_subtypes
__ libnetwork.dylib: _nw_parameters_copy_prohibited_interface_types
__ libnetwork.dylib: _nw_parameters_copy_protocol_value
__ libnetwork.dylib: _nw_parameters_create_protocol_parameters
__ libnetwork.dylib: _nw_parameters_create_quic_connection
__ libnetwork.dylib: _nw_parameters_create_secure_tcp
__ libnetwork.dylib: _nw_parameters_create_secure_tcp_or_quic_connection
__ libnetwork.dylib: _nw_parameters_get_traffic_class
__ libnetwork.dylib: _nw_parameters_require_interface
__ libnetwork.dylib: _nw_parameters_set_account_id
__ libnetwork.dylib: _nw_parameters_set_background_traffic_management
__ libnetwork.dylib: _nw_parameters_set_context
__ libnetwork.dylib: _nw_parameters_set_discretionary
__ libnetwork.dylib: _nw_parameters_set_ecn_mode
__ libnetwork.dylib: _nw_parameters_set_effective_bundle_id
__ libnetwork.dylib: _nw_parameters_set_expected_workload
__ libnetwork.dylib: _nw_parameters_set_expired_dns_behavior
__ libnetwork.dylib: _nw_parameters_set_https_proxy_is_opaque
__ libnetwork.dylib: _nw_parameters_set_https_proxy_over_tls
__ libnetwork.dylib: _nw_parameters_set_indefinite
__ libnetwork.dylib: _nw_parameters_set_initial_data_payload
__ libnetwork.dylib: _nw_parameters_set_metadata
__ libnetwork.dylib: _nw_parameters_set_multipath_service
__ libnetwork.dylib: _nw_parameters_set_no_delay
__ libnetwork.dylib: _nw_parameters_set_no_fallback
__ libnetwork.dylib: _nw_parameters_set_no_proxy
__ libnetwork.dylib: _nw_parameters_set_prefer_no_proxy
__ libnetwork.dylib: _nw_parameters_set_preferred_netagent_classes
__ libnetwork.dylib: _nw_parameters_set_prohibit_constrained
__ libnetwork.dylib: _nw_parameters_set_prohibit_expensive
__ libnetwork.dylib: _nw_parameters_set_prohibited_interface_subtypes
__ libnetwork.dylib: _nw_parameters_set_prohibited_interface_types
__ libnetwork.dylib: _nw_parameters_set_protocol_value
__ libnetwork.dylib: _nw_parameters_set_proxy_configuration
__ libnetwork.dylib: _nw_parameters_set_receive_any_interface
__ libnetwork.dylib: _nw_parameters_set_required_netagent_classes
__ libnetwork.dylib: _nw_parameters_set_source_application
__ libnetwork.dylib: _nw_parameters_set_source_application_by_bundle_id
__ libnetwork.dylib: _nw_parameters_set_source_application_by_external_bundle_id
__ libnetwork.dylib: _nw_parameters_set_traffic_class
__ libnetwork.dylib: _nw_parameters_set_url
__ libnetwork.dylib: _nw_parameters_set_use_awdl
__ libnetwork.dylib: _nw_parameters_set_use_p2p
__ libnetwork.dylib: _nw_path_copy_interface
__ libnetwork.dylib: _nw_path_copy_parameters
__ libnetwork.dylib: _nw_path_get_interface_index
__ libnetwork.dylib: _nw_path_get_ipv4_network_signature
__ libnetwork.dylib: _nw_path_get_ipv6_network_signature
__ libnetwork.dylib: _nw_path_get_policy_id
__ libnetwork.dylib: _nw_path_get_reason
__ libnetwork.dylib: _nw_path_get_vpn_config_id
__ libnetwork.dylib: _nw_path_is_constrained
__ libnetwork.dylib: _nw_path_is_expensive
__ libnetwork.dylib: _nw_path_is_per_app_vpn
__ libnetwork.dylib: _nw_path_uses_interface_subtype
__ libnetwork.dylib: _nw_path_uses_interface_type
__ libnetwork.dylib: _nw_protocol_copy_quic_connection_definition
__ libnetwork.dylib: _nw_protocol_copy_tls_definition
__ libnetwork.dylib: _nw_protocol_copy_ws_definition
__ libnetwork.dylib: _nw_protocol_definition_is_equal
__ libnetwork.dylib: _nw_protocol_metadata_is_tls
__ libnetwork.dylib: _nw_protocol_register
__ libnetwork.dylib: _nw_protocol_set_default_one_to_one_callbacks
__ libnetwork.dylib: _nw_protocol_stack_copy_internet_protocol
__ libnetwork.dylib: _nw_protocol_stack_copy_transport_protocol
__ libnetwork.dylib: _nw_proxy_copy_http_connect_definition
__ libnetwork.dylib: _nw_proxy_create_options
__ libnetwork.dylib: _nw_proxy_options_set_authentication_challenge_handler
__ libnetwork.dylib: _nw_proxy_options_set_http_proxy_authorization_header
__ libnetwork.dylib: _nw_queue_context_target_dispatch_queue
__ libnetwork.dylib: _nw_quic_connection_close_with_error
__ libnetwork.dylib: _nw_quic_connection_copy_sec_protocol_metadata
__ libnetwork.dylib: _nw_quic_connection_copy_sec_protocol_options
__ libnetwork.dylib: _nw_quic_connection_copy_stream_metadata
__ libnetwork.dylib: _nw_quic_connection_get_application_error
__ libnetwork.dylib: _nw_quic_connection_get_peer_idle_timeout
__ libnetwork.dylib: _nw_quic_connection_metadata_set_stream_options
__ libnetwork.dylib: _nw_quic_connection_set_idle_timeout
__ libnetwork.dylib: _nw_quic_connection_set_initial_max_streams_bidirectional
__ libnetwork.dylib: _nw_quic_connection_set_initial_max_streams_unidirectional
__ libnetwork.dylib: _nw_quic_connection_set_keepalive
__ libnetwork.dylib: _nw_quic_connection_set_max_streams_unidirectional
__ libnetwork.dylib: _nw_quic_create_connection_metadata
__ libnetwork.dylib: _nw_quic_create_stream_options
__ libnetwork.dylib: _nw_quic_stream_get_application_error
__ libnetwork.dylib: _nw_quic_stream_get_id
__ libnetwork.dylib: _nw_quic_stream_set_application_error
__ libnetwork.dylib: _nw_quic_stream_set_is_unidirectional
__ libnetwork.dylib: _nw_release
__ libnetwork.dylib: _nw_resolution_report_get_milliseconds
__ libnetwork.dylib: _nw_resolution_report_get_protocol
__ libnetwork.dylib: _nw_retain
__ libnetwork.dylib: _nw_tcp_options_set_connection_timeout
__ libnetwork.dylib: _nw_tcp_options_set_enable_fast_open
__ libnetwork.dylib: _nw_tls_copy_sec_protocol_metadata
__ libnetwork.dylib: _nw_tls_create_options
__ libnetwork.dylib: _nw_ws_create_metadata
__ libnetwork.dylib: _nw_ws_create_options
__ libnetwork.dylib: _nw_ws_metadata_get_close_code
__ libnetwork.dylib: _nw_ws_metadata_get_opcode
__ libnetwork.dylib: _nw_ws_metadata_set_close_code
__ libnetwork.dylib: _nw_ws_metadata_set_pong_handler
__ libnetwork.dylib: _nw_ws_options_add_subprotocol
__ libnetwork.dylib: _nw_ws_options_set_auto_reply_ping
__ libnetwork.dylib: _nw_ws_options_set_maximum_message_size
__ libnetwork.dylib: _nw_ws_options_set_permessage_deflate
__ libnetwork.dylib: _nw_ws_options_set_prepend_data
__ libnetwork.dylib: _nw_ws_options_set_skip_handshake
__ libnetwork.dylib: _nw_ws_validate_server_response_with_protocol_options
__ libnetwork.dylib: _nwlog_get_signposts_enabled
__ libnetwork.dylib: _tcp_connection_accept
__ libnetwork.dylib: _tcp_connection_add_event_adaptive_read_timeout
__ libnetwork.dylib: _tcp_connection_add_event_adaptive_write_timeout
__ libnetwork.dylib: _tcp_connection_add_event_excessive_keepalives
__ libnetwork.dylib: _tcp_connection_allow_client_socket_access
__ libnetwork.dylib: _tcp_connection_cancel
__ libnetwork.dylib: _tcp_connection_conditions_get_unmet_reason
__ libnetwork.dylib: _tcp_connection_conditions_met
__ libnetwork.dylib: _tcp_connection_copy_endpoint
__ libnetwork.dylib: _tcp_connection_copy_parameters
__ libnetwork.dylib: _tcp_connection_copy_proxy
__ libnetwork.dylib: _tcp_connection_copy_socket
__ libnetwork.dylib: _tcp_connection_copy_tcp_info
__ libnetwork.dylib: _tcp_connection_create
__ libnetwork.dylib: _tcp_connection_create_with_connected_fd
__ libnetwork.dylib: _tcp_connection_create_with_service
__ libnetwork.dylib: _tcp_connection_create_with_sockaddr
__ libnetwork.dylib: _tcp_connection_did_fallback
__ libnetwork.dylib: _tcp_connection_get_connection_quality
__ libnetwork.dylib: _tcp_connection_get_error
__ libnetwork.dylib: _tcp_connection_get_hostname
__ libnetwork.dylib: _tcp_connection_get_local
__ libnetwork.dylib: _tcp_connection_get_remote
__ libnetwork.dylib: _tcp_connection_get_socket
__ libnetwork.dylib: _tcp_connection_get_statistics
__ libnetwork.dylib: _tcp_connection_has_better_route
__ libnetwork.dylib: _tcp_connection_id
__ libnetwork.dylib: _tcp_connection_is_cellular
__ libnetwork.dylib: _tcp_connection_is_expensive
__ libnetwork.dylib: _tcp_connection_is_multipath
__ libnetwork.dylib: _tcp_connection_is_viable
__ libnetwork.dylib: _tcp_connection_log_event
__ libnetwork.dylib: _tcp_connection_multipath_copy_subflow_switch_counts
__ libnetwork.dylib: _tcp_connection_multipath_get_primary_subflow_ifindex
__ libnetwork.dylib: _tcp_connection_multipath_get_subflow_count
__ libnetwork.dylib: _tcp_connection_override_obscure
__ libnetwork.dylib: _tcp_connection_read
__ libnetwork.dylib: _tcp_connection_release
__ libnetwork.dylib: _tcp_connection_retain
__ libnetwork.dylib: _tcp_connection_retry
__ libnetwork.dylib: _tcp_connection_set_account_identifier
__ libnetwork.dylib: _tcp_connection_set_cancel_handler
__ libnetwork.dylib: _tcp_connection_set_cellular_service
__ libnetwork.dylib: _tcp_connection_set_connection_attempt_timeout
__ libnetwork.dylib: _tcp_connection_set_connection_pool
__ libnetwork.dylib: _tcp_connection_set_ecn_enabled
__ libnetwork.dylib: _tcp_connection_set_event_handler
__ libnetwork.dylib: _tcp_connection_set_extended_background_idle
__ libnetwork.dylib: _tcp_connection_set_fallback_fast
__ libnetwork.dylib: _tcp_connection_set_indefinite
__ libnetwork.dylib: _tcp_connection_set_interface_by_name
__ libnetwork.dylib: _tcp_connection_set_keepalive
__ libnetwork.dylib: _tcp_connection_set_keepalive_offload
__ libnetwork.dylib: _tcp_connection_set_minimum_throughput
__ libnetwork.dylib: _tcp_connection_set_no_cellular
__ libnetwork.dylib: _tcp_connection_set_no_expensive
__ libnetwork.dylib: _tcp_connection_set_no_fallback
__ libnetwork.dylib: _tcp_connection_set_opportunistic
__ libnetwork.dylib: _tcp_connection_set_persistent
__ libnetwork.dylib: _tcp_connection_set_proxies
__ libnetwork.dylib: _tcp_connection_set_receive_any_interface
__ libnetwork.dylib: _tcp_connection_set_source_application
__ libnetwork.dylib: _tcp_connection_set_source_application_by_bundle
__ libnetwork.dylib: _tcp_connection_set_traffic_class
__ libnetwork.dylib: _tcp_connection_set_url
__ libnetwork.dylib: _tcp_connection_set_usage_model
__ libnetwork.dylib: _tcp_connection_start
__ libnetwork.dylib: _tcp_connection_write
__ libnetwork.dylib: _tcp_listener_cancel
__ libnetwork.dylib: _tcp_listener_create
__ libnetwork.dylib: _tcp_listener_enable_coprocessor_interface
__ libnetwork.dylib: _tcp_listener_get_port
__ libnetwork.dylib: _tcp_listener_release
__ libnetwork.dylib: _tcp_listener_retain
__ libnetwork.dylib: _tcp_listener_set_accept_handler
__ libnetwork.dylib: _tcp_listener_set_accept_handler_f
__ libnetwork.dylib: _tcp_listener_set_error_handler
__ libnetwork.dylib: _tcp_listener_set_error_handler_f
__ libnetwork.dylib: _tcp_listener_set_interface
__ libnetwork.dylib: _tcp_listener_set_port
__ libnetwork.dylib: _tcp_listener_set_service
__ libnetwork.dylib: _tcp_listener_start
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getName
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _sel_getName
__ libobjc.A.dylib: _sel_isEqual
__ libobjc.A.dylib: _sel_registerName
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_busy_timeout
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_db_config
__ libsqlite3.dylib: _sqlite3_errcode
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_file_control
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_free
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_mprintf
__ libsqlite3.dylib: _sqlite3_open
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_step
__ libz.1.dylib: _crc32
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
__ libz.1.dylib: _inflateInit_
__NSCFTaskForClass : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[__NSCFTaskForClass dealloc]


__NSCFURLProtocolClient_NS : NSObject /usr/lib/libsqlite3.dylib <NSURLProtocolClient>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFURLProtocolClient_NS URLProtocol:didReceiveResponse:cacheStoragePolicy:]
  -[__NSCFURLProtocolClient_NS URLProtocol:didReceiveAuthenticationChallenge:]
  -[__NSCFURLProtocolClient_NS URLProtocol:wasRedirectedToRequest:redirectResponse:]
  -[__NSCFURLProtocolClient_NS URLProtocol:didCancelAuthenticationChallenge:]
  -[__NSCFURLProtocolClient_NS URLProtocol:cachedResponseIsValid:]
  -[__NSCFURLProtocolClient_NS URLProtocol:didFailWithError:]
  -[__NSCFURLProtocolClient_NS URLProtocol:didLoadData:]
  -[__NSCFURLProtocolClient_NS URLProtocolDidFinishLoading:]
  -[__NSCFURLProtocolClient_NS dealloc]


__NSURLSessionLocal : NSURLSession <NSURLSessionDataDelegate, NSURLSessionDataDelegatePrivate, NSURLSessionTaskDelegatePrivate, NSURLSessionDelegate_Internal, NSURLSessionDataDelegate_Internal, NSURLSessionSubclass, __NSURLSessionTaskGroupForConfiguration>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURLSessionConfiguration *_groupConfiguration
 @property  NSURLSession *_groupSession

  // instance methods
  -[__NSURLSessionLocal AVAggregateAssetDownloadTaskForURLAsset:mediaSelections:assetTitle:assetArtworkData:options:]
  -[__NSURLSessionLocal _useTLSSessionCacheFromSession:]
  -[__NSURLSessionLocal _onqueue_flushWithCompletionHandler:]
  -[__NSURLSessionLocal _uploadTaskWithTaskForClass:]
  -[__NSURLSessionLocal webSocketTaskForURL:protocols:]
  -[__NSURLSessionLocal copyWithZone:]
  -[__NSURLSessionLocal URLSession:task:didFinishCollectingMetrics:]
  -[__NSURLSessionLocal _URLSession:dataTask:didReceiveData:completionHandler:]
  -[__NSURLSessionLocal AVAssetDownloadTaskForURLAsset:destinationURL:options:]
  -[__NSURLSessionLocal .cxx_construct]
  -[__NSURLSessionLocal dealloc]
  -[__NSURLSessionLocal URLSession:didBecomeInvalidWithError:]
  -[__NSURLSessionLocal URLSession:task:_conditionalRequirementsChanged:]
  -[__NSURLSessionLocal _URLSession:task:getAuthHeadersForResponse:completionHandler:]
  -[__NSURLSessionLocal .cxx_destruct]
  -[__NSURLSessionLocal URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:]
  -[__NSURLSessionLocal URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:]
  -[__NSURLSessionLocal URLSession:task:didReceiveChallenge:completionHandler:]
  -[__NSURLSessionLocal URLSession:task:needNewBodyStream:]
  -[__NSURLSessionLocal AVAssetDownloadTaskForURLAsset:assetTitle:assetArtworkData:options:]
  -[__NSURLSessionLocal _downloadTaskWithTaskForClass:]
  -[__NSURLSessionLocal URLSession:task:didCompleteWithError:]
  -[__NSURLSessionLocal _URLSession:companionAvailabilityChanged:]
  -[__NSURLSessionLocal URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[__NSURLSessionLocal URLSession:task:_isWaitingForConnectionWithReason:]
  -[__NSURLSessionLocal _AVAssetDownloadTaskForURL:destinationURL:options:]
  -[__NSURLSessionLocal _onqueue_completeInvalidation:]
  -[__NSURLSessionLocal URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[__NSURLSessionLocal webSocketTaskForRequest:]
  -[__NSURLSessionLocal _onqueue_resetStorageWithCompletionHandler:]
  -[__NSURLSessionLocal _dataTaskWithTaskForClass:]
  -[__NSURLSessionLocal _onqueue_getTasksWithCompletionHandler:]
  -[__NSURLSessionLocal nextSeed]
  -[__NSURLSessionLocal initWithConfiguration:delegate:delegateQueue:delegateDispatchQueue:]


NSURLResponseInternal : NSObject /usr/lib/libsqlite3.dylib
 @property  ^{URLResponse=^^?^{__CFURL}^{__CFString}^{__CFString}qdd^{__CFDictionary}^{__CFDictionary}i^{__CFData}^{HTTPResponse}CC} _inner

  // instance methods
  -[NSURLResponseInternal init]
  -[NSURLResponseInternal .cxx_construct]
  -[NSURLResponseInternal dealloc]
  -[NSURLResponseInternal .cxx_destruct]
  -[NSURLResponseInternal _inner]


NSURLResponse : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding, NSCopying>
 @property  ^{URLResponse=^^?^{__CFURL}^{__CFString}^{__CFString}qdd^{__CFDictionary}^{__CFDictionary}i^{__CFData}^{HTTPResponse}CC} _cf_resp_data
 @property  long long statusCode
 @property  NSDictionary *allHeaderFields
 @property  NSURL *URL
 @property  NSString *MIMEType
 @property  long long expectedContentLength
 @property  NSString *textEncodingName
 @property  NSString *suggestedFilename

  // class methods
  +[NSURLResponse supportsSecureCoding]
  +[NSURLResponse _responseWithCFURLResponse:]
  +[NSURLResponse instancesRespondToSelector:]

  // instance methods
  -[NSURLResponse copyWithZone:]
  -[NSURLResponse initWithURL:MIMEType:expectedContentLength:textEncodingName:]
  -[NSURLResponse _cf_resp_data]
  -[NSURLResponse _setMIMEType:]
  -[NSURLResponse init]
  -[NSURLResponse _CFURLResponse]
  -[NSURLResponse _mustRevalidate]
  -[NSURLResponse _setExpectedContentLength:]
  -[NSURLResponse _peerCertificateChain]
  -[NSURLResponse _initWithInternal:]
  -[NSURLResponse _freshnessLifetime]
  -[NSURLResponse _calculatedExpiration]
  -[NSURLResponse set_cf_resp_data:]
  -[NSURLResponse _initWithCFURLResponse:]
  -[NSURLResponse _lastModifiedDate]
  -[NSURLResponse dealloc]
  -[NSURLResponse respondsToSelector:]
  -[NSURLResponse textEncodingName]
  -[NSURLResponse statusCode]
  -[NSURLResponse encodeWithCoder:]
  -[NSURLResponse MIMEType]
  -[NSURLResponse expectedContentLength]
  -[NSURLResponse URL]
  -[NSURLResponse allHeaderFields]
  -[NSURLResponse _inner]
  -[NSURLResponse initWithCoder:]
  -[NSURLResponse suggestedFilename]


NSHTTPURLResponseInternal : NSObject /usr/lib/libsqlite3.dylib <NSCoding>
  // instance methods
  -[NSHTTPURLResponseInternal dealloc]
  -[NSHTTPURLResponseInternal encodeWithCoder:]
  -[NSHTTPURLResponseInternal initWithCoder:]


NSHTTPURLResponse : NSURLResponse
 @property  long long statusCode
 @property  NSDictionary *allHeaderFields

  // class methods
  +[NSHTTPURLResponse supportsSecureCoding]
  +[NSHTTPURLResponse localizedStringForStatusCode:]
  +[NSHTTPURLResponse isErrorStatusCode:]

  // instance methods
  -[NSHTTPURLResponse initWithURL:statusCode:headerFields:requestTime:]
  -[NSHTTPURLResponse initWithURL:statusCode:HTTPVersion:headerFields:]
  -[NSHTTPURLResponse _peerCertificateChain]
  -[NSHTTPURLResponse _allHTTPHeaderFieldsAsArrays]
  -[NSHTTPURLResponse _initWithCFURLResponse:]
  -[NSHTTPURLResponse dealloc]
  -[NSHTTPURLResponse statusCode]
  -[NSHTTPURLResponse encodeWithCoder:]
  -[NSHTTPURLResponse valueForHTTPHeaderField:]
  -[NSHTTPURLResponse allHeaderFields]
  -[NSHTTPURLResponse initWithCoder:]


ABRequestHandler : NSObject /usr/lib/libsqlite3.dylib <AuthBrokerQuery>
  // instance methods
  -[ABRequestHandler init]
  -[ABRequestHandler fetchProxyCredential:reply:]


AuthBrokerAgentXPCListenerDelegate : NSObject /usr/lib/libsqlite3.dylib <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AuthBrokerAgentXPCListenerDelegate init]
  -[AuthBrokerAgentXPCListenerDelegate dealloc]
  -[AuthBrokerAgentXPCListenerDelegate listener:shouldAcceptNewConnection:]


__NSCFLocalDataTask : __NSCFLocalSessionTask
  // instance methods
  -[__NSCFLocalDataTask _onqueue_didReceiveResponse:completion:]
  -[__NSCFLocalDataTask isKindOfClass:]


__NSCFLocalUploadTask : __NSCFLocalDataTask
  // instance methods
  -[__NSCFLocalUploadTask isKindOfClass:]


__NSCFLocalSessionTask : NSURLSessionTask <NSURLSessionTaskSubclass, NSURLSessionDataTaskSubclass, NSURLSessionUploadTaskSubclass, __NSCFURLSessionConnectionDelegate>
 @property  __NSCFURLSessionConnection *cfConn
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFLocalSessionTask _onqueue_didReceiveResponse:redirectRequest:withCompletion:]
  -[__NSCFLocalSessionTask error:code:]
  -[__NSCFLocalSessionTask _private_onqueue_didReceiveResponseDisposition:completion:]
  -[__NSCFLocalSessionTask _onqueue_didReceiveChallenge:request:withCompletion:]
  -[__NSCFLocalSessionTask _needSendingMetrics]
  -[__NSCFLocalSessionTask startResourceTimer]
  -[__NSCFLocalSessionTask _onqueue_expectedProgressTargetChanged]
  -[__NSCFLocalSessionTask connection:willCacheResponse:responseCallback:]
  -[__NSCFLocalSessionTask setCfConn:]
  -[__NSCFLocalSessionTask _task_onqueue_didReceiveDispatchData:completionHandler:]
  -[__NSCFLocalSessionTask cfConn]
  -[__NSCFLocalSessionTask _onqueue_adjustLoadingPoolPriority]
  -[__NSCFLocalSessionTask _setConnectionCacheKey:]
  -[__NSCFLocalSessionTask _onqueue_cancel]
  -[__NSCFLocalSessionTask _onqueue_resume]
  -[__NSCFLocalSessionTask _onqueue_cancel_with_error:]
  -[__NSCFLocalSessionTask _askForConnectedSocketLater]
  -[__NSCFLocalSessionTask _onqueue_connectionWaitingWithReason:]
  -[__NSCFLocalSessionTask connection:didFinishLoadingWithError:]
  -[__NSCFLocalSessionTask set_TLSMinimumSupportedProtocolVersion:]
  -[__NSCFLocalSessionTask connection:sentBodyBytes:totalBytes:expectedBytes:]
  -[__NSCFLocalSessionTask set_timeoutIntervalForResource:]
  -[__NSCFLocalSessionTask _onqueue_needNewBodyStream:withCompletion:]
  -[__NSCFLocalSessionTask _onqueue_completeInitialization]
  -[__NSCFLocalSessionTask _onqueue_didReceiveDispatchData:completion:]
  -[__NSCFLocalSessionTask _onqueue_didFinishCollectingMetrics:completion:]
  -[__NSCFLocalSessionTask _onqueue_conditionalRequirementsChanged:]
  -[__NSCFLocalSessionTask set_TLSMaximumSupportedProtocolVersion:]
  -[__NSCFLocalSessionTask _didSendMetrics]
  -[__NSCFLocalSessionTask initWithBackgroundTaskInfo:taskGroup:]
  -[__NSCFLocalSessionTask _onqueue_setupNextEffectiveConfigurationWithCompletionHandler:]
  -[__NSCFLocalSessionTask _onqueue_willCacheResponse:withCompletion:]
  -[__NSCFLocalSessionTask _onqueue_didSendBodyBytes:totalBytesSent:totalBytesExpectedToSend:]
  -[__NSCFLocalSessionTask _onqueue_adjustBytesPerSecondLimit:]
  -[__NSCFLocalSessionTask _onqueue_needConnectedSocketToHost:port:withCompletion:]
  -[__NSCFLocalSessionTask connection:didFinishCollectingMetrics:completion:]
  -[__NSCFLocalSessionTask resourceTimeoutError]
  -[__NSCFLocalSessionTask cancel_with_error:]
  -[__NSCFLocalSessionTask _onqueue_strippedMutableRequest]
  -[__NSCFLocalSessionTask _onqueue_didReceiveResponse:completion:]
  -[__NSCFLocalSessionTask _onqueue_willSendRequestForEstablishedConnection:withCompletion:]
  -[__NSCFLocalSessionTask connection:request:needsNewBodyStreamCallback:]
  -[__NSCFLocalSessionTask initWithOriginalRequest:ident:taskGroup:]
  -[__NSCFLocalSessionTask connectionWillFinishLoading:]
  -[__NSCFLocalSessionTask connection:wasRedirected:newRequest:responseCallback:]
  -[__NSCFLocalSessionTask _onqueue_adjustPriorityHint:incremental:]
  -[__NSCFLocalSessionTask .cxx_construct]
  -[__NSCFLocalSessionTask dealloc]
  -[__NSCFLocalSessionTask _onqueue_adjustPoolPriority]
  -[__NSCFLocalSessionTask _onqueue_suspend]
  -[__NSCFLocalSessionTask .cxx_destruct]
  -[__NSCFLocalSessionTask _onqueue_didFinishWithError:]
  -[__NSCFLocalSessionTask connection:waitingWithReason:]
  -[__NSCFLocalSessionTask connection:challenged:authCallback:]
  -[__NSCFLocalSessionTask connection:_willSendRequestForEstablishedConnection:completion:]
  -[__NSCFLocalSessionTask connection:didReceiveTCPConnection:extraBytes:]
  -[__NSCFLocalSessionTask _onSessionQueue_disavow]
  -[__NSCFLocalSessionTask connection:didReceiveResponse:completion:]
  -[__NSCFLocalSessionTask connection:didReceiveData:completion:]
  -[__NSCFLocalSessionTask connection:didReceiveSocketInputStream:outputStream:]
  -[__NSCFLocalSessionTask connection:_conditionalRequirementsChanged:]
  -[__NSCFLocalSessionTask _task_onqueue_didFinish]
  -[__NSCFLocalSessionTask connection:needConnectedSocketToHost:port:completion:]


__NSCFLocalDownloadTask : __NSCFLocalSessionTask <NSURLSessionDownloadTaskSubclass, __NSCFLocalDownloadFileOpener>
 @property  __NSCFLocalDownloadFile *downloadFile
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[__NSCFLocalDownloadTask _expandResumeData:]

  // instance methods
  -[__NSCFLocalDownloadTask _task_onqueue_didReceiveDispatchData:completionHandler:]
  -[__NSCFLocalDownloadTask _onqueue_completeInitialization]
  -[__NSCFLocalDownloadTask _onqueue_willCacheResponse:withCompletion:]
  -[__NSCFLocalDownloadTask _onqueue_didReceiveResponse:completion:]
  -[__NSCFLocalDownloadTask downloadFile]
  -[__NSCFLocalDownloadTask setDownloadFile:]
  -[__NSCFLocalDownloadTask dealloc]
  -[__NSCFLocalDownloadTask isKindOfClass:]
  -[__NSCFLocalDownloadTask createResumeInformation:]
  -[__NSCFLocalDownloadTask _copySocketStreamProperties]
  -[__NSCFLocalDownloadTask terminateExtractorWithError:completion:]
  -[__NSCFLocalDownloadTask _task_onqueue_didFinish]
  -[__NSCFLocalDownloadTask _onqueue_cancelByProducingResumeData:]
  -[__NSCFLocalDownloadTask openItemForPath:mode:]
  -[__NSCFLocalDownloadTask cancelByProducingResumeData:]


NSNetServicesInternal : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[NSNetServicesInternal dealloc]


NSHTTPCookieStorageToCookie2Storage : NSHTTPCookieStorage
  // instance methods
  -[NSHTTPCookieStorageToCookie2Storage _getCookiesForURL:mainDocumentURL:partition:policyProperties:completionHandler:]
  -[NSHTTPCookieStorageToCookie2Storage setCookie:]
  -[NSHTTPCookieStorageToCookie2Storage _getCookiesForURL:mainDocumentURL:partition:completionHandler:]
  -[NSHTTPCookieStorageToCookie2Storage _saveCookies]
  -[NSHTTPCookieStorageToCookie2Storage _getCookiesForPartition:completionHandler:]
  -[NSHTTPCookieStorageToCookie2Storage _setCookies:forURL:mainDocumentURL:policyProperties:]
  -[NSHTTPCookieStorageToCookie2Storage _saveCookies:]
  -[NSHTTPCookieStorageToCookie2Storage deleteCookie:]
  -[NSHTTPCookieStorageToCookie2Storage setCookies:forURL:mainDocumentURL:]
  -[NSHTTPCookieStorageToCookie2Storage init]
  -[NSHTTPCookieStorageToCookie2Storage getCookiesForTask:completionHandler:]
  -[NSHTTPCookieStorageToCookie2Storage _cookieStorage]
  -[NSHTTPCookieStorageToCookie2Storage cookiesForURL:]
  -[NSHTTPCookieStorageToCookie2Storage _cookiesForURL:mainDocumentURL:]
  -[NSHTTPCookieStorageToCookie2Storage _testingOfStoringOfCookie:]
  -[NSHTTPCookieStorageToCookie2Storage _setPrivateBrowsingEnabled:]
  -[NSHTTPCookieStorageToCookie2Storage storeCookies:forTask:]
  -[NSHTTPCookieStorageToCookie2Storage cookieAcceptPolicy]
  -[NSHTTPCookieStorageToCookie2Storage setCookieAcceptPolicy:]
  -[NSHTTPCookieStorageToCookie2Storage _initWithIdentifier:private:]
  -[NSHTTPCookieStorageToCookie2Storage removeCookiesSinceDate:]
  -[NSHTTPCookieStorageToCookie2Storage _initWithCFHTTPCookieStorage:]
  -[NSHTTPCookieStorageToCookie2Storage dealloc]
  -[NSHTTPCookieStorageToCookie2Storage .cxx_destruct]
  -[NSHTTPCookieStorageToCookie2Storage cookies]


NSURLAuthenticationChallengeInternal : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[NSURLAuthenticationChallengeInternal dealloc]


NSURLAuthenticationChallenge : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding>
 @property  NSURLProtectionSpace *protectionSpace
 @property  NSURLCredential *proposedCredential
 @property  long long previousFailureCount
 @property  NSURLResponse *failureResponse
 @property  NSError *error
 @property  <NSURLAuthenticationChallengeSender> *sender

  // class methods
  +[NSURLAuthenticationChallenge supportsSecureCoding]
  +[NSURLAuthenticationChallenge _authenticationChallengeForCFAuthChallenge:sender:]
  +[NSURLAuthenticationChallenge _createAuthenticationChallengeForCFAuthChallenge:sender:]

  // instance methods
  -[NSURLAuthenticationChallenge init]
  -[NSURLAuthenticationChallenge _initWithListOfProtectionSpaces:CurrentProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:]
  -[NSURLAuthenticationChallenge sender]
  -[NSURLAuthenticationChallenge setSender:]
  -[NSURLAuthenticationChallenge dealloc]
  -[NSURLAuthenticationChallenge protectionSpace]
  -[NSURLAuthenticationChallenge encodeWithCoder:]
  -[NSURLAuthenticationChallenge initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:]
  -[NSURLAuthenticationChallenge error]
  -[NSURLAuthenticationChallenge failureResponse]
  -[NSURLAuthenticationChallenge previousFailureCount]
  -[NSURLAuthenticationChallenge initWithAuthenticationChallenge:sender:]
  -[NSURLAuthenticationChallenge _createCFAuthChallenge]
  -[NSURLAuthenticationChallenge proposedCredential]
  -[NSURLAuthenticationChallenge initWithCoder:]


NSHTTPCookieStorageUtils : NSObject /usr/lib/libsqlite3.dylib

NSHTTPCookie2Key : NSObject /usr/lib/libsqlite3.dylib <NSCopying>
  // instance methods
  -[NSHTTPCookie2Key copyWithZone:]
  -[NSHTTPCookie2Key .cxx_destruct]
  -[NSHTTPCookie2Key isEqual:]


__CFN_TransactionMetrics : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding>
 @property  __CFN_ConnectionMetrics *_daemon_connectionMetrics

  // class methods
  +[__CFN_TransactionMetrics supportsSecureCoding]

  // instance methods
  -[__CFN_TransactionMetrics set_daemon_connectionMetrics:]
  -[__CFN_TransactionMetrics .cxx_destruct]
  -[__CFN_TransactionMetrics encodeWithCoder:]
  -[__CFN_TransactionMetrics _daemon_connectionMetrics]
  -[__CFN_TransactionMetrics initWithCoder:]


NSURLSessionDownloadTask : NSURLSessionTask
  // class methods
  +[NSURLSessionDownloadTask new]

  // instance methods
  -[NSURLSessionDownloadTask init]
  -[NSURLSessionDownloadTask cancelByProducingResumeData:]


NSURLCredential : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding, NSCopying>
 @property  unsigned long persistence

  // class methods
  +[NSURLCredential credentialWithIdentity:certificates:persistence:]
  +[NSURLCredential supportsSecureCoding]
  +[NSURLCredential credentialWithUser:password:persistence:]
  +[NSURLCredential credentialForTrust:]

  // instance methods
  -[NSURLCredential persistence]
  -[NSURLCredential user]
  -[NSURLCredential copyWithZone:]
  -[NSURLCredential password]
  -[NSURLCredential identity]
  -[NSURLCredential dealloc]
  -[NSURLCredential _cfurlcredential]
  -[NSURLCredential initWithUser:password:persistence:]
  -[NSURLCredential hasPassword]
  -[NSURLCredential certificates]
  -[NSURLCredential encodeWithCoder:]
  -[NSURLCredential _hasSWCACreatorAttribute]
  -[NSURLCredential _initWithCFURLCredential:]
  -[NSURLCredential initWithTrust:]
  -[NSURLCredential _removeSWCACreatorAttribute]
  -[NSURLCredential isEqual:]
  -[NSURLCredential initWithIdentity:certificates:persistence:]
  -[NSURLCredential _CFURLCredential]
  -[NSURLCredential initWithCoder:]


_NSCFTranslatedFileURLProtocol : NSURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol pimpl]
  +[_NSCFTranslatedFileURLProtocol canonicalRequestForRequest:]
  +[_NSCFTranslatedFileURLProtocol canInitWithRequest:]
  +[_NSCFTranslatedFileURLProtocol requestIsCacheEquivalent:toRequest:]

  // instance methods
  -[_NSCFTranslatedFileURLProtocol initWithRequest:cachedResponse:client:]
  -[_NSCFTranslatedFileURLProtocol dealloc]
  -[_NSCFTranslatedFileURLProtocol stopLoading]
  -[_NSCFTranslatedFileURLProtocol startLoading]


_NSCFTranslatedFileURLProtocol_PIMPL_0 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_0 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_1 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_1 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_2 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_2 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_3 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_3 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_4 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_4 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_5 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_5 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_6 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_6 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_7 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_7 pimpl]


_NSCFWikipediaProtocol : NSURLProtocol
  // class methods
  +[_NSCFWikipediaProtocol canonicalRequestForRequest:]
  +[_NSCFWikipediaProtocol canInitWithRequest:]
  +[_NSCFWikipediaProtocol requestIsCacheEquivalent:toRequest:]

  // instance methods
  -[_NSCFWikipediaProtocol initWithRequest:cachedResponse:client:]
  -[_NSCFWikipediaProtocol dealloc]
  -[_NSCFWikipediaProtocol stopLoading]
  -[_NSCFWikipediaProtocol startLoading]


__CFN_SessionMetrics : NSObject /usr/lib/libsqlite3.dylib <_NSURLSessionEventDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__CFN_SessionMetrics transactionCacheLookupBegin:absoluteTime:]
  -[__CFN_SessionMetrics sessionDelegateBegin:selector:absoluteTime:]
  -[__CFN_SessionMetrics sessionCreate:pointer:absoluteTime:]
  -[__CFN_SessionMetrics taskSuspend:absoluteTime:]
  -[__CFN_SessionMetrics connectionEstablish:properties:absoluteTime:]
  -[__CFN_SessionMetrics .cxx_destruct]
  -[__CFN_SessionMetrics connectionBegin:fromTransaction:properties:absoluteTime:]
  -[__CFN_SessionMetrics taskDelegateEvent:selector:absoluteTime:]
  -[__CFN_SessionMetrics transactionCacheLookupEnd:cachedResponse:absoluteTime:]
  -[__CFN_SessionMetrics sessionDelegateEnd:selector:absoluteTime:]
  -[__CFN_SessionMetrics taskCreate:pointer:withRequest:fromSession:absoluteTime:]
  -[__CFN_SessionMetrics connectionWait:absoluteTime:]
  -[__CFN_SessionMetrics sessionDelegateEvent:selector:absoluteTime:]
  -[__CFN_SessionMetrics transactionResponseBody:data:absoluteTime:]
  -[__CFN_SessionMetrics sessionDestroy:absoluteTime:]
  -[__CFN_SessionMetrics taskCompletionHandlerEvent:absoluteTime:]
  -[__CFN_SessionMetrics transactionRequestBegin:onConnection:absoluteTime:]
  -[__CFN_SessionMetrics transactionResponseBegin:absoluteTime:]
  -[__CFN_SessionMetrics transactionResponseHeaderEnd:response:size:absoluteTime:]
  -[__CFN_SessionMetrics transactionResponseEnd:size:transferSize:absoluteTime:]
  -[__CFN_SessionMetrics taskComplete:withError:absoluteTime:]
  -[__CFN_SessionMetrics taskDelegateEnd:selector:absoluteTime:]
  -[__CFN_SessionMetrics transactionRequestEnd:size:transferSize:absoluteTime:]
  -[__CFN_SessionMetrics transactionCreate:withRequest:fromTask:absoluteTime:]
  -[__CFN_SessionMetrics transactionEnd:reason:absoluteTime:]
  -[__CFN_SessionMetrics connectionEnd:absoluteTime:]
  -[__CFN_SessionMetrics transactionRequestBody:data:absoluteTime:]
  -[__CFN_SessionMetrics taskResume:absoluteTime:]
  -[__CFN_SessionMetrics taskDelegateBegin:selector:absoluteTime:]
  -[__CFN_SessionMetrics transactionRequestHeaderEnd:request:size:absoluteTime:]


NSURLProtectionSpace : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding, NSCopying>
 @property  NSString *realm
 @property  BOOL receivesCredentialSecurely
 @property  BOOL isProxy
 @property  NSString *host
 @property  long long port
 @property  NSString *proxyType
 @property  NSString *protocol
 @property  NSString *authenticationMethod

  // class methods
  +[NSURLProtectionSpace supportsSecureCoding]

  // instance methods
  -[NSURLProtectionSpace protocol]
  -[NSURLProtectionSpace host]
  -[NSURLProtectionSpace copyWithZone:]
  -[NSURLProtectionSpace initWithProxyHost:port:type:realm:authenticationMethod:]
  -[NSURLProtectionSpace proxyType]
  -[NSURLProtectionSpace initWithHost:port:protocol:realm:authenticationMethod:]
  -[NSURLProtectionSpace serverTrust]
  -[NSURLProtectionSpace init]
  -[NSURLProtectionSpace isProxy]
  -[NSURLProtectionSpace _cfurlprtotectionspace]
  -[NSURLProtectionSpace distinguishedNames]
  -[NSURLProtectionSpace _CFURLProtectionSpace]
  -[NSURLProtectionSpace receivesCredentialSecurely]
  -[NSURLProtectionSpace _initWithCFURLProtectionSpace:]
  -[NSURLProtectionSpace dealloc]
  -[NSURLProtectionSpace authenticationMethod]
  -[NSURLProtectionSpace port]
  -[NSURLProtectionSpace encodeWithCoder:]
  -[NSURLProtectionSpace isEqual:]
  -[NSURLProtectionSpace realm]
  -[NSURLProtectionSpace initWithCoder:]


AVAssetDownloadTask : NSURLSessionTask

NSURLSessionAVAssetDownloadTask : NSURLSessionTask
 @property  unsigned long AVAssetDownloadToken
 @property  NSURL *URL
 @property  NSURL *destinationURL

  // instance methods
  -[NSURLSessionAVAssetDownloadTask destinationURL]
  -[NSURLSessionAVAssetDownloadTask AVAssetDownloadToken]
  -[NSURLSessionAVAssetDownloadTask URL]


NSURLSessionAVAggregateAssetDownloadTask : NSURLSessionTask

__NSCFURLLocalStreamTaskWorkBlockOp : __NSCFURLLocalStreamTaskWork
  // instance methods
  -[__NSCFURLLocalStreamTaskWorkBlockOp dealloc]


__NSCFURLLocalStreamTaskWorkWrite : __NSCFURLLocalStreamTaskWork
  // instance methods
  -[__NSCFURLLocalStreamTaskWorkWrite dealloc]


__NSCFURLLocalStreamTaskWorkRead : __NSCFURLLocalStreamTaskWork
  // instance methods
  -[__NSCFURLLocalStreamTaskWorkRead dealloc]


__NSCFURLLocalStreamTaskWork : NSObject /usr/lib/libsqlite3.dylib
  // instance methods


_NSHTTPAlternativeServiceEntry : NSObject /usr/lib/libsqlite3.dylib <NSCopying>
 @property  NSString *host
 @property  NSString *alternateHost
 @property  long long port
 @property  long long alternatePort
 @property  NSString *partition
 @property  NSDate *expirationDate
 @property  long long serviceType

  // instance methods
  -[_NSHTTPAlternativeServiceEntry setPort:]
  -[_NSHTTPAlternativeServiceEntry host]
  -[_NSHTTPAlternativeServiceEntry setHost:]
  -[_NSHTTPAlternativeServiceEntry copyWithZone:]
  -[_NSHTTPAlternativeServiceEntry partition]
  -[_NSHTTPAlternativeServiceEntry alternatePort]
  -[_NSHTTPAlternativeServiceEntry setPartition:]
  -[_NSHTTPAlternativeServiceEntry alternateHost]
  -[_NSHTTPAlternativeServiceEntry init]
  -[_NSHTTPAlternativeServiceEntry setAlternatePort:]
  -[_NSHTTPAlternativeServiceEntry setAlternateHost:]
  -[_NSHTTPAlternativeServiceEntry setExpirationDate:]
  -[_NSHTTPAlternativeServiceEntry setServiceType:]
  -[_NSHTTPAlternativeServiceEntry .cxx_destruct]
  -[_NSHTTPAlternativeServiceEntry port]
  -[_NSHTTPAlternativeServiceEntry serviceType]
  -[_NSHTTPAlternativeServiceEntry isEqual:]
  -[_NSHTTPAlternativeServiceEntry expirationDate]


_NSHTTPAlternativeServicesFilter : NSObject /usr/lib/libsqlite3.dylib <NSCopying>
 @property  NSString *host
 @property  NSString *partition
 @property  long long port

  // class methods
  +[_NSHTTPAlternativeServicesFilter emptyFilter]

  // instance methods
  -[_NSHTTPAlternativeServicesFilter setPort:]
  -[_NSHTTPAlternativeServicesFilter host]
  -[_NSHTTPAlternativeServicesFilter setHost:]
  -[_NSHTTPAlternativeServicesFilter copyWithZone:]
  -[_NSHTTPAlternativeServicesFilter partition]
  -[_NSHTTPAlternativeServicesFilter setPartition:]
  -[_NSHTTPAlternativeServicesFilter .cxx_destruct]
  -[_NSHTTPAlternativeServicesFilter port]


_NSHTTPAlternativeServicesSpeculativeEntry : NSObject /usr/lib/libsqlite3.dylib

_NSHTTPAlternativeServicesStorage : NSObject /usr/lib/libsqlite3.dylib
 @property  NSURL *path

  // class methods
  +[_NSHTTPAlternativeServicesStorage sharedPersistentStore]

  // instance methods
  -[_NSHTTPAlternativeServicesStorage path]
  -[_NSHTTPAlternativeServicesStorage initPersistentStoreWithURL:]
  -[_NSHTTPAlternativeServicesStorage init]
  -[_NSHTTPAlternativeServicesStorage dealloc]
  -[_NSHTTPAlternativeServicesStorage .cxx_destruct]
  -[_NSHTTPAlternativeServicesStorage storeHTTPServiceEntry:]
  -[_NSHTTPAlternativeServicesStorage HTTPServiceEntriesWithFilter:]
  -[_NSHTTPAlternativeServicesStorage HTTPServiceEntriesWithRegistrableDomain:]
  -[_NSHTTPAlternativeServicesStorage entries]
  -[_NSHTTPAlternativeServicesStorage removeHTTPAlternativeServiceEntriesWithRegistrableDomain:]
  -[_NSHTTPAlternativeServicesStorage removeHTTPAlternativeServiceEntriesCreatedAfterDate:]
  -[_NSHTTPAlternativeServicesStorage initInMemoryStore]


NSHTTPCookie2 : NSObject /usr/lib/libsqlite3.dylib <NSCopying, NSMutableCopying>
 @property  NSString *name
 @property  NSString *value
 @property  NSString *domain
 @property  NSString *path
 @property  NSDate *creationDate
 @property  NSDate *expirationDate
 @property  BOOL sesion
 @property  BOOL secure
 @property  BOOL httpOnly
 @property  BOOL hostOnly
 @property  NSString *partition
 @property  long long source
 @property  long long sameSite

  // instance methods
  -[NSHTTPCookie2 secure]
  -[NSHTTPCookie2 sesion]
  -[NSHTTPCookie2 copyWithZone:]
  -[NSHTTPCookie2 hostOnly]
  -[NSHTTPCookie2 httpOnly]
  -[NSHTTPCookie2 sameSite]
  -[NSHTTPCookie2 partition]
  -[NSHTTPCookie2 path]
  -[NSHTTPCookie2 initWithName:value:domain:]
  -[NSHTTPCookie2 creationDate]
  -[NSHTTPCookie2 domain]
  -[NSHTTPCookie2 source]
  -[NSHTTPCookie2 .cxx_destruct]
  -[NSHTTPCookie2 name]
  -[NSHTTPCookie2 expirationDate]
  -[NSHTTPCookie2 value]
  -[NSHTTPCookie2 mutableCopyWithZone:]


NSMutableHTTPCookie2 : NSHTTPCookie2
 @property  NSString *name
 @property  NSString *value
 @property  NSString *domain
 @property  NSString *path
 @property  NSDate *expirationDate
 @property  BOOL secure
 @property  BOOL httpOnly
 @property  BOOL hostOnly
 @property  NSString *partition
 @property  long long source
 @property  long long sameSite

  // instance methods
  -[NSMutableHTTPCookie2 setSameSite:]
  -[NSMutableHTTPCookie2 setHttpOnly:]
  -[NSMutableHTTPCookie2 setHostOnly:]
  -[NSMutableHTTPCookie2 setPartition:]
  -[NSMutableHTTPCookie2 initWithName:value:domain:]
  -[NSMutableHTTPCookie2 setSource:]
  -[NSMutableHTTPCookie2 setSecure:]
  -[NSMutableHTTPCookie2 setExpirationDate:]
  -[NSMutableHTTPCookie2 setDomain:]
  -[NSMutableHTTPCookie2 setPath:]
  -[NSMutableHTTPCookie2 setValue:]
  -[NSMutableHTTPCookie2 isEqual:]
  -[NSMutableHTTPCookie2 setName:]


NSAboutURLProtocol : NSURLProtocol
  // class methods
  +[NSAboutURLProtocol canonicalRequestForRequest:]
  +[NSAboutURLProtocol canInitWithRequest:]

  // instance methods
  -[NSAboutURLProtocol stopLoading]
  -[NSAboutURLProtocol startLoading]


_NSCFServer : NSObject /usr/lib/libsqlite3.dylib
 @property  long long type
 @property  long long listenerPort
 @property  NSString *interface
 @property  NSDictionary *configuration
 @property  BOOL enableCoprocessorInterface

  // class methods
  +[_NSCFServer stopAll]
  +[_NSCFServer adressesForInterface:]
  +[_NSCFServer startSocksServerWithPort:]

  // instance methods
  -[_NSCFServer listenerPort]
  -[_NSCFServer init]
  -[_NSCFServer setEnableCoprocessorInterface:]
  -[_NSCFServer initWithType:port:interface:]
  -[_NSCFServer initWithType:port:]
  -[_NSCFServer setListenerPort:]
  -[_NSCFServer interface]
  -[_NSCFServer isCoprocessorInterfaceEnabled]
  -[_NSCFServer dealloc]
  -[_NSCFServer setType:]
  -[_NSCFServer initWithType:]
  -[_NSCFServer .cxx_destruct]
  -[_NSCFServer setInterface:]
  -[_NSCFServer stop]
  -[_NSCFServer type]
  -[_NSCFServer configuration]
  -[_NSCFServer setConfiguration:]
  -[_NSCFServer start]


_NSHSTSStorage : NSObject /usr/lib/libsqlite3.dylib
 @property  ^{_CFHSTSPolicy=} _policyRef
 @property  NSURL *path

  // class methods
  +[_NSHSTSStorage sharedPersistentStore]

  // instance methods
  -[_NSHSTSStorage _policyRef]
  -[_NSHSTSStorage path]
  -[_NSHSTSStorage initPersistentStoreWithURL:]
  -[_NSHSTSStorage resetHSTSHostsSinceDate:]
  -[_NSHSTSStorage nonPreloadedHosts]
  -[_NSHSTSStorage resetHSTSForHost:]
  -[_NSHSTSStorage shouldPromoteHostToHTTPS:]
  -[_NSHSTSStorage dealloc]
  -[_NSHSTSStorage initInMemoryStore]


NSURLProtocolInternal : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[NSURLProtocolInternal dealloc]


NSURLProtocol : NSObject /usr/lib/libsqlite3.dylib
 @property  <NSURLProtocolClient> *client
 @property  NSURLRequest *request
 @property  NSCachedURLResponse *cachedResponse

  // class methods
  +[NSURLProtocol _makeRequestCanonicalByMakingRequestURLCanonical:]
  +[NSURLProtocol _protocolClassForRequest:skipAppSSO:]
  +[NSURLProtocol canonicalRequestForRequest:task:]
  +[NSURLProtocol removePropertyForKey:inRequest:]
  +[NSURLProtocol canInitWithTask:]
  +[NSURLProtocol unregisterClass:]
  +[NSURLProtocol setProperty:forKey:inRequest:]
  +[NSURLProtocol registerClass:]
  +[NSURLProtocol propertyForKey:inRequest:]
  +[NSURLProtocol _protocolClassForRequest:]
  +[NSURLProtocol canonicalRequestForRequest:]
  +[NSURLProtocol canInitWithRequest:]
  +[NSURLProtocol requestIsCacheEquivalent:toRequest:]

  // instance methods
  -[NSURLProtocol client]
  -[NSURLProtocol init]
  -[NSURLProtocol initWithRequest:cachedResponse:client:]
  -[NSURLProtocol initWithTask:cachedResponse:client:]
  -[NSURLProtocol dealloc]
  -[NSURLProtocol stopLoading]
  -[NSURLProtocol startLoading]
  -[NSURLProtocol cachedResponse]
  -[NSURLProtocol request]


_NSCFURLProtocol : NSURLProtocol
  // class methods
  +[_NSCFURLProtocol canonicalRequestForRequest:task:]
  +[_NSCFURLProtocol canInitWithTask:]
  +[_NSCFURLProtocol _cf_internalImpl]
  +[_NSCFURLProtocol canonicalRequestForRequest:]
  +[_NSCFURLProtocol canInitWithRequest:]
  +[_NSCFURLProtocol requestIsCacheEquivalent:toRequest:]

  // instance methods
  -[_NSCFURLProtocol initWithRequest:cachedResponse:client:]
  -[_NSCFURLProtocol dealloc]
  -[_NSCFURLProtocol stopLoading]
  -[_NSCFURLProtocol startLoading]


__NSCFURLSessionConnection : NSObject /usr/lib/libsqlite3.dylib <NSCopying>
  // instance methods
  -[__NSCFURLSessionConnection copyWithZone:]
  -[__NSCFURLSessionConnection expectedProgressTargetChanged]
  -[__NSCFURLSessionConnection suspend]
  -[__NSCFURLSessionConnection setBytesPerSecondLimit:]
  -[__NSCFURLSessionConnection setPoolPriority:]
  -[__NSCFURLSessionConnection resume]
  -[__NSCFURLSessionConnection initWithTask:delegate:delegateQueue:]
  -[__NSCFURLSessionConnection dealloc]
  -[__NSCFURLSessionConnection setTLSMaximumSupportedProtocolVersion:]
  -[__NSCFURLSessionConnection setPriorityHint:incremental:]
  -[__NSCFURLSessionConnection setTLSMinimumSupportedProtocolVersion:]
  -[__NSCFURLSessionConnection cancel]
  -[__NSCFURLSessionConnection setIsDownload:]


__NSCFURLLocalSessionConnection : __NSCFURLSessionConnection <NSURLAuthenticationChallengeSender, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFURLLocalSessionConnection expectedProgressTargetChanged]
  -[__NSCFURLLocalSessionConnection suspend]
  -[__NSCFURLLocalSessionConnection setBytesPerSecondLimit:]
  -[__NSCFURLLocalSessionConnection _redirectRequest:redirectResponse:completion:]
  -[__NSCFURLLocalSessionConnection setPoolPriority:]
  -[__NSCFURLLocalSessionConnection resume]
  -[__NSCFURLLocalSessionConnection _willSendRequestForEstablishedConnection:completion:]
  -[__NSCFURLLocalSessionConnection initWithTask:delegate:delegateQueue:]
  -[__NSCFURLLocalSessionConnection useCredential:forAuthenticationChallenge:]
  -[__NSCFURLLocalSessionConnection dealloc]
  -[__NSCFURLLocalSessionConnection continueWithoutCredentialForAuthenticationChallenge:]
  -[__NSCFURLLocalSessionConnection _didReceiveChallenge:]
  -[__NSCFURLLocalSessionConnection _capturedSocketInputStream:outputStream:]
  -[__NSCFURLLocalSessionConnection _captureTransportConnection:extraBytes:]
  -[__NSCFURLLocalSessionConnection _conditionalRequirementsChanged:]
  -[__NSCFURLLocalSessionConnection _didReceiveData:]
  -[__NSCFURLLocalSessionConnection _ackBytes:]
  -[__NSCFURLLocalSessionConnection _didFinishWithError:]
  -[__NSCFURLLocalSessionConnection _needConnectedSocketToHost:port:completion:]
  -[__NSCFURLLocalSessionConnection setPriorityHint:incremental:]
  -[__NSCFURLLocalSessionConnection cancelAuthenticationChallenge:]
  -[__NSCFURLLocalSessionConnection cancel]
  -[__NSCFURLLocalSessionConnection setIsDownload:]
  -[__NSCFURLLocalSessionConnection _didSendBodyData:]
  -[__NSCFURLLocalSessionConnection _connectionIsWaitingWithReason:]
  -[__NSCFURLLocalSessionConnection _didReceiveResponse:sniff:rewrite:]
  -[__NSCFURLLocalSessionConnection _needNewBodyStream]
  -[__NSCFURLLocalSessionConnection withLoaderAsync:]


NSURLConnection : NSObject /usr/lib/libsqlite3.dylib <NSURLAuthenticationChallengeSender>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURLRequest *originalRequest
 @property  NSURLRequest *currentRequest

  // class methods
  +[NSURLConnection sendSynchronousRequest:returningResponse:error:]
  +[NSURLConnection sendAsynchronousRequest:queue:completionHandler:]
  +[NSURLConnection connectionWithRequest:delegate:]
  +[NSURLConnection resourceLoaderRunLoop]
  +[NSURLConnection _sweeperInterval]
  +[NSURLConnection _timingDataOptions]
  +[NSURLConnection _setMIMETypesWithNoSizeLimit:]
  +[NSURLConnection _collectTimingDataWithOptions:]
  +[NSURLConnection _collectsTimingData]
  +[NSURLConnection _setCollectsTimingData:]
  +[NSURLConnection _setLoaderThreadPriority:]
  +[NSURLConnection _setSweeperInterval:]
  +[NSURLConnection canHandleRequest:]

  // instance methods
  -[NSURLConnection scheduleInRunLoop:forMode:]
  -[NSURLConnection download]
  -[NSURLConnection _initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:]
  -[NSURLConnection _dlInternal]
  -[NSURLConnection _cfInternal]
  -[NSURLConnection initWithRequest:delegate:startImmediately:]
  -[NSURLConnection setDelegateQueue:]
  -[NSURLConnection defersCallbacks]
  -[NSURLConnection originalRequest]
  -[NSURLConnection _timingData]
  -[NSURLConnection useCredential:forAuthenticationChallenge:]
  -[NSURLConnection setDefersCallbacks:]
  -[NSURLConnection initWithRequest:delegate:]
  -[NSURLConnection dealloc]
  -[NSURLConnection continueWithoutCredentialForAuthenticationChallenge:]
  -[NSURLConnection currentRequest]
  -[NSURLConnection _suspendLoading]
  -[NSURLConnection cancelAuthenticationChallenge:]
  -[NSURLConnection cancel]
  -[NSURLConnection rejectProtectionSpaceAndContinueWithChallenge:]
  -[NSURLConnection unscheduleFromRunLoop:forMode:]
  -[NSURLConnection _resumeLoading]
  -[NSURLConnection performDefaultHandlingForAuthenticationChallenge:]
  -[NSURLConnection connectionProperties]
  -[NSURLConnection start]


__NSURLBackgroundSession : NSURLSession <NDBackgroundSessionClient, NSURLSessionSubclass>
 @property  NSString *appWakeUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSURLBackgroundSession AVAggregateAssetDownloadTaskForURLAsset:mediaSelections:assetTitle:assetArtworkData:options:]
  -[__NSURLBackgroundSession appWasLaunchedForBackgroundSession:]
  -[__NSURLBackgroundSession _useTLSSessionCacheFromSession:]
  -[__NSURLBackgroundSession appWakeUUID]
  -[__NSURLBackgroundSession backgroundTask:getAuthHeadersForResponse:reply:]
  -[__NSURLBackgroundSession _onqueue_flushWithCompletionHandler:]
  -[__NSURLBackgroundSession setAppWakeUUID:]
  -[__NSURLBackgroundSession _uploadTaskWithTaskForClass:]
  -[__NSURLBackgroundSession credStorage_credentialsForProtectionSpace:reply:]
  -[__NSURLBackgroundSession backgroundSessionDidStartAppWake:reply:]
  -[__NSURLBackgroundSession backgroundTask:hasConnectionWaitingWithReason:]
  -[__NSURLBackgroundSession credStorage_setDefaultCredential:forProtectionSpace:]
  -[__NSURLBackgroundSession webSocketTaskForURL:protocols:]
  -[__NSURLBackgroundSession backgroundTask:didReceiveResponse:transactionMetrics:]
  -[__NSURLBackgroundSession wentToBackground:]
  -[__NSURLBackgroundSession cameIntoForeground:]
  -[__NSURLBackgroundSession credStorage_allCredentialsWithReply:]
  -[__NSURLBackgroundSession backgroundTaskHasConnectionWaiting:]
  -[__NSURLBackgroundSession AVAssetDownloadTaskForURLAsset:destinationURL:options:]
  -[__NSURLBackgroundSession backgroundDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]
  -[__NSURLBackgroundSession .cxx_construct]
  -[__NSURLBackgroundSession dealloc]
  -[__NSURLBackgroundSession backgroundTask:_willSendRequestForEstablishedConnection:reply:]
  -[__NSURLBackgroundSession backgroundDownloadTask:didResumeAtOffset:expectedTotalBytes:]
  -[__NSURLBackgroundSession .cxx_destruct]
  -[__NSURLBackgroundSession backgroundAVAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelectionPropertyList:]
  -[__NSURLBackgroundSession credStorage_removeCredential:forProtectionSpace:]
  -[__NSURLBackgroundSession backgroundSessionDidFinishAppWake:reply:]
  -[__NSURLBackgroundSession backgroundTask:didReceiveResponse:transactionMetrics:reply:]
  -[__NSURLBackgroundSession AVAssetDownloadTaskForURLAsset:assetTitle:assetArtworkData:options:]
  -[__NSURLBackgroundSession _downloadTaskWithTaskForClass:]
  -[__NSURLBackgroundSession backgroundTask:hasConnectionWaitingWithError:]
  -[__NSURLBackgroundSession openFileAtPath:mode:withReply:]
  -[__NSURLBackgroundSession backgroundAVAssetDownloadTaskDidUpdateProgress:totalBytesWritten:totalBytesExpectedToWrite:]
  -[__NSURLBackgroundSession credStorage_getInitialCredentialDictionariesWithReply:]
  -[__NSURLBackgroundSession backgroundTask:willBeginDelayedRequest:reply:]
  -[__NSURLBackgroundSession _AVAssetDownloadTaskForURL:destinationURL:options:]
  -[__NSURLBackgroundSession backgroundAVAssetDownloadTask:willDownloadToURL:]
  -[__NSURLBackgroundSession _onqueue_completeInvalidation:]
  -[__NSURLBackgroundSession credStorage_defaultCredentialForProtectionSpace:reply:]
  -[__NSURLBackgroundSession backgroundDataTaskDidBecomeDownloadTask:]
  -[__NSURLBackgroundSession webSocketTaskForRequest:]
  -[__NSURLBackgroundSession backgroundTask:needNewBodyStream:withReply:]
  -[__NSURLBackgroundSession willRetryBackgroundDataTask:withError:transactionMetrics:]
  -[__NSURLBackgroundSession backgroundAVAssetDownloadTask:didResolveMediaSelectionProperyList:reply:]
  -[__NSURLBackgroundSession _onqueue_resetStorageWithCompletionHandler:]
  -[__NSURLBackgroundSession backgroundTask:didReceiveChallenge:reply:]
  -[__NSURLBackgroundSession _dataTaskWithTaskForClass:]
  -[__NSURLBackgroundSession backgroundTask:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:]
  -[__NSURLBackgroundSession credStorage_setCredential:forProtectionSpace:]
  -[__NSURLBackgroundSession backgroundTaskDidSuspend:]
  -[__NSURLBackgroundSession backgroundTask:willPerformHTTPRedirection:withNewRequest:reply:]
  -[__NSURLBackgroundSession _onqueue_getTasksWithCompletionHandler:]
  -[__NSURLBackgroundSession backgroundTaskDidResume:]
  -[__NSURLBackgroundSession backgroundTask:didCompleteWithError:taskMetrics:info:reply:]
  -[__NSURLBackgroundSession backgroundAVAssetDownloadTask:didFinishDownloadForMediaSelectionPropertyList:]
  -[__NSURLBackgroundSession backgroundDownloadTask:didFinishDownloadingToURL:reply:]
  -[__NSURLBackgroundSession initWithConfiguration:delegate:delegateQueue:delegateDispatchQueue:]
  -[__NSURLBackgroundSession backgroundAVAssetDownloadTask:didReceiveDownloadToken:]
  -[__NSURLBackgroundSession backgroundDataTask:didReceiveData:withReply:]


__NSURLAVBackgroundSession : __NSURLBackgroundSession
  // instance methods
  -[__NSURLAVBackgroundSession isKindOfClass:]


__NSCFTCPIO_BlockCallbacks_Referent : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[__NSCFTCPIO_BlockCallbacks_Referent init]
  -[__NSCFTCPIO_BlockCallbacks_Referent dealloc]


__NSCFTCPIOStreamTask : NSURLSessionTask
 @property  NSData *_initialDataPayload

  // instance methods
  -[__NSCFTCPIOStreamTask copyWithZone:]
  -[__NSCFTCPIOStreamTask _onqueue_processReadWork:]
  -[__NSCFTCPIOStreamTask _onqueue_needServerTrust:completionHandler:]
  -[__NSCFTCPIOStreamTask _onqueue_adjustLoadingPoolPriority]
  -[__NSCFTCPIOStreamTask _onqueue_setTransportConnection:]
  -[__NSCFTCPIOStreamTask _onqueue_processWriteWork:]
  -[__NSCFTCPIOStreamTask _onqueue_preConnectionConfiguration:parameters:completionHandler:]
  -[__NSCFTCPIOStreamTask _onqueue_cancel]
  -[__NSCFTCPIOStreamTask _onqueue_resume]
  -[__NSCFTCPIOStreamTask _onqueue_stopSecureConnection]
  -[__NSCFTCPIOStreamTask _initialDataPayload]
  -[__NSCFTCPIOStreamTask closeWrite]
  -[__NSCFTCPIOStreamTask captureStreams]
  -[__NSCFTCPIOStreamTask _onqueue_connectionEstablishedWithError:callbackReferent:]
  -[__NSCFTCPIOStreamTask _onqueue_startSecureConnection]
  -[__NSCFTCPIOStreamTask _onqueue_ioTick]
  -[__NSCFTCPIOStreamTask writeData:timeout:completionHandler:]
  -[__NSCFTCPIOStreamTask _onqueue_needClientCert:completionHandler:]
  -[__NSCFTCPIOStreamTask .cxx_construct]
  -[__NSCFTCPIOStreamTask dealloc]
  -[__NSCFTCPIOStreamTask _onqueue_tlsCompletion]
  -[__NSCFTCPIOStreamTask _onqueue_adjustPoolPriority]
  -[__NSCFTCPIOStreamTask startSecureConnection]
  -[__NSCFTCPIOStreamTask _onqueue_suspend]
  -[__NSCFTCPIOStreamTask _onqueue_dealWithSessionClientCertAuth:credential:completionHandler:]
  -[__NSCFTCPIOStreamTask shouldDoWorkConsideringTlsState]
  -[__NSCFTCPIOStreamTask .cxx_destruct]
  -[__NSCFTCPIOStreamTask _onqueue_errorOrCancelError]
  -[__NSCFTCPIOStreamTask _onqueue_dealWithSessionTrustAuth:credential:completionHandler:]
  -[__NSCFTCPIOStreamTask isKindOfClass:]
  -[__NSCFTCPIOStreamTask initWithHost:port:taskGroup:disavow:]
  -[__NSCFTCPIOStreamTask workQueue]
  -[__NSCFTCPIOStreamTask _onqueue_closeRead]
  -[__NSCFTCPIOStreamTask set_initialDataPayload:]
  -[__NSCFTCPIOStreamTask _onqueue_postConnectConfiguration:parameters:completionHandler:]
  -[__NSCFTCPIOStreamTask _onSessionQueue_disavow]
  -[__NSCFTCPIOStreamTask _onqueue_addBlockOp:description:]
  -[__NSCFTCPIOStreamTask _onqueue_captureStreams]
  -[__NSCFTCPIOStreamTask _onqueue_addBlockOp:description:shouldWaitForTls:]
  -[__NSCFTCPIOStreamTask _onqueue_usingProxy]
  -[__NSCFTCPIOStreamTask stopSecureConnection]
  -[__NSCFTCPIOStreamTask _onqueue_checkForCompletion]
  -[__NSCFTCPIOStreamTask readDataOfMinLength:maxLength:timeout:completionHandler:]
  -[__NSCFTCPIOStreamTask _onSessionQueue_cleanupAndBreakCycles]
  -[__NSCFTCPIOStreamTask initWithTask:connection:extraBytes:disavow:]
  -[__NSCFTCPIOStreamTask copyStreamProperty:completionHandler:]
  -[__NSCFTCPIOStreamTask _onqueue_tlsDisabled]
  -[__NSCFTCPIOStreamTask _task_onqueue_didFinish]
  -[__NSCFTCPIOStreamTask _onqueue_closeWrite]
  -[__NSCFTCPIOStreamTask closeRead]
  -[__NSCFTCPIOStreamTask _onqueue_timeoutOccured]
  -[__NSCFTCPIOStreamTask cancel]
  -[__NSCFTCPIOStreamTask _onqueue_sendSessionChallenge:completionHandler:]
  -[__NSCFTCPIOStreamTask _onqueue_cleanUpConnectionEstablishmentState]
  -[__NSCFTCPIOStreamTask _onqueue_callbackCompletedWork]


__NSCFURLLocalTCPIOStreamTaskFromDataTask : __NSCFTCPIOStreamTask <__NSCFURLSessionConnectionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask copyWithZone:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:willCacheResponse:responseCallback:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:didFinishLoadingWithError:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:sentBodyBytes:totalBytes:expectedBytes:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:didFinishCollectingMetrics:completion:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:request:needsNewBodyStreamCallback:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connectionWillFinishLoading:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:wasRedirected:newRequest:responseCallback:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:waitingWithReason:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:challenged:authCallback:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:_willSendRequestForEstablishedConnection:completion:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:didReceiveTCPConnection:extraBytes:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:didReceiveResponse:completion:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:didReceiveData:completion:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:didReceiveSocketInputStream:outputStream:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:_conditionalRequirementsChanged:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask initWithTask:connection:extraBytes:disavow:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:needConnectedSocketToHost:port:completion:]


__CFN_PathPolicyManager : NSObject /usr/lib/libsqlite3.dylib

__CFN_CoalescingDomainHolder : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[__CFN_CoalescingDomainHolder init]
  -[__CFN_CoalescingDomainHolder .cxx_construct]
  -[__CFN_CoalescingDomainHolder dealloc]
  -[__CFN_CoalescingDomainHolder .cxx_destruct]


_NSCFSocksProxy : NSObject /usr/lib/libsqlite3.dylib <NSProxyConnectionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_NSCFSocksProxy handleIncomingConnection:queue:configuration:]

  // instance methods
  -[_NSCFSocksProxy connected:]
  -[_NSCFSocksProxy outboundConnectionCompleteWithError:]
  -[_NSCFSocksProxy outboundConnectionReceivedData:handler:]
  -[_NSCFSocksProxy dealloc]
  -[_NSCFSocksProxy .cxx_destruct]
  -[_NSCFSocksProxy cleanup]


__NSCFBackgroundDataTask : __NSCFBackgroundSessionTask <NSStreamDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFBackgroundDataTask _onqueue_willSendRequestForEstablishedConnection:withCompletion:]
  -[__NSCFBackgroundDataTask initWithOriginalRequest:ident:taskGroup:]
  -[__NSCFBackgroundDataTask dealloc]
  -[__NSCFBackgroundDataTask _onqueue_didFinishWithError:]
  -[__NSCFBackgroundDataTask isKindOfClass:]
  -[__NSCFBackgroundDataTask stream:handleEvent:]


__NSCFBackgroundUploadTask : __NSCFBackgroundDataTask
  // instance methods
  -[__NSCFBackgroundUploadTask isKindOfClass:]


__NSCFBackgroundDownloadTask : __NSCFBackgroundSessionTask
  // instance methods
  -[__NSCFBackgroundDownloadTask _onqueue_didReceiveResponse:]
  -[__NSCFBackgroundDownloadTask _onqueue_didFinishWithError:]
  -[__NSCFBackgroundDownloadTask isKindOfClass:]
  -[__NSCFBackgroundDownloadTask cancelByProducingResumeData:]


__NSCFBackgroundSessionTask : NSURLSessionTask <NSURLSessionTaskSubclass>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFBackgroundSessionTask initWithTaskInfo:taskGroup:ident:]
  -[__NSCFBackgroundSessionTask _onqueue_adjustLoadingPoolPriority]
  -[__NSCFBackgroundSessionTask _onqueue_didReceiveResponse:]
  -[__NSCFBackgroundSessionTask _onqueue_cancel]
  -[__NSCFBackgroundSessionTask _onqueue_resume]
  -[__NSCFBackgroundSessionTask set_TLSMinimumSupportedProtocolVersion:]
  -[__NSCFBackgroundSessionTask set_TLSMaximumSupportedProtocolVersion:]
  -[__NSCFBackgroundSessionTask _onqueue_adjustBytesPerSecondLimit:]
  -[__NSCFBackgroundSessionTask setTaskDescription:]
  -[__NSCFBackgroundSessionTask _onqueue_willSendRequestForEstablishedConnection:withCompletion:]
  -[__NSCFBackgroundSessionTask initWithOriginalRequest:ident:taskGroup:]
  -[__NSCFBackgroundSessionTask _timingData]
  -[__NSCFBackgroundSessionTask initWithBackgroundTask:]
  -[__NSCFBackgroundSessionTask _onqueue_adjustPriorityHint:incremental:]
  -[__NSCFBackgroundSessionTask set_discretionaryOverride:]
  -[__NSCFBackgroundSessionTask dealloc]
  -[__NSCFBackgroundSessionTask _onqueue_adjustPoolPriority]
  -[__NSCFBackgroundSessionTask _onqueue_suspend]
  -[__NSCFBackgroundSessionTask _onqueue_didFinishWithError:]
  -[__NSCFBackgroundSessionTask _onSessionQueue_disavow]


__NSCFBackgroundAVAssetDownloadTask : __NSCFBackgroundSessionTask
 @property  unsigned long AVAssetDownloadToken
 @property  NSURL *URL
 @property  NSURL *destinationURL
 @property  AVURLAsset *URLAsset
 @property  NSDictionary *options
 @property  NSArray *loadedTimeRanges

  // instance methods
  -[__NSCFBackgroundAVAssetDownloadTask initWithTaskInfo:taskGroup:ident:]
  -[__NSCFBackgroundAVAssetDownloadTask URLAsset]
  -[__NSCFBackgroundAVAssetDownloadTask originalRequest]
  -[__NSCFBackgroundAVAssetDownloadTask setAVAssetDownloadToken:]
  -[__NSCFBackgroundAVAssetDownloadTask dealloc]
  -[__NSCFBackgroundAVAssetDownloadTask _onqueue_didReceiveProgressUpdateWithTotalBytesWritten:totalBytesExpectedToWrite:]
  -[__NSCFBackgroundAVAssetDownloadTask currentRequest]
  -[__NSCFBackgroundAVAssetDownloadTask destinationURL]
  -[__NSCFBackgroundAVAssetDownloadTask _onqueue_didFinishWithError:]
  -[__NSCFBackgroundAVAssetDownloadTask isKindOfClass:]
  -[__NSCFBackgroundAVAssetDownloadTask options]
  -[__NSCFBackgroundAVAssetDownloadTask AVAssetDownloadToken]
  -[__NSCFBackgroundAVAssetDownloadTask loadedTimeRanges]
  -[__NSCFBackgroundAVAssetDownloadTask setLoadedTimeRanges:]
  -[__NSCFBackgroundAVAssetDownloadTask setOptions:]
  -[__NSCFBackgroundAVAssetDownloadTask _onqueue_didFinishDownloadingToURL:]
  -[__NSCFBackgroundAVAssetDownloadTask setDestinationURL:]
  -[__NSCFBackgroundAVAssetDownloadTask _onqueue_didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelectionPropertyList:]
  -[__NSCFBackgroundAVAssetDownloadTask initWithTaskGroup:URLAsset:URL:destinationURL:temporaryDestinationURL:assetTitle:assetArtworkData:ident:]
  -[__NSCFBackgroundAVAssetDownloadTask setURLAsset:]
  -[__NSCFBackgroundAVAssetDownloadTask _onqueue_willDownloadToURL:]
  -[__NSCFBackgroundAVAssetDownloadTask URL]
  -[__NSCFBackgroundAVAssetDownloadTask setURL:]
  -[__NSCFBackgroundAVAssetDownloadTask _onqueue_didResolveMediaSelectionPropertyList:]
  -[__NSCFBackgroundAVAssetDownloadTask _isAVAssetTask]
  -[__NSCFBackgroundAVAssetDownloadTask _onqueue_didFinishDownloadforMediaSelectionPropertyList:]
  -[__NSCFBackgroundAVAssetDownloadTask response]


__NSCFBackgroundAVAggregateAssetDownloadTaskNoChildTask : __NSCFBackgroundAVAssetDownloadTask
  // instance methods
  -[__NSCFBackgroundAVAggregateAssetDownloadTaskNoChildTask originalRequest]
  -[__NSCFBackgroundAVAggregateAssetDownloadTaskNoChildTask currentRequest]
  -[__NSCFBackgroundAVAggregateAssetDownloadTaskNoChildTask isKindOfClass:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTaskNoChildTask _onqueue_didFinishDownloadingToURL:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTaskNoChildTask _onqueue_didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelectionPropertyList:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTaskNoChildTask _onqueue_willDownloadToURL:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTaskNoChildTask _onqueue_didResolveMediaSelectionPropertyList:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTaskNoChildTask _onqueue_didFinishDownloadforMediaSelectionPropertyList:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTaskNoChildTask response]


__NSCFBackgroundAVAggregateAssetDownloadTask : __NSCFBackgroundSessionTask <AVAssetDownloadDelegate, AVAssetDownloadDelegatePrivate>
 @property  AVURLAsset *URLAsset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFBackgroundAVAggregateAssetDownloadTask initWithTaskInfo:taskGroup:ident:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask _onqueue_cancel]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask _onqueue_resume]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask URLAsset]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask URLSession:task:willBeginDelayedRequest:completionHandler:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask originalRequest]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask dealloc]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask _onqueue_suspend]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask currentRequest]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask isKindOfClass:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask URLSession:task:didCompleteWithError:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask setURLAsset:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask URLSession:assetDownloadTask:willDownloadToURL:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask _isAVAssetTask]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask response]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask URLSession:assetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:]


NSHTTPCookie2LookupFilter : NSObject /usr/lib/libsqlite3.dylib
 @property  NSString *name
 @property  NSString *value
 @property  NSString *domain
 @property  NSString *path
 @property  NSString *partition
 @property  long long sameSite
 @property  NSDate *newerThanCreationDate
 @property  NSDate *newerThanExpirationDate
 @property  NSDate *newerThanLastAccess
 @property  NSDate *olderThanCreationDate
 @property  NSDate *olderThanExpirationDate
 @property  NSDate *olderThanLastAccess
 @property  BOOL secure
 @property  BOOL httpOnly
 @property  BOOL ignoreHostOnlyFlag
 @property  BOOL ignoreHTTPOnlyCookie
 @property  BOOL ignoreSecureFlag
 @property  NSURL *inURL
 @property  NSURL *mainDocumentURL
 @property  NSURL *siteForCookies
 @property  BOOL isTopLevelNavigation
 @property  BOOL isSafe
 @property  unsigned long acceptPolicy

  // instance methods
  -[NSHTTPCookie2LookupFilter _flags]
  -[NSHTTPCookie2LookupFilter inURL]
  -[NSHTTPCookie2LookupFilter secure]
  -[NSHTTPCookie2LookupFilter isSafe]
  -[NSHTTPCookie2LookupFilter httpOnly]
  -[NSHTTPCookie2LookupFilter sameSite]
  -[NSHTTPCookie2LookupFilter partition]
  -[NSHTTPCookie2LookupFilter setInURL:]
  -[NSHTTPCookie2LookupFilter setIsSafe:]
  -[NSHTTPCookie2LookupFilter path]
  -[NSHTTPCookie2LookupFilter setSameSite:]
  -[NSHTTPCookie2LookupFilter setHttpOnly:]
  -[NSHTTPCookie2LookupFilter matchCookie:]
  -[NSHTTPCookie2LookupFilter acceptPolicy]
  -[NSHTTPCookie2LookupFilter setPartition:]
  -[NSHTTPCookie2LookupFilter mainDocumentURL]
  -[NSHTTPCookie2LookupFilter siteForCookies]
  -[NSHTTPCookie2LookupFilter initWithCookie:]
  -[NSHTTPCookie2LookupFilter setSiteForCookies:]
  -[NSHTTPCookie2LookupFilter setSecure:]
  -[NSHTTPCookie2LookupFilter setAcceptPolicy:]
  -[NSHTTPCookie2LookupFilter setMainDocumentURL:]
  -[NSHTTPCookie2LookupFilter setIsTopLevelNavigation:]
  -[NSHTTPCookie2LookupFilter newerThanCreationDate]
  -[NSHTTPCookie2LookupFilter ignoreSecureFlag]
  -[NSHTTPCookie2LookupFilter olderThanCreationDate]
  -[NSHTTPCookie2LookupFilter setIgnoreHostOnlyFlag:]
  -[NSHTTPCookie2LookupFilter setNewerThanExpirationDate:]
  -[NSHTTPCookie2LookupFilter setOlderThanExpirationDate:]
  -[NSHTTPCookie2LookupFilter ignoreHostOnlyFlag]
  -[NSHTTPCookie2LookupFilter newerThanLastAccess]
  -[NSHTTPCookie2LookupFilter olderThanLastAccess]
  -[NSHTTPCookie2LookupFilter setIgnoreHTTPOnlyCookie:]
  -[NSHTTPCookie2LookupFilter domain]
  -[NSHTTPCookie2LookupFilter newerThanExpirationDate]
  -[NSHTTPCookie2LookupFilter setNewerThanCreationDate:]
  -[NSHTTPCookie2LookupFilter setOlderThanCreationDate:]
  -[NSHTTPCookie2LookupFilter setNewerThanLastAccess:]
  -[NSHTTPCookie2LookupFilter olderThanExpirationDate]
  -[NSHTTPCookie2LookupFilter setOlderThanLastAccess:]
  -[NSHTTPCookie2LookupFilter .cxx_destruct]
  -[NSHTTPCookie2LookupFilter name]
  -[NSHTTPCookie2LookupFilter setDomain:]
  -[NSHTTPCookie2LookupFilter ignoreHTTPOnlyCookie]
  -[NSHTTPCookie2LookupFilter setIgnoreSecureFlag:]
  -[NSHTTPCookie2LookupFilter isTopLevelNavigation]
  -[NSHTTPCookie2LookupFilter setPath:]
  -[NSHTTPCookie2LookupFilter setValue:]
  -[NSHTTPCookie2LookupFilter value]
  -[NSHTTPCookie2LookupFilter setName:]


NSHTTPCookie2StorageFilter : NSObject /usr/lib/libsqlite3.dylib
 @property  NSURL *url
 @property  NSURL *mainDocumentURL
 @property  NSURL *siteForCookies
 @property  NSString *partition
 @property  BOOL isTopLevelNavigation
 @property  BOOL isSafe
 @property  BOOL overwriteHTTPOnlyCookies
 @property  unsigned long acceptPolicy

  // instance methods
  -[NSHTTPCookie2StorageFilter isSafe]
  -[NSHTTPCookie2StorageFilter partition]
  -[NSHTTPCookie2StorageFilter setIsSafe:]
  -[NSHTTPCookie2StorageFilter acceptPolicy]
  -[NSHTTPCookie2StorageFilter setPartition:]
  -[NSHTTPCookie2StorageFilter init]
  -[NSHTTPCookie2StorageFilter url]
  -[NSHTTPCookie2StorageFilter mainDocumentURL]
  -[NSHTTPCookie2StorageFilter siteForCookies]
  -[NSHTTPCookie2StorageFilter setSiteForCookies:]
  -[NSHTTPCookie2StorageFilter setAcceptPolicy:]
  -[NSHTTPCookie2StorageFilter setOverwriteHTTPOnlyCookies:]
  -[NSHTTPCookie2StorageFilter setMainDocumentURL:]
  -[NSHTTPCookie2StorageFilter setIsTopLevelNavigation:]
  -[NSHTTPCookie2StorageFilter overwriteHTTPOnlyCookies]
  -[NSHTTPCookie2StorageFilter .cxx_destruct]
  -[NSHTTPCookie2StorageFilter isTopLevelNavigation]
  -[NSHTTPCookie2StorageFilter isTrusted]
  -[NSHTTPCookie2StorageFilter setUrl:]


_NSHTTPConnectionInfo : NSObject /usr/lib/libsqlite3.dylib
 @property  BOOL isValid

  // instance methods
  -[_NSHTTPConnectionInfo sendPingWithReceiveHandler:]
  -[_NSHTTPConnectionInfo .cxx_destruct]
  -[_NSHTTPConnectionInfo isValid]


_NSCFNetworkMonitor : NSObject /usr/lib/libsqlite3.dylib <CoreTelephonyClientDataDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_NSCFNetworkMonitor init]
  -[_NSCFNetworkMonitor dealloc]
  -[_NSCFNetworkMonitor internetDataStatus:]


__NSHostExtraIvars : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[__NSHostExtraIvars init]
  -[__NSHostExtraIvars dealloc]


NSHost : NSObject /usr/lib/libsqlite3.dylib
 @property  NSString *name
 @property  NSArray *names
 @property  NSString *address
 @property  NSArray *addresses
 @property  NSString *localizedName

  // class methods
  +[NSHost currentHost]
  +[NSHost hostWithName:]
  +[NSHost flushHostCache]
  +[NSHost hostWithAddress:]
  +[NSHost isHostCacheEnabled]
  +[NSHost setHostCacheEnabled:]

  // instance methods
  -[NSHost addresses]
  -[NSHost isEqualToHost:]
  -[NSHost _thingToResolve]
  -[NSHost address]
  -[NSHost dealloc]
  -[NSHost names]
  -[NSHost name]
  -[NSHost localizedName]


NSURLSessionDataTask : NSURLSessionTask
  // class methods
  +[NSURLSessionDataTask new]

  // instance methods
  -[NSURLSessionDataTask init]


NSURLSessionUploadTask : NSURLSessionDataTask
  // class methods
  +[NSURLSessionUploadTask new]

  // instance methods
  -[NSURLSessionUploadTask init]


NSHTTPCookieInternal_Data : NSHTTPCookieInternal
  // instance methods
  -[NSHTTPCookieInternal_Data init]
  -[NSHTTPCookieInternal_Data dealloc]
  -[NSHTTPCookieInternal_Data _initWithCookie:partition:]
  -[NSHTTPCookieInternal_Data _initWithProperties:fromString:]
  -[NSHTTPCookieInternal_Data _inner]
  -[NSHTTPCookieInternal_Data _initWithHeader:]


NSHTTPCookieInternal_Ref : NSHTTPCookieInternal
  // instance methods
  -[NSHTTPCookieInternal_Ref init]
  -[NSHTTPCookieInternal_Ref dealloc]
  -[NSHTTPCookieInternal_Ref _initWithReference:index:]
  -[NSHTTPCookieInternal_Ref _inner]


NSHTTPCookieInternal : NSObject /usr/lib/libsqlite3.dylib
 @property  ^{HTTPCookie=^^?} _inner

  // instance methods
  -[NSHTTPCookieInternal init]
  -[NSHTTPCookieInternal isEqual:]


NSHTTPCookie : NSObject /usr/lib/libsqlite3.dylib <NSCoding>
 @property  ^{HTTPCookie=^^?} _inner
 @property  NSDictionary *properties
 @property  unsigned long version
 @property  NSString *name
 @property  NSString *value
 @property  NSDate *expiresDate
 @property  BOOL sessionOnly
 @property  NSString *domain
 @property  NSString *path
 @property  BOOL secure
 @property  BOOL HTTPOnly
 @property  NSString *comment
 @property  NSURL *commentURL
 @property  NSArray *portList
 @property  NSString *sameSitePolicy

  // class methods
  +[NSHTTPCookie _cookieForSetCookieString:forURL:partition:]
  +[NSHTTPCookie _parsedCookiesWithResponseHeaderFields:forURL:]
  +[NSHTTPCookie cookiesWithResponseHeaderFields:forURL:]
  +[NSHTTPCookie requestHeaderFieldsWithCookies:]
  +[NSHTTPCookie _cf2nsCookies:]
  +[NSHTTPCookie _ns2cfCookies:]
  +[NSHTTPCookie cookieWithProperties:]
  +[NSHTTPCookie cookieWithCFHTTPCookie:]

  // instance methods
  -[NSHTTPCookie _key]
  -[NSHTTPCookie Name]
  -[NSHTTPCookie Path]
  -[NSHTTPCookie Port]
  -[NSHTTPCookie Value]
  -[NSHTTPCookie Domain]
  -[NSHTTPCookie Secure]
  -[NSHTTPCookie MaxAge]
  -[NSHTTPCookie Expires]
  -[NSHTTPCookie Comment]
  -[NSHTTPCookie Version]
  -[NSHTTPCookie Discard]
  -[NSHTTPCookie portList]
  -[NSHTTPCookie OriginURL]
  -[NSHTTPCookie initWithProperties:]
  -[NSHTTPCookie isHTTPOnly]
  -[NSHTTPCookie path]
  -[NSHTTPCookie expiresDate]
  -[NSHTTPCookie commentURL]
  -[NSHTTPCookie CommentURL]
  -[NSHTTPCookie _isExpired]
  -[NSHTTPCookie isSecure]
  -[NSHTTPCookie comment]
  -[NSHTTPCookie init]
  -[NSHTTPCookie _CFHTTPCookie]
  -[NSHTTPCookie isSessionOnly]
  -[NSHTTPCookie sameSitePolicy]
  -[NSHTTPCookie _initWithInternal:]
  -[NSHTTPCookie SameSitePolicy]
  -[NSHTTPCookie initWithCFHTTPCookie:]
  -[NSHTTPCookie _storagePartition]
  -[NSHTTPCookie StoragePartition]
  -[NSHTTPCookie dealloc]
  -[NSHTTPCookie _GetInternalCFHTTPCookie]
  -[NSHTTPCookie domain]
  -[NSHTTPCookie _compareForHeaderOrder:]
  -[NSHTTPCookie name]
  -[NSHTTPCookie encodeWithCoder:]
  -[NSHTTPCookie _initWithReference:index:]
  -[NSHTTPCookie _initWithCookie:partition:]
  -[NSHTTPCookie _initWithProperties:fromString:]
  -[NSHTTPCookie isEqual:]
  -[NSHTTPCookie version]
  -[NSHTTPCookie value]
  -[NSHTTPCookie properties]
  -[NSHTTPCookie _inner]
  -[NSHTTPCookie initWithCoder:]
  -[NSHTTPCookie _initWithHeader:]


__CFN_SocksHandshakev5 : __CFN_SocksHandshake
  // instance methods
  -[__CFN_SocksHandshakev5 finish:]
  -[__CFN_SocksHandshakev5 parse:len:completion:]
  -[__CFN_SocksHandshakev5 .cxx_destruct]


__CFN_SocksHandshake : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[__CFN_SocksHandshake finish:]
  -[__CFN_SocksHandshake parse:len:completion:]
  -[__CFN_SocksHandshake .cxx_destruct]


__NSCFLocalDownloadFile : NSObject /usr/lib/libsqlite3.dylib
 @property  NSString *path

  // instance methods
  -[__NSCFLocalDownloadFile path]
  -[__NSCFLocalDownloadFile dealloc]
  -[__NSCFLocalDownloadFile setPath:]


__CFN_TaskMetrics : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding>
 @property  NSMutableArray *_daemon_transactionMetrics
 @property  __CFN_TransactionMetrics *_daemon_currentTransactionMetrics

  // class methods
  +[__CFN_TaskMetrics supportsSecureCoding]

  // instance methods
  -[__CFN_TaskMetrics set_daemon_transactionMetrics:]
  -[__CFN_TaskMetrics .cxx_destruct]
  -[__CFN_TaskMetrics encodeWithCoder:]
  -[__CFN_TaskMetrics set_daemon_currentTransactionMetrics:]
  -[__CFN_TaskMetrics _daemon_currentTransactionMetrics]
  -[__CFN_TaskMetrics initWithCoder:]
  -[__CFN_TaskMetrics _daemon_transactionMetrics]


PACURLSessionDelegate : NSObject /usr/lib/libsqlite3.dylib <NSURLSessionDelegate, NSURLSessionTaskDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PACURLSessionDelegate URLSession:didReceiveChallenge:completionHandler:]
  -[PACURLSessionDelegate dealloc]
  -[PACURLSessionDelegate URLSession:task:didReceiveChallenge:completionHandler:]


NSURLStorageURLCacheDB : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[NSURLStorageURLCacheDB dealloc]
  -[NSURLStorageURLCacheDB .cxx_destruct]


__NSURLSessionStatistics : NSObject /usr/lib/libsqlite3.dylib
 @property  PBCodable *awdReport
 @property  unsigned int awdMetricID
 @property  NSUUID *nwActivity
 @property  NSUUID *taskUUID
 @property  NSArray *connectionUUIDS
 @property  NSUUID *externallyVisibleNwActivity
 @property  NSArray *externallyVisibleConnectionUUIDs

  // class methods
  +[__NSURLSessionStatistics createCFNetworkTaskMetrics_s:]
  +[__NSURLSessionStatistics reportMetricsToSymptoms:]

  // instance methods
  -[__NSURLSessionStatistics taskUUID]
  -[__NSURLSessionStatistics nwActivity]
  -[__NSURLSessionStatistics setExternallyVisibleConnectionUUIDs:]
  -[__NSURLSessionStatistics externallyVisibleConnectionUUIDs]
  -[__NSURLSessionStatistics connectionUUIDS]
  -[__NSURLSessionStatistics initWithCFNetworkReport:length:]
  -[__NSURLSessionStatistics setExternallyVisibleNwActivity:]
  -[__NSURLSessionStatistics awdMetricID]
  -[__NSURLSessionStatistics externallyVisibleNwActivity]
  -[__NSURLSessionStatistics dealloc]
  -[__NSURLSessionStatistics .cxx_destruct]
  -[__NSURLSessionStatistics initWithPBCodableData:]
  -[__NSURLSessionStatistics awdReport]


NSHTTPURLRequestParameters : NSObject /usr/lib/libsqlite3.dylib <NSCoding>
  // instance methods
  -[NSHTTPURLRequestParameters init]
  -[NSHTTPURLRequestParameters dealloc]
  -[NSHTTPURLRequestParameters encodeWithCoder:]
  -[NSHTTPURLRequestParameters initWithCoder:]


NSPersistentHTTPCookie2Storage : NSObject /usr/lib/libsqlite3.dylib <NSInternalHTTPCookie2Storage>
 @property  NSURL *path
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NSPersistentHTTPCookie2Storage setCookie:]
  -[NSPersistentHTTPCookie2Storage path]
  -[NSPersistentHTTPCookie2Storage deleteCookie:]
  -[NSPersistentHTTPCookie2Storage beginTransaction]
  -[NSPersistentHTTPCookie2Storage init]
  -[NSPersistentHTTPCookie2Storage getAllCookies]
  -[NSPersistentHTTPCookie2Storage deleteCookies:]
  -[NSPersistentHTTPCookie2Storage getCookiesWithFilter:]
  -[NSPersistentHTTPCookie2Storage deleteAllCookies]
  -[NSPersistentHTTPCookie2Storage deleteCookiesWithFilter:]
  -[NSPersistentHTTPCookie2Storage .cxx_destruct]
  -[NSPersistentHTTPCookie2Storage initWithPath:]
  -[NSPersistentHTTPCookie2Storage setCookies:]
  -[NSPersistentHTTPCookie2Storage setPath:]
  -[NSPersistentHTTPCookie2Storage commitTransaction]


NSProxyConnection : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[NSProxyConnection read:handler:]
  -[NSProxyConnection initWithHost:port:queue:configuration:]
  -[NSProxyConnection write:handler:]
  -[NSProxyConnection dealloc]
  -[NSProxyConnection .cxx_destruct]
  -[NSProxyConnection cancel]


NSProxyConnectionStreamTask : NSProxyConnection <NSStreamDelegate, NSURLSessionStreamDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NSProxyConnectionStreamTask URLSession:streamTask:didBecomeInputStream:outputStream:]
  -[NSProxyConnectionStreamTask read:handler:]
  -[NSProxyConnectionStreamTask initWithHost:port:queue:configuration:]
  -[NSProxyConnectionStreamTask write:handler:]
  -[NSProxyConnectionStreamTask dealloc]
  -[NSProxyConnectionStreamTask .cxx_destruct]
  -[NSProxyConnectionStreamTask cancel]
  -[NSProxyConnectionStreamTask stream:handleEvent:]


__CFN_ConnectionMetrics : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding>
 @property  NSString *_daemon_interfaceName

  // class methods
  +[__CFN_ConnectionMetrics supportsSecureCoding]

  // instance methods
  -[__CFN_ConnectionMetrics .cxx_construct]
  -[__CFN_ConnectionMetrics .cxx_destruct]
  -[__CFN_ConnectionMetrics set_daemon_interfaceName:]
  -[__CFN_ConnectionMetrics encodeWithCoder:]
  -[__CFN_ConnectionMetrics _daemon_interfaceName]
  -[__CFN_ConnectionMetrics initWithCoder:]


NSNetService : NSObject /usr/lib/libsqlite3.dylib
 @property  <NSNetServiceDelegate> *delegate
 @property  BOOL includesPeerToPeer
 @property  NSString *name
 @property  NSString *type
 @property  NSString *domain
 @property  NSString *hostName
 @property  NSArray *addresses
 @property  long long port

  // class methods
  +[NSNetService dictionaryFromTXTRecordData:]
  +[NSNetService dataFromTXTRecordDictionary:]

  // instance methods
  -[NSNetService scheduleInRunLoop:forMode:]
  -[NSNetService stopMonitoring]
  -[NSNetService addresses]
  -[NSNetService startMonitoring]
  -[NSNetService init]
  -[NSNetService hostName]
  -[NSNetService TXTRecordData]
  -[NSNetService getInputStream:outputStream:]
  -[NSNetService initWithDomain:type:name:port:]
  -[NSNetService initWithCFNetService:]
  -[NSNetService dealloc]
  -[NSNetService publishWithOptions:]
  -[NSNetService domain]
  -[NSNetService resolveWithTimeout:]
  -[NSNetService setTXTRecordData:]
  -[NSNetService initWithDomain:type:name:]
  -[NSNetService removeFromRunLoop:forMode:]
  -[NSNetService name]
  -[NSNetService _setIncludesAWDL:]
  -[NSNetService port]
  -[NSNetService publish]
  -[NSNetService resolve]
  -[NSNetService stop]
  -[NSNetService includesPeerToPeer]
  -[NSNetService type]
  -[NSNetService setIncludesPeerToPeer:]
  -[NSNetService isEqual:]
  -[NSNetService setDelegate:]
  -[NSNetService delegate]


NSNetServiceBrowser : NSObject /usr/lib/libsqlite3.dylib
 @property  <NSNetServiceBrowserDelegate> *delegate
 @property  BOOL includesPeerToPeer

  // instance methods
  -[NSNetServiceBrowser scheduleInRunLoop:forMode:]
  -[NSNetServiceBrowser searchForAllDomains]
  -[NSNetServiceBrowser init]
  -[NSNetServiceBrowser dealloc]
  -[NSNetServiceBrowser _dispatchCallBack:flags:error:]
  -[NSNetServiceBrowser removeFromRunLoop:forMode:]
  -[NSNetServiceBrowser _setIncludesAWDL:]
  -[NSNetServiceBrowser stop]
  -[NSNetServiceBrowser includesPeerToPeer]
  -[NSNetServiceBrowser setIncludesPeerToPeer:]
  -[NSNetServiceBrowser searchForServicesOfType:inDomain:]
  -[NSNetServiceBrowser _internalNetServiceBrowser]
  -[NSNetServiceBrowser searchForBrowsableDomains]
  -[NSNetServiceBrowser setDelegate:]
  -[NSNetServiceBrowser searchForRegistrationDomains]
  -[NSNetServiceBrowser delegate]


__NSCFMemoryHTTPCookieStorage : NSHTTPCookieStorage
  // instance methods
  -[__NSCFMemoryHTTPCookieStorage init]


__NSCFMemoryURLCredentialStorage : NSURLCredentialStorage
  // instance methods
  -[__NSCFMemoryURLCredentialStorage init]


__CFNCoreLoggable : NSObject /usr/lib/libsqlite3.dylib <__CFNCoreLoggableReq>
  // instance methods
  -[__CFNCoreLoggable loggable]
  -[__CFNCoreLoggable dealloc]
  -[__CFNCoreLoggable initWithLoggableName:]


__NSCFURLSessionTaskInfo : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding>
 @property  unsigned long identifier
 @property  unsigned long taskKind
 @property  double creationTime
 @property  long long state
 @property  unsigned long suspendCount
 @property  NSString *taskDescription
 @property  NSURLRequest *originalRequest
 @property  NSURLRequest *currentRequest
 @property  NSURLResponse *response
 @property  NSDate *earliestBeginDate
 @property  long long countOfBytesClientExpectsToSend
 @property  long long countOfBytesClientExpectsToReceive
 @property  BOOL resumedAndWaitingForEarliestBeginDate
 @property  BOOL respondedToWillBeginDelayedRequestCallback
 @property  NSError *error
 @property  NSURL *fileURL
 @property  NSURL *downloadFileURL
 @property  NSString *bundleID
 @property  NSString *sessionID
 @property  BOOL hasStarted
 @property  BOOL expectingResumeCallback
 @property  BOOL establishedConnection
 @property  unsigned long retryCount
 @property  unsigned long lowThroughputTimerRetryCount
 @property  BOOL disablesRetry
 @property  BOOL shouldCancelOnDisconnect
 @property  long long basePriority
 @property  BOOL basePrioritySetExplicitly
 @property  BOOL discretionary
 @property  long long discretionaryOverride
 @property  unsigned int qos
 @property  NSString *personaUniqueString
 @property  NSUUID *uniqueIdentifier
 @property  NSString *storagePartitionIdentifier
 @property  long long bytesPerSecondLimit
 @property  unsigned long expectedProgressTarget
 @property  double loadingPriority
 @property  BOOL mayBeDemotedToDiscretionary
 @property  NSString *pathToDownloadTaskFile
 @property  double timeoutIntervalForResource
 @property  unsigned short _TLSMinimumSupportedProtocolVersion
 @property  unsigned short _TLSMaximumSupportedProtocolVersion
 @property  <SZExtractor> *_extractor
 @property  BOOL _hasSZExtractor
 @property  BOOL _doesSZExtractorConsumeExtractedData
 @property  BOOL startedUserInitiated
 @property  unsigned long AVAssetDownloadToken
 @property  NSURL *URL
 @property  NSURL *destinationURL
 @property  NSString *assetTitle
 @property  NSData *assetArtworkData
 @property  NSDictionary *options
 @property  AVURLAsset *AVURLAsset
 @property  NSURL *AVAssetURL
 @property  BOOL initializedWithAVAsset
 @property  NSURL *temporaryDestinationURL
 @property  NSDictionary *resolvedMediaSelectionPlist
 @property  NSString *avAssetDownloadChildDownloadSessionIdentifier
 @property  long long countOfBytesReceived
 @property  long long countOfBytesSent
 @property  long long countOfBytesExpectedToSend
 @property  long long countOfBytesExpectedToReceive
 @property  NSDictionary *_backgroundTrailers
 @property  NSDictionary *additionalProperties
 @property  __CFN_TaskMetrics *taskMetrics

  // class methods
  +[__NSCFURLSessionTaskInfo supportsSecureCoding]

  // instance methods
  -[__NSCFURLSessionTaskInfo setRetryCount:]
  -[__NSCFURLSessionTaskInfo taskMetrics]
  -[__NSCFURLSessionTaskInfo setUniqueIdentifier:]
  -[__NSCFURLSessionTaskInfo fileURL]
  -[__NSCFURLSessionTaskInfo taskKind]
  -[__NSCFURLSessionTaskInfo setQos:]
  -[__NSCFURLSessionTaskInfo setBundleID:]
  -[__NSCFURLSessionTaskInfo setSessionID:]
  -[__NSCFURLSessionTaskInfo _extractor]
  -[__NSCFURLSessionTaskInfo setAvAssetDownloadChildDownloadSessionIdentifier:]
  -[__NSCFURLSessionTaskInfo sessionID]
  -[__NSCFURLSessionTaskInfo initWithDownloadTask:uniqueIdentifier:bundleID:sessionID:]
  -[__NSCFURLSessionTaskInfo initWithUploadTask:uniqueIdentifier:bundleID:sessionID:]
  -[__NSCFURLSessionTaskInfo initWithAVAggregateDownloadTaskNoChildTaskKindWithURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:]
  -[__NSCFURLSessionTaskInfo hasStarted]
  -[__NSCFURLSessionTaskInfo initWithDataTask:uniqueIdentifier:bundleID:sessionID:]
  -[__NSCFURLSessionTaskInfo creationTime]
  -[__NSCFURLSessionTaskInfo initWithAVAssetDownloadURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:]
  -[__NSCFURLSessionTaskInfo initWithAVAggregateAssetDownloadChildDownloadSessionIdentifier:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:]
  -[__NSCFURLSessionTaskInfo qos]
  -[__NSCFURLSessionTaskInfo assetTitle]
  -[__NSCFURLSessionTaskInfo AVURLAsset]
  -[__NSCFURLSessionTaskInfo AVAssetURL]
  -[__NSCFURLSessionTaskInfo setBytesPerSecondLimit:]
  -[__NSCFURLSessionTaskInfo setRespondedToWillBeginDelayedRequestCallback:]
  -[__NSCFURLSessionTaskInfo respondedToWillBeginDelayedRequestCallback]
  -[__NSCFURLSessionTaskInfo setCreationTime:]
  -[__NSCFURLSessionTaskInfo set_TLSMinimumSupportedProtocolVersion:]
  -[__NSCFURLSessionTaskInfo set_doesSZExtractorConsumeExtractedData:]
  -[__NSCFURLSessionTaskInfo setResumedAndWaitingForEarliestBeginDate:]
  -[__NSCFURLSessionTaskInfo setPersonaUniqueString:]
  -[__NSCFURLSessionTaskInfo setTaskKind:]
  -[__NSCFURLSessionTaskInfo suspendCount]
  -[__NSCFURLSessionTaskInfo basePriority]
  -[__NSCFURLSessionTaskInfo countOfBytesClientExpectsToReceive]
  -[__NSCFURLSessionTaskInfo setCountOfBytesExpectedToReceive:]
  -[__NSCFURLSessionTaskInfo setCountOfBytesClientExpectsToReceive:]
  -[__NSCFURLSessionTaskInfo avAssetDownloadChildDownloadSessionIdentifier]
  -[__NSCFURLSessionTaskInfo set_TLSMaximumSupportedProtocolVersion:]
  -[__NSCFURLSessionTaskInfo set_extractor:]
  -[__NSCFURLSessionTaskInfo _doesSZExtractorConsumeExtractedData]
  -[__NSCFURLSessionTaskInfo taskDescription]
  -[__NSCFURLSessionTaskInfo countOfBytesClientExpectsToSend]
  -[__NSCFURLSessionTaskInfo storagePartitionIdentifier]
  -[__NSCFURLSessionTaskInfo disablesRetry]
  -[__NSCFURLSessionTaskInfo setLowThroughputTimerRetryCount:]
  -[__NSCFURLSessionTaskInfo setTaskDescription:]
  -[__NSCFURLSessionTaskInfo resumedAndWaitingForEarliestBeginDate]
  -[__NSCFURLSessionTaskInfo _hasSZExtractor]
  -[__NSCFURLSessionTaskInfo setCountOfBytesClientExpectsToSend:]
  -[__NSCFURLSessionTaskInfo setEarliestBeginDate:]
  -[__NSCFURLSessionTaskInfo setCountOfBytesExpectedToSend:]
  -[__NSCFURLSessionTaskInfo pathToDownloadTaskFile]
  -[__NSCFURLSessionTaskInfo setCountOfBytesReceived:]
  -[__NSCFURLSessionTaskInfo downloadFileURL]
  -[__NSCFURLSessionTaskInfo loadingPriority]
  -[__NSCFURLSessionTaskInfo timeoutIntervalForResource]
  -[__NSCFURLSessionTaskInfo retryCount]
  -[__NSCFURLSessionTaskInfo setMayBeDemotedToDiscretionary:]
  -[__NSCFURLSessionTaskInfo originalRequest]
  -[__NSCFURLSessionTaskInfo setResolvedMediaSelectionPlist:]
  -[__NSCFURLSessionTaskInfo setOriginalRequest:]
  -[__NSCFURLSessionTaskInfo setHasStarted:]
  -[__NSCFURLSessionTaskInfo setAssetTitle:]
  -[__NSCFURLSessionTaskInfo setAVURLAsset:]
  -[__NSCFURLSessionTaskInfo resolvedMediaSelectionPlist]
  -[__NSCFURLSessionTaskInfo setAVAssetURL:]
  -[__NSCFURLSessionTaskInfo _loggableDescription]
  -[__NSCFURLSessionTaskInfo initializedWithAVAsset]
  -[__NSCFURLSessionTaskInfo earliestBeginDate]
  -[__NSCFURLSessionTaskInfo setAVAssetDownloadToken:]
  -[__NSCFURLSessionTaskInfo set_hasSZExtractor:]
  -[__NSCFURLSessionTaskInfo _backgroundTrailers]
  -[__NSCFURLSessionTaskInfo setExpectedProgressTarget:]
  -[__NSCFURLSessionTaskInfo setExpectingResumeCallback:]
  -[__NSCFURLSessionTaskInfo setPathToDownloadTaskFile:]
  -[__NSCFURLSessionTaskInfo mayBeDemotedToDiscretionary]
  -[__NSCFURLSessionTaskInfo setInitializedWithAVAsset:]
  -[__NSCFURLSessionTaskInfo setTemporaryDestinationURL:]
  -[__NSCFURLSessionTaskInfo setStoragePartitionIdentifier:]
  -[__NSCFURLSessionTaskInfo setBasePrioritySetExplicitly:]
  -[__NSCFURLSessionTaskInfo setCountOfBytesSent:]
  -[__NSCFURLSessionTaskInfo lowThroughputTimerRetryCount]
  -[__NSCFURLSessionTaskInfo setShouldCancelOnDisconnect:]
  -[__NSCFURLSessionTaskInfo setSuspendCount:]
  -[__NSCFURLSessionTaskInfo setBasePriority:]
  -[__NSCFURLSessionTaskInfo assetArtworkData]
  -[__NSCFURLSessionTaskInfo establishedConnection]
  -[__NSCFURLSessionTaskInfo temporaryDestinationURL]
  -[__NSCFURLSessionTaskInfo expectedProgressTarget]
  -[__NSCFURLSessionTaskInfo discretionaryOverride]
  -[__NSCFURLSessionTaskInfo setError:]
  -[__NSCFURLSessionTaskInfo _logTaskUUIDMapping]
  -[__NSCFURLSessionTaskInfo setState:]
  -[__NSCFURLSessionTaskInfo setDownloadFileURL:]
  -[__NSCFURLSessionTaskInfo bytesPerSecondLimit]
  -[__NSCFURLSessionTaskInfo setTaskMetrics:]
  -[__NSCFURLSessionTaskInfo setLoadingPriority:]
  -[__NSCFURLSessionTaskInfo shouldCancelOnDisconnect]
  -[__NSCFURLSessionTaskInfo setDisablesRetry:]
  -[__NSCFURLSessionTaskInfo expectingResumeCallback]
  -[__NSCFURLSessionTaskInfo set_backgroundTrailers:]
  -[__NSCFURLSessionTaskInfo setStartedUserInitiated:]
  -[__NSCFURLSessionTaskInfo setAdditionalProperties:]
  -[__NSCFURLSessionTaskInfo setEstablishedConnection:]
  -[__NSCFURLSessionTaskInfo basePrioritySetExplicitly]
  -[__NSCFURLSessionTaskInfo .cxx_destruct]
  -[__NSCFURLSessionTaskInfo currentRequest]
  -[__NSCFURLSessionTaskInfo destinationURL]
  -[__NSCFURLSessionTaskInfo setDiscretionaryOverride:]
  -[__NSCFURLSessionTaskInfo options]
  -[__NSCFURLSessionTaskInfo setTimeoutIntervalForResource:]
  -[__NSCFURLSessionTaskInfo startedUserInitiated]
  -[__NSCFURLSessionTaskInfo setAssetArtworkData:]
  -[__NSCFURLSessionTaskInfo setCurrentRequest:]
  -[__NSCFURLSessionTaskInfo AVAssetDownloadToken]
  -[__NSCFURLSessionTaskInfo setIdentifier:]
  -[__NSCFURLSessionTaskInfo encodeWithCoder:]
  -[__NSCFURLSessionTaskInfo identifier]
  -[__NSCFURLSessionTaskInfo uniqueIdentifier]
  -[__NSCFURLSessionTaskInfo setDiscretionary:]
  -[__NSCFURLSessionTaskInfo setFileURL:]
  -[__NSCFURLSessionTaskInfo countOfBytesSent]
  -[__NSCFURLSessionTaskInfo setOptions:]
  -[__NSCFURLSessionTaskInfo setDestinationURL:]
  -[__NSCFURLSessionTaskInfo error]
  -[__NSCFURLSessionTaskInfo _TLSMaximumSupportedProtocolVersion]
  -[__NSCFURLSessionTaskInfo _TLSMinimumSupportedProtocolVersion]
  -[__NSCFURLSessionTaskInfo countOfBytesReceived]
  -[__NSCFURLSessionTaskInfo personaUniqueString]
  -[__NSCFURLSessionTaskInfo setResponse:]
  -[__NSCFURLSessionTaskInfo countOfBytesExpectedToSend]
  -[__NSCFURLSessionTaskInfo isDiscretionary]
  -[__NSCFURLSessionTaskInfo URL]
  -[__NSCFURLSessionTaskInfo state]
  -[__NSCFURLSessionTaskInfo additionalProperties]
  -[__NSCFURLSessionTaskInfo setURL:]
  -[__NSCFURLSessionTaskInfo bundleID]
  -[__NSCFURLSessionTaskInfo initWithCoder:]
  -[__NSCFURLSessionTaskInfo countOfBytesExpectedToReceive]
  -[__NSCFURLSessionTaskInfo response]


__NSURLSessionTaskDependencyResourceIdentifier : NSObject /usr/lib/libsqlite3.dylib <NSCopying>
  // instance methods
  -[__NSURLSessionTaskDependencyResourceIdentifier copyWithZone:]
  -[__NSURLSessionTaskDependencyResourceIdentifier dealloc]
  -[__NSURLSessionTaskDependencyResourceIdentifier isEqual:]


NSURLSessionTaskDependencyDescription : NSObject /usr/lib/libsqlite3.dylib
 @property  float priority
 @property  BOOL exclusive
 @property  NSString *dependentURLPath
 @property  NSString *dependentMimeType
 @property  NSString *parentURLPath
 @property  NSString *parentMimeType

  // class methods
  +[NSURLSessionTaskDependencyDescription taskDependencyDescriptionWithMimeType:parentMimeType:]
  +[NSURLSessionTaskDependencyDescription taskDependencyDescriptionWithURLPath:parentURLPath:]
  +[NSURLSessionTaskDependencyDescription taskDependencyDescriptionWithParentURLPath:]
  +[NSURLSessionTaskDependencyDescription taskDependencyDescriptionWithURLPath:parentMimeType:]
  +[NSURLSessionTaskDependencyDescription taskDependencyDescriptionWithMimeType:parentURLPath:]
  +[NSURLSessionTaskDependencyDescription taskDependencyDescriptionWithParentMimeType:]

  // instance methods
  -[NSURLSessionTaskDependencyDescription exclusive]
  -[NSURLSessionTaskDependencyDescription setExclusive:]
  -[NSURLSessionTaskDependencyDescription parentURLPath]
  -[NSURLSessionTaskDependencyDescription parentMimeType]
  -[NSURLSessionTaskDependencyDescription dealloc]
  -[NSURLSessionTaskDependencyDescription dependentURLPath]
  -[NSURLSessionTaskDependencyDescription dependentMimeType]
  -[NSURLSessionTaskDependencyDescription setPriority:]
  -[NSURLSessionTaskDependencyDescription priority]


__NSCFURLSessionTaskDependencyTreeNode : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[__NSCFURLSessionTaskDependencyTreeNode init]
  -[__NSCFURLSessionTaskDependencyTreeNode dealloc]


NSURLSessionTaskDependencyTree : NSObject /usr/lib/libsqlite3.dylib
 @property  NSURL *mainDocumentURL

  // class methods
  +[NSURLSessionTaskDependencyTree dependencyTreeWithMainDocumentURL:dependencyDescriptions:]
  +[NSURLSessionTaskDependencyTree dependencyTreeWithJSONData:error:]
  +[NSURLSessionTaskDependencyTree dependencyTreeDefaultWeb]

  // instance methods
  -[NSURLSessionTaskDependencyTree mainDocumentURL]
  -[NSURLSessionTaskDependencyTree setMainDocumentURL:]
  -[NSURLSessionTaskDependencyTree dealloc]


NSURLSessionTaskDependency : NSObject /usr/lib/libsqlite3.dylib
 @property  NSURLSessionTaskDependencyDescription *taskDependencyDescription
 @property  NSURLSessionTask *parentTask
 @property  NSURLSessionTask *mainDocumentTask

  // class methods
  +[NSURLSessionTaskDependency taskDependencyWithMainDocumentTask:taskDependencyDescription:]
  +[NSURLSessionTaskDependency taskDependencyWithParentTask:priority:exclusive:]
  +[NSURLSessionTaskDependency taskDependencyWithMainDocumentTask:]

  // instance methods
  -[NSURLSessionTaskDependency init]
  -[NSURLSessionTaskDependency setTaskDependencyDescription:]
  -[NSURLSessionTaskDependency dealloc]
  -[NSURLSessionTaskDependency mainDocumentTask]
  -[NSURLSessionTaskDependency taskDependencyDescription]
  -[NSURLSessionTaskDependency parentTask]


__NSCFURLSessionTaskActiveStreamDependencyInfo : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo init]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo dealloc]


NWStreamPair : __CFNCoreLoggable
  // instance methods
  -[NWStreamPair dealloc]


NSURLSession : NSObject /usr/lib/libsqlite3.dylib <NSCopying, __NSURLSessionTaskGroupForConfiguration>
 @property  NSString *_tlsSessionCachePrefix
 @property  unsigned long nextSeed
 @property  NSOperationQueue *delegateQueue
 @property  <NSURLSessionDelegate> *delegate
 @property  NSURLSessionConfiguration *configuration
 @property  NSString *sessionDescription
 @property  NSURLSessionConfiguration *_groupConfiguration
 @property  NSURLSession *_groupSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSURLSession new]
  +[NSURLSession _sessionWithConfiguration:delegate:delegateDispatchQueue:]
  +[NSURLSession _obliterateAllBackgroundSessionsWithCompletionHandler:]
  +[NSURLSession sessionWithConfiguration:delegate:delegateQueue:]
  +[NSURLSession _getActiveSessionIdentifiersWithCompletionHandler:]
  +[NSURLSession _sendPendingCallbacksForSessionIdentifier:]
  +[NSURLSession _disableATS]
  +[NSURLSession _releaseProcessAssertionForSessionIdentifier:]
  +[NSURLSession _strictTrustEvaluate:queue:completionHandler:]
  +[NSURLSession _disableAppSSO]
  +[NSURLSession _backgroundServiceAvailable]
  +[NSURLSession _setHTTPRewriter:]
  +[NSURLSession _setEventDelegate:queue:]
  +[NSURLSession sessionWithConfiguration:]
  +[NSURLSession sharedSession]

  // instance methods
  -[NSURLSession _useTLSSessionCacheFromSession:]
  -[NSURLSession _uploadTaskWithTaskForClass:]
  -[NSURLSession copyWithZone:]
  -[NSURLSession flushWithCompletionHandler:]
  -[NSURLSession dataTaskWithRequest:completionHandler:]
  -[NSURLSession aggregateAssetDownloadTaskWithURLAsset:mediaSelections:assetTitle:assetArtworkData:options:]
  -[NSURLSession uploadTaskWithRequest:fromFile:completionHandler:]
  -[NSURLSession assetDownloadTaskWithURLAsset:assetTitle:assetArtworkData:options:]
  -[NSURLSession uploadTaskWithRequest:fromData:completionHandler:]
  -[NSURLSession assetDownloadTaskWithURLAsset:destinationURL:options:]
  -[NSURLSession _AVAssetDownloadTaskWithURL:destinationURL:options:]
  -[NSURLSession _groupSession]
  -[NSURLSession _downloadTaskWithRequest:downloadFilePath:]
  -[NSURLSession downloadTaskWithRequest:completionHandler:]
  -[NSURLSession init]
  -[NSURLSession downloadTaskWithResumeData:completionHandler:]
  -[NSURLSession dataTaskWithURL:completionHandler:]
  -[NSURLSession dataTaskWithRequest:]
  -[NSURLSession downloadTaskWithURL:completionHandler:]
  -[NSURLSession getAllTasksWithCompletionHandler:]
  -[NSURLSession dataTaskWithRequest:uniqueIdentifier:]
  -[NSURLSession uploadTaskWithStreamedRequest:]
  -[NSURLSession defaultTaskGroup]
  -[NSURLSession _groupConfiguration]
  -[NSURLSession _tlsSessionCachePrefix]
  -[NSURLSession set_tlsSessionCachePrefix:]
  -[NSURLSession webSocketTaskWithURL:protocols:]
  -[NSURLSession uploadTaskWithRequest:fromFile:]
  -[NSURLSession uploadTaskWithRequest:fromData:]
  -[NSURLSession streamTaskWithHostName:port:]
  -[NSURLSession webSocketTaskWithRequest:]
  -[NSURLSession delegateQueue]
  -[NSURLSession getTasksWithCompletionHandler:]
  -[NSURLSession .cxx_construct]
  -[NSURLSession resetWithCompletionHandler:]
  -[NSURLSession dealloc]
  -[NSURLSession downloadTaskWithResumeData:]
  -[NSURLSession sessionDescription]
  -[NSURLSession setSessionDescription:]
  -[NSURLSession taskGroupWithConfiguration:]
  -[NSURLSession _setEventDelegate:]
  -[NSURLSession dataTaskWithURL:]
  -[NSURLSession webSocketTaskWithURL:]
  -[NSURLSession .cxx_destruct]
  -[NSURLSession downloadTaskWithRequest:]
  -[NSURLSession streamTaskWithNetService:]
  -[NSURLSession downloadTaskWithURL:]
  -[NSURLSession _downloadTaskWithTaskForClass:]
  -[NSURLSession invalidateAndCancel]
  -[NSURLSession configuration]
  -[NSURLSession _dataTaskWithTaskForClass:]
  -[NSURLSession finishTasksAndInvalidate]
  -[NSURLSession delegate]
  -[NSURLSession initWithConfiguration:delegate:delegateQueue:delegateDispatchQueue:]


AVAssetDownloadURLSession : NSURLSession
  // class methods
  +[AVAssetDownloadURLSession sessionWithConfiguration:assetDownloadDelegate:delegateQueue:]

  // instance methods
  -[AVAssetDownloadURLSession aggregateAssetDownloadTaskWithURLAsset:mediaSelections:assetTitle:assetArtworkData:options:]
  -[AVAssetDownloadURLSession assetDownloadTaskWithURLAsset:assetTitle:assetArtworkData:options:]
  -[AVAssetDownloadURLSession assetDownloadTaskWithURLAsset:destinationURL:options:]


__NSCFURLSessionTaskGroup : NSObject /usr/lib/libsqlite3.dylib <__NSURLSessionTaskGroupForConfiguration>
 @property  NSURLSessionConfiguration *_groupConfiguration
 @property  NSURLSession *_groupSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFURLSessionTaskGroup dataTaskWithRequest:completionHandler:]
  -[__NSCFURLSessionTaskGroup _groupSession]
  -[__NSCFURLSessionTaskGroup dataTaskWithRequest:]
  -[__NSCFURLSessionTaskGroup uploadTaskWithStreamedRequest:]
  -[__NSCFURLSessionTaskGroup forwardingTargetForSelector:]
  -[__NSCFURLSessionTaskGroup _groupConfiguration]
  -[__NSCFURLSessionTaskGroup dealloc]


NSCachedURLResponseInternal : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[NSCachedURLResponseInternal dealloc]


NSCachedURLResponse : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding, NSCopying>
 @property  NSURLResponse *response
 @property  NSData *data
 @property  NSDictionary *userInfo
 @property  unsigned long storagePolicy

  // class methods
  +[NSCachedURLResponse supportsSecureCoding]

  // instance methods
  -[NSCachedURLResponse copyWithZone:]
  -[NSCachedURLResponse dataArray]
  -[NSCachedURLResponse initWithResponse:dataArray:userInfo:storagePolicy:]
  -[NSCachedURLResponse _reestablishInternalCFCachedURLResponse:]
  -[NSCachedURLResponse initWithResponse:data:userInfo:storagePolicy:]
  -[NSCachedURLResponse storagePolicy]
  -[NSCachedURLResponse _initWithCFCachedURLResponse:]
  -[NSCachedURLResponse _deallocInternalCFCachedURLResponse]
  -[NSCachedURLResponse _CFCachedURLResponse]
  -[NSCachedURLResponse dealloc]
  -[NSCachedURLResponse initWithResponse:data:]
  -[NSCachedURLResponse encodeWithCoder:]
  -[NSCachedURLResponse data]
  -[NSCachedURLResponse userInfo]
  -[NSCachedURLResponse initWithCoder:]
  -[NSCachedURLResponse response]


NSURLCacheInternal : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[NSURLCacheInternal dealloc]


NSURLCache : NSObject /usr/lib/libsqlite3.dylib
 @property  unsigned long memoryCapacity
 @property  unsigned long diskCapacity
 @property  unsigned long currentMemoryUsage
 @property  unsigned long currentDiskUsage

  // class methods
  +[NSURLCache setSharedURLCache:]
  +[NSURLCache sharedURLCache]

  // instance methods
  -[NSURLCache _nscfBridgeURLCacheCopyResponseForRequest:]
  -[NSURLCache _nscfBridgeURLCacheCurrentMemoryUsage]
  -[NSURLCache currentDiskUsage]
  -[NSURLCache _diskCacheDefaultPath]
  -[NSURLCache init]
  -[NSURLCache storeCachedResponse:forRequest:]
  -[NSURLCache _nscfBridgeURLCacheMemoryCapacity]
  -[NSURLCache _nscfBridgeURLCacheCurrentDiskUsage]
  -[NSURLCache removeAllCachedResponses]
  -[NSURLCache storeCachedResponse:forDataTask:]
  -[NSURLCache removeCachedResponseForDataTask:]
  -[NSURLCache dealloc]
  -[NSURLCache _nscfBridgeURLCacheSetMemoryCapacity:]
  -[NSURLCache _initWithMemoryCapacity:diskCapacity:relativePath:]
  -[NSURLCache _initVaryHeaderEnabledWithPath:]
  -[NSURLCache _initWithIdentifier:memoryCapacity:diskCapacity:private:]
  -[NSURLCache diskCapacity]
  -[NSURLCache _nscfBridgeURLCacheDiskCapacity]
  -[NSURLCache removeCachedResponsesSinceDate:]
  -[NSURLCache setMemoryCapacity:]
  -[NSURLCache _nscfBridgeURLCacheStoreCachedResponse:forRequest:]
  -[NSURLCache initWithMemoryCapacity:diskCapacity:diskPath:]
  -[NSURLCache getCachedResponseForDataTask:completionHandler:]
  -[NSURLCache memoryCapacity]
  -[NSURLCache _nscfBridgeURLCacheRemoveAllCachedResponses]
  -[NSURLCache removeCachedResponseForRequest:]
  -[NSURLCache _CFURLCache]
  -[NSURLCache _initWithExistingCFURLCache:]
  -[NSURLCache initWithMemoryCapacity:diskCapacity:directoryURL:]
  -[NSURLCache currentMemoryUsage]
  -[NSURLCache setDiskCapacity:]
  -[NSURLCache cachedResponseForRequest:]
  -[NSURLCache _cacheDirectory]
  -[NSURLCache _updateVaryState:forURL:]
  -[NSURLCache _isVaryHeaderSupportEnabled]
  -[NSURLCache _nscfBridgeURLCacheSetDiskCapacity:]
  -[NSURLCache _varyStateForURL:]
  -[NSURLCache _nscfBridgeURLCacheRemoveCachedResponseForRequest:]
  -[NSURLCache flushWithCompletion:]


NSURLRequestInternal : NSObject /usr/lib/libsqlite3.dylib <NSCopying>
 @property  ^{URLRequest=^^?^{__CFURL}Qd^{__CFURL}^{__CFDictionary}^{__CFDictionary}^{HTTPRequest}{Flags=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}^{__CFDictionary}^{__CFArray}qQi^{__CFString}QdddCCCCCd^{__CFDictionary}{unique_ptr<_CFHSTSPolicy _inner

  // instance methods
  -[NSURLRequestInternal copyWithZone:]
  -[NSURLRequestInternal init]
  -[NSURLRequestInternal .cxx_construct]
  -[NSURLRequestInternal dealloc]
  -[NSURLRequestInternal .cxx_destruct]
  -[NSURLRequestInternal isEqual:]
  -[NSURLRequestInternal _initWithMessage:bodyParts:cachePolicy:timeout:mainDocumentURL:mutable:]
  -[NSURLRequestInternal _inner]


NSURLRequest : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  NSString *HTTPMethod
 @property  NSDictionary *allHTTPHeaderFields
 @property  NSData *HTTPBody
 @property  NSInputStream *HTTPBodyStream
 @property  BOOL HTTPShouldHandleCookies
 @property  BOOL HTTPShouldUsePipelining
 @property  ^{URLRequest=^^?^{__CFURL}Qd^{__CFURL}^{__CFDictionary}^{__CFDictionary}^{HTTPRequest}{Flags=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}^{__CFDictionary}^{__CFArray}qQi^{__CFString}QdddCCCCCd^{__CFDictionary}{unique_ptr<_CFHSTSPolicy _inner
 @property  BOOL knownHTTP3Capable
 @property  NSURL *URL
 @property  unsigned long cachePolicy
 @property  double timeoutInterval
 @property  NSURL *mainDocumentURL
 @property  unsigned long networkServiceType
 @property  BOOL allowsCellularAccess
 @property  BOOL allowsExpensiveNetworkAccess
 @property  BOOL allowsConstrainedNetworkAccess

  // class methods
  +[NSURLRequest supportsSecureCoding]
  +[NSURLRequest requestWithURL:cachePolicy:timeoutInterval:]
  +[NSURLRequest setAllowsSpecificHTTPSCertificate:forHost:]
  +[NSURLRequest allowsAnyHTTPSCertificateForHost:]
  +[NSURLRequest allowsSpecificHTTPSCertificateForHost:]
  +[NSURLRequest requestWithURL:]
  +[NSURLRequest setAllowsAnyHTTPSCertificate:forHost:]
  +[NSURLRequest setDefaultTimeoutInterval:]
  +[NSURLRequest defaultTimeoutInterval]

  // instance methods
  -[NSURLRequest HTTPBody]
  -[NSURLRequest cfURL]
  -[NSURLRequest copyWithZone:]
  -[NSURLRequest initWithURL:cachePolicy:timeoutInterval:]
  -[NSURLRequest allowsCellularAccess]
  -[NSURLRequest _isIdempotent]
  -[NSURLRequest _timeWindowDuration]
  -[NSURLRequest init]
  -[NSURLRequest HTTPReferrer]
  -[NSURLRequest _ignoreHSTS]
  -[NSURLRequest HTTPBodyStream]
  -[NSURLRequest _schemeWasUpgradedDueToDynamicHSTS]
  -[NSURLRequest mainDocumentURL]
  -[NSURLRequest _URLHasScheme:]
  -[NSURLRequest _CFURLRequest]
  -[NSURLRequest _payloadTransmissionTimeout]
  -[NSURLRequest HTTPUserAgent]
  -[NSURLRequest _initWithInternal:]
  -[NSURLRequest _isSafeRequestForBackgroundDownload]
  -[NSURLRequest _initWithCFURLRequest:]
  -[NSURLRequest contentDispositionEncodingFallbackArray]
  -[NSURLRequest _allHTTPHeaderFieldsAsArrays]
  -[NSURLRequest _removePropertyForKey:]
  -[NSURLRequest HTTPContentType]
  -[NSURLRequest allHTTPHeaderFields]
  -[NSURLRequest _propertyForKey:]
  -[NSURLRequest initWithURL:]
  -[NSURLRequest _requiresShortConnectionTimeout]
  -[NSURLRequest _startTimeoutDate]
  -[NSURLRequest networkServiceType]
  -[NSURLRequest HTTPShouldHandleCookies]
  -[NSURLRequest _copyReplacingURLWithURL:]
  -[NSURLRequest allowsConstrainedNetworkAccess]
  -[NSURLRequest allowsExpensiveNetworkAccess]
  -[NSURLRequest dealloc]
  -[NSURLRequest boundInterfaceIdentifier]
  -[NSURLRequest HTTPExtraCookies]
  -[NSURLRequest isKnownHTTP3Capable]
  -[NSURLRequest _preventHSTSStorage]
  -[NSURLRequest expectedWorkload]
  -[NSURLRequest encodeWithCoder:]
  -[NSURLRequest HTTPShouldUsePipelining]
  -[NSURLRequest cachePolicy]
  -[NSURLRequest isEqual:]
  -[NSURLRequest HTTPMethod]
  -[NSURLRequest timeoutInterval]
  -[NSURLRequest URL]
  -[NSURLRequest _setProperty:forKey:]
  -[NSURLRequest valueForHTTPHeaderField:]
  -[NSURLRequest mutableCopyWithZone:]
  -[NSURLRequest _inner]
  -[NSURLRequest _timeWindowDelay]
  -[NSURLRequest initWithCoder:]


NSMutableURLRequest : NSURLRequest
 @property  NSString *HTTPMethod
 @property  NSDictionary *allHTTPHeaderFields
 @property  NSData *HTTPBody
 @property  NSInputStream *HTTPBodyStream
 @property  BOOL HTTPShouldHandleCookies
 @property  BOOL HTTPShouldUsePipelining
 @property  BOOL knownHTTP3Capable
 @property  NSURL *URL
 @property  unsigned long cachePolicy
 @property  double timeoutInterval
 @property  NSURL *mainDocumentURL
 @property  unsigned long networkServiceType
 @property  BOOL allowsCellularAccess
 @property  BOOL allowsExpensiveNetworkAccess
 @property  BOOL allowsConstrainedNetworkAccess

  // instance methods
  -[NSMutableURLRequest setCachePolicy:]
  -[NSMutableURLRequest setHTTPBody:]
  -[NSMutableURLRequest copyWithZone:]
  -[NSMutableURLRequest setValue:forHTTPHeaderField:]
  -[NSMutableURLRequest setContentDispositionEncodingFallbackArray:]
  -[NSMutableURLRequest setAllowsConstrainedNetworkAccess:]
  -[NSMutableURLRequest setAllowsExpensiveNetworkAccess:]
  -[NSMutableURLRequest addValue:forHTTPHeaderField:]
  -[NSMutableURLRequest requestPriority]
  -[NSMutableURLRequest _setIgnoreHSTS:]
  -[NSMutableURLRequest _setRequiresShortConnectionTimeout:]
  -[NSMutableURLRequest setMainDocumentURL:]
  -[NSMutableURLRequest _setPayloadTransmissionTimeout:]
  -[NSMutableURLRequest setAllHTTPHeaderFields:]
  -[NSMutableURLRequest setHTTPBodyStream:]
  -[NSMutableURLRequest setHTTPShouldHandleCookies:]
  -[NSMutableURLRequest setHTTPShouldUsePipelining:]
  -[NSMutableURLRequest setKnownHTTP3Capable:]
  -[NSMutableURLRequest setHTTPContentType:]
  -[NSMutableURLRequest _setStartTimeoutDate:]
  -[NSMutableURLRequest setHTTPReferrer:]
  -[NSMutableURLRequest setRequestPriority:]
  -[NSMutableURLRequest _setTimeWindowDuration:]
  -[NSMutableURLRequest _setPreventHSTSStorage:]
  -[NSMutableURLRequest setHTTPUserAgent:]
  -[NSMutableURLRequest setHTTPExtraCookies:]
  -[NSMutableURLRequest setExpectedWorkload:]
  -[NSMutableURLRequest _setTimeWindowDelay:]
  -[NSMutableURLRequest setTimeoutInterval:]
  -[NSMutableURLRequest setURL:]
  -[NSMutableURLRequest setHTTPMethod:]
  -[NSMutableURLRequest setNetworkServiceType:]
  -[NSMutableURLRequest setBoundInterfaceIdentifier:]
  -[NSMutableURLRequest setAllowsCellularAccess:]


__CFN_ConnectionContextManager : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[__CFN_ConnectionContextManager init]
  -[__CFN_ConnectionContextManager dealloc]


CFNetworkTimer : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[CFNetworkTimer dealloc]


__NSURLSessionWebSocketTask : __NSCFLocalSessionTask
 @property  long long maximumMessageSize
 @property  long long closeCode
 @property  NSData *closeReason

  // instance methods
  -[__NSURLSessionWebSocketTask sendMessage:completionHandler:]
  -[__NSURLSessionWebSocketTask _onqueue_cancel]
  -[__NSURLSessionWebSocketTask _onqueue_resume]
  -[__NSURLSessionWebSocketTask connection:didFinishLoadingWithError:]
  -[__NSURLSessionWebSocketTask closeCode]
  -[__NSURLSessionWebSocketTask _onqueue_didReceiveResponse:completion:]
  -[__NSURLSessionWebSocketTask initWithOriginalRequest:ident:taskGroup:]
  -[__NSURLSessionWebSocketTask dealloc]
  -[__NSURLSessionWebSocketTask cancelWithCloseCode:reason:]
  -[__NSURLSessionWebSocketTask closeReason]
  -[__NSURLSessionWebSocketTask .cxx_destruct]
  -[__NSURLSessionWebSocketTask isKindOfClass:]
  -[__NSURLSessionWebSocketTask cancel]
  -[__NSURLSessionWebSocketTask sendPingWithPongReceiveHandler:]
  -[__NSURLSessionWebSocketTask setMaximumMessageSize:]
  -[__NSURLSessionWebSocketTask maximumMessageSize]
  -[__NSURLSessionWebSocketTask receiveMessageWithCompletionHandler:]


NSURLCredentialStorage : NSObject /usr/lib/libsqlite3.dylib
 @property  BOOL _useSystemKeychain
 @property  NSDictionary *allCredentials

  // class methods
  +[NSURLCredentialStorage sharedCredentialStorage]

  // instance methods
  -[NSURLCredentialStorage removeCredential:forProtectionSpace:options:task:]
  -[NSURLCredentialStorage getDefaultCredentialForProtectionSpace:task:completionHandler:]
  -[NSURLCredentialStorage getCredentialsForProtectionSpace:task:completionHandler:]
  -[NSURLCredentialStorage _allCredentialsWithAccessControlGroup:includeLegacyKeychain:]
  -[NSURLCredentialStorage setDefaultCredential:forProtectionSpace:]
  -[NSURLCredentialStorage init]
  -[NSURLCredentialStorage setDefaultCredential:forProtectionSpace:task:]
  -[NSURLCredentialStorage removeCredential:forProtectionSpace:options:]
  -[NSURLCredentialStorage removeCredential:forProtectionSpace:]
  -[NSURLCredentialStorage defaultCredentialForProtectionSpace:]
  -[NSURLCredentialStorage setCredential:forProtectionSpace:]
  -[NSURLCredentialStorage setCredential:forProtectionSpace:task:]
  -[NSURLCredentialStorage _initWithCFURLCredentialStorage:]
  -[NSURLCredentialStorage allCredentials]
  -[NSURLCredentialStorage _initWithIdentifier:private:]
  -[NSURLCredentialStorage credentialsForProtectionSpace:]
  -[NSURLCredentialStorage dealloc]
  -[NSURLCredentialStorage _useSystemKeychain]
  -[NSURLCredentialStorage set_useSystemKeychain:]
  -[NSURLCredentialStorage _CFURLCredentialStorage]


NSHTTPCookie2Storage : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[NSHTTPCookie2Storage sharedNSHTTPCookie2Storage]

  // instance methods
  -[NSHTTPCookie2Storage setCookies:withFilter:completionHandler:]
  -[NSHTTPCookie2Storage deleteCookiesWithFilter:completionHandler:]
  -[NSHTTPCookie2Storage init]
  -[NSHTTPCookie2Storage deleteAllCookiesWithCompletionHandler:]
  -[NSHTTPCookie2Storage initInNSMemoryHTTPCookie2Storage]
  -[NSHTTPCookie2Storage getCookiesWithFilter:completionHandler:]
  -[NSHTTPCookie2Storage setCookie:withFilter:completionHandler:]
  -[NSHTTPCookie2Storage deleteCookie:withCompletionHandler:]
  -[NSHTTPCookie2Storage getAllCookiesWithCompletionHandler:]
  -[NSHTTPCookie2Storage identifyingData]
  -[NSHTTPCookie2Storage initWithIdentifyingData:]
  -[NSHTTPCookie2Storage .cxx_destruct]
  -[NSHTTPCookie2Storage initWithPath:]


__NSURLSessionEffectiveConfiguration_Base : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding, NSCopying>
 @property  NSHTTPCookieStorage *HTTPCookieStorage
 @property  NSURLCache *URLCache
 @property  NSDictionary *HTTPAdditionalHeaders
 @property  NSURLCredentialStorage *URLCredentialStorage
 @property  NSArray *protocolClasses
 @property  double timeoutIntervalForResource
 @property  BOOL allowsCellularAccess
 @property  BOOL discretionary
 @property  BOOL shouldUseExtendedBackgroundIdleMode
 @property  BOOL waitsForConnectivity
 @property  BOOL allowsExpensiveNetworkAccess
 @property  BOOL allowsConstrainedNetworkAccess
 @property  unsigned long _forcedNetworkServiceType
 @property  NSSet *_authenticatorStatusCodes
 @property  NSString *_companionAppBundleIdentifier
 @property  NSString *_tcpConnectionPoolName
 @property  BOOL _forcesNewConnections
 @property  BOOL _preventsIdleSleepOnceConnected
 @property  BOOL _requiresPowerPluggedIn
 @property  BOOL _shouldSkipPreferredClientCertificateLookup
 @property  NSString *_sourceApplicationBundleIdentifier
 @property  NSString *_sourceApplicationSecondaryIdentifier
 @property  unsigned long _TCPAdaptiveReadTimeout
 @property  unsigned long _TCPAdaptiveWriteTimeout
 @property  BOOL _allowsExpensiveAccess
 @property  BOOL _allowsPowerNapScheduling
 @property  <NSURLSessionAppleIDContext> *_appleIDContext
 @property  NSData *_sourceApplicationAuditTokenData
 @property  long long _timingDataOptions
 @property  BOOL _allowsIndefiniteConnections
 @property  BOOL _allowsMultipathTCP
 @property  BOOL _allowsResponseMonitoringDuringBodyTranmission
 @property  BOOL _allowsTCPFastOpen
 @property  BOOL _allowsTLSSessionTickets
 @property  BOOL _onBehalfOfPairedDevice
 @property  unsigned long _customReadBufferSize
 @property  double _customReadBufferTimeout
 @property  BOOL _preventsSystemHTTPProxyAuthentication
 @property  BOOL _allowsTLSSessionResumption
 @property  BOOL _requiresSustainedDataDelivery
 @property  BOOL _duetPreauthorized
 @property  BOOL _clientIsNotExplicitlyDiscretionary
 @property  NSString *_tlsTrustPinningPolicyName
 @property  NSSet *_suppressedAutoAddedHTTPHeaders
 @property  BOOL _requiresSecureHTTPSProxyConnection
 @property  long long _expiredDNSBehavior
 @property  BOOL _alwaysPerformDefaultTrustEvaluation
 @property  BOOL _preventsAppSSO
 @property  BOOL _allowsConstrainedNetworkAccess
 @property  unsigned long _multipathAlternatePort
 @property  BOOL _reportsDataStalls
 @property  BOOL _allowsTLSFalseStart
 @property  BOOL _allowsWCA
 @property  NSNumber *_maximumWatchCellularTransferSize
 @property  NSString *_CTDataConnectionServiceType
 @property  long long multipathServiceType
 @property  BOOL _respectsAllowsCellularAccessForDiscretionaryTasks
 @property  NSString *_connectionPoolName
 @property  NSURL *_directoryForDownloadedFiles
 @property  BOOL _allowsReachabilityCheck
 @property  BOOL _allowsHTTP3
 @property  _NSHTTPAlternativeServicesStorage *_alternativeServicesStorage

  // class methods
  +[__NSURLSessionEffectiveConfiguration_Base supportsSecureCoding]

  // instance methods
  -[__NSURLSessionEffectiveConfiguration_Base copyWithZone:]
  -[__NSURLSessionEffectiveConfiguration_Base dealloc]
  -[__NSURLSessionEffectiveConfiguration_Base _copyAttribute:]
  -[__NSURLSessionEffectiveConfiguration_Base encodeWithCoder:]
  -[__NSURLSessionEffectiveConfiguration_Base _initWithConfiguration:]
  -[__NSURLSessionEffectiveConfiguration_Base mutableCopy]
  -[__NSURLSessionEffectiveConfiguration_Base isEqual:]
  -[__NSURLSessionEffectiveConfiguration_Base _sessionConfiguration]
  -[__NSURLSessionEffectiveConfiguration_Base initWithCoder:]


NSURLSessionEffectiveConfiguration : __NSURLSessionEffectiveConfiguration_Base
 @property  double _connectionCacheCellPurgeTimeout
 @property  NSDictionary *_socketStreamProperties
 @property  NSHTTPCookieStorage *HTTPCookieStorage
 @property  NSURLCache *URLCache
 @property  NSDictionary *HTTPAdditionalHeaders
 @property  NSURLCredentialStorage *URLCredentialStorage
 @property  NSArray *protocolClasses
 @property  double timeoutIntervalForResource
 @property  BOOL allowsCellularAccess
 @property  BOOL discretionary
 @property  BOOL shouldUseExtendedBackgroundIdleMode
 @property  BOOL waitsForConnectivity
 @property  BOOL allowsExpensiveNetworkAccess
 @property  BOOL allowsConstrainedNetworkAccess
 @property  unsigned long _forcedNetworkServiceType
 @property  NSSet *_authenticatorStatusCodes
 @property  NSString *_companionAppBundleIdentifier
 @property  NSString *_tcpConnectionPoolName
 @property  BOOL _forcesNewConnections
 @property  BOOL _preventsIdleSleepOnceConnected
 @property  BOOL _requiresPowerPluggedIn
 @property  BOOL _shouldSkipPreferredClientCertificateLookup
 @property  NSString *_sourceApplicationBundleIdentifier
 @property  NSString *_sourceApplicationSecondaryIdentifier
 @property  unsigned long _TCPAdaptiveReadTimeout
 @property  unsigned long _TCPAdaptiveWriteTimeout
 @property  BOOL _allowsExpensiveAccess
 @property  BOOL _allowsPowerNapScheduling
 @property  <NSURLSessionAppleIDContext> *_appleIDContext
 @property  NSData *_sourceApplicationAuditTokenData
 @property  long long _timingDataOptions
 @property  BOOL _allowsIndefiniteConnections
 @property  BOOL _allowsMultipathTCP
 @property  BOOL _allowsResponseMonitoringDuringBodyTranmission
 @property  BOOL _allowsTCPFastOpen
 @property  BOOL _allowsTLSSessionTickets
 @property  BOOL _onBehalfOfPairedDevice
 @property  unsigned long _customReadBufferSize
 @property  double _customReadBufferTimeout
 @property  BOOL _preventsSystemHTTPProxyAuthentication
 @property  BOOL _allowsTLSSessionResumption
 @property  BOOL _requiresSustainedDataDelivery
 @property  BOOL _duetPreauthorized
 @property  BOOL _clientIsNotExplicitlyDiscretionary
 @property  NSString *_tlsTrustPinningPolicyName
 @property  NSSet *_suppressedAutoAddedHTTPHeaders
 @property  BOOL _requiresSecureHTTPSProxyConnection
 @property  long long _expiredDNSBehavior
 @property  BOOL _alwaysPerformDefaultTrustEvaluation
 @property  BOOL _preventsAppSSO
 @property  BOOL _allowsConstrainedNetworkAccess
 @property  unsigned long _multipathAlternatePort
 @property  BOOL _reportsDataStalls
 @property  BOOL _allowsWCA
 @property  NSNumber *_maximumWatchCellularTransferSize
 @property  NSString *_CTDataConnectionServiceType
 @property  long long multipathServiceType
 @property  BOOL _respectsAllowsCellularAccessForDiscretionaryTasks
 @property  NSString *_connectionPoolName
 @property  NSURL *_directoryForDownloadedFiles

  // class methods
  +[NSURLSessionEffectiveConfiguration immutableEffectiveConfigurationFromConfig:]
  +[NSURLSessionEffectiveConfiguration immutableEffectiveConfigurationFromSessionConfig:]

  // instance methods
  -[NSURLSessionEffectiveConfiguration copyWithZone:]
  -[NSURLSessionEffectiveConfiguration set_socketStreamProperties:]
  -[NSURLSessionEffectiveConfiguration forwardingTargetForSelector:]
  -[NSURLSessionEffectiveConfiguration set_connectionCacheCellPurgeTimeout:]
  -[NSURLSessionEffectiveConfiguration _connectionCacheCellPurgeTimeout]
  -[NSURLSessionEffectiveConfiguration _socketStreamProperties]


NSURLSessionMutableEffectiveConfiguration : NSURLSessionEffectiveConfiguration

_NSURLBDOnce : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[_NSURLBDOnce dealloc]


NSAsyncSSDownloadManager : NSObject /usr/lib/libsqlite3.dylib <SSDownloadManagerObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NSAsyncSSDownloadManager downloadManagerDownloadsDidChange:]
  -[NSAsyncSSDownloadManager downloadManager:downloadStatesDidChange:]
  -[NSAsyncSSDownloadManager dealloc]
  -[NSAsyncSSDownloadManager _attemptReconnect]


NSURLConnectionInternalBackgroundDownload : NSURLConnectionInternal <NSURLConnectionRequired, SSDownloadManagerObserver, SSDownloadHandlerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSURLConnectionInternalBackgroundDownload _enableLogging]

  // instance methods
  -[NSURLConnectionInternalBackgroundDownload scheduleInRunLoop:forMode:]
  -[NSURLConnectionInternalBackgroundDownload downloadHandler:handleAuthenticationSession:]
  -[NSURLConnectionInternalBackgroundDownload useCredential:forAuthenticationChallenge:]
  -[NSURLConnectionInternalBackgroundDownload initWithInfo:]
  -[NSURLConnectionInternalBackgroundDownload downloadHandler:cancelSession:]
  -[NSURLConnectionInternalBackgroundDownload downloadHandlerDidDisconnect:]
  -[NSURLConnectionInternalBackgroundDownload dealloc]
  -[NSURLConnectionInternalBackgroundDownload downloadHandler:pauseSession:]
  -[NSURLConnectionInternalBackgroundDownload continueWithoutCredentialForAuthenticationChallenge:]
  -[NSURLConnectionInternalBackgroundDownload _updateDownloadState:]
  -[NSURLConnectionInternalBackgroundDownload _getDownloadIdent]
  -[NSURLConnectionInternalBackgroundDownload invokeForDelegate:]
  -[NSURLConnectionInternalBackgroundDownload _invalidate]
  -[NSURLConnectionInternalBackgroundDownload cancelAuthenticationChallenge:]
  -[NSURLConnectionInternalBackgroundDownload cancel]
  -[NSURLConnectionInternalBackgroundDownload rejectProtectionSpaceAndContinueWithChallenge:]
  -[NSURLConnectionInternalBackgroundDownload unscheduleFromRunLoop:forMode:]
  -[NSURLConnectionInternalBackgroundDownload performDefaultHandlingForAuthenticationChallenge:]
  -[NSURLConnectionInternalBackgroundDownload start]


NSHTTPCookieStorageInternal : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[NSHTTPCookieStorageInternal dealloc]
  -[NSHTTPCookieStorageInternal _syncCookies]
  -[NSHTTPCookieStorageInternal registerForPostingNotificationsWithContext:]


NSHTTPCookieStorage : NSObject /usr/lib/libsqlite3.dylib
 @property  BOOL _overrideSessionCookieAcceptPolicy
 @property  NSArray *cookies
 @property  unsigned long cookieAcceptPolicy

  // class methods
  +[NSHTTPCookieStorage _csff:]
  +[NSHTTPCookieStorage sharedCookieStorageForGroupContainerIdentifier:]
  +[NSHTTPCookieStorage sharedHTTPCookieStorage]
  +[NSHTTPCookieStorage _setSharedHTTPCookieStorage:]

  // instance methods
  -[NSHTTPCookieStorage _getCookiesForURL:mainDocumentURL:partition:policyProperties:completionHandler:]
  -[NSHTTPCookieStorage setCookie:]
  -[NSHTTPCookieStorage _getCookiesForURL:mainDocumentURL:partition:completionHandler:]
  -[NSHTTPCookieStorage _saveCookies]
  -[NSHTTPCookieStorage _getCookiesForPartition:completionHandler:]
  -[NSHTTPCookieStorage _setCookies:forURL:mainDocumentURL:policyProperties:]
  -[NSHTTPCookieStorage _saveCookies:]
  -[NSHTTPCookieStorage deleteCookie:]
  -[NSHTTPCookieStorage setCookies:forURL:mainDocumentURL:]
  -[NSHTTPCookieStorage init]
  -[NSHTTPCookieStorage _overrideSessionCookieAcceptPolicy]
  -[NSHTTPCookieStorage getCookiesForTask:completionHandler:]
  -[NSHTTPCookieStorage _cookieStorage]
  -[NSHTTPCookieStorage cookiesForURL:]
  -[NSHTTPCookieStorage _setCookiesChangedHandler:onQueue:]
  -[NSHTTPCookieStorage _setCookiesRemovedHandler:onQueue:]
  -[NSHTTPCookieStorage _getCookieStoragePartitionsCompletionHandler:]
  -[NSHTTPCookieStorage _cookiesForURL:mainDocumentURL:]
  -[NSHTTPCookieStorage _testingOfStoringOfCookie:]
  -[NSHTTPCookieStorage _setSubscribedDomainsForCookieChanges:]
  -[NSHTTPCookieStorage set_overrideSessionCookieAcceptPolicy:]
  -[NSHTTPCookieStorage _setPrivateBrowsingEnabled:]
  -[NSHTTPCookieStorage storeCookies:forTask:]
  -[NSHTTPCookieStorage cookieAcceptPolicy]
  -[NSHTTPCookieStorage setCookieAcceptPolicy:]
  -[NSHTTPCookieStorage _initWithIdentifier:private:]
  -[NSHTTPCookieStorage removeCookiesSinceDate:]
  -[NSHTTPCookieStorage _initWithCFHTTPCookieStorage:]
  -[NSHTTPCookieStorage sortedCookiesUsingDescriptors:]
  -[NSHTTPCookieStorage dealloc]
  -[NSHTTPCookieStorage _getCookiesForDomain:]
  -[NSHTTPCookieStorage cookies]


__CFN_GlobalMetrics : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[__CFN_GlobalMetrics init]
  -[__CFN_GlobalMetrics .cxx_destruct]


NSURLSessionStreamTask : NSURLSessionTask

__NSCFURLLocalStreamTask : NSURLSessionStreamTask
 @property  NSData *_TCPConnectionMetadata
 @property  NSData *_initialDataPayload
 @property  unsigned long taskIdentifier
 @property  NSURLRequest *originalRequest
 @property  NSURLRequest *currentRequest
 @property  NSURLResponse *response
 @property  long long countOfBytesClientExpectsToSend
 @property  long long countOfBytesClientExpectsToReceive
 @property  long long countOfBytesExpectedToSend
 @property  long long countOfBytesExpectedToReceive
 @property  long long countOfBytesReceived
 @property  long long countOfBytesSent
 @property  long long state
 @property  NSString *taskDescription
 @property  NSError *error
 @property  BOOL _goneSecure
 @property  double _timeoutIntervalForResource
 @property  NSUUID *_uniqueIdentifier

  // instance methods
  -[__NSCFURLLocalStreamTask taskIdentifier]
  -[__NSCFURLLocalStreamTask copyWithZone:]
  -[__NSCFURLLocalStreamTask _task_onqueue_didReceiveDispatchData:completionHandler:]
  -[__NSCFURLLocalStreamTask _goneSecure]
  -[__NSCFURLLocalStreamTask _effectiveConfiguration]
  -[__NSCFURLLocalStreamTask suspend]
  -[__NSCFURLLocalStreamTask _onqueue_resume]
  -[__NSCFURLLocalStreamTask _initialDataPayload]
  -[__NSCFURLLocalStreamTask _timeWindowDuration]
  -[__NSCFURLLocalStreamTask countOfBytesClientExpectsToReceive]
  -[__NSCFURLLocalStreamTask setCountOfBytesExpectedToReceive:]
  -[__NSCFURLLocalStreamTask set_legacySocketStreamProperties:]
  -[__NSCFURLLocalStreamTask setCountOfBytesClientExpectsToReceive:]
  -[__NSCFURLLocalStreamTask closeWrite]
  -[__NSCFURLLocalStreamTask taskDescription]
  -[__NSCFURLLocalStreamTask countOfBytesClientExpectsToSend]
  -[__NSCFURLLocalStreamTask setTaskDescription:]
  -[__NSCFURLLocalStreamTask captureStreams]
  -[__NSCFURLLocalStreamTask initWithNetService:taskGroup:disavow:]
  -[__NSCFURLLocalStreamTask computeAdjustedPoolPriority]
  -[__NSCFURLLocalStreamTask setTaskIdentifier:]
  -[__NSCFURLLocalStreamTask setCountOfBytesClientExpectsToSend:]
  -[__NSCFURLLocalStreamTask setCountOfBytesExpectedToSend:]
  -[__NSCFURLLocalStreamTask setCountOfBytesReceived:]
  -[__NSCFURLLocalStreamTask resume]
  -[__NSCFURLLocalStreamTask _legacySocketStreamProperties]
  -[__NSCFURLLocalStreamTask set_allowsCellularOverride:]
  -[__NSCFURLLocalStreamTask _TCPConnectionMetadata]
  -[__NSCFURLLocalStreamTask originalRequest]
  -[__NSCFURLLocalStreamTask set_allowsExpensiveOverride:]
  -[__NSCFURLLocalStreamTask set_expectedWorkload:]
  -[__NSCFURLLocalStreamTask setOriginalRequest:]
  -[__NSCFURLLocalStreamTask writeData:timeout:completionHandler:]
  -[__NSCFURLLocalStreamTask set_boundInterfaceIdentifier:]
  -[__NSCFURLLocalStreamTask set_allowsConstrainedOverride:]
  -[__NSCFURLLocalStreamTask set_networkServiceType:]
  -[__NSCFURLLocalStreamTask set_timeWindowDuration:]
  -[__NSCFURLLocalStreamTask _allowsCellularOverride]
  -[__NSCFURLLocalStreamTask _initWithExistingTask:disavow:]
  -[__NSCFURLLocalStreamTask setCountOfBytesSent:]
  -[__NSCFURLLocalStreamTask dealloc]
  -[__NSCFURLLocalStreamTask setError:]
  -[__NSCFURLLocalStreamTask _allowsConstrainedOverride]
  -[__NSCFURLLocalStreamTask setState:]
  -[__NSCFURLLocalStreamTask startSecureConnection]
  -[__NSCFURLLocalStreamTask set_timeWindowDelay:]
  -[__NSCFURLLocalStreamTask set_disallowCellular:]
  -[__NSCFURLLocalStreamTask currentRequest]
  -[__NSCFURLLocalStreamTask initWithHost:port:taskGroup:disavow:]
  -[__NSCFURLLocalStreamTask workQueue]
  -[__NSCFURLLocalStreamTask set_initialDataPayload:]
  -[__NSCFURLLocalStreamTask _copySocketStreamProperties]
  -[__NSCFURLLocalStreamTask setCurrentRequest:]
  -[__NSCFURLLocalStreamTask _onSessionQueue_disavow]
  -[__NSCFURLLocalStreamTask set_TCPConnectionMetadata:]
  -[__NSCFURLLocalStreamTask _cacheOnly]
  -[__NSCFURLLocalStreamTask stopSecureConnection]
  -[__NSCFURLLocalStreamTask readDataOfMinLength:maxLength:timeout:completionHandler:]
  -[__NSCFURLLocalStreamTask _boundInterfaceIdentifier]
  -[__NSCFURLLocalStreamTask _onSessionQueue_cleanupAndBreakCycles]
  -[__NSCFURLLocalStreamTask copyStreamProperty:completionHandler:]
  -[__NSCFURLLocalStreamTask _task_onqueue_didFinish]
  -[__NSCFURLLocalStreamTask countOfBytesSent]
  -[__NSCFURLLocalStreamTask closeRead]
  -[__NSCFURLLocalStreamTask _disallowCellular]
  -[__NSCFURLLocalStreamTask cancel]
  -[__NSCFURLLocalStreamTask error]
  -[__NSCFURLLocalStreamTask countOfBytesReceived]
  -[__NSCFURLLocalStreamTask _expectedWorkload]
  -[__NSCFURLLocalStreamTask setPriority:]
  -[__NSCFURLLocalStreamTask setResponse:]
  -[__NSCFURLLocalStreamTask countOfBytesExpectedToSend]
  -[__NSCFURLLocalStreamTask priority]
  -[__NSCFURLLocalStreamTask state]
  -[__NSCFURLLocalStreamTask _networkServiceType]
  -[__NSCFURLLocalStreamTask _timeWindowDelay]
  -[__NSCFURLLocalStreamTask countOfBytesExpectedToReceive]
  -[__NSCFURLLocalStreamTask response]
  -[__NSCFURLLocalStreamTask _adoptEffectiveConfiguration:]
  -[__NSCFURLLocalStreamTask _uniqueIdentifier]
  -[__NSCFURLLocalStreamTask _allowsExpensiveOverride]


__NSCFURLLocalStreamTaskFromDataTaskDataBlobby : NSObject /usr/lib/libsqlite3.dylib <NSCopying>
  // instance methods
  -[__NSCFURLLocalStreamTaskFromDataTaskDataBlobby copyWithZone:]
  -[__NSCFURLLocalStreamTaskFromDataTaskDataBlobby dealloc]


__NSCFURLLocalStreamTaskFromDataTask : __NSCFURLLocalStreamTask <__NSCFURLSessionConnectionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFURLLocalStreamTaskFromDataTask copyWithZone:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:willCacheResponse:responseCallback:]
  -[__NSCFURLLocalStreamTaskFromDataTask initWithTask:remainingInputStream:remainingOutputStream:disavow:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:didFinishLoadingWithError:]
  -[__NSCFURLLocalStreamTaskFromDataTask initWithTask:inputStream:ouptutStream:disavow:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:sentBodyBytes:totalBytes:expectedBytes:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:didFinishCollectingMetrics:completion:]
  -[__NSCFURLLocalStreamTaskFromDataTask initWithTask:disavow:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:request:needsNewBodyStreamCallback:]
  -[__NSCFURLLocalStreamTaskFromDataTask connectionWillFinishLoading:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:wasRedirected:newRequest:responseCallback:]
  -[__NSCFURLLocalStreamTaskFromDataTask dealloc]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:waitingWithReason:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:challenged:authCallback:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:_willSendRequestForEstablishedConnection:completion:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:didReceiveTCPConnection:extraBytes:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:didReceiveResponse:completion:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:didReceiveData:completion:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:didReceiveSocketInputStream:outputStream:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:_conditionalRequirementsChanged:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:needConnectedSocketToHost:port:completion:]


NSURLConnectionInternalConnection : NSURLConnectionInternal <NSURLConnectionRequired>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NSURLConnectionInternalConnection scheduleInRunLoop:forMode:]
  -[NSURLConnectionInternalConnection _setDelegateQueue:]
  -[NSURLConnectionInternalConnection _timingData]
  -[NSURLConnectionInternalConnection useCredential:forAuthenticationChallenge:]
  -[NSURLConnectionInternalConnection initWithInfo:]
  -[NSURLConnectionInternalConnection dealloc]
  -[NSURLConnectionInternalConnection _setShouldSkipCancelOnRelease:]
  -[NSURLConnectionInternalConnection continueWithoutCredentialForAuthenticationChallenge:]
  -[NSURLConnectionInternalConnection invokeForDelegate:]
  -[NSURLConnectionInternalConnection _invalidate]
  -[NSURLConnectionInternalConnection _suspendLoading]
  -[NSURLConnectionInternalConnection cancelAuthenticationChallenge:]
  -[NSURLConnectionInternalConnection cancel]
  -[NSURLConnectionInternalConnection rejectProtectionSpaceAndContinueWithChallenge:]
  -[NSURLConnectionInternalConnection unscheduleFromRunLoop:forMode:]
  -[NSURLConnectionInternalConnection _resumeLoading]
  -[NSURLConnectionInternalConnection performDefaultHandlingForAuthenticationChallenge:]
  -[NSURLConnectionInternalConnection start]


NSMemoryHTTPCookie2Storage : NSObject /usr/lib/libsqlite3.dylib <NSInternalHTTPCookie2Storage>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NSMemoryHTTPCookie2Storage setCookie:]
  -[NSMemoryHTTPCookie2Storage deleteCookie:]
  -[NSMemoryHTTPCookie2Storage init]
  -[NSMemoryHTTPCookie2Storage getAllCookies]
  -[NSMemoryHTTPCookie2Storage deleteCookies:]
  -[NSMemoryHTTPCookie2Storage getCookiesWithFilter:]
  -[NSMemoryHTTPCookie2Storage deleteAllCookies]
  -[NSMemoryHTTPCookie2Storage deleteCookiesWithFilter:]
  -[NSMemoryHTTPCookie2Storage .cxx_destruct]
  -[NSMemoryHTTPCookie2Storage setCookies:]


__NSCFURLSessionXPC : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[__NSCFURLSessionXPC initialize]
  +[__NSCFURLSessionXPC bgSessionManagerInterface]
  +[__NSCFURLSessionXPC bgSessionInterface]
  +[__NSCFURLSessionXPC bgSessionClientInterface]


__CFN_CoreSchedulingSetRunnable : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[__CFN_CoreSchedulingSetRunnable _run:]

  // instance methods
  -[__CFN_CoreSchedulingSetRunnable dealloc]


NSURLDownloadInternal : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[NSURLDownloadInternal dealloc]


NSURLDownload : NSObject /usr/lib/libsqlite3.dylib <NSURLAuthenticationChallengeSender>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURLRequest *request
 @property  NSData *resumeData
 @property  BOOL deletesFileUponFailure

  // class methods
  +[NSURLDownload _downloadWithLoadingCFURLConnection:request:response:delegate:proxy:]
  +[NSURLDownload _downloadWithLoadingConnection:request:response:delegate:proxy:]
  +[NSURLDownload _downloadWithRequest:delegate:directory:]
  +[NSURLDownload canResumeDownloadDecodedWithEncodingMIMEType:]

  // instance methods
  -[NSURLDownload _initWithLoadingConnection:request:response:delegate:proxy:]
  -[NSURLDownload _initWithLoadingCFURLConnection:request:response:delegate:proxy:]
  -[NSURLDownload _setDelegateQueue:]
  -[NSURLDownload _initWithResumeInformation:delegate:path:]
  -[NSURLDownload init]
  -[NSURLDownload url]
  -[NSURLDownload _initWithRequest:delegate:directory:]
  -[NSURLDownload initWithResumeData:delegate:path:]
  -[NSURLDownload withDelegate:]
  -[NSURLDownload useCredential:forAuthenticationChallenge:]
  -[NSURLDownload _directoryPath]
  -[NSURLDownload setDestination:allowOverwrite:]
  -[NSURLDownload initWithRequest:delegate:]
  -[NSURLDownload dealloc]
  -[NSURLDownload setDeletesFileUponFailure:]
  -[NSURLDownload _resumeInformation]
  -[NSURLDownload continueWithoutCredentialForAuthenticationChallenge:]
  -[NSURLDownload _setDirectoryPath:]
  -[NSURLDownload deletesFileUponFailure]
  -[NSURLDownload _setDelegate:]
  -[NSURLDownload cancelAuthenticationChallenge:]
  -[NSURLDownload cancel]
  -[NSURLDownload resumeData]
  -[NSURLDownload request]


NSGZipDecoder : NSObject /usr/lib/libsqlite3.dylib <NSURLDownloadDecoder>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NSGZipDecoder decodeDownloadData:dataForkData:resourceForkData:]
  -[NSGZipDecoder fileAttributes]
  -[NSGZipDecoder init]
  -[NSGZipDecoder decodeData:]
  -[NSGZipDecoder dealloc]
  -[NSGZipDecoder filenameWithOriginalFilename:]
  -[NSGZipDecoder isFinishedDecoding]
  -[NSGZipDecoder finishDownloadDecoding]


NSURLSessionTaskHTTPAuthenticator : NSObject /usr/lib/libsqlite3.dylib <NSCopying>
 @property  NSSet *statusCodes

  // class methods
  +[NSURLSessionTaskHTTPAuthenticator sessionTaskHTTPAuthenticatorWithContext:statusCodes:]

  // instance methods
  -[NSURLSessionTaskHTTPAuthenticator copyWithZone:]
  -[NSURLSessionTaskHTTPAuthenticator statusCodes]
  -[NSURLSessionTaskHTTPAuthenticator dealloc]
  -[NSURLSessionTaskHTTPAuthenticator setStatusCodes:]
  -[NSURLSessionTaskHTTPAuthenticator getAuthenticationHeadersForTask:task:response:completionHandler:]
  -[NSURLSessionTaskHTTPAuthenticator initWithStatusCodes:]


NSURLSessionTaskBackgroundHTTPAuthenticator : NSURLSessionTaskHTTPAuthenticator
  // instance methods
  -[NSURLSessionTaskBackgroundHTTPAuthenticator dealloc]
  -[NSURLSessionTaskBackgroundHTTPAuthenticator getAuthenticationHeadersForTask:task:response:completionHandler:]
  -[NSURLSessionTaskBackgroundHTTPAuthenticator initWithStatusCodes:]


NSURLSessionTaskLocalHTTPAuthenticator : NSURLSessionTaskHTTPAuthenticator
 @property  <NSURLSessionAppleIDContext> *externalAuthenticator

  // instance methods
  -[NSURLSessionTaskLocalHTTPAuthenticator externalAuthenticator]
  -[NSURLSessionTaskLocalHTTPAuthenticator dealloc]
  -[NSURLSessionTaskLocalHTTPAuthenticator setExternalAuthenticator:]
  -[NSURLSessionTaskLocalHTTPAuthenticator initWithSessionAuthenticator:statusCodes:]
  -[NSURLSessionTaskLocalHTTPAuthenticator getAuthenticationHeadersForTask:task:response:completionHandler:]


NSURLSessionWebSocketTask : NSURLSessionTask
 @property  long long maximumMessageSize
 @property  long long closeCode
 @property  NSData *closeReason

  // instance methods
  -[NSURLSessionWebSocketTask sendMessage:completionHandler:]
  -[NSURLSessionWebSocketTask closeCode]
  -[NSURLSessionWebSocketTask cancelWithCloseCode:reason:]
  -[NSURLSessionWebSocketTask closeReason]
  -[NSURLSessionWebSocketTask .cxx_destruct]
  -[NSURLSessionWebSocketTask sendPingWithPongReceiveHandler:]
  -[NSURLSessionWebSocketTask setMaximumMessageSize:]
  -[NSURLSessionWebSocketTask maximumMessageSize]
  -[NSURLSessionWebSocketTask receiveMessageWithCompletionHandler:]


NSURLSessionWebSocketMessage : NSObject /usr/lib/libsqlite3.dylib
 @property  long long type
 @property  NSData *data
 @property  NSString *string

  // instance methods
  -[NSURLSessionWebSocketMessage initWithString:]
  -[NSURLSessionWebSocketMessage .cxx_destruct]
  -[NSURLSessionWebSocketMessage initWithData:]
  -[NSURLSessionWebSocketMessage data]
  -[NSURLSessionWebSocketMessage type]
  -[NSURLSessionWebSocketMessage string]


NSURLSessionTask : NSObject /usr/lib/libsqlite3.dylib <NSCopying, NSProgressReporting>
 @property  NSURLSessionEffectiveConfiguration *_effectiveConfiguration
 @property  unsigned long taskIdentifier
 @property  NSURLRequest *originalRequest
 @property  NSURLRequest *currentRequest
 @property  NSURL *currentRequest_URL
 @property  NSURL *currentRequest_mainDocumentURL
 @property  NSURLResponse *response
 @property  long long countOfBytesReceived
 @property  long long countOfBytesSent
 @property  long long countOfBytesExpectedToSend
 @property  long long countOfBytesExpectedToReceive
 @property  long long state
 @property  NSError *error
 @property  double startTime
 @property  <__NSURLSessionTaskGroupForConfiguration> *_taskGroup
 @property  NSURLSession *session
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  long long _priorityValue
 @property  double _loadingPriorityValue
 @property  NSString *_loggableDescription
 @property  __CFN_TransactionMetrics *_backgroundTransactionMetrics
 @property  BOOL _shouldSkipPreferredClientCertificateLookup
 @property  BOOL _cacheOnly
 @property  BOOL _preventsSystemHTTPProxyAuthentication
 @property  BOOL _requiresSecureHTTPSProxyConnection
 @property  BOOL _preventsAppSSO
 @property  BOOL _appSSOFallback
 @property  BOOL _appleIDContextRedirect
 @property  NSDictionary *_legacySocketStreamProperties
 @property  NSDictionary *_cachedSocketStreamProperties
 @property  ^{_CFHSTSPolicy=} _cfHSTS
 @property  r^{_CFURLCache=} _cfCache
 @property  ^{_CFURLCredentialStorage=} _cfCreds
 @property  ^{OpaqueCFHTTPCookieStorage=} _cfCookies
 @property  unsigned long _cachePolicy
 @property  double _timeoutInterval
 @property  NSDictionary *_proxySettings
 @property  NSDictionary *_sslSettings
 @property  BOOL _shouldPipelineHTTP
 @property  BOOL _shouldUsePipelineHeuristics
 @property  BOOL _shouldSkipPipelineProbe
 @property  BOOL _shouldHandleCookies
 @property  int _cookieAcceptPolicy
 @property  BOOL _preventsIdleSystemSleep
 @property  NSArray *_contentDispositionFallbackArray
 @property  BOOL _allowsCellular
 @property  int _networkServiceType
 @property  unsigned int _qos
 @property  NSObject<OS_voucher> *_voucher
 @property  BOOL _prohibitAuthUI
 @property  BOOL _strictContentLength
 @property  long long _suspensionThreshhold
 @property  NSString *_boundInterfaceIdentifier
 @property  BOOL _disallowCellular
 @property  int _allowsExpensiveOverride
 @property  int _allowsConstrainedOverride
 @property  int _allowsCellularOverride
 @property  BOOL _knownHTTP3Capable
 @property  unsigned long _allowedProtocolTypes
 @property  long long _requestPriority
 @property  long long _expectedWorkload
 @property  double _timeWindowDelay
 @property  double _timeWindowDuration
 @property  NSUUID *_uniqueIdentifier
 @property  unsigned int _powerAssertion
 @property  unsigned int _darkWakePowerAssertion
 @property  BOOL _connectionIsCellular
 @property  BOOL _connectionIsCompanionLink
 @property  id _protocolForTask
 @property  NSURLSessionTaskHTTPAuthenticator *authenticator
 @property  BOOL _authenticatorConfiguredViaTaskProperty
 @property  NSDictionary *_dependencyInfo
 @property  NSDictionary *_DuetActivityProperties
 @property  NSURLSessionTaskDependencyTree *dependencyTree
 @property  NSURLSessionTaskDependency *taskDependency
 @property  NSURL *_backgroundPublishingURL
 @property  BOOL _extractorFinishedDecoding
 @property  BOOL _extractorPreparedForExtraction
 @property  long long _countOfPendingBytesReceivedEncoded
 @property  BOOL _preconnect
 @property  BOOL _isAVAssetTask
 @property  NSObject<OS_nw_activity> *_private_nw_activity
 @property  __CFN_TaskMetrics *_metrics
 @property  @? _httpConnectionInfoCompletionBlock
 @property  NSURLSessionEffectiveConfiguration *_effectiveConfiguration
 @property  BOOL prefersIncrementalDelivery
 @property  NSObject<OS_nw_activity> *_nw_activity
 @property  long long _priority
 @property  double _loadingPriority
 @property  long long _bytesPerSecondLimit
 @property  unsigned long _expectedProgressTarget
 @property  double _timeoutIntervalForResource
 @property  NSString *_storagePartitionIdentifier
 @property  NSURL *_siteForCookies
 @property  BOOL _isTopLevelNavigation
 @property  NSString *_pathToDownloadTaskFile
 @property  NSDictionary *_trailers
 @property  NSData *_TCPConnectionMetadata
 @property  unsigned short _TLSMinimumSupportedProtocolVersion
 @property  unsigned short _TLSMaximumSupportedProtocolVersion
 @property  unsigned short _TLSNegotiatedCipherSuite
 @property  BOOL _allowsQUIC
 @property  <SZExtractor> *_extractor
 @property  BOOL _hasSZExtractor
 @property  BOOL _doesSZExtractorConsumeExtractedData
 @property  <NSURLSessionAppleIDContext> *_appleIDContext
 @property  NSURL *_publishingURL
 @property  long long _countOfBytesReceivedEncoded
 @property  NSString *_APSRelayTopic
 @property  long long _discretionaryOverride
 @property  NSObject<OS_nw_endpoint> *_hostOverride
 @property  @? _cookieTransformCallback
 @property  NSArray *_resolvedCNAMEChain
 @property  NSProgress *progress
 @property  NSDate *earliestBeginDate
 @property  long long countOfBytesClientExpectsToSend
 @property  long long countOfBytesClientExpectsToReceive
 @property  NSString *taskDescription
 @property  float priority
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSURLSessionTask new]

  // instance methods
  -[NSURLSessionTask _qos]
  -[NSURLSessionTask taskIdentifier]
  -[NSURLSessionTask _needSendingMetrics]
  -[NSURLSessionTask copyWithZone:]
  -[NSURLSessionTask _voucher]
  -[NSURLSessionTask set_qos:]
  -[NSURLSessionTask _onqueue_expectedProgressTargetChanged]
  -[NSURLSessionTask _taskGroup]
  -[NSURLSessionTask _extractor]
  -[NSURLSessionTask setStartTime:]
  -[NSURLSessionTask _cfHSTS]
  -[NSURLSessionTask _releasePreventIdleSleepAssertionIfAppropriate]
  -[NSURLSessionTask _effectiveConfiguration]
  -[NSURLSessionTask suspend]
  -[NSURLSessionTask initializeHTTPAuthenticatorWithAppleIDContext:statusCodes:]
  -[NSURLSessionTask _setConnectionCacheKey:]
  -[NSURLSessionTask set_shouldSkipPreferredClientCertificateLookup:]
  -[NSURLSessionTask getUnderlyingHTTPConnectionInfoWithCompletionHandler:]
  -[NSURLSessionTask _withXURLCache:]
  -[NSURLSessionTask authenticator]
  -[NSURLSessionTask set_authenticatorConfiguredViaTaskProperty:]
  -[NSURLSessionTask _setAppleIDContext:]
  -[NSURLSessionTask set_TLSMinimumSupportedProtocolVersion:]
  -[NSURLSessionTask set_doesSZExtractorConsumeExtractedData:]
  -[NSURLSessionTask set_timeoutIntervalForResource:]
  -[NSURLSessionTask _nw_activity]
  -[NSURLSessionTask _timeWindowDuration]
  -[NSURLSessionTask _priorityValue]
  -[NSURLSessionTask countOfBytesClientExpectsToReceive]
  -[NSURLSessionTask set_preventsSystemHTTPProxyAuthentication:]
  -[NSURLSessionTask init]
  -[NSURLSessionTask setCountOfBytesExpectedToReceive:]
  -[NSURLSessionTask set_legacySocketStreamProperties:]
  -[NSURLSessionTask setCountOfBytesClientExpectsToReceive:]
  -[NSURLSessionTask set_contentDispositionFallbackArray:]
  -[NSURLSessionTask _sslSettings]
  -[NSURLSessionTask set_cfCache:]
  -[NSURLSessionTask set_cfCreds:]
  -[NSURLSessionTask set_TLSMaximumSupportedProtocolVersion:]
  -[NSURLSessionTask set_voucher:]
  -[NSURLSessionTask set_extractor:]
  -[NSURLSessionTask _didSendMetrics]
  -[NSURLSessionTask _powerAssertion]
  -[NSURLSessionTask _doesSZExtractorConsumeExtractedData]
  -[NSURLSessionTask _onqueue_releasePowerAsssertion]
  -[NSURLSessionTask set_cachedSocketStreamProperties:]
  -[NSURLSessionTask set_cfHSTS:]
  -[NSURLSessionTask _setSocketProperties:connectionProperties:]
  -[NSURLSessionTask set_storagePartitionIdentifier:]
  -[NSURLSessionTask taskDescription]
  -[NSURLSessionTask set_backgroundTransactionMetrics:]
  -[NSURLSessionTask countOfBytesClientExpectsToSend]
  -[NSURLSessionTask _onqueue_adjustBytesPerSecondLimit:]
  -[NSURLSessionTask set_shouldUsePipelineHeuristics:]
  -[NSURLSessionTask _extractorPreparedForExtraction]
  -[NSURLSessionTask _onqueue_adoptEffectiveConfiguration:]
  -[NSURLSessionTask setTaskDescription:]
  -[NSURLSessionTask _extractorFinishedDecoding]
  -[NSURLSessionTask _TLSNegotiatedCipherSuite]
  -[NSURLSessionTask set_uniqueIdentifier:]
  -[NSURLSessionTask set_connectionIsCompanionLink:]
  -[NSURLSessionTask _timeoutIntervalForResource]
  -[NSURLSessionTask computeAdjustedPoolPriority]
  -[NSURLSessionTask _publishingURL]
  -[NSURLSessionTask _hasSZExtractor]
  -[NSURLSessionTask set_countOfBytesReceivedEncoded:]
  -[NSURLSessionTask set_pathToDownloadTaskFile:]
  -[NSURLSessionTask setTaskIdentifier:]
  -[NSURLSessionTask setCountOfBytesClientExpectsToSend:]
  -[NSURLSessionTask set_extractorPreparedForExtraction:]
  -[NSURLSessionTask set_httpConnectionInfoCompletionBlock:]
  -[NSURLSessionTask setEarliestBeginDate:]
  -[NSURLSessionTask _authenticatorConfiguredViaTaskProperty]
  -[NSURLSessionTask setCountOfBytesExpectedToSend:]
  -[NSURLSessionTask setCountOfBytesReceived:]
  -[NSURLSessionTask resume]
  -[NSURLSessionTask _legacySocketStreamProperties]
  -[NSURLSessionTask set_countOfPendingBytesReceivedEncoded:]
  -[NSURLSessionTask set_backgroundPublishingURL:]
  -[NSURLSessionTask _setExplicitStorageSession:]
  -[NSURLSessionTask set_priority:]
  -[NSURLSessionTask set_requiresSecureHTTPSProxyConnection:]
  -[NSURLSessionTask _appleIDContext]
  -[NSURLSessionTask set_allowsCellularOverride:]
  -[NSURLSessionTask set_extractorFinishedDecoding:]
  -[NSURLSessionTask _TCPConnectionMetadata]
  -[NSURLSessionTask _finishProgressReporting]
  -[NSURLSessionTask _backgroundPublishingURL]
  -[NSURLSessionTask initWithOriginalRequest:ident:taskGroup:]
  -[NSURLSessionTask _setExplicitCookieStorage:]
  -[NSURLSessionTask setPrefersIncrementalDelivery:]
  -[NSURLSessionTask originalRequest]
  -[NSURLSessionTask set_knownHTTP3Capable:]
  -[NSURLSessionTask set_shouldSkipPipelineProbe:]
  -[NSURLSessionTask set_preventsIdleSystemSleep:]
  -[NSURLSessionTask set_powerAssertion:]
  -[NSURLSessionTask set_allowsExpensiveOverride:]
  -[NSURLSessionTask _connectionIsCompanionLink]
  -[NSURLSessionTask set_expectedWorkload:]
  -[NSURLSessionTask setOriginalRequest:]
  -[NSURLSessionTask set_cachePolicy:]
  -[NSURLSessionTask _pathToDownloadTaskFile]
  -[NSURLSessionTask _loadingPriorityValue]
  -[NSURLSessionTask set_sslSettings:]
  -[NSURLSessionTask _loggableDescription]
  -[NSURLSessionTask _timingData]
  -[NSURLSessionTask set_proxySettings:]
  -[NSURLSessionTask earliestBeginDate]
  -[NSURLSessionTask _allowedProtocolTypes]
  -[NSURLSessionTask set_shouldPipelineHTTP:]
  -[NSURLSessionTask _cookieAcceptPolicy]
  -[NSURLSessionTask session]
  -[NSURLSessionTask set_boundInterfaceIdentifier:]
  -[NSURLSessionTask set_shouldHandleCookies:]
  -[NSURLSessionTask set_allowsConstrainedOverride:]
  -[NSURLSessionTask set_allowsCellular:]
  -[NSURLSessionTask set_cookieAcceptPolicy:]
  -[NSURLSessionTask set_networkServiceType:]
  -[NSURLSessionTask set_hasSZExtractor:]
  -[NSURLSessionTask set_timeWindowDuration:]
  -[NSURLSessionTask _onqueue_adjustPriorityHint:incremental:]
  -[NSURLSessionTask set_appleIDContextRedirect:]
  -[NSURLSessionTask set_suspensionThreshhold:]
  -[NSURLSessionTask set_trailers:]
  -[NSURLSessionTask _allowsCellularOverride]
  -[NSURLSessionTask set_discretionaryOverride:]
  -[NSURLSessionTask set_allowsQUIC:]
  -[NSURLSessionTask setCountOfBytesSent:]
  -[NSURLSessionTask _shouldPipelineHTTP]
  -[NSURLSessionTask set_cacheOnly:]
  -[NSURLSessionTask set_cfCookies:]
  -[NSURLSessionTask set_allowedProtocolTypes:]
  -[NSURLSessionTask _loadingPriority]
  -[NSURLSessionTask dependencyTree]
  -[NSURLSessionTask dealloc]
  -[NSURLSessionTask taskDependency]
  -[NSURLSessionTask _discretionaryOverride]
  -[NSURLSessionTask _resolvedCNAMEChain]
  -[NSURLSessionTask _timeoutInterval]
  -[NSURLSessionTask _cachedSocketStreamProperties]
  -[NSURLSessionTask setError:]
  -[NSURLSessionTask _allowsConstrainedOverride]
  -[NSURLSessionTask setState:]
  -[NSURLSessionTask set_timeoutInterval:]
  -[NSURLSessionTask set_requestPriority:]
  -[NSURLSessionTask initWithTaskGroup:]
  -[NSURLSessionTask _metrics]
  -[NSURLSessionTask set_timeWindowDelay:]
  -[NSURLSessionTask set_darkWakePowerAssertion:]
  -[NSURLSessionTask set_DuetActivityProperties:]
  -[NSURLSessionTask set_effectiveConfiguration:]
  -[NSURLSessionTask setTaskDependency:]
  -[NSURLSessionTask set_priorityValue:]
  -[NSURLSessionTask setDependencyTree:]
  -[NSURLSessionTask _knownHTTP3Capable]
  -[NSURLSessionTask set_publishingURL:]
  -[NSURLSessionTask set_APSRelayTopic:]
  -[NSURLSessionTask set_cookieTransformCallback:]
  -[NSURLSessionTask set_nw_activity:]
  -[NSURLSessionTask set_disallowCellular:]
  -[NSURLSessionTask updateCurrentRequest:]
  -[NSURLSessionTask currentRequest]
  -[NSURLSessionTask set_expectedProgressTarget:]
  -[NSURLSessionTask _connectionIsCellular]
  -[NSURLSessionTask set_prohibitAuthUI:]
  -[NSURLSessionTask set_dependencyInfo:]
  -[NSURLSessionTask _darkWakePowerAssertion]
  -[NSURLSessionTask set_siteForCookies:]
  -[NSURLSessionTask set_bytesPerSecondLimit:]
  -[NSURLSessionTask set_strictContentLength:]
  -[NSURLSessionTask set_private_nw_activity:]
  -[NSURLSessionTask _completeUploadProgress]
  -[NSURLSessionTask _allowsQUIC]
  -[NSURLSessionTask setAuthenticator:]
  -[NSURLSessionTask set_hostOverride:]
  -[NSURLSessionTask _APSRelayTopic]
  -[NSURLSessionTask set_loadingPriorityValue:]
  -[NSURLSessionTask set_isTopLevelNavigation:]
  -[NSURLSessionTask _priority]
  -[NSURLSessionTask _storagePartitionIdentifier]
  -[NSURLSessionTask workQueue]
  -[NSURLSessionTask _copySocketStreamProperties]
  -[NSURLSessionTask set_loadingPriority:]
  -[NSURLSessionTask setCurrentRequest:]
  -[NSURLSessionTask _setConnectionIsCellular:]
  -[NSURLSessionTask _shouldUsePipelineHeuristics]
  -[NSURLSessionTask _getAuthenticatorStatusCodes]
  -[NSURLSessionTask set_TCPConnectionMetadata:]
  -[NSURLSessionTask _cacheOnly]
  -[NSURLSessionTask set_TLSNegotiatedCipherSuite:]
  -[NSURLSessionTask _getAuthenticationHeadersForResponse:completionHandler:]
  -[NSURLSessionTask _shouldSkipPipelineProbe]
  -[NSURLSessionTask _isTopLevelNavigation]
  -[NSURLSessionTask _boundInterfaceIdentifier]
  -[NSURLSessionTask _onSessionQueue_cleanupAndBreakCycles]
  -[NSURLSessionTask _preconnect]
  -[NSURLSessionTask _dependencyInfo]
  -[NSURLSessionTask _siteForCookies]
  -[NSURLSessionTask _expectedProgressTarget]
  -[NSURLSessionTask _cachePolicy]
  -[NSURLSessionTask _preventsAppSSO]
  -[NSURLSessionTask _takePreventIdleSleepAssertionIfAppropriate]
  -[NSURLSessionTask _suspensionThreshhold]
  -[NSURLSessionTask _incompleteTaskMetrics]
  -[NSURLSessionTask countOfBytesSent]
  -[NSURLSessionTask _disallowCellular]
  -[NSURLSessionTask _createXCredentialStorage]
  -[NSURLSessionTask set_metrics:]
  -[NSURLSessionTask currentRequest_mainDocumentURL]
  -[NSURLSessionTask _appleIDContextRedirect]
  -[NSURLSessionTask cancel]
  -[NSURLSessionTask _appendCountOfPendingBytesReceivedEncoded:]
  -[NSURLSessionTask error]
  -[NSURLSessionTask _countOfBytesReceivedEncoded]
  -[NSURLSessionTask _cookieTransformCallback]
  -[NSURLSessionTask _TLSMaximumSupportedProtocolVersion]
  -[NSURLSessionTask _TLSMinimumSupportedProtocolVersion]
  -[NSURLSessionTask _consumePendingBytesReceivedEncoded]
  -[NSURLSessionTask _appSSOFallback]
  -[NSURLSessionTask _createXCookieStorage]
  -[NSURLSessionTask _hostOverride]
  -[NSURLSessionTask countOfBytesReceived]
  -[NSURLSessionTask _expectedWorkload]
  -[NSURLSessionTask observeValueForKeyPath:ofObject:change:context:]
  -[NSURLSessionTask _shouldSkipPreferredClientCertificateLookup]
  -[NSURLSessionTask _backgroundTransactionMetrics]
  -[NSURLSessionTask _strictContentLength]
  -[NSURLSessionTask set_resolvedCNAMEChain:]
  -[NSURLSessionTask _DuetActivityProperties]
  -[NSURLSessionTask _httpConnectionInfoCompletionBlock]
  -[NSURLSessionTask setPriority:]
  -[NSURLSessionTask _preventsIdleSystemSleep]
  -[NSURLSessionTask _protocolForTask]
  -[NSURLSessionTask set_appSSOFallback:]
  -[NSURLSessionTask setResponse:]
  -[NSURLSessionTask _countOfPendingBytesReceivedEncoded]
  -[NSURLSessionTask countOfBytesExpectedToSend]
  -[NSURLSessionTask _prohibitAuthUI]
  -[NSURLSessionTask progress]
  -[NSURLSessionTask set_preconnect:]
  -[NSURLSessionTask priority]
  -[NSURLSessionTask _requestPriority]
  -[NSURLSessionTask set_protocolForTask:]
  -[NSURLSessionTask currentRequest_URL]
  -[NSURLSessionTask state]
  -[NSURLSessionTask _proxySettings]
  -[NSURLSessionTask _copyATSState]
  -[NSURLSessionTask _cfCreds]
  -[NSURLSessionTask _bytesPerSecondLimit]
  -[NSURLSessionTask _incompleteCurrentTaskTransactionMetrics]
  -[NSURLSessionTask _copyHSTSPolicy]
  -[NSURLSessionTask _preventsSystemHTTPProxyAuthentication]
  -[NSURLSessionTask _isAVAssetTask]
  -[NSURLSessionTask _trailers]
  -[NSURLSessionTask _networkServiceType]
  -[NSURLSessionTask initWithTask:]
  -[NSURLSessionTask _timeWindowDelay]
  -[NSURLSessionTask _private_nw_activity]
  -[NSURLSessionTask _contentDispositionFallbackArray]
  -[NSURLSessionTask prefersIncrementalDelivery]
  -[NSURLSessionTask _shouldHandleCookies]
  -[NSURLSessionTask startTime]
  -[NSURLSessionTask countOfBytesExpectedToReceive]
  -[NSURLSessionTask response]
  -[NSURLSessionTask set_preventsAppSSO:]
  -[NSURLSessionTask _cfCookies]
  -[NSURLSessionTask shouldHandleCookiesAndSchemeIsAppropriate]
  -[NSURLSessionTask _adoptEffectiveConfiguration:]
  -[NSURLSessionTask _allowsCellular]
  -[NSURLSessionTask _uniqueIdentifier]
  -[NSURLSessionTask _requiresSecureHTTPSProxyConnection]
  -[NSURLSessionTask _cfCache]
  -[NSURLSessionTask _allowsExpensiveOverride]


CONNECTION_SessionTask : NSObject /usr/lib/libsqlite3.dylib
 @property  __CFN_TaskMetrics *_metrics

  // instance methods
  -[CONNECTION_SessionTask taskIdentifier]
  -[CONNECTION_SessionTask _cfHSTS]
  -[CONNECTION_SessionTask _releasePreventIdleSleepAssertionIfAppropriate]
  -[CONNECTION_SessionTask _effectiveConfiguration]
  -[CONNECTION_SessionTask _setConnectionCacheKey:]
  -[CONNECTION_SessionTask _withXURLCache:]
  -[CONNECTION_SessionTask _setAppleIDContext:]
  -[CONNECTION_SessionTask set_TLSMinimumSupportedProtocolVersion:]
  -[CONNECTION_SessionTask _timeWindowDuration]
  -[CONNECTION_SessionTask _processConnectionProperties]
  -[CONNECTION_SessionTask _priorityValue]
  -[CONNECTION_SessionTask _sslSettings]
  -[CONNECTION_SessionTask set_TLSMaximumSupportedProtocolVersion:]
  -[CONNECTION_SessionTask _setSocketProperties:connectionProperties:]
  -[CONNECTION_SessionTask _TLSNegotiatedCipherSuite]
  -[CONNECTION_SessionTask set_connectionIsCompanionLink:]
  -[CONNECTION_SessionTask _TCPConnectionMetadata]
  -[CONNECTION_SessionTask originalRequest]
  -[CONNECTION_SessionTask _connectionIsCompanionLink]
  -[CONNECTION_SessionTask _loggableDescription]
  -[CONNECTION_SessionTask _allowedProtocolTypes]
  -[CONNECTION_SessionTask _cookieAcceptPolicy]
  -[CONNECTION_SessionTask session]
  -[CONNECTION_SessionTask hasExtractor]
  -[CONNECTION_SessionTask set_trailers:]
  -[CONNECTION_SessionTask _allowsCellularOverride]
  -[CONNECTION_SessionTask set_discretionaryOverride:]
  -[CONNECTION_SessionTask set_allowsQUIC:]
  -[CONNECTION_SessionTask initWithRequest:mutableCurrent:connProps:sockProps:session:]
  -[CONNECTION_SessionTask _shouldPipelineHTTP]
  -[CONNECTION_SessionTask dealloc]
  -[CONNECTION_SessionTask _resolvedCNAMEChain]
  -[CONNECTION_SessionTask _timeoutInterval]
  -[CONNECTION_SessionTask _allowsConstrainedOverride]
  -[CONNECTION_SessionTask _metrics]
  -[CONNECTION_SessionTask _knownHTTP3Capable]
  -[CONNECTION_SessionTask updateCurrentRequest:]
  -[CONNECTION_SessionTask currentRequest]
  -[CONNECTION_SessionTask set_expectedProgressTarget:]
  -[CONNECTION_SessionTask _allowsQUIC]
  -[CONNECTION_SessionTask _APSRelayTopic]
  -[CONNECTION_SessionTask _storagePartitionIdentifier]
  -[CONNECTION_SessionTask workQueue]
  -[CONNECTION_SessionTask _copySocketStreamProperties]
  -[CONNECTION_SessionTask _setConnectionIsCellular:]
  -[CONNECTION_SessionTask _shouldUsePipelineHeuristics]
  -[CONNECTION_SessionTask _getAuthenticatorStatusCodes]
  -[CONNECTION_SessionTask set_TCPConnectionMetadata:]
  -[CONNECTION_SessionTask _cacheOnly]
  -[CONNECTION_SessionTask set_TLSNegotiatedCipherSuite:]
  -[CONNECTION_SessionTask _getAuthenticationHeadersForResponse:completionHandler:]
  -[CONNECTION_SessionTask _shouldSkipPipelineProbe]
  -[CONNECTION_SessionTask _isTopLevelNavigation]
  -[CONNECTION_SessionTask _boundInterfaceIdentifier]
  -[CONNECTION_SessionTask _preconnect]
  -[CONNECTION_SessionTask _dependencyInfo]
  -[CONNECTION_SessionTask _siteForCookies]
  -[CONNECTION_SessionTask _expectedProgressTarget]
  -[CONNECTION_SessionTask _cachePolicy]
  -[CONNECTION_SessionTask _preventsAppSSO]
  -[CONNECTION_SessionTask _takePreventIdleSleepAssertionIfAppropriate]
  -[CONNECTION_SessionTask _suspensionThreshhold]
  -[CONNECTION_SessionTask _incompleteTaskMetrics]
  -[CONNECTION_SessionTask countOfBytesSent]
  -[CONNECTION_SessionTask _disallowCellular]
  -[CONNECTION_SessionTask _createXCredentialStorage]
  -[CONNECTION_SessionTask set_metrics:]
  -[CONNECTION_SessionTask currentRequest_mainDocumentURL]
  -[CONNECTION_SessionTask _appleIDContextRedirect]
  -[CONNECTION_SessionTask _appendCountOfPendingBytesReceivedEncoded:]
  -[CONNECTION_SessionTask error]
  -[CONNECTION_SessionTask _countOfBytesReceivedEncoded]
  -[CONNECTION_SessionTask _cookieTransformCallback]
  -[CONNECTION_SessionTask _TLSMaximumSupportedProtocolVersion]
  -[CONNECTION_SessionTask _TLSMinimumSupportedProtocolVersion]
  -[CONNECTION_SessionTask _consumePendingBytesReceivedEncoded]
  -[CONNECTION_SessionTask _appSSOFallback]
  -[CONNECTION_SessionTask _createXCookieStorage]
  -[CONNECTION_SessionTask _hostOverride]
  -[CONNECTION_SessionTask countOfBytesReceived]
  -[CONNECTION_SessionTask _expectedWorkload]
  -[CONNECTION_SessionTask _shouldSkipPreferredClientCertificateLookup]
  -[CONNECTION_SessionTask _backgroundTransactionMetrics]
  -[CONNECTION_SessionTask _strictContentLength]
  -[CONNECTION_SessionTask set_resolvedCNAMEChain:]
  -[CONNECTION_SessionTask _DuetActivityProperties]
  -[CONNECTION_SessionTask _httpConnectionInfoCompletionBlock]
  -[CONNECTION_SessionTask _preventsIdleSystemSleep]
  -[CONNECTION_SessionTask _protocolForTask]
  -[CONNECTION_SessionTask set_appSSOFallback:]
  -[CONNECTION_SessionTask _countOfPendingBytesReceivedEncoded]
  -[CONNECTION_SessionTask countOfBytesExpectedToSend]
  -[CONNECTION_SessionTask _connectionPropertyDuet]
  -[CONNECTION_SessionTask _prohibitAuthUI]
  -[CONNECTION_SessionTask set_preconnect:]
  -[CONNECTION_SessionTask priority]
  -[CONNECTION_SessionTask _requestPriority]
  -[CONNECTION_SessionTask set_protocolForTask:]
  -[CONNECTION_SessionTask currentRequest_URL]
  -[CONNECTION_SessionTask state]
  -[CONNECTION_SessionTask _proxySettings]
  -[CONNECTION_SessionTask _copyATSState]
  -[CONNECTION_SessionTask _cfCreds]
  -[CONNECTION_SessionTask _bytesPerSecondLimit]
  -[CONNECTION_SessionTask _incompleteCurrentTaskTransactionMetrics]
  -[CONNECTION_SessionTask _copyHSTSPolicy]
  -[CONNECTION_SessionTask _preventsSystemHTTPProxyAuthentication]
  -[CONNECTION_SessionTask _trailers]
  -[CONNECTION_SessionTask _discretionaryOverrride]
  -[CONNECTION_SessionTask _networkServiceType]
  -[CONNECTION_SessionTask _timeWindowDelay]
  -[CONNECTION_SessionTask _private_nw_activity]
  -[CONNECTION_SessionTask _contentDispositionFallbackArray]
  -[CONNECTION_SessionTask prefersIncrementalDelivery]
  -[CONNECTION_SessionTask _shouldHandleCookies]
  -[CONNECTION_SessionTask startTime]
  -[CONNECTION_SessionTask countOfBytesExpectedToReceive]
  -[CONNECTION_SessionTask set_preventsAppSSO:]
  -[CONNECTION_SessionTask _cfCookies]
  -[CONNECTION_SessionTask shouldHandleCookiesAndSchemeIsAppropriate]
  -[CONNECTION_SessionTask _adoptEffectiveConfiguration:]
  -[CONNECTION_SessionTask _allowsCellular]
  -[CONNECTION_SessionTask _uniqueIdentifier]
  -[CONNECTION_SessionTask _requiresSecureHTTPSProxyConnection]
  -[CONNECTION_SessionTask _cfCache]
  -[CONNECTION_SessionTask _allowsExpensiveOverride]


__NSCFURLProxySessionConnection : __NSCFURLSessionConnection <NSURLSessionDataDelegate, NSURLSessionDataDelegatePrivate, NSURLSessionTaskDelegatePrivate, NSURLSessionDelegate_Internal, NSURLSessionDataDelegate_Internal>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFURLProxySessionConnection expectedProgressTargetChanged]
  -[__NSCFURLProxySessionConnection suspend]
  -[__NSCFURLProxySessionConnection URLSession:task:didFinishCollectingMetrics:]
  -[__NSCFURLProxySessionConnection _URLSession:dataTask:didReceiveData:completionHandler:]
  -[__NSCFURLProxySessionConnection setPoolPriority:]
  -[__NSCFURLProxySessionConnection resume]
  -[__NSCFURLProxySessionConnection initWithTask:delegate:delegateQueue:]
  -[__NSCFURLProxySessionConnection dealloc]
  -[__NSCFURLProxySessionConnection URLSession:didBecomeInvalidWithError:]
  -[__NSCFURLProxySessionConnection URLSession:task:_conditionalRequirementsChanged:]
  -[__NSCFURLProxySessionConnection _URLSession:task:getAuthHeadersForResponse:completionHandler:]
  -[__NSCFURLProxySessionConnection URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:]
  -[__NSCFURLProxySessionConnection URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:]
  -[__NSCFURLProxySessionConnection URLSession:task:didReceiveChallenge:completionHandler:]
  -[__NSCFURLProxySessionConnection URLSession:task:needNewBodyStream:]
  -[__NSCFURLProxySessionConnection URLSession:task:didCompleteWithError:]
  -[__NSCFURLProxySessionConnection setTLSMaximumSupportedProtocolVersion:]
  -[__NSCFURLProxySessionConnection URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[__NSCFURLProxySessionConnection URLSession:task:_isWaitingForConnectionWithReason:]
  -[__NSCFURLProxySessionConnection setPriorityHint:incremental:]
  -[__NSCFURLProxySessionConnection setTLSMinimumSupportedProtocolVersion:]
  -[__NSCFURLProxySessionConnection URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[__NSCFURLProxySessionConnection cancel]
  -[__NSCFURLProxySessionConnection setIsDownload:]


NSURLSessionTaskMetrics : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding>
 @property  NSArray *transactionMetrics
 @property  NSDateInterval *taskInterval
 @property  unsigned long redirectCount

  // class methods
  +[NSURLSessionTaskMetrics new]
  +[NSURLSessionTaskMetrics supportsSecureCoding]

  // instance methods
  -[NSURLSessionTaskMetrics init]
  -[NSURLSessionTaskMetrics taskInterval]
  -[NSURLSessionTaskMetrics transactionMetrics]
  -[NSURLSessionTaskMetrics .cxx_destruct]
  -[NSURLSessionTaskMetrics encodeWithCoder:]
  -[NSURLSessionTaskMetrics redirectCount]
  -[NSURLSessionTaskMetrics initWithCoder:]


NSURLSessionTaskTransactionMetrics : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding>
 @property  BOOL _secureConnection
 @property  BOOL _localCache
 @property  BOOL _serverPush
 @property  BOOL _connectionRace
 @property  unsigned int _redirected
 @property  NSString *_localAddressAndPort
 @property  NSString *_remoteAddressAndPort
 @property  NSUUID *_connectionIdentifier
 @property  long long _requestHeaderBytesSent
 @property  long long _responseHeaderBytesReceived
 @property  long long _responseBodyBytesReceived
 @property  long long _responseBodyBytesDecoded
 @property  BOOL _apsRelayAttempted
 @property  BOOL _apsRelaySucceeded
 @property  long long _totalBytesSent
 @property  long long _totalBytesReceived
 @property  int _negotiatedTLSProtocol
 @property  unsigned short _negotiatedTLSCipher
 @property  BOOL _usesMultipath
 @property  NSDate *_firstByteReceivedDate
 @property  NSString *_interfaceName
 @property  {?=ddIIIB} _connectionTiming
 @property  BOOL _connectionTimingCached
 @property  NSURLRequest *request
 @property  NSURLResponse *response
 @property  NSDate *fetchStartDate
 @property  NSDate *domainLookupStartDate
 @property  NSDate *domainLookupEndDate
 @property  NSDate *connectStartDate
 @property  NSDate *secureConnectionStartDate
 @property  NSDate *secureConnectionEndDate
 @property  NSDate *connectEndDate
 @property  NSDate *requestStartDate
 @property  NSDate *requestEndDate
 @property  NSDate *responseStartDate
 @property  NSDate *responseEndDate
 @property  NSString *networkProtocolName
 @property  BOOL proxyConnection
 @property  BOOL reusedConnection
 @property  long long resourceFetchType
 @property  long long countOfRequestHeaderBytesSent
 @property  long long countOfRequestBodyBytesSent
 @property  long long countOfRequestBodyBytesBeforeEncoding
 @property  long long countOfResponseHeaderBytesReceived
 @property  long long countOfResponseBodyBytesReceived
 @property  long long countOfResponseBodyBytesAfterDecoding
 @property  NSString *localAddress
 @property  NSNumber *localPort
 @property  NSString *remoteAddress
 @property  NSNumber *remotePort
 @property  NSNumber *negotiatedTLSProtocolVersion
 @property  NSNumber *negotiatedTLSCipherSuite
 @property  BOOL cellular
 @property  BOOL expensive
 @property  BOOL constrained
 @property  BOOL multipath
 @property  long long domainResolutionProtocol

  // class methods
  +[NSURLSessionTaskTransactionMetrics new]
  +[NSURLSessionTaskTransactionMetrics supportsSecureCoding]

  // instance methods
  -[NSURLSessionTaskTransactionMetrics localPort]
  -[NSURLSessionTaskTransactionMetrics localAddress]
  -[NSURLSessionTaskTransactionMetrics _interfaceName]
  -[NSURLSessionTaskTransactionMetrics remotePort]
  -[NSURLSessionTaskTransactionMetrics init]
  -[NSURLSessionTaskTransactionMetrics _localCache]
  -[NSURLSessionTaskTransactionMetrics _serverPush]
  -[NSURLSessionTaskTransactionMetrics _redirected]
  -[NSURLSessionTaskTransactionMetrics countOfResponseHeaderBytesReceived]
  -[NSURLSessionTaskTransactionMetrics countOfRequestBodyBytesBeforeEncoding]
  -[NSURLSessionTaskTransactionMetrics countOfResponseBodyBytesAfterDecoding]
  -[NSURLSessionTaskTransactionMetrics countOfResponseBodyBytesReceived]
  -[NSURLSessionTaskTransactionMetrics responseEndDate]
  -[NSURLSessionTaskTransactionMetrics _connectionRace]
  -[NSURLSessionTaskTransactionMetrics _totalBytesSent]
  -[NSURLSessionTaskTransactionMetrics fetchStartDate]
  -[NSURLSessionTaskTransactionMetrics connectEndDate]
  -[NSURLSessionTaskTransactionMetrics requestEndDate]
  -[NSURLSessionTaskTransactionMetrics _usesMultipath]
  -[NSURLSessionTaskTransactionMetrics _responseBodyBytesReceived]
  -[NSURLSessionTaskTransactionMetrics countOfRequestHeaderBytesSent]
  -[NSURLSessionTaskTransactionMetrics negotiatedTLSProtocolVersion]
  -[NSURLSessionTaskTransactionMetrics countOfRequestBodyBytesSent]
  -[NSURLSessionTaskTransactionMetrics set_connectionTimingCached:]
  -[NSURLSessionTaskTransactionMetrics _responseHeaderBytesReceived]
  -[NSURLSessionTaskTransactionMetrics connectStartDate]
  -[NSURLSessionTaskTransactionMetrics isReusedConnection]
  -[NSURLSessionTaskTransactionMetrics .cxx_destruct]
  -[NSURLSessionTaskTransactionMetrics _apsRelayAttempted]
  -[NSURLSessionTaskTransactionMetrics remoteAddress]
  -[NSURLSessionTaskTransactionMetrics _apsRelaySucceeded]
  -[NSURLSessionTaskTransactionMetrics requestStartDate]
  -[NSURLSessionTaskTransactionMetrics _negotiatedTLSProtocol]
  -[NSURLSessionTaskTransactionMetrics domainLookupStartDate]
  -[NSURLSessionTaskTransactionMetrics set_connectionTiming:]
  -[NSURLSessionTaskTransactionMetrics _remoteAddressAndPort]
  -[NSURLSessionTaskTransactionMetrics _connectionIdentifier]
  -[NSURLSessionTaskTransactionMetrics _firstByteReceivedDate]
  -[NSURLSessionTaskTransactionMetrics secureConnectionEndDate]
  -[NSURLSessionTaskTransactionMetrics _connectionTimingCached]
  -[NSURLSessionTaskTransactionMetrics domainResolutionProtocol]
  -[NSURLSessionTaskTransactionMetrics _requestHeaderBytesSent]
  -[NSURLSessionTaskTransactionMetrics responseStartDate]
  -[NSURLSessionTaskTransactionMetrics isProxyConnection]
  -[NSURLSessionTaskTransactionMetrics _connectionTiming]
  -[NSURLSessionTaskTransactionMetrics domainLookupEndDate]
  -[NSURLSessionTaskTransactionMetrics _secureConnection]
  -[NSURLSessionTaskTransactionMetrics _totalBytesReceived]
  -[NSURLSessionTaskTransactionMetrics secureConnectionStartDate]
  -[NSURLSessionTaskTransactionMetrics _responseBodyBytesDecoded]
  -[NSURLSessionTaskTransactionMetrics _localAddressAndPort]
  -[NSURLSessionTaskTransactionMetrics _negotiatedTLSCipher]
  -[NSURLSessionTaskTransactionMetrics isConstrained]
  -[NSURLSessionTaskTransactionMetrics negotiatedTLSCipherSuite]
  -[NSURLSessionTaskTransactionMetrics encodeWithCoder:]
  -[NSURLSessionTaskTransactionMetrics isExpensive]
  -[NSURLSessionTaskTransactionMetrics networkProtocolName]
  -[NSURLSessionTaskTransactionMetrics isCellular]
  -[NSURLSessionTaskTransactionMetrics isMultipath]
  -[NSURLSessionTaskTransactionMetrics request]
  -[NSURLSessionTaskTransactionMetrics resourceFetchType]
  -[NSURLSessionTaskTransactionMetrics initWithCoder:]
  -[NSURLSessionTaskTransactionMetrics response]


_NSURLSessionConnectionBeginProperties : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding>
 @property  NSObject<OS_nw_endpoint> *endpoint
 @property  BOOL TLSConfigured
 @property  BOOL proxyConfigured

  // class methods
  +[_NSURLSessionConnectionBeginProperties supportsSecureCoding]

  // instance methods
  -[_NSURLSessionConnectionBeginProperties endpoint]
  -[_NSURLSessionConnectionBeginProperties .cxx_destruct]
  -[_NSURLSessionConnectionBeginProperties encodeWithCoder:]
  -[_NSURLSessionConnectionBeginProperties isProxyConfigured]
  -[_NSURLSessionConnectionBeginProperties isTLSConfigured]
  -[_NSURLSessionConnectionBeginProperties initWithCoder:]


_NSURLSessionConnectionEstablishProperties : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding>
 @property  NSObject<OS_nw_endpoint> *localEndpoint
 @property  NSObject<OS_nw_endpoint> *remoteEndpoint
 @property  NSString *interfaceName
 @property  BOOL cellular
 @property  BOOL expensive
 @property  BOOL constrained
 @property  BOOL multipath
 @property  BOOL usedTFO
 @property  NSString *networkProtocolName
 @property  NSNumber *negotiatedTLSProtocolVersion
 @property  NSNumber *negotiatedTLSCipherSuite
 @property  NSObject<OS_nw_establishment_report> *establishmentReport

  // class methods
  +[_NSURLSessionConnectionEstablishProperties supportsSecureCoding]

  // instance methods
  -[_NSURLSessionConnectionEstablishProperties establishmentReport]
  -[_NSURLSessionConnectionEstablishProperties negotiatedTLSProtocolVersion]
  -[_NSURLSessionConnectionEstablishProperties .cxx_destruct]
  -[_NSURLSessionConnectionEstablishProperties isConstrained]
  -[_NSURLSessionConnectionEstablishProperties negotiatedTLSCipherSuite]
  -[_NSURLSessionConnectionEstablishProperties encodeWithCoder:]
  -[_NSURLSessionConnectionEstablishProperties usedTFO]
  -[_NSURLSessionConnectionEstablishProperties interfaceName]
  -[_NSURLSessionConnectionEstablishProperties localEndpoint]
  -[_NSURLSessionConnectionEstablishProperties remoteEndpoint]
  -[_NSURLSessionConnectionEstablishProperties isExpensive]
  -[_NSURLSessionConnectionEstablishProperties networkProtocolName]
  -[_NSURLSessionConnectionEstablishProperties isCellular]
  -[_NSURLSessionConnectionEstablishProperties isMultipath]
  -[_NSURLSessionConnectionEstablishProperties initWithCoder:]


NSURLConnectionInternal : NSObject /usr/lib/libsqlite3.dylib <NSURLConnectionRequired, NSURLAuthenticationChallengeSender>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NSURLConnectionInternal _setDelegateQueue:]
  -[NSURLConnectionInternal _timingData]
  -[NSURLConnectionInternal useCredential:forAuthenticationChallenge:]
  -[NSURLConnectionInternal initWithInfo:]
  -[NSURLConnectionInternal dealloc]
  -[NSURLConnectionInternal continueWithoutCredentialForAuthenticationChallenge:]
  -[NSURLConnectionInternal invokeForDelegate:]
  -[NSURLConnectionInternal _invalidate]
  -[NSURLConnectionInternal cancelAuthenticationChallenge:]
  -[NSURLConnectionInternal rejectProtectionSpaceAndContinueWithChallenge:]
  -[NSURLConnectionInternal performDefaultHandlingForAuthenticationChallenge:]


_NSURLHTTPProtocol : _NSCFURLProtocol
  // class methods
  +[_NSURLHTTPProtocol _cf_internalImpl]


_NSURLDataProtocol : _NSCFURLProtocol
  // class methods
  +[_NSURLDataProtocol _cf_internalImpl]


_NSURLFTPProtocol : _NSCFURLProtocol
  // class methods
  +[_NSURLFTPProtocol _cf_internalImpl]


_NSURLFileProtocol : _NSCFURLProtocol
  // class methods
  +[_NSURLFileProtocol _cf_internalImpl]


_NSURLAppSSOProtocol : _NSCFURLProtocol
  // class methods
  +[_NSURLAppSSOProtocol _cf_internalImpl]


NSURLSessionConfiguration : NSObject /usr/lib/libsqlite3.dylib <NSMutableCopying, NSSecureCoding, NSCopying>
 @property  NSString *identifier
 @property  BOOL backgroundSession
 @property  NSString *disposition
 @property  NSURLCredentialStorage *_phskip_credStorage
 @property  BOOL _phskip_credStorageSet
 @property  NSURLCache *_phskip_urlCache
 @property  BOOL _phskip_urlCacheSet
 @property  NSHTTPCookieStorage *_phskip_cookieStorage
 @property  BOOL _phskip_cookieStorageSet
 @property  _NSHSTSStorage *_phskip_hstsStorage
 @property  BOOL _phskip_hstsStorageSet
 @property  long long pipeliningHighWatermark
 @property  long long pipeliningLowWatermark
 @property  long long numPriorityLevels
 @property  long long numFastLanes
 @property  long long minimumFastLanePriority
 @property  BOOL skip_download_unlink
 @property  BOOL _requiresClientToOpenFiles
 @property  NSString *_tcpConnectionPoolName
 @property  BOOL _forcesNewConnections
 @property  NSDictionary *_socketStreamProperties
 @property  BOOL _supportsAVAssetDownloads
 @property  BOOL _proxySession
 @property  NSSet *_authenticatorStatusCodes
 @property  BOOL _preventsIdleSleep
 @property  BOOL _usePipeliningHeuristics
 @property  NSArray *_contentDispHeadEncFallback
 @property  BOOL _shouldPreserveBackgroundSessionDisposition
 @property  BOOL _disablesOutOfProcessDirectWiFiUsage
 @property  BOOL _disablesUseOfProxySession
 @property  NSString *_companionAppBundleIdentifier
 @property  NSString *_watchAppBundleIdentifier
 @property  NSString *_watchExtensionBundleIdentifier
 @property  unsigned long _forcedNetworkServiceType
 @property  NSDictionary *_overriddenDelegateOptions
 @property  _NSHTTPAlternativeServicesStorage *_phskip_alternativeServicesStorage
 @property  BOOL _phskip_alternativeServicesStorageSet
 @property  BOOL _requiresPowerPluggedIn
 @property  NSURL *_directoryForDownloadedFiles
 @property  NSString *_sourceApplicationBundleIdentifier
 @property  NSString *_sourceApplicationSecondaryIdentifier
 @property  NSData *_sourceApplicationAuditTokenData
 @property  unsigned long _TCPAdaptiveReadTimeout
 @property  unsigned long _TCPAdaptiveWriteTimeout
 @property  BOOL _reportsDataStalls
 @property  BOOL _allowsExpensiveAccess
 @property  BOOL _allowsConstrainedNetworkAccess
 @property  unsigned long _multipathAlternatePort
 @property  BOOL _allowsPowerNapScheduling
 @property  BOOL _preventsIdleSleepOnceConnected
 @property  BOOL _sessionSendsLaunchOnDemandEvents
 @property  long long _timingDataOptions
 @property  BOOL _shouldSkipPreferredClientCertificateLookup
 @property  <NSURLSessionAppleIDContext> *_appleIDContext
 @property  NSData *_atsContext
 @property  double _connectionCachePurgeTimeout
 @property  double _connectionCacheCellPurgeTimeout
 @property  double _longLivedConnectionCachePurgeTimeout
 @property  double _longLivedConnectionCacheCellPurgeTimeout
 @property  long long _connectionCacheNumPriorityLevels
 @property  long long _connectionCacheNumFastLanes
 @property  long long _connectionCacheMinimumFastLanePriority
 @property  BOOL _allowsRetryForBackgroundDataTasks
 @property  BOOL _onBehalfOfPairedDevice
 @property  BOOL _clientIsNotExplicitlyDiscretionary
 @property  BOOL _respectsAllowsCellularAccessForDiscretionaryTasks
 @property  BOOL _allowsWCA
 @property  NSNumber *_maximumWatchCellularTransferSize
 @property  BOOL _overridesBackgroundSessionAutoRedirect
 @property  BOOL _performsEVCertCheck
 @property  BOOL _infersDiscretionaryFromOriginatingClient
 @property  NSString *_connectionPoolName
 @property  BOOL _prefersInfraWiFi
 @property  BOOL _allowsMultipathTCP
 @property  BOOL _allowsResponseMonitoringDuringBodyTranmission
 @property  BOOL _allowsIndefiniteConnections
 @property  NSString *_CTDataConnectionServiceType
 @property  BOOL _allowsTCPFastOpen
 @property  BOOL _allowsTLSSessionTickets
 @property  BOOL _allowsTLSSessionResumption
 @property  BOOL _allowsTLSFalseStart
 @property  NSString *_tlsTrustPinningPolicyName
 @property  BOOL _allowsTLSFallback
 @property  BOOL _preventsDirectWiFiAccess
 @property  BOOL _allowTCPIOConnectionStreamTask
 @property  unsigned long _customReadBufferSize
 @property  double _customReadBufferTimeout
 @property  BOOL _preventsSystemHTTPProxyAuthentication
 @property  BOOL _requiresSecureHTTPSProxyConnection
 @property  BOOL _duetPreauthorized
 @property  long long _duetPreClearedMode
 @property  BOOL _requiresSustainedDataDelivery
 @property  BOOL _ignoreDidReceiveResponseDisposition
 @property  BOOL _alwaysPerformDefaultTrustEvaluation
 @property  NSSet *_suppressedAutoAddedHTTPHeaders
 @property  long long _expiredDNSBehavior
 @property  long long _IDSMessageTimeout
 @property  long long _companionProxyPreference
 @property  BOOL _preventsAppSSO
 @property  BOOL _allowsSensitiveLogging
 @property  BOOL _allowsReachabilityCheck
 @property  BOOL _allowsHTTP3
 @property  _NSHTTPAlternativeServicesStorage *_alternativeServicesStorage
 @property  _NSHSTSStorage *_hstsStorage
 @property  int _loggingPrivacyLevel
 @property  unsigned long requestCachePolicy
 @property  double timeoutIntervalForRequest
 @property  double timeoutIntervalForResource
 @property  unsigned long networkServiceType
 @property  BOOL allowsCellularAccess
 @property  BOOL allowsExpensiveNetworkAccess
 @property  BOOL allowsConstrainedNetworkAccess
 @property  BOOL waitsForConnectivity
 @property  BOOL discretionary
 @property  NSString *sharedContainerIdentifier
 @property  BOOL sessionSendsLaunchEvents
 @property  NSDictionary *connectionProxyDictionary
 @property  int TLSMinimumSupportedProtocol
 @property  int TLSMaximumSupportedProtocol
 @property  unsigned short TLSMinimumSupportedProtocolVersion
 @property  unsigned short TLSMaximumSupportedProtocolVersion
 @property  BOOL HTTPShouldUsePipelining
 @property  BOOL HTTPShouldSetCookies
 @property  unsigned long HTTPCookieAcceptPolicy
 @property  NSDictionary *HTTPAdditionalHeaders
 @property  long long HTTPMaximumConnectionsPerHost
 @property  NSHTTPCookieStorage *HTTPCookieStorage
 @property  NSURLCredentialStorage *URLCredentialStorage
 @property  NSURLCache *URLCache
 @property  BOOL shouldUseExtendedBackgroundIdleMode
 @property  NSArray *protocolClasses
 @property  long long multipathServiceType

  // class methods
  +[NSURLSessionConfiguration new]
  +[NSURLSessionConfiguration initialize]
  +[NSURLSessionConfiguration defaultSessionConfiguration]
  +[NSURLSessionConfiguration _AVBackgroundSessionConfigurationWithIdentifier:]
  +[NSURLSessionConfiguration supportsSecureCoding]
  +[NSURLSessionConfiguration AVBackgroundSessionConfigurationWithIdentifier:]
  +[NSURLSessionConfiguration backgroundSessionConfigurationWithIdentifier:]
  +[NSURLSessionConfiguration sessionConfigurationForSharedSession]
  +[NSURLSessionConfiguration _defaultProtocolClasses]
  +[NSURLSessionConfiguration backgroundSessionConfiguration:]
  +[NSURLSessionConfiguration ephemeralSessionConfiguration]

  // instance methods
  -[NSURLSessionConfiguration copyWithZone:]
  -[NSURLSessionConfiguration URLCache]
  -[NSURLSessionConfiguration setProtocolClasses:]
  -[NSURLSessionConfiguration set_respectsAllowsCellularAccessForDiscretionaryTasks:]
  -[NSURLSessionConfiguration setURLCache:]
  -[NSURLSessionConfiguration set_shouldSkipPreferredClientCertificateLookup:]
  -[NSURLSessionConfiguration set_shouldPreserveBackgroundSessionDisposition:]
  -[NSURLSessionConfiguration _respectsAllowsCellularAccessForDiscretionaryTasks]
  -[NSURLSessionConfiguration set_allowsResponseMonitoringDuringBodyTranmission:]
  -[NSURLSessionConfiguration allowsCellularAccess]
  -[NSURLSessionConfiguration _allowsWCA]
  -[NSURLSessionConfiguration _shouldPreserveBackgroundSessionDisposition]
  -[NSURLSessionConfiguration _allowsResponseMonitoringDuringBodyTranmission]
  -[NSURLSessionConfiguration set_connectionCacheMinimumFastLanePriority:]
  -[NSURLSessionConfiguration set_overridesBackgroundSessionAutoRedirect:]
  -[NSURLSessionConfiguration set_socketStreamProperties:]
  -[NSURLSessionConfiguration set_ignoreDidReceiveResponseDisposition:]
  -[NSURLSessionConfiguration set_sourceApplicationBundleIdentifier:]
  -[NSURLSessionConfiguration set_alwaysPerformDefaultTrustEvaluation:]
  -[NSURLSessionConfiguration set_disablesOutOfProcessDirectWiFiUsage:]
  -[NSURLSessionConfiguration set_preventsSystemHTTPProxyAuthentication:]
  -[NSURLSessionConfiguration init]
  -[NSURLSessionConfiguration _atsContext]
  -[NSURLSessionConfiguration _allowsRetryForBackgroundDataTasks]
  -[NSURLSessionConfiguration copyHSTSPolicy]
  -[NSURLSessionConfiguration _infersDiscretionaryFromOriginatingClient]
  -[NSURLSessionConfiguration _longLivedConnectionCacheCellPurgeTimeout]
  -[NSURLSessionConfiguration setAllowsConstrainedNetworkAccess:]
  -[NSURLSessionConfiguration _allowsHTTP3]
  -[NSURLSessionConfiguration set_longLivedConnectionCachePurgeTimeout:]
  -[NSURLSessionConfiguration set_phskip_alternativeServicesStorageSet:]
  -[NSURLSessionConfiguration _hstsStorage]
  -[NSURLSessionConfiguration numFastLanes]
  -[NSURLSessionConfiguration set_sourceApplicationAuditTokenData:]
  -[NSURLSessionConfiguration _alwaysPerformDefaultTrustEvaluation]
  -[NSURLSessionConfiguration _sourceApplicationAuditTokenData]
  -[NSURLSessionConfiguration setHTTPMaximumConnectionsPerHost:]
  -[NSURLSessionConfiguration _suppressedAutoAddedHTTPHeaders]
  -[NSURLSessionConfiguration _requiresClientToOpenFiles]
  -[NSURLSessionConfiguration setAllowsExpensiveNetworkAccess:]
  -[NSURLSessionConfiguration _isProxySession]
  -[NSURLSessionConfiguration set_longLivedConnectionCacheCellPurgeTimeout:]
  -[NSURLSessionConfiguration set_infersDiscretionaryFromOriginatingClient:]
  -[NSURLSessionConfiguration _phskip_alternativeServicesStorageSet]
  -[NSURLSessionConfiguration _overridesBackgroundSessionAutoRedirect]
  -[NSURLSessionConfiguration set_connectionCacheNumFastLanes:]
  -[NSURLSessionConfiguration _allowTCPIOConnectionStreamTask]
  -[NSURLSessionConfiguration _phskip_alternativeServicesStorage]
  -[NSURLSessionConfiguration set_directoryForDownloadedFiles:]
  -[NSURLSessionConfiguration set_allowsRetryForBackgroundDataTasks:]
  -[NSURLSessionConfiguration TLSMinimumSupportedProtocolVersion]
  -[NSURLSessionConfiguration set_phskip_alternativeServicesStorage:]
  -[NSURLSessionConfiguration set_atsContext:]
  -[NSURLSessionConfiguration _longLivedConnectionCachePurgeTimeout]
  -[NSURLSessionConfiguration setTLSMaximumSupportedProtocol:]
  -[NSURLSessionConfiguration set_connectionCacheNumPriorityLevels:]
  -[NSURLSessionConfiguration set_sessionSendsLaunchOnDemandEvents:]
  -[NSURLSessionConfiguration _sessionSendsLaunchOnDemandEvents]
  -[NSURLSessionConfiguration set_connectionCachePurgeTimeout:]
  -[NSURLSessionConfiguration getConnectionCacheLimits]
  -[NSURLSessionConfiguration setTLSMinimumSupportedProtocol:]
  -[NSURLSessionConfiguration set_maximumWatchCellularTransferSize:]
  -[NSURLSessionConfiguration TLSMaximumSupportedProtocolVersion]
  -[NSURLSessionConfiguration set_allowsExpensiveAccess:]
  -[NSURLSessionConfiguration set_allowTCPIOConnectionStreamTask:]
  -[NSURLSessionConfiguration set_allowsIndefiniteConnections:]
  -[NSURLSessionConfiguration _ignoreDidReceiveResponseDisposition]
  -[NSURLSessionConfiguration set_CTDataConnectionServiceType:]
  -[NSURLSessionConfiguration set_requiresSecureHTTPSProxyConnection:]
  -[NSURLSessionConfiguration _connectionCacheMinimumFastLanePriority]
  -[NSURLSessionConfiguration _directoryForDownloadedFiles]
  -[NSURLSessionConfiguration set_requiresSustainedDataDelivery:]
  -[NSURLSessionConfiguration _disablesOutOfProcessDirectWiFiUsage]
  -[NSURLSessionConfiguration _appleIDContext]
  -[NSURLSessionConfiguration _maximumWatchCellularTransferSize]
  -[NSURLSessionConfiguration timeoutIntervalForResource]
  -[NSURLSessionConfiguration _connectionCacheNumPriorityLevels]
  -[NSURLSessionConfiguration HTTPCookieStorage]
  -[NSURLSessionConfiguration _alternativeServicesStorage]
  -[NSURLSessionConfiguration set_companionAppBundleIdentifier:]
  -[NSURLSessionConfiguration setShouldUseExtendedBackgroundIdleMode:]
  -[NSURLSessionConfiguration set_clientIsNotExplicitlyDiscretionary:]
  -[NSURLSessionConfiguration HTTPCookieAcceptPolicy]
  -[NSURLSessionConfiguration _overriddenDelegateOptions]
  -[NSURLSessionConfiguration disposition]
  -[NSURLSessionConfiguration HTTPAdditionalHeaders]
  -[NSURLSessionConfiguration TLSMaximumSupportedProtocol]
  -[NSURLSessionConfiguration shouldUseExtendedBackgroundIdleMode]
  -[NSURLSessionConfiguration set_connectionCacheCellPurgeTimeout:]
  -[NSURLSessionConfiguration _timingDataOptions]
  -[NSURLSessionConfiguration set_TCPAdaptiveWriteTimeout:]
  -[NSURLSessionConfiguration _clientIsNotExplicitlyDiscretionary]
  -[NSURLSessionConfiguration setHTTPCookieStorage:]
  -[NSURLSessionConfiguration TLSMinimumSupportedProtocol]
  -[NSURLSessionConfiguration set_TCPAdaptiveReadTimeout:]
  -[NSURLSessionConfiguration set_allowsConstrainedNetworkAccess:]
  -[NSURLSessionConfiguration set_preventsIdleSleepOnceConnected:]
  -[NSURLSessionConfiguration networkServiceType]
  -[NSURLSessionConfiguration _requiresSustainedDataDelivery]
  -[NSURLSessionConfiguration set_watchExtensionBundleIdentifier:]
  -[NSURLSessionConfiguration set_suppressedAutoAddedHTTPHeaders:]
  -[NSURLSessionConfiguration _reportsDataStalls]
  -[NSURLSessionConfiguration sharedContainerIdentifier]
  -[NSURLSessionConfiguration URLCredentialStorage]
  -[NSURLSessionConfiguration setRequestCachePolicy:]
  -[NSURLSessionConfiguration _loggingPrivacyLevel]
  -[NSURLSessionConfiguration setConnectionProxyDictionary:]
  -[NSURLSessionConfiguration HTTPMaximumConnectionsPerHost]
  -[NSURLSessionConfiguration setURLCredentialStorage:]
  -[NSURLSessionConfiguration _preventsIdleSleepOnceConnected]
  -[NSURLSessionConfiguration _TCPAdaptiveWriteTimeout]
  -[NSURLSessionConfiguration _allowsConstrainedNetworkAccess]
  -[NSURLSessionConfiguration allowsConstrainedNetworkAccess]
  -[NSURLSessionConfiguration set_authenticatorStatusCodes:]
  -[NSURLSessionConfiguration waitsForConnectivity]
  -[NSURLSessionConfiguration _watchExtensionBundleIdentifier]
  -[NSURLSessionConfiguration set_supportsAVAssetDownloads:]
  -[NSURLSessionConfiguration set_alternativeServicesStorage:]
  -[NSURLSessionConfiguration set_allowsTLSSessionResumption:]
  -[NSURLSessionConfiguration set_contentDispHeadEncFallback:]
  -[NSURLSessionConfiguration allowsExpensiveNetworkAccess]
  -[NSURLSessionConfiguration skip_download_unlink]
  -[NSURLSessionConfiguration dealloc]
  -[NSURLSessionConfiguration set_tlsTrustPinningPolicyName:]
  -[NSURLSessionConfiguration _allowsReachabilityCheck]
  -[NSURLSessionConfiguration _tlsTrustPinningPolicyName]
  -[NSURLSessionConfiguration set_requiresClientToOpenFiles:]
  -[NSURLSessionConfiguration set_disablesUseOfProxySession:]
  -[NSURLSessionConfiguration set_overriddenDelegateOptions:]
  -[NSURLSessionConfiguration _supportsAVAssetDownloads]
  -[NSURLSessionConfiguration setHTTPAdditionalHeaders:]
  -[NSURLSessionConfiguration connectionProxyDictionary]
  -[NSURLSessionConfiguration _TCPAdaptiveReadTimeout]
  -[NSURLSessionConfiguration _companionAppBundleIdentifier]
  -[NSURLSessionConfiguration set_allowsWCA:]
  -[NSURLSessionConfiguration _allowsTCPFastOpen]
  -[NSURLSessionConfiguration setHTTPShouldUsePipelining:]
  -[NSURLSessionConfiguration _sourceApplicationSecondaryIdentifier]
  -[NSURLSessionConfiguration _disablesUseOfProxySession]
  -[NSURLSessionConfiguration copyImmutableVariant:]
  -[NSURLSessionConfiguration _allowsTLSSessionResumption]
  -[NSURLSessionConfiguration _CTDataConnectionServiceType]
  -[NSURLSessionConfiguration _allowsIndefiniteConnections]
  -[NSURLSessionConfiguration _tcpConnectionPoolName]
  -[NSURLSessionConfiguration setSharedContainerIdentifier:]
  -[NSURLSessionConfiguration setHTTPCookieAcceptPolicy:]
  -[NSURLSessionConfiguration set_phskip_credStorageSet:]
  -[NSURLSessionConfiguration set_phskip_hstsStorageSet:]
  -[NSURLSessionConfiguration setPipeliningLowWatermark:]
  -[NSURLSessionConfiguration set_preventsDirectWiFiAccess:]
  -[NSURLSessionConfiguration set_watchAppBundleIdentifier:]
  -[NSURLSessionConfiguration _contentDispHeadEncFallback]
  -[NSURLSessionConfiguration set_forcedNetworkServiceType:]
  -[NSURLSessionConfiguration set_tcpConnectionPoolName:]
  -[NSURLSessionConfiguration set_companionProxyPreference:]
  -[NSURLSessionConfiguration _customReadBufferSize]
  -[NSURLSessionConfiguration HTTPShouldSetCookies]
  -[NSURLSessionConfiguration _forcesNewConnections]
  -[NSURLSessionConfiguration _connectionCachePurgeTimeout]
  -[NSURLSessionConfiguration _connectionCacheNumFastLanes]
  -[NSURLSessionConfiguration _allowsMultipathTCP]
  -[NSURLSessionConfiguration _duetPreauthorized]
  -[NSURLSessionConfiguration set_allowsSensitiveLogging:]
  -[NSURLSessionConfiguration _phskip_urlCache]
  -[NSURLSessionConfiguration setSessionSendsLaunchEvents:]
  -[NSURLSessionConfiguration set_allowsTLSSessionTickets:]
  -[NSURLSessionConfiguration set_hstsStorage:]
  -[NSURLSessionConfiguration set_requiresPowerPluggedIn:]
  -[NSURLSessionConfiguration _requiresPowerPluggedIn]
  -[NSURLSessionConfiguration setNumFastLanes:]
  -[NSURLSessionConfiguration set_allowsHTTP3:]
  -[NSURLSessionConfiguration _preventsIdleSleep]
  -[NSURLSessionConfiguration set_onBehalfOfPairedDevice:]
  -[NSURLSessionConfiguration set_multipathAlternatePort:]
  -[NSURLSessionConfiguration setPipeliningHighWatermark:]
  -[NSURLSessionConfiguration _multipathAlternatePort]
  -[NSURLSessionConfiguration set_customReadBufferTimeout:]
  -[NSURLSessionConfiguration set_allowsReachabilityCheck:]
  -[NSURLSessionConfiguration _customReadBufferTimeout]
  -[NSURLSessionConfiguration _allowsTLSSessionTickets]
  -[NSURLSessionConfiguration _phskip_credStorageSet]
  -[NSURLSessionConfiguration set_phskip_cookieStorageSet:]
  -[NSURLSessionConfiguration _IDSMessageTimeout]
  -[NSURLSessionConfiguration _phskip_hstsStorageSet]
  -[NSURLSessionConfiguration set_usePipeliningHeuristics:]
  -[NSURLSessionConfiguration requestCachePolicy]
  -[NSURLSessionConfiguration _forcedNetworkServiceType]
  -[NSURLSessionConfiguration _expiredDNSBehavior]
  -[NSURLSessionConfiguration set_reportsDataStalls:]
  -[NSURLSessionConfiguration set_timingDataOptions:]
  -[NSURLSessionConfiguration set_allowsTCPFastOpen:]
  -[NSURLSessionConfiguration setMinimumFastLanePriority:]
  -[NSURLSessionConfiguration _onBehalfOfPairedDevice]
  -[NSURLSessionConfiguration set_allowsTLSFallback:]
  -[NSURLSessionConfiguration set_duetPreauthorized:]
  -[NSURLSessionConfiguration _phskip_cookieStorageSet]
  -[NSURLSessionConfiguration _allowsSensitiveLogging]
  -[NSURLSessionConfiguration set_connectionPoolName:]
  -[NSURLSessionConfiguration set_IDSMessageTimeout:]
  -[NSURLSessionConfiguration _phskip_cookieStorage]
  -[NSURLSessionConfiguration _authenticatorStatusCodes]
  -[NSURLSessionConfiguration set_allowsMultipathTCP:]
  -[NSURLSessionConfiguration _phskip_urlCacheSet]
  -[NSURLSessionConfiguration _usePipeliningHeuristics]
  -[NSURLSessionConfiguration pipeliningLowWatermark]
  -[NSURLSessionConfiguration _connectionPoolName]
  -[NSURLSessionConfiguration set_prefersInfraWiFi:]
  -[NSURLSessionConfiguration set_duetPreClearedMode:]
  -[NSURLSessionConfiguration setNumPriorityLevels:]
  -[NSURLSessionConfiguration set_preventsIdleSleep:]
  -[NSURLSessionConfiguration _duetPreClearedMode]
  -[NSURLSessionConfiguration _prefersInfraWiFi]
  -[NSURLSessionConfiguration set_phskip_credStorage:]
  -[NSURLSessionConfiguration set_phskip_urlCacheSet:]
  -[NSURLSessionConfiguration numPriorityLevels]
  -[NSURLSessionConfiguration _allowsPowerNapScheduling]
  -[NSURLSessionConfiguration _phskip_credStorage]
  -[NSURLSessionConfiguration set_proxySession:]
  -[NSURLSessionConfiguration setWaitsForConnectivity:]
  -[NSURLSessionConfiguration sessionSendsLaunchEvents]
  -[NSURLSessionConfiguration setHTTPShouldSetCookies:]
  -[NSURLSessionConfiguration set_performsEVCertCheck:]
  -[NSURLSessionConfiguration _phskip_hstsStorage]
  -[NSURLSessionConfiguration set_allowsTLSFalseStart:]
  -[NSURLSessionConfiguration set_appleIDContext:]
  -[NSURLSessionConfiguration setTimeoutIntervalForResource:]
  -[NSURLSessionConfiguration set_phskip_hstsStorage:]
  -[NSURLSessionConfiguration pipeliningHighWatermark]
  -[NSURLSessionConfiguration minimumFastLanePriority]
  -[NSURLSessionConfiguration set_expiredDNSBehavior:]
  -[NSURLSessionConfiguration set_loggingPrivacyLevel:]
  -[NSURLSessionConfiguration setSkip_download_unlink:]
  -[NSURLSessionConfiguration _copyAttribute:]
  -[NSURLSessionConfiguration isBackgroundSession]
  -[NSURLSessionConfiguration _preventsDirectWiFiAccess]
  -[NSURLSessionConfiguration _watchAppBundleIdentifier]
  -[NSURLSessionConfiguration set_customReadBufferSize:]
  -[NSURLSessionConfiguration _allowsTLSFalseStart]
  -[NSURLSessionConfiguration set_phskip_cookieStorage:]
  -[NSURLSessionConfiguration set_forcesNewConnections:]
  -[NSURLSessionConfiguration _performsEVCertCheck]
  -[NSURLSessionConfiguration _allowsTLSFallback]
  -[NSURLSessionConfiguration set_phskip_urlCache:]
  -[NSURLSessionConfiguration _companionProxyPreference]
  -[NSURLSessionConfiguration setIdentifier:]
  -[NSURLSessionConfiguration setTLSMaximumSupportedProtocolVersion:]
  -[NSURLSessionConfiguration _connectionCacheCellPurgeTimeout]
  -[NSURLSessionConfiguration encodeWithCoder:]
  -[NSURLSessionConfiguration identifier]
  -[NSURLSessionConfiguration HTTPShouldUsePipelining]
  -[NSURLSessionConfiguration setDiscretionary:]
  -[NSURLSessionConfiguration multipathServiceType]
  -[NSURLSessionConfiguration setBackgroundSession:]
  -[NSURLSessionConfiguration _preventsAppSSO]
  -[NSURLSessionConfiguration setTLSMinimumSupportedProtocolVersion:]
  -[NSURLSessionConfiguration protocolClasses]
  -[NSURLSessionConfiguration _allowsExpensiveAccess]
  -[NSURLSessionConfiguration setDisposition:]
  -[NSURLSessionConfiguration setMultipathServiceType:]
  -[NSURLSessionConfiguration _shouldSkipPreferredClientCertificateLookup]
  -[NSURLSessionConfiguration isEqual:]
  -[NSURLSessionConfiguration set_sourceApplicationSecondaryIdentifier:]
  -[NSURLSessionConfiguration isDiscretionary]
  -[NSURLSessionConfiguration timeoutIntervalForRequest]
  -[NSURLSessionConfiguration mutableCopyWithZone:]
  -[NSURLSessionConfiguration _sourceApplicationBundleIdentifier]
  -[NSURLSessionConfiguration set_allowsPowerNapScheduling:]
  -[NSURLSessionConfiguration _preventsSystemHTTPProxyAuthentication]
  -[NSURLSessionConfiguration setNetworkServiceType:]
  -[NSURLSessionConfiguration _socketStreamProperties]
  -[NSURLSessionConfiguration setTimeoutIntervalForRequest:]
  -[NSURLSessionConfiguration initWithCoder:]
  -[NSURLSessionConfiguration setAllowsCellularAccess:]
  -[NSURLSessionConfiguration set_preventsAppSSO:]
  -[NSURLSessionConfiguration _requiresSecureHTTPSProxyConnection]


(NSURLSession_Additions)
	// instance methods
	-[(NSURLSession_Additions) _isSafeResumeDataForBackgroundDownload]
	-[(NSURLSession_Additions) _requestFromResumeData]

(NSURLSession_Additions)
	// instance methods
	-[(NSURLSession_Additions) _isSafeFileForBackgroundUpload:withToken:]
	-[(NSURLSession_Additions) _isSafeDirectoryForDownloads:withToken:]
	-[(NSURLSession_Additions) _isSafeFileForBackgroundUploadForMe]

01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0800 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPipe 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLError 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
