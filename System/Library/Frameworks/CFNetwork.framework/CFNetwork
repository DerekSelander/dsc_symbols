|| __DATA.__data _CFNetDiagnosticNotifyKey
|| __DATA.__data _kNSURLSessionLaunchOnDemandClientIdentifierKey
|| __DATA.__data _kNSURLSessionLaunchOnDemandNotificationName
|| __DATA.__data _kNSURLSessionLaunchOnDemandSessionIdentifierKey
|| __DATA.__objc_data _OBJC_CLASS_$_AVAssetDownloadTask
|| __DATA.__objc_data _OBJC_CLASS_$_NSGZipDecoder
|| __DATA.__objc_data _OBJC_CLASS_$_NSHost
|| __DATA.__objc_data _OBJC_CLASS_$_NSNetService
|| __DATA.__objc_data _OBJC_CLASS_$_NSNetServiceBrowser
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLDownload
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLSessionAVAggregateAssetDownloadTask
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLSessionAVAssetDownloadTask
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLSessionStreamTask
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLSessionTaskDependency
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLSessionTaskDependencyDescription
|| __DATA.__objc_data _OBJC_CLASS_$_NSURLSessionWebSocketMessage
|| __DATA.__objc_data _OBJC_CLASS_$__NSCFServer
|| __DATA.__objc_data _OBJC_CLASS_$__NSHTTPConnectionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAssetDownloadTask
|| __DATA.__objc_data _OBJC_METACLASS_$_NSGZipDecoder
|| __DATA.__objc_data _OBJC_METACLASS_$_NSHost
|| __DATA.__objc_data _OBJC_METACLASS_$_NSNetService
|| __DATA.__objc_data _OBJC_METACLASS_$_NSNetServiceBrowser
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLDownload
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLSessionAVAggregateAssetDownloadTask
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLSessionAVAssetDownloadTask
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLSessionStreamTask
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLSessionTaskDependency
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLSessionTaskDependencyDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_NSURLSessionWebSocketMessage
|| __DATA.__objc_data _OBJC_METACLASS_$__NSCFServer
|| __DATA.__objc_data _OBJC_METACLASS_$__NSHTTPConnectionInfo
|| __DATA_CONST.__const _CFNetDiagnosticProtocolFTP
|| __DATA_CONST.__const _CFNetDiagnosticProtocolHTTP
|| __DATA_CONST.__const _CFNetDiagnosticProtocolIMAP
|| __DATA_CONST.__const _CFNetDiagnosticProtocolOSCAR
|| __DATA_CONST.__const _CFNetDiagnosticProtocolSMTP
|| __DATA_CONST.__const _CFNetDiagnosticProtocolUnknown
|| __DATA_CONST.__const _NSHTTPCookieComment
|| __DATA_CONST.__const _NSHTTPCookieCommentURL
|| __DATA_CONST.__const _NSHTTPCookieDiscard
|| __DATA_CONST.__const _NSHTTPCookieDomain
|| __DATA_CONST.__const _NSHTTPCookieExpires
|| __DATA_CONST.__const _NSHTTPCookieManagerAcceptPolicyChangedNotification
|| __DATA_CONST.__const _NSHTTPCookieManagerCookiesChangedNotification
|| __DATA_CONST.__const _NSHTTPCookieMaximumAge
|| __DATA_CONST.__const _NSHTTPCookieName
|| __DATA_CONST.__const _NSHTTPCookieOriginURL
|| __DATA_CONST.__const _NSHTTPCookiePath
|| __DATA_CONST.__const _NSHTTPCookiePort
|| __DATA_CONST.__const _NSHTTPCookieSameSiteLax
|| __DATA_CONST.__const _NSHTTPCookieSameSitePolicy
|| __DATA_CONST.__const _NSHTTPCookieSameSiteStrict
|| __DATA_CONST.__const _NSHTTPCookieSecure
|| __DATA_CONST.__const _NSHTTPCookieValue
|| __DATA_CONST.__const _NSHTTPCookieVersion
|| __DATA_CONST.__const _NSNetServicesErrorCode
|| __DATA_CONST.__const _NSNetServicesErrorDomain
|| __DATA_CONST.__const _NSTCPConnectionConditionsUnmetReasonErrorDomain
|| __DATA_CONST.__const _NSURLAuthenticationMethodClientCertificate
|| __DATA_CONST.__const _NSURLAuthenticationMethodDefault
|| __DATA_CONST.__const _NSURLAuthenticationMethodHTMLForm
|| __DATA_CONST.__const _NSURLAuthenticationMethodHTTPBasic
|| __DATA_CONST.__const _NSURLAuthenticationMethodHTTPDigest
|| __DATA_CONST.__const _NSURLAuthenticationMethodNTLM
|| __DATA_CONST.__const _NSURLAuthenticationMethodNegotiate
|| __DATA_CONST.__const _NSURLAuthenticationMethodOAuth
|| __DATA_CONST.__const _NSURLAuthenticationMethodServerTrust
|| __DATA_CONST.__const _NSURLAuthenticationMethodXMobileMeAuthToken
|| __DATA_CONST.__const _NSURLConnectionBackgroundDownloadCompletedInvocation
|| __DATA_CONST.__const _NSURLConnectionBackgroundDownloadDestinationURL
|| __DATA_CONST.__const _NSURLConnectionBackgroundDownloadIdentifier
|| __DATA_CONST.__const _NSURLConnectionBackgroundDownloadMediaKind
|| __DATA_CONST.__const _NSURLConnectionBackgroundDownloadPreCompletedInvocation
|| __DATA_CONST.__const _NSURLConnectionIsBackgroundDownload
|| __DATA_CONST.__const _NSURLCredentialStorageChangedNotification
|| __DATA_CONST.__const _NSURLCredentialStorageRemoveSynchronizableCredentials
|| __DATA_CONST.__const _NSURLProtectionSpaceFTP
|| __DATA_CONST.__const _NSURLProtectionSpaceFTPProxy
|| __DATA_CONST.__const _NSURLProtectionSpaceHTTP
|| __DATA_CONST.__const _NSURLProtectionSpaceHTTPProxy
|| __DATA_CONST.__const _NSURLProtectionSpaceHTTPS
|| __DATA_CONST.__const _NSURLProtectionSpaceHTTPSProxy
|| __DATA_CONST.__const _NSURLProtectionSpaceSOCKSProxy
|| __DATA_CONST.__const _NSURLSessionDownloadTaskResumeData
|| __DATA_CONST.__const _NSURLSessionProxyErrorDomain
|| __DATA_CONST.__const _NSURLSessionSourceApplicationBundleIdentifierIsExternal
|| __DATA_CONST.__const _NSURLSessionTaskOriginalStartTimeKey
|| __DATA_CONST.__const __NSServerConfigurationOutboundConnectionProxyDictionary
|| __DATA_CONST.__const __NSServerConfigurationSOCKS5ServerCredentials
|| __DATA_CONST.__const __NSURLErrorWebSocketHandshakeFailureReasonKey
|| __DATA_CONST.__const __kATSAllowsArbitraryLoadsForMediaKey
|| __DATA_CONST.__const __kCFHTTPCookiePolicyPropertyIsTopLevelNavigation
|| __DATA_CONST.__const __kCFHTTPCookiePolicyPropertySiteForCookies
|| __DATA_CONST.__const __kCFHTTPServerAllInterfacesIdentifier
|| __DATA_CONST.__const __kCFHTTPServerAllowAnonymousServer
|| __DATA_CONST.__const __kCFHTTPServerBoundInterfaceIdentifier
|| __DATA_CONST.__const __kCFHTTPServerConnectionClientTrust
|| __DATA_CONST.__const __kCFHTTPServerConnectionMaxRequestBufferSize
|| __DATA_CONST.__const __kCFHTTPServerConnectionPeer
|| __DATA_CONST.__const __kCFHTTPServerConnectionPeerCerts
|| __DATA_CONST.__const __kCFHTTPServerConnectionServer
|| __DATA_CONST.__const __kCFHTTPServerErrorDomain
|| __DATA_CONST.__const __kCFHTTPServerFailingRequest
|| __DATA_CONST.__const __kCFHTTPServerFailingResponse
|| __DATA_CONST.__const __kCFHTTPServerHTTPServiceType
|| __DATA_CONST.__const __kCFHTTPServerIdleTimeout
|| __DATA_CONST.__const __kCFHTTPServerKeychain
|| __DATA_CONST.__const __kCFHTTPServerName
|| __DATA_CONST.__const __kCFHTTPServerRequestConnection
|| __DATA_CONST.__const __kCFHTTPServerRequestHTTPVersion
|| __DATA_CONST.__const __kCFHTTPServerRequestHeaderOrderKey
|| __DATA_CONST.__const __kCFHTTPServerRequestHeaderValuesKey
|| __DATA_CONST.__const __kCFHTTPServerRequestHeaders
|| __DATA_CONST.__const __kCFHTTPServerRequestMethod
|| __DATA_CONST.__const __kCFHTTPServerRequestPath
|| __DATA_CONST.__const __kCFHTTPServerRequestURL
|| __DATA_CONST.__const __kCFHTTPServerRequireClientCertificate
|| __DATA_CONST.__const __kCFHTTPServerResponseConnection
|| __DATA_CONST.__const __kCFHTTPServerResponseMessage
|| __DATA_CONST.__const __kCFHTTPServerResponseRequest
|| __DATA_CONST.__const __kCFHTTPServerSSLSettings
|| __DATA_CONST.__const __kCFHTTPServerServerIdentity
|| __DATA_CONST.__const __kCFHTTPServerServerTrustChain
|| __DATA_CONST.__const __kCFHTTPServerServicePort
|| __DATA_CONST.__const __kCFHTTPServerServiceType
|| __DATA_CONST.__const __kCFHTTPServerStreamSSLSettings
|| __DATA_CONST.__const __kCFHTTPServerWatchdogTimeout
|| __DATA_CONST.__const __kCFHostByPassMasterAddressLookupString
|| __DATA_CONST.__const __kCFHostConnectByNamePortString
|| __DATA_CONST.__const __kCFHostIPv4AddressesString
|| __DATA_CONST.__const __kCFHostIPv6AddressesString
|| __DATA_CONST.__const __kCFHostMasterAddressLookupString
|| __DATA_CONST.__const __kCFHostProcessedDNSTypeSRVHostInfoString
|| __DATA_CONST.__const __kCFHostProcessedDNSTypeSRVString
|| __DATA_CONST.__const __kCFNetworkHSTSExpiry
|| __DATA_CONST.__const __kCFNetworkHSTSIncludeSubDomains
|| __DATA_CONST.__const __kCFNetworkHSTSPreloaded
|| __DATA_CONST.__const __kCFNullHostInfoTypeString
|| __DATA_CONST.__const __kCFStreamErrorCodeKey
|| __DATA_CONST.__const __kCFStreamErrorDomainKey
|| __DATA_CONST.__const __kCFStreamPropertyAllowConstrainedNetworkAccess
|| __DATA_CONST.__const __kCFStreamPropertyAllowExpensiveAccess
|| __DATA_CONST.__const __kCFStreamPropertyConnectionIsExpensive
|| __DATA_CONST.__const __kCFStreamPropertyConnectionStatistics
|| __DATA_CONST.__const __kCFStreamPropertyConnectionViabilityChangedBlock
|| __DATA_CONST.__const __kCFStreamPropertyDNSIncludeAWDL
|| __DATA_CONST.__const __kCFStreamPropertyDNSIncludeP2P
|| __DATA_CONST.__const __kCFStreamPropertyEnableConnectionStatistics
|| __DATA_CONST.__const __kCFStreamPropertyFTPLogInOnly
|| __DATA_CONST.__const __kCFStreamPropertyFTPRemoveResource
|| __DATA_CONST.__const __kCFStreamPropertyIndefiniteConnectionKickInterval
|| __DATA_CONST.__const __kCFStreamPropertyLargeDownload
|| __DATA_CONST.__const __kCFStreamPropertyLocalAddressPreference
|| __DATA_CONST.__const __kCFStreamPropertyLowThroughputBlock
|| __DATA_CONST.__const __kCFStreamPropertyLowThroughputThreshold
|| __DATA_CONST.__const __kCFStreamPropertyNPNProtocolsAvailable
|| __DATA_CONST.__const __kCFStreamPropertyNPNSelectedProtocol
|| __DATA_CONST.__const __kCFStreamPropertyNoCompanion
|| __DATA_CONST.__const __kCFStreamPropertyProhibitInfraWiFi
|| __DATA_CONST.__const __kCFStreamPropertyQOSClass
|| __DATA_CONST.__const __kCFStreamPropertyRaceTCPQUICForDomains
|| __DATA_CONST.__const __kCFStreamPropertySSLClientCertificateState
|| __DATA_CONST.__const __kCFStreamPropertySSLClientCertificates
|| __DATA_CONST.__const __kCFStreamPropertySSLClientSideAuthentication
|| __DATA_CONST.__const __kCFStreamPropertySSLNegotiatedCipher
|| __DATA_CONST.__const __kCFStreamPropertySSLNegotiatedProtocol
|| __DATA_CONST.__const __kCFStreamPropertySocketImmediateBufferSize
|| __DATA_CONST.__const __kCFStreamPropertySocketImmediateBufferTimeOut
|| __DATA_CONST.__const __kCFStreamPropertySocketLowPriorityIO
|| __DATA_CONST.__const __kCFStreamPropertyTCPAdaptiveReadTimeout
|| __DATA_CONST.__const __kCFStreamPropertyTCPAdaptiveWriteTimeout
|| __DATA_CONST.__const __kCFStreamPropertyTCPConnectionMetadata
|| __DATA_CONST.__const __kCFStreamPropertyTCPInfo
|| __DATA_CONST.__const __kCFStreamPropertyTCPKeepAliveOffload
|| __DATA_CONST.__const __kCFStreamPropertyTCPKeepAliveParameters
|| __DATA_CONST.__const __kCFStreamPropertyWatchdogTimeout
|| __DATA_CONST.__const __kCFStreamSSLDisableEphemeralDiffieHellmanCiphers
|| __DATA_CONST.__const __kCFStreamSSLShouldSetPeerID
|| __DATA_CONST.__const __kCFStreamSSLTrustedLeafCertificates
|| __DATA_CONST.__const __kCFStreamSSLUseFalseStart
|| __DATA_CONST.__const __kCFStreamSocketEnableECN
|| __DATA_CONST.__const __kCFStreamSocketSetNoDelay
|| __DATA_CONST.__const __kCFStreamSocketSetRecvAnyIf
|| __DATA_CONST.__const __kCFURLCachePartitionKey
|| __DATA_CONST.__const __kCFURLConnectionPropertyATSContext
|| __DATA_CONST.__const __kCFURLConnectionPropertyATSFrameworkOverrides
|| __DATA_CONST.__const __kCFURLConnectionPropertyRespectConnectionClose
|| __DATA_CONST.__const __kCFURLConnectionPropertyShouldReportTimingDataToAWD
|| __DATA_CONST.__const __kCFURLConnectionPropertyShouldSniff
|| __DATA_CONST.__const __kCFURLConnectionPropertyTimingDataOptions
|| __DATA_CONST.__const __kCFURLConnectionSessionDelegate
|| __DATA_CONST.__const __kCFURLConnectionSessionEventConnectionDidFail
|| __DATA_CONST.__const __kCFURLConnectionSessionEventConnectionDidFinishLoading
|| __DATA_CONST.__const __kCFURLConnectionSessionEventConnectionDidReceiveData
|| __DATA_CONST.__const __kCFURLConnectionSessionEventConnectionDidReceiveResponse
|| __DATA_CONST.__const __kCFURLConnectionSessionEventConnectionRequiresAuth
|| __DATA_CONST.__const __kCFURLConnectionSessionEventConnectionTerminating
|| __DATA_CONST.__const __kCFURLConnectionSessionHTTPLoaderLimits
|| __DATA_CONST.__const __kCFURLErrorAuthFailedResponseKey
|| __DATA_CONST.__const __kCFURLStorageSessionIsPrivate
|| __DATA_CONST.__const __kCFURLStorageSessionProcessSharing
|| __DATA_CONST.__const __kTCPKeepAliveParametersEnabled
|| __DATA_CONST.__const __kTCPKeepAliveParametersIdleTime
|| __DATA_CONST.__const __kTCPKeepAliveParametersInterval
|| __DATA_CONST.__const _kCFDNSServiceFailureKey
|| __DATA_CONST.__const _kCFErrorDomainCFNetwork
|| __DATA_CONST.__const _kCFErrorDomainWinSock
|| __DATA_CONST.__const _kCFFTPResourceGroup
|| __DATA_CONST.__const _kCFFTPResourceLink
|| __DATA_CONST.__const _kCFFTPResourceModDate
|| __DATA_CONST.__const _kCFFTPResourceMode
|| __DATA_CONST.__const _kCFFTPResourceName
|| __DATA_CONST.__const _kCFFTPResourceOwner
|| __DATA_CONST.__const _kCFFTPResourceSize
|| __DATA_CONST.__const _kCFFTPResourceType
|| __DATA_CONST.__const _kCFFTPStatusCodeKey
|| __DATA_CONST.__const _kCFGetAddrInfoFailureKey
|| __DATA_CONST.__const _kCFHTTPAuthenticationAccountDomain
|| __DATA_CONST.__const _kCFHTTPAuthenticationPassword
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeBasic
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeDigest
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeKerberos
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeNTLM
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeNegotiate
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeNegotiate2
|| __DATA_CONST.__const _kCFHTTPAuthenticationSchemeXMobileMeAuthToken
|| __DATA_CONST.__const _kCFHTTPAuthenticationUsername
|| __DATA_CONST.__const _kCFHTTPCookieDomain
|| __DATA_CONST.__const _kCFHTTPCookieLocalFileDomain
|| __DATA_CONST.__const _kCFHTTPCookieName
|| __DATA_CONST.__const _kCFHTTPCookiePath
|| __DATA_CONST.__const _kCFHTTPCookieValue
|| __DATA_CONST.__const _kCFHTTPRedirectionResponse
|| __DATA_CONST.__const _kCFHTTPVersion1_0
|| __DATA_CONST.__const _kCFHTTPVersion1_1
|| __DATA_CONST.__const _kCFHTTPVersion2_0
|| __DATA_CONST.__const _kCFHostAddressesString
|| __DATA_CONST.__const _kCFHostDNSTypeSRVString
|| __DATA_CONST.__const _kCFHostNamesString
|| __DATA_CONST.__const _kCFHostReachabilityString
|| __DATA_CONST.__const _kCFNetDiagnosticPingOptionDataLength
|| __DATA_CONST.__const _kCFNetDiagnosticPingOptionPacketCount
|| __DATA_CONST.__const _kCFNetDiagnosticPingOptionTimeout
|| __DATA_CONST.__const _kCFNetDiagnosticPingOptionTrafficClass
|| __DATA_CONST.__const _kCFNetDiagnosticPingOptionTypeOfService
|| __DATA_CONST.__const _kCFNetworkProxiesHTTPEnable
|| __DATA_CONST.__const _kCFNetworkProxiesHTTPPort
|| __DATA_CONST.__const _kCFNetworkProxiesHTTPProxy
|| __DATA_CONST.__const _kCFNetworkProxiesProxyAutoConfigEnable
|| __DATA_CONST.__const _kCFNetworkProxiesProxyAutoConfigJavaScript
|| __DATA_CONST.__const _kCFNetworkProxiesProxyAutoConfigURLString
|| __DATA_CONST.__const _kCFProxyAutoConfigurationHTTPResponseKey
|| __DATA_CONST.__const _kCFProxyAutoConfigurationJavaScriptKey
|| __DATA_CONST.__const _kCFProxyAutoConfigurationURLKey
|| __DATA_CONST.__const _kCFProxyHostNameKey
|| __DATA_CONST.__const _kCFProxyPasswordKey
|| __DATA_CONST.__const _kCFProxyPortNumberKey
|| __DATA_CONST.__const _kCFProxyTypeAutoConfigurationJavaScript
|| __DATA_CONST.__const _kCFProxyTypeAutoConfigurationURL
|| __DATA_CONST.__const _kCFProxyTypeFTP
|| __DATA_CONST.__const _kCFProxyTypeHTTP
|| __DATA_CONST.__const _kCFProxyTypeHTTPS
|| __DATA_CONST.__const _kCFProxyTypeKey
|| __DATA_CONST.__const _kCFProxyTypeNone
|| __DATA_CONST.__const _kCFProxyTypeSOCKS
|| __DATA_CONST.__const _kCFProxyUsernameKey
|| __DATA_CONST.__const _kCFSOCKSNegotiationMethodKey
|| __DATA_CONST.__const _kCFSOCKSStatusCodeKey
|| __DATA_CONST.__const _kCFSOCKSVersionKey
|| __DATA_CONST.__const _kCFStreamNetworkServiceType
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeAVStreaming
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeBackground
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeBackgroundSystemInitiated
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeCallSignaling
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeNetworkControl
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeOAM
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeResponsiveAV
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeResponsiveData
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeVideo
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeVoIP
|| __DATA_CONST.__const _kCFStreamNetworkServiceTypeVoice
|| __DATA_CONST.__const _kCFStreamPropertyAccountIdentifier
|| __DATA_CONST.__const _kCFStreamPropertyAllowConstrainedNetworkAccess
|| __DATA_CONST.__const _kCFStreamPropertyAllowExpensiveNetworkAccess
|| __DATA_CONST.__const _kCFStreamPropertyBoundInterfaceIdentifier
|| __DATA_CONST.__const _kCFStreamPropertyCONNECTAdditionalHeaders
|| __DATA_CONST.__const _kCFStreamPropertyCONNECTProxy
|| __DATA_CONST.__const _kCFStreamPropertyCONNECTProxyHost
|| __DATA_CONST.__const _kCFStreamPropertyCONNECTProxyPort
|| __DATA_CONST.__const _kCFStreamPropertyCONNECTResponse
|| __DATA_CONST.__const _kCFStreamPropertyConditionalConnectionProperties
|| __DATA_CONST.__const _kCFStreamPropertyConnectionFallbackEnabled
|| __DATA_CONST.__const _kCFStreamPropertyConnectionFastFallbackEnabled
|| __DATA_CONST.__const _kCFStreamPropertyConnectionIsCellular
|| __DATA_CONST.__const _kCFStreamPropertyConnectionIsExpensive
|| __DATA_CONST.__const _kCFStreamPropertyConnectionIsMultipath
|| __DATA_CONST.__const _kCFStreamPropertyDUETConditional
|| __DATA_CONST.__const _kCFStreamPropertyDataConnectionServiceType
|| __DATA_CONST.__const _kCFStreamPropertyDataContextIdentifier
|| __DATA_CONST.__const _kCFStreamPropertyDataContextOnDemand
|| __DATA_CONST.__const _kCFStreamPropertyFTPAttemptPersistentConnection
|| __DATA_CONST.__const _kCFStreamPropertyFTPFetchResourceInfo
|| __DATA_CONST.__const _kCFStreamPropertyFTPFileTransferOffset
|| __DATA_CONST.__const _kCFStreamPropertyFTPPassword
|| __DATA_CONST.__const _kCFStreamPropertyFTPProxy
|| __DATA_CONST.__const _kCFStreamPropertyFTPProxyHost
|| __DATA_CONST.__const _kCFStreamPropertyFTPProxyPassword
|| __DATA_CONST.__const _kCFStreamPropertyFTPProxyPort
|| __DATA_CONST.__const _kCFStreamPropertyFTPProxyUser
|| __DATA_CONST.__const _kCFStreamPropertyFTPResourceSize
|| __DATA_CONST.__const _kCFStreamPropertyFTPUsePassiveMode
|| __DATA_CONST.__const _kCFStreamPropertyFTPUserName
|| __DATA_CONST.__const _kCFStreamPropertyHTTPAttemptPersistentConnection
|| __DATA_CONST.__const _kCFStreamPropertyHTTPFinalRequest
|| __DATA_CONST.__const _kCFStreamPropertyHTTPFinalURL
|| __DATA_CONST.__const _kCFStreamPropertyHTTPProxy
|| __DATA_CONST.__const _kCFStreamPropertyHTTPProxyHost
|| __DATA_CONST.__const _kCFStreamPropertyHTTPProxyPort
|| __DATA_CONST.__const _kCFStreamPropertyHTTPRequestBytesWrittenCount
|| __DATA_CONST.__const _kCFStreamPropertyHTTPResponseHeader
|| __DATA_CONST.__const _kCFStreamPropertyHTTPSProxyHost
|| __DATA_CONST.__const _kCFStreamPropertyHTTPSProxyPort
|| __DATA_CONST.__const _kCFStreamPropertyHTTPShouldAutoredirect
|| __DATA_CONST.__const _kCFStreamPropertyHTTPUseSystemProxySettings
|| __DATA_CONST.__const _kCFStreamPropertyIndefiniteConnection
|| __DATA_CONST.__const _kCFStreamPropertyInterfaceIdentifier
|| __DATA_CONST.__const _kCFStreamPropertyMPTCPConnectedSubflowCount
|| __DATA_CONST.__const _kCFStreamPropertyMPTCPPrimarySubflowInterfaceName
|| __DATA_CONST.__const _kCFStreamPropertyMPTCPSubflowCount
|| __DATA_CONST.__const _kCFStreamPropertyMPTCPSubflowSwitchCounts
|| __DATA_CONST.__const _kCFStreamPropertyNoCellular
|| __DATA_CONST.__const _kCFStreamPropertyOpportunisticConnection
|| __DATA_CONST.__const _kCFStreamPropertyPersistentConnection
|| __DATA_CONST.__const _kCFStreamPropertyProxyLocalBypass
|| __DATA_CONST.__const _kCFStreamPropertySSLContext
|| __DATA_CONST.__const _kCFStreamPropertySSLPeerCertificates
|| __DATA_CONST.__const _kCFStreamPropertySSLPeerTrust
|| __DATA_CONST.__const _kCFStreamPropertySSLSettings
|| __DATA_CONST.__const _kCFStreamPropertySocketExtendedBackgroundIdleMode
|| __DATA_CONST.__const _kCFStreamPropertySocketRemoteHost
|| __DATA_CONST.__const _kCFStreamPropertySocketRemoteNetService
|| __DATA_CONST.__const _kCFStreamPropertySourceApplication
|| __DATA_CONST.__const _kCFStreamPropertySourceApplicationBundleIdentifier
|| __DATA_CONST.__const _kCFStreamSSLAllowsAnyRoot
|| __DATA_CONST.__const _kCFStreamSSLAllowsExpiredCertificates
|| __DATA_CONST.__const _kCFStreamSSLAllowsExpiredRoots
|| __DATA_CONST.__const _kCFStreamSSLCertificates
|| __DATA_CONST.__const _kCFStreamSSLEnabledCiphers
|| __DATA_CONST.__const _kCFStreamSSLIsServer
|| __DATA_CONST.__const _kCFStreamSSLLevel
|| __DATA_CONST.__const _kCFStreamSSLPSKIdentity
|| __DATA_CONST.__const _kCFStreamSSLPSKSharedSecret
|| __DATA_CONST.__const _kCFStreamSSLPeerName
|| __DATA_CONST.__const _kCFStreamSSLValidatesCertificateChain
|| __DATA_CONST.__const _kCFStreamSocketSecurityLevelTLSv1SSLv3
|| __DATA_CONST.__const _kCFStreamSocketSecurityLevelTLSv1_0
|| __DATA_CONST.__const _kCFStreamSocketSecurityLevelTLSv1_0SSLv3
|| __DATA_CONST.__const _kCFStreamSocketSecurityLevelTLSv1_1
|| __DATA_CONST.__const _kCFStreamSocketSecurityLevelTLSv1_2
|| __DATA_CONST.__const _kCFURLConnectionProhibitAuthChallengeUI
|| __DATA_CONST.__const _kCFURLConnectionPropertyStrictContentLength
|| __DATA_CONST.__const _kCFURLConnectionSocketStreamProperties
|| __DATA_CONST.__const _kCFURLConnectionSuspensionThreshold
|| __DATA_CONST.__const _kCFURLConnectionURLConnectionProperties
|| __DATA_CONST.__const _kCFURLCredentialKerberosTicketAllowDelegation
|| __DATA_CONST.__const _kCFURLErrorFailingURLErrorKey
|| __DATA_CONST.__const _kCFURLErrorFailingURLStringErrorKey
|| __DATA_CONST.__const _kCFURLErrorPeerAddressKey
|| __DATA_CONST.__const _kCFURLRequestAllowAllPOSTCaching
|| __DATA_CONST.__const _kCFURLRequestContentDecoderSkipURLCheck
|| __DATA_CONST.__const _kCFURLRequestDoNotDecodeData
|| __DATA_CONST.__const _kCFURLRequestPreAuthXMMeAuthToken
|| __DATA_CONST.__const _kConditionalConnectionActivityName
|| __DATA_CONST.__const _kConditionalConnectionClientOptInDiscretionary
|| __DATA_CONST.__const _kConditionalConnectionInTransitionalDiscretionaryPeriod
|| __DATA_CONST.__const _kConditionalConnectionIsDiscretionary
|| __DATA_CONST.__const _kConditionalConnectionIsUpload
|| __DATA_CONST.__const _kConditionalConnectionOnBehalfOfPairedDevice
|| __DATA_CONST.__const _kConditionalConnectionRequirementDuetPreClearedMode
|| __DATA_CONST.__const _kConditionalConnectionRequirementPowerPluggedIn
|| __DATA_CONST.__const _kConditionalConnectionRequirementTimeWindowDelay
|| __DATA_CONST.__const _kConditionalConnectionRequirementTimeWindowDuration
|| __DATA_CONST.__const _kConditionalConnectionRequirementWorkload
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAssetDownloadURLSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCachedURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSHTTPCookie
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSHTTPCookieStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSHTTPURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSMutableURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLAuthenticationChallenge
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLCredential
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLCredentialStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLProtectionSpace
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLProtocol
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionDataTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionDownloadTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionEffectiveConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionMutableEffectiveConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionTaskDependencyTree
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionTaskMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionTaskTransactionMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionUploadTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSURLSessionWebSocketTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__NSURLSessionConnectionBeginProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__NSURLSessionConnectionEstablishProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$___NSCFURLSessionTaskInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$___NSCFURLSessionXPC
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$___NSURLSessionStatistics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAssetDownloadURLSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCachedURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSHTTPCookie
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSHTTPCookieStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSHTTPURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSMutableURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLAuthenticationChallenge
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLCredential
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLCredentialStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLProtectionSpace
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLProtocol
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionDataTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionDownloadTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionEffectiveConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionMutableEffectiveConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionTaskDependencyTree
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionTaskMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionTaskTransactionMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionUploadTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSURLSessionWebSocketTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__NSURLSessionConnectionBeginProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__NSURLSessionConnectionEstablishProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$___NSCFURLSessionTaskInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$___NSCFURLSessionXPC
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$___NSURLSessionStatistics
|| __TEXT.__const _NSURLSessionDefaultLoadingPriority
|| __TEXT.__const _NSURLSessionTaskPriorityDefault
|| __TEXT.__const _NSURLSessionTaskPriorityHigh
|| __TEXT.__const _NSURLSessionTaskPriorityLow
|| __TEXT.__const _NSURLSessionTransferSizeUnknown
|| __TEXT.__const _kCFStreamErrorDomainFTP
|| __TEXT.__const _kCFStreamErrorDomainHTTP
|| __TEXT.__const _kCFStreamErrorDomainMach
|| __TEXT.__const _kCFStreamErrorDomainNetDB
|| __TEXT.__const _kCFStreamErrorDomainNetServices
|| __TEXT.__const _kCFStreamErrorDomainSystemConfiguration
|| __TEXT.__const _kCFStreamErrorDomainWinSock
|| __TEXT.__const _kCFStreamErrorHTTPConnectionLost
|| __TEXT.__const _kCFURLResponseExpectedContentLengthUnknown
|| __TEXT.__text _CFCachedURLResponseCopyReceiverData
|| __TEXT.__text _CFCachedURLResponseCopyReceiverDataArray
|| __TEXT.__text _CFCachedURLResponseCopyWrappedRequest
|| __TEXT.__text _CFCachedURLResponseCreateWithData
|| __TEXT.__text _CFCachedURLResponseGetReceiverData
|| __TEXT.__text _CFCachedURLResponseGetStoragePolicy
|| __TEXT.__text _CFCachedURLResponseGetWrappedResponse
|| __TEXT.__text _CFCachedURLResponseSetStoragePolicy
|| __TEXT.__text _CFFTPCreateParsedResourceListing
|| __TEXT.__text _CFHTTPAuthenticationAppliesToRequest
|| __TEXT.__text _CFHTTPAuthenticationCopyDomains
|| __TEXT.__text _CFHTTPAuthenticationCopyMethod
|| __TEXT.__text _CFHTTPAuthenticationCopyRealm
|| __TEXT.__text _CFHTTPAuthenticationCreateFromResponse
|| __TEXT.__text _CFHTTPAuthenticationGetTypeID
|| __TEXT.__text _CFHTTPAuthenticationIsValid
|| __TEXT.__text _CFHTTPAuthenticationRequiresAccountDomain
|| __TEXT.__text _CFHTTPAuthenticationRequiresOrderedRequests
|| __TEXT.__text _CFHTTPAuthenticationRequiresUserNameAndPassword
|| __TEXT.__text _CFHTTPCookieCopyDomain
|| __TEXT.__text _CFHTTPCookieCopyName
|| __TEXT.__text _CFHTTPCookieCopyPath
|| __TEXT.__text _CFHTTPCookieCopyProperties
|| __TEXT.__text _CFHTTPCookieCopyRequestHeaderFields
|| __TEXT.__text _CFHTTPCookieCopyValue
|| __TEXT.__text _CFHTTPCookieCreateWithProperties
|| __TEXT.__text _CFHTTPCookieCreateWithResponseHeaderFields
|| __TEXT.__text _CFHTTPCookieGetExpirationTime
|| __TEXT.__text _CFHTTPCookieGetFlags
|| __TEXT.__text _CFHTTPCookieGetTypeID
|| __TEXT.__text _CFHTTPCookieIsHTTPOnly
|| __TEXT.__text _CFHTTPCookieIsSecure
|| __TEXT.__text _CFHTTPCookieStorageAddObserver
|| __TEXT.__text _CFHTTPCookieStorageCopyCookies
|| __TEXT.__text _CFHTTPCookieStorageCopyCookiesForURL
|| __TEXT.__text _CFHTTPCookieStorageCreateFromFile
|| __TEXT.__text _CFHTTPCookieStorageCreateFromIdentifyingData
|| __TEXT.__text _CFHTTPCookieStorageCreateIdentifyingData
|| __TEXT.__text _CFHTTPCookieStorageDeleteAllCookies
|| __TEXT.__text _CFHTTPCookieStorageDeleteCookie
|| __TEXT.__text _CFHTTPCookieStorageGetCookieAcceptPolicy
|| __TEXT.__text _CFHTTPCookieStorageRemoveObserver
|| __TEXT.__text _CFHTTPCookieStorageScheduleWithRunLoop
|| __TEXT.__text _CFHTTPCookieStorageSetCookie
|| __TEXT.__text _CFHTTPCookieStorageSetCookieAcceptPolicy
|| __TEXT.__text _CFHTTPCookieStorageSetCookies
|| __TEXT.__text _CFHTTPCookieStorageUnscheduleFromRunLoop
|| __TEXT.__text _CFHTTPMessageAddAuthentication
|| __TEXT.__text _CFHTTPMessageAppendBytes
|| __TEXT.__text _CFHTTPMessageApplyCredentialDictionary
|| __TEXT.__text _CFHTTPMessageApplyCredentials
|| __TEXT.__text _CFHTTPMessageCopyAllHeaderFields
|| __TEXT.__text _CFHTTPMessageCopyBody
|| __TEXT.__text _CFHTTPMessageCopyHeaderFieldValue
|| __TEXT.__text _CFHTTPMessageCopyRequestMethod
|| __TEXT.__text _CFHTTPMessageCopyRequestURL
|| __TEXT.__text _CFHTTPMessageCopyResponseStatusLine
|| __TEXT.__text _CFHTTPMessageCopySerializedMessage
|| __TEXT.__text _CFHTTPMessageCopyVersion
|| __TEXT.__text _CFHTTPMessageCreateCopy
|| __TEXT.__text _CFHTTPMessageCreateEmpty
|| __TEXT.__text _CFHTTPMessageCreateRequest
|| __TEXT.__text _CFHTTPMessageCreateResponse
|| __TEXT.__text _CFHTTPMessageGetResponseStatusCode
|| __TEXT.__text _CFHTTPMessageGetTypeID
|| __TEXT.__text _CFHTTPMessageIsHeaderComplete
|| __TEXT.__text _CFHTTPMessageIsRequest
|| __TEXT.__text _CFHTTPMessageSetBody
|| __TEXT.__text _CFHTTPMessageSetHeaderFieldValue
|| __TEXT.__text _CFHostCancelInfoResolution
|| __TEXT.__text _CFHostCreateCopy
|| __TEXT.__text _CFHostCreateWithAddress
|| __TEXT.__text _CFHostCreateWithName
|| __TEXT.__text _CFHostGetAddressing
|| __TEXT.__text _CFHostGetInfo
|| __TEXT.__text _CFHostGetNames
|| __TEXT.__text _CFHostGetReachability
|| __TEXT.__text _CFHostGetSRVRecords
|| __TEXT.__text _CFHostGetTypeID
|| __TEXT.__text _CFHostScheduleWithRunLoop
|| __TEXT.__text _CFHostSetClient
|| __TEXT.__text _CFHostStartInfoResolution
|| __TEXT.__text _CFHostUnscheduleFromRunLoop
|| __TEXT.__text _CFNetDiagnosticCopyNetworkStatusActively
|| __TEXT.__text _CFNetDiagnosticCopyNetworkStatusPassively
|| __TEXT.__text _CFNetDiagnosticCreateBasic
|| __TEXT.__text _CFNetDiagnosticCreateWithStreams
|| __TEXT.__text _CFNetDiagnosticCreateWithURL
|| __TEXT.__text _CFNetDiagnosticDiagnoseProblemInteractively
|| __TEXT.__text _CFNetDiagnosticPing
|| __TEXT.__text _CFNetDiagnosticPingWithOptions
|| __TEXT.__text _CFNetDiagnosticSetName
|| __TEXT.__text _CFNetDiagnosticSetProtocol
|| __TEXT.__text _CFNetDiagnosticSetServiceID
|| __TEXT.__text _CFNetServiceBrowserCreate
|| __TEXT.__text _CFNetServiceBrowserGetTypeID
|| __TEXT.__text _CFNetServiceBrowserInvalidate
|| __TEXT.__text _CFNetServiceBrowserScheduleWithRunLoop
|| __TEXT.__text _CFNetServiceBrowserSearchForDomains
|| __TEXT.__text _CFNetServiceBrowserSearchForServices
|| __TEXT.__text _CFNetServiceBrowserStopSearch
|| __TEXT.__text _CFNetServiceBrowserUnscheduleFromRunLoop
|| __TEXT.__text _CFNetServiceCancel
|| __TEXT.__text _CFNetServiceCreate
|| __TEXT.__text _CFNetServiceCreateCopy
|| __TEXT.__text _CFNetServiceCreateDictionaryWithTXTData
|| __TEXT.__text _CFNetServiceCreateTXTDataWithDictionary
|| __TEXT.__text _CFNetServiceGetAddressing
|| __TEXT.__text _CFNetServiceGetDomain
|| __TEXT.__text _CFNetServiceGetInfo
|| __TEXT.__text _CFNetServiceGetName
|| __TEXT.__text _CFNetServiceGetPortNumber
|| __TEXT.__text _CFNetServiceGetTXTData
|| __TEXT.__text _CFNetServiceGetTargetHost
|| __TEXT.__text _CFNetServiceGetType
|| __TEXT.__text _CFNetServiceGetTypeID
|| __TEXT.__text _CFNetServiceMonitorCreate
|| __TEXT.__text _CFNetServiceMonitorGetTypeID
|| __TEXT.__text _CFNetServiceMonitorInvalidate
|| __TEXT.__text _CFNetServiceMonitorScheduleWithRunLoop
|| __TEXT.__text _CFNetServiceMonitorStart
|| __TEXT.__text _CFNetServiceMonitorStop
|| __TEXT.__text _CFNetServiceMonitorUnscheduleFromRunLoop
|| __TEXT.__text _CFNetServiceRegisterWithOptions
|| __TEXT.__text _CFNetServiceResolveWithTimeout
|| __TEXT.__text _CFNetServiceScheduleWithRunLoop
|| __TEXT.__text _CFNetServiceSetClient
|| __TEXT.__text _CFNetServiceSetInfo
|| __TEXT.__text _CFNetServiceSetTXTData
|| __TEXT.__text _CFNetServiceUnscheduleFromRunLoop
|| __TEXT.__text _CFNetworkCopyProxiesForAutoConfigurationScript
|| __TEXT.__text _CFNetworkCopyProxiesForURL
|| __TEXT.__text _CFNetworkCopySystemProxySettings
|| __TEXT.__text _CFNetworkExecuteProxyAutoConfigurationScript
|| __TEXT.__text _CFNetworkExecuteProxyAutoConfigurationURL
|| __TEXT.__text _CFReadStreamCreateForHTTPRequest
|| __TEXT.__text _CFReadStreamCreateForStreamedHTTPRequest
|| __TEXT.__text _CFReadStreamCreateWithFTPURL
|| __TEXT.__text _CFStreamCreatePairWithSocketToCFHost
|| __TEXT.__text _CFStreamCreatePairWithSocketToNetService
|| __TEXT.__text _CFURLAuthChallengeCreate
|| __TEXT.__text _CFURLAuthChallengeGetError
|| __TEXT.__text _CFURLAuthChallengeGetFailureResponse
|| __TEXT.__text _CFURLAuthChallengeGetPreviousFailureCount
|| __TEXT.__text _CFURLAuthChallengeGetProposedCredential
|| __TEXT.__text _CFURLAuthChallengeGetProtectionSpace
|| __TEXT.__text _CFURLCacheAddCachedResponseForRequest
|| __TEXT.__text _CFURLCacheCopyResponseForRequest
|| __TEXT.__text _CFURLCacheCopySharedURLCache
|| __TEXT.__text _CFURLCacheCreate
|| __TEXT.__text _CFURLCacheCurrentDiskUsage
|| __TEXT.__text _CFURLCacheDiskCapacity
|| __TEXT.__text _CFURLCacheMemoryCapacity
|| __TEXT.__text _CFURLCacheRemoveAllCachedResponses
|| __TEXT.__text _CFURLCacheRemoveCachedResponseForRequest
|| __TEXT.__text _CFURLCacheSetDiskCapacity
|| __TEXT.__text _CFURLCacheSetMemoryCapacity
|| __TEXT.__text _CFURLCacheSetSharedURLCache
|| __TEXT.__text _CFURLConnectionCancel
|| __TEXT.__text _CFURLConnectionCreate
|| __TEXT.__text _CFURLConnectionCreateWithProperties
|| __TEXT.__text _CFURLConnectionHalt
|| __TEXT.__text _CFURLConnectionInvalidateConnectionCache
|| __TEXT.__text _CFURLConnectionPerformDefaultHandlingForChallenge
|| __TEXT.__text _CFURLConnectionRejectChallenge
|| __TEXT.__text _CFURLConnectionResume
|| __TEXT.__text _CFURLConnectionScheduleDownloadWithRunLoop
|| __TEXT.__text _CFURLConnectionScheduleWithRunLoop
|| __TEXT.__text _CFURLConnectionSendSynchronousRequest
|| __TEXT.__text _CFURLConnectionSetDelegateDispatchQueue
|| __TEXT.__text _CFURLConnectionStart
|| __TEXT.__text _CFURLConnectionUnscheduleFromRunLoop
|| __TEXT.__text _CFURLConnectionUseCredential
|| __TEXT.__text _CFURLCredentialContainsPassword
|| __TEXT.__text _CFURLCredentialCopyPassword
|| __TEXT.__text _CFURLCredentialCreate
|| __TEXT.__text _CFURLCredentialCreateWithIdentityAndCertificateArray
|| __TEXT.__text _CFURLCredentialCreateWithTrust
|| __TEXT.__text _CFURLCredentialGetPersistence
|| __TEXT.__text _CFURLCredentialGetUsername
|| __TEXT.__text _CFURLCredentialStorageCopyAllCredentials
|| __TEXT.__text _CFURLCredentialStorageCopyCredentialsForProtectionSpace
|| __TEXT.__text _CFURLCredentialStorageCopyDefaultCredentialForProtectionSpace
|| __TEXT.__text _CFURLCredentialStorageCreate
|| __TEXT.__text _CFURLCredentialStorageRemoveCredentialForProtectionSpace
|| __TEXT.__text _CFURLCredentialStorageSetCredentialForProtectionSpace
|| __TEXT.__text _CFURLCredentialStorageSetDefaultCredentialForProtectionSpace
|| __TEXT.__text _CFURLDownloadCancel
|| __TEXT.__text _CFURLDownloadCopyResumeData
|| __TEXT.__text _CFURLDownloadCreate
|| __TEXT.__text _CFURLDownloadCreateAndStartWithLoadingConnection
|| __TEXT.__text _CFURLDownloadCreateWithResumeData
|| __TEXT.__text _CFURLDownloadDeletesUponFailure
|| __TEXT.__text _CFURLDownloadScheduleWithRunLoop
|| __TEXT.__text _CFURLDownloadSetDeletesUponFailure
|| __TEXT.__text _CFURLDownloadSetDestination
|| __TEXT.__text _CFURLDownloadStart
|| __TEXT.__text _CFURLProtectionSpaceCreate
|| __TEXT.__text _CFURLProtectionSpaceGetAuthenticationScheme
|| __TEXT.__text _CFURLProtectionSpaceGetHost
|| __TEXT.__text _CFURLProtectionSpaceGetPort
|| __TEXT.__text _CFURLProtectionSpaceGetRealm
|| __TEXT.__text _CFURLProtectionSpaceGetServerTrust
|| __TEXT.__text _CFURLProtectionSpaceGetServerType
|| __TEXT.__text _CFURLProtectionSpaceIsProxy
|| __TEXT.__text _CFURLProtectionSpaceReceivesCredentialSecurely
|| __TEXT.__text _CFURLProtocolGetCachedResponse
|| __TEXT.__text _CFURLProtocolGetClient
|| __TEXT.__text _CFURLProtocolGetRequest
|| __TEXT.__text _CFURLProtocolRegisterImplementation
|| __TEXT.__text _CFURLProtocolUnregisterImplementation
|| __TEXT.__text _CFURLRequestAppendHTTPHeaderFieldValue
|| __TEXT.__text _CFURLRequestCopyAllHTTPHeaderFields
|| __TEXT.__text _CFURLRequestCopyHTTPCookieStorage
|| __TEXT.__text _CFURLRequestCopyHTTPHeaderFieldValue
|| __TEXT.__text _CFURLRequestCopyHTTPRequest
|| __TEXT.__text _CFURLRequestCopyHTTPRequestBody
|| __TEXT.__text _CFURLRequestCopyHTTPRequestBodyParts
|| __TEXT.__text _CFURLRequestCopyHTTPRequestBodyStream
|| __TEXT.__text _CFURLRequestCopyHTTPRequestMethod
|| __TEXT.__text _CFURLRequestCreate
|| __TEXT.__text _CFURLRequestCreateCopy
|| __TEXT.__text _CFURLRequestCreateHTTPRequest
|| __TEXT.__text _CFURLRequestCreateMutable
|| __TEXT.__text _CFURLRequestCreateMutableCopy
|| __TEXT.__text _CFURLRequestCreateMutableHTTPRequest
|| __TEXT.__text _CFURLRequestGetCachePolicy
|| __TEXT.__text _CFURLRequestGetMainDocumentURL
|| __TEXT.__text _CFURLRequestGetRequestPriority
|| __TEXT.__text _CFURLRequestGetSSLProperties
|| __TEXT.__text _CFURLRequestGetTimeoutInterval
|| __TEXT.__text _CFURLRequestGetURL
|| __TEXT.__text _CFURLRequestSetAllowsCellularAccess
|| __TEXT.__text _CFURLRequestSetCachePolicy
|| __TEXT.__text _CFURLRequestSetHTTPCookieStorage
|| __TEXT.__text _CFURLRequestSetHTTPCookieStorageAcceptPolicy
|| __TEXT.__text _CFURLRequestSetHTTPHeaderFieldValue
|| __TEXT.__text _CFURLRequestSetHTTPRequestBody
|| __TEXT.__text _CFURLRequestSetHTTPRequestBodyParts
|| __TEXT.__text _CFURLRequestSetHTTPRequestBodyStream
|| __TEXT.__text _CFURLRequestSetHTTPRequestMethod
|| __TEXT.__text _CFURLRequestSetMainDocumentURL
|| __TEXT.__text _CFURLRequestSetMultipleHTTPHeaderFields
|| __TEXT.__text _CFURLRequestSetNetworkServiceType
|| __TEXT.__text _CFURLRequestSetProxySettings
|| __TEXT.__text _CFURLRequestSetRequestPriority
|| __TEXT.__text _CFURLRequestSetSSLProperties
|| __TEXT.__text _CFURLRequestSetShouldHandleHTTPCookies
|| __TEXT.__text _CFURLRequestSetShouldPipelineHTTP
|| __TEXT.__text _CFURLRequestSetShouldStartSynchronously
|| __TEXT.__text _CFURLRequestSetTimeoutInterval
|| __TEXT.__text _CFURLRequestSetURL
|| __TEXT.__text _CFURLRequestShouldHandleHTTPCookies
|| __TEXT.__text _CFURLResponseConnectionDidFallback
|| __TEXT.__text _CFURLResponseConnectionIsCellular
|| __TEXT.__text _CFURLResponseCopyPeerAddress
|| __TEXT.__text _CFURLResponseCopySuggestedFilename
|| __TEXT.__text _CFURLResponseCreate
|| __TEXT.__text _CFURLResponseCreateWithHTTPResponse
|| __TEXT.__text _CFURLResponseDataIsEncoded
|| __TEXT.__text _CFURLResponseGetCreationTime
|| __TEXT.__text _CFURLResponseGetExpectedContentLength
|| __TEXT.__text _CFURLResponseGetExpirationTime
|| __TEXT.__text _CFURLResponseGetHTTPResponse
|| __TEXT.__text _CFURLResponseGetMIMEType
|| __TEXT.__text _CFURLResponseGetRecommendedCachePolicy
|| __TEXT.__text _CFURLResponseGetTextEncodingName
|| __TEXT.__text _CFURLResponseGetTypeID
|| __TEXT.__text _CFURLResponseGetURL
|| __TEXT.__text _CFURLResponseSetExpectedContentLength
|| __TEXT.__text _CFURLResponseSetExpiration
|| __TEXT.__text _CFURLResponseSetMIMEType
|| __TEXT.__text _CFURLResponseSetRecommendedCachePolicy
|| __TEXT.__text _CFWriteStreamCreateWithFTPURL
|| __TEXT.__text __CFCachedURLGetEncodedUserInfoPtr
|| __TEXT.__text __CFCachedURLResponseGetEncodedReceiverDataLength
|| __TEXT.__text __CFCachedURLResponseGetEncodedUserInfoLength
|| __TEXT.__text __CFCachedURLResponseGetHashedKey
|| __TEXT.__text __CFCachedURLResponseGetMemMappedData
|| __TEXT.__text __CFCachedURLResponseGetSizeOfData
|| __TEXT.__text __CFCachedURLResponseSetBecameFileBackedCallBackBlock
|| __TEXT.__text __CFCachedURLResponseSetHashForKey
|| __TEXT.__text __CFCachedURLResponseSetKey
|| __TEXT.__text __CFCachedURLResponseSetWrappedRequest
|| __TEXT.__text __CFCachedURLResponseStoragePolicy
|| __TEXT.__text __CFErrorCreateWithStreamError
|| __TEXT.__text __CFHTTPAuthenticationApplyProxyAuthorizationToRequest
|| __TEXT.__text __CFHTTPAuthenticationPasswordInClear
|| __TEXT.__text __CFHTTPCookieCreateCookiesWithResponseMessage
|| __TEXT.__text __CFHTTPCookieCreateWithStringAndPartition
|| __TEXT.__text __CFHTTPCookieStorageCopyCookiesForURLWithMainDocumentURL
|| __TEXT.__text __CFHTTPCookieStorageCopyRequestHeaderFieldsForURL
|| __TEXT.__text __CFHTTPCookieStorageCreateInMemory
|| __TEXT.__text __CFHTTPCookieStorageCreateWithProperties
|| __TEXT.__text __CFHTTPCookieStorageFlushCookieStores
|| __TEXT.__text __CFHTTPCookieStorageGetDefault
|| __TEXT.__text __CFHTTPCookieStorageSetCookiesWithResponseHeaderFields
|| __TEXT.__text __CFHTTPMessageCanRetry
|| __TEXT.__text __CFHTTPMessageSetResponseProxyURL
|| __TEXT.__text __CFHTTPMessageSetResponseURL
|| __TEXT.__text __CFHTTPParsedCookiesWithResponseHeaderFields
|| __TEXT.__text __CFHTTPServerConnectionCopyProperty
|| __TEXT.__text __CFHTTPServerConnectionGetClient
|| __TEXT.__text __CFHTTPServerConnectionGetTypeID
|| __TEXT.__text __CFHTTPServerConnectionInvalidate
|| __TEXT.__text __CFHTTPServerConnectionIsValid
|| __TEXT.__text __CFHTTPServerConnectionScheduleWithRunLoopAndMode
|| __TEXT.__text __CFHTTPServerConnectionSetClient
|| __TEXT.__text __CFHTTPServerConnectionSetDispatchQueue
|| __TEXT.__text __CFHTTPServerConnectionSetProperty
|| __TEXT.__text __CFHTTPServerCopyProperty
|| __TEXT.__text __CFHTTPServerCreateService
|| __TEXT.__text __CFHTTPServerCreateWithAcceptedSocket
|| __TEXT.__text __CFHTTPServerCreateWithStreams
|| __TEXT.__text __CFHTTPServerGetClient
|| __TEXT.__text __CFHTTPServerGetTypeID
|| __TEXT.__text __CFHTTPServerInvalidate
|| __TEXT.__text __CFHTTPServerIsValid
|| __TEXT.__text __CFHTTPServerRequestCopyBodyStream
|| __TEXT.__text __CFHTTPServerRequestCopyProperty
|| __TEXT.__text __CFHTTPServerRequestCreateResponseMessage
|| __TEXT.__text __CFHTTPServerRequestGetClient
|| __TEXT.__text __CFHTTPServerRequestGetTypeID
|| __TEXT.__text __CFHTTPServerRequestSetClient
|| __TEXT.__text __CFHTTPServerResponseCopyProperty
|| __TEXT.__text __CFHTTPServerResponseCreateWithBodyStream
|| __TEXT.__text __CFHTTPServerResponseCreateWithData
|| __TEXT.__text __CFHTTPServerResponseEnqueue
|| __TEXT.__text __CFHTTPServerResponseGetClient
|| __TEXT.__text __CFHTTPServerResponseGetTypeID
|| __TEXT.__text __CFHTTPServerResponseSetClient
|| __TEXT.__text __CFHTTPServerScheduleWithRunLoopAndMode
|| __TEXT.__text __CFHTTPServerSetDispatchQueue
|| __TEXT.__text __CFHTTPServerSetProperty
|| __TEXT.__text __CFHostIsDomainTopLevel
|| __TEXT.__text __CFHostIsDomainTopLevelForCertificatePolicy
|| __TEXT.__text __CFHostIsDomainTopLevelForCookiePolicy
|| __TEXT.__text __CFHostStartInfoResolutionForInterface
|| __TEXT.__text __CFNetServiceCreateFromServiceName
|| __TEXT.__text __CFNetServiceCreateFromURL
|| __TEXT.__text __CFNetworkCopyATSContext
|| __TEXT.__text __CFNetworkCopyHSTSPolicies
|| __TEXT.__text __CFNetworkCopyPreferredLanguageCode
|| __TEXT.__text __CFNetworkErrorCopyLocalizedDescriptionWithHostname
|| __TEXT.__text __CFNetworkErrorGetLocalizedDescription
|| __TEXT.__text __CFNetworkErrorGetLocalizedFailureReason
|| __TEXT.__text __CFNetworkErrorGetLocalizedRecoverySuggestion
|| __TEXT.__text __CFNetworkExecuteProxyAutoConfigurationURLDelegated
|| __TEXT.__text __CFNetworkHTTPConnectionCacheGetLimit
|| __TEXT.__text __CFNetworkHTTPConnectionCacheSetLimit
|| __TEXT.__text __CFNetworkIsKnownHSTSHostWithSession
|| __TEXT.__text __CFNetworkResetHSTS
|| __TEXT.__text __CFNetworkResetHSTSHosts
|| __TEXT.__text __CFNetworkResetHSTSHostsSinceDate
|| __TEXT.__text __CFNetworkResetHSTSHostsWithSession
|| __TEXT.__text __CFNetworkSetATSContext
|| __TEXT.__text __CFNetworkSetHSTSStoragePath
|| __TEXT.__text __CFNetworkSetOverrideSystemProxySettings
|| __TEXT.__text __CFServerCreate
|| __TEXT.__text __CFServerGetPort
|| __TEXT.__text __CFServerInvalidate
|| __TEXT.__text __CFServerStart
|| __TEXT.__text __CFSocketStreamCreatePair
|| __TEXT.__text __CFStreamErrorFromCFError
|| __TEXT.__text __CFStringCreateRFC2616DateStringWithGregorianDate
|| __TEXT.__text __CFURLCacheCopyAllHostNamesInPersistentStore
|| __TEXT.__text __CFURLCacheCopyAllHostNamesInPersistentStoreForPartition
|| __TEXT.__text __CFURLCacheCopyAllPartitionNames
|| __TEXT.__text __CFURLCacheCopyCacheDirectory
|| __TEXT.__text __CFURLCacheCreateFS1
|| __TEXT.__text __CFURLCacheCreateFS2
|| __TEXT.__text __CFURLCacheCreateFS3
|| __TEXT.__text __CFURLCacheDeleteHostNamesInPersistentStore
|| __TEXT.__text __CFURLCacheDeleteHostNamesInPersistentStoreForPartition
|| __TEXT.__text __CFURLCacheDisableTimeRelativeLookup
|| __TEXT.__text __CFURLCacheFSGetCachedResponseDataFromFS
|| __TEXT.__text __CFURLCacheFSGetFileSystemUsage
|| __TEXT.__text __CFURLCacheFSPurgeEntireFileSystemStore
|| __TEXT.__text __CFURLCacheFSPurgeItemFromFileSystemStore
|| __TEXT.__text __CFURLCacheFSPurgeItemFromFileSystemStoreForKey
|| __TEXT.__text __CFURLCacheFSWriteCachedResponseToFS
|| __TEXT.__text __CFURLCacheLoadMemoryFromDiskNow
|| __TEXT.__text __CFURLCachePersistMemoryToDiskNow
|| __TEXT.__text __CFURLCachePurgeMemoryCache
|| __TEXT.__text __CFURLCacheSetCacheEventCallBackBlock
|| __TEXT.__text __CFURLCacheSetMemoryLimit
|| __TEXT.__text __CFURLCacheSetMinSizeForVMCachedResource
|| __TEXT.__text __CFURLConnectionCopyTimingData
|| __TEXT.__text __CFURLConnectionSetFrameworkStubs
|| __TEXT.__text __CFURLCreateDataAndPropertiesFromResource
|| __TEXT.__text __CFURLCredentialCreateArchive
|| __TEXT.__text __CFURLCredentialCreateForKerberosTicket
|| __TEXT.__text __CFURLCredentialCreateFromArchive
|| __TEXT.__text __CFURLCredentialCreateOAuth1
|| __TEXT.__text __CFURLCredentialCreateOAuth2
|| __TEXT.__text __CFURLCredentialCreateXMobileMeAuthToken
|| __TEXT.__text __CFURLDestroyResource
|| __TEXT.__text __CFURLProtocolSendCacheResponseIsValidCallback
|| __TEXT.__text __CFURLProtocolSendDidFailCallback
|| __TEXT.__text __CFURLProtocolSendDidFinishLoadingCallback
|| __TEXT.__text __CFURLProtocolSendDidLoadDataCallback
|| __TEXT.__text __CFURLProtocolSendDidReceiveResponseCallback
|| __TEXT.__text __CFURLRequestCopyContentDispositionEncodingFallbackArray
|| __TEXT.__text __CFURLRequestCopyProtocolPropertyForKey
|| __TEXT.__text __CFURLRequestCreateArchiveList
|| __TEXT.__text __CFURLRequestCreateFromArchiveList
|| __TEXT.__text __CFURLRequestSetAllowedProtocolTypes
|| __TEXT.__text __CFURLRequestSetContentDispositionEncodingFallbackArray
|| __TEXT.__text __CFURLRequestSetProtocolProperty
|| __TEXT.__text __CFURLRequestSetShouldPipelineNonIdempotentHTTP
|| __TEXT.__text __CFURLRequestSetShouldSkipPipelineProbe
|| __TEXT.__text __CFURLRequestSetStorageSession
|| __TEXT.__text __CFURLResponseCreateArchiveList
|| __TEXT.__text __CFURLResponseCreateFromArchiveList
|| __TEXT.__text __CFURLResponseGetFreshnessLifetime
|| __TEXT.__text __CFURLResponseGetSSLCertificateContext
|| __TEXT.__text __CFURLResponseMustRevalidate
|| __TEXT.__text __CFURLResponseSetCreationTime
|| __TEXT.__text __CFURLStorageSessionCopyCache
|| __TEXT.__text __CFURLStorageSessionCopyCookieStorage
|| __TEXT.__text __CFURLStorageSessionCopyCredentialStorage
|| __TEXT.__text __CFURLStorageSessionCopyIdentifier
|| __TEXT.__text __CFURLStorageSessionCopyProcessDefault
|| __TEXT.__text __CFURLStorageSessionCreate
|| __TEXT.__text __CFURLStorageSessionCreateWithData
|| __TEXT.__text __CFURLStorageSessionGetTypeID
|| __TEXT.__text __CFURLWriteDataAndPropertiesToResource
|| __TEXT.__text __CreateCanonicalURL
|| __TEXT.__text __ExtractCStringfromCFStringRef
|| __TEXT.__text ___AuthBrokerMain
|| __TEXT.__text ___CFNetworkAgentMessageProcessorMain
|| __TEXT.__text ___CFTubeSetTubeTypeNotifier
|| __TEXT.__text ___createCachedResponseFromParts
|| __TEXT.__text __nsurlstoraged_main
|| __TEXT.__text _cfnTranslateCFError
|| __TEXT.__text _kCFNIE
|| __TEXT.__text _shim_CFURLRequestCopyPropertyList
|| __TEXT.__text _shim_CFURLResponseCopyPropertyList
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAbsoluteTimeGetDayOfWeek
__ CoreFoundation: _CFAbsoluteTimeGetGregorianDate
__ CoreFoundation: _CFAllocatorAllocate
__ CoreFoundation: _CFAllocatorCreate
__ CoreFoundation: _CFAllocatorDeallocate
__ CoreFoundation: _CFAllocatorGetDefault
__ CoreFoundation: _CFArrayAppendArray
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayApplyFunction
__ CoreFoundation: _CFArrayBSearchValues
__ CoreFoundation: _CFArrayContainsValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateCopy
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayCreateMutableCopy
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetFirstIndexOfValue
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayGetValues
__ CoreFoundation: _CFArrayInsertValueAtIndex
__ CoreFoundation: _CFArrayRemoveAllValues
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFArrayReplaceValues
__ CoreFoundation: _CFArraySetValueAtIndex
__ CoreFoundation: _CFArraySortValues
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCopyExecutableURL
__ CoreFoundation: _CFBundleCopyLocalizationForLocalizationInfo
__ CoreFoundation: _CFBundleCopyLocalizedString
__ CoreFoundation: _CFBundleCopyResourceURL
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFBundleGetBundleWithIdentifier
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetLocalizationInfoForLocalization
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFBundleGetValueForInfoDictionaryKey
__ CoreFoundation: _CFCharacterSetCreateWithCharactersInString
__ CoreFoundation: _CFCharacterSetGetPredefined
__ CoreFoundation: _CFCharacterSetIsCharacterMember
__ CoreFoundation: _CFCopyDescription
__ CoreFoundation: _CFCopyHomeDirectoryURLForUser
__ CoreFoundation: _CFCopySearchPathForDirectoriesInDomains
__ CoreFoundation: _CFCopyUserName
__ CoreFoundation: _CFDataAppendBytes
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateCopy
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataCreateMutableCopy
__ CoreFoundation: _CFDataCreateWithBytesNoCopy
__ CoreFoundation: _CFDataDeleteBytes
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetMutableBytePtr
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDataSetLength
__ CoreFoundation: _CFDateCreate
__ CoreFoundation: _CFDateGetAbsoluteTime
__ CoreFoundation: _CFDateGetTypeID
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryApplyFunction
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateCopy
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryGetValueIfPresent
__ CoreFoundation: _CFDictionaryRemoveAllValues
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionaryReplaceValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFErrorCopyDescription
__ CoreFoundation: _CFErrorCopyUserInfo
__ CoreFoundation: _CFErrorCreate
__ CoreFoundation: _CFErrorGetCode
__ CoreFoundation: _CFErrorGetDomain
__ CoreFoundation: _CFErrorGetTypeID
__ CoreFoundation: _CFGetAllocator
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFGregorianDateGetAbsoluteTime
__ CoreFoundation: _CFGregorianDateIsValid
__ CoreFoundation: _CFHash
__ CoreFoundation: _CFLocaleGetSystem
__ CoreFoundation: _CFLog
__ CoreFoundation: _CFMachPortCreateRunLoopSource
__ CoreFoundation: _CFMachPortCreateWithPort
__ CoreFoundation: _CFMachPortGetTypeID
__ CoreFoundation: _CFMachPortInvalidate
__ CoreFoundation: _CFMakeCollectable
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNullGetTypeID
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberFormatterCreate
__ CoreFoundation: _CFNumberFormatterGetValueFromString
__ CoreFoundation: _CFNumberFormatterSetProperty
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPropertyListCreateData
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFPropertyListCreateWithStream
__ CoreFoundation: _CFPropertyListIsValid
__ CoreFoundation: _CFPropertyListWrite
__ CoreFoundation: _CFReadStreamClose
__ CoreFoundation: _CFReadStreamCopyDispatchQueue
__ CoreFoundation: _CFReadStreamCopyError
__ CoreFoundation: _CFReadStreamCopyProperty
__ CoreFoundation: _CFReadStreamCreate
__ CoreFoundation: _CFReadStreamCreateWithBytesNoCopy
__ CoreFoundation: _CFReadStreamCreateWithFile
__ CoreFoundation: _CFReadStreamGetError
__ CoreFoundation: _CFReadStreamGetInfoPointer
__ CoreFoundation: _CFReadStreamGetStatus
__ CoreFoundation: _CFReadStreamGetTypeID
__ CoreFoundation: _CFReadStreamHasBytesAvailable
__ CoreFoundation: _CFReadStreamOpen
__ CoreFoundation: _CFReadStreamRead
__ CoreFoundation: _CFReadStreamScheduleWithRunLoop
__ CoreFoundation: _CFReadStreamSetClient
__ CoreFoundation: _CFReadStreamSetDispatchQueue
__ CoreFoundation: _CFReadStreamSetProperty
__ CoreFoundation: _CFReadStreamSignalEvent
__ CoreFoundation: _CFReadStreamUnscheduleFromRunLoop
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopAddTimer
__ CoreFoundation: _CFRunLoopContainsSource
__ CoreFoundation: _CFRunLoopCopyCurrentMode
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopIsWaiting
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopRemoveTimer
__ CoreFoundation: _CFRunLoopRun
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceGetContext
__ CoreFoundation: _CFRunLoopSourceGetTypeID
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopSourceIsValid
__ CoreFoundation: _CFRunLoopSourceSignal
__ CoreFoundation: _CFRunLoopStop
__ CoreFoundation: _CFRunLoopTimerCreate
__ CoreFoundation: _CFRunLoopTimerCreateWithHandler
__ CoreFoundation: _CFRunLoopTimerGetTypeID
__ CoreFoundation: _CFRunLoopTimerInvalidate
__ CoreFoundation: _CFRunLoopTimerIsValid
__ CoreFoundation: _CFRunLoopTimerSetNextFireDate
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetApplyFunction
__ CoreFoundation: _CFSetContainsValue
__ CoreFoundation: _CFSetCreate
__ CoreFoundation: _CFSetCreateCopy
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetCreateMutableCopy
__ CoreFoundation: _CFSetGetCount
__ CoreFoundation: _CFSetGetCountOfValue
__ CoreFoundation: _CFSetGetTypeID
__ CoreFoundation: _CFSetGetValues
__ CoreFoundation: _CFSetRemoveAllValues
__ CoreFoundation: _CFSetRemoveValue
__ CoreFoundation: _CFSetSetValue
__ CoreFoundation: _CFShow
__ CoreFoundation: _CFSocketCopyAddress
__ CoreFoundation: _CFSocketCopyPeerAddress
__ CoreFoundation: _CFSocketCreate
__ CoreFoundation: _CFSocketCreateRunLoopSource
__ CoreFoundation: _CFSocketCreateWithNative
__ CoreFoundation: _CFSocketDisableCallBacks
__ CoreFoundation: _CFSocketEnableCallBacks
__ CoreFoundation: _CFSocketGetNative
__ CoreFoundation: _CFSocketGetSocketFlags
__ CoreFoundation: _CFSocketGetTypeID
__ CoreFoundation: _CFSocketInvalidate
__ CoreFoundation: _CFSocketIsValid
__ CoreFoundation: _CFSocketSetAddress
__ CoreFoundation: _CFSocketSetSocketFlags
__ CoreFoundation: _CFStreamCreateBoundPair
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringAppendCString
__ CoreFoundation: _CFStringAppendCharacters
__ CoreFoundation: _CFStringAppendFormat
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCompareWithOptions
__ CoreFoundation: _CFStringConvertEncodingToNSStringEncoding
__ CoreFoundation: _CFStringConvertIANACharSetNameToEncoding
__ CoreFoundation: _CFStringConvertNSStringEncodingToEncoding
__ CoreFoundation: _CFStringCreateArrayBySeparatingStrings
__ CoreFoundation: _CFStringCreateByCombiningStrings
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringCreateExternalRepresentation
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithCStringNoCopy
__ CoreFoundation: _CFStringCreateWithCharacters
__ CoreFoundation: _CFStringCreateWithFileSystemRepresentation
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithFormatAndArguments
__ CoreFoundation: _CFStringCreateWithPascalString
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringDelete
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFStringFindCharacterFromSet
__ CoreFoundation: _CFStringFindWithOptions
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetDoubleValue
__ CoreFoundation: _CFStringGetFastestEncoding
__ CoreFoundation: _CFStringGetFileSystemRepresentation
__ CoreFoundation: _CFStringGetIntValue
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetMaximumSizeForEncoding
__ CoreFoundation: _CFStringGetMaximumSizeOfFileSystemRepresentation
__ CoreFoundation: _CFStringGetPascalString
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringHasPrefix
__ CoreFoundation: _CFStringHasSuffix
__ CoreFoundation: _CFStringInsert
__ CoreFoundation: _CFStringLowercase
__ CoreFoundation: _CFStringReplace
__ CoreFoundation: _CFStringTrimWhitespace
__ CoreFoundation: _CFTimeZoneCopyDefault
__ CoreFoundation: _CFTimeZoneCopySystem
__ CoreFoundation: _CFTimeZoneCreateWithTimeIntervalFromGMT
__ CoreFoundation: _CFTimeZoneGetSecondsFromGMT
__ CoreFoundation: _CFURLCanBeDecomposed
__ CoreFoundation: _CFURLCopyAbsoluteURL
__ CoreFoundation: _CFURLCopyFileSystemPath
__ CoreFoundation: _CFURLCopyHostName
__ CoreFoundation: _CFURLCopyLastPathComponent
__ CoreFoundation: _CFURLCopyNetLocation
__ CoreFoundation: _CFURLCopyPassword
__ CoreFoundation: _CFURLCopyPath
__ CoreFoundation: _CFURLCopyPathExtension
__ CoreFoundation: _CFURLCopyResourcePropertyForKey
__ CoreFoundation: _CFURLCopyResourceSpecifier
__ CoreFoundation: _CFURLCopyScheme
__ CoreFoundation: _CFURLCopyStrictPath
__ CoreFoundation: _CFURLCopyUserName
__ CoreFoundation: _CFURLCreateAbsoluteURLWithBytes
__ CoreFoundation: _CFURLCreateCopyAppendingPathComponent
__ CoreFoundation: _CFURLCreateCopyDeletingLastPathComponent
__ CoreFoundation: _CFURLCreateCopyDeletingPathExtension
__ CoreFoundation: _CFURLCreateDataAndPropertiesFromResource
__ CoreFoundation: _CFURLCreateFromFileSystemRepresentation
__ CoreFoundation: _CFURLCreateStringByAddingPercentEscapes
__ CoreFoundation: _CFURLCreateStringByReplacingPercentEscapes
__ CoreFoundation: _CFURLCreateStringByReplacingPercentEscapesUsingEncoding
__ CoreFoundation: _CFURLCreateWithBytes
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _CFURLCreateWithFileSystemPathRelativeToBase
__ CoreFoundation: _CFURLCreateWithString
__ CoreFoundation: _CFURLGetBaseURL
__ CoreFoundation: _CFURLGetByteRangeForComponent
__ CoreFoundation: _CFURLGetBytes
__ CoreFoundation: _CFURLGetFileSystemRepresentation
__ CoreFoundation: _CFURLGetPortNumber
__ CoreFoundation: _CFURLGetString
__ CoreFoundation: _CFURLGetTypeID
__ CoreFoundation: _CFURLHasDirectoryPath
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateFromString
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _CFUUIDGetTypeID
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationGetResponseValue
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _CFWriteStreamCanAcceptBytes
__ CoreFoundation: _CFWriteStreamClose
__ CoreFoundation: _CFWriteStreamCopyError
__ CoreFoundation: _CFWriteStreamCopyProperty
__ CoreFoundation: _CFWriteStreamCreate
__ CoreFoundation: _CFWriteStreamCreateWithAllocatedBuffers
__ CoreFoundation: _CFWriteStreamCreateWithFile
__ CoreFoundation: _CFWriteStreamGetError
__ CoreFoundation: _CFWriteStreamGetStatus
__ CoreFoundation: _CFWriteStreamGetTypeID
__ CoreFoundation: _CFWriteStreamOpen
__ CoreFoundation: _CFWriteStreamScheduleWithRunLoop
__ CoreFoundation: _CFWriteStreamSetClient
__ CoreFoundation: _CFWriteStreamSetDispatchQueue
__ CoreFoundation: _CFWriteStreamSetProperty
__ CoreFoundation: _CFWriteStreamSignalEvent
__ CoreFoundation: _CFWriteStreamUnscheduleFromRunLoop
__ CoreFoundation: _CFWriteStreamWrite
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: __CFGetProgname
__ CoreFoundation: __CFMZEnabled
__ CoreFoundation: __CFMainPThread
__ CoreFoundation: __CFReadStreamSignalEventDelayed
__ CoreFoundation: __CFRunLoop01
__ CoreFoundation: __CFRuntimeCreateInstance
__ CoreFoundation: __CFRuntimeGetClassWithTypeID
__ CoreFoundation: __CFRuntimeRegisterClass
__ CoreFoundation: __CFURLCopyComponents
__ CoreFoundation: __CFURLCopyPropertyListRepresentation
__ CoreFoundation: __CFURLCreateFromComponents
__ CoreFoundation: __CFURLCreateFromPropertyListRepresentation
__ CoreFoundation: __CFURLGetEncoding
__ CoreFoundation: __CFWriteStreamCreateFromFileDescriptor
__ CoreFoundation: __CFWriteStreamSignalEventDelayed
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___CFDataMtbl
__ CoreFoundation: ___CFSocketRead
__ CoreFoundation: ___CFSocketSetSocketReadBufferAttrs
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: __kCFStreamPropertyFileNativeHandle
__ CoreFoundation: _kCFAbsoluteTimeIntervalSince1904
__ CoreFoundation: _kCFAbsoluteTimeIntervalSince1970
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorMalloc
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleNameKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFErrorDescriptionKey
__ CoreFoundation: _kCFErrorDomainMach
__ CoreFoundation: _kCFErrorDomainOSStatus
__ CoreFoundation: _kCFErrorDomainPOSIX
__ CoreFoundation: _kCFErrorLocalizedDescriptionKey
__ CoreFoundation: _kCFErrorLocalizedFailureReasonKey
__ CoreFoundation: _kCFErrorLocalizedRecoverySuggestionKey
__ CoreFoundation: _kCFNull
__ CoreFoundation: _kCFNumberFormatterExponentSymbol
__ CoreFoundation: _kCFNumberNegativeInfinity
__ CoreFoundation: _kCFNumberPositiveInfinity
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFStreamErrorDomainSOCKS
__ CoreFoundation: _kCFStreamErrorDomainSSL
__ CoreFoundation: _kCFStreamPropertyDataWritten
__ CoreFoundation: _kCFStreamPropertySOCKSPassword
__ CoreFoundation: _kCFStreamPropertySOCKSProxyHost
__ CoreFoundation: _kCFStreamPropertySOCKSProxyPort
__ CoreFoundation: _kCFStreamPropertySOCKSUser
__ CoreFoundation: _kCFStreamPropertySOCKSVersion
__ CoreFoundation: _kCFStreamSocketSOCKSVersion4
__ CoreFoundation: _kCFStreamSocketSOCKSVersion5
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFTypeSetCallBacks
__ CoreFoundation: _kCFURLFileSizeKey
__ CoreFoundation: _kCFURLHTTPStatusCode
__ CoreFoundation: _kCFURLHTTPStatusLine
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationTextFieldTitlesKey
__ CoreFoundation: _kCFUserNotificationTextFieldValuesKey
__ Foundation: _NSProgressFileOperationKindDownloading
__ Foundation: _NSProgressFileOperationKindUploading
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorNetworkUnavailableReasonKey
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPipe
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLError
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ IOKit: _IOPMAssertionCreateWithProperties
__ IOKit: _IOPMAssertionRelease
__ IOKit: _IOPMAssertionSetProperty
__ Security: _NtlmCreateClientRequest
__ Security: _NtlmGeneratePasswordHashes
__ Security: _NtlmGeneratorCreate
__ Security: _NtlmGeneratorRelease
__ Security: _SSLClose
__ Security: _SSLContextGetTypeID
__ Security: _SSLCopyDistinguishedNames
__ Security: _SSLCopyPeerTrust
__ Security: _SSLCreateContext
__ Security: _SSLGetCertificate
__ Security: _SSLGetClientCertificateState
__ Security: _SSLGetClientSideAuthenticate
__ Security: _SSLGetNegotiatedCipher
__ Security: _SSLGetNegotiatedProtocolVersion
__ Security: _SSLGetPeerDomainName
__ Security: _SSLGetPeerDomainNameLength
__ Security: _SSLGetPeerID
__ Security: _SSLGetProtocolVersionMax
__ Security: _SSLGetProtocolVersionMin
__ Security: _SSLGetSessionState
__ Security: _SSLHandshake
__ Security: _SSLProtocolFromVersionCodepoint
__ Security: _SSLRead
__ Security: _SSLSetALPNData
__ Security: _SSLSetALPNFunc
__ Security: _SSLSetAllowAnonymousCiphers
__ Security: _SSLSetCertificate
__ Security: _SSLSetClientSideAuthenticate
__ Security: _SSLSetConnection
__ Security: _SSLSetDHEEnabled
__ Security: _SSLSetEnabledCiphers
__ Security: _SSLSetIOFuncs
__ Security: _SSLSetNPNData
__ Security: _SSLSetNPNFunc
__ Security: _SSLSetPSKIdentity
__ Security: _SSLSetPSKSharedSecret
__ Security: _SSLSetPeerDomainName
__ Security: _SSLSetPeerID
__ Security: _SSLSetProtocolVersionMax
__ Security: _SSLSetProtocolVersionMin
__ Security: _SSLSetSessionConfig
__ Security: _SSLSetSessionOption
__ Security: _SSLWrite
__ Security: _SecAccessControlCopyData
__ Security: _SecAccessControlCreateFromData
__ Security: _SecAccessControlGetTypeID
__ Security: _SecCertificateCopyCommonName
__ Security: _SecCertificateCopyDNSNames
__ Security: _SecCertificateCopyData
__ Security: _SecCertificateCopyEmailAddresses
__ Security: _SecCertificateCopyIssuerSummary
__ Security: _SecCertificateCopySubjectSummary
__ Security: _SecCertificateCreateWithData
__ Security: _SecCertificateGetSignatureHashAlgorithm
__ Security: _SecCertificateGetTypeID
__ Security: _SecGenerateSelfSignedCertificate
__ Security: _SecIdentityCopyCertificate
__ Security: _SecIdentityCopyPrivateKey
__ Security: _SecIdentityCreate
__ Security: _SecIdentityGetTypeID
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecKeyGeneratePair
__ Security: _SecKeyGetAlgorithmId
__ Security: _SecKeyGetBlockSize
__ Security: _SecKeyGetTypeID
__ Security: _SecPKCS12Import
__ Security: _SecPolicyCopyProperties
__ Security: _SecPolicyCreateBasicX509
__ Security: _SecPolicyCreateSSL
__ Security: _SecPolicyCreateWithProperties
__ Security: _SecPolicyGetTypeID
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTrustCopyExceptions
__ Security: _SecTrustCopyPolicies
__ Security: _SecTrustCopyProperties
__ Security: _SecTrustCopyPublicKey
__ Security: _SecTrustCopyResult
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustDeserialize
__ Security: _SecTrustEvaluate
__ Security: _SecTrustEvaluateFastAsync
__ Security: _SecTrustEvaluateWithError
__ Security: _SecTrustGetCertificateAtIndex
__ Security: _SecTrustGetCertificateCount
__ Security: _SecTrustGetTypeID
__ Security: _SecTrustReportNetworkingAnalytics
__ Security: _SecTrustSerialize
__ Security: _SecTrustSetAnchorCertificates
__ Security: _SecTrustSetExceptions
__ Security: _SecTrustSetPinningPolicyName
__ Security: _SecTrustSetPolicies
__ Security: __NtlmCreateClientResponse
__ Security: __SSLCopyPeerCertificates
__ Security: __SSLGetDiffieHellmanParams
__ Security: __SSLSetAllowsAnyRoot
__ Security: __SSLSetAllowsExpiredCerts
__ Security: __SSLSetAllowsExpiredRoots
__ Security: __SSLSetDiffieHellmanParams
__ Security: _kSSLSessionConfig_3DES_fallback
__ Security: _kSSLSessionConfig_ATSv1
__ Security: _kSSLSessionConfig_ATSv1_noPFS
__ Security: _kSSLSessionConfig_TLSv1_3DES_fallback
__ Security: _kSSLSessionConfig_TLSv1_RC4_fallback
__ Security: _kSSLSessionConfig_TLSv1_fallback
__ Security: _kSSLSessionConfig_legacy
__ Security: _kSSLSessionConfig_legacy_DHE
__ Security: _kSSLSessionConfig_standard
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccount
__ Security: _kSecAttrAuthenticationType
__ Security: _kSecAttrAuthenticationTypeDefault
__ Security: _kSecAttrAuthenticationTypeHTMLForm
__ Security: _kSecAttrAuthenticationTypeHTTPBasic
__ Security: _kSecAttrAuthenticationTypeHTTPDigest
__ Security: _kSecAttrAuthenticationTypeNTLM
__ Security: _kSecAttrComment
__ Security: _kSecAttrCreator
__ Security: _kSecAttrDescription
__ Security: _kSecAttrKeySizeInBits
__ Security: _kSecAttrKeyType
__ Security: _kSecAttrKeyTypeRSA
__ Security: _kSecAttrLabel
__ Security: _kSecAttrNoLegacy
__ Security: _kSecAttrPath
__ Security: _kSecAttrPort
__ Security: _kSecAttrProtocol
__ Security: _kSecAttrProtocolFTP
__ Security: _kSecAttrProtocolFTPProxy
__ Security: _kSecAttrProtocolFTPS
__ Security: _kSecAttrProtocolHTTP
__ Security: _kSecAttrProtocolHTTPProxy
__ Security: _kSecAttrProtocolHTTPS
__ Security: _kSecAttrProtocolHTTPSProxy
__ Security: _kSecAttrProtocolSOCKS
__ Security: _kSecAttrSecurityDomain
__ Security: _kSecAttrServer
__ Security: _kSecAttrSynchronizable
__ Security: _kSecAttrSynchronizableAny
__ Security: _kSecCSRBasicContraintsPathLen
__ Security: _kSecCertificateKeyUsage
__ Security: _kSecClass
__ Security: _kSecClassIdentity
__ Security: _kSecClassInternetPassword
__ Security: _kSecImportExportPassphrase
__ Security: _kSecImportItemIdentity
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecMatchLimitOne
__ Security: _kSecOidCommonName
__ Security: _kSecOidOrganization
__ Security: _kSecPolicyOid
__ Security: _kSecReturnAttributes
__ Security: _kSecReturnData
__ Security: _kSecReturnRef
__ Security: _kSecSubjectAltName
__ Security: _kSecTrustCertificateTransparency
__ Security: _kSecUseSystemKeychain
__ Security: _kSecValueData
__ Security: _kSecValueRef
__ Security: _sec_certificate_copy_ref
__ Security: _sec_identity_copy_ref
__ Security: _sec_identity_create_with_certificates
__ Security: _sec_protocol_metadata_access_distinguished_names
__ Security: _sec_protocol_metadata_access_peer_certificate_chain
__ Security: _sec_protocol_metadata_access_sent_certificates
__ Security: _sec_protocol_metadata_challenge_parameters_are_equal
__ Security: _sec_protocol_metadata_copy_sec_identity
__ Security: _sec_protocol_metadata_copy_sec_trust
__ Security: _sec_protocol_metadata_get_negotiated_ciphersuite
__ Security: _sec_protocol_metadata_get_negotiated_protocol
__ Security: _sec_protocol_metadata_get_negotiated_protocol_version
__ Security: _sec_protocol_metadata_get_negotiated_tls_ciphersuite
__ Security: _sec_protocol_metadata_get_negotiated_tls_protocol_version
__ Security: _sec_protocol_metadata_peers_are_equal
__ Security: _sec_protocol_options_add_pre_shared_key
__ Security: _sec_protocol_options_add_tls_application_protocol
__ Security: _sec_protocol_options_add_tls_ciphersuite
__ Security: _sec_protocol_options_add_tls_ciphersuite_group
__ Security: _sec_protocol_options_get_default_max_tls_protocol_version
__ Security: _sec_protocol_options_get_default_min_tls_protocol_version
__ Security: _sec_protocol_options_set_challenge_block
__ Security: _sec_protocol_options_set_local_identity
__ Security: _sec_protocol_options_set_tls_diffie_hellman_parameters
__ Security: _sec_protocol_options_set_tls_false_start_enabled
__ Security: _sec_protocol_options_set_tls_is_fallback_attempt
__ Security: _sec_protocol_options_set_tls_max_version
__ Security: _sec_protocol_options_set_tls_min_version
__ Security: _sec_protocol_options_set_tls_resumption_enabled
__ Security: _sec_protocol_options_set_tls_server_name
__ Security: _sec_protocol_options_set_tls_sni_disabled
__ Security: _sec_protocol_options_set_tls_tickets_enabled
__ Security: _sec_protocol_options_set_verify_block
__ Security: _sec_release
__ Security: _sec_retain
__ Security: _sec_trust_copy_ref
__ SystemConfiguration: _SCDynamicStoreCopyComputerName
__ SystemConfiguration: _SCDynamicStoreCopyKeyList
__ SystemConfiguration: _SCDynamicStoreCopyMultiple
__ SystemConfiguration: _SCDynamicStoreCopyProxies
__ SystemConfiguration: _SCDynamicStoreCopyValue
__ SystemConfiguration: _SCDynamicStoreCreate
__ SystemConfiguration: _SCDynamicStoreCreateWithOptions
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkGlobalEntity
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkInterfaceEntity
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkServiceEntity
__ SystemConfiguration: _SCDynamicStoreRemoveValue
__ SystemConfiguration: _SCDynamicStoreSetValue
__ SystemConfiguration: _SCNetworkConnectionCreateWithServiceID
__ SystemConfiguration: _SCNetworkConnectionGetStatus
__ SystemConfiguration: _SCNetworkConnectionGetTypeID
__ SystemConfiguration: _SCNetworkConnectionScheduleWithRunLoop
__ SystemConfiguration: _SCNetworkConnectionUnscheduleFromRunLoop
__ SystemConfiguration: _SCNetworkProxiesCopyMatching
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilityGetTypeID
__ SystemConfiguration: _SCNetworkReachabilityScheduleWithRunLoop
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilitySetDispatchQueue
__ SystemConfiguration: _SCNetworkReachabilityUnscheduleFromRunLoop
__ SystemConfiguration: _SCNetworkSignatureCopyIdentifierForConnectedSocket
__ SystemConfiguration: _kCFErrorDomainSystemConfiguration
__ SystemConfiguration: _kSCDynamicStoreDomainSetup
__ SystemConfiguration: _kSCDynamicStoreDomainState
__ SystemConfiguration: _kSCDynamicStorePropNetPrimaryInterface
__ SystemConfiguration: _kSCDynamicStorePropNetPrimaryService
__ SystemConfiguration: _kSCEntNetDNS
__ SystemConfiguration: _kSCEntNetIPv4
__ SystemConfiguration: _kSCEntNetInterface
__ SystemConfiguration: _kSCEntNetLink
__ SystemConfiguration: _kSCPropNetDNSServerAddresses
__ SystemConfiguration: _kSCPropNetIPv4Addresses
__ SystemConfiguration: _kSCPropNetIPv4Router
__ SystemConfiguration: _kSCPropNetInterfaceDeviceName
__ SystemConfiguration: _kSCPropNetInterfaceSubType
__ SystemConfiguration: _kSCPropNetInterfaceType
__ SystemConfiguration: _kSCPropNetLinkActive
__ SystemConfiguration: _kSCPropNetLinkDetaching
__ SystemConfiguration: _kSCPropNetProxiesFTPEnable
__ SystemConfiguration: _kSCPropNetProxiesFallBackAllowed
__ SystemConfiguration: _kSCPropNetProxiesHTTPEnable
__ SystemConfiguration: _kSCPropNetProxiesHTTPSEnable
__ SystemConfiguration: _kSCPropNetProxiesSOCKSEnable
__ SystemConfiguration: _kSCPropNetServiceOrder
__ SystemConfiguration: _kSCValNetInterfaceSubTypeL2TP
__ SystemConfiguration: _kSCValNetInterfaceSubTypePPTP
__ SystemConfiguration: _kSCValNetInterfaceTypePPP
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_MD5_Final
__ libSystem.B.dylib: _CC_MD5_Init
__ libSystem.B.dylib: _CC_MD5_Update
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _DNSServiceAddRecord
__ libSystem.B.dylib: _DNSServiceBrowse
__ libSystem.B.dylib: _DNSServiceConstructFullName
__ libSystem.B.dylib: _DNSServiceCreateConnection
__ libSystem.B.dylib: _DNSServiceEnumerateDomains
__ libSystem.B.dylib: _DNSServiceProcessResult
__ libSystem.B.dylib: _DNSServiceQueryRecord
__ libSystem.B.dylib: _DNSServiceRefDeallocate
__ libSystem.B.dylib: _DNSServiceRefSockFD
__ libSystem.B.dylib: _DNSServiceRegister
__ libSystem.B.dylib: _DNSServiceRemoveRecord
__ libSystem.B.dylib: _DNSServiceResolve
__ libSystem.B.dylib: _DNSServiceUpdateRecord
__ libSystem.B.dylib: _SANDBOX_CHECK_NO_REPORT
__ libSystem.B.dylib: _TXTRecordCreate
__ libSystem.B.dylib: _TXTRecordDeallocate
__ libSystem.B.dylib: _TXTRecordGetBytesPtr
__ libSystem.B.dylib: _TXTRecordGetCount
__ libSystem.B.dylib: _TXTRecordGetItemAtIndex
__ libSystem.B.dylib: _TXTRecordGetLength
__ libSystem.B.dylib: _TXTRecordSetValue
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___cxa_atexit
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: ___tolower
__ libSystem.B.dylib: __dispatch_data_destructor_free
__ libSystem.B.dylib: __dispatch_data_empty
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_mach_recv
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __getaddrinfo_interface_async_call
__ libSystem.B.dylib: __getnameinfo_interface_async_call
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_nospin_lock_lock
__ libSystem.B.dylib: __os_nospin_lock_unlock
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_error_termination_imminent
__ libSystem.B.dylib: __xpc_runtime_is_app_sandboxed
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: __xpc_type_uint64
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _acl_free
__ libSystem.B.dylib: _acl_get_link_np
__ libSystem.B.dylib: _acl_to_text
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _asprintf
__ libSystem.B.dylib: _atoi
__ libSystem.B.dylib: _atol
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _closedir
__ libSystem.B.dylib: _confstr
__ libSystem.B.dylib: _container_system_group_path_for_identifier
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_f
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_block_create_with_voucher_and_qos_class
__ libSystem.B.dylib: _dispatch_data_apply
__ libSystem.B.dylib: _dispatch_data_create
__ libSystem.B.dylib: _dispatch_data_create_alloc
__ libSystem.B.dylib: _dispatch_data_create_concat
__ libSystem.B.dylib: _dispatch_data_create_map
__ libSystem.B.dylib: _dispatch_data_create_subrange
__ libSystem.B.dylib: _dispatch_data_get_size
__ libSystem.B.dylib: _dispatch_get_current_queue
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_io_barrier
__ libSystem.B.dylib: _dispatch_io_close
__ libSystem.B.dylib: _dispatch_io_create
__ libSystem.B.dylib: _dispatch_io_get_descriptor
__ libSystem.B.dylib: _dispatch_io_set_low_water
__ libSystem.B.dylib: _dispatch_io_write
__ libSystem.B.dylib: _dispatch_main
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_sync_f
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlopen_preflight
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dup
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fchown
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fdopen
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fgetxattr
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeaddrinfo
__ libSystem.B.dylib: _freeifaddrs
__ libSystem.B.dylib: _fseeko
__ libSystem.B.dylib: _fsetxattr
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _ftello
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getaddrinfo
__ libSystem.B.dylib: _getaddrinfo_async_handle_reply
__ libSystem.B.dylib: _getaddrinfo_async_start
__ libSystem.B.dylib: _getegid
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _geteuid
__ libSystem.B.dylib: _getgid
__ libSystem.B.dylib: _gethostbyname
__ libSystem.B.dylib: _gethostname
__ libSystem.B.dylib: _getifaddrs
__ libSystem.B.dylib: _getnameinfo
__ libSystem.B.dylib: _getnameinfo_async_handle_reply
__ libSystem.B.dylib: _getnameinfo_async_start
__ libSystem.B.dylib: _getpeername
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprotobyname
__ libSystem.B.dylib: _getrlimit
__ libSystem.B.dylib: _getsockname
__ libSystem.B.dylib: _getsockopt
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _host_check_multiuser_mode
__ libSystem.B.dylib: _if_indextoname
__ libSystem.B.dylib: _if_nametoindex
__ libSystem.B.dylib: _inet_addr
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _inet_pton
__ libSystem.B.dylib: _ioctl
__ libSystem.B.dylib: _issetugid
__ libSystem.B.dylib: _lseek
__ libSystem.B.dylib: _lstat
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _mkpath_np
__ libSystem.B.dylib: _mkstemps
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _modf
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_check
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _open_dprotected_np
__ libSystem.B.dylib: _opendir
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_release
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_trylock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _perror
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _pthread_attr_destroy
__ libSystem.B.dylib: _pthread_attr_init
__ libSystem.B.dylib: _pthread_attr_setdetachstate
__ libSystem.B.dylib: _pthread_cond_destroy
__ libSystem.B.dylib: _pthread_cond_init
__ libSystem.B.dylib: _pthread_cond_signal
__ libSystem.B.dylib: _pthread_cond_wait
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_mach_thread_np
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_destroy
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _pthread_setschedparam
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _qsort
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _readdir
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _recvfrom
__ libSystem.B.dylib: _removefile
__ libSystem.B.dylib: _rename
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _sandbox_check_by_audit_token
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _sandbox_extension_release
__ libSystem.B.dylib: _select
__ libSystem.B.dylib: _sendto
__ libSystem.B.dylib: _setrlimit
__ libSystem.B.dylib: _setsockopt
__ libSystem.B.dylib: _signal
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _sprintf
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strcasecmp
__ libSystem.B.dylib: _strcasestr
__ libSystem.B.dylib: _strchr
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlcat
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncasecmp
__ libSystem.B.dylib: _strncasecmp_l
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _strndup
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _strrchr
__ libSystem.B.dylib: _strstr
__ libSystem.B.dylib: _strtod
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _strtoll
__ libSystem.B.dylib: _strtouq
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _syslog
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _uuid_copy
__ libSystem.B.dylib: _uuid_unparse_upper
__ libSystem.B.dylib: _voucher_copy
__ libSystem.B.dylib: _write
__ libSystem.B.dylib: _xpc_array_append_value
__ libSystem.B.dylib: _xpc_array_apply
__ libSystem.B.dylib: _xpc_array_create
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_array_get_value
__ libSystem.B.dylib: _xpc_array_set_string
__ libSystem.B.dylib: _xpc_array_set_uint64
__ libSystem.B.dylib: _xpc_bool_create
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_get_audit_token
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_count
__ libSystem.B.dylib: _xpc_dictionary_get_data
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_release
__ libSystem.B.dylib: _xpc_retain
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: _xpc_uint64_create
__ libSystem.B.dylib: _xpc_uint64_get_value
__ libSystem.B.dylib: dyld_stub_binder
__ libapple_nghttp2.dylib: _nghttp2_check_header_name
__ libapple_nghttp2.dylib: _nghttp2_check_header_value
__ libapple_nghttp2.dylib: _nghttp2_option_del
__ libapple_nghttp2.dylib: _nghttp2_option_new
__ libapple_nghttp2.dylib: _nghttp2_option_set_no_auto_window_update
__ libapple_nghttp2.dylib: _nghttp2_priority_spec_init
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_new
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_before_frame_send_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_error_callback2
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_begin_headers_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_data_chunk_recv_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_frame_not_send_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_frame_recv_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_frame_send_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_header_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_invalid_frame_recv_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_invalid_header_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_on_stream_close_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_recv_callback
__ libapple_nghttp2.dylib: _nghttp2_session_callbacks_set_send_callback
__ libapple_nghttp2.dylib: _nghttp2_session_client_new2
__ libapple_nghttp2.dylib: _nghttp2_session_consume_connection
__ libapple_nghttp2.dylib: _nghttp2_session_del
__ libapple_nghttp2.dylib: _nghttp2_session_get_next_stream_id
__ libapple_nghttp2.dylib: _nghttp2_session_get_stream_user_data
__ libapple_nghttp2.dylib: _nghttp2_session_mem_recv
__ libapple_nghttp2.dylib: _nghttp2_session_mem_send
__ libapple_nghttp2.dylib: _nghttp2_session_recv
__ libapple_nghttp2.dylib: _nghttp2_session_resume_data
__ libapple_nghttp2.dylib: _nghttp2_session_send
__ libapple_nghttp2.dylib: _nghttp2_session_set_next_stream_id
__ libapple_nghttp2.dylib: _nghttp2_session_set_stream_user_data
__ libapple_nghttp2.dylib: _nghttp2_session_terminate_session
__ libapple_nghttp2.dylib: _nghttp2_session_want_read
__ libapple_nghttp2.dylib: _nghttp2_session_want_write
__ libapple_nghttp2.dylib: _nghttp2_strerror
__ libapple_nghttp2.dylib: _nghttp2_submit_ping
__ libapple_nghttp2.dylib: _nghttp2_submit_priority
__ libapple_nghttp2.dylib: _nghttp2_submit_request
__ libapple_nghttp2.dylib: _nghttp2_submit_rst_stream
__ libapple_nghttp2.dylib: _nghttp2_submit_settings
__ libapple_nghttp2.dylib: _nghttp2_submit_window_update
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9has_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5eraseEmm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC1ERS3_b
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count4lockEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__14coutE
__ libc++.1.dylib: __ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPmi
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__15mutex4lockEv
__ libc++.1.dylib: __ZNSt3__15mutex6unlockEv
__ libc++.1.dylib: __ZNSt3__15mutexD1Ev
__ libc++.1.dylib: __ZNSt3__16localeC1ERKS0_
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__17codecvtIcc11__mbstate_tE2idE
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__19to_stringEi
__ libc++.1.dylib: __ZNSt3__19to_stringEj
__ libc++.1.dylib: __ZNSt3__19to_stringEx
__ libc++.1.dylib: __ZNSt3__19to_stringEy
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___gxx_personality_v0
__ libicucore.A.dylib: _uidna_IDNToASCII
__ libnetwork.dylib: __nw_content_context_default_message
__ libnetwork.dylib: __nw_content_context_final_send
__ libnetwork.dylib: __nw_parameters_configure_protocol_default_configuration
__ libnetwork.dylib: __nw_parameters_configure_protocol_disable
__ libnetwork.dylib: _kNWErrorDomainDNS
__ libnetwork.dylib: _kNWErrorDomainPOSIX
__ libnetwork.dylib: _kNWErrorDomainTLS
__ libnetwork.dylib: _kTCPListenerInterfaceAll
__ libnetwork.dylib: _network_proxy_copy_host
__ libnetwork.dylib: _network_proxy_create_from_parameters
__ libnetwork.dylib: _network_proxy_get_port
__ libnetwork.dylib: _network_proxy_get_type
__ libnetwork.dylib: _network_proxy_is_transparent
__ libnetwork.dylib: _nw_activity_activate
__ libnetwork.dylib: _nw_activity_complete_with_reason
__ libnetwork.dylib: _nw_activity_create
__ libnetwork.dylib: _nw_activity_get_token
__ libnetwork.dylib: _nw_activity_is_selected_for_reporting
__ libnetwork.dylib: _nw_activity_set_parent_activity
__ libnetwork.dylib: _nw_authentication_challenge_copy_http_message
__ libnetwork.dylib: _nw_authentication_challenge_get_attempt_count
__ libnetwork.dylib: _nw_authentication_credential_create
__ libnetwork.dylib: _nw_authentication_credential_set_password
__ libnetwork.dylib: _nw_authentication_credential_set_username
__ libnetwork.dylib: _nw_connection_add_client_event
__ libnetwork.dylib: _nw_connection_append_and_start_application_protocol
__ libnetwork.dylib: _nw_connection_better_path_available
__ libnetwork.dylib: _nw_connection_cancel
__ libnetwork.dylib: _nw_connection_copy_connected_local_endpoint
__ libnetwork.dylib: _nw_connection_copy_connected_path
__ libnetwork.dylib: _nw_connection_copy_connected_remote_endpoint
__ libnetwork.dylib: _nw_connection_copy_current_path
__ libnetwork.dylib: _nw_connection_copy_endpoint
__ libnetwork.dylib: _nw_connection_copy_establishment_report_on_queue
__ libnetwork.dylib: _nw_connection_copy_metadata
__ libnetwork.dylib: _nw_connection_copy_protocol_metadata
__ libnetwork.dylib: _nw_connection_copy_tcp_info
__ libnetwork.dylib: _nw_connection_create
__ libnetwork.dylib: _nw_connection_end_activity
__ libnetwork.dylib: _nw_connection_fillout_tcp_statistics
__ libnetwork.dylib: _nw_connection_get_id
__ libnetwork.dylib: _nw_connection_get_uuid
__ libnetwork.dylib: _nw_connection_modify_connected_protocol_stack
__ libnetwork.dylib: _nw_connection_multipath_copy_subflow_counts
__ libnetwork.dylib: _nw_connection_multipath_get_primary_subflow_interface_index
__ libnetwork.dylib: _nw_connection_multipath_get_subflow_count
__ libnetwork.dylib: _nw_connection_receive
__ libnetwork.dylib: _nw_connection_receive_message
__ libnetwork.dylib: _nw_connection_reset_expected_progress_target
__ libnetwork.dylib: _nw_connection_reset_traffic_class
__ libnetwork.dylib: _nw_connection_restart
__ libnetwork.dylib: _nw_connection_send
__ libnetwork.dylib: _nw_connection_set_adaptive_read_handler
__ libnetwork.dylib: _nw_connection_set_adaptive_write_handler
__ libnetwork.dylib: _nw_connection_set_alternate_path_state_handler
__ libnetwork.dylib: _nw_connection_set_event_handler
__ libnetwork.dylib: _nw_connection_set_excessive_keepalive_handler
__ libnetwork.dylib: _nw_connection_set_low_throughput_handler
__ libnetwork.dylib: _nw_connection_set_queue
__ libnetwork.dylib: _nw_connection_set_read_close_handler
__ libnetwork.dylib: _nw_connection_set_viability_changed_handler
__ libnetwork.dylib: _nw_connection_set_write_close_handler
__ libnetwork.dylib: _nw_connection_start
__ libnetwork.dylib: _nw_connection_start_activity
__ libnetwork.dylib: _nw_connection_used_fallback
__ libnetwork.dylib: _nw_connection_used_tfo
__ libnetwork.dylib: _nw_connection_uses_multipath
__ libnetwork.dylib: _nw_content_context_copy_protocol_metadata
__ libnetwork.dylib: _nw_content_context_create
__ libnetwork.dylib: _nw_content_context_get_is_final
__ libnetwork.dylib: _nw_content_context_set_metadata_for_protocol
__ libnetwork.dylib: _nw_context_activate
__ libnetwork.dylib: _nw_context_copy_implicit_context
__ libnetwork.dylib: _nw_context_create
__ libnetwork.dylib: _nw_context_get_identifier
__ libnetwork.dylib: _nw_context_set_isolate_protocol_cache
__ libnetwork.dylib: _nw_context_set_privacy_level
__ libnetwork.dylib: _nw_endpoint_copy_address_string
__ libnetwork.dylib: _nw_endpoint_copy_proxy_original_endpoint
__ libnetwork.dylib: _nw_endpoint_create_host
__ libnetwork.dylib: _nw_endpoint_create_host_with_numeric_port
__ libnetwork.dylib: _nw_endpoint_get_address
__ libnetwork.dylib: _nw_endpoint_get_description
__ libnetwork.dylib: _nw_endpoint_get_hostname
__ libnetwork.dylib: _nw_endpoint_get_parent_endpoint_domain
__ libnetwork.dylib: _nw_endpoint_get_port
__ libnetwork.dylib: _nw_endpoint_get_type
__ libnetwork.dylib: _nw_endpoint_set_alternate_port
__ libnetwork.dylib: _nw_error_copy_cf_error
__ libnetwork.dylib: _nw_error_get_error_code
__ libnetwork.dylib: _nw_establishment_report_copy_dictionary
__ libnetwork.dylib: _nw_establishment_report_create_from_dictionary
__ libnetwork.dylib: _nw_establishment_report_enumerate_protocols
__ libnetwork.dylib: _nw_establishment_report_enumerate_resolutions
__ libnetwork.dylib: _nw_establishment_report_get_attempt_started_after_milliseconds
__ libnetwork.dylib: _nw_establishment_report_get_duration_milliseconds
__ libnetwork.dylib: _nw_establishment_report_get_flow_started_after_milliseconds
__ libnetwork.dylib: _nw_establishment_report_get_resolution_started_after_milliseconds
__ libnetwork.dylib: _nw_interface_create_with_index
__ libnetwork.dylib: _nw_interface_create_with_name
__ libnetwork.dylib: _nw_interface_get_name
__ libnetwork.dylib: _nw_interface_get_subtype
__ libnetwork.dylib: _nw_interface_get_type
__ libnetwork.dylib: _nw_ip_options_set_local_address_preference
__ libnetwork.dylib: _nw_parameters_add_protocol_stack_member
__ libnetwork.dylib: _nw_parameters_add_proxy_options
__ libnetwork.dylib: _nw_parameters_copy
__ libnetwork.dylib: _nw_parameters_copy_default_protocol_stack
__ libnetwork.dylib: _nw_parameters_copy_preferred_netagent_domains
__ libnetwork.dylib: _nw_parameters_copy_preferred_netagent_types
__ libnetwork.dylib: _nw_parameters_copy_prohibited_interface_subtypes
__ libnetwork.dylib: _nw_parameters_copy_prohibited_interface_types
__ libnetwork.dylib: _nw_parameters_copy_protocol_value
__ libnetwork.dylib: _nw_parameters_create
__ libnetwork.dylib: _nw_parameters_create_protocol_parameters
__ libnetwork.dylib: _nw_parameters_create_secure_tcp
__ libnetwork.dylib: _nw_parameters_get_traffic_class
__ libnetwork.dylib: _nw_parameters_require_interface
__ libnetwork.dylib: _nw_parameters_set_account_id
__ libnetwork.dylib: _nw_parameters_set_background_traffic_management
__ libnetwork.dylib: _nw_parameters_set_context
__ libnetwork.dylib: _nw_parameters_set_discretionary
__ libnetwork.dylib: _nw_parameters_set_ecn_mode
__ libnetwork.dylib: _nw_parameters_set_effective_bundle_id
__ libnetwork.dylib: _nw_parameters_set_expected_workload
__ libnetwork.dylib: _nw_parameters_set_expired_dns_behavior
__ libnetwork.dylib: _nw_parameters_set_https_proxy_is_opaque
__ libnetwork.dylib: _nw_parameters_set_https_proxy_over_tls
__ libnetwork.dylib: _nw_parameters_set_indefinite
__ libnetwork.dylib: _nw_parameters_set_initial_data_payload
__ libnetwork.dylib: _nw_parameters_set_metadata
__ libnetwork.dylib: _nw_parameters_set_multipath_service
__ libnetwork.dylib: _nw_parameters_set_no_delay
__ libnetwork.dylib: _nw_parameters_set_no_fallback
__ libnetwork.dylib: _nw_parameters_set_no_proxy
__ libnetwork.dylib: _nw_parameters_set_preferred_netagent_classes
__ libnetwork.dylib: _nw_parameters_set_prohibit_constrained
__ libnetwork.dylib: _nw_parameters_set_prohibit_expensive
__ libnetwork.dylib: _nw_parameters_set_prohibited_interface_subtypes
__ libnetwork.dylib: _nw_parameters_set_prohibited_interface_types
__ libnetwork.dylib: _nw_parameters_set_protocol_value
__ libnetwork.dylib: _nw_parameters_set_proxy_configuration
__ libnetwork.dylib: _nw_parameters_set_receive_any_interface
__ libnetwork.dylib: _nw_parameters_set_required_netagent_classes
__ libnetwork.dylib: _nw_parameters_set_source_application
__ libnetwork.dylib: _nw_parameters_set_source_application_by_bundle_id
__ libnetwork.dylib: _nw_parameters_set_source_application_by_external_bundle_id
__ libnetwork.dylib: _nw_parameters_set_traffic_class
__ libnetwork.dylib: _nw_parameters_set_url
__ libnetwork.dylib: _nw_parameters_set_use_awdl
__ libnetwork.dylib: _nw_parameters_set_use_p2p
__ libnetwork.dylib: _nw_path_copy_interface
__ libnetwork.dylib: _nw_path_copy_parameters
__ libnetwork.dylib: _nw_path_get_interface_index
__ libnetwork.dylib: _nw_path_get_ipv4_network_signature
__ libnetwork.dylib: _nw_path_get_ipv6_network_signature
__ libnetwork.dylib: _nw_path_get_policy_id
__ libnetwork.dylib: _nw_path_get_reason
__ libnetwork.dylib: _nw_path_get_vpn_config_id
__ libnetwork.dylib: _nw_path_is_constrained
__ libnetwork.dylib: _nw_path_is_equal
__ libnetwork.dylib: _nw_path_is_expensive
__ libnetwork.dylib: _nw_path_is_per_app_vpn
__ libnetwork.dylib: _nw_path_uses_interface_subtype
__ libnetwork.dylib: _nw_path_uses_interface_type
__ libnetwork.dylib: _nw_protocol_copy_tls_definition
__ libnetwork.dylib: _nw_protocol_copy_ws_definition
__ libnetwork.dylib: _nw_protocol_definition_is_equal
__ libnetwork.dylib: _nw_protocol_metadata_is_tls
__ libnetwork.dylib: _nw_protocol_parameters_iterate_stack
__ libnetwork.dylib: _nw_protocol_register
__ libnetwork.dylib: _nw_protocol_set_default_one_to_one_callbacks
__ libnetwork.dylib: _nw_protocol_stack_copy_internet_protocol
__ libnetwork.dylib: _nw_protocol_stack_copy_transport_protocol
__ libnetwork.dylib: _nw_proxy_copy_http_connect_definition
__ libnetwork.dylib: _nw_proxy_create_options
__ libnetwork.dylib: _nw_proxy_options_set_authentication_challenge_handler
__ libnetwork.dylib: _nw_proxy_options_set_http_proxy_authorization_header
__ libnetwork.dylib: _nw_queue_context_target_dispatch_queue
__ libnetwork.dylib: _nw_release
__ libnetwork.dylib: _nw_retain
__ libnetwork.dylib: _nw_tcp_connection_copy_error
__ libnetwork.dylib: _nw_tcp_connection_set_tls_message_handler
__ libnetwork.dylib: _nw_tcp_connection_set_tls_prepare_handler
__ libnetwork.dylib: _nw_tcp_options_set_enable_fast_open
__ libnetwork.dylib: _nw_tls_copy_peer_certificates
__ libnetwork.dylib: _nw_tls_create_options
__ libnetwork.dylib: _nw_tls_create_peer_acceptable_distinguished_names
__ libnetwork.dylib: _nw_tls_create_peer_trust
__ libnetwork.dylib: _nw_tls_fetch_peer_public_key
__ libnetwork.dylib: _nw_tls_get_negotiated_cipher_spec
__ libnetwork.dylib: _nw_tls_get_negotiated_ssl_protocol
__ libnetwork.dylib: _nw_tls_get_peer_alpn_data
__ libnetwork.dylib: _nw_tls_get_peer_npn_data
__ libnetwork.dylib: _nw_tls_set_alpn_data
__ libnetwork.dylib: _nw_tls_set_ciphersuites
__ libnetwork.dylib: _nw_tls_set_config
__ libnetwork.dylib: _nw_tls_set_dh_parameters
__ libnetwork.dylib: _nw_tls_set_fallback
__ libnetwork.dylib: _nw_tls_set_false_start
__ libnetwork.dylib: _nw_tls_set_identity_from_array
__ libnetwork.dylib: _nw_tls_set_maximum_ssl_protocol
__ libnetwork.dylib: _nw_tls_set_minimum_ssl_protocol
__ libnetwork.dylib: _nw_tls_set_npn_data
__ libnetwork.dylib: _nw_tls_set_npn_enabled
__ libnetwork.dylib: _nw_tls_set_peer_hostname
__ libnetwork.dylib: _nw_tls_set_peer_trust
__ libnetwork.dylib: _nw_tls_set_psk_identity
__ libnetwork.dylib: _nw_tls_set_psk_secret
__ libnetwork.dylib: _nw_tls_set_session_resumption_enabled
__ libnetwork.dylib: _nw_tls_set_session_ticket_enabled
__ libnetwork.dylib: _nw_ws_copy_response_for_challenge
__ libnetwork.dylib: _nw_ws_create_metadata
__ libnetwork.dylib: _nw_ws_create_options
__ libnetwork.dylib: _nw_ws_metadata_get_close_code
__ libnetwork.dylib: _nw_ws_metadata_get_opcode
__ libnetwork.dylib: _nw_ws_metadata_set_close_code
__ libnetwork.dylib: _nw_ws_metadata_set_pong_handler
__ libnetwork.dylib: _nw_ws_options_set_auto_reply_ping
__ libnetwork.dylib: _nw_ws_options_set_maximum_message_size
__ libnetwork.dylib: _nw_ws_options_set_prepend_data
__ libnetwork.dylib: _nw_ws_options_set_skip_handshake
__ libnetwork.dylib: _tcp_connection_accept
__ libnetwork.dylib: _tcp_connection_add_event_adaptive_read_timeout
__ libnetwork.dylib: _tcp_connection_add_event_adaptive_write_timeout
__ libnetwork.dylib: _tcp_connection_add_event_excessive_keepalives
__ libnetwork.dylib: _tcp_connection_allow_client_socket_access
__ libnetwork.dylib: _tcp_connection_cancel
__ libnetwork.dylib: _tcp_connection_conditions_get_unmet_reason
__ libnetwork.dylib: _tcp_connection_conditions_met
__ libnetwork.dylib: _tcp_connection_copy_endpoint
__ libnetwork.dylib: _tcp_connection_copy_metadata
__ libnetwork.dylib: _tcp_connection_copy_nw_connection
__ libnetwork.dylib: _tcp_connection_copy_parameters
__ libnetwork.dylib: _tcp_connection_copy_proxy
__ libnetwork.dylib: _tcp_connection_copy_socket
__ libnetwork.dylib: _tcp_connection_copy_tcp_info
__ libnetwork.dylib: _tcp_connection_create
__ libnetwork.dylib: _tcp_connection_create_with_connected_fd
__ libnetwork.dylib: _tcp_connection_create_with_endpoint_and_parameters
__ libnetwork.dylib: _tcp_connection_create_with_service
__ libnetwork.dylib: _tcp_connection_create_with_sockaddr
__ libnetwork.dylib: _tcp_connection_did_fallback
__ libnetwork.dylib: _tcp_connection_get_connection_quality
__ libnetwork.dylib: _tcp_connection_get_error
__ libnetwork.dylib: _tcp_connection_get_hostname
__ libnetwork.dylib: _tcp_connection_get_interface
__ libnetwork.dylib: _tcp_connection_get_local
__ libnetwork.dylib: _tcp_connection_get_remote
__ libnetwork.dylib: _tcp_connection_get_socket
__ libnetwork.dylib: _tcp_connection_get_statistics
__ libnetwork.dylib: _tcp_connection_has_better_route
__ libnetwork.dylib: _tcp_connection_id
__ libnetwork.dylib: _tcp_connection_is_cellular
__ libnetwork.dylib: _tcp_connection_is_expensive
__ libnetwork.dylib: _tcp_connection_is_multipath
__ libnetwork.dylib: _tcp_connection_is_viable
__ libnetwork.dylib: _tcp_connection_log_event
__ libnetwork.dylib: _tcp_connection_multipath_copy_subflow_switch_counts
__ libnetwork.dylib: _tcp_connection_multipath_get_primary_subflow_ifindex
__ libnetwork.dylib: _tcp_connection_multipath_get_subflow_count
__ libnetwork.dylib: _tcp_connection_override_obscure
__ libnetwork.dylib: _tcp_connection_read
__ libnetwork.dylib: _tcp_connection_release
__ libnetwork.dylib: _tcp_connection_retain
__ libnetwork.dylib: _tcp_connection_retry
__ libnetwork.dylib: _tcp_connection_set_account_identifier
__ libnetwork.dylib: _tcp_connection_set_background_traffic_management
__ libnetwork.dylib: _tcp_connection_set_cancel_handler
__ libnetwork.dylib: _tcp_connection_set_cellular_service
__ libnetwork.dylib: _tcp_connection_set_connection_attempt_timeout
__ libnetwork.dylib: _tcp_connection_set_connection_pool
__ libnetwork.dylib: _tcp_connection_set_ecn_enabled
__ libnetwork.dylib: _tcp_connection_set_event_handler
__ libnetwork.dylib: _tcp_connection_set_extended_background_idle
__ libnetwork.dylib: _tcp_connection_set_fallback_fast
__ libnetwork.dylib: _tcp_connection_set_indefinite
__ libnetwork.dylib: _tcp_connection_set_initial_data_payload
__ libnetwork.dylib: _tcp_connection_set_interface_by_name
__ libnetwork.dylib: _tcp_connection_set_keepalive
__ libnetwork.dylib: _tcp_connection_set_keepalive_offload
__ libnetwork.dylib: _tcp_connection_set_metadata
__ libnetwork.dylib: _tcp_connection_set_minimum_throughput
__ libnetwork.dylib: _tcp_connection_set_multipath
__ libnetwork.dylib: _tcp_connection_set_multipath_service
__ libnetwork.dylib: _tcp_connection_set_no_cellular
__ libnetwork.dylib: _tcp_connection_set_no_delay
__ libnetwork.dylib: _tcp_connection_set_no_expensive
__ libnetwork.dylib: _tcp_connection_set_no_fallback
__ libnetwork.dylib: _tcp_connection_set_opportunistic
__ libnetwork.dylib: _tcp_connection_set_persistent
__ libnetwork.dylib: _tcp_connection_set_proxies
__ libnetwork.dylib: _tcp_connection_set_receive_any_interface
__ libnetwork.dylib: _tcp_connection_set_source_application
__ libnetwork.dylib: _tcp_connection_set_source_application_by_bundle
__ libnetwork.dylib: _tcp_connection_set_tfo
__ libnetwork.dylib: _tcp_connection_set_tls
__ libnetwork.dylib: _tcp_connection_set_traffic_class
__ libnetwork.dylib: _tcp_connection_set_url
__ libnetwork.dylib: _tcp_connection_set_usage_model
__ libnetwork.dylib: _tcp_connection_start
__ libnetwork.dylib: _tcp_connection_write
__ libnetwork.dylib: _tcp_connection_write_eof
__ libnetwork.dylib: _tcp_listener_cancel
__ libnetwork.dylib: _tcp_listener_create
__ libnetwork.dylib: _tcp_listener_enable_coprocessor_interface
__ libnetwork.dylib: _tcp_listener_get_port
__ libnetwork.dylib: _tcp_listener_release
__ libnetwork.dylib: _tcp_listener_retain
__ libnetwork.dylib: _tcp_listener_set_accept_handler
__ libnetwork.dylib: _tcp_listener_set_accept_handler_f
__ libnetwork.dylib: _tcp_listener_set_error_handler
__ libnetwork.dylib: _tcp_listener_set_error_handler_f
__ libnetwork.dylib: _tcp_listener_set_interface
__ libnetwork.dylib: _tcp_listener_set_port
__ libnetwork.dylib: _tcp_listener_set_service
__ libnetwork.dylib: _tcp_listener_start
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getName
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyCppObjectAtomic
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_lookUpClass
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _sel_getName
__ libobjc.A.dylib: _sel_registerName
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_db_config
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_free
__ libsqlite3.dylib: _sqlite3_mprintf
__ libsqlite3.dylib: _sqlite3_open
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_step
__ libz.1.dylib: _crc32
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
__ libz.1.dylib: _inflateInit_
__NSCFTaskForClass : NSObject /usr/lib/libxml2.2.dylib
 @property  <__NSURLSessionTaskGroupForConfiguration> *group
 @property  Class cl
 @property  NSURLRequest *request
 @property  NSUUID *uniqueIdentifier
 @property  NSURL *uploadFile
 @property  NSData *bodyData
 @property  @? completion
 @property  NSString *downloadFilePath
 @property  NSData *resumeData
 @property  @? downloadCompletion

  // instance methods
  -[__NSCFTaskForClass dealloc]
  -[__NSCFTaskForClass uniqueIdentifier]
  -[__NSCFTaskForClass group]
  -[__NSCFTaskForClass setRequest:]
  -[__NSCFTaskForClass request]
  -[__NSCFTaskForClass setUniqueIdentifier:]
  -[__NSCFTaskForClass setCompletion:]
  -[__NSCFTaskForClass completion]
  -[__NSCFTaskForClass cl]
  -[__NSCFTaskForClass uploadFile]
  -[__NSCFTaskForClass bodyData]
  -[__NSCFTaskForClass downloadFilePath]
  -[__NSCFTaskForClass resumeData]
  -[__NSCFTaskForClass downloadCompletion]
  -[__NSCFTaskForClass initWithGroup:]
  -[__NSCFTaskForClass setCl:]
  -[__NSCFTaskForClass setUploadFile:]
  -[__NSCFTaskForClass setBodyData:]
  -[__NSCFTaskForClass setDownloadFilePath:]
  -[__NSCFTaskForClass setResumeData:]
  -[__NSCFTaskForClass setDownloadCompletion:]


__NSCFDummyQueue : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[__NSCFDummyQueue dealloc]
  -[__NSCFDummyQueue addOperationWithBlock:]
  -[__NSCFDummyQueue maxConcurrentOperationCount]
  -[__NSCFDummyQueue initWithDispatchQueue:]


__NSCFURLProtocolClient_NS : NSObject /usr/lib/libxml2.2.dylib <NSURLProtocolClient>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFURLProtocolClient_NS dealloc]
  -[__NSCFURLProtocolClient_NS challenge]
  -[__NSCFURLProtocolClient_NS URLProtocol:wasRedirectedToRequest:redirectResponse:]
  -[__NSCFURLProtocolClient_NS URLProtocol:cachedResponseIsValid:]
  -[__NSCFURLProtocolClient_NS URLProtocol:didReceiveResponse:cacheStoragePolicy:]
  -[__NSCFURLProtocolClient_NS URLProtocol:didLoadData:]
  -[__NSCFURLProtocolClient_NS URLProtocolDidFinishLoading:]
  -[__NSCFURLProtocolClient_NS URLProtocol:didFailWithError:]
  -[__NSCFURLProtocolClient_NS URLProtocol:didReceiveAuthenticationChallenge:]
  -[__NSCFURLProtocolClient_NS URLProtocol:didCancelAuthenticationChallenge:]
  -[__NSCFURLProtocolClient_NS initWithCFClient:prot:]
  -[__NSCFURLProtocolClient_NS withCustomProtocolScheduling:]
  -[__NSCFURLProtocolClient_NS teardown]
  -[__NSCFURLProtocolClient_NS cfChallenge]


__NSURLSessionLocal : __NSCFURLSession <NSURLSessionDataDelegate, NSURLSessionDataDelegatePrivate, NSURLSessionTaskDelegatePrivate, NSURLSessionDataDelegate_Internal, NSURLSessionSubclass, __NSURLSessionTaskGroupForConfiguration>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURLSessionConfiguration *_groupConfiguration
 @property  NSURLSession *_groupSession

  // instance methods
  -[__NSURLSessionLocal dealloc]
  -[__NSURLSessionLocal copyWithZone:]
  -[__NSURLSessionLocal .cxx_destruct]
  -[__NSURLSessionLocal .cxx_construct]
  -[__NSURLSessionLocal URLSession:didBecomeInvalidWithError:]
  -[__NSURLSessionLocal URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[__NSURLSessionLocal URLSession:task:didReceiveChallenge:completionHandler:]
  -[__NSURLSessionLocal URLSession:task:needNewBodyStream:]
  -[__NSURLSessionLocal URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:]
  -[__NSURLSessionLocal URLSession:task:didFinishCollectingMetrics:]
  -[__NSURLSessionLocal URLSession:task:didCompleteWithError:]
  -[__NSURLSessionLocal URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[__NSURLSessionLocal URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:]
  -[__NSURLSessionLocal _dataTaskWithTaskForClass:]
  -[__NSURLSessionLocal _uploadTaskWithTaskForClass:]
  -[__NSURLSessionLocal _downloadTaskWithTaskForClass:]
  -[__NSURLSessionLocal _AVAssetDownloadTaskForURL:destinationURL:options:]
  -[__NSURLSessionLocal AVAssetDownloadTaskForURLAsset:destinationURL:options:]
  -[__NSURLSessionLocal AVAssetDownloadTaskForURLAsset:assetTitle:assetArtworkData:options:]
  -[__NSURLSessionLocal AVAggregateAssetDownloadTaskForURLAsset:mediaSelections:assetTitle:assetArtworkData:options:]
  -[__NSURLSessionLocal webSocketTaskForRequest:]
  -[__NSURLSessionLocal webSocketTaskForURL:protocols:]
  -[__NSURLSessionLocal _onqueue_flushWithCompletionHandler:]
  -[__NSURLSessionLocal _onqueue_completeInvalidation:]
  -[__NSURLSessionLocal _onqueue_resetStorageWithCompletionHandler:]
  -[__NSURLSessionLocal _onqueue_getTasksWithCompletionHandler:]
  -[__NSURLSessionLocal _URLSession:dataTask:didReceiveData:completionHandler:]
  -[__NSURLSessionLocal URLSession:task:_isWaitingForConnectionWithReason:]
  -[__NSURLSessionLocal URLSession:task:_conditionalRequirementsChanged:]
  -[__NSURLSessionLocal connToTask:]
  -[__NSURLSessionLocal sessionConnectionClass:task:]
  -[__NSURLSessionLocal replaceTask:withTask:]
  -[__NSURLSessionLocal copyTasks]
  -[__NSURLSessionLocal addConnectionlessTask:]
  -[__NSURLSessionLocal removeConnectionlessTask:]
  -[__NSURLSessionLocal _onqueue_connectUploadTask:strippedRequest:bodyStream:bodyParts:]
  -[__NSURLSessionLocal _onqueue_canonicalizeTaskAndCreateConnection:]
  -[__NSURLSessionLocal _onqueue_configureAndCreateConnection:task:]
  -[__NSURLSessionLocal nextSeed]
  -[__NSURLSessionLocal taskForClassInfo:]
  -[__NSURLSessionLocal _onqueue_invokeInvalidateCallback]
  -[__NSURLSessionLocal _onqueue_checkForCompletion]
  -[__NSURLSessionLocal _onqueue_invalidateSession:withQueue:completion:]
  -[__NSURLSessionLocal _flushOrResetStorage:reset:]
  -[__NSURLSessionLocal _useTLSSessionCacheFromSession:]
  -[__NSURLSessionLocal initWithConfiguration:delegate:delegateQueue:]
  -[__NSURLSessionLocal task:terminatedConnection:]
  -[__NSURLSessionLocal _actualTubeManager]
  -[__NSURLSessionLocal _copyHSTSPolicy]
  -[__NSURLSessionLocal _withXURLCache:]
  -[__NSURLSessionLocal _createXCookieStorage0]
  -[__NSURLSessionLocal _createXCookieStorage]
  -[__NSURLSessionLocal _createXCredentialStorage0]
  -[__NSURLSessionLocal _createXCredentialStorage]
  -[__NSURLSessionLocal _invalidateAllConnections]
  -[__NSURLSessionLocal _purgeIdleConnections]
  -[__NSURLSessionLocal invalidateUnpurgeableConnectionsForConnectionCacheKey:]
  -[__NSURLSessionLocal _createTaskFromOriginalCFURLRequest:updatedCFURLRequest:connProps:sockProps:]
  -[__NSURLSessionLocal copyBaseStorageForRequest:]
  -[__NSURLSessionLocal _getCookieHeadersForTask:completionHandler:]
  -[__NSURLSessionLocal _withConnectionCache_getCurrentSSLMethodForKey:scheduling:]
  -[__NSURLSessionLocal _withConnectionCache_setCurrentSSLMethod:forKey:scheduling:]
  -[__NSURLSessionLocal _withConnectionCache_enqueueRequest:forProtocol:scheduling:options:]
  -[__NSURLSessionLocal _withConnectionCache_getPendingTubeForProtocol:withKey:scheduling:]
  -[__NSURLSessionLocal _protocolClassesForTask:]
  -[__NSURLSessionLocal _protocolClassForTask:]
  -[__NSURLSessionLocal _protocolClassForTask:skipAppSSO:]
  -[__NSURLSessionLocal _protocolClassForRequest:]
  -[__NSURLSessionLocal _createCanonicalRequest:task:]
  -[__NSURLSessionLocal _createCanonicalRequestForTask:]
  -[__NSURLSessionLocal _request:isCacheEquivalentTo:]
  -[__NSURLSessionLocal _cfurlRequest:isCacheEquivalentTo:]
  -[__NSURLSessionLocal _newURLProtocolForTask:client:protocolClass:]
  -[__NSURLSessionLocal _newURLProtocolForTask:client:]
  -[__NSURLSessionLocal _prependProtocolClassForDefaultSession:]
  -[__NSURLSessionLocal _removeProtocolClassForDefaultSession:]
  -[__NSURLSessionLocal _proxyDataTaskForRequest:withDelegate:uniqueIdentifier:]
  -[__NSURLSessionLocal _cacheOnlyDataTaskForRequest:withDelegate:]
  -[__NSURLSessionLocal _delegateForTask:]
  -[__NSURLSessionLocal _URLSession:companionAvailabilityChanged:]
  -[__NSURLSessionLocal _URLSession:task:getAuthHeadersForResponse:completionHandler:]


NSURLResponseInternal : NSObject /usr/lib/libxml2.2.dylib
 @property  ^{URLResponse=^^?^{__CFURL}^{__CFString}^{__CFString}qdd^{__CFDictionary}^{__CFDictionary}i^{__CFData}^{HTTPResponse}CC} _inner

  // instance methods
  -[NSURLResponseInternal init]
  -[NSURLResponseInternal dealloc]
  -[NSURLResponseInternal .cxx_destruct]
  -[NSURLResponseInternal .cxx_construct]
  -[NSURLResponseInternal _inner]


NSURLResponse : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding, NSCopying>
 @property  ^{URLResponse=^^?^{__CFURL}^{__CFString}^{__CFString}qdd^{__CFDictionary}^{__CFDictionary}i^{__CFData}^{HTTPResponse}CC} _cf_resp_data
 @property  NSURL *URL
 @property  NSString *MIMEType
 @property  long long expectedContentLength
 @property  NSString *textEncodingName
 @property  NSString *suggestedFilename

  // class methods
  +[NSURLResponse supportsSecureCoding]
  +[NSURLResponse getObjectKeyWithIndex:]
  +[NSURLResponse _responseWithCFURLResponse:]

  // instance methods
  -[NSURLResponse init]
  -[NSURLResponse dealloc]
  -[NSURLResponse copyWithZone:]
  -[NSURLResponse encodeWithCoder:]
  -[NSURLResponse initWithCoder:]
  -[NSURLResponse URL]
  -[NSURLResponse MIMEType]
  -[NSURLResponse _inner]
  -[NSURLResponse _initWithInternal:]
  -[NSURLResponse _initWithCFURLResponse:]
  -[NSURLResponse initWithURL:MIMEType:expectedContentLength:textEncodingName:]
  -[NSURLResponse textEncodingName]
  -[NSURLResponse expectedContentLength]
  -[NSURLResponse suggestedFilename]
  -[NSURLResponse _cf_resp_data]
  -[NSURLResponse set_cf_resp_data:]
  -[NSURLResponse _peerCertificateChain]
  -[NSURLResponse _CFURLResponse]
  -[NSURLResponse _setExpectedContentLength:]
  -[NSURLResponse _setMIMEType:]
  -[NSURLResponse _lastModifiedDate]
  -[NSURLResponse _mustRevalidate]
  -[NSURLResponse _freshnessLifetime]
  -[NSURLResponse _calculatedExpiration]


NSHTTPURLResponseInternal : NSObject /usr/lib/libxml2.2.dylib <NSCoding>
  // instance methods
  -[NSHTTPURLResponseInternal dealloc]
  -[NSHTTPURLResponseInternal encodeWithCoder:]
  -[NSHTTPURLResponseInternal initWithCoder:]


NSHTTPURLResponse : NSURLResponse
 @property  long long statusCode
 @property  NSDictionary *allHeaderFields

  // class methods
  +[NSHTTPURLResponse supportsSecureCoding]
  +[NSHTTPURLResponse isErrorStatusCode:]
  +[NSHTTPURLResponse localizedStringForStatusCode:]

  // instance methods
  -[NSHTTPURLResponse dealloc]
  -[NSHTTPURLResponse encodeWithCoder:]
  -[NSHTTPURLResponse initWithCoder:]
  -[NSHTTPURLResponse statusCode]
  -[NSHTTPURLResponse allHeaderFields]
  -[NSHTTPURLResponse valueForHTTPHeaderField:]
  -[NSHTTPURLResponse _initWithCFURLResponse:]
  -[NSHTTPURLResponse initWithURL:statusCode:headerFields:requestTime:]
  -[NSHTTPURLResponse initWithURL:statusCode:HTTPVersion:headerFields:]
  -[NSHTTPURLResponse _allHTTPHeaderFieldsAsArrays]
  -[NSHTTPURLResponse _peerCertificateChain]
  -[NSHTTPURLResponse _clientCertificateChain]
  -[NSHTTPURLResponse _clientCertificateState]
  -[NSHTTPURLResponse _setPeerTrust:]
  -[NSHTTPURLResponse _peerTrust]


ABRequestHandler : NSObject /usr/lib/libxml2.2.dylib <AuthBrokerQuery>
  // instance methods
  -[ABRequestHandler init]
  -[ABRequestHandler fetchProxyCredential:reply:]


AuthBrokerAgentXPCListenerDelegate : NSObject /usr/lib/libxml2.2.dylib <NSXPCListenerDelegate>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  ABRequestHandler *requestHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AuthBrokerAgentXPCListenerDelegate init]
  -[AuthBrokerAgentXPCListenerDelegate dealloc]
  -[AuthBrokerAgentXPCListenerDelegate queue]
  -[AuthBrokerAgentXPCListenerDelegate listener:shouldAcceptNewConnection:]
  -[AuthBrokerAgentXPCListenerDelegate requestHandler]
  -[AuthBrokerAgentXPCListenerDelegate setRequestHandler:]


UnitTestSchemeUpgradeTaskDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionTaskDelegatePrivate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[UnitTestSchemeUpgradeTaskDelegate URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[UnitTestSchemeUpgradeTaskDelegate URLSession:task:_schemeUpgraded:completionHandler:]
  -[UnitTestSchemeUpgradeTaskDelegate initWithTestDisposition:]
  -[UnitTestSchemeUpgradeTaskDelegate testPassed:]


__NSCFLocalDataTask : __NSCFLocalSessionTask
  // instance methods
  -[__NSCFLocalDataTask isKindOfClass:]
  -[__NSCFLocalDataTask _onqueue_didReceiveResponse:completion:]


__NSCFLocalUploadTask : __NSCFLocalDataTask
  // instance methods
  -[__NSCFLocalUploadTask isKindOfClass:]


__NSCFLocalSessionTask : __NSCFURLSessionTask <NSURLSessionTaskSubclass, NSURLSessionDataTaskSubclass, NSURLSessionUploadTaskSubclass, SessionConnectionDelegate>
 @property  __NSCFURLSessionConnection *cfConn
 @property  NSURL *uploadFile
 @property  @? dataTaskCompletion
 @property  BOOL pendingResponseDisposition
 @property  BOOL pendingResponseDisposition_didFinish
 @property  unsigned long suspendCount
 @property  @? async_initialization
 @property  BOOL didIssueWaitingForConnectivity
 @property  BOOL didIssueDidFinish
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFLocalSessionTask dealloc]
  -[__NSCFLocalSessionTask .cxx_destruct]
  -[__NSCFLocalSessionTask suspendCount]
  -[__NSCFLocalSessionTask .cxx_construct]
  -[__NSCFLocalSessionTask setConnection:]
  -[__NSCFLocalSessionTask uploadFile]
  -[__NSCFLocalSessionTask setUploadFile:]
  -[__NSCFLocalSessionTask _onqueue_completeInitialization]
  -[__NSCFLocalSessionTask setAsync_initialization:]
  -[__NSCFLocalSessionTask _onSessionQueue_disavow]
  -[__NSCFLocalSessionTask _onqueue_strippedMutableRequest]
  -[__NSCFLocalSessionTask setDataTaskCompletion:]
  -[__NSCFLocalSessionTask initWithOriginalRequest:ident:taskGroup:]
  -[__NSCFLocalSessionTask _onqueue_setupNextEffectiveConfigurationWithCompletionHandler:]
  -[__NSCFLocalSessionTask _onqueue_cancel]
  -[__NSCFLocalSessionTask cfConn]
  -[__NSCFLocalSessionTask _onqueue_didReceiveResponse:completion:]
  -[__NSCFLocalSessionTask _private_onqueue_didReceiveResponseDisposition:completion:]
  -[__NSCFLocalSessionTask setPendingResponseDisposition:]
  -[__NSCFLocalSessionTask _onqueue_suspend]
  -[__NSCFLocalSessionTask dataTaskCompletion]
  -[__NSCFLocalSessionTask _private_onqueue_didReceiveResponse:]
  -[__NSCFLocalSessionTask connection:wasRedirected:newRequest:responseCallback:]
  -[__NSCFLocalSessionTask connection:request:needsNewBodyStreamCallback:]
  -[__NSCFLocalSessionTask connection:didReceiveResponse:completion:]
  -[__NSCFLocalSessionTask connection:willCacheResponse:responseCallback:]
  -[__NSCFLocalSessionTask connection:didFinishCollectingMetrics:completion:]
  -[__NSCFLocalSessionTask connectionWillFinishLoading:]
  -[__NSCFLocalSessionTask connection:didFinishLoadingWithError:]
  -[__NSCFLocalSessionTask connection:didReceiveConnectionCacheKey:]
  -[__NSCFLocalSessionTask connection:challenged:authCallback:]
  -[__NSCFLocalSessionTask connection:didReceiveData:completion:]
  -[__NSCFLocalSessionTask connection:sentBodyBytes:totalBytes:expectedBytes:]
  -[__NSCFLocalSessionTask connection:_willSendRequestForEstablishedConnection:completion:]
  -[__NSCFLocalSessionTask connection:waitingWithReason:]
  -[__NSCFLocalSessionTask connection:_conditionalRequirementsChanged:]
  -[__NSCFLocalSessionTask connection:didReceiveSocketInputStream:outputStream:]
  -[__NSCFLocalSessionTask connection:needConnectedSocketToHost:port:completion:]
  -[__NSCFLocalSessionTask connection:didReceiveTCPConnection:extraBytes:]
  -[__NSCFLocalSessionTask _onqueue_resume]
  -[__NSCFLocalSessionTask _onqueue_adjustPoolPriority]
  -[__NSCFLocalSessionTask _onqueue_adjustLoadingPoolPriority]
  -[__NSCFLocalSessionTask initWithLocalTask:]
  -[__NSCFLocalSessionTask initWithBackgroundTaskInfo:taskGroup:]
  -[__NSCFLocalSessionTask _finishAllow]
  -[__NSCFLocalSessionTask _finishBecomeDownload:]
  -[__NSCFLocalSessionTask _finishBecomeStream:forConnection:completionHandler:]
  -[__NSCFLocalSessionTask localSession]
  -[__NSCFLocalSessionTask _private_onqueue_becomeStreamTaskWithCompletionHandler:]
  -[__NSCFLocalSessionTask _onqueue_didReceiveResponse:redirectRequest:withCompletion:]
  -[__NSCFLocalSessionTask _onqueue_didReceiveChallenge:request:withCompletion:]
  -[__NSCFLocalSessionTask _onqueue_willCacheResponse:withCompletion:]
  -[__NSCFLocalSessionTask _onqueue_didFinishCollectingMetrics:completion:]
  -[__NSCFLocalSessionTask _task_onqueue_didFinish]
  -[__NSCFLocalSessionTask _onqueue_didFinishWithError:]
  -[__NSCFLocalSessionTask _onqueue_didReceiveDispatchData:completion:]
  -[__NSCFLocalSessionTask _task_onqueue_didReceiveDispatchData:completionHandler:]
  -[__NSCFLocalSessionTask _onqueue_needNewBodyStream:withCompletion:]
  -[__NSCFLocalSessionTask _onqueue_willSendRequestForEstablishedConnection:withCompletion:]
  -[__NSCFLocalSessionTask _onqueue_connectionWaitingWithReason:]
  -[__NSCFLocalSessionTask _onqueue_conditionalRequirementsChanged:]
  -[__NSCFLocalSessionTask _onqueue_needConnectedSocketToHost:port:withCompletion:]
  -[__NSCFLocalSessionTask _onqueue_didSendBodyBytes:totalBytesSent:totalBytesExpectedToSend:]
  -[__NSCFLocalSessionTask _onqueue_cancel_with_error:]
  -[__NSCFLocalSessionTask _onqueue_adjustPriorityHint:]
  -[__NSCFLocalSessionTask _onqueue_adjustBytesPerSecondLimit:]
  -[__NSCFLocalSessionTask _onqueue_expectedProgressTargetChanged]
  -[__NSCFLocalSessionTask cancel_with_error:]
  -[__NSCFLocalSessionTask _askForConnectedSocketLater]
  -[__NSCFLocalSessionTask error:code:]
  -[__NSCFLocalSessionTask nsurlError:]
  -[__NSCFLocalSessionTask canceledError]
  -[__NSCFLocalSessionTask posixError:]
  -[__NSCFLocalSessionTask timeoutErrorWithStreamErrorCode:]
  -[__NSCFLocalSessionTask resourceTimeoutError]
  -[__NSCFLocalSessionTask startTimeoutError]
  -[__NSCFLocalSessionTask startResourceTimer]
  -[__NSCFLocalSessionTask _needSendingMetrics]
  -[__NSCFLocalSessionTask _didSendMetrics]
  -[__NSCFLocalSessionTask _onqueue_startTimer:withTimeoutInNanos:streamErrorCode:]
  -[__NSCFLocalSessionTask _onqueue_startResourceTimer:]
  -[__NSCFLocalSessionTask set_timeoutIntervalForResource:]
  -[__NSCFLocalSessionTask _onqueue_restartResourceTimer:]
  -[__NSCFLocalSessionTask _onqueue_startResourceTimer]
  -[__NSCFLocalSessionTask _onqueue_startStartTimer]
  -[__NSCFLocalSessionTask _onqueue_startPayloadTransmissionTimer]
  -[__NSCFLocalSessionTask _onqueue_submitConnectionWork:]
  -[__NSCFLocalSessionTask _onqueue_suspendWorkQueue]
  -[__NSCFLocalSessionTask _onqueue_resumeWorkQueue]
  -[__NSCFLocalSessionTask setCfConn:]
  -[__NSCFLocalSessionTask pendingResponseDisposition]
  -[__NSCFLocalSessionTask pendingResponseDisposition_didFinish]
  -[__NSCFLocalSessionTask setPendingResponseDisposition_didFinish:]
  -[__NSCFLocalSessionTask setSuspendCount:]
  -[__NSCFLocalSessionTask async_initialization]
  -[__NSCFLocalSessionTask didIssueWaitingForConnectivity]
  -[__NSCFLocalSessionTask setDidIssueWaitingForConnectivity:]
  -[__NSCFLocalSessionTask didIssueDidFinish]
  -[__NSCFLocalSessionTask setDidIssueDidFinish:]


__NSCFLocalDownloadTask : __NSCFLocalSessionTask <NSURLSessionDownloadTaskSubclass, __NSCFLocalDownloadFileOpener>
 @property  @? fileCompletion
 @property  @? dataAckCompletion
 @property  __NSCFLocalDownloadFile *downloadFile
 @property  @? resumeCallback
 @property  @? _afterDidReportProgressOnQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[__NSCFLocalDownloadTask _requestFromResumeDataDictionary:]
  +[__NSCFLocalDownloadTask _expandResumeData:]
  +[__NSCFLocalDownloadTask _requestFromResumeDataDictionary:key:]

  // instance methods
  -[__NSCFLocalDownloadTask dealloc]
  -[__NSCFLocalDownloadTask isKindOfClass:]
  -[__NSCFLocalDownloadTask _onqueue_completeInitialization]
  -[__NSCFLocalDownloadTask setFileCompletion:]
  -[__NSCFLocalDownloadTask initWithTaskGroup:resumeData:ident:]
  -[__NSCFLocalDownloadTask initWithTaskGroup:request:filePath:ident:]
  -[__NSCFLocalDownloadTask _onqueue_didReceiveResponse:completion:]
  -[__NSCFLocalDownloadTask _onqueue_willCacheResponse:withCompletion:]
  -[__NSCFLocalDownloadTask _task_onqueue_didFinish]
  -[__NSCFLocalDownloadTask _task_onqueue_didReceiveDispatchData:completionHandler:]
  -[__NSCFLocalDownloadTask initWithLocalSessionTask:connection:]
  -[__NSCFLocalDownloadTask _afterDidReportProgressOnQueue]
  -[__NSCFLocalDownloadTask openItemForPath:mode:]
  -[__NSCFLocalDownloadTask _onqueue_cancelByProducingResumeData:]
  -[__NSCFLocalDownloadTask explicitDownloadDirectory]
  -[__NSCFLocalDownloadTask setupForNewDownload:]
  -[__NSCFLocalDownloadTask initWithTaskGroup:request:ident:]
  -[__NSCFLocalDownloadTask _copySocketStreamProperties]
  -[__NSCFLocalDownloadTask cancelByProducingResumeData:]
  -[__NSCFLocalDownloadTask reportProgress:]
  -[__NSCFLocalDownloadTask _private_posixError:]
  -[__NSCFLocalDownloadTask writeAndResume]
  -[__NSCFLocalDownloadTask terminateExtractorWithError:completion:]
  -[__NSCFLocalDownloadTask suspendExtractor]
  -[__NSCFLocalDownloadTask createResumeInformation:]
  -[__NSCFLocalDownloadTask _private_errorCompletion]
  -[__NSCFLocalDownloadTask _private_fileCompletion]
  -[__NSCFLocalDownloadTask checkWrite]
  -[__NSCFLocalDownloadTask _supplyExtractorWithData:completion:]
  -[__NSCFLocalDownloadTask fileCompletion]
  -[__NSCFLocalDownloadTask downloadFile]
  -[__NSCFLocalDownloadTask setDownloadFile:]
  -[__NSCFLocalDownloadTask resumeCallback]
  -[__NSCFLocalDownloadTask setResumeCallback:]
  -[__NSCFLocalDownloadTask set_afterDidReportProgressOnQueue:]
  -[__NSCFLocalDownloadTask dataAckCompletion]
  -[__NSCFLocalDownloadTask setDataAckCompletion:]


myDeli : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionDelegate>
 @property  NSError *someError
 @property  BOOL receivedResponse
 @property  BOOL hasCanceled
 @property  NSData *resumeData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[myDeli init]
  -[myDeli dealloc]
  -[myDeli URLSession:task:didCompleteWithError:]
  -[myDeli URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]
  -[myDeli resumeData]
  -[myDeli setResumeData:]
  -[myDeli someError]
  -[myDeli setSomeError:]
  -[myDeli receivedResponse]
  -[myDeli setReceivedResponse:]
  -[myDeli hasCanceled]
  -[myDeli setHasCanceled:]


SZDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionDownloadDelegate, NSURLSessionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SZDelegate init]
  -[SZDelegate dealloc]
  -[SZDelegate URLSession:task:didCompleteWithError:]
  -[SZDelegate URLSession:downloadTask:didFinishDownloadingToURL:]
  -[SZDelegate URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]
  -[SZDelegate getWaiter]


MultiplePauseResumeDataDownloadDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionDownloadDelegate, NSURLSessionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MultiplePauseResumeDataDownloadDelegate dealloc]
  -[MultiplePauseResumeDataDownloadDelegate URLSession:task:didCompleteWithError:]
  -[MultiplePauseResumeDataDownloadDelegate URLSession:downloadTask:didFinishDownloadingToURL:]
  -[MultiplePauseResumeDataDownloadDelegate URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]
  -[MultiplePauseResumeDataDownloadDelegate URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:]
  -[MultiplePauseResumeDataDownloadDelegate getWaiter]
  -[MultiplePauseResumeDataDownloadDelegate initExpectingDirectory:deleteTempFileOnce:]
  -[MultiplePauseResumeDataDownloadDelegate getSizeOfEntity]
  -[MultiplePauseResumeDataDownloadDelegate isExpectingDirectory]
  -[MultiplePauseResumeDataDownloadDelegate isRetryingWithResumeData]
  -[MultiplePauseResumeDataDownloadDelegate didTestPass]


FinalXPauseResumeDataDownloadDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionDownloadDelegate, NSURLSessionDelegate>
 @property  long long totalBytesWritten
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FinalXPauseResumeDataDownloadDelegate init]
  -[FinalXPauseResumeDataDownloadDelegate dealloc]
  -[FinalXPauseResumeDataDownloadDelegate URLSession:task:didCompleteWithError:]
  -[FinalXPauseResumeDataDownloadDelegate URLSession:downloadTask:didFinishDownloadingToURL:]
  -[FinalXPauseResumeDataDownloadDelegate URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]
  -[FinalXPauseResumeDataDownloadDelegate getWaiter]
  -[FinalXPauseResumeDataDownloadDelegate getSizeOfEntity]
  -[FinalXPauseResumeDataDownloadDelegate didTestPass]
  -[FinalXPauseResumeDataDownloadDelegate getSizeDownloadedAtFinish]
  -[FinalXPauseResumeDataDownloadDelegate totalBytesWritten]
  -[FinalXPauseResumeDataDownloadDelegate setTotalBytesWritten:]


NSNetServicesInternal : NSObject /usr/lib/libxml2.2.dylib
 @property  NSMutableArray *monitors

  // instance methods
  -[NSNetServicesInternal dealloc]
  -[NSNetServicesInternal listener]
  -[NSNetServicesInternal setListener:]
  -[NSNetServicesInternal copyScheduledRunLoop:andMode:]
  -[NSNetServicesInternal setScheduledRunLoop:andMode:]
  -[NSNetServicesInternal monitors]
  -[NSNetServicesInternal setMonitors:]


NSURLAuthenticationChallengeInternal : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[NSURLAuthenticationChallengeInternal dealloc]
  -[NSURLAuthenticationChallengeInternal initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:]


NSURLAuthenticationChallenge : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding>
 @property  NSURLProtectionSpace *protectionSpace
 @property  NSURLCredential *proposedCredential
 @property  long long previousFailureCount
 @property  NSURLResponse *failureResponse
 @property  NSError *error
 @property  <NSURLAuthenticationChallengeSender> *sender

  // class methods
  +[NSURLAuthenticationChallenge supportsSecureCoding]
  +[NSURLAuthenticationChallenge _authenticationChallengeForCFAuthChallenge:sender:]
  +[NSURLAuthenticationChallenge _createAuthenticationChallengeForCFAuthChallenge:sender:]

  // instance methods
  -[NSURLAuthenticationChallenge init]
  -[NSURLAuthenticationChallenge dealloc]
  -[NSURLAuthenticationChallenge encodeWithCoder:]
  -[NSURLAuthenticationChallenge initWithCoder:]
  -[NSURLAuthenticationChallenge error]
  -[NSURLAuthenticationChallenge sender]
  -[NSURLAuthenticationChallenge setSender:]
  -[NSURLAuthenticationChallenge protectionSpace]
  -[NSURLAuthenticationChallenge previousFailureCount]
  -[NSURLAuthenticationChallenge _createCFAuthChallenge]
  -[NSURLAuthenticationChallenge proposedCredential]
  -[NSURLAuthenticationChallenge failureResponse]
  -[NSURLAuthenticationChallenge initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:]
  -[NSURLAuthenticationChallenge _initWithListOfProtectionSpaces:CurrentProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:]
  -[NSURLAuthenticationChallenge initWithAuthenticationChallenge:sender:]
  -[NSURLAuthenticationChallenge _initWithCFAuthChallenge:sender:]
  -[NSURLAuthenticationChallenge _isPasswordBasedChallenge]


UnitTestPOSTTaskDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionTaskDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[UnitTestPOSTTaskDelegate URLSession:task:needNewBodyStream:]


UnitTestRedirectTaskDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionTaskDelegate>
 @property  BOOL correctRequestURLSent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[UnitTestRedirectTaskDelegate URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[UnitTestRedirectTaskDelegate correctRequestURLSent]
  -[UnitTestRedirectTaskDelegate setCorrectRequestURLSent:]


__CFN_TransactionMetrics : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding>
 @property  NSDictionary *legacyStaticMetrics
 @property  __CFN_TaskMetrics *taskMetrics
 @property  __CFN_SessionMetrics *sessionMetrics
 @property  long long lastResponseHeaderSize
 @property  long long lastResponseBodySize
 @property  long long lastResponseBodyTransferSize
 @property  NSUUID *UUID
 @property  NSURLRequest *request
 @property  NSURLRequest *transferredRequest
 @property  NSURLResponse *cachedResponse
 @property  NSURLResponse *lastResponse
 @property  __CFN_ConnectionMetrics *connectionMetrics
 @property  BOOL scheduledOriginLoad
 @property  BOOL firstOnConnection
 @property  long long requestHeaderSize
 @property  long long requestBodySize
 @property  long long requestBodyTransferSize
 @property  long long responseHeaderSize
 @property  long long responseBodySize
 @property  long long responseBodyTransferSize
 @property  double beginTime
 @property  double endTime
 @property  double cacheLookupBeginTime
 @property  double cacheLookupEndTime
 @property  double requestBeginTime
 @property  double requestEndTime
 @property  double responseBeginTime
 @property  double responseEndTime
 @property  unsigned long endReason
 @property  BOOL pushed
 @property  long long schedulingTier
 @property  BOOL APSRelayAttempted
 @property  BOOL APSRelaySucceeded
 @property  NSDictionary *tcpInfoBegin
 @property  NSDictionary *tcpInfoEnd
 @property  NSDictionary *subflowCountsBegin
 @property  NSDictionary *subflowCountsEnd
 @property  long long options

  // class methods
  +[__CFN_TransactionMetrics supportsSecureCoding]
  +[__CFN_TransactionMetrics nstatCountsFromTCPInfo:]

  // instance methods
  -[__CFN_TransactionMetrics options]
  -[__CFN_TransactionMetrics encodeWithCoder:]
  -[__CFN_TransactionMetrics initWithCoder:]
  -[__CFN_TransactionMetrics .cxx_destruct]
  -[__CFN_TransactionMetrics UUID]
  -[__CFN_TransactionMetrics setUUID:]
  -[__CFN_TransactionMetrics setOptions:]
  -[__CFN_TransactionMetrics setRequest:]
  -[__CFN_TransactionMetrics request]
  -[__CFN_TransactionMetrics setAPSRelaySucceeded:]
  -[__CFN_TransactionMetrics setRequestBeginTime:]
  -[__CFN_TransactionMetrics setResponseEndTime:]
  -[__CFN_TransactionMetrics setAPSRelayAttempted:]
  -[__CFN_TransactionMetrics requestEnd]
  -[__CFN_TransactionMetrics setRequestEndTime:]
  -[__CFN_TransactionMetrics setResponseBeginTime:]
  -[__CFN_TransactionMetrics importLegacyStaticMetricsFromAPSRelay:]
  -[__CFN_TransactionMetrics requestHeaderSize]
  -[__CFN_TransactionMetrics requestBodyTransferSize]
  -[__CFN_TransactionMetrics setRequestBodyTransferSize:]
  -[__CFN_TransactionMetrics setRequestHeaderSize:]
  -[__CFN_TransactionMetrics initWithRequest:taskMetrics:sessionMetrics:]
  -[__CFN_TransactionMetrics cacheLookupBegin]
  -[__CFN_TransactionMetrics cacheLookupEnd:]
  -[__CFN_TransactionMetrics originLoad]
  -[__CFN_TransactionMetrics connectionCreate:]
  -[__CFN_TransactionMetrics requestBeginOnConnection:]
  -[__CFN_TransactionMetrics requestHeaderEnd]
  -[__CFN_TransactionMetrics requestBody:]
  -[__CFN_TransactionMetrics responseBegin]
  -[__CFN_TransactionMetrics responseHeaderEnd:]
  -[__CFN_TransactionMetrics responseBody:]
  -[__CFN_TransactionMetrics responseEnd]
  -[__CFN_TransactionMetrics end:]
  -[__CFN_TransactionMetrics transferredRequest]
  -[__CFN_TransactionMetrics setTransferredRequest:]
  -[__CFN_TransactionMetrics cachedResponse]
  -[__CFN_TransactionMetrics setCachedResponse:]
  -[__CFN_TransactionMetrics lastResponse]
  -[__CFN_TransactionMetrics setLastResponse:]
  -[__CFN_TransactionMetrics connectionMetrics]
  -[__CFN_TransactionMetrics setConnectionMetrics:]
  -[__CFN_TransactionMetrics scheduledOriginLoad]
  -[__CFN_TransactionMetrics setScheduledOriginLoad:]
  -[__CFN_TransactionMetrics firstOnConnection]
  -[__CFN_TransactionMetrics setFirstOnConnection:]
  -[__CFN_TransactionMetrics requestBodySize]
  -[__CFN_TransactionMetrics setRequestBodySize:]
  -[__CFN_TransactionMetrics responseHeaderSize]
  -[__CFN_TransactionMetrics setResponseHeaderSize:]
  -[__CFN_TransactionMetrics responseBodySize]
  -[__CFN_TransactionMetrics setResponseBodySize:]
  -[__CFN_TransactionMetrics responseBodyTransferSize]
  -[__CFN_TransactionMetrics setResponseBodyTransferSize:]
  -[__CFN_TransactionMetrics beginTime]
  -[__CFN_TransactionMetrics setBeginTime:]
  -[__CFN_TransactionMetrics endTime]
  -[__CFN_TransactionMetrics setEndTime:]
  -[__CFN_TransactionMetrics cacheLookupBeginTime]
  -[__CFN_TransactionMetrics setCacheLookupBeginTime:]
  -[__CFN_TransactionMetrics cacheLookupEndTime]
  -[__CFN_TransactionMetrics setCacheLookupEndTime:]
  -[__CFN_TransactionMetrics requestBeginTime]
  -[__CFN_TransactionMetrics requestEndTime]
  -[__CFN_TransactionMetrics responseBeginTime]
  -[__CFN_TransactionMetrics responseEndTime]
  -[__CFN_TransactionMetrics endReason]
  -[__CFN_TransactionMetrics setEndReason:]
  -[__CFN_TransactionMetrics isPushed]
  -[__CFN_TransactionMetrics setPushed:]
  -[__CFN_TransactionMetrics schedulingTier]
  -[__CFN_TransactionMetrics setSchedulingTier:]
  -[__CFN_TransactionMetrics APSRelayAttempted]
  -[__CFN_TransactionMetrics APSRelaySucceeded]
  -[__CFN_TransactionMetrics tcpInfoBegin]
  -[__CFN_TransactionMetrics setTcpInfoBegin:]
  -[__CFN_TransactionMetrics tcpInfoEnd]
  -[__CFN_TransactionMetrics setTcpInfoEnd:]
  -[__CFN_TransactionMetrics subflowCountsBegin]
  -[__CFN_TransactionMetrics setSubflowCountsBegin:]
  -[__CFN_TransactionMetrics subflowCountsEnd]
  -[__CFN_TransactionMetrics setSubflowCountsEnd:]
  -[__CFN_TransactionMetrics taskMetrics]
  -[__CFN_TransactionMetrics setTaskMetrics:]
  -[__CFN_TransactionMetrics sessionMetrics]
  -[__CFN_TransactionMetrics setSessionMetrics:]
  -[__CFN_TransactionMetrics lastResponseHeaderSize]
  -[__CFN_TransactionMetrics setLastResponseHeaderSize:]
  -[__CFN_TransactionMetrics lastResponseBodySize]
  -[__CFN_TransactionMetrics setLastResponseBodySize:]
  -[__CFN_TransactionMetrics lastResponseBodyTransferSize]
  -[__CFN_TransactionMetrics setLastResponseBodyTransferSize:]
  -[__CFN_TransactionMetrics legacyStaticMetrics]


NSURLSessionDownloadTask : NSURLSessionTask
  // class methods
  +[NSURLSessionDownloadTask new]

  // instance methods
  -[NSURLSessionDownloadTask init]
  -[NSURLSessionDownloadTask cancelByProducingResumeData:]


_AWDMetricsReporter : NSObject /usr/lib/libxml2.2.dylib
  // class methods
  +[_AWDMetricsReporter _reportTimingDataToAWD:]


NSURLCredential : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding, NSCopying>
 @property  unsigned long persistence

  // class methods
  +[NSURLCredential supportsSecureCoding]
  +[NSURLCredential credentialWithIdentity:certificates:persistence:]
  +[NSURLCredential credentialWithUser:password:persistence:]
  +[NSURLCredential credentialForTrust:]

  // instance methods
  -[NSURLCredential dealloc]
  -[NSURLCredential isEqual:]
  -[NSURLCredential copyWithZone:]
  -[NSURLCredential user]
  -[NSURLCredential encodeWithCoder:]
  -[NSURLCredential initWithCoder:]
  -[NSURLCredential password]
  -[NSURLCredential certificates]
  -[NSURLCredential identity]
  -[NSURLCredential initWithTrust:]
  -[NSURLCredential _initWithCFURLCredential:]
  -[NSURLCredential _cfurlcredential]
  -[NSURLCredential initWithUser:password:persistence:]
  -[NSURLCredential initWithIdentity:certificates:persistence:]
  -[NSURLCredential _CFURLCredential]
  -[NSURLCredential hasPassword]
  -[NSURLCredential persistence]
  -[NSURLCredential _hasSWCACreatorAttribute]
  -[NSURLCredential _removeSWCACreatorAttribute]


_NSCFTranslatedFileURLProtocol : NSURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol canInitWithRequest:]
  +[_NSCFTranslatedFileURLProtocol requestIsCacheEquivalent:toRequest:]
  +[_NSCFTranslatedFileURLProtocol canonicalRequestForRequest:]
  +[_NSCFTranslatedFileURLProtocol pimpl]

  // instance methods
  -[_NSCFTranslatedFileURLProtocol dealloc]
  -[_NSCFTranslatedFileURLProtocol stopLoading]
  -[_NSCFTranslatedFileURLProtocol startLoading]
  -[_NSCFTranslatedFileURLProtocol initWithRequest:cachedResponse:client:]
  -[_NSCFTranslatedFileURLProtocol cfurlClient]


_NSCFTranslatedFileURLProtocol_PIMPL_0 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_0 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_1 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_1 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_2 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_2 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_3 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_3 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_4 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_4 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_5 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_5 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_6 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_6 pimpl]


_NSCFTranslatedFileURLProtocol_PIMPL_7 : _NSCFTranslatedFileURLProtocol
  // class methods
  +[_NSCFTranslatedFileURLProtocol_PIMPL_7 pimpl]


_NSCFWikipediaProtocol : NSURLProtocol
  // class methods
  +[_NSCFWikipediaProtocol canInitWithRequest:]
  +[_NSCFWikipediaProtocol requestIsCacheEquivalent:toRequest:]
  +[_NSCFWikipediaProtocol canonicalRequestForRequest:]

  // instance methods
  -[_NSCFWikipediaProtocol dealloc]
  -[_NSCFWikipediaProtocol stopLoading]
  -[_NSCFWikipediaProtocol startLoading]
  -[_NSCFWikipediaProtocol initWithRequest:cachedResponse:client:]
  -[_NSCFWikipediaProtocol scheduleOnRunloop:mode:]
  -[_NSCFWikipediaProtocol unscheduleOnRunloop:mode:]


__CFN_SessionMetrics : NSObject /usr/lib/libxml2.2.dylib <_NSURLSessionEventDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *UUID

  // instance methods
  -[__CFN_SessionMetrics .cxx_destruct]
  -[__CFN_SessionMetrics UUID]
  -[__CFN_SessionMetrics setUUID:]
  -[__CFN_SessionMetrics transactionEnd:reason:absoluteTime:]
  -[__CFN_SessionMetrics transactionResponseEnd:size:transferSize:absoluteTime:]
  -[__CFN_SessionMetrics transactionResponseBody:data:absoluteTime:]
  -[__CFN_SessionMetrics transactionResponseHeaderEnd:response:size:absoluteTime:]
  -[__CFN_SessionMetrics transactionResponseBegin:absoluteTime:]
  -[__CFN_SessionMetrics transactionRequestEnd:size:transferSize:absoluteTime:]
  -[__CFN_SessionMetrics transactionRequestBody:data:absoluteTime:]
  -[__CFN_SessionMetrics transactionRequestHeaderEnd:request:size:absoluteTime:]
  -[__CFN_SessionMetrics transactionRequestBegin:onConnection:absoluteTime:]
  -[__CFN_SessionMetrics transactionCacheLookupEnd:cachedResponse:absoluteTime:]
  -[__CFN_SessionMetrics transactionCacheLookupBegin:absoluteTime:]
  -[__CFN_SessionMetrics initWithSession:]
  -[__CFN_SessionMetrics delegateEvent:]
  -[__CFN_SessionMetrics delegateBegin:]
  -[__CFN_SessionMetrics delegateEnd:]
  -[__CFN_SessionMetrics taskCreate:request:]
  -[__CFN_SessionMetrics taskCreate:pointer:withRequest:fromSession:absoluteTime:]
  -[__CFN_SessionMetrics sessionDelegateEnd:selector:absoluteTime:]
  -[__CFN_SessionMetrics sessionDelegateBegin:selector:absoluteTime:]
  -[__CFN_SessionMetrics sessionDelegateEvent:selector:absoluteTime:]
  -[__CFN_SessionMetrics transactionCreate:withRequest:fromTask:absoluteTime:]
  -[__CFN_SessionMetrics taskComplete:withError:absoluteTime:]
  -[__CFN_SessionMetrics taskSuspend:absoluteTime:]
  -[__CFN_SessionMetrics taskResume:absoluteTime:]
  -[__CFN_SessionMetrics taskCompletionHandlerEvent:absoluteTime:]
  -[__CFN_SessionMetrics taskDelegateEnd:selector:absoluteTime:]
  -[__CFN_SessionMetrics taskDelegateBegin:selector:absoluteTime:]
  -[__CFN_SessionMetrics taskDelegateEvent:selector:absoluteTime:]
  -[__CFN_SessionMetrics connectionEnd:absoluteTime:]
  -[__CFN_SessionMetrics connectionEstablish:properties:absoluteTime:]
  -[__CFN_SessionMetrics connectionWait:absoluteTime:]
  -[__CFN_SessionMetrics connectionBegin:fromTransaction:properties:absoluteTime:]
  -[__CFN_SessionMetrics sessionDestroy:absoluteTime:]
  -[__CFN_SessionMetrics sessionCreate:pointer:absoluteTime:]


NSURLProtectionSpace : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding, NSCopying>
 @property  NSString *realm
 @property  BOOL receivesCredentialSecurely
 @property  BOOL isProxy
 @property  NSString *host
 @property  long long port
 @property  NSString *proxyType
 @property  NSString *protocol
 @property  NSString *authenticationMethod

  // class methods
  +[NSURLProtectionSpace supportsSecureCoding]

  // instance methods
  -[NSURLProtectionSpace isProxy]
  -[NSURLProtectionSpace init]
  -[NSURLProtectionSpace dealloc]
  -[NSURLProtectionSpace isEqual:]
  -[NSURLProtectionSpace copyWithZone:]
  -[NSURLProtectionSpace encodeWithCoder:]
  -[NSURLProtectionSpace initWithCoder:]
  -[NSURLProtectionSpace host]
  -[NSURLProtectionSpace port]
  -[NSURLProtectionSpace protocol]
  -[NSURLProtectionSpace authenticationMethod]
  -[NSURLProtectionSpace serverTrust]
  -[NSURLProtectionSpace proxyType]
  -[NSURLProtectionSpace realm]
  -[NSURLProtectionSpace _initWithCFURLProtectionSpace:]
  -[NSURLProtectionSpace _cfurlprtotectionspace]
  -[NSURLProtectionSpace _internalInit]
  -[NSURLProtectionSpace initWithHost:port:protocol:realm:authenticationMethod:]
  -[NSURLProtectionSpace initWithProxyHost:port:type:realm:authenticationMethod:]
  -[NSURLProtectionSpace receivesCredentialSecurely]
  -[NSURLProtectionSpace distinguishedNames]
  -[NSURLProtectionSpace _CFURLProtectionSpace]


AVAssetDownloadTask : NSURLSessionTask

NSURLSessionAVAssetDownloadTask : NSURLSessionTask
 @property  unsigned long AVAssetDownloadToken
 @property  NSURL *URL
 @property  NSURL *destinationURL

  // instance methods
  -[NSURLSessionAVAssetDownloadTask setURL:]
  -[NSURLSessionAVAssetDownloadTask URL]
  -[NSURLSessionAVAssetDownloadTask setDestinationURL:]
  -[NSURLSessionAVAssetDownloadTask destinationURL]
  -[NSURLSessionAVAssetDownloadTask AVAssetDownloadToken]


NSURLSessionAVAggregateAssetDownloadTask : NSURLSessionTask

__NSCFURLLocalStreamTaskWorkBlockOp : __NSCFURLLocalStreamTaskWork
  // class methods
  +[__NSCFURLLocalStreamTaskWorkBlockOp opWithBlock:description:]

  // instance methods
  -[__NSCFURLLocalStreamTaskWorkBlockOp dealloc]
  -[__NSCFURLLocalStreamTaskWorkBlockOp executeBlock]
  -[__NSCFURLLocalStreamTaskWorkBlockOp shouldWaitForTLS]
  -[__NSCFURLLocalStreamTaskWorkBlockOp markBlockAsWaitingOnTls:]


__NSCFURLLocalStreamTaskWorkWrite : __NSCFURLLocalStreamTaskWork
  // instance methods
  -[__NSCFURLLocalStreamTaskWorkWrite dealloc]


__NSCFURLLocalStreamTaskWorkRead : __NSCFURLLocalStreamTaskWork
  // instance methods
  -[__NSCFURLLocalStreamTaskWorkRead dealloc]


__NSCFURLLocalStreamTaskWork : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[__NSCFURLLocalStreamTaskWork initWithDescription:]
  -[__NSCFURLLocalStreamTaskWork _static_description]


TheServerPorterHolderOfPower : NSObject /usr/lib/libxml2.2.dylib
 @property  int serverPort

  // instance methods
  -[TheServerPorterHolderOfPower initWithPort:]
  -[TheServerPorterHolderOfPower serverPort]
  -[TheServerPorterHolderOfPower setServerPort:]


TestDelegate24722429 : TheServerPorterHolderOfPower <NSURLSessionDataDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TestDelegate24722429 URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[TestDelegate24722429 URLSession:task:didReceiveChallenge:completionHandler:]


TestDelegate24725687 : TheServerPorterHolderOfPower <NSURLSessionDataDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TestDelegate24725687 URLSession:task:didCompleteWithError:]


TestDelegateParentDirAuthCheck : TheServerPorterHolderOfPower <NSURLSessionDataDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TestDelegateParentDirAuthCheck URLSession:task:didReceiveChallenge:completionHandler:]
  -[TestDelegateParentDirAuthCheck URLSession:task:didCompleteWithError:]


TestDelegatetAuthSlashFirstRequest : TheServerPorterHolderOfPower <NSURLSessionDataDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TestDelegatetAuthSlashFirstRequest URLSession:task:didReceiveChallenge:completionHandler:]
  -[TestDelegatetAuthSlashFirstRequest URLSession:task:didCompleteWithError:]


NSAboutURLProtocol : NSURLProtocol
  // class methods
  +[NSAboutURLProtocol canInitWithRequest:]
  +[NSAboutURLProtocol canonicalRequestForRequest:]

  // instance methods
  -[NSAboutURLProtocol stopLoading]
  -[NSAboutURLProtocol startLoading]


NSURLCacheDBReader : NSObject /usr/lib/libxml2.2.dylib
 @property  BOOL isDBOpen
 @property  NSString *dbPathDirectory
 @property  NSString *dbPathFile
 @property  NSMutableSet *recentTimeStampLookups
 @property  unsigned char performTimeRelativeLookups

  // instance methods
  -[NSURLCacheDBReader init]
  -[NSURLCacheDBReader dealloc]
  -[NSURLCacheDBReader createCachedResponseForKey:cacheDataPath:cacheDataFile:caller:]
  -[NSURLCacheDBReader initWithDBPath:maxSize:]
  -[NSURLCacheDBReader openAndPrepareReadCacheDB]
  -[NSURLCacheDBReader recentTimeStampLookups]
  -[NSURLCacheDBReader cleanupAndShutdown_Lock]
  -[NSURLCacheDBReader _openDBReadConnections]
  -[NSURLCacheDBReader _closeDB]
  -[NSURLCacheDBReader _closeDBReadConnections]
  -[NSURLCacheDBReader _prepareDBStatements]
  -[NSURLCacheDBReader _prepareDBSelectStatements]
  -[NSURLCacheDBReader _finalizeAllDBStatements]
  -[NSURLCacheDBReader _finalizeDBSelectStatements]
  -[NSURLCacheDBReader performTimeRelativeLookupWithInitialTime:caller:]
  -[NSURLCacheDBReader stepSQLStatement:toCompletionWithRetry:]
  -[NSURLCacheDBReader execSQLStatement:onConnection:toCompletionWithRetry:writeLockHeld:]
  -[NSURLCacheDBReader createCachedResponseDictForTransmissionWithKey:objectVersion:storagePolicy:responseObjectBytes:responseObjectBytesLength:protoProps:protoPropsLength:receiverDataBytes:receiverDataLength:requestObjectBytes:requestObjectBytesLength:userInfoBytes:useInfoLength:isDataOnFS:cacheDirPath:cacheFileName:]
  -[NSURLCacheDBReader isDBOpen]
  -[NSURLCacheDBReader setIsDBOpen:]
  -[NSURLCacheDBReader setRecentTimeStampLookups:]
  -[NSURLCacheDBReader performTimeRelativeLookups]
  -[NSURLCacheDBReader setPerformTimeRelativeLookups:]
  -[NSURLCacheDBReader dbPathDirectory]
  -[NSURLCacheDBReader setDbPathDirectory:]
  -[NSURLCacheDBReader dbPathFile]
  -[NSURLCacheDBReader setDbPathFile:]


_NSCFServer : NSObject /usr/lib/libxml2.2.dylib
 @property  NSNumber *listenerID
 @property  NSObject<OS_tcp_listener> *listener
 @property  long long type
 @property  long long listenerPort
 @property  NSString *interface
 @property  NSDictionary *configuration
 @property  BOOL enableCoprocessorInterface

  // class methods
  +[_NSCFServer listeners]
  +[_NSCFServer startSocksServerWithPort:]
  +[_NSCFServer stopAll]
  +[_NSCFServer adressesForInterface:]

  // instance methods
  -[_NSCFServer init]
  -[_NSCFServer dealloc]
  -[_NSCFServer type]
  -[_NSCFServer setType:]
  -[_NSCFServer listener]
  -[_NSCFServer .cxx_destruct]
  -[_NSCFServer stop]
  -[_NSCFServer start]
  -[_NSCFServer interface]
  -[_NSCFServer setInterface:]
  -[_NSCFServer initWithType:]
  -[_NSCFServer setListener:]
  -[_NSCFServer setConfiguration:]
  -[_NSCFServer configuration]
  -[_NSCFServer initWithType:port:interface:]
  -[_NSCFServer initWithType:port:]
  -[_NSCFServer startWithAcceptHandler:]
  -[_NSCFServer listenerPort]
  -[_NSCFServer setListenerPort:]
  -[_NSCFServer isCoprocessorInterfaceEnabled]
  -[_NSCFServer setEnableCoprocessorInterface:]
  -[_NSCFServer listenerID]
  -[_NSCFServer setListenerID:]


NSURLProtocolInternal : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[NSURLProtocolInternal dealloc]


NSURLProtocol : NSObject /usr/lib/libxml2.2.dylib
 @property  <NSURLProtocolClient> *client
 @property  NSURLRequest *request
 @property  NSCachedURLResponse *cachedResponse

  // class methods
  +[NSURLProtocol _protocolClassForRequest:]
  +[NSURLProtocol canInitWithTask:]
  +[NSURLProtocol canInitWithRequest:]
  +[NSURLProtocol requestIsCacheEquivalent:toRequest:]
  +[NSURLProtocol canonicalRequestForRequest:]
  +[NSURLProtocol canonicalRequestForRequest:task:]
  +[NSURLProtocol registerClass:]
  +[NSURLProtocol unregisterClass:]
  +[NSURLProtocol propertyForKey:inRequest:]
  +[NSURLProtocol setProperty:forKey:inRequest:]
  +[NSURLProtocol removePropertyForKey:inRequest:]
  +[NSURLProtocol _protocolClassForRequest:skipAppSSO:]
  +[NSURLProtocol _makeRequestCanonicalByMakingRequestURLCanonical:]

  // instance methods
  -[NSURLProtocol init]
  -[NSURLProtocol dealloc]
  -[NSURLProtocol client]
  -[NSURLProtocol request]
  -[NSURLProtocol stopLoading]
  -[NSURLProtocol startLoading]
  -[NSURLProtocol initWithTask:cachedResponse:client:]
  -[NSURLProtocol initWithRequest:cachedResponse:client:]
  -[NSURLProtocol cachedResponse]


_NSCFURLProtocol : NSURLProtocol
  // class methods
  +[_NSCFURLProtocol canInitWithTask:]
  +[_NSCFURLProtocol canInitWithRequest:]
  +[_NSCFURLProtocol _cf_internalImpl]
  +[_NSCFURLProtocol requestIsCacheEquivalent:toRequest:]
  +[_NSCFURLProtocol canonicalRequestForRequest:]
  +[_NSCFURLProtocol canonicalRequestForRequest:task:]

  // instance methods
  -[_NSCFURLProtocol dealloc]
  -[_NSCFURLProtocol stopLoading]
  -[_NSCFURLProtocol startLoading]
  -[_NSCFURLProtocol initWithRequest:cachedResponse:client:]


__NSCFURLSessionConnection : NSObject /usr/lib/libxml2.2.dylib <NSCopying>
 @property  NSURLSessionTask *task
 @property  <SessionConnectionDelegate> *delegate

  // instance methods
  -[__NSCFURLSessionConnection dealloc]
  -[__NSCFURLSessionConnection copyWithZone:]
  -[__NSCFURLSessionConnection delegate]
  -[__NSCFURLSessionConnection setDelegate:]
  -[__NSCFURLSessionConnection cancel]
  -[__NSCFURLSessionConnection resume]
  -[__NSCFURLSessionConnection suspend]
  -[__NSCFURLSessionConnection task]
  -[__NSCFURLSessionConnection setTask:]
  -[__NSCFURLSessionConnection initWithTask:delegate:delegateQueue:]
  -[__NSCFURLSessionConnection expectedProgressTargetChanged]
  -[__NSCFURLSessionConnection setBytesPerSecondLimit:]
  -[__NSCFURLSessionConnection setPriorityHint:]
  -[__NSCFURLSessionConnection setPoolPriority:]
  -[__NSCFURLSessionConnection setIsDownload:]
  -[__NSCFURLSessionConnection _cachedResponse]
  -[__NSCFURLSessionConnection withWorkQueueAsync:]
  -[__NSCFURLSessionConnection _setupForCache:expectedLength:response:]
  -[__NSCFURLSessionConnection _appendDataToCache:]
  -[__NSCFURLSessionConnection _tossCache]
  -[__NSCFURLSessionConnection _storeCachedResponse:]


__NSCFURLLocalSessionConnection : __NSCFURLSessionConnection <NSURLAuthenticationChallengeSender, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFURLLocalSessionConnection dealloc]
  -[__NSCFURLLocalSessionConnection cancel]
  -[__NSCFURLLocalSessionConnection resume]
  -[__NSCFURLLocalSessionConnection suspend]
  -[__NSCFURLLocalSessionConnection _cleanup]
  -[__NSCFURLLocalSessionConnection _tick]
  -[__NSCFURLLocalSessionConnection useCredential:forAuthenticationChallenge:]
  -[__NSCFURLLocalSessionConnection initWithTask:delegate:delegateQueue:]
  -[__NSCFURLLocalSessionConnection expectedProgressTargetChanged]
  -[__NSCFURLLocalSessionConnection setBytesPerSecondLimit:]
  -[__NSCFURLLocalSessionConnection setPriorityHint:]
  -[__NSCFURLLocalSessionConnection setPoolPriority:]
  -[__NSCFURLLocalSessionConnection setIsDownload:]
  -[__NSCFURLLocalSessionConnection continueWithoutCredentialForAuthenticationChallenge:]
  -[__NSCFURLLocalSessionConnection cancelAuthenticationChallenge:]
  -[__NSCFURLLocalSessionConnection withDelegateAndPendingCompletion:]
  -[__NSCFURLLocalSessionConnection _immediatePostDelegateTick]
  -[__NSCFURLLocalSessionConnection afterDelegateWithTick:]
  -[__NSCFURLLocalSessionConnection withLoaderOnQueue:]
  -[__NSCFURLLocalSessionConnection withLoaderAsync:]
  -[__NSCFURLLocalSessionConnection _tick_initialize_startLoad]
  -[__NSCFURLLocalSessionConnection _tick_initialize]
  -[__NSCFURLLocalSessionConnection _tick_sniffNow]
  -[__NSCFURLLocalSessionConnection _tick_running]
  -[__NSCFURLLocalSessionConnection _ackBytes:]
  -[__NSCFURLLocalSessionConnection _task_sendFinish]
  -[__NSCFURLLocalSessionConnection _tick_finishing]
  -[__NSCFURLLocalSessionConnection _sendResponseToDelegate:]
  -[__NSCFURLLocalSessionConnection _didReceiveResponse:sniff:rewrite:]
  -[__NSCFURLLocalSessionConnection _didReceiveData:]
  -[__NSCFURLLocalSessionConnection _didSendBodyData:]
  -[__NSCFURLLocalSessionConnection _didFinishWithError:]
  -[__NSCFURLLocalSessionConnection _didReceiveConnectionCacheKey:]
  -[__NSCFURLLocalSessionConnection _willSendRequestForEstablishedConnection:completion:]
  -[__NSCFURLLocalSessionConnection _connectionIsWaitingWithReason:]
  -[__NSCFURLLocalSessionConnection _conditionalRequirementsChanged:]
  -[__NSCFURLLocalSessionConnection _needConnectedSocketToHost:port:completion:]
  -[__NSCFURLLocalSessionConnection _redirectRequest:redirectResponse:completion:]
  -[__NSCFURLLocalSessionConnection _didReceiveChallenge:]
  -[__NSCFURLLocalSessionConnection _needNewBodyStream]
  -[__NSCFURLLocalSessionConnection _capturedSocketInputStream:outputStream:]
  -[__NSCFURLLocalSessionConnection _captureTransportConnection:extraBytes:]


myDeli2 : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionTaskDelegate>
 @property  NSError *errorResult
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[myDeli2 init]
  -[myDeli2 dealloc]
  -[myDeli2 URLSession:task:didCompleteWithError:]
  -[myDeli2 URLSession:downloadTask:didFinishDownloadingToURL:]
  -[myDeli2 URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[myDeli2 URLSession:dataTask:didBecomeDownloadTask:]
  -[myDeli2 errorResult]
  -[myDeli2 setErrorResult:]


ProxyAuthenticationURLDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionTaskDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ProxyAuthenticationURLDelegate URLSession:task:didReceiveChallenge:completionHandler:]


BadPasswordProxyAuthenticationURLDelegate : ProxyAuthenticationURLDelegate
 @property  long long failureCount

  // instance methods
  -[BadPasswordProxyAuthenticationURLDelegate URLSession:task:didReceiveChallenge:completionHandler:]
  -[BadPasswordProxyAuthenticationURLDelegate failureCount]
  -[BadPasswordProxyAuthenticationURLDelegate setFailureCount:]


taskDelegates : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionTaskDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[taskDelegates URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[taskDelegates didRedirect]


AuthChallengeDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionTaskDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AuthChallengeDelegate URLSession:task:didReceiveChallenge:completionHandler:]
  -[AuthChallengeDelegate didReceiveChallenge]


NSURLConnection : NSObject /usr/lib/libxml2.2.dylib <NSURLAuthenticationChallengeSender>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURLRequest *originalRequest
 @property  NSURLRequest *currentRequest

  // class methods
  +[NSURLConnection sendSynchronousRequest:returningResponse:error:]
  +[NSURLConnection connectionWithRequest:delegate:]
  +[NSURLConnection sendAsynchronousRequest:queue:completionHandler:]
  +[NSURLConnection canHandleRequest:]
  +[NSURLConnection _sweeperInterval]
  +[NSURLConnection _setSweeperInterval:]
  +[NSURLConnection _setMIMETypesWithNoSizeLimit:]
  +[NSURLConnection _setCollectsTimingData:]
  +[NSURLConnection _collectsTimingData]
  +[NSURLConnection _collectTimingDataWithOptions:]
  +[NSURLConnection _timingDataOptions]
  +[NSURLConnection resourceLoaderRunLoop]
  +[NSURLConnection withResourceLoaderRunLoopAsync:]
  +[NSURLConnection _setLoaderThreadPriority:]

  // instance methods
  -[NSURLConnection dealloc]
  -[NSURLConnection scheduleInRunLoop:forMode:]
  -[NSURLConnection cancel]
  -[NSURLConnection start]
  -[NSURLConnection originalRequest]
  -[NSURLConnection _initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:]
  -[NSURLConnection setDelegateQueue:]
  -[NSURLConnection currentRequest]
  -[NSURLConnection performDefaultHandlingForAuthenticationChallenge:]
  -[NSURLConnection useCredential:forAuthenticationChallenge:]
  -[NSURLConnection rejectProtectionSpaceAndContinueWithChallenge:]
  -[NSURLConnection continueWithoutCredentialForAuthenticationChallenge:]
  -[NSURLConnection cancelAuthenticationChallenge:]
  -[NSURLConnection initWithRequest:delegate:startImmediately:]
  -[NSURLConnection initWithRequest:delegate:]
  -[NSURLConnection unscheduleFromRunLoop:forMode:]
  -[NSURLConnection download]
  -[NSURLConnection connectionProperties]
  -[NSURLConnection setDefersCallbacks:]
  -[NSURLConnection defersCallbacks]
  -[NSURLConnection _dlInternal]
  -[NSURLConnection _cfInternal]
  -[NSURLConnection _suspendLoading]
  -[NSURLConnection _resumeLoading]
  -[NSURLConnection _timingData]


__NSURLBackgroundSession : __NSCFURLSession <NDBackgroundSessionClient, NSURLSessionSubclass>
 @property  NSString *appWakeUUID
 @property  BOOL companionAvailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSURLBackgroundSession dealloc]
  -[__NSURLBackgroundSession .cxx_destruct]
  -[__NSURLBackgroundSession .cxx_construct]
  -[__NSURLBackgroundSession _dataTaskWithTaskForClass:]
  -[__NSURLBackgroundSession _uploadTaskWithTaskForClass:]
  -[__NSURLBackgroundSession _downloadTaskWithTaskForClass:]
  -[__NSURLBackgroundSession _AVAssetDownloadTaskForURL:destinationURL:options:]
  -[__NSURLBackgroundSession AVAssetDownloadTaskForURLAsset:destinationURL:options:]
  -[__NSURLBackgroundSession AVAssetDownloadTaskForURLAsset:assetTitle:assetArtworkData:options:]
  -[__NSURLBackgroundSession AVAggregateAssetDownloadTaskForURLAsset:mediaSelections:assetTitle:assetArtworkData:options:]
  -[__NSURLBackgroundSession webSocketTaskForRequest:]
  -[__NSURLBackgroundSession webSocketTaskForURL:protocols:]
  -[__NSURLBackgroundSession _onqueue_flushWithCompletionHandler:]
  -[__NSURLBackgroundSession _onqueue_completeInvalidation:]
  -[__NSURLBackgroundSession _onqueue_resetStorageWithCompletionHandler:]
  -[__NSURLBackgroundSession _onqueue_getTasksWithCompletionHandler:]
  -[__NSURLBackgroundSession copyTasks]
  -[__NSURLBackgroundSession _onqueue_invokeInvalidateCallback]
  -[__NSURLBackgroundSession _onqueue_invalidateSession:withQueue:completion:]
  -[__NSURLBackgroundSession _useTLSSessionCacheFromSession:]
  -[__NSURLBackgroundSession initWithConfiguration:delegate:delegateQueue:]
  -[__NSURLBackgroundSession backgroundTaskDidResume:]
  -[__NSURLBackgroundSession backgroundTaskDidSuspend:]
  -[__NSURLBackgroundSession backgroundTask:didReceiveChallenge:reply:]
  -[__NSURLBackgroundSession backgroundTask:willBeginDelayedRequest:reply:]
  -[__NSURLBackgroundSession backgroundTask:willPerformHTTPRedirection:withNewRequest:reply:]
  -[__NSURLBackgroundSession backgroundTask:_willSendRequestForEstablishedConnection:reply:]
  -[__NSURLBackgroundSession backgroundTaskHasConnectionWaiting:]
  -[__NSURLBackgroundSession backgroundTask:hasConnectionWaitingWithReason:]
  -[__NSURLBackgroundSession backgroundTask:hasConnectionWaitingWithError:]
  -[__NSURLBackgroundSession backgroundTask:didReceiveResponse:transactionMetrics:]
  -[__NSURLBackgroundSession backgroundTask:didReceiveResponse:transactionMetrics:reply:]
  -[__NSURLBackgroundSession backgroundTask:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:]
  -[__NSURLBackgroundSession backgroundTask:needNewBodyStream:withReply:]
  -[__NSURLBackgroundSession backgroundTask:didCompleteWithError:taskMetrics:info:reply:]
  -[__NSURLBackgroundSession backgroundDataTask:didReceiveData:withReply:]
  -[__NSURLBackgroundSession backgroundTask:getAuthHeadersForResponse:reply:]
  -[__NSURLBackgroundSession backgroundDataTaskDidBecomeDownloadTask:]
  -[__NSURLBackgroundSession willRetryBackgroundDataTask:withError:transactionMetrics:]
  -[__NSURLBackgroundSession backgroundDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]
  -[__NSURLBackgroundSession backgroundDownloadTask:didResumeAtOffset:expectedTotalBytes:]
  -[__NSURLBackgroundSession backgroundDownloadTask:didFinishDownloadingToURL:reply:]
  -[__NSURLBackgroundSession openFileAtPath:mode:withReply:]
  -[__NSURLBackgroundSession backgroundAVAssetDownloadTaskDidUpdateProgress:totalBytesWritten:totalBytesExpectedToWrite:]
  -[__NSURLBackgroundSession backgroundAVAssetDownloadTask:didReceiveDownloadToken:]
  -[__NSURLBackgroundSession backgroundAVAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:]
  -[__NSURLBackgroundSession backgroundAVAssetDownloadTask:didResolveMediaSelectionProperyList:reply:]
  -[__NSURLBackgroundSession backgroundAVAssetDownloadTask:willDownloadToURL:]
  -[__NSURLBackgroundSession backgroundSessionDidStartAppWake:reply:]
  -[__NSURLBackgroundSession backgroundSessionDidFinishAppWake:reply:]
  -[__NSURLBackgroundSession credStorage_getInitialCredentialDictionariesWithReply:]
  -[__NSURLBackgroundSession credStorage_credentialsForProtectionSpace:reply:]
  -[__NSURLBackgroundSession credStorage_allCredentialsWithReply:]
  -[__NSURLBackgroundSession credStorage_setCredential:forProtectionSpace:]
  -[__NSURLBackgroundSession credStorage_removeCredential:forProtectionSpace:]
  -[__NSURLBackgroundSession credStorage_defaultCredentialForProtectionSpace:reply:]
  -[__NSURLBackgroundSession credStorage_setDefaultCredential:forProtectionSpace:]
  -[__NSURLBackgroundSession moveFileForResumeData:fromDirectory:toDirectory:]
  -[__NSURLBackgroundSession moveFileToTempForBackgroundResumeData:]
  -[__NSURLBackgroundSession moveFileToBackgroundDownloadsDirectoryForLocalResumeData:]
  -[__NSURLBackgroundSession backgroundResumeDataFromLegacyClientResumeData:]
  -[__NSURLBackgroundSession backgroundResumeDataFromClientResumeData:]
  -[__NSURLBackgroundSession backgroundDownloadsDirectory]
  -[__NSURLBackgroundSession setupXPCConnection]
  -[__NSURLBackgroundSession cleanupConfig]
  -[__NSURLBackgroundSession sendInvalidationRequest]
  -[__NSURLBackgroundSession cachesDirectory]
  -[__NSURLBackgroundSession ensureRemoteSession]
  -[__NSURLBackgroundSession setupBackgroundSession]
  -[__NSURLBackgroundSession recreateExistingTasks:]
  -[__NSURLBackgroundSession failDisconnectedTasks]
  -[__NSURLBackgroundSession wentToBackground:]
  -[__NSURLBackgroundSession cameIntoForeground:]
  -[__NSURLBackgroundSession appWasLaunchedForBackgroundSession:]
  -[__NSURLBackgroundSession taskForIdentifier:]
  -[__NSURLBackgroundSession _onqueue_disavowTask:]
  -[__NSURLBackgroundSession setCookiesFromResponse:forOriginalRequest:partitionIdentifier:]
  -[__NSURLBackgroundSession requestWithCookiesApplied:]
  -[__NSURLBackgroundSession _onqueue_dummyTaskForClass:withRequest:error:]
  -[__NSURLBackgroundSession validateSerializabilityForRequest:completion:]
  -[__NSURLBackgroundSession validateUploadFile:]
  -[__NSURLBackgroundSession placeholderErrorWithURL:]
  -[__NSURLBackgroundSession disconnectedErrorWithURL:]
  -[__NSURLBackgroundSession connectionLostErrorWithURL:]
  -[__NSURLBackgroundSession performBlockOnQueueAndRethrowExceptions:]
  -[__NSURLBackgroundSession _onqueue_dataTaskWithTaskForClass:]
  -[__NSURLBackgroundSession _onqueue_uploadTaskForClass:]
  -[__NSURLBackgroundSession _onqueue_downloadTaskForResumeData:]
  -[__NSURLBackgroundSession _onqueue_downloadTaskForRequest:]
  -[__NSURLBackgroundSession _onqueue_downloadTaskWithTaskForClass:]
  -[__NSURLBackgroundSession serializableAVAssetDownloadTaskOptionsFromOptions:]
  -[__NSURLBackgroundSession _onqueue_AVAssetDownloadTaskForURLAsset:URL:destinationURL:assetTitle:assetArtworkData:options:]
  -[__NSURLBackgroundSession _onqueue_AVAggregateAssetDownloadTaskForURLAsset:mediaSelections:assetTitle:assetArtworkData:options:]
  -[__NSURLBackgroundSession _onqueue_retryDataTaskWithIdentifier:]
  -[__NSURLBackgroundSession setPropertyOnStreamWithIdentifier:propDict:propKey:]
  -[__NSURLBackgroundSession isCompanionAvailable]
  -[__NSURLBackgroundSession setCompanionAvailable:]
  -[__NSURLBackgroundSession appWakeUUID]
  -[__NSURLBackgroundSession setAppWakeUUID:]


__NSURLAVBackgroundSession : __NSURLBackgroundSession
  // instance methods
  -[__NSURLAVBackgroundSession isKindOfClass:]


NSURLStorage_CacheClient : NSObject /usr/lib/libxml2.2.dylib <NSURLStorageCacheClient>
 @property  BOOL networkStorageConnectionInterrupted

  // instance methods
  -[NSURLStorage_CacheClient dealloc]
  -[NSURLStorage_CacheClient .cxx_destruct]
  -[NSURLStorage_CacheClient .cxx_construct]
  -[NSURLStorage_CacheClient _invalidateNSXPCConnection]
  -[NSURLStorage_CacheClient deleteResponseForRequestWithKey:withCompletionHandler:]
  -[NSURLStorage_CacheClient copyAllPartitionNamesWithCompletionHandler:]
  -[NSURLStorage_CacheClient copyHostNamesForOptionalPartition:handler:]
  -[NSURLStorage_CacheClient deleteAllHostNames:forOptionalPartition:]
  -[NSURLStorage_CacheClient performSchemaCheckAndUpdate]
  -[NSURLStorage_CacheClient setMaxSize:]
  -[NSURLStorage_CacheClient currentDiskUsage]
  -[NSURLStorage_CacheClient deleteAllResponses]
  -[NSURLStorage_CacheClient addCachedResponseWithDictionary:key:]
  -[NSURLStorage_CacheClient getPath]
  -[NSURLStorage_CacheClient flushWithCompletionHandler:]
  -[NSURLStorage_CacheClient deleteResponsesSinceDate:]
  -[NSURLStorage_CacheClient setMinSizeForVMCachedResource:]
  -[NSURLStorage_CacheClient initWithCache:]
  -[NSURLStorage_CacheClient createStorageTaskManagerForPath:maxSize:extension:]
  -[NSURLStorage_CacheClient notifyCachedURLResponseBecameFileBacked:filePath:forUUID:]
  -[NSURLStorage_CacheClient notifyCacheClientOfTimeRelativeResponses:]
  -[NSURLStorage_CacheClient _reconnectWithStorageServer]
  -[NSURLStorage_CacheClient ensureNetworkStorageDaemonConnection]
  -[NSURLStorage_CacheClient networkStorageConnectionInterrupted]
  -[NSURLStorage_CacheClient setNetworkStorageConnectionInterrupted:]


__NSCFTCPIO_BlockCallbacks_Referent : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[__NSCFTCPIO_BlockCallbacks_Referent init]
  -[__NSCFTCPIO_BlockCallbacks_Referent dealloc]
  -[__NSCFTCPIO_BlockCallbacks_Referent setReadListener:]
  -[__NSCFTCPIO_BlockCallbacks_Referent setWriteListener:]
  -[__NSCFTCPIO_BlockCallbacks_Referent withListeners:]


__NSCFTCPIOStreamTask : __NSCFURLSessionTask
 @property  NSData *_initialDataPayload
 @property  __NSCFURLLocalStreamTaskWorkWrite *currentWriteTask
 @property  __NSCFURLLocalStreamTaskWorkRead *currentReadTask

  // instance methods
  -[__NSCFTCPIOStreamTask dealloc]
  -[__NSCFTCPIOStreamTask isKindOfClass:]
  -[__NSCFTCPIOStreamTask copyWithZone:]
  -[__NSCFTCPIOStreamTask .cxx_destruct]
  -[__NSCFTCPIOStreamTask cancel]
  -[__NSCFTCPIOStreamTask .cxx_construct]
  -[__NSCFTCPIOStreamTask workQueue]
  -[__NSCFTCPIOStreamTask _onqueue_checkForCompletion]
  -[__NSCFTCPIOStreamTask _onSessionQueue_disavow]
  -[__NSCFTCPIOStreamTask _onqueue_cancel]
  -[__NSCFTCPIOStreamTask _onqueue_suspend]
  -[__NSCFTCPIOStreamTask _onqueue_resume]
  -[__NSCFTCPIOStreamTask _onqueue_adjustPoolPriority]
  -[__NSCFTCPIOStreamTask _onqueue_adjustLoadingPoolPriority]
  -[__NSCFTCPIOStreamTask _onSessionQueue_cleanupAndBreakCycles]
  -[__NSCFTCPIOStreamTask _task_onqueue_didFinish]
  -[__NSCFTCPIOStreamTask initWithTask:connection:extraBytes:disavow:]
  -[__NSCFTCPIOStreamTask initWithHost:port:taskGroup:disavow:]
  -[__NSCFTCPIOStreamTask ios]
  -[__NSCFTCPIOStreamTask readDataOfMinLength:maxLength:timeout:completionHandler:]
  -[__NSCFTCPIOStreamTask writeData:timeout:completionHandler:]
  -[__NSCFTCPIOStreamTask captureStreams]
  -[__NSCFTCPIOStreamTask closeWrite]
  -[__NSCFTCPIOStreamTask closeRead]
  -[__NSCFTCPIOStreamTask copyStreamProperty:completionHandler:]
  -[__NSCFTCPIOStreamTask startSecureConnection]
  -[__NSCFTCPIOStreamTask stopSecureConnection]
  -[__NSCFTCPIOStreamTask _onqueue_stopSecureConnection]
  -[__NSCFTCPIOStreamTask _onqueue_startSecureConnection]
  -[__NSCFTCPIOStreamTask _onqueue_closeRead]
  -[__NSCFTCPIOStreamTask _onqueue_closeWrite]
  -[__NSCFTCPIOStreamTask _onqueue_captureStreams]
  -[__NSCFTCPIOStreamTask _onqueue_addBlockOp:description:]
  -[__NSCFTCPIOStreamTask _onqueue_addBlockOp:description:shouldWaitForTls:]
  -[__NSCFTCPIOStreamTask shouldDoWorkConsideringTlsState]
  -[__NSCFTCPIOStreamTask _onqueue_ioTick]
  -[__NSCFTCPIOStreamTask _onqueue_timeoutOccured]
  -[__NSCFTCPIOStreamTask _onqueue_callbackCompletedWork]
  -[__NSCFTCPIOStreamTask _onqueue_processWriteWork:]
  -[__NSCFTCPIOStreamTask _onqueue_processReadWork:]
  -[__NSCFTCPIOStreamTask _onqueue_errorOrCancelError]
  -[__NSCFTCPIOStreamTask _onqueue_usingProxy]
  -[__NSCFTCPIOStreamTask _onqueue_preConnectionConfiguration:parameters:completionHandler:]
  -[__NSCFTCPIOStreamTask _onqueue_dealWithSessionTrustAuth:credential:completionHandler:]
  -[__NSCFTCPIOStreamTask _onqueue_sendSessionChallenge:completionHandler:]
  -[__NSCFTCPIOStreamTask _onqueue_needServerTrust:completionHandler:]
  -[__NSCFTCPIOStreamTask _onqueue_needClientCert:completionHandler:]
  -[__NSCFTCPIOStreamTask _onqueue_dealWithSessionClientCertAuth:credential:completionHandler:]
  -[__NSCFTCPIOStreamTask _onqueue_postConnectConfiguration:parameters:completionHandler:]
  -[__NSCFTCPIOStreamTask _onqueue_setTransportConnection:]
  -[__NSCFTCPIOStreamTask _onqueue_tlsCompletion]
  -[__NSCFTCPIOStreamTask _onqueue_tlsDisabled]
  -[__NSCFTCPIOStreamTask _onqueue_cleanUpConnectionEstablishmentState]
  -[__NSCFTCPIOStreamTask _onqueue_connectionEstablishedWithError:callbackReferent:]
  -[__NSCFTCPIOStreamTask _initialDataPayload]
  -[__NSCFTCPIOStreamTask set_initialDataPayload:]
  -[__NSCFTCPIOStreamTask currentWriteTask]
  -[__NSCFTCPIOStreamTask setCurrentWriteTask:]
  -[__NSCFTCPIOStreamTask currentReadTask]
  -[__NSCFTCPIOStreamTask setCurrentReadTask:]


__NSCFSS : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[__NSCFSS dealloc]
  -[__NSCFSS copyWithZone:]
  -[__NSCFSS completeWithError:]
  -[__NSCFSS initWithTrustChallenge:capture:]
  -[__NSCFSS shouldTrust:]
  -[__NSCFSS connectionEstablished:outputStream:]


__NSTCPIOCONNECTION__ : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[__NSTCPIOCONNECTION__ __make_private_streamsForHost:port:secure:trustChallenge:inputStream:outputStream:tcpio:]

  // instance methods
  -[__NSTCPIOCONNECTION__ init]
  -[__NSTCPIOCONNECTION__ URLSession:didBecomeInvalidWithError:]
  -[__NSTCPIOCONNECTION__ URLSession:task:didReceiveChallenge:completionHandler:]
  -[__NSTCPIOCONNECTION__ URLSession:task:didCompleteWithError:]
  -[__NSTCPIOCONNECTION__ URLSession:streamTask:didBecomeInputStream:outputStream:]


NSURLSessionStreamTaskTester : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionStreamDelegate, NSStreamDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NSURLSessionStreamTaskTester dealloc]
  -[NSURLSessionStreamTaskTester stream:handleEvent:]
  -[NSURLSessionStreamTaskTester .cxx_construct]
  -[NSURLSessionStreamTaskTester URLSession:didReceiveChallenge:completionHandler:]
  -[NSURLSessionStreamTaskTester URLSession:task:didCompleteWithError:]
  -[NSURLSessionStreamTaskTester URLSession:streamTask:didBecomeInputStream:outputStream:]
  -[NSURLSessionStreamTaskTester initWithTestConfig:]
  -[NSURLSessionStreamTaskTester resumeWithTestBlock:]
  -[NSURLSessionStreamTaskTester cleanupInputStream]
  -[NSURLSessionStreamTaskTester cleanupOutputStream]


__NSCFURLLocalTCPIOStreamTaskFromDataTask : __NSCFTCPIOStreamTask <SessionConnectionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask copyWithZone:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:wasRedirected:newRequest:responseCallback:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:request:needsNewBodyStreamCallback:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:didReceiveResponse:completion:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:willCacheResponse:responseCallback:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:didFinishCollectingMetrics:completion:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connectionWillFinishLoading:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:didFinishLoadingWithError:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:didReceiveConnectionCacheKey:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:challenged:authCallback:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:didReceiveData:completion:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:sentBodyBytes:totalBytes:expectedBytes:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:_willSendRequestForEstablishedConnection:completion:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:waitingWithReason:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:_conditionalRequirementsChanged:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:didReceiveSocketInputStream:outputStream:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:needConnectedSocketToHost:port:completion:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask connection:didReceiveTCPConnection:extraBytes:]
  -[__NSCFURLLocalTCPIOStreamTaskFromDataTask initWithTask:connection:extraBytes:disavow:]


myDelegatesForEventTest : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionTaskDelegate, NSStreamDelegate>
 @property  NSError *outputStreamError
 @property  NSError *inputStreamError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[myDelegatesForEventTest dealloc]
  -[myDelegatesForEventTest stream:handleEvent:]
  -[myDelegatesForEventTest URLSession:task:didCompleteWithError:]
  -[myDelegatesForEventTest URLSession:streamTask:didBecomeInputStream:outputStream:]
  -[myDelegatesForEventTest closeStreams]
  -[myDelegatesForEventTest outputStreamError]
  -[myDelegatesForEventTest setOutputStreamError:]
  -[myDelegatesForEventTest inputStreamError]
  -[myDelegatesForEventTest setInputStreamError:]


PathHolder : NSObject /usr/lib/libxml2.2.dylib <NSCopying>
  // instance methods
  -[PathHolder dealloc]
  -[PathHolder isEqual:]
  -[PathHolder copyWithZone:]
  -[PathHolder initWithPath:]


PathPolicyManager : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[PathPolicyManager init]
  -[PathPolicyManager dealloc]
  -[PathPolicyManager pathIDForPath:lookup:]
  -[PathPolicyManager removeAllEntries]


CoalescingDomainHolder : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[CoalescingDomainHolder init]
  -[CoalescingDomainHolder dealloc]
  -[CoalescingDomainHolder .cxx_destruct]
  -[CoalescingDomainHolder .cxx_construct]
  -[CoalescingDomainHolder pathIDForPath:lookup:]
  -[CoalescingDomainHolder coalescingConnectionHostForRequestHost:]
  -[CoalescingDomainHolder addCoalescingConnectionHost:withDNSRecord:peerCerts:trustData:description:]
  -[CoalescingDomainHolder coalescingCoalescingConnectionHost:ipAddrs:]
  -[CoalescingDomainHolder updateCoalescingConnectionWithHost:ipAddrs:]
  -[CoalescingDomainHolder removeCCEntryForHost:]


_NSCFSocksProxy : NSObject /usr/lib/libxml2.2.dylib <NSProxyConnectionDelegate>
 @property  NSProxyConnection *inbound
 @property  NSProxyConnection *outbound
 @property  NSDictionary *configuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_NSCFSocksProxy handleIncomingConnection:queue:configuration:]
  +[_NSCFSocksProxy proxyServers]

  // instance methods
  -[_NSCFSocksProxy dealloc]
  -[_NSCFSocksProxy .cxx_destruct]
  -[_NSCFSocksProxy cleanup]
  -[_NSCFSocksProxy setConfiguration:]
  -[_NSCFSocksProxy configuration]
  -[_NSCFSocksProxy connected:]
  -[_NSCFSocksProxy outboundConnectionReceivedData:handler:]
  -[_NSCFSocksProxy outboundConnectionCompleteWithError:]
  -[_NSCFSocksProxy initWithConnection:queue:]
  -[_NSCFSocksProxy handshakeRead]
  -[_NSCFSocksProxy readInbound]
  -[_NSCFSocksProxy readOutbound]
  -[_NSCFSocksProxy inbound]
  -[_NSCFSocksProxy setInbound:]
  -[_NSCFSocksProxy outbound]
  -[_NSCFSocksProxy setOutbound:]


__NSCFBackgroundDataTask : __NSCFBackgroundSessionTask <NSStreamDelegate>
 @property  BOOL streamBased
 @property  @? streamWriteCompletion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFBackgroundDataTask dealloc]
  -[__NSCFBackgroundDataTask isKindOfClass:]
  -[__NSCFBackgroundDataTask stream:handleEvent:]
  -[__NSCFBackgroundDataTask initWithOriginalRequest:ident:taskGroup:]
  -[__NSCFBackgroundDataTask _onqueue_didReceiveResponse:redirectRequest:withCompletion:]
  -[__NSCFBackgroundDataTask _onqueue_didFinishWithError:]
  -[__NSCFBackgroundDataTask _onqueue_needNewBodyStream:withCompletion:]
  -[__NSCFBackgroundDataTask _onqueue_willSendRequestForEstablishedConnection:withCompletion:]
  -[__NSCFBackgroundDataTask _onqueue_didReceiveData:withCompletion:]
  -[__NSCFBackgroundDataTask _onqueue_willBeRetried]
  -[__NSCFBackgroundDataTask _onqueue_didReceiveResponse:withCompletion:]
  -[__NSCFBackgroundDataTask _onqueue_openStream]
  -[__NSCFBackgroundDataTask _onqueue_captureStream:]
  -[__NSCFBackgroundDataTask _onqueue_invokeStreamWriteCompletion]
  -[__NSCFBackgroundDataTask readFromStream]
  -[__NSCFBackgroundDataTask _onqueue_finishStream:]
  -[__NSCFBackgroundDataTask isStreamBased]
  -[__NSCFBackgroundDataTask streamWriteCompletion]
  -[__NSCFBackgroundDataTask setStreamWriteCompletion:]


__NSCFBackgroundUploadTask : __NSCFBackgroundDataTask
  // instance methods
  -[__NSCFBackgroundUploadTask isKindOfClass:]


__NSCFBackgroundDownloadTask : __NSCFBackgroundSessionTask
 @property  BOOL finished

  // instance methods
  -[__NSCFBackgroundDownloadTask isKindOfClass:]
  -[__NSCFBackgroundDownloadTask setFinished:]
  -[__NSCFBackgroundDownloadTask finished]
  -[__NSCFBackgroundDownloadTask _onqueue_didFinishWithError:]
  -[__NSCFBackgroundDownloadTask _onqueue_cancelByProducingResumeData:]
  -[__NSCFBackgroundDownloadTask cancelByProducingResumeData:]
  -[__NSCFBackgroundDownloadTask _onqueue_didResumeAtOffset:expectedTotalBytes:]
  -[__NSCFBackgroundDownloadTask _onqueue_didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]
  -[__NSCFBackgroundDownloadTask _onqueue_didFinishDownloadingToURL:]
  -[__NSCFBackgroundDownloadTask _onqueue_didReceiveResponse:]


__NSCFBackgroundSessionTask : __NSCFURLSessionTask <NSURLSessionTaskSubclass>
 @property  NSError *immediateError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFBackgroundSessionTask dealloc]
  -[__NSCFBackgroundSessionTask _onSessionQueue_disavow]
  -[__NSCFBackgroundSessionTask initWithOriginalRequest:ident:taskGroup:]
  -[__NSCFBackgroundSessionTask _onqueue_cancel]
  -[__NSCFBackgroundSessionTask _onqueue_suspend]
  -[__NSCFBackgroundSessionTask _onqueue_resume]
  -[__NSCFBackgroundSessionTask _onqueue_adjustPoolPriority]
  -[__NSCFBackgroundSessionTask _onqueue_adjustLoadingPoolPriority]
  -[__NSCFBackgroundSessionTask _onqueue_didReceiveChallenge:request:withCompletion:]
  -[__NSCFBackgroundSessionTask _onqueue_didFinishCollectingMetrics:completion:]
  -[__NSCFBackgroundSessionTask _onqueue_didFinishWithError:]
  -[__NSCFBackgroundSessionTask _onqueue_willSendRequestForEstablishedConnection:withCompletion:]
  -[__NSCFBackgroundSessionTask _onqueue_connectionWaitingWithReason:]
  -[__NSCFBackgroundSessionTask _onqueue_didSendBodyBytes:totalBytesSent:totalBytesExpectedToSend:]
  -[__NSCFBackgroundSessionTask _onqueue_adjustPriorityHint:]
  -[__NSCFBackgroundSessionTask _onqueue_adjustBytesPerSecondLimit:]
  -[__NSCFBackgroundSessionTask setTaskDescription:]
  -[__NSCFBackgroundSessionTask _timingData]
  -[__NSCFBackgroundSessionTask initWithBackgroundTask:]
  -[__NSCFBackgroundSessionTask _onqueue_didReceiveResponse:]
  -[__NSCFBackgroundSessionTask _onqueue_connectionWaitingWithError:]
  -[__NSCFBackgroundSessionTask _onqueue_didResume]
  -[__NSCFBackgroundSessionTask setImmediateError:]
  -[__NSCFBackgroundSessionTask initWithTaskInfo:taskGroup:ident:]
  -[__NSCFBackgroundSessionTask _onqueue_additionalBackgroundProperties]
  -[__NSCFBackgroundSessionTask _onqueue_adjustExpectedProgressTarget:]
  -[__NSCFBackgroundSessionTask set_discretionaryOverride:]
  -[__NSCFBackgroundSessionTask immediateError]


__NSCFBackgroundAVAssetDownloadTask : __NSCFBackgroundSessionTask
 @property  unsigned long AVAssetDownloadToken
 @property  NSURL *URL
 @property  NSURL *destinationURL
 @property  NSURL *temporaryDestinationURL
 @property  NSString *assetTitle
 @property  NSData *assetArtworkData
 @property  AVURLAsset *URLAsset
 @property  NSDictionary *options
 @property  NSArray *loadedTimeRanges
 @property  AVMediaSelection *resolvedMediaSelection

  // instance methods
  -[__NSCFBackgroundAVAssetDownloadTask dealloc]
  -[__NSCFBackgroundAVAssetDownloadTask isKindOfClass:]
  -[__NSCFBackgroundAVAssetDownloadTask options]
  -[__NSCFBackgroundAVAssetDownloadTask setURL:]
  -[__NSCFBackgroundAVAssetDownloadTask URL]
  -[__NSCFBackgroundAVAssetDownloadTask setOptions:]
  -[__NSCFBackgroundAVAssetDownloadTask response]
  -[__NSCFBackgroundAVAssetDownloadTask originalRequest]
  -[__NSCFBackgroundAVAssetDownloadTask currentRequest]
  -[__NSCFBackgroundAVAssetDownloadTask _onqueue_didFinishWithError:]
  -[__NSCFBackgroundAVAssetDownloadTask setDestinationURL:]
  -[__NSCFBackgroundAVAssetDownloadTask destinationURL]
  -[__NSCFBackgroundAVAssetDownloadTask AVAssetDownloadToken]
  -[__NSCFBackgroundAVAssetDownloadTask _onqueue_willDownloadToURL:]
  -[__NSCFBackgroundAVAssetDownloadTask _onqueue_didResolveMediaSelectionPropertyList:]
  -[__NSCFBackgroundAVAssetDownloadTask _onqueue_didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:]
  -[__NSCFBackgroundAVAssetDownloadTask setAVAssetDownloadToken:]
  -[__NSCFBackgroundAVAssetDownloadTask _onqueue_didReceiveProgressUpdateWithTotalBytesWritten:totalBytesExpectedToWrite:]
  -[__NSCFBackgroundAVAssetDownloadTask _onqueue_didFinishDownloadingToURL:]
  -[__NSCFBackgroundAVAssetDownloadTask initWithTaskGroup:URLAsset:URL:destinationURL:temporaryDestinationURL:assetTitle:assetArtworkData:ident:]
  -[__NSCFBackgroundAVAssetDownloadTask _isAVAssetTask]
  -[__NSCFBackgroundAVAssetDownloadTask initWithTaskInfo:taskGroup:ident:]
  -[__NSCFBackgroundAVAssetDownloadTask temporaryDestinationURL]
  -[__NSCFBackgroundAVAssetDownloadTask setTemporaryDestinationURL:]
  -[__NSCFBackgroundAVAssetDownloadTask assetTitle]
  -[__NSCFBackgroundAVAssetDownloadTask setAssetTitle:]
  -[__NSCFBackgroundAVAssetDownloadTask assetArtworkData]
  -[__NSCFBackgroundAVAssetDownloadTask setAssetArtworkData:]
  -[__NSCFBackgroundAVAssetDownloadTask URLAsset]
  -[__NSCFBackgroundAVAssetDownloadTask setURLAsset:]
  -[__NSCFBackgroundAVAssetDownloadTask loadedTimeRanges]
  -[__NSCFBackgroundAVAssetDownloadTask setLoadedTimeRanges:]
  -[__NSCFBackgroundAVAssetDownloadTask resolvedMediaSelection]
  -[__NSCFBackgroundAVAssetDownloadTask setResolvedMediaSelection:]


__NSCFBackgroundAVAggregateAssetDownloadTask : __NSCFBackgroundSessionTask <AVAssetDownloadDelegate>
 @property  unsigned long AVAssetDownloadToken
 @property  AVURLAsset *URLAsset
 @property  NSArray *mediaSelections
 @property  NSString *assetTitle
 @property  NSData *assetArtworkData
 @property  NSDictionary *options
 @property  NSString *childAssetDownloadTasksSessionIdentifier
 @property  NSURLSession *childAssetDownloadSession
 @property  NSArray *childAssetDownloadTasks
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[__NSCFBackgroundAVAggregateAssetDownloadTask childSessionConfigurationWithClientConfiguration:identifier:]

  // instance methods
  -[__NSCFBackgroundAVAggregateAssetDownloadTask dealloc]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask isKindOfClass:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask options]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask setOptions:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask response]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask originalRequest]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask URLSession:task:willBeginDelayedRequest:completionHandler:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask URLSession:task:didCompleteWithError:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask currentRequest]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask _onqueue_cancel]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask _onqueue_suspend]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask _onqueue_resume]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask AVAssetDownloadToken]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask setAVAssetDownloadToken:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask childAssetDownloadTasksSessionIdentifier]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask initWithTaskGroup:URLAsset:mediaSelections:assetTitle:assetArtworkData:options:ident:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask _isAVAssetTask]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask initWithTaskInfo:taskGroup:ident:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask assetTitle]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask setAssetTitle:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask assetArtworkData]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask setAssetArtworkData:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask URLAsset]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask setURLAsset:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask URLSession:assetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask _onqueue_childTask:didCompleteWithError:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask _onqueue_childTask:willBeginDelayedRequest:completionHandler:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask _onqueue_childTask:willDownloadToURL:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask _onqueue_childTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask URLSession:assetDownloadTask:willDownloadToURL:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask mediaSelections]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask setMediaSelections:]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask childAssetDownloadSession]
  -[__NSCFBackgroundAVAggregateAssetDownloadTask childAssetDownloadTasks]


_NSHTTPConnectionInfo : NSObject /usr/lib/libxml2.2.dylib
 @property  NSOperationQueue *_delegateQueue
 @property  BOOL isValid

  // instance methods
  -[_NSHTTPConnectionInfo isValid]
  -[_NSHTTPConnectionInfo .cxx_destruct]
  -[_NSHTTPConnectionInfo _delegateQueue]
  -[_NSHTTPConnectionInfo invalidateUnderlyingConnection]
  -[_NSHTTPConnectionInfo initWithHTTPConnectionInfo:queue:]
  -[_NSHTTPConnectionInfo sendPingWithReceiveHandler:]
  -[_NSHTTPConnectionInfo set_delegateQueue:]


__NSHostExtraIvars : NSObject /usr/lib/libxml2.2.dylib
 @property  NSString *thingToResolve
 @property  int resolveType
 @property  NSObject<OS_dispatch_queue> *resolveQueue
 @property  NSObject<OS_dispatch_queue> *cacheAccessQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  BOOL startedResolving

  // instance methods
  -[__NSHostExtraIvars init]
  -[__NSHostExtraIvars dealloc]
  -[__NSHostExtraIvars callbackQueue]
  -[__NSHostExtraIvars cleanup]
  -[__NSHostExtraIvars thingToResolve]
  -[__NSHostExtraIvars resolveType]
  -[__NSHostExtraIvars resolveQueue]
  -[__NSHostExtraIvars cacheAccessQueue]
  -[__NSHostExtraIvars startedResolving]
  -[__NSHostExtraIvars setResolveType:]
  -[__NSHostExtraIvars setThingToResolve:]
  -[__NSHostExtraIvars setStartedResolving:]


NSHost : NSObject /usr/lib/libxml2.2.dylib
 @property  __NSHostExtraIvars *reserved
 @property  NSString *name
 @property  NSArray *names
 @property  NSString *address
 @property  NSArray *addresses
 @property  NSString *localizedName

  // class methods
  +[NSHost currentHost]
  +[NSHost hostWithName:]
  +[NSHost hostWithAddress:]
  +[NSHost isHostCacheEnabled]
  +[NSHost setHostCacheEnabled:]
  +[NSHost flushHostCache]

  // instance methods
  -[NSHost dealloc]
  -[NSHost name]
  -[NSHost reserved]
  -[NSHost localizedName]
  -[NSHost address]
  -[NSHost _thingToResolve]
  -[NSHost names]
  -[NSHost addresses]
  -[NSHost initToResolve:as:]
  -[NSHost resolve:]
  -[NSHost blockingResolveUntil:]
  -[NSHost __resolveWithFlags:resultArray:handler:]
  -[NSHost resolveCurrentHostWithHandler:]
  -[NSHost isEqualToHost:]
  -[NSHost setReserved:]


NSURLSessionDataTask : NSURLSessionTask
  // class methods
  +[NSURLSessionDataTask new]

  // instance methods
  -[NSURLSessionDataTask init]


NSURLSessionUploadTask : NSURLSessionDataTask
  // class methods
  +[NSURLSessionUploadTask new]

  // instance methods
  -[NSURLSessionUploadTask init]


NSHTTPCookieInternal_Data : NSHTTPCookieInternal
  // instance methods
  -[NSHTTPCookieInternal_Data init]
  -[NSHTTPCookieInternal_Data dealloc]
  -[NSHTTPCookieInternal_Data _inner]
  -[NSHTTPCookieInternal_Data _initWithProperties:fromString:]
  -[NSHTTPCookieInternal_Data _initWithCookie:partition:]
  -[NSHTTPCookieInternal_Data _initWithHeader:]


NSHTTPCookieInternal_Ref : NSHTTPCookieInternal
  // instance methods
  -[NSHTTPCookieInternal_Ref init]
  -[NSHTTPCookieInternal_Ref dealloc]
  -[NSHTTPCookieInternal_Ref _inner]
  -[NSHTTPCookieInternal_Ref _initWithReference:index:]


NSHTTPCookieInternal : NSObject /usr/lib/libxml2.2.dylib
 @property  ^{HTTPCookie=^^?} _inner

  // instance methods
  -[NSHTTPCookieInternal init]
  -[NSHTTPCookieInternal isEqual:]


NSHTTPCookie : NSObject /usr/lib/libxml2.2.dylib
 @property  ^{HTTPCookie=^^?} _inner
 @property  NSDictionary *properties
 @property  unsigned long version
 @property  NSString *name
 @property  NSString *value
 @property  NSDate *expiresDate
 @property  BOOL sessionOnly
 @property  NSString *domain
 @property  NSString *path
 @property  BOOL secure
 @property  BOOL HTTPOnly
 @property  NSString *comment
 @property  NSURL *commentURL
 @property  NSArray *portList
 @property  NSString *sameSitePolicy

  // class methods
  +[NSHTTPCookie cookieWithProperties:]
  +[NSHTTPCookie requestHeaderFieldsWithCookies:]
  +[NSHTTPCookie cookiesWithResponseHeaderFields:forURL:]
  +[NSHTTPCookie cookieWithCFHTTPCookie:]
  +[NSHTTPCookie _cf2nsCookies:]
  +[NSHTTPCookie _ns2cfCookies:]
  +[NSHTTPCookie _cookiesWithResponseHeaderFields:forURL:singleCookie:]
  +[NSHTTPCookie _parsedCookiesWithResponseHeaderFields:forURL:]
  +[NSHTTPCookie _cookieForSetCookieString:forURL:partition:]

  // instance methods
  -[NSHTTPCookie init]
  -[NSHTTPCookie dealloc]
  -[NSHTTPCookie isEqual:]
  -[NSHTTPCookie name]
  -[NSHTTPCookie domain]
  -[NSHTTPCookie _key]
  -[NSHTTPCookie encodeWithCoder:]
  -[NSHTTPCookie initWithCoder:]
  -[NSHTTPCookie value]
  -[NSHTTPCookie path]
  -[NSHTTPCookie version]
  -[NSHTTPCookie properties]
  -[NSHTTPCookie initWithProperties:]
  -[NSHTTPCookie _inner]
  -[NSHTTPCookie _initWithInternal:]
  -[NSHTTPCookie _initWithProperties:fromString:]
  -[NSHTTPCookie _initWithCookie:partition:]
  -[NSHTTPCookie _initWithHeader:]
  -[NSHTTPCookie _initWithReference:index:]
  -[NSHTTPCookie ensureCookieValid]
  -[NSHTTPCookie initWithCFHTTPCookie:]
  -[NSHTTPCookie _GetInternalCFHTTPCookie]
  -[NSHTTPCookie _CFHTTPCookie]
  -[NSHTTPCookie isSessionOnly]
  -[NSHTTPCookie isSecure]
  -[NSHTTPCookie isHTTPOnly]
  -[NSHTTPCookie expiresDate]
  -[NSHTTPCookie comment]
  -[NSHTTPCookie commentURL]
  -[NSHTTPCookie portList]
  -[NSHTTPCookie _storagePartition]
  -[NSHTTPCookie sameSitePolicy]
  -[NSHTTPCookie Name]
  -[NSHTTPCookie Value]
  -[NSHTTPCookie Domain]
  -[NSHTTPCookie Path]
  -[NSHTTPCookie Expires]
  -[NSHTTPCookie Comment]
  -[NSHTTPCookie CommentURL]
  -[NSHTTPCookie StoragePartition]
  -[NSHTTPCookie SameSitePolicy]
  -[NSHTTPCookie OriginURL]
  -[NSHTTPCookie Version]
  -[NSHTTPCookie Secure]
  -[NSHTTPCookie Discard]
  -[NSHTTPCookie Port]
  -[NSHTTPCookie MaxAge]
  -[NSHTTPCookie _compareForHeaderOrder:]
  -[NSHTTPCookie _isExpired]


SocksHandshakev5 : SocksHandshake
  // instance methods
  -[SocksHandshakev5 .cxx_destruct]
  -[SocksHandshakev5 finish:]
  -[SocksHandshakev5 parse:len:completion:]


SocksHandshake : NSObject /usr/lib/libxml2.2.dylib
 @property  BOOL finished
 @property  NSString *host
 @property  unsigned short port
 @property  NSDictionary *credentials

  // class methods
  +[SocksHandshake socksHadshakeWithVersion:]

  // instance methods
  -[SocksHandshake host]
  -[SocksHandshake port]
  -[SocksHandshake .cxx_destruct]
  -[SocksHandshake setPort:]
  -[SocksHandshake setFinished:]
  -[SocksHandshake finished]
  -[SocksHandshake setHost:]
  -[SocksHandshake finish:]
  -[SocksHandshake parse:len:completion:]
  -[SocksHandshake setCredentials:]
  -[SocksHandshake credentials]


__NSCFLocalDownloadFile : NSObject /usr/lib/libxml2.2.dylib
 @property  NSString *path
 @property  BOOL skipUnlink
 @property  BOOL truncateFile
 @property  int error
 @property  <__NSCFLocalDownloadFileOpener> *fileProvider
 @property  @? finishCompletion

  // instance methods
  -[__NSCFLocalDownloadFile dealloc]
  -[__NSCFLocalDownloadFile error]
  -[__NSCFLocalDownloadFile path]
  -[__NSCFLocalDownloadFile setError:]
  -[__NSCFLocalDownloadFile setPath:]
  -[__NSCFLocalDownloadFile fileURL]
  -[__NSCFLocalDownloadFile truncate]
  -[__NSCFLocalDownloadFile finishOnQueue:completion:]
  -[__NSCFLocalDownloadFile setFinished]
  -[__NSCFLocalDownloadFile captureFile:outStat:]
  -[__NSCFLocalDownloadFile setSkipUnlink:]
  -[__NSCFLocalDownloadFile writeBytes:completionQueue:completion:]
  -[__NSCFLocalDownloadFile initWithFullPath:]
  -[__NSCFLocalDownloadFile initWithExistingFile:expectedSize:]
  -[__NSCFLocalDownloadFile initWithExistingUnopenableFile:fileProvider:]
  -[__NSCFLocalDownloadFile initTempFileWithDirectory:]
  -[__NSCFLocalDownloadFile initQueues]
  -[__NSCFLocalDownloadFile ioChannel]
  -[__NSCFLocalDownloadFile skipUnlink]
  -[__NSCFLocalDownloadFile fileProvider]
  -[__NSCFLocalDownloadFile setFileProvider:]
  -[__NSCFLocalDownloadFile finishCompletion]
  -[__NSCFLocalDownloadFile setFinishCompletion:]
  -[__NSCFLocalDownloadFile truncateFile]
  -[__NSCFLocalDownloadFile setTruncateFile:]


__CFN_TaskMetrics : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding>
 @property  __CFN_SessionMetrics *sessionMetrics
 @property  BOOL completed
 @property  NSUUID *UUID
 @property  unsigned long identifier
 @property  NSMutableArray *transactionMetrics
 @property  double createTime
 @property  double firstResumeTime
 @property  double completeTime
 @property  long long options
 @property  long long schedulingTier
 @property  BOOL ignoreNextRedirection
 @property  __CFN_TransactionMetrics *currentTransactionMetrics

  // class methods
  +[__CFN_TaskMetrics supportsSecureCoding]
  +[__CFN_TaskMetrics optionsFromTask:]

  // instance methods
  -[__CFN_TaskMetrics options]
  -[__CFN_TaskMetrics encodeWithCoder:]
  -[__CFN_TaskMetrics initWithCoder:]
  -[__CFN_TaskMetrics .cxx_destruct]
  -[__CFN_TaskMetrics identifier]
  -[__CFN_TaskMetrics resume]
  -[__CFN_TaskMetrics setIdentifier:]
  -[__CFN_TaskMetrics UUID]
  -[__CFN_TaskMetrics setUUID:]
  -[__CFN_TaskMetrics suspend]
  -[__CFN_TaskMetrics setOptions:]
  -[__CFN_TaskMetrics completed]
  -[__CFN_TaskMetrics completionHandlerEvent]
  -[__CFN_TaskMetrics completeWithError:]
  -[__CFN_TaskMetrics schedulingTier]
  -[__CFN_TaskMetrics setSchedulingTier:]
  -[__CFN_TaskMetrics sessionMetrics]
  -[__CFN_TaskMetrics setSessionMetrics:]
  -[__CFN_TaskMetrics lockTransactionMetrics:]
  -[__CFN_TaskMetrics currentTransactionMetrics]
  -[__CFN_TaskMetrics delegateEvent:]
  -[__CFN_TaskMetrics delegateBegin:]
  -[__CFN_TaskMetrics delegateEnd:]
  -[__CFN_TaskMetrics initWithTask:sessionMetrics:]
  -[__CFN_TaskMetrics nextTransaction:withNewRequest:]
  -[__CFN_TaskMetrics transactionMetrics]
  -[__CFN_TaskMetrics setTransactionMetrics:]
  -[__CFN_TaskMetrics createTime]
  -[__CFN_TaskMetrics setCreateTime:]
  -[__CFN_TaskMetrics firstResumeTime]
  -[__CFN_TaskMetrics setFirstResumeTime:]
  -[__CFN_TaskMetrics completeTime]
  -[__CFN_TaskMetrics setCompleteTime:]
  -[__CFN_TaskMetrics ignoreNextRedirection]
  -[__CFN_TaskMetrics setIgnoreNextRedirection:]
  -[__CFN_TaskMetrics setCurrentTransactionMetrics:]
  -[__CFN_TaskMetrics setCompleted:]


PACURLSessionDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionDelegate, NSURLSessionTaskDelegate>
 @property  NSString *username
 @property  NSString *password
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PACURLSessionDelegate dealloc]
  -[PACURLSessionDelegate password]
  -[PACURLSessionDelegate setPassword:]
  -[PACURLSessionDelegate URLSession:didReceiveChallenge:completionHandler:]
  -[PACURLSessionDelegate URLSession:task:didReceiveChallenge:completionHandler:]
  -[PACURLSessionDelegate username]
  -[PACURLSessionDelegate setUsername:]
  -[PACURLSessionDelegate initWithUsername:password:]


__NSURLSessionStatistics : NSObject /usr/lib/libxml2.2.dylib
 @property  PBCodable *awdReport
 @property  unsigned int awdMetricID
 @property  NSUUID *nwActivity
 @property  NSUUID *taskUUID
 @property  NSArray *connectionUUIDS
 @property  NSUUID *externallyVisibleNwActivity
 @property  NSArray *externallyVisibleConnectionUUIDs

  // class methods
  +[__NSURLSessionStatistics reportMetricsToSymptoms:]
  +[__NSURLSessionStatistics createCFNetworkTaskMetrics_s:]
  +[__NSURLSessionStatistics getTaskType:]
  +[__NSURLSessionStatistics getNetworkProtocol:]
  +[__NSURLSessionStatistics fillCFNetworkTransactionMetricStruct:from:]

  // instance methods
  -[__NSURLSessionStatistics dealloc]
  -[__NSURLSessionStatistics .cxx_destruct]
  -[__NSURLSessionStatistics initWithCFNetworkReport:length:]
  -[__NSURLSessionStatistics nwActivity]
  -[__NSURLSessionStatistics taskUUID]
  -[__NSURLSessionStatistics connectionUUIDS]
  -[__NSURLSessionStatistics awdMetricID]
  -[__NSURLSessionStatistics awdReport]
  -[__NSURLSessionStatistics externallyVisibleNwActivity]
  -[__NSURLSessionStatistics setExternallyVisibleNwActivity:]
  -[__NSURLSessionStatistics externallyVisibleConnectionUUIDs]
  -[__NSURLSessionStatistics setExternallyVisibleConnectionUUIDs:]


NSHTTPURLRequestParameters : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[NSHTTPURLRequestParameters init]
  -[NSHTTPURLRequestParameters dealloc]
  -[NSHTTPURLRequestParameters initWithCoder:]


NSProxyConnection : NSObject /usr/lib/libxml2.2.dylib
 @property  NSObject<OS_tcp_connection> *connection
 @property  <NSProxyConnectionDelegate> *delegate
 @property  long long pendingWrites
 @property  BOOL doCleanupWhenWritesCompleted

  // instance methods
  -[NSProxyConnection dealloc]
  -[NSProxyConnection delegate]
  -[NSProxyConnection setDelegate:]
  -[NSProxyConnection .cxx_destruct]
  -[NSProxyConnection cancel]
  -[NSProxyConnection connection]
  -[NSProxyConnection setConnection:]
  -[NSProxyConnection write:handler:]
  -[NSProxyConnection pendingWrites]
  -[NSProxyConnection doCleanupWhenWritesCompleted]
  -[NSProxyConnection setDoCleanupWhenWritesCompleted:]
  -[NSProxyConnection read:handler:]
  -[NSProxyConnection initWithHost:port:queue:configuration:]
  -[NSProxyConnection initWithTCPConnection:]
  -[NSProxyConnection setPendingWrites:]


NSProxyConnectionStreamTask : NSProxyConnection <NSStreamDelegate, NSURLSessionStreamDelegate>
 @property  NSInputStream *inputStream
 @property  NSOutputStream *outputStream
 @property  BOOL dataAvailableForReading
 @property  NSURLSessionStreamTask *streamTask
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NSProxyConnectionStreamTask dealloc]
  -[NSProxyConnectionStreamTask setDelegate:]
  -[NSProxyConnectionStreamTask stream:handleEvent:]
  -[NSProxyConnectionStreamTask .cxx_destruct]
  -[NSProxyConnectionStreamTask cancel]
  -[NSProxyConnectionStreamTask outputStream]
  -[NSProxyConnectionStreamTask URLSession:streamTask:didBecomeInputStream:outputStream:]
  -[NSProxyConnectionStreamTask write:handler:]
  -[NSProxyConnectionStreamTask read:handler:]
  -[NSProxyConnectionStreamTask initWithHost:port:queue:configuration:]
  -[NSProxyConnectionStreamTask readFromStream]
  -[NSProxyConnectionStreamTask _onConnected:]
  -[NSProxyConnectionStreamTask streamTask]
  -[NSProxyConnectionStreamTask setStreamTask:]
  -[NSProxyConnectionStreamTask inputStream]
  -[NSProxyConnectionStreamTask setInputStream:]
  -[NSProxyConnectionStreamTask setOutputStream:]
  -[NSProxyConnectionStreamTask dataAvailableForReading]
  -[NSProxyConnectionStreamTask setDataAvailableForReading:]


__CFN_ConnectionMetrics : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding>
 @property  {weak_ptr<TransportConnection>=^{TransportConnection}^{__shared_weak_count}} transportConnection
 @property  NSObject<OS_nw_connection> *connection
 @property  __CFN_SessionMetrics *sessionMetrics
 @property  BOOL needsCachedTCPInfoAtEnd
 @property  NSDictionary *cachedTCPInfoAtEnd
 @property  BOOL needsCachedSubflowCounts
 @property  NSDictionary *cachedSubflowCounts
 @property  NSUUID *UUID
 @property  unsigned long identifier
 @property  NSUUID *initiatingTransactionID
 @property  double beginTime
 @property  double establishTime
 @property  double endTime
 @property  NSObject<OS_nw_endpoint> *endpoint
 @property  BOOL TLSConfigured
 @property  BOOL proxyConfigured
 @property  NSObject<OS_nw_endpoint> *localEndpoint
 @property  NSObject<OS_nw_endpoint> *remoteEndpoint
 @property  NSString *interfaceName
 @property  BOOL cellular
 @property  BOOL expensive
 @property  BOOL constrained
 @property  BOOL multipath
 @property  BOOL usedTFO
 @property  NSString *networkProtocolName
 @property  unsigned short negotiatedTLSProtocolVersion
 @property  unsigned short negotiatedTLSCipherSuite
 @property  NSObject<OS_nw_establishment_report> *establishmentReport
 @property  BOOL usedByTransaction
 @property  BOOL coalesced

  // class methods
  +[__CFN_ConnectionMetrics supportsSecureCoding]

  // instance methods
  -[__CFN_ConnectionMetrics encodeWithCoder:]
  -[__CFN_ConnectionMetrics initWithCoder:]
  -[__CFN_ConnectionMetrics .cxx_destruct]
  -[__CFN_ConnectionMetrics identifier]
  -[__CFN_ConnectionMetrics endpoint]
  -[__CFN_ConnectionMetrics setIdentifier:]
  -[__CFN_ConnectionMetrics wait]
  -[__CFN_ConnectionMetrics UUID]
  -[__CFN_ConnectionMetrics setUUID:]
  -[__CFN_ConnectionMetrics connection]
  -[__CFN_ConnectionMetrics .cxx_construct]
  -[__CFN_ConnectionMetrics setConnection:]
  -[__CFN_ConnectionMetrics initWithConnection:]
  -[__CFN_ConnectionMetrics end]
  -[__CFN_ConnectionMetrics begin]
  -[__CFN_ConnectionMetrics setEndpoint:]
  -[__CFN_ConnectionMetrics beginTime]
  -[__CFN_ConnectionMetrics setBeginTime:]
  -[__CFN_ConnectionMetrics endTime]
  -[__CFN_ConnectionMetrics setEndTime:]
  -[__CFN_ConnectionMetrics sessionMetrics]
  -[__CFN_ConnectionMetrics setSessionMetrics:]
  -[__CFN_ConnectionMetrics networkProtocolName]
  -[__CFN_ConnectionMetrics subflowCounts]
  -[__CFN_ConnectionMetrics tcpInfo]
  -[__CFN_ConnectionMetrics setNetworkProtocolName:]
  -[__CFN_ConnectionMetrics setUsedByTransaction:]
  -[__CFN_ConnectionMetrics usedByTransaction]
  -[__CFN_ConnectionMetrics linkWithTransaction:sessionMetrics:]
  -[__CFN_ConnectionMetrics isCellular]
  -[__CFN_ConnectionMetrics establish]
  -[__CFN_ConnectionMetrics setCoalesced:]
  -[__CFN_ConnectionMetrics _tcpInfo]
  -[__CFN_ConnectionMetrics _subflowCounts]
  -[__CFN_ConnectionMetrics initiatingTransactionID]
  -[__CFN_ConnectionMetrics setInitiatingTransactionID:]
  -[__CFN_ConnectionMetrics establishTime]
  -[__CFN_ConnectionMetrics setEstablishTime:]
  -[__CFN_ConnectionMetrics isTLSConfigured]
  -[__CFN_ConnectionMetrics setTLSConfigured:]
  -[__CFN_ConnectionMetrics isProxyConfigured]
  -[__CFN_ConnectionMetrics setProxyConfigured:]
  -[__CFN_ConnectionMetrics localEndpoint]
  -[__CFN_ConnectionMetrics setLocalEndpoint:]
  -[__CFN_ConnectionMetrics remoteEndpoint]
  -[__CFN_ConnectionMetrics setRemoteEndpoint:]
  -[__CFN_ConnectionMetrics interfaceName]
  -[__CFN_ConnectionMetrics setInterfaceName:]
  -[__CFN_ConnectionMetrics setCellular:]
  -[__CFN_ConnectionMetrics isExpensive]
  -[__CFN_ConnectionMetrics setExpensive:]
  -[__CFN_ConnectionMetrics isConstrained]
  -[__CFN_ConnectionMetrics setConstrained:]
  -[__CFN_ConnectionMetrics isMultipath]
  -[__CFN_ConnectionMetrics setMultipath:]
  -[__CFN_ConnectionMetrics usedTFO]
  -[__CFN_ConnectionMetrics setUsedTFO:]
  -[__CFN_ConnectionMetrics negotiatedTLSProtocolVersion]
  -[__CFN_ConnectionMetrics setNegotiatedTLSProtocolVersion:]
  -[__CFN_ConnectionMetrics negotiatedTLSCipherSuite]
  -[__CFN_ConnectionMetrics setNegotiatedTLSCipherSuite:]
  -[__CFN_ConnectionMetrics establishmentReport]
  -[__CFN_ConnectionMetrics setEstablishmentReport:]
  -[__CFN_ConnectionMetrics isCoalesced]
  -[__CFN_ConnectionMetrics transportConnection]
  -[__CFN_ConnectionMetrics setTransportConnection:]
  -[__CFN_ConnectionMetrics needsCachedTCPInfoAtEnd]
  -[__CFN_ConnectionMetrics setNeedsCachedTCPInfoAtEnd:]
  -[__CFN_ConnectionMetrics cachedTCPInfoAtEnd]
  -[__CFN_ConnectionMetrics setCachedTCPInfoAtEnd:]
  -[__CFN_ConnectionMetrics needsCachedSubflowCounts]
  -[__CFN_ConnectionMetrics setNeedsCachedSubflowCounts:]
  -[__CFN_ConnectionMetrics cachedSubflowCounts]
  -[__CFN_ConnectionMetrics setCachedSubflowCounts:]


NSNetService : NSObject /usr/lib/libxml2.2.dylib
 @property  <NSNetServiceDelegate> *delegate
 @property  BOOL includesPeerToPeer
 @property  NSString *name
 @property  NSString *type
 @property  NSString *domain
 @property  NSString *hostName
 @property  NSArray *addresses
 @property  long long port

  // class methods
  +[NSNetService dictionaryFromTXTRecordData:]
  +[NSNetService dataFromTXTRecordDictionary:]

  // instance methods
  -[NSNetService init]
  -[NSNetService dealloc]
  -[NSNetService isEqual:]
  -[NSNetService name]
  -[NSNetService domain]
  -[NSNetService type]
  -[NSNetService delegate]
  -[NSNetService setDelegate:]
  -[NSNetService scheduleInRunLoop:forMode:]
  -[NSNetService removeFromRunLoop:forMode:]
  -[NSNetService port]
  -[NSNetService stop]
  -[NSNetService hostName]
  -[NSNetService publish]
  -[NSNetService resolve]
  -[NSNetService _monitors]
  -[NSNetService addresses]
  -[NSNetService initWithCFNetService:]
  -[NSNetService initWithDomain:type:name:port:]
  -[NSNetService initWithDomain:type:name:]
  -[NSNetService includesPeerToPeer]
  -[NSNetService setIncludesPeerToPeer:]
  -[NSNetService _includesAWDL]
  -[NSNetService _setIncludesAWDL:]
  -[NSNetService _scheduleInDefaultRunLoopForMode:]
  -[NSNetService _internal_publishWithOptions:]
  -[NSNetService normalizedType]
  -[NSNetService publishWithServer:]
  -[NSNetService publishWithOptions:]
  -[NSNetService _dispatchCallBackWithError:]
  -[NSNetService _internalNetService]
  -[NSNetService getInputStream:outputStream:]
  -[NSNetService resolveWithTimeout:]
  -[NSNetService startMonitoring]
  -[NSNetService stopMonitoring]
  -[NSNetService setTXTRecordData:]
  -[NSNetService TXTRecordData]


NSNetServiceBrowser : NSObject /usr/lib/libxml2.2.dylib
 @property  <NSNetServiceBrowserDelegate> *delegate
 @property  BOOL includesPeerToPeer

  // instance methods
  -[NSNetServiceBrowser init]
  -[NSNetServiceBrowser dealloc]
  -[NSNetServiceBrowser delegate]
  -[NSNetServiceBrowser setDelegate:]
  -[NSNetServiceBrowser scheduleInRunLoop:forMode:]
  -[NSNetServiceBrowser removeFromRunLoop:forMode:]
  -[NSNetServiceBrowser stop]
  -[NSNetServiceBrowser includesPeerToPeer]
  -[NSNetServiceBrowser setIncludesPeerToPeer:]
  -[NSNetServiceBrowser _includesAWDL]
  -[NSNetServiceBrowser _setIncludesAWDL:]
  -[NSNetServiceBrowser searchForBrowsableDomains]
  -[NSNetServiceBrowser searchForRegistrationDomains]
  -[NSNetServiceBrowser searchForServicesOfType:inDomain:]
  -[NSNetServiceBrowser _internalNetServiceBrowser]
  -[NSNetServiceBrowser _dispatchCallBack:flags:error:]
  -[NSNetServiceBrowser searchForAllDomains]


StrictSecurityURLSessionDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionDelegate, NSURLSessionTaskDelegate>
 @property  @? xctAssert
 @property  BOOL redirected
 @property  BOOL challengedForServerTrust
 @property  BOOL cancelTrustChallenge
 @property  BOOL expectSchemeUpgradeDueToDynamicHSTS
 @property  BOOL setIgnoreHSTSInRedirect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[StrictSecurityURLSessionDelegate dealloc]
  -[StrictSecurityURLSessionDelegate URLSession:didReceiveChallenge:completionHandler:]
  -[StrictSecurityURLSessionDelegate URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[StrictSecurityURLSessionDelegate initWithXCTAssertBlock:]
  -[StrictSecurityURLSessionDelegate xctAssert]
  -[StrictSecurityURLSessionDelegate setXctAssert:]
  -[StrictSecurityURLSessionDelegate redirected]
  -[StrictSecurityURLSessionDelegate setRedirected:]
  -[StrictSecurityURLSessionDelegate challengedForServerTrust]
  -[StrictSecurityURLSessionDelegate setChallengedForServerTrust:]
  -[StrictSecurityURLSessionDelegate cancelTrustChallenge]
  -[StrictSecurityURLSessionDelegate setCancelTrustChallenge:]
  -[StrictSecurityURLSessionDelegate expectSchemeUpgradeDueToDynamicHSTS]
  -[StrictSecurityURLSessionDelegate setExpectSchemeUpgradeDueToDynamicHSTS:]
  -[StrictSecurityURLSessionDelegate setIgnoreHSTSInRedirect]
  -[StrictSecurityURLSessionDelegate setSetIgnoreHSTSInRedirect:]


TestChallengeSender : NSObject /usr/lib/libxml2.2.dylib <NSURLAuthenticationChallengeSender>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TestChallengeSender useCredential:forAuthenticationChallenge:]
  -[TestChallengeSender continueWithoutCredentialForAuthenticationChallenge:]
  -[TestChallengeSender cancelAuthenticationChallenge:]
  -[TestChallengeSender cleanupChallenges]


__NSCFMemoryHTTPCookieStorage : NSHTTPCookieStorage
  // instance methods
  -[__NSCFMemoryHTTPCookieStorage init]


__NSCFMemoryURLCredentialStorage : NSURLCredentialStorage
  // instance methods
  -[__NSCFMemoryURLCredentialStorage init]


AppSSOUnitTester : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionTaskDelegate, NSURLSessionDataDelegate>
 @property  BOOL takeRedirect
 @property  BOOL receivedChallenge
 @property  BOOL doNotProvideCreds
 @property  NSHTTPURLResponse *redirectResponse
 @property  NSError *completionError
 @property  NSURLResponse *response
 @property  NSMutableData *responseData
 @property  NSURLSession *session
 @property  NSObject<OS_dispatch_semaphore> *sema
 @property  NSURLSessionConfiguration *config
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AppSSOUnitTester .cxx_destruct]
  -[AppSSOUnitTester config]
  -[AppSSOUnitTester setConfig:]
  -[AppSSOUnitTester session]
  -[AppSSOUnitTester setSession:]
  -[AppSSOUnitTester response]
  -[AppSSOUnitTester responseData]
  -[AppSSOUnitTester setResponseData:]
  -[AppSSOUnitTester URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[AppSSOUnitTester URLSession:task:didReceiveChallenge:completionHandler:]
  -[AppSSOUnitTester URLSession:task:didCompleteWithError:]
  -[AppSSOUnitTester URLSession:dataTask:didReceiveData:]
  -[AppSSOUnitTester URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[AppSSOUnitTester setResponse:]
  -[AppSSOUnitTester startTaskWithSemaphore:request:]
  -[AppSSOUnitTester setconfig:]
  -[AppSSOUnitTester takeRedirect]
  -[AppSSOUnitTester setTakeRedirect:]
  -[AppSSOUnitTester receivedChallenge]
  -[AppSSOUnitTester setReceivedChallenge:]
  -[AppSSOUnitTester doNotProvideCreds]
  -[AppSSOUnitTester setDoNotProvideCreds:]
  -[AppSSOUnitTester redirectResponse]
  -[AppSSOUnitTester setRedirectResponse:]
  -[AppSSOUnitTester completionError]
  -[AppSSOUnitTester setCompletionError:]
  -[AppSSOUnitTester sema]
  -[AppSSOUnitTester setSema:]


__NSCFURLSessionTaskInfo : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding>
 @property  unsigned long identifier
 @property  unsigned long taskKind
 @property  double creationTime
 @property  long long state
 @property  unsigned long suspendCount
 @property  NSString *taskDescription
 @property  NSURLRequest *originalRequest
 @property  NSURLRequest *currentRequest
 @property  NSURLResponse *response
 @property  NSDate *earliestBeginDate
 @property  long long countOfBytesClientExpectsToSend
 @property  long long countOfBytesClientExpectsToReceive
 @property  BOOL resumedAndWaitingForEarliestBeginDate
 @property  BOOL respondedToWillBeginDelayedRequestCallback
 @property  NSError *error
 @property  NSURL *fileURL
 @property  NSURL *downloadFileURL
 @property  NSString *bundleID
 @property  NSString *sessionID
 @property  BOOL hasStarted
 @property  BOOL expectingResumeCallback
 @property  BOOL establishedConnection
 @property  unsigned long retryCount
 @property  unsigned long lowThroughputTimerRetryCount
 @property  BOOL disablesRetry
 @property  BOOL shouldCancelOnDisconnect
 @property  long long basePriority
 @property  BOOL discretionary
 @property  long long discretionaryOverride
 @property  unsigned int qos
 @property  NSString *personaUniqueString
 @property  NSUUID *uniqueIdentifier
 @property  NSString *storagePartitionIdentifier
 @property  long long bytesPerSecondLimit
 @property  unsigned long expectedProgressTarget
 @property  double loadingPriority
 @property  BOOL mayBeDemotedToDiscretionary
 @property  NSString *pathToDownloadTaskFile
 @property  double timeoutIntervalForResource
 @property  <SZExtractor> *_extractor
 @property  BOOL _hasSZExtractor
 @property  BOOL _doesSZExtractorConsumeExtractedData
 @property  BOOL startedUserInitiated
 @property  unsigned long AVAssetDownloadToken
 @property  NSURL *URL
 @property  NSURL *destinationURL
 @property  NSString *assetTitle
 @property  NSData *assetArtworkData
 @property  NSDictionary *options
 @property  AVURLAsset *AVURLAsset
 @property  NSURL *AVAssetURL
 @property  BOOL initializedWithAVAsset
 @property  NSURL *temporaryDestinationURL
 @property  NSDictionary *resolvedMediaSelectionPlist
 @property  NSString *avAssetDownloadChildDownloadSessionIdentifier
 @property  long long countOfBytesReceived
 @property  long long countOfBytesSent
 @property  long long countOfBytesExpectedToSend
 @property  long long countOfBytesExpectedToReceive
 @property  NSDictionary *_backgroundTrailers
 @property  NSDictionary *additionalProperties
 @property  __CFN_TaskMetrics *taskMetrics

  // class methods
  +[__NSCFURLSessionTaskInfo supportsSecureCoding]

  // instance methods
  -[__NSCFURLSessionTaskInfo options]
  -[__NSCFURLSessionTaskInfo encodeWithCoder:]
  -[__NSCFURLSessionTaskInfo initWithCoder:]
  -[__NSCFURLSessionTaskInfo .cxx_destruct]
  -[__NSCFURLSessionTaskInfo identifier]
  -[__NSCFURLSessionTaskInfo error]
  -[__NSCFURLSessionTaskInfo setError:]
  -[__NSCFURLSessionTaskInfo additionalProperties]
  -[__NSCFURLSessionTaskInfo setAdditionalProperties:]
  -[__NSCFURLSessionTaskInfo setIdentifier:]
  -[__NSCFURLSessionTaskInfo state]
  -[__NSCFURLSessionTaskInfo setURL:]
  -[__NSCFURLSessionTaskInfo qos]
  -[__NSCFURLSessionTaskInfo suspendCount]
  -[__NSCFURLSessionTaskInfo URL]
  -[__NSCFURLSessionTaskInfo loadingPriority]
  -[__NSCFURLSessionTaskInfo setLoadingPriority:]
  -[__NSCFURLSessionTaskInfo uniqueIdentifier]
  -[__NSCFURLSessionTaskInfo setOptions:]
  -[__NSCFURLSessionTaskInfo fileURL]
  -[__NSCFURLSessionTaskInfo setFileURL:]
  -[__NSCFURLSessionTaskInfo bundleID]
  -[__NSCFURLSessionTaskInfo setBundleID:]
  -[__NSCFURLSessionTaskInfo setState:]
  -[__NSCFURLSessionTaskInfo setTimeoutIntervalForResource:]
  -[__NSCFURLSessionTaskInfo setDiscretionary:]
  -[__NSCFURLSessionTaskInfo timeoutIntervalForResource]
  -[__NSCFURLSessionTaskInfo response]
  -[__NSCFURLSessionTaskInfo originalRequest]
  -[__NSCFURLSessionTaskInfo setUniqueIdentifier:]
  -[__NSCFURLSessionTaskInfo setResponse:]
  -[__NSCFURLSessionTaskInfo currentRequest]
  -[__NSCFURLSessionTaskInfo setQos:]
  -[__NSCFURLSessionTaskInfo sessionID]
  -[__NSCFURLSessionTaskInfo hasStarted]
  -[__NSCFURLSessionTaskInfo _loggableDescription]
  -[__NSCFURLSessionTaskInfo setSuspendCount:]
  -[__NSCFURLSessionTaskInfo setBytesPerSecondLimit:]
  -[__NSCFURLSessionTaskInfo setCountOfBytesExpectedToSend:]
  -[__NSCFURLSessionTaskInfo setCountOfBytesSent:]
  -[__NSCFURLSessionTaskInfo setCountOfBytesReceived:]
  -[__NSCFURLSessionTaskInfo countOfBytesReceived]
  -[__NSCFURLSessionTaskInfo setCountOfBytesExpectedToReceive:]
  -[__NSCFURLSessionTaskInfo taskKind]
  -[__NSCFURLSessionTaskInfo pathToDownloadTaskFile]
  -[__NSCFURLSessionTaskInfo storagePartitionIdentifier]
  -[__NSCFURLSessionTaskInfo setCountOfBytesClientExpectsToReceive:]
  -[__NSCFURLSessionTaskInfo countOfBytesClientExpectsToReceive]
  -[__NSCFURLSessionTaskInfo setCountOfBytesClientExpectsToSend:]
  -[__NSCFURLSessionTaskInfo countOfBytesClientExpectsToSend]
  -[__NSCFURLSessionTaskInfo setEarliestBeginDate:]
  -[__NSCFURLSessionTaskInfo earliestBeginDate]
  -[__NSCFURLSessionTaskInfo setTaskDescription:]
  -[__NSCFURLSessionTaskInfo taskDescription]
  -[__NSCFURLSessionTaskInfo _extractor]
  -[__NSCFURLSessionTaskInfo countOfBytesExpectedToReceive]
  -[__NSCFURLSessionTaskInfo setOriginalRequest:]
  -[__NSCFURLSessionTaskInfo set_extractor:]
  -[__NSCFURLSessionTaskInfo taskMetrics]
  -[__NSCFURLSessionTaskInfo setTaskMetrics:]
  -[__NSCFURLSessionTaskInfo setDestinationURL:]
  -[__NSCFURLSessionTaskInfo destinationURL]
  -[__NSCFURLSessionTaskInfo AVAssetDownloadToken]
  -[__NSCFURLSessionTaskInfo setAVAssetDownloadToken:]
  -[__NSCFURLSessionTaskInfo countOfBytesExpectedToSend]
  -[__NSCFURLSessionTaskInfo countOfBytesSent]
  -[__NSCFURLSessionTaskInfo _doesSZExtractorConsumeExtractedData]
  -[__NSCFURLSessionTaskInfo _hasSZExtractor]
  -[__NSCFURLSessionTaskInfo set_hasSZExtractor:]
  -[__NSCFURLSessionTaskInfo set_doesSZExtractorConsumeExtractedData:]
  -[__NSCFURLSessionTaskInfo _backgroundTrailers]
  -[__NSCFURLSessionTaskInfo temporaryDestinationURL]
  -[__NSCFURLSessionTaskInfo setTemporaryDestinationURL:]
  -[__NSCFURLSessionTaskInfo assetTitle]
  -[__NSCFURLSessionTaskInfo setAssetTitle:]
  -[__NSCFURLSessionTaskInfo assetArtworkData]
  -[__NSCFURLSessionTaskInfo setAssetArtworkData:]
  -[__NSCFURLSessionTaskInfo resolvedMediaSelectionPlist]
  -[__NSCFURLSessionTaskInfo initializedWithAVAsset]
  -[__NSCFURLSessionTaskInfo avAssetDownloadChildDownloadSessionIdentifier]
  -[__NSCFURLSessionTaskInfo isDiscretionary]
  -[__NSCFURLSessionTaskInfo initWithTask:uniqueIdentifier:bundleID:sessionID:]
  -[__NSCFURLSessionTaskInfo _logTaskUUIDMapping]
  -[__NSCFURLSessionTaskInfo initWithDataTask:uniqueIdentifier:bundleID:sessionID:]
  -[__NSCFURLSessionTaskInfo initWithUploadTask:uniqueIdentifier:bundleID:sessionID:]
  -[__NSCFURLSessionTaskInfo initWithDownloadTask:uniqueIdentifier:bundleID:sessionID:]
  -[__NSCFURLSessionTaskInfo initWithAVAssetDownloadURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:]
  -[__NSCFURLSessionTaskInfo initWithAVAggregateAssetDownloadChildDownloadSessionIdentifier:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:]
  -[__NSCFURLSessionTaskInfo setTaskKind:]
  -[__NSCFURLSessionTaskInfo creationTime]
  -[__NSCFURLSessionTaskInfo setCreationTime:]
  -[__NSCFURLSessionTaskInfo setCurrentRequest:]
  -[__NSCFURLSessionTaskInfo resumedAndWaitingForEarliestBeginDate]
  -[__NSCFURLSessionTaskInfo setResumedAndWaitingForEarliestBeginDate:]
  -[__NSCFURLSessionTaskInfo respondedToWillBeginDelayedRequestCallback]
  -[__NSCFURLSessionTaskInfo setRespondedToWillBeginDelayedRequestCallback:]
  -[__NSCFURLSessionTaskInfo downloadFileURL]
  -[__NSCFURLSessionTaskInfo setDownloadFileURL:]
  -[__NSCFURLSessionTaskInfo setSessionID:]
  -[__NSCFURLSessionTaskInfo setHasStarted:]
  -[__NSCFURLSessionTaskInfo expectingResumeCallback]
  -[__NSCFURLSessionTaskInfo setExpectingResumeCallback:]
  -[__NSCFURLSessionTaskInfo establishedConnection]
  -[__NSCFURLSessionTaskInfo setEstablishedConnection:]
  -[__NSCFURLSessionTaskInfo retryCount]
  -[__NSCFURLSessionTaskInfo setRetryCount:]
  -[__NSCFURLSessionTaskInfo lowThroughputTimerRetryCount]
  -[__NSCFURLSessionTaskInfo setLowThroughputTimerRetryCount:]
  -[__NSCFURLSessionTaskInfo disablesRetry]
  -[__NSCFURLSessionTaskInfo setDisablesRetry:]
  -[__NSCFURLSessionTaskInfo shouldCancelOnDisconnect]
  -[__NSCFURLSessionTaskInfo setShouldCancelOnDisconnect:]
  -[__NSCFURLSessionTaskInfo basePriority]
  -[__NSCFURLSessionTaskInfo setBasePriority:]
  -[__NSCFURLSessionTaskInfo discretionaryOverride]
  -[__NSCFURLSessionTaskInfo setDiscretionaryOverride:]
  -[__NSCFURLSessionTaskInfo personaUniqueString]
  -[__NSCFURLSessionTaskInfo setPersonaUniqueString:]
  -[__NSCFURLSessionTaskInfo setStoragePartitionIdentifier:]
  -[__NSCFURLSessionTaskInfo bytesPerSecondLimit]
  -[__NSCFURLSessionTaskInfo expectedProgressTarget]
  -[__NSCFURLSessionTaskInfo setExpectedProgressTarget:]
  -[__NSCFURLSessionTaskInfo mayBeDemotedToDiscretionary]
  -[__NSCFURLSessionTaskInfo setMayBeDemotedToDiscretionary:]
  -[__NSCFURLSessionTaskInfo setPathToDownloadTaskFile:]
  -[__NSCFURLSessionTaskInfo startedUserInitiated]
  -[__NSCFURLSessionTaskInfo setStartedUserInitiated:]
  -[__NSCFURLSessionTaskInfo AVURLAsset]
  -[__NSCFURLSessionTaskInfo setAVURLAsset:]
  -[__NSCFURLSessionTaskInfo AVAssetURL]
  -[__NSCFURLSessionTaskInfo setAVAssetURL:]
  -[__NSCFURLSessionTaskInfo setInitializedWithAVAsset:]
  -[__NSCFURLSessionTaskInfo setResolvedMediaSelectionPlist:]
  -[__NSCFURLSessionTaskInfo setAvAssetDownloadChildDownloadSessionIdentifier:]
  -[__NSCFURLSessionTaskInfo set_backgroundTrailers:]


__NSURLSessionTaskDependencyResourceIdentifier : NSObject /usr/lib/libxml2.2.dylib <NSCopying>
 @property  NSString *URLPath
 @property  NSString *mimeType

  // instance methods
  -[__NSURLSessionTaskDependencyResourceIdentifier dealloc]
  -[__NSURLSessionTaskDependencyResourceIdentifier isEqual:]
  -[__NSURLSessionTaskDependencyResourceIdentifier copyWithZone:]
  -[__NSURLSessionTaskDependencyResourceIdentifier initWitURLPath:mimeType:]
  -[__NSURLSessionTaskDependencyResourceIdentifier URLPath]
  -[__NSURLSessionTaskDependencyResourceIdentifier setURLPath:]
  -[__NSURLSessionTaskDependencyResourceIdentifier mimeType]
  -[__NSURLSessionTaskDependencyResourceIdentifier setMimeType:]


NSURLSessionTaskDependencyDescription : NSObject /usr/lib/libxml2.2.dylib
 @property  __NSURLSessionTaskDependencyResourceIdentifier *_dependent
 @property  __NSURLSessionTaskDependencyResourceIdentifier *_parent
 @property  float priority
 @property  BOOL exclusive
 @property  NSString *dependentURLPath
 @property  NSString *dependentMimeType
 @property  NSString *parentURLPath
 @property  NSString *parentMimeType

  // class methods
  +[NSURLSessionTaskDependencyDescription taskDependencyDescriptionWithURLPath:parentURLPath:]
  +[NSURLSessionTaskDependencyDescription taskDependencyDescriptionWithURLPath:parentMimeType:]
  +[NSURLSessionTaskDependencyDescription taskDependencyDescriptionWithMimeType:parentURLPath:]
  +[NSURLSessionTaskDependencyDescription taskDependencyDescriptionWithMimeType:parentMimeType:]
  +[NSURLSessionTaskDependencyDescription taskDependencyDescriptionWithParentURLPath:]
  +[NSURLSessionTaskDependencyDescription taskDependencyDescriptionWithParentMimeType:]

  // instance methods
  -[NSURLSessionTaskDependencyDescription dependentURLPath]
  -[NSURLSessionTaskDependencyDescription dependentMimeType]
  -[NSURLSessionTaskDependencyDescription parentURLPath]
  -[NSURLSessionTaskDependencyDescription parentMimeType]


__NSCFURLSessionTaskDependencyDescription : NSURLSessionTaskDependencyDescription
  // instance methods
  -[__NSCFURLSessionTaskDependencyDescription dealloc]
  -[__NSCFURLSessionTaskDependencyDescription _parent]
  -[__NSCFURLSessionTaskDependencyDescription priority]
  -[__NSCFURLSessionTaskDependencyDescription setPriority:]
  -[__NSCFURLSessionTaskDependencyDescription _dependent]
  -[__NSCFURLSessionTaskDependencyDescription initWithPriority:exclusive:]
  -[__NSCFURLSessionTaskDependencyDescription initWithURLPath:mimeType:parentURLPath:parentMimeType:priority:exclusive:]
  -[__NSCFURLSessionTaskDependencyDescription exclusive]
  -[__NSCFURLSessionTaskDependencyDescription setExclusive:]
  -[__NSCFURLSessionTaskDependencyDescription set_dependent:]
  -[__NSCFURLSessionTaskDependencyDescription set_parent:]


__NSCFURLSessionTaskDependencyTreeNode : NSObject /usr/lib/libxml2.2.dylib
 @property  NSURLSessionTaskDependencyDescription *dependencyDescription
 @property  NSMutableArray *children
 @property  NSMutableArray *childrenResourceIdentifiers
 @property  NSNumber *rootParentStreamID
 @property  NSMutableDictionary *_dependentToParentStreamIDs
 @property  NSMutableDictionary *_parentToParentStreamIDs

  // instance methods
  -[__NSCFURLSessionTaskDependencyTreeNode init]
  -[__NSCFURLSessionTaskDependencyTreeNode dealloc]
  -[__NSCFURLSessionTaskDependencyTreeNode dependencyDescription]
  -[__NSCFURLSessionTaskDependencyTreeNode children]
  -[__NSCFURLSessionTaskDependencyTreeNode childrenResourceIdentifiers]
  -[__NSCFURLSessionTaskDependencyTreeNode rootParentStreamID]
  -[__NSCFURLSessionTaskDependencyTreeNode _dependentToParentStreamIDs]
  -[__NSCFURLSessionTaskDependencyTreeNode _parentToParentStreamIDs]
  -[__NSCFURLSessionTaskDependencyTreeNode buildTree:parentsToDependencies:parentsToChildren:]
  -[__NSCFURLSessionTaskDependencyTreeNode makePriorityInfoStartingFromStreamID:parentStream:priorityInfo:dependentToParentStreamIDs:parentToParentStreamIDs:]
  -[__NSCFURLSessionTaskDependencyTreeNode makePriorityInfoStartingFromStreamID:]
  -[__NSCFURLSessionTaskDependencyTreeNode setDependencyDescription:]
  -[__NSCFURLSessionTaskDependencyTreeNode setChildren:]
  -[__NSCFURLSessionTaskDependencyTreeNode setChildrenResourceIdentifiers:]
  -[__NSCFURLSessionTaskDependencyTreeNode setRootParentStreamID:]
  -[__NSCFURLSessionTaskDependencyTreeNode set_dependentToParentStreamIDs:]
  -[__NSCFURLSessionTaskDependencyTreeNode set_parentToParentStreamIDs:]


NSURLSessionTaskDependencyTree : NSObject /usr/lib/libxml2.2.dylib
 @property  NSMutableDictionary *_dependencies
 @property  __NSCFURLSessionTaskDependencyTreeNode *_effectiveTree
 @property  NSURL *mainDocumentURL

  // class methods
  +[NSURLSessionTaskDependencyTree dependencyTreeDefaultWeb]
  +[NSURLSessionTaskDependencyTree dependencyTreeWithMainDocumentURL:dependencyDescriptions:]
  +[NSURLSessionTaskDependencyTree dependencyTreeWithJSONData:error:]
  +[NSURLSessionTaskDependencyTree mimeTypeForURLString:]

  // instance methods
  -[NSURLSessionTaskDependencyTree _parentForURLPath:]
  -[NSURLSessionTaskDependencyTree _parentForMimeType:]


__NSCFURLSessionTaskDependencyTree : NSURLSessionTaskDependencyTree
  // class methods
  +[__NSCFURLSessionTaskDependencyTree dependencyTreeWithMainDocumentURL:dependencyDescriptions:]

  // instance methods
  -[__NSCFURLSessionTaskDependencyTree dealloc]
  -[__NSCFURLSessionTaskDependencyTree mainDocumentURL]
  -[__NSCFURLSessionTaskDependencyTree setMainDocumentURL:]
  -[__NSCFURLSessionTaskDependencyTree _dependencies]
  -[__NSCFURLSessionTaskDependencyTree _effectiveTree]
  -[__NSCFURLSessionTaskDependencyTree set_dependencies:]
  -[__NSCFURLSessionTaskDependencyTree set_effectiveTree:]


NSURLSessionTaskDependency : NSObject /usr/lib/libxml2.2.dylib
 @property  NSURLSessionTaskDependencyDescription *taskDependencyDescription
 @property  NSURLSessionTask *parentTask
 @property  NSURLSessionTask *mainDocumentTask

  // class methods
  +[NSURLSessionTaskDependency taskDependencyWithParentTask:priority:exclusive:]
  +[NSURLSessionTaskDependency taskDependencyWithMainDocumentTask:]
  +[NSURLSessionTaskDependency taskDependencyWithMainDocumentTask:taskDependencyDescription:]


__NSCFURLSessionTaskDependency : NSURLSessionTaskDependency
  // class methods
  +[__NSCFURLSessionTaskDependency taskDependencyWithParentTask:priority:exclusive:]
  +[__NSCFURLSessionTaskDependency taskDependencyWithMainDocumentTask:]
  +[__NSCFURLSessionTaskDependency taskDependencyWithMainDocumentTask:taskDependencyDescription:]

  // instance methods
  -[__NSCFURLSessionTaskDependency init]
  -[__NSCFURLSessionTaskDependency dealloc]
  -[__NSCFURLSessionTaskDependency taskDependencyDescription]
  -[__NSCFURLSessionTaskDependency setTaskDependencyDescription:]
  -[__NSCFURLSessionTaskDependency parentTask]
  -[__NSCFURLSessionTaskDependency mainDocumentTask]


__NSCFURLSessionTaskActiveStreamDependencyInfo : NSObject /usr/lib/libxml2.2.dylib
 @property  NSNumber *_streamID
 @property  NSMutableDictionary *_mainDocumentTaskURLs
 @property  NSMutableDictionary *_mainDocumentTaskMimeTypes

  // instance methods
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo init]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo dealloc]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo isEmpty]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo _streamID]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo _mainDocumentTaskURLs]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo _mainDocumentTaskMimeTypes]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo initWithStreamID:requestURLString:dependencyInfo:]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo addNewStreamID:requestURLString:]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo parentStreamIDForURLString:]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo parentStreamIDForMimeType:]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo removeStreamWithStreamID:requestURLString:]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo set_streamID:]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo set_mainDocumentTaskURLs:]
  -[__NSCFURLSessionTaskActiveStreamDependencyInfo set_mainDocumentTaskMimeTypes:]


NSURLSession : NSObject /usr/lib/libxml2.2.dylib
 @property  NSURLSessionConfiguration *_local_immutable_configuration
 @property  BOOL isBackgroundSession
 @property  BOOL _isProxySession
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  BOOL invalid
 @property  BOOL _isSharedSession
 @property  NSUUID *_uuid
 @property  NSString *_tlsSessionCachePrefix
 @property  NSMutableDictionary *_altSvc
 @property  NSMutableSet *_h2BlacklistedHosts
 @property  NSMutableDictionary *_coalescing
 @property  __CFN_SessionMetrics *_metrics
 @property  unsigned long nextSeed
 @property  NSOperationQueue *delegateQueue
 @property  <NSURLSessionDelegate> *delegate
 @property  NSURLSessionConfiguration *configuration
 @property  NSString *sessionDescription

  // class methods
  +[NSURLSession new]
  +[NSURLSession sessionWithConfiguration:delegate:delegateQueue:]
  +[NSURLSession sharedSession]
  +[NSURLSession _sharedSessionForConnection]
  +[NSURLSession sessionWithConfiguration:]
  +[NSURLSession _errorFromError:forTask:]
  +[NSURLSession _backgroundServiceAvailable]
  +[NSURLSession _sendPendingCallbacksForSessionIdentifier:]
  +[NSURLSession _releaseProcessAssertionForSessionIdentifier:]
  +[NSURLSession _getActiveSessionIdentifiersWithCompletionHandler:]
  +[NSURLSession _obliterateAllBackgroundSessionsWithCompletionHandler:]
  +[NSURLSession _strictTrustEvaluate:queue:completionHandler:]
  +[NSURLSession _disableAppSSO]
  +[NSURLSession _setEventDelegate:queue:]
  +[NSURLSession _setHTTPRewriter:]

  // instance methods
  -[NSURLSession init]
  -[NSURLSession dealloc]
  -[NSURLSession copyWithZone:]
  -[NSURLSession delegate]
  -[NSURLSession downloadTaskWithRequest:]
  -[NSURLSession configuration]
  -[NSURLSession dataTaskWithRequest:]
  -[NSURLSession invalidateAndCancel]
  -[NSURLSession finishTasksAndInvalidate]
  -[NSURLSession dataTaskWithRequest:completionHandler:]
  -[NSURLSession delegateQueue]
  -[NSURLSession resetWithCompletionHandler:]
  -[NSURLSession uploadTaskWithStreamedRequest:]
  -[NSURLSession _dataTaskWithTaskForClass:]
  -[NSURLSession _uploadTaskWithTaskForClass:]
  -[NSURLSession _downloadTaskWithTaskForClass:]
  -[NSURLSession _useTLSSessionCacheFromSession:]
  -[NSURLSession delegate_companionAvailabilityChanged:]
  -[NSURLSession can_delegate_companionAvailabilityChanged]
  -[NSURLSession dataTaskWithRequest:uniqueIdentifier:]
  -[NSURLSession _isSharedSession]
  -[NSURLSession _local_immutable_configuration]
  -[NSURLSession finalizeDelegateWithError:]
  -[NSURLSession addDelegateBlock:]
  -[NSURLSession webSocketTaskWithRequest:]
  -[NSURLSession _nwContext]
  -[NSURLSession delegate_task:_schemeUpgraded:completionHandler:]
  -[NSURLSession can_delegate_task__schemeUpgraded]
  -[NSURLSession delegate_task:needNewBodyStream:]
  -[NSURLSession can_delegate_task_needNewBodyStream]
  -[NSURLSession delegate_dataTask:didReceiveResponse:completionHandler:]
  -[NSURLSession can_delegate_dataTask_didReceiveResponse]
  -[NSURLSession delegate_task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:]
  -[NSURLSession can_delegate_task_didSendBodyData]
  -[NSURLSession delegate_needConnectedSocketToHost:port:completionHandler:]
  -[NSURLSession can_delegate_needConnectedSocket]
  -[NSURLSession delegate_task:conditionalRequirementsChanged:]
  -[NSURLSession can_delegate_task_conditionalRequirementsChanged]
  -[NSURLSession delegate_taskIsWaitingForConnectivity:]
  -[NSURLSession can_delegate_taskIsWaitingForConnectivity]
  -[NSURLSession delegate_task_isWaitingForConnection:]
  -[NSURLSession can_delegate_task_isWaitingForConnection]
  -[NSURLSession delegate_task:isWaitingForConnectionWithReason:]
  -[NSURLSession can_delegate_task_isWaitingForConnectionWithReason]
  -[NSURLSession delegate_task:_willSendRequestForEstablishedConnection:completionHandler:]
  -[NSURLSession can_delegate_task_willSendRequestForEstablishedConnection]
  -[NSURLSession delegate_dataTask:didReceiveData:completionHandler:]
  -[NSURLSession can_delegate_dataTask_didReceiveData]
  -[NSURLSession delegate_task:didFinishCollectingMetrics:completion:]
  -[NSURLSession can_delegate_task_didFinishCollectingMetrics]
  -[NSURLSession delegate_task:didCompleteWithError:]
  -[NSURLSession can_delegate_task_didCompleteWithError]
  -[NSURLSession delegate_dataTask:willCacheResponse:completionHandler:]
  -[NSURLSession can_delegate_dataTask_willCacheResponse]
  -[NSURLSession delegate_task:didReceiveChallenge:completionHandler:]
  -[NSURLSession can_delegate_task_didReceiveChallenge]
  -[NSURLSession delegate_didReceiveChallenge:completionHandler:]
  -[NSURLSession can_delegate_didReceiveChallenge]
  -[NSURLSession delegate_task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[NSURLSession can_delegate_task_willPerformHTTPRedirection]
  -[NSURLSession delegate_task:willUseEffectiveConfiguration:completionHandler:]
  -[NSURLSession can_delegate_willUseEffectiveConfiguration]
  -[NSURLSession delegate_dataTask:didBecomeDownloadTask:completionHandler:]
  -[NSURLSession can_delegate_dataTask_didBecomeDownloadTask]
  -[NSURLSession can_delegate_dataTask_didBecomeStreamTask]
  -[NSURLSession delegate_dataTask:didBecomeStreamTask:completionHandler:]
  -[NSURLSession isBackgroundSession]
  -[NSURLSession delegate_downloadTask:didResumeAtOffset:expectedTotalBytes:]
  -[NSURLSession can_delegate_downloadTask_didResumeAtOffset]
  -[NSURLSession delegate_downloadTask:didReceiveResponse:]
  -[NSURLSession can_delegate_downloadTask_didReceiveResponse]
  -[NSURLSession delegate_downloadTask:didFinishDownloadingToURL:completionHandler:]
  -[NSURLSession can_delegate_downloadTask_didWriteData]
  -[NSURLSession can_delegate_downloadTask_didFinishDownloadingToURL]
  -[NSURLSession delegate_downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:completionHandler:]
  -[NSURLSession delegate_openFileAtPath:mode:]
  -[NSURLSession can_delegate_openFileAtPath]
  -[NSURLSession delegate_downloadTaskNeedsDownloadDirectory:]
  -[NSURLSession can_delegate_downloadTaskNeedsDownloadDirectory]
  -[NSURLSession downloadTaskWithResumeData:]
  -[NSURLSession dataTaskWithURL:completionHandler:]
  -[NSURLSession flushWithCompletionHandler:]
  -[NSURLSession delegate_didFinishEventsForBackgroundURLSession]
  -[NSURLSession can_delegate_didFinishEventsForBackgroundURLSession]
  -[NSURLSession delegate_AVAssetDownloadTask:didReceiveDownloadToken:]
  -[NSURLSession can_delegate_AVAssetDownloadTask_didReceiveDownloadToken]
  -[NSURLSession delegate_willRetryBackgroundDataTask:withError:]
  -[NSURLSession can_delegate_willRetryBackgroundDataTask]
  -[NSURLSession delegate_task:willBeginDelayedRequest:completionHandler:]
  -[NSURLSession can_delegate_task_willBeginDelayedRequest]
  -[NSURLSession _isProxySession]
  -[NSURLSession _update_local_configuration:]
  -[NSURLSession delegate_streamTask:didBecomeInputStream:outputStream:completionHandler:]
  -[NSURLSession can_delegate_streamTask_didBecomeInputStream_outputStream]
  -[NSURLSession delegate_writeClosedForStreamTask:completionHandler:]
  -[NSURLSession can_delegate_writeClosedForStreamTask]
  -[NSURLSession delegate_readClosedForStreamTask:completionHandler:]
  -[NSURLSession can_delegate_readClosedForStreamTask]
  -[NSURLSession streamTaskWithHostName:port:]
  -[NSURLSession delegate_task:isWaitingForConnectionWithError:]
  -[NSURLSession can_delegate_task_isWaitingForConnectionWithError]
  -[NSURLSession delegate_AVAssetDownloadTask:willDownloadToURL:]
  -[NSURLSession can_delegate_AVAssetDownloadTask_willDownloadToURL]
  -[NSURLSession delegate_AVAssetDownloadTask:didFinishDownloadingToURL:completionHandler:]
  -[NSURLSession can_delegate_AVAssetDownloadTask_didFinishDownloadingToURL]
  -[NSURLSession delegate_AVAssetDownloadTask:didResolveMediaSelection:]
  -[NSURLSession can_delegate_AVAssetDownloadTask_didResolveMediaSelection]
  -[NSURLSession delegate_AVAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:]
  -[NSURLSession can_delegate_AVAssetDownloadTask_didLoadTimeRange]
  -[NSURLSession delegate_AVAssetDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]
  -[NSURLSession can_delegate_AVAssetDownloadTask_didWriteData]
  -[NSURLSession delegate_AVAggregateAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:]
  -[NSURLSession can_delegate_AVAggregateAssetDownloadTask_didLoadTimeRange]
  -[NSURLSession delegate_AVAggregateAssetDownloadTask:willDownloadToURL:]
  -[NSURLSession can_delegate_AVAggregateAssetDownloadTask_willDownloadToURL]
  -[NSURLSession delegate_AVAggregateAssetDownloadTask:didCompleteForMediaSelection:]
  -[NSURLSession can_delegate_AVAggregateAssetDownloadTask_didCompleteForMediaSelection]
  -[NSURLSession getAllTasksWithCompletionHandler:]
  -[NSURLSession assetDownloadTaskWithURLAsset:assetTitle:assetArtworkData:options:]
  -[NSURLSession _copyATSState]
  -[NSURLSession remote_externalAuthenticator_task:getAuthHeadersForResponse:completionHandler:]
  -[NSURLSession can_delegate_task_actually_didCompleteWithError]
  -[NSURLSession can_delegate_betterRouteDiscoveredForStreamTask]
  -[NSURLSession delegate_betterRouteDiscoveredForStreamTask:completionHandler:]
  -[NSURLSession can_delegate_connectionEstablishedForStreamTask]
  -[NSURLSession delegate_connectionEstablishedForStreamTask:]
  -[NSURLSession getTasksWithCompletionHandler:]
  -[NSURLSession dataTaskWithURL:]
  -[NSURLSession webSocketTaskWithURL:]
  -[NSURLSession webSocketTaskWithURL:protocols:]
  -[NSURLSession uploadTaskWithRequest:fromFile:]
  -[NSURLSession uploadTaskWithRequest:fromData:]
  -[NSURLSession uploadTaskWithRequest:fromFile:completionHandler:]
  -[NSURLSession uploadTaskWithRequest:fromData:completionHandler:]
  -[NSURLSession _downloadTaskWithRequest:downloadFilePath:]
  -[NSURLSession downloadTaskWithURL:]
  -[NSURLSession downloadTaskWithRequest:completionHandler:]
  -[NSURLSession downloadTaskWithURL:completionHandler:]
  -[NSURLSession downloadTaskWithResumeData:completionHandler:]
  -[NSURLSession _AVAssetDownloadTaskWithURL:destinationURL:options:]
  -[NSURLSession assetDownloadTaskWithURLAsset:destinationURL:options:]
  -[NSURLSession aggregateAssetDownloadTaskWithURLAsset:mediaSelections:assetTitle:assetArtworkData:options:]
  -[NSURLSession streamTaskWithNetService:]
  -[NSURLSession dataTaskWithHTTPGetRequest:completionHandler:]
  -[NSURLSession dataTaskWithHTTPGetRequest:]
  -[NSURLSession sessionDescription]
  -[NSURLSession setSessionDescription:]
  -[NSURLSession set_isSharedSession:]


AVAssetDownloadURLSession : NSURLSession
  // class methods
  +[AVAssetDownloadURLSession sessionWithConfiguration:assetDownloadDelegate:delegateQueue:]

  // instance methods
  -[AVAssetDownloadURLSession assetDownloadTaskWithURLAsset:assetTitle:assetArtworkData:options:]
  -[AVAssetDownloadURLSession assetDownloadTaskWithURLAsset:destinationURL:options:]
  -[AVAssetDownloadURLSession aggregateAssetDownloadTaskWithURLAsset:mediaSelections:assetTitle:assetArtworkData:options:]


__NSCFURLSessionTaskGroup : NSObject /usr/lib/libxml2.2.dylib <__NSURLSessionTaskGroupForConfiguration>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURLSessionConfiguration *_groupConfiguration
 @property  NSURLSession *_groupSession

  // instance methods
  -[__NSCFURLSessionTaskGroup dealloc]
  -[__NSCFURLSessionTaskGroup forwardingTargetForSelector:]
  -[__NSCFURLSessionTaskGroup dataTaskWithRequest:]
  -[__NSCFURLSessionTaskGroup dataTaskWithRequest:completionHandler:]
  -[__NSCFURLSessionTaskGroup uploadTaskWithStreamedRequest:]
  -[__NSCFURLSessionTaskGroup _groupConfiguration]
  -[__NSCFURLSessionTaskGroup _groupSession]
  -[__NSCFURLSessionTaskGroup _initWithTarget:configuration:]


__NSCFURLSession : NSURLSession <__NSURLSessionTaskGroupForConfiguration>
 @property  NSDictionary *delegateOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURLSessionConfiguration *_groupConfiguration
 @property  NSURLSession *_groupSession

  // instance methods
  -[__NSCFURLSession dealloc]
  -[__NSCFURLSession .cxx_destruct]
  -[__NSCFURLSession _metrics]
  -[__NSCFURLSession .cxx_construct]
  -[__NSCFURLSession _uuid]
  -[__NSCFURLSession workQueue]
  -[__NSCFURLSession _groupConfiguration]
  -[__NSCFURLSession _groupSession]
  -[__NSCFURLSession _useTLSSessionCacheFromSession:]
  -[__NSCFURLSession initWithConfiguration:delegate:delegateQueue:]
  -[__NSCFURLSession defaultTaskGroup]
  -[__NSCFURLSession _nwContext]
  -[__NSCFURLSession set_coalescing:]
  -[__NSCFURLSession _altSvc]
  -[__NSCFURLSession set_metrics:]
  -[__NSCFURLSession _tlsSessionCachePrefix]
  -[__NSCFURLSession set_tlsSessionCachePrefix:]
  -[__NSCFURLSession delegateOptions]
  -[__NSCFURLSession _coalescing]
  -[__NSCFURLSession _h2BlacklistedHosts]
  -[__NSCFURLSession invalid]
  -[__NSCFURLSession taskGroupWithConfiguration:]
  -[__NSCFURLSession set_altSvc:]
  -[__NSCFURLSession set_h2BlacklistedHosts:]


__PartitionedCacheLookupKey : NSObject /usr/lib/libxml2.2.dylib <NSCopying>
 @property  NSString *mainDocOrigin
 @property  NSString *domain

  // instance methods
  -[__PartitionedCacheLookupKey init]
  -[__PartitionedCacheLookupKey dealloc]
  -[__PartitionedCacheLookupKey isEqual:]
  -[__PartitionedCacheLookupKey copyWithZone:]
  -[__PartitionedCacheLookupKey domain]
  -[__PartitionedCacheLookupKey setDomain:]
  -[__PartitionedCacheLookupKey initWithPartition:domain:]
  -[__PartitionedCacheLookupKey mainDocOrigin]
  -[__PartitionedCacheLookupKey setMainDocOrigin:]


__CFNSTestSessionInvalidationDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionDelegate, NSURLSessionTaskDelegate>
 @property  NSOperationQueue *q
 @property  @? taskCompleted
 @property  @? sessionCompleted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__CFNSTestSessionInvalidationDelegate init]
  -[__CFNSTestSessionInvalidationDelegate dealloc]
  -[__CFNSTestSessionInvalidationDelegate URLSession:didBecomeInvalidWithError:]
  -[__CFNSTestSessionInvalidationDelegate URLSession:task:didCompleteWithError:]
  -[__CFNSTestSessionInvalidationDelegate q]
  -[__CFNSTestSessionInvalidationDelegate setQ:]
  -[__CFNSTestSessionInvalidationDelegate taskCompleted]
  -[__CFNSTestSessionInvalidationDelegate setTaskCompleted:]
  -[__CFNSTestSessionInvalidationDelegate sessionCompleted]
  -[__CFNSTestSessionInvalidationDelegate setSessionCompleted:]


NSCachedURLResponseInternal : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[NSCachedURLResponseInternal dealloc]


NSCachedURLResponse : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding, NSCopying>
 @property  NSURLResponse *response
 @property  NSData *data
 @property  NSDictionary *userInfo
 @property  unsigned long storagePolicy

  // class methods
  +[NSCachedURLResponse supportsSecureCoding]

  // instance methods
  -[NSCachedURLResponse dealloc]
  -[NSCachedURLResponse copyWithZone:]
  -[NSCachedURLResponse userInfo]
  -[NSCachedURLResponse encodeWithCoder:]
  -[NSCachedURLResponse initWithCoder:]
  -[NSCachedURLResponse data]
  -[NSCachedURLResponse response]
  -[NSCachedURLResponse _CFCachedURLResponse]
  -[NSCachedURLResponse _initWithCFCachedURLResponse:]
  -[NSCachedURLResponse initWithResponse:data:userInfo:storagePolicy:]
  -[NSCachedURLResponse storagePolicy]
  -[NSCachedURLResponse initWithResponse:data:]
  -[NSCachedURLResponse initWithResponse:dataArray:userInfo:storagePolicy:]
  -[NSCachedURLResponse dataArray]
  -[NSCachedURLResponse _deallocInternalCFCachedURLResponse]
  -[NSCachedURLResponse _reestablishInternalCFCachedURLResponse:]


NSURLCacheInternal : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[NSURLCacheInternal dealloc]


NSURLCache : NSObject /usr/lib/libxml2.2.dylib
 @property  unsigned long memoryCapacity
 @property  unsigned long diskCapacity
 @property  unsigned long currentMemoryUsage
 @property  unsigned long currentDiskUsage

  // class methods
  +[NSURLCache sharedURLCache]
  +[NSURLCache setSharedURLCache:]

  // instance methods
  -[NSURLCache init]
  -[NSURLCache dealloc]
  -[NSURLCache _isVaryHeaderSupportEnabled]
  -[NSURLCache currentDiskUsage]
  -[NSURLCache _varyStateForURL:]
  -[NSURLCache _updateVaryState:forURL:]
  -[NSURLCache _nscfBridgeURLCacheCopyResponseForRequest:]
  -[NSURLCache _nscfBridgeURLCacheStoreCachedResponse:forRequest:]
  -[NSURLCache _nscfBridgeURLCacheDiskCapacity]
  -[NSURLCache _nscfBridgeURLCacheSetMemoryCapacity:]
  -[NSURLCache _nscfBridgeURLCacheSetDiskCapacity:]
  -[NSURLCache _nscfBridgeURLCacheRemoveCachedResponseForRequest:]
  -[NSURLCache _nscfBridgeURLCacheRemoveAllCachedResponses]
  -[NSURLCache _nscfBridgeURLCacheMemoryCapacity]
  -[NSURLCache _nscfBridgeURLCacheCurrentMemoryUsage]
  -[NSURLCache _nscfBridgeURLCacheCurrentDiskUsage]
  -[NSURLCache _initWithIdentifier:memoryCapacity:diskCapacity:private:]
  -[NSURLCache _initVaryHeaderEnabledWithPath:]
  -[NSURLCache initWithExistingSharedCFURLCache:]
  -[NSURLCache _initWithExistingCFURLCache:]
  -[NSURLCache initWithMemoryCapacity:diskCapacity:directoryURL:]
  -[NSURLCache initWithMemoryCapacity:diskCapacity:diskPath:]
  -[NSURLCache _initWithMemoryCapacity:diskCapacity:relativePath:]
  -[NSURLCache flushWithCompletion:]
  -[NSURLCache cachedResponseForRequest:]
  -[NSURLCache storeCachedResponse:forRequest:]
  -[NSURLCache removeCachedResponseForRequest:]
  -[NSURLCache removeAllCachedResponses]
  -[NSURLCache removeCachedResponsesSinceDate:]
  -[NSURLCache memoryCapacity]
  -[NSURLCache diskCapacity]
  -[NSURLCache setMemoryCapacity:]
  -[NSURLCache setDiskCapacity:]
  -[NSURLCache currentMemoryUsage]
  -[NSURLCache _CFURLCache]
  -[NSURLCache _cacheDirectory]
  -[NSURLCache _diskCacheDefaultPath]
  -[NSURLCache storeCachedResponse:forDataTask:]
  -[NSURLCache getCachedResponseForDataTask:completionHandler:]
  -[NSURLCache removeCachedResponseForDataTask:]


VaryHeaderSupportTaskDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionTaskDelegate>
 @property  NSURLSessionTaskMetrics *metrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VaryHeaderSupportTaskDelegate dealloc]
  -[VaryHeaderSupportTaskDelegate metrics]
  -[VaryHeaderSupportTaskDelegate URLSession:task:didFinishCollectingMetrics:]
  -[VaryHeaderSupportTaskDelegate setMetrics:]


TLSTestHarnessResult : NSObject /usr/lib/libxml2.2.dylib
 @property  NSURLSessionTask *task
 @property  NSHTTPURLResponse *response
 @property  NSMutableData *data
 @property  NSError *error
 @property  NSObject<OS_dispatch_semaphore> *sema

  // instance methods
  -[TLSTestHarnessResult dealloc]
  -[TLSTestHarnessResult data]
  -[TLSTestHarnessResult error]
  -[TLSTestHarnessResult setData:]
  -[TLSTestHarnessResult setError:]
  -[TLSTestHarnessResult response]
  -[TLSTestHarnessResult setResponse:]
  -[TLSTestHarnessResult task]
  -[TLSTestHarnessResult setTask:]
  -[TLSTestHarnessResult initWithTask:]
  -[TLSTestHarnessResult sema]
  -[TLSTestHarnessResult setSema:]
  -[TLSTestHarnessResult appendResponseData:]


TLSTestHarness : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate>
 @property  NSURLSessionConfiguration *sessionConfig
 @property  NSMutableDictionary *socketStreamProperties
 @property  NSURLSession *session
 @property  NSMutableDictionary *tasks
 @property  {shared_ptr<TLSServer>=^{TLSServer}^{__shared_weak_count}} server
 @property  BOOL enableTLSTrustChecks
 @property  BOOL enableTLSClientCert
 @property  BOOL enableTLSPSK
 @property  {shared_ptr<__SecTrust>=^{__SecTrust}^{__shared_weak_count}} receivedServerTrust
 @property  BOOL clientCertificateRequested
 @property  NSURLCredential *clientCertificateSent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TLSTestHarness dealloc]
  -[TLSTestHarness .cxx_destruct]
  -[TLSTestHarness .cxx_construct]
  -[TLSTestHarness setServer:]
  -[TLSTestHarness server]
  -[TLSTestHarness session]
  -[TLSTestHarness setSession:]
  -[TLSTestHarness URLSession:didReceiveChallenge:completionHandler:]
  -[TLSTestHarness URLSession:task:didCompleteWithError:]
  -[TLSTestHarness URLSession:dataTask:didReceiveData:]
  -[TLSTestHarness URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[TLSTestHarness initWithServer:]
  -[TLSTestHarness enableTLSPSK]
  -[TLSTestHarness setEnableTLSPSK:]
  -[TLSTestHarness fetchRequest:]
  -[TLSTestHarness _createSession]
  -[TLSTestHarness sessionConfig]
  -[TLSTestHarness setSessionConfig:]
  -[TLSTestHarness socketStreamProperties]
  -[TLSTestHarness setSocketStreamProperties:]
  -[TLSTestHarness tasks]
  -[TLSTestHarness setTasks:]
  -[TLSTestHarness enableTLSTrustChecks]
  -[TLSTestHarness setEnableTLSTrustChecks:]
  -[TLSTestHarness enableTLSClientCert]
  -[TLSTestHarness setEnableTLSClientCert:]
  -[TLSTestHarness receivedServerTrust]
  -[TLSTestHarness setReceivedServerTrust:]
  -[TLSTestHarness clientCertificateRequested]
  -[TLSTestHarness setClientCertificateRequested:]
  -[TLSTestHarness clientCertificateSent]
  -[TLSTestHarness setClientCertificateSent:]


NSURLRequestInternal : NSObject /usr/lib/libxml2.2.dylib
 @property  ^{URLRequest=^^?^{__CFURL}Qd^{__CFURL}^{__CFDictionary}^{__CFDictionary}^{HTTPRequest}{Flags=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}^{__CFDictionary}^{__CFArray}qQi^{__CFString}QdddCCCCd^{__CFDictionary}{unique_ptr<_CFHSTSPolicy _inner

  // instance methods
  -[NSURLRequestInternal init]
  -[NSURLRequestInternal dealloc]
  -[NSURLRequestInternal isEqual:]
  -[NSURLRequestInternal copyWithZone:]
  -[NSURLRequestInternal .cxx_destruct]
  -[NSURLRequestInternal .cxx_construct]
  -[NSURLRequestInternal _inner]
  -[NSURLRequestInternal _initWithMessage:bodyParts:cachePolicy:timeout:mainDocumentURL:mutable:]


NSURLRequest : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  NSString *HTTPMethod
 @property  NSDictionary *allHTTPHeaderFields
 @property  NSData *HTTPBody
 @property  NSInputStream *HTTPBodyStream
 @property  BOOL HTTPShouldHandleCookies
 @property  BOOL HTTPShouldUsePipelining
 @property  ^{URLRequest=^^?^{__CFURL}Qd^{__CFURL}^{__CFDictionary}^{__CFDictionary}^{HTTPRequest}{Flags=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}^{__CFDictionary}^{__CFArray}qQi^{__CFString}QdddCCCCd^{__CFDictionary}{unique_ptr<_CFHSTSPolicy _inner
 @property  NSURL *URL
 @property  unsigned long cachePolicy
 @property  double timeoutInterval
 @property  NSURL *mainDocumentURL
 @property  unsigned long networkServiceType
 @property  BOOL allowsCellularAccess
 @property  BOOL allowsExpensiveNetworkAccess
 @property  BOOL allowsConstrainedNetworkAccess

  // class methods
  +[NSURLRequest supportsSecureCoding]
  +[NSURLRequest requestWithURL:cachePolicy:timeoutInterval:]
  +[NSURLRequest requestWithURL:]
  +[NSURLRequest getObjectKeyWithIndex:]
  +[NSURLRequest allowsAnyHTTPSCertificateForHost:]
  +[NSURLRequest allowsSpecificHTTPSCertificateForHost:]
  +[NSURLRequest setDefaultTimeoutInterval:]
  +[NSURLRequest defaultTimeoutInterval]
  +[NSURLRequest setAllowsAnyHTTPSCertificate:forHost:]
  +[NSURLRequest setAllowsSpecificHTTPSCertificate:forHost:]

  // instance methods
  -[NSURLRequest init]
  -[NSURLRequest dealloc]
  -[NSURLRequest isEqual:]
  -[NSURLRequest copyWithZone:]
  -[NSURLRequest mutableCopyWithZone:]
  -[NSURLRequest encodeWithCoder:]
  -[NSURLRequest initWithCoder:]
  -[NSURLRequest initWithURL:]
  -[NSURLRequest initWithURL:cachePolicy:timeoutInterval:]
  -[NSURLRequest URL]
  -[NSURLRequest _CFURLRequest]
  -[NSURLRequest _initWithCFURLRequest:]
  -[NSURLRequest _inner]
  -[NSURLRequest allHTTPHeaderFields]
  -[NSURLRequest valueForHTTPHeaderField:]
  -[NSURLRequest HTTPBody]
  -[NSURLRequest HTTPBodyStream]
  -[NSURLRequest _initWithInternal:]
  -[NSURLRequest _allHTTPHeaderFieldsAsArrays]
  -[NSURLRequest _payloadTransmissionTimeout]
  -[NSURLRequest _startTimeoutDate]
  -[NSURLRequest mainDocumentURL]
  -[NSURLRequest HTTPMethod]
  -[NSURLRequest _copyReplacingURLWithURL:]
  -[NSURLRequest cfURL]
  -[NSURLRequest _URLHasScheme:]
  -[NSURLRequest _isSafeRequestForBackgroundDownload]
  -[NSURLRequest _removePropertyForKey:]
  -[NSURLRequest _setProperty:forKey:]
  -[NSURLRequest _propertyForKey:]
  -[NSURLRequest HTTPShouldHandleCookies]
  -[NSURLRequest allowsCellularAccess]
  -[NSURLRequest networkServiceType]
  -[NSURLRequest _schemeWasUpgradedDueToDynamicHSTS]
  -[NSURLRequest cachePolicy]
  -[NSURLRequest timeoutInterval]
  -[NSURLRequest allowsConstrainedNetworkAccess]
  -[NSURLRequest allowsExpensiveNetworkAccess]
  -[NSURLRequest boundInterfaceIdentifier]
  -[NSURLRequest _ignoreHSTS]
  -[NSURLRequest _preventHSTSStorage]
  -[NSURLRequest _requiresShortConnectionTimeout]
  -[NSURLRequest _bodyParts]
  -[NSURLRequest HTTPContentType]
  -[NSURLRequest HTTPExtraCookies]
  -[NSURLRequest HTTPReferrer]
  -[NSURLRequest HTTPUserAgent]
  -[NSURLRequest HTTPShouldUsePipelining]
  -[NSURLRequest contentDispositionEncodingFallbackArray]
  -[NSURLRequest expectedWorkload]
  -[NSURLRequest _timeWindowDelay]
  -[NSURLRequest _timeWindowDuration]
  -[NSURLRequest _isIdempotent]


NSMutableURLRequest : NSURLRequest
 @property  NSString *HTTPMethod
 @property  NSDictionary *allHTTPHeaderFields
 @property  NSData *HTTPBody
 @property  NSInputStream *HTTPBodyStream
 @property  BOOL HTTPShouldHandleCookies
 @property  BOOL HTTPShouldUsePipelining
 @property  NSURL *URL
 @property  unsigned long cachePolicy
 @property  double timeoutInterval
 @property  NSURL *mainDocumentURL
 @property  unsigned long networkServiceType
 @property  BOOL allowsCellularAccess
 @property  BOOL allowsExpensiveNetworkAccess
 @property  BOOL allowsConstrainedNetworkAccess

  // instance methods
  -[NSMutableURLRequest copyWithZone:]
  -[NSMutableURLRequest setURL:]
  -[NSMutableURLRequest setAllowsCellularAccess:]
  -[NSMutableURLRequest setHTTPMethod:]
  -[NSMutableURLRequest setValue:forHTTPHeaderField:]
  -[NSMutableURLRequest setHTTPBody:]
  -[NSMutableURLRequest setTimeoutInterval:]
  -[NSMutableURLRequest setAllHTTPHeaderFields:]
  -[NSMutableURLRequest addValue:forHTTPHeaderField:]
  -[NSMutableURLRequest setHTTPShouldHandleCookies:]
  -[NSMutableURLRequest setCachePolicy:]
  -[NSMutableURLRequest setHTTPBodyStream:]
  -[NSMutableURLRequest setMainDocumentURL:]
  -[NSMutableURLRequest setNetworkServiceType:]
  -[NSMutableURLRequest _setIgnoreHSTS:]
  -[NSMutableURLRequest setAllowsConstrainedNetworkAccess:]
  -[NSMutableURLRequest setAllowsExpensiveNetworkAccess:]
  -[NSMutableURLRequest setBoundInterfaceIdentifier:]
  -[NSMutableURLRequest setHTTPContentType:]
  -[NSMutableURLRequest setHTTPExtraCookies:]
  -[NSMutableURLRequest setHTTPReferrer:]
  -[NSMutableURLRequest setHTTPUserAgent:]
  -[NSMutableURLRequest setRequestPriority:]
  -[NSMutableURLRequest requestPriority]
  -[NSMutableURLRequest setHTTPShouldUsePipelining:]
  -[NSMutableURLRequest setExpectedWorkload:]
  -[NSMutableURLRequest _setTimeWindowDelay:]
  -[NSMutableURLRequest _setTimeWindowDuration:]
  -[NSMutableURLRequest _setStartTimeoutDate:]
  -[NSMutableURLRequest _setRequiresShortConnectionTimeout:]
  -[NSMutableURLRequest _setPreventHSTSStorage:]
  -[NSMutableURLRequest _setPayloadTransmissionTimeout:]
  -[NSMutableURLRequest setContentDispositionEncodingFallbackArray:]


ConnectionContextManager : NSObject /usr/lib/libxml2.2.dylib
  // class methods
  +[ConnectionContextManager sharedManager]

  // instance methods
  -[ConnectionContextManager init]
  -[ConnectionContextManager dealloc]
  -[ConnectionContextManager registerSession:]
  -[ConnectionContextManager unregisterSession:]
  -[ConnectionContextManager keyForSession:]


UnitTestBackgroundSessionTester : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionDelegate, NSURLSessionDataDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[UnitTestBackgroundSessionTester dealloc]
  -[UnitTestBackgroundSessionTester URLSession:didReceiveChallenge:completionHandler:]
  -[UnitTestBackgroundSessionTester URLSession:task:didCompleteWithError:]
  -[UnitTestBackgroundSessionTester URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[UnitTestBackgroundSessionTester initWithConfiguration:result:]
  -[UnitTestBackgroundSessionTester startTaskWithURL:]


CFNetworkTimer : NSObject /usr/lib/libxml2.2.dylib
 @property  int state

  // instance methods
  -[CFNetworkTimer dealloc]
  -[CFNetworkTimer state]
  -[CFNetworkTimer setTimer:]
  -[CFNetworkTimer setState:]
  -[CFNetworkTimer cancelTimer]
  -[CFNetworkTimer initWithQueue:completionHandler:]
  -[CFNetworkTimer initWithCompletionHandler:]
  -[CFNetworkTimer pauseTimer]
  -[CFNetworkTimer resumeTimer]
  -[CFNetworkTimer suspendCallbacksForTimer]
  -[CFNetworkTimer resumeCallbacksForTimer]
  -[CFNetworkTimer setCancelCallbacks:]


__NSURLSessionWebSocketTask : __NSCFLocalSessionTask
 @property  NSMutableArray *pendingSendWork
 @property  NSMutableArray *pendingReceiveWork
 @property  NSMutableArray *highPriorityPendingWork
 @property  NSMutableArray *delegateWork
 @property  int pingSeed
 @property  BOOL webSocketHandshakeCompleted
 @property  BOOL readInProgress
 @property  NSError *webSocketError
 @property  NSString *protocolPicked
 @property  long long maximumMessageSize
 @property  long long closeCode
 @property  NSData *closeReason

  // instance methods
  -[__NSURLSessionWebSocketTask dealloc]
  -[__NSURLSessionWebSocketTask isKindOfClass:]
  -[__NSURLSessionWebSocketTask .cxx_destruct]
  -[__NSURLSessionWebSocketTask cancel]
  -[__NSURLSessionWebSocketTask _onqueue_checkForCompletion]
  -[__NSURLSessionWebSocketTask initWithOriginalRequest:ident:taskGroup:]
  -[__NSURLSessionWebSocketTask _onqueue_cancel]
  -[__NSURLSessionWebSocketTask _onqueue_didReceiveResponse:completion:]
  -[__NSURLSessionWebSocketTask connection:didFinishLoadingWithError:]
  -[__NSURLSessionWebSocketTask _onqueue_resume]
  -[__NSURLSessionWebSocketTask _onqueue_ioTick]
  -[__NSURLSessionWebSocketTask sendMessage:completionHandler:]
  -[__NSURLSessionWebSocketTask receiveMessageWithCompletionHandler:]
  -[__NSURLSessionWebSocketTask sendPingWithPongReceiveHandler:]
  -[__NSURLSessionWebSocketTask cancelWithCloseCode:reason:]
  -[__NSURLSessionWebSocketTask _onqueue_enableWebSocketFraming:]
  -[__NSURLSessionWebSocketTask _onqueue_pingWithPongHandler:]
  -[__NSURLSessionWebSocketTask _onqueue_sendMessage:completionHandler:]
  -[__NSURLSessionWebSocketTask _onqueue_receiveMessageWithCompletionHandler:]
  -[__NSURLSessionWebSocketTask _onqueue_cancelWithCloseCode:reason:]
  -[__NSURLSessionWebSocketTask _onqueue_cancelWebSocketTaskWithError:]
  -[__NSURLSessionWebSocketTask _onqueue_handshakeFailureWithReason:]
  -[__NSURLSessionWebSocketTask _onqueue_validateWebSocketHandshake]
  -[__NSURLSessionWebSocketTask maximumMessageSize]
  -[__NSURLSessionWebSocketTask setMaximumMessageSize:]
  -[__NSURLSessionWebSocketTask closeCode]
  -[__NSURLSessionWebSocketTask closeReason]
  -[__NSURLSessionWebSocketTask pendingSendWork]
  -[__NSURLSessionWebSocketTask setPendingSendWork:]
  -[__NSURLSessionWebSocketTask pendingReceiveWork]
  -[__NSURLSessionWebSocketTask setPendingReceiveWork:]
  -[__NSURLSessionWebSocketTask highPriorityPendingWork]
  -[__NSURLSessionWebSocketTask setHighPriorityPendingWork:]
  -[__NSURLSessionWebSocketTask delegateWork]
  -[__NSURLSessionWebSocketTask setDelegateWork:]
  -[__NSURLSessionWebSocketTask pingSeed]
  -[__NSURLSessionWebSocketTask setPingSeed:]
  -[__NSURLSessionWebSocketTask webSocketHandshakeCompleted]
  -[__NSURLSessionWebSocketTask setWebSocketHandshakeCompleted:]
  -[__NSURLSessionWebSocketTask readInProgress]
  -[__NSURLSessionWebSocketTask setReadInProgress:]
  -[__NSURLSessionWebSocketTask webSocketError]
  -[__NSURLSessionWebSocketTask setWebSocketError:]
  -[__NSURLSessionWebSocketTask protocolPicked]
  -[__NSURLSessionWebSocketTask setProtocolPicked:]


__WebSocketTestDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__WebSocketTestDelegate URLSession:didReceiveChallenge:completionHandler:]


NSURLCredentialStorage : NSObject /usr/lib/libxml2.2.dylib
 @property  BOOL _useSystemKeychain
 @property  NSDictionary *allCredentials

  // class methods
  +[NSURLCredentialStorage sharedCredentialStorage]

  // instance methods
  -[NSURLCredentialStorage init]
  -[NSURLCredentialStorage dealloc]
  -[NSURLCredentialStorage setDefaultCredential:forProtectionSpace:task:]
  -[NSURLCredentialStorage getCredentialsForProtectionSpace:task:completionHandler:]
  -[NSURLCredentialStorage allCredentials]
  -[NSURLCredentialStorage removeCredential:forProtectionSpace:]
  -[NSURLCredentialStorage setCredential:forProtectionSpace:task:]
  -[NSURLCredentialStorage getDefaultCredentialForProtectionSpace:task:completionHandler:]
  -[NSURLCredentialStorage setDefaultCredential:forProtectionSpace:]
  -[NSURLCredentialStorage defaultCredentialForProtectionSpace:]
  -[NSURLCredentialStorage setCredential:forProtectionSpace:]
  -[NSURLCredentialStorage credentialsForProtectionSpace:]
  -[NSURLCredentialStorage _initWithCFURLCredentialStorage:]
  -[NSURLCredentialStorage _initWithIdentifier:private:]
  -[NSURLCredentialStorage _CFURLCredentialStorage]
  -[NSURLCredentialStorage _useSystemKeychain]
  -[NSURLCredentialStorage set_useSystemKeychain:]
  -[NSURLCredentialStorage __allCredentialsWithAccessControlGroup:includeLegacyKeychain:]
  -[NSURLCredentialStorage _allCredentialsWithAccessControlGroup:includeLegacyKeychain:]
  -[NSURLCredentialStorage removeCredential:forProtectionSpace:options:]
  -[NSURLCredentialStorage removeCredential:forProtectionSpace:options:task:]


__NSURLSessionEffectiveConfiguration_Base : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding, NSCopying>
 @property  NSHTTPCookieStorage *HTTPCookieStorage
 @property  NSURLCache *URLCache
 @property  NSDictionary *HTTPAdditionalHeaders
 @property  NSURLCredentialStorage *URLCredentialStorage
 @property  NSArray *protocolClasses
 @property  double timeoutIntervalForResource
 @property  BOOL allowsCellularAccess
 @property  BOOL discretionary
 @property  BOOL shouldUseExtendedBackgroundIdleMode
 @property  BOOL waitsForConnectivity
 @property  BOOL allowsExpensiveNetworkAccess
 @property  BOOL allowsConstrainedNetworkAccess
 @property  unsigned long _forcedNetworkServiceType
 @property  NSSet *_authenticatorStatusCodes
 @property  NSString *_companionAppBundleIdentifier
 @property  NSString *_tcpConnectionPoolName
 @property  BOOL _forcesNewConnections
 @property  BOOL _preventsIdleSleepOnceConnected
 @property  BOOL _requiresPowerPluggedIn
 @property  BOOL _shouldSkipPreferredClientCertificateLookup
 @property  NSString *_sourceApplicationBundleIdentifier
 @property  NSString *_sourceApplicationSecondaryIdentifier
 @property  unsigned long _TCPAdaptiveReadTimeout
 @property  unsigned long _TCPAdaptiveWriteTimeout
 @property  BOOL _allowsExpensiveAccess
 @property  BOOL _allowsPowerNapScheduling
 @property  <NSURLSessionAppleIDContext> *_appleIDContext
 @property  NSData *_sourceApplicationAuditTokenData
 @property  long long _timingDataOptions
 @property  BOOL _allowsIndefiniteConnections
 @property  BOOL _allowsMultipathTCP
 @property  BOOL _allowsResponseMonitoringDuringBodyTranmission
 @property  BOOL _allowsTCPFastOpen
 @property  BOOL _allowsTLSSessionTickets
 @property  BOOL _onBehalfOfPairedDevice
 @property  unsigned long _customReadBufferSize
 @property  double _customReadBufferTimeout
 @property  BOOL _preventsSystemHTTPProxyAuthentication
 @property  BOOL _allowsTLSSessionResumption
 @property  BOOL _requiresSustainedDataDelivery
 @property  BOOL _duetPreauthorized
 @property  BOOL _clientIsNotExplicitlyDiscretionary
 @property  NSString *_tlsTrustPinningPolicyName
 @property  NSSet *_suppressedAutoAddedHTTPHeaders
 @property  BOOL _requiresSecureHTTPSProxyConnection
 @property  long long _expiredDNSBehavior
 @property  BOOL _alwaysPerformDefaultTrustEvaluation
 @property  BOOL _preventsAppSSO
 @property  BOOL _allowsConstrainedNetworkAccess
 @property  unsigned long _multipathAlternatePort
 @property  BOOL _reportsDataStalls
 @property  BOOL _allowsTLSFalseStart
 @property  BOOL _allowsWCA
 @property  NSNumber *_maximumWatchCellularTransferSize
 @property  NSString *_CTDataConnectionServiceType
 @property  long long multipathServiceType
 @property  BOOL _respectsAllowsCellularAccessForDiscretionaryTasks
 @property  NSString *_connectionPoolName
 @property  NSURL *_directoryForDownloadedFiles

  // class methods
  +[__NSURLSessionEffectiveConfiguration_Base supportsSecureCoding]

  // instance methods
  -[__NSURLSessionEffectiveConfiguration_Base dealloc]
  -[__NSURLSessionEffectiveConfiguration_Base isEqual:]
  -[__NSURLSessionEffectiveConfiguration_Base copyWithZone:]
  -[__NSURLSessionEffectiveConfiguration_Base mutableCopy]
  -[__NSURLSessionEffectiveConfiguration_Base encodeWithCoder:]
  -[__NSURLSessionEffectiveConfiguration_Base initWithCoder:]
  -[__NSURLSessionEffectiveConfiguration_Base _copyAttribute:]
  -[__NSURLSessionEffectiveConfiguration_Base _sessionConfiguration]
  -[__NSURLSessionEffectiveConfiguration_Base _initWithMeOther:]
  -[__NSURLSessionEffectiveConfiguration_Base _initWithConfiguration:]


NSURLSessionEffectiveConfiguration : __NSURLSessionEffectiveConfiguration_Base
 @property  double _connectionCacheCellPurgeTimeout
 @property  NSDictionary *_socketStreamProperties
 @property  NSHTTPCookieStorage *HTTPCookieStorage
 @property  NSURLCache *URLCache
 @property  NSDictionary *HTTPAdditionalHeaders
 @property  NSURLCredentialStorage *URLCredentialStorage
 @property  NSArray *protocolClasses
 @property  double timeoutIntervalForResource
 @property  BOOL allowsCellularAccess
 @property  BOOL discretionary
 @property  BOOL shouldUseExtendedBackgroundIdleMode
 @property  BOOL waitsForConnectivity
 @property  BOOL allowsExpensiveNetworkAccess
 @property  BOOL allowsConstrainedNetworkAccess
 @property  unsigned long _forcedNetworkServiceType
 @property  NSSet *_authenticatorStatusCodes
 @property  NSString *_companionAppBundleIdentifier
 @property  NSString *_tcpConnectionPoolName
 @property  BOOL _forcesNewConnections
 @property  BOOL _preventsIdleSleepOnceConnected
 @property  BOOL _requiresPowerPluggedIn
 @property  BOOL _shouldSkipPreferredClientCertificateLookup
 @property  NSString *_sourceApplicationBundleIdentifier
 @property  NSString *_sourceApplicationSecondaryIdentifier
 @property  unsigned long _TCPAdaptiveReadTimeout
 @property  unsigned long _TCPAdaptiveWriteTimeout
 @property  BOOL _allowsExpensiveAccess
 @property  BOOL _allowsPowerNapScheduling
 @property  <NSURLSessionAppleIDContext> *_appleIDContext
 @property  NSData *_sourceApplicationAuditTokenData
 @property  long long _timingDataOptions
 @property  BOOL _allowsIndefiniteConnections
 @property  BOOL _allowsMultipathTCP
 @property  BOOL _allowsResponseMonitoringDuringBodyTranmission
 @property  BOOL _allowsTCPFastOpen
 @property  BOOL _allowsTLSSessionTickets
 @property  BOOL _onBehalfOfPairedDevice
 @property  unsigned long _customReadBufferSize
 @property  double _customReadBufferTimeout
 @property  BOOL _preventsSystemHTTPProxyAuthentication
 @property  BOOL _allowsTLSSessionResumption
 @property  BOOL _requiresSustainedDataDelivery
 @property  BOOL _duetPreauthorized
 @property  BOOL _clientIsNotExplicitlyDiscretionary
 @property  NSString *_tlsTrustPinningPolicyName
 @property  NSSet *_suppressedAutoAddedHTTPHeaders
 @property  BOOL _requiresSecureHTTPSProxyConnection
 @property  long long _expiredDNSBehavior
 @property  BOOL _alwaysPerformDefaultTrustEvaluation
 @property  BOOL _preventsAppSSO
 @property  BOOL _allowsConstrainedNetworkAccess
 @property  unsigned long _multipathAlternatePort
 @property  BOOL _reportsDataStalls
 @property  BOOL _allowsWCA
 @property  NSNumber *_maximumWatchCellularTransferSize
 @property  NSString *_CTDataConnectionServiceType
 @property  long long multipathServiceType
 @property  BOOL _respectsAllowsCellularAccessForDiscretionaryTasks
 @property  NSString *_connectionPoolName
 @property  NSURL *_directoryForDownloadedFiles

  // class methods
  +[NSURLSessionEffectiveConfiguration immutableEffectiveConfigurationFromConfig:]
  +[NSURLSessionEffectiveConfiguration immutableEffectiveConfigurationFromSessionConfig:]

  // instance methods
  -[NSURLSessionEffectiveConfiguration copyWithZone:]
  -[NSURLSessionEffectiveConfiguration forwardingTargetForSelector:]
  -[NSURLSessionEffectiveConfiguration _socketStreamProperties]
  -[NSURLSessionEffectiveConfiguration set_socketStreamProperties:]
  -[NSURLSessionEffectiveConfiguration _connectionCacheCellPurgeTimeout]
  -[NSURLSessionEffectiveConfiguration set_connectionCacheCellPurgeTimeout:]


NSURLSessionMutableEffectiveConfiguration : NSURLSessionEffectiveConfiguration

_NSURLBDOnce : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[_NSURLBDOnce dealloc]
  -[_NSURLBDOnce initWithBlock:]
  -[_NSURLBDOnce doit]


NSAsyncSSDownloadManager : NSObject /usr/lib/libxml2.2.dylib <SSDownloadManagerObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NSAsyncSSDownloadManager dealloc]
  -[NSAsyncSSDownloadManager addOperationWithBlock:]
  -[NSAsyncSSDownloadManager downloadManager:downloadStatesDidChange:]
  -[NSAsyncSSDownloadManager downloadManagerDownloadsDidChange:]
  -[NSAsyncSSDownloadManager downloadHandlerDisconnected:]
  -[NSAsyncSSDownloadManager cancelDownload:completionBlock:]
  -[NSAsyncSSDownloadManager withDownloadMatchingIdentifier:perform:]
  -[NSAsyncSSDownloadManager setDelegate:forDownload:]
  -[NSAsyncSSDownloadManager addDownload:completionBlock:]
  -[NSAsyncSSDownloadManager finishDownload:]
  -[NSAsyncSSDownloadManager initWithDownloadManager:]
  -[NSAsyncSSDownloadManager withDownload:perform:]
  -[NSAsyncSSDownloadManager withDownload:performAsync:]
  -[NSAsyncSSDownloadManager addDownloads:completionBlock:]
  -[NSAsyncSSDownloadManager _attemptReconnect]


NSURLConnectionInternalBackgroundDownload : NSURLConnectionInternal <NSURLConnectionRequired, SSDownloadManagerObserver, SSDownloadHandlerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSURLConnectionInternalBackgroundDownload sharedDownloadManagerForMediaKind:persistenceIdentifier:]
  +[NSURLConnectionInternalBackgroundDownload _enableLogging]

  // instance methods
  -[NSURLConnectionInternalBackgroundDownload dealloc]
  -[NSURLConnectionInternalBackgroundDownload _invalidate]
  -[NSURLConnectionInternalBackgroundDownload scheduleInRunLoop:forMode:]
  -[NSURLConnectionInternalBackgroundDownload cancel]
  -[NSURLConnectionInternalBackgroundDownload start]
  -[NSURLConnectionInternalBackgroundDownload setDelegateQueue:]
  -[NSURLConnectionInternalBackgroundDownload performDefaultHandlingForAuthenticationChallenge:]
  -[NSURLConnectionInternalBackgroundDownload useCredential:forAuthenticationChallenge:]
  -[NSURLConnectionInternalBackgroundDownload rejectProtectionSpaceAndContinueWithChallenge:]
  -[NSURLConnectionInternalBackgroundDownload continueWithoutCredentialForAuthenticationChallenge:]
  -[NSURLConnectionInternalBackgroundDownload cancelAuthenticationChallenge:]
  -[NSURLConnectionInternalBackgroundDownload unscheduleFromRunLoop:forMode:]
  -[NSURLConnectionInternalBackgroundDownload initWithInfo:]
  -[NSURLConnectionInternalBackgroundDownload _getDownloadIdent]
  -[NSURLConnectionInternalBackgroundDownload downloadHandlerDidDisconnect:]
  -[NSURLConnectionInternalBackgroundDownload downloadHandler:cancelSession:]
  -[NSURLConnectionInternalBackgroundDownload downloadHandler:pauseSession:]
  -[NSURLConnectionInternalBackgroundDownload downloadHandler:handleAuthenticationSession:]
  -[NSURLConnectionInternalBackgroundDownload invokeForDelegate:]
  -[NSURLConnectionInternalBackgroundDownload _invokeInvocation:withConnection:]
  -[NSURLConnectionInternalBackgroundDownload _preTerminalInvocation:]
  -[NSURLConnectionInternalBackgroundDownload _postTerminalInvocation:]
  -[NSURLConnectionInternalBackgroundDownload _sendTerminalErrorToDelegate:]
  -[NSURLConnectionInternalBackgroundDownload _sendTerminalDidFinishToDelegate:]
  -[NSURLConnectionInternalBackgroundDownload _managerFailedToStartInTime]
  -[NSURLConnectionInternalBackgroundDownload setHandlerForDownload:completionBlock:]
  -[NSURLConnectionInternalBackgroundDownload _createNewDownload]
  -[NSURLConnectionInternalBackgroundDownload _sourcePerform]
  -[NSURLConnectionInternalBackgroundDownload _updateClientWithCurrentWrites:]
  -[NSURLConnectionInternalBackgroundDownload _updateDownloadState:]


NSHTTPCookieStorageInternal : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[NSHTTPCookieStorageInternal dealloc]
  -[NSHTTPCookieStorageInternal _initWithIdentifier:private:]
  -[NSHTTPCookieStorageInternal registerForPostingNotificationsWithContext:]
  -[NSHTTPCookieStorageInternal initInternalWithCFStorage:]
  -[NSHTTPCookieStorageInternal _syncCookies]
  -[NSHTTPCookieStorageInternal _syncCookiesWithCompletionBlock:]


NSHTTPCookieStorage : NSObject /usr/lib/libxml2.2.dylib
 @property  BOOL _overrideSessionCookieAcceptPolicy
 @property  NSArray *cookies
 @property  unsigned long cookieAcceptPolicy

  // class methods
  +[NSHTTPCookieStorage sharedHTTPCookieStorage]
  +[NSHTTPCookieStorage _groupContainerCookieStorages]
  +[NSHTTPCookieStorage _setSharedHTTPCookieStorage:]
  +[NSHTTPCookieStorage sharedCookieStorageForGroupContainerIdentifier:]
  +[NSHTTPCookieStorage _csff:]
  +[NSHTTPCookieStorage _csfi:]

  // instance methods
  -[NSHTTPCookieStorage init]
  -[NSHTTPCookieStorage dealloc]
  -[NSHTTPCookieStorage cookiesForURL:]
  -[NSHTTPCookieStorage _cookieStorage]
  -[NSHTTPCookieStorage _saveCookies]
  -[NSHTTPCookieStorage deleteCookie:]
  -[NSHTTPCookieStorage cookies]
  -[NSHTTPCookieStorage setCookies:forURL:mainDocumentURL:]
  -[NSHTTPCookieStorage _initWithCFHTTPCookieStorage:]
  -[NSHTTPCookieStorage _overrideSessionCookieAcceptPolicy]
  -[NSHTTPCookieStorage getCookiesForTask:completionHandler:]
  -[NSHTTPCookieStorage storeCookies:forTask:]
  -[NSHTTPCookieStorage cookieAcceptPolicy]
  -[NSHTTPCookieStorage setCookie:]
  -[NSHTTPCookieStorage removeCookiesSinceDate:]
  -[NSHTTPCookieStorage setCookieAcceptPolicy:]
  -[NSHTTPCookieStorage _initWithIdentifier:private:]
  -[NSHTTPCookieStorage _setPrivateBrowsingEnabled:]
  -[NSHTTPCookieStorage _saveCookies:]
  -[NSHTTPCookieStorage _CFHTTPCookieStorage]
  -[NSHTTPCookieStorage cookieRequestHeaderFieldsForURL:]
  -[NSHTTPCookieStorage setCookiesFromResponseHeader:forURL:policyBaseURL:]
  -[NSHTTPCookieStorage _cookiesForURL:mainDocumentURL:]
  -[NSHTTPCookieStorage _setCookies:forURL:mainDocumentURL:policyProperties:]
  -[NSHTTPCookieStorage sortedCookiesUsingDescriptors:]
  -[NSHTTPCookieStorage _getCookiesForURL:mainDocumentURL:partition:completionHandler:]
  -[NSHTTPCookieStorage _getCookiesForURL:mainDocumentURL:partition:policyProperties:completionHandler:]
  -[NSHTTPCookieStorage _getCookieStoragePartitionsCompletionHandler:]
  -[NSHTTPCookieStorage _getCookiesForPartition:completionHandler:]
  -[NSHTTPCookieStorage _testingOfStoringOfCookie:]
  -[NSHTTPCookieStorage set_overrideSessionCookieAcceptPolicy:]


__CFN_GlobalMetrics : NSObject /usr/lib/libxml2.2.dylib
 @property  <_NSURLSessionEventDelegate> *forwardingDelegate
 @property  NSMutableDictionary *defaultSessionMetrics
 @property  NSMutableDictionary *ephemeralSessionMetrics
 @property  NSMutableDictionary *backgroundSessionMetrics
 @property  <_NSURLSessionHTTPRewriter> *HTTPRewriter

  // class methods
  +[__CFN_GlobalMetrics globalMetrics]

  // instance methods
  -[__CFN_GlobalMetrics init]
  -[__CFN_GlobalMetrics .cxx_destruct]
  -[__CFN_GlobalMetrics HTTPRewriter]
  -[__CFN_GlobalMetrics sessionDestroy:]
  -[__CFN_GlobalMetrics sessionCreate:]
  -[__CFN_GlobalMetrics setHTTPRewriter:]
  -[__CFN_GlobalMetrics forwardingDelegate]
  -[__CFN_GlobalMetrics setForwardingDelegate:]
  -[__CFN_GlobalMetrics defaultSessionMetrics]
  -[__CFN_GlobalMetrics setDefaultSessionMetrics:]
  -[__CFN_GlobalMetrics ephemeralSessionMetrics]
  -[__CFN_GlobalMetrics setEphemeralSessionMetrics:]
  -[__CFN_GlobalMetrics backgroundSessionMetrics]
  -[__CFN_GlobalMetrics setBackgroundSessionMetrics:]


NSURLSessionStreamTask : NSURLSessionTask

__NSCFURLLocalStreamTask : NSURLSessionStreamTask
 @property  NSData *_TCPConnectionMetadata
 @property  NSData *_initialDataPayload
 @property  unsigned long taskIdentifier
 @property  NSURLRequest *originalRequest
 @property  NSURLRequest *currentRequest
 @property  NSURLResponse *response
 @property  long long countOfBytesClientExpectsToSend
 @property  long long countOfBytesClientExpectsToReceive
 @property  long long countOfBytesExpectedToSend
 @property  long long countOfBytesExpectedToReceive
 @property  long long countOfBytesReceived
 @property  long long countOfBytesSent
 @property  long long state
 @property  NSString *taskDescription
 @property  NSError *error
 @property  BOOL _goneSecure
 @property  double _timeoutIntervalForResource
 @property  NSUUID *_uniqueIdentifier

  // instance methods
  -[__NSCFURLLocalStreamTask dealloc]
  -[__NSCFURLLocalStreamTask copyWithZone:]
  -[__NSCFURLLocalStreamTask error]
  -[__NSCFURLLocalStreamTask cancel]
  -[__NSCFURLLocalStreamTask resume]
  -[__NSCFURLLocalStreamTask setError:]
  -[__NSCFURLLocalStreamTask state]
  -[__NSCFURLLocalStreamTask suspend]
  -[__NSCFURLLocalStreamTask _uniqueIdentifier]
  -[__NSCFURLLocalStreamTask priority]
  -[__NSCFURLLocalStreamTask setPriority:]
  -[__NSCFURLLocalStreamTask setState:]
  -[__NSCFURLLocalStreamTask response]
  -[__NSCFURLLocalStreamTask taskIdentifier]
  -[__NSCFURLLocalStreamTask originalRequest]
  -[__NSCFURLLocalStreamTask workQueue]
  -[__NSCFURLLocalStreamTask setResponse:]
  -[__NSCFURLLocalStreamTask currentRequest]
  -[__NSCFURLLocalStreamTask setTaskIdentifier:]
  -[__NSCFURLLocalStreamTask _onqueue_checkForCompletion]
  -[__NSCFURLLocalStreamTask _effectiveConfiguration]
  -[__NSCFURLLocalStreamTask _onSessionQueue_disavow]
  -[__NSCFURLLocalStreamTask _onqueue_cancel]
  -[__NSCFURLLocalStreamTask _onqueue_resume]
  -[__NSCFURLLocalStreamTask _onSessionQueue_cleanupAndBreakCycles]
  -[__NSCFURLLocalStreamTask _task_onqueue_didFinish]
  -[__NSCFURLLocalStreamTask _task_onqueue_didReceiveDispatchData:completionHandler:]
  -[__NSCFURLLocalStreamTask set_legacySocketStreamProperties:]
  -[__NSCFURLLocalStreamTask _legacySocketStreamProperties]
  -[__NSCFURLLocalStreamTask computeAdjustedPoolPriority]
  -[__NSCFURLLocalStreamTask setCountOfBytesExpectedToSend:]
  -[__NSCFURLLocalStreamTask setCountOfBytesSent:]
  -[__NSCFURLLocalStreamTask setCountOfBytesReceived:]
  -[__NSCFURLLocalStreamTask countOfBytesReceived]
  -[__NSCFURLLocalStreamTask setCountOfBytesExpectedToReceive:]
  -[__NSCFURLLocalStreamTask setCountOfBytesClientExpectsToReceive:]
  -[__NSCFURLLocalStreamTask countOfBytesClientExpectsToReceive]
  -[__NSCFURLLocalStreamTask setCountOfBytesClientExpectsToSend:]
  -[__NSCFURLLocalStreamTask countOfBytesClientExpectsToSend]
  -[__NSCFURLLocalStreamTask setTaskDescription:]
  -[__NSCFURLLocalStreamTask taskDescription]
  -[__NSCFURLLocalStreamTask _copySocketStreamProperties]
  -[__NSCFURLLocalStreamTask countOfBytesExpectedToReceive]
  -[__NSCFURLLocalStreamTask setOriginalRequest:]
  -[__NSCFURLLocalStreamTask set_networkServiceType:]
  -[__NSCFURLLocalStreamTask set_boundInterfaceIdentifier:]
  -[__NSCFURLLocalStreamTask set_allowsConstrainedOverride:]
  -[__NSCFURLLocalStreamTask set_allowsExpensiveOverride:]
  -[__NSCFURLLocalStreamTask set_expectedWorkload:]
  -[__NSCFURLLocalStreamTask set_timeWindowDelay:]
  -[__NSCFURLLocalStreamTask set_timeWindowDuration:]
  -[__NSCFURLLocalStreamTask countOfBytesExpectedToSend]
  -[__NSCFURLLocalStreamTask countOfBytesSent]
  -[__NSCFURLLocalStreamTask _goneSecure]
  -[__NSCFURLLocalStreamTask initWithHost:port:taskGroup:disavow:]
  -[__NSCFURLLocalStreamTask readDataOfMinLength:maxLength:timeout:completionHandler:]
  -[__NSCFURLLocalStreamTask writeData:timeout:completionHandler:]
  -[__NSCFURLLocalStreamTask captureStreams]
  -[__NSCFURLLocalStreamTask closeWrite]
  -[__NSCFURLLocalStreamTask closeRead]
  -[__NSCFURLLocalStreamTask copyStreamProperty:completionHandler:]
  -[__NSCFURLLocalStreamTask startSecureConnection]
  -[__NSCFURLLocalStreamTask stopSecureConnection]
  -[__NSCFURLLocalStreamTask _onqueue_stopSecureConnection]
  -[__NSCFURLLocalStreamTask _onqueue_startSecureConnection]
  -[__NSCFURLLocalStreamTask _onqueue_captureStreams]
  -[__NSCFURLLocalStreamTask _onqueue_addBlockOp:description:]
  -[__NSCFURLLocalStreamTask _onqueue_ioTick]
  -[__NSCFURLLocalStreamTask _onqueue_processWriteWork:]
  -[__NSCFURLLocalStreamTask _onqueue_processReadWork:]
  -[__NSCFURLLocalStreamTask _onqueue_errorOrCancelError]
  -[__NSCFURLLocalStreamTask _onqueue_dealWithSessionTrustAuth:credential:completionHandler:]
  -[__NSCFURLLocalStreamTask _onqueue_sendSessionChallenge:completionHandler:]
  -[__NSCFURLLocalStreamTask _onqueue_needServerTrust:completionHandler:]
  -[__NSCFURLLocalStreamTask _onqueue_needClientCert:completionHandler:]
  -[__NSCFURLLocalStreamTask _onqueue_dealWithSessionClientCertAuth:credential:completionHandler:]
  -[__NSCFURLLocalStreamTask _initialDataPayload]
  -[__NSCFURLLocalStreamTask set_initialDataPayload:]
  -[__NSCFURLLocalStreamTask _TCPConnectionMetadata]
  -[__NSCFURLLocalStreamTask set_TCPConnectionMetadata:]
  -[__NSCFURLLocalStreamTask setCurrentRequest:]
  -[__NSCFURLLocalStreamTask initWithNetService:taskGroup:disavow:]
  -[__NSCFURLLocalStreamTask _cacheOnly]
  -[__NSCFURLLocalStreamTask _timeWindowDelay]
  -[__NSCFURLLocalStreamTask _timeWindowDuration]
  -[__NSCFURLLocalStreamTask _expectedWorkload]
  -[__NSCFURLLocalStreamTask _boundInterfaceIdentifier]
  -[__NSCFURLLocalStreamTask _disallowCellular]
  -[__NSCFURLLocalStreamTask _allowsExpensiveOverride]
  -[__NSCFURLLocalStreamTask _allowsConstrainedOverride]
  -[__NSCFURLLocalStreamTask _allowsCellularOverride]
  -[__NSCFURLLocalStreamTask _networkServiceType]
  -[__NSCFURLLocalStreamTask _adoptEffectiveConfiguration:]
  -[__NSCFURLLocalStreamTask _init_setupTimeoutTimer]
  -[__NSCFURLLocalStreamTask _initCommonWithGroup:disavow:]
  -[__NSCFURLLocalStreamTask _initWithTaskGroup:disavow:]
  -[__NSCFURLLocalStreamTask _initWithExistingTask:disavow:]
  -[__NSCFURLLocalStreamTask adjustConditionalConnectionProperties:]
  -[__NSCFURLLocalStreamTask describePending:]
  -[__NSCFURLLocalStreamTask _onqueue_readDataOfMinLength:maxLength:timeout:completionHandler:]
  -[__NSCFURLLocalStreamTask _onqueue_writeData:timeout:completionHandler:]
  -[__NSCFURLLocalStreamTask _onqueue_closeWriteOp]
  -[__NSCFURLLocalStreamTask _onqueue_closeReadOp]
  -[__NSCFURLLocalStreamTask _onqueue_preConnectionConfiguration:completionHandler:]
  -[__NSCFURLLocalStreamTask _onqueue_postConnectConfiguration:completionHandler:]
  -[__NSCFURLLocalStreamTask _onqueue_readStreamEvent:]
  -[__NSCFURLLocalStreamTask _onqueue_shufflePendingFor:]
  -[__NSCFURLLocalStreamTask _onqueue_writeStreamEvent:]
  -[__NSCFURLLocalStreamTask _onqueue_readStream:writeStreamAvailable:]
  -[__NSCFURLLocalStreamTask _onqueue_scheduleStreams]
  -[__NSCFURLLocalStreamTask _onqueue_unscheduleStreams]
  -[__NSCFURLLocalStreamTask _onqueue_addBlockOpAtHead:description:]
  -[__NSCFURLLocalStreamTask set_disallowCellular:]
  -[__NSCFURLLocalStreamTask set__allowsCellularOverride:]


__NSCFURLLocalStreamTaskFromDataTaskDataBlobby : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[__NSCFURLLocalStreamTaskFromDataTaskDataBlobby dealloc]
  -[__NSCFURLLocalStreamTaskFromDataTaskDataBlobby copyWithZone:]
  -[__NSCFURLLocalStreamTaskFromDataTaskDataBlobby initWithData:completion:]
  -[__NSCFURLLocalStreamTaskFromDataTaskDataBlobby drain:]
  -[__NSCFURLLocalStreamTaskFromDataTaskDataBlobby callCompletion]


__NSCFURLLocalStreamTaskFromDataTask : __NSCFURLLocalStreamTask <SessionConnectionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFURLLocalStreamTaskFromDataTask dealloc]
  -[__NSCFURLLocalStreamTaskFromDataTask copyWithZone:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:wasRedirected:newRequest:responseCallback:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:request:needsNewBodyStreamCallback:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:didReceiveResponse:completion:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:willCacheResponse:responseCallback:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:didFinishCollectingMetrics:completion:]
  -[__NSCFURLLocalStreamTaskFromDataTask connectionWillFinishLoading:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:didFinishLoadingWithError:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:didReceiveConnectionCacheKey:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:challenged:authCallback:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:didReceiveData:completion:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:sentBodyBytes:totalBytes:expectedBytes:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:_willSendRequestForEstablishedConnection:completion:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:waitingWithReason:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:_conditionalRequirementsChanged:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:didReceiveSocketInputStream:outputStream:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:needConnectedSocketToHost:port:completion:]
  -[__NSCFURLLocalStreamTaskFromDataTask connection:didReceiveTCPConnection:extraBytes:]
  -[__NSCFURLLocalStreamTaskFromDataTask initWithTask:disavow:]
  -[__NSCFURLLocalStreamTaskFromDataTask _onqueue_ioTickFromDataTask]
  -[__NSCFURLLocalStreamTaskFromDataTask _onqueue_ioTickFromDataTaskConversion:]
  -[__NSCFURLLocalStreamTaskFromDataTask _onqueue_stFromDataTaskReadCallback:]
  -[__NSCFURLLocalStreamTaskFromDataTask _onqueue_stFromDataTaskWriteCallback:]
  -[__NSCFURLLocalStreamTaskFromDataTask initWithTask:remainingInputStream:remainingOutputStream:disavow:]
  -[__NSCFURLLocalStreamTaskFromDataTask initWithTask:inputStream:ouptutStream:disavow:]
  -[__NSCFURLLocalStreamTaskFromDataTask _onqueue_didFinishLoadingWithError:]
  -[__NSCFURLLocalStreamTaskFromDataTask _unimp:]


__ItemHolder : NSObject /usr/lib/libxml2.2.dylib
 @property  <NSCopying> *key
 @property  id item
 @property  NSDate *lastTimeUsed
 @property  NSNumber *version

  // instance methods
  -[__ItemHolder dealloc]
  -[__ItemHolder key]
  -[__ItemHolder item]
  -[__ItemHolder setItem:]
  -[__ItemHolder version]
  -[__ItemHolder setVersion:]
  -[__ItemHolder setKey:]
  -[__ItemHolder touch]
  -[__ItemHolder initWithItem:key:]
  -[__ItemHolder lastTimeUsed]
  -[__ItemHolder setLastTimeUsed:]


LRUCache : NSObject /usr/lib/libxml2.2.dylib
 @property  unsigned long maxCapacity
 @property  NSMutableDictionary *items
 @property  NSMutableArray *lru

  // instance methods
  -[LRUCache init]
  -[LRUCache dealloc]
  -[LRUCache initWithCapacity:]
  -[LRUCache removeAllItems]
  -[LRUCache items]
  -[LRUCache setItems:]
  -[LRUCache itemForKey:]
  -[LRUCache removeItemForKey:]
  -[LRUCache addItem:forKey:]
  -[LRUCache _insert:]
  -[LRUCache maxCapacity]
  -[LRUCache setMaxCapacity:]
  -[LRUCache lru]
  -[LRUCache setLru:]


NSURLConnectionInternalConnection : NSURLConnectionInternal <NSURLConnectionRequired>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NSURLConnectionInternalConnection dealloc]
  -[NSURLConnectionInternalConnection _invalidate]
  -[NSURLConnectionInternalConnection scheduleInRunLoop:forMode:]
  -[NSURLConnectionInternalConnection cancel]
  -[NSURLConnectionInternalConnection start]
  -[NSURLConnectionInternalConnection performDefaultHandlingForAuthenticationChallenge:]
  -[NSURLConnectionInternalConnection useCredential:forAuthenticationChallenge:]
  -[NSURLConnectionInternalConnection rejectProtectionSpaceAndContinueWithChallenge:]
  -[NSURLConnectionInternalConnection continueWithoutCredentialForAuthenticationChallenge:]
  -[NSURLConnectionInternalConnection cancelAuthenticationChallenge:]
  -[NSURLConnectionInternalConnection unscheduleFromRunLoop:forMode:]
  -[NSURLConnectionInternalConnection _suspendLoading]
  -[NSURLConnectionInternalConnection _resumeLoading]
  -[NSURLConnectionInternalConnection _setDelegateQueue:]
  -[NSURLConnectionInternalConnection initWithInfo:]
  -[NSURLConnectionInternalConnection _timingData]
  -[NSURLConnectionInternalConnection cleanupChallenges]
  -[NSURLConnectionInternalConnection _setShouldSkipCancelOnRelease:]
  -[NSURLConnectionInternalConnection invokeForDelegate:]
  -[NSURLConnectionInternalConnection _CFURLConnection]
  -[NSURLConnectionInternalConnection _atomic_CFURLConnection]
  -[NSURLConnectionInternalConnection _retainCFURLConnection]
  -[NSURLConnectionInternalConnection sendCFChallenge:toSelector:]


myDelegates : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionTaskDelegate, NSURLSessionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[myDelegates URLSession:didReceiveChallenge:completionHandler:]
  -[myDelegates URLSession:task:didCompleteWithError:]
  -[myDelegates URLSession:readClosedForStreamTask:]
  -[myDelegates URLSession:writeClosedForStreamTask:]


__NSCFURLSessionXPC : NSObject /usr/lib/libxml2.2.dylib
  // class methods
  +[__NSCFURLSessionXPC initialize]
  +[__NSCFURLSessionXPC bgSessionManagerInterface]
  +[__NSCFURLSessionXPC bgSessionInterface]
  +[__NSCFURLSessionXPC bgSessionClientInterface]


__CoreSchedulingSetRunnable : NSObject /usr/lib/libxml2.2.dylib
  // class methods
  +[__CoreSchedulingSetRunnable _run:]

  // instance methods
  -[__CoreSchedulingSetRunnable dealloc]
  -[__CoreSchedulingSetRunnable copyRunLoopWhenAvailable]
  -[__CoreSchedulingSetRunnable initWithSetupHadler:]
  -[__CoreSchedulingSetRunnable startedRunLoop:]
  -[__CoreSchedulingSetRunnable runForever]
  -[__CoreSchedulingSetRunnable __SITUATIONAL_ABORT__:reason:]
  -[__CoreSchedulingSetRunnable performed]
  -[__CoreSchedulingSetRunnable canceled:mode:]
  -[__CoreSchedulingSetRunnable pinCurrentRunLoop]


NSURLDownloadInternal : NSObject /usr/lib/libxml2.2.dylib
  // instance methods
  -[NSURLDownloadInternal dealloc]


NSURLDownload : NSObject /usr/lib/libxml2.2.dylib <NSURLAuthenticationChallengeSender>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURLRequest *request
 @property  NSData *resumeData
 @property  BOOL deletesFileUponFailure

  // class methods
  +[NSURLDownload _downloadWithLoadingConnection:request:response:delegate:proxy:]
  +[NSURLDownload _downloadWithLoadingCFURLConnection:request:response:delegate:proxy:]
  +[NSURLDownload _downloadWithRequest:delegate:directory:]
  +[NSURLDownload canResumeDownloadDecodedWithEncodingMIMEType:]

  // instance methods
  -[NSURLDownload init]
  -[NSURLDownload dealloc]
  -[NSURLDownload _delegate]
  -[NSURLDownload cancel]
  -[NSURLDownload url]
  -[NSURLDownload request]
  -[NSURLDownload resumeData]
  -[NSURLDownload useCredential:forAuthenticationChallenge:]
  -[NSURLDownload continueWithoutCredentialForAuthenticationChallenge:]
  -[NSURLDownload cancelAuthenticationChallenge:]
  -[NSURLDownload initWithRequest:delegate:]
  -[NSURLDownload _setDelegateQueue:]
  -[NSURLDownload cleanupChallenges]
  -[NSURLDownload _initWithLoadingConnection:request:response:delegate:proxy:]
  -[NSURLDownload _initWithLoadingCFURLConnection:request:response:delegate:proxy:]
  -[NSURLDownload _initWithRequest:delegate:directory:]
  -[NSURLDownload _initWithResumeInformation:delegate:path:]
  -[NSURLDownload initWithResumeData:delegate:path:]
  -[NSURLDownload _resumeInformation]
  -[NSURLDownload setDestination:allowOverwrite:]
  -[NSURLDownload setDeletesFileUponFailure:]
  -[NSURLDownload deletesFileUponFailure]
  -[NSURLDownload _directoryPath]
  -[NSURLDownload _setDelegate:]
  -[NSURLDownload _setDirectoryPath:]
  -[NSURLDownload releaseDelegate]
  -[NSURLDownload _downloadActive]
  -[NSURLDownload withDelegate:]
  -[NSURLDownload sendDidStart:]
  -[NSURLDownload sendWillSendRequest:redirectResponse:]
  -[NSURLDownload sendDidReceiveChallenge:]
  -[NSURLDownload sendDidReceiveResponse:]
  -[NSURLDownload sendWillResumeWithResponse:startingByte:]
  -[NSURLDownload sendDidReceiveData:]
  -[NSURLDownload sendShouldDecodeDataOfMIMEType:]
  -[NSURLDownload sendDecideDestinationWithSuggestedObjectName:]
  -[NSURLDownload sendDidCreateDestination:]
  -[NSURLDownload sendDidFinish]
  -[NSURLDownload sendDidFail:]
  -[NSURLDownload sendCanAuthenticateAgainstProtectionSpace:]


NSGZipDecoder : NSObject /usr/lib/libxml2.2.dylib <NSURLDownloadDecoder>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSGZipDecoder MIMEType]
  +[NSGZipDecoder decodeDownloadHeader:headerLength:modificationTime:filename:]
  +[NSGZipDecoder canDecodeDownloadHeaderData:]

  // instance methods
  -[NSGZipDecoder init]
  -[NSGZipDecoder dealloc]
  -[NSGZipDecoder fileAttributes]
  -[NSGZipDecoder filenameWithOriginalFilename:]
  -[NSGZipDecoder decodeData:]
  -[NSGZipDecoder decodeDownloadData:dataForkData:resourceForkData:]
  -[NSGZipDecoder isFinishedDecoding]
  -[NSGZipDecoder finishDownloadDecoding]


NSURLSessionTaskHTTPAuthenticator : NSObject /usr/lib/libxml2.2.dylib <NSCopying>
 @property  NSSet *statusCodes

  // class methods
  +[NSURLSessionTaskHTTPAuthenticator sessionTaskHTTPAuthenticatorWithContext:statusCodes:]

  // instance methods
  -[NSURLSessionTaskHTTPAuthenticator dealloc]
  -[NSURLSessionTaskHTTPAuthenticator copyWithZone:]
  -[NSURLSessionTaskHTTPAuthenticator getAuthenticationHeadersForTask:task:response:completionHandler:]
  -[NSURLSessionTaskHTTPAuthenticator statusCodes]
  -[NSURLSessionTaskHTTPAuthenticator initWithStatusCodes:]
  -[NSURLSessionTaskHTTPAuthenticator setStatusCodes:]


NSURLSessionTaskBackgroundHTTPAuthenticator : NSURLSessionTaskHTTPAuthenticator
  // instance methods
  -[NSURLSessionTaskBackgroundHTTPAuthenticator dealloc]
  -[NSURLSessionTaskBackgroundHTTPAuthenticator getAuthenticationHeadersForTask:task:response:completionHandler:]
  -[NSURLSessionTaskBackgroundHTTPAuthenticator initWithStatusCodes:]


NSURLSessionTaskLocalHTTPAuthenticator : NSURLSessionTaskHTTPAuthenticator
 @property  <NSURLSessionAppleIDContext> *externalAuthenticator

  // instance methods
  -[NSURLSessionTaskLocalHTTPAuthenticator dealloc]
  -[NSURLSessionTaskLocalHTTPAuthenticator getAuthenticationHeadersForTask:task:response:completionHandler:]
  -[NSURLSessionTaskLocalHTTPAuthenticator initWithSessionAuthenticator:statusCodes:]
  -[NSURLSessionTaskLocalHTTPAuthenticator externalAuthenticator]
  -[NSURLSessionTaskLocalHTTPAuthenticator setExternalAuthenticator:]


NSURLSessionWebSocketTask : NSURLSessionTask
 @property  long long maximumMessageSize
 @property  long long closeCode
 @property  NSData *closeReason

  // instance methods
  -[NSURLSessionWebSocketTask .cxx_destruct]
  -[NSURLSessionWebSocketTask sendMessage:completionHandler:]
  -[NSURLSessionWebSocketTask receiveMessageWithCompletionHandler:]
  -[NSURLSessionWebSocketTask sendPingWithPongReceiveHandler:]
  -[NSURLSessionWebSocketTask cancelWithCloseCode:reason:]
  -[NSURLSessionWebSocketTask maximumMessageSize]
  -[NSURLSessionWebSocketTask setMaximumMessageSize:]
  -[NSURLSessionWebSocketTask closeCode]
  -[NSURLSessionWebSocketTask closeReason]


NSURLSessionWebSocketMessage : NSObject /usr/lib/libxml2.2.dylib
 @property  long long type
 @property  NSData *data
 @property  NSString *string

  // instance methods
  -[NSURLSessionWebSocketMessage string]
  -[NSURLSessionWebSocketMessage type]
  -[NSURLSessionWebSocketMessage initWithData:]
  -[NSURLSessionWebSocketMessage .cxx_destruct]
  -[NSURLSessionWebSocketMessage initWithString:]
  -[NSURLSessionWebSocketMessage data]


NSURLSessionTask : NSObject /usr/lib/libxml2.2.dylib <NSCopying, NSProgressReporting>
 @property  NSURLSessionEffectiveConfiguration *_effectiveConfiguration
 @property  unsigned long taskIdentifier
 @property  NSURLRequest *originalRequest
 @property  NSURLRequest *currentRequest
 @property  NSURL *currentRequest_URL
 @property  NSURL *currentRequest_mainDocumentURL
 @property  NSURLResponse *response
 @property  long long countOfBytesReceived
 @property  long long countOfBytesSent
 @property  long long countOfBytesExpectedToSend
 @property  long long countOfBytesExpectedToReceive
 @property  long long state
 @property  NSError *error
 @property  double startTime
 @property  <__NSURLSessionTaskGroupForConfiguration> *_taskGroup
 @property  NSURLSession *session
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  long long _priorityValue
 @property  double _loadingPriorityValue
 @property  NSString *_loggableDescription
 @property  __CFN_TransactionMetrics *_backgroundTransactionMetrics
 @property  BOOL _shouldSkipPreferredClientCertificateLookup
 @property  BOOL _cacheOnly
 @property  BOOL _preventsSystemHTTPProxyAuthentication
 @property  BOOL _requiresSecureHTTPSProxyConnection
 @property  BOOL _preventsAppSSO
 @property  BOOL _appSSOFallback
 @property  NSDictionary *_legacySocketStreamProperties
 @property  ^{_CFHSTSPolicy=} _cfHSTS
 @property  r^{_CFURLCache=} _cfCache
 @property  ^{_CFURLCredentialStorage=} _cfCreds
 @property  ^{OpaqueCFHTTPCookieStorage=} _cfCookies
 @property  unsigned long _cachePolicy
 @property  double _timeoutInterval
 @property  NSDictionary *_proxySettings
 @property  NSDictionary *_sslSettings
 @property  BOOL _shouldPipelineHTTP
 @property  BOOL _shouldUsePipelineHeuristics
 @property  BOOL _shouldSkipPipelineProbe
 @property  BOOL _shouldHandleCookies
 @property  int _cookieAcceptPolicy
 @property  BOOL _preventsIdleSystemSleep
 @property  NSArray *_contentDispositionFallbackArray
 @property  BOOL _allowsCellular
 @property  int _networkServiceType
 @property  unsigned int _qos
 @property  NSObject<OS_voucher> *_voucher
 @property  BOOL _prohibitAuthUI
 @property  BOOL _strictContentLength
 @property  long long _suspensionThreshhold
 @property  NSString *_boundInterfaceIdentifier
 @property  BOOL _disallowCellular
 @property  int _allowsExpensiveOverride
 @property  int _allowsConstrainedOverride
 @property  int _allowsCellularOverride
 @property  unsigned long _allowedProtocolTypes
 @property  long long _requestPriority
 @property  long long _expectedWorkload
 @property  double _timeWindowDelay
 @property  double _timeWindowDuration
 @property  NSUUID *_uniqueIdentifier
 @property  unsigned int _powerAssertion
 @property  unsigned int _darkWakePowerAssertion
 @property  BOOL _connectionIsCellular
 @property  BOOL _connectionIsCompanionLink
 @property  id _protocolForTask
 @property  NSURLSessionTaskHTTPAuthenticator *authenticator
 @property  BOOL _authenticatorConfiguredViaTaskProperty
 @property  NSDictionary *_dependencyInfo
 @property  NSDictionary *_DuetActivityProperties
 @property  NSURLSessionTaskDependencyTree *dependencyTree
 @property  NSURLSessionTaskDependency *taskDependency
 @property  NSURL *_backgroundPublishingURL
 @property  BOOL _extractorFinishedDecoding
 @property  BOOL _extractorPreparedForExtraction
 @property  long long _countOfPendingBytesReceivedEncoded
 @property  BOOL _preconnect
 @property  BOOL _isAVAssetTask
 @property  NSObject<OS_nw_activity> *_private_nw_activity
 @property  __CFN_TaskMetrics *_metrics
 @property  @? _httpConnectionInfoCompletionBlock
 @property  NSObject<OS_nw_activity> *_nw_activity
 @property  long long _priority
 @property  double _loadingPriority
 @property  long long _bytesPerSecondLimit
 @property  unsigned long _expectedProgressTarget
 @property  BOOL _shouldReportTimingDataToAWD
 @property  double _timeoutIntervalForResource
 @property  NSString *_storagePartitionIdentifier
 @property  NSURL *_siteForCookies
 @property  BOOL _isTopLevelNavigation
 @property  NSString *_pathToDownloadTaskFile
 @property  NSDictionary *_trailers
 @property  NSData *_TCPConnectionMetadata
 @property  unsigned short _TLSNegotiatedCipherSuite
 @property  BOOL _allowsQUIC
 @property  <SZExtractor> *_extractor
 @property  BOOL _hasSZExtractor
 @property  BOOL _doesSZExtractorConsumeExtractedData
 @property  <NSURLSessionAppleIDContext> *_appleIDContext
 @property  NSURL *_publishingURL
 @property  long long _countOfBytesReceivedEncoded
 @property  NSString *_APSRelayTopic
 @property  long long _discretionaryOverride
 @property  NSProgress *progress
 @property  NSDate *earliestBeginDate
 @property  long long countOfBytesClientExpectsToSend
 @property  long long countOfBytesClientExpectsToReceive
 @property  NSString *taskDescription
 @property  float priority
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSURLSessionTask new]

  // instance methods
  -[NSURLSessionTask init]
  -[NSURLSessionTask dealloc]
  -[NSURLSessionTask copyWithZone:]
  -[NSURLSessionTask cancel]
  -[NSURLSessionTask resume]
  -[NSURLSessionTask suspend]
  -[NSURLSessionTask _metrics]
  -[NSURLSessionTask session]
  -[NSURLSessionTask _nw_activity]
  -[NSURLSessionTask set_nw_activity:]
  -[NSURLSessionTask _copyHSTSPolicy]
  -[NSURLSessionTask _withXURLCache:]
  -[NSURLSessionTask _createXCookieStorage]
  -[NSURLSessionTask _createXCredentialStorage]
  -[NSURLSessionTask shouldHandleCookiesAndSchemeIsAppropriate]
  -[NSURLSessionTask _loggableDescription]
  -[NSURLSessionTask updateCurrentRequest:]
  -[NSURLSessionTask _onSessionQueue_cleanupAndBreakCycles]
  -[NSURLSessionTask _onqueue_adjustPriorityHint:]
  -[NSURLSessionTask _onqueue_adjustBytesPerSecondLimit:]
  -[NSURLSessionTask _onqueue_expectedProgressTargetChanged]
  -[NSURLSessionTask _needSendingMetrics]
  -[NSURLSessionTask _didSendMetrics]
  -[NSURLSessionTask _onqueue_releasePowerAsssertion]
  -[NSURLSessionTask computeAdjustedPoolPriority]
  -[NSURLSessionTask _taskGroup]
  -[NSURLSessionTask _finishProgressReporting]
  -[NSURLSessionTask _onqueue_adoptEffectiveConfiguration:]
  -[NSURLSessionTask setEarliestBeginDate:]
  -[NSURLSessionTask earliestBeginDate]
  -[NSURLSessionTask _copySocketStreamProperties]
  -[NSURLSessionTask set_metrics:]
  -[NSURLSessionTask _consumePendingBytesReceivedEncoded]
  -[NSURLSessionTask _setExplicitStorageSession:]
  -[NSURLSessionTask _setExplicitCookieStorage:]
  -[NSURLSessionTask _isAVAssetTask]
  -[NSURLSessionTask _private_nw_activity]
  -[NSURLSessionTask _getAuthenticatorStatusCodes]
  -[NSURLSessionTask _copyATSState]
  -[NSURLSessionTask _takePreventIdleSleepAssertionIfAppropriate]
  -[NSURLSessionTask _getAuthenticationHeadersForResponse:completionHandler:]
  -[NSURLSessionTask set_TLSNegotiatedCipherSuite:]
  -[NSURLSessionTask _releasePreventIdleSleepAssertionIfAppropriate]
  -[NSURLSessionTask _adoptEffectiveConfiguration:]
  -[NSURLSessionTask initWithTaskGroup:]
  -[NSURLSessionTask _logUnimplemented:]
  -[NSURLSessionTask initializeHTTPAuthenticatorWithAppleIDContext:statusCodes:]
  -[NSURLSessionTask _setSocketProperties:connectionProperties:]
  -[NSURLSessionTask _setBytesPerSecondLimit:]
  -[NSURLSessionTask _completeUploadProgress]
  -[NSURLSessionTask _appendCountOfPendingBytesReceivedEncoded:]
  -[NSURLSessionTask set_private_nw_activity:]
  -[NSURLSessionTask getUnderlyingHTTPConnectionInfoWithCompletionHandler:]


__NSCFURLSessionTask : NSURLSessionTask
  // class methods
  +[__NSCFURLSessionTask supportsSecureCoding]

  // instance methods
  -[__NSCFURLSessionTask dealloc]
  -[__NSCFURLSessionTask copyWithZone:]
  -[__NSCFURLSessionTask error]
  -[__NSCFURLSessionTask cancel]
  -[__NSCFURLSessionTask resume]
  -[__NSCFURLSessionTask setError:]
  -[__NSCFURLSessionTask observeValueForKeyPath:ofObject:change:context:]
  -[__NSCFURLSessionTask progress]
  -[__NSCFURLSessionTask state]
  -[__NSCFURLSessionTask suspend]
  -[__NSCFURLSessionTask _qos]
  -[__NSCFURLSessionTask _priority]
  -[__NSCFURLSessionTask _uniqueIdentifier]
  -[__NSCFURLSessionTask priority]
  -[__NSCFURLSessionTask _voucher]
  -[__NSCFURLSessionTask setPriority:]
  -[__NSCFURLSessionTask setState:]
  -[__NSCFURLSessionTask response]
  -[__NSCFURLSessionTask taskIdentifier]
  -[__NSCFURLSessionTask originalRequest]
  -[__NSCFURLSessionTask workQueue]
  -[__NSCFURLSessionTask setResponse:]
  -[__NSCFURLSessionTask currentRequest]
  -[__NSCFURLSessionTask setTaskIdentifier:]
  -[__NSCFURLSessionTask _shouldHandleCookies]
  -[__NSCFURLSessionTask set_APSRelayTopic:]
  -[__NSCFURLSessionTask startTime]
  -[__NSCFURLSessionTask _timeoutInterval]
  -[__NSCFURLSessionTask _copyHSTSPolicy]
  -[__NSCFURLSessionTask _withXURLCache:]
  -[__NSCFURLSessionTask _createXCookieStorage]
  -[__NSCFURLSessionTask _createXCredentialStorage]
  -[__NSCFURLSessionTask _preventsAppSSO]
  -[__NSCFURLSessionTask set_protocolForTask:]
  -[__NSCFURLSessionTask _protocolForTask]
  -[__NSCFURLSessionTask _effectiveConfiguration]
  -[__NSCFURLSessionTask shouldHandleCookiesAndSchemeIsAppropriate]
  -[__NSCFURLSessionTask _loggableDescription]
  -[__NSCFURLSessionTask set_uniqueIdentifier:]
  -[__NSCFURLSessionTask initWithOriginalRequest:ident:taskGroup:]
  -[__NSCFURLSessionTask updateCurrentRequest:]
  -[__NSCFURLSessionTask set_powerAssertion:]
  -[__NSCFURLSessionTask _powerAssertion]
  -[__NSCFURLSessionTask authenticator]
  -[__NSCFURLSessionTask _onSessionQueue_cleanupAndBreakCycles]
  -[__NSCFURLSessionTask _onqueue_adjustPriorityHint:]
  -[__NSCFURLSessionTask set_timeoutIntervalForResource:]
  -[__NSCFURLSessionTask _onqueue_releasePowerAsssertion]
  -[__NSCFURLSessionTask _timeoutIntervalForResource]
  -[__NSCFURLSessionTask currentRequest_URL]
  -[__NSCFURLSessionTask set_legacySocketStreamProperties:]
  -[__NSCFURLSessionTask _legacySocketStreamProperties]
  -[__NSCFURLSessionTask computeAdjustedPoolPriority]
  -[__NSCFURLSessionTask setCountOfBytesExpectedToSend:]
  -[__NSCFURLSessionTask setCountOfBytesSent:]
  -[__NSCFURLSessionTask setCountOfBytesReceived:]
  -[__NSCFURLSessionTask countOfBytesReceived]
  -[__NSCFURLSessionTask _finishProgressReporting]
  -[__NSCFURLSessionTask _onqueue_adoptEffectiveConfiguration:]
  -[__NSCFURLSessionTask setCountOfBytesExpectedToReceive:]
  -[__NSCFURLSessionTask set_pathToDownloadTaskFile:]
  -[__NSCFURLSessionTask set_storagePartitionIdentifier:]
  -[__NSCFURLSessionTask setCountOfBytesClientExpectsToReceive:]
  -[__NSCFURLSessionTask countOfBytesClientExpectsToReceive]
  -[__NSCFURLSessionTask setCountOfBytesClientExpectsToSend:]
  -[__NSCFURLSessionTask countOfBytesClientExpectsToSend]
  -[__NSCFURLSessionTask setTaskDescription:]
  -[__NSCFURLSessionTask taskDescription]
  -[__NSCFURLSessionTask initWithTask:]
  -[__NSCFURLSessionTask _copySocketStreamProperties]
  -[__NSCFURLSessionTask set_extractorFinishedDecoding:]
  -[__NSCFURLSessionTask _extractorFinishedDecoding]
  -[__NSCFURLSessionTask _extractor]
  -[__NSCFURLSessionTask _extractorPreparedForExtraction]
  -[__NSCFURLSessionTask set_extractorPreparedForExtraction:]
  -[__NSCFURLSessionTask countOfBytesExpectedToReceive]
  -[__NSCFURLSessionTask _backgroundPublishingURL]
  -[__NSCFURLSessionTask _pathToDownloadTaskFile]
  -[__NSCFURLSessionTask set_suspensionThreshhold:]
  -[__NSCFURLSessionTask set_backgroundPublishingURL:]
  -[__NSCFURLSessionTask setOriginalRequest:]
  -[__NSCFURLSessionTask set_extractor:]
  -[__NSCFURLSessionTask set_appSSOFallback:]
  -[__NSCFURLSessionTask set_preventsAppSSO:]
  -[__NSCFURLSessionTask _consumePendingBytesReceivedEncoded]
  -[__NSCFURLSessionTask _bytesPerSecondLimit]
  -[__NSCFURLSessionTask _suspensionThreshhold]
  -[__NSCFURLSessionTask set_cachePolicy:]
  -[__NSCFURLSessionTask set_timeoutInterval:]
  -[__NSCFURLSessionTask set_sslSettings:]
  -[__NSCFURLSessionTask set_shouldPipelineHTTP:]
  -[__NSCFURLSessionTask set_shouldUsePipelineHeuristics:]
  -[__NSCFURLSessionTask set_shouldSkipPipelineProbe:]
  -[__NSCFURLSessionTask set_shouldHandleCookies:]
  -[__NSCFURLSessionTask set_cookieAcceptPolicy:]
  -[__NSCFURLSessionTask set_preventsIdleSystemSleep:]
  -[__NSCFURLSessionTask set_contentDispositionFallbackArray:]
  -[__NSCFURLSessionTask set_allowsCellular:]
  -[__NSCFURLSessionTask set_networkServiceType:]
  -[__NSCFURLSessionTask set_proxySettings:]
  -[__NSCFURLSessionTask _setExplicitStorageSession:]
  -[__NSCFURLSessionTask _setExplicitCookieStorage:]
  -[__NSCFURLSessionTask set_boundInterfaceIdentifier:]
  -[__NSCFURLSessionTask set_allowsCellularOverride:]
  -[__NSCFURLSessionTask set_allowsConstrainedOverride:]
  -[__NSCFURLSessionTask set_allowsExpensiveOverride:]
  -[__NSCFURLSessionTask set_allowedProtocolTypes:]
  -[__NSCFURLSessionTask set_requestPriority:]
  -[__NSCFURLSessionTask set_expectedWorkload:]
  -[__NSCFURLSessionTask set_timeWindowDelay:]
  -[__NSCFURLSessionTask set_timeWindowDuration:]
  -[__NSCFURLSessionTask _timingData]
  -[__NSCFURLSessionTask set_backgroundTransactionMetrics:]
  -[__NSCFURLSessionTask _storagePartitionIdentifier]
  -[__NSCFURLSessionTask set_trailers:]
  -[__NSCFURLSessionTask _expectedProgressTarget]
  -[__NSCFURLSessionTask _priorityValue]
  -[__NSCFURLSessionTask countOfBytesExpectedToSend]
  -[__NSCFURLSessionTask countOfBytesSent]
  -[__NSCFURLSessionTask _TCPConnectionMetadata]
  -[__NSCFURLSessionTask _proxySettings]
  -[__NSCFURLSessionTask set_discretionaryOverride:]
  -[__NSCFURLSessionTask _backgroundTransactionMetrics]
  -[__NSCFURLSessionTask _loadingPriorityValue]
  -[__NSCFURLSessionTask _doesSZExtractorConsumeExtractedData]
  -[__NSCFURLSessionTask _hasSZExtractor]
  -[__NSCFURLSessionTask _publishingURL]
  -[__NSCFURLSessionTask _authenticatorConfiguredViaTaskProperty]
  -[__NSCFURLSessionTask set_hasSZExtractor:]
  -[__NSCFURLSessionTask set_doesSZExtractorConsumeExtractedData:]
  -[__NSCFURLSessionTask _httpConnectionInfoCompletionBlock]
  -[__NSCFURLSessionTask _getAuthenticatorStatusCodes]
  -[__NSCFURLSessionTask _copyATSState]
  -[__NSCFURLSessionTask _cachePolicy]
  -[__NSCFURLSessionTask _takePreventIdleSleepAssertionIfAppropriate]
  -[__NSCFURLSessionTask set_TCPConnectionMetadata:]
  -[__NSCFURLSessionTask _APSRelayTopic]
  -[__NSCFURLSessionTask _getAuthenticationHeadersForResponse:completionHandler:]
  -[__NSCFURLSessionTask _shouldPipelineHTTP]
  -[__NSCFURLSessionTask _shouldSkipPipelineProbe]
  -[__NSCFURLSessionTask _shouldUsePipelineHeuristics]
  -[__NSCFURLSessionTask _allowedProtocolTypes]
  -[__NSCFURLSessionTask _requestPriority]
  -[__NSCFURLSessionTask _sslSettings]
  -[__NSCFURLSessionTask set_TLSNegotiatedCipherSuite:]
  -[__NSCFURLSessionTask _preventsSystemHTTPProxyAuthentication]
  -[__NSCFURLSessionTask _prohibitAuthUI]
  -[__NSCFURLSessionTask _releasePreventIdleSleepAssertionIfAppropriate]
  -[__NSCFURLSessionTask set_connectionIsCompanionLink:]
  -[__NSCFURLSessionTask _setConnectionIsCellular:]
  -[__NSCFURLSessionTask _DuetActivityProperties]
  -[__NSCFURLSessionTask _dependencyInfo]
  -[__NSCFURLSessionTask _requiresSecureHTTPSProxyConnection]
  -[__NSCFURLSessionTask _shouldSkipPreferredClientCertificateLookup]
  -[__NSCFURLSessionTask _appSSOFallback]
  -[__NSCFURLSessionTask _strictContentLength]
  -[__NSCFURLSessionTask _discretionaryOverride]
  -[__NSCFURLSessionTask _loadingPriority]
  -[__NSCFURLSessionTask setCurrentRequest:]
  -[__NSCFURLSessionTask _cacheOnly]
  -[__NSCFURLSessionTask _appleIDContext]
  -[__NSCFURLSessionTask _timeWindowDelay]
  -[__NSCFURLSessionTask _timeWindowDuration]
  -[__NSCFURLSessionTask _siteForCookies]
  -[__NSCFURLSessionTask _isTopLevelNavigation]
  -[__NSCFURLSessionTask currentRequest_mainDocumentURL]
  -[__NSCFURLSessionTask _cookieAcceptPolicy]
  -[__NSCFURLSessionTask _expectedWorkload]
  -[__NSCFURLSessionTask _boundInterfaceIdentifier]
  -[__NSCFURLSessionTask _disallowCellular]
  -[__NSCFURLSessionTask _allowsExpensiveOverride]
  -[__NSCFURLSessionTask _allowsConstrainedOverride]
  -[__NSCFURLSessionTask _allowsCellularOverride]
  -[__NSCFURLSessionTask _networkServiceType]
  -[__NSCFURLSessionTask _adoptEffectiveConfiguration:]
  -[__NSCFURLSessionTask adjustConditionalConnectionProperties:]
  -[__NSCFURLSessionTask set_disallowCellular:]
  -[__NSCFURLSessionTask initializeHTTPAuthenticatorWithAppleIDContext:statusCodes:]
  -[__NSCFURLSessionTask _setSocketProperties:connectionProperties:]
  -[__NSCFURLSessionTask _completeUploadProgress]
  -[__NSCFURLSessionTask _appendCountOfPendingBytesReceivedEncoded:]
  -[__NSCFURLSessionTask _TLSNegotiatedCipherSuite]
  -[__NSCFURLSessionTask _cfHSTS]
  -[__NSCFURLSessionTask _cfCache]
  -[__NSCFURLSessionTask _cfCreds]
  -[__NSCFURLSessionTask _cfCookies]
  -[__NSCFURLSessionTask _contentDispositionFallbackArray]
  -[__NSCFURLSessionTask _darkWakePowerAssertion]
  -[__NSCFURLSessionTask _trailers]
  -[__NSCFURLSessionTask _connectionIsCellular]
  -[__NSCFURLSessionTask _allowsCellular]
  -[__NSCFURLSessionTask _allowsQUIC]
  -[__NSCFURLSessionTask _preventsIdleSystemSleep]
  -[__NSCFURLSessionTask _preconnect]
  -[__NSCFURLSessionTask _connectionIsCompanionLink]
  -[__NSCFURLSessionTask performSetupOnFirstResume]
  -[__NSCFURLSessionTask set_bytesPerSecondLimit:]
  -[__NSCFURLSessionTask set_expectedProgressTarget:]
  -[__NSCFURLSessionTask set_priority:]
  -[__NSCFURLSessionTask set_loadingPriority:]
  -[__NSCFURLSessionTask _createAssertionWithType:name:assertion:]
  -[__NSCFURLSessionTask _addAdditionalHeaders:toRequest:]
  -[__NSCFURLSessionTask addAdditionalHeadersToRequest:]
  -[__NSCFURLSessionTask _setAppleIDContext:]
  -[__NSCFURLSessionTask set_shouldReportTimingDataToAWD:]
  -[__NSCFURLSessionTask _shouldReportTimingDataToAWD]
  -[__NSCFURLSessionTask setTaskDependency:]
  -[__NSCFURLSessionTask _incompleteTaskMetrics]
  -[__NSCFURLSessionTask _incompleteCurrentTaskTransactionMetrics]
  -[__NSCFURLSessionTask set_preconnect:]
  -[__NSCFURLSessionTask _countOfPendingBytesReceivedEncoded]
  -[__NSCFURLSessionTask set_countOfPendingBytesReceivedEncoded:]
  -[__NSCFURLSessionTask _countOfBytesReceivedEncoded]
  -[__NSCFURLSessionTask set_countOfBytesReceivedEncoded:]
  -[__NSCFURLSessionTask setStartTime:]
  -[__NSCFURLSessionTask set_priorityValue:]
  -[__NSCFURLSessionTask set_loadingPriorityValue:]
  -[__NSCFURLSessionTask set_shouldSkipPreferredClientCertificateLookup:]
  -[__NSCFURLSessionTask set_cacheOnly:]
  -[__NSCFURLSessionTask set_preventsSystemHTTPProxyAuthentication:]
  -[__NSCFURLSessionTask set_requiresSecureHTTPSProxyConnection:]
  -[__NSCFURLSessionTask set_cfHSTS:]
  -[__NSCFURLSessionTask set_cfCache:]
  -[__NSCFURLSessionTask set_cfCreds:]
  -[__NSCFURLSessionTask set_cfCookies:]
  -[__NSCFURLSessionTask set_qos:]
  -[__NSCFURLSessionTask set_voucher:]
  -[__NSCFURLSessionTask set_prohibitAuthUI:]
  -[__NSCFURLSessionTask set_strictContentLength:]
  -[__NSCFURLSessionTask set_darkWakePowerAssertion:]
  -[__NSCFURLSessionTask setAuthenticator:]
  -[__NSCFURLSessionTask set_dependencyInfo:]
  -[__NSCFURLSessionTask dependencyTree]
  -[__NSCFURLSessionTask setDependencyTree:]
  -[__NSCFURLSessionTask taskDependency]
  -[__NSCFURLSessionTask set_DuetActivityProperties:]
  -[__NSCFURLSessionTask set_allowsQUIC:]
  -[__NSCFURLSessionTask set_authenticatorConfiguredViaTaskProperty:]
  -[__NSCFURLSessionTask set_publishingURL:]
  -[__NSCFURLSessionTask set_siteForCookies:]
  -[__NSCFURLSessionTask set_isTopLevelNavigation:]
  -[__NSCFURLSessionTask set_httpConnectionInfoCompletionBlock:]


CONNECTION_SessionTask : NSObject /usr/lib/libxml2.2.dylib
 @property  __CFN_TaskMetrics *_metrics

  // instance methods
  -[CONNECTION_SessionTask dealloc]
  -[CONNECTION_SessionTask error]
  -[CONNECTION_SessionTask state]
  -[CONNECTION_SessionTask _uniqueIdentifier]
  -[CONNECTION_SessionTask priority]
  -[CONNECTION_SessionTask _metrics]
  -[CONNECTION_SessionTask session]
  -[CONNECTION_SessionTask taskIdentifier]
  -[CONNECTION_SessionTask originalRequest]
  -[CONNECTION_SessionTask workQueue]
  -[CONNECTION_SessionTask currentRequest]
  -[CONNECTION_SessionTask _shouldHandleCookies]
  -[CONNECTION_SessionTask startTime]
  -[CONNECTION_SessionTask _timeoutInterval]
  -[CONNECTION_SessionTask _copyHSTSPolicy]
  -[CONNECTION_SessionTask _withXURLCache:]
  -[CONNECTION_SessionTask _createXCookieStorage]
  -[CONNECTION_SessionTask _createXCredentialStorage]
  -[CONNECTION_SessionTask _preventsAppSSO]
  -[CONNECTION_SessionTask set_protocolForTask:]
  -[CONNECTION_SessionTask _protocolForTask]
  -[CONNECTION_SessionTask _effectiveConfiguration]
  -[CONNECTION_SessionTask shouldHandleCookiesAndSchemeIsAppropriate]
  -[CONNECTION_SessionTask initWithRequest:mutableCurrent:connProps:sockProps:session:]
  -[CONNECTION_SessionTask _loggableDescription]
  -[CONNECTION_SessionTask updateCurrentRequest:]
  -[CONNECTION_SessionTask currentRequest_URL]
  -[CONNECTION_SessionTask countOfBytesReceived]
  -[CONNECTION_SessionTask _copySocketStreamProperties]
  -[CONNECTION_SessionTask countOfBytesExpectedToReceive]
  -[CONNECTION_SessionTask set_metrics:]
  -[CONNECTION_SessionTask set_appSSOFallback:]
  -[CONNECTION_SessionTask set_preventsAppSSO:]
  -[CONNECTION_SessionTask _consumePendingBytesReceivedEncoded]
  -[CONNECTION_SessionTask _bytesPerSecondLimit]
  -[CONNECTION_SessionTask _suspensionThreshhold]
  -[CONNECTION_SessionTask _storagePartitionIdentifier]
  -[CONNECTION_SessionTask set_trailers:]
  -[CONNECTION_SessionTask _expectedProgressTarget]
  -[CONNECTION_SessionTask _priorityValue]
  -[CONNECTION_SessionTask countOfBytesExpectedToSend]
  -[CONNECTION_SessionTask countOfBytesSent]
  -[CONNECTION_SessionTask _TCPConnectionMetadata]
  -[CONNECTION_SessionTask _proxySettings]
  -[CONNECTION_SessionTask set_discretionaryOverride:]
  -[CONNECTION_SessionTask _backgroundTransactionMetrics]
  -[CONNECTION_SessionTask _private_nw_activity]
  -[CONNECTION_SessionTask _httpConnectionInfoCompletionBlock]
  -[CONNECTION_SessionTask _getAuthenticatorStatusCodes]
  -[CONNECTION_SessionTask _copyATSState]
  -[CONNECTION_SessionTask _cachePolicy]
  -[CONNECTION_SessionTask _takePreventIdleSleepAssertionIfAppropriate]
  -[CONNECTION_SessionTask set_TCPConnectionMetadata:]
  -[CONNECTION_SessionTask _APSRelayTopic]
  -[CONNECTION_SessionTask _getAuthenticationHeadersForResponse:completionHandler:]
  -[CONNECTION_SessionTask _shouldPipelineHTTP]
  -[CONNECTION_SessionTask _shouldSkipPipelineProbe]
  -[CONNECTION_SessionTask _shouldUsePipelineHeuristics]
  -[CONNECTION_SessionTask _allowedProtocolTypes]
  -[CONNECTION_SessionTask _requestPriority]
  -[CONNECTION_SessionTask _sslSettings]
  -[CONNECTION_SessionTask set_TLSNegotiatedCipherSuite:]
  -[CONNECTION_SessionTask _preventsSystemHTTPProxyAuthentication]
  -[CONNECTION_SessionTask _prohibitAuthUI]
  -[CONNECTION_SessionTask _releasePreventIdleSleepAssertionIfAppropriate]
  -[CONNECTION_SessionTask set_connectionIsCompanionLink:]
  -[CONNECTION_SessionTask _setConnectionIsCellular:]
  -[CONNECTION_SessionTask _DuetActivityProperties]
  -[CONNECTION_SessionTask _dependencyInfo]
  -[CONNECTION_SessionTask _requiresSecureHTTPSProxyConnection]
  -[CONNECTION_SessionTask _shouldSkipPreferredClientCertificateLookup]
  -[CONNECTION_SessionTask _appSSOFallback]
  -[CONNECTION_SessionTask _strictContentLength]
  -[CONNECTION_SessionTask _cacheOnly]
  -[CONNECTION_SessionTask _timeWindowDelay]
  -[CONNECTION_SessionTask _timeWindowDuration]
  -[CONNECTION_SessionTask _siteForCookies]
  -[CONNECTION_SessionTask _isTopLevelNavigation]
  -[CONNECTION_SessionTask currentRequest_mainDocumentURL]
  -[CONNECTION_SessionTask _cookieAcceptPolicy]
  -[CONNECTION_SessionTask _expectedWorkload]
  -[CONNECTION_SessionTask _boundInterfaceIdentifier]
  -[CONNECTION_SessionTask _disallowCellular]
  -[CONNECTION_SessionTask _allowsExpensiveOverride]
  -[CONNECTION_SessionTask _allowsConstrainedOverride]
  -[CONNECTION_SessionTask _allowsCellularOverride]
  -[CONNECTION_SessionTask _networkServiceType]
  -[CONNECTION_SessionTask _adoptEffectiveConfiguration:]
  -[CONNECTION_SessionTask _setSocketProperties:connectionProperties:]
  -[CONNECTION_SessionTask _appendCountOfPendingBytesReceivedEncoded:]
  -[CONNECTION_SessionTask _TLSNegotiatedCipherSuite]
  -[CONNECTION_SessionTask _cfHSTS]
  -[CONNECTION_SessionTask _cfCache]
  -[CONNECTION_SessionTask _cfCreds]
  -[CONNECTION_SessionTask _cfCookies]
  -[CONNECTION_SessionTask _contentDispositionFallbackArray]
  -[CONNECTION_SessionTask _trailers]
  -[CONNECTION_SessionTask _allowsCellular]
  -[CONNECTION_SessionTask _allowsQUIC]
  -[CONNECTION_SessionTask _preventsIdleSystemSleep]
  -[CONNECTION_SessionTask _preconnect]
  -[CONNECTION_SessionTask _connectionIsCompanionLink]
  -[CONNECTION_SessionTask set_expectedProgressTarget:]
  -[CONNECTION_SessionTask _setAppleIDContext:]
  -[CONNECTION_SessionTask _incompleteTaskMetrics]
  -[CONNECTION_SessionTask _incompleteCurrentTaskTransactionMetrics]
  -[CONNECTION_SessionTask set_preconnect:]
  -[CONNECTION_SessionTask _countOfPendingBytesReceivedEncoded]
  -[CONNECTION_SessionTask _countOfBytesReceivedEncoded]
  -[CONNECTION_SessionTask set_allowsQUIC:]
  -[CONNECTION_SessionTask _processConnectionProperties]
  -[CONNECTION_SessionTask _connectionPropertyDuet]
  -[CONNECTION_SessionTask hasExtractor]
  -[CONNECTION_SessionTask _discretionaryOverrride]


UnitTestSessionTaskDelegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionTaskDelegate>
 @property  {SmartBlockWithArgs<NSURLSessionTaskMetrics *>=^{BlockHolderVar<NSURLSessionTaskMetrics *>}^{__shared_weak_count}} didFinishCollectingMetricsCompletionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[UnitTestSessionTaskDelegate .cxx_destruct]
  -[UnitTestSessionTaskDelegate .cxx_construct]
  -[UnitTestSessionTaskDelegate URLSession:task:didFinishCollectingMetrics:]
  -[UnitTestSessionTaskDelegate didFinishCollectingMetricsCompletionBlock]
  -[UnitTestSessionTaskDelegate setDidFinishCollectingMetricsCompletionBlock:]


UnitTestSessionTaskDelegateWithDidCompleteWithError : UnitTestSessionTaskDelegate
 @property  {SmartBlockWithArgs<bool>=^{BlockHolderVar<bool>}^{__shared_weak_count}} didDidCompleteWithErrorCompletionBlock

  // instance methods
  -[UnitTestSessionTaskDelegateWithDidCompleteWithError .cxx_destruct]
  -[UnitTestSessionTaskDelegateWithDidCompleteWithError .cxx_construct]
  -[UnitTestSessionTaskDelegateWithDidCompleteWithError URLSession:task:didCompleteWithError:]
  -[UnitTestSessionTaskDelegateWithDidCompleteWithError didDidCompleteWithErrorCompletionBlock]
  -[UnitTestSessionTaskDelegateWithDidCompleteWithError setDidDidCompleteWithErrorCompletionBlock:]


MyProgressReporter : NSObject /usr/lib/libxml2.2.dylib
 @property  NSProgress *progress
 @property  BOOL receivedProgressUpdate

  // instance methods
  -[MyProgressReporter dealloc]
  -[MyProgressReporter observeValueForKeyPath:ofObject:change:context:]
  -[MyProgressReporter progress]
  -[MyProgressReporter startObserving]
  -[MyProgressReporter stopObserving]
  -[MyProgressReporter setProgress:]
  -[MyProgressReporter receivedProgressUpdate]
  -[MyProgressReporter setReceivedProgressUpdate:]


UnitTestSessionTask_publishingURL_BasicTest_Delegate : NSObject /usr/lib/libxml2.2.dylib <NSURLSessionTaskDelegate>
 @property  {SmartBlockWithArgs<bool didDidCompleteWithErrorCompletionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[UnitTestSessionTask_publishingURL_BasicTest_Delegate .cxx_destruct]
  -[UnitTestSessionTask_publishingURL_BasicTest_Delegate .cxx_construct]
  -[UnitTestSessionTask_publishingURL_BasicTest_Delegate URLSession:task:didCompleteWithError:]
  -[UnitTestSessionTask_publishingURL_BasicTest_Delegate didDidCompleteWithErrorCompletionBlock]
  -[UnitTestSessionTask_publishingURL_BasicTest_Delegate setDidDidCompleteWithErrorCompletionBlock:]


__NSCFURLProxySessionConnection : __NSCFURLSessionConnection <NSURLSessionDataDelegate, NSURLSessionDataDelegatePrivate, NSURLSessionTaskDelegatePrivate, NSURLSessionDataDelegate_Internal>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[__NSCFURLProxySessionConnection dealloc]
  -[__NSCFURLProxySessionConnection cancel]
  -[__NSCFURLProxySessionConnection resume]
  -[__NSCFURLProxySessionConnection suspend]
  -[__NSCFURLProxySessionConnection URLSession:didBecomeInvalidWithError:]
  -[__NSCFURLProxySessionConnection URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[__NSCFURLProxySessionConnection URLSession:task:didReceiveChallenge:completionHandler:]
  -[__NSCFURLProxySessionConnection URLSession:task:needNewBodyStream:]
  -[__NSCFURLProxySessionConnection URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:]
  -[__NSCFURLProxySessionConnection URLSession:task:didFinishCollectingMetrics:]
  -[__NSCFURLProxySessionConnection URLSession:task:didCompleteWithError:]
  -[__NSCFURLProxySessionConnection URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[__NSCFURLProxySessionConnection URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:]
  -[__NSCFURLProxySessionConnection _URLSession:dataTask:didReceiveData:completionHandler:]
  -[__NSCFURLProxySessionConnection URLSession:task:_isWaitingForConnectionWithReason:]
  -[__NSCFURLProxySessionConnection URLSession:task:_conditionalRequirementsChanged:]
  -[__NSCFURLProxySessionConnection _URLSession:task:getAuthHeadersForResponse:completionHandler:]
  -[__NSCFURLProxySessionConnection initWithTask:delegate:delegateQueue:]
  -[__NSCFURLProxySessionConnection setPriorityHint:]
  -[__NSCFURLProxySessionConnection setPoolPriority:]
  -[__NSCFURLProxySessionConnection setIsDownload:]
  -[__NSCFURLProxySessionConnection setExpectedProgressTarget:]
  -[__NSCFURLProxySessionConnection clientErrorForError:]
  -[__NSCFURLProxySessionConnection _startLoad]
  -[__NSCFURLProxySessionConnection _performOriginLoad]
  -[__NSCFURLProxySessionConnection _deliverDidCompleteWithError:]


NSURLSessionTaskMetrics : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding>
 @property  __CFN_TaskMetrics *_metrics
 @property  NSArray *transactionMetrics
 @property  NSDateInterval *taskInterval
 @property  unsigned long redirectCount

  // class methods
  +[NSURLSessionTaskMetrics new]
  +[NSURLSessionTaskMetrics supportsSecureCoding]

  // instance methods
  -[NSURLSessionTaskMetrics init]
  -[NSURLSessionTaskMetrics encodeWithCoder:]
  -[NSURLSessionTaskMetrics initWithCoder:]
  -[NSURLSessionTaskMetrics .cxx_destruct]
  -[NSURLSessionTaskMetrics _metrics]
  -[NSURLSessionTaskMetrics initWithMetrics:]
  -[NSURLSessionTaskMetrics transactionMetrics]
  -[NSURLSessionTaskMetrics taskInterval]
  -[NSURLSessionTaskMetrics redirectCount]


NSURLSessionTaskTransactionMetrics : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding>
 @property  BOOL _secureConnection
 @property  BOOL _localCache
 @property  BOOL _serverPush
 @property  BOOL _connectionRace
 @property  unsigned int _redirected
 @property  NSString *_localAddressAndPort
 @property  NSString *_remoteAddressAndPort
 @property  NSUUID *_connectionIdentifier
 @property  long long _requestHeaderBytesSent
 @property  long long _responseHeaderBytesReceived
 @property  long long _responseBodyBytesReceived
 @property  long long _responseBodyBytesDecoded
 @property  BOOL _apsRelayAttempted
 @property  BOOL _apsRelaySucceeded
 @property  long long _totalBytesSent
 @property  long long _totalBytesReceived
 @property  int _negotiatedTLSProtocol
 @property  unsigned short _negotiatedTLSCipher
 @property  BOOL _usesMultipath
 @property  {?=ddIIIB} _connectionTiming
 @property  BOOL _connectionTimingCached
 @property  __CFN_TransactionMetrics *_metrics
 @property  BOOL _forCache
 @property  NSURLRequest *request
 @property  NSURLResponse *response
 @property  NSDate *fetchStartDate
 @property  NSDate *domainLookupStartDate
 @property  NSDate *domainLookupEndDate
 @property  NSDate *connectStartDate
 @property  NSDate *secureConnectionStartDate
 @property  NSDate *secureConnectionEndDate
 @property  NSDate *connectEndDate
 @property  NSDate *requestStartDate
 @property  NSDate *requestEndDate
 @property  NSDate *responseStartDate
 @property  NSDate *responseEndDate
 @property  NSString *networkProtocolName
 @property  BOOL proxyConnection
 @property  BOOL reusedConnection
 @property  long long resourceFetchType
 @property  long long countOfRequestHeaderBytesSent
 @property  long long countOfRequestBodyBytesSent
 @property  long long countOfRequestBodyBytesBeforeEncoding
 @property  long long countOfResponseHeaderBytesReceived
 @property  long long countOfResponseBodyBytesReceived
 @property  long long countOfResponseBodyBytesAfterDecoding
 @property  NSString *localAddress
 @property  NSNumber *localPort
 @property  NSString *remoteAddress
 @property  NSNumber *remotePort
 @property  NSNumber *negotiatedTLSProtocolVersion
 @property  NSNumber *negotiatedTLSCipherSuite
 @property  BOOL cellular
 @property  BOOL expensive
 @property  BOOL constrained
 @property  BOOL multipath

  // class methods
  +[NSURLSessionTaskTransactionMetrics new]
  +[NSURLSessionTaskTransactionMetrics supportsSecureCoding]

  // instance methods
  -[NSURLSessionTaskTransactionMetrics init]
  -[NSURLSessionTaskTransactionMetrics encodeWithCoder:]
  -[NSURLSessionTaskTransactionMetrics initWithCoder:]
  -[NSURLSessionTaskTransactionMetrics .cxx_destruct]
  -[NSURLSessionTaskTransactionMetrics localPort]
  -[NSURLSessionTaskTransactionMetrics remotePort]
  -[NSURLSessionTaskTransactionMetrics _metrics]
  -[NSURLSessionTaskTransactionMetrics request]
  -[NSURLSessionTaskTransactionMetrics response]
  -[NSURLSessionTaskTransactionMetrics networkProtocolName]
  -[NSURLSessionTaskTransactionMetrics isCellular]
  -[NSURLSessionTaskTransactionMetrics isExpensive]
  -[NSURLSessionTaskTransactionMetrics isConstrained]
  -[NSURLSessionTaskTransactionMetrics isMultipath]
  -[NSURLSessionTaskTransactionMetrics negotiatedTLSProtocolVersion]
  -[NSURLSessionTaskTransactionMetrics negotiatedTLSCipherSuite]
  -[NSURLSessionTaskTransactionMetrics _redirected]
  -[NSURLSessionTaskTransactionMetrics initWithMetrics:forCache:]
  -[NSURLSessionTaskTransactionMetrics translateConnectionTiming]
  -[NSURLSessionTaskTransactionMetrics fetchStartDate]
  -[NSURLSessionTaskTransactionMetrics domainLookupStartDate]
  -[NSURLSessionTaskTransactionMetrics domainLookupEndDate]
  -[NSURLSessionTaskTransactionMetrics connectStartDate]
  -[NSURLSessionTaskTransactionMetrics secureConnectionStartDate]
  -[NSURLSessionTaskTransactionMetrics secureConnectionEndDate]
  -[NSURLSessionTaskTransactionMetrics connectEndDate]
  -[NSURLSessionTaskTransactionMetrics requestStartDate]
  -[NSURLSessionTaskTransactionMetrics requestEndDate]
  -[NSURLSessionTaskTransactionMetrics responseStartDate]
  -[NSURLSessionTaskTransactionMetrics responseEndDate]
  -[NSURLSessionTaskTransactionMetrics isProxyConnection]
  -[NSURLSessionTaskTransactionMetrics isReusedConnection]
  -[NSURLSessionTaskTransactionMetrics resourceFetchType]
  -[NSURLSessionTaskTransactionMetrics countOfRequestHeaderBytesSent]
  -[NSURLSessionTaskTransactionMetrics countOfRequestBodyBytesSent]
  -[NSURLSessionTaskTransactionMetrics countOfRequestBodyBytesBeforeEncoding]
  -[NSURLSessionTaskTransactionMetrics countOfResponseHeaderBytesReceived]
  -[NSURLSessionTaskTransactionMetrics countOfResponseBodyBytesReceived]
  -[NSURLSessionTaskTransactionMetrics countOfResponseBodyBytesAfterDecoding]
  -[NSURLSessionTaskTransactionMetrics localAddress]
  -[NSURLSessionTaskTransactionMetrics remoteAddress]
  -[NSURLSessionTaskTransactionMetrics _connectionTiming]
  -[NSURLSessionTaskTransactionMetrics set_connectionTiming:]
  -[NSURLSessionTaskTransactionMetrics _connectionTimingCached]
  -[NSURLSessionTaskTransactionMetrics set_connectionTimingCached:]
  -[NSURLSessionTaskTransactionMetrics _forCache]
  -[NSURLSessionTaskTransactionMetrics _secureConnection]
  -[NSURLSessionTaskTransactionMetrics _localCache]
  -[NSURLSessionTaskTransactionMetrics _serverPush]
  -[NSURLSessionTaskTransactionMetrics _connectionRace]
  -[NSURLSessionTaskTransactionMetrics _localAddressAndPort]
  -[NSURLSessionTaskTransactionMetrics _remoteAddressAndPort]
  -[NSURLSessionTaskTransactionMetrics _connectionIdentifier]
  -[NSURLSessionTaskTransactionMetrics _requestHeaderBytesSent]
  -[NSURLSessionTaskTransactionMetrics _responseHeaderBytesReceived]
  -[NSURLSessionTaskTransactionMetrics _responseBodyBytesReceived]
  -[NSURLSessionTaskTransactionMetrics _responseBodyBytesDecoded]
  -[NSURLSessionTaskTransactionMetrics _apsRelayAttempted]
  -[NSURLSessionTaskTransactionMetrics _apsRelaySucceeded]
  -[NSURLSessionTaskTransactionMetrics _totalBytesSent]
  -[NSURLSessionTaskTransactionMetrics _totalBytesReceived]
  -[NSURLSessionTaskTransactionMetrics _negotiatedTLSProtocol]
  -[NSURLSessionTaskTransactionMetrics _negotiatedTLSCipher]
  -[NSURLSessionTaskTransactionMetrics _usesMultipath]


_NSURLSessionConnectionBeginProperties : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding>
 @property  __CFN_ConnectionMetrics *_metrics
 @property  NSObject<OS_nw_endpoint> *endpoint
 @property  BOOL TLSConfigured
 @property  BOOL proxyConfigured

  // class methods
  +[_NSURLSessionConnectionBeginProperties supportsSecureCoding]

  // instance methods
  -[_NSURLSessionConnectionBeginProperties encodeWithCoder:]
  -[_NSURLSessionConnectionBeginProperties initWithCoder:]
  -[_NSURLSessionConnectionBeginProperties .cxx_destruct]
  -[_NSURLSessionConnectionBeginProperties endpoint]
  -[_NSURLSessionConnectionBeginProperties _metrics]
  -[_NSURLSessionConnectionBeginProperties initWithMetrics:]
  -[_NSURLSessionConnectionBeginProperties isTLSConfigured]
  -[_NSURLSessionConnectionBeginProperties isProxyConfigured]


_NSURLSessionConnectionEstablishProperties : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding>
 @property  __CFN_ConnectionMetrics *_metrics
 @property  NSObject<OS_nw_endpoint> *localEndpoint
 @property  NSObject<OS_nw_endpoint> *remoteEndpoint
 @property  NSString *interfaceName
 @property  BOOL cellular
 @property  BOOL expensive
 @property  BOOL constrained
 @property  BOOL multipath
 @property  BOOL usedTFO
 @property  NSString *networkProtocolName
 @property  NSNumber *negotiatedTLSProtocolVersion
 @property  NSNumber *negotiatedTLSCipherSuite
 @property  NSObject<OS_nw_establishment_report> *establishmentReport

  // class methods
  +[_NSURLSessionConnectionEstablishProperties supportsSecureCoding]

  // instance methods
  -[_NSURLSessionConnectionEstablishProperties encodeWithCoder:]
  -[_NSURLSessionConnectionEstablishProperties initWithCoder:]
  -[_NSURLSessionConnectionEstablishProperties .cxx_destruct]
  -[_NSURLSessionConnectionEstablishProperties _metrics]
  -[_NSURLSessionConnectionEstablishProperties initWithMetrics:]
  -[_NSURLSessionConnectionEstablishProperties networkProtocolName]
  -[_NSURLSessionConnectionEstablishProperties isCellular]
  -[_NSURLSessionConnectionEstablishProperties localEndpoint]
  -[_NSURLSessionConnectionEstablishProperties remoteEndpoint]
  -[_NSURLSessionConnectionEstablishProperties interfaceName]
  -[_NSURLSessionConnectionEstablishProperties isExpensive]
  -[_NSURLSessionConnectionEstablishProperties isConstrained]
  -[_NSURLSessionConnectionEstablishProperties isMultipath]
  -[_NSURLSessionConnectionEstablishProperties usedTFO]
  -[_NSURLSessionConnectionEstablishProperties negotiatedTLSProtocolVersion]
  -[_NSURLSessionConnectionEstablishProperties negotiatedTLSCipherSuite]
  -[_NSURLSessionConnectionEstablishProperties establishmentReport]


NSURLConnectionInternal : NSObject /usr/lib/libxml2.2.dylib <NSURLConnectionRequired, NSURLAuthenticationChallengeSender>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NSURLConnectionInternal dealloc]
  -[NSURLConnectionInternal _invalidate]
  -[NSURLConnectionInternal originalRequest]
  -[NSURLConnectionInternal currentRequest]
  -[NSURLConnectionInternal _connectionProperties]
  -[NSURLConnectionInternal performDefaultHandlingForAuthenticationChallenge:]
  -[NSURLConnectionInternal useCredential:forAuthenticationChallenge:]
  -[NSURLConnectionInternal rejectProtectionSpaceAndContinueWithChallenge:]
  -[NSURLConnectionInternal continueWithoutCredentialForAuthenticationChallenge:]
  -[NSURLConnectionInternal cancelAuthenticationChallenge:]
  -[NSURLConnectionInternal _setDelegateQueue:]
  -[NSURLConnectionInternal initWithInfo:]
  -[NSURLConnectionInternal _timingData]
  -[NSURLConnectionInternal invokeForDelegate:]
  -[NSURLConnectionInternal _withActiveConnectionAndDelegate:]
  -[NSURLConnectionInternal isConnectionActive]
  -[NSURLConnectionInternal setConnectionActive:]
  -[NSURLConnectionInternal _withConnectionDisconnectFromConnection]
  -[NSURLConnectionInternal _withConnectionAndDelegate:]
  -[NSURLConnectionInternal _withConnectionAndDelegate:onlyActive:]


_NSURLHTTPProtocol : _NSCFURLProtocol
  // class methods
  +[_NSURLHTTPProtocol _cf_internalImpl]


_NSURLDataProtocol : _NSCFURLProtocol
  // class methods
  +[_NSURLDataProtocol _cf_internalImpl]


_NSURLFTPProtocol : _NSCFURLProtocol
  // class methods
  +[_NSURLFTPProtocol _cf_internalImpl]


_NSURLFileProtocol : _NSCFURLProtocol
  // class methods
  +[_NSURLFileProtocol _cf_internalImpl]


_NSURLAppSSOProtocol : _NSCFURLProtocol
  // class methods
  +[_NSURLAppSSOProtocol _cf_internalImpl]


NSURLSessionConfiguration : NSObject /usr/lib/libxml2.2.dylib <NSSecureCoding, NSCopying>
 @property  NSString *identifier
 @property  BOOL backgroundSession
 @property  NSString *disposition
 @property  NSURLCredentialStorage *_phskip_credStorage
 @property  BOOL _phskip_credStorageSet
 @property  NSURLCache *_phskip_urlCache
 @property  BOOL _phskip_urlCacheSet
 @property  NSHTTPCookieStorage *_phskip_cookieStorage
 @property  BOOL _phskip_cookieStorageSet
 @property  ^{_CFHSTSPolicy=} _phskip_hstsStorage
 @property  BOOL _phskip_hstsStorageSet
 @property  long long pipeliningHighWatermark
 @property  long long pipeliningLowWatermark
 @property  long long numPriorityLevels
 @property  long long numFastLanes
 @property  long long minimumFastLanePriority
 @property  BOOL skip_download_unlink
 @property  BOOL _requiresClientToOpenFiles
 @property  NSString *_tcpConnectionPoolName
 @property  BOOL _forcesNewConnections
 @property  NSDictionary *_socketStreamProperties
 @property  BOOL _supportsAVAssetDownloads
 @property  BOOL _proxySession
 @property  NSSet *_authenticatorStatusCodes
 @property  BOOL _preventsIdleSleep
 @property  BOOL _usePipeliningHeuristics
 @property  NSArray *_contentDispHeadEncFallback
 @property  BOOL _shouldPreserveBackgroundSessionDisposition
 @property  BOOL _disablesOutOfProcessDirectWiFiUsage
 @property  BOOL _disablesUseOfProxySession
 @property  NSString *_companionAppBundleIdentifier
 @property  NSString *_watchAppBundleIdentifier
 @property  NSString *_watchExtensionBundleIdentifier
 @property  unsigned long _forcedNetworkServiceType
 @property  NSDictionary *_overriddenDelegateOptions
 @property  BOOL _requiresPowerPluggedIn
 @property  NSURL *_directoryForDownloadedFiles
 @property  NSString *_sourceApplicationBundleIdentifier
 @property  NSString *_sourceApplicationSecondaryIdentifier
 @property  NSData *_sourceApplicationAuditTokenData
 @property  unsigned long _TCPAdaptiveReadTimeout
 @property  unsigned long _TCPAdaptiveWriteTimeout
 @property  BOOL _reportsDataStalls
 @property  BOOL _allowsExpensiveAccess
 @property  BOOL _allowsConstrainedNetworkAccess
 @property  unsigned long _multipathAlternatePort
 @property  BOOL _allowsPowerNapScheduling
 @property  BOOL _preventsIdleSleepOnceConnected
 @property  BOOL _sessionSendsLaunchOnDemandEvents
 @property  BOOL _collectsTimingData
 @property  long long _timingDataOptions
 @property  BOOL _shouldSkipPreferredClientCertificateLookup
 @property  <NSURLSessionAppleIDContext> *_appleIDContext
 @property  NSData *_atsContext
 @property  double _connectionCachePurgeTimeout
 @property  double _connectionCacheCellPurgeTimeout
 @property  double _longLivedConnectionCachePurgeTimeout
 @property  double _longLivedConnectionCacheCellPurgeTimeout
 @property  BOOL _allowsRetryForBackgroundDataTasks
 @property  BOOL _onBehalfOfPairedDevice
 @property  BOOL _clientIsNotExplicitlyDiscretionary
 @property  BOOL _respectsAllowsCellularAccessForDiscretionaryTasks
 @property  BOOL _allowsWCA
 @property  NSNumber *_maximumWatchCellularTransferSize
 @property  BOOL _overridesBackgroundSessionAutoRedirect
 @property  BOOL _performsEVCertCheck
 @property  BOOL _infersDiscretionaryFromOriginatingClient
 @property  NSString *_connectionPoolName
 @property  BOOL _prefersInfraWiFi
 @property  BOOL _allowsMultipathTCP
 @property  BOOL _allowsResponseMonitoringDuringBodyTranmission
 @property  BOOL _allowsIndefiniteConnections
 @property  NSString *_CTDataConnectionServiceType
 @property  BOOL _allowsTCPFastOpen
 @property  BOOL _allowsTLSSessionTickets
 @property  BOOL _allowsTLSSessionResumption
 @property  BOOL _allowsTLSFalseStart
 @property  NSString *_tlsTrustPinningPolicyName
 @property  BOOL _allowsTLSFallback
 @property  BOOL _preventsDirectWiFiAccess
 @property  BOOL _allowTCPIOConnectionStreamTask
 @property  unsigned long _customReadBufferSize
 @property  double _customReadBufferTimeout
 @property  BOOL _preventsSystemHTTPProxyAuthentication
 @property  BOOL _requiresSecureHTTPSProxyConnection
 @property  BOOL _duetPreauthorized
 @property  long long _duetPreClearedMode
 @property  BOOL _requiresSustainedDataDelivery
 @property  BOOL _ignoreDidReceiveResponseDisposition
 @property  BOOL _alwaysPerformDefaultTrustEvaluation
 @property  NSSet *_suppressedAutoAddedHTTPHeaders
 @property  long long _expiredDNSBehavior
 @property  long long _IDSMessageTimeout
 @property  long long _companionProxyPreference
 @property  BOOL _preventsAppSSO
 @property  BOOL _allowsSensitiveLogging
 @property  unsigned long requestCachePolicy
 @property  double timeoutIntervalForRequest
 @property  double timeoutIntervalForResource
 @property  unsigned long networkServiceType
 @property  BOOL allowsCellularAccess
 @property  BOOL allowsExpensiveNetworkAccess
 @property  BOOL allowsConstrainedNetworkAccess
 @property  BOOL waitsForConnectivity
 @property  BOOL discretionary
 @property  NSString *sharedContainerIdentifier
 @property  BOOL sessionSendsLaunchEvents
 @property  NSDictionary *connectionProxyDictionary
 @property  int TLSMinimumSupportedProtocol
 @property  int TLSMaximumSupportedProtocol
 @property  unsigned short TLSMinimumSupportedProtocolVersion
 @property  unsigned short TLSMaximumSupportedProtocolVersion
 @property  BOOL HTTPShouldUsePipelining
 @property  BOOL HTTPShouldSetCookies
 @property  unsigned long HTTPCookieAcceptPolicy
 @property  NSDictionary *HTTPAdditionalHeaders
 @property  long long HTTPMaximumConnectionsPerHost
 @property  NSHTTPCookieStorage *HTTPCookieStorage
 @property  NSURLCredentialStorage *URLCredentialStorage
 @property  NSURLCache *URLCache
 @property  BOOL shouldUseExtendedBackgroundIdleMode
 @property  NSArray *protocolClasses
 @property  long long multipathServiceType

  // class methods
  +[NSURLSessionConfiguration new]
  +[NSURLSessionConfiguration supportsSecureCoding]
  +[NSURLSessionConfiguration defaultSessionConfiguration]
  +[NSURLSessionConfiguration ephemeralSessionConfiguration]
  +[NSURLSessionConfiguration _defaultProtocolClasses]
  +[NSURLSessionConfiguration backgroundSessionConfigurationWithIdentifier:]
  +[NSURLSessionConfiguration sessionConfigurationForSharedSession]
  +[NSURLSessionConfiguration _AVBackgroundSessionConfigurationWithIdentifier:]
  +[NSURLSessionConfiguration AVBackgroundSessionConfigurationWithIdentifier:]
  +[NSURLSessionConfiguration backgroundSessionConfiguration:]

  // instance methods
  -[NSURLSessionConfiguration init]
  -[NSURLSessionConfiguration isEqual:]
  -[NSURLSessionConfiguration copyWithZone:]
  -[NSURLSessionConfiguration mutableCopyWithZone:]
  -[NSURLSessionConfiguration encodeWithCoder:]
  -[NSURLSessionConfiguration initWithCoder:]
  -[NSURLSessionConfiguration copyHSTSPolicy]
  -[NSURLSessionConfiguration getConnectionCacheLimits]
  -[NSURLSessionConfiguration _copyAttribute:]
  -[NSURLSessionConfiguration _collectsTimingData]
  -[NSURLSessionConfiguration copyImmutableVariant:]
  -[NSURLSessionConfiguration initWithDisposition:]
  -[NSURLSessionConfiguration set_collectsTimingData:]
  -[NSURLSessionConfiguration _allowsWCA]
  -[NSURLSessionConfiguration set_allowsWCA:]
  -[NSURLSessionConfiguration _companionProxyPreference]
  -[NSURLSessionConfiguration set_companionProxyPreference:]


__NSCFURLSessionConfiguration_Mutable : __NSCFURLSessionConfiguration

__NSCFURLSessionConfiguration_Immutable : NSURLSessionConfiguration <NSCopying, NSSecureCoding>
  // class methods
  +[__NSCFURLSessionConfiguration_Immutable supportsSecureCoding]

  // instance methods
  -[__NSCFURLSessionConfiguration_Immutable dealloc]
  -[__NSCFURLSessionConfiguration_Immutable isEqual:]
  -[__NSCFURLSessionConfiguration_Immutable copyWithZone:]
  -[__NSCFURLSessionConfiguration_Immutable mutableCopyWithZone:]
  -[__NSCFURLSessionConfiguration_Immutable forwardingTargetForSelector:]
  -[__NSCFURLSessionConfiguration_Immutable encodeWithCoder:]
  -[__NSCFURLSessionConfiguration_Immutable initWithTarget:]
  -[__NSCFURLSessionConfiguration_Immutable copyHSTSPolicy]
  -[__NSCFURLSessionConfiguration_Immutable getConnectionCacheLimits]
  -[__NSCFURLSessionConfiguration_Immutable _copyAttribute:]
  -[__NSCFURLSessionConfiguration_Immutable _isProxySession]
  -[__NSCFURLSessionConfiguration_Immutable disposition]


__NSCFURLSessionConfiguration : NSURLSessionConfiguration <NSCopying, NSSecureCoding>
  // class methods
  +[__NSCFURLSessionConfiguration supportsSecureCoding]

  // instance methods
  -[__NSCFURLSessionConfiguration dealloc]
  -[__NSCFURLSessionConfiguration isEqual:]
  -[__NSCFURLSessionConfiguration copyWithZone:]
  -[__NSCFURLSessionConfiguration mutableCopyWithZone:]
  -[__NSCFURLSessionConfiguration encodeWithCoder:]
  -[__NSCFURLSessionConfiguration initWithCoder:]
  -[__NSCFURLSessionConfiguration identifier]
  -[__NSCFURLSessionConfiguration setIdentifier:]
  -[__NSCFURLSessionConfiguration setTimeoutIntervalForResource:]
  -[__NSCFURLSessionConfiguration setDiscretionary:]
  -[__NSCFURLSessionConfiguration setAllowsCellularAccess:]
  -[__NSCFURLSessionConfiguration timeoutIntervalForResource]
  -[__NSCFURLSessionConfiguration setTimeoutIntervalForRequest:]
  -[__NSCFURLSessionConfiguration setRequestCachePolicy:]
  -[__NSCFURLSessionConfiguration set_sourceApplicationAuditTokenData:]
  -[__NSCFURLSessionConfiguration _preventsAppSSO]
  -[__NSCFURLSessionConfiguration protocolClasses]
  -[__NSCFURLSessionConfiguration URLCredentialStorage]
  -[__NSCFURLSessionConfiguration HTTPCookieStorage]
  -[__NSCFURLSessionConfiguration URLCache]
  -[__NSCFURLSessionConfiguration copyHSTSPolicy]
  -[__NSCFURLSessionConfiguration getConnectionCacheLimits]
  -[__NSCFURLSessionConfiguration waitsForConnectivity]
  -[__NSCFURLSessionConfiguration isBackgroundSession]
  -[__NSCFURLSessionConfiguration _requiresClientToOpenFiles]
  -[__NSCFURLSessionConfiguration skip_download_unlink]
  -[__NSCFURLSessionConfiguration _directoryForDownloadedFiles]
  -[__NSCFURLSessionConfiguration _suppressedAutoAddedHTTPHeaders]
  -[__NSCFURLSessionConfiguration _sourceApplicationAuditTokenData]
  -[__NSCFURLSessionConfiguration set_preventsAppSSO:]
  -[__NSCFURLSessionConfiguration setURLCredentialStorage:]
  -[__NSCFURLSessionConfiguration setHTTPCookieStorage:]
  -[__NSCFURLSessionConfiguration setConnectionProxyDictionary:]
  -[__NSCFURLSessionConfiguration setURLCache:]
  -[__NSCFURLSessionConfiguration _copyAttribute:]
  -[__NSCFURLSessionConfiguration _timingDataOptions]
  -[__NSCFURLSessionConfiguration _allowsRetryForBackgroundDataTasks]
  -[__NSCFURLSessionConfiguration _overridesBackgroundSessionAutoRedirect]
  -[__NSCFURLSessionConfiguration _supportsAVAssetDownloads]
  -[__NSCFURLSessionConfiguration HTTPShouldSetCookies]
  -[__NSCFURLSessionConfiguration HTTPCookieAcceptPolicy]
  -[__NSCFURLSessionConfiguration _overriddenDelegateOptions]
  -[__NSCFURLSessionConfiguration _isProxySession]
  -[__NSCFURLSessionConfiguration sharedContainerIdentifier]
  -[__NSCFURLSessionConfiguration setHTTPAdditionalHeaders:]
  -[__NSCFURLSessionConfiguration HTTPAdditionalHeaders]
  -[__NSCFURLSessionConfiguration _allowTCPIOConnectionStreamTask]
  -[__NSCFURLSessionConfiguration set_allowsTCPFastOpen:]
  -[__NSCFURLSessionConfiguration set_allowTCPIOConnectionStreamTask:]
  -[__NSCFURLSessionConfiguration isDiscretionary]
  -[__NSCFURLSessionConfiguration set_TCPAdaptiveWriteTimeout:]
  -[__NSCFURLSessionConfiguration _TCPAdaptiveWriteTimeout]
  -[__NSCFURLSessionConfiguration set_TCPAdaptiveReadTimeout:]
  -[__NSCFURLSessionConfiguration _TCPAdaptiveReadTimeout]
  -[__NSCFURLSessionConfiguration allowsCellularAccess]
  -[__NSCFURLSessionConfiguration setNetworkServiceType:]
  -[__NSCFURLSessionConfiguration networkServiceType]
  -[__NSCFURLSessionConfiguration setHTTPMaximumConnectionsPerHost:]
  -[__NSCFURLSessionConfiguration HTTPMaximumConnectionsPerHost]
  -[__NSCFURLSessionConfiguration connectionProxyDictionary]
  -[__NSCFURLSessionConfiguration timeoutIntervalForRequest]
  -[__NSCFURLSessionConfiguration setTLSMinimumSupportedProtocol:]
  -[__NSCFURLSessionConfiguration TLSMinimumSupportedProtocol]
  -[__NSCFURLSessionConfiguration setTLSMaximumSupportedProtocol:]
  -[__NSCFURLSessionConfiguration TLSMaximumSupportedProtocol]
  -[__NSCFURLSessionConfiguration set_sourceApplicationSecondaryIdentifier:]
  -[__NSCFURLSessionConfiguration _sourceApplicationSecondaryIdentifier]
  -[__NSCFURLSessionConfiguration set_sourceApplicationBundleIdentifier:]
  -[__NSCFURLSessionConfiguration _sourceApplicationBundleIdentifier]
  -[__NSCFURLSessionConfiguration _reportsDataStalls]
  -[__NSCFURLSessionConfiguration _preventsSystemHTTPProxyAuthentication]
  -[__NSCFURLSessionConfiguration _requiresSustainedDataDelivery]
  -[__NSCFURLSessionConfiguration _alwaysPerformDefaultTrustEvaluation]
  -[__NSCFURLSessionConfiguration _allowsTLSFallback]
  -[__NSCFURLSessionConfiguration _requiresSecureHTTPSProxyConnection]
  -[__NSCFURLSessionConfiguration _shouldSkipPreferredClientCertificateLookup]
  -[__NSCFURLSessionConfiguration setProtocolClasses:]
  -[__NSCFURLSessionConfiguration set_atsContext:]
  -[__NSCFURLSessionConfiguration disposition]
  -[__NSCFURLSessionConfiguration _atsContext]
  -[__NSCFURLSessionConfiguration _allowsSensitiveLogging]
  -[__NSCFURLSessionConfiguration set_supportsAVAssetDownloads:]
  -[__NSCFURLSessionConfiguration set_authenticatorStatusCodes:]
  -[__NSCFURLSessionConfiguration _appleIDContext]
  -[__NSCFURLSessionConfiguration _socketStreamProperties]
  -[__NSCFURLSessionConfiguration set_socketStreamProperties:]
  -[__NSCFURLSessionConfiguration allowsConstrainedNetworkAccess]
  -[__NSCFURLSessionConfiguration allowsExpensiveNetworkAccess]
  -[__NSCFURLSessionConfiguration setAllowsConstrainedNetworkAccess:]
  -[__NSCFURLSessionConfiguration setAllowsExpensiveNetworkAccess:]
  -[__NSCFURLSessionConfiguration HTTPShouldUsePipelining]
  -[__NSCFURLSessionConfiguration setHTTPShouldUsePipelining:]
  -[__NSCFURLSessionConfiguration _tlsTrustPinningPolicyName]
  -[__NSCFURLSessionConfiguration _connectionCacheCellPurgeTimeout]
  -[__NSCFURLSessionConfiguration set_connectionCacheCellPurgeTimeout:]
  -[__NSCFURLSessionConfiguration _forcedNetworkServiceType]
  -[__NSCFURLSessionConfiguration _customReadBufferTimeout]
  -[__NSCFURLSessionConfiguration _customReadBufferSize]
  -[__NSCFURLSessionConfiguration _allowsTLSSessionResumption]
  -[__NSCFURLSessionConfiguration _allowsTLSSessionTickets]
  -[__NSCFURLSessionConfiguration _allowsTCPFastOpen]
  -[__NSCFURLSessionConfiguration _CTDataConnectionServiceType]
  -[__NSCFURLSessionConfiguration _allowsIndefiniteConnections]
  -[__NSCFURLSessionConfiguration _allowsResponseMonitoringDuringBodyTranmission]
  -[__NSCFURLSessionConfiguration _allowsMultipathTCP]
  -[__NSCFURLSessionConfiguration shouldUseExtendedBackgroundIdleMode]
  -[__NSCFURLSessionConfiguration _forcesNewConnections]
  -[__NSCFURLSessionConfiguration _preventsIdleSleepOnceConnected]
  -[__NSCFURLSessionConfiguration _tcpConnectionPoolName]
  -[__NSCFURLSessionConfiguration _allowsPowerNapScheduling]
  -[__NSCFURLSessionConfiguration _multipathAlternatePort]
  -[__NSCFURLSessionConfiguration _allowsConstrainedNetworkAccess]
  -[__NSCFURLSessionConfiguration _allowsExpensiveAccess]
  -[__NSCFURLSessionConfiguration _requiresPowerPluggedIn]
  -[__NSCFURLSessionConfiguration set_shouldSkipPreferredClientCertificateLookup:]
  -[__NSCFURLSessionConfiguration set_preventsSystemHTTPProxyAuthentication:]
  -[__NSCFURLSessionConfiguration set_requiresSecureHTTPSProxyConnection:]
  -[__NSCFURLSessionConfiguration _expiredDNSBehavior]
  -[__NSCFURLSessionConfiguration multipathServiceType]
  -[__NSCFURLSessionConfiguration _allowsTLSFalseStart]
  -[__NSCFURLSessionConfiguration _companionAppBundleIdentifier]
  -[__NSCFURLSessionConfiguration _clientIsNotExplicitlyDiscretionary]
  -[__NSCFURLSessionConfiguration _authenticatorStatusCodes]
  -[__NSCFURLSessionConfiguration initWithDisposition:]
  -[__NSCFURLSessionConfiguration _connectionCachePurgeTimeout]
  -[__NSCFURLSessionConfiguration _longLivedConnectionCachePurgeTimeout]
  -[__NSCFURLSessionConfiguration _longLivedConnectionCacheCellPurgeTimeout]
  -[__NSCFURLSessionConfiguration _connectionPoolName]
  -[__NSCFURLSessionConfiguration _sessionSendsLaunchOnDemandEvents]
  -[__NSCFURLSessionConfiguration _onBehalfOfPairedDevice]
  -[__NSCFURLSessionConfiguration _respectsAllowsCellularAccessForDiscretionaryTasks]
  -[__NSCFURLSessionConfiguration _performsEVCertCheck]
  -[__NSCFURLSessionConfiguration _infersDiscretionaryFromOriginatingClient]
  -[__NSCFURLSessionConfiguration _prefersInfraWiFi]
  -[__NSCFURLSessionConfiguration _preventsDirectWiFiAccess]
  -[__NSCFURLSessionConfiguration _duetPreauthorized]
  -[__NSCFURLSessionConfiguration _duetPreClearedMode]
  -[__NSCFURLSessionConfiguration _ignoreDidReceiveResponseDisposition]
  -[__NSCFURLSessionConfiguration _maximumWatchCellularTransferSize]
  -[__NSCFURLSessionConfiguration _phskip_credStorage]
  -[__NSCFURLSessionConfiguration _phskip_urlCache]
  -[__NSCFURLSessionConfiguration _phskip_cookieStorage]
  -[__NSCFURLSessionConfiguration _phskip_hstsStorage]
  -[__NSCFURLSessionConfiguration _IDSMessageTimeout]
  -[__NSCFURLSessionConfiguration _contentDispHeadEncFallback]
  -[__NSCFURLSessionConfiguration _watchAppBundleIdentifier]
  -[__NSCFURLSessionConfiguration _watchExtensionBundleIdentifier]
  -[__NSCFURLSessionConfiguration _phskip_hstsStorageSet]
  -[__NSCFURLSessionConfiguration _phskip_cookieStorageSet]
  -[__NSCFURLSessionConfiguration _phskip_urlCacheSet]
  -[__NSCFURLSessionConfiguration _phskip_credStorageSet]
  -[__NSCFURLSessionConfiguration _preventsIdleSleep]
  -[__NSCFURLSessionConfiguration _usePipeliningHeuristics]
  -[__NSCFURLSessionConfiguration _shouldPreserveBackgroundSessionDisposition]
  -[__NSCFURLSessionConfiguration _disablesOutOfProcessDirectWiFiUsage]
  -[__NSCFURLSessionConfiguration _disablesUseOfProxySession]
  -[__NSCFURLSessionConfiguration setHSTSPolicy:]
  -[__NSCFURLSessionConfiguration TLSMinimumSupportedProtocolVersion]
  -[__NSCFURLSessionConfiguration setTLSMinimumSupportedProtocolVersion:]
  -[__NSCFURLSessionConfiguration TLSMaximumSupportedProtocolVersion]
  -[__NSCFURLSessionConfiguration setTLSMaximumSupportedProtocolVersion:]
  -[__NSCFURLSessionConfiguration _isEqual2:]
  -[__NSCFURLSessionConfiguration requestCachePolicy]
  -[__NSCFURLSessionConfiguration setWaitsForConnectivity:]
  -[__NSCFURLSessionConfiguration setSharedContainerIdentifier:]
  -[__NSCFURLSessionConfiguration sessionSendsLaunchEvents]
  -[__NSCFURLSessionConfiguration setSessionSendsLaunchEvents:]
  -[__NSCFURLSessionConfiguration setHTTPShouldSetCookies:]
  -[__NSCFURLSessionConfiguration setHTTPCookieAcceptPolicy:]
  -[__NSCFURLSessionConfiguration setShouldUseExtendedBackgroundIdleMode:]
  -[__NSCFURLSessionConfiguration setMultipathServiceType:]
  -[__NSCFURLSessionConfiguration set_requiresPowerPluggedIn:]
  -[__NSCFURLSessionConfiguration set_directoryForDownloadedFiles:]
  -[__NSCFURLSessionConfiguration set_reportsDataStalls:]
  -[__NSCFURLSessionConfiguration set_allowsExpensiveAccess:]
  -[__NSCFURLSessionConfiguration set_allowsConstrainedNetworkAccess:]
  -[__NSCFURLSessionConfiguration set_allowsPowerNapScheduling:]
  -[__NSCFURLSessionConfiguration set_preventsIdleSleepOnceConnected:]
  -[__NSCFURLSessionConfiguration set_sessionSendsLaunchOnDemandEvents:]
  -[__NSCFURLSessionConfiguration set_timingDataOptions:]
  -[__NSCFURLSessionConfiguration set_appleIDContext:]
  -[__NSCFURLSessionConfiguration set_connectionCachePurgeTimeout:]
  -[__NSCFURLSessionConfiguration set_longLivedConnectionCachePurgeTimeout:]
  -[__NSCFURLSessionConfiguration set_longLivedConnectionCacheCellPurgeTimeout:]
  -[__NSCFURLSessionConfiguration set_allowsRetryForBackgroundDataTasks:]
  -[__NSCFURLSessionConfiguration set_onBehalfOfPairedDevice:]
  -[__NSCFURLSessionConfiguration set_clientIsNotExplicitlyDiscretionary:]
  -[__NSCFURLSessionConfiguration set_respectsAllowsCellularAccessForDiscretionaryTasks:]
  -[__NSCFURLSessionConfiguration set_overridesBackgroundSessionAutoRedirect:]
  -[__NSCFURLSessionConfiguration set_performsEVCertCheck:]
  -[__NSCFURLSessionConfiguration set_infersDiscretionaryFromOriginatingClient:]
  -[__NSCFURLSessionConfiguration set_connectionPoolName:]
  -[__NSCFURLSessionConfiguration set_prefersInfraWiFi:]
  -[__NSCFURLSessionConfiguration set_allowsMultipathTCP:]
  -[__NSCFURLSessionConfiguration set_allowsResponseMonitoringDuringBodyTranmission:]
  -[__NSCFURLSessionConfiguration set_allowsIndefiniteConnections:]
  -[__NSCFURLSessionConfiguration set_CTDataConnectionServiceType:]
  -[__NSCFURLSessionConfiguration set_allowsTLSSessionTickets:]
  -[__NSCFURLSessionConfiguration set_allowsTLSSessionResumption:]
  -[__NSCFURLSessionConfiguration set_allowsTLSFalseStart:]
  -[__NSCFURLSessionConfiguration set_tlsTrustPinningPolicyName:]
  -[__NSCFURLSessionConfiguration set_allowsTLSFallback:]
  -[__NSCFURLSessionConfiguration set_preventsDirectWiFiAccess:]
  -[__NSCFURLSessionConfiguration set_customReadBufferSize:]
  -[__NSCFURLSessionConfiguration set_customReadBufferTimeout:]
  -[__NSCFURLSessionConfiguration set_allowsSensitiveLogging:]
  -[__NSCFURLSessionConfiguration set_duetPreauthorized:]
  -[__NSCFURLSessionConfiguration set_duetPreClearedMode:]
  -[__NSCFURLSessionConfiguration set_requiresSustainedDataDelivery:]
  -[__NSCFURLSessionConfiguration set_IDSMessageTimeout:]
  -[__NSCFURLSessionConfiguration set_ignoreDidReceiveResponseDisposition:]
  -[__NSCFURLSessionConfiguration set_alwaysPerformDefaultTrustEvaluation:]
  -[__NSCFURLSessionConfiguration set_maximumWatchCellularTransferSize:]
  -[__NSCFURLSessionConfiguration set_multipathAlternatePort:]
  -[__NSCFURLSessionConfiguration setBackgroundSession:]
  -[__NSCFURLSessionConfiguration setDisposition:]
  -[__NSCFURLSessionConfiguration set_phskip_credStorage:]
  -[__NSCFURLSessionConfiguration set_phskip_credStorageSet:]
  -[__NSCFURLSessionConfiguration set_phskip_urlCache:]
  -[__NSCFURLSessionConfiguration set_phskip_urlCacheSet:]
  -[__NSCFURLSessionConfiguration set_phskip_cookieStorage:]
  -[__NSCFURLSessionConfiguration set_phskip_cookieStorageSet:]
  -[__NSCFURLSessionConfiguration set_phskip_hstsStorage:]
  -[__NSCFURLSessionConfiguration set_phskip_hstsStorageSet:]
  -[__NSCFURLSessionConfiguration pipeliningHighWatermark]
  -[__NSCFURLSessionConfiguration setPipeliningHighWatermark:]
  -[__NSCFURLSessionConfiguration pipeliningLowWatermark]
  -[__NSCFURLSessionConfiguration setPipeliningLowWatermark:]
  -[__NSCFURLSessionConfiguration numPriorityLevels]
  -[__NSCFURLSessionConfiguration setNumPriorityLevels:]
  -[__NSCFURLSessionConfiguration numFastLanes]
  -[__NSCFURLSessionConfiguration setNumFastLanes:]
  -[__NSCFURLSessionConfiguration minimumFastLanePriority]
  -[__NSCFURLSessionConfiguration setMinimumFastLanePriority:]
  -[__NSCFURLSessionConfiguration setSkip_download_unlink:]
  -[__NSCFURLSessionConfiguration set_requiresClientToOpenFiles:]
  -[__NSCFURLSessionConfiguration set_tcpConnectionPoolName:]
  -[__NSCFURLSessionConfiguration set_forcesNewConnections:]
  -[__NSCFURLSessionConfiguration set_proxySession:]
  -[__NSCFURLSessionConfiguration set_preventsIdleSleep:]
  -[__NSCFURLSessionConfiguration set_usePipeliningHeuristics:]
  -[__NSCFURLSessionConfiguration set_contentDispHeadEncFallback:]
  -[__NSCFURLSessionConfiguration set_shouldPreserveBackgroundSessionDisposition:]
  -[__NSCFURLSessionConfiguration set_disablesOutOfProcessDirectWiFiUsage:]
  -[__NSCFURLSessionConfiguration set_disablesUseOfProxySession:]
  -[__NSCFURLSessionConfiguration set_companionAppBundleIdentifier:]
  -[__NSCFURLSessionConfiguration set_watchAppBundleIdentifier:]
  -[__NSCFURLSessionConfiguration set_watchExtensionBundleIdentifier:]
  -[__NSCFURLSessionConfiguration set_forcedNetworkServiceType:]
  -[__NSCFURLSessionConfiguration set_overriddenDelegateOptions:]
  -[__NSCFURLSessionConfiguration set_suppressedAutoAddedHTTPHeaders:]
  -[__NSCFURLSessionConfiguration set_expiredDNSBehavior:]


__NSCFConfigWoo : NSURLSessionConfiguration

NSData(NSURLSession_Additions)
	// instance methods
	-[NSData(NSURLSession_Additions) _requestFromResumeData]
	-[NSData(NSURLSession_Additions) _isSafeResumeDataForBackgroundDownload]

NSURL(NSURLSession_Additions)
	// instance methods
	-[NSURL(NSURLSession_Additions) _isSafeFileForBackgroundUpload:withToken:]
	-[NSURL(NSURLSession_Additions) _isSafeFileForBackgroundUploadForMe]
	-[NSURL(NSURLSession_Additions) _isSafeDirectoryForDownloads:withToken:]

01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPipe 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLError 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
