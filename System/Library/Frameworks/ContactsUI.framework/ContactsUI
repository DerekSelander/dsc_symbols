|| __DATA.__data _ABCapabilitiesConferenceHistoryChanged
|| __DATA.__data _CNAvatarViewDefaultSize
|| __DATA.__data _CNContactUIBirthdaysKey
|| __DATA.__data _CNContactUISystemCalendarKey
|| __DATA.__data _CNMeCardSharingPickerViewControllerDidSaveNotification
|| __DATA.__data _CNQuickActionCategoryAddToContacts
|| __DATA.__data _CNQuickActionCategoryAudioCall
|| __DATA.__data _CNQuickActionCategoryInfo
|| __DATA.__data _CNQuickActionCategoryInstantMessage
|| __DATA.__data _CNQuickActionCategoryMail
|| __DATA.__data _CNQuickActionCategoryVideoCall
|| __DATA.__data _CNUIContactActionDestinationType
|| __DATA.__data _CNUIContactActionDestinationTypeEmail
|| __DATA.__data _CNUIContactActionDestinationTypeFaceTime
|| __DATA.__data _CNUIContactActionDestinationTypeFaceTimeAudio
|| __DATA.__data _CNUIContactActionDestinationTypePhoneNumber
|| __DATA.__data _CNUIContactActionFaceTimeMediaType
|| __DATA.__data _CNUIContactActionFaceTimeMediaTypeAudioOnly
|| __DATA.__data _CNUIContactActionFaceTimeMediaTypeVideo
|| __DATA.__data _CNUIContactActionShareActivityType
|| __DATA.__data _CNUIContactActionTapPropertyIdentifier
|| __DATA.__data _CNUIContactActionTypeAddToFavorites
|| __DATA.__data _CNUIContactActionTypeFaceTime
|| __DATA.__data _CNUIContactActionTypeLink
|| __DATA.__data _CNUIContactActionTypeSendMessage
|| __DATA.__data _CNUIContactActionTypeShare
|| __DATA.__data _CNUIContactActionTypeTapProperty
|| __DATA.__data _CNUIContactActionTypeUnlink
|| __DATA.__data _CNUIDataCollectorActionTypeAttributeContact
|| __DATA.__data _CNUIDataCollectorActionTypeAttributeLabeledValue
|| __DATA.__data _OBJC_METACLASS_$__TtC10ContactsUI18DuplicatesUIHelper
|| __DATA.__data _OBJC_METACLASS_$__TtC10ContactsUI33ContactListMergeUnifyActionHelper
|| __DATA.__objc_data _OBJC_CLASS_$_CNActionItem
|| __DATA.__objc_data _OBJC_CLASS_$_CNActionsView
|| __DATA.__objc_data _OBJC_CLASS_$_CNAvatarAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_CNAvatarViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNBadgingAvatarBadgeStyleSettings
|| __DATA.__objc_data _OBJC_CLASS_$_CNBadgingAvatarViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNCardActionGroupItem
|| __DATA.__objc_data _OBJC_CLASS_$_CNCardGroup
|| __DATA.__objc_data _OBJC_CLASS_$_CNCardGroupItem
|| __DATA.__objc_data _OBJC_CLASS_$_CNCardPropertyGroup
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactAction
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactActionsContext
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactContentContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactContentDisplayViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactContentEditViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactContentUnitaryViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactContentViewControllerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactCustomDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactEditAuthorizationManager
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactFilter
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactGridViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactInlineActionsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactListViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactMenuDisplayingAction
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactPicker
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactPickerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactQuickActionsController
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactQuickActionsDisambiguationMenuPresentation
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactRecentsReference
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactSection
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactStoreDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactStoreFilter
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactViewCache
|| __DATA.__objc_data _OBJC_CLASS_$_CNGeminiBadge
|| __DATA.__objc_data _OBJC_CLASS_$_CNGroupAvatarViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNGroupIdentity
|| __DATA.__objc_data _OBJC_CLASS_$_CNGroupIdentityActionItem
|| __DATA.__objc_data _OBJC_CLASS_$_CNGroupIdentityInlineActionsViewConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CNLabeledBadge
|| __DATA.__objc_data _OBJC_CLASS_$_CNMeCardSharingContactAvatarProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CNMeCardSharingContactNameProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CNMeCardSharingDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CNMeCardSharingNameFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_CNMeCardSharingOnboardingAudienceViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNMeCardSharingOnboardingEditViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNMeCardSharingOnboardingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNMeCardSharingResult
|| __DATA.__objc_data _OBJC_CLASS_$_CNMultipleUnknownContactsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNPhotoPickerVariantsManager
|| __DATA.__objc_data _OBJC_CLASS_$_CNPostalAddressEditorNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_CNPropertyGroupItem
|| __DATA.__objc_data _OBJC_CLASS_$_CNQuickAction
|| __DATA.__objc_data _OBJC_CLASS_$_CNQuickActionsView
|| __DATA.__objc_data _OBJC_CLASS_$_CNSharingProfileAvatarItemProviderConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CNSharingProfileMeCardUpdater
|| __DATA.__objc_data _OBJC_CLASS_$_CNSharingProfileOnboardingAudienceCatalystViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNSharingProfileOnboardingAudienceViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNSharingProfileOnboardingFlowManager
|| __DATA.__objc_data _OBJC_CLASS_$_CNSharingProfileOnboardingFlowResult
|| __DATA.__objc_data _OBJC_CLASS_$_CNSharingProfileOnboardingPhotoSelectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_CNSharingProfileOnboardingPhotoSelectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNSharingProfileOnboardingPosePickerController
|| __DATA.__objc_data _OBJC_CLASS_$_CNStarkCardViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNStarkContactDisplayViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNStarkContactViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNStarkContactsBrowserViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNStarkContactsListViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNSyndicationViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNUIContactsAuthorizationController
|| __DATA.__objc_data _OBJC_CLASS_$_CNUIDataCollector
|| __DATA.__objc_data _OBJC_CLASS_$_CNUIDraggingContacts
|| __DATA.__objc_data _OBJC_CLASS_$_CNUIFamilyMemberContactItem
|| __DATA.__objc_data _OBJC_CLASS_$_CNUIFamilyMemberContactsController
|| __DATA.__objc_data _OBJC_CLASS_$_CNUIFamilyMemberContactsEditingStrategy
|| __DATA.__objc_data _OBJC_CLASS_$_CNUIFamilyMemberDowntimeContactPickerController
|| __DATA.__objc_data _OBJC_CLASS_$_CNUIFamilyMemberWhitelistedContactsController
|| __DATA.__objc_data _OBJC_CLASS_$_CNUIFavoritesEntryPicker
|| __DATA.__objc_data _OBJC_CLASS_$_CNUINavigationListItem
|| __DATA.__objc_data _OBJC_CLASS_$_CNUnknownContactsController
|| __DATA.__objc_data _OBJC_CLASS_$_CNVCardImportController
|| __DATA.__objc_data _OBJC_CLASS_$_CNVCardViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CNVisualIdentity
|| __DATA.__objc_data _OBJC_CLASS_$_CNVisualIdentityContactAvatarProvider
|| __DATA.__objc_data _OBJC_CLASS_$__CNAvatarView
|| __DATA.__objc_data _OBJC_CLASS_$__TtC10ContactsUI18DuplicatesUIHelper
|| __DATA.__objc_data _OBJC_CLASS_$__TtC10ContactsUI33ContactListMergeUnifyActionHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_CNActionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CNActionsView
|| __DATA.__objc_data _OBJC_METACLASS_$_CNAvatarAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_CNAvatarViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNBadgingAvatarBadgeStyleSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_CNBadgingAvatarViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNCardActionGroupItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CNCardGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_CNCardGroupItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CNCardPropertyGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactAction
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactActionsContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactContentContainerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactContentDisplayViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactContentEditViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactContentUnitaryViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactContentViewControllerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactCustomDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactEditAuthorizationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactGridViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactInlineActionsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactListViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactMenuDisplayingAction
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactPicker
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactPickerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactQuickActionsController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactQuickActionsDisambiguationMenuPresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactRecentsReference
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactSection
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactStoreDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactStoreFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactViewCache
|| __DATA.__objc_data _OBJC_METACLASS_$_CNGeminiBadge
|| __DATA.__objc_data _OBJC_METACLASS_$_CNGroupAvatarViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNGroupIdentity
|| __DATA.__objc_data _OBJC_METACLASS_$_CNGroupIdentityActionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CNGroupIdentityInlineActionsViewConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CNLabeledBadge
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMeCardSharingContactAvatarProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMeCardSharingContactNameProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMeCardSharingDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMeCardSharingNameFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMeCardSharingOnboardingAudienceViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMeCardSharingOnboardingEditViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMeCardSharingOnboardingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMeCardSharingResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMultipleUnknownContactsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNPhotoPickerVariantsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CNPostalAddressEditorNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNPropertyGroupItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CNQuickAction
|| __DATA.__objc_data _OBJC_METACLASS_$_CNQuickActionsView
|| __DATA.__objc_data _OBJC_METACLASS_$_CNSharingProfileAvatarItemProviderConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CNSharingProfileMeCardUpdater
|| __DATA.__objc_data _OBJC_METACLASS_$_CNSharingProfileOnboardingAudienceCatalystViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNSharingProfileOnboardingAudienceViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNSharingProfileOnboardingFlowManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CNSharingProfileOnboardingFlowResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CNSharingProfileOnboardingPhotoSelectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CNSharingProfileOnboardingPhotoSelectionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNSharingProfileOnboardingPosePickerController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNStarkCardViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNStarkContactDisplayViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNStarkContactViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNStarkContactsBrowserViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNStarkContactsListViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNSyndicationViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNUIContactsAuthorizationController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNUIDataCollector
|| __DATA.__objc_data _OBJC_METACLASS_$_CNUIDraggingContacts
|| __DATA.__objc_data _OBJC_METACLASS_$_CNUIFamilyMemberContactItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CNUIFamilyMemberContactsController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNUIFamilyMemberContactsEditingStrategy
|| __DATA.__objc_data _OBJC_METACLASS_$_CNUIFamilyMemberDowntimeContactPickerController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNUIFamilyMemberWhitelistedContactsController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNUIFavoritesEntryPicker
|| __DATA.__objc_data _OBJC_METACLASS_$_CNUINavigationListItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CNUnknownContactsController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNVCardImportController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNVCardViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CNVisualIdentity
|| __DATA.__objc_data _OBJC_METACLASS_$_CNVisualIdentityContactAvatarProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__CNAvatarView
|| __DATA_CONST.__const _ABHilightedColorAttributeName
|| __DATA_CONST.__const _ABNotesFontAttributeName
|| __DATA_CONST.__const _ABNotesTextColorAttributeName
|| __DATA_CONST.__const _ABTextStyleAttributeName
|| __DATA_CONST.__const _CNContactFilterDictionaryKeyFullTextString
|| __DATA_CONST.__const _CNContactPickerViewControllerPickerDidHideNotification
|| __DATA_CONST.__const _CNContactPickerViewControllerPickerDidShowNotification
|| __DATA_CONST.__const _CNNonBreakingSpaceString
|| __DATA_CONST.__const _CNUIAvatarViewErrorDomain
|| __DATA_CONST.__const _CNUIContactsUIErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNActionView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNAvatarCardController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNAvatarImageRenderer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNAvatarImageRendererSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNAvatarImageRenderingScope
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNAvatarView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNAvatarViewControllerSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNCapabilitiesManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactActionsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactContentViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactHeaderDisplayView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactHeaderEditView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactListBannerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactOrbActionsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactOrbHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactStyle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNGroupIdentityHeaderViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNMaskingTableView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNMeCardSharingPickerViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNMeCardSharingSettingsViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNMonogrammer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPhotoPickerViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNTransportButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNUIColorRepository
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNUIContactsEnvironment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNUINavigationListViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNVisualIdentityAvatarViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNVisualIdentityPickerViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNActionView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNAvatarCardController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNAvatarImageRenderer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNAvatarImageRendererSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNAvatarImageRenderingScope
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNAvatarView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNAvatarViewControllerSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNCapabilitiesManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactActionsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactContentViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactHeaderDisplayView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactHeaderEditView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactListBannerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactOrbActionsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactOrbHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactStyle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNGroupIdentityHeaderViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNMaskingTableView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNMeCardSharingPickerViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNMeCardSharingSettingsViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNMonogrammer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPhotoPickerViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNTransportButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNUIColorRepository
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNUIContactsEnvironment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNUINavigationListViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNVisualIdentityAvatarViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNVisualIdentityPickerViewController
|| __TEXT.__const _CNActionsViewDefaultSpacing
|| __TEXT.__const _CNActionsViewLargeTextSpacing
|| __TEXT.__const _kCNActionViewMaxLabelWidth
|| __TEXT.__const _kCNActionViewPlatterSize
|| __TEXT.__const _kCNTransportButtonSize
|| __TEXT.__text _ABAddressBookBundle
|| __TEXT.__text _ABAddressBookGetDefaultRotationContentSettings
|| __TEXT.__text _ABAddressBookSetAutorotationEnabled
|| __TEXT.__text _ABAddressBookShouldAllowAutorotation
|| __TEXT.__text _CNContactsUIBundle
|| __TEXT.__text _CNUIIsActivity
|| __TEXT.__text _CNUIIsContacts
|| __TEXT.__text _CNUIIsDDActionsService
|| __TEXT.__text _CNUIIsFaceTime
|| __TEXT.__text _CNUIIsFirstParty
|| __TEXT.__text _CNUIIsMessages
|| __TEXT.__text _CNUIIsMobilePhone
|| __TEXT.__text _CNUIIsWatchCompanion
|| __TEXT.__text _CNUILogAccountsAndGroupsList
|| __TEXT.__text _CNUILogAvatarView
|| __TEXT.__text _CNUILogContactCard
|| __TEXT.__text _CNUILogContactList
|| __TEXT.__text _CNUILogContactPhotoPicker
|| __TEXT.__text _CNUILogContactStoreDataSource
|| __TEXT.__text _CNUILogTesting
|| __TEXT.__text _CNUILogViewService
|| __TEXT.__text _CNUIPixelAlignedPoint
|| __TEXT.__text _CNUIPixelAlignedRect
|| __TEXT.__text _CNUIPixelAlignedSize
|| __TEXT.__text _CNUIRoundToScale
|| __TEXT.__text _CNUIRoundToViewScale
|| __TEXT.__text _CNUISetLoggingBlock
|| __TEXT.__text _CNUISetUseSiriLocalization
|| __TEXT.__text _CNUIShouldUseSiriLocalization
|| __TEXT.__text __CNUILog
__ AVFoundation: _AVExternalDeviceLimitedUIChangedNotification
__ AVFoundation: _AVExternalDeviceLimitedUIElementNonMusicLists
__ AVFoundation: _OBJC_CLASS_$_AVExternalDevice
__ Accounts: _ACAccountTypeIdentifierFacebook
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kAccountDataclassContacts
__ AddressBookLegacy: _ABAddressBookCopyAllLabels
__ AddressBookLegacy: _ABAddressBookCopyBundleURL
__ AddressBookLegacy: _ABAddressBookCreateWithOptions
__ AddressBookLegacy: _ABAddressBookDeleteLabel
__ AddressBookLegacy: _OBJC_CLASS_$_ABFacebookMigrator
__ AppSupport: _CPCanSendMMS
__ AppSupport: _CPCanSendMail
__ AppSupportUI: _NUIContainerViewLengthUseDefault
__ AppSupportUI: _NUIContainerViewSizeUnbounded
__ AppSupportUI: _NUIContainerViewSizeUseDefault
__ AppSupportUI: _NUILayoutPriorityUseDefault
__ AppSupportUI: _OBJC_CLASS_$_NUIContainerBoxView
__ AppSupportUI: _OBJC_CLASS_$_NUIContainerStackView
__ AppSupportUI: _OBJC_CLASS_$_NUITableViewContainerCell
__ AppSupportUI: _OBJC_METACLASS_$_NUIContainerBoxView
__ AppSupportUI: _OBJC_METACLASS_$_NUITableViewContainerCell
__ CommunicationsFilter: _CMFBlockListAddItemForAllServices
__ CommunicationsFilter: _CMFBlockListIsItemBlocked
__ CommunicationsFilter: _CMFBlockListRemoveItemFromAllServices
__ CommunicationsFilter: _CMFBlockListUpdatedNotification
__ CommunicationsFilter: _CreateCMFItemFromString
__ Contacts: _CNActionBundleIdentifierFaceTime
__ Contacts: _CNActionBundleIdentifierPhone
__ Contacts: _CNActionTypeAudioCall
__ Contacts: _CNActionTypeDirections
__ Contacts: _CNActionTypeMail
__ Contacts: _CNActionTypeMessage
__ Contacts: _CNActionTypeTTYCall
__ Contacts: _CNActionTypeTTYRelayCall
__ Contacts: _CNActionTypeVideoCall
__ Contacts: _CNContactBirthdayKey
__ Contacts: _CNContactCalendarURIsKey
__ Contacts: _CNContactCallAlertKey
__ Contacts: _CNContactCropRectKey
__ Contacts: _CNContactDatesKey
__ Contacts: _CNContactDepartmentNameKey
__ Contacts: _CNContactDowntimeWhitelistKey
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactExplicitDisplayNameKey
__ Contacts: _CNContactExternalImageURIKey
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactFullscreenImageDataKey
__ Contacts: _CNContactGivenNameKey
__ Contacts: _CNContactIOSLegacyIdentifierInvalid
__ Contacts: _CNContactIOSLegacyIdentifierKey
__ Contacts: _CNContactIdentifierKey
__ Contacts: _CNContactIdentifiersPboardType
__ Contacts: _CNContactImageDataAvailableKey
__ Contacts: _CNContactImageDataKey
__ Contacts: _CNContactImageHashKey
__ Contacts: _CNContactImageTypeAvatarValue
__ Contacts: _CNContactImageTypeEmojiValue
__ Contacts: _CNContactImageTypeKey
__ Contacts: _CNContactImageTypeMonogramValue
__ Contacts: _CNContactImageTypePhotoValue
__ Contacts: _CNContactInstantMessageAddressesKey
__ Contacts: _CNContactInternalPersistedUTI
__ Contacts: _CNContactInternalUTI
__ Contacts: _CNContactJobTitleKey
__ Contacts: _CNContactLikenessSourceImage
__ Contacts: _CNContactLinkIdentifierKey
__ Contacts: _CNContactMapsDataKey
__ Contacts: _CNContactMemojiMetadataKey
__ Contacts: _CNContactMiddleNameKey
__ Contacts: _CNContactNameEmphasisFontAttribute
__ Contacts: _CNContactNamePrefixKey
__ Contacts: _CNContactNameSuffixKey
__ Contacts: _CNContactNicknameKey
__ Contacts: _CNContactNonGregorianBirthdayKey
__ Contacts: _CNContactNoteKey
__ Contacts: _CNContactOrganizationNameKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNContactPhonemeDataKey
__ Contacts: _CNContactPhoneticFamilyNameKey
__ Contacts: _CNContactPhoneticGivenNameKey
__ Contacts: _CNContactPhoneticMiddleNameKey
__ Contacts: _CNContactPhoneticOrganizationNameKey
__ Contacts: _CNContactPostalAddressesKey
__ Contacts: _CNContactPreferredChannelKey
__ Contacts: _CNContactPreferredForImageKey
__ Contacts: _CNContactPreferredForNameKey
__ Contacts: _CNContactPreviousFamilyNameKey
__ Contacts: _CNContactPronunciationFamilyNameKey
__ Contacts: _CNContactPronunciationGivenNameKey
__ Contacts: _CNContactRelationsKey
__ Contacts: _CNContactSectionForSortingByFamilyNameKey
__ Contacts: _CNContactSectionForSortingByGivenNameKey
__ Contacts: _CNContactSocialProfilesKey
__ Contacts: _CNContactStoreDidChangeNotification
__ Contacts: _CNContactStoreMeContactDidChangeNotification
__ Contacts: _CNContactTextAlertKey
__ Contacts: _CNContactThumbnailImageDataKey
__ Contacts: _CNContactTypeKey
__ Contacts: _CNContactUrlAddressesKey
__ Contacts: _CNErrorDomain
__ Contacts: _CNErrorUserInfoValidationErrorsKey
__ Contacts: _CNFavoritesChangedNotification
__ Contacts: _CNInstantMessageServiceAIM
__ Contacts: _CNInstantMessageServiceFacebook
__ Contacts: _CNInstantMessageServiceGaduGadu
__ Contacts: _CNInstantMessageServiceGoogleTalk
__ Contacts: _CNInstantMessageServiceICQ
__ Contacts: _CNInstantMessageServiceJabber
__ Contacts: _CNInstantMessageServiceMSN
__ Contacts: _CNInstantMessageServiceQQ
__ Contacts: _CNInstantMessageServiceSkype
__ Contacts: _CNInstantMessageServiceYahoo
__ Contacts: _CNLabelContactRelationAssistant
__ Contacts: _CNLabelContactRelationBrother
__ Contacts: _CNLabelContactRelationChild
__ Contacts: _CNLabelContactRelationDaughter
__ Contacts: _CNLabelContactRelationFather
__ Contacts: _CNLabelContactRelationFriend
__ Contacts: _CNLabelContactRelationManager
__ Contacts: _CNLabelContactRelationMother
__ Contacts: _CNLabelContactRelationParent
__ Contacts: _CNLabelContactRelationPartner
__ Contacts: _CNLabelContactRelationSister
__ Contacts: _CNLabelContactRelationSon
__ Contacts: _CNLabelContactRelationSpouse
__ Contacts: _CNLabelDateAnniversary
__ Contacts: _CNLabelEmailiCloud
__ Contacts: _CNLabelHome
__ Contacts: _CNLabelOther
__ Contacts: _CNLabelPhoneNumberAppleWatch
__ Contacts: _CNLabelPhoneNumberHomeFax
__ Contacts: _CNLabelPhoneNumberISDN
__ Contacts: _CNLabelPhoneNumberMain
__ Contacts: _CNLabelPhoneNumberMobile
__ Contacts: _CNLabelPhoneNumberOtherFax
__ Contacts: _CNLabelPhoneNumberPager
__ Contacts: _CNLabelPhoneNumberTTY
__ Contacts: _CNLabelPhoneNumberTelex
__ Contacts: _CNLabelPhoneNumberWorkFax
__ Contacts: _CNLabelPhoneNumberiPhone
__ Contacts: _CNLabelURLAddressHomePage
__ Contacts: _CNLabelWork
__ Contacts: _CNMatchInfoExcerptEmphasisAttributeName
__ Contacts: _CNNotificationOriginatedExternally
__ Contacts: _CNNotificationSaveIdentifiers
__ Contacts: _CNPostalAddressCountryKey
__ Contacts: _CNPostalAddressStreetKey
__ Contacts: _CNSocialProfileServiceFacebook
__ Contacts: _CNSocialProfileServiceFlickr
__ Contacts: _CNSocialProfileServiceLinkedIn
__ Contacts: _CNSocialProfileServiceMySpace
__ Contacts: _CNSocialProfileServiceSinaWeibo
__ Contacts: _CNSocialProfileServiceTwitter
__ Contacts: _OBJC_CLASS_$_CN
__ Contacts: _OBJC_CLASS_$_CNAccessAuthorization
__ Contacts: _OBJC_CLASS_$_CNAccount
__ Contacts: _OBJC_CLASS_$_CNActivityAlert
__ Contacts: _OBJC_CLASS_$_CNChangesNotifier
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactChangesNotifier
__ Contacts: _OBJC_CLASS_$_CNContactFetchRequest
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactImage
__ Contacts: _OBJC_CLASS_$_CNContactImageFetchRequest
__ Contacts: _OBJC_CLASS_$_CNContactImageSaveRequest
__ Contacts: _OBJC_CLASS_$_CNContactImageStore
__ Contacts: _OBJC_CLASS_$_CNContactImageUpdater
__ Contacts: _OBJC_CLASS_$_CNContactMatchSummarizer
__ Contacts: _OBJC_CLASS_$_CNContactPolicyValidator
__ Contacts: _OBJC_CLASS_$_CNContactProperty
__ Contacts: _OBJC_CLASS_$_CNContactRelation
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNContactStoreConfiguration
__ Contacts: _OBJC_CLASS_$_CNContactVCardSerialization
__ Contacts: _OBJC_CLASS_$_CNContactsEnvironment
__ Contacts: _OBJC_CLASS_$_CNContactsUserDefaults
__ Contacts: _OBJC_CLASS_$_CNContainer
__ Contacts: _OBJC_CLASS_$_CNDowntimeWhitelist
__ Contacts: _OBJC_CLASS_$_CNDowntimeWhitelistContainerFetcher
__ Contacts: _OBJC_CLASS_$_CNDraggingContact
__ Contacts: _OBJC_CLASS_$_CNDuplicateContactsManager
__ Contacts: _OBJC_CLASS_$_CNFavorites
__ Contacts: _OBJC_CLASS_$_CNFavoritesEntry
__ Contacts: _OBJC_CLASS_$_CNGeminiManager
__ Contacts: _OBJC_CLASS_$_CNGroup
__ Contacts: _OBJC_CLASS_$_CNInstantMessageAddress
__ Contacts: _OBJC_CLASS_$_CNLabeledValue
__ Contacts: _OBJC_CLASS_$_CNMailToGroup
__ Contacts: _OBJC_CLASS_$_CNMemojiMetadataUtilities
__ Contacts: _OBJC_CLASS_$_CNMessageToGroup
__ Contacts: _OBJC_CLASS_$_CNMutableContact
__ Contacts: _OBJC_CLASS_$_CNMutableContainer
__ Contacts: _OBJC_CLASS_$_CNMutableGroup
__ Contacts: _OBJC_CLASS_$_CNMutablePostalAddress
__ Contacts: _OBJC_CLASS_$_CNPermissivePolicy
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ Contacts: _OBJC_CLASS_$_CNPolicy
__ Contacts: _OBJC_CLASS_$_CNPolicyDescription
__ Contacts: _OBJC_CLASS_$_CNPostalAddress
__ Contacts: _OBJC_CLASS_$_CNPostalAddressFormatter
__ Contacts: _OBJC_CLASS_$_CNPredicateValidator
__ Contacts: _OBJC_CLASS_$_CNSaveRequest
__ Contacts: _OBJC_CLASS_$_CNSocialProfile
__ Contacts: _OBJC_CLASS_$_CNSuggestedSaveRequest
__ Contacts: _OBJC_METACLASS_$_CNPolicy
__ ContactsDonation: _CNDonationStoreMeCardValuesDidChangeNotification
__ ContactsDonation: _OBJC_CLASS_$_CNDonationStore
__ ContactsFoundation: _CNAbstractMethodException
__ ContactsFoundation: _CNCancelableCancel
__ ContactsFoundation: _CNCreateCollatorWithPreferredLocale
__ ContactsFoundation: _CNDispatchSemaphoreWait
__ ContactsFoundation: _CNDowntimeWhitelistAllowed
__ ContactsFoundation: _CNDowntimeWhitelistDisallowed
__ ContactsFoundation: _CNEmailAddressSafeUserVisible
__ ContactsFoundation: _CNEntitlementNameAvatarStoreAccess
__ ContactsFoundation: _CNEntitlementNameContactsDatabaseInProcess
__ ContactsFoundation: _CNEntitlementNameContactsUIFrameworkSPI
__ ContactsFoundation: _CNEntitlementNameCoreDuetAccess
__ ContactsFoundation: _CNIdentity
__ ContactsFoundation: _CNInitializerUnavailableException
__ ContactsFoundation: _CNIsArrayEmpty
__ ContactsFoundation: _CNIsNotNull
__ ContactsFoundation: _CNIsSetEmpty
__ ContactsFoundation: _CNIsStringEmpty
__ ContactsFoundation: _CNIsStringNonempty
__ ContactsFoundation: _CNNilToNull
__ ContactsFoundation: _CNNullToNil
__ ContactsFoundation: _CNPostalAddressFormatsLocalizableCountryNameKey
__ ContactsFoundation: _CNPostalAddressFormatsLocalizablePhoneticCountryNameKey
__ ContactsFoundation: _CNReleaseCollator
__ ContactsFoundation: _CNStringContainsEmojiCharacters
__ ContactsFoundation: _CNStringContainsNonLatinCharacters
__ ContactsFoundation: _CNUnimplementedMethodException
__ ContactsFoundation: _OBJC_CLASS_$_CNAuditToken
__ ContactsFoundation: _OBJC_CLASS_$_CNCache
__ ContactsFoundation: _OBJC_CLASS_$_CNCancelationToken
__ ContactsFoundation: _OBJC_CLASS_$_CNCollation
__ ContactsFoundation: _OBJC_CLASS_$_CNCoreDelegateInfo
__ ContactsFoundation: _OBJC_CLASS_$_CNDateComponentsFormatter
__ ContactsFoundation: _OBJC_CLASS_$_CNDateHelper
__ ContactsFoundation: _OBJC_CLASS_$_CNDescriptionBuilder
__ ContactsFoundation: _OBJC_CLASS_$_CNEnvironment
__ ContactsFoundation: _OBJC_CLASS_$_CNEqualsBuilder
__ ContactsFoundation: _OBJC_CLASS_$_CNFoundationError
__ ContactsFoundation: _OBJC_CLASS_$_CNFuture
__ ContactsFoundation: _OBJC_CLASS_$_CNHashBuilder
__ ContactsFoundation: _OBJC_CLASS_$_CNImageCropUtilities
__ ContactsFoundation: _OBJC_CLASS_$_CNManagedConfiguration
__ ContactsFoundation: _OBJC_CLASS_$_CNManagedProfileConnection
__ ContactsFoundation: _OBJC_CLASS_$_CNObservable
__ ContactsFoundation: _OBJC_CLASS_$_CNObserver
__ ContactsFoundation: _OBJC_CLASS_$_CNPair
__ ContactsFoundation: _OBJC_CLASS_$_CNPhoneNumberHelper
__ ContactsFoundation: _OBJC_CLASS_$_CNPostalAddressFormats
__ ContactsFoundation: _OBJC_CLASS_$_CNPromise
__ ContactsFoundation: _OBJC_CLASS_$_CNPublishingSubject
__ ContactsFoundation: _OBJC_CLASS_$_CNQueue
__ ContactsFoundation: _OBJC_CLASS_$_CNRegulatoryLogger
__ ContactsFoundation: _OBJC_CLASS_$_CNScheduler
__ ContactsFoundation: _OBJC_CLASS_$_CNSchedulerProvider
__ ContactsFoundation: _OBJC_CLASS_$_CNStack
__ ContactsFoundation: _OBJC_CLASS_$_CNString
__ ContactsFoundation: _OBJC_CLASS_$_CNSuspendableSchedulerDecorator
__ ContactsFoundation: _OBJC_CLASS_$_CNTCCFactory
__ ContactsFoundation: _OBJC_CLASS_$_CNTimeIntervalFormatter
__ ContactsFoundation: _OBJC_CLASS_$_CNTimeProvider
__ ContactsFoundation: _OBJC_CLASS_$_CNUnfairLock
__ ContactsFoundation: _OBJC_CLASS_$_CNUsageReporting
__ ContactsFoundation: _cn_objectResultWithObjectLock
__ ContactsFoundation: _cn_runWithObjectLock
__ ContactsMetrics: _CNMetricsKeyUIDestinationType
__ ContactsMetrics: _CNMetricsKeyUIMediaType
__ ContactsMetrics: _CNMetricsKeyUIPropertyName
__ ContactsMetrics: _CNMetricsKeyUIShareType
__ ContactsMetrics: _OBJC_CLASS_$_CNMetricsUIReporter
__ ContactsUICore: _CNContactsUIErrorDomain
__ ContactsUICore: _OBJC_CLASS_$_CNCapabilities
__ ContactsUICore: _OBJC_CLASS_$_CNHandle
__ ContactsUICore: _OBJC_CLASS_$_CNLSApplicationWorkspace
__ ContactsUICore: _OBJC_CLASS_$_CNUIAvatarLayoutLayerItem
__ ContactsUICore: _OBJC_CLASS_$_CNUIAvatarLayoutManager
__ ContactsUICore: _OBJC_CLASS_$_CNUIContactPropertyIDSHandle
__ ContactsUICore: _OBJC_CLASS_$_CNUIContactPropertyRanker
__ ContactsUICore: _OBJC_CLASS_$_CNUICoreContactEditingSession
__ ContactsUICore: _OBJC_CLASS_$_CNUICoreContactManagementConsentInspector
__ ContactsUICore: _OBJC_CLASS_$_CNUICoreEditAuthorizationCheck
__ ContactsUICore: _OBJC_CLASS_$_CNUICoreFamilyMemberContactItem
__ ContactsUICore: _OBJC_CLASS_$_CNUICoreFamilyMemberContactsController
__ ContactsUICore: _OBJC_CLASS_$_CNUICoreFamilyMemberWhitelistedContactsController
__ ContactsUICore: _OBJC_CLASS_$_CNUICoreMainWhitelistedContactsController
__ ContactsUICore: _OBJC_CLASS_$_CNUICoreRecentsManager
__ ContactsUICore: _OBJC_CLASS_$_CNUICoreWhitelistedContactsControllerOptions
__ ContactsUICore: _OBJC_CLASS_$_CNUIDefaultUserActionFetcher
__ ContactsUICore: _OBJC_CLASS_$_CNUIIDSAvailabilityProvider
__ ContactsUICore: _OBJC_CLASS_$_CNUIIDSContactPropertyResolver
__ ContactsUICore: _OBJC_CLASS_$_CNUIIDSIDQueryControllerWrapper
__ ContactsUICore: _OBJC_CLASS_$_CNUILikenessFingerprint
__ ContactsUICore: _OBJC_CLASS_$_CNUILikenessMediaContextBadge
__ ContactsUICore: _OBJC_CLASS_$_CNUILikenessRenderer
__ ContactsUICore: _OBJC_CLASS_$_CNUILikenessRenderingScope
__ ContactsUICore: _OBJC_CLASS_$_CNUILikenessSystemImageBadge
__ ContactsUICore: _OBJC_CLASS_$_CNUIMeContactMonitor
__ ContactsUICore: _OBJC_CLASS_$_CNUIPRLikenessLookup
__ ContactsUICore: _OBJC_CLASS_$_CNUIPRLikenessResolver
__ ContactsUICore: _OBJC_CLASS_$_CNUIPlaceholderProviderFactory
__ ContactsUICore: _OBJC_CLASS_$_CNUIUserActionContext
__ ContactsUICore: _OBJC_CLASS_$_CNUIUserActionDiscoveringEnvironment
__ ContactsUICore: _OBJC_CLASS_$_CNUIUserActionItem
__ ContactsUICore: _OBJC_CLASS_$_CNUIUserActionListDataSource
__ ContactsUICore: _OBJC_CLASS_$_CNUIUserActionListModel
__ ContactsUICore: _OBJC_CLASS_$_CNUIUserActionTarget
__ ContactsUICore: _OBJC_CLASS_$_CNUIUserActivityManager
__ ContactsUICore: _OBJC_CLASS_$__CNUIUserActionImageProvider
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreEmoji: _CEMCreateEmojiLocaleData
__ CoreEmoji: _CEMEmojiLocaleDataCreateEmojiTokensForString
__ CoreEmoji: _CEMEmojiTokenGetString
__ CoreEmoji: _CEMStringContainsEmoji
__ CoreEmoji: _CEMStringIsSingleEmoji
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFLocaleCopyISOCountryCodes
__ CoreFoundation: _CFLocaleCreate
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopObserverCreate
__ CoreFoundation: _CFRunLoopObserverCreateWithHandler
__ CoreFoundation: _CFRunLoopRemoveObserver
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringTokenizerAdvanceToNextToken
__ CoreFoundation: _CFStringTokenizerCopyCurrentTokenAttribute
__ CoreFoundation: _CFStringTokenizerCreate
__ CoreFoundation: _CFStringTokenizerSetString
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFMZEnabled
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorGetAlpha
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathAddArc
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIFilter
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CorePhoneNumbers: __PNCopyFormattedNumberSuggestionForDigitsWithCountry
__ CoreServices: _LSApplyURLOverridesForContacts
__ CoreServices: _kUTTypeBMP
__ CoreServices: _kUTTypeFileURL
__ CoreServices: _kUTTypeImage
__ CoreServices: _kUTTypeJPEG2000
__ CoreServices: _kUTTypeVCard
__ DataAccessExpress: _OBJC_CLASS_$_DADConnection
__ EmojiFoundation: _OBJC_CLASS_$_EMFQuery
__ FamilyCircle: _OBJC_CLASS_$_FAFamilyCircle
__ FamilyCircle: _OBJC_CLASS_$_FAFetchFamilyCircleRequest
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLog
__ Foundation: _NSMapGet
__ Foundation: _NSMapInsert
__ Foundation: _NSMapMember
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromRect
__ Foundation: _NSStringFromSelector
__ Foundation: _NSStringFromSize
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ Foundation: __NSDictionaryOfVariableBindings
__ IntlPreferences: _OBJC_CLASS_$_IntlUtility
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ OnBoardingKit: _OBJC_CLASS_$_OBBoldTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBLinkTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBTableWelcomeController
__ OnBoardingKit: _OBJC_CLASS_$_OBWelcomeController
__ OnBoardingKit: _OBJC_CLASS_$_OBWelcomeFullCenterContentController
__ OnBoardingKit: _OBJC_METACLASS_$_OBTableWelcomeController
__ OnBoardingKit: _OBJC_METACLASS_$_OBWelcomeController
__ OnBoardingKit: _OBJC_METACLASS_$_OBWelcomeFullCenterContentController
__ PersonaUI: _OBJC_CLASS_$_PRLikenessView
__ PersonaUI: _OBJC_CLASS_$_PRMonogramColor
__ QuartzCore: _OBJC_CLASS_$_CABackdropLayer
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_CLASS_$_CATransition
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCAGravityResizeAspect
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCATransitionFade
__ SoftLinking: __sl_dlopen
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutContactIcon
__ TCC: _TCCAccessPreflight
__ TCC: _kTCCServiceCamera
__ TCC: _kTCCServicePhotos
__ TemplateKit: _OBJC_CLASS_$_TLKAppearance
__ TemplateKit: _OBJC_CLASS_$_TLKProminenceView
__ UIKit: _NSBackgroundColorAttributeName
__ UIKit: _NSBaselineOffsetAttributeName
__ UIKit: _NSDirectionalEdgeInsetsZero
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _NSWritingDirectionAttributeName
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutBoundarySupplementaryItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutDimension
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutGroup
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSection
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSize
__ UIKit: _OBJC_CLASS_$_NSDiffableDataSourceSectionSnapshot
__ UIKit: _OBJC_CLASS_$_NSDiffableDataSourceSnapshot
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSStringDrawingContext
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_NSTextEncapsulation
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationShortcutIcon
__ UIKit: _OBJC_CLASS_$_UIBackgroundConfiguration
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIButtonConfiguration
__ UIKit: _OBJC_CLASS_$_UICellAccessoryCheckmark
__ UIKit: _OBJC_CLASS_$_UICellAccessoryCustomView
__ UIKit: _OBJC_CLASS_$_UICellAccessoryDelete
__ UIKit: _OBJC_CLASS_$_UICellAccessoryDisclosureIndicator
__ UIKit: _OBJC_CLASS_$_UICellAccessoryInsert
__ UIKit: _OBJC_CLASS_$_UICellAccessoryLabel
__ UIKit: _OBJC_CLASS_$_UICellAccessoryMultiselect
__ UIKit: _OBJC_CLASS_$_UICellAccessoryOutlineDisclosure
__ UIKit: _OBJC_CLASS_$_UICollectionLayoutListConfiguration
__ UIKit: _OBJC_CLASS_$_UICollectionReusableView
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewCellRegistration
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewController
__ UIKit: _OBJC_CLASS_$_UICollectionViewDiffableDataSource
__ UIKit: _OBJC_CLASS_$_UICollectionViewDropProposal
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewListCell
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIContentUnavailableConfiguration
__ UIKit: _OBJC_CLASS_$_UIContextMenuConfiguration
__ UIKit: _OBJC_CLASS_$_UIContextMenuInteraction
__ UIKit: _OBJC_CLASS_$_UIContextualAction
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDatePicker
__ UIKit: _OBJC_CLASS_$_UIDeferredMenuElement
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDragInteraction
__ UIKit: _OBJC_CLASS_$_UIDragItem
__ UIKit: _OBJC_CLASS_$_UIDragPreview
__ UIKit: _OBJC_CLASS_$_UIDropInteraction
__ UIKit: _OBJC_CLASS_$_UIDropProposal
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImagePickerController
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIKeyCommand
__ UIKit: _OBJC_CLASS_$_UIKeyboard
__ UIKit: _OBJC_CLASS_$_UIKeyboardInputModeController
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UIListContentConfiguration
__ UIKit: _OBJC_CLASS_$_UILocalizedIndexedCollation
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UIMenuController
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationBarAppearance
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UINib
__ UIKit: _OBJC_CLASS_$_UIPasteboard
__ UIKit: _OBJC_CLASS_$_UIPopoverPresentationController
__ UIKit: _OBJC_CLASS_$_UIPresentationController
__ UIKit: _OBJC_CLASS_$_UIPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIRefreshControl
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UISegmentedControl
__ UIKit: _OBJC_CLASS_$_UISelectionFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UISplitViewController
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UIStoryboard
__ UIKit: _OBJC_CLASS_$_UISwipeActionsConfiguration
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIVibrancyEffect
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIActionSheetPresentationController
__ UIKit: _OBJC_CLASS_$__UIBackdropViewSettings
__ UIKit: _OBJC_CLASS_$__UIBasicCellContentViewConfiguration
__ UIKit: _OBJC_CLASS_$__UICollectionViewListLayoutSection
__ UIKit: _OBJC_CLASS_$__UICollectionViewListLayoutSectionConfiguration
__ UIKit: _OBJC_CLASS_$__UIDiffableDataSourceItemRenderer
__ UIKit: _OBJC_CLASS_$__UIDiffableDataSourceOutlineSectionController
__ UIKit: _OBJC_CLASS_$__UIDiffableDataSourceSectionControllerHandlers
__ UIKit: _OBJC_CLASS_$__UIOutlineItemRenderer
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_CLASS_$__UISelectionFeedbackGeneratorConfiguration
__ UIKit: _OBJC_METACLASS_$_UIBarButtonItem
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICollectionReusableView
__ UIKit: _OBJC_METACLASS_$_UICollectionView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UICollectionViewController
__ UIKit: _OBJC_METACLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_METACLASS_$_UICollectionViewListCell
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIPresentationController
__ UIKit: _OBJC_METACLASS_$_UISegmentedControl
__ UIKit: _OBJC_METACLASS_$_UITableView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UITextView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIAccessibilityDarkerSystemColorsEnabled
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIActivityTypeAirDrop
__ UIKit: _UIApp
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIApplicationWillTerminateNotification
__ UIKit: _UICollectionElementKindSectionHeader
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIDistanceBetweenPoints
__ UIKit: _UIEdgeInsetsFromString
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorSystemDesignRounded
__ UIKit: _UIFontDescriptorTraitsAttribute
__ UIKit: _UIFontSymbolicTrait
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleLargeTitle
__ UIKit: _UIFontTextStyleSubhead
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle0
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIFontWeightThin
__ UIKit: _UIFontWeightTrait
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImageDataWriteToSavedPhotosAlbum
__ UIKit: _UIImageGetTableNext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIImagePickerControllerAllowsEditing
__ UIKit: _UIImagePickerControllerCropRect
__ UIKit: _UIImagePickerControllerOriginalImage
__ UIKit: _UIImagePickerControllerPHAsset
__ UIKit: _UIImageSymbolSizeLarge
__ UIKit: _UIImageSymbolSizeMedium
__ UIKit: _UIImageSymbolSizeSmall
__ UIKit: _UIKeyInputEscape
__ UIKit: _UIKeyInputLeftArrow
__ UIKit: _UIKeyInputRightArrow
__ UIKit: _UIKeyboardDidShowNotification
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardGetActiveInputModes
__ UIKit: _UIKeyboardGetCurrentInputMode
__ UIKit: _UIKeyboardInputModeGetVariant
__ UIKit: _UIKeyboardInputMode_emoji
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UIMenuControllerDidHideMenuNotification
__ UIKit: _UIMenuControllerWillHideMenuNotification
__ UIKit: _UIOffsetZero
__ UIKit: _UIRectCenteredAboutPoint
__ UIKit: _UIRectCenteredAboutPointScale
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectCenteredXInRectScale
__ UIKit: _UIRectFill
__ UIKit: _UIRectGetCenter
__ UIKit: _UIRoundToScale
__ UIKit: _UITableDefaultRowHeight
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UITableViewDefaultRowHeight
__ UIKit: _UITextFieldTextDidChangeNotification
__ UIKit: _UITextFieldTextDidEndEditingNotification
__ UIKit: _UITextViewTextDidChangeNotification
__ UIKit: _UITextViewTextDidEndEditingNotification
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: _UIWindowDidRotateNotification
__ UIKit: __UIClickPresentationBackgroundColor
__ UIKit: __UIClickPresentationBackgroundEffects
__ UIKit: __UIImagePickerController1XCroppedImage
__ UIKit: __UIImagePickerControllerAllowAnySuperview
__ UIKit: __UIImagePickerControllerCustomBackgroundColor
__ UIKit: __UIImagePickerControllerForceNativeScreenScale
__ UIKit: __UIImagePickerControllerFullScreenImage
__ UIKit: __UIImagePickerControllerOriginalImageData
__ UIKit: __UIImagePickerControllerShowCameraControls
__ UIKit: __UIImagePickerControllerUseTelephonyUI
__ UIKit: __UITableViewDefaultSectionCornerRadiusForTraitCollection
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_state_remove_handler
__ libSystem.B.dylib: _pow
__ libicucore.A.dylib: _uscript_getScript
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getName
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_isEqual
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: __swiftEmptySetSingleton
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_allocateGenericValueMetadata
__ libswiftCore.dylib: _swift_arrayDestroy
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_checkMetadataState
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastClass
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_errorRetain
__ libswiftCore.dylib: _swift_getAtKeyPath
__ libswiftCore.dylib: _swift_getAtPartialKeyPath
__ libswiftCore.dylib: _swift_getEnumCaseMultiPayload
__ libswiftCore.dylib: _swift_getEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_getErrorValue
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getGenericMetadata
__ libswiftCore.dylib: _swift_getKeyPath
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getOpaqueTypeConformance
__ libswiftCore.dylib: _swift_getOpaqueTypeMetadata
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTupleTypeMetadata3
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initStackObject
__ libswiftCore.dylib: _swift_initStructMetadata
__ libswiftCore.dylib: _swift_isEscapingClosureAtFileLocation
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_isaMask
__ libswiftCore.dylib: _swift_lookUpClassMethod
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_release_n
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_retain_n
__ libswiftCore.dylib: _swift_slowAlloc
__ libswiftCore.dylib: _swift_slowDealloc
__ libswiftCore.dylib: _swift_stdlib_isStackAllocationSafe
__ libswiftCore.dylib: _swift_storeEnumTagMultiPayload
__ libswiftCore.dylib: _swift_storeEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_updateClassMetadata2
__ libswiftCore.dylib: _swift_willThrow
__ vCard: _OBJC_CLASS_$_CNVCardWritingOptions
_TtC10ContactsUI33ContactListMergeUnifyActionHelper : NSObject
  // class methods
  +[_TtC10ContactsUI33ContactListMergeUnifyActionHelper descriptorForRequiredKeys]

  // instance methods
  -[_TtC10ContactsUI33ContactListMergeUnifyActionHelper initWithContactStore:]
  -[_TtC10ContactsUI33ContactListMergeUnifyActionHelper .cxx_destruct]
  -[_TtC10ContactsUI33ContactListMergeUnifyActionHelper init]
  -[_TtC10ContactsUI33ContactListMergeUnifyActionHelper mergeContacts:withContainerIdentifiers:withContactIDToParentGroupsDict:]
  -[_TtC10ContactsUI33ContactListMergeUnifyActionHelper applyMergeResultToSaveRequest:]
  -[_TtC10ContactsUI33ContactListMergeUnifyActionHelper applyUndoTo:and:]


_TtC10ContactsUI32CNUIDuplicatesContactStoreFacade : Swift._SwiftObject

_TtCV10ContactsUI26CNVisualIdentityPickerView11Coordinator : NSObject <CNPhotoPickerViewControllerDelegate>
  // instance methods
  -[_TtCV10ContactsUI26CNVisualIdentityPickerView11Coordinator .cxx_destruct]
  -[_TtCV10ContactsUI26CNVisualIdentityPickerView11Coordinator init]
  -[_TtCV10ContactsUI26CNVisualIdentityPickerView11Coordinator photoPickerDidCancel:]
  -[_TtCV10ContactsUI26CNVisualIdentityPickerView11Coordinator photoPicker:didUpdatePhotoForContact:withContactImage:]


_TtC10ContactsUI18DuplicatesUIHelper : NSObject
  // instance methods
  -[_TtC10ContactsUI18DuplicatesUIHelper .cxx_destruct]
  -[_TtC10ContactsUI18DuplicatesUIHelper initWithDelegate:]
  -[_TtC10ContactsUI18DuplicatesUIHelper duplicateContactsListViewController:]
  -[_TtC10ContactsUI18DuplicatesUIHelper init]


_TtC10ContactsUI31DuplicateContactsDetailViewData : Swift._SwiftObject

_TtCV10ContactsUI24DuplicateContactCardView11Coordinator : NSObject <CNContactViewControllerDelegate, UINavigationControllerDelegate>
  // instance methods
  -[_TtCV10ContactsUI24DuplicateContactCardView11Coordinator .cxx_destruct]
  -[_TtCV10ContactsUI24DuplicateContactCardView11Coordinator contactViewController:didCompleteWithContact:]
  -[_TtCV10ContactsUI24DuplicateContactCardView11Coordinator init]


CNCapabilitiesManager : NSObject <IDSIDQueryControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNCapabilitiesManager defaultCapabilitiesManager]
  +[CNCapabilitiesManager _setDefaultCapabilitiesManager:]

  // instance methods
  -[CNCapabilitiesManager hasTelephonyCapability]
  -[CNCapabilitiesManager _isAppAvailable:]
  -[CNCapabilitiesManager addIDSServiceAvailabilityListener:selector:]
  -[CNCapabilitiesManager isConferencingAvailable]
  -[CNCapabilitiesManager hasForceTouchCapability]
  -[CNCapabilitiesManager idStatusUpdatedForDestinations:service:]
  -[CNCapabilitiesManager isConferencingEverGonnaBeAvailable]
  -[CNCapabilitiesManager hasSiriCapability]
  -[CNCapabilitiesManager hasSMSCapability]
  -[CNCapabilitiesManager _startListeningToIDSServiceAvailabilityIfNecessary]
  -[CNCapabilitiesManager dealloc]
  -[CNCapabilitiesManager conferenceURLForPhoneNumber:]
  -[CNCapabilitiesManager conferenceURLForDestinationID:]
  -[CNCapabilitiesManager isFaceTimeAudioAvailable]
  -[CNCapabilitiesManager isSensitiveUIAllowed]
  -[CNCapabilitiesManager .cxx_destruct]
  -[CNCapabilitiesManager hasVibratorCapability]
  -[CNCapabilitiesManager isPhoneAppAvailable]
  -[CNCapabilitiesManager isWeiboServiceAvailable]
  -[CNCapabilitiesManager _startListeningToIDSIDQueryControllerIfNecessary]
  -[CNCapabilitiesManager isMailAppAvailable]
  -[CNCapabilitiesManager hasCellularDataCapability]
  -[CNCapabilitiesManager isMessagesAppAvailable]
  -[CNCapabilitiesManager hasPreviouslyConferencedWithID:]
  -[CNCapabilitiesManager isEmailConfigured]
  -[CNCapabilitiesManager isMMSConfigured]
  -[CNCapabilitiesManager areFavoritesAvailable]
  -[CNCapabilitiesManager isMadridConfigured]
  -[CNCapabilitiesManager hasCameraCapability]
  -[CNCapabilitiesManager hasAdditionalTextTones]
  -[CNCapabilitiesManager hasCellularTelephonyCapability]
  -[CNCapabilitiesManager hasCellularTelephonyHardwareCapability]
  -[CNCapabilitiesManager removeIDSServiceAvailabilityListener:]
  -[CNCapabilitiesManager isFaceTimeAppAvailable]


CNContactStopSharingWithFamily : CNContactAction
  // instance methods
  -[CNContactStopSharingWithFamily isDestructive]
  -[CNContactStopSharingWithFamily title]
  -[CNContactStopSharingWithFamily wrapTitle]
  -[CNContactStopSharingWithFamily canPerformAction]
  -[CNContactStopSharingWithFamily performActionWithSender:]
  -[CNContactStopSharingWithFamily familySharedContainerExists]


CNCardPropertyNameGroup : CNCardPropertyGroup
  // instance methods
  -[CNCardPropertyNameGroup propertyGroupItemClass]


CNPropertyTTYAction : CNPropertyAction
  // instance methods
  -[CNPropertyTTYAction performActionForItem:sender:]


CNPropertyTTYRelayAction : CNPropertyAction
  // instance methods
  -[CNPropertyTTYRelayAction performActionForItem:sender:]


CNContactViewServiceViewController : UIViewController <CNContactViewHostProtocol, CNContactViewControllerPPTDelegate>
 @property  CNContactContentViewController *contactContentVC
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactViewServiceViewController classForContentViewControllerImpl]

  // instance methods
  -[CNContactViewServiceViewController viewDidAppear]
  -[CNContactViewServiceViewController .cxx_destruct]
  -[CNContactViewServiceViewController viewDidLoad]
  -[CNContactViewServiceViewController init]
  -[CNContactViewServiceViewController shouldPerformDefaultActionForContact:propertyKey:propertyIdentifier:]
  -[CNContactViewServiceViewController updateEditing:doneButtonEnabled:doneButtonText:]
  -[CNContactViewServiceViewController didCompleteWithContact:]
  -[CNContactViewServiceViewController didDeleteContact:]
  -[CNContactViewServiceViewController isPresentingFullscreen:]
  -[CNContactViewServiceViewController isPresentingEditingController:]
  -[CNContactViewServiceViewController didChangePreferredContentSize:]
  -[CNContactViewServiceViewController didExecuteClearRecentsDataAction]
  -[CNContactViewServiceViewController didExecuteDeleteFromDowntimeWhitelistAction]
  -[CNContactViewServiceViewController presentCancelConfirmationAlert]
  -[CNContactViewServiceViewController viewDidAppearForContactViewController:]
  -[CNContactViewServiceViewController contactContentVC]
  -[CNContactViewServiceViewController setContactContentVC:]


CNContactViewExtensionContext : NSExtensionContext <CNContactViewHostAsyncProtocol, CNContactViewServiceProtocol, CNContactViewHostProtocol>
 @property  BOOL asyncShouldPerformResponse
 @property  NSObject<OS_dispatch_semaphore> *asyncShouldPerformSemaphore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactViewExtensionContext _extensionAuxiliaryHostProtocol]
  +[CNContactViewExtensionContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[CNContactViewExtensionContext viewDidAppear]
  -[CNContactViewExtensionContext .cxx_destruct]
  -[CNContactViewExtensionContext host]
  -[CNContactViewExtensionContext shouldPerformDefaultActionForContact:propertyKey:propertyIdentifier:]
  -[CNContactViewExtensionContext updateEditing:doneButtonEnabled:doneButtonText:]
  -[CNContactViewExtensionContext didCompleteWithContact:]
  -[CNContactViewExtensionContext didDeleteContact:]
  -[CNContactViewExtensionContext isPresentingFullscreen:]
  -[CNContactViewExtensionContext isPresentingEditingController:]
  -[CNContactViewExtensionContext didChangePreferredContentSize:]
  -[CNContactViewExtensionContext didExecuteClearRecentsDataAction]
  -[CNContactViewExtensionContext didExecuteDeleteFromDowntimeWhitelistAction]
  -[CNContactViewExtensionContext presentCancelConfirmationAlert]
  -[CNContactViewExtensionContext setupWithOptions:readyBlock:]
  -[CNContactViewExtensionContext didChangeToEditMode:]
  -[CNContactViewExtensionContext didChangeToShowTitle:]
  -[CNContactViewExtensionContext editCancel]
  -[CNContactViewExtensionContext toggleEditing]
  -[CNContactViewExtensionContext performConfirmedCancel]
  -[CNContactViewExtensionContext asyncShouldPerformDefaultActionResponse:]
  -[CNContactViewExtensionContext asyncShouldPerformDefaultActionForContact:propertyKey:propertyIdentifier:]
  -[CNContactViewExtensionContext asyncShouldPerformResponse]
  -[CNContactViewExtensionContext setAsyncShouldPerformResponse:]
  -[CNContactViewExtensionContext asyncShouldPerformSemaphore]
  -[CNContactViewExtensionContext setAsyncShouldPerformSemaphore:]


CNAvatarAccessoryView : NSObject <CNAvatarAccessoryView>
 @property  NSData *imageData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNAvatarAccessoryView mediaContextBadgeWithImageData:]
  +[CNAvatarAccessoryView badgeWithSystemImageNamed:]


CNPropertyGroupNameItem : CNPropertyGroupItem
  // class methods
  +[CNPropertyGroupNameItem classForProperty:]

  // instance methods
  -[CNPropertyGroupNameItem supportsLabel]


CNContactOrbHeaderView : UIView
 @property  NSMutableArray *headerConstraints
 @property  NSArray *contacts
 @property  NSDictionary *nameTextAttributes
 @property  NSDictionary *taglineTextAttributes
 @property  UILabel *nameLabel
 @property  UILabel *taglineLabel
 @property  UILabel *fakeTaglineAlignmentLabel
 @property  UIView *markerView
 @property  {UIEdgeInsets=dddd} contentMargins
 @property  CNContactFormatter *contactFormatter
 @property  NSString *alternateName
 @property  NSString *message
 @property  BOOL centersPhotoAndLabels
 @property  double photoLabelSpacing
 @property  CNContactPhotoView *photoView
 @property  BOOL alwaysShowsMonogram

  // class methods
  +[CNContactOrbHeaderView descriptorForRequiredKeysIncludingAvatarViewDescriptors:]
  +[CNContactOrbHeaderView requiresConstraintBasedLayout]
  +[CNContactOrbHeaderView descriptorForRequiredKeysForContactFormatter:includingAvatarViewDescriptors:]

  // instance methods
  -[CNContactOrbHeaderView systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:]
  -[CNContactOrbHeaderView setMessage:]
  -[CNContactOrbHeaderView reloadData]
  -[CNContactOrbHeaderView updateConstraints]
  -[CNContactOrbHeaderView setContacts:]
  -[CNContactOrbHeaderView dealloc]
  -[CNContactOrbHeaderView .cxx_destruct]
  -[CNContactOrbHeaderView contacts]
  -[CNContactOrbHeaderView canPerformAction:withSender:]
  -[CNContactOrbHeaderView photoView]
  -[CNContactOrbHeaderView tintColorDidChange]
  -[CNContactOrbHeaderView nameLabel]
  -[CNContactOrbHeaderView copy:]
  -[CNContactOrbHeaderView canBecomeFirstResponder]
  -[CNContactOrbHeaderView contactFormatter]
  -[CNContactOrbHeaderView message]
  -[CNContactOrbHeaderView setContactFormatter:]
  -[CNContactOrbHeaderView contentMargins]
  -[CNContactOrbHeaderView setContentMargins:]
  -[CNContactOrbHeaderView setNameLabel:]
  -[CNContactOrbHeaderView handleNameLabelLongPress:]
  -[CNContactOrbHeaderView menuWillHide:]
  -[CNContactOrbHeaderView initWithContact:frame:]
  -[CNContactOrbHeaderView updateWithContacts:]
  -[CNContactOrbHeaderView updateFontSizes]
  -[CNContactOrbHeaderView photoLabelSpacing]
  -[CNContactOrbHeaderView setTaglineTextAttributes:]
  -[CNContactOrbHeaderView setNameTextAttributes:]
  -[CNContactOrbHeaderView _headerStringForContacts:]
  -[CNContactOrbHeaderView _taglineStringForContacts:]
  -[CNContactOrbHeaderView alternateName]
  -[CNContactOrbHeaderView setAlternateName:]
  -[CNContactOrbHeaderView centersPhotoAndLabels]
  -[CNContactOrbHeaderView setCentersPhotoAndLabels:]
  -[CNContactOrbHeaderView alwaysShowsMonogram]
  -[CNContactOrbHeaderView setAlwaysShowsMonogram:]
  -[CNContactOrbHeaderView headerConstraints]
  -[CNContactOrbHeaderView setHeaderConstraints:]
  -[CNContactOrbHeaderView nameTextAttributes]
  -[CNContactOrbHeaderView taglineTextAttributes]
  -[CNContactOrbHeaderView taglineLabel]
  -[CNContactOrbHeaderView setTaglineLabel:]
  -[CNContactOrbHeaderView fakeTaglineAlignmentLabel]
  -[CNContactOrbHeaderView setFakeTaglineAlignmentLabel:]
  -[CNContactOrbHeaderView markerView]
  -[CNContactOrbHeaderView setMarkerView:]


CNUIFamilyDowntimeContactPickerCell : UITableViewCell
  // class methods
  +[CNUIFamilyDowntimeContactPickerCell reuseIdentifier]

  // instance methods
  -[CNUIFamilyDowntimeContactPickerCell initWithStyle:reuseIdentifier:]


CNUIFamilyMemberContactsEditingStrategy : NSObject
 @property  NSArray *prohibitedPropertyKeys
 @property  @? sensitiveDataContactFilter

  // class methods
  +[CNUIFamilyMemberContactsEditingStrategy managedContactsStrategy]
  +[CNUIFamilyMemberContactsEditingStrategy whitelistedContactsStrategy]

  // instance methods
  -[CNUIFamilyMemberContactsEditingStrategy prohibitedPropertyKeys]
  -[CNUIFamilyMemberContactsEditingStrategy .cxx_destruct]
  -[CNUIFamilyMemberContactsEditingStrategy initWithProhibitedPropertyKeys:sensitiveDataContactFilter:]
  -[CNUIFamilyMemberContactsEditingStrategy sensitiveDataContactFilter]


CNUIFamilyMemberDowntimeContactPickerController : UIViewController <UITableViewDelegate, UITableViewDataSource, UISearchResultsUpdating, UISearchControllerDelegate, UISearchBarDelegate, UIAdaptivePresentationControllerDelegate, CNContactContentViewControllerDelegate>
 @property  UITableView *tableView
 @property  UISearchController *searchController
 @property  UISearchBar *searchBar
 @property  NSIndexPath *presentedContactIndexPath
 @property  CNContactViewController *contactViewController
 @property  CNContactFormatter *contactCellLabelFormatter
 @property  CNContactFormatter *contactCardWarningFormatter
 @property  CNUIFamilyMemberDowntimeContactDataSource *dataSource
 @property  CNUICoreContactEditingSession *editingSessionFromContactViewController
 @property  CNUIFamilyMemberContactsEditingStrategy *editingStrategy
 @property  FAFamilyMember *childFamilyMember
 @property  NSArray *allFamilyMembers
 @property  CNContact *preferredForNameMeContact
 @property  BOOL initialSelectionPerformed
 @property  <CNUIFamilyMemberDowntimeContactPickerControllerDelegate> *delegate
 @property  BOOL shouldPreselectFamilyMemberContacts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNUIFamilyMemberDowntimeContactPickerController familyCircle]
  +[CNUIFamilyMemberDowntimeContactPickerController descriptorForContactPropertiesSupportingPredicateEvaluation]

  // instance methods
  -[CNUIFamilyMemberDowntimeContactPickerController presentationControllerDidDismiss:]
  -[CNUIFamilyMemberDowntimeContactPickerController done:]
  -[CNUIFamilyMemberDowntimeContactPickerController cancel:]
  -[CNUIFamilyMemberDowntimeContactPickerController tableView:cellForRowAtIndexPath:]
  -[CNUIFamilyMemberDowntimeContactPickerController tableView:numberOfRowsInSection:]
  -[CNUIFamilyMemberDowntimeContactPickerController numberOfSectionsInTableView:]
  -[CNUIFamilyMemberDowntimeContactPickerController dataSource]
  -[CNUIFamilyMemberDowntimeContactPickerController setDelegate:]
  -[CNUIFamilyMemberDowntimeContactPickerController tableView:willDisplayCell:forRowAtIndexPath:]
  -[CNUIFamilyMemberDowntimeContactPickerController tableView:didSelectRowAtIndexPath:]
  -[CNUIFamilyMemberDowntimeContactPickerController delegate]
  -[CNUIFamilyMemberDowntimeContactPickerController viewDidAppear:]
  -[CNUIFamilyMemberDowntimeContactPickerController tableView:titleForHeaderInSection:]
  -[CNUIFamilyMemberDowntimeContactPickerController searchController]
  -[CNUIFamilyMemberDowntimeContactPickerController dealloc]
  -[CNUIFamilyMemberDowntimeContactPickerController .cxx_destruct]
  -[CNUIFamilyMemberDowntimeContactPickerController tableView]
  -[CNUIFamilyMemberDowntimeContactPickerController viewDidLoad]
  -[CNUIFamilyMemberDowntimeContactPickerController viewWillAppear:]
  -[CNUIFamilyMemberDowntimeContactPickerController setTableView:]
  -[CNUIFamilyMemberDowntimeContactPickerController contactViewController:didCompleteWithContact:]
  -[CNUIFamilyMemberDowntimeContactPickerController setSearchBar:]
  -[CNUIFamilyMemberDowntimeContactPickerController setSearchController:]
  -[CNUIFamilyMemberDowntimeContactPickerController updateSearchResultsForSearchController:]
  -[CNUIFamilyMemberDowntimeContactPickerController preferredForNameMeContact]
  -[CNUIFamilyMemberDowntimeContactPickerController searchBarCancelButtonClicked:]
  -[CNUIFamilyMemberDowntimeContactPickerController searchBar]
  -[CNUIFamilyMemberDowntimeContactPickerController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[CNUIFamilyMemberDowntimeContactPickerController tableView:didDeselectRowAtIndexPath:]
  -[CNUIFamilyMemberDowntimeContactPickerController tableView:editingStyleForRowAtIndexPath:]
  -[CNUIFamilyMemberDowntimeContactPickerController keyboardWillChange:]
  -[CNUIFamilyMemberDowntimeContactPickerController contactViewController:shouldPerformDefaultActionForContact:propertyKey:propertyIdentifier:]
  -[CNUIFamilyMemberDowntimeContactPickerController initWithChildFamilyMember:allFamilyMembers:contactStore:]
  -[CNUIFamilyMemberDowntimeContactPickerController initWithChildFamilyMember:allFamilyMembers:contactStore:editingStrategy:showingFamilyMemberContacts:]
  -[CNUIFamilyMemberDowntimeContactPickerController setupUI]
  -[CNUIFamilyMemberDowntimeContactPickerController setupTableView]
  -[CNUIFamilyMemberDowntimeContactPickerController setupSearchController]
  -[CNUIFamilyMemberDowntimeContactPickerController setupSearchBar]
  -[CNUIFamilyMemberDowntimeContactPickerController configureNavigationItem]
  -[CNUIFamilyMemberDowntimeContactPickerController startObservingKeyboardChanges]
  -[CNUIFamilyMemberDowntimeContactPickerController editingSessionFromContactViewController]
  -[CNUIFamilyMemberDowntimeContactPickerController saveSanitizedSelectedContacts:]
  -[CNUIFamilyMemberDowntimeContactPickerController warningMessageForContact:]
  -[CNUIFamilyMemberDowntimeContactPickerController shouldPreselectFamilyMemberContacts]
  -[CNUIFamilyMemberDowntimeContactPickerController setShouldPreselectFamilyMemberContacts:]
  -[CNUIFamilyMemberDowntimeContactPickerController presentedContactIndexPath]
  -[CNUIFamilyMemberDowntimeContactPickerController setPresentedContactIndexPath:]
  -[CNUIFamilyMemberDowntimeContactPickerController contactViewController]
  -[CNUIFamilyMemberDowntimeContactPickerController setContactViewController:]
  -[CNUIFamilyMemberDowntimeContactPickerController contactCellLabelFormatter]
  -[CNUIFamilyMemberDowntimeContactPickerController contactCardWarningFormatter]
  -[CNUIFamilyMemberDowntimeContactPickerController editingStrategy]
  -[CNUIFamilyMemberDowntimeContactPickerController childFamilyMember]
  -[CNUIFamilyMemberDowntimeContactPickerController allFamilyMembers]
  -[CNUIFamilyMemberDowntimeContactPickerController initialSelectionPerformed]
  -[CNUIFamilyMemberDowntimeContactPickerController setInitialSelectionPerformed:]


CNUICoreContactsAuthorizationModel : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *items
 @property  NSArray *changedItems
 @property  NSArray *remoteItems
 @property  NSArray *bundleIdentifiers
 @property  BOOL isEmpty

  // class methods
  +[CNUICoreContactsAuthorizationModel supportsSecureCoding]

  // instance methods
  -[CNUICoreContactsAuthorizationModel initWithItems:]
  -[CNUICoreContactsAuthorizationModel encodeWithCoder:]
  -[CNUICoreContactsAuthorizationModel .cxx_destruct]
  -[CNUICoreContactsAuthorizationModel isEmpty]
  -[CNUICoreContactsAuthorizationModel items]
  -[CNUICoreContactsAuthorizationModel copyWithZone:]
  -[CNUICoreContactsAuthorizationModel isEqual:]
  -[CNUICoreContactsAuthorizationModel init]
  -[CNUICoreContactsAuthorizationModel initWithCoder:]
  -[CNUICoreContactsAuthorizationModel bundleIdentifiers]
  -[CNUICoreContactsAuthorizationModel changedItems]
  -[CNUICoreContactsAuthorizationModel remoteItems]
  -[CNUICoreContactsAuthorizationModel itemWithMatchingBundleIdentifier:]
  -[CNUICoreContactsAuthorizationModel modelByCopyingItemsWithBundleIdentifier:]
  -[CNUICoreContactsAuthorizationModel modelByCopyingIconsOfRemoteItemsFromModel:]


CNMeCardSharingTextFieldTableViewCell : UITableViewCell
 @property  UITextField *textField

  // class methods
  +[CNMeCardSharingTextFieldTableViewCell cellIdentifier]

  // instance methods
  -[CNMeCardSharingTextFieldTableViewCell setTextField:]
  -[CNMeCardSharingTextFieldTableViewCell textField]
  -[CNMeCardSharingTextFieldTableViewCell .cxx_destruct]
  -[CNMeCardSharingTextFieldTableViewCell layoutSubviews]


CNPhotoPickerNavigationViewController : CNPortraitOnlyNavigationController
 @property  CNPhotoPickerTrapView *trapOverlayView
 @property  NSArray *trapOverlayConstraints
 @property  {CGSize=dd} previousSize
 @property  BOOL disablingRotation
 @property  BOOL isShowingKeyboard
 @property  BOOL allowRotation

  // instance methods
  -[CNPhotoPickerNavigationViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNPhotoPickerNavigationViewController previousSize]
  -[CNPhotoPickerNavigationViewController setPreviousSize:]
  -[CNPhotoPickerNavigationViewController initWithRootViewController:]
  -[CNPhotoPickerNavigationViewController viewWillLayoutSubviews]
  -[CNPhotoPickerNavigationViewController viewDidAppear:]
  -[CNPhotoPickerNavigationViewController dealloc]
  -[CNPhotoPickerNavigationViewController .cxx_destruct]
  -[CNPhotoPickerNavigationViewController supportedInterfaceOrientations]
  -[CNPhotoPickerNavigationViewController keyboardWillShow:]
  -[CNPhotoPickerNavigationViewController keyboardWillHide:]
  -[CNPhotoPickerNavigationViewController viewWillDisappear:]
  -[CNPhotoPickerNavigationViewController setAllowRotation:]
  -[CNPhotoPickerNavigationViewController endDisablingAutorotationIfNeeded]
  -[CNPhotoPickerNavigationViewController endDisablingAutorotation]
  -[CNPhotoPickerNavigationViewController beginDisablingAutorotation]
  -[CNPhotoPickerNavigationViewController shouldDisplayTrapOverlayView]
  -[CNPhotoPickerNavigationViewController isDisplayingTrapView]
  -[CNPhotoPickerNavigationViewController setupTrapOverlayView]
  -[CNPhotoPickerNavigationViewController updateTrapOverlayViewIfNecessaryWithCoordinator:]
  -[CNPhotoPickerNavigationViewController allowRotation]
  -[CNPhotoPickerNavigationViewController trapOverlayView]
  -[CNPhotoPickerNavigationViewController setTrapOverlayView:]
  -[CNPhotoPickerNavigationViewController trapOverlayConstraints]
  -[CNPhotoPickerNavigationViewController setTrapOverlayConstraints:]
  -[CNPhotoPickerNavigationViewController disablingRotation]
  -[CNPhotoPickerNavigationViewController setDisablingRotation:]
  -[CNPhotoPickerNavigationViewController isShowingKeyboard]
  -[CNPhotoPickerNavigationViewController setIsShowingKeyboard:]


CNCardActionGroupItem : CNCardGroupItem
 @property  NSArray *actions

  // class methods
  +[CNCardActionGroupItem actionGroupItemWithAction:]
  +[CNCardActionGroupItem actionGroupItemWithActions:]

  // instance methods
  -[CNCardActionGroupItem addAction:]
  -[CNCardActionGroupItem initWithAction:]
  -[CNCardActionGroupItem .cxx_destruct]
  -[CNCardActionGroupItem actions]
  -[CNCardActionGroupItem cellClass]
  -[CNCardActionGroupItem init]


CNCardFaceTimeGroup : CNCardGroup
  // instance methods
  -[CNCardFaceTimeGroup displayItems]
  -[CNCardFaceTimeGroup .cxx_destruct]


CNMeCardSharingHeaderViewController : UIViewController
 @property  CNMeCardSharingAvatarViewController *avatarViewController
 @property  NSString *name
 @property  unsigned long mode
 @property  CNMeCardSharingPickerLayoutAttributes *layoutAttributes
 @property  UILabel *nameLabel

  // instance methods
  -[CNMeCardSharingHeaderViewController viewWillLayoutSubviews]
  -[CNMeCardSharingHeaderViewController mode]
  -[CNMeCardSharingHeaderViewController .cxx_destruct]
  -[CNMeCardSharingHeaderViewController viewDidLoad]
  -[CNMeCardSharingHeaderViewController setMode:]
  -[CNMeCardSharingHeaderViewController layoutAttributes]
  -[CNMeCardSharingHeaderViewController nameLabel]
  -[CNMeCardSharingHeaderViewController setName:]
  -[CNMeCardSharingHeaderViewController name]
  -[CNMeCardSharingHeaderViewController setLayoutAttributes:]
  -[CNMeCardSharingHeaderViewController setNameLabel:]
  -[CNMeCardSharingHeaderViewController initWithAvatarViewController:name:layoutAttributes:]
  -[CNMeCardSharingHeaderViewController desiredHeight]
  -[CNMeCardSharingHeaderViewController avatarViewController]
  -[CNMeCardSharingHeaderViewController setAvatarViewController:]


CNGameCenterAddFriendAction : CNContactAction
  // instance methods
  -[CNGameCenterAddFriendAction title]
  -[CNGameCenterAddFriendAction performActionWithSender:]
  -[CNGameCenterAddFriendAction addContactAsFriend:]
  -[CNGameCenterAddFriendAction createInviteFriendViewControllerForContact:completionHandler:]
  -[CNGameCenterAddFriendAction contactPerHandleForContact:]
  -[CNGameCenterAddFriendAction actionTitleForContact:]
  -[CNGameCenterAddFriendAction addFriendsMenuProvider]


CNUINavigationListViewController : UIViewController <CNUINavigationListViewDataSource, CNUINavigationListViewDelegate, UITableViewDataSource, UITableViewDelegate>
 @property  CNUINavigationListView *navigationListView
 @property  CNUINavigationListViewCellHeightEstimator *cellHeightEstimator
 @property  CNUINavigationListItem *displayedExpandedItem
 @property  BOOL ignoreParentControllerResize
 @property  NSArray *items
 @property  CNUINavigationListItem *expandedItem
 @property  <CNUINavigationListViewControllerDelegate> *delegate
 @property  <CNUINavigationListStyle> *navigationListStyle
 @property  long long contentAlignment
 @property  BOOL showFirstSectionTopSeparator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNUINavigationListViewController itemRequiresDetailCell:]

  // instance methods
  -[CNUINavigationListViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNUINavigationListViewController tableView:cellForRowAtIndexPath:]
  -[CNUINavigationListViewController tableView:numberOfRowsInSection:]
  -[CNUINavigationListViewController setItems:]
  -[CNUINavigationListViewController itemAtIndex:]
  -[CNUINavigationListViewController setDelegate:]
  -[CNUINavigationListViewController delegate]
  -[CNUINavigationListViewController initWithNibName:bundle:]
  -[CNUINavigationListViewController .cxx_destruct]
  -[CNUINavigationListViewController itemAtIndexPath:]
  -[CNUINavigationListViewController viewDidLoad]
  -[CNUINavigationListViewController loadView]
  -[CNUINavigationListViewController items]
  -[CNUINavigationListViewController tableView:shouldDrawBottomSeparatorForSection:]
  -[CNUINavigationListViewController init]
  -[CNUINavigationListViewController tableView:shouldDrawTopSeparatorForSection:]
  -[CNUINavigationListViewController navigationListView:shouldHighlightRowAtIndexPath:]
  -[CNUINavigationListViewController navigationListView:shouldSelectRowAtIndexPath:]
  -[CNUINavigationListViewController navigationListView:accessoryButtonTappedForRowWithIndexPath:]
  -[CNUINavigationListViewController navigationListView:didSelectRowAtIndexPath:]
  -[CNUINavigationListViewController setNavigationListStyle:]
  -[CNUINavigationListViewController styleUpdated]
  -[CNUINavigationListViewController cellSeparatorHeight]
  -[CNUINavigationListViewController expandItem:]
  -[CNUINavigationListViewController toggleItem:]
  -[CNUINavigationListViewController canExpandItem:]
  -[CNUINavigationListViewController dequeueReusableStandardCell]
  -[CNUINavigationListViewController dequeueReusableDetailCell]
  -[CNUINavigationListViewController itemsForItem:]
  -[CNUINavigationListViewController contentSizeForExpandedItem:]
  -[CNUINavigationListViewController updateNavigationListView]
  -[CNUINavigationListViewController reloadNavigationListView]
  -[CNUINavigationListViewController updateNavigationListViewStateAnimated:]
  -[CNUINavigationListViewController canSelectItem:]
  -[CNUINavigationListViewController startTrackingRolloverWithGestureRecognizer:]
  -[CNUINavigationListViewController stopTrackingRollover]
  -[CNUINavigationListViewController navigationListView]
  -[CNUINavigationListViewController setNavigationListView:]
  -[CNUINavigationListViewController expandedItem]
  -[CNUINavigationListViewController setExpandedItem:]
  -[CNUINavigationListViewController navigationListStyle]
  -[CNUINavigationListViewController contentAlignment]
  -[CNUINavigationListViewController setContentAlignment:]
  -[CNUINavigationListViewController showFirstSectionTopSeparator]
  -[CNUINavigationListViewController setShowFirstSectionTopSeparator:]
  -[CNUINavigationListViewController cellHeightEstimator]
  -[CNUINavigationListViewController setCellHeightEstimator:]
  -[CNUINavigationListViewController displayedExpandedItem]
  -[CNUINavigationListViewController setDisplayedExpandedItem:]
  -[CNUINavigationListViewController ignoreParentControllerResize]
  -[CNUINavigationListViewController setIgnoreParentControllerResize:]


CNCardFaceTimeGroupItem : CNCardGroupItem

CNCardGroup : NSObject <NSCopying>
 @property  CNContact *contact
 @property  NSString *title
 @property  NSArray *actionItems
 @property  NSArray *displayItems
 @property  NSArray *editingItems
 @property  NSArray *actions
 @property  BOOL displaysDropdownMenu
 @property  BOOL useSplitActions
 @property  BOOL addSpacerFromPreviousGroup

  // class methods
  +[CNCardGroup groupForContact:]

  // instance methods
  -[CNCardGroup contact]
  -[CNCardGroup displayItems]
  -[CNCardGroup .cxx_destruct]
  -[CNCardGroup actions]
  -[CNCardGroup initWithContact:]
  -[CNCardGroup removeAllActions]
  -[CNCardGroup title]
  -[CNCardGroup copyWithZone:]
  -[CNCardGroup setContact:]
  -[CNCardGroup editingItems]
  -[CNCardGroup actionItems]
  -[CNCardGroup addAction:withTitle:]
  -[CNCardGroup addAction:withTitle:wrapTitle:]
  -[CNCardGroup addActionWithTitle:menuProvider:destructive:]
  -[CNCardGroup addActionWithTitle:target:selector:destructive:]
  -[CNCardGroup addActionWithTitle:target:selector:]
  -[CNCardGroup addAction:withTitle:color:transportType:]
  -[CNCardGroup addAction:withTitle:color:transportType:wrapTitle:]
  -[CNCardGroup addAction:withTitle:color:glyphColor:transportType:]
  -[CNCardGroup addAction:withTitle:color:glyphColor:transportType:wrapTitle:]
  -[CNCardGroup removeActionWithTarget:selector:]
  -[CNCardGroup unwrappedTargetForAction:]
  -[CNCardGroup unwrappedSelectorForAction:]
  -[CNCardGroup removeActionWithTitle:]
  -[CNCardGroup _loadActionItems]
  -[CNCardGroup displaysDropdownMenu]
  -[CNCardGroup setDisplaysDropdownMenu:]
  -[CNCardGroup useSplitActions]
  -[CNCardGroup setUseSplitActions:]
  -[CNCardGroup addSpacerFromPreviousGroup]
  -[CNCardGroup setAddSpacerFromPreviousGroup:]


CNCardGroupItem : NSObject

CNContactListDuplicatesBannerCell : UICollectionViewListCell <CNContactListDuplicatesBannerViewDelegate>
 @property  unsigned long state
 @property  long long duplicatesCount
 @property  CNContactListDuplicatesBannerView *duplicatesBannerView
 @property  <CNContactListDuplicatesBannerCellDelegate> *delegate
 @property  CNContactListStyleApplier *contactListStyleApplier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactListDuplicatesBannerCell contactListStyleApplier]
  -[CNContactListDuplicatesBannerCell setContactListStyleApplier:]
  -[CNContactListDuplicatesBannerCell setDelegate:]
  -[CNContactListDuplicatesBannerCell delegate]
  -[CNContactListDuplicatesBannerCell state]
  -[CNContactListDuplicatesBannerCell .cxx_destruct]
  -[CNContactListDuplicatesBannerCell initWithFrame:]
  -[CNContactListDuplicatesBannerCell setState:]
  -[CNContactListDuplicatesBannerCell duplicatesBannerViewDidTapDismiss:]
  -[CNContactListDuplicatesBannerCell duplicatesBannerViewDidTapViewDuplicates:]
  -[CNContactListDuplicatesBannerCell updateWithState:]
  -[CNContactListDuplicatesBannerCell updateWithDuplicatesFoundBannerWithCount:]
  -[CNContactListDuplicatesBannerCell removeBannerView]
  -[CNContactListDuplicatesBannerCell updateWithCount:]
  -[CNContactListDuplicatesBannerCell updateText:]
  -[CNContactListDuplicatesBannerCell duplicatesCount]
  -[CNContactListDuplicatesBannerCell setDuplicatesCount:]
  -[CNContactListDuplicatesBannerCell duplicatesBannerView]
  -[CNContactListDuplicatesBannerCell setDuplicatesBannerView:]


CNPhotoPickerCollectionViewCell : UICollectionViewCell
 @property  CAShapeLayer *selectionLayer
 @property  UILabel *captionLabel
 @property  UIView *containerView
 @property  UIView *containerContentView
 @property  BOOL displaySelection
 @property  BOOL displaysBorder
 @property  unsigned long cellStyle
 @property  NSUUID *displaySessionUUID

  // class methods
  +[CNPhotoPickerCollectionViewCell cellIdentifier]
  +[CNPhotoPickerCollectionViewCell cornerRadiusForBounds:forCellStyle:]
  +[CNPhotoPickerCollectionViewCell selectionPathInBounds:forCellStyle:]

  // instance methods
  -[CNPhotoPickerCollectionViewCell cellStyle]
  -[CNPhotoPickerCollectionViewCell setSelected:]
  -[CNPhotoPickerCollectionViewCell .cxx_destruct]
  -[CNPhotoPickerCollectionViewCell prepareForReuse]
  -[CNPhotoPickerCollectionViewCell setContainerView:]
  -[CNPhotoPickerCollectionViewCell containerView]
  -[CNPhotoPickerCollectionViewCell layoutSubviews]
  -[CNPhotoPickerCollectionViewCell initWithFrame:]
  -[CNPhotoPickerCollectionViewCell setCellStyle:]
  -[CNPhotoPickerCollectionViewCell updateWithView:animation:]
  -[CNPhotoPickerCollectionViewCell updateWithCaption:]
  -[CNPhotoPickerCollectionViewCell updateCaptionFrame]
  -[CNPhotoPickerCollectionViewCell setDisplaysBorder:]
  -[CNPhotoPickerCollectionViewCell updateBorderTintColor:]
  -[CNPhotoPickerCollectionViewCell clearContainerViewAnimated:withCompletion:]
  -[CNPhotoPickerCollectionViewCell displaySelection]
  -[CNPhotoPickerCollectionViewCell setDisplaySelection:]
  -[CNPhotoPickerCollectionViewCell displaysBorder]
  -[CNPhotoPickerCollectionViewCell displaySessionUUID]
  -[CNPhotoPickerCollectionViewCell setDisplaySessionUUID:]
  -[CNPhotoPickerCollectionViewCell selectionLayer]
  -[CNPhotoPickerCollectionViewCell setSelectionLayer:]
  -[CNPhotoPickerCollectionViewCell captionLabel]
  -[CNPhotoPickerCollectionViewCell setCaptionLabel:]
  -[CNPhotoPickerCollectionViewCell containerContentView]
  -[CNPhotoPickerCollectionViewCell setContainerContentView:]


CNContactListActionAuthorizationContext : NSObject
 @property  <CNContactListAction> *action
 @property  long long type

  // instance methods
  -[CNContactListActionAuthorizationContext type]
  -[CNContactListActionAuthorizationContext .cxx_destruct]
  -[CNContactListActionAuthorizationContext action]
  -[CNContactListActionAuthorizationContext setType:]
  -[CNContactListActionAuthorizationContext setAction:]


CNContactListActionExecutor : NSObject <CNUIEditAuthorizationControllerDelegate>
 @property  NSUndoManager *undoManager
 @property  CNUIEditAuthorizationController *editAuthorizationController
 @property  CNContactListActionAuthorizationContext *authorizationContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactListActionExecutor editAuthorizationController:authorizationDidFinishWithResult:]
  -[CNContactListActionExecutor undoManager]
  -[CNContactListActionExecutor authorizationContext]
  -[CNContactListActionExecutor .cxx_destruct]
  -[CNContactListActionExecutor undoAction:]
  -[CNContactListActionExecutor initWithUndoManager:]
  -[CNContactListActionExecutor executeAction:]
  -[CNContactListActionExecutor executeUndoableAction:]
  -[CNContactListActionExecutor showEditAuthorizationPaneForAction:withActionType:]
  -[CNContactListActionExecutor showEditAuthorizationPane:animated:forAction:]
  -[CNContactListActionExecutor editAuthorizationController]
  -[CNContactListActionExecutor setEditAuthorizationController:]
  -[CNContactListActionExecutor setAuthorizationContext:]


CNPhotoPickerProviderInjectedItemsGroup : CNPhotoPickerProviderGroup
  // instance methods
  -[CNPhotoPickerProviderInjectedItemsGroup initWithEnvironment:]


CNPhotoPickerProviderGroup : NSObject <CNPhotoPickerProviderItemDelegate>
 @property  NSArray *providers
 @property  NSArray *displayItems
 @property  NSArray *addedItems
 @property  NSArray *removedItems
 @property  NSMutableDictionary *itemsGroupedByProvider
 @property  NSArray *availablePaddingItems
 @property  NSArray *removedPaddingItems
 @property  NSArray *paddingItems
 @property  <CNScheduler> *workQueue
 @property  <CNScheduler> *providerItemRenderingQueue
 @property  <CNScheduler> *callbackQueue
 @property  long long groupType
 @property  BOOL allowAddItem
 @property  BOOL showCircleMask
 @property  <CNPhotoPickerProviderGroupDelegate> *delegate
 @property  unsigned long itemsPerRow
 @property  NSArray *addItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPhotoPickerProviderGroup injectedItemsGroupWithEnvironment:]
  +[CNPhotoPickerProviderGroup suggestionsGroupWithProviders:environment:allowAddItem:]
  +[CNPhotoPickerProviderGroup animojiGroupWithProviders:environment:allowAddItem:]
  +[CNPhotoPickerProviderGroup emojiGroupWithProviders:environment:allowAddItem:]
  +[CNPhotoPickerProviderGroup addItemsGroupWithProviders:environment:]

  // instance methods
  -[CNPhotoPickerProviderGroup displayItems]
  -[CNPhotoPickerProviderGroup setProviders:]
  -[CNPhotoPickerProviderGroup setDelegate:]
  -[CNPhotoPickerProviderGroup workQueue]
  -[CNPhotoPickerProviderGroup delegate]
  -[CNPhotoPickerProviderGroup callbackQueue]
  -[CNPhotoPickerProviderGroup providers]
  -[CNPhotoPickerProviderGroup numberOfItems]
  -[CNPhotoPickerProviderGroup groupType]
  -[CNPhotoPickerProviderGroup .cxx_destruct]
  -[CNPhotoPickerProviderGroup setDisplayItems:]
  -[CNPhotoPickerProviderGroup initWithProviders:groupType:environment:allowAddItem:]
  -[CNPhotoPickerProviderGroup providerItemDidUpdate:]
  -[CNPhotoPickerProviderGroup loadProvidersItemsForSize:itemsPerRow:scale:RTL:]
  -[CNPhotoPickerProviderGroup suggestionsProviderPrecedingFacesProvider]
  -[CNPhotoPickerProviderGroup setItemsPerRow:]
  -[CNPhotoPickerProviderGroup itemsForProviderIdentifier:]
  -[CNPhotoPickerProviderGroup reloadDisplayItemsNotifyDelegate:]
  -[CNPhotoPickerProviderGroup prepareDisplayItems:]
  -[CNPhotoPickerProviderGroup addItems]
  -[CNPhotoPickerProviderGroup providerItemAtIndex:]
  -[CNPhotoPickerProviderGroup addProviderItem:]
  -[CNPhotoPickerProviderGroup removeProviderItem:]
  -[CNPhotoPickerProviderGroup removeAllAddedProviderItems]
  -[CNPhotoPickerProviderGroup hasAddedProviderItems]
  -[CNPhotoPickerProviderGroup allowAddItem]
  -[CNPhotoPickerProviderGroup showCircleMask]
  -[CNPhotoPickerProviderGroup itemsPerRow]
  -[CNPhotoPickerProviderGroup setAddItems:]
  -[CNPhotoPickerProviderGroup addedItems]
  -[CNPhotoPickerProviderGroup setAddedItems:]
  -[CNPhotoPickerProviderGroup removedItems]
  -[CNPhotoPickerProviderGroup setRemovedItems:]
  -[CNPhotoPickerProviderGroup itemsGroupedByProvider]
  -[CNPhotoPickerProviderGroup setItemsGroupedByProvider:]
  -[CNPhotoPickerProviderGroup availablePaddingItems]
  -[CNPhotoPickerProviderGroup setAvailablePaddingItems:]
  -[CNPhotoPickerProviderGroup removedPaddingItems]
  -[CNPhotoPickerProviderGroup setRemovedPaddingItems:]
  -[CNPhotoPickerProviderGroup paddingItems]
  -[CNPhotoPickerProviderGroup setPaddingItems:]
  -[CNPhotoPickerProviderGroup providerItemRenderingQueue]


CNUIFontRepository : NSObject
  // class methods
  +[CNUIFontRepository visualIdentityPickerHeaderTitleFont]
  +[CNUIFontRepository contactListBannerFootnoteFontSecondary]
  +[CNUIFontRepository contactListBannerFootnoteFontPrimary]
  +[CNUIFontRepository groupHeaderWrappedTitleFont]
  +[CNUIFontRepository navigationListDetailCellTitleFontRegular]
  +[CNUIFontRepository navigationListDetailCellSubtitleFontRegular]
  +[CNUIFontRepository contactCardPhotoPickerCaptionFont]
  +[CNUIFontRepository contactStyleDefaultItalicTextFont]
  +[CNUIFontRepository carPlayContactInfoViewPrimaryLabelFont]
  +[CNUIFontRepository contactStyleDefaultBoldTextFont]
  +[CNUIFontRepository navigationListCellSubtitleFontRegular]
  +[CNUIFontRepository catalystNameTextFieldsFont]
  +[CNUIFontRepository carPlayNoContentViewTitleFont]
  +[CNUIFontRepository carPlayFontWithStyle:]
  +[CNUIFontRepository contactListContactCountFont]
  +[CNUIFontRepository contactCardRecentBadgeFont]
  +[CNUIFontRepository catalystAudienceDetailsLabelFont]
  +[CNUIFontRepository carPlayTableViewCellSubtitleFont]
  +[CNUIFontRepository carPlayFontWithBoldWeightStyle:]
  +[CNUIFontRepository contactListBannerTitleFontPrimary]
  +[CNUIFontRepository navigationListCellTitleFontRegular]
  +[CNUIFontRepository carPlayNavigationBarContactNameFont]
  +[CNUIFontRepository catalystLabelsFont]
  +[CNUIFontRepository carPlayTableViewCellTitleFont]
  +[CNUIFontRepository groupsAllButtonFont]
  +[CNUIFontRepository groupHeaderTitleFont]
  +[CNUIFontRepository contactStyleDefaultTextFont]
  +[CNUIFontRepository carPlaySymbolImageFont]
  +[CNUIFontRepository contactSuggestionsHeaderTitleFont]
  +[CNUIFontRepository visualIdentityPickerHeaderPlaceholderFont]
  +[CNUIFontRepository contactSuggestionsNameFont]
  +[CNUIFontRepository carPlayFontWithMediumWeightStyle:]
  +[CNUIFontRepository contactCardPhotoPickerActionButtonFont]
  +[CNUIFontRepository groupHeaderSubTitleFont]
  +[CNUIFontRepository carPlayNoContentViewSiriButtonFont]
  +[CNUIFontRepository visualIdentityEditorSegmentedControlFont]
  +[CNUIFontRepository contactCardWarningHeaderLabelFont]
  +[CNUIFontRepository carPlayQuickActionButtonTitleFont]
  +[CNUIFontRepository visualIdentityEditorTextFont]
  +[CNUIFontRepository carPlayContactInfoViewSecondaryLabelFont]
  +[CNUIFontRepository groupHeaderActionButtonFont]
  +[CNUIFontRepository contactListDuplicateCountFont]
  +[CNUIFontRepository fontWithBoldWeightStyle:]
  +[CNUIFontRepository groupHeaderActionButtonWrappedFont]


CNQuickActionsManager : NSObject <CNQuickContactActionDelegate>
 @property  NSMutableArray *updateBlocks
 @property  NSDictionary *groups
 @property  CNQuickFaceTimeAction *faceTimeVideoAction
 @property  CNQuickFaceTimeAction *faceTimeAudioAction
 @property  CNQuickActionsUsageManager *usageManager
 @property  NSArray *subManagers
 @property  NSArray *contacts
 @property  CNContact *contact
 @property  <CNQuickActionsManagerDelegate> *delegate
 @property  NSArray *categories
 @property  unsigned long desiredNumberOfActions
 @property  BOOL bypassActionValidation
 @property  BOOL sortsWithDuet
 @property  BOOL useDuetIfAvailable
 @property  NSArray *actions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNQuickActionsManager descriptorForRequiredKeys]
  +[CNQuickActionsManager defaultCategories]
  +[CNQuickActionsManager hasActionsForContact:]
  +[CNQuickActionsManager actionsManagerForContacts:]

  // instance methods
  -[CNQuickActionsManager setGroups:]
  -[CNQuickActionsManager groups]
  -[CNQuickActionsManager bypassActionValidation]
  -[CNQuickActionsManager quickActions]
  -[CNQuickActionsManager categories]
  -[CNQuickActionsManager contact]
  -[CNQuickActionsManager setDelegate:]
  -[CNQuickActionsManager _addAction:]
  -[CNQuickActionsManager delegate]
  -[CNQuickActionsManager _openURL:]
  -[CNQuickActionsManager setContacts:]
  -[CNQuickActionsManager updateBlocks]
  -[CNQuickActionsManager dealloc]
  -[CNQuickActionsManager .cxx_destruct]
  -[CNQuickActionsManager contacts]
  -[CNQuickActionsManager actions]
  -[CNQuickActionsManager setBypassActionValidation:]
  -[CNQuickActionsManager setUpdateBlocks:]
  -[CNQuickActionsManager setCategories:]
  -[CNQuickActionsManager contactActionDidUpdate:]
  -[CNQuickActionsManager contactAction:presentViewController:]
  -[CNQuickActionsManager initWithContacts:]
  -[CNQuickActionsManager setSortsWithDuet:]
  -[CNQuickActionsManager sortsWithDuet]
  -[CNQuickActionsManager _createGroupsForPropertyKeys:]
  -[CNQuickActionsManager _orderedLabels]
  -[CNQuickActionsManager _ignoredLabels]
  -[CNQuickActionsManager _shouldGroupActionsInCategory:]
  -[CNQuickActionsManager _groupedActionsFromOrderedActionsByCategories:]
  -[CNQuickActionsManager _hierarchicalActionsForCategory:fromActions:askDelegate:]
  -[CNQuickActionsManager _expandedActionsFromOrderedActionsByCategories:totalNumberOfActions:]
  -[CNQuickActionsManager _hybridActionsFromOrderedActionsByCategories:totalNumberOfActions:]
  -[CNQuickActionsManager _addActionForPropertyItem:category:propertyActionClass:]
  -[CNQuickActionsManager _updateActionsForPropertyItems:category:propertyActionClass:]
  -[CNQuickActionsManager _updateIDSActionsForPropertyItems:category:serviceName:propertyActionClass:]
  -[CNQuickActionsManager _propertyItemsForKey:]
  -[CNQuickActionsManager updateActionsWithBlock:]
  -[CNQuickActionsManager _updateSingleContactActions]
  -[CNQuickActionsManager _updateMultiContactActions]
  -[CNQuickActionsManager refreshActionsAndForceSendUpdate:]
  -[CNQuickActionsManager refreshActions]
  -[CNQuickActionsManager stopUpdatingActions]
  -[CNQuickActionsManager _actionsUpdated]
  -[CNQuickActionsManager actionPerformed:]
  -[CNQuickActionsManager desiredNumberOfActions]
  -[CNQuickActionsManager setDesiredNumberOfActions:]
  -[CNQuickActionsManager useDuetIfAvailable]
  -[CNQuickActionsManager setUseDuetIfAvailable:]
  -[CNQuickActionsManager faceTimeVideoAction]
  -[CNQuickActionsManager setFaceTimeVideoAction:]
  -[CNQuickActionsManager faceTimeAudioAction]
  -[CNQuickActionsManager setFaceTimeAudioAction:]
  -[CNQuickActionsManager usageManager]
  -[CNQuickActionsManager setUsageManager:]
  -[CNQuickActionsManager subManagers]
  -[CNQuickActionsManager setSubManagers:]


CNUIContactsAuthorizationStore : NSObject <CNUIContactsAuthorizationModelFetching, CNUIContactsAuthorizationModelSaving>
 @property  NSString *bundleIdentifier
 @property  <CNTCCSettings> *tccSettings
 @property  <CNUICoreRemoteApplicationIconFetching> *iconFetcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNUIContactsAuthorizationStore records]
  -[CNUIContactsAuthorizationStore .cxx_destruct]
  -[CNUIContactsAuthorizationStore initWithBundleIdentifier:]
  -[CNUIContactsAuthorizationStore bundleIdentifier]
  -[CNUIContactsAuthorizationStore init]
  -[CNUIContactsAuthorizationStore contactsAuthorizationModel]
  -[CNUIContactsAuthorizationStore contactsAuthorizationModelByLoadingIconsOfRemoteItemsInModel:]
  -[CNUIContactsAuthorizationStore saveContactsAuthorizationModel:]
  -[CNUIContactsAuthorizationStore recordForBundleIdentifier:]
  -[CNUIContactsAuthorizationStore tccSettings]
  -[CNUIContactsAuthorizationStore iconFetcher]


CNUICancelBarButtonItem : UIBarButtonItem
 @property  @? didTapHandler

  // instance methods
  -[CNUICancelBarButtonItem .cxx_destruct]
  -[CNUICancelBarButtonItem didTap:]
  -[CNUICancelBarButtonItem initWithDidTapHandler:]
  -[CNUICancelBarButtonItem didTapHandler]


CNStarkContactsBrowserViewController : UINavigationController
  // instance methods
  -[CNStarkContactsBrowserViewController init]


CNCardLinkedCardsGroup : CNCardGroup
 @property  NSArray *linkedContacts

  // instance methods
  -[CNCardLinkedCardsGroup displayItems]
  -[CNCardLinkedCardsGroup .cxx_destruct]
  -[CNCardLinkedCardsGroup title]
  -[CNCardLinkedCardsGroup editingItems]
  -[CNCardLinkedCardsGroup linkedContacts]
  -[CNCardLinkedCardsGroup setLinkedContacts:]


CNContactContentContainerViewController : CNContactContentViewController <CNContactContentDisplayViewControllerDelegate, CNContactContentEditViewControllerDelegate, CNContactContentNavigationItemDelegate, CNContactActionDelegate, CNContactContentViewController, UIViewControllerRestoration>
 @property  CNContactContentDisplayViewController *displayContactViewController
 @property  CNContactContentEditViewController *editContactViewController
 @property  BOOL isSupressingViewConfigurationUpdates
 @property  CNContactEditAuthorizationManager *editAuthorizationManager
 @property  CNContactFormatter *contactFormatter
 @property  NSArray *activatedConstraints
 @property  NSLayoutConstraint *headerHeightConstraint
 @property  BOOL outOfProcessSetupComplete
 @property  BOOL didSetFirstResponder
 @property  UIKeyCommand *saveCommand
 @property  UIKeyCommand *editCommand
 @property  UIKeyCommand *cancelCommand
 @property  CNUIContactsEnvironment *environment
 @property  CNContactViewCache *contactViewCache
 @property  CNUIUserActivityManager *activityManager
 @property  BOOL runningPPT
 @property  BOOL didSetNewContact
 @property  BOOL supportsDrafts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <CNContactViewHostProtocol> *delegate
 @property  <CNContactViewControllerPPTDelegate> *pptDelegate

  // class methods
  +[CNContactContentContainerViewController descriptorForRequiredKeys]
  +[CNContactContentContainerViewController viewControllerWithRestorationIdentifierPath:coder:]
  +[CNContactContentContainerViewController tableViewStyle]
  +[CNContactContentContainerViewController descriptorForRequiredKeysForContact:]
  +[CNContactContentContainerViewController descriptorForRequiredKeysWithDescription:]
  +[CNContactContentContainerViewController boolStateRestorationProperties]

  // instance methods
  -[CNContactContentContainerViewController managedConfiguration]
  -[CNContactContentContainerViewController isOutOfProcess]
  -[CNContactContentContainerViewController setManagedConfiguration:]
  -[CNContactContentContainerViewController encodeRestorableStateWithCoder:]
  -[CNContactContentContainerViewController setContactStore:]
  -[CNContactContentContainerViewController presentingDelegate]
  -[CNContactContentContainerViewController activityManager]
  -[CNContactContentContainerViewController setMessage:]
  -[CNContactContentContainerViewController initWithEnvironment:]
  -[CNContactContentContainerViewController updateViewConstraints]
  -[CNContactContentContainerViewController setPresentingDelegate:]
  -[CNContactContentContainerViewController _canShowWhileLocked]
  -[CNContactContentContainerViewController setRunningPPT:]
  -[CNContactContentContainerViewController setNeedsReload]
  -[CNContactContentContainerViewController contact]
  -[CNContactContentContainerViewController setAllowsEditing:]
  -[CNContactContentContainerViewController reloadDataIfNeeded]
  -[CNContactContentContainerViewController allowsEditing]
  -[CNContactContentContainerViewController setupConstraints]
  -[CNContactContentContainerViewController setDelegate:]
  -[CNContactContentContainerViewController allowsContactBlocking]
  -[CNContactContentContainerViewController setEditing:animated:]
  -[CNContactContentContainerViewController contactViewCache]
  -[CNContactContentContainerViewController delegate]
  -[CNContactContentContainerViewController hasPendingChanges]
  -[CNContactContentContainerViewController initWithNibName:bundle:]
  -[CNContactContentContainerViewController setProhibitedPropertyKeys:]
  -[CNContactContentContainerViewController viewDidAppear:]
  -[CNContactContentContainerViewController dealloc]
  -[CNContactContentContainerViewController prohibitedPropertyKeys]
  -[CNContactContentContainerViewController allowsDeletion]
  -[CNContactContentContainerViewController mode]
  -[CNContactContentContainerViewController .cxx_destruct]
  -[CNContactContentContainerViewController setIgnoresParentalRestrictions:]
  -[CNContactContentContainerViewController viewDidLoad]
  -[CNContactContentContainerViewController initWithContact:]
  -[CNContactContentContainerViewController needsReload]
  -[CNContactContentContainerViewController viewWillAppear:]
  -[CNContactContentContainerViewController setMode:]
  -[CNContactContentContainerViewController setAllowsContactBlocking:]
  -[CNContactContentContainerViewController ignoresParentalRestrictions]
  -[CNContactContentContainerViewController viewWillDisappear:]
  -[CNContactContentContainerViewController contactViewController:didDeleteContact:]
  -[CNContactContentContainerViewController setContact:]
  -[CNContactContentContainerViewController setPolicy:]
  -[CNContactContentContainerViewController contactStore]
  -[CNContactContentContainerViewController adaptivePresentationStyleForPresentationController:]
  -[CNContactContentContainerViewController contactFormatter]
  -[CNContactContentContainerViewController message]
  -[CNContactContentContainerViewController setTitle:]
  -[CNContactContentContainerViewController environment]
  -[CNContactContentContainerViewController setContactFormatter:]
  -[CNContactContentContainerViewController policy]
  -[CNContactContentContainerViewController setContactDelegate:]
  -[CNContactContentContainerViewController contactDelegate]
  -[CNContactContentContainerViewController contentScrollViewForEdge:]
  -[CNContactContentContainerViewController isModalInPresentation]
  -[CNContactContentContainerViewController allowsSharing]
  -[CNContactContentContainerViewController setAllowsSharing:]
  -[CNContactContentContainerViewController setAllowsActions:]
  -[CNContactContentContainerViewController setupWithOptions:readyBlock:]
  -[CNContactContentContainerViewController didChangeToEditMode:]
  -[CNContactContentContainerViewController editCancel]
  -[CNContactContentContainerViewController toggleEditing]
  -[CNContactContentContainerViewController performConfirmedCancel]
  -[CNContactContentContainerViewController alternateName]
  -[CNContactContentContainerViewController setAlternateName:]
  -[CNContactContentContainerViewController contactViewController:shouldPerformDefaultActionForContact:propertyKey:propertyIdentifier:]
  -[CNContactContentContainerViewController applicationLeftForeground:]
  -[CNContactContentContainerViewController toggleEditing:]
  -[CNContactContentContainerViewController editCancel:]
  -[CNContactContentContainerViewController contactDisplayViewControllerWillPresentFullscreen:]
  -[CNContactContentContainerViewController contactDisplayViewControllerWillDismissFullscreen:]
  -[CNContactContentContainerViewController contactDisplayViewController:didChangeToEditMode:]
  -[CNContactContentContainerViewController contactEditViewControllerWillPresentFullscreen:]
  -[CNContactContentContainerViewController contactEditViewControllerWillDismissFullscreen:]
  -[CNContactContentContainerViewController contactEditViewController:didCompleteWithContact:]
  -[CNContactContentContainerViewController contactEditViewControllerRequestsCancelConfirmationAlert:]
  -[CNContactContentContainerViewController contactNavigationItemProvider:didUpdateNavigationItem:doneButtonItem:]
  -[CNContactContentContainerViewController pptDelegate]
  -[CNContactContentContainerViewController setPptDelegate:]
  -[CNContactContentContainerViewController createDisplayViewControllerIfNeeded]
  -[CNContactContentContainerViewController createEditingViewControllerIfNeeded]
  -[CNContactContentContainerViewController contactView]
  -[CNContactContentContainerViewController contactHeaderView]
  -[CNContactContentContainerViewController displayHeaderView]
  -[CNContactContentContainerViewController applyChangesToNavigationItemFromItem:]
  -[CNContactContentContainerViewController setDisplayedProperties:]
  -[CNContactContentContainerViewController displayedProperties]
  -[CNContactContentContainerViewController setAlwaysEditing:]
  -[CNContactContentContainerViewController alwaysEditing]
  -[CNContactContentContainerViewController allowsActions]
  -[CNContactContentContainerViewController setAllowsPropertyActions:]
  -[CNContactContentContainerViewController allowsPropertyActions]
  -[CNContactContentContainerViewController setAllowsCardActions:]
  -[CNContactContentContainerViewController allowsCardActions]
  -[CNContactContentContainerViewController setAllowsConferencing:]
  -[CNContactContentContainerViewController allowsConferencing]
  -[CNContactContentContainerViewController setAllowsAddToFavorites:]
  -[CNContactContentContainerViewController allowsAddToFavorites]
  -[CNContactContentContainerViewController setAllowsSendMessage:]
  -[CNContactContentContainerViewController allowsSendMessage]
  -[CNContactContentContainerViewController setAllowsAddingToAddressBook:]
  -[CNContactContentContainerViewController allowsAddingToAddressBook]
  -[CNContactContentContainerViewController setShouldShowLinkedContacts:]
  -[CNContactContentContainerViewController shouldShowLinkedContacts]
  -[CNContactContentContainerViewController setAllowsSettingLinkedContactsAsPreferred:]
  -[CNContactContentContainerViewController allowsSettingLinkedContactsAsPreferred]
  -[CNContactContentContainerViewController setAllowsDeletion:]
  -[CNContactContentContainerViewController setAllowsActionsModel:]
  -[CNContactContentContainerViewController allowsActionsModel]
  -[CNContactContentContainerViewController setAllowsDisplayModePickerActions:]
  -[CNContactContentContainerViewController allowsDisplayModePickerActions]
  -[CNContactContentContainerViewController setAllowsEditPhoto:]
  -[CNContactContentContainerViewController allowsEditPhoto]
  -[CNContactContentContainerViewController setEditingProposedInformation:]
  -[CNContactContentContainerViewController editingProposedInformation]
  -[CNContactContentContainerViewController setHideCardActions:]
  -[CNContactContentContainerViewController hideCardActions]
  -[CNContactContentContainerViewController setIsMailVIP:]
  -[CNContactContentContainerViewController isMailVIP]
  -[CNContactContentContainerViewController setShowContactBlockingFirst:]
  -[CNContactContentContainerViewController showContactBlockingFirst]
  -[CNContactContentContainerViewController setWarningMessage:]
  -[CNContactContentContainerViewController warningMessage]
  -[CNContactContentContainerViewController setImportantMessage:]
  -[CNContactContentContainerViewController importantMessage]
  -[CNContactContentContainerViewController setVerifiedInfoMessage:]
  -[CNContactContentContainerViewController verifiedInfoMessage]
  -[CNContactContentContainerViewController setPrimaryProperty:]
  -[CNContactContentContainerViewController primaryProperty]
  -[CNContactContentContainerViewController setPersonHeaderView:]
  -[CNContactContentContainerViewController personHeaderView]
  -[CNContactContentContainerViewController setPersonHeaderViewController:]
  -[CNContactContentContainerViewController personHeaderViewController]
  -[CNContactContentContainerViewController cardTopGroup]
  -[CNContactContentContainerViewController cardBottomGroup]
  -[CNContactContentContainerViewController cardFooterGroup]
  -[CNContactContentContainerViewController favoritesDidChangeWithNotification:]
  -[CNContactContentContainerViewController _refetchContact]
  -[CNContactContentContainerViewController originalContacts]
  -[CNContactContentContainerViewController reloadDataPreservingChanges:]
  -[CNContactContentContainerViewController addActionWithTitle:menuProvider:inGroup:destructive:]
  -[CNContactContentContainerViewController addActionWithTitle:target:selector:menuProvider:inGroup:destructive:]
  -[CNContactContentContainerViewController addActionWithTitle:target:selector:inGroup:destructive:]
  -[CNContactContentContainerViewController addActionWithTitle:target:selector:inGroup:]
  -[CNContactContentContainerViewController removeActionWithTarget:selector:inGroup:]
  -[CNContactContentContainerViewController reloadCardGroup:forTableView:]
  -[CNContactContentContainerViewController navigationItemController]
  -[CNContactContentContainerViewController updateWindowTitleForAppearing:]
  -[CNContactContentContainerViewController shouldPresentConfirmCancelAlert]
  -[CNContactContentContainerViewController presentConfirmCancelAlertController]
  -[CNContactContentContainerViewController saveWasAuthorized]
  -[CNContactContentContainerViewController finishEditing:]
  -[CNContactContentContainerViewController editingChangeRequiresAuthorization]
  -[CNContactContentContainerViewController performAuthorizedSetEditing:animated:]
  -[CNContactContentContainerViewController clearMapsDataIfEdited]
  -[CNContactContentContainerViewController saveChanges]
  -[CNContactContentContainerViewController prepareContactDidAppearForPPT]
  -[CNContactContentContainerViewController didUpdateContactViewConfiguration]
  -[CNContactContentContainerViewController sender:presentViewController:]
  -[CNContactContentContainerViewController centeredSourceRect:inContactView:]
  -[CNContactContentContainerViewController setBackgroundColorIfNeededForPresentedViewController:]
  -[CNContactContentContainerViewController sender:dismissViewController:]
  -[CNContactContentContainerViewController sender:dismissViewController:completionHandler:]
  -[CNContactContentContainerViewController isPresentingModalViewController]
  -[CNContactContentContainerViewController propertyItemCanIgnoreGuardianRestrictions]
  -[CNContactContentContainerViewController isSuggestedContact]
  -[CNContactContentContainerViewController setNeedsReloadLazy]
  -[CNContactContentContainerViewController _updateContact:withMissingKeysFromRequiredKeys:]
  -[CNContactContentContainerViewController _removeUnauthorizedKeysFromContact:]
  -[CNContactContentContainerViewController _didCompleteWithContact:]
  -[CNContactContentContainerViewController updateWithNewContact:]
  -[CNContactContentContainerViewController createdNewContact:]
  -[CNContactContentContainerViewController updatedExistingContact:]
  -[CNContactContentContainerViewController reloadUnifiedContact]
  -[CNContactContentContainerViewController setSaveKeyboardShortcutEnabled:]
  -[CNContactContentContainerViewController setCancelKeyboardShortcutEnabled:]
  -[CNContactContentContainerViewController setEditKeyboardShortcutEnabled:]
  -[CNContactContentContainerViewController contactViewConfiguration]
  -[CNContactContentContainerViewController setContactViewConfiguration:]
  -[CNContactContentContainerViewController setOriginalContacts:]
  -[CNContactContentContainerViewController showingMeContact]
  -[CNContactContentContainerViewController setShowingMeContact:]
  -[CNContactContentContainerViewController allowsEditInApp]
  -[CNContactContentContainerViewController setAllowsEditInApp:]
  -[CNContactContentContainerViewController accessAuthorization]
  -[CNContactContentContainerViewController setAccessAuthorization:]
  -[CNContactContentContainerViewController linkedPoliciesByContactIdentifier]
  -[CNContactContentContainerViewController setLinkedPoliciesByContactIdentifier:]
  -[CNContactContentContainerViewController missingRequiredKeys]
  -[CNContactContentContainerViewController setMissingRequiredKeys:]
  -[CNContactContentContainerViewController shouldDrawNavigationBar]
  -[CNContactContentContainerViewController setShouldDrawNavigationBar:]
  -[CNContactContentContainerViewController initialPrompt]
  -[CNContactContentContainerViewController setInitialPrompt:]
  -[CNContactContentContainerViewController saveContactExecutor]
  -[CNContactContentContainerViewController setSaveContactExecutor:]
  -[CNContactContentContainerViewController saveLinkedContactsExecutor]
  -[CNContactContentContainerViewController setSaveLinkedContactsExecutor:]
  -[CNContactContentContainerViewController shouldIgnoreContactStoreDidChangeNotification]
  -[CNContactContentContainerViewController setShouldIgnoreContactStoreDidChangeNotification:]
  -[CNContactContentContainerViewController cardFaceTimeGroup]
  -[CNContactContentContainerViewController setCardFaceTimeGroup:]
  -[CNContactContentContainerViewController recentsData]
  -[CNContactContentContainerViewController setRecentsData:]
  -[CNContactContentContainerViewController propertyGroups]
  -[CNContactContentContainerViewController displayGroups]
  -[CNContactContentContainerViewController setDisplayGroups:]
  -[CNContactContentContainerViewController displayContactViewController]
  -[CNContactContentContainerViewController setDisplayContactViewController:]
  -[CNContactContentContainerViewController editContactViewController]
  -[CNContactContentContainerViewController setEditContactViewController:]
  -[CNContactContentContainerViewController isSupressingViewConfigurationUpdates]
  -[CNContactContentContainerViewController setIsSupressingViewConfigurationUpdates:]
  -[CNContactContentContainerViewController editAuthorizationManager]
  -[CNContactContentContainerViewController setEditAuthorizationManager:]
  -[CNContactContentContainerViewController activatedConstraints]
  -[CNContactContentContainerViewController setActivatedConstraints:]
  -[CNContactContentContainerViewController headerHeightConstraint]
  -[CNContactContentContainerViewController setHeaderHeightConstraint:]
  -[CNContactContentContainerViewController outOfProcessSetupComplete]
  -[CNContactContentContainerViewController setOutOfProcessSetupComplete:]
  -[CNContactContentContainerViewController didSetFirstResponder]
  -[CNContactContentContainerViewController setDidSetFirstResponder:]
  -[CNContactContentContainerViewController saveCommand]
  -[CNContactContentContainerViewController setSaveCommand:]
  -[CNContactContentContainerViewController editCommand]
  -[CNContactContentContainerViewController setEditCommand:]
  -[CNContactContentContainerViewController cancelCommand]
  -[CNContactContentContainerViewController setCancelCommand:]
  -[CNContactContentContainerViewController runningPPT]
  -[CNContactContentContainerViewController didSetNewContact]
  -[CNContactContentContainerViewController setDidSetNewContact:]
  -[CNContactContentContainerViewController supportsDrafts]
  -[CNContactContentContainerViewController setSupportsDrafts:]


CNAvatarView : UIView <CNContactChangesObserver, CNAvatarCardControllerDelegate, CNUILikenessCachingRendererDelegate, CNCardTransitioning>
 @property  BOOL showsActionsOnTap
 @property  BOOL showsActionsOnForcePress
 @property  CNContact *contact
 @property  <CNCancelable> *rendererToken
 @property  UIImageView *imageView
 @property  NSIndexSet *maskedAvatarIndices
 @property  BOOL shouldUpdateMaskedAvatars
 @property  long long displayedImageState
 @property  UINavigationController *contactViewNavigationController
 @property  CNAvatarCardController *cardController
 @property  unsigned long stateCaptureHandle
 @property  <CNAvatarViewUpdateToken> *groupViewConfigurationUpdateToken
 @property  BOOL allowStaleRenderingWithMatchingContextToken
 @property  BOOL registeredInNotifier
 @property  BOOL registeredContactAction
 @property  UIImage *overrideImage
 @property  BOOL disableCornerRadiusForAvatar
 @property  <CNUILikenessRendering> *imageRenderer
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  long long monogrammerStyle
 @property  UIImage *contentImage
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentImageFrame
 @property  BOOL autoUpdateContact
 @property  BOOL asynchronousRendering
 @property  BOOL bypassActionValidation
 @property  BOOL allowStaleRendering
 @property  NSString *contextToken
 @property  BOOL isDisplayingContent
 @property  BOOL allowsAnimation
 @property  BOOL prohibitsPersonaFetch
 @property  unsigned long style
 @property  CNContactStore *contactStore
 @property  BOOL threeDTouchEnabled
 @property  NSArray *contacts
 @property  NSString *name
 @property  NSString *message
 @property  <CNAvatarViewDelegate> *delegate
 @property  BOOL showsContactOnTap
 @property  NSArray *actionCategories
 @property  UIView *forcePressView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *transitioningView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} transitioningFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} transitioningContentFrame
 @property  UIImage *transitioningImage
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} transitioningImageFrame
 @property  BOOL transitioningImageVisible
 @property  UIView *transitioningContentView

  // class methods
  +[CNAvatarView descriptorForRequiredKeys]
  +[CNAvatarView defaultThreeDTouchSupport]
  +[CNAvatarView maxContactAvatars]
  +[CNAvatarView descriptionForDisplayedImageState:]
  +[CNAvatarView descriptorForRequiredKeysWithThreeDTouchEnabled:]
  +[CNAvatarView descriptorForRequiredKeysWithThreeDTouchEnabled:shouldUseCachingRenderer:description:]
  +[CNAvatarView makeDescriptorForRequiredKeysWithThreeDTouchEnabled:shouldUseCachingRenderer:]

  // instance methods
  -[CNAvatarView bypassActionValidation]
  -[CNAvatarView shouldUpdateMaskedAvatars]
  -[CNAvatarView actionCategories]
  -[CNAvatarView setGroupViewConfigurationUpdateToken:]
  -[CNAvatarView setContextToken:]
  -[CNAvatarView setMessage:]
  -[CNAvatarView stateCaptureHandle]
  -[CNAvatarView forcePressView]
  -[CNAvatarView showContact:]
  -[CNAvatarView contact]
  -[CNAvatarView initWithSettings:]
  -[CNAvatarView cardController]
  -[CNAvatarView setAsynchronousRendering:]
  -[CNAvatarView descriptorForRequiredKeys]
  -[CNAvatarView setStateCaptureHandle:]
  -[CNAvatarView dismissContactViewController:]
  -[CNAvatarView setDelegate:]
  -[CNAvatarView frameForAvatarAtIndex:inView:]
  -[CNAvatarView setRegisteredContactAction:]
  -[CNAvatarView updateViewWithGroupIdentity:]
  -[CNAvatarView setImageView:]
  -[CNAvatarView setCardController:]
  -[CNAvatarView disableCornerRadiusForAvatar]
  -[CNAvatarView allowsAnimation]
  -[CNAvatarView setShowsActionsOnTap:]
  -[CNAvatarView style]
  -[CNAvatarView avatarCardController:presentationResultForLocation:]
  -[CNAvatarView delegate]
  -[CNAvatarView _diameter]
  -[CNAvatarView avatarCardControllerDidDismiss:]
  -[CNAvatarView setContacts:]
  -[CNAvatarView resetGroupUpdateTokenIfNeeded]
  -[CNAvatarView setOverrideImage:]
  -[CNAvatarView transitioningImageVisible]
  -[CNAvatarView dealloc]
  -[CNAvatarView rendererToken]
  -[CNAvatarView notifyDelegateOfGroupConfigurationUpdateWithError:]
  -[CNAvatarView setContacts:forToken:]
  -[CNAvatarView setProhibitsPersonaFetch:]
  -[CNAvatarView setRegisteredInNotifier:]
  -[CNAvatarView setImage:state:]
  -[CNAvatarView setShowsContactOnTap:]
  -[CNAvatarView isDisplayingContent]
  -[CNAvatarView registeredContactAction]
  -[CNAvatarView _updateCardActions]
  -[CNAvatarView .cxx_destruct]
  -[CNAvatarView contacts]
  -[CNAvatarView setContactViewNavigationController:]
  -[CNAvatarView setMonogrammerStyle:]
  -[CNAvatarView setEnabled:]
  -[CNAvatarView initWithContact:]
  -[CNAvatarView initWithImageRenderer:threeDTouchEnabled:contactStore:]
  -[CNAvatarView setBypassActionValidation:]
  -[CNAvatarView monogrammerStyle]
  -[CNAvatarView schedulerProvider]
  -[CNAvatarView setRendererToken:]
  -[CNAvatarView avatarCardControllerWillDismiss:]
  -[CNAvatarView shouldUpdateWithContacts:]
  -[CNAvatarView allowStaleRendering]
  -[CNAvatarView setAllowStaleRenderingWithMatchingContextToken:]
  -[CNAvatarView setForcePressView:]
  -[CNAvatarView layoutSubviews]
  -[CNAvatarView setupAvatarCardControllerIfNeeded]
  -[CNAvatarView setAutoUpdateContact:]
  -[CNAvatarView presentingViewControllerForAvatarCardController:]
  -[CNAvatarView setSchedulerProvider:]
  -[CNAvatarView contentImageFrame]
  -[CNAvatarView setAllowStaleRendering:]
  -[CNAvatarView clearImage]
  -[CNAvatarView autoUpdateContact]
  -[CNAvatarView transitioningImageFrame]
  -[CNAvatarView registeredInNotifier]
  -[CNAvatarView showsContactOnTap]
  -[CNAvatarView avatarCacheDidUpdateForIdentifiers:]
  -[CNAvatarView isUpdatingGroupViewConfiguration]
  -[CNAvatarView setShowsActionsOnForcePress:]
  -[CNAvatarView setName:]
  -[CNAvatarView setMaskedAvatarIndices:]
  -[CNAvatarView isThreeDTouchEnabled]
  -[CNAvatarView setShouldUpdateMaskedAvatars:]
  -[CNAvatarView currentLikenessScope]
  -[CNAvatarView updateViewWithGroupIdentity:maskingContacts:]
  -[CNAvatarView sizeThatFits:]
  -[CNAvatarView allowStaleRenderingWithMatchingContextToken]
  -[CNAvatarView setDisableCornerRadiusForAvatar:]
  -[CNAvatarView initWithImageRenderer:threeDTouchEnabled:contactStore:style:schedulerProvider:]
  -[CNAvatarView _setContacts:]
  -[CNAvatarView groupViewConfigurationUpdateToken]
  -[CNAvatarView avatarCardControllerWillBeginPreviewInteraction:]
  -[CNAvatarView setActionCategories:]
  -[CNAvatarView name]
  -[CNAvatarView _renderContactsImage]
  -[CNAvatarView enabled]
  -[CNAvatarView contentImage]
  -[CNAvatarView setAllowsAnimation:]
  -[CNAvatarView transitioningView]
  -[CNAvatarView asynchronousRendering]
  -[CNAvatarView setContact:]
  -[CNAvatarView maskedAvatarIndices]
  -[CNAvatarView transitioningContentFrame]
  -[CNAvatarView contactDidChange]
  -[CNAvatarView displayedImageState]
  -[CNAvatarView initWithFrame:]
  -[CNAvatarView contactStore]
  -[CNAvatarView imageForTransitioningToFullScreen]
  -[CNAvatarView imageRenderer]
  -[CNAvatarView transitioningImage]
  -[CNAvatarView avatarCardController:orderedPropertiesForProperties:category:]
  -[CNAvatarView _updateRegistration]
  -[CNAvatarView setStyle:]
  -[CNAvatarView traitCollectionDidChange:]
  -[CNAvatarView message]
  -[CNAvatarView showsActionsOnTap]
  -[CNAvatarView contactDidChange:]
  -[CNAvatarView setTransitioningImageVisible:]
  -[CNAvatarView didMoveToWindow]
  -[CNAvatarView setImageRenderer:]
  -[CNAvatarView showsActionsOnForcePress]
  -[CNAvatarView overrideImage]
  -[CNAvatarView prohibitsPersonaFetch]
  -[CNAvatarView init]
  -[CNAvatarView setDisplayedImageState:]
  -[CNAvatarView contactViewNavigationController]
  -[CNAvatarView transitioningFrame]
  -[CNAvatarView setThreeDTouchEnabled:]
  -[CNAvatarView contextToken]
  -[CNAvatarView initWithCoder:]
  -[CNAvatarView imageView]
  -[CNAvatarView avatarCardController:shouldShowContact:]


CNCardLinkedCardsGroupItem : CNCardGroupItem
 @property  CNContact *contact

  // instance methods
  -[CNCardLinkedCardsGroupItem contact]
  -[CNCardLinkedCardsGroupItem .cxx_destruct]
  -[CNCardLinkedCardsGroupItem initWithContact:]
  -[CNCardLinkedCardsGroupItem setContact:]


CNStarkCardViewController : UIViewController <CNContactContentDisplayViewControllerDelegate, CNContactContentViewControllerDelegate>
 @property  CNAvatarViewController *avatarViewController
 @property  CNStarkContactInfoViewController *contactInfoViewController
 @property  CNStarkActionsController *actionsController
 @property  CNContact *contact
 @property  NSArray *displayedContactProperties
 @property  NSArray *layoutConstraints
 @property  UILayoutGuide *centeringLayoutGuide
 @property  UILayoutGuide *avatarAndDetailsLayoutGuide
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNStarkCardViewController descriptorForRequiredKeys]
  +[CNStarkCardViewController starkCardControllerForCalendarEventWithContact:]

  // instance methods
  -[CNStarkCardViewController updateViewConstraints]
  -[CNStarkCardViewController contact]
  -[CNStarkCardViewController initWithNibName:bundle:]
  -[CNStarkCardViewController .cxx_destruct]
  -[CNStarkCardViewController viewDidLoad]
  -[CNStarkCardViewController traitCollectionDidChange:]
  -[CNStarkCardViewController init]
  -[CNStarkCardViewController initWithCoder:]
  -[CNStarkCardViewController displayedContactProperties]
  -[CNStarkCardViewController contactViewController:shouldPerformDefaultActionForContact:propertyKey:propertyIdentifier:]
  -[CNStarkCardViewController avatarViewController]
  -[CNStarkCardViewController contactDisplayViewController:prepareChildContactViewController:forAction:]
  -[CNStarkCardViewController contactDisplayViewController:presentChildContactViewController:forAction:]
  -[CNStarkCardViewController contactDisplayViewController:dismissChildContactViewController:forAction:]
  -[CNStarkCardViewController contactDisplayViewController:didUpdateContact:]
  -[CNStarkCardViewController isSaveAuthorizedForPropertiesOfContactDisplayViewController:]
  -[CNStarkCardViewController contactDisplayViewController:isPresentingFullscreen:]
  -[CNStarkCardViewController showMore:]
  -[CNStarkCardViewController initWithContact:displayedContactProperties:]
  -[CNStarkCardViewController setupViewControllers]
  -[CNStarkCardViewController setupLayoutGuides]
  -[CNStarkCardViewController resetLayoutConstraints]
  -[CNStarkCardViewController setupLayoutConstraints]
  -[CNStarkCardViewController updateViewControllers]
  -[CNStarkCardViewController updateNavigationItems]
  -[CNStarkCardViewController contactInfoViewController]
  -[CNStarkCardViewController actionsController]
  -[CNStarkCardViewController layoutConstraints]
  -[CNStarkCardViewController setLayoutConstraints:]
  -[CNStarkCardViewController centeringLayoutGuide]
  -[CNStarkCardViewController setCenteringLayoutGuide:]
  -[CNStarkCardViewController avatarAndDetailsLayoutGuide]
  -[CNStarkCardViewController setAvatarAndDetailsLayoutGuide:]


CNContactClearRecentsDataAction : CNContactAction
 @property  CNContactRecentsReference *recentsData
 @property  CNUICoreRecentsManager *coreRecentsManager

  // instance methods
  -[CNContactClearRecentsDataAction isDestructive]
  -[CNContactClearRecentsDataAction .cxx_destruct]
  -[CNContactClearRecentsDataAction title]
  -[CNContactClearRecentsDataAction canPerformAction]
  -[CNContactClearRecentsDataAction performActionWithSender:]
  -[CNContactClearRecentsDataAction recentsData]
  -[CNContactClearRecentsDataAction initWithRecentsData:coreRecentsManager:]
  -[CNContactClearRecentsDataAction coreRecentsManager]


CNCardLinkedCardsPlaceholderGroupItem : CNCardGroupItem
 @property  NSString *title

  // instance methods
  -[CNCardLinkedCardsPlaceholderGroupItem title]


CNGeminiPickerCell : CNLabeledCell
 @property  UILabel *labelLabel
 @property  UILabel *valueLabel

  // instance methods
  -[CNGeminiPickerCell labelView]
  -[CNGeminiPickerCell .cxx_destruct]
  -[CNGeminiPickerCell tintColorDidChange]
  -[CNGeminiPickerCell valueLabel]
  -[CNGeminiPickerCell setText:detailText:]
  -[CNGeminiPickerCell valueView]
  -[CNGeminiPickerCell labelLabel]


CNUIMapTileGenerator : NSObject
 @property  @? geocoderProvider
 @property  @? snapshotterProvider
 @property  <CNScheduler> *workQueue
 @property  <CNSchedulerProvider> *schedulerProvider

  // class methods
  +[CNUIMapTileGenerator defaultImage]
  +[CNUIMapTileGenerator defaultTileSize]
  +[CNUIMapTileGenerator placemarkForAddress:geocoderProvider:scheduler:]
  +[CNUIMapTileGenerator mapTileImagesForPlacemark:snapshotterProvider:scheduler:]

  // instance methods
  -[CNUIMapTileGenerator workQueue]
  -[CNUIMapTileGenerator .cxx_destruct]
  -[CNUIMapTileGenerator schedulerProvider]
  -[CNUIMapTileGenerator init]
  -[CNUIMapTileGenerator initWithGeocoderProvider:snapshotterProvider:schedulerProvider:]
  -[CNUIMapTileGenerator tilesForAddress:]
  -[CNUIMapTileGenerator geocoderProvider]
  -[CNUIMapTileGenerator snapshotterProvider]


CNCardPropertyGroup : CNCardGroup
 @property  NSArray *editingItems
 @property  NSArray *deletedItems
 @property  NSString *property
 @property  NSArray *propertyItems
 @property  CNPolicy *policy
 @property  NSDictionary *linkedPolicies
 @property  CNContactStore *contactStore
 @property  BOOL showActionsWhenEmpty
 @property  BOOL allowsDisplayModePickerActions
 @property  BOOL multiValue
 @property  BOOL fixedValue
 @property  BOOL multiLine
 @property  BOOL allowsAdding
 @property  BOOL modified
 @property  BOOL isAdded

  // class methods
  +[CNCardPropertyGroup groupForProperty:contact:store:policy:linkedPolicies:]

  // instance methods
  -[CNCardPropertyGroup property]
  -[CNCardPropertyGroup displayItems]
  -[CNCardPropertyGroup .cxx_destruct]
  -[CNCardPropertyGroup isRequired]
  -[CNCardPropertyGroup modified]
  -[CNCardPropertyGroup contactStore]
  -[CNCardPropertyGroup policy]
  -[CNCardPropertyGroup propertyGroupItemClass]
  -[CNCardPropertyGroup editingItems]
  -[CNCardPropertyGroup setAllowsDisplayModePickerActions:]
  -[CNCardPropertyGroup allowsDisplayModePickerActions]
  -[CNCardPropertyGroup reloadDataPreservingChanges:]
  -[CNCardPropertyGroup saveChanges]
  -[CNCardPropertyGroup initWithProperty:contact:store:policy:linkedPolicies:]
  -[CNCardPropertyGroup allowsAdding]
  -[CNCardPropertyGroup isMultiValue]
  -[CNCardPropertyGroup isFixedValue]
  -[CNCardPropertyGroup isMultiLine]
  -[CNCardPropertyGroup nextAvailableLabel]
  -[CNCardPropertyGroup addEditingItem]
  -[CNCardPropertyGroup removeEditingItem:]
  -[CNCardPropertyGroup lastEditingItem]
  -[CNCardPropertyGroup setEditingItems:]
  -[CNCardPropertyGroup _loadPropertyItems]
  -[CNCardPropertyGroup _mergeItems:forEditing:]
  -[CNCardPropertyGroup _itemToBeMergedWith:fromItems:forEditing:]
  -[CNCardPropertyGroup _shouldShowGroupWhenEditing:]
  -[CNCardPropertyGroup labelsAreUnique]
  -[CNCardPropertyGroup canAddEditingItem]
  -[CNCardPropertyGroup _arrayContainsMaxAllowedItems:]
  -[CNCardPropertyGroup _updateNameValuesForItems:]
  -[CNCardPropertyGroup policyForItem:]
  -[CNCardPropertyGroup saveChangesForItems:]
  -[CNCardPropertyGroup labelsForItem:options:]
  -[CNCardPropertyGroup labelsInUseByGroup]
  -[CNCardPropertyGroup itemsUsingLabel:]
  -[CNCardPropertyGroup _availableLabelsInLabels:forItem:withValueSelector:usedLabelsCount:]
  -[CNCardPropertyGroup _nextAvailableLabelInLabels:withValueSelector:]
  -[CNCardPropertyGroup _nextAvailableLabel]
  -[CNCardPropertyGroup _nextAvailableInstantMessageService]
  -[CNCardPropertyGroup _nextAvailableSocialService]
  -[CNCardPropertyGroup propertyItems]
  -[CNCardPropertyGroup linkedPolicies]
  -[CNCardPropertyGroup showActionsWhenEmpty]
  -[CNCardPropertyGroup setShowActionsWhenEmpty:]
  -[CNCardPropertyGroup isAdded]
  -[CNCardPropertyGroup setIsAdded:]
  -[CNCardPropertyGroup deletedItems]
  -[CNCardPropertyGroup setDeletedItems:]


CNTestFuture : NSObject <NSSecureCoding>
 @property  <NSObject><NSSecureCoding> *result
 @property  NSError *error

  // class methods
  +[CNTestFuture supportsSecureCoding]
  +[CNTestFuture futureWithError:]
  +[CNTestFuture futureWithResult:]

  // instance methods
  -[CNTestFuture encodeWithCoder:]
  -[CNTestFuture error]
  -[CNTestFuture initWithResult:]
  -[CNTestFuture .cxx_destruct]
  -[CNTestFuture initWithError:]
  -[CNTestFuture result]
  -[CNTestFuture initWithCoder:]


CNCardGameCenterGroup : CNCardGroup
 @property  NSArray *relationshipResults

  // class methods
  +[CNCardGameCenterGroup relationshipResultsContainsFriend:]
  +[CNCardGameCenterGroup shouldShowAddFriendActionForRelationshipResults:]
  +[CNCardGameCenterGroup actionForRelationshipResults:forContact:]

  // instance methods
  -[CNCardGameCenterGroup displayItems]
  -[CNCardGameCenterGroup .cxx_destruct]
  -[CNCardGameCenterGroup initWithContact:relationshipResults:]
  -[CNCardGameCenterGroup relationshipResults]
  -[CNCardGameCenterGroup setRelationshipResults:]


CNCardGameCenterGroupItem : CNCardGroupItem
 @property  GKContactRelationshipResult *relationshipResult

  // instance methods
  -[CNCardGameCenterGroupItem .cxx_destruct]
  -[CNCardGameCenterGroupItem initWithRelationshipResult:]
  -[CNCardGameCenterGroupItem relationshipResult]
  -[CNCardGameCenterGroupItem setRelationshipResult:]


CNContactPickerViewController : UIViewController <CNContactPickerContentDelegate, _UIRemoteViewControllerContaining, UIAdaptivePresentationControllerDelegate>
 @property  UIViewController<CNContactPickerContentViewController> *viewController
 @property  CNContact *scrollContact
 @property  CNRegulatoryLogger *regulatoryLogger
 @property  FAFamilyMember *familyMember
 @property  UIBarButtonItem *addContactBarButtonItem
 @property  CNContainer *parentContainer
 @property  long long mode
 @property  long long behavior
 @property  long long cardActions
 @property  BOOL hidesSearchableSources
 @property  BOOL onlyRealContacts
 @property  BOOL ignoresParentalRestrictions
 @property  NSArray *prohibitedPropertyKeys
 @property  BOOL allowsEditing
 @property  BOOL allowsCancel
 @property  BOOL allowsDone
 @property  BOOL allowsDeletion
 @property  BOOL shouldAllowSearchForMultiSelect
 @property  BOOL shouldDisplayAddNewContactRow
 @property  NSString *targetGroupIdentifier
 @property  NSString *prompt
 @property  BOOL hidesPromptInLandscape
 @property  NSString *bannerTitle
 @property  NSString *bannerValue
 @property  BOOL shouldDisplaySuggestionsController
 @property  NSArray *suggestionsIgnoredContactIdentifiers
 @property  NSArray *suggestionsInteractionDomains
 @property  NSArray *contactSuggestions
 @property  BOOL defaultViewControllerVisible
 @property  UINavigationController *navigationController
 @property  BOOL autocloses
 @property  NSArray *displayedPropertyKeys
 @property  <CNContactPickerDelegate> *delegate
 @property  NSPredicate *predicateForEnablingContact
 @property  NSPredicate *predicateForSelectionOfContact
 @property  NSPredicate *predicateForSelectionOfProperty
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UIRemoteViewController *_containedRemoteViewController

  // class methods
  +[CNContactPickerViewController descriptorForRequiredKeysForSuggestions]

  // instance methods
  -[CNContactPickerViewController setHidesSearchableSources:]
  -[CNContactPickerViewController presentationControllerDidDismiss:]
  -[CNContactPickerViewController behavior]
  -[CNContactPickerViewController navigationController]
  -[CNContactPickerViewController hidesSearchableSources]
  -[CNContactPickerViewController addContactBarButtonItem]
  -[CNContactPickerViewController setAllowsEditing:]
  -[CNContactPickerViewController setShouldDisplayAddNewContactRow:]
  -[CNContactPickerViewController setPrompt:]
  -[CNContactPickerViewController allowsEditing]
  -[CNContactPickerViewController shouldDisplayAddNewContactRow]
  -[CNContactPickerViewController setDelegate:]
  -[CNContactPickerViewController setViewController:]
  -[CNContactPickerViewController setShouldAllowSearchForMultiSelect:]
  -[CNContactPickerViewController setBehavior:]
  -[CNContactPickerViewController delegate]
  -[CNContactPickerViewController initWithNibName:bundle:]
  -[CNContactPickerViewController setProhibitedPropertyKeys:]
  -[CNContactPickerViewController viewDidAppear:]
  -[CNContactPickerViewController setShouldDisplaySuggestionsController:]
  -[CNContactPickerViewController dealloc]
  -[CNContactPickerViewController prohibitedPropertyKeys]
  -[CNContactPickerViewController allowsDeletion]
  -[CNContactPickerViewController mode]
  -[CNContactPickerViewController .cxx_destruct]
  -[CNContactPickerViewController setIgnoresParentalRestrictions:]
  -[CNContactPickerViewController loadView]
  -[CNContactPickerViewController suggestionsIgnoredContactIdentifiers]
  -[CNContactPickerViewController allowsDone]
  -[CNContactPickerViewController setMode:]
  -[CNContactPickerViewController setSuggestionsInteractionDomains:]
  -[CNContactPickerViewController regulatoryLogger]
  -[CNContactPickerViewController viewController]
  -[CNContactPickerViewController ignoresParentalRestrictions]
  -[CNContactPickerViewController viewDidDisappear:]
  -[CNContactPickerViewController suggestionsInteractionDomains]
  -[CNContactPickerViewController _setViewController:]
  -[CNContactPickerViewController prompt]
  -[CNContactPickerViewController shouldDisplaySuggestionsController]
  -[CNContactPickerViewController shouldAllowSearchForMultiSelect]
  -[CNContactPickerViewController setAllowsDone:]
  -[CNContactPickerViewController setSuggestionsIgnoredContactIdentifiers:]
  -[CNContactPickerViewController _containedRemoteViewController]
  -[CNContactPickerViewController _isDelayingPresentation]
  -[CNContactPickerViewController _endDelayingPresentation]
  -[CNContactPickerViewController setAllowsDeletion:]
  -[CNContactPickerViewController _viewWillBePresented]
  -[CNContactPickerViewController pickerDidSelectAddNewContact]
  -[CNContactPickerViewController pickerDidSelectContact:property:]
  -[CNContactPickerViewController pickerDidSelectContacts:properties:]
  -[CNContactPickerViewController pickerDidCompleteWithNewContact:]
  -[CNContactPickerViewController pickerDidCancel]
  -[CNContactPickerViewController _pickerPresentedViewController]
  -[CNContactPickerViewController _checkConsistencyFromOptions:]
  -[CNContactPickerViewController scrollToClosestContactMatching:]
  -[CNContactPickerViewController invalidateSelectionAnimated:]
  -[CNContactPickerViewController _setupViewController]
  -[CNContactPickerViewController _shouldBeOutOfProcess]
  -[CNContactPickerViewController _prepareViewController]
  -[CNContactPickerViewController closePickerIfNeeded]
  -[CNContactPickerViewController notifyDelegateForCancellation]
  -[CNContactPickerViewController popToDefaultViewController:]
  -[CNContactPickerViewController _emitPickerAnalyticsDidSelectItems:]
  -[CNContactPickerViewController displayedPropertyKeys]
  -[CNContactPickerViewController setDisplayedPropertyKeys:]
  -[CNContactPickerViewController predicateForEnablingContact]
  -[CNContactPickerViewController setPredicateForEnablingContact:]
  -[CNContactPickerViewController predicateForSelectionOfContact]
  -[CNContactPickerViewController setPredicateForSelectionOfContact:]
  -[CNContactPickerViewController predicateForSelectionOfProperty]
  -[CNContactPickerViewController setPredicateForSelectionOfProperty:]
  -[CNContactPickerViewController scrollContact]
  -[CNContactPickerViewController setScrollContact:]
  -[CNContactPickerViewController setRegulatoryLogger:]
  -[CNContactPickerViewController familyMember]
  -[CNContactPickerViewController setFamilyMember:]
  -[CNContactPickerViewController parentContainer]
  -[CNContactPickerViewController setParentContainer:]
  -[CNContactPickerViewController cardActions]
  -[CNContactPickerViewController setCardActions:]
  -[CNContactPickerViewController onlyRealContacts]
  -[CNContactPickerViewController setOnlyRealContacts:]
  -[CNContactPickerViewController allowsCancel]
  -[CNContactPickerViewController setAllowsCancel:]
  -[CNContactPickerViewController targetGroupIdentifier]
  -[CNContactPickerViewController setTargetGroupIdentifier:]
  -[CNContactPickerViewController hidesPromptInLandscape]
  -[CNContactPickerViewController setHidesPromptInLandscape:]
  -[CNContactPickerViewController bannerTitle]
  -[CNContactPickerViewController setBannerTitle:]
  -[CNContactPickerViewController bannerValue]
  -[CNContactPickerViewController setBannerValue:]
  -[CNContactPickerViewController contactSuggestions]
  -[CNContactPickerViewController setContactSuggestions:]
  -[CNContactPickerViewController isDefaultViewControllerVisible]
  -[CNContactPickerViewController autocloses]
  -[CNContactPickerViewController setAutocloses:]


CNAvatarImageUtilities : NSObject
  // class methods
  +[CNAvatarImageUtilities transparencyInsetsForImage:requiringFullOpacity:]
  +[CNAvatarImageUtilities trimmedImageByTrimmingTransparentPixelsFromImage:]
  +[CNAvatarImageUtilities trimmedImageByTrimmingTransparentPixelsFromImage:requiringFullOpacity:]
  +[CNAvatarImageUtilities croppedAndCenteredAvatarImageForImage:widthMultiplier:]
  +[CNAvatarImageUtilities croppedAndCenteredAvatarImageForImage:usingTransparencyInsets:widthMultiplier:]


CNUIFamilyMemberDowntimeContactItem : NSObject
 @property  CNContact *contact
 @property  NSString *label
 @property  BOOL selected

  // instance methods
  -[CNUIFamilyMemberDowntimeContactItem contact]
  -[CNUIFamilyMemberDowntimeContactItem setSelected:]
  -[CNUIFamilyMemberDowntimeContactItem .cxx_destruct]
  -[CNUIFamilyMemberDowntimeContactItem label]
  -[CNUIFamilyMemberDowntimeContactItem selected]
  -[CNUIFamilyMemberDowntimeContactItem initWithContact:label:]


CNUIFamilyMemberDowntimeContactSection : NSObject
 @property  NSArray *contactItems
 @property  NSString *title

  // instance methods
  -[CNUIFamilyMemberDowntimeContactSection .cxx_destruct]
  -[CNUIFamilyMemberDowntimeContactSection title]
  -[CNUIFamilyMemberDowntimeContactSection initWithContactItems:title:]
  -[CNUIFamilyMemberDowntimeContactSection contactItems]


CNUIFamilyMemberDowntimeContactDataSource : NSObject
 @property  CNContactStore *store
 @property  BOOL meContactNeedsUpdate
 @property  CNContact *meContact
 @property  NSArray *familyMembers
 @property  NSArray *filteredSections
 @property  NSArray *sections
 @property  NSMutableArray *selectedContactItems
 @property  NSArray *requiredKeys
 @property  NSString *filterString
 @property  BOOL isShowingFamilyMemberContacts

  // class methods
  +[CNUIFamilyMemberDowntimeContactDataSource isErrorPossiblyRelatedToExtraStores:]

  // instance methods
  -[CNUIFamilyMemberDowntimeContactDataSource meContact]
  -[CNUIFamilyMemberDowntimeContactDataSource sortOrder]
  -[CNUIFamilyMemberDowntimeContactDataSource selectedContacts]
  -[CNUIFamilyMemberDowntimeContactDataSource store]
  -[CNUIFamilyMemberDowntimeContactDataSource setMeContact:]
  -[CNUIFamilyMemberDowntimeContactDataSource setStore:]
  -[CNUIFamilyMemberDowntimeContactDataSource .cxx_destruct]
  -[CNUIFamilyMemberDowntimeContactDataSource setSections:]
  -[CNUIFamilyMemberDowntimeContactDataSource copyWithZone:]
  -[CNUIFamilyMemberDowntimeContactDataSource sections]
  -[CNUIFamilyMemberDowntimeContactDataSource numberOfRowsInSection:]
  -[CNUIFamilyMemberDowntimeContactDataSource familyMembers]
  -[CNUIFamilyMemberDowntimeContactDataSource numberOfSections]
  -[CNUIFamilyMemberDowntimeContactDataSource initWithStore:familyMembers:requiredKeys:]
  -[CNUIFamilyMemberDowntimeContactDataSource titleForSection:]
  -[CNUIFamilyMemberDowntimeContactDataSource contactItemForIndexPath:]
  -[CNUIFamilyMemberDowntimeContactDataSource setContactItemSelected:forIndexPath:]
  -[CNUIFamilyMemberDowntimeContactDataSource setFilterString:]
  -[CNUIFamilyMemberDowntimeContactDataSource filterSectionsForString:]
  -[CNUIFamilyMemberDowntimeContactDataSource _loadAllContactsIfNeeded]
  -[CNUIFamilyMemberDowntimeContactDataSource postProcessForFamilyMembersWithContacts:]
  -[CNUIFamilyMemberDowntimeContactDataSource labelForFamilyMember:]
  -[CNUIFamilyMemberDowntimeContactDataSource completeContactFromContact:fromMainStoreOnly:keysToFetch:]
  -[CNUIFamilyMemberDowntimeContactDataSource preferredForNameMeContactIdentifier]
  -[CNUIFamilyMemberDowntimeContactDataSource preferredForNameMeContactWithKeysToFetch:]
  -[CNUIFamilyMemberDowntimeContactDataSource filterString]
  -[CNUIFamilyMemberDowntimeContactDataSource isShowingFamilyMemberContacts]
  -[CNUIFamilyMemberDowntimeContactDataSource setIsShowingFamilyMemberContacts:]
  -[CNUIFamilyMemberDowntimeContactDataSource meContactNeedsUpdate]
  -[CNUIFamilyMemberDowntimeContactDataSource setMeContactNeedsUpdate:]
  -[CNUIFamilyMemberDowntimeContactDataSource setFamilyMembers:]
  -[CNUIFamilyMemberDowntimeContactDataSource filteredSections]
  -[CNUIFamilyMemberDowntimeContactDataSource setFilteredSections:]
  -[CNUIFamilyMemberDowntimeContactDataSource selectedContactItems]
  -[CNUIFamilyMemberDowntimeContactDataSource setSelectedContactItems:]
  -[CNUIFamilyMemberDowntimeContactDataSource requiredKeys]


CNSyndicationViewController : UIViewController <CNActionsViewProtocol>
 @property  CNGroupIdentity *group
 @property  CNContact *senderContact
 @property  CNContactFormatter *contactFormatter
 @property  CNGroupIdentityInlineActionsViewConfiguration *actionsViewConfiguration
 @property  UIView *nameContainerView
 @property  CNGroupAvatarViewController *groupAvatarViewController
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  CNActionsView *actionsView
 @property  UIView *actionsContainerView
 @property  NSString *subtitleText

  // class methods
  +[CNSyndicationViewController descriptorForRequiredKeys]

  // instance methods
  -[CNSyndicationViewController subtitleText]
  -[CNSyndicationViewController setSubtitleLabel:]
  -[CNSyndicationViewController subtitleLabel]
  -[CNSyndicationViewController setTitleLabel:]
  -[CNSyndicationViewController .cxx_destruct]
  -[CNSyndicationViewController viewDidLoad]
  -[CNSyndicationViewController setSubtitleText:]
  -[CNSyndicationViewController group]
  -[CNSyndicationViewController contactFormatter]
  -[CNSyndicationViewController setContactFormatter:]
  -[CNSyndicationViewController titleLabel]
  -[CNSyndicationViewController setGroup:]
  -[CNSyndicationViewController didSelectAction:withSourceView:longPress:]
  -[CNSyndicationViewController initWithGroup:senderContact:actionsViewConfiguration:]
  -[CNSyndicationViewController subtitleTextForSenderContact:]
  -[CNSyndicationViewController setupContainerViews]
  -[CNSyndicationViewController setupNameViews]
  -[CNSyndicationViewController setupActionViews]
  -[CNSyndicationViewController senderContact]
  -[CNSyndicationViewController setSenderContact:]
  -[CNSyndicationViewController actionsViewConfiguration]
  -[CNSyndicationViewController nameContainerView]
  -[CNSyndicationViewController setNameContainerView:]
  -[CNSyndicationViewController groupAvatarViewController]
  -[CNSyndicationViewController setGroupAvatarViewController:]
  -[CNSyndicationViewController actionsView]
  -[CNSyndicationViewController setActionsView:]
  -[CNSyndicationViewController actionsContainerView]
  -[CNSyndicationViewController setActionsContainerView:]


CNGeminiPickerController : UINavigationController <UITableViewDataSource, UITableViewDelegate>
 @property  UITableViewController *tableViewController
 @property  NSMutableArray *geminiChannels
 @property  CNGeminiChannel *preferredGeminiChannel
 @property  NSIndexPath *selectedIndexPath
 @property  <CNPickerControllerDelegate><UINavigationControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNGeminiPickerController tableView:cellForRowAtIndexPath:]
  -[CNGeminiPickerController tableView:numberOfRowsInSection:]
  -[CNGeminiPickerController numberOfSectionsInTableView:]
  -[CNGeminiPickerController tableView:willDisplayCell:forRowAtIndexPath:]
  -[CNGeminiPickerController tableView:didSelectRowAtIndexPath:]
  -[CNGeminiPickerController tableView:titleForHeaderInSection:]
  -[CNGeminiPickerController .cxx_destruct]
  -[CNGeminiPickerController viewWillAppear:]
  -[CNGeminiPickerController tableView:willDisplayHeaderView:forSection:]
  -[CNGeminiPickerController tableView:titleForFooterInSection:]
  -[CNGeminiPickerController selectedIndexPath]
  -[CNGeminiPickerController setSelectedIndexPath:]
  -[CNGeminiPickerController cancelPicker:]
  -[CNGeminiPickerController donePicker:]
  -[CNGeminiPickerController initWithGeminiResult:]
  -[CNGeminiPickerController setGeminiResult:]
  -[CNGeminiPickerController setGeminiResult:reload:]
  -[CNGeminiPickerController didPickItem]
  -[CNGeminiPickerController indexPathForGeminiChannel:]
  -[CNGeminiPickerController geminiChannelForIndexPath:]
  -[CNGeminiPickerController prepareCell:atIndexPath:]
  -[CNGeminiPickerController tableViewController]
  -[CNGeminiPickerController setTableViewController:]
  -[CNGeminiPickerController geminiChannels]
  -[CNGeminiPickerController setGeminiChannels:]
  -[CNGeminiPickerController preferredGeminiChannel]
  -[CNGeminiPickerController setPreferredGeminiChannel:]


CNCardPropertyGeminiGroup : CNCardPropertyGroup
 @property  BOOL shouldShowGemini

  // instance methods
  -[CNCardPropertyGeminiGroup displayItems]
  -[CNCardPropertyGeminiGroup editingItems]
  -[CNCardPropertyGeminiGroup _loadPropertyItems]
  -[CNCardPropertyGeminiGroup setGeminiResult:]
  -[CNCardPropertyGeminiGroup shouldShowGemini]
  -[CNCardPropertyGeminiGroup setShouldShowGemini:]


CNContactAction : NSObject
 @property  <CNContactActionDelegate> *delegate
 @property  CNContact *contact
 @property  CNMutableContact *mutableContact
 @property  NSString *title
 @property  id target
 @property  SEL selector
 @property  BOOL destructive
 @property  UIColor *color
 @property  UIColor *glyphColor
 @property  long long transportType
 @property  BOOL showBackgroundPlatter
 @property  BOOL wrapTitle
 @property  BOOL canPerformAction

  // class methods
  +[CNContactAction contactActionWithTitle:target:selector:]
  +[CNContactAction contactActionWithTitle:target:selector:destructive:]

  // instance methods
  -[CNContactAction selector]
  -[CNContactAction setDestructive:]
  -[CNContactAction contact]
  -[CNContactAction setTransportType:]
  -[CNContactAction setDelegate:]
  -[CNContactAction target]
  -[CNContactAction isDestructive]
  -[CNContactAction delegate]
  -[CNContactAction .cxx_destruct]
  -[CNContactAction initWithContact:]
  -[CNContactAction setGlyphColor:]
  -[CNContactAction transportType]
  -[CNContactAction title]
  -[CNContactAction color]
  -[CNContactAction setContact:]
  -[CNContactAction setColor:]
  -[CNContactAction glyphColor]
  -[CNContactAction init]
  -[CNContactAction wrapTitle]
  -[CNContactAction canPerformAction]
  -[CNContactAction performActionWithSender:]
  -[CNContactAction initWithTitle:target:selector:destructive:]
  -[CNContactAction mutableContact]
  -[CNContactAction showBackgroundPlatter]
  -[CNContactAction setShowBackgroundPlatter:]
  -[CNContactAction setWrapTitle:]


CNContactMenuDisplayingAction : CNContactAction
 @property  @? menuProvider

  // class methods
  +[CNContactMenuDisplayingAction contactActionWithTitle:menuProvider:destructive:]

  // instance methods
  -[CNContactMenuDisplayingAction .cxx_destruct]
  -[CNContactMenuDisplayingAction initWithTitle:menuProvider:destructive:]
  -[CNContactMenuDisplayingAction menuProvider]


CNContactSection : NSObject <NSCopying>
 @property  NSString *title
 @property  NSString *identifier
 @property  {_NSRange=QQ} range
 @property  NSString *sortKey

  // instance methods
  -[CNContactSection identifier]
  -[CNContactSection .cxx_destruct]
  -[CNContactSection setRange:]
  -[CNContactSection sortKey]
  -[CNContactSection title]
  -[CNContactSection setIdentifier:]
  -[CNContactSection copyWithZone:]
  -[CNContactSection range]
  -[CNContactSection setTitle:]
  -[CNContactSection setSortKey:]


CNContactActionCell : CNLabeledCell
 @property  UILabel *label
 @property  CNTransportButton *transportIcon
 @property  CNCardActionGroupItem *actionGroupItem
 @property  CNContactAction *action

  // class methods
  +[CNContactActionCell shouldIndentWhileEditing]

  // instance methods
  -[CNContactActionCell labelView]
  -[CNContactActionCell setLabel:]
  -[CNContactActionCell .cxx_destruct]
  -[CNContactActionCell action]
  -[CNContactActionCell tintColorDidChange]
  -[CNContactActionCell label]
  -[CNContactActionCell rightMostView]
  -[CNContactActionCell setLabelTextAttributes:]
  -[CNContactActionCell setCardGroupItem:]
  -[CNContactActionCell variableConstraints]
  -[CNContactActionCell minCellHeight]
  -[CNContactActionCell shouldPerformDefaultAction]
  -[CNContactActionCell actionGroupItem]
  -[CNContactActionCell transportIcon]
  -[CNContactActionCell setTransportIcon:]


CNAddressComponentSplitTextFieldCell : CNAddressComponentTextFieldCell <NUIContainerViewDelegate>
 @property  UITextField *textFieldLeft
 @property  UITextField *textFieldRight
 @property  CNRepeatingGradientSeparatorView *separator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNAddressComponentSplitTextFieldCell cellIdentifier]
  +[CNAddressComponentSplitTextFieldCell containerViewClass]

  // instance methods
  -[CNAddressComponentSplitTextFieldCell initWithStyle:reuseIdentifier:]
  -[CNAddressComponentSplitTextFieldCell textAttributes]
  -[CNAddressComponentSplitTextFieldCell setTextAttributes:]
  -[CNAddressComponentSplitTextFieldCell .cxx_destruct]
  -[CNAddressComponentSplitTextFieldCell separator]
  -[CNAddressComponentSplitTextFieldCell containerView:layoutFrameForArrangedSubview:withProposedFrame:]
  -[CNAddressComponentSplitTextFieldCell setSeparator:]
  -[CNAddressComponentSplitTextFieldCell newSeparatorView]
  -[CNAddressComponentSplitTextFieldCell textFields]
  -[CNAddressComponentSplitTextFieldCell setupTextFields]
  -[CNAddressComponentSplitTextFieldCell textFieldLeft]
  -[CNAddressComponentSplitTextFieldCell setTextFieldLeft:]
  -[CNAddressComponentSplitTextFieldCell textFieldRight]
  -[CNAddressComponentSplitTextFieldCell setTextFieldRight:]


CNPhotoPickerActionsModel : NSObject
 @property  NSArray *currentInlineActionButtons
 @property  CNPhotoPickerActionButton *deleteButton
 @property  CNPhotoPickerProviderItem *providerItem
 @property  NSIndexPath *indexPath
 @property  BOOL canDelete
 @property  NSString *assignActionTitleOverride
 @property  BOOL buttonsDisabled
 @property  <CNPhotoPickerActionsDelegate> *delegate
 @property  NSArray *inlineActionButtons

  // class methods
  +[CNPhotoPickerActionsModel localizedTitleForActionType:]
  +[CNPhotoPickerActionsModel maximumNumberOfButtons]
  +[CNPhotoPickerActionsModel buttonForActionType:withActionBlock:]
  +[CNPhotoPickerActionsModel buttonForActionType:titleOverride:withActionBlock:]
  +[CNPhotoPickerActionsModel actionIsDestructive:]

  // instance methods
  -[CNPhotoPickerActionsModel setDelegate:]
  -[CNPhotoPickerActionsModel indexPath]
  -[CNPhotoPickerActionsModel canDelete]
  -[CNPhotoPickerActionsModel delegate]
  -[CNPhotoPickerActionsModel .cxx_destruct]
  -[CNPhotoPickerActionsModel deleteButton]
  -[CNPhotoPickerActionsModel canPerformActionType:]
  -[CNPhotoPickerActionsModel setDeleteButton:]
  -[CNPhotoPickerActionsModel setIndexPath:]
  -[CNPhotoPickerActionsModel initWithProviderItem:assignActionTitleOverride:canDelete:atIndexPath:]
  -[CNPhotoPickerActionsModel inlineActionButtons]
  -[CNPhotoPickerActionsModel generateInlineActionButtons]
  -[CNPhotoPickerActionsModel setButtonsDisabled:]
  -[CNPhotoPickerActionsModel updateProviderItem:]
  -[CNPhotoPickerActionsModel didTapAssignToContact]
  -[CNPhotoPickerActionsModel didTapEdit]
  -[CNPhotoPickerActionsModel didTapDuplicate]
  -[CNPhotoPickerActionsModel didTapDelete]
  -[CNPhotoPickerActionsModel providerItem]
  -[CNPhotoPickerActionsModel setProviderItem:]
  -[CNPhotoPickerActionsModel currentInlineActionButtons]
  -[CNPhotoPickerActionsModel setCurrentInlineActionButtons:]
  -[CNPhotoPickerActionsModel setCanDelete:]
  -[CNPhotoPickerActionsModel assignActionTitleOverride]
  -[CNPhotoPickerActionsModel setAssignActionTitleOverride:]
  -[CNPhotoPickerActionsModel buttonsDisabled]


CNUIDate : NSObject
  // class methods
  +[CNUIDate initialize]
  +[CNUIDate localeDidChange:]
  +[CNUIDate currentCalendarGMT]
  +[CNUIDate gregorianCalendarGMT]
  +[CNUIDate GMTComponentsFromDate:sourceCalendar:]
  +[CNUIDate componentsFromDate:sourceCalendar:destinationCalendar:]
  +[CNUIDate yearlessGregorianComponentsFromGMTDate:]
  +[CNUIDate yearlessComponentsFromDate:calendar:]
  +[CNUIDate dateFromComponents:destinationCalendar:]
  +[CNUIDate dateByNormalizingToGMT:]
  +[CNUIDate isYearlessComponents:]


CNDonatedMeCardPersistenceHelper : NSObject
  // class methods
  +[CNDonatedMeCardPersistenceHelper mutableCopyOfContact:byCopyingValuesForKeysOnly:]
  +[CNDonatedMeCardPersistenceHelper mutableCopyOfContact:byCopyingModificationsAndValuesForKeysOnly:]
  +[CNDonatedMeCardPersistenceHelper createNewMeContact:inStore:]
  +[CNDonatedMeCardPersistenceHelper defaultKeysForValuesToPersist]
  +[CNDonatedMeCardPersistenceHelper propertyGroupItemLog]


CNAvatarCaptureViewController : UIViewController
 @property  AVTView *avtView
 @property  NSLayoutConstraint *avtViewHeightConstraint
 @property  UILabel *promptLabel
 @property  <AVTAvatarRecord> *avatarRecord
 @property  CNCaptureButtonView *captureButtonView
 @property  UIButton *cancelButton
 @property  UIView *captureFooter
 @property  UIImage *capturedImage
 @property  <CNAvatarCaptureViewControllerDelegate> *delegate

  // instance methods
  -[CNAvatarCaptureViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNAvatarCaptureViewController setCancelButton:]
  -[CNAvatarCaptureViewController setDelegate:]
  -[CNAvatarCaptureViewController delegate]
  -[CNAvatarCaptureViewController cancelButton]
  -[CNAvatarCaptureViewController viewDidAppear:]
  -[CNAvatarCaptureViewController setPromptLabel:]
  -[CNAvatarCaptureViewController .cxx_destruct]
  -[CNAvatarCaptureViewController viewDidLoad]
  -[CNAvatarCaptureViewController viewWillAppear:]
  -[CNAvatarCaptureViewController viewDidLayoutSubviews]
  -[CNAvatarCaptureViewController promptLabel]
  -[CNAvatarCaptureViewController viewWillDisappear:]
  -[CNAvatarCaptureViewController didTapCaptureButton:]
  -[CNAvatarCaptureViewController didTapCancelButton:]
  -[CNAvatarCaptureViewController initWithAvatarRecord:]
  -[CNAvatarCaptureViewController loadAvatarView]
  -[CNAvatarCaptureViewController addPromptLabel]
  -[CNAvatarCaptureViewController updateAvtViewAspectRatioConstraint]
  -[CNAvatarCaptureViewController shouldUseLandscapeLayout]
  -[CNAvatarCaptureViewController layoutFooterView]
  -[CNAvatarCaptureViewController setupFooterView]
  -[CNAvatarCaptureViewController dismissCaptureController]
  -[CNAvatarCaptureViewController avtView]
  -[CNAvatarCaptureViewController setAvtView:]
  -[CNAvatarCaptureViewController avtViewHeightConstraint]
  -[CNAvatarCaptureViewController setAvtViewHeightConstraint:]
  -[CNAvatarCaptureViewController avatarRecord]
  -[CNAvatarCaptureViewController setAvatarRecord:]
  -[CNAvatarCaptureViewController captureButtonView]
  -[CNAvatarCaptureViewController setCaptureButtonView:]
  -[CNAvatarCaptureViewController captureFooter]
  -[CNAvatarCaptureViewController setCaptureFooter:]
  -[CNAvatarCaptureViewController capturedImage]
  -[CNAvatarCaptureViewController setCapturedImage:]


CNGroupIdentityHeaderContainerView : UIView
 @property  <CNGroupIdentityHeaderContainerViewwDelegate> *delegate

  // instance methods
  -[CNGroupIdentityHeaderContainerView setDelegate:]
  -[CNGroupIdentityHeaderContainerView delegate]
  -[CNGroupIdentityHeaderContainerView .cxx_destruct]
  -[CNGroupIdentityHeaderContainerView sizeThatFits:]
  -[CNGroupIdentityHeaderContainerView systemLayoutSizeFittingSize:]


CNGroupIdentityHeaderViewController : UIViewController <CNGroupIdentityHeaderContainerViewwDelegate, CNGroupIdentityInlineActionsViewControllerDelegate>
 @property  UIStackView *titleLabelStackView
 @property  UILabel *titleLabel
 @property  UIFont *titleLabelFont
 @property  UIFont *titleLabelWrappedFont
 @property  UIStackView *titleBadgeStackView
 @property  NSArray *horizontalTitleLabelConstraints
 @property  UIButton *actionButton
 @property  NSLayoutConstraint *actionButtonZeroHeightConstraint
 @property  double actionsViewTopMargin
 @property  CNGroupAvatarViewController *groupAvatarViewController
 @property  CNGroupIdentityInlineActionsViewController *actionsViewController
 @property  CNGroupIdentity *group
 @property  CNContactFormatter *contactFormatter
 @property  {CGSize=dd} previousSize
 @property  NSString *actionButtonTitle
 @property  <CNGroupIdentityHeaderViewControllerDelegate> *delegate
 @property  CNGroupIdentityInlineActionsViewConfiguration *actionsViewConfiguration
 @property  UIImage *avatarBadgeImage
 @property  CNBadgingAvatarBadgeStyleSettings *avatarBadgeStyleSettings
 @property  BOOL isMarkedForSyndication
 @property  CNAvatarAccessoryView *mediaContextBadge
 @property  UILabel *customSubtitleLabel
 @property  BOOL shouldShowContactBusy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNGroupIdentityHeaderViewController descriptorForRequiredKeys]

  // instance methods
  -[CNGroupIdentityHeaderViewController _canShowWhileLocked]
  -[CNGroupIdentityHeaderViewController setTitleLabel:]
  -[CNGroupIdentityHeaderViewController previousSize]
  -[CNGroupIdentityHeaderViewController setPreviousSize:]
  -[CNGroupIdentityHeaderViewController setDelegate:]
  -[CNGroupIdentityHeaderViewController contentSizeCategoryDidChange:]
  -[CNGroupIdentityHeaderViewController delegate]
  -[CNGroupIdentityHeaderViewController .cxx_destruct]
  -[CNGroupIdentityHeaderViewController viewDidLoad]
  -[CNGroupIdentityHeaderViewController loadView]
  -[CNGroupIdentityHeaderViewController viewDidLayoutSubviews]
  -[CNGroupIdentityHeaderViewController group]
  -[CNGroupIdentityHeaderViewController contactFormatter]
  -[CNGroupIdentityHeaderViewController setContactFormatter:]
  -[CNGroupIdentityHeaderViewController titleLabel]
  -[CNGroupIdentityHeaderViewController setGroup:]
  -[CNGroupIdentityHeaderViewController titleLabelFont]
  -[CNGroupIdentityHeaderViewController actionsViewConfiguration]
  -[CNGroupIdentityHeaderViewController groupAvatarViewController]
  -[CNGroupIdentityHeaderViewController setGroupAvatarViewController:]
  -[CNGroupIdentityHeaderViewController didTapActionButton]
  -[CNGroupIdentityHeaderViewController estimatedSizeThatFits:]
  -[CNGroupIdentityHeaderViewController groupIdentityInlineActionsViewController:didPerformActionOfType:fromDisambiguation:]
  -[CNGroupIdentityHeaderViewController groupIdentityInlineActionsViewController:willPresentDisambiguationUIForActionType:]
  -[CNGroupIdentityHeaderViewController initWithGroupIdentity:]
  -[CNGroupIdentityHeaderViewController initWithGroupIdentity:actionsViewConfiguration:]
  -[CNGroupIdentityHeaderViewController initWithGroupIdentity:actionsViewConfiguration:avatarViewControllerSettings:]
  -[CNGroupIdentityHeaderViewController setupAvatarView]
  -[CNGroupIdentityHeaderViewController titleLabelWrappedFont]
  -[CNGroupIdentityHeaderViewController preferredContentSizeCategoryIsXL]
  -[CNGroupIdentityHeaderViewController setupTitleLabel]
  -[CNGroupIdentityHeaderViewController titleLabelBaselineOffset]
  -[CNGroupIdentityHeaderViewController setupActionButton]
  -[CNGroupIdentityHeaderViewController updateActionButtonFont]
  -[CNGroupIdentityHeaderViewController setupActionsView]
  -[CNGroupIdentityHeaderViewController shouldShowActionsView]
  -[CNGroupIdentityHeaderViewController setupEmptyActionsView]
  -[CNGroupIdentityHeaderViewController setupPopulatedActionsView]
  -[CNGroupIdentityHeaderViewController setActionButtonTitle:]
  -[CNGroupIdentityHeaderViewController shouldShowActionButton]
  -[CNGroupIdentityHeaderViewController updateActionButton]
  -[CNGroupIdentityHeaderViewController updateTitleLabel]
  -[CNGroupIdentityHeaderViewController updateTitleLabelFont]
  -[CNGroupIdentityHeaderViewController titleLabelBoundingRectForFont:text:maxWidth:context:]
  -[CNGroupIdentityHeaderViewController shouldUseTitleLabelWrappedFontGivenBoundingRect:]
  -[CNGroupIdentityHeaderViewController setShouldHideTitleLabel:]
  -[CNGroupIdentityHeaderViewController groupIdentityDidUpdate:]
  -[CNGroupIdentityHeaderViewController setCustomSubtitleLabel:]
  -[CNGroupIdentityHeaderViewController setupCustomSubtitleLabel]
  -[CNGroupIdentityHeaderViewController setAvatarBadgeImage:]
  -[CNGroupIdentityHeaderViewController setAvatarBadgeStyleSettings:]
  -[CNGroupIdentityHeaderViewController setIsMarkedForSyndication:]
  -[CNGroupIdentityHeaderViewController setShouldShowContactBusy:]
  -[CNGroupIdentityHeaderViewController setMediaContextBadge:]
  -[CNGroupIdentityHeaderViewController viewForActionAtIndex:]
  -[CNGroupIdentityHeaderViewController sizeForLayoutInContainerSize:]
  -[CNGroupIdentityHeaderViewController displayNameForGroupIdentity]
  -[CNGroupIdentityHeaderViewController actionButtonTitle]
  -[CNGroupIdentityHeaderViewController avatarBadgeImage]
  -[CNGroupIdentityHeaderViewController avatarBadgeStyleSettings]
  -[CNGroupIdentityHeaderViewController isMarkedForSyndication]
  -[CNGroupIdentityHeaderViewController mediaContextBadge]
  -[CNGroupIdentityHeaderViewController customSubtitleLabel]
  -[CNGroupIdentityHeaderViewController shouldShowContactBusy]
  -[CNGroupIdentityHeaderViewController titleLabelStackView]
  -[CNGroupIdentityHeaderViewController setTitleLabelStackView:]
  -[CNGroupIdentityHeaderViewController setTitleLabelFont:]
  -[CNGroupIdentityHeaderViewController setTitleLabelWrappedFont:]
  -[CNGroupIdentityHeaderViewController titleBadgeStackView]
  -[CNGroupIdentityHeaderViewController setTitleBadgeStackView:]
  -[CNGroupIdentityHeaderViewController horizontalTitleLabelConstraints]
  -[CNGroupIdentityHeaderViewController setHorizontalTitleLabelConstraints:]
  -[CNGroupIdentityHeaderViewController actionButton]
  -[CNGroupIdentityHeaderViewController setActionButton:]
  -[CNGroupIdentityHeaderViewController actionButtonZeroHeightConstraint]
  -[CNGroupIdentityHeaderViewController setActionButtonZeroHeightConstraint:]
  -[CNGroupIdentityHeaderViewController actionsViewTopMargin]
  -[CNGroupIdentityHeaderViewController setActionsViewTopMargin:]
  -[CNGroupIdentityHeaderViewController actionsViewController]
  -[CNGroupIdentityHeaderViewController setActionsViewController:]
  -[CNGroupIdentityHeaderViewController hideTitleLabel:]


CNContactActionSplitCell : CNLabeledCell
 @property  UIButton *leftLabel
 @property  UIButton *rightLabel

  // instance methods
  -[CNContactActionSplitCell initWithStyle:reuseIdentifier:]
  -[CNContactActionSplitCell labelView]
  -[CNContactActionSplitCell .cxx_destruct]
  -[CNContactActionSplitCell rightMostView]
  -[CNContactActionSplitCell setLabelTextAttributes:]
  -[CNContactActionSplitCell setCardGroupItem:]
  -[CNContactActionSplitCell minCellHeight]
  -[CNContactActionSplitCell constantConstraints]
  -[CNContactActionSplitCell standardButton]
  -[CNContactActionSplitCell _setupButton:forAction:]
  -[CNContactActionSplitCell leftLabel]
  -[CNContactActionSplitCell rightLabel]


CNContactAddFavoriteAction : CNPropertyAction <CNUIFavoritesEntryPickerDelegate, CNPropertyContextMenuAction>
 @property  CNUIFavoritesEntryPicker *favoritesEntryPicker
 @property  CNFavorites *favorites
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactAddFavoriteAction .cxx_destruct]
  -[CNContactAddFavoriteAction canPerformAction]
  -[CNContactAddFavoriteAction performActionWithSender:]
  -[CNContactAddFavoriteAction favoritesEntryPicker:didPickEntry:]
  -[CNContactAddFavoriteAction menuProviderForContextMenuInteraction:]
  -[CNContactAddFavoriteAction initWithContact:propertyItems:favorites:]
  -[CNContactAddFavoriteAction _saveFavorite:]
  -[CNContactAddFavoriteAction favoritesEntryPicker]
  -[CNContactAddFavoriteAction setFavoritesEntryPicker:]
  -[CNContactAddFavoriteAction favorites]


CNContactAddLinkedCardAction : CNContactAction <CNContactPickerDelegate, CNContactContentViewControllerDelegate>
 @property  CNContactPickerViewController *contactPicker
 @property  CNContact *selectedContact
 @property  CNContact *chosenContact
 @property  NSArray *editingLinkedContacts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactAddLinkedCardAction .cxx_destruct]
  -[CNContactAddLinkedCardAction performActionWithSender:]
  -[CNContactAddLinkedCardAction contactPicker:didSelectContact:]
  -[CNContactAddLinkedCardAction contactPickerDidCancel:]
  -[CNContactAddLinkedCardAction peoplePickerLinkButtonTapped]
  -[CNContactAddLinkedCardAction contactViewController:shouldPerformDefaultActionForContact:propertyKey:labeledValue:]
  -[CNContactAddLinkedCardAction chosenContact]
  -[CNContactAddLinkedCardAction setChosenContact:]
  -[CNContactAddLinkedCardAction editingLinkedContacts]
  -[CNContactAddLinkedCardAction setEditingLinkedContacts:]
  -[CNContactAddLinkedCardAction contactPicker]
  -[CNContactAddLinkedCardAction setContactPicker:]
  -[CNContactAddLinkedCardAction selectedContact]
  -[CNContactAddLinkedCardAction setSelectedContact:]


CNContactAddNewFieldAction : CNContactAction
 @property  NSArray *prohibitedPropertyKeys
 @property  <CNContactGroupPickerDelegate> *groupPickerDelegate

  // instance methods
  -[CNContactAddNewFieldAction setProhibitedPropertyKeys:]
  -[CNContactAddNewFieldAction prohibitedPropertyKeys]
  -[CNContactAddNewFieldAction .cxx_destruct]
  -[CNContactAddNewFieldAction performActionWithSender:]
  -[CNContactAddNewFieldAction groupPickerDelegate]
  -[CNContactAddNewFieldAction setGroupPickerDelegate:]


CNUINullSaveExecutor : NSObject <CNUIContactSaveExecutor>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNUINullSaveExecutor executeSaveWithConfiguration:saveDelegate:]


CNSharingProfileMeCardUpdater : NSObject
 @property  CNContactStore *contactStore
 @property  CNContact *imageContact
 @property  CNSharingProfileLogger *logger
 @property  <CNSharingProfileMeCardUpdaterDelegate> *delegate
 @property  CNMutableContact *meContact

  // instance methods
  -[CNSharingProfileMeCardUpdater setLogger:]
  -[CNSharingProfileMeCardUpdater meContact]
  -[CNSharingProfileMeCardUpdater logger]
  -[CNSharingProfileMeCardUpdater setContactStore:]
  -[CNSharingProfileMeCardUpdater setDelegate:]
  -[CNSharingProfileMeCardUpdater delegate]
  -[CNSharingProfileMeCardUpdater .cxx_destruct]
  -[CNSharingProfileMeCardUpdater contactStore]
  -[CNSharingProfileMeCardUpdater initWithMeContact:contactStore:]
  -[CNSharingProfileMeCardUpdater alertControllerForMeCardUpdateWithImageContact:]
  -[CNSharingProfileMeCardUpdater performSave]
  -[CNSharingProfileMeCardUpdater imageContact]
  -[CNSharingProfileMeCardUpdater setImageContact:]


CNGeminiBadge : CNLabeledBadge
 @property  NSDictionary *viewAttributes

  // class methods
  +[CNGeminiBadge geminiBadgeWithText:]

  // instance methods
  -[CNGeminiBadge viewAttributes]
  -[CNGeminiBadge setViewAttributes:]


CNPhotoPickerVariantsManager : NSObject
 @property  NSArray *avatarBackgrounds
 @property  NSArray *defaultEmojis

  // class methods
  +[CNPhotoPickerVariantsManager gradientStartColor:]
  +[CNPhotoPickerVariantsManager avatarBackgroundsFromDictionary:]
  +[CNPhotoPickerVariantsManager defaultEmojisFromDictionary:]
  +[CNPhotoPickerVariantsManager colorFromRGBArray:]
  +[CNPhotoPickerVariantsManager colorFromRGBString:]
  +[CNPhotoPickerVariantsManager colorVariantWithColorNamed:]
  +[CNPhotoPickerVariantsManager avatarPoseConfigurationsForAvatarRecord:]
  +[CNPhotoPickerVariantsManager sharingProfileAvatarPoseConfigurationForAvatarRecord:]
  +[CNPhotoPickerVariantsManager monogramColorGradientBackground:]
  +[CNPhotoPickerVariantsManager colorGradientBackground:]
  +[CNPhotoPickerVariantsManager nonAlphaColorForBackgroundColor:]
  +[CNPhotoPickerVariantsManager compositeColorForTopColor:bottomColor:]
  +[CNPhotoPickerVariantsManager gradientBackgroundImageForColor:]
  +[CNPhotoPickerVariantsManager generateGradientColorsByColor]
  +[CNPhotoPickerVariantsManager generateMonogramGradientColorsByColor]

  // instance methods
  -[CNPhotoPickerVariantsManager .cxx_destruct]
  -[CNPhotoPickerVariantsManager init]
  -[CNPhotoPickerVariantsManager randomColorVariant]
  -[CNPhotoPickerVariantsManager avatarBackgrounds]
  -[CNPhotoPickerVariantsManager setAvatarBackgrounds:]
  -[CNPhotoPickerVariantsManager defaultEmojis]
  -[CNPhotoPickerVariantsManager setDefaultEmojis:]


CNPhotoPickerDefaultEmoji : NSObject
 @property  NSString *emojiString
 @property  CNPhotoPickerColorVariant *colorVariant

  // instance methods
  -[CNPhotoPickerDefaultEmoji .cxx_destruct]
  -[CNPhotoPickerDefaultEmoji emojiString]
  -[CNPhotoPickerDefaultEmoji setEmojiString:]
  -[CNPhotoPickerDefaultEmoji initWithEmojiString:colorVariant:]
  -[CNPhotoPickerDefaultEmoji colorVariant]
  -[CNPhotoPickerDefaultEmoji setColorVariant:]


CNMeCardSharingSettingsViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, UITextFieldDelegate, CNMeCardSharingSettingsHeaderViewControllerDelegate, CNMeCardSharingEnabledDelegate, CNPhotoPickerViewControllerDelegate>
 @property  CNContactStore *contactStore
 @property  CNContact *contact
 @property  CNMutableContact *editingContact
 @property  CNContactImage *editingContactImage
 @property  NSString *editingGivenName
 @property  NSString *editingFamilyName
 @property  CNSharingProfileMeCardUpdater *meCardUpdater
 @property  CNMeCardSharingPickerLayoutAttributes *layoutAttributes
 @property  CNMeCardSharingSettingsHeaderViewController *headerViewController
 @property  <CNMeCardSharingAvatarProvider> *avatarProvider
 @property  <CNMeCardSharingNameProvider> *nameProvider
 @property  CNMeCardSharingSettingsNameDataSource *nameDataSource
 @property  CNMeCardSharingEnabledDataSource *enabledDataSource
 @property  CNMeCardSharingAudienceDataSource *sharingAudienceDataSource
 @property  CNPhotoPickerViewController *photoPicker
 @property  NSArray *sectionDataSources
 @property  UISwitch *shareSwitch
 @property  UITableView *tableView
 @property  long long nameOrder
 @property  UITextField *givenNameField
 @property  UITextField *familyNameField
 @property  CNMeCardSharingContactAvatarProvider *editingContactAvatarProvider
 @property  BOOL shouldSetAsMeContact
 @property  CNSharingProfileLogger *logger
 @property  double keyboardHeight
 @property  <CNMeCardSharingSettingsViewControllerDelegate> *delegate
 @property  BOOL sharingEnabled
 @property  unsigned long selectedSharingAudience
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNMeCardSharingSettingsViewController descriptorForRequiredKeys]

  // instance methods
  -[CNMeCardSharingSettingsViewController logger]
  -[CNMeCardSharingSettingsViewController tableView:heightForRowAtIndexPath:]
  -[CNMeCardSharingSettingsViewController setKeyboardHeight:]
  -[CNMeCardSharingSettingsViewController tableView:cellForRowAtIndexPath:]
  -[CNMeCardSharingSettingsViewController tableView:numberOfRowsInSection:]
  -[CNMeCardSharingSettingsViewController numberOfSectionsInTableView:]
  -[CNMeCardSharingSettingsViewController tableView:willSelectRowAtIndexPath:]
  -[CNMeCardSharingSettingsViewController keyboardHeight]
  -[CNMeCardSharingSettingsViewController contact]
  -[CNMeCardSharingSettingsViewController textFieldShouldReturn:]
  -[CNMeCardSharingSettingsViewController setDelegate:]
  -[CNMeCardSharingSettingsViewController contentSizeCategoryDidChange:]
  -[CNMeCardSharingSettingsViewController tableView:didSelectRowAtIndexPath:]
  -[CNMeCardSharingSettingsViewController delegate]
  -[CNMeCardSharingSettingsViewController tableView:titleForHeaderInSection:]
  -[CNMeCardSharingSettingsViewController dealloc]
  -[CNMeCardSharingSettingsViewController nameOrder]
  -[CNMeCardSharingSettingsViewController .cxx_destruct]
  -[CNMeCardSharingSettingsViewController tableView]
  -[CNMeCardSharingSettingsViewController viewDidLoad]
  -[CNMeCardSharingSettingsViewController viewWillAppear:]
  -[CNMeCardSharingSettingsViewController viewDidLayoutSubviews]
  -[CNMeCardSharingSettingsViewController setTableView:]
  -[CNMeCardSharingSettingsViewController sharingEnabled]
  -[CNMeCardSharingSettingsViewController layoutAttributes]
  -[CNMeCardSharingSettingsViewController nameDataSource]
  -[CNMeCardSharingSettingsViewController keyboardWillShow:]
  -[CNMeCardSharingSettingsViewController keyboardWillHide:]
  -[CNMeCardSharingSettingsViewController textFieldDidEndEditing:]
  -[CNMeCardSharingSettingsViewController headerViewController]
  -[CNMeCardSharingSettingsViewController setContact:]
  -[CNMeCardSharingSettingsViewController contactStore]
  -[CNMeCardSharingSettingsViewController traitCollectionDidChange:]
  -[CNMeCardSharingSettingsViewController tableView:titleForFooterInSection:]
  -[CNMeCardSharingSettingsViewController photoPickerDidCancel:]
  -[CNMeCardSharingSettingsViewController photoPicker:didUpdatePhotoForContact:withContactImage:]
  -[CNMeCardSharingSettingsViewController givenNameDidChange:]
  -[CNMeCardSharingSettingsViewController familyNameDidChange:]
  -[CNMeCardSharingSettingsViewController sharingSettingsHeaderWasTapped:]
  -[CNMeCardSharingSettingsViewController sharingEnabledDataSource:didChangeEnabledState:]
  -[CNMeCardSharingSettingsViewController initWithContactStore:contact:avatarProvider:nameProvider:sharingEnabled:selectedSharingAudience:]
  -[CNMeCardSharingSettingsViewController presentErrorAlertForEmptyPhotoIfNeededWithCompletion:]
  -[CNMeCardSharingSettingsViewController notifyDelegateOfChangesWithDidSaveToMeCard:]
  -[CNMeCardSharingSettingsViewController updateVisibilityOfAudienceSection]
  -[CNMeCardSharingSettingsViewController adjustInsetsForKeyboardOverlap:]
  -[CNMeCardSharingSettingsViewController selectedSharingAudience]
  -[CNMeCardSharingSettingsViewController textFieldForIndex:]
  -[CNMeCardSharingSettingsViewController processSelectionForTableView:indexPath:]
  -[CNMeCardSharingSettingsViewController promptForSavingToMeCard]
  -[CNMeCardSharingSettingsViewController saveDraftContact]
  -[CNMeCardSharingSettingsViewController updateContact:withImagePropertiesFromContact:]
  -[CNMeCardSharingSettingsViewController presentPhotoPickerControllerForContact:]
  -[CNMeCardSharingSettingsViewController editingContact]
  -[CNMeCardSharingSettingsViewController setEditingContact:]
  -[CNMeCardSharingSettingsViewController editingContactImage]
  -[CNMeCardSharingSettingsViewController setEditingContactImage:]
  -[CNMeCardSharingSettingsViewController editingGivenName]
  -[CNMeCardSharingSettingsViewController setEditingGivenName:]
  -[CNMeCardSharingSettingsViewController editingFamilyName]
  -[CNMeCardSharingSettingsViewController setEditingFamilyName:]
  -[CNMeCardSharingSettingsViewController meCardUpdater]
  -[CNMeCardSharingSettingsViewController setMeCardUpdater:]
  -[CNMeCardSharingSettingsViewController setHeaderViewController:]
  -[CNMeCardSharingSettingsViewController avatarProvider]
  -[CNMeCardSharingSettingsViewController nameProvider]
  -[CNMeCardSharingSettingsViewController enabledDataSource]
  -[CNMeCardSharingSettingsViewController sharingAudienceDataSource]
  -[CNMeCardSharingSettingsViewController photoPicker]
  -[CNMeCardSharingSettingsViewController setPhotoPicker:]
  -[CNMeCardSharingSettingsViewController sectionDataSources]
  -[CNMeCardSharingSettingsViewController setSectionDataSources:]
  -[CNMeCardSharingSettingsViewController shareSwitch]
  -[CNMeCardSharingSettingsViewController setShareSwitch:]
  -[CNMeCardSharingSettingsViewController setNameOrder:]
  -[CNMeCardSharingSettingsViewController givenNameField]
  -[CNMeCardSharingSettingsViewController setGivenNameField:]
  -[CNMeCardSharingSettingsViewController familyNameField]
  -[CNMeCardSharingSettingsViewController setFamilyNameField:]
  -[CNMeCardSharingSettingsViewController editingContactAvatarProvider]
  -[CNMeCardSharingSettingsViewController setEditingContactAvatarProvider:]
  -[CNMeCardSharingSettingsViewController shouldSetAsMeContact]
  -[CNMeCardSharingSettingsViewController setShouldSetAsMeContact:]


CNContactContentNavigationItemUpdaterResult : NSObject
 @property  BOOL enableEditShortcut
 @property  BOOL enableCancelShortcut
 @property  BOOL enableSaveShortcut

  // instance methods
  -[CNContactContentNavigationItemUpdaterResult enableEditShortcut]
  -[CNContactContentNavigationItemUpdaterResult setEnableEditShortcut:]
  -[CNContactContentNavigationItemUpdaterResult enableCancelShortcut]
  -[CNContactContentNavigationItemUpdaterResult setEnableCancelShortcut:]
  -[CNContactContentNavigationItemUpdaterResult enableSaveShortcut]
  -[CNContactContentNavigationItemUpdaterResult setEnableSaveShortcut:]


CNContactContentNavigationItemUpdater : NSObject
 @property  NSArray *preEditLeftBarButtonItems
 @property  NSArray *extraLeftBarButtonItems
 @property  NSArray *extraRightBarButtonItems

  // instance methods
  -[CNContactContentNavigationItemUpdater .cxx_destruct]
  -[CNContactContentNavigationItemUpdater updateEditingNavigationItemForController:actionTarget:isInSheet:isUpdatingContact:hasChanges:animated:]
  -[CNContactContentNavigationItemUpdater updateEditingNavigationItemForController:actionTarget:isInSheet:customEditButtonTitle:hasChanges:animated:]
  -[CNContactContentNavigationItemUpdater updateEditDoneButtonForController:isUpdatingContact:hasChanges:]
  -[CNContactContentNavigationItemUpdater updateEditDoneButtonForController:customEditButtonTitle:hasChanges:]
  -[CNContactContentNavigationItemUpdater customEditItemTitleForIsUpdatingContact:]
  -[CNContactContentNavigationItemUpdater updateDisplayNavigationItemsForController:mode:actionTarget:allowsEditing:editRequiresAuthorization:isInSheet:animated:]
  -[CNContactContentNavigationItemUpdater updateDisplayNavigationItemsForController:mode:actionTarget:allowsEditing:editButtonEnabled:isInSheet:animated:]
  -[CNContactContentNavigationItemUpdater updateDisplayDoneButtonForController:allowsEditing:viewMode:editRequiresAuthorization:]
  -[CNContactContentNavigationItemUpdater updateDisplayDoneButtonForController:allowsEditing:viewMode:editButtonEnabled:]
  -[CNContactContentNavigationItemUpdater preEditLeftBarButtonItems]
  -[CNContactContentNavigationItemUpdater setPreEditLeftBarButtonItems:]
  -[CNContactContentNavigationItemUpdater extraLeftBarButtonItems]
  -[CNContactContentNavigationItemUpdater setExtraLeftBarButtonItems:]
  -[CNContactContentNavigationItemUpdater extraRightBarButtonItems]
  -[CNContactContentNavigationItemUpdater setExtraRightBarButtonItems:]


CNContactAddToExistingContactAction : CNContactAction <CNContactPickerDelegate, CNContactViewControllerDelegate>
 @property  CNContactPickerViewController *contactPicker
 @property  CNContact *chosenContact
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactAddToExistingContactAction .cxx_destruct]
  -[CNContactAddToExistingContactAction contactViewController:didCompleteWithContact:]
  -[CNContactAddToExistingContactAction performActionWithSender:]
  -[CNContactAddToExistingContactAction contactPicker:didSelectContact:]
  -[CNContactAddToExistingContactAction contactPickerDidCancel:]
  -[CNContactAddToExistingContactAction chosenContact]
  -[CNContactAddToExistingContactAction setChosenContact:]
  -[CNContactAddToExistingContactAction contactPicker]
  -[CNContactAddToExistingContactAction setContactPicker:]


CNSharingProfileOnboardingNameCell : UITableViewCell
 @property  UITextField *givenNameField
 @property  UITextField *familyNameField
 @property  UIView *fakeSeparator
 @property  UIImageView *avatarImageView
 @property  long long nameOrder
 @property  UIImage *avatarImage
 @property  NSString *givenName
 @property  NSString *familyName

  // class methods
  +[CNSharingProfileOnboardingNameCell cellIdentifier]
  +[CNSharingProfileOnboardingNameCell desiredMinimumCellHeight]

  // instance methods
  -[CNSharingProfileOnboardingNameCell initWithStyle:reuseIdentifier:]
  -[CNSharingProfileOnboardingNameCell familyName]
  -[CNSharingProfileOnboardingNameCell setGivenName:]
  -[CNSharingProfileOnboardingNameCell givenName]
  -[CNSharingProfileOnboardingNameCell separatorHeight]
  -[CNSharingProfileOnboardingNameCell setFamilyName:]
  -[CNSharingProfileOnboardingNameCell nameOrder]
  -[CNSharingProfileOnboardingNameCell .cxx_destruct]
  -[CNSharingProfileOnboardingNameCell prepareForReuse]
  -[CNSharingProfileOnboardingNameCell layoutSubviews]
  -[CNSharingProfileOnboardingNameCell textFieldForIndex:]
  -[CNSharingProfileOnboardingNameCell setNameOrder:]
  -[CNSharingProfileOnboardingNameCell givenNameField]
  -[CNSharingProfileOnboardingNameCell setGivenNameField:]
  -[CNSharingProfileOnboardingNameCell familyNameField]
  -[CNSharingProfileOnboardingNameCell setFamilyNameField:]
  -[CNSharingProfileOnboardingNameCell setAvatarImage:]
  -[CNSharingProfileOnboardingNameCell setGivenNameField:familyNameField:]
  -[CNSharingProfileOnboardingNameCell avatarImage]
  -[CNSharingProfileOnboardingNameCell fakeSeparator]
  -[CNSharingProfileOnboardingNameCell setFakeSeparator:]
  -[CNSharingProfileOnboardingNameCell avatarImageView]
  -[CNSharingProfileOnboardingNameCell setAvatarImageView:]


CNQuickAction : NSObject
 @property  BOOL backAction
 @property  BOOL enabled
 @property  CNQuickActionsManager *manager
 @property  NSString *category
 @property  NSString *identifier
 @property  NSString *globalIdentifier
 @property  UIImage *image
 @property  NSString *title
 @property  UIView *sourceView
 @property  BOOL cached
 @property  BOOL dismissesWithAnimation
 @property  unsigned long score
 @property  @? performBlock
 @property  CNContactStyle *previousStyle
 @property  BOOL useDuetIfAvailable
 @property  BOOL isLongPress
 @property  UIColor *imageTintColor

  // class methods
  +[CNQuickAction reallyPerform]
  +[CNQuickAction possibleTitlesForActionsInCategories:context:]
  +[CNQuickAction defaultTitleForActionInCategory:context:]
  +[CNQuickAction actionWithTitle:image:block:]

  // instance methods
  -[CNQuickAction setCategory:]
  -[CNQuickAction setSourceView:]
  -[CNQuickAction setImageTintColor:]
  -[CNQuickAction identifier]
  -[CNQuickAction setManager:]
  -[CNQuickAction score]
  -[CNQuickAction perform]
  -[CNQuickAction imageTintColor]
  -[CNQuickAction category]
  -[CNQuickAction .cxx_destruct]
  -[CNQuickAction setBackAction:]
  -[CNQuickAction isLongPress]
  -[CNQuickAction setEnabled:]
  -[CNQuickAction title]
  -[CNQuickAction image]
  -[CNQuickAction setIdentifier:]
  -[CNQuickAction manager]
  -[CNQuickAction cached]
  -[CNQuickAction enabled]
  -[CNQuickAction setScore:]
  -[CNQuickAction sourceView]
  -[CNQuickAction performBlock]
  -[CNQuickAction setImage:]
  -[CNQuickAction setTitle:]
  -[CNQuickAction isEqual:]
  -[CNQuickAction cancel]
  -[CNQuickAction init]
  -[CNQuickAction setPerformBlock:]
  -[CNQuickAction useDuetIfAvailable]
  -[CNQuickAction setUseDuetIfAvailable:]
  -[CNQuickAction globalIdentifier]
  -[CNQuickAction _coreDuetValue]
  -[CNQuickAction _coreDuetInteractionMechanisms]
  -[CNQuickAction matchesDuetInteraction:]
  -[CNQuickAction outlinedImage]
  -[CNQuickAction imageForContext:]
  -[CNQuickAction defaultTitleForContext:]
  -[CNQuickAction titleForContext:]
  -[CNQuickAction subtitleForContext:]
  -[CNQuickAction performWithCompletionBlock:]
  -[CNQuickAction setIsLongPress:]
  -[CNQuickAction setCached:]
  -[CNQuickAction dismissesWithAnimation]
  -[CNQuickAction setDismissesWithAnimation:]
  -[CNQuickAction previousStyle]
  -[CNQuickAction setPreviousStyle:]
  -[CNQuickAction isBackAction]
  -[CNQuickAction userActionType]


CNQuickContactAction : CNQuickAction <CNContactActionDelegate>
 @property  CNContactAction *contactAction
 @property  @? completionBlock
 @property  <CNQuickContactActionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNQuickContactAction setCompletionBlock:]
  -[CNQuickContactAction setDelegate:]
  -[CNQuickContactAction completionBlock]
  -[CNQuickContactAction contactViewCache]
  -[CNQuickContactAction delegate]
  -[CNQuickContactAction actionDidFinish:]
  -[CNQuickContactAction .cxx_destruct]
  -[CNQuickContactAction action:prepareChildContactViewController:sender:]
  -[CNQuickContactAction action:presentViewController:sender:]
  -[CNQuickContactAction action:dismissViewController:sender:]
  -[CNQuickContactAction action:pushViewController:sender:]
  -[CNQuickContactAction actionDidUpdate:]
  -[CNQuickContactAction actionWasCanceled:]
  -[CNQuickContactAction performWithCompletionBlock:]
  -[CNQuickContactAction initWithContactAction:]
  -[CNQuickContactAction contactAction]
  -[CNQuickContactAction setContactAction:]


CNQuickPropertyAction : CNQuickContactAction
 @property  CNPropertyAction *propertyAction

  // instance methods
  -[CNQuickPropertyAction identifier]
  -[CNQuickPropertyAction score]
  -[CNQuickPropertyAction enabled]
  -[CNQuickPropertyAction _coreDuetValue]
  -[CNQuickPropertyAction titleForContext:]
  -[CNQuickPropertyAction subtitleForContext:]
  -[CNQuickPropertyAction performWithCompletionBlock:]
  -[CNQuickPropertyAction initWithPropertyAction:]
  -[CNQuickPropertyAction propertyAction]
  -[CNQuickPropertyAction propertyItem]


CNQuickFaceTimeAction : CNQuickPropertyAction
 @property  BOOL audioOnly

  // class methods
  +[CNQuickFaceTimeAction defaultFaceTimeTitle]
  +[CNQuickFaceTimeAction defaultFaceTimeAudioTitle]

  // instance methods
  -[CNQuickFaceTimeAction identifier]
  -[CNQuickFaceTimeAction score]
  -[CNQuickFaceTimeAction category]
  -[CNQuickFaceTimeAction audioOnly]
  -[CNQuickFaceTimeAction _coreDuetValue]
  -[CNQuickFaceTimeAction _coreDuetInteractionMechanisms]
  -[CNQuickFaceTimeAction titleForContext:]
  -[CNQuickFaceTimeAction subtitleForContext:]
  -[CNQuickFaceTimeAction performWithCompletionBlock:]
  -[CNQuickFaceTimeAction setAudioOnly:]


CNQuickDisambiguateAction : CNQuickPropertyAction
 @property  NSOrderedSet *actions
 @property  CNQuickAction *mainAction
 @property  BOOL ignoreMainAction

  // instance methods
  -[CNQuickDisambiguateAction .cxx_destruct]
  -[CNQuickDisambiguateAction actions]
  -[CNQuickDisambiguateAction setActions:]
  -[CNQuickDisambiguateAction isEqual:]
  -[CNQuickDisambiguateAction initWithActions:]
  -[CNQuickDisambiguateAction titleForContext:]
  -[CNQuickDisambiguateAction subtitleForContext:]
  -[CNQuickDisambiguateAction performWithCompletionBlock:]
  -[CNQuickDisambiguateAction mainAction]
  -[CNQuickDisambiguateAction setMainAction:]
  -[CNQuickDisambiguateAction ignoreMainAction]
  -[CNQuickDisambiguateAction setIgnoreMainAction:]


CNContactListStyleApplier : NSObject
 @property  double cellEstimatedHeight
 @property  unsigned long tableNoContactsAvailableStyle
 @property  BOOL usesInsetPlatterStyle
 @property  <CNContactListStyle> *contactListStyle

  // class methods
  +[CNContactListStyleApplier applyDefaultContactListStyleToHeaderFooter:withTitle:isRTL:]
  +[CNContactListStyleApplier applyDefaultStyleToContact:usingFormatter:ofCell:]

  // instance methods
  -[CNContactListStyleApplier initWithContactListStyle:]
  -[CNContactListStyleApplier applyContactListStyleToCollectionLayoutConfiguration:]
  -[CNContactListStyleApplier cellEstimatedHeight]
  -[CNContactListStyleApplier applyEditingStateBackgroundConfigurationToCell:]
  -[CNContactListStyleApplier applyContactListStyleToHeaderFooter:withTitle:isRTL:]
  -[CNContactListStyleApplier applyContactListStyleToSearchCell:]
  -[CNContactListStyleApplier applyContactListStyleToSearchBar:]
  -[CNContactListStyleApplier applyContactListDirectionalLayoutMargins:toLayoutSection:collectionViewIsShowingIndexBar:]
  -[CNContactListStyleApplier applyContactListStyleToNavigationBar:]
  -[CNContactListStyleApplier attributedString:foregroundColor:]
  -[CNContactListStyleApplier applySubtitleTextColorsToSearchCellContentConfiguration:withSubtitleText:forSelectedState:]
  -[CNContactListStyleApplier .cxx_destruct]
  -[CNContactListStyleApplier usesInsetPlatterStyle]
  -[CNContactListStyleApplier applyContactListStyleToMeContactLabel:ofCell:]
  -[CNContactListStyleApplier tableNoContactsAvailableStyle]
  -[CNContactListStyleApplier applyContactListStyleToBannerFootnote:primaryAppearance:]
  -[CNContactListStyleApplier defaultListContentConfiguration]
  -[CNContactListStyleApplier applyContactListStyleToContentConfiguration:usingState:forCell:]
  -[CNContactListStyleApplier applyCellSeparatorInsetStyleToConfiguration:superviewDirectionalLayoutMargins:itemWantsFullLengthBottomSeparator:]
  -[CNContactListStyleApplier applyTextColorsToContentConfiguration:usingState:]
  -[CNContactListStyleApplier applyContactListStyleToCollectionView:]
  -[CNContactListStyleApplier applyContactListStyleToContact:usingFormatter:ofCell:]
  -[CNContactListStyleApplier applyContactListStyleToEmergencyIcon:ofCell:]
  -[CNContactListStyleApplier applyContactListStyleToBannerTitle:primaryAppearance:]
  -[CNContactListStyleApplier contactListStyle]
  -[CNContactListStyleApplier applyContactListStyleToCell:]
  -[CNContactListStyleApplier applyContactListStyleToSubtitleText:ofSearchResultCell:]
  -[CNContactListStyleApplier applyContactListStyleToSearchHeader:withTitle:]


CNSharingProfileOnboardingPosePickerController : OBWelcomeController <CNPhotoPickerVariantListControllerDelegate>
 @property  <AVTAvatarRecord> *avatarRecord
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  CNPhotoPickerVariantListController *variantListController
 @property  OBLinkTrayButton *setupLaterButton
 @property  OBBoldTrayButton *backButton
 @property  OBBoldTrayButton *nextButton
 @property  NSLayoutConstraint *heightConstraint
 @property  <CNSharingProfileOnboardingPosePickerControllerDelegate> *delegate

  // instance methods
  -[CNSharingProfileOnboardingPosePickerController backButton]
  -[CNSharingProfileOnboardingPosePickerController setHeightConstraint:]
  -[CNSharingProfileOnboardingPosePickerController setDelegate:]
  -[CNSharingProfileOnboardingPosePickerController delegate]
  -[CNSharingProfileOnboardingPosePickerController heightConstraint]
  -[CNSharingProfileOnboardingPosePickerController .cxx_destruct]
  -[CNSharingProfileOnboardingPosePickerController viewDidLoad]
  -[CNSharingProfileOnboardingPosePickerController viewDidLayoutSubviews]
  -[CNSharingProfileOnboardingPosePickerController setBackButton:]
  -[CNSharingProfileOnboardingPosePickerController avatarRecord]
  -[CNSharingProfileOnboardingPosePickerController setAvatarRecord:]
  -[CNSharingProfileOnboardingPosePickerController didTapSetupLater:]
  -[CNSharingProfileOnboardingPosePickerController didTapBack:]
  -[CNSharingProfileOnboardingPosePickerController didTapContinue:]
  -[CNSharingProfileOnboardingPosePickerController photoPickerVariantListController:didSelectProviderItem:]
  -[CNSharingProfileOnboardingPosePickerController photoPickerVariantListControllerDidCancel:]
  -[CNSharingProfileOnboardingPosePickerController initWithAvatarRecord:variantsManager:]
  -[CNSharingProfileOnboardingPosePickerController variantsManager]
  -[CNSharingProfileOnboardingPosePickerController setVariantsManager:]
  -[CNSharingProfileOnboardingPosePickerController variantListController]
  -[CNSharingProfileOnboardingPosePickerController setVariantListController:]
  -[CNSharingProfileOnboardingPosePickerController setupLaterButton]
  -[CNSharingProfileOnboardingPosePickerController setSetupLaterButton:]
  -[CNSharingProfileOnboardingPosePickerController nextButton]
  -[CNSharingProfileOnboardingPosePickerController setNextButton:]


CNActionItem : NSObject
 @property  NSString *type
 @property  UIImage *image
 @property  NSString *title
 @property  BOOL disabled

  // instance methods
  -[CNActionItem disabled]
  -[CNActionItem type]
  -[CNActionItem .cxx_destruct]
  -[CNActionItem setDisabled:]
  -[CNActionItem title]
  -[CNActionItem image]
  -[CNActionItem setTitle:]
  -[CNActionItem initWithImage:type:]


CNSwiftUIViews : NSObject
  // class methods
  +[CNSwiftUIViews contactCardView]


CNContactCell : UITableViewCell <CNIndentableCell>
 @property  NSArray *constantConstraints
 @property  NSArray *variableConstraints
 @property  double minCellHeight
 @property  CNCardGroupItem *cardGroupItem
 @property  BOOL showSeparator
 @property  BOOL hasGapBetweenSeparatorAndTrailingEdge

  // class methods
  +[CNContactCell shouldIndentWhileEditing]

  // instance methods
  -[CNContactCell initWithStyle:reuseIdentifier:]
  -[CNContactCell showSeparator]
  -[CNContactCell contentSizeCategoryDidChange:]
  -[CNContactCell updateConstraints]
  -[CNContactCell dealloc]
  -[CNContactCell .cxx_destruct]
  -[CNContactCell prepareForReuse]
  -[CNContactCell setShowSeparator:]
  -[CNContactCell _setAnimating:clippingAdjacentCells:]
  -[CNContactCell setCardGroupItem:]
  -[CNContactCell variableConstraints]
  -[CNContactCell minCellHeight]
  -[CNContactCell shouldPerformDefaultAction]
  -[CNContactCell constantConstraints]
  -[CNContactCell performDefaultAction]
  -[CNContactCell shouldPerformAccessoryAction]
  -[CNContactCell performAccessoryAction]
  -[CNContactCell hasGapBetweenSeparatorAndTrailingEdge]
  -[CNContactCell cardGroupItem]


CNUIToolbarItem : NSObject
 @property  BOOL isDefault
 @property  BOOL isCancel
 @property  NSString *title
 @property  @? actionBlock

  // instance methods
  -[CNUIToolbarItem isDefault]
  -[CNUIToolbarItem .cxx_destruct]
  -[CNUIToolbarItem actionBlock]
  -[CNUIToolbarItem title]
  -[CNUIToolbarItem setTitle:]
  -[CNUIToolbarItem setIsDefault:]
  -[CNUIToolbarItem isCancel]
  -[CNUIToolbarItem setIsCancel:]
  -[CNUIToolbarItem setActionBlock:]


CNUIToolbar : UIView
 @property  NSArray *buttons
 @property  UIView *border
 @property  UIVisualEffectView *visualEffectView
 @property  BOOL isAnimating
 @property  NSArray *items

  // class methods
  +[CNUIToolbar defaultToolBarHeight]

  // instance methods
  -[CNUIToolbar setIsAnimating:]
  -[CNUIToolbar initWithItems:]
  -[CNUIToolbar visualEffectView]
  -[CNUIToolbar borderWidth]
  -[CNUIToolbar isAnimating]
  -[CNUIToolbar .cxx_destruct]
  -[CNUIToolbar items]
  -[CNUIToolbar layoutSubviews]
  -[CNUIToolbar border]
  -[CNUIToolbar buttons]
  -[CNUIToolbar setButtons:]
  -[CNUIToolbar setBorder:]
  -[CNUIToolbar setVisualEffectView:]
  -[CNUIToolbar buttonPressed:]
  -[CNUIToolbar setupView]
  -[CNUIToolbar buttonForItem:]
  -[CNUIToolbar setupBorder]
  -[CNUIToolbar isEnabledForItem:]
  -[CNUIToolbar setEnabled:forItem:]


CNContactCreateNewContactAction : CNContactAction <CNContactViewControllerDelegate>
 @property  CNContact *createdContact
 @property  UIViewController *presentingViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactCreateNewContactAction presentingViewController]
  -[CNContactCreateNewContactAction .cxx_destruct]
  -[CNContactCreateNewContactAction setPresentingViewController:]
  -[CNContactCreateNewContactAction contactViewController:didCompleteWithContact:]
  -[CNContactCreateNewContactAction performActionWithSender:]
  -[CNContactCreateNewContactAction createdContact]
  -[CNContactCreateNewContactAction setCreatedContact:]


CNUIDataCollectorSGLogger : NSObject
 @property  <CNScheduler> *workQueue
 @property  @? serviceProvider

  // class methods
  +[CNUIDataCollectorSGLogger loggerWithSGSuggestionsServiceProvider:schedulerProvider:]

  // instance methods
  -[CNUIDataCollectorSGLogger workQueue]
  -[CNUIDataCollectorSGLogger setWorkQueue:]
  -[CNUIDataCollectorSGLogger .cxx_destruct]
  -[CNUIDataCollectorSGLogger serviceProvider]
  -[CNUIDataCollectorSGLogger initWithSuggestionsServiceProvider:schedulerProvider:]
  -[CNUIDataCollectorSGLogger performBlockWithService:]
  -[CNUIDataCollectorSGLogger logContactSearchResultSelected:contactIdentifier:bundleID:]
  -[CNUIDataCollectorSGLogger logSuggestedContactDetailShown:contactIdentifier:bundleID:]
  -[CNUIDataCollectorSGLogger logSuggestedContactDetailUsed:contactIdentifier:bundleID:]
  -[CNUIDataCollectorSGLogger logContactCreated:contactIdentifier:bundleID:]
  -[CNUIDataCollectorSGLogger logSearchResultsIncludedPureSuggestionsWithBundleID:]


CNContactOrbActionsController : NSObject <CNContactActionsControllerDelegate, CNQuickActionsManagerDelegate>
 @property  NSArray *contacts
 @property  NSArray *menuItems
 @property  CNContactActionsController *actionsController
 @property  CNQuickActionsManager *actionsManager
 @property  NSArray *actionCategories
 @property  BOOL bypassActionValidation
 @property  <CNContactOrbActionsControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactOrbActionsController descriptorForRequiredKeys]

  // instance methods
  -[CNContactOrbActionsController bypassActionValidation]
  -[CNContactOrbActionsController actionCategories]
  -[CNContactOrbActionsController setDelegate:]
  -[CNContactOrbActionsController delegate]
  -[CNContactOrbActionsController setupActionsForContacts:]
  -[CNContactOrbActionsController setContacts:]
  -[CNContactOrbActionsController .cxx_destruct]
  -[CNContactOrbActionsController contacts]
  -[CNContactOrbActionsController initWithContact:]
  -[CNContactOrbActionsController setBypassActionValidation:]
  -[CNContactOrbActionsController setMenuItems:]
  -[CNContactOrbActionsController setActionCategories:]
  -[CNContactOrbActionsController menuItems]
  -[CNContactOrbActionsController actionsManager:presentingViewControllerForAction:]
  -[CNContactOrbActionsController initWithContacts:]
  -[CNContactOrbActionsController actionsController]
  -[CNContactOrbActionsController contactActionsController:didSelectAction:]
  -[CNContactOrbActionsController contactActionsController:didUpdateWithMenu:]
  -[CNContactOrbActionsController initWithContacts:actionCategories:]
  -[CNContactOrbActionsController initWithContacts:actionCategories:bypassActionValidation:]
  -[CNContactOrbActionsController shouldUseActionsManagerForContacts:]
  -[CNContactOrbActionsController setupActionsManagerForContacts:]
  -[CNContactOrbActionsController menuItemsForContactsWithActions:]
  -[CNContactOrbActionsController setupActionsControllerForContact:]
  -[CNContactOrbActionsController currentAvailableMenuItems]
  -[CNContactOrbActionsController reloadMenuItems]
  -[CNContactOrbActionsController setActionsController:]
  -[CNContactOrbActionsController actionsManager]
  -[CNContactOrbActionsController setActionsManager:]


CNContactDeleteContactAction : CNContactAction
 @property  CNUIExternalComponentsFactory *componentsFactory
 @property  CNUICoreRecentsManager *recentsManager

  // instance methods
  -[CNContactDeleteContactAction recentsManager]
  -[CNContactDeleteContactAction .cxx_destruct]
  -[CNContactDeleteContactAction componentsFactory]
  -[CNContactDeleteContactAction performActionWithSender:]
  -[CNContactDeleteContactAction initWithContact:recentsManager:componentsFactory:]
  -[CNContactDeleteContactAction deleteContact]
  -[CNContactDeleteContactAction showDeleteFailureAlert]


CNMeCardSharingOnboardingAvatarCarouselItem : NSObject
 @property  UIImage *cachedImage
 @property  @? imageProvider
 @property  unsigned long imageType
 @property  NSString *title
 @property  double imageInsetPercentage
 @property  BOOL shouldShowVariants

  // instance methods
  -[CNMeCardSharingOnboardingAvatarCarouselItem imageType]
  -[CNMeCardSharingOnboardingAvatarCarouselItem initWithTitle:]
  -[CNMeCardSharingOnboardingAvatarCarouselItem .cxx_destruct]
  -[CNMeCardSharingOnboardingAvatarCarouselItem setImageType:]
  -[CNMeCardSharingOnboardingAvatarCarouselItem title]
  -[CNMeCardSharingOnboardingAvatarCarouselItem imageProvider]
  -[CNMeCardSharingOnboardingAvatarCarouselItem cachedImage]
  -[CNMeCardSharingOnboardingAvatarCarouselItem setCachedImage:]
  -[CNMeCardSharingOnboardingAvatarCarouselItem initWithImageInsetPercentage:imageProvider:]
  -[CNMeCardSharingOnboardingAvatarCarouselItem imageInsetPercentage]
  -[CNMeCardSharingOnboardingAvatarCarouselItem shouldShowVariants]
  -[CNMeCardSharingOnboardingAvatarCarouselItem setShouldShowVariants:]


CNContactPropertyGroupPickerViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
 @property  NSArray *prohibitedPropertyKeys
 @property  <CNContactGroupPickerDelegate> *groupPickerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactPropertyGroupPickerViewController propertiesLeftToPickWithPickedGroups:policy:]
  +[CNContactPropertyGroupPickerViewController propertiesLeftToPickWithPickedGroups:policy:prohibitedPropertyKeys:]
  +[CNContactPropertyGroupPickerViewController propertySections]
  +[CNContactPropertyGroupPickerViewController pickableGroupsWithPickedGroups:policy:prohibitedPropertyKeys:]

  // instance methods
  -[CNContactPropertyGroupPickerViewController cancel:]
  -[CNContactPropertyGroupPickerViewController tableView:cellForRowAtIndexPath:]
  -[CNContactPropertyGroupPickerViewController tableView:numberOfRowsInSection:]
  -[CNContactPropertyGroupPickerViewController numberOfSectionsInTableView:]
  -[CNContactPropertyGroupPickerViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[CNContactPropertyGroupPickerViewController tableView:didSelectRowAtIndexPath:]
  -[CNContactPropertyGroupPickerViewController setProhibitedPropertyKeys:]
  -[CNContactPropertyGroupPickerViewController dealloc]
  -[CNContactPropertyGroupPickerViewController prohibitedPropertyKeys]
  -[CNContactPropertyGroupPickerViewController .cxx_destruct]
  -[CNContactPropertyGroupPickerViewController viewWillAppear:]
  -[CNContactPropertyGroupPickerViewController loadView]
  -[CNContactPropertyGroupPickerViewController tableView:willDisplayHeaderView:forSection:]
  -[CNContactPropertyGroupPickerViewController initWithGroups:]
  -[CNContactPropertyGroupPickerViewController groupPickerDelegate]
  -[CNContactPropertyGroupPickerViewController setGroupPickerDelegate:]
  -[CNContactPropertyGroupPickerViewController _loadPickableGroupsWithPickedGroups:policy:]


CNSharingProfilePhotoPickerViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource>
 @property  BOOL isSmallScreenDevice
 @property  CNContact *contact
 @property  <AVTAvatarRecord> *avatarRecord
 @property  CNSharingProfileLogger *logger
 @property  UICollectionViewFlowLayout *selectorLayout
 @property  UIImageView *previewView
 @property  UICollectionView *selectorView
 @property  CNSharingProfilePhotoPickerItem *selectedItem
 @property  CNSharingProfileAvatarItemProviderConfiguration *avatarItemProviderConfiguration
 @property  CNSharingProfileAvatarItemProvider *itemProvider
 @property  NSArray *items
 @property  UIButton *customizeButton
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  CNPhotoPickerColorVariant *animojiBackgroundColor
 @property  PRMonogramColor *monogramBackgroundColor
 @property  <CNSharingProfilePhotoPickerViewControllerDelegate> *delegate
 @property  PRMonogramColor *monogramColor
 @property  NSData *memojiMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNSharingProfilePhotoPickerViewController setLogger:]
  -[CNSharingProfilePhotoPickerViewController logger]
  -[CNSharingProfilePhotoPickerViewController collectionView:cellForItemAtIndexPath:]
  -[CNSharingProfilePhotoPickerViewController setMonogramColor:]
  -[CNSharingProfilePhotoPickerViewController reloadData]
  -[CNSharingProfilePhotoPickerViewController contact]
  -[CNSharingProfilePhotoPickerViewController setupConstraints]
  -[CNSharingProfilePhotoPickerViewController setItems:]
  -[CNSharingProfilePhotoPickerViewController setDelegate:]
  -[CNSharingProfilePhotoPickerViewController previewView]
  -[CNSharingProfilePhotoPickerViewController itemProvider]
  -[CNSharingProfilePhotoPickerViewController setPreviewView:]
  -[CNSharingProfilePhotoPickerViewController delegate]
  -[CNSharingProfilePhotoPickerViewController .cxx_destruct]
  -[CNSharingProfilePhotoPickerViewController viewDidLoad]
  -[CNSharingProfilePhotoPickerViewController setCustomizeButton:]
  -[CNSharingProfilePhotoPickerViewController viewWillAppear:]
  -[CNSharingProfilePhotoPickerViewController viewDidLayoutSubviews]
  -[CNSharingProfilePhotoPickerViewController items]
  -[CNSharingProfilePhotoPickerViewController monogramColor]
  -[CNSharingProfilePhotoPickerViewController customizeButton]
  -[CNSharingProfilePhotoPickerViewController collectionView:didSelectItemAtIndexPath:]
  -[CNSharingProfilePhotoPickerViewController setContact:]
  -[CNSharingProfilePhotoPickerViewController collectionView:numberOfItemsInSection:]
  -[CNSharingProfilePhotoPickerViewController setSelectedItem:]
  -[CNSharingProfilePhotoPickerViewController selectedItem]
  -[CNSharingProfilePhotoPickerViewController setItemProvider:]
  -[CNSharingProfilePhotoPickerViewController memojiMetadata]
  -[CNSharingProfilePhotoPickerViewController setMemojiMetadata:]
  -[CNSharingProfilePhotoPickerViewController avatarRecord]
  -[CNSharingProfilePhotoPickerViewController setAvatarRecord:]
  -[CNSharingProfilePhotoPickerViewController variantsManager]
  -[CNSharingProfilePhotoPickerViewController setVariantsManager:]
  -[CNSharingProfilePhotoPickerViewController initWithContact:avatarRecord:avatarItemProviderConfiguration:logger:]
  -[CNSharingProfilePhotoPickerViewController previewToSelectorSpacing]
  -[CNSharingProfilePhotoPickerViewController updateInteritemSpacing]
  -[CNSharingProfilePhotoPickerViewController previewEdgeSize]
  -[CNSharingProfilePhotoPickerViewController reloadItems]
  -[CNSharingProfilePhotoPickerViewController buildItems]
  -[CNSharingProfilePhotoPickerViewController updateWithContact:fromFullPhotoPicker:]
  -[CNSharingProfilePhotoPickerViewController updatePreviewForSelectedItem]
  -[CNSharingProfilePhotoPickerViewController didSelectCustomizeButton:]
  -[CNSharingProfilePhotoPickerViewController isSmallScreenDevice]
  -[CNSharingProfilePhotoPickerViewController setIsSmallScreenDevice:]
  -[CNSharingProfilePhotoPickerViewController selectorLayout]
  -[CNSharingProfilePhotoPickerViewController setSelectorLayout:]
  -[CNSharingProfilePhotoPickerViewController selectorView]
  -[CNSharingProfilePhotoPickerViewController setSelectorView:]
  -[CNSharingProfilePhotoPickerViewController avatarItemProviderConfiguration]
  -[CNSharingProfilePhotoPickerViewController setAvatarItemProviderConfiguration:]
  -[CNSharingProfilePhotoPickerViewController animojiBackgroundColor]
  -[CNSharingProfilePhotoPickerViewController setAnimojiBackgroundColor:]
  -[CNSharingProfilePhotoPickerViewController monogramBackgroundColor]
  -[CNSharingProfilePhotoPickerViewController setMonogramBackgroundColor:]


CNAvatarImageRenderingScope : NSObject
  // class methods
  +[CNAvatarImageRenderingScope scopeWithPointSize:scale:rightToLeft:style:backgroundStyle:]
  +[CNAvatarImageRenderingScope scopeWithPointSize:scale:strokeWidth:strokeColor:rightToLeft:style:backgroundStyle:color:maskedAvatarIndices:]
  +[CNAvatarImageRenderingScope scopeWithPointSize:scale:rightToLeft:style:]
  +[CNAvatarImageRenderingScope scopeWithPointSize:scale:strokeWidth:strokeColor:rightToLeft:style:color:]
  +[CNAvatarImageRenderingScope scopeWithPointSize:scale:rightToLeft:style:color:]
  +[CNAvatarImageRenderingScope scopeWithPointSize:scale:strokeWidth:strokeColor:rightToLeft:style:]


CNSharingProfileRowItem : NSObject
 @property  NSString *label
 @property  UIView *accessoryView
 @property  BOOL isSelected

  // instance methods
  -[CNSharingProfileRowItem setIsSelected:]
  -[CNSharingProfileRowItem accessoryView]
  -[CNSharingProfileRowItem .cxx_destruct]
  -[CNSharingProfileRowItem label]
  -[CNSharingProfileRowItem isSelected]
  -[CNSharingProfileRowItem initWithLabel:accessoryView:]


CNUIStringUtilities : NSObject
  // class methods
  +[CNUIStringUtilities composedCharacterCountForString:]
  +[CNUIStringUtilities composedCharacterCountForString:containsEmoji:]
  +[CNUIStringUtilities stringContainsEmoji:]
  +[CNUIStringUtilities stringIsSingleEmoji:]


CNUIGroupsAndContainersContactsSaveResult : NSObject
 @property  BOOL saveDidSucceed
 @property  NSError *error
 @property  NSArray *addedContacts

  // instance methods
  -[CNUIGroupsAndContainersContactsSaveResult error]
  -[CNUIGroupsAndContainersContactsSaveResult .cxx_destruct]
  -[CNUIGroupsAndContainersContactsSaveResult initWithSuccess:error:addedContacts:]
  -[CNUIGroupsAndContainersContactsSaveResult saveDidSucceed]
  -[CNUIGroupsAndContainersContactsSaveResult addedContacts]


CNUIGroupsAndContainersSaveManager : NSObject <CNUIContactSaveDelegate, CNUIEditAuthorizationControllerDelegate>
 @property  CNContactStore *contactStore
 @property  CNContactViewCache *contactViewCache
 @property  CNUIEditAuthorizationController *authorizationController
 @property  @? authorizationResultBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNUIGroupsAndContainersSaveManager log]

  // instance methods
  -[CNUIGroupsAndContainersSaveManager initWithContactStore:]
  -[CNUIGroupsAndContainersSaveManager editAuthorizationController:authorizationDidFinishWithResult:]
  -[CNUIGroupsAndContainersSaveManager setContactStore:]
  -[CNUIGroupsAndContainersSaveManager isAuthorizedToAddContact:toContainer:ignoresParentalRestrictions:]
  -[CNUIGroupsAndContainersSaveManager accountForContainerIdentifier:]
  -[CNUIGroupsAndContainersSaveManager editRequiresAuthorizationForContact:parentContainer:ignoresParentalRestrictions:]
  -[CNUIGroupsAndContainersSaveManager addContact:toGroupWithIdentifier:moveWasAuthorized:]
  -[CNUIGroupsAndContainersSaveManager setAuthorizationController:]
  -[CNUIGroupsAndContainersSaveManager parentGroupsForContact:]
  -[CNUIGroupsAndContainersSaveManager groupsByContainerDictForContainers:groups:]
  -[CNUIGroupsAndContainersSaveManager contactViewCache]
  -[CNUIGroupsAndContainersSaveManager acAccountForContainer:]
  -[CNUIGroupsAndContainersSaveManager deleteContainerWithIdentifier:inStore:ignoresGuardianRestrictions:issuedRequestIdentifiers:]
  -[CNUIGroupsAndContainersSaveManager exchangeContactsToDeleteInAccountIdentifier:originalContact:]
  -[CNUIGroupsAndContainersSaveManager addContact:toGroup:moveWasAuthorized:]
  -[CNUIGroupsAndContainersSaveManager parentAccountExternalIdentifiersForContact:]
  -[CNUIGroupsAndContainersSaveManager updateGroupWithIdentifier:inStore:withNewName:ignoresGuardianRestrictions:issuedRequestIdentifiers:]
  -[CNUIGroupsAndContainersSaveManager .cxx_destruct]
  -[CNUIGroupsAndContainersSaveManager allMDMUnauthorizedAccountsForTargetGroup:withManagedConfiguration:]
  -[CNUIGroupsAndContainersSaveManager updateContainerWithIdentifier:inStore:withNewName:ignoresGuardianRestrictions:issuedRequestIdentifiers:]
  -[CNUIGroupsAndContainersSaveManager isAuthorizedToEditContainerWithIdentifier:]
  -[CNUIGroupsAndContainersSaveManager _updateSaveRequest:addContact:toGroupContext:contactsToLink:]
  -[CNUIGroupsAndContainersSaveManager container:containsNonUnifiedContact:inContactStore:]
  -[CNUIGroupsAndContainersSaveManager authorizationResultBlock]
  -[CNUIGroupsAndContainersSaveManager authorizationController]
  -[CNUIGroupsAndContainersSaveManager addContacts:toGroup:inContainer:moveWasAuthorized:]
  -[CNUIGroupsAndContainersSaveManager addContacts:toGroupWithIdentifier:inContainerWithIdentifier:moveWasAuthorized:]
  -[CNUIGroupsAndContainersSaveManager mdmUnauthorizedContactIdentifiersForTargetGroup:withManagedConfiguration:]
  -[CNUIGroupsAndContainersSaveManager linkedContactForContact:inContainer:inContactStore:]
  -[CNUIGroupsAndContainersSaveManager groupForGroupIdentifier:]
  -[CNUIGroupsAndContainersSaveManager addLinkedContacts:toOriginalContact:ignoresGuardianRestrictions:issuedRequestIdentifiers:]
  -[CNUIGroupsAndContainersSaveManager isAuthorizedToEditContact:withTargetGroupWithIdentifier:ignoresParentalRestrictions:]
  -[CNUIGroupsAndContainersSaveManager removeContact:fromGroups:ignoresGuardianRestrictions:]
  -[CNUIGroupsAndContainersSaveManager _updateSaveRequest:addContact:toGroups:inContainer:contactParentContainer:contactsToLink:]
  -[CNUIGroupsAndContainersSaveManager setAuthorizationResultBlock:]
  -[CNUIGroupsAndContainersSaveManager isMDMAuthorizedToAddContact:toAccount:withManagedConfiguration:]
  -[CNUIGroupsAndContainersSaveManager isAuthorizedToEditContact:withTargetContainer:ignoresParentalRestrictions:]
  -[CNUIGroupsAndContainersSaveManager addContact:toGroupIdentifier:inContainerIdentifier:moveWasAuthorized:]
  -[CNUIGroupsAndContainersSaveManager containerForContainerIdentifier:]
  -[CNUIGroupsAndContainersSaveManager isAuthorizedToEditContainer:]
  -[CNUIGroupsAndContainersSaveManager initWithContactStore:contactViewCache:]
  -[CNUIGroupsAndContainersSaveManager addContact:toGroup:inContainer:moveWasAuthorized:]
  -[CNUIGroupsAndContainersSaveManager contactStore]
  -[CNUIGroupsAndContainersSaveManager authorizeForViewController:sender:animated:completionBlock:]
  -[CNUIGroupsAndContainersSaveManager updateContacts:forGroupContext:ignoresGuardianRestrictions:issuedRequestIdentifiers:]
  -[CNUIGroupsAndContainersSaveManager setContactViewCache:]
  -[CNUIGroupsAndContainersSaveManager containerForGroupIdentifier:]
  -[CNUIGroupsAndContainersSaveManager removeContact:fromGroup:ignoresGuardianRestrictions:]
  -[CNUIGroupsAndContainersSaveManager acAccountForGroupIdentifier:]
  -[CNUIGroupsAndContainersSaveManager _updateSaveRequest:removeContact:fromGroups:]
  -[CNUIGroupsAndContainersSaveManager deleteGroupWithIdentifier:inStore:ignoresGuardianRestrictions:issuedRequestIdentifiers:]


CNContactGroupPickerViewController : UIViewController <UICollectionViewDelegate>
 @property  CNAccountsAndGroupsDataSource *accountsAndGroupsDataSource
 @property  NSArray *sourceAccountExternalIdentifiers
 @property  UICollectionView *collectionView
 @property  UICollectionViewDiffableDataSource *diffableDataSource
 @property  _UIDiffableDataSourceOutlineSectionController *sectionController
 @property  <CNContactGroupPickerViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactGroupPickerViewController os_log]

  // instance methods
  -[CNContactGroupPickerViewController setCollectionView:]
  -[CNContactGroupPickerViewController initWithContactStore:]
  -[CNContactGroupPickerViewController cancel:]
  -[CNContactGroupPickerViewController _updateContentUnavailableConfigurationUsingState:]
  -[CNContactGroupPickerViewController sourceAccountExternalIdentifiers]
  -[CNContactGroupPickerViewController reloadData]
  -[CNContactGroupPickerViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[CNContactGroupPickerViewController setDelegate:]
  -[CNContactGroupPickerViewController collectionView:shouldSelectItemAtIndexPath:]
  -[CNContactGroupPickerViewController delegate]
  -[CNContactGroupPickerViewController .cxx_destruct]
  -[CNContactGroupPickerViewController collectionView]
  -[CNContactGroupPickerViewController viewDidLoad]
  -[CNContactGroupPickerViewController accountsAndGroupsDataSource]
  -[CNContactGroupPickerViewController diffableDataSource]
  -[CNContactGroupPickerViewController collectionView:didSelectItemAtIndexPath:]
  -[CNContactGroupPickerViewController setDiffableDataSource:]
  -[CNContactGroupPickerViewController setAccountsAndGroupsDataSource:]
  -[CNContactGroupPickerViewController setSourceAccountExternalIdentifiers:]
  -[CNContactGroupPickerViewController setupCollectionView]
  -[CNContactGroupPickerViewController initWithContactStore:sourceAccountExternalIdentifiers:]
  -[CNContactGroupPickerViewController setupNavigationButtons]
  -[CNContactGroupPickerViewController bottomSeparatorInsetsForIndexPath:configuration:]
  -[CNContactGroupPickerViewController setupDiffableDataSource]
  -[CNContactGroupPickerViewController cellAccessoriesForItem:enabled:]
  -[CNContactGroupPickerViewController accessoryTintColorForStateEnabled:]
  -[CNContactGroupPickerViewController isValidGroupAtIndexPath:]
  -[CNContactGroupPickerViewController sectionController]
  -[CNContactGroupPickerViewController setSectionController:]


CNCardiMessageEmailGroup : CNCardPropertyGroup
  // instance methods
  -[CNCardiMessageEmailGroup displayItems]
  -[CNCardiMessageEmailGroup .cxx_destruct]
  -[CNCardiMessageEmailGroup initWithContact:propertyItem:]


CNContactListAction : NSObject
 @property  CNContactListActionConfiguration *configuration
 @property  NSArray *contacts
 @property  <CNContactListActionDelegate> *delegate

  // instance methods
  -[CNContactListAction performAction]
  -[CNContactListAction setConfiguration:]
  -[CNContactListAction setDelegate:]
  -[CNContactListAction delegate]
  -[CNContactListAction configuration]
  -[CNContactListAction setContacts:]
  -[CNContactListAction .cxx_destruct]
  -[CNContactListAction contacts]
  -[CNContactListAction editRequiresAuthorization]
  -[CNContactListAction shouldReloadListOnCompletion]
  -[CNContactListAction initWithContacts:configuration:]
  -[CNContactListAction editRequiresAuthorizationCheckForContact:containerIdentifier:]


CNContactListUndoableAction : CNContactListAction <CNContactListUndoableAction>
 @property  <CNContactListActionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactListUndoableAction shouldReloadListOnCompletion]
  -[CNContactListUndoableAction performUndoAction]


CNContactActionsController : NSObject <CNAvatarCardActionListController, CNUINavigationListViewControllerDelegate, CNUIUserActionListConsumer>
 @property  BOOL actionsReversed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  CNContact *contact
 @property  <CNUIUserActionListDataSource> *actionsDataSource
 @property  NSDictionary *modelsByActionTypes
 @property  NSArray *modelCancelables
 @property  UIViewController *viewController
 @property  <CNContactActionsControllerDelegate> *delegate
 @property  <CNUINavigationListStyle> *navigationListStyle
 @property  long long actionsOrder
 @property  NSArray *actionTypes
 @property  BOOL displayMenuIconAtTopLevel
 @property  BOOL generateFaceTimeListItemsOnly
 @property  BOOL generateFavoritesListItemsOnly
 @property  BOOL shouldUseOutlinedActionGlyphStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactActionsController descriptorForRequiredKeys]
  +[CNContactActionsController supportedActionTypes]

  // instance methods
  -[CNContactActionsController contact]
  -[CNContactActionsController setDelegate:]
  -[CNContactActionsController setViewController:]
  -[CNContactActionsController delegate]
  -[CNContactActionsController dealloc]
  -[CNContactActionsController .cxx_destruct]
  -[CNContactActionsController viewController]
  -[CNContactActionsController setContact:]
  -[CNContactActionsController actionsReversed]
  -[CNContactActionsController setActionsReversed:]
  -[CNContactActionsController navigationListController:didSelectItem:]
  -[CNContactActionsController setNavigationListStyle:]
  -[CNContactActionsController styleUpdated]
  -[CNContactActionsController navigationListStyle]
  -[CNContactActionsController initWithContact:actionTypes:]
  -[CNContactActionsController initWithContact:dataSource:actionTypes:]
  -[CNContactActionsController displayedController]
  -[CNContactActionsController retrieveModels]
  -[CNContactActionsController cancelModels]
  -[CNContactActionsController modelForActionType:]
  -[CNContactActionsController setActionsOrder:]
  -[CNContactActionsController imageForActionType:]
  -[CNContactActionsController navigationListItemForUserActionType:]
  -[CNContactActionsController prepareNavigationListItems]
  -[CNContactActionsController generateMenuForItem:image:withCurrentList:]
  -[CNContactActionsController actionForItem:withImage:]
  -[CNContactActionsController shouldUseOutlinedActionGlyphStyle]
  -[CNContactActionsController setShouldUseOutlinedActionGlyphStyle:]
  -[CNContactActionsController actionsDataSource]
  -[CNContactActionsController setActionsDataSource:]
  -[CNContactActionsController modelsByActionTypes]
  -[CNContactActionsController setModelsByActionTypes:]
  -[CNContactActionsController modelCancelables]
  -[CNContactActionsController setModelCancelables:]
  -[CNContactActionsController actionsOrder]
  -[CNContactActionsController actionTypes]
  -[CNContactActionsController displayMenuIconAtTopLevel]
  -[CNContactActionsController setDisplayMenuIconAtTopLevel:]
  -[CNContactActionsController generateFaceTimeListItemsOnly]
  -[CNContactActionsController setGenerateFaceTimeListItemsOnly:]
  -[CNContactActionsController generateFavoritesListItemsOnly]
  -[CNContactActionsController setGenerateFavoritesListItemsOnly:]


CNSharingProfileAudienceDataSource : NSObject <CNSharingProfileSectionDataSource>
 @property  BOOL shouldShowEveryone
 @property  NSArray *valuesArray
 @property  CNSharingProfileRowItem *selectedItem
 @property  NSArray *items
 @property  unsigned long selectedSharingAudience
 @property  unsigned long selectedIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNSharingProfileAudienceDataSource setItems:]
  -[CNSharingProfileAudienceDataSource numberOfItems]
  -[CNSharingProfileAudienceDataSource .cxx_destruct]
  -[CNSharingProfileAudienceDataSource items]
  -[CNSharingProfileAudienceDataSource selectedIndex]
  -[CNSharingProfileAudienceDataSource setSelectedItem:]
  -[CNSharingProfileAudienceDataSource selectedItem]
  -[CNSharingProfileAudienceDataSource didSelectItemAtIndex:]
  -[CNSharingProfileAudienceDataSource selectedSharingAudience]
  -[CNSharingProfileAudienceDataSource reloadItems]
  -[CNSharingProfileAudienceDataSource supportsSelection]
  -[CNSharingProfileAudienceDataSource sectionHeaderLabel]
  -[CNSharingProfileAudienceDataSource sectionFooterLabel]
  -[CNSharingProfileAudienceDataSource itemForIndex:]
  -[CNSharingProfileAudienceDataSource initWithSelectedSharingAudience:]
  -[CNSharingProfileAudienceDataSource setSelectedSharingAudience:]
  -[CNSharingProfileAudienceDataSource sharingAudienceForItem:]
  -[CNSharingProfileAudienceDataSource indexForSharingAudience:]
  -[CNSharingProfileAudienceDataSource sharingAudienceForIndex:]
  -[CNSharingProfileAudienceDataSource shouldShowEveryone]
  -[CNSharingProfileAudienceDataSource setShouldShowEveryone:]
  -[CNSharingProfileAudienceDataSource valuesArray]
  -[CNSharingProfileAudienceDataSource setValuesArray:]


CNContactAddToGroupAction : CNContactAction <CNContactGroupPickerViewControllerDelegate>
 @property  CNGroup *selectedGroup
 @property  NSArray *contactParentGroupIdentifiers
 @property  UINavigationController *groupPickerNavigationViewController
 @property  CNUIGroupsAndContainersSaveManager *groupsAndContainersSaveManager
 @property  CNContactStore *contactStore
 @property  NSArray *contactParentGroups
 @property  CNManagedConfiguration *managedConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactAddToGroupAction os_log]

  // instance methods
  -[CNContactAddToGroupAction managedConfiguration]
  -[CNContactAddToGroupAction setManagedConfiguration:]
  -[CNContactAddToGroupAction groupsAndContainersSaveManager]
  -[CNContactAddToGroupAction setGroupsAndContainersSaveManager:]
  -[CNContactAddToGroupAction setContactStore:]
  -[CNContactAddToGroupAction sourceAccountExternalIdentifiers]
  -[CNContactAddToGroupAction .cxx_destruct]
  -[CNContactAddToGroupAction contactStore]
  -[CNContactAddToGroupAction performActionWithSender:]
  -[CNContactAddToGroupAction contactViewController:shouldPerformDefaultActionForContact:propertyKey:labeledValue:]
  -[CNContactAddToGroupAction groupPicker:shouldEnableGroupWithIdentifier:]
  -[CNContactAddToGroupAction groupPicker:didSelectGroup:]
  -[CNContactAddToGroupAction groupPickerDidCancel:]
  -[CNContactAddToGroupAction setContactParentGroups:]
  -[CNContactAddToGroupAction contactParentGroups]
  -[CNContactAddToGroupAction selectedGroup]
  -[CNContactAddToGroupAction setSelectedGroup:]
  -[CNContactAddToGroupAction contactParentGroupIdentifiers]
  -[CNContactAddToGroupAction setContactParentGroupIdentifiers:]
  -[CNContactAddToGroupAction groupPickerNavigationViewController]
  -[CNContactAddToGroupAction setGroupPickerNavigationViewController:]


CNContactViewFooterView : UIView
 @property  UILabel *label
 @property  CNContact *contact

  // instance methods
  -[CNContactViewFooterView contact]
  -[CNContactViewFooterView setLabel:]
  -[CNContactViewFooterView .cxx_destruct]
  -[CNContactViewFooterView label]
  -[CNContactViewFooterView setContact:]
  -[CNContactViewFooterView init]
  -[CNContactViewFooterView setupSubviews]
  -[CNContactViewFooterView updateLabelText]


CNUINavigationListViewDetailCell : CNUINavigationListViewCell
 @property  long long contentAlignment

  // class methods
  +[CNUINavigationListViewDetailCell reuseIdentifier]
  +[CNUINavigationListViewDetailCell contentViewBottomAnchorConstraintConstantForNavigationListStyle:]
  +[CNUINavigationListViewDetailCell subtitleLabelFirstBaselineAnchorConstraintConstantForNavigationListStyle:]
  +[CNUINavigationListViewDetailCell titleLabelFirstBaselineAnchorConstraintConstantForNavigationListStyle:]
  +[CNUINavigationListViewDetailCell desiredContentSizeForTitle:subTitle:navigationListStyle:]

  // instance methods
  -[CNUINavigationListViewDetailCell updateConstraints]
  -[CNUINavigationListViewDetailCell applyStyle]
  -[CNUINavigationListViewDetailCell contentAlignment]
  -[CNUINavigationListViewDetailCell setContentAlignment:]
  -[CNUINavigationListViewDetailCell minimumContentHeight]
  -[CNUINavigationListViewDetailCell loadContentViewConstraints]
  -[CNUINavigationListViewDetailCell contentViewBottomAnchorConstraintConstant]
  -[CNUINavigationListViewDetailCell subtitleLabelFirstBaselineAnchorConstraintConstant]
  -[CNUINavigationListViewDetailCell titleLabelFirstBaselineAnchorConstraintConstant]
  -[CNUINavigationListViewDetailCell setupAccessoryImageViewInView:]


CNMedicalIDAction : CNPropertyAction <HKMedicalIDViewControllerDelegate>
 @property  long long medicalIDActionType
 @property  CNContact *contact
 @property  CNHealthStoreManager *healthStoreManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNMedicalIDAction setHealthStoreManager:]
  -[CNMedicalIDAction .cxx_destruct]
  -[CNMedicalIDAction healthStoreManager]
  -[CNMedicalIDAction performActionWithSender:]
  -[CNMedicalIDAction medicalIDViewControllerDidCancel:]
  -[CNMedicalIDAction medicalIDViewControllerDidSave:]
  -[CNMedicalIDAction medicalIDViewControllerDidDelete:]
  -[CNMedicalIDAction medicalIDViewControllerDidFinish:]
  -[CNMedicalIDAction medicalIDActionType]
  -[CNMedicalIDAction setMedicalIDActionType:]


CNVisualIdentityItemEditorSegmentedControl : UISegmentedControl
  // class methods
  +[CNVisualIdentityItemEditorSegmentedControl segmentedControlForItemType:]

  // instance methods
  -[CNVisualIdentityItemEditorSegmentedControl initWithItems:]
  -[CNVisualIdentityItemEditorSegmentedControl setTextAndStyleMode]
  -[CNVisualIdentityItemEditorSegmentedControl setStyleOnlyMode]
  -[CNVisualIdentityItemEditorSegmentedControl setTextSegmentEnabled:]
  -[CNVisualIdentityItemEditorSegmentedControl setStyleSegmentEnabled:]
  -[CNVisualIdentityItemEditorSegmentedControl selectTextSegment]
  -[CNVisualIdentityItemEditorSegmentedControl selectStyleSegment]


CNContactHeaderView : UIView <CNContactPhotoViewDelegate, CNUIReusableView>
 @property  UILabel *nameLabel
 @property  NSArray *activatedConstraints
 @property  NSArray *contacts
 @property  NSLayoutConstraint *photoTopConstraint
 @property  NSLayoutConstraint *photoHeightConstraint
 @property  CNContactHeaderViewSizeAttributes *sizeAttributes
 @property  BOOL needsLabelSizeCalculation
 @property  double lastViewWidth
 @property  double constrainedMaxHeight
 @property  BOOL shouldUseConstrainedMaxHeight
 @property  CNContactPhotoView *photoView
 @property  BOOL alwaysShowsMonogram
 @property  BOOL visibleToScrollViews
 @property  BOOL showMonogramsOnly
 @property  BOOL shouldShowBelowNavigationTitle
 @property  NSDictionary *nameTextAttributes
 @property  <CNPresenterDelegate> *presenterDelegate
 @property  <CNContactHeaderViewDelegate> *delegate
 @property  double minHeight
 @property  double maxHeight
 @property  double minTitleOffset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactHeaderView descriptorForRequiredKeysIncludingAvatarViewDescriptors:]
  +[CNContactHeaderView descriptorForRequiredKeys]
  +[CNContactHeaderView makePhotoViewWithShouldAllowTakePhotoAction:shouldAllowImageDrops:monogramOnly:]
  +[CNContactHeaderView requiresConstraintBasedLayout]
  +[CNContactHeaderView sizeAttributesShowingNavBar:]
  +[CNContactHeaderView defaultPhotoSize]

  // instance methods
  -[CNContactHeaderView contactStyle]
  -[CNContactHeaderView setNeedsReload]
  -[CNContactHeaderView reloadDataIfNeeded]
  -[CNContactHeaderView descriptorForRequiredKeys]
  -[CNContactHeaderView setDelegate:]
  -[CNContactHeaderView updateConstraints]
  -[CNContactHeaderView contactViewCache]
  -[CNContactHeaderView delegate]
  -[CNContactHeaderView setPresenterDelegate:]
  -[CNContactHeaderView setContacts:]
  -[CNContactHeaderView dealloc]
  -[CNContactHeaderView .cxx_destruct]
  -[CNContactHeaderView contacts]
  -[CNContactHeaderView maxHeight]
  -[CNContactHeaderView prepareForReuse]
  -[CNContactHeaderView photoView]
  -[CNContactHeaderView layoutSubviews]
  -[CNContactHeaderView nameLabel]
  -[CNContactHeaderView minHeight]
  -[CNContactHeaderView canBecomeFirstResponder]
  -[CNContactHeaderView presenterDelegate]
  -[CNContactHeaderView setNameLabel:]
  -[CNContactHeaderView updateWithContacts:]
  -[CNContactHeaderView updateFontSizes]
  -[CNContactHeaderView setNameTextAttributes:]
  -[CNContactHeaderView alwaysShowsMonogram]
  -[CNContactHeaderView setAlwaysShowsMonogram:]
  -[CNContactHeaderView nameTextAttributes]
  -[CNContactHeaderView reloadDataPreservingChanges:]
  -[CNContactHeaderView updateWithNewContact:]
  -[CNContactHeaderView activatedConstraints]
  -[CNContactHeaderView setActivatedConstraints:]
  -[CNContactHeaderView photoViewDidUpdate:]
  -[CNContactHeaderView viewControllerForPhotoView:]
  -[CNContactHeaderView photoView:didAcceptDropOfImageData:]
  -[CNContactHeaderView initWithContact:frame:shouldAllowTakePhotoAction:shouldAllowImageDrops:showingNavBar:monogramOnly:delegate:]
  -[CNContactHeaderView updateForShowingNavBar:]
  -[CNContactHeaderView safeAreaTop]
  -[CNContactHeaderView safeAreaPhotoOffset]
  -[CNContactHeaderView minTitleOffset]
  -[CNContactHeaderView defaultMaxBaseHeight]
  -[CNContactHeaderView defaultMaxHeight]
  -[CNContactHeaderView setConstrainedMaxHeight:enabled:]
  -[CNContactHeaderView calculateLabelSizesIfNeeded]
  -[CNContactHeaderView didFinishUsing]
  -[CNContactHeaderView currentHeightPercentMaximized]
  -[CNContactHeaderView currentHeightPercentMaximizedForPhoto]
  -[CNContactHeaderView currentHeightPercentMaximizedForMaxHeight:]
  -[CNContactHeaderView updateSizeDependentAttributes]
  -[CNContactHeaderView photoTopConstraint]
  -[CNContactHeaderView setPhotoTopConstraint:]
  -[CNContactHeaderView photoHeightConstraint]
  -[CNContactHeaderView setPhotoHeightConstraint:]
  -[CNContactHeaderView sizeAttributes]
  -[CNContactHeaderView setSizeAttributes:]
  -[CNContactHeaderView needsLabelSizeCalculation]
  -[CNContactHeaderView setNeedsLabelSizeCalculation:]
  -[CNContactHeaderView lastViewWidth]
  -[CNContactHeaderView setLastViewWidth:]
  -[CNContactHeaderView constrainedMaxHeight]
  -[CNContactHeaderView setConstrainedMaxHeight:]
  -[CNContactHeaderView shouldUseConstrainedMaxHeight]
  -[CNContactHeaderView setShouldUseConstrainedMaxHeight:]
  -[CNContactHeaderView visibleToScrollViews]
  -[CNContactHeaderView setVisibleToScrollViews:]
  -[CNContactHeaderView showMonogramsOnly]
  -[CNContactHeaderView setShowMonogramsOnly:]
  -[CNContactHeaderView shouldShowBelowNavigationTitle]
  -[CNContactHeaderView setShouldShowBelowNavigationTitle:]


CNContactHeaderDisplayView : CNContactHeaderView <CNPickerControllerDelegate, UINavigationControllerDelegate, CNUIReusableView>
 @property  UIView *personHeaderView
 @property  UILabel *taglineLabel
 @property  UILabel *importantLabel
 @property  CNContactDowntimeView *downtimeView
 @property  double minLabelsHeight
 @property  double maxLabelsHeight
 @property  NSLayoutConstraint *avatarNameSpacingConstraint
 @property  CNContactGeminiView *geminiView
 @property  CNGeminiResult *geminiResult
 @property  CNGeminiPickerController *geminiPicker
 @property  BOOL shouldShowGemini
 @property  CNContactFormatter *contactFormatter
 @property  NSDictionary *taglineTextAttributes
 @property  NSDictionary *importantTextAttributes
 @property  NSString *alternateName
 @property  NSString *message
 @property  NSString *importantMessage
 @property  unsigned long avatarStyle
 @property  BOOL isEmergencyContact
 @property  BOOL isRestrictedContact
 @property  BOOL isDowntimeContact
 @property  BOOL allowsPickerActions
 @property  BOOL usesBrandedCallFormat
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactHeaderDisplayView contactHeaderViewWithContact:showingNavBar:monogramOnly:delegate:]
  +[CNContactHeaderDisplayView contactHeaderViewWithContact:allowsPhotoDrops:showingNavBar:monogramOnly:delegate:]
  +[CNContactHeaderDisplayView makePhotoViewWithShouldAllowTakePhotoAction:shouldAllowImageDrops:monogramOnly:]
  +[CNContactHeaderDisplayView descriptorForRequiredKeysForContactFormatter:]
  +[CNContactHeaderDisplayView sizeAttributesShowingNavBar:]

  // instance methods
  -[CNContactHeaderDisplayView setMessage:]
  -[CNContactHeaderDisplayView descriptorForRequiredKeys]
  -[CNContactHeaderDisplayView updateConstraints]
  -[CNContactHeaderDisplayView .cxx_destruct]
  -[CNContactHeaderDisplayView canPerformAction:withSender:]
  -[CNContactHeaderDisplayView maxHeight]
  -[CNContactHeaderDisplayView tintColorDidChange]
  -[CNContactHeaderDisplayView layoutSubviews]
  -[CNContactHeaderDisplayView minHeight]
  -[CNContactHeaderDisplayView copy:]
  -[CNContactHeaderDisplayView contactFormatter]
  -[CNContactHeaderDisplayView message]
  -[CNContactHeaderDisplayView setContactFormatter:]
  -[CNContactHeaderDisplayView handleNameLabelLongPress:]
  -[CNContactHeaderDisplayView menuWillHide:]
  -[CNContactHeaderDisplayView updateFontSizes]
  -[CNContactHeaderDisplayView setTaglineTextAttributes:]
  -[CNContactHeaderDisplayView setNameTextAttributes:]
  -[CNContactHeaderDisplayView _headerStringForContacts:]
  -[CNContactHeaderDisplayView _taglineStringForContacts:]
  -[CNContactHeaderDisplayView alternateName]
  -[CNContactHeaderDisplayView setAlternateName:]
  -[CNContactHeaderDisplayView taglineTextAttributes]
  -[CNContactHeaderDisplayView taglineLabel]
  -[CNContactHeaderDisplayView setTaglineLabel:]
  -[CNContactHeaderDisplayView setImportantMessage:]
  -[CNContactHeaderDisplayView importantMessage]
  -[CNContactHeaderDisplayView setPersonHeaderView:]
  -[CNContactHeaderDisplayView personHeaderView]
  -[CNContactHeaderDisplayView reloadDataPreservingChanges:]
  -[CNContactHeaderDisplayView setGeminiResult:]
  -[CNContactHeaderDisplayView shouldShowGemini]
  -[CNContactHeaderDisplayView setShouldShowGemini:]
  -[CNContactHeaderDisplayView defaultMaxHeight]
  -[CNContactHeaderDisplayView calculateLabelSizesIfNeeded]
  -[CNContactHeaderDisplayView didFinishUsing]
  -[CNContactHeaderDisplayView updateSizeDependentAttributes]
  -[CNContactHeaderDisplayView handleGeminiViewTouch:]
  -[CNContactHeaderDisplayView picker:didPickItem:]
  -[CNContactHeaderDisplayView pickerDidCancel:]
  -[CNContactHeaderDisplayView initWithContact:frame:showingNavBar:monogramOnly:delegate:]
  -[CNContactHeaderDisplayView initWithContact:frame:shouldAllowImageDrops:showingNavBar:monogramOnly:delegate:]
  -[CNContactHeaderDisplayView createGeminiViewIfNeeded]
  -[CNContactHeaderDisplayView setAvatarStyle:]
  -[CNContactHeaderDisplayView avatarStyle]
  -[CNContactHeaderDisplayView setIsEmergencyContact:]
  -[CNContactHeaderDisplayView setIsRestrictedContact:]
  -[CNContactHeaderDisplayView setIsDowntimeContact:]
  -[CNContactHeaderDisplayView disablePhotoTapGesture]
  -[CNContactHeaderDisplayView calculateLabelSizes]
  -[CNContactHeaderDisplayView setImportantTextAttributes:]
  -[CNContactHeaderDisplayView setDowntimeTextAttributes:]
  -[CNContactHeaderDisplayView downtimeTextAttributes]
  -[CNContactHeaderDisplayView setGeminiTextAttributes:]
  -[CNContactHeaderDisplayView geminiTextAttributes]
  -[CNContactHeaderDisplayView _updatePhotoView]
  -[CNContactHeaderDisplayView _updateImportantLabel]
  -[CNContactHeaderDisplayView _updateDowntimeView]
  -[CNContactHeaderDisplayView updateGeminiResult:]
  -[CNContactHeaderDisplayView setUsesBrandedCallFormat:]
  -[CNContactHeaderDisplayView _importantString]
  -[CNContactHeaderDisplayView importantTextAttributes]
  -[CNContactHeaderDisplayView isEmergencyContact]
  -[CNContactHeaderDisplayView isRestrictedContact]
  -[CNContactHeaderDisplayView isDowntimeContact]
  -[CNContactHeaderDisplayView allowsPickerActions]
  -[CNContactHeaderDisplayView setAllowsPickerActions:]
  -[CNContactHeaderDisplayView usesBrandedCallFormat]
  -[CNContactHeaderDisplayView importantLabel]
  -[CNContactHeaderDisplayView setImportantLabel:]
  -[CNContactHeaderDisplayView downtimeView]
  -[CNContactHeaderDisplayView setDowntimeView:]
  -[CNContactHeaderDisplayView minLabelsHeight]
  -[CNContactHeaderDisplayView setMinLabelsHeight:]
  -[CNContactHeaderDisplayView maxLabelsHeight]
  -[CNContactHeaderDisplayView setMaxLabelsHeight:]
  -[CNContactHeaderDisplayView avatarNameSpacingConstraint]
  -[CNContactHeaderDisplayView setAvatarNameSpacingConstraint:]
  -[CNContactHeaderDisplayView geminiView]
  -[CNContactHeaderDisplayView setGeminiView:]
  -[CNContactHeaderDisplayView geminiResult]
  -[CNContactHeaderDisplayView geminiPicker]
  -[CNContactHeaderDisplayView setGeminiPicker:]


CNContactHeaderEditView : CNContactHeaderView
 @property  {CGSize=dd} maxButtonSize
 @property  UIButton *editButton
 @property  NSLayoutConstraint *editButtonHeightConstraint
 @property  BOOL allowsEditPhoto

  // class methods
  +[CNContactHeaderEditView makePhotoViewWithShouldAllowTakePhotoAction:shouldAllowImageDrops:monogramOnly:]
  +[CNContactHeaderEditView sizeAttributesShowingNavBar:]
  +[CNContactHeaderEditView contactHeaderViewWithContact:shouldAllowTakePhotoAction:monogramOnly:delegate:]
  +[CNContactHeaderEditView contactHeaderViewWithContact:shouldAllowTakePhotoAction:showingNavBar:monogramOnly:delegate:]

  // instance methods
  -[CNContactHeaderEditView editButtonPressed]
  -[CNContactHeaderEditView updateConstraints]
  -[CNContactHeaderEditView setEditButton:]
  -[CNContactHeaderEditView .cxx_destruct]
  -[CNContactHeaderEditView editButton]
  -[CNContactHeaderEditView maxHeight]
  -[CNContactHeaderEditView hasPhoto]
  -[CNContactHeaderEditView updateWithContacts:]
  -[CNContactHeaderEditView updateFontSizes]
  -[CNContactHeaderEditView setAllowsEditPhoto:]
  -[CNContactHeaderEditView allowsEditPhoto]
  -[CNContactHeaderEditView defaultMaxHeight]
  -[CNContactHeaderEditView calculateLabelSizesIfNeeded]
  -[CNContactHeaderEditView didFinishUsing]
  -[CNContactHeaderEditView updateSizeDependentAttributes]
  -[CNContactHeaderEditView initWithContact:frame:shouldAllowTakePhotoAction:showingNavBar:monogramOnly:delegate:]
  -[CNContactHeaderEditView initWithContact:frame:shouldAllowTakePhotoAction:delegate:showingNavBar:monogramOnly:]
  -[CNContactHeaderEditView setAllowsEditPhoto:preservingChanges:]
  -[CNContactHeaderEditView updateEditButtonTitle]
  -[CNContactHeaderEditView photoIsModified]
  -[CNContactHeaderEditView saveContactPhoto]
  -[CNContactHeaderEditView presentAvatarPickerWithImageData:]
  -[CNContactHeaderEditView updateContactWithEditedPropertyItem:]
  -[CNContactHeaderEditView maxButtonSize]
  -[CNContactHeaderEditView setMaxButtonSize:]
  -[CNContactHeaderEditView editButtonHeightConstraint]
  -[CNContactHeaderEditView setEditButtonHeightConstraint:]


CNPortraitOnlyNavigationController : UINavigationController
  // instance methods
  -[CNPortraitOnlyNavigationController supportedInterfaceOrientations]


CNPhotoPickerProviderAnimojiGroup : CNPhotoPickerProviderGroup
  // instance methods
  -[CNPhotoPickerProviderAnimojiGroup allowAddItem]
  -[CNPhotoPickerProviderAnimojiGroup initWithProviders:environment:allowAddItem:]
  -[CNPhotoPickerProviderAnimojiGroup canCreateMemoji]


CNContactListSectionHeaderFooterView : UICollectionViewListCell
 @property  UIVisualEffectView *visualEffectView

  // instance methods
  -[CNContactListSectionHeaderFooterView visualEffectView]
  -[CNContactListSectionHeaderFooterView .cxx_destruct]
  -[CNContactListSectionHeaderFooterView layoutSubviews]
  -[CNContactListSectionHeaderFooterView setVisualEffectView:]


CNContactListHeaderView : UICollectionViewListCell
 @property  UIView *headerView

  // instance methods
  -[CNContactListHeaderView setHeaderView:]
  -[CNContactListHeaderView headerView]
  -[CNContactListHeaderView .cxx_destruct]
  -[CNContactListHeaderView preferredLayoutAttributesFittingAttributes:]
  -[CNContactListHeaderView layoutSubviews]
  -[CNContactListHeaderView pointInside:withEvent:]


CNPhotoPickerPreviewView : UIView
 @property  UIView *previewView
 @property  UIView *thumbnailContentView
 @property  CAShapeLayer *clippingLayer

  // class methods
  +[CNPhotoPickerPreviewView pickerPreviewWithFrame:forItem:]

  // instance methods
  -[CNPhotoPickerPreviewView previewView]
  -[CNPhotoPickerPreviewView .cxx_destruct]
  -[CNPhotoPickerPreviewView layoutSubviews]
  -[CNPhotoPickerPreviewView initWithFrame:]
  -[CNPhotoPickerPreviewView setupPreview]
  -[CNPhotoPickerPreviewView updatePreviewWithItem:]
  -[CNPhotoPickerPreviewView thumbnailContentView]
  -[CNPhotoPickerPreviewView setThumbnailContentView:]
  -[CNPhotoPickerPreviewView clippingLayer]
  -[CNPhotoPickerPreviewView setClippingLayer:]


CNContactCardFieldSection : NSObject
 @property  NSString *sectionType
 @property  NSArray *items
 @property  NSString *displayTitle

  // instance methods
  -[CNContactCardFieldSection .cxx_destruct]
  -[CNContactCardFieldSection items]
  -[CNContactCardFieldSection sectionType]
  -[CNContactCardFieldSection displayTitle]
  -[CNContactCardFieldSection initWithSectionType:items:]
  -[CNContactCardFieldSection initWithSectionType:items:displayTitle:]


CNContactCardFieldItem : NSObject
 @property  CNPropertyGroupItem *groupItem

  // instance methods
  -[CNContactCardFieldItem .cxx_destruct]
  -[CNContactCardFieldItem initWithGroupItem:]
  -[CNContactCardFieldItem groupItem]


CNContactCardFieldPickerDataSource : NSObject <UITableViewDataSource>
 @property  NSArray *contacts
 @property  NSArray *sections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactCardFieldPickerDataSource shareableNamePropertiesForContact:]
  +[CNContactCardFieldPickerDataSource shareableCardProperties]

  // instance methods
  -[CNContactCardFieldPickerDataSource tableView:cellForRowAtIndexPath:]
  -[CNContactCardFieldPickerDataSource tableView:numberOfRowsInSection:]
  -[CNContactCardFieldPickerDataSource numberOfSectionsInTableView:]
  -[CNContactCardFieldPickerDataSource setContacts:]
  -[CNContactCardFieldPickerDataSource tableView:titleForHeaderInSection:]
  -[CNContactCardFieldPickerDataSource .cxx_destruct]
  -[CNContactCardFieldPickerDataSource contacts]
  -[CNContactCardFieldPickerDataSource initWithContact:]
  -[CNContactCardFieldPickerDataSource sections]
  -[CNContactCardFieldPickerDataSource totalItemCount]
  -[CNContactCardFieldPickerDataSource initWithContacts:]
  -[CNContactCardFieldPickerDataSource _loadSections]
  -[CNContactCardFieldPickerDataSource _loadSectionsForContacts]
  -[CNContactCardFieldPickerDataSource itemsForKey:forContacts:]
  -[CNContactCardFieldPickerDataSource itemsForKey:forContact:]
  -[CNContactCardFieldPickerDataSource keyForIndexPath:]
  -[CNContactCardFieldPickerDataSource hasPhotoForContact:]
  -[CNContactCardFieldPickerDataSource firstContactContainingPhoto]


CNContactPhotoPreviewItem : NSObject <QLPreviewItem>
 @property  NSURL *previewItemURL
 @property  NSString *previewItemTitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactPhotoPreviewItem .cxx_destruct]
  -[CNContactPhotoPreviewItem previewItemURL]
  -[CNContactPhotoPreviewItem previewItemTitle]
  -[CNContactPhotoPreviewItem setPreviewItemURL:]
  -[CNContactPhotoPreviewItem setPreviewItemTitle:]


CNContactPhotoView : UIControl <UINavigationControllerDelegate, UIImagePickerControllerDelegate, UIDropInteractionDelegate, QLPreviewControllerDelegate, QLPreviewControllerDataSource, CNPhotoPickerViewControllerDelegate, CNVisualIdentityPickerPresenterDelegate, CNAvatarViewDelegate, CNPresenterDelegate>
 @property  CNMutableContact *mutableContact
 @property  CNMutableContact *pendingEditContact
 @property  PRLikeness *originalLikeness
 @property  PRLikeness *currentLikeness
 @property  BOOL prohibitsPersonaFetch
 @property  CNAvatarView *avatarView
 @property  UIButton *editPhotoButton
 @property  BOOL isAnimatingBounce
 @property  BOOL modified
 @property  NSArray *variableConstraints
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  UILongPressGestureRecognizer *longPressGestureRecognizer
 @property  UIDropInteraction *dropInteraction
 @property  BOOL acceptsImageDrop
 @property  CNPhotoPickerViewController *photoPicker
 @property  NSArray *contacts
 @property  BOOL editing
 @property  double labelAlpha
 @property  BOOL showEditingLabel
 @property  BOOL shouldAllowTakePhotoAction
 @property  <CNPresenterDelegate> *presenterDelegate
 @property  <CNContactPhotoViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isPresentingModalViewController

  // class methods
  +[CNContactPhotoView descriptorForRequiredKeys]
  +[CNContactPhotoView requiresConstraintBasedLayout]
  +[CNContactPhotoView defaultSize]
  +[CNContactPhotoView descriptorForRequiredKeysWithThreeDTouchEnabled:]
  +[CNContactPhotoView supportedPasteboardTypes]

  // instance methods
  -[CNContactPhotoView avatarView]
  -[CNContactPhotoView previewControllerDidDismiss:]
  -[CNContactPhotoView previewController:transitionImageForPreviewItem:contentRect:]
  -[CNContactPhotoView dropInteraction:sessionDidUpdate:]
  -[CNContactPhotoView previewController:previewItemAtIndex:]
  -[CNContactPhotoView previewController:frameForPreviewItem:inSourceView:]
  -[CNContactPhotoView numberOfPreviewItemsInPreviewController:]
  -[CNContactPhotoView dropInteraction:performDrop:]
  -[CNContactPhotoView reloadData]
  -[CNContactPhotoView contact]
  -[CNContactPhotoView setDropInteraction:]
  -[CNContactPhotoView setDelegate:]
  -[CNContactPhotoView longPressGestureRecognizer]
  -[CNContactPhotoView setEditing:]
  -[CNContactPhotoView paste:]
  -[CNContactPhotoView dropInteraction]
  -[CNContactPhotoView delegate]
  -[CNContactPhotoView setPresenterDelegate:]
  -[CNContactPhotoView setContacts:]
  -[CNContactPhotoView dealloc]
  -[CNContactPhotoView setProhibitsPersonaFetch:]
  -[CNContactPhotoView presentingViewControllerForAvatarView:]
  -[CNContactPhotoView setModified:]
  -[CNContactPhotoView .cxx_destruct]
  -[CNContactPhotoView setLongPressGestureRecognizer:]
  -[CNContactPhotoView contacts]
  -[CNContactPhotoView canPerformAction:withSender:]
  -[CNContactPhotoView dropInteraction:canHandleSession:]
  -[CNContactPhotoView modified]
  -[CNContactPhotoView copy:]
  -[CNContactPhotoView didUpdateContentForAvatarView:]
  -[CNContactPhotoView canBecomeFirstResponder]
  -[CNContactPhotoView tapGestureRecognizer]
  -[CNContactPhotoView isEditing]
  -[CNContactPhotoView setAvatarView:]
  -[CNContactPhotoView setTapGestureRecognizer:]
  -[CNContactPhotoView presenterDelegate]
  -[CNContactPhotoView previewController:transitionViewForPreviewItem:]
  -[CNContactPhotoView prohibitsPersonaFetch]
  -[CNContactPhotoView hasPhoto]
  -[CNContactPhotoView photoPickerDidCancel:]
  -[CNContactPhotoView photoPicker:didUpdatePhotoForContact:withContactImage:]
  -[CNContactPhotoView menuWillHide:]
  -[CNContactPhotoView updateFontSizes]
  -[CNContactPhotoView sender:presentViewController:]
  -[CNContactPhotoView sender:dismissViewController:]
  -[CNContactPhotoView sender:dismissViewController:completionHandler:]
  -[CNContactPhotoView isPresentingModalViewController]
  -[CNContactPhotoView willBeginPreviewInteractionForAvatarView:]
  -[CNContactPhotoView mutableContact]
  -[CNContactPhotoView variableConstraints]
  -[CNContactPhotoView photoPicker]
  -[CNContactPhotoView setPhotoPicker:]
  -[CNContactPhotoView disablePhotoTapGesture]
  -[CNContactPhotoView _presentPhotoPicker]
  -[CNContactPhotoView avatarTapped:]
  -[CNContactPhotoView longPressGesture:]
  -[CNContactPhotoView visualIdentityPicker:presentationControllerWillDismiss:]
  -[CNContactPhotoView initWithFrame:shouldAllowTakePhotoAction:threeDTouchEnabled:contactStore:allowsImageDrops:imageRenderer:]
  -[CNContactPhotoView setLabelAlpha:]
  -[CNContactPhotoView isMeContact]
  -[CNContactPhotoView pendingEditContact]
  -[CNContactPhotoView newPendingContactPreservingChangesFrom:]
  -[CNContactPhotoView currentImageData]
  -[CNContactPhotoView saveChangesFromPendingContact:toContact:]
  -[CNContactPhotoView saveEdits]
  -[CNContactPhotoView setEditing:preservingChanges:]
  -[CNContactPhotoView setHighlightedFrame:]
  -[CNContactPhotoView resetPhoto]
  -[CNContactPhotoView updatePhoto]
  -[CNContactPhotoView updateViewsAndNotifyDelegate:]
  -[CNContactPhotoView updateEditPhotoButton]
  -[CNContactPhotoView updatePendingContactWithEditedPropertyItem:]
  -[CNContactPhotoView _isUsingCuratedPhoto]
  -[CNContactPhotoView _isUsingSilhouette]
  -[CNContactPhotoView presentPhotoPicker]
  -[CNContactPhotoView presentPhotoPickerWithImageData:]
  -[CNContactPhotoView previewPath]
  -[CNContactPhotoView _zoomContactPhoto]
  -[CNContactPhotoView _presentFullScreenPhoto:]
  -[CNContactPhotoView _bounceSmallPhoto]
  -[CNContactPhotoView labelAlpha]
  -[CNContactPhotoView showEditingLabel]
  -[CNContactPhotoView setShowEditingLabel:]
  -[CNContactPhotoView shouldAllowTakePhotoAction]
  -[CNContactPhotoView setPendingEditContact:]
  -[CNContactPhotoView originalLikeness]
  -[CNContactPhotoView setOriginalLikeness:]
  -[CNContactPhotoView currentLikeness]
  -[CNContactPhotoView setCurrentLikeness:]
  -[CNContactPhotoView editPhotoButton]
  -[CNContactPhotoView setEditPhotoButton:]
  -[CNContactPhotoView isAnimatingBounce]
  -[CNContactPhotoView setIsAnimatingBounce:]
  -[CNContactPhotoView setVariableConstraints:]
  -[CNContactPhotoView acceptsImageDrop]
  -[CNContactPhotoView setAcceptsImageDrop:]


CNUIContactSaveConfiguration : NSObject
 @property  CNContact *contact
 @property  CNMutableContact *mutableContact
 @property  CNMutableContact *shadowCopyOfReadonlyContact
 @property  NSMutableArray *editingLinkedContacts
 @property  CNContactStore *contactStore
 @property  CNGroup *parentGroup
 @property  CNContainer *parentContainer
 @property  CNUIContainerContext *containerContext
 @property  CNUIGroupContext *groupContext
 @property  BOOL ignoresParentalRestrictions
 @property  BOOL saveWasAuthorized

  // instance methods
  -[CNUIContactSaveConfiguration contact]
  -[CNUIContactSaveConfiguration .cxx_destruct]
  -[CNUIContactSaveConfiguration ignoresParentalRestrictions]
  -[CNUIContactSaveConfiguration contactStore]
  -[CNUIContactSaveConfiguration groupContext]
  -[CNUIContactSaveConfiguration parentGroup]
  -[CNUIContactSaveConfiguration saveWasAuthorized]
  -[CNUIContactSaveConfiguration parentContainer]
  -[CNUIContactSaveConfiguration mutableContact]
  -[CNUIContactSaveConfiguration editingLinkedContacts]
  -[CNUIContactSaveConfiguration initWithContact:mutableContact:editingLinkedContacts:contactStore:ignoresParentalRestrictions:saveWasAuthorized:]
  -[CNUIContactSaveConfiguration initWithContact:mutableContact:shadowCopyOfReadonlyContact:editingLinkedContacts:contactStore:parentGroup:parentContainer:containerContext:groupContext:ignoresParentalRestrictions:saveWasAuthorized:]
  -[CNUIContactSaveConfiguration copyWithEditingLinkedContacts:]
  -[CNUIContactSaveConfiguration shadowCopyOfReadonlyContact]
  -[CNUIContactSaveConfiguration containerContext]


CNGroupIdentityActionItem : NSObject
 @property  <CNGroupIdentityActionItemDelegate> *delegate
 @property  NSString *title
 @property  NSString *actionType
 @property  UIImage *image
 @property  @? actionBlock
 @property  BOOL shouldOverrideEnabledState
 @property  BOOL overrideEnabledState
 @property  BOOL shouldPresentDisambiguationUI

  // class methods
  +[CNGroupIdentityActionItem imageForSystemImageNamed:]
  +[CNGroupIdentityActionItem imageForSystemImageNamed:withTextStyle:]
  +[CNGroupIdentityActionItem imageForSystemImageNamed:withPointSize:]

  // instance methods
  -[CNGroupIdentityActionItem actionType]
  -[CNGroupIdentityActionItem setDelegate:]
  -[CNGroupIdentityActionItem delegate]
  -[CNGroupIdentityActionItem .cxx_destruct]
  -[CNGroupIdentityActionItem actionBlock]
  -[CNGroupIdentityActionItem title]
  -[CNGroupIdentityActionItem image]
  -[CNGroupIdentityActionItem setActionBlock:]
  -[CNGroupIdentityActionItem initWithTitle:actionType:actionBlock:]
  -[CNGroupIdentityActionItem initWithTitle:actionType:systemImageName:overrideEnabledState:actionBlock:]
  -[CNGroupIdentityActionItem initWithTitle:actionType:systemImageName:actionBlock:]
  -[CNGroupIdentityActionItem initWithTitle:actionType:image:actionBlock:]
  -[CNGroupIdentityActionItem setOverrideEnabledState:]
  -[CNGroupIdentityActionItem shouldOverrideEnabledState]
  -[CNGroupIdentityActionItem setShouldOverrideEnabledState:]
  -[CNGroupIdentityActionItem overrideEnabledState]
  -[CNGroupIdentityActionItem shouldPresentDisambiguationUI]
  -[CNGroupIdentityActionItem setShouldPresentDisambiguationUI:]


CNGroupIdentityInlineActionsViewConfiguration : NSObject
 @property  BOOL displaysUnavailableActionTypes
 @property  NSArray *supportedActionTypes
 @property  NSDictionary *actionsPerType
 @property  long long actionViewStyle

  // instance methods
  -[CNGroupIdentityInlineActionsViewConfiguration .cxx_destruct]
  -[CNGroupIdentityInlineActionsViewConfiguration supportedActionTypes]
  -[CNGroupIdentityInlineActionsViewConfiguration initWithActions:displaysUnavailableActionTypes:]
  -[CNGroupIdentityInlineActionsViewConfiguration initWithDefaultActionItems:displaysUnavailableActionTypes:]
  -[CNGroupIdentityInlineActionsViewConfiguration initWithDefaultActionItems:displaysUnavailableActionTypes:actionViewStyle:]
  -[CNGroupIdentityInlineActionsViewConfiguration displaysUnavailableActionTypes]
  -[CNGroupIdentityInlineActionsViewConfiguration actionsPerType]
  -[CNGroupIdentityInlineActionsViewConfiguration actionViewStyle]


CNPropertyGroupBirthdayItem : CNPropertyGroupDateItem
  // class methods
  +[CNPropertyGroupBirthdayItem calendarForLabel:]
  +[CNPropertyGroupBirthdayItem initialValueForLabel:group:]
  +[CNPropertyGroupBirthdayItem _dateForGroup:]

  // instance methods
  -[CNPropertyGroupBirthdayItem displayLabel]
  -[CNPropertyGroupBirthdayItem updateLabeledValueWithLabel:]
  -[CNPropertyGroupBirthdayItem labeledValueToCurateFromSuggestion]


CNCardContactContainerGroup : CNCardGroup
 @property  NSArray *containers

  // instance methods
  -[CNCardContactContainerGroup containers]
  -[CNCardContactContainerGroup displayItems]
  -[CNCardContactContainerGroup .cxx_destruct]
  -[CNCardContactContainerGroup setContainers:]
  -[CNCardContactContainerGroup editingItems]


CNMeCardSharingEnabledDataSource : NSObject <CNMeCardSharingSectionDataSource>
 @property  UISwitch *enabledSwitch
 @property  NSArray *items
 @property  <CNMeCardSharingEnabledDelegate> *delegate
 @property  BOOL sharingEnabled
 @property  unsigned long selectedIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNMeCardSharingEnabledDataSource setItems:]
  -[CNMeCardSharingEnabledDataSource setDelegate:]
  -[CNMeCardSharingEnabledDataSource delegate]
  -[CNMeCardSharingEnabledDataSource numberOfItems]
  -[CNMeCardSharingEnabledDataSource .cxx_destruct]
  -[CNMeCardSharingEnabledDataSource items]
  -[CNMeCardSharingEnabledDataSource sharingEnabled]
  -[CNMeCardSharingEnabledDataSource didSelectItemAtIndex:]
  -[CNMeCardSharingEnabledDataSource buildItems]
  -[CNMeCardSharingEnabledDataSource supportsSelection]
  -[CNMeCardSharingEnabledDataSource sectionHeaderLabel]
  -[CNMeCardSharingEnabledDataSource sectionFooterLabel]
  -[CNMeCardSharingEnabledDataSource itemForIndex:]
  -[CNMeCardSharingEnabledDataSource didToggleEnabledSwitch:]
  -[CNMeCardSharingEnabledDataSource initWithSharingEnabled:]
  -[CNMeCardSharingEnabledDataSource setSharingEnabled:]
  -[CNMeCardSharingEnabledDataSource enabledSwitch]
  -[CNMeCardSharingEnabledDataSource setEnabledSwitch:]


CNContactShareContactAction : CNContactAction <UIActivityViewControllerObjectManipulationDelegate, CNContactCardFieldPickerDelegate>
 @property  UIActivityViewController *activityViewController
 @property  CNContact *filteredContact
 @property  CNContactCardFieldPicker *fieldPicker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactShareContactAction .cxx_destruct]
  -[CNContactShareContactAction activityViewController]
  -[CNContactShareContactAction setActivityViewController:]
  -[CNContactShareContactAction canPerformAction]
  -[CNContactShareContactAction performActionWithSender:]
  -[CNContactShareContactAction _customizationGroupsForActivityViewController:]
  -[CNContactShareContactAction _customizationAvailableForActivityViewController:]
  -[CNContactShareContactAction customLocalizedActionTitleForActivityViewController:]
  -[CNContactShareContactAction customActionViewControllerForActivityViewController:]
  -[CNContactShareContactAction contactCardFieldPicker:didFinishWithContacts:]
  -[CNContactShareContactAction filteredContact]
  -[CNContactShareContactAction setFilteredContact:]
  -[CNContactShareContactAction fieldPicker]
  -[CNContactShareContactAction setFieldPicker:]


CNContactActionDropdownMenuButton : UIButton
  // instance methods
  -[CNContactActionDropdownMenuButton menuAttachmentPointForConfiguration:]
  -[CNContactActionDropdownMenuButton init]


CNContactActionDropdownMenuCell : CNContactActionCell
 @property  CNContactActionDropdownMenuButton *button
 @property  @? menuProvider
 @property  UIContextMenuInteraction *contextMenuInteraction

  // instance methods
  -[CNContactActionDropdownMenuCell initWithStyle:reuseIdentifier:]
  -[CNContactActionDropdownMenuCell setMenuProvider:]
  -[CNContactActionDropdownMenuCell button]
  -[CNContactActionDropdownMenuCell contextMenuInteraction]
  -[CNContactActionDropdownMenuCell .cxx_destruct]
  -[CNContactActionDropdownMenuCell prepareForReuse]
  -[CNContactActionDropdownMenuCell setButton:]
  -[CNContactActionDropdownMenuCell menuProvider]


CNPhotoPickerDataSource : NSObject <CNPhotoPickerProviderGroupDelegate>
 @property  NSArray *providerGroups
 @property  NSMutableArray *groupIsCollapsedState
 @property  BOOL allowsPhotoLibraryAccess
 @property  CNVisualIdentity *visualIdentity
 @property  NSIndexPath *activePhotoIndexPath
 @property  CNContactViewCache *contactViewCache
 @property  <CNPhotoPickerProviderGroupDelegate> *delegate
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  <AVTAvatarStore> *avatarStore
 @property  unsigned long itemsPerRow
 @property  NSArray *emojiSuggestionItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPhotoPickerDataSource avatarStore]

  // instance methods
  -[CNPhotoPickerDataSource setDelegate:]
  -[CNPhotoPickerDataSource numberOfItemsInSection:]
  -[CNPhotoPickerDataSource contactViewCache]
  -[CNPhotoPickerDataSource delegate]
  -[CNPhotoPickerDataSource removeItem:]
  -[CNPhotoPickerDataSource .cxx_destruct]
  -[CNPhotoPickerDataSource numberOfSections]
  -[CNPhotoPickerDataSource setItemsPerRow:]
  -[CNPhotoPickerDataSource itemsPerRow]
  -[CNPhotoPickerDataSource titleForSection:]
  -[CNPhotoPickerDataSource variantsManager]
  -[CNPhotoPickerDataSource avatarStore]
  -[CNPhotoPickerDataSource photoPickerProviderGroupDidUpdate:]
  -[CNPhotoPickerDataSource photoPickerProviderGroup:didUpdateItem:]
  -[CNPhotoPickerDataSource initWithVisualIdentity:contactViewCache:photoPickerConfiguration:]
  -[CNPhotoPickerDataSource initWithVisualIdentity:contactViewCache:providerGroups:avatarStore:]
  -[CNPhotoPickerDataSource loadProviderGroupsItemsForSize:itemsPerRow:scale:RTL:]
  -[CNPhotoPickerDataSource sectionIndexForProviderGroup:]
  -[CNPhotoPickerDataSource sectionIndexForProviderGroupType:]
  -[CNPhotoPickerDataSource indexPathsToReloadForUpdatedGroup:]
  -[CNPhotoPickerDataSource actionTitleForSection:]
  -[CNPhotoPickerDataSource isItemAtIndexPathAddItem:]
  -[CNPhotoPickerDataSource providerGroupAtSection:]
  -[CNPhotoPickerDataSource providerGroupAtIndexPath:]
  -[CNPhotoPickerDataSource providerItemAtIndexPath:]
  -[CNPhotoPickerDataSource monogramProviderDefaultItemWithSize:]
  -[CNPhotoPickerDataSource monogramProviderMonogramItemWithSize:]
  -[CNPhotoPickerDataSource suggestionsGroup]
  -[CNPhotoPickerDataSource injectedItemsGroup]
  -[CNPhotoPickerDataSource findActiveIndexPathInGroup:withImageData:]
  -[CNPhotoPickerDataSource indexOfAddedItem:inGroupOfType:]
  -[CNPhotoPickerDataSource updateGroupCollapsedStateForSection:]
  -[CNPhotoPickerDataSource uniqueEmojiSuggestionItems:]
  -[CNPhotoPickerDataSource visualIdentity]
  -[CNPhotoPickerDataSource setVisualIdentity:]
  -[CNPhotoPickerDataSource activePhotoIndexPath]
  -[CNPhotoPickerDataSource setActivePhotoIndexPath:]
  -[CNPhotoPickerDataSource emojiSuggestionItems]
  -[CNPhotoPickerDataSource setEmojiSuggestionItems:]
  -[CNPhotoPickerDataSource providerGroups]
  -[CNPhotoPickerDataSource groupIsCollapsedState]
  -[CNPhotoPickerDataSource setGroupIsCollapsedState:]
  -[CNPhotoPickerDataSource allowsPhotoLibraryAccess]
  -[CNPhotoPickerDataSource setAllowsPhotoLibraryAccess:]


CNUINavigationListViewCell : UITableViewCell
 @property  BOOL accessoryControlExpanded
 @property  BOOL contentViewConstraintsLoaded
 @property  NSLayoutConstraint *contentViewBottomAnchorConstraint
 @property  NSLayoutConstraint *subtitleLabelFirstBaselineAnchorConstraint
 @property  NSLayoutConstraint *subtitleLabelLeadingAnchorConstraint
 @property  NSLayoutConstraint *subtitleLabelTrailingAnchorConstraint
 @property  NSLayoutConstraint *titleLabelFirstBaselineAnchorConstraint
 @property  NSLayoutConstraint *titleLabelLeadingAnchorConstraint
 @property  NSLayoutConstraint *titleLabelTrailingAnchorConstraint
 @property  UILayoutGuide *accessoryImageViewLayoutGuide
 @property  UILayoutGuide *titleImageViewLayoutGuide
 @property  BOOL showSeparator
 @property  UIImageView *accessoryImageView
 @property  UILabel *subtitleLabel
 @property  UIImageView *titleImageView
 @property  UILabel *titleLabel
 @property  <CNUINavigationListStyle> *navigationListStyle
 @property  CNUINavigationListStyleApplier *styleApplier

  // class methods
  +[CNUINavigationListViewCell reuseIdentifier]
  +[CNUINavigationListViewCell contentViewBottomAnchorConstraintConstantForNavigationListStyle:]
  +[CNUINavigationListViewCell titleLabelFirstBaselineAnchorConstraintConstantForNavigationListStyle:]
  +[CNUINavigationListViewCell desiredContentSizeForTitle:subTitle:navigationListStyle:]
  +[CNUINavigationListViewCell subtitleLabelFirstBaselineAnchorConstraintConstantForSubtitle:navigationListStyle:]
  +[CNUINavigationListViewCell disclosureImage]
  +[CNUINavigationListViewCell highlightedDisclosureImage]
  +[CNUINavigationListViewCell accessoryImageViewAccessibilityLabel]
  +[CNUINavigationListViewCell expandedAccessoryImageViewAccessibilityLabel]

  // instance methods
  -[CNUINavigationListViewCell setHighlighted:animated:]
  -[CNUINavigationListViewCell subtitleLabel]
  -[CNUINavigationListViewCell initWithStyle:reuseIdentifier:]
  -[CNUINavigationListViewCell showSeparator]
  -[CNUINavigationListViewCell updateConstraints]
  -[CNUINavigationListViewCell dealloc]
  -[CNUINavigationListViewCell titleImageView]
  -[CNUINavigationListViewCell .cxx_destruct]
  -[CNUINavigationListViewCell prepareForReuse]
  -[CNUINavigationListViewCell setSeparatorStyle:]
  -[CNUINavigationListViewCell observeValueForKeyPath:ofObject:change:context:]
  -[CNUINavigationListViewCell setShowSeparator:]
  -[CNUINavigationListViewCell applyStyle]
  -[CNUINavigationListViewCell titleLabel]
  -[CNUINavigationListViewCell initWithCoder:]
  -[CNUINavigationListViewCell setNavigationListStyle:]
  -[CNUINavigationListViewCell styleUpdated]
  -[CNUINavigationListViewCell navigationListStyle]
  -[CNUINavigationListViewCell minimumContentHeight]
  -[CNUINavigationListViewCell loadContentViewConstraints]
  -[CNUINavigationListViewCell contentViewBottomAnchorConstraintConstant]
  -[CNUINavigationListViewCell subtitleLabelFirstBaselineAnchorConstraintConstant]
  -[CNUINavigationListViewCell titleLabelFirstBaselineAnchorConstraintConstant]
  -[CNUINavigationListViewCell setupAccessoryImageViewInView:]
  -[CNUINavigationListViewCell loadContentView]
  -[CNUINavigationListViewCell setAccessoryControlExpanded:]
  -[CNUINavigationListViewCell setAccessoryControlExpanded:animated:]
  -[CNUINavigationListViewCell setSubtitleLabelFirstBaselineAnchorConstraint:]
  -[CNUINavigationListViewCell setSubtitleLabelLeadingAnchorConstraint:]
  -[CNUINavigationListViewCell setSubtitleLabelTrailingAnchorConstraint:]
  -[CNUINavigationListViewCell setTitleLabelFirstBaselineAnchorConstraint:]
  -[CNUINavigationListViewCell setTitleLabelLeadingAnchorConstraint:]
  -[CNUINavigationListViewCell setTitleLabelTrailingAnchorConstraint:]
  -[CNUINavigationListViewCell updateConstraintsConstants]
  -[CNUINavigationListViewCell updateVisualStateAnimated:]
  -[CNUINavigationListViewCell accessoryImageView]
  -[CNUINavigationListViewCell styleApplier]
  -[CNUINavigationListViewCell setStyleApplier:]
  -[CNUINavigationListViewCell isAccessoryControlExpanded]
  -[CNUINavigationListViewCell isContentViewConstraintsLoaded]
  -[CNUINavigationListViewCell setContentViewConstraintsLoaded:]
  -[CNUINavigationListViewCell contentViewBottomAnchorConstraint]
  -[CNUINavigationListViewCell setContentViewBottomAnchorConstraint:]
  -[CNUINavigationListViewCell subtitleLabelFirstBaselineAnchorConstraint]
  -[CNUINavigationListViewCell subtitleLabelLeadingAnchorConstraint]
  -[CNUINavigationListViewCell subtitleLabelTrailingAnchorConstraint]
  -[CNUINavigationListViewCell titleLabelFirstBaselineAnchorConstraint]
  -[CNUINavigationListViewCell titleLabelLeadingAnchorConstraint]
  -[CNUINavigationListViewCell titleLabelTrailingAnchorConstraint]
  -[CNUINavigationListViewCell accessoryImageViewLayoutGuide]
  -[CNUINavigationListViewCell titleImageViewLayoutGuide]


CNContactToggleBlockCallerAction : CNContactAction
 @property  NSNumber *isBlockedCachedValue

  // instance methods
  -[CNContactToggleBlockCallerAction .cxx_destruct]
  -[CNContactToggleBlockCallerAction performActionWithSender:]
  -[CNContactToggleBlockCallerAction isContactBlockedPreservingChanges:]
  -[CNContactToggleBlockCallerAction checkIsContactBlocked]
  -[CNContactToggleBlockCallerAction allNumbersAndEmails]
  -[CNContactToggleBlockCallerAction setContactBlocked:]
  -[CNContactToggleBlockCallerAction isBlockedCachedValue]
  -[CNContactToggleBlockCallerAction setIsBlockedCachedValue:]


CNContactListRemoveContactFromGroupAction : NSObject
 @property  CNContact *contact
 @property  NSString *containerIdentifier
 @property  CNContactStore *contactStore
 @property  CNGroup *group

  // class methods
  +[CNContactListRemoveContactFromGroupAction log]

  // instance methods
  -[CNContactListRemoveContactFromGroupAction setContactStore:]
  -[CNContactListRemoveContactFromGroupAction contact]
  -[CNContactListRemoveContactFromGroupAction containerIdentifier]
  -[CNContactListRemoveContactFromGroupAction .cxx_destruct]
  -[CNContactListRemoveContactFromGroupAction setContainerIdentifier:]
  -[CNContactListRemoveContactFromGroupAction setContact:]
  -[CNContactListRemoveContactFromGroupAction group]
  -[CNContactListRemoveContactFromGroupAction contactStore]
  -[CNContactListRemoveContactFromGroupAction setGroup:]
  -[CNContactListRemoveContactFromGroupAction initWithContact:contactStore:containerIdentifier:]
  -[CNContactListRemoveContactFromGroupAction executeAction]
  -[CNContactListRemoveContactFromGroupAction undoAction]
  -[CNContactListRemoveContactFromGroupAction executeRemoveFromGroupAction]
  -[CNContactListRemoveContactFromGroupAction undoRemoveFromGroupAction]


CNContactListRemoveContactsFromGroupAction : CNContactListUndoableAction
 @property  CNUIExternalComponentsFactory *componentsFactory
 @property  CNContactStore *contactStore
 @property  long long originalContactCount
 @property  NSArray *actions
 @property  BOOL confirmAction

  // class methods
  +[CNContactListRemoveContactsFromGroupAction descriptorForRequiredKeys]
  +[CNContactListRemoveContactsFromGroupAction log]
  +[CNContactListRemoveContactsFromGroupAction actionForContact:configuration:]

  // instance methods
  -[CNContactListRemoveContactsFromGroupAction performAction]
  -[CNContactListRemoveContactsFromGroupAction setContactStore:]
  -[CNContactListRemoveContactsFromGroupAction .cxx_destruct]
  -[CNContactListRemoveContactsFromGroupAction actions]
  -[CNContactListRemoveContactsFromGroupAction componentsFactory]
  -[CNContactListRemoveContactsFromGroupAction contactStore]
  -[CNContactListRemoveContactsFromGroupAction setActions:]
  -[CNContactListRemoveContactsFromGroupAction editRequiresAuthorization]
  -[CNContactListRemoveContactsFromGroupAction shouldReloadListOnCompletion]
  -[CNContactListRemoveContactsFromGroupAction performUndoAction]
  -[CNContactListRemoveContactsFromGroupAction initWithContacts:configuration:withConfirmation:]
  -[CNContactListRemoveContactsFromGroupAction performAuthorizedRemoveFromGroup:]
  -[CNContactListRemoveContactsFromGroupAction showRemoveFromGroupFailureAlert]
  -[CNContactListRemoveContactsFromGroupAction editRequiresAuthorizationCheckForActions:]
  -[CNContactListRemoveContactsFromGroupAction groupToRemoveFrom]
  -[CNContactListRemoveContactsFromGroupAction originalContactCount]
  -[CNContactListRemoveContactsFromGroupAction setOriginalContactCount:]
  -[CNContactListRemoveContactsFromGroupAction confirmAction]
  -[CNContactListRemoveContactsFromGroupAction setConfirmAction:]


CNContactView : CNMaskingTableView
 @property  CNContact *contact
 @property  {CGSize=dd} oldSize
 @property  BOOL needsUpdateVisibleCells
 @property  UIView *customHeaderView
 @property  CNContactHeaderView *defaultHeaderView
 @property  BOOL cellsLayoutCachingEnabled
 @property  BOOL shouldUseMapTiles
 @property  UIColor *backgroundColor
 @property  UIColor *separatorColor
 @property  UIColor *sectionBackgroundColor
 @property  UIColor *selectedCellBackgroundColor
 @property  NSDictionary *labelTextAttributes
 @property  NSDictionary *valueTextAttributes
 @property  NSDictionary *actionTextAttributes

  // class methods
  +[CNContactView nameProperties]
  +[CNContactView cellIdentifierForActions]
  +[CNContactView cellIdentifierForSplitActions]
  +[CNContactView cellIdentifierForDropdownMenuActions]
  +[CNContactView cellIdentifierForPropertyPlaceholder]
  +[CNContactView cellIdentifierForFaceTimeGroup]
  +[CNContactView cellIdentifierForLinkedCardsGroup]
  +[CNContactView cellIdentifierForLinkedCardsEditingGroup]
  +[CNContactView cellIdentifierForLinkedCardsPlaceholderGroup]
  +[CNContactView cellIdentifierForGroupMembershipGroup]
  +[CNContactView cellIdentifierForGroupMembershipEditingGroup]
  +[CNContactView cellIdentifierForGroupMembershipPlaceholderGroup]
  +[CNContactView cellIdentifierForContactContainerEditingGroup]
  +[CNContactView cellIdentifierForGameCenterGroup]
  +[CNContactView cellIdentifierForProperty:]
  +[CNContactView cellIdentifierForEditingProperty:]
  +[CNContactView cellIdentifierForClass:]
  +[CNContactView classForCellIdentifier:]
  +[CNContactView namePropertiesForContact:]
  +[CNContactView requiredNameProperties]
  +[CNContactView allCardProperties]
  +[CNContactView defaultCardProperties]
  +[CNContactView optionalCardProperties]
  +[CNContactView allImageProperties]
  +[CNContactView isMultiValueProperty:]
  +[CNContactView isFixedValueProperty:]

  // instance methods
  -[CNContactView layoutMarginsDidChange]
  -[CNContactView setSelectedCellBackgroundColor:]
  -[CNContactView contact]
  -[CNContactView setSectionBackgroundColor:]
  -[CNContactView setEditing:]
  -[CNContactView .cxx_destruct]
  -[CNContactView tintColorDidChange]
  -[CNContactView layoutSubviews]
  -[CNContactView setBackgroundColor:]
  -[CNContactView touchesBegan:withEvent:]
  -[CNContactView selectedCellBackgroundColor]
  -[CNContactView setContact:]
  -[CNContactView traitCollectionDidChange:]
  -[CNContactView sectionBackgroundColor]
  -[CNContactView customHeaderView]
  -[CNContactView setCustomHeaderView:]
  -[CNContactView updateFontSizes]
  -[CNContactView setLabelTextAttributes:]
  -[CNContactView _cnui_applyContactStyle]
  -[CNContactView initWithFrame:style:contact:]
  -[CNContactView initWithFrame:contact:]
  -[CNContactView updateTableViewMetrics]
  -[CNContactView defaultHeaderView]
  -[CNContactView registerContactCellClass:]
  -[CNContactView setAttributesFromContactView:runningInContactsAppOniPad:]
  -[CNContactView updateFontColors]
  -[CNContactView setNeedsUpdateVisibleCells]
  -[CNContactView updateVisibleCellsIfNeeded]
  -[CNContactView applyCellAppearance:]
  -[CNContactView separatorInsetForCell:]
  -[CNContactView isCellsLayoutCachingEnabled]
  -[CNContactView setCellsLayoutCachingEnabled:]
  -[CNContactView shouldUseMapTiles]
  -[CNContactView setShouldUseMapTiles:]
  -[CNContactView labelTextAttributes]
  -[CNContactView valueTextAttributes]
  -[CNContactView setValueTextAttributes:]
  -[CNContactView actionTextAttributes]
  -[CNContactView setActionTextAttributes:]
  -[CNContactView oldSize]
  -[CNContactView setOldSize:]
  -[CNContactView needsUpdateVisibleCells]
  -[CNContactView setNeedsUpdateVisibleCells:]


CNMeCardSharingNameFormatter : NSObject
 @property  <CNMeCardSharingNameProvider> *nameProvider
 @property  NSPersonNameComponents *nameComponents
 @property  NSMutableDictionary *cachedFormattedNames

  // class methods
  +[CNMeCardSharingNameFormatter nameComponentsFromProvider:]
  +[CNMeCardSharingNameFormatter formattedNameFromProvider:withFormat:]
  +[CNMeCardSharingNameFormatter formattedNameFromComponents:forProvider:withFormat:]

  // instance methods
  -[CNMeCardSharingNameFormatter nameComponents]
  -[CNMeCardSharingNameFormatter .cxx_destruct]
  -[CNMeCardSharingNameFormatter nameProvider]
  -[CNMeCardSharingNameFormatter initWithNameProvider:]
  -[CNMeCardSharingNameFormatter formattedNameWithFormat:]
  -[CNMeCardSharingNameFormatter cachedFormattedNames]
  -[CNMeCardSharingNameFormatter setCachedFormattedNames:]


CNUIAAfamilyMember : NSObject <NSSecureCoding>
 @property  NSString *appleID
 @property  NSString *firstName
 @property  NSString *lastName
 @property  BOOL isMe

  // class methods
  +[CNUIAAfamilyMember supportsSecureCoding]
  +[CNUIAAfamilyMember cnuiFamilyMemberWithAAFamilyMember:]

  // instance methods
  -[CNUIAAfamilyMember setFirstName:]
  -[CNUIAAfamilyMember firstName]
  -[CNUIAAfamilyMember setIsMe:]
  -[CNUIAAfamilyMember isMe]
  -[CNUIAAfamilyMember lastName]
  -[CNUIAAfamilyMember encodeWithCoder:]
  -[CNUIAAfamilyMember .cxx_destruct]
  -[CNUIAAfamilyMember appleID]
  -[CNUIAAfamilyMember setLastName:]
  -[CNUIAAfamilyMember setAppleID:]
  -[CNUIAAfamilyMember initWithCoder:]


CNPhotoPickerColorVariant : NSObject
 @property  UIColor *color
 @property  NSString *colorName

  // instance methods
  -[CNPhotoPickerColorVariant .cxx_destruct]
  -[CNPhotoPickerColorVariant color]
  -[CNPhotoPickerColorVariant colorName]
  -[CNPhotoPickerColorVariant isEqual:]
  -[CNPhotoPickerColorVariant initWithColor:named:]


CNContactContentViewController : UIViewController <CNContactActionDelegate, CNPresenterDelegate, CNContactContentViewController, UIViewControllerRestoration>
 @property  CNContactFormatter *contactFormatter
 @property  UITableView *tableView
 @property  CNContactContentViewControllerConfiguration *contactViewConfiguration
 @property  CNPolicy *policy
 @property  NSDictionary *linkedPoliciesByContactIdentifier
 @property  long long mode
 @property  NSArray *cardActions
 @property  CNContactStore *contactStore
 @property  CNManagedConfiguration *managedConfiguration
 @property  CNAccessAuthorization *accessAuthorization
 @property  NSArray *missingRequiredKeys
 @property  NSArray *originalContacts
 @property  BOOL allowsEditInApp
 @property  BOOL shouldDrawNavigationBar
 @property  NSString *initialPrompt
 @property  <CNUIContactSaveExecutor> *saveContactExecutor
 @property  <CNUIContactSaveExecutor> *saveLinkedContactsExecutor
 @property  BOOL shouldIgnoreContactStoreDidChangeNotification
 @property  NSArray *prohibitedPropertyKeys
 @property  CNContactRecentsReference *recentsData
 @property  NSDictionary *propertyGroups
 @property  CNCardFaceTimeGroup *cardFaceTimeGroup
 @property  NSMutableArray *displayGroups
 @property  BOOL showingMeContact
 @property  CNContact *contact
 @property  CNGroup *parentGroup
 @property  CNContainer *parentContainer
 @property  CNContactView *contactView
 @property  CNContactHeaderView *contactHeaderView
 @property  NSArray *displayedProperties
 @property  BOOL allowsEditing
 @property  BOOL alwaysEditing
 @property  BOOL allowsActions
 @property  BOOL allowsPropertyActions
 @property  BOOL allowsCardActions
 @property  BOOL allowsConferencing
 @property  BOOL allowsSharing
 @property  BOOL allowsAddToFavorites
 @property  BOOL allowsSendMessage
 @property  BOOL allowsContactBlocking
 @property  BOOL allowsAddingToAddressBook
 @property  BOOL shouldShowLinkedContacts
 @property  BOOL allowsSettingLinkedContactsAsPreferred
 @property  BOOL allowsDeletion
 @property  BOOL allowsActionsModel
 @property  BOOL allowsDisplayModePickerActions
 @property  BOOL allowsEditPhoto
 @property  BOOL ignoresParentalRestrictions
 @property  BOOL editingProposedInformation
 @property  BOOL hideCardActions
 @property  BOOL isMailVIP
 @property  BOOL showContactBlockingFirst
 @property  NSString *alternateName
 @property  NSString *message
 @property  NSString *warningMessage
 @property  NSString *importantMessage
 @property  NSAttributedString *verifiedInfoMessage
 @property  NSString *primaryProperty
 @property  UIView *personHeaderView
 @property  UIViewController *personHeaderViewController
 @property  <CNContactViewControllerCustomHeaderViewDelegate> *personHeaderViewDelegate
 @property  CNCardGroup *cardTopGroup
 @property  CNCardGroup *cardBottomGroup
 @property  CNCardGroup *cardFooterGroup
 @property  <CNContactContentViewControllerDelegate> *contactDelegate
 @property  <CNPresenterDelegate> *presentingDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isPresentingModalViewController
 @property  <CNContactViewHostProtocol> *delegate
 @property  <CNContactViewControllerPPTDelegate> *pptDelegate

  // class methods
  +[CNContactContentViewController descriptorForRequiredKeys]
  +[CNContactContentViewController classForContentViewControllerImpl]
  +[CNContactContentViewController descriptorForRequiredKeysWithDescription:]

  // instance methods
  -[CNContactContentViewController managedConfiguration]
  -[CNContactContentViewController setManagedConfiguration:]
  -[CNContactContentViewController setContactStore:]
  -[CNContactContentViewController presentingDelegate]
  -[CNContactContentViewController setMessage:]
  -[CNContactContentViewController initWithEnvironment:]
  -[CNContactContentViewController setPresentingDelegate:]
  -[CNContactContentViewController contact]
  -[CNContactContentViewController setAllowsEditing:]
  -[CNContactContentViewController allowsEditing]
  -[CNContactContentViewController allowsContactBlocking]
  -[CNContactContentViewController initWithNibName:bundle:]
  -[CNContactContentViewController setProhibitedPropertyKeys:]
  -[CNContactContentViewController prohibitedPropertyKeys]
  -[CNContactContentViewController allowsDeletion]
  -[CNContactContentViewController mode]
  -[CNContactContentViewController .cxx_destruct]
  -[CNContactContentViewController setIgnoresParentalRestrictions:]
  -[CNContactContentViewController tableView]
  -[CNContactContentViewController initWithContact:]
  -[CNContactContentViewController setTableView:]
  -[CNContactContentViewController setMode:]
  -[CNContactContentViewController setAllowsContactBlocking:]
  -[CNContactContentViewController ignoresParentalRestrictions]
  -[CNContactContentViewController setContact:]
  -[CNContactContentViewController setPolicy:]
  -[CNContactContentViewController contactStore]
  -[CNContactContentViewController message]
  -[CNContactContentViewController policy]
  -[CNContactContentViewController init]
  -[CNContactContentViewController setContactDelegate:]
  -[CNContactContentViewController contactDelegate]
  -[CNContactContentViewController parentGroup]
  -[CNContactContentViewController allowsSharing]
  -[CNContactContentViewController setAllowsSharing:]
  -[CNContactContentViewController setAllowsActions:]
  -[CNContactContentViewController alternateName]
  -[CNContactContentViewController setAlternateName:]
  -[CNContactContentViewController contactView]
  -[CNContactContentViewController contactHeaderView]
  -[CNContactContentViewController setDisplayedProperties:]
  -[CNContactContentViewController displayedProperties]
  -[CNContactContentViewController setAlwaysEditing:]
  -[CNContactContentViewController alwaysEditing]
  -[CNContactContentViewController allowsActions]
  -[CNContactContentViewController setAllowsPropertyActions:]
  -[CNContactContentViewController allowsPropertyActions]
  -[CNContactContentViewController setAllowsCardActions:]
  -[CNContactContentViewController allowsCardActions]
  -[CNContactContentViewController setAllowsConferencing:]
  -[CNContactContentViewController allowsConferencing]
  -[CNContactContentViewController setAllowsAddToFavorites:]
  -[CNContactContentViewController allowsAddToFavorites]
  -[CNContactContentViewController setAllowsSendMessage:]
  -[CNContactContentViewController allowsSendMessage]
  -[CNContactContentViewController setAllowsAddingToAddressBook:]
  -[CNContactContentViewController allowsAddingToAddressBook]
  -[CNContactContentViewController setShouldShowLinkedContacts:]
  -[CNContactContentViewController shouldShowLinkedContacts]
  -[CNContactContentViewController setAllowsSettingLinkedContactsAsPreferred:]
  -[CNContactContentViewController allowsSettingLinkedContactsAsPreferred]
  -[CNContactContentViewController setAllowsDeletion:]
  -[CNContactContentViewController setAllowsActionsModel:]
  -[CNContactContentViewController allowsActionsModel]
  -[CNContactContentViewController setAllowsDisplayModePickerActions:]
  -[CNContactContentViewController allowsDisplayModePickerActions]
  -[CNContactContentViewController setAllowsEditPhoto:]
  -[CNContactContentViewController allowsEditPhoto]
  -[CNContactContentViewController setEditingProposedInformation:]
  -[CNContactContentViewController editingProposedInformation]
  -[CNContactContentViewController setHideCardActions:]
  -[CNContactContentViewController hideCardActions]
  -[CNContactContentViewController setIsMailVIP:]
  -[CNContactContentViewController isMailVIP]
  -[CNContactContentViewController setShowContactBlockingFirst:]
  -[CNContactContentViewController showContactBlockingFirst]
  -[CNContactContentViewController setWarningMessage:]
  -[CNContactContentViewController warningMessage]
  -[CNContactContentViewController setImportantMessage:]
  -[CNContactContentViewController importantMessage]
  -[CNContactContentViewController setVerifiedInfoMessage:]
  -[CNContactContentViewController verifiedInfoMessage]
  -[CNContactContentViewController setPrimaryProperty:]
  -[CNContactContentViewController primaryProperty]
  -[CNContactContentViewController setPersonHeaderView:]
  -[CNContactContentViewController personHeaderView]
  -[CNContactContentViewController setPersonHeaderViewController:]
  -[CNContactContentViewController personHeaderViewController]
  -[CNContactContentViewController cardTopGroup]
  -[CNContactContentViewController cardBottomGroup]
  -[CNContactContentViewController cardFooterGroup]
  -[CNContactContentViewController originalContacts]
  -[CNContactContentViewController contactViewConfiguration]
  -[CNContactContentViewController setContactViewConfiguration:]
  -[CNContactContentViewController setOriginalContacts:]
  -[CNContactContentViewController showingMeContact]
  -[CNContactContentViewController setShowingMeContact:]
  -[CNContactContentViewController allowsEditInApp]
  -[CNContactContentViewController setAllowsEditInApp:]
  -[CNContactContentViewController accessAuthorization]
  -[CNContactContentViewController setAccessAuthorization:]
  -[CNContactContentViewController linkedPoliciesByContactIdentifier]
  -[CNContactContentViewController setLinkedPoliciesByContactIdentifier:]
  -[CNContactContentViewController missingRequiredKeys]
  -[CNContactContentViewController setMissingRequiredKeys:]
  -[CNContactContentViewController shouldDrawNavigationBar]
  -[CNContactContentViewController setShouldDrawNavigationBar:]
  -[CNContactContentViewController initialPrompt]
  -[CNContactContentViewController setInitialPrompt:]
  -[CNContactContentViewController saveContactExecutor]
  -[CNContactContentViewController setSaveContactExecutor:]
  -[CNContactContentViewController saveLinkedContactsExecutor]
  -[CNContactContentViewController setSaveLinkedContactsExecutor:]
  -[CNContactContentViewController shouldIgnoreContactStoreDidChangeNotification]
  -[CNContactContentViewController setShouldIgnoreContactStoreDidChangeNotification:]
  -[CNContactContentViewController cardFaceTimeGroup]
  -[CNContactContentViewController setCardFaceTimeGroup:]
  -[CNContactContentViewController recentsData]
  -[CNContactContentViewController setRecentsData:]
  -[CNContactContentViewController propertyGroups]
  -[CNContactContentViewController displayGroups]
  -[CNContactContentViewController setDisplayGroups:]
  -[CNContactContentViewController parentContainer]
  -[CNContactContentViewController setParentContainer:]
  -[CNContactContentViewController cardActions]
  -[CNContactContentViewController setParentGroup:]
  -[CNContactContentViewController personHeaderViewDelegate]
  -[CNContactContentViewController setPersonHeaderViewDelegate:]
  -[CNContactContentViewController indexOfGroup:]


CNPhotoPickerProviderEmojiGroup : CNPhotoPickerProviderGroup
  // instance methods
  -[CNPhotoPickerProviderEmojiGroup initWithProviders:environment:allowAddItem:]


ABCountry : NSObject
 @property  NSString *countryCode
 @property  NSString *countryName
 @property  NSString *phoneticCountryName

  // instance methods
  -[ABCountry countryName]
  -[ABCountry setCountryCode:]
  -[ABCountry .cxx_destruct]
  -[ABCountry setCountryName:]
  -[ABCountry countryCode]
  -[ABCountry phoneticCountryName]
  -[ABCountry setPhoneticCountryName:]


CNCountryPickerController : UINavigationController <UITableViewDataSource, UITableViewDelegate>
 @property  UITableViewController *tableViewController
 @property  UILocalizedIndexedCollation *collation
 @property  NSArray *countries
 @property  NSArray *sections
 @property  NSIndexPath *selectedIndexPath
 @property  NSString *selectedCountryCode
 @property  <CNCountryPickerControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNCountryPickerController tableView:cellForRowAtIndexPath:]
  -[CNCountryPickerController tableView:numberOfRowsInSection:]
  -[CNCountryPickerController numberOfSectionsInTableView:]
  -[CNCountryPickerController tableView:willDisplayCell:forRowAtIndexPath:]
  -[CNCountryPickerController tableView:didSelectRowAtIndexPath:]
  -[CNCountryPickerController initWithNibName:bundle:]
  -[CNCountryPickerController tableView:titleForHeaderInSection:]
  -[CNCountryPickerController dealloc]
  -[CNCountryPickerController setCollation:]
  -[CNCountryPickerController .cxx_destruct]
  -[CNCountryPickerController viewDidLoad]
  -[CNCountryPickerController viewWillAppear:]
  -[CNCountryPickerController setSections:]
  -[CNCountryPickerController tableView:sectionForSectionIndexTitle:atIndex:]
  -[CNCountryPickerController sectionIndexTitlesForTableView:]
  -[CNCountryPickerController sections]
  -[CNCountryPickerController collation]
  -[CNCountryPickerController tableView:willDisplayHeaderView:forSection:]
  -[CNCountryPickerController selectedIndexPath]
  -[CNCountryPickerController setSelectedIndexPath:]
  -[CNCountryPickerController windowDidRotate:]
  -[CNCountryPickerController cancelPicker:]
  -[CNCountryPickerController tableViewController]
  -[CNCountryPickerController setTableViewController:]
  -[CNCountryPickerController _loadCountryCodes]
  -[CNCountryPickerController _configureSections]
  -[CNCountryPickerController selectedCountryCode]
  -[CNCountryPickerController setSelectedCountryCode:]
  -[CNCountryPickerController countries]
  -[CNCountryPickerController setCountries:]


CNKeyboardSettings : NSObject
  // class methods
  +[CNKeyboardSettings newKeyboardSettingsForProperty:]
  +[CNKeyboardSettings keyboardTypeFromDictionary:]
  +[CNKeyboardSettings autocorrectionTypeFromDictionary:]
  +[CNKeyboardSettings autocapitalizationTypeFromDictionary:]
  +[CNKeyboardSettings contentsIsSingleValue:]
  +[CNKeyboardSettings usesTextSuggestionDelegate:]


CNAccountsAndGroupsAuthorizationContext : NSObject
 @property  long long type
 @property  CNAccountsAndGroupsItem *item
 @property  CNContainerPickerItem *containerItem
 @property  CNAccountsAndGroupsCell *cell
 @property  NSArray *contactsToAddToDropDestination
 @property  @? actionCompletionHandler

  // instance methods
  -[CNAccountsAndGroupsAuthorizationContext setItem:]
  -[CNAccountsAndGroupsAuthorizationContext type]
  -[CNAccountsAndGroupsAuthorizationContext containerItem]
  -[CNAccountsAndGroupsAuthorizationContext .cxx_destruct]
  -[CNAccountsAndGroupsAuthorizationContext setType:]
  -[CNAccountsAndGroupsAuthorizationContext item]
  -[CNAccountsAndGroupsAuthorizationContext cell]
  -[CNAccountsAndGroupsAuthorizationContext setCell:]
  -[CNAccountsAndGroupsAuthorizationContext setContainerItem:]
  -[CNAccountsAndGroupsAuthorizationContext contactsToAddToDropDestination]
  -[CNAccountsAndGroupsAuthorizationContext setContactsToAddToDropDestination:]
  -[CNAccountsAndGroupsAuthorizationContext actionCompletionHandler]
  -[CNAccountsAndGroupsAuthorizationContext setActionCompletionHandler:]


CNAccountsAndGroupsViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDropDelegate, CNUIEditAuthorizationControllerDelegate, CNAccountsAndGroupsCellDelegate, CNAccountsAndGroupsActionsProviderDelegate, CNContactListActionDelegate>
 @property  BOOL needsReload
 @property  BOOL isVisible
 @property  CNUIGroupsAndContainersSaveManager *groupsAndContainersSaveManager
 @property  CNUIEditAuthorizationController *editAuthorizationController
 @property  CNContainerDataSource *containerDataSource
 @property  CNAccountsAndGroupsAuthorizationContext *currentAuthorizationContext
 @property  CNAccountsAndGroupsActionsProvider *actionsProvider
 @property  CNUIUserActivityManager *activityManager
 @property  long long buttonBehavior
 @property  UIKeyCommand *addGroupKeyCommand
 @property  BOOL contextMenuShouldSetCellEditing
 @property  UIViewController *potentiallyPresentedViewController
 @property  UICollectionView *collectionView
 @property  _UIDiffableDataSourceOutlineSectionController *sectionController
 @property  UICollectionViewDiffableDataSource *diffableDataSource
 @property  UIBarButtonItem *addGroupBarButtonItem
 @property  UIBarButtonItem *cancelBarButtonItem
 @property  CNAccountsAndGroupsDataSource *dataSource
 @property  CNManagedConfiguration *managedConfiguration
 @property  <CNAccountsAndGroupsViewControllerDelegate> *delegate
 @property  BOOL allowsEditing
 @property  BOOL allowsCanceling
 @property  BOOL allowsDone
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNAccountsAndGroupsViewController log]
  +[CNAccountsAndGroupsViewController allowedDropTypes]

  // instance methods
  -[CNAccountsAndGroupsViewController setCollectionView:]
  -[CNAccountsAndGroupsViewController managedConfiguration]
  -[CNAccountsAndGroupsViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNAccountsAndGroupsViewController setManagedConfiguration:]
  -[CNAccountsAndGroupsViewController editAuthorizationController:authorizationDidFinishWithResult:]
  -[CNAccountsAndGroupsViewController groupsAndContainersSaveManager]
  -[CNAccountsAndGroupsViewController setGroupsAndContainersSaveManager:]
  -[CNAccountsAndGroupsViewController cancel:]
  -[CNAccountsAndGroupsViewController activityManager]
  -[CNAccountsAndGroupsViewController collectionView:performDropWithCoordinator:]
  -[CNAccountsAndGroupsViewController dismissKeyboard]
  -[CNAccountsAndGroupsViewController reloadData]
  -[CNAccountsAndGroupsViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[CNAccountsAndGroupsViewController dataSource]
  -[CNAccountsAndGroupsViewController setAllowsEditing:]
  -[CNAccountsAndGroupsViewController allowsEditing]
  -[CNAccountsAndGroupsViewController layout]
  -[CNAccountsAndGroupsViewController allowsCanceling]
  -[CNAccountsAndGroupsViewController setDelegate:]
  -[CNAccountsAndGroupsViewController setEditing:animated:]
  -[CNAccountsAndGroupsViewController isVisible]
  -[CNAccountsAndGroupsViewController contentSizeCategoryDidChange:]
  -[CNAccountsAndGroupsViewController collectionView:willEndContextMenuInteractionWithConfiguration:animator:]
  -[CNAccountsAndGroupsViewController setAllowsCanceling:]
  -[CNAccountsAndGroupsViewController collectionView:shouldSelectItemAtIndexPath:]
  -[CNAccountsAndGroupsViewController delegate]
  -[CNAccountsAndGroupsViewController actionDidFinish:]
  -[CNAccountsAndGroupsViewController collectionView:dropSessionDidUpdate:withDestinationIndexPath:]
  -[CNAccountsAndGroupsViewController setButtonBehavior:]
  -[CNAccountsAndGroupsViewController initWithNibName:bundle:]
  -[CNAccountsAndGroupsViewController viewDidAppear:]
  -[CNAccountsAndGroupsViewController setCancelBarButtonItem:]
  -[CNAccountsAndGroupsViewController setNeedsReload:]
  -[CNAccountsAndGroupsViewController dealloc]
  -[CNAccountsAndGroupsViewController collectionView:canFocusItemAtIndexPath:]
  -[CNAccountsAndGroupsViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[CNAccountsAndGroupsViewController .cxx_destruct]
  -[CNAccountsAndGroupsViewController collectionView]
  -[CNAccountsAndGroupsViewController viewDidLoad]
  -[CNAccountsAndGroupsViewController needsReload]
  -[CNAccountsAndGroupsViewController viewWillAppear:]
  -[CNAccountsAndGroupsViewController allowsDone]
  -[CNAccountsAndGroupsViewController cancelBarButtonItem]
  -[CNAccountsAndGroupsViewController multitaskingDragExclusionRects]
  -[CNAccountsAndGroupsViewController collectionView:canHandleDropSession:]
  -[CNAccountsAndGroupsViewController presentingViewControllerForActions]
  -[CNAccountsAndGroupsViewController diffableDataSource]
  -[CNAccountsAndGroupsViewController collectionView:contextMenuConfigurationForItemsAtIndexPaths:point:]
  -[CNAccountsAndGroupsViewController action:presentViewController:]
  -[CNAccountsAndGroupsViewController setDataSource:]
  -[CNAccountsAndGroupsViewController keyboardWillShow:]
  -[CNAccountsAndGroupsViewController keyboardWillHide:]
  -[CNAccountsAndGroupsViewController contactStoreDidChange:]
  -[CNAccountsAndGroupsViewController viewDidDisappear:]
  -[CNAccountsAndGroupsViewController collectionView:didSelectItemAtIndexPath:]
  -[CNAccountsAndGroupsViewController viewWillDisappear:]
  -[CNAccountsAndGroupsViewController setDiffableDataSource:]
  -[CNAccountsAndGroupsViewController canBecomeFirstResponder]
  -[CNAccountsAndGroupsViewController collectionView:contextMenuConfiguration:dismissalPreviewForItemAtIndexPath:]
  -[CNAccountsAndGroupsViewController setAllowsDone:]
  -[CNAccountsAndGroupsViewController buttonBehavior]
  -[CNAccountsAndGroupsViewController collectionView:contextMenuConfiguration:highlightPreviewForItemAtIndexPath:]
  -[CNAccountsAndGroupsViewController traitCollectionDidChange:]
  -[CNAccountsAndGroupsViewController _updateUserActivity]
  -[CNAccountsAndGroupsViewController presentErrorAlertWithTitle:message:animated:]
  -[CNAccountsAndGroupsViewController editAuthorizationController]
  -[CNAccountsAndGroupsViewController setEditAuthorizationController:]
  -[CNAccountsAndGroupsViewController sectionController]
  -[CNAccountsAndGroupsViewController setSectionController:]
  -[CNAccountsAndGroupsViewController didTapCollectionView:]
  -[CNAccountsAndGroupsViewController addDefaultGroup:]
  -[CNAccountsAndGroupsViewController isCollectionViewEditing]
  -[CNAccountsAndGroupsViewController cellTextViewDidChangeHeight]
  -[CNAccountsAndGroupsViewController item:didEndEditingWithName:]
  -[CNAccountsAndGroupsViewController showEditAuthorizationPaneWithAuthorizationContext:animated:]
  -[CNAccountsAndGroupsViewController presentErrorAlertWithMessage:animated:]
  -[CNAccountsAndGroupsViewController presentController:animated:]
  -[CNAccountsAndGroupsViewController resignAllFirstRespondersSavingCurrentlyEditing:]
  -[CNAccountsAndGroupsViewController reloadCollectionViewDeletingItem:]
  -[CNAccountsAndGroupsViewController reloadCollectionViewForSectionWithIdentifier:settingFilterForEditingItem:allowsReloadWhenEditing:]
  -[CNAccountsAndGroupsViewController reloadCollectionViewAddingPlaceholderItem:inSectionWithIdentifier:]
  -[CNAccountsAndGroupsViewController contextMenuDidSelectRenameAction]
  -[CNAccountsAndGroupsViewController expandSectionForAccountWithIdentifier:]
  -[CNAccountsAndGroupsViewController shouldSetFirstResponder]
  -[CNAccountsAndGroupsViewController setUpCollectionView]
  -[CNAccountsAndGroupsViewController editingCollectionViewRequiresAuthorization]
  -[CNAccountsAndGroupsViewController authorizedSetViewEditing:animated:]
  -[CNAccountsAndGroupsViewController authorizedSetCollectionViewEditing:]
  -[CNAccountsAndGroupsViewController addGroupKeyCommand]
  -[CNAccountsAndGroupsViewController addGroupBarButtonItem]
  -[CNAccountsAndGroupsViewController reloadAddGroupButton]
  -[CNAccountsAndGroupsViewController menuForContainers]
  -[CNAccountsAndGroupsViewController shouldShowCancelButton]
  -[CNAccountsAndGroupsViewController updateNavigationButtons]
  -[CNAccountsAndGroupsViewController updateToolbarVisibility]
  -[CNAccountsAndGroupsViewController cleanUpItemIfNeeded:]
  -[CNAccountsAndGroupsViewController selectCurrentItemIfNeeded]
  -[CNAccountsAndGroupsViewController currentlySelectedItem]
  -[CNAccountsAndGroupsViewController restoreCurrentlyEditingGroupIfNeeded]
  -[CNAccountsAndGroupsViewController setEditingForGroupItem:]
  -[CNAccountsAndGroupsViewController isAnyListCellCurrentlyEditing]
  -[CNAccountsAndGroupsViewController deselectAllItems]
  -[CNAccountsAndGroupsViewController isNotificationInternalSave:]
  -[CNAccountsAndGroupsViewController viewCanReload]
  -[CNAccountsAndGroupsViewController groupsStyle]
  -[CNAccountsAndGroupsViewController configureDataSource]
  -[CNAccountsAndGroupsViewController shouldEnableItem:]
  -[CNAccountsAndGroupsViewController selectAllContacts]
  -[CNAccountsAndGroupsViewController authorizedAddContacts:toDestinationItem:]
  -[CNAccountsAndGroupsViewController expandLargeTitleIfNeeded]
  -[CNAccountsAndGroupsViewController expandLargeTitle]
  -[CNAccountsAndGroupsViewController setIsVisible:]
  -[CNAccountsAndGroupsViewController containerDataSource]
  -[CNAccountsAndGroupsViewController setContainerDataSource:]
  -[CNAccountsAndGroupsViewController currentAuthorizationContext]
  -[CNAccountsAndGroupsViewController setCurrentAuthorizationContext:]
  -[CNAccountsAndGroupsViewController actionsProvider]
  -[CNAccountsAndGroupsViewController setActionsProvider:]
  -[CNAccountsAndGroupsViewController setAddGroupKeyCommand:]
  -[CNAccountsAndGroupsViewController contextMenuShouldSetCellEditing]
  -[CNAccountsAndGroupsViewController setContextMenuShouldSetCellEditing:]
  -[CNAccountsAndGroupsViewController potentiallyPresentedViewController]
  -[CNAccountsAndGroupsViewController setPotentiallyPresentedViewController:]
  -[CNAccountsAndGroupsViewController setAddGroupBarButtonItem:]


CNMeCardSharingPickerLayoutAttributes : NSObject
 @property  double topToAvatarPadding
 @property  UIFont *headerFont
 @property  {CGSize=dd} avatarViewSize
 @property  double avatarViewToNamePadding
 @property  UIColor *backgroundColor

  // class methods
  +[CNMeCardSharingPickerLayoutAttributes buddyHeaderFont]
  +[CNMeCardSharingPickerLayoutAttributes settingsHeaderFont]
  +[CNMeCardSharingPickerLayoutAttributes layoutAttributesForBuddy]
  +[CNMeCardSharingPickerLayoutAttributes layoutAttributesForSettings]

  // instance methods
  -[CNMeCardSharingPickerLayoutAttributes .cxx_destruct]
  -[CNMeCardSharingPickerLayoutAttributes backgroundColor]
  -[CNMeCardSharingPickerLayoutAttributes headerFont]
  -[CNMeCardSharingPickerLayoutAttributes initWithTopToAvatarPadding:headerFont:avatarViewSize:avatarViewToNamePadding:backgroundColor:]
  -[CNMeCardSharingPickerLayoutAttributes topToAvatarPadding]
  -[CNMeCardSharingPickerLayoutAttributes avatarViewSize]
  -[CNMeCardSharingPickerLayoutAttributes avatarViewToNamePadding]


CNPhotoPickerAnimojiProvider : NSObject <CNPhotoPickerProvider>
 @property  <AVTAvatarStore> *avatarStore
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPhotoPickerAnimojiProvider providerItemForAvatarRecord:]
  +[CNPhotoPickerAnimojiProvider providerItemForAvatarRecord:imageProvider:renderingQueue:callbackQueue:]

  // instance methods
  -[CNPhotoPickerAnimojiProvider identifier]
  -[CNPhotoPickerAnimojiProvider .cxx_destruct]
  -[CNPhotoPickerAnimojiProvider setIdentifier:]
  -[CNPhotoPickerAnimojiProvider canCreateMemoji]
  -[CNPhotoPickerAnimojiProvider avatarStore]
  -[CNPhotoPickerAnimojiProvider initWithVisualIdentity:]
  -[CNPhotoPickerAnimojiProvider loadItemsForSize:scale:RTL:renderingQueue:callbackQueue:itemDelegate:]
  -[CNPhotoPickerAnimojiProvider initWithVisualIdentity:avatarStore:]


CNVisualIdentityAvatarContainerView : UIView
 @property  <CNVisualIdentityAvatarContainerViewDelegate> *delegate

  // instance methods
  -[CNVisualIdentityAvatarContainerView setDelegate:]
  -[CNVisualIdentityAvatarContainerView delegate]
  -[CNVisualIdentityAvatarContainerView .cxx_destruct]
  -[CNVisualIdentityAvatarContainerView sizeThatFits:]


CNVisualIdentityAvatarViewController : UIViewController <CNContactChangesObserver, CNVisualIdentityAvatarContainerViewDelegate>
 @property  UIView *contentView
 @property  <CNVisualIdentityPrimaryAvatarProvider> *primaryAvatarProvider
 @property  <CNScheduler> *renderingQueue
 @property  <CNScheduler> *callbackQueue
 @property  CNVisualIdentityContactAvatarProvider *avatarProvider
 @property  UIImageView *mediaContextBadgeView
 @property  UIImageView *badgeImageView
 @property  UITapGestureRecognizer *badgeTapGestureRecognizer
 @property  CNVisualIdentityAvatarLayoutManager *avatarLayoutManager
 @property  CNUIAvatarLayoutLayerItem *avatarLayerItem
 @property  CAShapeLayer *avatarClippingLayer
 @property  {CGSize=dd} previousSize
 @property  BOOL usingDropAppearance
 @property  CNVisualIdentity *visualIdentity
 @property  UIImage *badgeImage
 @property  CNBadgingAvatarBadgeStyleSettings *badgeStyleSettings
 @property  CNAvatarAccessoryView *mediaContextBadge
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNVisualIdentityAvatarViewController descriptorForRequiredKeys]
  +[CNVisualIdentityAvatarViewController log]
  +[CNVisualIdentityAvatarViewController maxContactAvatars]

  // instance methods
  -[CNVisualIdentityAvatarViewController contentView]
  -[CNVisualIdentityAvatarViewController _canShowWhileLocked]
  -[CNVisualIdentityAvatarViewController previousSize]
  -[CNVisualIdentityAvatarViewController setPreviousSize:]
  -[CNVisualIdentityAvatarViewController callbackQueue]
  -[CNVisualIdentityAvatarViewController itemCount]
  -[CNVisualIdentityAvatarViewController dealloc]
  -[CNVisualIdentityAvatarViewController .cxx_destruct]
  -[CNVisualIdentityAvatarViewController viewDidLoad]
  -[CNVisualIdentityAvatarViewController loadView]
  -[CNVisualIdentityAvatarViewController viewDidLayoutSubviews]
  -[CNVisualIdentityAvatarViewController setContentView:]
  -[CNVisualIdentityAvatarViewController contactDidChange:]
  -[CNVisualIdentityAvatarViewController estimatedSizeThatFits:]
  -[CNVisualIdentityAvatarViewController setMediaContextBadge:]
  -[CNVisualIdentityAvatarViewController mediaContextBadge]
  -[CNVisualIdentityAvatarViewController avatarProvider]
  -[CNVisualIdentityAvatarViewController visualIdentity]
  -[CNVisualIdentityAvatarViewController setVisualIdentity:]
  -[CNVisualIdentityAvatarViewController initWithVisualIdentity:]
  -[CNVisualIdentityAvatarViewController initWithVisualIdentity:primaryAvatarProvider:]
  -[CNVisualIdentityAvatarViewController initWithVisualIdentity:primaryAvatarProvider:avatarImageRendererSettings:]
  -[CNVisualIdentityAvatarViewController removeAllSublayers]
  -[CNVisualIdentityAvatarViewController setBadgeStyleSettings:]
  -[CNVisualIdentityAvatarViewController updateBadgeStyling]
  -[CNVisualIdentityAvatarViewController updateBadgeTintColor]
  -[CNVisualIdentityAvatarViewController updateBadgeCropStyle]
  -[CNVisualIdentityAvatarViewController updateBadgeImageViewBackgroundColor]
  -[CNVisualIdentityAvatarViewController updateBadgeImageViewContentMode]
  -[CNVisualIdentityAvatarViewController updateBadgeImageViewPosition]
  -[CNVisualIdentityAvatarViewController setBadgeImage:]
  -[CNVisualIdentityAvatarViewController setBadgeViewImage:]
  -[CNVisualIdentityAvatarViewController setBadgeTarget:action:]
  -[CNVisualIdentityAvatarViewController removeBadgeTapGestureRecognizer]
  -[CNVisualIdentityAvatarViewController updateBadgeViewFrame]
  -[CNVisualIdentityAvatarViewController badgeImage]
  -[CNVisualIdentityAvatarViewController updateMediaContextBadgeImage]
  -[CNVisualIdentityAvatarViewController updateMediaContextBadgeFrame]
  -[CNVisualIdentityAvatarViewController updateContactChangesNotifierRegistration]
  -[CNVisualIdentityAvatarViewController containingCellView]
  -[CNVisualIdentityAvatarViewController logSublayersContent]
  -[CNVisualIdentityAvatarViewController layoutAvatars]
  -[CNVisualIdentityAvatarViewController updateAvatarSublayersAndAddToView]
  -[CNVisualIdentityAvatarViewController updatePrimaryAvatar]
  -[CNVisualIdentityAvatarViewController createPrimaryAvatarLayerIfNeeded]
  -[CNVisualIdentityAvatarViewController updateImageForPrimaryAvatar]
  -[CNVisualIdentityAvatarViewController layoutPrimaryAvatar]
  -[CNVisualIdentityAvatarViewController updateImageForLayerItem:atIndex:includePlaceholder:]
  -[CNVisualIdentityAvatarViewController updateImageForLayerItem:atIndex:includePlaceholder:animated:]
  -[CNVisualIdentityAvatarViewController layerForPrimaryAvatar]
  -[CNVisualIdentityAvatarViewController beginDropAppearance]
  -[CNVisualIdentityAvatarViewController endDropAppearance]
  -[CNVisualIdentityAvatarViewController shouldDisplayPrimaryAvatarImage]
  -[CNVisualIdentityAvatarViewController visualIdentityDidUpdate:]
  -[CNVisualIdentityAvatarViewController avatarFrameForFocusedAvatarInView:]
  -[CNVisualIdentityAvatarViewController badgeStyleSettings]
  -[CNVisualIdentityAvatarViewController primaryAvatarProvider]
  -[CNVisualIdentityAvatarViewController setPrimaryAvatarProvider:]
  -[CNVisualIdentityAvatarViewController renderingQueue]
  -[CNVisualIdentityAvatarViewController setAvatarProvider:]
  -[CNVisualIdentityAvatarViewController mediaContextBadgeView]
  -[CNVisualIdentityAvatarViewController setMediaContextBadgeView:]
  -[CNVisualIdentityAvatarViewController badgeImageView]
  -[CNVisualIdentityAvatarViewController setBadgeImageView:]
  -[CNVisualIdentityAvatarViewController badgeTapGestureRecognizer]
  -[CNVisualIdentityAvatarViewController setBadgeTapGestureRecognizer:]
  -[CNVisualIdentityAvatarViewController avatarLayoutManager]
  -[CNVisualIdentityAvatarViewController setAvatarLayoutManager:]
  -[CNVisualIdentityAvatarViewController avatarLayerItem]
  -[CNVisualIdentityAvatarViewController setAvatarLayerItem:]
  -[CNVisualIdentityAvatarViewController avatarClippingLayer]
  -[CNVisualIdentityAvatarViewController setAvatarClippingLayer:]
  -[CNVisualIdentityAvatarViewController usingDropAppearance]
  -[CNVisualIdentityAvatarViewController setUsingDropAppearance:]


CNContactDataSourceLIFOScheduler : NSObject <CNScheduler>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableArray *stack
 @property  double timestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactDataSourceLIFOScheduler performBlock:]
  -[CNContactDataSourceLIFOScheduler afterDelay:performBlock:qualityOfService:]
  -[CNContactDataSourceLIFOScheduler performBlock:qualityOfService:]
  -[CNContactDataSourceLIFOScheduler performCancelableBlock:qualityOfService:]
  -[CNContactDataSourceLIFOScheduler stack]
  -[CNContactDataSourceLIFOScheduler afterDelay:performBlock:]
  -[CNContactDataSourceLIFOScheduler performCancelableBlock:]
  -[CNContactDataSourceLIFOScheduler dealloc]
  -[CNContactDataSourceLIFOScheduler .cxx_destruct]
  -[CNContactDataSourceLIFOScheduler queue]
  -[CNContactDataSourceLIFOScheduler timestamp]
  -[CNContactDataSourceLIFOScheduler init]


CNFaceTimeCell : CNLabeledCell <CNActionViewDelegate, CNUIUserActionListConsumer, CNContactActionsControllerDelegate>
 @property  UILabel *faceTimeLabel
 @property  BOOL isFaceTimeAudioAvailable
 @property  CNActionView *actionView1
 @property  CNActionView *actionView2
 @property  NSArray *supportedActionTypes
 @property  <CNCustomPresentation> *actionsControllerPresentation
 @property  CNContactActionsController *actionsController
 @property  CNActionMenuHelper *actionMenuHelper
 @property  UIContextMenuInteraction *contextMenuInteraction
 @property  NSArray *tokens
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  double throttleDelay
 @property  NSDictionary *defaultActionPerType
 @property  CNUIUserActionListDataSource *actionsDataSource
 @property  <CNPropertyCellDelegate> *delegate
 @property  CNContact *contact
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNFaceTimeCell initWithStyle:reuseIdentifier:]
  -[CNFaceTimeCell setTokens:]
  -[CNFaceTimeCell setContextMenuInteraction:]
  -[CNFaceTimeCell contact]
  -[CNFaceTimeCell tokens]
  -[CNFaceTimeCell performAction:]
  -[CNFaceTimeCell setDelegate:]
  -[CNFaceTimeCell actionMenuHelper]
  -[CNFaceTimeCell contextMenuInteraction]
  -[CNFaceTimeCell delegate]
  -[CNFaceTimeCell labelView]
  -[CNFaceTimeCell reset]
  -[CNFaceTimeCell isFaceTimeAudioAvailable]
  -[CNFaceTimeCell .cxx_destruct]
  -[CNFaceTimeCell schedulerProvider]
  -[CNFaceTimeCell tintColorDidChange]
  -[CNFaceTimeCell setSchedulerProvider:]
  -[CNFaceTimeCell setContact:]
  -[CNFaceTimeCell setActionMenuHelper:]
  -[CNFaceTimeCell actionsController]
  -[CNFaceTimeCell rightMostView]
  -[CNFaceTimeCell variableConstraints]
  -[CNFaceTimeCell minCellHeight]
  -[CNFaceTimeCell constantConstraints]
  -[CNFaceTimeCell performDefaultAction]
  -[CNFaceTimeCell contactActionsController:didSelectAction:]
  -[CNFaceTimeCell contactActionsController:didUpdateWithMenu:]
  -[CNFaceTimeCell setActionsController:]
  -[CNFaceTimeCell supportedActionTypes]
  -[CNFaceTimeCell actionsDataSource]
  -[CNFaceTimeCell setActionsDataSource:]
  -[CNFaceTimeCell didPressActionView:longPress:]
  -[CNFaceTimeCell actionViewShouldPresentDisambiguationUI:]
  -[CNFaceTimeCell loadCachedActions]
  -[CNFaceTimeCell discoverAvailableActionTypes]
  -[CNFaceTimeCell allModelsObservable]
  -[CNFaceTimeCell processModels:]
  -[CNFaceTimeCell actionViewForType:]
  -[CNFaceTimeCell updateHorizontalTouchAreas]
  -[CNFaceTimeCell didSelectActionType:withSourceView:longPress:]
  -[CNFaceTimeCell faceTimeLabel]
  -[CNFaceTimeCell setIsFaceTimeAudioAvailable:]
  -[CNFaceTimeCell actionView1]
  -[CNFaceTimeCell actionView2]
  -[CNFaceTimeCell setSupportedActionTypes:]
  -[CNFaceTimeCell actionsControllerPresentation]
  -[CNFaceTimeCell setActionsControllerPresentation:]
  -[CNFaceTimeCell throttleDelay]
  -[CNFaceTimeCell defaultActionPerType]
  -[CNFaceTimeCell setDefaultActionPerType:]


CNPhotoPickerTrapView : UIView
 @property  UILabel *label
 @property  NSArray *constraints

  // instance methods
  -[CNPhotoPickerTrapView setLabel:]
  -[CNPhotoPickerTrapView setConstraints:]
  -[CNPhotoPickerTrapView .cxx_destruct]
  -[CNPhotoPickerTrapView label]
  -[CNPhotoPickerTrapView initWithFrame:]
  -[CNPhotoPickerTrapView constraints]


CNActionView : UIControl <UIGestureRecognizerDelegate, NUIContainerViewDelegate>
 @property  NUIContainerStackView *containerView
 @property  NUIContainerBoxView *platterBoxView
 @property  UIView *platterView
 @property  UIImageView *imageView
 @property  NUIContainerStackView *horizontalContentView
 @property  UILabel *titleLabel
 @property  CNActionMenuHelper *actionMenuHelper
 @property  TLKProminenceView *vibrantPlatterView
 @property  TLKProminenceView *vibrantBackgroundView
 @property  UIFont *titleFont
 @property  <CNActionViewDelegate> *actionDelegate
 @property  UIImage *image
 @property  NSString *title
 @property  NSString *type
 @property  long long style
 @property  BOOL disabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNActionView defaultTitleFont]
  +[CNActionView borderColorForDisabledBoldState]
  +[CNActionView contentColorForDisabledBoldState]
  +[CNActionView contentColorForDisabledVibrantDarkState]
  +[CNActionView colorByIncreasingBrightnessComponentByPercentage:ofColor:]
  +[CNActionView fadeInView:]
  +[CNActionView minimumPillDimension]
  +[CNActionView titleFontForStyle:]
  +[CNActionView minimumSizeForStyle:]

  // instance methods
  -[CNActionView setHighlighted:animated:]
  -[CNActionView titleFont]
  -[CNActionView disabled]
  -[CNActionView setTitleLabel:]
  -[CNActionView contextMenuInteraction:previewForHighlightingMenuWithConfiguration:]
  -[CNActionView contextMenuInteraction:configurationForMenuAtLocation:]
  -[CNActionView setTitleFont:]
  -[CNActionView contextMenuInteraction:willEndForConfiguration:animator:]
  -[CNActionView setPlatterView:]
  -[CNActionView contextMenuInteraction:willDisplayMenuForConfiguration:animator:]
  -[CNActionView actionMenuHelper]
  -[CNActionView setImageView:]
  -[CNActionView type]
  -[CNActionView style]
  -[CNActionView platterView]
  -[CNActionView .cxx_destruct]
  -[CNActionView setDisabled:]
  -[CNActionView setContainerView:]
  -[CNActionView updateWithMenuItems:]
  -[CNActionView updateImage]
  -[CNActionView setHighlighted:]
  -[CNActionView actionDelegate]
  -[CNActionView tintColorDidChange]
  -[CNActionView containerView]
  -[CNActionView layoutSubviews]
  -[CNActionView setType:]
  -[CNActionView title]
  -[CNActionView updateBackground]
  -[CNActionView image]
  -[CNActionView sizeThatFits:]
  -[CNActionView intrinsicContentSize]
  -[CNActionView containerViewDidLayoutArrangedSubviews:]
  -[CNActionView initWithFrame:]
  -[CNActionView setActionMenuHelper:]
  -[CNActionView setStyle:]
  -[CNActionView setImage:]
  -[CNActionView setTitle:]
  -[CNActionView didMoveToWindow]
  -[CNActionView titleLabel]
  -[CNActionView init]
  -[CNActionView imageView]
  -[CNActionView setActionDelegate:]
  -[CNActionView updateTitleLabelFont]
  -[CNActionView handleTapGesture]
  -[CNActionView colorByAdjustingColorToHighlightState:]
  -[CNActionView shouldShowDisambiguation]
  -[CNActionView setDisabled:animated:]
  -[CNActionView applyRoundedRectMargins]
  -[CNActionView platterViewMinimumLayoutSizeForStyle:]
  -[CNActionView updatePlatterViewStateAnimated:]
  -[CNActionView updateImageViewStateAnimated:]
  -[CNActionView updateLabelStateAnimated:]
  -[CNActionView applyDefaultLabelContainerMetrics]
  -[CNActionView updateLabelArrangedSubviews]
  -[CNActionView sourceViewForContextMenuPreview]
  -[CNActionView platterBoxView]
  -[CNActionView setPlatterBoxView:]
  -[CNActionView horizontalContentView]
  -[CNActionView setHorizontalContentView:]
  -[CNActionView vibrantPlatterView]
  -[CNActionView setVibrantPlatterView:]
  -[CNActionView vibrantBackgroundView]
  -[CNActionView setVibrantBackgroundView:]


CNContactListCollectionViewCell : UICollectionViewListCell
 @property  <CNCancelable> *summaryCancelationToken
 @property  BOOL hasBeenDisplayed
 @property  CNContact *contact
 @property  CNContactMatchInfo *contactMatchInfo
 @property  CNContactFormatter *contactFormatter
 @property  CNContactListStyleApplier *contactListStyleApplier
 @property  BOOL isMeCard
 @property  BOOL isEmergencyContact
 @property  BOOL allowsMultiSelection
 @property  BOOL allowsMultiSelectContextMenus

  // instance methods
  -[CNContactListCollectionViewCell contactListStyleApplier]
  -[CNContactListCollectionViewCell contact]
  -[CNContactListCollectionViewCell allowsMultiSelection]
  -[CNContactListCollectionViewCell setContactListStyleApplier:]
  -[CNContactListCollectionViewCell dealloc]
  -[CNContactListCollectionViewCell .cxx_destruct]
  -[CNContactListCollectionViewCell prepareForReuse]
  -[CNContactListCollectionViewCell layoutSubviews]
  -[CNContactListCollectionViewCell setAllowsMultiSelectContextMenus:]
  -[CNContactListCollectionViewCell setContact:]
  -[CNContactListCollectionViewCell initWithFrame:]
  -[CNContactListCollectionViewCell setAllowsMultiSelection:]
  -[CNContactListCollectionViewCell contactFormatter]
  -[CNContactListCollectionViewCell allowsMultiSelectContextMenus]
  -[CNContactListCollectionViewCell setContactFormatter:]
  -[CNContactListCollectionViewCell setIsEmergencyContact:]
  -[CNContactListCollectionViewCell isEmergencyContact]
  -[CNContactListCollectionViewCell setContactMatchInfo:]
  -[CNContactListCollectionViewCell setContactMatchInfo:completionBlock:]
  -[CNContactListCollectionViewCell setSubtitleAttributedText:]
  -[CNContactListCollectionViewCell cancelAsyncOperations]
  -[CNContactListCollectionViewCell setIsMeCard:]
  -[CNContactListCollectionViewCell applyAccessories]
  -[CNContactListCollectionViewCell contactMatchInfo]
  -[CNContactListCollectionViewCell isMeCard]
  -[CNContactListCollectionViewCell summaryCancelationToken]
  -[CNContactListCollectionViewCell setSummaryCancelationToken:]
  -[CNContactListCollectionViewCell hasBeenDisplayed]
  -[CNContactListCollectionViewCell setHasBeenDisplayed:]


CNAvatarCardActionCell : UITableViewCell
 @property  UIImageView *actionImageView
 @property  CNAvatarCardHighlightView *defaultHighlightView
 @property  CNAvatarCardHighlightView *moreHighlightView
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UIPageControl *pageControl
 @property  UILabel *moreLabel
 @property  UIView *translatingView
 @property  UIView *separatorView
 @property  UIButton *expandButton
 @property  NSLayoutConstraint *punchOutLeftConstraint
 @property  NSLayoutConstraint *translatingViewLeadingConstraint
 @property  NSLayoutConstraint *pageControlLeadingConstraint
 @property  NSLayoutConstraint *expandButtonWidthConstraint
 @property  NSLayoutConstraint *moreHighlightViewHiddingConstraint
 @property  double initialTranslatingViewLeadingConstraintConstant
 @property  unsigned long lastScrollDirection
 @property  double lastScrollDirectionTimestamp
 @property  BOOL gestureActivated
 @property  BOOL transitioning
 @property  BOOL swipped
 @property  BOOL moreHighlighted
 @property  CNQuickAction *action
 @property  long long context

  // class methods
  +[CNAvatarCardActionCell cellNibForActions]
  +[CNAvatarCardActionCell cellNibForContacts]

  // instance methods
  -[CNAvatarCardActionCell setSubtitleLabel:]
  -[CNAvatarCardActionCell setHighlighted:animated:]
  -[CNAvatarCardActionCell subtitleLabel]
  -[CNAvatarCardActionCell setTransitioning:]
  -[CNAvatarCardActionCell setTitleLabel:]
  -[CNAvatarCardActionCell _updateFonts]
  -[CNAvatarCardActionCell reloadData]
  -[CNAvatarCardActionCell setLastScrollDirection:]
  -[CNAvatarCardActionCell .cxx_destruct]
  -[CNAvatarCardActionCell prepareForReuse]
  -[CNAvatarCardActionCell setHighlighted:]
  -[CNAvatarCardActionCell action]
  -[CNAvatarCardActionCell setPageControl:]
  -[CNAvatarCardActionCell separatorView]
  -[CNAvatarCardActionCell setContext:]
  -[CNAvatarCardActionCell setSeparatorView:]
  -[CNAvatarCardActionCell lastScrollDirection]
  -[CNAvatarCardActionCell context]
  -[CNAvatarCardActionCell transitioning]
  -[CNAvatarCardActionCell expandButton]
  -[CNAvatarCardActionCell awakeFromNib]
  -[CNAvatarCardActionCell setAction:]
  -[CNAvatarCardActionCell pageControl]
  -[CNAvatarCardActionCell titleLabel]
  -[CNAvatarCardActionCell trackHighlight:]
  -[CNAvatarCardActionCell _updateHighlightAnimated:]
  -[CNAvatarCardActionCell startTrackingWithGestureRecognizer:]
  -[CNAvatarCardActionCell stopTrackingWithGestureRecognizer:]
  -[CNAvatarCardActionCell swipped]
  -[CNAvatarCardActionCell setSwipped:]
  -[CNAvatarCardActionCell moreHighlighted]
  -[CNAvatarCardActionCell setMoreHighlighted:]
  -[CNAvatarCardActionCell actionImageView]
  -[CNAvatarCardActionCell setActionImageView:]
  -[CNAvatarCardActionCell defaultHighlightView]
  -[CNAvatarCardActionCell setDefaultHighlightView:]
  -[CNAvatarCardActionCell moreHighlightView]
  -[CNAvatarCardActionCell setMoreHighlightView:]
  -[CNAvatarCardActionCell moreLabel]
  -[CNAvatarCardActionCell setMoreLabel:]
  -[CNAvatarCardActionCell translatingView]
  -[CNAvatarCardActionCell setTranslatingView:]
  -[CNAvatarCardActionCell setExpandButton:]
  -[CNAvatarCardActionCell punchOutLeftConstraint]
  -[CNAvatarCardActionCell setPunchOutLeftConstraint:]
  -[CNAvatarCardActionCell translatingViewLeadingConstraint]
  -[CNAvatarCardActionCell setTranslatingViewLeadingConstraint:]
  -[CNAvatarCardActionCell pageControlLeadingConstraint]
  -[CNAvatarCardActionCell setPageControlLeadingConstraint:]
  -[CNAvatarCardActionCell expandButtonWidthConstraint]
  -[CNAvatarCardActionCell setExpandButtonWidthConstraint:]
  -[CNAvatarCardActionCell moreHighlightViewHiddingConstraint]
  -[CNAvatarCardActionCell setMoreHighlightViewHiddingConstraint:]
  -[CNAvatarCardActionCell initialTranslatingViewLeadingConstraintConstant]
  -[CNAvatarCardActionCell setInitialTranslatingViewLeadingConstraintConstant:]
  -[CNAvatarCardActionCell lastScrollDirectionTimestamp]
  -[CNAvatarCardActionCell setLastScrollDirectionTimestamp:]
  -[CNAvatarCardActionCell gestureActivated]
  -[CNAvatarCardActionCell setGestureActivated:]


CNAvatarCardContactCell : CNAvatarCardActionCell
 @property  UIImageView *contactImageView

  // instance methods
  -[CNAvatarCardContactCell _updateFonts]
  -[CNAvatarCardContactCell reloadData]
  -[CNAvatarCardContactCell .cxx_destruct]
  -[CNAvatarCardContactCell prepareForReuse]
  -[CNAvatarCardContactCell awakeFromNib]
  -[CNAvatarCardContactCell moreHighlighted]
  -[CNAvatarCardContactCell contactImageView]
  -[CNAvatarCardContactCell setContactImageView:]


CNAvatarCardHighlightView : UIView
 @property  CALayer *highlightLayer
 @property  UIColor *highlightColor
 @property  BOOL highlighted

  // instance methods
  -[CNAvatarCardHighlightView setHighlighted:animated:]
  -[CNAvatarCardHighlightView .cxx_destruct]
  -[CNAvatarCardHighlightView highlightColor]
  -[CNAvatarCardHighlightView setHighlightColor:]
  -[CNAvatarCardHighlightView layoutSubviews]
  -[CNAvatarCardHighlightView _commonInit]
  -[CNAvatarCardHighlightView initWithFrame:]
  -[CNAvatarCardHighlightView highlighted]
  -[CNAvatarCardHighlightView awakeFromNib]
  -[CNAvatarCardHighlightView highlightLayer]
  -[CNAvatarCardHighlightView setHighlightLayer:]


CNCustomActionSheetPresentation : NSObject
  // class methods
  +[CNCustomActionSheetPresentation prepareViewControllerForPresentation:sourceView:sourceRect:permittedArrowDirection:dismissHandler:]


_CNCustomActionSheetPresentation : NSObject <UIActionSheetPresentationControllerDelegate, UIViewControllerTransitioningDelegate, CNCustomPresentation>
 @property  UIView *sourceView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceRect
 @property  @? dismissHandler
 @property  UIViewController *viewController
 @property  unsigned long permittedArrowDirections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_CNCustomActionSheetPresentation sourceRect]
  -[_CNCustomActionSheetPresentation setSourceView:]
  -[_CNCustomActionSheetPresentation setSourceRect:]
  -[_CNCustomActionSheetPresentation permittedArrowDirections]
  -[_CNCustomActionSheetPresentation setViewController:]
  -[_CNCustomActionSheetPresentation setPermittedArrowDirections:]
  -[_CNCustomActionSheetPresentation .cxx_destruct]
  -[_CNCustomActionSheetPresentation dismissHandler]
  -[_CNCustomActionSheetPresentation viewController]
  -[_CNCustomActionSheetPresentation sourceView]
  -[_CNCustomActionSheetPresentation presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]
  -[_CNCustomActionSheetPresentation setDismissHandler:]
  -[_CNCustomActionSheetPresentation actionSheetPresentationControllerDidDismissActionSheet:]
  -[_CNCustomActionSheetPresentation presentedViewController]
  -[_CNCustomActionSheetPresentation prepareForPresentationOfController:]


CNOutlineGroupsAndAccountsStyle : CNAccountsAndGroupsStyle
  // instance methods
  -[CNOutlineGroupsAndAccountsStyle backgroundColor]
  -[CNOutlineGroupsAndAccountsStyle buttonBehavior]
  -[CNOutlineGroupsAndAccountsStyle isInset]
  -[CNOutlineGroupsAndAccountsStyle sectionConfigurationForLayoutEnvironment:withLeadingActionsProvider:withTrailingActionsProvider:hasHeader:]
  -[CNOutlineGroupsAndAccountsStyle parentCellConfigurationWithText:]
  -[CNOutlineGroupsAndAccountsStyle cellConfigurationUpdateHandler]


CNInsetGroupsAndAccountsStyle : CNAccountsAndGroupsStyle
  // instance methods
  -[CNInsetGroupsAndAccountsStyle backgroundColor]
  -[CNInsetGroupsAndAccountsStyle buttonBehavior]
  -[CNInsetGroupsAndAccountsStyle isInset]
  -[CNInsetGroupsAndAccountsStyle sectionConfigurationForLayoutEnvironment:withLeadingActionsProvider:withTrailingActionsProvider:hasHeader:]
  -[CNInsetGroupsAndAccountsStyle parentCellConfigurationWithText:]
  -[CNInsetGroupsAndAccountsStyle cellConfigurationUpdateHandler]
  -[CNInsetGroupsAndAccountsStyle cellAccessoriesForItem:]
  -[CNInsetGroupsAndAccountsStyle shouldShowCellSelection]


CNAccountsAndGroupsStyle : NSObject
  // class methods
  +[CNAccountsAndGroupsStyle styleForTraitCollection:]

  // instance methods
  -[CNAccountsAndGroupsStyle backgroundColor]
  -[CNAccountsAndGroupsStyle buttonBehavior]
  -[CNAccountsAndGroupsStyle isInset]
  -[CNAccountsAndGroupsStyle sectionConfigurationForLayoutEnvironment:withLeadingActionsProvider:withTrailingActionsProvider:hasHeader:]
  -[CNAccountsAndGroupsStyle parentCellConfigurationWithText:]
  -[CNAccountsAndGroupsStyle cellConfigurationUpdateHandler]
  -[CNAccountsAndGroupsStyle cellAccessoriesForItem:]
  -[CNAccountsAndGroupsStyle shouldShowCellSelection]
  -[CNAccountsAndGroupsStyle parentCellAccessories]
  -[CNAccountsAndGroupsStyle cellAccessoriesForContextMenuPreviewForItem:]


_CNAvatarView : UIView
 @property  NSArray *likenessViews
 @property  NSArray *subviewsConstraints
 @property  <_CNAvatarViewDelegate> *delegate
 @property  NSArray *likenessProviders

  // class methods
  +[_CNAvatarView requiresConstraintBasedLayout]

  // instance methods
  -[_CNAvatarView setDelegate:]
  -[_CNAvatarView updateConstraints]
  -[_CNAvatarView delegate]
  -[_CNAvatarView .cxx_destruct]
  -[_CNAvatarView setupSubviews]
  -[_CNAvatarView setLikenessProviders:]
  -[_CNAvatarView likenessProviders]
  -[_CNAvatarView likenessViews]
  -[_CNAvatarView setLikenessViews:]
  -[_CNAvatarView subviewsConstraints]
  -[_CNAvatarView setSubviewsConstraints:]


CNMeCardSharingOnboardingAudienceViewController : CNMeCardSharingOnboardingViewController <UITableViewDelegate, UITableViewDataSource>
 @property  CNMeCardSharingAudienceDataSource *sharingAudienceDataSource
 @property  CNMeCardSharingOnboardingHeaderViewController *headerViewController
 @property  <CNMeCardSharingOnboardingAudienceViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNMeCardSharingOnboardingAudienceViewController headerText]

  // instance methods
  -[CNMeCardSharingOnboardingAudienceViewController tableView:cellForRowAtIndexPath:]
  -[CNMeCardSharingOnboardingAudienceViewController tableView:numberOfRowsInSection:]
  -[CNMeCardSharingOnboardingAudienceViewController tableView:willSelectRowAtIndexPath:]
  -[CNMeCardSharingOnboardingAudienceViewController setDelegate:]
  -[CNMeCardSharingOnboardingAudienceViewController contentSizeCategoryDidChange:]
  -[CNMeCardSharingOnboardingAudienceViewController tableView:didSelectRowAtIndexPath:]
  -[CNMeCardSharingOnboardingAudienceViewController delegate]
  -[CNMeCardSharingOnboardingAudienceViewController tableView:titleForHeaderInSection:]
  -[CNMeCardSharingOnboardingAudienceViewController dealloc]
  -[CNMeCardSharingOnboardingAudienceViewController .cxx_destruct]
  -[CNMeCardSharingOnboardingAudienceViewController viewDidLoad]
  -[CNMeCardSharingOnboardingAudienceViewController headerViewController]
  -[CNMeCardSharingOnboardingAudienceViewController tableView:titleForFooterInSection:]
  -[CNMeCardSharingOnboardingAudienceViewController setHeaderViewController:]
  -[CNMeCardSharingOnboardingAudienceViewController sharingAudienceDataSource]
  -[CNMeCardSharingOnboardingAudienceViewController initWithSelectedSharingAudience:]
  -[CNMeCardSharingOnboardingAudienceViewController handleConfirmButtonTapped]
  -[CNMeCardSharingOnboardingAudienceViewController setSharingAudienceDataSource:]


CNContactListBannerView : UIView <UIDragInteractionDelegate>
 @property  CNContactFormatter *formatter
 @property  CNContact *meContact
 @property  UIGestureRecognizer *longPress
 @property  UIView *avatarView
 @property  UIView *avatarViewContainer
 @property  UILabel *titleLabel
 @property  UIView *footnoteContainer
 @property  UILabel *footnoteLabel
 @property  UILabel *footnoteValueLabel
 @property  CALayer *topSeparator
 @property  NSLayoutConstraint *footnoteTitleToTitleVerticalConstraint
 @property  NSLayoutConstraint *footnoteTitleToValueHorizontalSpaceConstraint
 @property  NSArray *constraintsPendingActivation
 @property  UIDragInteraction *dragInteraction
 @property  <CNContactListBannerViewDelegate> *delegate
 @property  CNContactListStyleApplier *contactListStyleApplier
 @property  UIView *bottomSeparator
 @property  CNContactStore *contactStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactListBannerView descriptorForRequiredKeys]

  // instance methods
  -[CNContactListBannerView meContact]
  -[CNContactListBannerView avatarView]
  -[CNContactListBannerView contactListStyleApplier]
  -[CNContactListBannerView setContactStore:]
  -[CNContactListBannerView setDragInteraction:]
  -[CNContactListBannerView menuDidHide:]
  -[CNContactListBannerView setContactListStyleApplier:]
  -[CNContactListBannerView setDelegate:]
  -[CNContactListBannerView constraintsPendingActivation]
  -[CNContactListBannerView footnoteLabel]
  -[CNContactListBannerView setMeContact:]
  -[CNContactListBannerView displaysContactInfo]
  -[CNContactListBannerView delegate]
  -[CNContactListBannerView updateFontRelatedConstraints]
  -[CNContactListBannerView dragInteraction:itemsForBeginningSession:]
  -[CNContactListBannerView setFootnoteTitleToTitleVerticalConstraint:]
  -[CNContactListBannerView dealloc]
  -[CNContactListBannerView .cxx_destruct]
  -[CNContactListBannerView footnoteTitleToValueHorizontalSpaceConstraint]
  -[CNContactListBannerView canPerformAction:withSender:]
  -[CNContactListBannerView bottomSeparator]
  -[CNContactListBannerView footnoteTitleToTitleVerticalConstraint]
  -[CNContactListBannerView footnoteValueLabel]
  -[CNContactListBannerView topSeparator]
  -[CNContactListBannerView formatter]
  -[CNContactListBannerView configureDragInteraction]
  -[CNContactListBannerView setFootnoteTitleToValueHorizontalSpaceConstraint:]
  -[CNContactListBannerView showMenu]
  -[CNContactListBannerView cellWasLongPressed:]
  -[CNContactListBannerView sizeThatFits:]
  -[CNContactListBannerView setConstraintsPendingActivation:]
  -[CNContactListBannerView avatarViewContainer]
  -[CNContactListBannerView setMeContact:footnoteTitle:footnoteValue:]
  -[CNContactListBannerView copy:]
  -[CNContactListBannerView cellWasSingleTapped:]
  -[CNContactListBannerView canBecomeFirstResponder]
  -[CNContactListBannerView footnoteContainer]
  -[CNContactListBannerView contactStore]
  -[CNContactListBannerView setTopSeparatorWithInset:andLength:]
  -[CNContactListBannerView setAvatarView:]
  -[CNContactListBannerView longPress]
  -[CNContactListBannerView traitCollectionDidChange:]
  -[CNContactListBannerView applyStyle]
  -[CNContactListBannerView titleLabel]
  -[CNContactListBannerView init]
  -[CNContactListBannerView activatePendingConstraints]
  -[CNContactListBannerView dragInteraction]


CNStarkFaceTimeCell : CNContactCell <CNStarkActionViewDelegate>
 @property  UILabel *faceTimeLabel
 @property  CNStarkActionView *actionView
 @property  <CNPropertyCellDelegate> *delegate
 @property  NSDictionary *labelTextAttributes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNStarkFaceTimeCell requiresConstraintBasedLayout]

  // instance methods
  -[CNStarkFaceTimeCell initWithStyle:reuseIdentifier:]
  -[CNStarkFaceTimeCell didUpdateFocusInContext:withAnimationCoordinator:]
  -[CNStarkFaceTimeCell setDelegate:]
  -[CNStarkFaceTimeCell delegate]
  -[CNStarkFaceTimeCell .cxx_destruct]
  -[CNStarkFaceTimeCell setSeparatorStyle:]
  -[CNStarkFaceTimeCell actionView]
  -[CNStarkFaceTimeCell setLabelTextAttributes:]
  -[CNStarkFaceTimeCell variableConstraints]
  -[CNStarkFaceTimeCell constantConstraints]
  -[CNStarkFaceTimeCell performDefaultAction]
  -[CNStarkFaceTimeCell _cnui_applyContactStyle]
  -[CNStarkFaceTimeCell labelTextAttributes]
  -[CNStarkFaceTimeCell faceTimeLabel]
  -[CNStarkFaceTimeCell actionViewTapped:]
  -[CNStarkFaceTimeCell supportsTintColorValue]
  -[CNStarkFaceTimeCell shouldShowStar]
  -[CNStarkFaceTimeCell updateTransportButtons]
  -[CNStarkFaceTimeCell setFaceTimeLabel:]


CNVisualIdentityItemEditorViewController : UIViewController <UITextFieldDelegate, UICollectionViewDelegate, UICollectionViewDataSource, CNPhotoPickerProviderItemDelegate, CNVisualIdentityEditablePrimaryAvatarViewControllerDelegate>
 @property  CNVisualIdentityEditablePrimaryAvatarViewController *editableAvatarViewController
 @property  CNVisualIdentityItemEditorSegmentedControl *segmentedControl
 @property  NSLayoutConstraint *avatarViewSizeConstraint
 @property  NSLayoutConstraint *avatarViewTopConstraint
 @property  NSLayoutConstraint *segmentedControlHeightConstraint
 @property  UICollectionView *styleCollectionView
 @property  UIView *styleDividerView
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  NSArray *variantProviderItems
 @property  CNPhotoPickerProviderItem *providerItem
 @property  <CNVisualIdentityItemEditorViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNVisualIdentityItemEditorViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNVisualIdentityItemEditorViewController collectionView:cellForItemAtIndexPath:]
  -[CNVisualIdentityItemEditorViewController collectionView:layout:insetForSectionAtIndex:]
  -[CNVisualIdentityItemEditorViewController setDelegate:]
  -[CNVisualIdentityItemEditorViewController delegate]
  -[CNVisualIdentityItemEditorViewController numberOfSectionsInCollectionView:]
  -[CNVisualIdentityItemEditorViewController .cxx_destruct]
  -[CNVisualIdentityItemEditorViewController viewDidLoad]
  -[CNVisualIdentityItemEditorViewController viewDidLayoutSubviews]
  -[CNVisualIdentityItemEditorViewController keyboardWillShow:]
  -[CNVisualIdentityItemEditorViewController collectionView:didSelectItemAtIndexPath:]
  -[CNVisualIdentityItemEditorViewController collectionView:numberOfItemsInSection:]
  -[CNVisualIdentityItemEditorViewController segmentedControl]
  -[CNVisualIdentityItemEditorViewController setSegmentedControl:]
  -[CNVisualIdentityItemEditorViewController providerItemDidUpdate:]
  -[CNVisualIdentityItemEditorViewController providerItem]
  -[CNVisualIdentityItemEditorViewController setProviderItem:]
  -[CNVisualIdentityItemEditorViewController variantsManager]
  -[CNVisualIdentityItemEditorViewController setVariantsManager:]
  -[CNVisualIdentityItemEditorViewController didTapCancel]
  -[CNVisualIdentityItemEditorViewController didTapDone]
  -[CNVisualIdentityItemEditorViewController didTapEditableAvatar:]
  -[CNVisualIdentityItemEditorViewController didTapSegmentedControl:]
  -[CNVisualIdentityItemEditorViewController editableAvatarViewController:didUpdateWithProviderItem:]
  -[CNVisualIdentityItemEditorViewController editableAvatarViewControllerShouldBecomeFirstResponder:]
  -[CNVisualIdentityItemEditorViewController initWithProviderItem:variantsManager:]
  -[CNVisualIdentityItemEditorViewController adjustAvatarViewConstraintsForKeyboardFrame:]
  -[CNVisualIdentityItemEditorViewController editorViewBottomYForAvatarSize:withContainerTopMargin:]
  -[CNVisualIdentityItemEditorViewController editorViewOverlapsWindowBasedKeyboardRect:]
  -[CNVisualIdentityItemEditorViewController setupBarButtonItems]
  -[CNVisualIdentityItemEditorViewController updateDoneButtonEnabledStateForText:]
  -[CNVisualIdentityItemEditorViewController setupEditableAvatarViewController]
  -[CNVisualIdentityItemEditorViewController forceEmojiKeyboardIfNeeded]
  -[CNVisualIdentityItemEditorViewController beginEditingAvatar]
  -[CNVisualIdentityItemEditorViewController shouldBeginEditing]
  -[CNVisualIdentityItemEditorViewController switchEditorToMode:]
  -[CNVisualIdentityItemEditorViewController setupSegmentedControl]
  -[CNVisualIdentityItemEditorViewController setupStyleCollectionView]
  -[CNVisualIdentityItemEditorViewController setupViewWithProviderItem:]
  -[CNVisualIdentityItemEditorViewController hideStyleCollectionView]
  -[CNVisualIdentityItemEditorViewController shouldShowStyleCollectionView]
  -[CNVisualIdentityItemEditorViewController updateFlowLayoutItemSize]
  -[CNVisualIdentityItemEditorViewController numberOfItemsPerRow]
  -[CNVisualIdentityItemEditorViewController updatedProviderItem]
  -[CNVisualIdentityItemEditorViewController isEmojiProviderItemType]
  -[CNVisualIdentityItemEditorViewController generateProviderItems]
  -[CNVisualIdentityItemEditorViewController editableAvatarViewEdgeLength]
  -[CNVisualIdentityItemEditorViewController textFieldFontSize]
  -[CNVisualIdentityItemEditorViewController fontSizeForContainerSize:]
  -[CNVisualIdentityItemEditorViewController segmentedControlTopMargin]
  -[CNVisualIdentityItemEditorViewController styleContainerTopMargin]
  -[CNVisualIdentityItemEditorViewController editableAvatarViewController]
  -[CNVisualIdentityItemEditorViewController setEditableAvatarViewController:]
  -[CNVisualIdentityItemEditorViewController avatarViewSizeConstraint]
  -[CNVisualIdentityItemEditorViewController setAvatarViewSizeConstraint:]
  -[CNVisualIdentityItemEditorViewController avatarViewTopConstraint]
  -[CNVisualIdentityItemEditorViewController setAvatarViewTopConstraint:]
  -[CNVisualIdentityItemEditorViewController segmentedControlHeightConstraint]
  -[CNVisualIdentityItemEditorViewController setSegmentedControlHeightConstraint:]
  -[CNVisualIdentityItemEditorViewController styleCollectionView]
  -[CNVisualIdentityItemEditorViewController setStyleCollectionView:]
  -[CNVisualIdentityItemEditorViewController styleDividerView]
  -[CNVisualIdentityItemEditorViewController setStyleDividerView:]
  -[CNVisualIdentityItemEditorViewController variantProviderItems]
  -[CNVisualIdentityItemEditorViewController setVariantProviderItems:]


CNUIExternalComponentsFactory : NSObject
  // instance methods
  -[CNUIExternalComponentsFactory alertActionWithTitle:style:handler:]


CNSharingProfileOnboardingFlowResult : NSObject
 @property  NSString *givenName
 @property  NSString *familyName
 @property  NSData *imageData
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  NSString *type
 @property  unsigned long sharingAudience
 @property  BOOL didPersistImageToContact

  // instance methods
  -[CNSharingProfileOnboardingFlowResult familyName]
  -[CNSharingProfileOnboardingFlowResult cropRect]
  -[CNSharingProfileOnboardingFlowResult setGivenName:]
  -[CNSharingProfileOnboardingFlowResult type]
  -[CNSharingProfileOnboardingFlowResult givenName]
  -[CNSharingProfileOnboardingFlowResult setFamilyName:]
  -[CNSharingProfileOnboardingFlowResult .cxx_destruct]
  -[CNSharingProfileOnboardingFlowResult setType:]
  -[CNSharingProfileOnboardingFlowResult imageData]
  -[CNSharingProfileOnboardingFlowResult setImageData:]
  -[CNSharingProfileOnboardingFlowResult setCropRect:]
  -[CNSharingProfileOnboardingFlowResult sharingAudience]
  -[CNSharingProfileOnboardingFlowResult setSharingAudience:]
  -[CNSharingProfileOnboardingFlowResult didPersistImageToContact]
  -[CNSharingProfileOnboardingFlowResult setDidPersistImageToContact:]


CNMultipleUnknownContactsViewController : UITableViewController <CNContactViewControllerDelegate>
 @property  NSArray *contacts
 @property  NSMutableSet *createdContactIdentifiers
 @property  CNContactFormatter *formatter
 @property  CNUIGroupsAndContainersSaveManager *groupsAndContainersSaveManager
 @property  CNContactStore *contactStore
 @property  <CNMultipleUnknownContactsViewControllerDelegate> *delegate
 @property  CNGroup *targetGroup
 @property  CNContainer *targetContainer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNMultipleUnknownContactsViewController descriptorForRequiredKeys]
  +[CNMultipleUnknownContactsViewController log]
  +[CNMultipleUnknownContactsViewController contactFormatter]

  // instance methods
  -[CNMultipleUnknownContactsViewController groupsAndContainersSaveManager]
  -[CNMultipleUnknownContactsViewController setGroupsAndContainersSaveManager:]
  -[CNMultipleUnknownContactsViewController setContactStore:]
  -[CNMultipleUnknownContactsViewController tableView:cellForRowAtIndexPath:]
  -[CNMultipleUnknownContactsViewController tableView:numberOfRowsInSection:]
  -[CNMultipleUnknownContactsViewController numberOfSectionsInTableView:]
  -[CNMultipleUnknownContactsViewController setDelegate:]
  -[CNMultipleUnknownContactsViewController tableView:didSelectRowAtIndexPath:]
  -[CNMultipleUnknownContactsViewController delegate]
  -[CNMultipleUnknownContactsViewController initWithNibName:bundle:]
  -[CNMultipleUnknownContactsViewController setContacts:]
  -[CNMultipleUnknownContactsViewController .cxx_destruct]
  -[CNMultipleUnknownContactsViewController contacts]
  -[CNMultipleUnknownContactsViewController viewDidLoad]
  -[CNMultipleUnknownContactsViewController formatter]
  -[CNMultipleUnknownContactsViewController _didComplete]
  -[CNMultipleUnknownContactsViewController contactViewController:didCompleteWithContact:]
  -[CNMultipleUnknownContactsViewController contactStore]
  -[CNMultipleUnknownContactsViewController contactViewController:shouldPerformDefaultActionForContactProperty:]
  -[CNMultipleUnknownContactsViewController setFormatter:]
  -[CNMultipleUnknownContactsViewController initWithContacts:]
  -[CNMultipleUnknownContactsViewController _save:]
  -[CNMultipleUnknownContactsViewController initWithContacts:targetGroup:targetContainer:]
  -[CNMultipleUnknownContactsViewController targetContainer]
  -[CNMultipleUnknownContactsViewController _showAddAllToContactsConfirmation]
  -[CNMultipleUnknownContactsViewController _createNewContacts:]
  -[CNMultipleUnknownContactsViewController addContacts:]
  -[CNMultipleUnknownContactsViewController _addToExistingContacts:]
  -[CNMultipleUnknownContactsViewController _presentUnknownContact:]
  -[CNMultipleUnknownContactsViewController _existingMatchForUnknownContact:]
  -[CNMultipleUnknownContactsViewController _updatedContact:withPropertiesFromContact:]
  -[CNMultipleUnknownContactsViewController targetGroup]
  -[CNMultipleUnknownContactsViewController setTargetGroup:]
  -[CNMultipleUnknownContactsViewController setTargetContainer:]
  -[CNMultipleUnknownContactsViewController createdContactIdentifiers]
  -[CNMultipleUnknownContactsViewController setCreatedContactIdentifiers:]


CNUIFamilyMemberWhitelistedContactsController : NSObject <CNContactViewControllerPrivateDelegate, CNContactPickerDelegate, CNFamilyMemberAddContactsToWhitelistOptionSheetDelegate, CNUIFamilyMemberDowntimeContactPickerControllerDelegate, CNUICoreFamilyMemberContactsObserver>
 @property  CNContactStore *familyMemberScopedContactStore
 @property  CNContactFormatter *contactCardWarningFormatter
 @property  <CNUIFamilyMemberContactsPresentation> *familyMemberContactsPresentation
 @property  <CNUICoreFamilyMemberWhitelistedContactsDataSource> *dataSource
 @property  <CNUICoreContactManagementConsentCheck> *contactManagentConsentCheck
 @property  <CNDowntimeWhitelistContainerFetching> *downtimeContaienerFetcher
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  CNContactViewController *contactViewControllerPresentingItemDetails
 @property  FAFamilyMember *familyMember
 @property  NSArray *familyMemberContactItems
 @property  long long status
 @property  long long fetchStatus
 @property  <CNUIFamilyMemberWhitelistedContactsControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNUIFamilyMemberWhitelistedContactsController contactPickerWithDelegate:familyMember:parentContainer:]

  // instance methods
  -[CNUIFamilyMemberWhitelistedContactsController dataSource]
  -[CNUIFamilyMemberWhitelistedContactsController setDelegate:]
  -[CNUIFamilyMemberWhitelistedContactsController delegate]
  -[CNUIFamilyMemberWhitelistedContactsController status]
  -[CNUIFamilyMemberWhitelistedContactsController .cxx_destruct]
  -[CNUIFamilyMemberWhitelistedContactsController schedulerProvider]
  -[CNUIFamilyMemberWhitelistedContactsController contactPicker:didSelectContacts:]
  -[CNUIFamilyMemberWhitelistedContactsController contactViewController:didCompleteWithContact:]
  -[CNUIFamilyMemberWhitelistedContactsController contactViewController:didDeleteContact:]
  -[CNUIFamilyMemberWhitelistedContactsController init]
  -[CNUIFamilyMemberWhitelistedContactsController warningMessageForContact:]
  -[CNUIFamilyMemberWhitelistedContactsController contactCardWarningFormatter]
  -[CNUIFamilyMemberWhitelistedContactsController contactPickerDidCancel:]
  -[CNUIFamilyMemberWhitelistedContactsController familyMember]
  -[CNUIFamilyMemberWhitelistedContactsController initWithFamilyMember:familyMemberContactsPresentation:]
  -[CNUIFamilyMemberWhitelistedContactsController cancelPresentationOfDetailsOfFamilyMemberContactItem:]
  -[CNUIFamilyMemberWhitelistedContactsController contactViewControllerDidExecuteDeleteFromDowntimeWhitelistAction:]
  -[CNUIFamilyMemberWhitelistedContactsController addContactsToWhitelistOptionsSheetDidSelectAddFromMainContacts:]
  -[CNUIFamilyMemberWhitelistedContactsController addContactsToWhitelistOptionsSheetDidSelectAddFromFamilyMemberContacts:]
  -[CNUIFamilyMemberWhitelistedContactsController addContactsToWhitelistOptionsSheetDidSelectAddNewContact:]
  -[CNUIFamilyMemberWhitelistedContactsController addContactsToWhitelistOptionsSheetDidCancel:]
  -[CNUIFamilyMemberWhitelistedContactsController downtimePickerController:didFinishWithContacts:]
  -[CNUIFamilyMemberWhitelistedContactsController familyMemberContactItemsDidChange]
  -[CNUIFamilyMemberWhitelistedContactsController familyMemberContactsPresentation]
  -[CNUIFamilyMemberWhitelistedContactsController fetchStatus]
  -[CNUIFamilyMemberWhitelistedContactsController familyMemberContactItems]
  -[CNUIFamilyMemberWhitelistedContactsController contactManagementEnabled]
  -[CNUIFamilyMemberWhitelistedContactsController presentDetailsOfFamilyMemberContactItem:]
  -[CNUIFamilyMemberWhitelistedContactsController deleteFamilyMemberContactItem:]
  -[CNUIFamilyMemberWhitelistedContactsController performInteraction:]
  -[CNUIFamilyMemberWhitelistedContactsController performDefaultInteraction]
  -[CNUIFamilyMemberWhitelistedContactsController generateContactSourceOptionSheet]
  -[CNUIFamilyMemberWhitelistedContactsController anchorViewForDefaultInteraction]
  -[CNUIFamilyMemberWhitelistedContactsController performAddFromMainContacts]
  -[CNUIFamilyMemberWhitelistedContactsController performAddFromMainContactsForFamilyMember]
  -[CNUIFamilyMemberWhitelistedContactsController performAddFromMainContactsForThisDevice]
  -[CNUIFamilyMemberWhitelistedContactsController performAddFromFamilyMemberContacts]
  -[CNUIFamilyMemberWhitelistedContactsController performAddNewContact]
  -[CNUIFamilyMemberWhitelistedContactsController addContactsToWhitelist:]
  -[CNUIFamilyMemberWhitelistedContactsController familyMemberScopedContactStore]
  -[CNUIFamilyMemberWhitelistedContactsController contactManagentConsentCheck]
  -[CNUIFamilyMemberWhitelistedContactsController downtimeContaienerFetcher]
  -[CNUIFamilyMemberWhitelistedContactsController contactViewControllerPresentingItemDetails]
  -[CNUIFamilyMemberWhitelistedContactsController setContactViewControllerPresentingItemDetails:]


CNMeCardSharingContactAvatarProvider : NSObject <CNMeCardSharingAvatarProvider, CNMeCardSharingAvatarImageDataProvider>
 @property  CNAvatarImageRenderer *renderer
 @property  CNContact *contact
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *imageData
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  NSData *thumbnailImageData

  // instance methods
  -[CNMeCardSharingContactAvatarProvider cropRect]
  -[CNMeCardSharingContactAvatarProvider contact]
  -[CNMeCardSharingContactAvatarProvider .cxx_destruct]
  -[CNMeCardSharingContactAvatarProvider initWithContact:]
  -[CNMeCardSharingContactAvatarProvider renderer]
  -[CNMeCardSharingContactAvatarProvider imageData]
  -[CNMeCardSharingContactAvatarProvider thumbnailImageData]
  -[CNMeCardSharingContactAvatarProvider generateAvatarImageOfSize:imageHandler:]
  -[CNMeCardSharingContactAvatarProvider initWithContact:renderer:]


CNMeCardSharingOnboardingAvatarCarouselLayout : UICollectionViewFlowLayout
  // class methods
  +[CNMeCardSharingOnboardingAvatarCarouselLayout indexPathForNearestItemToCenterWithOffset:collectionView:layout:]

  // instance methods
  -[CNMeCardSharingOnboardingAvatarCarouselLayout pagingLength]
  -[CNMeCardSharingOnboardingAvatarCarouselLayout pagingOrigin]
  -[CNMeCardSharingOnboardingAvatarCarouselLayout selectedPageIndex]
  -[CNMeCardSharingOnboardingAvatarCarouselLayout pageOffsetForIndex:]
  -[CNMeCardSharingOnboardingAvatarCarouselLayout frameForElementAtIndex:visibleBounds:]
  -[CNMeCardSharingOnboardingAvatarCarouselLayout indexesForElementsInRect:visibleBounds:numberOfItems:]


CNMeCardSharingOnboardingAvatarCarouselViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate>
 @property  NSArray *items
 @property  UICollectionView *collectionView
 @property  CNMeCardSharingOnboardingAvatarCarouselLayout *layout
 @property  <AVTAvatarRecord> *avatarRecord
 @property  CNContact *contact
 @property  CNMeCardSharingOnboardingAvatarCarouselItem *photoPickerItem
 @property  CNMeCardSharingOnboardingAvatarCarouselItem *animojiItem
 @property  CNMeCardSharingOnboardingAvatarCarouselItem *photoItem
 @property  CNMeCardSharingOnboardingAvatarCarouselItem *monogramItem
 @property  CNSharingProfileLogger *logger
 @property  <CNMeCardSharingOnboardingAvatarCarouselViewControllerDelegate> *delegate
 @property  CNMeCardSharingOnboardingAvatarCarouselItem *selectedItem
 @property  PRMonogramColor *monogramColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNMeCardSharingOnboardingAvatarCarouselViewController setCollectionView:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController logger]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController collectionView:cellForItemAtIndexPath:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController setMonogramColor:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController contact]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController layout]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController setItems:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController scrollViewDidScroll:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController setDelegate:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController delegate]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController setLayout:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController viewWillLayoutSubviews]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController .cxx_destruct]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController collectionView]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController viewDidLoad]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController viewWillAppear:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController items]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController monogramColor]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController collectionView:didSelectItemAtIndexPath:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController setContact:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController collectionView:numberOfItemsInSection:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController selectedItem]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController avatarRecord]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController setAvatarRecord:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController buildItems]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController initWithContact:avatarRecord:logger:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController itemsForNoAnimojiAndNoPhoto]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController standardItems]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController reloadForUpdatedContactPhoto]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController reloadForUpdatedMonogram]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController contactImageItemWithContact:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController monogramImageItemWithContact:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController animojiItemWithRecord:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController notifyDelegateOfUpdateToCenterMostItem]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController scrollToItemAtIndex:animated:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController photoPickerItem]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController setPhotoPickerItem:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController animojiItem]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController setAnimojiItem:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController photoItem]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController setPhotoItem:]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController monogramItem]
  -[CNMeCardSharingOnboardingAvatarCarouselViewController setMonogramItem:]


CNAvatarCardControllerOrbTransition : NSObject <_UIClickPresentationTransition>
 @property  {CGAffineTransform=dddddd} endHeaderTransform
 @property  {CGAffineTransform=dddddd} endActionListTransform
 @property  double highlightViewToAlpha
 @property  BOOL isDismissing
 @property  CNContactOrbHeaderView *headerView
 @property  CNAvatarCardViewController *cardViewController
 @property  UIVisualEffectView *visualEffectView
 @property  UIView *sourceView
 @property  UIView *highlightedView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceRect
 @property  <CNAvatarCardControllerOrbTransitionDelegate> *delegate
 @property  UITargetedPreview *sourcePreview
 @property  UIViewPropertyAnimator *customAnimator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNAvatarCardControllerOrbTransition sourceRect]
  -[CNAvatarCardControllerOrbTransition setSourceView:]
  -[CNAvatarCardControllerOrbTransition setSourceRect:]
  -[CNAvatarCardControllerOrbTransition visualEffectView]
  -[CNAvatarCardControllerOrbTransition setDelegate:]
  -[CNAvatarCardControllerOrbTransition setHeaderView:]
  -[CNAvatarCardControllerOrbTransition cardViewController]
  -[CNAvatarCardControllerOrbTransition delegate]
  -[CNAvatarCardControllerOrbTransition headerView]
  -[CNAvatarCardControllerOrbTransition isDismissing]
  -[CNAvatarCardControllerOrbTransition .cxx_destruct]
  -[CNAvatarCardControllerOrbTransition sourceView]
  -[CNAvatarCardControllerOrbTransition setCardViewController:]
  -[CNAvatarCardControllerOrbTransition prepareTransitionFromView:toView:containerView:]
  -[CNAvatarCardControllerOrbTransition performTransitionFromView:toView:containerView:]
  -[CNAvatarCardControllerOrbTransition transitionDidEnd:]
  -[CNAvatarCardControllerOrbTransition highlightedView]
  -[CNAvatarCardControllerOrbTransition setHighlightedView:]
  -[CNAvatarCardControllerOrbTransition initWithCardViewController:headerView:sourceView:highlightedView:sourceRect:backgroundVisualEffectView:isDismissing:]
  -[CNAvatarCardControllerOrbTransition setupTransitionFromView:toView:withContainerView:]
  -[CNAvatarCardControllerOrbTransition _sourceRectInContainerView:]
  -[CNAvatarCardControllerOrbTransition setIsDismissing:]
  -[CNAvatarCardControllerOrbTransition endHeaderTransform]
  -[CNAvatarCardControllerOrbTransition setEndHeaderTransform:]
  -[CNAvatarCardControllerOrbTransition endActionListTransform]
  -[CNAvatarCardControllerOrbTransition setEndActionListTransform:]
  -[CNAvatarCardControllerOrbTransition highlightViewToAlpha]
  -[CNAvatarCardControllerOrbTransition setHighlightViewToAlpha:]


CNAvatarImageRendererSettings : NSObject
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  <CNUIPRLikenessResolver> *likenessResolver
 @property  <CNUILikenessRendering> *likenessRenderer
 @property  unsigned long style

  // class methods
  +[CNAvatarImageRendererSettings defaultSettings]
  +[CNAvatarImageRendererSettings defaultSettingsWithCacheSize:]
  +[CNAvatarImageRendererSettings offMainThreadSynchronousRenderingOnlySettingsWithCacheSize:]
  +[CNAvatarImageRendererSettings settingsWithContactStore:]
  +[CNAvatarImageRendererSettings settingsWithContactStore:cacheSize:]
  +[CNAvatarImageRendererSettings settingsWithContactStore:schedulerProvider:]
  +[CNAvatarImageRendererSettings settingsWithContactStore:cacheSize:schedulerProvider:]
  +[CNAvatarImageRendererSettings settingsWithContactStore:cacheSize:schedulerProvider:concurrentCaches:]

  // instance methods
  -[CNAvatarImageRendererSettings style]
  -[CNAvatarImageRendererSettings .cxx_destruct]
  -[CNAvatarImageRendererSettings schedulerProvider]
  -[CNAvatarImageRendererSettings likenessResolver]
  -[CNAvatarImageRendererSettings setStyle:]
  -[CNAvatarImageRendererSettings likenessRenderer]
  -[CNAvatarImageRendererSettings initWithLikenessResolver:likenessRenderer:schedulerProvider:]


CNUINavigationListView : UITableView <UIGestureRecognizerDelegate>
 @property  UILongPressGestureRecognizer *selectionGestureRecognizer
 @property  UIGestureRecognizer *additionalSelectionGestureRecognizer
 @property  UIGestureRecognizer *pressGestureRecognizer
 @property  NSIndexPath *trackedElementIndexPath
 @property  {CGPoint=dd} gestureStartLocation
 @property  {CGPoint=dd} gestureStartLocationInWindow
 @property  UISelectionFeedbackGenerator *retargetBehavior
 @property  _CNUINavigationListViewPermissiveGestureRecognizerDelegate *selectionGestureRecognizerDelegate
 @property  <CNUINavigationListViewDataSource> *navigationListViewDataSource
 @property  <CNUINavigationListViewDelegate> *navigationListViewDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNUINavigationListView disableHeaderAccessibilityElements]

  // instance methods
  -[CNUINavigationListView gestureStartLocation]
  -[CNUINavigationListView .cxx_destruct]
  -[CNUINavigationListView setGestureStartLocation:]
  -[CNUINavigationListView willMoveToWindow:]
  -[CNUINavigationListView initWithFrame:style:]
  -[CNUINavigationListView pressGestureRecognizer]
  -[CNUINavigationListView selectionGestureRecognizer]
  -[CNUINavigationListView setSelectionGestureRecognizer:]
  -[CNUINavigationListView handleSelectionGestureRecognizerUpdate:]
  -[CNUINavigationListView handlePanGestureRecognizerUpdate:]
  -[CNUINavigationListView dequeueNavigationListViewCell]
  -[CNUINavigationListView dequeueDetailNavigationListViewCell]
  -[CNUINavigationListView disclosureNavigationListViewCellForRowAtIndexPath:]
  -[CNUINavigationListView elementAtLocation:]
  -[CNUINavigationListView handlePressSelection]
  -[CNUINavigationListView stopTrackingElementAtIndexPath:]
  -[CNUINavigationListView startTrackingElementAtIndexPath:]
  -[CNUINavigationListView location:isInAccessoryControlTouchArea:]
  -[CNUINavigationListView updateCellAccessoryControlState:withTrackedLocation:]
  -[CNUINavigationListView notifyDelegateWithSelectionEventAtPoint:trackedElementIndexPath:]
  -[CNUINavigationListView notifyDelegateWithSelectionEventAtIndexPath:]
  -[CNUINavigationListView startTrackingSelectionFromGestureRecognizer:]
  -[CNUINavigationListView clearAdditionalSelectionGestureRecognizer]
  -[CNUINavigationListView navigationListViewDataSource]
  -[CNUINavigationListView setNavigationListViewDataSource:]
  -[CNUINavigationListView navigationListViewDelegate]
  -[CNUINavigationListView setNavigationListViewDelegate:]
  -[CNUINavigationListView additionalSelectionGestureRecognizer]
  -[CNUINavigationListView setAdditionalSelectionGestureRecognizer:]
  -[CNUINavigationListView setPressGestureRecognizer:]
  -[CNUINavigationListView trackedElementIndexPath]
  -[CNUINavigationListView setTrackedElementIndexPath:]
  -[CNUINavigationListView gestureStartLocationInWindow]
  -[CNUINavigationListView setGestureStartLocationInWindow:]
  -[CNUINavigationListView retargetBehavior]
  -[CNUINavigationListView setRetargetBehavior:]
  -[CNUINavigationListView selectionGestureRecognizerDelegate]
  -[CNUINavigationListView setSelectionGestureRecognizerDelegate:]


_CNUINavigationListViewPermissiveGestureRecognizerDelegate : NSObject <UIGestureRecognizerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_CNUINavigationListViewPermissiveGestureRecognizerDelegate gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]


_CNContactQuickActionsModalDisambiguationMenuPresentation : CNContactQuickActionsDisambiguationMenuPresentation
  // instance methods
  -[_CNContactQuickActionsModalDisambiguationMenuPresentation viewControllerForPresentingActionsController:fromView:dismissDisambiguationMenuHandler:]


_CNContactQuickActionsAlertSheetDisambiguationMenuPresentation : CNContactQuickActionsDisambiguationMenuPresentation
  // instance methods
  -[_CNContactQuickActionsAlertSheetDisambiguationMenuPresentation viewControllerForPresentingActionsController:fromView:dismissDisambiguationMenuHandler:]


CNContactQuickActionsDisambiguationMenuPresentation : NSObject
  // class methods
  +[CNContactQuickActionsDisambiguationMenuPresentation defaultPresentation]
  +[CNContactQuickActionsDisambiguationMenuPresentation modalPresentation]
  +[CNContactQuickActionsDisambiguationMenuPresentation alertSheetPresentation]

  // instance methods
  -[CNContactQuickActionsDisambiguationMenuPresentation viewControllerForPresentingActionsController:fromView:dismissDisambiguationMenuHandler:]
  -[CNContactQuickActionsDisambiguationMenuPresentation initBase]


CNContactViewHostViewController : _UIRemoteViewController <CNContactContentViewController, CNContactViewHostProtocol>
 @property  <NSCopying> *currentRequestIdentifier
 @property  NSExtension *extension
 @property  <CNContactViewHostProtocol> *delegate
 @property  <CNContactViewControllerPPTDelegate> *pptDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactViewHostViewController contextForIdentifier:]
  +[CNContactViewHostViewController contactViewExtension]
  +[CNContactViewHostViewController getViewController:]

  // instance methods
  -[CNContactViewHostViewController viewDidAppear]
  -[CNContactViewHostViewController extension]
  -[CNContactViewHostViewController setDelegate:]
  -[CNContactViewHostViewController delegate]
  -[CNContactViewHostViewController setExtension:]
  -[CNContactViewHostViewController .cxx_destruct]
  -[CNContactViewHostViewController viewWillAppear:]
  -[CNContactViewHostViewController viewServiceDidTerminateWithError:]
  -[CNContactViewHostViewController invalidate]
  -[CNContactViewHostViewController viewWillDisappear:]
  -[CNContactViewHostViewController shouldPerformDefaultActionForContact:propertyKey:propertyIdentifier:]
  -[CNContactViewHostViewController updateEditing:doneButtonEnabled:doneButtonText:]
  -[CNContactViewHostViewController didCompleteWithContact:]
  -[CNContactViewHostViewController didDeleteContact:]
  -[CNContactViewHostViewController isPresentingFullscreen:]
  -[CNContactViewHostViewController isPresentingEditingController:]
  -[CNContactViewHostViewController didChangePreferredContentSize:]
  -[CNContactViewHostViewController didExecuteClearRecentsDataAction]
  -[CNContactViewHostViewController didExecuteDeleteFromDowntimeWhitelistAction]
  -[CNContactViewHostViewController presentCancelConfirmationAlert]
  -[CNContactViewHostViewController viewServiceDidTerminate]
  -[CNContactViewHostViewController setupWithOptions:readyBlock:]
  -[CNContactViewHostViewController didChangeToEditMode:]
  -[CNContactViewHostViewController didChangeToShowTitle:]
  -[CNContactViewHostViewController editCancel]
  -[CNContactViewHostViewController toggleEditing]
  -[CNContactViewHostViewController performConfirmedCancel]
  -[CNContactViewHostViewController pptDelegate]
  -[CNContactViewHostViewController setPptDelegate:]
  -[CNContactViewHostViewController protocolContext]
  -[CNContactViewHostViewController currentRequestIdentifier]
  -[CNContactViewHostViewController setCurrentRequestIdentifier:]


CNContactViewExtensionHostContext : NSExtensionContext <CNContactViewHostAsyncProtocol, CNContactViewServiceProtocol, CNContactViewHostProtocol>
 @property  CNContactViewHostViewController *viewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactViewExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[CNContactViewExtensionHostContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[CNContactViewExtensionHostContext viewDidAppear]
  -[CNContactViewExtensionHostContext setViewController:]
  -[CNContactViewExtensionHostContext .cxx_destruct]
  -[CNContactViewExtensionHostContext viewController]
  -[CNContactViewExtensionHostContext shouldPerformDefaultActionForContact:propertyKey:propertyIdentifier:]
  -[CNContactViewExtensionHostContext updateEditing:doneButtonEnabled:doneButtonText:]
  -[CNContactViewExtensionHostContext didCompleteWithContact:]
  -[CNContactViewExtensionHostContext didDeleteContact:]
  -[CNContactViewExtensionHostContext isPresentingFullscreen:]
  -[CNContactViewExtensionHostContext isPresentingEditingController:]
  -[CNContactViewExtensionHostContext didChangePreferredContentSize:]
  -[CNContactViewExtensionHostContext didExecuteClearRecentsDataAction]
  -[CNContactViewExtensionHostContext didExecuteDeleteFromDowntimeWhitelistAction]
  -[CNContactViewExtensionHostContext presentCancelConfirmationAlert]
  -[CNContactViewExtensionHostContext setupWithOptions:readyBlock:]
  -[CNContactViewExtensionHostContext didChangeToEditMode:]
  -[CNContactViewExtensionHostContext didChangeToShowTitle:]
  -[CNContactViewExtensionHostContext editCancel]
  -[CNContactViewExtensionHostContext toggleEditing]
  -[CNContactViewExtensionHostContext performConfirmedCancel]
  -[CNContactViewExtensionHostContext asyncShouldPerformDefaultActionForContact:propertyKey:propertyIdentifier:]
  -[CNContactViewExtensionHostContext protocolService]


CNUIDraftSupport : NSObject
  // class methods
  +[CNUIDraftSupport loadDraft:]
  +[CNUIDraftSupport loadNewContactDraft]
  +[CNUIDraftSupport saveNewContactDraft:]
  +[CNUIDraftSupport deleteDrafts]


CNSharingProfileOnboardingVariantViewController : OBWelcomeController <CNPhotoPickerVariantListControllerDelegate>
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  CNPhotoPickerProviderItem *item
 @property  NSString *variantName
 @property  CNPhotoPickerVariantListController *variantListController
 @property  OBLinkTrayButton *setupLaterButton
 @property  OBBoldTrayButton *backButton
 @property  OBBoldTrayButton *continueButton
 @property  OBLinkTrayButton *poseButton
 @property  NSLayoutConstraint *heightLayoutConstraint
 @property  <CNSharingProfileOnboardingVariantViewControllerDelegate> *onboardingDelegate
 @property  BOOL shouldShowPoseButton
 @property  CNPhotoPickerProviderItem *selectedItem

  // instance methods
  -[CNSharingProfileOnboardingVariantViewController backButton]
  -[CNSharingProfileOnboardingVariantViewController setItem:]
  -[CNSharingProfileOnboardingVariantViewController .cxx_destruct]
  -[CNSharingProfileOnboardingVariantViewController viewDidLoad]
  -[CNSharingProfileOnboardingVariantViewController viewDidLayoutSubviews]
  -[CNSharingProfileOnboardingVariantViewController setBackButton:]
  -[CNSharingProfileOnboardingVariantViewController item]
  -[CNSharingProfileOnboardingVariantViewController continueButton]
  -[CNSharingProfileOnboardingVariantViewController setContinueButton:]
  -[CNSharingProfileOnboardingVariantViewController setSelectedItem:]
  -[CNSharingProfileOnboardingVariantViewController selectedItem]
  -[CNSharingProfileOnboardingVariantViewController didTapSetupLater:]
  -[CNSharingProfileOnboardingVariantViewController didTapBack:]
  -[CNSharingProfileOnboardingVariantViewController didTapContinue:]
  -[CNSharingProfileOnboardingVariantViewController photoPickerVariantListController:didSelectProviderItem:]
  -[CNSharingProfileOnboardingVariantViewController photoPickerVariantListControllerDidCancel:]
  -[CNSharingProfileOnboardingVariantViewController variantsManager]
  -[CNSharingProfileOnboardingVariantViewController setVariantsManager:]
  -[CNSharingProfileOnboardingVariantViewController variantListController]
  -[CNSharingProfileOnboardingVariantViewController setVariantListController:]
  -[CNSharingProfileOnboardingVariantViewController setupLaterButton]
  -[CNSharingProfileOnboardingVariantViewController setSetupLaterButton:]
  -[CNSharingProfileOnboardingVariantViewController didTapPose:]
  -[CNSharingProfileOnboardingVariantViewController initWithVariantsManager:originalItem:selectedVariantIdentifier:]
  -[CNSharingProfileOnboardingVariantViewController updateOriginalItem:]
  -[CNSharingProfileOnboardingVariantViewController onboardingDelegate]
  -[CNSharingProfileOnboardingVariantViewController setOnboardingDelegate:]
  -[CNSharingProfileOnboardingVariantViewController shouldShowPoseButton]
  -[CNSharingProfileOnboardingVariantViewController setShouldShowPoseButton:]
  -[CNSharingProfileOnboardingVariantViewController variantName]
  -[CNSharingProfileOnboardingVariantViewController setVariantName:]
  -[CNSharingProfileOnboardingVariantViewController poseButton]
  -[CNSharingProfileOnboardingVariantViewController setPoseButton:]
  -[CNSharingProfileOnboardingVariantViewController heightLayoutConstraint]
  -[CNSharingProfileOnboardingVariantViewController setHeightLayoutConstraint:]


CNInstantMessagePickerController : CNPickerController
  // class methods
  +[CNInstantMessagePickerController defaultServices]

  // instance methods
  -[CNInstantMessagePickerController initWithStyle:]
  -[CNInstantMessagePickerController titleForPickerItem:]
  -[CNInstantMessagePickerController titleForAddCustomItem]


CNStarkContactsListViewController : CNContactListViewController <CNContactListViewControllerDelegate>
 @property  NSArray *displayedContactProperties
 @property  CNContactListCollectionView *contactListTableView
 @property  CNStarkNoContentBannerView *overlayView
 @property  UIView *siriHeaderView
 @property  BOOL limitedUI
 @property  AVExternalDevice *externalDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNStarkContactsListViewController makeContactsDisplayedProperties]
  +[CNStarkContactsListViewController collectionViewLayoutWithFloatingHeaderViews:contactListStyleApplier:directionalLayoutMargins:hasNoContacts:]

  // instance methods
  -[CNStarkContactsListViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNStarkContactsListViewController contactListStyleApplier]
  -[CNStarkContactsListViewController collectionView:cellForItemAtIndexPath:]
  -[CNStarkContactsListViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[CNStarkContactsListViewController refreshTableViewHeaderWithSize:]
  -[CNStarkContactsListViewController contactDataSourceDidChange:]
  -[CNStarkContactsListViewController setupDataSource]
  -[CNStarkContactsListViewController setLimitedUI:]
  -[CNStarkContactsListViewController contactListViewController:didSelectContact:shouldScrollToContact:]
  -[CNStarkContactsListViewController contactListViewController:didSelectContact:]
  -[CNStarkContactsListViewController dealloc]
  -[CNStarkContactsListViewController siriHeaderView]
  -[CNStarkContactsListViewController createCollectionView]
  -[CNStarkContactsListViewController .cxx_destruct]
  -[CNStarkContactsListViewController viewDidLoad]
  -[CNStarkContactsListViewController updateLimitedUI]
  -[CNStarkContactsListViewController handleSiriHeaderViewTap:]
  -[CNStarkContactsListViewController limitedUINotification:]
  -[CNStarkContactsListViewController viewWillAppear:]
  -[CNStarkContactsListViewController setDisplayedContactProperties:]
  -[CNStarkContactsListViewController headerViewWidthForSize:]
  -[CNStarkContactsListViewController overlayView]
  -[CNStarkContactsListViewController canManageDuplicateContacts]
  -[CNStarkContactsListViewController setContactListTableView:]
  -[CNStarkContactsListViewController showContactListTableView]
  -[CNStarkContactsListViewController collectionView:contextMenuConfigurationForItemsAtIndexPaths:point:]
  -[CNStarkContactsListViewController initWithCollectionViewLayout:]
  -[CNStarkContactsListViewController externalDevice]
  -[CNStarkContactsListViewController limitedUI]
  -[CNStarkContactsListViewController setSiriHeaderView:]
  -[CNStarkContactsListViewController shouldShowDuplicateBannerView]
  -[CNStarkContactsListViewController setExternalDevice:]
  -[CNStarkContactsListViewController setOverlayView:]
  -[CNStarkContactsListViewController postMessageOverlayIfNecessary]
  -[CNStarkContactsListViewController initWithDataSource:searchable:environment:shouldUseLargeTitle:]
  -[CNStarkContactsListViewController init]
  -[CNStarkContactsListViewController contactListTableView]
  -[CNStarkContactsListViewController displayedContactProperties]
  -[CNStarkContactsListViewController showOverlayView]
  -[CNStarkContactsListViewController viewDirectionalLayoutMargins]


CNContactCardFieldPicker : UIViewController <UITableViewDelegate>
 @property  UITableView *tableView
 @property  UIBarButtonItem *toggleSelectAllFieldsButton
 @property  NSArray *contacts
 @property  NSArray *filteredContacts
 @property  <CNContactCardFieldPickerDelegate> *delegate
 @property  CNContactCardFieldPickerDataSource *fieldPickerDataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactCardFieldPicker imageProperties]

  // instance methods
  -[CNContactCardFieldPicker done:]
  -[CNContactCardFieldPicker tableView:heightForRowAtIndexPath:]
  -[CNContactCardFieldPicker setDelegate:]
  -[CNContactCardFieldPicker tableView:willDisplayCell:forRowAtIndexPath:]
  -[CNContactCardFieldPicker tableView:didSelectRowAtIndexPath:]
  -[CNContactCardFieldPicker delegate]
  -[CNContactCardFieldPicker setContacts:]
  -[CNContactCardFieldPicker .cxx_destruct]
  -[CNContactCardFieldPicker contacts]
  -[CNContactCardFieldPicker tableView]
  -[CNContactCardFieldPicker viewDidLoad]
  -[CNContactCardFieldPicker initWithContact:]
  -[CNContactCardFieldPicker viewWillAppear:]
  -[CNContactCardFieldPicker setTableView:]
  -[CNContactCardFieldPicker viewWillDisappear:]
  -[CNContactCardFieldPicker tableView:didDeselectRowAtIndexPath:]
  -[CNContactCardFieldPicker initWithContacts:]
  -[CNContactCardFieldPicker toggleSelectionOfFields:]
  -[CNContactCardFieldPicker initWithContacts:filteredContacts:]
  -[CNContactCardFieldPicker setUpTableView]
  -[CNContactCardFieldPicker setUpToggleSelectAllFieldsButton]
  -[CNContactCardFieldPicker configureNavigationItems]
  -[CNContactCardFieldPicker saveFilteredContacts]
  -[CNContactCardFieldPicker selectAllFields]
  -[CNContactCardFieldPicker deselectAllFields]
  -[CNContactCardFieldPicker updateToggleSelectAllFieldsButtonTitle]
  -[CNContactCardFieldPicker titleForSelectAllFieldsButton]
  -[CNContactCardFieldPicker allFieldsSelected]
  -[CNContactCardFieldPicker setPhotoFromContact:onFilteredContact:]
  -[CNContactCardFieldPicker filteredContacts]
  -[CNContactCardFieldPicker setFilteredContacts:]
  -[CNContactCardFieldPicker fieldPickerDataSource]
  -[CNContactCardFieldPicker setFieldPickerDataSource:]
  -[CNContactCardFieldPicker toggleSelectAllFieldsButton]
  -[CNContactCardFieldPicker setToggleSelectAllFieldsButton:]


CNBadgingAvatarBadgeStyleSettings : NSObject
 @property  long long position
 @property  UIColor *color
 @property  UIColor *backgroundColor
 @property  long long cropStyle
 @property  long long contentMode

  // class methods
  +[CNBadgingAvatarBadgeStyleSettings cnuiBadgePosition:]
  +[CNBadgingAvatarBadgeStyleSettings cnuiBadgeCropStyle:]
  +[CNBadgingAvatarBadgeStyleSettings markedForSyndicationBadgeSettings]
  +[CNBadgingAvatarBadgeStyleSettings doNotDisturbBadgeSettings]

  // instance methods
  -[CNBadgingAvatarBadgeStyleSettings setCropStyle:]
  -[CNBadgingAvatarBadgeStyleSettings contentMode]
  -[CNBadgingAvatarBadgeStyleSettings .cxx_destruct]
  -[CNBadgingAvatarBadgeStyleSettings backgroundColor]
  -[CNBadgingAvatarBadgeStyleSettings cropStyle]
  -[CNBadgingAvatarBadgeStyleSettings setBackgroundColor:]
  -[CNBadgingAvatarBadgeStyleSettings color]
  -[CNBadgingAvatarBadgeStyleSettings setPosition:]
  -[CNBadgingAvatarBadgeStyleSettings setContentMode:]
  -[CNBadgingAvatarBadgeStyleSettings setColor:]
  -[CNBadgingAvatarBadgeStyleSettings isEqual:]
  -[CNBadgingAvatarBadgeStyleSettings init]
  -[CNBadgingAvatarBadgeStyleSettings position]
  -[CNBadgingAvatarBadgeStyleSettings initWithPosition:color:backgroundColor:cropStyle:]
  -[CNBadgingAvatarBadgeStyleSettings cnuiBadgePosition]
  -[CNBadgingAvatarBadgeStyleSettings cnuiCropStyle]


CNUIFMFFacade : NSObject
 @property  FMFSession *fmfSession

  // instance methods
  -[CNUIFMFFacade .cxx_destruct]
  -[CNUIFMFFacade initWithFMFSession:]
  -[CNUIFMFFacade init]
  -[CNUIFMFFacade fetchFriendHandlesWithCompletionHandler:]
  -[CNUIFMFFacade fmfSession]


CNAvatarImageRenderer : NSObject
 @property  <CNUIPRLikenessResolver> *resolver
 @property  <CNUILikenessRendering> *renderer
 @property  <CNSchedulerProvider> *schedulerProvider

  // class methods
  +[CNAvatarImageRenderer descriptorForRequiredKeys]

  // instance methods
  -[CNAvatarImageRenderer initWithSettings:]
  -[CNAvatarImageRenderer .cxx_destruct]
  -[CNAvatarImageRenderer renderer]
  -[CNAvatarImageRenderer schedulerProvider]
  -[CNAvatarImageRenderer resolver]
  -[CNAvatarImageRenderer init]
  -[CNAvatarImageRenderer renderAvatarsForContacts:handler:]
  -[CNAvatarImageRenderer renderMonogramForString:handler:]
  -[CNAvatarImageRenderer renderAvatarsForContacts:scope:imageHandler:]
  -[CNAvatarImageRenderer renderAvatarsForContacts:withBadges:scope:imageHandler:]
  -[CNAvatarImageRenderer renderAvatarsForContacts:scope:includePlaceholder:imageHandler:]
  -[CNAvatarImageRenderer renderAvatarsForContacts:withBadges:scope:includePlaceholder:imageHandler:]
  -[CNAvatarImageRenderer avatarImageForContacts:scope:]
  -[CNAvatarImageRenderer avatarImageForContacts:withBadges:scope:]
  -[CNAvatarImageRenderer renderAvatarsForContacts:withBadges:scope:placeholder:workScheduler:imageHandler:]
  -[CNAvatarImageRenderer renderMonogramForString:scope:imageHandler:]
  -[CNAvatarImageRenderer runScopeBasedImageObservable:scope:imageHandler:]
  -[CNAvatarImageRenderer renderedLikenessesForContacts:withBadges:scope:placeholder:workScheduler:]
  -[CNAvatarImageRenderer renderedMonogramObservableForString:scope:]
  -[CNAvatarImageRenderer imageForAvatarAccessoryView:scope:]
  -[CNAvatarImageRenderer placeholderImageProvider]
  -[CNAvatarImageRenderer loadingPlaceholderImageProvider]
  -[CNAvatarImageRenderer renderMonogramForString:color:scope:prohibitedSources:]
  -[CNAvatarImageRenderer renderMonogramForContact:color:scope:prohibitedSources:]


CNLabelPickerController : CNPickerController
 @property  NSMutableArray *labelsToDeleteOnCommit
 @property  CNPropertyGroupItem *item

  // instance methods
  -[CNLabelPickerController .cxx_destruct]
  -[CNLabelPickerController item]
  -[CNLabelPickerController titleForPickerItem:]
  -[CNLabelPickerController initForPropertyItem:]
  -[CNLabelPickerController removeCustomItem:]
  -[CNLabelPickerController pickedItem:]
  -[CNLabelPickerController labelsToDeleteOnCommit]
  -[CNLabelPickerController setLabelsToDeleteOnCommit:]


CNLinkedCardsCell : CNLabeledCell
 @property  UILabel *sourceLabel
 @property  UILabel *nameLabel
 @property  <CNPropertyCellDelegate> *delegate

  // class methods
  +[CNLinkedCardsCell wantsChevron]

  // instance methods
  -[CNLinkedCardsCell setDelegate:]
  -[CNLinkedCardsCell updateConstraints]
  -[CNLinkedCardsCell delegate]
  -[CNLinkedCardsCell labelView]
  -[CNLinkedCardsCell .cxx_destruct]
  -[CNLinkedCardsCell nameLabel]
  -[CNLinkedCardsCell valueView]
  -[CNLinkedCardsCell setCardGroupItem:]
  -[CNLinkedCardsCell shouldPerformDefaultAction]
  -[CNLinkedCardsCell performDefaultAction]
  -[CNLinkedCardsCell sourceLabel]


CNLinkedCardsEditingCell : CNLinkedCardsCell
  // class methods
  +[CNLinkedCardsEditingCell wantsHorizontalLayout]


CNSharingProfileAvatarItem : NSObject
 @property  @? imageProvider
 @property  @? originalImageProvider
 @property  long long type
 @property  NSString *variantIdentifier
 @property  BOOL wasSetFromFullPhotoPicker
 @property  NSData *memojiMetadata

  // instance methods
  -[CNSharingProfileAvatarItem setVariantIdentifier:]
  -[CNSharingProfileAvatarItem type]
  -[CNSharingProfileAvatarItem .cxx_destruct]
  -[CNSharingProfileAvatarItem imageProvider]
  -[CNSharingProfileAvatarItem variantIdentifier]
  -[CNSharingProfileAvatarItem memojiMetadata]
  -[CNSharingProfileAvatarItem setMemojiMetadata:]
  -[CNSharingProfileAvatarItem initWithImageProvider:type:]
  -[CNSharingProfileAvatarItem initWithImageProvider:originalImageProvider:type:]
  -[CNSharingProfileAvatarItem originalImageProvider]
  -[CNSharingProfileAvatarItem wasSetFromFullPhotoPicker]
  -[CNSharingProfileAvatarItem setWasSetFromFullPhotoPicker:]


CNCustomCardAction : NSObject
 @property  NSString *title
 @property  CNContactTargetActionWrapper *targetActionWrapper
 @property  NSString *contactIdentifier
 @property  long long placement
 @property  BOOL destructive
 @property  @? menuProvider

  // class methods
  +[CNCustomCardAction placementForGroup:inContactContentViewController:]
  +[CNCustomCardAction groupForActionGivenPlacement:inContactContentViewController:]

  // instance methods
  -[CNCustomCardAction contactIdentifier]
  -[CNCustomCardAction isDestructive]
  -[CNCustomCardAction .cxx_destruct]
  -[CNCustomCardAction placement]
  -[CNCustomCardAction title]
  -[CNCustomCardAction menuProvider]
  -[CNCustomCardAction initWithTitle:targetActionWrapper:contactIdentifier:placement:isDestructive:menuProvider:]
  -[CNCustomCardAction isValidForContact:]
  -[CNCustomCardAction matchesTarget:selector:group:inContactContentViewController:]
  -[CNCustomCardAction targetActionWrapper]


CNContactContentEditViewController : UIViewController <CNPropertyActionDelegate, CNPropertyCellDelegate, CNPropertyGroupItemDelegate, CNContactGroupPickerDelegate, UIPopoverControllerDelegate, CNContactHeaderViewDelegate, CNContactContentViewControllerDelegate, UIAdaptivePresentationControllerDelegate, CNShareLocationProtocol, CNUIObjectViewControllerDelegate, CNContactInlineActionsViewControllerDelegate_Internal, CNUIGeminiDataSourceDelegate, NSUserActivityDelegate, CNContactContainerPickerViewControllerDelegate, CNUIContactSaveDelegate, CNContactContentNavigationItemTarget, CNContactActionDelegate, CNPresenterDelegate, CNContactContentNavigationItemProviding, UITableViewDelegate, UITableViewDataSource, UIViewControllerRestoration>
 @property  CNContactContentViewControllerConfiguration *contactViewConfiguration
 @property  CNMutableContact *mutableContact
 @property  NSMutableArray *issuedSaveRequestIdentifiers
 @property  CNMutableContact *shadowCopyOfReadonlyContact
 @property  CNUIContainerContext *containerContext
 @property  CNPropertyGroupsDataSource *propertyGroupsDataSource
 @property  CNContactFormatter *contactFormatter
 @property  CNContactHeaderEditView *contactHeaderView
 @property  CNContactView *contactView
 @property  CNContactContainerPickerViewController *containerPicker
 @property  BOOL isPresentingFullscreenForOutOfProcess
 @property  NSMutableArray *editingGroups
 @property  NSArray *nameEditingGroups
 @property  NSMutableDictionary *groupsAfterGroup
 @property  NSMapTable *cachedLabelWidths
 @property  NSArray *extraRightBarButtonItems
 @property  NSArray *extraLeftBarButtonItems
 @property  CNCardGroup *cardMedicalIDGroup
 @property  CNCardLinkedCardsGroup *cardLinkedCardsGroup
 @property  NSArray *customActions
 @property  CNPropertyNoteCell *noteCell
 @property  CNPropertyLinkedCardsAction *linkedCardsAction
 @property  CNContactAddLinkedCardAction *addLinkedCardAction
 @property  CNContactAddNewFieldAction *addNewFieldAction
 @property  CNContactSuggestionAction *suggestedContactAction
 @property  CNContactSelectContainersAction *selectContainersAction
 @property  CNContactActionProvider *actionProvider
 @property  NSArray *activatedConstraints
 @property  NSLayoutConstraint *headerHeightConstraint
 @property  UIView *headerDropShadowView
 @property  CNMedicalIDAction *medicalIDAction
 @property  CNEmergencyContactAction *emergencyContactAction
 @property  <CNHealthStoreManagerToken> *medicalIDRegistrationToken
 @property  <CNCancelable> *medicalIDLookupToken
 @property  NSString *emergencyNumberIdentifier
 @property  CNCardGroup *cardEditingActionsGroup
 @property  CNCardGroup *cardEditingDeleteContactGroup
 @property  CNCardPropertyGeminiGroup *cardEditingGeminiGroup
 @property  CNCardContactContainerGroup *cardEditingContactContainerGroup
 @property  CNContactAction *deleteContactAction
 @property  CNContactAction *ignoreContactAction
 @property  CNSiriContactContextProvider *siriContextProvider
 @property  NSMutableArray *editingLinkedContacts
 @property  NSDictionary *userActivityUserInfo
 @property  HKHealthStore *healthStore
 @property  BOOL didSetFirstResponder
 @property  NSArray *highlightedProperties
 @property  BOOL highlightedPropertyImportant
 @property  UIKeyCommand *saveCommand
 @property  UIKeyCommand *cancelCommand
 @property  double keyboardVerticalOverlap
 @property  NSArray *preEditLeftBarButtonItems
 @property  CNUIContactsEnvironment *environment
 @property  CNContactViewCache *contactViewCache
 @property  CNUIUserActivityManager *activityManager
 @property  CNUIGeminiDataSource *geminiDataSource
 @property  BOOL runningPPT
 @property  {UIEdgeInsets=dddd} peripheryInsets
 @property  BOOL didSetNewContact
 @property  BOOL forcesTransparentBackground
 @property  CNContactContentNavigationItemUpdater *navItemUpdater
 @property  BOOL supportsDrafts
 @property  CNPolicy *policy
 @property  NSDictionary *linkedPoliciesByContactIdentifier
 @property  NSArray *cardActions
 @property  CNContactStore *contactStore
 @property  CNManagedConfiguration *managedConfiguration
 @property  CNAccessAuthorization *accessAuthorization
 @property  NSArray *missingRequiredKeys
 @property  NSArray *originalContacts
 @property  BOOL shouldDrawNavigationBar
 @property  NSString *initialPrompt
 @property  <CNUIContactSaveExecutor> *saveContactExecutor
 @property  <CNUIContactSaveExecutor> *saveLinkedContactsExecutor
 @property  BOOL shouldIgnoreContactStoreDidChangeNotification
 @property  NSArray *prohibitedPropertyKeys
 @property  CNContactRecentsReference *recentsData
 @property  NSDictionary *propertyGroups
 @property  BOOL showingMeContact
 @property  long long mode
 @property  CNContact *contact
 @property  CNGroup *parentGroup
 @property  CNContainer *parentContainer
 @property  <CNContactContentEditViewControllerDelegate> *delegate
 @property  <CNPresenterDelegate> *presentingDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isPresentingModalViewController
 @property  <CNContactContentNavigationItemDelegate> *navigationItemDelegate
 @property  UINavigationItem *effectiveNavigationItem
 @property  UIBarButtonItem *doneButtonItem

  // class methods
  +[CNContactContentEditViewController descriptorForRequiredKeys]
  +[CNContactContentEditViewController viewControllerWithRestorationIdentifierPath:coder:]
  +[CNContactContentEditViewController tableViewStyle]
  +[CNContactContentEditViewController descriptorForRequiredKeysForContact:]
  +[CNContactContentEditViewController descriptorForRequiredKeysWithDescription:]
  +[CNContactContentEditViewController boolStateRestorationProperties]
  +[CNContactContentEditViewController enablesTransportButtons]
  +[CNContactContentEditViewController _telemetryForContact:]
  +[CNContactContentEditViewController shouldShowGeminiForResult:contact:]

  // instance methods
  -[CNContactContentEditViewController managedConfiguration]
  -[CNContactContentEditViewController isOutOfProcess]
  -[CNContactContentEditViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNContactContentEditViewController tableView:heightForRowAtIndexPath:]
  -[CNContactContentEditViewController setManagedConfiguration:]
  -[CNContactContentEditViewController encodeRestorableStateWithCoder:]
  -[CNContactContentEditViewController setContactStore:]
  -[CNContactContentEditViewController presentingDelegate]
  -[CNContactContentEditViewController tableView:cellForRowAtIndexPath:]
  -[CNContactContentEditViewController tableView:shouldHaveFullLengthBottomSeparatorForSection:]
  -[CNContactContentEditViewController tableView:numberOfRowsInSection:]
  -[CNContactContentEditViewController tableView:shouldHighlightRowAtIndexPath:]
  -[CNContactContentEditViewController activityManager]
  -[CNContactContentEditViewController numberOfSectionsInTableView:]
  -[CNContactContentEditViewController tableView:estimatedHeightForRowAtIndexPath:]
  -[CNContactContentEditViewController initWithEnvironment:]
  -[CNContactContentEditViewController updateViewConstraints]
  -[CNContactContentEditViewController setPresentingDelegate:]
  -[CNContactContentEditViewController setRunningPPT:]
  -[CNContactContentEditViewController setNeedsReload]
  -[CNContactContentEditViewController presentationControllerWillDismiss:]
  -[CNContactContentEditViewController contact]
  -[CNContactContentEditViewController reloadDataIfNeeded]
  -[CNContactContentEditViewController setupConstraints]
  -[CNContactContentEditViewController healthStore]
  -[CNContactContentEditViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[CNContactContentEditViewController scrollViewDidScroll:]
  -[CNContactContentEditViewController setActionProvider:]
  -[CNContactContentEditViewController setDelegate:]
  -[CNContactContentEditViewController tableView:viewForHeaderInSection:]
  -[CNContactContentEditViewController setHealthStore:]
  -[CNContactContentEditViewController contentSizeCategoryDidChange:]
  -[CNContactContentEditViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[CNContactContentEditViewController medicalIDLookupToken]
  -[CNContactContentEditViewController tableView:didSelectRowAtIndexPath:]
  -[CNContactContentEditViewController contactViewCache]
  -[CNContactContentEditViewController delegate]
  -[CNContactContentEditViewController actionDidFinish:]
  -[CNContactContentEditViewController hasPendingChanges]
  -[CNContactContentEditViewController initWithNibName:bundle:]
  -[CNContactContentEditViewController setProhibitedPropertyKeys:]
  -[CNContactContentEditViewController peripheryInsets]
  -[CNContactContentEditViewController viewWillLayoutSubviews]
  -[CNContactContentEditViewController viewDidAppear:]
  -[CNContactContentEditViewController tableView:titleForHeaderInSection:]
  -[CNContactContentEditViewController dealloc]
  -[CNContactContentEditViewController prohibitedPropertyKeys]
  -[CNContactContentEditViewController mode]
  -[CNContactContentEditViewController .cxx_destruct]
  -[CNContactContentEditViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[CNContactContentEditViewController viewDidLoad]
  -[CNContactContentEditViewController needsReload]
  -[CNContactContentEditViewController viewWillAppear:]
  -[CNContactContentEditViewController loadView]
  -[CNContactContentEditViewController viewDidLayoutSubviews]
  -[CNContactContentEditViewController setMode:]
  -[CNContactContentEditViewController setMedicalIDLookupToken:]
  -[CNContactContentEditViewController tableView:heightForHeaderInSection:]
  -[CNContactContentEditViewController hostingViewControllerForController:]
  -[CNContactContentEditViewController localeDidChange:]
  -[CNContactContentEditViewController updateUserActivityState:]
  -[CNContactContentEditViewController viewWillDisappear:]
  -[CNContactContentEditViewController contactViewController:didDeleteContact:]
  -[CNContactContentEditViewController setContact:]
  -[CNContactContentEditViewController canBecomeFirstResponder]
  -[CNContactContentEditViewController setPolicy:]
  -[CNContactContentEditViewController actionProvider]
  -[CNContactContentEditViewController contactStore]
  -[CNContactContentEditViewController setIssuedSaveRequestIdentifiers:]
  -[CNContactContentEditViewController updateContact:]
  -[CNContactContentEditViewController adaptivePresentationStyleForPresentationController:]
  -[CNContactContentEditViewController contactFormatter]
  -[CNContactContentEditViewController contactStoreDidChangeWithNotification:]
  -[CNContactContentEditViewController _updateUserActivity]
  -[CNContactContentEditViewController setTitle:]
  -[CNContactContentEditViewController environment]
  -[CNContactContentEditViewController tableView:shouldDrawBottomSeparatorForSection:]
  -[CNContactContentEditViewController setContactFormatter:]
  -[CNContactContentEditViewController tableView:willDisplayHeaderView:forSection:]
  -[CNContactContentEditViewController policy]
  -[CNContactContentEditViewController issuedSaveRequestIdentifiers]
  -[CNContactContentEditViewController presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:]
  -[CNContactContentEditViewController tableView:titleForFooterInSection:]
  -[CNContactContentEditViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[CNContactContentEditViewController tableView:willDisplayFooterView:forSection:]
  -[CNContactContentEditViewController tableView:heightForFooterInSection:]
  -[CNContactContentEditViewController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[CNContactContentEditViewController tableView:editingStyleForRowAtIndexPath:]
  -[CNContactContentEditViewController tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:]
  -[CNContactContentEditViewController tableView:shouldIndentWhileEditingRowAtIndexPath:]
  -[CNContactContentEditViewController tableView:didEndEditingRowAtIndexPath:]
  -[CNContactContentEditViewController tableView:shouldShowMenuForRowAtIndexPath:]
  -[CNContactContentEditViewController tableView:canPerformAction:forRowAtIndexPath:withSender:]
  -[CNContactContentEditViewController tableView:performAction:forRowAtIndexPath:withSender:]
  -[CNContactContentEditViewController contentScrollViewForEdge:]
  -[CNContactContentEditViewController isModalInPresentation]
  -[CNContactContentEditViewController parentGroup]
  -[CNContactContentEditViewController tableView:shouldDrawTopSeparatorForSection:]
  -[CNContactContentEditViewController setForcesTransparentBackground:]
  -[CNContactContentEditViewController geminiDataSource]
  -[CNContactContentEditViewController didChangeToEditMode:]
  -[CNContactContentEditViewController didChangeToShowTitle:]
  -[CNContactContentEditViewController editCancel]
  -[CNContactContentEditViewController toggleEditing]
  -[CNContactContentEditViewController performConfirmedCancel]
  -[CNContactContentEditViewController toggleEditing:]
  -[CNContactContentEditViewController editCancel:]
  -[CNContactContentEditViewController action:prepareChildContactViewController:sender:]
  -[CNContactContentEditViewController action:presentViewController:sender:]
  -[CNContactContentEditViewController action:dismissViewController:sender:]
  -[CNContactContentEditViewController action:pushViewController:sender:]
  -[CNContactContentEditViewController actionWasCanceled:]
  -[CNContactContentEditViewController contactView]
  -[CNContactContentEditViewController contactHeaderView]
  -[CNContactContentEditViewController favoritesDidChangeWithNotification:]
  -[CNContactContentEditViewController _refetchContact]
  -[CNContactContentEditViewController originalContacts]
  -[CNContactContentEditViewController reloadDataPreservingChanges:]
  -[CNContactContentEditViewController reloadCardGroup:forTableView:]
  -[CNContactContentEditViewController navigationItemController]
  -[CNContactContentEditViewController updateWindowTitleForAppearing:]
  -[CNContactContentEditViewController shouldPresentConfirmCancelAlert]
  -[CNContactContentEditViewController presentConfirmCancelAlertController]
  -[CNContactContentEditViewController finishEditing:]
  -[CNContactContentEditViewController clearMapsDataIfEdited]
  -[CNContactContentEditViewController saveChanges]
  -[CNContactContentEditViewController prepareContactDidAppearForPPT]
  -[CNContactContentEditViewController sender:presentViewController:]
  -[CNContactContentEditViewController centeredSourceRect:inContactView:]
  -[CNContactContentEditViewController setBackgroundColorIfNeededForPresentedViewController:]
  -[CNContactContentEditViewController sender:dismissViewController:]
  -[CNContactContentEditViewController sender:dismissViewController:completionHandler:]
  -[CNContactContentEditViewController isPresentingModalViewController]
  -[CNContactContentEditViewController isSuggestedContact]
  -[CNContactContentEditViewController setNeedsReloadLazy]
  -[CNContactContentEditViewController _updateContact:withMissingKeysFromRequiredKeys:]
  -[CNContactContentEditViewController _removeUnauthorizedKeysFromContact:]
  -[CNContactContentEditViewController _didCompleteWithContact:]
  -[CNContactContentEditViewController updateWithNewContact:]
  -[CNContactContentEditViewController createdNewContact:]
  -[CNContactContentEditViewController updatedExistingContact:]
  -[CNContactContentEditViewController reloadUnifiedContact]
  -[CNContactContentEditViewController setSaveKeyboardShortcutEnabled:]
  -[CNContactContentEditViewController setCancelKeyboardShortcutEnabled:]
  -[CNContactContentEditViewController contactViewConfiguration]
  -[CNContactContentEditViewController setContactViewConfiguration:]
  -[CNContactContentEditViewController setOriginalContacts:]
  -[CNContactContentEditViewController showingMeContact]
  -[CNContactContentEditViewController setShowingMeContact:]
  -[CNContactContentEditViewController accessAuthorization]
  -[CNContactContentEditViewController setAccessAuthorization:]
  -[CNContactContentEditViewController linkedPoliciesByContactIdentifier]
  -[CNContactContentEditViewController setLinkedPoliciesByContactIdentifier:]
  -[CNContactContentEditViewController missingRequiredKeys]
  -[CNContactContentEditViewController setMissingRequiredKeys:]
  -[CNContactContentEditViewController shouldDrawNavigationBar]
  -[CNContactContentEditViewController setShouldDrawNavigationBar:]
  -[CNContactContentEditViewController initialPrompt]
  -[CNContactContentEditViewController setInitialPrompt:]
  -[CNContactContentEditViewController saveContactExecutor]
  -[CNContactContentEditViewController setSaveContactExecutor:]
  -[CNContactContentEditViewController saveLinkedContactsExecutor]
  -[CNContactContentEditViewController setSaveLinkedContactsExecutor:]
  -[CNContactContentEditViewController shouldIgnoreContactStoreDidChangeNotification]
  -[CNContactContentEditViewController setShouldIgnoreContactStoreDidChangeNotification:]
  -[CNContactContentEditViewController recentsData]
  -[CNContactContentEditViewController setRecentsData:]
  -[CNContactContentEditViewController propertyGroups]
  -[CNContactContentEditViewController activatedConstraints]
  -[CNContactContentEditViewController setActivatedConstraints:]
  -[CNContactContentEditViewController headerHeightConstraint]
  -[CNContactContentEditViewController setHeaderHeightConstraint:]
  -[CNContactContentEditViewController didSetFirstResponder]
  -[CNContactContentEditViewController setDidSetFirstResponder:]
  -[CNContactContentEditViewController saveCommand]
  -[CNContactContentEditViewController setSaveCommand:]
  -[CNContactContentEditViewController cancelCommand]
  -[CNContactContentEditViewController setCancelCommand:]
  -[CNContactContentEditViewController runningPPT]
  -[CNContactContentEditViewController didSetNewContact]
  -[CNContactContentEditViewController setDidSetNewContact:]
  -[CNContactContentEditViewController supportsDrafts]
  -[CNContactContentEditViewController setSupportsDrafts:]
  -[CNContactContentEditViewController shouldShowActionsForAvatarView:]
  -[CNContactContentEditViewController parentContainer]
  -[CNContactContentEditViewController setParentContainer:]
  -[CNContactContentEditViewController cardActions]
  -[CNContactContentEditViewController shouldShowGemini]
  -[CNContactContentEditViewController mutableContact]
  -[CNContactContentEditViewController editingLinkedContacts]
  -[CNContactContentEditViewController setEditingLinkedContacts:]
  -[CNContactContentEditViewController performSave]
  -[CNContactContentEditViewController adjustInsetsForKeyboardOverlap:]
  -[CNContactContentEditViewController preEditLeftBarButtonItems]
  -[CNContactContentEditViewController setPreEditLeftBarButtonItems:]
  -[CNContactContentEditViewController extraLeftBarButtonItems]
  -[CNContactContentEditViewController setExtraLeftBarButtonItems:]
  -[CNContactContentEditViewController extraRightBarButtonItems]
  -[CNContactContentEditViewController setExtraRightBarButtonItems:]
  -[CNContactContentEditViewController viewController:presentationControllerWillDismiss:]
  -[CNContactContentEditViewController shadowCopyOfReadonlyContact]
  -[CNContactContentEditViewController containerContext]
  -[CNContactContentEditViewController setParentGroup:]
  -[CNContactContentEditViewController keyboardDidShowNotification:]
  -[CNContactContentEditViewController keyboardWillHideNotification:]
  -[CNContactContentEditViewController action:cellForPropertyItem:sender:]
  -[CNContactContentEditViewController propertyCell:didUpdateItem:withNewLabel:]
  -[CNContactContentEditViewController propertyCell:didUpdateItem:withNewValue:]
  -[CNContactContentEditViewController propertyCell:didDeleteLabel:forGroup:]
  -[CNContactContentEditViewController propertyCell:performActionForItem:withTransportType:]
  -[CNContactContentEditViewController propertyCellDidChangeLayout:]
  -[CNContactContentEditViewController propertyItem:willChangeValue:]
  -[CNContactContentEditViewController alreadyPickedGroups]
  -[CNContactContentEditViewController contactGroupPickerDidCancel:]
  -[CNContactContentEditViewController contactGroupPickerDidFinish:withGroup:]
  -[CNContactContentEditViewController headerPhotoDidUpdate]
  -[CNContactContentEditViewController headerViewDidUpdateLabelSizes]
  -[CNContactContentEditViewController viewControllerForHeaderView:]
  -[CNContactContentEditViewController isNicknameProhibited]
  -[CNContactContentEditViewController headerView:didAcceptDropOfImageData:]
  -[CNContactContentEditViewController presentViewController:sourceView:]
  -[CNContactContentEditViewController geminiDataSourceDidUpdate:]
  -[CNContactContentEditViewController navigationItemDelegate]
  -[CNContactContentEditViewController setNavigationItemDelegate:]
  -[CNContactContentEditViewController effectiveNavigationItem]
  -[CNContactContentEditViewController doneButtonItem]
  -[CNContactContentEditViewController initWithContact:contactViewConfiguration:]
  -[CNContactContentEditViewController contactViewConfigurationDidUpdate]
  -[CNContactContentEditViewController isHeaderViewPhotoProhibited]
  -[CNContactContentEditViewController prepareCell:]
  -[CNContactContentEditViewController shouldAllowContainerPicking]
  -[CNContactContentEditViewController setupContainerContextIfNeededForContact:]
  -[CNContactContentEditViewController saveNewContactDraft]
  -[CNContactContentEditViewController cardGroupForProperty:]
  -[CNContactContentEditViewController sectionOfGroup:inTableView:]
  -[CNContactContentEditViewController addCardGroup:afterGroup:]
  -[CNContactContentEditViewController indexPathOfDisplayedPropertyItem:]
  -[CNContactContentEditViewController indexPathOfEditingPropertyItem:]
  -[CNContactContentEditViewController indexPathOfPropertyItem:editing:]
  -[CNContactContentEditViewController _policyForContact:mode:]
  -[CNContactContentEditViewController updateEditNavigationItemsAnimated:]
  -[CNContactContentEditViewController updateDoneButton]
  -[CNContactContentEditViewController cancelAsyncLookups]
  -[CNContactContentEditViewController saveModelChangesToContact]
  -[CNContactContentEditViewController saveDescriptionForCurrentState]
  -[CNContactContentEditViewController finishEditing]
  -[CNContactContentEditViewController loadContactViewControllerViews]
  -[CNContactContentEditViewController setupViewHierarchyIncludingAvatarHeader:]
  -[CNContactContentEditViewController shouldDisplayAvatarHeaderView]
  -[CNContactContentEditViewController setupTableHeaderView]
  -[CNContactContentEditViewController updateEditPhotoButtonIfNeeded]
  -[CNContactContentEditViewController isStandardGroup:]
  -[CNContactContentEditViewController updateOutOfProcessFullscreenPresentationIfNeeded]
  -[CNContactContentEditViewController _modalPresentationStyleForViewController:]
  -[CNContactContentEditViewController _phoneticNameForValue:currentPhoneticName:property:]
  -[CNContactContentEditViewController _currentTopVisibleGroupInContactView:]
  -[CNContactContentEditViewController _scrollContactView:toVisibleGroup:]
  -[CNContactContentEditViewController _cellIdentifierForTableView:indexPath:]
  -[CNContactContentEditViewController _cellForIndexPath:forTableView:]
  -[CNContactContentEditViewController setMenuProviderForCell:forActionGroupItem:]
  -[CNContactContentEditViewController groupIndexFromTableViewSectionIndex:forTableView:]
  -[CNContactContentEditViewController tableViewSectionIndexFromGroupIndex:forTableView:]
  -[CNContactContentEditViewController _labelWidthKeyForGroup:]
  -[CNContactContentEditViewController _labelWidthKeyForItem:]
  -[CNContactContentEditViewController _updateCachedLabelWidthsForItem:]
  -[CNContactContentEditViewController _updateCachedLabelWidthsForGroup:]
  -[CNContactContentEditViewController _updateCachedLabelWidths]
  -[CNContactContentEditViewController _setNeedsUpdateCachedLabelWidths]
  -[CNContactContentEditViewController _updateCachedLabelWidthsIfNeeded]
  -[CNContactContentEditViewController _updateLabelWidthForCell:]
  -[CNContactContentEditViewController _updateLabelWidthForCellsInGroup:forTableView:reset:]
  -[CNContactContentEditViewController _updateLabelWidthsForAllVisibleCells]
  -[CNContactContentEditViewController addEditingItemAtIndexPath:forTableView:]
  -[CNContactContentEditViewController removeEditingItem:atIndexPath:forTableView:]
  -[CNContactContentEditViewController focusOnFirstEditingItemIfNeeded]
  -[CNContactContentEditViewController focusOnLastEditingItemInGroup:]
  -[CNContactContentEditViewController _setupEditingLinkedContactsForKeys:]
  -[CNContactContentEditViewController addLinkedContact:]
  -[CNContactContentEditViewController removeLinkedContact:]
  -[CNContactContentEditViewController cleanupRecentImageMetadata]
  -[CNContactContentEditViewController desiredHeightForWidth:]
  -[CNContactContentEditViewController requiredSizeForVisibleTableView]
  -[CNContactContentEditViewController updateContactsViewWithBlock:completion:]
  -[CNContactContentEditViewController setupActionsPreservingChanges:]
  -[CNContactContentEditViewController _setupSuggestionActions]
  -[CNContactContentEditViewController _setupEditingCardActions]
  -[CNContactContentEditViewController _propertyGroupsForKeys:]
  -[CNContactContentEditViewController _linkedCardsAction]
  -[CNContactContentEditViewController _addLinkedCardAction]
  -[CNContactContentEditViewController _selectContainersAction]
  -[CNContactContentEditViewController _addNewFieldAction]
  -[CNContactContentEditViewController groupClassForProperty:]
  -[CNContactContentEditViewController _loadPropertyGroups]
  -[CNContactContentEditViewController _reloadPropertyGroupsPreservingChanges:]
  -[CNContactContentEditViewController _addGroup:afterGroup:forTableView:animated:]
  -[CNContactContentEditViewController _addMedicalIDGroupAnimated:forTableView:]
  -[CNContactContentEditViewController _reloadMedicalIDGroup]
  -[CNContactContentEditViewController _reloadContainerContextPreservingChanges:]
  -[CNContactContentEditViewController shouldReallyShowLinkedContacts]
  -[CNContactContentEditViewController _reloadLinkedCardsGroup]
  -[CNContactContentEditViewController _addGroupsInArray:afterGroup:]
  -[CNContactContentEditViewController _reloadGeminiGroupPreservingChanges:]
  -[CNContactContentEditViewController createCardEditingGeminiGroupIfNeeded]
  -[CNContactContentEditViewController createCardEditingContactContainerGroupIfNeeded]
  -[CNContactContentEditViewController _loadEditingGroupsPreservingChanges:]
  -[CNContactContentEditViewController _loadNameEditingGroups]
  -[CNContactContentEditViewController _modelHasChanges]
  -[CNContactContentEditViewController _modelIsEmpty]
  -[CNContactContentEditViewController _validateGroup:]
  -[CNContactContentEditViewController _saveChangesForGroups:]
  -[CNContactContentEditViewController _currentGroupsForTableView:]
  -[CNContactContentEditViewController _cardGroupAtTableViewSectionIndex:forTableView:]
  -[CNContactContentEditViewController _itemAtIndexPath:forTableView:]
  -[CNContactContentEditViewController _indexPathIsActionItem:forTableView:]
  -[CNContactContentEditViewController _addedGroupWithName:]
  -[CNContactContentEditViewController globalHeaderHeightForContentOffset:contentInset:]
  -[CNContactContentEditViewController contentOffsetYForGlobalHeaderHeight:contentInset:]
  -[CNContactContentEditViewController updateHeaderHeightToMatchScrollViewState:scrollDirection:animated:]
  -[CNContactContentEditViewController updateHeaderConstraintForGlobalHeaderHeight:direction:animated:]
  -[CNContactContentEditViewController isScrollViewControllingHeaderResizeAnimation:]
  -[CNContactContentEditViewController scrollScrollViewAllTheWayUp:]
  -[CNContactContentEditViewController updateInsetsIfNeededForTableView:]
  -[CNContactContentEditViewController initializeTableViewsForHeaderHeight]
  -[CNContactContentEditViewController insetsForContactTableView:]
  -[CNContactContentEditViewController scrollIndicatorInsetsForContactTableView:withContentInsets:]
  -[CNContactContentEditViewController updateTableView:contentInsetsTo:withScrollIndicatorInsets:]
  -[CNContactContentEditViewController applyContactStyle]
  -[CNContactContentEditViewController highlightedPropertyImportant]
  -[CNContactContentEditViewController setHighlightedPropertyImportant:]
  -[CNContactContentEditViewController setMutableContact:]
  -[CNContactContentEditViewController setShadowCopyOfReadonlyContact:]
  -[CNContactContentEditViewController setContainerContext:]
  -[CNContactContentEditViewController propertyGroupsDataSource]
  -[CNContactContentEditViewController setPropertyGroupsDataSource:]
  -[CNContactContentEditViewController setContactHeaderView:]
  -[CNContactContentEditViewController setContactView:]
  -[CNContactContentEditViewController containerPicker]
  -[CNContactContentEditViewController setContainerPicker:]
  -[CNContactContentEditViewController isPresentingFullscreenForOutOfProcess]
  -[CNContactContentEditViewController setIsPresentingFullscreenForOutOfProcess:]
  -[CNContactContentEditViewController editingGroups]
  -[CNContactContentEditViewController setEditingGroups:]
  -[CNContactContentEditViewController nameEditingGroups]
  -[CNContactContentEditViewController setNameEditingGroups:]
  -[CNContactContentEditViewController groupsAfterGroup]
  -[CNContactContentEditViewController setGroupsAfterGroup:]
  -[CNContactContentEditViewController cachedLabelWidths]
  -[CNContactContentEditViewController setCachedLabelWidths:]
  -[CNContactContentEditViewController cardMedicalIDGroup]
  -[CNContactContentEditViewController setCardMedicalIDGroup:]
  -[CNContactContentEditViewController cardLinkedCardsGroup]
  -[CNContactContentEditViewController setCardLinkedCardsGroup:]
  -[CNContactContentEditViewController customActions]
  -[CNContactContentEditViewController setCustomActions:]
  -[CNContactContentEditViewController noteCell]
  -[CNContactContentEditViewController setNoteCell:]
  -[CNContactContentEditViewController linkedCardsAction]
  -[CNContactContentEditViewController setLinkedCardsAction:]
  -[CNContactContentEditViewController addLinkedCardAction]
  -[CNContactContentEditViewController setAddLinkedCardAction:]
  -[CNContactContentEditViewController addNewFieldAction]
  -[CNContactContentEditViewController setAddNewFieldAction:]
  -[CNContactContentEditViewController suggestedContactAction]
  -[CNContactContentEditViewController setSuggestedContactAction:]
  -[CNContactContentEditViewController selectContainersAction]
  -[CNContactContentEditViewController setSelectContainersAction:]
  -[CNContactContentEditViewController headerDropShadowView]
  -[CNContactContentEditViewController setHeaderDropShadowView:]
  -[CNContactContentEditViewController medicalIDAction]
  -[CNContactContentEditViewController setMedicalIDAction:]
  -[CNContactContentEditViewController emergencyContactAction]
  -[CNContactContentEditViewController setEmergencyContactAction:]
  -[CNContactContentEditViewController medicalIDRegistrationToken]
  -[CNContactContentEditViewController setMedicalIDRegistrationToken:]
  -[CNContactContentEditViewController emergencyNumberIdentifier]
  -[CNContactContentEditViewController setEmergencyNumberIdentifier:]
  -[CNContactContentEditViewController cardEditingActionsGroup]
  -[CNContactContentEditViewController setCardEditingActionsGroup:]
  -[CNContactContentEditViewController cardEditingDeleteContactGroup]
  -[CNContactContentEditViewController setCardEditingDeleteContactGroup:]
  -[CNContactContentEditViewController cardEditingGeminiGroup]
  -[CNContactContentEditViewController setCardEditingGeminiGroup:]
  -[CNContactContentEditViewController cardEditingContactContainerGroup]
  -[CNContactContentEditViewController setCardEditingContactContainerGroup:]
  -[CNContactContentEditViewController deleteContactAction]
  -[CNContactContentEditViewController setDeleteContactAction:]
  -[CNContactContentEditViewController ignoreContactAction]
  -[CNContactContentEditViewController setIgnoreContactAction:]
  -[CNContactContentEditViewController siriContextProvider]
  -[CNContactContentEditViewController setSiriContextProvider:]
  -[CNContactContentEditViewController userActivityUserInfo]
  -[CNContactContentEditViewController setUserActivityUserInfo:]
  -[CNContactContentEditViewController highlightedProperties]
  -[CNContactContentEditViewController setHighlightedProperties:]
  -[CNContactContentEditViewController keyboardVerticalOverlap]
  -[CNContactContentEditViewController setKeyboardVerticalOverlap:]
  -[CNContactContentEditViewController forcesTransparentBackground]
  -[CNContactContentEditViewController navItemUpdater]
  -[CNContactContentEditViewController setNavItemUpdater:]


CNLinkedCardsPlaceholderCell : CNPropertyPlaceholderCell
 @property  <CNPropertyCellDelegate> *delegate

  // instance methods
  -[CNLinkedCardsPlaceholderCell setDelegate:]
  -[CNLinkedCardsPlaceholderCell delegate]
  -[CNLinkedCardsPlaceholderCell .cxx_destruct]
  -[CNLinkedCardsPlaceholderCell performDefaultAction]


CNPrivacyAdditions : NSObject
  // class methods
  +[CNPrivacyAdditions updateAccessDeniedView:forAuthorizationStatus:]


CNPropertyIDSRequest : NSObject <IDSIDQueryControllerDelegate>
 @property  NSArray *propertyItems
 @property  NSString *listenerID
 @property  NSString *service
 @property  @? requestResultBlock
 @property  @? idQueryResultHandler
 @property  BOOL cancelled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPropertyIDSRequest sharedWorkQueue]

  // instance methods
  -[CNPropertyIDSRequest listenerID]
  -[CNPropertyIDSRequest cancelled]
  -[CNPropertyIDSRequest idStatusUpdatedForDestinations:service:]
  -[CNPropertyIDSRequest setService:]
  -[CNPropertyIDSRequest .cxx_destruct]
  -[CNPropertyIDSRequest service]
  -[CNPropertyIDSRequest cancel]
  -[CNPropertyIDSRequest propertyItems]
  -[CNPropertyIDSRequest initWithPropertyItems:service:postToMainQueue:resultBlock:]
  -[CNPropertyIDSRequest cleanupDelegate]
  -[CNPropertyIDSRequest _requestStatusOnMainQueue:]
  -[CNPropertyIDSRequest setPropertyItems:]
  -[CNPropertyIDSRequest setListenerID:]
  -[CNPropertyIDSRequest requestResultBlock]
  -[CNPropertyIDSRequest setRequestResultBlock:]
  -[CNPropertyIDSRequest idQueryResultHandler]
  -[CNPropertyIDSRequest setIdQueryResultHandler:]


CNAvatarCardViewController : UIViewController <CNAvatarCardActionsViewDelegate, CNContactActionsControllerDelegate, CNCardTransitioning, UIGestureRecognizerDelegate>
 @property  CNAvatarCardActionsView *legacyContactActionsView
 @property  CNContactActionsController *actionsController
 @property  NSLayoutConstraint *actionsViewControllerHeightConstraint
 @property  BOOL visible
 @property  UIView *effectView
 @property  NSArray *verticalConstraints
 @property  double borderMargin
 @property  UIView *headerContainerView
 @property  UIView *actionsListView
 @property  NSArray *actionCategories
 @property  CNAvatarCardController *cardController
 @property  <CNAvatarCardViewControllerDelegate> *delegate
 @property  BOOL hasHeader
 @property  BOOL headerOnTop
 @property  BOOL actionsReversed
 @property  BOOL dismissesBeforePerforming
 @property  BOOL bypassActionValidation
 @property  <CNAvatarCardActionListController> *actionListController
 @property  <CNAvatarCardActionListOrbSupport> *actionListViewController
 @property  UIView *sourceView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *transitioningView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} transitioningFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} transitioningContentFrame
 @property  UIImage *transitioningImage
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} transitioningImageFrame
 @property  BOOL transitioningImageVisible
 @property  UIView *transitioningContentView

  // instance methods
  -[CNAvatarCardViewController bypassActionValidation]
  -[CNAvatarCardViewController setSourceView:]
  -[CNAvatarCardViewController actionCategories]
  -[CNAvatarCardViewController updateViewConstraints]
  -[CNAvatarCardViewController cardController]
  -[CNAvatarCardViewController dismissAnimated:]
  -[CNAvatarCardViewController setDelegate:]
  -[CNAvatarCardViewController isVisible]
  -[CNAvatarCardViewController contentSizeCategoryDidChange:]
  -[CNAvatarCardViewController setCardController:]
  -[CNAvatarCardViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[CNAvatarCardViewController delegate]
  -[CNAvatarCardViewController setVerticalConstraints:]
  -[CNAvatarCardViewController viewDidAppear:]
  -[CNAvatarCardViewController transitioningImageVisible]
  -[CNAvatarCardViewController dealloc]
  -[CNAvatarCardViewController .cxx_destruct]
  -[CNAvatarCardViewController viewDidLoad]
  -[CNAvatarCardViewController setBypassActionValidation:]
  -[CNAvatarCardViewController viewWillAppear:]
  -[CNAvatarCardViewController setVisible:]
  -[CNAvatarCardViewController hasHeader]
  -[CNAvatarCardViewController transitioningImageFrame]
  -[CNAvatarCardViewController effectView]
  -[CNAvatarCardViewController verticalConstraints]
  -[CNAvatarCardViewController viewDidDisappear:]
  -[CNAvatarCardViewController setActionCategories:]
  -[CNAvatarCardViewController transitioningView]
  -[CNAvatarCardViewController viewWillDisappear:]
  -[CNAvatarCardViewController transitioningContentFrame]
  -[CNAvatarCardViewController sourceView]
  -[CNAvatarCardViewController transitioningImage]
  -[CNAvatarCardViewController viewForTouchContinuation]
  -[CNAvatarCardViewController traitCollectionDidChange:]
  -[CNAvatarCardViewController setTransitioningImageVisible:]
  -[CNAvatarCardViewController setEffectView:]
  -[CNAvatarCardViewController transitioningFrame]
  -[CNAvatarCardViewController actionsReversed]
  -[CNAvatarCardViewController setActionsReversed:]
  -[CNAvatarCardViewController headerContainerView]
  -[CNAvatarCardViewController setHeaderContainerView:]
  -[CNAvatarCardViewController initWithContacts:]
  -[CNAvatarCardViewController refreshActions]
  -[CNAvatarCardViewController actionsController]
  -[CNAvatarCardViewController actionsView]
  -[CNAvatarCardViewController contactActionsController:didSelectAction:]
  -[CNAvatarCardViewController contactActionsController:didUpdateWithMenu:]
  -[CNAvatarCardViewController setActionsController:]
  -[CNAvatarCardViewController viewControllerForCardActionsView:]
  -[CNAvatarCardViewController cardActionsView:orderedPropertiesForProperties:category:]
  -[CNAvatarCardViewController cardActionsView:didShowActions:]
  -[CNAvatarCardViewController dismissViewControllerForCardActionsView:animated:]
  -[CNAvatarCardViewController setHeaderOnTop:]
  -[CNAvatarCardViewController setDismissesBeforePerforming:]
  -[CNAvatarCardViewController dismissesBeforePerforming]
  -[CNAvatarCardViewController _photoFrameInView:]
  -[CNAvatarCardViewController actionListViewController]
  -[CNAvatarCardViewController actionListController]
  -[CNAvatarCardViewController willAddActionsViewToHierarchy]
  -[CNAvatarCardViewController didAddActionsViewToHierarchy]
  -[CNAvatarCardViewController updateActionsControllerHeightConstraint]
  -[CNAvatarCardViewController updateActionsViewBackgroundColor]
  -[CNAvatarCardViewController _updatePreferredSize]
  -[CNAvatarCardViewController setHasHeader:]
  -[CNAvatarCardViewController headerOnTop]
  -[CNAvatarCardViewController legacyContactActionsView]
  -[CNAvatarCardViewController setLegacyContactActionsView:]
  -[CNAvatarCardViewController actionsViewControllerHeightConstraint]
  -[CNAvatarCardViewController setActionsViewControllerHeightConstraint:]
  -[CNAvatarCardViewController borderMargin]
  -[CNAvatarCardViewController setBorderMargin:]
  -[CNAvatarCardViewController actionsListView]
  -[CNAvatarCardViewController setActionsListView:]


CNCardGroupMembershipGroupItem : CNCardGroupItem
 @property  CNGroup *group

  // instance methods
  -[CNCardGroupMembershipGroupItem .cxx_destruct]
  -[CNCardGroupMembershipGroupItem group]
  -[CNCardGroupMembershipGroupItem setGroup:]
  -[CNCardGroupMembershipGroupItem initWithGroup:]


CNContactListDeleteContactAction : NSObject
 @property  CNContact *contact
 @property  NSString *containerIdentifier
 @property  CNUICoreRecentsManager *recentsManager
 @property  CNContactStore *contactStore

  // class methods
  +[CNContactListDeleteContactAction log]

  // instance methods
  -[CNContactListDeleteContactAction setContactStore:]
  -[CNContactListDeleteContactAction contact]
  -[CNContactListDeleteContactAction setRecentsManager:]
  -[CNContactListDeleteContactAction containerIdentifier]
  -[CNContactListDeleteContactAction recentsManager]
  -[CNContactListDeleteContactAction .cxx_destruct]
  -[CNContactListDeleteContactAction setContainerIdentifier:]
  -[CNContactListDeleteContactAction setContact:]
  -[CNContactListDeleteContactAction contactStore]
  -[CNContactListDeleteContactAction executeAction]
  -[CNContactListDeleteContactAction undoAction]
  -[CNContactListDeleteContactAction initWithContact:contactStore:containerIdentifier:recentsManager:]
  -[CNContactListDeleteContactAction executeDeleteAction]
  -[CNContactListDeleteContactAction undoDeleteAction]


CNContactListDeleteContactsAction : CNContactListUndoableAction
 @property  CNUIExternalComponentsFactory *componentsFactory
 @property  CNUICoreRecentsManager *recentsManager
 @property  CNContactFormatter *contactFormatter
 @property  CNContactStore *contactStore
 @property  long long originalContactCount
 @property  NSArray *actions

  // class methods
  +[CNContactListDeleteContactsAction descriptorForRequiredKeys]
  +[CNContactListDeleteContactsAction log]
  +[CNContactListDeleteContactsAction actionForContact:configuration:]

  // instance methods
  -[CNContactListDeleteContactsAction performAction]
  -[CNContactListDeleteContactsAction setContactStore:]
  -[CNContactListDeleteContactsAction recentsManager]
  -[CNContactListDeleteContactsAction .cxx_destruct]
  -[CNContactListDeleteContactsAction actions]
  -[CNContactListDeleteContactsAction componentsFactory]
  -[CNContactListDeleteContactsAction alertTitle]
  -[CNContactListDeleteContactsAction contactStore]
  -[CNContactListDeleteContactsAction setActions:]
  -[CNContactListDeleteContactsAction contactFormatter]
  -[CNContactListDeleteContactsAction setContactFormatter:]
  -[CNContactListDeleteContactsAction editRequiresAuthorization]
  -[CNContactListDeleteContactsAction shouldReloadListOnCompletion]
  -[CNContactListDeleteContactsAction performUndoAction]
  -[CNContactListDeleteContactsAction showDeleteFailureAlert]
  -[CNContactListDeleteContactsAction initWithContacts:configuration:]
  -[CNContactListDeleteContactsAction editRequiresAuthorizationCheckForActions:]
  -[CNContactListDeleteContactsAction originalContactCount]
  -[CNContactListDeleteContactsAction setOriginalContactCount:]


CNVisualIdentityAvatarStyleSectionHeaderView : UICollectionReusableView
 @property  UILabel *label

  // class methods
  +[CNVisualIdentityAvatarStyleSectionHeaderView font]
  +[CNVisualIdentityAvatarStyleSectionHeaderView reuseID]
  +[CNVisualIdentityAvatarStyleSectionHeaderView sizeWithText:]

  // instance methods
  -[CNVisualIdentityAvatarStyleSectionHeaderView .cxx_destruct]
  -[CNVisualIdentityAvatarStyleSectionHeaderView layoutSubviews]
  -[CNVisualIdentityAvatarStyleSectionHeaderView label]
  -[CNVisualIdentityAvatarStyleSectionHeaderView initWithFrame:]


CNVisualIdentityAvatarStyleEditorViewController : UIViewController <CNVisualIdentityEditablePrimaryAvatarViewControllerDelegate, UICollectionViewDelegate, UICollectionViewDataSource>
 @property  UICollectionView *styleCollectionView
 @property  NSLayoutConstraint *avatarViewSizeConstraint
 @property  NSLayoutConstraint *avatarViewTopConstraint
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  NSArray *variantProviderItems
 @property  CNPhotoPickerProviderItem *providerItem
 @property  CNVisualIdentityEditablePrimaryAvatarViewController *editableAvatarViewController
 @property  <CNVisualIdentityAvatarStyleEditorViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNVisualIdentityAvatarStyleEditorViewController collectionView:cellForItemAtIndexPath:]
  -[CNVisualIdentityAvatarStyleEditorViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[CNVisualIdentityAvatarStyleEditorViewController collectionView:layout:insetForSectionAtIndex:]
  -[CNVisualIdentityAvatarStyleEditorViewController setDelegate:]
  -[CNVisualIdentityAvatarStyleEditorViewController delegate]
  -[CNVisualIdentityAvatarStyleEditorViewController numberOfSectionsInCollectionView:]
  -[CNVisualIdentityAvatarStyleEditorViewController .cxx_destruct]
  -[CNVisualIdentityAvatarStyleEditorViewController viewDidLoad]
  -[CNVisualIdentityAvatarStyleEditorViewController viewDidLayoutSubviews]
  -[CNVisualIdentityAvatarStyleEditorViewController collectionView:layout:referenceSizeForHeaderInSection:]
  -[CNVisualIdentityAvatarStyleEditorViewController collectionView:didSelectItemAtIndexPath:]
  -[CNVisualIdentityAvatarStyleEditorViewController collectionView:numberOfItemsInSection:]
  -[CNVisualIdentityAvatarStyleEditorViewController providerItem]
  -[CNVisualIdentityAvatarStyleEditorViewController variantsManager]
  -[CNVisualIdentityAvatarStyleEditorViewController setVariantsManager:]
  -[CNVisualIdentityAvatarStyleEditorViewController didTapEditableAvatar:]
  -[CNVisualIdentityAvatarStyleEditorViewController editableAvatarViewController:didUpdateWithProviderItem:]
  -[CNVisualIdentityAvatarStyleEditorViewController editableAvatarViewControllerShouldBecomeFirstResponder:]
  -[CNVisualIdentityAvatarStyleEditorViewController initWithProviderItem:variantsManager:]
  -[CNVisualIdentityAvatarStyleEditorViewController setupEditableAvatarViewController]
  -[CNVisualIdentityAvatarStyleEditorViewController beginEditingAvatar]
  -[CNVisualIdentityAvatarStyleEditorViewController shouldBeginEditing]
  -[CNVisualIdentityAvatarStyleEditorViewController setupStyleCollectionView]
  -[CNVisualIdentityAvatarStyleEditorViewController updateFlowLayoutItemSize]
  -[CNVisualIdentityAvatarStyleEditorViewController numberOfItemsPerRow]
  -[CNVisualIdentityAvatarStyleEditorViewController updatedProviderItem]
  -[CNVisualIdentityAvatarStyleEditorViewController isEmojiProviderItemType]
  -[CNVisualIdentityAvatarStyleEditorViewController generateProviderItems]
  -[CNVisualIdentityAvatarStyleEditorViewController editableAvatarViewEdgeLength]
  -[CNVisualIdentityAvatarStyleEditorViewController textFieldFontSize]
  -[CNVisualIdentityAvatarStyleEditorViewController fontSizeForContainerSize:]
  -[CNVisualIdentityAvatarStyleEditorViewController editableAvatarViewController]
  -[CNVisualIdentityAvatarStyleEditorViewController avatarViewSizeConstraint]
  -[CNVisualIdentityAvatarStyleEditorViewController setAvatarViewSizeConstraint:]
  -[CNVisualIdentityAvatarStyleEditorViewController avatarViewTopConstraint]
  -[CNVisualIdentityAvatarStyleEditorViewController setAvatarViewTopConstraint:]
  -[CNVisualIdentityAvatarStyleEditorViewController styleCollectionView]
  -[CNVisualIdentityAvatarStyleEditorViewController setStyleCollectionView:]
  -[CNVisualIdentityAvatarStyleEditorViewController variantProviderItems]
  -[CNVisualIdentityAvatarStyleEditorViewController setVariantProviderItems:]
  -[CNVisualIdentityAvatarStyleEditorViewController dismissTextKeyboardIfNeeded]
  -[CNVisualIdentityAvatarStyleEditorViewController dismissEmojiKeyboardIfNeeded]


CNNumberFormatting : NSObject
  // class methods
  +[CNNumberFormatting localizedStringWithInteger:]


CNPhotoPickerRecentAnimojiProviderItem : CNPhotoPickerAnimojiProviderItem
  // instance methods
  -[CNPhotoPickerRecentAnimojiProviderItem allowsVariants]


CNPhotoPickerRecentsProviderItem : CNPhotoPickerProviderItem
  // instance methods
  -[CNPhotoPickerRecentsProviderItem allowsVariants]
  -[CNPhotoPickerRecentsProviderItem allowsMoveAndScale]


CNPhotoPickerRecentsProvider : NSObject <CNPhotoPickerProvider>
 @property  CNVisualIdentity *visualIdentity
 @property  BOOL containsContactImage
 @property  BOOL containsMonogram
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPhotoPickerRecentsProvider log]

  // instance methods
  -[CNPhotoPickerRecentsProvider identifier]
  -[CNPhotoPickerRecentsProvider .cxx_destruct]
  -[CNPhotoPickerRecentsProvider setIdentifier:]
  -[CNPhotoPickerRecentsProvider visualIdentity]
  -[CNPhotoPickerRecentsProvider initWithVisualIdentity:]
  -[CNPhotoPickerRecentsProvider loadItemsForSize:scale:RTL:renderingQueue:callbackQueue:itemDelegate:]
  -[CNPhotoPickerRecentsProvider providerItemForContactImage:size:scale:RTL:renderingQueue:callbackQueue:]
  -[CNPhotoPickerRecentsProvider containsContactImage]
  -[CNPhotoPickerRecentsProvider setContainsContactImage:]
  -[CNPhotoPickerRecentsProvider containsMonogram]
  -[CNPhotoPickerRecentsProvider setContainsMonogram:]


CNContactNavigationController : UINavigationController <CNContactListViewControllerDelegate, CNContactListViewControllerDelegateInternal, CNContactViewControllerDelegate, CNContactContentViewControllerDelegate, CNAccountsAndGroupsViewControllerDelegate, CNContactViewControllerAddContactPresenter, NSUserActivityDelegate, CNContactPickerPrivateDelegate, UIPopoverPresentationControllerDelegate>
 @property  CNContactStore *contactStore
 @property  CNContactViewController *reusableContactViewController
 @property  NSNumber *shouldShowAccountsAndGroupsCachedValue
 @property  CNAccountsAndGroupsViewController *accountsAndGroupsViewController
 @property  CNAccountsAndGroupsDataSource *accountsAndGroupsDataSource
 @property  long long leftButtonBehavior
 @property  long long rightButtonBehavior
 @property  CNContactStoreDataSource *nonServerDataSource
 @property  CNContactViewController *presentedContactViewController
 @property  UIKeyCommand *addKeyCommand
 @property  UIAlertController *facebookContactsAlertController
 @property  <CNScheduler> *backgroundScheduler
 @property  <CNScheduler> *mainThreadScheduler
 @property  BOOL hasPendingShowCard
 @property  CNUIUserActivityManager *activityManager
 @property  BOOL allowsLargeTitles
 @property  UIBarButtonItem *mailButtonItem
 @property  CNUIGroupsAndContainersSaveManager *groupsAndContainersSaveManager
 @property  CNContactListStyleApplier *contactListStyleApplier
 @property  BOOL ignoresMapsData
 @property  BOOL hideGroupsButton
 @property  NSArray *prohibitedPropertyKeys
 @property  UIBarButtonItem *addContactBarButtonItem
 @property  BOOL hideMailToGroupButton
 @property  NSString *contactPickerTargetGroupIdentifier
 @property  CNManagedConfiguration *managedConfiguration
 @property  <CNContactNavigationControllerDelegate> *delegate
 @property  <CNContactDataSource> *dataSource
 @property  CNContactStyle *contactStyle
 @property  BOOL allowsCardEditing
 @property  BOOL allowsCardDeletion
 @property  BOOL allowsCanceling
 @property  BOOL allowsDone
 @property  BOOL allowsContactBlocking
 @property  BOOL hidesSearchableSources
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactNavigationController newContactFormatter]
  +[CNContactNavigationController keyCommandForNewContact]
  +[CNContactNavigationController moveViewController:toParent:]

  // instance methods
  -[CNContactNavigationController managedConfiguration]
  -[CNContactNavigationController setHidesSearchableSources:]
  -[CNContactNavigationController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNContactNavigationController popoverPresentationController:willRepositionPopoverToRect:inView:]
  -[CNContactNavigationController done:]
  -[CNContactNavigationController setUpLargeTitles]
  -[CNContactNavigationController addContactPresenter]
  -[CNContactNavigationController contactStyle]
  -[CNContactNavigationController hideGroupsButton]
  -[CNContactNavigationController initWithDataSource:contactFormatter:applyGroupFilterFromPreferences:environment:allowsLargeTitles:]
  -[CNContactNavigationController applicationDidResume]
  -[CNContactNavigationController initWithDataSource:]
  -[CNContactNavigationController backgroundScheduler]
  -[CNContactNavigationController setManagedConfiguration:]
  -[CNContactNavigationController mainThreadScheduler]
  -[CNContactNavigationController groupsAndContainersSaveManager]
  -[CNContactNavigationController setGroupsAndContainersSaveManager:]
  -[CNContactNavigationController hidesSearchableSources]
  -[CNContactNavigationController contactListStyleApplier]
  -[CNContactNavigationController setContactStore:]
  -[CNContactNavigationController cancel:]
  -[CNContactNavigationController allContactIdentifiers]
  -[CNContactNavigationController addContact:]
  -[CNContactNavigationController addContactBarButtonItem]
  -[CNContactNavigationController dismissSearchAndSelectContact:allowsMultiSelection:]
  -[CNContactNavigationController activityManager]
  -[CNContactNavigationController accountsAndGroupsViewController]
  -[CNContactNavigationController contactPicker:didCompleteWithNewContact:]
  -[CNContactNavigationController dataSource]
  -[CNContactNavigationController shouldShowRightCancelButton]
  -[CNContactNavigationController mailButtonItem]
  -[CNContactNavigationController setActivityManager:]
  -[CNContactNavigationController mailContacts:]
  -[CNContactNavigationController contactListViewController:shouldPresentContact:shouldScrollToContact:]
  -[CNContactNavigationController pushViewController:animated:]
  -[CNContactNavigationController setContactListStyleApplier:]
  -[CNContactNavigationController contactListViewController]
  -[CNContactNavigationController userActivityRepresentingCurrentlyDisplayedContact]
  -[CNContactNavigationController setAllowsCardEditing:]
  -[CNContactNavigationController allowsCanceling]
  -[CNContactNavigationController firstVisibleContact]
  -[CNContactNavigationController currentlyDisplayedContact]
  -[CNContactNavigationController allowsContactBlocking]
  -[CNContactNavigationController setNonServerDataSource:]
  -[CNContactNavigationController reuseableContactViewControllerConfiguredForContact:mode:]
  -[CNContactNavigationController popViewControllerAnimated:]
  -[CNContactNavigationController updateNavigationButtonsInSearchMode:animated:]
  -[CNContactNavigationController presentAddToGroupPickerWithSourceView:]
  -[CNContactNavigationController setAllowsCanceling:]
  -[CNContactNavigationController shouldShowLeftCancelAndRightDoneButton]
  -[CNContactNavigationController shouldShowRightAddAndCancelButton]
  -[CNContactNavigationController toggleEditContact:]
  -[CNContactNavigationController clearServerSearchIfNeeded:]
  -[CNContactNavigationController contactListViewController:didSelectContact:shouldScrollToContact:]
  -[CNContactNavigationController setPresentedContactViewController:]
  -[CNContactNavigationController isAddContactButtonShowing]
  -[CNContactNavigationController setProhibitedPropertyKeys:]
  -[CNContactNavigationController presentGroupsViewControllerAnimated:]
  -[CNContactNavigationController contactListViewController:didSelectContact:]
  -[CNContactNavigationController presentAddContactViewController:animated:]
  -[CNContactNavigationController updateNavigationButtonsAnimated:viewWillAppear:]
  -[CNContactNavigationController updateNavigationButtonsInSearchMode:]
  -[CNContactNavigationController reusableContactViewController]
  -[CNContactNavigationController setHasPendingShowCard:]
  -[CNContactNavigationController dealloc]
  -[CNContactNavigationController shouldDisplayMeContactBanner]
  -[CNContactNavigationController prohibitedPropertyKeys]
  -[CNContactNavigationController canAddContacts]
  -[CNContactNavigationController setAllowsLargeTitles:]
  -[CNContactNavigationController setContactStyle:]
  -[CNContactNavigationController setAllowsCardDeletion:]
  -[CNContactNavigationController showCardForContactBeforeIndexPath:]
  -[CNContactNavigationController nextResponderForContactListViewController:]
  -[CNContactNavigationController isPresentedContactViewControllerVisible]
  -[CNContactNavigationController .cxx_destruct]
  -[CNContactNavigationController setMailButtonItem:]
  -[CNContactNavigationController selectPreviousContact:]
  -[CNContactNavigationController showCardForContact:animated:scrollToContact:]
  -[CNContactNavigationController canPerformAction:withSender:]
  -[CNContactNavigationController accountsAndGroupsViewControllerDidFinish:]
  -[CNContactNavigationController viewDidLoad]
  -[CNContactNavigationController addKeyCommand]
  -[CNContactNavigationController hideMailToGroupButton]
  -[CNContactNavigationController updateNavigationButtonsAnimated:]
  -[CNContactNavigationController parentGroupForCurrentFilter]
  -[CNContactNavigationController viewWillAppear:]
  -[CNContactNavigationController presentGroupsViewController:]
  -[CNContactNavigationController shouldShowAccountsAndGroupsCachedValue]
  -[CNContactNavigationController showCardForContact:resetFilter:resetSearch:fallbackToFirstContact:scrollToContact:animated:dismissingPresentedController:]
  -[CNContactNavigationController isDisplayingAddNewContactViewController]
  -[CNContactNavigationController allowsDone]
  -[CNContactNavigationController accountsAndGroupsViewController:shouldEnableItemWithIdentifier:]
  -[CNContactNavigationController setAccountsAndGroupsViewController:]
  -[CNContactNavigationController allowsCardDeletion]
  -[CNContactNavigationController presentedContactViewController]
  -[CNContactNavigationController shouldShowAddToGroupPicker]
  -[CNContactNavigationController accountsAndGroupsDataSource]
  -[CNContactNavigationController contactPicker:didSelectContacts:]
  -[CNContactNavigationController popToContactListAndSaveChanges:]
  -[CNContactNavigationController contactListViewControllerSelectedCreateNewContact:]
  -[CNContactNavigationController cancelSearch:]
  -[CNContactNavigationController setShouldDisplayMeContactBanner:]
  -[CNContactNavigationController contactListViewControllerSelectedAddContactToList:withSourceView:]
  -[CNContactNavigationController observeOtherFacebookContactsAlert]
  -[CNContactNavigationController executeAddContact]
  -[CNContactNavigationController showCardForContactIfPossible:]
  -[CNContactNavigationController startEditingPresentedContact]
  -[CNContactNavigationController setRightButtonBehavior:]
  -[CNContactNavigationController accountsAndGroupsViewControllerDidCancel:]
  -[CNContactNavigationController setReusableContactViewController:]
  -[CNContactNavigationController shouldShowMailButton]
  -[CNContactNavigationController showNewDraftContact:animated:]
  -[CNContactNavigationController contactViewController:didCompleteWithContact:]
  -[CNContactNavigationController leftButtonBehavior]
  -[CNContactNavigationController setIgnoresMapsData:]
  -[CNContactNavigationController toggleGroupsPanel:]
  -[CNContactNavigationController updateLeftNavigationButtonAnimated:]
  -[CNContactNavigationController facebookContactsAlertController]
  -[CNContactNavigationController showAllContactsList]
  -[CNContactNavigationController _cnui_presentViewController:animated:dismissingPresentedController:shouldHideContactListIfNeeded:]
  -[CNContactNavigationController rightButtonBehavior]
  -[CNContactNavigationController updateUserActivityState:]
  -[CNContactNavigationController setAllowsContactBlocking:]
  -[CNContactNavigationController checkForFacebookContactsWithDelay:allowAlert:]
  -[CNContactNavigationController contactPickerTargetGroupIdentifier]
  -[CNContactNavigationController setAddKeyCommand:]
  -[CNContactNavigationController contactViewController:didCompleteWithNewContactFromPickerNewContactRow:]
  -[CNContactNavigationController contactSuggestionViewController:shouldSelectContact:atIndexPath:]
  -[CNContactNavigationController showCardForContact:resetFilter:resetSearch:fallbackToFirstContact:scrollToContact:animated:dismissingPresentedController:shouldHideContactListIfNeeded:]
  -[CNContactNavigationController targetContainerForNewContactWithTargetGroup:]
  -[CNContactNavigationController targetGroupForNewContact]
  -[CNContactNavigationController initWithDataSource:allowsLargeTitles:]
  -[CNContactNavigationController nonServerDataSource]
  -[CNContactNavigationController setShouldShowAccountsAndGroupsCachedValue:]
  -[CNContactNavigationController setAddContactBarButtonItem:]
  -[CNContactNavigationController accountsAndGroupsViewControllerDidUpdateSelection:]
  -[CNContactNavigationController shouldShowLeftCancelAndRightAddButton]
  -[CNContactNavigationController otherFacebookContactsAlertDidSelectActionWithNotification:]
  -[CNContactNavigationController contactViewController:didDeleteContact:]
  -[CNContactNavigationController ignoresMapsData]
  -[CNContactNavigationController shouldShowAccountsAndGroups]
  -[CNContactNavigationController shouldShowRightAddButton]
  -[CNContactNavigationController checkForInfoContentWithContext:]
  -[CNContactNavigationController setHideGroupsButton:]
  -[CNContactNavigationController shouldFlipDirectionWhenChangingSelectionWithKey:]
  -[CNContactNavigationController allowsLargeTitles]
  -[CNContactNavigationController setContactPickerTargetGroupIdentifier:]
  -[CNContactNavigationController dataSourceChangedForContactListViewController:]
  -[CNContactNavigationController contactListViewController:shouldSelectContact:atIndexPath:]
  -[CNContactNavigationController shouldShowLeftDoneAndRightAddButton]
  -[CNContactNavigationController allowsCardEditing]
  -[CNContactNavigationController setLeftButtonBehavior:]
  -[CNContactNavigationController contactStore]
  -[CNContactNavigationController showCardForContact:resetFilter:resetSearch:fallbackToFirstContact:scrollToContact:animated:]
  -[CNContactNavigationController notifyOtherFacebookContactsAlertDidSelectAction]
  -[CNContactNavigationController deleteContact:]
  -[CNContactNavigationController setAccountsAndGroupsDataSource:]
  -[CNContactNavigationController resetContactViewController]
  -[CNContactNavigationController popToContactListAndSaveChanges:animated:]
  -[CNContactNavigationController contactListViewController:canSelectContact:]
  -[CNContactNavigationController initWithDataSource:environment:allowsLargeTitles:]
  -[CNContactNavigationController setAllowsDone:]
  -[CNContactNavigationController showCardForContactAfterIndexPath:]
  -[CNContactNavigationController userActivityRepresentingGroupsView]
  -[CNContactNavigationController contactStyleCurrentStyleDidChange:]
  -[CNContactNavigationController _updateUserActivity]
  -[CNContactNavigationController scrollToContact:animated:]
  -[CNContactNavigationController setHideMailToGroupButton:]
  -[CNContactNavigationController createUserActivity]
  -[CNContactNavigationController showCardForContact:animated:]
  -[CNContactNavigationController refreshMailButtonEnabled]
  -[CNContactNavigationController searchForString:]
  -[CNContactNavigationController beginSearch:]
  -[CNContactNavigationController hasPendingShowCard]
  -[CNContactNavigationController selectNextContact:]
  -[CNContactNavigationController contactViewController:shouldPerformDefaultActionForContactProperty:]
  -[CNContactNavigationController addContact:animated:]
  -[CNContactNavigationController shouldShowGroupsBackButton]
  -[CNContactNavigationController presentErrorAlertWithTitle:message:animated:]
  -[CNContactNavigationController contactListViewController:updatedSelectedContact:]
  -[CNContactNavigationController setFacebookContactsAlertController:]
  -[CNContactNavigationController setUpAccountAndGroupsViewIfNeeded]


CNAvatarCardPresentationController : UIPresentationController
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  UIViewController *sourceViewController
 @property  CNAvatarCardTransition *transition
 @property  <CNCardTransitioning> *originalTransitioning
 @property  UIVisualEffectView *backgroundView
 @property  UIVisualEffectView *vibrancyView
 @property  UIView *dimmingView
 @property  UIView *cardView
 @property  UIView *contentView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceTargetRect
 @property  UIView *sourceView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceRect
 @property  double alignmentY
 @property  unsigned int alignmentEdge

  // instance methods
  -[CNAvatarCardPresentationController sourceRect]
  -[CNAvatarCardPresentationController setSourceView:]
  -[CNAvatarCardPresentationController contentView]
  -[CNAvatarCardPresentationController setSourceRect:]
  -[CNAvatarCardPresentationController presentedView]
  -[CNAvatarCardPresentationController shouldPresentInFullscreen]
  -[CNAvatarCardPresentationController setTransition:]
  -[CNAvatarCardPresentationController dimmingView]
  -[CNAvatarCardPresentationController initWithPresentedViewController:presentingViewController:]
  -[CNAvatarCardPresentationController setDimmingView:]
  -[CNAvatarCardPresentationController frameOfPresentedViewInContainerView]
  -[CNAvatarCardPresentationController presentationTransitionDidEnd:]
  -[CNAvatarCardPresentationController presentationTransitionWillBegin]
  -[CNAvatarCardPresentationController containerViewWillLayoutSubviews]
  -[CNAvatarCardPresentationController dismissalTransitionDidEnd:]
  -[CNAvatarCardPresentationController setSourceViewController:]
  -[CNAvatarCardPresentationController transition]
  -[CNAvatarCardPresentationController .cxx_destruct]
  -[CNAvatarCardPresentationController backgroundView]
  -[CNAvatarCardPresentationController setBackgroundView:]
  -[CNAvatarCardPresentationController vibrancyView]
  -[CNAvatarCardPresentationController setContentView:]
  -[CNAvatarCardPresentationController tapGestureRecognizer]
  -[CNAvatarCardPresentationController sourceView]
  -[CNAvatarCardPresentationController setTapGestureRecognizer:]
  -[CNAvatarCardPresentationController sourceViewController]
  -[CNAvatarCardPresentationController _layoutViews]
  -[CNAvatarCardPresentationController _frameOfPresentedViewControllerViewInSuperview]
  -[CNAvatarCardPresentationController systemLayoutFittingSizeDidChangeForChildContentContainer:]
  -[CNAvatarCardPresentationController tapGestureRecognized:]
  -[CNAvatarCardPresentationController sourceTargetRect]
  -[CNAvatarCardPresentationController setSourceTargetRect:]
  -[CNAvatarCardPresentationController alignmentY]
  -[CNAvatarCardPresentationController setAlignmentY:]
  -[CNAvatarCardPresentationController alignmentEdge]
  -[CNAvatarCardPresentationController setAlignmentEdge:]
  -[CNAvatarCardPresentationController originalTransitioning]
  -[CNAvatarCardPresentationController setOriginalTransitioning:]
  -[CNAvatarCardPresentationController setVibrancyView:]
  -[CNAvatarCardPresentationController cardView]
  -[CNAvatarCardPresentationController setCardView:]


CNContactPickerServiceViewController : CNContactPickerContentViewController <CNContactPickerContentDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactPickerServiceViewController init]
  -[CNContactPickerServiceViewController pickerDidSelectAddNewContact]
  -[CNContactPickerServiceViewController pickerDidSelectContact:property:]
  -[CNContactPickerServiceViewController pickerDidSelectContacts:properties:]
  -[CNContactPickerServiceViewController pickerDidCompleteWithNewContact:]
  -[CNContactPickerServiceViewController pickerDidCancel]
  -[CNContactPickerServiceViewController _filteredContact:withKeys:]
  -[CNContactPickerServiceViewController _filteredProperty:]
  -[CNContactPickerServiceViewController _logPrivacyAccountingAccessEvent]


CNContactPickerExtensionContext : NSExtensionContext <CNContactPickerServiceProtocol, CNContactPickerHostProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactPickerExtensionContext _extensionAuxiliaryHostProtocol]
  +[CNContactPickerExtensionContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[CNContactPickerExtensionContext setupWithOptions:readyBlock:]
  -[CNContactPickerExtensionContext pickerDidSelectAddNewContact]
  -[CNContactPickerExtensionContext pickerDidSelectContact:property:]
  -[CNContactPickerExtensionContext pickerDidSelectContacts:properties:]
  -[CNContactPickerExtensionContext pickerDidCompleteWithNewContact:]
  -[CNContactPickerExtensionContext pickerDidCancel]
  -[CNContactPickerExtensionContext invalidateSelectionAnimated:]


CNPickerController : UITableViewController <UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate, UISearchResultsUpdating, UISearchControllerDelegate, CNPickerControllerDelegate>
 @property  NSIndexPath *selectedIndexPath
 @property  long long discoveredItemsSection
 @property  long long promotedItemsSection
 @property  long long builtinItemsSection
 @property  long long customItemsSection
 @property  NSString *customEditingItem
 @property  UITextField *customTextField
 @property  NSArray *filterTokens
 @property  UISearchController *searchController
 @property  NSArray *filteredDiscoveredItems
 @property  NSArray *filteredPromotedItems
 @property  NSArray *filteredBuiltinItems
 @property  NSArray *filteredCustomItems
 @property  BOOL searchControllerActive
 @property  id selectedItem
 @property  <CNPickerControllerDelegate> *delegate
 @property  NSArray *discoveredItems
 @property  BOOL allowsDiscoveredItems
 @property  NSArray *promotedItems
 @property  NSArray *builtinItems
 @property  NSArray *supplementalItems
 @property  NSArray *promotedSupplementalItems
 @property  NSArray *remainderSupplementalItems
 @property  BOOL searchIncludesSupplementalItems
 @property  NSArray *customItems
 @property  BOOL allowsCustomItems
 @property  NSString *itemLocalizationKey
 @property  @? itemLocalizationBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPickerController tableView:cellForRowAtIndexPath:]
  -[CNPickerController tableView:numberOfRowsInSection:]
  -[CNPickerController numberOfSectionsInTableView:]
  -[CNPickerController textFieldShouldReturn:]
  -[CNPickerController setDelegate:]
  -[CNPickerController setEditing:animated:]
  -[CNPickerController textFieldDidBeginEditing:]
  -[CNPickerController tableView:willDisplayCell:forRowAtIndexPath:]
  -[CNPickerController tableView:didSelectRowAtIndexPath:]
  -[CNPickerController delegate]
  -[CNPickerController searchController]
  -[CNPickerController .cxx_destruct]
  -[CNPickerController viewWillAppear:]
  -[CNPickerController setSearchController:]
  -[CNPickerController isSearching]
  -[CNPickerController updateSearchResultsForSearchController:]
  -[CNPickerController initWithStyle:]
  -[CNPickerController textFieldDidEndEditing:]
  -[CNPickerController willPresentSearchController:]
  -[CNPickerController tableView:willDisplayHeaderView:forSection:]
  -[CNPickerController didDismissSearchController:]
  -[CNPickerController setSelectedItem:]
  -[CNPickerController selectedItem]
  -[CNPickerController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[CNPickerController tableView:editingStyleForRowAtIndexPath:]
  -[CNPickerController tableView:shouldIndentWhileEditingRowAtIndexPath:]
  -[CNPickerController tableView:willBeginEditingRowAtIndexPath:]
  -[CNPickerController tableView:didEndEditingRowAtIndexPath:]
  -[CNPickerController selectedIndexPath]
  -[CNPickerController setSelectedIndexPath:]
  -[CNPickerController textFieldShouldEndEditing:]
  -[CNPickerController cancelPicker:]
  -[CNPickerController donePicker:]
  -[CNPickerController picker:didPickItem:]
  -[CNPickerController pickerDidCancel:]
  -[CNPickerController picker:didDeleteItem:]
  -[CNPickerController titleForPickerItem:]
  -[CNPickerController titleForAddCustomItem]
  -[CNPickerController removeCustomItem:]
  -[CNPickerController pickedItem:]
  -[CNPickerController customLabelUpdated:]
  -[CNPickerController doneInlineEditing:]
  -[CNPickerController _titleForPickerItem:]
  -[CNPickerController titleForSupplementalItems]
  -[CNPickerController presentExtendedPicker]
  -[CNPickerController isAddCustomItemIndexPath:]
  -[CNPickerController isSupplementalDisclosureItemIndexPath:]
  -[CNPickerController _updateRightButtonItem]
  -[CNPickerController setFilterTokens:]
  -[CNPickerController _indexForCustomItemAtIndexPath:]
  -[CNPickerController _itemAtIndexPath:isPlaceholder:]
  -[CNPickerController filteredCustomItems]
  -[CNPickerController filteredPromotedItems]
  -[CNPickerController filteredDiscoveredItems]
  -[CNPickerController filteredBuiltinItems]
  -[CNPickerController discoveredItems]
  -[CNPickerController setDiscoveredItems:]
  -[CNPickerController allowsDiscoveredItems]
  -[CNPickerController setAllowsDiscoveredItems:]
  -[CNPickerController promotedItems]
  -[CNPickerController setPromotedItems:]
  -[CNPickerController builtinItems]
  -[CNPickerController setBuiltinItems:]
  -[CNPickerController supplementalItems]
  -[CNPickerController setSupplementalItems:]
  -[CNPickerController promotedSupplementalItems]
  -[CNPickerController setPromotedSupplementalItems:]
  -[CNPickerController remainderSupplementalItems]
  -[CNPickerController setRemainderSupplementalItems:]
  -[CNPickerController searchIncludesSupplementalItems]
  -[CNPickerController setSearchIncludesSupplementalItems:]
  -[CNPickerController customItems]
  -[CNPickerController setCustomItems:]
  -[CNPickerController allowsCustomItems]
  -[CNPickerController setAllowsCustomItems:]
  -[CNPickerController itemLocalizationKey]
  -[CNPickerController setItemLocalizationKey:]
  -[CNPickerController itemLocalizationBlock]
  -[CNPickerController setItemLocalizationBlock:]
  -[CNPickerController discoveredItemsSection]
  -[CNPickerController setDiscoveredItemsSection:]
  -[CNPickerController promotedItemsSection]
  -[CNPickerController setPromotedItemsSection:]
  -[CNPickerController builtinItemsSection]
  -[CNPickerController setBuiltinItemsSection:]
  -[CNPickerController customItemsSection]
  -[CNPickerController setCustomItemsSection:]
  -[CNPickerController customEditingItem]
  -[CNPickerController setCustomEditingItem:]
  -[CNPickerController customTextField]
  -[CNPickerController setCustomTextField:]
  -[CNPickerController filterTokens]
  -[CNPickerController setFilteredDiscoveredItems:]
  -[CNPickerController setFilteredPromotedItems:]
  -[CNPickerController setFilteredBuiltinItems:]
  -[CNPickerController setFilteredCustomItems:]
  -[CNPickerController isSearchControllerActive]
  -[CNPickerController setSearchControllerActive:]


CNPickerItemCell : UITableViewCell
 @property  UITextField *textField
 @property  BOOL placeholder

  // instance methods
  -[CNPickerItemCell setTextField:]
  -[CNPickerItemCell initWithStyle:reuseIdentifier:]
  -[CNPickerItemCell textField]
  -[CNPickerItemCell isPlaceholder]
  -[CNPickerItemCell beginEditing]
  -[CNPickerItemCell .cxx_destruct]
  -[CNPickerItemCell prepareForReuse]
  -[CNPickerItemCell layoutSubviews]
  -[CNPickerItemCell endEditing]
  -[CNPickerItemCell setPlaceholder:]
  -[CNPickerItemCell setTextFieldHidden:]


CNContactSuggestionAction : CNContactAction
  // instance methods
  -[CNContactSuggestionAction performActionWithSender:]
  -[CNContactSuggestionAction _confirmOrReject:]
  -[CNContactSuggestionAction ignoreSuggestion]
  -[CNContactSuggestionAction confirmSuggestion]


CNVCardViewController : UIViewController <CNContactNavigationControllerDelegate>
 @property  NSArray *contacts
 @property  <CNVCardViewControllerDelegate> *delegate
 @property  CNContactNavigationController *contactNavigationController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNVCardViewController setDelegate:]
  -[CNVCardViewController delegate]
  -[CNVCardViewController setContacts:]
  -[CNVCardViewController .cxx_destruct]
  -[CNVCardViewController contacts]
  -[CNVCardViewController viewDidLoad]
  -[CNVCardViewController contactNavigationControllerDidComplete:]
  -[CNVCardViewController contactNavigationControllerDidCancel:]
  -[CNVCardViewController contactNavigationController:contactViewControllerForContact:preferredMode:]
  -[CNVCardViewController initWithVCardData:]
  -[CNVCardViewController contactNavigationController]


CNContactStyle : NSObject <NSSecureCoding>
 @property  UIFont *textFont
 @property  UIFont *boldTextFont
 @property  long long topActionsViewStyle
 @property  long long inlineActionsViewStyle
 @property  long long contactViewPlatterStyle
 @property  long long overridenStyle
 @property  double sectionMaximumPlatterWidth
 @property  double sectionCornerRadius
 @property  double sectionContentInset
 @property  BOOL usesInsetPlatterStyle
 @property  UIColor *textColor
 @property  UIColor *sectionHeaderTextColor
 @property  UIColor *taglineTextColor
 @property  UIColor *disabledTextColor
 @property  UIColor *blueSelectionSecondaryTextColor
 @property  UIColor *placeholderTextColor
 @property  UIColor *highlightedTextColor
 @property  UIColor *highlightedTextLightColor
 @property  UIColor *suggestedLabelTextColor
 @property  UIColor *suggestedValueTextColor
 @property  UIColor *readOnlyTextColor
 @property  UIColor *notesTextColor
 @property  UIColor *backgroundColor
 @property  UIColor *sectionIndexBackgroundColor
 @property  BOOL usesOpaqueBackground
 @property  long long separatorBackdropOverlayBlendMode
 @property  UIColor *searchBarBackgroundColor
 @property  UIColor *transportBackgroundColor
 @property  UIColor *transportBorderColor
 @property  UIColor *transportBoldBackgroundColor
 @property  UIColor *contactHeaderBackgroundColor
 @property  UIColor *contactHeaderDropShadowColor
 @property  UIColor *tintColorOverride
 @property  UIColor *headerBackgroundColor
 @property  UIColor *separatorColor
 @property  long long separatorStyle
 @property  {UIEdgeInsets=dddd} separatorInset
 @property  UIColor *sectionBackgroundColor
 @property  UIColor *selectedCellBackgroundColor
 @property  UIColor *groupedBackgroundColor
 @property  UIColor *searchCellBackgroundColor
 @property  UIColor *listTextColor
 @property  long long barStyle
 @property  BOOL usesTranslucentBarStyle
 @property  long long keyboardAppearance
 @property  BOOL shouldPresentInCurrentContext
 @property  BOOL blurSupported
 @property  long long modalTransitionStyle

  // class methods
  +[CNContactStyle supportsSecureCoding]
  +[CNContactStyle currentStyle]
  +[CNContactStyle setCurrentStyle:]
  +[CNContactStyle defaultStyle]
  +[CNContactStyle darkStyle]
  +[CNContactStyle faceTimeStyle]
  +[CNContactStyle spotlightStyle]
  +[CNContactStyle darkStyleWithOverrideUserInterfaceStyle:]
  +[CNContactStyle watchStyle]
  +[CNContactStyle siriStyle]
  +[CNContactStyle testStyle]

  // instance methods
  -[CNContactStyle setSeparatorInset:]
  -[CNContactStyle separatorInset]
  -[CNContactStyle separatorStyle]
  -[CNContactStyle groupedBackgroundColor]
  -[CNContactStyle tintColorOverride]
  -[CNContactStyle textFont]
  -[CNContactStyle setSelectedCellBackgroundColor:]
  -[CNContactStyle setTransportBoldBackgroundColor:]
  -[CNContactStyle setSuggestedValueTextColor:]
  -[CNContactStyle blueSelectionSecondaryTextColor]
  -[CNContactStyle setPlaceholderTextColor:]
  -[CNContactStyle setDisabledTextColor:]
  -[CNContactStyle setSearchCellBackgroundColor:]
  -[CNContactStyle keyboardAppearance]
  -[CNContactStyle setSectionBackgroundColor:]
  -[CNContactStyle sectionContentInset]
  -[CNContactStyle highlightedTextLightColor]
  -[CNContactStyle setBlurSupported:]
  -[CNContactStyle setContactViewPlatterStyle:]
  -[CNContactStyle placeholderTextColor]
  -[CNContactStyle setTextColor:]
  -[CNContactStyle setHeaderBackgroundColor:]
  -[CNContactStyle blurSupported]
  -[CNContactStyle setNotesTextColor:]
  -[CNContactStyle encodeWithCoder:]
  -[CNContactStyle setListTextColor:]
  -[CNContactStyle setSeparatorColor:]
  -[CNContactStyle transportBackgroundColor]
  -[CNContactStyle setUsesTranslucentBarStyle:]
  -[CNContactStyle readOnlyTextColor]
  -[CNContactStyle setInlineActionsViewStyle:]
  -[CNContactStyle setTransportBackgroundColor:]
  -[CNContactStyle setContactHeaderBackgroundColor:]
  -[CNContactStyle .cxx_destruct]
  -[CNContactStyle topActionsViewStyle]
  -[CNContactStyle highlightedTextColor]
  -[CNContactStyle separatorColor]
  -[CNContactStyle setReadOnlyTextColor:]
  -[CNContactStyle usesTranslucentBarStyle]
  -[CNContactStyle shouldPresentInCurrentContext]
  -[CNContactStyle usesInsetPlatterStyle]
  -[CNContactStyle setSearchBarBackgroundColor:]
  -[CNContactStyle headerBackgroundColor]
  -[CNContactStyle overridenStyle]
  -[CNContactStyle backgroundColor]
  -[CNContactStyle setBarStyle:]
  -[CNContactStyle setUsesOpaqueBackground:]
  -[CNContactStyle setSeparatorStyle:]
  -[CNContactStyle setHighlightedTextLightColor:]
  -[CNContactStyle sectionHeaderTextColor]
  -[CNContactStyle contactHeaderDropShadowColor]
  -[CNContactStyle setKeyboardAppearance:]
  -[CNContactStyle setSuggestedLabelTextColor:]
  -[CNContactStyle modalTransitionStyle]
  -[CNContactStyle setTopActionsViewStyle:]
  -[CNContactStyle sectionIndexBackgroundColor]
  -[CNContactStyle taglineTextColor]
  -[CNContactStyle setBackgroundColor:]
  -[CNContactStyle searchBarBackgroundColor]
  -[CNContactStyle transportBoldBackgroundColor]
  -[CNContactStyle setSeparatorBackdropOverlayBlendMode:]
  -[CNContactStyle barStyle]
  -[CNContactStyle searchCellBackgroundColor]
  -[CNContactStyle setTintColorOverride:]
  -[CNContactStyle setContactHeaderDropShadowColor:]
  -[CNContactStyle separatorBackdropOverlayBlendMode]
  -[CNContactStyle contactHeaderBackgroundColor]
  -[CNContactStyle disabledTextColor]
  -[CNContactStyle selectedCellBackgroundColor]
  -[CNContactStyle textColor]
  -[CNContactStyle suggestedValueTextColor]
  -[CNContactStyle sectionMaximumPlatterWidth]
  -[CNContactStyle setSectionIndexBackgroundColor:]
  -[CNContactStyle setBlueSelectionSecondaryTextColor:]
  -[CNContactStyle listTextColor]
  -[CNContactStyle setOverridenStyle:]
  -[CNContactStyle setModalTransitionStyle:]
  -[CNContactStyle transportBorderColor]
  -[CNContactStyle sectionCornerRadius]
  -[CNContactStyle boldTextFont]
  -[CNContactStyle setTaglineTextColor:]
  -[CNContactStyle suggestedLabelTextColor]
  -[CNContactStyle setHighlightedTextColor:]
  -[CNContactStyle notesTextColor]
  -[CNContactStyle inlineActionsViewStyle]
  -[CNContactStyle setSectionContentInset:]
  -[CNContactStyle setSectionHeaderTextColor:]
  -[CNContactStyle setSectionCornerRadius:]
  -[CNContactStyle setSectionMaximumPlatterWidth:]
  -[CNContactStyle init]
  -[CNContactStyle sectionBackgroundColor]
  -[CNContactStyle setShouldPresentInCurrentContext:]
  -[CNContactStyle usesOpaqueBackground]
  -[CNContactStyle contactViewPlatterStyle]
  -[CNContactStyle initWithCoder:]
  -[CNContactStyle setGroupedBackgroundColor:]
  -[CNContactStyle setTransportBorderColor:]


CNUIFamilyMemberContactItem : NSObject <NSCopying>
 @property  NSString *contactIdentifier
 @property  NSString *label
 @property  NSString *detailLabel
 @property  BOOL unreachable

  // class methods
  +[CNUIFamilyMemberContactItem familyMemberContactItemFromCoreFamilyMemberContactItem:]
  +[CNUIFamilyMemberContactItem typeLabelStringFromContactType:]

  // instance methods
  -[CNUIFamilyMemberContactItem contactIdentifier]
  -[CNUIFamilyMemberContactItem initWithLabel:]
  -[CNUIFamilyMemberContactItem .cxx_destruct]
  -[CNUIFamilyMemberContactItem copyWithZone:]
  -[CNUIFamilyMemberContactItem label]
  -[CNUIFamilyMemberContactItem isEqual:]
  -[CNUIFamilyMemberContactItem init]
  -[CNUIFamilyMemberContactItem initWithLabel:detailLabel:unreachable:]
  -[CNUIFamilyMemberContactItem initWithContactIdentifier:label:detailLabel:unreachable:]
  -[CNUIFamilyMemberContactItem detailLabel]
  -[CNUIFamilyMemberContactItem isUnreachable]


CNContactListViewController : UICollectionViewController <CNContactDataSourceDelegate, UISearchControllerDelegate, UISearchResultsUpdating, UISearchBarDelegate, CNContactListBannerViewDelegate, CNContactListDuplicatesBannerCellDelegate, CNContactViewControllerDelegate, CNDuplicateContactsControllerDelegate, CNContactListCountViewDelegate, CNContactListCollectionViewDelegate, UIGestureRecognizerDelegate, CNUIObjectViewControllerDelegate, UICollectionViewDragSource, UICollectionViewDragDestination, UICollectionViewDragDelegate, UICollectionViewDropDelegate, UICollectionViewDelegate_Private, CNVCardImportControllerPresentationDelegate, CNVCardImportControllerDelegate, CNAvatarViewControllerDelegate, CNContactSuggestionsViewControllerDelegate, CNContactListActionHelperDelegate, TPKContentControllerDelegate>
 @property  UISearchController *searchController
 @property  UISearchBar *searchBar
 @property  @? searchCompletionBlock
 @property  BOOL shouldDisplayTipContentView
 @property  UIView *tipContentView
 @property  TPKContentController *tipContentController
 @property  TPKContent *tipContent
 @property  CNContactSuggestionsViewController *suggestionsController
 @property  double suggestionsControllerHeight
 @property  CNContactListBannerView *meContactBanner
 @property  CNContact *preferredForNameMeContact
 @property  double contentOffsetDueToMeContactBanner
 @property  BOOL presentsSearchUI
 @property  CNUIContactsEnvironment *environment
 @property  CNAvatarViewController *meBannerAvatarController
 @property  NSArray *pendingLayoutBlocks
 @property  NSString *pendingSearchQuery
 @property  BOOL pendingSearchControllerActivation
 @property  CNVCardImportController *vCardImportController
 @property  BOOL shouldUseLargeTitle
 @property  BOOL headerViewNeedsUpdate
 @property  NSSet *emergencyContactIdentifiers
 @property  <CNHealthStoreManagerToken> *medicalIDLookupRegistrationToken
 @property  <CNCancelable> *medicalIDLookupToken
 @property  CNContactListStyleApplier *defaultContactListStyleApplier
 @property  BOOL allowsMultiSelection
 @property  NSIndexPath *indexPathToSelect
 @property  CNContactListActionHelper *actionHelper
 @property  CNDuplicateContactsController *duplicatesController
 @property  BOOL isDuplicatesLaunching
 @property  BOOL isViewingTopLevelAllContacts
 @property  BOOL isShowingDuplicatesBanner
 @property  CNContactListViewController *searchResultsController
 @property  BOOL isHandlingSearch
 @property  BOOL shouldDisplayGroupsGrid
 @property  BOOL shouldDisplayCount
 @property  BOOL shouldAllowDrags
 @property  BOOL shouldAllowDrops
 @property  BOOL shouldDisplayEmergencyContacts
 @property  CNContactListStyleApplier *contactListStyleApplier
 @property  <CNContactDataSource> *originalDataSource
 @property  NSString *currentSearchString
 @property  BOOL shouldAllowSearchForMultiSelect
 @property  BOOL didDeleteContact
 @property  BOOL shouldDisplaySuggestionsController
 @property  NSArray *suggestionsIgnoredContactIdentifiers
 @property  NSArray *suggestionsInteractionDomains
 @property  NSArray *suggestedContacts
 @property  UIView *listHeaderView
 @property  double estimatedListHeaderViewHeight
 @property  BOOL allowsMultiSelectContextMenus
 @property  BOOL allowsEditingActions
 @property  BOOL allowsListEditing
 @property  BOOL shouldDisplayAddNewContactRow
 @property  BOOL shouldHideDuplicates
 @property  <CNContactListViewControllerDelegate> *delegate
 @property  NSObject<CNContactDataSource> *dataSource
 @property  CNContactListViewController *visibleListViewController
 @property  BOOL shouldDisplayMeContactBanner
 @property  NSString *meContactBannerFootnoteLabel
 @property  NSString *meContactBannerFootnoteValue
 @property  BOOL searching
 @property  NSArray *selectedContacts
 @property  CNContactFormatter *contactFormatter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactListViewController collectionViewLayout]
  +[CNContactListViewController layoutSectionForLayoutConfiguration:layoutEnvironment:section:contactListStyleApplier:shouldDisplaySupplementaryHeaderItemForSection:headerViewsFloat:directionalLayoutMargins:collectionViewIsShowingIndexBar:]
  +[CNContactListViewController collectionViewLayoutWithFloatingHeaderViews:contactListStyleApplier:trailingSwipeActionsProvider:shouldDisplaySupplementaryHeaderItemForSection:shouldShowSeparatorsForSection:directionalLayoutMargins:collectionViewIsShowingIndexBar:numberOfItemsInSection:]
  +[CNContactListViewController descriptorForRequiredKeysForPreferredForNameMeContact]
  +[CNContactListViewController emptyContact]

  // instance methods
  -[CNContactListViewController createNewContactRowSection]
  -[CNContactListViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNContactListViewController pendingLayoutBlocks]
  -[CNContactListViewController containsPathToCreateNewContactRow:]
  -[CNContactListViewController collectionView:itemsForBeginningDragSession:atIndexPath:]
  -[CNContactListViewController dataSourceSectionIndexForCollectionViewSection:]
  -[CNContactListViewController pathToDuplicatesBanner]
  -[CNContactListViewController contactListStyleApplier]
  -[CNContactListViewController containsPathToDuplicatesBanner:]
  -[CNContactListViewController contactProvidersOnPasteboard]
  -[CNContactListViewController _updateContentUnavailableConfigurationUsingState:]
  -[CNContactListViewController isPerformingDuplicatesMerge]
  -[CNContactListViewController collectionView:cellForItemAtIndexPath:]
  -[CNContactListViewController copyContacts:]
  -[CNContactListViewController showingGroup]
  -[CNContactListViewController suggestionsController]
  -[CNContactListViewController additionalSectionsAtTopCount]
  -[CNContactListViewController selectedContacts]
  -[CNContactListViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[CNContactListViewController setAllowsEditingActions:]
  -[CNContactListViewController newDuplicatesCountToDisplay]
  -[CNContactListViewController collectionView:performDropWithCoordinator:]
  -[CNContactListViewController collectionView:indexPathForIndexTitle:atIndex:]
  -[CNContactListViewController setupVCardImportController]
  -[CNContactListViewController dismissKeyboard]
  -[CNContactListViewController showCardForSelectedContactAtIndexPath:]
  -[CNContactListViewController visibleListViewController]
  -[CNContactListViewController refreshTableViewHeaderWithSize:]
  -[CNContactListViewController refreshTableViewHeaderIfVisibleWithSize:]
  -[CNContactListViewController setCellStateSelected:forContact:animated:]
  -[CNContactListViewController updateMeContactBannerTopKeyline]
  -[CNContactListViewController setNeedsHeaderViewUpdate]
  -[CNContactListViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[CNContactListViewController setTipContentView:]
  -[CNContactListViewController deselectAllItemsExceptIndexPath:]
  -[CNContactListViewController dataSource]
  -[CNContactListViewController trailingSwipeActionsConfigurationProvider]
  -[CNContactListViewController didPerformDuplicatesMerge:]
  -[CNContactListViewController collectionView:itemsForAddingToDragSession:atIndexPath:point:]
  -[CNContactListViewController setShouldDisplayAddNewContactRow:]
  -[CNContactListViewController actionHelper]
  -[CNContactListViewController contactDataSourceDidChange:]
  -[CNContactListViewController shouldDisplayAddNewContactRow]
  -[CNContactListViewController allowsMultiSelection]
  -[CNContactListViewController refreshTableViewHeader]
  -[CNContactListViewController setShouldAllowDrops:]
  -[CNContactListViewController tipContentView]
  -[CNContactListViewController contactForActionsAtIndexPath:forMultiSelectAction:]
  -[CNContactListViewController setContactListStyleApplier:]
  -[CNContactListViewController _sections]
  -[CNContactListViewController vCardImportController]
  -[CNContactListViewController startSearchingForString:]
  -[CNContactListViewController setDelegate:]
  -[CNContactListViewController disableSearchUI]
  -[CNContactListViewController _contactCountTelemetry:]
  -[CNContactListViewController collectionView:shouldDeselectItemAtIndexPath:]
  -[CNContactListViewController suggestionsControllerHeight]
  -[CNContactListViewController reconfigureVisibleItems]
  -[CNContactListViewController indexPathToSelect]
  -[CNContactListViewController collectionView:didDeselectItemAtIndexPath:]
  -[CNContactListViewController setupForMultiSelection]
  -[CNContactListViewController pendingSearchQuery]
  -[CNContactListViewController contentSizeCategoryDidChange:]
  -[CNContactListViewController selectContact:animated:scrollPosition:]
  -[CNContactListViewController setShouldAllowSearchForMultiSelect:]
  -[CNContactListViewController tipContent]
  -[CNContactListViewController didPresentSearchController:]
  -[CNContactListViewController updateMeContactBannerContentsWithTopKeyline:]
  -[CNContactListViewController _contentUnavailableConfigurationState]
  -[CNContactListViewController currentSearchString]
  -[CNContactListViewController indexPathForGlobalIndex:]
  -[CNContactListViewController shouldDisplayCount]
  -[CNContactListViewController reloadTitle]
  -[CNContactListViewController collectionView:performPrimaryActionForItemAtIndexPath:]
  -[CNContactListViewController medicalIDLookupToken]
  -[CNContactListViewController defaultContactListStyleApplier]
  -[CNContactListViewController collectionView:shouldSelectItemAtIndexPath:]
  -[CNContactListViewController selectContact:animated:scrollPosition:shouldScroll:]
  -[CNContactListViewController delegate]
  -[CNContactListViewController collectionView:canPerformPrimaryActionForItemAtIndexPath:]
  -[CNContactListViewController actionDidFinish:]
  -[CNContactListViewController suggestionsController:didChangeToHeight:]
  -[CNContactListViewController scrollToItemAtIndexPath:animated:scrollPosition:]
  -[CNContactListViewController updateSelectedContactCount]
  -[CNContactListViewController collectionView:dropSessionDidUpdate:withDestinationIndexPath:]
  -[CNContactListViewController numberOfSectionsInCollectionView:]
  -[CNContactListViewController setPendingSearchControllerActivation:]
  -[CNContactListViewController removeDuplicatesBanner]
  -[CNContactListViewController viewDidAppear:]
  -[CNContactListViewController isDuplicatesLaunching]
  -[CNContactListViewController searchController]
  -[CNContactListViewController refreshTableViewHeaderIfVisible]
  -[CNContactListViewController estimatedListHeaderViewHeight]
  -[CNContactListViewController setShouldDisplaySuggestionsController:]
  -[CNContactListViewController refreshDuplicatesBanner]
  -[CNContactListViewController setSuggestionsController:]
  -[CNContactListViewController shouldDisplaySupplementaryHeaderItemForSection:]
  -[CNContactListViewController dealloc]
  -[CNContactListViewController shouldDisplayMeContactBanner]
  -[CNContactListViewController canSelectContactAtIndexPath:]
  -[CNContactListViewController startHandlingEmergencyContacts]
  -[CNContactListViewController listActionHelper:didUpdateWithMenu:]
  -[CNContactListViewController shouldUseLargeTitle]
  -[CNContactListViewController updateAdditionalSectionsAtTop]
  -[CNContactListViewController createCollectionView]
  -[CNContactListViewController setupContactListForMultiSelectContextMenus]
  -[CNContactListViewController indexTitlesForCollectionView:]
  -[CNContactListViewController setSearchResultsController:]
  -[CNContactListViewController headerViewNeedsUpdate]
  -[CNContactListViewController shouldAllowDrops]
  -[CNContactListViewController .cxx_destruct]
  -[CNContactListViewController contentController:contentDidBecomeAvailable:animated:]
  -[CNContactListViewController isDuplicatesRowSection:]
  -[CNContactListViewController selectPreviousContact:]
  -[CNContactListViewController didUpdateContentForAvatarViewController:]
  -[CNContactListViewController _searchBarDidEndEditing:]
  -[CNContactListViewController canPerformAction:withSender:]
  -[CNContactListViewController isShowingDuplicatesBanner]
  -[CNContactListViewController setVCardImportController:]
  -[CNContactListViewController viewDidLoad]
  -[CNContactListViewController vCardImportController:presentViewController:animated:]
  -[CNContactListViewController duplicatesBannerCellDidTapViewDuplicates:]
  -[CNContactListViewController tipContentController]
  -[CNContactListViewController searchResultsController]
  -[CNContactListViewController shouldAllowDrags]
  -[CNContactListViewController contentController:contentViewNeedsLayout:]
  -[CNContactListViewController initializeDuplicateContacts]
  -[CNContactListViewController updateDataSourceAndCollectionViewForDuplicatesBanner]
  -[CNContactListViewController viewWillAppear:]
  -[CNContactListViewController isContactWithIdentifierMeContactOrLinkedToMeContact:]
  -[CNContactListViewController loadView]
  -[CNContactListViewController isShowingAllContacts]
  -[CNContactListViewController listHeaderView]
  -[CNContactListViewController performWhenSearchCompleted:]
  -[CNContactListViewController suggestionsIgnoredContactIdentifiers]
  -[CNContactListViewController updateIsViewingTopLevelAllContacts]
  -[CNContactListViewController configureNavigationBarForLargeTitles]
  -[CNContactListViewController setListHeaderView:]
  -[CNContactListViewController contactDataSourceMeContactDidChange:]
  -[CNContactListViewController deselectAllSelectedIndexPathsAnimated:]
  -[CNContactListViewController setSearchCompletionBlock:]
  -[CNContactListViewController setMedicalIDLookupRegistrationToken:]
  -[CNContactListViewController presentsSearchUI]
  -[CNContactListViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[CNContactListViewController viewDidLayoutSubviews]
  -[CNContactListViewController setShouldDisplayTipContentView:]
  -[CNContactListViewController shouldDisplayGroupsGrid]
  -[CNContactListViewController canManageDuplicateContacts]
  -[CNContactListViewController duplicatesBannerCellDidTapDismiss:]
  -[CNContactListViewController setActionHelper:]
  -[CNContactListViewController bundleCanManageDuplicates]
  -[CNContactListViewController cancelSearch:]
  -[CNContactListViewController startSearching]
  -[CNContactListViewController contentController:didFinishWithContent:animated:]
  -[CNContactListViewController setShouldDisplayMeContactBanner:]
  -[CNContactListViewController hasNoContacts]
  -[CNContactListViewController setIsShowingDuplicatesBanner:]
  -[CNContactListViewController setSuggestionsInteractionDomains:]
  -[CNContactListViewController setDidDeleteContact:]
  -[CNContactListViewController setMedicalIDLookupToken:]
  -[CNContactListViewController collectionViewIndexPathForDataSourceIndexPath:]
  -[CNContactListViewController setPendingSearchQuery:]
  -[CNContactListViewController mergeUnifyContacts:]
  -[CNContactListViewController collectionViewShouldDisplayCreateNewContact]
  -[CNContactListViewController _applicationEnteringForeground:]
  -[CNContactListViewController observeValueForKeyPath:ofObject:change:context:]
  -[CNContactListViewController allowsEditingActions]
  -[CNContactListViewController collectionView:canHandleDropSession:]
  -[CNContactListViewController setIsDuplicatesLaunching:]
  -[CNContactListViewController isHandlingSearch]
  -[CNContactListViewController dragItemsForIndexPath:]
  -[CNContactListViewController isValidIndexPath:]
  -[CNContactListViewController presentingViewControllerForActions]
  -[CNContactListViewController duplicatesController]
  -[CNContactListViewController isContactWithIdentifierEmergencyContact:]
  -[CNContactListViewController hostingViewControllerForController:]
  -[CNContactListViewController setDefaultContactListStyleApplier:]
  -[CNContactListViewController dataSourceIndexPathForCollectionViewIndexPath:]
  -[CNContactListViewController allDuplicatesCountToDisplay]
  -[CNContactListViewController suggestionsController:didSelectContact:]
  -[CNContactListViewController pathToCreateNewContactRow]
  -[CNContactListViewController setSearchBar:]
  -[CNContactListViewController medicalIDLookupRegistrationToken]
  -[CNContactListViewController _updateCountStringNow:]
  -[CNContactListViewController mergableContacts]
  -[CNContactListViewController setMeContactBannerFootnoteValue:]
  -[CNContactListViewController collectionView:contextMenuConfigurationForItemsAtIndexPaths:point:]
  -[CNContactListViewController action:presentViewController:]
  -[CNContactListViewController duplicatesDidChange:]
  -[CNContactListViewController hasSearchPrefix]
  -[CNContactListViewController _contactAtCollectionViewIndexPath:]
  -[CNContactListViewController shouldDisplayTipContentView]
  -[CNContactListViewController initWithCollectionViewLayout:]
  -[CNContactListViewController shouldHideDuplicates]
  -[CNContactListViewController canSelectContactAtCollectionViewIndexPath:]
  -[CNContactListViewController setIsHandlingSearch:]
  -[CNContactListViewController updateDuplicatesCountBanner]
  -[CNContactListViewController setSearchController:]
  -[CNContactListViewController pendingSearchControllerActivation]
  -[CNContactListViewController initWithDataSource:shouldUseLargeTitle:]
  -[CNContactListViewController collectionView:canEditItemAtIndexPath:]
  -[CNContactListViewController setDataSource:]
  -[CNContactListViewController meBannerAvatarController]
  -[CNContactListViewController collectionViewIsShowingIndexBar]
  -[CNContactListViewController fetchDuplicatesCount]
  -[CNContactListViewController meContactBanner]
  -[CNContactListViewController shouldDisplayEmergencyContacts]
  -[CNContactListViewController isSearching]
  -[CNContactListViewController setHeaderViewNeedsUpdate:]
  -[CNContactListViewController refreshTableViewHeaderForContactChanges]
  -[CNContactListViewController suggestionsController:canSelectContact:]
  -[CNContactListViewController setSuggestionsControllerHeight:]
  -[CNContactListViewController updateSearchResultsForSearchController:]
  -[CNContactListViewController setMeContactBanner:]
  -[CNContactListViewController meContactBannerFootnoteValue]
  -[CNContactListViewController willDismissSearchController:]
  -[CNContactListViewController canPerformDuplicatesMerge]
  -[CNContactListViewController refreshDuplicates]
  -[CNContactListViewController suggestionsInteractionDomains]
  -[CNContactListViewController collectionView:didSelectItemAtIndexPath:]
  -[CNContactListViewController initWithDataSource:environment:shouldUseLargeTitle:]
  -[CNContactListViewController contextMenuConfigurationForContactsAtIndexPaths:]
  -[CNContactListViewController bannerView:wasSelectedToPresentMeContact:]
  -[CNContactListViewController contentOffsetDueToMeContactBanner]
  -[CNContactListViewController getVisibleIndexPaths]
  -[CNContactListViewController isShowingServerSearch]
  -[CNContactListViewController setShouldAllowDrags:]
  -[CNContactListViewController pasteContacts:]
  -[CNContactListViewController setShouldHideDuplicates:]
  -[CNContactListViewController meContactBannerFootnoteLabel]
  -[CNContactListViewController setAllowsMultiSelectContextMenus:]
  -[CNContactListViewController preferredForNameMeContact]
  -[CNContactListViewController viewWillDisappear:]
  -[CNContactListViewController shouldShowDuplicateBannerView]
  -[CNContactListViewController reloadVisibleItems]
  -[CNContactListViewController copy:]
  -[CNContactListViewController isPathToCreateNewContactRow:]
  -[CNContactListViewController setTipContent:]
  -[CNContactListViewController checkForInfoContentWithContext:]
  -[CNContactListViewController collectionView:shouldBeginMultipleSelectionInteractionAtIndexPath:]
  -[CNContactListViewController addContactsToListTappedWithSourceView:]
  -[CNContactListViewController collectionView:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[CNContactListViewController scrollTopToContactWithIdentifier:animated:]
  -[CNContactListViewController setShouldDisplayEmergencyContacts:]
  -[CNContactListViewController _contactAtIndexPath:]
  -[CNContactListViewController canBecomeFirstResponder]
  -[CNContactListViewController performWhenViewIsLaidOut:]
  -[CNContactListViewController setDuplicatesController:]
  -[CNContactListViewController contentUnavailableConfigurationForState:]
  -[CNContactListViewController collectionView:contextMenuConfiguration:dismissalPreviewForItemAtIndexPath:]
  -[CNContactListViewController isPathToDuplicatesBanner:]
  -[CNContactListViewController contactStore]
  -[CNContactListViewController setIsViewingTopLevelAllContacts:]
  -[CNContactListViewController collectionView:numberOfItemsInSection:]
  -[CNContactListViewController setupDuplicatesController]
  -[CNContactListViewController isCreateNewContactRowSection:]
  -[CNContactListViewController adjustTableViewOffsetForIncomingSearchUI]
  -[CNContactListViewController didDeleteContact]
  -[CNContactListViewController searchForString:animated:completionBlock:]
  -[CNContactListViewController shouldEnableMultiSelectContextMenus]
  -[CNContactListViewController suggestedContacts]
  -[CNContactListViewController deleteContact:]
  -[CNContactListViewController suggestionsController:didDeselectContact:]
  -[CNContactListViewController setAllowsMultiSelection:]
  -[CNContactListViewController contactFormatter]
  -[CNContactListViewController contactListHeaderHeight]
  -[CNContactListViewController shouldDisplaySuggestionsController]
  -[CNContactListViewController shouldAllowSearchForMultiSelect]
  -[CNContactListViewController setEmergencyContactIdentifiers:]
  -[CNContactListViewController emergencyContactIdentifiers]
  -[CNContactListViewController allowsMultiSelectContextMenus]
  -[CNContactListViewController reloadContacts]
  -[CNContactListViewController setupMeBannerAvatarController]
  -[CNContactListViewController ignoredContactIdentifiersForSuggestionsController:]
  -[CNContactListViewController setShouldDisplayGroupsGrid:]
  -[CNContactListViewController numberOfSections]
  -[CNContactListViewController contactStoreDidChangeWithNotification:]
  -[CNContactListViewController willPresentSearchController:]
  -[CNContactListViewController setIndexPathToSelect:]
  -[CNContactListViewController collectionView:contextMenuConfiguration:highlightPreviewForItemAtIndexPath:]
  -[CNContactListViewController searchBarCancelButtonClicked:]
  -[CNContactListViewController setTipContentController:]
  -[CNContactListViewController searchBar]
  -[CNContactListViewController titleForHeaderInSection:]
  -[CNContactListViewController willPerformDuplicatesMerge:]
  -[CNContactListViewController shouldDisplayListHeaderView]
  -[CNContactListViewController isViewingTopLevelAllContacts]
  -[CNContactListViewController environment]
  -[CNContactListViewController initWithDataSource:searchable:environment:shouldUseLargeTitle:]
  -[CNContactListViewController searchCompletionBlock]
  -[CNContactListViewController setAllowsListEditing:]
  -[CNContactListViewController originalDataSource]
  -[CNContactListViewController suggestionsController:shouldSelectContact:atIndexPath:]
  -[CNContactListViewController beginSearch:]
  -[CNContactListViewController setContactFormatter:]
  -[CNContactListViewController setShouldDisplayCount:]
  -[CNContactListViewController applyStyle]
  -[CNContactListViewController setSuggestedContacts:]
  -[CNContactListViewController setMeBannerAvatarController:]
  -[CNContactListViewController selectNextContact:]
  -[CNContactListViewController allowsListEditing]
  -[CNContactListViewController filteredSearchString]
  -[CNContactListViewController shouldDisplayCreateNewContactAsRow]
  -[CNContactListViewController setEstimatedListHeaderViewHeight:]
  -[CNContactListViewController setSuggestionsIgnoredContactIdentifiers:]
  -[CNContactListViewController didSelectViewAllDuplicates]
  -[CNContactListViewController selectItemAtIndexPath:animated:scrollPosition:]
  -[CNContactListViewController didDismissSearchController:]
  -[CNContactListViewController contactDataSourceDidChangeDisplayName:]
  -[CNContactListViewController setMeContactBannerFootnoteLabel:]
  -[CNContactListViewController contactsForActionsAtIndexPaths:]
  -[CNContactListViewController globalIndexForCollectionViewIndexPath:]
  -[CNContactListViewController vCardImportController:didSaveContacts:]
  -[CNContactListViewController setPendingLayoutBlocks:]
  -[CNContactListViewController willMoveToParentViewController:]
  -[CNContactListViewController scrollToTopAnimated:]
  -[CNContactListViewController vCardImportControllerDidCompleteQueue:]
  -[CNContactListViewController createNewContactTapped]


CNPostalAddressEditorTableView : UITableView
  // instance methods
  -[CNPostalAddressEditorTableView intrinsicContentSize]


CNPostalAddressEditorView : UIControl <UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate, CNCountryPickerControllerDelegate, ABText>
 @property  CNPostalAddressEditorTableView *tableView
 @property  NSArray *cellsLayout
 @property  CNPostalAddressFormattingSpecification *formatSpecification
 @property  NSMutableDictionary *textFields
 @property  CNPostalAddress *address
 @property  UIColor *separatorColor
 @property  long long lineCount
 @property  <CNPresenterDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *ab_text
 @property  NSDictionary *ab_textAttributes

  // instance methods
  -[CNPostalAddressEditorView tableView:cellForRowAtIndexPath:]
  -[CNPostalAddressEditorView tableView:numberOfRowsInSection:]
  -[CNPostalAddressEditorView isFirstResponder]
  -[CNPostalAddressEditorView becomeFirstResponder]
  -[CNPostalAddressEditorView setDelegate:]
  -[CNPostalAddressEditorView contentSizeCategoryDidChange:]
  -[CNPostalAddressEditorView textFieldDidBeginEditing:]
  -[CNPostalAddressEditorView tableView:willDisplayCell:forRowAtIndexPath:]
  -[CNPostalAddressEditorView delegate]
  -[CNPostalAddressEditorView setAddress:]
  -[CNPostalAddressEditorView setSeparatorColor:]
  -[CNPostalAddressEditorView dealloc]
  -[CNPostalAddressEditorView .cxx_destruct]
  -[CNPostalAddressEditorView tableView]
  -[CNPostalAddressEditorView setEnabled:]
  -[CNPostalAddressEditorView separatorColor]
  -[CNPostalAddressEditorView lineCount]
  -[CNPostalAddressEditorView address]
  -[CNPostalAddressEditorView setTableView:]
  -[CNPostalAddressEditorView setBackgroundColor:]
  -[CNPostalAddressEditorView keyboardWillShow:]
  -[CNPostalAddressEditorView canBecomeFirstResponder]
  -[CNPostalAddressEditorView initWithFrame:]
  -[CNPostalAddressEditorView _countryCode]
  -[CNPostalAddressEditorView textFields]
  -[CNPostalAddressEditorView textFieldChanged:]
  -[CNPostalAddressEditorView countryPicker:didPickCountryCode:]
  -[CNPostalAddressEditorView countryPickerDidCancel:]
  -[CNPostalAddressEditorView ab_text]
  -[CNPostalAddressEditorView setAb_text:]
  -[CNPostalAddressEditorView ab_textAttributes]
  -[CNPostalAddressEditorView setAb_textAttributes:]
  -[CNPostalAddressEditorView _invalidateCellsLayout]
  -[CNPostalAddressEditorView cellsLayout]
  -[CNPostalAddressEditorView _setAddressValue:forKey:]
  -[CNPostalAddressEditorView _addressValueForKey:]
  -[CNPostalAddressEditorView _normalizeCountryCodeToISO:]
  -[CNPostalAddressEditorView _cellsLayoutForCountryCode:]
  -[CNPostalAddressEditorView keyboardSettingsForAddress:component:]
  -[CNPostalAddressEditorView setCellsLayout:]
  -[CNPostalAddressEditorView formatSpecification]
  -[CNPostalAddressEditorView setFormatSpecification:]


CNMeCardSharingDataSource : NSObject
 @property  unsigned long meCardSharingStatus

  // class methods
  +[CNMeCardSharingDataSource localizedStringForMeCardSharingStatus:]

  // instance methods
  -[CNMeCardSharingDataSource init]
  -[CNMeCardSharingDataSource setMeCardSharingStatus:]
  -[CNMeCardSharingDataSource localizedStringForMeCardSharingStatus]
  -[CNMeCardSharingDataSource meCardSharingStatus]


CNMeCardSharingSettingsNameDataSource : NSObject <CNMeCardSharingSectionDataSource>
 @property  CNContact *contact
 @property  NSArray *items
 @property  NSString *formattedName
 @property  unsigned long selectedIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNMeCardSharingSettingsNameDataSource contact]
  -[CNMeCardSharingSettingsNameDataSource setItems:]
  -[CNMeCardSharingSettingsNameDataSource numberOfItems]
  -[CNMeCardSharingSettingsNameDataSource .cxx_destruct]
  -[CNMeCardSharingSettingsNameDataSource items]
  -[CNMeCardSharingSettingsNameDataSource setContact:]
  -[CNMeCardSharingSettingsNameDataSource formattedName]
  -[CNMeCardSharingSettingsNameDataSource didSelectItemAtIndex:]
  -[CNMeCardSharingSettingsNameDataSource supportsSelection]
  -[CNMeCardSharingSettingsNameDataSource sectionHeaderLabel]
  -[CNMeCardSharingSettingsNameDataSource sectionFooterLabel]
  -[CNMeCardSharingSettingsNameDataSource itemForIndex:]
  -[CNMeCardSharingSettingsNameDataSource setFormattedName:]


CNPhotoPickerProviderItem : NSObject <NSCopying>
 @property  UIImage *fullSizeImage
 @property  UIImage *croppedFullSizeImage
 @property  UIImage *thumbnailImage
 @property  UIImage *loadingPlaceholderImage
 @property  NSData *imageData
 @property  NSData *thumbnailImageData
 @property  NSData *fullscreenImageData
 @property  NSData *filteredImageData
 @property  NSString *imageFilterName
 @property  NSString *localizedVariantDisplayName
 @property  NSData *originalImageData
 @property  NSString *recentsIdentifier
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  unsigned long imageType
 @property  BOOL allowsEditing
 @property  BOOL allowsVariants
 @property  BOOL allowsMoveAndScale
 @property  BOOL shouldShowCaption
 @property  NSString *localizedVariantsTitle
 @property  NSString *variantIdentifier
 @property  <CNScheduler> *renderingQueue
 @property  <CNScheduler> *callbackQueue
 @property  NSDate *sortDate
 @property  <CNPhotoPickerProviderItemDelegate> *delegate

  // class methods
  +[CNPhotoPickerProviderItem thumbnailViewForImage:]

  // instance methods
  -[CNPhotoPickerProviderItem cropRect]
  -[CNPhotoPickerProviderItem setAllowsEditing:]
  -[CNPhotoPickerProviderItem allowsEditing]
  -[CNPhotoPickerProviderItem setDelegate:]
  -[CNPhotoPickerProviderItem delegate]
  -[CNPhotoPickerProviderItem callbackQueue]
  -[CNPhotoPickerProviderItem imageType]
  -[CNPhotoPickerProviderItem .cxx_destruct]
  -[CNPhotoPickerProviderItem imageData]
  -[CNPhotoPickerProviderItem copyWithZone:]
  -[CNPhotoPickerProviderItem variantIdentifier]
  -[CNPhotoPickerProviderItem thumbnailImage]
  -[CNPhotoPickerProviderItem updateContact:]
  -[CNPhotoPickerProviderItem isEqual:]
  -[CNPhotoPickerProviderItem setImageData:]
  -[CNPhotoPickerProviderItem sortDate]
  -[CNPhotoPickerProviderItem fullscreenImageData]
  -[CNPhotoPickerProviderItem thumbnailImageData]
  -[CNPhotoPickerProviderItem initWithImageData:thumbnailImageData:fullscreenImageData:cropRect:]
  -[CNPhotoPickerProviderItem setThumbnailImageData:]
  -[CNPhotoPickerProviderItem setFullscreenImageData:]
  -[CNPhotoPickerProviderItem renderingQueue]
  -[CNPhotoPickerProviderItem allowsVariants]
  -[CNPhotoPickerProviderItem allowsMoveAndScale]
  -[CNPhotoPickerProviderItem initWithImageData:thumbnailImageData:fullscreenImageData:imageFilterName:cropRect:renderingQueue:callbackQueue:]
  -[CNPhotoPickerProviderItem shouldShowCaption]
  -[CNPhotoPickerProviderItem localizedVariantsTitle]
  -[CNPhotoPickerProviderItem originalImageData]
  -[CNPhotoPickerProviderItem generateAllImageDatasIfNeeded]
  -[CNPhotoPickerProviderItem generateThumbnailImageDataIfNeeded]
  -[CNPhotoPickerProviderItem generateThumbnailImageDataWithData:]
  -[CNPhotoPickerProviderItem clearThumbnailImage]
  -[CNPhotoPickerProviderItem thumbnailViewWithPlaceholderProvider:completion:]
  -[CNPhotoPickerProviderItem thumbnailViewWithCompletion:]
  -[CNPhotoPickerProviderItem fullSizeViewWithCompletion:]
  -[CNPhotoPickerProviderItem fullSizeImage]
  -[CNPhotoPickerProviderItem croppedFullSizeImage]
  -[CNPhotoPickerProviderItem applyVariantEffectToFullsizeImageWithCompletion:]
  -[CNPhotoPickerProviderItem updateVisualIdentity:]
  -[CNPhotoPickerProviderItem createVariantsItemsWithVariantsManager:]
  -[CNPhotoPickerProviderItem generatePhotoFilterVariants]
  -[CNPhotoPickerProviderItem rotateImageDataIfNeeded:]
  -[CNPhotoPickerProviderItem contactImageForMetadataStore]
  -[CNPhotoPickerProviderItem updateTintColorIfNeeded:]
  -[CNPhotoPickerProviderItem recentsIdentifier]
  -[CNPhotoPickerProviderItem setRecentsIdentifier:]
  -[CNPhotoPickerProviderItem localizedVariantDisplayName]
  -[CNPhotoPickerProviderItem setLocalizedVariantDisplayName:]
  -[CNPhotoPickerProviderItem setSortDate:]
  -[CNPhotoPickerProviderItem setFullSizeImage:]
  -[CNPhotoPickerProviderItem setCroppedFullSizeImage:]
  -[CNPhotoPickerProviderItem setThumbnailImage:]
  -[CNPhotoPickerProviderItem loadingPlaceholderImage]
  -[CNPhotoPickerProviderItem setLoadingPlaceholderImage:]
  -[CNPhotoPickerProviderItem filteredImageData]
  -[CNPhotoPickerProviderItem setFilteredImageData:]
  -[CNPhotoPickerProviderItem imageFilterName]
  -[CNPhotoPickerProviderItem setImageFilterName:]


ABPostalNameGroupItem : CNCardGroupItem
 @property  CNMutableContact *contact
 @property  SEL setter
 @property  NSString *value
 @property  NSString *property
 @property  NSString *placeholder

  // instance methods
  -[ABPostalNameGroupItem setProperty:]
  -[ABPostalNameGroupItem property]
  -[ABPostalNameGroupItem contact]
  -[ABPostalNameGroupItem .cxx_destruct]
  -[ABPostalNameGroupItem placeholder]
  -[ABPostalNameGroupItem setValue:]
  -[ABPostalNameGroupItem value]
  -[ABPostalNameGroupItem setContact:]
  -[ABPostalNameGroupItem setPlaceholder:]
  -[ABPostalNameGroupItem setter]
  -[ABPostalNameGroupItem setSetter:]


ABPostalNameContactEditingCell : CNContactCell <UITextFieldDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ABPostalNameContactEditingCell initWithStyle:reuseIdentifier:]
  -[ABPostalNameContactEditingCell dealloc]
  -[ABPostalNameContactEditingCell .cxx_destruct]
  -[ABPostalNameContactEditingCell prepareForReuse]
  -[ABPostalNameContactEditingCell layoutSubviews]
  -[ABPostalNameContactEditingCell setCardGroupItem:]
  -[ABPostalNameContactEditingCell _cnui_applyContactStyle]
  -[ABPostalNameContactEditingCell textFieldDidChange:]
  -[ABPostalNameContactEditingCell firstResponderItem]


CNPostalAddressEditorViewController : UITableViewController <CNPresenterDelegate, CNPropertyCellDelegate>
 @property  BOOL isPresentingModalViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPostalAddressEditorViewController cellIdentifierForEditingProperty:]
  +[CNPostalAddressEditorViewController cellIdentifierForClass:]

  // instance methods
  -[CNPostalAddressEditorViewController done:]
  -[CNPostalAddressEditorViewController cancel:]
  -[CNPostalAddressEditorViewController tableView:cellForRowAtIndexPath:]
  -[CNPostalAddressEditorViewController tableView:numberOfRowsInSection:]
  -[CNPostalAddressEditorViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[CNPostalAddressEditorViewController contactViewCache]
  -[CNPostalAddressEditorViewController viewDidAppear:]
  -[CNPostalAddressEditorViewController .cxx_destruct]
  -[CNPostalAddressEditorViewController viewDidLoad]
  -[CNPostalAddressEditorViewController viewWillAppear:]
  -[CNPostalAddressEditorViewController tableViewSpacingForExtraSeparators:]
  -[CNPostalAddressEditorViewController sender:presentViewController:]
  -[CNPostalAddressEditorViewController sender:dismissViewController:]
  -[CNPostalAddressEditorViewController sender:dismissViewController:completionHandler:]
  -[CNPostalAddressEditorViewController isPresentingModalViewController]
  -[CNPostalAddressEditorViewController registerContactCellClass:]
  -[CNPostalAddressEditorViewController propertyCell:didUpdateItem:withNewLabel:]
  -[CNPostalAddressEditorViewController propertyCell:didUpdateItem:withNewValue:]
  -[CNPostalAddressEditorViewController propertyCell:performActionForItem:withTransportType:]
  -[CNPostalAddressEditorViewController propertyCellDidChangeLayout:]
  -[CNPostalAddressEditorViewController initWithContact:propertyKey:editNames:]
  -[CNPostalAddressEditorViewController _rebuildPropertyGroupItems:]
  -[CNPostalAddressEditorViewController validateContents]
  -[CNPostalAddressEditorViewController _startEditingFirstCell]


CNPropertyAction : CNContactAction
 @property  <CNPropertyActionDelegate> *delegate
 @property  NSArray *propertyItems
 @property  CNPropertyGroupItem *propertyItem

  // class methods
  +[CNPropertyAction performDefaultActionForItem:sender:]

  // instance methods
  -[CNPropertyAction .cxx_destruct]
  -[CNPropertyAction initWithContact:]
  -[CNPropertyAction canPerformAction]
  -[CNPropertyAction performActionWithSender:]
  -[CNPropertyAction performActionForItem:sender:]
  -[CNPropertyAction propertyItems]
  -[CNPropertyAction initWithContact:propertyItems:]
  -[CNPropertyAction propertyItem]
  -[CNPropertyAction initWithContact:propertyItem:]
  -[CNPropertyAction setPropertyItems:]
  -[CNPropertyAction presentDisambiguationAlertWithSender:]


CNWarningHeaderFooterView : CNContactTableViewHeaderFooterView
 @property  BOOL shouldDisplayWarningIcon
 @property  NSString *warningText

  // class methods
  +[CNWarningHeaderFooterView exclamationMark]

  // instance methods
  -[CNWarningHeaderFooterView .cxx_destruct]
  -[CNWarningHeaderFooterView warningAttributedText]
  -[CNWarningHeaderFooterView setWarningText:]
  -[CNWarningHeaderFooterView shouldDisplayWarningIcon]
  -[CNWarningHeaderFooterView setShouldDisplayWarningIcon:]
  -[CNWarningHeaderFooterView warningText]


CNContactStoreFilter : CNContactFilter
 @property  NSSet *groupIdentifiers
 @property  NSSet *containerIdentifiers
 @property  BOOL showsEverything
 @property  BOOL isServerFilter

  // class methods
  +[CNContactStoreFilter excludedContainerIdentifiersDictionaryKey]
  +[CNContactStoreFilter excludedGroupIdentifiersDictionaryKey]
  +[CNContactStoreFilter isServerFilterDictionaryKey]
  +[CNContactStoreFilter getContainerIdentifiers:groupIdentifiers:serverFilter:fromLegacyDictionary:contactStore:]
  +[CNContactStoreFilter getContainerIdentifiers:groupIdentifiers:serverFilter:fromSundanceToOkemoAndAddressBookUIDictionary:contactStore:]
  +[CNContactStoreFilter getContainerIdentifiers:groupIdentifiers:serverFilter:fromPreSundanceDictionary:contactStore:]
  +[CNContactStoreFilter contactStoreFilterFromPreferencesWithContactStore:]

  // instance methods
  -[CNContactStoreFilter saveToPreferencesWithContactStore:]
  -[CNContactStoreFilter setContainerIdentifiers:]
  -[CNContactStoreFilter predicate]
  -[CNContactStoreFilter supportsSections]
  -[CNContactStoreFilter .cxx_destruct]
  -[CNContactStoreFilter initWithDictionaryRepresentation:]
  -[CNContactStoreFilter groupIdentifiers]
  -[CNContactStoreFilter initWithDictionaryRepresentation:contactStore:]
  -[CNContactStoreFilter dictionaryRepresentation]
  -[CNContactStoreFilter isServerFilter]
  -[CNContactStoreFilter copyWithZone:]
  -[CNContactStoreFilter containerIdentifiers]
  -[CNContactStoreFilter showsEverything]
  -[CNContactStoreFilter setIsServerFilter:]
  -[CNContactStoreFilter setGroupIdentifiers:]
  -[CNContactStoreFilter addAddressBookUIKeysToDictionaryRepresentation:withAllContainers:excludedContainers:excludedGroups:]
  -[CNContactStoreFilter dictionaryRepresentationWithContactStore:]
  -[CNContactStoreFilter isEqual:]


CNPropertyAlertCell : CNPropertySimpleCell <CNPickerControllerDelegate>
 @property  CNPropertyGroupAlertItem *alertItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPropertyAlertCell shouldIndentWhileEditing]
  +[CNPropertyAlertCell wantsChevron]

  // instance methods
  -[CNPropertyAlertCell initWithStyle:reuseIdentifier:]
  -[CNPropertyAlertCell setCardGroupItem:]
  -[CNPropertyAlertCell shouldPerformDefaultAction]
  -[CNPropertyAlertCell performDefaultAction]
  -[CNPropertyAlertCell picker:didPickItem:]
  -[CNPropertyAlertCell pickerDidCancel:]
  -[CNPropertyAlertCell alertItem]
  -[CNPropertyAlertCell alertGroup]
  -[CNPropertyAlertCell allowsCellSelection]


CNPropertyAlertEditingCell : CNPropertyAlertCell
  // class methods
  +[CNPropertyAlertEditingCell wantsHorizontalLayout]

  // instance methods
  -[CNPropertyAlertEditingCell variableConstraints]
  -[CNPropertyAlertEditingCell minCellHeight]
  -[CNPropertyAlertEditingCell allowsCellSelection]


CNPropertyCell : CNLabeledCell
 @property  id property
 @property  CNPropertyGroupItem *propertyItem
 @property  UIResponder *firstResponderItem
 @property  BOOL allowsEditing
 @property  BOOL ignoreSuggested
 @property  BOOL forceSuggested
 @property  BOOL suggested
 @property  BOOL highlightedProperty
 @property  BOOL important
 @property  BOOL supportsTintColorValue
 @property  BOOL supportsValueColorUsesLabelColor
 @property  double labelWidth
 @property  <CNPropertyCellDelegate> *delegate
 @property  <CNPresenterDelegate> *presentingDelegate

  // class methods
  +[CNPropertyCell labelStringFromAppName:andPropertyLabel:]

  // instance methods
  -[CNPropertyCell setProperty:]
  -[CNPropertyCell presentingDelegate]
  -[CNPropertyCell initWithStyle:reuseIdentifier:]
  -[CNPropertyCell setPresentingDelegate:]
  -[CNPropertyCell property]
  -[CNPropertyCell setAllowsEditing:]
  -[CNPropertyCell allowsEditing]
  -[CNPropertyCell setDelegate:]
  -[CNPropertyCell delegate]
  -[CNPropertyCell valueString]
  -[CNPropertyCell .cxx_destruct]
  -[CNPropertyCell tintColorDidChange]
  -[CNPropertyCell copy:]
  -[CNPropertyCell isSuggested]
  -[CNPropertyCell isImportant]
  -[CNPropertyCell labelString]
  -[CNPropertyCell setCardGroupItem:]
  -[CNPropertyCell propertyItem]
  -[CNPropertyCell performDefaultAction]
  -[CNPropertyCell performAccessoryAction]
  -[CNPropertyCell supportsTintColorValue]
  -[CNPropertyCell updateWithPropertyItem:]
  -[CNPropertyCell setForceSuggested:]
  -[CNPropertyCell firstResponderItem]
  -[CNPropertyCell setPropertyItem:]
  -[CNPropertyCell shouldShowSuggestionOrigin]
  -[CNPropertyCell appNameForSuggestion:]
  -[CNPropertyCell supportsValueColorUsesLabelColor]
  -[CNPropertyCell updateValueWithPropertyItem:]
  -[CNPropertyCell ignoreSuggested]
  -[CNPropertyCell setIgnoreSuggested:]
  -[CNPropertyCell forceSuggested]
  -[CNPropertyCell isHighlightedProperty]
  -[CNPropertyCell setHighlightedProperty:]
  -[CNPropertyCell setImportant:]
  -[CNPropertyCell labelWidth]
  -[CNPropertyCell setLabelWidth:]


CNPropertyEditingCell : CNPropertyCell <CNPickerControllerDelegate>
 @property  CNRepeatingGradientSeparatorView *vseparator
 @property  UIButton *labelButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPropertyEditingCell wantsChevron]
  +[CNPropertyEditingCell wantsStandardConstraints]

  // instance methods
  -[CNPropertyEditingCell initWithStyle:reuseIdentifier:]
  -[CNPropertyEditingCell labelView]
  -[CNPropertyEditingCell valueString]
  -[CNPropertyEditingCell dealloc]
  -[CNPropertyEditingCell .cxx_destruct]
  -[CNPropertyEditingCell variableConstraints]
  -[CNPropertyEditingCell minCellHeight]
  -[CNPropertyEditingCell constantConstraints]
  -[CNPropertyEditingCell picker:didPickItem:]
  -[CNPropertyEditingCell pickerDidCancel:]
  -[CNPropertyEditingCell picker:didDeleteItem:]
  -[CNPropertyEditingCell setValueTextAttributes:]
  -[CNPropertyEditingCell updateWithPropertyItem:]
  -[CNPropertyEditingCell labelButtonClicked:]
  -[CNPropertyEditingCell leftValueMargin]
  -[CNPropertyEditingCell effectiveLabelWidth]
  -[CNPropertyEditingCell setVseparatorHidden:]
  -[CNPropertyEditingCell regainFocus]
  -[CNPropertyEditingCell labelButton]
  -[CNPropertyEditingCell vseparator]
  -[CNPropertyEditingCell setVseparator:]


CNMeCardSharingSettingsHeaderViewController : UIViewController <CNMeCardSharingAvatarViewControllerDelegate>
 @property  <CNMeCardSharingAvatarProvider> *avatarProvider
 @property  CNMeCardSharingAvatarViewController *avatarViewController
 @property  UIButton *labelButton
 @property  UIView *separatorView
 @property  <CNMeCardSharingSettingsHeaderViewControllerDelegate> *delegate
 @property  double separatorHeight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNMeCardSharingSettingsHeaderViewController avatarEdgeLengthForTraitCollection:]

  // instance methods
  -[CNMeCardSharingSettingsHeaderViewController setDelegate:]
  -[CNMeCardSharingSettingsHeaderViewController delegate]
  -[CNMeCardSharingSettingsHeaderViewController separatorHeight]
  -[CNMeCardSharingSettingsHeaderViewController .cxx_destruct]
  -[CNMeCardSharingSettingsHeaderViewController viewDidLoad]
  -[CNMeCardSharingSettingsHeaderViewController viewDidLayoutSubviews]
  -[CNMeCardSharingSettingsHeaderViewController separatorView]
  -[CNMeCardSharingSettingsHeaderViewController setSeparatorView:]
  -[CNMeCardSharingSettingsHeaderViewController reload]
  -[CNMeCardSharingSettingsHeaderViewController avatarViewController]
  -[CNMeCardSharingSettingsHeaderViewController setAvatarViewController:]
  -[CNMeCardSharingSettingsHeaderViewController avatarProvider]
  -[CNMeCardSharingSettingsHeaderViewController setAvatarProvider:]
  -[CNMeCardSharingSettingsHeaderViewController labelButton]
  -[CNMeCardSharingSettingsHeaderViewController labelButtonTapped:]
  -[CNMeCardSharingSettingsHeaderViewController avatarViewControllerDidUpdateImage:]
  -[CNMeCardSharingSettingsHeaderViewController avatarViewControllerWasTapped:]
  -[CNMeCardSharingSettingsHeaderViewController initWithAvatarProvider:]
  -[CNMeCardSharingSettingsHeaderViewController desiredHeightForTraitCollection:]
  -[CNMeCardSharingSettingsHeaderViewController updateWithAvatarProvider:]
  -[CNMeCardSharingSettingsHeaderViewController updateForChangedImage]
  -[CNMeCardSharingSettingsHeaderViewController setLabelButton:]


CNContactSuggestionsViewSectionHeader : UICollectionReusableView
 @property  UILabel *titleLabel

  // class methods
  +[CNContactSuggestionsViewSectionHeader reuseIdentifier]

  // instance methods
  -[CNContactSuggestionsViewSectionHeader setupConstraints]
  -[CNContactSuggestionsViewSectionHeader .cxx_destruct]
  -[CNContactSuggestionsViewSectionHeader prepareForReuse]
  -[CNContactSuggestionsViewSectionHeader initWithFrame:]
  -[CNContactSuggestionsViewSectionHeader titleLabel]


CNContactSuggestionsViewController : UIViewController <UICollectionViewDelegate>
 @property  UICollectionViewDiffableDataSource *diffableDataSource
 @property  UICollectionViewLayout *layout
 @property  NSArray *ignoredContactIdentifiers
 @property  NSMutableArray *fetchedContacts
 @property  NSArray *contacts
 @property  NSMutableDictionary *identifiersToIndexPath
 @property  CNAvatarImageRenderer *avatarRenderer
 @property  _PSContactSuggester *contactSuggester
 @property  <CNContactSuggestionsViewControllerDelegate> *delegate
 @property  UICollectionView *collectionView
 @property  NSArray *overrideSuggestedContacts
 @property  NSArray *selectedContacts
 @property  NSString *suggestionsHeaderTitle
 @property  BOOL allowsMultiSelection
 @property  NSArray *interactionDomains
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactSuggestionsViewController os_log]

  // instance methods
  -[CNContactSuggestionsViewController setCollectionView:]
  -[CNContactSuggestionsViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNContactSuggestionsViewController selectedContacts]
  -[CNContactSuggestionsViewController setCellStateSelected:forContact:animated:]
  -[CNContactSuggestionsViewController allowsMultiSelection]
  -[CNContactSuggestionsViewController layout]
  -[CNContactSuggestionsViewController setDelegate:]
  -[CNContactSuggestionsViewController collectionView:didDeselectItemAtIndexPath:]
  -[CNContactSuggestionsViewController collectionView:shouldSelectItemAtIndexPath:]
  -[CNContactSuggestionsViewController delegate]
  -[CNContactSuggestionsViewController setLayout:]
  -[CNContactSuggestionsViewController setContacts:]
  -[CNContactSuggestionsViewController .cxx_destruct]
  -[CNContactSuggestionsViewController contacts]
  -[CNContactSuggestionsViewController collectionView]
  -[CNContactSuggestionsViewController viewDidLoad]
  -[CNContactSuggestionsViewController prepareForReuse]
  -[CNContactSuggestionsViewController diffableDataSource]
  -[CNContactSuggestionsViewController identifiersToIndexPath]
  -[CNContactSuggestionsViewController estimatedHeaderHeight]
  -[CNContactSuggestionsViewController collectionView:didSelectItemAtIndexPath:]
  -[CNContactSuggestionsViewController setDiffableDataSource:]
  -[CNContactSuggestionsViewController setAllowsMultiSelection:]
  -[CNContactSuggestionsViewController traitCollectionDidChange:]
  -[CNContactSuggestionsViewController init]
  -[CNContactSuggestionsViewController sectionInsets]
  -[CNContactSuggestionsViewController useAccessibleLayout]
  -[CNContactSuggestionsViewController compositionalLayout]
  -[CNContactSuggestionsViewController buildCollectionView]
  -[CNContactSuggestionsViewController fetchContactsIfNeeded]
  -[CNContactSuggestionsViewController fetchContacts]
  -[CNContactSuggestionsViewController fetchIgnoredContactIdentifiersIfNeeded]
  -[CNContactSuggestionsViewController filterResults:]
  -[CNContactSuggestionsViewController estimatedHeight]
  -[CNContactSuggestionsViewController avatarSize]
  -[CNContactSuggestionsViewController verticalSpacing]
  -[CNContactSuggestionsViewController horizontalSectionPadding]
  -[CNContactSuggestionsViewController imageForContact:imageUpdateBlock:]
  -[CNContactSuggestionsViewController overrideSuggestedContacts]
  -[CNContactSuggestionsViewController setOverrideSuggestedContacts:]
  -[CNContactSuggestionsViewController suggestionsHeaderTitle]
  -[CNContactSuggestionsViewController setSuggestionsHeaderTitle:]
  -[CNContactSuggestionsViewController interactionDomains]
  -[CNContactSuggestionsViewController setInteractionDomains:]
  -[CNContactSuggestionsViewController ignoredContactIdentifiers]
  -[CNContactSuggestionsViewController setIgnoredContactIdentifiers:]
  -[CNContactSuggestionsViewController fetchedContacts]
  -[CNContactSuggestionsViewController setFetchedContacts:]
  -[CNContactSuggestionsViewController setIdentifiersToIndexPath:]
  -[CNContactSuggestionsViewController avatarRenderer]
  -[CNContactSuggestionsViewController setAvatarRenderer:]
  -[CNContactSuggestionsViewController contactSuggester]


CNStarkContactInfoViewController : UIViewController <CNUIGeminiDataSourceDelegate>
 @property  UILabel *primaryLabel
 @property  UILabel *secondaryLabel
 @property  UIStackView *stackView
 @property  NSArray *layoutConstraints
 @property  CNContact *contact
 @property  CNContactGeminiView *contactGeminiView
 @property  CNUIGeminiDataSource *geminiDataSource
 @property  CNGeminiResult *geminiResult
 @property  NSLayoutYAxisAnchor *firstBaselineAnchor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNStarkContactInfoViewController descriptorForRequiredKeys]

  // instance methods
  -[CNStarkContactInfoViewController stackView]
  -[CNStarkContactInfoViewController updateViewConstraints]
  -[CNStarkContactInfoViewController contact]
  -[CNStarkContactInfoViewController initWithNibName:bundle:]
  -[CNStarkContactInfoViewController .cxx_destruct]
  -[CNStarkContactInfoViewController viewDidLoad]
  -[CNStarkContactInfoViewController initWithContact:]
  -[CNStarkContactInfoViewController secondaryLabel]
  -[CNStarkContactInfoViewController primaryLabel]
  -[CNStarkContactInfoViewController traitCollectionDidChange:]
  -[CNStarkContactInfoViewController init]
  -[CNStarkContactInfoViewController initWithCoder:]
  -[CNStarkContactInfoViewController firstBaselineAnchor]
  -[CNStarkContactInfoViewController geminiDataSource]
  -[CNStarkContactInfoViewController resetLayoutConstraints]
  -[CNStarkContactInfoViewController setupLayoutConstraints]
  -[CNStarkContactInfoViewController layoutConstraints]
  -[CNStarkContactInfoViewController setLayoutConstraints:]
  -[CNStarkContactInfoViewController setGeminiResult:]
  -[CNStarkContactInfoViewController shouldShowGemini]
  -[CNStarkContactInfoViewController geminiResult]
  -[CNStarkContactInfoViewController geminiDataSourceDidUpdate:]
  -[CNStarkContactInfoViewController setupViews]
  -[CNStarkContactInfoViewController updateViews]
  -[CNStarkContactInfoViewController contactGeminiView]
  -[CNStarkContactInfoViewController setContactGeminiView:]
  -[CNStarkContactInfoViewController setGeminiDataSource:]


CNPropertyDateEditingCell : CNPropertySimpleEditingCell <UITextFieldDelegate, CNPickerControllerDelegate>
 @property  UIDatePicker *datePicker
 @property  CNDatePickerContainerView *datePickerContainerView
 @property  UIViewController *contentViewController
 @property  BOOL shouldEditDatesTextually
 @property  NSString *currentCalendarIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPropertyDateEditingCell initWithStyle:reuseIdentifier:]
  -[CNPropertyDateEditingCell contentViewController]
  -[CNPropertyDateEditingCell setContentViewController:]
  -[CNPropertyDateEditingCell textFieldShouldBeginEditing:]
  -[CNPropertyDateEditingCell .cxx_destruct]
  -[CNPropertyDateEditingCell prepareForReuse]
  -[CNPropertyDateEditingCell datePicker]
  -[CNPropertyDateEditingCell setDatePicker:]
  -[CNPropertyDateEditingCell textFieldDidEndEditing:reason:]
  -[CNPropertyDateEditingCell textField:shouldChangeCharactersInRange:replacementString:]
  -[CNPropertyDateEditingCell dateChanged:]
  -[CNPropertyDateEditingCell picker:didPickItem:]
  -[CNPropertyDateEditingCell pickerDidCancel:]
  -[CNPropertyDateEditingCell updateValueWithPropertyItem:]
  -[CNPropertyDateEditingCell labelButtonClicked:]
  -[CNPropertyDateEditingCell regainFocus]
  -[CNPropertyDateEditingCell localeUpdated:]
  -[CNPropertyDateEditingCell _shouldUseYearlessPickerForDateComponents:]
  -[CNPropertyDateEditingCell applyCalendarAndDate]
  -[CNPropertyDateEditingCell datePickerContainerView]
  -[CNPropertyDateEditingCell setDatePickerContainerView:]
  -[CNPropertyDateEditingCell shouldEditDatesTextually]
  -[CNPropertyDateEditingCell currentCalendarIdentifier]
  -[CNPropertyDateEditingCell setCurrentCalendarIdentifier:]


CNStarkActionView : UIView <CNContactQuickActionPresentation>
 @property  double actionPlatterSize
 @property  double actionLabelOffset
 @property  double actionBorderWidth
 @property  UIColor *disabledStrokeColor
 @property  UIColor *disabledFillColor
 @property  UIColor *disabledGlyphColor
 @property  UIColor *enabledStrokeColor
 @property  UIColor *enabledFillColor
 @property  UIColor *enabledGlyphColor
 @property  UIColor *selectedStrokeColor
 @property  UIColor *selectedFillColor
 @property  UIColor *selectedGlyphColor
 @property  UIImage *image
 @property  UIButton *button
 @property  UILabel *label
 @property  BOOL selected
 @property  BOOL disabledButtonFocused
 @property  NSString *actionType
 @property  NSString *title
 @property  BOOL enabled
 @property  <CNStarkActionViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNStarkActionView quickActionButtonWithDelegate:]
  +[CNStarkActionView propertyTransportButtonWithDelegate:]

  // instance methods
  -[CNStarkActionView didUpdateFocusInContext:withAnimationCoordinator:]
  -[CNStarkActionView setActionType:]
  -[CNStarkActionView actionType]
  -[CNStarkActionView setupConstraints]
  -[CNStarkActionView button]
  -[CNStarkActionView delegate]
  -[CNStarkActionView canBecomeFocused]
  -[CNStarkActionView setSelected:]
  -[CNStarkActionView .cxx_destruct]
  -[CNStarkActionView setSelectedGlyphColor:]
  -[CNStarkActionView setEnabled:]
  -[CNStarkActionView select]
  -[CNStarkActionView initWithDelegate:]
  -[CNStarkActionView title]
  -[CNStarkActionView image]
  -[CNStarkActionView label]
  -[CNStarkActionView enabled]
  -[CNStarkActionView intrinsicContentSize]
  -[CNStarkActionView selected]
  -[CNStarkActionView selectedGlyphColor]
  -[CNStarkActionView setImage:]
  -[CNStarkActionView traitCollectionDidChange:]
  -[CNStarkActionView setTitle:]
  -[CNStarkActionView actionViewTapped:]
  -[CNStarkActionView actionViewTouchDown:]
  -[CNStarkActionView actionViewTouchUp:]
  -[CNStarkActionView clickGestureDidUpdate:]
  -[CNStarkActionView setupLabel]
  -[CNStarkActionView setupButton]
  -[CNStarkActionView setupClickGestureRecognizer]
  -[CNStarkActionView deselect]
  -[CNStarkActionView choose]
  -[CNStarkActionView notifyDelegateAboutUserChoice]
  -[CNStarkActionView updateForFocusedState:]
  -[CNStarkActionView stateUpdated]
  -[CNStarkActionView actionPlatterSize]
  -[CNStarkActionView setActionPlatterSize:]
  -[CNStarkActionView actionLabelOffset]
  -[CNStarkActionView setActionLabelOffset:]
  -[CNStarkActionView actionBorderWidth]
  -[CNStarkActionView setActionBorderWidth:]
  -[CNStarkActionView disabledStrokeColor]
  -[CNStarkActionView setDisabledStrokeColor:]
  -[CNStarkActionView disabledFillColor]
  -[CNStarkActionView setDisabledFillColor:]
  -[CNStarkActionView disabledGlyphColor]
  -[CNStarkActionView setDisabledGlyphColor:]
  -[CNStarkActionView enabledStrokeColor]
  -[CNStarkActionView setEnabledStrokeColor:]
  -[CNStarkActionView enabledFillColor]
  -[CNStarkActionView setEnabledFillColor:]
  -[CNStarkActionView enabledGlyphColor]
  -[CNStarkActionView setEnabledGlyphColor:]
  -[CNStarkActionView selectedStrokeColor]
  -[CNStarkActionView setSelectedStrokeColor:]
  -[CNStarkActionView selectedFillColor]
  -[CNStarkActionView setSelectedFillColor:]
  -[CNStarkActionView disabledButtonFocused]
  -[CNStarkActionView setDisabledButtonFocused:]


CNUIDraggingContacts : NSObject <NSItemProviderWriting, NSItemProviderReading>
 @property  NSArray *draggingContacts
 @property  CNContactStore *contactStore
 @property  NSArray *writableTypeIdentifiersForItemProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNUIDraggingContacts writableTypeIdentifiersForItemProvider]
  +[CNUIDraggingContacts readableTypeIdentifiersForItemProvider]
  +[CNUIDraggingContacts objectWithItemProviderData:typeIdentifier:error:]
  +[CNUIDraggingContacts dragItemForContact:withContactStore:]
  +[CNUIDraggingContacts itemProviderForContact:withContactStore:]
  +[CNUIDraggingContacts imageForDragging]
  +[CNUIDraggingContacts canAcceptDropForDropSession:]
  +[CNUIDraggingContacts provideContactsForDropSession:withKeys:completionBlock:]
  +[CNUIDraggingContacts contactsFromDraggingContacts:withKeys:]
  +[CNUIDraggingContacts provideVCardURLForDropSession:completionBlock:]
  +[CNUIDraggingContacts contactsWithIdentifiers:store:keysToFetch:unifyResults:error:]
  +[CNUIDraggingContacts draggingContactsWithItemProviderData:typeIdentifier:contactStore:error:]
  +[CNUIDraggingContacts draggingContactsForContacts:contactStore:]

  // instance methods
  -[CNUIDraggingContacts loadDataWithTypeIdentifier:forItemProviderCompletionHandler:]
  -[CNUIDraggingContacts .cxx_destruct]
  -[CNUIDraggingContacts contactStore]
  -[CNUIDraggingContacts initWithDraggingContacts:contactStore:]
  -[CNUIDraggingContacts draggingContacts]
  -[CNUIDraggingContacts setDraggingContacts:]


CNAvatarStickerGeneratorProvider : NSObject
 @property  AVTStickerGenerator *generator
 @property  <AVTAvatarRecord> *avatarRecord

  // instance methods
  -[CNAvatarStickerGeneratorProvider .cxx_destruct]
  -[CNAvatarStickerGeneratorProvider generator]
  -[CNAvatarStickerGeneratorProvider setGenerator:]
  -[CNAvatarStickerGeneratorProvider initWithAvatarRecord:]
  -[CNAvatarStickerGeneratorProvider avatarRecord]
  -[CNAvatarStickerGeneratorProvider setAvatarRecord:]


CNContactSuggestionViewController : UITableViewController
 @property  <CNContactSuggestionViewControllerDataSource> *dataSource
 @property  UILabel *withLabel
 @property  UILabel *dateLabel
 @property  UILabel *subjectLabel
 @property  UILabel *contentLabel
 @property  UIButton *addToContactButton
 @property  UIButton *ignoreButton
 @property  NSLayoutConstraint *addToContactLeadingMargin
 @property  NSLayoutConstraint *addToContactTrailingMargin
 @property  NSLayoutConstraint *ignoreLeadingMargin
 @property  NSLayoutConstraint *ignoreTrailingMargin
 @property  NSLayoutConstraint *fromLeadingMargin
 @property  NSLayoutConstraint *dateTrailingMargin
 @property  CNPropertySuggestionAction *action
 @property  CNPropertyCell *propertyCell

  // class methods
  +[CNContactSuggestionViewController viewControllerWithDataSource:]

  // instance methods
  -[CNContactSuggestionViewController tableView:heightForRowAtIndexPath:]
  -[CNContactSuggestionViewController tableView:cellForRowAtIndexPath:]
  -[CNContactSuggestionViewController tableView:numberOfRowsInSection:]
  -[CNContactSuggestionViewController tableView:shouldHighlightRowAtIndexPath:]
  -[CNContactSuggestionViewController numberOfSectionsInTableView:]
  -[CNContactSuggestionViewController dataSource]
  -[CNContactSuggestionViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[CNContactSuggestionViewController tableView:didSelectRowAtIndexPath:]
  -[CNContactSuggestionViewController tableView:titleForHeaderInSection:]
  -[CNContactSuggestionViewController .cxx_destruct]
  -[CNContactSuggestionViewController viewDidLoad]
  -[CNContactSuggestionViewController viewWillAppear:]
  -[CNContactSuggestionViewController action]
  -[CNContactSuggestionViewController setDataSource:]
  -[CNContactSuggestionViewController viewDidDisappear:]
  -[CNContactSuggestionViewController setAction:]
  -[CNContactSuggestionViewController dateLabel]
  -[CNContactSuggestionViewController shouldShowPreview]
  -[CNContactSuggestionViewController updatePreview]
  -[CNContactSuggestionViewController shouldShowAddRejectActions]
  -[CNContactSuggestionViewController addToContact:]
  -[CNContactSuggestionViewController ignore:]
  -[CNContactSuggestionViewController showSource:]
  -[CNContactSuggestionViewController titleForIgnoreContactDetail]
  -[CNContactSuggestionViewController alertMessageForIgnoreContactDetail]
  -[CNContactSuggestionViewController propertyCell]
  -[CNContactSuggestionViewController setPropertyCell:]
  -[CNContactSuggestionViewController withLabel]
  -[CNContactSuggestionViewController setWithLabel:]
  -[CNContactSuggestionViewController setDateLabel:]
  -[CNContactSuggestionViewController subjectLabel]
  -[CNContactSuggestionViewController setSubjectLabel:]
  -[CNContactSuggestionViewController contentLabel]
  -[CNContactSuggestionViewController setContentLabel:]
  -[CNContactSuggestionViewController addToContactButton]
  -[CNContactSuggestionViewController setAddToContactButton:]
  -[CNContactSuggestionViewController ignoreButton]
  -[CNContactSuggestionViewController setIgnoreButton:]
  -[CNContactSuggestionViewController addToContactLeadingMargin]
  -[CNContactSuggestionViewController setAddToContactLeadingMargin:]
  -[CNContactSuggestionViewController addToContactTrailingMargin]
  -[CNContactSuggestionViewController setAddToContactTrailingMargin:]
  -[CNContactSuggestionViewController ignoreLeadingMargin]
  -[CNContactSuggestionViewController setIgnoreLeadingMargin:]
  -[CNContactSuggestionViewController ignoreTrailingMargin]
  -[CNContactSuggestionViewController setIgnoreTrailingMargin:]
  -[CNContactSuggestionViewController fromLeadingMargin]
  -[CNContactSuggestionViewController setFromLeadingMargin:]
  -[CNContactSuggestionViewController dateTrailingMargin]
  -[CNContactSuggestionViewController setDateTrailingMargin:]


CNContactIgnoreDonatedInformationAction : CNContactAction
 @property  CNUIExternalComponentsFactory *componentsFactory
 @property  CNDonationStore *donationStore

  // instance methods
  -[CNContactIgnoreDonatedInformationAction donationStore]
  -[CNContactIgnoreDonatedInformationAction .cxx_destruct]
  -[CNContactIgnoreDonatedInformationAction initWithContact:]
  -[CNContactIgnoreDonatedInformationAction componentsFactory]
  -[CNContactIgnoreDonatedInformationAction performActionWithSender:]
  -[CNContactIgnoreDonatedInformationAction initWithContact:donationStore:componentsFactory:]
  -[CNContactIgnoreDonatedInformationAction rejectAllDonations]
  -[CNContactIgnoreDonatedInformationAction showRejectionFailureAlert]


CNPropertyIntentActionableCell : CNPropertySimpleTransportCell
 @property  NSArray *actions

  // instance methods
  -[CNPropertyIntentActionableCell .cxx_destruct]
  -[CNPropertyIntentActionableCell actions]
  -[CNPropertyIntentActionableCell defaultContext]
  -[CNPropertyIntentActionableCell setActions:]
  -[CNPropertyIntentActionableCell shouldPerformDefaultAction]
  -[CNPropertyIntentActionableCell performDefaultAction]
  -[CNPropertyIntentActionableCell updateTransportButtons]
  -[CNPropertyIntentActionableCell transportButton1Clicked:]
  -[CNPropertyIntentActionableCell transportButton2Clicked:]
  -[CNPropertyIntentActionableCell transportButton3Clicked:]
  -[CNPropertyIntentActionableCell transportsMapping]


CNPropertyEmailAddressCell : CNPropertySimpleTransportCell
 @property  BOOL VIP

  // instance methods
  -[CNPropertyEmailAddressCell shouldPerformDefaultAction]
  -[CNPropertyEmailAddressCell shouldShowStar]
  -[CNPropertyEmailAddressCell updateTransportButtons]
  -[CNPropertyEmailAddressCell updateValueWithPropertyItem:]
  -[CNPropertyEmailAddressCell setVIP:]
  -[CNPropertyEmailAddressCell isVIP]


CNPropertyFaceTimeAction : CNPropertyAction <CNPropertyBestIDSValueQueryDelegate>
 @property  CNPropertyBestIDSValueQuery *bestFaceTimeQuery
 @property  long long type

  // instance methods
  -[CNPropertyFaceTimeAction type]
  -[CNPropertyFaceTimeAction dealloc]
  -[CNPropertyFaceTimeAction .cxx_destruct]
  -[CNPropertyFaceTimeAction setType:]
  -[CNPropertyFaceTimeAction canPerformAction]
  -[CNPropertyFaceTimeAction performActionForItem:sender:]
  -[CNPropertyFaceTimeAction initWithContact:propertyItems:]
  -[CNPropertyFaceTimeAction _queryFaceTimeStatus]
  -[CNPropertyFaceTimeAction queryComplete]
  -[CNPropertyFaceTimeAction bestFaceTimeQuery]
  -[CNPropertyFaceTimeAction setBestFaceTimeQuery:]


CNAccountsAndGroupsItem : NSObject <NSCopying>
 @property  NSString *identifier
 @property  @? nameProvider
 @property  NSString *name
 @property  long long type
 @property  CNGroup *group
 @property  NSString *containerIdentifier
 @property  long long containerType
 @property  long long contactCount
 @property  NSString *contactCountString
 @property  NSArray *childItems
 @property  CNAccountsAndGroupsItem *parentItem
 @property  UIImage *groupSymbol
 @property  BOOL selected
 @property  BOOL bypassIfUnique
 @property  BOOL shouldHide
 @property  BOOL soloSelect
 @property  BOOL isEditable
 @property  BOOL acceptsVCardDrop
 @property  BOOL canShowContextMenu
 @property  BOOL canEmail
 @property  BOOL canMessage
 @property  BOOL canExport
 @property  BOOL canRename
 @property  BOOL canDelete

  // instance methods
  -[CNAccountsAndGroupsItem isEditable]
  -[CNAccountsAndGroupsItem setContactCount:]
  -[CNAccountsAndGroupsItem identifier]
  -[CNAccountsAndGroupsItem type]
  -[CNAccountsAndGroupsItem canDelete]
  -[CNAccountsAndGroupsItem containerIdentifier]
  -[CNAccountsAndGroupsItem setSelected:]
  -[CNAccountsAndGroupsItem .cxx_destruct]
  -[CNAccountsAndGroupsItem setContainerIdentifier:]
  -[CNAccountsAndGroupsItem parentItem]
  -[CNAccountsAndGroupsItem contactCount]
  -[CNAccountsAndGroupsItem setIdentifier:]
  -[CNAccountsAndGroupsItem setName:]
  -[CNAccountsAndGroupsItem copyWithZone:]
  -[CNAccountsAndGroupsItem name]
  -[CNAccountsAndGroupsItem group]
  -[CNAccountsAndGroupsItem isSelected]
  -[CNAccountsAndGroupsItem setGroup:]
  -[CNAccountsAndGroupsItem localizedCompare:]
  -[CNAccountsAndGroupsItem childItems]
  -[CNAccountsAndGroupsItem nameProvider]
  -[CNAccountsAndGroupsItem initWithType:nameProvider:]
  -[CNAccountsAndGroupsItem acceptsVCardDrop]
  -[CNAccountsAndGroupsItem canShowContextMenu]
  -[CNAccountsAndGroupsItem canEmail]
  -[CNAccountsAndGroupsItem canMessage]
  -[CNAccountsAndGroupsItem canExport]
  -[CNAccountsAndGroupsItem canRename]
  -[CNAccountsAndGroupsItem setChildItems:]
  -[CNAccountsAndGroupsItem setSelected:affectingChildren:]
  -[CNAccountsAndGroupsItem arrayForDisplay:]
  -[CNAccountsAndGroupsItem contactCountString]
  -[CNAccountsAndGroupsItem groupSymbol]
  -[CNAccountsAndGroupsItem containerType]
  -[CNAccountsAndGroupsItem setContainerType:]
  -[CNAccountsAndGroupsItem setParentItem:]
  -[CNAccountsAndGroupsItem bypassIfUnique]
  -[CNAccountsAndGroupsItem setBypassIfUnique:]
  -[CNAccountsAndGroupsItem shouldHide]
  -[CNAccountsAndGroupsItem setShouldHide:]
  -[CNAccountsAndGroupsItem soloSelect]
  -[CNAccountsAndGroupsItem setSoloSelect:]


CNCardGroupMembershipGroup : CNCardGroup
 @property  NSArray *parentGroups
 @property  NSArray *groupsToDisplayForEditing

  // instance methods
  -[CNCardGroupMembershipGroup displayItems]
  -[CNCardGroupMembershipGroup .cxx_destruct]
  -[CNCardGroupMembershipGroup title]
  -[CNCardGroupMembershipGroup editingItems]
  -[CNCardGroupMembershipGroup parentGroupItems]
  -[CNCardGroupMembershipGroup groupItemsToDisplayForEditing]
  -[CNCardGroupMembershipGroup parentGroups]
  -[CNCardGroupMembershipGroup setParentGroups:]
  -[CNCardGroupMembershipGroup groupsToDisplayForEditing]
  -[CNCardGroupMembershipGroup setGroupsToDisplayForEditing:]


CNPropertyGroupAlertItem : CNPropertyGroupItem
  // class methods
  +[CNPropertyGroupAlertItem emptyValueForLabel:]

  // instance methods
  -[CNPropertyGroupAlertItem displayLabel]
  -[CNPropertyGroupAlertItem labeledValue]
  -[CNPropertyGroupAlertItem isValidValue:]
  -[CNPropertyGroupAlertItem setLabeledValue:]
  -[CNPropertyGroupAlertItem displayStringForValue:]
  -[CNPropertyGroupAlertItem replacementForInvalidValue:]
  -[CNPropertyGroupAlertItem canRemove]
  -[CNPropertyGroupAlertItem isEquivalentToItem:whenEditing:]
  -[CNPropertyGroupAlertItem _toneManager]
  -[CNPropertyGroupAlertItem _vibrationManager]


CNVisualIdentity : NSObject <NSCopying>
 @property  UIImage *avatarImage
 @property  NSString *abbreviatedName
 @property  NSData *imageHash
 @property  NSString *imageType
 @property  unsigned long contactImageType
 @property  NSArray *contacts
 @property  NSArray *linkedContacts
 @property  BOOL hasLinkedContacts
 @property  long long identityType
 @property  NSData *memojiMetadata
 @property  NSString *name
 @property  NSString *identifier
 @property  NSData *imageData
 @property  NSData *thumbnailImageData
 @property  NSData *fullscreenImageData
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect

  // class methods
  +[CNVisualIdentity descriptorForRequiredKeys]
  +[CNVisualIdentity log]
  +[CNVisualIdentity descriptorForImageKeys]
  +[CNVisualIdentity firstComposedCharacterFromString:]
  +[CNVisualIdentity abbreviatedNameForGroupName:]

  // instance methods
  -[CNVisualIdentity identifier]
  -[CNVisualIdentity cropRect]
  -[CNVisualIdentity imageType]
  -[CNVisualIdentity setContacts:]
  -[CNVisualIdentity .cxx_destruct]
  -[CNVisualIdentity contacts]
  -[CNVisualIdentity initWithContact:]
  -[CNVisualIdentity setImageType:]
  -[CNVisualIdentity clearImage]
  -[CNVisualIdentity imageData]
  -[CNVisualIdentity setIdentifier:]
  -[CNVisualIdentity setName:]
  -[CNVisualIdentity copyWithZone:]
  -[CNVisualIdentity name]
  -[CNVisualIdentity mutableCopyWithZone:]
  -[CNVisualIdentity setImageData:]
  -[CNVisualIdentity setCropRect:]
  -[CNVisualIdentity updateImageForContact:]
  -[CNVisualIdentity fullscreenImageData]
  -[CNVisualIdentity thumbnailImageData]
  -[CNVisualIdentity setThumbnailImageData:]
  -[CNVisualIdentity setFullscreenImageData:]
  -[CNVisualIdentity imageHash]
  -[CNVisualIdentity setImageHash:]
  -[CNVisualIdentity memojiMetadata]
  -[CNVisualIdentity setMemojiMetadata:]
  -[CNVisualIdentity linkedContacts]
  -[CNVisualIdentity setLinkedContacts:]
  -[CNVisualIdentity initWithGroupIdentity:]
  -[CNVisualIdentity setAvatarImage:]
  -[CNVisualIdentity avatarImage]
  -[CNVisualIdentity abbreviatedName]
  -[CNVisualIdentity hasLinkedContacts]
  -[CNVisualIdentity contactImageType]
  -[CNVisualIdentity updateImageType:]
  -[CNVisualIdentity updateGroupName:]
  -[CNVisualIdentity hasImageDataAvailable]
  -[CNVisualIdentity canUpdateGroupName]
  -[CNVisualIdentity imageAllowsEditing]
  -[CNVisualIdentity setAbbreviatedName:]
  -[CNVisualIdentity identityType]
  -[CNVisualIdentity setIdentityType:]


CNPropertyGroupDateItem : CNPropertyGroupItem
  // class methods
  +[CNPropertyGroupDateItem initialize]
  +[CNPropertyGroupDateItem dateDisplayStringFromComponents:]
  +[CNPropertyGroupDateItem calendarForLabel:]
  +[CNPropertyGroupDateItem initialValueForLabel:group:]
  +[CNPropertyGroupDateItem emptyValueForLabel:]
  +[CNPropertyGroupDateItem propertyGroupItemWithLabeledValue:group:contact:]
  +[CNPropertyGroupDateItem isEmptyDateComponents:]
  +[CNPropertyGroupDateItem localeAndCalendarPairFromDateComponents:]

  // instance methods
  -[CNPropertyGroupDateItem isEmpty]
  -[CNPropertyGroupDateItem isValidValue:]
  -[CNPropertyGroupDateItem defaultActionURL]
  -[CNPropertyGroupDateItem normalizedValue]
  -[CNPropertyGroupDateItem displayStringForValue:]
  -[CNPropertyGroupDateItem isEquivalentToItem:]
  -[CNPropertyGroupDateItem bestValue:]
  -[CNPropertyGroupDateItem placeholderString]
  -[CNPropertyGroupDateItem valueForDisplayString:]


CNPropertySuggestionAction : CNPropertyAction
 @property  CNContactSuggestionViewController *suggestionViewController
 @property  long long selectedChoice

  // instance methods
  -[CNPropertySuggestionAction reject]
  -[CNPropertySuggestionAction .cxx_destruct]
  -[CNPropertySuggestionAction performActionForItem:sender:]
  -[CNPropertySuggestionAction _confirmOrReject:]
  -[CNPropertySuggestionAction dataSourceWithPropertyItem:]
  -[CNPropertySuggestionAction setSelectedChoice:]
  -[CNPropertySuggestionAction _confirmOrRejectSuggestion:]
  -[CNPropertySuggestionAction _confirmOrRejectDonation:]
  -[CNPropertySuggestionAction confirm]
  -[CNPropertySuggestionAction selectedChoice]
  -[CNPropertySuggestionAction suggestionViewController]
  -[CNPropertySuggestionAction setSuggestionViewController:]


CNContactViewServiceErrorViewController : CNErrorViewController <CNContactContentViewController>
 @property  <CNContactViewHostProtocol> *delegate
 @property  <CNContactViewControllerPPTDelegate> *pptDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactViewServiceErrorViewController setDelegate:]
  -[CNContactViewServiceErrorViewController delegate]
  -[CNContactViewServiceErrorViewController .cxx_destruct]
  -[CNContactViewServiceErrorViewController setupWithOptions:readyBlock:]
  -[CNContactViewServiceErrorViewController didChangeToEditMode:]
  -[CNContactViewServiceErrorViewController didChangeToShowTitle:]
  -[CNContactViewServiceErrorViewController editCancel]
  -[CNContactViewServiceErrorViewController toggleEditing]
  -[CNContactViewServiceErrorViewController performConfirmedCancel]
  -[CNContactViewServiceErrorViewController pptDelegate]
  -[CNContactViewServiceErrorViewController setPptDelegate:]


CNHealthStoreManager : NSObject
 @property  CNUIContactsEnvironment *environment
 @property  _HKMedicalIDData *medicalIDData
 @property  <CNScheduler> *workQueue
 @property  BOOL needsFetching
 @property  BOOL isListeningToChanges
 @property  NSMutableDictionary *medicalIDDataHandlers
 @property  <CNScheduler> *stateLock
 @property  HKHealthStore *healthStore
 @property  HKMedicalIDStore *medicalIDStore

  // class methods
  +[CNHealthStoreManager shouldShowEmergencyContacts]
  +[CNHealthStoreManager descriptorForRequiredKeys]
  +[CNHealthStoreManager emergencyContactMatchingContact:]
  +[CNHealthStoreManager log]
  +[CNHealthStoreManager identifiersForContactMatchingEmergencyContacts:contactStore:]

  // instance methods
  -[CNHealthStoreManager initWithEnvironment:]
  -[CNHealthStoreManager setMedicalIDStore:]
  -[CNHealthStoreManager healthStore]
  -[CNHealthStoreManager setHealthStore:]
  -[CNHealthStoreManager workQueue]
  -[CNHealthStoreManager needsFetching]
  -[CNHealthStoreManager initWithEnvironment:healthStore:medicalIDStore:]
  -[CNHealthStoreManager dealloc]
  -[CNHealthStoreManager createMedicalIDFromContact:]
  -[CNHealthStoreManager nts_lazyMedicalIDStore]
  -[CNHealthStoreManager setMedicalIDData:]
  -[CNHealthStoreManager .cxx_destruct]
  -[CNHealthStoreManager updateAndDispatchMedicalIDData]
  -[CNHealthStoreManager stateLock]
  -[CNHealthStoreManager notifyHandlersWithMedicalIDData:]
  -[CNHealthStoreManager registerMedicalIDDataHandler:]
  -[CNHealthStoreManager nts_lazyHealthStore]
  -[CNHealthStoreManager medicalIDDataHandlers]
  -[CNHealthStoreManager unregisterHandlerForToken:]
  -[CNHealthStoreManager medicalIDData]
  -[CNHealthStoreManager setNeedsFetching:]
  -[CNHealthStoreManager setEnvironment:]
  -[CNHealthStoreManager setIsListeningToChanges:]
  -[CNHealthStoreManager startListeningForChanges]
  -[CNHealthStoreManager environment]
  -[CNHealthStoreManager medicalIDStore]
  -[CNHealthStoreManager isListeningToChanges]


CNPropertyGroupEmailAddressItem : CNPropertyGroupItem
  // instance methods
  -[CNPropertyGroupEmailAddressItem defaultActionURL]


CNUIContainerContext : NSObject
 @property  NSDictionary *originalContainers
 @property  NSArray *selectedContainers
 @property  NSArray *addedContainers
 @property  NSDictionary *removedContainers

  // instance methods
  -[CNUIContainerContext .cxx_destruct]
  -[CNUIContainerContext initWithContainers:]
  -[CNUIContainerContext addContainer:]
  -[CNUIContainerContext removeContainer:]
  -[CNUIContainerContext persistedContainers]
  -[CNUIContainerContext addedContainers]
  -[CNUIContainerContext removedContainers]
  -[CNUIContainerContext resetToInitialState]
  -[CNUIContainerContext originalContainers]
  -[CNUIContainerContext setOriginalContainers:]
  -[CNUIContainerContext selectedContainers]
  -[CNUIContainerContext setSelectedContainers:]


CNPropertyGroupInstantMessageItem : CNPropertyGroupItem
 @property  CNInstantMessageAddress *imAddress

  // class methods
  +[CNPropertyGroupInstantMessageItem emptyValueForLabel:]

  // instance methods
  -[CNPropertyGroupInstantMessageItem displayLabel]
  -[CNPropertyGroupInstantMessageItem defaultActionURL]
  -[CNPropertyGroupInstantMessageItem displayStringForValue:]
  -[CNPropertyGroupInstantMessageItem isEquivalentToItem:]
  -[CNPropertyGroupInstantMessageItem valueForDisplayString:]
  -[CNPropertyGroupInstantMessageItem imAddress]
  -[CNPropertyGroupInstantMessageItem editingStringValue]


CNUIEditingSessionSaveExecutor : NSObject <CNUIContactSaveExecutor>
 @property  CNUICoreContactEditingSession *editingSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNUIEditingSessionSaveExecutor .cxx_destruct]
  -[CNUIEditingSessionSaveExecutor init]
  -[CNUIEditingSessionSaveExecutor executeSaveWithConfiguration:saveDelegate:]
  -[CNUIEditingSessionSaveExecutor initWithEditingSession:]
  -[CNUIEditingSessionSaveExecutor editingSession]


CNPropertyGroupItem : CNCardGroupItem
 @property  NSString *property
 @property  CNLabeledValue *labeledValue
 @property  CNLabeledValue *originalLabeledValue
 @property  CNContact *contact
 @property  CNMutableContact *mutableContact
 @property  CNUIContactsEnvironment *environment
 @property  unsigned long policyFlags
 @property  CNContactProperty *contactProperty
 @property  CNCardPropertyGroup *group
 @property  CNContactStore *contactStore
 @property  <CNPropertyGroupItemDelegate> *delegate
 @property  BOOL allowsIMessage
 @property  BOOL allowsPhone
 @property  BOOL allowsTTY
 @property  BOOL allowsEmail
 @property  id normalizedValue
 @property  NSString *displayValue
 @property  NSString *displayLabel
 @property  NSString *editingStringValue
 @property  NSString *placeholderString
 @property  NSArray *standardLabels
 @property  NSArray *extendedLabels
 @property  NSArray *promotedExtendedLabels
 @property  NSURL *defaultActionURL
 @property  BOOL modified
 @property  BOOL suggested
 @property  BOOL empty
 @property  BOOL readonly
 @property  BOOL supportsLabel
 @property  BOOL canRemove
 @property  BOOL favorite

  // class methods
  +[CNPropertyGroupItem classForProperty:]
  +[CNPropertyGroupItem initialValueForLabel:group:]
  +[CNPropertyGroupItem emptyValueForLabel:]
  +[CNPropertyGroupItem propertyGroupItemWithLabeledValue:group:contact:]
  +[CNPropertyGroupItem propertyGroupItemWithLabel:group:contact:]
  +[CNPropertyGroupItem propertyGroupItemWithLabeledValue:group:contact:environment:]
  +[CNPropertyGroupItem propertyGroupItemWithLabel:group:contact:environment:]
  +[CNPropertyGroupItem newPropertyGroupItemForProperty:]
  +[CNPropertyGroupItem deleteCoreRecentsEntriesMatchingProperty:recentsManager:]

  // instance methods
  -[CNPropertyGroupItem isReadonly]
  -[CNPropertyGroupItem displayLabel]
  -[CNPropertyGroupItem setProperty:]
  -[CNPropertyGroupItem property]
  -[CNPropertyGroupItem contact]
  -[CNPropertyGroupItem isFavorite]
  -[CNPropertyGroupItem labeledValue]
  -[CNPropertyGroupItem setDelegate:]
  -[CNPropertyGroupItem contactViewCache]
  -[CNPropertyGroupItem delegate]
  -[CNPropertyGroupItem isValidIdentifier:]
  -[CNPropertyGroupItem .cxx_destruct]
  -[CNPropertyGroupItem isEmpty]
  -[CNPropertyGroupItem modified]
  -[CNPropertyGroupItem isValidValue:]
  -[CNPropertyGroupItem setContact:]
  -[CNPropertyGroupItem group]
  -[CNPropertyGroupItem defaultActionURL]
  -[CNPropertyGroupItem contactStore]
  -[CNPropertyGroupItem isSuggested]
  -[CNPropertyGroupItem normalizedValue]
  -[CNPropertyGroupItem environment]
  -[CNPropertyGroupItem isEqual:]
  -[CNPropertyGroupItem init]
  -[CNPropertyGroupItem displayValue]
  -[CNPropertyGroupItem supportsLabel]
  -[CNPropertyGroupItem mutableContact]
  -[CNPropertyGroupItem updateLabeledValueWithLabel:]
  -[CNPropertyGroupItem labeledValueToCurateFromSuggestion]
  -[CNPropertyGroupItem initWithGroup:]
  -[CNPropertyGroupItem confirmSuggestion]
  -[CNPropertyGroupItem saveChangesImmediately:]
  -[CNPropertyGroupItem setLabeledValue:]
  -[CNPropertyGroupItem displayStringForValue:]
  -[CNPropertyGroupItem replacementForInvalidValue:]
  -[CNPropertyGroupItem canRemove]
  -[CNPropertyGroupItem isEquivalentToItem:whenEditing:]
  -[CNPropertyGroupItem isEquivalentToItem:]
  -[CNPropertyGroupItem bestValue:]
  -[CNPropertyGroupItem placeholderString]
  -[CNPropertyGroupItem valueForDisplayString:]
  -[CNPropertyGroupItem editingStringValue]
  -[CNPropertyGroupItem initWithLabel:group:contact:environment:]
  -[CNPropertyGroupItem initWithLabeledValue:group:contact:environment:]
  -[CNPropertyGroupItem contactProperty]
  -[CNPropertyGroupItem anyContactLegacyIdentifier]
  -[CNPropertyGroupItem labeledValueMultiValueIdentifierForChosenSourceContact]
  -[CNPropertyGroupItem standardLabels]
  -[CNPropertyGroupItem extendedLabels]
  -[CNPropertyGroupItem promotedExtendedLabels]
  -[CNPropertyGroupItem isFavoriteOfActionType:bundleIdentifier:]
  -[CNPropertyGroupItem bestLabel:]
  -[CNPropertyGroupItem mergeItem:]
  -[CNPropertyGroupItem updateWithLabel:value:]
  -[CNPropertyGroupItem updateLabeledValueWithValue:]
  -[CNPropertyGroupItem _removeSuggestion]
  -[CNPropertyGroupItem rejectSuggestion]
  -[CNPropertyGroupItem shouldCreateNewMeContactToSaveChangesTo]
  -[CNPropertyGroupItem allowsIMessage]
  -[CNPropertyGroupItem setAllowsIMessage:]
  -[CNPropertyGroupItem allowsPhone]
  -[CNPropertyGroupItem setAllowsPhone:]
  -[CNPropertyGroupItem allowsTTY]
  -[CNPropertyGroupItem setAllowsTTY:]
  -[CNPropertyGroupItem allowsEmail]
  -[CNPropertyGroupItem setAllowsEmail:]
  -[CNPropertyGroupItem originalLabeledValue]
  -[CNPropertyGroupItem setOriginalLabeledValue:]
  -[CNPropertyGroupItem policyFlags]
  -[CNPropertyGroupItem setPolicyFlags:]


CNSharingProfileAvatarItemProvider : NSObject
 @property  CNSharingProfileLogger *logger
 @property  CNContact *contact
 @property  <AVTAvatarRecord> *avatarRecord
 @property  CNAvatarImageRenderer *renderer
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  NSArray *items
 @property  BOOL contactIsFromFullPhotoPicker
 @property  CNSharingProfileAvatarItem *previousAnimojiItem
 @property  CNSharingProfileAvatarItem *previousPhotoItem
 @property  CNSharingProfileAvatarItem *silhouetteItem
 @property  CNSharingProfileAvatarItem *animojiItem
 @property  CNSharingProfileAvatarItem *photoItem
 @property  CNSharingProfileAvatarItem *monogramItem
 @property  BOOL useRTL
 @property  CNPhotoPickerColorVariant *animojiColor
 @property  PRMonogramColor *monogramColor
 @property  NSData *memojiMetadata
 @property  BOOL shouldIncludeSilhouette
 @property  BOOL shouldIncludeAnimoji
 @property  BOOL shouldIncludePhoto
 @property  BOOL shouldIncludeMonogram
 @property  NSArray *avatarItems
 @property  CNSharingProfileAvatarItemProviderConfiguration *configuration

  // class methods
  +[CNSharingProfileAvatarItemProvider descriptorForRequiredKeys]
  +[CNSharingProfileAvatarItemProvider silhouetteImageItemWithRenderer:]
  +[CNSharingProfileAvatarItemProvider contactImageItemWithContact:renderer:logger:type:]
  +[CNSharingProfileAvatarItemProvider monogramImageItemWithContact:monogramColor:renderer:RTL:]
  +[CNSharingProfileAvatarItemProvider originalAnimojiImageForRecord:stickerConfiguration:size:]
  +[CNSharingProfileAvatarItemProvider animojiItemWithRecord:stickerConfiguration:backgroundColor:]
  +[CNSharingProfileAvatarItemProvider unposedImageForAvatarRecord:]
  +[CNSharingProfileAvatarItemProvider compositeImageForImage:backgroundImage:]

  // instance methods
  -[CNSharingProfileAvatarItemProvider setLogger:]
  -[CNSharingProfileAvatarItemProvider logger]
  -[CNSharingProfileAvatarItemProvider setConfiguration:]
  -[CNSharingProfileAvatarItemProvider setMonogramColor:]
  -[CNSharingProfileAvatarItemProvider contact]
  -[CNSharingProfileAvatarItemProvider setItems:]
  -[CNSharingProfileAvatarItemProvider configuration]
  -[CNSharingProfileAvatarItemProvider .cxx_destruct]
  -[CNSharingProfileAvatarItemProvider renderer]
  -[CNSharingProfileAvatarItemProvider setRenderer:]
  -[CNSharingProfileAvatarItemProvider items]
  -[CNSharingProfileAvatarItemProvider monogramColor]
  -[CNSharingProfileAvatarItemProvider setContact:]
  -[CNSharingProfileAvatarItemProvider memojiMetadata]
  -[CNSharingProfileAvatarItemProvider setMemojiMetadata:]
  -[CNSharingProfileAvatarItemProvider avatarRecord]
  -[CNSharingProfileAvatarItemProvider setAvatarRecord:]
  -[CNSharingProfileAvatarItemProvider variantsManager]
  -[CNSharingProfileAvatarItemProvider setVariantsManager:]
  -[CNSharingProfileAvatarItemProvider buildItems]
  -[CNSharingProfileAvatarItemProvider updateWithContact:fromFullPhotoPicker:]
  -[CNSharingProfileAvatarItemProvider initWithContact:avatarRecord:logger:]
  -[CNSharingProfileAvatarItemProvider animojiItem]
  -[CNSharingProfileAvatarItemProvider setAnimojiItem:]
  -[CNSharingProfileAvatarItemProvider photoItem]
  -[CNSharingProfileAvatarItemProvider setPhotoItem:]
  -[CNSharingProfileAvatarItemProvider monogramItem]
  -[CNSharingProfileAvatarItemProvider setMonogramItem:]
  -[CNSharingProfileAvatarItemProvider pickRandomColors]
  -[CNSharingProfileAvatarItemProvider avatarItems]
  -[CNSharingProfileAvatarItemProvider contactHasImageOfPhotoType:]
  -[CNSharingProfileAvatarItemProvider setAnimojiColor:]
  -[CNSharingProfileAvatarItemProvider animojColor]
  -[CNSharingProfileAvatarItemProvider silhouetteItem]
  -[CNSharingProfileAvatarItemProvider clearCachedItems]
  -[CNSharingProfileAvatarItemProvider shouldIncludeSilhouette]
  -[CNSharingProfileAvatarItemProvider setShouldIncludeSilhouette:]
  -[CNSharingProfileAvatarItemProvider shouldIncludeAnimoji]
  -[CNSharingProfileAvatarItemProvider setShouldIncludeAnimoji:]
  -[CNSharingProfileAvatarItemProvider shouldIncludePhoto]
  -[CNSharingProfileAvatarItemProvider setShouldIncludePhoto:]
  -[CNSharingProfileAvatarItemProvider shouldIncludeMonogram]
  -[CNSharingProfileAvatarItemProvider setShouldIncludeMonogram:]
  -[CNSharingProfileAvatarItemProvider contactIsFromFullPhotoPicker]
  -[CNSharingProfileAvatarItemProvider setContactIsFromFullPhotoPicker:]
  -[CNSharingProfileAvatarItemProvider previousAnimojiItem]
  -[CNSharingProfileAvatarItemProvider setPreviousAnimojiItem:]
  -[CNSharingProfileAvatarItemProvider previousPhotoItem]
  -[CNSharingProfileAvatarItemProvider setPreviousPhotoItem:]
  -[CNSharingProfileAvatarItemProvider setSilhouetteItem:]
  -[CNSharingProfileAvatarItemProvider useRTL]
  -[CNSharingProfileAvatarItemProvider setUseRTL:]
  -[CNSharingProfileAvatarItemProvider animojiColor]


CNCaptureButtonView : UIView
 @property  UIButton *button

  // instance methods
  -[CNCaptureButtonView button]
  -[CNCaptureButtonView .cxx_destruct]
  -[CNCaptureButtonView layoutSubviews]
  -[CNCaptureButtonView setButton:]
  -[CNCaptureButtonView initWithFrame:]


CNContactQuickActionsController : NSObject <CNUIUserActionListConsumer, CNContactActionsControllerDelegate>
 @property  <CNUIUserActionListDataSource> *userActionListDataSource
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  <CNCancelable> *actionDisoveryToken
 @property  NSDictionary *actionListModelsByActionType
 @property  <CNUIUserActionContext> *userActionContext
 @property  CNContactActionsController *disambiguationMenuController
 @property  UIViewController *disambiguationMenuViewController
 @property  CNContactQuickActionsDisambiguationMenuPresentation *disambiguationMenuPresentation
 @property  <CNUINavigationListStyle> *navigationListStyle
 @property  <CNContactQuickActionViewContainer> *contactQuickActionViewContainer
 @property  <CNContactQuickActionsControllerDelegate> *delegate
 @property  NSArray *actionTypes
 @property  CNContact *contact
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactQuickActionsController descriptorForRequiredKeys]
  +[CNContactQuickActionsController sharedDataSource]
  +[CNContactQuickActionsController log]

  // instance methods
  -[CNContactQuickActionsController contact]
  -[CNContactQuickActionsController performAction:]
  -[CNContactQuickActionsController setDelegate:]
  -[CNContactQuickActionsController delegate]
  -[CNContactQuickActionsController dealloc]
  -[CNContactQuickActionsController .cxx_destruct]
  -[CNContactQuickActionsController schedulerProvider]
  -[CNContactQuickActionsController setContact:]
  -[CNContactQuickActionsController init]
  -[CNContactQuickActionsController setNavigationListStyle:]
  -[CNContactQuickActionsController navigationListStyle]
  -[CNContactQuickActionsController contactActionsController:didSelectAction:]
  -[CNContactQuickActionsController actionTypes]
  -[CNContactQuickActionsController allModelsObservable]
  -[CNContactQuickActionsController initWithActionTypes:contactQuickActionViewContainer:]
  -[CNContactQuickActionsController initWithActionTypes:contactQuickActionViewContainer:disambiguationMenuPresentation:]
  -[CNContactQuickActionsController initWithActionTypes:contactQuickActionViewContainer:disambiguationMenuPresentation:userActionListDataSource:schedulerProvider:userActionContext:]
  -[CNContactQuickActionsController cleanUpAfterLatestActionDiscovery]
  -[CNContactQuickActionsController discoverActions]
  -[CNContactQuickActionsController processDiscoveredModels:]
  -[CNContactQuickActionsController storeDiscoveredModels:]
  -[CNContactQuickActionsController reportStoredModelsToQuickActionContainer]
  -[CNContactQuickActionsController reportStoredModel:forActionType:toQuickActionContainer:]
  -[CNContactQuickActionsController defaultTitleForActionType:]
  -[CNContactQuickActionsController executeTapBehaviorForActionType:]
  -[CNContactQuickActionsController executeLongPressBehaviorForActionType:]
  -[CNContactQuickActionsController showDisambiguationMenuForActionType:]
  -[CNContactQuickActionsController setupDisambiguationMenuForActionType:]
  -[CNContactQuickActionsController tearDownDisambiguationMenu]
  -[CNContactQuickActionsController disambiguationViewControllerDismissedExternally:]
  -[CNContactQuickActionsController contactQuickActionViewContainer]
  -[CNContactQuickActionsController userActionListDataSource]
  -[CNContactQuickActionsController actionDisoveryToken]
  -[CNContactQuickActionsController setActionDisoveryToken:]
  -[CNContactQuickActionsController actionListModelsByActionType]
  -[CNContactQuickActionsController setActionListModelsByActionType:]
  -[CNContactQuickActionsController userActionContext]
  -[CNContactQuickActionsController disambiguationMenuController]
  -[CNContactQuickActionsController setDisambiguationMenuController:]
  -[CNContactQuickActionsController disambiguationMenuViewController]
  -[CNContactQuickActionsController setDisambiguationMenuViewController:]
  -[CNContactQuickActionsController disambiguationMenuPresentation]


CNVisualIdentityPickerViewController : UIViewController <UINavigationControllerDelegate, UICollectionViewDelegateFlowLayout, UICollectionViewDataSource, UICollectionViewDelegate, UIImagePickerControllerDelegate, CNPhotoPickerHeaderViewDelegate, UIAdaptivePresentationControllerDelegate, CNAvatarEditingManagerDelegate, AVTAvatarEditorViewControllerDelegate, CNVisualIdentityEditablePrimaryAvatarViewControllerDelegate, CNPhotoPickerProviderGroupDelegate, CNPhotoPickerActionsViewControllerDelegate, CNVisualIdentityItemEditorViewControllerDelegate>
 @property  UICollectionView *collectionView
 @property  CNPhotoPickerProviderItem *lastSelectedProviderItem
 @property  CNPhotoPickerProviderItem *editingProviderItem
 @property  CNPhotoPickerProviderItem *duplicatingProviderItem
 @property  CNAvatarEditingManager *avatarEditingManager
 @property  CNPhotoPickerActionsViewController *actionsViewController
 @property  CNVisualIdentityEditablePrimaryAvatarViewController *editablePrimaryAvatarController
 @property  CNContactStyle *contactStyle
 @property  BOOL allowRotation
 @property  BOOL shouldUpdateEmojiSuggestions
 @property  NSArray *pendingInjectedSuggestionItems
 @property  CNPhotoPickerHeaderView *headerView
 @property  CNVisualIdentity *pendingVisualIdentity
 @property  CNPhotoPickerDataSource *dataSource
 @property  NSData *proposedImageData
 @property  <CNVisualIdentityPickerViewControllerDelegate> *delegate
 @property  <CNVisualIdentityPickerPresenterDelegate> *presenterDelegate
 @property  NSString *assignActionTitleOverride
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNVisualIdentityPickerViewController descriptorForRequiredKeys]
  +[CNVisualIdentityPickerViewController canShowAvatarEditor]
  +[CNVisualIdentityPickerViewController log]
  +[CNVisualIdentityPickerViewController navigationControllerForPicker:]
  +[CNVisualIdentityPickerViewController makeDescriptorForRequiredKeys]
  +[CNVisualIdentityPickerViewController canShowPhotoPickerForView:withTraitCollection:]
  +[CNVisualIdentityPickerViewController defaultContentSize]
  +[CNVisualIdentityPickerViewController defaultItemSize]
  +[CNVisualIdentityPickerViewController itemsPerRowForWidth:]
  +[CNVisualIdentityPickerViewController imagePickerForContact:]
  +[CNVisualIdentityPickerViewController imagePickerForGroupIdentity:]
  +[CNVisualIdentityPickerViewController imagePickerForVisualIdentity:]

  // instance methods
  -[CNVisualIdentityPickerViewController setCollectionView:]
  -[CNVisualIdentityPickerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNVisualIdentityPickerViewController done:]
  -[CNVisualIdentityPickerViewController contactStyle]
  -[CNVisualIdentityPickerViewController cancel:]
  -[CNVisualIdentityPickerViewController collectionView:cellForItemAtIndexPath:]
  -[CNVisualIdentityPickerViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[CNVisualIdentityPickerViewController presentationControllerWillDismiss:]
  -[CNVisualIdentityPickerViewController dataSource]
  -[CNVisualIdentityPickerViewController scrollViewDidScroll:]
  -[CNVisualIdentityPickerViewController collectionView:layout:insetForSectionAtIndex:]
  -[CNVisualIdentityPickerViewController setDelegate:]
  -[CNVisualIdentityPickerViewController setHeaderView:]
  -[CNVisualIdentityPickerViewController delegate]
  -[CNVisualIdentityPickerViewController hasPendingChanges]
  -[CNVisualIdentityPickerViewController numberOfSectionsInCollectionView:]
  -[CNVisualIdentityPickerViewController setPresenterDelegate:]
  -[CNVisualIdentityPickerViewController headerView]
  -[CNVisualIdentityPickerViewController setContactStyle:]
  -[CNVisualIdentityPickerViewController collectionView:canFocusItemAtIndexPath:]
  -[CNVisualIdentityPickerViewController .cxx_destruct]
  -[CNVisualIdentityPickerViewController collectionView]
  -[CNVisualIdentityPickerViewController viewDidLoad]
  -[CNVisualIdentityPickerViewController viewDidLayoutSubviews]
  -[CNVisualIdentityPickerViewController collectionView:layout:referenceSizeForHeaderInSection:]
  -[CNVisualIdentityPickerViewController presentationControllerDidAttemptToDismiss:]
  -[CNVisualIdentityPickerViewController collectionView:didSelectItemAtIndexPath:]
  -[CNVisualIdentityPickerViewController collectionView:numberOfItemsInSection:]
  -[CNVisualIdentityPickerViewController presenterDelegate]
  -[CNVisualIdentityPickerViewController imagePickerControllerDidCancel:]
  -[CNVisualIdentityPickerViewController imagePickerController:didFinishPickingMediaWithInfo:]
  -[CNVisualIdentityPickerViewController isModalInPresentation]
  -[CNVisualIdentityPickerViewController insertNewItemIntoSuggestions:]
  -[CNVisualIdentityPickerViewController setAllowRotation:]
  -[CNVisualIdentityPickerViewController allowRotation]
  -[CNVisualIdentityPickerViewController sender:presentViewController:]
  -[CNVisualIdentityPickerViewController sender:dismissViewController:]
  -[CNVisualIdentityPickerViewController sender:dismissViewController:completionHandler:]
  -[CNVisualIdentityPickerViewController isPresentingModalViewController]
  -[CNVisualIdentityPickerViewController assignActionTitleOverride]
  -[CNVisualIdentityPickerViewController setAssignActionTitleOverride:]
  -[CNVisualIdentityPickerViewController actionsViewController]
  -[CNVisualIdentityPickerViewController setActionsViewController:]
  -[CNVisualIdentityPickerViewController photoPickerProviderGroupDidUpdate:]
  -[CNVisualIdentityPickerViewController photoPickerProviderGroup:didUpdateItem:]
  -[CNVisualIdentityPickerViewController visualIdentity]
  -[CNVisualIdentityPickerViewController editableAvatarViewController:didUpdateWithProviderItem:]
  -[CNVisualIdentityPickerViewController textFieldFontSize]
  -[CNVisualIdentityPickerViewController buildCollectionView]
  -[CNVisualIdentityPickerViewController confirmCancelAction]
  -[CNVisualIdentityPickerViewController photoPickerHeaderView:didUpdateIdentityNameTextField:withText:]
  -[CNVisualIdentityPickerViewController photoPickerHeaderViewDidTapClearAvatarImageButton:]
  -[CNVisualIdentityPickerViewController photoPickerHeaderViewDidReceiveDroppedImageData:]
  -[CNVisualIdentityPickerViewController avatarEditingManager:didFinishWithProviderItem:]
  -[CNVisualIdentityPickerViewController avatarEditorViewController:didFinishWithAvatarRecord:]
  -[CNVisualIdentityPickerViewController avatarEditorViewControllerDidCancel:]
  -[CNVisualIdentityPickerViewController photoPickerActionsViewControllerDidFinish:]
  -[CNVisualIdentityPickerViewController photoPickerActionsViewController:didPerformAction:withProviderItem:atIndexPath:]
  -[CNVisualIdentityPickerViewController visualIdentityEditorControllerDidCancel:]
  -[CNVisualIdentityPickerViewController visualIdentityEditorController:didFinishWithProviderItem:]
  -[CNVisualIdentityPickerViewController initWithPhotosDataSource:style:allowRotation:]
  -[CNVisualIdentityPickerViewController pendingVisualIdentity]
  -[CNVisualIdentityPickerViewController updateVisualIdentityWithProposedImageData:]
  -[CNVisualIdentityPickerViewController collectionViewPaddingForCatalyst]
  -[CNVisualIdentityPickerViewController buildHeaderView]
  -[CNVisualIdentityPickerViewController initializeHeaderView]
  -[CNVisualIdentityPickerViewController photoPickerNavigationControllerForRootController:]
  -[CNVisualIdentityPickerViewController updateActiveIndexPath:reload:]
  -[CNVisualIdentityPickerViewController updateActiveIndexPath:]
  -[CNVisualIdentityPickerViewController updateVisualIdentityWithProviderItem:]
  -[CNVisualIdentityPickerViewController updateInjectedItemsSectionForProviderItem:]
  -[CNVisualIdentityPickerViewController updateDoneButtonEnabledState]
  -[CNVisualIdentityPickerViewController updateDoneButtonEnabledStateForEditingProviderItem:]
  -[CNVisualIdentityPickerViewController updateHeaderViewAvatar]
  -[CNVisualIdentityPickerViewController insertNewItem:toGroupType:updateActive:]
  -[CNVisualIdentityPickerViewController insertNewItem:toGroupType:updateActive:scrollToItem:]
  -[CNVisualIdentityPickerViewController deleteExistingItem:]
  -[CNVisualIdentityPickerViewController setSuggestionsProviderItemAsActiveItem:]
  -[CNVisualIdentityPickerViewController contactImageForCurrentActiveItem]
  -[CNVisualIdentityPickerViewController headerActionPressedAtIndexPath:]
  -[CNVisualIdentityPickerViewController processSelectionForSuggestionsProviderItem:atIndexPath:]
  -[CNVisualIdentityPickerViewController didSelectSuggestionsAddItemAtIndexPath:]
  -[CNVisualIdentityPickerViewController handleAddEmojiItemSelectedWithIndexPath:]
  -[CNVisualIdentityPickerViewController presentEmojiEditor]
  -[CNVisualIdentityPickerViewController presentMonogramEditorFromIndexPath:]
  -[CNVisualIdentityPickerViewController isEditingOrDuplicatingItem]
  -[CNVisualIdentityPickerViewController selectItem:presentFromViewControllerIfNeeded:]
  -[CNVisualIdentityPickerViewController presentVisualIdentityItemEditorForItem:fromViewController:]
  -[CNVisualIdentityPickerViewController defaultModalPresentationStyle]
  -[CNVisualIdentityPickerViewController showAvatarEditorForCreation]
  -[CNVisualIdentityPickerViewController showAvatarPosePickerFromItem:atIndexPath:]
  -[CNVisualIdentityPickerViewController showAvatarCropAndScaleForItem:fromViewController:]
  -[CNVisualIdentityPickerViewController presentLibraryImagePickerForIndexPath:]
  -[CNVisualIdentityPickerViewController presentCameraImagePicker]
  -[CNVisualIdentityPickerViewController presentEditImagePickerForImageData:cropRect:fromViewController:]
  -[CNVisualIdentityPickerViewController reloadItemsForUpdatedSuggestionsGroup:atSectionIndex:]
  -[CNVisualIdentityPickerViewController updateActiveIndexPathForUpdatedSuggestionsGroup:atSectionIndex:]
  -[CNVisualIdentityPickerViewController updateVisualIdentityWithName:locale:]
  -[CNVisualIdentityPickerViewController updateMonogramsForUpdatedVisualIdentity:]
  -[CNVisualIdentityPickerViewController updateEmojiSuggestionsForUpdatedVisualIdentity:locale:]
  -[CNVisualIdentityPickerViewController createImagePickerForEditingImageData:withCropRect:]
  -[CNVisualIdentityPickerViewController presentImagePicker:withStyle:fromViewController:]
  -[CNVisualIdentityPickerViewController providerItemFromPhotoPickerInfo:]
  -[CNVisualIdentityPickerViewController presentActionsViewControllerForProviderItem:atIndexPath:]
  -[CNVisualIdentityPickerViewController presentDismissConfirmation]
  -[CNVisualIdentityPickerViewController deleteItemFromRecentsImageStore:]
  -[CNVisualIdentityPickerViewController saveItemToRecentsImageStore:]
  -[CNVisualIdentityPickerViewController presentEditItemViewController:fromViewController:]
  -[CNVisualIdentityPickerViewController didCancelEditingProviderItemFromViewController:]
  -[CNVisualIdentityPickerViewController updateForSelectedProviderItem:]
  -[CNVisualIdentityPickerViewController viewController:didSelectUpdatedProviderItem:]
  -[CNVisualIdentityPickerViewController lastSelectedProviderItem]
  -[CNVisualIdentityPickerViewController setLastSelectedProviderItem:]
  -[CNVisualIdentityPickerViewController editingProviderItem]
  -[CNVisualIdentityPickerViewController setEditingProviderItem:]
  -[CNVisualIdentityPickerViewController duplicatingProviderItem]
  -[CNVisualIdentityPickerViewController setDuplicatingProviderItem:]
  -[CNVisualIdentityPickerViewController avatarEditingManager]
  -[CNVisualIdentityPickerViewController setAvatarEditingManager:]
  -[CNVisualIdentityPickerViewController editablePrimaryAvatarController]
  -[CNVisualIdentityPickerViewController setEditablePrimaryAvatarController:]
  -[CNVisualIdentityPickerViewController shouldUpdateEmojiSuggestions]
  -[CNVisualIdentityPickerViewController setShouldUpdateEmojiSuggestions:]
  -[CNVisualIdentityPickerViewController pendingInjectedSuggestionItems]
  -[CNVisualIdentityPickerViewController setPendingInjectedSuggestionItems:]
  -[CNVisualIdentityPickerViewController setPendingVisualIdentity:]
  -[CNVisualIdentityPickerViewController proposedImageData]
  -[CNVisualIdentityPickerViewController setProposedImageData:]


CNVisualIdentityAvatarLayoutManager : NSObject
 @property  NSArray *avatarViewAdHocLayoutConfiguration
 @property  NSArray *avatarViewLayoutConfiguration
 @property  long long maxAvatarCount
 @property  NSArray *avatarLayerItems
 @property  CNAvatarAccessoryView *mediaContextBadge

  // instance methods
  -[CNVisualIdentityAvatarLayoutManager .cxx_destruct]
  -[CNVisualIdentityAvatarLayoutManager init]
  -[CNVisualIdentityAvatarLayoutManager setMediaContextBadge:]
  -[CNVisualIdentityAvatarLayoutManager mediaContextBadge]
  -[CNVisualIdentityAvatarLayoutManager avatarFrameForFocusedAvatarInView:]
  -[CNVisualIdentityAvatarLayoutManager updateAvatarLayersForItemCount:inView:]
  -[CNVisualIdentityAvatarLayoutManager updateAvatarLayersForItemCount:inView:withLayoutType:]
  -[CNVisualIdentityAvatarLayoutManager updateLayer:forItemCount:atIndex:inView:withLayoutType:]
  -[CNVisualIdentityAvatarLayoutManager hasMediaContextBadge]
  -[CNVisualIdentityAvatarLayoutManager updateAvatarLayersWithPrimaryAvatarForItemCount:inView:]
  -[CNVisualIdentityAvatarLayoutManager adHocAvatarFrameInView:forItemCount:]
  -[CNVisualIdentityAvatarLayoutManager adHocAvatarFrameInBounds:forItemCount:]
  -[CNVisualIdentityAvatarLayoutManager avatarFrameInBounds:forItemCount:]
  -[CNVisualIdentityAvatarLayoutManager avatarFrameInBounds:forItemCount:withConfiguration:]
  -[CNVisualIdentityAvatarLayoutManager layoutConfigurationForIndex:inItemCount:withLayoutType:]
  -[CNVisualIdentityAvatarLayoutManager maxAvatarCount]
  -[CNVisualIdentityAvatarLayoutManager avatarLayerItems]
  -[CNVisualIdentityAvatarLayoutManager setAvatarLayerItems:]
  -[CNVisualIdentityAvatarLayoutManager avatarViewAdHocLayoutConfiguration]
  -[CNVisualIdentityAvatarLayoutManager setAvatarViewAdHocLayoutConfiguration:]
  -[CNVisualIdentityAvatarLayoutManager avatarViewLayoutConfiguration]
  -[CNVisualIdentityAvatarLayoutManager setAvatarViewLayoutConfiguration:]


CNAvatarEditingManager : NSObject <AVTPoseSelectionViewControllerDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate>
 @property  <AVTAvatarRecord> *avatarRecord
 @property  AVTStickerConfiguration *poseConfiguration
 @property  UIViewController *viewController
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  UIImage *imageWithAlpha
 @property  <CNAvatarEditingManagerDelegate> *delegate
 @property  CNPhotoPickerAnimojiProviderItem *originalItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNAvatarEditingManager log]

  // instance methods
  -[CNAvatarEditingManager setDelegate:]
  -[CNAvatarEditingManager setViewController:]
  -[CNAvatarEditingManager delegate]
  -[CNAvatarEditingManager .cxx_destruct]
  -[CNAvatarEditingManager viewController]
  -[CNAvatarEditingManager imagePickerControllerDidCancel:]
  -[CNAvatarEditingManager imagePickerController:didFinishPickingMediaWithInfo:]
  -[CNAvatarEditingManager avatarRecord]
  -[CNAvatarEditingManager initWithAvatarRecord:variantsManager:]
  -[CNAvatarEditingManager variantsManager]
  -[CNAvatarEditingManager poseSelectionControllerDidCancel:]
  -[CNAvatarEditingManager poseSelectionController:didSelectPoseWithConfiguration:]
  -[CNAvatarEditingManager initForEditingWithAvatarRecord:variantsManager:fromViewController:]
  -[CNAvatarEditingManager originalItem]
  -[CNAvatarEditingManager captureFlashViewWithSize:alpha:]
  -[CNAvatarEditingManager fullScreenImageFromImage:inSize:]
  -[CNAvatarEditingManager computeFullscreenImageRectForScreenWithSize:]
  -[CNAvatarEditingManager renderImage:inRect:]
  -[CNAvatarEditingManager compositeImageDataForImage:backgroundColor:]
  -[CNAvatarEditingManager presentImagePickerForImage:fadeIn:completion:]
  -[CNAvatarEditingManager imagePickerForItem:]
  -[CNAvatarEditingManager createImagePickerForEditingImageData:withCropRect:customBackgroundColor:]
  -[CNAvatarEditingManager setOriginalItem:]
  -[CNAvatarEditingManager poseConfiguration]
  -[CNAvatarEditingManager setPoseConfiguration:]
  -[CNAvatarEditingManager imageWithAlpha]
  -[CNAvatarEditingManager setImageWithAlpha:]


CNPropertyGroupNoteItem : CNPropertyGroupItem
  // instance methods
  -[CNPropertyGroupNoteItem displayLabel]
  -[CNPropertyGroupNoteItem canRemove]
  -[CNPropertyGroupNoteItem isEquivalentToItem:whenEditing:]


CNSharingProfilePhotoPickerItemCell : UICollectionViewCell
 @property  CAShapeLayer *selectionStrokeLayer
 @property  UIImageView *imageView
 @property  {CGSize=dd} originalSize
 @property  BOOL isSmallScreen
 @property  CNSharingProfilePhotoPickerItem *pickerItem

  // class methods
  +[CNSharingProfilePhotoPickerItemCell reuseIdentifier]

  // instance methods
  -[CNSharingProfilePhotoPickerItemCell isSmallScreen]
  -[CNSharingProfilePhotoPickerItemCell setImageView:]
  -[CNSharingProfilePhotoPickerItemCell setSelected:]
  -[CNSharingProfilePhotoPickerItemCell .cxx_destruct]
  -[CNSharingProfilePhotoPickerItemCell prepareForReuse]
  -[CNSharingProfilePhotoPickerItemCell setHighlighted:]
  -[CNSharingProfilePhotoPickerItemCell layoutSubviews]
  -[CNSharingProfilePhotoPickerItemCell originalSize]
  -[CNSharingProfilePhotoPickerItemCell initWithFrame:]
  -[CNSharingProfilePhotoPickerItemCell traitCollectionDidChange:]
  -[CNSharingProfilePhotoPickerItemCell imageView]
  -[CNSharingProfilePhotoPickerItemCell setPickerItem:]
  -[CNSharingProfilePhotoPickerItemCell selectionBezierPath]
  -[CNSharingProfilePhotoPickerItemCell updateWithImage:]
  -[CNSharingProfilePhotoPickerItemCell setIsSmallScreen:]
  -[CNSharingProfilePhotoPickerItemCell pickerItem]
  -[CNSharingProfilePhotoPickerItemCell selectionStrokeLayer]
  -[CNSharingProfilePhotoPickerItemCell setSelectionStrokeLayer:]
  -[CNSharingProfilePhotoPickerItemCell setOriginalSize:]


CNPropertyGeminiEditingCell : CNPropertySimpleCell <CNPickerControllerDelegate, CNUIGeminiDataSourceDelegate>
 @property  CNGeminiPickerController *geminiPicker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPropertyGeminiEditingCell shouldIndentWhileEditing]
  +[CNPropertyGeminiEditingCell wantsChevron]
  +[CNPropertyGeminiEditingCell wantsHorizontalLayout]

  // instance methods
  -[CNPropertyGeminiEditingCell initWithStyle:reuseIdentifier:]
  -[CNPropertyGeminiEditingCell .cxx_destruct]
  -[CNPropertyGeminiEditingCell variableConstraints]
  -[CNPropertyGeminiEditingCell minCellHeight]
  -[CNPropertyGeminiEditingCell shouldPerformDefaultAction]
  -[CNPropertyGeminiEditingCell performDefaultAction]
  -[CNPropertyGeminiEditingCell picker:didPickItem:]
  -[CNPropertyGeminiEditingCell pickerDidCancel:]
  -[CNPropertyGeminiEditingCell geminiPicker]
  -[CNPropertyGeminiEditingCell setGeminiPicker:]
  -[CNPropertyGeminiEditingCell geminiDataSourceDidUpdate:]
  -[CNPropertyGeminiEditingCell geminiItem]


CNPhotoPickerVariantListController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, CNPhotoPickerProviderItemDelegate>
 @property  UICollectionView *collectionView
 @property  UIView *headerView
 @property  UIImageView *previewImageView
 @property  CNPhotoPickerPreviewView *posePreview
 @property  NSString *selectedVariantIdentifier
 @property  NSArray *providerItems
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  BOOL shouldShowCaptions
 @property  <CNPhotoPickerVariantListControllerDelegate> *delegate
 @property  CNPhotoPickerProviderItem *originalItem
 @property  NSString *variantsDisplayTitle
 @property  UIView *sectionHeaderView
 @property  @? numberOfItemsPerRowProvider
 @property  BOOL showPreview
 @property  unsigned long cellStyle
 @property  BOOL showsToolbar
 @property  BOOL commitsChangesOnSelection
 @property  BOOL showsSelection
 @property  NSString *rightBarButtonTitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPhotoPickerVariantListController topMarginForBounds:shouldShowCaptions:]
  +[CNPhotoPickerVariantListController frameForHeaderInBounds:]

  // instance methods
  -[CNPhotoPickerVariantListController setCollectionView:]
  -[CNPhotoPickerVariantListController cancel:]
  -[CNPhotoPickerVariantListController collectionView:cellForItemAtIndexPath:]
  -[CNPhotoPickerVariantListController setDelegate:]
  -[CNPhotoPickerVariantListController setHeaderView:]
  -[CNPhotoPickerVariantListController contentSizeCategoryDidChange:]
  -[CNPhotoPickerVariantListController collectionView:shouldSelectItemAtIndexPath:]
  -[CNPhotoPickerVariantListController delegate]
  -[CNPhotoPickerVariantListController numberOfSectionsInCollectionView:]
  -[CNPhotoPickerVariantListController viewDidAppear:]
  -[CNPhotoPickerVariantListController headerView]
  -[CNPhotoPickerVariantListController cellStyle]
  -[CNPhotoPickerVariantListController .cxx_destruct]
  -[CNPhotoPickerVariantListController collectionView]
  -[CNPhotoPickerVariantListController viewDidLoad]
  -[CNPhotoPickerVariantListController scrollView]
  -[CNPhotoPickerVariantListController viewWillAppear:]
  -[CNPhotoPickerVariantListController viewDidLayoutSubviews]
  -[CNPhotoPickerVariantListController showsSelection]
  -[CNPhotoPickerVariantListController collectionView:didSelectItemAtIndexPath:]
  -[CNPhotoPickerVariantListController setShowsSelection:]
  -[CNPhotoPickerVariantListController collectionView:numberOfItemsInSection:]
  -[CNPhotoPickerVariantListController setCellStyle:]
  -[CNPhotoPickerVariantListController providerItemDidUpdate:]
  -[CNPhotoPickerVariantListController variantsManager]
  -[CNPhotoPickerVariantListController setVariantsManager:]
  -[CNPhotoPickerVariantListController updatePreviewWithItem:]
  -[CNPhotoPickerVariantListController updateFlowLayoutItemSize]
  -[CNPhotoPickerVariantListController generateProviderItems]
  -[CNPhotoPickerVariantListController initWithVariantsManager:originalItem:selectedVariantIdentifier:]
  -[CNPhotoPickerVariantListController buildCollectionView]
  -[CNPhotoPickerVariantListController originalItem]
  -[CNPhotoPickerVariantListController didFinishSelectingVariant]
  -[CNPhotoPickerVariantListController initWithVariantsManager:originalItem:]
  -[CNPhotoPickerVariantListController buildHeader]
  -[CNPhotoPickerVariantListController variantsDisplayTitle]
  -[CNPhotoPickerVariantListController updateForNewOriginalItem:]
  -[CNPhotoPickerVariantListController sectionHeaderView]
  -[CNPhotoPickerVariantListController setSectionHeaderView:]
  -[CNPhotoPickerVariantListController numberOfItemsPerRowProvider]
  -[CNPhotoPickerVariantListController setNumberOfItemsPerRowProvider:]
  -[CNPhotoPickerVariantListController showPreview]
  -[CNPhotoPickerVariantListController setShowPreview:]
  -[CNPhotoPickerVariantListController showsToolbar]
  -[CNPhotoPickerVariantListController setShowsToolbar:]
  -[CNPhotoPickerVariantListController commitsChangesOnSelection]
  -[CNPhotoPickerVariantListController setCommitsChangesOnSelection:]
  -[CNPhotoPickerVariantListController rightBarButtonTitle]
  -[CNPhotoPickerVariantListController setRightBarButtonTitle:]
  -[CNPhotoPickerVariantListController previewImageView]
  -[CNPhotoPickerVariantListController setPreviewImageView:]
  -[CNPhotoPickerVariantListController posePreview]
  -[CNPhotoPickerVariantListController setPosePreview:]
  -[CNPhotoPickerVariantListController selectedVariantIdentifier]
  -[CNPhotoPickerVariantListController setSelectedVariantIdentifier:]
  -[CNPhotoPickerVariantListController providerItems]
  -[CNPhotoPickerVariantListController setProviderItems:]
  -[CNPhotoPickerVariantListController shouldShowCaptions]
  -[CNPhotoPickerVariantListController setShouldShowCaptions:]


CNPropertyGroupPhoneItem : CNPropertyGroupItem
 @property  CNPhoneNumber *phoneNumber

  // class methods
  +[CNPropertyGroupPhoneItem emptyValueForLabel:]

  // instance methods
  -[CNPropertyGroupPhoneItem phoneNumber]
  -[CNPropertyGroupPhoneItem defaultActionURL]
  -[CNPropertyGroupPhoneItem normalizedValue]
  -[CNPropertyGroupPhoneItem displayStringForValue:]
  -[CNPropertyGroupPhoneItem valueForDisplayString:]
  -[CNPropertyGroupPhoneItem bestLabel:]


CNContactListSetMyCardAction : CNContactListUndoableAction
 @property  CNContact *originalMeContact

  // class methods
  +[CNContactListSetMyCardAction log]

  // instance methods
  -[CNContactListSetMyCardAction performAction]
  -[CNContactListSetMyCardAction .cxx_destruct]
  -[CNContactListSetMyCardAction performUndoAction]
  -[CNContactListSetMyCardAction initWithContact:configuration:]
  -[CNContactListSetMyCardAction updatedMeContact]
  -[CNContactListSetMyCardAction fetchOriginalMeContact]
  -[CNContactListSetMyCardAction updateMeContact:]
  -[CNContactListSetMyCardAction originalMeContact]
  -[CNContactListSetMyCardAction setOriginalMeContact:]


CNTestQuickActionView : UIView <CNContactQuickActionPresentation>
 @property  NSMutableArray *titlesAssigned
 @property  NSMutableArray *statesAssigned
 @property  BOOL enabled
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNTestQuickActionView .cxx_destruct]
  -[CNTestQuickActionView setEnabled:]
  -[CNTestQuickActionView title]
  -[CNTestQuickActionView enabled]
  -[CNTestQuickActionView setTitle:]
  -[CNTestQuickActionView init]
  -[CNTestQuickActionView titlesAssigned]
  -[CNTestQuickActionView statesAssigned]


CNTestQuickActionViewContainer : NSObject <CNContactQuickActionViewContainer>
 @property  NSDictionary *actionViewsByActionType
 @property  UITraitCollection *traitCollection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNTestQuickActionViewContainer .cxx_destruct]
  -[CNTestQuickActionViewContainer viewForActionType:]
  -[CNTestQuickActionViewContainer initWithActionTypes:]
  -[CNTestQuickActionViewContainer actionViewsByActionType]


TestCNUIUserActionListDataSource : NSObject <CNUIUserActionListDataSource>
 @property  CNContact *contact
 @property  NSDictionary *userActionListModelResultBlocksByActionTypeAskedFor
 @property  NSDictionary *actionsByActionTypeByContact
 @property  BOOL tracksChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TestCNUIUserActionListDataSource allActionTypes]
  +[TestCNUIUserActionListDataSource allSupportedActionTypes]
  +[TestCNUIUserActionListDataSource allSupportedActionTypesWithCapabilities:]

  // instance methods
  -[TestCNUIUserActionListDataSource contact]
  -[TestCNUIUserActionListDataSource .cxx_destruct]
  -[TestCNUIUserActionListDataSource setContact:]
  -[TestCNUIUserActionListDataSource actionTypesForConsumer:]
  -[TestCNUIUserActionListDataSource consumer:localizedDisplayNameForActionType:]
  -[TestCNUIUserActionListDataSource consumer:localizedButtonDisplayNameForActionType:]
  -[TestCNUIUserActionListDataSource consumer:localizedDisplayNameForButtonWithDefaultAction:actionType:]
  -[TestCNUIUserActionListDataSource consumer:imageForActionType:]
  -[TestCNUIUserActionListDataSource thirdPartyTargetsForActionTypes:]
  -[TestCNUIUserActionListDataSource thirdPartyActionsForContactProperty:]
  -[TestCNUIUserActionListDataSource tracksChanges]
  -[TestCNUIUserActionListDataSource setTracksChanges:]
  -[TestCNUIUserActionListDataSource initWithActionsByActionTypeByContact:]
  -[TestCNUIUserActionListDataSource consumer:actionModelsForActionType:handler:]
  -[TestCNUIUserActionListDataSource consumer:actionModelsForActionType:]
  -[TestCNUIUserActionListDataSource thirdPartyActionsForCurrentContactAndPropertyKey:identifier:]
  -[TestCNUIUserActionListDataSource userActionListModelResultBlocksByActionTypeAskedFor]
  -[TestCNUIUserActionListDataSource setUserActionListModelResultBlocksByActionTypeAskedFor:]
  -[TestCNUIUserActionListDataSource actionsByActionTypeByContact]


TestCNUIUserActionContext : NSObject <CNUIUserActionContext>
 @property  NSString *channelIdentifier
 @property  BOOL actionExecutionWasAttemted
 @property  <CNUIUserActionURLOpener> *urlOpener
 @property  <CNUIUserActionUserActivityOpener> *userActivityOpener
 @property  <CNUIUserActionDialRequestOpener> *dialRequestOpener
 @property  <CNUIUserActionRecorder> *actionRecorder
 @property  <CNUIUserActionCurator> *actionCurator
 @property  BSServiceConnectionEndpoint *connectionEndpoint
 @property  BOOL isOriginatingFromFavorites
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TestCNUIUserActionContext .cxx_destruct]
  -[TestCNUIUserActionContext nilValue]
  -[TestCNUIUserActionContext actionRecorder]
  -[TestCNUIUserActionContext urlOpener]
  -[TestCNUIUserActionContext userActivityOpener]
  -[TestCNUIUserActionContext dialRequestOpener]
  -[TestCNUIUserActionContext actionCurator]
  -[TestCNUIUserActionContext channelIdentifier]
  -[TestCNUIUserActionContext setChannelIdentifier:]
  -[TestCNUIUserActionContext actionExecutionWasAttemted]
  -[TestCNUIUserActionContext setActionExecutionWasAttemted:]


CNContactPicker : CNContactPickerViewController

CNCardContactContainerGroupItem : CNCardGroupItem
 @property  NSArray *containers

  // instance methods
  -[CNCardContactContainerGroupItem containers]
  -[CNCardContactContainerGroupItem .cxx_destruct]
  -[CNCardContactContainerGroupItem initWithContainers:]
  -[CNCardContactContainerGroupItem setContainers:]


CNSharingProfileOnboardingAudienceViewController : OBTableWelcomeController <UITableViewDelegate, UITableViewDataSource, UITextFieldDelegate, CNSharingProfileOnboardingAudienceController>
 @property  NSLayoutConstraint *tableViewHeightConstraint
 @property  OBBoldTrayButton *confirmButton
 @property  UITextField *givenNameField
 @property  UITextField *familyNameField
 @property  id traitCollectionChangeToken
 @property  CNMutableContact *contact
 @property  CNSharingProfileAudienceDataSource *sharingAudienceDataSource
 @property  double keyboardHeight
 @property  long long nameOrder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <CNSharingProfileOnboardingAudienceControllerDelegate> *delegate

  // class methods
  +[CNSharingProfileOnboardingAudienceViewController descriptorForRequiredKeys]
  +[CNSharingProfileOnboardingAudienceViewController headerText]

  // instance methods
  -[CNSharingProfileOnboardingAudienceViewController tableView:heightForRowAtIndexPath:]
  -[CNSharingProfileOnboardingAudienceViewController setKeyboardHeight:]
  -[CNSharingProfileOnboardingAudienceViewController tableView:cellForRowAtIndexPath:]
  -[CNSharingProfileOnboardingAudienceViewController tableView:numberOfRowsInSection:]
  -[CNSharingProfileOnboardingAudienceViewController numberOfSectionsInTableView:]
  -[CNSharingProfileOnboardingAudienceViewController tableView:willSelectRowAtIndexPath:]
  -[CNSharingProfileOnboardingAudienceViewController keyboardHeight]
  -[CNSharingProfileOnboardingAudienceViewController contact]
  -[CNSharingProfileOnboardingAudienceViewController textFieldShouldReturn:]
  -[CNSharingProfileOnboardingAudienceViewController setDelegate:]
  -[CNSharingProfileOnboardingAudienceViewController contentSizeCategoryDidChange:]
  -[CNSharingProfileOnboardingAudienceViewController tableView:didSelectRowAtIndexPath:]
  -[CNSharingProfileOnboardingAudienceViewController delegate]
  -[CNSharingProfileOnboardingAudienceViewController tableView:titleForHeaderInSection:]
  -[CNSharingProfileOnboardingAudienceViewController dealloc]
  -[CNSharingProfileOnboardingAudienceViewController nameOrder]
  -[CNSharingProfileOnboardingAudienceViewController .cxx_destruct]
  -[CNSharingProfileOnboardingAudienceViewController viewDidLoad]
  -[CNSharingProfileOnboardingAudienceViewController viewDidLayoutSubviews]
  -[CNSharingProfileOnboardingAudienceViewController textFieldDidEndEditing:]
  -[CNSharingProfileOnboardingAudienceViewController setContact:]
  -[CNSharingProfileOnboardingAudienceViewController traitCollectionDidChange:]
  -[CNSharingProfileOnboardingAudienceViewController tableView:titleForFooterInSection:]
  -[CNSharingProfileOnboardingAudienceViewController givenNameDidChange:]
  -[CNSharingProfileOnboardingAudienceViewController familyNameDidChange:]
  -[CNSharingProfileOnboardingAudienceViewController sharingAudienceDataSource]
  -[CNSharingProfileOnboardingAudienceViewController setNameOrder:]
  -[CNSharingProfileOnboardingAudienceViewController givenNameField]
  -[CNSharingProfileOnboardingAudienceViewController setGivenNameField:]
  -[CNSharingProfileOnboardingAudienceViewController familyNameField]
  -[CNSharingProfileOnboardingAudienceViewController setFamilyNameField:]
  -[CNSharingProfileOnboardingAudienceViewController setSharingAudienceDataSource:]
  -[CNSharingProfileOnboardingAudienceViewController handleConfirmButtonTapped:]
  -[CNSharingProfileOnboardingAudienceViewController initWithContact:selectedSharingAudience:]
  -[CNSharingProfileOnboardingAudienceViewController updateConfirmButtonEnabledState]
  -[CNSharingProfileOnboardingAudienceViewController confirmButtonTitle]
  -[CNSharingProfileOnboardingAudienceViewController cellForNameInTableView:]
  -[CNSharingProfileOnboardingAudienceViewController tableViewHeightConstraint]
  -[CNSharingProfileOnboardingAudienceViewController setTableViewHeightConstraint:]
  -[CNSharingProfileOnboardingAudienceViewController confirmButton]
  -[CNSharingProfileOnboardingAudienceViewController setConfirmButton:]
  -[CNSharingProfileOnboardingAudienceViewController traitCollectionChangeToken]
  -[CNSharingProfileOnboardingAudienceViewController setTraitCollectionChangeToken:]


CNLabeledCell : CNContactCell
 @property  UIView<ABText> *labelView
 @property  UIView<ABText> *valueView
 @property  BOOL labelViewNeedsHuggingContent
 @property  BOOL valueViewNeedsHuggingContent
 @property  UIView *rightMostView
 @property  UILabel *standardLabelView
 @property  UILabel *standardValueView
 @property  NSString *labelString
 @property  NSString *valueString
 @property  double valueViewBottomMargin
 @property  NSDictionary *labelTextAttributes
 @property  NSDictionary *valueTextAttributes
 @property  double chevronWidth
 @property  UIImageView *chevron

  // class methods
  +[CNLabeledCell wantsChevron]
  +[CNLabeledCell wantsHorizontalLayout]
  +[CNLabeledCell wantsStandardConstraints]

  // instance methods
  -[CNLabeledCell initWithStyle:reuseIdentifier:]
  -[CNLabeledCell labelView]
  -[CNLabeledCell valueString]
  -[CNLabeledCell .cxx_destruct]
  -[CNLabeledCell tintColorDidChange]
  -[CNLabeledCell chevron]
  -[CNLabeledCell labelString]
  -[CNLabeledCell valueView]
  -[CNLabeledCell rightMostView]
  -[CNLabeledCell setLabelTextAttributes:]
  -[CNLabeledCell variableConstraints]
  -[CNLabeledCell minCellHeight]
  -[CNLabeledCell constantConstraints]
  -[CNLabeledCell labelTextAttributes]
  -[CNLabeledCell valueTextAttributes]
  -[CNLabeledCell setValueTextAttributes:]
  -[CNLabeledCell allowsCellSelection]
  -[CNLabeledCell displaysCellSelectionState]
  -[CNLabeledCell addChevron]
  -[CNLabeledCell removeChevron]
  -[CNLabeledCell chevronWidth]
  -[CNLabeledCell valueViewBottomMargin]
  -[CNLabeledCell constantConstraintsForStandardLayout]
  -[CNLabeledCell variableConstraintsForStandardLayout]
  -[CNLabeledCell constantConstraintsForVerticalLayout]
  -[CNLabeledCell variableConstraintsForVerticalLayout]
  -[CNLabeledCell constantConstraintsForHorizontalLayout]
  -[CNLabeledCell variableConstraintsForHorizontalLayout]
  -[CNLabeledCell standardLabelView]
  -[CNLabeledCell standardValueView]
  -[CNLabeledCell setLabelViewNeedsHuggingContent:]
  -[CNLabeledCell setValueViewNeedsHuggingContent:]
  -[CNLabeledCell labelViewNeedsHuggingContent]
  -[CNLabeledCell valueViewNeedsHuggingContent]


CNContactPickerServiceErrorViewController : CNErrorViewController <CNContactPickerContentViewController>
 @property  <CNContactPickerContentDelegate> *delegate
 @property  UINavigationController *navigationController
 @property  UIBarButtonItem *addContactBarButtonItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactPickerServiceErrorViewController navigationController]
  -[CNContactPickerServiceErrorViewController addContactBarButtonItem]
  -[CNContactPickerServiceErrorViewController setDelegate:]
  -[CNContactPickerServiceErrorViewController delegate]
  -[CNContactPickerServiceErrorViewController .cxx_destruct]
  -[CNContactPickerServiceErrorViewController invalidate]
  -[CNContactPickerServiceErrorViewController setupWithOptions:readyBlock:]
  -[CNContactPickerServiceErrorViewController invalidateSelectionAnimated:]


CNContactListMergeAction : CNContactListUndoableAction
 @property  _TtC10ContactsUI33ContactListMergeUnifyActionHelper *mergeUnifyActionHelper
 @property  CNUIGroupsAndContainersSaveManager *groupsAndContainersSaveManager

  // class methods
  +[CNContactListMergeAction descriptorForRequiredKeys]
  +[CNContactListMergeAction log]

  // instance methods
  -[CNContactListMergeAction performAction]
  -[CNContactListMergeAction groupsAndContainersSaveManager]
  -[CNContactListMergeAction setGroupsAndContainersSaveManager:]
  -[CNContactListMergeAction .cxx_destruct]
  -[CNContactListMergeAction shouldReloadListOnCompletion]
  -[CNContactListMergeAction performUndoAction]
  -[CNContactListMergeAction executeAction]
  -[CNContactListMergeAction mergeWillRequireLinkingForContacts:]
  -[CNContactListMergeAction showMergeFailureAlert]
  -[CNContactListMergeAction mergeUnifyActionHelper]
  -[CNContactListMergeAction setMergeUnifyActionHelper:]


CNPropertyGroupPostalAddressItem : CNPropertyGroupItem
 @property  CNPostalAddress *address

  // class methods
  +[CNPropertyGroupPostalAddressItem emptyValueForLabel:]

  // instance methods
  -[CNPropertyGroupPostalAddressItem address]
  -[CNPropertyGroupPostalAddressItem defaultActionURL]
  -[CNPropertyGroupPostalAddressItem normalizedValue]
  -[CNPropertyGroupPostalAddressItem displayStringForValue:]
  -[CNPropertyGroupPostalAddressItem isEquivalentToItem:whenEditing:]
  -[CNPropertyGroupPostalAddressItem bestValue:]
  -[CNPropertyGroupPostalAddressItem _isMinimalAddress:]


CNPhotoPickerEmojiProviderItem : CNPhotoPickerProviderItem <CNVisualIdentityPickerTextEditableProviderItem>
 @property  {CGSize=dd} size
 @property  NSString *stringRepresentation
 @property  NSData *dataRepresentation
 @property  CNPhotoPickerColorVariant *backgroundColorVariant
 @property  NSString *itemText
 @property  UIColor *backgroundColor

  // class methods
  +[CNPhotoPickerEmojiProviderItem thumbnailViewForImage:]
  +[CNPhotoPickerEmojiProviderItem addNewEmojiProviderItemWithSize:]
  +[CNPhotoPickerEmojiProviderItem suggestedEmojiItemsForString:variantsManager:size:locale:]

  // instance methods
  -[CNPhotoPickerEmojiProviderItem dataRepresentation]
  -[CNPhotoPickerEmojiProviderItem imageType]
  -[CNPhotoPickerEmojiProviderItem .cxx_destruct]
  -[CNPhotoPickerEmojiProviderItem backgroundColor]
  -[CNPhotoPickerEmojiProviderItem stringRepresentation]
  -[CNPhotoPickerEmojiProviderItem size]
  -[CNPhotoPickerEmojiProviderItem imageData]
  -[CNPhotoPickerEmojiProviderItem copyWithZone:]
  -[CNPhotoPickerEmojiProviderItem setSize:]
  -[CNPhotoPickerEmojiProviderItem setStringRepresentation:]
  -[CNPhotoPickerEmojiProviderItem thumbnailImageData]
  -[CNPhotoPickerEmojiProviderItem updatedProviderItemWithText:]
  -[CNPhotoPickerEmojiProviderItem itemText]
  -[CNPhotoPickerEmojiProviderItem allowsVariants]
  -[CNPhotoPickerEmojiProviderItem allowsMoveAndScale]
  -[CNPhotoPickerEmojiProviderItem generateThumbnailImageDataIfNeeded]
  -[CNPhotoPickerEmojiProviderItem updateVisualIdentity:]
  -[CNPhotoPickerEmojiProviderItem createVariantsItemsWithVariantsManager:]
  -[CNPhotoPickerEmojiProviderItem contactImageForMetadataStore]
  -[CNPhotoPickerEmojiProviderItem initWithStringRepresentation:backgroundColorVariant:size:]
  -[CNPhotoPickerEmojiProviderItem copyWithStringRepresentation:]
  -[CNPhotoPickerEmojiProviderItem generateImageRepresentationForEmojiString:]
  -[CNPhotoPickerEmojiProviderItem updatedProviderItemWithText:backgroundColorVariant:]
  -[CNPhotoPickerEmojiProviderItem setDataRepresentation:]
  -[CNPhotoPickerEmojiProviderItem backgroundColorVariant]
  -[CNPhotoPickerEmojiProviderItem setBackgroundColorVariant:]


CNPropertyGroupContactRelationItem : CNPropertyGroupItem
 @property  CNContactRelation *contactRelation

  // class methods
  +[CNPropertyGroupContactRelationItem emptyValueForLabel:]

  // instance methods
  -[CNPropertyGroupContactRelationItem normalizedValue]
  -[CNPropertyGroupContactRelationItem displayStringForValue:]
  -[CNPropertyGroupContactRelationItem valueForDisplayString:]
  -[CNPropertyGroupContactRelationItem contactRelation]


CNPropertyGroupSocialProfileItem : CNPropertyGroupItem
 @property  CNSocialProfile *profile

  // class methods
  +[CNPropertyGroupSocialProfileItem displayStringForSocialProfile:]
  +[CNPropertyGroupSocialProfileItem displayLabelForSocialProfile:forPropertyKey:]
  +[CNPropertyGroupSocialProfileItem emptyValueForLabel:]

  // instance methods
  -[CNPropertyGroupSocialProfileItem displayLabel]
  -[CNPropertyGroupSocialProfileItem profile]
  -[CNPropertyGroupSocialProfileItem defaultActionURL]
  -[CNPropertyGroupSocialProfileItem displayStringForValue:]
  -[CNPropertyGroupSocialProfileItem isEquivalentToItem:]
  -[CNPropertyGroupSocialProfileItem valueForDisplayString:]
  -[CNPropertyGroupSocialProfileItem editingStringValue]


CNContactListCountFooterView : UICollectionViewListCell
 @property  long long contactCount
 @property  long long duplicateCount
 @property  long long selectedCount
 @property  NSObject<CNContactListCountViewDelegate> *delegate

  // instance methods
  -[CNContactListCountFooterView setContactCount:]
  -[CNContactListCountFooterView shouldDisplayDuplicateCount]
  -[CNContactListCountFooterView duplicateCount]
  -[CNContactListCountFooterView setDelegate:]
  -[CNContactListCountFooterView setSelectedCount:]
  -[CNContactListCountFooterView delegate]
  -[CNContactListCountFooterView shouldDisplaySelectedCount]
  -[CNContactListCountFooterView .cxx_destruct]
  -[CNContactListCountFooterView primaryText]
  -[CNContactListCountFooterView selectedCount]
  -[CNContactListCountFooterView shouldDisplayContactCount]
  -[CNContactListCountFooterView contactCount]
  -[CNContactListCountFooterView setDuplicateCount:]
  -[CNContactListCountFooterView countViewConfiguration]
  -[CNContactListCountFooterView initWithFrame:]
  -[CNContactListCountFooterView secondaryText]
  -[CNContactListCountFooterView countStringForLocalizedStringKey:count:]
  -[CNContactListCountFooterView didSelectViewAllDuplicates]


CNPropertyGroupURLAddressItem : CNPropertyGroupItem
  // instance methods
  -[CNPropertyGroupURLAddressItem defaultActionURL]
  -[CNPropertyGroupURLAddressItem displayStringForValue:]
  -[CNPropertyGroupURLAddressItem _urlWithUserString:]


CNContactCardFieldPickerCell : UITableViewCell
 @property  BOOL displaysValue
 @property  CNContactCardFieldItem *item

  // instance methods
  -[CNContactCardFieldPickerCell setItem:]
  -[CNContactCardFieldPickerCell setSelected:animated:]
  -[CNContactCardFieldPickerCell .cxx_destruct]
  -[CNContactCardFieldPickerCell item]
  -[CNContactCardFieldPickerCell init]
  -[CNContactCardFieldPickerCell setConfiguration]
  -[CNContactCardFieldPickerCell attributedDisplayValueForItem:]
  -[CNContactCardFieldPickerCell displaysValue]
  -[CNContactCardFieldPickerCell setDisplaysValue:]


CNPropertyInstantMessageEditingCell : CNPropertySimpleEditingCell <CNPickerControllerDelegate>
 @property  CNInstantMessageAddress *imAddress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPropertyInstantMessageEditingCell picker:didPickItem:]
  -[CNPropertyInstantMessageEditingCell pickerDidCancel:]
  -[CNPropertyInstantMessageEditingCell labelButtonClicked:]
  -[CNPropertyInstantMessageEditingCell imAddress]


CNUIAfterCACommitScheduler : NSObject <CNScheduler>
 @property  CNSuspendableSchedulerDecorator *scheduler
 @property  ^{__CFRunLoopObserver=} runLoopObserver
 @property  double timestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNUIAfterCACommitScheduler performBlock:]
  -[CNUIAfterCACommitScheduler afterDelay:performBlock:qualityOfService:]
  -[CNUIAfterCACommitScheduler performBlock:qualityOfService:]
  -[CNUIAfterCACommitScheduler performCancelableBlock:qualityOfService:]
  -[CNUIAfterCACommitScheduler afterDelay:performBlock:]
  -[CNUIAfterCACommitScheduler scheduler]
  -[CNUIAfterCACommitScheduler performCancelableBlock:]
  -[CNUIAfterCACommitScheduler initWithSchedulerProvider:]
  -[CNUIAfterCACommitScheduler dealloc]
  -[CNUIAfterCACommitScheduler .cxx_destruct]
  -[CNUIAfterCACommitScheduler timestamp]
  -[CNUIAfterCACommitScheduler init]
  -[CNUIAfterCACommitScheduler runLoopObserver]


CNPhotoPickerAccountPhotoProvider : NSObject <CNPhotoPickerProvider>
 @property  CNVisualIdentity *visualIdentity
 @property  BOOL includeUnifiedContactImages
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPhotoPickerAccountPhotoProvider identifier]
  -[CNPhotoPickerAccountPhotoProvider .cxx_destruct]
  -[CNPhotoPickerAccountPhotoProvider setIdentifier:]
  -[CNPhotoPickerAccountPhotoProvider visualIdentity]
  -[CNPhotoPickerAccountPhotoProvider initWithVisualIdentity:]
  -[CNPhotoPickerAccountPhotoProvider loadItemsForSize:scale:RTL:renderingQueue:callbackQueue:itemDelegate:]
  -[CNPhotoPickerAccountPhotoProvider initWithVisualIdentity:includeUnifiedContactImages:]
  -[CNPhotoPickerAccountPhotoProvider providerItemForVisualIdentity:forSize:scale:RTL:renderingQueue:callbackQueue:itemDelegate:]
  -[CNPhotoPickerAccountPhotoProvider includeUnifiedContactImages]
  -[CNPhotoPickerAccountPhotoProvider setIncludeUnifiedContactImages:]


CNSharingProfileAvatarItemProviderConfiguration : NSObject
 @property  PRMonogramColor *monogramColor
 @property  CNPhotoPickerColorVariant *animojiColor
 @property  NSData *memojiMetadata

  // instance methods
  -[CNSharingProfileAvatarItemProviderConfiguration setMonogramColor:]
  -[CNSharingProfileAvatarItemProviderConfiguration .cxx_destruct]
  -[CNSharingProfileAvatarItemProviderConfiguration monogramColor]
  -[CNSharingProfileAvatarItemProviderConfiguration memojiMetadata]
  -[CNSharingProfileAvatarItemProviderConfiguration setMemojiMetadata:]
  -[CNSharingProfileAvatarItemProviderConfiguration setAnimojiColor:]
  -[CNSharingProfileAvatarItemProviderConfiguration animojiColor]


CNContactRecentsReference : NSObject <NSSecureCoding>
 @property  NSNumber *recentContactID
 @property  NSString *domain

  // class methods
  +[CNContactRecentsReference supportsSecureCoding]

  // instance methods
  -[CNContactRecentsReference domain]
  -[CNContactRecentsReference encodeWithCoder:]
  -[CNContactRecentsReference .cxx_destruct]
  -[CNContactRecentsReference init]
  -[CNContactRecentsReference initWithCoder:]
  -[CNContactRecentsReference initWithRecentContactID:domain:]
  -[CNContactRecentsReference recentContactID]


CNGroupMembershipPlaceholderCell : CNPropertyPlaceholderCell
 @property  <CNPropertyCellDelegate> *delegate

  // instance methods
  -[CNGroupMembershipPlaceholderCell setDelegate:]
  -[CNGroupMembershipPlaceholderCell delegate]
  -[CNGroupMembershipPlaceholderCell .cxx_destruct]
  -[CNGroupMembershipPlaceholderCell performDefaultAction]


CNMonogrammer : NSObject
 @property  double diameter
 @property  UIColor *backgroundColor
 @property  UIColor *textColor
 @property  BOOL textKnockout
 @property  UIImage *silhouetteMonogram
 @property  UIImage *questionMarkMonogram
 @property  UIImage *knockoutMaskMonogram
 @property  UIFont *font
 @property  NSArray *keysToFetch

  // class methods
  +[CNMonogrammer _initialsForContact:]
  +[CNMonogrammer requiredKeyDescriptor]
  +[CNMonogrammer descriptorForRequiredKeysIncludingImage:]
  +[CNMonogrammer monogramTypeForContact:]

  // instance methods
  -[CNMonogrammer monogramForContacts:]
  -[CNMonogrammer initWithStyle:diameter:]
  -[CNMonogrammer _copyMonogramWithInitials:]
  -[CNMonogrammer monogramForContact:isContactImage:]
  -[CNMonogrammer setTextColor:]
  -[CNMonogrammer setDiameter:]
  -[CNMonogrammer diameter]
  -[CNMonogrammer silhouetteMonogram]
  -[CNMonogrammer innerBorderWidth]
  -[CNMonogrammer dealloc]
  -[CNMonogrammer .cxx_destruct]
  -[CNMonogrammer monogramsForStark]
  -[CNMonogrammer _copyMonogramWithImageData:]
  -[CNMonogrammer textKnockout]
  -[CNMonogrammer backgroundColor]
  -[CNMonogrammer monogramsAsFlatImages]
  -[CNMonogrammer questionMarkMonogram]
  -[CNMonogrammer setTextKnockout:]
  -[CNMonogrammer monogramsWithTint:]
  -[CNMonogrammer setBackgroundColor:]
  -[CNMonogrammer _initialsForFirstName:lastName:]
  -[CNMonogrammer font]
  -[CNMonogrammer _clearMonogramCache]
  -[CNMonogrammer textColor]
  -[CNMonogrammer setFont:]
  -[CNMonogrammer knockoutMaskMonogram]
  -[CNMonogrammer silhouetteImageName]
  -[CNMonogrammer _copyMonogramWithSilhouette]
  -[CNMonogrammer _copyMonogramWithKnockoutMask]
  -[CNMonogrammer keysToFetch]
  -[CNMonogrammer monogramForContact:]
  -[CNMonogrammer init]
  -[CNMonogrammer monogramForPersonWithFirstName:lastName:]


CNPropertyLabelButton : UIButton
  // class methods
  +[CNPropertyLabelButton propertyLabelButton]

  // instance methods
  -[CNPropertyLabelButton updateConstraints]
  -[CNPropertyLabelButton tintColorDidChange]


CNContactActionsContainerView : NUIContainerBoxView
  // class methods
  +[CNContactActionsContainerView layerClass]

  // instance methods
  -[CNContactActionsContainerView initWithArrangedSubviews:]


CNVCardImportController : NSObject <CNContactViewControllerDelegate, CNMultipleUnknownContactsViewControllerDelegate, CNUIEditAuthorizationControllerDelegate>
 @property  <CNVCardImportControllerPresentationDelegate> *presentationDelegate
 @property  CNQueue *receivedContactsQueue
 @property  CNContactStore *contactStore
 @property  CNUIGroupsAndContainersSaveManager *groupsAndContainersSaveManager
 @property  UIViewController *presentedViewController
 @property  CNUIEditAuthorizationController *editAuthorizationController
 @property  <CNVCardImportControllerDelegate> *delegate
 @property  CNGroup *targetGroup
 @property  CNContainer *targetContainer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNVCardImportController presentationDelegate]
  -[CNVCardImportController editAuthorizationController:authorizationDidFinishWithResult:]
  -[CNVCardImportController groupsAndContainersSaveManager]
  -[CNVCardImportController setGroupsAndContainersSaveManager:]
  -[CNVCardImportController setContactStore:]
  -[CNVCardImportController setPresentationDelegate:]
  -[CNVCardImportController setDelegate:]
  -[CNVCardImportController delegate]
  -[CNVCardImportController .cxx_destruct]
  -[CNVCardImportController contactViewController:didCompleteWithContact:]
  -[CNVCardImportController contactStore]
  -[CNVCardImportController presentedViewController]
  -[CNVCardImportController setPresentedViewController:]
  -[CNVCardImportController editAuthorizationController]
  -[CNVCardImportController setEditAuthorizationController:]
  -[CNVCardImportController targetContainer]
  -[CNVCardImportController targetGroup]
  -[CNVCardImportController setTargetGroup:]
  -[CNVCardImportController setTargetContainer:]
  -[CNVCardImportController saveUnknownPersons:]
  -[CNVCardImportController cancelModalUnknownPersons:]
  -[CNVCardImportController multipleUnknownContactsViewControllerDidComplete:]
  -[CNVCardImportController initWithContactStore:presentationDelegate:]
  -[CNVCardImportController initWithContactStore:presentationDelegate:targetGroup:targetContainer:]
  -[CNVCardImportController contactsFromURL:]
  -[CNVCardImportController presentEnqueueResultsUIForResultContacts:]
  -[CNVCardImportController enqueueContactsAtURL:]
  -[CNVCardImportController enqueueContacts:]
  -[CNVCardImportController dequeueContacts]
  -[CNVCardImportController processNextContacts]
  -[CNVCardImportController presentImportUIForContacts:]
  -[CNVCardImportController dismissContactsAndPresentNext]
  -[CNVCardImportController authorizeAndSaveUnknownPersons]
  -[CNVCardImportController authorizationCheckForSavingReceivedContacts]
  -[CNVCardImportController showEditAuthorizationPane:animated:]
  -[CNVCardImportController saveUnknownPersonsAndMarkSaveWithAuthorizationResult:]
  -[CNVCardImportController receivedContactsQueue]
  -[CNVCardImportController setReceivedContactsQueue:]


CNEditInAppAction : CNContactAction
 @property  CNUIUserActivityManager *activityManager

  // instance methods
  -[CNEditInAppAction activityManager]
  -[CNEditInAppAction .cxx_destruct]
  -[CNEditInAppAction title]
  -[CNEditInAppAction performActionWithSender:]
  -[CNEditInAppAction initWithContact:activityManager:]


CNUIContactStoreLinkedContactSaveExecutor : NSObject <CNUIContactSaveExecutor>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNUIContactStoreLinkedContactSaveExecutor executeSaveWithConfiguration:saveDelegate:]
  -[CNUIContactStoreLinkedContactSaveExecutor saveLinkedContactChanges:mutableContact:contactStore:editingLinkedContacts:ignoresParentalRestrictions:saveWasAuthorized:issuedSaveRequestIdentifiers:]


CNPropertyLinkedCardsAction : CNPropertyAction
 @property  CNContactContentViewController *contactController
 @property  CNMutableContact *linkedContact
 @property  <CNContactContentViewControllerDelegate> *contactDelegate

  // instance methods
  -[CNPropertyLinkedCardsAction dealloc]
  -[CNPropertyLinkedCardsAction .cxx_destruct]
  -[CNPropertyLinkedCardsAction initWithContact:]
  -[CNPropertyLinkedCardsAction setContactDelegate:]
  -[CNPropertyLinkedCardsAction contactDelegate]
  -[CNPropertyLinkedCardsAction performActionForItem:sender:]
  -[CNPropertyLinkedCardsAction setPreferredForImage]
  -[CNPropertyLinkedCardsAction setPreferredForName]
  -[CNPropertyLinkedCardsAction contactController]
  -[CNPropertyLinkedCardsAction setContactController:]
  -[CNPropertyLinkedCardsAction linkedContact]
  -[CNPropertyLinkedCardsAction setLinkedContact:]


CNContactCustomDataSource : NSObject <CNContactChangesObserver, CNContactDataSource>
 @property  NSMutableArray *allContacts
 @property  NSArray *keysToFetch
 @property  NSMapTable *identifiersToIndexes
 @property  NSArray *filteredContacts
 @property  BOOL observingContacts
 @property  CNContactFormatter *contactFormatterImpl
 @property  BOOL autoUpdateContacts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *contacts
 @property  NSDictionary *contactMatchInfos
 @property  NSArray *sections
 @property  NSArray *indexSections
 @property  <CNContactDataSourceDelegate> *delegate
 @property  BOOL canReload
 @property  NSString *displayName
 @property  CNContactStore *store
 @property  CNContactFilter *filter
 @property  CNContactFilter *effectiveFilter
 @property  CNContactFormatter *contactFormatter
 @property  BOOL shouldReturnToAccountsAndGroupsViewAfterSearchIsCanceled

  // instance methods
  -[CNContactCustomDataSource setFilter:]
  -[CNContactCustomDataSource filter]
  -[CNContactCustomDataSource setKeysToFetch:]
  -[CNContactCustomDataSource indexSections]
  -[CNContactCustomDataSource setDelegate:]
  -[CNContactCustomDataSource delegate]
  -[CNContactCustomDataSource dealloc]
  -[CNContactCustomDataSource .cxx_destruct]
  -[CNContactCustomDataSource contacts]
  -[CNContactCustomDataSource contactMatchInfos]
  -[CNContactCustomDataSource allContacts]
  -[CNContactCustomDataSource copyWithZone:]
  -[CNContactCustomDataSource sections]
  -[CNContactCustomDataSource contactFormatter]
  -[CNContactCustomDataSource contactDidChange:]
  -[CNContactCustomDataSource keysToFetch]
  -[CNContactCustomDataSource setContactFormatter:]
  -[CNContactCustomDataSource initWithContacts:]
  -[CNContactCustomDataSource completeContactFromContact:fromMainStoreOnly:keysToFetch:]
  -[CNContactCustomDataSource preferredForNameMeContactIdentifier]
  -[CNContactCustomDataSource filteredContacts]
  -[CNContactCustomDataSource setFilteredContacts:]
  -[CNContactCustomDataSource _sendDataSourceDidChange]
  -[CNContactCustomDataSource indexPathForContact:]
  -[CNContactCustomDataSource canReload]
  -[CNContactCustomDataSource effectiveFilter]
  -[CNContactCustomDataSource initWithContacts:keysToFetch:]
  -[CNContactCustomDataSource initWithContacts:keysToFetch:filter:]
  -[CNContactCustomDataSource _updateFilter]
  -[CNContactCustomDataSource setAutoUpdateContacts:]
  -[CNContactCustomDataSource _startObservingContacts]
  -[CNContactCustomDataSource _stopObservingContacts]
  -[CNContactCustomDataSource _updateContactsObserving]
  -[CNContactCustomDataSource autoUpdateContacts]
  -[CNContactCustomDataSource setAllContacts:]
  -[CNContactCustomDataSource identifiersToIndexes]
  -[CNContactCustomDataSource setIdentifiersToIndexes:]
  -[CNContactCustomDataSource observingContacts]
  -[CNContactCustomDataSource setObservingContacts:]
  -[CNContactCustomDataSource contactFormatterImpl]
  -[CNContactCustomDataSource setContactFormatterImpl:]


CNContactSuggestionViewControllerSGOriginDataSource : NSObject <CNContactSuggestionViewControllerDataSource>
 @property  SGOrigin *origin
 @property  unsigned long type
 @property  NSString *appName
 @property  NSAttributedString *formattedSnippet
 @property  NSString *title
 @property  NSString *date
 @property  NSString *with
 @property  NSURL *url
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactSuggestionViewControllerSGOriginDataSource dateFormatter]
  +[CNContactSuggestionViewControllerSGOriginDataSource contactSuggestionTypeBySuggestionType]

  // instance methods
  -[CNContactSuggestionViewControllerSGOriginDataSource appName]
  -[CNContactSuggestionViewControllerSGOriginDataSource setOrigin:]
  -[CNContactSuggestionViewControllerSGOriginDataSource origin]
  -[CNContactSuggestionViewControllerSGOriginDataSource type]
  -[CNContactSuggestionViewControllerSGOriginDataSource date]
  -[CNContactSuggestionViewControllerSGOriginDataSource .cxx_destruct]
  -[CNContactSuggestionViewControllerSGOriginDataSource title]
  -[CNContactSuggestionViewControllerSGOriginDataSource url]
  -[CNContactSuggestionViewControllerSGOriginDataSource formattedSnippet]
  -[CNContactSuggestionViewControllerSGOriginDataSource with]
  -[CNContactSuggestionViewControllerSGOriginDataSource initWithSGOrigin:]
  -[CNContactSuggestionViewControllerSGOriginDataSource contactNameFromPerson:]


CNVibrantBackdropView : UIView
  // class methods
  +[CNVibrantBackdropView layerClass]


CNMaskingTableView : UITableView
 @property  UIView *tableMaskView
 @property  double maskingInset

  // instance methods
  -[CNMaskingTableView tlk_updateForAppearance:]
  -[CNMaskingTableView .cxx_destruct]
  -[CNMaskingTableView _dynamicUserInterfaceTraitDidChange]
  -[CNMaskingTableView didMoveToWindow]
  -[CNMaskingTableView setMaskingInset:]
  -[CNMaskingTableView tableMaskView]
  -[CNMaskingTableView maskingInset]
  -[CNMaskingTableView setTableMaskView:]


CNContactGeminiView : UIView
 @property  UILayoutGuide *layoutGuide
 @property  UILayoutGuide *geminiLabelLayoutGuide
 @property  CNGeminiBadge *geminiBadge
 @property  UILabel *typeLabel
 @property  UILabel *geminiLabel
 @property  UIImageView *chevronView
 @property  NSArray *activatedConstraints
 @property  BOOL didCalculateLayout
 @property  BOOL isUsingTwoLineLayout
 @property  BOOL allowsPickerActions
 @property  CNGeminiResult *geminiResult
 @property  BOOL highlighted
 @property  UIColor *highlightedColor
 @property  NSDictionary *ab_textAttributes

  // class methods
  +[CNContactGeminiView requiresConstraintBasedLayout]

  // instance methods
  -[CNContactGeminiView setLayoutGuide:]
  -[CNContactGeminiView viewForLastBaselineLayout]
  -[CNContactGeminiView updateConstraints]
  -[CNContactGeminiView .cxx_destruct]
  -[CNContactGeminiView viewForFirstBaselineLayout]
  -[CNContactGeminiView setHighlighted:]
  -[CNContactGeminiView layoutSubviews]
  -[CNContactGeminiView isHighlighted]
  -[CNContactGeminiView sizeThatFits:]
  -[CNContactGeminiView initWithFrame:]
  -[CNContactGeminiView layoutGuide]
  -[CNContactGeminiView _hasBaseline]
  -[CNContactGeminiView typeLabel]
  -[CNContactGeminiView setTypeLabel:]
  -[CNContactGeminiView setHighlightedColor:]
  -[CNContactGeminiView highlightedColor]
  -[CNContactGeminiView activatedConstraints]
  -[CNContactGeminiView setActivatedConstraints:]
  -[CNContactGeminiView setGeminiResult:]
  -[CNContactGeminiView allowsPickerActions]
  -[CNContactGeminiView setAllowsPickerActions:]
  -[CNContactGeminiView geminiResult]
  -[CNContactGeminiView ab_textAttributes]
  -[CNContactGeminiView setAb_textAttributes:]
  -[CNContactGeminiView sizeForSingleLineLayoutFittingSize:]
  -[CNContactGeminiView sizeForTwoLineLayoutFittingSize:]
  -[CNContactGeminiView shouldDisplayBadge]
  -[CNContactGeminiView shouldDisplayChevron]
  -[CNContactGeminiView setNeedsCalculateLayout]
  -[CNContactGeminiView calculateLayoutIfNeeded]
  -[CNContactGeminiView doesLayoutRequireTwoLines]
  -[CNContactGeminiView singleLineLayoutConstraints]
  -[CNContactGeminiView twoLineLayoutConstraints]
  -[CNContactGeminiView localizedChannelUsageFromGeminiResult:]
  -[CNContactGeminiView localizedLabelFromGeminiResult:]
  -[CNContactGeminiView geminiLabelLayoutGuide]
  -[CNContactGeminiView setGeminiLabelLayoutGuide:]
  -[CNContactGeminiView geminiBadge]
  -[CNContactGeminiView setGeminiBadge:]
  -[CNContactGeminiView geminiLabel]
  -[CNContactGeminiView setGeminiLabel:]
  -[CNContactGeminiView chevronView]
  -[CNContactGeminiView setChevronView:]
  -[CNContactGeminiView didCalculateLayout]
  -[CNContactGeminiView setDidCalculateLayout:]
  -[CNContactGeminiView isUsingTwoLineLayout]
  -[CNContactGeminiView setIsUsingTwoLineLayout:]


CNLabeledBadge : UILabel
  // class methods
  +[CNLabeledBadge labeledBadgeWithText:]

  // instance methods
  -[CNLabeledBadge initWithFrame:]


CNUnknownContactsController : NSObject <CNContactViewControllerDelegate, CNMultipleUnknownContactsViewControllerDelegate>
 @property  CNContactStore *contactStore
 @property  NSArray *contacts
 @property  UIViewController *displayedController
 @property  <CNUnknownContactsControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNUnknownContactsController descriptorForRequiredKeys]

  // instance methods
  -[CNUnknownContactsController setDelegate:]
  -[CNUnknownContactsController delegate]
  -[CNUnknownContactsController .cxx_destruct]
  -[CNUnknownContactsController contacts]
  -[CNUnknownContactsController contactViewController:didCompleteWithContact:]
  -[CNUnknownContactsController viewController]
  -[CNUnknownContactsController contactStore]
  -[CNUnknownContactsController contactViewController:shouldPerformDefaultActionForContactProperty:]
  -[CNUnknownContactsController displayedController]
  -[CNUnknownContactsController multipleUnknownContactsViewController:shouldPerformDefaultActionForContactProperty:]
  -[CNUnknownContactsController multipleUnknownContactsViewControllerDidComplete:]
  -[CNUnknownContactsController initWithContacts:contactStore:]
  -[CNUnknownContactsController setDisplayedController:]


CNQuickActionCell : UICollectionViewCell
 @property  CNQuickActionButton *button
 @property  BOOL showTitle
 @property  BOOL showBackgroundPlatter

  // instance methods
  -[CNQuickActionCell button]
  -[CNQuickActionCell .cxx_destruct]
  -[CNQuickActionCell setShowTitle:]
  -[CNQuickActionCell showTitle]
  -[CNQuickActionCell setButton:]
  -[CNQuickActionCell initWithFrame:]
  -[CNQuickActionCell showBackgroundPlatter]
  -[CNQuickActionCell setShowBackgroundPlatter:]


CNQuickActionsView : UIView <UICollectionViewDataSource, UICollectionViewDelegate, CNQuickActionsManagerDelegate, CNQuickActionButtonDelegate, CNContactActionsControllerDelegate, CNUIUserActionListConsumer>
 @property  NSArray *actions
 @property  UICollectionViewFlowLayout *collectionLayout
 @property  UICollectionView *collectionView
 @property  {CGSize=dd} cachedContentSize
 @property  UIAlertController *alertController
 @property  CNContactActionsController *actionsController
 @property  CNQuickAction *performingAction
 @property  CNQuickActionsManager *actionsManager
 @property  double maximumWidth
 @property  CNContact *contact
 @property  NSArray *categories
 @property  BOOL sortsWithDuet
 @property  NSDictionary *titleTextAttributes
 @property  double interspace
 @property  BOOL useDuetIfAvailable
 @property  BOOL showTitles
 @property  BOOL showBackgroundPlatters
 @property  <CNQuickActionsViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNQuickActionsView descriptorForRequiredKeys]
  +[CNQuickActionsView defaultCategories]
  +[CNQuickActionsView requiresConstraintBasedLayout]
  +[CNQuickActionsView hasActionsForContact:]
  +[CNQuickActionsView actionsManagerForContact:]

  // instance methods
  -[CNQuickActionsView setCollectionView:]
  -[CNQuickActionsView interspace]
  -[CNQuickActionsView collectionView:cellForItemAtIndexPath:]
  -[CNQuickActionsView categories]
  -[CNQuickActionsView reloadData]
  -[CNQuickActionsView setTitleTextAttributes:]
  -[CNQuickActionsView contact]
  -[CNQuickActionsView performAction:]
  -[CNQuickActionsView setDelegate:]
  -[CNQuickActionsView titleTextAttributes]
  -[CNQuickActionsView maximumWidth]
  -[CNQuickActionsView delegate]
  -[CNQuickActionsView .cxx_destruct]
  -[CNQuickActionsView collectionView]
  -[CNQuickActionsView actions]
  -[CNQuickActionsView initWithContact:]
  -[CNQuickActionsView _updateActions]
  -[CNQuickActionsView setInterspace:]
  -[CNQuickActionsView updateContentSize]
  -[CNQuickActionsView setContact:]
  -[CNQuickActionsView intrinsicContentSize]
  -[CNQuickActionsView initWithFrame:]
  -[CNQuickActionsView collectionView:numberOfItemsInSection:]
  -[CNQuickActionsView setActions:]
  -[CNQuickActionsView willMoveToWindow:]
  -[CNQuickActionsView setCategories:]
  -[CNQuickActionsView alertController]
  -[CNQuickActionsView setAlertController:]
  -[CNQuickActionsView actionsManager:actionDidPerform:]
  -[CNQuickActionsView actionsManager:presentingViewControllerForAction:]
  -[CNQuickActionsView setSortsWithDuet:]
  -[CNQuickActionsView sortsWithDuet]
  -[CNQuickActionsView useDuetIfAvailable]
  -[CNQuickActionsView setUseDuetIfAvailable:]
  -[CNQuickActionsView actionsController]
  -[CNQuickActionsView contactActionsController:didSelectAction:]
  -[CNQuickActionsView setActionsController:]
  -[CNQuickActionsView actionsManager]
  -[CNQuickActionsView setActionsManager:]
  -[CNQuickActionsView quickActionButton:performAction:]
  -[CNQuickActionsView _widthForButtonCount:itemSize:]
  -[CNQuickActionsView showDisambiguationControllerWithDataSource:actionType:onController:sourceView:]
  -[CNQuickActionsView didDisambiguateActionType:withActionItem:]
  -[CNQuickActionsView showTitles]
  -[CNQuickActionsView setShowTitles:]
  -[CNQuickActionsView showBackgroundPlatters]
  -[CNQuickActionsView setShowBackgroundPlatters:]
  -[CNQuickActionsView collectionLayout]
  -[CNQuickActionsView setCollectionLayout:]
  -[CNQuickActionsView cachedContentSize]
  -[CNQuickActionsView setCachedContentSize:]
  -[CNQuickActionsView performingAction]
  -[CNQuickActionsView setPerformingAction:]


CNPropertyNameCell : CNContactCell
 @property  CNPropertyGroupItem *propertyItem
 @property  UITextField *textField
 @property  UIResponder *firstResponderItem
 @property  <CNPropertyCellDelegate> *delegate

  // class methods
  +[CNPropertyNameCell shouldIndentWhileEditing]

  // instance methods
  -[CNPropertyNameCell initWithStyle:reuseIdentifier:]
  -[CNPropertyNameCell textField]
  -[CNPropertyNameCell setDelegate:]
  -[CNPropertyNameCell contentSizeCategoryDidChange:]
  -[CNPropertyNameCell delegate]
  -[CNPropertyNameCell dealloc]
  -[CNPropertyNameCell .cxx_destruct]
  -[CNPropertyNameCell setBackgroundColor:]
  -[CNPropertyNameCell traitCollectionDidChange:]
  -[CNPropertyNameCell setCardGroupItem:]
  -[CNPropertyNameCell minCellHeight]
  -[CNPropertyNameCell constantConstraints]
  -[CNPropertyNameCell propertyItem]
  -[CNPropertyNameCell textFieldChanged:]
  -[CNPropertyNameCell firstResponderItem]
  -[CNPropertyNameCell setPropertyItem:]
  -[CNPropertyNameCell displayStringForValue:]
  -[CNPropertyNameCell placeholderString]


CNErrorViewController : UIViewController <UIAdaptivePresentationControllerDelegate>
 @property  NSString *errorMessage
 @property  UILabel *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNErrorViewController .cxx_destruct]
  -[CNErrorViewController viewDidLoad]
  -[CNErrorViewController initWithMessage:]
  -[CNErrorViewController label]
  -[CNErrorViewController errorMessage]
  -[CNErrorViewController touchesEnded:withEvent:]


CNUIEditAuthorizationController : NSObject
 @property  <CNUIEditAuthorizationControllerDelegate> *delegate
 @property  id sender
 @property  BOOL animated
 @property  UIViewController *guardedViewController

  // instance methods
  -[CNUIEditAuthorizationController setSender:]
  -[CNUIEditAuthorizationController animated]
  -[CNUIEditAuthorizationController setDelegate:]
  -[CNUIEditAuthorizationController delegate]
  -[CNUIEditAuthorizationController dealloc]
  -[CNUIEditAuthorizationController .cxx_destruct]
  -[CNUIEditAuthorizationController setAnimated:]
  -[CNUIEditAuthorizationController sender]
  -[CNUIEditAuthorizationController lockoutRestrictionsPINControllerDidFinish:]
  -[CNUIEditAuthorizationController presentAuthorizationUI]
  -[CNUIEditAuthorizationController userDidEnterPasswordCorrectly:]
  -[CNUIEditAuthorizationController didAutorize]
  -[CNUIEditAuthorizationController didNotAuthorize]
  -[CNUIEditAuthorizationController guardedViewController]
  -[CNUIEditAuthorizationController setGuardedViewController:]


CNUIContactPolicyValidator : NSObject
  // class methods
  +[CNUIContactPolicyValidator contactFromContact:conformingToPolicy:options:]


CNPropertyNoteCell : CNPropertyCell
 @property  UILabel *labelLabel
 @property  UITextView *textView

  // class methods
  +[CNPropertyNoteCell shouldIndentWhileEditing]

  // instance methods
  -[CNPropertyNoteCell setProperty:]
  -[CNPropertyNoteCell initWithStyle:reuseIdentifier:]
  -[CNPropertyNoteCell setAllowsEditing:]
  -[CNPropertyNoteCell labelView]
  -[CNPropertyNoteCell dealloc]
  -[CNPropertyNoteCell textView]
  -[CNPropertyNoteCell .cxx_destruct]
  -[CNPropertyNoteCell setTextView:]
  -[CNPropertyNoteCell valueView]
  -[CNPropertyNoteCell labelLabel]
  -[CNPropertyNoteCell shouldPerformDefaultAction]
  -[CNPropertyNoteCell performDefaultAction]
  -[CNPropertyNoteCell setValueTextAttributes:]
  -[CNPropertyNoteCell supportsTintColorValue]
  -[CNPropertyNoteCell allowsCellSelection]
  -[CNPropertyNoteCell displaysCellSelectionState]
  -[CNPropertyNoteCell valueViewBottomMargin]
  -[CNPropertyNoteCell textViewChanged:]
  -[CNPropertyNoteCell textViewEditingDidEnd:]


CNPropertyPhoneNumberCell : CNPropertySimpleTransportCell
 @property  UIImageView *emergencyImageView
 @property  BOOL emergencyPhoneNumber

  // instance methods
  -[CNPropertyPhoneNumberCell setProperty:]
  -[CNPropertyPhoneNumberCell initWithStyle:reuseIdentifier:]
  -[CNPropertyPhoneNumberCell .cxx_destruct]
  -[CNPropertyPhoneNumberCell copy:]
  -[CNPropertyPhoneNumberCell shouldPerformDefaultAction]
  -[CNPropertyPhoneNumberCell updateTransportButtons]
  -[CNPropertyPhoneNumberCell setEmergencyPhoneNumber:]
  -[CNPropertyPhoneNumberCell shouldShowEmergencyBadge]
  -[CNPropertyPhoneNumberCell updateEmergencyBadge]
  -[CNPropertyPhoneNumberCell buildEmergencyImageView]
  -[CNPropertyPhoneNumberCell isEmergencyPhoneNumber]
  -[CNPropertyPhoneNumberCell emergencyImageView]
  -[CNPropertyPhoneNumberCell setEmergencyImageView:]


CNPropertyPhoneNumberEditingCell : CNPropertySimpleEditingCell
 @property  NSArray *previousValue

  // instance methods
  -[CNPropertyPhoneNumberEditingCell initWithStyle:reuseIdentifier:]
  -[CNPropertyPhoneNumberEditingCell setPreviousValue:]
  -[CNPropertyPhoneNumberEditingCell .cxx_destruct]
  -[CNPropertyPhoneNumberEditingCell previousValue]
  -[CNPropertyPhoneNumberEditingCell suggestionsForString:inputIndex:]


CNContactListCollectionView : UICollectionView
 @property  long long contactCount
 @property  long long duplicateCount
 @property  long long selectedCount
 @property  NSObject<CNContactListCountViewDelegate> *countViewDelegate
 @property  NSObject<CNContactListCollectionViewDelegate> *contactListCollectionViewDelegate
 @property  CNContactListCountFooterView *contactCountView

  // instance methods
  -[CNContactListCollectionView contactListCollectionViewDelegate]
  -[CNContactListCollectionView setContactCount:]
  -[CNContactListCollectionView setContactCountView:]
  -[CNContactListCollectionView duplicateCount]
  -[CNContactListCollectionView globalIndexForItemAtIndexPath:]
  -[CNContactListCollectionView setSelectedCount:]
  -[CNContactListCollectionView updateSelectedContactCount]
  -[CNContactListCollectionView contactCountView]
  -[CNContactListCollectionView .cxx_destruct]
  -[CNContactListCollectionView setCountViewDelegate:]
  -[CNContactListCollectionView selectedCount]
  -[CNContactListCollectionView contactCount]
  -[CNContactListCollectionView deselectItemAtIndexPath:animated:]
  -[CNContactListCollectionView setDuplicateCount:]
  -[CNContactListCollectionView setContactListCollectionViewDelegate:]
  -[CNContactListCollectionView countViewDelegate]
  -[CNContactListCollectionView init]
  -[CNContactListCollectionView selectItemAtIndexPath:animated:scrollPosition:]


CNAvatarViewController_LegacyAvatarView : CNAvatarViewController <CNAvatarViewDelegate>
 @property  CNAvatarView *avatarView
 @property  CNContactStore *contactStore
 @property  <CNUILikenessRendering> *imageRenderer
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  unsigned long style
 @property  BOOL threeDTouchEnabled
 @property  <NSObject><CNAvatarViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNAvatarViewController_LegacyAvatarView avatarView]
  -[CNAvatarViewController_LegacyAvatarView _canShowWhileLocked]
  -[CNAvatarViewController_LegacyAvatarView initWithSettings:]
  -[CNAvatarViewController_LegacyAvatarView descriptorForRequiredKeys]
  -[CNAvatarViewController_LegacyAvatarView setDelegate:]
  -[CNAvatarViewController_LegacyAvatarView updateViewWithGroupIdentity:]
  -[CNAvatarViewController_LegacyAvatarView style]
  -[CNAvatarViewController_LegacyAvatarView delegate]
  -[CNAvatarViewController_LegacyAvatarView setContacts:]
  -[CNAvatarViewController_LegacyAvatarView presentingViewControllerForAvatarView:]
  -[CNAvatarViewController_LegacyAvatarView .cxx_destruct]
  -[CNAvatarViewController_LegacyAvatarView contacts]
  -[CNAvatarViewController_LegacyAvatarView loadView]
  -[CNAvatarViewController_LegacyAvatarView schedulerProvider]
  -[CNAvatarViewController_LegacyAvatarView setAllowStaleRendering:]
  -[CNAvatarViewController_LegacyAvatarView isThreeDTouchEnabled]
  -[CNAvatarViewController_LegacyAvatarView didUpdateContentForAvatarView:]
  -[CNAvatarViewController_LegacyAvatarView contactStore]
  -[CNAvatarViewController_LegacyAvatarView imageRenderer]
  -[CNAvatarViewController_LegacyAvatarView setAvatarView:]
  -[CNAvatarViewController_LegacyAvatarView setStyle:]
  -[CNAvatarViewController_LegacyAvatarView setThreeDTouchEnabled:]


CNUIDataCollector : NSObject
 @property  CNMetricsUIReporter *metricsReporter
 @property  NSString *appIdentifier
 @property  CNUIDataCollectorSGLogger *sgLogger

  // class methods
  +[CNUIDataCollector isEnabled]
  +[CNUIDataCollector sharedCollector]

  // instance methods
  -[CNUIDataCollector initWithEnvironment:]
  -[CNUIDataCollector appIdentifier]
  -[CNUIDataCollector .cxx_destruct]
  -[CNUIDataCollector init]
  -[CNUIDataCollector logContactActionType:attributes:]
  -[CNUIDataCollector logPresentation]
  -[CNUIDataCollector logSearchUsage]
  -[CNUIDataCollector logSearchResultsFetchedSuggested:]
  -[CNUIDataCollector logSearchResultSelected:]
  -[CNUIDataCollector logContactShown:]
  -[CNUIDataCollector logContactCreated:originalContact:]
  -[CNUIDataCollector metricsReporter]
  -[CNUIDataCollector sgLogger]


CNUIFavoritesEntryPicker : NSObject <CNContactActionsControllerDelegate>
 @property  UIAlertController *alertController
 @property  CNContactActionsController *actionsController
 @property  CNActionMenuHelper *actionMenuHelper
 @property  UIContextMenuInteraction *contextMenuInteraction
 @property  <CNUIFavoritesEntryPickerDelegate> *delegate
 @property  CNContact *contact
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNUIFavoritesEntryPicker descriptorForRequiredKeys]
  +[CNUIFavoritesEntryPicker log]

  // instance methods
  -[CNUIFavoritesEntryPicker setContextMenuInteraction:]
  -[CNUIFavoritesEntryPicker contact]
  -[CNUIFavoritesEntryPicker setDelegate:]
  -[CNUIFavoritesEntryPicker actionMenuHelper]
  -[CNUIFavoritesEntryPicker contextMenuInteraction]
  -[CNUIFavoritesEntryPicker delegate]
  -[CNUIFavoritesEntryPicker .cxx_destruct]
  -[CNUIFavoritesEntryPicker initWithContact:]
  -[CNUIFavoritesEntryPicker viewController]
  -[CNUIFavoritesEntryPicker setActionMenuHelper:]
  -[CNUIFavoritesEntryPicker alertController]
  -[CNUIFavoritesEntryPicker setAlertController:]
  -[CNUIFavoritesEntryPicker actionsController]
  -[CNUIFavoritesEntryPicker menuProviderForContextMenuInteraction:]
  -[CNUIFavoritesEntryPicker contactActionsController:didSelectAction:]
  -[CNUIFavoritesEntryPicker contactActionsController:didUpdateWithMenu:]
  -[CNUIFavoritesEntryPicker setActionsController:]


CNContactOrbHeaderViewController : UIViewController
 @property  NSArray *contacts
 @property  CNContactOrbHeaderView *headerView

  // instance methods
  -[CNContactOrbHeaderViewController setHeaderView:]
  -[CNContactOrbHeaderViewController setContacts:]
  -[CNContactOrbHeaderViewController headerView]
  -[CNContactOrbHeaderViewController .cxx_destruct]
  -[CNContactOrbHeaderViewController contacts]
  -[CNContactOrbHeaderViewController viewDidLoad]
  -[CNContactOrbHeaderViewController viewWillAppear:]
  -[CNContactOrbHeaderViewController initWithContacts:]
  -[CNContactOrbHeaderViewController suggestedHeaderWidth]


CNUIGroupContext : NSObject
 @property  NSDictionary *addedGroupsByContainerDict
 @property  NSArray *removedGroups

  // instance methods
  -[CNUIGroupContext .cxx_destruct]
  -[CNUIGroupContext initWithAddedGroupsByContainerDict:removedGroups:]
  -[CNUIGroupContext addedGroupsByContainerDict]
  -[CNUIGroupContext removedGroups]


CNUIGroupEditingContext : NSObject
 @property  NSArray *addedGroups
 @property  NSArray *removedGroups
 @property  NSArray *originalGroups
 @property  NSArray *groupsToDisplayForEditing

  // instance methods
  -[CNUIGroupEditingContext .cxx_destruct]
  -[CNUIGroupEditingContext init]
  -[CNUIGroupEditingContext groupsToDisplayForEditing]
  -[CNUIGroupEditingContext removedGroups]
  -[CNUIGroupEditingContext initWithOriginalGroups:]
  -[CNUIGroupEditingContext addGroup:]
  -[CNUIGroupEditingContext removeGroup:]
  -[CNUIGroupEditingContext group:isInGroupArray:]
  -[CNUIGroupEditingContext originalGroups]
  -[CNUIGroupEditingContext addedGroups]
  -[CNUIGroupEditingContext setAddedGroups:]
  -[CNUIGroupEditingContext setRemovedGroups:]


CNMeCardSharingOnboardingViewController : OBTableWelcomeController
 @property  CNContactStore *contactStore
 @property  CNContact *contact
 @property  NSLayoutConstraint *tableViewHeightConstraint
 @property  OBBoldTrayButton *confirmButton

  // class methods
  +[CNMeCardSharingOnboardingViewController headerText]

  // instance methods
  -[CNMeCardSharingOnboardingViewController setContactStore:]
  -[CNMeCardSharingOnboardingViewController contact]
  -[CNMeCardSharingOnboardingViewController .cxx_destruct]
  -[CNMeCardSharingOnboardingViewController viewDidLoad]
  -[CNMeCardSharingOnboardingViewController viewDidLayoutSubviews]
  -[CNMeCardSharingOnboardingViewController setContact:]
  -[CNMeCardSharingOnboardingViewController contactStore]
  -[CNMeCardSharingOnboardingViewController handleConfirmButtonTapped]
  -[CNMeCardSharingOnboardingViewController confirmButtonTitle]
  -[CNMeCardSharingOnboardingViewController tableViewHeightConstraint]
  -[CNMeCardSharingOnboardingViewController setTableViewHeightConstraint:]
  -[CNMeCardSharingOnboardingViewController confirmButton]
  -[CNMeCardSharingOnboardingViewController setConfirmButton:]
  -[CNMeCardSharingOnboardingViewController didTapDoneButton:]
  -[CNMeCardSharingOnboardingViewController updateForContentSizeCategoryChange]


CNPhotoPickerEmojiProvider : NSObject <CNPhotoPickerProvider>
 @property  CNVisualIdentity *visualIdentity
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPhotoPickerEmojiProvider identifier]
  -[CNPhotoPickerEmojiProvider .cxx_destruct]
  -[CNPhotoPickerEmojiProvider setIdentifier:]
  -[CNPhotoPickerEmojiProvider variantsManager]
  -[CNPhotoPickerEmojiProvider setVariantsManager:]
  -[CNPhotoPickerEmojiProvider visualIdentity]
  -[CNPhotoPickerEmojiProvider initWithVisualIdentity:]
  -[CNPhotoPickerEmojiProvider loadItemsForSize:scale:RTL:renderingQueue:callbackQueue:itemDelegate:]


CNGroupIdentityInlineActionsViewController : UIViewController <CNContactInlineActionsViewControllerDelegate_Internal, CNUIObjectViewControllerDelegate, CNGroupIdentityActionItemDelegate>
 @property  CNContactInlineActionsViewController *inlineActionsViewController
 @property  CNGroupIdentityInlineActionsViewConfiguration *configuration
 @property  long long style
 @property  CNGroupIdentity *group
 @property  <CNGroupIdentityInlineActionsViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNGroupIdentityInlineActionsViewController descriptorForRequiredKeys]

  // instance methods
  -[CNGroupIdentityInlineActionsViewController setDelegate:]
  -[CNGroupIdentityInlineActionsViewController style]
  -[CNGroupIdentityInlineActionsViewController delegate]
  -[CNGroupIdentityInlineActionsViewController configuration]
  -[CNGroupIdentityInlineActionsViewController .cxx_destruct]
  -[CNGroupIdentityInlineActionsViewController viewDidLoad]
  -[CNGroupIdentityInlineActionsViewController hostingViewControllerForController:]
  -[CNGroupIdentityInlineActionsViewController group]
  -[CNGroupIdentityInlineActionsViewController setGroup:]
  -[CNGroupIdentityInlineActionsViewController actionsView]
  -[CNGroupIdentityInlineActionsViewController actionsContainerView]
  -[CNGroupIdentityInlineActionsViewController initWithGroupIdentity:actionsViewConfiguration:]
  -[CNGroupIdentityInlineActionsViewController setupActionsView]
  -[CNGroupIdentityInlineActionsViewController viewForActionAtIndex:]
  -[CNGroupIdentityInlineActionsViewController groupIdentityActionItem:didUpdateOverrideEnabledState:]
  -[CNGroupIdentityInlineActionsViewController groupIdentityActionItem:didUpdateActionBlock:]
  -[CNGroupIdentityInlineActionsViewController contactInlineActionsViewController:shouldPresentDisambiguationUIForActionOfType:]
  -[CNGroupIdentityInlineActionsViewController contactInlineActionsViewController:didSelectActionOfType:]
  -[CNGroupIdentityInlineActionsViewController contactInlineActionsViewController:canPerformGroupActionOfType:]
  -[CNGroupIdentityInlineActionsViewController contactInlineActionsViewController:overrideImageForActionOfType:]
  -[CNGroupIdentityInlineActionsViewController contactInlineActionsViewController:overrideTitleForActionOfType:]
  -[CNGroupIdentityInlineActionsViewController contactInlineActionsViewController:shouldOverrideEnabledStateForActionOfType:]
  -[CNGroupIdentityInlineActionsViewController contactInlineActionsViewController:overrideEnabledStateForActionOfType:]
  -[CNGroupIdentityInlineActionsViewController contactInlineActionsViewController:didPerformActionOfType:fromDisambiguation:]
  -[CNGroupIdentityInlineActionsViewController contactInlineActionsViewController:willPresentDisambiguationUIForActionType:]
  -[CNGroupIdentityInlineActionsViewController updateActionsViewForUpdatedActionItem:]
  -[CNGroupIdentityInlineActionsViewController shouldOverrideEnabledStateForActionItem:]
  -[CNGroupIdentityInlineActionsViewController actionsViewHeightThatFits:]
  -[CNGroupIdentityInlineActionsViewController inlineActionsViewController]
  -[CNGroupIdentityInlineActionsViewController setInlineActionsViewController:]


CNContactActionsContext : NSObject
 @property  CNUIUserActionListDataSource *dataSource
 @property  CNUIContactsEnvironment *environment

  // instance methods
  -[CNContactActionsContext dataSource]
  -[CNContactActionsContext .cxx_destruct]
  -[CNContactActionsContext environment]
  -[CNContactActionsContext init]
  -[CNContactActionsContext setCacheEntryRefreshAge:]
  -[CNContactActionsContext setCacheEntryExpirationAge:]
  -[CNContactActionsContext initWithDataSource:environment:]
  -[CNContactActionsContext setCacheEntryLimit:]


CNAccountsAndGroupsActionsProvider : NSObject
 @property  CNAccountsAndGroupsDataSource *dataSource
 @property  CNUIGroupsAndContainersSaveManager *groupsAndContainersSaveManager
 @property  NSMutableArray *issuedSaveRequestIdentifiers
 @property  <CNAccountsAndGroupsActionsProviderDelegate> *delegate

  // instance methods
  -[CNAccountsAndGroupsActionsProvider groupsAndContainersSaveManager]
  -[CNAccountsAndGroupsActionsProvider setGroupsAndContainersSaveManager:]
  -[CNAccountsAndGroupsActionsProvider initWithDataSource:saveManager:]
  -[CNAccountsAndGroupsActionsProvider dataSource]
  -[CNAccountsAndGroupsActionsProvider leadingActionsForItem:cell:]
  -[CNAccountsAndGroupsActionsProvider exportGroupForItem:sourceView:]
  -[CNAccountsAndGroupsActionsProvider setDelegate:]
  -[CNAccountsAndGroupsActionsProvider delegate]
  -[CNAccountsAndGroupsActionsProvider addGroupToStoreForGroupItem:withName:]
  -[CNAccountsAndGroupsActionsProvider trailingActionsForItem:cell:isCollectionViewEditing:]
  -[CNAccountsAndGroupsActionsProvider deleteGroupActionForItem:sourceView:completionHandler:]
  -[CNAccountsAndGroupsActionsProvider .cxx_destruct]
  -[CNAccountsAndGroupsActionsProvider authorizedDeleteGroupForItem:completionHandler:]
  -[CNAccountsAndGroupsActionsProvider isAuthorizedToEditItem:]
  -[CNAccountsAndGroupsActionsProvider authorizedCreateGroupActionForContainerItem:]
  -[CNAccountsAndGroupsActionsProvider updateItem:withNewName:]
  -[CNAccountsAndGroupsActionsProvider authorizedEditGroupNameForCell:]
  -[CNAccountsAndGroupsActionsProvider deleteGroupForItem:completionHandler:]
  -[CNAccountsAndGroupsActionsProvider setDataSource:]
  -[CNAccountsAndGroupsActionsProvider messageGroupForItem:]
  -[CNAccountsAndGroupsActionsProvider createGroupActionForContainerItem:isCollectionViewEditing:]
  -[CNAccountsAndGroupsActionsProvider setIssuedSaveRequestIdentifiers:]
  -[CNAccountsAndGroupsActionsProvider contextMenuConfigurationForItem:cell:atIndexPath:]
  -[CNAccountsAndGroupsActionsProvider emailGroupForItem:]
  -[CNAccountsAndGroupsActionsProvider actionsForItem:cell:]
  -[CNAccountsAndGroupsActionsProvider editGroupNameActionForItem:cell:]
  -[CNAccountsAndGroupsActionsProvider issuedSaveRequestIdentifiers]


CNEmergencyContactAction : CNPropertyAction <CNUINavigationListViewControllerDelegate, CNPickerControllerDelegate, HKMedicalIDViewControllerDelegate>
 @property  CNHealthStoreManager *healthStoreManager
 @property  CNContactProperty *contactProperty
 @property  UIAlertController *alertController
 @property  CNUINavigationListViewController *listController
 @property  <CNScheduler> *mainThreadScheduler
 @property  <CNScheduler> *workQueue
 @property  CNContactStore *contactStore
 @property  BOOL addingToEmergency
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNEmergencyContactAction log]

  // instance methods
  -[CNEmergencyContactAction mainThreadScheduler]
  -[CNEmergencyContactAction setContactStore:]
  -[CNEmergencyContactAction workQueue]
  -[CNEmergencyContactAction setHealthStoreManager:]
  -[CNEmergencyContactAction .cxx_destruct]
  -[CNEmergencyContactAction contactStore]
  -[CNEmergencyContactAction healthStoreManager]
  -[CNEmergencyContactAction alertController]
  -[CNEmergencyContactAction setAlertController:]
  -[CNEmergencyContactAction performActionWithSender:]
  -[CNEmergencyContactAction performActionForItem:sender:]
  -[CNEmergencyContactAction navigationListController:didSelectItem:]
  -[CNEmergencyContactAction medicalIDViewControllerDidCancel:]
  -[CNEmergencyContactAction medicalIDViewControllerDidSave:]
  -[CNEmergencyContactAction medicalIDViewControllerDidFinish:]
  -[CNEmergencyContactAction picker:didPickItem:]
  -[CNEmergencyContactAction pickerDidCancel:]
  -[CNEmergencyContactAction presentDisambiguationAlertWithSender:]
  -[CNEmergencyContactAction contactProperty]
  -[CNEmergencyContactAction initWithContact:healthStoreManager:propertyItems:]
  -[CNEmergencyContactAction performActionWithContactProperty:relationship:]
  -[CNEmergencyContactAction showHKMedicalIDViewControllerForMedicalID:]
  -[CNEmergencyContactAction createMedicalIDWithEmergencyContact:]
  -[CNEmergencyContactAction showConfirmRemoveAlertWithSender:completion:]
  -[CNEmergencyContactAction showRelationshipPickerForContactProperty:sender:]
  -[CNEmergencyContactAction addingToEmergency]
  -[CNEmergencyContactAction setAddingToEmergency:]
  -[CNEmergencyContactAction setContactProperty:]
  -[CNEmergencyContactAction listController]
  -[CNEmergencyContactAction setListController:]
  -[CNEmergencyContactAction setMainThreadScheduler:]


CNPhotoPickerCapabilities : NSObject
  // class methods
  +[CNPhotoPickerCapabilities allowsPhotoLibraryAccess]
  +[CNPhotoPickerCapabilities allowsAvatarUI]
  +[CNPhotoPickerCapabilities allowsAvatarStoreAccess]
  +[CNPhotoPickerCapabilities allowsAvatarFaceTracking]
  +[CNPhotoPickerCapabilities isCameraTCCEnabled]
  +[CNPhotoPickerCapabilities allowsCameraAccess]


CNPropertyPlaceholderCell : CNLabeledCell
 @property  UILabel *label

  // class methods
  +[CNPropertyPlaceholderCell shouldIndentWhileEditing]

  // instance methods
  -[CNPropertyPlaceholderCell labelView]
  -[CNPropertyPlaceholderCell setLabel:]
  -[CNPropertyPlaceholderCell .cxx_destruct]
  -[CNPropertyPlaceholderCell label]
  -[CNPropertyPlaceholderCell setCardGroupItem:]
  -[CNPropertyPlaceholderCell minCellHeight]
  -[CNPropertyPlaceholderCell shouldPerformDefaultAction]


CNPhotoPickerMonogramProvider : NSObject <CNPhotoPickerProvider>
 @property  CNVisualIdentity *visualIdentity
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPhotoPickerMonogramProvider providerItemForVisualIdentity:size:RTL:]
  +[CNPhotoPickerMonogramProvider providerItemForVisualIdentity:size:scale:RTL:backgroundColor:]
  +[CNPhotoPickerMonogramProvider monogramProviderItemForVisualIdentity:size:scale:RTL:isVariantOptionItem:backgroundColor:]
  +[CNPhotoPickerMonogramProvider generateMonogramItemForVisualIdentity:size:scale:RTL:isVariantOptionItem:backgroundColor:]

  // instance methods
  -[CNPhotoPickerMonogramProvider identifier]
  -[CNPhotoPickerMonogramProvider .cxx_destruct]
  -[CNPhotoPickerMonogramProvider setIdentifier:]
  -[CNPhotoPickerMonogramProvider visualIdentity]
  -[CNPhotoPickerMonogramProvider initWithVisualIdentity:]
  -[CNPhotoPickerMonogramProvider loadItemsForSize:scale:RTL:renderingQueue:callbackQueue:itemDelegate:]


CNCardGameCenterManager : NSObject
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  <CNScheduler> *workQueue
 @property  <CNCancelable> *relationshipResultsCancelable
 @property  GKServiceProxy *gameCenterProxy
 @property  BOOL hasCheckedAuthenticatedLocalPlayer
 @property  CNContact *contact
 @property  CNUICoreRecentsManager *recentsManager

  // instance methods
  -[CNCardGameCenterManager contact]
  -[CNCardGameCenterManager setRecentsManager:]
  -[CNCardGameCenterManager workQueue]
  -[CNCardGameCenterManager recentsManager]
  -[CNCardGameCenterManager .cxx_destruct]
  -[CNCardGameCenterManager schedulerProvider]
  -[CNCardGameCenterManager handles]
  -[CNCardGameCenterManager setContact:]
  -[CNCardGameCenterManager init]
  -[CNCardGameCenterManager shouldActionDisplayDropdownMenu]
  -[CNCardGameCenterManager getHasAuthenticatedLocalPlayerHandler:]
  -[CNCardGameCenterManager hasAuthenticatedLocalPlayer]
  -[CNCardGameCenterManager gameCenterProxy]
  -[CNCardGameCenterManager getGameCenterRelationshipsForContact:completionHandler:]
  -[CNCardGameCenterManager refreshGameCenterRelationshipsForContact:completionHandler:]
  -[CNCardGameCenterManager handleResults:forContact:error:completionHandler:]
  -[CNCardGameCenterManager defaultFriendResultFromFriendResults:forContact:]
  -[CNCardGameCenterManager handlesForContact:]
  -[CNCardGameCenterManager relationshipResultsCancelable]
  -[CNCardGameCenterManager setRelationshipResultsCancelable:]
  -[CNCardGameCenterManager setGameCenterProxy:]
  -[CNCardGameCenterManager hasCheckedAuthenticatedLocalPlayer]
  -[CNCardGameCenterManager setHasCheckedAuthenticatedLocalPlayer:]


CNContactFilter : NSObject <NSCopying>
 @property  NSString *fullTextString
 @property  BOOL supportsSections
 @property  NSPredicate *predicate
 @property  BOOL rankSortedResults

  // instance methods
  -[CNContactFilter predicate]
  -[CNContactFilter supportsSections]
  -[CNContactFilter .cxx_destruct]
  -[CNContactFilter initWithDictionaryRepresentation:]
  -[CNContactFilter dictionaryRepresentation]
  -[CNContactFilter copyWithZone:]
  -[CNContactFilter isEqual:]
  -[CNContactFilter fullTextString]
  -[CNContactFilter setFullTextString:]
  -[CNContactFilter rankSortedResults]
  -[CNContactFilter setRankSortedResults:]


CNSharingProfileOnboardingAudienceCatalystViewController : OBWelcomeFullCenterContentController <UITextFieldDelegate, CNSharingProfileOnboardingAudienceController>
 @property  UIView *customContentView
 @property  OBLinkTrayButton *setupLaterButton
 @property  OBBoldTrayButton *backButton
 @property  OBBoldTrayButton *confirmButton
 @property  UIImageView *avatarImageView
 @property  UILabel *nameLabel
 @property  UITextField *givenNameField
 @property  UITextField *familyNameField
 @property  UILabel *audienceLabel
 @property  UIButton *audiencePickerButton
 @property  UILabel *audienceDescriptionLabel
 @property  CNMutableContact *contact
 @property  CNSharingProfileAudienceDataSource *sharingAudienceDataSource
 @property  long long nameOrder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <CNSharingProfileOnboardingAudienceControllerDelegate> *delegate

  // class methods
  +[CNSharingProfileOnboardingAudienceCatalystViewController descriptorForRequiredKeys]
  +[CNSharingProfileOnboardingAudienceCatalystViewController headerText]

  // instance methods
  -[CNSharingProfileOnboardingAudienceCatalystViewController backButton]
  -[CNSharingProfileOnboardingAudienceCatalystViewController contact]
  -[CNSharingProfileOnboardingAudienceCatalystViewController textFieldShouldReturn:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setDelegate:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController delegate]
  -[CNSharingProfileOnboardingAudienceCatalystViewController dealloc]
  -[CNSharingProfileOnboardingAudienceCatalystViewController nameOrder]
  -[CNSharingProfileOnboardingAudienceCatalystViewController .cxx_destruct]
  -[CNSharingProfileOnboardingAudienceCatalystViewController viewDidLoad]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setBackButton:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController nameLabel]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setCustomContentView:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController textFieldDidEndEditing:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setContact:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController customContentView]
  -[CNSharingProfileOnboardingAudienceCatalystViewController createContentView]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setNameLabel:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController givenNameDidChange:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController familyNameDidChange:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController sharingAudienceDataSource]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setNameOrder:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController givenNameField]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setGivenNameField:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController familyNameField]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setFamilyNameField:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController avatarImageView]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setAvatarImageView:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setupLaterButton]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setSetupLaterButton:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setSharingAudienceDataSource:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController handleConfirmButtonTapped:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController initWithContact:selectedSharingAudience:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController updateConfirmButtonEnabledState]
  -[CNSharingProfileOnboardingAudienceCatalystViewController confirmButtonTitle]
  -[CNSharingProfileOnboardingAudienceCatalystViewController confirmButton]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setConfirmButton:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController handleSetupLaterTapped:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController handleBackTapped:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController createAvatarView]
  -[CNSharingProfileOnboardingAudienceCatalystViewController createNameLabel]
  -[CNSharingProfileOnboardingAudienceCatalystViewController createNameTextFields]
  -[CNSharingProfileOnboardingAudienceCatalystViewController createAudienceLabel]
  -[CNSharingProfileOnboardingAudienceCatalystViewController createAudiencePickerButton]
  -[CNSharingProfileOnboardingAudienceCatalystViewController updateMenuForAudiencePicker]
  -[CNSharingProfileOnboardingAudienceCatalystViewController createAudienceDescriptionLabel]
  -[CNSharingProfileOnboardingAudienceCatalystViewController layoutContentView]
  -[CNSharingProfileOnboardingAudienceCatalystViewController didSelectSharingAudience:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController audienceLabel]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setAudienceLabel:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController audiencePickerButton]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setAudiencePickerButton:]
  -[CNSharingProfileOnboardingAudienceCatalystViewController audienceDescriptionLabel]
  -[CNSharingProfileOnboardingAudienceCatalystViewController setAudienceDescriptionLabel:]


CNStarkContactViewController : CNContactContentUnitaryViewController <CNPropertyBestIDSValueQueryDelegate>
 @property  CNPropertyBestIDSValueQuery *bestiMessageQuery
 @property  CNCardiMessageEmailGroup *iMessageEmailGroup
 @property  NSArray *activatedConstraints
 @property  CNStarkContactNameView *contactNameView

  // class methods
  +[CNStarkContactViewController tableViewStyle]
  +[CNStarkContactViewController enablesTransportButtons]

  // instance methods
  -[CNStarkContactViewController setupConstraints]
  -[CNStarkContactViewController tableView:contextMenuConfigurationForRowAtIndexPath:point:]
  -[CNStarkContactViewController viewWillLayoutSubviews]
  -[CNStarkContactViewController viewDidAppear:]
  -[CNStarkContactViewController dealloc]
  -[CNStarkContactViewController .cxx_destruct]
  -[CNStarkContactViewController viewDidLoad]
  -[CNStarkContactViewController initWithContact:]
  -[CNStarkContactViewController viewWillAppear:]
  -[CNStarkContactViewController title]
  -[CNStarkContactViewController viewWillDisappear:]
  -[CNStarkContactViewController displayHeaderView]
  -[CNStarkContactViewController activatedConstraints]
  -[CNStarkContactViewController setActivatedConstraints:]
  -[CNStarkContactViewController updateFontColors]
  -[CNStarkContactViewController loadContactViewControllerViews]
  -[CNStarkContactViewController shouldDisplayAvatarHeaderView]
  -[CNStarkContactViewController setupTableHeaderView]
  -[CNStarkContactViewController isScrollViewControllingHeaderResizeAnimation:]
  -[CNStarkContactViewController initializeTableViewsForHeaderHeight]
  -[CNStarkContactViewController applyContactStyle]
  -[CNStarkContactViewController queryComplete]
  -[CNStarkContactViewController isGeminiAvailable]
  -[CNStarkContactViewController hasTableViewHeaderFirstSection]
  -[CNStarkContactViewController _initiateBestiMessagePropertyQuery]
  -[CNStarkContactViewController bestiMessageQuery]
  -[CNStarkContactViewController setBestiMessageQuery:]
  -[CNStarkContactViewController iMessageEmailGroup]
  -[CNStarkContactViewController setIMessageEmailGroup:]
  -[CNStarkContactViewController contactNameView]
  -[CNStarkContactViewController setContactNameView:]


CNPropertyPlaceholderItem : CNCardGroupItem
 @property  NSString *property
 @property  NSString *title

  // instance methods
  -[CNPropertyPlaceholderItem setProperty:]
  -[CNPropertyPlaceholderItem property]
  -[CNPropertyPlaceholderItem .cxx_destruct]
  -[CNPropertyPlaceholderItem initWithProperty:]
  -[CNPropertyPlaceholderItem title]


CNMeCardSharingResult : NSObject
 @property  NSString *givenName
 @property  NSString *familyName
 @property  CNContactImage *contactImage
 @property  BOOL didSaveImageToMeCard

  // instance methods
  -[CNMeCardSharingResult familyName]
  -[CNMeCardSharingResult givenName]
  -[CNMeCardSharingResult .cxx_destruct]
  -[CNMeCardSharingResult contactImage]
  -[CNMeCardSharingResult initWithGivenName:familyName:contactImage:didSaveImageToMeCard:]
  -[CNMeCardSharingResult didSaveImageToMeCard]


CNContactActionProvider : NSObject
 @property  CNMutableContact *contact
 @property  CNContainer *container
 @property  CNContactStore *contactStore
 @property  CNPropertyGroupsDataSource *propertyGroupsDataSource
 @property  CNUIUserActionListDataSource *actionsDataSource
 @property  CNCapabilitiesManager *capabilities
 @property  CNUIContactsEnvironment *environment
 @property  <CNPropertyActionDelegate> *actionDelegate
 @property  CNPropertySendMessageAction *sendMessageAction
 @property  CNPropertyFaceTimeAction *faceTimeAction
 @property  CNPropertyFaceTimeAction *faceTimeAudioAction
 @property  CNContactAction *shareContactAction
 @property  CNContactAddFavoriteAction *addFavoriteAction
 @property  CNContactAction *createReminderAction
 @property  CNContactAction *shareLocationAction
 @property  CNContactAction *stopSharingLocationAction
 @property  CNPropertyLinkedCardsAction *linkedCardsAction
 @property  CNContactAddLinkedCardAction *addLinkedCardAction
 @property  CNContactCreateNewContactAction *createNewContactAction
 @property  CNContactAddToExistingContactAction *addToExistingContactAction
 @property  CNContactSelectContainersAction *containerSelectionAction
 @property  CNContactAction *shareWithFamilyAction
 @property  CNContactAction *stopSharingWithFamilyAction
 @property  CNContactAction *enableGuardianRestrictionsAction
 @property  CNContactAction *disableGuardianRestrictionsAction

  // instance methods
  -[CNContactActionProvider contact]
  -[CNContactActionProvider .cxx_destruct]
  -[CNContactActionProvider capabilities]
  -[CNContactActionProvider container]
  -[CNContactActionProvider actionDelegate]
  -[CNContactActionProvider contactStore]
  -[CNContactActionProvider environment]
  -[CNContactActionProvider setActionDelegate:]
  -[CNContactActionProvider faceTimeAudioAction]
  -[CNContactActionProvider _faceTimeAudioAction]
  -[CNContactActionProvider actionsDataSource]
  -[CNContactActionProvider _linkedCardsAction]
  -[CNContactActionProvider _addLinkedCardAction]
  -[CNContactActionProvider propertyGroupsDataSource]
  -[CNContactActionProvider linkedCardsAction]
  -[CNContactActionProvider addLinkedCardAction]
  -[CNContactActionProvider initWithContact:inContainer:contactStore:]
  -[CNContactActionProvider initWithContact:inContainer:contactStore:propertyGroupsDataSource:actionsDataSource:capabilities:environment:]
  -[CNContactActionProvider buildStandardActions]
  -[CNContactActionProvider buildSharingLocationActionsWithShareLocationController:]
  -[CNContactActionProvider buildLinkedContactActions]
  -[CNContactActionProvider buildAddContactActions]
  -[CNContactActionProvider buildCommunicationLimitsActions]
  -[CNContactActionProvider buildContainerSelectionAction]
  -[CNContactActionProvider appropriateLocationSharingActionWhenSharing:]
  -[CNContactActionProvider _addCreateNewContactAction]
  -[CNContactActionProvider _addToExistingContactAction]
  -[CNContactActionProvider _sendMessageActionAllowingEmailIDs:]
  -[CNContactActionProvider _addFavoriteActionWithConferencing:telephony:]
  -[CNContactActionProvider _faceTimeAction]
  -[CNContactActionProvider _shareContactAction]
  -[CNContactActionProvider shareWithFamilyAction]
  -[CNContactActionProvider sendMessageAction]
  -[CNContactActionProvider faceTimeAction]
  -[CNContactActionProvider shareContactAction]
  -[CNContactActionProvider addFavoriteAction]
  -[CNContactActionProvider createReminderAction]
  -[CNContactActionProvider shareLocationAction]
  -[CNContactActionProvider stopSharingLocationAction]
  -[CNContactActionProvider createNewContactAction]
  -[CNContactActionProvider addToExistingContactAction]
  -[CNContactActionProvider containerSelectionAction]
  -[CNContactActionProvider stopSharingWithFamilyAction]
  -[CNContactActionProvider enableGuardianRestrictionsAction]
  -[CNContactActionProvider disableGuardianRestrictionsAction]


CNOOPContactContentUnitaryViewController : CNContactContentUnitaryViewController
  // instance methods
  -[CNOOPContactContentUnitaryViewController isOutOfProcess]


CNOOPContactContentContainerViewController : CNContactContentContainerViewController
  // instance methods
  -[CNOOPContactContentContainerViewController isOutOfProcess]


CNMeCardSharingRowItem : NSObject
 @property  NSString *label
 @property  UIView *accessoryView
 @property  BOOL isSelected
 @property  @? confirmationHandler

  // instance methods
  -[CNMeCardSharingRowItem setIsSelected:]
  -[CNMeCardSharingRowItem accessoryView]
  -[CNMeCardSharingRowItem .cxx_destruct]
  -[CNMeCardSharingRowItem label]
  -[CNMeCardSharingRowItem isSelected]
  -[CNMeCardSharingRowItem initWithLabel:accessoryView:]
  -[CNMeCardSharingRowItem initWithLabel:accessoryView:confirmationHandler:]
  -[CNMeCardSharingRowItem confirmationHandler]


CNPropertyPostalAddressCell : CNPropertySimpleTransportCell
 @property  UIImageView *mapImageView
 @property  <CNCancelable> *tileGeneratorToken
 @property  BOOL shouldUseMapTiles

  // instance methods
  -[CNPropertyPostalAddressCell setProperty:]
  -[CNPropertyPostalAddressCell initWithStyle:reuseIdentifier:]
  -[CNPropertyPostalAddressCell dealloc]
  -[CNPropertyPostalAddressCell .cxx_destruct]
  -[CNPropertyPostalAddressCell prepareForReuse]
  -[CNPropertyPostalAddressCell traitCollectionDidChange:]
  -[CNPropertyPostalAddressCell variableConstraints]
  -[CNPropertyPostalAddressCell shouldUseMapTiles]
  -[CNPropertyPostalAddressCell setShouldUseMapTiles:]
  -[CNPropertyPostalAddressCell supportsTintColorValue]
  -[CNPropertyPostalAddressCell tapGesture:]
  -[CNPropertyPostalAddressCell generateAndSetMapTile]
  -[CNPropertyPostalAddressCell setMapImage:]
  -[CNPropertyPostalAddressCell mapImageView]
  -[CNPropertyPostalAddressCell setMapImageView:]
  -[CNPropertyPostalAddressCell tileGeneratorToken]
  -[CNPropertyPostalAddressCell setTileGeneratorToken:]


CNPropertyPostalAddressEditingCell : CNPropertyEditingCell
 @property  CNPostalAddressEditorView *addressEditor
 @property  UIColor *editorSeparatorColor

  // instance methods
  -[CNPropertyPostalAddressEditingCell layoutMarginsDidChange]
  -[CNPropertyPostalAddressEditingCell setPresentingDelegate:]
  -[CNPropertyPostalAddressEditingCell .cxx_destruct]
  -[CNPropertyPostalAddressEditingCell setBackgroundColor:]
  -[CNPropertyPostalAddressEditingCell valueChanged:]
  -[CNPropertyPostalAddressEditingCell valueView]
  -[CNPropertyPostalAddressEditingCell variableConstraints]
  -[CNPropertyPostalAddressEditingCell updateWithPropertyItem:]
  -[CNPropertyPostalAddressEditingCell firstResponderItem]
  -[CNPropertyPostalAddressEditingCell leftValueMargin]
  -[CNPropertyPostalAddressEditingCell layoutChanged:]
  -[CNPropertyPostalAddressEditingCell addressEditor]
  -[CNPropertyPostalAddressEditingCell setEditorSeparatorColor:]
  -[CNPropertyPostalAddressEditingCell editorSeparatorColor]
  -[CNPropertyPostalAddressEditingCell setAddressEditor:]


CNContactPickerHostViewController : _UIRemoteViewController <CNContactPickerContentViewController, CNContactPickerHostProtocol>
 @property  <NSCopying> *currentRequestIdentifier
 @property  NSExtension *extension
 @property  <CNContactPickerContentDelegate> *delegate
 @property  UINavigationController *navigationController
 @property  UIBarButtonItem *addContactBarButtonItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactPickerHostViewController contextForIdentifier:]
  +[CNContactPickerHostViewController getViewController:]
  +[CNContactPickerHostViewController contactPickerExtension]

  // instance methods
  -[CNContactPickerHostViewController navigationController]
  -[CNContactPickerHostViewController addContactBarButtonItem]
  -[CNContactPickerHostViewController extension]
  -[CNContactPickerHostViewController setDelegate:]
  -[CNContactPickerHostViewController delegate]
  -[CNContactPickerHostViewController setExtension:]
  -[CNContactPickerHostViewController .cxx_destruct]
  -[CNContactPickerHostViewController viewServiceDidTerminateWithError:]
  -[CNContactPickerHostViewController invalidate]
  -[CNContactPickerHostViewController setupWithOptions:readyBlock:]
  -[CNContactPickerHostViewController pickerDidSelectAddNewContact]
  -[CNContactPickerHostViewController pickerDidSelectContact:property:]
  -[CNContactPickerHostViewController pickerDidSelectContacts:properties:]
  -[CNContactPickerHostViewController pickerDidCompleteWithNewContact:]
  -[CNContactPickerHostViewController pickerDidCancel]
  -[CNContactPickerHostViewController invalidateSelectionAnimated:]
  -[CNContactPickerHostViewController currentRequestIdentifier]
  -[CNContactPickerHostViewController setCurrentRequestIdentifier:]


CNContactPickerExtensionHostContext : NSExtensionContext <CNContactPickerServiceProtocol, CNContactPickerHostProtocol>
 @property  CNContactPickerHostViewController *viewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactPickerExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[CNContactPickerExtensionHostContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[CNContactPickerExtensionHostContext setViewController:]
  -[CNContactPickerExtensionHostContext .cxx_destruct]
  -[CNContactPickerExtensionHostContext viewController]
  -[CNContactPickerExtensionHostContext _derivedExtensionAuxiliaryHostProtocol]
  -[CNContactPickerExtensionHostContext setupWithOptions:readyBlock:]
  -[CNContactPickerExtensionHostContext pickerDidSelectAddNewContact]
  -[CNContactPickerExtensionHostContext pickerDidSelectContact:property:]
  -[CNContactPickerExtensionHostContext pickerDidSelectContacts:properties:]
  -[CNContactPickerExtensionHostContext pickerDidCompleteWithNewContact:]
  -[CNContactPickerExtensionHostContext pickerDidCancel]
  -[CNContactPickerExtensionHostContext invalidateSelectionAnimated:]


CNPropertyRelatedNameCell : CNPropertySimpleCell
  // instance methods
  -[CNPropertyRelatedNameCell labelView]
  -[CNPropertyRelatedNameCell allowsCellSelection]


CNPropertyRelatedNameEditingCell : CNPropertySimpleEditingCell <CNContactPickerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPropertyRelatedNameEditingCell initWithStyle:reuseIdentifier:]
  -[CNPropertyRelatedNameEditingCell contactPicker:didSelectContact:]
  -[CNPropertyRelatedNameEditingCell contactPickerDidCancel:]
  -[CNPropertyRelatedNameEditingCell performAccessoryAction]


CNContactDisableGuardianRestrictionsAction : CNContactAction
 @property  CNContainer *container
 @property  CNContactStore *contactStore

  // instance methods
  -[CNContactDisableGuardianRestrictionsAction isDestructive]
  -[CNContactDisableGuardianRestrictionsAction .cxx_destruct]
  -[CNContactDisableGuardianRestrictionsAction container]
  -[CNContactDisableGuardianRestrictionsAction title]
  -[CNContactDisableGuardianRestrictionsAction contactStore]
  -[CNContactDisableGuardianRestrictionsAction canPerformAction]
  -[CNContactDisableGuardianRestrictionsAction performActionWithSender:]
  -[CNContactDisableGuardianRestrictionsAction initWithContact:inContainer:contactStore:]


CNSharingProfilePhotoPickerItem : NSObject
 @property  UIImage *cachedPreviewImage
 @property  CNSharingProfileAvatarItem *avatarItem
 @property  NSString *symbolImageName

  // instance methods
  -[CNSharingProfilePhotoPickerItem .cxx_destruct]
  -[CNSharingProfilePhotoPickerItem symbolImageName]
  -[CNSharingProfilePhotoPickerItem setSymbolImageName:]
  -[CNSharingProfilePhotoPickerItem originalImageWithSize:]
  -[CNSharingProfilePhotoPickerItem compositeImageWithSize:]
  -[CNSharingProfilePhotoPickerItem cachedPreviewImage]
  -[CNSharingProfilePhotoPickerItem setCachedPreviewImage:]
  -[CNSharingProfilePhotoPickerItem avatarItem]
  -[CNSharingProfilePhotoPickerItem setAvatarItem:]


CNVisualIdentityContactAvatarProvider : NSObject
 @property  CNAvatarImageRenderer *avatarImageRenderer
 @property  <CNAvatarImageRenderingScope> *renderingScope

  // class methods
  +[CNVisualIdentityContactAvatarProvider descriptorForRequiredKeys]

  // instance methods
  -[CNVisualIdentityContactAvatarProvider initWithSettings:]
  -[CNVisualIdentityContactAvatarProvider .cxx_destruct]
  -[CNVisualIdentityContactAvatarProvider init]
  -[CNVisualIdentityContactAvatarProvider avatarImageForContact:withSize:includePlaceholder:imageHandler:]
  -[CNVisualIdentityContactAvatarProvider imageForAvatarAccessoryView:withSize:]
  -[CNVisualIdentityContactAvatarProvider avatarImageRenderer]
  -[CNVisualIdentityContactAvatarProvider setAvatarImageRenderer:]
  -[CNVisualIdentityContactAvatarProvider renderingScope]
  -[CNVisualIdentityContactAvatarProvider setRenderingScope:]


CNContainerPickerItem : NSObject
 @property  NSString *name
 @property  NSString *identifier
 @property  long long type

  // instance methods
  -[CNContainerPickerItem identifier]
  -[CNContainerPickerItem type]
  -[CNContainerPickerItem .cxx_destruct]
  -[CNContainerPickerItem setType:]
  -[CNContainerPickerItem setIdentifier:]
  -[CNContainerPickerItem setName:]
  -[CNContainerPickerItem name]


CNContainerDataSource : NSObject
 @property  CNContactStore *store
 @property  NSArray *containerPickerItems
 @property  NSArray *containers
 @property  CNContactViewCache *contactViewCache
 @property  BOOL ignoresExchangeContainers

  // class methods
  +[CNContainerDataSource os_log]

  // instance methods
  -[CNContainerDataSource initWithContactStore:]
  -[CNContainerDataSource containers]
  -[CNContainerDataSource store]
  -[CNContainerDataSource contactViewCache]
  -[CNContainerDataSource setStore:]
  -[CNContainerDataSource .cxx_destruct]
  -[CNContainerDataSource containerPickerItems]
  -[CNContainerDataSource discoverContainers]
  -[CNContainerDataSource setContainerPickerItems:]
  -[CNContainerDataSource setIgnoresExchangeContainers:]
  -[CNContainerDataSource allAccounts]
  -[CNContainerDataSource writableContainersForAccount:]
  -[CNContainerDataSource setContactViewCache:]
  -[CNContainerDataSource setContainers:]
  -[CNContainerDataSource ignoresExchangeContainers]


CNContactTableViewHeaderFooterView : UITableViewHeaderFooterView
 @property  UILabel *titleLabel
 @property  NSAttributedString *attributedString

  // instance methods
  -[CNContactTableViewHeaderFooterView setAttributedString:]
  -[CNContactTableViewHeaderFooterView initWithReuseIdentifier:]
  -[CNContactTableViewHeaderFooterView .cxx_destruct]
  -[CNContactTableViewHeaderFooterView attributedString]
  -[CNContactTableViewHeaderFooterView titleLabel]


CNPropertySendMessageAction : CNPropertyAction <CNContactActionsControllerDelegate, CNPropertyContextMenuAction>
 @property  CNContactActionsController *actionsController
 @property  CNUIUserActionListDataSource *actionsDataSource
 @property  CNActionMenuHelper *actionMenuHelper
 @property  UIContextMenuInteraction *contextMenuInteraction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPropertySendMessageAction setContextMenuInteraction:]
  -[CNPropertySendMessageAction actionMenuHelper]
  -[CNPropertySendMessageAction contextMenuInteraction]
  -[CNPropertySendMessageAction .cxx_destruct]
  -[CNPropertySendMessageAction setActionMenuHelper:]
  -[CNPropertySendMessageAction performActionWithSender:]
  -[CNPropertySendMessageAction performActionForItem:sender:]
  -[CNPropertySendMessageAction actionsController]
  -[CNPropertySendMessageAction menuProviderForContextMenuInteraction:]
  -[CNPropertySendMessageAction contactActionsController:didSelectAction:]
  -[CNPropertySendMessageAction contactActionsController:didUpdateWithMenu:]
  -[CNPropertySendMessageAction setActionsController:]
  -[CNPropertySendMessageAction actionsDataSource]
  -[CNPropertySendMessageAction setActionsDataSource:]
  -[CNPropertySendMessageAction initWithContact:propertyItems:actionDataSource:]
  -[CNPropertySendMessageAction shouldPresentDisambiguationMenu]


_CNAvatarImageProvider : NSObject <CNAvatarImageProvider>
 @property  <CNUIPRLikenessProvider> *likenessProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_CNAvatarImageProvider roundImage:]

  // instance methods
  -[_CNAvatarImageProvider imageForSize:scale:]
  -[_CNAvatarImageProvider .cxx_destruct]
  -[_CNAvatarImageProvider imageForSize:scale:style:]
  -[_CNAvatarImageProvider initWithLikenessProvider:]
  -[_CNAvatarImageProvider likenessProvider]


CNPropertySimpleCell : CNPropertyCell
 @property  UILabel *labelLabel
 @property  UILabel *valueLabel

  // instance methods
  -[CNPropertySimpleCell labelView]
  -[CNPropertySimpleCell .cxx_destruct]
  -[CNPropertySimpleCell valueLabel]
  -[CNPropertySimpleCell valueView]
  -[CNPropertySimpleCell labelLabel]


CNPropertySimpleTransportCell : CNPropertySimpleCell
 @property  UIView *badgeView
 @property  BOOL needsUpdateTouchAreas
 @property  BOOL allowsActions
 @property  BOOL shouldShowStar
 @property  BOOL shouldShowBadge
 @property  BOOL shouldShowTransportButtons
 @property  CNTransportButton *transportIcon1
 @property  CNTransportButton *transportIcon2
 @property  CNTransportButton *transportIcon3
 @property  CNTransportButton *standardTransportIcon
 @property  UIImageView *standardStarView
 @property  UIView *standardBadgeView
 @property  UIColor *actionsColor

  // class methods
  +[CNPropertySimpleTransportCell _updateStarImageForView:]
  +[CNPropertySimpleTransportCell standardStarView]

  // instance methods
  -[CNPropertySimpleTransportCell initWithStyle:reuseIdentifier:]
  -[CNPropertySimpleTransportCell dealloc]
  -[CNPropertySimpleTransportCell _contentSizeCategoryDidChange:]
  -[CNPropertySimpleTransportCell .cxx_destruct]
  -[CNPropertySimpleTransportCell prepareForReuse]
  -[CNPropertySimpleTransportCell layoutSubviews]
  -[CNPropertySimpleTransportCell observeValueForKeyPath:ofObject:change:context:]
  -[CNPropertySimpleTransportCell badgeView]
  -[CNPropertySimpleTransportCell setBadgeView:]
  -[CNPropertySimpleTransportCell shouldShowBadge]
  -[CNPropertySimpleTransportCell setAllowsActions:]
  -[CNPropertySimpleTransportCell allowsActions]
  -[CNPropertySimpleTransportCell rightMostView]
  -[CNPropertySimpleTransportCell setCardGroupItem:]
  -[CNPropertySimpleTransportCell variableConstraints]
  -[CNPropertySimpleTransportCell shouldPerformDefaultAction]
  -[CNPropertySimpleTransportCell shouldShowStar]
  -[CNPropertySimpleTransportCell updateTransportButtons]
  -[CNPropertySimpleTransportCell updateWithPropertyItem:]
  -[CNPropertySimpleTransportCell setShouldShowTransportButtons:]
  -[CNPropertySimpleTransportCell transportButtonClicked:]
  -[CNPropertySimpleTransportCell standardStarView]
  -[CNPropertySimpleTransportCell standardTransportIcon]
  -[CNPropertySimpleTransportCell transportIcon1]
  -[CNPropertySimpleTransportCell transportIcon2]
  -[CNPropertySimpleTransportCell transportIcon3]
  -[CNPropertySimpleTransportCell standardBadgeView]
  -[CNPropertySimpleTransportCell setShouldShowBadge:]
  -[CNPropertySimpleTransportCell updateLabelNeedingHuggingContent]
  -[CNPropertySimpleTransportCell updateStarIcon]
  -[CNPropertySimpleTransportCell setActionsColor:]
  -[CNPropertySimpleTransportCell shouldShowTransportButtons]
  -[CNPropertySimpleTransportCell actionsColor]
  -[CNPropertySimpleTransportCell needsUpdateTouchAreas]
  -[CNPropertySimpleTransportCell setNeedsUpdateTouchAreas:]


CNPropertySimpleEditingCell : CNPropertyEditingCell <UITextFieldDelegate>
 @property  UITextField *textField
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPropertySimpleEditingCell textField]
  -[CNPropertySimpleEditingCell dealloc]
  -[CNPropertySimpleEditingCell .cxx_destruct]
  -[CNPropertySimpleEditingCell prepareForReuse]
  -[CNPropertySimpleEditingCell valueView]
  -[CNPropertySimpleEditingCell variableConstraints]
  -[CNPropertySimpleEditingCell constantConstraints]
  -[CNPropertySimpleEditingCell textFieldChanged:]
  -[CNPropertySimpleEditingCell firstResponderItem]
  -[CNPropertySimpleEditingCell updateValueWithPropertyItem:]


CNPropertySocialProfileEditingCell : CNPropertySimpleEditingCell <CNPickerControllerDelegate, UINavigationControllerDelegate>
 @property  CNSocialProfile *profile
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPropertySocialProfileEditingCell profile]
  -[CNPropertySocialProfileEditingCell picker:didPickItem:]
  -[CNPropertySocialProfileEditingCell pickerDidCancel:]
  -[CNPropertySocialProfileEditingCell labelButtonClicked:]


CNShareLocationController : NSObject <FMFSessionDelegate>
 @property  FMFSession *fmfSession
 @property  NSSet *handles
 @property  CNUIIDSAvailabilityProvider *idsAvailabilityProvider
 @property  <CNCancelable> *bestPropertyCancelable
 @property  CNFuture *bestPropertyFuture
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  CNContact *contact
 @property  BOOL canShare
 @property  BOOL isSharing
 @property  NSObject<CNShareLocationProtocol> *shareLocationDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNShareLocationController fmfHandlesFromContact:]
  +[CNShareLocationController fmfHandleFromContactProperty:]

  // instance methods
  -[CNShareLocationController contact]
  -[CNShareLocationController idsAvailabilityProvider]
  -[CNShareLocationController .cxx_destruct]
  -[CNShareLocationController schedulerProvider]
  -[CNShareLocationController handles]
  -[CNShareLocationController perform:]
  -[CNShareLocationController setContact:]
  -[CNShareLocationController setHandles:]
  -[CNShareLocationController fmfSession]
  -[CNShareLocationController initWithIDSAvailabilityProvider:]
  -[CNShareLocationController initWithIDSAvailabilityProvider:fmfSession:schedulerProvider:]
  -[CNShareLocationController canShare]
  -[CNShareLocationController isSharing]
  -[CNShareLocationController actionsMenuProvider]
  -[CNShareLocationController shareLocationUntilEndDate:]
  -[CNShareLocationController stopSharingLocation]
  -[CNShareLocationController endOfDayDate]
  -[CNShareLocationController initiateIDSRequest]
  -[CNShareLocationController callerID:]
  -[CNShareLocationController callerIDFuture]
  -[CNShareLocationController notifySharingStatusDidChange]
  -[CNShareLocationController shareLocationDelegate]
  -[CNShareLocationController setShareLocationDelegate:]
  -[CNShareLocationController setFmfSession:]
  -[CNShareLocationController bestPropertyCancelable]
  -[CNShareLocationController setBestPropertyCancelable:]
  -[CNShareLocationController bestPropertyFuture]
  -[CNShareLocationController setBestPropertyFuture:]


CNPropertyURLAddressEditingCell : CNPropertySimpleEditingCell
  // instance methods
  -[CNPropertyURLAddressEditingCell initWithStyle:reuseIdentifier:]


CNContactViewCache : NSObject <CNUICoreParentContainerProvider>
 @property  CNCache *cachedContactToContainerIDs
 @property  CNCache *cachedContainers
 @property  CNCache *cachedPolicies
 @property  CNCache *cachedAccounts
 @property  CNCache *cachedTopAccounts
 @property  CNContactStore *contactStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactViewCache shouldIgnorePolicyOfContactInGuarianRestrictedContainer:]
  +[CNContactViewCache isCandidatePolicy:ofContactInCandidateContainerWithType:preferredOverPolicy:ofContactInContainerWithType:]

  // instance methods
  -[CNContactViewCache setContactStore:]
  -[CNContactViewCache bestPolicyForContact:]
  -[CNContactViewCache cachedContainers]
  -[CNContactViewCache accountForContainer:]
  -[CNContactViewCache policyForDefaultContainer]
  -[CNContactViewCache defaultContainerPolicy]
  -[CNContactViewCache policyForContainer:]
  -[CNContactViewCache containerForContact:]
  -[CNContactViewCache accountForContainer:shouldUseTopLevelAccount:]
  -[CNContactViewCache cachedAccounts]
  -[CNContactViewCache _uncachedContainerForContact:inStore:]
  -[CNContactViewCache _policyForContact:]
  -[CNContactViewCache .cxx_destruct]
  -[CNContactViewCache cachedContactToContainerIDs]
  -[CNContactViewCache setCachedContactToContainerIDs:]
  -[CNContactViewCache containerIdentifierForContact:]
  -[CNContactViewCache policyForContact:]
  -[CNContactViewCache setCachedTopAccounts:]
  -[CNContactViewCache resetCache]
  -[CNContactViewCache setCachedAccounts:]
  -[CNContactViewCache accountForContact:]
  -[CNContactViewCache cachedPolicies]
  -[CNContactViewCache contactStore]
  -[CNContactViewCache predicateForContainerForContact:inStore:]
  -[CNContactViewCache _accountForContainer:]
  -[CNContactViewCache nts_lazyContactStore]
  -[CNContactViewCache cachedTopAccounts]
  -[CNContactViewCache setCachedContainers:]
  -[CNContactViewCache setCachedPolicies:]
  -[CNContactViewCache policyForContainerWithIdentifier:]
  -[CNContactViewCache init]


CNCardGroupMembershipPlaceholderGroupItem : CNCardGroupItem
 @property  NSString *title

  // instance methods
  -[CNCardGroupMembershipPlaceholderGroupItem title]


CNQuickActionButton : UIView
 @property  UIButton *button
 @property  UILabel *label
 @property  NSArray *activatedConstraints
 @property  CNQuickAction *action
 @property  BOOL showTitle
 @property  BOOL showBackgroundPlatter
 @property  <CNQuickActionButtonDelegate> *delegate

  // instance methods
  -[CNQuickActionButton performAction]
  -[CNQuickActionButton setDelegate:]
  -[CNQuickActionButton button]
  -[CNQuickActionButton updateConstraints]
  -[CNQuickActionButton delegate]
  -[CNQuickActionButton setLabel:]
  -[CNQuickActionButton .cxx_destruct]
  -[CNQuickActionButton setShowTitle:]
  -[CNQuickActionButton action]
  -[CNQuickActionButton showTitle]
  -[CNQuickActionButton setButton:]
  -[CNQuickActionButton label]
  -[CNQuickActionButton initWithFrame:]
  -[CNQuickActionButton setAction:]
  -[CNQuickActionButton activatedConstraints]
  -[CNQuickActionButton setActivatedConstraints:]
  -[CNQuickActionButton showBackgroundPlatter]
  -[CNQuickActionButton setShowBackgroundPlatter:]
  -[CNQuickActionButton onLongPress:]


CNGroupAvatarContainerView : UIView
 @property  CNVisualIdentityAvatarContainerView *underlyingContainerView

  // instance methods
  -[CNGroupAvatarContainerView .cxx_destruct]
  -[CNGroupAvatarContainerView sizeThatFits:]
  -[CNGroupAvatarContainerView underlyingContainerView]
  -[CNGroupAvatarContainerView setUnderlyingContainerView:]


CNGroupAvatarViewController : UIViewController
 @property  CNGroupIdentity *group
 @property  CNVisualIdentityAvatarViewController *avatarViewController
 @property  UIImage *badgeImage
 @property  CNBadgingAvatarBadgeStyleSettings *badgeStyleSettings
 @property  BOOL isMarkedForSyndication
 @property  BOOL isDoNotDisturb
 @property  CNAvatarAccessoryView *mediaContextBadge

  // class methods
  +[CNGroupAvatarViewController descriptorForRequiredKeys]
  +[CNGroupAvatarViewController log]
  +[CNGroupAvatarViewController maxContactAvatars]

  // instance methods
  -[CNGroupAvatarViewController _canShowWhileLocked]
  -[CNGroupAvatarViewController .cxx_destruct]
  -[CNGroupAvatarViewController loadView]
  -[CNGroupAvatarViewController group]
  -[CNGroupAvatarViewController setGroup:]
  -[CNGroupAvatarViewController avatarViewController]
  -[CNGroupAvatarViewController setAvatarViewController:]
  -[CNGroupAvatarViewController groupIdentityDidUpdate:]
  -[CNGroupAvatarViewController setIsMarkedForSyndication:]
  -[CNGroupAvatarViewController setMediaContextBadge:]
  -[CNGroupAvatarViewController isMarkedForSyndication]
  -[CNGroupAvatarViewController mediaContextBadge]
  -[CNGroupAvatarViewController setBadgeStyleSettings:]
  -[CNGroupAvatarViewController setBadgeImage:]
  -[CNGroupAvatarViewController badgeImage]
  -[CNGroupAvatarViewController badgeStyleSettings]
  -[CNGroupAvatarViewController initWithGroup:]
  -[CNGroupAvatarViewController initWithGroup:avatarViewControllerSettings:]
  -[CNGroupAvatarViewController contactsEqualToContactsFromGroup:]
  -[CNGroupAvatarViewController setIsDoNotDisturb:]
  -[CNGroupAvatarViewController isDoNotDisturb]


CNContactGridViewLayout : UICollectionViewFlowLayout <NSCopying>
 @property  BOOL needsUpdateLayout
 @property  double offsetBefore
 @property  double offsetAfter
 @property  double selectedItemWidthOffset
 @property  long long numberOfColumns
 @property  NSIndexPath *selectedIndexPath

  // instance methods
  -[CNContactGridViewLayout layoutAttributesForItemAtIndexPath:]
  -[CNContactGridViewLayout layoutAttributesForElementsInRect:]
  -[CNContactGridViewLayout setNumberOfColumns:]
  -[CNContactGridViewLayout numberOfColumns]
  -[CNContactGridViewLayout .cxx_destruct]
  -[CNContactGridViewLayout copyWithZone:]
  -[CNContactGridViewLayout prepareForCollectionViewUpdates:]
  -[CNContactGridViewLayout _animationForReusableView:toLayoutAttributes:type:]
  -[CNContactGridViewLayout selectedIndexPath]
  -[CNContactGridViewLayout setSelectedIndexPath:]
  -[CNContactGridViewLayout _updateLayoutMetrics]
  -[CNContactGridViewLayout needsUpdateLayout]
  -[CNContactGridViewLayout setNeedsUpdateLayout:]
  -[CNContactGridViewLayout offsetBefore]
  -[CNContactGridViewLayout setOffsetBefore:]
  -[CNContactGridViewLayout offsetAfter]
  -[CNContactGridViewLayout setOffsetAfter:]
  -[CNContactGridViewLayout selectedItemWidthOffset]
  -[CNContactGridViewLayout setSelectedItemWidthOffset:]


CNContactGridViewController : UICollectionViewController <CNContactDataSourceDelegate, CNAvatarViewDelegate, CNQuickActionsViewDelegate>
 @property  CNContactGridViewLayout *gridLayout
 @property  NSIndexPath *indexPathOfContactWithExpandedInlineActions
 @property  NSMutableDictionary *preloadedActionsManagers
 @property  <CNContactGridViewControllerDelegate> *delegate
 @property  NSObject<CNContactDataSource> *dataSource
 @property  CNContactFormatter *contactFormatter
 @property  BOOL inlineActionsEnabled
 @property  NSArray *inlineActionsCategories
 @property  long long indexOfContactWithExpandedInlineActions
 @property  long long numberOfColumns
 @property  {CGSize=dd} avatarSize
 @property  {UIEdgeInsets=dddd} avatarMargins
 @property  long long monogrammerStyle
 @property  UIColor *backgroundColor
 @property  NSDictionary *nameTextAttributes
 @property  <CNKeyDescriptor> *descriptorForRequiredKeys
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactGridViewController initWithDataSource:]
  -[CNContactGridViewController setNumberOfColumns:]
  -[CNContactGridViewController collectionView:cellForItemAtIndexPath:]
  -[CNContactGridViewController dataSource]
  -[CNContactGridViewController numberOfColumns]
  -[CNContactGridViewController contactDataSourceDidChange:]
  -[CNContactGridViewController descriptorForRequiredKeys]
  -[CNContactGridViewController setDelegate:]
  -[CNContactGridViewController collectionView:shouldSelectItemAtIndexPath:]
  -[CNContactGridViewController delegate]
  -[CNContactGridViewController initWithNibName:bundle:]
  -[CNContactGridViewController numberOfSectionsInCollectionView:]
  -[CNContactGridViewController viewWillLayoutSubviews]
  -[CNContactGridViewController presentingViewControllerForAvatarView:]
  -[CNContactGridViewController .cxx_destruct]
  -[CNContactGridViewController setMonogrammerStyle:]
  -[CNContactGridViewController viewDidLoad]
  -[CNContactGridViewController monogrammerStyle]
  -[CNContactGridViewController backgroundColor]
  -[CNContactGridViewController setBackgroundColor:]
  -[CNContactGridViewController initWithCollectionViewLayout:]
  -[CNContactGridViewController setDataSource:]
  -[CNContactGridViewController collectionView:didSelectItemAtIndexPath:]
  -[CNContactGridViewController _contactAtIndexPath:]
  -[CNContactGridViewController collectionView:numberOfItemsInSection:]
  -[CNContactGridViewController contactFormatter]
  -[CNContactGridViewController setContactFormatter:]
  -[CNContactGridViewController initWithCoder:]
  -[CNContactGridViewController _indexPathForGlobalIndex:]
  -[CNContactGridViewController setNameTextAttributes:]
  -[CNContactGridViewController nameTextAttributes]
  -[CNContactGridViewController willBeginPreviewInteractionForAvatarView:]
  -[CNContactGridViewController avatarSize]
  -[CNContactGridViewController actionsView:willShowActions:]
  -[CNContactGridViewController viewControllerForActionsView:]
  -[CNContactGridViewController actionsView:didPerformAction:]
  -[CNContactGridViewController inlineActionsCategories]
  -[CNContactGridViewController _updateItemSize]
  -[CNContactGridViewController _configureCell:]
  -[CNContactGridViewController _globalIndexForIndexPath:]
  -[CNContactGridViewController setIndexPathOfContactWithExpandedInlineActions:animated:]
  -[CNContactGridViewController setIndexPathOfContactWithExpandedInlineActions:]
  -[CNContactGridViewController indexPathOfContactWithExpandedInlineActions]
  -[CNContactGridViewController setIndexOfContactWithExpandedInlineActions:animated:]
  -[CNContactGridViewController setIndexOfContactWithExpandedInlineActions:]
  -[CNContactGridViewController indexOfContactWithExpandedInlineActions]
  -[CNContactGridViewController preloadInlineActionsForContactsAtIndexes:]
  -[CNContactGridViewController inlineActionsEnabled]
  -[CNContactGridViewController setInlineActionsEnabled:]
  -[CNContactGridViewController setInlineActionsCategories:]
  -[CNContactGridViewController setAvatarSize:]
  -[CNContactGridViewController avatarMargins]
  -[CNContactGridViewController setAvatarMargins:]
  -[CNContactGridViewController gridLayout]
  -[CNContactGridViewController setGridLayout:]
  -[CNContactGridViewController preloadedActionsManagers]
  -[CNContactGridViewController setPreloadedActionsManagers:]


CNRepeatingGradientSeparatorView : UIView
 @property  NSArray *gradientColors
 @property  UIColor *startColor
 @property  UIColor *endColor
 @property  long long lineCount

  // instance methods
  -[CNRepeatingGradientSeparatorView .cxx_destruct]
  -[CNRepeatingGradientSeparatorView lineCount]
  -[CNRepeatingGradientSeparatorView layoutSubviews]
  -[CNRepeatingGradientSeparatorView gradientColors]
  -[CNRepeatingGradientSeparatorView intrinsicContentSize]
  -[CNRepeatingGradientSeparatorView initWithFrame:]
  -[CNRepeatingGradientSeparatorView setLineCount:]
  -[CNRepeatingGradientSeparatorView _updateGradients]
  -[CNRepeatingGradientSeparatorView setStartColor:]
  -[CNRepeatingGradientSeparatorView setEndColor:]
  -[CNRepeatingGradientSeparatorView startColor]
  -[CNRepeatingGradientSeparatorView endColor]


CNPhotoPickerProviderGroupsBuilder : NSObject
 @property  BOOL includeContactImage
 @property  BOOL includeUnifiedContactImages
 @property  BOOL includeTakePhotoItem
 @property  BOOL includePhotoFromLibraryItem
 @property  BOOL includeMonograms
 @property  BOOL includeFaces
 @property  BOOL includeAnimoji
 @property  BOOL includeAddAnimojiItem
 @property  BOOL includeRecents
 @property  BOOL shouldOrderEmojiBeforeAnimoji
 @property  BOOL includesEmojiContent
 @property  BOOL includeAddEmojiItem
 @property  CNVisualIdentity *visualIdentity
 @property  <AVTAvatarStore> *avatarStore
 @property  CNContactViewCache *contactViewCache
 @property  CNUIContactsEnvironment *environment
 @property  BOOL includesAnyPhotoContent

  // class methods
  +[CNPhotoPickerProviderGroupsBuilder builderWithVisualIdentity:avatarStore:environment:contactViewCache:photoPickerConfiguration:]

  // instance methods
  -[CNPhotoPickerProviderGroupsBuilder contactViewCache]
  -[CNPhotoPickerProviderGroupsBuilder build]
  -[CNPhotoPickerProviderGroupsBuilder .cxx_destruct]
  -[CNPhotoPickerProviderGroupsBuilder environment]
  -[CNPhotoPickerProviderGroupsBuilder includeFaces]
  -[CNPhotoPickerProviderGroupsBuilder setIncludeFaces:]
  -[CNPhotoPickerProviderGroupsBuilder avatarStore]
  -[CNPhotoPickerProviderGroupsBuilder injectedItemsGroup]
  -[CNPhotoPickerProviderGroupsBuilder visualIdentity]
  -[CNPhotoPickerProviderGroupsBuilder includeUnifiedContactImages]
  -[CNPhotoPickerProviderGroupsBuilder setIncludeUnifiedContactImages:]
  -[CNPhotoPickerProviderGroupsBuilder initWithVisualIdentity:avatarStore:environment:contactViewCache:]
  -[CNPhotoPickerProviderGroupsBuilder includesAnyPhotoContent]
  -[CNPhotoPickerProviderGroupsBuilder addItemsContentGroup]
  -[CNPhotoPickerProviderGroupsBuilder photoContentGroup]
  -[CNPhotoPickerProviderGroupsBuilder animojiContentGroup]
  -[CNPhotoPickerProviderGroupsBuilder emojiContentGroup]
  -[CNPhotoPickerProviderGroupsBuilder includeContactImage]
  -[CNPhotoPickerProviderGroupsBuilder setIncludeContactImage:]
  -[CNPhotoPickerProviderGroupsBuilder includeTakePhotoItem]
  -[CNPhotoPickerProviderGroupsBuilder setIncludeTakePhotoItem:]
  -[CNPhotoPickerProviderGroupsBuilder includePhotoFromLibraryItem]
  -[CNPhotoPickerProviderGroupsBuilder setIncludePhotoFromLibraryItem:]
  -[CNPhotoPickerProviderGroupsBuilder includeMonograms]
  -[CNPhotoPickerProviderGroupsBuilder setIncludeMonograms:]
  -[CNPhotoPickerProviderGroupsBuilder includeAnimoji]
  -[CNPhotoPickerProviderGroupsBuilder setIncludeAnimoji:]
  -[CNPhotoPickerProviderGroupsBuilder includeAddAnimojiItem]
  -[CNPhotoPickerProviderGroupsBuilder setIncludeAddAnimojiItem:]
  -[CNPhotoPickerProviderGroupsBuilder includeRecents]
  -[CNPhotoPickerProviderGroupsBuilder setIncludeRecents:]
  -[CNPhotoPickerProviderGroupsBuilder shouldOrderEmojiBeforeAnimoji]
  -[CNPhotoPickerProviderGroupsBuilder setShouldOrderEmojiBeforeAnimoji:]
  -[CNPhotoPickerProviderGroupsBuilder includesEmojiContent]
  -[CNPhotoPickerProviderGroupsBuilder setIncludesEmojiContent:]
  -[CNPhotoPickerProviderGroupsBuilder includeAddEmojiItem]
  -[CNPhotoPickerProviderGroupsBuilder setIncludeAddEmojiItem:]


CNVisualIdentityEditablePrimaryAvatarTextField : UITextView
  // instance methods
  -[CNVisualIdentityEditablePrimaryAvatarTextField caretRectForPosition:]


CNVisualIdentityEditablePrimaryAvatarViewController : UIViewController <UITextViewDelegate, CNVisualIdentityPrimaryAvatarProvider>
 @property  UIImageView *imageContainerView
 @property  CNVisualIdentityEditablePrimaryAvatarTextField *textField
 @property  UIFont *originalFont
 @property  CAShapeLayer *clippingLayer
 @property  UIView *imageContentView
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  CNPhotoPickerProviderItem *providerItem
 @property  <CNVisualIdentityEditablePrimaryAvatarViewControllerDelegate> *delegate
 @property  double desiredFontSize
 @property  NSString *text
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNVisualIdentityEditablePrimaryAvatarViewController setTextField:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController text]
  -[CNVisualIdentityEditablePrimaryAvatarViewController textField]
  -[CNVisualIdentityEditablePrimaryAvatarViewController setDelegate:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController delegate]
  -[CNVisualIdentityEditablePrimaryAvatarViewController beginEditing]
  -[CNVisualIdentityEditablePrimaryAvatarViewController .cxx_destruct]
  -[CNVisualIdentityEditablePrimaryAvatarViewController viewDidLoad]
  -[CNVisualIdentityEditablePrimaryAvatarViewController viewDidLayoutSubviews]
  -[CNVisualIdentityEditablePrimaryAvatarViewController setOriginalFont:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController endEditing]
  -[CNVisualIdentityEditablePrimaryAvatarViewController originalFont]
  -[CNVisualIdentityEditablePrimaryAvatarViewController textViewDidEndEditing:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController textView:shouldChangeTextInRange:replacementText:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController providerItem]
  -[CNVisualIdentityEditablePrimaryAvatarViewController setProviderItem:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController variantsManager]
  -[CNVisualIdentityEditablePrimaryAvatarViewController setVariantsManager:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController clippingLayer]
  -[CNVisualIdentityEditablePrimaryAvatarViewController setClippingLayer:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController layoutPrimaryAvatar]
  -[CNVisualIdentityEditablePrimaryAvatarViewController updatedProviderItemWithText:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController initWithProviderItem:variantsManager:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController setupViewWithProviderItem:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController updatedProviderItem]
  -[CNVisualIdentityEditablePrimaryAvatarViewController isEmojiProviderItemType]
  -[CNVisualIdentityEditablePrimaryAvatarViewController viewForPrimaryAvatar]
  -[CNVisualIdentityEditablePrimaryAvatarViewController updatePrimaryAvatarForVisualIdentity:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController primaryAvatarShouldDisplay]
  -[CNVisualIdentityEditablePrimaryAvatarViewController initWithVariantsManager:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController updateWithProviderItem:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController updateViewWithProviderItem:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController populateViewWithTextEditableProviderItem:imageType:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController setupImageContainerView]
  -[CNVisualIdentityEditablePrimaryAvatarViewController setupTextField]
  -[CNVisualIdentityEditablePrimaryAvatarViewController updateTextFieldFontSize:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController isMonogramProviderItemType]
  -[CNVisualIdentityEditablePrimaryAvatarViewController updateContainerViewMask]
  -[CNVisualIdentityEditablePrimaryAvatarViewController adjustFontSizeToFitWidthForText:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController trimTextFieldTextIfNeeded:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController trimTextFieldTextIfNeeded:containsEmoji:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController hasValidInputTypeForText:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController exceedsMaxCharacterCount:containsEmoji:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController maxTextFieldSize]
  -[CNVisualIdentityEditablePrimaryAvatarViewController centerTextFieldInContainerView]
  -[CNVisualIdentityEditablePrimaryAvatarViewController desiredFontSize]
  -[CNVisualIdentityEditablePrimaryAvatarViewController setDesiredFontSize:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController imageContainerView]
  -[CNVisualIdentityEditablePrimaryAvatarViewController setImageContainerView:]
  -[CNVisualIdentityEditablePrimaryAvatarViewController imageContentView]
  -[CNVisualIdentityEditablePrimaryAvatarViewController setImageContentView:]


CNPropertyBestIDSValueQuery : NSObject
 @property  NSArray *propertyItems
 @property  NSArray *idsHandles
 @property  <CNCancelable> *idsLookupToken
 @property  NSMutableArray *validIDSHandles
 @property  NSMutableArray *validIDSItems
 @property  CNPropertyGroupItem *bestIDSProperty
 @property  <CNPropertyBestIDSValueQueryDelegate> *delegate

  // instance methods
  -[CNPropertyBestIDSValueQuery setDelegate:]
  -[CNPropertyBestIDSValueQuery delegate]
  -[CNPropertyBestIDSValueQuery .cxx_destruct]
  -[CNPropertyBestIDSValueQuery cancel]
  -[CNPropertyBestIDSValueQuery propertyItems]
  -[CNPropertyBestIDSValueQuery setPropertyItems:]
  -[CNPropertyBestIDSValueQuery initWithPropertyItems:service:]
  -[CNPropertyBestIDSValueQuery initWithPropertyItems:service:idsAvailabilityProvider:schedulerProvider:]
  -[CNPropertyBestIDSValueQuery bestIDSProperty]
  -[CNPropertyBestIDSValueQuery validIDSItems]
  -[CNPropertyBestIDSValueQuery idsHandles]
  -[CNPropertyBestIDSValueQuery setIdsHandles:]
  -[CNPropertyBestIDSValueQuery idsLookupToken]
  -[CNPropertyBestIDSValueQuery setIdsLookupToken:]
  -[CNPropertyBestIDSValueQuery validIDSHandles]
  -[CNPropertyBestIDSValueQuery setValidIDSHandles:]


CNUIColorRepository : NSObject
  // class methods
  +[CNUIColorRepository navigationListActionIconFillColorRegular]
  +[CNUIColorRepository carPlayTransportButtonBackgroundStrokeColorSelected]
  +[CNUIColorRepository contactStyleDefaultTextColor]
  +[CNUIColorRepository contactStyleDefaultReadOnlyTextColor]
  +[CNUIColorRepository quickActionContentColorPlatterUnhighlightedColor]
  +[CNUIColorRepository contactStyleDefaultBackgroundColor]
  +[CNUIColorRepository carPlayTableViewBackgroundColor]
  +[CNUIColorRepository contactListContactCountTextColor]
  +[CNUIColorRepository quickActionContentColorEnabled]
  +[CNUIColorRepository carPlayTransportButtonGlyphColorEnabled]
  +[CNUIColorRepository monogrammerTextStandardGrayColor]
  +[CNUIColorRepository photoPickerCaptureLightBackgroundColor]
  +[CNUIColorRepository carPlayContactCardLabeledBadgeBackgroundColor]
  +[CNUIColorRepository carPlaySiriButtonTextColor]
  +[CNUIColorRepository quickActionContentColorPlatterHitActionColor]
  +[CNUIColorRepository photoPickerBackgroundShadowColor]
  +[CNUIColorRepository siriTintColor]
  +[CNUIColorRepository photoPickerAvatarBackgroundDefaultColor]
  +[CNUIColorRepository faceTimeGroupedBackgroundColor]
  +[CNUIColorRepository monogrammerBackgroundGrayColor]
  +[CNUIColorRepository photoPickerCaptureCancelButtonTextColor]
  +[CNUIColorRepository contactStyleDefaultSearchCellBackgroundColor]
  +[CNUIColorRepository navigationListDetailCellTitleTextColorRegular]
  +[CNUIColorRepository contactListMeLabelTextColor]
  +[CNUIColorRepository contactStyleDefaultBlueSelectionSecondaryTextColor]
  +[CNUIColorRepository photoPickerTrapViewMessageTextColor]
  +[CNUIColorRepository quickActionViewRoundedRectBackgroundColor]
  +[CNUIColorRepository carPlayQuickActionButtonBackgroundFillColorEnabled]
  +[CNUIColorRepository photoPickerHeaderSeparatorColor]
  +[CNUIColorRepository carPlayContactInfoViewSecondaryLabelTextColor]
  +[CNUIColorRepository navigationListCellBackgroundExpandedColorRegular]
  +[CNUIColorRepository carPlayTableViewCellSubtitleTextHighlightedColor]
  +[CNUIColorRepository carPlayQuickActionButtonTitleTextColorEnabled]
  +[CNUIColorRepository carPlayTableViewCellBackgroundHighlightedColor]
  +[CNUIColorRepository carPlayQuickActionButtonBackgroundStrokeColorDisabled]
  +[CNUIColorRepository photoPickerActionButtonDestructiveTextColor]
  +[CNUIColorRepository photoPickerActionButtonBackgroundColor]
  +[CNUIColorRepository photoPickerActionButtonTextColor]
  +[CNUIColorRepository quickActionBorderColorDisabled]
  +[CNUIColorRepository carPlayQuickActionButtonBackgroundStrokeColorEnabled]
  +[CNUIColorRepository catalystNameTextFieldsBackgroundColor]
  +[CNUIColorRepository monogrammerBackgroundDarkColor]
  +[CNUIColorRepository carPlayQuickActionButtonTitleTextColorDisabled]
  +[CNUIColorRepository carPlayContactCardRecentBadgeTextColor]
  +[CNUIColorRepository carPlaySiriButtonBackgroundHighlightedColor]
  +[CNUIColorRepository contactStyleDefaultHeaderBackgroundColor]
  +[CNUIColorRepository contactStyleDefaultTransportBackgroundColor]
  +[CNUIColorRepository navigationListCellBackgroundHighlightedColorRegular]
  +[CNUIColorRepository carPlayQuickActionButtonGlyphColorEnabled]
  +[CNUIColorRepository contactListEmergencyContactAddTextColor]
  +[CNUIColorRepository contactListBannerFootnoteTextColorPrimary]
  +[CNUIColorRepository visualIdentityEditorBackgroundColor]
  +[CNUIColorRepository transparentBackgroundColor]
  +[CNUIColorRepository navigationListCellSubtitleTextColorRegular]
  +[CNUIColorRepository contactStyleLightStyleHighlightedTextColor]
  +[CNUIColorRepository groupsTextActionColor]
  +[CNUIColorRepository carPlayTableViewGlyphColor]
  +[CNUIColorRepository contactStyleDefaultSeparatorColor]
  +[CNUIColorRepository carPlayTransportButtonBackgroundFillColorDisabled]
  +[CNUIColorRepository navigationListActionIconFillHighlightedColorRegular]
  +[CNUIColorRepository contactSuggestionsCheckmarkBackgroundViewColor]
  +[CNUIColorRepository contactCardBackgroundiPadOverwriteColor]
  +[CNUIColorRepository quickActionContentColorDisabledPill]
  +[CNUIColorRepository quickActionContentColorDisabled]
  +[CNUIColorRepository carPlayTableViewCellTitleTextColor]
  +[CNUIColorRepository carPlayTransportButtonBackgroundFillColorEnabled]
  +[CNUIColorRepository visualIdentityEditorSegmentedControlDisabledColor]
  +[CNUIColorRepository monogrammerBackTextWhiteColor]
  +[CNUIColorRepository monogrammerTextGrayColor]
  +[CNUIColorRepository quickActionBackgroundColorRegular]
  +[CNUIColorRepository orbCardBackgroundShadowColor]
  +[CNUIColorRepository orbActionCellBackgroundColor]
  +[CNUIColorRepository carPlayTableViewCellTitleTextHighlightedColor]
  +[CNUIColorRepository carPlayQuickActionButtonBackgroundStrokeColorSelected]
  +[CNUIColorRepository groupsMailActionColor]
  +[CNUIColorRepository quickActionContentColor]
  +[CNUIColorRepository navigationListCellBackgroundColorRegular]
  +[CNUIColorRepository groupsOutlineBackgroundColor]
  +[CNUIColorRepository contactStyleDefaultSectionIndexBackgroundColor]
  +[CNUIColorRepository photoPickerCropOverlayColor]
  +[CNUIColorRepository visualIdentityEditorMonogramTextColor]
  +[CNUIColorRepository contactStyleDefaultTaglineTextColor]
  +[CNUIColorRepository contactCardLabeledBadgeBackgroundColor]
  +[CNUIColorRepository contactCardRecentBadgeTextDynamicColor]
  +[CNUIColorRepository contactStyleDefaultHighlightedTextColor]
  +[CNUIColorRepository monogrammerBackgroundStandardGrayColor]
  +[CNUIColorRepository photoPickerSelectionBorderColor]
  +[CNUIColorRepository photoPickerCaptureBackgroundColor]
  +[CNUIColorRepository contactListBannerFootnoteTextColorSecondary]
  +[CNUIColorRepository carPlayTableViewCellSubtitleTextColor]
  +[CNUIColorRepository contactCardStarImageColor]
  +[CNUIColorRepository carPlayNavigationBarContactNameTextColor]
  +[CNUIColorRepository carPlayTransportButtonGlyphColorDisabled]
  +[CNUIColorRepository contactStyleWithInsetPlattersDefaultContactHeaderBackgroundColor]
  +[CNUIColorRepository contactStyleDefaultSuggestedValueTextColor]
  +[CNUIColorRepository quickActionViewRoundedRectBorderColor]
  +[CNUIColorRepository carPlaySiriButtonTextHighlightedColor]
  +[CNUIColorRepository contactStyleDefaultDisabledTextColor]
  +[CNUIColorRepository groupsDisabledTextColor]
  +[CNUIColorRepository carPlayTableViewGlyphHighlightedColor]
  +[CNUIColorRepository contactListAddNewContactLabelTextColor]
  +[CNUIColorRepository contactsApplicationTintColor]
  +[CNUIColorRepository contactStyleDefaultNotesTextColor]
  +[CNUIColorRepository contactStyleDefaultGroupedBackgroundColor]
  +[CNUIColorRepository faceTimeSeparatorColorWithBlurUnsupported]
  +[CNUIColorRepository photoPickerCapturePromptLabelTextColor]
  +[CNUIColorRepository navigationListDisclosureImageColor]
  +[CNUIColorRepository popoverBackgroundColor]
  +[CNUIColorRepository quickActionBackgroundColorReducedTransparency]
  +[CNUIColorRepository carPlayQuickActionButtonBackgroundFillColorSelected]
  +[CNUIColorRepository faceTimeLightSeparatorColor]
  +[CNUIColorRepository carPlayQuickActionButtonBackgroundFillColorDisabled]
  +[CNUIColorRepository groupsInsetBackgroundColor]
  +[CNUIColorRepository contactCardPhotoEditButtonColor]
  +[CNUIColorRepository monogrammerBackgroundLightColor]
  +[CNUIColorRepository contactListEmergencyContactGlyphColor]
  +[CNUIColorRepository carPlaySiriButtonBackgroundColor]
  +[CNUIColorRepository quickActionButtonTintColor]
  +[CNUIColorRepository contactCardLabeledBadgeBackgroundDynamicColor]
  +[CNUIColorRepository orbCardBackgroundDimmedColor]
  +[CNUIColorRepository photoPickerBackgroundColor]
  +[CNUIColorRepository carPlayTransportButtonBackgroundStrokeColorEnabled]
  +[CNUIColorRepository contactStyleDefaultSuggestedLabelTextColor]
  +[CNUIColorRepository contactCardChevronImageColor]
  +[CNUIColorRepository contactStyleDefaultSectionBackgroundColor]
  +[CNUIColorRepository contactSuggestionsBackgroundColor]
  +[CNUIColorRepository contactStyleDefaultContactHeaderBackgroundColor]
  +[CNUIColorRepository contactStyleDefaultTransportBorderColor]
  +[CNUIColorRepository quickActionContentColorPlatterHighlightedColor]
  +[CNUIColorRepository monogrammerBackgroundWhiteColor]
  +[CNUIColorRepository navigationListDetailCellSubtitleTextColorRegular]
  +[CNUIColorRepository contactListDuplicateCountTextColor]
  +[CNUIColorRepository carPlayTransportButtonBackgroundStrokeColorDisabled]
  +[CNUIColorRepository navigationListDisclosureImageHighlightedColor]
  +[CNUIColorRepository carPlayTransportButtonBackgroundFillColorSelected]
  +[CNUIColorRepository contactCardRecentBadgeTextColor]
  +[CNUIColorRepository quickActionContentColorDisabledVibrant]
  +[CNUIColorRepository contactSuggestionsCheckmarkBorderColor]
  +[CNUIColorRepository contactSuggestionsTextLabelColor]
  +[CNUIColorRepository contactStyleDefaultContactHeaderDropShadowColor]
  +[CNUIColorRepository visualIdentityEditorDividerColor]
  +[CNUIColorRepository photoPickerSymbolImageBackgroundColor]
  +[CNUIColorRepository carPlayTransportButtonGlyphColorSelected]
  +[CNUIColorRepository contactStyleDefaultPlaceholderTextColor]
  +[CNUIColorRepository carPlayTableViewCellBackgroundColor]
  +[CNUIColorRepository contactCardDestructiveActionTitleTextColor]
  +[CNUIColorRepository contactStyleDefaultSelectedCellBackgroundColor]
  +[CNUIColorRepository visualIdentityEditorSegmentedControlNormalColor]
  +[CNUIColorRepository carPlayContactInfoViewPrimaryLabelTextColor]
  +[CNUIColorRepository catalystAudienceDetailLabelTextColor]
  +[CNUIColorRepository groupHeaderSubTitleImageColor]
  +[CNUIColorRepository monogrammerBackgroundFlatDarkColor]
  +[CNUIColorRepository contactStyleWithInsetPlattersDefaultContactHeaderDropShadowColor]
  +[CNUIColorRepository photoPickerSymbolImageColor]
  +[CNUIColorRepository navigationListCellTitleTextColorRegular]
  +[CNUIColorRepository photoPickerCaptureDarkBackgroundColor]
  +[CNUIColorRepository carPlayQuickActionButtonGlyphColorSelected]
  +[CNUIColorRepository carPlayQuickActionButtonGlyphColorDisabled]
  +[CNUIColorRepository groupHeaderSubTitleLabelColor]


CNPostalAddressEditorNavigationController : UINavigationController
 @property  <CNPostalAddressEditorDelegate> *addressEditorDelegate

  // instance methods
  -[CNPostalAddressEditorNavigationController .cxx_destruct]
  -[CNPostalAddressEditorNavigationController setTitle:]
  -[CNPostalAddressEditorNavigationController initWithContact:propertyKey:editNames:]
  -[CNPostalAddressEditorNavigationController initWithPropertyKey:label:]
  -[CNPostalAddressEditorNavigationController initWithFirstName:lastName:addressDictionary:label:]
  -[CNPostalAddressEditorNavigationController doneWithContact:propertyKey:]
  -[CNPostalAddressEditorNavigationController addressEditorDelegate]
  -[CNPostalAddressEditorNavigationController setAddressEditorDelegate:]


CNSharingProfileOnboardingPhotoSelectionViewController : OBWelcomeController <CNSharingProfilePhotoPickerViewControllerDelegate, CNPhotoPickerViewControllerDelegate>
 @property  CNContact *contact
 @property  <AVTAvatarRecord> *avatarRecord
 @property  CNSharingProfileAvatarItemProviderConfiguration *avatarItemProviderConfiguration
 @property  CNSharingProfileLogger *logger
 @property  OBLinkTrayButton *setupLaterButton
 @property  OBBoldTrayButton *backButton
 @property  OBBoldTrayButton *confirmButton
 @property  CNSharingProfilePhotoPickerViewController *sharingPhotoPickerViewController
 @property  CNPhotoPickerViewController *photoPickerViewController
 @property  CNMutableContact *photoProviderContact
 @property  <CNSharingProfileOnboardingPhotoSelectionViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNSharingProfileOnboardingPhotoSelectionViewController descriptorForRequiredKeys]

  // instance methods
  -[CNSharingProfileOnboardingPhotoSelectionViewController setLogger:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController backButton]
  -[CNSharingProfileOnboardingPhotoSelectionViewController logger]
  -[CNSharingProfileOnboardingPhotoSelectionViewController contentView]
  -[CNSharingProfileOnboardingPhotoSelectionViewController contact]
  -[CNSharingProfileOnboardingPhotoSelectionViewController setDelegate:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController delegate]
  -[CNSharingProfileOnboardingPhotoSelectionViewController .cxx_destruct]
  -[CNSharingProfileOnboardingPhotoSelectionViewController loadView]
  -[CNSharingProfileOnboardingPhotoSelectionViewController setBackButton:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController setContact:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController photoPickerDidCancel:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController photoPicker:didUpdatePhotoForContact:withContactImage:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController avatarRecord]
  -[CNSharingProfileOnboardingPhotoSelectionViewController setAvatarRecord:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController setupLaterButton]
  -[CNSharingProfileOnboardingPhotoSelectionViewController setSetupLaterButton:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController avatarItemProviderConfiguration]
  -[CNSharingProfileOnboardingPhotoSelectionViewController setAvatarItemProviderConfiguration:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController confirmButton]
  -[CNSharingProfileOnboardingPhotoSelectionViewController setConfirmButton:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController didTapDoneButton:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController updateForContentSizeCategoryChange]
  -[CNSharingProfileOnboardingPhotoSelectionViewController sharingPhotoPickerDidSelectAddItem:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController initWithContact:avatarRecord:avatarItemProviderConfiguration:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController didTapSetupLaterButton:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController didTapBackButton:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController sharingPhotoPickerViewController]
  -[CNSharingProfileOnboardingPhotoSelectionViewController setSharingPhotoPickerViewController:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController photoPickerViewController]
  -[CNSharingProfileOnboardingPhotoSelectionViewController setPhotoPickerViewController:]
  -[CNSharingProfileOnboardingPhotoSelectionViewController photoProviderContact]
  -[CNSharingProfileOnboardingPhotoSelectionViewController setPhotoProviderContact:]


CNContactContainerCell : CNLabeledCell
 @property  UILabel *accountLabel
 @property  UILabel *accountNameLabel
 @property  <CNPropertyCellDelegate> *delegate

  // class methods
  +[CNContactContainerCell wantsChevron]

  // instance methods
  -[CNContactContainerCell setDelegate:]
  -[CNContactContainerCell updateConstraints]
  -[CNContactContainerCell delegate]
  -[CNContactContainerCell labelView]
  -[CNContactContainerCell .cxx_destruct]
  -[CNContactContainerCell valueView]
  -[CNContactContainerCell setCardGroupItem:]
  -[CNContactContainerCell shouldPerformDefaultAction]
  -[CNContactContainerCell performDefaultAction]
  -[CNContactContainerCell accountLabel]
  -[CNContactContainerCell accountNameLabel]


CNContactContainerEditingCell : CNContactContainerCell
  // class methods
  +[CNContactContainerEditingCell wantsHorizontalLayout]


CNCardPropertyAlertGroup : CNCardPropertyGroup
 @property  CNLabeledValue *labeledValue

  // instance methods
  -[CNCardPropertyAlertGroup labeledValue]
  -[CNCardPropertyAlertGroup .cxx_destruct]
  -[CNCardPropertyAlertGroup _loadPropertyItems]
  -[CNCardPropertyAlertGroup setLabeledValue:]


CNUIGeminiDataSource : NSObject <CNGeminiManagerDelegate>
 @property  CNGeminiManager *geminiManager
 @property  CNGeminiResult *geminiResult
 @property  CNContact *contact
 @property  NSString *channelIdentifier
 @property  <CNUIGeminiDataSourceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNUIGeminiDataSource contact]
  -[CNUIGeminiDataSource setDelegate:]
  -[CNUIGeminiDataSource setGeminiManager:]
  -[CNUIGeminiDataSource delegate]
  -[CNUIGeminiDataSource .cxx_destruct]
  -[CNUIGeminiDataSource applicationWillEnterForeground:]
  -[CNUIGeminiDataSource geminiManager]
  -[CNUIGeminiDataSource setContact:]
  -[CNUIGeminiDataSource setGeminiResult:]
  -[CNUIGeminiDataSource geminiResult]
  -[CNUIGeminiDataSource channelIdentifier]
  -[CNUIGeminiDataSource channelsDidChangeForGeminiManager:]
  -[CNUIGeminiDataSource initWithGeminiManager:]
  -[CNUIGeminiDataSource resetDataSource]


CNShareContactActivityItem : NSObject <UIActivityItemSource, UIActivityItemSourceAttachment, UIActivityItemLinkPresentationSource>
 @property  NSArray *contacts
 @property  NSString *groupName
 @property  LPLinkMetadata *linkMetadata
 @property  LPFileMetadata *fileMetadata
 @property  CNContactFormatter *contactFormatter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNShareContactActivityItem displayString]
  -[CNShareContactActivityItem setContacts:]
  -[CNShareContactActivityItem .cxx_destruct]
  -[CNShareContactActivityItem contacts]
  -[CNShareContactActivityItem initWithContact:]
  -[CNShareContactActivityItem groupName]
  -[CNShareContactActivityItem thumbnailImage]
  -[CNShareContactActivityItem contactFormatter]
  -[CNShareContactActivityItem setContactFormatter:]
  -[CNShareContactActivityItem setGroupName:]
  -[CNShareContactActivityItem activityViewControllerPlaceholderItem:]
  -[CNShareContactActivityItem activityViewController:itemForActivityType:]
  -[CNShareContactActivityItem activityViewController:subjectForActivityType:]
  -[CNShareContactActivityItem activityViewController:dataTypeIdentifierForActivityType:]
  -[CNShareContactActivityItem activityViewController:thumbnailImageForActivityType:suggestedSize:]
  -[CNShareContactActivityItem activityViewController:attachmentNameForActivityType:]
  -[CNShareContactActivityItem activityViewControllerLinkPresentationMetadata:]
  -[CNShareContactActivityItem initWithContacts:inGroupNamed:]
  -[CNShareContactActivityItem linkMetadata]
  -[CNShareContactActivityItem setLinkMetadata:]
  -[CNShareContactActivityItem fileMetadata]
  -[CNShareContactActivityItem setFileMetadata:]


CNContactGridClippingView : UIView
 @property  CNAvatarView *avatarView
 @property  CAShapeLayer *actionsMaskLayer
 @property  BOOL masksToAvatar

  // instance methods
  -[CNContactGridClippingView avatarView]
  -[CNContactGridClippingView .cxx_destruct]
  -[CNContactGridClippingView layoutSubviews]
  -[CNContactGridClippingView setAvatarView:]
  -[CNContactGridClippingView setMasksToAvatar:]
  -[CNContactGridClippingView masksToAvatar]
  -[CNContactGridClippingView actionsMaskLayer]
  -[CNContactGridClippingView setActionsMaskLayer:]


CNContactGridCell : UICollectionViewCell
 @property  CNAvatarView *avatarView
 @property  CNContactGridClippingView *actionsClippingView
 @property  UIView *actionsContainerView
 @property  CNQuickActionsView *actionsView
 @property  UILabel *nameLabel
 @property  CNContact *contact
 @property  CNContactFormatter *contactFormatter
 @property  <CNAvatarViewDelegate><CNQuickActionsViewDelegate> *delegate
 @property  {CGSize=dd} avatarSize
 @property  {UIEdgeInsets=dddd} avatarMargins
 @property  NSDictionary *nameTextAttributes
 @property  BOOL showsContactOnTap
 @property  NSArray *actionCategories
 @property  CNQuickActionsManager *actionsManager
 @property  double maximumActionsWidth

  // class methods
  +[CNContactGridCell actionsLeftMargin]

  // instance methods
  -[CNContactGridCell avatarView]
  -[CNContactGridCell actionCategories]
  -[CNContactGridCell contact]
  -[CNContactGridCell setDelegate:]
  -[CNContactGridCell updateConstraints]
  -[CNContactGridCell delegate]
  -[CNContactGridCell setShowsContactOnTap:]
  -[CNContactGridCell .cxx_destruct]
  -[CNContactGridCell preferredLayoutAttributesFittingAttributes:]
  -[CNContactGridCell showsContactOnTap]
  -[CNContactGridCell nameLabel]
  -[CNContactGridCell setActionCategories:]
  -[CNContactGridCell setContact:]
  -[CNContactGridCell contactFormatter]
  -[CNContactGridCell setAvatarView:]
  -[CNContactGridCell setContactFormatter:]
  -[CNContactGridCell setNameLabel:]
  -[CNContactGridCell setNameTextAttributes:]
  -[CNContactGridCell nameTextAttributes]
  -[CNContactGridCell actionsView]
  -[CNContactGridCell setActionsView:]
  -[CNContactGridCell actionsContainerView]
  -[CNContactGridCell setActionsContainerView:]
  -[CNContactGridCell actionsManager]
  -[CNContactGridCell setActionsManager:]
  -[CNContactGridCell avatarSize]
  -[CNContactGridCell setAvatarSize:]
  -[CNContactGridCell avatarMargins]
  -[CNContactGridCell setAvatarMargins:]
  -[CNContactGridCell _createViewsIfNeeded]
  -[CNContactGridCell animationBlockForPreparingToShowActions]
  -[CNContactGridCell completionBlockForHidingActions]
  -[CNContactGridCell _updateActionsMask]
  -[CNContactGridCell maximumActionsWidth]
  -[CNContactGridCell actionsClippingView]
  -[CNContactGridCell setActionsClippingView:]


CNUIContactsAuthorizationController : NSObject
 @property  CNUIContactsAuthorizationStore *store
 @property  CNUICoreContactsAuthorizationModel *model
 @property  NSArray *bundleIdentifiersOfAppsWithContactsAccessInfo
 @property  BOOL foundAppsWithContactsAccessInfo
 @property  <CNUIContactsAuthorizationControllerDelegate> *delegate

  // class methods
  +[CNUIContactsAuthorizationController authorizationPaneFooterLabel]
  +[CNUIContactsAuthorizationController authorizationPaneHeaderLabel]
  +[CNUIContactsAuthorizationController authorizationPaneContactsAppLabel]
  +[CNUIContactsAuthorizationController validAuthorizationValues]
  +[CNUIContactsAuthorizationController validAuthorizationLabelsForValues]

  // instance methods
  -[CNUIContactsAuthorizationController setModel:]
  -[CNUIContactsAuthorizationController model]
  -[CNUIContactsAuthorizationController store]
  -[CNUIContactsAuthorizationController setDelegate:]
  -[CNUIContactsAuthorizationController delegate]
  -[CNUIContactsAuthorizationController .cxx_destruct]
  -[CNUIContactsAuthorizationController initWithBundleIdentifier:]
  -[CNUIContactsAuthorizationController init]
  -[CNUIContactsAuthorizationController createModel]
  -[CNUIContactsAuthorizationController lazilyLoadIconsForRemoteItems]
  -[CNUIContactsAuthorizationController saveModel]
  -[CNUIContactsAuthorizationController foundAppsWithContactsAccessInfo]
  -[CNUIContactsAuthorizationController bundleIdentifiersOfAppsWithContactsAccessInfo]
  -[CNUIContactsAuthorizationController authorizationLevelOfAppWithBundleIdentifier:]
  -[CNUIContactsAuthorizationController nameOfAppWithBundleIdentifier:]
  -[CNUIContactsAuthorizationController iconOfAppWithBundleIdentifier:]
  -[CNUIContactsAuthorizationController setAuthorizationLevel:ofAppWithBundleIdentifier:]


CNPhotoPickerPhotoFacesProviderItem : CNPhotoPickerProviderItem
  // instance methods
  -[CNPhotoPickerPhotoFacesProviderItem imageType]
  -[CNPhotoPickerPhotoFacesProviderItem allowsVariants]
  -[CNPhotoPickerPhotoFacesProviderItem allowsMoveAndScale]


CNPhotoPickerPhotoFacesProvider : NSObject <CNPhotoPickerProvider>
 @property  CNVisualIdentity *visualIdentity
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPhotoPickerPhotoFacesProvider log]

  // instance methods
  -[CNPhotoPickerPhotoFacesProvider identifier]
  -[CNPhotoPickerPhotoFacesProvider .cxx_destruct]
  -[CNPhotoPickerPhotoFacesProvider setIdentifier:]
  -[CNPhotoPickerPhotoFacesProvider visualIdentity]
  -[CNPhotoPickerPhotoFacesProvider initWithVisualIdentity:]
  -[CNPhotoPickerPhotoFacesProvider loadItemsForSize:scale:RTL:renderingQueue:callbackQueue:itemDelegate:]
  -[CNPhotoPickerPhotoFacesProvider getItemsFromPhotoLibraryWithItemDelegate:]
  -[CNPhotoPickerPhotoFacesProvider cropRectForAsset:face:]


CNSharingProfileOnboardingFlowManager : NSObject <CNSharingProfileOnboardingPhotoSelectionViewControllerDelegate, CNSharingProfileOnboardingAudienceControllerDelegate, CNPhotoPickerVariantListControllerDelegate, CNSharingProfileOnboardingVariantViewControllerDelegate, CNAvatarEditingManagerDelegate, CNSharingProfileOnboardingPosePickerControllerDelegate>
 @property  BOOL shouldAnimateNavTransitions
 @property  BOOL isRunning
 @property  UINavigationController *navigationController
 @property  CNContact *contact
 @property  <AVTAvatarRecord> *avatarRecord
 @property  CNSharingProfileAvatarItemProviderConfiguration *avatarItemProviderConfiguration
 @property  BOOL didPersistToMeCard
 @property  CNSharingProfileOnboardingPhotoSelectionViewController *photoSelectionController
 @property  CNSharingProfileOnboardingPosePickerController *posePickerController
 @property  CNSharingProfileOnboardingVariantViewController *variantController
 @property  <CNSharingProfileOnboardingAudienceController> *audienceViewController
 @property  CNSharingProfileOnboardingPhotoSelectionResult *photoSelectionResult
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  CNPhotoPickerProviderItem *selectedVariantItem
 @property  CNAvatarEditingManager *avatarEditingManager
 @property  CNSharingProfileLogger *logger
 @property  <CNSharingProfileOnboardingFlowManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNSharingProfileOnboardingFlowManager descriptorForRequiredKeys]

  // instance methods
  -[CNSharingProfileOnboardingFlowManager setLogger:]
  -[CNSharingProfileOnboardingFlowManager logger]
  -[CNSharingProfileOnboardingFlowManager navigationController]
  -[CNSharingProfileOnboardingFlowManager contact]
  -[CNSharingProfileOnboardingFlowManager setIsRunning:]
  -[CNSharingProfileOnboardingFlowManager setDelegate:]
  -[CNSharingProfileOnboardingFlowManager delegate]
  -[CNSharingProfileOnboardingFlowManager isRunning]
  -[CNSharingProfileOnboardingFlowManager .cxx_destruct]
  -[CNSharingProfileOnboardingFlowManager setNavigationController:]
  -[CNSharingProfileOnboardingFlowManager setContact:]
  -[CNSharingProfileOnboardingFlowManager avatarRecord]
  -[CNSharingProfileOnboardingFlowManager setAvatarRecord:]
  -[CNSharingProfileOnboardingFlowManager variantsManager]
  -[CNSharingProfileOnboardingFlowManager setVariantsManager:]
  -[CNSharingProfileOnboardingFlowManager avatarItemProviderConfiguration]
  -[CNSharingProfileOnboardingFlowManager setAvatarItemProviderConfiguration:]
  -[CNSharingProfileOnboardingFlowManager avatarEditingManager:didFinishWithProviderItem:]
  -[CNSharingProfileOnboardingFlowManager avatarEditingManager]
  -[CNSharingProfileOnboardingFlowManager setAvatarEditingManager:]
  -[CNSharingProfileOnboardingFlowManager audienceControllerDidTapSetupLater:]
  -[CNSharingProfileOnboardingFlowManager photoSelectionViewControllerDidTapSetupLater:]
  -[CNSharingProfileOnboardingFlowManager photoSelectionViewControllerDidFinishWithResult:]
  -[CNSharingProfileOnboardingFlowManager audienceController:didFinishWithContact:sharingAudience:]
  -[CNSharingProfileOnboardingFlowManager onboardingVariantControllerDidTapContinue:]
  -[CNSharingProfileOnboardingFlowManager onboardingVariantControllerDidTapBack:]
  -[CNSharingProfileOnboardingFlowManager onboardingVariantControllerDidTapPose:]
  -[CNSharingProfileOnboardingFlowManager onboardingVariantControllerDidTapSetupLater:]
  -[CNSharingProfileOnboardingFlowManager posePickerControllerDidSelectSetupLater:]
  -[CNSharingProfileOnboardingFlowManager posePickerControllerDidSelectBack:]
  -[CNSharingProfileOnboardingFlowManager posePickerController:didFinishWithProviderItem:]
  -[CNSharingProfileOnboardingFlowManager initWithNavigationController:contact:avatarRecord:avatarItemProviderConfiguration:]
  -[CNSharingProfileOnboardingFlowManager initWithNavigationController:contact:avatarRecord:avatarItemProviderConfiguration:logger:]
  -[CNSharingProfileOnboardingFlowManager startFlow]
  -[CNSharingProfileOnboardingFlowManager prepareVariantsControllerForResult:]
  -[CNSharingProfileOnboardingFlowManager providerItemForPhotoResult:]
  -[CNSharingProfileOnboardingFlowManager presentMeCardPersistanceAlertWithCompletionBlock:]
  -[CNSharingProfileOnboardingFlowManager imageTypeForAvatarType:]
  -[CNSharingProfileOnboardingFlowManager saveCurrentInfoToMeCard]
  -[CNSharingProfileOnboardingFlowManager presentNameAndAudienceControllerForContact:]
  -[CNSharingProfileOnboardingFlowManager presentAnimojiPoseCapture]
  -[CNSharingProfileOnboardingFlowManager notifyDelegateOfSetupLaterSelected]
  -[CNSharingProfileOnboardingFlowManager presentMeCardAlertForResult:]
  -[CNSharingProfileOnboardingFlowManager shouldAnimateNavTransitions]
  -[CNSharingProfileOnboardingFlowManager setShouldAnimateNavTransitions:]
  -[CNSharingProfileOnboardingFlowManager didPersistToMeCard]
  -[CNSharingProfileOnboardingFlowManager setDidPersistToMeCard:]
  -[CNSharingProfileOnboardingFlowManager photoSelectionController]
  -[CNSharingProfileOnboardingFlowManager setPhotoSelectionController:]
  -[CNSharingProfileOnboardingFlowManager posePickerController]
  -[CNSharingProfileOnboardingFlowManager setPosePickerController:]
  -[CNSharingProfileOnboardingFlowManager variantController]
  -[CNSharingProfileOnboardingFlowManager setVariantController:]
  -[CNSharingProfileOnboardingFlowManager audienceViewController]
  -[CNSharingProfileOnboardingFlowManager setAudienceViewController:]
  -[CNSharingProfileOnboardingFlowManager photoSelectionResult]
  -[CNSharingProfileOnboardingFlowManager setPhotoSelectionResult:]
  -[CNSharingProfileOnboardingFlowManager selectedVariantItem]
  -[CNSharingProfileOnboardingFlowManager setSelectedVariantItem:]


CNPhotoPickerActionsViewController : UIViewController <CNPhotoPickerActionsDelegate, UIAdaptivePresentationControllerDelegate>
 @property  UIStackView *buttonsView
 @property  UIView *imageContainerView
 @property  UIView *transitionContainerView
 @property  CAShapeLayer *clippingLayer
 @property  CNPhotoPickerActionButton *editButton
 @property  CNPhotoPickerActionButton *duplicateButton
 @property  CNPhotoPickerActionButton *deleteButton
 @property  CNPhotoPickerActionsModel *actionsModel
 @property  <CNPhotoPickerActionsViewControllerLayout> *currentLayout
 @property  <CNPhotoPickerActionsViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPhotoPickerActionsViewController log]

  // instance methods
  -[CNPhotoPickerActionsViewController presentationControllerDidDismiss:]
  -[CNPhotoPickerActionsViewController currentLayout]
  -[CNPhotoPickerActionsViewController setDelegate:]
  -[CNPhotoPickerActionsViewController delegate]
  -[CNPhotoPickerActionsViewController setCurrentLayout:]
  -[CNPhotoPickerActionsViewController setEditButton:]
  -[CNPhotoPickerActionsViewController .cxx_destruct]
  -[CNPhotoPickerActionsViewController deleteButton]
  -[CNPhotoPickerActionsViewController editButton]
  -[CNPhotoPickerActionsViewController viewDidLoad]
  -[CNPhotoPickerActionsViewController transitionContainerView]
  -[CNPhotoPickerActionsViewController viewDidLayoutSubviews]
  -[CNPhotoPickerActionsViewController setTransitionContainerView:]
  -[CNPhotoPickerActionsViewController setDeleteButton:]
  -[CNPhotoPickerActionsViewController clippingLayer]
  -[CNPhotoPickerActionsViewController setClippingLayer:]
  -[CNPhotoPickerActionsViewController didTapDone]
  -[CNPhotoPickerActionsViewController imageContainerView]
  -[CNPhotoPickerActionsViewController setImageContainerView:]
  -[CNPhotoPickerActionsViewController actionsModel:didAssignToContact:atIndexPath:]
  -[CNPhotoPickerActionsViewController actionsModel:didEdit:atIndexPath:]
  -[CNPhotoPickerActionsViewController actionsModel:didDuplicate:atIndexPath:completionBlock:]
  -[CNPhotoPickerActionsViewController actionsModel:didDelete:atIndexPath:withSourceView:]
  -[CNPhotoPickerActionsViewController initWithActionsModel:]
  -[CNPhotoPickerActionsViewController layoutViewFromModel:]
  -[CNPhotoPickerActionsViewController updateButtonsFromModel:]
  -[CNPhotoPickerActionsViewController applyLayout:]
  -[CNPhotoPickerActionsViewController presentDeleteConfirmationWithSourceView:withCompletion:]
  -[CNPhotoPickerActionsViewController updateActionsModelWithProviderItem:]
  -[CNPhotoPickerActionsViewController duplicateScaleDuration]
  -[CNPhotoPickerActionsViewController duplicateScaleDelay]
  -[CNPhotoPickerActionsViewController deleteMoveInDuration]
  -[CNPhotoPickerActionsViewController deleteMoveInDelay]
  -[CNPhotoPickerActionsViewController performDeleteTransitionToItem:]
  -[CNPhotoPickerActionsViewController performDuplicateTransitionToItem:fromView:completionBlock:]
  -[CNPhotoPickerActionsViewController actionsModel]
  -[CNPhotoPickerActionsViewController setActionsModel:]
  -[CNPhotoPickerActionsViewController buttonsView]
  -[CNPhotoPickerActionsViewController setButtonsView:]
  -[CNPhotoPickerActionsViewController duplicateButton]
  -[CNPhotoPickerActionsViewController setDuplicateButton:]


CNReadonlyPolicy : CNPolicy
  // instance methods
  -[CNReadonlyPolicy isReadonly]


CNCardDowntimeWhitelistGroup : CNCardPropertyGroup
  // instance methods
  -[CNCardDowntimeWhitelistGroup displayItems]
  -[CNCardDowntimeWhitelistGroup modified]
  -[CNCardDowntimeWhitelistGroup editingItems]
  -[CNCardDowntimeWhitelistGroup isMultiValue]
  -[CNCardDowntimeWhitelistGroup policyForItem:]


CNStarkActionsController : UIViewController <CNContactQuickActionViewContainer, CNContactQuickActionsControllerDelegate, CNStarkActionViewDelegate, UINavigationControllerDelegate>
 @property  CNContact *contact
 @property  CNContactQuickActionsController *quickActionsController
 @property  UIViewController *disambiguationViewController
 @property  <UINavigationControllerDelegate> *phoneNavigationControllerDelegate
 @property  CNStarkActionView *messageActionView
 @property  CNStarkActionView *callActionView
 @property  CNStarkActionView *directionsActionView
 @property  double willTransitionToBoundsWidth
 @property  NSArray *layoutConstraints
 @property  UITraitCollection *traitCollection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNStarkActionsController descriptorForRequiredKeys]

  // instance methods
  -[CNStarkActionsController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNStarkActionsController updateViewConstraints]
  -[CNStarkActionsController contact]
  -[CNStarkActionsController .cxx_destruct]
  -[CNStarkActionsController viewDidLoad]
  -[CNStarkActionsController initWithContact:]
  -[CNStarkActionsController navigationController:willShowViewController:animated:]
  -[CNStarkActionsController traitCollectionDidChange:]
  -[CNStarkActionsController resetLayoutConstraints]
  -[CNStarkActionsController setupLayoutConstraints]
  -[CNStarkActionsController layoutConstraints]
  -[CNStarkActionsController setLayoutConstraints:]
  -[CNStarkActionsController actionViewTapped:]
  -[CNStarkActionsController setupViews]
  -[CNStarkActionsController updateViews]
  -[CNStarkActionsController viewForActionType:]
  -[CNStarkActionsController contactQuickActionsController:presentDisambiguationViewController:forActionType:]
  -[CNStarkActionsController contactQuickActionsController:dismissDisambiguationViewController:forActionType:]
  -[CNStarkActionsController addForwardingDelegate]
  -[CNStarkActionsController forwardDelegateForNavigationController:willShowViewController:animated:]
  -[CNStarkActionsController removeForwardingDelegate]
  -[CNStarkActionsController quickActionsController]
  -[CNStarkActionsController disambiguationViewController]
  -[CNStarkActionsController setDisambiguationViewController:]
  -[CNStarkActionsController phoneNavigationControllerDelegate]
  -[CNStarkActionsController setPhoneNavigationControllerDelegate:]
  -[CNStarkActionsController messageActionView]
  -[CNStarkActionsController callActionView]
  -[CNStarkActionsController directionsActionView]
  -[CNStarkActionsController willTransitionToBoundsWidth]
  -[CNStarkActionsController setWillTransitionToBoundsWidth:]


CNBadgingAvatarView : UIView
 @property  CNAvatarViewController *avatarViewController
 @property  UIImage *badgeImage
 @property  CNBadgingAvatarBadgeStyleSettings *badgeStyleSettings
 @property  UIImageView *badgeImageView
 @property  <CNCancelable> *likenessBadgeRendererToken
 @property  CNAvatarAccessoryView *mediaContextBadge
 @property  UIImageView *mediaContextBadgeView
 @property  BOOL isMarkedForSyndication
 @property  BOOL isDoNotDisturb

  // instance methods
  -[CNBadgingAvatarView dealloc]
  -[CNBadgingAvatarView .cxx_destruct]
  -[CNBadgingAvatarView schedulerProvider]
  -[CNBadgingAvatarView layoutSubviews]
  -[CNBadgingAvatarView currentLikenessScope]
  -[CNBadgingAvatarView imageRenderer]
  -[CNBadgingAvatarView avatarViewController]
  -[CNBadgingAvatarView setAvatarViewController:]
  -[CNBadgingAvatarView setIsMarkedForSyndication:]
  -[CNBadgingAvatarView setMediaContextBadge:]
  -[CNBadgingAvatarView isMarkedForSyndication]
  -[CNBadgingAvatarView mediaContextBadge]
  -[CNBadgingAvatarView setBadgeStyleSettings:]
  -[CNBadgingAvatarView updateBadgeTintColor]
  -[CNBadgingAvatarView updateBadgeCropStyle]
  -[CNBadgingAvatarView updateBadgeImageViewBackgroundColor]
  -[CNBadgingAvatarView updateBadgeImageViewContentMode]
  -[CNBadgingAvatarView updateBadgeImageViewPosition]
  -[CNBadgingAvatarView setBadgeImage:]
  -[CNBadgingAvatarView badgeImage]
  -[CNBadgingAvatarView badgeStyleSettings]
  -[CNBadgingAvatarView mediaContextBadgeView]
  -[CNBadgingAvatarView setMediaContextBadgeView:]
  -[CNBadgingAvatarView badgeImageView]
  -[CNBadgingAvatarView setBadgeImageView:]
  -[CNBadgingAvatarView setIsDoNotDisturb:]
  -[CNBadgingAvatarView isDoNotDisturb]
  -[CNBadgingAvatarView initWithAvatarViewController:]
  -[CNBadgingAvatarView updateBadgeImageViewFrame]
  -[CNBadgingAvatarView setImage:forAccessoryViewType:]
  -[CNBadgingAvatarView renderMediaContextBadgeImage]
  -[CNBadgingAvatarView renderLikenessBadge:]
  -[CNBadgingAvatarView likenessBadgeRendererToken]
  -[CNBadgingAvatarView setLikenessBadgeRendererToken:]


CNBadgingAvatarViewController : NSObject <CNUIObjectViewControllerDelegate, CNUIObjectViewController>
 @property  UIView *containerView
 @property  CNBadgingAvatarView *badgingAvatarView
 @property  CNAvatarViewController *avatarViewController
 @property  CNAvatarAccessoryView *mediaContextBadge
 @property  BOOL isMarkedForSyndication
 @property  BOOL isDoNotDisturb
 @property  NSArray *contacts
 @property  UIImage *badgeImage
 @property  CNBadgingAvatarBadgeStyleSettings *badgeStyleSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *view
 @property  <CNUIObjectViewControllerDelegate> *objectViewControllerDelegate

  // instance methods
  -[CNBadgingAvatarViewController initWithSettings:]
  -[CNBadgingAvatarViewController descriptorForRequiredKeys]
  -[CNBadgingAvatarViewController setContacts:]
  -[CNBadgingAvatarViewController view]
  -[CNBadgingAvatarViewController .cxx_destruct]
  -[CNBadgingAvatarViewController contacts]
  -[CNBadgingAvatarViewController setContainerView:]
  -[CNBadgingAvatarViewController containerView]
  -[CNBadgingAvatarViewController hostingViewControllerForController:]
  -[CNBadgingAvatarViewController init]
  -[CNBadgingAvatarViewController avatarViewController]
  -[CNBadgingAvatarViewController setAvatarViewController:]
  -[CNBadgingAvatarViewController setIsMarkedForSyndication:]
  -[CNBadgingAvatarViewController setMediaContextBadge:]
  -[CNBadgingAvatarViewController isMarkedForSyndication]
  -[CNBadgingAvatarViewController mediaContextBadge]
  -[CNBadgingAvatarViewController setBadgeStyleSettings:]
  -[CNBadgingAvatarViewController setBadgeImage:]
  -[CNBadgingAvatarViewController badgeImage]
  -[CNBadgingAvatarViewController badgeStyleSettings]
  -[CNBadgingAvatarViewController setIsDoNotDisturb:]
  -[CNBadgingAvatarViewController isDoNotDisturb]
  -[CNBadgingAvatarViewController objectViewControllerDelegate]
  -[CNBadgingAvatarViewController setObjectViewControllerDelegate:]
  -[CNBadgingAvatarViewController setupContainerViewIfNeeded]
  -[CNBadgingAvatarViewController badgingAvatarView]
  -[CNBadgingAvatarViewController setBadgingAvatarView:]


CNMeCardSharingContactNameProvider : NSObject <CNMeCardSharingNameProvider>
 @property  CNContact *contact
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNMeCardSharingContactNameProvider descriptorForRequiredKeys]

  // instance methods
  -[CNMeCardSharingContactNameProvider middleName]
  -[CNMeCardSharingContactNameProvider familyName]
  -[CNMeCardSharingContactNameProvider contact]
  -[CNMeCardSharingContactNameProvider givenName]
  -[CNMeCardSharingContactNameProvider nickname]
  -[CNMeCardSharingContactNameProvider .cxx_destruct]
  -[CNMeCardSharingContactNameProvider initWithContact:]


CNSiriContactContextProvider : NSObject <AFContextProvider>
 @property  CNContact *contact
 @property  CNContactStore *store
 @property  BOOL isEnabled

  // class methods
  +[CNSiriContactContextProvider descriptorForRequiredKeys]

  // instance methods
  -[CNSiriContactContextProvider contact]
  -[CNSiriContactContextProvider store]
  -[CNSiriContactContextProvider allowContextProvider:]
  -[CNSiriContactContextProvider setStore:]
  -[CNSiriContactContextProvider dealloc]
  -[CNSiriContactContextProvider .cxx_destruct]
  -[CNSiriContactContextProvider setEnabled:]
  -[CNSiriContactContextProvider defaultContextManager]
  -[CNSiriContactContextProvider getCurrentContext]
  -[CNSiriContactContextProvider setContact:]
  -[CNSiriContactContextProvider setIsEnabled:]
  -[CNSiriContactContextProvider isEnabled]
  -[CNSiriContactContextProvider _removeContextProviderOnMainThread]
  -[CNSiriContactContextProvider initWithContact:store:]


CNStarkHeaderPlatterView : UIView
 @property  UILabel *label
 @property  UIImageView *accessory
 @property  NSString *labelText
 @property  UIImage *accessoryImage

  // instance methods
  -[CNStarkHeaderPlatterView accessory]
  -[CNStarkHeaderPlatterView didUpdateFocusInContext:withAnimationCoordinator:]
  -[CNStarkHeaderPlatterView setAccessory:]
  -[CNStarkHeaderPlatterView setLabelText:]
  -[CNStarkHeaderPlatterView labelText]
  -[CNStarkHeaderPlatterView setLabel:]
  -[CNStarkHeaderPlatterView canBecomeFocused]
  -[CNStarkHeaderPlatterView .cxx_destruct]
  -[CNStarkHeaderPlatterView label]
  -[CNStarkHeaderPlatterView accessoryImage]
  -[CNStarkHeaderPlatterView initWithLabelText:accessoryImage:]
  -[CNStarkHeaderPlatterView _updateForFocusedState:]
  -[CNStarkHeaderPlatterView setAccessoryImage:]


CNMeCardSharingAvatarViewController : UIViewController
 @property  BOOL hasImage
 @property  UIView *avatarContainerView
 @property  CAShapeLayer *circularLayer
 @property  UIImageView *imageView
 @property  UILabel *addPhotoLabel
 @property  <CNMeCardSharingAvatarProvider> *avatarProvider
 @property  <CNAvatarImageProvider> *fallbackImageProvider
 @property  CNAvatarViewController *avatarViewController
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  <CNMeCardSharingAvatarViewControllerDelegate> *delegate

  // instance methods
  -[CNMeCardSharingAvatarViewController setDelegate:]
  -[CNMeCardSharingAvatarViewController setImageView:]
  -[CNMeCardSharingAvatarViewController delegate]
  -[CNMeCardSharingAvatarViewController viewWillLayoutSubviews]
  -[CNMeCardSharingAvatarViewController .cxx_destruct]
  -[CNMeCardSharingAvatarViewController viewDidLoad]
  -[CNMeCardSharingAvatarViewController loadView]
  -[CNMeCardSharingAvatarViewController reload]
  -[CNMeCardSharingAvatarViewController tapGestureRecognizer]
  -[CNMeCardSharingAvatarViewController setTapGestureRecognizer:]
  -[CNMeCardSharingAvatarViewController imageView]
  -[CNMeCardSharingAvatarViewController hasImage]
  -[CNMeCardSharingAvatarViewController avatarViewController]
  -[CNMeCardSharingAvatarViewController setAvatarViewController:]
  -[CNMeCardSharingAvatarViewController avatarProvider]
  -[CNMeCardSharingAvatarViewController setAvatarProvider:]
  -[CNMeCardSharingAvatarViewController initWithAvatarProvider:]
  -[CNMeCardSharingAvatarViewController updateWithAvatarProvider:]
  -[CNMeCardSharingAvatarViewController didTapAvatarView:]
  -[CNMeCardSharingAvatarViewController updateForChangedImageAnimated:]
  -[CNMeCardSharingAvatarViewController setHasImage:]
  -[CNMeCardSharingAvatarViewController avatarContainerView]
  -[CNMeCardSharingAvatarViewController setAvatarContainerView:]
  -[CNMeCardSharingAvatarViewController circularLayer]
  -[CNMeCardSharingAvatarViewController setCircularLayer:]
  -[CNMeCardSharingAvatarViewController addPhotoLabel]
  -[CNMeCardSharingAvatarViewController setAddPhotoLabel:]
  -[CNMeCardSharingAvatarViewController fallbackImageProvider]
  -[CNMeCardSharingAvatarViewController setFallbackImageProvider:]


CNSocialProfileServicePickerController : CNPickerController
  // class methods
  +[CNSocialProfileServicePickerController defaultServices]

  // instance methods
  -[CNSocialProfileServicePickerController initWithStyle:]
  -[CNSocialProfileServicePickerController titleForPickerItem:]
  -[CNSocialProfileServicePickerController titleForAddCustomItem]


CNUINavigationListStyleApplier : NSObject
 @property  <CNUINavigationListStyle> *navigationListStyle

  // instance methods
  -[CNUINavigationListStyleApplier .cxx_destruct]
  -[CNUINavigationListStyleApplier navigationListStyle]
  -[CNUINavigationListStyleApplier initWithNavigationListStyle:]
  -[CNUINavigationListStyleApplier applyNavigationListStyleToCell:]
  -[CNUINavigationListStyleApplier applyNavigationListStyleToDetailCell:]
  -[CNUINavigationListStyleApplier applyExpandedBackgroundNavigationListStyleToCell:]
  -[CNUINavigationListStyleApplier applyCollapsedBackgroundNavigationListStyleToCell:]


CNContactDowntimeView : UIView
 @property  UILabel *downtimeLabel
 @property  NSTextAttachment *imageAttachment
 @property  NSDictionary *ab_textAttributes
 @property  long long elements

  // class methods
  +[CNContactDowntimeView lockImageAttachment]

  // instance methods
  -[CNContactDowntimeView setElements:]
  -[CNContactDowntimeView elements]
  -[CNContactDowntimeView invalidateIntrinsicContentSize]
  -[CNContactDowntimeView .cxx_destruct]
  -[CNContactDowntimeView updateAttributedText]
  -[CNContactDowntimeView sizeThatFits:]
  -[CNContactDowntimeView intrinsicContentSize]
  -[CNContactDowntimeView initWithFrame:]
  -[CNContactDowntimeView ab_textAttributes]
  -[CNContactDowntimeView setAb_textAttributes:]
  -[CNContactDowntimeView downtimeLabel]
  -[CNContactDowntimeView imageAttachment]


CNGameCenterCell : CNLabeledCell
 @property  UILabel *gameCenterLabel
 @property  UIView *playerViewContainer
 @property  UIView *playerView
 @property  NSString *playerID
 @property  UIViewController *profileViewController
 @property  <CNPresenterDelegate> *presentingDelegate
 @property  BOOL showsGameCenterLabel

  // instance methods
  -[CNGameCenterCell presentingDelegate]
  -[CNGameCenterCell initWithStyle:reuseIdentifier:]
  -[CNGameCenterCell setPresentingDelegate:]
  -[CNGameCenterCell labelView]
  -[CNGameCenterCell .cxx_destruct]
  -[CNGameCenterCell setPlayerView:]
  -[CNGameCenterCell playerID]
  -[CNGameCenterCell playerView]
  -[CNGameCenterCell setPlayerID:]
  -[CNGameCenterCell setLabelTextAttributes:]
  -[CNGameCenterCell setCardGroupItem:]
  -[CNGameCenterCell variableConstraints]
  -[CNGameCenterCell performDefaultAction]
  -[CNGameCenterCell setupViews]
  -[CNGameCenterCell constantConstraintsForVerticalLayout]
  -[CNGameCenterCell constantConstraintsForHorizontalLayout]
  -[CNGameCenterCell variableConstraintsForHorizontalLayout]
  -[CNGameCenterCell dismissProfileViewController]
  -[CNGameCenterCell updateViewsWithCardGroupItem:]
  -[CNGameCenterCell presentPlayerProfile]
  -[CNGameCenterCell showsGameCenterLabel]
  -[CNGameCenterCell setShowsGameCenterLabel:]
  -[CNGameCenterCell gameCenterLabel]
  -[CNGameCenterCell playerViewContainer]
  -[CNGameCenterCell setPlayerViewContainer:]
  -[CNGameCenterCell profileViewController]
  -[CNGameCenterCell setProfileViewController:]


CNMeCardSharingPickerViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, CNMeCardSharingAvatarViewControllerDelegate, CNMeCardSharingEnabledDelegate, CNPhotoPickerViewControllerDelegate>
 @property  unsigned long meCardSharingStatus
 @property  CNContactStore *contactStore
 @property  CNContact *contact
 @property  BOOL shouldSetMeContact
 @property  CNMutableContact *draftContact
 @property  CNContactImage *draftContactImage
 @property  BOOL sharingEnabled
 @property  CNMeCardSharingHeaderViewController *headerViewController
 @property  <CNMeCardSharingAvatarProvider> *avatarProvider
 @property  CNMeCardSharingAvatarViewController *avatarViewController
 @property  CNMeCardSharingEnabledDataSource *enabledDataSource
 @property  CNMeCardSharingAudienceDataSource *sharingAudienceDataSource
 @property  CNMeCardSharingPickerLayoutAttributes *layoutAttributes
 @property  CNPhotoPickerViewController *photoPicker
 @property  NSArray *sectionDataSources
 @property  UIView *buttonTray
 @property  OBBoldTrayButton *confirmButton
 @property  OBLinkTrayButton *laterButton
 @property  UISwitch *shareSwitch
 @property  UITableView *tableView
 @property  unsigned long mode
 @property  <CNMeCardSharingPickerViewControllerDelegate> *delegate
 @property  NSString *sharedName
 @property  unsigned long selectedNameFormat
 @property  unsigned long selectedSharingAudience
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNMeCardSharingPickerViewController descriptorForRequiredKeys]

  // instance methods
  -[CNMeCardSharingPickerViewController setContactStore:]
  -[CNMeCardSharingPickerViewController tableView:cellForRowAtIndexPath:]
  -[CNMeCardSharingPickerViewController tableView:numberOfRowsInSection:]
  -[CNMeCardSharingPickerViewController numberOfSectionsInTableView:]
  -[CNMeCardSharingPickerViewController tableView:willSelectRowAtIndexPath:]
  -[CNMeCardSharingPickerViewController contact]
  -[CNMeCardSharingPickerViewController setDelegate:]
  -[CNMeCardSharingPickerViewController tableView:didSelectRowAtIndexPath:]
  -[CNMeCardSharingPickerViewController delegate]
  -[CNMeCardSharingPickerViewController viewWillLayoutSubviews]
  -[CNMeCardSharingPickerViewController tableView:titleForHeaderInSection:]
  -[CNMeCardSharingPickerViewController mode]
  -[CNMeCardSharingPickerViewController .cxx_destruct]
  -[CNMeCardSharingPickerViewController tableView]
  -[CNMeCardSharingPickerViewController viewDidLoad]
  -[CNMeCardSharingPickerViewController initWithContact:]
  -[CNMeCardSharingPickerViewController loadView]
  -[CNMeCardSharingPickerViewController setTableView:]
  -[CNMeCardSharingPickerViewController sharingEnabled]
  -[CNMeCardSharingPickerViewController layoutAttributes]
  -[CNMeCardSharingPickerViewController headerViewController]
  -[CNMeCardSharingPickerViewController setContact:]
  -[CNMeCardSharingPickerViewController contactStore]
  -[CNMeCardSharingPickerViewController setLayoutAttributes:]
  -[CNMeCardSharingPickerViewController tableView:titleForFooterInSection:]
  -[CNMeCardSharingPickerViewController photoPickerDidCancel:]
  -[CNMeCardSharingPickerViewController photoPicker:didUpdatePhotoForContact:withContactImage:]
  -[CNMeCardSharingPickerViewController avatarViewController]
  -[CNMeCardSharingPickerViewController setAvatarViewController:]
  -[CNMeCardSharingPickerViewController sharingEnabledDataSource:didChangeEnabledState:]
  -[CNMeCardSharingPickerViewController selectedSharingAudience]
  -[CNMeCardSharingPickerViewController saveDraftContact]
  -[CNMeCardSharingPickerViewController setHeaderViewController:]
  -[CNMeCardSharingPickerViewController avatarProvider]
  -[CNMeCardSharingPickerViewController enabledDataSource]
  -[CNMeCardSharingPickerViewController sharingAudienceDataSource]
  -[CNMeCardSharingPickerViewController photoPicker]
  -[CNMeCardSharingPickerViewController setPhotoPicker:]
  -[CNMeCardSharingPickerViewController sectionDataSources]
  -[CNMeCardSharingPickerViewController setSectionDataSources:]
  -[CNMeCardSharingPickerViewController shareSwitch]
  -[CNMeCardSharingPickerViewController setShareSwitch:]
  -[CNMeCardSharingPickerViewController setSharingEnabled:]
  -[CNMeCardSharingPickerViewController setAvatarProvider:]
  -[CNMeCardSharingPickerViewController setSharingAudienceDataSource:]
  -[CNMeCardSharingPickerViewController setMeCardSharingStatus:]
  -[CNMeCardSharingPickerViewController meCardSharingStatus]
  -[CNMeCardSharingPickerViewController avatarViewControllerWasTapped:]
  -[CNMeCardSharingPickerViewController confirmButton]
  -[CNMeCardSharingPickerViewController setConfirmButton:]
  -[CNMeCardSharingPickerViewController didTapDoneButton:]
  -[CNMeCardSharingPickerViewController didTapSetUpLaterButton:]
  -[CNMeCardSharingPickerViewController initWithContactStore:contact:nameProvider:sharingEnabled:selectedNameFormat:selectedSharingAudience:mode:]
  -[CNMeCardSharingPickerViewController sharedName]
  -[CNMeCardSharingPickerViewController selectedNameFormat]
  -[CNMeCardSharingPickerViewController shouldSetMeContact]
  -[CNMeCardSharingPickerViewController setShouldSetMeContact:]
  -[CNMeCardSharingPickerViewController draftContact]
  -[CNMeCardSharingPickerViewController setDraftContact:]
  -[CNMeCardSharingPickerViewController draftContactImage]
  -[CNMeCardSharingPickerViewController setDraftContactImage:]
  -[CNMeCardSharingPickerViewController setEnabledDataSource:]
  -[CNMeCardSharingPickerViewController buttonTray]
  -[CNMeCardSharingPickerViewController setButtonTray:]
  -[CNMeCardSharingPickerViewController laterButton]
  -[CNMeCardSharingPickerViewController setLaterButton:]


CNAddressComponentTextFieldCell : NUITableViewContainerCell
 @property  UITextField *textField
 @property  UIImageView *chevron
 @property  NSArray *textFields
 @property  BOOL showsChevron
 @property  NSDictionary *textAttributes

  // class methods
  +[CNAddressComponentTextFieldCell cellIdentifier]
  +[CNAddressComponentTextFieldCell containerViewClass]

  // instance methods
  -[CNAddressComponentTextFieldCell setTextField:]
  -[CNAddressComponentTextFieldCell initWithStyle:reuseIdentifier:]
  -[CNAddressComponentTextFieldCell textField]
  -[CNAddressComponentTextFieldCell textAttributes]
  -[CNAddressComponentTextFieldCell setTextAttributes:]
  -[CNAddressComponentTextFieldCell contentSizeCategoryDidChange:]
  -[CNAddressComponentTextFieldCell .cxx_destruct]
  -[CNAddressComponentTextFieldCell prepareForReuse]
  -[CNAddressComponentTextFieldCell textFields]
  -[CNAddressComponentTextFieldCell setChevron:]
  -[CNAddressComponentTextFieldCell chevron]
  -[CNAddressComponentTextFieldCell setupTextFields]
  -[CNAddressComponentTextFieldCell newTextField]
  -[CNAddressComponentTextFieldCell updateMargins]
  -[CNAddressComponentTextFieldCell setShowsChevron:]
  -[CNAddressComponentTextFieldCell showsChevron]


CNStarkContactAddressPropertyCell : CNPropertyPostalAddressCell <CNStarkActionViewDelegate>
 @property  CNStarkActionView *actionView
 @property  NSLayoutConstraint *labelViewFirstBaselineAnchorConstraint
 @property  NSLayoutConstraint *valueViewFirstBaselineAnchorConstraint
 @property  NSLayoutConstraint *contentViewBottomAnchorConstraint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNStarkContactAddressPropertyCell initWithStyle:reuseIdentifier:]
  -[CNStarkContactAddressPropertyCell didUpdateFocusInContext:withAnimationCoordinator:]
  -[CNStarkContactAddressPropertyCell .cxx_destruct]
  -[CNStarkContactAddressPropertyCell setSeparatorStyle:]
  -[CNStarkContactAddressPropertyCell actionView]
  -[CNStarkContactAddressPropertyCell variableConstraints]
  -[CNStarkContactAddressPropertyCell constantConstraints]
  -[CNStarkContactAddressPropertyCell performDefaultAction]
  -[CNStarkContactAddressPropertyCell contentViewBottomAnchorConstraint]
  -[CNStarkContactAddressPropertyCell setContentViewBottomAnchorConstraint:]
  -[CNStarkContactAddressPropertyCell _cnui_applyContactStyle]
  -[CNStarkContactAddressPropertyCell actionViewTapped:]
  -[CNStarkContactAddressPropertyCell supportsTintColorValue]
  -[CNStarkContactAddressPropertyCell shouldShowStar]
  -[CNStarkContactAddressPropertyCell updateTransportButtons]
  -[CNStarkContactAddressPropertyCell supportsValueColorUsesLabelColor]
  -[CNStarkContactAddressPropertyCell labelViewFirstBaselineAnchorConstraint]
  -[CNStarkContactAddressPropertyCell setLabelViewFirstBaselineAnchorConstraint:]
  -[CNStarkContactAddressPropertyCell valueViewFirstBaselineAnchorConstraint]
  -[CNStarkContactAddressPropertyCell setValueViewFirstBaselineAnchorConstraint:]


CNStarkContactNameView : UIView
 @property  CNContact *contact
 @property  UILabel *nameLabel
 @property  CNAvatarViewController *avatarViewController

  // instance methods
  -[CNStarkContactNameView contact]
  -[CNStarkContactNameView setupConstraints]
  -[CNStarkContactNameView .cxx_destruct]
  -[CNStarkContactNameView nameLabel]
  -[CNStarkContactNameView initWithName:]
  -[CNStarkContactNameView avatarViewController]
  -[CNStarkContactNameView setupNameLabel]
  -[CNStarkContactNameView setupAvatar]


CNUIDataCollectionSearchSession : NSObject
 @property  BOOL pendingResults
 @property  BOOL pendingSuggestionsResults

  // class methods
  +[CNUIDataCollectionSearchSession currentSession]
  +[CNUIDataCollectionSearchSession begin]
  +[CNUIDataCollectionSearchSession end]

  // instance methods
  -[CNUIDataCollectionSearchSession searchStringDidChange]
  -[CNUIDataCollectionSearchSession didFetchResultSuggested:]
  -[CNUIDataCollectionSearchSession didSelectResult:]
  -[CNUIDataCollectionSearchSession pendingResults]
  -[CNUIDataCollectionSearchSession setPendingResults:]
  -[CNUIDataCollectionSearchSession pendingSuggestionsResults]
  -[CNUIDataCollectionSearchSession setPendingSuggestionsResults:]


CNUIContactsEnvironment : NSObject
 @property  CNUISchedulerProvider *defaultSchedulerProvider
 @property  CNContactStore *contactStore
 @property  CNContactStore *inProcessContactStore
 @property  CNFavorites *inProcessFavorites
 @property  CNUIUserActivityManager *inProcessActivityManager
 @property  <CNUIPlaceholderProviderFactory> *placeholderProviderFactory
 @property  CNUIMeContactMonitor *meMonitor
 @property  <CNUIPRLikenessResolver> *cachingLikenessResolver
 @property  <CNUILikenessRendering> *cachingLikenessRenderer
 @property  <CNUILikenessRendering> *cachingMonogramRenderer
 @property  <CNUIUserActionDiscoveringEnvironment> *actionDiscoveringEnvironment
 @property  CNUIIDSAvailabilityProvider *idsAvailabilityProvider
 @property  <CNLSApplicationWorkspace> *applicationWorkspace
 @property  <CNCapabilities> *capabilities
 @property  <CNUIDefaultUserActionFetcher> *defaultUserActionFetcher
 @property  CNContactChangesNotifier *contactChangesNotifier
 @property  CNUICoreRecentsManager *recentsManager
 @property  CNUIExternalComponentsFactory *componentsFactory
 @property  ^{UCollator=} sortCollator
 @property  CNCollation *collation
 @property  CNHealthStoreManager *healthStoreManager
 @property  CNGeminiManager *geminiManager
 @property  CNContactsEnvironment *cnEnvironment
 @property  <CNUIApplicationLaunchCheckin> *launchCheckinRegistrar
 @property  BOOL runningInContactsAppOniPad

  // class methods
  +[CNUIContactsEnvironment currentEnvironment]
  +[CNUIContactsEnvironment makeCurrentEnvironment]

  // instance methods
  -[CNUIContactsEnvironment setIdsAvailabilityProvider:]
  -[CNUIContactsEnvironment setCachingLikenessResolver:]
  -[CNUIContactsEnvironment setContactStore:]
  -[CNUIContactsEnvironment actionDiscoveringEnvironment]
  -[CNUIContactsEnvironment nts_lazyCapabilities]
  -[CNUIContactsEnvironment setApplicationWorkspace:]
  -[CNUIContactsEnvironment nts_lazyRecentsManager]
  -[CNUIContactsEnvironment nts_makeCachingLikenessResolver]
  -[CNUIContactsEnvironment nts_lazyInProcessFavorites]
  -[CNUIContactsEnvironment nts_makeActionDiscoveringEnvironment]
  -[CNUIContactsEnvironment launchCheckinRegistrar]
  -[CNUIContactsEnvironment nts_lazySortCollator]
  -[CNUIContactsEnvironment sortCollator]
  -[CNUIContactsEnvironment setContactChangesNotifier:]
  -[CNUIContactsEnvironment nts_lazyInProcessContactStore]
  -[CNUIContactsEnvironment setRecentsManager:]
  -[CNUIContactsEnvironment setActionDiscoveringEnvironment:]
  -[CNUIContactsEnvironment nts_lazyCachingLikenessResolver]
  -[CNUIContactsEnvironment idsAvailabilityProvider]
  -[CNUIContactsEnvironment setGeminiManager:]
  -[CNUIContactsEnvironment setInProcessContactStore:]
  -[CNUIContactsEnvironment setPlaceholderProviderFactory:]
  -[CNUIContactsEnvironment setLaunchCheckinRegistrar:]
  -[CNUIContactsEnvironment setHealthStoreManager:]
  -[CNUIContactsEnvironment dealloc]
  -[CNUIContactsEnvironment placeholderProviderFactory]
  -[CNUIContactsEnvironment contactChangesNotifier]
  -[CNUIContactsEnvironment recentsManager]
  -[CNUIContactsEnvironment meMonitor]
  -[CNUIContactsEnvironment defaultSchedulerProvider]
  -[CNUIContactsEnvironment setInProcessFavorites:]
  -[CNUIContactsEnvironment setCollation:]
  -[CNUIContactsEnvironment .cxx_destruct]
  -[CNUIContactsEnvironment setDefaultSchedulerProvider:]
  -[CNUIContactsEnvironment nts_lazyDefaultSchedulerProvider]
  -[CNUIContactsEnvironment setSortCollator:]
  -[CNUIContactsEnvironment nts_lazyCachingLikenessRenderer]
  -[CNUIContactsEnvironment capabilities]
  -[CNUIContactsEnvironment inProcessContactStore]
  -[CNUIContactsEnvironment nts_lazyCachingMonogramRenderer]
  -[CNUIContactsEnvironment setCachingLikenessRenderer:]
  -[CNUIContactsEnvironment nts_lazyDefaultUserActionFetcher]
  -[CNUIContactsEnvironment geminiManager]
  -[CNUIContactsEnvironment cachingMonogramRenderer]
  -[CNUIContactsEnvironment cachingLikenessRenderer]
  -[CNUIContactsEnvironment setComponentsFactory:]
  -[CNUIContactsEnvironment inProcessActivityManager]
  -[CNUIContactsEnvironment nts_lazyApplicationWorkspace]
  -[CNUIContactsEnvironment inProcessFavorites]
  -[CNUIContactsEnvironment nts_lazyInProcessActivityManager]
  -[CNUIContactsEnvironment nts_lazyActionDiscoveringEnvironment]
  -[CNUIContactsEnvironment nts_lazyIDSAvailabilityProvider]
  -[CNUIContactsEnvironment componentsFactory]
  -[CNUIContactsEnvironment setCapabilities:]
  -[CNUIContactsEnvironment nts_makeContactChangesNotifier]
  -[CNUIContactsEnvironment defaultUserActionFetcher]
  -[CNUIContactsEnvironment nts_lazyContactChangesNotifier]
  -[CNUIContactsEnvironment nts_lazyPlaceholderProviderFactory]
  -[CNUIContactsEnvironment setInProcessActivityManager:]
  -[CNUIContactsEnvironment setCachingMonogramRenderer:]
  -[CNUIContactsEnvironment setMeMonitor:]
  -[CNUIContactsEnvironment applicationWorkspace]
  -[CNUIContactsEnvironment contactStore]
  -[CNUIContactsEnvironment collation]
  -[CNUIContactsEnvironment initWithContactsEnvironment:]
  -[CNUIContactsEnvironment setDefaultUserActionFetcher:]
  -[CNUIContactsEnvironment nts_lazyGeminiManager]
  -[CNUIContactsEnvironment runningInContactsAppOniPad]
  -[CNUIContactsEnvironment nts_lazyContactStore]
  -[CNUIContactsEnvironment nts_lazyHealthStoreManager]
  -[CNUIContactsEnvironment nts_lazyCollation]
  -[CNUIContactsEnvironment healthStoreManager]
  -[CNUIContactsEnvironment cnEnvironment]
  -[CNUIContactsEnvironment init]
  -[CNUIContactsEnvironment nts_lazyComponentsFactory]
  -[CNUIContactsEnvironment cachingLikenessResolver]
  -[CNUIContactsEnvironment nts_makeRecentsManager]


CNUIContactsEnvironmentServicesProvider : NSObject
  // class methods
  +[CNUIContactsEnvironmentServicesProvider capabilities]
  +[CNUIContactsEnvironmentServicesProvider suggestionsService]
  +[CNUIContactsEnvironmentServicesProvider defaultUserActionFetcher]
  +[CNUIContactsEnvironmentServicesProvider applicationWorkspace]
  +[CNUIContactsEnvironmentServicesProvider recentsManagerWithSchedulerProvider:]
  +[CNUIContactsEnvironmentServicesProvider idsIDQueryControllerWrapper]


CNContactEditAuthorizationManager : NSObject <CNUIEditAuthorizationControllerDelegate>
 @property  CNContact *contact
 @property  CNContactStore *contactStore
 @property  CNContainer *parentContainer
 @property  CNUIEditAuthorizationController *authorizationController
 @property  long long authorizationResult
 @property  @? authorizationResultBlock
 @property  BOOL ignoresParentalRestrictions
 @property  CNContactViewCache *contactViewCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactEditAuthorizationManager editAuthorizationController:authorizationDidFinishWithResult:]
  -[CNContactEditAuthorizationManager setContactStore:]
  -[CNContactEditAuthorizationManager contact]
  -[CNContactEditAuthorizationManager setAuthorizationController:]
  -[CNContactEditAuthorizationManager contactViewCache]
  -[CNContactEditAuthorizationManager .cxx_destruct]
  -[CNContactEditAuthorizationManager setIgnoresParentalRestrictions:]
  -[CNContactEditAuthorizationManager authorizationResultBlock]
  -[CNContactEditAuthorizationManager authorizationController]
  -[CNContactEditAuthorizationManager setAuthorizationResultBlock:]
  -[CNContactEditAuthorizationManager ignoresParentalRestrictions]
  -[CNContactEditAuthorizationManager setContact:]
  -[CNContactEditAuthorizationManager contactStore]
  -[CNContactEditAuthorizationManager authorizeForViewController:sender:animated:completionBlock:]
  -[CNContactEditAuthorizationManager setContactViewCache:]
  -[CNContactEditAuthorizationManager saveWasAuthorized]
  -[CNContactEditAuthorizationManager parentContainer]
  -[CNContactEditAuthorizationManager setParentContainer:]
  -[CNContactEditAuthorizationManager initWithContact:contactStore:]
  -[CNContactEditAuthorizationManager updateWithContact:]
  -[CNContactEditAuthorizationManager shouldPromptForPasscodeAuthorization]
  -[CNContactEditAuthorizationManager authorizationCheck]
  -[CNContactEditAuthorizationManager resetAuthorization]
  -[CNContactEditAuthorizationManager authorizationResult]
  -[CNContactEditAuthorizationManager setAuthorizationResult:]


CNMeCardSharingOnboardingAvatarCarouselCell : UICollectionViewCell
 @property  UIImageView *imageView
 @property  UILabel *label
 @property  NSUUID *displaySessionUUID
 @property  UIImage *image
 @property  NSString *title
 @property  double imageInsetPercentage

  // class methods
  +[CNMeCardSharingOnboardingAvatarCarouselCell cellIdentifier]

  // instance methods
  -[CNMeCardSharingOnboardingAvatarCarouselCell setImageView:]
  -[CNMeCardSharingOnboardingAvatarCarouselCell setLabel:]
  -[CNMeCardSharingOnboardingAvatarCarouselCell .cxx_destruct]
  -[CNMeCardSharingOnboardingAvatarCarouselCell layoutSubviews]
  -[CNMeCardSharingOnboardingAvatarCarouselCell title]
  -[CNMeCardSharingOnboardingAvatarCarouselCell image]
  -[CNMeCardSharingOnboardingAvatarCarouselCell label]
  -[CNMeCardSharingOnboardingAvatarCarouselCell initWithFrame:]
  -[CNMeCardSharingOnboardingAvatarCarouselCell setImage:]
  -[CNMeCardSharingOnboardingAvatarCarouselCell setTitle:]
  -[CNMeCardSharingOnboardingAvatarCarouselCell imageView]
  -[CNMeCardSharingOnboardingAvatarCarouselCell displaySessionUUID]
  -[CNMeCardSharingOnboardingAvatarCarouselCell setDisplaySessionUUID:]
  -[CNMeCardSharingOnboardingAvatarCarouselCell imageInsetPercentage]
  -[CNMeCardSharingOnboardingAvatarCarouselCell setImageInsetPercentage:]


CNPhotoPickerProviderAddItemsGroup : CNPhotoPickerProviderGroup
  // instance methods
  -[CNPhotoPickerProviderAddItemsGroup initWithProviders:environment:]


CNUICoreRemoteApplicationIconLoader : NSObject <CNUICoreRemoteApplicationIconFetching>
  // instance methods
  -[CNUICoreRemoteApplicationIconLoader iconOfApplictionWithBundleIdentifier:]


CNPhotoPickerAnimojiProviderItem : CNPhotoPickerProviderItem
 @property  NSData *_originalImageData
 @property  NSData *_generatedImageData
 @property  NSData *thumbnailImageData
 @property  UIImage *loadingPlaceholderImage
 @property  CNPhotoPickerColorVariant *backgroundColorVariant
 @property  CNAvatarStickerGeneratorProvider *stickerGeneratorProvider
 @property  AVTRenderingScope *renderingScope
 @property  AVTAvatarRecordImageProvider *imageProvider
 @property  <AVTAvatarRecord> *avatarRecord
 @property  AVTStickerConfiguration *poseConfiguration
 @property  {CGSize=dd} originalImageSize
 @property  {UIEdgeInsets=dddd} edgeInsets

  // class methods
  +[CNPhotoPickerAnimojiProviderItem log]

  // instance methods
  -[CNPhotoPickerAnimojiProviderItem setImageProvider:]
  -[CNPhotoPickerAnimojiProviderItem imageType]
  -[CNPhotoPickerAnimojiProviderItem setEdgeInsets:]
  -[CNPhotoPickerAnimojiProviderItem edgeInsets]
  -[CNPhotoPickerAnimojiProviderItem .cxx_destruct]
  -[CNPhotoPickerAnimojiProviderItem imageData]
  -[CNPhotoPickerAnimojiProviderItem imageProvider]
  -[CNPhotoPickerAnimojiProviderItem copyWithZone:]
  -[CNPhotoPickerAnimojiProviderItem variantIdentifier]
  -[CNPhotoPickerAnimojiProviderItem isEqual:]
  -[CNPhotoPickerAnimojiProviderItem avatarRecord]
  -[CNPhotoPickerAnimojiProviderItem setAvatarRecord:]
  -[CNPhotoPickerAnimojiProviderItem allowsVariants]
  -[CNPhotoPickerAnimojiProviderItem allowsMoveAndScale]
  -[CNPhotoPickerAnimojiProviderItem shouldShowCaption]
  -[CNPhotoPickerAnimojiProviderItem localizedVariantsTitle]
  -[CNPhotoPickerAnimojiProviderItem originalImageData]
  -[CNPhotoPickerAnimojiProviderItem generateAllImageDatasIfNeeded]
  -[CNPhotoPickerAnimojiProviderItem generateThumbnailImageDataIfNeeded]
  -[CNPhotoPickerAnimojiProviderItem applyVariantEffectToFullsizeImageWithCompletion:]
  -[CNPhotoPickerAnimojiProviderItem updateVisualIdentity:]
  -[CNPhotoPickerAnimojiProviderItem createVariantsItemsWithVariantsManager:]
  -[CNPhotoPickerAnimojiProviderItem contactImageForMetadataStore]
  -[CNPhotoPickerAnimojiProviderItem loadingPlaceholderImage]
  -[CNPhotoPickerAnimojiProviderItem setLoadingPlaceholderImage:]
  -[CNPhotoPickerAnimojiProviderItem poseConfiguration]
  -[CNPhotoPickerAnimojiProviderItem setPoseConfiguration:]
  -[CNPhotoPickerAnimojiProviderItem backgroundColorVariant]
  -[CNPhotoPickerAnimojiProviderItem setBackgroundColorVariant:]
  -[CNPhotoPickerAnimojiProviderItem renderingScope]
  -[CNPhotoPickerAnimojiProviderItem setRenderingScope:]
  -[CNPhotoPickerAnimojiProviderItem transformForMemojiMetadata]
  -[CNPhotoPickerAnimojiProviderItem initWithOriginalImageData:cropRect:backgroundColorVariant:]
  -[CNPhotoPickerAnimojiProviderItem initWithOriginalImageData:cropRect:]
  -[CNPhotoPickerAnimojiProviderItem initWithAvatarRecord:imageProvider:renderingScope:renderingQueue:callbackQueue:]
  -[CNPhotoPickerAnimojiProviderItem copyWithColor:]
  -[CNPhotoPickerAnimojiProviderItem copyWithPoseConfiguration:generatorProvider:]
  -[CNPhotoPickerAnimojiProviderItem renderDefaultAvatarImage]
  -[CNPhotoPickerAnimojiProviderItem renderAvatarWithPoseWithSize:]
  -[CNPhotoPickerAnimojiProviderItem renderAvatarWithBackgroundWithImageData:]
  -[CNPhotoPickerAnimojiProviderItem renderAvatarWithBackgroundWithImage:]
  -[CNPhotoPickerAnimojiProviderItem generateImageDataIfNeeded]
  -[CNPhotoPickerAnimojiProviderItem originalImageSize]
  -[CNPhotoPickerAnimojiProviderItem setOriginalImageSize:]
  -[CNPhotoPickerAnimojiProviderItem _originalImageData]
  -[CNPhotoPickerAnimojiProviderItem set_originalImageData:]
  -[CNPhotoPickerAnimojiProviderItem _generatedImageData]
  -[CNPhotoPickerAnimojiProviderItem set_generatedImageData:]
  -[CNPhotoPickerAnimojiProviderItem stickerGeneratorProvider]
  -[CNPhotoPickerAnimojiProviderItem setStickerGeneratorProvider:]


CNCombinedVisualIdentityEditorViewController : UIViewController <CNVisualIdentityAvatarStyleEditorViewControllerDelegate>
 @property  CNPhotoPickerDataSource *dataSource
 @property  UISegmentedControl *segmentedControl
 @property  CNVisualIdentityAvatarStyleEditorViewController *textEditor
 @property  CNVisualIdentityAvatarStyleEditorViewController *emojiEditor
 @property  CNVisualIdentityAvatarStyleEditorViewController *selectedEditor
 @property  <CNVisualIdentityItemEditorViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNCombinedVisualIdentityEditorViewController log]

  // instance methods
  -[CNCombinedVisualIdentityEditorViewController dataSource]
  -[CNCombinedVisualIdentityEditorViewController setDelegate:]
  -[CNCombinedVisualIdentityEditorViewController delegate]
  -[CNCombinedVisualIdentityEditorViewController .cxx_destruct]
  -[CNCombinedVisualIdentityEditorViewController viewDidLoad]
  -[CNCombinedVisualIdentityEditorViewController setDataSource:]
  -[CNCombinedVisualIdentityEditorViewController segmentedControl]
  -[CNCombinedVisualIdentityEditorViewController setSegmentedControl:]
  -[CNCombinedVisualIdentityEditorViewController didTapCancel]
  -[CNCombinedVisualIdentityEditorViewController didTapDone]
  -[CNCombinedVisualIdentityEditorViewController setupBarButtonItems]
  -[CNCombinedVisualIdentityEditorViewController setupSegmentedControl]
  -[CNCombinedVisualIdentityEditorViewController updatedProviderItem]
  -[CNCombinedVisualIdentityEditorViewController updateDoneButtonEnabledState]
  -[CNCombinedVisualIdentityEditorViewController _segmentedControlDidChange:]
  -[CNCombinedVisualIdentityEditorViewController avatarStyleEditor:didUpdateItem:]
  -[CNCombinedVisualIdentityEditorViewController initWithProviderItem:dataSource:]
  -[CNCombinedVisualIdentityEditorViewController _newStyleEditorWithItem:]
  -[CNCombinedVisualIdentityEditorViewController setupEditors]
  -[CNCombinedVisualIdentityEditorViewController _updateEditorsVisibility]
  -[CNCombinedVisualIdentityEditorViewController textEditor]
  -[CNCombinedVisualIdentityEditorViewController setTextEditor:]
  -[CNCombinedVisualIdentityEditorViewController emojiEditor]
  -[CNCombinedVisualIdentityEditorViewController setEmojiEditor:]
  -[CNCombinedVisualIdentityEditorViewController selectedEditor]
  -[CNCombinedVisualIdentityEditorViewController setSelectedEditor:]


CNContactCardFieldPickerPhotoCell : UITableViewCell
 @property  CNAvatarView *avatarView

  // instance methods
  -[CNContactCardFieldPickerPhotoCell avatarView]
  -[CNContactCardFieldPickerPhotoCell setSelected:animated:]
  -[CNContactCardFieldPickerPhotoCell .cxx_destruct]
  -[CNContactCardFieldPickerPhotoCell prepareForReuse]
  -[CNContactCardFieldPickerPhotoCell setAvatarView:]
  -[CNContactCardFieldPickerPhotoCell init]
  -[CNContactCardFieldPickerPhotoCell setConfiguration]
  -[CNContactCardFieldPickerPhotoCell prepareCellWithContact:]


CNGroupIdentity : NSObject <NSCopying>
 @property  NSData *groupPhoto
 @property  NSString *groupName
 @property  NSArray *contacts
 @property  long long numberOfContacts
 @property  NSString *identifier

  // instance methods
  -[CNGroupIdentity identifier]
  -[CNGroupIdentity setContacts:]
  -[CNGroupIdentity .cxx_destruct]
  -[CNGroupIdentity contacts]
  -[CNGroupIdentity groupName]
  -[CNGroupIdentity copyWithZone:]
  -[CNGroupIdentity mutableCopyWithZone:]
  -[CNGroupIdentity setGroupName:]
  -[CNGroupIdentity updateGroupName:]
  -[CNGroupIdentity initGroupWithName:photo:contacts:]
  -[CNGroupIdentity initGroupWithName:photo:contacts:identifier:]
  -[CNGroupIdentity numberOfContacts]
  -[CNGroupIdentity updateGroupPhoto:]
  -[CNGroupIdentity updateContacts:]
  -[CNGroupIdentity groupPhoto]
  -[CNGroupIdentity setGroupPhoto:]


CNUIAccountsFacade : NSObject
 @property  ACAccountStore *accountStore
 @property  CNUIAccountsFacadeRequestRunner *requestRunner

  // instance methods
  -[CNUIAccountsFacade accountStore]
  -[CNUIAccountsFacade .cxx_destruct]
  -[CNUIAccountsFacade init]
  -[CNUIAccountsFacade initWithAccountStore:requestRunner:]
  -[CNUIAccountsFacade fetchiCloudFamilyMembersWithCompletionHandler:]
  -[CNUIAccountsFacade requestRunner]


CNUIAccountsFacadeRequestRunner : NSObject
  // instance methods
  -[CNUIAccountsFacadeRequestRunner performRequest:withHandler:]


CNSharingProfileLogger : NSObject
 @property  NSObject<OS_os_log> *log

  // class methods
  +[CNSharingProfileLogger log]

  // instance methods
  -[CNSharingProfileLogger .cxx_destruct]
  -[CNSharingProfileLogger log]
  -[CNSharingProfileLogger setLog:]
  -[CNSharingProfileLogger init]
  -[CNSharingProfileLogger logOnboardingSavingMeCardImageToRecentsForIdentifier:]
  -[CNSharingProfileLogger logOnboardingSuccessSavingMeCardImageToRecents]
  -[CNSharingProfileLogger logOnboardingErrorSavingMeCardImageToRecentsWithDescription:]
  -[CNSharingProfileLogger logOnboardingSavingContact:]
  -[CNSharingProfileLogger logOnboardingAddingContact]
  -[CNSharingProfileLogger logOnboardingUpdatingContactWithIdentifier:]
  -[CNSharingProfileLogger logOnboardingErrorSavingContactWithDescription:]
  -[CNSharingProfileLogger logOnboardingSettingMeContact]
  -[CNSharingProfileLogger logOnboardingErrorSettingMeContactWithDescription:]
  -[CNSharingProfileLogger logOnboardingSuccessSavingContact]
  -[CNSharingProfileLogger logOnboardingAvatarCarouselErrorCreatingContactImageWithDescription:]
  -[CNSharingProfileLogger logOnboardingReturningSharingResultWithDescription:]
  -[CNSharingProfileLogger logOnboardingReturningDefaultMonogram]
  -[CNSharingProfileLogger logOnboardingReturningEmptyImage]
  -[CNSharingProfileLogger logOnboardingReturningNonAnimojiItem]
  -[CNSharingProfileLogger logSettingsSavingContact:]
  -[CNSharingProfileLogger logSettingsErrorSavingContactWithDescription:]
  -[CNSharingProfileLogger logSettingsSettingMeContact]
  -[CNSharingProfileLogger logSettingsErrorSettingMeContactWithDescription:]
  -[CNSharingProfileLogger logSettingsSuccessSavingContact]
  -[CNSharingProfileLogger logErrorGeneratingAvatarForPhotoPickerWithDescription:]
  -[CNSharingProfileLogger logSettingsReturningSharingResultWithDescription:]
  -[CNSharingProfileLogger logSettingsReturningDefaultMonogram]
  -[CNSharingProfileLogger logSettingsReturningEmptyImageForNoChange]
  -[CNSharingProfileLogger logSettingsReturningEmptyImage]


CNDatePickerContainerView : UIView
 @property  UIDatePicker *datePicker

  // instance methods
  -[CNDatePickerContainerView .cxx_destruct]
  -[CNDatePickerContainerView datePicker]
  -[CNDatePickerContainerView initWithDatePicker:]


CNStarkContactPropertyCell : CNPropertyPhoneNumberCell <CNStarkActionViewDelegate>
 @property  CNStarkActionView *actionView1
 @property  CNStarkActionView *actionView2
 @property  BOOL allowsFocus
 @property  NSLayoutConstraint *labelViewFirstBaselineAnchorConstraint
 @property  NSLayoutConstraint *valueViewFirstBaselineAnchorConstraint
 @property  NSLayoutConstraint *contentViewBottomAnchorConstraint
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNStarkContactPropertyCell minimumContentHeight]
  +[CNStarkContactPropertyCell contentViewBottomAnchorConstraintConstant]
  +[CNStarkContactPropertyCell wantsHorizontalLayout]
  +[CNStarkContactPropertyCell labelViewFirstBaselineAnchorConstraintConstant]
  +[CNStarkContactPropertyCell valueLabelFirstBaselineAnchorConstraintConstant]

  // instance methods
  -[CNStarkContactPropertyCell setContentInsets:]
  -[CNStarkContactPropertyCell initWithStyle:reuseIdentifier:]
  -[CNStarkContactPropertyCell contentInsets]
  -[CNStarkContactPropertyCell didUpdateFocusInContext:withAnimationCoordinator:]
  -[CNStarkContactPropertyCell canBecomeFocused]
  -[CNStarkContactPropertyCell .cxx_destruct]
  -[CNStarkContactPropertyCell setSeparatorStyle:]
  -[CNStarkContactPropertyCell setAllowsFocus:]
  -[CNStarkContactPropertyCell allowsFocus]
  -[CNStarkContactPropertyCell variableConstraints]
  -[CNStarkContactPropertyCell constantConstraints]
  -[CNStarkContactPropertyCell performDefaultAction]
  -[CNStarkContactPropertyCell contentViewBottomAnchorConstraint]
  -[CNStarkContactPropertyCell setContentViewBottomAnchorConstraint:]
  -[CNStarkContactPropertyCell _cnui_applyContactStyle]
  -[CNStarkContactPropertyCell actionView1]
  -[CNStarkContactPropertyCell actionView2]
  -[CNStarkContactPropertyCell actionViewTapped:]
  -[CNStarkContactPropertyCell supportsTintColorValue]
  -[CNStarkContactPropertyCell shouldShowStar]
  -[CNStarkContactPropertyCell updateTransportButtons]
  -[CNStarkContactPropertyCell allowsCellSelection]
  -[CNStarkContactPropertyCell supportsValueColorUsesLabelColor]
  -[CNStarkContactPropertyCell labelViewFirstBaselineAnchorConstraint]
  -[CNStarkContactPropertyCell setLabelViewFirstBaselineAnchorConstraint:]
  -[CNStarkContactPropertyCell valueViewFirstBaselineAnchorConstraint]
  -[CNStarkContactPropertyCell setValueViewFirstBaselineAnchorConstraint:]
  -[CNStarkContactPropertyCell transportTypeForActionType:]
  -[CNStarkContactPropertyCell performActionForMessage]


CNMeCardSharingOnboardingHeaderViewController : UIViewController
 @property  NSString *headerTitle
 @property  CNMeCardSharingOnboardingAvatarCarouselViewController *avatarCarouselController
 @property  unsigned long mode
 @property  CNMeCardSharingPickerLayoutAttributes *layoutAttributes
 @property  UILabel *headerLabel

  // class methods
  +[CNMeCardSharingOnboardingHeaderViewController heightForHeaderWithContainerSize:withTitle:layoutAttributes:hasAvatar:]

  // instance methods
  -[CNMeCardSharingOnboardingHeaderViewController headerTitle]
  -[CNMeCardSharingOnboardingHeaderViewController setHeaderTitle:]
  -[CNMeCardSharingOnboardingHeaderViewController viewWillLayoutSubviews]
  -[CNMeCardSharingOnboardingHeaderViewController mode]
  -[CNMeCardSharingOnboardingHeaderViewController .cxx_destruct]
  -[CNMeCardSharingOnboardingHeaderViewController viewDidLoad]
  -[CNMeCardSharingOnboardingHeaderViewController setMode:]
  -[CNMeCardSharingOnboardingHeaderViewController layoutAttributes]
  -[CNMeCardSharingOnboardingHeaderViewController setLayoutAttributes:]
  -[CNMeCardSharingOnboardingHeaderViewController initWithAvatarCarouselViewController:headerTitle:layoutAttributes:]
  -[CNMeCardSharingOnboardingHeaderViewController avatarCarouselController]
  -[CNMeCardSharingOnboardingHeaderViewController setAvatarCarouselController:]
  -[CNMeCardSharingOnboardingHeaderViewController headerLabel]
  -[CNMeCardSharingOnboardingHeaderViewController setHeaderLabel:]


CNPhotoPickerViewController : CNVisualIdentityPickerViewController
 @property  CNMutableContact *pendingEditContact
 @property  NSString *assignActionTitleOverride
 @property  <CNPhotoPickerViewControllerDelegate> *delegate

  // class methods
  +[CNPhotoPickerViewController canShowAvatarEditor]
  +[CNPhotoPickerViewController log]
  +[CNPhotoPickerViewController photoPickerForGameCenterWithContact:]
  +[CNPhotoPickerViewController navigationControllerForPicker:]

  // instance methods
  -[CNPhotoPickerViewController done:]
  -[CNPhotoPickerViewController cancel:]
  -[CNPhotoPickerViewController setDelegate:]
  -[CNPhotoPickerViewController contactViewCache]
  -[CNPhotoPickerViewController delegate]
  -[CNPhotoPickerViewController .cxx_destruct]
  -[CNPhotoPickerViewController initWithContact:style:configuration:]
  -[CNPhotoPickerViewController photoViewDidUpdate:]
  -[CNPhotoPickerViewController viewControllerForPhotoView:]
  -[CNPhotoPickerViewController photoView:didAcceptDropOfImageData:]
  -[CNPhotoPickerViewController pendingEditContact]
  -[CNPhotoPickerViewController setPendingEditContact:]
  -[CNPhotoPickerViewController updateHeaderViewAvatar]
  -[CNPhotoPickerViewController updatePendingEditContact]


CNContactSelectContainersAction : CNContactAction <CNContactContainerPickerViewControllerDelegate>
 @property  CNContactContainerPickerViewController *containerPicker
 @property  CNUIContainerContext *containerContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactSelectContainersAction .cxx_destruct]
  -[CNContactSelectContainersAction cleanupForDismissal]
  -[CNContactSelectContainersAction containerContext]
  -[CNContactSelectContainersAction containerPicker:shouldAllowDeselectionOfContainerWithIdentifier:]
  -[CNContactSelectContainersAction containerPicker:didFinishWithPickedContainers:]
  -[CNContactSelectContainersAction setContainerContext:]
  -[CNContactSelectContainersAction containerPicker]
  -[CNContactSelectContainersAction setContainerPicker:]
  -[CNContactSelectContainersAction performActionWithContainerContext:]


CNStarkContactDisplayViewController : CNContactContentDisplayViewController <CNPropertyBestIDSValueQueryDelegate>
 @property  CNPropertyBestIDSValueQuery *bestiMessageQuery
 @property  CNCardiMessageEmailGroup *iMessageEmailGroup
 @property  NSArray *activatedConstraints
 @property  CNStarkContactNameView *contactNameView

  // class methods
  +[CNStarkContactDisplayViewController tableViewStyle]

  // instance methods
  -[CNStarkContactDisplayViewController setupConstraints]
  -[CNStarkContactDisplayViewController tableView:contextMenuConfigurationForRowAtIndexPath:point:]
  -[CNStarkContactDisplayViewController viewWillLayoutSubviews]
  -[CNStarkContactDisplayViewController viewDidAppear:]
  -[CNStarkContactDisplayViewController dealloc]
  -[CNStarkContactDisplayViewController .cxx_destruct]
  -[CNStarkContactDisplayViewController viewDidLoad]
  -[CNStarkContactDisplayViewController viewWillAppear:]
  -[CNStarkContactDisplayViewController title]
  -[CNStarkContactDisplayViewController viewWillDisappear:]
  -[CNStarkContactDisplayViewController displayHeaderView]
  -[CNStarkContactDisplayViewController activatedConstraints]
  -[CNStarkContactDisplayViewController setActivatedConstraints:]
  -[CNStarkContactDisplayViewController updateFontColors]
  -[CNStarkContactDisplayViewController initWithContact:contactViewConfiguration:]
  -[CNStarkContactDisplayViewController loadContactViewControllerViews]
  -[CNStarkContactDisplayViewController shouldDisplayAvatarHeaderView]
  -[CNStarkContactDisplayViewController setupTableHeaderView]
  -[CNStarkContactDisplayViewController isScrollViewControllingHeaderResizeAnimation:]
  -[CNStarkContactDisplayViewController initializeTableViewsForHeaderHeight]
  -[CNStarkContactDisplayViewController applyContactStyle]
  -[CNStarkContactDisplayViewController queryComplete]
  -[CNStarkContactDisplayViewController isGeminiAvailable]
  -[CNStarkContactDisplayViewController hasTableViewHeaderFirstSection]
  -[CNStarkContactDisplayViewController _initiateBestiMessagePropertyQuery]
  -[CNStarkContactDisplayViewController bestiMessageQuery]
  -[CNStarkContactDisplayViewController setBestiMessageQuery:]
  -[CNStarkContactDisplayViewController iMessageEmailGroup]
  -[CNStarkContactDisplayViewController setIMessageEmailGroup:]
  -[CNStarkContactDisplayViewController contactNameView]
  -[CNStarkContactDisplayViewController setContactNameView:]


CNMeCardSharingSettingsNameCell : UITableViewCell
 @property  UITextField *textField

  // class methods
  +[CNMeCardSharingSettingsNameCell cellIdentifier]

  // instance methods
  -[CNMeCardSharingSettingsNameCell setTextField:]
  -[CNMeCardSharingSettingsNameCell textField]
  -[CNMeCardSharingSettingsNameCell .cxx_destruct]
  -[CNMeCardSharingSettingsNameCell prepareForReuse]
  -[CNMeCardSharingSettingsNameCell layoutSubviews]


CNContactListStyleDefautProvider : NSObject <CNContactListStyle>
 @property  UIColor *cellBackgroundColor
 @property  UIColor *cellBackgroundSelectedColor
 @property  UIColor *cellNameTextColor
 @property  UIColor *cellNameTextHighlightedColor
 @property  UIColor *cellNameTextHighlightedLightColor
 @property  UIColor *cellSearchResultTextColor
 @property  UIColor *cellSearchResultTextDisabledColor
 @property  UIColor *cellBlueSelectionSecondaryTextColor
 @property  UIColor *cellSearchBackgroundColor
 @property  UIFont *cellNameTextFont
 @property  UIFont *cellNameTextEmphasisedFont
 @property  BOOL cellIsOpaque
 @property  BOOL cellIsVibrant
 @property  UIColor *headerBackgroundColor
 @property  UIColor *headerIndexTextColor
 @property  UIColor *bannerTitleTextColor
 @property  UIColor *tableBackgroundColor
 @property  UIColor *tableBackgroundFilteredColor
 @property  UIColor *tableSectionIndexBackgroundColor
 @property  UIColor *tableSeparatorColor
 @property  unsigned long tableNoContactsAvailableStyle
 @property  long long tableSeparatorStyle
 @property  long long tableSeparatorOverlayBlendMode
 @property  BOOL tableIsOpaque
 @property  BOOL usesInsetPlatterStyle
 @property  UIColor *searchBarBackgroundColor
 @property  UIColor *searchBarTextColor
 @property  UIColor *searchBarTextDisabledColor
 @property  UIColor *searchBarPlaceholderTextColor
 @property  UIColor *searchBarPlaceholderTextDisabledColor
 @property  long long searchBarStyle
 @property  long long searchBarKeyboardAppearance
 @property  BOOL searchBarIsTranslucent
 @property  long long navigationBarStyle
 @property  BOOL navigationBarIsTranslucent

  // instance methods
  -[CNContactListStyleDefautProvider cellBackgroundColor]
  -[CNContactListStyleDefautProvider cellNameTextHighlightedColor]
  -[CNContactListStyleDefautProvider cellNameTextColor]
  -[CNContactListStyleDefautProvider searchBarStyle]
  -[CNContactListStyleDefautProvider cellBlueSelectionSecondaryTextColor]
  -[CNContactListStyleDefautProvider searchBarPlaceholderTextDisabledColor]
  -[CNContactListStyleDefautProvider searchBarIsTranslucent]
  -[CNContactListStyleDefautProvider tableBackgroundColor]
  -[CNContactListStyleDefautProvider cellSearchResultTextColor]
  -[CNContactListStyleDefautProvider usesInsetPlatterStyle]
  -[CNContactListStyleDefautProvider bannerTitleTextColor]
  -[CNContactListStyleDefautProvider headerBackgroundColor]
  -[CNContactListStyleDefautProvider tableBackgroundFilteredColor]
  -[CNContactListStyleDefautProvider tableNoContactsAvailableStyle]
  -[CNContactListStyleDefautProvider searchBarPlaceholderTextColor]
  -[CNContactListStyleDefautProvider tableSeparatorColor]
  -[CNContactListStyleDefautProvider searchBarTextColor]
  -[CNContactListStyleDefautProvider cellNameTextFont]
  -[CNContactListStyleDefautProvider cellSearchResultTextDisabledColor]
  -[CNContactListStyleDefautProvider searchBarTextDisabledColor]
  -[CNContactListStyleDefautProvider searchBarBackgroundColor]
  -[CNContactListStyleDefautProvider cellIsVibrant]
  -[CNContactListStyleDefautProvider searchBarKeyboardAppearance]
  -[CNContactListStyleDefautProvider tableIsOpaque]
  -[CNContactListStyleDefautProvider cellSearchBackgroundColor]
  -[CNContactListStyleDefautProvider cellIsOpaque]
  -[CNContactListStyleDefautProvider tableSectionIndexBackgroundColor]
  -[CNContactListStyleDefautProvider tableSeparatorOverlayBlendMode]
  -[CNContactListStyleDefautProvider headerIndexTextColor]
  -[CNContactListStyleDefautProvider navigationBarStyle]
  -[CNContactListStyleDefautProvider cellNameTextEmphasisedFont]
  -[CNContactListStyleDefautProvider cellBackgroundSelectedColor]
  -[CNContactListStyleDefautProvider navigationBarIsTranslucent]
  -[CNContactListStyleDefautProvider tableSeparatorStyle]
  -[CNContactListStyleDefautProvider cellNameTextHighlightedLightColor]


CNContactListStyleWrapperProvider : CNContactListStyleDefautProvider
 @property  CNContactStyle *contactStyle

  // instance methods
  -[CNContactListStyleWrapperProvider contactStyle]
  -[CNContactListStyleWrapperProvider cellBackgroundColor]
  -[CNContactListStyleWrapperProvider cellNameTextHighlightedColor]
  -[CNContactListStyleWrapperProvider cellNameTextColor]
  -[CNContactListStyleWrapperProvider searchBarStyle]
  -[CNContactListStyleWrapperProvider cellBlueSelectionSecondaryTextColor]
  -[CNContactListStyleWrapperProvider searchBarPlaceholderTextDisabledColor]
  -[CNContactListStyleWrapperProvider searchBarIsTranslucent]
  -[CNContactListStyleWrapperProvider .cxx_destruct]
  -[CNContactListStyleWrapperProvider tableBackgroundColor]
  -[CNContactListStyleWrapperProvider cellSearchResultTextColor]
  -[CNContactListStyleWrapperProvider usesInsetPlatterStyle]
  -[CNContactListStyleWrapperProvider bannerTitleTextColor]
  -[CNContactListStyleWrapperProvider headerBackgroundColor]
  -[CNContactListStyleWrapperProvider tableBackgroundFilteredColor]
  -[CNContactListStyleWrapperProvider tableNoContactsAvailableStyle]
  -[CNContactListStyleWrapperProvider searchBarPlaceholderTextColor]
  -[CNContactListStyleWrapperProvider tableSeparatorColor]
  -[CNContactListStyleWrapperProvider searchBarTextColor]
  -[CNContactListStyleWrapperProvider cellNameTextFont]
  -[CNContactListStyleWrapperProvider cellSearchResultTextDisabledColor]
  -[CNContactListStyleWrapperProvider searchBarTextDisabledColor]
  -[CNContactListStyleWrapperProvider searchBarBackgroundColor]
  -[CNContactListStyleWrapperProvider cellIsVibrant]
  -[CNContactListStyleWrapperProvider searchBarKeyboardAppearance]
  -[CNContactListStyleWrapperProvider tableIsOpaque]
  -[CNContactListStyleWrapperProvider initWithContactStyle:]
  -[CNContactListStyleWrapperProvider cellSearchBackgroundColor]
  -[CNContactListStyleWrapperProvider cellIsOpaque]
  -[CNContactListStyleWrapperProvider tableSectionIndexBackgroundColor]
  -[CNContactListStyleWrapperProvider tableSeparatorOverlayBlendMode]
  -[CNContactListStyleWrapperProvider headerIndexTextColor]
  -[CNContactListStyleWrapperProvider navigationBarStyle]
  -[CNContactListStyleWrapperProvider cellNameTextEmphasisedFont]
  -[CNContactListStyleWrapperProvider cellBackgroundSelectedColor]
  -[CNContactListStyleWrapperProvider navigationBarIsTranslucent]
  -[CNContactListStyleWrapperProvider tableSeparatorStyle]


CNContactListStyleProvider : NSObject
  // class methods
  +[CNContactListStyleProvider contactListStyle]
  +[CNContactListStyleProvider contactListStyleWithContactStyle:]


CNContactListDuplicatesBannerView : UIView
 @property  UILabel *titleLabel
 @property  long long duplicatesCount
 @property  <CNContactListDuplicatesBannerViewDelegate> *delegate

  // instance methods
  -[CNContactListDuplicatesBannerView setTitleLabel:]
  -[CNContactListDuplicatesBannerView setDelegate:]
  -[CNContactListDuplicatesBannerView delegate]
  -[CNContactListDuplicatesBannerView .cxx_destruct]
  -[CNContactListDuplicatesBannerView countStringForLocalizedStringKey:count:]
  -[CNContactListDuplicatesBannerView titleLabel]
  -[CNContactListDuplicatesBannerView duplicatesCount]
  -[CNContactListDuplicatesBannerView setDuplicatesCount:]
  -[CNContactListDuplicatesBannerView setupSubviews]
  -[CNContactListDuplicatesBannerView didTapViewDuplicates]
  -[CNContactListDuplicatesBannerView didTapDismiss]
  -[CNContactListDuplicatesBannerView initWithDuplicatesCount:]


CNContactShareWithFamilyAction : CNContactAction
  // instance methods
  -[CNContactShareWithFamilyAction isDestructive]
  -[CNContactShareWithFamilyAction title]
  -[CNContactShareWithFamilyAction canPerformAction]
  -[CNContactShareWithFamilyAction performActionWithSender:]
  -[CNContactShareWithFamilyAction familySharedContainerExists]


CNContactTargetActionWrapper : NSObject
 @property  id target
 @property  SEL action

  // instance methods
  -[CNContactTargetActionWrapper initWithTarget:action:]
  -[CNContactTargetActionWrapper target]
  -[CNContactTargetActionWrapper .cxx_destruct]
  -[CNContactTargetActionWrapper action]
  -[CNContactTargetActionWrapper performActionWithSender:]


CNAccountsAndGroupsSection : NSObject
 @property  @? titleProvider
 @property  NSString *title
 @property  NSArray *items
 @property  NSString *identifier
 @property  BOOL isAllContactsGlobalSection

  // instance methods
  -[CNAccountsAndGroupsSection identifier]
  -[CNAccountsAndGroupsSection setItems:]
  -[CNAccountsAndGroupsSection .cxx_destruct]
  -[CNAccountsAndGroupsSection items]
  -[CNAccountsAndGroupsSection title]
  -[CNAccountsAndGroupsSection setIdentifier:]
  -[CNAccountsAndGroupsSection setTitle:]
  -[CNAccountsAndGroupsSection isEqual:]
  -[CNAccountsAndGroupsSection isAllContactsGlobalSection]
  -[CNAccountsAndGroupsSection setIsAllContactsGlobalSection:]
  -[CNAccountsAndGroupsSection titleProvider]
  -[CNAccountsAndGroupsSection setTitleProvider:]


CNAccountsAndGroupsDataSource : NSObject
 @property  CNContactStore *store
 @property  NSArray *sections
 @property  CNAccountsAndGroupsItem *rootItem
 @property  CNAccountsAndGroupsItem *currentlyEditingGroupItem
 @property  CNUIGroupsAndContainersSaveManager *groupsAndContainersSaveManager
 @property  CNManagedConfiguration *managedConfiguration
 @property  NSString *currentlyEditingGroupIdentifier
 @property  BOOL hidesSearchableSources
 @property  BOOL onlyShowsGroupsInSections
 @property  NSSet *targetAccountExternalIdentifiers
 @property  NSSet *sourceAccountExternalIdentifiers
 @property  CNContactStoreFilter *filter
 @property  CNContactStoreFilter *serverFilter
 @property  CNAccountsAndGroupsItem *showAllSectionItem
 @property  BOOL trivial

  // instance methods
  -[CNAccountsAndGroupsDataSource hasChanges]
  -[CNAccountsAndGroupsDataSource managedConfiguration]
  -[CNAccountsAndGroupsDataSource setHidesSearchableSources:]
  -[CNAccountsAndGroupsDataSource setFilter:]
  -[CNAccountsAndGroupsDataSource setManagedConfiguration:]
  -[CNAccountsAndGroupsDataSource groupsAndContainersSaveManager]
  -[CNAccountsAndGroupsDataSource setGroupsAndContainersSaveManager:]
  -[CNAccountsAndGroupsDataSource hidesSearchableSources]
  -[CNAccountsAndGroupsDataSource setOnlyShowsGroupsInSections:]
  -[CNAccountsAndGroupsDataSource setFilterForItem:]
  -[CNAccountsAndGroupsDataSource filter]
  -[CNAccountsAndGroupsDataSource sourceAccountExternalIdentifiers]
  -[CNAccountsAndGroupsDataSource store]
  -[CNAccountsAndGroupsDataSource targetAccountExternalIdentifiers]
  -[CNAccountsAndGroupsDataSource initWithStore:]
  -[CNAccountsAndGroupsDataSource setStore:]
  -[CNAccountsAndGroupsDataSource setTargetAccountExternalIdentifiers:]
  -[CNAccountsAndGroupsDataSource _reloadSections]
  -[CNAccountsAndGroupsDataSource .cxx_destruct]
  -[CNAccountsAndGroupsDataSource sectionForIdentifier:]
  -[CNAccountsAndGroupsDataSource currentlyEditingGroupItem]
  -[CNAccountsAndGroupsDataSource serverFilter]
  -[CNAccountsAndGroupsDataSource groupIdentifierForGroupItem:]
  -[CNAccountsAndGroupsDataSource rootItem]
  -[CNAccountsAndGroupsDataSource updateRootItemSelection]
  -[CNAccountsAndGroupsDataSource sectionIdentifierForItem:]
  -[CNAccountsAndGroupsDataSource setSections:]
  -[CNAccountsAndGroupsDataSource showAllSectionItem]
  -[CNAccountsAndGroupsDataSource shouldShowAccount:]
  -[CNAccountsAndGroupsDataSource _applyFilter]
  -[CNAccountsAndGroupsDataSource allContactsForMainItem:keysToFetch:]
  -[CNAccountsAndGroupsDataSource isTrivial]
  -[CNAccountsAndGroupsDataSource setServerFilterForItem:]
  -[CNAccountsAndGroupsDataSource removeServerFilter]
  -[CNAccountsAndGroupsDataSource onlyShowsGroupsInSections]
  -[CNAccountsAndGroupsDataSource containerIdentifierForItem:]
  -[CNAccountsAndGroupsDataSource isFilterShowingItem:]
  -[CNAccountsAndGroupsDataSource reload]
  -[CNAccountsAndGroupsDataSource contactCountForItem:]
  -[CNAccountsAndGroupsDataSource sections]
  -[CNAccountsAndGroupsDataSource currentlyEditingGroupIdentifier]
  -[CNAccountsAndGroupsDataSource setSourceAccountExternalIdentifiers:]
  -[CNAccountsAndGroupsDataSource allContactsForItem:keysToFetch:]
  -[CNAccountsAndGroupsDataSource setCurrentlyEditingGroupIdentifier:]
  -[CNAccountsAndGroupsDataSource contactCountForMainItem:]
  -[CNAccountsAndGroupsDataSource setRootItem:]
  -[CNAccountsAndGroupsDataSource multiSelectFilter]
  -[CNAccountsAndGroupsDataSource setCurrentlyEditingGroupItem:]


CNUIFamilyMemberControllerShared : NSObject
  // class methods
  +[CNUIFamilyMemberControllerShared formattedNameOfFamilyMember:]
  +[CNUIFamilyMemberControllerShared contactViewControllerForContact:fromStore:]
  +[CNUIFamilyMemberControllerShared contactMatchingFamilyMemberContactItem:fetchedFromContactStore:schedulerProvider:]
  +[CNUIFamilyMemberControllerShared addContactsOptionsSheetForFamilyMember:delegate:]
  +[CNUIFamilyMemberControllerShared addContactsToWhitelistOptionsSheetForFamilyMember:offerChooseFromFamilyMemberContactsOption:delegate:]
  +[CNUIFamilyMemberControllerShared actionTitleAddNewContactForFamilyMember:]
  +[CNUIFamilyMemberControllerShared actionTitleChooseFromContactsForFamilyMember:]
  +[CNUIFamilyMemberControllerShared contactsUIFetchStatusFromContactsUICoreFetchStatus:]


CNMeCardSharingOnboardingEditViewController : CNMeCardSharingOnboardingViewController <UITableViewDelegate, UITableViewDataSource, UITextFieldDelegate, CNMeCardSharingOnboardingAvatarCarouselViewControllerDelegate, CNPhotoPickerViewControllerDelegate, CNAvatarEditingManagerDelegate, CNPhotoPickerVariantListControllerDelegate>
 @property  BOOL delegateDoesRespondToOnboardingResultSelector
 @property  CNContactStore *contactStore
 @property  CNContact *contact
 @property  <AVTAvatarRecord> *avatarRecord
 @property  CNMeCardSharingPickerLayoutAttributes *layoutAttributes
 @property  long long nameOrder
 @property  UITextField *givenNameField
 @property  UITextField *familyNameField
 @property  BOOL shouldSetAsMeContact
 @property  CNMutableContact *editingContact
 @property  CNMutableContact *avatarCarouselEditingContact
 @property  NSString *editingGivenName
 @property  NSString *editingFamilyName
 @property  <CNMeCardSharingNameProvider> *nameProvider
 @property  CNMeCardSharingOnboardingAvatarCarouselViewController *avatarCarouselViewController
 @property  CNMeCardSharingOnboardingHeaderViewController *headerViewController
 @property  CNPhotoPickerViewController *photoPickerViewController
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  CNAvatarEditingManager *posePicker
 @property  CNSharingProfileLogger *logger
 @property  <CNMeCardSharingOnboardingEditViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNMeCardSharingOnboardingEditViewController descriptorForRequiredKeys]
  +[CNMeCardSharingOnboardingEditViewController headerText]

  // instance methods
  -[CNMeCardSharingOnboardingEditViewController logger]
  -[CNMeCardSharingOnboardingEditViewController tableView:heightForRowAtIndexPath:]
  -[CNMeCardSharingOnboardingEditViewController tableView:cellForRowAtIndexPath:]
  -[CNMeCardSharingOnboardingEditViewController tableView:numberOfRowsInSection:]
  -[CNMeCardSharingOnboardingEditViewController contact]
  -[CNMeCardSharingOnboardingEditViewController textFieldShouldReturn:]
  -[CNMeCardSharingOnboardingEditViewController setDelegate:]
  -[CNMeCardSharingOnboardingEditViewController contentSizeCategoryDidChange:]
  -[CNMeCardSharingOnboardingEditViewController tableView:didSelectRowAtIndexPath:]
  -[CNMeCardSharingOnboardingEditViewController delegate]
  -[CNMeCardSharingOnboardingEditViewController tableView:titleForHeaderInSection:]
  -[CNMeCardSharingOnboardingEditViewController dealloc]
  -[CNMeCardSharingOnboardingEditViewController nameOrder]
  -[CNMeCardSharingOnboardingEditViewController .cxx_destruct]
  -[CNMeCardSharingOnboardingEditViewController viewDidLoad]
  -[CNMeCardSharingOnboardingEditViewController viewWillAppear:]
  -[CNMeCardSharingOnboardingEditViewController layoutAttributes]
  -[CNMeCardSharingOnboardingEditViewController keyboardWillShow:]
  -[CNMeCardSharingOnboardingEditViewController keyboardWillHide:]
  -[CNMeCardSharingOnboardingEditViewController textFieldDidEndEditing:]
  -[CNMeCardSharingOnboardingEditViewController headerViewController]
  -[CNMeCardSharingOnboardingEditViewController contactStore]
  -[CNMeCardSharingOnboardingEditViewController setLayoutAttributes:]
  -[CNMeCardSharingOnboardingEditViewController photoPickerDidCancel:]
  -[CNMeCardSharingOnboardingEditViewController photoPicker:didUpdatePhotoForContact:withContactImage:]
  -[CNMeCardSharingOnboardingEditViewController avatarRecord]
  -[CNMeCardSharingOnboardingEditViewController setAvatarRecord:]
  -[CNMeCardSharingOnboardingEditViewController givenNameDidChange:]
  -[CNMeCardSharingOnboardingEditViewController familyNameDidChange:]
  -[CNMeCardSharingOnboardingEditViewController presentErrorAlertForEmptyPhotoIfNeededWithCompletion:]
  -[CNMeCardSharingOnboardingEditViewController adjustInsetsForKeyboardOverlap:]
  -[CNMeCardSharingOnboardingEditViewController textFieldForIndex:]
  -[CNMeCardSharingOnboardingEditViewController promptForSavingToMeCard]
  -[CNMeCardSharingOnboardingEditViewController saveDraftContact]
  -[CNMeCardSharingOnboardingEditViewController updateContact:withImagePropertiesFromContact:]
  -[CNMeCardSharingOnboardingEditViewController editingContact]
  -[CNMeCardSharingOnboardingEditViewController setEditingContact:]
  -[CNMeCardSharingOnboardingEditViewController editingGivenName]
  -[CNMeCardSharingOnboardingEditViewController setEditingGivenName:]
  -[CNMeCardSharingOnboardingEditViewController editingFamilyName]
  -[CNMeCardSharingOnboardingEditViewController setEditingFamilyName:]
  -[CNMeCardSharingOnboardingEditViewController setHeaderViewController:]
  -[CNMeCardSharingOnboardingEditViewController nameProvider]
  -[CNMeCardSharingOnboardingEditViewController setNameOrder:]
  -[CNMeCardSharingOnboardingEditViewController givenNameField]
  -[CNMeCardSharingOnboardingEditViewController setGivenNameField:]
  -[CNMeCardSharingOnboardingEditViewController familyNameField]
  -[CNMeCardSharingOnboardingEditViewController setFamilyNameField:]
  -[CNMeCardSharingOnboardingEditViewController shouldSetAsMeContact]
  -[CNMeCardSharingOnboardingEditViewController setShouldSetAsMeContact:]
  -[CNMeCardSharingOnboardingEditViewController photoPickerVariantListController:didSelectProviderItem:]
  -[CNMeCardSharingOnboardingEditViewController photoPickerVariantListControllerDidCancel:]
  -[CNMeCardSharingOnboardingEditViewController variantsManager]
  -[CNMeCardSharingOnboardingEditViewController setVariantsManager:]
  -[CNMeCardSharingOnboardingEditViewController handleConfirmButtonTapped]
  -[CNMeCardSharingOnboardingEditViewController avatarEditingManager:didFinishWithProviderItem:]
  -[CNMeCardSharingOnboardingEditViewController confirmButtonTitle]
  -[CNMeCardSharingOnboardingEditViewController photoPickerViewController]
  -[CNMeCardSharingOnboardingEditViewController setPhotoPickerViewController:]
  -[CNMeCardSharingOnboardingEditViewController avatarCarouselViewControllerDidTapPhotoPickerCell:]
  -[CNMeCardSharingOnboardingEditViewController avatarCarouselViewControllerDidUpdateCenterMostItem:]
  -[CNMeCardSharingOnboardingEditViewController initWithContactStore:contact:nameProvider:avatarRecord:]
  -[CNMeCardSharingOnboardingEditViewController updateAvatarCarouselContactName]
  -[CNMeCardSharingOnboardingEditViewController finishOnboardingWithProviderItem:]
  -[CNMeCardSharingOnboardingEditViewController contactImageSourceForType:]
  -[CNMeCardSharingOnboardingEditViewController finishOnboardingWithDidSaveToMeContact:]
  -[CNMeCardSharingOnboardingEditViewController notifyDelegateWithContactImage:didSaveToMeContact:]
  -[CNMeCardSharingOnboardingEditViewController showAvatarPosePickerFromItem:]
  -[CNMeCardSharingOnboardingEditViewController presentPhotoPickerVariantListForItem:FromViewController:]
  -[CNMeCardSharingOnboardingEditViewController delegateDoesRespondToOnboardingResultSelector]
  -[CNMeCardSharingOnboardingEditViewController setDelegateDoesRespondToOnboardingResultSelector:]
  -[CNMeCardSharingOnboardingEditViewController avatarCarouselEditingContact]
  -[CNMeCardSharingOnboardingEditViewController setAvatarCarouselEditingContact:]
  -[CNMeCardSharingOnboardingEditViewController setNameProvider:]
  -[CNMeCardSharingOnboardingEditViewController avatarCarouselViewController]
  -[CNMeCardSharingOnboardingEditViewController setAvatarCarouselViewController:]
  -[CNMeCardSharingOnboardingEditViewController posePicker]
  -[CNMeCardSharingOnboardingEditViewController setPosePicker:]


CNUIContactStoreSaveExecutor : NSObject <CNUIContactSaveExecutor>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNUIContactStoreSaveExecutor executeSaveWithConfiguration:saveDelegate:]
  -[CNUIContactStoreSaveExecutor saveShadowContactForSaveConfiguration:]
  -[CNUIContactStoreSaveExecutor validatedContactForSaveConfiguration:]
  -[CNUIContactStoreSaveExecutor handleContainerContextForSaveConfiguration:contactToSave:saveDelegate:issuedRequestIdentifiers:additionalLinkedContacts:]
  -[CNUIContactStoreSaveExecutor handleGroupContextForSaveConfiguration:contactToSave:issuedRequestIdentifiers:saveDelegate:]
  -[CNUIContactStoreSaveExecutor saveLinkedContactsWithSaveConfiguration:contactToSave:additionalLinkedContacts:issuedRequestIdentifiers:saveDelegate:]
  -[CNUIContactStoreSaveExecutor performSaveForMutableContact:group:container:saveConfiguration:issuedRequestIdentifiers:]


CNUIFeatureFlags : NSObject

CNContactContentViewControllerConfiguration : NSObject
 @property  BOOL isOutOfProcess
 @property  NSArray *prohibitedPropertyKeys
 @property  CNContactStore *contactStore
 @property  CNContactFormatter *contactFormatter
 @property  NSArray *displayedProperties
 @property  BOOL allowsEditing
 @property  BOOL alwaysEditing
 @property  BOOL allowsActions
 @property  BOOL allowsPropertyActions
 @property  BOOL allowsCardActions
 @property  BOOL allowsConferencing
 @property  BOOL allowsSharing
 @property  BOOL allowsAddToFavorites
 @property  BOOL allowsSendMessage
 @property  BOOL allowsContactBlocking
 @property  BOOL allowsAddingToAddressBook
 @property  BOOL shouldShowLinkedContacts
 @property  BOOL allowsSettingLinkedContactsAsPreferred
 @property  BOOL allowsDeletion
 @property  BOOL allowsActionsModel
 @property  BOOL allowsDisplayModePickerActions
 @property  BOOL allowsEditPhoto
 @property  BOOL ignoresParentalRestrictions
 @property  BOOL editingProposedInformation
 @property  BOOL hideCardActions
 @property  BOOL isMailVIP
 @property  BOOL showContactBlockingFirst
 @property  NSString *alternateName
 @property  NSString *message
 @property  NSString *warningMessage
 @property  NSString *importantMessage
 @property  NSAttributedString *verifiedInfoMessage
 @property  NSString *primaryProperty
 @property  UIView *personHeaderView
 @property  UIViewController *personHeaderViewController
 @property  NSArray *highlightedProperties
 @property  BOOL highlightedPropertyImportant
 @property  CNPolicy *policy
 @property  NSDictionary *linkedPoliciesByContactIdentifier
 @property  BOOL allowsEditInApp
 @property  BOOL shouldDrawNavigationBar
 @property  NSString *initialPrompt
 @property  BOOL layoutPositionallyAfterNavBar

  // instance methods
  -[CNContactContentViewControllerConfiguration isOutOfProcess]
  -[CNContactContentViewControllerConfiguration setContactStore:]
  -[CNContactContentViewControllerConfiguration setMessage:]
  -[CNContactContentViewControllerConfiguration setAllowsEditing:]
  -[CNContactContentViewControllerConfiguration allowsEditing]
  -[CNContactContentViewControllerConfiguration allowsContactBlocking]
  -[CNContactContentViewControllerConfiguration setProhibitedPropertyKeys:]
  -[CNContactContentViewControllerConfiguration prohibitedPropertyKeys]
  -[CNContactContentViewControllerConfiguration allowsDeletion]
  -[CNContactContentViewControllerConfiguration .cxx_destruct]
  -[CNContactContentViewControllerConfiguration setIgnoresParentalRestrictions:]
  -[CNContactContentViewControllerConfiguration setAllowsContactBlocking:]
  -[CNContactContentViewControllerConfiguration ignoresParentalRestrictions]
  -[CNContactContentViewControllerConfiguration setPolicy:]
  -[CNContactContentViewControllerConfiguration contactStore]
  -[CNContactContentViewControllerConfiguration contactFormatter]
  -[CNContactContentViewControllerConfiguration message]
  -[CNContactContentViewControllerConfiguration setContactFormatter:]
  -[CNContactContentViewControllerConfiguration policy]
  -[CNContactContentViewControllerConfiguration init]
  -[CNContactContentViewControllerConfiguration allowsSharing]
  -[CNContactContentViewControllerConfiguration setAllowsSharing:]
  -[CNContactContentViewControllerConfiguration setAllowsActions:]
  -[CNContactContentViewControllerConfiguration alternateName]
  -[CNContactContentViewControllerConfiguration setAlternateName:]
  -[CNContactContentViewControllerConfiguration setDisplayedProperties:]
  -[CNContactContentViewControllerConfiguration displayedProperties]
  -[CNContactContentViewControllerConfiguration setAlwaysEditing:]
  -[CNContactContentViewControllerConfiguration alwaysEditing]
  -[CNContactContentViewControllerConfiguration allowsActions]
  -[CNContactContentViewControllerConfiguration setAllowsPropertyActions:]
  -[CNContactContentViewControllerConfiguration allowsPropertyActions]
  -[CNContactContentViewControllerConfiguration setAllowsCardActions:]
  -[CNContactContentViewControllerConfiguration allowsCardActions]
  -[CNContactContentViewControllerConfiguration setAllowsConferencing:]
  -[CNContactContentViewControllerConfiguration allowsConferencing]
  -[CNContactContentViewControllerConfiguration setAllowsAddToFavorites:]
  -[CNContactContentViewControllerConfiguration allowsAddToFavorites]
  -[CNContactContentViewControllerConfiguration setAllowsSendMessage:]
  -[CNContactContentViewControllerConfiguration allowsSendMessage]
  -[CNContactContentViewControllerConfiguration setAllowsAddingToAddressBook:]
  -[CNContactContentViewControllerConfiguration allowsAddingToAddressBook]
  -[CNContactContentViewControllerConfiguration setShouldShowLinkedContacts:]
  -[CNContactContentViewControllerConfiguration shouldShowLinkedContacts]
  -[CNContactContentViewControllerConfiguration setAllowsSettingLinkedContactsAsPreferred:]
  -[CNContactContentViewControllerConfiguration allowsSettingLinkedContactsAsPreferred]
  -[CNContactContentViewControllerConfiguration setAllowsDeletion:]
  -[CNContactContentViewControllerConfiguration setAllowsActionsModel:]
  -[CNContactContentViewControllerConfiguration allowsActionsModel]
  -[CNContactContentViewControllerConfiguration setAllowsDisplayModePickerActions:]
  -[CNContactContentViewControllerConfiguration allowsDisplayModePickerActions]
  -[CNContactContentViewControllerConfiguration setAllowsEditPhoto:]
  -[CNContactContentViewControllerConfiguration allowsEditPhoto]
  -[CNContactContentViewControllerConfiguration setEditingProposedInformation:]
  -[CNContactContentViewControllerConfiguration editingProposedInformation]
  -[CNContactContentViewControllerConfiguration setHideCardActions:]
  -[CNContactContentViewControllerConfiguration hideCardActions]
  -[CNContactContentViewControllerConfiguration setIsMailVIP:]
  -[CNContactContentViewControllerConfiguration isMailVIP]
  -[CNContactContentViewControllerConfiguration setShowContactBlockingFirst:]
  -[CNContactContentViewControllerConfiguration showContactBlockingFirst]
  -[CNContactContentViewControllerConfiguration setWarningMessage:]
  -[CNContactContentViewControllerConfiguration warningMessage]
  -[CNContactContentViewControllerConfiguration setImportantMessage:]
  -[CNContactContentViewControllerConfiguration importantMessage]
  -[CNContactContentViewControllerConfiguration setVerifiedInfoMessage:]
  -[CNContactContentViewControllerConfiguration verifiedInfoMessage]
  -[CNContactContentViewControllerConfiguration setPrimaryProperty:]
  -[CNContactContentViewControllerConfiguration primaryProperty]
  -[CNContactContentViewControllerConfiguration setPersonHeaderView:]
  -[CNContactContentViewControllerConfiguration personHeaderView]
  -[CNContactContentViewControllerConfiguration setPersonHeaderViewController:]
  -[CNContactContentViewControllerConfiguration personHeaderViewController]
  -[CNContactContentViewControllerConfiguration allowsEditInApp]
  -[CNContactContentViewControllerConfiguration setAllowsEditInApp:]
  -[CNContactContentViewControllerConfiguration linkedPoliciesByContactIdentifier]
  -[CNContactContentViewControllerConfiguration setLinkedPoliciesByContactIdentifier:]
  -[CNContactContentViewControllerConfiguration shouldDrawNavigationBar]
  -[CNContactContentViewControllerConfiguration setShouldDrawNavigationBar:]
  -[CNContactContentViewControllerConfiguration initialPrompt]
  -[CNContactContentViewControllerConfiguration setInitialPrompt:]
  -[CNContactContentViewControllerConfiguration highlightedPropertyImportant]
  -[CNContactContentViewControllerConfiguration setHighlightedPropertyImportant:]
  -[CNContactContentViewControllerConfiguration highlightedProperties]
  -[CNContactContentViewControllerConfiguration setHighlightedProperties:]
  -[CNContactContentViewControllerConfiguration initForOutOfProcess:]
  -[CNContactContentViewControllerConfiguration setIsOutOfProcess:]
  -[CNContactContentViewControllerConfiguration layoutPositionallyAfterNavBar]
  -[CNContactContentViewControllerConfiguration setLayoutPositionallyAfterNavBar:]


CNContactViewController : UIViewController <CNContactViewHostProtocol, _UIRemoteViewControllerContaining, UIAdaptivePresentationControllerDelegate, CNContactContentNavigationItemTarget>
 @property  CNContact *contentContact
 @property  CNContactContentViewController *contentViewController
 @property  _UIAccessDeniedView *accessDeniedView
 @property  NSString *highlightedPropertyKey
 @property  NSString *highlightedPropertyIdentifier
 @property  BOOL highlightedPropertyImportant
 @property  NSArray *extraRightBarButtonItems
 @property  NSArray *extraLeftBarButtonItems
 @property  BOOL requiresSetup
 @property  BOOL hasCompletedSetup
 @property  NSArray *preEditLeftBarButtonItems
 @property  UINavigationItem *observedNavigationItem
 @property  CNContactContentNavigationItemUpdater *navItemUpdater
 @property  UIViewController<CNContactContentViewController> *viewController
 @property  long long mode
 @property  CNPolicy *policy
 @property  CNContact *additionalContact
 @property  BOOL showingMeContact
 @property  <CNContactViewControllerPPTDelegate> *pptDelegate
 @property  NSString *initialPrompt
 @property  BOOL shouldDrawNavigationBar
 @property  BOOL editingProposedInformation
 @property  CNContact *contact
 @property  long long displayMode
 @property  long long editMode
 @property  long long actions
 @property  CNContactFormatter *contactFormatter
 @property  CNContactRecentsReference *recentsData
 @property  <CNContactViewControllerPrivateDelegate> *privateDelegate
 @property  NSArray *prohibitedPropertyKeys
 @property  NSString *primaryPropertyKey
 @property  BOOL allowsDisplayModePickerActions
 @property  BOOL allowsEditPhoto
 @property  BOOL ignoresParentalRestrictions
 @property  BOOL forcesTransparentBackground
 @property  BOOL usesBrandedCallHeaderFormat
 @property  NSString *importantMessage
 @property  NSString *warningMessage
 @property  NSAttributedString *verifiedInfoMessage
 @property  UIView *contactHeaderView
 @property  UIViewController *contactHeaderViewController
 @property  <CNContactViewControllerCustomHeaderViewDelegate> *contactHeaderViewDelegate
 @property  BOOL shouldUseModernNavigationBarHiding
 @property  NSArray *displayedPropertyKeys
 @property  <CNContactViewControllerDelegate> *delegate
 @property  CNContactStore *contactStore
 @property  CNGroup *parentGroup
 @property  CNContainer *parentContainer
 @property  NSString *alternateName
 @property  NSString *message
 @property  BOOL allowsEditing
 @property  BOOL allowsActions
 @property  BOOL shouldShowLinkedContacts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UIRemoteViewController *_containedRemoteViewController

  // class methods
  +[CNContactViewController descriptorForRequiredKeys]
  +[CNContactViewController viewControllerForContact:]
  +[CNContactViewController viewControllerForUnknownContact:]
  +[CNContactViewController viewControllerForNewContact:]
  +[CNContactViewController viewControllerForUpdatingContact:withPropertiesFromContact:]
  +[CNContactViewController viewControllerForNewDraftContact:]
  +[CNContactViewController viewControllerForEditedDraftContact:]

  // instance methods
  -[CNContactViewController viewDidAppear]
  -[CNContactViewController presentationControllerShouldDismiss:]
  -[CNContactViewController setContactStore:]
  -[CNContactViewController displayMode]
  -[CNContactViewController privateDelegate]
  -[CNContactViewController accessDeniedView]
  -[CNContactViewController setMessage:]
  -[CNContactViewController contact]
  -[CNContactViewController setAllowsEditing:]
  -[CNContactViewController allowsEditing]
  -[CNContactViewController contentViewController]
  -[CNContactViewController setContentViewController:]
  -[CNContactViewController setDelegate:]
  -[CNContactViewController initWithMode:]
  -[CNContactViewController setEditing:animated:]
  -[CNContactViewController setViewController:]
  -[CNContactViewController delegate]
  -[CNContactViewController initWithNibName:bundle:]
  -[CNContactViewController setProhibitedPropertyKeys:]
  -[CNContactViewController viewWillLayoutSubviews]
  -[CNContactViewController viewDidAppear:]
  -[CNContactViewController dealloc]
  -[CNContactViewController prohibitedPropertyKeys]
  -[CNContactViewController mode]
  -[CNContactViewController .cxx_destruct]
  -[CNContactViewController setIgnoresParentalRestrictions:]
  -[CNContactViewController actions]
  -[CNContactViewController viewWillAppear:]
  -[CNContactViewController loadView]
  -[CNContactViewController didMoveToParentViewController:]
  -[CNContactViewController observeValueForKeyPath:ofObject:change:context:]
  -[CNContactViewController touchesBegan:withEvent:]
  -[CNContactViewController shouldAutomaticallyForwardAppearanceMethods]
  -[CNContactViewController viewController]
  -[CNContactViewController presentationControllerDidAttemptToDismiss:]
  -[CNContactViewController ignoresParentalRestrictions]
  -[CNContactViewController setDisplayMode:]
  -[CNContactViewController _setViewController:]
  -[CNContactViewController setContact:]
  -[CNContactViewController contactStore]
  -[CNContactViewController updateContact:]
  -[CNContactViewController setActions:]
  -[CNContactViewController contactFormatter]
  -[CNContactViewController message]
  -[CNContactViewController setContactFormatter:]
  -[CNContactViewController policy]
  -[CNContactViewController _containedRemoteViewController]
  -[CNContactViewController isModalInPresentation]
  -[CNContactViewController _isDelayingPresentation]
  -[CNContactViewController _endDelayingPresentation]
  -[CNContactViewController parentGroup]
  -[CNContactViewController setAllowsActions:]
  -[CNContactViewController setForcesTransparentBackground:]
  -[CNContactViewController shouldPerformDefaultActionForContact:propertyKey:propertyIdentifier:]
  -[CNContactViewController updateEditing:doneButtonEnabled:doneButtonText:]
  -[CNContactViewController didCompleteWithContact:]
  -[CNContactViewController didDeleteContact:]
  -[CNContactViewController isPresentingFullscreen:]
  -[CNContactViewController isPresentingEditingController:]
  -[CNContactViewController didChangePreferredContentSize:]
  -[CNContactViewController didExecuteClearRecentsDataAction]
  -[CNContactViewController didExecuteDeleteFromDowntimeWhitelistAction]
  -[CNContactViewController presentCancelConfirmationAlert]
  -[CNContactViewController viewServiceDidTerminate]
  -[CNContactViewController toggleEditing]
  -[CNContactViewController alternateName]
  -[CNContactViewController setAlternateName:]
  -[CNContactViewController toggleEditing:]
  -[CNContactViewController editCancel:]
  -[CNContactViewController pptDelegate]
  -[CNContactViewController setPptDelegate:]
  -[CNContactViewController contactHeaderView]
  -[CNContactViewController allowsActions]
  -[CNContactViewController setShouldShowLinkedContacts:]
  -[CNContactViewController shouldShowLinkedContacts]
  -[CNContactViewController setAllowsDisplayModePickerActions:]
  -[CNContactViewController allowsDisplayModePickerActions]
  -[CNContactViewController setAllowsEditPhoto:]
  -[CNContactViewController allowsEditPhoto]
  -[CNContactViewController setEditingProposedInformation:]
  -[CNContactViewController editingProposedInformation]
  -[CNContactViewController setWarningMessage:]
  -[CNContactViewController warningMessage]
  -[CNContactViewController setImportantMessage:]
  -[CNContactViewController importantMessage]
  -[CNContactViewController setVerifiedInfoMessage:]
  -[CNContactViewController verifiedInfoMessage]
  -[CNContactViewController navigationItemController]
  -[CNContactViewController showingMeContact]
  -[CNContactViewController setShowingMeContact:]
  -[CNContactViewController shouldDrawNavigationBar]
  -[CNContactViewController setShouldDrawNavigationBar:]
  -[CNContactViewController initialPrompt]
  -[CNContactViewController setInitialPrompt:]
  -[CNContactViewController recentsData]
  -[CNContactViewController setRecentsData:]
  -[CNContactViewController _viewWillBePresented]
  -[CNContactViewController _setupViewController]
  -[CNContactViewController _shouldBeOutOfProcess]
  -[CNContactViewController _prepareViewController]
  -[CNContactViewController displayedPropertyKeys]
  -[CNContactViewController setDisplayedPropertyKeys:]
  -[CNContactViewController parentContainer]
  -[CNContactViewController setParentContainer:]
  -[CNContactViewController preEditLeftBarButtonItems]
  -[CNContactViewController setPreEditLeftBarButtonItems:]
  -[CNContactViewController extraLeftBarButtonItems]
  -[CNContactViewController setExtraLeftBarButtonItems:]
  -[CNContactViewController extraRightBarButtonItems]
  -[CNContactViewController setExtraRightBarButtonItems:]
  -[CNContactViewController setParentGroup:]
  -[CNContactViewController highlightedPropertyImportant]
  -[CNContactViewController setHighlightedPropertyImportant:]
  -[CNContactViewController setContactHeaderView:]
  -[CNContactViewController forcesTransparentBackground]
  -[CNContactViewController navItemUpdater]
  -[CNContactViewController setNavItemUpdater:]
  -[CNContactViewController _contactPresentedViewController]
  -[CNContactViewController _primaryPropertyStringForContact:]
  -[CNContactViewController highlightPropertyWithKey:identifier:important:]
  -[CNContactViewController highlightPropertyWithKey:identifier:]
  -[CNContactViewController setRequiresSetup:]
  -[CNContactViewController setShouldUseModernNavigationBarHiding:]
  -[CNContactViewController setUsesBrandedCallHeaderFormat:]
  -[CNContactViewController presentConfirmCancelAlertControllerAnchoredAtButtonItem:]
  -[CNContactViewController confirmCancelAlertControllerAnchoredAtButtonItem:]
  -[CNContactViewController setContact:additionalContact:mode:]
  -[CNContactViewController setDoneButtonText:enabled:]
  -[CNContactViewController updateEditNavigationItemsAnimated:doneButtonEnabled:doneButtonText:]
  -[CNContactViewController configureNavigationItem:]
  -[CNContactViewController enableSaveKeyboardShortcut]
  -[CNContactViewController enableCancelKeyboardShortcut]
  -[CNContactViewController enableEditKeyboardShortcut]
  -[CNContactViewController contentContact]
  -[CNContactViewController setContentContact:]
  -[CNContactViewController highlightedPropertyKey]
  -[CNContactViewController setHighlightedPropertyKey:]
  -[CNContactViewController highlightedPropertyIdentifier]
  -[CNContactViewController setHighlightedPropertyIdentifier:]
  -[CNContactViewController requiresSetup]
  -[CNContactViewController hasCompletedSetup]
  -[CNContactViewController setHasCompletedSetup:]
  -[CNContactViewController observedNavigationItem]
  -[CNContactViewController setObservedNavigationItem:]
  -[CNContactViewController additionalContact]
  -[CNContactViewController setAdditionalContact:]
  -[CNContactViewController editMode]
  -[CNContactViewController setEditMode:]
  -[CNContactViewController primaryPropertyKey]
  -[CNContactViewController setPrimaryPropertyKey:]
  -[CNContactViewController usesBrandedCallHeaderFormat]
  -[CNContactViewController contactHeaderViewController]
  -[CNContactViewController setContactHeaderViewController:]
  -[CNContactViewController contactHeaderViewDelegate]
  -[CNContactViewController setContactHeaderViewDelegate:]
  -[CNContactViewController shouldUseModernNavigationBarHiding]


CNStarkNoContentBannerView : UIView
 @property  UILabel *titleLabel
 @property  UIButton *siriButton
 @property  NSMutableArray *constraintsForTitleLabel
 @property  NSMutableArray *constraintsForTitleLabelAndSiriButton
 @property  BOOL siriButtonSelected
 @property  NSString *titleString
 @property  BOOL siriButtonEnabled

  // instance methods
  -[CNStarkNoContentBannerView didUpdateFocusInContext:withAnimationCoordinator:]
  -[CNStarkNoContentBannerView setTitleLabel:]
  -[CNStarkNoContentBannerView updateConstraints]
  -[CNStarkNoContentBannerView canBecomeFocused]
  -[CNStarkNoContentBannerView .cxx_destruct]
  -[CNStarkNoContentBannerView select]
  -[CNStarkNoContentBannerView initWithFrame:]
  -[CNStarkNoContentBannerView traitCollectionDidChange:]
  -[CNStarkNoContentBannerView titleLabel]
  -[CNStarkNoContentBannerView titleString]
  -[CNStarkNoContentBannerView setTitleString:]
  -[CNStarkNoContentBannerView setupTitleLabel]
  -[CNStarkNoContentBannerView clickGestureDidUpdate:]
  -[CNStarkNoContentBannerView setupClickGestureRecognizer]
  -[CNStarkNoContentBannerView deselect]
  -[CNStarkNoContentBannerView choose]
  -[CNStarkNoContentBannerView stateUpdated]
  -[CNStarkNoContentBannerView siriButtonTapped:]
  -[CNStarkNoContentBannerView siriButtonTouchDown:]
  -[CNStarkNoContentBannerView siriButtonTouchUp:]
  -[CNStarkNoContentBannerView setupSiriButton]
  -[CNStarkNoContentBannerView setupConstraintsforTitleLabel]
  -[CNStarkNoContentBannerView setupConstraintsForTitleLabelAndSiriButton]
  -[CNStarkNoContentBannerView setSiriButtonEnabled:]
  -[CNStarkNoContentBannerView siriButtonEnabled]
  -[CNStarkNoContentBannerView siriButton]
  -[CNStarkNoContentBannerView setSiriButton:]
  -[CNStarkNoContentBannerView constraintsForTitleLabel]
  -[CNStarkNoContentBannerView setConstraintsForTitleLabel:]
  -[CNStarkNoContentBannerView constraintsForTitleLabelAndSiriButton]
  -[CNStarkNoContentBannerView setConstraintsForTitleLabelAndSiriButton:]
  -[CNStarkNoContentBannerView siriButtonSelected]
  -[CNStarkNoContentBannerView setSiriButtonSelected:]


CNUINavigationListItem : NSObject <CNUINavigationListItemContent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <CNUINavigationListItemContent> *content
 @property  CNUINavigationListItem *parent
 @property  NSString *identifier
 @property  UIImage *image
 @property  NSString *title
 @property  NSString *subtitle
 @property  CNUINavigationListItem *defaultItem
 @property  NSArray *items

  // class methods
  +[CNUINavigationListItem localizedLabelForActionItem:usingPropertyLabel:]
  +[CNUINavigationListItem faceTimeNavigationListItemsForUserActionListModel:]
  +[CNUINavigationListItem favoritesNavigationListItemsForUserActionListModel:]
  +[CNUINavigationListItem navigationListItemsForUserActionListModel:]
  +[CNUINavigationListItem itemForActionItem:isGrouped:]
  +[CNUINavigationListItem navigationListItemForContactProperty:]

  // instance methods
  -[CNUINavigationListItem setParent:]
  -[CNUINavigationListItem identifier]
  -[CNUINavigationListItem subtitle]
  -[CNUINavigationListItem setItems:]
  -[CNUINavigationListItem setSubtitle:]
  -[CNUINavigationListItem content]
  -[CNUINavigationListItem initWithTitle:]
  -[CNUINavigationListItem .cxx_destruct]
  -[CNUINavigationListItem items]
  -[CNUINavigationListItem title]
  -[CNUINavigationListItem image]
  -[CNUINavigationListItem setIdentifier:]
  -[CNUINavigationListItem parent]
  -[CNUINavigationListItem setImage:]
  -[CNUINavigationListItem setTitle:]
  -[CNUINavigationListItem init]
  -[CNUINavigationListItem setContent:]
  -[CNUINavigationListItem initWithTitle:image:]
  -[CNUINavigationListItem defaultItem]
  -[CNUINavigationListItem setDefaultItem:]


CNPhotoPickerMonogramProviderItem : CNPhotoPickerProviderItem <CNVisualIdentityPickerTextEditableProviderItem>
 @property  NSData *monogramData
 @property  BOOL isVariantOptionItem
 @property  NSString *monogramText
 @property  CNVisualIdentity *visualIdentity
 @property  CNAvatarImageRenderer *avatarRenderer
 @property  <CNAvatarImageRenderingScope> *renderingScope
 @property  BOOL isContactImage
 @property  BOOL hasUnknownColor
 @property  NSString *itemText
 @property  UIColor *backgroundColor

  // instance methods
  -[CNPhotoPickerMonogramProviderItem allowsEditing]
  -[CNPhotoPickerMonogramProviderItem imageType]
  -[CNPhotoPickerMonogramProviderItem .cxx_destruct]
  -[CNPhotoPickerMonogramProviderItem backgroundColor]
  -[CNPhotoPickerMonogramProviderItem imageData]
  -[CNPhotoPickerMonogramProviderItem copyWithZone:]
  -[CNPhotoPickerMonogramProviderItem variantIdentifier]
  -[CNPhotoPickerMonogramProviderItem isEqual:]
  -[CNPhotoPickerMonogramProviderItem thumbnailImageData]
  -[CNPhotoPickerMonogramProviderItem visualIdentity]
  -[CNPhotoPickerMonogramProviderItem setVisualIdentity:]
  -[CNPhotoPickerMonogramProviderItem updatedProviderItemWithText:]
  -[CNPhotoPickerMonogramProviderItem itemText]
  -[CNPhotoPickerMonogramProviderItem allowsVariants]
  -[CNPhotoPickerMonogramProviderItem allowsMoveAndScale]
  -[CNPhotoPickerMonogramProviderItem shouldShowCaption]
  -[CNPhotoPickerMonogramProviderItem localizedVariantsTitle]
  -[CNPhotoPickerMonogramProviderItem generateThumbnailImageDataIfNeeded]
  -[CNPhotoPickerMonogramProviderItem updateVisualIdentity:]
  -[CNPhotoPickerMonogramProviderItem createVariantsItemsWithVariantsManager:]
  -[CNPhotoPickerMonogramProviderItem contactImageForMetadataStore]
  -[CNPhotoPickerMonogramProviderItem avatarRenderer]
  -[CNPhotoPickerMonogramProviderItem setAvatarRenderer:]
  -[CNPhotoPickerMonogramProviderItem renderingScope]
  -[CNPhotoPickerMonogramProviderItem setRenderingScope:]
  -[CNPhotoPickerMonogramProviderItem initWithImageData:thumbnailImageData:fullscreenImageData:cropRect:renderingScope:avatarRenderer:isVariantOptionItem:]
  -[CNPhotoPickerMonogramProviderItem isGrayMonogramItem]
  -[CNPhotoPickerMonogramProviderItem renderMonogramData]
  -[CNPhotoPickerMonogramProviderItem monogramText]
  -[CNPhotoPickerMonogramProviderItem updateWithMonogramData:]
  -[CNPhotoPickerMonogramProviderItem monogramVariantItemForColor:]
  -[CNPhotoPickerMonogramProviderItem createColorVariantItems]
  -[CNPhotoPickerMonogramProviderItem createColorVariantItemsExcludingSelf]
  -[CNPhotoPickerMonogramProviderItem setMonogramText:]
  -[CNPhotoPickerMonogramProviderItem isContactImage]
  -[CNPhotoPickerMonogramProviderItem setIsContactImage:]
  -[CNPhotoPickerMonogramProviderItem hasUnknownColor]
  -[CNPhotoPickerMonogramProviderItem setHasUnknownColor:]
  -[CNPhotoPickerMonogramProviderItem monogramData]
  -[CNPhotoPickerMonogramProviderItem setMonogramData:]
  -[CNPhotoPickerMonogramProviderItem isVariantOptionItem]
  -[CNPhotoPickerMonogramProviderItem setIsVariantOptionItem:]


CNPhotoPickerAnimojiPosePreviewView : CNPhotoPickerPreviewView
 @property  AVTView *avtView
 @property  CAShapeLayer *clippingLayer

  // instance methods
  -[CNPhotoPickerAnimojiPosePreviewView .cxx_destruct]
  -[CNPhotoPickerAnimojiPosePreviewView layoutSubviews]
  -[CNPhotoPickerAnimojiPosePreviewView avtView]
  -[CNPhotoPickerAnimojiPosePreviewView setupPreview]
  -[CNPhotoPickerAnimojiPosePreviewView updatePreviewWithItem:]
  -[CNPhotoPickerAnimojiPosePreviewView clippingLayer]
  -[CNPhotoPickerAnimojiPosePreviewView setClippingLayer:]
  -[CNPhotoPickerAnimojiPosePreviewView updatePoseWithConfiguration:]


CNGroupMembershipCell : CNLabeledCell
 @property  UILabel *parentGroupNameLabel
 @property  <CNPropertyCellDelegate> *delegate

  // class methods
  +[CNGroupMembershipCell wantsHorizontalLayout]

  // instance methods
  -[CNGroupMembershipCell setDelegate:]
  -[CNGroupMembershipCell updateConstraints]
  -[CNGroupMembershipCell delegate]
  -[CNGroupMembershipCell labelView]
  -[CNGroupMembershipCell .cxx_destruct]
  -[CNGroupMembershipCell setCardGroupItem:]
  -[CNGroupMembershipCell allowsCellSelection]
  -[CNGroupMembershipCell parentGroupNameLabel]


CNGroupMembershipEditingCell : CNGroupMembershipCell
  // class methods
  +[CNGroupMembershipEditingCell wantsHorizontalLayout]


CNUIContactSaveResult : NSObject
 @property  BOOL success
 @property  CNMutableContact *contact
 @property  NSArray *identifiersOfIssuedSaveRequests

  // instance methods
  -[CNUIContactSaveResult success]
  -[CNUIContactSaveResult contact]
  -[CNUIContactSaveResult .cxx_destruct]
  -[CNUIContactSaveResult initWithSuccess:contact:identifiersOfIssuedSaveRequests:]
  -[CNUIContactSaveResult identifiersOfIssuedSaveRequests]


CNContactStoreSnapshot : NSObject
 @property  CNContactStoreDataSource *dataSource
 @property  CNContactStoreFilter *filter
 @property  CNManagedConfiguration *managedConfiguration
 @property  NSArray *contacts
 @property  NSMutableDictionary *contactMatchInfos
 @property  CNContactDataSourceLIFOScheduler *summarizationQueue
 @property  NSPointerArray *summarizationFutures
 @property  NSArray *sections
 @property  NSArray *indexSections
 @property  NSMapTable *identifiersToIndexPath
 @property  NSMutableArray *batchContactIdentifiers

  // instance methods
  -[CNContactStoreSnapshot managedConfiguration]
  -[CNContactStoreSnapshot setFilter:]
  -[CNContactStoreSnapshot setManagedConfiguration:]
  -[CNContactStoreSnapshot filter]
  -[CNContactStoreSnapshot dataSource]
  -[CNContactStoreSnapshot objectIn_contactsAtIndex:]
  -[CNContactStoreSnapshot indexSections]
  -[CNContactStoreSnapshot prepareAllContacts]
  -[CNContactStoreSnapshot dealloc]
  -[CNContactStoreSnapshot _generateExcerptsInRange:]
  -[CNContactStoreSnapshot .cxx_destruct]
  -[CNContactStoreSnapshot contacts]
  -[CNContactStoreSnapshot batchContactIdentifiers]
  -[CNContactStoreSnapshot prepareEnoughContacts]
  -[CNContactStoreSnapshot contactMatchInfos]
  -[CNContactStoreSnapshot identifiersToIndexPath]
  -[CNContactStoreSnapshot summarizationQueue]
  -[CNContactStoreSnapshot _loadContactsInRange:inBackground:]
  -[CNContactStoreSnapshot setDataSource:]
  -[CNContactStoreSnapshot countOf_contacts]
  -[CNContactStoreSnapshot _loadAllContacts]
  -[CNContactStoreSnapshot sections]
  -[CNContactStoreSnapshot _keysToFetch]
  -[CNContactStoreSnapshot summarizationFutures]
  -[CNContactStoreSnapshot init]


CNContactStoreDataSource : NSObject <CNContactDataSource>
 @property  CNContact *meContact
 @property  BOOL meContactNeedsUpdate
 @property  CNGroup *filteredGroup
 @property  CNContainer *filteredContainer
 @property  CNContactStore *store
 @property  CNContactStoreSnapshot *currentSnapshot
 @property  long long sortOrder
 @property  NSDictionary *sectionHeadersDictionary
 @property  NSArray *indexSectionsArray
 @property  NSDictionary *localizedSectionHeaders
 @property  NSDictionary *localizedSectionIndices
 @property  CNContactStoreFilter *filter
 @property  BOOL shouldRevalidateFilterOnStoreChange
 @property  CNManagedConfiguration *managedConfiguration
 @property  NSArray *keysToFetch
 @property  BOOL fetchUnified
 @property  BOOL filterShowsSingleGroup
 @property  BOOL filterShowsSingleExchangeFolder
 @property  NSArray *contacts
 @property  NSDictionary *contactMatchInfos
 @property  NSArray *sections
 @property  NSArray *indexSections
 @property  <CNContactDataSourceDelegate> *delegate
 @property  BOOL canReload
 @property  NSString *displayName
 @property  CNContactFilter *effectiveFilter
 @property  CNContactFormatter *contactFormatter
 @property  BOOL shouldReturnToAccountsAndGroupsViewAfterSearchIsCanceled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactStoreDataSource isErrorPossiblyRelatedToExtraStores:]
  +[CNContactStoreDataSource keyPathsForValuesAffectingEffectiveFilter]

  // instance methods
  -[CNContactStoreDataSource meContact]
  -[CNContactStoreDataSource managedConfiguration]
  -[CNContactStoreDataSource setFilter:]
  -[CNContactStoreDataSource sortOrder]
  -[CNContactStoreDataSource setMeContact:error:]
  -[CNContactStoreDataSource setManagedConfiguration:]
  -[CNContactStoreDataSource filter]
  -[CNContactStoreDataSource accountForContainerIdentifier:]
  -[CNContactStoreDataSource setKeysToFetch:]
  -[CNContactStoreDataSource store]
  -[CNContactStoreDataSource indexSections]
  -[CNContactStoreDataSource setDelegate:]
  -[CNContactStoreDataSource setMeContact:]
  -[CNContactStoreDataSource initWithStore:]
  -[CNContactStoreDataSource delegate]
  -[CNContactStoreDataSource setStore:]
  -[CNContactStoreDataSource isLoading]
  -[CNContactStoreDataSource dealloc]
  -[CNContactStoreDataSource reset]
  -[CNContactStoreDataSource currentSnapshot]
  -[CNContactStoreDataSource .cxx_destruct]
  -[CNContactStoreDataSource contacts]
  -[CNContactStoreDataSource contactMatchInfos]
  -[CNContactStoreDataSource observeValueForKeyPath:ofObject:change:context:]
  -[CNContactStoreDataSource copyWithZone:]
  -[CNContactStoreDataSource contactStoreDidChange:]
  -[CNContactStoreDataSource invalidate]
  -[CNContactStoreDataSource displayName]
  -[CNContactStoreDataSource reload]
  -[CNContactStoreDataSource sections]
  -[CNContactStoreDataSource contactFormatter]
  -[CNContactStoreDataSource keysToFetch]
  -[CNContactStoreDataSource setContactFormatter:]
  -[CNContactStoreDataSource completeContactFromContact:fromMainStoreOnly:keysToFetch:]
  -[CNContactStoreDataSource preferredForNameMeContactIdentifier]
  -[CNContactStoreDataSource preferredForNameMeContactWithKeysToFetch:]
  -[CNContactStoreDataSource meContactNeedsUpdate]
  -[CNContactStoreDataSource setMeContactNeedsUpdate:]
  -[CNContactStoreDataSource reloadAsynchronously]
  -[CNContactStoreDataSource indexPathForContact:]
  -[CNContactStoreDataSource canReload]
  -[CNContactStoreDataSource effectiveFilter]
  -[CNContactStoreDataSource contactStoreMeContactDidChange:]
  -[CNContactStoreDataSource registerForRelevantChangeNotifications]
  -[CNContactStoreDataSource titleForContainer:]
  -[CNContactStoreDataSource canUseTitleForAccount:]
  -[CNContactStoreDataSource doesFilterShowAllContainersForAccount:]
  -[CNContactStoreDataSource filteredGroup]
  -[CNContactStoreDataSource filteredContainer]
  -[CNContactStoreDataSource filterShowsSingleGroup]
  -[CNContactStoreDataSource filterShowsSingleExchangeFolder]
  -[CNContactStoreDataSource validateFilter]
  -[CNContactStoreDataSource _reloadSynchronously:]
  -[CNContactStoreDataSource setCurrentSnapshot:]
  -[CNContactStoreDataSource sectionHeadersDictionary]
  -[CNContactStoreDataSource localizedSectionHeaders]
  -[CNContactStoreDataSource indexSectionsArray]
  -[CNContactStoreDataSource shouldRevalidateFilterOnStoreChange]
  -[CNContactStoreDataSource setShouldRevalidateFilterOnStoreChange:]
  -[CNContactStoreDataSource fetchUnified]
  -[CNContactStoreDataSource setFetchUnified:]
  -[CNContactStoreDataSource setFilteredGroup:]
  -[CNContactStoreDataSource setFilteredContainer:]
  -[CNContactStoreDataSource localizedSectionIndices]


CNAvatarPosePickerController : NSObject <CNPhotoPickerVariantListControllerDelegate>
 @property  CNPhotoPickerVariantsManager *variantsManager
 @property  CNPhotoPickerAnimojiProviderItem *originalProviderItem
 @property  CNPhotoPickerVariantListController *posePickerController
 @property  <CNAvatarPosePickerControllerDelegate> *delegate
 @property  long long numberOfItemsPerRow
 @property  {CGSize=dd} desiredContentSize

  // instance methods
  -[CNAvatarPosePickerController setDelegate:]
  -[CNAvatarPosePickerController delegate]
  -[CNAvatarPosePickerController .cxx_destruct]
  -[CNAvatarPosePickerController desiredContentSize]
  -[CNAvatarPosePickerController photoPickerVariantListController:didSelectProviderItem:]
  -[CNAvatarPosePickerController photoPickerVariantListControllerDidCancel:]
  -[CNAvatarPosePickerController initWithAvatarRecord:variantsManager:]
  -[CNAvatarPosePickerController variantsManager]
  -[CNAvatarPosePickerController setVariantsManager:]
  -[CNAvatarPosePickerController numberOfItemsPerRow]
  -[CNAvatarPosePickerController posePickerController]
  -[CNAvatarPosePickerController setPosePickerController:]
  -[CNAvatarPosePickerController initWithAnimojiProviderItem:variantsManager:]
  -[CNAvatarPosePickerController setNumberOfItemsPerRow:]
  -[CNAvatarPosePickerController setDesiredContentSize:]
  -[CNAvatarPosePickerController posePickerViewController]
  -[CNAvatarPosePickerController originalProviderItem]
  -[CNAvatarPosePickerController setOriginalProviderItem:]


CNAvatarCardHeaderView : CNContactOrbHeaderView
  // instance methods
  -[CNAvatarCardHeaderView photoLabelSpacing]


CNAvatarCardController : NSObject <UIContextMenuInteractionDelegate, UIGestureRecognizerDelegate, CNContactOrbActionsControllerDelegate>
 @property  UIContextMenuInteraction *contextMenuInteraction
 @property  long long presentationResult
 @property  NSData *overrideImageData
 @property  CNContactOrbHeaderViewController *orbHeaderViewController
 @property  CNActionMenuHelper *actionMenuHelper
 @property  CNContactOrbActionsController *orbActionsController
 @property  CNAvatarView *avatarView
 @property  CNContactOrbHeaderView *headerView
 @property  UIViewController *presentingViewController
 @property  UIGestureRecognizer *rolloverGestureRecognizer
 @property  BOOL actionsNeedRefresh
 @property  BOOL bypassActionValidation
 @property  CNContact *contact
 @property  NSArray *contacts
 @property  NSArray *actionCategories
 @property  NSString *name
 @property  NSString *message
 @property  <CNAvatarCardControllerDelegate> *delegate
 @property  BOOL visible
 @property  UIView *sourceView
 @property  UIView *highlightView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceRect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNAvatarCardController previewHeaderViewControllerForContacts:]
  +[CNAvatarCardController avatarCardEnabledForTraitCollection:]
  +[CNAvatarCardController descriptorForRequiredKeysIncludingAvatarViewDescriptors:]
  +[CNAvatarCardController descriptorForRequiredKeys]

  // instance methods
  -[CNAvatarCardController sourceRect]
  -[CNAvatarCardController avatarView]
  -[CNAvatarCardController bypassActionValidation]
  -[CNAvatarCardController setSourceView:]
  -[CNAvatarCardController actionCategories]
  -[CNAvatarCardController setSourceRect:]
  -[CNAvatarCardController setContextMenuInteraction:]
  -[CNAvatarCardController setMessage:]
  -[CNAvatarCardController setOverrideImageData:]
  -[CNAvatarCardController showContact:]
  -[CNAvatarCardController contact]
  -[CNAvatarCardController contextMenuInteraction:previewForHighlightingMenuWithConfiguration:]
  -[CNAvatarCardController contextMenuInteraction:configurationForMenuAtLocation:]
  -[CNAvatarCardController dismissAnimated:]
  -[CNAvatarCardController contextMenuInteraction:willEndForConfiguration:animator:]
  -[CNAvatarCardController contextMenuInteraction:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[CNAvatarCardController setDelegate:]
  -[CNAvatarCardController setHeaderView:]
  -[CNAvatarCardController cleanupAfterDisplay]
  -[CNAvatarCardController retrieveActions]
  -[CNAvatarCardController showContact]
  -[CNAvatarCardController contextMenuInteraction:willDisplayMenuForConfiguration:animator:]
  -[CNAvatarCardController actionMenuHelper]
  -[CNAvatarCardController isVisible]
  -[CNAvatarCardController rolloverGestureRecognizer]
  -[CNAvatarCardController actionsNeedRefresh]
  -[CNAvatarCardController prepareWithContacts:store:]
  -[CNAvatarCardController contextMenuInteraction:previewForDismissingMenuWithConfiguration:]
  -[CNAvatarCardController dismissAnimated:completionHandler:]
  -[CNAvatarCardController contextMenuInteraction]
  -[CNAvatarCardController setHighlightView:]
  -[CNAvatarCardController delegate]
  -[CNAvatarCardController setActionsNeedRefresh:]
  -[CNAvatarCardController setupActionsForContacts:]
  -[CNAvatarCardController setContacts:]
  -[CNAvatarCardController setPresentationResult:]
  -[CNAvatarCardController headerView]
  -[CNAvatarCardController prepareForDisplay]
  -[CNAvatarCardController presentingViewController]
  -[CNAvatarCardController .cxx_destruct]
  -[CNAvatarCardController orbHeaderViewController]
  -[CNAvatarCardController contacts]
  -[CNAvatarCardController readyForContactsMatching:]
  -[CNAvatarCardController setBypassActionValidation:]
  -[CNAvatarCardController updateWithMenuItems:]
  -[CNAvatarCardController configurePreviewInteraction]
  -[CNAvatarCardController orbActionsController]
  -[CNAvatarCardController hasActions]
  -[CNAvatarCardController setOrbActionsController:]
  -[CNAvatarCardController setName:]
  -[CNAvatarCardController contextMenuInteractionTargetedPreview]
  -[CNAvatarCardController overrideImageData]
  -[CNAvatarCardController refetchContactsMatching:storeProvider:]
  -[CNAvatarCardController setActionCategories:]
  -[CNAvatarCardController name]
  -[CNAvatarCardController highlightView]
  -[CNAvatarCardController headerViewController]
  -[CNAvatarCardController setContact:]
  -[CNAvatarCardController presentationResult]
  -[CNAvatarCardController setOrbHeaderViewController:]
  -[CNAvatarCardController setActionMenuHelper:]
  -[CNAvatarCardController sourceView]
  -[CNAvatarCardController contactOrbActionsController:didUpdateWithMenu:]
  -[CNAvatarCardController setAvatarView:]
  -[CNAvatarCardController setupActionsControllerForContacts:]
  -[CNAvatarCardController setRolloverGestureRecognizer:]
  -[CNAvatarCardController message]
  -[CNAvatarCardController prepareWithOverrideImageData:]
  -[CNAvatarCardController prepareWithContacts:storeProvider:]
  -[CNAvatarCardController presentingViewControllerForActionsController:]


CNAvatarCardActionsTableView : UITableView
  // instance methods
  -[CNAvatarCardActionsTableView intrinsicContentSize]


CNAvatarCardActionsView : UIView <UITableViewDataSource, UITableViewDelegate, CNQuickActionsManagerDelegate, UIGestureRecognizerDelegate>
 @property  CNQuickActionsManager *actionsManager
 @property  NSArray *actions
 @property  CNAvatarCardActionsTableView *tableView
 @property  NSIndexPath *highlightedIndexPath
 @property  UIGestureRecognizer *rolloverGestureRecognizer
 @property  UIGestureRecognizer *selectionGestureRecognizer
 @property  {CGPoint=dd} initialLocation
 @property  BOOL expanded
 @property  UISelectionFeedbackGenerator *retargetBehavior
 @property  NSArray *contacts
 @property  NSArray *actionCategories
 @property  BOOL actionsReversed
 @property  BOOL bypassActionValidation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} actionsImageFrame
 @property  <CNAvatarCardActionsViewDelegate> *delegate
 @property  BOOL dismissesBeforePerforming
 @property  BOOL performingAction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNAvatarCardActionsView requiresConstraintBasedLayout]

  // instance methods
  -[CNAvatarCardActionsView bypassActionValidation]
  -[CNAvatarCardActionsView actionCategories]
  -[CNAvatarCardActionsView tableView:cellForRowAtIndexPath:]
  -[CNAvatarCardActionsView tableView:numberOfRowsInSection:]
  -[CNAvatarCardActionsView tableView:shouldHighlightRowAtIndexPath:]
  -[CNAvatarCardActionsView numberOfSectionsInTableView:]
  -[CNAvatarCardActionsView reloadData]
  -[CNAvatarCardActionsView setDelegate:]
  -[CNAvatarCardActionsView expanded]
  -[CNAvatarCardActionsView rolloverGestureRecognizer]
  -[CNAvatarCardActionsView tableView:willDisplayCell:forRowAtIndexPath:]
  -[CNAvatarCardActionsView delegate]
  -[CNAvatarCardActionsView setContacts:]
  -[CNAvatarCardActionsView reset]
  -[CNAvatarCardActionsView scrollViewDidEndDecelerating:]
  -[CNAvatarCardActionsView .cxx_destruct]
  -[CNAvatarCardActionsView contacts]
  -[CNAvatarCardActionsView tableView]
  -[CNAvatarCardActionsView actions]
  -[CNAvatarCardActionsView setBypassActionValidation:]
  -[CNAvatarCardActionsView setTableView:]
  -[CNAvatarCardActionsView setInitialLocation:]
  -[CNAvatarCardActionsView initialLocation]
  -[CNAvatarCardActionsView setActionCategories:]
  -[CNAvatarCardActionsView setExpanded:]
  -[CNAvatarCardActionsView initWithFrame:]
  -[CNAvatarCardActionsView setActions:]
  -[CNAvatarCardActionsView setRolloverGestureRecognizer:]
  -[CNAvatarCardActionsView scrollViewDidEndDragging:willDecelerate:]
  -[CNAvatarCardActionsView willMoveToWindow:]
  -[CNAvatarCardActionsView scrollViewWillBeginDragging:]
  -[CNAvatarCardActionsView _gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CNAvatarCardActionsView _gestureRecognizer:shouldReceiveTouch:]
  -[CNAvatarCardActionsView selectionGestureRecognizer]
  -[CNAvatarCardActionsView setSelectionGestureRecognizer:]
  -[CNAvatarCardActionsView actionsReversed]
  -[CNAvatarCardActionsView setActionsReversed:]
  -[CNAvatarCardActionsView highlightedIndexPath]
  -[CNAvatarCardActionsView setHighlightedIndexPath:]
  -[CNAvatarCardActionsView _indexPathForGestureRecognizer:]
  -[CNAvatarCardActionsView startTrackingRolloverWithGestureRecognizer:]
  -[CNAvatarCardActionsView stopTrackingRollover]
  -[CNAvatarCardActionsView actionsManager:orderedPropertiesForProperties:category:]
  -[CNAvatarCardActionsView actionsManager:presentingViewControllerForAction:]
  -[CNAvatarCardActionsView refreshActions]
  -[CNAvatarCardActionsView actionsManager]
  -[CNAvatarCardActionsView setActionsManager:]
  -[CNAvatarCardActionsView retargetBehavior]
  -[CNAvatarCardActionsView setRetargetBehavior:]
  -[CNAvatarCardActionsView setDismissesBeforePerforming:]
  -[CNAvatarCardActionsView dismissesBeforePerforming]
  -[CNAvatarCardActionsView updateRollover:]
  -[CNAvatarCardActionsView setActionsImageFrame:]
  -[CNAvatarCardActionsView _updateActionsWithBlock:]
  -[CNAvatarCardActionsView _updateWithActions:withBlock:]
  -[CNAvatarCardActionsView _effectiveManagerActions]
  -[CNAvatarCardActionsView _actionAtIndexPath:]
  -[CNAvatarCardActionsView reloadDataWithBlock:]
  -[CNAvatarCardActionsView resetWithBlock:]
  -[CNAvatarCardActionsView performHighlightedAction]
  -[CNAvatarCardActionsView isPerformingAction]
  -[CNAvatarCardActionsView _startTrackingRolloverOnCellAtIndexPath:withGestureRecognizer:]
  -[CNAvatarCardActionsView _stopTrackingRolloverOnCellAtIndexPath:withGestureRecognizer:]
  -[CNAvatarCardActionsView _performActionAtIndexPath:]
  -[CNAvatarCardActionsView _updateFromActions:toActions:matchingOldIndex:toNewActionIndex:invertedAnimation:]
  -[CNAvatarCardActionsView _configureCell:forAction:]
  -[CNAvatarCardActionsView _dismissCardAnimated:]
  -[CNAvatarCardActionsView _updateAllSeparators]
  -[CNAvatarCardActionsView _updateCellSeparator:forIndexPath:]
  -[CNAvatarCardActionsView _setHighlightedIndexPath:isChange:]
  -[CNAvatarCardActionsView actionsImageFrame]


CNContactSuggestionsCollectionViewCell : UICollectionViewCell
 @property  UIImageView *avatarView
 @property  UIImageView *checkImageView
 @property  UIImageView *checkImageBackgroundView
 @property  UILabel *nameLabel
 @property  UIImage *image
 @property  NSString *displayString

  // class methods
  +[CNContactSuggestionsCollectionViewCell cellIdentifier]

  // instance methods
  -[CNContactSuggestionsCollectionViewCell avatarView]
  -[CNContactSuggestionsCollectionViewCell setDisplayString:]
  -[CNContactSuggestionsCollectionViewCell setupConstraints]
  -[CNContactSuggestionsCollectionViewCell displayString]
  -[CNContactSuggestionsCollectionViewCell setSelected:]
  -[CNContactSuggestionsCollectionViewCell .cxx_destruct]
  -[CNContactSuggestionsCollectionViewCell prepareForReuse]
  -[CNContactSuggestionsCollectionViewCell preferredLayoutAttributesFittingAttributes:]
  -[CNContactSuggestionsCollectionViewCell layoutSubviews]
  -[CNContactSuggestionsCollectionViewCell image]
  -[CNContactSuggestionsCollectionViewCell nameLabel]
  -[CNContactSuggestionsCollectionViewCell initWithFrame:]
  -[CNContactSuggestionsCollectionViewCell setAvatarView:]
  -[CNContactSuggestionsCollectionViewCell setImage:]
  -[CNContactSuggestionsCollectionViewCell traitCollectionDidChange:]
  -[CNContactSuggestionsCollectionViewCell setNameLabel:]
  -[CNContactSuggestionsCollectionViewCell useAccessibleLayout]
  -[CNContactSuggestionsCollectionViewCell setCheckMarkHidden:]
  -[CNContactSuggestionsCollectionViewCell setUpCheckMarkConstraints]
  -[CNContactSuggestionsCollectionViewCell checkImageView]
  -[CNContactSuggestionsCollectionViewCell setCheckImageView:]
  -[CNContactSuggestionsCollectionViewCell checkImageBackgroundView]
  -[CNContactSuggestionsCollectionViewCell setCheckImageBackgroundView:]


CNToneKitPickerStyleProvider : NSObject <TKTonePickerStyleProvider, TKVibrationPickerStyleProvider>
 @property  BOOL tonePickerUsesOpaqueBackground
 @property  long long tonePickerTableViewSeparatorStyle
 @property  UIFont *tonePickerCellTextFont
 @property  UIColor *tonePickerCellTextColor
 @property  UIColor *tonePickerCellHighlightedTextColor
 @property  UIColor *tonePickerCellBackgroundColor
 @property  BOOL wantsCustomTonePickerHeaderView
 @property  UIFont *tonePickerHeaderTextFont
 @property  UIColor *tonePickerHeaderTextColor
 @property  UIColor *tonePickerHeaderTextShadowColor
 @property  {UIOffset=dd} tonePickerHeaderTextShadowOffset
 @property  {UIEdgeInsets=dddd} tonePickerHeaderTextPaddingInsets
 @property  UIColor *tonePickerCustomTableSeparatorColor
 @property  long long tonePickerCustomTableSeparatorBackdropOverlayBlendMode
 @property  BOOL tonePickerHeaderTextShouldBeUppercase
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL vibrationPickerUsesOpaqueBackground
 @property  long long vibrationPickerTableViewSeparatorStyle
 @property  UIFont *vibrationPickerCellTextFont
 @property  UIColor *vibrationPickerCellTextColor
 @property  UIColor *vibrationPickerCellHighlightedTextColor
 @property  UIColor *vibrationPickerCellBackgroundColor
 @property  BOOL wantsCustomVibrationPickerHeaderView
 @property  UIFont *vibrationPickerHeaderTextFont
 @property  UIColor *vibrationPickerHeaderTextColor
 @property  UIColor *vibrationPickerHeaderTextShadowColor
 @property  {UIOffset=dd} vibrationPickerHeaderTextShadowOffset
 @property  {UIEdgeInsets=dddd} vibrationPickerHeaderTextPaddingInsets
 @property  UIColor *vibrationPickerCustomBackgroundColor
 @property  UIColor *vibrationPickerCustomTableSeparatorColor
 @property  long long vibrationPickerCustomTableSeparatorBackdropOverlayBlendMode
 @property  BOOL vibrationPickerHeaderTextShouldBeUppercase

  // instance methods
  -[CNToneKitPickerStyleProvider newBackgroundViewForSelectedTonePickerCell:]
  -[CNToneKitPickerStyleProvider newAccessoryDisclosureIndicatorViewForTonePickerCell]
  -[CNToneKitPickerStyleProvider tonePickerUsesOpaqueBackground]
  -[CNToneKitPickerStyleProvider tonePickerTableViewSeparatorStyle]
  -[CNToneKitPickerStyleProvider tonePickerCellTextFont]
  -[CNToneKitPickerStyleProvider tonePickerCellTextColor]
  -[CNToneKitPickerStyleProvider tonePickerCellHighlightedTextColor]
  -[CNToneKitPickerStyleProvider tonePickerCellBackgroundColor]
  -[CNToneKitPickerStyleProvider wantsCustomTonePickerHeaderView]
  -[CNToneKitPickerStyleProvider tonePickerHeaderTextFont]
  -[CNToneKitPickerStyleProvider tonePickerHeaderTextColor]
  -[CNToneKitPickerStyleProvider tonePickerHeaderTextShadowColor]
  -[CNToneKitPickerStyleProvider tonePickerHeaderTextShadowOffset]
  -[CNToneKitPickerStyleProvider tonePickerHeaderTextPaddingInsets]
  -[CNToneKitPickerStyleProvider tonePickerCustomTableSeparatorColor]
  -[CNToneKitPickerStyleProvider tonePickerCustomTableSeparatorBackdropOverlayBlendMode]
  -[CNToneKitPickerStyleProvider tonePickerHeaderTextShouldBeUppercase]
  -[CNToneKitPickerStyleProvider newBackgroundViewForSelectedVibrationPickerCell:]
  -[CNToneKitPickerStyleProvider newAccessoryDisclosureIndicatorViewForVibrationPickerCell]
  -[CNToneKitPickerStyleProvider vibrationPickerUsesOpaqueBackground]
  -[CNToneKitPickerStyleProvider vibrationPickerTableViewSeparatorStyle]
  -[CNToneKitPickerStyleProvider vibrationPickerCellTextFont]
  -[CNToneKitPickerStyleProvider vibrationPickerCellTextColor]
  -[CNToneKitPickerStyleProvider vibrationPickerCellHighlightedTextColor]
  -[CNToneKitPickerStyleProvider vibrationPickerCellBackgroundColor]
  -[CNToneKitPickerStyleProvider wantsCustomVibrationPickerHeaderView]
  -[CNToneKitPickerStyleProvider vibrationPickerHeaderTextFont]
  -[CNToneKitPickerStyleProvider vibrationPickerHeaderTextColor]
  -[CNToneKitPickerStyleProvider vibrationPickerHeaderTextShadowColor]
  -[CNToneKitPickerStyleProvider vibrationPickerHeaderTextShadowOffset]
  -[CNToneKitPickerStyleProvider vibrationPickerHeaderTextPaddingInsets]
  -[CNToneKitPickerStyleProvider vibrationPickerCustomTableSeparatorColor]
  -[CNToneKitPickerStyleProvider vibrationPickerCustomTableSeparatorBackdropOverlayBlendMode]
  -[CNToneKitPickerStyleProvider vibrationPickerHeaderTextShouldBeUppercase]


CNTextField : UITextField
  // instance methods
  -[CNTextField sizeThatFits:]
  -[CNTextField _baselineOffsetFromBottom]
  -[CNTextField intrinsicContentSize]
  -[CNTextField initWithFrame:]
  -[CNTextField _firstBaselineOffsetFromTop]
  -[CNTextField isLayoutSizeDependentOnPerpendicularAxis]


CNContactEnableGuardianRestrictionsAction : CNContactAction
 @property  CNContainer *container
 @property  CNContactStore *contactStore

  // instance methods
  -[CNContactEnableGuardianRestrictionsAction .cxx_destruct]
  -[CNContactEnableGuardianRestrictionsAction container]
  -[CNContactEnableGuardianRestrictionsAction contactStore]
  -[CNContactEnableGuardianRestrictionsAction initWithContact:inContainer:contactStore:]


CNUINavigationListStyleProvider : NSObject
  // class methods
  +[CNUINavigationListStyleProvider defaultStyle]
  +[CNUINavigationListStyleProvider phoneStyle]
  +[CNUINavigationListStyleProvider carPlayStyle]


CNUINavigationListStyleProviderImpl : NSObject <CNUINavigationListStyle>
 @property  UIColor *cellBackgroundColor
 @property  UIColor *cellBackgroundExpandedColor
 @property  UIColor *cellBackgroundHighlightedColor
 @property  UIColor *cellTitleTextColor
 @property  UIColor *cellTitleTextHighlightedColor
 @property  UIColor *cellSubtitleTextColor
 @property  UIColor *cellSubtitleTextHighlightedColor
 @property  UIColor *detailCellTitleTextColor
 @property  UIColor *detailCellTitleTextHighlightedColor
 @property  UIColor *detailCellSubtitleTextColor
 @property  UIColor *detailCellSubtitleTextHighlightedColor
 @property  UIColor *actionIconFillColor
 @property  UIColor *actionIconFillHighlightedColor
 @property  UIFont *cellTitleFont
 @property  UIFont *cellSubtitleFont
 @property  UIFont *detailCellTitleFont
 @property  UIFont *detailCellSubtitleFont
 @property  double cellUserActionLeftMargin
 @property  double cellTitleLabelFirstBaselineAnchorConstraintConstant
 @property  double cellSubtitleLabelFirstBaselineAnchorConstraintConstant
 @property  double cellContentViewBottomAnchorConstraintConstant
 @property  double detailCellTitleLabelFirstBaselineAnchorConstraintConstant
 @property  double detailCellSubtitleLabelFirstBaselineAnchorConstraintConstant
 @property  double detailCellContentViewBottomAnchorConstraintConstant
 @property  BOOL showCellSeparator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNUINavigationListStyleProviderImpl cellBackgroundColor]
  -[CNUINavigationListStyleProviderImpl cellBackgroundExpandedColor]
  -[CNUINavigationListStyleProviderImpl cellBackgroundHighlightedColor]
  -[CNUINavigationListStyleProviderImpl cellTitleTextColor]
  -[CNUINavigationListStyleProviderImpl cellTitleTextHighlightedColor]
  -[CNUINavigationListStyleProviderImpl cellSubtitleTextColor]
  -[CNUINavigationListStyleProviderImpl cellSubtitleTextHighlightedColor]
  -[CNUINavigationListStyleProviderImpl detailCellTitleTextColor]
  -[CNUINavigationListStyleProviderImpl detailCellTitleTextHighlightedColor]
  -[CNUINavigationListStyleProviderImpl detailCellSubtitleTextColor]
  -[CNUINavigationListStyleProviderImpl detailCellSubtitleTextHighlightedColor]
  -[CNUINavigationListStyleProviderImpl actionIconFillColor]
  -[CNUINavigationListStyleProviderImpl actionIconFillHighlightedColor]
  -[CNUINavigationListStyleProviderImpl cellTitleFont]
  -[CNUINavigationListStyleProviderImpl cellSubtitleFont]
  -[CNUINavigationListStyleProviderImpl detailCellTitleFont]
  -[CNUINavigationListStyleProviderImpl detailCellSubtitleFont]
  -[CNUINavigationListStyleProviderImpl cellUserActionLeftMargin]
  -[CNUINavigationListStyleProviderImpl cellTitleLabelFirstBaselineAnchorConstraintConstant]
  -[CNUINavigationListStyleProviderImpl cellSubtitleLabelFirstBaselineAnchorConstraintConstant]
  -[CNUINavigationListStyleProviderImpl cellContentViewBottomAnchorConstraintConstant]
  -[CNUINavigationListStyleProviderImpl detailCellTitleLabelFirstBaselineAnchorConstraintConstant]
  -[CNUINavigationListStyleProviderImpl detailCellSubtitleLabelFirstBaselineAnchorConstraintConstant]
  -[CNUINavigationListStyleProviderImpl detailCellContentViewBottomAnchorConstraintConstant]
  -[CNUINavigationListStyleProviderImpl showCellSeparator]


CNUIPhoneNavigationListStyleProvider : CNUINavigationListStyleProviderImpl

CNUICarPlayNavigationListStyleProvider : CNUINavigationListStyleProviderImpl
  // instance methods
  -[CNUICarPlayNavigationListStyleProvider cellBackgroundColor]
  -[CNUICarPlayNavigationListStyleProvider cellBackgroundExpandedColor]
  -[CNUICarPlayNavigationListStyleProvider cellBackgroundHighlightedColor]
  -[CNUICarPlayNavigationListStyleProvider cellTitleTextColor]
  -[CNUICarPlayNavigationListStyleProvider cellTitleTextHighlightedColor]
  -[CNUICarPlayNavigationListStyleProvider cellSubtitleTextColor]
  -[CNUICarPlayNavigationListStyleProvider cellSubtitleTextHighlightedColor]
  -[CNUICarPlayNavigationListStyleProvider detailCellTitleTextColor]
  -[CNUICarPlayNavigationListStyleProvider detailCellTitleTextHighlightedColor]
  -[CNUICarPlayNavigationListStyleProvider detailCellSubtitleTextColor]
  -[CNUICarPlayNavigationListStyleProvider detailCellSubtitleTextHighlightedColor]
  -[CNUICarPlayNavigationListStyleProvider actionIconFillColor]
  -[CNUICarPlayNavigationListStyleProvider actionIconFillHighlightedColor]
  -[CNUICarPlayNavigationListStyleProvider cellTitleFont]
  -[CNUICarPlayNavigationListStyleProvider detailCellTitleFont]
  -[CNUICarPlayNavigationListStyleProvider detailCellSubtitleFont]
  -[CNUICarPlayNavigationListStyleProvider cellUserActionLeftMargin]
  -[CNUICarPlayNavigationListStyleProvider cellTitleLabelFirstBaselineAnchorConstraintConstant]
  -[CNUICarPlayNavigationListStyleProvider cellContentViewBottomAnchorConstraintConstant]
  -[CNUICarPlayNavigationListStyleProvider detailCellTitleLabelFirstBaselineAnchorConstraintConstant]
  -[CNUICarPlayNavigationListStyleProvider detailCellSubtitleLabelFirstBaselineAnchorConstraintConstant]
  -[CNUICarPlayNavigationListStyleProvider detailCellContentViewBottomAnchorConstraintConstant]
  -[CNUICarPlayNavigationListStyleProvider showCellSeparator]


CNQuickActionsUsageManager : NSObject
 @property  NSCountedSet *actionsUsageSet
 @property  NSMutableSet *enabledActionIdentifiers
 @property  CNContact *contact
 @property  NSArray *cachedInteractions
 @property  NSDate *cachedInteractionsDate
 @property  BOOL sortsWithDuet

  // class methods
  +[CNQuickActionsUsageManager managerForContact:]
  +[CNQuickActionsUsageManager sortUsingCoreDuetAvailable]

  // instance methods
  -[CNQuickActionsUsageManager contact]
  -[CNQuickActionsUsageManager .cxx_destruct]
  -[CNQuickActionsUsageManager setContact:]
  -[CNQuickActionsUsageManager init]
  -[CNQuickActionsUsageManager setSortsWithDuet:]
  -[CNQuickActionsUsageManager sortsWithDuet]
  -[CNQuickActionsUsageManager actionPerformed:]
  -[CNQuickActionsUsageManager actionsUsageSet]
  -[CNQuickActionsUsageManager enabledActionIdentifiers]
  -[CNQuickActionsUsageManager scoreForAction:]
  -[CNQuickActionsUsageManager cacheEnabledStateForAction:]
  -[CNQuickActionsUsageManager updateCachedEnabledStateForAction:]
  -[CNQuickActionsUsageManager _updateDuetInteractionsIfNeeded]
  -[CNQuickActionsUsageManager sortedActions:]
  -[CNQuickActionsUsageManager setActionsUsageSet:]
  -[CNQuickActionsUsageManager setEnabledActionIdentifiers:]
  -[CNQuickActionsUsageManager cachedInteractions]
  -[CNQuickActionsUsageManager setCachedInteractions:]
  -[CNQuickActionsUsageManager cachedInteractionsDate]
  -[CNQuickActionsUsageManager setCachedInteractionsDate:]


CNTonePickerController : UINavigationController
 @property  TKTonePickerViewController *tonePicker
 @property  <CNPickerControllerDelegate> *delegate

  // instance methods
  -[CNTonePickerController .cxx_destruct]
  -[CNTonePickerController doneButton:]
  -[CNTonePickerController cancelButton:]
  -[CNTonePickerController initWithAlertType:activityAlert:]
  -[CNTonePickerController tonePicker]
  -[CNTonePickerController setTonePicker:]


CNTransportButton : UIButton
 @property  UIImage *image
 @property  long long transportType
 @property  BOOL showBackgroundPlatter
 @property  UIColor *glyphColor

  // class methods
  +[CNTransportButton transportButton]
  +[CNTransportButton transportButtonWithType:]

  // instance methods
  -[CNTransportButton setTransportType:]
  -[CNTransportButton .cxx_destruct]
  -[CNTransportButton setGlyphColor:]
  -[CNTransportButton transportType]
  -[CNTransportButton tintColorDidChange]
  -[CNTransportButton image]
  -[CNTransportButton sizeThatFits:]
  -[CNTransportButton intrinsicContentSize]
  -[CNTransportButton setImage:]
  -[CNTransportButton glyphColor]
  -[CNTransportButton showBackgroundPlatter]
  -[CNTransportButton setShowBackgroundPlatter:]
  -[CNTransportButton _updateImageWithType:]
  -[CNTransportButton _updateTouchInsetsToFillContainerWithSize:]


CNPhotoPickerHeaderViewTextField : UITextField
 @property  double maxWidth

  // instance methods
  -[CNPhotoPickerHeaderViewTextField editingRectForBounds:]
  -[CNPhotoPickerHeaderViewTextField setMaxWidth:]
  -[CNPhotoPickerHeaderViewTextField maxWidth]


CNPhotoPickerHeaderView : UIView <UITextFieldDelegate, UIDropInteractionDelegate, UIGestureRecognizerDelegate>
 @property  CNVisualIdentity *visualIdentity
 @property  NSArray *subviewsConstraints
 @property  CNVisualIdentityAvatarViewController *avatarViewController
 @property  UIButton *clearAvatarImageButton
 @property  UIView *clearAvatarImageButtonBackground
 @property  CAShapeLayer *clearAvatarImageButtonClippingLayer
 @property  CNPhotoPickerHeaderViewTextField *identityNameTextField
 @property  UIButton *clearIdentityNameButton
 @property  UIGestureRecognizer *tapGestureRecognizer
 @property  <CNPhotoPickerHeaderViewDelegate> *delegate
 @property  CNPhotoPickerProviderItem *placeholderProviderItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPhotoPickerHeaderView resignFirstResponder]
  -[CNPhotoPickerHeaderView dropInteraction:sessionDidUpdate:]
  -[CNPhotoPickerHeaderView dropInteraction:performDrop:]
  -[CNPhotoPickerHeaderView textFieldShouldReturn:]
  -[CNPhotoPickerHeaderView setDelegate:]
  -[CNPhotoPickerHeaderView updateConstraints]
  -[CNPhotoPickerHeaderView delegate]
  -[CNPhotoPickerHeaderView gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[CNPhotoPickerHeaderView .cxx_destruct]
  -[CNPhotoPickerHeaderView initWithContact:]
  -[CNPhotoPickerHeaderView dropInteraction:canHandleSession:]
  -[CNPhotoPickerHeaderView layoutSubviews]
  -[CNPhotoPickerHeaderView textFieldDidEndEditing:]
  -[CNPhotoPickerHeaderView tapGestureRecognizer]
  -[CNPhotoPickerHeaderView setTapGestureRecognizer:]
  -[CNPhotoPickerHeaderView didMoveToWindow]
  -[CNPhotoPickerHeaderView textField:shouldChangeCharactersInRange:replacementString:]
  -[CNPhotoPickerHeaderView avatarViewController]
  -[CNPhotoPickerHeaderView setAvatarViewController:]
  -[CNPhotoPickerHeaderView visualIdentity]
  -[CNPhotoPickerHeaderView setVisualIdentity:]
  -[CNPhotoPickerHeaderView initWithVisualIdentity:]
  -[CNPhotoPickerHeaderView subviewsConstraints]
  -[CNPhotoPickerHeaderView setSubviewsConstraints:]
  -[CNPhotoPickerHeaderView didTapHeaderView]
  -[CNPhotoPickerHeaderView didTapClearIdentityNameButton]
  -[CNPhotoPickerHeaderView didTapClearAvatarImageButton]
  -[CNPhotoPickerHeaderView initWithVisualIdentity:avatarViewController:]
  -[CNPhotoPickerHeaderView setupDragAndDrop]
  -[CNPhotoPickerHeaderView setupHeaderViewWithPhotoView:]
  -[CNPhotoPickerHeaderView setupIdentityNameTextFieldAndClearButton]
  -[CNPhotoPickerHeaderView updateIdentityNameTextFieldMaxWidth]
  -[CNPhotoPickerHeaderView setupIdentityNameClearButtonIfNecessary]
  -[CNPhotoPickerHeaderView updatePhotoViewWithUpdatedIdentity:]
  -[CNPhotoPickerHeaderView sizeOfPrimaryAvatar]
  -[CNPhotoPickerHeaderView updateImageViewWithIdentity:]
  -[CNPhotoPickerHeaderView updateIdentityNameTextFieldWithIdentity:]
  -[CNPhotoPickerHeaderView setClearAvatarImageButtonHidden:]
  -[CNPhotoPickerHeaderView setupClearAvatarImageButton]
  -[CNPhotoPickerHeaderView updateIdentityNameTextFieldPlaceholderWithText:]
  -[CNPhotoPickerHeaderView placeholderProviderItem]
  -[CNPhotoPickerHeaderView setPlaceholderProviderItem:]
  -[CNPhotoPickerHeaderView clearAvatarImageButton]
  -[CNPhotoPickerHeaderView setClearAvatarImageButton:]
  -[CNPhotoPickerHeaderView clearAvatarImageButtonBackground]
  -[CNPhotoPickerHeaderView setClearAvatarImageButtonBackground:]
  -[CNPhotoPickerHeaderView clearAvatarImageButtonClippingLayer]
  -[CNPhotoPickerHeaderView setClearAvatarImageButtonClippingLayer:]
  -[CNPhotoPickerHeaderView identityNameTextField]
  -[CNPhotoPickerHeaderView setIdentityNameTextField:]
  -[CNPhotoPickerHeaderView clearIdentityNameButton]
  -[CNPhotoPickerHeaderView setClearIdentityNameButton:]


CNPhotoPickerHeaderButton : UIButton
  // instance methods
  -[CNPhotoPickerHeaderButton _supportsMacIdiom]


CNPhotoPickerSectionHeader : UICollectionReusableView
 @property  UIStackView *stackView
 @property  UILabel *titleLabel
 @property  UIButton *actionButton
 @property  @? actionBlock

  // class methods
  +[CNPhotoPickerSectionHeader titleLabelFont]
  +[CNPhotoPickerSectionHeader actionButtonFont]
  +[CNPhotoPickerSectionHeader reusableIdentifier]
  +[CNPhotoPickerSectionHeader heightNeededForAccessibilityLayoutIncludingActionButton:]

  // instance methods
  -[CNPhotoPickerSectionHeader setStackView:]
  -[CNPhotoPickerSectionHeader stackView]
  -[CNPhotoPickerSectionHeader setupConstraints]
  -[CNPhotoPickerSectionHeader updateStyle:]
  -[CNPhotoPickerSectionHeader .cxx_destruct]
  -[CNPhotoPickerSectionHeader actionBlock]
  -[CNPhotoPickerSectionHeader prepareForReuse]
  -[CNPhotoPickerSectionHeader initWithFrame:]
  -[CNPhotoPickerSectionHeader traitCollectionDidChange:]
  -[CNPhotoPickerSectionHeader titleLabel]
  -[CNPhotoPickerSectionHeader actionButton]
  -[CNPhotoPickerSectionHeader setActionBlock:]
  -[CNPhotoPickerSectionHeader actionButtonPressed:]
  -[CNPhotoPickerSectionHeader updateDynamicStackViewProperties]


CNSharingProfileOnboardingPhotoSelectionResult : NSObject
 @property  UIImage *originalImage
 @property  UIImage *compositedImage
 @property  NSString *variantName
 @property  long long avatarType
 @property  BOOL wasSelectedInFullPhotoPicker
 @property  NSData *memojiMetadata

  // instance methods
  -[CNSharingProfileOnboardingPhotoSelectionResult setOriginalImage:]
  -[CNSharingProfileOnboardingPhotoSelectionResult .cxx_destruct]
  -[CNSharingProfileOnboardingPhotoSelectionResult originalImage]
  -[CNSharingProfileOnboardingPhotoSelectionResult memojiMetadata]
  -[CNSharingProfileOnboardingPhotoSelectionResult setMemojiMetadata:]
  -[CNSharingProfileOnboardingPhotoSelectionResult variantName]
  -[CNSharingProfileOnboardingPhotoSelectionResult setVariantName:]
  -[CNSharingProfileOnboardingPhotoSelectionResult compositedImage]
  -[CNSharingProfileOnboardingPhotoSelectionResult setCompositedImage:]
  -[CNSharingProfileOnboardingPhotoSelectionResult avatarType]
  -[CNSharingProfileOnboardingPhotoSelectionResult setAvatarType:]
  -[CNSharingProfileOnboardingPhotoSelectionResult wasSelectedInFullPhotoPicker]
  -[CNSharingProfileOnboardingPhotoSelectionResult setWasSelectedInFullPhotoPicker:]


CNContactSuggestionViewControllerLabeledValueDataSource : NSObject <CNContactSuggestionViewControllerDataSource>
 @property  CNLabeledValue *labeledValue
 @property  unsigned long type
 @property  NSString *appName
 @property  NSAttributedString *formattedSnippet
 @property  NSString *title
 @property  NSString *date
 @property  NSString *with
 @property  NSURL *url
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactSuggestionViewControllerLabeledValueDataSource appName]
  -[CNContactSuggestionViewControllerLabeledValueDataSource labeledValue]
  -[CNContactSuggestionViewControllerLabeledValueDataSource type]
  -[CNContactSuggestionViewControllerLabeledValueDataSource date]
  -[CNContactSuggestionViewControllerLabeledValueDataSource .cxx_destruct]
  -[CNContactSuggestionViewControllerLabeledValueDataSource title]
  -[CNContactSuggestionViewControllerLabeledValueDataSource url]
  -[CNContactSuggestionViewControllerLabeledValueDataSource setLabeledValue:]
  -[CNContactSuggestionViewControllerLabeledValueDataSource formattedSnippet]
  -[CNContactSuggestionViewControllerLabeledValueDataSource with]
  -[CNContactSuggestionViewControllerLabeledValueDataSource initWithLabeledValue:]


CNCardDowntimeWhitelistGroupItem : CNPropertyGroupItem
  // instance methods
  -[CNCardDowntimeWhitelistGroupItem isReadonly]
  -[CNCardDowntimeWhitelistGroupItem saveChangesImmediately:]
  -[CNCardDowntimeWhitelistGroupItem canRemove]


CNUIPropertyGroupItemIDSHandle : NSObject <CNUIIDSHandle>
 @property  CNUIContactPropertyIDSHandle *contactPropertyHandle
 @property  CNContactProperty *contactProperty
 @property  NSString *_cnui_IDSIDRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNUIPropertyGroupItemIDSHandle isSupportedGroupItem:]
  +[CNUIPropertyGroupItemIDSHandle supportsPropertyGroupItem:]

  // instance methods
  -[CNUIPropertyGroupItemIDSHandle .cxx_destruct]
  -[CNUIPropertyGroupItemIDSHandle copyWithZone:]
  -[CNUIPropertyGroupItemIDSHandle isEqual:]
  -[CNUIPropertyGroupItemIDSHandle contactProperty]
  -[CNUIPropertyGroupItemIDSHandle _cnui_IDSIDRepresentation]
  -[CNUIPropertyGroupItemIDSHandle initWithPropertyGroupItem:]
  -[CNUIPropertyGroupItemIDSHandle contactPropertyHandle]


CNContactContentDisplayViewController : UIViewController <CNPropertyActionDelegate, CNPropertyCellDelegate, CNPropertyGroupItemDelegate, CNContactGroupPickerDelegate, UIPopoverControllerDelegate, CNContactHeaderViewDelegate, CNContactContentViewControllerDelegate, UIAdaptivePresentationControllerDelegate, CNShareLocationProtocol, CNUIObjectViewControllerDelegate, CNContactInlineActionsViewControllerDelegate_Internal, CNUIGeminiDataSourceDelegate, NSUserActivityDelegate, CNContactContainerPickerViewControllerDelegate, CNUIContactSaveDelegate, CNContactContentNavigationItemTarget, CNContactActionDelegate, CNPresenterDelegate, CNContactContentNavigationItemProviding, UITableViewDelegate, UITableViewDataSource, UIViewControllerRestoration>
 @property  CNMutableContact *mutableContact
 @property  NSMutableArray *issuedSaveRequestIdentifiers
 @property  CNMutableContact *shadowCopyOfReadonlyContact
 @property  CNContactView *contactView
 @property  CNContactFormatter *contactFormatter
 @property  CNContactHeaderDisplayView *contactHeaderView
 @property  CNContactContainerPickerViewController *containerPicker
 @property  NSMapTable *cachedLabelWidths
 @property  NSArray *extraRightBarButtonItems
 @property  NSArray *extraLeftBarButtonItems
 @property  CNPropertyGroupsDataSource *propertyGroupsDataSource
 @property  CNCardGroup *cardTopGroup
 @property  CNCardGroup *cardBottomGroup
 @property  CNCardGroup *cardActionsGroup
 @property  CNCardGroup *cardShareLocationGroup
 @property  CNCardGroup *cardMedicalIDGroup
 @property  CNCardGroup *cardBlockContactGroup
 @property  CNCardLinkedCardsGroup *cardLinkedCardsGroup
 @property  NSArray *customActions
 @property  CNPropertyNoteCell *noteCell
 @property  CNContactToggleBlockCallerAction *blockAction
 @property  CNContactAddNewFieldAction *addNewFieldAction
 @property  CNContactUpdateExistingContactAction *updateExistingContactAction
 @property  CNContactSuggestionAction *suggestedContactAction
 @property  CNContactClearRecentsDataAction *clearRecentsDataAction
 @property  CNContactSelectContainersAction *selectContainersAction
 @property  CNContactActionProvider *actionProvider
 @property  NSArray *activatedConstraints
 @property  NSLayoutConstraint *headerHeightConstraint
 @property  CNShareLocationController *shareLocationController
 @property  CNContactInlineActionsViewController *actionsViewController
 @property  CNContactActionsContainerView *actionsWrapperView
 @property  UIView *headerDropShadowView
 @property  CNMedicalIDAction *medicalIDAction
 @property  CNEmergencyContactAction *emergencyContactAction
 @property  <CNHealthStoreManagerToken> *medicalIDRegistrationToken
 @property  <CNCancelable> *medicalIDLookupToken
 @property  NSString *emergencyNumberIdentifier
 @property  CNContactAction *ignoreContactAction
 @property  CNSiriContactContextProvider *siriContextProvider
 @property  <CNCancelable> *iMessageIDSLookupToken
 @property  <CNCancelable> *faceTimeIDSLookupToken
 @property  NSDictionary *userActivityUserInfo
 @property  HKHealthStore *healthStore
 @property  BOOL outOfProcessSetupComplete
 @property  BOOL isPresentingFullscreenForOutOfProcess
 @property  BOOL didSetFirstResponder
 @property  NSArray *highlightedProperties
 @property  BOOL highlightedPropertyImportant
 @property  CNUIUserActionListDataSource *actionsDataSource
 @property  BOOL contactSupportsTTYCalls
 @property  UIKeyCommand *editCommand
 @property  UIKeyCommand *cancelCommand
 @property  double keyboardVerticalOverlap
 @property  NSArray *preEditLeftBarButtonItems
 @property  CNUIContactsEnvironment *environment
 @property  CNContactViewCache *contactViewCache
 @property  CNUIUserActivityManager *activityManager
 @property  CNUIGeminiDataSource *geminiDataSource
 @property  BOOL runningPPT
 @property  BOOL shouldIgnoreBlockListChange
 @property  BOOL didSetNewContact
 @property  BOOL forcesTransparentBackground
 @property  CNPolicy *policy
 @property  NSDictionary *linkedPoliciesByContactIdentifier
 @property  NSArray *cardActions
 @property  CNContactStore *contactStore
 @property  CNManagedConfiguration *managedConfiguration
 @property  CNAccessAuthorization *accessAuthorization
 @property  NSArray *missingRequiredKeys
 @property  NSArray *originalContacts
 @property  BOOL allowsEditInApp
 @property  BOOL shouldDrawNavigationBar
 @property  NSString *initialPrompt
 @property  BOOL shouldIgnoreContactStoreDidChangeNotification
 @property  NSArray *prohibitedPropertyKeys
 @property  CNContactContentNavigationItemUpdater *contactNavigationItemUpdater
 @property  <CNUIContactSaveExecutor> *saveLinkedContactsExecutor
 @property  CNContactRecentsReference *recentsData
 @property  BOOL showingMeContact
 @property  NSDictionary *propertyGroups
 @property  CNCardFaceTimeGroup *cardFaceTimeGroup
 @property  NSMutableArray *displayGroups
 @property  long long mode
 @property  CNContact *contact
 @property  CNContactContentViewControllerConfiguration *contactViewConfiguration
 @property  CNContactEditAuthorizationManager *editAuthorizationManager
 @property  UIViewController *personHeaderViewController
 @property  CNCardGroup *cardFooterGroup
 @property  <CNContactContentDisplayViewControllerDelegate> *delegate
 @property  <CNPresenterDelegate> *presentingDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isPresentingModalViewController
 @property  <CNContactContentNavigationItemDelegate> *navigationItemDelegate
 @property  UINavigationItem *effectiveNavigationItem
 @property  UIBarButtonItem *doneButtonItem

  // class methods
  +[CNContactContentDisplayViewController descriptorForRequiredKeys]
  +[CNContactContentDisplayViewController viewControllerWithRestorationIdentifierPath:coder:]
  +[CNContactContentDisplayViewController tableViewStyle]
  +[CNContactContentDisplayViewController descriptorForRequiredKeysForContact:]
  +[CNContactContentDisplayViewController descriptorForRequiredKeysWithDescription:]
  +[CNContactContentDisplayViewController boolStateRestorationProperties]
  +[CNContactContentDisplayViewController shouldShowGeminiForResult:contact:]
  +[CNContactContentDisplayViewController createActionsControllerWithActionListDataSource:environment:]
  +[CNContactContentDisplayViewController actionModelIncludesTTY:]

  // instance methods
  -[CNContactContentDisplayViewController managedConfiguration]
  -[CNContactContentDisplayViewController isOutOfProcess]
  -[CNContactContentDisplayViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNContactContentDisplayViewController tableView:heightForRowAtIndexPath:]
  -[CNContactContentDisplayViewController setManagedConfiguration:]
  -[CNContactContentDisplayViewController encodeRestorableStateWithCoder:]
  -[CNContactContentDisplayViewController setContactStore:]
  -[CNContactContentDisplayViewController presentingDelegate]
  -[CNContactContentDisplayViewController tableView:cellForRowAtIndexPath:]
  -[CNContactContentDisplayViewController tableView:shouldHaveFullLengthBottomSeparatorForSection:]
  -[CNContactContentDisplayViewController tableView:numberOfRowsInSection:]
  -[CNContactContentDisplayViewController tableView:shouldHighlightRowAtIndexPath:]
  -[CNContactContentDisplayViewController activityManager]
  -[CNContactContentDisplayViewController numberOfSectionsInTableView:]
  -[CNContactContentDisplayViewController tableView:estimatedHeightForRowAtIndexPath:]
  -[CNContactContentDisplayViewController initWithEnvironment:]
  -[CNContactContentDisplayViewController updateViewConstraints]
  -[CNContactContentDisplayViewController setPresentingDelegate:]
  -[CNContactContentDisplayViewController _canShowWhileLocked]
  -[CNContactContentDisplayViewController setRunningPPT:]
  -[CNContactContentDisplayViewController setNeedsReload]
  -[CNContactContentDisplayViewController presentationControllerWillDismiss:]
  -[CNContactContentDisplayViewController contact]
  -[CNContactContentDisplayViewController reloadDataIfNeeded]
  -[CNContactContentDisplayViewController setupConstraints]
  -[CNContactContentDisplayViewController healthStore]
  -[CNContactContentDisplayViewController scrollViewDidScroll:]
  -[CNContactContentDisplayViewController setActionProvider:]
  -[CNContactContentDisplayViewController setDelegate:]
  -[CNContactContentDisplayViewController setHealthStore:]
  -[CNContactContentDisplayViewController contentSizeCategoryDidChange:]
  -[CNContactContentDisplayViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[CNContactContentDisplayViewController medicalIDLookupToken]
  -[CNContactContentDisplayViewController tableView:didSelectRowAtIndexPath:]
  -[CNContactContentDisplayViewController contactViewCache]
  -[CNContactContentDisplayViewController delegate]
  -[CNContactContentDisplayViewController actionDidFinish:]
  -[CNContactContentDisplayViewController initWithNibName:bundle:]
  -[CNContactContentDisplayViewController setProhibitedPropertyKeys:]
  -[CNContactContentDisplayViewController viewWillLayoutSubviews]
  -[CNContactContentDisplayViewController viewDidAppear:]
  -[CNContactContentDisplayViewController tableView:titleForHeaderInSection:]
  -[CNContactContentDisplayViewController dealloc]
  -[CNContactContentDisplayViewController prohibitedPropertyKeys]
  -[CNContactContentDisplayViewController mode]
  -[CNContactContentDisplayViewController .cxx_destruct]
  -[CNContactContentDisplayViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[CNContactContentDisplayViewController viewDidLoad]
  -[CNContactContentDisplayViewController needsReload]
  -[CNContactContentDisplayViewController viewWillAppear:]
  -[CNContactContentDisplayViewController loadView]
  -[CNContactContentDisplayViewController viewDidLayoutSubviews]
  -[CNContactContentDisplayViewController setMode:]
  -[CNContactContentDisplayViewController setMedicalIDLookupToken:]
  -[CNContactContentDisplayViewController tableView:heightForHeaderInSection:]
  -[CNContactContentDisplayViewController hostingViewControllerForController:]
  -[CNContactContentDisplayViewController localeDidChange:]
  -[CNContactContentDisplayViewController updateUserActivityState:]
  -[CNContactContentDisplayViewController viewWillDisappear:]
  -[CNContactContentDisplayViewController contactViewController:didDeleteContact:]
  -[CNContactContentDisplayViewController setContact:]
  -[CNContactContentDisplayViewController canBecomeFirstResponder]
  -[CNContactContentDisplayViewController setPolicy:]
  -[CNContactContentDisplayViewController actionProvider]
  -[CNContactContentDisplayViewController tableView:didEndDisplayingCell:forRowAtIndexPath:]
  -[CNContactContentDisplayViewController contactStore]
  -[CNContactContentDisplayViewController setIssuedSaveRequestIdentifiers:]
  -[CNContactContentDisplayViewController updateContact:]
  -[CNContactContentDisplayViewController adaptivePresentationStyleForPresentationController:]
  -[CNContactContentDisplayViewController contactFormatter]
  -[CNContactContentDisplayViewController contactStoreDidChangeWithNotification:]
  -[CNContactContentDisplayViewController _updateUserActivity]
  -[CNContactContentDisplayViewController setTitle:]
  -[CNContactContentDisplayViewController environment]
  -[CNContactContentDisplayViewController tableView:shouldDrawBottomSeparatorForSection:]
  -[CNContactContentDisplayViewController setContactFormatter:]
  -[CNContactContentDisplayViewController tableView:willDisplayHeaderView:forSection:]
  -[CNContactContentDisplayViewController policy]
  -[CNContactContentDisplayViewController issuedSaveRequestIdentifiers]
  -[CNContactContentDisplayViewController presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:]
  -[CNContactContentDisplayViewController tableView:titleForFooterInSection:]
  -[CNContactContentDisplayViewController tableView:willDisplayFooterView:forSection:]
  -[CNContactContentDisplayViewController tableView:heightForFooterInSection:]
  -[CNContactContentDisplayViewController tableView:viewForFooterInSection:]
  -[CNContactContentDisplayViewController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[CNContactContentDisplayViewController tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:]
  -[CNContactContentDisplayViewController tableView:shouldShowMenuForRowAtIndexPath:]
  -[CNContactContentDisplayViewController tableView:canPerformAction:forRowAtIndexPath:withSender:]
  -[CNContactContentDisplayViewController tableView:performAction:forRowAtIndexPath:withSender:]
  -[CNContactContentDisplayViewController contentScrollViewForEdge:]
  -[CNContactContentDisplayViewController tableView:shouldDrawTopSeparatorForSection:]
  -[CNContactContentDisplayViewController setForcesTransparentBackground:]
  -[CNContactContentDisplayViewController geminiDataSource]
  -[CNContactContentDisplayViewController didChangeToShowTitle:]
  -[CNContactContentDisplayViewController toggleEditing:]
  -[CNContactContentDisplayViewController contactDisplayViewController:shouldPerformDefaultActionForContact:propertyKey:propertyIdentifier:]
  -[CNContactContentDisplayViewController action:prepareChildContactViewController:sender:]
  -[CNContactContentDisplayViewController action:presentViewController:sender:]
  -[CNContactContentDisplayViewController action:dismissViewController:sender:]
  -[CNContactContentDisplayViewController action:pushViewController:sender:]
  -[CNContactContentDisplayViewController actionDidUpdate:]
  -[CNContactContentDisplayViewController actionWasCanceled:]
  -[CNContactContentDisplayViewController contactView]
  -[CNContactContentDisplayViewController contactHeaderView]
  -[CNContactContentDisplayViewController setPersonHeaderViewController:]
  -[CNContactContentDisplayViewController personHeaderViewController]
  -[CNContactContentDisplayViewController cardTopGroup]
  -[CNContactContentDisplayViewController cardBottomGroup]
  -[CNContactContentDisplayViewController cardFooterGroup]
  -[CNContactContentDisplayViewController favoritesDidChangeWithNotification:]
  -[CNContactContentDisplayViewController _refetchContact]
  -[CNContactContentDisplayViewController originalContacts]
  -[CNContactContentDisplayViewController reloadDataPreservingChanges:]
  -[CNContactContentDisplayViewController addActionWithTitle:menuProvider:inGroup:destructive:]
  -[CNContactContentDisplayViewController addActionWithTitle:target:selector:menuProvider:inGroup:destructive:]
  -[CNContactContentDisplayViewController addActionWithTitle:target:selector:inGroup:destructive:]
  -[CNContactContentDisplayViewController addActionWithTitle:target:selector:inGroup:]
  -[CNContactContentDisplayViewController removeActionWithTarget:selector:inGroup:]
  -[CNContactContentDisplayViewController reloadCardGroup:forTableView:]
  -[CNContactContentDisplayViewController navigationItemController]
  -[CNContactContentDisplayViewController updateWindowTitleForAppearing:]
  -[CNContactContentDisplayViewController saveWasAuthorized]
  -[CNContactContentDisplayViewController saveChanges]
  -[CNContactContentDisplayViewController prepareContactDidAppearForPPT]
  -[CNContactContentDisplayViewController sender:presentViewController:]
  -[CNContactContentDisplayViewController centeredSourceRect:inContactView:]
  -[CNContactContentDisplayViewController setBackgroundColorIfNeededForPresentedViewController:]
  -[CNContactContentDisplayViewController sender:dismissViewController:]
  -[CNContactContentDisplayViewController sender:dismissViewController:completionHandler:]
  -[CNContactContentDisplayViewController isPresentingModalViewController]
  -[CNContactContentDisplayViewController propertyItemCanIgnoreGuardianRestrictions]
  -[CNContactContentDisplayViewController isSuggestedContact]
  -[CNContactContentDisplayViewController setNeedsReloadLazy]
  -[CNContactContentDisplayViewController _updateContact:withMissingKeysFromRequiredKeys:]
  -[CNContactContentDisplayViewController _removeUnauthorizedKeysFromContact:]
  -[CNContactContentDisplayViewController _didCompleteWithContact:]
  -[CNContactContentDisplayViewController updateWithNewContact:]
  -[CNContactContentDisplayViewController createdNewContact:]
  -[CNContactContentDisplayViewController updatedExistingContact:]
  -[CNContactContentDisplayViewController reloadUnifiedContact]
  -[CNContactContentDisplayViewController setCancelKeyboardShortcutEnabled:]
  -[CNContactContentDisplayViewController setEditKeyboardShortcutEnabled:]
  -[CNContactContentDisplayViewController contactViewConfiguration]
  -[CNContactContentDisplayViewController setContactViewConfiguration:]
  -[CNContactContentDisplayViewController setOriginalContacts:]
  -[CNContactContentDisplayViewController showingMeContact]
  -[CNContactContentDisplayViewController setShowingMeContact:]
  -[CNContactContentDisplayViewController allowsEditInApp]
  -[CNContactContentDisplayViewController setAllowsEditInApp:]
  -[CNContactContentDisplayViewController accessAuthorization]
  -[CNContactContentDisplayViewController setAccessAuthorization:]
  -[CNContactContentDisplayViewController linkedPoliciesByContactIdentifier]
  -[CNContactContentDisplayViewController setLinkedPoliciesByContactIdentifier:]
  -[CNContactContentDisplayViewController missingRequiredKeys]
  -[CNContactContentDisplayViewController setMissingRequiredKeys:]
  -[CNContactContentDisplayViewController shouldDrawNavigationBar]
  -[CNContactContentDisplayViewController setShouldDrawNavigationBar:]
  -[CNContactContentDisplayViewController initialPrompt]
  -[CNContactContentDisplayViewController setInitialPrompt:]
  -[CNContactContentDisplayViewController saveLinkedContactsExecutor]
  -[CNContactContentDisplayViewController setSaveLinkedContactsExecutor:]
  -[CNContactContentDisplayViewController shouldIgnoreContactStoreDidChangeNotification]
  -[CNContactContentDisplayViewController setShouldIgnoreContactStoreDidChangeNotification:]
  -[CNContactContentDisplayViewController cardFaceTimeGroup]
  -[CNContactContentDisplayViewController setCardFaceTimeGroup:]
  -[CNContactContentDisplayViewController recentsData]
  -[CNContactContentDisplayViewController setRecentsData:]
  -[CNContactContentDisplayViewController propertyGroups]
  -[CNContactContentDisplayViewController displayGroups]
  -[CNContactContentDisplayViewController setDisplayGroups:]
  -[CNContactContentDisplayViewController editAuthorizationManager]
  -[CNContactContentDisplayViewController setEditAuthorizationManager:]
  -[CNContactContentDisplayViewController activatedConstraints]
  -[CNContactContentDisplayViewController setActivatedConstraints:]
  -[CNContactContentDisplayViewController headerHeightConstraint]
  -[CNContactContentDisplayViewController setHeaderHeightConstraint:]
  -[CNContactContentDisplayViewController outOfProcessSetupComplete]
  -[CNContactContentDisplayViewController setOutOfProcessSetupComplete:]
  -[CNContactContentDisplayViewController didSetFirstResponder]
  -[CNContactContentDisplayViewController setDidSetFirstResponder:]
  -[CNContactContentDisplayViewController editCommand]
  -[CNContactContentDisplayViewController setEditCommand:]
  -[CNContactContentDisplayViewController cancelCommand]
  -[CNContactContentDisplayViewController setCancelCommand:]
  -[CNContactContentDisplayViewController runningPPT]
  -[CNContactContentDisplayViewController didSetNewContact]
  -[CNContactContentDisplayViewController setDidSetNewContact:]
  -[CNContactContentDisplayViewController shouldShowActionsForAvatarView:]
  -[CNContactContentDisplayViewController cardActions]
  -[CNContactContentDisplayViewController shouldShowGemini]
  -[CNContactContentDisplayViewController mutableContact]
  -[CNContactContentDisplayViewController actionsViewController]
  -[CNContactContentDisplayViewController setActionsViewController:]
  -[CNContactContentDisplayViewController adjustInsetsForKeyboardOverlap:]
  -[CNContactContentDisplayViewController preEditLeftBarButtonItems]
  -[CNContactContentDisplayViewController setPreEditLeftBarButtonItems:]
  -[CNContactContentDisplayViewController extraLeftBarButtonItems]
  -[CNContactContentDisplayViewController setExtraLeftBarButtonItems:]
  -[CNContactContentDisplayViewController extraRightBarButtonItems]
  -[CNContactContentDisplayViewController setExtraRightBarButtonItems:]
  -[CNContactContentDisplayViewController actionsDataSource]
  -[CNContactContentDisplayViewController setActionsDataSource:]
  -[CNContactContentDisplayViewController viewController:presentationControllerWillDismiss:]
  -[CNContactContentDisplayViewController shadowCopyOfReadonlyContact]
  -[CNContactContentDisplayViewController keyboardDidShowNotification:]
  -[CNContactContentDisplayViewController keyboardWillHideNotification:]
  -[CNContactContentDisplayViewController propertyCell:didUpdateItem:withNewLabel:]
  -[CNContactContentDisplayViewController propertyCell:didUpdateItem:withNewValue:]
  -[CNContactContentDisplayViewController propertyCell:didDeleteLabel:forGroup:]
  -[CNContactContentDisplayViewController propertyCell:performActionForItem:withTransportType:]
  -[CNContactContentDisplayViewController propertyCellDidChangeLayout:]
  -[CNContactContentDisplayViewController sharedActionsDataSource]
  -[CNContactContentDisplayViewController headerPhotoDidUpdate]
  -[CNContactContentDisplayViewController headerViewDidUpdateLabelSizes]
  -[CNContactContentDisplayViewController viewControllerForHeaderView:]
  -[CNContactContentDisplayViewController headerViewDidPickPreferredChannel:]
  -[CNContactContentDisplayViewController isNicknameProhibited]
  -[CNContactContentDisplayViewController headerView:didAcceptDropOfImageData:]
  -[CNContactContentDisplayViewController presentViewController:sourceView:]
  -[CNContactContentDisplayViewController sharingStatusDidChange]
  -[CNContactContentDisplayViewController contactInlineActionsViewController:shouldPerformActionOfType:withContactProperty:]
  -[CNContactContentDisplayViewController contactInlineActionsViewControllerWillPresentDisambiguationUI:]
  -[CNContactContentDisplayViewController contactInlineActionsViewControllerDidDismissDisambiguationUI:]
  -[CNContactContentDisplayViewController geminiDataSourceDidUpdate:]
  -[CNContactContentDisplayViewController navigationItemDelegate]
  -[CNContactContentDisplayViewController setNavigationItemDelegate:]
  -[CNContactContentDisplayViewController effectiveNavigationItem]
  -[CNContactContentDisplayViewController doneButtonItem]
  -[CNContactContentDisplayViewController initWithContact:contactViewConfiguration:]
  -[CNContactContentDisplayViewController contactViewConfigurationDidUpdate]
  -[CNContactContentDisplayViewController isHeaderViewPhotoProhibited]
  -[CNContactContentDisplayViewController prepareCell:]
  -[CNContactContentDisplayViewController cardGroupForProperty:]
  -[CNContactContentDisplayViewController indexPathOfDisplayedPropertyItem:]
  -[CNContactContentDisplayViewController _policyForContact:mode:]
  -[CNContactContentDisplayViewController updateEditNavigationItemsAnimated:]
  -[CNContactContentDisplayViewController cancelAsyncLookups]
  -[CNContactContentDisplayViewController loadContactViewControllerViews]
  -[CNContactContentDisplayViewController setupViewHierarchyIncludingAvatarHeader:]
  -[CNContactContentDisplayViewController shouldDisplayAvatarHeaderView]
  -[CNContactContentDisplayViewController setupTableHeaderView]
  -[CNContactContentDisplayViewController isStandardGroup:]
  -[CNContactContentDisplayViewController updateOutOfProcessFullscreenPresentationIfNeeded]
  -[CNContactContentDisplayViewController _modalPresentationStyleForViewController:]
  -[CNContactContentDisplayViewController _phoneticNameForValue:currentPhoneticName:property:]
  -[CNContactContentDisplayViewController _currentTopVisibleGroupInContactView:]
  -[CNContactContentDisplayViewController _scrollContactView:toVisibleGroup:]
  -[CNContactContentDisplayViewController setMenuProviderForCell:forActionGroupItem:]
  -[CNContactContentDisplayViewController _labelWidthKeyForGroup:]
  -[CNContactContentDisplayViewController _labelWidthKeyForItem:]
  -[CNContactContentDisplayViewController _updateCachedLabelWidthsForItem:]
  -[CNContactContentDisplayViewController _updateCachedLabelWidthsForGroup:]
  -[CNContactContentDisplayViewController _updateCachedLabelWidths]
  -[CNContactContentDisplayViewController _setNeedsUpdateCachedLabelWidths]
  -[CNContactContentDisplayViewController _updateCachedLabelWidthsIfNeeded]
  -[CNContactContentDisplayViewController _updateLabelWidthForCell:]
  -[CNContactContentDisplayViewController _updateLabelWidthsForAllVisibleCells]
  -[CNContactContentDisplayViewController removeLinkedContact:]
  -[CNContactContentDisplayViewController cleanupRecentImageMetadata]
  -[CNContactContentDisplayViewController desiredHeightForWidth:]
  -[CNContactContentDisplayViewController requiredSizeForVisibleTableView]
  -[CNContactContentDisplayViewController updateContactsViewWithBlock:completion:]
  -[CNContactContentDisplayViewController setupActionsPreservingChanges:]
  -[CNContactContentDisplayViewController _setupSuggestionActions]
  -[CNContactContentDisplayViewController _propertyGroupsForKeys:]
  -[CNContactContentDisplayViewController _addNewFieldAction]
  -[CNContactContentDisplayViewController groupClassForProperty:]
  -[CNContactContentDisplayViewController _loadPropertyGroups]
  -[CNContactContentDisplayViewController _reloadPropertyGroupsPreservingChanges:]
  -[CNContactContentDisplayViewController _reloadMedicalIDGroup]
  -[CNContactContentDisplayViewController shouldReallyShowLinkedContacts]
  -[CNContactContentDisplayViewController _reloadLinkedCardsGroup]
  -[CNContactContentDisplayViewController _reloadGeminiGroupPreservingChanges:]
  -[CNContactContentDisplayViewController _validateGroup:]
  -[CNContactContentDisplayViewController _saveChangesForGroups:]
  -[CNContactContentDisplayViewController globalHeaderHeightForContentOffset:contentInset:]
  -[CNContactContentDisplayViewController contentOffsetYForGlobalHeaderHeight:contentInset:]
  -[CNContactContentDisplayViewController updateHeaderHeightToMatchScrollViewState:scrollDirection:animated:]
  -[CNContactContentDisplayViewController updateHeaderConstraintForGlobalHeaderHeight:direction:animated:]
  -[CNContactContentDisplayViewController isScrollViewControllingHeaderResizeAnimation:]
  -[CNContactContentDisplayViewController scrollScrollViewAllTheWayUp:]
  -[CNContactContentDisplayViewController initializeTableViewsForHeaderHeight]
  -[CNContactContentDisplayViewController insetsForContactTableView:]
  -[CNContactContentDisplayViewController scrollIndicatorInsetsForContactTableView:withContentInsets:]
  -[CNContactContentDisplayViewController updateTableView:contentInsetsTo:withScrollIndicatorInsets:]
  -[CNContactContentDisplayViewController applyContactStyle]
  -[CNContactContentDisplayViewController highlightedPropertyImportant]
  -[CNContactContentDisplayViewController setHighlightedPropertyImportant:]
  -[CNContactContentDisplayViewController setMutableContact:]
  -[CNContactContentDisplayViewController setShadowCopyOfReadonlyContact:]
  -[CNContactContentDisplayViewController propertyGroupsDataSource]
  -[CNContactContentDisplayViewController setPropertyGroupsDataSource:]
  -[CNContactContentDisplayViewController setContactHeaderView:]
  -[CNContactContentDisplayViewController setContactView:]
  -[CNContactContentDisplayViewController containerPicker]
  -[CNContactContentDisplayViewController setContainerPicker:]
  -[CNContactContentDisplayViewController isPresentingFullscreenForOutOfProcess]
  -[CNContactContentDisplayViewController setIsPresentingFullscreenForOutOfProcess:]
  -[CNContactContentDisplayViewController cachedLabelWidths]
  -[CNContactContentDisplayViewController setCachedLabelWidths:]
  -[CNContactContentDisplayViewController cardMedicalIDGroup]
  -[CNContactContentDisplayViewController setCardMedicalIDGroup:]
  -[CNContactContentDisplayViewController cardLinkedCardsGroup]
  -[CNContactContentDisplayViewController setCardLinkedCardsGroup:]
  -[CNContactContentDisplayViewController customActions]
  -[CNContactContentDisplayViewController setCustomActions:]
  -[CNContactContentDisplayViewController noteCell]
  -[CNContactContentDisplayViewController setNoteCell:]
  -[CNContactContentDisplayViewController addNewFieldAction]
  -[CNContactContentDisplayViewController setAddNewFieldAction:]
  -[CNContactContentDisplayViewController suggestedContactAction]
  -[CNContactContentDisplayViewController setSuggestedContactAction:]
  -[CNContactContentDisplayViewController selectContainersAction]
  -[CNContactContentDisplayViewController setSelectContainersAction:]
  -[CNContactContentDisplayViewController headerDropShadowView]
  -[CNContactContentDisplayViewController setHeaderDropShadowView:]
  -[CNContactContentDisplayViewController medicalIDAction]
  -[CNContactContentDisplayViewController setMedicalIDAction:]
  -[CNContactContentDisplayViewController emergencyContactAction]
  -[CNContactContentDisplayViewController setEmergencyContactAction:]
  -[CNContactContentDisplayViewController medicalIDRegistrationToken]
  -[CNContactContentDisplayViewController setMedicalIDRegistrationToken:]
  -[CNContactContentDisplayViewController emergencyNumberIdentifier]
  -[CNContactContentDisplayViewController setEmergencyNumberIdentifier:]
  -[CNContactContentDisplayViewController ignoreContactAction]
  -[CNContactContentDisplayViewController setIgnoreContactAction:]
  -[CNContactContentDisplayViewController siriContextProvider]
  -[CNContactContentDisplayViewController setSiriContextProvider:]
  -[CNContactContentDisplayViewController userActivityUserInfo]
  -[CNContactContentDisplayViewController setUserActivityUserInfo:]
  -[CNContactContentDisplayViewController highlightedProperties]
  -[CNContactContentDisplayViewController setHighlightedProperties:]
  -[CNContactContentDisplayViewController keyboardVerticalOverlap]
  -[CNContactContentDisplayViewController setKeyboardVerticalOverlap:]
  -[CNContactContentDisplayViewController forcesTransparentBackground]
  -[CNContactContentDisplayViewController hasTableViewHeaderFirstSection]
  -[CNContactContentDisplayViewController _handleCoalescedBlockListDidChange]
  -[CNContactContentDisplayViewController blockListDidChange:]
  -[CNContactContentDisplayViewController sectionOfGroup:]
  -[CNContactContentDisplayViewController reloadCardGroup:]
  -[CNContactContentDisplayViewController adjustPreferredContentSize]
  -[CNContactContentDisplayViewController indexPathOfPropertyItem:]
  -[CNContactContentDisplayViewController setupTableFooterView]
  -[CNContactContentDisplayViewController updateWithContactViewConfiguration:]
  -[CNContactContentDisplayViewController shouldShowVerifiedFooterInSection:]
  -[CNContactContentDisplayViewController shouldPresentFullscreen:]
  -[CNContactContentDisplayViewController requestFavoritesUpdateWithGemini]
  -[CNContactContentDisplayViewController _cellIdentifierForIndexPath:]
  -[CNContactContentDisplayViewController _cellForIndexPath:]
  -[CNContactContentDisplayViewController tableViewHeaderFirstSectionCell]
  -[CNContactContentDisplayViewController isTableViewHeaderFirstSectionIndexPath:]
  -[CNContactContentDisplayViewController groupIndexFromTableViewSectionIndex:]
  -[CNContactContentDisplayViewController tableViewSectionIndexFromGroupIndex:]
  -[CNContactContentDisplayViewController removeFirstSectionHeaderViewControllerFromHierarchy]
  -[CNContactContentDisplayViewController _updateLabelWidthForCellsInGroup:reset:]
  -[CNContactContentDisplayViewController saveDescriptionForRemovingLinkedContact:keys:]
  -[CNContactContentDisplayViewController _retrieveActionsModelPreservingChanges:]
  -[CNContactContentDisplayViewController _setupCardActions]
  -[CNContactContentDisplayViewController setupShareLocationActionReload:]
  -[CNContactContentDisplayViewController _setupContactBlockingActionPreservingChanges:withUpdate:]
  -[CNContactContentDisplayViewController _setupAddToAddressBookActions]
  -[CNContactContentDisplayViewController _setupCustomActions]
  -[CNContactContentDisplayViewController shareLocationController]
  -[CNContactContentDisplayViewController _updateExistingContactAction]
  -[CNContactContentDisplayViewController _clearRecentsDataAction]
  -[CNContactContentDisplayViewController _updateAvailableTransports]
  -[CNContactContentDisplayViewController _updateAvailableTransportsForItems:]
  -[CNContactContentDisplayViewController _updateIMessageTransportButtonsForItems:]
  -[CNContactContentDisplayViewController _updatePhoneTransportButtonsForItems:]
  -[CNContactContentDisplayViewController _updateEmailTransportButtonsForItems:]
  -[CNContactContentDisplayViewController _updateTTYTransportButtonsForItems:]
  -[CNContactContentDisplayViewController _reloadFaceTimeGroup]
  -[CNContactContentDisplayViewController _addFaceTimeGroupAnimated:]
  -[CNContactContentDisplayViewController shouldAddFaceTimeGroup]
  -[CNContactContentDisplayViewController _addGroup:afterGroup:animated:]
  -[CNContactContentDisplayViewController _addMedicalIDGroupAnimated:]
  -[CNContactContentDisplayViewController _reloadAlertGroups]
  -[CNContactContentDisplayViewController _loadDisplayGroups]
  -[CNContactContentDisplayViewController _currentGroups]
  -[CNContactContentDisplayViewController _cardGroupAtTableViewSectionIndex:]
  -[CNContactContentDisplayViewController _itemAtIndexPath:]
  -[CNContactContentDisplayViewController _indexPathIsActionItem:]
  -[CNContactContentDisplayViewController updateInsetsIfNeeded]
  -[CNContactContentDisplayViewController setCardTopGroup:]
  -[CNContactContentDisplayViewController setCardBottomGroup:]
  -[CNContactContentDisplayViewController cardActionsGroup]
  -[CNContactContentDisplayViewController setCardActionsGroup:]
  -[CNContactContentDisplayViewController cardShareLocationGroup]
  -[CNContactContentDisplayViewController setCardShareLocationGroup:]
  -[CNContactContentDisplayViewController cardBlockContactGroup]
  -[CNContactContentDisplayViewController setCardBlockContactGroup:]
  -[CNContactContentDisplayViewController blockAction]
  -[CNContactContentDisplayViewController setBlockAction:]
  -[CNContactContentDisplayViewController updateExistingContactAction]
  -[CNContactContentDisplayViewController setUpdateExistingContactAction:]
  -[CNContactContentDisplayViewController clearRecentsDataAction]
  -[CNContactContentDisplayViewController setClearRecentsDataAction:]
  -[CNContactContentDisplayViewController setShareLocationController:]
  -[CNContactContentDisplayViewController actionsWrapperView]
  -[CNContactContentDisplayViewController setActionsWrapperView:]
  -[CNContactContentDisplayViewController iMessageIDSLookupToken]
  -[CNContactContentDisplayViewController setIMessageIDSLookupToken:]
  -[CNContactContentDisplayViewController faceTimeIDSLookupToken]
  -[CNContactContentDisplayViewController setFaceTimeIDSLookupToken:]
  -[CNContactContentDisplayViewController contactSupportsTTYCalls]
  -[CNContactContentDisplayViewController setContactSupportsTTYCalls:]
  -[CNContactContentDisplayViewController shouldIgnoreBlockListChange]
  -[CNContactContentDisplayViewController setShouldIgnoreBlockListChange:]
  -[CNContactContentDisplayViewController contactNavigationItemUpdater]
  -[CNContactContentDisplayViewController setContactNavigationItemUpdater:]


CNAccountsAndGroupsCellTextView : UITextView

CNAccountsAndGroupsCell : UICollectionViewListCell <UITextViewDelegate>
 @property  CNAccountsAndGroupsCellTextView *titleTextView
 @property  double titleTextViewHeight
 @property  CNAccountsAndGroupsItem *item
 @property  <CNAccountsAndGroupsCellDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNAccountsAndGroupsCell setItem:]
  -[CNAccountsAndGroupsCell setDelegate:]
  -[CNAccountsAndGroupsCell delegate]
  -[CNAccountsAndGroupsCell prepareForDisplay]
  -[CNAccountsAndGroupsCell .cxx_destruct]
  -[CNAccountsAndGroupsCell prepareForReuse]
  -[CNAccountsAndGroupsCell preferredLayoutAttributesFittingAttributes:]
  -[CNAccountsAndGroupsCell item]
  -[CNAccountsAndGroupsCell textViewDidBeginEditing:]
  -[CNAccountsAndGroupsCell textViewShouldBeginEditing:]
  -[CNAccountsAndGroupsCell textViewDidEndEditing:]
  -[CNAccountsAndGroupsCell textViewDidChange:]
  -[CNAccountsAndGroupsCell textView:shouldChangeTextInRange:replacementText:]
  -[CNAccountsAndGroupsCell setupTextViewConstraints]
  -[CNAccountsAndGroupsCell resetTextFieldEnabled]
  -[CNAccountsAndGroupsCell setTextViewEnabled:]
  -[CNAccountsAndGroupsCell titleTextView]
  -[CNAccountsAndGroupsCell requiredHeightForTextView:fittingWidth:]
  -[CNAccountsAndGroupsCell applyTextViewPlaceholderIfNeeded]
  -[CNAccountsAndGroupsCell applyTextColor:]
  -[CNAccountsAndGroupsCell applyTextViewTintColor:]
  -[CNAccountsAndGroupsCell applyAccessoryTintColor:]
  -[CNAccountsAndGroupsCell beginEditingName]
  -[CNAccountsAndGroupsCell endEditingName]
  -[CNAccountsAndGroupsCell isCellEditing]
  -[CNAccountsAndGroupsCell isValidTitle:]
  -[CNAccountsAndGroupsCell setTitleTextView:]
  -[CNAccountsAndGroupsCell titleTextViewHeight]
  -[CNAccountsAndGroupsCell setTitleTextViewHeight:]


CNContactDowntimeWhitelistCell : CNContactCell
  // class methods
  +[CNContactDowntimeWhitelistCell shouldIndentWhileEditing]

  // instance methods
  -[CNContactDowntimeWhitelistCell setHighlighted:animated:]
  -[CNContactDowntimeWhitelistCell initWithStyle:reuseIdentifier:]
  -[CNContactDowntimeWhitelistCell setSelected:animated:]
  -[CNContactDowntimeWhitelistCell canPerformAction:withSender:]


CNUINavigationListViewCellHeightEstimator : NSObject
 @property  <CNUINavigationListStyle> *navigationListStyle
 @property  NSNumber *estimatedCellHeightNumber
 @property  NSNumber *estimatedDetailCellHeightNumber
 @property  double estimatedCellHeight
 @property  double estimatedDetailCellHeight

  // instance methods
  -[CNUINavigationListViewCellHeightEstimator .cxx_destruct]
  -[CNUINavigationListViewCellHeightEstimator setNavigationListStyle:]
  -[CNUINavigationListViewCellHeightEstimator navigationListStyle]
  -[CNUINavigationListViewCellHeightEstimator initWithNavigationListStyle:]
  -[CNUINavigationListViewCellHeightEstimator estimatedCellHeight]
  -[CNUINavigationListViewCellHeightEstimator estimatedDetailCellHeight]
  -[CNUINavigationListViewCellHeightEstimator estimatedCellHeightNumber]
  -[CNUINavigationListViewCellHeightEstimator setEstimatedCellHeightNumber:]
  -[CNUINavigationListViewCellHeightEstimator estimatedDetailCellHeightNumber]
  -[CNUINavigationListViewCellHeightEstimator setEstimatedDetailCellHeightNumber:]


CNUICoreApplicationAuthorizationItem : NSObject <NSCopying, NSSecureCoding>
 @property  CNUICoreApplicationAuthorizationItem *snapshot
 @property  NSData *icon
 @property  NSString *name
 @property  NSString *bundleIdentifier
 @property  long long deviceType
 @property  long long authorization
 @property  BOOL hasChanges

  // class methods
  +[CNUICoreApplicationAuthorizationItem supportsSecureCoding]

  // instance methods
  -[CNUICoreApplicationAuthorizationItem hasChanges]
  -[CNUICoreApplicationAuthorizationItem authorization]
  -[CNUICoreApplicationAuthorizationItem encodeWithCoder:]
  -[CNUICoreApplicationAuthorizationItem setAuthorization:]
  -[CNUICoreApplicationAuthorizationItem snapshot]
  -[CNUICoreApplicationAuthorizationItem .cxx_destruct]
  -[CNUICoreApplicationAuthorizationItem icon]
  -[CNUICoreApplicationAuthorizationItem deviceType]
  -[CNUICoreApplicationAuthorizationItem bundleIdentifier]
  -[CNUICoreApplicationAuthorizationItem copyWithZone:]
  -[CNUICoreApplicationAuthorizationItem name]
  -[CNUICoreApplicationAuthorizationItem isEqual:]
  -[CNUICoreApplicationAuthorizationItem init]
  -[CNUICoreApplicationAuthorizationItem initWithCoder:]
  -[CNUICoreApplicationAuthorizationItem initWithIcon:name:bundleIdentifier:deviceType:authorization:]
  -[CNUICoreApplicationAuthorizationItem initWithIcon:name:bundleIdentifier:deviceType:authorization:shouldTakeSnapshot:]
  -[CNUICoreApplicationAuthorizationItem itemBySettingIcon:]


CNContactPickerContentViewController : UIViewController <CNContactNavigationControllerDelegate, CNContactPickerContentViewController>
 @property  CNContactNavigationController *contactNavigationController
 @property  CNContactStoreDataSource *dataSource
 @property  NSMutableArray *contactProperties
 @property  CNContainer *parentContainer
 @property  NSArray *displayedPropertyKeys
 @property  long long cardActions
 @property  BOOL hidesSearchableSources
 @property  BOOL onlyRealContacts
 @property  BOOL ignoresParentalRestrictions
 @property  BOOL allowsEditing
 @property  BOOL allowsCancel
 @property  BOOL allowsDeletion
 @property  BOOL allowsDone
 @property  BOOL allowsSearchForMultiSelect
 @property  BOOL shouldDisplayAddNewContactRow
 @property  NSString *targetGroupIdentifier
 @property  NSString *prompt
 @property  BOOL hidesPromptInLandscape
 @property  NSString *bannerTitle
 @property  NSString *bannerValue
 @property  NSPredicate *predicateForEnablingContact
 @property  NSPredicate *predicateForSelectionOfContact
 @property  NSPredicate *predicateForSelectionOfProperty
 @property  CNManagedConfiguration *managedConfiguration
 @property  FAFamilyMember *familyMember
 @property  NSArray *prohibitedPropertyKeys
 @property  BOOL shouldDisplaySuggestionsController
 @property  NSArray *suggestionsIgnoredContactIdentifiers
 @property  NSArray *suggestionsInteractionDomains
 @property  NSArray *suggestedContacts
 @property  BOOL shouldHideDuplicates
 @property  BOOL clientWantsSingleContact
 @property  BOOL clientWantsSingleProperty
 @property  BOOL clientWantsMultipleContacts
 @property  BOOL clientWantsMultipleProperties
 @property  BOOL clientHasContactsAccess
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <CNContactPickerContentDelegate> *delegate
 @property  UINavigationController *navigationController
 @property  UIBarButtonItem *addContactBarButtonItem

  // class methods
  +[CNContactPickerContentViewController descriptorForContactPropertiesSupportingPredicateEvaluation]

  // instance methods
  -[CNContactPickerContentViewController managedConfiguration]
  -[CNContactPickerContentViewController setHidesSearchableSources:]
  -[CNContactPickerContentViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNContactPickerContentViewController setManagedConfiguration:]
  -[CNContactPickerContentViewController navigationController]
  -[CNContactPickerContentViewController hidesSearchableSources]
  -[CNContactPickerContentViewController addContactBarButtonItem]
  -[CNContactPickerContentViewController dataSource]
  -[CNContactPickerContentViewController setAllowsEditing:]
  -[CNContactPickerContentViewController setShouldDisplayAddNewContactRow:]
  -[CNContactPickerContentViewController setPrompt:]
  -[CNContactPickerContentViewController allowsEditing]
  -[CNContactPickerContentViewController shouldDisplayAddNewContactRow]
  -[CNContactPickerContentViewController setDelegate:]
  -[CNContactPickerContentViewController delegate]
  -[CNContactPickerContentViewController setProhibitedPropertyKeys:]
  -[CNContactPickerContentViewController setShouldDisplaySuggestionsController:]
  -[CNContactPickerContentViewController prohibitedPropertyKeys]
  -[CNContactPickerContentViewController allowsDeletion]
  -[CNContactPickerContentViewController .cxx_destruct]
  -[CNContactPickerContentViewController setIgnoresParentalRestrictions:]
  -[CNContactPickerContentViewController suggestionsIgnoredContactIdentifiers]
  -[CNContactPickerContentViewController allowsDone]
  -[CNContactPickerContentViewController setSuggestionsInteractionDomains:]
  -[CNContactPickerContentViewController shouldHideDuplicates]
  -[CNContactPickerContentViewController setDataSource:]
  -[CNContactPickerContentViewController contactSuggestionViewController:shouldSelectContact:atIndexPath:]
  -[CNContactPickerContentViewController ignoresParentalRestrictions]
  -[CNContactPickerContentViewController suggestionsInteractionDomains]
  -[CNContactPickerContentViewController invalidate]
  -[CNContactPickerContentViewController setShouldHideDuplicates:]
  -[CNContactPickerContentViewController prompt]
  -[CNContactPickerContentViewController suggestedContacts]
  -[CNContactPickerContentViewController shouldDisplaySuggestionsController]
  -[CNContactPickerContentViewController setAllowsDone:]
  -[CNContactPickerContentViewController setSuggestedContacts:]
  -[CNContactPickerContentViewController init]
  -[CNContactPickerContentViewController setSuggestionsIgnoredContactIdentifiers:]
  -[CNContactPickerContentViewController setupWithOptions:readyBlock:]
  -[CNContactPickerContentViewController setAllowsDeletion:]
  -[CNContactPickerContentViewController invalidateSelectionAnimated:]
  -[CNContactPickerContentViewController displayedPropertyKeys]
  -[CNContactPickerContentViewController setDisplayedPropertyKeys:]
  -[CNContactPickerContentViewController predicateForEnablingContact]
  -[CNContactPickerContentViewController setPredicateForEnablingContact:]
  -[CNContactPickerContentViewController predicateForSelectionOfContact]
  -[CNContactPickerContentViewController setPredicateForSelectionOfContact:]
  -[CNContactPickerContentViewController predicateForSelectionOfProperty]
  -[CNContactPickerContentViewController setPredicateForSelectionOfProperty:]
  -[CNContactPickerContentViewController familyMember]
  -[CNContactPickerContentViewController setFamilyMember:]
  -[CNContactPickerContentViewController parentContainer]
  -[CNContactPickerContentViewController setParentContainer:]
  -[CNContactPickerContentViewController cardActions]
  -[CNContactPickerContentViewController setCardActions:]
  -[CNContactPickerContentViewController onlyRealContacts]
  -[CNContactPickerContentViewController setOnlyRealContacts:]
  -[CNContactPickerContentViewController allowsCancel]
  -[CNContactPickerContentViewController setAllowsCancel:]
  -[CNContactPickerContentViewController targetGroupIdentifier]
  -[CNContactPickerContentViewController setTargetGroupIdentifier:]
  -[CNContactPickerContentViewController hidesPromptInLandscape]
  -[CNContactPickerContentViewController setHidesPromptInLandscape:]
  -[CNContactPickerContentViewController bannerTitle]
  -[CNContactPickerContentViewController setBannerTitle:]
  -[CNContactPickerContentViewController bannerValue]
  -[CNContactPickerContentViewController setBannerValue:]
  -[CNContactPickerContentViewController contactNavigationControllerDidComplete:]
  -[CNContactPickerContentViewController contactNavigationControllerDidCancel:]
  -[CNContactPickerContentViewController contactNavigationController:presentViewController:animated:]
  -[CNContactPickerContentViewController contactNavigationControllerShouldShowContactsOnKeyCommands:]
  -[CNContactPickerContentViewController contactNavigationController:canSelectContact:]
  -[CNContactPickerContentViewController contactNavigationController:shouldSelectContact:atIndexPath:]
  -[CNContactPickerContentViewController contactNavigationController:shouldShowCardForContact:]
  -[CNContactPickerContentViewController contactNavigationControllerShouldDismissSearchOnSelection:]
  -[CNContactPickerContentViewController contactNavigationController:shouldPerformDefaultActionForContactProperty:]
  -[CNContactPickerContentViewController contactNavigationController:didCompleteWithNewContact:]
  -[CNContactPickerContentViewController contactNavigationControllerShouldAddNewContact:]
  -[CNContactPickerContentViewController contactNavigationController]
  -[CNContactPickerContentViewController _validatePredicatesWithError:]
  -[CNContactPickerContentViewController _updatePromptWithViewSize:transitionCoordinator:]
  -[CNContactPickerContentViewController descriptorsForKeysRequiredByDelegate]
  -[CNContactPickerContentViewController _selectedContact:]
  -[CNContactPickerContentViewController _selectedProperty:]
  -[CNContactPickerContentViewController _selectedContacts:]
  -[CNContactPickerContentViewController _selectedProperties:]
  -[CNContactPickerContentViewController clientWantsSingleContact]
  -[CNContactPickerContentViewController setClientWantsSingleContact:]
  -[CNContactPickerContentViewController clientWantsSingleProperty]
  -[CNContactPickerContentViewController setClientWantsSingleProperty:]
  -[CNContactPickerContentViewController clientWantsMultipleContacts]
  -[CNContactPickerContentViewController setClientWantsMultipleContacts:]
  -[CNContactPickerContentViewController clientWantsMultipleProperties]
  -[CNContactPickerContentViewController setClientWantsMultipleProperties:]
  -[CNContactPickerContentViewController clientHasContactsAccess]
  -[CNContactPickerContentViewController setClientHasContactsAccess:]
  -[CNContactPickerContentViewController setContactNavigationController:]
  -[CNContactPickerContentViewController contactProperties]
  -[CNContactPickerContentViewController setContactProperties:]
  -[CNContactPickerContentViewController allowsSearchForMultiSelect]
  -[CNContactPickerContentViewController setAllowsSearchForMultiSelect:]


CNAvatarViewController : UIViewController <CNAvatarViewController_Private, CNAvatarViewController>
 @property  <CNUIPRLikenessResolver> *likenessResolver
 @property  BOOL allowStaleRendering
 @property  CNContactStore *contactStore
 @property  BOOL threeDTouchEnabled
 @property  <CNAvatarViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *contacts
 @property  UIView *view
 @property  <CNUIObjectViewControllerDelegate> *objectViewControllerDelegate

  // class methods
  +[CNAvatarViewController descriptorForRequiredKeysWithThreeDTouchEnabled:]
  +[CNAvatarViewController defaultImplementation]

  // instance methods
  -[CNAvatarViewController initWithSettings:]
  -[CNAvatarViewController descriptorForRequiredKeys]
  -[CNAvatarViewController updateViewWithGroupIdentity:]
  -[CNAvatarViewController initWithNibName:bundle:]
  -[CNAvatarViewController .cxx_destruct]
  -[CNAvatarViewController allowStaleRendering]
  -[CNAvatarViewController setAllowStaleRendering:]
  -[CNAvatarViewController initWithCoder:]
  -[CNAvatarViewController objectViewControllerDelegate]
  -[CNAvatarViewController setObjectViewControllerDelegate:]


CNPropertyGroupsDataSource : NSObject
 @property  CNMutableContact *mutableContact
 @property  CNContactStore *contactStore
 @property  CNPolicy *policy
 @property  NSDictionary *linkedPoliciesByContactIdentifier
 @property  NSArray *prohibitedPropertyKeys
 @property  NSDictionary *propertyGroups

  // instance methods
  -[CNPropertyGroupsDataSource setContactStore:]
  -[CNPropertyGroupsDataSource setProhibitedPropertyKeys:]
  -[CNPropertyGroupsDataSource prohibitedPropertyKeys]
  -[CNPropertyGroupsDataSource .cxx_destruct]
  -[CNPropertyGroupsDataSource setPolicy:]
  -[CNPropertyGroupsDataSource contactStore]
  -[CNPropertyGroupsDataSource policy]
  -[CNPropertyGroupsDataSource linkedPoliciesByContactIdentifier]
  -[CNPropertyGroupsDataSource setLinkedPoliciesByContactIdentifier:]
  -[CNPropertyGroupsDataSource propertyGroups]
  -[CNPropertyGroupsDataSource mutableContact]
  -[CNPropertyGroupsDataSource groupClassForProperty:]
  -[CNPropertyGroupsDataSource setMutableContact:]
  -[CNPropertyGroupsDataSource initWithMutableContact:contactStore:policy:linkedPolicies:prohibitedKeys:]
  -[CNPropertyGroupsDataSource buildPropertyGroups]
  -[CNPropertyGroupsDataSource propertyGroupsForKeys:]
  -[CNPropertyGroupsDataSource allDisplayPropertyItemsForPropertyKeys:]
  -[CNPropertyGroupsDataSource allDisplayPropertyItemsFromGroups:]
  -[CNPropertyGroupsDataSource setPropertyGroups:]


CNContactDataSourceSafeDelegate : NSObject <CNContactDataSourceDelegate>
 @property  <CNContactDataSourceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactDataSourceSafeDelegate contactDataSourceDidChange:]
  -[CNContactDataSourceSafeDelegate setDelegate:]
  -[CNContactDataSourceSafeDelegate delegate]
  -[CNContactDataSourceSafeDelegate .cxx_destruct]
  -[CNContactDataSourceSafeDelegate initWithDelegate:]


CNContactAsyncDataSource : NSObject <CNContactDataSource>
 @property  CNContactStore *store
 @property  <CNCancelable> *searchCancelationToken
 @property  <CNSchedulerProvider> *reloadSchedulerProvider
 @property  CNPublishingSubject *reloadStream
 @property  NSMutableArray *resultingContacts
 @property  CNContactStoreFilter *filter
 @property  NSArray *allKeysToFetchForTransientContacts
 @property  NSArray *contacts
 @property  NSDictionary *contactMatchInfos
 @property  NSArray *sections
 @property  NSArray *indexSections
 @property  <CNContactDataSourceDelegate> *delegate
 @property  BOOL canReload
 @property  NSString *displayName
 @property  CNContactFilter *effectiveFilter
 @property  CNContactFormatter *contactFormatter
 @property  BOOL shouldReturnToAccountsAndGroupsViewAfterSearchIsCanceled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactAsyncDataSource setFilter:]
  -[CNContactAsyncDataSource filter]
  -[CNContactAsyncDataSource store]
  -[CNContactAsyncDataSource indexSections]
  -[CNContactAsyncDataSource setDelegate:]
  -[CNContactAsyncDataSource initWithStore:]
  -[CNContactAsyncDataSource delegate]
  -[CNContactAsyncDataSource setStore:]
  -[CNContactAsyncDataSource dealloc]
  -[CNContactAsyncDataSource .cxx_destruct]
  -[CNContactAsyncDataSource contacts]
  -[CNContactAsyncDataSource contactMatchInfos]
  -[CNContactAsyncDataSource copyWithZone:]
  -[CNContactAsyncDataSource invalidate]
  -[CNContactAsyncDataSource displayName]
  -[CNContactAsyncDataSource reload]
  -[CNContactAsyncDataSource sections]
  -[CNContactAsyncDataSource contactFormatter]
  -[CNContactAsyncDataSource setContactFormatter:]
  -[CNContactAsyncDataSource setNetworkActivityIndicatorVisible:]
  -[CNContactAsyncDataSource completeContactFromContact:fromMainStoreOnly:keysToFetch:]
  -[CNContactAsyncDataSource preferredForNameMeContactIdentifier]
  -[CNContactAsyncDataSource shouldReturnToAccountsAndGroupsViewAfterSearchIsCanceled]
  -[CNContactAsyncDataSource indexPathForContact:]
  -[CNContactAsyncDataSource canReload]
  -[CNContactAsyncDataSource effectiveFilter]
  -[CNContactAsyncDataSource reloadWithRequest:]
  -[CNContactAsyncDataSource invalidateResults]
  -[CNContactAsyncDataSource invalidateSearch]
  -[CNContactAsyncDataSource allKeysToFetchForTransientContacts]
  -[CNContactAsyncDataSource setAllKeysToFetchForTransientContacts:]
  -[CNContactAsyncDataSource searchCancelationToken]
  -[CNContactAsyncDataSource setSearchCancelationToken:]
  -[CNContactAsyncDataSource reloadSchedulerProvider]
  -[CNContactAsyncDataSource setReloadSchedulerProvider:]
  -[CNContactAsyncDataSource reloadStream]
  -[CNContactAsyncDataSource setReloadStream:]
  -[CNContactAsyncDataSource resultingContacts]
  -[CNContactAsyncDataSource setResultingContacts:]


CNSharingProfileOnboardingHeaderView : UICollectionReusableView
 @property  OBHeaderView *headerView

  // class methods
  +[CNSharingProfileOnboardingHeaderView reuseIdentifier]

  // instance methods
  -[CNSharingProfileOnboardingHeaderView setHeaderView:]
  -[CNSharingProfileOnboardingHeaderView reuseIdentifier]
  -[CNSharingProfileOnboardingHeaderView initWithTitle:]
  -[CNSharingProfileOnboardingHeaderView headerView]
  -[CNSharingProfileOnboardingHeaderView .cxx_destruct]


CNContactListShareContactsActionContext : NSObject
 @property  NSString *groupName

  // instance methods
  -[CNContactListShareContactsActionContext .cxx_destruct]
  -[CNContactListShareContactsActionContext groupName]
  -[CNContactListShareContactsActionContext setGroupName:]


CNContactListShareContactsAction : NSObject <UIActivityViewControllerObjectManipulationDelegate, CNContactCardFieldPickerDelegate, CNContactListAction>
 @property  NSArray *contacts
 @property  NSArray *filteredContacts
 @property  CNContactCardFieldPicker *fieldPicker
 @property  UIActivityViewController *activityViewController
 @property  UIView *sourceView
 @property  <CNContactListActionDelegate> *delegate
 @property  CNContactListShareContactsActionContext *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactListShareContactsAction descriptorForRequiredKeys]

  // instance methods
  -[CNContactListShareContactsAction performAction]
  -[CNContactListShareContactsAction setSourceView:]
  -[CNContactListShareContactsAction setDelegate:]
  -[CNContactListShareContactsAction delegate]
  -[CNContactListShareContactsAction setContacts:]
  -[CNContactListShareContactsAction .cxx_destruct]
  -[CNContactListShareContactsAction contacts]
  -[CNContactListShareContactsAction context]
  -[CNContactListShareContactsAction sourceView]
  -[CNContactListShareContactsAction activityViewController]
  -[CNContactListShareContactsAction setActivityViewController:]
  -[CNContactListShareContactsAction editRequiresAuthorization]
  -[CNContactListShareContactsAction shouldReloadListOnCompletion]
  -[CNContactListShareContactsAction _customizationGroupsForActivityViewController:]
  -[CNContactListShareContactsAction _customizationAvailableForActivityViewController:]
  -[CNContactListShareContactsAction customLocalizedActionTitleForActivityViewController:]
  -[CNContactListShareContactsAction customActionViewControllerForActivityViewController:]
  -[CNContactListShareContactsAction contactCardFieldPicker:didFinishWithContacts:]
  -[CNContactListShareContactsAction fieldPicker]
  -[CNContactListShareContactsAction setFieldPicker:]
  -[CNContactListShareContactsAction filteredContacts]
  -[CNContactListShareContactsAction setFilteredContacts:]
  -[CNContactListShareContactsAction initWithContacts:sourceView:]
  -[CNContactListShareContactsAction initWithContacts:sourceView:context:]
  -[CNContactListShareContactsAction setupForContactFieldPicker]
  -[CNContactListShareContactsAction activityItemForContacts:]


CNPropertyGroupGeminiItem : CNPropertyGroupItem <CNUIGeminiDataSourceDelegate>
 @property  CNMutableContact *editingContact
 @property  CNGeminiResult *geminiResult
 @property  <CNUIGeminiDataSourceDelegate> *geminiUpdateDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPropertyGroupGeminiItem displayLabel]
  -[CNPropertyGroupGeminiItem .cxx_destruct]
  -[CNPropertyGroupGeminiItem isValidValue:]
  -[CNPropertyGroupGeminiItem displayValue]
  -[CNPropertyGroupGeminiItem setGeminiResult:]
  -[CNPropertyGroupGeminiItem editingContact]
  -[CNPropertyGroupGeminiItem setEditingContact:]
  -[CNPropertyGroupGeminiItem geminiResult]
  -[CNPropertyGroupGeminiItem geminiDataSourceDidUpdate:]
  -[CNPropertyGroupGeminiItem displayStringForValue:]
  -[CNPropertyGroupGeminiItem canRemove]
  -[CNPropertyGroupGeminiItem isEquivalentToItem:whenEditing:]
  -[CNPropertyGroupGeminiItem updateLabeledValueWithValue:]
  -[CNPropertyGroupGeminiItem geminiUpdateDelegate]
  -[CNPropertyGroupGeminiItem setGeminiUpdateDelegate:]


CNContactUpdateExistingContactAction : CNContactAction <CNContactViewControllerDelegate>
 @property  CNContact *existingContact
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactUpdateExistingContactAction .cxx_destruct]
  -[CNContactUpdateExistingContactAction contactViewController:didCompleteWithContact:]
  -[CNContactUpdateExistingContactAction performActionWithSender:]
  -[CNContactUpdateExistingContactAction existingContact]
  -[CNContactUpdateExistingContactAction setExistingContact:]


CNPhotoPickerGlyphProviderItem : CNPhotoPickerProviderItem
 @property  UIView *symbolImageView
 @property  NSString *symbolImageName
 @property  UIColor *tintColor
 @property  unsigned long addItemType

  // class methods
  +[CNPhotoPickerGlyphProviderItem thumbnailViewForImage:]

  // instance methods
  -[CNPhotoPickerGlyphProviderItem backgroundColorWithTintColor:]
  -[CNPhotoPickerGlyphProviderItem imageType]
  -[CNPhotoPickerGlyphProviderItem .cxx_destruct]
  -[CNPhotoPickerGlyphProviderItem tintColor]
  -[CNPhotoPickerGlyphProviderItem setTintColor:]
  -[CNPhotoPickerGlyphProviderItem symbolImageName]
  -[CNPhotoPickerGlyphProviderItem setSymbolImageName:]
  -[CNPhotoPickerGlyphProviderItem thumbnailViewWithCompletion:]
  -[CNPhotoPickerGlyphProviderItem updateTintColorIfNeeded:]
  -[CNPhotoPickerGlyphProviderItem initWithSymbolImageNamed:withAddItemType:]
  -[CNPhotoPickerGlyphProviderItem initWithSymbolImageNamed:]
  -[CNPhotoPickerGlyphProviderItem symbolImageView]
  -[CNPhotoPickerGlyphProviderItem setupSymbolImageView]
  -[CNPhotoPickerGlyphProviderItem scaleForImageNamed:]
  -[CNPhotoPickerGlyphProviderItem imageForImageNamed:withTintColor:]
  -[CNPhotoPickerGlyphProviderItem addItemType]
  -[CNPhotoPickerGlyphProviderItem setAddItemType:]
  -[CNPhotoPickerGlyphProviderItem setSymbolImageView:]


CNUIFamilyMemberContactsController : NSObject <CNContactViewControllerDelegate, CNContactPickerPrivateDelegate, CNFamilyMemberAddContactsOptionsSheetDelegate, CNUIFamilyMemberDowntimeContactPickerControllerDelegate, CNUICoreFamilyMemberContactsObserver>
 @property  CNContactStore *familyMemberScopedContactStore
 @property  <CNUIFamilyMemberContactsPresentation> *familyMemberContactsPresentation
 @property  <CNUICoreFamilyMemberContactsDataSource> *dataSource
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  CNContactPickerViewController *contactPickerViewController
 @property  FAFamilyMember *familyMember
 @property  long long countOfFamilyMemberContacts
 @property  long long fetchStatus
 @property  <CNUIFamilyMemberContactsControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNUIFamilyMemberContactsController isViewController:presentedByContactPicker:]

  // instance methods
  -[CNUIFamilyMemberContactsController dataSource]
  -[CNUIFamilyMemberContactsController setDelegate:]
  -[CNUIFamilyMemberContactsController delegate]
  -[CNUIFamilyMemberContactsController .cxx_destruct]
  -[CNUIFamilyMemberContactsController schedulerProvider]
  -[CNUIFamilyMemberContactsController presentViewController:]
  -[CNUIFamilyMemberContactsController contactViewController:didCompleteWithContact:]
  -[CNUIFamilyMemberContactsController init]
  -[CNUIFamilyMemberContactsController contactPickerDidCancel:]
  -[CNUIFamilyMemberContactsController pickerDidSelectAddNewContact:]
  -[CNUIFamilyMemberContactsController familyMember]
  -[CNUIFamilyMemberContactsController initWithFamilyMember:familyMemberContactsPresentation:]
  -[CNUIFamilyMemberContactsController downtimePickerController:didFinishWithContacts:]
  -[CNUIFamilyMemberContactsController familyMemberContactItemsDidChange]
  -[CNUIFamilyMemberContactsController familyMemberContactsPresentation]
  -[CNUIFamilyMemberContactsController fetchStatus]
  -[CNUIFamilyMemberContactsController performInteraction:]
  -[CNUIFamilyMemberContactsController performDefaultInteraction]
  -[CNUIFamilyMemberContactsController familyMemberScopedContactStore]
  -[CNUIFamilyMemberContactsController addContactsOptionsSheetViewControllerDidSelectAddFromLocalContacts:]
  -[CNUIFamilyMemberContactsController addContactsOptionsSheetViewControllerDidSelectAddNewContact:]
  -[CNUIFamilyMemberContactsController addContactsOptionsSheetViewControllerDidCancel:]
  -[CNUIFamilyMemberContactsController countOfFamilyMemberContacts]
  -[CNUIFamilyMemberContactsController performDisplayContactsInteraction]
  -[CNUIFamilyMemberContactsController performAddFromMainContactsInteraction]
  -[CNUIFamilyMemberContactsController performAddContactsInteraction]
  -[CNUIFamilyMemberContactsController anchorViewForAddContactsInteraction]
  -[CNUIFamilyMemberContactsController dismissPresentedViewController:]
  -[CNUIFamilyMemberContactsController cancelPresentationOfViewController:]
  -[CNUIFamilyMemberContactsController contactPickerViewController]
  -[CNUIFamilyMemberContactsController setContactPickerViewController:]


CNContactHeaderViewSizeAttributes : NSObject
 @property  double _minHeight
 @property  double _maxHeight
 @property  double photoMinHeight
 @property  double photoMaxHeight
 @property  double photoMinTopMargin
 @property  double photoMaxTopMargin
 @property  double photoMinBottomMargin
 @property  double photoMaxBottomMargin
 @property  double minNavbarTitleOffset
 @property  double maxNavbarTitleOffset

  // class methods
  +[CNContactHeaderViewSizeAttributes defaultAttributes]
  +[CNContactHeaderViewSizeAttributes displayAttributes]
  +[CNContactHeaderViewSizeAttributes editingAttributes]
  +[CNContactHeaderViewSizeAttributes editingAttributesWithNavBar]
  +[CNContactHeaderViewSizeAttributes displayAttributesWithNavBar]

  // instance methods
  -[CNContactHeaderViewSizeAttributes maxHeight]
  -[CNContactHeaderViewSizeAttributes minHeight]
  -[CNContactHeaderViewSizeAttributes init]
  -[CNContactHeaderViewSizeAttributes valueBetweenMin:max:percentMax:]
  -[CNContactHeaderViewSizeAttributes photoHeightWithPercentMax:]
  -[CNContactHeaderViewSizeAttributes photoTopMarginWithPercentMax:]
  -[CNContactHeaderViewSizeAttributes photoBottomMarginWithPercentMax:]
  -[CNContactHeaderViewSizeAttributes navbarTitleOffsetWithPercentMax:]
  -[CNContactHeaderViewSizeAttributes photoMinHeight]
  -[CNContactHeaderViewSizeAttributes setPhotoMinHeight:]
  -[CNContactHeaderViewSizeAttributes photoMinTopMargin]
  -[CNContactHeaderViewSizeAttributes setPhotoMinTopMargin:]
  -[CNContactHeaderViewSizeAttributes photoMinBottomMargin]
  -[CNContactHeaderViewSizeAttributes setPhotoMinBottomMargin:]
  -[CNContactHeaderViewSizeAttributes minNavbarTitleOffset]
  -[CNContactHeaderViewSizeAttributes setMinNavbarTitleOffset:]
  -[CNContactHeaderViewSizeAttributes maxNavbarTitleOffset]
  -[CNContactHeaderViewSizeAttributes setMaxNavbarTitleOffset:]
  -[CNContactHeaderViewSizeAttributes _minHeight]
  -[CNContactHeaderViewSizeAttributes set_minHeight:]
  -[CNContactHeaderViewSizeAttributes _maxHeight]
  -[CNContactHeaderViewSizeAttributes set_maxHeight:]
  -[CNContactHeaderViewSizeAttributes photoMaxHeight]
  -[CNContactHeaderViewSizeAttributes setPhotoMaxHeight:]
  -[CNContactHeaderViewSizeAttributes photoMaxTopMargin]
  -[CNContactHeaderViewSizeAttributes setPhotoMaxTopMargin:]
  -[CNContactHeaderViewSizeAttributes photoMaxBottomMargin]
  -[CNContactHeaderViewSizeAttributes setPhotoMaxBottomMargin:]


CNAvatarViewControllerSettings : NSObject
 @property  <CNUIPRLikenessResolver> *likenessResolver
 @property  <CNUILikenessRendering> *likenessRenderer
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  CNContactStore *contactStore
 @property  BOOL threeDTouchEnabled
 @property  unsigned long style

  // class methods
  +[CNAvatarViewControllerSettings defaultSettings]
  +[CNAvatarViewControllerSettings defaultSettingsWithCacheSize:threeDTouchEnabled:]
  +[CNAvatarViewControllerSettings settingsWithContactStore:]
  +[CNAvatarViewControllerSettings threeDTouchEnabledDefaultValue]
  +[CNAvatarViewControllerSettings settingsWithContactStore:threeDTouchEnabled:]
  +[CNAvatarViewControllerSettings settingsWithContactStore:cacheSize:threeDTouchEnabled:]
  +[CNAvatarViewControllerSettings settingsWithLikenessResolver:likenessRenderer:contactStore:threeDTouchEnabled:schedulerProvider:]

  // instance methods
  -[CNAvatarViewControllerSettings setContactStore:]
  -[CNAvatarViewControllerSettings threeDTouchEnabled]
  -[CNAvatarViewControllerSettings setLikenessRenderer:]
  -[CNAvatarViewControllerSettings style]
  -[CNAvatarViewControllerSettings .cxx_destruct]
  -[CNAvatarViewControllerSettings schedulerProvider]
  -[CNAvatarViewControllerSettings initWithLikenessResolver:likenessRenderer:contactStore:threeDTouchEnabled:schedulerProvider:]
  -[CNAvatarViewControllerSettings setSchedulerProvider:]
  -[CNAvatarViewControllerSettings likenessResolver]
  -[CNAvatarViewControllerSettings contactStore]
  -[CNAvatarViewControllerSettings setStyle:]
  -[CNAvatarViewControllerSettings setLikenessResolver:]
  -[CNAvatarViewControllerSettings setThreeDTouchEnabled:]
  -[CNAvatarViewControllerSettings likenessRenderer]


CNPhotoPickerProviderSuggestionsGroup : CNPhotoPickerProviderGroup
  // instance methods
  -[CNPhotoPickerProviderSuggestionsGroup .cxx_destruct]
  -[CNPhotoPickerProviderSuggestionsGroup providerItemDidUpdate:]
  -[CNPhotoPickerProviderSuggestionsGroup itemsForProviderIdentifier:]
  -[CNPhotoPickerProviderSuggestionsGroup prepareDisplayItems:]
  -[CNPhotoPickerProviderSuggestionsGroup addItems]
  -[CNPhotoPickerProviderSuggestionsGroup addProviderItem:]
  -[CNPhotoPickerProviderSuggestionsGroup removeProviderItem:]
  -[CNPhotoPickerProviderSuggestionsGroup setAddItems:]
  -[CNPhotoPickerProviderSuggestionsGroup initWithProviders:environment:allowAddItem:]
  -[CNPhotoPickerProviderSuggestionsGroup providerOfClass:]
  -[CNPhotoPickerProviderSuggestionsGroup indexForDefaultMonogram]
  -[CNPhotoPickerProviderSuggestionsGroup dedupedSuggestionItemsGroupedByProvider]
  -[CNPhotoPickerProviderSuggestionsGroup loadAvailablePaddingItems]
  -[CNPhotoPickerProviderSuggestionsGroup providerItems:withMaxRecentsAndMonogramsCount:]
  -[CNPhotoPickerProviderSuggestionsGroup paddedDisplayItems:]
  -[CNPhotoPickerProviderSuggestionsGroup maxRecentsAndMonogramsCount]
  -[CNPhotoPickerProviderSuggestionsGroup defaultMonogramItem]
  -[CNPhotoPickerProviderSuggestionsGroup reloadMonogramProviderGroupWithVisualIdentity:size:RTL:]


CNUISchedulerProvider : NSObject <CNSchedulerProvider>
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  CNSuspendableSchedulerDecorator *suspendableBackgroundScheduler
 @property  <CNScheduler> *afterCACommitScheduler
 @property  <CNScheduler> *backgroundScheduler
 @property  <CNScheduler> *mainThreadScheduler
 @property  <CNScheduler> *inlineScheduler
 @property  <CNScheduler> *immediateScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNUISchedulerProvider makeBackgroundScheduler]

  // instance methods
  -[CNUISchedulerProvider backgroundScheduler]
  -[CNUISchedulerProvider mainThreadScheduler]
  -[CNUISchedulerProvider initWithSchedulerProvider:]
  -[CNUISchedulerProvider .cxx_destruct]
  -[CNUISchedulerProvider inlineScheduler]
  -[CNUISchedulerProvider suspendableBackgroundScheduler]
  -[CNUISchedulerProvider schedulerProvider]
  -[CNUISchedulerProvider immediateScheduler]
  -[CNUISchedulerProvider newSerialSchedulerWithName:]
  -[CNUISchedulerProvider afterCACommitScheduler]
  -[CNUISchedulerProvider suspendBackgroundScheduler]
  -[CNUISchedulerProvider newSynchronousSerialSchedulerWithName:]
  -[CNUISchedulerProvider newReaderWriterSchedulerWithName:]
  -[CNUISchedulerProvider backgroundSchedulerWithQualityOfService:]
  -[CNUISchedulerProvider resumeBackgroundScheduler]
  -[CNUISchedulerProvider init]


CNPhotoPickerAddItemsProvider : NSObject <CNPhotoPickerProvider>
 @property  CNVisualIdentity *visualIdentity
 @property  BOOL allowsTakePhotoItem
 @property  BOOL allowsPhotoFromLibraryItem
 @property  BOOL allowsMonograms
 @property  BOOL allowsEmoji
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPhotoPickerAddItemsProvider identifier]
  -[CNPhotoPickerAddItemsProvider .cxx_destruct]
  -[CNPhotoPickerAddItemsProvider setIdentifier:]
  -[CNPhotoPickerAddItemsProvider visualIdentity]
  -[CNPhotoPickerAddItemsProvider initWithVisualIdentity:]
  -[CNPhotoPickerAddItemsProvider loadItemsForSize:scale:RTL:renderingQueue:callbackQueue:itemDelegate:]
  -[CNPhotoPickerAddItemsProvider initWithVisualIdentity:allowsTakePhotoItem:allowsPhotoFromLibraryItem:allowsMonograms:allowsEmoji:]
  -[CNPhotoPickerAddItemsProvider addItemOfType:]
  -[CNPhotoPickerAddItemsProvider symbolImageNameForAddItemType:]
  -[CNPhotoPickerAddItemsProvider allowsTakePhotoItem]
  -[CNPhotoPickerAddItemsProvider setAllowsTakePhotoItem:]
  -[CNPhotoPickerAddItemsProvider allowsPhotoFromLibraryItem]
  -[CNPhotoPickerAddItemsProvider setAllowsPhotoFromLibraryItem:]
  -[CNPhotoPickerAddItemsProvider allowsMonograms]
  -[CNPhotoPickerAddItemsProvider setAllowsMonograms:]
  -[CNPhotoPickerAddItemsProvider allowsEmoji]
  -[CNPhotoPickerAddItemsProvider setAllowsEmoji:]


CNOnboardingBoldButtonProvider : NSObject
  // instance methods
  -[CNOnboardingBoldButtonProvider boldAlternateButton]
  -[CNOnboardingBoldButtonProvider boldButton]


CNDuplicateContactsController : NSObject <_TtP10ContactsUI26DuplicatesUIHelperDelegate_>
 @property  _TtC10ContactsUI18DuplicatesUIHelper *duplicatesUIHelper
 @property  CNContactFormatter *contactFormatter
 @property  CNUIContactsEnvironment *environment
 @property  long long newDuplicatesCount
 @property  long long allDuplicatesCount
 @property  BOOL isAlreadyFindingDuplicates
 @property  BOOL isPerformingMerge
 @property  double mergeCompletedAt
 @property  long long lastIgnoredNewDuplicatesCount
 @property  NSObject<CNContactDataSource> *dataSource
 @property  <CNDuplicateContactsControllerDelegate> *delegate
 @property  CNContactStore *contactStore

  // class methods
  +[CNDuplicateContactsController os_log]
  +[CNDuplicateContactsController defaultContactFormatter]
  +[CNDuplicateContactsController defaultContactFormatterForDataSource:]

  // instance methods
  -[CNDuplicateContactsController lastIgnoredNewDuplicatesCount]
  -[CNDuplicateContactsController isBusy]
  -[CNDuplicateContactsController setLastIgnoredNewDuplicatesCount:]
  -[CNDuplicateContactsController duplicatesUIHelper]
  -[CNDuplicateContactsController findDuplicates]
  -[CNDuplicateContactsController refreshManagedDuplicates]
  -[CNDuplicateContactsController dataSource]
  -[CNDuplicateContactsController setDelegate:]
  -[CNDuplicateContactsController setMergeCompletedAt:]
  -[CNDuplicateContactsController presentSheetBasedMergeForController:showsIgnored:]
  -[CNDuplicateContactsController refreshManagedDuplicatesWithCompletionBlock:]
  -[CNDuplicateContactsController canMergeDuplicates]
  -[CNDuplicateContactsController isInMergeCooldown:]
  -[CNDuplicateContactsController delegate]
  -[CNDuplicateContactsController mergeCompletedAt]
  -[CNDuplicateContactsController didSelectUnignoreDuplicate:]
  -[CNDuplicateContactsController resetDuplicates]
  -[CNDuplicateContactsController newDuplicatesCount]
  -[CNDuplicateContactsController hasNewDuplicates]
  -[CNDuplicateContactsController .cxx_destruct]
  -[CNDuplicateContactsController duplicatesDidChange]
  -[CNDuplicateContactsController performMerge:]
  -[CNDuplicateContactsController setIsPerformingMerge:]
  -[CNDuplicateContactsController didSelectMergeAllDuplicates:signaturesToMerge:]
  -[CNDuplicateContactsController initWithDataSource:environment:delegate:]
  -[CNDuplicateContactsController updateDuplicatesCounts]
  -[CNDuplicateContactsController decorateBannerViewCell:]
  -[CNDuplicateContactsController allDuplicatesCount]
  -[CNDuplicateContactsController setNewDuplicatesCount:]
  -[CNDuplicateContactsController didPerformDuplicatesMerge]
  -[CNDuplicateContactsController setDataSource:]
  -[CNDuplicateContactsController isPerformingMerge]
  -[CNDuplicateContactsController ignoreNewDuplicatesBanner]
  -[CNDuplicateContactsController setAllDuplicatesCount:]
  -[CNDuplicateContactsController performIgnoreAll]
  -[CNDuplicateContactsController didSelectIgnoreAllDuplicates:signaturesIgnored:]
  -[CNDuplicateContactsController contactStore]
  -[CNDuplicateContactsController setEnvironment:]
  -[CNDuplicateContactsController contactFormatter]
  -[CNDuplicateContactsController isAlreadyFindingDuplicates]
  -[CNDuplicateContactsController setIsAlreadyFindingDuplicates:]
  -[CNDuplicateContactsController environment]
  -[CNDuplicateContactsController setContactFormatter:]
  -[CNDuplicateContactsController wantsToDisplayNewDuplicatesBanner:]
  -[CNDuplicateContactsController willPerformDuplicatesMerge]
  -[CNDuplicateContactsController setDuplicatesUIHelper:]
  -[CNDuplicateContactsController presentDuplicatesUIFailureAlertForController:]


CNActionsView : UIView <CNActionViewDelegate, NUIContainerViewDelegate>
 @property  NSMutableDictionary *actionItemsByType
 @property  NSMutableDictionary *actionViewsByType
 @property  UIFont *titleFont
 @property  NUIContainerStackView *containerView
 @property  NSObject<CNActionsViewProtocol> *actionsDelegate
 @property  NSArray *sortedActionTypes
 @property  double spacing
 @property  long long style
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNActionsView axisWithTitlesPresent:]

  // instance methods
  -[CNActionsView spacing]
  -[CNActionsView setSpacing:]
  -[CNActionsView titleFont]
  -[CNActionsView setTitleFont:]
  -[CNActionsView style]
  -[CNActionsView setActionsDelegate:]
  -[CNActionsView .cxx_destruct]
  -[CNActionsView setContainerView:]
  -[CNActionsView containerView]
  -[CNActionsView sizeThatFits:]
  -[CNActionsView actionsDelegate]
  -[CNActionsView intrinsicContentSize]
  -[CNActionsView initWithFrame:]
  -[CNActionsView setStyle:]
  -[CNActionsView didPressActionView:longPress:]
  -[CNActionsView actionViewShouldPresentDisambiguationUI:]
  -[CNActionsView actionViewForType:]
  -[CNActionsView setSortedActionTypes:]
  -[CNActionsView insertionIndexForType:]
  -[CNActionsView addActionItem:]
  -[CNActionsView removeActionItem:]
  -[CNActionsView updateActionItem:]
  -[CNActionsView updateAxis]
  -[CNActionsView resetActions]
  -[CNActionsView sortedActionTypes]
  -[CNActionsView actionItemsByType]
  -[CNActionsView setActionItemsByType:]
  -[CNActionsView actionViewsByType]
  -[CNActionsView setActionViewsByType:]


CNContactInlineActionsViewController : UIViewController <CNActionsViewProtocol, CNUIUserActionListConsumer, CNContactActionsControllerDelegate, CNUIObjectViewController>
 @property  NSArray *actionItems
 @property  NSArray *tokens
 @property  NSDictionary *defaultActionPerType
 @property  <CNCustomPresentation> *actionsControllerPresentation
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  double throttleDelay
 @property  CNContactActionsController *actionsController
 @property  CNUIContactsEnvironment *environment
 @property  CNUIUserActionListDataSource *actionListDataSource
 @property  NSArray *contacts
 @property  CNActionsView *actionsView
 @property  BOOL displaysUnavailableActionTypes
 @property  BOOL displaysTitles
 @property  CNContact *contact
 @property  NSArray *supportedActionTypes
 @property  double actionTypesInterspace
 @property  long long viewStyle
 @property  <CNContactInlineActionsViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *view
 @property  <CNUIObjectViewControllerDelegate> *objectViewControllerDelegate

  // class methods
  +[CNContactInlineActionsViewController descriptorForRequiredKeys]

  // instance methods
  -[CNContactInlineActionsViewController setTokens:]
  -[CNContactInlineActionsViewController _canShowWhileLocked]
  -[CNContactInlineActionsViewController contact]
  -[CNContactInlineActionsViewController tokens]
  -[CNContactInlineActionsViewController performAction:]
  -[CNContactInlineActionsViewController setDelegate:]
  -[CNContactInlineActionsViewController delegate]
  -[CNContactInlineActionsViewController initWithNibName:bundle:]
  -[CNContactInlineActionsViewController setContacts:]
  -[CNContactInlineActionsViewController dealloc]
  -[CNContactInlineActionsViewController reset]
  -[CNContactInlineActionsViewController .cxx_destruct]
  -[CNContactInlineActionsViewController viewStyle]
  -[CNContactInlineActionsViewController contacts]
  -[CNContactInlineActionsViewController viewDidLoad]
  -[CNContactInlineActionsViewController loadView]
  -[CNContactInlineActionsViewController schedulerProvider]
  -[CNContactInlineActionsViewController setViewStyle:]
  -[CNContactInlineActionsViewController setSchedulerProvider:]
  -[CNContactInlineActionsViewController setContact:]
  -[CNContactInlineActionsViewController setEnvironment:]
  -[CNContactInlineActionsViewController environment]
  -[CNContactInlineActionsViewController actionItems]
  -[CNContactInlineActionsViewController actionsController]
  -[CNContactInlineActionsViewController didSelectAction:withSourceView:longPress:]
  -[CNContactInlineActionsViewController actionsView:shouldPresentDisambiguationUIForAction:]
  -[CNContactInlineActionsViewController actionsView]
  -[CNContactInlineActionsViewController setActionsView:]
  -[CNContactInlineActionsViewController contactActionsController:didSelectAction:]
  -[CNContactInlineActionsViewController contactActionsController:didUpdateWithMenu:]
  -[CNContactInlineActionsViewController setActionsController:]
  -[CNContactInlineActionsViewController supportedActionTypes]
  -[CNContactInlineActionsViewController displaysUnavailableActionTypes]
  -[CNContactInlineActionsViewController loadCachedActions]
  -[CNContactInlineActionsViewController discoverAvailableActionTypes]
  -[CNContactInlineActionsViewController allModelsObservable]
  -[CNContactInlineActionsViewController processModels:]
  -[CNContactInlineActionsViewController setSupportedActionTypes:]
  -[CNContactInlineActionsViewController actionsControllerPresentation]
  -[CNContactInlineActionsViewController setActionsControllerPresentation:]
  -[CNContactInlineActionsViewController throttleDelay]
  -[CNContactInlineActionsViewController defaultActionPerType]
  -[CNContactInlineActionsViewController setDefaultActionPerType:]
  -[CNContactInlineActionsViewController objectViewControllerDelegate]
  -[CNContactInlineActionsViewController setObjectViewControllerDelegate:]
  -[CNContactInlineActionsViewController initWithContactActionsContext:]
  -[CNContactInlineActionsViewController initWithActionListDataSource:environment:]
  -[CNContactInlineActionsViewController setDisplaysUnavailableActionTypes:]
  -[CNContactInlineActionsViewController updateDesiredTitleFontSizeIfNeeded]
  -[CNContactInlineActionsViewController displayAllSupportedTypesDisabled]
  -[CNContactInlineActionsViewController setDisplaysTitles:]
  -[CNContactInlineActionsViewController setupSingleContactActions]
  -[CNContactInlineActionsViewController checkinLaunchTasksForUndiscoverableActionsForContact:]
  -[CNContactInlineActionsViewController setActionTypesInterspace:]
  -[CNContactInlineActionsViewController removeVisibleActionItems:]
  -[CNContactInlineActionsViewController displayAdditionalActionItems:]
  -[CNContactInlineActionsViewController updateVisibleActionItems:]
  -[CNContactInlineActionsViewController displayActionForType:withDefaultAction:enabled:]
  -[CNContactInlineActionsViewController removeActionForType:]
  -[CNContactInlineActionsViewController makeActionItemForType:]
  -[CNContactInlineActionsViewController updateActionItem:withDefaultAction:]
  -[CNContactInlineActionsViewController existingActionItemForType:]
  -[CNContactInlineActionsViewController generateActionsControllerForActionType:]
  -[CNContactInlineActionsViewController shouldShowDisambiguationForAction:]
  -[CNContactInlineActionsViewController setupGroupActions]
  -[CNContactInlineActionsViewController performGroupActionForType:]
  -[CNContactInlineActionsViewController isGroupActionsView]
  -[CNContactInlineActionsViewController notifyDelegateOfPerformedActionType:fromDisambiguation:]
  -[CNContactInlineActionsViewController notifyDelegateOfDisambiguationForActionType:]
  -[CNContactInlineActionsViewController actionImageTextStyleForViewStyle:]
  -[CNContactInlineActionsViewController displaysTitles]
  -[CNContactInlineActionsViewController actionTypesInterspace]
  -[CNContactInlineActionsViewController setActionItems:]
  -[CNContactInlineActionsViewController actionListDataSource]
  -[CNContactInlineActionsViewController setActionListDataSource:]


CNContactContentUnitaryViewController : CNContactContentViewController <CNPropertyActionDelegate, CNPropertyCellDelegate, CNPropertyGroupItemDelegate, CNContactGroupPickerDelegate, UIPopoverControllerDelegate, CNContactHeaderViewDelegate, CNContactContentViewControllerDelegate, UIAdaptivePresentationControllerDelegate, CNShareLocationProtocol, CNUIObjectViewControllerDelegate, CNContactInlineActionsViewControllerDelegate_Internal, CNUIGeminiDataSourceDelegate, NSUserActivityDelegate, CNUIEditAuthorizationControllerDelegate, CNContactContainerPickerViewControllerDelegate, CNUIContactSaveDelegate, CNContactActionDelegate, CNPresenterDelegate, CNContactContentViewController, UITableViewDelegate, UITableViewDataSource, UIViewControllerRestoration>
 @property  CNMutableContact *mutableContact
 @property  NSMutableArray *issuedSaveRequestIdentifiers
 @property  CNMutableContact *shadowCopyOfReadonlyContact
 @property  CNUIContainerContext *containerContext
 @property  CNContactView *displayContactView
 @property  CNContactView *editingContactView
 @property  CNContactFormatter *contactFormatter
 @property  CNContactHeaderDisplayView *displayHeaderView
 @property  CNContactHeaderEditView *editingHeaderView
 @property  CNUIEditAuthorizationController *editAuthorizationController
 @property  long long editAuthorizationResult
 @property  CNContactContainerPickerViewController *containerPicker
 @property  CNUIGroupsAndContainersSaveManager *groupsAndContainersSaveManager
 @property  NSMutableArray *editingGroups
 @property  NSArray *nameEditingGroups
 @property  NSMutableDictionary *groupsAfterGroup
 @property  NSMapTable *cachedLabelWidths
 @property  NSArray *extraRightBarButtonItems
 @property  NSArray *extraLeftBarButtonItems
 @property  CNCardGroup *cardTopGroup
 @property  CNCardGroup *cardBottomGroup
 @property  CNCardGroup *cardActionsGroup
 @property  CNCardGroup *cardShareLocationGroup
 @property  CNCardGroup *cardMedicalIDGroup
 @property  CNCardGroup *cardBlockContactGroup
 @property  CNCardLinkedCardsGroup *cardLinkedCardsGroup
 @property  CNCardGroupMembershipGroup *cardGroupMembershipGroup
 @property  NSArray *customActions
 @property  CNPropertyNoteCell *noteCell
 @property  CNPropertyAction *sendMessageAction
 @property  CNPropertyFaceTimeAction *faceTimeAction
 @property  CNPropertyFaceTimeAction *faceTimeAudioAction
 @property  CNPropertyLinkedCardsAction *linkedCardsAction
 @property  CNContactAddLinkedCardAction *addLinkedCardAction
 @property  CNContactAddToGroupAction *addToGroupAction
 @property  CNContactAction *shareContactAction
 @property  CNContactAction *createReminderAction
 @property  CNContactAddFavoriteAction *addFavoriteAction
 @property  CNContactToggleBlockCallerAction *blockAction
 @property  CNContactAddNewFieldAction *addNewFieldAction
 @property  CNContactCreateNewContactAction *createNewContactAction
 @property  CNContactAddToExistingContactAction *addToExistingContactAction
 @property  CNContactUpdateExistingContactAction *updateExistingContactAction
 @property  CNContactSuggestionAction *suggestedContactAction
 @property  CNContactClearRecentsDataAction *clearRecentsDataAction
 @property  CNContactAction *stopSharingWithFamilyAction
 @property  CNContactSelectContainersAction *selectContainersAction
 @property  CNCardGameCenterManager *gameCenterManager
 @property  CNCardGroup *cardGameCenterActionGroup
 @property  CNCardGameCenterGroup *gameCenterGroup
 @property  BOOL requiresGameCenterRefresh
 @property  CNContactActionProvider *actionProvider
 @property  NSArray *activatedConstraints
 @property  NSLayoutConstraint *headerHeightConstraint
 @property  CNShareLocationController *shareLocationController
 @property  CNContactInlineActionsViewController *actionsViewController
 @property  CNContactActionsContainerView *actionsWrapperView
 @property  UIView *headerDropShadowView
 @property  CNMedicalIDAction *medicalIDAction
 @property  CNEmergencyContactAction *emergencyContactAction
 @property  <CNHealthStoreManagerToken> *medicalIDRegistrationToken
 @property  <CNCancelable> *medicalIDLookupToken
 @property  NSString *emergencyNumberIdentifier
 @property  CNCardGroup *cardEditingActionsGroup
 @property  CNCardGroup *cardEditingDeleteContactGroup
 @property  CNCardPropertyGeminiGroup *cardEditingGeminiGroup
 @property  CNCardContactContainerGroup *cardEditingContactContainerGroup
 @property  CNContactAction *deleteContactAction
 @property  CNContactAction *ignoreContactAction
 @property  CNSiriContactContextProvider *siriContextProvider
 @property  NSMutableArray *editingLinkedContacts
 @property  CNUIGroupEditingContext *groupEditingContext
 @property  <CNCancelable> *iMessageIDSLookupToken
 @property  <CNCancelable> *faceTimeIDSLookupToken
 @property  NSDictionary *userActivityUserInfo
 @property  HKHealthStore *healthStore
 @property  BOOL outOfProcessSetupComplete
 @property  BOOL isPresentingFullscreenForOutOfProcess
 @property  BOOL didSetFirstResponder
 @property  NSArray *highlightedProperties
 @property  BOOL highlightedPropertyImportant
 @property  CNUIUserActionListDataSource *actionsDataSource
 @property  BOOL contactSupportsTTYCalls
 @property  UIKeyCommand *saveCommand
 @property  UIKeyCommand *editCommand
 @property  UIKeyCommand *cancelCommand
 @property  double keyboardVerticalOverlap
 @property  NSArray *preEditLeftBarButtonItems
 @property  CNUIContactsEnvironment *environment
 @property  CNContactViewCache *contactViewCache
 @property  CNUIUserActivityManager *activityManager
 @property  CNUIGeminiDataSource *geminiDataSource
 @property  BOOL runningPPT
 @property  BOOL layoutPositionallyAfterNavBar
 @property  {UIEdgeInsets=dddd} peripheryInsets
 @property  BOOL shouldIgnoreBlockListChange
 @property  BOOL didSetNewContact
 @property  BOOL forcesTransparentBackground
 @property  BOOL usesBrandedCallHeaderFormat
 @property  BOOL supportsDrafts
 @property  <CNScheduler> *mainThreadScheduler
 @property  NSArray *pendingLayoutBlocks
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isPresentingModalViewController
 @property  <CNContactViewHostProtocol> *delegate
 @property  <CNContactViewControllerPPTDelegate> *pptDelegate

  // class methods
  +[CNContactContentUnitaryViewController descriptorForRequiredKeys]
  +[CNContactContentUnitaryViewController viewControllerWithRestorationIdentifierPath:coder:]
  +[CNContactContentUnitaryViewController tableViewStyle]
  +[CNContactContentUnitaryViewController descriptorForRequiredKeysForContact:]
  +[CNContactContentUnitaryViewController descriptorForRequiredKeysWithDescription:]
  +[CNContactContentUnitaryViewController boolStateRestorationProperties]
  +[CNContactContentUnitaryViewController enablesTransportButtons]
  +[CNContactContentUnitaryViewController _telemetryForContact:]
  +[CNContactContentUnitaryViewController shouldShowGeminiForResult:contact:]
  +[CNContactContentUnitaryViewController createActionsControllerWithActionListDataSource:environment:]
  +[CNContactContentUnitaryViewController actionModelIncludesTTY:]

  // instance methods
  -[CNContactContentUnitaryViewController managedConfiguration]
  -[CNContactContentUnitaryViewController isOutOfProcess]
  -[CNContactContentUnitaryViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CNContactContentUnitaryViewController pendingLayoutBlocks]
  -[CNContactContentUnitaryViewController tableView:heightForRowAtIndexPath:]
  -[CNContactContentUnitaryViewController setManagedConfiguration:]
  -[CNContactContentUnitaryViewController mainThreadScheduler]
  -[CNContactContentUnitaryViewController editAuthorizationController:authorizationDidFinishWithResult:]
  -[CNContactContentUnitaryViewController groupsAndContainersSaveManager]
  -[CNContactContentUnitaryViewController setGroupsAndContainersSaveManager:]
  -[CNContactContentUnitaryViewController encodeRestorableStateWithCoder:]
  -[CNContactContentUnitaryViewController setContactStore:]
  -[CNContactContentUnitaryViewController presentingDelegate]
  -[CNContactContentUnitaryViewController tableView:cellForRowAtIndexPath:]
  -[CNContactContentUnitaryViewController tableView:shouldHaveFullLengthBottomSeparatorForSection:]
  -[CNContactContentUnitaryViewController tableView:numberOfRowsInSection:]
  -[CNContactContentUnitaryViewController tableView:shouldHighlightRowAtIndexPath:]
  -[CNContactContentUnitaryViewController activityManager]
  -[CNContactContentUnitaryViewController numberOfSectionsInTableView:]
  -[CNContactContentUnitaryViewController tableView:estimatedHeightForRowAtIndexPath:]
  -[CNContactContentUnitaryViewController setMessage:]
  -[CNContactContentUnitaryViewController initWithEnvironment:]
  -[CNContactContentUnitaryViewController updateViewConstraints]
  -[CNContactContentUnitaryViewController setPresentingDelegate:]
  -[CNContactContentUnitaryViewController _canShowWhileLocked]
  -[CNContactContentUnitaryViewController setRunningPPT:]
  -[CNContactContentUnitaryViewController setNeedsReload]
  -[CNContactContentUnitaryViewController presentationControllerWillDismiss:]
  -[CNContactContentUnitaryViewController contact]
  -[CNContactContentUnitaryViewController setAllowsEditing:]
  -[CNContactContentUnitaryViewController reloadDataIfNeeded]
  -[CNContactContentUnitaryViewController allowsEditing]
  -[CNContactContentUnitaryViewController setupConstraints]
  -[CNContactContentUnitaryViewController healthStore]
  -[CNContactContentUnitaryViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[CNContactContentUnitaryViewController scrollViewDidScroll:]
  -[CNContactContentUnitaryViewController setActionProvider:]
  -[CNContactContentUnitaryViewController setDelegate:]
  -[CNContactContentUnitaryViewController allowsContactBlocking]
  -[CNContactContentUnitaryViewController setEditing:animated:]
  -[CNContactContentUnitaryViewController tableView:viewForHeaderInSection:]
  -[CNContactContentUnitaryViewController setHealthStore:]
  -[CNContactContentUnitaryViewController contentSizeCategoryDidChange:]
  -[CNContactContentUnitaryViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[CNContactContentUnitaryViewController medicalIDLookupToken]
  -[CNContactContentUnitaryViewController tableView:didSelectRowAtIndexPath:]
  -[CNContactContentUnitaryViewController contactViewCache]
  -[CNContactContentUnitaryViewController delegate]
  -[CNContactContentUnitaryViewController actionDidFinish:]
  -[CNContactContentUnitaryViewController hasPendingChanges]
  -[CNContactContentUnitaryViewController initWithNibName:bundle:]
  -[CNContactContentUnitaryViewController setProhibitedPropertyKeys:]
  -[CNContactContentUnitaryViewController peripheryInsets]
  -[CNContactContentUnitaryViewController viewWillLayoutSubviews]
  -[CNContactContentUnitaryViewController viewDidAppear:]
  -[CNContactContentUnitaryViewController tableView:titleForHeaderInSection:]
  -[CNContactContentUnitaryViewController dealloc]
  -[CNContactContentUnitaryViewController prohibitedPropertyKeys]
  -[CNContactContentUnitaryViewController mode]
  -[CNContactContentUnitaryViewController .cxx_destruct]
  -[CNContactContentUnitaryViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[CNContactContentUnitaryViewController viewDidLoad]
  -[CNContactContentUnitaryViewController initWithContact:]
  -[CNContactContentUnitaryViewController needsReload]
  -[CNContactContentUnitaryViewController viewWillAppear:]
  -[CNContactContentUnitaryViewController loadView]
  -[CNContactContentUnitaryViewController viewDidLayoutSubviews]
  -[CNContactContentUnitaryViewController didMoveToParentViewController:]
  -[CNContactContentUnitaryViewController setMode:]
  -[CNContactContentUnitaryViewController setMedicalIDLookupToken:]
  -[CNContactContentUnitaryViewController tableView:heightForHeaderInSection:]
  -[CNContactContentUnitaryViewController hostingViewControllerForController:]
  -[CNContactContentUnitaryViewController localeDidChange:]
  -[CNContactContentUnitaryViewController updateUserActivityState:]
  -[CNContactContentUnitaryViewController setAllowsContactBlocking:]
  -[CNContactContentUnitaryViewController viewWillDisappear:]
  -[CNContactContentUnitaryViewController contactViewController:didDeleteContact:]
  -[CNContactContentUnitaryViewController setContact:]
  -[CNContactContentUnitaryViewController canBecomeFirstResponder]
  -[CNContactContentUnitaryViewController performWhenViewIsLaidOut:]
  -[CNContactContentUnitaryViewController setPolicy:]
  -[CNContactContentUnitaryViewController actionProvider]
  -[CNContactContentUnitaryViewController tableView:didEndDisplayingCell:forRowAtIndexPath:]
  -[CNContactContentUnitaryViewController contactStore]
  -[CNContactContentUnitaryViewController setIssuedSaveRequestIdentifiers:]
  -[CNContactContentUnitaryViewController updateContact:]
  -[CNContactContentUnitaryViewController adaptivePresentationStyleForPresentationController:]
  -[CNContactContentUnitaryViewController contactFormatter]
  -[CNContactContentUnitaryViewController groupContext]
  -[CNContactContentUnitaryViewController contactStoreDidChangeWithNotification:]
  -[CNContactContentUnitaryViewController _updateUserActivity]
  -[CNContactContentUnitaryViewController message]
  -[CNContactContentUnitaryViewController setTitle:]
  -[CNContactContentUnitaryViewController environment]
  -[CNContactContentUnitaryViewController tableView:shouldDrawBottomSeparatorForSection:]
  -[CNContactContentUnitaryViewController setContactFormatter:]
  -[CNContactContentUnitaryViewController tableView:willDisplayHeaderView:forSection:]
  -[CNContactContentUnitaryViewController policy]
  -[CNContactContentUnitaryViewController issuedSaveRequestIdentifiers]
  -[CNContactContentUnitaryViewController setPendingLayoutBlocks:]
  -[CNContactContentUnitaryViewController setContactDelegate:]
  -[CNContactContentUnitaryViewController contactDelegate]
  -[CNContactContentUnitaryViewController presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:]
  -[CNContactContentUnitaryViewController tableView:titleForFooterInSection:]
  -[CNContactContentUnitaryViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[CNContactContentUnitaryViewController tableView:willDisplayFooterView:forSection:]
  -[CNContactContentUnitaryViewController tableView:heightForFooterInSection:]
  -[CNContactContentUnitaryViewController tableView:viewForFooterInSection:]
  -[CNContactContentUnitaryViewController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[CNContactContentUnitaryViewController tableView:editingStyleForRowAtIndexPath:]
  -[CNContactContentUnitaryViewController tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:]
  -[CNContactContentUnitaryViewController tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:]
  -[CNContactContentUnitaryViewController tableView:shouldIndentWhileEditingRowAtIndexPath:]
  -[CNContactContentUnitaryViewController tableView:didEndEditingRowAtIndexPath:]
  -[CNContactContentUnitaryViewController tableView:shouldShowMenuForRowAtIndexPath:]
  -[CNContactContentUnitaryViewController tableView:canPerformAction:forRowAtIndexPath:withSender:]
  -[CNContactContentUnitaryViewController tableView:performAction:forRowAtIndexPath:withSender:]
  -[CNContactContentUnitaryViewController contentScrollViewForEdge:]
  -[CNContactContentUnitaryViewController isModalInPresentation]
  -[CNContactContentUnitaryViewController allowsSharing]
  -[CNContactContentUnitaryViewController setAllowsSharing:]
  -[CNContactContentUnitaryViewController tableView:shouldDrawTopSeparatorForSection:]
  -[CNContactContentUnitaryViewController tableView:shouldHaveFullLengthTopSeparatorForSection:]
  -[CNContactContentUnitaryViewController setAllowsActions:]
  -[CNContactContentUnitaryViewController setForcesTransparentBackground:]
  -[CNContactContentUnitaryViewController geminiDataSource]
  -[CNContactContentUnitaryViewController setupWithOptions:readyBlock:]
  -[CNContactContentUnitaryViewController didChangeToEditMode:]
  -[CNContactContentUnitaryViewController didChangeToShowTitle:]
  -[CNContactContentUnitaryViewController editCancel]
  -[CNContactContentUnitaryViewController toggleEditing]
  -[CNContactContentUnitaryViewController performConfirmedCancel]
  -[CNContactContentUnitaryViewController alternateName]
  -[CNContactContentUnitaryViewController setAlternateName:]
  -[CNContactContentUnitaryViewController contactViewController:shouldPerformDefaultActionForContact:propertyKey:propertyIdentifier:]
  -[CNContactContentUnitaryViewController action:presentViewController:modalPresentationStyle:sender:]
  -[CNContactContentUnitaryViewController editRequiresAuthorization]
  -[CNContactContentUnitaryViewController editAuthorizationController]
  -[CNContactContentUnitaryViewController setEditAuthorizationController:]
  -[CNContactContentUnitaryViewController faceTimeAudioAction]
  -[CNContactContentUnitaryViewController setFaceTimeAudioAction:]
  -[CNContactContentUnitaryViewController _faceTimeAudioAction]
  -[CNContactContentUnitaryViewController applicationLeftForeground:]
  -[CNContactContentUnitaryViewController toggleEditing:]
  -[CNContactContentUnitaryViewController editCancel:]
  -[CNContactContentUnitaryViewController action:prepareChildContactViewController:sender:]
  -[CNContactContentUnitaryViewController action:presentViewController:sender:]
  -[CNContactContentUnitaryViewController action:dismissViewController:sender:]
  -[CNContactContentUnitaryViewController action:pushViewController:sender:]
  -[CNContactContentUnitaryViewController actionDidUpdate:]
  -[CNContactContentUnitaryViewController actionWasCanceled:]
  -[CNContactContentUnitaryViewController pptDelegate]
  -[CNContactContentUnitaryViewController setPptDelegate:]
  -[CNContactContentUnitaryViewController contactView]
  -[CNContactContentUnitaryViewController contactHeaderView]
  -[CNContactContentUnitaryViewController displayHeaderView]
  -[CNContactContentUnitaryViewController setDisplayedProperties:]
  -[CNContactContentUnitaryViewController displayedProperties]
  -[CNContactContentUnitaryViewController allowsActions]
  -[CNContactContentUnitaryViewController setAllowsCardActions:]
  -[CNContactContentUnitaryViewController allowsCardActions]
  -[CNContactContentUnitaryViewController setAllowsConferencing:]
  -[CNContactContentUnitaryViewController allowsConferencing]
  -[CNContactContentUnitaryViewController setAllowsAddToFavorites:]
  -[CNContactContentUnitaryViewController allowsAddToFavorites]
  -[CNContactContentUnitaryViewController setAllowsSendMessage:]
  -[CNContactContentUnitaryViewController allowsSendMessage]
  -[CNContactContentUnitaryViewController setAllowsAddingToAddressBook:]
  -[CNContactContentUnitaryViewController allowsAddingToAddressBook]
  -[CNContactContentUnitaryViewController setAllowsSettingLinkedContactsAsPreferred:]
  -[CNContactContentUnitaryViewController allowsSettingLinkedContactsAsPreferred]
  -[CNContactContentUnitaryViewController setAllowsActionsModel:]
  -[CNContactContentUnitaryViewController allowsActionsModel]
  -[CNContactContentUnitaryViewController setAllowsDisplayModePickerActions:]
  -[CNContactContentUnitaryViewController allowsDisplayModePickerActions]
  -[CNContactContentUnitaryViewController setAllowsEditPhoto:]
  -[CNContactContentUnitaryViewController allowsEditPhoto]
  -[CNContactContentUnitaryViewController setHideCardActions:]
  -[CNContactContentUnitaryViewController hideCardActions]
  -[CNContactContentUnitaryViewController setIsMailVIP:]
  -[CNContactContentUnitaryViewController isMailVIP]
  -[CNContactContentUnitaryViewController setShowContactBlockingFirst:]
  -[CNContactContentUnitaryViewController showContactBlockingFirst]
  -[CNContactContentUnitaryViewController setImportantMessage:]
  -[CNContactContentUnitaryViewController importantMessage]
  -[CNContactContentUnitaryViewController setPersonHeaderView:]
  -[CNContactContentUnitaryViewController personHeaderView]
  -[CNContactContentUnitaryViewController setPersonHeaderViewController:]
  -[CNContactContentUnitaryViewController personHeaderViewController]
  -[CNContactContentUnitaryViewController cardTopGroup]
  -[CNContactContentUnitaryViewController cardBottomGroup]
  -[CNContactContentUnitaryViewController cardFooterGroup]
  -[CNContactContentUnitaryViewController favoritesDidChangeWithNotification:]
  -[CNContactContentUnitaryViewController _refetchContact]
  -[CNContactContentUnitaryViewController originalContacts]
  -[CNContactContentUnitaryViewController reloadDataPreservingChanges:]
  -[CNContactContentUnitaryViewController addActionWithTitle:menuProvider:inGroup:destructive:]
  -[CNContactContentUnitaryViewController addActionWithTitle:target:selector:menuProvider:inGroup:destructive:]
  -[CNContactContentUnitaryViewController addActionWithTitle:target:selector:inGroup:destructive:]
  -[CNContactContentUnitaryViewController addActionWithTitle:target:selector:inGroup:]
  -[CNContactContentUnitaryViewController removeActionWithTarget:selector:inGroup:]
  -[CNContactContentUnitaryViewController reloadCardGroup:forTableView:]
  -[CNContactContentUnitaryViewController navigationItemController]
  -[CNContactContentUnitaryViewController updateWindowTitleForAppearing:]
  -[CNContactContentUnitaryViewController shouldPresentConfirmCancelAlert]
  -[CNContactContentUnitaryViewController presentConfirmCancelAlertController]
  -[CNContactContentUnitaryViewController saveWasAuthorized]
  -[CNContactContentUnitaryViewController finishEditing:]
  -[CNContactContentUnitaryViewController editingChangeRequiresAuthorization]
  -[CNContactContentUnitaryViewController performAuthorizedSetEditing:animated:]
  -[CNContactContentUnitaryViewController clearMapsDataIfEdited]
  -[CNContactContentUnitaryViewController saveChanges]
  -[CNContactContentUnitaryViewController prepareContactDidAppearForPPT]
  -[CNContactContentUnitaryViewController sender:presentViewController:]
  -[CNContactContentUnitaryViewController centeredSourceRect:inContactView:]
  -[CNContactContentUnitaryViewController setBackgroundColorIfNeededForPresentedViewController:]
  -[CNContactContentUnitaryViewController sender:dismissViewController:]
  -[CNContactContentUnitaryViewController sender:dismissViewController:completionHandler:]
  -[CNContactContentUnitaryViewController isPresentingModalViewController]
  -[CNContactContentUnitaryViewController propertyItemCanIgnoreGuardianRestrictions]
  -[CNContactContentUnitaryViewController isSuggestedContact]
  -[CNContactContentUnitaryViewController setNeedsReloadLazy]
  -[CNContactContentUnitaryViewController _updateContact:withMissingKeysFromRequiredKeys:]
  -[CNContactContentUnitaryViewController _removeUnauthorizedKeysFromContact:]
  -[CNContactContentUnitaryViewController _didCompleteWithContact:]
  -[CNContactContentUnitaryViewController updateWithNewContact:]
  -[CNContactContentUnitaryViewController createdNewContact:]
  -[CNContactContentUnitaryViewController updatedExistingContact:]
  -[CNContactContentUnitaryViewController reloadUnifiedContact]
  -[CNContactContentUnitaryViewController setSaveKeyboardShortcutEnabled:]
  -[CNContactContentUnitaryViewController setCancelKeyboardShortcutEnabled:]
  -[CNContactContentUnitaryViewController setEditKeyboardShortcutEnabled:]
  -[CNContactContentUnitaryViewController contactViewConfiguration]
  -[CNContactContentUnitaryViewController setContactViewConfiguration:]
  -[CNContactContentUnitaryViewController setOriginalContacts:]
  -[CNContactContentUnitaryViewController showingMeContact]
  -[CNContactContentUnitaryViewController setShowingMeContact:]
  -[CNContactContentUnitaryViewController allowsEditInApp]
  -[CNContactContentUnitaryViewController setAllowsEditInApp:]
  -[CNContactContentUnitaryViewController accessAuthorization]
  -[CNContactContentUnitaryViewController setAccessAuthorization:]
  -[CNContactContentUnitaryViewController linkedPoliciesByContactIdentifier]
  -[CNContactContentUnitaryViewController setLinkedPoliciesByContactIdentifier:]
  -[CNContactContentUnitaryViewController missingRequiredKeys]
  -[CNContactContentUnitaryViewController setMissingRequiredKeys:]
  -[CNContactContentUnitaryViewController shouldDrawNavigationBar]
  -[CNContactContentUnitaryViewController setShouldDrawNavigationBar:]
  -[CNContactContentUnitaryViewController initialPrompt]
  -[CNContactContentUnitaryViewController setInitialPrompt:]
  -[CNContactContentUnitaryViewController saveContactExecutor]
  -[CNContactContentUnitaryViewController setSaveContactExecutor:]
  -[CNContactContentUnitaryViewController saveLinkedContactsExecutor]
  -[CNContactContentUnitaryViewController setSaveLinkedContactsExecutor:]
  -[CNContactContentUnitaryViewController shouldIgnoreContactStoreDidChangeNotification]
  -[CNContactContentUnitaryViewController setShouldIgnoreContactStoreDidChangeNotification:]
  -[CNContactContentUnitaryViewController cardFaceTimeGroup]
  -[CNContactContentUnitaryViewController setCardFaceTimeGroup:]
  -[CNContactContentUnitaryViewController recentsData]
  -[CNContactContentUnitaryViewController setRecentsData:]
  -[CNContactContentUnitaryViewController propertyGroups]
  -[CNContactContentUnitaryViewController displayGroups]
  -[CNContactContentUnitaryViewController setDisplayGroups:]
  -[CNContactContentUnitaryViewController activatedConstraints]
  -[CNContactContentUnitaryViewController setActivatedConstraints:]
  -[CNContactContentUnitaryViewController headerHeightConstraint]
  -[CNContactContentUnitaryViewController setHeaderHeightConstraint:]
  -[CNContactContentUnitaryViewController outOfProcessSetupComplete]
  -[CNContactContentUnitaryViewController setOutOfProcessSetupComplete:]
  -[CNContactContentUnitaryViewController didSetFirstResponder]
  -[CNContactContentUnitaryViewController setDidSetFirstResponder:]
  -[CNContactContentUnitaryViewController saveCommand]
  -[CNContactContentUnitaryViewController setSaveCommand:]
  -[CNContactContentUnitaryViewController editCommand]
  -[CNContactContentUnitaryViewController setEditCommand:]
  -[CNContactContentUnitaryViewController cancelCommand]
  -[CNContactContentUnitaryViewController setCancelCommand:]
  -[CNContactContentUnitaryViewController runningPPT]
  -[CNContactContentUnitaryViewController didSetNewContact]
  -[CNContactContentUnitaryViewController setDidSetNewContact:]
  -[CNContactContentUnitaryViewController supportsDrafts]
  -[CNContactContentUnitaryViewController setSupportsDrafts:]
  -[CNContactContentUnitaryViewController shouldShowActionsForAvatarView:]
  -[CNContactContentUnitaryViewController cardActions]
  -[CNContactContentUnitaryViewController shouldShowGemini]
  -[CNContactContentUnitaryViewController mutableContact]
  -[CNContactContentUnitaryViewController actionsViewController]
  -[CNContactContentUnitaryViewController setActionsViewController:]
  -[CNContactContentUnitaryViewController editingLinkedContacts]
  -[CNContactContentUnitaryViewController setEditingLinkedContacts:]
  -[CNContactContentUnitaryViewController performSave]
  -[CNContactContentUnitaryViewController adjustInsetsForKeyboardOverlap:]
  -[CNContactContentUnitaryViewController preEditLeftBarButtonItems]
  -[CNContactContentUnitaryViewController setPreEditLeftBarButtonItems:]
  -[CNContactContentUnitaryViewController extraLeftBarButtonItems]
  -[CNContactContentUnitaryViewController setExtraLeftBarButtonItems:]
  -[CNContactContentUnitaryViewController extraRightBarButtonItems]
  -[CNContactContentUnitaryViewController setExtraRightBarButtonItems:]
  -[CNContactContentUnitaryViewController actionsDataSource]
  -[CNContactContentUnitaryViewController setActionsDataSource:]
  -[CNContactContentUnitaryViewController setAllowsEditPhoto:preservingChanges:]
  -[CNContactContentUnitaryViewController viewController:presentationControllerWillDismiss:]
  -[CNContactContentUnitaryViewController sender:presentViewController:modalPresentationStyle:]
  -[CNContactContentUnitaryViewController shadowCopyOfReadonlyContact]
  -[CNContactContentUnitaryViewController containerContext]
  -[CNContactContentUnitaryViewController personHeaderViewDelegate]
  -[CNContactContentUnitaryViewController setPersonHeaderViewDelegate:]
  -[CNContactContentUnitaryViewController keyboardDidShowNotification:]
  -[CNContactContentUnitaryViewController keyboardWillHideNotification:]
  -[CNContactContentUnitaryViewController action:cellForPropertyItem:sender:]
  -[CNContactContentUnitaryViewController propertyCell:didUpdateItem:withNewLabel:]
  -[CNContactContentUnitaryViewController propertyCell:didUpdateItem:withNewValue:]
  -[CNContactContentUnitaryViewController propertyCell:didDeleteLabel:forGroup:]
  -[CNContactContentUnitaryViewController propertyCell:performActionForItem:withTransportType:]
  -[CNContactContentUnitaryViewController propertyCellDidChangeLayout:]
  -[CNContactContentUnitaryViewController sharedActionsDataSource]
  -[CNContactContentUnitaryViewController propertyItem:willChangeValue:]
  -[CNContactContentUnitaryViewController alreadyPickedGroups]
  -[CNContactContentUnitaryViewController contactGroupPickerDidCancel:]
  -[CNContactContentUnitaryViewController contactGroupPickerDidFinish:withGroup:]
  -[CNContactContentUnitaryViewController headerPhotoDidUpdate]
  -[CNContactContentUnitaryViewController headerViewDidUpdateLabelSizes]
  -[CNContactContentUnitaryViewController viewControllerForHeaderView:]
  -[CNContactContentUnitaryViewController headerViewDidPickPreferredChannel:]
  -[CNContactContentUnitaryViewController isNicknameProhibited]
  -[CNContactContentUnitaryViewController headerView:didAcceptDropOfImageData:]
  -[CNContactContentUnitaryViewController presentViewController:sourceView:]
  -[CNContactContentUnitaryViewController sharingStatusDidChange]
  -[CNContactContentUnitaryViewController contactInlineActionsViewController:shouldPerformActionOfType:withContactProperty:]
  -[CNContactContentUnitaryViewController contactInlineActionsViewControllerWillPresentDisambiguationUI:]
  -[CNContactContentUnitaryViewController contactInlineActionsViewControllerDidDismissDisambiguationUI:]
  -[CNContactContentUnitaryViewController geminiDataSourceDidUpdate:]
  -[CNContactContentUnitaryViewController isHeaderViewPhotoProhibited]
  -[CNContactContentUnitaryViewController prepareCell:]
  -[CNContactContentUnitaryViewController shouldAllowContainerPicking]
  -[CNContactContentUnitaryViewController setupContainerContextIfNeededForContact:]
  -[CNContactContentUnitaryViewController saveNewContactDraft]
  -[CNContactContentUnitaryViewController cardGroupForProperty:]
  -[CNContactContentUnitaryViewController sectionOfGroup:inTableView:]
  -[CNContactContentUnitaryViewController addCardGroup:afterGroup:]
  -[CNContactContentUnitaryViewController indexPathOfDisplayedPropertyItem:]
  -[CNContactContentUnitaryViewController indexPathOfEditingPropertyItem:]
  -[CNContactContentUnitaryViewController indexPathOfPropertyItem:editing:]
  -[CNContactContentUnitaryViewController _policyForContact:mode:]
  -[CNContactContentUnitaryViewController updateEditNavigationItemsAnimated:]
  -[CNContactContentUnitaryViewController updateDoneButton]
  -[CNContactContentUnitaryViewController cancelAsyncLookups]
  -[CNContactContentUnitaryViewController saveModelChangesToContact]
  -[CNContactContentUnitaryViewController saveDescriptionForCurrentState]
  -[CNContactContentUnitaryViewController loadContactViewControllerViews]
  -[CNContactContentUnitaryViewController shouldDisplayAvatarHeaderView]
  -[CNContactContentUnitaryViewController setupTableHeaderView]
  -[CNContactContentUnitaryViewController updateEditPhotoButtonIfNeeded]
  -[CNContactContentUnitaryViewController isStandardGroup:]
  -[CNContactContentUnitaryViewController updateOutOfProcessFullscreenPresentationIfNeeded]
  -[CNContactContentUnitaryViewController _modalPresentationStyleForViewController:]
  -[CNContactContentUnitaryViewController _phoneticNameForValue:currentPhoneticName:property:]
  -[CNContactContentUnitaryViewController _currentTopVisibleGroupInContactView:]
  -[CNContactContentUnitaryViewController _scrollContactView:toVisibleGroup:]
  -[CNContactContentUnitaryViewController _cellIdentifierForTableView:indexPath:]
  -[CNContactContentUnitaryViewController _cellForIndexPath:forTableView:]
  -[CNContactContentUnitaryViewController setMenuProviderForCell:forActionGroupItem:]
  -[CNContactContentUnitaryViewController groupIndexFromTableViewSectionIndex:forTableView:]
  -[CNContactContentUnitaryViewController tableViewSectionIndexFromGroupIndex:forTableView:]
  -[CNContactContentUnitaryViewController _labelWidthKeyForGroup:]
  -[CNContactContentUnitaryViewController _labelWidthKeyForItem:]
  -[CNContactContentUnitaryViewController _updateCachedLabelWidthsForItem:]
  -[CNContactContentUnitaryViewController _updateCachedLabelWidthsForGroup:]
  -[CNContactContentUnitaryViewController _updateCachedLabelWidths]
  -[CNContactContentUnitaryViewController _setNeedsUpdateCachedLabelWidths]
  -[CNContactContentUnitaryViewController _updateCachedLabelWidthsIfNeeded]
  -[CNContactContentUnitaryViewController _updateLabelWidthForCell:]
  -[CNContactContentUnitaryViewController _updateLabelWidthForCellsInGroup:forTableView:reset:]
  -[CNContactContentUnitaryViewController _updateLabelWidthsForAllVisibleCells]
  -[CNContactContentUnitaryViewController addEditingItemAtIndexPath:forTableView:]
  -[CNContactContentUnitaryViewController removeEditingItem:atIndexPath:forTableView:]
  -[CNContactContentUnitaryViewController focusOnFirstEditingItemIfNeeded]
  -[CNContactContentUnitaryViewController focusOnLastEditingItemInGroup:]
  -[CNContactContentUnitaryViewController _setupEditingLinkedContactsForKeys:]
  -[CNContactContentUnitaryViewController addLinkedContact:]
  -[CNContactContentUnitaryViewController removeLinkedContact:]
  -[CNContactContentUnitaryViewController cleanupRecentImageMetadata]
  -[CNContactContentUnitaryViewController desiredHeightForWidth:]
  -[CNContactContentUnitaryViewController requiredSizeForVisibleTableView]
  -[CNContactContentUnitaryViewController updateContactsViewWithBlock:completion:]
  -[CNContactContentUnitaryViewController setupActionsPreservingChanges:]
  -[CNContactContentUnitaryViewController _setupSuggestionActions]
  -[CNContactContentUnitaryViewController _setupEditingCardActions]
  -[CNContactContentUnitaryViewController _propertyGroupsForKeys:]
  -[CNContactContentUnitaryViewController _linkedCardsAction]
  -[CNContactContentUnitaryViewController _addLinkedCardAction]
  -[CNContactContentUnitaryViewController _selectContainersAction]
  -[CNContactContentUnitaryViewController _addNewFieldAction]
  -[CNContactContentUnitaryViewController groupClassForProperty:]
  -[CNContactContentUnitaryViewController _loadPropertyGroups]
  -[CNContactContentUnitaryViewController _reloadPropertyGroupsPreservingChanges:]
  -[CNContactContentUnitaryViewController _addGroup:afterGroup:forTableView:animated:]
  -[CNContactContentUnitaryViewController _addMedicalIDGroupAnimated:forTableView:]
  -[CNContactContentUnitaryViewController _reloadMedicalIDGroup]
  -[CNContactContentUnitaryViewController _reloadContainerContextPreservingChanges:]
  -[CNContactContentUnitaryViewController _reloadLinkedCardsGroup]
  -[CNContactContentUnitaryViewController _addGroupsInArray:afterGroup:]
  -[CNContactContentUnitaryViewController _reloadGeminiGroupPreservingChanges:]
  -[CNContactContentUnitaryViewController createCardEditingGeminiGroupIfNeeded]
  -[CNContactContentUnitaryViewController createCardEditingContactContainerGroupIfNeeded]
  -[CNContactContentUnitaryViewController _loadEditingGroupsPreservingChanges:]
  -[CNContactContentUnitaryViewController _loadNameEditingGroups]
  -[CNContactContentUnitaryViewController _modelHasChanges]
  -[CNContactContentUnitaryViewController _modelIsEmpty]
  -[CNContactContentUnitaryViewController _validateGroup:]
  -[CNContactContentUnitaryViewController _saveChangesForGroups:]
  -[CNContactContentUnitaryViewController _currentGroupsForTableView:]
  -[CNContactContentUnitaryViewController _cardGroupAtTableViewSectionIndex:forTableView:]
  -[CNContactContentUnitaryViewController _itemAtIndexPath:forTableView:]
  -[CNContactContentUnitaryViewController _indexPathIsActionItem:forTableView:]
  -[CNContactContentUnitaryViewController _addedGroupWithName:]
  -[CNContactContentUnitaryViewController globalHeaderHeightForContentOffset:contentInset:]
  -[CNContactContentUnitaryViewController contentOffsetYForGlobalHeaderHeight:contentInset:]
  -[CNContactContentUnitaryViewController updateHeaderHeightToMatchScrollViewState:scrollDirection:animated:]
  -[CNContactContentUnitaryViewController updateHeaderConstraintForGlobalHeaderHeight:direction:animated:]
  -[CNContactContentUnitaryViewController isScrollViewControllingHeaderResizeAnimation:]
  -[CNContactContentUnitaryViewController scrollScrollViewAllTheWayUp:]
  -[CNContactContentUnitaryViewController initializeTableViewsForHeaderHeight]
  -[CNContactContentUnitaryViewController insetsForContactTableView:]
  -[CNContactContentUnitaryViewController scrollIndicatorInsetsForContactTableView:withContentInsets:]
  -[CNContactContentUnitaryViewController updateTableView:contentInsetsTo:withScrollIndicatorInsets:]
  -[CNContactContentUnitaryViewController applyContactStyle]
  -[CNContactContentUnitaryViewController highlightedPropertyImportant]
  -[CNContactContentUnitaryViewController setHighlightedPropertyImportant:]
  -[CNContactContentUnitaryViewController setMutableContact:]
  -[CNContactContentUnitaryViewController setShadowCopyOfReadonlyContact:]
  -[CNContactContentUnitaryViewController setContainerContext:]
  -[CNContactContentUnitaryViewController containerPicker]
  -[CNContactContentUnitaryViewController setContainerPicker:]
  -[CNContactContentUnitaryViewController isPresentingFullscreenForOutOfProcess]
  -[CNContactContentUnitaryViewController setIsPresentingFullscreenForOutOfProcess:]
  -[CNContactContentUnitaryViewController editingGroups]
  -[CNContactContentUnitaryViewController setEditingGroups:]
  -[CNContactContentUnitaryViewController nameEditingGroups]
  -[CNContactContentUnitaryViewController setNameEditingGroups:]
  -[CNContactContentUnitaryViewController groupsAfterGroup]
  -[CNContactContentUnitaryViewController setGroupsAfterGroup:]
  -[CNContactContentUnitaryViewController cachedLabelWidths]
  -[CNContactContentUnitaryViewController setCachedLabelWidths:]
  -[CNContactContentUnitaryViewController cardMedicalIDGroup]
  -[CNContactContentUnitaryViewController setCardMedicalIDGroup:]
  -[CNContactContentUnitaryViewController cardLinkedCardsGroup]
  -[CNContactContentUnitaryViewController setCardLinkedCardsGroup:]
  -[CNContactContentUnitaryViewController customActions]
  -[CNContactContentUnitaryViewController setCustomActions:]
  -[CNContactContentUnitaryViewController noteCell]
  -[CNContactContentUnitaryViewController setNoteCell:]
  -[CNContactContentUnitaryViewController linkedCardsAction]
  -[CNContactContentUnitaryViewController setLinkedCardsAction:]
  -[CNContactContentUnitaryViewController addLinkedCardAction]
  -[CNContactContentUnitaryViewController setAddLinkedCardAction:]
  -[CNContactContentUnitaryViewController addNewFieldAction]
  -[CNContactContentUnitaryViewController setAddNewFieldAction:]
  -[CNContactContentUnitaryViewController suggestedContactAction]
  -[CNContactContentUnitaryViewController setSuggestedContactAction:]
  -[CNContactContentUnitaryViewController selectContainersAction]
  -[CNContactContentUnitaryViewController setSelectContainersAction:]
  -[CNContactContentUnitaryViewController headerDropShadowView]
  -[CNContactContentUnitaryViewController setHeaderDropShadowView:]
  -[CNContactContentUnitaryViewController medicalIDAction]
  -[CNContactContentUnitaryViewController setMedicalIDAction:]
  -[CNContactContentUnitaryViewController emergencyContactAction]
  -[CNContactContentUnitaryViewController setEmergencyContactAction:]
  -[CNContactContentUnitaryViewController medicalIDRegistrationToken]
  -[CNContactContentUnitaryViewController setMedicalIDRegistrationToken:]
  -[CNContactContentUnitaryViewController emergencyNumberIdentifier]
  -[CNContactContentUnitaryViewController setEmergencyNumberIdentifier:]
  -[CNContactContentUnitaryViewController cardEditingActionsGroup]
  -[CNContactContentUnitaryViewController setCardEditingActionsGroup:]
  -[CNContactContentUnitaryViewController cardEditingDeleteContactGroup]
  -[CNContactContentUnitaryViewController setCardEditingDeleteContactGroup:]
  -[CNContactContentUnitaryViewController cardEditingGeminiGroup]
  -[CNContactContentUnitaryViewController setCardEditingGeminiGroup:]
  -[CNContactContentUnitaryViewController cardEditingContactContainerGroup]
  -[CNContactContentUnitaryViewController setCardEditingContactContainerGroup:]
  -[CNContactContentUnitaryViewController deleteContactAction]
  -[CNContactContentUnitaryViewController setDeleteContactAction:]
  -[CNContactContentUnitaryViewController ignoreContactAction]
  -[CNContactContentUnitaryViewController setIgnoreContactAction:]
  -[CNContactContentUnitaryViewController siriContextProvider]
  -[CNContactContentUnitaryViewController setSiriContextProvider:]
  -[CNContactContentUnitaryViewController userActivityUserInfo]
  -[CNContactContentUnitaryViewController setUserActivityUserInfo:]
  -[CNContactContentUnitaryViewController highlightedProperties]
  -[CNContactContentUnitaryViewController setHighlightedProperties:]
  -[CNContactContentUnitaryViewController keyboardVerticalOverlap]
  -[CNContactContentUnitaryViewController setKeyboardVerticalOverlap:]
  -[CNContactContentUnitaryViewController forcesTransparentBackground]
  -[CNContactContentUnitaryViewController showEditAuthorizationPane:animated:]
  -[CNContactContentUnitaryViewController setMainThreadScheduler:]
  -[CNContactContentUnitaryViewController _addCreateNewContactAction]
  -[CNContactContentUnitaryViewController _addToExistingContactAction]
  -[CNContactContentUnitaryViewController _sendMessageActionAllowingEmailIDs:]
  -[CNContactContentUnitaryViewController _addFavoriteActionWithConferencing:telephony:]
  -[CNContactContentUnitaryViewController _faceTimeAction]
  -[CNContactContentUnitaryViewController _shareContactAction]
  -[CNContactContentUnitaryViewController sendMessageAction]
  -[CNContactContentUnitaryViewController faceTimeAction]
  -[CNContactContentUnitaryViewController shareContactAction]
  -[CNContactContentUnitaryViewController addFavoriteAction]
  -[CNContactContentUnitaryViewController createReminderAction]
  -[CNContactContentUnitaryViewController createNewContactAction]
  -[CNContactContentUnitaryViewController addToExistingContactAction]
  -[CNContactContentUnitaryViewController stopSharingWithFamilyAction]
  -[CNContactContentUnitaryViewController authorizationCheck]
  -[CNContactContentUnitaryViewController layoutPositionallyAfterNavBar]
  -[CNContactContentUnitaryViewController setLayoutPositionallyAfterNavBar:]
  -[CNContactContentUnitaryViewController setUsesBrandedCallHeaderFormat:]
  -[CNContactContentUnitaryViewController usesBrandedCallHeaderFormat]
  -[CNContactContentUnitaryViewController _handleCoalescedBlockListDidChange]
  -[CNContactContentUnitaryViewController blockListDidChange:]
  -[CNContactContentUnitaryViewController adjustPreferredContentSize]
  -[CNContactContentUnitaryViewController setupTableFooterView]
  -[CNContactContentUnitaryViewController shouldPresentFullscreen:]
  -[CNContactContentUnitaryViewController requestFavoritesUpdateWithGemini]
  -[CNContactContentUnitaryViewController removeFirstSectionHeaderViewControllerFromHierarchy]
  -[CNContactContentUnitaryViewController _retrieveActionsModelPreservingChanges:]
  -[CNContactContentUnitaryViewController _setupCardActions]
  -[CNContactContentUnitaryViewController setupShareLocationActionReload:]
  -[CNContactContentUnitaryViewController _setupContactBlockingActionPreservingChanges:withUpdate:]
  -[CNContactContentUnitaryViewController _setupAddToAddressBookActions]
  -[CNContactContentUnitaryViewController _setupCustomActions]
  -[CNContactContentUnitaryViewController shareLocationController]
  -[CNContactContentUnitaryViewController _updateExistingContactAction]
  -[CNContactContentUnitaryViewController _clearRecentsDataAction]
  -[CNContactContentUnitaryViewController _updateAvailableTransports]
  -[CNContactContentUnitaryViewController _updateAvailableTransportsForItems:]
  -[CNContactContentUnitaryViewController _updateIMessageTransportButtonsForItems:]
  -[CNContactContentUnitaryViewController _updatePhoneTransportButtonsForItems:]
  -[CNContactContentUnitaryViewController _updateEmailTransportButtonsForItems:]
  -[CNContactContentUnitaryViewController _updateTTYTransportButtonsForItems:]
  -[CNContactContentUnitaryViewController _reloadFaceTimeGroup]
  -[CNContactContentUnitaryViewController _addFaceTimeGroupAnimated:]
  -[CNContactContentUnitaryViewController shouldAddFaceTimeGroup]
  -[CNContactContentUnitaryViewController _reloadAlertGroups]
  -[CNContactContentUnitaryViewController _loadDisplayGroups]
  -[CNContactContentUnitaryViewController setCardTopGroup:]
  -[CNContactContentUnitaryViewController setCardBottomGroup:]
  -[CNContactContentUnitaryViewController cardActionsGroup]
  -[CNContactContentUnitaryViewController setCardActionsGroup:]
  -[CNContactContentUnitaryViewController cardShareLocationGroup]
  -[CNContactContentUnitaryViewController setCardShareLocationGroup:]
  -[CNContactContentUnitaryViewController cardBlockContactGroup]
  -[CNContactContentUnitaryViewController setCardBlockContactGroup:]
  -[CNContactContentUnitaryViewController blockAction]
  -[CNContactContentUnitaryViewController setBlockAction:]
  -[CNContactContentUnitaryViewController updateExistingContactAction]
  -[CNContactContentUnitaryViewController setUpdateExistingContactAction:]
  -[CNContactContentUnitaryViewController clearRecentsDataAction]
  -[CNContactContentUnitaryViewController setClearRecentsDataAction:]
  -[CNContactContentUnitaryViewController setShareLocationController:]
  -[CNContactContentUnitaryViewController actionsWrapperView]
  -[CNContactContentUnitaryViewController setActionsWrapperView:]
  -[CNContactContentUnitaryViewController iMessageIDSLookupToken]
  -[CNContactContentUnitaryViewController setIMessageIDSLookupToken:]
  -[CNContactContentUnitaryViewController faceTimeIDSLookupToken]
  -[CNContactContentUnitaryViewController setFaceTimeIDSLookupToken:]
  -[CNContactContentUnitaryViewController contactSupportsTTYCalls]
  -[CNContactContentUnitaryViewController setContactSupportsTTYCalls:]
  -[CNContactContentUnitaryViewController shouldIgnoreBlockListChange]
  -[CNContactContentUnitaryViewController setShouldIgnoreBlockListChange:]
  -[CNContactContentUnitaryViewController initWithContact:prohibitedPropertyKeys:]
  -[CNContactContentUnitaryViewController editingHeaderView]
  -[CNContactContentUnitaryViewController displayContactView]
  -[CNContactContentUnitaryViewController editingContactView]
  -[CNContactContentUnitaryViewController setContact:shouldScrollToTop:]
  -[CNContactContentUnitaryViewController reloadSections:forTableView:]
  -[CNContactContentUnitaryViewController reloadCardGroupsForFavoritesUpdateInTableView:]
  -[CNContactContentUnitaryViewController resetEditAuthorizationState]
  -[CNContactContentUnitaryViewController setupViewHierarchyIncludingAvatarHeader:editing:]
  -[CNContactContentUnitaryViewController shouldShowVerifiedFooterInSection:inTableView:]
  -[CNContactContentUnitaryViewController removeContactFromGroup:]
  -[CNContactContentUnitaryViewController authorizedRemoveContactFromGroup:]
  -[CNContactContentUnitaryViewController addContactToGroup:]
  -[CNContactContentUnitaryViewController authorizedAddContactToGroup:]
  -[CNContactContentUnitaryViewController authorizeEditContactWithTargetGroup:completion:]
  -[CNContactContentUnitaryViewController hasTableViewHeaderFirstSectionForTableView:]
  -[CNContactContentUnitaryViewController tableViewHeaderFirstSectionCellForTableView:]
  -[CNContactContentUnitaryViewController isTableViewHeaderFirstSectionIndexPath:forTableView:]
  -[CNContactContentUnitaryViewController contactHasAvailablePropertiesToFavorite:isPhoneAppAvailable:isFaceTimeAppAvailable:]
  -[CNContactContentUnitaryViewController labeledValuesHasNonSuggestion:]
  -[CNContactContentUnitaryViewController _addToGroupAction]
  -[CNContactContentUnitaryViewController _allDisplayPropertyItemsFromGroups:]
  -[CNContactContentUnitaryViewController _reloadGameCenterGroup]
  -[CNContactContentUnitaryViewController _reloadGameCenterGroupWithPreflight]
  -[CNContactContentUnitaryViewController _reloadGameCenterGroupWithRefresh]
  -[CNContactContentUnitaryViewController updateGameCenterGroupAndActionsForContact:relationshipResults:]
  -[CNContactContentUnitaryViewController addGameCenterActionGroupAnimated:]
  -[CNContactContentUnitaryViewController addGameCenterGroupAnimated:]
  -[CNContactContentUnitaryViewController shouldAddGameCenterGroup]
  -[CNContactContentUnitaryViewController shouldReallyShowLinkedContactsForEditingState:]
  -[CNContactContentUnitaryViewController _reloadGroupMembershipGroup]
  -[CNContactContentUnitaryViewController hasExistingGroups]
  -[CNContactContentUnitaryViewController _reloadGroupEditingContext]
  -[CNContactContentUnitaryViewController updateInsetsIfNeededForTableView:isEditing:]
  -[CNContactContentUnitaryViewController setDisplayContactView:]
  -[CNContactContentUnitaryViewController setEditingContactView:]
  -[CNContactContentUnitaryViewController setDisplayHeaderView:]
  -[CNContactContentUnitaryViewController setEditingHeaderView:]
  -[CNContactContentUnitaryViewController editAuthorizationResult]
  -[CNContactContentUnitaryViewController setEditAuthorizationResult:]
  -[CNContactContentUnitaryViewController cardGroupMembershipGroup]
  -[CNContactContentUnitaryViewController setCardGroupMembershipGroup:]
  -[CNContactContentUnitaryViewController setSendMessageAction:]
  -[CNContactContentUnitaryViewController setFaceTimeAction:]
  -[CNContactContentUnitaryViewController addToGroupAction]
  -[CNContactContentUnitaryViewController setAddToGroupAction:]
  -[CNContactContentUnitaryViewController setShareContactAction:]
  -[CNContactContentUnitaryViewController setCreateReminderAction:]
  -[CNContactContentUnitaryViewController setAddFavoriteAction:]
  -[CNContactContentUnitaryViewController setCreateNewContactAction:]
  -[CNContactContentUnitaryViewController setAddToExistingContactAction:]
  -[CNContactContentUnitaryViewController setStopSharingWithFamilyAction:]
  -[CNContactContentUnitaryViewController gameCenterManager]
  -[CNContactContentUnitaryViewController setGameCenterManager:]
  -[CNContactContentUnitaryViewController cardGameCenterActionGroup]
  -[CNContactContentUnitaryViewController setCardGameCenterActionGroup:]
  -[CNContactContentUnitaryViewController gameCenterGroup]
  -[CNContactContentUnitaryViewController setGameCenterGroup:]
  -[CNContactContentUnitaryViewController requiresGameCenterRefresh]
  -[CNContactContentUnitaryViewController setRequiresGameCenterRefresh:]
  -[CNContactContentUnitaryViewController groupEditingContext]
  -[CNContactContentUnitaryViewController setGroupEditingContext:]


CNPhotoPickerImageWithEffectGenerator : NSObject
  // class methods
  +[CNPhotoPickerImageWithEffectGenerator coreImageFilterNames]
  +[CNPhotoPickerImageWithEffectGenerator coreImageFilterDisplayNames]
  +[CNPhotoPickerImageWithEffectGenerator displayNameForFilterNamed:]
  +[CNPhotoPickerImageWithEffectGenerator imagesByApplyingEffectsToImageData:withScaleFactor:originalImageScale:cropRect:completion:]
  +[CNPhotoPickerImageWithEffectGenerator imageByApplyingEffect:withContext:toImageData:]
  +[CNPhotoPickerImageWithEffectGenerator imageByApplyingEffect:withContext:toImage:withSize:]


CNMeCardSharingAudienceDataSource : NSObject <CNMeCardSharingSectionDataSource>
 @property  BOOL shouldShowEveryone
 @property  NSArray *valuesArray
 @property  CNMeCardSharingRowItem *selectedItem
 @property  NSArray *items
 @property  unsigned long selectedSharingAudience
 @property  unsigned long selectedIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNMeCardSharingAudienceDataSource setItems:]
  -[CNMeCardSharingAudienceDataSource numberOfItems]
  -[CNMeCardSharingAudienceDataSource .cxx_destruct]
  -[CNMeCardSharingAudienceDataSource items]
  -[CNMeCardSharingAudienceDataSource selectedIndex]
  -[CNMeCardSharingAudienceDataSource setSelectedItem:]
  -[CNMeCardSharingAudienceDataSource selectedItem]
  -[CNMeCardSharingAudienceDataSource didSelectItemAtIndex:]
  -[CNMeCardSharingAudienceDataSource selectedSharingAudience]
  -[CNMeCardSharingAudienceDataSource reloadItems]
  -[CNMeCardSharingAudienceDataSource supportsSelection]
  -[CNMeCardSharingAudienceDataSource sectionHeaderLabel]
  -[CNMeCardSharingAudienceDataSource sectionFooterLabel]
  -[CNMeCardSharingAudienceDataSource itemForIndex:]
  -[CNMeCardSharingAudienceDataSource initWithSelectedSharingAudience:]
  -[CNMeCardSharingAudienceDataSource setSelectedSharingAudience:]
  -[CNMeCardSharingAudienceDataSource indexForSharingAudience:]
  -[CNMeCardSharingAudienceDataSource sharingAudienceForIndex:]
  -[CNMeCardSharingAudienceDataSource shouldShowEveryone]
  -[CNMeCardSharingAudienceDataSource setShouldShowEveryone:]
  -[CNMeCardSharingAudienceDataSource valuesArray]
  -[CNMeCardSharingAudienceDataSource setValuesArray:]


CNPhotoPickerActionButtonBlockHandler : NSObject
 @property  @? actionBlock

  // instance methods
  -[CNPhotoPickerActionButtonBlockHandler performAction]
  -[CNPhotoPickerActionButtonBlockHandler .cxx_destruct]
  -[CNPhotoPickerActionButtonBlockHandler actionBlock]
  -[CNPhotoPickerActionButtonBlockHandler initWithActionBlock:]


CNPhotoPickerActionButton : UIButton
 @property  BOOL isDestructive
 @property  CNPhotoPickerActionButtonBlockHandler *blockHandler

  // class methods
  +[CNPhotoPickerActionButton buttonWithTitle:actionBlock:]
  +[CNPhotoPickerActionButton defaultButtonWithTitle:actionBlock:]
  +[CNPhotoPickerActionButton destructiveButtonWithTitle:actionBlock:]

  // instance methods
  -[CNPhotoPickerActionButton isDestructive]
  -[CNPhotoPickerActionButton .cxx_destruct]
  -[CNPhotoPickerActionButton initWithFrame:]
  -[CNPhotoPickerActionButton setIsDestructive:]
  -[CNPhotoPickerActionButton performActionBlock]
  -[CNPhotoPickerActionButton blockHandler]
  -[CNPhotoPickerActionButton setBlockHandler:]


CNPhotoPickerActionsViewControllerLayout : NSObject <CNPhotoPickerActionsViewControllerLayout>
 @property  {CGSize=dd} containerSize
 @property  {UIEdgeInsets=dddd} edgeInsets
 @property  long long buttonCount
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} actionButtonsViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} imageContainerViewFrame

  // class methods
  +[CNPhotoPickerActionsViewControllerLayout buttonHeight]
  +[CNPhotoPickerActionsViewControllerLayout heightForButtonsViewWithButtonCount:]

  // instance methods
  -[CNPhotoPickerActionsViewControllerLayout containerSize]
  -[CNPhotoPickerActionsViewControllerLayout edgeInsets]
  -[CNPhotoPickerActionsViewControllerLayout buttonCount]
  -[CNPhotoPickerActionsViewControllerLayout actionButtonsViewFrame]
  -[CNPhotoPickerActionsViewControllerLayout imageContainerViewFrame]
  -[CNPhotoPickerActionsViewControllerLayout initWithContainerSize:insets:buttonCount:]
  -[CNPhotoPickerActionsViewControllerLayout actionButtonsViewFrameForButtonCount:]


CNPhotoPickerConfiguration : NSObject
 @property  BOOL includeContactImage
 @property  BOOL includeUnifiedContactImages
 @property  BOOL includeFaces
 @property  BOOL includeMonograms
 @property  BOOL includeAnimoji
 @property  BOOL includeRecents
 @property  BOOL includeEmoji
 @property  BOOL allowPhotoCapture
 @property  BOOL allowPhotoFromLibrary
 @property  BOOL allowAnimojiCreation
 @property  BOOL allowRotation

  // class methods
  +[CNPhotoPickerConfiguration defaultConfiguration]
  +[CNPhotoPickerConfiguration contactsConfiguration]
  +[CNPhotoPickerConfiguration gameCenterConfiguration]

  // instance methods
  -[CNPhotoPickerConfiguration includeFaces]
  -[CNPhotoPickerConfiguration allowRotation]
  -[CNPhotoPickerConfiguration includeUnifiedContactImages]
  -[CNPhotoPickerConfiguration includeContactImage]
  -[CNPhotoPickerConfiguration includeMonograms]
  -[CNPhotoPickerConfiguration includeAnimoji]
  -[CNPhotoPickerConfiguration includeRecents]
  -[CNPhotoPickerConfiguration configurationBySettingAllowsPhotoCapture:]
  -[CNPhotoPickerConfiguration initWithIncludeContactImage:includeUnifiedContactImages:includeFaces:includeMonograms:includeAnimoji:includeRecents:includeEmoji:allowPhotoCapture:allowPhotoFromLibrary:allowAnimojiCreation:allowRotation:]
  -[CNPhotoPickerConfiguration includeEmoji]
  -[CNPhotoPickerConfiguration allowPhotoCapture]
  -[CNPhotoPickerConfiguration allowPhotoFromLibrary]
  -[CNPhotoPickerConfiguration allowAnimojiCreation]


CNContactContainerPickerCell : UICollectionViewListCell
 @property  BOOL allowsDeselection

  // instance methods
  -[CNContactContainerPickerCell updateConfigurationUsingState:]
  -[CNContactContainerPickerCell init]
  -[CNContactContainerPickerCell allowsDeselection]
  -[CNContactContainerPickerCell setAllowsDeselection:]


CNContactContainerPickerItem : NSObject
 @property  NSString *name
 @property  NSString *identifier

  // instance methods
  -[CNContactContainerPickerItem identifier]
  -[CNContactContainerPickerItem .cxx_destruct]
  -[CNContactContainerPickerItem setIdentifier:]
  -[CNContactContainerPickerItem setName:]
  -[CNContactContainerPickerItem name]


CNContactContainerPickerViewController : UIViewController <UICollectionViewDelegate>
 @property  CNContactViewCache *contactViewCache
 @property  CNAccountsAndGroupsDataSource *accountsDataSource
 @property  UICollectionView *collectionView
 @property  UICollectionViewDiffableDataSource *dataSource
 @property  NSArray *items
 @property  NSArray *containers
 @property  <CNContactContainerPickerViewControllerDelegate> *delegate
 @property  NSArray *selectedContainerIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactContainerPickerViewController os_log]

  // instance methods
  -[CNContactContainerPickerViewController setCollectionView:]
  -[CNContactContainerPickerViewController containers]
  -[CNContactContainerPickerViewController reloadData]
  -[CNContactContainerPickerViewController dataSource]
  -[CNContactContainerPickerViewController setItems:]
  -[CNContactContainerPickerViewController setDelegate:]
  -[CNContactContainerPickerViewController collectionView:shouldDeselectItemAtIndexPath:]
  -[CNContactContainerPickerViewController collectionView:didDeselectItemAtIndexPath:]
  -[CNContactContainerPickerViewController collectionView:shouldSelectItemAtIndexPath:]
  -[CNContactContainerPickerViewController contactViewCache]
  -[CNContactContainerPickerViewController delegate]
  -[CNContactContainerPickerViewController currentSnapshot]
  -[CNContactContainerPickerViewController .cxx_destruct]
  -[CNContactContainerPickerViewController collectionView]
  -[CNContactContainerPickerViewController viewDidLoad]
  -[CNContactContainerPickerViewController discoverContainers]
  -[CNContactContainerPickerViewController items]
  -[CNContactContainerPickerViewController allAccounts]
  -[CNContactContainerPickerViewController setDataSource:]
  -[CNContactContainerPickerViewController collectionView:didSelectItemAtIndexPath:]
  -[CNContactContainerPickerViewController writableContainersForAccount:]
  -[CNContactContainerPickerViewController setContactViewCache:]
  -[CNContactContainerPickerViewController setContainers:]
  -[CNContactContainerPickerViewController setupCollectionView]
  -[CNContactContainerPickerViewController setupDiffableDataSource]
  -[CNContactContainerPickerViewController initWithContactViewCache:selectedContainerIdentifiers:]
  -[CNContactContainerPickerViewController setupDoneButton]
  -[CNContactContainerPickerViewController dataSourceWithCellRegistration:]
  -[CNContactContainerPickerViewController setSelectedContainerIdentifiers:]
  -[CNContactContainerPickerViewController selectedContainerIdentifiers]
  -[CNContactContainerPickerViewController accountsDataSource]
  -[CNContactContainerPickerViewController setAccountsDataSource:]


CNAvatarCardTransition : NSObject <UIViewControllerAnimatedTransitioning>
 @property  UIPanGestureRecognizer *gestureRecognizer
 @property  <UIViewControllerContextTransitioning> *context
 @property  UIView *presentedView
 @property  BOOL interactive
 @property  BOOL reversed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNAvatarCardTransition setGestureRecognizer:]
  -[CNAvatarCardTransition reversed]
  -[CNAvatarCardTransition gestureRecognizer]
  -[CNAvatarCardTransition presentedView]
  -[CNAvatarCardTransition interactive]
  -[CNAvatarCardTransition animateTransition:]
  -[CNAvatarCardTransition transitionDuration:]
  -[CNAvatarCardTransition .cxx_destruct]
  -[CNAvatarCardTransition setContext:]
  -[CNAvatarCardTransition setReversed:]
  -[CNAvatarCardTransition context]
  -[CNAvatarCardTransition setPresentedView:]


CNAvatarCardTransitionController : NSObject <UIViewControllerTransitioningDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNAvatarCardTransitionController sharedController]

  // instance methods
  -[CNAvatarCardTransitionController animationControllerForPresentedController:presentingController:sourceController:]
  -[CNAvatarCardTransitionController animationControllerForDismissedController:]
  -[CNAvatarCardTransitionController presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]


CNActionMenuHelper : NSObject
 @property  NSArray *currentMenuItems
 @property  NSArray *displayedMenuItems
 @property  BOOL isMenuDisplayed
 @property  UIDeferredMenuElement *deferredMenuItem
 @property  @? deferredMenuElementCompletionBlock
 @property  NSString *menuTitle

  // instance methods
  -[CNActionMenuHelper menuProviderWithActionBlock:]
  -[CNActionMenuHelper targetedPreviewForSourceView:]
  -[CNActionMenuHelper menuForProviders]
  -[CNActionMenuHelper isMenuDisplayed]
  -[CNActionMenuHelper currentMenuItems]
  -[CNActionMenuHelper displayedMenuItems]
  -[CNActionMenuHelper willDismissMenu]
  -[CNActionMenuHelper setMenuTitle:]
  -[CNActionMenuHelper willDisplayMenuWithContextMenuInteraction:]
  -[CNActionMenuHelper .cxx_destruct]
  -[CNActionMenuHelper menuTitle]
  -[CNActionMenuHelper setIsMenuDisplayed:]
  -[CNActionMenuHelper setDeferredMenuElementCompletionBlock:]
  -[CNActionMenuHelper deferredMenuElementCompletionBlock]
  -[CNActionMenuHelper setDisplayedMenuItems:]
  -[CNActionMenuHelper setCurrentMenuItems:]
  -[CNActionMenuHelper configurationActionProviderWithActionBlock:]
  -[CNActionMenuHelper setupDeferredMenuItem]
  -[CNActionMenuHelper setDeferredMenuItem:]
  -[CNActionMenuHelper replaceDeferredMenuItemWithMenuItems:]
  -[CNActionMenuHelper updateWithMenuItems:contextMenuInteraction:]
  -[CNActionMenuHelper deferredMenuItem]
  -[CNActionMenuHelper updateVisibleMenuWithMenuItems:contextMenuInteraction:]


CNContactListActionConfiguration : NSObject
 @property  CNContactStore *contactStore
 @property  CNUIContactsEnvironment *environment
 @property  CNContactViewCache *contactViewCache
 @property  CNContactFormatter *contactFormatter
 @property  CNContactStoreFilter *contactStoreFilter

  // class methods
  +[CNContactListActionConfiguration log]

  // instance methods
  -[CNContactListActionConfiguration setContactStore:]
  -[CNContactListActionConfiguration contactViewCache]
  -[CNContactListActionConfiguration .cxx_destruct]
  -[CNContactListActionConfiguration containerForContainerIdentifier:]
  -[CNContactListActionConfiguration contactStore]
  -[CNContactListActionConfiguration setEnvironment:]
  -[CNContactListActionConfiguration contactFormatter]
  -[CNContactListActionConfiguration setContactViewCache:]
  -[CNContactListActionConfiguration environment]
  -[CNContactListActionConfiguration setContactFormatter:]
  -[CNContactListActionConfiguration contactStoreFilter]
  -[CNContactListActionConfiguration setContactStoreFilter:]


CNContactListActionHelper : NSObject <CNContactListActionDelegate, CNContactOrbActionsControllerDelegate>
 @property  CNContactListActionConfiguration *actionConfiguration
 @property  CNContactListActionExecutor *actionExecutor
 @property  CNContactOrbActionsController *contactActionsController
 @property  <CNContactListActionHelperDelegate> *delegate
 @property  BOOL includesContactOrbActions
 @property  BOOL includesEditingActions
 @property  NSArray *contacts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactListActionHelper descriptorForRequiredKeysForMultiSelectAction:]

  // instance methods
  -[CNContactListActionHelper copyContacts:]
  -[CNContactListActionHelper setDelegate:]
  -[CNContactListActionHelper delegate]
  -[CNContactListActionHelper actionDidFinish:]
  -[CNContactListActionHelper setContacts:]
  -[CNContactListActionHelper .cxx_destruct]
  -[CNContactListActionHelper contacts]
  -[CNContactListActionHelper presentingViewControllerForActions]
  -[CNContactListActionHelper action:presentViewController:]
  -[CNContactListActionHelper contactOrbActionsController:didUpdateWithMenu:]
  -[CNContactListActionHelper presentingViewControllerForActionsController:]
  -[CNContactListActionHelper updateMeContact:]
  -[CNContactListActionHelper initWithContactStore:environment:contactFormatter:undoManager:]
  -[CNContactListActionHelper searchActionsForContacts:]
  -[CNContactListActionHelper actionsForContacts:dataSourceFilter:sourceView:]
  -[CNContactListActionHelper trailingSwipeActionsForContact:dataSourceFilter:]
  -[CNContactListActionHelper removeContactsFromGroup:withConfirmation:]
  -[CNContactListActionHelper canRemoveFromGroup]
  -[CNContactListActionHelper shareContacts:sourceView:]
  -[CNContactListActionHelper deleteContacts:]
  -[CNContactListActionHelper deleteContacts:dataSourceFilter:]
  -[CNContactListActionHelper mergeContacts:]
  -[CNContactListActionHelper canShowMergeActionForContacts:]
  -[CNContactListActionHelper canShowSetAsMyCardActionForContacts:]
  -[CNContactListActionHelper contactActionsMenuForContact:]
  -[CNContactListActionHelper contactActionsMenuFromItems:]
  -[CNContactListActionHelper canShowContactActionsForContacts:]
  -[CNContactListActionHelper actionConfiguration]
  -[CNContactListActionHelper setActionConfiguration:]
  -[CNContactListActionHelper includesContactOrbActions]
  -[CNContactListActionHelper setIncludesContactOrbActions:]
  -[CNContactListActionHelper includesEditingActions]
  -[CNContactListActionHelper setIncludesEditingActions:]
  -[CNContactListActionHelper actionExecutor]
  -[CNContactListActionHelper setActionExecutor:]
  -[CNContactListActionHelper contactActionsController]
  -[CNContactListActionHelper setContactActionsController:]


CNUIVCardUtilities : NSObject
  // class methods
  +[CNUIVCardUtilities fileNameForContact:]


CNMutableContainer(UIAdditions)
	// instance methods
	-[CNMutableContainer(UIAdditions) addContainerInStore:toAccountWithIdentifier:saveRequest:]
	-[CNMutableContainer(UIAdditions) updateContainerInStore:saveRequest:]
	-[CNMutableContainer(UIAdditions) deleteContainerInStore:saveRequest:]

UIControl(AvatarViewWorkaround)
	// instance methods
	-[UIControl(AvatarViewWorkaround) _cnui_super_touchesCancelled:withEvent:]

UIApplicationShortcutIcon(ContactsUI)
	// class methods
	+[UIApplicationShortcutIcon(ContactsUI) iconWithContact:]

CNUILikenessRenderingScope(CNAvatarImageRenderingScope)
	// instance methods
	-[CNUILikenessRenderingScope(CNAvatarImageRenderingScope) avatarViewStyle]
	-[CNUILikenessRenderingScope(CNAvatarImageRenderingScope) avatarViewBackgroundStyle]
	-[CNUILikenessRenderingScope(CNAvatarImageRenderingScope) likenessRenderingScope]

UITableView(CNUI)
	// instance methods
	-[UITableView(CNUI) _cnui_adjustCollectiveContentInset:]
	-[UITableView(CNUI) _cnui_applyContactStyle]

UIFontDescriptor(ContactsUI)
	// class methods
	+[UIFontDescriptor(ContactsUI) cnui_bodyFontDescriptor]
	+[UIFontDescriptor(ContactsUI) cnui_footnoteFontDescriptor]

CNGeminiManager(ContactsUI)
	// class methods
	+[CNGeminiManager(ContactsUI) badgeForSubscription:]
	+[CNGeminiManager(ContactsUI) badgeForSenderIdentity:]
	+[CNGeminiManager(ContactsUI) badgeForText:]

CNLabeledValue(UIAdditions)
	// class methods
	+[CNLabeledValue(UIAdditions) addressBook]
	+[CNLabeledValue(UIAdditions) localizedDisplayStringForLabel:propertyName:]
	+[CNLabeledValue(UIAdditions) defaultLabels]
	+[CNLabeledValue(UIAdditions) allLabels]
	+[CNLabeledValue(UIAdditions) allCustomLabels]
	+[CNLabeledValue(UIAdditions) deleteCustomLabel:]
	+[CNLabeledValue(UIAdditions) builtinLabelsForProperty:]

	// instance methods
	-[CNLabeledValue(UIAdditions) localizedLabel]
	-[CNLabeledValue(UIAdditions) contactViewControllerCellClassForPropertyType:]

CNContactProperty(UIAdditions)
	// class methods
	+[CNContactProperty(UIAdditions) phoneticPropertiesMap]

	// instance methods
	-[CNContactProperty(UIAdditions) property]
	-[CNContactProperty(UIAdditions) phoneticProperty]

CNPolicy(UIAdditions)
	// instance methods
	-[CNPolicy(UIAdditions) _cnui_maximumNumberOfValuesForProperty:]

UIView(CNContactStyle)
	// instance methods
	-[UIView(CNContactStyle) tintColorOverride]
	-[UIView(CNContactStyle) _cnui_applyContactStyle]
	-[UIView(CNContactStyle) _cnui_contactStyle]
	-[UIView(CNContactStyle) abSetLayoutDebuggingColor:]
	-[UIView(CNContactStyle) tintColorOverrideDarkened]

UITextField(CNContactStyle)
	// instance methods
	-[UITextField(CNContactStyle) _cnui_applyContactStyle]
	-[UITextField(CNContactStyle) ab_text]
	-[UITextField(CNContactStyle) setAb_text:]
	-[UITextField(CNContactStyle) ab_textAttributes]
	-[UITextField(CNContactStyle) setAb_textAttributes:]

UINavigationBar(CNContactStyle)
	// instance methods
	-[UINavigationBar(CNContactStyle) _cnui_applyContactStyle]

UITableViewHeaderFooterView(CNContactStyle)
	// instance methods
	-[UITableViewHeaderFooterView(CNContactStyle) _cnui_applyContactStyle]

UITableViewCell(CNContactStyle)
	// instance methods
	-[UITableViewCell(CNContactStyle) _cnui_applyContactStyle]
	-[UITableViewCell(CNContactStyle) _cnui_applyCommonContactStyle:]
	-[UITableViewCell(CNContactStyle) _cnui_applySelectedBackgroundViewStyle:]

UITextView(CNContactStyle)
	// instance methods
	-[UITextView(CNContactStyle) _cnui_applyContactStyle]
	-[UITextView(CNContactStyle) ab_text]
	-[UITextView(CNContactStyle) setAb_text:]
	-[UITextView(CNContactStyle) ab_textAttributes]
	-[UITextView(CNContactStyle) setAb_textAttributes:]

UILabel(CNContactStyle)
	// instance methods
	-[UILabel(CNContactStyle) _cnui_applyContactStyle]
	-[UILabel(CNContactStyle) _cnui_applyContactStylePlaceholder]
	-[UILabel(CNContactStyle) ab_text]
	-[UILabel(CNContactStyle) setAb_text:]
	-[UILabel(CNContactStyle) ab_textAttributes]
	-[UILabel(CNContactStyle) setAb_textAttributes:]

CNMutableGroup(UIAdditions)
	// instance methods
	-[CNMutableGroup(UIAdditions) addGroupInStore:toContainerWithIdentifier:saveRequest:]
	-[CNMutableGroup(UIAdditions) deleteGroupInStore:saveRequest:]
	-[CNMutableGroup(UIAdditions) updateGroupInStore:saveRequest:]

CNPostalAddress(iOSABCompatibilityDeprecated)
	// class methods
	+[CNPostalAddress(iOSABCompatibilityDeprecated) localizedAddressFormatDictionaryForCountryCode:]

CNContact(UIAdditions)
	// class methods
	+[CNContact(UIAdditions) suggestionsEnabled]
	+[CNContact(UIAdditions) suggestionsShownInEditMode]
	+[CNContact(UIAdditions) quickActionsEnabled]
	+[CNContact(UIAdditions) geminiEnabled]
	+[CNContact(UIAdditions) settableMeCardEnabled]
	+[CNContact(UIAdditions) downtimeWhitelistUIEnabled]
	+[CNContact(UIAdditions) nameAndPhotoSharingDebugUIEnabled]
	+[CNContact(UIAdditions) descriptorForAllUIKeys]
	+[CNContact(UIAdditions) calendarForBirthdayLabel:]
	+[CNContact(UIAdditions) multiValuePropertiesSupportingPredicateValidation]
	+[CNContact(UIAdditions) contactWithStateRestorationCoder:store:keys:]
	+[CNContact(UIAdditions) stringIdentifierForImageType:]
	+[CNContact(UIAdditions) rawImageTypeForIdentifier:]

	// instance methods
	-[CNContact(UIAdditions) isUnknown]
	-[CNContact(UIAdditions) hasNonPersistedData]
	-[CNContact(UIAdditions) supportsInstantMessageService]
	-[CNContact(UIAdditions) personName]
	-[CNContact(UIAdditions) birthdays]
	-[CNContact(UIAdditions) validPropertiesByEvaluatingPredicate:onMultiValueProperties:]
	-[CNContact(UIAdditions) vCardRepresentation]
	-[CNContact(UIAdditions) rawImageType]
	-[CNContact(UIAdditions) hasImageOfType:]
	-[CNContact(UIAdditions) copyWithCuratingAllSuggestionsAndBirthdaySuggestion]
	-[CNContact(UIAdditions) copyWithCuratingBirthdaySuggestion]

CNMutableContact(UIAdditions)
	// instance methods
	-[CNMutableContact(UIAdditions) hasNonPersistedData]
	-[CNMutableContact(UIAdditions) addAllPropertiesFromContact:]
	-[CNMutableContact(UIAdditions) addProperties:excludingProperties:fromContact:]
	-[CNMutableContact(UIAdditions) updateContactTypeWithPolicy:]
	-[CNMutableContact(UIAdditions) addContactToGroups:inStore:request:]
	-[CNMutableContact(UIAdditions) removeContactFromGroups:inStore:request:]
	-[CNMutableContact(UIAdditions) saveContactInStore:group:container:]
	-[CNMutableContact(UIAdditions) saveContactInStore:group:container:request:]
	-[CNMutableContact(UIAdditions) saveContactInStore:groups:container:request:]
	-[CNMutableContact(UIAdditions) deleteContactFromStore:request:]
	-[CNMutableContact(UIAdditions) setBirthdays:]
	-[CNMutableContact(UIAdditions) removePhoto]
	-[CNMutableContact(UIAdditions) updateImageInfoWithType:]

CNContactFormatter(UIAdditions)
	// class methods
	+[CNContactFormatter(UIAdditions) sharedFullNameFormatterWithFallBacks]
	+[CNContactFormatter(UIAdditions) sharedFullNameFormatter]

	// instance methods
	-[CNContactFormatter(UIAdditions) stringFromGroupIdentity:]

UIButton(ABUIAdditions)
	// instance methods
	-[UIButton(ABUIAdditions) ab_text]
	-[UIButton(ABUIAdditions) setAb_text:]
	-[UIButton(ABUIAdditions) ab_textAttributes]
	-[UIButton(ABUIAdditions) setAb_textAttributes:]

CNFavoritesEntry(ContactsUI)
	// instance methods
	-[CNFavoritesEntry(ContactsUI) performActionWithContext:completion:]
	-[CNFavoritesEntry(ContactsUI) performActionWithCompletion:]
	-[CNFavoritesEntry(ContactsUI) performActionWithExtensionContext:completion:]

UICollectionViewController(CNUI)
	// instance methods
	-[UICollectionViewController(CNUI) refreshAccountsNow:]
	-[UICollectionViewController(CNUI) _cnui_updateAccountsRefreshControl]
	-[UICollectionViewController(CNUI) _cnui_beginRefreshingWithDuration:]

UIFont(ContactsUI)
	// class methods
	+[UIFont(ContactsUI) cnui_bodyFont]
	+[UIFont(ContactsUI) cnui_footnoteFont]
	+[UIFont(ContactsUI) ab_setIgnoreUserFontSize:]
	+[UIFont(ContactsUI) _shouldUseDefaultFont]
	+[UIFont(ContactsUI) ab_preferredFontForTextStyle:]
	+[UIFont(ContactsUI) ab_preferredRowFontForTextStyle:]
	+[UIFont(ContactsUI) ab_preferredContentSizeCategoryName]
	+[UIFont(ContactsUI) ab_preferredContentSizeCategoryIsAccessibilityCategory]

	// instance methods
	-[UIFont(ContactsUI) ab_boldFont]
	-[UIFont(ContactsUI) ab_italicFont]

NSIndexPath(CNUINavigationListView)
	// class methods
	+[NSIndexPath(CNUINavigationListView) indexPathForNavigationListItemIndex:]

NSDateComponents(ABSimplePropertyCell)
	// instance methods
	-[NSDateComponents(ABSimplePropertyCell) displayString]
	-[NSDateComponents(ABSimplePropertyCell) contactViewControllerCellClassForPropertyType:]

CNUIIDSAvailabilityProvider(ContactsUI)
	// class methods
	+[CNUIIDSAvailabilityProvider(ContactsUI) validateHandlesForFaceTime:availabilityProvider:schedulerProvider:handler:]
	+[CNUIIDSAvailabilityProvider(ContactsUI) validateHandlesForIMessage:availabilityProvider:schedulerProvider:handler:]

CNAccount(UIAdditions)
	// class methods
	+[CNAccount(UIAdditions) _cnui_accountStore]
	+[CNAccount(UIAdditions) _cnui_canRequestRefreshWithCompletion:]
	+[CNAccount(UIAdditions) _cnui_requestRefreshWithUserAction:]
	+[CNAccount(UIAdditions) _cnui_displayNameForLocal]
	+[CNAccount(UIAdditions) _cnui_displayNameForACAccount:]
	+[CNAccount(UIAdditions) _cnui_isFacebookACAccount:]

	// instance methods
	-[CNAccount(UIAdditions) _cnui_displayName]

(CNUtils)
	// instance methods
	-[(CNUtils) cn_updateDictionaryForKey:withChanges:]

(CNUI)
	// instance methods
	-[(CNUI) cnui_firstUTF32Character]
	-[(CNUI) cnui_stringByTransliteratingToKanaAsName:]
	-[(CNUI) cnui_shouldUseJapaneseTransliteration]
	-[(CNUI) cnui_shouldUseZhuyinTransliteration]
	-[(CNUI) cnui_shouldTransliterateToLatin]
	-[(CNUI) cnui_stringByTransliteratingToPhoneticCharactersForProperty:]
	-[(CNUI) cnui_containsNonLatinCharacters]
	-[(CNUI) cnui_containsEmojiCharacters]

UIImage(CNUI)
	// class methods
	+[UIImage(CNUI) cnui_templateImageNamed:withTint:]
	+[UIImage(CNUI) cnui_imageNamed:]
	+[UIImage(CNUI) cnui_tintedImageNamed:withTint:]
	+[UIImage(CNUI) cnui_imageWithDataPreservingScale:]
	+[UIImage(CNUI) cnui_symbolImageForContactCardChevron]
	+[UIImage(CNUI) cnui_symbolImageForNavigationListChevron]
	+[UIImage(CNUI) cnui_symbolImageForTransportType:withColor:]
	+[UIImage(CNUI) cnui_actionTypeForTransportType:]
	+[UIImage(CNUI) cnui_userActionOutlinedSymbolImageForActionType:scale:withColor:]
	+[UIImage(CNUI) cnui_userActionSymbolImageForActionType:scale:withColor:]
	+[UIImage(CNUI) cnui_userActionSymbolImageForActionType:scale:withColor:compatibleWithTextStyle:]
	+[UIImage(CNUI) cnui_carPlayUserActionSymbolImageForActionType:]
	+[UIImage(CNUI) cnui_symbolImageNamed:scale:withColor:useFixedSize:]
	+[UIImage(CNUI) cnui_symbolImageNamed:scale:withColor:useFixedSize:compatibleWithTextStyle:]
	+[UIImage(CNUI) cnui_symbolImageNamed:scale:weight:withColor:useFixedSize:compatibleWithTextStyle:]

UIViewController(CNPeopleCardTransition)
	// instance methods
	-[UIViewController(CNPeopleCardTransition) set_cardViewControllerTransitioning:]
	-[UIViewController(CNPeopleCardTransition) _cardViewControllerTransitioning]
	-[UIViewController(CNPeopleCardTransition) ab_shouldShowNavBarButtons]
	-[UIViewController(CNPeopleCardTransition) ab_shouldUseTransparentBackgroundInPopovers]
	-[UIViewController(CNPeopleCardTransition) _ab_isInPopoverRecursive:]
	-[UIViewController(CNPeopleCardTransition) ab_isInPopover]
	-[UIViewController(CNPeopleCardTransition) ab_isDirectlyInPopover]
	-[UIViewController(CNPeopleCardTransition) ab_isInSheet]
	-[UIViewController(CNPeopleCardTransition) cnui_addChildViewController:]
	-[UIViewController(CNPeopleCardTransition) cnui_appropriatePresentationController]

01 00 0100 /System/Library/PrivateFrameworks/AddressBookLegacy.framework/AddressBookLegacy: ABFacebookMigrator 
01 00 0700 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVExternalDevice 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABackdropLayer 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransition 
01 00 0c00 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 0c00 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIFilter 
01 00 0c00 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CN 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNAccessAuthorization 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNAccount 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNActivityAlert 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNAuditToken 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNCache 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNCancelationToken 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNCapabilities 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNChangesNotifier 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNCollation 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactChangesNotifier 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFetchRequest 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactImage 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactImageFetchRequest 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactImageSaveRequest 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactImageStore 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactImageUpdater 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactMatchSummarizer 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactPolicyValidator 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactProperty 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactRelation 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStoreConfiguration 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactVCardSerialization 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactsEnvironment 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactsUserDefaults 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContainer 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNCoreDelegateInfo 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNDateComponentsFormatter 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNDateHelper 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNDescriptionBuilder 
01 00 1100 /System/Library/PrivateFrameworks/ContactsDonation.framework/ContactsDonation: CNDonationStore 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNDowntimeWhitelist 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNDowntimeWhitelistContainerFetcher 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNDraggingContact 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNDuplicateContactsManager 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNEnvironment 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNEqualsBuilder 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNFavorites 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNFavoritesEntry 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNFoundationError 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNFuture 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNGeminiManager 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNGroup 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNHandle 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNHashBuilder 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNImageCropUtilities 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNInstantMessageAddress 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNLSApplicationWorkspace 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNLabeledValue 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNMailToGroup 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNManagedConfiguration 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNManagedProfileConnection 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNMemojiMetadataUtilities 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNMessageToGroup 
01 00 0d00 /System/Library/PrivateFrameworks/ContactsMetrics.framework/ContactsMetrics: CNMetricsUIReporter 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutableContact 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutableContainer 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutableGroup 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutablePostalAddress 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNObservable 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNObserver 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNPair 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNPermissivePolicy 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNPhoneNumberHelper 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNPolicy 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNPolicyDescription 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNPostalAddress 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNPostalAddressFormats 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNPostalAddressFormatter 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNPredicateValidator 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNPromise 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNPublishingSubject 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNQueue 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNRegulatoryLogger 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNSaveRequest 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNScheduler 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNSchedulerProvider 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNSocialProfile 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNStack 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNString 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNSuggestedSaveRequest 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNSuspendableSchedulerDecorator 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNTCCFactory 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNTimeIntervalFormatter 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNTimeProvider 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIAvatarLayoutLayerItem 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIAvatarLayoutManager 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIContactPropertyIDSHandle 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIContactPropertyRanker 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUICoreContactEditingSession 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUICoreContactManagementConsentInspector 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUICoreEditAuthorizationCheck 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUICoreFamilyMemberContactItem 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUICoreFamilyMemberContactsController 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUICoreFamilyMemberWhitelistedContactsController 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUICoreMainWhitelistedContactsController 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUICoreRecentsManager 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUICoreWhitelistedContactsControllerOptions 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIDefaultUserActionFetcher 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIIDSAvailabilityProvider 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIIDSContactPropertyResolver 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIIDSIDQueryControllerWrapper 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUILikenessFingerprint 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUILikenessMediaContextBadge 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUILikenessRenderer 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUILikenessRenderingScope 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUILikenessSystemImageBadge 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIMeContactMonitor 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIPRLikenessLookup 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIPRLikenessResolver 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIPlaceholderProviderFactory 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIUserActionContext 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIUserActionDiscoveringEnvironment 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIUserActionItem 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIUserActionListDataSource 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIUserActionListModel 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIUserActionTarget 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: CNUIUserActivityManager 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNUnfairLock 
01 00 1200 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNUsageReporting 
01 00 2000 /System/Library/PrivateFrameworks/vCard.framework/vCard: CNVCardWritingOptions 
01 00 0500 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DADConnection 
01 00 1340 /System/Library/PrivateFrameworks/EmojiFoundation.framework/EmojiFoundation: EMFQuery 
01 00 1500 /System/Library/PrivateFrameworks/FamilyCircle.framework/FamilyCircle: FAFamilyCircle 
01 00 1500 /System/Library/PrivateFrameworks/FamilyCircle.framework/FamilyCircle: FAFetchFamilyCircleRequest 
01 00 1700 /System/Library/PrivateFrameworks/IntlPreferences.framework/IntlPreferences: IntlUtility 
01 00 1b00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutBoundarySupplementaryItem 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutDimension 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutGroup 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutItem 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSection 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSize 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSDiffableDataSourceSectionSnapshot 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSDiffableDataSourceSnapshot 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponentsFormatter 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSStringDrawingContext 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextEncapsulation 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0200 /System/Library/PrivateFrameworks/AppSupportUI.framework/AppSupportUI: NUIContainerBoxView 
01 00 0200 /System/Library/PrivateFrameworks/AppSupportUI.framework/AppSupportUI: NUIContainerStackView 
01 00 0200 /System/Library/PrivateFrameworks/AppSupportUI.framework/AppSupportUI: NUITableViewContainerCell 
01 00 1c40 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBBoldTrayButton 
01 00 1c40 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBLinkTrayButton 
01 00 1c40 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBTableWelcomeController 
01 00 1c40 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBWelcomeController 
01 00 1c40 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBWelcomeFullCenterContentController 
01 00 0600 /System/Library/PrivateFrameworks/PersonaUI.framework/PersonaUI: PRLikenessView 
01 00 0600 /System/Library/PrivateFrameworks/PersonaUI.framework/PersonaUI: PRMonogramColor 
01 00 0300 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutContactIcon 
01 00 2200 /System/Library/PrivateFrameworks/TemplateKit.framework/TemplateKit: TLKAppearance 
01 00 2200 /System/Library/PrivateFrameworks/TemplateKit.framework/TemplateKit: TLKProminenceView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationShortcutIcon 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBackgroundConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButtonConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryCheckmark 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryCustomView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryDelete 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryDisclosureIndicator 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryInsert 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryLabel 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryMultiselect 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryOutlineDisclosure 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionLayoutListConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionReusableView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCellRegistration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayout 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDiffableDataSource 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDropProposal 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayout 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewListCell 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContentUnavailableConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuInteraction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextualAction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDatePicker 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDeferredMenuElement 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragInteraction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragItem 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreview 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropInteraction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropProposal 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImagePickerController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyCommand 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboard 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardInputModeController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIListContentConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILocalizedIndexedCollation 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBarAppearance 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UINib 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPasteboard 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPopoverPresentationController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPresentationController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewParameters 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIRefreshControl 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISegmentedControl 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISelectionFeedbackGenerator 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISplitViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStoryboard 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeActionsConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVibrancyEffect 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 1400 /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore: _CNUIUserActionImageProvider 
01 00 2a00 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIActionSheetPresentationController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropViewSettings 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBasicCellContentViewConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICollectionViewListLayoutSection 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICollectionViewListLayoutSectionConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDiffableDataSourceItemRenderer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDiffableDataSourceOutlineSectionController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDiffableDataSourceSectionControllerHandlers 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIOutlineItemRenderer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISelectionFeedbackGeneratorConfiguration 
