|| __DATA.__data _CNLabeledValueInvalidIOSIdentifier
|| __DATA.__data _CNReputationStoreDefaultTimeout
|| __DATA.__data _CNSuggestedContactRecordIdKey
|| __DATA.__data _sIsMultiValueContactProperty
|| __DATA.__objc_data _OBJC_CLASS_$_CNActivityAlert
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryAddContactEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryAddGroupEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryAddMemberToGroupEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryAddSubgroupToGroupEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryDeleteContactEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryDeleteGroupEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryDropEverythingEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryGroupChange
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryLabeledValueChange
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryRemoveMemberFromGroupEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryRemoveSubgroupFromGroupEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryUpdateContactEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CNChangeHistoryUpdateGroupEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactImage
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactImageFetchRequest
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactImageSaveRequest
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactImageStore
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactMatchSummarizer
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactProperty
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactRelation
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactSuggestionMatch
|| __DATA.__objc_data _OBJC_CLASS_$_CNContactsLogging
|| __DATA.__objc_data _OBJC_CLASS_$_CNContainerPermissions
|| __DATA.__objc_data _OBJC_CLASS_$_CNCoreSpotlightSearch
|| __DATA.__objc_data _OBJC_CLASS_$_CNDeduplication
|| __DATA.__objc_data _OBJC_CLASS_$_CNDowntimeWhitelist
|| __DATA.__objc_data _OBJC_CLASS_$_CNDraggingContact
|| __DATA.__objc_data _OBJC_CLASS_$_CNFavoritesLookupChangeRecord
|| __DATA.__objc_data _OBJC_CLASS_$_CNFetchResult
|| __DATA.__objc_data _OBJC_CLASS_$_CNGeminiChannel
|| __DATA.__objc_data _OBJC_CLASS_$_CNInstantMessageAddress
|| __DATA.__objc_data _OBJC_CLASS_$_CNLaunchServicesRemoteAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_CNMutableActivityAlert
|| __DATA.__objc_data _OBJC_CLASS_$_CNMutableContainer
|| __DATA.__objc_data _OBJC_CLASS_$_CNMutableGroup
|| __DATA.__objc_data _OBJC_CLASS_$_CNMutableInstantMessageAddress
|| __DATA.__objc_data _OBJC_CLASS_$_CNMutableSocialProfile
|| __DATA.__objc_data _OBJC_CLASS_$_CNPermissivePolicy
|| __DATA.__objc_data _OBJC_CLASS_$_CNPostalAddressFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_CNPredicateValidator
|| __DATA.__objc_data _OBJC_CLASS_$_CNReputationHandle
|| __DATA.__objc_data _OBJC_CLASS_$_CNReputationStore
|| __DATA.__objc_data _OBJC_CLASS_$_CNSocialProfile
|| __DATA.__objc_data _OBJC_CLASS_$_CNSuggestedContactIdentifierPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_CNSuggestedSaveRequest
|| __DATA.__objc_data _OBJC_CLASS_$_CNTCCServices
|| __DATA.__objc_data _OBJC_CLASS_$__CNGeminiLogger
|| __DATA.__objc_data _OBJC_CLASS_$__CNSpotlightIndexingLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_CNActivityAlert
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryAddContactEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryAddGroupEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryAddMemberToGroupEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryAddSubgroupToGroupEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryDeleteContactEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryDeleteGroupEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryDropEverythingEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryGroupChange
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryLabeledValueChange
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryRemoveMemberFromGroupEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryRemoveSubgroupFromGroupEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryUpdateContactEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CNChangeHistoryUpdateGroupEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactImage
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactImageFetchRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactImageSaveRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactImageStore
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactMatchSummarizer
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactProperty
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactRelation
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactSuggestionMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContactsLogging
|| __DATA.__objc_data _OBJC_METACLASS_$_CNContainerPermissions
|| __DATA.__objc_data _OBJC_METACLASS_$_CNCoreSpotlightSearch
|| __DATA.__objc_data _OBJC_METACLASS_$_CNDeduplication
|| __DATA.__objc_data _OBJC_METACLASS_$_CNDraggingContact
|| __DATA.__objc_data _OBJC_METACLASS_$_CNFavoritesEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_CNFavoritesLookupChangeRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_CNFetchResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CNGeminiChannel
|| __DATA.__objc_data _OBJC_METACLASS_$_CNLaunchServicesRemoteAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMutableActivityAlert
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMutableContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMutableGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMutableInstantMessageAddress
|| __DATA.__objc_data _OBJC_METACLASS_$_CNMutableSocialProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_CNPermissivePolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_CNPredicateValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_CNReputationHandle
|| __DATA.__objc_data _OBJC_METACLASS_$_CNSocialProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_CNSuggestedContactIdentifierPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_CNSuggestedSaveRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_CNTCCServices
|| __DATA.__objc_data _OBJC_METACLASS_$__CNGeminiLogger
|| __DATA.__objc_data _OBJC_METACLASS_$__CNSpotlightIndexingLogger
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContactKeyVector._bitBuckets
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._accountIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._constraintsPath
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._enabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._externalIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._externalModificationTag
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._externalSyncData
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._externalSyncTag
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._guardianRestricted
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._guardianStateDirty
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._iOSLegacyIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._lastSyncDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._meIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._permissions
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._restrictions
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._snapshot
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainer._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainerPermissions._canCreateContacts
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainerPermissions._canCreateGroups
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNContainerPermissions._canDeleteContacts
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNDataMapperContactStore._logger
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNDataMapperContactStore._mapper
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNFavoritesLookupChangeRecord.abDatabaseUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNFavoritesLookupChangeRecord.identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNFavoritesLookupChangeRecord.label
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNFavoritesLookupChangeRecord.name
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNFavoritesLookupChangeRecord.uid
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNFavoritesLookupChangeRecord.value
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNGroup._creationDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNGroup._externalIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNGroup._externalModificationTag
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNGroup._externalRepresentation
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNGroup._externalUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNGroup._iOSLegacyIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNGroup._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNGroup._modificationDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNGroup._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_CNGroup._snapshot
|| __DATA_CONST.__const _CNAccountExternalIdentifierStringKey
|| __DATA_CONST.__const _CNAccountIOSLegacyIdentifierKey
|| __DATA_CONST.__const _CNAccountIdentifierKey
|| __DATA_CONST.__const _CNActionBundleIdentifierCalendar
|| __DATA_CONST.__const _CNActionBundleIdentifierContacts
|| __DATA_CONST.__const _CNActionBundleIdentifierFaceTime
|| __DATA_CONST.__const _CNActionBundleIdentifierFindMyFriends
|| __DATA_CONST.__const _CNActionBundleIdentifierMail
|| __DATA_CONST.__const _CNActionBundleIdentifierMaps
|| __DATA_CONST.__const _CNActionBundleIdentifierMessages
|| __DATA_CONST.__const _CNActionBundleIdentifierPhone
|| __DATA_CONST.__const _CNActionBundleIdentifierWallet
|| __DATA_CONST.__const _CNActionTypeAudioCall
|| __DATA_CONST.__const _CNActionTypeDirections
|| __DATA_CONST.__const _CNActionTypeMail
|| __DATA_CONST.__const _CNActionTypeMessage
|| __DATA_CONST.__const _CNActionTypePay
|| __DATA_CONST.__const _CNActionTypeTTYCall
|| __DATA_CONST.__const _CNActionTypeTTYRelayCall
|| __DATA_CONST.__const _CNActionTypeVideoCall
|| __DATA_CONST.__const _CNActivityAlertCallActivityKey
|| __DATA_CONST.__const _CNActivityAlertIgnoreMuteKey
|| __DATA_CONST.__const _CNActivityAlertSoundKey
|| __DATA_CONST.__const _CNActivityAlertTextActivityKey
|| __DATA_CONST.__const _CNActivityAlertVibrationKey
|| __DATA_CONST.__const _CNAnyLabel
|| __DATA_CONST.__const _CNApplicationProxyServiceName
|| __DATA_CONST.__const _CNContactBirthdayKey
|| __DATA_CONST.__const _CNContactBirthdaysKey
|| __DATA_CONST.__const _CNContactCalendarURIsKey
|| __DATA_CONST.__const _CNContactCallAlertKey
|| __DATA_CONST.__const _CNContactCreationDateKey
|| __DATA_CONST.__const _CNContactCropRectKey
|| __DATA_CONST.__const _CNContactDatesKey
|| __DATA_CONST.__const _CNContactDepartmentNameKey
|| __DATA_CONST.__const _CNContactDowntimeWhitelistKey
|| __DATA_CONST.__const _CNContactEmailAddressesKey
|| __DATA_CONST.__const _CNContactExternalIdentifierKey
|| __DATA_CONST.__const _CNContactExternalImageURIKey
|| __DATA_CONST.__const _CNContactExternalModificationTagKey
|| __DATA_CONST.__const _CNContactExternalRepresentationKey
|| __DATA_CONST.__const _CNContactExternalUUIDKey
|| __DATA_CONST.__const _CNContactFamilyNameKey
|| __DATA_CONST.__const _CNContactFullscreenImageDataKey
|| __DATA_CONST.__const _CNContactGivenNameKey
|| __DATA_CONST.__const _CNContactIOSLegacyIdentifierKey
|| __DATA_CONST.__const _CNContactIdentifierKey
|| __DATA_CONST.__const _CNContactIdentifiersPboardType
|| __DATA_CONST.__const _CNContactImageDataAvailableKey
|| __DATA_CONST.__const _CNContactImageDataKey
|| __DATA_CONST.__const _CNContactImageHashKey
|| __DATA_CONST.__const _CNContactImageTypeAvatarValue
|| __DATA_CONST.__const _CNContactImageTypeKey
|| __DATA_CONST.__const _CNContactImageTypeMonogramValue
|| __DATA_CONST.__const _CNContactImageTypePhotoValue
|| __DATA_CONST.__const _CNContactInstantMessageAddressesKey
|| __DATA_CONST.__const _CNContactInternalPersistedUTI
|| __DATA_CONST.__const _CNContactInternalUTI
|| __DATA_CONST.__const _CNContactJobTitleKey
|| __DATA_CONST.__const _CNContactLikenessSourceApplePersona
|| __DATA_CONST.__const _CNContactLikenessSourceImage
|| __DATA_CONST.__const _CNContactLinkIdentifierKey
|| __DATA_CONST.__const _CNContactMainStoreLinkedIdentifierKey
|| __DATA_CONST.__const _CNContactMapsDataKey
|| __DATA_CONST.__const _CNContactMiddleNameKey
|| __DATA_CONST.__const _CNContactModificationDateKey
|| __DATA_CONST.__const _CNContactNameEmphasisAttribute
|| __DATA_CONST.__const _CNContactNameEmphasisFontAttribute
|| __DATA_CONST.__const _CNContactNamePrefixKey
|| __DATA_CONST.__const _CNContactNameSuffixKey
|| __DATA_CONST.__const _CNContactNicknameKey
|| __DATA_CONST.__const _CNContactNonGregorianBirthdayKey
|| __DATA_CONST.__const _CNContactNoteKey
|| __DATA_CONST.__const _CNContactOrganizationNameKey
|| __DATA_CONST.__const _CNContactPhoneNumbersKey
|| __DATA_CONST.__const _CNContactPhonemeDataKey
|| __DATA_CONST.__const _CNContactPhoneticCompanyNameKey
|| __DATA_CONST.__const _CNContactPhoneticFamilyNameKey
|| __DATA_CONST.__const _CNContactPhoneticGivenNameKey
|| __DATA_CONST.__const _CNContactPhoneticMiddleNameKey
|| __DATA_CONST.__const _CNContactPhoneticOrganizationNameKey
|| __DATA_CONST.__const _CNContactPostalAddressesKey
|| __DATA_CONST.__const _CNContactPreferredApplePersonaIdentifierKey
|| __DATA_CONST.__const _CNContactPreferredChannelKey
|| __DATA_CONST.__const _CNContactPreferredForImageKey
|| __DATA_CONST.__const _CNContactPreferredForNameKey
|| __DATA_CONST.__const _CNContactPreferredLikenessSourceKey
|| __DATA_CONST.__const _CNContactPreviousFamilyNameKey
|| __DATA_CONST.__const _CNContactPronunciationFamilyNameKey
|| __DATA_CONST.__const _CNContactPronunciationGivenNameKey
|| __DATA_CONST.__const _CNContactPropertyAttribute
|| __DATA_CONST.__const _CNContactPropertyNotFetchedExceptionName
|| __DATA_CONST.__const _CNContactRelatedNamesKey
|| __DATA_CONST.__const _CNContactRelationsKey
|| __DATA_CONST.__const _CNContactSearchIndexKey
|| __DATA_CONST.__const _CNContactSectionForSortingByFamilyNameKey
|| __DATA_CONST.__const _CNContactSectionForSortingByGivenNameKey
|| __DATA_CONST.__const _CNContactSocialProfilesKey
|| __DATA_CONST.__const _CNContactStoreDidChangeNotification
|| __DATA_CONST.__const _CNContactStoreMeContactDidChangeNotification
|| __DATA_CONST.__const _CNContactSyncImageDataKey
|| __DATA_CONST.__const _CNContactTextAlertKey
|| __DATA_CONST.__const _CNContactThumbnailImageDataKey
|| __DATA_CONST.__const _CNContactTypeKey
|| __DATA_CONST.__const _CNContactUrlAddressesKey
|| __DATA_CONST.__const _CNContactsUserDefaultsDidChangeNotification
|| __DATA_CONST.__const _CNContainerAccountIdentifierKey
|| __DATA_CONST.__const _CNContainerConstraintsPathKey
|| __DATA_CONST.__const _CNContainerEnabledKey
|| __DATA_CONST.__const _CNContainerExternalIdentifierKey
|| __DATA_CONST.__const _CNContainerExternalModificationTagKey
|| __DATA_CONST.__const _CNContainerExternalSyncDataKey
|| __DATA_CONST.__const _CNContainerExternalSyncTagKey
|| __DATA_CONST.__const _CNContainerGuardianRestrictedKey
|| __DATA_CONST.__const _CNContainerGuardianStateDirtyKey
|| __DATA_CONST.__const _CNContainerIOSLegacyIdentifierKey
|| __DATA_CONST.__const _CNContainerIdentifierKey
|| __DATA_CONST.__const _CNContainerLastSyncDateKey
|| __DATA_CONST.__const _CNContainerMeIdentifierKey
|| __DATA_CONST.__const _CNContainerNameKey
|| __DATA_CONST.__const _CNContainerPermissionsKey
|| __DATA_CONST.__const _CNContainerRestrictionsKey
|| __DATA_CONST.__const _CNContainerSnapshotKey
|| __DATA_CONST.__const _CNContainerTypeKey
|| __DATA_CONST.__const _CNDataMapperServiceName
|| __DATA_CONST.__const _CNDowntimeWhitelistDidChangeNotification
|| __DATA_CONST.__const _CNErrorDomain
|| __DATA_CONST.__const _CNErrorUserInfoAffectedRecordIdentifiersKey
|| __DATA_CONST.__const _CNErrorUserInfoAffectedRecordsKey
|| __DATA_CONST.__const _CNErrorUserInfoKeyPathsKey
|| __DATA_CONST.__const _CNErrorUserInfoValidationErrorsKey
|| __DATA_CONST.__const _CNFavoritesChangedExternallyNotification
|| __DATA_CONST.__const _CNFavoritesChangedNotification
|| __DATA_CONST.__const _CNFavoritesEntryIdentityChangedNotification
|| __DATA_CONST.__const _CNGroupCreationDateKey
|| __DATA_CONST.__const _CNGroupExternalIdentifierKey
|| __DATA_CONST.__const _CNGroupExternalModificationTagKey
|| __DATA_CONST.__const _CNGroupExternalRepresentationKey
|| __DATA_CONST.__const _CNGroupExternalUUIDKey
|| __DATA_CONST.__const _CNGroupIOSLegacyIdentifierKey
|| __DATA_CONST.__const _CNGroupIdentifierKey
|| __DATA_CONST.__const _CNGroupModificationDateKey
|| __DATA_CONST.__const _CNGroupNameKey
|| __DATA_CONST.__const _CNGroupSnapshotKey
|| __DATA_CONST.__const _CNHomeLabel
|| __DATA_CONST.__const _CNHomePageLabel
|| __DATA_CONST.__const _CNInstantMessageAddressBundleIdentifiersKey
|| __DATA_CONST.__const _CNInstantMessageAddressServiceKey
|| __DATA_CONST.__const _CNInstantMessageAddressTeamIdentifierKey
|| __DATA_CONST.__const _CNInstantMessageAddressUserIdentifierKey
|| __DATA_CONST.__const _CNInstantMessageAddressUsernameKey
|| __DATA_CONST.__const _CNInstantMessageServiceAIM
|| __DATA_CONST.__const _CNInstantMessageServiceFacebook
|| __DATA_CONST.__const _CNInstantMessageServiceGaduGadu
|| __DATA_CONST.__const _CNInstantMessageServiceGoogleTalk
|| __DATA_CONST.__const _CNInstantMessageServiceICQ
|| __DATA_CONST.__const _CNInstantMessageServiceJabber
|| __DATA_CONST.__const _CNInstantMessageServiceMSN
|| __DATA_CONST.__const _CNInstantMessageServiceQQ
|| __DATA_CONST.__const _CNInstantMessageServiceSkype
|| __DATA_CONST.__const _CNInstantMessageServiceYahoo
|| __DATA_CONST.__const _CNLabelContactRelationAssistant
|| __DATA_CONST.__const _CNLabelContactRelationAunt
|| __DATA_CONST.__const _CNLabelContactRelationAuntFathersBrothersWife
|| __DATA_CONST.__const _CNLabelContactRelationAuntFathersElderBrothersWife
|| __DATA_CONST.__const _CNLabelContactRelationAuntFathersElderSister
|| __DATA_CONST.__const _CNLabelContactRelationAuntFathersSister
|| __DATA_CONST.__const _CNLabelContactRelationAuntFathersYoungerBrothersWife
|| __DATA_CONST.__const _CNLabelContactRelationAuntFathersYoungerSister
|| __DATA_CONST.__const _CNLabelContactRelationAuntMothersBrothersWife
|| __DATA_CONST.__const _CNLabelContactRelationAuntMothersElderSister
|| __DATA_CONST.__const _CNLabelContactRelationAuntMothersSister
|| __DATA_CONST.__const _CNLabelContactRelationAuntMothersYoungerSister
|| __DATA_CONST.__const _CNLabelContactRelationAuntParentsElderSister
|| __DATA_CONST.__const _CNLabelContactRelationAuntParentsSister
|| __DATA_CONST.__const _CNLabelContactRelationAuntParentsYoungerSister
|| __DATA_CONST.__const _CNLabelContactRelationBoyfriend
|| __DATA_CONST.__const _CNLabelContactRelationBrother
|| __DATA_CONST.__const _CNLabelContactRelationBrotherInLaw
|| __DATA_CONST.__const _CNLabelContactRelationBrotherInLawElderSistersHusband
|| __DATA_CONST.__const _CNLabelContactRelationBrotherInLawHusbandsBrother
|| __DATA_CONST.__const _CNLabelContactRelationBrotherInLawHusbandsSistersHusband
|| __DATA_CONST.__const _CNLabelContactRelationBrotherInLawSistersHusband
|| __DATA_CONST.__const _CNLabelContactRelationBrotherInLawSpousesBrother
|| __DATA_CONST.__const _CNLabelContactRelationBrotherInLawWifesBrother
|| __DATA_CONST.__const _CNLabelContactRelationBrotherInLawWifesSistersHusband
|| __DATA_CONST.__const _CNLabelContactRelationBrotherInLawYoungerSistersHusband
|| __DATA_CONST.__const _CNLabelContactRelationChild
|| __DATA_CONST.__const _CNLabelContactRelationChildInLaw
|| __DATA_CONST.__const _CNLabelContactRelationCoBrotherInLaw
|| __DATA_CONST.__const _CNLabelContactRelationCoFatherInLaw
|| __DATA_CONST.__const _CNLabelContactRelationCoMotherInLaw
|| __DATA_CONST.__const _CNLabelContactRelationCoParentInLaw
|| __DATA_CONST.__const _CNLabelContactRelationCoSiblingInLaw
|| __DATA_CONST.__const _CNLabelContactRelationCoSisterInLaw
|| __DATA_CONST.__const _CNLabelContactRelationColleague
|| __DATA_CONST.__const _CNLabelContactRelationCousin
|| __DATA_CONST.__const _CNLabelContactRelationCousinFathersBrothersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationCousinFathersBrothersSon
|| __DATA_CONST.__const _CNLabelContactRelationCousinFathersSistersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationCousinFathersSistersSon
|| __DATA_CONST.__const _CNLabelContactRelationCousinGrandparentsSiblingsChild
|| __DATA_CONST.__const _CNLabelContactRelationCousinGrandparentsSiblingsDaughter
|| __DATA_CONST.__const _CNLabelContactRelationCousinGrandparentsSiblingsSon
|| __DATA_CONST.__const _CNLabelContactRelationCousinMothersBrothersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationCousinMothersBrothersSon
|| __DATA_CONST.__const _CNLabelContactRelationCousinMothersSistersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationCousinMothersSistersSon
|| __DATA_CONST.__const _CNLabelContactRelationCousinOrSiblingsChild
|| __DATA_CONST.__const _CNLabelContactRelationCousinParentsSiblingsChild
|| __DATA_CONST.__const _CNLabelContactRelationCousinParentsSiblingsDaughter
|| __DATA_CONST.__const _CNLabelContactRelationCousinParentsSiblingsSon
|| __DATA_CONST.__const _CNLabelContactRelationDaughter
|| __DATA_CONST.__const _CNLabelContactRelationDaughterInLaw
|| __DATA_CONST.__const _CNLabelContactRelationDaughterInLawOrSisterInLaw
|| __DATA_CONST.__const _CNLabelContactRelationDaughterInLawOrStepdaughter
|| __DATA_CONST.__const _CNLabelContactRelationElderBrother
|| __DATA_CONST.__const _CNLabelContactRelationElderBrotherInLaw
|| __DATA_CONST.__const _CNLabelContactRelationElderCousin
|| __DATA_CONST.__const _CNLabelContactRelationElderCousinFathersBrothersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationElderCousinFathersBrothersSon
|| __DATA_CONST.__const _CNLabelContactRelationElderCousinFathersSistersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationElderCousinFathersSistersSon
|| __DATA_CONST.__const _CNLabelContactRelationElderCousinMothersBrothersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationElderCousinMothersBrothersSon
|| __DATA_CONST.__const _CNLabelContactRelationElderCousinMothersSiblingsDaughterOrFathersSistersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationElderCousinMothersSiblingsSonOrFathersSistersSon
|| __DATA_CONST.__const _CNLabelContactRelationElderCousinMothersSistersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationElderCousinMothersSistersSon
|| __DATA_CONST.__const _CNLabelContactRelationElderCousinParentsSiblingsDaughter
|| __DATA_CONST.__const _CNLabelContactRelationElderCousinParentsSiblingsSon
|| __DATA_CONST.__const _CNLabelContactRelationElderSibling
|| __DATA_CONST.__const _CNLabelContactRelationElderSiblingInLaw
|| __DATA_CONST.__const _CNLabelContactRelationElderSister
|| __DATA_CONST.__const _CNLabelContactRelationElderSisterInLaw
|| __DATA_CONST.__const _CNLabelContactRelationEldestBrother
|| __DATA_CONST.__const _CNLabelContactRelationEldestSister
|| __DATA_CONST.__const _CNLabelContactRelationFather
|| __DATA_CONST.__const _CNLabelContactRelationFatherInLaw
|| __DATA_CONST.__const _CNLabelContactRelationFatherInLawHusbandsFather
|| __DATA_CONST.__const _CNLabelContactRelationFatherInLawOrStepfather
|| __DATA_CONST.__const _CNLabelContactRelationFatherInLawWifesFather
|| __DATA_CONST.__const _CNLabelContactRelationFemaleCousin
|| __DATA_CONST.__const _CNLabelContactRelationFemaleFriend
|| __DATA_CONST.__const _CNLabelContactRelationFemalePartner
|| __DATA_CONST.__const _CNLabelContactRelationFriend
|| __DATA_CONST.__const _CNLabelContactRelationGirlfriend
|| __DATA_CONST.__const _CNLabelContactRelationGirlfriendOrBoyfriend
|| __DATA_CONST.__const _CNLabelContactRelationGrandaunt
|| __DATA_CONST.__const _CNLabelContactRelationGrandchild
|| __DATA_CONST.__const _CNLabelContactRelationGrandchildOrSiblingsChild
|| __DATA_CONST.__const _CNLabelContactRelationGranddaughter
|| __DATA_CONST.__const _CNLabelContactRelationGranddaughterDaughtersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationGranddaughterSonsDaughter
|| __DATA_CONST.__const _CNLabelContactRelationGrandfather
|| __DATA_CONST.__const _CNLabelContactRelationGrandfatherFathersFather
|| __DATA_CONST.__const _CNLabelContactRelationGrandfatherMothersFather
|| __DATA_CONST.__const _CNLabelContactRelationGrandmother
|| __DATA_CONST.__const _CNLabelContactRelationGrandmotherFathersMother
|| __DATA_CONST.__const _CNLabelContactRelationGrandmotherMothersMother
|| __DATA_CONST.__const _CNLabelContactRelationGrandnephew
|| __DATA_CONST.__const _CNLabelContactRelationGrandnephewBrothersGrandson
|| __DATA_CONST.__const _CNLabelContactRelationGrandnephewSistersGrandson
|| __DATA_CONST.__const _CNLabelContactRelationGrandniece
|| __DATA_CONST.__const _CNLabelContactRelationGrandnieceBrothersGranddaughter
|| __DATA_CONST.__const _CNLabelContactRelationGrandnieceSistersGranddaughter
|| __DATA_CONST.__const _CNLabelContactRelationGrandparent
|| __DATA_CONST.__const _CNLabelContactRelationGrandson
|| __DATA_CONST.__const _CNLabelContactRelationGrandsonDaughtersSon
|| __DATA_CONST.__const _CNLabelContactRelationGrandsonSonsSon
|| __DATA_CONST.__const _CNLabelContactRelationGranduncle
|| __DATA_CONST.__const _CNLabelContactRelationGreatGrandchild
|| __DATA_CONST.__const _CNLabelContactRelationGreatGrandchildOrSiblingsGrandchild
|| __DATA_CONST.__const _CNLabelContactRelationGreatGranddaughter
|| __DATA_CONST.__const _CNLabelContactRelationGreatGrandfather
|| __DATA_CONST.__const _CNLabelContactRelationGreatGrandmother
|| __DATA_CONST.__const _CNLabelContactRelationGreatGrandparent
|| __DATA_CONST.__const _CNLabelContactRelationGreatGrandson
|| __DATA_CONST.__const _CNLabelContactRelationHusband
|| __DATA_CONST.__const _CNLabelContactRelationMaleCousin
|| __DATA_CONST.__const _CNLabelContactRelationMaleFriend
|| __DATA_CONST.__const _CNLabelContactRelationMalePartner
|| __DATA_CONST.__const _CNLabelContactRelationManager
|| __DATA_CONST.__const _CNLabelContactRelationMother
|| __DATA_CONST.__const _CNLabelContactRelationMotherInLaw
|| __DATA_CONST.__const _CNLabelContactRelationMotherInLawHusbandsMother
|| __DATA_CONST.__const _CNLabelContactRelationMotherInLawOrStepmother
|| __DATA_CONST.__const _CNLabelContactRelationMotherInLawWifesMother
|| __DATA_CONST.__const _CNLabelContactRelationNephew
|| __DATA_CONST.__const _CNLabelContactRelationNephewBrothersSon
|| __DATA_CONST.__const _CNLabelContactRelationNephewBrothersSonOrHusbandsSiblingsSon
|| __DATA_CONST.__const _CNLabelContactRelationNephewOrCousin
|| __DATA_CONST.__const _CNLabelContactRelationNephewSistersSon
|| __DATA_CONST.__const _CNLabelContactRelationNephewSistersSonOrWifesSiblingsSon
|| __DATA_CONST.__const _CNLabelContactRelationNiece
|| __DATA_CONST.__const _CNLabelContactRelationNieceBrothersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationNieceBrothersDaughterOrHusbandsSiblingsDaughter
|| __DATA_CONST.__const _CNLabelContactRelationNieceOrCousin
|| __DATA_CONST.__const _CNLabelContactRelationNieceSistersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationNieceSistersDaughterOrWifesSiblingsDaughter
|| __DATA_CONST.__const _CNLabelContactRelationParent
|| __DATA_CONST.__const _CNLabelContactRelationParentInLaw
|| __DATA_CONST.__const _CNLabelContactRelationParentsElderSibling
|| __DATA_CONST.__const _CNLabelContactRelationParentsSibling
|| __DATA_CONST.__const _CNLabelContactRelationParentsSiblingFathersElderSibling
|| __DATA_CONST.__const _CNLabelContactRelationParentsSiblingFathersSibling
|| __DATA_CONST.__const _CNLabelContactRelationParentsSiblingFathersYoungerSibling
|| __DATA_CONST.__const _CNLabelContactRelationParentsSiblingMothersElderSibling
|| __DATA_CONST.__const _CNLabelContactRelationParentsSiblingMothersSibling
|| __DATA_CONST.__const _CNLabelContactRelationParentsSiblingMothersYoungerSibling
|| __DATA_CONST.__const _CNLabelContactRelationParentsYoungerSibling
|| __DATA_CONST.__const _CNLabelContactRelationPartner
|| __DATA_CONST.__const _CNLabelContactRelationSibling
|| __DATA_CONST.__const _CNLabelContactRelationSiblingInLaw
|| __DATA_CONST.__const _CNLabelContactRelationSiblingsChild
|| __DATA_CONST.__const _CNLabelContactRelationSister
|| __DATA_CONST.__const _CNLabelContactRelationSisterInLaw
|| __DATA_CONST.__const _CNLabelContactRelationSisterInLawBrothersWife
|| __DATA_CONST.__const _CNLabelContactRelationSisterInLawElderBrothersWife
|| __DATA_CONST.__const _CNLabelContactRelationSisterInLawHusbandsBrothersWife
|| __DATA_CONST.__const _CNLabelContactRelationSisterInLawHusbandsSister
|| __DATA_CONST.__const _CNLabelContactRelationSisterInLawSpousesSister
|| __DATA_CONST.__const _CNLabelContactRelationSisterInLawWifesBrothersWife
|| __DATA_CONST.__const _CNLabelContactRelationSisterInLawWifesSister
|| __DATA_CONST.__const _CNLabelContactRelationSisterInLawYoungerBrothersWife
|| __DATA_CONST.__const _CNLabelContactRelationSon
|| __DATA_CONST.__const _CNLabelContactRelationSonInLaw
|| __DATA_CONST.__const _CNLabelContactRelationSonInLawOrBrotherInLaw
|| __DATA_CONST.__const _CNLabelContactRelationSonInLawOrStepson
|| __DATA_CONST.__const _CNLabelContactRelationSpouse
|| __DATA_CONST.__const _CNLabelContactRelationStepbrother
|| __DATA_CONST.__const _CNLabelContactRelationStepchild
|| __DATA_CONST.__const _CNLabelContactRelationStepdaughter
|| __DATA_CONST.__const _CNLabelContactRelationStepfather
|| __DATA_CONST.__const _CNLabelContactRelationStepmother
|| __DATA_CONST.__const _CNLabelContactRelationStepparent
|| __DATA_CONST.__const _CNLabelContactRelationStepsister
|| __DATA_CONST.__const _CNLabelContactRelationStepson
|| __DATA_CONST.__const _CNLabelContactRelationTeacher
|| __DATA_CONST.__const _CNLabelContactRelationUncle
|| __DATA_CONST.__const _CNLabelContactRelationUncleFathersBrother
|| __DATA_CONST.__const _CNLabelContactRelationUncleFathersElderBrother
|| __DATA_CONST.__const _CNLabelContactRelationUncleFathersElderSistersHusband
|| __DATA_CONST.__const _CNLabelContactRelationUncleFathersSistersHusband
|| __DATA_CONST.__const _CNLabelContactRelationUncleFathersYoungerBrother
|| __DATA_CONST.__const _CNLabelContactRelationUncleFathersYoungerSistersHusband
|| __DATA_CONST.__const _CNLabelContactRelationUncleMothersBrother
|| __DATA_CONST.__const _CNLabelContactRelationUncleMothersElderBrother
|| __DATA_CONST.__const _CNLabelContactRelationUncleMothersSistersHusband
|| __DATA_CONST.__const _CNLabelContactRelationUncleMothersYoungerBrother
|| __DATA_CONST.__const _CNLabelContactRelationUncleParentsBrother
|| __DATA_CONST.__const _CNLabelContactRelationUncleParentsElderBrother
|| __DATA_CONST.__const _CNLabelContactRelationUncleParentsYoungerBrother
|| __DATA_CONST.__const _CNLabelContactRelationWife
|| __DATA_CONST.__const _CNLabelContactRelationYoungerBrother
|| __DATA_CONST.__const _CNLabelContactRelationYoungerBrotherInLaw
|| __DATA_CONST.__const _CNLabelContactRelationYoungerCousin
|| __DATA_CONST.__const _CNLabelContactRelationYoungerCousinFathersBrothersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationYoungerCousinFathersBrothersSon
|| __DATA_CONST.__const _CNLabelContactRelationYoungerCousinFathersSistersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationYoungerCousinFathersSistersSon
|| __DATA_CONST.__const _CNLabelContactRelationYoungerCousinMothersBrothersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationYoungerCousinMothersBrothersSon
|| __DATA_CONST.__const _CNLabelContactRelationYoungerCousinMothersSiblingsDaughterOrFathersSistersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationYoungerCousinMothersSiblingsSonOrFathersSistersSon
|| __DATA_CONST.__const _CNLabelContactRelationYoungerCousinMothersSistersDaughter
|| __DATA_CONST.__const _CNLabelContactRelationYoungerCousinMothersSistersSon
|| __DATA_CONST.__const _CNLabelContactRelationYoungerCousinParentsSiblingsDaughter
|| __DATA_CONST.__const _CNLabelContactRelationYoungerCousinParentsSiblingsSon
|| __DATA_CONST.__const _CNLabelContactRelationYoungerSibling
|| __DATA_CONST.__const _CNLabelContactRelationYoungerSiblingInLaw
|| __DATA_CONST.__const _CNLabelContactRelationYoungerSister
|| __DATA_CONST.__const _CNLabelContactRelationYoungerSisterInLaw
|| __DATA_CONST.__const _CNLabelContactRelationYoungestBrother
|| __DATA_CONST.__const _CNLabelContactRelationYoungestSister
|| __DATA_CONST.__const _CNLabelDateAnniversary
|| __DATA_CONST.__const _CNLabelEmailiCloud
|| __DATA_CONST.__const _CNLabelHome
|| __DATA_CONST.__const _CNLabelOther
|| __DATA_CONST.__const _CNLabelPhoneNumberAssistant
|| __DATA_CONST.__const _CNLabelPhoneNumberCallback
|| __DATA_CONST.__const _CNLabelPhoneNumberCar
|| __DATA_CONST.__const _CNLabelPhoneNumberCompanyMain
|| __DATA_CONST.__const _CNLabelPhoneNumberHomeFax
|| __DATA_CONST.__const _CNLabelPhoneNumberISDN
|| __DATA_CONST.__const _CNLabelPhoneNumberMain
|| __DATA_CONST.__const _CNLabelPhoneNumberMobile
|| __DATA_CONST.__const _CNLabelPhoneNumberOtherFax
|| __DATA_CONST.__const _CNLabelPhoneNumberPager
|| __DATA_CONST.__const _CNLabelPhoneNumberRadio
|| __DATA_CONST.__const _CNLabelPhoneNumberTTY
|| __DATA_CONST.__const _CNLabelPhoneNumberTelex
|| __DATA_CONST.__const _CNLabelPhoneNumberWorkFax
|| __DATA_CONST.__const _CNLabelPhoneNumberiPhone
|| __DATA_CONST.__const _CNLabelSchool
|| __DATA_CONST.__const _CNLabelURLAddressHomePage
|| __DATA_CONST.__const _CNLabelWork
|| __DATA_CONST.__const _CNLinkedContactsIdentifiersPboardType
|| __DATA_CONST.__const _CNMatchInfoExcerptEmphasisAttributeName
|| __DATA_CONST.__const _CNNotificationOriginatedExternally
|| __DATA_CONST.__const _CNNotificationSaveIdentifiers
|| __DATA_CONST.__const _CNNotificationSources
|| __DATA_CONST.__const _CNOtherLabel
|| __DATA_CONST.__const _CNPhoneAssistantLabel
|| __DATA_CONST.__const _CNPhoneCarLabel
|| __DATA_CONST.__const _CNPhoneCompanyMainLabel
|| __DATA_CONST.__const _CNPhoneHomeFaxLabel
|| __DATA_CONST.__const _CNPhoneIPhoneLabel
|| __DATA_CONST.__const _CNPhoneMainLabel
|| __DATA_CONST.__const _CNPhoneMobileLabel
|| __DATA_CONST.__const _CNPhoneNumberCountryCodeKey
|| __DATA_CONST.__const _CNPhoneNumberDigitsKey
|| __DATA_CONST.__const _CNPhoneNumberStringValueKey
|| __DATA_CONST.__const _CNPhonePagerLabel
|| __DATA_CONST.__const _CNPhoneRadioLabel
|| __DATA_CONST.__const _CNPhoneWorkFaxLabel
|| __DATA_CONST.__const _CNPostalAddressCityKey
|| __DATA_CONST.__const _CNPostalAddressCountryKey
|| __DATA_CONST.__const _CNPostalAddressFormattedAddressKey
|| __DATA_CONST.__const _CNPostalAddressISOCountryCodeKey
|| __DATA_CONST.__const _CNPostalAddressLocalizedPropertyNameAttribute
|| __DATA_CONST.__const _CNPostalAddressPostalCodeKey
|| __DATA_CONST.__const _CNPostalAddressPropertyAttribute
|| __DATA_CONST.__const _CNPostalAddressStateKey
|| __DATA_CONST.__const _CNPostalAddressStreetKey
|| __DATA_CONST.__const _CNPostalAddressSubAdministrativeAreaKey
|| __DATA_CONST.__const _CNPostalAddressSubLocalityKey
|| __DATA_CONST.__const _CNSocialProfileBundleIdentifiersKey
|| __DATA_CONST.__const _CNSocialProfileDisplayNameKey
|| __DATA_CONST.__const _CNSocialProfileServiceFacebook
|| __DATA_CONST.__const _CNSocialProfileServiceFlickr
|| __DATA_CONST.__const _CNSocialProfileServiceGameCenter
|| __DATA_CONST.__const _CNSocialProfileServiceKey
|| __DATA_CONST.__const _CNSocialProfileServiceLinkedIn
|| __DATA_CONST.__const _CNSocialProfileServiceMySpace
|| __DATA_CONST.__const _CNSocialProfileServiceSinaWeibo
|| __DATA_CONST.__const _CNSocialProfileServiceTencentWeibo
|| __DATA_CONST.__const _CNSocialProfileServiceTwitter
|| __DATA_CONST.__const _CNSocialProfileServiceYelp
|| __DATA_CONST.__const _CNSocialProfileTeamIdentifierKey
|| __DATA_CONST.__const _CNSocialProfileURLStringKey
|| __DATA_CONST.__const _CNSocialProfileUserIdentifierKey
|| __DATA_CONST.__const _CNSocialProfileUsernameKey
|| __DATA_CONST.__const _CNTelephonyServiceName
|| __DATA_CONST.__const _CNVCardDisplayNamesType
|| __DATA_CONST.__const _CNWorkLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CN
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNAbstractActivityAlertDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNAccessAuthorization
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNBirthdayDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNCalendarURIsDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNCallAlertDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNChangeHistoryAnchor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNChangeHistoryClearRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNChangeHistoryContactChange
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNChangeHistoryFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNChangesNotifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNCompoundMultiValuePropertyDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactChangesNotifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactFormatter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactKeyVector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactMatchInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactRelationsDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactTypeDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactVCardSerialization
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactsEnvironment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactsLoggerProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContactsUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNCreationDateDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNCropRectDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNDataMapperContactStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNDatesDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNDepartmentDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNDowntimeWhitelistDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNEmailAddressesDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNErrorFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNExternalIdentifierDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNExternalImageURIDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNExternalModificationTagDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNExternalRepresentationDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNExternalUUIDDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNFamilyNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNFavorites
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNFavoritesEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNFullscreenImageDataDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNGeminiHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNGeminiManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNGeminiResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNGivenNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNIOSLegacyIdentifierDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNImageDataAvailableDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNImageDataDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNImageHashDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNImageTypeDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNIndexRequestHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNInstantMessageAddressesDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNInternalIdentifierDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNJobTitleDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNLabeledValue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNLinkIdentifierDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNMapsDataDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNMiddleNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNModificationDateDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNMultiValuePropertyDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNMutableContact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNMutableContactKeyVector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNMutablePostalAddress
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNNamePrefixDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNNameSuffixDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNNicknameNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNNonGregorianBirthdayDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNNoteDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNOrganizationNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPerContactPropertyKeyDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPhoneNumber
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPhoneNumbersDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPhonemeDataDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPhoneticFamilyNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPhoneticGivenNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPhoneticMiddleNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPhoneticOrganizationNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPostalAddress
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPostalAddressesDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPreferredApplePersonaIdentifierDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPreferredChannelDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPreferredForImageDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPreferredForNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPreferredLikenessSourceDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPreviousFamilyNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPronunciationFamilyNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPronunciationGivenNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNPropertyDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNSaveRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNSectionForSortingByFamilyNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNSectionForSortingByGivenNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNSocialProfilesDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNSuggestedContactStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNTCC
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNTestSmartFetcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNTextAlertDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNThumbnailImageDataDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNUrlAddressesDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNValueOrigin
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNXPCDataMapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNiOSAddressBookDataMapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CNiOSEncodedPeopleFetcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__CNContactsLogger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__CNFavoritesLogger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__CNRegulatoryLogger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CN
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNAbstractActivityAlertDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNAccessAuthorization
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNBirthdayDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNCalendarURIsDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNCallAlertDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNChangeHistoryAnchor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNChangeHistoryClearRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNChangeHistoryContactChange
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNChangeHistoryFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNChangesNotifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNCompoundMultiValuePropertyDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactChangesNotifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactFormatter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactKeyVector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactMatchInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactRelationsDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactTypeDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactVCardSerialization
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactsEnvironment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactsLoggerProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContactsUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNCreationDateDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNCropRectDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNDataMapperContactStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNDatesDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNDepartmentDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNDowntimeWhitelist
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNDowntimeWhitelistDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNEmailAddressesDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNErrorFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNExternalIdentifierDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNExternalImageURIDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNExternalModificationTagDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNExternalRepresentationDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNExternalUUIDDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNFamilyNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNFavorites
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNFullscreenImageDataDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNGeminiHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNGeminiManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNGeminiResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNGivenNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNIOSLegacyIdentifierDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNImageDataAvailableDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNImageDataDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNImageHashDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNImageTypeDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNIndexRequestHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNInstantMessageAddress
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNInstantMessageAddressesDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNInternalIdentifierDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNJobTitleDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNLabeledValue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNLinkIdentifierDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNMapsDataDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNMiddleNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNModificationDateDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNMultiValuePropertyDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNMutableContact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNMutableContactKeyVector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNMutablePostalAddress
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNNamePrefixDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNNameSuffixDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNNicknameNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNNonGregorianBirthdayDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNNoteDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNOrganizationNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPerContactPropertyKeyDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPhoneNumber
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPhoneNumbersDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPhonemeDataDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPhoneticFamilyNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPhoneticGivenNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPhoneticMiddleNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPhoneticOrganizationNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPostalAddress
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPostalAddressFormatter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPostalAddressesDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPreferredApplePersonaIdentifierDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPreferredChannelDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPreferredForImageDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPreferredForNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPreferredLikenessSourceDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPreviousFamilyNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPronunciationFamilyNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPronunciationGivenNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNPropertyDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNReputationStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNSaveRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNSectionForSortingByFamilyNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNSectionForSortingByGivenNameDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNSocialProfilesDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNSuggestedContactStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNTCC
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNTestSmartFetcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNTextAlertDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNThumbnailImageDataDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNUrlAddressesDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNValueOrigin
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNXPCDataMapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNiOSAddressBookDataMapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CNiOSEncodedPeopleFetcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__CNContactsLogger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__CNFavoritesLogger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__CNRegulatoryLogger
|| __TEXT.__const _CNContactIOSLegacyIdentifierInvalid
|| __TEXT.__text _CNLinkedOnOrAfter
|| __TEXT.__text _CNLinkedOnOrAfterSimulateLinkedBefore
__ Accounts: _ACAccountStoreDidChangeNotification
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACAccountTypeIdentifierCardDAV
__ Accounts: _ACAccountTypeIdentifierExchange
__ Accounts: _ACAccountTypeIdentifierGmail
__ Accounts: _ACAccountTypeIdentifierHotmail
__ Accounts: _ACAccountTypeIdentifierYahoo
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AddressBookLegacy: _ABAccountCopyIdentifier
__ AddressBookLegacy: _ABAccountCopyInternalUUID
__ AddressBookLegacy: _ABAccountCreate
__ AddressBookLegacy: _ABAccountSetIdentifier
__ AddressBookLegacy: _ABAccountSetInternalUUID
__ AddressBookLegacy: _ABAddressBookAddRecord
__ AddressBookLegacy: _ABAddressBookCopyAccountIdentifierForSource
__ AddressBookLegacy: _ABAddressBookCopyAccountWithIdentifier
__ AddressBookLegacy: _ABAddressBookCopyAccountsWithUUIDs
__ AddressBookLegacy: _ABAddressBookCopyAllLabelsForProperty
__ AddressBookLegacy: _ABAddressBookCopyAllPeopleForBufferPredicate
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllAccounts
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllGroups
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllGroupsInSource
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllPeopleInSource
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllPeopleInSourceWithSortOrdering
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllPeopleMatching
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllSources
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllSourcesInAccount
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllSourcesIncludingDisabledSources
__ AddressBookLegacy: _ABAddressBookCopyArrayOfAllSourcesWithAccountIdentifier
__ AddressBookLegacy: _ABAddressBookCopyArrayOfPreferredNamePeopleForGroupsAndSourcesWithSortOrdering
__ AddressBookLegacy: _ABAddressBookCopyDefaultSource
__ AddressBookLegacy: _ABAddressBookCopyGroupsWithUUIDs
__ AddressBookLegacy: _ABAddressBookCopyLocalSource
__ AddressBookLegacy: _ABAddressBookCopyMe
__ AddressBookLegacy: _ABAddressBookCopyPeopleWithLinkIdentifiers
__ AddressBookLegacy: _ABAddressBookCopyPeopleWithName
__ AddressBookLegacy: _ABAddressBookCopyPeopleWithUUIDs
__ AddressBookLegacy: _ABAddressBookCopyPersonMatchingInternalUUID
__ AddressBookLegacy: _ABAddressBookCopyPersonMatchingMapData
__ AddressBookLegacy: _ABAddressBookCopySourcesWithUUIDs
__ AddressBookLegacy: _ABAddressBookCopyUniqueIdentifier
__ AddressBookLegacy: _ABAddressBookCopyValue
__ AddressBookLegacy: _ABAddressBookCreateWithDatabaseDirectory
__ AddressBookLegacy: _ABAddressBookCreateWithOptions
__ AddressBookLegacy: _ABAddressBookErrorDomain
__ AddressBookLegacy: _ABAddressBookErrorUserInfoOperationNotPermittedByStoreReasonKey
__ AddressBookLegacy: _ABAddressBookErrorUserInfoOperationNotPermittedByStoreReasonRecordNotWritable
__ AddressBookLegacy: _ABAddressBookErrorUserInfoOperationNotPermittedByStoreReasonSourceNotWritable
__ AddressBookLegacy: _ABAddressBookFindPersonMatchingEmailAddress
__ AddressBookLegacy: _ABAddressBookFindPersonMatchingMatchingDictionary
__ AddressBookLegacy: _ABAddressBookFindPersonMatchingMultiValueUUID
__ AddressBookLegacy: _ABAddressBookFindPersonMatchingURL
__ AddressBookLegacy: _ABAddressBookFindPersonMatchingUserActivityUserInfo
__ AddressBookLegacy: _ABAddressBookGetAccountForSource
__ AddressBookLegacy: _ABAddressBookGetAuthorizationStatus
__ AddressBookLegacy: _ABAddressBookGetDefaultSourceForAccount
__ AddressBookLegacy: _ABAddressBookGetGroupCount
__ AddressBookLegacy: _ABAddressBookGetGroupWithRecordID
__ AddressBookLegacy: _ABAddressBookGetPersonCount
__ AddressBookLegacy: _ABAddressBookGetPersonWithRecordID
__ AddressBookLegacy: _ABAddressBookGetPreferredNamePeopleCountForManagedConfiguration
__ AddressBookLegacy: _ABAddressBookGetSequenceNumber
__ AddressBookLegacy: _ABAddressBookGetSourceCountIncludingDisabled
__ AddressBookLegacy: _ABAddressBookGetSourceWithRecordID
__ AddressBookLegacy: _ABAddressBookHasMeCardChanges
__ AddressBookLegacy: _ABAddressBookIndexSetOfAllowedSourceIdentifiersIncludingDisabledSources
__ AddressBookLegacy: _ABAddressBookInvalidateCaches
__ AddressBookLegacy: _ABAddressBookMeCardChangeDistributedNotificationName
__ AddressBookLegacy: _ABAddressBookMoveAllRecordsInSourceToSource
__ AddressBookLegacy: _ABAddressBookPrimePersonContextForIdentifier
__ AddressBookLegacy: _ABAddressBookRemoveRecord
__ AddressBookLegacy: _ABAddressBookResetSortDataInProcessIfNeeded
__ AddressBookLegacy: _ABAddressBookSave
__ AddressBookLegacy: _ABAddressBookSaveDistributedNotificationName
__ AddressBookLegacy: _ABAddressBookSetAccountForSource
__ AddressBookLegacy: _ABAddressBookSetBestMeIfNeeded
__ AddressBookLegacy: _ABAddressBookSetDefaultSource
__ AddressBookLegacy: _ABAddressBookSetDefaultSourceForAccount
__ AddressBookLegacy: _ABAddressBookSetIgnoresGuardianRestrictions
__ AddressBookLegacy: _ABAddressBookSetIntegerProperty
__ AddressBookLegacy: _ABAddressBookSetMe
__ AddressBookLegacy: _ABAddressBookSetSaveTransactionIdentifier
__ AddressBookLegacy: _ABAddressBookSetValue
__ AddressBookLegacy: _ABCPersonPropertySupportsLazyLoading
__ AddressBookLegacy: _ABChangeHistoryClearChangesUpToSequenceNumberForClient
__ AddressBookLegacy: _ABChangeHistoryClearEntityChangeTableRowIDsForClient
__ AddressBookLegacy: _ABChangeHistoryGetChanges
__ AddressBookLegacy: _ABChangeHistoryGetEntityChangesSinceSequenceNumberForClient
__ AddressBookLegacy: _ABChangeHistoryGetLatestConsumedSequenceNumberForClient
__ AddressBookLegacy: _ABChangeHistoryHasClientWithIdentifier
__ AddressBookLegacy: _ABChangeHistoryRegisterClientForSource
__ AddressBookLegacy: _ABChangeHistorySetAddressBookClientIdentifier
__ AddressBookLegacy: _ABChangeHistoryUnregisterClientForSource
__ AddressBookLegacy: _ABCopyArrayOfPreferredNamePeopleAtOffsetForManagedConfiguration
__ AddressBookLegacy: _ABCopyArrayOfSectionListOffsetsForManagedConfiguration
__ AddressBookLegacy: _ABDeviceIsBeforeFirstUnlockWithDataProtected
__ AddressBookLegacy: _ABGetProcessDistributedNotificationIdentifier
__ AddressBookLegacy: _ABGroupAddMember
__ AddressBookLegacy: _ABGroupAddSubgroup
__ AddressBookLegacy: _ABGroupCopyArrayOfAllMembersWithSortOrdering
__ AddressBookLegacy: _ABGroupCopyArrayOfAllSubgroups
__ AddressBookLegacy: _ABGroupCopySource
__ AddressBookLegacy: _ABGroupCreate
__ AddressBookLegacy: _ABGroupCreateInSource
__ AddressBookLegacy: _ABGroupRemoveMember
__ AddressBookLegacy: _ABGroupRemoveSubgroup
__ AddressBookLegacy: _ABInitialize
__ AddressBookLegacy: _ABLogDisplayInternalAlert
__ AddressBookLegacy: _ABLogSimulateCrashReport
__ AddressBookLegacy: _ABMultiValueBatchLoad
__ AddressBookLegacy: _ABMultiValueCopyLabelAtIndex
__ AddressBookLegacy: _ABMultiValueCopyUUIDAtIndex
__ AddressBookLegacy: _ABMultiValueCopyValueAtIndex
__ AddressBookLegacy: _ABMultiValueCreateMutable
__ AddressBookLegacy: _ABMultiValueCreateMutableCopy
__ AddressBookLegacy: _ABMultiValueGetCount
__ AddressBookLegacy: _ABMultiValueGetIdentifierAtIndex
__ AddressBookLegacy: _ABMultiValueInsertValueAndLabelAndUUIDAtIndex
__ AddressBookLegacy: _ABMultiValueInsertValueAndLabelAtIndex
__ AddressBookLegacy: _ABMultiValueRemoveValueAndLabelAtIndex
__ AddressBookLegacy: _ABMultiValueReplaceLabelAtIndex
__ AddressBookLegacy: _ABMultiValueReplaceValueAtIndex
__ AddressBookLegacy: _ABMultiValueSetPrimaryIdentifier
__ AddressBookLegacy: _ABPeoplePickerPrefs
__ AddressBookLegacy: _ABPersonComparePeopleByName
__ AddressBookLegacy: _ABPersonCopyArrayOfAllLinkedPeople
__ AddressBookLegacy: _ABPersonCopyImageDataAndCropRect
__ AddressBookLegacy: _ABPersonCopyImageDataWithFormat
__ AddressBookLegacy: _ABPersonCopyLinkUUID
__ AddressBookLegacy: _ABPersonCopyPreferredLinkedPersonForImage
__ AddressBookLegacy: _ABPersonCopySoundIdentifierForMultiValueIdentifier
__ AddressBookLegacy: _ABPersonCopySource
__ AddressBookLegacy: _ABPersonCreate
__ AddressBookLegacy: _ABPersonCreateInSourceAndReturnError
__ AddressBookLegacy: _ABPersonCreateUnifiedPerson
__ AddressBookLegacy: _ABPersonGetCompositeNameFormatForRecord
__ AddressBookLegacy: _ABPersonGetEditNameFormat
__ AddressBookLegacy: _ABPersonGetMatchingDictionary
__ AddressBookLegacy: _ABPersonGetShortNameFormat
__ AddressBookLegacy: _ABPersonGetShortNameFormatEnabled
__ AddressBookLegacy: _ABPersonGetShortNamePreferNicknames
__ AddressBookLegacy: _ABPersonGetSortOrdering
__ AddressBookLegacy: _ABPersonGetTypeOfProperty
__ AddressBookLegacy: _ABPersonGetUserActivityUserInfo
__ AddressBookLegacy: _ABPersonHasImageData
__ AddressBookLegacy: _ABPersonLinkPerson
__ AddressBookLegacy: _ABPersonRemoveImageData
__ AddressBookLegacy: _ABPersonSetCompositeNameFormat
__ AddressBookLegacy: _ABPersonSetImageData
__ AddressBookLegacy: _ABPersonSetImageDataAndCropRect
__ AddressBookLegacy: _ABPersonSetImageDataDerivedFromFormatAndReturnError
__ AddressBookLegacy: _ABPersonSetImageDataWithCropRect
__ AddressBookLegacy: _ABPersonSetLinkUUID
__ AddressBookLegacy: _ABPersonSetPreferredLinkedPersonForImage
__ AddressBookLegacy: _ABPersonSetPreferredLinkedPersonForName
__ AddressBookLegacy: _ABPersonSetShortNameFormat
__ AddressBookLegacy: _ABPersonSetShortNameFormatEnabled
__ AddressBookLegacy: _ABPersonSetShortNamePreferNicknames
__ AddressBookLegacy: _ABPersonSetSoundIdentifierForMultiValueIdentifier
__ AddressBookLegacy: _ABPersonUnlink
__ AddressBookLegacy: _ABPolicyCopyPreferredLabelsForProperty
__ AddressBookLegacy: _ABPolicyCopySupportedLabelsForProperty
__ AddressBookLegacy: _ABPolicyMaximumNumberOfValuesForProperty
__ AddressBookLegacy: _ABPolicyShouldAddRecord
__ AddressBookLegacy: _ABPolicyShouldRemoveRecord
__ AddressBookLegacy: _ABPolicyShouldSetValue
__ AddressBookLegacy: _ABPredicateMetadataExcerptEmphasisAttributeName
__ AddressBookLegacy: _ABPredicateMetadataExcerptKey
__ AddressBookLegacy: _ABPredicateMetadataMatchedPropertiesKey
__ AddressBookLegacy: _ABPredicateMetadataMatchedTermsKey
__ AddressBookLegacy: _ABPredicateMetadataRelevanceKey
__ AddressBookLegacy: _ABRecordCopyOriginalValue
__ AddressBookLegacy: _ABRecordCopyValue
__ AddressBookLegacy: _ABRecordGetIntValue
__ AddressBookLegacy: _ABRecordGetRecordID
__ AddressBookLegacy: _ABRecordSetIntValue
__ AddressBookLegacy: _ABRecordSetValue
__ AddressBookLegacy: _ABSourceCreate
__ AddressBookLegacy: _ABSourceGetPolicy
__ AddressBookLegacy: _ABSourceIsContentReadonly
__ AddressBookLegacy: _ABSourceIsReadonly
__ AddressBookLegacy: _ABSourceIsRemote
__ AddressBookLegacy: _ABSourceSetMe
__ AddressBookLegacy: _ABTokenListCreate
__ AddressBookLegacy: _ABTokenListGetCount
__ AddressBookLegacy: _ABTokenListGetTokenAtIndex
__ AddressBookLegacy: _ABTokenListGetTokenRangeAtIndex
__ AddressBookLegacy: _ABTokenListPopulateFromString
__ AddressBookLegacy: _OBJC_CLASS_$_ABBufferQueryCursor
__ AddressBookLegacy: _OBJC_CLASS_$_ABPhoneFormatting
__ AddressBookLegacy: _OBJC_CLASS_$_ABPredicate
__ AddressBookLegacy: _OBJC_CLASS_$_ABSQLPredicate
__ AddressBookLegacy: _OBJC_CLASS_$_ABSearchOperation
__ AddressBookLegacy: _kABAddressBookCreateOptionFamilyMemberAltDSIDKey
__ AddressBookLegacy: _kABCPersonFullscreenImageDataProperty
__ AddressBookLegacy: _kABCPersonHasImageDataProperty
__ AddressBookLegacy: _kABCPersonImageCropRectProperty
__ AddressBookLegacy: _kABCPersonImageDataProperty
__ AddressBookLegacy: _kABCPersonIsPreferredImageProperty
__ AddressBookLegacy: _kABCPersonLinkUUIDProperty
__ AddressBookLegacy: _kABCPersonSyncImageDataProperty
__ AddressBookLegacy: _kABCPersonThumbnailDataProperty
__ AddressBookLegacy: _kABChangeHistoryChangeTableRowIDsKey
__ AddressBookLegacy: _kABChangeHistoryChangesTruncatedKey
__ AddressBookLegacy: _kABChangeHistoryEventTypesKey
__ AddressBookLegacy: _kABChangeHistoryExternalIDsKey
__ AddressBookLegacy: _kABChangeHistoryImagesChangedKey
__ AddressBookLegacy: _kABChangeHistoryLatestSequenceNumberKey
__ AddressBookLegacy: _kABChangeHistoryMultiValueGUIDsKey
__ AddressBookLegacy: _kABChangeHistoryPropertyIDsKey
__ AddressBookLegacy: _kABChangeHistoryRecordGUIDsKey
__ AddressBookLegacy: _kABChangeHistorySequenceNumbersKey
__ AddressBookLegacy: _kABErrorDomain
__ AddressBookLegacy: _kABGroupExternalIdentifierProperty
__ AddressBookLegacy: _kABGroupExternalModificationTagProperty
__ AddressBookLegacy: _kABGroupExternalRepresentationProperty
__ AddressBookLegacy: _kABGroupExternalUUIDProperty
__ AddressBookLegacy: _kABGroupInternalUUIDProperty
__ AddressBookLegacy: _kABGroupNameProperty
__ AddressBookLegacy: _kABHomeLabel
__ AddressBookLegacy: _kABOtherLabel
__ AddressBookLegacy: _kABPersonAddressCityKey
__ AddressBookLegacy: _kABPersonAddressCountryCodeKey
__ AddressBookLegacy: _kABPersonAddressCountryKey
__ AddressBookLegacy: _kABPersonAddressProperty
__ AddressBookLegacy: _kABPersonAddressStateKey
__ AddressBookLegacy: _kABPersonAddressStreetKey
__ AddressBookLegacy: _kABPersonAddressSubAdministrativeAreaKey
__ AddressBookLegacy: _kABPersonAddressSubLocalityKey
__ AddressBookLegacy: _kABPersonAddressZIPKey
__ AddressBookLegacy: _kABPersonAlternateBirthdayCalendarIdentifierKey
__ AddressBookLegacy: _kABPersonAlternateBirthdayDayKey
__ AddressBookLegacy: _kABPersonAlternateBirthdayEraKey
__ AddressBookLegacy: _kABPersonAlternateBirthdayIsLeapMonthKey
__ AddressBookLegacy: _kABPersonAlternateBirthdayMonthKey
__ AddressBookLegacy: _kABPersonAlternateBirthdayProperty
__ AddressBookLegacy: _kABPersonAlternateBirthdayYearKey
__ AddressBookLegacy: _kABPersonAnniversaryLabel
__ AddressBookLegacy: _kABPersonAssistantLabel
__ AddressBookLegacy: _kABPersonBirthdayProperty
__ AddressBookLegacy: _kABPersonBrotherLabel
__ AddressBookLegacy: _kABPersonChildLabel
__ AddressBookLegacy: _kABPersonCreationDateProperty
__ AddressBookLegacy: _kABPersonDateProperty
__ AddressBookLegacy: _kABPersonDaughterLabel
__ AddressBookLegacy: _kABPersonDepartmentProperty
__ AddressBookLegacy: _kABPersonDonationBundleIdentifiersKey
__ AddressBookLegacy: _kABPersonDonationTeamIdentifierKey
__ AddressBookLegacy: _kABPersonDowntimeWhitelistProperty
__ AddressBookLegacy: _kABPersonEmailProperty
__ AddressBookLegacy: _kABPersonExternalIdentifierProperty
__ AddressBookLegacy: _kABPersonExternalModificationTagProperty
__ AddressBookLegacy: _kABPersonExternalRepresentationProperty
__ AddressBookLegacy: _kABPersonExternalUUIDProperty
__ AddressBookLegacy: _kABPersonFatherLabel
__ AddressBookLegacy: _kABPersonFirstNamePhoneticProperty
__ AddressBookLegacy: _kABPersonFirstNamePronunciationProperty
__ AddressBookLegacy: _kABPersonFirstNameProperty
__ AddressBookLegacy: _kABPersonFirstSortSectionProperty
__ AddressBookLegacy: _kABPersonFriendLabel
__ AddressBookLegacy: _kABPersonHomePageLabel
__ AddressBookLegacy: _kABPersonImageHashProperty
__ AddressBookLegacy: _kABPersonImageTypeProperty
__ AddressBookLegacy: _kABPersonImageURIProperty
__ AddressBookLegacy: _kABPersonInstantMessageProperty
__ AddressBookLegacy: _kABPersonInstantMessageServiceAIM
__ AddressBookLegacy: _kABPersonInstantMessageServiceFacebook
__ AddressBookLegacy: _kABPersonInstantMessageServiceGaduGadu
__ AddressBookLegacy: _kABPersonInstantMessageServiceGoogleTalk
__ AddressBookLegacy: _kABPersonInstantMessageServiceICQ
__ AddressBookLegacy: _kABPersonInstantMessageServiceJabber
__ AddressBookLegacy: _kABPersonInstantMessageServiceKey
__ AddressBookLegacy: _kABPersonInstantMessageServiceMSN
__ AddressBookLegacy: _kABPersonInstantMessageServiceQQ
__ AddressBookLegacy: _kABPersonInstantMessageServiceSkype
__ AddressBookLegacy: _kABPersonInstantMessageServiceYahoo
__ AddressBookLegacy: _kABPersonInstantMessageUserIdentifierKey
__ AddressBookLegacy: _kABPersonInstantMessageUsernameKey
__ AddressBookLegacy: _kABPersonInternalUUIDProperty
__ AddressBookLegacy: _kABPersonIsPreferredNameProperty
__ AddressBookLegacy: _kABPersonJobTitleProperty
__ AddressBookLegacy: _kABPersonKindOrganization
__ AddressBookLegacy: _kABPersonKindPerson
__ AddressBookLegacy: _kABPersonKindProperty
__ AddressBookLegacy: _kABPersonLastNamePhoneticProperty
__ AddressBookLegacy: _kABPersonLastNamePronunciationProperty
__ AddressBookLegacy: _kABPersonLastNameProperty
__ AddressBookLegacy: _kABPersonLastSortSectionProperty
__ AddressBookLegacy: _kABPersonLinkProperty
__ AddressBookLegacy: _kABPersonManagerLabel
__ AddressBookLegacy: _kABPersonMapsDataProperty
__ AddressBookLegacy: _kABPersonMiddleNamePhoneticProperty
__ AddressBookLegacy: _kABPersonMiddleNameProperty
__ AddressBookLegacy: _kABPersonModificationDateProperty
__ AddressBookLegacy: _kABPersonMotherLabel
__ AddressBookLegacy: _kABPersonNicknameProperty
__ AddressBookLegacy: _kABPersonNoteProperty
__ AddressBookLegacy: _kABPersonOrganizationPhoneticProperty
__ AddressBookLegacy: _kABPersonOrganizationProperty
__ AddressBookLegacy: _kABPersonParentLabel
__ AddressBookLegacy: _kABPersonPartnerLabel
__ AddressBookLegacy: _kABPersonPhoneAssistantLabel
__ AddressBookLegacy: _kABPersonPhoneCarLabel
__ AddressBookLegacy: _kABPersonPhoneCompanyMainLabel
__ AddressBookLegacy: _kABPersonPhoneHomeFAXLabel
__ AddressBookLegacy: _kABPersonPhoneIPhoneLabel
__ AddressBookLegacy: _kABPersonPhoneMainLabel
__ AddressBookLegacy: _kABPersonPhoneMobileLabel
__ AddressBookLegacy: _kABPersonPhoneOtherFAXLabel
__ AddressBookLegacy: _kABPersonPhonePagerLabel
__ AddressBookLegacy: _kABPersonPhoneProperty
__ AddressBookLegacy: _kABPersonPhoneRadioLabel
__ AddressBookLegacy: _kABPersonPhoneWorkFAXLabel
__ AddressBookLegacy: _kABPersonPhonemeDataProperty
__ AddressBookLegacy: _kABPersonPreferredChannelProperty
__ AddressBookLegacy: _kABPersonPreferredLikenessSourceProperty
__ AddressBookLegacy: _kABPersonPreferredPersonaIdentifierProperty
__ AddressBookLegacy: _kABPersonPrefixProperty
__ AddressBookLegacy: _kABPersonPreviousFamilyNameProperty
__ AddressBookLegacy: _kABPersonRelatedNamesProperty
__ AddressBookLegacy: _kABPersonSisterLabel
__ AddressBookLegacy: _kABPersonSocialProfileDisplayNameKey
__ AddressBookLegacy: _kABPersonSocialProfileProperty
__ AddressBookLegacy: _kABPersonSocialProfileServiceFacebook
__ AddressBookLegacy: _kABPersonSocialProfileServiceFlickr
__ AddressBookLegacy: _kABPersonSocialProfileServiceGameCenter
__ AddressBookLegacy: _kABPersonSocialProfileServiceKey
__ AddressBookLegacy: _kABPersonSocialProfileServiceLinkedIn
__ AddressBookLegacy: _kABPersonSocialProfileServiceMyspace
__ AddressBookLegacy: _kABPersonSocialProfileServiceSinaWeibo
__ AddressBookLegacy: _kABPersonSocialProfileServiceTwitter
__ AddressBookLegacy: _kABPersonSocialProfileURLKey
__ AddressBookLegacy: _kABPersonSocialProfileUserIdentifierKey
__ AddressBookLegacy: _kABPersonSocialProfileUsernameKey
__ AddressBookLegacy: _kABPersonSonLabel
__ AddressBookLegacy: _kABPersonSoundProperty
__ AddressBookLegacy: _kABPersonSpouseLabel
__ AddressBookLegacy: _kABPersonSuffixProperty
__ AddressBookLegacy: _kABPersonURLProperty
__ AddressBookLegacy: _kABSQLiteErrorDomain
__ AddressBookLegacy: _kABSchoolLabel
__ AddressBookLegacy: _kABSourceAccountIDProperty
__ AddressBookLegacy: _kABSourceCapabilitiesProperty
__ AddressBookLegacy: _kABSourceConstraintsPathProperty
__ AddressBookLegacy: _kABSourceEnabledProperty
__ AddressBookLegacy: _kABSourceExternalIdentifierProperty
__ AddressBookLegacy: _kABSourceExternalModificationTagProperty
__ AddressBookLegacy: _kABSourceExternalSyncTagProperty
__ AddressBookLegacy: _kABSourceInternalUUIDProperty
__ AddressBookLegacy: _kABSourceLastSyncDateProperty
__ AddressBookLegacy: _kABSourceMeIdentifierProperty
__ AddressBookLegacy: _kABSourceNameProperty
__ AddressBookLegacy: _kABSourceSyncDataProperty
__ AddressBookLegacy: _kABSourceTypeProperty
__ AddressBookLegacy: _kABWorkLabel
__ AppSupport: _CFPhoneNumberCopyISOCountryCode
__ AppSupport: _CFPhoneNumberCreate
__ AppSupport: _CFPhoneNumberCreateString
__ AppSupport: _CPRecordCopyChangedProperties
__ AppSupport: _INIT_DECOMPOSED_PHONE_NUMBER
__ AppSupport: _PNCopyBestGuessNormalizedNumberForCountry
__ AppSupport: _PNCreateFormattedStringWithCountry
__ AppSupport: _PNDecomposeForCountry
__ AppSupport: __PNCopyFullyQualifiedNumberForCountry
__ AppSupport: __PNCopyIndexStringsForAddressBookSearch
__ AppSupport: __PNCopyInternationalCodeForCountry
__ AppSupport: _decomposedPhoneNumbersEqual
__ CellularPlanManager: _CTCellularPlanDanglingListDidChangeNotification
__ CellularPlanManager: _OBJC_CLASS_$_CTCellularPlanManager
__ ClassKit: _OBJC_CLASS_$_CLSDataStore
__ ClassKit: _OBJC_CLASS_$_CLSPerson
__ ClassKit: _OBJC_CLASS_$_CLSSearchSpecification
__ ContactsFoundation: _CNAbstractMethodException
__ ContactsFoundation: _CNAggregateComparator
__ ContactsFoundation: _CNCacheMissPolicyNewMutableArray
__ ContactsFoundation: _CNContactsFoundationErrorDomain
__ ContactsFoundation: _CNEitherIsLeft
__ ContactsFoundation: _CNEitherIsRight
__ ContactsFoundation: _CNEitherLeft
__ ContactsFoundation: _CNEmailAddressExpandAliasedDomains
__ ContactsFoundation: _CNEmptyStringIfNil
__ ContactsFoundation: _CNFullMethodName
__ ContactsFoundation: _CNIdentity
__ ContactsFoundation: _CNInitializerUnavailableException
__ ContactsFoundation: _CNIsArrayEmpty
__ ContactsFoundation: _CNIsChineseJapaneseKoreanString
__ ContactsFoundation: _CNIsDataEmpty
__ ContactsFoundation: _CNIsDictionaryEmpty
__ ContactsFoundation: _CNIsNotNull
__ ContactsFoundation: _CNIsNull
__ ContactsFoundation: _CNIsStringEmpty
__ ContactsFoundation: _CNIsStringNonempty
__ ContactsFoundation: _CNNameDelimiterForString
__ ContactsFoundation: _CNNilToNull
__ ContactsFoundation: _CNNullToNil
__ ContactsFoundation: _CNPairFirst
__ ContactsFoundation: _CNResultWithAutoreleasePool
__ ContactsFoundation: _CNSocialProfileEquivalentValues
__ ContactsFoundation: _CNStringContainsKoreanCharacters
__ ContactsFoundation: _CNUnimplementedMethodException
__ ContactsFoundation: _OBJC_CLASS_$_CNApplicationProxy
__ ContactsFoundation: _OBJC_CLASS_$_CNArchiver
__ ContactsFoundation: _OBJC_CLASS_$_CNCache
__ ContactsFoundation: _OBJC_CLASS_$_CNCancelationToken
__ ContactsFoundation: _OBJC_CLASS_$_CNCoalescingTimer
__ ContactsFoundation: _OBJC_CLASS_$_CNCoreDelegateInfo
__ ContactsFoundation: _OBJC_CLASS_$_CNDate
__ ContactsFoundation: _OBJC_CLASS_$_CNDescriptionBuilder
__ ContactsFoundation: _OBJC_CLASS_$_CNDeviceFirstUnlock
__ ContactsFoundation: _OBJC_CLASS_$_CNEither
__ ContactsFoundation: _OBJC_CLASS_$_CNEntitlementVerifier
__ ContactsFoundation: _OBJC_CLASS_$_CNEqualsBuilder
__ ContactsFoundation: _OBJC_CLASS_$_CNFAccessAuthorization
__ ContactsFoundation: _OBJC_CLASS_$_CNFAuditToken
__ ContactsFoundation: _OBJC_CLASS_$_CNFoundationError
__ ContactsFoundation: _OBJC_CLASS_$_CNFoundationSocialProfile
__ ContactsFoundation: _OBJC_CLASS_$_CNFoundationUserDefaults
__ ContactsFoundation: _OBJC_CLASS_$_CNFuture
__ ContactsFoundation: _OBJC_CLASS_$_CNHandleStringClassifier
__ ContactsFoundation: _OBJC_CLASS_$_CNHashBuilder
__ ContactsFoundation: _OBJC_CLASS_$_CNLocalization
__ ContactsFoundation: _OBJC_CLASS_$_CNLogging
__ ContactsFoundation: _OBJC_CLASS_$_CNManagedAccountsCache
__ ContactsFoundation: _OBJC_CLASS_$_CNMultiDictionary
__ ContactsFoundation: _OBJC_CLASS_$_CNMutableMultiDictionary
__ ContactsFoundation: _OBJC_CLASS_$_CNNameComponentsStringTokenizer
__ ContactsFoundation: _OBJC_CLASS_$_CNObservable
__ ContactsFoundation: _OBJC_CLASS_$_CNObserver
__ ContactsFoundation: _OBJC_CLASS_$_CNPair
__ ContactsFoundation: _OBJC_CLASS_$_CNPhoneNumberHelper
__ ContactsFoundation: _OBJC_CLASS_$_CNPostalAddressFormats
__ ContactsFoundation: _OBJC_CLASS_$_CNPromise
__ ContactsFoundation: _OBJC_CLASS_$_CNQualityOfServiceSchedulerDecorator
__ ContactsFoundation: _OBJC_CLASS_$_CNQueue
__ ContactsFoundation: _OBJC_CLASS_$_CNResult
__ ContactsFoundation: _OBJC_CLASS_$_CNScheduler
__ ContactsFoundation: _OBJC_CLASS_$_CNSchedulerProvider
__ ContactsFoundation: _OBJC_CLASS_$_CNSimulatedCrashReporter
__ ContactsFoundation: _OBJC_CLASS_$_CNStack
__ ContactsFoundation: _OBJC_CLASS_$_CNUserDefaults
__ ContactsFoundation: _OBJC_METACLASS_$_CNObservable
__ ContactsFoundation: _cn_objectResultWithObjectLock
__ CoreData: _NSSQLiteStoreType
__ CoreData: _OBJC_CLASS_$_NSBatchDeleteRequest
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSPersistentContainer
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayCreateMutableCopy
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDateCompare
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateCopy
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFErrorCopyUserInfo
__ CoreFoundation: _CFErrorGetCode
__ CoreFoundation: _CFErrorGetDomain
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetDistributedCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringTokenizerCreate
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSEnumerator
__ CoreFoundation: __CFExecutableLinkedOnOrAfter
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFNull
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFPreferencesAnyUser
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextSetFillColor
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectStandardize
__ CoreGraphics: _CGRectZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _kUTTypeJPEG
__ CoreServices: _kUTTypePNG
__ CoreServices: _kUTTypeVCard
__ CoreSuggestions: _OBJC_CLASS_$_SGContactMatch
__ CoreSuggestions: _OBJC_CLASS_$_SGRecordId
__ CoreSuggestions: _OBJC_CLASS_$_SGSuggestionsService
__ Foundation: _NSAverageKeyValueOperator
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSCountKeyValueOperator
__ Foundation: _NSDistinctUnionOfArraysKeyValueOperator
__ Foundation: _NSDistinctUnionOfObjectsKeyValueOperator
__ Foundation: _NSDistinctUnionOfSetsKeyValueOperator
__ Foundation: _NSEndMapTableEnumeration
__ Foundation: _NSEnumerateMapTable
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSGlobalDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSMapGet
__ Foundation: _NSMapInsert
__ Foundation: _NSMaximumKeyValueOperator
__ Foundation: _NSMinimumKeyValueOperator
__ Foundation: _NSNextMapEnumeratorPair
__ Foundation: _NSPersonNameComponentFamilyName
__ Foundation: _NSPersonNameComponentGivenName
__ Foundation: _NSPersonNameComponentMiddleName
__ Foundation: _NSPersonNameComponentNickname
__ Foundation: _NSPersonNameComponentPrefix
__ Foundation: _NSPersonNameComponentSuffix
__ Foundation: _NSRectFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromRect
__ Foundation: _NSStringFromSelector
__ Foundation: _NSSumKeyValueOperator
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSTextCheckingCityKey
__ Foundation: _NSTextCheckingCountryKey
__ Foundation: _NSTextCheckingStateKey
__ Foundation: _NSTextCheckingStreetKey
__ Foundation: _NSTextCheckingZIPKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUnionOfArraysKeyValueOperator
__ Foundation: _NSUnionOfObjectsKeyValueOperator
__ Foundation: _NSUnionOfSetsKeyValueOperator
__ Foundation: _NSZeroRect
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDataDetector
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFormatter
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSFormatter
__ Foundation: _OBJC_METACLASS_$_NSPredicate
__ Foundation: __NSPersonNameComponentPhoneticFamilyNameKeyPath
__ Foundation: __NSPersonNameComponentPhoneticGivenNameKeyPath
__ Foundation: __NSPersonNameComponentPhoneticMiddleNameKeyPath
__ ImageIO: _CGImageCreateByScaling
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateThumbnailAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _CGImageSourceGetType
__ ImageIO: _kCGImageDestinationLossyCompressionQuality
__ ImageIO: _kCGImagePropertyDPIHeight
__ ImageIO: _kCGImagePropertyDPIWidth
__ ImageIO: _kCGImagePropertyOrientation
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImageSourceCreateThumbnailFromImageAlways
__ ImageIO: _kCGImageSourceCreateThumbnailWithTransform
__ TCC: _TCCAccessCheckAuditToken
__ TCC: _TCCAccessPreflight
__ TCC: _TCCAccessRequest
__ TCC: _TCCAccessRestricted
__ TCC: _kTCCServiceAddressBook
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logger_create
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logger_destroy
__ libCTGreenTeaLogger.dylib: _getCTGreenTeaOsLogHandle
__ libMobileGestalt.dylib: _MGCopyAnswerWithError
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_apply
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClassName
__ libobjc.A.dylib: _object_setClass
__ vCard: _CNVCardABPersonFlagsProperty
__ vCard: _CNVCardActivityAlertCallKey
__ vCard: _CNVCardActivityAlertIgnoreMuteKey
__ vCard: _CNVCardActivityAlertSoundKey
__ vCard: _CNVCardActivityAlertTextKey
__ vCard: _CNVCardActivityAlertVibrationKey
__ vCard: _CNVCardAddressCityKey
__ vCard: _CNVCardAddressCountryCodeKey
__ vCard: _CNVCardAddressCountryKey
__ vCard: _CNVCardAddressPostalCodeKey
__ vCard: _CNVCardAddressStateKey
__ vCard: _CNVCardAddressStreetKey
__ vCard: _CNVCardAddressSubAdministrativeAreaKey
__ vCard: _CNVCardAddressSubLocalityKey
__ vCard: _CNVCardAlternateBirthdayComponentsKey
__ vCard: _CNVCardBirthdayComponentsKey
__ vCard: _CNVCardDepartmentNameKey
__ vCard: _CNVCardEmailKey
__ vCard: _CNVCardFirstNameKey
__ vCard: _CNVCardGuardianWhitelistedKey
__ vCard: _CNVCardInstantMessageKey
__ vCard: _CNVCardInstantMessageServiceAIM
__ vCard: _CNVCardInstantMessageServiceFacebook
__ vCard: _CNVCardInstantMessageServiceGaduGadu
__ vCard: _CNVCardInstantMessageServiceGoogleTalk
__ vCard: _CNVCardInstantMessageServiceICQ
__ vCard: _CNVCardInstantMessageServiceJabber
__ vCard: _CNVCardInstantMessageServiceMSN
__ vCard: _CNVCardInstantMessageServiceQQ
__ vCard: _CNVCardInstantMessageServiceSkype
__ vCard: _CNVCardInstantMessageServiceYahoo
__ vCard: _CNVCardJobTitleKey
__ vCard: _CNVCardLastNameKey
__ vCard: _CNVCardMaidenNameKey
__ vCard: _CNVCardMiddleNameKey
__ vCard: _CNVCardNameSuffixKey
__ vCard: _CNVCardNameTitleKey
__ vCard: _CNVCardNicknameKey
__ vCard: _CNVCardNoteKey
__ vCard: _CNVCardOrganizationNameKey
__ vCard: _CNVCardOtherDateComponentsKey
__ vCard: _CNVCardPhoneNumberKey
__ vCard: _CNVCardPhoneticFirstNameKey
__ vCard: _CNVCardPhoneticLastNameKey
__ vCard: _CNVCardPhoneticMiddleNameKey
__ vCard: _CNVCardPostalAddressKey
__ vCard: _CNVCardPreferredApplePersonaIDKey
__ vCard: _CNVCardPreferredLikenessSourceKey
__ vCard: _CNVCardPronunciationFirstNameKey
__ vCard: _CNVCardPronunciationLastNameKey
__ vCard: _CNVCardPropertyNameEmailAddress
__ vCard: _CNVCardPropertyNameFormattedName
__ vCard: _CNVCardPropertyNameNameComponents
__ vCard: _CNVCardPropertyNameOrganizationName
__ vCard: _CNVCardPropertyNamePhoto
__ vCard: _CNVCardPropertyNameTelephoneNumber
__ vCard: _CNVCardPropertyNameXABShowAs
__ vCard: _CNVCardRelatedNamesKey
__ vCard: _CNVCardSocialProfileKey
__ vCard: _CNVCardSocialProfileServiceFacebook
__ vCard: _CNVCardSocialProfileServiceFlickr
__ vCard: _CNVCardSocialProfileServiceLinkedIn
__ vCard: _CNVCardSocialProfileServiceMySpace
__ vCard: _CNVCardSocialProfileServiceSinaWeibo
__ vCard: _CNVCardSocialProfileServiceTwitter
__ vCard: _CNVCardURLsKey
__ vCard: _OBJC_CLASS_$_CNMECARDParser
__ vCard: _OBJC_CLASS_$_CNVCardParser
__ vCard: _OBJC_CLASS_$_CNVCardPropertyItem
__ vCard: _OBJC_CLASS_$_CNVCardReadingOptions
__ vCard: _OBJC_CLASS_$_CNVCardWriting
__ vCard: _OBJC_CLASS_$_CNVCardWritingOptions
CNIndexRequestHandler : NSObject /usr/lib/libSystem.B.dylib
 @property  CNContactStore *contactStore
 @property  <CNCSSearchableIndex> *index
 @property  <CNSpotlightIndexingLogger> *logger
 @property  unsigned long batchSize
 @property  BOOL isFullSyncNeeded
 @property  CNIndexClientState *clientState

  // instance methods
  -[CNIndexRequestHandler .cxx_destruct]
  -[CNIndexRequestHandler index]
  -[CNIndexRequestHandler logger]
  -[CNIndexRequestHandler batchSize]
  -[CNIndexRequestHandler beginIndexBatch]
  -[CNIndexRequestHandler setIndex:]
  -[CNIndexRequestHandler initWithContactStore:]
  -[CNIndexRequestHandler contactStore]
  -[CNIndexRequestHandler setContactStore:]
  -[CNIndexRequestHandler initWithContactStore:searchableIndex:logger:batchSize:]
  -[CNIndexRequestHandler _performIndexingWithForcedReindexing:]
  -[CNIndexRequestHandler searchableItemsForContactIdentifiers:]
  -[CNIndexRequestHandler indexSearchableItems:]
  -[CNIndexRequestHandler registerForChangeHistory]
  -[CNIndexRequestHandler fetchChangeHistory]
  -[CNIndexRequestHandler setIsFullSyncNeeded:]
  -[CNIndexRequestHandler setClientState:]
  -[CNIndexRequestHandler fetchAndCheckLastClientState]
  -[CNIndexRequestHandler isFullSyncNeeded]
  -[CNIndexRequestHandler prepareForFullSync:]
  -[CNIndexRequestHandler clientState]
  -[CNIndexRequestHandler fullSyncContacts]
  -[CNIndexRequestHandler deltaSyncContacts:]
  -[CNIndexRequestHandler consumeChangeHistory:]
  -[CNIndexRequestHandler fetchChangeHistoryWithError:]
  -[CNIndexRequestHandler fetchLastClientState]
  -[CNIndexRequestHandler deleteAllSearchableItems]
  -[CNIndexRequestHandler batchIndexUpdatingItems:fullSyncOffset:fullSyncDone:]
  -[CNIndexRequestHandler batchIndexUpdatingItems:deletingItemsWithIdentifiers:]
  -[CNIndexRequestHandler deleteSearchableItemsWithIdentifiers:]
  -[CNIndexRequestHandler endIndexBatchWithClientState]
  -[CNIndexRequestHandler _batchIndexUpdatingItems:deletingItemsWithIdentifiers:fullSyncOffset:fullSyncDone:]
  -[CNIndexRequestHandler fetchSearchableItemsIndexedByContactIdentifierWithError:]
  -[CNIndexRequestHandler _futureForFetchLastClientState]
  -[CNIndexRequestHandler _futureForEndIndexBatchWithClientState:]
  -[CNIndexRequestHandler _futureForIndexSearchableItems:]
  -[CNIndexRequestHandler _futureForDeleteSearchableItemsWithIdentifiers:]
  -[CNIndexRequestHandler _futureForDeleteAllSearchableItems]
  -[CNIndexRequestHandler performIndexing]
  -[CNIndexRequestHandler reindexAllSearchableItems]
  -[CNIndexRequestHandler reindexSearchableItemsWithIdentifiers:]
  -[CNIndexRequestHandler verifyIndexLoggingSummary:error:]


CNiOSABInstantMessageAddressContactPredicate : CNPredicate <CNiOSContactPredicate>
 @property  CNInstantMessageAddress *imAddress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABInstantMessageAddressContactPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABInstantMessageAddressContactPredicate isEqual:]
  -[CNiOSABInstantMessageAddressContactPredicate encodeWithCoder:]
  -[CNiOSABInstantMessageAddressContactPredicate initWithCoder:]
  -[CNiOSABInstantMessageAddressContactPredicate .cxx_destruct]
  -[CNiOSABInstantMessageAddressContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:nserror:]
  -[CNiOSABInstantMessageAddressContactPredicate imAddress]
  -[CNiOSABInstantMessageAddressContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABInstantMessageAddressContactPredicate cn_supportsNativeSorting]
  -[CNiOSABInstantMessageAddressContactPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABInstantMessageAddressContactPredicate cn_supportsEncodedFetching]
  -[CNiOSABInstantMessageAddressContactPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABInstantMessageAddressContactPredicate initWithInstantMessageAddress:]
  -[CNiOSABInstantMessageAddressContactPredicate setImAddress:]


CNChangeHistoryGroupChange : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  long long changeType
 @property  CNGroup *group
 @property  CNChangeHistoryAnchor *changeAnchor
 @property  NSNumber *changeID
 @property  NSString *externalID
 @property  NSString *groupIdentifier

  // class methods
  +[CNChangeHistoryGroupChange supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryGroupChange encodeWithCoder:]
  -[CNChangeHistoryGroupChange initWithCoder:]
  -[CNChangeHistoryGroupChange .cxx_destruct]
  -[CNChangeHistoryGroupChange setGroup:]
  -[CNChangeHistoryGroupChange changeType]
  -[CNChangeHistoryGroupChange groupIdentifier]
  -[CNChangeHistoryGroupChange group]
  -[CNChangeHistoryGroupChange changeID]
  -[CNChangeHistoryGroupChange setChangeType:]
  -[CNChangeHistoryGroupChange changeAnchor]
  -[CNChangeHistoryGroupChange externalID]
  -[CNChangeHistoryGroupChange initWithIdentifier:changeType:changeAnchor:changeID:externalID:]
  -[CNChangeHistoryGroupChange setChangeAnchor:]
  -[CNChangeHistoryGroupChange setChangeID:]
  -[CNChangeHistoryGroupChange setExternalID:]


CNiOSABFaultFulfillmentPredicate : CNPredicate <CNiOSContactPredicate>
 @property  int legacyIdentifier
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABFaultFulfillmentPredicate supportsSecureCoding]
  +[CNiOSABFaultFulfillmentPredicate os_log]

  // instance methods
  -[CNiOSABFaultFulfillmentPredicate isEqual:]
  -[CNiOSABFaultFulfillmentPredicate encodeWithCoder:]
  -[CNiOSABFaultFulfillmentPredicate initWithCoder:]
  -[CNiOSABFaultFulfillmentPredicate .cxx_destruct]
  -[CNiOSABFaultFulfillmentPredicate identifier]
  -[CNiOSABFaultFulfillmentPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:nserror:]
  -[CNiOSABFaultFulfillmentPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABFaultFulfillmentPredicate cn_supportsNativeSorting]
  -[CNiOSABFaultFulfillmentPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABFaultFulfillmentPredicate cn_supportsEncodedFetching]
  -[CNiOSABFaultFulfillmentPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABFaultFulfillmentPredicate legacyIdentifier]
  -[CNiOSABFaultFulfillmentPredicate initWithLegacyIdentifier:identifier:]


CNContactSuggestionMatch : NSObject /usr/lib/libSystem.B.dylib
 @property  SGContactMatch *contactMatch
 @property  SGContact *contact
 @property  NSString *mainStoreLinkedIdentifier

  // class methods
  +[CNContactSuggestionMatch suggestionFromContactMatch:]
  +[CNContactSuggestionMatch fetchLinkedIdentifiersForContactSuggestionMatches:fromSuggestionService:]

  // instance methods
  -[CNContactSuggestionMatch .cxx_destruct]
  -[CNContactSuggestionMatch contact]
  -[CNContactSuggestionMatch setContact:]
  -[CNContactSuggestionMatch setContactMatch:]
  -[CNContactSuggestionMatch setMainStoreLinkedIdentifier:]
  -[CNContactSuggestionMatch contactMatch]
  -[CNContactSuggestionMatch mainStoreLinkedIdentifier]


CNiOSABContactBuffersDecoder : NSObject /usr/lib/libSystem.B.dylib
 @property  CNContactBufferDecoder *decoder
 @property  NSMutableArray *contactsWaitingForUnification
 @property  NSMutableDictionary *matchInfosWaitingForUnification
 @property  CNContactFetchRequest *fetchRequest

  // instance methods
  -[CNiOSABContactBuffersDecoder init]
  -[CNiOSABContactBuffersDecoder .cxx_destruct]
  -[CNiOSABContactBuffersDecoder fetchRequest]
  -[CNiOSABContactBuffersDecoder initWithFetchRequest:]
  -[CNiOSABContactBuffersDecoder decoder]
  -[CNiOSABContactBuffersDecoder unifyContacts:moreComing:]
  -[CNiOSABContactBuffersDecoder _addContactMatchInfoFromABMatchInfos:forContact:toDictionary:]
  -[CNiOSABContactBuffersDecoder _contactMatchInfosFromABMatchInfos:contacts:]
  -[CNiOSABContactBuffersDecoder matchInfosWaitingForUnification]
  -[CNiOSABContactBuffersDecoder contactsWaitingForUnification]
  -[CNiOSABContactBuffersDecoder contactsFromData:moreComing:error:]
  -[CNiOSABContactBuffersDecoder contactMatchInfosFromABMatchInfos:contacts:]


CNMultiValueDiff : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *updates

  // class methods
  +[CNMultiValueDiff diffMultiValue:toMultiValue:]
  +[CNMultiValueDiff emptyDiff]

  // instance methods
  -[CNMultiValueDiff isEmpty]
  -[CNMultiValueDiff .cxx_destruct]
  -[CNMultiValueDiff updates]
  -[CNMultiValueDiff initWithUpdates:]
  -[CNMultiValueDiff multiValueByApplyToMultiValue:withIdentifierMap:]
  -[CNMultiValueDiff applyToABPerson:propertyDescription:logger:error:]


CNGeminiInteraction : NSObject /usr/lib/libSystem.B.dylib
 @property  long long transport
 @property  long long directionality
 @property  NSString *handle
 @property  NSString *contactIdentifier

  // instance methods
  -[CNGeminiInteraction .cxx_destruct]
  -[CNGeminiInteraction handle]
  -[CNGeminiInteraction contactIdentifier]
  -[CNGeminiInteraction transport]
  -[CNGeminiInteraction initWithTransport:directionality:destinationHandle:destinationContactIdentifier:]
  -[CNGeminiInteraction initWithTransport:directionality:destinationHandle:]
  -[CNGeminiInteraction directionality]


CNContainerPropertyDescription : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *key
 @property  BOOL isWritable
 @property  Class valueClass

  // instance methods
  -[CNContainerPropertyDescription key]
  -[CNContainerPropertyDescription valueClass]
  -[CNContainerPropertyDescription nilValue]
  -[CNContainerPropertyDescription isWritable]
  -[CNContainerPropertyDescription isValidValue:error:]
  -[CNContainerPropertyDescription CNValueForContainer:]
  -[CNContainerPropertyDescription setCNValue:onContainer:]
  -[CNContainerPropertyDescription isValue:equalToEmptyEquivalentOrValue:]
  -[CNContainerPropertyDescription abPropertyID]
  -[CNContainerPropertyDescription ABValueFromCNValue:]
  -[CNContainerPropertyDescription CNValueFromABValue:]
  -[CNContainerPropertyDescription isConvertibleABValue:]
  -[CNContainerPropertyDescription ABValueForABSource:]
  -[CNContainerPropertyDescription setABValue:onABSource:error:]


CNContainerIdentifierDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerIdentifierDescription key]
  -[CNContainerIdentifierDescription valueClass]
  -[CNContainerIdentifierDescription CNValueForContainer:]
  -[CNContainerIdentifierDescription setCNValue:onContainer:]
  -[CNContainerIdentifierDescription isNonnull]
  -[CNContainerIdentifierDescription abPropertyID]
  -[CNContainerIdentifierDescription ABValueFromCNValue:]
  -[CNContainerIdentifierDescription CNValueFromABValue:]


CNContainerNameDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerNameDescription key]
  -[CNContainerNameDescription isWritable]
  -[CNContainerNameDescription CNValueForContainer:]
  -[CNContainerNameDescription setCNValue:onContainer:]
  -[CNContainerNameDescription isNonnull]
  -[CNContainerNameDescription abPropertyID]


CNContainerTypeDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerTypeDescription key]
  -[CNContainerTypeDescription valueClass]
  -[CNContainerTypeDescription isWritable]
  -[CNContainerTypeDescription isValidValue:error:]
  -[CNContainerTypeDescription CNValueForContainer:]
  -[CNContainerTypeDescription setCNValue:onContainer:]
  -[CNContainerTypeDescription abPropertyID]
  -[CNContainerTypeDescription ABValueFromCNValue:]
  -[CNContainerTypeDescription CNValueFromABValue:]
  -[CNContainerTypeDescription isConvertibleABValue:]
  -[CNContainerTypeDescription setABValue:onABSource:error:]


CNContainerIOSLegacyIdentifierDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerIOSLegacyIdentifierDescription key]
  -[CNContainerIOSLegacyIdentifierDescription valueClass]
  -[CNContainerIOSLegacyIdentifierDescription isWritable]
  -[CNContainerIOSLegacyIdentifierDescription CNValueForContainer:]
  -[CNContainerIOSLegacyIdentifierDescription setCNValue:onContainer:]
  -[CNContainerIOSLegacyIdentifierDescription ABValueForABSource:]
  -[CNContainerIOSLegacyIdentifierDescription setABValue:onABSource:error:]


CNContainerAccountIdentifierDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerAccountIdentifierDescription key]
  -[CNContainerAccountIdentifierDescription valueClass]
  -[CNContainerAccountIdentifierDescription isWritable]
  -[CNContainerAccountIdentifierDescription CNValueForContainer:]
  -[CNContainerAccountIdentifierDescription setCNValue:onContainer:]
  -[CNContainerAccountIdentifierDescription abPropertyID]
  -[CNContainerAccountIdentifierDescription ABValueFromCNValue:]
  -[CNContainerAccountIdentifierDescription CNValueFromABValue:]
  -[CNContainerAccountIdentifierDescription setABValue:onABSource:error:]


CNContainerEnabledDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerEnabledDescription key]
  -[CNContainerEnabledDescription valueClass]
  -[CNContainerEnabledDescription isWritable]
  -[CNContainerEnabledDescription CNValueForContainer:]
  -[CNContainerEnabledDescription setCNValue:onContainer:]
  -[CNContainerEnabledDescription abPropertyID]


CNContainerExternalIdentifierDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerExternalIdentifierDescription key]
  -[CNContainerExternalIdentifierDescription valueClass]
  -[CNContainerExternalIdentifierDescription isWritable]
  -[CNContainerExternalIdentifierDescription CNValueForContainer:]
  -[CNContainerExternalIdentifierDescription setCNValue:onContainer:]
  -[CNContainerExternalIdentifierDescription abPropertyID]


CNContainerExternalModificationTagDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerExternalModificationTagDescription key]
  -[CNContainerExternalModificationTagDescription valueClass]
  -[CNContainerExternalModificationTagDescription isWritable]
  -[CNContainerExternalModificationTagDescription CNValueForContainer:]
  -[CNContainerExternalModificationTagDescription setCNValue:onContainer:]
  -[CNContainerExternalModificationTagDescription abPropertyID]


CNContainerExternalSyncTagDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerExternalSyncTagDescription key]
  -[CNContainerExternalSyncTagDescription valueClass]
  -[CNContainerExternalSyncTagDescription isWritable]
  -[CNContainerExternalSyncTagDescription CNValueForContainer:]
  -[CNContainerExternalSyncTagDescription setCNValue:onContainer:]
  -[CNContainerExternalSyncTagDescription abPropertyID]


CNContainerExternalSyncDataDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerExternalSyncDataDescription key]
  -[CNContainerExternalSyncDataDescription valueClass]
  -[CNContainerExternalSyncDataDescription isWritable]
  -[CNContainerExternalSyncDataDescription CNValueForContainer:]
  -[CNContainerExternalSyncDataDescription setCNValue:onContainer:]
  -[CNContainerExternalSyncDataDescription abPropertyID]


CNContainerConstraintsPathDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerConstraintsPathDescription key]
  -[CNContainerConstraintsPathDescription valueClass]
  -[CNContainerConstraintsPathDescription isWritable]
  -[CNContainerConstraintsPathDescription CNValueForContainer:]
  -[CNContainerConstraintsPathDescription setCNValue:onContainer:]
  -[CNContainerConstraintsPathDescription abPropertyID]


CNContainerMeIdentifierDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerMeIdentifierDescription key]
  -[CNContainerMeIdentifierDescription valueClass]
  -[CNContainerMeIdentifierDescription isWritable]
  -[CNContainerMeIdentifierDescription CNValueForContainer:]
  -[CNContainerMeIdentifierDescription setCNValue:onContainer:]
  -[CNContainerMeIdentifierDescription abPropertyID]
  -[CNContainerMeIdentifierDescription ABValueFromCNValue:]
  -[CNContainerMeIdentifierDescription CNValueFromABValue:]


CNContainerRestrictionsDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerRestrictionsDescription key]
  -[CNContainerRestrictionsDescription valueClass]
  -[CNContainerRestrictionsDescription isWritable]
  -[CNContainerRestrictionsDescription isValidValue:error:]
  -[CNContainerRestrictionsDescription CNValueForContainer:]
  -[CNContainerRestrictionsDescription setCNValue:onContainer:]
  -[CNContainerRestrictionsDescription abPropertyID]
  -[CNContainerRestrictionsDescription ABValueFromCNValue:]
  -[CNContainerRestrictionsDescription CNValueFromABValue:]
  -[CNContainerRestrictionsDescription isConvertibleABValue:]
  -[CNContainerRestrictionsDescription setABValue:onABSource:error:]


CNContainerGuardianRestrictedDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerGuardianRestrictedDescription key]
  -[CNContainerGuardianRestrictedDescription valueClass]
  -[CNContainerGuardianRestrictedDescription isWritable]
  -[CNContainerGuardianRestrictedDescription CNValueForContainer:]
  -[CNContainerGuardianRestrictedDescription setCNValue:onContainer:]
  -[CNContainerGuardianRestrictedDescription abPropertyID]
  -[CNContainerGuardianRestrictedDescription ABValueFromCNValue:]
  -[CNContainerGuardianRestrictedDescription CNValueFromABValue:]
  -[CNContainerGuardianRestrictedDescription setABValue:onABSource:error:]


CNContainerGuardianStateDirtyDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerGuardianStateDirtyDescription key]
  -[CNContainerGuardianStateDirtyDescription valueClass]
  -[CNContainerGuardianStateDirtyDescription isWritable]
  -[CNContainerGuardianStateDirtyDescription CNValueForContainer:]
  -[CNContainerGuardianStateDirtyDescription setCNValue:onContainer:]
  -[CNContainerGuardianStateDirtyDescription abPropertyID]
  -[CNContainerGuardianStateDirtyDescription ABValueFromCNValue:]
  -[CNContainerGuardianStateDirtyDescription CNValueFromABValue:]
  -[CNContainerGuardianStateDirtyDescription setABValue:onABSource:error:]


CNContainerLastSyncDateDescription : CNContainerPropertyDescription
  // instance methods
  -[CNContainerLastSyncDateDescription key]
  -[CNContainerLastSyncDateDescription valueClass]
  -[CNContainerLastSyncDateDescription isWritable]
  -[CNContainerLastSyncDateDescription CNValueForContainer:]
  -[CNContainerLastSyncDateDescription setCNValue:onContainer:]
  -[CNContainerLastSyncDateDescription abPropertyID]
  -[CNContainerLastSyncDateDescription ABValueFromCNValue:]
  -[CNContainerLastSyncDateDescription CNValueFromABValue:]


CNAggregateContactStore : CNContactStore
 @property  NSArray *contactStores
 @property  CNContactStore *mainStore

  // instance methods
  -[CNAggregateContactStore .cxx_destruct]
  -[CNAggregateContactStore unifiedContactsMatchingPredicate:keysToFetch:error:]
  -[CNAggregateContactStore registerChangeHistoryClientIdentifier:error:]
  -[CNAggregateContactStore changeHistoryWithFetchRequest:error:]
  -[CNAggregateContactStore executeChangeHistoryClearRequest:error:]
  -[CNAggregateContactStore setContactStores:]
  -[CNAggregateContactStore contactStores]
  -[CNAggregateContactStore hasMultipleGroupsOrAccounts]
  -[CNAggregateContactStore mainStore]
  -[CNAggregateContactStore requestAccessForEntityType:]
  -[CNAggregateContactStore _enumerateStoresUsingBlock:]
  -[CNAggregateContactStore resetSortDataIfNeededWithError:]
  -[CNAggregateContactStore sectionListOffsetsForSortOrder:error:]
  -[CNAggregateContactStore unifiedContactCountWithError:]
  -[CNAggregateContactStore contactCountForFetchRequest:error:]
  -[CNAggregateContactStore didFetchContacts:forPredicate:fromStore:unifiedFetch:]
  -[CNAggregateContactStore _allStoreResultsWithError:withBlock:]
  -[CNAggregateContactStore _unifiedContactsFromContacts:unifyContactsFromMainStore:keysToFetch:error:]
  -[CNAggregateContactStore meContactIdentifiers:]
  -[CNAggregateContactStore enumerateContactsAndMatchInfoWithFetchRequest:error:usingBlock:]
  -[CNAggregateContactStore groupsMatchingPredicate:error:]
  -[CNAggregateContactStore groupWithIdentifier:error:]
  -[CNAggregateContactStore membersOfGroupWithIdentifier:keysToFetch:error:]
  -[CNAggregateContactStore subgroupsOfGroupWithIdentifier:error:]
  -[CNAggregateContactStore containersMatchingPredicate:error:]
  -[CNAggregateContactStore serverSearchContainersMatchingPredicate:error:]
  -[CNAggregateContactStore defaultContainerIdentifier]
  -[CNAggregateContactStore policyForContainerWithIdentifier:error:]
  -[CNAggregateContactStore usedLabelsForPropertyWithKey:error:]
  -[CNAggregateContactStore setMeContact:error:]
  -[CNAggregateContactStore setMeContact:forContainer:error:]
  -[CNAggregateContactStore accountsMatchingPredicate:error:]
  -[CNAggregateContactStore supportsSaveRequest:]
  -[CNAggregateContactStore executeSaveRequest:error:]
  -[CNAggregateContactStore executeFetchRequest:progressiveResults:completion:]
  -[CNAggregateContactStore enumeratorForContactFetchRequest:error:]
  -[CNAggregateContactStore enumeratorForChangeHistoryFetchRequest:error:]
  -[CNAggregateContactStore contactWithUserActivityUserInfo:keysToFetch:]
  -[CNAggregateContactStore userActivityUserInfoForContact:]
  -[CNAggregateContactStore unregisterChangeHistoryClientIdentifier:error:]
  -[CNAggregateContactStore clearChangeHistoryForClientIdentifier:toChangeAnchor:error:]
  -[CNAggregateContactStore initWithContactStores:]
  -[CNAggregateContactStore store:supportsSelector:]
  -[CNAggregateContactStore mainContactStore]
  -[CNAggregateContactStore _unifiedMeContactWithKeysToFetch:error:]
  -[CNAggregateContactStore enumerateNonUnifiedContactsWithFetchRequest:error:usingBlock:]
  -[CNAggregateContactStore iOSMapper]
  -[CNAggregateContactStore originForSuggestion:error:]


CNDateComponentsEquivalence : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNDateComponentsEquivalence isComponent:equivalentToComponent:]
  +[CNDateComponentsEquivalence isCalendar:equivalentToCalendar:]
  +[CNDateComponentsEquivalence canUnifyComponents:withComponents:]


CNGeminiChannel : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *channelIdentifier
 @property  NSString *localizedLabel
 @property  NSString *localizedBadgeLabel
 @property  NSString *handle
 @property  TUSenderIdentity *senderIdentity
 @property  BOOL available

  // class methods
  +[CNGeminiChannel supportsSecureCoding]

  // instance methods
  -[CNGeminiChannel encodeWithCoder:]
  -[CNGeminiChannel initWithCoder:]
  -[CNGeminiChannel .cxx_destruct]
  -[CNGeminiChannel handle]
  -[CNGeminiChannel isAvailable]
  -[CNGeminiChannel initWithSenderIdentity:]
  -[CNGeminiChannel initWithDanglingPlanItem:]
  -[CNGeminiChannel initWithDisabledCellularPlanItem:]
  -[CNGeminiChannel initUnavailableChannelWithIdentifier:]
  -[CNGeminiChannel initInvalidChannel]
  -[CNGeminiChannel channelIdentifier]
  -[CNGeminiChannel localizedLabel]
  -[CNGeminiChannel localizedBadgeLabel]
  -[CNGeminiChannel senderIdentity]


CNGeminiResult : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  CNGeminiChannel *channel
 @property  long long usage
 @property  NSArray *availableChannels

  // class methods
  +[CNGeminiResult supportsSecureCoding]

  // instance methods
  -[CNGeminiResult init]
  -[CNGeminiResult encodeWithCoder:]
  -[CNGeminiResult initWithCoder:]
  -[CNGeminiResult .cxx_destruct]
  -[CNGeminiResult usage]
  -[CNGeminiResult channel]
  -[CNGeminiResult initWithChannel:usage:availableChannels:]
  -[CNGeminiResult availableChannels]


CNGeminiManager : NSObject /usr/lib/libSystem.B.dylib <CoreTelephonyClientDelegate, TUCallProviderManagerDelegate>
 @property  CNContactsEnvironment *environment
 @property  CoreTelephonyClient *coreTelephonyClient
 @property  TUCallProviderManager *callProviderManager
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMapTable *delegateToQueue
 @property  unsigned long dataSourceExclusions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNGeminiManager deviceSupportsGemini]
  +[CNGeminiManager descriptorForRequiredKeys]
  +[CNGeminiManager useFakeData]
  +[CNGeminiManager cellularPlanManager]
  +[CNGeminiManager channelStringFromSenderIdentity:]

  // instance methods
  -[CNGeminiManager init]
  -[CNGeminiManager setQueue:]
  -[CNGeminiManager queue]
  -[CNGeminiManager .cxx_destruct]
  -[CNGeminiManager environment]
  -[CNGeminiManager setEnvironment:]
  -[CNGeminiManager removeDelegate:]
  -[CNGeminiManager subscriptionInfoDidChange]
  -[CNGeminiManager addDelegate:queue:]
  -[CNGeminiManager coreTelephonyClient]
  -[CNGeminiManager setCoreTelephonyClient:]
  -[CNGeminiManager bestSenderIdentityForContact:error:]
  -[CNGeminiManager bestSenderIdentityForHandle:contactStore:error:]
  -[CNGeminiManager initWithEnvironment:coreTelephonyClient:callProviderManager:]
  -[CNGeminiManager danglingPlansDidUpdate:]
  -[CNGeminiManager fetchedSenderIdentitiesWithError:]
  -[CNGeminiManager defaultSenderIdentityForInteractionsFromSenderIdentities:]
  -[CNGeminiManager fakeSenderIdentities]
  -[CNGeminiManager callProviderManager]
  -[CNGeminiManager geminiResultForContact:substituteDefaultForDangling:error:]
  -[CNGeminiManager contactForPhoneString:contactStore:]
  -[CNGeminiManager remoteGeminiResultForContact:substituteDefaultForDangling:error:]
  -[CNGeminiManager channelsByIdentifierIncludingDanglingPlans:defaultChannel:availableChannels:]
  -[CNGeminiManager channelForPreferredChannelString:fromChannels:synthesizeMissingChannels:]
  -[CNGeminiManager bestChannelIdentifierForPhoneNumbers:fromChannelIdentifiers:defaultChannelIdentifier:]
  -[CNGeminiManager geminiResultForHandle:contactStore:substituteDefaultForDangling:error:]
  -[CNGeminiManager mostRecentChannelIdentifierForPhoneNumbers:fromChannelIdentifiers:]
  -[CNGeminiManager channelIdentifierForMostRecentCallFromPhoneNumbers:fromChannelIdentifiers:]
  -[CNGeminiManager dataSourceExclusions]
  -[CNGeminiManager channelIdentifierForMostRecentSMSFromPhoneNumbers:fromChannelIdentifiers:]
  -[CNGeminiManager channelForFavoritesEntry:includeDanglingChannels:error:]
  -[CNGeminiManager fetchedSubscriptionForSenderIdentity:]
  -[CNGeminiManager remapContactsHavingPreferredChannelIdentifier:toPreferredChannelIdentifier:contactStore:error:]
  -[CNGeminiManager remapRecentCallsHavingChannelIdentifier:toChannelIdentifier:error:]
  -[CNGeminiManager remapMessagesHavingChannelIdentifier:toChannelIdentifier:error:]
  -[CNGeminiManager isReferencedByContactsForSenderLabelIdentifier:store:]
  -[CNGeminiManager isReferencedByMessagesForSenderLabelIdentifier:]
  -[CNGeminiManager isReferencedByCallHistoryForSenderLabelIdentifier:]
  -[CNGeminiManager delegateToQueue]
  -[CNGeminiManager notifyDelegateOfChannelUpdates]
  -[CNGeminiManager fetchedSubscriptionsWithError:]
  -[CNGeminiManager providersChangedForProviderManager:]
  -[CNGeminiManager initWithCallProviderManager:]
  -[CNGeminiManager channelForContact:error:]
  -[CNGeminiManager remoteBestSenderIdentityForHandle:contactStore:error:]
  -[CNGeminiManager geminiResultForContact:error:]
  -[CNGeminiManager geminiResultForHandle:contactStore:error:]
  -[CNGeminiManager senderIdentityMatchingUUID:fromSenderIdentities:]
  -[CNGeminiManager senderIdentityMatchingPhoneNumber:fromSenderIdentities:]
  -[CNGeminiManager channelForFavoritesEntry:error:]
  -[CNGeminiManager bestSenderIdentityForFavoritesEntry:error:]
  -[CNGeminiManager badgeLabelForSenderIdentity:error:]
  -[CNGeminiManager remapChannelIdentifier:toIdentifier:error:]
  -[CNGeminiManager updateOutgoingLocalParticipantUUID:forCallsWithLocalParticipantUUID:]
  -[CNGeminiManager isReferencedSenderLabelIdentifier:]
  -[CNGeminiManager bestSubscriptionForContact:error:]
  -[CNGeminiManager bestSubscriptionForHandle:contactStore:error:]
  -[CNGeminiManager badgeLabelForSubscription:error:]
  -[CNGeminiManager setCallProviderManager:]
  -[CNGeminiManager setDelegateToQueue:]
  -[CNGeminiManager setDataSourceExclusions:]


CNTCC : NSObject /usr/lib/libSystem.B.dylib
 @property  <CNContactsLogger> *logger
 @property  long long simulateType
 @property  BOOL simulateAccessPrompt
 @property  BOOL simulateAccessPromptGranted
 @property  double simulateAccessPromptDelay

  // class methods
  +[CNTCC sharedInstance]

  // instance methods
  -[CNTCC init]
  -[CNTCC .cxx_destruct]
  -[CNTCC logger]
  -[CNTCC initWithEnvironment:]
  -[CNTCC _simulateQueue]
  -[CNTCC simulateAccessPrompt]
  -[CNTCC setSimulateAccessPrompt:]
  -[CNTCC simulateAccessPromptDelay]
  -[CNTCC simulateAccessPromptGranted]
  -[CNTCC setSimulateType:]
  -[CNTCC simulateType]
  -[CNTCC accessPreflight]
  -[CNTCC isAccessRestricted]
  -[CNTCC accessRequestWithCompletion:]
  -[CNTCC checkAuditToken:]
  -[CNTCC simulate:]
  -[CNTCC simulateIfAccessPromptDisplayedThenUserGrantedAccess:withDelay:]
  -[CNTCC setSimulateAccessPromptGranted:]
  -[CNTCC setSimulateAccessPromptDelay:]


CNPredicate : NSPredicate /System/Library/Frameworks/CoreData.framework/CoreData <CNDonatedContactsPredicate, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *mainStoreContactIdentifiers
 @property  BOOL augmentMainStoreResults

  // class methods
  +[CNPredicate os_log]
  +[CNPredicate _convertSuggestions:withSortOrder:mutableObjects:]

  // instance methods
  -[CNPredicate init]
  -[CNPredicate copyWithZone:]
  -[CNPredicate encodeWithCoder:]
  -[CNPredicate initWithCoder:]
  -[CNPredicate .cxx_destruct]
  -[CNPredicate predicateFormat]
  -[CNPredicate evaluateWithObject:substitutionVariables:]
  -[CNPredicate evaluateWithObject:]
  -[CNPredicate initWithPredicate:]
  -[CNPredicate shortDebugDescription]
  -[CNPredicate augmentMainStoreResults]
  -[CNPredicate mainStoreContactIdentifiers]
  -[CNPredicate _convertContactMatches:withService:intoSuggestions:]
  -[CNPredicate suggestedContactsWithSortOrder:keysToFetch:mutableObjects:service:error:]
  -[CNPredicate mainStoreDidFetchContacts:unifiedFetch:]
  -[CNPredicate setMainStoreContactIdentifiers:]
  -[CNPredicate cn_predicate]
  -[CNPredicate cn_resultTransformWithMatchInfos:]
  -[CNPredicate setAugmentMainStoreResults:]
  -[CNPredicate contactsFromDonationStore:]


CNClassKitServices : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNClassKitServices objectsMatching:fromStore:]


CNContactChangeRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSArray *contacts
 @property  NSArray *contactIdentifiers
 @property  long long kind
 @property  NSString *linkIdentifier

  // class methods
  +[CNContactChangeRequest supportsSecureCoding]
  +[CNContactChangeRequest contactChangeRequestWithKind:contacts:linkIdentifier:]

  // instance methods
  -[CNContactChangeRequest encodeWithCoder:]
  -[CNContactChangeRequest initWithCoder:]
  -[CNContactChangeRequest .cxx_destruct]
  -[CNContactChangeRequest kind]
  -[CNContactChangeRequest contacts]
  -[CNContactChangeRequest contactIdentifiers]
  -[CNContactChangeRequest linkIdentifier]
  -[CNContactChangeRequest initWithKind:contacts:linkIdentifier:]


CNLabeledValue : NSObject /usr/lib/libSystem.B.dylib <CNSuggested, NSCopying, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL suggested
 @property  SGRecordId *suggestionRecordId
 @property  NSString *suggestionFoundInBundleId
 @property  CNLabelValuePair *labelValuePair
 @property  NSString *storeIdentifier
 @property  NSSet *linkedIdentifiers
 @property  NSDictionary *storeInfo
 @property  int iOSLegacyIdentifier
 @property  NSString *identifier
 @property  NSString *label
 @property  <NSCopying><NSSecureCoding> *value

  // class methods
  +[CNLabeledValue supportsSecureCoding]
  +[CNLabeledValue labeledValueWithLabel:value:]
  +[CNLabeledValue identifierProvider]
  +[CNLabeledValue makeIdentifier]
  +[CNLabeledValue testMatchingIdentifier:]
  +[CNLabeledValue propertyDescriptionOwnersByLabel]
  +[CNLabeledValue localizedStringForLabel:]
  +[CNLabeledValue entryForIdentifier:inArray:]
  +[CNLabeledValue labelForIdentifier:inArray:]
  +[CNLabeledValue valueForIdentifier:inArray:]
  +[CNLabeledValue entryWithIdentifier:label:value:]
  +[CNLabeledValue isArrayOfEntries:equalToArrayOfEntriesIgnoringIdentifiers:]
  +[CNLabeledValue entriesByUnifyingEntryArrays:forProperty:]
  +[CNLabeledValue emptyEntries]
  +[CNLabeledValue allValuesInArray:]
  +[CNLabeledValue labeledValueWithIdentifier:inArray:]
  +[CNLabeledValue firstLabeledValueWithValue:inArray:]

  // instance methods
  -[CNLabeledValue init]
  -[CNLabeledValue isEqual:]
  -[CNLabeledValue copyWithZone:]
  -[CNLabeledValue encodeWithCoder:]
  -[CNLabeledValue initWithCoder:]
  -[CNLabeledValue .cxx_destruct]
  -[CNLabeledValue identifier]
  -[CNLabeledValue value]
  -[CNLabeledValue label]
  -[CNLabeledValue storeIdentifier]
  -[CNLabeledValue setStoreIdentifier:]
  -[CNLabeledValue iOSLegacyIdentifier]
  -[CNLabeledValue setIOSLegacyIdentifier:]
  -[CNLabeledValue storeInfo]
  -[CNLabeledValue initWithIdentifier:label:value:]
  -[CNLabeledValue isEqualIgnoringIdentifiers:]
  -[CNLabeledValue initWithLabel:value:]
  -[CNLabeledValue primitiveInitWithIdentifier:label:value:]
  -[CNLabeledValue linkedIdentifiers]
  -[CNLabeledValue setLinkedIdentifiers:]
  -[CNLabeledValue setStoreInfo:]
  -[CNLabeledValue labelValuePair]
  -[CNLabeledValue labeledValueBySettingLabel:]
  -[CNLabeledValue labeledValueBySettingValue:]
  -[CNLabeledValue labeledValueBySettingLabel:value:]
  -[CNLabeledValue addStoreInfo:]
  -[CNLabeledValue isEqualToLabeledValue:]
  -[CNLabeledValue isEqualToLabeledValue:includeIdentifiers:]
  -[CNLabeledValue isSuggested]
  -[CNLabeledValue suggestionRecordId]
  -[CNLabeledValue suggestionFoundInBundleId]
  -[CNLabeledValue valueOrigin]


CNChangeHistoryEvent : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
  // class methods
  +[CNChangeHistoryEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryEvent copyWithZone:]
  -[CNChangeHistoryEvent encodeWithCoder:]
  -[CNChangeHistoryEvent initWithCoder:]
  -[CNChangeHistoryEvent acceptEventVisitor:]


CNChangeHistoryDropEverythingEvent : CNChangeHistoryEvent
  // class methods
  +[CNChangeHistoryDropEverythingEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryDropEverythingEvent isEqual:]
  -[CNChangeHistoryDropEverythingEvent encodeWithCoder:]
  -[CNChangeHistoryDropEverythingEvent initWithCoder:]
  -[CNChangeHistoryDropEverythingEvent acceptEventVisitor:]


CNChangeHistoryAddContactEvent : CNChangeHistoryEvent
 @property  CNContact *contact
 @property  NSString *containerIdentifier

  // class methods
  +[CNChangeHistoryAddContactEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryAddContactEvent init]
  -[CNChangeHistoryAddContactEvent isEqual:]
  -[CNChangeHistoryAddContactEvent encodeWithCoder:]
  -[CNChangeHistoryAddContactEvent initWithCoder:]
  -[CNChangeHistoryAddContactEvent .cxx_destruct]
  -[CNChangeHistoryAddContactEvent contact]
  -[CNChangeHistoryAddContactEvent containerIdentifier]
  -[CNChangeHistoryAddContactEvent acceptEventVisitor:]
  -[CNChangeHistoryAddContactEvent initWithContact:containerIdentifier:]


CNChangeHistoryUpdateContactEvent : CNChangeHistoryEvent
 @property  CNContact *contact

  // class methods
  +[CNChangeHistoryUpdateContactEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryUpdateContactEvent init]
  -[CNChangeHistoryUpdateContactEvent isEqual:]
  -[CNChangeHistoryUpdateContactEvent encodeWithCoder:]
  -[CNChangeHistoryUpdateContactEvent initWithCoder:]
  -[CNChangeHistoryUpdateContactEvent .cxx_destruct]
  -[CNChangeHistoryUpdateContactEvent contact]
  -[CNChangeHistoryUpdateContactEvent acceptEventVisitor:]
  -[CNChangeHistoryUpdateContactEvent initWithContact:]


CNChangeHistoryDeleteContactEvent : CNChangeHistoryEvent
 @property  NSString *contactIdentifier

  // class methods
  +[CNChangeHistoryDeleteContactEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryDeleteContactEvent init]
  -[CNChangeHistoryDeleteContactEvent isEqual:]
  -[CNChangeHistoryDeleteContactEvent encodeWithCoder:]
  -[CNChangeHistoryDeleteContactEvent initWithCoder:]
  -[CNChangeHistoryDeleteContactEvent .cxx_destruct]
  -[CNChangeHistoryDeleteContactEvent contactIdentifier]
  -[CNChangeHistoryDeleteContactEvent initWithContactIdentifier:]
  -[CNChangeHistoryDeleteContactEvent acceptEventVisitor:]


CNChangeHistoryAddGroupEvent : CNChangeHistoryEvent
 @property  CNGroup *group
 @property  NSString *containerIdentifier

  // class methods
  +[CNChangeHistoryAddGroupEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryAddGroupEvent init]
  -[CNChangeHistoryAddGroupEvent isEqual:]
  -[CNChangeHistoryAddGroupEvent encodeWithCoder:]
  -[CNChangeHistoryAddGroupEvent initWithCoder:]
  -[CNChangeHistoryAddGroupEvent .cxx_destruct]
  -[CNChangeHistoryAddGroupEvent containerIdentifier]
  -[CNChangeHistoryAddGroupEvent group]
  -[CNChangeHistoryAddGroupEvent acceptEventVisitor:]
  -[CNChangeHistoryAddGroupEvent initWithGroup:containerIdentifier:]


CNChangeHistoryUpdateGroupEvent : CNChangeHistoryEvent
 @property  CNGroup *group

  // class methods
  +[CNChangeHistoryUpdateGroupEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryUpdateGroupEvent init]
  -[CNChangeHistoryUpdateGroupEvent isEqual:]
  -[CNChangeHistoryUpdateGroupEvent encodeWithCoder:]
  -[CNChangeHistoryUpdateGroupEvent initWithCoder:]
  -[CNChangeHistoryUpdateGroupEvent .cxx_destruct]
  -[CNChangeHistoryUpdateGroupEvent group]
  -[CNChangeHistoryUpdateGroupEvent initWithGroup:]
  -[CNChangeHistoryUpdateGroupEvent acceptEventVisitor:]


CNChangeHistoryDeleteGroupEvent : CNChangeHistoryEvent
 @property  NSString *groupIdentifier

  // class methods
  +[CNChangeHistoryDeleteGroupEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryDeleteGroupEvent init]
  -[CNChangeHistoryDeleteGroupEvent isEqual:]
  -[CNChangeHistoryDeleteGroupEvent encodeWithCoder:]
  -[CNChangeHistoryDeleteGroupEvent initWithCoder:]
  -[CNChangeHistoryDeleteGroupEvent .cxx_destruct]
  -[CNChangeHistoryDeleteGroupEvent groupIdentifier]
  -[CNChangeHistoryDeleteGroupEvent acceptEventVisitor:]
  -[CNChangeHistoryDeleteGroupEvent initWithGroupIdentifier:]


CNChangeHistoryAddMemberToGroupEvent : CNChangeHistoryEvent
 @property  CNContact *member
 @property  CNGroup *group

  // class methods
  +[CNChangeHistoryAddMemberToGroupEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryAddMemberToGroupEvent init]
  -[CNChangeHistoryAddMemberToGroupEvent isEqual:]
  -[CNChangeHistoryAddMemberToGroupEvent encodeWithCoder:]
  -[CNChangeHistoryAddMemberToGroupEvent initWithCoder:]
  -[CNChangeHistoryAddMemberToGroupEvent .cxx_destruct]
  -[CNChangeHistoryAddMemberToGroupEvent member]
  -[CNChangeHistoryAddMemberToGroupEvent group]
  -[CNChangeHistoryAddMemberToGroupEvent acceptEventVisitor:]
  -[CNChangeHistoryAddMemberToGroupEvent initWithMember:group:]


CNChangeHistoryRemoveMemberFromGroupEvent : CNChangeHistoryEvent
 @property  CNContact *member
 @property  CNGroup *group

  // class methods
  +[CNChangeHistoryRemoveMemberFromGroupEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryRemoveMemberFromGroupEvent init]
  -[CNChangeHistoryRemoveMemberFromGroupEvent isEqual:]
  -[CNChangeHistoryRemoveMemberFromGroupEvent encodeWithCoder:]
  -[CNChangeHistoryRemoveMemberFromGroupEvent initWithCoder:]
  -[CNChangeHistoryRemoveMemberFromGroupEvent .cxx_destruct]
  -[CNChangeHistoryRemoveMemberFromGroupEvent member]
  -[CNChangeHistoryRemoveMemberFromGroupEvent group]
  -[CNChangeHistoryRemoveMemberFromGroupEvent acceptEventVisitor:]
  -[CNChangeHistoryRemoveMemberFromGroupEvent initWithMember:group:]


CNChangeHistoryAddSubgroupToGroupEvent : CNChangeHistoryEvent
 @property  CNGroup *subgroup
 @property  CNGroup *group

  // class methods
  +[CNChangeHistoryAddSubgroupToGroupEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryAddSubgroupToGroupEvent init]
  -[CNChangeHistoryAddSubgroupToGroupEvent isEqual:]
  -[CNChangeHistoryAddSubgroupToGroupEvent encodeWithCoder:]
  -[CNChangeHistoryAddSubgroupToGroupEvent initWithCoder:]
  -[CNChangeHistoryAddSubgroupToGroupEvent .cxx_destruct]
  -[CNChangeHistoryAddSubgroupToGroupEvent group]
  -[CNChangeHistoryAddSubgroupToGroupEvent acceptEventVisitor:]
  -[CNChangeHistoryAddSubgroupToGroupEvent initWithSubgroup:group:]
  -[CNChangeHistoryAddSubgroupToGroupEvent subgroup]


CNChangeHistoryRemoveSubgroupFromGroupEvent : CNChangeHistoryEvent
 @property  CNGroup *subgroup
 @property  CNGroup *group

  // class methods
  +[CNChangeHistoryRemoveSubgroupFromGroupEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryRemoveSubgroupFromGroupEvent init]
  -[CNChangeHistoryRemoveSubgroupFromGroupEvent isEqual:]
  -[CNChangeHistoryRemoveSubgroupFromGroupEvent encodeWithCoder:]
  -[CNChangeHistoryRemoveSubgroupFromGroupEvent initWithCoder:]
  -[CNChangeHistoryRemoveSubgroupFromGroupEvent .cxx_destruct]
  -[CNChangeHistoryRemoveSubgroupFromGroupEvent group]
  -[CNChangeHistoryRemoveSubgroupFromGroupEvent acceptEventVisitor:]
  -[CNChangeHistoryRemoveSubgroupFromGroupEvent initWithSubgroup:group:]
  -[CNChangeHistoryRemoveSubgroupFromGroupEvent subgroup]


CNChangeHistoryLinkContactsEvent : CNChangeHistoryEvent
 @property  CNContact *fromContact
 @property  CNContact *toContact

  // class methods
  +[CNChangeHistoryLinkContactsEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryLinkContactsEvent init]
  -[CNChangeHistoryLinkContactsEvent isEqual:]
  -[CNChangeHistoryLinkContactsEvent encodeWithCoder:]
  -[CNChangeHistoryLinkContactsEvent initWithCoder:]
  -[CNChangeHistoryLinkContactsEvent .cxx_destruct]
  -[CNChangeHistoryLinkContactsEvent acceptEventVisitor:]
  -[CNChangeHistoryLinkContactsEvent initWithFromContact:toContact:]
  -[CNChangeHistoryLinkContactsEvent fromContact]
  -[CNChangeHistoryLinkContactsEvent toContact]


CNChangeHistoryUnlinkContactEvent : CNChangeHistoryEvent
 @property  CNContact *contact

  // class methods
  +[CNChangeHistoryUnlinkContactEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryUnlinkContactEvent init]
  -[CNChangeHistoryUnlinkContactEvent isEqual:]
  -[CNChangeHistoryUnlinkContactEvent encodeWithCoder:]
  -[CNChangeHistoryUnlinkContactEvent initWithCoder:]
  -[CNChangeHistoryUnlinkContactEvent .cxx_destruct]
  -[CNChangeHistoryUnlinkContactEvent contact]
  -[CNChangeHistoryUnlinkContactEvent acceptEventVisitor:]
  -[CNChangeHistoryUnlinkContactEvent initWithContact:]


CNChangeHistoryPreferredContactForNameEvent : CNChangeHistoryEvent
 @property  CNContact *preferredContact
 @property  CNContact *unifiedContact

  // class methods
  +[CNChangeHistoryPreferredContactForNameEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryPreferredContactForNameEvent init]
  -[CNChangeHistoryPreferredContactForNameEvent isEqual:]
  -[CNChangeHistoryPreferredContactForNameEvent encodeWithCoder:]
  -[CNChangeHistoryPreferredContactForNameEvent initWithCoder:]
  -[CNChangeHistoryPreferredContactForNameEvent .cxx_destruct]
  -[CNChangeHistoryPreferredContactForNameEvent acceptEventVisitor:]
  -[CNChangeHistoryPreferredContactForNameEvent initWithPreferredContact:unifiedContact:]
  -[CNChangeHistoryPreferredContactForNameEvent preferredContact]
  -[CNChangeHistoryPreferredContactForNameEvent unifiedContact]


CNChangeHistoryPreferredContactForImageEvent : CNChangeHistoryEvent
 @property  CNContact *preferredContact
 @property  CNContact *unifiedContact

  // class methods
  +[CNChangeHistoryPreferredContactForImageEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryPreferredContactForImageEvent init]
  -[CNChangeHistoryPreferredContactForImageEvent isEqual:]
  -[CNChangeHistoryPreferredContactForImageEvent encodeWithCoder:]
  -[CNChangeHistoryPreferredContactForImageEvent initWithCoder:]
  -[CNChangeHistoryPreferredContactForImageEvent .cxx_destruct]
  -[CNChangeHistoryPreferredContactForImageEvent acceptEventVisitor:]
  -[CNChangeHistoryPreferredContactForImageEvent initWithPreferredContact:unifiedContact:]
  -[CNChangeHistoryPreferredContactForImageEvent preferredContact]
  -[CNChangeHistoryPreferredContactForImageEvent unifiedContact]


CNChangeHistoryDifferentMeCardEvent : CNChangeHistoryEvent
 @property  NSString *contactIdentifier

  // class methods
  +[CNChangeHistoryDifferentMeCardEvent supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryDifferentMeCardEvent init]
  -[CNChangeHistoryDifferentMeCardEvent isEqual:]
  -[CNChangeHistoryDifferentMeCardEvent encodeWithCoder:]
  -[CNChangeHistoryDifferentMeCardEvent initWithCoder:]
  -[CNChangeHistoryDifferentMeCardEvent .cxx_destruct]
  -[CNChangeHistoryDifferentMeCardEvent contactIdentifier]
  -[CNChangeHistoryDifferentMeCardEvent initWithContactIdentifier:]
  -[CNChangeHistoryDifferentMeCardEvent acceptEventVisitor:]


CNContactVCardParsedResultBuilder : NSObject /usr/lib/libSystem.B.dylib <CNVCardParsedResultBuilder>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactVCardParsedResultBuilder contactKeyForVCardKey:]
  +[CNContactVCardParsedResultBuilder contactValueTransformForVCardKey:]
  +[CNContactVCardParsedResultBuilder labeledValuesWithValues:transform:labels:isPrimaries:]

  // instance methods
  -[CNContactVCardParsedResultBuilder init]
  -[CNContactVCardParsedResultBuilder .cxx_destruct]
  -[CNContactVCardParsedResultBuilder build]
  -[CNContactVCardParsedResultBuilder valueForProperty:]
  -[CNContactVCardParsedResultBuilder setValue:forProperty:]
  -[CNContactVCardParsedResultBuilder personFlags]
  -[CNContactVCardParsedResultBuilder setPersonFlags:]
  -[CNContactVCardParsedResultBuilder contactTypeFromPersonFlags:]
  -[CNContactVCardParsedResultBuilder personFlagsByAddingContactType:toFlags:]
  -[CNContactVCardParsedResultBuilder canSetValueForProperty:]
  -[CNContactVCardParsedResultBuilder setValues:labels:isPrimaries:forProperty:]
  -[CNContactVCardParsedResultBuilder setImageData:forReference:clipRects:]
  -[CNContactVCardParsedResultBuilder setUnknownProperties:]
  -[CNContactVCardParsedResultBuilder validCountryCodes]


CNContactVCardParsedResultBuilderFactory : NSObject /usr/lib/libSystem.B.dylib <CNVCardParsedResultBuilderFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactVCardParsedResultBuilderFactory makeBuilder]


CNContactFetchExecutor : NSObject /usr/lib/libSystem.B.dylib
 @property  CNContactFetchRequest *request
 @property  CNContactStore *store

  // class methods
  +[CNContactFetchExecutor os_log]

  // instance methods
  -[CNContactFetchExecutor .cxx_destruct]
  -[CNContactFetchExecutor store]
  -[CNContactFetchExecutor request]
  -[CNContactFetchExecutor initWithRequest:store:]
  -[CNContactFetchExecutor run:]


CNFullTextSearchContactPredicate : CNPredicate <CNSuggestedContactPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *searchString
 @property  NSArray *containerIdentifiers
 @property  NSArray *groupIdentifiers

  // class methods
  +[CNFullTextSearchContactPredicate supportsSecureCoding]

  // instance methods
  -[CNFullTextSearchContactPredicate encodeWithCoder:]
  -[CNFullTextSearchContactPredicate initWithCoder:]
  -[CNFullTextSearchContactPredicate .cxx_destruct]
  -[CNFullTextSearchContactPredicate searchString]
  -[CNFullTextSearchContactPredicate sgContactMatchesWithSortOrder:mutableObjects:service:error:]
  -[CNFullTextSearchContactPredicate containerIdentifiers]
  -[CNFullTextSearchContactPredicate groupIdentifiers]
  -[CNFullTextSearchContactPredicate initWithSearchString:containerIdentifiers:groupIdentifiers:]


CNCalculatesMultiValueDiff : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNCalculatesMultiValueDiff diffMultiValue:toMultiValue:]

  // instance methods
  -[CNCalculatesMultiValueDiff .cxx_destruct]
  -[CNCalculatesMultiValueDiff updates]
  -[CNCalculatesMultiValueDiff initWithMultiValue1:multiValue2:]
  -[CNCalculatesMultiValueDiff calculateDiff]
  -[CNCalculatesMultiValueDiff setupOriginalIdentifiers]
  -[CNCalculatesMultiValueDiff setupFinalIdentifiers]
  -[CNCalculatesMultiValueDiff setupAddedIdentifiers]
  -[CNCalculatesMultiValueDiff setupRemovedIdentifiers]
  -[CNCalculatesMultiValueDiff setupSameIdentifiers]
  -[CNCalculatesMultiValueDiff setupCalculatedFinalIdentifiers]
  -[CNCalculatesMultiValueDiff appendRemoveUpdates]
  -[CNCalculatesMultiValueDiff appendAddUpdates]
  -[CNCalculatesMultiValueDiff appendReplaceUpdates]
  -[CNCalculatesMultiValueDiff appendReorderUpdates]


CNContactVerifier : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNContactVerifier isValidContact:error:]
  +[CNContactVerifier arePropertiesOfContact:authorizedForSavingWithContext:error:]


_CNFavoritesLogger : NSObject /usr/lib/libSystem.B.dylib <CNFavoritesLogger>
 @property  NSObject<OS_os_log> *log
 @property  NSObject<OS_os_log> *summaryLog
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_CNFavoritesLogger init]
  -[_CNFavoritesLogger .cxx_destruct]
  -[_CNFavoritesLogger log]
  -[_CNFavoritesLogger _simulateCrashReportWithMessage:]
  -[_CNFavoritesLogger readingFavorites:]
  -[_CNFavoritesLogger writingFavorites:]
  -[_CNFavoritesLogger rematchingFavorites:]
  -[_CNFavoritesLogger finishedReadingRemoteFavorites]
  -[_CNFavoritesLogger finishedReadingFavoritesFromPath:entriesCount:]
  -[_CNFavoritesLogger finishedWritingRemoteFavorites]
  -[_CNFavoritesLogger finishedWritingFavoritesToPath:entriesCount:]
  -[_CNFavoritesLogger failedToReadRemoteFavorites:]
  -[_CNFavoritesLogger failedToReadFavoritesFromPath:error:simulateCrashReport:]
  -[_CNFavoritesLogger failedToConvertFavoritesToPropertyList:]
  -[_CNFavoritesLogger failedToVerifyFavorites:withPropertyListFavorites:error:]
  -[_CNFavoritesLogger failedToWriteRemoteFavorites:]
  -[_CNFavoritesLogger failedToVerifyWrittenFavoritesExistsAtPath:]
  -[_CNFavoritesLogger failedToWriteFavoritesToPath:error:simulateCrashReport:]
  -[_CNFavoritesLogger reportFavoritesAccessedBeforeFirstUnlock]
  -[_CNFavoritesLogger summaryLog]


CNChangeHistoryFetchRequest : CNFetchRequest <NSSecureCoding>
 @property  CNChangeHistoryAnchor *startingAnchor
 @property  BOOL enforceClientIdentifier
 @property  NSString *clientIdentifier
 @property  BOOL includeChangeAnchors
 @property  BOOL includeChangeIDs
 @property  BOOL includeExternalIDs
 @property  BOOL includeImagesChanged
 @property  BOOL includeLabeledValueChanges
 @property  NSString *containerIdentifier
 @property  BOOL unifyResults
 @property  NSData *startingToken
 @property  NSArray *additionalContactKeyDescriptors
 @property  BOOL shouldUnifyResults
 @property  BOOL mutableObjects
 @property  BOOL includeGroupChanges
 @property  NSArray *excludedTransactionAuthors

  // class methods
  +[CNChangeHistoryFetchRequest supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryFetchRequest encodeWithCoder:]
  -[CNChangeHistoryFetchRequest initWithCoder:]
  -[CNChangeHistoryFetchRequest .cxx_destruct]
  -[CNChangeHistoryFetchRequest containerIdentifier]
  -[CNChangeHistoryFetchRequest setContainerIdentifier:]
  -[CNChangeHistoryFetchRequest clientIdentifier]
  -[CNChangeHistoryFetchRequest setUnifyResults:]
  -[CNChangeHistoryFetchRequest setStartingToken:]
  -[CNChangeHistoryFetchRequest setShouldUnifyResults:]
  -[CNChangeHistoryFetchRequest setAdditionalContactKeyDescriptors:]
  -[CNChangeHistoryFetchRequest initWithClientIdentifier:]
  -[CNChangeHistoryFetchRequest unifyResults]
  -[CNChangeHistoryFetchRequest mutableObjects]
  -[CNChangeHistoryFetchRequest setMutableObjects:]
  -[CNChangeHistoryFetchRequest shouldUnifyResults]
  -[CNChangeHistoryFetchRequest includeGroupChanges]
  -[CNChangeHistoryFetchRequest includeChangeIDs]
  -[CNChangeHistoryFetchRequest includeExternalIDs]
  -[CNChangeHistoryFetchRequest includeImagesChanged]
  -[CNChangeHistoryFetchRequest includeLabeledValueChanges]
  -[CNChangeHistoryFetchRequest startingAnchor]
  -[CNChangeHistoryFetchRequest shouldEnforceClientIdentifer]
  -[CNChangeHistoryFetchRequest includeChangeAnchors]
  -[CNChangeHistoryFetchRequest startingToken]
  -[CNChangeHistoryFetchRequest initWithStartingAnchor:]
  -[CNChangeHistoryFetchRequest setStartingAnchor:]
  -[CNChangeHistoryFetchRequest additionalContactKeyDescriptors]
  -[CNChangeHistoryFetchRequest setIncludeGroupChanges:]
  -[CNChangeHistoryFetchRequest excludedTransactionAuthors]
  -[CNChangeHistoryFetchRequest setExcludedTransactionAuthors:]
  -[CNChangeHistoryFetchRequest setIncludeChangeAnchors:]
  -[CNChangeHistoryFetchRequest setIncludeChangeIDs:]
  -[CNChangeHistoryFetchRequest setIncludeExternalIDs:]
  -[CNChangeHistoryFetchRequest setIncludeImagesChanged:]
  -[CNChangeHistoryFetchRequest setIncludeLabeledValueChanges:]


CNXPCDataMapper : NSObject /usr/lib/libSystem.B.dylib <CNDataMapper>
 @property  NSXPCConnection *connection
 @property  <CNContactsLogger> *logger
 @property  <CNXPCDataMapperService> *serviceProxy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *legacyTetheredSyncDeviceAnchor
 @property  NSString *legacyTetheredSyncComputerAnchor

  // class methods
  +[CNXPCDataMapper serviceProtocolInterface]
  +[CNXPCDataMapper cursorProtocolInterface]
  +[CNXPCDataMapper contactBuffersDecoderForFetchRequest:]

  // instance methods
  -[CNXPCDataMapper init]
  -[CNXPCDataMapper dealloc]
  -[CNXPCDataMapper .cxx_destruct]
  -[CNXPCDataMapper connection]
  -[CNXPCDataMapper setConnection:]
  -[CNXPCDataMapper logger]
  -[CNXPCDataMapper currentHistoryToken]
  -[CNXPCDataMapper changeHistoryWithFetchRequest:error:]
  -[CNXPCDataMapper executeChangeHistoryClearRequest:error:]
  -[CNXPCDataMapper sectionListOffsetsForSortOrder:error:]
  -[CNXPCDataMapper unifiedContactCountWithError:]
  -[CNXPCDataMapper contactCountForFetchRequest:error:]
  -[CNXPCDataMapper meContactIdentifiers:]
  -[CNXPCDataMapper groupsMatchingPredicate:error:]
  -[CNXPCDataMapper subgroupsOfGroupWithIdentifier:error:]
  -[CNXPCDataMapper containersMatchingPredicate:error:]
  -[CNXPCDataMapper serverSearchContainersMatchingPredicate:error:]
  -[CNXPCDataMapper defaultContainerIdentifier]
  -[CNXPCDataMapper policyForContainerWithIdentifier:error:]
  -[CNXPCDataMapper setMeContact:error:]
  -[CNXPCDataMapper setMeContact:forContainer:error:]
  -[CNXPCDataMapper accountsMatchingPredicate:error:]
  -[CNXPCDataMapper executeSaveRequest:error:]
  -[CNXPCDataMapper executeFetchRequest:progressiveResults:completion:]
  -[CNXPCDataMapper contactWithUserActivityUserInfo:keysToFetch:]
  -[CNXPCDataMapper userActivityUserInfoForContact:]
  -[CNXPCDataMapper initWithContactsEnvironment:managedConfiguration:]
  -[CNXPCDataMapper initWithContactsEnvironment:connection:]
  -[CNXPCDataMapper requestAccessForEntityType:completionHandler:]
  -[CNXPCDataMapper requestAccessForEntityType:error:]
  -[CNXPCDataMapper remoteResultForSelector:parameters:error:]
  -[CNXPCDataMapper serviceProxy]
  -[CNXPCDataMapper remoteResultForSelector:error:]
  -[CNXPCDataMapper remoteResultForSelector:query:error:]
  -[CNXPCDataMapper fetchAndDecodeEncodedContactsForFetchRequest:error:cancelationToken:batchHandler:]
  -[CNXPCDataMapper fetchContactsForFetchRequest:error:batchHandler:]
  -[CNXPCDataMapper fetchEncodedContactsForFetchRequest:error:cancelationToken:batchHandler:]
  -[CNXPCDataMapper executeSaveRequest:response:authorizationContext:error:]
  -[CNXPCDataMapper remoteResultForSelector:query:queryParameter:error:]
  -[CNXPCDataMapper authorizedKeysForContactKeys:error:]
  -[CNXPCDataMapper contactObservableForFetchRequest:]
  -[CNXPCDataMapper identifierWithError:]
  -[CNXPCDataMapper setBestMeIfNeededForGivenName:familyName:email:error:]
  -[CNXPCDataMapper registerChangeHistoryClientIdentifier:forContainerIdentifier:error:]
  -[CNXPCDataMapper unregisterChangeHistoryClientIdentifier:forContainerIdentifier:error:]
  -[CNXPCDataMapper favoritesEntryDictionariesAtPath:error:]
  -[CNXPCDataMapper writeFavoritesPropertyListData:toPath:error:]
  -[CNXPCDataMapper mapTableFromMatchInfoDictionary:]
  -[CNXPCDataMapper reindexSearchableItemsWithIdentifiers:error:]
  -[CNXPCDataMapper verifyIndexWithError:]
  -[CNXPCDataMapper setLogger:]
  -[CNXPCDataMapper setServiceProxy:]


CNXPCDataMapperProgressiveHandler : NSObject /usr/lib/libSystem.B.dylib <ProgressiveResultsHandlerProtocol>
  // instance methods
  -[CNXPCDataMapperProgressiveHandler .cxx_destruct]
  -[CNXPCDataMapperProgressiveHandler receiveProgressiveContacts:matchInfos:]
  -[CNXPCDataMapperProgressiveHandler completedWithError:]
  -[CNXPCDataMapperProgressiveHandler initWithProgressBlock:completionBlock:]


CNiOSABContactsInContainerPredicate : CNPredicate <CNiOSContactPredicate>
 @property  NSString *parentContainerIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABContactsInContainerPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABContactsInContainerPredicate encodeWithCoder:]
  -[CNiOSABContactsInContainerPredicate initWithCoder:]
  -[CNiOSABContactsInContainerPredicate .cxx_destruct]
  -[CNiOSABContactsInContainerPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:nserror:]
  -[CNiOSABContactsInContainerPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABContactsInContainerPredicate cn_supportsNativeSorting]
  -[CNiOSABContactsInContainerPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABContactsInContainerPredicate cn_supportsEncodedFetching]
  -[CNiOSABContactsInContainerPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABContactsInContainerPredicate parentContainerIdentifier]
  -[CNiOSABContactsInContainerPredicate initWithParentContainerIdentifier:]


CNiOSABAccountIdentifiersPredicate : CNPredicate <CNiOSAccountPredicate>
 @property  NSArray *identifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABAccountIdentifiersPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABAccountIdentifiersPredicate encodeWithCoder:]
  -[CNiOSABAccountIdentifiersPredicate initWithCoder:]
  -[CNiOSABAccountIdentifiersPredicate .cxx_destruct]
  -[CNiOSABAccountIdentifiersPredicate initWithPredicate:]
  -[CNiOSABAccountIdentifiersPredicate identifiers]
  -[CNiOSABAccountIdentifiersPredicate initWithIdentifiers:]
  -[CNiOSABAccountIdentifiersPredicate cn_copyAccountsInAddressBook:error:]


CNiOSABUtilities : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[CNiOSABUtilities dealloc]
  -[CNiOSABUtilities initWithAddressBook:]
  -[CNiOSABUtilities allAccountIdentifiers]
  -[CNiOSABUtilities filterPeople:matchingAccountIdentifiers:]


CNInternalIdentifierDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNInternalIdentifierDescription init]
  -[CNInternalIdentifierDescription valueClass]
  -[CNInternalIdentifierDescription CNValueForContact:]
  -[CNInternalIdentifierDescription isEqualForContact:other:]
  -[CNInternalIdentifierDescription encodeUsingCoder:contact:]
  -[CNInternalIdentifierDescription decodeUsingCoder:contact:]
  -[CNInternalIdentifierDescription isEqualIgnoringIdentifiersForContact:other:]
  -[CNInternalIdentifierDescription setCNValue:onContact:]
  -[CNInternalIdentifierDescription ABValueFromCNValue:]
  -[CNInternalIdentifierDescription CNValueFromABValue:]
  -[CNInternalIdentifierDescription abPropertyID:]


CNIOSLegacyIdentifierDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNIOSLegacyIdentifierDescription init]
  -[CNIOSLegacyIdentifierDescription valueClass]
  -[CNIOSLegacyIdentifierDescription nilValue]
  -[CNIOSLegacyIdentifierDescription CNValueForContact:]
  -[CNIOSLegacyIdentifierDescription isEqualForContact:other:]
  -[CNIOSLegacyIdentifierDescription encodeUsingCoder:contact:]
  -[CNIOSLegacyIdentifierDescription decodeUsingCoder:contact:]
  -[CNIOSLegacyIdentifierDescription isEqualIgnoringIdentifiersForContact:other:]
  -[CNIOSLegacyIdentifierDescription setCNValue:onContact:]
  -[CNIOSLegacyIdentifierDescription resetGuardianManagedValueOnContact:]
  -[CNIOSLegacyIdentifierDescription valueWithResetIdentifiers:]
  -[CNIOSLegacyIdentifierDescription ABValueForABPerson:]
  -[CNIOSLegacyIdentifierDescription setABValue:onABPerson:error:]


CNExternalIdentifierDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNExternalIdentifierDescription init]
  -[CNExternalIdentifierDescription CNValueForContact:]
  -[CNExternalIdentifierDescription isEqualForContact:other:]
  -[CNExternalIdentifierDescription encodeUsingCoder:contact:]
  -[CNExternalIdentifierDescription decodeUsingCoder:contact:]
  -[CNExternalIdentifierDescription setCNValue:onContact:]
  -[CNExternalIdentifierDescription resetGuardianManagedValueOnContact:]
  -[CNExternalIdentifierDescription abPropertyID:]


CNExternalRepresentationDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNExternalRepresentationDescription init]
  -[CNExternalRepresentationDescription valueClass]
  -[CNExternalRepresentationDescription CNValueForContact:]
  -[CNExternalRepresentationDescription isEqualForContact:other:]
  -[CNExternalRepresentationDescription encodeUsingCoder:contact:]
  -[CNExternalRepresentationDescription decodeUsingCoder:contact:]
  -[CNExternalRepresentationDescription setCNValue:onContact:]
  -[CNExternalRepresentationDescription resetGuardianManagedValueOnContact:]
  -[CNExternalRepresentationDescription abPropertyID:]
  -[CNExternalRepresentationDescription CNValueFromABBytes:length:]
  -[CNExternalRepresentationDescription abPropertyType]


CNExternalModificationTagDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNExternalModificationTagDescription init]
  -[CNExternalModificationTagDescription CNValueForContact:]
  -[CNExternalModificationTagDescription isEqualForContact:other:]
  -[CNExternalModificationTagDescription encodeUsingCoder:contact:]
  -[CNExternalModificationTagDescription decodeUsingCoder:contact:]
  -[CNExternalModificationTagDescription setCNValue:onContact:]
  -[CNExternalModificationTagDescription resetGuardianManagedValueOnContact:]
  -[CNExternalModificationTagDescription abPropertyID:]


CNExternalUUIDDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNExternalUUIDDescription init]
  -[CNExternalUUIDDescription CNValueForContact:]
  -[CNExternalUUIDDescription isEqualForContact:other:]
  -[CNExternalUUIDDescription encodeUsingCoder:contact:]
  -[CNExternalUUIDDescription decodeUsingCoder:contact:]
  -[CNExternalUUIDDescription setCNValue:onContact:]
  -[CNExternalUUIDDescription resetGuardianManagedValueOnContact:]
  -[CNExternalUUIDDescription abPropertyID:]


CNExternalImageURIDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNExternalImageURIDescription init]
  -[CNExternalImageURIDescription CNValueForContact:]
  -[CNExternalImageURIDescription isEqualForContact:other:]
  -[CNExternalImageURIDescription encodeUsingCoder:contact:]
  -[CNExternalImageURIDescription decodeUsingCoder:contact:]
  -[CNExternalImageURIDescription setCNValue:onContact:]
  -[CNExternalImageURIDescription resetGuardianManagedValueOnContact:]
  -[CNExternalImageURIDescription abPropertyID:]


CNNamePrefixDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNNamePrefixDescription init]
  -[CNNamePrefixDescription isNonnull]
  -[CNNamePrefixDescription CNValueForContact:]
  -[CNNamePrefixDescription isEqualForContact:other:]
  -[CNNamePrefixDescription encodeUsingCoder:contact:]
  -[CNNamePrefixDescription decodeUsingCoder:contact:]
  -[CNNamePrefixDescription setCNValue:onContact:]
  -[CNNamePrefixDescription abPropertyID:]


CNGivenNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNGivenNameDescription init]
  -[CNGivenNameDescription isNonnull]
  -[CNGivenNameDescription CNValueForContact:]
  -[CNGivenNameDescription isEqualForContact:other:]
  -[CNGivenNameDescription encodeUsingCoder:contact:]
  -[CNGivenNameDescription decodeUsingCoder:contact:]
  -[CNGivenNameDescription setCNValue:onContact:]
  -[CNGivenNameDescription abPropertyID:]


CNMiddleNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNMiddleNameDescription init]
  -[CNMiddleNameDescription isNonnull]
  -[CNMiddleNameDescription CNValueForContact:]
  -[CNMiddleNameDescription isEqualForContact:other:]
  -[CNMiddleNameDescription encodeUsingCoder:contact:]
  -[CNMiddleNameDescription decodeUsingCoder:contact:]
  -[CNMiddleNameDescription setCNValue:onContact:]
  -[CNMiddleNameDescription abPropertyID:]


CNFamilyNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNFamilyNameDescription init]
  -[CNFamilyNameDescription isNonnull]
  -[CNFamilyNameDescription CNValueForContact:]
  -[CNFamilyNameDescription isEqualForContact:other:]
  -[CNFamilyNameDescription encodeUsingCoder:contact:]
  -[CNFamilyNameDescription decodeUsingCoder:contact:]
  -[CNFamilyNameDescription setCNValue:onContact:]
  -[CNFamilyNameDescription abPropertyID:]


CNNameSuffixDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNNameSuffixDescription init]
  -[CNNameSuffixDescription isNonnull]
  -[CNNameSuffixDescription CNValueForContact:]
  -[CNNameSuffixDescription isEqualForContact:other:]
  -[CNNameSuffixDescription encodeUsingCoder:contact:]
  -[CNNameSuffixDescription decodeUsingCoder:contact:]
  -[CNNameSuffixDescription setCNValue:onContact:]
  -[CNNameSuffixDescription abPropertyID:]


CNPreviousFamilyNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPreviousFamilyNameDescription init]
  -[CNPreviousFamilyNameDescription isNonnull]
  -[CNPreviousFamilyNameDescription CNValueForContact:]
  -[CNPreviousFamilyNameDescription isEqualForContact:other:]
  -[CNPreviousFamilyNameDescription encodeUsingCoder:contact:]
  -[CNPreviousFamilyNameDescription decodeUsingCoder:contact:]
  -[CNPreviousFamilyNameDescription setCNValue:onContact:]
  -[CNPreviousFamilyNameDescription canUnifyValue:withValue:]
  -[CNPreviousFamilyNameDescription abPropertyID:]


CNNicknameNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNNicknameNameDescription init]
  -[CNNicknameNameDescription isNonnull]
  -[CNNicknameNameDescription CNValueForContact:]
  -[CNNicknameNameDescription isEqualForContact:other:]
  -[CNNicknameNameDescription encodeUsingCoder:contact:]
  -[CNNicknameNameDescription decodeUsingCoder:contact:]
  -[CNNicknameNameDescription setCNValue:onContact:]
  -[CNNicknameNameDescription abPropertyID:]


CNPhoneticGivenNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPhoneticGivenNameDescription init]
  -[CNPhoneticGivenNameDescription isNonnull]
  -[CNPhoneticGivenNameDescription CNValueForContact:]
  -[CNPhoneticGivenNameDescription isEqualForContact:other:]
  -[CNPhoneticGivenNameDescription encodeUsingCoder:contact:]
  -[CNPhoneticGivenNameDescription decodeUsingCoder:contact:]
  -[CNPhoneticGivenNameDescription setCNValue:onContact:]
  -[CNPhoneticGivenNameDescription abPropertyID:]


CNPhoneticMiddleNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPhoneticMiddleNameDescription init]
  -[CNPhoneticMiddleNameDescription isNonnull]
  -[CNPhoneticMiddleNameDescription CNValueForContact:]
  -[CNPhoneticMiddleNameDescription isEqualForContact:other:]
  -[CNPhoneticMiddleNameDescription encodeUsingCoder:contact:]
  -[CNPhoneticMiddleNameDescription decodeUsingCoder:contact:]
  -[CNPhoneticMiddleNameDescription setCNValue:onContact:]
  -[CNPhoneticMiddleNameDescription abPropertyID:]


CNPhoneticFamilyNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPhoneticFamilyNameDescription init]
  -[CNPhoneticFamilyNameDescription isNonnull]
  -[CNPhoneticFamilyNameDescription CNValueForContact:]
  -[CNPhoneticFamilyNameDescription isEqualForContact:other:]
  -[CNPhoneticFamilyNameDescription encodeUsingCoder:contact:]
  -[CNPhoneticFamilyNameDescription decodeUsingCoder:contact:]
  -[CNPhoneticFamilyNameDescription setCNValue:onContact:]
  -[CNPhoneticFamilyNameDescription abPropertyID:]


CNPhoneticOrganizationNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPhoneticOrganizationNameDescription init]
  -[CNPhoneticOrganizationNameDescription isNonnull]
  -[CNPhoneticOrganizationNameDescription CNValueForContact:]
  -[CNPhoneticOrganizationNameDescription isEqualForContact:other:]
  -[CNPhoneticOrganizationNameDescription encodeUsingCoder:contact:]
  -[CNPhoneticOrganizationNameDescription decodeUsingCoder:contact:]
  -[CNPhoneticOrganizationNameDescription setCNValue:onContact:]
  -[CNPhoneticOrganizationNameDescription abPropertyID:]


CNPronunciationGivenNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPronunciationGivenNameDescription init]
  -[CNPronunciationGivenNameDescription isNonnull]
  -[CNPronunciationGivenNameDescription CNValueForContact:]
  -[CNPronunciationGivenNameDescription isEqualForContact:other:]
  -[CNPronunciationGivenNameDescription encodeUsingCoder:contact:]
  -[CNPronunciationGivenNameDescription decodeUsingCoder:contact:]
  -[CNPronunciationGivenNameDescription setCNValue:onContact:]
  -[CNPronunciationGivenNameDescription abPropertyID:]


CNPronunciationFamilyNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPronunciationFamilyNameDescription init]
  -[CNPronunciationFamilyNameDescription isNonnull]
  -[CNPronunciationFamilyNameDescription CNValueForContact:]
  -[CNPronunciationFamilyNameDescription isEqualForContact:other:]
  -[CNPronunciationFamilyNameDescription encodeUsingCoder:contact:]
  -[CNPronunciationFamilyNameDescription decodeUsingCoder:contact:]
  -[CNPronunciationFamilyNameDescription setCNValue:onContact:]
  -[CNPronunciationFamilyNameDescription abPropertyID:]


CNSectionForSortingByGivenNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNSectionForSortingByGivenNameDescription init]
  -[CNSectionForSortingByGivenNameDescription CNValueForContact:]
  -[CNSectionForSortingByGivenNameDescription isEqualForContact:other:]
  -[CNSectionForSortingByGivenNameDescription encodeUsingCoder:contact:]
  -[CNSectionForSortingByGivenNameDescription decodeUsingCoder:contact:]
  -[CNSectionForSortingByGivenNameDescription isEqualIgnoringIdentifiersForContact:other:]
  -[CNSectionForSortingByGivenNameDescription setCNValue:onContact:]
  -[CNSectionForSortingByGivenNameDescription abPropertyID:]


CNSectionForSortingByFamilyNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNSectionForSortingByFamilyNameDescription init]
  -[CNSectionForSortingByFamilyNameDescription CNValueForContact:]
  -[CNSectionForSortingByFamilyNameDescription isEqualForContact:other:]
  -[CNSectionForSortingByFamilyNameDescription encodeUsingCoder:contact:]
  -[CNSectionForSortingByFamilyNameDescription decodeUsingCoder:contact:]
  -[CNSectionForSortingByFamilyNameDescription isEqualIgnoringIdentifiersForContact:other:]
  -[CNSectionForSortingByFamilyNameDescription setCNValue:onContact:]
  -[CNSectionForSortingByFamilyNameDescription abPropertyID:]


CNOrganizationNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNOrganizationNameDescription init]
  -[CNOrganizationNameDescription isNonnull]
  -[CNOrganizationNameDescription CNValueForContact:]
  -[CNOrganizationNameDescription isEqualForContact:other:]
  -[CNOrganizationNameDescription encodeUsingCoder:contact:]
  -[CNOrganizationNameDescription decodeUsingCoder:contact:]
  -[CNOrganizationNameDescription setCNValue:onContact:]
  -[CNOrganizationNameDescription abPropertyID:]


CNDepartmentDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNDepartmentDescription init]
  -[CNDepartmentDescription isNonnull]
  -[CNDepartmentDescription CNValueForContact:]
  -[CNDepartmentDescription isEqualForContact:other:]
  -[CNDepartmentDescription encodeUsingCoder:contact:]
  -[CNDepartmentDescription decodeUsingCoder:contact:]
  -[CNDepartmentDescription setCNValue:onContact:]
  -[CNDepartmentDescription abPropertyID:]


CNJobTitleDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNJobTitleDescription init]
  -[CNJobTitleDescription isNonnull]
  -[CNJobTitleDescription CNValueForContact:]
  -[CNJobTitleDescription isEqualForContact:other:]
  -[CNJobTitleDescription encodeUsingCoder:contact:]
  -[CNJobTitleDescription decodeUsingCoder:contact:]
  -[CNJobTitleDescription setCNValue:onContact:]
  -[CNJobTitleDescription abPropertyID:]


CNBirthdayDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNBirthdayDescription init]
  -[CNBirthdayDescription valueClass]
  -[CNBirthdayDescription isValidValue:error:]
  -[CNBirthdayDescription CNValueForContact:]
  -[CNBirthdayDescription isEqualForContact:other:]
  -[CNBirthdayDescription encodeUsingCoder:contact:]
  -[CNBirthdayDescription decodeUsingCoder:contact:]
  -[CNBirthdayDescription setCNValue:onContact:]
  -[CNBirthdayDescription canUnifyValue:withValue:]
  -[CNBirthdayDescription isValue:preferredToUnifiedValue:]
  -[CNBirthdayDescription fromPlistTransform]
  -[CNBirthdayDescription ABValueFromCNValue:]
  -[CNBirthdayDescription CNValueFromABValue:]
  -[CNBirthdayDescription abPropertyID:]
  -[CNBirthdayDescription CNValueFromABBytes:length:]


CNNonGregorianBirthdayDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNNonGregorianBirthdayDescription init]
  -[CNNonGregorianBirthdayDescription valueClass]
  -[CNNonGregorianBirthdayDescription isValidValue:error:]
  -[CNNonGregorianBirthdayDescription CNValueForContact:]
  -[CNNonGregorianBirthdayDescription isEqualForContact:other:]
  -[CNNonGregorianBirthdayDescription encodeUsingCoder:contact:]
  -[CNNonGregorianBirthdayDescription decodeUsingCoder:contact:]
  -[CNNonGregorianBirthdayDescription setCNValue:onContact:]
  -[CNNonGregorianBirthdayDescription canUnifyValue:withValue:]
  -[CNNonGregorianBirthdayDescription isValue:preferredToUnifiedValue:]
  -[CNNonGregorianBirthdayDescription fromPlistTransform]
  -[CNNonGregorianBirthdayDescription ABValueFromCNValue:]
  -[CNNonGregorianBirthdayDescription CNValueFromABValue:]
  -[CNNonGregorianBirthdayDescription abPropertyID:]
  -[CNNonGregorianBirthdayDescription CNValueFromABBytes:length:]


CNCreationDateDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNCreationDateDescription init]
  -[CNCreationDateDescription valueClass]
  -[CNCreationDateDescription CNValueForContact:]
  -[CNCreationDateDescription isEqualForContact:other:]
  -[CNCreationDateDescription encodeUsingCoder:contact:]
  -[CNCreationDateDescription decodeUsingCoder:contact:]
  -[CNCreationDateDescription setCNValue:onContact:]
  -[CNCreationDateDescription abPropertyID:]
  -[CNCreationDateDescription CNValueFromABBytes:length:]
  -[CNCreationDateDescription setABValue:onABPerson:error:]


CNModificationDateDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNModificationDateDescription init]
  -[CNModificationDateDescription valueClass]
  -[CNModificationDateDescription CNValueForContact:]
  -[CNModificationDateDescription isEqualForContact:other:]
  -[CNModificationDateDescription encodeUsingCoder:contact:]
  -[CNModificationDateDescription decodeUsingCoder:contact:]
  -[CNModificationDateDescription setCNValue:onContact:]
  -[CNModificationDateDescription abPropertyID:]
  -[CNModificationDateDescription CNValueFromABBytes:length:]
  -[CNModificationDateDescription setABValue:onABPerson:error:]


CNNoteDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNNoteDescription init]
  -[CNNoteDescription isNonnull]
  -[CNNoteDescription CNValueForContact:]
  -[CNNoteDescription isEqualForContact:other:]
  -[CNNoteDescription encodeUsingCoder:contact:]
  -[CNNoteDescription decodeUsingCoder:contact:]
  -[CNNoteDescription setCNValue:onContact:]
  -[CNNoteDescription abPropertyID:]


CNImageDataDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNImageDataDescription init]
  -[CNImageDataDescription valueClass]
  -[CNImageDataDescription CNValueForContact:]
  -[CNImageDataDescription isEqualForContact:other:]
  -[CNImageDataDescription encodeUsingCoder:contact:]
  -[CNImageDataDescription decodeUsingCoder:contact:]
  -[CNImageDataDescription setCNValue:onContact:]
  -[CNImageDataDescription abPropertyID:]
  -[CNImageDataDescription setCNValue:onABPerson:withDependentPropertiesContext:error:]
  -[CNImageDataDescription ABValueForABPerson:]
  -[CNImageDataDescription setABValue:onABPerson:error:]


CNCropRectDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNCropRectDescription init]
  -[CNCropRectDescription valueClass]
  -[CNCropRectDescription nilValue]
  -[CNCropRectDescription CNValueForContact:]
  -[CNCropRectDescription isEqualForContact:other:]
  -[CNCropRectDescription encodeUsingCoder:contact:]
  -[CNCropRectDescription decodeUsingCoder:contact:]
  -[CNCropRectDescription setCNValue:onContact:]
  -[CNCropRectDescription abPropertyID:]
  -[CNCropRectDescription setCNValue:onABPerson:withDependentPropertiesContext:error:]
  -[CNCropRectDescription ABValueForABPerson:]
  -[CNCropRectDescription setABValue:onABPerson:error:]


CNThumbnailImageDataDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNThumbnailImageDataDescription init]
  -[CNThumbnailImageDataDescription valueClass]
  -[CNThumbnailImageDataDescription CNValueForContact:]
  -[CNThumbnailImageDataDescription isEqualForContact:other:]
  -[CNThumbnailImageDataDescription encodeUsingCoder:contact:]
  -[CNThumbnailImageDataDescription decodeUsingCoder:contact:]
  -[CNThumbnailImageDataDescription setCNValue:onContact:]
  -[CNThumbnailImageDataDescription abPropertyID:]
  -[CNThumbnailImageDataDescription setCNValue:onABPerson:withDependentPropertiesContext:error:]
  -[CNThumbnailImageDataDescription ABValueForABPerson:]
  -[CNThumbnailImageDataDescription setABValue:onABPerson:error:]


CNFullscreenImageDataDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNFullscreenImageDataDescription init]
  -[CNFullscreenImageDataDescription valueClass]
  -[CNFullscreenImageDataDescription CNValueForContact:]
  -[CNFullscreenImageDataDescription isEqualForContact:other:]
  -[CNFullscreenImageDataDescription encodeUsingCoder:contact:]
  -[CNFullscreenImageDataDescription decodeUsingCoder:contact:]
  -[CNFullscreenImageDataDescription setCNValue:onContact:]
  -[CNFullscreenImageDataDescription abPropertyID:]
  -[CNFullscreenImageDataDescription setCNValue:onABPerson:withDependentPropertiesContext:error:]
  -[CNFullscreenImageDataDescription ABValueForABPerson:]
  -[CNFullscreenImageDataDescription setABValue:onABPerson:error:]


CNSyncImageDataDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNSyncImageDataDescription init]
  -[CNSyncImageDataDescription valueClass]
  -[CNSyncImageDataDescription CNValueForContact:]
  -[CNSyncImageDataDescription isEqualForContact:other:]
  -[CNSyncImageDataDescription encodeUsingCoder:contact:]
  -[CNSyncImageDataDescription decodeUsingCoder:contact:]
  -[CNSyncImageDataDescription setCNValue:onContact:]
  -[CNSyncImageDataDescription abPropertyID:]
  -[CNSyncImageDataDescription setCNValue:onABPerson:withDependentPropertiesContext:error:]
  -[CNSyncImageDataDescription ABValueForABPerson:]
  -[CNSyncImageDataDescription setABValue:onABPerson:error:]


CNImageDataAvailableDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNImageDataAvailableDescription init]
  -[CNImageDataAvailableDescription valueClass]
  -[CNImageDataAvailableDescription CNValueForContact:]
  -[CNImageDataAvailableDescription isEqualForContact:other:]
  -[CNImageDataAvailableDescription encodeUsingCoder:contact:]
  -[CNImageDataAvailableDescription decodeUsingCoder:contact:]
  -[CNImageDataAvailableDescription setCNValue:onContact:]
  -[CNImageDataAvailableDescription abPropertyID:]
  -[CNImageDataAvailableDescription CNValueFromABBytes:length:]
  -[CNImageDataAvailableDescription ABValueForABPerson:]
  -[CNImageDataAvailableDescription setABValue:onABPerson:error:]


CNLinkIdentifierDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNLinkIdentifierDescription init]
  -[CNLinkIdentifierDescription CNValueForContact:]
  -[CNLinkIdentifierDescription isEqualForContact:other:]
  -[CNLinkIdentifierDescription encodeUsingCoder:contact:]
  -[CNLinkIdentifierDescription decodeUsingCoder:contact:]
  -[CNLinkIdentifierDescription isEqualIgnoringIdentifiersForContact:other:]
  -[CNLinkIdentifierDescription setCNValue:onContact:]
  -[CNLinkIdentifierDescription abPropertyID:]
  -[CNLinkIdentifierDescription ABValueForABPerson:]
  -[CNLinkIdentifierDescription setABValue:onABPerson:error:]


CNPreferredForNameDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPreferredForNameDescription init]
  -[CNPreferredForNameDescription valueClass]
  -[CNPreferredForNameDescription nilValue]
  -[CNPreferredForNameDescription CNValueForContact:]
  -[CNPreferredForNameDescription isEqualForContact:other:]
  -[CNPreferredForNameDescription encodeUsingCoder:contact:]
  -[CNPreferredForNameDescription decodeUsingCoder:contact:]
  -[CNPreferredForNameDescription setCNValue:onContact:]
  -[CNPreferredForNameDescription abPropertyID:]
  -[CNPreferredForNameDescription CNValueFromABBytes:length:]
  -[CNPreferredForNameDescription ABValueForABPerson:]
  -[CNPreferredForNameDescription setABValue:onABPerson:error:]


CNPreferredForImageDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPreferredForImageDescription init]
  -[CNPreferredForImageDescription valueClass]
  -[CNPreferredForImageDescription nilValue]
  -[CNPreferredForImageDescription CNValueForContact:]
  -[CNPreferredForImageDescription isEqualForContact:other:]
  -[CNPreferredForImageDescription encodeUsingCoder:contact:]
  -[CNPreferredForImageDescription decodeUsingCoder:contact:]
  -[CNPreferredForImageDescription setCNValue:onContact:]
  -[CNPreferredForImageDescription abPropertyID:]
  -[CNPreferredForImageDescription CNValueFromABBytes:length:]
  -[CNPreferredForImageDescription ABValueForABPerson:]
  -[CNPreferredForImageDescription setABValue:onABPerson:error:]


CNPreferredLikenessSourceDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPreferredLikenessSourceDescription init]
  -[CNPreferredLikenessSourceDescription valueClass]
  -[CNPreferredLikenessSourceDescription CNValueForContact:]
  -[CNPreferredLikenessSourceDescription isEqualForContact:other:]
  -[CNPreferredLikenessSourceDescription encodeUsingCoder:contact:]
  -[CNPreferredLikenessSourceDescription decodeUsingCoder:contact:]
  -[CNPreferredLikenessSourceDescription setCNValue:onContact:]
  -[CNPreferredLikenessSourceDescription abPropertyID:]


CNPreferredApplePersonaIdentifierDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPreferredApplePersonaIdentifierDescription init]
  -[CNPreferredApplePersonaIdentifierDescription valueClass]
  -[CNPreferredApplePersonaIdentifierDescription CNValueForContact:]
  -[CNPreferredApplePersonaIdentifierDescription isEqualForContact:other:]
  -[CNPreferredApplePersonaIdentifierDescription encodeUsingCoder:contact:]
  -[CNPreferredApplePersonaIdentifierDescription decodeUsingCoder:contact:]
  -[CNPreferredApplePersonaIdentifierDescription setCNValue:onContact:]
  -[CNPreferredApplePersonaIdentifierDescription abPropertyID:]


CNContactTypeDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactTypeDescription init]
  -[CNContactTypeDescription valueClass]
  -[CNContactTypeDescription nilValue]
  -[CNContactTypeDescription isValidValue:error:]
  -[CNContactTypeDescription CNValueForContact:]
  -[CNContactTypeDescription isEqualForContact:other:]
  -[CNContactTypeDescription encodeUsingCoder:contact:]
  -[CNContactTypeDescription decodeUsingCoder:contact:]
  -[CNContactTypeDescription setCNValue:onContact:]
  -[CNContactTypeDescription ABValueFromCNValue:]
  -[CNContactTypeDescription CNValueFromABValue:]
  -[CNContactTypeDescription abPropertyID:]
  -[CNContactTypeDescription CNValueFromABBytes:length:]


CNPhoneNumbersDescription : CNMultiValuePropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPhoneNumbersDescription init]
  -[CNPhoneNumbersDescription ABMultiValueValueFromCNLabeledValueValue:]
  -[CNPhoneNumbersDescription isNonnull]
  -[CNPhoneNumbersDescription CNValueForContact:]
  -[CNPhoneNumbersDescription isEqualForContact:other:]
  -[CNPhoneNumbersDescription encodeUsingCoder:contact:]
  -[CNPhoneNumbersDescription decodeUsingCoder:contact:]
  -[CNPhoneNumbersDescription setCNValue:onContact:]
  -[CNPhoneNumbersDescription canUnifyValue:withValue:]
  -[CNPhoneNumbersDescription fromPlistTransform]
  -[CNPhoneNumbersDescription equivalentLabelSets]
  -[CNPhoneNumbersDescription standardLabels]
  -[CNPhoneNumbersDescription stringForIndexingForContact:]
  -[CNPhoneNumbersDescription labeledValueClass]
  -[CNPhoneNumbersDescription plistTransform]
  -[CNPhoneNumbersDescription abPropertyID:]
  -[CNPhoneNumbersDescription CNLabeledValueValueFromABMultiValueValueBytes:length:]
  -[CNPhoneNumbersDescription CNLabeledValueValueFromABMultiValueValue:]


CNEmailAddressesDescription : CNMultiValuePropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNEmailAddressesDescription init]
  -[CNEmailAddressesDescription isNonnull]
  -[CNEmailAddressesDescription CNValueForContact:]
  -[CNEmailAddressesDescription isEqualForContact:other:]
  -[CNEmailAddressesDescription encodeUsingCoder:contact:]
  -[CNEmailAddressesDescription decodeUsingCoder:contact:]
  -[CNEmailAddressesDescription setCNValue:onContact:]
  -[CNEmailAddressesDescription canUnifyValue:withValue:]
  -[CNEmailAddressesDescription standardLabels]
  -[CNEmailAddressesDescription abPropertyID:]


CNUrlAddressesDescription : CNMultiValuePropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNUrlAddressesDescription init]
  -[CNUrlAddressesDescription isNonnull]
  -[CNUrlAddressesDescription CNValueForContact:]
  -[CNUrlAddressesDescription isEqualForContact:other:]
  -[CNUrlAddressesDescription encodeUsingCoder:contact:]
  -[CNUrlAddressesDescription decodeUsingCoder:contact:]
  -[CNUrlAddressesDescription setCNValue:onContact:]
  -[CNUrlAddressesDescription canUnifyValue:withValue:]
  -[CNUrlAddressesDescription standardLabels]
  -[CNUrlAddressesDescription abPropertyID:]


CNCalendarURIsDescription : CNMultiValuePropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNCalendarURIsDescription init]
  -[CNCalendarURIsDescription CNValueForContact:]
  -[CNCalendarURIsDescription isEqualForContact:other:]
  -[CNCalendarURIsDescription encodeUsingCoder:contact:]
  -[CNCalendarURIsDescription decodeUsingCoder:contact:]
  -[CNCalendarURIsDescription setCNValue:onContact:]
  -[CNCalendarURIsDescription ABValueFromCNValue:]
  -[CNCalendarURIsDescription CNValueFromABValue:]
  -[CNCalendarURIsDescription ABValueForABPerson:]
  -[CNCalendarURIsDescription setABValue:onABPerson:error:]


CNDatesDescription : CNMultiValuePropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNDatesDescription init]
  -[CNDatesDescription ABMultiValueValueFromCNLabeledValueValue:]
  -[CNDatesDescription isNonnull]
  -[CNDatesDescription CNValueForContact:]
  -[CNDatesDescription isEqualForContact:other:]
  -[CNDatesDescription encodeUsingCoder:contact:]
  -[CNDatesDescription decodeUsingCoder:contact:]
  -[CNDatesDescription setCNValue:onContact:]
  -[CNDatesDescription canUnifyValue:withValue:]
  -[CNDatesDescription isValue:preferredToUnifiedValue:]
  -[CNDatesDescription fromPlistTransform]
  -[CNDatesDescription standardLabels]
  -[CNDatesDescription labeledValueClass]
  -[CNDatesDescription isValidMultiValueValue:error:]
  -[CNDatesDescription abPropertyID:]
  -[CNDatesDescription CNLabeledValueValueFromABMultiValueValueBytes:length:]
  -[CNDatesDescription CNLabeledValueValueFromABMultiValueValue:]


CNContactRelationsDescriptionLabels : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *preferredLanguages
 @property  NSArray *standardLabels
 @property  NSArray *standardLocaleSpecificLabels
 @property  NSArray *extendedLabels
 @property  NSArray *extendedLocaleSpecificLabels
 @property  NSDictionary *localizedStringsByLabelKey

  // instance methods
  -[CNContactRelationsDescriptionLabels .cxx_destruct]
  -[CNContactRelationsDescriptionLabels preferredLanguages]
  -[CNContactRelationsDescriptionLabels standardLabels]
  -[CNContactRelationsDescriptionLabels initWithPreferredLanguages:standardLabels:standardLocaleSpecificLabels:extendedLabels:extendedLocaleSpecificLabels:localizedStringsByLabelKey:]
  -[CNContactRelationsDescriptionLabels standardLocaleSpecificLabels]
  -[CNContactRelationsDescriptionLabels extendedLabels]
  -[CNContactRelationsDescriptionLabels extendedLocaleSpecificLabels]
  -[CNContactRelationsDescriptionLabels localizedStringsByLabelKey]


CNContactRelationLocalizationProvider : NSObject /usr/lib/libSystem.B.dylib <CNContactRelationLocalizationProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactRelationLocalizationProvider preferredLanguages]
  +[CNContactRelationLocalizationProvider supplementalLabelURLPairsForLanguages:]


CNContactRelationsDescription : CNMultiValuePropertyDescription <CNAbstractPropertyDescription>
 @property  NSObject<OS_dispatch_queue> *generationQueue
 @property  CNContactRelationsDescriptionLabels *cachedLabels
 @property  Class provider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContactRelationsDescription init]
  -[CNContactRelationsDescription .cxx_destruct]
  -[CNContactRelationsDescription provider]
  -[CNContactRelationsDescription ABMultiValueValueFromCNLabeledValueValue:]
  -[CNContactRelationsDescription isNonnull]
  -[CNContactRelationsDescription managedLabels]
  -[CNContactRelationsDescription localizedStringForLabel:]
  -[CNContactRelationsDescription CNValueForContact:]
  -[CNContactRelationsDescription isEqualForContact:other:]
  -[CNContactRelationsDescription encodeUsingCoder:contact:]
  -[CNContactRelationsDescription decodeUsingCoder:contact:]
  -[CNContactRelationsDescription setCNValue:onContact:]
  -[CNContactRelationsDescription canUnifyValue:withValue:]
  -[CNContactRelationsDescription fromPlistTransform]
  -[CNContactRelationsDescription standardLabels]
  -[CNContactRelationsDescription labeledValueClass]
  -[CNContactRelationsDescription plistTransform]
  -[CNContactRelationsDescription initWithLocalizationProvider:]
  -[CNContactRelationsDescription _builtInStandardLabels]
  -[CNContactRelationsDescription _addLocalizedLabels:fromLanguagePlist:languageIdentifier:toDictionary:conflictInfo:]
  -[CNContactRelationsDescription _builtInExtendedLabels]
  -[CNContactRelationsDescription generationQueue]
  -[CNContactRelationsDescription cachedLabels]
  -[CNContactRelationsDescription labelsForPreferredLanguages:]
  -[CNContactRelationsDescription setCachedLabels:]
  -[CNContactRelationsDescription cachedLabelsForPreferredLanguages:]
  -[CNContactRelationsDescription standardLabelsWithOptions:]
  -[CNContactRelationsDescription abPropertyID:]
  -[CNContactRelationsDescription CNLabeledValueValueFromABMultiValueValueBytes:length:]
  -[CNContactRelationsDescription CNLabeledValueValueFromABMultiValueValue:]


CNInstantMessageAddressesDescription : CNCompoundMultiValuePropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNInstantMessageAddressesDescription init]
  -[CNInstantMessageAddressesDescription ABMultiValueValueFromCNLabeledValueValue:]
  -[CNInstantMessageAddressesDescription isNonnull]
  -[CNInstantMessageAddressesDescription CNValueForContact:]
  -[CNInstantMessageAddressesDescription isEqualForContact:other:]
  -[CNInstantMessageAddressesDescription encodeUsingCoder:contact:]
  -[CNInstantMessageAddressesDescription decodeUsingCoder:contact:]
  -[CNInstantMessageAddressesDescription setCNValue:onContact:]
  -[CNInstantMessageAddressesDescription canUnifyValue:withValue:]
  -[CNInstantMessageAddressesDescription labeledValueClass]
  -[CNInstantMessageAddressesDescription dictionaryTransform]
  -[CNInstantMessageAddressesDescription fromDictionaryTransform]
  -[CNInstantMessageAddressesDescription summarizationKeys]
  -[CNInstantMessageAddressesDescription abPropertyID:]
  -[CNInstantMessageAddressesDescription CNLabeledValueValueFromABMultiValueValue:]


CNSocialProfilesDescription : CNCompoundMultiValuePropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNSocialProfilesDescription init]
  -[CNSocialProfilesDescription ABMultiValueValueFromCNLabeledValueValue:]
  -[CNSocialProfilesDescription isNonnull]
  -[CNSocialProfilesDescription CNValueForContact:]
  -[CNSocialProfilesDescription isEqualForContact:other:]
  -[CNSocialProfilesDescription encodeUsingCoder:contact:]
  -[CNSocialProfilesDescription decodeUsingCoder:contact:]
  -[CNSocialProfilesDescription setCNValue:onContact:]
  -[CNSocialProfilesDescription canUnifyValue:withValue:]
  -[CNSocialProfilesDescription labeledValueClass]
  -[CNSocialProfilesDescription dictionaryTransform]
  -[CNSocialProfilesDescription fromDictionaryTransform]
  -[CNSocialProfilesDescription summarizationKeys]
  -[CNSocialProfilesDescription abPropertyID:]
  -[CNSocialProfilesDescription CNLabeledValueValueFromABMultiValueValue:]


CNPostalAddressesDescription : CNCompoundMultiValuePropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPostalAddressesDescription init]
  -[CNPostalAddressesDescription ABMultiValueValueFromCNLabeledValueValue:]
  -[CNPostalAddressesDescription isNonnull]
  -[CNPostalAddressesDescription CNValueForContact:]
  -[CNPostalAddressesDescription isEqualForContact:other:]
  -[CNPostalAddressesDescription encodeUsingCoder:contact:]
  -[CNPostalAddressesDescription decodeUsingCoder:contact:]
  -[CNPostalAddressesDescription setCNValue:onContact:]
  -[CNPostalAddressesDescription canUnifyValue:withValue:]
  -[CNPostalAddressesDescription labeledValueClass]
  -[CNPostalAddressesDescription dictionaryTransform]
  -[CNPostalAddressesDescription fromDictionaryTransform]
  -[CNPostalAddressesDescription summarizationKeys]
  -[CNPostalAddressesDescription abPropertyID:]
  -[CNPostalAddressesDescription CNLabeledValueValueFromABMultiValueValue:]


CNPhonemeDataDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPhonemeDataDescription init]
  -[CNPhonemeDataDescription CNValueForContact:]
  -[CNPhonemeDataDescription isEqualForContact:other:]
  -[CNPhonemeDataDescription encodeUsingCoder:contact:]
  -[CNPhonemeDataDescription decodeUsingCoder:contact:]
  -[CNPhonemeDataDescription setCNValue:onContact:]
  -[CNPhonemeDataDescription abPropertyID:]


CNAbstractActivityAlertDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNAbstractActivityAlertDescription valueClass]
  -[CNAbstractActivityAlertDescription canUnifyValue:withValue:]
  -[CNAbstractActivityAlertDescription ABValueFromCNValue:]
  -[CNAbstractActivityAlertDescription CNValueFromABValue:]
  -[CNAbstractActivityAlertDescription CNMutableValueForABMultivalue]


CNCallAlertDescription : CNAbstractActivityAlertDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNCallAlertDescription init]
  -[CNCallAlertDescription CNValueForContact:]
  -[CNCallAlertDescription isEqualForContact:other:]
  -[CNCallAlertDescription encodeUsingCoder:contact:]
  -[CNCallAlertDescription decodeUsingCoder:contact:]
  -[CNCallAlertDescription setCNValue:onContact:]
  -[CNCallAlertDescription abPropertyID:]
  -[CNCallAlertDescription applyABMultivalueValueBytes:length:identifier:legacyIdentifier:label:toCNMultivalueRepresentation:]
  -[CNCallAlertDescription ABValueForABPerson:]
  -[CNCallAlertDescription setABValue:onABPerson:error:]


CNTextAlertDescription : CNAbstractActivityAlertDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNTextAlertDescription init]
  -[CNTextAlertDescription CNValueForContact:]
  -[CNTextAlertDescription isEqualForContact:other:]
  -[CNTextAlertDescription encodeUsingCoder:contact:]
  -[CNTextAlertDescription decodeUsingCoder:contact:]
  -[CNTextAlertDescription setCNValue:onContact:]
  -[CNTextAlertDescription abPropertyID:]
  -[CNTextAlertDescription applyABMultivalueValueBytes:length:identifier:legacyIdentifier:label:toCNMultivalueRepresentation:]
  -[CNTextAlertDescription ABValueForABPerson:]
  -[CNTextAlertDescription setABValue:onABPerson:error:]


CNMapsDataDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNMapsDataDescription init]
  -[CNMapsDataDescription CNValueForContact:]
  -[CNMapsDataDescription isEqualForContact:other:]
  -[CNMapsDataDescription encodeUsingCoder:contact:]
  -[CNMapsDataDescription decodeUsingCoder:contact:]
  -[CNMapsDataDescription setCNValue:onContact:]
  -[CNMapsDataDescription abPropertyID:]


CNPreferredChannelDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNPreferredChannelDescription init]
  -[CNPreferredChannelDescription CNValueForContact:]
  -[CNPreferredChannelDescription isEqualForContact:other:]
  -[CNPreferredChannelDescription encodeUsingCoder:contact:]
  -[CNPreferredChannelDescription decodeUsingCoder:contact:]
  -[CNPreferredChannelDescription setCNValue:onContact:]
  -[CNPreferredChannelDescription resetGuardianManagedValueOnContact:]
  -[CNPreferredChannelDescription abPropertyID:]


CNDowntimeWhitelistDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNDowntimeWhitelistDescription init]
  -[CNDowntimeWhitelistDescription CNValueForContact:]
  -[CNDowntimeWhitelistDescription isEqualForContact:other:]
  -[CNDowntimeWhitelistDescription encodeUsingCoder:contact:]
  -[CNDowntimeWhitelistDescription decodeUsingCoder:contact:]
  -[CNDowntimeWhitelistDescription setCNValue:onContact:]
  -[CNDowntimeWhitelistDescription resetGuardianManagedValueOnContact:]
  -[CNDowntimeWhitelistDescription abPropertyID:]


CNImageTypeDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNImageTypeDescription init]
  -[CNImageTypeDescription valueClass]
  -[CNImageTypeDescription CNValueForContact:]
  -[CNImageTypeDescription isEqualForContact:other:]
  -[CNImageTypeDescription encodeUsingCoder:contact:]
  -[CNImageTypeDescription decodeUsingCoder:contact:]
  -[CNImageTypeDescription setCNValue:onContact:]
  -[CNImageTypeDescription abPropertyID:]


CNImageHashDescription : CNPropertyDescription <CNAbstractPropertyDescription>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNImageHashDescription init]
  -[CNImageHashDescription valueClass]
  -[CNImageHashDescription CNValueForContact:]
  -[CNImageHashDescription isEqualForContact:other:]
  -[CNImageHashDescription encodeUsingCoder:contact:]
  -[CNImageHashDescription decodeUsingCoder:contact:]
  -[CNImageHashDescription setCNValue:onContact:]
  -[CNImageHashDescription abPropertyID:]
  -[CNImageHashDescription CNValueFromABBytes:length:]


CNMockSpotlightIndexingLogger : NSObject /usr/lib/libSystem.B.dylib <CNSpotlightIndexingLogger>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNMockSpotlightIndexingLogger indexingContacts:]
  -[CNMockSpotlightIndexingLogger reindexingAllSearchableItems:]
  -[CNMockSpotlightIndexingLogger willReindexItemsWithIdentifiers:]
  -[CNMockSpotlightIndexingLogger reindexingSearchableItemsWithIdentifiers:]
  -[CNMockSpotlightIndexingLogger deferringReindexAsFailedToPrepareForReindexing]
  -[CNMockSpotlightIndexingLogger willStartIndexingWithClientState:]
  -[CNMockSpotlightIndexingLogger noContactChangesToIndex]
  -[CNMockSpotlightIndexingLogger willReindexAsFailedToRegisterForChangeHistory:error:]
  -[CNMockSpotlightIndexingLogger willReindexAsFailedToFetchChangeHistory:error:]
  -[CNMockSpotlightIndexingLogger willReindexAsChangeHistoryIsTruncated:]
  -[CNMockSpotlightIndexingLogger willReindexAsFailedToFetchClientState]
  -[CNMockSpotlightIndexingLogger willResumeReindexingAsNotFinished]
  -[CNMockSpotlightIndexingLogger willReindexAsIndexVersionChangedFrom:to:]
  -[CNMockSpotlightIndexingLogger willReindexAsSnapshotAnchorChangedFrom:to:]
  -[CNMockSpotlightIndexingLogger willResumeIndexingAfterOffset:]
  -[CNMockSpotlightIndexingLogger failedToCreateSearchableItemForContactIdentifier:]
  -[CNMockSpotlightIndexingLogger didNotFinishIndexingForFullSyncWithError:]
  -[CNMockSpotlightIndexingLogger finishedIndexingForFullSyncWithCount:]
  -[CNMockSpotlightIndexingLogger failedToFetchContactForChange:]
  -[CNMockSpotlightIndexingLogger didNotFinishIndexingForDeltaSyncWithError:]
  -[CNMockSpotlightIndexingLogger finishedIndexingForDeltaSyncWithUpdateCount:deleteCount:]
  -[CNMockSpotlightIndexingLogger finishedBatchIndexWithUpdateIdentifiers:deleteIdentifiers:]
  -[CNMockSpotlightIndexingLogger willBatchIndexForFullSyncWithCount:lastOffset:doneFullSync:]
  -[CNMockSpotlightIndexingLogger willBatchIndexForDeltaSyncWithUpdateCount:deleteCount:]
  -[CNMockSpotlightIndexingLogger willClearChangeHistory:toChangeAnchor:]
  -[CNMockSpotlightIndexingLogger failedToClearChangeHistory:toChangeAnchor:error:]
  -[CNMockSpotlightIndexingLogger failedToFetchSearchableForContactIdentifiers:error:]
  -[CNMockSpotlightIndexingLogger verifyingIndex:]
  -[CNMockSpotlightIndexingLogger verifiedIndexWithSummmary:]
  -[CNMockSpotlightIndexingLogger failedToFetchClientStateFromSpotlight:willRetry:]
  -[CNMockSpotlightIndexingLogger failedToBeginIndexBatchWithSpotlight:]
  -[CNMockSpotlightIndexingLogger failedToEndIndexBatchWithSpotlight:willRetry:]
  -[CNMockSpotlightIndexingLogger failedToJournalSearchableItemsForIndexingWithSpotlight:identifiers:willRetry:]
  -[CNMockSpotlightIndexingLogger failedToJournalItemIdentifiersForDeletionWithSpotlight:identifiers:willRetry:]
  -[CNMockSpotlightIndexingLogger failedToDeleteAllSearchableItemsWithSpotlight:willRetry:]
  -[CNMockSpotlightIndexingLogger failedToUnarchiveClientStateData:]
  -[CNMockSpotlightIndexingLogger failedToCreateUnarchiverForClientStateWithError:]


CNAccount : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  int iOSLegacyIdentifier
 @property  NSString *identifier
 @property  NSString *externalIdentifierString

  // class methods
  +[CNAccount supportsSecureCoding]
  +[CNAccount identifierProvider]
  +[CNAccount makeIdentifier]
  +[CNAccount makeIdentifierString]
  +[CNAccount localAccount]
  +[CNAccount predicateForAccountWithExternalIdentifier:]
  +[CNAccount predicateForAccountForContainerWithIdentifier:]
  +[CNAccount predicateForAccountsWithIdentifiers:]

  // instance methods
  -[CNAccount init]
  -[CNAccount isEqual:]
  -[CNAccount copyWithZone:]
  -[CNAccount encodeWithCoder:]
  -[CNAccount initWithCoder:]
  -[CNAccount .cxx_destruct]
  -[CNAccount identifier]
  -[CNAccount iOSLegacyIdentifier]
  -[CNAccount initWithIdentifier:externalIdentifier:]
  -[CNAccount initWithExternalIdentifier:]
  -[CNAccount externalIdentifierString]
  -[CNAccount initWithIdentifier:externalIdentifier:iOSLegacyIdentifier:]


CNSuggestedContactIdentifierPredicate : CNPredicate <CNSuggestedContactPredicate>
 @property  unsigned long suggestionIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNSuggestedContactIdentifierPredicate supportsSecureCoding]

  // instance methods
  -[CNSuggestedContactIdentifierPredicate encodeWithCoder:]
  -[CNSuggestedContactIdentifierPredicate initWithCoder:]
  -[CNSuggestedContactIdentifierPredicate cn_supportsNativeSorting]
  -[CNSuggestedContactIdentifierPredicate sgContactMatchesWithSortOrder:mutableObjects:service:error:]
  -[CNSuggestedContactIdentifierPredicate suggestionIdentifier]
  -[CNSuggestedContactIdentifierPredicate initWithSuggestionIdentifier:]


CNMeContactsPredicate : CNPredicate
  // class methods
  +[CNMeContactsPredicate supportsSecureCoding]

  // instance methods
  -[CNMeContactsPredicate isEqual:]
  -[CNMeContactsPredicate initWithCoder:]
  -[CNMeContactsPredicate contactsFromDonationStore:]


CNiOSABFullTextSearchContactPredicate : CNFullTextSearchContactPredicate <CNiOSContactPredicate, CNiOSContactAsyncPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNiOSABFullTextSearchContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:nserror:]
  -[CNiOSABFullTextSearchContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABFullTextSearchContactPredicate cn_supportsNativeSorting]
  -[CNiOSABFullTextSearchContactPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABFullTextSearchContactPredicate cn_supportsEncodedFetching]
  -[CNiOSABFullTextSearchContactPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABFullTextSearchContactPredicate initWithSearchString:containerIdentifiers:groupIdentifiers:]
  -[CNiOSABFullTextSearchContactPredicate _predicatesWithAddressBook:environment:]
  -[CNiOSABFullTextSearchContactPredicate cn_fetchPeopleInAddressBook:fetchRequest:progressiveResults:completion:environment:]


CNContactImageManagedObject : NSManagedObject /System/Library/PrivateFrameworks/vCard.framework/vCard
 @property  NSUUID *identifier
 @property  NSString *contactIdentifier
 @property  NSData *imageData
 @property  NSDate *lastUsedDate
 @property  NSString *cropRectString
 @property  NSNumber *source
 @property  NSString *sourceIdentifier
 @property  NSString *variant

  // class methods
  +[CNContactImageManagedObject managedObjectToContactImageTransform]

  // instance methods
  -[CNContactImageManagedObject cropRectStringFromCGRect:]
  -[CNContactImageManagedObject updateWithContactImage:]
  -[CNContactImageManagedObject setupWithContactImage:contactIdentifier:]


CNContactsLoggerProvider : NSObject /usr/lib/libSystem.B.dylib <CNContactsLoggerProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <CNContactsLogger> *contactsLogger
 @property  <CNSpotlightIndexingLogger> *spotlightIndexingLogger
 @property  <CNRegulatoryLogger> *regulatoryLogger
 @property  <CNFavoritesLogger> *favoritesLogger
 @property  <CNGeminiLogger> *geminiLogger

  // class methods
  +[CNContactsLoggerProvider defaultProvider]

  // instance methods
  -[CNContactsLoggerProvider .cxx_destruct]
  -[CNContactsLoggerProvider spotlightIndexingLogger]
  -[CNContactsLoggerProvider contactsLogger]
  -[CNContactsLoggerProvider regulatoryLogger]
  -[CNContactsLoggerProvider favoritesLogger]
  -[CNContactsLoggerProvider geminiLogger]


CNChangeHistoryClearRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSArray *contactChangeIDs
 @property  NSArray *groupChangeIDs
 @property  NSString *containerIdentifier
 @property  NSString *clientIdentifier
 @property  CNChangeHistoryAnchor *toChangeAnchor

  // class methods
  +[CNChangeHistoryClearRequest supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryClearRequest encodeWithCoder:]
  -[CNChangeHistoryClearRequest initWithCoder:]
  -[CNChangeHistoryClearRequest .cxx_destruct]
  -[CNChangeHistoryClearRequest containerIdentifier]
  -[CNChangeHistoryClearRequest setContainerIdentifier:]
  -[CNChangeHistoryClearRequest clientIdentifier]
  -[CNChangeHistoryClearRequest initWithClientIdentifier:]
  -[CNChangeHistoryClearRequest setToChangeAnchor:]
  -[CNChangeHistoryClearRequest toChangeAnchor]
  -[CNChangeHistoryClearRequest contactChangeIDs]
  -[CNChangeHistoryClearRequest groupChangeIDs]
  -[CNChangeHistoryClearRequest setContactChangeIDs:]
  -[CNChangeHistoryClearRequest setGroupChangeIDs:]


CNCalculatesContactDiff : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNCalculatesContactDiff addMultiValueUpdateTo:forProperty:contact1:contact2:]
  +[CNCalculatesContactDiff addSingleValueUpdateTo:forProperty:contact1:contact2:]
  +[CNCalculatesContactDiff diffContact:to:error:]


CNSocialProfileContactPredicate : CNPredicate
 @property  CNSocialProfile *socialProfile

  // class methods
  +[CNSocialProfileContactPredicate supportsSecureCoding]

  // instance methods
  -[CNSocialProfileContactPredicate isEqual:]
  -[CNSocialProfileContactPredicate encodeWithCoder:]
  -[CNSocialProfileContactPredicate initWithCoder:]
  -[CNSocialProfileContactPredicate .cxx_destruct]
  -[CNSocialProfileContactPredicate socialProfile]
  -[CNSocialProfileContactPredicate initWithSocialProfile:]


CNActivityAlert : NSObject /usr/lib/libSystem.B.dylib <CNObjectValidation, NSCopying, NSSecureCoding>
 @property  NSString *sound
 @property  NSString *vibration
 @property  BOOL ignoreMute
 @property  NSDictionary *userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNActivityAlert supportsSecureCoding]

  // instance methods
  -[CNActivityAlert isEqual:]
  -[CNActivityAlert copyWithZone:]
  -[CNActivityAlert mutableCopyWithZone:]
  -[CNActivityAlert userInfo]
  -[CNActivityAlert encodeWithCoder:]
  -[CNActivityAlert initWithCoder:]
  -[CNActivityAlert .cxx_destruct]
  -[CNActivityAlert setUserInfo:]
  -[CNActivityAlert setSound:]
  -[CNActivityAlert sound]
  -[CNActivityAlert isValid:]
  -[CNActivityAlert vibration]
  -[CNActivityAlert ignoreMute]
  -[CNActivityAlert initWithSound:vibration:ignoreMute:userInfo:]
  -[CNActivityAlert setVibration:]
  -[CNActivityAlert setIgnoreMute:]
  -[CNActivityAlert initWithSound:vibration:ignoreMute:]


CNContactImageSaveRequest : NSObject /usr/lib/libSystem.B.dylib <CNContactImageRequest>
 @property  CNContactImage *image
 @property  long long operationType
 @property  NSString *attributeName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSPersistentStoreRequest *persistentStoreRequest
 @property  NSArray *contactIdentifiers

  // class methods
  +[CNContactImageSaveRequest saveRequestToCreateImage:forContactIdentifier:]
  +[CNContactImageSaveRequest saveRequestToDeleteImagesForContactIdentifiers:]
  +[CNContactImageSaveRequest saveRequestToDeleteImageForIdentifier:]

  // instance methods
  -[CNContactImageSaveRequest .cxx_destruct]
  -[CNContactImageSaveRequest operationType]
  -[CNContactImageSaveRequest image]
  -[CNContactImageSaveRequest persistentStoreRequest]
  -[CNContactImageSaveRequest contactIdentifiers]
  -[CNContactImageSaveRequest setContactIdentifiers:]
  -[CNContactImageSaveRequest initWithContactImage:contactIdentifiers:attributeName:operationType:]
  -[CNContactImageSaveRequest deleteStoreRequest]
  -[CNContactImageSaveRequest createStoreRequest]
  -[CNContactImageSaveRequest attributeName]


CNMutableInstantMessageAddress : CNInstantMessageAddress
 @property  NSString *username
 @property  NSString *service

  // instance methods
  -[CNMutableInstantMessageAddress copyWithZone:]
  -[CNMutableInstantMessageAddress freeze]


CNContactsUserDefaults : NSObject /usr/lib/libSystem.B.dylib
 @property  long long displayNameOrder
 @property  long long shortNameFormat
 @property  BOOL shortNameFormatEnabled
 @property  BOOL shortNameFormatPrefersNicknames
 @property  long long sortOrder
 @property  NSString *countryCode

  // class methods
  +[CNContactsUserDefaults sharedDefaults]
  +[CNContactsUserDefaults flushSharedInstance]

  // instance methods
  -[CNContactsUserDefaults init]
  -[CNContactsUserDefaults countryCode]
  -[CNContactsUserDefaults shortNameFormat]
  -[CNContactsUserDefaults setShortNameFormat:]
  -[CNContactsUserDefaults sortOrder]
  -[CNContactsUserDefaults shortNameFormatPrefersNicknames]
  -[CNContactsUserDefaults isShortNameFormatEnabled]
  -[CNContactsUserDefaults changeNotificationName]
  -[CNContactsUserDefaults displayNameOrder]
  -[CNContactsUserDefaults newContactDisplayNameOrder]
  -[CNContactsUserDefaults setDisplayNameOrder:]
  -[CNContactsUserDefaults setShortNameFormatEnabled:]
  -[CNContactsUserDefaults setShortNameFormatPrefersNicknames:]
  -[CNContactsUserDefaults filteredGroupAndContainerIDs]
  -[CNContactsUserDefaults setFilteredGroupAndContainerIDs:]


CNUnifiedContacts : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNUnifiedContacts unifyMultivalues:forProperty:]
  +[CNUnifiedContacts indexOfPreferredContactForUnifying:includingMainStoreContacts:]
  +[CNUnifiedContacts _unifyContactsSortedByPreference:includingMainStoreContacts:]
  +[CNUnifiedContacts identifierMapForUnifiedContact:backingContacts:]
  +[CNUnifiedContacts identifierMapForUnifiedMultiValue:backingMultiValues:forProperty:]
  +[CNUnifiedContacts indexOfUnifiedIdentifier:onNonUnifiedMultiValue:withIdentifierMap:]
  +[CNUnifiedContacts addLinkedIdentifier:toLabeledValue:]
  +[CNUnifiedContacts unifyAvailableKeysOfContacts:]
  +[CNUnifiedContacts unifyNamesOfContacts:withPreferredContact:intoContact:availableKeyDescriptor:]
  +[CNUnifiedContacts unifyNonNameSingleValuesOfContacts:withPreferredContact:intoContact:availableKeyDescriptor:]
  +[CNUnifiedContacts unifyImageOfContacts:intoContact:availableKeyDescriptor:]
  +[CNUnifiedContacts unifyMultiValuesOfContacts:intoContact:availableKeyDescriptor:]
  +[CNUnifiedContacts imageValuePropertiesByKey]
  +[CNUnifiedContacts makeNonNameSingleValuePropertiesByKey]
  +[CNUnifiedContacts nonNameSingleValuePropertiesByKey]
  +[CNUnifiedContacts unifySingleValuesProperties:ofContacts:intoContact:availableKeyDescriptor:]
  +[CNUnifiedContacts imageValuePropertyKeys]
  +[CNUnifiedContacts indexOfPreferredContactForImage:]
  +[CNUnifiedContacts firstNonNilValueForProperty:inContacts:]
  +[CNUnifiedContacts unifyMultiValue:intoMultiValue:forProperty:]
  +[CNUnifiedContacts shouldIncludeLabeledValue:fromSource:inDestination:forProperty:]
  +[CNUnifiedContacts shouldLabeledValue:replaceInferiorValueInMultiValue:forProperty:]
  +[CNUnifiedContacts replaceInferiorValueInMultiValue:withEntryAtIndex:fromMultiValue:forProperty:]
  +[CNUnifiedContacts doesMultiValue:needLabeledValue:fromMultiValue:forProperty:]
  +[CNUnifiedContacts addLinkedLabeledValue:toLabeledValue:]
  +[CNUnifiedContacts countOfLabel:value:inMultiValue:forProperty:]
  +[CNUnifiedContacts countOfLabelIncludingEquivalents:value:inMultiValue:forProperty:]
  +[CNUnifiedContacts countOfLabelsUnifiableWithLabel:valuesUnifiableWithValue:inMultiValue:forProperty:]
  +[CNUnifiedContacts indexesOfValuesInferiorTo:inMultiValue:forProperty:]
  +[CNUnifiedContacts indexesOfLabeledValuesUnifiableWithLabelValuePair:inMultiValue:forProperty:]
  +[CNUnifiedContacts indexOfValueMostInferiorTo:inMultiValue:forProperty:]
  +[CNUnifiedContacts identifierMapForUnifiedMultiValue:backingMultiValues:intoMap:forProperty:]
  +[CNUnifiedContacts correlateIdentifiersOfUnifiedMap:toIdentifiersOfMultiValueMap:intoMap:forProperty:]
  +[CNUnifiedContacts unifiedIdentifiersForLabeledValue:inUnifiedMap:forProperty:]
  +[CNUnifiedContacts unifiedIdentifiersForValue:inUnifiedMap:forProperty:]
  +[CNUnifiedContacts findFirstIdentifier:inMultiValue:]
  +[CNUnifiedContacts canUnifyLabel:withLabel:forProperty:]


CNiOSABLinkedContactsPredicate : CNLinkedContactsPredicate <CNiOSContactPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABLinkedContactsPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABLinkedContactsPredicate encodeWithCoder:]
  -[CNiOSABLinkedContactsPredicate initWithCoder:]
  -[CNiOSABLinkedContactsPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABLinkedContactsPredicate cn_supportsNativeSorting]
  -[CNiOSABLinkedContactsPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABLinkedContactsPredicate cn_supportsEncodedFetching]
  -[CNiOSABLinkedContactsPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]


CNiOSABMeContactsPredicate : CNMeContactsPredicate <CNiOSContactPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNiOSABMeContactsPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABMeContactsPredicate cn_supportsNativeSorting]
  -[CNiOSABMeContactsPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABMeContactsPredicate cn_supportsEncodedFetching]
  -[CNiOSABMeContactsPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]


CNMockLoggerProvider : NSObject /usr/lib/libSystem.B.dylib <CNContactsLoggerProvider>
 @property  <CNContactsLogger> *contactsLogger
 @property  <CNSpotlightIndexingLogger> *spotlightIndexingLogger
 @property  <CNRegulatoryLogger> *regulatoryLogger
 @property  <CNFavoritesLogger> *favoritesLogger
 @property  <CNGeminiLogger> *geminiLogger
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNMockLoggerProvider loggerProvider]

  // instance methods
  -[CNMockLoggerProvider .cxx_destruct]
  -[CNMockLoggerProvider spotlightIndexingLogger]
  -[CNMockLoggerProvider contactsLogger]
  -[CNMockLoggerProvider regulatoryLogger]
  -[CNMockLoggerProvider favoritesLogger]
  -[CNMockLoggerProvider geminiLogger]
  -[CNMockLoggerProvider setContactsLogger:]
  -[CNMockLoggerProvider setSpotlightIndexingLogger:]
  -[CNMockLoggerProvider setFavoritesLogger:]
  -[CNMockLoggerProvider setGeminiLogger:]
  -[CNMockLoggerProvider setRegulatoryLogger:]


CNContactsLogging : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNContactsLogging readingContactsDataOutOfProcess]


CNEmailAddressContactPredicate : CNPredicate <CNMAIDPredicate, CNSuggestedContactPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *emailAddresses
 @property  NSArray *groupIdentifiers
 @property  BOOL returnsMultipleResults

  // class methods
  +[CNEmailAddressContactPredicate supportsSecureCoding]

  // instance methods
  -[CNEmailAddressContactPredicate isEqual:]
  -[CNEmailAddressContactPredicate encodeWithCoder:]
  -[CNEmailAddressContactPredicate initWithCoder:]
  -[CNEmailAddressContactPredicate .cxx_destruct]
  -[CNEmailAddressContactPredicate emailAddresses]
  -[CNEmailAddressContactPredicate shortDebugDescription]
  -[CNEmailAddressContactPredicate sgContactMatchesWithSortOrder:mutableObjects:service:error:]
  -[CNEmailAddressContactPredicate groupIdentifiers]
  -[CNEmailAddressContactPredicate initWithEmailAddress:groupIdentifiers:returnMultipleResults:]
  -[CNEmailAddressContactPredicate returnsMultipleResults]
  -[CNEmailAddressContactPredicate initWithEmailAddress:returnMultipleResults:]
  -[CNEmailAddressContactPredicate contactsFromCLSDataStore:]


CNLaunchServicesRemoteAdapter : NSObject /usr/lib/libSystem.B.dylib <CNLaunchServicesAdapter>
  // class methods
  +[CNLaunchServicesRemoteAdapter launchServicesAdapterInterface]
  +[CNLaunchServicesRemoteAdapter createConnectionWithInterface:]

  // instance methods
  -[CNLaunchServicesRemoteAdapter applicationsForUserActivityType:withReply:]
  -[CNLaunchServicesRemoteAdapter applicationsAvailableForHandlingURLScheme:withReply:]
  -[CNLaunchServicesRemoteAdapter applicationForBundleIdentifier:withReply:]
  -[CNLaunchServicesRemoteAdapter openUserActivityData:inApplication:withReply:]
  -[CNLaunchServicesRemoteAdapter openSensitiveURLInBackground:withOptions:withReply:]


CNiOSPersonFetcher : NSObject /usr/lib/libSystem.B.dylib
 @property  CNiOSPersonFetchRequest *fetchRequest
 @property  ^v addressBook
 @property  CNContactsEnvironment *environment

  // class methods
  +[CNiOSPersonFetcher peopleForFetchRequest:matchInfos:inAddressBook:environment:error:]

  // instance methods
  -[CNiOSPersonFetcher dealloc]
  -[CNiOSPersonFetcher .cxx_destruct]
  -[CNiOSPersonFetcher environment]
  -[CNiOSPersonFetcher fetchRequest]
  -[CNiOSPersonFetcher initWithAddressBook:fetchRequest:environment:]
  -[CNiOSPersonFetcher fetchPeopleReturningMatchInfos:error:]
  -[CNiOSPersonFetcher fetchPeopleUsingNativeSortReturningMatchInfos:error:]
  -[CNiOSPersonFetcher shouldSortInMemory]
  -[CNiOSPersonFetcher sortPeople:]
  -[CNiOSPersonFetcher addressBook]
  -[CNiOSPersonFetcher executeFetchRequestWithProgressiveResults:completion:]


CNiOSABDefaultContainerForAccountPredicate : CNPredicate <CNiOSContainerPredicate>
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABDefaultContainerForAccountPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABDefaultContainerForAccountPredicate encodeWithCoder:]
  -[CNiOSABDefaultContainerForAccountPredicate initWithCoder:]
  -[CNiOSABDefaultContainerForAccountPredicate .cxx_destruct]
  -[CNiOSABDefaultContainerForAccountPredicate identifier]
  -[CNiOSABDefaultContainerForAccountPredicate initWithPredicate:]
  -[CNiOSABDefaultContainerForAccountPredicate initWithAccountIdentifier:]
  -[CNiOSABDefaultContainerForAccountPredicate cn_copyContainersInAddressBook:error:]
  -[CNiOSABDefaultContainerForAccountPredicate includesDisabledContainers]


CNiOSContactFetcher : NSObject /usr/lib/libSystem.B.dylib
 @property  ^v addressBook
 @property  CNContactFetchRequest *fetchRequest

  // class methods
  +[CNiOSContactFetcher linkedPeopleComparator]
  +[CNiOSContactFetcher contactsForFetchRequest:matchInfos:inAddressBook:environment:managedConfiguration:error:]

  // instance methods
  -[CNiOSContactFetcher dealloc]
  -[CNiOSContactFetcher .cxx_destruct]
  -[CNiOSContactFetcher fetchRequest]
  -[CNiOSContactFetcher addressBook]
  -[CNiOSContactFetcher executeFetchRequestWithProgressiveResults:completion:]
  -[CNiOSContactFetcher initWithFetchRequest:addressBook:environment:managedConfiguration:]
  -[CNiOSContactFetcher fetchContactsReturningMatchInfos:error:]
  -[CNiOSContactFetcher _batchLoadPropertiesForPeople:keysToFetch:]
  -[CNiOSContactFetcher unifyPeople:keysToFetch:abMatchInfos:filteredForAccountIdentifiers:outCNMatchInfos:]
  -[CNiOSContactFetcher _abMatchMetadataToCNContactMatchInfoArray:]
  -[CNiOSContactFetcher _contactsFromPeople:abMatchInfo:keysToFetch:]


CNContactHandleStringIndexer : NSObject /usr/lib/libSystem.B.dylib
 @property  CNCache *indexImpl
 @property  NSArray *targetHandleStrings
 @property  NSDictionary *index

  // class methods
  +[CNContactHandleStringIndexer indexByMatchingIndexWithRawHandles:toTargetHandleStrings:]

  // instance methods
  -[CNContactHandleStringIndexer init]
  -[CNContactHandleStringIndexer .cxx_destruct]
  -[CNContactHandleStringIndexer index]
  -[CNContactHandleStringIndexer initWithTargetHandleStrings:]
  -[CNContactHandleStringIndexer indexWithRawHandles]
  -[CNContactHandleStringIndexer indexContact:]
  -[CNContactHandleStringIndexer indexEmailAddressesOnContact:]
  -[CNContactHandleStringIndexer indexPhoneNumbersOnContact:]
  -[CNContactHandleStringIndexer indexContacts:]
  -[CNContactHandleStringIndexer indexImpl]
  -[CNContactHandleStringIndexer targetHandleStrings]


CNContactUpdate : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNContactUpdate updateWithValue:property:]
  +[CNContactUpdate updateMultiValueWithDiff:property:]


CNiOSABGroupsInContainerPredicate : CNPredicate <CNiOSGroupPredicate>
 @property  NSString *containerIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABGroupsInContainerPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABGroupsInContainerPredicate encodeWithCoder:]
  -[CNiOSABGroupsInContainerPredicate initWithCoder:]
  -[CNiOSABGroupsInContainerPredicate .cxx_destruct]
  -[CNiOSABGroupsInContainerPredicate containerIdentifier]
  -[CNiOSABGroupsInContainerPredicate initWithPredicate:]
  -[CNiOSABGroupsInContainerPredicate initWithContainerIdentifier:]
  -[CNiOSABGroupsInContainerPredicate cn_copyGroupsInAddressBook:error:]


CNChangeHistoryContactChange : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  long long changeType
 @property  CNContact *contact
 @property  NSArray *linkedContactIdentifiers
 @property  CNChangeHistoryAnchor *changeAnchor
 @property  NSNumber *changeID
 @property  NSString *externalID
 @property  NSNumber *imagesChanged
 @property  NSString *contactIdentifier

  // class methods
  +[CNChangeHistoryContactChange supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryContactChange isEqual:]
  -[CNChangeHistoryContactChange encodeWithCoder:]
  -[CNChangeHistoryContactChange initWithCoder:]
  -[CNChangeHistoryContactChange .cxx_destruct]
  -[CNChangeHistoryContactChange changeType]
  -[CNChangeHistoryContactChange contact]
  -[CNChangeHistoryContactChange setContact:]
  -[CNChangeHistoryContactChange contactIdentifier]
  -[CNChangeHistoryContactChange changeID]
  -[CNChangeHistoryContactChange setChangeType:]
  -[CNChangeHistoryContactChange changeAnchor]
  -[CNChangeHistoryContactChange externalID]
  -[CNChangeHistoryContactChange setChangeAnchor:]
  -[CNChangeHistoryContactChange setChangeID:]
  -[CNChangeHistoryContactChange setExternalID:]
  -[CNChangeHistoryContactChange initWithIdentifier:changeType:changeAnchor:changeID:externalID:imagesChanged:]
  -[CNChangeHistoryContactChange imagesChanged]
  -[CNChangeHistoryContactChange initWithIdentifier:changeType:changeAnchor:changeID:]
  -[CNChangeHistoryContactChange linkedContactIdentifiers]
  -[CNChangeHistoryContactChange setLinkedContactIdentifiers:]
  -[CNChangeHistoryContactChange setImagesChanged:]


CNContactBufferDecoder : NSObject /usr/lib/libSystem.B.dylib
 @property  long long state
 @property  CNMutableContact *pendingContact
 @property  NSMutableData *resumeBuffer
 @property  long long bytesNeededToResume
 @property  BOOL mutableResults
 @property  CNContactKeyVector *keyDescriptorToMakeAvailable
 @property  BOOL hasPendingContacts

  // instance methods
  -[CNContactBufferDecoder .cxx_destruct]
  -[CNContactBufferDecoder state]
  -[CNContactBufferDecoder setState:]
  -[CNContactBufferDecoder contactsFromBuffer:]
  -[CNContactBufferDecoder bytesNeededToResume]
  -[CNContactBufferDecoder completedPendingContactFromByteCursor:end:]
  -[CNContactBufferDecoder _contactFromByteCursor:end:]
  -[CNContactBufferDecoder keyDescriptorToMakeAvailable]
  -[CNContactBufferDecoder mutableResults]
  -[CNContactBufferDecoder resumeBuffer]
  -[CNContactBufferDecoder setBytesNeededToResume:]
  -[CNContactBufferDecoder _applyPropertiesFromFromByteCursor:end:]
  -[CNContactBufferDecoder pendingContact]
  -[CNContactBufferDecoder _applyMultivalueFromByteCursor:end:abPropertyID:]
  -[CNContactBufferDecoder _applyImageDataFromByteCursor:end:]
  -[CNContactBufferDecoder initWithKeyDescriptorToMakeAvailable:mutableResults:]
  -[CNContactBufferDecoder hasPendingContacts]
  -[CNContactBufferDecoder setMutableResults:]
  -[CNContactBufferDecoder setKeyDescriptorToMakeAvailable:]
  -[CNContactBufferDecoder setPendingContact:]
  -[CNContactBufferDecoder setResumeBuffer:]


CNMultiValueSingleUpdate : CNMultiValueUpdate
 @property  CNLabeledValue *value

  // instance methods
  -[CNMultiValueSingleUpdate .cxx_destruct]
  -[CNMultiValueSingleUpdate value]
  -[CNMultiValueSingleUpdate initWithValue:]


CNiOSEncodedPeopleFetcher : NSObject /usr/lib/libSystem.B.dylib <CNEncodedFetchCursor>
 @property  ^v addressBook
 @property  CNContactFetchRequest *contactFetchRequest
 @property  CNContactsEnvironment *environment
 @property  @? completionHandler
 @property  <CNEncodedFetchCursor> *cursor
 @property  <CNContactsLogger> *logger
 @property  CNManagedConfiguration *managedConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNiOSEncodedPeopleFetcher dealloc]
  -[CNiOSEncodedPeopleFetcher .cxx_destruct]
  -[CNiOSEncodedPeopleFetcher cursor]
  -[CNiOSEncodedPeopleFetcher environment]
  -[CNiOSEncodedPeopleFetcher logger]
  -[CNiOSEncodedPeopleFetcher completionHandler]
  -[CNiOSEncodedPeopleFetcher setCompletionHandler:]
  -[CNiOSEncodedPeopleFetcher setCursor:]
  -[CNiOSEncodedPeopleFetcher fetchNextBatchWithReply:]
  -[CNiOSEncodedPeopleFetcher managedConfiguration]
  -[CNiOSEncodedPeopleFetcher addressBook]
  -[CNiOSEncodedPeopleFetcher contactFetchRequest]
  -[CNiOSEncodedPeopleFetcher cursorWithError:]
  -[CNiOSEncodedPeopleFetcher initWithFetchRequest:addressBook:managedConfiguration:completionHandler:environment:]
  -[CNiOSEncodedPeopleFetcher fetchEncodedPeopleWithError:cancelationToken:batchHandler:]
  -[CNiOSEncodedPeopleFetcher setManagedConfiguration:]


CNEmptyPeopleFetcher : NSObject /usr/lib/libSystem.B.dylib <CNEncodedFetchCursor>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNEmptyPeopleFetcher fetchNextBatchWithReply:]


CNContainerPermissions : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  BOOL canCreateContacts
 @property  BOOL canDeleteContacts
 @property  BOOL canCreateGroups

  // class methods
  +[CNContainerPermissions supportsSecureCoding]

  // instance methods
  -[CNContainerPermissions init]
  -[CNContainerPermissions isEqual:]
  -[CNContainerPermissions copyWithZone:]
  -[CNContainerPermissions encodeWithCoder:]
  -[CNContainerPermissions initWithCoder:]
  -[CNContainerPermissions initWithCanCreateContacts:canDeleteContacts:canCreateGroups:]
  -[CNContainerPermissions canCreateContacts]
  -[CNContainerPermissions canDeleteContacts]
  -[CNContainerPermissions canCreateGroups]


CNContactsEnvironment : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSArray *delegateInfos
 @property  CNiOSABPredicateRunner *abPredicateRunner
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  <CNContactsLoggerProvider> *loggerProvider
 @property  CNiOSAddressBook *addressBook
 @property  NSURL *baseURL
 @property  <SGSuggestionsServiceContactsProtocol> *suggestionsService
 @property  <CNSiriIntelligenceSettingsProtocol> *siriIntelligenceSettings
 @property  BOOL useInMemoryStores

  // class methods
  +[CNContactsEnvironment supportsSecureCoding]
  +[CNContactsEnvironment currentEnvironment]
  +[CNContactsEnvironment baseURLWithDataLocationName:]
  +[CNContactsEnvironment unitTestingEnvironmentWithSchedulerProvider:loggerProvider:]
  +[CNContactsEnvironment inMemoryURL]
  +[CNContactsEnvironment unitTestingEnvironmentWithDataLocationName:schedulerProvider:loggerProvider:]
  +[CNContactsEnvironment unitTestingEnvironment]
  +[CNContactsEnvironment unitTestingEnvironmentWithDataLocationName:]
  +[CNContactsEnvironment unitTestingEnvironmentWithDataLocationName:schedulerProvider:]

  // instance methods
  -[CNContactsEnvironment init]
  -[CNContactsEnvironment copyWithZone:]
  -[CNContactsEnvironment encodeWithCoder:]
  -[CNContactsEnvironment initWithCoder:]
  -[CNContactsEnvironment baseURL]
  -[CNContactsEnvironment .cxx_destruct]
  -[CNContactsEnvironment setBaseURL:]
  -[CNContactsEnvironment loggerProvider]
  -[CNContactsEnvironment copyWithDelegateInfos:]
  -[CNContactsEnvironment useInMemoryStores]
  -[CNContactsEnvironment abPredicateRunner]
  -[CNContactsEnvironment addressBook]
  -[CNContactsEnvironment initWithSchedulerProvider:loggerProvider:]
  -[CNContactsEnvironment setDelegateInfos:]
  -[CNContactsEnvironment setAddressBook:]
  -[CNContactsEnvironment makeCurrentEnvironment]
  -[CNContactsEnvironment schedulerProvider]
  -[CNContactsEnvironment suggestionsService]
  -[CNContactsEnvironment setSuggestionsService:]
  -[CNContactsEnvironment siriIntelligenceSettings]
  -[CNContactsEnvironment setSiriIntelligenceSettings:]
  -[CNContactsEnvironment delegateInfos]
  -[CNContactsEnvironment setAbPredicateRunner:]


CNSecureCodingClassSets : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNSecureCodingClassSets keyDescriptorClasses]
  +[CNSecureCodingClassSets contactStoreClasses]


CNiOSABContactsUserDefaults : CNContactsUserDefaults
 @property  NSMutableDictionary *observerCountPerKey
 @property  NSCache *valueCache
 @property  CNiOSABContactsUserDefaultsABWrapper *abWrapper

  // instance methods
  -[CNiOSABContactsUserDefaults init]
  -[CNiOSABContactsUserDefaults dealloc]
  -[CNiOSABContactsUserDefaults .cxx_destruct]
  -[CNiOSABContactsUserDefaults countryCode]
  -[CNiOSABContactsUserDefaults removeObserver:forKeyPath:]
  -[CNiOSABContactsUserDefaults addObserver:forKeyPath:options:context:]
  -[CNiOSABContactsUserDefaults shortNameFormat]
  -[CNiOSABContactsUserDefaults setShortNameFormat:]
  -[CNiOSABContactsUserDefaults valueCache]
  -[CNiOSABContactsUserDefaults sortOrder]
  -[CNiOSABContactsUserDefaults shortNameFormatPrefersNicknames]
  -[CNiOSABContactsUserDefaults isShortNameFormatEnabled]
  -[CNiOSABContactsUserDefaults flushCache]
  -[CNiOSABContactsUserDefaults displayNameOrder]
  -[CNiOSABContactsUserDefaults newContactDisplayNameOrder]
  -[CNiOSABContactsUserDefaults setDisplayNameOrder:]
  -[CNiOSABContactsUserDefaults setShortNameFormatEnabled:]
  -[CNiOSABContactsUserDefaults setShortNameFormatPrefersNicknames:]
  -[CNiOSABContactsUserDefaults filteredGroupAndContainerIDs]
  -[CNiOSABContactsUserDefaults setFilteredGroupAndContainerIDs:]
  -[CNiOSABContactsUserDefaults initWithABWrapper:]
  -[CNiOSABContactsUserDefaults observerCountPerKey]
  -[CNiOSABContactsUserDefaults _registerObserverForKey:]
  -[CNiOSABContactsUserDefaults _unregisterObserverForKey:]
  -[CNiOSABContactsUserDefaults abWrapper]
  -[CNiOSABContactsUserDefaults setObserverCountPerKey:]
  -[CNiOSABContactsUserDefaults setValueCache:]


CNiOSABContactsUserDefaultsABWrapper : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[CNiOSABContactsUserDefaultsABWrapper ABPersonGetCompositeNameFormatForRecord:]
  -[CNiOSABContactsUserDefaultsABWrapper ABPersonGetEditNameFormat]
  -[CNiOSABContactsUserDefaultsABWrapper ABPersonSetCompositeNameFormat:]
  -[CNiOSABContactsUserDefaultsABWrapper ABPersonGetSortOrdering]
  -[CNiOSABContactsUserDefaultsABWrapper ABPersonSetShortNameFormat:]
  -[CNiOSABContactsUserDefaultsABWrapper ABPersonGetShortNameFormat]
  -[CNiOSABContactsUserDefaultsABWrapper ABPersonSetShortNameFormatEnabled:]
  -[CNiOSABContactsUserDefaultsABWrapper ABPersonGetShortNameFormatEnabled]
  -[CNiOSABContactsUserDefaultsABWrapper ABPersonSetShortNamePreferNicknames:]
  -[CNiOSABContactsUserDefaultsABWrapper ABPersonGetShortNamePreferNicknames]
  -[CNiOSABContactsUserDefaultsABWrapper abDefaultCountryCode]
  -[CNiOSABContactsUserDefaultsABWrapper displayedContactsFilterRepresentationPref]
  -[CNiOSABContactsUserDefaultsABWrapper setDisplayedContactsFilterRepresentationPref:]


CNContainerIdentifiersPredicate : CNPredicate <CNCDContainerPredicate>
 @property  NSArray *identifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNContainerIdentifiersPredicate .cxx_destruct]
  -[CNContainerIdentifiersPredicate identifiers]
  -[CNContainerIdentifiersPredicate initWithIdentifiers:]
  -[CNContainerIdentifiersPredicate cn_coreDataPredicate]
  -[CNContainerIdentifiersPredicate cn_topLevelFilter]
  -[CNContainerIdentifiersPredicate cn_persistenceFilterRequest]


CNMultiValueAddUpdate : CNMultiValueSingleUpdate
  // instance methods
  -[CNMultiValueAddUpdate applyToMutableMultiValue:withIdentifierMap:]
  -[CNMultiValueAddUpdate applyToABPerson:abmultivalue:propertyDescription:logger:error:]


CNTestSmartFetcher : NSObject /usr/lib/libSystem.B.dylib <CNKeyDescriptor_Private>
 @property  NSArray *requiredKeys
 @property  NSArray *optionalKeys
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNTestSmartFetcher supportsSecureCoding]

  // instance methods
  -[CNTestSmartFetcher isEqual:]
  -[CNTestSmartFetcher copyWithZone:]
  -[CNTestSmartFetcher encodeWithCoder:]
  -[CNTestSmartFetcher initWithCoder:]
  -[CNTestSmartFetcher .cxx_destruct]
  -[CNTestSmartFetcher requiredKeys]
  -[CNTestSmartFetcher _cn_requiredKeys]
  -[CNTestSmartFetcher _cn_optionalKeys]
  -[CNTestSmartFetcher _cn_executeGetterForRepresentedKeys:]
  -[CNTestSmartFetcher _cn_ignorableKeys]
  -[CNTestSmartFetcher optionalKeys]
  -[CNTestSmartFetcher initWithRequiredKeys:optionalKeys:]


CNChangeHistoryFetchExecutor : NSObject /usr/lib/libSystem.B.dylib
 @property  CNChangeHistoryFetchRequest *request
 @property  CNContactStore *store

  // class methods
  +[CNChangeHistoryFetchExecutor os_log]
  +[CNChangeHistoryFetchExecutor contactEventForChange:factory:]

  // instance methods
  -[CNChangeHistoryFetchExecutor .cxx_destruct]
  -[CNChangeHistoryFetchExecutor store]
  -[CNChangeHistoryFetchExecutor request]
  -[CNChangeHistoryFetchExecutor keysToFetch]
  -[CNChangeHistoryFetchExecutor initWithRequest:store:]
  -[CNChangeHistoryFetchExecutor run:]
  -[CNChangeHistoryFetchExecutor deltaSync]
  -[CNChangeHistoryFetchExecutor fullSync]
  -[CNChangeHistoryFetchExecutor contactEventsFromLegacyResult:eventFactory:]
  -[CNChangeHistoryFetchExecutor groupEventsFromLegacyResult:eventFactory:]


_CNChangeHistoryFetchExecutionResponse : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *events
 @property  NSData *token

  // instance methods
  -[_CNChangeHistoryFetchExecutionResponse token]
  -[_CNChangeHistoryFetchExecutionResponse .cxx_destruct]
  -[_CNChangeHistoryFetchExecutionResponse events]
  -[_CNChangeHistoryFetchExecutionResponse initWithEvents:token:]


CNiOSABAccountForContainerPredicate : CNPredicate <CNiOSAccountPredicate>
 @property  NSString *containerIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABAccountForContainerPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABAccountForContainerPredicate encodeWithCoder:]
  -[CNiOSABAccountForContainerPredicate initWithCoder:]
  -[CNiOSABAccountForContainerPredicate .cxx_destruct]
  -[CNiOSABAccountForContainerPredicate containerIdentifier]
  -[CNiOSABAccountForContainerPredicate initWithPredicate:]
  -[CNiOSABAccountForContainerPredicate initWithContainerIdentifier:]
  -[CNiOSABAccountForContainerPredicate cn_copyAccountsInAddressBook:error:]


CNContactImageStore : NSObject /usr/lib/libSystem.B.dylib
 @property  CNContactMetadataPersistentStoreManager *storeManager

  // class methods
  +[CNContactImageStore maximumContactImagesPerContact]

  // instance methods
  -[CNContactImageStore init]
  -[CNContactImageStore .cxx_destruct]
  -[CNContactImageStore initWithContactMetadataStoreManager:]
  -[CNContactImageStore storeManager]
  -[CNContactImageStore managedObjectsToContactImages:]
  -[CNContactImageStore updateExistingImagesIfNeededWithNewContactImage:forContactIdentifier:inContext:error:]
  -[CNContactImageStore insertContactImage:withContactIdentifier:inContext:]
  -[CNContactImageStore ensureImageQuotasForImages:inContext:]
  -[CNContactImageStore performFetchRequest:error:]
  -[CNContactImageStore performSaveRequest:error:]
  -[CNContactImageStore setStoreManager:]


CNiOSABSaveContext : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMapTable *contactIndicesByInstance
 @property  NSMapTable *groupIndicesByInstance
 @property  NSMapTable *containerIndicesByInstance
 @property  NSMutableDictionary *abPersonsByIdentifier
 @property  NSMutableDictionary *abGroupsByIdentifier
 @property  NSMutableDictionary *abSourcesByIdentifier
 @property  NSMutableDictionary *abAccountsByIdentifier
 @property  CNSaveRequest *saveRequest
 @property  CNMutableSaveResponse *saveResponse
 @property  ^v addressBook

  // instance methods
  -[CNiOSABSaveContext dealloc]
  -[CNiOSABSaveContext .cxx_destruct]
  -[CNiOSABSaveContext saveRequest]
  -[CNiOSABSaveContext addressBook]
  -[CNiOSABSaveContext _populateSaveRequestIndexTables]
  -[CNiOSABSaveContext contactIndicesByInstance]
  -[CNiOSABSaveContext groupIndicesByInstance]
  -[CNiOSABSaveContext containerIndicesByInstance]
  -[CNiOSABSaveContext initWithSaveRequest:response:addressBook:]
  -[CNiOSABSaveContext indexPathForContactInstance:]
  -[CNiOSABSaveContext indexPathForGroupInstance:]
  -[CNiOSABSaveContext indexPathForContainerInstance:]
  -[CNiOSABSaveContext abPersonsByIdentifier]
  -[CNiOSABSaveContext setAbPersonsByIdentifier:]
  -[CNiOSABSaveContext abGroupsByIdentifier]
  -[CNiOSABSaveContext setAbGroupsByIdentifier:]
  -[CNiOSABSaveContext abSourcesByIdentifier]
  -[CNiOSABSaveContext setAbSourcesByIdentifier:]
  -[CNiOSABSaveContext abAccountsByIdentifier]
  -[CNiOSABSaveContext setAbAccountsByIdentifier:]
  -[CNiOSABSaveContext saveResponse]


CNCDAccountFetcher : NSObject /usr/lib/libSystem.B.dylib
 @property  NSPredicate *predicate
 @property  CNCDPersistenceContext *persistenceContext

  // class methods
  +[CNCDAccountFetcher accountsForPredicate:inPersistenceStack:error:]

  // instance methods
  -[CNCDAccountFetcher init]
  -[CNCDAccountFetcher .cxx_destruct]
  -[CNCDAccountFetcher predicate]
  -[CNCDAccountFetcher initWithPredicate:persistenceContext:]
  -[CNCDAccountFetcher fetchAccounts:]
  -[CNCDAccountFetcher persistenceContext]


CNPerContactPropertyKeyDescriptor : NSObject /usr/lib/libSystem.B.dylib <CNKeyDescriptor_Private, CNKeyDescriptor>
 @property  NSMutableDictionary *propertiesByIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPerContactPropertyKeyDescriptor supportsSecureCoding]

  // instance methods
  -[CNPerContactPropertyKeyDescriptor init]
  -[CNPerContactPropertyKeyDescriptor isEqual:]
  -[CNPerContactPropertyKeyDescriptor copyWithZone:]
  -[CNPerContactPropertyKeyDescriptor encodeWithCoder:]
  -[CNPerContactPropertyKeyDescriptor initWithCoder:]
  -[CNPerContactPropertyKeyDescriptor .cxx_destruct]
  -[CNPerContactPropertyKeyDescriptor _cn_requiredKeys]
  -[CNPerContactPropertyKeyDescriptor _cn_optionalKeys]
  -[CNPerContactPropertyKeyDescriptor _cn_executeGetterForRepresentedKeys:]
  -[CNPerContactPropertyKeyDescriptor _cn_ignorableKeys]
  -[CNPerContactPropertyKeyDescriptor propertiesByIdentifier]
  -[CNPerContactPropertyKeyDescriptor setPropertiesByIdentifier:]
  -[CNPerContactPropertyKeyDescriptor setKeysToFetch:forContactIdentifier:]


CNiOSABContainersForAccountPredicate : CNPredicate <CNiOSContainerPredicate>
 @property  NSString *accountIdentifier
 @property  BOOL includesDisabledContainers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABContainersForAccountPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABContainersForAccountPredicate encodeWithCoder:]
  -[CNiOSABContainersForAccountPredicate initWithCoder:]
  -[CNiOSABContainersForAccountPredicate .cxx_destruct]
  -[CNiOSABContainersForAccountPredicate accountIdentifier]
  -[CNiOSABContainersForAccountPredicate initWithPredicate:]
  -[CNiOSABContainersForAccountPredicate cn_copyContainersInAddressBook:error:]
  -[CNiOSABContainersForAccountPredicate includesDisabledContainers]
  -[CNiOSABContainersForAccountPredicate initWithAccountIdentifier:includingDisabledContainers:]


CNHandleStringsContactPredicate : CNPredicate
 @property  NSArray *handleStrings
 @property  NSArray *containerIdentifiers

  // class methods
  +[CNHandleStringsContactPredicate supportsSecureCoding]

  // instance methods
  -[CNHandleStringsContactPredicate init]
  -[CNHandleStringsContactPredicate isEqual:]
  -[CNHandleStringsContactPredicate encodeWithCoder:]
  -[CNHandleStringsContactPredicate initWithCoder:]
  -[CNHandleStringsContactPredicate .cxx_destruct]
  -[CNHandleStringsContactPredicate shortDebugDescription]
  -[CNHandleStringsContactPredicate cn_resultTransformWithMatchInfos:]
  -[CNHandleStringsContactPredicate containerIdentifiers]
  -[CNHandleStringsContactPredicate initWithHandleStrings:containerIdentifiers:]
  -[CNHandleStringsContactPredicate initWithHandleStrings:]
  -[CNHandleStringsContactPredicate handleStrings]


CNMutablePostalAddress : CNPostalAddress
 @property  NSString *formattedAddress
 @property  NSString *street
 @property  NSString *subLocality
 @property  NSString *city
 @property  NSString *subAdministrativeArea
 @property  NSString *state
 @property  NSString *postalCode
 @property  NSString *country
 @property  NSString *ISOCountryCode

  // instance methods
  -[CNMutablePostalAddress copyWithZone:]
  -[CNMutablePostalAddress freeze]


CNInstantMessageAddress : NSObject /usr/lib/libSystem.B.dylib <CNObjectValidation, NSCopying, NSSecureCoding>
 @property  NSString *username
 @property  NSString *userIdentifier
 @property  NSString *service
 @property  NSString *teamIdentifier
 @property  NSArray *bundleIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNInstantMessageAddress supportsSecureCoding]
  +[CNInstantMessageAddress localizedStringForKey:]
  +[CNInstantMessageAddress localizedStringForService:]
  +[CNInstantMessageAddress instantMessageAddressWithDictionaryRepresentation:]

  // instance methods
  -[CNInstantMessageAddress init]
  -[CNInstantMessageAddress isEqual:]
  -[CNInstantMessageAddress copyWithZone:]
  -[CNInstantMessageAddress mutableCopyWithZone:]
  -[CNInstantMessageAddress setUserIdentifier:]
  -[CNInstantMessageAddress userIdentifier]
  -[CNInstantMessageAddress encodeWithCoder:]
  -[CNInstantMessageAddress initWithCoder:]
  -[CNInstantMessageAddress .cxx_destruct]
  -[CNInstantMessageAddress dictionaryRepresentation]
  -[CNInstantMessageAddress username]
  -[CNInstantMessageAddress service]
  -[CNInstantMessageAddress setUsername:]
  -[CNInstantMessageAddress bundleIdentifiers]
  -[CNInstantMessageAddress setService:]
  -[CNInstantMessageAddress teamIdentifier]
  -[CNInstantMessageAddress isValid:]
  -[CNInstantMessageAddress initWithUsername:userIdentifier:service:teamIdentifier:bundleIdentifiers:]
  -[CNInstantMessageAddress initWithUsername:service:]
  -[CNInstantMessageAddress setTeamIdentifier:]
  -[CNInstantMessageAddress setBundleIdentifiers:]


CNMultiValueUpdate : NSObject /usr/lib/libSystem.B.dylib <CNMultiValueUpdate_iOSAB>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL ignoreIdentifiers

  // class methods
  +[CNMultiValueUpdate addValue:]
  +[CNMultiValueUpdate removeValue:]
  +[CNMultiValueUpdate replaceValue:withValue:]
  +[CNMultiValueUpdate reorderValues:]

  // instance methods
  -[CNMultiValueUpdate applyToMutableMultiValue:withIdentifierMap:]
  -[CNMultiValueUpdate setIgnoreIdentifiers:]
  -[CNMultiValueUpdate ignoreIdentifiers]
  -[CNMultiValueUpdate applyToABPerson:abmultivalue:propertyDescription:logger:error:]
  -[CNMultiValueUpdate multiValueIndexForValue:inMultiValue:identifier:]


CNiOSABContainerOfGroupPredicate : CNPredicate <CNiOSContainerPredicate>
 @property  NSString *groupIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABContainerOfGroupPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABContainerOfGroupPredicate encodeWithCoder:]
  -[CNiOSABContainerOfGroupPredicate initWithCoder:]
  -[CNiOSABContainerOfGroupPredicate .cxx_destruct]
  -[CNiOSABContainerOfGroupPredicate groupIdentifier]
  -[CNiOSABContainerOfGroupPredicate initWithPredicate:]
  -[CNiOSABContainerOfGroupPredicate initWithGroupIdentifier:]
  -[CNiOSABContainerOfGroupPredicate cn_copyContainersInAddressBook:error:]
  -[CNiOSABContainerOfGroupPredicate includesDisabledContainers]


CNFetchResult : NSObject /usr/lib/libSystem.B.dylib
 @property  id value
 @property  NSData *currentHistoryToken

  // instance methods
  -[CNFetchResult .cxx_destruct]
  -[CNFetchResult value]
  -[CNFetchResult currentHistoryToken]
  -[CNFetchResult initWithValue:currentHistoryToken:]


CNContactStore : NSObject /usr/lib/libSystem.B.dylib
 @property  CNiOSAddressBookDataMapper *iOSMapper
 @property  CNiOSAddressBook *addressBook
 @property  CNContainerCache *containerCache
 @property  NSData *currentHistoryToken

  // class methods
  +[CNContactStore initialize]
  +[CNContactStore storeIdentifier]
  +[CNContactStore storeWithOptions:]
  +[CNContactStore storeForFamilyMember:]
  +[CNContactStore eraseAllDataAtURL:error:]
  +[CNContactStore eraseAllDataAtLocationWithName:error:]
  +[CNContactStore storeWithEnvironment:options:]
  +[CNContactStore authorizationStatusForEntityType:]
  +[CNContactStore standardLabelsForPropertyWithKey:options:]
  +[CNContactStore isAccessRestrictedForEntityType:]
  +[CNContactStore storeClassWithIdentifier:]
  +[CNContactStore storeInfoClasses]
  +[CNContactStore contactIdentifierFromInternalIdentifier:]
  +[CNContactStore storeIdentifierFromContactIdentifier:]
  +[CNContactStore internalIdentifierFromContactIdentifier:]
  +[CNContactStore standardLabelsForPropertyWithKey:]
  +[CNContactStore allLabelsForPropertyWithKey:]
  +[CNContactStore isXPCDataMapperStore:]
  +[CNContactStore _contactStoreForPublicAddressBook:]
  +[CNContactStore contactStoreForPublicAddressBook:]

  // instance methods
  -[CNContactStore init]
  -[CNContactStore .cxx_destruct]
  -[CNContactStore unifiedContactsMatchingPredicate:keysToFetch:error:]
  -[CNContactStore executeFetchRequest:error:]
  -[CNContactStore countForFetchRequest:error:]
  -[CNContactStore initWithEnvironment:]
  -[CNContactStore containerCache]
  -[CNContactStore currentHistoryToken]
  -[CNContactStore enumerateContactsWithFetchRequest:error:usingBlock:]
  -[CNContactStore registerChangeHistoryClientIdentifier:error:]
  -[CNContactStore changeHistoryWithFetchRequest:error:]
  -[CNContactStore executeChangeHistoryClearRequest:error:]
  -[CNContactStore reindexSearchableItemsWithIdentifiers:]
  -[CNContactStore hasMultipleGroupsOrAccounts]
  -[CNContactStore requestAccessForEntityType:]
  -[CNContactStore resetSortDataIfNeededWithError:]
  -[CNContactStore unifiedContactWithIdentifier:keysToFetch:error:]
  -[CNContactStore sectionListOffsetsForSortOrder:error:]
  -[CNContactStore unifiedContactCountWithError:]
  -[CNContactStore contactCountForFetchRequest:error:]
  -[CNContactStore meContactIdentifiers:]
  -[CNContactStore enumerateContactsAndMatchInfoWithFetchRequest:error:usingBlock:]
  -[CNContactStore groupsMatchingPredicate:error:]
  -[CNContactStore groupWithIdentifier:error:]
  -[CNContactStore membersOfGroupWithIdentifier:keysToFetch:error:]
  -[CNContactStore subgroupsOfGroupWithIdentifier:error:]
  -[CNContactStore containersMatchingPredicate:error:]
  -[CNContactStore serverSearchContainersMatchingPredicate:error:]
  -[CNContactStore defaultContainerIdentifier]
  -[CNContactStore policyForContainerWithIdentifier:error:]
  -[CNContactStore usedLabelsForPropertyWithKey:error:]
  -[CNContactStore setMeContact:error:]
  -[CNContactStore setMeContact:forContainer:error:]
  -[CNContactStore accountsMatchingPredicate:error:]
  -[CNContactStore supportsSaveRequest:]
  -[CNContactStore executeSaveRequest:error:]
  -[CNContactStore executeFetchRequest:progressiveResults:completion:]
  -[CNContactStore enumeratorForContactFetchRequest:error:]
  -[CNContactStore enumeratorForChangeHistoryFetchRequest:error:]
  -[CNContactStore contactWithUserActivityUserInfo:keysToFetch:]
  -[CNContactStore userActivityUserInfoForContact:]
  -[CNContactStore unregisterChangeHistoryClientIdentifier:error:]
  -[CNContactStore clearChangeHistoryForClientIdentifier:toChangeAnchor:error:]
  -[CNContactStore mainContactStore]
  -[CNContactStore _unifiedMeContactWithKeysToFetch:error:]
  -[CNContactStore enumerateNonUnifiedContactsWithFetchRequest:error:usingBlock:]
  -[CNContactStore requestAccessForEntityType:completionHandler:]
  -[CNContactStore executeSaveRequest:response:authorizationContext:error:]
  -[CNContactStore identifierWithError:]
  -[CNContactStore saveSequenceCount]
  -[CNContactStore moveContacts:fromContainer:toContainer:error:]
  -[CNContactStore setBestMeIfNeededForGivenName:familyName:email:error:]
  -[CNContactStore descriptorForRequiredKeysForMatchingDictionary]
  -[CNContactStore matchingDictionaryForContact:]
  -[CNContactStore contactIdentifierWithMatchingDictionary:]
  -[CNContactStore registerChangeHistoryClientIdentifier:forContainerIdentifier:error:]
  -[CNContactStore unregisterChangeHistoryClientIdentifier:forContainerIdentifier:error:]
  -[CNContactStore setDefaultAccountIdentifier:error:]
  -[CNContactStore legacyTetheredSyncDeviceAnchor]
  -[CNContactStore setLegacyTetheredSyncDeviceAnchor:]
  -[CNContactStore legacyTetheredSyncComputerAnchor]
  -[CNContactStore setLegacyTetheredSyncComputerAnchor:]
  -[CNContactStore verifyIndexWithError:]
  -[CNContactStore addressBook]
  -[CNContactStore contactFromPerson:keysToFetch:mutable:]
  -[CNContactStore contactFromPerson:keysToFetch:]
  -[CNContactStore contactFromPublicABPerson:keysToFetch:]
  -[CNContactStore initWithEnvironment:options:]
  -[CNContactStore initWithEnvironment:options:managedConfiguration:]
  -[CNContactStore _crossPlatformUnifiedMeContactWithKeysToFetch:error:]
  -[CNContactStore unifiedMeContactMatchingEmailAddresses:keysToFetch:error:]
  -[CNContactStore hasAccountFirstSyncCompleted]
  -[CNContactStore _ios_meContactIdentifierWithError:]
  -[CNContactStore unifiedMeContactWithKeysToFetch:error:]
  -[CNContactStore _ios_meContactWithKeysToFetch:error:]
  -[CNContactStore unifiedMeContactMatchingEmailAddress:keysToFetch:error:]
  -[CNContactStore executeFetchRequest:completion:]
  -[CNContactStore contactWithMatchingDictionary:keysToFetch:]
  -[CNContactStore latestConsumedChangeHistoryAnchorForClientIdentifier:error:]
  -[CNContactStore verifyChangeHistoryForClientIdentifier:error:]
  -[CNContactStore individualContactCountWithError:]
  -[CNContactStore requestAuthorization:entityType:completionHandler:]
  -[CNContactStore authorizedKeysForContactKeys:]
  -[CNContactStore setContainerCache:]
  -[CNContactStore synchronousRemoteObjectProxyForContactsXPCService]
  -[CNContactStore iOSMapper]
  -[CNContactStore setDefaultContainer:forAccount:error:]
  -[CNContactStore originForSuggestion:error:]
  -[CNContactStore contactFromPerson:mutable:]
  -[CNContactStore contactFromPersonID:keysToFetch:]
  -[CNContactStore _contactFromPersonID:keysToFetch:]
  -[CNContactStore contactFromPerson:]
  -[CNContactStore contactFromPersonID:]
  -[CNContactStore contactIdentifierFromPersonID:]
  -[CNContactStore personFromContact:]
  -[CNContactStore multiValueIdentifierFromLabeledValue:]
  -[CNContactStore labeledValueFromMultiValueIdentifier:contact:key:]
  -[CNContactStore _contactFromPublicABPerson:keysToFetch:]
  -[CNContactStore _publicABPersonFromContact:publicAddressBook:]
  -[CNContactStore _publicMultiValueIdentifierFromLabeledValue:]
  -[CNContactStore _labeledValueFromPublicMultiValueIdentifier:contact:key:]
  -[CNContactStore publicABPersonFromContact:publicAddressBook:]
  -[CNContactStore publicMultiValueIdentifierFromLabeledValue:]
  -[CNContactStore labeledValueFromPublicMultiValueIdentifier:contact:key:]
  -[CNContactStore contactFromPublicPersonID:keysToFetch:]
  -[CNContactStore contactIdentifierFromPublicPersonID:]
  -[CNContactStore _fetchRequestInfosForEmailOrPhoneForContact:]
  -[CNContactStore _executeFetchRequestsWithInfos:unifyResults:keysToFetch:error:]
  -[CNContactStore contactsMatchingPropertiesOfContact:unifyResults:keysToFetch:error:]


CNMutableContact : CNContact
 @property  NSString *nameTitle
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *maidenName
 @property  NSString *phoneticFirstName
 @property  NSString *phoneticLastName
 @property  NSString *companyName
 @property  NSArray *relatedNames
 @property  int iOSLegacyIdentifier
 @property  BOOL imageDataAvailable
 @property  NSArray *calendarURIs
 @property  NSString *cardDAVUID
 @property  CNContactKeyVector *availableKeyDescriptor
 @property  NSString *storeIdentifier
 @property  NSDictionary *storeInfo
 @property  NSString *searchIndex
 @property  NSDictionary *activityAlerts
 @property  NSString *sectionForSortingByGivenName
 @property  NSString *sectionForSortingByFamilyName
 @property  NSDate *modificationDate
 @property  NSDate *creationDate
 @property  CNContact *snapshot
 @property  BOOL preferredForName
 @property  BOOL preferredForImage
 @property  NSArray *linkedContacts
 @property  NSString *linkIdentifier
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  NSData *thumbnailImageData
 @property  NSString *cropRectID
 @property  NSData *cropRectHash
 @property  NSData *fullscreenImageData
 @property  NSData *syncImageData
 @property  CNActivityAlert *callAlert
 @property  CNActivityAlert *textAlert
 @property  NSString *phonemeData
 @property  NSString *phoneticCompanyName
 @property  NSString *externalIdentifier
 @property  NSData *externalRepresentation
 @property  NSString *externalModificationTag
 @property  NSString *externalUUID
 @property  NSString *externalImageURI
 @property  NSString *mapsData
 @property  BOOL hasChanges
 @property  NSString *pronunciationGivenName
 @property  NSString *pronunciationFamilyName
 @property  NSString *preferredLikenessSource
 @property  NSString *preferredApplePersonaIdentifier
 @property  NSString *preferredChannel
 @property  NSString *downtimeWhitelist
 @property  NSString *imageType
 @property  NSData *imageHash
 @property  long long contactType
 @property  NSString *namePrefix
 @property  NSString *givenName
 @property  NSString *middleName
 @property  NSString *familyName
 @property  NSString *previousFamilyName
 @property  NSString *nameSuffix
 @property  NSString *nickname
 @property  NSString *organizationName
 @property  NSString *departmentName
 @property  NSString *jobTitle
 @property  NSString *phoneticGivenName
 @property  NSString *phoneticMiddleName
 @property  NSString *phoneticFamilyName
 @property  NSString *phoneticOrganizationName
 @property  NSString *note
 @property  NSData *imageData
 @property  NSArray *phoneNumbers
 @property  NSArray *emailAddresses
 @property  NSArray *postalAddresses
 @property  NSArray *urlAddresses
 @property  NSArray *contactRelations
 @property  NSArray *socialProfiles
 @property  NSArray *instantMessageAddresses
 @property  NSDateComponents *birthday
 @property  NSDateComponents *nonGregorianBirthday
 @property  NSArray *dates

  // class methods
  +[CNMutableContact unifyContacts:]
  +[CNMutableContact imageDataDescriptions]
  +[CNMutableContact freezeIfInstancetypeIsImmutable:]

  // instance methods
  -[CNMutableContact copyWithZone:]
  -[CNMutableContact freeze]
  -[CNMutableContact .cxx_destruct]
  -[CNMutableContact givenName]
  -[CNMutableContact setGivenName:]
  -[CNMutableContact familyName]
  -[CNMutableContact setFamilyName:]
  -[CNMutableContact middleName]
  -[CNMutableContact setMiddleName:]
  -[CNMutableContact namePrefix]
  -[CNMutableContact setNamePrefix:]
  -[CNMutableContact nameSuffix]
  -[CNMutableContact setNameSuffix:]
  -[CNMutableContact nickname]
  -[CNMutableContact setNickname:]
  -[CNMutableContact setNilValueForKey:]
  -[CNMutableContact hasChanges]
  -[CNMutableContact modificationDate]
  -[CNMutableContact creationDate]
  -[CNMutableContact phoneNumbers]
  -[CNMutableContact setCreationDate:]
  -[CNMutableContact organizationName]
  -[CNMutableContact setSnapshot:]
  -[CNMutableContact setImageType:]
  -[CNMutableContact setModificationDate:]
  -[CNMutableContact setStoreIdentifier:]
  -[CNMutableContact imageData]
  -[CNMutableContact imageType]
  -[CNMutableContact emailAddresses]
  -[CNMutableContact setEmailAddresses:]
  -[CNMutableContact mapsData]
  -[CNMutableContact setFirstName:]
  -[CNMutableContact setLastName:]
  -[CNMutableContact imageHash]
  -[CNMutableContact linkIdentifier]
  -[CNMutableContact availableKeyDescriptor]
  -[CNMutableContact setPhoneNumbers:]
  -[CNMutableContact urlAddresses]
  -[CNMutableContact cropRect]
  -[CNMutableContact setIOSLegacyIdentifier:]
  -[CNMutableContact externalIdentifier]
  -[CNMutableContact setExternalIdentifier:]
  -[CNMutableContact externalModificationTag]
  -[CNMutableContact setExternalModificationTag:]
  -[CNMutableContact preferredChannel]
  -[CNMutableContact setPreferredChannel:]
  -[CNMutableContact phoneticGivenName]
  -[CNMutableContact setPhoneticGivenName:]
  -[CNMutableContact phoneticMiddleName]
  -[CNMutableContact setPhoneticMiddleName:]
  -[CNMutableContact phoneticFamilyName]
  -[CNMutableContact setPhoneticFamilyName:]
  -[CNMutableContact setStoreInfo:]
  -[CNMutableContact initWithContact:]
  -[CNMutableContact setImageData:]
  -[CNMutableContact setCropRect:]
  -[CNMutableContact setContactType:]
  -[CNMutableContact contactType]
  -[CNMutableContact instantMessageAddresses]
  -[CNMutableContact socialProfiles]
  -[CNMutableContact setInstantMessageAddresses:]
  -[CNMutableContact note]
  -[CNMutableContact departmentName]
  -[CNMutableContact jobTitle]
  -[CNMutableContact dates]
  -[CNMutableContact birthday]
  -[CNMutableContact nonGregorianBirthday]
  -[CNMutableContact postalAddresses]
  -[CNMutableContact _setExternalIdentifier:]
  -[CNMutableContact externalRepresentation]
  -[CNMutableContact setExternalRepresentation:]
  -[CNMutableContact _setExternalRepresentation:]
  -[CNMutableContact _setExternalModificationTag:]
  -[CNMutableContact externalUUID]
  -[CNMutableContact setExternalUUID:]
  -[CNMutableContact _setExternalUUID:]
  -[CNMutableContact externalImageURI]
  -[CNMutableContact setExternalImageURI:]
  -[CNMutableContact _setExternalImageURI:]
  -[CNMutableContact _setNamePrefix:]
  -[CNMutableContact _setGivenName:]
  -[CNMutableContact _setMiddleName:]
  -[CNMutableContact _setFamilyName:]
  -[CNMutableContact _setNameSuffix:]
  -[CNMutableContact previousFamilyName]
  -[CNMutableContact setPreviousFamilyName:]
  -[CNMutableContact _setPreviousFamilyName:]
  -[CNMutableContact _setNickname:]
  -[CNMutableContact _setPhoneticGivenName:]
  -[CNMutableContact _setPhoneticMiddleName:]
  -[CNMutableContact _setPhoneticFamilyName:]
  -[CNMutableContact phoneticOrganizationName]
  -[CNMutableContact setPhoneticOrganizationName:]
  -[CNMutableContact _setPhoneticOrganizationName:]
  -[CNMutableContact pronunciationGivenName]
  -[CNMutableContact setPronunciationGivenName:]
  -[CNMutableContact _setPronunciationGivenName:]
  -[CNMutableContact pronunciationFamilyName]
  -[CNMutableContact setPronunciationFamilyName:]
  -[CNMutableContact _setPronunciationFamilyName:]
  -[CNMutableContact sectionForSortingByGivenName]
  -[CNMutableContact setSectionForSortingByGivenName:]
  -[CNMutableContact _setSectionForSortingByGivenName:]
  -[CNMutableContact sectionForSortingByFamilyName]
  -[CNMutableContact setSectionForSortingByFamilyName:]
  -[CNMutableContact _setSectionForSortingByFamilyName:]
  -[CNMutableContact setOrganizationName:]
  -[CNMutableContact _setOrganizationName:]
  -[CNMutableContact setDepartmentName:]
  -[CNMutableContact _setDepartmentName:]
  -[CNMutableContact setJobTitle:]
  -[CNMutableContact _setJobTitle:]
  -[CNMutableContact setBirthday:]
  -[CNMutableContact _setBirthday:]
  -[CNMutableContact setNonGregorianBirthday:]
  -[CNMutableContact _setNonGregorianBirthday:]
  -[CNMutableContact _setCreationDate:]
  -[CNMutableContact _setModificationDate:]
  -[CNMutableContact setNote:]
  -[CNMutableContact _setNote:]
  -[CNMutableContact _setImageData:]
  -[CNMutableContact thumbnailImageData]
  -[CNMutableContact setThumbnailImageData:]
  -[CNMutableContact _setThumbnailImageData:]
  -[CNMutableContact fullscreenImageData]
  -[CNMutableContact setFullscreenImageData:]
  -[CNMutableContact _setFullscreenImageData:]
  -[CNMutableContact syncImageData]
  -[CNMutableContact setSyncImageData:]
  -[CNMutableContact _setSyncImageData:]
  -[CNMutableContact imageDataAvailable]
  -[CNMutableContact setImageDataAvailable:]
  -[CNMutableContact setLinkIdentifier:]
  -[CNMutableContact _setLinkIdentifier:]
  -[CNMutableContact setPreferredForName:]
  -[CNMutableContact setPreferredForImage:]
  -[CNMutableContact preferredLikenessSource]
  -[CNMutableContact setPreferredLikenessSource:]
  -[CNMutableContact _setPreferredLikenessSource:]
  -[CNMutableContact preferredApplePersonaIdentifier]
  -[CNMutableContact setPreferredApplePersonaIdentifier:]
  -[CNMutableContact _setPreferredApplePersonaIdentifier:]
  -[CNMutableContact _setPhoneNumbers:]
  -[CNMutableContact _setEmailAddresses:]
  -[CNMutableContact setUrlAddresses:]
  -[CNMutableContact _setUrlAddresses:]
  -[CNMutableContact calendarURIs]
  -[CNMutableContact setCalendarURIs:]
  -[CNMutableContact _setCalendarURIs:]
  -[CNMutableContact setDates:]
  -[CNMutableContact _setDates:]
  -[CNMutableContact contactRelations]
  -[CNMutableContact setContactRelations:]
  -[CNMutableContact _setContactRelations:]
  -[CNMutableContact _setInstantMessageAddresses:]
  -[CNMutableContact setSocialProfiles:]
  -[CNMutableContact _setSocialProfiles:]
  -[CNMutableContact setPostalAddresses:]
  -[CNMutableContact _setPostalAddresses:]
  -[CNMutableContact phonemeData]
  -[CNMutableContact setPhonemeData:]
  -[CNMutableContact _setPhonemeData:]
  -[CNMutableContact callAlert]
  -[CNMutableContact setCallAlert:]
  -[CNMutableContact _setCallAlert:]
  -[CNMutableContact textAlert]
  -[CNMutableContact setTextAlert:]
  -[CNMutableContact _setTextAlert:]
  -[CNMutableContact setMapsData:]
  -[CNMutableContact _setMapsData:]
  -[CNMutableContact _setPreferredChannel:]
  -[CNMutableContact downtimeWhitelist]
  -[CNMutableContact setDowntimeWhitelist:]
  -[CNMutableContact _setDowntimeWhitelist:]
  -[CNMutableContact _setImageType:]
  -[CNMutableContact setImageHash:]
  -[CNMutableContact _setImageHash:]
  -[CNMutableContact setFrozenSelfAsSnapshot]
  -[CNMutableContact freezeWithSelfAsSnapshot]
  -[CNMutableContact setLinkedContacts:]
  -[CNMutableContact setAvailableKeyDescriptor:]
  -[CNMutableContact _setSearchIndex:]
  -[CNMutableContact updateImageDataAvailableFromCurrentState]
  -[CNMutableContact resetToNewContact]
  -[CNMutableContact overwriteStateFromContact:]
  -[CNMutableContact copyWithSelfAsSnapshot]
  -[CNMutableContact setPhoneticCompanyName:]
  -[CNMutableContact searchIndex]
  -[CNMutableContact setSearchIndex:]
  -[CNMutableContact preferredForName]
  -[CNMutableContact preferredForImage]
  -[CNMutableContact cardDAVUID]
  -[CNMutableContact setCardDAVUID:]
  -[CNMutableContact setActivityAlerts:]
  -[CNMutableContact updateStateFromContact:]
  -[CNMutableContact removeKeys:]
  -[CNMutableContact cropRectID]
  -[CNMutableContact setCropRectID:]
  -[CNMutableContact cropRectHash]
  -[CNMutableContact setCropRectHash:]
  -[CNMutableContact setNameTitle:]
  -[CNMutableContact setMaidenName:]
  -[CNMutableContact setPhoneticFirstName:]
  -[CNMutableContact setPhoneticLastName:]
  -[CNMutableContact setCompanyName:]
  -[CNMutableContact setRelatedNames:]


CNContactImage : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier
 @property  NSData *imageData
 @property  NSDate *lastUsedDate
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  long long source
 @property  NSString *sourceIdentifier
 @property  NSString *variant

  // instance methods
  -[CNContactImage setSource:]
  -[CNContactImage .cxx_destruct]
  -[CNContactImage identifier]
  -[CNContactImage source]
  -[CNContactImage variant]
  -[CNContactImage setSourceIdentifier:]
  -[CNContactImage sourceIdentifier]
  -[CNContactImage lastUsedDate]
  -[CNContactImage imageData]
  -[CNContactImage cropRect]
  -[CNContactImage setVariant:]
  -[CNContactImage initWithIdentifier:imageData:cropRect:lastUsedDate:]
  -[CNContactImage initWithImageData:cropRect:lastUsedDate:]
  -[CNContactImage copyWithNewImageData:]


CNContactMatchSummarizer : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNContactMatchSummarizer summaryProperties]
  +[CNContactMatchSummarizer keyDescriptorForContactIdentifiers:matchInfos:]
  +[CNContactMatchSummarizer summaryPropertyForMatchInfo:]

  // instance methods
  -[CNContactMatchSummarizer init]
  -[CNContactMatchSummarizer dealloc]
  -[CNContactMatchSummarizer summaryForContact:matchInfo:]
  -[CNContactMatchSummarizer attributedStringForPropertyValueString:queryTerms:outMatchCount:]
  -[CNContactMatchSummarizer summariesFutureForContactsIdentifiers:matchInfos:contactStore:scheduler:]


CNMutableSocialProfile : CNSocialProfile
 @property  NSString *urlString
 @property  NSString *username
 @property  NSString *userIdentifier
 @property  NSString *service
 @property  NSString *displayname
 @property  NSArray *bundleIdentifiers
 @property  NSString *teamIdentifier

  // instance methods
  -[CNMutableSocialProfile copyWithZone:]
  -[CNMutableSocialProfile freeze]


CNContactsUserDefaultsX : CNContactsUserDefaults
 @property  CNFoundationUserDefaults *foundationUserDefaults

  // instance methods
  -[CNContactsUserDefaultsX init]
  -[CNContactsUserDefaultsX .cxx_destruct]
  -[CNContactsUserDefaultsX countryCode]
  -[CNContactsUserDefaultsX shortNameFormat]
  -[CNContactsUserDefaultsX setShortNameFormat:]
  -[CNContactsUserDefaultsX sortOrder]
  -[CNContactsUserDefaultsX shortNameFormatPrefersNicknames]
  -[CNContactsUserDefaultsX isShortNameFormatEnabled]
  -[CNContactsUserDefaultsX displayNameOrder]
  -[CNContactsUserDefaultsX newContactDisplayNameOrder]
  -[CNContactsUserDefaultsX setDisplayNameOrder:]
  -[CNContactsUserDefaultsX setShortNameFormatEnabled:]
  -[CNContactsUserDefaultsX setShortNameFormatPrefersNicknames:]
  -[CNContactsUserDefaultsX filteredGroupAndContainerIDs]
  -[CNContactsUserDefaultsX setFilteredGroupAndContainerIDs:]
  -[CNContactsUserDefaultsX initWithFoundationUserDefaults:]
  -[CNContactsUserDefaultsX foundationUserDefaults]
  -[CNContactsUserDefaultsX setFoundationUserDefaults:]


CNiOSABHandleStringsContactPredicate : CNHandleStringsContactPredicate <CNiOSContactPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABHandleStringsContactPredicate peopleForPredicate:sortOrder:addressBook:]

  // instance methods
  -[CNiOSABHandleStringsContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABHandleStringsContactPredicate cn_supportsNativeSorting]
  -[CNiOSABHandleStringsContactPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABHandleStringsContactPredicate cn_supportsEncodedFetching]
  -[CNiOSABHandleStringsContactPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABHandleStringsContactPredicate handlesPredicateWithMap:]


CNMultiValueRemoveUpdate : CNMultiValueSingleUpdate
  // instance methods
  -[CNMultiValueRemoveUpdate applyToMutableMultiValue:withIdentifierMap:]
  -[CNMultiValueRemoveUpdate applyToABPerson:abmultivalue:propertyDescription:logger:error:]


CNiOSAddressBookDataMapper : NSObject /usr/lib/libSystem.B.dylib <CNDataMapper>
 @property  CNManagedAccountsCache *managedAccountsCache
 @property  CNiOSAddressBook *addressBook
 @property  CNContactsEnvironment *environment
 @property  <CNContactsLogger> *logger
 @property  CNManagedConfiguration *managedConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *legacyTetheredSyncDeviceAnchor
 @property  NSString *legacyTetheredSyncComputerAnchor

  // class methods
  +[CNiOSAddressBookDataMapper initialize]
  +[CNiOSAddressBookDataMapper contactBuffersDecoderForFetchRequest:]
  +[CNiOSAddressBookDataMapper encodedPeopleFetcherForForFetchRequest:addressBook:managedConfiguration:completionHandler:environment:]
  +[CNiOSAddressBookDataMapper _copyLocalSourceIfEnabledInAddressBook:]
  +[CNiOSAddressBookDataMapper _copyEligiblePrimarySourceForAccountWithIdentifier:addressBook:error:]

  // instance methods
  -[CNiOSAddressBookDataMapper init]
  -[CNiOSAddressBookDataMapper .cxx_destruct]
  -[CNiOSAddressBookDataMapper environment]
  -[CNiOSAddressBookDataMapper logger]
  -[CNiOSAddressBookDataMapper currentHistoryToken]
  -[CNiOSAddressBookDataMapper changeHistoryWithFetchRequest:error:]
  -[CNiOSAddressBookDataMapper executeChangeHistoryClearRequest:error:]
  -[CNiOSAddressBookDataMapper hasMultipleGroupsOrAccounts]
  -[CNiOSAddressBookDataMapper resetSortDataIfNeededWithError:]
  -[CNiOSAddressBookDataMapper sectionListOffsetsForSortOrder:error:]
  -[CNiOSAddressBookDataMapper unifiedContactCountWithError:]
  -[CNiOSAddressBookDataMapper contactCountForFetchRequest:error:]
  -[CNiOSAddressBookDataMapper meContactIdentifiers:]
  -[CNiOSAddressBookDataMapper groupsMatchingPredicate:error:]
  -[CNiOSAddressBookDataMapper subgroupsOfGroupWithIdentifier:error:]
  -[CNiOSAddressBookDataMapper containersMatchingPredicate:error:]
  -[CNiOSAddressBookDataMapper serverSearchContainersMatchingPredicate:error:]
  -[CNiOSAddressBookDataMapper defaultContainerIdentifier]
  -[CNiOSAddressBookDataMapper policyForContainerWithIdentifier:error:]
  -[CNiOSAddressBookDataMapper usedLabelsForPropertyWithKey:error:]
  -[CNiOSAddressBookDataMapper setMeContact:error:]
  -[CNiOSAddressBookDataMapper setMeContact:forContainer:error:]
  -[CNiOSAddressBookDataMapper accountsMatchingPredicate:error:]
  -[CNiOSAddressBookDataMapper executeSaveRequest:error:]
  -[CNiOSAddressBookDataMapper executeFetchRequest:progressiveResults:completion:]
  -[CNiOSAddressBookDataMapper contactWithUserActivityUserInfo:keysToFetch:]
  -[CNiOSAddressBookDataMapper userActivityUserInfoForContact:]
  -[CNiOSAddressBookDataMapper initWithContactsEnvironment:managedConfiguration:]
  -[CNiOSAddressBookDataMapper requestAccessForEntityType:completionHandler:]
  -[CNiOSAddressBookDataMapper requestAccessForEntityType:error:]
  -[CNiOSAddressBookDataMapper fetchAndDecodeEncodedContactsForFetchRequest:error:cancelationToken:batchHandler:]
  -[CNiOSAddressBookDataMapper fetchContactsForFetchRequest:error:batchHandler:]
  -[CNiOSAddressBookDataMapper fetchEncodedContactsForFetchRequest:error:cancelationToken:batchHandler:]
  -[CNiOSAddressBookDataMapper executeSaveRequest:response:authorizationContext:error:]
  -[CNiOSAddressBookDataMapper authorizedKeysForContactKeys:error:]
  -[CNiOSAddressBookDataMapper contactObservableForFetchRequest:]
  -[CNiOSAddressBookDataMapper identifierWithError:]
  -[CNiOSAddressBookDataMapper saveSequenceCount]
  -[CNiOSAddressBookDataMapper moveContacts:fromContainer:toContainer:error:]
  -[CNiOSAddressBookDataMapper groupsWithIdentifiers:error:]
  -[CNiOSAddressBookDataMapper setBestMeIfNeededForGivenName:familyName:email:error:]
  -[CNiOSAddressBookDataMapper descriptorForRequiredKeysForMatchingDictionary]
  -[CNiOSAddressBookDataMapper matchingDictionaryForContact:]
  -[CNiOSAddressBookDataMapper contactIdentifierWithMatchingDictionary:]
  -[CNiOSAddressBookDataMapper registerChangeHistoryClientIdentifier:forContainerIdentifier:error:]
  -[CNiOSAddressBookDataMapper unregisterChangeHistoryClientIdentifier:forContainerIdentifier:error:]
  -[CNiOSAddressBookDataMapper setDefaultAccountIdentifier:error:]
  -[CNiOSAddressBookDataMapper legacyTetheredSyncDeviceAnchor]
  -[CNiOSAddressBookDataMapper setLegacyTetheredSyncDeviceAnchor:]
  -[CNiOSAddressBookDataMapper legacyTetheredSyncComputerAnchor]
  -[CNiOSAddressBookDataMapper setLegacyTetheredSyncComputerAnchor:]
  -[CNiOSAddressBookDataMapper managedConfiguration]
  -[CNiOSAddressBookDataMapper addressBook]
  -[CNiOSAddressBookDataMapper initWithContactsEnvironment:]
  -[CNiOSAddressBookDataMapper latestConsumedChangeHistoryAnchorForClientIdentifier:error:]
  -[CNiOSAddressBookDataMapper verifyChangeHistoryForClientIdentifier:error:]
  -[CNiOSAddressBookDataMapper individualContactCountWithError:]
  -[CNiOSAddressBookDataMapper initWithContactsEnvironment:addressBook:managedConfiguration:]
  -[CNiOSAddressBookDataMapper canExecuteSaveRequest:error:]
  -[CNiOSAddressBookDataMapper _fechAllRecordsInSaveContext:error:]
  -[CNiOSAddressBookDataMapper _processAccountsFromSaveContext:error:]
  -[CNiOSAddressBookDataMapper _processContainersFromSaveContext:error:]
  -[CNiOSAddressBookDataMapper _processContactsFromSaveContext:error:]
  -[CNiOSAddressBookDataMapper _processGroupsFromSaveContext:error:]
  -[CNiOSAddressBookDataMapper _postProcessContactsFromSaveContext:]
  -[CNiOSAddressBookDataMapper _postProcessGroupsFromSaveContext:]
  -[CNiOSAddressBookDataMapper _postProcessContainersFromSaveContext:]
  -[CNiOSAddressBookDataMapper _fetchAccountsInSaveContext:error:]
  -[CNiOSAddressBookDataMapper _fetchContainersInSaveContext:error:]
  -[CNiOSAddressBookDataMapper _fetchContactsInSaveContext:error:]
  -[CNiOSAddressBookDataMapper _fetchGroupsInSaveContext:error:]
  -[CNiOSAddressBookDataMapper defaultContainerIdentifierForAddressBook:error:]
  -[CNiOSAddressBookDataMapper _hasManagementRestrictionsEnabled]
  -[CNiOSAddressBookDataMapper _defaultSourceInAddressBook:error:]
  -[CNiOSAddressBookDataMapper _hasAccessToWriteToAccountCorrespondingToSource:fromAddressBook:]
  -[CNiOSAddressBookDataMapper _hasWriteAccessToAccountContainingPerson:fromSaveContext:]
  -[CNiOSAddressBookDataMapper _processContactChangeRequestsFromSaveContext:error:]
  -[CNiOSAddressBookDataMapper _alternativeSourceWithAccessibleAccountFromAddressBook:]
  -[CNiOSAddressBookDataMapper managedAccountsCache]
  -[CNiOSAddressBookDataMapper _canWriteUnderManagementRestrictionsToSource:inAddressBook:]
  -[CNiOSAddressBookDataMapper _canReadUnderManagementRestrictionsFromSource:inAddressBook:]
  -[CNiOSAddressBookDataMapper _processContactMembershipsFromSaveContext:error:]
  -[CNiOSAddressBookDataMapper _processSubgroupMembershipsFromSaveContext:error:]
  -[CNiOSAddressBookDataMapper _hasAccessToReadFromAccountCorrespondingToSource:fromAddressBook:]
  -[CNiOSAddressBookDataMapper _containersMatchingPredicate:remote:error:]
  -[CNiOSAddressBookDataMapper legacyTetheredSyncAnchorForKey:]
  -[CNiOSAddressBookDataMapper setLegacyTetheredSyncAnchor:forKey:]
  -[CNiOSAddressBookDataMapper copySourceForContainerIdentifier:fromAddressBook:]
  -[CNiOSAddressBookDataMapper copyChangeTableRowIDsFromChangeIDs:]
  -[CNiOSAddressBookDataMapper initWithAddressBook:managedConfiguration:]
  -[CNiOSAddressBookDataMapper encodedContactsCursorForFetchRequest:cursorCleanupBlock:error:]
  -[CNiOSAddressBookDataMapper setManagedAccountsCache:]


CNContactKeyVector : NSObject /usr/lib/libSystem.B.dylib <NSMutableCopying, CNKeyDescriptor_Private>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactKeyVector supportsSecureCoding]
  +[CNContactKeyVector keyVectorWithKeys:]
  +[CNContactKeyVector keyVector]
  +[CNContactKeyVector keyVectorWithKey:]
  +[CNContactKeyVector freezeIfClassIsImmutable:]
  +[CNContactKeyVector keyVectorWithAllKeys]

  // instance methods
  -[CNContactKeyVector init]
  -[CNContactKeyVector isEqual:]
  -[CNContactKeyVector copyWithZone:]
  -[CNContactKeyVector mutableCopyWithZone:]
  -[CNContactKeyVector containsKey:]
  -[CNContactKeyVector encodeWithCoder:]
  -[CNContactKeyVector initWithCoder:]
  -[CNContactKeyVector enumeratePropertiesUsingBlock:]
  -[CNContactKeyVector _cn_requiredKeys]
  -[CNContactKeyVector _cn_optionalKeys]
  -[CNContactKeyVector intersectsKeyVector:]
  -[CNContactKeyVector _cn_executeGetterForRepresentedKeys:]
  -[CNContactKeyVector _cn_ignorableKeys]
  -[CNContactKeyVector keyVectorByAddingKey:]
  -[CNContactKeyVector isEqualToKeyVector:]
  -[CNContactKeyVector keyVectorByAddingKeysFromKeyVector:]
  -[CNContactKeyVector keyVectorByRemovingKeysFromKeyVector:]
  -[CNContactKeyVector initWithKeys:]
  -[CNContactKeyVector initWithAllKeys]
  -[CNContactKeyVector _checkStorageSize]
  -[CNContactKeyVector _bitBuckets]
  -[CNContactKeyVector keyVectorByAddingKeys:]
  -[CNContactKeyVector containsAllKeys]
  -[CNContactKeyVector isSubsetOfKeyVector:]


CNMutableContactKeyVector : CNContactKeyVector
  // class methods
  +[CNMutableContactKeyVector new]
  +[CNMutableContactKeyVector freezeIfClassIsImmutable:]

  // instance methods
  -[CNMutableContactKeyVector init]
  -[CNMutableContactKeyVector copyWithZone:]
  -[CNMutableContactKeyVector freeze]
  -[CNMutableContactKeyVector addKey:]
  -[CNMutableContactKeyVector unionKeyVector:]
  -[CNMutableContactKeyVector initWithKeyVector:]
  -[CNMutableContactKeyVector addKeys:]
  -[CNMutableContactKeyVector minusKeyVector:]
  -[CNMutableContactKeyVector intersectKeyVector:]
  -[CNMutableContactKeyVector subtractKey:]
  -[CNMutableContactKeyVector subtractKeys:]


CNDeduplication : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNDeduplication os_log]

  // instance methods
  -[CNDeduplication deduplicateContainer:store:]
  -[CNDeduplication deduplicateKeeping:deleting:store:]
  -[CNDeduplication contactsForGroup:store:]
  -[CNDeduplication identifierSetFromContacts:]
  -[CNDeduplication addContactsForIds:toGroup:usingRequest:store:]
  -[CNDeduplication deduplicateAllContainers:]


CNGroup : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *externalIdentifier
 @property  NSData *externalRepresentation
 @property  NSString *externalModificationTag
 @property  NSString *externalUUID
 @property  CNGroup *snapshot
 @property  int iOSLegacyIdentifier
 @property  NSDate *creationDate
 @property  NSDate *modificationDate
 @property  NSString *identifier
 @property  NSString *name

  // class methods
  +[CNGroup supportsSecureCoding]
  +[CNGroup localizedStringForKey:]
  +[CNGroup identifierProvider]
  +[CNGroup makeIdentifier]
  +[CNGroup makeIdentifierString]
  +[CNGroup predicateForiOSLegacyIdentifier:]
  +[CNGroup predicateForGroupsWithIdentifiers:]
  +[CNGroup predicateForGroupsInContainerWithIdentifier:]
  +[CNGroup predicateForSubgroupsInGroupWithIdentifier:]
  +[CNGroup predicateForGroupsWithNameMatching:]
  +[CNGroup predicateForGroupWithNameMatching:]

  // instance methods
  -[CNGroup init]
  -[CNGroup isEqual:]
  -[CNGroup name]
  -[CNGroup copyWithZone:]
  -[CNGroup mutableCopyWithZone:]
  -[CNGroup encodeWithCoder:]
  -[CNGroup initWithCoder:]
  -[CNGroup .cxx_destruct]
  -[CNGroup initWithName:]
  -[CNGroup identifier]
  -[CNGroup modificationDate]
  -[CNGroup creationDate]
  -[CNGroup snapshot]
  -[CNGroup initWithGroup:]
  -[CNGroup initWithIdentifier:name:]
  -[CNGroup iOSLegacyIdentifier]
  -[CNGroup externalIdentifier]
  -[CNGroup externalModificationTag]
  -[CNGroup externalRepresentation]
  -[CNGroup externalUUID]
  -[CNGroup initWithIdentifier:name:creationDate:modificationDate:]


CNContactFormatter : NSFormatter /System/Library/Frameworks/CoreData.framework/CoreData <NSSecureCoding>
 @property  NSPersonNameComponentsFormatter *nameFormatter
 @property  BOOL ignoresOrganization
 @property  BOOL ignoresNickname
 @property  unsigned long fallbackStyle
 @property  BOOL emphasizesPrimaryNameComponent
 @property  long long sortOrder
 @property  long long style

  // class methods
  +[CNContactFormatter supportsSecureCoding]
  +[CNContactFormatter descriptorForRequiredKeysForStyle:]
  +[CNContactFormatter stringFromContact:style:]
  +[CNContactFormatter styleSupportsFallBackToFullNameStyle:]
  +[CNContactFormatter attributedStringFromContact:style:defaultAttributes:]
  +[CNContactFormatter descriptorForRequiredKeysForNameOrder]
  +[CNContactFormatter nameOrderForContact:]
  +[CNContactFormatter descriptorForRequiredKeysForDelimiter]
  +[CNContactFormatter delimiterForContact:]

  // instance methods
  -[CNContactFormatter init]
  -[CNContactFormatter copyWithZone:]
  -[CNContactFormatter encodeWithCoder:]
  -[CNContactFormatter initWithCoder:]
  -[CNContactFormatter .cxx_destruct]
  -[CNContactFormatter stringForObjectValue:]
  -[CNContactFormatter attributedStringForObjectValue:withDefaultAttributes:]
  -[CNContactFormatter getObjectValue:forString:errorDescription:]
  -[CNContactFormatter style]
  -[CNContactFormatter setStyle:]
  -[CNContactFormatter sortOrder]
  -[CNContactFormatter setSortOrder:]
  -[CNContactFormatter descriptorForRequiredKeys]
  -[CNContactFormatter stringFromContact:]
  -[CNContactFormatter attributedStringFromContact:defaultAttributes:]
  -[CNContactFormatter fallbackStyle]
  -[CNContactFormatter ignoresNickname]
  -[CNContactFormatter setIgnoresNickname:]
  -[CNContactFormatter ignoresOrganization]
  -[CNContactFormatter setIgnoresOrganization:]
  -[CNContactFormatter stringFromContact:attributes:]
  -[CNContactFormatter fullNameForContact:attributes:style:]
  -[CNContactFormatter shortNameForContact:attributes:]
  -[CNContactFormatter avatarNameForContact:attributes:]
  -[CNContactFormatter abbreviatedNameForContact:attributes:]
  -[CNContactFormatter appendValueForProperties:fromContact:toString:delimiter:attributes:fallback:]
  -[CNContactFormatter appendValue:derivedFromPropertyName:toString:delimiter:attributes:]
  -[CNContactFormatter emphasizesPrimaryNameComponent]
  -[CNContactFormatter nameFormatter]
  -[CNContactFormatter setFallbackStyle:]
  -[CNContactFormatter setEmphasizesPrimaryNameComponent:]
  -[CNContactFormatter stringFromPotentiallySuggestedContact:relatedToProperty:]


CNReputationStore : NSObject /usr/lib/libSystem.B.dylib
 @property  CNReputationCoreRecentsAdapter *coreRecentsAdapter
 @property  CNReputationContactsAdapter *contactsAdapter
 @property  CNReputationLogger *logger
 @property  <CNSchedulerProvider> *schedulerProvider

  // instance methods
  -[CNReputationStore init]
  -[CNReputationStore .cxx_destruct]
  -[CNReputationStore logger]
  -[CNReputationStore schedulerProvider]
  -[CNReputationStore initWithCoreRecentsAdapter:contactsAdapter:logger:schedulerProvider:]
  -[CNReputationStore makeFutureForHandle:]
  -[CNReputationStore coreRecentsAdapter]
  -[CNReputationStore contactsAdapter]
  -[CNReputationStore reputationForHandle:timeout:error:]


CNContactNameOrderImpl : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNContactNameOrderImpl orderForSortOrder:]
  +[CNContactNameOrderImpl familyNameFirstOrder]
  +[CNContactNameOrderImpl givenNameFirstOrder]
  +[CNContactNameOrderImpl defaultSortOrder]
  +[CNContactNameOrderImpl defaultOrder]
  +[CNContactNameOrderImpl defaultNewContactOrder]

  // instance methods
  -[CNContactNameOrderImpl nameOrder]
  -[CNContactNameOrderImpl phoneticNameProperties]
  -[CNContactNameOrderImpl nameProperties]
  -[CNContactNameOrderImpl sortingNameProperties]


CNGivenNameFirstNameOrder : CNContactNameOrderImpl
  // instance methods
  -[CNGivenNameFirstNameOrder nameOrder]
  -[CNGivenNameFirstNameOrder phoneticNameProperties]
  -[CNGivenNameFirstNameOrder nameProperties]
  -[CNGivenNameFirstNameOrder sortingNameProperties]


CNFamilyNameFirstNameOrder : CNContactNameOrderImpl
  // instance methods
  -[CNFamilyNameFirstNameOrder nameOrder]
  -[CNFamilyNameFirstNameOrder phoneticNameProperties]
  -[CNFamilyNameFirstNameOrder nameProperties]
  -[CNFamilyNameFirstNameOrder sortingNameProperties]


CNContactWithNamePredicate : CNPredicate <CNMAIDPredicate, CNSuggestedContactPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name
 @property  unsigned long options

  // class methods
  +[CNContactWithNamePredicate supportsSecureCoding]
  +[CNContactWithNamePredicate doesPerson:matchName:]
  +[CNContactWithNamePredicate descriptionForOptions:]

  // instance methods
  -[CNContactWithNamePredicate isEqual:]
  -[CNContactWithNamePredicate name]
  -[CNContactWithNamePredicate options]
  -[CNContactWithNamePredicate encodeWithCoder:]
  -[CNContactWithNamePredicate initWithCoder:]
  -[CNContactWithNamePredicate .cxx_destruct]
  -[CNContactWithNamePredicate initWithName:]
  -[CNContactWithNamePredicate sgContactMatchesWithSortOrder:mutableObjects:service:error:]
  -[CNContactWithNamePredicate contactsFromCLSDataStore:]
  -[CNContactWithNamePredicate initWithName:options:]


CNReputationFutureBuilder : NSObject /usr/lib/libSystem.B.dylib
 @property  CNReputationHandle *handle
 @property  CNReputationCoreRecentsAdapter *coreRecentsAdapter
 @property  CNReputationContactsAdapter *contactsAdapter
 @property  CNReputationLogger *logger
 @property  CNFuture *scoreFuture

  // instance methods
  -[CNReputationFutureBuilder .cxx_destruct]
  -[CNReputationFutureBuilder handle]
  -[CNReputationFutureBuilder logger]
  -[CNReputationFutureBuilder build]
  -[CNReputationFutureBuilder coreRecentsAdapter]
  -[CNReputationFutureBuilder contactsAdapter]
  -[CNReputationFutureBuilder initWithHandle:coreRecentsAdapter:contactsAdapter:logger:]
  -[CNReputationFutureBuilder scoreFuture]
  -[CNReputationFutureBuilder coreRecentsTrustForHandle:]
  -[CNReputationFutureBuilder setScoreFuture:]
  -[CNReputationFutureBuilder contactsTrustForEmailAddress:]
  -[CNReputationFutureBuilder contactsTrustForPhoneNumber:]
  -[CNReputationFutureBuilder addCoreRecentsTrust]
  -[CNReputationFutureBuilder addContactsTrustForEmailAddress]
  -[CNReputationFutureBuilder addContactsTrustForPhoneNumber]


CNMAIDMapper : NSObject /usr/lib/libSystem.B.dylib <CNDataMapper>
 @property  CLSDataStore *dataStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *legacyTetheredSyncDeviceAnchor
 @property  NSString *legacyTetheredSyncComputerAnchor

  // class methods
  +[CNMAIDMapper os_log]

  // instance methods
  -[CNMAIDMapper init]
  -[CNMAIDMapper .cxx_destruct]
  -[CNMAIDMapper meContactIdentifiers:]
  -[CNMAIDMapper groupsMatchingPredicate:error:]
  -[CNMAIDMapper subgroupsOfGroupWithIdentifier:error:]
  -[CNMAIDMapper containersMatchingPredicate:error:]
  -[CNMAIDMapper serverSearchContainersMatchingPredicate:error:]
  -[CNMAIDMapper defaultContainerIdentifier]
  -[CNMAIDMapper policyForContainerWithIdentifier:error:]
  -[CNMAIDMapper accountsMatchingPredicate:error:]
  -[CNMAIDMapper executeSaveRequest:error:]
  -[CNMAIDMapper initWithContactsEnvironment:managedConfiguration:]
  -[CNMAIDMapper requestAccessForEntityType:completionHandler:]
  -[CNMAIDMapper requestAccessForEntityType:error:]
  -[CNMAIDMapper executeSaveRequest:response:authorizationContext:error:]
  -[CNMAIDMapper contactObservableForFetchRequest:]
  -[CNMAIDMapper initWithDataStore:environment:]
  -[CNMAIDMapper dataStore]


CNCoreSpotlightSearch : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNCoreSpotlightSearch executeQuery:protectionClass:bundleID:fetchAttributes:error:]
  +[CNCoreSpotlightSearch _runQuery:timeout:error:]


CNContactRelation : NSObject /usr/lib/libSystem.B.dylib <CNObjectValidation, NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContactRelation supportsSecureCoding]
  +[CNContactRelation contactRelationWithName:]

  // instance methods
  -[CNContactRelation isEqual:]
  -[CNContactRelation name]
  -[CNContactRelation copyWithZone:]
  -[CNContactRelation encodeWithCoder:]
  -[CNContactRelation initWithCoder:]
  -[CNContactRelation .cxx_destruct]
  -[CNContactRelation setName:]
  -[CNContactRelation initWithName:]
  -[CNContactRelation isValid:]


CNiOSABPolicy : CNPolicy
  // instance methods
  -[CNiOSABPolicy dealloc]
  -[CNiOSABPolicy isReadonly]
  -[CNiOSABPolicy initWithAddressBookPolicy:readOnly:]
  -[CNiOSABPolicy _orderedLabels:withOrder:]
  -[CNiOSABPolicy maximumCountOfValuesForContactProperty:]
  -[CNiOSABPolicy supportedLabelsForContactProperty:]
  -[CNiOSABPolicy maximumCountOfValuesForContactProperty:label:]
  -[CNiOSABPolicy shouldSetValue:property:contact:replacementValue:]
  -[CNiOSABPolicy shouldAddContact:]
  -[CNiOSABPolicy shouldRemoveContact:]


CNiOSABAccountForExternalIdentifierPredicate : CNPredicate <CNiOSAccountPredicate>
 @property  NSString *externalIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABAccountForExternalIdentifierPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABAccountForExternalIdentifierPredicate encodeWithCoder:]
  -[CNiOSABAccountForExternalIdentifierPredicate initWithCoder:]
  -[CNiOSABAccountForExternalIdentifierPredicate .cxx_destruct]
  -[CNiOSABAccountForExternalIdentifierPredicate initWithPredicate:]
  -[CNiOSABAccountForExternalIdentifierPredicate externalIdentifier]
  -[CNiOSABAccountForExternalIdentifierPredicate cn_copyAccountsInAddressBook:error:]
  -[CNiOSABAccountForExternalIdentifierPredicate initWithAccountExternalIdentifier:]


CNSaveRequestVerifier : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNSaveRequestVerifier insertedAndUpdatedContactsForSaveRequest:]
  +[CNSaveRequestVerifier _areDirectPropertiesOfSaveRequest:authorizedForSavingWithContext:error:]
  +[CNSaveRequestVerifier _arePropertiesOfContacts:inSaveRequest:authorizedForSavingWithContext:error:]
  +[CNSaveRequestVerifier _isEditingOfContacts:inSaveRequest:authorizedForSavingWithContext:error:]
  +[CNSaveRequestVerifier isValidSaveRequest:error:]
  +[CNSaveRequestVerifier isSaveRequest:authorizedForSavingWithContext:error:]


CNContainer : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  CNContainer *snapshot
 @property  NSString *externalIdentifier
 @property  NSString *externalModificationTag
 @property  NSString *externalSyncTag
 @property  NSData *externalSyncData
 @property  NSString *constraintsPath
 @property  NSString *meIdentifier
 @property  unsigned long restrictions
 @property  BOOL guardianStateDirty
 @property  int iOSLegacyIdentifier
 @property  NSString *accountIdentifier
 @property  BOOL enabled
 @property  CNContainerPermissions *permissions
 @property  BOOL guardianRestricted
 @property  BOOL parentallyManaged
 @property  NSDate *lastSyncDate
 @property  NSString *identifier
 @property  NSString *name
 @property  long long type

  // class methods
  +[CNContainer supportsSecureCoding]
  +[CNContainer identifierProvider]
  +[CNContainer makeIdentifier]
  +[CNContainer makeIdentifierString]
  +[CNContainer predicateForContainersWithIdentifiers:]
  +[CNContainer predicateForContainerOfContactWithIdentifier:]
  +[CNContainer predicateForContainerOfGroupWithIdentifier:]
  +[CNContainer predicateForContainersInAccountWithIdentifier:includingDisabledContainers:]
  +[CNContainer predicateForContainersInAccountWithIdentifier:]
  +[CNContainer predicateForContainersInAccountWithExternalIdentifier:]
  +[CNContainer predicateForDefaultContainerForAccountWithIdentifier:]
  +[CNContainer predicateForContainersIncludingDisabled:]
  +[CNContainer predicateForLocalContainerIncludingDisabled:]
  +[CNContainer predicateForiOSLegacyIdentifier:]
  +[CNContainer makeDefaultContainerPermissions]

  // instance methods
  -[CNContainer init]
  -[CNContainer isEqual:]
  -[CNContainer name]
  -[CNContainer copyWithZone:]
  -[CNContainer mutableCopyWithZone:]
  -[CNContainer type]
  -[CNContainer encodeWithCoder:]
  -[CNContainer initWithCoder:]
  -[CNContainer .cxx_destruct]
  -[CNContainer initWithName:]
  -[CNContainer identifier]
  -[CNContainer isEnabled]
  -[CNContainer lastSyncDate]
  -[CNContainer accountIdentifier]
  -[CNContainer restrictions]
  -[CNContainer snapshot]
  -[CNContainer initWithContainer:]
  -[CNContainer iOSLegacyIdentifier]
  -[CNContainer externalIdentifier]
  -[CNContainer externalModificationTag]
  -[CNContainer externalSyncTag]
  -[CNContainer externalSyncData]
  -[CNContainer constraintsPath]
  -[CNContainer meIdentifier]
  -[CNContainer isGuardianRestricted]
  -[CNContainer isGuardianStateDirty]
  -[CNContainer permissions]
  -[CNContainer initWithIdentifier:accountIdentifier:name:type:permissions:]
  -[CNContainer initWithIdentifier:name:type:iOSLegacyIdentifier:accountIdentifier:enabled:permissions:externalIdentifier:externalModificationTag:externalSyncTag:externalSyncData:constraintsPath:meIdentifier:restrictions:guardianRestricted:lastSyncDate:]
  -[CNContainer descriptionForContainerType:]
  -[CNContainer initWithName:type:]
  -[CNContainer initWithIdentifier:name:type:]
  -[CNContainer isParentallyManaged]


CNContactSearchIndexFormatter : NSFormatter /System/Library/Frameworks/CoreData.framework/CoreData
  // instance methods
  -[CNContactSearchIndexFormatter stringForObjectValue:]
  -[CNContactSearchIndexFormatter getObjectValue:forString:errorDescription:]
  -[CNContactSearchIndexFormatter stringFromContact:]
  -[CNContactSearchIndexFormatter auxiliaryIndexStringForContact:]
  -[CNContactSearchIndexFormatter nameExpansionsForContact:]


CNContactBufferDecoderFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNContactBufferDecoderFactory decoderForFetchRequest:]


CNDataMapperContactStore : CNContactStore
 @property  <CNContactsLogger> *logger
 @property  <CNRegulatoryLogger> *regulatoryLogger
 @property  NSObject<CNDataMapper> *mapper

  // class methods
  +[CNDataMapperContactStore enableContactsOutOfProcess]
  +[CNDataMapperContactStore dataMapperClassForOptions:]

  // instance methods
  -[CNDataMapperContactStore init]
  -[CNDataMapperContactStore .cxx_destruct]
  -[CNDataMapperContactStore logger]
  -[CNDataMapperContactStore unifiedContactsMatchingPredicate:keysToFetch:error:]
  -[CNDataMapperContactStore initWithEnvironment:]
  -[CNDataMapperContactStore currentHistoryToken]
  -[CNDataMapperContactStore changeHistoryWithFetchRequest:error:]
  -[CNDataMapperContactStore executeChangeHistoryClearRequest:error:]
  -[CNDataMapperContactStore hasMultipleGroupsOrAccounts]
  -[CNDataMapperContactStore requestAccessForEntityType:]
  -[CNDataMapperContactStore resetSortDataIfNeededWithError:]
  -[CNDataMapperContactStore sectionListOffsetsForSortOrder:error:]
  -[CNDataMapperContactStore unifiedContactCountWithError:]
  -[CNDataMapperContactStore contactCountForFetchRequest:error:]
  -[CNDataMapperContactStore meContactIdentifiers:]
  -[CNDataMapperContactStore enumerateContactsAndMatchInfoWithFetchRequest:error:usingBlock:]
  -[CNDataMapperContactStore groupsMatchingPredicate:error:]
  -[CNDataMapperContactStore groupWithIdentifier:error:]
  -[CNDataMapperContactStore membersOfGroupWithIdentifier:keysToFetch:error:]
  -[CNDataMapperContactStore subgroupsOfGroupWithIdentifier:error:]
  -[CNDataMapperContactStore containersMatchingPredicate:error:]
  -[CNDataMapperContactStore serverSearchContainersMatchingPredicate:error:]
  -[CNDataMapperContactStore defaultContainerIdentifier]
  -[CNDataMapperContactStore policyForContainerWithIdentifier:error:]
  -[CNDataMapperContactStore usedLabelsForPropertyWithKey:error:]
  -[CNDataMapperContactStore setMeContact:error:]
  -[CNDataMapperContactStore setMeContact:forContainer:error:]
  -[CNDataMapperContactStore accountsMatchingPredicate:error:]
  -[CNDataMapperContactStore executeSaveRequest:error:]
  -[CNDataMapperContactStore executeFetchRequest:progressiveResults:completion:]
  -[CNDataMapperContactStore contactWithUserActivityUserInfo:keysToFetch:]
  -[CNDataMapperContactStore userActivityUserInfoForContact:]
  -[CNDataMapperContactStore executeSaveRequest:response:authorizationContext:error:]
  -[CNDataMapperContactStore identifierWithError:]
  -[CNDataMapperContactStore saveSequenceCount]
  -[CNDataMapperContactStore moveContacts:fromContainer:toContainer:error:]
  -[CNDataMapperContactStore setBestMeIfNeededForGivenName:familyName:email:error:]
  -[CNDataMapperContactStore descriptorForRequiredKeysForMatchingDictionary]
  -[CNDataMapperContactStore matchingDictionaryForContact:]
  -[CNDataMapperContactStore contactIdentifierWithMatchingDictionary:]
  -[CNDataMapperContactStore registerChangeHistoryClientIdentifier:forContainerIdentifier:error:]
  -[CNDataMapperContactStore unregisterChangeHistoryClientIdentifier:forContainerIdentifier:error:]
  -[CNDataMapperContactStore setDefaultAccountIdentifier:error:]
  -[CNDataMapperContactStore _allCustomProperties]
  -[CNDataMapperContactStore _createInfo]
  -[CNDataMapperContactStore _customPropertyValuesForRecordWithIdentifier:error:]
  -[CNDataMapperContactStore _groupsMatchingCoreDataPredicate:error:]
  -[CNDataMapperContactStore _infosForAccountsWithIdentifiers:error:]
  -[CNDataMapperContactStore _persistentStoreURLForRecordWithIdentifier:]
  -[CNDataMapperContactStore _saveAddedCustomProperties:deletedCustomProperties:error:]
  -[CNDataMapperContactStore _saveCustomPropertyValuesForRemoteRecords:error:]
  -[CNDataMapperContactStore legacyTetheredSyncDeviceAnchor]
  -[CNDataMapperContactStore setLegacyTetheredSyncDeviceAnchor:]
  -[CNDataMapperContactStore legacyTetheredSyncComputerAnchor]
  -[CNDataMapperContactStore setLegacyTetheredSyncComputerAnchor:]
  -[CNDataMapperContactStore regulatoryLogger]
  -[CNDataMapperContactStore initWithEnvironment:options:managedConfiguration:]
  -[CNDataMapperContactStore initWithDataMapper:environment:]
  -[CNDataMapperContactStore mapper]
  -[CNDataMapperContactStore initWithEnvironment:managedConfiguration:]
  -[CNDataMapperContactStore contactsForFetchRequest:matchInfos:error:]
  -[CNDataMapperContactStore isValidSaveRequest:authorizationContext:error:]
  -[CNDataMapperContactStore contactsInContainerWithIdentifier:keysToFetch:error:]
  -[CNDataMapperContactStore _smartGroupsForAccountsWithIdentifiers:]
  -[CNDataMapperContactStore _smartGroupsMatchingPredicate:]
  -[CNDataMapperContactStore iOSMapper]


CNMockFavoritesLogger : NSObject /usr/lib/libSystem.B.dylib <CNFavoritesLogger>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNMockFavoritesLogger readingFavorites:]
  -[CNMockFavoritesLogger writingFavorites:]
  -[CNMockFavoritesLogger rematchingFavorites:]
  -[CNMockFavoritesLogger finishedReadingRemoteFavorites]
  -[CNMockFavoritesLogger finishedReadingFavoritesFromPath:entriesCount:]
  -[CNMockFavoritesLogger finishedWritingRemoteFavorites]
  -[CNMockFavoritesLogger finishedWritingFavoritesToPath:entriesCount:]
  -[CNMockFavoritesLogger failedToReadRemoteFavorites:]
  -[CNMockFavoritesLogger failedToReadFavoritesFromPath:error:simulateCrashReport:]
  -[CNMockFavoritesLogger failedToConvertFavoritesToPropertyList:]
  -[CNMockFavoritesLogger failedToVerifyFavorites:withPropertyListFavorites:error:]
  -[CNMockFavoritesLogger failedToWriteRemoteFavorites:]
  -[CNMockFavoritesLogger failedToVerifyWrittenFavoritesExistsAtPath:]
  -[CNMockFavoritesLogger failedToWriteFavoritesToPath:error:simulateCrashReport:]
  -[CNMockFavoritesLogger reportFavoritesAccessedBeforeFirstUnlock]


CNiOSABStringMatchContactPredicate : CNPredicate <CNiOSContactPredicate>
 @property  NSString *searchString
 @property  NSString *accountIdentifier
 @property  NSString *containerIdentifier
 @property  NSString *groupIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABStringMatchContactPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABStringMatchContactPredicate encodeWithCoder:]
  -[CNiOSABStringMatchContactPredicate initWithCoder:]
  -[CNiOSABStringMatchContactPredicate .cxx_destruct]
  -[CNiOSABStringMatchContactPredicate groupIdentifier]
  -[CNiOSABStringMatchContactPredicate containerIdentifier]
  -[CNiOSABStringMatchContactPredicate accountIdentifier]
  -[CNiOSABStringMatchContactPredicate searchString]
  -[CNiOSABStringMatchContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABStringMatchContactPredicate cn_supportsNativeSorting]
  -[CNiOSABStringMatchContactPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABStringMatchContactPredicate cn_supportsEncodedFetching]
  -[CNiOSABStringMatchContactPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABStringMatchContactPredicate initWithSearchString:accountIdentifier:containerIdentifier:groupIdentifier:]


CNAccessAuthorization : NSObject /usr/lib/libSystem.B.dylib
 @property  CNFAccessAuthorization *authorizer

  // class methods
  +[CNAccessAuthorization new]
  +[CNAccessAuthorization allAuthorizationKeys]

  // instance methods
  -[CNAccessAuthorization init]
  -[CNAccessAuthorization .cxx_destruct]
  -[CNAccessAuthorization initWithAuditToken:]
  -[CNAccessAuthorization authorizedKeysForContactKeys:]
  -[CNAccessAuthorization initWithAuthorizer:]
  -[CNAccessAuthorization authorizeFetchRequest:accessError:]
  -[CNAccessAuthorization removeUnauthorizedKeysFromFetchRequest:]
  -[CNAccessAuthorization authorizer]
  -[CNAccessAuthorization performWork:authorizingFetchRequest:failureHandler:]
  -[CNAccessAuthorization setAuthorizer:]


CNiOSABDisabledContainersPredicate : CNPredicate <CNiOSContainerPredicate>
 @property  BOOL includesDisabledContainers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABDisabledContainersPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABDisabledContainersPredicate encodeWithCoder:]
  -[CNiOSABDisabledContainersPredicate initWithCoder:]
  -[CNiOSABDisabledContainersPredicate initWithPredicate:]
  -[CNiOSABDisabledContainersPredicate cn_copyContainersInAddressBook:error:]
  -[CNiOSABDisabledContainersPredicate includesDisabledContainers]
  -[CNiOSABDisabledContainersPredicate initWithDisabledContainersIncluded:]


CNiOSABContactWithNamePredicate : CNContactWithNamePredicate <CNiOSContactPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNiOSABContactWithNamePredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABContactWithNamePredicate cn_supportsNativeSorting]
  -[CNiOSABContactWithNamePredicate cn_supportsNativeBatchFetch]
  -[CNiOSABContactWithNamePredicate cn_supportsEncodedFetching]
  -[CNiOSABContactWithNamePredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]


CNValueOrigin : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *localizedApplicationName
 @property  NSString *donationIdentifier

  // class methods
  +[CNValueOrigin supportsSecureCoding]

  // instance methods
  -[CNValueOrigin init]
  -[CNValueOrigin isEqual:]
  -[CNValueOrigin copyWithZone:]
  -[CNValueOrigin encodeWithCoder:]
  -[CNValueOrigin initWithCoder:]
  -[CNValueOrigin .cxx_destruct]
  -[CNValueOrigin initWithLocalizedApplicationName:donationIdentifier:]
  -[CNValueOrigin localizedApplicationName]
  -[CNValueOrigin donationIdentifier]


CNChangesNotifierProxy : NSObject /usr/lib/libSystem.B.dylib <CNChangeNotificationReceiver>
 @property  NSMutableDictionary *notificationForwardingMapping
 @property  NSCountedSet *supressedNotificationNames
 @property  NSMutableDictionary *notificationsToBeSentOnceAllowed
 @property  NSObject<OS_dispatch_queue> *notifierQueue
 @property  CNCoalescingTimer *coalescingTimer
 @property  NSString *coalescingNotificationName
 @property  NSMapTable *removalBlocks
 @property  NSMapTable *notifyingBlocks
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  <CNContactsLoggerProvider> *loggerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL forwardsSelfGeneratedDistributedSaveNotifications
 @property  double externalNotificationCoalescingDelay

  // instance methods
  -[CNChangesNotifierProxy .cxx_destruct]
  -[CNChangesNotifierProxy loggerProvider]
  -[CNChangesNotifierProxy initWithSchedulerProvider:loggerProvider:]
  -[CNChangesNotifierProxy schedulerProvider]
  -[CNChangesNotifierProxy removalBlocks]
  -[CNChangesNotifierProxy notifyingBlocks]
  -[CNChangesNotifierProxy postNotificationName:fromSender:saveIdentifier:userInfo:shouldForwardExternally:calledFromNotifierQueue:isFromExternalProcess:]
  -[CNChangesNotifierProxy supressedNotificationNames]
  -[CNChangesNotifierProxy notificationsToBeSentOnceAllowed]
  -[CNChangesNotifierProxy receiveNotificationName:fromSender:saveIdentifier:userInfo:calledFromNotifierQueue:isFromExternalProcess:]
  -[CNChangesNotifierProxy notificationForwardingMapping]
  -[CNChangesNotifierProxy setRemovalBlocks:]
  -[CNChangesNotifierProxy setCoalescingNotificationName:]
  -[CNChangesNotifierProxy coalescingNotificationName]
  -[CNChangesNotifierProxy coalescingTimer]
  -[CNChangesNotifierProxy externalNotificationCoalescingDelay]
  -[CNChangesNotifierProxy setCoalescingTimer:]
  -[CNChangesNotifierProxy receiveNotificationName:fromSender:saveIdentifier:userInfo:isFromExternalProcess:]
  -[CNChangesNotifierProxy receiveExternalNotificationName:]
  -[CNChangesNotifierProxy forwardsSelfGeneratedDistributedSaveNotifications]
  -[CNChangesNotifierProxy setForwardsSelfGeneratedDistributedSaveNotifications:]
  -[CNChangesNotifierProxy setExternalNotificationCoalescingDelay:]
  -[CNChangesNotifierProxy addListenerForNotificationName:registration:removal:]
  -[CNChangesNotifierProxy addNotificationPoster:forNotificationName:]
  -[CNChangesNotifierProxy postNotificationName:fromSender:saveIdentifier:isFromExternalProcess:]
  -[CNChangesNotifierProxy forwardNotificationName:asNotificationName:]
  -[CNChangesNotifierProxy removeAllRegisteredNotificationSources]
  -[CNChangesNotifierProxy supressNotificationName:]
  -[CNChangesNotifierProxy stopSupressionOfNotificationName:]
  -[CNChangesNotifierProxy coalesceNotificationName:]
  -[CNChangesNotifierProxy waitForCurrentTasksToFinish]
  -[CNChangesNotifierProxy setNotifyingBlocks:]
  -[CNChangesNotifierProxy setSupressedNotificationNames:]
  -[CNChangesNotifierProxy setNotificationsToBeSentOnceAllowed:]
  -[CNChangesNotifierProxy notifierQueue]
  -[CNChangesNotifierProxy setNotifierQueue:]


CNChangesNotifier : NSObject /usr/lib/libSystem.B.dylib
 @property  CNChangesNotifierProxy *notifierProxy

  // class methods
  +[CNChangesNotifier sharedNotifier]
  +[CNChangesNotifier sharedNotifierWithNotificationWrapper:schedulerProvider:loggerProvider:]
  +[CNChangesNotifier flushSharedNotifier]

  // instance methods
  -[CNChangesNotifier dealloc]
  -[CNChangesNotifier .cxx_destruct]
  -[CNChangesNotifier willSaveChanges]
  -[CNChangesNotifier didSaveChangesSuccessfully:fromContactStore:requestIdentifier:]
  -[CNChangesNotifier didChangeMeContactSuccessfully:fromContactStore:requestIdentifier:]
  -[CNChangesNotifier forwardsSelfGeneratedDistributedSaveNotifications]
  -[CNChangesNotifier setForwardsSelfGeneratedDistributedSaveNotifications:]
  -[CNChangesNotifier setExternalNotificationCoalescingDelay:]
  -[CNChangesNotifier waitForCurrentTasksToFinish]
  -[CNChangesNotifier initWithNotificationWrapper:schedulerProvider:loggerProvider:]
  -[CNChangesNotifier notifierProxy]
  -[CNChangesNotifier setNotifierProxy:]


CNChangeNotifierDarwinWrapper : NSObject /usr/lib/libSystem.B.dylib <CNChangeNotifierWrapper>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNChangeNotifierDarwinWrapper postNotification:]
  -[CNChangeNotifierDarwinWrapper addObserver:notification:]
  -[CNChangeNotifierDarwinWrapper removeObserver:notification:]


CNChangeNotifierDistributedCenterWrapper : NSObject /usr/lib/libSystem.B.dylib <CNChangeNotifierWrapper>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNChangeNotifierDistributedCenterWrapper postNotification:]
  -[CNChangeNotifierDistributedCenterWrapper addObserver:notification:]
  -[CNChangeNotifierDistributedCenterWrapper removeObserver:notification:]


CNContactNameSorting : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNContactNameSorting shouldSortByGivenName]


CNPhoneDialer : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNPhoneDialer URLWithPhoneNumber:]
  +[CNPhoneDialer sanitizePhoneNumber:]
  +[CNPhoneDialer dialMessageWithDataValue:displayName:]
  +[CNPhoneDialer sendMessage:error:]
  +[CNPhoneDialer messageWithAdditionalParameters:]
  +[CNPhoneDialer cancelMessageWithDialMessageID:]
  +[CNPhoneDialer loadIdentityServices]
  +[CNPhoneDialer dialNumber:displayName:error:]
  +[CNPhoneDialer sendDialMessage:displayName:error:]
  +[CNPhoneDialer cancelDialMessage:error:]


CNSaveResponse : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  BOOL didAffectMeCard

  // class methods
  +[CNSaveResponse supportsSecureCoding]

  // instance methods
  -[CNSaveResponse init]
  -[CNSaveResponse encodeWithCoder:]
  -[CNSaveResponse initWithCoder:]
  -[CNSaveResponse .cxx_destruct]
  -[CNSaveResponse applySnapshotsToSaveRequest:]
  -[CNSaveResponse didAffectMeCard]


CNMutableSaveResponse : CNSaveResponse
 @property  BOOL didAffectMeCard

  // class methods
  +[CNMutableSaveResponse supportsSecureCoding]

  // instance methods
  -[CNMutableSaveResponse setDidAffectMeCard:]
  -[CNMutableSaveResponse setContainerSnapshot:forIndexPath:]
  -[CNMutableSaveResponse setContactSnapshot:forIndexPath:]
  -[CNMutableSaveResponse setGroupSnapshot:forIndexPath:]


CNContactVCardWritingAdapter : NSObject /usr/lib/libSystem.B.dylib <CNVCardPerson>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *middleName
 @property  NSString *title
 @property  NSString *suffix
 @property  NSString *companyName
 @property  BOOL isCompany
 @property  NSString *nickname
 @property  NSString *maidenName
 @property  NSString *phoneticFirstName
 @property  NSString *phoneticMiddleName
 @property  NSString *phoneticLastName
 @property  NSString *pronunciationFirstName
 @property  NSString *pronunciationLastName
 @property  NSString *organization
 @property  NSString *phoneticOrganization
 @property  NSString *department
 @property  NSString *jobTitle
 @property  BOOL isMe
 @property  int nameOrder
 @property  NSArray *emailAddresses
 @property  NSArray *phoneNumbers
 @property  NSArray *postalAddresses
 @property  NSArray *socialProfiles
 @property  NSArray *instantMessagingAddresses
 @property  NSArray *urls
 @property  NSArray *calendarURIs
 @property  NSDictionary *activityAlerts
 @property  NSArray *imageReferences
 @property  NSDictionary *imageCropRects
 @property  NSDictionary *largeImageCropRects
 @property  NSData *largeImageData
 @property  NSData *imageData
 @property  NSDateComponents *birthdayComponents
 @property  NSDateComponents *alternateBirthdayComponents
 @property  NSArray *otherDateComponents
 @property  NSArray *relatedNames
 @property  NSString *note
 @property  NSArray *namesOfParentGroups
 @property  NSString *cardDAVUID
 @property  NSString *uid
 @property  NSString *phonemeData
 @property  NSString *downtimeWhitelist
 @property  NSString *preferredLikenessSource
 @property  NSString *preferredApplePersonaIdentifier
 @property  NSArray *unknownProperties

  // class methods
  +[CNContactVCardWritingAdapter adapterWithContact:]
  +[CNContactVCardWritingAdapter descriptorForAllSupportedKeys]

  // instance methods
  -[CNContactVCardWritingAdapter .cxx_destruct]
  -[CNContactVCardWritingAdapter middleName]
  -[CNContactVCardWritingAdapter nickname]
  -[CNContactVCardWritingAdapter title]
  -[CNContactVCardWritingAdapter uid]
  -[CNContactVCardWritingAdapter phoneNumbers]
  -[CNContactVCardWritingAdapter organization]
  -[CNContactVCardWritingAdapter imageData]
  -[CNContactVCardWritingAdapter firstName]
  -[CNContactVCardWritingAdapter lastName]
  -[CNContactVCardWritingAdapter emailAddresses]
  -[CNContactVCardWritingAdapter isMe]
  -[CNContactVCardWritingAdapter urls]
  -[CNContactVCardWritingAdapter phoneticMiddleName]
  -[CNContactVCardWritingAdapter initWithContact:]
  -[CNContactVCardWritingAdapter socialProfiles]
  -[CNContactVCardWritingAdapter note]
  -[CNContactVCardWritingAdapter jobTitle]
  -[CNContactVCardWritingAdapter postalAddresses]
  -[CNContactVCardWritingAdapter preferredLikenessSource]
  -[CNContactVCardWritingAdapter preferredApplePersonaIdentifier]
  -[CNContactVCardWritingAdapter calendarURIs]
  -[CNContactVCardWritingAdapter phonemeData]
  -[CNContactVCardWritingAdapter downtimeWhitelist]
  -[CNContactVCardWritingAdapter cardDAVUID]
  -[CNContactVCardWritingAdapter nameOrder]
  -[CNContactVCardWritingAdapter vCardPropertyItemsForProperty:]
  -[CNContactVCardWritingAdapter vCardPropertyItemsForProperty:valueTransform:]
  -[CNContactVCardWritingAdapter activityAlerts]
  -[CNContactVCardWritingAdapter suffix]
  -[CNContactVCardWritingAdapter companyName]
  -[CNContactVCardWritingAdapter isCompany]
  -[CNContactVCardWritingAdapter largeImageHashOfType:]
  -[CNContactVCardWritingAdapter maidenName]
  -[CNContactVCardWritingAdapter phoneticFirstName]
  -[CNContactVCardWritingAdapter phoneticLastName]
  -[CNContactVCardWritingAdapter pronunciationFirstName]
  -[CNContactVCardWritingAdapter pronunciationLastName]
  -[CNContactVCardWritingAdapter phoneticOrganization]
  -[CNContactVCardWritingAdapter department]
  -[CNContactVCardWritingAdapter instantMessagingAddresses]
  -[CNContactVCardWritingAdapter imageReferences]
  -[CNContactVCardWritingAdapter imageCropRects]
  -[CNContactVCardWritingAdapter largeImageCropRects]
  -[CNContactVCardWritingAdapter largeImageData]
  -[CNContactVCardWritingAdapter birthdayComponents]
  -[CNContactVCardWritingAdapter alternateBirthdayComponents]
  -[CNContactVCardWritingAdapter otherDateComponents]
  -[CNContactVCardWritingAdapter relatedNames]
  -[CNContactVCardWritingAdapter namesOfParentGroups]
  -[CNContactVCardWritingAdapter unknownProperties]


CNChangeHistoryResult : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  BOOL changesTruncated
 @property  CNChangeHistoryAnchor *latestChangeAnchor
 @property  NSArray *contactChanges
 @property  NSArray *groupChanges
 @property  NSArray *labeledValueChanges
 @property  BOOL unifyResults

  // class methods
  +[CNChangeHistoryResult supportsSecureCoding]
  +[CNChangeHistoryResult enumerateEnumerator:usingBlock:]

  // instance methods
  -[CNChangeHistoryResult encodeWithCoder:]
  -[CNChangeHistoryResult initWithCoder:]
  -[CNChangeHistoryResult .cxx_destruct]
  -[CNChangeHistoryResult setUnifyResults:]
  -[CNChangeHistoryResult contactChanges]
  -[CNChangeHistoryResult changesTruncated]
  -[CNChangeHistoryResult latestChangeAnchor]
  -[CNChangeHistoryResult enumerateContactChangesWithKeysToFetch:fromContactStore:error:usingBlock:]
  -[CNChangeHistoryResult unifyResults]
  -[CNChangeHistoryResult contactChangesEnumeratorWithKeysToFetch:contactStore:]
  -[CNChangeHistoryResult groupChangesEnumeratorWithContactStore:]
  -[CNChangeHistoryResult setChangesTruncated:]
  -[CNChangeHistoryResult setLatestChangeAnchor:]
  -[CNChangeHistoryResult setContactChanges:]
  -[CNChangeHistoryResult setGroupChanges:]
  -[CNChangeHistoryResult setLabeledValueChanges:]
  -[CNChangeHistoryResult groupChanges]
  -[CNChangeHistoryResult labeledValueChanges]
  -[CNChangeHistoryResult enumerateGroupChangesFromContactStore:error:usingBlock:]
  -[CNChangeHistoryResult labeledValueChangesEnumeratorWithContactStore:]


CNIndexClientState : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  long long indexVersion
 @property  BOOL isFullSyncDone
 @property  CNChangeHistoryAnchor *fullSyncSnapshotAnchor
 @property  long long fullSyncOffset

  // class methods
  +[CNIndexClientState supportsSecureCoding]
  +[CNIndexClientState clientStateWithData:logger:]

  // instance methods
  -[CNIndexClientState init]
  -[CNIndexClientState encodeWithCoder:]
  -[CNIndexClientState initWithCoder:]
  -[CNIndexClientState .cxx_destruct]
  -[CNIndexClientState data]
  -[CNIndexClientState isFullSyncDone]
  -[CNIndexClientState indexVersion]
  -[CNIndexClientState setIndexVersion:]
  -[CNIndexClientState setIsFullSyncDone:]
  -[CNIndexClientState fullSyncOffset]
  -[CNIndexClientState fullSyncSnapshotAnchor]
  -[CNIndexClientState setFullSyncOffset:]
  -[CNIndexClientState setFullSyncSnapshotAnchor:]


CNSuggestedSaveRequest : CNSaveRequest
 @property  NSMutableSet *mutableConfirmedSuggestions
 @property  NSMutableSet *mutableRejectedSuggestions
 @property  NSSet *confirmedSuggestions
 @property  NSSet *rejectedSuggestions

  // instance methods
  -[CNSuggestedSaveRequest .cxx_destruct]
  -[CNSuggestedSaveRequest storeIdentifier]
  -[CNSuggestedSaveRequest confirmSuggestion:]
  -[CNSuggestedSaveRequest rejectSuggestion:]
  -[CNSuggestedSaveRequest confirmedSuggestions]
  -[CNSuggestedSaveRequest rejectedSuggestions]
  -[CNSuggestedSaveRequest mutableConfirmedSuggestions]
  -[CNSuggestedSaveRequest setMutableConfirmedSuggestions:]
  -[CNSuggestedSaveRequest mutableRejectedSuggestions]
  -[CNSuggestedSaveRequest setMutableRejectedSuggestions:]


CNDonatedContactSanitizer : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNDonatedContactSanitizer mutableCopyOfDonatedContact:withCustomIdentifier:]
  +[CNDonatedContactSanitizer storeInfoFromPredicate:]
  +[CNDonatedContactSanitizer storeInfoByMergingStoreInfos:]
  +[CNDonatedContactSanitizer markContactAndMultiValuesAsDonated:usingStoreInfo:andStoreIdentifier:]
  +[CNDonatedContactSanitizer sanitizeDonatedContact:matchingPredicate:]


CNiOSABURLContactPredicate : CNPredicate <CNiOSContactPredicate>
 @property  NSString *urlString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABURLContactPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABURLContactPredicate encodeWithCoder:]
  -[CNiOSABURLContactPredicate initWithCoder:]
  -[CNiOSABURLContactPredicate .cxx_destruct]
  -[CNiOSABURLContactPredicate urlString]
  -[CNiOSABURLContactPredicate initWithURLString:]
  -[CNiOSABURLContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABURLContactPredicate cn_supportsNativeSorting]
  -[CNiOSABURLContactPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABURLContactPredicate cn_supportsEncodedFetching]
  -[CNiOSABURLContactPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]


CNContactClassifiedHandleStringInterpreter : NSObject /usr/lib/libSystem.B.dylib
 @property  CNHandleStringClassification *classification
 @property  NSMutableArray *emailAddressesImpl
 @property  NSMutableArray *phoneNumbersImpl
 @property  NSMutableArray *postalAddressesImpl
 @property  NSMutableArray *unconvertableHandles
 @property  BOOL hasBeenInterpreted
 @property  NSArray *emailAddresses
 @property  NSArray *phoneNumbers
 @property  NSArray *postalAddresses

  // instance methods
  -[CNContactClassifiedHandleStringInterpreter init]
  -[CNContactClassifiedHandleStringInterpreter .cxx_destruct]
  -[CNContactClassifiedHandleStringInterpreter phoneNumbers]
  -[CNContactClassifiedHandleStringInterpreter emailAddresses]
  -[CNContactClassifiedHandleStringInterpreter postalAddresses]
  -[CNContactClassifiedHandleStringInterpreter initWithHandleStringClassification:]
  -[CNContactClassifiedHandleStringInterpreter interpretEmailAddresses]
  -[CNContactClassifiedHandleStringInterpreter interpretPhoneNumbers]
  -[CNContactClassifiedHandleStringInterpreter interpretPostalAddresses]
  -[CNContactClassifiedHandleStringInterpreter interpretUnknownsAsEmailAddresses]
  -[CNContactClassifiedHandleStringInterpreter setHasBeenInterpreted:]
  -[CNContactClassifiedHandleStringInterpreter interpretValues]
  -[CNContactClassifiedHandleStringInterpreter classification]
  -[CNContactClassifiedHandleStringInterpreter emailAddressesImpl]
  -[CNContactClassifiedHandleStringInterpreter phoneNumbersImpl]
  -[CNContactClassifiedHandleStringInterpreter postalAddressesImpl]
  -[CNContactClassifiedHandleStringInterpreter unconvertableHandles]
  -[CNContactClassifiedHandleStringInterpreter hasBeenInterpreted]


CN : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CN imageType]
  +[CN imageHash]
  +[CN instantMessagAddressesDescription]
  +[CN contactPropertiesByKey]
  +[CN unifyContactMatchInfos:linkedContacts:]
  +[CN contactUnifyingContacts:includingMainStoreContacts:allowMutableContactFreeze:]
  +[CN containerIdentifierDescription]
  +[CN containerNameDescription]
  +[CN containerTypeDescription]
  +[CN containeriOSLegacyIdentifierDescription]
  +[CN containerAccountIdentifierDescription]
  +[CN containerEnabledDescription]
  +[CN containerExternalIdentifierDescription]
  +[CN containerExternalModificationTagDescription]
  +[CN containerExternalSyncTagDescription]
  +[CN containerExternalSyncDataDescription]
  +[CN containerConstraintsPathDescription]
  +[CN containerMeIdentifierDescription]
  +[CN containerRestrictionsDescription]
  +[CN containerGuardianRestrictedDescription]
  +[CN containerGuardianStateDirtyDescription]
  +[CN containerLastSyncDateDescription]
  +[CN allContainerProperties]
  +[CN writableContainerProperties]
  +[CN multiValueContactProperties]
  +[CN unifyMultivalues:forProperty:]
  +[CN phoneNumberFromStringTransform]
  +[CN relatedContactFromStringTransform]
  +[CN socialProfileFromDictionaryTransform]
  +[CN instantMessageAddressFromDictionaryTransform]
  +[CN writableContactProperties]
  +[CN restrictedProperties]
  +[CN areValidGregorianDayComponents:error:]
  +[CN dateComponentsFromDictionaryTransform]
  +[CN areValidNonGregorianDayComponents:error:]
  +[CN phoneNumberToStringTransform]
  +[CN relatedContactToStringTransform]
  +[CN instantMessageAddressToDictionaryTransform]
  +[CN socialProfileToFoundationProfileTransform]
  +[CN socialProfileToDictionaryTransform]
  +[CN postalAddressToDictionaryTransform]
  +[CN postalAddressFromDictionaryTransform]
  +[CN areValidKeyPaths:forObject:expectedClasses:allowNil:error:]
  +[CN _unifyContacts:includingMainStoreContacts:]
  +[CN indexOfPreferredContactsForUnifying:includingMainStoreContacts:]
  +[CN identifierMapForUnifiedContact:backingContacts:]
  +[CN identifierMapForUnifiedMultiValue:backingMultiValues:forProperty:]
  +[CN indexOfUnifiedIdentifier:onNonUnifiedMultiValue:withIdentifierMap:]
  +[CN addLinkedIdentifier:toLabeledValue:]
  +[CN mutableContactUnifyingContacts:includingMainStoreContacts:]
  +[CN groupIdentifiersByLabeledValue:forProperty:]
  +[CN sourceContactForValue:labeledValueIdentifier:propertyKey:inUnifiedContact:]
  +[CN imageDataDescription]
  +[CN cropRectDescription]
  +[CN thumbnailImageDataDescription]
  +[CN preferredLikenessSourceDescription]
  +[CN preferredApplePersonaIdentifierDescription]
  +[CN fullscreenImageDataDescription]
  +[CN syncImageDataDescription]
  +[CN writableSingleValueContactProperties]
  +[CN namePrefixDescription]
  +[CN givenNameDescription]
  +[CN middleNameDescription]
  +[CN familyNameDescription]
  +[CN nameSuffixDescription]
  +[CN preferredForNameDescription]
  +[CN preferredForImageDescription]
  +[CN writableMultiValueContactProperties]
  +[CN identifierDescription]
  +[CN iOSLegacyIdentifierDescription]
  +[CN allContactProperties]
  +[CN defaultDataMapperClass]
  +[CN keyVectorForAllUsedKeysForInternationalSupport]
  +[CN isEmptyNameContact:phonetic:includingPrefixAndSuffix:]
  +[CN localizedPhoneticNameDelimiterForContact:]
  +[CN localizedNameDelimiterForContact:]
  +[CN orderForContactPhoneticName:]
  +[CN orderForContactName:]
  +[CN phoneticOrganizationNameDescription]
  +[CN organizationNameDescription]
  +[CN nicknameDescription]
  +[CN phoneticGivenNameDescription]
  +[CN phoneticMiddleNameDescription]
  +[CN phoneticFamilyNameDescription]
  +[CN writableAlwaysFetchedProperties]
  +[CN nullTransform]
  +[CN alwaysFetchedProperties]
  +[CN resetRestrictedPropertiesOnMutableContact:]
  +[CN requiredPropertiesForNameScriptDetection]
  +[CN postalAddressesDescription]
  +[CN previousFamilyNameDescription]
  +[CN pronunciationGivenNameDescription]
  +[CN pronunciationFamilyNameDescription]
  +[CN sectionForSortingByFamilyNameDescription]
  +[CN sectionForSortingByGivenNameDescription]
  +[CN departmentDescription]
  +[CN jobTitleDescription]
  +[CN birthdayDescription]
  +[CN nonGregorianBirthdayDescription]
  +[CN creationDateDescription]
  +[CN modificationDateDescription]
  +[CN noteDescription]
  +[CN imageDataAvailableDescription]
  +[CN linkIdentifierDescription]
  +[CN contactTypeDescription]
  +[CN phoneNumbersDescription]
  +[CN emailAddressesDescription]
  +[CN urlAddressesDescription]
  +[CN datesDescription]
  +[CN contactRelationsDescription]
  +[CN socialProfilesDescription]
  +[CN phonemeDataDescription]
  +[CN textAlertDescription]
  +[CN callAlertDescription]
  +[CN mapsDataDescription]
  +[CN preferredChannelDescription]
  +[CN calendarURIsDescription]
  +[CN externalIdentifierDescription]
  +[CN externalRepresentationDescription]
  +[CN externalModificationTagDescription]
  +[CN externalUUIDDescription]
  +[CN externalImageURIDescription]
  +[CN downtimeWhitelistDescription]
  +[CN allImageDataProperties]
  +[CN allPhoneticNameComponentProperties]
  +[CN allContactPropertyKeys]
  +[CN allImageDataPropertyKeys]
  +[CN allNameComponentRelatedProperties]
  +[CN singleValueContactProperties]
  +[CN dateComponentsToDictionaryTransform]
  +[CN areValidDayComponents:error:]
  +[CN joinNonEmptyContactProperties:onContact:withDelimiter:]
  +[CN requiredPropertiesForPhoneticNameScriptDetection]
  +[CN orderForContactName:phonetic:]
  +[CN hasContactChineseJapaneseKoreanPhoneticName:]
  +[CN hasContactChineseJapaneseKoreanName:]
  +[CN joinNonEmptyContactProperties:onContact:]


CNiOSABAllContactsPredicate : CNPredicate <CNiOSContactPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABAllContactsPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABAllContactsPredicate isEqual:]
  -[CNiOSABAllContactsPredicate encodeWithCoder:]
  -[CNiOSABAllContactsPredicate initWithCoder:]
  -[CNiOSABAllContactsPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABAllContactsPredicate cn_supportsNativeSorting]
  -[CNiOSABAllContactsPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABAllContactsPredicate cn_supportsEncodedFetching]
  -[CNiOSABAllContactsPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]


CNChangeHistoryEventFactory : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[CNChangeHistoryEventFactory addContactEventWithContact:containerIdentifier:]
  -[CNChangeHistoryEventFactory addGroupEventWithGroup:containerIdentifier:]
  -[CNChangeHistoryEventFactory dropEverythingEvent]
  -[CNChangeHistoryEventFactory updateContactEventWithContact:]
  -[CNChangeHistoryEventFactory deleteContactEventWithContactIdentifier:]
  -[CNChangeHistoryEventFactory updateGroupEventWithGroup:]
  -[CNChangeHistoryEventFactory deleteGroupEventWithGroupIdentifier:]
  -[CNChangeHistoryEventFactory addMemberToGroupEventWithMember:group:]
  -[CNChangeHistoryEventFactory removeMemberFromGroupEventWithMember:group:]
  -[CNChangeHistoryEventFactory addSubgroupToGroupEventWithSubgroup:group:]
  -[CNChangeHistoryEventFactory removeSubgroupFromGroupEventWithSubgroup:group:]
  -[CNChangeHistoryEventFactory linkContactsEventWithFromContact:toContact:]
  -[CNChangeHistoryEventFactory unlinkContactEventWithContact:]
  -[CNChangeHistoryEventFactory preferredContactForNameEventWithPreferredContact:unifiedContact:]
  -[CNChangeHistoryEventFactory preferredContactForImageEventWithPreferredContact:unifiedContact:]
  -[CNChangeHistoryEventFactory differentMeCardEventWithContactIdentifier:]


CNPostalAddressFormatter : NSFormatter /System/Library/Frameworks/CoreData.framework/CoreData
 @property  long long style

  // class methods
  +[CNPostalAddressFormatter stringFromPostalAddress:style:]
  +[CNPostalAddressFormatter getCountryCodeFromPostalAddress:]
  +[CNPostalAddressFormatter specificationForCountry:]
  +[CNPostalAddressFormatter fieldArrangementWithString:]
  +[CNPostalAddressFormatter _postalToFormatMap]
  +[CNPostalAddressFormatter addressValueForFormatKey:postalAddress:]
  +[CNPostalAddressFormatter specificationWithAddressFormatPlist:]
  +[CNPostalAddressFormatter localizedStringForPostalAddressString:]
  +[CNPostalAddressFormatter fieldLabelMapWithPlist:]
  +[CNPostalAddressFormatter postalAddressPropertyKeyForFormatPropertyKey:]
  +[CNPostalAddressFormatter supportedCountries]
  +[CNPostalAddressFormatter attributedStringFromPostalAddress:style:withDefaultAttributes:]
  +[CNPostalAddressFormatter formatPropertyKeyForPostalAddressPropertyKey:]
  +[CNPostalAddressFormatter singleLineStringFromPostalAddress:addCountryName:]
  +[CNPostalAddressFormatter localizedCountryNameForISOCountryCode:]

  // instance methods
  -[CNPostalAddressFormatter stringForObjectValue:]
  -[CNPostalAddressFormatter attributedStringForObjectValue:withDefaultAttributes:]
  -[CNPostalAddressFormatter style]
  -[CNPostalAddressFormatter setStyle:]
  -[CNPostalAddressFormatter postalAddressFromString:]
  -[CNPostalAddressFormatter stringFromPostalAddress:]
  -[CNPostalAddressFormatter attributedStringFromPostalAddress:withDefaultAttributes:]
  -[CNPostalAddressFormatter attributedStringFromPostalAddress:name:organization:attributes:order:]
  -[CNPostalAddressFormatter _addressPropertyKeyForDDResult:hasCountry:]
  -[CNPostalAddressFormatter countryCodeForCountryName:]
  -[CNPostalAddressFormatter attributedStringFromPostalAddress:name:organization:attributes:]


CNiOSABEmailAddressContactPredicate : CNEmailAddressContactPredicate <CNiOSContactPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNiOSABEmailAddressContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABEmailAddressContactPredicate cn_supportsNativeSorting]
  -[CNiOSABEmailAddressContactPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABEmailAddressContactPredicate cn_supportsEncodedFetching]
  -[CNiOSABEmailAddressContactPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABEmailAddressContactPredicate _stringsAreNonEmpty:]
  -[CNiOSABEmailAddressContactPredicate _inputsAreValid]


CNSyncImageUtilities : NSObject /usr/lib/libSystem.B.dylib
 @property  CNContactStore *contactStore

  // class methods
  +[CNSyncImageUtilities descriptorForRequiredKeys]
  +[CNSyncImageUtilities os_log]
  +[CNSyncImageUtilities syncImageResultForImageData:cropRect:isPNG:maxSize:]
  +[CNSyncImageUtilities imageDataByRemovingOrientation:isPNG:]
  +[CNSyncImageUtilities syncImageResultForJPEGCompressionWithImageData:cropRect:maxSize:]
  +[CNSyncImageUtilities syncImageResultForScalingDownImageData:cropRect:isPNG:maxSize:]

  // instance methods
  -[CNSyncImageUtilities .cxx_destruct]
  -[CNSyncImageUtilities initWithContactStore:]
  -[CNSyncImageUtilities contactStore]
  -[CNSyncImageUtilities syncImageResultForContact:maxSize:]
  -[CNSyncImageUtilities saveSyncImageResult:toContact:]
  -[CNSyncImageUtilities generateSyncImageForImageData:cropRect:]
  -[CNSyncImageUtilities generateSyncImageForContact:]


CNSmartPropertyFetcher : NSObject /usr/lib/libSystem.B.dylib <CNKeyDescriptor_Private>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNSmartPropertyFetcher supportsSecureCoding]

  // instance methods
  -[CNSmartPropertyFetcher copyWithZone:]
  -[CNSmartPropertyFetcher encodeWithCoder:]
  -[CNSmartPropertyFetcher initWithCoder:]
  -[CNSmartPropertyFetcher _cn_requiredKeys]
  -[CNSmartPropertyFetcher _cn_optionalKeys]
  -[CNSmartPropertyFetcher _cn_executeGetterForRepresentedKeys:]
  -[CNSmartPropertyFetcher _cn_ignorableKeys]


_CNSpotlightIndexingLogger : NSObject /usr/lib/libSystem.B.dylib <CNSpotlightIndexingLogger>
 @property  NSObject<OS_os_log> *log
 @property  NSObject<OS_os_log> *summaryLog
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_CNSpotlightIndexingLogger init]
  -[_CNSpotlightIndexingLogger .cxx_destruct]
  -[_CNSpotlightIndexingLogger log]
  -[_CNSpotlightIndexingLogger indexingContacts:]
  -[_CNSpotlightIndexingLogger reindexingAllSearchableItems:]
  -[_CNSpotlightIndexingLogger willReindexItemsWithIdentifiers:]
  -[_CNSpotlightIndexingLogger reindexingSearchableItemsWithIdentifiers:]
  -[_CNSpotlightIndexingLogger deferringReindexAsFailedToPrepareForReindexing]
  -[_CNSpotlightIndexingLogger willStartIndexingWithClientState:]
  -[_CNSpotlightIndexingLogger noContactChangesToIndex]
  -[_CNSpotlightIndexingLogger willReindexAsFailedToRegisterForChangeHistory:error:]
  -[_CNSpotlightIndexingLogger willReindexAsFailedToFetchChangeHistory:error:]
  -[_CNSpotlightIndexingLogger willReindexAsChangeHistoryIsTruncated:]
  -[_CNSpotlightIndexingLogger willReindexAsFailedToFetchClientState]
  -[_CNSpotlightIndexingLogger willResumeReindexingAsNotFinished]
  -[_CNSpotlightIndexingLogger willReindexAsIndexVersionChangedFrom:to:]
  -[_CNSpotlightIndexingLogger willReindexAsSnapshotAnchorChangedFrom:to:]
  -[_CNSpotlightIndexingLogger willResumeIndexingAfterOffset:]
  -[_CNSpotlightIndexingLogger failedToCreateSearchableItemForContactIdentifier:]
  -[_CNSpotlightIndexingLogger didNotFinishIndexingForFullSyncWithError:]
  -[_CNSpotlightIndexingLogger finishedIndexingForFullSyncWithCount:]
  -[_CNSpotlightIndexingLogger failedToFetchContactForChange:]
  -[_CNSpotlightIndexingLogger didNotFinishIndexingForDeltaSyncWithError:]
  -[_CNSpotlightIndexingLogger finishedIndexingForDeltaSyncWithUpdateCount:deleteCount:]
  -[_CNSpotlightIndexingLogger finishedBatchIndexWithUpdateIdentifiers:deleteIdentifiers:]
  -[_CNSpotlightIndexingLogger willBatchIndexForFullSyncWithCount:lastOffset:doneFullSync:]
  -[_CNSpotlightIndexingLogger willBatchIndexForDeltaSyncWithUpdateCount:deleteCount:]
  -[_CNSpotlightIndexingLogger willClearChangeHistory:toChangeAnchor:]
  -[_CNSpotlightIndexingLogger failedToClearChangeHistory:toChangeAnchor:error:]
  -[_CNSpotlightIndexingLogger failedToFetchSearchableForContactIdentifiers:error:]
  -[_CNSpotlightIndexingLogger verifyingIndex:]
  -[_CNSpotlightIndexingLogger verifiedIndexWithSummmary:]
  -[_CNSpotlightIndexingLogger failedToFetchClientStateFromSpotlight:willRetry:]
  -[_CNSpotlightIndexingLogger failedToBeginIndexBatchWithSpotlight:]
  -[_CNSpotlightIndexingLogger failedToEndIndexBatchWithSpotlight:willRetry:]
  -[_CNSpotlightIndexingLogger failedToJournalSearchableItemsForIndexingWithSpotlight:identifiers:willRetry:]
  -[_CNSpotlightIndexingLogger failedToJournalItemIdentifiersForDeletionWithSpotlight:identifiers:willRetry:]
  -[_CNSpotlightIndexingLogger failedToDeleteAllSearchableItemsWithSpotlight:willRetry:]
  -[_CNSpotlightIndexingLogger summaryLog]
  -[_CNSpotlightIndexingLogger failedToUnarchiveClientStateData:]
  -[_CNSpotlightIndexingLogger failedToCreateUnarchiverForClientStateWithError:]
  -[_CNSpotlightIndexingLogger _stringForSpotlightError:willRetry:]


CNTCCServices : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNTCCServices defaultServices]

  // instance methods
  -[CNTCCServices TCCAccessCheckAuditToken:::]
  -[CNTCCServices TCCAccessPreflight::]


CNPostalAddressContactPredicate : CNPredicate
 @property  CNPostalAddress *postalAddress

  // class methods
  +[CNPostalAddressContactPredicate supportsSecureCoding]

  // instance methods
  -[CNPostalAddressContactPredicate isEqual:]
  -[CNPostalAddressContactPredicate encodeWithCoder:]
  -[CNPostalAddressContactPredicate initWithCoder:]
  -[CNPostalAddressContactPredicate .cxx_destruct]
  -[CNPostalAddressContactPredicate postalAddress]
  -[CNPostalAddressContactPredicate initWithPostalAddress:]


CNiOSABGroupsInGroupPredicate : CNPredicate <CNiOSGroupPredicate>
 @property  NSString *parentGroupIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNiOSABGroupsInGroupPredicate .cxx_destruct]
  -[CNiOSABGroupsInGroupPredicate initWithParentGroupIdentifier:]
  -[CNiOSABGroupsInGroupPredicate cn_copyGroupsInAddressBook:error:]
  -[CNiOSABGroupsInGroupPredicate parentGroupIdentifier]


CNiOSABContactsInGroupPredicate : CNPredicate <CNiOSContactPredicate>
 @property  NSString *parentGroupIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABContactsInGroupPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABContactsInGroupPredicate encodeWithCoder:]
  -[CNiOSABContactsInGroupPredicate initWithCoder:]
  -[CNiOSABContactsInGroupPredicate .cxx_destruct]
  -[CNiOSABContactsInGroupPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABContactsInGroupPredicate cn_supportsNativeSorting]
  -[CNiOSABContactsInGroupPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABContactsInGroupPredicate cn_supportsEncodedFetching]
  -[CNiOSABContactsInGroupPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABContactsInGroupPredicate initWithParentGroupIdentifier:]
  -[CNiOSABContactsInGroupPredicate parentGroupIdentifier]


CNiOSABConversions : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNiOSABConversions initialize]
  +[CNiOSABConversions os_log]
  +[CNiOSABConversions contactMatchInfoFromABMatchMetadataDictionary:]
  +[CNiOSABConversions requiredABPropertyIDSetForKeysToFetch:]
  +[CNiOSABConversions personToContactTransformWithKeysToFetch:mutable:]
  +[CNiOSABConversions contactPropertiesByABPropertyID]
  +[CNiOSABConversions stringFromABBytes:length:]
  +[CNiOSABConversions dateFromABBytes:length:]
  +[CNiOSABConversions dataFromABBytes:length:]
  +[CNiOSABConversions numberFromIntegerABBytes:length:]
  +[CNiOSABConversions contactFromABPerson:keysToConvert:mutable:]
  +[CNiOSABConversions containersFromABSources:remote:includeDisabledSources:]
  +[CNiOSABConversions accountsFromABAccounts:]
  +[CNiOSABConversions groupsFromABGroups:]
  +[CNiOSABConversions contactIdentifierFromABPerson:]
  +[CNiOSABConversions contactFromABPerson:uniqueKeysToConvert:mutable:]
  +[CNiOSABConversions updateContact:fromABPerson:keysToConvert:availableKeyDescriptor:]
  +[CNiOSABConversions groupFromABGroup:]
  +[CNiOSABConversions arrayByMappingTransform:onCFArray:]
  +[CNiOSABConversions containerFromABSource:remote:includeDisabledSources:]
  +[CNiOSABConversions accountFromABAccount:]


CNMultiValuePropertyDescription : CNPropertyDescription
 @property  Class valueClass
 @property  BOOL isSingleValue
 @property  BOOL isMultiValue
 @property  NSArray *standardLabels
 @property  NSArray *managedLabels
 @property  Class labeledValueClass
 @property  @? plistTransform
 @property  @? fromPlistTransform

  // instance methods
  -[CNMultiValuePropertyDescription valueClass]
  -[CNMultiValuePropertyDescription ABMultiValueValueFromCNLabeledValueValue:]
  -[CNMultiValuePropertyDescription isValidValue:error:]
  -[CNMultiValuePropertyDescription managedLabels]
  -[CNMultiValuePropertyDescription localizedStringForLabel:]
  -[CNMultiValuePropertyDescription isEqualIgnoringIdentifiersForContact:other:]
  -[CNMultiValuePropertyDescription fromPlistTransform]
  -[CNMultiValuePropertyDescription standardLabels]
  -[CNMultiValuePropertyDescription stringForIndexingForContact:]
  -[CNMultiValuePropertyDescription labeledValueClass]
  -[CNMultiValuePropertyDescription plistTransform]
  -[CNMultiValuePropertyDescription isValidMultiValueValue:error:]
  -[CNMultiValuePropertyDescription standardLabelsWithOptions:]
  -[CNMultiValuePropertyDescription isMultiValue]
  -[CNMultiValuePropertyDescription ABValueFromCNValue:]
  -[CNMultiValuePropertyDescription CNValueFromABValue:]
  -[CNMultiValuePropertyDescription CNMutableValueForABMultivalue]
  -[CNMultiValuePropertyDescription applyABMultivalueValueBytes:length:identifier:legacyIdentifier:label:toCNMultivalueRepresentation:]
  -[CNMultiValuePropertyDescription applyDictionary:identifier:legacyIdentifier:label:toCNMultivalueRepresentation:]
  -[CNMultiValuePropertyDescription CNLabeledValueValueFromABMultiValueValueBytes:length:]
  -[CNMultiValuePropertyDescription applyCNValue:toArray:identifier:legacyIdentifier:label:]
  -[CNMultiValuePropertyDescription CNLabeledValueValueFromABMultiValueValue:]
  -[CNMultiValuePropertyDescription valueWithResetIdentifiers:]
  -[CNMultiValuePropertyDescription assertValueType:]
  -[CNMultiValuePropertyDescription ABMutableMultiValueForABPerson:]
  -[CNMultiValuePropertyDescription isSingleValue]
  -[CNMultiValuePropertyDescription abPropertyType]
  -[CNMultiValuePropertyDescription CNLabeledValueLabelFromABMultiValueLabel:]
  -[CNMultiValuePropertyDescription ABMultiValueLabelFromCNLabeledValueLabel:]
  -[CNMultiValuePropertyDescription CNLabeledValueValueFromABMultiValueValue:destinationClass:settersByABKeys:]
  -[CNMultiValuePropertyDescription ABMultiValueValueFromCNLabeledValueValue:gettersByABKeys:]


CNCompoundMultiValuePropertyDescription : CNMultiValuePropertyDescription
 @property  @? dictionaryTransform
 @property  @? fromDictionaryTransform
 @property  NSArray *summarizationKeys

  // instance methods
  -[CNCompoundMultiValuePropertyDescription fromPlistTransform]
  -[CNCompoundMultiValuePropertyDescription stringForIndexingForContact:]
  -[CNCompoundMultiValuePropertyDescription plistTransform]
  -[CNCompoundMultiValuePropertyDescription dictionaryTransform]
  -[CNCompoundMultiValuePropertyDescription fromDictionaryTransform]
  -[CNCompoundMultiValuePropertyDescription summarizationKeys]


CNiOSABContaineriOSLegacyIdentifierPredicate : CNPredicate <CNiOSContainerPredicate>
 @property  int iOSLegacyIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABContaineriOSLegacyIdentifierPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABContaineriOSLegacyIdentifierPredicate encodeWithCoder:]
  -[CNiOSABContaineriOSLegacyIdentifierPredicate initWithCoder:]
  -[CNiOSABContaineriOSLegacyIdentifierPredicate initWithPredicate:]
  -[CNiOSABContaineriOSLegacyIdentifierPredicate iOSLegacyIdentifier]
  -[CNiOSABContaineriOSLegacyIdentifierPredicate cn_copyContainersInAddressBook:error:]
  -[CNiOSABContaineriOSLegacyIdentifierPredicate includesDisabledContainers]
  -[CNiOSABContaineriOSLegacyIdentifierPredicate initWithiOSLegacyIdentifier:]


CNPhoneNumberContactPredicate : CNPredicate <CNSuggestedContactPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  CNPhoneNumber *phoneNumber
 @property  BOOL returnsMultipleResults
 @property  NSString *prefixHint
 @property  NSString *digits
 @property  NSString *countryCode
 @property  NSArray *groupIdentifiers

  // class methods
  +[CNPhoneNumberContactPredicate supportsSecureCoding]

  // instance methods
  -[CNPhoneNumberContactPredicate isEqual:]
  -[CNPhoneNumberContactPredicate encodeWithCoder:]
  -[CNPhoneNumberContactPredicate initWithCoder:]
  -[CNPhoneNumberContactPredicate .cxx_destruct]
  -[CNPhoneNumberContactPredicate countryCode]
  -[CNPhoneNumberContactPredicate phoneNumber]
  -[CNPhoneNumberContactPredicate digits]
  -[CNPhoneNumberContactPredicate shortDebugDescription]
  -[CNPhoneNumberContactPredicate sgContactMatchesWithSortOrder:mutableObjects:service:error:]
  -[CNPhoneNumberContactPredicate groupIdentifiers]
  -[CNPhoneNumberContactPredicate returnsMultipleResults]
  -[CNPhoneNumberContactPredicate initWithPhoneNumber:returnMultipleResults:]
  -[CNPhoneNumberContactPredicate initWithPhoneNumber:prefixHint:groupIdentifiers:returnMultipleResults:]
  -[CNPhoneNumberContactPredicate initWithPhoneNumber:prefixHint:returnMultipleResults:]
  -[CNPhoneNumberContactPredicate initWithDigits:countryCode:returnMultipleResults:]
  -[CNPhoneNumberContactPredicate prefixHint]


CNDraggingContact : NSObject /usr/lib/libSystem.B.dylib
 @property  CNContact *contact
 @property  CNContactStore *contactStore
 @property  NSURL *cachedFileURLRepresentation

  // class methods
  +[CNDraggingContact os_log]
  +[CNDraggingContact availableDataRepresentationTypes]

  // instance methods
  -[CNDraggingContact .cxx_destruct]
  -[CNDraggingContact contact]
  -[CNDraggingContact setContact:]
  -[CNDraggingContact contactStore]
  -[CNDraggingContact setContactStore:]
  -[CNDraggingContact cachedFileURLRepresentation]
  -[CNDraggingContact fetchContactWithKeys:]
  -[CNDraggingContact serializeContactToVCard:]
  -[CNDraggingContact fileNameForContact:]
  -[CNDraggingContact setCachedFileURLRepresentation:]
  -[CNDraggingContact initWithContact:contactStore:]
  -[CNDraggingContact fileURLRepresentation]
  -[CNDraggingContact cleanupFileURLRepresentation]
  -[CNDraggingContact dataRepresentationForType:]


CNContainerDiff : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *updates

  // class methods
  +[CNContainerDiff diffContainer:to:]

  // instance methods
  -[CNContainerDiff .cxx_destruct]
  -[CNContainerDiff updates]
  -[CNContainerDiff setUpdates:]
  -[CNContainerDiff initWithUpdates:]


CNReputationHandle : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *stringValue
 @property  long long type

  // class methods
  +[CNReputationHandle descriptionForType:]
  +[CNReputationHandle handleWithStringValue:]
  +[CNReputationHandle handleWithEmailAddress:]
  +[CNReputationHandle handleWithPhoneNumber:]

  // instance methods
  -[CNReputationHandle isEqual:]
  -[CNReputationHandle copyWithZone:]
  -[CNReputationHandle type]
  -[CNReputationHandle stringValue]
  -[CNReputationHandle .cxx_destruct]
  -[CNReputationHandle configureBuilder:]
  -[CNReputationHandle initWithStringValue:type:]


_CNReputationGenericHandle : CNReputationHandle
  // instance methods
  -[_CNReputationGenericHandle configureBuilder:]


_CNReputationEmailAddressHandle : CNReputationHandle
  // instance methods
  -[_CNReputationEmailAddressHandle configureBuilder:]


_CNReputationPhoneNumberHandle : CNReputationHandle
  // instance methods
  -[_CNReputationPhoneNumberHandle configureBuilder:]


CNContactProperty : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  CNContact *internalContact
 @property  NSString *key
 @property  NSString *identifier
 @property  CNContact *contact
 @property  id value
 @property  NSString *label

  // class methods
  +[CNContactProperty supportsSecureCoding]
  +[CNContactProperty contactPropertyWithContact:propertyKey:identifier:]
  +[CNContactProperty contactPropertyWithContactNoCopy:propertyKey:identifier:]

  // instance methods
  -[CNContactProperty isEqual:]
  -[CNContactProperty copyWithZone:]
  -[CNContactProperty key]
  -[CNContactProperty encodeWithCoder:]
  -[CNContactProperty initWithCoder:]
  -[CNContactProperty .cxx_destruct]
  -[CNContactProperty identifier]
  -[CNContactProperty value]
  -[CNContactProperty setIdentifier:]
  -[CNContactProperty setKey:]
  -[CNContactProperty label]
  -[CNContactProperty contact]
  -[CNContactProperty setInternalContact:]
  -[CNContactProperty internalContact]
  -[CNContactProperty primitiveValue]
  -[CNContactProperty labeledValueForContact:]
  -[CNContactProperty labeledValue]
  -[CNContactProperty isMultiValueProperty]
  -[CNContactProperty sourceContact]
  -[CNContactProperty multiValueIdentifier]


CNiOSABDependentPropertiesUpdateContext : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL hasPendingImageData
 @property  BOOL hasPendingCropRect
 @property  BOOL hasPendingThumbnailImageData
 @property  BOOL hasPendingSyncImageData
 @property  NSData *pendingImageData
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} pendingCropRect
 @property  NSData *pendingThumbnailImageData
 @property  NSData *pendingFullscreenImageData
 @property  NSData *pendingSyncImageData

  // class methods
  +[CNiOSABDependentPropertiesUpdateContext shouldSetWatchChanges]

  // instance methods
  -[CNiOSABDependentPropertiesUpdateContext .cxx_destruct]
  -[CNiOSABDependentPropertiesUpdateContext flushPendingImageChangesToPerson:logger:error:]
  -[CNiOSABDependentPropertiesUpdateContext setPendingImageData:]
  -[CNiOSABDependentPropertiesUpdateContext setPendingCropRect:]
  -[CNiOSABDependentPropertiesUpdateContext setPendingThumbnailImageData:]
  -[CNiOSABDependentPropertiesUpdateContext setPendingFullscreenImageData:]
  -[CNiOSABDependentPropertiesUpdateContext setPendingSyncImageData:]
  -[CNiOSABDependentPropertiesUpdateContext setHasPendingImageData:]
  -[CNiOSABDependentPropertiesUpdateContext setHasPendingCropRect:]
  -[CNiOSABDependentPropertiesUpdateContext setHasPendingThumbnailImageData:]
  -[CNiOSABDependentPropertiesUpdateContext setHasPendingSyncImageData:]
  -[CNiOSABDependentPropertiesUpdateContext hasPendingImageData]
  -[CNiOSABDependentPropertiesUpdateContext hasPendingCropRect]
  -[CNiOSABDependentPropertiesUpdateContext pendingImageData]
  -[CNiOSABDependentPropertiesUpdateContext pendingCropRect]
  -[CNiOSABDependentPropertiesUpdateContext pendingThumbnailImageData]
  -[CNiOSABDependentPropertiesUpdateContext pendingFullscreenImageData]
  -[CNiOSABDependentPropertiesUpdateContext pendingSyncImageData]
  -[CNiOSABDependentPropertiesUpdateContext hasPendingThumbnailImageData]
  -[CNiOSABDependentPropertiesUpdateContext setWatchChangesforThumbnailImageDataToPerson:error:]
  -[CNiOSABDependentPropertiesUpdateContext hasPendingSyncImageData]
  -[CNiOSABDependentPropertiesUpdateContext resetAllData]


CNiOSABContainerIdentifiersPredicate : CNPredicate <CNiOSContainerPredicate>
 @property  NSArray *identifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABContainerIdentifiersPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABContainerIdentifiersPredicate encodeWithCoder:]
  -[CNiOSABContainerIdentifiersPredicate initWithCoder:]
  -[CNiOSABContainerIdentifiersPredicate .cxx_destruct]
  -[CNiOSABContainerIdentifiersPredicate identifiers]
  -[CNiOSABContainerIdentifiersPredicate initWithIdentifiers:]
  -[CNiOSABContainerIdentifiersPredicate cn_copyContainersInAddressBook:error:]
  -[CNiOSABContainerIdentifiersPredicate includesDisabledContainers]


CNUuidIdentifierProvider : NSObject /usr/lib/libSystem.B.dylib <CNIdentifierProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNUuidIdentifierProvider .cxx_destruct]
  -[CNUuidIdentifierProvider initWithSuffix:]
  -[CNUuidIdentifierProvider makeIdentifier]


CNLabelValuePair : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *label
 @property  id value

  // class methods
  +[CNLabelValuePair labeledValueWithLabel:value:]

  // instance methods
  -[CNLabelValuePair isEqual:]
  -[CNLabelValuePair copyWithZone:]
  -[CNLabelValuePair .cxx_destruct]
  -[CNLabelValuePair value]
  -[CNLabelValuePair label]
  -[CNLabelValuePair initWithLabel:value:]


CNReputationLogger : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNReputationLogger queryLog]
  +[CNReputationLogger obfuscateHandle:]
  +[CNReputationLogger describeScore:]
  +[CNReputationLogger obfuscate:]
  +[CNReputationLogger performanceLog]

  // instance methods
  -[CNReputationLogger timeToResolve:]
  -[CNReputationLogger beginQueryForHandle:]
  -[CNReputationLogger queryForHandle:didFinishWithReputation:]
  -[CNReputationLogger queryForHandle:didFailWithError:]
  -[CNReputationLogger couldNotQueryCoreRecentsWithError:]
  -[CNReputationLogger coreRecentsConfirmedTrust]
  -[CNReputationLogger coreRecentsCouldNotConfirmTrust]
  -[CNReputationLogger couldNotQueryContactsForEmailAddressWithError:]
  -[CNReputationLogger contactsConfirmedTrustOfEmailAddress]
  -[CNReputationLogger contactsCouldNotConfirmTrustOfEmailAddress]
  -[CNReputationLogger couldNotQueryContactsForPhoneNumberWithError:]
  -[CNReputationLogger contactsConfirmedTrustOfPhoneNumber]
  -[CNReputationLogger contactsCouldNotConfirmTrustOfPhoneNumber]
  -[CNReputationLogger reputationUnestablished]


CNContactChangesObserverProxy : NSObject /usr/lib/libSystem.B.dylib
 @property  <CNContactChangesObserver> *observer
 @property  NSArray *keysToFetch
 @property  BOOL unify
 @property  CNContact *contactSnapshot

  // instance methods
  -[CNContactChangesObserverProxy observer]
  -[CNContactChangesObserverProxy .cxx_destruct]
  -[CNContactChangesObserverProxy setObserver:]
  -[CNContactChangesObserverProxy keysToFetch]
  -[CNContactChangesObserverProxy setKeysToFetch:]
  -[CNContactChangesObserverProxy unify]
  -[CNContactChangesObserverProxy setUnify:]
  -[CNContactChangesObserverProxy contactSnapshot]
  -[CNContactChangesObserverProxy setContactSnapshot:]


CNContactChangesFetcher : NSObject /usr/lib/libSystem.B.dylib
 @property  NSSet *identifiers
 @property  NSSet *keysToFetch
 @property  BOOL unify

  // instance methods
  -[CNContactChangesFetcher .cxx_destruct]
  -[CNContactChangesFetcher identifiers]
  -[CNContactChangesFetcher setIdentifiers:]
  -[CNContactChangesFetcher keysToFetch]
  -[CNContactChangesFetcher setKeysToFetch:]
  -[CNContactChangesFetcher unify]
  -[CNContactChangesFetcher setUnify:]


CNContactChangesNotifier : NSObject /usr/lib/libSystem.B.dylib
 @property  <CNScheduler> *resourceLock
 @property  <CNScheduler> *workQueue
 @property  <CNScheduler> *downstream
 @property  CNContactStore *contactStore
 @property  CNMutableMultiDictionary *registeredObservers
 @property  BOOL observingNotification

  // class methods
  +[CNContactChangesNotifier os_log]
  +[CNContactChangesNotifier sharedNotifier]
  +[CNContactChangesNotifier createProxyForObserver:keysToFetch:]
  +[CNContactChangesNotifier preparedContact:withStore:keysToFetch:]
  +[CNContactChangesNotifier workQueue_createFetchersFromRegisteredObservers:]

  // instance methods
  -[CNContactChangesNotifier init]
  -[CNContactChangesNotifier .cxx_destruct]
  -[CNContactChangesNotifier workQueue]
  -[CNContactChangesNotifier contactStore]
  -[CNContactChangesNotifier initWithContactStore:downstreamScheduler:schedulerProvider:]
  -[CNContactChangesNotifier registerObserver:forContact:keysToFetch:]
  -[CNContactChangesNotifier registerObserver:forContact:keysToFetch:completionHandler:]
  -[CNContactChangesNotifier downstream]
  -[CNContactChangesNotifier registerProxy:identifier:]
  -[CNContactChangesNotifier resourceLock]
  -[CNContactChangesNotifier resourceLock_removeProxiesPassingTest:forIdentifier:]
  -[CNContactChangesNotifier workQueue_updateObserving]
  -[CNContactChangesNotifier unregisterObserver:forContact:completionHandler:]
  -[CNContactChangesNotifier registeredObservers]
  -[CNContactChangesNotifier workQueue_updateObservers]
  -[CNContactChangesNotifier isObservingNotification]
  -[CNContactChangesNotifier contactStoreDidChange:]
  -[CNContactChangesNotifier setObservingNotification:]
  -[CNContactChangesNotifier registerObserver:forContact:]
  -[CNContactChangesNotifier unregisterObserver:forContact:]


CNContact : NSObject /usr/lib/libSystem.B.dylib <NSItemProviderReading, NSItemProviderWriting, CNSuggested, CNContactAugmentation, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *nameTitle
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *maidenName
 @property  NSString *phoneticFirstName
 @property  NSString *phoneticLastName
 @property  NSString *companyName
 @property  NSArray *relatedNames
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *writableTypeIdentifiersForItemProvider
 @property  BOOL hasSuggestedProperties
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL suggested
 @property  SGRecordId *suggestionRecordId
 @property  NSString *suggestionFoundInBundleId
 @property  BOOL suggestedMe
 @property  NSString *internalIdentifier
 @property  NSArray *calendarURIs
 @property  NSString *cardDAVUID
 @property  NSDictionary *activityAlerts
 @property  NSString *storeIdentifier
 @property  NSDictionary *storeInfo
 @property  NSString *searchIndex
 @property  NSString *accountIdentifier
 @property  <CNKeyDescriptor> *availableKeyDescriptor
 @property  NSSet *availableKeys
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  NSString *cropRectID
 @property  NSData *cropRectHash
 @property  CNActivityAlert *callAlert
 @property  CNActivityAlert *textAlert
 @property  int iOSLegacyIdentifier
 @property  NSString *externalIdentifier
 @property  NSData *externalRepresentation
 @property  NSString *externalModificationTag
 @property  NSString *externalUUID
 @property  NSString *externalImageURI
 @property  NSString *fullName
 @property  NSString *phoneticFullName
 @property  NSString *linkIdentifier
 @property  NSString *phonemeData
 @property  NSString *sortingGivenName
 @property  NSString *sortingFamilyName
 @property  NSString *sectionForSortingByGivenName
 @property  NSString *sectionForSortingByFamilyName
 @property  NSString *phoneticCompanyName
 @property  NSString *pronunciationGivenName
 @property  NSString *pronunciationFamilyName
 @property  NSDate *creationDate
 @property  NSDate *modificationDate
 @property  long long displayNameOrder
 @property  NSString *stringForIndexing
 @property  BOOL preferredForName
 @property  BOOL preferredForImage
 @property  NSString *preferredLikenessSource
 @property  NSString *preferredApplePersonaIdentifier
 @property  NSString *preferredChannel
 @property  NSString *downtimeWhitelist
 @property  NSString *imageType
 @property  NSData *imageHash
 @property  BOOL unified
 @property  BOOL hasBeenPersisted
 @property  NSArray *linkedContacts
 @property  NSArray *mainStoreLinkedContacts
 @property  NSString *mapsData
 @property  NSData *fullscreenImageData
 @property  NSData *syncImageData
 @property  NSString *identifier
 @property  long long contactType
 @property  NSString *namePrefix
 @property  NSString *givenName
 @property  NSString *middleName
 @property  NSString *familyName
 @property  NSString *previousFamilyName
 @property  NSString *nameSuffix
 @property  NSString *nickname
 @property  NSString *organizationName
 @property  NSString *departmentName
 @property  NSString *jobTitle
 @property  NSString *phoneticGivenName
 @property  NSString *phoneticMiddleName
 @property  NSString *phoneticFamilyName
 @property  NSString *phoneticOrganizationName
 @property  NSString *note
 @property  NSData *imageData
 @property  NSData *thumbnailImageData
 @property  BOOL imageDataAvailable
 @property  NSArray *phoneNumbers
 @property  NSArray *emailAddresses
 @property  NSArray *postalAddresses
 @property  NSArray *urlAddresses
 @property  NSArray *contactRelations
 @property  NSArray *socialProfiles
 @property  NSArray *instantMessageAddresses
 @property  NSDateComponents *birthday
 @property  NSDateComponents *nonGregorianBirthday
 @property  NSArray *dates

  // class methods
  +[CNContact supportsSecureCoding]
  +[CNContact objectWithItemProviderData:typeIdentifier:error:]
  +[CNContact writableTypeIdentifiersForItemProvider]
  +[CNContact readableTypeIdentifiersForItemProvider]
  +[CNContact contact]
  +[CNContact predicateForContactsMatchingEmailAddress:]
  +[CNContact predicateForContactsMatchingPhoneNumber:]
  +[CNContact localizedStringForKey:]
  +[CNContact predicateForContactsWithIdentifiers:]
  +[CNContact predicateForMeContact]
  +[CNContact descriptorForRequiredKeysForSearchableItem]
  +[CNContact os_log]
  +[CNContact unifyContacts:]
  +[CNContact predicateForContactsMatchingPreferredChannel:limitOne:]
  +[CNContact identifierProvider]
  +[CNContact makeIdentifier]
  +[CNContact storeInfoFromCoder:storeIdentifier:key:]
  +[CNContact descriptorWithKeyDescriptors:description:]
  +[CNContact predicateForContactsInContainerWithIdentifier:]
  +[CNContact makeIdentifierString]
  +[CNContact predicateForContactsInGroupWithIdentifier:]
  +[CNContact predicateForContactsMatchingName:]
  +[CNContact predicateForContactsMatchingName:options:]
  +[CNContact predicateForContactsWithOrganizationName:]
  +[CNContact predicateForContactMatchingEmailAddress:]
  +[CNContact predicateForContactsMatchingEmailAddress:groupIdentifiers:limitToOneResult:]
  +[CNContact predicateForContactsMatchingPhoneNumber:prefixHint:groupIdentifiers:limitToOneResult:]
  +[CNContact predicateForContactsMatchingHandleStrings:]
  +[CNContact predicateForContactsMatchingHandleStrings:inContainersWithIdentifiers:]
  +[CNContact predicateForContactsMatchingPostalAddress:]
  +[CNContact predicateForContactsLinkedToContactWithIdentifier:]
  +[CNContact predicateForContactsLinkedToContact:]
  +[CNContact predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:]
  +[CNContact predicateForContactMatchingMapString:]
  +[CNContact predicateForContactMatchingPhoneNumber:]
  +[CNContact predicateForContactsMatchingPhoneNumber:prefixHint:]
  +[CNContact predicateForContactMatchingPhoneNumberWithDigits:countryCode:]
  +[CNContact predicateForPreferredNameInRange:]
  +[CNContact predicateForPreferredNameInContainersWithIdentifiers:groupsWithIdentifiers:]
  +[CNContact predicateForContactsMatchingString:accountIdentifier:containerIdentifier:groupIdentifier:]
  +[CNContact predicateForContactMatchingURLString:]
  +[CNContact predicateForContactMatchingLabeledValueIdentifier:]
  +[CNContact predicateForContactMatchingEKParticipantWithName:emailAddress:URL:predicateDescription:]
  +[CNContact predicateForLegacyIdentifier:]
  +[CNContact predicateForContactsMatchingSocialProfile:]
  +[CNContact predicateForContactsMatchingInstantMessageAddress:]
  +[CNContact predicateForContactsWithNonUnifiedIdentifiers:]
  +[CNContact predicateForFaultFulfillmentForLegacyIdentifier:identifier:]
  +[CNContact predicateForAllContacts]
  +[CNContact contactWithIdentifier:]
  +[CNContact contactFromPerson:keysToFetch:mutable:]
  +[CNContact alwaysFetchedKeys]
  +[CNContact contactFromPerson:keysToFetch:]
  +[CNContact contactPropertyKeyFromABPropertyID:]
  +[CNContact abPropertyIDfromContactPropertyKey:]
  +[CNContact contactFromPublicABPerson:keysToFetch:mutable:]
  +[CNContact contactPropertyKeyFromPublicABPropertyID:]
  +[CNContact publicABPropertyIDFromContactPropertyKey:]
  +[CNContact contactFromPublicABPerson:keysToFetch:]
  +[CNContact contactWithContact:]
  +[CNContact freezeIfInstancetypeIsImmutable:]
  +[CNContact contactWithDisplayName:handleStrings:]
  +[CNContact _contactWithContact:createNewInstance:propertyDescriptions:]
  +[CNContact contactWithDisplayName:emailOrPhoneNumber:]
  +[CNContact newContactWithPropertyKeys:withValuesFromContact:]
  +[CNContact makeContactAndMergeValuesFromAvailableKeysInContact:]
  +[CNContact descriptorForAllComparatorKeys]
  +[CNContact descriptorForKeyDescriptors:description:]
  +[CNContact comparatorForNameSortOrder:]
  +[CNContact preferredImageComparator]
  +[CNContact previewURLForContact:]
  +[CNContact contactWithArchivedData:error:]
  +[CNContact contactWithVCardData:error:]
  +[CNContact contactFromSuggestion:]
  +[CNContact contactIdentifierFromSuggestionID:]
  +[CNContact suggestionIDFromContactIdentifier:]
  +[CNContact predicateForSuggestionIdentifier:]

  // instance methods
  -[CNContact init]
  -[CNContact isEqual:]
  -[CNContact copyWithZone:]
  -[CNContact mutableCopyWithZone:]
  -[CNContact encodeWithCoder:]
  -[CNContact initWithCoder:]
  -[CNContact .cxx_destruct]
  -[CNContact identifier]
  -[CNContact givenName]
  -[CNContact familyName]
  -[CNContact middleName]
  -[CNContact namePrefix]
  -[CNContact nameSuffix]
  -[CNContact nickname]
  -[CNContact initWithIdentifier:]
  -[CNContact writableTypeIdentifiersForItemProvider]
  -[CNContact loadDataWithTypeIdentifier:forItemProviderCompletionHandler:]
  -[CNContact hasChanges]
  -[CNContact modificationDate]
  -[CNContact creationDate]
  -[CNContact phoneNumbers]
  -[CNContact accountIdentifier]
  -[CNContact fullName]
  -[CNContact organizationName]
  -[CNContact snapshot]
  -[CNContact storeIdentifier]
  -[CNContact imageData]
  -[CNContact imageType]
  -[CNContact firstName]
  -[CNContact lastName]
  -[CNContact emailAddresses]
  -[CNContact shortDebugDescription]
  -[CNContact mapsData]
  -[CNContact imageHash]
  -[CNContact linkIdentifier]
  -[CNContact areKeysAvailable:]
  -[CNContact availableKeyDescriptor]
  -[CNContact urlAddresses]
  -[CNContact cropRect]
  -[CNContact searchableItemForIndexing]
  -[CNContact iOSLegacyIdentifier]
  -[CNContact isUnified]
  -[CNContact linkedContacts]
  -[CNContact externalIdentifier]
  -[CNContact externalModificationTag]
  -[CNContact storeInfo]
  -[CNContact assertKeysAreAvailable:]
  -[CNContact preferredChannel]
  -[CNContact phoneticGivenName]
  -[CNContact phoneticMiddleName]
  -[CNContact phoneticFamilyName]
  -[CNContact linkedContactsFromStoreWithIdentifier:]
  -[CNContact isEqualIgnoringIdentifiers:]
  -[CNContact contactType]
  -[CNContact _searchableItemIncludingInternalAttributes:]
  -[CNContact _filteredArrayForValidValues:]
  -[CNContact instantMessageAddresses]
  -[CNContact socialProfiles]
  -[CNContact note]
  -[CNContact departmentName]
  -[CNContact jobTitle]
  -[CNContact dates]
  -[CNContact birthday]
  -[CNContact nonGregorianBirthday]
  -[CNContact postalAddresses]
  -[CNContact searchableItemForDragging]
  -[CNContact searchableItemAttributeSetForUserActivity]
  -[CNContact keyVector]
  -[CNContact hasBeenPersisted]
  -[CNContact internalIdentifier]
  -[CNContact externalRepresentation]
  -[CNContact externalUUID]
  -[CNContact externalImageURI]
  -[CNContact previousFamilyName]
  -[CNContact phoneticOrganizationName]
  -[CNContact pronunciationGivenName]
  -[CNContact pronunciationFamilyName]
  -[CNContact sectionForSortingByGivenName]
  -[CNContact sectionForSortingByFamilyName]
  -[CNContact thumbnailImageData]
  -[CNContact fullscreenImageData]
  -[CNContact syncImageData]
  -[CNContact imageDataAvailable]
  -[CNContact isPreferredForName]
  -[CNContact isPreferredForImage]
  -[CNContact preferredLikenessSource]
  -[CNContact preferredApplePersonaIdentifier]
  -[CNContact calendarURIs]
  -[CNContact contactRelations]
  -[CNContact phonemeData]
  -[CNContact callAlert]
  -[CNContact textAlert]
  -[CNContact downtimeWhitelist]
  -[CNContact displayNameOrder]
  -[CNContact isKeyAvailable:]
  -[CNContact initWithIdentifier:availableKeyDescriptor:]
  -[CNContact detachedPersonWithError:]
  -[CNContact overwritePerson:error:]
  -[CNContact detachedPerson]
  -[CNContact overwritePerson:]
  -[CNContact overwritePublicABPerson:]
  -[CNContact updateNewPublicABPerson:inAddressBook:]
  -[CNContact assertKeyIsAvailable:]
  -[CNContact copyWithSelfAsSnapshot]
  -[CNContact searchIndex]
  -[CNContact preferredForName]
  -[CNContact preferredForImage]
  -[CNContact cardDAVUID]
  -[CNContact cropRectID]
  -[CNContact cropRectHash]
  -[CNContact diffToSnapshotAndReturnError:]
  -[CNContact mainStoreLinkedContacts]
  -[CNContact activityAlerts]
  -[CNContact companyName]
  -[CNContact maidenName]
  -[CNContact phoneticFirstName]
  -[CNContact phoneticLastName]
  -[CNContact relatedNames]
  -[CNContact isSuggested]
  -[CNContact copyWithPropertyKeys:]
  -[CNContact areKeysAvailable:useIgnorableKeys:findMissingKeys:]
  -[CNContact areAllAvailableKeysEqualToContact:ignoringIdentifiers:]
  -[CNContact areAllPropertiesButContactIdentifierEqualToContact:]
  -[CNContact isProperty:equalToOtherIgnoreIdentifiers:]
  -[CNContact areAllPropertiesEqualToContactIgnoringIdentifiers:]
  -[CNContact copyWithDistinctIdentifier]
  -[CNContact availableKeys]
  -[CNContact isUnifiedWithContactWithIdentifier:]
  -[CNContact stringForIndexing]
  -[CNContact phoneticFullName]
  -[CNContact phoneticCompanyName]
  -[CNContact linkedIdentifierMap]
  -[CNContact sortingGivenName]
  -[CNContact sortingFamilyName]
  -[CNContact nameTitle]
  -[CNContact suggestionRecordId]
  -[CNContact isSuggestedMe]
  -[CNContact suggestionFoundInBundleId]
  -[CNContact copyWithNoSuggestion]
  -[CNContact hasSuggestedProperties]


CNPermissivePolicy : CNPolicy
  // class methods
  +[CNPermissivePolicy sharedPermissivePolicy]

  // instance methods
  -[CNPermissivePolicy isReadonly]
  -[CNPermissivePolicy maximumCountOfValuesForContactProperty:]
  -[CNPermissivePolicy supportedLabelsForContactProperty:]
  -[CNPermissivePolicy maximumCountOfValuesForContactProperty:label:]
  -[CNPermissivePolicy shouldAddContact:]
  -[CNPermissivePolicy shouldRemoveContact:]
  -[CNPermissivePolicy unsupportedAttributesForLableledContactProperty:]
  -[CNPermissivePolicy unsupportedKeyPathsForContactProperty:]
  -[CNPermissivePolicy shouldSetValue:ofProperty:onContact:replacementValue:]
  -[CNPermissivePolicy isContactPropertySupported:]


CNGeminiHandle : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  long long handleType
 @property  NSString *stringValue

  // class methods
  +[CNGeminiHandle supportsSecureCoding]

  // instance methods
  -[CNGeminiHandle encodeWithCoder:]
  -[CNGeminiHandle initWithCoder:]
  -[CNGeminiHandle stringValue]
  -[CNGeminiHandle .cxx_destruct]
  -[CNGeminiHandle initWithString:type:]
  -[CNGeminiHandle handleType]


CNContactFormatterSmartFetcher : CNSmartPropertyFetcher
 @property  NSSet *mandatoryNameProperties
 @property  NSDictionary *fallBackNamePropertyByNameKey
 @property  BOOL ignoresNickname
 @property  BOOL ignoresOrganization

  // class methods
  +[CNContactFormatterSmartFetcher supportsSecureCoding]

  // instance methods
  -[CNContactFormatterSmartFetcher init]
  -[CNContactFormatterSmartFetcher isEqual:]
  -[CNContactFormatterSmartFetcher copyWithZone:]
  -[CNContactFormatterSmartFetcher encodeWithCoder:]
  -[CNContactFormatterSmartFetcher initWithCoder:]
  -[CNContactFormatterSmartFetcher .cxx_destruct]
  -[CNContactFormatterSmartFetcher _cn_requiredKeys]
  -[CNContactFormatterSmartFetcher _cn_optionalKeys]
  -[CNContactFormatterSmartFetcher _cn_executeGetterForRepresentedKeys:]
  -[CNContactFormatterSmartFetcher _cn_ignorableKeys]
  -[CNContactFormatterSmartFetcher ignoresNickname]
  -[CNContactFormatterSmartFetcher setIgnoresNickname:]
  -[CNContactFormatterSmartFetcher ignoresOrganization]
  -[CNContactFormatterSmartFetcher setIgnoresOrganization:]
  -[CNContactFormatterSmartFetcher setupNameKeys]
  -[CNContactFormatterSmartFetcher mandatoryNameProperties]
  -[CNContactFormatterSmartFetcher setMandatoryNameProperties:]
  -[CNContactFormatterSmartFetcher fallBackNamePropertyByNameKey]
  -[CNContactFormatterSmartFetcher setFallBackNamePropertyByNameKey:]


CNSocialProfile : NSObject /usr/lib/libSystem.B.dylib <CNObjectValidation, NSCopying, NSSecureCoding>
 @property  NSString *urlString
 @property  NSString *username
 @property  NSString *userIdentifier
 @property  NSString *service
 @property  NSString *displayname
 @property  NSString *teamIdentifier
 @property  NSArray *bundleIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNSocialProfile supportsSecureCoding]
  +[CNSocialProfile localizedStringForKey:]
  +[CNSocialProfile localizedStringForService:]
  +[CNSocialProfile socialProfileWithDictionaryRepresentation:]

  // instance methods
  -[CNSocialProfile isEqual:]
  -[CNSocialProfile copyWithZone:]
  -[CNSocialProfile mutableCopyWithZone:]
  -[CNSocialProfile setUserIdentifier:]
  -[CNSocialProfile userIdentifier]
  -[CNSocialProfile encodeWithCoder:]
  -[CNSocialProfile initWithCoder:]
  -[CNSocialProfile .cxx_destruct]
  -[CNSocialProfile dictionaryRepresentation]
  -[CNSocialProfile username]
  -[CNSocialProfile service]
  -[CNSocialProfile setUsername:]
  -[CNSocialProfile bundleIdentifiers]
  -[CNSocialProfile setService:]
  -[CNSocialProfile teamIdentifier]
  -[CNSocialProfile isValid:]
  -[CNSocialProfile urlString]
  -[CNSocialProfile setTeamIdentifier:]
  -[CNSocialProfile setBundleIdentifiers:]
  -[CNSocialProfile displayname]
  -[CNSocialProfile initWithUrlString:username:userIdentifier:service:displayname:teamIdentifier:bundleIdentifiers:]
  -[CNSocialProfile setUrlString:]
  -[CNSocialProfile setDisplayname:]
  -[CNSocialProfile isEqual:ignoreURLs:]
  -[CNSocialProfile initWithUrlString:username:userIdentifier:service:]
  -[CNSocialProfile initWithUrlString:username:userIdentifier:service:displayname:]


CNReputationContactsAdapter : NSObject /usr/lib/libSystem.B.dylib
 @property  CNContactStore *contactStore
 @property  <CNSchedulerProvider> *schedulerProvider
 @property  <CNScheduler> *storeScheduler

  // instance methods
  -[CNReputationContactsAdapter init]
  -[CNReputationContactsAdapter .cxx_destruct]
  -[CNReputationContactsAdapter initWithContactStore:]
  -[CNReputationContactsAdapter contactStore]
  -[CNReputationContactsAdapter schedulerProvider]
  -[CNReputationContactsAdapter contactsForEmailAddress:]
  -[CNReputationContactsAdapter contactsForPhoneNumber:]
  -[CNReputationContactsAdapter initWithContactStore:schedulerProvider:]
  -[CNReputationContactsAdapter contactsForPredicate:keys:]
  -[CNReputationContactsAdapter storeScheduler]


CNVCardConstantsMapping : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *mapping

  // class methods
  +[CNVCardConstantsMapping vCardToCNSocialProfileConstantsMapping]
  +[CNVCardConstantsMapping vCardToCNInstantMessageConstantsMapping]
  +[CNVCardConstantsMapping CNToVCardSocialProfileConstantsMapping]
  +[CNVCardConstantsMapping CNToVCardInstantMessageConstantsMapping]

  // instance methods
  -[CNVCardConstantsMapping .cxx_destruct]
  -[CNVCardConstantsMapping mapping]
  -[CNVCardConstantsMapping mappedConstant:]
  -[CNVCardConstantsMapping initWithMapping:]
  -[CNVCardConstantsMapping invertedMapping]
  -[CNVCardConstantsMapping setMapping:]


CNContactMatchInfo : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  BOOL matchedNameProperty
 @property  NSNumber *relevanceScore
 @property  NSDictionary *matchedProperties
 @property  NSSet *matchedTerms
 @property  CNPromise *excerpt

  // class methods
  +[CNContactMatchInfo supportsSecureCoding]

  // instance methods
  -[CNContactMatchInfo copyWithZone:]
  -[CNContactMatchInfo encodeWithCoder:]
  -[CNContactMatchInfo initWithCoder:]
  -[CNContactMatchInfo .cxx_destruct]
  -[CNContactMatchInfo matchedTerms]
  -[CNContactMatchInfo setMatchedTerms:]
  -[CNContactMatchInfo matchedProperties]
  -[CNContactMatchInfo excerpt]
  -[CNContactMatchInfo setRelevanceScore:]
  -[CNContactMatchInfo setMatchedNameProperty:]
  -[CNContactMatchInfo setMatchedProperties:]
  -[CNContactMatchInfo setExcerpt:]
  -[CNContactMatchInfo relevanceScore]
  -[CNContactMatchInfo matchedNameProperty]


CNMutableContainer : CNContainer
 @property  long long type
 @property  int iOSLegacyIdentifier
 @property  NSString *accountIdentifier
 @property  NSString *externalIdentifier
 @property  NSString *externalModificationTag
 @property  NSString *externalSyncTag
 @property  NSData *externalSyncData
 @property  NSString *constraintsPath
 @property  NSString *meIdentifier
 @property  unsigned long restrictions
 @property  BOOL guardianStateDirty
 @property  BOOL enabled
 @property  BOOL guardianRestricted
 @property  NSDate *lastSyncDate
 @property  NSString *identifier
 @property  NSString *name

  // instance methods
  -[CNMutableContainer name]
  -[CNMutableContainer copy]
  -[CNMutableContainer type]
  -[CNMutableContainer setType:]
  -[CNMutableContainer setEnabled:]
  -[CNMutableContainer freeze]
  -[CNMutableContainer setName:]
  -[CNMutableContainer identifier]
  -[CNMutableContainer setIdentifier:]
  -[CNMutableContainer isEnabled]
  -[CNMutableContainer lastSyncDate]
  -[CNMutableContainer accountIdentifier]
  -[CNMutableContainer restrictions]
  -[CNMutableContainer setRestrictions:]
  -[CNMutableContainer setSnapshot:]
  -[CNMutableContainer setAccountIdentifier:]
  -[CNMutableContainer iOSLegacyIdentifier]
  -[CNMutableContainer setIOSLegacyIdentifier:]
  -[CNMutableContainer externalIdentifier]
  -[CNMutableContainer setExternalIdentifier:]
  -[CNMutableContainer externalModificationTag]
  -[CNMutableContainer setExternalModificationTag:]
  -[CNMutableContainer externalSyncTag]
  -[CNMutableContainer setExternalSyncTag:]
  -[CNMutableContainer externalSyncData]
  -[CNMutableContainer setExternalSyncData:]
  -[CNMutableContainer constraintsPath]
  -[CNMutableContainer setConstraintsPath:]
  -[CNMutableContainer meIdentifier]
  -[CNMutableContainer setMeIdentifier:]
  -[CNMutableContainer isGuardianRestricted]
  -[CNMutableContainer setGuardianRestricted:]
  -[CNMutableContainer isGuardianStateDirty]
  -[CNMutableContainer setGuardianStateDirty:]
  -[CNMutableContainer setLastSyncDate:]
  -[CNMutableContainer freezeWithSelfAsSnapshot]
  -[CNMutableContainer adoptValuesFromAndSetSnapshot:]
  -[CNMutableContainer setParentallyManaged:]
  -[CNMutableContainer setGuardianRestricted:shouldPushChangeToServer:]


CNiOSAddressBook : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  NSMutableSet *addressBookPool
 @property  @? addressBookProvider
 @property  NSObject<OS_dispatch_source> *memoryMonitoringSource
 @property  BOOL addressBookIsShared

  // class methods
  +[CNiOSAddressBook initialize]
  +[CNiOSAddressBook newInMemoryAddressBook]
  +[CNiOSAddressBook newAddressBookWithDelegateInfo:]
  +[CNiOSAddressBook newAddressBookWithURL:]

  // instance methods
  -[CNiOSAddressBook init]
  -[CNiOSAddressBook .cxx_destruct]
  -[CNiOSAddressBook accessQueue]
  -[CNiOSAddressBook initWithContactsEnvironment:]
  -[CNiOSAddressBook performSynchronousWorkWithInvalidatedAddressBook:]
  -[CNiOSAddressBook performAsynchronousWorkWithInvalidatedAddressBook:]
  -[CNiOSAddressBook resultWithInvalidatedAddressBook:]
  -[CNiOSAddressBook initWithAddressBookProvider:]
  -[CNiOSAddressBook flushPool]
  -[CNiOSAddressBook addressBookPool]
  -[CNiOSAddressBook addressBookProvider]
  -[CNiOSAddressBook popAddressBook]
  -[CNiOSAddressBook preparedAddressBook:]
  -[CNiOSAddressBook pushAddressBook:]
  -[CNiOSAddressBook memoryMonitoringSource]
  -[CNiOSAddressBook addressBookIsShared]


CNMutableActivityAlert : CNActivityAlert
 @property  NSString *sound
 @property  NSString *vibration
 @property  BOOL ignoreMute
 @property  NSDictionary *userInfo

  // instance methods
  -[CNMutableActivityAlert freeze]


CNiOSPersonFetchRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  <CNiOSContactPredicate> *predicate
 @property  BOOL shouldSort
 @property  unsigned long options
 @property  unsigned int sortOrder
 @property  unsigned int sortOrderIncludingNone
 @property  NSArray *keysToFetch
 @property  BOOL unifiedFetch
 @property  unsigned long batchSize
 @property  CNManagedConfiguration *managedConfiguration

  // class methods
  +[CNiOSPersonFetchRequest validatePredicate:error:]
  +[CNiOSPersonFetchRequest fetchRequestFromCNFetchRequest:managedConfiguration:error:]
  +[CNiOSPersonFetchRequest resolvedSortOrderFromContactSortOrder:]
  +[CNiOSPersonFetchRequest effectivePredicate:]

  // instance methods
  -[CNiOSPersonFetchRequest options]
  -[CNiOSPersonFetchRequest .cxx_destruct]
  -[CNiOSPersonFetchRequest predicate]
  -[CNiOSPersonFetchRequest batchSize]
  -[CNiOSPersonFetchRequest sortOrder]
  -[CNiOSPersonFetchRequest keysToFetch]
  -[CNiOSPersonFetchRequest unifiedFetch]
  -[CNiOSPersonFetchRequest sortOrderIncludingNone]
  -[CNiOSPersonFetchRequest managedConfiguration]
  -[CNiOSPersonFetchRequest shouldSort]
  -[CNiOSPersonFetchRequest initWithPredicate:keysToFetch:shouldSort:sortOrder:unifiedFetch:batchSize:managedConfiguration:options:]


CNContactMetadataPersistentStoreManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *storeLocation
 @property  NSPersistentContainer *container

  // class methods
  +[CNContactMetadataPersistentStoreManager os_log]
  +[CNContactMetadataPersistentStoreManager createModel]
  +[CNContactMetadataPersistentStoreManager currentManagedObjectModel]
  +[CNContactMetadataPersistentStoreManager defaultStoreLocation]
  +[CNContactMetadataPersistentStoreManager createPersistentContainer]

  // instance methods
  -[CNContactMetadataPersistentStoreManager init]
  -[CNContactMetadataPersistentStoreManager container]
  -[CNContactMetadataPersistentStoreManager .cxx_destruct]
  -[CNContactMetadataPersistentStoreManager persistentStoreCoordinator]
  -[CNContactMetadataPersistentStoreManager performWorkWithManagedObjectContext:error:]
  -[CNContactMetadataPersistentStoreManager initWithStoreLocation:]
  -[CNContactMetadataPersistentStoreManager setupIfNeeded:]
  -[CNContactMetadataPersistentStoreManager createManagedObjectContext]
  -[CNContactMetadataPersistentStoreManager createStoreDirectoryIfNeeded:]
  -[CNContactMetadataPersistentStoreManager storeLocation]
  -[CNContactMetadataPersistentStoreManager storeDescription]


CNSuggestedContactStore : CNContactStore
 @property  <SGSuggestionsServiceContactsProtocol> *suggestionService
 @property  <CNSiriIntelligenceSettingsProtocol> *siriIntelligenceSettings

  // class methods
  +[CNSuggestedContactStore storeIdentifier]
  +[CNSuggestedContactStore storeInfoClasses]
  +[CNSuggestedContactStore isSuggestionsSupported]

  // instance methods
  -[CNSuggestedContactStore init]
  -[CNSuggestedContactStore .cxx_destruct]
  -[CNSuggestedContactStore unifiedContactsMatchingPredicate:keysToFetch:error:]
  -[CNSuggestedContactStore requestAccessForEntityType:]
  -[CNSuggestedContactStore enumerateContactsAndMatchInfoWithFetchRequest:error:usingBlock:]
  -[CNSuggestedContactStore executeSaveRequest:error:]
  -[CNSuggestedContactStore siriIntelligenceSettings]
  -[CNSuggestedContactStore setSiriIntelligenceSettings:]
  -[CNSuggestedContactStore initWithSuggestionsService:siriIntelligenceSettings:]
  -[CNSuggestedContactStore suggestionService]
  -[CNSuggestedContactStore _processSuggestions:error:withBlock:]
  -[CNSuggestedContactStore originForSuggestion:error:]
  -[CNSuggestedContactStore setSuggestionService:]


CNDelegateInfoProvider : NSObject /usr/lib/libSystem.B.dylib
 @property  FAFamilyCircle *familyCircle
 @property  NSArray *availableScopes

  // instance methods
  -[CNDelegateInfoProvider init]
  -[CNDelegateInfoProvider .cxx_destruct]
  -[CNDelegateInfoProvider initWithFamilyCircle:]
  -[CNDelegateInfoProvider availableScopes]
  -[CNDelegateInfoProvider contactStoreWithScope:error:]
  -[CNDelegateInfoProvider familyCircle]


CNReputationCoreRecentsAdapter : NSObject /usr/lib/libSystem.B.dylib
 @property  CRRecentContactsLibrary *library

  // instance methods
  -[CNReputationCoreRecentsAdapter init]
  -[CNReputationCoreRecentsAdapter .cxx_destruct]
  -[CNReputationCoreRecentsAdapter library]
  -[CNReputationCoreRecentsAdapter recentContactsForHandle:]
  -[CNReputationCoreRecentsAdapter initWithRecentContactsLibrary:]


CNiOSABContainersForAccountExternalIdentifierPredicate : CNPredicate <CNiOSContainerPredicate>
 @property  NSString *accountExternalIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABContainersForAccountExternalIdentifierPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABContainersForAccountExternalIdentifierPredicate encodeWithCoder:]
  -[CNiOSABContainersForAccountExternalIdentifierPredicate initWithCoder:]
  -[CNiOSABContainersForAccountExternalIdentifierPredicate .cxx_destruct]
  -[CNiOSABContainersForAccountExternalIdentifierPredicate initWithPredicate:]
  -[CNiOSABContainersForAccountExternalIdentifierPredicate cn_copyContainersInAddressBook:error:]
  -[CNiOSABContainersForAccountExternalIdentifierPredicate includesDisabledContainers]
  -[CNiOSABContainersForAccountExternalIdentifierPredicate initWithAccountExternalIdentifier:]
  -[CNiOSABContainersForAccountExternalIdentifierPredicate accountExternalIdentifier]


CNLinkedContactsPredicate : CNPredicate <CNSuggestedContactPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  CNContact *contact
 @property  NSString *contactIdentifier

  // class methods
  +[CNLinkedContactsPredicate supportsSecureCoding]

  // instance methods
  -[CNLinkedContactsPredicate encodeWithCoder:]
  -[CNLinkedContactsPredicate initWithCoder:]
  -[CNLinkedContactsPredicate .cxx_destruct]
  -[CNLinkedContactsPredicate contact]
  -[CNLinkedContactsPredicate contactIdentifier]
  -[CNLinkedContactsPredicate initWithContactIdentifier:]
  -[CNLinkedContactsPredicate initWithContact:]


CNContactVCardSummary : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *title
 @property  NSString *descriptiveLabel
 @property  NSString *subtitle
 @property  unsigned long contactCount
 @property  NSArray *avatarContacts

  // class methods
  +[CNContactVCardSummary supportsSecureCoding]
  +[CNContactVCardSummary readingOptionsWithContactLimit:]
  +[CNContactVCardSummary namesForContact:]
  +[CNContactVCardSummary nameForContact:]
  +[CNContactVCardSummary localizedStringWithName:andOtherName:]
  +[CNContactVCardSummary localizedStringWithName:andThisManyOthers:]
  +[CNContactVCardSummary defaultNameFormatter]
  +[CNContactVCardSummary makeFormatter]
  +[CNContactVCardSummary isAvatarContacts:equalTo:]

  // instance methods
  -[CNContactVCardSummary isEqual:]
  -[CNContactVCardSummary copyWithZone:]
  -[CNContactVCardSummary encodeWithCoder:]
  -[CNContactVCardSummary initWithCoder:]
  -[CNContactVCardSummary .cxx_destruct]
  -[CNContactVCardSummary title]
  -[CNContactVCardSummary initWithData:error:]
  -[CNContactVCardSummary subtitle]
  -[CNContactVCardSummary initWithTitle:subtitle:contactCount:avatarContacts:]
  -[CNContactVCardSummary contactCount]
  -[CNContactVCardSummary avatarContacts]
  -[CNContactVCardSummary descriptiveLabel]


_CNContactVCardNameSummzarizationScope : NSObject /usr/lib/libSystem.B.dylib
 @property  CNContact *contact
 @property  NSString *fullName

  // instance methods
  -[_CNContactVCardNameSummzarizationScope .cxx_destruct]
  -[_CNContactVCardNameSummzarizationScope contact]
  -[_CNContactVCardNameSummzarizationScope fullName]
  -[_CNContactVCardNameSummzarizationScope initWithContact:fullName:]


CNContactImageFetchRequest : NSObject /usr/lib/libSystem.B.dylib <CNContactImageRequest>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSPersistentStoreRequest *persistentStoreRequest
 @property  NSArray *contactIdentifiers

  // class methods
  +[CNContactImageFetchRequest recentImagesRequestForContactIdenfitiers:]
  +[CNContactImageFetchRequest predicateForImagesMatchingContactIdentifiers:]

  // instance methods
  -[CNContactImageFetchRequest .cxx_destruct]
  -[CNContactImageFetchRequest persistentStoreRequest]
  -[CNContactImageFetchRequest contactIdentifiers]
  -[CNContactImageFetchRequest setContactIdentifiers:]
  -[CNContactImageFetchRequest initWithContactIdentifiers:]


CNAggregateKeyDescriptor : NSObject /usr/lib/libSystem.B.dylib <CNKeyDescriptor_Private>
 @property  NSArray *keyDescriptors
 @property  NSString *privateDescription
 @property  CNContactKeyVector *unauthorizedKeys
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNAggregateKeyDescriptor supportsSecureCoding]
  +[CNAggregateKeyDescriptor keyDescriptorWithKeyDescriptors:description:]

  // instance methods
  -[CNAggregateKeyDescriptor isEqual:]
  -[CNAggregateKeyDescriptor copyWithZone:]
  -[CNAggregateKeyDescriptor encodeWithCoder:]
  -[CNAggregateKeyDescriptor initWithCoder:]
  -[CNAggregateKeyDescriptor .cxx_destruct]
  -[CNAggregateKeyDescriptor privateDescription]
  -[CNAggregateKeyDescriptor _cn_requiredKeys]
  -[CNAggregateKeyDescriptor _cn_optionalKeys]
  -[CNAggregateKeyDescriptor _cn_executeGetterForRepresentedKeys:]
  -[CNAggregateKeyDescriptor _cn_ignorableKeys]
  -[CNAggregateKeyDescriptor _cn_recursiveDescriptionWithPrefix:]
  -[CNAggregateKeyDescriptor _cn_unauthorizedKeys]
  -[CNAggregateKeyDescriptor _cn_setUnauthorizedKeys:]
  -[CNAggregateKeyDescriptor initWithKeyDescriptors:description:]
  -[CNAggregateKeyDescriptor setKeyDescriptors:]
  -[CNAggregateKeyDescriptor setPrivateDescription:]
  -[CNAggregateKeyDescriptor keyDescriptors]
  -[CNAggregateKeyDescriptor unauthorizedKeys]
  -[CNAggregateKeyDescriptor setUnauthorizedKeys:]
  -[CNAggregateKeyDescriptor _recursiveDescription]


CNContactDiff : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *updates

  // class methods
  +[CNContactDiff diffContact:to:error:]

  // instance methods
  -[CNContactDiff .cxx_destruct]
  -[CNContactDiff updates]
  -[CNContactDiff initWithUpdates:]
  -[CNContactDiff applyToABPerson:logger:error:]
  -[CNContactDiff applyToMutableContact:withIdentifierMap:]
  -[CNContactDiff contactByApplyingUpdatesToContact:]
  -[CNContactDiff applyToMutableContacts:withIdentifierMap:]


CNPropertyDescription : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  SEL readSelector
 @property  SEL writeSelector
 @property  NSString *key
 @property  BOOL isWritable
 @property  Class valueClass
 @property  BOOL isSingleValue
 @property  BOOL isMultiValue
 @property  BOOL isNonnull
 @property  @? valueForKeyTransform
 @property  id nilValue
 @property  NSArray *equivalentLabelSets

  // class methods
  +[CNPropertyDescription supportsSecureCoding]

  // instance methods
  -[CNPropertyDescription copyWithZone:]
  -[CNPropertyDescription key]
  -[CNPropertyDescription encodeWithCoder:]
  -[CNPropertyDescription initWithCoder:]
  -[CNPropertyDescription .cxx_destruct]
  -[CNPropertyDescription valueClass]
  -[CNPropertyDescription supportsABLazyLoading]
  -[CNPropertyDescription nilValue]
  -[CNPropertyDescription isWritable]
  -[CNPropertyDescription isValidValue:error:]
  -[CNPropertyDescription isValue:equalToEmptyEquivalentOrValue:]
  -[CNPropertyDescription isNonnull]
  -[CNPropertyDescription CNValueForContact:]
  -[CNPropertyDescription initWithKey:readSelector:writeSelector:]
  -[CNPropertyDescription encodeUsingCoder:contact:]
  -[CNPropertyDescription decodeUsingCoder:contact:]
  -[CNPropertyDescription isEqualIgnoringIdentifiersForContact:other:]
  -[CNPropertyDescription setCNValue:onContact:]
  -[CNPropertyDescription resetGuardianManagedValueOnContact:]
  -[CNPropertyDescription canUnifyValue:withValue:]
  -[CNPropertyDescription isValue:preferredToUnifiedValue:]
  -[CNPropertyDescription equivalentLabelSets]
  -[CNPropertyDescription stringForIndexingForContact:]
  -[CNPropertyDescription isMultiValue]
  -[CNPropertyDescription ABValueFromCNValue:]
  -[CNPropertyDescription CNValueFromABValue:]
  -[CNPropertyDescription unifiableLabelsForLabel:]
  -[CNPropertyDescription valueForKeyTransform]
  -[CNPropertyDescription abPropertyID:]
  -[CNPropertyDescription CNMutableValueForABMultivalue]
  -[CNPropertyDescription applyABMultivalueValueBytes:length:identifier:legacyIdentifier:label:toCNMultivalueRepresentation:]
  -[CNPropertyDescription applyDictionary:identifier:legacyIdentifier:label:toCNMultivalueRepresentation:]
  -[CNPropertyDescription CNValueFromABBytes:length:]
  -[CNPropertyDescription valueWithResetIdentifiers:]
  -[CNPropertyDescription setCNValue:onABPerson:withDependentPropertiesContext:error:]
  -[CNPropertyDescription ABValueForABPerson:]
  -[CNPropertyDescription assertValueType:]
  -[CNPropertyDescription copyFromABPerson:toContact:]
  -[CNPropertyDescription setABValue:onABPerson:error:]
  -[CNPropertyDescription isSingleValue]
  -[CNPropertyDescription readSelector]
  -[CNPropertyDescription writeSelector]


CNContactKeyValueUpdate : CNContactUpdate
 @property  CNPropertyDescription *property
 @property  id value

  // instance methods
  -[CNContactKeyValueUpdate isEqual:]
  -[CNContactKeyValueUpdate .cxx_destruct]
  -[CNContactKeyValueUpdate value]
  -[CNContactKeyValueUpdate property]
  -[CNContactKeyValueUpdate applyToABPerson:withPropertiesContext:logger:error:]
  -[CNContactKeyValueUpdate initWithProperty:value:]
  -[CNContactKeyValueUpdate applyToMutableContact:withIdentifierMap:]


CNAuthorization : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNAuthorization requestAccessForEntityType:]
  +[CNAuthorization requestAccessForEntityType:completionHandler:]
  +[CNAuthorization requestAccessForEntityType:error:]
  +[CNAuthorization authorizationStatusForEntityType:]
  +[CNAuthorization isAccessRestrictedForEntityType:]
  +[CNAuthorization requestAccessForEntityType:timeout:error:]


CNPostalAddressFormattingSpecification : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *fieldLabelMap
 @property  NSArray *displayFieldArrangement
 @property  NSArray *editingFieldArrangement

  // instance methods
  -[CNPostalAddressFormattingSpecification .cxx_destruct]
  -[CNPostalAddressFormattingSpecification localizedPlaceholderForKey:]
  -[CNPostalAddressFormattingSpecification initWithDisplayFieldArrangement:editingFieldArrangement:fieldLabelMap:]
  -[CNPostalAddressFormattingSpecification fieldLabelMap]
  -[CNPostalAddressFormattingSpecification displayFieldArrangement]
  -[CNPostalAddressFormattingSpecification editingFieldArrangement]


CNiOSABPostalAddressContactPredicate : CNPredicate <CNiOSContactPredicate>
 @property  CNPostalAddress *postalAddress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABPostalAddressContactPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABPostalAddressContactPredicate isEqual:]
  -[CNiOSABPostalAddressContactPredicate encodeWithCoder:]
  -[CNiOSABPostalAddressContactPredicate initWithCoder:]
  -[CNiOSABPostalAddressContactPredicate .cxx_destruct]
  -[CNiOSABPostalAddressContactPredicate postalAddress]
  -[CNiOSABPostalAddressContactPredicate initWithPostalAddress:]
  -[CNiOSABPostalAddressContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:nserror:]
  -[CNiOSABPostalAddressContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABPostalAddressContactPredicate cn_supportsNativeSorting]
  -[CNiOSABPostalAddressContactPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABPostalAddressContactPredicate cn_supportsEncodedFetching]
  -[CNiOSABPostalAddressContactPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABPostalAddressContactPredicate setPostalAddress:]


CNContactFetchRequest : CNFetchRequest <NSSecureCoding>
 @property  BOOL disallowsEncodedFetch
 @property  unsigned long batchSize
 @property  BOOL rankSort
 @property  BOOL onlyMainStore
 @property  BOOL allowsBatching
 @property  BOOL shouldFailIfAccountNotYetSynced
 @property  NSPredicate *predicate
 @property  NSArray *keysToFetch
 @property  BOOL mutableObjects
 @property  BOOL unifyResults
 @property  long long sortOrder

  // class methods
  +[CNContactFetchRequest supportsSecureCoding]

  // instance methods
  -[CNContactFetchRequest init]
  -[CNContactFetchRequest copyWithZone:]
  -[CNContactFetchRequest encodeWithCoder:]
  -[CNContactFetchRequest initWithCoder:]
  -[CNContactFetchRequest .cxx_destruct]
  -[CNContactFetchRequest setPredicate:]
  -[CNContactFetchRequest predicate]
  -[CNContactFetchRequest batchSize]
  -[CNContactFetchRequest setBatchSize:]
  -[CNContactFetchRequest sortOrder]
  -[CNContactFetchRequest setSortOrder:]
  -[CNContactFetchRequest initWithKeysToFetch:]
  -[CNContactFetchRequest setUnifyResults:]
  -[CNContactFetchRequest keysToFetch]
  -[CNContactFetchRequest unifyResults]
  -[CNContactFetchRequest mutableObjects]
  -[CNContactFetchRequest onlyMainStore]
  -[CNContactFetchRequest setMutableObjects:]
  -[CNContactFetchRequest effectivePredicate]
  -[CNContactFetchRequest effectiveKeysToFetch]
  -[CNContactFetchRequest setKeysToFetch:]
  -[CNContactFetchRequest shouldFailIfAccountNotYetSynced]
  -[CNContactFetchRequest setDisallowsEncodedFetch:]
  -[CNContactFetchRequest disallowsEncodedFetch]
  -[CNContactFetchRequest setOnlyMainStore:]
  -[CNContactFetchRequest requiresMeContactAuthorization]
  -[CNContactFetchRequest rankSort]
  -[CNContactFetchRequest setRankSort:]
  -[CNContactFetchRequest allowsBatching]
  -[CNContactFetchRequest setAllowsBatching:]
  -[CNContactFetchRequest setShouldFailIfAccountNotYetSynced:]


CNiOSABPreferredChannelContactPredicate : CNPredicate <CNiOSContactPredicate>
 @property  NSString *preferredChannel
 @property  BOOL limitOne
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABPreferredChannelContactPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABPreferredChannelContactPredicate isEqual:]
  -[CNiOSABPreferredChannelContactPredicate encodeWithCoder:]
  -[CNiOSABPreferredChannelContactPredicate initWithCoder:]
  -[CNiOSABPreferredChannelContactPredicate .cxx_destruct]
  -[CNiOSABPreferredChannelContactPredicate shortDebugDescription]
  -[CNiOSABPreferredChannelContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABPreferredChannelContactPredicate cn_supportsNativeSorting]
  -[CNiOSABPreferredChannelContactPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABPreferredChannelContactPredicate cn_supportsEncodedFetching]
  -[CNiOSABPreferredChannelContactPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABPreferredChannelContactPredicate preferredChannel]
  -[CNiOSABPreferredChannelContactPredicate setPreferredChannel:]
  -[CNiOSABPreferredChannelContactPredicate initWithPreferredChannel:limitOne:]
  -[CNiOSABPreferredChannelContactPredicate limitOne]
  -[CNiOSABPreferredChannelContactPredicate setLimitOne:]


CNMutableGroup : CNGroup
 @property  NSString *externalIdentifier
 @property  NSData *externalRepresentation
 @property  NSString *externalModificationTag
 @property  NSString *externalUUID
 @property  NSString *identifier
 @property  int iOSLegacyIdentifier
 @property  NSDate *creationDate
 @property  NSDate *modificationDate
 @property  CNGroup *snapshot
 @property  NSString *name

  // instance methods
  -[CNMutableGroup name]
  -[CNMutableGroup copy]
  -[CNMutableGroup freeze]
  -[CNMutableGroup setName:]
  -[CNMutableGroup identifier]
  -[CNMutableGroup setIdentifier:]
  -[CNMutableGroup modificationDate]
  -[CNMutableGroup creationDate]
  -[CNMutableGroup setCreationDate:]
  -[CNMutableGroup setSnapshot:]
  -[CNMutableGroup setModificationDate:]
  -[CNMutableGroup iOSLegacyIdentifier]
  -[CNMutableGroup setIOSLegacyIdentifier:]
  -[CNMutableGroup externalIdentifier]
  -[CNMutableGroup setExternalIdentifier:]
  -[CNMutableGroup externalModificationTag]
  -[CNMutableGroup setExternalModificationTag:]
  -[CNMutableGroup externalRepresentation]
  -[CNMutableGroup setExternalRepresentation:]
  -[CNMutableGroup externalUUID]
  -[CNMutableGroup setExternalUUID:]
  -[CNMutableGroup freezeWithSelfAsSnapshot]
  -[CNMutableGroup adoptValuesFromAndSetSnapshot:]


CNiOSABPreferredNameInContainersAndGroupsPredicate : CNPredicate <CNiOSContactPredicate>
 @property  NSArray *containerIdentifiers
 @property  NSArray *groupIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABPreferredNameInContainersAndGroupsPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABPreferredNameInContainersAndGroupsPredicate encodeWithCoder:]
  -[CNiOSABPreferredNameInContainersAndGroupsPredicate initWithCoder:]
  -[CNiOSABPreferredNameInContainersAndGroupsPredicate .cxx_destruct]
  -[CNiOSABPreferredNameInContainersAndGroupsPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABPreferredNameInContainersAndGroupsPredicate cn_supportsNativeSorting]
  -[CNiOSABPreferredNameInContainersAndGroupsPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABPreferredNameInContainersAndGroupsPredicate cn_supportsEncodedFetching]
  -[CNiOSABPreferredNameInContainersAndGroupsPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABPreferredNameInContainersAndGroupsPredicate containerIdentifiers]
  -[CNiOSABPreferredNameInContainersAndGroupsPredicate groupIdentifiers]
  -[CNiOSABPreferredNameInContainersAndGroupsPredicate initWithContainerIdentifiers:groupIdentifiers:]


CNContactHandleIndexableString : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *stringValue
 @property  <_CNContactHandleStringEquivalenceStrategy> *equivalenceStrategy
 @property  NSString *indexKey

  // class methods
  +[CNContactHandleIndexableString supportsSecureCoding]
  +[CNContactHandleIndexableString emailIndexKey:]
  +[CNContactHandleIndexableString phoneNumberIndexKey:]
  +[CNContactHandleIndexableString equivalenceStrategyWithString:]

  // instance methods
  -[CNContactHandleIndexableString isEqual:]
  -[CNContactHandleIndexableString copyWithZone:]
  -[CNContactHandleIndexableString encodeWithCoder:]
  -[CNContactHandleIndexableString initWithCoder:]
  -[CNContactHandleIndexableString stringValue]
  -[CNContactHandleIndexableString .cxx_destruct]
  -[CNContactHandleIndexableString initWithString:]
  -[CNContactHandleIndexableString indexKey]
  -[CNContactHandleIndexableString isEquivalentToString:strict:]
  -[CNContactHandleIndexableString initWithFullString:indexKey:equivalenceStrategy:]
  -[CNContactHandleIndexableString equivalenceStrategy]


_CNContactEmailAddressEquivalence : NSObject /usr/lib/libSystem.B.dylib <_CNContactHandleStringEquivalenceStrategy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_CNContactEmailAddressEquivalence indexKeyForString:]

  // instance methods
  -[_CNContactEmailAddressEquivalence .cxx_destruct]
  -[_CNContactEmailAddressEquivalence initWithEmailAddress:]
  -[_CNContactEmailAddressEquivalence isEquivalentToString:strict:]


_CNContactPhoneNumberEquivalence : NSObject /usr/lib/libSystem.B.dylib <_CNContactHandleStringEquivalenceStrategy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_CNContactPhoneNumberEquivalence indexKeyForString:]

  // instance methods
  -[_CNContactPhoneNumberEquivalence dealloc]
  -[_CNContactPhoneNumberEquivalence .cxx_destruct]
  -[_CNContactPhoneNumberEquivalence isEquivalentToString:strict:]
  -[_CNContactPhoneNumberEquivalence initWithPhoneNumberString:]
  -[_CNContactPhoneNumberEquivalence isRawStringEquivalent:]
  -[_CNContactPhoneNumberEquivalence preparePhoneNumberRepresentation]
  -[_CNContactPhoneNumberEquivalence isPhoneNumberEquivalent:strict:]


CNiOSABContactLegacyIdentifierPredicate : CNPredicate <CNiOSContactPredicate>
 @property  int legacyIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABContactLegacyIdentifierPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABContactLegacyIdentifierPredicate encodeWithCoder:]
  -[CNiOSABContactLegacyIdentifierPredicate initWithCoder:]
  -[CNiOSABContactLegacyIdentifierPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABContactLegacyIdentifierPredicate cn_supportsNativeSorting]
  -[CNiOSABContactLegacyIdentifierPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABContactLegacyIdentifierPredicate cn_supportsEncodedFetching]
  -[CNiOSABContactLegacyIdentifierPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABContactLegacyIdentifierPredicate legacyIdentifier]
  -[CNiOSABContactLegacyIdentifierPredicate initWithLegacyIdentifier:]


CNiOSFetchExecution : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNiOSFetchExecution contactsMatchingPredicates:sortOrdering:matchInfos:options:addressBook:environment:error:]
  +[CNiOSFetchExecution contactsMatchingPredicates:sortOrdering:options:addressBook:progressiveResults:completion:environment:]
  +[CNiOSFetchExecution _extractContacts:matchInfo:fromBlockResults:containsNestedResults:]


_CNABPredicateObservable : CNObservable /System/Library/Frameworks/Accounts.framework/Accounts <ABPredicateDelegate>
 @property  ABPredicate *predicate
 @property  unsigned int sortOrdering
 @property  unsigned long options
 @property  ^v addressBook
 @property  CNContactsEnvironment *environment
 @property  CNCancelationToken *cancelationToken
 @property  <CNObserver> *observer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_CNABPredicateObservable observableWithPredicates:sortOrdering:options:addressBook:environment:]
  +[_CNABPredicateObservable schedulerForIdentifier:provider:]
  +[_CNABPredicateObservable makeSerialFetchSchedulerUsingSchedulerProvider:]

  // instance methods
  -[_CNABPredicateObservable dealloc]
  -[_CNABPredicateObservable observer]
  -[_CNABPredicateObservable options]
  -[_CNABPredicateObservable .cxx_destruct]
  -[_CNABPredicateObservable predicate]
  -[_CNABPredicateObservable environment]
  -[_CNABPredicateObservable setObserver:]
  -[_CNABPredicateObservable addressBook]
  -[_CNABPredicateObservable subscribe:]
  -[_CNABPredicateObservable initWithPredicate:sortOrdering:options:addressBook:environment:]
  -[_CNABPredicateObservable sortOrdering]
  -[_CNABPredicateObservable predicateShouldContinue:afterFindingRecord:moreComing:]
  -[_CNABPredicateObservable cancelationToken]
  -[_CNABPredicateObservable predicateShouldContinue:afterFindingRecord:metadata:]
  -[_CNABPredicateObservable predicateShouldContinue:afterFindingRecord:]
  -[_CNABPredicateObservable predicateShouldContinue:]


CNiOSABOrganizationNameContactPredicate : CNPredicate <CNiOSContactPredicate>
 @property  NSString *organizationName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABOrganizationNameContactPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABOrganizationNameContactPredicate isEqual:]
  -[CNiOSABOrganizationNameContactPredicate encodeWithCoder:]
  -[CNiOSABOrganizationNameContactPredicate initWithCoder:]
  -[CNiOSABOrganizationNameContactPredicate .cxx_destruct]
  -[CNiOSABOrganizationNameContactPredicate organizationName]
  -[CNiOSABOrganizationNameContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:nserror:]
  -[CNiOSABOrganizationNameContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABOrganizationNameContactPredicate cn_supportsNativeSorting]
  -[CNiOSABOrganizationNameContactPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABOrganizationNameContactPredicate cn_supportsEncodedFetching]
  -[CNiOSABOrganizationNameContactPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABOrganizationNameContactPredicate initWithOrganizationName:]


CNInstantMessageAddressContactPredicate : CNPredicate
 @property  CNInstantMessageAddress *imAddress

  // class methods
  +[CNInstantMessageAddressContactPredicate supportsSecureCoding]

  // instance methods
  -[CNInstantMessageAddressContactPredicate encodeWithCoder:]
  -[CNInstantMessageAddressContactPredicate initWithCoder:]
  -[CNInstantMessageAddressContactPredicate .cxx_destruct]
  -[CNInstantMessageAddressContactPredicate imAddress]
  -[CNInstantMessageAddressContactPredicate initWithInstantMessageAddress:]


CNiOSABLabeledValueContactPredicate : CNPredicate <CNiOSContactPredicate>
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABLabeledValueContactPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABLabeledValueContactPredicate encodeWithCoder:]
  -[CNiOSABLabeledValueContactPredicate initWithCoder:]
  -[CNiOSABLabeledValueContactPredicate .cxx_destruct]
  -[CNiOSABLabeledValueContactPredicate identifier]
  -[CNiOSABLabeledValueContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABLabeledValueContactPredicate cn_supportsNativeSorting]
  -[CNiOSABLabeledValueContactPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABLabeledValueContactPredicate cn_supportsEncodedFetching]
  -[CNiOSABLabeledValueContactPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABLabeledValueContactPredicate initWithLabeledValueIdentifier:]


_CNGeminiLogger : NSObject /usr/lib/libSystem.B.dylib <CNGeminiLogger>
 @property  NSObject<OS_os_log> *log
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_CNGeminiLogger init]
  -[_CNGeminiLogger .cxx_destruct]
  -[_CNGeminiLogger log]
  -[_CNGeminiLogger updatingSubscriptionInfo:]
  -[_CNGeminiLogger fetchingBestResultForDestinationHandle:]
  -[_CNGeminiLogger recordedInteraction:forContext:]
  -[_CNGeminiLogger recordInteractionError:]
  -[_CNGeminiLogger registeredForContextUpdatesWithToken:]
  -[_CNGeminiLogger unregisteredForContextUpdatesWithToken:]
  -[_CNGeminiLogger updatedSubscriptionInfo:]
  -[_CNGeminiLogger updateSubscriptionInfoError:]
  -[_CNGeminiLogger fetchedSortedResults:forInteraction:]
  -[_CNGeminiLogger fetchSortedResultsForInteraction:error:]


CNiOSABPredicateRunner : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[CNiOSABPredicateRunner personPredicateWithNameLike:inSource:addressBook:]
  -[CNiOSABPredicateRunner personPredicateWithNameLike:inGroups:sources:addressBook:]
  -[CNiOSABPredicateRunner searchPeopleWithPredicate:sortOrder:ranked:inAddressBook:withDelegate:]


CNContactsWithIdentifiersPredicate : CNPredicate <CNSuggestedContactPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *identifiers

  // class methods
  +[CNContactsWithIdentifiersPredicate supportsSecureCoding]

  // instance methods
  -[CNContactsWithIdentifiersPredicate isEqual:]
  -[CNContactsWithIdentifiersPredicate encodeWithCoder:]
  -[CNContactsWithIdentifiersPredicate initWithCoder:]
  -[CNContactsWithIdentifiersPredicate .cxx_destruct]
  -[CNContactsWithIdentifiersPredicate identifiers]
  -[CNContactsWithIdentifiersPredicate initWithIdentifiers:]
  -[CNContactsWithIdentifiersPredicate cn_supportsNativeSorting]
  -[CNContactsWithIdentifiersPredicate suggestionsWithSortOrder:mutableObjects:service:error:]
  -[CNContactsWithIdentifiersPredicate internalIdentifiersForStoreWithIdentifier:]
  -[CNContactsWithIdentifiersPredicate contactsFromDonationStore:]


CNPostalAddress : NSObject /usr/lib/libSystem.B.dylib <CNObjectValidation, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *street
 @property  NSString *subLocality
 @property  NSString *city
 @property  NSString *subAdministrativeArea
 @property  NSString *state
 @property  NSString *postalCode
 @property  NSString *country
 @property  NSString *ISOCountryCode
 @property  NSString *formattedAddress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPostalAddress supportsSecureCoding]
  +[CNPostalAddress postalAddressWithDictionaryRepresentation:]
  +[CNPostalAddress localizedStringForKey:]
  +[CNPostalAddress postalAddressWithAddressBookDictionaryRepresentation:]

  // instance methods
  -[CNPostalAddress isEqual:]
  -[CNPostalAddress copyWithZone:]
  -[CNPostalAddress mutableCopyWithZone:]
  -[CNPostalAddress encodeWithCoder:]
  -[CNPostalAddress initWithCoder:]
  -[CNPostalAddress .cxx_destruct]
  -[CNPostalAddress dictionaryRepresentation]
  -[CNPostalAddress state]
  -[CNPostalAddress setState:]
  -[CNPostalAddress postalCode]
  -[CNPostalAddress city]
  -[CNPostalAddress country]
  -[CNPostalAddress street]
  -[CNPostalAddress subLocality]
  -[CNPostalAddress subAdministrativeArea]
  -[CNPostalAddress ISOCountryCode]
  -[CNPostalAddress isValid:]
  -[CNPostalAddress setCountry:]
  -[CNPostalAddress setCity:]
  -[CNPostalAddress setSubAdministrativeArea:]
  -[CNPostalAddress setSubLocality:]
  -[CNPostalAddress initWithPostalAddress:]
  -[CNPostalAddress setStreet:]
  -[CNPostalAddress setFormattedAddress:]
  -[CNPostalAddress setISOCountryCode:]
  -[CNPostalAddress setPostalCode:]
  -[CNPostalAddress formattedAddress]
  -[CNPostalAddress addressBookDictionaryRepresentation]


_CNContactMatchingFetchRequestInfos : NSObject /usr/lib/libSystem.B.dylib
 @property  NSPredicate *predicate
 @property  NSArray *properties

  // class methods
  +[_CNContactMatchingFetchRequestInfos fetchRequestInfoForPredicate:properties:]

  // instance methods
  -[_CNContactMatchingFetchRequestInfos .cxx_destruct]
  -[_CNContactMatchingFetchRequestInfos setPredicate:]
  -[_CNContactMatchingFetchRequestInfos predicate]
  -[_CNContactMatchingFetchRequestInfos properties]
  -[_CNContactMatchingFetchRequestInfos setProperties:]


CNErrorFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNErrorFactory errorWithCode:userInfo:]
  +[CNErrorFactory errorObject:doesNotImplementSelector:]
  +[CNErrorFactory validationErrorByAggregatingValidationErrors:]
  +[CNErrorFactory errorByPrependingKeyPath:toKeyPathsInError:]
  +[CNErrorFactory genericiOSABError]
  +[CNErrorFactory CNErrorCodeForABError:]
  +[CNErrorFactory errorForiOSABError:]
  +[CNErrorFactory errorWithCode:]
  +[CNErrorFactory errorByAddingUserInfoEntries:toError:]
  +[CNErrorFactory _localizedReasonForCode:]
  +[CNErrorFactory _localizedDescriptionForCode:]


CNFavoritesLookupChangeRecord : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[CNFavoritesLookupChangeRecord .cxx_destruct]


CNFavoritesEntry : NSObject /usr/lib/libSystem.B.dylib
 @property  CNContactStore *contactStore
 @property  NSString *label
 @property  NSString *value
 @property  NSString *propertyKey
 @property  NSString *abDatabaseUUID
 @property  NSString *actionType
 @property  NSString *bundleIdentifier
 @property  NSString *originalName
 @property  long long type
 @property  CNContact *contact
 @property  NSString *labeledValueIdentifier
 @property  int abUid
 @property  int abIdentifier
 @property  NSString *actionChannel
 @property  int oldAbUid
 @property  BOOL dirty
 @property  NSString *name
 @property  CNContactProperty *contactProperty

  // class methods
  +[CNFavoritesEntry initialize]
  +[CNFavoritesEntry contactFormatter]
  +[CNFavoritesEntry valueStringFromSocialProfile:]
  +[CNFavoritesEntry valueStringFromInstantMessageAddress:]
  +[CNFavoritesEntry socialProfileForFavoritesEntryValue:]
  +[CNFavoritesEntry instantMessageAddressForFavoritesEntryValue:]
  +[CNFavoritesEntry labeledValueValueForFavoritesEntryValue:propertyKey:]
  +[CNFavoritesEntry favoritesEntryValueForLabeledValueValue:propertyKey:]
  +[CNFavoritesEntry descriptorsForRequiredKeysForPropertyKey:]
  +[CNFavoritesEntry createLabeledValueForFavoritesEntryValue:label:iOSLegacyIdentifier:propertyKey:]
  +[CNFavoritesEntry favoritesEntryValueForLabeledValueValue:propertyKey:isEqualToValue:]

  // instance methods
  -[CNFavoritesEntry dealloc]
  -[CNFavoritesEntry isEqual:]
  -[CNFavoritesEntry name]
  -[CNFavoritesEntry setDirty:]
  -[CNFavoritesEntry type]
  -[CNFavoritesEntry setType:]
  -[CNFavoritesEntry .cxx_destruct]
  -[CNFavoritesEntry value]
  -[CNFavoritesEntry bundleIdentifier]
  -[CNFavoritesEntry setValue:]
  -[CNFavoritesEntry dictionaryRepresentation]
  -[CNFavoritesEntry setBundleIdentifier:]
  -[CNFavoritesEntry setLabel:]
  -[CNFavoritesEntry label]
  -[CNFavoritesEntry contact]
  -[CNFavoritesEntry setContact:]
  -[CNFavoritesEntry contactProperty]
  -[CNFavoritesEntry dirty]
  -[CNFavoritesEntry actionType]
  -[CNFavoritesEntry setActionType:]
  -[CNFavoritesEntry originalName]
  -[CNFavoritesEntry setOriginalName:]
  -[CNFavoritesEntry contactStore]
  -[CNFavoritesEntry setContactStore:]
  -[CNFavoritesEntry actionChannel]
  -[CNFavoritesEntry abDatabaseUUID]
  -[CNFavoritesEntry _initWithContact:propertyKey:labeledValueIdentifier:entryType:actionType:bundleIdentifier:store:]
  -[CNFavoritesEntry _convertFromEntryType:toActionType:bundleIdentifier:]
  -[CNFavoritesEntry _entryTypeForActionType:bundleIdentifier:]
  -[CNFavoritesEntry setPropertyKey:]
  -[CNFavoritesEntry setLabeledValueIdentifier:]
  -[CNFavoritesEntry setAbUid:]
  -[CNFavoritesEntry setOldAbUid:]
  -[CNFavoritesEntry setAbIdentifier:]
  -[CNFavoritesEntry setAbDatabaseUUID:]
  -[CNFavoritesEntry propertyKey]
  -[CNFavoritesEntry abUid]
  -[CNFavoritesEntry labeledValueIdentifier]
  -[CNFavoritesEntry abIdentifier]
  -[CNFavoritesEntry setActionChannel:]
  -[CNFavoritesEntry rematch]
  -[CNFavoritesEntry resetContactMatch]
  -[CNFavoritesEntry applyChangeRecord:]
  -[CNFavoritesEntry initWithContact:propertyKey:identifier:type:]
  -[CNFavoritesEntry initWithContact:propertyKey:identifier:type:store:]
  -[CNFavoritesEntry initWithContact:propertyKey:labeledValueIdentifier:actionType:bundleIdentifier:store:]
  -[CNFavoritesEntry initWithDictionaryRepresentation:store:]
  -[CNFavoritesEntry dictionaryRepresentation:isDirty:]
  -[CNFavoritesEntry rematchWithContacts]
  -[CNFavoritesEntry rematchWithGeminiManager:]
  -[CNFavoritesEntry oldAbUid]


CNMockContactsLogger : NSObject /usr/lib/libSystem.B.dylib <CNContactsLogger>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNMockContactsLogger tccAccessPreflightWasDenied]
  -[CNMockContactsLogger tccAccessRequestWasDenied]
  -[CNMockContactsLogger XPCConnectionWasInterrupted]
  -[CNMockContactsLogger XPCConnectionWasInvalidated]
  -[CNMockContactsLogger serviceError:]
  -[CNMockContactsLogger noAccessToContactsWithError:]
  -[CNMockContactsLogger didFetchContacts:error:]
  -[CNMockContactsLogger didFetchEncodedContacts:error:]
  -[CNMockContactsLogger fetchingContactsBatch:]
  -[CNMockContactsLogger fetchContactsMatchingPredicate:unifyResults:keysToFetch:]
  -[CNMockContactsLogger fetchEncodedContactsMatchingPredicate:unifyResults:keysToFetch:]
  -[CNMockContactsLogger saveRequestInvalid:]
  -[CNMockContactsLogger saveRequestFailed:]
  -[CNMockContactsLogger addingContacts:toContainerWithIdentifier:]
  -[CNMockContactsLogger deletingContact:]
  -[CNMockContactsLogger updatingContact:]
  -[CNMockContactsLogger fetchContactsProgressivelyMatchingPredicate:unifyResults:keysToFetch:]
  -[CNMockContactsLogger settingDefaultAccount:]
  -[CNMockContactsLogger resettingSortDataIfNeeded:]
  -[CNMockContactsLogger contactsAccessWasGranted:]
  -[CNMockContactsLogger requestingAccessForContacts:]
  -[CNMockContactsLogger fetchingMeContactIdentifier:]
  -[CNMockContactsLogger changedMeContact:]
  -[CNMockContactsLogger changingMeContact:]
  -[CNMockContactsLogger fetchingContactCount:]
  -[CNMockContactsLogger fetchingContactSectionCounts:]
  -[CNMockContactsLogger fetchingContacts:]
  -[CNMockContactsLogger fetchingGroups:]
  -[CNMockContactsLogger fetchingContainers:]
  -[CNMockContactsLogger saving:]
  -[CNMockContactsLogger fetchingDefaultContainerIdentifier:]
  -[CNMockContactsLogger fetchingContactWithUserActivity:]
  -[CNMockContactsLogger fetchingContactIdentifierWithMatchingDictionary:]
  -[CNMockContactsLogger registeringForChangeHistory:]
  -[CNMockContactsLogger unregisteringForChangeHistory:]
  -[CNMockContactsLogger fetchingChangeHistory:]
  -[CNMockContactsLogger clearingChangeHistory:]
  -[CNMockContactsLogger postingNotificationWithName:]
  -[CNMockContactsLogger postingNotification:]
  -[CNMockContactsLogger applyContactUpdateOfKind:value:property:]
  -[CNMockContactsLogger setContactImageData:]
  -[CNMockContactsLogger removeContactImageData]
  -[CNMockContactsLogger setContactImageData:format:cropRect:]
  -[CNMockContactsLogger setContactImageDataZeroCropRect:format:]
  -[CNMockContactsLogger servicingContactsRequest:]
  -[CNMockContactsLogger SPIUsageLackingEntitlementGrantedForPID:]
  -[CNMockContactsLogger SPIUsageLackingEntitlementRejectedForPID:]
  -[CNMockContactsLogger internalError:]
  -[CNMockContactsLogger errorWhenQueryingTetheredSyncData:]


CNFetchRequest : NSObject /usr/lib/libSystem.B.dylib

CNPolicy : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL readonly

  // instance methods
  -[CNPolicy isReadonly]
  -[CNPolicy maximumCountOfValuesForContactProperty:]
  -[CNPolicy supportedLabelsForContactProperty:]
  -[CNPolicy maximumCountOfValuesForContactProperty:label:]
  -[CNPolicy shouldSetValue:property:contact:replacementValue:]
  -[CNPolicy shouldAddContact:]
  -[CNPolicy shouldRemoveContact:]
  -[CNPolicy unsupportedAttributesForLableledContactProperty:]
  -[CNPolicy isContactPropertySupported:]
  -[CNPolicy _validateLabeledValueArrayLabels:forContactProperty:replacementValue:]
  -[CNPolicy _validateLabeledValueArrayAttributeSupport:forContactProperty:replacementValue:]
  -[CNPolicy _replacementLabeledValue:omittingKeys:]


CNiOSABGroupiOSLegacyIdentifierPredicate : CNPredicate <CNiOSGroupPredicate>
 @property  int iOSLegacyIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABGroupiOSLegacyIdentifierPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABGroupiOSLegacyIdentifierPredicate encodeWithCoder:]
  -[CNiOSABGroupiOSLegacyIdentifierPredicate initWithCoder:]
  -[CNiOSABGroupiOSLegacyIdentifierPredicate iOSLegacyIdentifier]
  -[CNiOSABGroupiOSLegacyIdentifierPredicate cn_copyGroupsInAddressBook:error:]
  -[CNiOSABGroupiOSLegacyIdentifierPredicate initWithiOSLegacyIdentifier:]


CNReputationResult : NSObject /usr/lib/libSystem.B.dylib
 @property  CNReputationHandle *handle
 @property  long long score

  // class methods
  +[CNReputationResult descriptionForScore:]

  // instance methods
  -[CNReputationResult isEqual:]
  -[CNReputationResult .cxx_destruct]
  -[CNReputationResult handle]
  -[CNReputationResult score]
  -[CNReputationResult initWithHandle:score:]


CNContactVCardSerialization : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNContactVCardSerialization descriptorForRequiredKeys]
  +[CNContactVCardSerialization contactsWithData:error:]
  +[CNContactVCardSerialization dataWithContacts:options:error:]
  +[CNContactVCardSerialization contactsWithData:options:error:]
  +[CNContactVCardSerialization dataWithContacts:error:]
  +[CNContactVCardSerialization descriptorForRequiredKeysWithOptions:description:]
  +[CNContactVCardSerialization dataWithContacts:options:error:environment:]
  +[CNContactVCardSerialization contactsWithData:scheduler:completionHandler:]
  +[CNContactVCardSerialization dataWithContacts:options:scheduler:completionHandler:]
  +[CNContactVCardSerialization summaryOfVCard:error:]
  +[CNContactVCardSerialization summaryOfLocationVCard:error:]
  +[CNContactVCardSerialization descriptorForRequiredKeysWithOptions:]
  +[CNContactVCardSerialization contactsWithData:completionHandler:]
  +[CNContactVCardSerialization dataWithContacts:options:completionHandler:]
  +[CNContactVCardSerialization contactsWithMECARDString:error:]


CNContainerUpdate : NSObject /usr/lib/libSystem.B.dylib <CNContainerUpdate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNContainerUpdate updateWithValue:property:]

  // instance methods
  -[CNContainerUpdate .cxx_destruct]
  -[CNContainerUpdate value]
  -[CNContainerUpdate property]
  -[CNContainerUpdate initWithProperty:value:]
  -[CNContainerUpdate applyToMutableContainer:]


CNChangeHistoryResultEnumerator : NSEnumerator /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  CNQueue *changes
 @property  CNQueue *batchFetchQueue
 @property  <CNEnumeratorRefillStrategy> *refillStrategy

  // class methods
  +[CNChangeHistoryResultEnumerator contactEnumeratorWithChanges:keysToFetch:unifyResults:contactStore:]
  +[CNChangeHistoryResultEnumerator groupEnumeratorWithChanges:contactStore:]

  // instance methods
  -[CNChangeHistoryResultEnumerator nextObject]
  -[CNChangeHistoryResultEnumerator .cxx_destruct]
  -[CNChangeHistoryResultEnumerator changes]
  -[CNChangeHistoryResultEnumerator initWithChanges:refillStrategy:]
  -[CNChangeHistoryResultEnumerator _fetchNextBatch]
  -[CNChangeHistoryResultEnumerator batchFetchQueue]
  -[CNChangeHistoryResultEnumerator refillStrategy]


_CNChangeHistoryContactRefillStrategy : NSObject /usr/lib/libSystem.B.dylib <CNEnumeratorRefillStrategy>
 @property  NSArray *keys
 @property  BOOL unifyResults
 @property  CNContactStore *contactStore

  // instance methods
  -[_CNChangeHistoryContactRefillStrategy .cxx_destruct]
  -[_CNChangeHistoryContactRefillStrategy keys]
  -[_CNChangeHistoryContactRefillStrategy contactStore]
  -[_CNChangeHistoryContactRefillStrategy unifyResults]
  -[_CNChangeHistoryContactRefillStrategy initWithKeysToFetch:unifyResults:contactStore:]
  -[_CNChangeHistoryContactRefillStrategy batchesToRepresentObjects:suggestedBatchSize:]
  -[_CNChangeHistoryContactRefillStrategy objectsRepresentedByBatch:]
  -[_CNChangeHistoryContactRefillStrategy fetchContactsWithIdentifiers:]
  -[_CNChangeHistoryContactRefillStrategy updateChanges:withFetchedContacts:]


_CNChangeHistoryGroupRefillStrategy : NSObject /usr/lib/libSystem.B.dylib <CNEnumeratorRefillStrategy>
 @property  CNContactStore *contactStore

  // instance methods
  -[_CNChangeHistoryGroupRefillStrategy .cxx_destruct]
  -[_CNChangeHistoryGroupRefillStrategy initWithContactStore:]
  -[_CNChangeHistoryGroupRefillStrategy contactStore]
  -[_CNChangeHistoryGroupRefillStrategy batchesToRepresentObjects:suggestedBatchSize:]
  -[_CNChangeHistoryGroupRefillStrategy objectsRepresentedByBatch:]
  -[_CNChangeHistoryGroupRefillStrategy fetchGroupsWithIdentifiers:]
  -[_CNChangeHistoryGroupRefillStrategy updateChanges:withFetchedGroups:]


CNMultiValueReplaceUpdate : CNMultiValueSingleUpdate
  // instance methods
  -[CNMultiValueReplaceUpdate applyToMutableMultiValue:withIdentifierMap:]
  -[CNMultiValueReplaceUpdate applyToABPerson:abmultivalue:propertyDescription:logger:error:]


CNChangeHistoryAnchor : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSData *data
 @property  long long sequenceNumber

  // class methods
  +[CNChangeHistoryAnchor supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryAnchor copyWithZone:]
  -[CNChangeHistoryAnchor compare:]
  -[CNChangeHistoryAnchor encodeWithCoder:]
  -[CNChangeHistoryAnchor initWithCoder:]
  -[CNChangeHistoryAnchor data]
  -[CNChangeHistoryAnchor sequenceNumber]
  -[CNChangeHistoryAnchor initWithData:error:]
  -[CNChangeHistoryAnchor initWithSequenceNumber:]


CNDonationMapper : NSObject /usr/lib/libSystem.B.dylib <CNDataMapper>
 @property  CNContactsEnvironment *environment
 @property  CNDonationStore *donationStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *legacyTetheredSyncDeviceAnchor
 @property  NSString *legacyTetheredSyncComputerAnchor

  // class methods
  +[CNDonationMapper log]
  +[CNDonationMapper mapperIdentifier]

  // instance methods
  -[CNDonationMapper .cxx_destruct]
  -[CNDonationMapper environment]
  -[CNDonationMapper meContactIdentifiers:]
  -[CNDonationMapper groupsMatchingPredicate:error:]
  -[CNDonationMapper subgroupsOfGroupWithIdentifier:error:]
  -[CNDonationMapper containersMatchingPredicate:error:]
  -[CNDonationMapper serverSearchContainersMatchingPredicate:error:]
  -[CNDonationMapper defaultContainerIdentifier]
  -[CNDonationMapper policyForContainerWithIdentifier:error:]
  -[CNDonationMapper accountsMatchingPredicate:error:]
  -[CNDonationMapper executeSaveRequest:error:]
  -[CNDonationMapper initWithContactsEnvironment:managedConfiguration:]
  -[CNDonationMapper requestAccessForEntityType:completionHandler:]
  -[CNDonationMapper requestAccessForEntityType:error:]
  -[CNDonationMapper executeSaveRequest:response:authorizationContext:error:]
  -[CNDonationMapper authorizedKeysForContactKeys:error:]
  -[CNDonationMapper contactObservableForFetchRequest:]
  -[CNDonationMapper initWithDonationStore:environment:]
  -[CNDonationMapper donationStore]


CNSafeChangeHistoryEventVisitorWrapper : NSObject /usr/lib/libSystem.B.dylib <CNChangeHistoryEventVisitorPrivate>
 @property  <CNChangeHistoryEventVisitor> *visitor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNSafeChangeHistoryEventVisitorWrapper .cxx_destruct]
  -[CNSafeChangeHistoryEventVisitorWrapper visitDropEverythingEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitAddContactEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitUpdateContactEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitDeleteContactEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitAddGroupEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitUpdateGroupEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitDeleteGroupEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitAddMemberToGroupEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitRemoveMemberFromGroupEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitAddSubgroupToGroupEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitRemoveSubgroupFromGroupEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper initWithChangeHistoryEventVisitor:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitLinkContactsEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitUnlinkContactEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitPreferredContactForNameEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitPreferredContactForImageEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitDifferentMeCardEvent:]
  -[CNSafeChangeHistoryEventVisitorWrapper visitor]


CNiOSABGroupIdentifiersPredicate : CNPredicate <CNiOSGroupPredicate>
 @property  NSArray *identifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABGroupIdentifiersPredicate supportsSecureCoding]
  +[CNiOSABGroupIdentifiersPredicate descriptionOfIdentifiers:]

  // instance methods
  -[CNiOSABGroupIdentifiersPredicate encodeWithCoder:]
  -[CNiOSABGroupIdentifiersPredicate initWithCoder:]
  -[CNiOSABGroupIdentifiersPredicate .cxx_destruct]
  -[CNiOSABGroupIdentifiersPredicate identifiers]
  -[CNiOSABGroupIdentifiersPredicate initWithIdentifiers:]
  -[CNiOSABGroupIdentifiersPredicate cn_copyGroupsInAddressBook:error:]


CNiOSABLocalContainerPredicate : CNPredicate <CNiOSContainerPredicate>
 @property  BOOL includesDisabledContainer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABLocalContainerPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABLocalContainerPredicate init]
  -[CNiOSABLocalContainerPredicate encodeWithCoder:]
  -[CNiOSABLocalContainerPredicate initWithCoder:]
  -[CNiOSABLocalContainerPredicate initWithPredicate:]
  -[CNiOSABLocalContainerPredicate cn_copyContainersInAddressBook:error:]
  -[CNiOSABLocalContainerPredicate includesDisabledContainers]
  -[CNiOSABLocalContainerPredicate initWithDisabledContainerIncluded:]
  -[CNiOSABLocalContainerPredicate includesDisabledContainer]


CNCountryInformation : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *isoCountryCode
 @property  NSString *name
 @property  NSString *phoneticName

  // instance methods
  -[CNCountryInformation isEqual:]
  -[CNCountryInformation name]
  -[CNCountryInformation copyWithZone:]
  -[CNCountryInformation .cxx_destruct]
  -[CNCountryInformation isoCountryCode]
  -[CNCountryInformation phoneticName]
  -[CNCountryInformation initWithISOCountryCode:name:phoneticName:]


CNMockGeminiLogger : NSObject /usr/lib/libSystem.B.dylib <CNGeminiLogger>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNMockGeminiLogger updatingSubscriptionInfo:]
  -[CNMockGeminiLogger fetchingBestResultForDestinationHandle:]
  -[CNMockGeminiLogger recordedInteraction:forContext:]
  -[CNMockGeminiLogger recordInteractionError:]
  -[CNMockGeminiLogger registeredForContextUpdatesWithToken:]
  -[CNMockGeminiLogger unregisteredForContextUpdatesWithToken:]
  -[CNMockGeminiLogger updatedSubscriptionInfo:]
  -[CNMockGeminiLogger updateSubscriptionInfoError:]
  -[CNMockGeminiLogger fetchedSortedResults:forInteraction:]
  -[CNMockGeminiLogger fetchSortedResultsForInteraction:error:]
  -[CNMockGeminiLogger fetchedBestResult:forInteraction:]
  -[CNMockGeminiLogger fetchBestResultForInteraction:error:]


CNiOSABContactIdentifiersPredicate : CNContactsWithIdentifiersPredicate <CNiOSContactPredicate>
 @property  BOOL ignoreUnifiedIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNiOSABContactIdentifiersPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABContactIdentifiersPredicate cn_supportsNativeSorting]
  -[CNiOSABContactIdentifiersPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABContactIdentifiersPredicate cn_supportsEncodedFetching]
  -[CNiOSABContactIdentifiersPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABContactIdentifiersPredicate initWithIdentifiers:ignoreUnifiedIdentifiers:]
  -[CNiOSABContactIdentifiersPredicate ignoreUnifiedIdentifiers]


CNContactMultiValueDiffUpdate : CNContactUpdate
 @property  CNMultiValuePropertyDescription *property
 @property  CNMultiValueDiff *diff

  // instance methods
  -[CNContactMultiValueDiffUpdate .cxx_destruct]
  -[CNContactMultiValueDiffUpdate property]
  -[CNContactMultiValueDiffUpdate diff]
  -[CNContactMultiValueDiffUpdate applyToABPerson:withPropertiesContext:logger:error:]
  -[CNContactMultiValueDiffUpdate initWithProperty:diff:]
  -[CNContactMultiValueDiffUpdate applyToMutableContact:withIdentifierMap:]


_CNContactsLogger : NSObject /usr/lib/libSystem.B.dylib <CNContactsLogger>
 @property  NSObject<OS_os_log> *log
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_CNContactsLogger init]
  -[_CNContactsLogger .cxx_destruct]
  -[_CNContactsLogger log]
  -[_CNContactsLogger tccAccessPreflightWasDenied]
  -[_CNContactsLogger tccAccessRequestWasDenied]
  -[_CNContactsLogger XPCConnectionWasInterrupted]
  -[_CNContactsLogger XPCConnectionWasInvalidated]
  -[_CNContactsLogger serviceError:]
  -[_CNContactsLogger noAccessToContactsWithError:]
  -[_CNContactsLogger didFetchContacts:error:]
  -[_CNContactsLogger didFetchEncodedContacts:error:]
  -[_CNContactsLogger fetchingContactsBatch:]
  -[_CNContactsLogger fetchContactsMatchingPredicate:unifyResults:keysToFetch:]
  -[_CNContactsLogger fetchEncodedContactsMatchingPredicate:unifyResults:keysToFetch:]
  -[_CNContactsLogger saveRequestInvalid:]
  -[_CNContactsLogger saveRequestFailed:]
  -[_CNContactsLogger addingContacts:toContainerWithIdentifier:]
  -[_CNContactsLogger deletingContact:]
  -[_CNContactsLogger deleteImageRecentsMetadataRequestFailed:]
  -[_CNContactsLogger updatingContact:]
  -[_CNContactsLogger fetchContactsProgressivelyMatchingPredicate:unifyResults:keysToFetch:]
  -[_CNContactsLogger settingDefaultAccount:]
  -[_CNContactsLogger resettingSortDataIfNeeded:]
  -[_CNContactsLogger contactsAccessWasGranted:]
  -[_CNContactsLogger requestingAccessForContacts:]
  -[_CNContactsLogger fetchingMeContactIdentifier:]
  -[_CNContactsLogger changedMeContact:]
  -[_CNContactsLogger changingMeContact:]
  -[_CNContactsLogger fetchingContactCount:]
  -[_CNContactsLogger fetchingContactSectionCounts:]
  -[_CNContactsLogger fetchingContacts:]
  -[_CNContactsLogger fetchingGroups:]
  -[_CNContactsLogger fetchingContainers:]
  -[_CNContactsLogger saving:]
  -[_CNContactsLogger fetchingDefaultContainerIdentifier:]
  -[_CNContactsLogger fetchingContactWithUserActivity:]
  -[_CNContactsLogger fetchingContactIdentifierWithMatchingDictionary:]
  -[_CNContactsLogger registeringForChangeHistory:]
  -[_CNContactsLogger unregisteringForChangeHistory:]
  -[_CNContactsLogger fetchingChangeHistory:]
  -[_CNContactsLogger clearingChangeHistory:]
  -[_CNContactsLogger postingNotificationWithName:]
  -[_CNContactsLogger postingNotification:]
  -[_CNContactsLogger applyContactUpdateOfKind:value:property:]
  -[_CNContactsLogger setContactImageData:]
  -[_CNContactsLogger removeContactImageData]
  -[_CNContactsLogger setContactImageData:format:cropRect:]
  -[_CNContactsLogger setContactImageDataZeroCropRect:format:]
  -[_CNContactsLogger servicingContactsRequest:]
  -[_CNContactsLogger SPIUsageLackingEntitlementGrantedForPID:]
  -[_CNContactsLogger SPIUsageLackingEntitlementRejectedForPID:]
  -[_CNContactsLogger internalError:]
  -[_CNContactsLogger errorWhenQueryingTetheredSyncData:]
  -[_CNContactsLogger _commonFetchContactsMatchingPredicate:fetchType:unifyResults:keysToFetch:]


CNContainerCache : NSObject /usr/lib/libSystem.B.dylib
 @property  CNContainer *primaryiCloudContainer
 @property  CNContactStore *contactStore
 @property  ACAccountStore *accountStore
 @property  CNCache *cachedAccounts
 @property  NSObject<OS_dispatch_queue> *workQueue

  // class methods
  +[CNContainerCache os_log]

  // instance methods
  -[CNContainerCache dealloc]
  -[CNContainerCache .cxx_destruct]
  -[CNContainerCache workQueue]
  -[CNContainerCache setWorkQueue:]
  -[CNContainerCache setAccountStore:]
  -[CNContainerCache accountStore]
  -[CNContainerCache initWithContactStore:]
  -[CNContainerCache contactStore]
  -[CNContainerCache setContactStore:]
  -[CNContainerCache primaryiCloudContainer]
  -[CNContainerCache accountStoreDidChange]
  -[CNContainerCache contactStoreDidChange]
  -[CNContainerCache resetAccountCache]
  -[CNContainerCache resetPrimaryiCloudContainer]
  -[CNContainerCache onWorkQueue_findPrimaryiCloudContainer]
  -[CNContainerCache accountForContainer:]
  -[CNContainerCache cachedAccounts]
  -[CNContainerCache cnAccountForContainer:]
  -[CNContainerCache setCachedAccounts:]
  -[CNContainerCache setPrimaryiCloudContainer:]


CNPhoneNumber : NSObject /usr/lib/libSystem.B.dylib <CNObjectValidation, NSCopying, NSSecureCoding>
 @property  NSString *initialCountryCode
 @property  NSString *countryCode
 @property  NSString *digits
 @property  NSString *formattedStringValue
 @property  NSString *formattedInternationalStringValue
 @property  NSString *unformattedInternationalStringValue
 @property  NSString *stringValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNPhoneNumber new]
  +[CNPhoneNumber supportsSecureCoding]
  +[CNPhoneNumber phoneNumberWithStringValue:]
  +[CNPhoneNumber phoneNumberWithDigits:countryCode:]
  +[CNPhoneNumber phoneNumberWithCopiedStringValue:]
  +[CNPhoneNumber defaultCountryCode]
  +[CNPhoneNumber createCFPhoneNumberForStringValue:countryCode:]
  +[CNPhoneNumber _isCountryCodeForNorthAmericanDialingPlan:]
  +[CNPhoneNumber _countryCodeForNorthAmericanDialingPlanAreaCodesExcludingUS]
  +[CNPhoneNumber _countryCodesForNorthAmericanDialingPlan]
  +[CNPhoneNumber unsupportedCountryCodes]
  +[CNPhoneNumber dialingCodeForISOCountryCode:]

  // instance methods
  -[CNPhoneNumber init]
  -[CNPhoneNumber dealloc]
  -[CNPhoneNumber isEqual:]
  -[CNPhoneNumber copyWithZone:]
  -[CNPhoneNumber encodeWithCoder:]
  -[CNPhoneNumber initWithCoder:]
  -[CNPhoneNumber stringValue]
  -[CNPhoneNumber .cxx_destruct]
  -[CNPhoneNumber countryCode]
  -[CNPhoneNumber unformattedInternationalStringValue]
  -[CNPhoneNumber digits]
  -[CNPhoneNumber isValid:]
  -[CNPhoneNumber initWithStringValue:]
  -[CNPhoneNumber isLikePhoneNumberForSamePerson:]
  -[CNPhoneNumber formattedStringValue]
  -[CNPhoneNumber primitiveInitWithStringValue:countryCode:]
  -[CNPhoneNumber initWithStringValue:countryCode:]
  -[CNPhoneNumber initialCountryCode]
  -[CNPhoneNumber isLikePhoneNumber:]
  -[CNPhoneNumber phoneNumberRef]
  -[CNPhoneNumber nts_lazyPhoneNumberRef]
  -[CNPhoneNumber stringValueWithCFPhoneNumberOptions:]
  -[CNPhoneNumber _countryCodeFromPhoneNumberRef]
  -[CNPhoneNumber _determineCorrectCountryCodeForNorthAmericanDialingPlan]
  -[CNPhoneNumber fullyQualifiedDigits]
  -[CNPhoneNumber lastFourDigits]
  -[CNPhoneNumber formattedInternationalStringValue]
  -[CNPhoneNumber isFullyQualified]
  -[CNPhoneNumber digitsRemovingDialingCode]
  -[CNPhoneNumber formattedStringValueRemovingDialingCode]


CNCFPhoneNumber : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNCFPhoneNumber makeProxy]

  // instance methods
  -[CNCFPhoneNumber create::]


CNiOSABConstantsMapping : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *mapping
 @property  id defaultConstant

  // class methods
  +[CNiOSABConstantsMapping CNToABSourceTypeConstantsMapping]
  +[CNiOSABConstantsMapping ABToCNContainerTypeConstantsMapping]
  +[CNiOSABConstantsMapping ABtoCNContactDisplayNameOrderConstantsMapping]
  +[CNiOSABConstantsMapping CNToABCompositeNameFormatConstantsMapping]
  +[CNiOSABConstantsMapping ABToCNContactSortOrderConstantsMapping]
  +[CNiOSABConstantsMapping CNToABPersonShortNameFormatConstantsMapping]
  +[CNiOSABConstantsMapping ABToCNContactShortNameFormatConstantsMapping]
  +[CNiOSABConstantsMapping ABToCNLabelConstantsMapping]
  +[CNiOSABConstantsMapping CNToABLabelConstantsMapping]
  +[CNiOSABConstantsMapping ABToCNPersonInstantMessageConstantsMapping]
  +[CNiOSABConstantsMapping CNToABPersonInstantMessageConstantsMapping]
  +[CNiOSABConstantsMapping ABToCNPersonSocialProfileConstantsMapping]
  +[CNiOSABConstantsMapping CNToABPersonSocialProfileConstantsMapping]
  +[CNiOSABConstantsMapping CNToABPersonSortOrderingConstantsMapping]
  +[CNiOSABConstantsMapping ABToCNPersonKindConstantsMapping]
  +[CNiOSABConstantsMapping ABToCNPersonAddressConstantsMapping]
  +[CNiOSABConstantsMapping CNToABPersonKindConstantsMapping]
  +[CNiOSABConstantsMapping CNToABPersonAddressConstantsMapping]

  // instance methods
  -[CNiOSABConstantsMapping .cxx_destruct]
  -[CNiOSABConstantsMapping mapping]
  -[CNiOSABConstantsMapping mappedConstant:]
  -[CNiOSABConstantsMapping initWithMapping:]
  -[CNiOSABConstantsMapping invertedMapping]
  -[CNiOSABConstantsMapping setMapping:]
  -[CNiOSABConstantsMapping setDefaultConstant:]
  -[CNiOSABConstantsMapping defaultConstant]


CNiOSABGroupNameMatchingPredicate : CNPredicate <CNiOSGroupPredicate>
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABGroupNameMatchingPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABGroupNameMatchingPredicate name]
  -[CNiOSABGroupNameMatchingPredicate encodeWithCoder:]
  -[CNiOSABGroupNameMatchingPredicate initWithCoder:]
  -[CNiOSABGroupNameMatchingPredicate .cxx_destruct]
  -[CNiOSABGroupNameMatchingPredicate initWithName:]
  -[CNiOSABGroupNameMatchingPredicate cn_copyGroupsInAddressBook:error:]


CNiOSABMapDataContactPredicate : CNPredicate <CNiOSContactPredicate>
 @property  NSString *mapString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABMapDataContactPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABMapDataContactPredicate encodeWithCoder:]
  -[CNiOSABMapDataContactPredicate initWithCoder:]
  -[CNiOSABMapDataContactPredicate .cxx_destruct]
  -[CNiOSABMapDataContactPredicate initWithString:]
  -[CNiOSABMapDataContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABMapDataContactPredicate cn_supportsNativeSorting]
  -[CNiOSABMapDataContactPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABMapDataContactPredicate cn_supportsEncodedFetching]
  -[CNiOSABMapDataContactPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABMapDataContactPredicate mapString]


CNiOSABEKParticipantPredicate : CNPredicate <CNiOSContactPredicate>
 @property  NSString *name
 @property  NSURL *URL
 @property  NSString *emailAddress
 @property  NSString *customDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABEKParticipantPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABEKParticipantPredicate name]
  -[CNiOSABEKParticipantPredicate encodeWithCoder:]
  -[CNiOSABEKParticipantPredicate initWithCoder:]
  -[CNiOSABEKParticipantPredicate .cxx_destruct]
  -[CNiOSABEKParticipantPredicate setName:]
  -[CNiOSABEKParticipantPredicate setURL:]
  -[CNiOSABEKParticipantPredicate URL]
  -[CNiOSABEKParticipantPredicate emailAddress]
  -[CNiOSABEKParticipantPredicate setEmailAddress:]
  -[CNiOSABEKParticipantPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABEKParticipantPredicate cn_supportsNativeSorting]
  -[CNiOSABEKParticipantPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABEKParticipantPredicate cn_supportsEncodedFetching]
  -[CNiOSABEKParticipantPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABEKParticipantPredicate initWithName:URL:emailAddress:customDescription:]
  -[CNiOSABEKParticipantPredicate customDescription]
  -[CNiOSABEKParticipantPredicate setCustomDescription:]


CNiOSABEKParticipantMatchingSearchOperationDelegate : NSObject /usr/lib/libSystem.B.dylib <ABPredicateDelegate>
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNiOSABEKParticipantMatchingSearchOperationDelegate .cxx_destruct]
  -[CNiOSABEKParticipantMatchingSearchOperationDelegate completionHandler]
  -[CNiOSABEKParticipantMatchingSearchOperationDelegate setCompletionHandler:]
  -[CNiOSABEKParticipantMatchingSearchOperationDelegate predicateShouldContinue:afterFindingRecord:]
  -[CNiOSABEKParticipantMatchingSearchOperationDelegate predicateShouldContinue:]


CNMultiValueReorderUpdate : CNMultiValueUpdate
 @property  NSOrderedSet *values

  // instance methods
  -[CNMultiValueReorderUpdate values]
  -[CNMultiValueReorderUpdate .cxx_destruct]
  -[CNMultiValueReorderUpdate initWithValues:]
  -[CNMultiValueReorderUpdate applyToMutableMultiValue:withIdentifierMap:]
  -[CNMultiValueReorderUpdate applyToABPerson:abmultivalue:propertyDescription:logger:error:]
  -[CNMultiValueReorderUpdate compareIndexOfIdentifier:toIndexOfIdentifier:]


CNSaveRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *storeIdentifier
 @property  NSArray *allGroupIdentifiers
 @property  NSArray *allContactIdentifiers
 @property  NSArray *allContacts
 @property  NSArray *allGroups
 @property  NSArray *allContainers
 @property  NSArray *allAccountIdentifierStrings
 @property  NSArray *contactChangeRequests
 @property  BOOL unsafeApplyChangesOnly
 @property  NSArray *addedAccounts
 @property  NSArray *removedAccounts
 @property  NSDictionary *defaultAccountContainersByAccountIdentifier
 @property  NSString *saveRequestIdentifier
 @property  NSDictionary *addedContactsByContainerIdentifier
 @property  NSArray *updatedContacts
 @property  NSArray *deletedContacts
 @property  NSDictionary *deletedContactsByIdentifier
 @property  NSString *meCardIdentifier
 @property  NSDictionary *addedGroupsByContainerIdentifier
 @property  NSArray *updatedGroups
 @property  NSArray *deletedGroups
 @property  NSDictionary *addedMembersByGroupIdentifier
 @property  NSDictionary *removedMembersByGroupIdentifier
 @property  NSDictionary *addedSubgroupsByGroupIdentifier
 @property  NSDictionary *removedSubgroupsByGroupIdentifier
 @property  NSDictionary *addedContainersByParentContainerIdentifier
 @property  NSDictionary *addedAccountContainersByParentContainerIdentifier
 @property  NSArray *deletedContainers
 @property  NSArray *updatedContainers
 @property  NSDictionary *movedContainersByParentContainerIdentifier
 @property  BOOL ignoresGuardianRestrictions
 @property  BOOL ignoresParentalRestrictions
 @property  NSString *changeHistoryClientIdentifier

  // class methods
  +[CNSaveRequest supportsSecureCoding]

  // instance methods
  -[CNSaveRequest init]
  -[CNSaveRequest encodeWithCoder:]
  -[CNSaveRequest initWithCoder:]
  -[CNSaveRequest .cxx_destruct]
  -[CNSaveRequest allGroups]
  -[CNSaveRequest allContainers]
  -[CNSaveRequest storeIdentifier]
  -[CNSaveRequest addAccount:]
  -[CNSaveRequest removeAccount:]
  -[CNSaveRequest saveRequestIdentifier]
  -[CNSaveRequest updateContact:]
  -[CNSaveRequest allAccountIdentifiers]
  -[CNSaveRequest allContacts]
  -[CNSaveRequest contactChangeRequests]
  -[CNSaveRequest addedContactsByContainerIdentifier]
  -[CNSaveRequest updatedContacts]
  -[CNSaveRequest deletedContacts]
  -[CNSaveRequest addedAccounts]
  -[CNSaveRequest addedAccountContainersByParentContainerIdentifier]
  -[CNSaveRequest addedMembersByGroupIdentifier]
  -[CNSaveRequest addedSubgroupsByGroupIdentifier]
  -[CNSaveRequest addedGroupsByContainerIdentifier]
  -[CNSaveRequest groupWithAddedSubgroupForGroupIdentifier:]
  -[CNSaveRequest ignoresGuardianRestrictions]
  -[CNSaveRequest changeHistoryClientIdentifier]
  -[CNSaveRequest allContainerIdentifierStrings:]
  -[CNSaveRequest allContactIdentifiers]
  -[CNSaveRequest allGroupIdentifiers]
  -[CNSaveRequest removedAccounts]
  -[CNSaveRequest defaultAccountContainersByAccountIdentifier]
  -[CNSaveRequest updatedContainers]
  -[CNSaveRequest deletedContactsByIdentifier]
  -[CNSaveRequest deletedGroups]
  -[CNSaveRequest updatedGroups]
  -[CNSaveRequest groupWithAddedMemberForGroupIdentifier:]
  -[CNSaveRequest removedMembersByGroupIdentifier]
  -[CNSaveRequest groupWithRemovedMemberForGroupIdentifier:]
  -[CNSaveRequest removedSubgroupsByGroupIdentifier]
  -[CNSaveRequest groupWithRemovedSubgroupForGroupIdentifier:]
  -[CNSaveRequest deleteGroup:]
  -[CNSaveRequest addMember:toGroup:]
  -[CNSaveRequest meCardIdentifier]
  -[CNSaveRequest deletedContainers]
  -[CNSaveRequest addedContainersByParentContainerIdentifier]
  -[CNSaveRequest queueUpdatedObject:intoArray:]
  -[CNSaveRequest _insertContact:intoDictionary:complementDictionary:]
  -[CNSaveRequest flattenedDictionaryForDictionaryOfTuples:]
  -[CNSaveRequest _dictionaryOfArraysFromDictionaryOfDictionaries:]
  -[CNSaveRequest allContainerIdentifiers:]
  -[CNSaveRequest setIgnoresGuardianRestrictions:]
  -[CNSaveRequest addContact:toContainerWithIdentifier:]
  -[CNSaveRequest deleteContact:]
  -[CNSaveRequest setMeCardIdentifier:]
  -[CNSaveRequest addGroup:toContainerWithIdentifier:]
  -[CNSaveRequest updateGroup:]
  -[CNSaveRequest removeMember:fromGroup:]
  -[CNSaveRequest addSubgroup:toGroup:]
  -[CNSaveRequest removeSubgroup:fromGroup:]
  -[CNSaveRequest movedContainersByParentContainerIdentifier]
  -[CNSaveRequest addContainer:toContainerWithIdentifier:]
  -[CNSaveRequest addContainer:toAccountWithIdentifier:]
  -[CNSaveRequest setContainer:asDefaultContainerOfAccountWithIdentifier:]
  -[CNSaveRequest moveContainer:toContainerWithIdentifier:]
  -[CNSaveRequest deleteContainer:]
  -[CNSaveRequest updateContainer:]
  -[CNSaveRequest linkContact:toContact:]
  -[CNSaveRequest unlinkContact:]
  -[CNSaveRequest preferLinkedContactForName:inUnifiedContact:]
  -[CNSaveRequest preferLinkedContactForImage:inUnifiedContact:]
  -[CNSaveRequest allAccountIdentifierStrings]
  -[CNSaveRequest ignoresParentalRestrictions]
  -[CNSaveRequest setIgnoresParentalRestrictions:]
  -[CNSaveRequest unsafeApplyChangesOnly]
  -[CNSaveRequest setUnsafeApplyChangesOnly:]
  -[CNSaveRequest setChangeHistoryClientIdentifier:]
  -[CNSaveRequest setLinkIdentifier:forContact:]


CNiOSABPreferredNameContactsPredicate : CNPredicate <CNiOSContactPredicate>
 @property  {_NSRange=QQ} range
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABPreferredNameContactsPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABPreferredNameContactsPredicate encodeWithCoder:]
  -[CNiOSABPreferredNameContactsPredicate initWithCoder:]
  -[CNiOSABPreferredNameContactsPredicate range]
  -[CNiOSABPreferredNameContactsPredicate initWithRange:]
  -[CNiOSABPreferredNameContactsPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABPreferredNameContactsPredicate cn_supportsNativeSorting]
  -[CNiOSABPreferredNameContactsPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABPreferredNameContactsPredicate cn_supportsEncodedFetching]
  -[CNiOSABPreferredNameContactsPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]


CNCDAllContainersPredicate : CNPredicate <CNCDContainerPredicate>
 @property  BOOL includeDisabledContainers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CNCDAllContainersPredicate encodeWithCoder:]
  -[CNCDAllContainersPredicate initWithCoder:]
  -[CNCDAllContainersPredicate cn_coreDataPredicate]
  -[CNCDAllContainersPredicate cn_topLevelFilter]
  -[CNCDAllContainersPredicate cn_persistenceFilterRequest]
  -[CNCDAllContainersPredicate initWithIncludeDisabledContainers:]
  -[CNCDAllContainersPredicate includeDisabledContainers]
  -[CNCDAllContainersPredicate setIncludeDisabledContainers:]


CNiOSABPhoneNumberContactPredicate : CNPhoneNumberContactPredicate <CNiOSContactPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABPhoneNumberContactPredicate stringValueForPredicate:]
  +[CNiOSABPhoneNumberContactPredicate countryCodeForPredicate:]

  // instance methods
  -[CNiOSABPhoneNumberContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABPhoneNumberContactPredicate cn_supportsNativeSorting]
  -[CNiOSABPhoneNumberContactPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABPhoneNumberContactPredicate cn_supportsEncodedFetching]
  -[CNiOSABPhoneNumberContactPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]


CNPredicateValidator : NSObject /usr/lib/libSystem.B.dylib <NSPredicateVisitor>
 @property  NSSet *allowedKeysSet
 @property  NSMutableSet *usedKeysSet
 @property  BOOL validated
 @property  NSError *error
 @property  NSPredicate *predicate
 @property  NSArray *allowedKeys
 @property  NSArray *usedKeys

  // instance methods
  -[CNPredicateValidator .cxx_destruct]
  -[CNPredicateValidator error]
  -[CNPredicateValidator setPredicate:]
  -[CNPredicateValidator predicate]
  -[CNPredicateValidator setError:]
  -[CNPredicateValidator visitPredicate:]
  -[CNPredicateValidator visitPredicateExpression:]
  -[CNPredicateValidator visitPredicateOperator:]
  -[CNPredicateValidator setValidated:]
  -[CNPredicateValidator allowedKeys]
  -[CNPredicateValidator validated]
  -[CNPredicateValidator setAllowedKeysSet:]
  -[CNPredicateValidator allowedKeysSet]
  -[CNPredicateValidator setUsedKeysSet:]
  -[CNPredicateValidator validateWithError:]
  -[CNPredicateValidator setAllowedKeys:]
  -[CNPredicateValidator usedKeys]
  -[CNPredicateValidator resetUsedKeys]
  -[CNPredicateValidator usedKeysSet]


_CNRegulatoryLogger : NSObject /usr/lib/libSystem.B.dylib <CNRegulatoryLogger>
 @property  ^{ct_green_tea_logger_s=} log
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_CNRegulatoryLogger init]
  -[_CNRegulatoryLogger dealloc]
  -[_CNRegulatoryLogger log]
  -[_CNRegulatoryLogger readingContactsData]
  -[_CNRegulatoryLogger modifyingContactsData]
  -[_CNRegulatoryLogger readAndTransmittingContactsData]


CNSyncImageResult : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long type
 @property  NSData *imageData
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  NSData *imageHash

  // instance methods
  -[CNSyncImageResult type]
  -[CNSyncImageResult .cxx_destruct]
  -[CNSyncImageResult imageData]
  -[CNSyncImageResult imageHash]
  -[CNSyncImageResult cropRect]
  -[CNSyncImageResult initWithType:imageData:cropRect:imageHash:]


CNAddressFormats : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNAddressFormats addressFormats]
  +[CNAddressFormats addressFormatForCountryCode:]
  +[CNAddressFormats supportedCountries]
  +[CNAddressFormats makeSupportedCountries]
  +[CNAddressFormats defaultKeyboardSettingsDictionary]
  +[CNAddressFormats countryCodeByLocaleLookup]
  +[CNAddressFormats countryCodeByGlobalDefaultsLookup]
  +[CNAddressFormats fallbackCountryCode]
  +[CNAddressFormats usaStateNames]
  +[CNAddressFormats usaStateAbbreviations]


CNDowntimeWhitelist : NSObject /usr/lib/libSystem.B.dylib
 @property  CNContactStore *store
 @property  <NSObject> *contactStoreDidChangeNotificationToken

  // class methods
  +[CNDowntimeWhitelist os_log]

  // instance methods
  -[CNDowntimeWhitelist init]
  -[CNDowntimeWhitelist dealloc]
  -[CNDowntimeWhitelist .cxx_destruct]
  -[CNDowntimeWhitelist keys]
  -[CNDowntimeWhitelist store]
  -[CNDowntimeWhitelist initWithContactStore:]
  -[CNDowntimeWhitelist anyContactIsWhitelisted:]
  -[CNDowntimeWhitelist isWhitelisted:]
  -[CNDowntimeWhitelist allWhitelistedContacts]
  -[CNDowntimeWhitelist whitelistedHandleStringsFromHandleStrings:]
  -[CNDowntimeWhitelist isHandleStringWhitelisted:]
  -[CNDowntimeWhitelist allWhitelistedHandleStrings]
  -[CNDowntimeWhitelist contactStoreDidChangeNotificationToken]


CNFavorites : NSObject /usr/lib/libSystem.B.dylib
 @property  CNContactStore *contactStore
 @property  NSMutableDictionary *uidToEntry
 @property  BOOL dirty
 @property  unsigned long postCount
 @property  BOOL needsReload
 @property  <CNFavoritesLogger> *logger
 @property  NSArray *entries
 @property  BOOL full

  // class methods
  +[CNFavorites sharedInstance]
  +[CNFavorites favoritesPath]
  +[CNFavorites flushSingleton]

  // instance methods
  -[CNFavorites init]
  -[CNFavorites dealloc]
  -[CNFavorites setDirty:]
  -[CNFavorites .cxx_destruct]
  -[CNFavorites save]
  -[CNFavorites logger]
  -[CNFavorites addEntry:]
  -[CNFavorites removeAllEntries]
  -[CNFavorites dirty]
  -[CNFavorites entries]
  -[CNFavorites initWithContactStore:]
  -[CNFavorites contactStore]
  -[CNFavorites setContactStore:]
  -[CNFavorites isFull]
  -[CNFavorites initWithContactStore:logger:]
  -[CNFavorites _postChangeNotification]
  -[CNFavorites shouldSimulateCrashReportForError:]
  -[CNFavorites needsReload]
  -[CNFavorites setNeedsReload:]
  -[CNFavorites _entryDictionaries]
  -[CNFavorites _addEntryToMap:]
  -[CNFavorites loadEntriesIfNecessary]
  -[CNFavorites uidToEntry]
  -[CNFavorites entriesForContact:]
  -[CNFavorites entriesForContact:propertyKey:labeledValueIdentifier:actionType:bundleIdentifier:]
  -[CNFavorites postCount]
  -[CNFavorites setUidToEntry:]
  -[CNFavorites setPostCount:]
  -[CNFavorites _removeEntryFromMap:withUid:]
  -[CNFavorites writeFavoritesToFile:]
  -[CNFavorites _uniqueRematchedEntries:]
  -[CNFavorites initNonUpdatingReadonlyInstanceWithContactStore:]
  -[CNFavorites _isValueForEntry:equalToValue:]
  -[CNFavorites entryWithIdentifier:forContact:]
  -[CNFavorites entryWithType:forContact:propertyKey:identifier:]
  -[CNFavorites containsEntryWithType:forContact:propertyKey:identifier:]
  -[CNFavorites addEntryForContact:propertyKey:withIdentifier:]
  -[CNFavorites _entriesChangedExternally]
  -[CNFavorites removeEntryAtIndex:]
  -[CNFavorites moveEntryAtIndex:toIndex:]
  -[CNFavorites saveImmediately]
  -[CNFavorites rematchEntriesWithOptions:]
  -[CNFavorites recacheIdentitiesSoon]


CNChangeHistory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNChangeHistory os_log]


CNDictionaryPolicy : CNPermissivePolicy
  // instance methods
  -[CNDictionaryPolicy .cxx_destruct]
  -[CNDictionaryPolicy initWithDictionary:]
  -[CNDictionaryPolicy maximumCountOfValuesForContactProperty:]
  -[CNDictionaryPolicy supportedLabelsForContactProperty:]
  -[CNDictionaryPolicy maximumCountOfValuesForContactProperty:label:]
  -[CNDictionaryPolicy unsupportedAttributesForLableledContactProperty:]
  -[CNDictionaryPolicy isContactPropertySupported:]
  -[CNDictionaryPolicy contactRestrictionsForLabeledProperty:]


CNiOSABSocialProfileContactPredicate : CNPredicate <CNiOSContactPredicate>
 @property  CNSocialProfile *socialProfile
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABSocialProfileContactPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABSocialProfileContactPredicate isEqual:]
  -[CNiOSABSocialProfileContactPredicate encodeWithCoder:]
  -[CNiOSABSocialProfileContactPredicate initWithCoder:]
  -[CNiOSABSocialProfileContactPredicate .cxx_destruct]
  -[CNiOSABSocialProfileContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:nserror:]
  -[CNiOSABSocialProfileContactPredicate cn_copyPeopleInAddressBook:fetchRequest:matchInfos:environment:error:]
  -[CNiOSABSocialProfileContactPredicate cn_supportsNativeSorting]
  -[CNiOSABSocialProfileContactPredicate cn_supportsNativeBatchFetch]
  -[CNiOSABSocialProfileContactPredicate cn_supportsEncodedFetching]
  -[CNiOSABSocialProfileContactPredicate cn_cursorForEncodedPeopleFromAddressBook:fetchRequest:environment:error:]
  -[CNiOSABSocialProfileContactPredicate socialProfile]
  -[CNiOSABSocialProfileContactPredicate initWithSocialProfile:]
  -[CNiOSABSocialProfileContactPredicate setSocialProfile:]


CNiOSABContainerOfContactPredicate : CNPredicate <CNiOSContainerPredicate>
 @property  NSString *contactIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CNiOSABContainerOfContactPredicate supportsSecureCoding]

  // instance methods
  -[CNiOSABContainerOfContactPredicate encodeWithCoder:]
  -[CNiOSABContainerOfContactPredicate initWithCoder:]
  -[CNiOSABContainerOfContactPredicate .cxx_destruct]
  -[CNiOSABContainerOfContactPredicate contactIdentifier]
  -[CNiOSABContainerOfContactPredicate initWithPredicate:]
  -[CNiOSABContainerOfContactPredicate initWithContactIdentifier:]
  -[CNiOSABContainerOfContactPredicate cn_copyContainersInAddressBook:error:]
  -[CNiOSABContainerOfContactPredicate includesDisabledContainers]


CNContactLocationVCardSummary : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *title
 @property  NSString *descriptiveLabel
 @property  NSString *urlString

  // class methods
  +[CNContactLocationVCardSummary supportsSecureCoding]

  // instance methods
  -[CNContactLocationVCardSummary isEqual:]
  -[CNContactLocationVCardSummary copyWithZone:]
  -[CNContactLocationVCardSummary encodeWithCoder:]
  -[CNContactLocationVCardSummary initWithCoder:]
  -[CNContactLocationVCardSummary .cxx_destruct]
  -[CNContactLocationVCardSummary title]
  -[CNContactLocationVCardSummary initWithData:error:]
  -[CNContactLocationVCardSummary urlString]
  -[CNContactLocationVCardSummary descriptiveLabel]
  -[CNContactLocationVCardSummary initWithTitle:URLString:]


CNSiriIntelligenceSettings : NSObject /usr/lib/libSystem.B.dylib <CNSiriIntelligenceSettingsProtocol>
  // instance methods
  -[CNSiriIntelligenceSettings init]
  -[CNSiriIntelligenceSettings dealloc]
  -[CNSiriIntelligenceSettings shouldShowSiriSuggestions]
  -[CNSiriIntelligenceSettings setShouldShowSiriSuggestions:]


CNChangeHistoryLabeledValueChange : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *contactIdentifier
 @property  NSString *propertyKey
 @property  NSString *labeledValueIdentifier
 @property  long long changeType

  // class methods
  +[CNChangeHistoryLabeledValueChange supportsSecureCoding]

  // instance methods
  -[CNChangeHistoryLabeledValueChange isEqual:]
  -[CNChangeHistoryLabeledValueChange encodeWithCoder:]
  -[CNChangeHistoryLabeledValueChange initWithCoder:]
  -[CNChangeHistoryLabeledValueChange .cxx_destruct]
  -[CNChangeHistoryLabeledValueChange changeType]
  -[CNChangeHistoryLabeledValueChange contactIdentifier]
  -[CNChangeHistoryLabeledValueChange initWithContactIdentifier:propertyKey:labeledValueIdentifier:changeType:]
  -[CNChangeHistoryLabeledValueChange propertyKey]
  -[CNChangeHistoryLabeledValueChange labeledValueIdentifier]


CNContainerDiffCalculator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CNContainerDiffCalculator diffContainer:to:]


NSPersonNameComponentsFormatter(CNContactFormatterAdditions)
	// class methods
	+[NSPersonNameComponentsFormatter(CNContactFormatterAdditions) formatterWithCNContactStyle:]
	+[NSPersonNameComponentsFormatter(CNContactFormatterAdditions) contactsNameOrderFromFoundationNameOrder:]
	+[NSPersonNameComponentsFormatter(CNContactFormatterAdditions) localizedStringFromContact:contactStyle:options:]

	// instance methods
	-[NSPersonNameComponentsFormatter(CNContactFormatterAdditions) stringFromContact:]

NSNumber(CNReputation)
	// instance methods
	-[NSNumber(CNReputation) _cn_reputationScoreValue]

NSString(CNKeyDescriptor_Private)
	// instance methods
	-[NSString(CNKeyDescriptor_Private) _cn_requiredKeys]
	-[NSString(CNKeyDescriptor_Private) _cn_optionalKeys]
	-[NSString(CNKeyDescriptor_Private) _cn_executeGetterForRepresentedKeys:]
	-[NSString(CNKeyDescriptor_Private) _cn_ignorableKeys]

NSPersonNameComponents(CNContactAdditions)
	// class methods
	+[NSPersonNameComponents(CNContactAdditions) componentsForContact:]
	+[NSPersonNameComponents(CNContactAdditions) keyVectorForUsedKeys]
	+[NSPersonNameComponents(CNContactAdditions) descriptorForUsedKeys]
	+[NSPersonNameComponents(CNContactAdditions) keyPathMapping]

	// instance methods
	-[NSPersonNameComponents(CNContactAdditions) overrideComponentsInContact:]

01 00 0100 /System/Library/PrivateFrameworks/AddressBookLegacy.framework/AddressBookLegacy: ABBufferQueryCursor 
01 00 0100 /System/Library/PrivateFrameworks/AddressBookLegacy.framework/AddressBookLegacy: ABPhoneFormatting 
01 00 0100 /System/Library/PrivateFrameworks/AddressBookLegacy.framework/AddressBookLegacy: ABPredicate 
01 00 0100 /System/Library/PrivateFrameworks/AddressBookLegacy.framework/AddressBookLegacy: ABSQLPredicate 
01 00 0100 /System/Library/PrivateFrameworks/AddressBookLegacy.framework/AddressBookLegacy: ABSearchOperation 
01 00 1200 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0840 /System/Library/Frameworks/ClassKit.framework/ClassKit: CLSDataStore 
01 00 0840 /System/Library/Frameworks/ClassKit.framework/ClassKit: CLSPerson 
01 00 0840 /System/Library/Frameworks/ClassKit.framework/ClassKit: CLSSearchSpecification 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNApplicationProxy 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNArchiver 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNCache 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNCancelationToken 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNCoalescingTimer 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNCoreDelegateInfo 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNDate 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNDescriptionBuilder 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNDeviceFirstUnlock 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNEither 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNEntitlementVerifier 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNEqualsBuilder 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNFAccessAuthorization 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNFAuditToken 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNFoundationError 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNFoundationSocialProfile 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNFoundationUserDefaults 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNFuture 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNHandleStringClassifier 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNHashBuilder 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNLocalization 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNLogging 
01 00 0f00 /System/Library/PrivateFrameworks/vCard.framework/vCard: CNMECARDParser 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNManagedAccountsCache 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNMultiDictionary 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNMutableMultiDictionary 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNNameComponentsStringTokenizer 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNObservable 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNObserver 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNPair 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNPhoneNumberHelper 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNPostalAddressFormats 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNPromise 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNQualityOfServiceSchedulerDecorator 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNQueue 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNResult 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNScheduler 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNSchedulerProvider 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNSimulatedCrashReporter 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNStack 
01 00 1100 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNUserDefaults 
01 00 0f00 /System/Library/PrivateFrameworks/vCard.framework/vCard: CNVCardParser 
01 00 0f00 /System/Library/PrivateFrameworks/vCard.framework/vCard: CNVCardPropertyItem 
01 00 0f00 /System/Library/PrivateFrameworks/vCard.framework/vCard: CNVCardReadingOptions 
01 00 0f00 /System/Library/PrivateFrameworks/vCard.framework/vCard: CNVCardWriting 
01 00 0f00 /System/Library/PrivateFrameworks/vCard.framework/vCard: CNVCardWritingOptions 
01 00 0700 /System/Library/PrivateFrameworks/CellularPlanManager.framework/CellularPlanManager: CTCellularPlanManager 
01 00 1600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSBatchDeleteRequest 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDataDetector 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSEnumerator 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFormatter 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentContainer 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponentsFormatter 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0900 /System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions: SGContactMatch 
01 00 0900 /System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions: SGRecordId 
01 00 0900 /System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions: SGSuggestionsService 
