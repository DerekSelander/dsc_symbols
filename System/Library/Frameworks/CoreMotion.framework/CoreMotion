|| __DATA.__objc_data _OBJC_CLASS_$_CLHealthAssessmentRecordTypeForDuration
|| __DATA.__objc_data _OBJC_CLASS_$_CLSensorRecorderRecordSensorTypeFor
|| __DATA.__objc_data _OBJC_CLASS_$_CLSensorRecorderSensorAvailable
|| __DATA.__objc_data _OBJC_CLASS_$_CLSensorRecorderSensorDataRequestById
|| __DATA.__objc_data _OBJC_CLASS_$_CLSensorRecorderSensorMeta
|| __DATA.__objc_data _OBJC_CLASS_$_CLSensorRecorderSensorMetaRequestByDateRange
|| __DATA.__objc_data _OBJC_CLASS_$_CLSensorRecorderSensorMetaRequestById
|| __DATA.__objc_data _OBJC_CLASS_$_CLSensorRecorderSensorSampleRate
|| __DATA.__objc_data _OBJC_CLASS_$_CLSensorRecorderWriteSensorDataToFileForDateRange
|| __DATA.__objc_data _OBJC_CLASS_$_CMAbsoluteAltitudeData
|| __DATA.__objc_data _OBJC_CLASS_$_CMAccelerometerDataArray
|| __DATA.__objc_data _OBJC_CLASS_$_CMActivity
|| __DATA.__objc_data _OBJC_CLASS_$_CMActivityAlarm
|| __DATA.__objc_data _OBJC_CLASS_$_CMActivityManager
|| __DATA.__objc_data _OBJC_CLASS_$_CMAmbientPressureData
|| __DATA.__objc_data _OBJC_CLASS_$_CMAmbientPressureDataArray
|| __DATA.__objc_data _OBJC_CLASS_$_CMAnomalyEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CMAnomalyManager
|| __DATA.__objc_data _OBJC_CLASS_$_CMAudioAccessoryManager
|| __DATA.__objc_data _OBJC_CLASS_$_CMCallHandednessManager
|| __DATA.__objc_data _OBJC_CLASS_$_CMCalorieUserInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CMCatherineData
|| __DATA.__objc_data _OBJC_CLASS_$_CMCatherineFeeder
|| __DATA.__objc_data _OBJC_CLASS_$_CMDeviceMotionLite
|| __DATA.__objc_data _OBJC_CLASS_$_CMDeviceOrientation
|| __DATA.__objc_data _OBJC_CLASS_$_CMDyskineticSymptomResult
|| __DATA.__objc_data _OBJC_CLASS_$_CMElevation
|| __DATA.__objc_data _OBJC_CLASS_$_CMElevationData
|| __DATA.__objc_data _OBJC_CLASS_$_CMExerciseMinute
|| __DATA.__objc_data _OBJC_CLASS_$_CMExerciseMinuteData
|| __DATA.__objc_data _OBJC_CLASS_$_CMFall
|| __DATA.__objc_data _OBJC_CLASS_$_CMFallStats
|| __DATA.__objc_data _OBJC_CLASS_$_CMFitnessJuniorGoals
|| __DATA.__objc_data _OBJC_CLASS_$_CMFitnessMachine
|| __DATA.__objc_data _OBJC_CLASS_$_CMFitnessMachineData
|| __DATA.__objc_data _OBJC_CLASS_$_CMFitnessMachineWorkout
|| __DATA.__objc_data _OBJC_CLASS_$_CMFitnessShared
|| __DATA.__objc_data _OBJC_CLASS_$_CMGenericWorkout
|| __DATA.__objc_data _OBJC_CLASS_$_CMGyroData
|| __DATA.__objc_data _OBJC_CLASS_$_CMGyroDataArray
|| __DATA.__objc_data _OBJC_CLASS_$_CMHeadphoneMotionManager
|| __DATA.__objc_data _OBJC_CLASS_$_CMHealthTracker
|| __DATA.__objc_data _OBJC_CLASS_$_CMHeartRateData
|| __DATA.__objc_data _OBJC_CLASS_$_CMKappa
|| __DATA.__objc_data _OBJC_CLASS_$_CMKappaData
|| __DATA.__objc_data _OBJC_CLASS_$_CMKappaInternal
|| __DATA.__objc_data _OBJC_CLASS_$_CMMagnetometerData
|| __DATA.__objc_data _OBJC_CLASS_$_CMMediaSession
|| __DATA.__objc_data _OBJC_CLASS_$_CMMetMinute
|| __DATA.__objc_data _OBJC_CLASS_$_CMMotionAlarm
|| __DATA.__objc_data _OBJC_CLASS_$_CMMotionAlarmManager
|| __DATA.__objc_data _OBJC_CLASS_$_CMMotionTimeRange
|| __DATA.__objc_data _OBJC_CLASS_$_CMNatalieData
|| __DATA.__objc_data _OBJC_CLASS_$_CMOdometer
|| __DATA.__objc_data _OBJC_CLASS_$_CMOdometerData
|| __DATA.__objc_data _OBJC_CLASS_$_CMOdometerSuitability
|| __DATA.__objc_data _OBJC_CLASS_$_CMOdometerSuitabilityManager
|| __DATA.__objc_data _OBJC_CLASS_$_CMOnBodyStatus
|| __DATA.__objc_data _OBJC_CLASS_$_CMOnBodyStatusManager
|| __DATA.__objc_data _OBJC_CLASS_$_CMPedometerBin
|| __DATA.__objc_data _OBJC_CLASS_$_CMPedometerEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CMPickupManager
|| __DATA.__objc_data _OBJC_CLASS_$_CMPocketStateManager
|| __DATA.__objc_data _OBJC_CLASS_$_CMPose
|| __DATA.__objc_data _OBJC_CLASS_$_CMRecordedAccelerometerData
|| __DATA.__objc_data _OBJC_CLASS_$_CMRecordedGyroData
|| __DATA.__objc_data _OBJC_CLASS_$_CMRecordedPressureData
|| __DATA.__objc_data _OBJC_CLASS_$_CMRecordedRotationRateData
|| __DATA.__objc_data _OBJC_CLASS_$_CMRotationRateData
|| __DATA.__objc_data _OBJC_CLASS_$_CMSedentaryTimer
|| __DATA.__objc_data _OBJC_CLASS_$_CMSedentaryTimerData
|| __DATA.__objc_data _OBJC_CLASS_$_CMSensorDataList
|| __DATA.__objc_data _OBJC_CLASS_$_CMSensorRecorder
|| __DATA.__objc_data _OBJC_CLASS_$_CMSignificantElevationSample
|| __DATA.__objc_data _OBJC_CLASS_$_CMSkiData
|| __DATA.__objc_data _OBJC_CLASS_$_CMSkiTracker
|| __DATA.__objc_data _OBJC_CLASS_$_CMSleepData
|| __DATA.__objc_data _OBJC_CLASS_$_CMSleepTracker
|| __DATA.__objc_data _OBJC_CLASS_$_CMStepCounter
|| __DATA.__objc_data _OBJC_CLASS_$_CMStrideCalibrationData
|| __DATA.__objc_data _OBJC_CLASS_$_CMStrideCalibrationEntry
|| __DATA.__objc_data _OBJC_CLASS_$_CMStrideCalibrationEntryArray
|| __DATA.__objc_data _OBJC_CLASS_$_CMStrideCalibrationEntryInternal
|| __DATA.__objc_data _OBJC_CLASS_$_CMStrideCalibrationHistory
|| __DATA.__objc_data _OBJC_CLASS_$_CMSwimData
|| __DATA.__objc_data _OBJC_CLASS_$_CMSwimTracker
|| __DATA.__objc_data _OBJC_CLASS_$_CMSwimWorkout
|| __DATA.__objc_data _OBJC_CLASS_$_CMTremorResult
|| __DATA.__objc_data _OBJC_CLASS_$_CMVO2MaxInputs
|| __DATA.__objc_data _OBJC_CLASS_$_CMVehicleConnection
|| __DATA.__objc_data _OBJC_CLASS_$_CMVehicleConnectionData
|| __DATA.__objc_data _OBJC_CLASS_$_CMVehicleState
|| __DATA.__objc_data _OBJC_CLASS_$_CMVehicleStateData
|| __DATA.__objc_data _OBJC_CLASS_$_CMWorkout
|| __DATA.__objc_data _OBJC_CLASS_$_CMWorkoutManager
|| __DATA.__objc_data _OBJC_CLASS_$_CMWorkoutMets
|| __DATA.__objc_data _OBJC_CLASS_$_CMWorkoutMetsData
|| __DATA.__objc_data _OBJC_METACLASS_$_CLHealthAssessmentRecordTypeForDuration
|| __DATA.__objc_data _OBJC_METACLASS_$_CLSensorRecorderRecordSensorTypeFor
|| __DATA.__objc_data _OBJC_METACLASS_$_CLSensorRecorderSensorAvailable
|| __DATA.__objc_data _OBJC_METACLASS_$_CLSensorRecorderSensorDataRequestById
|| __DATA.__objc_data _OBJC_METACLASS_$_CLSensorRecorderSensorMeta
|| __DATA.__objc_data _OBJC_METACLASS_$_CLSensorRecorderSensorMetaRequestByDateRange
|| __DATA.__objc_data _OBJC_METACLASS_$_CLSensorRecorderSensorMetaRequestById
|| __DATA.__objc_data _OBJC_METACLASS_$_CLSensorRecorderSensorSampleRate
|| __DATA.__objc_data _OBJC_METACLASS_$_CLSensorRecorderWriteSensorDataToFileForDateRange
|| __DATA.__objc_data _OBJC_METACLASS_$_CMAbsoluteAltitudeData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMAccelerometerDataArray
|| __DATA.__objc_data _OBJC_METACLASS_$_CMActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_CMActivityManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CMAmbientPressureData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMAmbientPressureDataArray
|| __DATA.__objc_data _OBJC_METACLASS_$_CMAnomalyEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CMAnomalyManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CMAudioAccessoryManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CMCallHandednessManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CMCalorieUserInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CMCatherineData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMCatherineFeeder
|| __DATA.__objc_data _OBJC_METACLASS_$_CMDeviceMotionLite
|| __DATA.__objc_data _OBJC_METACLASS_$_CMDeviceOrientation
|| __DATA.__objc_data _OBJC_METACLASS_$_CMDyskineticSymptomResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CMElevation
|| __DATA.__objc_data _OBJC_METACLASS_$_CMElevationData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMExerciseMinute
|| __DATA.__objc_data _OBJC_METACLASS_$_CMExerciseMinuteData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMFall
|| __DATA.__objc_data _OBJC_METACLASS_$_CMFallStats
|| __DATA.__objc_data _OBJC_METACLASS_$_CMFitnessJuniorGoals
|| __DATA.__objc_data _OBJC_METACLASS_$_CMFitnessMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_CMFitnessMachineData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMFitnessMachineWorkout
|| __DATA.__objc_data _OBJC_METACLASS_$_CMFitnessShared
|| __DATA.__objc_data _OBJC_METACLASS_$_CMGenericWorkout
|| __DATA.__objc_data _OBJC_METACLASS_$_CMGyroData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMGyroDataArray
|| __DATA.__objc_data _OBJC_METACLASS_$_CMHeadphoneMotionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CMHealthTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_CMHeartRateData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMKappa
|| __DATA.__objc_data _OBJC_METACLASS_$_CMKappaData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMKappaInternal
|| __DATA.__objc_data _OBJC_METACLASS_$_CMMagnetometerData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMMediaSession
|| __DATA.__objc_data _OBJC_METACLASS_$_CMMetMinute
|| __DATA.__objc_data _OBJC_METACLASS_$_CMMotionAlarm
|| __DATA.__objc_data _OBJC_METACLASS_$_CMMotionAlarmManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CMMotionTimeRange
|| __DATA.__objc_data _OBJC_METACLASS_$_CMNatalieData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMOdometer
|| __DATA.__objc_data _OBJC_METACLASS_$_CMOdometerData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMOdometerSuitability
|| __DATA.__objc_data _OBJC_METACLASS_$_CMOdometerSuitabilityManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CMOnBodyStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_CMOnBodyStatusManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CMPedometerBin
|| __DATA.__objc_data _OBJC_METACLASS_$_CMPedometerEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CMPickupManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CMPocketStateManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CMPose
|| __DATA.__objc_data _OBJC_METACLASS_$_CMRecordedAccelerometerData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMRecordedGyroData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMRecordedPressureData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMRecordedRotationRateData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMRotationRateData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSedentaryTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSedentaryTimerData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSensorDataList
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSensorRecorder
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSignificantElevationSample
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSkiData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSkiTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSleepData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSleepTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_CMStepCounter
|| __DATA.__objc_data _OBJC_METACLASS_$_CMStrideCalibrationData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMStrideCalibrationEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_CMStrideCalibrationEntryArray
|| __DATA.__objc_data _OBJC_METACLASS_$_CMStrideCalibrationEntryInternal
|| __DATA.__objc_data _OBJC_METACLASS_$_CMStrideCalibrationHistory
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSwimData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSwimTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSwimWorkout
|| __DATA.__objc_data _OBJC_METACLASS_$_CMTremorResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CMVO2MaxInputs
|| __DATA.__objc_data _OBJC_METACLASS_$_CMVehicleConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_CMVehicleConnectionData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMVehicleState
|| __DATA.__objc_data _OBJC_METACLASS_$_CMVehicleStateData
|| __DATA.__objc_data _OBJC_METACLASS_$_CMWorkout
|| __DATA.__objc_data _OBJC_METACLASS_$_CMWorkoutManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CMWorkoutMets
|| __DATA.__objc_data _OBJC_METACLASS_$_CMWorkoutMetsData
|| __DATA.__objc_ivar _OBJC_IVAR_$_CMActivityManager._internal
|| __DATA.__objc_ivar _OBJC_IVAR_$_CMAnomalyManager.fAppQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CMAnomalyManager.fPrivateQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CMGestureManager._internal
|| __DATA.__objc_ivar _OBJC_IVAR_$_CMKappaInternal.fInternalQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CMKappaInternal.fLocationdConnection
|| __DATA.__objc_ivar _OBJC_IVAR_$_CMKappaInternal.fStartedUpdates
|| __DATA_CONST.__const _CLAppResetChangedNotification
|| __DATA_CONST.__const _CLAppStatusChangedNotification
|| __DATA_CONST.__const _CLAuthorizationStatusChangedNotification
|| __DATA_CONST.__const _CLDaemonStartedNotification
|| __DATA_CONST.__const _CLGnssBandsChangedNotification
|| __DATA_CONST.__const _CLMotionSyncStoreLastUpdate
|| __DATA_CONST.__const _CLShouldDisplayStatusBarIconChangedNotification
|| __DATA_CONST.__const _CLTechStatusChangedNotification
|| __DATA_CONST.__const _CMAbsoluteAltitudeKey
|| __DATA_CONST.__const _CMActivityData
|| __DATA_CONST.__const _CMAnomalyDetectorEnabled
|| __DATA_CONST.__const _CMAnomalyDetectorEvent
|| __DATA_CONST.__const _CMAnomalyEventType
|| __DATA_CONST.__const _CMAnomalySensorTestModeEnabled
|| __DATA_CONST.__const _CMAuthorized
|| __DATA_CONST.__const _CMAvailable
|| __DATA_CONST.__const _CMCameraVcmActuatorId
|| __DATA_CONST.__const _CMCompassCalibrationData
|| __DATA_CONST.__const _CMDatabaseType
|| __DATA_CONST.__const _CMDeviceHasOriginalBackCamera
|| __DATA_CONST.__const _CMDyskinesiaResultsKey
|| __DATA_CONST.__const _CMErrorDomain
|| __DATA_CONST.__const _CMErrorMessage
|| __DATA_CONST.__const _CMExerciseMinuteDataArray
|| __DATA_CONST.__const _CMExerciseMinuteRecordId
|| __DATA_CONST.__const _CMExerciseMinuteSourceId
|| __DATA_CONST.__const _CMExerciseMinuteStartDate
|| __DATA_CONST.__const _CMExtensions
|| __DATA_CONST.__const _CMFallAWD
|| __DATA_CONST.__const _CMFallAWD_isAWDLoggingEnabled
|| __DATA_CONST.__const _CMFallAWD_isBackgroundAWDLoggingAllowed
|| __DATA_CONST.__const _CMFallAWD_isBackgroundAWDLoggingEnabled
|| __DATA_CONST.__const _CMFallBehavioralConfig
|| __DATA_CONST.__const _CMFallConfig
|| __DATA_CONST.__const _CMFallConfigUserAge
|| __DATA_CONST.__const _CMFallConfigUserMets
|| __DATA_CONST.__const _CMFallConfiguration
|| __DATA_CONST.__const _CMFallConfiguration_isBridgeToggleEnabled
|| __DATA_CONST.__const _CMFallConfiguration_isFallDetectionFeatureEnabled
|| __DATA_CONST.__const _CMFallConfiguration_shouldDetectorBeRunning
|| __DATA_CONST.__const _CMFallConfiguration_userStudyFallStatsEnabled
|| __DATA_CONST.__const _CMFallConfiguration_userStudyPressureDataCollection
|| __DATA_CONST.__const _CMFallDataCollectionConfigurationKey
|| __DATA_CONST.__const _CMFallDefaults
|| __DATA_CONST.__const _CMFallDefaults_fallDelayBeforeSendingSPUConfiguration
|| __DATA_CONST.__const _CMFallDefaults_fallDelayBeforeShuttingDownAlgorithmsAfterLastClientDisconnect
|| __DATA_CONST.__const _CMFallDefaults_fallDelayBeforeWristAndChargerGating
|| __DATA_CONST.__const _CMFallDefaults_fallFullMslLoggingInSensorKitEnabled
|| __DATA_CONST.__const _CMFallDefaults_fallLockedLookbackBeforeImpactEndOfInterval
|| __DATA_CONST.__const _CMFallDefaults_fallLockedLookbackBeforeImpactStartOfInterval
|| __DATA_CONST.__const _CMFallDefaults_fallMinimumOffChargerDurationBeforeGatingAlert
|| __DATA_CONST.__const _CMFallDefaults_fallOffWristLookbackBeforeImpactEndOfInterval
|| __DATA_CONST.__const _CMFallDefaults_fallOffWristLookbackBeforeImpactStartOfInterval
|| __DATA_CONST.__const _CMFallDefaults_fallOnWristAfterImpactEndOfInterval
|| __DATA_CONST.__const _CMFallDefaults_fallOnWristAfterImpactStartOfInterval
|| __DATA_CONST.__const _CMFallDefaults_isHeartRateDataCollectionEnabled
|| __DATA_CONST.__const _CMFallHDSCollection
|| __DATA_CONST.__const _CMFallHDSCollection_isOptInDataLoggingAvailable
|| __DATA_CONST.__const _CMFallHDSCollection_isOptInDataLoggingEnabled
|| __DATA_CONST.__const _CMFallHDSCollection_isUnderRateLimit
|| __DATA_CONST.__const _CMFallImpactAlertThreshold
|| __DATA_CONST.__const _CMFallImpactLoggingHeartRateThreshold
|| __DATA_CONST.__const _CMFallImpactLoggingHighResolutionSensorDataThreshold
|| __DATA_CONST.__const _CMFallImpactLoggingStatsThreshold
|| __DATA_CONST.__const _CMFallInternalMetricState
|| __DATA_CONST.__const _CMFallInternalNotifierState
|| __DATA_CONST.__const _CMFallLastReplyAopTimestamp
|| __DATA_CONST.__const _CMFallOptInsAndProfiles
|| __DATA_CONST.__const _CMFallOptInsAndProfiles_fallAdditionalProfileLoggingEnabled
|| __DATA_CONST.__const _CMFallOptInsAndProfiles_isBackgroundSensorDataLoggingAllowed
|| __DATA_CONST.__const _CMFallOptInsAndProfiles_isImproveHealthAndFitnessOptInEnabled
|| __DATA_CONST.__const _CMFallOptInsAndProfiles_isTapToRadarFallSubmissionAllowed
|| __DATA_CONST.__const _CMFallOptInsAndProfiles_isTapToRadarNearFallSubmissionAllowed
|| __DATA_CONST.__const _CMFallOptInsAndProfiles_isTapToRadarSubmissionAllowed
|| __DATA_CONST.__const _CMFallOptInsAndProfiles_lastFallAdditionalProfileLoggingEnabled
|| __DATA_CONST.__const _CMFallSetStatsEnabled
|| __DATA_CONST.__const _CMFallSetStatsNameOfCurrentFile
|| __DATA_CONST.__const _CMFallSetStatsNumberOfAvailableFiles
|| __DATA_CONST.__const _CMFallSetStatsSizeOfCurrentFile
|| __DATA_CONST.__const _CMFallState
|| __DATA_CONST.__const _CMFallState_isSensorKitLoggingEnabled
|| __DATA_CONST.__const _CMFallState_isSensorRecordingEnabled
|| __DATA_CONST.__const _CMFallState_lastGatedAnomalyAOPTimestamp
|| __DATA_CONST.__const _CMFallStatsMode
|| __DATA_CONST.__const _CMFallStatsSensorRecordingActive
|| __DATA_CONST.__const _CMFallStatsSimulateFall
|| __DATA_CONST.__const _CMFallStatsUserStudyPressureDataCollection
|| __DATA_CONST.__const _CMFileSize
|| __DATA_CONST.__const _CMFilteredElevationKeySample
|| __DATA_CONST.__const _CMFitnessMachineDataRecord
|| __DATA_CONST.__const _CMHealthAssessmentFromDateKey
|| __DATA_CONST.__const _CMHealthAssessmentToDateKey
|| __DATA_CONST.__const _CMKappaCmdKey
|| __DATA_CONST.__const _CMKappaConfigAccel
|| __DATA_CONST.__const _CMKappaConfigDeviceMotion
|| __DATA_CONST.__const _CMKappaConfigFastAccel
|| __DATA_CONST.__const _CMKappaConfigPressure
|| __DATA_CONST.__const _CMKappaConfigTimeout
|| __DATA_CONST.__const _CMKappaDataObject
|| __DATA_CONST.__const _CMKappaGetStateKey
|| __DATA_CONST.__const _CMKappaStateKey
|| __DATA_CONST.__const _CMMetMinutesArray
|| __DATA_CONST.__const _CMMotionActivityData
|| __DATA_CONST.__const _CMMotionActivityDataArray
|| __DATA_CONST.__const _CMMotionActivityStartTime
|| __DATA_CONST.__const _CMMotionActivityStopTime
|| __DATA_CONST.__const _CMMotionAlarmKey
|| __DATA_CONST.__const _CMMotionStateSim
|| __DATA_CONST.__const _CMMotionStateSimResult
|| __DATA_CONST.__const _CMMotionStateSimState
|| __DATA_CONST.__const _CMMovementDisorderLastProcessedKey
|| __DATA_CONST.__const _CMMovementDisorderMonitorKinesiasExpirationKey
|| __DATA_CONST.__const _CMNatalimeterSetUserAgeYr
|| __DATA_CONST.__const _CMNatalimeterSetUserBetaBlockerUse
|| __DATA_CONST.__const _CMNatalimeterSetUserBiologicalSex
|| __DATA_CONST.__const _CMNatalimeterSetUserCondition
|| __DATA_CONST.__const _CMNatalimeterSetUserHeightMeter
|| __DATA_CONST.__const _CMNatalimeterSetUserHrmin
|| __DATA_CONST.__const _CMNatalimeterSetUserHrminReset
|| __DATA_CONST.__const _CMNatalimeterSetUserHronset
|| __DATA_CONST.__const _CMNatalimeterSetUserOnsetVo2max
|| __DATA_CONST.__const _CMNatalimeterSetUserPal
|| __DATA_CONST.__const _CMNatalimeterSetUserRunVo2max
|| __DATA_CONST.__const _CMNatalimeterSetUserVo2max
|| __DATA_CONST.__const _CMNatalimeterSetUserVo2maxReset
|| __DATA_CONST.__const _CMNatalimeterSetUserWeightKG
|| __DATA_CONST.__const _CMNatalimetryNatalieData
|| __DATA_CONST.__const _CMNatalimetryNatalieDataArray
|| __DATA_CONST.__const _CMNatalimetryNatalieDataBasalNatalies
|| __DATA_CONST.__const _CMNatalimetryNatalieDataMets
|| __DATA_CONST.__const _CMNatalimetryNatalieDataNatalies
|| __DATA_CONST.__const _CMNatalimetryNatalieDataSourceId
|| __DATA_CONST.__const _CMNatalimetryNatalieDataStartDate
|| __DATA_CONST.__const _CMNatalimetryRecordId
|| __DATA_CONST.__const _CMNatalimetrySessionId
|| __DATA_CONST.__const _CMOdometerDataObject
|| __DATA_CONST.__const _CMOdometerGpsAvailability
|| __DATA_CONST.__const _CMOdometerSuitabilityObject
|| __DATA_CONST.__const _CMOnBodyStatusData
|| __DATA_CONST.__const _CMOnBodyStatusManagerAngleMetricThreshold
|| __DATA_CONST.__const _CMOnBodyStatusManagerClassifierMaxHighPower
|| __DATA_CONST.__const _CMOnBodyStatusManagerClassifierMaxLowPower
|| __DATA_CONST.__const _CMOnBodyStatusManagerClassifierMinLowPower
|| __DATA_CONST.__const _CMOnBodyStatusManagerClassifierTheta0
|| __DATA_CONST.__const _CMOnBodyStatusManagerClassifierTheta1
|| __DATA_CONST.__const _CMOnBodyStatusManagerClassifierTheta2
|| __DATA_CONST.__const _CMOnBodyStatusManagerClassifierTheta3
|| __DATA_CONST.__const _CMOnBodyStatusManagerClassifierTheta4
|| __DATA_CONST.__const _CMOnBodyStatusManagerClassifierTheta5
|| __DATA_CONST.__const _CMOnBodyStatusManagerConfidenceThreshold
|| __DATA_CONST.__const _CMOnBodyStatusManagerHighBandStart
|| __DATA_CONST.__const _CMOnBodyStatusManagerHighBandStop
|| __DATA_CONST.__const _CMOnBodyStatusManagerLowBandStart
|| __DATA_CONST.__const _CMOnBodyStatusManagerLowBandStop
|| __DATA_CONST.__const _CMOnBodyStatusManagerManufacturer
|| __DATA_CONST.__const _CMOnBodyStatusManagerMedianFilterSize
|| __DATA_CONST.__const _CMOnBodyStatusManagerOddsThreshold
|| __DATA_CONST.__const _CMOnBodyStatusManagerUseAngleOverride
|| __DATA_CONST.__const _CMOnBodyStatusManagerUseHysteresis
|| __DATA_CONST.__const _CMOnBodyStatusManagerWakeThreshold
|| __DATA_CONST.__const _CMOverrideResult
|| __DATA_CONST.__const _CMOverrideSidebandOverride
|| __DATA_CONST.__const _CMPedometerCalibrationBins
|| __DATA_CONST.__const _CMPedometerCalibrationTypeId
|| __DATA_CONST.__const _CMPedometerDataArray
|| __DATA_CONST.__const _CMPedometerDataObject
|| __DATA_CONST.__const _CMPedometerEntryCount
|| __DATA_CONST.__const _CMPedometerEventKey
|| __DATA_CONST.__const _CMPedometerFetchRemoteCalibrations
|| __DATA_CONST.__const _CMPedometerSpeedSum
|| __DATA_CONST.__const _CMPedometerStartTime
|| __DATA_CONST.__const _CMPedometerStopTime
|| __DATA_CONST.__const _CMPersistOrientationCallbackModeKey
|| __DATA_CONST.__const _CMReturnCode
|| __DATA_CONST.__const _CMSedentaryTimerAlarmDataKey
|| __DATA_CONST.__const _CMSedentaryTimerAutoRescheduleKey
|| __DATA_CONST.__const _CMSedentaryTimerErrorMessageKey
|| __DATA_CONST.__const _CMSedentaryTimerIsArmedKey
|| __DATA_CONST.__const _CMSedentaryTimerPeriodIntervalKey
|| __DATA_CONST.__const _CMSedentaryTimerReminderIntervalKey
|| __DATA_CONST.__const _CMSedentaryTimerStartTimeKey
|| __DATA_CONST.__const _CMSendWakeGestureNotification
|| __DATA_CONST.__const _CMSendWakeGestureState
|| __DATA_CONST.__const _CMSetDeviceOrientationNotification
|| __DATA_CONST.__const _CMSetDeviceOrientationTypeKey
|| __DATA_CONST.__const _CMSetPocketStateNotification
|| __DATA_CONST.__const _CMSetPocketStateTypeKey
|| __DATA_CONST.__const _CMSidebandSensorFusionEnable
|| __DATA_CONST.__const _CMSidebandSensorFusionLatency
|| __DATA_CONST.__const _CMSidebandSensorFusionSnoop
|| __DATA_CONST.__const _CMSidebandSensorFusionSuccess
|| __DATA_CONST.__const _CMSignificantElevationKeyQueryTimeRange
|| __DATA_CONST.__const _CMSignificantElevationKeySample
|| __DATA_CONST.__const _CMSkiKeyDataArray
|| __DATA_CONST.__const _CMSkiKeyDataRecord
|| __DATA_CONST.__const _CMSpringKeyDataArray
|| __DATA_CONST.__const _CMSpringKeyDataRecord
|| __DATA_CONST.__const _CMStateSidebandState
|| __DATA_CONST.__const _CMSwimKeyDataArray
|| __DATA_CONST.__const _CMSwimKeyDataRecord
|| __DATA_CONST.__const _CMTimeRangeKey
|| __DATA_CONST.__const _CMTremorResultsKey
|| __DATA_CONST.__const _CMVO2MaxInputsArray
|| __DATA_CONST.__const _CMVO2MaxInputsRecord
|| __DATA_CONST.__const _CMVehicleConnectionEndTime
|| __DATA_CONST.__const _CMVehicleConnectionStartTime
|| __DATA_CONST.__const _CMVehicleStateDeviceId
|| __DATA_CONST.__const _CMVehicleStateDeviceType
|| __DATA_CONST.__const _CMVehicleStateIsVehicle
|| __DATA_CONST.__const _CMVehicularHintsKey
|| __DATA_CONST.__const _CMVehicularOperatorStateKey
|| __DATA_CONST.__const _CMVehicularStateKey
|| __DATA_CONST.__const _CMWorkoutAttributes
|| __DATA_CONST.__const _CMWorkoutEventDate
|| __DATA_CONST.__const _CMWorkoutMetsDataKey
|| __DATA_CONST.__const _CMWorkoutSessionIdKey
|| __DATA_CONST.__const _CMWorkoutTimeout
|| __DATA_CONST.__const _CMWorkoutTriggerWorkoutLocationEventForTesting
|| __DATA_CONST.__const _kCLCommonLocationAlwaysAndWhenInUseUsageDescriptionKey
|| __DATA_CONST.__const _kCLCommonLocationAlwaysUsageDescriptionKey
|| __DATA_CONST.__const _kCLCommonLocationDefaultAccuracyReducedKey
|| __DATA_CONST.__const _kCLCommonLocationTemporaryUsageDescriptionDictionaryKey
|| __DATA_CONST.__const _kCLCommonLocationUsageDescriptionKey
|| __DATA_CONST.__const _kCLCommonLocationWhenInUseUsageDescriptionKey
|| __DATA_CONST.__const _kCLCommonNSWidgetWantsLocationKey
|| __DATA_CONST.__const _kCLCommonWKRunsIndependentlyOfCompanionAppKey
|| __DATA_CONST.__const _kCLCommonWKWatchOnlyKey
|| __DATA_CONST.__const _kCMHeadphoneMotionManagerEventTypeConnect
|| __DATA_CONST.__const _kCMHeadphoneMotionManagerEventTypeDisconnect
|| __DATA_CONST.__const _kCMHeadphoneMotionManagerEventTypeKey
|| __DATA_CONST.__const _kCMMediaSessionAlwaysOnAnchor
|| __DATA_CONST.__const _kCMMediaSessionOpportunisticAnchor
|| __DATA_CONST.__const _kCMMediaSessionPredictionIntervalMicroseconds
|| __DATA_CONST.__const _kCMVehicleConnectedNotification
|| __DATA_CONST.__const _kCMVehicleDisconnectedNotification
|| __DATA_CONST.__const _kCMVehicleExitNotification
|| __DATA_CONST.__const _kCMVehicularStateChangedNotification
|| __DATA_CONST.__const _kCMVehicularStateChangedToVehicularNotification
|| __DATA_CONST.__const _kStrideCalibrationDataBinsKey_Deprecated
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CLDeviceMotionProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMAccelerometerData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMAltimeter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMAltitudeData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMAttitude
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMDeviceMotion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMDeviceOrientationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMGestureManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMLogItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMMotionActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMMotionActivityManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMMotionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMMotionUtils
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMNatalimeter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMPedometer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMPedometerData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CMWakeGestureManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CLDeviceMotionProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMAccelerometerData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMActivityAlarm
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMAltimeter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMAltitudeData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMAttitude
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMDeviceMotion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMDeviceOrientationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMGestureManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMLogItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMMotionActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMMotionActivityManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMMotionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMMotionUtils
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMNatalimeter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMPedometer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMPedometerData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CMWakeGestureManager
|| __TEXT.__const _I16V_INIT_VALUE
|| __TEXT.__text _AKSC_Decomp8975
|| __TEXT.__text _AKSC_InitDecomp8975
|| __TEXT.__text _AKSC_SetHDOELevel
|| __TEXT.__text _AKSC_abs16
|| __TEXT.__text _AKSC_angRng
|| __TEXT.__text _AKSC_atan2
|| __TEXT.__text _AKSC_buffer
|| __TEXT.__text _AKSC_cholDc
|| __TEXT.__text _AKSC_cholSl
|| __TEXT.__text _AKSC_cos
|| __TEXT.__text _AKSC_div16
|| __TEXT.__text _AKSC_div16f
|| __TEXT.__text _AKSC_div32
|| __TEXT.__text _AKSC_fitOnPlane
|| __TEXT.__text _AKSC_getCoeff
|| __TEXT.__text _AKSC_invSqrt
|| __TEXT.__text _AKSC_norm16
|| __TEXT.__text _AKSC_norm32
|| __TEXT.__text _AKSC_sin
|| __TEXT.__text _AKSC_sqrt16
|| __TEXT.__text _AKSC_sqrt32
|| __TEXT.__text _AKSC_vectorCalc
|| __TEXT.__text _CLApplyArchivedAuthorizationDecisions
|| __TEXT.__text _CLClientCreateIso6709Notation
|| __TEXT.__text _CLClientGetDistanceCoordinates
|| __TEXT.__text _CLClientGetDistanceHighPrecision
|| __TEXT.__text _CLCopyAppsUsingLocation
|| __TEXT.__text _CLCopyGnssBandsInUse
|| __TEXT.__text _CLCopyNearbyAssetSettings
|| __TEXT.__text _CLCopyNearbyAssetSettingsOfAccessoryFile
|| __TEXT.__text _CLCopyTechnologiesInUse
|| __TEXT.__text _CLDeleteCurrentEmergencyLocationAsset
|| __TEXT.__text _CLGetAccessoryMotionSensorLogs
|| __TEXT.__text _CLGetAccessoryTypeBitSet
|| __TEXT.__text _CLGetArchivedAuthorizationDecisions
|| __TEXT.__text _CLGetClientTransientAuthorizationInfo
|| __TEXT.__text _CLGetControlPlaneStatusReport
|| __TEXT.__text _CLGetEmergencyLocationSettingsVersionInfo
|| __TEXT.__text _CLGetLocationDefault
|| __TEXT.__text _CLGetMotionSensorLogs
|| __TEXT.__text _CLGetPipelinedCache
|| __TEXT.__text _CLGetStatusBarIconState
|| __TEXT.__text _CLInternalPerformMigration
|| __TEXT.__text _CLPassKitNotifyPayment
|| __TEXT.__text _CLPingDaemon
|| __TEXT.__text _CLSetClientTransientAuthorizationInfo
|| __TEXT.__text _CLSetLocationDefault
|| __TEXT.__text _CLSetMapMatchingRouteHint
|| __TEXT.__text _CLSetRouteHintsForMapMatching
|| __TEXT.__text _CLShouldDisplayEEDUI
|| __TEXT.__text _CLStartStopAdvertisingBeacon
|| __TEXT.__text _CLWeatherNotifyForecast
|| __TEXT.__text __ZN16CLMotionActivity12isTypeMovingENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity12isTypeRowingENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity12isTypeStaticENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity13isTypeCyclingENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity13isTypeDancingENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity13isTypeDrivingENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity13isTypeRunningENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity13isTypeWalkingENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity14isTypeCoolDownENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity14isTypeSwimmingENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity15isTypeInVehicleENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity16isTypeEllipticalENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity16isTypePedestrianENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity18isTypeCoreTrainingENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity19activityTypeToIndexENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity19indexToActivityTypeEi
|| __TEXT.__text __ZN16CLMotionActivity19isTypeStairClimbingENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity20activityTypeToStringENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity20isTypeIndoorActivityENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity20isTypeWheelchairPushENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity22isTypeIndoorPedestrianENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity23isTypeOutdoorWheelchairENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity23isTypePushingWheelchairENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity23isTypeStationaryCyclingENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity24isTypeFunctionalStrengthENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity24isTypeUnclassifiedMovingENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity25isVehicularHighConfidenceENS_19VehicularConfidenceE
|| __TEXT.__text __ZN16CLMotionActivity26activityConfidenceToStringENS_10ConfidenceE
|| __TEXT.__text __ZN16CLMotionActivity35remapActivityTypeForWheelchairUsersENS_4TypeE
|| __TEXT.__text __ZN16CLMotionActivity4initEv
|| __TEXT.__text __ZN16CLMotionActivity7getInitEv
|| __TEXT.__text __ZN16CLMotionActivity9isMountedENS_12MountedStateE
|| __TEXT.__text __ZN16CLMotionActivity9isSimilarERKS_S1_
|| __TEXT.__text __ZNK16CLMotionActivity11isInVehicleEv
|| __TEXT.__text __ZNK16CLMotionActivity20isUnclassifiedMovingEv
|| __TEXT.__text __ZNK16CLMotionActivity25isVehicularHighConfidenceEv
|| __TEXT.__text __ZNK16CLMotionActivity8isMovingEv
|| __TEXT.__text __ZNK16CLMotionActivity8isStaticEv
|| __TEXT.__text __ZNK16CLMotionActivity9isCyclingEv
|| __TEXT.__text __ZNK16CLMotionActivity9isDrivingEv
|| __TEXT.__text __ZNK16CLMotionActivity9isMountedEv
|| __TEXT.__text __ZNK16CLMotionActivity9isRunningEv
|| __TEXT.__text __ZNK16CLMotionActivity9isWalkingEv
|| __TEXT.__text _zzAKSC_HDOEProcessS3
|| __TEXT.__text _zzAKSC_InitHDOEProcPrmsS3
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientPushValueForDistributionKey
__ AudioToolbox: _AudioServicesPlaySystemSound
__ BackBoardServices: _BKSHIDServicesRequestEstimatedProximityEvents
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendArray
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayApplyFunction
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFBundleGetValueForInfoDictionaryKey
__ CoreFoundation: _CFCopyDescription
__ CoreFoundation: _CFCopyHomeDirectoryURLForUser
__ CoreFoundation: _CFCopyUserName
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDictionaryApplyFunction
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateCopy
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryGetValueIfPresent
__ CoreFoundation: _CFDictionaryRemoveAllValues
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFErrorGetCode
__ CoreFoundation: _CFErrorGetDomain
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFGetUserName
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetType
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFPreferencesCopyKeyList
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetMultiple
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFPropertyListCreateData
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFPropertyListWrite
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopAddTimer
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopObserverCreate
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopRemoveObserver
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopRemoveTimer
__ CoreFoundation: _CFRunLoopRun
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopTimerCreate
__ CoreFoundation: _CFRunLoopTimerCreateWithHandler
__ CoreFoundation: _CFRunLoopTimerInvalidate
__ CoreFoundation: _CFRunLoopTimerSetNextFireDate
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateByCombiningStrings
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFURLCopyFileSystemPath
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _CFUUIDGetConstantUUIDWithBytes
__ CoreFoundation: _CFUUIDGetUUIDBytes
__ CoreFoundation: _CFUserNotificationDisplayNotice
__ CoreFoundation: _CFWriteStreamClose
__ CoreFoundation: _CFWriteStreamCopyProperty
__ CoreFoundation: _CFWriteStreamCreateWithAllocatedBuffers
__ CoreFoundation: _CFWriteStreamOpen
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_METACLASS_$_NSArray
__ CoreFoundation: __CFCopyServerVersionDictionary
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: __CFGetProgname
__ CoreFoundation: __CFRunLoopSetPerCalloutAutoreleasepoolEnabled
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: __kCFSystemVersionProductNameKey
__ CoreFoundation: __kCFSystemVersionProductVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFStreamPropertyDataWritten
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSPopAutoreleasePool
__ Foundation: _NSPushAutoreleasePool
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ IOKit: _IOAllowPowerChange
__ IOKit: _IOCreatePlugInInterfaceForService
__ IOKit: _IODeregisterForSystemPower
__ IOKit: _IODestroyPlugInInterface
__ IOKit: _IOHIDEventGetChildren
__ IOKit: _IOHIDEventGetDataValue
__ IOKit: _IOHIDEventGetFloatValue
__ IOKit: _IOHIDEventGetIntegerValue
__ IOKit: _IOHIDEventGetTimeStamp
__ IOKit: _IOHIDEventGetType
__ IOKit: _IOHIDEventGetVendorDefinedData
__ IOKit: _IOHIDEventSystemClientCopyServices
__ IOKit: _IOHIDEventSystemClientCreateWithType
__ IOKit: _IOHIDEventSystemClientRegisterDeviceMatchingCallback
__ IOKit: _IOHIDEventSystemClientRegisterEventCallback
__ IOKit: _IOHIDEventSystemClientRegisterResetCallback
__ IOKit: _IOHIDEventSystemClientScheduleWithRunLoop
__ IOKit: _IOHIDEventSystemClientSetMatchingMultiple
__ IOKit: _IOHIDEventSystemClientSetProperty
__ IOKit: _IOHIDEventSystemClientUnregisterDeviceMatchingCallback
__ IOKit: _IOHIDEventSystemClientUnregisterEventCallback
__ IOKit: _IOHIDEventSystemClientUnregisterResetCallback
__ IOKit: _IOHIDEventSystemClientUnscheduleWithRunLoop
__ IOKit: _IOHIDServiceClientConformsTo
__ IOKit: _IOHIDServiceClientCopyEvent
__ IOKit: _IOHIDServiceClientCopyProperty
__ IOKit: _IOHIDServiceClientFastPathCopyEventWithStatus
__ IOKit: _IOHIDServiceClientFastPathInit
__ IOKit: _IOHIDServiceClientFastPathInvalidate
__ IOKit: _IOHIDServiceClientGetRegistryID
__ IOKit: _IOHIDServiceClientRegisterRemovalCallback
__ IOKit: _IOHIDServiceClientSetProperty
__ IOKit: _IOIteratorNext
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortGetRunLoopSource
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IOObjectRelease
__ IOKit: _IORegisterForSystemPower
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IORegistryEntryGetParentEntry
__ IOKit: _IORegistryEntryIDMatching
__ IOKit: _IORegistryEntrySearchCFProperty
__ IOKit: _IOServiceAddInterestNotification
__ IOKit: _IOServiceAddMatchingNotification
__ IOKit: _IOServiceClose
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _IOServiceNameMatching
__ IOKit: _kIOMasterPortDefault
__ LocationSupport: _OBJC_CLASS_$_CLCppContainer
__ LocationSupport: _OBJC_CLASS_$_CLCppEncodableDataContainer
__ LocationSupport: _OBJC_CLASS_$_CLDispatchSilo
__ LocationSupport: _OBJC_CLASS_$_CLIntersiloInterface
__ LocationSupport: _OBJC_CLASS_$_CLIntersiloProxy
__ LocationSupport: _OBJC_CLASS_$_CLIntersiloService
__ LocationSupport: _OBJC_CLASS_$_CLIntersiloUniverse
__ LocationSupport: _OBJC_CLASS_$_CLSilo
__ LocationSupport: _OBJC_METACLASS_$_CLIntersiloService
__ LocationSupport: __ZN18CLConnectionClient11sendMessageENSt3__110shared_ptrI19CLConnectionMessageEEU13block_pointerFvS3_E
__ LocationSupport: __ZN18CLConnectionClient11sendMessageENSt3__110shared_ptrI19CLConnectionMessageEEb
__ LocationSupport: __ZN18CLConnectionClient15sendMessageSyncENSt3__110shared_ptrI19CLConnectionMessageEEb
__ LocationSupport: __ZN18CLConnectionClient20setHandlerForMessageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEU13block_pointerFvNS0_10shared_ptrI19CLConnectionMessageEEE
__ LocationSupport: __ZN18CLConnectionClient22setInterruptionHandlerEU13block_pointerFvvE
__ LocationSupport: __ZN18CLConnectionClient24setDefaultMessageHandlerEU13block_pointerFvNSt3__110shared_ptrI19CLConnectionMessageEEE
__ LocationSupport: __ZN18CLConnectionClient5startEv
__ LocationSupport: __ZN18CLConnectionClientC1ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPU28objcproto17OS_dispatch_queue8NSObject
__ LocationSupport: __ZN18CLConnectionClientD1Ev
__ LocationSupport: __ZN19CLConnectionMessage17setFileDescriptorEi
__ LocationSupport: __ZN19CLConnectionMessageC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
__ LocationSupport: __ZN19CLConnectionMessageC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPU25objcproto14NSSecureCoding11objc_object
__ LocationSupport: __ZN19CLConnectionMessageD1Ev
__ LocationSupport: __ZNK19CLConnectionMessage13getDictionaryEv
__ LocationSupport: __ZNK19CLConnectionMessage13getRawPayloadEv
__ LocationSupport: __ZNK19CLConnectionMessage16getObjectOfClassEP10objc_class
__ LocationSupport: __ZNK19CLConnectionMessage18getObjectOfClassesEP5NSSet
__ LocationSupport: __ZNK19CLConnectionMessage22getDictionaryOfClassesEP5NSSet
__ LocationSupport: __ZNK19CLConnectionMessage4nameEv
__ MobileBluetooth: _BTAccessoryManagerAddCallbacks
__ MobileBluetooth: _BTAccessoryManagerGetDefault
__ MobileBluetooth: _BTAccessoryManagerGetInEarDetectionEnable
__ MobileBluetooth: _BTAccessoryManagerGetInEarStatus
__ MobileBluetooth: _BTAccessoryManagerGetTimeSyncId
__ MobileBluetooth: _BTAccessoryManagerRemoteTimeSyncEnable
__ MobileBluetooth: _BTAccessoryManagerSensorStreamTimeSyncEnable
__ MobileBluetooth: _BTDeviceAddressFromString
__ MobileBluetooth: _BTDeviceFromAddress
__ MobileBluetooth: _BTDeviceGetDeviceId
__ MobileBluetooth: _BTSessionAttachWithQueue
__ PowerLog: _PLLogTimeSensitiveRegisteredEvent
__ ProtocolBuffer: _PBHashBytes
__ ProtocolBuffer: __ZN2PB13TextFormatter11beginObjectEPKc
__ ProtocolBuffer: __ZN2PB13TextFormatter6formatEPKcRKNS_4DataE
__ ProtocolBuffer: __ZN2PB13TextFormatter6formatEPKcRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
__ ProtocolBuffer: __ZN2PB13TextFormatter6formatEPKcb
__ ProtocolBuffer: __ZN2PB13TextFormatter6formatEPKcd
__ ProtocolBuffer: __ZN2PB13TextFormatter6formatEPKcf
__ ProtocolBuffer: __ZN2PB13TextFormatter6formatEPKci
__ ProtocolBuffer: __ZN2PB13TextFormatter6formatEPKcj
__ ProtocolBuffer: __ZN2PB13TextFormatter6formatEPKcy
__ ProtocolBuffer: __ZN2PB13TextFormatter9endObjectEv
__ ProtocolBuffer: __ZN2PB4BaseD2Ev
__ ProtocolBuffer: __ZN2PB4DataC1ERKS0_
__ ProtocolBuffer: __ZN2PB6Reader10recallMarkERKNS_10ReaderMarkE
__ ProtocolBuffer: __ZN2PB6Reader4readERNS_4DataE
__ ProtocolBuffer: __ZN2PB6Reader4readERNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
__ ProtocolBuffer: __ZN2PB6Reader4skipEjhi
__ ProtocolBuffer: __ZN2PB6Reader9placeMarkERNS_10ReaderMarkE
__ ProtocolBuffer: __ZN2PB6ReaderC1EPKhm
__ ProtocolBuffer: __ZN2PB6Writer11writeVarIntEij
__ ProtocolBuffer: __ZN2PB6Writer11writeVarIntEjj
__ ProtocolBuffer: __ZN2PB6Writer11writeVarIntEyj
__ ProtocolBuffer: __ZN2PB6Writer15writeSubmessageERKNS_4BaseEj
__ ProtocolBuffer: __ZN2PB6Writer5writeERKNS_4DataEj
__ ProtocolBuffer: __ZN2PB6Writer5writeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj
__ ProtocolBuffer: __ZN2PB6Writer5writeEbj
__ ProtocolBuffer: __ZN2PB6Writer5writeEdj
__ ProtocolBuffer: __ZN2PB6Writer5writeEfj
__ ProtocolBuffer: __ZN2PB6Writer9writeSIntEij
__ ProtocolBuffer: __ZN2PB6WriterC1Ev
__ ProtocolBuffer: __ZN2PB6WriterD1Ev
__ ProtocolBuffer: __ZNK2PB4DataeqERKS0_
__ ProtocolBuffer: __ZTIN2PB4BaseE
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ TCC: _TCCAccessPreflight
__ TCC: _TCCAccessRequest
__ TCC: _TCCAccessRestricted
__ TCC: _kTCCServiceMotion
__ TimeSync: _OBJC_CLASS_$_TSClockManager
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGIsDeviceOfType
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __NSGetExecutablePath
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___cxa_atexit
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __dyld_get_image_header
__ libSystem.B.dylib: __dyld_get_image_name
__ libSystem.B.dylib: __dyld_image_count
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_error_termination_imminent
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_data
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_endpoint
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _acosf
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _asin
__ libSystem.B.dylib: _asinf
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _atan2f
__ libSystem.B.dylib: _backtrace
__ libSystem.B.dylib: _basename
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _clearerr
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _cosf
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_data_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_io_barrier
__ libSystem.B.dylib: _dispatch_io_create
__ libSystem.B.dylib: _dispatch_io_write
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_once_f
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dladdr
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _expf
__ libSystem.B.dylib: _expm1
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _feof
__ libSystem.B.dylib: _ferror
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fgetpos
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fputc
__ libSystem.B.dylib: _fputs
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fsync
__ libSystem.B.dylib: _ftell
__ libSystem.B.dylib: _funopen
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getgid
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getpwnam
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _lchmod
__ libSystem.B.dylib: _lchown
__ libSystem.B.dylib: _localtime
__ libSystem.B.dylib: _lseek
__ libSystem.B.dylib: _lstat
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _mach_error_string
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _open_dprotected_np
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _perror
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _pread
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _pthread_attr_init
__ libSystem.B.dylib: _pthread_attr_setschedparam
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_dependency_fulfill_np
__ libSystem.B.dylib: _pthread_dependency_init_np
__ libSystem.B.dylib: _pthread_dependency_wait_np
__ libSystem.B.dylib: _pthread_getschedparam
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_destroy
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _pthread_setname_np
__ libSystem.B.dylib: _pthread_setschedparam
__ libSystem.B.dylib: _pwrite
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _rename
__ libSystem.B.dylib: _sched_get_priority_max
__ libSystem.B.dylib: _setvbuf
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _sinf
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _snprintf_l
__ libSystem.B.dylib: _sprintf
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _syslog
__ libSystem.B.dylib: _tan
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _uuid_clear
__ libSystem.B.dylib: _uuid_copy
__ libSystem.B.dylib: _vsnprintf
__ libSystem.B.dylib: _xpc_connection_activate
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create
__ libSystem.B.dylib: _xpc_connection_create_from_endpoint
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_barrier
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_connection_suspend
__ libSystem.B.dylib: _xpc_data_create
__ libSystem.B.dylib: _xpc_data_get_bytes_ptr
__ libSystem.B.dylib: _xpc_data_get_length
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_endpoint_create
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_string_create
__ libSystem.B.dylib: dyld_stub_binder
__ libbz2.1.0.dylib: _BZ2_bzWrite
__ libbz2.1.0.dylib: _BZ2_bzWriteClose
__ libbz2.1.0.dylib: _BZ2_bzWriteOpen
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE3putES4_RNS_8ios_baseEcPK2tmPKcSC_
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count4lockEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16chrono12system_clock3nowEv
__ libc++.1.dylib: __ZNSt3__16chrono12system_clock9to_time_tERKNS0_10time_pointIS1_NS0_8durationIxNS_5ratioILl1ELl1000000EEEEEEE
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE2idE
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__113basic_ostreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTINSt3__115basic_streambufIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTINSt3__119__shared_weak_countE
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTIc
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv121__vmi_class_type_infoE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___cxa_rethrow
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___dynamic_cast
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyCppObjectAtomic
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_step
__ libxml2.2.dylib: _xmlBufferContent
__ libxml2.2.dylib: _xmlBufferCreate
__ libxml2.2.dylib: _xmlBufferFree
__ libxml2.2.dylib: _xmlBufferLength
__ libxml2.2.dylib: _xmlFreeTextWriter
__ libxml2.2.dylib: _xmlNewTextWriterMemory
__ libxml2.2.dylib: _xmlTextWriterFlush
__ libxml2.2.dylib: _xmlTextWriterWriteBase64
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit_
__ libz.1.dylib: _deflateReset
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit_
__ libz.1.dylib: _inflateReset
CMSedentaryTimer_Internal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  BOOL timerArmed

  // instance methods
  -[CMSedentaryTimer_Internal init]
  -[CMSedentaryTimer_Internal setTimerArmed:]
  -[CMSedentaryTimer_Internal isTimerArmed]
  -[CMSedentaryTimer_Internal _handleAlarmDataResponse:withHandler:]
  -[CMSedentaryTimer_Internal _handleStartStopTimerResponse:withHandler:]
  -[CMSedentaryTimer_Internal _registerForAlarmsWithHandler:]
  -[CMSedentaryTimer_Internal dealloc]
  -[CMSedentaryTimer_Internal _isActive]
  -[CMSedentaryTimer_Internal _teardown]


CMSedentaryTimer : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMSedentaryTimer_Internal *_internal

  // class methods
  +[CMSedentaryTimer isAvailable]

  // instance methods
  -[CMSedentaryTimer init]
  -[CMSedentaryTimer startTimerWithStartTime:periodInterval:reminderInterval:autoReschedule:handler:]
  -[CMSedentaryTimer stopTimerWithHandler:]
  -[CMSedentaryTimer queryAlarmDataSince:withHandler:]
  -[CMSedentaryTimer registerForAlarmsWithHandler:]
  -[CMSedentaryTimer dealloc]
  -[CMSedentaryTimer isActive]
  -[CMSedentaryTimer _internal]


CMMotionActivityManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CMMotionActivityManager authorizationStatus]
  +[CMMotionActivityManager isActivityAvailable]

  // instance methods
  -[CMMotionActivityManager startActivityUpdatesToQueue:withHandler:]
  -[CMMotionActivityManager init]
  -[CMMotionActivityManager dealloc]
  -[CMMotionActivityManager _handleQueryResponse:onQueue:withHandler:]
  -[CMMotionActivityManager queryActivityStartingFromDate:toDate:toQueue:withHandler:]
  -[CMMotionActivityManager stopActivityUpdates]


CMNatalieData : CMLogItem
 @property  long long recordId
 @property  NSUUID *sourceId
 @property  NSDate *startDate
 @property  NSNumber *mets
 @property  NSNumber *natalies
 @property  NSNumber *basalNatalies
 @property  long long activityType

  // class methods
  +[CMNatalieData supportsSecureCoding]
  +[CMNatalieData maxNatalieEntries]

  // instance methods
  -[CMNatalieData copyWithZone:]
  -[CMNatalieData mets]
  -[CMNatalieData recordId]
  -[CMNatalieData activityType]
  -[CMNatalieData startDate]
  -[CMNatalieData natalies]
  -[CMNatalieData initWithStartDate:recordId:activityType:mets:natalies:basalNatalies:sourceId:]
  -[CMNatalieData basalNatalies]
  -[CMNatalieData dealloc]
  -[CMNatalieData encodeWithCoder:]
  -[CMNatalieData sourceId]
  -[CMNatalieData initWithCoder:]


CMAccelerometerDataInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSCopying>
  // instance methods
  -[CMAccelerometerDataInternal copyWithZone:]
  -[CMAccelerometerDataInternal setAcceleration:]
  -[CMAccelerometerDataInternal initWithAcceleration:]


CMAccelerometerData : CMLogItem
 @property  {?=ddd} acceleration

  // class methods
  +[CMAccelerometerData supportsSecureCoding]

  // instance methods
  -[CMAccelerometerData copyWithZone:]
  -[CMAccelerometerData initWithAcceleration:andTimestamp:]
  -[CMAccelerometerData dealloc]
  -[CMAccelerometerData encodeWithCoder:]
  -[CMAccelerometerData acceleration]
  -[CMAccelerometerData initWithCoder:]


CMAccelerometerDataArray : NSArray /usr/lib/libz.1.dylib <SRSampling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CMAccelerometerDataArray initWithBinarySampleRepresentation:metadata:timestamp:]


CMStrideCalibrationHistory : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <SRSampling, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *calibrationTracks
 @property  NSArray *rawSpeedToKValueBins
 @property  NSArray *stepCadenceToStrideLengthBins

  // class methods
  +[CMStrideCalibrationHistory supportsSecureCoding]

  // instance methods
  -[CMStrideCalibrationHistory copyWithZone:]
  -[CMStrideCalibrationHistory binarySampleRepresentation]
  -[CMStrideCalibrationHistory initWithBinarySampleRepresentation:metadata:timestamp:]
  -[CMStrideCalibrationHistory setCalibrationTracks:]
  -[CMStrideCalibrationHistory rawSpeedToKValueBins]
  -[CMStrideCalibrationHistory initWithCalibrationTracks:rawSpeedToKValueBins:stepCadenceToStrideLengthBins:]
  -[CMStrideCalibrationHistory calibrationTracks]
  -[CMStrideCalibrationHistory setRawSpeedToKValueBins:]
  -[CMStrideCalibrationHistory stepCadenceToStrideLengthBins]
  -[CMStrideCalibrationHistory setStepCadenceToStrideLengthBins:]
  -[CMStrideCalibrationHistory dealloc]
  -[CMStrideCalibrationHistory encodeWithCoder:]
  -[CMStrideCalibrationHistory initWithCoder:]


CMAltitudeDataInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSCopying>
  // instance methods
  -[CMAltitudeDataInternal copyWithZone:]
  -[CMAltitudeDataInternal setAltitude:andPressure:]
  -[CMAltitudeDataInternal initWithAltitude:andPressure:]


CMAltitudeData : CMLogItem
 @property  NSNumber *relativeAltitude
 @property  NSNumber *pressure

  // class methods
  +[CMAltitudeData supportsSecureCoding]

  // instance methods
  -[CMAltitudeData copyWithZone:]
  -[CMAltitudeData relativeAltitude]
  -[CMAltitudeData initWithAltitude:andTimestamp:atBaseAltitude:]
  -[CMAltitudeData initWithTimestamp:pressure:relativeAltitude:]
  -[CMAltitudeData dealloc]
  -[CMAltitudeData encodeWithCoder:]
  -[CMAltitudeData pressure]
  -[CMAltitudeData initWithCoder:]


CMSignificantElevationSample : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSCopying, NSSecureCoding>
 @property  unsigned long recordId
 @property  NSUUID *sourceId
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSNumber *elevationAscended
 @property  NSNumber *elevationDescended

  // class methods
  +[CMSignificantElevationSample supportsSecureCoding]

  // instance methods
  -[CMSignificantElevationSample copyWithZone:]
  -[CMSignificantElevationSample recordId]
  -[CMSignificantElevationSample startDate]
  -[CMSignificantElevationSample elevationAscended]
  -[CMSignificantElevationSample initWithRecordId:sourceId:startDate:endDate:elevationAscended:elevationDescended:]
  -[CMSignificantElevationSample elevationDescended]
  -[CMSignificantElevationSample dealloc]
  -[CMSignificantElevationSample initWithSignificantElevation:]
  -[CMSignificantElevationSample initWithFilteredElevation:]
  -[CMSignificantElevationSample encodeWithCoder:]
  -[CMSignificantElevationSample endDate]
  -[CMSignificantElevationSample sourceId]
  -[CMSignificantElevationSample initWithCoder:]


CMVehicleStateData : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  CMMotionTimeRange *timeRange
 @property  NSString *deviceId

  // class methods
  +[CMVehicleStateData supportsSecureCoding]

  // instance methods
  -[CMVehicleStateData copyWithZone:]
  -[CMVehicleStateData deviceId]
  -[CMVehicleStateData dealloc]
  -[CMVehicleStateData initWithTimeRange:deviceId:]
  -[CMVehicleStateData timeRange]
  -[CMVehicleStateData encodeWithCoder:]
  -[CMVehicleStateData initWithCoder:]


CMVehicleState : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CMVehicleState isAvailable]
  +[CMVehicleState mostRecentVehicleConnection]
  +[CMVehicleState mostRecentInVehicle]
  +[CMVehicleState isVehicleBasedOnDeviceId:deviceType:]
  +[CMVehicleState vehicularOperatorState]
  +[CMVehicleState vehicularState]
  +[CMVehicleState vehicularHints]


RMConnectionEndpoint : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  NSObject<OS_xpc_object> *streamingServerConnection
 @property  NSObject<OS_xpc_object> *streamingClientConnection
 @property  NSObject<OS_xpc_object> *streamingClientListener
 @property  NSObject<OS_xpc_object> *messagingConnection
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_xpc_object> *connection
 @property  <RMConnectionLifecycleDelegate> *connectionDelegate
 @property  <RMConnectionDataDelegate> *dataDelegate

  // instance methods
  -[RMConnectionEndpoint pause]
  -[RMConnectionEndpoint stopServingStream]
  -[RMConnectionEndpoint messagingConnection]
  -[RMConnectionEndpoint setStreamingServerConnection:]
  -[RMConnectionEndpoint startServingStreamWithHandler:]
  -[RMConnectionEndpoint stopReceivingStream]
  -[RMConnectionEndpoint startServingStreamToEndpoint:error:]
  -[RMConnectionEndpoint wrapReplyToXpcMessage:withName:data:]
  -[RMConnectionEndpoint setMessagingConnection:]
  -[RMConnectionEndpoint handleXpcMessage:replyBlock:]
  -[RMConnectionEndpoint streamingClientListener]
  -[RMConnectionEndpoint streamingServerConnection]
  -[RMConnectionEndpoint setStreamingClientConnection:]
  -[RMConnectionEndpoint streamingClientConnection]
  -[RMConnectionEndpoint handleStreamXpcError:withErrorHandler:]
  -[RMConnectionEndpoint setStreamingClientListener:]
  -[RMConnectionEndpoint startReceivingStreamOnConnection:errorHandler:]
  -[RMConnectionEndpoint handleStreamXpcReply:withErrorHandler:]
  -[RMConnectionEndpoint sendMessage:withData:]
  -[RMConnectionEndpoint sendMessage:withData:reply:]
  -[RMConnectionEndpoint requestStreamWithMessage:data:errorHandler:]
  -[RMConnectionEndpoint setDataDelegate:]
  -[RMConnectionEndpoint .cxx_destruct]
  -[RMConnectionEndpoint handleInterruption]
  -[RMConnectionEndpoint connectionDelegate]
  -[RMConnectionEndpoint setConnectionDelegate:]
  -[RMConnectionEndpoint setQueue:]
  -[RMConnectionEndpoint isValid]
  -[RMConnectionEndpoint dataDelegate]
  -[RMConnectionEndpoint queue]
  -[RMConnectionEndpoint initWithConnection:queue:]
  -[RMConnectionEndpoint connection]
  -[RMConnectionEndpoint invalidate]
  -[RMConnectionEndpoint start]


CMFallStatsItemsIterator : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSFastEnumeration>
  // instance methods
  -[CMFallStatsItemsIterator .cxx_construct]
  -[CMFallStatsItemsIterator dealloc]
  -[CMFallStatsItemsIterator .cxx_destruct]
  -[CMFallStatsItemsIterator initWithData:]
  -[CMFallStatsItemsIterator countByEnumeratingWithState:objects:count:]


CMFallStats : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <SRSampling, SRSampleExporting, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double iOStime
 @property  int fallType
 @property  BOOL isNearFall

  // class methods
  +[CMFallStats supportsSecureCoding]

  // instance methods
  -[CMFallStats iOStime]
  -[CMFallStats binarySampleRepresentation]
  -[CMFallStats initWithBinarySampleRepresentation:metadata:timestamp:]
  -[CMFallStats dealloc]
  -[CMFallStats _decodeMeta]
  -[CMFallStats initWithBufferAndLength:length:]
  -[CMFallStats itemsIterator]
  -[CMFallStats isNearFall]
  -[CMFallStats sr_exportRepresentationEnumerator]
  -[CMFallStats initWithData:]
  -[CMFallStats encodeWithCoder:]
  -[CMFallStats fallType]
  -[CMFallStats initWithCoder:]


CMWorkout : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  BOOL isUserInitiated
 @property  NSUUID *sessionId
 @property  long long type
 @property  long long locationType
 @property  NSDate *startDate
 @property  NSDate *endDate

  // class methods
  +[CMWorkout isAvailable]
  +[CMWorkout supportsSecureCoding]
  +[CMWorkout workoutName:]
  +[CMWorkout workoutIsTypeWalking:]
  +[CMWorkout workoutIsTypeRunning:]
  +[CMWorkout workoutLocationTypeFromCMWorkoutType:]
  +[CMWorkout workoutLocationName:]
  +[CMWorkout CLMotionActivityTypeFromCMWorkoutType:]
  +[CMWorkout CMWorkoutTypeFromCLMotionActivityType:]
  +[CMWorkout workoutIsTypePedestrian:]
  +[CMWorkout CMWorkoutLocationTypeFromCMSwimWorkoutLocation:]
  +[CMWorkout CMSwimWorkoutLocationFromCMWorkoutLocationType:]

  // instance methods
  -[CMWorkout copyWithZone:]
  -[CMWorkout sessionId]
  -[CMWorkout startDate]
  -[CMWorkout setLocationType:]
  -[CMWorkout locationType]
  -[CMWorkout dealloc]
  -[CMWorkout initWithSessionId:type:]
  -[CMWorkout initWithSessionId:type:locationType:]
  -[CMWorkout initWithSessionId:type:locationType:startDate:endDate:]
  -[CMWorkout setIsUserInitiated:]
  -[CMWorkout setWorkoutType:]
  -[CMWorkout isUserInitiated]
  -[CMWorkout encodeWithCoder:]
  -[CMWorkout endDate]
  -[CMWorkout type]
  -[CMWorkout initWithCoder:]


CMSwimWorkout : CMWorkout
 @property  long long location
 @property  double poolLength

  // class methods
  +[CMSwimWorkout isAvailable]
  +[CMSwimWorkout supportsSecureCoding]
  +[CMSwimWorkout swimLocationName:]
  +[CMSwimWorkout swimWorkoutInstance:]

  // instance methods
  -[CMSwimWorkout copyWithZone:]
  -[CMSwimWorkout dealloc]
  -[CMSwimWorkout poolLength]
  -[CMSwimWorkout initWithSessionId:locationType:poolLength:startDate:endDate:]
  -[CMSwimWorkout initWithSessionId:location:poolLength:]
  -[CMSwimWorkout initWithSessionId:locationType:poolLength:]
  -[CMSwimWorkout encodeWithCoder:]
  -[CMSwimWorkout location]
  -[CMSwimWorkout initWithCoder:]


CMFitnessMachineWorkout : CMWorkout
 @property  NSString *manufacturerName
 @property  NSString *model

  // class methods
  +[CMFitnessMachineWorkout isAvailable]
  +[CMFitnessMachineWorkout supportsSecureCoding]
  +[CMFitnessMachineWorkout fitnessMachineWorkoutInstance:]

  // instance methods
  -[CMFitnessMachineWorkout copyWithZone:]
  -[CMFitnessMachineWorkout dealloc]
  -[CMFitnessMachineWorkout initWithSessionId:workoutType:manufacturerName:model:]
  -[CMFitnessMachineWorkout encodeWithCoder:]
  -[CMFitnessMachineWorkout manufacturerName]
  -[CMFitnessMachineWorkout model]
  -[CMFitnessMachineWorkout initWithCoder:]


CMGenericWorkout : CMWorkout
 @property  unsigned long workoutLabel

  // class methods
  +[CMGenericWorkout isAvailable]
  +[CMGenericWorkout supportsSecureCoding]
  +[CMGenericWorkout genericWorkoutInstance:]

  // instance methods
  -[CMGenericWorkout copyWithZone:]
  -[CMGenericWorkout dealloc]
  -[CMGenericWorkout workoutLabel]
  -[CMGenericWorkout initWithSessionId:workoutLabel:]
  -[CMGenericWorkout encodeWithCoder:]
  -[CMGenericWorkout initWithCoder:]


CMDeviceMotionInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSCopying>
  // instance methods
  -[CMDeviceMotionInternal copyWithZone:]
  -[CMDeviceMotionInternal initWithDeviceMotion:internal:]
  -[CMDeviceMotionInternal dealloc]
  -[CMDeviceMotionInternal isEqual:]
  -[CMDeviceMotionInternal setDeviceMotion:internal:]


CMDeviceMotion : CMLogItem
 @property  BOOL doingYawCorrection
 @property  BOOL doingBiasEstimation
 @property  int magneticFieldCalibrationLevel
 @property  double headingAccuracy
 @property  CMAttitude *attitude
 @property  {?=ddd} rotationRate
 @property  {?=ddd} gravity
 @property  {?=ddd} userAcceleration
 @property  {?={?=ddd}i} magneticField
 @property  double heading
 @property  long long sensorLocation

  // class methods
  +[CMDeviceMotion supportsSecureCoding]

  // instance methods
  -[CMDeviceMotion attitude]
  -[CMDeviceMotion copyWithZone:]
  -[CMDeviceMotion heading]
  -[CMDeviceMotion sensorLocation]
  -[CMDeviceMotion dealloc]
  -[CMDeviceMotion headingAccuracy]
  -[CMDeviceMotion magneticField]
  -[CMDeviceMotion gravity]
  -[CMDeviceMotion encodeWithCoder:]
  -[CMDeviceMotion rotationRate]
  -[CMDeviceMotion initWithDeviceMotion:internal:timestamp:]
  -[CMDeviceMotion userAcceleration]
  -[CMDeviceMotion isEqual:]
  -[CMDeviceMotion doingYawCorrection]
  -[CMDeviceMotion doingBiasEstimation]
  -[CMDeviceMotion magneticFieldCalibrationLevel]
  -[CMDeviceMotion initWithCoder:]


CMAttitudeInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMAttitudeInternal initWithQuaternion:]
  -[CMAttitudeInternal setQuaternion:]
  -[CMAttitudeInternal isEqual:]


CMAttitude : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSCopying, NSSecureCoding>
 @property  double roll
 @property  double pitch
 @property  double yaw
 @property  {?=ddddddddd} rotationMatrix
 @property  {?=dddd} quaternion

  // class methods
  +[CMAttitude supportsSecureCoding]

  // instance methods
  -[CMAttitude pitch]
  -[CMAttitude copyWithZone:]
  -[CMAttitude initWithQuaternion:]
  -[CMAttitude multiplyByInverseOfAttitude:]
  -[CMAttitude roll]
  -[CMAttitude yaw]
  -[CMAttitude dealloc]
  -[CMAttitude quaternion]
  -[CMAttitude encodeWithCoder:]
  -[CMAttitude setQuaternion:]
  -[CMAttitude isEqual:]
  -[CMAttitude rotationMatrix]
  -[CMAttitude initWithCoder:]


RMConnectionClientCachedMessage : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  NSString *name
 @property  NSData *data
 @property  @? streamingCallback

  // instance methods
  -[RMConnectionClientCachedMessage .cxx_destruct]
  -[RMConnectionClientCachedMessage initWithName:data:streamingCallback:]
  -[RMConnectionClientCachedMessage streamingCallback]
  -[RMConnectionClientCachedMessage name]
  -[RMConnectionClientCachedMessage data]
  -[RMConnectionClientCachedMessage initWithName:data:]


RMConnectionClient : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <RMConnectionLifecycleDelegate, RMConnectionStreamConsumingDelegate>
 @property  RMConnectionEndpoint *endpoint
 @property  NSString *serviceName
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? streamingDataCallback
 @property  @? messageHandler
 @property  NSMutableArray *messageCache
 @property  NSObject<OS_dispatch_source> *connectionTimer
 @property  unsigned long connectionTimerDelay
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[RMConnectionClient setMessageHandler:]
  -[RMConnectionClient setEndpoint:]
  -[RMConnectionClient setValid:]
  -[RMConnectionClient connect]
  -[RMConnectionClient messageHandler]
  -[RMConnectionClient endpoint]
  -[RMConnectionClient endpoint:didReceiveMessage:withData:replyBlock:]
  -[RMConnectionClient endpoint:didReceiveStreamedData:]
  -[RMConnectionClient endpointWasInvalidated:]
  -[RMConnectionClient endpointWasInterrupted:]
  -[RMConnectionClient sendMessage:withData:reply:]
  -[RMConnectionClient .cxx_destruct]
  -[RMConnectionClient messageCache]
  -[RMConnectionClient setMessageCache:]
  -[RMConnectionClient requestStreamingWithMessage:data:callback:]
  -[RMConnectionClient streamingDataCallback]
  -[RMConnectionClient setStreamingDataCallback:]
  -[RMConnectionClient stopStreamingInternal]
  -[RMConnectionClient stopStreaming]
  -[RMConnectionClient replayCache]
  -[RMConnectionClient connectionTimerDelay]
  -[RMConnectionClient setConnectionTimerDelay:]
  -[RMConnectionClient initWithQueue:serviceName:messageHandler:]
  -[RMConnectionClient sendCachedMessage:withData:]
  -[RMConnectionClient setQueue:]
  -[RMConnectionClient isValid]
  -[RMConnectionClient queue]
  -[RMConnectionClient handleDaemonStart]
  -[RMConnectionClient setServiceName:]
  -[RMConnectionClient connectionTimer]
  -[RMConnectionClient invalidate]
  -[RMConnectionClient serviceName]
  -[RMConnectionClient setConnectionTimer:]


CMAmbientPressureDataInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMAmbientPressureDataInternal copyWithZone:]
  -[CMAmbientPressureDataInternal setAmbientPressure:]
  -[CMAmbientPressureDataInternal initWithPressure:]


CMAmbientPressureData : CMLogItem <SRSampleDirectExporting>
 @property  {?=dd} ambientPressure

  // class methods
  +[CMAmbientPressureData supportsSecureCoding]

  // instance methods
  -[CMAmbientPressureData copyWithZone:]
  -[CMAmbientPressureData dealloc]
  -[CMAmbientPressureData initWithPressure:andTimestamp:]
  -[CMAmbientPressureData ambientPressure]
  -[CMAmbientPressureData encodeWithCoder:]
  -[CMAmbientPressureData sr_prefersUTF8StringRepresentation]
  -[CMAmbientPressureData sr_writeUTF8RepresentationToOutputStream:]
  -[CMAmbientPressureData initWithCoder:]


CMAmbientPressureDataArray : NSArray /usr/lib/libz.1.dylib <SRSampling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CMAmbientPressureDataArray initWithBinarySampleRepresentation:metadata:timestamp:]


CMRecordedGyroData : CMGyroData
 @property  unsigned long identifier
 @property  NSDate *startDate
 @property  double startTime
 @property  float temperature

  // class methods
  +[CMRecordedGyroData supportsSecureCoding]

  // instance methods
  -[CMRecordedGyroData temperature]
  -[CMRecordedGyroData startDate]
  -[CMRecordedGyroData initWithData:timestamp:walltime:identifier:]
  -[CMRecordedGyroData dealloc]
  -[CMRecordedGyroData resetWithData:timestamp:walltime:identifier:]
  -[CMRecordedGyroData timestamp]
  -[CMRecordedGyroData encodeWithCoder:]
  -[CMRecordedGyroData identifier]
  -[CMRecordedGyroData rotationRate]
  -[CMRecordedGyroData initWithCoder:]
  -[CMRecordedGyroData startTime]


CMRecordedPressureData : CMAmbientPressureData
 @property  unsigned long identifier
 @property  NSDate *startDate
 @property  double startTime

  // class methods
  +[CMRecordedPressureData supportsSecureCoding]

  // instance methods
  -[CMRecordedPressureData startDate]
  -[CMRecordedPressureData initWithData:timestamp:walltime:identifier:]
  -[CMRecordedPressureData dealloc]
  -[CMRecordedPressureData ambientPressure]
  -[CMRecordedPressureData resetWithData:timestamp:walltime:identifier:]
  -[CMRecordedPressureData timestamp]
  -[CMRecordedPressureData encodeWithCoder:]
  -[CMRecordedPressureData identifier]
  -[CMRecordedPressureData initWithCoder:]
  -[CMRecordedPressureData startTime]


CMSensorDataList : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSFastEnumeration>
  // instance methods
  -[CMSensorDataList .cxx_construct]
  -[CMSensorDataList dealloc]
  -[CMSensorDataList _updateCurrentBlockProperties]
  -[CMSensorDataList _updatePointers]
  -[CMSensorDataList initWithIdentifier:andType:]
  -[CMSensorDataList initFrom:to:withType:]
  -[CMSensorDataList countByEnumeratingWithState:objects:count:]


CMSensorRecorderInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMSensorRecorderInternal init]
  -[CMSensorRecorderInternal dealloc]
  -[CMSensorRecorderInternal newMetaSinceID:forType:]
  -[CMSensorRecorderInternal newMetaFrom:to:forType:]
  -[CMSensorRecorderInternal newMetaByID:forType:]
  -[CMSensorRecorderInternal newDataByID:metaID:forType:]
  -[CMSensorRecorderInternal _newMetaUsingMessage:withIdentifier:forType:]
  -[CMSensorRecorderInternal writeSensorDataToFile:from:to:forType:]
  -[CMSensorRecorderInternal setSensorSampleRate:forType:]
  -[CMSensorRecorderInternal teardown]


CMSensorRecorder : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CMSensorRecorder authorizationStatus]
  +[CMSensorRecorder isRecordingAvailableForType:]
  +[CMSensorRecorder isAccelerometerRecordingAvailable]
  +[CMSensorRecorder isGyroRecordingAvailable]
  +[CMSensorRecorder isPressureRecordingAvailable]
  +[CMSensorRecorder isAuthorizedForRecording]

  // instance methods
  -[CMSensorRecorder setSensorSampleRate:forType:]
  -[CMSensorRecorder sensorDataFromDate:toDate:forType:]
  -[CMSensorRecorder validateTimesFromDate:toDate:]
  -[CMSensorRecorder gyroDataSinceId:]
  -[CMSensorRecorder sendSensorDataToUrl:fromDate:toDate:forType:]
  -[CMSensorRecorder recordDataType:forDuration:]
  -[CMSensorRecorder accelerometerDataSinceId:]
  -[CMSensorRecorder pressureDataSinceId:]
  -[CMSensorRecorder accelerometerDataFromDate:toDate:]
  -[CMSensorRecorder gyroDataFromDate:toDate:]
  -[CMSensorRecorder pressureDataFromDate:toDate:]
  -[CMSensorRecorder sendAccelDataToUrl:fromDate:toDate:]
  -[CMSensorRecorder sendGyroDataToUrl:fromDate:toDate:]
  -[CMSensorRecorder sendPressureDataToUrl:fromDate:toDate:]
  -[CMSensorRecorder recordAccelerometerForDuration:]
  -[CMSensorRecorder recordGyroForDuration:]
  -[CMSensorRecorder recordPressureForDuration:]
  -[CMSensorRecorder accelerometerDataFrom:to:]
  -[CMSensorRecorder recordAccelerometerFor:]
  -[CMSensorRecorder accelerometerDataSince:]
  -[CMSensorRecorder setAccelSampleRate:]
  -[CMSensorRecorder setGyroSampleRate:]
  -[CMSensorRecorder setPressureSampleRate:]


CMLogItemInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMLogItemInternal initWithTimestamp:]


CMLogItem : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  double timestamp

  // class methods
  +[CMLogItem supportsSecureCoding]

  // instance methods
  -[CMLogItem copyWithZone:]
  -[CMLogItem dealloc]
  -[CMLogItem timestamp]
  -[CMLogItem encodeWithCoder:]
  -[CMLogItem initWithTimestamp:]
  -[CMLogItem initWithCoder:]


CMWakeGestureManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  <CMWakeGestureDelegate> *delegate

  // class methods
  +[CMWakeGestureManager toRaw:]
  +[CMWakeGestureManager isWakeGestureAvailable]
  +[CMWakeGestureManager stringForNotification:]
  +[CMWakeGestureManager isWakeGestureOverrideEnabled]
  +[CMWakeGestureManager stringForMode:]
  +[CMWakeGestureManager toState:]
  +[CMWakeGestureManager stringForGestureState:]
  +[CMWakeGestureManager hasSlowBootArgs]
  +[CMWakeGestureManager stringForViewPose:]
  +[CMWakeGestureManager sharedManager]
  +[CMWakeGestureManager stringForStartPose:]

  // instance methods
  -[CMWakeGestureManager onWakeUpdated:]
  -[CMWakeGestureManager reenableDetectedStateRecognition]
  -[CMWakeGestureManager simulateGesture:after:]
  -[CMWakeGestureManager onPowerStateUpdated:]
  -[CMWakeGestureManager .cxx_construct]
  -[CMWakeGestureManager dealloc]
  -[CMWakeGestureManager .cxx_destruct]
  -[CMWakeGestureManager startWakeGestureUpdates]
  -[CMWakeGestureManager initWithQueue:]
  -[CMWakeGestureManager onBacklightServiceUpdated:]
  -[CMWakeGestureManager invokeDelegateWithState:]
  -[CMWakeGestureManager simulateGestureWithDelay:Duration:]
  -[CMWakeGestureManager stopWakeGestureUpdates]
  -[CMWakeGestureManager loadPreferences]
  -[CMWakeGestureManager logWakeLatency]
  -[CMWakeGestureManager onNotificationControl:]
  -[CMWakeGestureManager playAlert]
  -[CMWakeGestureManager setDelegate:]
  -[CMWakeGestureManager forceDetected]
  -[CMWakeGestureManager delegate]
  -[CMWakeGestureManager sendWakeTriggerAnalytics:withDisplay:]


CMOdometerSuitability : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <SRSampling, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *startDate
 @property  BOOL suitableForRunning
 @property  BOOL suitableForWalking

  // class methods
  +[CMOdometerSuitability supportsSecureCoding]

  // instance methods
  -[CMOdometerSuitability copyWithZone:]
  -[CMOdometerSuitability startDate]
  -[CMOdometerSuitability binarySampleRepresentation]
  -[CMOdometerSuitability initWithBinarySampleRepresentation:metadata:timestamp:]
  -[CMOdometerSuitability dealloc]
  -[CMOdometerSuitability initWithStartDate:suitableForRunning:suitableForWalking:]
  -[CMOdometerSuitability suitableForRunning]
  -[CMOdometerSuitability suitableForWalking]
  -[CMOdometerSuitability encodeWithCoder:]
  -[CMOdometerSuitability initWithCoder:]


CMOdometerProxy : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMOdometer *odometer
 @property  double totalDistance
 @property  double averageSpeed
 @property  double startDate

  // instance methods
  -[CMOdometerProxy totalDistance]
  -[CMOdometerProxy setTotalDistance:]
  -[CMOdometerProxy startDate]
  -[CMOdometerProxy dealloc]
  -[CMOdometerProxy odometer]
  -[CMOdometerProxy _stopOdometerUpdates]
  -[CMOdometerProxy setAverageSpeed:]
  -[CMOdometerProxy averageSpeed]
  -[CMOdometerProxy initWithOdometer:]
  -[CMOdometerProxy _startDaemonConnection]
  -[CMOdometerProxy _startOdometerUpdatesWithHandler:]
  -[CMOdometerProxy setOdometer:]
  -[CMOdometerProxy _teardown]
  -[CMOdometerProxy setStartDate:]


CMOdometer : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMOdometerProxy *odometerProxy
 @property  <CMOdometerDelegate> *delegate

  // instance methods
  -[CMOdometer init]
  -[CMOdometer dealloc]
  -[CMOdometer odometerProxy]
  -[CMOdometer startOdometerUpdatesForActivity:withHandler:]
  -[CMOdometer stopOdometerUpdates]
  -[CMOdometer setDelegate:]
  -[CMOdometer delegate]


CMExerciseMinuteData : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  NSDate *startDate
 @property  long long recordId
 @property  NSUUID *sourceId

  // class methods
  +[CMExerciseMinuteData supportsSecureCoding]
  +[CMExerciseMinuteData maxExerciseMinuteDataEntries]

  // instance methods
  -[CMExerciseMinuteData copyWithZone:]
  -[CMExerciseMinuteData recordId]
  -[CMExerciseMinuteData startDate]
  -[CMExerciseMinuteData dealloc]
  -[CMExerciseMinuteData initWithStartDate:recordId:sourceId:]
  -[CMExerciseMinuteData encodeWithCoder:]
  -[CMExerciseMinuteData sourceId]
  -[CMExerciseMinuteData initWithCoder:]


CMRotationRateDataInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSCopying>
  // instance methods
  -[CMRotationRateDataInternal copyWithZone:]
  -[CMRotationRateDataInternal setRotationRate:]
  -[CMRotationRateDataInternal initWithRotationRate:]


CMRotationRateData : CMLogItem
 @property  {?=ddd} rotationRate

  // class methods
  +[CMRotationRateData supportsSecureCoding]

  // instance methods
  -[CMRotationRateData copyWithZone:]
  -[CMRotationRateData dealloc]
  -[CMRotationRateData initWithRotationRate:andTimestamp:]
  -[CMRotationRateData encodeWithCoder:]
  -[CMRotationRateData rotationRate]
  -[CMRotationRateData initWithCoder:]


CMRecordedRotationRateData : CMRotationRateData
 @property  NSDate *startDate

  // class methods
  +[CMRecordedRotationRateData supportsSecureCoding]

  // instance methods
  -[CMRecordedRotationRateData startDate]
  -[CMRecordedRotationRateData dealloc]
  -[CMRecordedRotationRateData timestamp]
  -[CMRecordedRotationRateData initWithData:timestamp:walltime:]
  -[CMRecordedRotationRateData encodeWithCoder:]
  -[CMRecordedRotationRateData rotationRate]
  -[CMRecordedRotationRateData initWithCoder:]


CMGyroDataInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSCopying>
  // instance methods
  -[CMGyroDataInternal copyWithZone:]
  -[CMGyroDataInternal setRotationRate:]
  -[CMGyroDataInternal initWithRotationRate:]


CMGyroData : CMLogItem
 @property  {?=ddd} rotationRate

  // class methods
  +[CMGyroData supportsSecureCoding]

  // instance methods
  -[CMGyroData copyWithZone:]
  -[CMGyroData dealloc]
  -[CMGyroData initWithRotationRate:andTimestamp:]
  -[CMGyroData encodeWithCoder:]
  -[CMGyroData rotationRate]
  -[CMGyroData initWithCoder:]


CMGyroDataArray : NSArray /usr/lib/libz.1.dylib <SRSampling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CMGyroDataArray initWithBinarySampleRepresentation:metadata:timestamp:]


CMMotionManagerInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  NSOperationQueue *fDeviceMotionLiteClientQueue
 @property  @? fDeviceMotionLiteFusedHandler
 @property  NSString *fDeviceMotionLitePhysicalDeviceID

  // instance methods
  -[CMMotionManagerInternal fDeviceMotionLiteFusedHandler]
  -[CMMotionManagerInternal init]
  -[CMMotionManagerInternal .cxx_construct]
  -[CMMotionManagerInternal dealloc]
  -[CMMotionManagerInternal setFDeviceMotionLiteFusedHandler:]
  -[CMMotionManagerInternal .cxx_destruct]
  -[CMMotionManagerInternal fDeviceMotionLitePhysicalDeviceID]
  -[CMMotionManagerInternal teardownPrivate]
  -[CMMotionManagerInternal setFDeviceMotionLitePhysicalDeviceID:]
  -[CMMotionManagerInternal setFDeviceMotionLiteClientQueue:]
  -[CMMotionManagerInternal fDeviceMotionLiteClientQueue]


CMMotionManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  BOOL sidebandSensorFusionAvailable
 @property  BOOL predictedDeviceMotionAvailable
 @property  CMAmbientPressureData *ambientPressureData
 @property  CMAmbientPressureData *compensatedAmbientPressureData
 @property  BOOL isDeviceMotionLiteAvailable
 @property  double accelerometerUpdateInterval
 @property  BOOL accelerometerAvailable
 @property  BOOL accelerometerActive
 @property  CMAccelerometerData *accelerometerData
 @property  double gyroUpdateInterval
 @property  BOOL gyroAvailable
 @property  BOOL gyroActive
 @property  CMGyroData *gyroData
 @property  double magnetometerUpdateInterval
 @property  BOOL magnetometerAvailable
 @property  BOOL magnetometerActive
 @property  CMMagnetometerData *magnetometerData
 @property  double deviceMotionUpdateInterval
 @property  unsigned long attitudeReferenceFrame
 @property  BOOL deviceMotionAvailable
 @property  BOOL deviceMotionActive
 @property  CMDeviceMotion *deviceMotion
 @property  BOOL showsDeviceMovementDisplay

  // class methods
  +[CMMotionManager gyroCalibrationDatabaseGetBiasFit]
  +[CMMotionManager initialize]
  +[CMMotionManager dummySelector:]
  +[CMMotionManager configureM7Activity:stepCounting:activityForceCodeTransition:stepCountingForceCodeTransition:threshold:onBodyDetection:ispMode:predictionInterval:logLevel:proactiveRevisitTime:]
  +[CMMotionManager deviceMotionInitialized:]
  +[CMMotionManager dumpDb:toURL:onCompletion:]
  +[CMMotionManager gyroCalibrationDatabaseGetBiasFitAndEstimate:atTemperature:]
  +[CMMotionManager supportsGyroMiniCalibration]
  +[CMMotionManager setUrgentCalFlag]
  +[CMMotionManager setAllowInBackground:]
  +[CMMotionManager hasRunMiniCal]
  +[CMMotionManager availableAttitudeReferenceFrames]
  +[CMMotionManager northAlignedReferenceFrame:]
  +[CMMotionManager startGyroMiniCalibration]

  // instance methods
  -[CMMotionManager showDeviceMovementDisplay]
  -[CMMotionManager isDeviceMotionAvailable]
  -[CMMotionManager setSidebandTimeSyncHandler:]
  -[CMMotionManager connect]
  -[CMMotionManager onAmbientPressure:]
  -[CMMotionManager setDeviceMotionCallback:info:interval:fsync:]
  -[CMMotionManager attitudeReferenceFrame]
  -[CMMotionManager startMagnetometerUpdatesPrivateToQueue:withHandler:]
  -[CMMotionManager stopGyroUpdatesPrivate]
  -[CMMotionManager init]
  -[CMMotionManager setAccelerometerUpdateInterval:]
  -[CMMotionManager ambientPressureUpdateInterval]
  -[CMMotionManager willResignActivePrivate:]
  -[CMMotionManager isPredictedDeviceMotionAvailable]
  -[CMMotionManager onAccelerometer:]
  -[CMMotionManager isMagnetometerActive]
  -[CMMotionManager onDeviceMotion:]
  -[CMMotionManager startCompensatedAmbientPressureUpdatesPrivateToQueue:withHandler:]
  -[CMMotionManager initUsing6AxisSensorFusion]
  -[CMMotionManager setSidebandSensorFusionEnable:withSnoopHandler:]
  -[CMMotionManager startGyroUpdatesPrivateToQueue:withHandler:]
  -[CMMotionManager setSidebandSensorFusionEnable:]
  -[CMMotionManager startAccelerometerUpdatesPrivateToQueue:withHandler:]
  -[CMMotionManager dealloc]
  -[CMMotionManager stopCompensatedAmbientPressureUpdatesPrivate]
  -[CMMotionManager setNotificationCallback:info:]
  -[CMMotionManager ambientPressureData]
  -[CMMotionManager magnetometerData]
  -[CMMotionManager _startDeviceMotionErrorUpdatesToQueue:withHandler:]
  -[CMMotionManager isAccelerometerAvailable]
  -[CMMotionManager magnetometerUpdateInterval]
  -[CMMotionManager setSidebandSensorFusionEnable:measureLatency:withSnoopHandler:]
  -[CMMotionManager computeNonlinearPRTTFromDB:where:]
  -[CMMotionManager _stopDeviceMotionErrorUpdates]
  -[CMMotionManager stopGyroUpdates]
  -[CMMotionManager compensatedAmbientPressureData]
  -[CMMotionManager initUsingGyroOnlySensorFusion]
  -[CMMotionManager setAccelerometerDataCallback:info:interval:]
  -[CMMotionManager setUseAccelerometer:]
  -[CMMotionManager isAmbientPressureAvailable]
  -[CMMotionManager stopCompensatedAmbientPressureUpdates]
  -[CMMotionManager setDeviceMotionUpdateInterval:]
  -[CMMotionManager isGyroActive]
  -[CMMotionManager isDeviceMotionLiteAvailable]
  -[CMMotionManager startDeviceMotionUpdatesUsingReferenceFrame:]
  -[CMMotionManager stopMagnetometerUpdates]
  -[CMMotionManager startAmbientPressureUpdates]
  -[CMMotionManager didBecomeActivePrivate:]
  -[CMMotionManager startCompensatedAmbientPressureUpdatesToQueue:withHandler:]
  -[CMMotionManager stopDeviceMotionUpdates]
  -[CMMotionManager stopAmbientPressureUpdates]
  -[CMMotionManager setCompensatedAmbientPressureUpdateInterval:]
  -[CMMotionManager startMagnetometerUpdates]
  -[CMMotionManager gyttNumTemperatures]
  -[CMMotionManager setAmbientPressureUpdateIntervalPrivate:]
  -[CMMotionManager didBecomeActive:]
  -[CMMotionManager setPowerConservationMode:]
  -[CMMotionManager isGyroAvailable]
  -[CMMotionManager deviceMotionUpdateInterval]
  -[CMMotionManager setMagnetometerDataCallback:info:interval:]
  -[CMMotionManager readRawAmbientPressureSamplesFromDB:toQueue:where:withHandler:]
  -[CMMotionManager accelerometerUpdateInterval]
  -[CMMotionManager compensatedAmbientPressureUpdateInterval]
  -[CMMotionManager startAmbientPressureUpdatesToQueue:withHandler:]
  -[CMMotionManager startDeviceMotionLiteUpdatesForDeviceID:usingConfiguration:toQueue:withFusedHandler:]
  -[CMMotionManager setGyroUpdateIntervalPrivate:]
  -[CMMotionManager sendDeviceMotionError:]
  -[CMMotionManager onGyro:]
  -[CMMotionManager isAmbientPressureActive]
  -[CMMotionManager accelerometerData]
  -[CMMotionManager gyroUpdateInterval]
  -[CMMotionManager onMagnetometer:]
  -[CMMotionManager useAccelerometer]
  -[CMMotionManager setMotionThreadPriority:]
  -[CMMotionManager setAmbientPressureUpdateInterval:]
  -[CMMotionManager willResignActive:]
  -[CMMotionManager stopAmbientPressureUpdatesPrivate]
  -[CMMotionManager gyroData]
  -[CMMotionManager startDeviceMotionUpdatesToQueue:withHandler:]
  -[CMMotionManager startGyroUpdatesToQueue:withHandler:]
  -[CMMotionManager startGyroUpdates]
  -[CMMotionManager startDeviceMotionUpdates]
  -[CMMotionManager stopDeviceMotionLiteUpdatesForDeviceID:]
  -[CMMotionManager isCompensatedAmbientPressureActive]
  -[CMMotionManager setCompensatedAmbientPressureUpdateIntervalPrivate:]
  -[CMMotionManager stopAccelerometerUpdates]
  -[CMMotionManager stopDeviceMotionUpdatesPrivate]
  -[CMMotionManager showsDeviceMovementDisplay]
  -[CMMotionManager setMagnetometerUpdateInterval:]
  -[CMMotionManager setGyroDataCallback:info:interval:]
  -[CMMotionManager setDeviceMotionUpdateIntervalPrivate:]
  -[CMMotionManager isMagnetometerAvailable]
  -[CMMotionManager initPrivate]
  -[CMMotionManager stopAccelerometerUpdatesPrivate]
  -[CMMotionManager startAccelerometerUpdatesToQueue:withHandler:]
  -[CMMotionManager startDeviceMotionLiteFusedUpdatesForDeviceID:toQueue:withHandler:]
  -[CMMotionManager setShowsDeviceMovementDisplayPrivate:]
  -[CMMotionManager stopMagnetometerUpdatesPrivate]
  -[CMMotionManager isAccelerometerActive]
  -[CMMotionManager startAccelerometerUpdates]
  -[CMMotionManager startCompensatedAmbientPressureUpdates]
  -[CMMotionManager onCompensatedAmbientPressure:]
  -[CMMotionManager applyInitialReference:]
  -[CMMotionManager dismissDeviceMovementDisplay]
  -[CMMotionManager setMagnetometerUpdateIntervalPrivate:]
  -[CMMotionManager deviceMotion]
  -[CMMotionManager startMagnetometerUpdatesToQueue:withHandler:]
  -[CMMotionManager startDeviceMotionUpdatesUsingReferenceFrame:toQueue:withHandler:]
  -[CMMotionManager rebuildGytt]
  -[CMMotionManager startAmbientPressureUpdatesPrivateToQueue:withHandler:]
  -[CMMotionManager predictedDeviceMotionAtTimestamp:error:]
  -[CMMotionManager setGyroUpdateInterval:]
  -[CMMotionManager setShowsDeviceMovementDisplay:]
  -[CMMotionManager deallocPrivate]
  -[CMMotionManager isSidebandSensorFusionAvailable]
  -[CMMotionManager setAccelerometerUpdateIntervalPrivate:]
  -[CMMotionManager startDeviceMotionUpdatesPrivateUsingReferenceFrame:toQueue:withHandler:]
  -[CMMotionManager isDeviceMotionActive]
  -[CMMotionManager applyNorthReference:]


CMMediaSession : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  unsigned int totalSourceIMUSamples
 @property  unsigned int totalAccessoryIMUSamples
 @property  unsigned int totalFacePoseAnchorSamples
 @property  unsigned int accessoryIMUSampleRate
 @property  float prevAmbienceBedRoll
 @property  BOOL overrideDefaultHeadsetOrientation
 @property  {CMOQuaternion=[4f]} headsetOrientationOverride
 @property  BOOL returnDefaultPose
 @property  BOOL returnRandomPose
 @property  BOOL alwaysNotify50HzPose

  // class methods
  +[CMMediaSession _isAvailable]

  // instance methods
  -[CMMediaSession _start]
  -[CMMediaSession _initWithOptions:]
  -[CMMediaSession _reset]
  -[CMMediaSession init]
  -[CMMediaSession .cxx_construct]
  -[CMMediaSession dealloc]
  -[CMMediaSession .cxx_destruct]
  -[CMMediaSession _logEvent:]
  -[CMMediaSession _stop]
  -[CMMediaSession returnDefaultPose]
  -[CMMediaSession returnRandomPose]
  -[CMMediaSession alwaysNotify50HzPose]
  -[CMMediaSession _updateUserSettings]
  -[CMMediaSession _disableLoggingForReplay]
  -[CMMediaSession _startDefaultsPreferenceUpdater]
  -[CMMediaSession _startHeadTracking]
  -[CMMediaSession _notifyClientHandler]
  -[CMMediaSession _stopHeadTracking]
  -[CMMediaSession _stopDefaultsPreferenceUpdater]
  -[CMMediaSession setReturnDefaultPose:]
  -[CMMediaSession setReturnRandomPose:]
  -[CMMediaSession setAlwaysNotify50HzPose:]
  -[CMMediaSession _updateMinQuiescentPeriodForBTZ]
  -[CMMediaSession _feedPredictorEstimates]
  -[CMMediaSession _createPoseFromListenerOrientation:Pose:]
  -[CMMediaSession totalSourceIMUSamples]
  -[CMMediaSession setTotalSourceIMUSamples:]
  -[CMMediaSession _feedPoseAnchor:facePoseError:]
  -[CMMediaSession totalFacePoseAnchorSamples]
  -[CMMediaSession setTotalFacePoseAnchorSamples:]
  -[CMMediaSession feedPoseAnchorWithAttitude:position:timestampUs:]
  -[CMMediaSession totalAccessoryIMUSamples]
  -[CMMediaSession setTotalAccessoryIMUSamples:]
  -[CMMediaSession _getAuxSampleTimestamp:currentTime:]
  -[CMMediaSession _setFixedTransforms:]
  -[CMMediaSession _feedTouchEventTimestamp:]
  -[CMMediaSession _enableLoggingForReplayWithFilenamePrefix:filePath:]
  -[CMMediaSession _startPoseUpdatesToQueue:andHandler:]
  -[CMMediaSession _feedSourceDeviceIMU:]
  -[CMMediaSession _feedFacePose:rotationMatrix:timestamp:error:]
  -[CMMediaSession _feedAccessoryDeviceMotion:]
  -[CMMediaSession _feedAccessoryConfig:]
  -[CMMediaSession _feedAccessoryInEarStatus:]
  -[CMMediaSession _getLastAudioAccessorySample]
  -[CMMediaSession _currentAudioListenerOrientation:]
  -[CMMediaSession accessoryIMUSampleRate]
  -[CMMediaSession _setConvergenceRateForBTZ:]
  -[CMMediaSession setAccessoryIMUSampleRate:]
  -[CMMediaSession prevAmbienceBedRoll]
  -[CMMediaSession setPrevAmbienceBedRoll:]
  -[CMMediaSession overrideDefaultHeadsetOrientation]
  -[CMMediaSession setOverrideDefaultHeadsetOrientation:]
  -[CMMediaSession headsetOrientationOverride]
  -[CMMediaSession setHeadsetOrientationOverride:]


CMCatherineData : CMLogItem
 @property  double catherine
 @property  double confidence

  // class methods
  +[CMCatherineData supportsSecureCoding]

  // instance methods
  -[CMCatherineData copyWithZone:]
  -[CMCatherineData dealloc]
  -[CMCatherineData confidence]
  -[CMCatherineData encodeWithCoder:]
  -[CMCatherineData initWithCatherine:confidence:timestamp:]
  -[CMCatherineData catherine]
  -[CMCatherineData initWithCoder:]


CMSpringTrackerInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMSpringTrackerInternal _isTracking]
  -[CMSpringTrackerInternal init]
  -[CMSpringTrackerInternal dealloc]
  -[CMSpringTrackerInternal _handleStartStopResponse:handler:]
  -[CMSpringTrackerInternal _startWithHandler:]
  -[CMSpringTrackerInternal _stopWithHandler:]
  -[CMSpringTrackerInternal _querySpringDataFromRecord:handler:]
  -[CMSpringTrackerInternal _teardown]


CMSleepTracker : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMSpringTrackerInternal *_internal

  // class methods
  +[CMSleepTracker isAvailable]

  // instance methods
  -[CMSleepTracker init]
  -[CMSleepTracker dealloc]
  -[CMSleepTracker startWithHandler:]
  -[CMSleepTracker stopWithHandler:]
  -[CMSleepTracker querySleepDataFromRecord:handler:]
  -[CMSleepTracker isTracking]
  -[CMSleepTracker _internal]


CMVO2MaxInputs : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  unsigned long recordId
 @property  NSDate *startDate
 @property  double mets
 @property  long long metSource
 @property  double heartRate
 @property  double heartRateConfidence
 @property  double grade
 @property  long long gradeType
 @property  double cadence
 @property  double pace
 @property  BOOL hasGPS
 @property  BOOL hasStrideCal
 @property  long long workoutType

  // class methods
  +[CMVO2MaxInputs supportsSecureCoding]
  +[CMVO2MaxInputs VO2MaxInputFromCMVO2MaxInputs:]

  // instance methods
  -[CMVO2MaxInputs copyWithZone:]
  -[CMVO2MaxInputs mets]
  -[CMVO2MaxInputs pace]
  -[CMVO2MaxInputs recordId]
  -[CMVO2MaxInputs cadence]
  -[CMVO2MaxInputs initWithRecordId:startDate:mets:metSource:heartRate:heartRateConfidence:grade:gradeType:cadence:pace:hasGPS:hasStrideCal:workoutType:]
  -[CMVO2MaxInputs startDate]
  -[CMVO2MaxInputs hasGPS]
  -[CMVO2MaxInputs dealloc]
  -[CMVO2MaxInputs hasStrideCal]
  -[CMVO2MaxInputs encodeWithCoder:]
  -[CMVO2MaxInputs initWithSample:]
  -[CMVO2MaxInputs heartRateConfidence]
  -[CMVO2MaxInputs heartRate]
  -[CMVO2MaxInputs grade]
  -[CMVO2MaxInputs gradeType]
  -[CMVO2MaxInputs metSource]
  -[CMVO2MaxInputs workoutType]
  -[CMVO2MaxInputs initWithCoder:]


CMMotionTimeRange : CMLogItem
 @property  NSDate *startDate
 @property  NSDate *endDate

  // class methods
  +[CMMotionTimeRange supportsSecureCoding]
  +[CMMotionTimeRange CMMotionTimeRangeFromCLMotionTimeRange:]
  +[CMMotionTimeRange CLMotionTimeRangeFromCMMotionTimeRange:]

  // instance methods
  -[CMMotionTimeRange copyWithZone:]
  -[CMMotionTimeRange startDate]
  -[CMMotionTimeRange initWithStartDate:endDate:]
  -[CMMotionTimeRange dealloc]
  -[CMMotionTimeRange encodeWithCoder:]
  -[CMMotionTimeRange endDate]
  -[CMMotionTimeRange initWithCoder:]


CMCallHandednessManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  <CMCallHandednessDelegate> *delegate

  // class methods
  +[CMCallHandednessManager isCallHandednessAvailable]

  // instance methods
  -[CMCallHandednessManager init]
  -[CMCallHandednessManager dealloc]
  -[CMCallHandednessManager onCallHandednessStateUpdated:]
  -[CMCallHandednessManager startCallHandednessUpdates]
  -[CMCallHandednessManager stopCallHandednessUpdates]
  -[CMCallHandednessManager setDelegate:]
  -[CMCallHandednessManager delegate]


CMCalorieUserInfo : CMLogItem
 @property  long long gender
 @property  double age
 @property  double height
 @property  double weight
 @property  long long condition
 @property  BOOL betaBlockerUse

  // class methods
  +[CMCalorieUserInfo supportsSecureCoding]
  +[CMCalorieUserInfo genderString:]

  // instance methods
  -[CMCalorieUserInfo condition]
  -[CMCalorieUserInfo copyWithZone:]
  -[CMCalorieUserInfo weight]
  -[CMCalorieUserInfo age]
  -[CMCalorieUserInfo dealloc]
  -[CMCalorieUserInfo gender]
  -[CMCalorieUserInfo encodeWithCoder:]
  -[CMCalorieUserInfo initWithAge:gender:height:weight:condition:betaBlockerUse:]
  -[CMCalorieUserInfo betaBlockerUse]
  -[CMCalorieUserInfo initWithAge:gender:height:weight:]
  -[CMCalorieUserInfo initWithAge:gender:height:weight:condition:]
  -[CMCalorieUserInfo height]
  -[CMCalorieUserInfo initWithCoder:]


CMSedentaryTimerData : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  NSDate *startDate
 @property  NSDate *firedDate
 @property  long long alarmType
 @property  BOOL didWake

  // class methods
  +[CMSedentaryTimerData supportsSecureCoding]

  // instance methods
  -[CMSedentaryTimerData copyWithZone:]
  -[CMSedentaryTimerData firedDate]
  -[CMSedentaryTimerData startDate]
  -[CMSedentaryTimerData didWake]
  -[CMSedentaryTimerData encodeWithCoder:]
  -[CMSedentaryTimerData alarmType]
  -[CMSedentaryTimerData initWithStartDate:firedDate:alarmType:didWake:]
  -[CMSedentaryTimerData initWithCoder:]


CMExerciseMinuteInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMExerciseMinuteInternal init]
  -[CMExerciseMinuteInternal dealloc]
  -[CMExerciseMinuteInternal _startUpdatesWithHandler:]
  -[CMExerciseMinuteInternal _startUpdatesFromRecord:handler:]
  -[CMExerciseMinuteInternal _queryExerciseMinutesFromRecord:handler:]
  -[CMExerciseMinuteInternal _stopUpdates]
  -[CMExerciseMinuteInternal _teardown]


CMExerciseMinute : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMExerciseMinuteInternal *_internal

  // class methods
  +[CMExerciseMinute maxExerciseMinuteDataEntries]
  +[CMExerciseMinute isExerciseMinuteAvailable]

  // instance methods
  -[CMExerciseMinute init]
  -[CMExerciseMinute stopUpdates]
  -[CMExerciseMinute dealloc]
  -[CMExerciseMinute startUpdatesFromRecord:handler:]
  -[CMExerciseMinute startUpdatesWithHandler:]
  -[CMExerciseMinute queryExerciseMinutesFromRecord:handler:]
  -[CMExerciseMinute _internal]


CMErrorUtils : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CMErrorUtils CMErrorWithCode:]
  +[CMErrorUtils CMErrorWithCode:userInfo:]


CMMotionAlarmManagerInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CMMotionAlarmManagerInternal instance]

  // instance methods
  -[CMMotionAlarmManagerInternal init]
  -[CMMotionAlarmManagerInternal dealloc]
  -[CMMotionAlarmManagerInternal _startListeners]
  -[CMMotionAlarmManagerInternal _stopListeners]
  -[CMMotionAlarmManagerInternal _handleAlarmFire:]
  -[CMMotionAlarmManagerInternal _registerAlarm:error:]
  -[CMMotionAlarmManagerInternal _unregisterAlarm:error:]
  -[CMMotionAlarmManagerInternal _acknowledgeAlarm:error:]
  -[CMMotionAlarmManagerInternal _launchRemoteAppWithError:delegate:]
  -[CMMotionAlarmManagerInternal _teardown]


CMMotionAlarmManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  <CMMotionAlarmDelegateProtocol> *delegate
 @property  NSString *name

  // class methods
  +[CMMotionAlarmManager defaultManager]

  // instance methods
  -[CMMotionAlarmManager initWithName:]
  -[CMMotionAlarmManager init]
  -[CMMotionAlarmManager dealloc]
  -[CMMotionAlarmManager name]
  -[CMMotionAlarmManager unregisterAlarmWithName:error:]
  -[CMMotionAlarmManager acknowledgeAlarmWithName:error:]
  -[CMMotionAlarmManager registerAlarmWithName:type:duration:repeats:error:]
  -[CMMotionAlarmManager launchRemoteAppWithError:]
  -[CMMotionAlarmManager unregisterAlarm:error:]
  -[CMMotionAlarmManager acknowledgeAlarm:error:]
  -[CMMotionAlarmManager setDelegate:]
  -[CMMotionAlarmManager delegate]


CMNatalimeterInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMNatalimeterInternal init]
  -[CMNatalimeterInternal dealloc]
  -[CMNatalimeterInternal _promptsNeeded]
  -[CMNatalimeterInternal _handleQueryResponse:withHandler:]
  -[CMNatalimeterInternal _queryAbsoluteNatalimetryDataSinceRecord:withHandler:]
  -[CMNatalimeterInternal _queryAbsoluteNatalimetryDataSinceDataRecord:withHandler:]
  -[CMNatalimeterInternal _startAbsoluteNatalimetryDataUpdatesWithHandler:]
  -[CMNatalimeterInternal _stopAbsoluteNatalimetryDataUpdates]
  -[CMNatalimeterInternal _teardown]


CMNatalimeter : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMNatalimeterInternal *_internal

  // class methods
  +[CMNatalimeter defaultUserProfile]
  +[CMNatalimeter resetCalibrationDataWithError:]
  +[CMNatalimeter setUserInfo:error:]
  +[CMNatalimeter activeMetsThreshold]
  +[CMNatalimeter isNatalimeterAvailable]
  +[CMNatalimeter briskMinuteMetsThreshold]
  +[CMNatalimeter computeTimeToActiveCalories:user:workoutType:]
  +[CMNatalimeter setUserProfile:error:]
  +[CMNatalimeter maxNatalieEntries]
  +[CMNatalimeter userProfile]
  +[CMNatalimeter computeRestingCaloriesAtRate:user:duration:]

  // instance methods
  -[CMNatalimeter init]
  -[CMNatalimeter dealloc]
  -[CMNatalimeter queryAbsoluteNatalimetryDataSinceRecord:withHandler:]
  -[CMNatalimeter queryAbsoluteNatalimetryDataSinceDataRecord:withHandler:]
  -[CMNatalimeter startAbsoluteNatalimetryDataUpdatesWithHandler:]
  -[CMNatalimeter stopAbsoluteNatalimetryDataUpdates]
  -[CMNatalimeter _internal]


CMOdometerSuitabilityManagerProxy : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMOdometerSuitabilityManager *odometerSuitabilityManager
 @property  double startDate
 @property  double suitableForRunning
 @property  double suitableForWalking

  // instance methods
  -[CMOdometerSuitabilityManagerProxy startDate]
  -[CMOdometerSuitabilityManagerProxy dealloc]
  -[CMOdometerSuitabilityManagerProxy suitableForRunning]
  -[CMOdometerSuitabilityManagerProxy suitableForWalking]
  -[CMOdometerSuitabilityManagerProxy _startDaemonConnection]
  -[CMOdometerSuitabilityManagerProxy _stopOdometerSuitabilityUpdates]
  -[CMOdometerSuitabilityManagerProxy initWithOdometerSuitability:]
  -[CMOdometerSuitabilityManagerProxy odometerSuitabilityManager]
  -[CMOdometerSuitabilityManagerProxy _startOdometerSuitabilityUpdatesWithHandler:]
  -[CMOdometerSuitabilityManagerProxy setOdometerSuitabilityManager:]
  -[CMOdometerSuitabilityManagerProxy setSuitableForRunning:]
  -[CMOdometerSuitabilityManagerProxy setSuitableForWalking:]
  -[CMOdometerSuitabilityManagerProxy _teardown]
  -[CMOdometerSuitabilityManagerProxy setStartDate:]


CMOdometerSuitabilityManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMOdometerSuitabilityManagerProxy *odometerSuitabilityManagerProxy

  // instance methods
  -[CMOdometerSuitabilityManager init]
  -[CMOdometerSuitabilityManager dealloc]
  -[CMOdometerSuitabilityManager odometerSuitabilityManagerProxy]
  -[CMOdometerSuitabilityManager stopOdometerSuitabilityUpdates]
  -[CMOdometerSuitabilityManager startOdometerSuitabilityUpdatesWithHandler:]


CMMagnetometerDataInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSCopying>
  // instance methods
  -[CMMagnetometerDataInternal copyWithZone:]
  -[CMMagnetometerDataInternal setMagneticField:]
  -[CMMagnetometerDataInternal initWithMagneticField:]


CMMagnetometerData : CMLogItem
 @property  {?=ddd} magneticField

  // class methods
  +[CMMagnetometerData supportsSecureCoding]

  // instance methods
  -[CMMagnetometerData copyWithZone:]
  -[CMMagnetometerData dealloc]
  -[CMMagnetometerData magneticField]
  -[CMMagnetometerData initWithMagneticField:andTimestamp:]
  -[CMMagnetometerData encodeWithCoder:]
  -[CMMagnetometerData initWithCoder:]


CMAnomalyManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  <CMAnomalyDelegate> *delegate

  // class methods
  +[CMAnomalyManager isAnomalyDetectionAvailable]
  +[CMAnomalyManager getAnomalyFeatureEnablingStrategyForUserAge:]

  // instance methods
  -[CMAnomalyManager init]
  -[CMAnomalyManager dealloc]
  -[CMAnomalyManager _registerForAnomalyDetection:]
  -[CMAnomalyManager _sendRegistrationForAnomalyEvent:]
  -[CMAnomalyManager startAnomalyDetection]
  -[CMAnomalyManager stopAnomalyDetection]
  -[CMAnomalyManager ackAnomalyEvent:withResolution:]
  -[CMAnomalyManager respondToAnomalyEvent:withResponse:]
  -[CMAnomalyManager resolveAnomalyEvent:withResolution:]
  -[CMAnomalyManager setDelegate:]
  -[CMAnomalyManager delegate]


CMAudioAccessoryManagerInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMAudioAccessoryManagerInternal init]
  -[CMAudioAccessoryManagerInternal .cxx_construct]


CMAudioAccessoryManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  double _audioAccessoryAccelerometerUpdateInterval
 @property  BOOL _audioAccessoryAccelerometerAvailable
 @property  double _audioAccessoryGyroUpdateInterval
 @property  BOOL _audioAccessoryGyroAvailable
 @property  BOOL _audioAccessoryDeviceMotionAvailable
 @property  double _audioAccessoryDeviceMotionUpdateInterval

  // class methods
  +[CMAudioAccessoryManager _selectActiveAudioRouteWithBTAddress:modelID:]
  +[CMAudioAccessoryManager _selectActiveAudioRouteForAccelerometerWithBTAddress:modelID:]
  +[CMAudioAccessoryManager _selectActiveAudioRouteForGyroWithBTAddress:modelID:]
  +[CMAudioAccessoryManager _selectActiveAudioRouteForDeviceMotionWithBTAddress:modelID:]
  +[CMAudioAccessoryManager _isAvailable]

  // instance methods
  -[CMAudioAccessoryManager init]
  -[CMAudioAccessoryManager dealloc]
  -[CMAudioAccessoryManager onAudioAccessoryGyro:]
  -[CMAudioAccessoryManager onAudioAccessoryAccelerometer:]
  -[CMAudioAccessoryManager onAudioAccessoryDeviceMotion:]
  -[CMAudioAccessoryManager onAudioAccessoryDeviceMotionConfig:]
  -[CMAudioAccessoryManager onAudioAccessoryDeviceMotionStatus:]
  -[CMAudioAccessoryManager _isAudioAccessoryGyroAvailablePrivate]
  -[CMAudioAccessoryManager _setAudioAccessoryAccelerometerUpdateIntervalPrivate:]
  -[CMAudioAccessoryManager _isAudioAccessoryAccelerometerAvailablePrivate]
  -[CMAudioAccessoryManager _startAudioAccessoryAccelerometerUpdatesPrivateToQueue:withHandler:]
  -[CMAudioAccessoryManager _isAudioAccessoryAccelerometerAvailable]
  -[CMAudioAccessoryManager _stopAudioAccessoryAccelerometerUpdatesPrivate]
  -[CMAudioAccessoryManager _setAudioAccessoryGyroUpdateIntervalPrivate:]
  -[CMAudioAccessoryManager _startAudioAccessoryGyroUpdatesPrivateToQueue:withHandler:]
  -[CMAudioAccessoryManager _stopAudioAccessoryGyroUpdatesPrivate]
  -[CMAudioAccessoryManager _isAudioAccessoryGyroAvailable]
  -[CMAudioAccessoryManager _isAudioAccessoryDeviceMotionAvailablePrivate]
  -[CMAudioAccessoryManager _audioAccessoryAccelerometerData]
  -[CMAudioAccessoryManager _setAudioAccessoryDeviceMotionUpdateIntervalPrivate:]
  -[CMAudioAccessoryManager _stopAudioAccessoryDeviceMotionUpdatesPrivate]
  -[CMAudioAccessoryManager _startAudioAccessoryDeviceMotionUpdatesPrivate:lowLatencyMode:withHandler:]
  -[CMAudioAccessoryManager _isAudioAccessoryDeviceMotionAvailable]
  -[CMAudioAccessoryManager _startAudioAccessoryDeviceMotionStatusUpdatesPrivate:withHandler:]
  -[CMAudioAccessoryManager _stopAudioAccessoryDeviceMotionStatusUpdatesPrivate]
  -[CMAudioAccessoryManager _setAudioAccessoryAccelerometerUpdateInterval:]
  -[CMAudioAccessoryManager _audioAccessoryAccelerometerUpdateInterval]
  -[CMAudioAccessoryManager _audioAccessoryGyroData]
  -[CMAudioAccessoryManager _startAudioAccessoryAccelerometerUpdatesToQueue:withHandler:]
  -[CMAudioAccessoryManager _stopAudioAccessoryAccelerometerUpdates]
  -[CMAudioAccessoryManager _setAudioAccessoryGyroUpdateInterval:]
  -[CMAudioAccessoryManager _audioAccessoryGyroUpdateInterval]
  -[CMAudioAccessoryManager _stopAudioAccessoryGyroUpdates]
  -[CMAudioAccessoryManager _startAudioAccessoryGyroUpdatesToQueue:withHandler:]
  -[CMAudioAccessoryManager _setAudioAccessoryDeviceMotionUpdateInterval:]
  -[CMAudioAccessoryManager _audioAccessoryDeviceMotionUpdateInterval]
  -[CMAudioAccessoryManager _startAudioAccessoryDeviceMotionStatusUpdatesToQueue:withHandler:]
  -[CMAudioAccessoryManager _startAudioAccessoryDeviceMotionUpdatesToQueue:lowLatencyMode:withHandler:]
  -[CMAudioAccessoryManager _stopAudioAccessoryDeviceMotionUpdates]
  -[CMAudioAccessoryManager _stopAudioAccessoryDeviceMotionStatusUpdates]
  -[CMAudioAccessoryManager initPrivate]
  -[CMAudioAccessoryManager deallocPrivate]


CMHealthTrackerInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMHealthTrackerInternal init]
  -[CMHealthTrackerInternal dealloc]
  -[CMHealthTrackerInternal _queryMetMinutesFromDate:toDate:handler:]
  -[CMHealthTrackerInternal _queryVO2MaxInputsFromRecord:handler:]
  -[CMHealthTrackerInternal _teardown]


CMHealthTracker : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMHealthTrackerInternal *_internal

  // class methods
  +[CMHealthTracker isAuthorizedForMetMinutes]
  +[CMHealthTracker isMetMinutesAvailable]
  +[CMHealthTracker isVO2MaxDataAvailable]
  +[CMHealthTracker isAuthorizedForVO2MaxData]

  // instance methods
  -[CMHealthTracker init]
  -[CMHealthTracker dealloc]
  -[CMHealthTracker queryMetMinutesFromDate:toDate:handler:]
  -[CMHealthTracker queryVO2MaxInputsFromRecord:handler:]
  -[CMHealthTracker _internal]


CLDeviceMotionProperties : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  int mode

  // instance methods
  -[CLDeviceMotionProperties initWithMode:]
  -[CLDeviceMotionProperties mode]
  -[CLDeviceMotionProperties setMode:]


CMElevationData : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <SRSampling, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long recordId
 @property  NSUUID *sourceId
 @property  long long source
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  unsigned long elevationAscended
 @property  unsigned long elevationDescended

  // class methods
  +[CMElevationData supportsSecureCoding]
  +[CMElevationData sourceName:]

  // instance methods
  -[CMElevationData copyWithZone:]
  -[CMElevationData recordId]
  -[CMElevationData startDate]
  -[CMElevationData binarySampleRepresentation]
  -[CMElevationData initWithBinarySampleRepresentation:metadata:timestamp:]
  -[CMElevationData elevationAscended]
  -[CMElevationData elevationDescended]
  -[CMElevationData dealloc]
  -[CMElevationData source]
  -[CMElevationData encodeWithCoder:]
  -[CMElevationData endDate]
  -[CMElevationData initWithSignificantElevationSample:]
  -[CMElevationData initWithStartDate:endDate:elevationAscended:elevationDescended:source:recordId:sourceId:]
  -[CMElevationData sourceId]
  -[CMElevationData initWithCoder:]


CMActivity : CMLogItem
 @property  int confidence
 @property  BOOL isMoving
 @property  BOOL isWalking
 @property  BOOL isRunning
 @property  BOOL isDriving
 @property  BOOL maybeExitingVehicle
 @property  BOOL hasExitedVehicle

  // class methods
  +[CMActivity supportsSecureCoding]

  // instance methods
  -[CMActivity copyWithZone:]
  -[CMActivity activity]
  -[CMActivity confidence]
  -[CMActivity isMoving]
  -[CMActivity encodeWithCoder:]
  -[CMActivity hasExitedVehicle]
  -[CMActivity maybeExitingVehicle]
  -[CMActivity initWithMotionActivity:]
  -[CMActivity isWalking]
  -[CMActivity isDriving]
  -[CMActivity isRunning]
  -[CMActivity initWithCoder:]


CMGestureManagerInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMGestureManagerInternal dealloc]
  -[CMGestureManagerInternal startGestureUpdatesWithHandlerPrivate:]
  -[CMGestureManagerInternal stopGestureUpdatesPrivate]
  -[CMGestureManagerInternal initWithPriority:]


CMGestureManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  @? gestureHandler

  // class methods
  +[CMGestureManager setGestureServiceEnabled:]
  +[CMGestureManager isGestureServiceAvailable]
  +[CMGestureManager isGestureServiceEnabled]

  // instance methods
  -[CMGestureManager init]
  -[CMGestureManager dealloc]
  -[CMGestureManager gestureHandler]
  -[CMGestureManager setGestureHandler:]
  -[CMGestureManager initWithPriority:]


CMActivityManagerInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMActivityManagerInternal disconnect]
  -[CMActivityManagerInternal connect]
  -[CMActivityManagerInternal init]
  -[CMActivityManagerInternal dealloc]
  -[CMActivityManagerInternal startActivityUpdatesWithHandlerPrivate:]
  -[CMActivityManagerInternal stopActivityUpdatesPrivate]
  -[CMActivityManagerInternal overrideOscarSideband:withState:]
  -[CMActivityManagerInternal simulateMotionState:withState:]
  -[CMActivityManagerInternal simulateMotionStateYouthWithState:]


CMActivityManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  @? activityHandler
 @property  BOOL activityAvailable

  // instance methods
  -[CMActivityManager activityHandler]
  -[CMActivityManager init]
  -[CMActivityManager dealloc]
  -[CMActivityManager overrideOscarSideband:withState:]
  -[CMActivityManager simulateMotionState:withState:]
  -[CMActivityManager simulateMotionStateYouthWithState:]
  -[CMActivityManager setActivityHandler:]
  -[CMActivityManager isActivityAvailable]


CMPedometerProxy : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMPedometerProxy _queryPedometerCalibrationBinsWithHandler:forType:forRemote:]
  -[CMPedometerProxy init]
  -[CMPedometerProxy _queryPedometerDataSinceDataRecord:withHandler:shouldStartUpdates:]
  -[CMPedometerProxy dealloc]
  -[CMPedometerProxy _startPedometerUpdatesSinceDataRecord:withHandler:]
  -[CMPedometerProxy _stopPedometerEventUpdates]
  -[CMPedometerProxy _strideCalibrationDump]
  -[CMPedometerProxy _internalQueryPedometerDataFromDate:toDate:onQueue:withHandler:]
  -[CMPedometerProxy _stopPedometerUpdates]
  -[CMPedometerProxy _handleRecordQueryResponse:withHandler:shouldStartUpdates:]
  -[CMPedometerProxy _handleQueryResponse:onQueue:withHandler:]
  -[CMPedometerProxy _queryPedometerDataFromDate:toDate:withHandler:]
  -[CMPedometerProxy _teardown]
  -[CMPedometerProxy _startPedometerUpdatesFromDate:withHandler:]
  -[CMPedometerProxy _startPedometerEventUpdatesWithHandler:]
  -[CMPedometerProxy _subscribeToCumulativePedometerUpdates:]


CMPedometer : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMPedometerProxy *pedometerProxy

  // class methods
  +[CMPedometer authorizationStatus]
  +[CMPedometer isPedometerEventTrackingAvailable]
  +[CMPedometer isStepCountingAvailable]
  +[CMPedometer isFloorCountingAvailable]
  +[CMPedometer isDistanceAvailable]
  +[CMPedometer isPaceAvailable]
  +[CMPedometer isCadenceAvailable]
  +[CMPedometer isAllDayElevationAvailable]

  // instance methods
  -[CMPedometer init]
  -[CMPedometer dealloc]
  -[CMPedometer _startPedometerUpdatesSinceDataRecord:withHandler:]
  -[CMPedometer pedometerProxy]
  -[CMPedometer _pedometerDataWithRecordID:]
  -[CMPedometer strideCalibrationDump]
  -[CMPedometer _queryPedometerDataSinceDataRecord:withHandler:]
  -[CMPedometer queryPedometerDataFromDate:toDate:withHandler:]
  -[CMPedometer startPedometerUpdatesFromDate:withHandler:]
  -[CMPedometer stopPedometerUpdates]
  -[CMPedometer queryPedometerDataSinceRecord:withHandler:]
  -[CMPedometer queryPedometerDataSinceDataRecord:withHandler:]
  -[CMPedometer startPedometerEventUpdatesWithHandler:]
  -[CMPedometer stopPedometerEventUpdates]
  -[CMPedometer sendStrideCalibrationHistoryToFile:]
  -[CMPedometer queryRawSpeedToKValueBinsWithHandler:]
  -[CMPedometer queryRemoteRawSpeedToKValueBinsWithHandler:]
  -[CMPedometer queryStepCadenceToStrideLengthBinsWithHandler:]
  -[CMPedometer queryRemoteStepCadenceToStrideLengthBinsWithHandler:]


CMFitnessJuniorGoals : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CMFitnessJuniorGoals isAvailable]
  +[CMFitnessJuniorGoals recommendedMoveMinutesForLevel:userInfo:error:]

  // instance methods
  -[CMFitnessJuniorGoals init]
  -[CMFitnessJuniorGoals dealloc]


CLCompassDatabaseAdapter : CLNotifierServiceAdapter <CLCompassDatabaseProtocol>
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CLCompassDatabaseAdapter isSupported]
  +[CLCompassDatabaseAdapter becameFatallyBlocked:index:]
  +[CLCompassDatabaseAdapter performSyncOnSilo:invoker:]
  +[CLCompassDatabaseAdapter getSilo]

  // instance methods
  -[CLCompassDatabaseAdapter init]
  -[CLCompassDatabaseAdapter endService]
  -[CLCompassDatabaseAdapter doAsync:]
  -[CLCompassDatabaseAdapter beginService]
  -[CLCompassDatabaseAdapter syncgetLookupBiasWithMagneticField:acceleration:bias:level:noResults:]
  -[CLCompassDatabaseAdapter getBiasWithMagneticField:acceleration:]
  -[CLCompassDatabaseAdapter dumpDatabase:onCompletion:]
  -[CLCompassDatabaseAdapter setBias:withMagneticField:level:magnitude:inclination:]
  -[CLCompassDatabaseAdapter adaptee]
  -[CLCompassDatabaseAdapter syncgetDoSync:]
  -[CLCompassDatabaseAdapter syncgetPendingSetBiasCount]
  -[CLCompassDatabaseAdapter doAsync:withReply:]


CMAnomalyEvent : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  long long response
 @property  long long resolution
 @property  BOOL acknowledgement
 @property  double absoluteTimestamp
 @property  NSDate *timestamp
 @property  NSDate *date
 @property  unsigned long identifier
 @property  long long state

  // class methods
  +[CMAnomalyEvent supportsSecureCoding]

  // instance methods
  -[CMAnomalyEvent copyWithZone:]
  -[CMAnomalyEvent setAbsoluteTimestamp:]
  -[CMAnomalyEvent date]
  -[CMAnomalyEvent timestamp]
  -[CMAnomalyEvent encodeWithCoder:]
  -[CMAnomalyEvent identifier]
  -[CMAnomalyEvent resolution]
  -[CMAnomalyEvent setAcknowledgement:]
  -[CMAnomalyEvent initWithIdentifier:absoluteTimestamp:state:response:resolution:]
  -[CMAnomalyEvent initWithIdentifier:absoluteTimestamp:state:response:resolution:acknowledgement:]
  -[CMAnomalyEvent isAcknowledgement]
  -[CMAnomalyEvent absoluteTimestamp]
  -[CMAnomalyEvent setResponse:]
  -[CMAnomalyEvent state]
  -[CMAnomalyEvent setResolution:]
  -[CMAnomalyEvent initWithCoder:]
  -[CMAnomalyEvent response]


CMOdometerData : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <SRSampling, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSNumber *distance
 @property  NSNumber *currentSpeed
 @property  NSNumber *averageSpeed

  // class methods
  +[CMOdometerData supportsSecureCoding]

  // instance methods
  -[CMOdometerData copyWithZone:]
  -[CMOdometerData distance]
  -[CMOdometerData startDate]
  -[CMOdometerData binarySampleRepresentation]
  -[CMOdometerData initWithBinarySampleRepresentation:metadata:timestamp:]
  -[CMOdometerData dealloc]
  -[CMOdometerData currentSpeed]
  -[CMOdometerData averageSpeed]
  -[CMOdometerData initWithDistance:startDate:endDate:currentSpeed:averageSpeed:]
  -[CMOdometerData encodeWithCoder:]
  -[CMOdometerData endDate]
  -[CMOdometerData initWithCoder:]


CLGeomagneticModelProviderAdapter : CLNotifierServiceAdapter <CLGeomagneticModelProviderProtocol>
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CLGeomagneticModelProviderAdapter isSupported]
  +[CLGeomagneticModelProviderAdapter becameFatallyBlocked:index:]
  +[CLGeomagneticModelProviderAdapter performSyncOnSilo:invoker:]
  +[CLGeomagneticModelProviderAdapter getSilo]

  // instance methods
  -[CLGeomagneticModelProviderAdapter init]
  -[CLGeomagneticModelProviderAdapter fetchGeomagneticModelData:]
  -[CLGeomagneticModelProviderAdapter endService]
  -[CLGeomagneticModelProviderAdapter doAsync:]
  -[CLGeomagneticModelProviderAdapter beginService]
  -[CLGeomagneticModelProviderAdapter adaptee]
  -[CLGeomagneticModelProviderAdapter syncgetDoSync:]
  -[CLGeomagneticModelProviderAdapter doAsync:withReply:]


CMStrideCalibrationData : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  long long state
 @property  double kValue
 @property  double begin
 @property  double end

  // class methods
  +[CMStrideCalibrationData supportsSecureCoding]

  // instance methods
  -[CMStrideCalibrationData copyWithZone:]
  -[CMStrideCalibrationData kValue]
  -[CMStrideCalibrationData setState:]
  -[CMStrideCalibrationData end]
  -[CMStrideCalibrationData encodeWithCoder:]
  -[CMStrideCalibrationData begin]
  -[CMStrideCalibrationData setEnd:]
  -[CMStrideCalibrationData setKValue:]
  -[CMStrideCalibrationData initWithBegin:end:state:kValue:]
  -[CMStrideCalibrationData state]
  -[CMStrideCalibrationData setBegin:]
  -[CMStrideCalibrationData initWithCoder:]


CMFitnessMachineInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMFitnessMachineInternal init]
  -[CMFitnessMachineInternal dealloc]
  -[CMFitnessMachineInternal _feedFitnessMachineData:]
  -[CMFitnessMachineInternal _teardown]


CMFitnessMachine : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMFitnessMachineInternal *_internal

  // class methods
  +[CMFitnessMachine isAvailable]

  // instance methods
  -[CMFitnessMachine init]
  -[CMFitnessMachine dealloc]
  -[CMFitnessMachine feedFitnessMachineData:]
  -[CMFitnessMachine _internal]


CLLocationInternalClient_CoreMotion : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CLLocationInternalClient_CoreMotion sharedServiceClient]

  // instance methods
  -[CLLocationInternalClient_CoreMotion configure:]
  -[CLLocationInternalClient_CoreMotion performMigration]
  -[CLLocationInternalClient_CoreMotion setTemporaryAuthorizationGranted:forBundleID:orBundlePath:]
  -[CLLocationInternalClient_CoreMotion setBackgroundIndicatorForBundleID:orBundlePath:enabled:]
  -[CLLocationInternalClient_CoreMotion copyGnssBandsInUse]
  -[CLLocationInternalClient_CoreMotion startStopAdvertisingBeacon:power:]
  -[CLLocationInternalClient_CoreMotion checkAndExerciseAuthorizationForBundleID:orBundlePath:services:error:]
  -[CLLocationInternalClient_CoreMotion timeZoneAtLocation:]
  -[CLLocationInternalClient_CoreMotion compassCalibrationDatabaseGetBias:magneticField:acceleration:]
  -[CLLocationInternalClient_CoreMotion shutdownDaemon]
  -[CLLocationInternalClient_CoreMotion getAuthorizationPromptMapDisplayEnabled:]
  -[CLLocationInternalClient_CoreMotion timeSyncMachTimeStamp:oscarTimeStamp:]
  -[CLLocationInternalClient_CoreMotion setAuthorizationPromptMapDisplayEnabled:]
  -[CLLocationInternalClient_CoreMotion getLocationDefaultForKey:]
  -[CLLocationInternalClient_CoreMotion getTemporaryAuthorizationStatusForBundleId:orBundlePath:error:]
  -[CLLocationInternalClient_CoreMotion getStatusBarIconEnabled:forEntityClass:]
  -[CLLocationInternalClient_CoreMotion setMapMatchingRouteHint:count:routingType:stepType:]
  -[CLLocationInternalClient_CoreMotion setStatusBarIconEnabled:forEntityClass:]
  -[CLLocationInternalClient_CoreMotion getPrecisionPermission:forBundleID:orBundlePath:]
  -[CLLocationInternalClient_CoreMotion getGyroCalibrationDatabaseNumTemperatures:]
  -[CLLocationInternalClient_CoreMotion copyTechnologiesInUse]
  -[CLLocationInternalClient_CoreMotion setAuthorizationStatus:withCorrectiveCompensation:forBundleID:orBundlePath:]
  -[CLLocationInternalClient_CoreMotion getPipelinedCache]
  -[CLLocationInternalClient_CoreMotion setGestureServiceEnabled:]
  -[CLLocationInternalClient_CoreMotion getLocationServicesEnabled:]
  -[CLLocationInternalClient_CoreMotion setLocationServicesEnabled:]
  -[CLLocationInternalClient_CoreMotion copyNearbyAssetSettings]
  -[CLLocationInternalClient_CoreMotion getAccessoryTypeBitSet]
  -[CLLocationInternalClient_CoreMotion getStatusBarIconState]
  -[CLLocationInternalClient_CoreMotion setAuthorizationStatusByType:withCorrectiveCompensation:forBundleID:orBundlePath:]
  -[CLLocationInternalClient_CoreMotion triggerExpiredAuthorizationPurgeOnClientManager]
  -[CLLocationInternalClient_CoreMotion notifyPassKitPayment:transaction:info:]
  -[CLLocationInternalClient_CoreMotion applyArchivedAuthorizationDecisions:]
  -[CLLocationInternalClient_CoreMotion dumpLogs:]
  -[CLLocationInternalClient_CoreMotion notifyWeatherForecast:airQualityConditions:hourlyForecasts:dailyForecasts:latitude:longitude:]
  -[CLLocationInternalClient_CoreMotion getLocationForBundleID:orBundlePath:dynamicAccuracyReductionEnabled:allowsAlteredAccessoryLocations:location:]
  -[CLLocationInternalClient_CoreMotion deleteCurrentEmergencyLocationAsset]
  -[CLLocationInternalClient_CoreMotion modifyOrSetAuthorizationTime:forBundleID:orBundlePath:]
  -[CLLocationInternalClient_CoreMotion copyLastLog]
  -[CLLocationInternalClient_CoreMotion getArchivedAuthorizationDecisionsWithError:]
  -[CLLocationInternalClient_CoreMotion getGestureServiceEnabled:]
  -[CLLocationInternalClient_CoreMotion gyroCalibrationDatabaseWipe]
  -[CLLocationInternalClient_CoreMotion getMotionSensorLogs]
  -[CLLocationInternalClient_CoreMotion clearLocationAuthorizations]
  -[CLLocationInternalClient_CoreMotion getPrivateMode]
  -[CLLocationInternalClient_CoreMotion insertGyroCalibrationDatabaseBiasEstimateIfValid:temperature:variance:timestamp:]
  -[CLLocationInternalClient_CoreMotion getGyroCalibrationDatabaseBiasFit:atTemperature:]
  -[CLLocationInternalClient_CoreMotion updateCorrectiveCompensationChoiceForOutstandingPrompt:]
  -[CLLocationInternalClient_CoreMotion copyAppsUsingLocation]
  -[CLLocationInternalClient_CoreMotion pingDaemon]
  -[CLLocationInternalClient_CoreMotion getEmergencyLocationSettingsCompatibilityVersion:andContentVersion:]
  -[CLLocationInternalClient_CoreMotion getIncidentalUseMode:forBundleID:orBundlePath:]
  -[CLLocationInternalClient_CoreMotion displayStatistics]
  -[CLLocationInternalClient_CoreMotion compassCalibrationDatabaseSetBias:magneticField:level:magnitude:inclination:]
  -[CLLocationInternalClient_CoreMotion copyMonitoredRegionsForBundleIdentifier:orBundlePath:]
  -[CLLocationInternalClient_CoreMotion setPrivateMode:]
  -[CLLocationInternalClient_CoreMotion copyActivityAlarms]
  -[CLLocationInternalClient_CoreMotion connection]
  -[CLLocationInternalClient_CoreMotion setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:]
  -[CLLocationInternalClient_CoreMotion synchronousRemoteObject]
  -[CLLocationInternalClient_CoreMotion setIncidentalUseMode:forBundleID:orBundlePath:]
  -[CLLocationInternalClient_CoreMotion getControlPlaneStatusReportClear:startTime:endTime:latitude:longitude:altitude:accuracy:status:]
  -[CLLocationInternalClient_CoreMotion copyNearbyAssetSettingsOfAccessoryFile:]
  -[CLLocationInternalClient_CoreMotion setLocationDefaultForKey:value:]
  -[CLLocationInternalClient_CoreMotion shouldDisplayEEDUI]
  -[CLLocationInternalClient_CoreMotion getAuthorizationStatus:forBundleID:orBundlePath:]
  -[CLLocationInternalClient_CoreMotion getGroundAltitudeForBundleID:orBundlePath:location:groundAltitude:]
  -[CLLocationInternalClient_CoreMotion gyroCalibrationDatabaseSupportsMiniCalibration:]
  -[CLLocationInternalClient_CoreMotion getAccessoryMotionSensorLogs]


CLSensorRecorderSensorMeta : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding>
 @property  unsigned long identifier
 @property  double startTime
 @property  unsigned long timestamp
 @property  unsigned long dataIdentifier
 @property  unsigned int offset
 @property  unsigned int dataSize
 @property  int dataType
 @property  BOOL movement

  // class methods
  +[CLSensorRecorderSensorMeta supportsSecureCoding]

  // instance methods
  -[CLSensorRecorderSensorMeta setStartTime:]
  -[CLSensorRecorderSensorMeta movement]
  -[CLSensorRecorderSensorMeta initWithDataType:]
  -[CLSensorRecorderSensorMeta dataSize]
  -[CLSensorRecorderSensorMeta dataIdentifier]
  -[CLSensorRecorderSensorMeta timestamp]
  -[CLSensorRecorderSensorMeta setTimestamp:]
  -[CLSensorRecorderSensorMeta setOffset:]
  -[CLSensorRecorderSensorMeta dataType]
  -[CLSensorRecorderSensorMeta setIdentifier:]
  -[CLSensorRecorderSensorMeta encodeWithCoder:]
  -[CLSensorRecorderSensorMeta identifier]
  -[CLSensorRecorderSensorMeta setDataIdentifier:]
  -[CLSensorRecorderSensorMeta setMovement:]
  -[CLSensorRecorderSensorMeta offset]
  -[CLSensorRecorderSensorMeta setDataType:]
  -[CLSensorRecorderSensorMeta setDataSize:]
  -[CLSensorRecorderSensorMeta initWithCoder:]
  -[CLSensorRecorderSensorMeta startTime]


CLSensorRecorderSensorMetaRequestById : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding>
 @property  unsigned long identifier
 @property  int dataType

  // class methods
  +[CLSensorRecorderSensorMetaRequestById supportsSecureCoding]

  // instance methods
  -[CLSensorRecorderSensorMetaRequestById dataType]
  -[CLSensorRecorderSensorMetaRequestById setIdentifier:]
  -[CLSensorRecorderSensorMetaRequestById encodeWithCoder:]
  -[CLSensorRecorderSensorMetaRequestById identifier]
  -[CLSensorRecorderSensorMetaRequestById setDataType:]
  -[CLSensorRecorderSensorMetaRequestById initWithCoder:]


CLSensorRecorderSensorMetaRequestByDateRange : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding>
 @property  double startTime
 @property  double endTime
 @property  int dataType

  // class methods
  +[CLSensorRecorderSensorMetaRequestByDateRange supportsSecureCoding]

  // instance methods
  -[CLSensorRecorderSensorMetaRequestByDateRange endTime]
  -[CLSensorRecorderSensorMetaRequestByDateRange setEndTime:]
  -[CLSensorRecorderSensorMetaRequestByDateRange setStartTime:]
  -[CLSensorRecorderSensorMetaRequestByDateRange dataType]
  -[CLSensorRecorderSensorMetaRequestByDateRange encodeWithCoder:]
  -[CLSensorRecorderSensorMetaRequestByDateRange setDataType:]
  -[CLSensorRecorderSensorMetaRequestByDateRange initWithCoder:]
  -[CLSensorRecorderSensorMetaRequestByDateRange startTime]


CLSensorRecorderSensorDataRequestById : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding>
 @property  unsigned long identifier
 @property  unsigned long metaIdentifier
 @property  int dataType

  // class methods
  +[CLSensorRecorderSensorDataRequestById supportsSecureCoding]

  // instance methods
  -[CLSensorRecorderSensorDataRequestById setMetaIdentifier:]
  -[CLSensorRecorderSensorDataRequestById dataType]
  -[CLSensorRecorderSensorDataRequestById setIdentifier:]
  -[CLSensorRecorderSensorDataRequestById encodeWithCoder:]
  -[CLSensorRecorderSensorDataRequestById identifier]
  -[CLSensorRecorderSensorDataRequestById metaIdentifier]
  -[CLSensorRecorderSensorDataRequestById setDataType:]
  -[CLSensorRecorderSensorDataRequestById initWithCoder:]


CLSensorRecorderRecordSensorTypeFor : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding>
 @property  double duration
 @property  int dataType

  // class methods
  +[CLSensorRecorderRecordSensorTypeFor supportsSecureCoding]

  // instance methods
  -[CLSensorRecorderRecordSensorTypeFor dataType]
  -[CLSensorRecorderRecordSensorTypeFor encodeWithCoder:]
  -[CLSensorRecorderRecordSensorTypeFor setDuration:]
  -[CLSensorRecorderRecordSensorTypeFor setDataType:]
  -[CLSensorRecorderRecordSensorTypeFor initWithCoder:]
  -[CLSensorRecorderRecordSensorTypeFor duration]


CLSensorRecorderWriteSensorDataToFileForDateRange : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding>
 @property  double startTime
 @property  double endTime
 @property  int dataType

  // class methods
  +[CLSensorRecorderWriteSensorDataToFileForDateRange supportsSecureCoding]

  // instance methods
  -[CLSensorRecorderWriteSensorDataToFileForDateRange endTime]
  -[CLSensorRecorderWriteSensorDataToFileForDateRange setEndTime:]
  -[CLSensorRecorderWriteSensorDataToFileForDateRange setStartTime:]
  -[CLSensorRecorderWriteSensorDataToFileForDateRange dataType]
  -[CLSensorRecorderWriteSensorDataToFileForDateRange encodeWithCoder:]
  -[CLSensorRecorderWriteSensorDataToFileForDateRange setDataType:]
  -[CLSensorRecorderWriteSensorDataToFileForDateRange initWithCoder:]
  -[CLSensorRecorderWriteSensorDataToFileForDateRange startTime]


CLSensorRecorderSensorAvailable : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding>
 @property  int dataType

  // class methods
  +[CLSensorRecorderSensorAvailable supportsSecureCoding]

  // instance methods
  -[CLSensorRecorderSensorAvailable dataType]
  -[CLSensorRecorderSensorAvailable encodeWithCoder:]
  -[CLSensorRecorderSensorAvailable setDataType:]
  -[CLSensorRecorderSensorAvailable initWithCoder:]


CLSensorRecorderSensorSampleRate : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding>
 @property  unsigned int rate
 @property  int dataType

  // class methods
  +[CLSensorRecorderSensorSampleRate supportsSecureCoding]

  // instance methods
  -[CLSensorRecorderSensorSampleRate rate]
  -[CLSensorRecorderSensorSampleRate setRate:]
  -[CLSensorRecorderSensorSampleRate dataType]
  -[CLSensorRecorderSensorSampleRate encodeWithCoder:]
  -[CLSensorRecorderSensorSampleRate setDataType:]
  -[CLSensorRecorderSensorSampleRate initWithCoder:]


CMAbsoluteAltitudeData : CMLogItem
 @property  NSNumber *absoluteAltitude
 @property  double absoluteAltitudeAccuracy
 @property  double absoluteAltitudePrecision
 @property  long long absoluteAltitudeStatusInfo

  // class methods
  +[CMAbsoluteAltitudeData supportsSecureCoding]

  // instance methods
  -[CMAbsoluteAltitudeData copyWithZone:]
  -[CMAbsoluteAltitudeData dealloc]
  -[CMAbsoluteAltitudeData encodeWithCoder:]
  -[CMAbsoluteAltitudeData setAltitudeData:accuracy:precision:andStatus:]
  -[CMAbsoluteAltitudeData absoluteAltitude]
  -[CMAbsoluteAltitudeData initWithAltitude:accuracy:precision:status:timestamp:]
  -[CMAbsoluteAltitudeData absoluteAltitudeAccuracy]
  -[CMAbsoluteAltitudeData absoluteAltitudePrecision]
  -[CMAbsoluteAltitudeData absoluteAltitudeStatusInfo]
  -[CMAbsoluteAltitudeData initWithCoder:]


CMAnomalyMessenger : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMAnomalyMessenger reportAnomalousEventWithDate:results:]


CMMotionActivity : CMLogItem
 @property  BOOL vehicleConnected
 @property  BOOL vehicleWifiHint
 @property  BOOL vehicleGpsHint
 @property  BOOL vehicleBasebandHint
 @property  BOOL vehicleMotionHint
 @property  BOOL vehicleBTHint
 @property  long long confidence
 @property  NSDate *startDate
 @property  BOOL unknown
 @property  BOOL stationary
 @property  BOOL walking
 @property  BOOL running
 @property  BOOL automotive
 @property  BOOL cycling

  // class methods
  +[CMMotionActivity supportsSecureCoding]

  // instance methods
  -[CMMotionActivity running]
  -[CMMotionActivity copyWithZone:]
  -[CMMotionActivity unknown]
  -[CMMotionActivity startDate]
  -[CMMotionActivity motionActivity]
  -[CMMotionActivity stationary]
  -[CMMotionActivity confidence]
  -[CMMotionActivity encodeWithCoder:]
  -[CMMotionActivity cycling]
  -[CMMotionActivity initWithMotionActivity:]
  -[CMMotionActivity isVehicleConnected]
  -[CMMotionActivity isVehicleWifiHint]
  -[CMMotionActivity isVehicleGpsHint]
  -[CMMotionActivity isVehicleBasebandHint]
  -[CMMotionActivity isVehicleMotionHint]
  -[CMMotionActivity isVehicleBTHint]
  -[CMMotionActivity walking]
  -[CMMotionActivity automotive]
  -[CMMotionActivity initWithCoder:]


CMPickupManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  <CMPickupDelegate> *delegate

  // class methods
  +[CMPickupManager isPickupAvailable]

  // instance methods
  -[CMPickupManager init]
  -[CMPickupManager dealloc]
  -[CMPickupManager onPickupStateUpdated:]
  -[CMPickupManager startPickupUpdates]
  -[CMPickupManager stopPickupUpdates]
  -[CMPickupManager setDelegate:]
  -[CMPickupManager delegate]


CMPedometerData : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <SRSampling, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long recordId
 @property  NSUUID *sourceId
 @property  NSNumber *numberOfPushes
 @property  NSNumber *workoutType
 @property  NSNumber *elevationAscended
 @property  NSNumber *elevationDescended
 @property  NSNumber *distanceSource
 @property  NSDate *firstStepTime
 @property  NSNumber *activeTime
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSNumber *numberOfSteps
 @property  NSNumber *distance
 @property  NSNumber *floorsAscended
 @property  NSNumber *floorsDescended
 @property  NSNumber *currentPace
 @property  NSNumber *currentCadence
 @property  NSNumber *averageActivePace

  // class methods
  +[CMPedometerData supportsSecureCoding]
  +[CMPedometerData maxPedometerEntries]

  // instance methods
  -[CMPedometerData copyWithZone:]
  -[CMPedometerData distance]
  -[CMPedometerData recordId]
  -[CMPedometerData initWithStartDate:endDate:steps:distance:floorsAscended:floorsDescended:recordID:currentPace:currentCadence:firstStepTime:activeTime:sourceId:isOdometerDistance:isOdometerPace:pushes:workoutType:elevationAscended:elevationDescended:distanceSource:]
  -[CMPedometerData activeTime]
  -[CMPedometerData startDate]
  -[CMPedometerData firstStepTime]
  -[CMPedometerData binarySampleRepresentation]
  -[CMPedometerData initWithBinarySampleRepresentation:metadata:timestamp:]
  -[CMPedometerData elevationAscended]
  -[CMPedometerData elevationDescended]
  -[CMPedometerData dealloc]
  -[CMPedometerData encodeWithCoder:]
  -[CMPedometerData numberOfSteps]
  -[CMPedometerData currentPace]
  -[CMPedometerData endDate]
  -[CMPedometerData isOdometerDistance]
  -[CMPedometerData numberOfPushes]
  -[CMPedometerData currentCadence]
  -[CMPedometerData isOdometerPace]
  -[CMPedometerData averageActivePace]
  -[CMPedometerData distanceSource]
  -[CMPedometerData floorsDescended]
  -[CMPedometerData floorsAscended]
  -[CMPedometerData workoutType]
  -[CMPedometerData sourceId]
  -[CMPedometerData initWithCoder:]


CMPedometerEvent : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  NSDate *date
 @property  long long type

  // class methods
  +[CMPedometerEvent supportsSecureCoding]
  +[CMPedometerEvent eventStringFromType:]

  // instance methods
  -[CMPedometerEvent copyWithZone:]
  -[CMPedometerEvent dealloc]
  -[CMPedometerEvent date]
  -[CMPedometerEvent encodeWithCoder:]
  -[CMPedometerEvent type]
  -[CMPedometerEvent initWithEventDate:type:]
  -[CMPedometerEvent initWithCoder:]


CMDeviceOrientation : CMLogItem
 @property  int orientation

  // class methods
  +[CMDeviceOrientation supportsSecureCoding]

  // instance methods
  -[CMDeviceOrientation copyWithZone:]
  -[CMDeviceOrientation initWithOrientation:andTimestamp:]
  -[CMDeviceOrientation dealloc]
  -[CMDeviceOrientation encodeWithCoder:]
  -[CMDeviceOrientation orientation]
  -[CMDeviceOrientation initWithCoder:]


CMDeviceOrientationManagerInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMDeviceOrientationManagerInternal init]
  -[CMDeviceOrientationManagerInternal dealloc]


CMDeviceOrientationManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CMDeviceOrientationManager isAvailable]
  +[CMDeviceOrientationManager initialize]
  +[CMDeviceOrientationManager dummySelector:]
  +[CMDeviceOrientationManager isAlwaysOn]

  // instance methods
  -[CMDeviceOrientationManager isDeviceOrientationAvailable]
  -[CMDeviceOrientationManager init]
  -[CMDeviceOrientationManager startDeviceOrientationUpdatesToQueue:withHandler:]
  -[CMDeviceOrientationManager isDeviceOrientationActive]
  -[CMDeviceOrientationManager deviceOrientationBlocking]
  -[CMDeviceOrientationManager stopDeviceOrientationUpdates]
  -[CMDeviceOrientationManager updateAggregateDictionaryPrivate]
  -[CMDeviceOrientationManager dealloc]
  -[CMDeviceOrientationManager orientationNotificationsDisabled]
  -[CMDeviceOrientationManager stringForOrientation:]
  -[CMDeviceOrientationManager onNotification:]
  -[CMDeviceOrientationManager onDeviceOrientation:]
  -[CMDeviceOrientationManager stop]
  -[CMDeviceOrientationManager stopDeviceOrientationUpdatesPrivate]
  -[CMDeviceOrientationManager setDeviceOrientationCallbackModePrivate:]
  -[CMDeviceOrientationManager initPrivate]
  -[CMDeviceOrientationManager signalAndReleaseSemaphoreIfNecessaryPrivate]
  -[CMDeviceOrientationManager startDeviceOrientationUpdatesPrivateToQueue:withHandler:]
  -[CMDeviceOrientationManager onMotionPreferencesUpdated]
  -[CMDeviceOrientationManager deallocPrivate]
  -[CMDeviceOrientationManager start]


CMPocketStateQueueBlockPair : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMPocketStateQueueBlockPair dealloc]
  -[CMPocketStateQueueBlockPair dispatchWithState:andError:]
  -[CMPocketStateQueueBlockPair initWithQueue:andBlock:]


CMPocketStateManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  <CMPocketStateDelegate> *delegate

  // class methods
  +[CMPocketStateManager isPocketStateAvailable]

  // instance methods
  -[CMPocketStateManager init]
  -[CMPocketStateManager dealloc]
  -[CMPocketStateManager onNotification:]
  -[CMPocketStateManager onPocketStateUpdated:]
  -[CMPocketStateManager addToAggdScalarWithName:andScalar:]
  -[CMPocketStateManager queryStateOntoQueue:andMonitorFor:withTimeout:andHandler:]
  -[CMPocketStateManager translateInternalState:]
  -[CMPocketStateManager externalStateToString:]
  -[CMPocketStateManager _disableDispatcher]
  -[CMPocketStateManager queryStateOntoQueue:withTimeout:andHandler:]
  -[CMPocketStateManager setDelegate:]
  -[CMPocketStateManager delegate]


CMSleepData : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  unsigned long recordId
 @property  NSUUID *sourceId
 @property  NSUUID *sessionId
 @property  NSDate *eventTime
 @property  long long eventType

  // class methods
  +[CMSleepData supportsSecureCoding]
  +[CMSleepData eventTypeName:]

  // instance methods
  -[CMSleepData copyWithZone:]
  -[CMSleepData recordId]
  -[CMSleepData sessionId]
  -[CMSleepData dealloc]
  -[CMSleepData eventType]
  -[CMSleepData eventTime]
  -[CMSleepData encodeWithCoder:]
  -[CMSleepData initWithSessionId:]
  -[CMSleepData initWithRecordId:sourceId:sessionId:eventTime:eventType:]
  -[CMSleepData convertToSpringTrackerEntry:]
  -[CMSleepData initWithSpringEntry:]
  -[CMSleepData sourceId]
  -[CMSleepData initWithCoder:]


CMFall : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CMFall areStatsAvailable]

  // instance methods
  -[CMFall setStatsEnabled:]
  -[CMFall fallConfig]
  -[CMFall setDataCollectionConfiguration:]
  -[CMFall sendStatsDataToUrl:]
  -[CMFall sendStatsDataToUrl:onCompletion:]
  -[CMFall simulateEvent:]


CMSkiTrackerInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMSkiTrackerInternal init]
  -[CMSkiTrackerInternal dealloc]
  -[CMSkiTrackerInternal _startUpdatesFromRecord:handler:]
  -[CMSkiTrackerInternal _stopUpdates]
  -[CMSkiTrackerInternal _handleUpdates:]
  -[CMSkiTrackerInternal _queryUpdatesFromRecord:handler:]
  -[CMSkiTrackerInternal _teardown]


CMSkiTracker : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMSkiTrackerInternal *_internal

  // class methods
  +[CMSkiTracker isAvailable]

  // instance methods
  -[CMSkiTracker init]
  -[CMSkiTracker stopUpdates]
  -[CMSkiTracker dealloc]
  -[CMSkiTracker startUpdatesFromRecord:handler:]
  -[CMSkiTracker querySkiUpdatesFromRecord:handler:]
  -[CMSkiTracker _internal]


CMCatherineFeederInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMCatherineFeederInternal init]
  -[CMCatherineFeederInternal dealloc]
  -[CMCatherineFeederInternal _startDaemonConnection]
  -[CMCatherineFeederInternal _feedCatherine:confidence:timestamp:]
  -[CMCatherineFeederInternal _teardown]


CMCatherineFeeder : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMCatherineFeederInternal *internal

  // instance methods
  -[CMCatherineFeeder init]
  -[CMCatherineFeeder internal]
  -[CMCatherineFeeder dealloc]
  -[CMCatherineFeeder feedCatherine:confidence:]


CMKappaData : CMLogItem
 @property  NSNumber *state

  // class methods
  +[CMKappaData supportsSecureCoding]

  // instance methods
  -[CMKappaData copyWithZone:]
  -[CMKappaData initWithState:]
  -[CMKappaData dealloc]
  -[CMKappaData encodeWithCoder:]
  -[CMKappaData state]
  -[CMKappaData initWithCoder:]


CMWorkoutMetsInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMWorkoutMetsInternal init]
  -[CMWorkoutMetsInternal dealloc]
  -[CMWorkoutMetsInternal _queryWorkoutMetsWithSessionId:handler:]
  -[CMWorkoutMetsInternal _teardown]


CMWorkoutMets : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMWorkoutMetsInternal *_internal

  // class methods
  +[CMWorkoutMets isAvailable]

  // instance methods
  -[CMWorkoutMets init]
  -[CMWorkoutMets dealloc]
  -[CMWorkoutMets queryWorkoutMetsWithSessionId:handler:]
  -[CMWorkoutMets _internal]


CMSkiData : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  unsigned long recordId
 @property  NSUUID *sourceId
 @property  NSUUID *sessionId
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  double runDistance
 @property  double runAvgSpeed
 @property  double runMaxSpeed
 @property  double runSlope
 @property  double runElevationDescent

  // class methods
  +[CMSkiData supportsSecureCoding]

  // instance methods
  -[CMSkiData copyWithZone:]
  -[CMSkiData recordId]
  -[CMSkiData sessionId]
  -[CMSkiData startDate]
  -[CMSkiData initWithRecordId:sourceId:sessionId:startDate:endDate:runDistance:runAvgSpeed:runMaxSpeed:runSlope:runElevationDescent:]
  -[CMSkiData dealloc]
  -[CMSkiData runSlope]
  -[CMSkiData encodeWithCoder:]
  -[CMSkiData initWithSessionId:]
  -[CMSkiData endDate]
  -[CMSkiData runDistance]
  -[CMSkiData runElevationDescent]
  -[CMSkiData runAvgSpeed]
  -[CMSkiData runMaxSpeed]
  -[CMSkiData initWithSkiEntry:]
  -[CMSkiData convertToSkiEntry:]
  -[CMSkiData sourceId]
  -[CMSkiData initWithCoder:]


CMHeadphoneMotionManagerInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMDeviceMotion *deviceMotion
 @property  CMAttitude *initialReferenceAttitude

  // instance methods
  -[CMHeadphoneMotionManagerInternal disconnect]
  -[CMHeadphoneMotionManagerInternal connect]
  -[CMHeadphoneMotionManagerInternal init]
  -[CMHeadphoneMotionManagerInternal dealloc]
  -[CMHeadphoneMotionManagerInternal setDeviceMotion:]
  -[CMHeadphoneMotionManagerInternal initialReferenceAttitude]
  -[CMHeadphoneMotionManagerInternal setInitialReferenceAttitude:]
  -[CMHeadphoneMotionManagerInternal deviceMotion]


CMHeadphoneMotionManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  <CMHeadphoneMotionManagerDelegate> *delegate
 @property  BOOL deviceMotionAvailable
 @property  BOOL deviceMotionActive
 @property  CMDeviceMotion *deviceMotion

  // class methods
  +[CMHeadphoneMotionManager authorizationStatus]

  // instance methods
  -[CMHeadphoneMotionManager isDeviceMotionAvailable]
  -[CMHeadphoneMotionManager init]
  -[CMHeadphoneMotionManager dealloc]
  -[CMHeadphoneMotionManager .cxx_destruct]
  -[CMHeadphoneMotionManager stopDeviceMotionUpdates]
  -[CMHeadphoneMotionManager pauseDeviceMotionStreamingPrivate]
  -[CMHeadphoneMotionManager startDeviceMotionUpdatesPrivateToQueue:withHandler:]
  -[CMHeadphoneMotionManager onDeviceMotionPrivate:]
  -[CMHeadphoneMotionManager resumeDeviceMotionStreamingPrivate]
  -[CMHeadphoneMotionManager onDeviceMotionEventPrivate:]
  -[CMHeadphoneMotionManager applyInitialReferencePrivate:]
  -[CMHeadphoneMotionManager delegateQueuePrivate]
  -[CMHeadphoneMotionManager notifyDeviceConnectedEventToClientPrivate]
  -[CMHeadphoneMotionManager notifyDeviceDisconnectedEventToClientPrivate]
  -[CMHeadphoneMotionManager startDeviceMotionUpdatesToQueue:withHandler:]
  -[CMHeadphoneMotionManager startDeviceMotionUpdates]
  -[CMHeadphoneMotionManager stopDeviceMotionUpdatesPrivate]
  -[CMHeadphoneMotionManager setDelegate:]
  -[CMHeadphoneMotionManager deviceMotion]
  -[CMHeadphoneMotionManager delegate]
  -[CMHeadphoneMotionManager isDeviceMotionActive]


CLGyroCalibrationDatabaseAdapter : CLNotifierServiceAdapter <CLGyroCalibrationDatabaseProtocol>
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CLGyroCalibrationDatabaseAdapter isSupported]
  +[CLGyroCalibrationDatabaseAdapter becameFatallyBlocked:index:]
  +[CLGyroCalibrationDatabaseAdapter performSyncOnSilo:invoker:]
  +[CLGyroCalibrationDatabaseAdapter getSilo]

  // instance methods
  -[CLGyroCalibrationDatabaseAdapter init]
  -[CLGyroCalibrationDatabaseAdapter syncgetSupportsMiniCalibration]
  -[CLGyroCalibrationDatabaseAdapter syncgetInsertWithBias:variance:temperature:timestamp:]
  -[CLGyroCalibrationDatabaseAdapter endService]
  -[CLGyroCalibrationDatabaseAdapter syncgetGyroStatsWithBias:slope:l2Error:isDynamic:deltaBias:deltaSlope:deltaError:isDeltaDynamic:]
  -[CLGyroCalibrationDatabaseAdapter doAsync:]
  -[CLGyroCalibrationDatabaseAdapter beginService]
  -[CLGyroCalibrationDatabaseAdapter syncgetNonFactoryRoundCount]
  -[CLGyroCalibrationDatabaseAdapter syncgetNumTemperatures]
  -[CLGyroCalibrationDatabaseAdapter syncgetMaxDynamicTemperature]
  -[CLGyroCalibrationDatabaseAdapter dumpDatabase:onCompletion:]
  -[CLGyroCalibrationDatabaseAdapter adaptee]
  -[CLGyroCalibrationDatabaseAdapter syncgetDoSync:]
  -[CLGyroCalibrationDatabaseAdapter syncgetWipeDatabase]
  -[CLGyroCalibrationDatabaseAdapter syncgetBiasFit:]
  -[CLGyroCalibrationDatabaseAdapter doAsync:withReply:]
  -[CLGyroCalibrationDatabaseAdapter startFactoryGYTT]
  -[CLGyroCalibrationDatabaseAdapter syncgetLastMiniCalibration]


CMPedometerBin : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding>
 @property  double valueOut
 @property  double begin
 @property  double lowerQuartile
 @property  double center
 @property  double upperQuartile
 @property  double end
 @property  long long state

  // class methods
  +[CMPedometerBin supportsSecureCoding]

  // instance methods
  -[CMPedometerBin dealloc]
  -[CMPedometerBin end]
  -[CMPedometerBin upperQuartile]
  -[CMPedometerBin encodeWithCoder:]
  -[CMPedometerBin begin]
  -[CMPedometerBin initWithValueOut:begin:end:state:]
  -[CMPedometerBin isEqual:]
  -[CMPedometerBin center]
  -[CMPedometerBin state]
  -[CMPedometerBin lowerQuartile]
  -[CMPedometerBin initWithCoder:]
  -[CMPedometerBin valueOut]


CMDyskineticSymptomResult : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSCopying, NSSecureCoding>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  float percentUnlikely
 @property  float percentLikely

  // class methods
  +[CMDyskineticSymptomResult supportsSecureCoding]

  // instance methods
  -[CMDyskineticSymptomResult copyWithZone:]
  -[CMDyskineticSymptomResult startDate]
  -[CMDyskineticSymptomResult dealloc]
  -[CMDyskineticSymptomResult encodeWithCoder:]
  -[CMDyskineticSymptomResult endDate]
  -[CMDyskineticSymptomResult percentUnlikely]
  -[CMDyskineticSymptomResult initWithParkinsonsResult:]
  -[CMDyskineticSymptomResult initWithStartDate:endDate:percentDyskinesiaUnlikely:percentDyskinesiaLikely:]
  -[CMDyskineticSymptomResult percentLikely]
  -[CMDyskineticSymptomResult initWithCoder:]


CMTremorResult : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSCopying, NSSecureCoding>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  float percentUnknown
 @property  float percentNone
 @property  float percentSlight
 @property  float percentMild
 @property  float percentModerate
 @property  float percentStrong

  // class methods
  +[CMTremorResult supportsSecureCoding]

  // instance methods
  -[CMTremorResult copyWithZone:]
  -[CMTremorResult startDate]
  -[CMTremorResult dealloc]
  -[CMTremorResult encodeWithCoder:]
  -[CMTremorResult endDate]
  -[CMTremorResult percentNone]
  -[CMTremorResult initWithParkinsonsResult:]
  -[CMTremorResult initWithStartDate:endDate:percentUnknown:percentNone:percentSlight:percentMild:percentModerate:percentStrong:]
  -[CMTremorResult percentUnknown]
  -[CMTremorResult percentSlight]
  -[CMTremorResult percentMild]
  -[CMTremorResult percentModerate]
  -[CMTremorResult percentStrong]
  -[CMTremorResult initWithCoder:]


CLHealthAssessmentRecordTypeForDuration : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding>
 @property  double duration
 @property  int dataType

  // class methods
  +[CLHealthAssessmentRecordTypeForDuration supportsSecureCoding]

  // instance methods
  -[CLHealthAssessmentRecordTypeForDuration dataType]
  -[CLHealthAssessmentRecordTypeForDuration encodeWithCoder:]
  -[CLHealthAssessmentRecordTypeForDuration setDuration:]
  -[CLHealthAssessmentRecordTypeForDuration setDataType:]
  -[CLHealthAssessmentRecordTypeForDuration initWithCoder:]
  -[CLHealthAssessmentRecordTypeForDuration duration]


CMHeartRateData : CMLogItem <SRSampling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double heartRate
 @property  double confidence
 @property  NSDate *startDate
 @property  BOOL error
 @property  long long dataSource
 @property  long long mode

  // class methods
  +[CMHeartRateData supportsSecureCoding]
  +[CMHeartRateData dataSourceName:]
  +[CMHeartRateData modeName:]

  // instance methods
  -[CMHeartRateData copyWithZone:]
  -[CMHeartRateData mode]
  -[CMHeartRateData startDate]
  -[CMHeartRateData binarySampleRepresentation]
  -[CMHeartRateData initWithBinarySampleRepresentation:metadata:timestamp:]
  -[CMHeartRateData dealloc]
  -[CMHeartRateData confidence]
  -[CMHeartRateData encodeWithCoder:]
  -[CMHeartRateData heartRate]
  -[CMHeartRateData error]
  -[CMHeartRateData initWithHeartRate:confidence:timestamp:startDate:error:dataSource:mode:]
  -[CMHeartRateData dataSource]
  -[CMHeartRateData initWithCoder:]


CMMotionUtils : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CMMotionUtils hasEntitlement:]
  +[CMMotionUtils sendMessage:withReplyClasses:callback:]
  +[CMMotionUtils featureAvailability:]
  +[CMMotionUtils authorizationStatus]
  +[CMMotionUtils copyDataFrom:to:]
  +[CMMotionUtils isAuthorizedForEntitlement:]
  +[CMMotionUtils fileHandleForWritingToURL:]
  +[CMMotionUtils tccServiceMotionAccessWithLabel:]
  +[CMMotionUtils sendMessageSync:]
  +[CMMotionUtils isMotionActivityEntitled]
  +[CMMotionUtils tccServiceMotionAccessWithBlock:]
  +[CMMotionUtils getExecutablePathFromPid:]
  +[CMMotionUtils sendMessage:withReplyClassesSync:]
  +[CMMotionUtils logDirectory]


CMPoseInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSCopying>
  // instance methods
  -[CMPoseInternal copyWithZone:]
  -[CMPoseInternal dealloc]
  -[CMPoseInternal isEqualToPoseInternal:]
  -[CMPoseInternal initWithPose:]
  -[CMPoseInternal isEqual:]


CMPose : CMLogItem
 @property  CMAttitude *attitude
 @property  {?=ddd} translation
 @property  double consumedAuxTimestamp
 @property  double receivedAuxTimestamp
 @property  double machAbsTimestamp

  // class methods
  +[CMPose supportsSecureCoding]

  // instance methods
  -[CMPose attitude]
  -[CMPose copyWithZone:]
  -[CMPose translation]
  -[CMPose dealloc]
  -[CMPose initWithPose:timestamp:]
  -[CMPose machAbsTimestamp]
  -[CMPose consumedAuxTimestamp]
  -[CMPose receivedAuxTimestamp]
  -[CMPose encodeWithCoder:]
  -[CMPose isEqualToPose:]
  -[CMPose isEqual:]
  -[CMPose initWithCoder:]


CMActivityAlarmProxy : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CMActivityAlarmProxy sharedInstance]

  // instance methods
  -[CMActivityAlarmProxy init]
  -[CMActivityAlarmProxy stopListeningForActivityAlarm:]
  -[CMActivityAlarmProxy dealloc]
  -[CMActivityAlarmProxy activityAlarmAvailable]
  -[CMActivityAlarmProxy listenForActivityAlarm:]


CMVehicleConnectionData : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  NSDate *startDate
 @property  NSDate *endDate

  // class methods
  +[CMVehicleConnectionData supportsSecureCoding]

  // instance methods
  -[CMVehicleConnectionData copyWithZone:]
  -[CMVehicleConnectionData startDate]
  -[CMVehicleConnectionData initWithStartDate:endDate:]
  -[CMVehicleConnectionData dealloc]
  -[CMVehicleConnectionData encodeWithCoder:]
  -[CMVehicleConnectionData endDate]
  -[CMVehicleConnectionData initWithCoder:]


CMVehicleConnection : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CMVehicleConnection mostRecentVehicleConnection]


CMActivityAlarm : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  double duration
 @property  unsigned int trigger

  // class methods
  +[CMActivityAlarm activityAlarmAvailable]
  +[CMActivityAlarm activityAlarmInfo]

  // instance methods
  -[CMActivityAlarm fire]
  -[CMActivityAlarm dealloc]
  -[CMActivityAlarm isValid]
  -[CMActivityAlarm setTrigger:]
  -[CMActivityAlarm setDuration:]
  -[CMActivityAlarm trigger]
  -[CMActivityAlarm invalidate]
  -[CMActivityAlarm initWithTrigger:duration:onQueue:withHandler:]
  -[CMActivityAlarm duration]
  -[CMActivityAlarm initWithTrigger:duration:onRunLoop:withHandler:]


CMStepCounterProxy : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMStepCounterProxy init]
  -[CMStepCounterProxy dealloc]
  -[CMStepCounterProxy _handleQueryResponse:onQueue:withHandler:]
  -[CMStepCounterProxy _queryStepCountStartingFromInternal:to:toQueue:withHandler:]
  -[CMStepCounterProxy _startStepCountingUpdatesToQueue:updateOn:withHandler:]
  -[CMStepCounterProxy _teardown]


CMStepCounter : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMStepCounterProxy *stepcounterProxy
 @property  BOOL enabled

  // class methods
  +[CMStepCounter isStepCountingAvailable]

  // instance methods
  -[CMStepCounter enabled]
  -[CMStepCounter init]
  -[CMStepCounter dealloc]
  -[CMStepCounter deleteHistory]
  -[CMStepCounter stepcounterProxy]
  -[CMStepCounter queryStepCountStartingFrom:to:toQueue:withHandler:]
  -[CMStepCounter startStepCountingUpdatesToQueue:updateOn:withHandler:]
  -[CMStepCounter stopStepCountingUpdates]
  -[CMStepCounter getTotalCountToQueue:withHandler:]
  -[CMStepCounter setEnabled:]


CMDeviceMotionLite : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSCopying, NSSecureCoding>
 @property  {?=ddd} rawAcceleration
 @property  {?=ddd} rawRotationRate
 @property  unsigned long machTimestamp
 @property  float gyroTemperature
 @property  float compassTemperature
 @property  {?=ddd} rawMagneticField
 @property  {?=ddd} gravity
 @property  {?=ddd} userAcceleration
 @property  float tip
 @property  float tilt
 @property  CMAttitude *attitude
 @property  {?=ddd} rotationRate
 @property  BOOL usingCompass
 @property  NSString *physicalDeviceUniqueID

  // class methods
  +[CMDeviceMotionLite supportsSecureCoding]

  // instance methods
  -[CMDeviceMotionLite tip]
  -[CMDeviceMotionLite attitude]
  -[CMDeviceMotionLite tilt]
  -[CMDeviceMotionLite copyWithZone:]
  -[CMDeviceMotionLite dealloc]
  -[CMDeviceMotionLite initWithDeviceMotionLite:andDeviceID:]
  -[CMDeviceMotionLite gravity]
  -[CMDeviceMotionLite encodeWithCoder:]
  -[CMDeviceMotionLite rotationRate]
  -[CMDeviceMotionLite userAcceleration]
  -[CMDeviceMotionLite isUsingCompass]
  -[CMDeviceMotionLite physicalDeviceUniqueID]
  -[CMDeviceMotionLite rawAcceleration]
  -[CMDeviceMotionLite rawRotationRate]
  -[CMDeviceMotionLite machTimestamp]
  -[CMDeviceMotionLite gyroTemperature]
  -[CMDeviceMotionLite compassTemperature]
  -[CMDeviceMotionLite rawMagneticField]
  -[CMDeviceMotionLite initWithCoder:]


CMFitnessShared : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CMFitnessShared isDeviceSatellitePaired]
  +[CMFitnessShared isWorkoutStartReminderEnabledWhenDeviceIsSatellitePaired:isInMoveTimeMode:withCurrentSetting:]
  +[CMFitnessShared isWorkoutEndReminderEnabledWhenDeviceIsInMoveTimeMode:withCurrentSetting:]


CMAltimeterInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMAltimeterInternal init]
  -[CMAltimeterInternal .cxx_construct]
  -[CMAltimeterInternal dealloc]
  -[CMAltimeterInternal .cxx_destruct]
  -[CMAltimeterInternal _handleAbsoluteAltitudeUpdate:]
  -[CMAltimeterInternal _releaseHandlerObjects]
  -[CMAltimeterInternal _startElevationUpdatesWithHandler:]
  -[CMAltimeterInternal _stopElevationUpdates]
  -[CMAltimeterInternal _startSignificantElevationUpdatesWithHandler:]
  -[CMAltimeterInternal _stopSignificantElevationUpdates]
  -[CMAltimeterInternal _querySignificantElevationChangeFromDate:toDate:withHandler:]
  -[CMAltimeterInternal _startRelativeAltitudeUpdates]
  -[CMAltimeterInternal _stopRelativeAltitudeUpdates]
  -[CMAltimeterInternal _startAbsoluteAltitudeUpdatesToQueue:withHandler:]
  -[CMAltimeterInternal _stopAbsoluteAltitudeUpdates]
  -[CMAltimeterInternal _pauseAbsoluteAltitudeUpdates]
  -[CMAltimeterInternal _resumeAbsoluteAltitudeUpdates]
  -[CMAltimeterInternal _teardown]


CMAltimeter : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  double absoluteAltitudeUpdateInterval

  // class methods
  +[CMAltimeter initialize]
  +[CMAltimeter dummySelector:]
  +[CMAltimeter authorizationStatus]
  +[CMAltimeter isRelativeAltitudeAvailable]
  +[CMAltimeter isAbsoluteAltitudeAvailable]
  +[CMAltimeter isSignificantElevationAvailable]

  // instance methods
  -[CMAltimeter init]
  -[CMAltimeter dealloc]
  -[CMAltimeter onFilteredPressure:]
  -[CMAltimeter stopRelativeAltitudeUpdatesPrivate]
  -[CMAltimeter startRelativeAltitudeUpdatesPrivateToQueue:withHandler:]
  -[CMAltimeter startRelativeAltitudeUpdatesToQueue:withHandler:]
  -[CMAltimeter stopRelativeAltitudeUpdates]
  -[CMAltimeter stopSignificantElevationUpdates]
  -[CMAltimeter startSignificantElevationUpdatesWithHandler:]
  -[CMAltimeter querySignificantElevationChangeFromDate:toDate:withHandler:]
  -[CMAltimeter startAbsoluteAltitudeUpdatesToQueue:withHandler:]
  -[CMAltimeter stopAbsoluteAltitudeUpdates]
  -[CMAltimeter pauseAbsoluteAltitudeUpdates]
  -[CMAltimeter resumeAbsoluteAltitudeUpdates]
  -[CMAltimeter absoluteAltitudeUpdateInterval]
  -[CMAltimeter setAbsoluteAltitudeUpdateInterval:]
  -[CMAltimeter initPrivate]
  -[CMAltimeter deallocPrivate]


CMElevation : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMAltimeterInternal *_internal

  // class methods
  +[CMElevation isElevationAvailable]

  // instance methods
  -[CMElevation init]
  -[CMElevation dealloc]
  -[CMElevation stopElevationUpdates]
  -[CMElevation startElevationUpdatesWithHandler:]
  -[CMElevation _internal]


CMSwimTrackerInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMSwimTrackerInternal init]
  -[CMSwimTrackerInternal dealloc]
  -[CMSwimTrackerInternal _startUpdatesFromRecord:handler:]
  -[CMSwimTrackerInternal _stopUpdates]
  -[CMSwimTrackerInternal _handleUpdates:]
  -[CMSwimTrackerInternal _resetOffsets]
  -[CMSwimTrackerInternal _querySwimUpdatesFromRecord:handler:]
  -[CMSwimTrackerInternal _teardown]


CMSwimTracker : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMSwimTrackerInternal *_internal

  // class methods
  +[CMSwimTracker isAvailable]
  +[CMSwimTracker maxSwimDataEntries]

  // instance methods
  -[CMSwimTracker init]
  -[CMSwimTracker stopUpdates]
  -[CMSwimTracker dealloc]
  -[CMSwimTracker startUpdatesFromRecord:handler:]
  -[CMSwimTracker querySwimUpdatesFromRecord:handler:]
  -[CMSwimTracker _internal]


CMMotionAlarm : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding>
 @property  unsigned long alarmId
 @property  NSString *bundleId
 @property  int state
 @property  CMMotionAlarmManager *manager
 @property  NSString *name
 @property  unsigned int duration
 @property  BOOL repeats
 @property  unsigned int type

  // class methods
  +[CMMotionAlarm supportsSecureCoding]

  // instance methods
  -[CMMotionAlarm setBundleId:]
  -[CMMotionAlarm dealloc]
  -[CMMotionAlarm setState:]
  -[CMMotionAlarm alarmId]
  -[CMMotionAlarm name]
  -[CMMotionAlarm encodeWithCoder:]
  -[CMMotionAlarm copyPropertiesFromAlarm:]
  -[CMMotionAlarm initWithName:type:duration:repeats:]
  -[CMMotionAlarm repeats]
  -[CMMotionAlarm isValid]
  -[CMMotionAlarm type]
  -[CMMotionAlarm manager]
  -[CMMotionAlarm setManager:]
  -[CMMotionAlarm setAlarmId:]
  -[CMMotionAlarm initWithName:type:duration:repeats:alarmId:bundleId:state:]
  -[CMMotionAlarm acknowledgeWithError:]
  -[CMMotionAlarm unregisterWithError:]
  -[CMMotionAlarm state]
  -[CMMotionAlarm bundleId]
  -[CMMotionAlarm initWithCoder:]
  -[CMMotionAlarm duration]


CMWorkoutMetsData : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  NSNumber *mets
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSUUID *sessionId
 @property  NSUUID *sourceId

  // class methods
  +[CMWorkoutMetsData supportsSecureCoding]

  // instance methods
  -[CMWorkoutMetsData copyWithZone:]
  -[CMWorkoutMetsData mets]
  -[CMWorkoutMetsData sessionId]
  -[CMWorkoutMetsData startDate]
  -[CMWorkoutMetsData dealloc]
  -[CMWorkoutMetsData encodeWithCoder:]
  -[CMWorkoutMetsData endDate]
  -[CMWorkoutMetsData initWithSessionId:sourceId:startDate:endDate:mets:]
  -[CMWorkoutMetsData initWithCLWorkoutMets:]
  -[CMWorkoutMetsData sourceId]
  -[CMWorkoutMetsData initWithCoder:]


CMStrideCalibrationEntry : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  double startTime
 @property  double endTime
 @property  double distance
 @property  int steps
 @property  double speed
 @property  double percentGrade
 @property  long long gpsSource

  // class methods
  +[CMStrideCalibrationEntry supportsSecureCoding]

  // instance methods
  -[CMStrideCalibrationEntry endTime]
  -[CMStrideCalibrationEntry copyWithZone:]
  -[CMStrideCalibrationEntry distance]
  -[CMStrideCalibrationEntry steps]
  -[CMStrideCalibrationEntry speed]
  -[CMStrideCalibrationEntry kvalue]
  -[CMStrideCalibrationEntry session]
  -[CMStrideCalibrationEntry pacebin]
  -[CMStrideCalibrationEntry encodeWithCoder:]
  -[CMStrideCalibrationEntry kvalueTrack]
  -[CMStrideCalibrationEntry score]
  -[CMStrideCalibrationEntry gpsSource]
  -[CMStrideCalibrationEntry percentGrade]
  -[CMStrideCalibrationEntry initWithCLStrideCalEntry:]
  -[CMStrideCalibrationEntry initWithCoder:]
  -[CMStrideCalibrationEntry startTime]


CMStrideCalibrationEntryInternal : CMStrideCalibrationEntry
 @property  unsigned int pacebin
 @property  double kvalue
 @property  double kvalueTrack
 @property  double score
 @property  int session

  // instance methods
  -[CMStrideCalibrationEntryInternal kvalue]
  -[CMStrideCalibrationEntryInternal session]
  -[CMStrideCalibrationEntryInternal pacebin]
  -[CMStrideCalibrationEntryInternal kvalueTrack]
  -[CMStrideCalibrationEntryInternal score]


CMStrideCalibrationEntryArray : NSArray /usr/lib/libz.1.dylib <SRSampling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CMStrideCalibrationEntryArray initWithBinarySampleRepresentation:metadata:timestamp:]


CMMetMinute : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  NSDate *startDate
 @property  NSNumber *averageIntensity

  // class methods
  +[CMMetMinute supportsSecureCoding]

  // instance methods
  -[CMMetMinute copyWithZone:]
  -[CMMetMinute startDate]
  -[CMMetMinute dealloc]
  -[CMMetMinute encodeWithCoder:]
  -[CMMetMinute initWithSample:]
  -[CMMetMinute initWithStartDate:averageIntensity:]
  -[CMMetMinute averageIntensity]
  -[CMMetMinute initWithCoder:]


CMSwimData : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  unsigned long recordId
 @property  NSUUID *sourceId
 @property  NSUUID *sessionId
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  unsigned long strokeCount
 @property  double distance
 @property  double avgPace
 @property  unsigned long lapCount
 @property  long long strokeType
 @property  unsigned long segment

  // class methods
  +[CMSwimData supportsSecureCoding]
  +[CMSwimData maxSwimDataEntries]
  +[CMSwimData strokeTypeName:]

  // instance methods
  -[CMSwimData copyWithZone:]
  -[CMSwimData distance]
  -[CMSwimData recordId]
  -[CMSwimData sessionId]
  -[CMSwimData startDate]
  -[CMSwimData dealloc]
  -[CMSwimData avgPace]
  -[CMSwimData encodeWithCoder:]
  -[CMSwimData initWithSessionId:]
  -[CMSwimData endDate]
  -[CMSwimData lapCount]
  -[CMSwimData strokeType]
  -[CMSwimData strokeCount]
  -[CMSwimData initWithRecordId:sourceId:sessionId:startDate:endDate:strokeCount:distance:avgPace:lapCount:strokeType:segment:]
  -[CMSwimData convertToSwimEntry:]
  -[CMSwimData initWithSwimEntry:]
  -[CMSwimData segment]
  -[CMSwimData sourceId]
  -[CMSwimData initWithCoder:]


CMOnBodyStatus : CMLogItem
 @property  long long result
 @property  long long confidence

  // class methods
  +[CMOnBodyStatus supportsSecureCoding]

  // instance methods
  -[CMOnBodyStatus copyWithZone:]
  -[CMOnBodyStatus result]
  -[CMOnBodyStatus confidence]
  -[CMOnBodyStatus initWithOnBodyResult:confidence:timestamp:]
  -[CMOnBodyStatus encodeWithCoder:]
  -[CMOnBodyStatus initWithCoder:]


CLPropertyValue : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  id value
 @property  BOOL dirty

  // instance methods
  -[CLPropertyValue dealloc]
  -[CLPropertyValue initWithValue:dirty:]
  -[CLPropertyValue dirty]
  -[CLPropertyValue setDirty:]
  -[CLPropertyValue value]


CMFitnessMachineData : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <NSSecureCoding, NSCopying>
 @property  NSDate *timestamp
 @property  double elapsedTime
 @property  double totalEnergy
 @property  double totalDistance
 @property  double totalElevationAscended
 @property  long long totalStrideCount
 @property  long long totalStrokeCount
 @property  long long totalFloorsClimbed
 @property  double instantaneousSpeed
 @property  double instantaneousCadence
 @property  double instantaneousPower
 @property  double inclination
 @property  double resistanceLevel

  // class methods
  +[CMFitnessMachineData isAvailable]
  +[CMFitnessMachineData supportsSecureCoding]

  // instance methods
  -[CMFitnessMachineData elapsedTime]
  -[CMFitnessMachineData copyWithZone:]
  -[CMFitnessMachineData totalDistance]
  -[CMFitnessMachineData setTotalDistance:]
  -[CMFitnessMachineData dealloc]
  -[CMFitnessMachineData timestamp]
  -[CMFitnessMachineData encodeWithCoder:]
  -[CMFitnessMachineData setTotalEnergy:]
  -[CMFitnessMachineData setTotalElevationAscended:]
  -[CMFitnessMachineData setInclination:]
  -[CMFitnessMachineData setTotalStrideCount:]
  -[CMFitnessMachineData setTotalStrokeCount:]
  -[CMFitnessMachineData setTotalFloorsClimbed:]
  -[CMFitnessMachineData setInstantaneousSpeed:]
  -[CMFitnessMachineData setInstantaneousCadence:]
  -[CMFitnessMachineData setInstantaneousPower:]
  -[CMFitnessMachineData setResistanceLevel:]
  -[CMFitnessMachineData convertToCLFitnessMachineData:]
  -[CMFitnessMachineData totalEnergy]
  -[CMFitnessMachineData totalElevationAscended]
  -[CMFitnessMachineData totalStrideCount]
  -[CMFitnessMachineData totalStrokeCount]
  -[CMFitnessMachineData totalFloorsClimbed]
  -[CMFitnessMachineData instantaneousSpeed]
  -[CMFitnessMachineData instantaneousCadence]
  -[CMFitnessMachineData instantaneousPower]
  -[CMFitnessMachineData inclination]
  -[CMFitnessMachineData resistanceLevel]
  -[CMFitnessMachineData setElapsedTime:]
  -[CMFitnessMachineData initWithTimestamp:]
  -[CMFitnessMachineData initWithCoder:]


CMRecordedAccelerometerData : CMAccelerometerData
 @property  double startTime
 @property  unsigned long identifier
 @property  NSDate *startDate

  // class methods
  +[CMRecordedAccelerometerData supportsSecureCoding]

  // instance methods
  -[CMRecordedAccelerometerData startDate]
  -[CMRecordedAccelerometerData initWithData:timestamp:walltime:identifier:]
  -[CMRecordedAccelerometerData dealloc]
  -[CMRecordedAccelerometerData resetWithData:timestamp:walltime:identifier:]
  -[CMRecordedAccelerometerData timestamp]
  -[CMRecordedAccelerometerData encodeWithCoder:]
  -[CMRecordedAccelerometerData identifier]
  -[CMRecordedAccelerometerData acceleration]
  -[CMRecordedAccelerometerData initWithCoder:]
  -[CMRecordedAccelerometerData startTime]


CMOnBodyStatusManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // class methods
  +[CMOnBodyStatusManager sharedOnBodyStatusManager]
  +[CMOnBodyStatusManager isOnBodyStatusDetectionAvailable]

  // instance methods
  -[CMOnBodyStatusManager disconnect]
  -[CMOnBodyStatusManager connect]
  -[CMOnBodyStatusManager init]
  -[CMOnBodyStatusManager setPropertiesWithDictionary:]
  -[CMOnBodyStatusManager startOnBodyStatusDetectionToQueue:withParameters:handler:]
  -[CMOnBodyStatusManager dealloc]
  -[CMOnBodyStatusManager startOnBodyStatusDetectionPrivateToQueue:withParameters:handler:]
  -[CMOnBodyStatusManager stopOnBodyStatusDetection]
  -[CMOnBodyStatusManager stopOnBodyStatusDetectionPrivate]


CLNotifierClientAdapter : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork <CLNotifierServiceClientProtocol>
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CLNotifierClientAdapter becameFatallyBlocked:index:]
  +[CLNotifierClientAdapter performSyncOnSilo:invoker:]

  // instance methods
  -[CLNotifierClientAdapter setValid:]
  -[CLNotifierClientAdapter init]
  -[CLNotifierClientAdapter valid]
  -[CLNotifierClientAdapter onNotification:withData:]
  -[CLNotifierClientAdapter initWithClient:]
  -[CLNotifierClientAdapter invalidate]


CMKappaInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMKappaInternal init]
  -[CMKappaInternal dealloc]
  -[CMKappaInternal _startKappaUpdatesForItem:withHandler:]
  -[CMKappaInternal _stopKappaUpdates]
  -[CMKappaInternal _teardown]


CMKappa : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMKappaInternal *_internal

  // class methods
  +[CMKappa areStatsAvailable]

  // instance methods
  -[CMKappa init]
  -[CMKappa dealloc]
  -[CMKappa sendCmd:]
  -[CMKappa sendAPCmd:]
  -[CMKappa getState]
  -[CMKappa stopKappaUpdates]
  -[CMKappa startKappaUpdatesForItem:withHandler:]
  -[CMKappa sendConfigNumFastAccel:andNumAccel:andNumPressure:andNumDeviceMotion:andTimeout:]
  -[CMKappa sendAPConfigNumFastAccel:andNumAccel:andNumPressure:andNumDeviceMotion:andTimeout:]
  -[CMKappa _internal]


CLNotifierServiceAdapter : CLIntersiloService /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer <CLNotifierServiceProtocol>
 @property  ^{CLNotifierBase=^^?} notifier
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CLNotifierServiceAdapter init]
  -[CLNotifierServiceAdapter .cxx_construct]
  -[CLNotifierServiceAdapter notifierClientNumForCoparty:]
  -[CLNotifierServiceAdapter unregister:forNotification:]
  -[CLNotifierServiceAdapter .cxx_destruct]
  -[CLNotifierServiceAdapter notifier]
  -[CLNotifierServiceAdapter setAdaptedNotifier:]
  -[CLNotifierServiceAdapter register:forNotification:registrationInfo:]
  -[CLNotifierServiceAdapter invalidate]
  -[CLNotifierServiceAdapter forget:]


CMWorkoutManagerInternal : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
  // instance methods
  -[CMWorkoutManagerInternal init]
  -[CMWorkoutManagerInternal dealloc]
  -[CMWorkoutManagerInternal _startWorkout:]
  -[CMWorkoutManagerInternal _handleDaemonResponse:]
  -[CMWorkoutManagerInternal _unregisterForWorkoutEvents]
  -[CMWorkoutManagerInternal _handleDaemonEvent:]
  -[CMWorkoutManagerInternal _stopWorkout:]
  -[CMWorkoutManagerInternal _setSuggestedStopTimeout:]
  -[CMWorkoutManagerInternal _shouldAllowMotionCalibrationPromptsForWorkoutType:]
  -[CMWorkoutManagerInternal _userDismissedWorkoutAlert]
  -[CMWorkoutManagerInternal _registerForWorkoutEvents]
  -[CMWorkoutManagerInternal _triggerWorkoutLocationUpdateForTesting:]
  -[CMWorkoutManagerInternal _getPromptsNeededForWorkoutType:handler:]
  -[CMWorkoutManagerInternal _teardown]


CMWorkoutManager : NSObject /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 @property  CMWorkoutManagerInternal *_internal
 @property  <CMWorkoutManagerDelegate> *delegate

  // class methods
  +[CMWorkoutManager isAvailable]

  // instance methods
  -[CMWorkoutManager init]
  -[CMWorkoutManager dealloc]
  -[CMWorkoutManager stopWorkout:]
  -[CMWorkoutManager startWorkout:]
  -[CMWorkoutManager supportedMetricsForWorkoutType:]
  -[CMWorkoutManager getPromptsNeededForWorkoutType:handler:]
  -[CMWorkoutManager setSuggestedStopTimeout:]
  -[CMWorkoutManager userDismissedWorkoutAlert]
  -[CMWorkoutManager triggerWorkoutLocationUpdateForTesting:]
  -[CMWorkoutManager setDelegate:]
  -[CMWorkoutManager delegate]
  -[CMWorkoutManager _internal]


01 00 0600 /System/Library/PrivateFrameworks/LocationSupport.framework/LocationSupport: CLCppContainer 
01 00 0600 /System/Library/PrivateFrameworks/LocationSupport.framework/LocationSupport: CLCppEncodableDataContainer 
01 00 0600 /System/Library/PrivateFrameworks/LocationSupport.framework/LocationSupport: CLDispatchSilo 
01 00 0600 /System/Library/PrivateFrameworks/LocationSupport.framework/LocationSupport: CLIntersiloInterface 
01 00 0600 /System/Library/PrivateFrameworks/LocationSupport.framework/LocationSupport: CLIntersiloProxy 
01 00 0600 /System/Library/PrivateFrameworks/LocationSupport.framework/LocationSupport: CLIntersiloService 
01 00 0600 /System/Library/PrivateFrameworks/LocationSupport.framework/LocationSupport: CLIntersiloUniverse 
01 00 0600 /System/Library/PrivateFrameworks/LocationSupport.framework/LocationSupport: CLSilo 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0400 /System/Library/PrivateFrameworks/TimeSync.framework/TimeSync: TSClockManager 
