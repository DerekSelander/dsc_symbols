|| __DATA.__data _kBackgroundActivityPublicDatabaseRefreshTaskIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_CMSAuthenticationConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CMSAuthenticationCredential
|| __DATA.__objc_data _OBJC_CLASS_$_MSAssistantPreferences
|| __DATA.__objc_data _OBJC_CLASS_$_MSAuthTokenProvider
|| __DATA.__objc_data _OBJC_CLASS_$_MSAuthenticationConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_MSAuthenticationCredential
|| __DATA.__objc_data _OBJC_CLASS_$_MSBaseSetupEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MSConfigurationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MSOAuthTokenHandler
|| __DATA.__objc_data _OBJC_CLASS_$_MSPrimaryUserChangedEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MSRemovalEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MSServiceAccount
|| __DATA.__objc_data _OBJC_CLASS_$_MSServiceEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MSServiceRequestLapseEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MSSetupCompleteEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MSSetupEarlyExitEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MSSetupFailedEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MSSetupSession
|| __DATA.__objc_data _OBJC_CLASS_$_MSSetupViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MSStopwatch
|| __DATA.__objc_data _OBJC_CLASS_$_MSStopwatchLap
|| __DATA.__objc_data _OBJC_CLASS_$__MSRemoteViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSAuthenticationConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CMSAuthenticationCredential
|| __DATA.__objc_data _OBJC_METACLASS_$_MSAssistantPreferences
|| __DATA.__objc_data _OBJC_METACLASS_$_MSAuthTokenProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_MSAuthenticationConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_MSAuthenticationCredential
|| __DATA.__objc_data _OBJC_METACLASS_$_MSBaseSetupEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MSConfigurationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MSOAuthTokenHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPrimaryUserChangedEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MSRemovalEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MSServiceAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_MSServiceEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MSServiceRequestLapseEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MSSetupCompleteEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MSSetupEarlyExitEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MSSetupFailedEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MSSetupSession
|| __DATA.__objc_data _OBJC_METACLASS_$_MSSetupViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MSStopwatch
|| __DATA.__objc_data _OBJC_METACLASS_$_MSStopwatchLap
|| __DATA.__objc_data _OBJC_METACLASS_$__MSRemoteViewController
|| __DATA_CONST.__const _MSCloudKitErrorDomain
|| __DATA_CONST.__const _MSDefaultServiceRecordName
|| __DATA_CONST.__const _MSDefaultServiceRecordType
|| __DATA_CONST.__const _MSErrorDomain
|| __DATA_CONST.__const _MSHomeParticipantHomeIdentifier
|| __DATA_CONST.__const _MSHomeParticipantHomeUserIdentifier
|| __DATA_CONST.__const _MSPlaceholderRecordName
|| __DATA_CONST.__const _MSPlaceholderRecordType
|| __DATA_CONST.__const _MSPublicInfoRecordZoneName
|| __DATA_CONST.__const _MSPublicInfoServiceRecordType
|| __DATA_CONST.__const _MSServiceAccountRecordType
|| __DATA_CONST.__const _MSServiceSetupErrorDomain
|| __DATA_CONST.__const _MSUserInfoErrorStringKey
|| __DATA_CONST.__const _MediaServiceAccountName
|| __DATA_CONST.__const _MediaServiceAuthClientID
|| __DATA_CONST.__const _MediaServiceAuthClientSecret
|| __DATA_CONST.__const _MediaServiceAuthConfiguration
|| __DATA_CONST.__const _MediaServiceAuthCredential
|| __DATA_CONST.__const _MediaServiceAuthFatalError
|| __DATA_CONST.__const _MediaServiceAuthURL
|| __DATA_CONST.__const _MediaServiceBundleIdentifier
|| __DATA_CONST.__const _MediaServiceConfigurationAsset
|| __DATA_CONST.__const _MediaServiceConfigurationETag
|| __DATA_CONST.__const _MediaServiceConfigurationPublicKey
|| __DATA_CONST.__const _MediaServiceConfigurationURL
|| __DATA_CONST.__const _MediaServiceIconPath
|| __DATA_CONST.__const _MediaServiceIdentifier
|| __DATA_CONST.__const _MediaServiceName
|| __DATA_CONST.__const _MediaServiceType
|| __DATA_CONST.__const _MediaServiceUpdateListeningHistory
|| __DATA_CONST.__const _allowExplicitContentSettingsKeyPath
|| __DATA_CONST.__const _allowiTunesAccountSettingsKeyPath
|| __DATA_CONST.__const _kAPSDelegatePort
|| __DATA_CONST.__const _kAPSTopic
|| __DATA_CONST.__const _kAddServiceTransactionIdentifier
|| __DATA_CONST.__const _kAppleMusicApplicationIdentifier
|| __DATA_CONST.__const _kAppleMusicBundleIdentifier
|| __DATA_CONST.__const _kAppleMusicServiceIdentifier
|| __DATA_CONST.__const _kAppleMusicServiceType
|| __DATA_CONST.__const _kBackgroundActivityDataRefreshTaskIdentifier
|| __DATA_CONST.__const _kBackgroundActivityUserShareRetryTaskIdentifier
|| __DATA_CONST.__const _kCKDatabaseAccessUserInfoHomeIDKey
|| __DATA_CONST.__const _kCKDatabaseAccessUserInfoHomeUserIDKey
|| __DATA_CONST.__const _kCloudMediaServicesBundleIdentifier
|| __DATA_CONST.__const _kHomeMultiUserStatusChangedNotification
|| __DATA_CONST.__const _kHomeUserCloudShareChangedNotification
|| __DATA_CONST.__const _kLastPlaybackIntentDefault
|| __DATA_CONST.__const _kMediaSetupCAConfigurationEvent
|| __DATA_CONST.__const _kMediaSetupCAGetServicesEvent
|| __DATA_CONST.__const _kMediaSetupCAPlaybackIntentEvent
|| __DATA_CONST.__const _kMediaSetupCAPrimaryUserChangedEvent
|| __DATA_CONST.__const _kMediaSetupCARemovalEvent
|| __DATA_CONST.__const _kMediaSetupCAServiceAddedEvent
|| __DATA_CONST.__const _kMediaSetupCAServiceBatchedUpdateEvent
|| __DATA_CONST.__const _kMediaSetupCAServiceRemovedEvent
|| __DATA_CONST.__const _kMediaSetupCAServiceRequestLapseEvent
|| __DATA_CONST.__const _kMediaSetupCASetupCompleteEvent
|| __DATA_CONST.__const _kMediaSetupCASetupEarlyExitEvent
|| __DATA_CONST.__const _kMediaSetupCASetupEvent
|| __DATA_CONST.__const _kMediaSetupCASetupFailedEvent
|| __DATA_CONST.__const _kMediaSetupCloudKitContainerIdentifier
|| __DATA_CONST.__const _kMediaSetupDeveloperUserDefaultsDomain
|| __DATA_CONST.__const _kMediaSetupExtensionIdentifier
|| __DATA_CONST.__const _kMediaSetupInterfaceEntitlementKey
|| __DATA_CONST.__const _kMediaSetupKeyHostBundleID
|| __DATA_CONST.__const _kMediaSetupKeyMediaService
|| __DATA_CONST.__const _kMediaSetupKeyTestUIFlags
|| __DATA_CONST.__const _kMediaSetupMachServiceName
|| __DATA_CONST.__const _kMediaSetupPublicCloudKitContainerIdentifier
|| __DATA_CONST.__const _kMediaSetupServiceEntitlement
|| __DATA_CONST.__const _kMediaSetupServicesChanged
|| __DATA_CONST.__const _kMediaSetupSettingsDomain
|| __DATA_CONST.__const _kMediaSetupTestingProfileDefaultsIdentifier
|| __DATA_CONST.__const _kMediaSetupUserDefaultsDomain
|| __DATA_CONST.__const _kMissedServiceRequestDateLastRequestedKey
|| __DATA_CONST.__const _kMissedServiceRequestKey
|| __DATA_CONST.__const _kMissedServiceRequestServiceKey
|| __DATA_CONST.__const _kMissedServiceRequestTimeLastRequestedKey
|| __DATA_CONST.__const _kOverrideAppleMusicSubscriptionStatus
|| __DATA_CONST.__const _kOverrideAppleMusicSubscriptionStatusAllUsers
|| __DATA_CONST.__const _kPodcastsBundleIdentifier
|| __DATA_CONST.__const _voiceRecoginitionSettingsKeyPath
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSAnalytics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSDDefaultsInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSDeviceInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPublicDBInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSServiceAppInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSServiceResolutionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSServiceUpdatedHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSUserAccountInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MediaService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MediaServiceConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSAnalytics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSDDefaultsInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSDeviceInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPublicDBInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSServiceAppInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSServiceResolutionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSServiceUpdatedHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSUserAccountInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MediaService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MediaServiceConfiguration
|| __TEXT.__const _MSCKShareTimeoutErrorMaxRetryCount
|| __TEXT.__const _MSCKShareTimeoutRetryIntervalInSecs
|| __TEXT.__const _MSCloudKitDataHomeDataSyncTimeoutInSec
|| __TEXT.__const _MSMaxDelayInSecsForSchedulingCoalescerTask
|| __TEXT.__const _MSMaxWaitInSecondsForFetchDataFromCloudKit
|| __TEXT.__const _MSMaxWaitTimeForServiceIconDownload
|| __TEXT.__const _MSMinDelayInSecForSchedulingCoalescerTask
|| __TEXT.__const _MSPrivateDatabaseRefreshIntervalInSecs
|| __TEXT.__const _MSPublicDatabaseRefreshIntervalInSecs
|| __TEXT.__const _MSiTunesCloudSubscriptionStatusMaxTimeOut
|| __TEXT.__const _MediaSetupVersionNumber
|| __TEXT.__const _MediaSetupVersionString
|| __TEXT.__text _findSettingWithKeyPath
__ AssistantServices: _AFPreferencesSupportedMultiUserLanguages
__ AssistantServices: _OBJC_CLASS_$_AFMultiUserConnection
__ AssistantServices: _OBJC_CLASS_$_AFPreferences
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKErrorIsCode
__ CloudKit: _CKErrorRetryAfterKey
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudMediaServicesInterfaceKit: _CMSCloudExtensionLanguageCode
__ CloudMediaServicesInterfaceKit: _CMSExtensionEndpointIntentPlayMedia
__ CloudMediaServicesInterfaceKit: _OBJC_CLASS_$_CMSCloudExtensionConfiguration
__ CloudMediaServicesInterfaceKit: _OBJC_CLASS_$_CMSNetworkActivity
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreUtils: _UpTicksToMilliseconds
__ CoreUtils: _UpTicksToSeconds
__ CoreUtils: _UpTicksToSecondsF
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionItem
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ HomeKit: _HMAccessoryCategoryTypeHomePod
__ HomeKit: _OBJC_CLASS_$_HMAccessory
__ HomeKit: _OBJC_CLASS_$_HMAccessorySettings
__ HomeKit: _OBJC_CLASS_$_HMHome
__ HomeKit: _OBJC_CLASS_$_HMUser
__ UIKitCore: _OBJC_CLASS_$_UIApplication
__ UIKitCore: _OBJC_CLASS_$_UIViewController
__ UIKitCore: _OBJC_CLASS_$__UIRemoteViewController
__ UIKitCore: _OBJC_METACLASS_$_UIViewController
__ UIKitCore: _OBJC_METACLASS_$__UIRemoteViewController
__ iTunesCloud: _ICSiriPostDynamiteClientStateChangedNotification
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
MSBaseSetupEvent : NSObject
 @property  NSString *eventName

  // instance methods
  -[MSBaseSetupEvent .cxx_destruct]
  -[MSBaseSetupEvent init]
  -[MSBaseSetupEvent eventName]
  -[MSBaseSetupEvent setEventName:]
  -[MSBaseSetupEvent encoded]


MSSetupCompleteEvent : MSBaseSetupEvent
 @property  NSString *serviceID
 @property  NSDate *startTime
 @property  NSDate *endTime
 @property  unsigned long numberOfHomesWithVR
 @property  unsigned long numberOfHomeAdded
 @property  BOOL openDefaultService
 @property  BOOL didSwitchAccount

  // instance methods
  -[MSSetupCompleteEvent endTime]
  -[MSSetupCompleteEvent setStartTime:]
  -[MSSetupCompleteEvent setEndTime:]
  -[MSSetupCompleteEvent .cxx_destruct]
  -[MSSetupCompleteEvent setServiceID:]
  -[MSSetupCompleteEvent serviceID]
  -[MSSetupCompleteEvent init]
  -[MSSetupCompleteEvent startTime]
  -[MSSetupCompleteEvent encoded]
  -[MSSetupCompleteEvent addHome:]
  -[MSSetupCompleteEvent setNumberOfHomeAdded:]
  -[MSSetupCompleteEvent setNumberOfHomesWithVR:]
  -[MSSetupCompleteEvent setDidSwitchAccount:]
  -[MSSetupCompleteEvent setOpenDefaultService:]
  -[MSSetupCompleteEvent numberOfHomeAdded]
  -[MSSetupCompleteEvent numberOfHomesWithVR]
  -[MSSetupCompleteEvent openDefaultService]
  -[MSSetupCompleteEvent didSwitchAccount]


MSSetupFailedEvent : MSBaseSetupEvent
 @property  NSString *serviceID
 @property  NSString *errorName

  // instance methods
  -[MSSetupFailedEvent .cxx_destruct]
  -[MSSetupFailedEvent setServiceID:]
  -[MSSetupFailedEvent serviceID]
  -[MSSetupFailedEvent encoded]
  -[MSSetupFailedEvent setErrorName:]
  -[MSSetupFailedEvent initWithErrorNamed:]
  -[MSSetupFailedEvent errorName]


MSSetupEarlyExitEvent : MSBaseSetupEvent
 @property  NSString *serviceID
 @property  NSString *exitReason
 @property  BOOL didEncounterError

  // instance methods
  -[MSSetupEarlyExitEvent .cxx_destruct]
  -[MSSetupEarlyExitEvent setServiceID:]
  -[MSSetupEarlyExitEvent serviceID]
  -[MSSetupEarlyExitEvent exitReason]
  -[MSSetupEarlyExitEvent encoded]
  -[MSSetupEarlyExitEvent setExitReason:]
  -[MSSetupEarlyExitEvent didEncounterError]
  -[MSSetupEarlyExitEvent setDidEncounterError:]
  -[MSSetupEarlyExitEvent initWithExitReason:didEncounterError:]


MSServiceResolutionInfo : NSObject <NSSecureCoding>
 @property  MSServiceAppInfo *serviceAppInfo
 @property  MSUserAccountInfo *userAccountInfo

  // class methods
  +[MSServiceResolutionInfo supportsSecureCoding]

  // instance methods
  -[MSServiceResolutionInfo initWithCoder:]
  -[MSServiceResolutionInfo .cxx_destruct]
  -[MSServiceResolutionInfo encodeWithCoder:]
  -[MSServiceResolutionInfo initWithServiceAppInfo:userAccountInfo:]
  -[MSServiceResolutionInfo serviceAppInfo]
  -[MSServiceResolutionInfo userAccountInfo]


MSAuthTokenProvider : NSObject
  // class methods
  +[MSAuthTokenProvider fetchAuthTokensForMediaService:networkActivity:completion:]
  +[MSAuthTokenProvider validateConfigurationResourceForMediaService:networkActivity:completion:]


MSDDefaultsInfo : NSObject <NSSecureCoding>
 @property  NSString *recordName
 @property  NSString *recordZoneName
 @property  NSString *recordType
 @property  MediaService *service
 @property  NSUUID *homeID
 @property  NSUUID *homeUserID

  // class methods
  +[MSDDefaultsInfo supportsSecureCoding]

  // instance methods
  -[MSDDefaultsInfo recordType]
  -[MSDDefaultsInfo recordZoneName]
  -[MSDDefaultsInfo initWithCoder:]
  -[MSDDefaultsInfo homeID]
  -[MSDDefaultsInfo setRecordName:]
  -[MSDDefaultsInfo .cxx_destruct]
  -[MSDDefaultsInfo setRecordType:]
  -[MSDDefaultsInfo setRecordZoneName:]
  -[MSDDefaultsInfo recordName]
  -[MSDDefaultsInfo service]
  -[MSDDefaultsInfo encodeWithCoder:]
  -[MSDDefaultsInfo initWithService:homeID:homeUserID:]
  -[MSDDefaultsInfo homeUserID]


CMSAuthenticationConfiguration : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *clientID
 @property  NSString *clientSecret
 @property  NSURL *authorizationURL
 @property  NSString *scope

  // class methods
  +[CMSAuthenticationConfiguration supportsSecureCoding]
  +[CMSAuthenticationConfiguration authConfigurationWithClientID:clientSecret:authorizationURL:scope:]
  +[CMSAuthenticationConfiguration authConfigurationFromMSAuthData:]

  // instance methods
  -[CMSAuthenticationConfiguration initWithCoder:]
  -[CMSAuthenticationConfiguration .cxx_destruct]
  -[CMSAuthenticationConfiguration scope]
  -[CMSAuthenticationConfiguration jsonDictionary]
  -[CMSAuthenticationConfiguration authorizationURL]
  -[CMSAuthenticationConfiguration copyWithZone:]
  -[CMSAuthenticationConfiguration encodeWithCoder:]
  -[CMSAuthenticationConfiguration clientID]
  -[CMSAuthenticationConfiguration clientSecret]
  -[CMSAuthenticationConfiguration initWithClientID:clientSecret:authorizationURL:scope:]
  -[CMSAuthenticationConfiguration basicPropertiesDictionary]


CMSAuthenticationCredential : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *authToken
 @property  NSString *tokenType
 @property  NSDate *authTokenExpiration
 @property  NSString *scope
 @property  NSString *refreshToken
 @property  NSString *authHeader

  // class methods
  +[CMSAuthenticationCredential supportsSecureCoding]
  +[CMSAuthenticationCredential authCredentialWithToken:tokenType:expirationDate:scope:refreshToken:]
  +[CMSAuthenticationCredential authCredentialFromMSAuthData:]

  // instance methods
  -[CMSAuthenticationCredential initWithCoder:]
  -[CMSAuthenticationCredential authToken]
  -[CMSAuthenticationCredential refreshToken]
  -[CMSAuthenticationCredential tokenType]
  -[CMSAuthenticationCredential .cxx_destruct]
  -[CMSAuthenticationCredential scope]
  -[CMSAuthenticationCredential jsonDictionary]
  -[CMSAuthenticationCredential copyWithZone:]
  -[CMSAuthenticationCredential encodeWithCoder:]
  -[CMSAuthenticationCredential authHeader]
  -[CMSAuthenticationCredential basicPropertiesDictionary]
  -[CMSAuthenticationCredential initWithToken:tokenType:expirationDate:scope:refreshToken:]
  -[CMSAuthenticationCredential authTokenExpiration]


MSOAuthTokenHandler : NSObject
 @property  CMSNetworkActivity *parentNetworkActivity
 @property  CMSNetworkActivity *networkActivity
 @property  CMSAuthenticationConfiguration *authorizationConfiguration
 @property  CMSAuthenticationCredential *authorizationCredential
 @property  NSURLSessionConfiguration *URLSessionConfiguration

  // class methods
  +[MSOAuthTokenHandler tokenHandlerWithConfiguration:existingCredential:URLSessionConfiguration:parentNetworkActivity:]

  // instance methods
  -[MSOAuthTokenHandler .cxx_destruct]
  -[MSOAuthTokenHandler setNetworkActivity:]
  -[MSOAuthTokenHandler URLSessionConfiguration]
  -[MSOAuthTokenHandler authorizationCredential]
  -[MSOAuthTokenHandler networkActivity]
  -[MSOAuthTokenHandler fetchTokens:]
  -[MSOAuthTokenHandler initWithConfiguration:existingCredential:URLSessionConfiguration:parentNetworkActivity:]
  -[MSOAuthTokenHandler performTokenFetchTaskWithSession:bodyString:completionHandler:]
  -[MSOAuthTokenHandler parentNetworkActivity]
  -[MSOAuthTokenHandler performTokenGrantRequestWithSession:completionHandler:]
  -[MSOAuthTokenHandler performTokenRefreshWithSession:completionHandler:]
  -[MSOAuthTokenHandler authorizationConfiguration]


MSAuthenticationConfiguration : NSObject <NSSecureCoding, NSCopying>
 @property  CMSAuthenticationConfiguration *configuration

  // class methods
  +[MSAuthenticationConfiguration supportsSecureCoding]

  // instance methods
  -[MSAuthenticationConfiguration initWithCoder:]
  -[MSAuthenticationConfiguration configuration]
  -[MSAuthenticationConfiguration .cxx_destruct]
  -[MSAuthenticationConfiguration copyWithZone:]
  -[MSAuthenticationConfiguration encodeWithCoder:]


MSAuthenticationCredential : NSObject <NSSecureCoding, NSCopying>
 @property  CMSAuthenticationCredential *credential

  // class methods
  +[MSAuthenticationCredential supportsSecureCoding]

  // instance methods
  -[MSAuthenticationCredential credential]
  -[MSAuthenticationCredential initWithCoder:]
  -[MSAuthenticationCredential .cxx_destruct]
  -[MSAuthenticationCredential copyWithZone:]
  -[MSAuthenticationCredential encodeWithCoder:]


MSServiceUpdatedHandler : NSObject
 @property  <MediaServiceUpdatedClientDelegate> *delegate

  // class methods
  +[MSServiceUpdatedHandler shared]

  // instance methods
  -[MSServiceUpdatedHandler mediaServiceRemoved:homeUserID:]
  -[MSServiceUpdatedHandler .cxx_destruct]
  -[MSServiceUpdatedHandler setDelegate:]
  -[MSServiceUpdatedHandler mediaServiceChanged:homeUserID:]
  -[MSServiceUpdatedHandler delegate]
  -[MSServiceUpdatedHandler defaultMediaServiceUpdated:homeUserID:]


MSRemovalEvent : NSObject
 @property  NSString *serviceId

  // instance methods
  -[MSRemovalEvent serviceId]
  -[MSRemovalEvent setServiceId:]
  -[MSRemovalEvent .cxx_destruct]
  -[MSRemovalEvent initWithServiceId:]


MSPrimaryUserChangedEvent : NSObject
 @property  BOOL changedToHomeOwner
 @property  BOOL changedToUserNotInHome
 @property  BOOL isAutomatic

  // instance methods
  -[MSPrimaryUserChangedEvent isAutomatic]
  -[MSPrimaryUserChangedEvent setIsAutomatic:]
  -[MSPrimaryUserChangedEvent initWithAccessory:]
  -[MSPrimaryUserChangedEvent setChangedToHomeOwner:]
  -[MSPrimaryUserChangedEvent setChangedToUserNotInHome:]
  -[MSPrimaryUserChangedEvent changedToHomeOwner]
  -[MSPrimaryUserChangedEvent changedToUserNotInHome]


MSServiceEvent : NSObject
 @property  int eventType
 @property  NSString *eventName
 @property  NSUUID *serviceID
 @property  BOOL didSucceed
 @property  MSStopwatch *stopwatch

  // instance methods
  -[MSServiceEvent initWithEventType:]
  -[MSServiceEvent .cxx_destruct]
  -[MSServiceEvent setServiceID:]
  -[MSServiceEvent serviceID]
  -[MSServiceEvent eventName]
  -[MSServiceEvent eventType]
  -[MSServiceEvent setDidSucceed:]
  -[MSServiceEvent setEventType:]
  -[MSServiceEvent didSucceed]
  -[MSServiceEvent stopwatch]
  -[MSServiceEvent setStopwatch:]
  -[MSServiceEvent initWithEventType:serviceID:didSucceed:]
  -[MSServiceEvent initWithEventType:serviceID:]


MSPublicDBInfo : NSObject <NSSecureCoding>
 @property  NSString *serviceName
 @property  NSString *serviceID
 @property  NSString *serviceType
 @property  NSString *configurationPublicKey
 @property  NSString *recordName
 @property  NSURL *serviceIconPath
 @property  NSArray *bundleIDS

  // class methods
  +[MSPublicDBInfo supportsSecureCoding]

  // instance methods
  -[MSPublicDBInfo serviceName]
  -[MSPublicDBInfo initWithCoder:]
  -[MSPublicDBInfo setRecordName:]
  -[MSPublicDBInfo setServiceType:]
  -[MSPublicDBInfo .cxx_destruct]
  -[MSPublicDBInfo setConfigurationPublicKey:]
  -[MSPublicDBInfo serviceID]
  -[MSPublicDBInfo serviceIconPath]
  -[MSPublicDBInfo configurationPublicKey]
  -[MSPublicDBInfo recordName]
  -[MSPublicDBInfo setServiceIconPath:]
  -[MSPublicDBInfo bundleIDS]
  -[MSPublicDBInfo setBundleIDS:]
  -[MSPublicDBInfo encodeWithCoder:]
  -[MSPublicDBInfo initWithServiceName:serviceID:]
  -[MSPublicDBInfo serviceType]


MSServer : NSObject <NSXPCListenerDelegate, MSAccountsImplementer, MediaServiceUpdatedClientDelegate>
 @property  NSMutableSet *connections
 @property  <MSAccountsImplementer> *accountsInterfaceDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSServer _removeConnection:]
  -[MSServer setConnections:]
  -[MSServer overrideAppleMusicSubscriptionStatus:homeUserIDS:completion:]
  -[MSServer setVersion:completion:]
  -[MSServer getResolvedServiceInfo:sharedUserID:completion:]
  -[MSServer .cxx_destruct]
  -[MSServer getServiceConfigurationInfo:serviceID:completion:]
  -[MSServer _isConnectionEntitled:]
  -[MSServer userDidRemoveService:homeUserID:]
  -[MSServer openConnection]
  -[MSServer updateDefaultMediaService:homeID:homeUserID:completion:]
  -[MSServer requestAuthRenewalForMediaService:homeUserID:parentNetworkActivity:completion:]
  -[MSServer getAvailableServices:userIdentifier:completion:]
  -[MSServer addMediaServiceToHome:homeID:homeUserID:completion:]
  -[MSServer connections]
  -[MSServer accountsInterfaceDelegate]
  -[MSServer getPublicInfoForBundleID:completion:]
  -[MSServer thirdPartyMusicAvailable:completion:]
  -[MSServer serviceSettingDidUpdate:homeUserID:]
  -[MSServer _initializeServer]
  -[MSServer _addConnection:]
  -[MSServer setAccountsInterfaceDelegate:]
  -[MSServer switchUserAccountInfo:homeID:homeUserID:completion:]
  -[MSServer getDefaultMediaServiceForAllUsers:]
  -[MSServer getResolvedServiceInfo:completion:]
  -[MSServer updateProperty:homeID:homeUserID:withOptions:completion:]
  -[MSServer userDidUpdateDefaultService:homeUserID:]
  -[MSServer getDefaultMediaService:homeUserID:completion:]
  -[MSServer removeMediaService:homeID:homeUserID:completion:]
  -[MSServer getCachedAvailableServices:userIdentifier:completion:]
  -[MSServer listener:shouldAcceptNewConnection:]
  -[MSServer activeServiceApplicationInformationForSharedUserID:completionHandler:]
  -[MSServer initWithAccountsDelegate:]
  -[MSServer getCachedServiceInfo:homeUserID:endpointID:completion:]


MSAssistantPreferences : NSObject
 @property  AFMultiUserConnection *connection

  // class methods
  +[MSAssistantPreferences sharedPreferences]
  +[MSAssistantPreferences isMultiUserEnabledForSiri]
  +[MSAssistantPreferences intentExamples]
  +[MSAssistantPreferences supportedMediaIntents]

  // instance methods
  -[MSAssistantPreferences .cxx_destruct]
  -[MSAssistantPreferences setConnection:]
  -[MSAssistantPreferences init]
  -[MSAssistantPreferences connection]
  -[MSAssistantPreferences getHomeUserIDForSpeaker:completion:]
  -[MSAssistantPreferences getSharedUserIDForHomeUser:completion:]


MSServiceAppInfo : NSObject <NSSecureCoding>
 @property  NSArray *alternateBundleIDS
 @property  NSString *serviceName
 @property  NSString *serviceBundleID

  // class methods
  +[MSServiceAppInfo supportsSecureCoding]

  // instance methods
  -[MSServiceAppInfo serviceName]
  -[MSServiceAppInfo initWithCoder:]
  -[MSServiceAppInfo .cxx_destruct]
  -[MSServiceAppInfo encodeWithCoder:]
  -[MSServiceAppInfo initWithServiceName:serviceBundleID:]
  -[MSServiceAppInfo serviceBundleID]
  -[MSServiceAppInfo alternateBundleIDS]
  -[MSServiceAppInfo setAlternateBundleIDS:]


_MSRemoteViewController : _UIRemoteViewController <MSViewServiceHostProtocol>
 @property  <MSViewServiceHostProtocol> *host
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_MSRemoteViewController exportedInterface]
  +[_MSRemoteViewController serviceViewControllerInterface]

  // instance methods
  -[_MSRemoteViewController .cxx_destruct]
  -[_MSRemoteViewController setHost:]
  -[_MSRemoteViewController host]
  -[_MSRemoteViewController requestDismiss]


MSDeviceInfo : NSObject
  // class methods
  +[MSDeviceInfo isDeviceiPhone]
  +[MSDeviceInfo deviceCanManageMultiUser]
  +[MSDeviceInfo isDeviceiPad]
  +[MSDeviceInfo isDeviceAppleTV]
  +[MSDeviceInfo isDeviceAudioAccessory]
  +[MSDeviceInfo deviceSupportsMultipleUsers]


MSAnalytics : NSObject
  // class methods
  +[MSAnalytics sendSetupEvent:]
  +[MSAnalytics sendServiceEvent:]
  +[MSAnalytics sendSeviceRequestLapseEvent:]
  +[MSAnalytics sendRemovalEvent:]
  +[MSAnalytics sendConfigEvent:]
  +[MSAnalytics sendUserRegisteredNumberOfServices:]
  +[MSAnalytics sendPlayIntent:]
  +[MSAnalytics sendPrimaryUserUpdatedOn:]


MSSetupSession : NSObject
 @property  unsigned long testFlags
 @property  MSSetupViewController *viewController
 @property  <MSAuthenticationPresentationContext> *presentationContext
 @property  MSServiceAccount *account

  // instance methods
  -[MSSetupSession viewController]
  -[MSSetupSession account]
  -[MSSetupSession .cxx_destruct]
  -[MSSetupSession testFlags]
  -[MSSetupSession setPresentationContext:]
  -[MSSetupSession startWithError:]
  -[MSSetupSession presentationContext]
  -[MSSetupSession initWithServiceAccount:test:]
  -[MSSetupSession initWithServiceAccount:]


MSUserAccountInfo : NSObject <NSSecureCoding>
 @property  NSString *homeUserID
 @property  NSString *sharedUserID

  // class methods
  +[MSUserAccountInfo supportsSecureCoding]

  // instance methods
  -[MSUserAccountInfo initWithCoder:]
  -[MSUserAccountInfo .cxx_destruct]
  -[MSUserAccountInfo encodeWithCoder:]
  -[MSUserAccountInfo sharedUserID]
  -[MSUserAccountInfo homeUserID]
  -[MSUserAccountInfo initWithHomeUserID:sharedUserID:]


MSServiceRequestLapseEvent : NSObject
 @property  NSString *serviceID
 @property  NSDate *recordCreationDate
 @property  unsigned long timeOfRequest
 @property  NSDate *dateOfRequest
 @property  unsigned long endTime

  // instance methods
  -[MSServiceRequestLapseEvent endTime]
  -[MSServiceRequestLapseEvent setEndTime:]
  -[MSServiceRequestLapseEvent .cxx_destruct]
  -[MSServiceRequestLapseEvent setServiceID:]
  -[MSServiceRequestLapseEvent serviceID]
  -[MSServiceRequestLapseEvent durationBetweenRequestAndRecordCreation]
  -[MSServiceRequestLapseEvent durationBetweenRequestAndReadyToUse]
  -[MSServiceRequestLapseEvent initWithServiceID:]
  -[MSServiceRequestLapseEvent recordCreationDate]
  -[MSServiceRequestLapseEvent setRecordCreationDate:]
  -[MSServiceRequestLapseEvent timeOfRequest]
  -[MSServiceRequestLapseEvent setTimeOfRequest:]
  -[MSServiceRequestLapseEvent dateOfRequest]
  -[MSServiceRequestLapseEvent setDateOfRequest:]


MSSetupViewController : UIViewController <MSViewServiceHostProtocol, _UIRemoteViewControllerContaining>
 @property  MSServiceAccount *serviceAccount
 @property  unsigned long testFlags
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UIRemoteViewController *_containedRemoteViewController

  // instance methods
  -[MSSetupViewController .cxx_destruct]
  -[MSSetupViewController testFlags]
  -[MSSetupViewController _containedRemoteViewController]
  -[MSSetupViewController dealloc]
  -[MSSetupViewController _setChildViewController:]
  -[MSSetupViewController requestDismiss]
  -[MSSetupViewController initWithServiceAccount:testFlags:]
  -[MSSetupViewController initWithServiceAccount:]
  -[MSSetupViewController createExtension]
  -[MSSetupViewController createExtensionItemWithServiceAccount:]
  -[MSSetupViewController extensionHandleConnection:viewController:error:]
  -[MSSetupViewController serviceAccount]


MSConfigurationEvent : NSObject
 @property  NSString *serviceId

  // instance methods
  -[MSConfigurationEvent serviceId]
  -[MSConfigurationEvent setServiceId:]
  -[MSConfigurationEvent .cxx_destruct]
  -[MSConfigurationEvent initWithServiceId:]


MSStopwatch : NSObject
 @property  unsigned long startTime
 @property  unsigned long stopTime
 @property  unsigned long elapsedTime
 @property  unsigned long elapsedTimeMS
 @property  unsigned long elapsedTimeSeconds
 @property  unsigned long lastLapTime
 @property  long long status
 @property  BOOL isLocked
 @property  NSMutableArray *laps

  // instance methods
  -[MSStopwatch setElapsedTime:]
  -[MSStopwatch lap]
  -[MSStopwatch elapsedTime]
  -[MSStopwatch setStartTime:]
  -[MSStopwatch stopTime]
  -[MSStopwatch laps]
  -[MSStopwatch .cxx_destruct]
  -[MSStopwatch elapsedTimeSeconds]
  -[MSStopwatch stop]
  -[MSStopwatch init]
  -[MSStopwatch isLocked]
  -[MSStopwatch reset]
  -[MSStopwatch startTime]
  -[MSStopwatch setIsLocked:]
  -[MSStopwatch status]
  -[MSStopwatch setStatus:]
  -[MSStopwatch start]
  -[MSStopwatch setStopTime:]
  -[MSStopwatch elapsedTimeMS]
  -[MSStopwatch setElapsedTimeMS:]
  -[MSStopwatch setElapsedTimeSeconds:]
  -[MSStopwatch setLastLapTime:]
  -[MSStopwatch setLaps:]
  -[MSStopwatch lapWithName:]
  -[MSStopwatch toggleLock:]
  -[MSStopwatch lastLapTime]


MSStopwatchLap : NSObject
 @property  NSString *name
 @property  unsigned long lapTime
 @property  unsigned long lapTimeMS

  // instance methods
  -[MSStopwatchLap name]
  -[MSStopwatchLap .cxx_destruct]
  -[MSStopwatchLap setName:]
  -[MSStopwatchLap lapTime]
  -[MSStopwatchLap initWithLapTime:andName:]
  -[MSStopwatchLap setLapTime:]
  -[MSStopwatchLap lapTimeMS]


MediaService : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *serviceName
 @property  NSUUID *serviceID
 @property  NSString *bundleIdentifier
 @property  NSString *accountName
 @property  NSString *serviceType
 @property  CMSAuthenticationConfiguration *authConfiguration
 @property  CMSAuthenticationCredential *authCredential
 @property  BOOL authFatalError
 @property  NSURL *configURL
 @property  NSString *configPublicKey
 @property  NSString *configETag
 @property  NSData *configAsset
 @property  NSURL *iconImageURL
 @property  NSURL *remoteIconURL
 @property  NSArray *alternateBundleIdentifiers
 @property  BOOL serviceRemovable
 @property  BOOL updateListeningHistoryEnabled

  // class methods
  +[MediaService supportsSecureCoding]

  // instance methods
  -[MediaService setAccountName:]
  -[MediaService setServiceName:]
  -[MediaService serviceName]
  -[MediaService initWithCoder:]
  -[MediaService bundleIdentifier]
  -[MediaService setServiceType:]
  -[MediaService .cxx_destruct]
  -[MediaService setServiceID:]
  -[MediaService serviceID]
  -[MediaService accountName]
  -[MediaService setBundleIdentifier:]
  -[MediaService jsonDictionary]
  -[MediaService iconImageURL]
  -[MediaService setIconImageURL:]
  -[MediaService copyWithZone:]
  -[MediaService encodeWithCoder:]
  -[MediaService serviceType]
  -[MediaService configAsset]
  -[MediaService updateListeningHistoryEnabled]
  -[MediaService isServiceRemovable]
  -[MediaService authFatalError]
  -[MediaService authConfiguration]
  -[MediaService authCredential]
  -[MediaService setAuthCredential:]
  -[MediaService setAuthFatalError:]
  -[MediaService configPublicKey]
  -[MediaService configURL]
  -[MediaService basicPropertiesDictionary]
  -[MediaService _failWithError:errorString:]
  -[MediaService initWithMediaServiceIdentifier:]
  -[MediaService setAuthConfiguration:]
  -[MediaService setUpdateListeningHistoryEnabled:]
  -[MediaService setServiceRemovable:]
  -[MediaService setRemoteIconURL:]
  -[MediaService setConfigAsset:]
  -[MediaService setConfigPublicKey:]
  -[MediaService setConfigETag:]
  -[MediaService setConfigURL:]
  -[MediaService setAlternateBundleIdentifiers:]
  -[MediaService initWithServiceAccount:bundleIdentifier:error:]
  -[MediaService configETag]
  -[MediaService remoteIconURL]
  -[MediaService alternateBundleIdentifiers]


MediaServiceConfiguration : NSObject <MediaServiceUpdatedServiceInterfaceDelegate>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <MediaServiceUpdatedDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MediaServiceConfiguration sharedInstance]

  // instance methods
  -[MediaServiceConfiguration _performBlock:]
  -[MediaServiceConfiguration overrideAppleMusicSubscriptionStatus:homeUserIDS:completion:]
  -[MediaServiceConfiguration setVersion:completion:]
  -[MediaServiceConfiguration getResolvedServiceInfo:sharedUserID:completion:]
  -[MediaServiceConfiguration .cxx_destruct]
  -[MediaServiceConfiguration getServiceConfigurationInfo:serviceID:completion:]
  -[MediaServiceConfiguration userDidRemoveService:homeUserID:]
  -[MediaServiceConfiguration setDelegate:]
  -[MediaServiceConfiguration requestAuthRenewalForMediaService:homeUserID:parentNetworkActivity:completion:]
  -[MediaServiceConfiguration setQueue:]
  -[MediaServiceConfiguration getPublicInfoForBundleID:completion:]
  -[MediaServiceConfiguration initWithQueue:]
  -[MediaServiceConfiguration serviceSettingDidUpdate:homeUserID:]
  -[MediaServiceConfiguration getDefaultMediaServiceForAllUsers:]
  -[MediaServiceConfiguration delegate]
  -[MediaServiceConfiguration getResolvedServiceInfo:completion:]
  -[MediaServiceConfiguration userDidUpdateDefaultService:homeUserID:]
  -[MediaServiceConfiguration queue]
  -[MediaServiceConfiguration activeServiceApplicationInformationForSharedUserID:completionHandler:]
  -[MediaServiceConfiguration getCachedServiceInfo:homeUserID:endpointID:completion:]
  -[MediaServiceConfiguration getAvailableServices:completion:]
  -[MediaServiceConfiguration removeServiceFromHome:fromHome:completion:]
  -[MediaServiceConfiguration updateDefaultMediaService:forHome:completion:]
  -[MediaServiceConfiguration updateProperty:forHome:withOptions:completion:]
  -[MediaServiceConfiguration getDefaultMediaService:completion:]
  -[MediaServiceConfiguration getCachedAvailableServices:completion:]
  -[MediaServiceConfiguration thirdPartyMusicAvailable:]
  -[MediaServiceConfiguration getCachedServiceInfo:homeUserID:completion:]
  -[MediaServiceConfiguration addMediaServiceToHome:home:completion:]
  -[MediaServiceConfiguration getServiceConfigurationInfo:completion:]
  -[MediaServiceConfiguration getResolvedServiceAndUser:sharedUserID:completion:]
  -[MediaServiceConfiguration switchUserAccountInfo:home:completion:]


MSServiceAccount : NSObject <NSSecureCoding>
 @property  NSUUID *serviceID
 @property  NSArray *intentExamples
 @property  NSSet *supportedMediaIntents
 @property  NSString *serviceName
 @property  NSString *accountName
 @property  NSString *clientID
 @property  NSString *clientSecret
 @property  NSURL *configurationURL
 @property  NSURL *authorizationTokenURL
 @property  NSString *authorizationScope

  // class methods
  +[MSServiceAccount supportsSecureCoding]

  // instance methods
  -[MSServiceAccount serviceName]
  -[MSServiceAccount initWithCoder:]
  -[MSServiceAccount setConfigurationURL:]
  -[MSServiceAccount .cxx_destruct]
  -[MSServiceAccount setServiceID:]
  -[MSServiceAccount serviceID]
  -[MSServiceAccount accountName]
  -[MSServiceAccount setClientID:]
  -[MSServiceAccount configurationURL]
  -[MSServiceAccount encodeWithCoder:]
  -[MSServiceAccount clientID]
  -[MSServiceAccount clientSecret]
  -[MSServiceAccount intentExamples]
  -[MSServiceAccount supportedMediaIntents]
  -[MSServiceAccount authorizationTokenURL]
  -[MSServiceAccount authorizationScope]
  -[MSServiceAccount initWithServiceName:accountName:]
  -[MSServiceAccount setClientSecret:]
  -[MSServiceAccount setAuthorizationTokenURL:]
  -[MSServiceAccount setAuthorizationScope:]


HMHome(MediaSetup)
	// instance methods
	-[HMHome(MediaSetup) allUsers]
	-[HMHome(MediaSetup) hasAccessoryTypeHomePod]
	-[HMHome(MediaSetup) isCurrentUserHomeOwner]
	-[HMHome(MediaSetup) isUpdatedForBolt]
	-[HMHome(MediaSetup) userIdentifierBelongsToCurrentUser:]
	-[HMHome(MediaSetup) userIdentifierBelongsInHome:]
	-[HMHome(MediaSetup) userWithIdentifier:]
	-[HMHome(MediaSetup) allUsersIdentifiers]
	-[HMHome(MediaSetup) allUsersExcludingHomeOwner]
	-[HMHome(MediaSetup) allUsersIdentifiersExcludingOwner]

(formDataEncoding)
	// instance methods
	-[(formDataEncoding) formEncodedString]
	-[(formDataEncoding) formDecodedString]

HMAccessory(MediaSetup)
	// instance methods
	-[HMAccessory(MediaSetup) isHomePod]
	-[HMAccessory(MediaSetup) isPartOfHome:]
	-[HMAccessory(MediaSetup) isEndpoint]

HMAccessorySettings(MediaSetup)
	// instance methods
	-[HMAccessorySettings(MediaSetup) _settingForKeyPath:]
	-[HMAccessorySettings(MediaSetup) _getMusicGroup]
	-[HMAccessorySettings(MediaSetup) isAllowExplicitContentEnabled]
	-[HMAccessorySettings(MediaSetup) isUpdateListeningHistoryEnabled]

(MediaSetup)
	// instance methods
	-[(MediaSetup) CKErrorHasUnderlyingErrorCode:]
	-[(MediaSetup) translateCKErrorToMSError]
	-[(MediaSetup) CKErrorHasErrorCode:]
	-[(MediaSetup) isErrorFatal]

(MediaSetup)
	// instance methods
	-[(MediaSetup) ms_objectsWithOptions:passingTest:]
	-[(MediaSetup) ms_objectsPassingTest:]
	-[(MediaSetup) ms_anyPassingTest:]

HMUser(MediaSetup)
	// instance methods
	-[HMUser(MediaSetup) ms_voiceRecognitionEnabledInHome:]
	-[HMUser(MediaSetup) _settingForKeyPath:home:]
	-[HMUser(MediaSetup) ms_allowiTunesAccountInHome:]

01 00 0700 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFMultiUserConnection 
01 00 0700 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFPreferences 
01 00 0300 /System/Library/PrivateFrameworks/CloudMediaServicesInterfaceKit.framework/CloudMediaServicesInterfaceKit: CMSCloudExtensionConfiguration 
01 00 0300 /System/Library/PrivateFrameworks/CloudMediaServicesInterfaceKit.framework/CloudMediaServicesInterfaceKit: CMSNetworkActivity 
01 00 0500 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMAccessory 
01 00 0500 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMAccessorySettings 
01 00 0500 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMHome 
01 00 0500 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMUser 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionItem 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0800 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UIApplication 
01 00 0800 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UIViewController 
01 00 0800 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: _UIRemoteViewController 
