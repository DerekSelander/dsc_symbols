|| __DATA.__objc_data _OBJC_CLASS_$_MTKMesh
|| __DATA.__objc_data _OBJC_CLASS_$_MTKMeshBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTKSubmesh
|| __DATA.__objc_data _OBJC_CLASS_$_MTKTextureIOBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTKTextureIOBufferMap
|| __DATA.__objc_data _OBJC_METACLASS_$_MTKMesh
|| __DATA.__objc_data _OBJC_METACLASS_$_MTKMeshBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTKSubmesh
|| __DATA.__objc_data _OBJC_METACLASS_$_MTKTextureIOBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTKTextureIOBufferMap
|| __DATA_CONST.__const _MTKModelErrorDomain
|| __DATA_CONST.__const _MTKModelErrorKey
|| __DATA_CONST.__const _MTKTextureLoaderCubeLayoutVertical
|| __DATA_CONST.__const _MTKTextureLoaderErrorDomain
|| __DATA_CONST.__const _MTKTextureLoaderErrorKey
|| __DATA_CONST.__const _MTKTextureLoaderOptionAllocateMipmaps
|| __DATA_CONST.__const _MTKTextureLoaderOptionCubeLayout
|| __DATA_CONST.__const _MTKTextureLoaderOptionGenerateMipmaps
|| __DATA_CONST.__const _MTKTextureLoaderOptionOrigin
|| __DATA_CONST.__const _MTKTextureLoaderOptionPackedRowStride
|| __DATA_CONST.__const _MTKTextureLoaderOptionSRGB
|| __DATA_CONST.__const _MTKTextureLoaderOptionTextureCPUCacheMode
|| __DATA_CONST.__const _MTKTextureLoaderOptionTextureStorageMode
|| __DATA_CONST.__const _MTKTextureLoaderOptionTextureUsage
|| __DATA_CONST.__const _MTKTextureLoaderOriginBottomLeft
|| __DATA_CONST.__const _MTKTextureLoaderOriginFlippedVertically
|| __DATA_CONST.__const _MTKTextureLoaderOriginTopLeft
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MTKMeshBufferAllocator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MTKTextureIOBufferAllocator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MTKTextureLoader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MTKView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MTKMeshBufferAllocator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MTKTextureIOBufferAllocator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MTKTextureLoader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MTKView
|| __TEXT.__text _MTKMetalVertexDescriptorFromModelIO
|| __TEXT.__text _MTKMetalVertexDescriptorFromModelIOWithError
|| __TEXT.__text _MTKMetalVertexFormatFromModelIO
|| __TEXT.__text _MTKModelIOVertexDescriptorFromMetal
|| __TEXT.__text _MTKModelIOVertexDescriptorFromMetalWithError
|| __TEXT.__text _MTKModelIOVertexFormatFromMetal
__ Accelerate: _vImageVerticalReflect_ARGB16U
__ Accelerate: _vImageVerticalReflect_ARGB8888
__ Accelerate: _vImageVerticalReflect_ARGBFFFF
__ Accelerate: _vImageVerticalReflect_Planar16U
__ Accelerate: _vImageVerticalReflect_Planar8
__ Accelerate: _vImageVerticalReflect_PlanarF
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGDataProviderCopyData
__ CoreGraphics: _CGImageBlockGetBytesPerRow
__ CoreGraphics: _CGImageBlockGetData
__ CoreGraphics: _CGImageBlockGetRect
__ CoreGraphics: _CGImageBlockSetGetComponentType
__ CoreGraphics: _CGImageBlockSetGetCount
__ CoreGraphics: _CGImageBlockSetGetImageBlock
__ CoreGraphics: _CGImageBlockSetGetPixelSize
__ CoreGraphics: _CGImageBlockSetRelease
__ CoreGraphics: _CGImageGetAlphaInfo
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetBytesPerRow
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetImageProvider
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageProviderCopyImageBlockSetWithOptions
__ CoreGraphics: _CGImageProviderGetColorSpace
__ CoreGraphics: _CGImageProviderGetSize
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreUI: _OBJC_CLASS_$_CUICatalog
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _kCGImagePropertyOrientation
__ Metal: _MTLPixelFormatGetInfoForDevice
__ Metal: _MTLPixelFormatGetName
__ Metal: _OBJC_CLASS_$_MTLRenderPassDescriptor
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ Metal: _OBJC_CLASS_$_MTLVertexDescriptor
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _OBJC_CLASS_$_CAMetalLayer
__ TextureIO: _OBJC_CLASS_$_TXRImageIndependent
__ TextureIO: _OBJC_CLASS_$_TXRPixelFormatInfo
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_initially_inactive
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_qos_class_floor
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _log2
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _putchar
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
MTKTextureLoaderPVR3 : MTKTextureLoaderData
  // class methods
  +[MTKTextureLoaderPVR3 isPVR3File:]

  // instance methods
  -[MTKTextureLoaderPVR3 dealloc]
  -[MTKTextureLoaderPVR3 initWithData:options:error:]
  -[MTKTextureLoaderPVR3 parseMetadataWithError:]
  -[MTKTextureLoaderPVR3 determineFormat:colorSpace:channelType:options:]
  -[MTKTextureLoaderPVR3 determineBlockSize:blocksWide:blocksHigh:bytesPerBlock:fromFormat:width:andHeight:]
  -[MTKTextureLoaderPVR3 getDataForArrayElement:face:level:depthPlane:bytesPerRow:bytesPerImage:]


MTKTextureUploader : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MTKTextureUploader dealloc]
  -[MTKTextureUploader finishWithCompletionHandler:]
  -[MTKTextureUploader generateMipmapsForTexture:]
  -[MTKTextureUploader copyBytes:toTexture:bitsPerPixel:pixelComponents:bytesPerRow:bytesPerImage:region:slice:level:flipVertically:]
  -[MTKTextureUploader copyTexture:toTexture:]
  -[MTKTextureUploader initWithDevice:commandQueue:notifyQueue:]
  -[MTKTextureUploader newTextureWithData:options:]


MTKTextureLoaderMDL : MTKTextureLoaderData
  // instance methods
  -[MTKTextureLoaderMDL dealloc]
  -[MTKTextureLoaderMDL getDataForArrayElement:face:level:depthPlane:bytesPerRow:bytesPerImage:]
  -[MTKTextureLoaderMDL determineFormatFromChannelEncoding:channelCount:error:]
  -[MTKTextureLoaderMDL initWithMDLTexture:options:error:]


MTKTextureIOBufferMap : NSObject /usr/lib/libSystem.B.dylib <TXRBufferMap>
 @property  ^v bytes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTKTextureIOBufferMap bytes]
  -[MTKTextureIOBufferMap initWithContents:]


MTKTextureIOBuffer : NSObject /usr/lib/libSystem.B.dylib <TXRBuffer>
 @property  <MTLBuffer> *buffer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTKTextureIOBuffer map]
  -[MTKTextureIOBuffer copyWithZone:]
  -[MTKTextureIOBuffer buffer]
  -[MTKTextureIOBuffer .cxx_destruct]
  -[MTKTextureIOBuffer initWithLength:device:]
  -[MTKTextureIOBuffer initWithBytesNoCopy:length:deallocNotification:device:error:]


MTKTextureIOBufferAllocator : NSObject /usr/lib/libSystem.B.dylib <TXRBufferAllocator>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTKTextureIOBufferAllocator .cxx_destruct]
  -[MTKTextureIOBufferAllocator newBufferWithLength:]
  -[MTKTextureIOBufferAllocator initWithDevice:]
  -[MTKTextureIOBufferAllocator newBufferWithBytesNoCopy:length:deallocNotification:error:]


MTKTextureLoader : NSObject /usr/lib/libSystem.B.dylib
 @property  <MTLDevice> *device

  // instance methods
  -[MTKTextureLoader device]
  -[MTKTextureLoader dealloc]
  -[MTKTextureLoader initWithDevice:]
  -[MTKTextureLoader newTextureWithCGImage:options:error:]
  -[MTKTextureLoader newTextureWithCGImage:options:completionHandler:]
  -[MTKTextureLoader newTextureWithContentsOfURL:options:completionHandler:]
  -[MTKTextureLoader newTextureWithData:options:error:]
  -[MTKTextureLoader newTexturesWithContentsOfURLs:options:completionHandler:]
  -[MTKTextureLoader newUploaderForOptions:]
  -[MTKTextureLoader _loadData:options:uploader:label:completionHandler:]
  -[MTKTextureLoader _loadData:options:completionHandler:]
  -[MTKTextureLoader _loadCGImage:options:completionHandler:]
  -[MTKTextureLoader _loadMDLTexture:options:completionHandler:]
  -[MTKTextureLoader newTextureWithData:options:completionHandler:]
  -[MTKTextureLoader newTextureWithMDLTexture:options:completionHandler:]
  -[MTKTextureLoader _determineFileType:]
  -[MTKTextureLoader validateGenerateMipmapsForPixelFormat:options:error:]
  -[MTKTextureLoader _newSyncTexturesFromTXRTextures:labels:options:error:]
  -[MTKTextureLoader _newAsyncTextureWithNames:scaleFactor:displayGamut:bundle:options:completionHandler:]
  -[MTKTextureLoader newTexturesWithNames:scaleFactor:bundle:options:completionHandler:]
  -[MTKTextureLoader newTexturesWithNames:scaleFactor:displayGamut:bundle:options:completionHandler:]
  -[MTKTextureLoader newTextureWithName:scaleFactor:bundle:options:completionHandler:]
  -[MTKTextureLoader newTextureWithName:scaleFactor:displayGamut:bundle:options:completionHandler:]
  -[MTKTextureLoader newTextureWithContentsOfURL:options:error:]
  -[MTKTextureLoader newTexturesWithContentsOfURLs:options:error:]
  -[MTKTextureLoader newTextureWithMDLTexture:options:error:]
  -[MTKTextureLoader newTexturesFromTXRTextures:options:error:]
  -[MTKTextureLoader newTextureFromTXRTexture:options:error:]
  -[MTKTextureLoader newTextureWithName:scaleFactor:bundle:options:error:]
  -[MTKTextureLoader newTextureWithName:scaleFactor:displayGamut:bundle:options:error:]


MTKTextureLoaderData : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *imageOrigin
 @property  unsigned long numArrayElements
 @property  unsigned long numFaces
 @property  unsigned long numMipmapLevels
 @property  unsigned long width
 @property  unsigned long height
 @property  unsigned long depth
 @property  unsigned long textureType
 @property  unsigned long pixelFormat

  // instance methods
  -[MTKTextureLoaderData textureType]
  -[MTKTextureLoaderData depth]
  -[MTKTextureLoaderData setHeight:]
  -[MTKTextureLoaderData setPixelFormat:]
  -[MTKTextureLoaderData init]
  -[MTKTextureLoaderData setWidth:]
  -[MTKTextureLoaderData dealloc]
  -[MTKTextureLoaderData width]
  -[MTKTextureLoaderData setDepth:]
  -[MTKTextureLoaderData numFaces]
  -[MTKTextureLoaderData height]
  -[MTKTextureLoaderData pixelFormat]
  -[MTKTextureLoaderData setTextureType:]
  -[MTKTextureLoaderData setNumFaces:]
  -[MTKTextureLoaderData setNumMipmapLevels:]
  -[MTKTextureLoaderData setImageOrigin:]
  -[MTKTextureLoaderData setNumArrayElements:]
  -[MTKTextureLoaderData numMipmapLevels]
  -[MTKTextureLoaderData numArrayElements]
  -[MTKTextureLoaderData getDataForArrayElement:face:level:depthPlane:bytesPerRow:bytesPerImage:]
  -[MTKTextureLoaderData imageOrigin]


MTKTextureLoaderImageIO : MTKTextureLoaderData
  // instance methods
  -[MTKTextureLoaderImageIO dealloc]
  -[MTKTextureLoaderImageIO initWithData:options:error:]
  -[MTKTextureLoaderImageIO getDataForArrayElement:face:level:depthPlane:bytesPerRow:bytesPerImage:]
  -[MTKTextureLoaderImageIO initWithCGImage:options:error:]
  -[MTKTextureLoaderImageIO decodeCGImage:options:]
  -[MTKTextureLoaderImageIO decodeCGImageImageProvider:CGImageProvider:options:]
  -[MTKTextureLoaderImageIO decodeCGImageDataProvider:options:]
  -[MTKTextureLoaderImageIO determineCGImageBlockFormatWithComponentType:alphaInfo:andPixelSizeBytes:andColorSpace:isOptimized:options:]


MTKTextureLoaderKTX : MTKTextureLoaderData
  // class methods
  +[MTKTextureLoaderKTX isKTXFile:]

  // instance methods
  -[MTKTextureLoaderKTX dealloc]
  -[MTKTextureLoaderKTX initWithData:options:error:]
  -[MTKTextureLoaderKTX getDataForArrayElement:face:level:depthPlane:bytesPerRow:bytesPerImage:]
  -[MTKTextureLoaderKTX determineFormatFromType:format:internalFormat:baseInternalFormat:]
  -[MTKTextureLoaderKTX parseKeyValueBytes:length:error:]
  -[MTKTextureLoaderKTX parseKey:value:error:]
  -[MTKTextureLoaderKTX determineFormatFromSizedFormat:]


MTKTextureLoaderPVR : MTKTextureLoaderData
  // class methods
  +[MTKTextureLoaderPVR isPVRFile:]

  // instance methods
  -[MTKTextureLoaderPVR dealloc]
  -[MTKTextureLoaderPVR initWithData:options:error:]
  -[MTKTextureLoaderPVR determineBlockSize:blocksWide:blocksHigh:bytesPerBlock:fromFormat:width:andHeight:]
  -[MTKTextureLoaderPVR getDataForArrayElement:face:level:depthPlane:bytesPerRow:bytesPerImage:]
  -[MTKTextureLoaderPVR determineFormat:options:]


MTKOffscreenDrawable : NSObject /usr/lib/libSystem.B.dylib <CAMetalDrawable>
 @property  CAMetalLayer *layer
 @property  <MTLTexture> *texture
 @property  double presentedTime
 @property  unsigned long drawableID
 @property  <MTLDevice> *device
 @property  {CGSize=dd} size
 @property  unsigned long pixelFormat
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTKOffscreenDrawable texture]
  -[MTKOffscreenDrawable setPixelFormat:]
  -[MTKOffscreenDrawable device]
  -[MTKOffscreenDrawable addPresentedHandler:]
  -[MTKOffscreenDrawable drawableID]
  -[MTKOffscreenDrawable layer]
  -[MTKOffscreenDrawable size]
  -[MTKOffscreenDrawable .cxx_destruct]
  -[MTKOffscreenDrawable presentAfterMinimumDuration:]
  -[MTKOffscreenDrawable present]
  -[MTKOffscreenDrawable setDevice:]
  -[MTKOffscreenDrawable presentedTime]
  -[MTKOffscreenDrawable pixelFormat]
  -[MTKOffscreenDrawable setSize:]
  -[MTKOffscreenDrawable presentAtTime:]
  -[MTKOffscreenDrawable initWithDevice:pixelFormat:size:drawableID:]


MTKMeshBufferAllocator : NSObject /usr/lib/libSystem.B.dylib <MDLMeshBufferAllocator>
 @property  <MTLDevice> *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTKMeshBufferAllocator device]
  -[MTKMeshBufferAllocator .cxx_destruct]
  -[MTKMeshBufferAllocator isEqual:]
  -[MTKMeshBufferAllocator initWithDevice:]
  -[MTKMeshBufferAllocator newBufferWithData:type:]
  -[MTKMeshBufferAllocator newBuffer:type:]
  -[MTKMeshBufferAllocator newBufferFromZone:length:type:]
  -[MTKMeshBufferAllocator newZone:]
  -[MTKMeshBufferAllocator newZoneForBuffersWithSize:andType:]
  -[MTKMeshBufferAllocator newBufferFromZone:data:type:]


MTKSubmesh : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long primitiveType
 @property  unsigned long indexType
 @property  MTKMeshBuffer *indexBuffer
 @property  unsigned long indexCount
 @property  MTKMesh *mesh
 @property  NSString *name

  // instance methods
  -[MTKSubmesh mesh]
  -[MTKSubmesh indexType]
  -[MTKSubmesh primitiveType]
  -[MTKSubmesh .cxx_destruct]
  -[MTKSubmesh name]
  -[MTKSubmesh indexCount]
  -[MTKSubmesh indexBuffer]
  -[MTKSubmesh setName:]
  -[MTKSubmesh initWithMesh:submesh:device:error:]


MTKMesh : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *vertexBuffers
 @property  MDLVertexDescriptor *vertexDescriptor
 @property  NSArray *submeshes
 @property  unsigned long vertexCount
 @property  NSString *name

  // class methods
  +[MTKMesh _createMeshesFromObject:newMeshes:sourceMeshes:device:error:]
  +[MTKMesh newMeshesFromAsset:device:sourceMeshes:error:]

  // instance methods
  -[MTKMesh vertexCount]
  -[MTKMesh .cxx_destruct]
  -[MTKMesh name]
  -[MTKMesh vertexBuffers]
  -[MTKMesh vertexDescriptor]
  -[MTKMesh setName:]
  -[MTKMesh submeshes]
  -[MTKMesh initWithMesh:device:error:]


MTKMeshBufferHolder : NSObject /usr/lib/libSystem.B.dylib
 @property  MTKMeshBuffer *buffer

  // instance methods
  -[MTKMeshBufferHolder setBuffer:]
  -[MTKMeshBufferHolder buffer]


MTKMeshBufferZone : NSObject /usr/lib/libSystem.B.dylib <MDLMeshBufferZone>
 @property  unsigned long capacity
 @property  <MDLMeshBufferAllocator> *allocator
 @property  <MTLBuffer> *buffer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTKMeshBufferZone capacity]
  -[MTKMeshBufferZone allocator]
  -[MTKMeshBufferZone buffer]
  -[MTKMeshBufferZone .cxx_destruct]
  -[MTKMeshBufferZone initWithCapacity:allocator:]
  -[MTKMeshBufferZone newBufferWithLength:type:]
  -[MTKMeshBufferZone destroyBuffer:]


MTKTextureLoaderASTCHelper : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MTKTextureLoaderASTCHelper isASTCHDRData:textureType:error:]


MTKMeshBuffer : NSObject /usr/lib/libSystem.B.dylib <MDLMeshBuffer, MDLNamed>
 @property  unsigned long length
 @property  MTKMeshBufferAllocator *allocator
 @property  <MDLMeshBufferZone> *zone
 @property  <MTLBuffer> *buffer
 @property  unsigned long offset
 @property  unsigned long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name

  // instance methods
  -[MTKMeshBuffer zone]
  -[MTKMeshBuffer map]
  -[MTKMeshBuffer copyWithZone:]
  -[MTKMeshBuffer length]
  -[MTKMeshBuffer allocator]
  -[MTKMeshBuffer buffer]
  -[MTKMeshBuffer dealloc]
  -[MTKMeshBuffer name]
  -[MTKMeshBuffer type]
  -[MTKMeshBuffer offset]
  -[MTKMeshBuffer _newMap]
  -[MTKMeshBuffer setName:]
  -[MTKMeshBuffer fillData:offset:]
  -[MTKMeshBuffer _initWithLength:offset:zone:type:]
  -[MTKMeshBuffer _initWithBytes:length:offset:allocator:zone:type:]
  -[MTKMeshBuffer _initWithLength:allocator:type:]
  -[MTKMeshBuffer _initWithData:allocator:type:]


MTKViewDisplayLinkTarget : NSObject /usr/lib/libSystem.B.dylib
 @property  MTKView *target

  // instance methods
  -[MTKViewDisplayLinkTarget initWithTarget:]
  -[MTKViewDisplayLinkTarget draw]
  -[MTKViewDisplayLinkTarget target]
  -[MTKViewDisplayLinkTarget .cxx_destruct]
  -[MTKViewDisplayLinkTarget setTarget:]


MTKView : UIView /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCoding, CALayerDelegate>
 @property  <MTKViewDelegate> *delegate
 @property  <MTLDevice> *device
 @property  <CAMetalDrawable> *currentDrawable
 @property  BOOL framebufferOnly
 @property  unsigned long depthStencilAttachmentTextureUsage
 @property  unsigned long multisampleColorAttachmentTextureUsage
 @property  BOOL presentsWithTransaction
 @property  unsigned long colorPixelFormat
 @property  unsigned long depthStencilPixelFormat
 @property  unsigned long sampleCount
 @property  {?=dddd} clearColor
 @property  double clearDepth
 @property  unsigned int clearStencil
 @property  <MTLTexture> *depthStencilTexture
 @property  <MTLTexture> *multisampleColorTexture
 @property  MTLRenderPassDescriptor *currentRenderPassDescriptor
 @property  long long preferredFramesPerSecond
 @property  BOOL enableSetNeedsDisplay
 @property  BOOL autoResizeDrawable
 @property  {CGSize=dd} drawableSize
 @property  {CGSize=dd} preferredDrawableSize
 @property  <MTLDevice> *preferredDevice
 @property  BOOL paused
 @property  ^{CGColorSpace=} colorspace
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MTKView layerClass]

  // instance methods
  -[MTKView setPreferredFramesPerSecond:]
  -[MTKView _resizeDrawable]
  -[MTKView depthStencilPixelFormat]
  -[MTKView setDepthStencilAttachmentTextureUsage:]
  -[MTKView preferredFramesPerSecond]
  -[MTKView setClearStencil:]
  -[MTKView createDepthStencilTexture]
  -[MTKView setNilValueForKey:]
  -[MTKView depthStencilAttachmentTextureUsage]
  -[MTKView setAutoResizeDrawable:]
  -[MTKView multisampleColorTexture]
  -[MTKView initWithFrame:device:]
  -[MTKView _applicationWillEnterForeground:]
  -[MTKView setClearColor:]
  -[MTKView _createDisplayLinkForScreen:]
  -[MTKView setColorPixelFormat:atIndex:]
  -[MTKView colorTexturesForceUpdate:]
  -[MTKView _pixelSizeFromPointSize:]
  -[MTKView clearDepth]
  -[MTKView setEnableSetNeedsDisplay:]
  -[MTKView setClearDepth:]
  -[MTKView sampleCount]
  -[MTKView setMultisampleColorAttachmentTextureUsage:]
  -[MTKView getEnvironmentSettings]
  -[MTKView enableSetNeedsDisplay]
  -[MTKView clearColor]
  -[MTKView colorPixelFormat]
  -[MTKView didMoveToWindow]
  -[MTKView draw]
  -[MTKView _applicationDidEnterBackground:]
  -[MTKView releaseDrawables]
  -[MTKView multisampleColorTexturesForceUpdate:]
  -[MTKView colorTextures]
  -[MTKView setDrawableAttachmentIndex:]
  -[MTKView setDepthStencilPixelFormat:]
  -[MTKView _canDrawContent]
  -[MTKView _dumpFrameImageWithFilename:]
  -[MTKView device]
  -[MTKView autoResizeDrawable]
  -[MTKView depthStencilTexture]
  -[MTKView multisampleColorAttachmentTextureUsage]
  -[MTKView _resizeMetalLayerDrawable]
  -[MTKView displayLayer:]
  -[MTKView _updateToNativeScale]
  -[MTKView exportToTargaAtLocation:width:height:size:bytes:]
  -[MTKView drawLayer:inContext:]
  -[MTKView _calculateRefeshesPerSecond]
  -[MTKView nominalFramesPerSecond]
  -[MTKView multisampleColorTextures]
  -[MTKView setNominalFramesPerSecond:]
  -[MTKView _controlsOwnScaleFactor]
  -[MTKView setContentScaleFactor:]
  -[MTKView _dumpFramerate:withFilename:]
  -[MTKView clearStencil]
  -[MTKView currentRenderPassDescriptor]
  -[MTKView currentDrawable]
  -[MTKView drawNumber]
  -[MTKView setSampleCount:]
  -[MTKView setPresentsWithTransaction:]
  -[MTKView preferredDrawableSize]
  -[MTKView __initCommon]
  -[MTKView drawableAttachmentIndex]
  -[MTKView setColorPixelFormat:]
  -[MTKView drawableSize]
  -[MTKView initWithFrame:]
  -[MTKView dealloc]
  -[MTKView .cxx_destruct]
  -[MTKView setDrawableSize:]
  -[MTKView setColorspace:]
  -[MTKView colorspace]
  -[MTKView framebufferOnly]
  -[MTKView encodeWithCoder:]
  -[MTKView setFramebufferOnly:]
  -[MTKView setPaused:]
  -[MTKView setDevice:]
  -[MTKView presentsWithTransaction]
  -[MTKView isPaused]
  -[MTKView setFrame:]
  -[MTKView setDelegate:]
  -[MTKView preferredDevice]
  -[MTKView delegate]
  -[MTKView layoutSubviews]
  -[MTKView initWithCoder:]
  -[MTKView startTime]


01 00 0600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMetalLayer 
01 00 0400 /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI: CUICatalog 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPassDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLVertexDescriptor 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/PrivateFrameworks/TextureIO.framework/TextureIO: TXRImageIndependent 
01 00 0100 /System/Library/PrivateFrameworks/TextureIO.framework/TextureIO: TXRPixelFormatInfo 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
