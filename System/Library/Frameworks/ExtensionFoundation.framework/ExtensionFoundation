|| __DATA.__objc_data _OBJC_CLASS_$_EXEnumerator
|| __DATA.__objc_data _OBJC_CLASS_$_EXExtensionPointCatalog
|| __DATA.__objc_data _OBJC_CLASS_$_EXFrameworkScanner
|| __DATA.__objc_data _OBJC_CLASS_$_EXUIKit_Subsystem
|| __DATA.__objc_data _OBJC_CLASS_$__EXConnectionHandlerExtension
|| __DATA.__objc_data _OBJC_CLASS_$__EXExtensionContext
|| __DATA.__objc_data _OBJC_CLASS_$__EXExtensionInstanceIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$__EXExtensionProcess
|| __DATA.__objc_data _OBJC_CLASS_$__EXExtensionProcessHandle
|| __DATA.__objc_data _OBJC_CLASS_$__EXExtensionProcessMannger
|| __DATA.__objc_data _OBJC_CLASS_$__EXHostConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$__EXLaunchConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$__EXNSExtensionShimExtension
|| __DATA.__objc_data _OBJC_CLASS_$__EXNSExtensionShimScene
|| __DATA.__objc_data _OBJC_CLASS_$__EXPromise
|| __DATA.__objc_data _OBJC_CLASS_$__EXQueryObserver
|| __DATA.__objc_data _OBJC_CLASS_$__EXSceneSessionConnectionRequest
|| __DATA.__objc_data _OBJC_CLASS_$__EXSceneSessionConnectionResponse
|| __DATA.__objc_data _OBJC_CLASS_$__EXService
|| __DATA.__objc_data _OBJC_CLASS_$__EXServiceClient
|| __DATA.__objc_data _OBJC_METACLASS_$_EXEnumerator
|| __DATA.__objc_data _OBJC_METACLASS_$_EXExtensionPointCatalog
|| __DATA.__objc_data _OBJC_METACLASS_$_EXFrameworkScanner
|| __DATA.__objc_data _OBJC_METACLASS_$_EXUIKit_Subsystem
|| __DATA.__objc_data _OBJC_METACLASS_$__EXConnectionHandlerExtension
|| __DATA.__objc_data _OBJC_METACLASS_$__EXExtensionContext
|| __DATA.__objc_data _OBJC_METACLASS_$__EXExtensionInstanceIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$__EXExtensionProcess
|| __DATA.__objc_data _OBJC_METACLASS_$__EXExtensionProcessHandle
|| __DATA.__objc_data _OBJC_METACLASS_$__EXExtensionProcessMannger
|| __DATA.__objc_data _OBJC_METACLASS_$__EXHostConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$__EXLaunchConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$__EXNSExtensionShimExtension
|| __DATA.__objc_data _OBJC_METACLASS_$__EXNSExtensionShimScene
|| __DATA.__objc_data _OBJC_METACLASS_$__EXPromise
|| __DATA.__objc_data _OBJC_METACLASS_$__EXQueryObserver
|| __DATA.__objc_data _OBJC_METACLASS_$__EXSceneSessionConnectionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$__EXSceneSessionConnectionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$__EXService
|| __DATA.__objc_data _OBJC_METACLASS_$__EXServiceClient
|| __DATA_CONST.__const _EXExtensionKitErrorDomain
|| __DATA_CONST.__const _EXPromiseCoderException
|| __DATA_CONST.__const __EXEntitlementHostExtensionPointIdentifiers
|| __DATA_CONST.__const __EXSceneRoleDefault
|| __DATA_CONST.__const __kEXCatalystSDKVariantKey
|| __DATA_CONST.__const __kEXComDotApplePrefix
|| __DATA_CONST.__const __kEXConcreteExtensionKey
|| __DATA_CONST.__const _kEXInternalSubserviceName
|| __DATA_CONST.__const _kExtensionKitErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EXConcreteExtension
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EXExtensionRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EXSwiftUI_Subsystem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EXXPCUtil
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EXDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EXExtension
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EXExtensionAvailablility
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EXExtensionIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EXPersona
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EXQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EXQueryController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EXRunningExtension
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EXSceneConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EXSceneSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EXSceneSessionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EXSceneSessionParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EXConcreteExtension
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EXExtensionRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EXSwiftUI_Subsystem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EXXPCUtil
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EXDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EXExtension
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EXExtensionAvailablility
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EXExtensionIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EXPersona
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EXQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EXQueryController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EXRunningExtension
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EXSceneConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EXSceneSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EXSceneSessionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EXSceneSessionParameters
|| __TEXT.__text _EXExtensionIsPredicateSafeToExecuteWithObject
|| __TEXT.__text _EXExtensionIsSafeKeyPathForObject
|| __TEXT.__text _EXExtensionMain
|| __TEXT.__text _EXGetExtensionClass
|| __TEXT.__text _EXGetExtensionContextInternalClass
|| __TEXT.__text _EXGetExtensionContextVendorClass
|| __TEXT.__text __EXAuditTokenEqual
|| __TEXT.__text __EXAuditTokenForCurrentProcess
|| __TEXT.__text __EXAuditTokenGetEntitlementValue
|| __TEXT.__text __EXAuditTokenGetPID
|| __TEXT.__text __EXAuditTokenHasRequiredEntitlements
|| __TEXT.__text __EXConfigureLaunchContext
|| __TEXT.__text __EXDefaultLog
|| __TEXT.__text __EXDiscoveryLog
|| __TEXT.__text __EXLegacyLog
|| __TEXT.__text __EXRegistrationLog
|| __TEXT.__text __EXSignpostLog
|| __TEXT.__text __EXStartService
__ AppleMobileFileIntegrity: _amfi_interface_query_bootarg_state
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ CoreFoundation: _CFBundleCopyBuiltInPlugInsURL
__ CoreFoundation: _CFBundleCopyBundleURL
__ CoreFoundation: _CFBundleCopyExecutableURL
__ CoreFoundation: _CFBundleCopyResourceURLsOfType
__ CoreFoundation: _CFBundleGetInfoDictionary
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopObserverCreate
__ CoreFoundation: _CFURLStartAccessingSecurityScopedResource
__ CoreFoundation: _CFURLStopAccessingSecurityScopedResource
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSURLIsApplicationKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLIsRegularFileKey
__ CoreFoundation: _NSURLIsSymbolicLinkKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_METACLASS_$_NSEnumerator
__ CoreFoundation: __CFBundleCreateUnique
__ CoreFoundation: __CFURLAttachSecurityScopeToFileURL
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: __NSIsNSArray
__ CoreFoundation: __NSIsNSData
__ CoreFoundation: __NSIsNSDictionary
__ CoreFoundation: __NSIsNSNumber
__ CoreFoundation: __NSIsNSString
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreServices: _OBJC_CLASS_$_LSApplicationExtensionRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSBundleRecord
__ CoreServices: _OBJC_CLASS_$_LSDatabaseContext
__ CoreServices: _OBJC_CLASS_$_LSExtensionPointRecord
__ CoreServices: _OBJC_CLASS_$_LSObserver
__ CoreServices: _OBJC_CLASS_$_LSPropertyList
__ CoreServices: _OBJC_CLASS_$_LSSettingsStore
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _kUTTypeURL
__ Foundation: _NSClassFromString
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSExtensionAdditionalServiceName
__ Foundation: _NSExtensionErrorDomain
__ Foundation: _NSExtensionHostDidBecomeActiveNotification
__ Foundation: _NSExtensionHostDidEnterBackgroundNotification
__ Foundation: _NSExtensionHostWillEnterForegroundNotification
__ Foundation: _NSExtensionHostWillResignActiveNotification
__ Foundation: _NSExtensionIdentifierName
__ Foundation: _NSExtensionPointName
__ Foundation: _NSItemProviderOptionsDispatchModeAsynchronous
__ Foundation: _NSItemProviderOptionsDispatchModeKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromProtocol
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSExtensionItem
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOrderedCollectionDifference
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_CLASS_$_NSXPCListenerEndpoint
__ Foundation: _OBJC_CLASS_$__NSExtensionContextVendor
__ Foundation: _OBJC_METACLASS_$_NSCoder
__ Foundation: _OBJC_METACLASS_$_NSExtension
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$__NSExtensionContextVendor
__ IOKit: _IOConnectCallMethod
__ IOKit: _IOObjectRelease
__ IOKit: _IOServiceClose
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _IOServiceOpen
__ IOKit: _kIOMainPortDefault
__ PlugInKit: _OBJC_CLASS_$_PKHost
__ PlugInKit: _OBJC_CLASS_$_PKLaunchRequest
__ PlugInKit: _OBJC_CLASS_$_PKService
__ PlugInKit: _PKUUIDAttribute
__ RunningBoardServices: _OBJC_CLASS_$_RBSLaunchContext
__ RunningBoardServices: _OBJC_CLASS_$_RBSLaunchRequest
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentifier
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentity
__ Security: _SecCodeCopySigningInformation
__ Security: _SecCodeMapMemory
__ Security: _SecCodeSetDetachedSignature
__ Security: _SecStaticCodeCheckValidity
__ Security: _SecStaticCodeCreateWithPath
__ Security: _kSecCodeInfoUnique
__ SoftLinking: __sl_dlopen
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ libSystem.B.dylib: _APP_SANDBOX_READ
__ libSystem.B.dylib: _APP_SANDBOX_READ_WRITE
__ libSystem.B.dylib: _SANDBOX_EXTENSION_DEFAULT
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __NSGetArgc
__ libSystem.B.dylib: __NSGetArgv
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __dyld_get_prog_image_header
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_activity_initiate
__ libSystem.B.dylib: __os_assert_log
__ libSystem.B.dylib: __os_crash
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _atoi
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_once_f
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_get_active_platform
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fseek
__ libSystem.B.dylib: _ftell
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _getsectiondata
__ libSystem.B.dylib: _launch_add_external_service
__ libSystem.B.dylib: _launch_copy_extension_properties
__ libSystem.B.dylib: _launch_copy_extension_properties_for_pid
__ libSystem.B.dylib: _launch_extension_check_in_live_4UIKit
__ libSystem.B.dylib: _launch_extension_property_pid
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memorystatus_control
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _rewind
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _sandbox_extension_issue_file_to_process
__ libSystem.B.dylib: _sandbox_extension_issue_mach_to_process
__ libSystem.B.dylib: _sandbox_extension_release
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlcat
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _terminate_with_reason
__ libSystem.B.dylib: _xpc_connection_activate
__ libSystem.B.dylib: _xpc_connection_create
__ libSystem.B.dylib: _xpc_connection_kill
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_oneshot_instance
__ libSystem.B.dylib: _xpc_copy_entitlement_for_token
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_init_services
__ libSystem.B.dylib: _xpc_release
__ libSystem.B.dylib: _xpc_strerror
__ libbsm.0.dylib: _audit_token_to_au32
__ libbsm.0.dylib: _audit_token_to_pid
__ libbsm.0.dylib: _audit_token_to_pidversion
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_conformsToProtocol
__ libobjc.A.dylib: _class_getName
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_allocateProtocol
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_getProtocol
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_registerProtocol
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_addProtocol
__ libobjc.A.dylib: _protocol_getName
_EXRunningExtension : NSObject <NSXPCListenerDelegate>
 @property  _EXExtension *extension
 @property  <_EXExtensionConfigurationProviding> *configuration
 @property  {?=[8I]} hostAuditToken
 @property  unsigned long signpost
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXRunningExtension sharedInstance]
  +[_EXRunningExtension entryPointFunction]

  // instance methods
  -[_EXRunningExtension willFinishLaunching]
  -[_EXRunningExtension didFinishLaunching]
  -[_EXRunningExtension extension]
  -[_EXRunningExtension checkIn]
  -[_EXRunningExtension signpost]
  -[_EXRunningExtension shouldAcceptXPCConnection:]
  -[_EXRunningExtension hostAuditToken]
  -[_EXRunningExtension configuration]
  -[_EXRunningExtension setExtension:]
  -[_EXRunningExtension _startWithArguments:count:]
  -[_EXRunningExtension startWithArguments:count:]
  -[_EXRunningExtension .cxx_destruct]
  -[_EXRunningExtension resume]
  -[_EXRunningExtension listener:shouldAcceptNewConnection:]


EXConcreteExtension : NSExtension
 @property  NSString *_localizedName
 @property  NSString *_localizedShortName
 @property  <PKPlugIn> *_plugIn
 @property  NSBundle *_extensionBundle
 @property  @? _requestPostCompletionBlock
 @property  @? _requestPostCompletionBlockWithItems
 @property  double requestTeardownDelay
 @property  NSUUID *connectionUUID
 @property  long long wantsDedicatedQueue
 @property  NSMutableDictionary *_extensionExpirationIdentifiers
 @property  NSMutableDictionary *_extensionServiceConnections
 @property  NSMutableDictionary *_extensionContexts
 @property  NSDictionary *_extensionState
 @property  NSSet *_allowedErrorClasses
 @property  BOOL observingHostAppStateChanges
 @property  id _stashedPlugInConnection
 @property  NSArray *_internalPersonas

  // class methods
  +[EXConcreteExtension extensionWithUUID:completion:]
  +[EXConcreteExtension _inputItemsMatchActiveWebPageAlternative:]
  +[EXConcreteExtension extensionsWithMatchingAttributes:synchronously:completion:]
  +[EXConcreteExtension evaluateActivationRule:withExtensionItemsRepresentation:]
  +[EXConcreteExtension extensionWithIdentifier:excludingDisabledExtensions:error:]
  +[EXConcreteExtension globalStateQueueForExtension:]
  +[EXConcreteExtension extensionsWithMatchingAttributes:completion:]
  +[EXConcreteExtension extensionWithURL:completion:]
  +[EXConcreteExtension _evaluateActivationRuleWithoutWorkarounds:withExtensionItemsRepresentation:]
  +[EXConcreteExtension _dictionaryIncludingOnlyItemsWithRegisteredTypeIdentifier:fromMatchingDictionary:]
  +[EXConcreteExtension _inputItemsByApplyingActiveWebPageAlternative:ifNeededByActivationRule:]
  +[EXConcreteExtension initialize]
  +[EXConcreteExtension extensionsWithMatchingAttributes:error:]
  +[EXConcreteExtension extensionWithIdentifier:error:]
  +[EXConcreteExtension beginMatchingExtensionsWithAttributes:completion:]
  +[EXConcreteExtension _evaluateActivationRule:withDictionaryIfItMatchesActiveWebPageAlternative:matchResult:]
  +[EXConcreteExtension predicateForActivationRule:]
  +[EXConcreteExtension _genericValuesMatchActiveWebPageAlternativeWithExtensionItems:attachmentsLens:registeredTypeIdentifiersLens:isActiveWebPageAttachmentCheck:]
  +[EXConcreteExtension initializeFiltering]
  +[EXConcreteExtension _matchingDictionaryMatchesActiveWebPageAlternative:]
  +[EXConcreteExtension _evaluateActivationRule:withInputItemsIfTheyMatchActiveWebPageAlternative:matchResult:]
  +[EXConcreteExtension _shouldLogExtensionDiscovery]
  +[EXConcreteExtension endMatchingExtensions:]

  // instance methods
  -[EXConcreteExtension extensionPointIdentifier]
  -[EXConcreteExtension _hostDidBecomeActiveNote:]
  -[EXConcreteExtension infoDictionary]
  -[EXConcreteExtension beginExtensionRequestWithInputItems:listenerEndpoint:error:]
  -[EXConcreteExtension _loadItemForPayload:contextIdentifier:completionHandler:]
  -[EXConcreteExtension identifier]
  -[EXConcreteExtension _itemProviderForPayload:extensionContext:]
  -[EXConcreteExtension beginExtensionRequestWithInputItems:listenerEndpoint:completion:]
  -[EXConcreteExtension attributes]
  -[EXConcreteExtension _hostWillResignActiveNote:]
  -[EXConcreteExtension _hostDidEnterBackgroundNote:]
  -[EXConcreteExtension _setExtensionExpirationsIdentifiers:]
  -[EXConcreteExtension setConnectionUUID:]
  -[EXConcreteExtension _extensionContextForUUID:]
  -[EXConcreteExtension _didCreateExtensionContext:]
  -[EXConcreteExtension _isMarkedNew]
  -[EXConcreteExtension _setObservingHostAppStateChanges:]
  -[EXConcreteExtension _wantsProcessPerRequest]
  -[EXConcreteExtension _safelyEndUsing:]
  -[EXConcreteExtension _setPlugIn:]
  -[EXConcreteExtension _reallyBeginExtensionRequest:synchronously:completion:]
  -[EXConcreteExtension _beginUsingAndCreateExtensionAssertionWithRequest:error:]
  -[EXConcreteExtension _isSystemExtension]
  -[EXConcreteExtension beginExtensionRequestWithOptions:inputItems:listenerEndpoint:error:]
  -[EXConcreteExtension beginExtensionRequestWithOptions:inputItems:listenerEndpoint:completion:]
  -[EXConcreteExtension dealloc]
  -[EXConcreteExtension set_requestPostCompletionBlockWithItems:]
  -[EXConcreteExtension _initWithPKPlugin:]
  -[EXConcreteExtension _reallyBeginExtensionRequest:completion:]
  -[EXConcreteExtension _safelyBeginUsing:]
  -[EXConcreteExtension beginExtensionRequestWithInputItems:error:]
  -[EXConcreteExtension requestCompletionBlock]
  -[EXConcreteExtension .cxx_destruct]
  -[EXConcreteExtension extensionContexts]
  -[EXConcreteExtension _safelyBeginUsingSynchronously:request:readyHandler:]
  -[EXConcreteExtension _loadPreviewImageForPayload:contextIdentifier:completionHandler:]
  -[EXConcreteExtension _extensionServiceConnections]
  -[EXConcreteExtension _isObservingHostAppStateChanges]
  -[EXConcreteExtension beginExtensionRequestWithOptions:inputItems:error:]
  -[EXConcreteExtension _setExtensionContexts:]
  -[EXConcreteExtension _beginExtensionRequest:completion:]
  -[EXConcreteExtension _allowedErrorClasses]
  -[EXConcreteExtension _setAllowedErrorClasses:]
  -[EXConcreteExtension _stashedPlugInConnection]
  -[EXConcreteExtension set_requestPostCompletionBlock:]
  -[EXConcreteExtension set_stashedPlugInConnection:]
  -[EXConcreteExtension _bareExtensionServiceConnection]
  -[EXConcreteExtension attemptOptIn:]
  -[EXConcreteExtension cancelExtensionRequestWithIdentifier:]
  -[EXConcreteExtension setWantsDedicatedQueue:]
  -[EXConcreteExtension setRequestCancellationBlock:]
  -[EXConcreteExtension _safelyEndUsingRequestWithPKUUID:processAssertion:continuation:]
  -[EXConcreteExtension version]
  -[EXConcreteExtension _requestPostCompletionBlockWithItems]
  -[EXConcreteExtension _plugIn]
  -[EXConcreteExtension _beginExtensionRequest:error:]
  -[EXConcreteExtension _kill:]
  -[EXConcreteExtension _hostWillEnterForegroundNote:]
  -[EXConcreteExtension setRequestInterruptionBlock:]
  -[EXConcreteExtension makeExtensionContextAndXPCConnectionForRequest:error:]
  -[EXConcreteExtension _didShowExtensionManagementInterface]
  -[EXConcreteExtension _resetExtensionState]
  -[EXConcreteExtension _extensionState]
  -[EXConcreteExtension pidForRequestIdentifier:]
  -[EXConcreteExtension _isPhotoServiceAccessGranted]
  -[EXConcreteExtension setRequestCompletionBlock:]
  -[EXConcreteExtension beginExtensionRequestWithOptions:inputItems:completion:]
  -[EXConcreteExtension _internalPersonas]
  -[EXConcreteExtension _requestPostCompletionBlock]
  -[EXConcreteExtension _allowedItemPayloadClasses]
  -[EXConcreteExtension beginExtensionRequestWithInputItems:completion:]
  -[EXConcreteExtension _completeRequestReturningItems:forExtensionContextWithUUID:completion:]
  -[EXConcreteExtension requestCancellationBlock]
  -[EXConcreteExtension connectionUUID]
  -[EXConcreteExtension _setExtensionState:]
  -[EXConcreteExtension optedIn]
  -[EXConcreteExtension requestTeardownDelay]
  -[EXConcreteExtension _cancelRequestWithError:forExtensionContextWithUUID:completion:]
  -[EXConcreteExtension _localizedName]
  -[EXConcreteExtension _safelyBeginUsingWithRequest:readyHandler:]
  -[EXConcreteExtension _localizedShortName]
  -[EXConcreteExtension _openURL:completion:]
  -[EXConcreteExtension _didShowNewExtensionIndicator]
  -[EXConcreteExtension validateRequest:error:]
  -[EXConcreteExtension wantsDedicatedQueue]
  -[EXConcreteExtension isEqual:]
  -[EXConcreteExtension _extensionContexts]
  -[EXConcreteExtension icons]
  -[EXConcreteExtension init]
  -[EXConcreteExtension _dropAssertion]
  -[EXConcreteExtension _plugInProcessIdentifier]
  -[EXConcreteExtension requestInterruptionBlock]
  -[EXConcreteExtension _setExtensionServiceConnections:]
  -[EXConcreteExtension _hostContextClass]
  -[EXConcreteExtension attemptOptOut:]
  -[EXConcreteExtension _extensionBundle]
  -[EXConcreteExtension _extensionExpirationIdentifiers]
  -[EXConcreteExtension objectForInfoDictionaryKey:]
  -[EXConcreteExtension _personas]


EXExtensionPointCatalog : NSObject
 @property  NSDictionary *extensionPointByIdentifierPlatform

  // instance methods
  -[EXExtensionPointCatalog .cxx_destruct]
  -[EXExtensionPointCatalog extensionPointForIdentifier:]
  -[EXExtensionPointCatalog initWithEnumerator:]
  -[EXExtensionPointCatalog extensionPointForIdentifier:platform:]
  -[EXExtensionPointCatalog init]
  -[EXExtensionPointCatalog extensionPointByIdentifierPlatform]


EXExtensionContextImplementation : NSObject <NSSecureCoding, NSCopying, NSXPCListenerDelegate, _NSExtensionAuxHostingBase, _NSExtensionContextInternalImplementation>
 @property  NSUUID *_UUID
 @property  NSArray *inputItems
 @property  NSXPCConnection *_auxiliaryConnection
 @property  BOOL _dummyExtension
 @property  NSExtensionContext *extensionContext
 @property  EXExtensionRequest *extensionRequest
 @property  <EXExtensionContextHosting> *_extensionHostProxy
 @property  {?=[8I]} _extensionHostAuditToken
 @property  NSObject<OS_os_transaction> *_transaction
 @property  id _principalObject
 @property  id _processAssertion
 @property  <EXExtensionContextVending> *_extensionVendorProxy
 @property  NSXPCListener *_auxiliaryListener
 @property  NSUUID *_pkUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? _requestCleanUpBlock

  // class methods
  +[EXExtensionContextImplementation supportsSecureCoding]
  +[EXExtensionContextImplementation _extensionContextHostProtocolAllowedClassesForItems]
  +[EXExtensionContextImplementation _extensionContextVendorProtocolWithAllowedErrorClasses:]
  +[EXExtensionContextImplementation _defaultExtensionContextVendorProtocol]
  +[EXExtensionContextImplementation _derivedExtensionAuxiliaryHostProtocolWithContextClass:]
  +[EXExtensionContextImplementation _extensionContextForIdentifier:]
  +[EXExtensionContextImplementation _extensionContextHostProtocolWithAllowedPayloadCompletionClasses:AllowedErrorClasses:]

  // instance methods
  -[EXExtensionContextImplementation _UUID]
  -[EXExtensionContextImplementation _requestCleanUpBlock]
  -[EXExtensionContextImplementation inputItems]
  -[EXExtensionContextImplementation _willPerformHostCallback:]
  -[EXExtensionContextImplementation openURL:completionHandler:]
  -[EXExtensionContextImplementation _extensionHostProxy]
  -[EXExtensionContextImplementation _isDummyExtension]
  -[EXExtensionContextImplementation encodeWithCoder:]
  -[EXExtensionContextImplementation _setPrincipalObject:]
  -[EXExtensionContextImplementation setExtensionRequest:]
  -[EXExtensionContextImplementation cancelRequestWithError:]
  -[EXExtensionContextImplementation dealloc]
  -[EXExtensionContextImplementation _setInputItems:]
  -[EXExtensionContextImplementation set_UUID:]
  -[EXExtensionContextImplementation _setTransaction:]
  -[EXExtensionContextImplementation .cxx_destruct]
  -[EXExtensionContextImplementation _initializeAuxillaryConnectionWithListenerEndpoint:]
  -[EXExtensionContextImplementation _auxiliaryListener]
  -[EXExtensionContextImplementation _processAssertion]
  -[EXExtensionContextImplementation _completeRequestReturningItemsSecondHalf:]
  -[EXExtensionContextImplementation _principalObject]
  -[EXExtensionContextImplementation _extensionHostAuditToken]
  -[EXExtensionContextImplementation completeRequestReturningItems:completionHandler:]
  -[EXExtensionContextImplementation _setExtensionVendorProxy:]
  -[EXExtensionContextImplementation extensionRequest]
  -[EXExtensionContextImplementation _isHost]
  -[EXExtensionContextImplementation initWithInputItems:listenerEndpoint:contextUUID:extensionContext:]
  -[EXExtensionContextImplementation copyWithZone:]
  -[EXExtensionContextImplementation _loadItemForPayload:completionHandler:]
  -[EXExtensionContextImplementation invalidate]
  -[EXExtensionContextImplementation _pkUUID]
  -[EXExtensionContextImplementation _setAuxiliaryListener:]
  -[EXExtensionContextImplementation _setExtensionHostAuditToken:]
  -[EXExtensionContextImplementation ___nsx_pingHost:]
  -[EXExtensionContextImplementation _loadPreviewImageForPayload:completionHandler:]
  -[EXExtensionContextImplementation _extensionVendorProxy]
  -[EXExtensionContextImplementation _setRequestCleanUpBlock:]
  -[EXExtensionContextImplementation _setAuxiliaryConnection:]
  -[EXExtensionContextImplementation _transaction]
  -[EXExtensionContextImplementation _setProcessAssertion:]
  -[EXExtensionContextImplementation set_pkUUID:]
  -[EXExtensionContextImplementation _openURL:completion:]
  -[EXExtensionContextImplementation extensionContext]
  -[EXExtensionContextImplementation listener:shouldAcceptNewConnection:]
  -[EXExtensionContextImplementation _setExtensionHostProxy:]
  -[EXExtensionContextImplementation _setDummyExtension:]
  -[EXExtensionContextImplementation initWithCoder:]
  -[EXExtensionContextImplementation _auxiliaryConnection]


_EXDiscoveryController : NSObject <LSObserverDelegate>
 @property  NSMutableDictionary *activeQueries
 @property  LSObserver *observer
 @property  id settingsStoreToken
 @property  {os_unfair_lock_s=I} activeQueriesLock
 @property  NSObject<OS_dispatch_queue> *queryQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXDiscoveryController sharedInstance]
  +[_EXDiscoveryController canRunQuery:error:]

  // instance methods
  -[_EXDiscoveryController queryQueue]
  -[_EXDiscoveryController observerDidObserveSettingsChange]
  -[_EXDiscoveryController settingsStoreToken]
  -[_EXDiscoveryController addActiveQueryObserver:query:]
  -[_EXDiscoveryController .cxx_destruct]
  -[_EXDiscoveryController setActiveQueries:]
  -[_EXDiscoveryController removeActiveQueryObserver:query:]
  -[_EXDiscoveryController setQueryQueue:]
  -[_EXDiscoveryController observer]
  -[_EXDiscoveryController setSettingsStoreToken:]
  -[_EXDiscoveryController activeQueries]
  -[_EXDiscoveryController extensionsMatchingQueries:]
  -[_EXDiscoveryController extensionsMatchingQuery:]
  -[_EXDiscoveryController observerDidObserveDatabaseChange:]
  -[_EXDiscoveryController setObserver:]
  -[_EXDiscoveryController setActiveQueriesLock:]
  -[_EXDiscoveryController activeQueriesLock]
  -[_EXDiscoveryController init]


_EXServiceDelegate : NSObject <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription


_EXService : NSObject <NSXPCListenerDelegate, _EXServiceProtocol, LSObserverDelegate>
 @property  _EXDiscoveryController *discoveryController
 @property  NSObject<OS_dispatch_source> *sigtermSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXService sharedService]
  +[_EXService runAsXPCService]
  +[_EXService currentProcessIsService]

  // instance methods
  -[_EXService prepareWithLaunchConfiguration:reply:]
  -[_EXService sigtermSource]
  -[_EXService beginExtensionsQuery:listenerEndpoint:reply:]
  -[_EXService .cxx_destruct]
  -[_EXService discoveryController]
  -[_EXService getServiceConfigForExtension:overlay:subservices:]
  -[_EXService launchWithConfiguration:clientConnection:error:]
  -[_EXService registerServiceForClientConnection:extension:error:]
  -[_EXService extensionsWithQuery:reply:]
  -[_EXService _init]
  -[_EXService listener:shouldAcceptNewConnection:]


_EXConnectionActiveQueryObserver : NSObject <_EXActiveQueryObserver>
 @property  NSObject<OS_os_transaction> *transaction
 @property  NSXPCConnection *connection

  // instance methods
  -[_EXConnectionActiveQueryObserver query:resultDidUpdate:]
  -[_EXConnectionActiveQueryObserver transaction]
  -[_EXConnectionActiveQueryObserver .cxx_destruct]
  -[_EXConnectionActiveQueryObserver connection]
  -[_EXConnectionActiveQueryObserver setTransaction:]
  -[_EXConnectionActiveQueryObserver isEqual:]
  -[_EXConnectionActiveQueryObserver setConnection:]
  -[_EXConnectionActiveQueryObserver initWitConnection:]


EXSwiftUI_Subsystem : NSObject <PKModularService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EXSwiftUI_Subsystem initialized]
  +[EXSwiftUI_Subsystem sharedInstance]
  +[EXSwiftUI_Subsystem initForPlugInKit]

  // instance methods
  -[EXSwiftUI_Subsystem beginUsing:withBundle:]
  -[EXSwiftUI_Subsystem init]


_EXRunningExtensionInfo : NSObject <EXExtensionInfoProviding>
 @property  NSString *runLoopType
 @property  NSString *bundleIdentifier
 @property  NSString *containerBundleIdentifier
 @property  NSString *containingViewControllerClassName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXRunningExtensionInfo notifyExtensionMainCalled]
  +[_EXRunningExtensionInfo extensionInfoForCurrentProcess]

  // instance methods
  -[_EXRunningExtensionInfo containerBundleIdentifier]
  -[_EXRunningExtensionInfo .cxx_destruct]
  -[_EXRunningExtensionInfo initForCurrentProcess]
  -[_EXRunningExtensionInfo bundleIdentifier]
  -[_EXRunningExtensionInfo runLoopType]
  -[_EXRunningExtensionInfo containingViewControllerClassName]


_EXHostConfiguration : NSObject <NSCopying>
 @property  <_EXExtensionRepresenting> *extension
 @property  _EXExtensionIdentity *extensionIdentity
 @property  @? interruptionHandler
 @property  _EXExtensionInstanceIdentifier *instanceIdentifier
 @property  NSArray *preferredLanguages
 @property  NSString *sandboxProfileName

  // instance methods
  -[_EXHostConfiguration initWithExtension:]
  -[_EXHostConfiguration setPreferredLanguages:]
  -[_EXHostConfiguration sandboxProfileName]
  -[_EXHostConfiguration extension]
  -[_EXHostConfiguration setSandboxProfileName:]
  -[_EXHostConfiguration interruptionHandler]
  -[_EXHostConfiguration extensionIdentity]
  -[_EXHostConfiguration setExtension:]
  -[_EXHostConfiguration setInstanceIdentifier:]
  -[_EXHostConfiguration instanceIdentifier]
  -[_EXHostConfiguration rbsProcessIdentity]
  -[_EXHostConfiguration .cxx_destruct]
  -[_EXHostConfiguration setExtensionIdentity:]
  -[_EXHostConfiguration initWithExtension:instanceIdentifier:]
  -[_EXHostConfiguration setInterruptionHandler:]
  -[_EXHostConfiguration copyWithZone:]
  -[_EXHostConfiguration preferredLanguages]
  -[_EXHostConfiguration initWithExtensionIdentity:]
  -[_EXHostConfiguration initWithExtensionIdentity:instanceIdentifier:]


_EXExtensionInstanceIdentifier : NSObject <NSSecureCoding>
 @property  NSUUID *identifier
 @property  BOOL isDefault

  // class methods
  +[_EXExtensionInstanceIdentifier supportsSecureCoding]
  +[_EXExtensionInstanceIdentifier defaultInstanceIdentifier]

  // instance methods
  -[_EXExtensionInstanceIdentifier isDefault]
  -[_EXExtensionInstanceIdentifier identifier]
  -[_EXExtensionInstanceIdentifier isEqualInstanceIdentifier:]
  -[_EXExtensionInstanceIdentifier encodeWithCoder:]
  -[_EXExtensionInstanceIdentifier .cxx_destruct]
  -[_EXExtensionInstanceIdentifier initWithIdentifier:]
  -[_EXExtensionInstanceIdentifier isEqual:]
  -[_EXExtensionInstanceIdentifier init]
  -[_EXExtensionInstanceIdentifier initWithCoder:]


_EXDecoderHack : NSCoder
 @property  @? contextFactory

  // instance methods
  -[_EXDecoderHack decodeObjectOfClass:forKey:]
  -[_EXDecoderHack .cxx_destruct]
  -[_EXDecoderHack initWithContextFactory:]
  -[_EXDecoderHack contextFactory]
  -[_EXDecoderHack setContextFactory:]


_EXNSExtensionContextShimImplementation : NSObject <_NSExtensionContextInternalImplementation, _EXNSExtensionShimExtensionXPCProtocol>
 @property  _EXSceneSession *sceneSession
 @property  _EXNSExtensionShimExtension *extension
 @property  id __principalObject
 @property  NSArray *inputItems
 @property  NSUUID *_UUID
 @property  NSXPCConnection *_auxiliaryConnection
 @property  @? _requestCleanUpBlock
 @property  id _principalObject
 @property  {?=[8I]} _extensionHostAuditToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXNSExtensionContextShimImplementation makeContextWithSceneSession:]

  // instance methods
  -[_EXNSExtensionContextShimImplementation _UUID]
  -[_EXNSExtensionContextShimImplementation _requestCleanUpBlock]
  -[_EXNSExtensionContextShimImplementation inputItems]
  -[_EXNSExtensionContextShimImplementation extension]
  -[_EXNSExtensionContextShimImplementation openURL:completionHandler:]
  -[_EXNSExtensionContextShimImplementation setExtension:]
  -[_EXNSExtensionContextShimImplementation cancelRequestWithError:]
  -[_EXNSExtensionContextShimImplementation .cxx_destruct]
  -[_EXNSExtensionContextShimImplementation _principalObject]
  -[_EXNSExtensionContextShimImplementation _extensionHostAuditToken]
  -[_EXNSExtensionContextShimImplementation completeRequestReturningItems:completionHandler:]
  -[_EXNSExtensionContextShimImplementation initWithInputItems:listenerEndpoint:contextUUID:extensionContext:]
  -[_EXNSExtensionContextShimImplementation invalidate]
  -[_EXNSExtensionContextShimImplementation _setRequestCleanUpBlock:]
  -[_EXNSExtensionContextShimImplementation makeXPCConnectionWithError:]
  -[_EXNSExtensionContextShimImplementation _auxiliaryConnection]
  -[_EXNSExtensionContextShimImplementation __principalObject]
  -[_EXNSExtensionContextShimImplementation beginContextRequest:endpoint:reply:]
  -[_EXNSExtensionContextShimImplementation initWithSceneSession:]
  -[_EXNSExtensionContextShimImplementation shoudAcceptConnection:]
  -[_EXNSExtensionContextShimImplementation set__principalObject:]
  -[_EXNSExtensionContextShimImplementation sceneSession]
  -[_EXNSExtensionContextShimImplementation setSceneSession:]


_EXQuery : NSObject <NSSecureCoding, NSCopying>
 @property  {?=[8I]} hostAuditToken
 @property  unsigned long resultType
 @property  NSArray *extensionPointRecords
 @property  unsigned int platform
 @property  NSString *extensionPointIdentifier
 @property  NSPredicate *predicate

  // class methods
  +[_EXQuery allocWithZone:]
  +[_EXQuery executeQuery:]
  +[_EXQuery supportsSecureCoding]
  +[_EXQuery extensionPointIdentifierQuery:platform:]
  +[_EXQuery extensionPointIdentifierQuery:]
  +[_EXQuery allExtensionsQuery]
  +[_EXQuery executeQueries:completionHandler:]
  +[_EXQuery executeQueries:]
  +[_EXQuery executeQuery:completionHandler:]

  // instance methods
  -[_EXQuery setResultType:]
  -[_EXQuery extensionPointRecords]
  -[_EXQuery encodeWithCoder:]
  -[_EXQuery matches:]
  -[_EXQuery matchesRecord:]
  -[_EXQuery initWithExtensionPoint:]
  -[_EXQuery initWithExtensionPointIdentifier:predicate:]
  -[_EXQuery .cxx_destruct]
  -[_EXQuery initWithExtensionPointIdentifier:]
  -[_EXQuery initWithExtensionPointIdentifier:platform:]
  -[_EXQuery resultType]
  -[_EXQuery copyWithZone:]
  -[_EXQuery _init]
  -[_EXQuery init]
  -[_EXQuery initWithCoder:]


_EXRecordQuery : _EXQuery
 @property  LSExtensionPointRecord *record

  // class methods
  +[_EXRecordQuery supportsSecureCoding]

  // instance methods
  -[_EXRecordQuery setPredicate:]
  -[_EXRecordQuery extensionPointIdentifier]
  -[_EXRecordQuery setRecord:]
  -[_EXRecordQuery extensionPointRecords]
  -[_EXRecordQuery platform]
  -[_EXRecordQuery encodeWithCoder:]
  -[_EXRecordQuery record]
  -[_EXRecordQuery hostAuditToken]
  -[_EXRecordQuery matchesRecord:]
  -[_EXRecordQuery initWithExtensionPoint:]
  -[_EXRecordQuery predicate]
  -[_EXRecordQuery .cxx_destruct]
  -[_EXRecordQuery copyWithZone:]
  -[_EXRecordQuery setHostAuditToken:]
  -[_EXRecordQuery initWithCoder:]


_EXValuesQuery : _EXQuery
  // class methods
  +[_EXValuesQuery supportsSecureCoding]

  // instance methods
  -[_EXValuesQuery setPredicate:]
  -[_EXValuesQuery extensionPointIdentifier]
  -[_EXValuesQuery isEqualToQuery:]
  -[_EXValuesQuery setPlatform:]
  -[_EXValuesQuery extensionPointRecords]
  -[_EXValuesQuery platform]
  -[_EXValuesQuery encodeWithCoder:]
  -[_EXValuesQuery setExtensionPointIdentifier:]
  -[_EXValuesQuery hostAuditToken]
  -[_EXValuesQuery matchesRecord:]
  -[_EXValuesQuery initWithExtensionPointIdentifier:predicate:]
  -[_EXValuesQuery predicate]
  -[_EXValuesQuery .cxx_destruct]
  -[_EXValuesQuery initWithExtensionPointIdentifier:]
  -[_EXValuesQuery copyWithZone:]
  -[_EXValuesQuery setHostAuditToken:]
  -[_EXValuesQuery isEqual:]
  -[_EXValuesQuery init]
  -[_EXValuesQuery initWithCoder:]


_EXActiveClientQuery : NSObject <NSXPCListenerDelegate, EXQueryResultsProtocol>
 @property  _EXQuery *query
 @property  NSSet *observers
 @property  NSXPCListenerEndpoint *endpoint
 @property  NSXPCConnection *connection
 @property  BOOL active
 @property  BOOL started
 @property  NSXPCListener *xpcListener
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_EXActiveClientQuery query]
  -[_EXActiveClientQuery xpcListener]
  -[_EXActiveClientQuery endpoint]
  -[_EXActiveClientQuery started]
  -[_EXActiveClientQuery isEqualToActiveQuery:]
  -[_EXActiveClientQuery reset]
  -[_EXActiveClientQuery isActive]
  -[_EXActiveClientQuery .cxx_destruct]
  -[_EXActiveClientQuery connection]
  -[_EXActiveClientQuery setObservers:]
  -[_EXActiveClientQuery addQueryObserver:]
  -[_EXActiveClientQuery initWithQuery:]
  -[_EXActiveClientQuery removeQueryObserver:]
  -[_EXActiveClientQuery setStarted:]
  -[_EXActiveClientQuery isEqual:]
  -[_EXActiveClientQuery listener:shouldAcceptNewConnection:]
  -[_EXActiveClientQuery observers]
  -[_EXActiveClientQuery setConnection:]
  -[_EXActiveClientQuery query:resultsDidUpdate:reply:]
  -[_EXActiveClientQuery availabilityDidChange:reply:]


_EXServiceClient : NSObject
 @property  NSXPCConnection *discoveryConnection
 @property  NSXPCConnection *launchConnection
 @property  ^{os_unfair_lock_s=I} connectionLock
 @property  NSMutableSet *activeQueries
 @property  ^{os_unfair_lock_s=I} activeQueriesLock
 @property  NSObject<OS_dispatch_queue> *notifyQueue

  // class methods
  +[_EXServiceClient sharedInstance]

  // instance methods
  -[_EXServiceClient connectionLock]
  -[_EXServiceClient notifyQueue]
  -[_EXServiceClient _activeQueryForQuery:]
  -[_EXServiceClient reconnectActiveQueries]
  -[_EXServiceClient _beginActiveQuery:]
  -[_EXServiceClient .cxx_destruct]
  -[_EXServiceClient setActiveQueries:]
  -[_EXServiceClient activeQueries]
  -[_EXServiceClient resultWithQuery:]
  -[_EXServiceClient addQueryObserver:]
  -[_EXServiceClient launchWithConfiguration:error:]
  -[_EXServiceClient launchConnection]
  -[_EXServiceClient extensionsWithQueries:]
  -[_EXServiceClient fetchExtensionsWithQueries:completionHandler:]
  -[_EXServiceClient setLaunchConnection:]
  -[_EXServiceClient fetchResultWithQuery:completionHandler:]
  -[_EXServiceClient removeQueryObserver:]
  -[_EXServiceClient activeQueriesLock]
  -[_EXServiceClient setDiscoveryConnection:]
  -[_EXServiceClient _init]
  -[_EXServiceClient discoveryConnection]


_EXSceneConfiguration : NSObject <NSCopying>
 @property  _EXSceneSessionParameters *parameters
 @property  NSString *sceneDelegateClassName
 @property  _EXPromise *initializationPromise
 @property  Class sceneClass
 @property  Class sceneDelegateClass
 @property  NSString *role

  // instance methods
  -[_EXSceneConfiguration parameters]
  -[_EXSceneConfiguration sceneDelegateClassName]
  -[_EXSceneConfiguration role]
  -[_EXSceneConfiguration initWithParameters:]
  -[_EXSceneConfiguration initializationPromise]
  -[_EXSceneConfiguration .cxx_destruct]
  -[_EXSceneConfiguration initializationParametersOfClass:error:]
  -[_EXSceneConfiguration setSceneDelegateClass:]
  -[_EXSceneConfiguration copyWithZone:]
  -[_EXSceneConfiguration setSceneClass:]
  -[_EXSceneConfiguration sceneDelegateClass]
  -[_EXSceneConfiguration sceneClass]
  -[_EXSceneConfiguration setSceneDelegateClassName:]


_EXQueryController : NSObject <_EXServiceClientObserver, _EXActiveQueryObserver>
 @property  NSArray *extensions
 @property  NSOrderedSet *internalExtensions
 @property  unsigned long unelectedCount
 @property  ^{os_unfair_lock_s=I} extensionsLock
 @property  NSObject<OS_dispatch_queue> *notificationQueue
 @property  <_EXQueryControllerDelegate> *delegate
 @property  NSArray *extensionIdentities
 @property  NSArray *queries
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXQueryController executeQuery:]
  +[_EXQueryController executeQueries:completionHandler:]
  +[_EXQueryController executeQueries:]
  +[_EXQueryController executeQuery:completionHandler:]
  +[_EXQueryController asyncQueryQueue]

  // instance methods
  -[_EXQueryController queries]
  -[_EXQueryController extensions]
  -[_EXQueryController extensionIdentities]
  -[_EXQueryController setUnelectedCount:]
  -[_EXQueryController setDelegate:]
  -[_EXQueryController query:resultDidUpdate:]
  -[_EXQueryController setInternalExtensions:]
  -[_EXQueryController resultDidUpdate:]
  -[_EXQueryController extensionsLock]
  -[_EXQueryController suspend]
  -[_EXQueryController delegate]
  -[_EXQueryController dealloc]
  -[_EXQueryController .cxx_destruct]
  -[_EXQueryController resume]
  -[_EXQueryController initWithQueries:delegate:]
  -[_EXQueryController internalExtensions]
  -[_EXQueryController unelectedCount]
  -[_EXQueryController initWithQueries:]
  -[_EXQueryController notificationQueue]


_EXQueryObserver : _EXQueryController <_EXQueryControllerDelegate>
 @property  <_EXQueryObserverDelegate> *internalDelegate
 @property  NSArray *extensions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_EXQueryObserver extensions]
  -[_EXQueryObserver queryControllerDidUpdate:difference:]
  -[_EXQueryObserver setInternalDelegate:]
  -[_EXQueryObserver internalDelegate]
  -[_EXQueryObserver .cxx_destruct]
  -[_EXQueryObserver initWithQueries:delegate:]


_EXExtensionPredicateBuilder : NSObject
 @property  unsigned long version
 @property  BOOL strictMatchingSpecified
 @property  BOOL usesStrictMatching
 @property  NSDictionary *predicateDictionary
 @property  ^{_EXExtensionActivationRules=@@@@@@@@} activationRules

  // instance methods
  -[_EXExtensionPredicateBuilder predicateDictionary]
  -[_EXExtensionPredicateBuilder makePredicate]
  -[_EXExtensionPredicateBuilder applyRuleWithRuleName:acceptRule:rejectRule:types:exceptTypes:parentType:children:parentAccepted:accepted:acceptedTypesInSubtree:exceptTypesInSubtree:]
  -[_EXExtensionPredicateBuilder .cxx_destruct]
  -[_EXExtensionPredicateBuilder gatherChildrenPredicateWithRuleDictionary:parentType:parentAccepted:acceptedChildTypes:exceptChildTypes:]
  -[_EXExtensionPredicateBuilder predicateForCountingRule:type:exceptTypes:specifiedCount:]
  -[_EXExtensionPredicateBuilder version]
  -[_EXExtensionPredicateBuilder strictMatchingSpecified]
  -[_EXExtensionPredicateBuilder activationRules]
  -[_EXExtensionPredicateBuilder initWithActivationRules:predicateDictionary:]
  -[_EXExtensionPredicateBuilder predicateForRejectExceptOtherTypesRule:type:otherTypes:]
  -[_EXExtensionPredicateBuilder usesStrictMatching]


_EXSceneSession : NSObject <NSXPCListenerDelegate, _EXSceneSessionExtensionXPCProtocol, _EXConnectionHandler>
 @property  NSXPCListener *sceneConnectionListener
 @property  <_EXScene> *scene
 @property  NSXPCConnection *sessionXPCConnection
 @property  NSXPCConnection *sceneXPCConnection
 @property  _EXExtension *extension
 @property  NSUUID *identifier
 @property  _EXSceneConfiguration *configuration
 @property  NSXPCListenerEndpoint *hostEndpoint
 @property  BOOL hasSwiftUIContent
 @property  unsigned long signpost
 @property  NSString *role
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_EXSceneSession initWithExtension:]
  -[_EXSceneSession setConfiguration:]
  -[_EXSceneSession identifier]
  -[_EXSceneSession extension]
  -[_EXSceneSession setScene:]
  -[_EXSceneSession signpost]
  -[_EXSceneSession role]
  -[_EXSceneSession shouldAcceptXPCConnection:]
  -[_EXSceneSession configuration]
  -[_EXSceneSession dealloc]
  -[_EXSceneSession .cxx_destruct]
  -[_EXSceneSession setIdentifier:]
  -[_EXSceneSession invalidate]
  -[_EXSceneSession makeSceneWithError:]
  -[_EXSceneSession scene]
  -[_EXSceneSession listener:shouldAcceptNewConnection:]
  -[_EXSceneSession makeXPCConnectionWithError:]
  -[_EXSceneSession connectSceneSessionWithRequest:reply:]
  -[_EXSceneSession makeConfigurationWithParameters:]
  -[_EXSceneSession connectToScene:]
  -[_EXSceneSession makeConnectionResponse]
  -[_EXSceneSession sceneConnectionListener]
  -[_EXSceneSession setSceneConnectionListener:]
  -[_EXSceneSession sessionXPCConnection]
  -[_EXSceneSession setSessionXPCConnection:]
  -[_EXSceneSession sceneXPCConnection]
  -[_EXSceneSession setSceneXPCConnection:]
  -[_EXSceneSession hostEndpoint]
  -[_EXSceneSession hasSwiftUIContent]


_EXExtensionContext : NSExtensionContext <_EXConnectionHandler>
  // instance methods
  -[_EXExtensionContext shouldAcceptXPCConnection:]
  -[_EXExtensionContext completeRequestReturningItems:completionHandler:]
  -[_EXExtensionContext invalidate]
  -[_EXExtensionContext init]
  -[_EXExtensionContext makeXPCConnectionWithError:]
  -[_EXExtensionContext completeRequestWithHandler:]


_EXPromise : NSObject <NSSecureCoding>
 @property  NSUUID *identifier
 @property  @? promiseBlock

  // class methods
  +[_EXPromise supportsSecureCoding]

  // instance methods
  -[_EXPromise identifier]
  -[_EXPromise encodeWithCoder:]
  -[_EXPromise dealloc]
  -[_EXPromise .cxx_destruct]
  -[_EXPromise initWithCoder:]
  -[_EXPromise initWithPromiseBlock:]
  -[_EXPromise resolveObjectOfClass:error:]
  -[_EXPromise resolveObjectOfClass:completion:]
  -[_EXPromise resolveObjectOfClasses:error:]
  -[_EXPromise resolveObjectOfClasses:completion:]
  -[_EXPromise promiseBlock]


_EXPromiseManager : NSObject <_EXPromiseManagerXPCProtocol, NSXPCListenerDelegate>
 @property  NSMapTable *promises
 @property  NSXPCListener *listener
 @property  NSXPCListenerEndpoint *endpoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXPromiseManager sharedInstance]

  // instance methods
  -[_EXPromiseManager endpoint]
  -[_EXPromiseManager .cxx_destruct]
  -[_EXPromiseManager setListener:]
  -[_EXPromiseManager listener]
  -[_EXPromiseManager listener:shouldAcceptNewConnection:]
  -[_EXPromiseManager init]
  -[_EXPromiseManager resolvePromiseWithIdentifier:reply:]
  -[_EXPromiseManager resolveObjectOfClasses:forIdentifier:endpoint:error:]
  -[_EXPromiseManager resolveObjectOfClasses:forIdentifier:endpoint:completion:]
  -[_EXPromiseManager registerPromise:]
  -[_EXPromiseManager unregisterPromise:]
  -[_EXPromiseManager promises]


_EXLaunchConfiguration : NSObject <NSSecureCoding>
 @property  _EXExtensionIdentity *extensionIdentity
 @property  _EXExtensionInstanceIdentifier *instanceIdentifier
 @property  NSArray *preferredLanguages
 @property  NSString *sandboxProfileName

  // class methods
  +[_EXLaunchConfiguration supportsSecureCoding]

  // instance methods
  -[_EXLaunchConfiguration setPreferredLanguages:]
  -[_EXLaunchConfiguration sandboxProfileName]
  -[_EXLaunchConfiguration setSandboxProfileName:]
  -[_EXLaunchConfiguration extensionIdentity]
  -[_EXLaunchConfiguration encodeWithCoder:]
  -[_EXLaunchConfiguration setInstanceIdentifier:]
  -[_EXLaunchConfiguration instanceIdentifier]
  -[_EXLaunchConfiguration .cxx_destruct]
  -[_EXLaunchConfiguration preferredLanguages]
  -[_EXLaunchConfiguration initWithExtensionIdentity:]
  -[_EXLaunchConfiguration isEqual:]
  -[_EXLaunchConfiguration initWithCoder:]
  -[_EXLaunchConfiguration isLaunchConfigurationEqual:]


EXConcreteExtensionContextVendor : _NSExtensionContextVendor <NSXPCListenerDelegate, EXExtensionContextVending>
 @property  NSMutableDictionary *_extensionServiceConnections
 @property  NSMutableDictionary *_extensionContexts
 @property  NSMutableDictionary *_extensionPrincipalObjects
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EXConcreteExtensionContextVendor _extensionDictionary]
  +[EXConcreteExtensionContextVendor _startListening]
  +[EXConcreteExtensionContextVendor _startListening:]
  +[EXConcreteExtensionContextVendor _extensionMainStoryboard]
  +[EXConcreteExtensionContextVendor _extensionContextClass]
  +[EXConcreteExtensionContextVendor _expirationConcurrentQueue]
  +[EXConcreteExtensionContextVendor _extensionPrincipalClass]
  +[EXConcreteExtensionContextVendor _allowedItemPayloadClasses]
  +[EXConcreteExtensionContextVendor _completionConcurrentQueue]

  // instance methods
  -[EXConcreteExtensionContextVendor _removeExtensionContext:]
  -[EXConcreteExtensionContextVendor _extensionContextForUUID:]
  -[EXConcreteExtensionContextVendor _hostDidEnterBackgroundForContextUUID:completion:]
  -[EXConcreteExtensionContextVendor _tearDownContextWithUUID:]
  -[EXConcreteExtensionContextVendor .cxx_destruct]
  -[EXConcreteExtensionContextVendor _extensionServiceConnections]
  -[EXConcreteExtensionContextVendor _setExtensionContexts:]
  -[EXConcreteExtensionContextVendor _setPrincipalObject:forUUID:]
  -[EXConcreteExtensionContextVendor _onGlobalStateQueueOnly_setPrincipalObject:forUUID:]
  -[EXConcreteExtensionContextVendor _beginRequestWithExtensionItems:listenerEndpoint:withContextUUID:completion:]
  -[EXConcreteExtensionContextVendor _hostDidBecomeActiveForContextUUID:completion:]
  -[EXConcreteExtensionContextVendor _addExtensionContext:]
  -[EXConcreteExtensionContextVendor _hostWillResignActiveForContextUUID:completion:]
  -[EXConcreteExtensionContextVendor _extensionPrincipalObjects]
  -[EXConcreteExtensionContextVendor _hostWillEnterForegroundForContextUUID:completion:]
  -[EXConcreteExtensionContextVendor listener:shouldAcceptNewConnection:]
  -[EXConcreteExtensionContextVendor _extensionContexts]
  -[EXConcreteExtensionContextVendor _setExtensionPrincipalObjects:]
  -[EXConcreteExtensionContextVendor init]
  -[EXConcreteExtensionContextVendor _shouldCreatePrincipalObject]
  -[EXConcreteExtensionContextVendor _setExtensionServiceConnections:]


_EXExtensionRecordIdentity : _EXExtensionIdentity
 @property  LSApplicationExtensionRecord *record
 @property  LSExtensionPointRecord *extensionPoint

  // class methods
  +[_EXExtensionRecordIdentity supportsSecureCoding]

  // instance methods
  -[_EXExtensionRecordIdentity extensionPointIdentifier]
  -[_EXExtensionRecordIdentity initWithApplicationExtensionRecord:]
  -[_EXExtensionRecordIdentity attributes]
  -[_EXExtensionRecordIdentity platform]
  -[_EXExtensionRecordIdentity defaultUserElection]
  -[_EXExtensionRecordIdentity initWithPlugInKitProxy:]
  -[_EXExtensionRecordIdentity record]
  -[_EXExtensionRecordIdentity entitlements]
  -[_EXExtensionRecordIdentity .cxx_destruct]
  -[_EXExtensionRecordIdentity UUID]
  -[_EXExtensionRecordIdentity localizedName]
  -[_EXExtensionRecordIdentity classForCoder]
  -[_EXExtensionRecordIdentity entitlementNamed:ofClass:]
  -[_EXExtensionRecordIdentity containingBundleRecord]
  -[_EXExtensionRecordIdentity bundleIdentifier]
  -[_EXExtensionRecordIdentity extensionPoint]
  -[_EXExtensionRecordIdentity userElection]
  -[_EXExtensionRecordIdentity url]
  -[_EXExtensionRecordIdentity extensionSettingsKey]
  -[_EXExtensionRecordIdentity sdkDictionary]
  -[_EXExtensionRecordIdentity setUserElection:error:]
  -[_EXExtensionRecordIdentity extensionDictionary]
  -[_EXExtensionRecordIdentity containingURL]
  -[_EXExtensionRecordIdentity initWithCoder:]


_EXExtensionValueIdentity : _EXExtensionIdentity
  // class methods
  +[_EXExtensionValueIdentity supportsSecureCoding]

  // instance methods
  -[_EXExtensionValueIdentity extensionPointIdentifier]
  -[_EXExtensionValueIdentity attributes]
  -[_EXExtensionValueIdentity platform]
  -[_EXExtensionValueIdentity defaultUserElection]
  -[_EXExtensionValueIdentity entitlements]
  -[_EXExtensionValueIdentity .cxx_destruct]
  -[_EXExtensionValueIdentity UUID]
  -[_EXExtensionValueIdentity localizedName]
  -[_EXExtensionValueIdentity entitlementNamed:ofClass:]
  -[_EXExtensionValueIdentity containingBundleRecord]
  -[_EXExtensionValueIdentity bundleIdentifier]
  -[_EXExtensionValueIdentity userElection]
  -[_EXExtensionValueIdentity url]
  -[_EXExtensionValueIdentity sdkDictionary]
  -[_EXExtensionValueIdentity extensionDictionary]
  -[_EXExtensionValueIdentity containingURL]
  -[_EXExtensionValueIdentity initWithCoder:]


_EXExtensionIdentity : NSObject <_EXExtensionConfigurationProviding, NSSecureCoding, _EXExtensionRepresenting>
 @property  NSDictionary *extensionPointConfiguration
 @property  unsigned long type
 @property  NSString *internalServiceName
 @property  NSString *serviceName
 @property  Class principalClass
 @property  Class extensionClass
 @property  BOOL presentsUserInterface
 @property  Class connectionHandlerClass
 @property  Class extensionContextClass
 @property  NSDictionary *requiredHostEntitlements
 @property  BOOL supportsNSExtensionPlistKeys
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDictionary *entitlements
 @property  BOOL systemComponent
 @property  NSURL *containingURL
 @property  NSUUID *UUID
 @property  NSURL *executableURL
 @property  NSDictionary *sdkDictionary
 @property  NSDictionary *extensionDictionary
 @property  unsigned int platform
 @property  unsigned char userElection
 @property  unsigned char defaultUserElection
 @property  NSString *sandboxProfileName
 @property  NSArray *alternateSandboxProfileNames
 @property  <_EXExtensionConfigurationProviding> *configuration
 @property  Class extensionContextClass
 @property  Class hostContextClass
 @property  unsigned long enablementState
 @property  NSString *extensionPointIdentifier
 @property  NSString *bundleIdentifier
 @property  LSBundleRecord *containingBundleRecord
 @property  NSURL *url
 @property  NSUUID *uniqueIdentifier
 @property  NSString *localizedName
 @property  BOOL presentsUserInterface
 @property  BOOL requiresMacCatalystBehavior
 @property  BOOL requiresSceneHosting
 @property  NSDictionary *attributes
 @property  NSArray *roles
 @property  ISIcon *icon
 @property  BOOL requiresLegacyInfrastructure
 @property  BOOL enabled
 @property  BOOL unelected
 @property  BOOL showsInExtensionsManager
 @property  BOOL canDisable
 @property  BOOL targetsSystemExtensionPoint
 @property  BOOL requiresHostToBeContainerApp
 @property  BOOL spotlightIndexable
 @property  NSArray *spotlightImporterIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXExtensionIdentity allocWithZone:]
  +[_EXExtensionIdentity supportsSecureCoding]
  +[_EXExtensionIdentity enableExtension:error:]
  +[_EXExtensionIdentity disableExtension:error:]

  // instance methods
  -[_EXExtensionIdentity executableURL]
  -[_EXExtensionIdentity sandboxProfileName]
  -[_EXExtensionIdentity initWithApplicationExtensionRecord:]
  -[_EXExtensionIdentity platform]
  -[_EXExtensionIdentity defaultUserElection]
  -[_EXExtensionIdentity initWithPlugInKitProxy:]
  -[_EXExtensionIdentity encodeWithCoder:]
  -[_EXExtensionIdentity type]
  -[_EXExtensionIdentity configuration]
  -[_EXExtensionIdentity serviceName]
  -[_EXExtensionIdentity .cxx_destruct]
  -[_EXExtensionIdentity roles]
  -[_EXExtensionIdentity icon]
  -[_EXExtensionIdentity UUID]
  -[_EXExtensionIdentity canDisable]
  -[_EXExtensionIdentity entitlementNamed:ofClass:]
  -[_EXExtensionIdentity isEqualToExtension:]
  -[_EXExtensionIdentity uniqueIdentifier]
  -[_EXExtensionIdentity userElection]
  -[_EXExtensionIdentity enabled]
  -[_EXExtensionIdentity url]
  -[_EXExtensionIdentity sdkDictionary]
  -[_EXExtensionIdentity _init]
  -[_EXExtensionIdentity principalClass]
  -[_EXExtensionIdentity isEqual:]
  -[_EXExtensionIdentity extensionDictionary]
  -[_EXExtensionIdentity extensionClass]
  -[_EXExtensionIdentity makeXPCConnectionWithError:]
  -[_EXExtensionIdentity containingURL]
  -[_EXExtensionIdentity initWithCoder:]
  -[_EXExtensionIdentity extensionPointConfiguration]
  -[_EXExtensionIdentity presentsUserInterface]
  -[_EXExtensionIdentity requiresSceneHosting]
  -[_EXExtensionIdentity supportsNSExtensionPlistKeys]
  -[_EXExtensionIdentity extensionContextClass]
  -[_EXExtensionIdentity extensionContextClass]
  -[_EXExtensionIdentity connectionHandlerClass]
  -[_EXExtensionIdentity requiredHostEntitlements]
  -[_EXExtensionIdentity internalServiceName]
  -[_EXExtensionIdentity xpcOverlayDictionaryOverridingSandboxProfileName:multiInstance:]
  -[_EXExtensionIdentity executableURLWithError:]
  -[_EXExtensionIdentity requiresLegacyInfrastructure]
  -[_EXExtensionIdentity hostContextClass]
  -[_EXExtensionIdentity enablementState]
  -[_EXExtensionIdentity unelected]
  -[_EXExtensionIdentity isSystemComponent]
  -[_EXExtensionIdentity showsInExtensionsManager]
  -[_EXExtensionIdentity targetsSystemExtensionPoint]
  -[_EXExtensionIdentity requiresHostToBeContainerApp]
  -[_EXExtensionIdentity spotlightIndexable]
  -[_EXExtensionIdentity spotlightImporterIdentifiers]
  -[_EXExtensionIdentity alternateSandboxProfileNames]


_EXExtension : NSObject
 @property  NSString *bundleIdentifier
 @property  <_EXExtensionConfigurationProviding> *configuration
 @property  BOOL hasSwiftEntryPoint
 @property  _EXExtensionIdentity *internalRep
 @property  id strongDelegate
 @property  {?=[8I]} hostAuditToken
 @property  id delegate

  // instance methods
  -[_EXExtension willFinishLaunching]
  -[_EXExtension didFinishLaunching]
  -[_EXExtension shouldAcceptConnection:]
  -[_EXExtension setStrongDelegate:]
  -[_EXExtension setDelegate:]
  -[_EXExtension loadDelegateWithClass:]
  -[_EXExtension hostAuditToken]
  -[_EXExtension delegate]
  -[_EXExtension configuration]
  -[_EXExtension .cxx_destruct]
  -[_EXExtension bundleIdentifier]
  -[_EXExtension strongDelegate]
  -[_EXExtension prepareForSceneConnectionWithConfiguration:]
  -[_EXExtension hasSwiftEntryPoint]
  -[_EXExtension setHasSwiftEntryPoint:]
  -[_EXExtension internalRep]
  -[_EXExtension setInternalRep:]


EXExtensionRequest : NSObject
 @property  NSUUID *pkUUID
 @property  id assertion
 @property  RBSProcessIdentifier *processIdentifier
 @property  <PKPlugInPrivate> *plugIn
 @property  NSXPCConnection *xpcConnection
 @property  NSExtensionContext *context
 @property  unsigned long options
 @property  NSArray *inputItems
 @property  NSXPCListenerEndpoint *endpoint
 @property  _EXExtensionInstanceIdentifier *instanceIdentifier
 @property  NSString *sandboxProfileName
 @property  _EXPersona *persona

  // instance methods
  -[EXExtensionRequest setProcessIdentifier:]
  -[EXExtensionRequest sandboxProfileName]
  -[EXExtensionRequest inputItems]
  -[EXExtensionRequest persona]
  -[EXExtensionRequest setEndpoint:]
  -[EXExtensionRequest setSandboxProfileName:]
  -[EXExtensionRequest setAssertion:]
  -[EXExtensionRequest xpcConnection]
  -[EXExtensionRequest plugIn]
  -[EXExtensionRequest endpoint]
  -[EXExtensionRequest pkUUID]
  -[EXExtensionRequest setInstanceIdentifier:]
  -[EXExtensionRequest instanceIdentifier]
  -[EXExtensionRequest dealloc]
  -[EXExtensionRequest .cxx_destruct]
  -[EXExtensionRequest setInputItems:]
  -[EXExtensionRequest options]
  -[EXExtensionRequest setXpcConnection:]
  -[EXExtensionRequest assertion]
  -[EXExtensionRequest setPkUUID:]
  -[EXExtensionRequest processIdentifier]
  -[EXExtensionRequest setPersona:]
  -[EXExtensionRequest setContext:]
  -[EXExtensionRequest setOptions:]
  -[EXExtensionRequest setPlugIn:]
  -[EXExtensionRequest context]
  -[EXExtensionRequest applyActiveWebPageAlternativeIfNeededForExtension:]
  -[EXExtensionRequest init]


EXFrameworkScanner : NSOperation
 @property  NSMutableDictionary *_combinedExtensionSDK
 @property  NSMutableDictionary *_combinedAppleInternalExtensionSDK
 @property  NSMutableArray *_extensions
 @property  NSMutableArray *_appleInternalExtensions
 @property  NSURL *sourceURL
 @property  NSDictionary *combinedExtensionSDK
 @property  NSDictionary *combinedAppleInternalExtensionSDK
 @property  NSArray *extensionPaths
 @property  NSArray *appleInternalExtensionPaths

  // class methods
  +[EXFrameworkScanner rootURL]
  +[EXFrameworkScanner frameworkPaths]

  // instance methods
  -[EXFrameworkScanner _extensions]
  -[EXFrameworkScanner .cxx_destruct]
  -[EXFrameworkScanner sourceURL]
  -[EXFrameworkScanner main]
  -[EXFrameworkScanner initWithSourceURL:]
  -[EXFrameworkScanner combinedExtensionSDK]
  -[EXFrameworkScanner combinedAppleInternalExtensionSDK]
  -[EXFrameworkScanner extensionPaths]
  -[EXFrameworkScanner appleInternalExtensionPaths]
  -[EXFrameworkScanner isCatalystSupportURL:]
  -[EXFrameworkScanner isAppleInternalURL:]
  -[EXFrameworkScanner enumerateBundlesWithPathExtension:atURL:block:]
  -[EXFrameworkScanner enumerateAppexptAtURL:block:]
  -[EXFrameworkScanner enumerateFrameworksBundlesWithFrameworkURL:block:]
  -[EXFrameworkScanner processExtensionSDKFromBundle:]
  -[EXFrameworkScanner processExtensionSDKFromFile:]
  -[EXFrameworkScanner processExtensionSDK:declaringURL:]
  -[EXFrameworkScanner processExtensionsFromBundle:]
  -[EXFrameworkScanner processExtensionsInDirectory:]
  -[EXFrameworkScanner _combinedExtensionSDK]
  -[EXFrameworkScanner set_combinedExtensionSDK:]
  -[EXFrameworkScanner _combinedAppleInternalExtensionSDK]
  -[EXFrameworkScanner set_combinedAppleInternalExtensionSDK:]
  -[EXFrameworkScanner set_extensions:]
  -[EXFrameworkScanner _appleInternalExtensions]
  -[EXFrameworkScanner set_appleInternalExtensions:]


_EXItemProviderExtensionVendorLoadOperator : NSObject <_EXItemProviderLoading>
 @property  NSUUID *identifier
 @property  NSUUID *extensionContextIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXItemProviderExtensionVendorLoadOperator supportsSecureCoding]

  // instance methods
  -[_EXItemProviderExtensionVendorLoadOperator identifier]
  -[_EXItemProviderExtensionVendorLoadOperator encodeWithCoder:]
  -[_EXItemProviderExtensionVendorLoadOperator dealloc]
  -[_EXItemProviderExtensionVendorLoadOperator .cxx_destruct]
  -[_EXItemProviderExtensionVendorLoadOperator setIdentifier:]
  -[_EXItemProviderExtensionVendorLoadOperator initWithCoder:]
  -[_EXItemProviderExtensionVendorLoadOperator loadPreviewImageWithCompletionHandler:expectedValueClass:options:]
  -[_EXItemProviderExtensionVendorLoadOperator loadItemForTypeIdentifier:completionHandler:expectedValueClass:options:]
  -[_EXItemProviderExtensionVendorLoadOperator initWithExtensionContextIdentifier:]
  -[_EXItemProviderExtensionVendorLoadOperator extensionContextIdentifier]
  -[_EXItemProviderExtensionVendorLoadOperator setExtensionContextIdentifier:]


_EXItemProviderCopyingLoadOperator : NSObject <_EXItemProviderLoading>
 @property  NSItemProvider *itemProvider
 @property  NSDictionary *loadedItems
 @property  {?=[8I]} destinationProcessAuditToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXItemProviderCopyingLoadOperator supportsSecureCoding]

  // instance methods
  -[_EXItemProviderCopyingLoadOperator itemProvider]
  -[_EXItemProviderCopyingLoadOperator encodeWithCoder:]
  -[_EXItemProviderCopyingLoadOperator dealloc]
  -[_EXItemProviderCopyingLoadOperator .cxx_destruct]
  -[_EXItemProviderCopyingLoadOperator initWithCoder:]
  -[_EXItemProviderCopyingLoadOperator loadPreviewImageWithCompletionHandler:expectedValueClass:options:]
  -[_EXItemProviderCopyingLoadOperator loadItemForTypeIdentifier:completionHandler:expectedValueClass:options:]
  -[_EXItemProviderCopyingLoadOperator setItemProvider:]
  -[_EXItemProviderCopyingLoadOperator initWithItemProvider:destinationProcessAuditToken:]
  -[_EXItemProviderCopyingLoadOperator _loadItemsForTypeIdentifiers:auditToken:itemProvider:]
  -[_EXItemProviderCopyingLoadOperator _sandboxedResourceForItemIfNeeded:auditToken:error:]
  -[_EXItemProviderCopyingLoadOperator loadedItems]
  -[_EXItemProviderCopyingLoadOperator setLoadedItems:]
  -[_EXItemProviderCopyingLoadOperator destinationProcessAuditToken]
  -[_EXItemProviderCopyingLoadOperator setDestinationProcessAuditToken:]


_EXItemProviderSandboxedResource : NSObject <NSSecureCoding, NSCopying>
 @property  NSData *sandboxExtensionToken
 @property  NSURL *resourceURL
 @property  BOOL accessingSecurityScopedResource

  // class methods
  +[_EXItemProviderSandboxedResource supportsSecureCoding]

  // instance methods
  -[_EXItemProviderSandboxedResource encodeWithCoder:]
  -[_EXItemProviderSandboxedResource sandboxExtensionToken]
  -[_EXItemProviderSandboxedResource dealloc]
  -[_EXItemProviderSandboxedResource .cxx_destruct]
  -[_EXItemProviderSandboxedResource setResourceURL:]
  -[_EXItemProviderSandboxedResource copyWithZone:]
  -[_EXItemProviderSandboxedResource setSandboxExtensionToken:]
  -[_EXItemProviderSandboxedResource resourceURL]
  -[_EXItemProviderSandboxedResource initWithCoder:]
  -[_EXItemProviderSandboxedResource initWithContentsOfURL:auditToken:error:]
  -[_EXItemProviderSandboxedResource resolveURLAndReturnError:]
  -[_EXItemProviderSandboxedResource isAccessingSecurityScopedResource]
  -[_EXItemProviderSandboxedResource setAccessingSecurityScopedResource:]


_EXExtensionAvailablility : NSObject <NSSecureCoding>
 @property  long long enabledCount
 @property  long long disabledCount
 @property  long long unelectedCount

  // class methods
  +[_EXExtensionAvailablility supportsSecureCoding]
  +[_EXExtensionAvailablility removeChangeObserver:]
  +[_EXExtensionAvailablility addChangeObserver:]

  // instance methods
  -[_EXExtensionAvailablility setUnelectedCount:]
  -[_EXExtensionAvailablility encodeWithCoder:]
  -[_EXExtensionAvailablility enabledCount]
  -[_EXExtensionAvailablility setDisabledCount:]
  -[_EXExtensionAvailablility setEnabledCount:]
  -[_EXExtensionAvailablility unelectedCount]
  -[_EXExtensionAvailablility disabledCount]
  -[_EXExtensionAvailablility initWithCoder:]


_EXExtensionAvailablilityObserver : NSObject <_EXActiveQueryObserver, _EXServiceClientObserver>
 @property  @? block
 @property  NSArray *queries
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_EXExtensionAvailablilityObserver queries]
  -[_EXExtensionAvailablilityObserver initWithObserver:]
  -[_EXExtensionAvailablilityObserver query:resultDidUpdate:]
  -[_EXExtensionAvailablilityObserver dealloc]
  -[_EXExtensionAvailablilityObserver .cxx_destruct]
  -[_EXExtensionAvailablilityObserver block]
  -[_EXExtensionAvailablilityObserver invalidate]
  -[_EXExtensionAvailablilityObserver start]


_EXSceneSessionParameters : NSObject <NSSecureCoding>
 @property  NSString *sceneIdentifier
 @property  long long sizeBridgingOptions
 @property  _EXPromise *initializationParametersPromise

  // class methods
  +[_EXSceneSessionParameters supportsSecureCoding]

  // instance methods
  -[_EXSceneSessionParameters encodeWithCoder:]
  -[_EXSceneSessionParameters sceneIdentifier]
  -[_EXSceneSessionParameters .cxx_destruct]
  -[_EXSceneSessionParameters sizeBridgingOptions]
  -[_EXSceneSessionParameters setInitializationParametersPromise:]
  -[_EXSceneSessionParameters initializationParametersPromise]
  -[_EXSceneSessionParameters setSceneIdentifier:]
  -[_EXSceneSessionParameters setSizeBridgingOptions:]
  -[_EXSceneSessionParameters initWithCoder:]


_EXExtensionProcess : NSObject <_EXExtensionProcessObserver>
 @property  _EXExtensionProcessHandle *internalExtensionProcess
 @property  @? invalidationHandler
 @property  {?=[8I]} auditToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXExtensionProcess _extensionProcessBackgroundQueue]
  +[_EXExtensionProcess extensionProcessWithConfiguration:completionHandler:]
  +[_EXExtensionProcess extensionProcessWithConfiguration:error:]

  // instance methods
  -[_EXExtensionProcess setInvalidationHandler:]
  -[_EXExtensionProcess internalExtensionProcess]
  -[_EXExtensionProcess initWithInternalExtensionProcess:]
  -[_EXExtensionProcess .cxx_destruct]
  -[_EXExtensionProcess processDidInvalidate:]
  -[_EXExtensionProcess auditToken]
  -[_EXExtensionProcess newXPCConnectionWithError:]
  -[_EXExtensionProcess pid]
  -[_EXExtensionProcess invalidate]
  -[_EXExtensionProcess invalidationHandler]
  -[_EXExtensionProcess setInternalExtensionProcess:]
  -[_EXExtensionProcess makeXPCConnectionWithError:]


EXUIKit_Subsystem : NSObject <PKModularService>
 @property  NSDictionary *infoDictionary
 @property  BOOL plugInKitProcess
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EXUIKit_Subsystem sharedInstance]
  +[EXUIKit_Subsystem initForPlugInKit]
  +[EXUIKit_Subsystem initForPlugInKitWithOptions:]

  // instance methods
  -[EXUIKit_Subsystem infoDictionary]
  -[EXUIKit_Subsystem beginUsing:withBundle:]
  -[EXUIKit_Subsystem setInfoDictionary:]
  -[EXUIKit_Subsystem .cxx_destruct]
  -[EXUIKit_Subsystem isPlugInKitProcess]
  -[EXUIKit_Subsystem endUsing:]
  -[EXUIKit_Subsystem setPlugInKitProcess:]


_EXNSExtensionShimExtension : _EXExtension
 @property  Class principalClass
 @property  Class extensionContextClass

  // instance methods
  -[_EXNSExtensionShimExtension willFinishLaunching]
  -[_EXNSExtensionShimExtension didFinishLaunching]
  -[_EXNSExtensionShimExtension shouldAcceptConnection:]
  -[_EXNSExtensionShimExtension loadDelegateWithClass:]
  -[_EXNSExtensionShimExtension setPrincipalClass:]
  -[_EXNSExtensionShimExtension .cxx_destruct]
  -[_EXNSExtensionShimExtension principalClass]
  -[_EXNSExtensionShimExtension extensionContextClass]
  -[_EXNSExtensionShimExtension setExtensionContextClass:]


_EXNSExtensionShimScene : NSObject <_EXScene>
 @property  NSExtensionContext *context
 @property  id delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_EXNSExtensionShimScene shouldAcceptConnection:]
  -[_EXNSExtensionShimScene dealloc]
  -[_EXNSExtensionShimScene .cxx_destruct]
  -[_EXNSExtensionShimScene setContext:]
  -[_EXNSExtensionShimScene context]
  -[_EXNSExtensionShimScene init]
  -[_EXNSExtensionShimScene connectToSession:]
  -[_EXNSExtensionShimScene makePrincipalObjectForExtension:]


_EXQueryResult : NSObject <NSSecureCoding>
 @property  NSSet *identities
 @property  _EXExtensionAvailablility *availablility

  // class methods
  +[_EXQueryResult supportsSecureCoding]

  // instance methods
  -[_EXQueryResult identities]
  -[_EXQueryResult encodeWithCoder:]
  -[_EXQueryResult _initWithIdentities:availablility:]
  -[_EXQueryResult initWithIdentities:]
  -[_EXQueryResult .cxx_destruct]
  -[_EXQueryResult initWithAvailablility:]
  -[_EXQueryResult availablility]
  -[_EXQueryResult initWithIdentities:availablility:]
  -[_EXQueryResult initWithCoder:]


_EXQueryResultUpdate : _EXQueryResult <NSSecureCoding>
 @property  NSSet *addedExtensions
 @property  NSSet *removedUUIDs

  // class methods
  +[_EXQueryResultUpdate supportsSecureCoding]

  // instance methods
  -[_EXQueryResultUpdate initWithCurrentExtensions:updatedExtensions:]
  -[_EXQueryResultUpdate addedExtensions]
  -[_EXQueryResultUpdate encodeWithCoder:]
  -[_EXQueryResultUpdate removedUUIDs]
  -[_EXQueryResultUpdate initWithIdentities:]
  -[_EXQueryResultUpdate .cxx_destruct]
  -[_EXQueryResultUpdate initWithAddedExtensions:removedUUIDs:]
  -[_EXQueryResultUpdate initWithCoder:]


_EXSandboxExtension : NSObject <NSSecureCoding>
 @property  unsigned long consumedSandboxExtension
 @property  NSString *sandboxExtensionToken

  // class methods
  +[_EXSandboxExtension supportsSecureCoding]
  +[_EXSandboxExtension sandboxed]

  // instance methods
  -[_EXSandboxExtension consumedSandboxExtension]
  -[_EXSandboxExtension setConsumedSandboxExtension:]
  -[_EXSandboxExtension encodeWithCoder:]
  -[_EXSandboxExtension sandboxExtensionToken]
  -[_EXSandboxExtension dealloc]
  -[_EXSandboxExtension .cxx_destruct]
  -[_EXSandboxExtension initWithURL:readonly:]
  -[_EXSandboxExtension setSandboxExtensionToken:]
  -[_EXSandboxExtension initWithExtensionClass:machServiceName:process:]
  -[_EXSandboxExtension init]
  -[_EXSandboxExtension initWithCoder:]
  -[_EXSandboxExtension consume]


_EXExtensionProcessHandle : NSObject <NSSecureCoding>
 @property  NSArray *sandboxExtensions
 @property  {os_unfair_lock_s=I} xpcConnectionLock
 @property  NSHashTable *xpcConnections
 @property  _EXExtensionProcessMannger *manager
 @property  {os_unfair_lock_s=I} observersLock
 @property  NSHashTable *observers
 @property  _EXInternalHostConnection *internalConnection
 @property  _EXLaunchConfiguration *launchConfiguration
 @property  {?=[8I]} auditToken
 @property  NSXPCListenerEndpoint *serviceListenerEndpoint
 @property  int pid
 @property  BKSProcessAssertion *assertion
 @property  RBSProcessIdentity *processIdentity
 @property  BOOL valid

  // class methods
  +[_EXExtensionProcessHandle supportsSecureCoding]

  // instance methods
  -[_EXExtensionProcessHandle setXpcConnections:]
  -[_EXExtensionProcessHandle xpcConnections]
  -[_EXExtensionProcessHandle setManager:]
  -[_EXExtensionProcessHandle encodeWithCoder:]
  -[_EXExtensionProcessHandle addObserver:]
  -[_EXExtensionProcessHandle configuration]
  -[_EXExtensionProcessHandle dealloc]
  -[_EXExtensionProcessHandle isValid]
  -[_EXExtensionProcessHandle .cxx_destruct]
  -[_EXExtensionProcessHandle observersLock]
  -[_EXExtensionProcessHandle auditToken]
  -[_EXExtensionProcessHandle processIdentity]
  -[_EXExtensionProcessHandle sandboxExtensions]
  -[_EXExtensionProcessHandle assertion]
  -[_EXExtensionProcessHandle setObservers:]
  -[_EXExtensionProcessHandle pid]
  -[_EXExtensionProcessHandle manager]
  -[_EXExtensionProcessHandle _handleAssertionInvalidation]
  -[_EXExtensionProcessHandle internalConnection]
  -[_EXExtensionProcessHandle invalidate]
  -[_EXExtensionProcessHandle aquireAsertionWithError:]
  -[_EXExtensionProcessHandle launchConfiguration]
  -[_EXExtensionProcessHandle makeSessionXPCConnection]
  -[_EXExtensionProcessHandle makeXPCConnection]
  -[_EXExtensionProcessHandle makeXPCConnectionRetainProcess:withError:]
  -[_EXExtensionProcessHandle initWithLaunchConfiguration:auditToken:processIdentity:sandboxExtensions:]
  -[_EXExtensionProcessHandle setSandboxExtensions:]
  -[_EXExtensionProcessHandle removeObserver:]
  -[_EXExtensionProcessHandle serviceListenerEndpoint]
  -[_EXExtensionProcessHandle setInternalConnection:]
  -[_EXExtensionProcessHandle setObserversLock:]
  -[_EXExtensionProcessHandle setXpcConnectionLock:]
  -[_EXExtensionProcessHandle xpcConnectionLock]
  -[_EXExtensionProcessHandle initWithCoder:]
  -[_EXExtensionProcessHandle observers]


_EXExtensionProcessMannger : NSObject <_EXExtensionProcessObserver>
 @property  NSMapTable *processExtensionMap
 @property  {os_unfair_lock_s=I} processExtensionMapLock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXExtensionProcessMannger sharedInstance]

  // instance methods
  -[_EXExtensionProcessMannger processExtensionMapLock]
  -[_EXExtensionProcessMannger setProcessExtensionMapLock:]
  -[_EXExtensionProcessMannger .cxx_destruct]
  -[_EXExtensionProcessMannger processDidInvalidate:]
  -[_EXExtensionProcessMannger setProcessExtensionMap:]
  -[_EXExtensionProcessMannger processExtensionMap]
  -[_EXExtensionProcessMannger processWithLaunchConfiguration:error:]
  -[_EXExtensionProcessMannger _init]


_EXSceneSessionManager : NSObject
 @property  NSMutableDictionary *_sessions

  // class methods
  +[_EXSceneSessionManager sharedInstance]

  // instance methods
  -[_EXSceneSessionManager .cxx_destruct]
  -[_EXSceneSessionManager _sessions]
  -[_EXSceneSessionManager addSession:]
  -[_EXSceneSessionManager sessionForIdentifier:]
  -[_EXSceneSessionManager sessions]
  -[_EXSceneSessionManager _init]
  -[_EXSceneSessionManager removeSessionForIdentifier:]


_EXExtensionPoint : NSObject <EXExtensionPoint, NSCopying>
 @property  NSString *identifier
 @property  NSDictionary *SDKDictionary
 @property  unsigned int platform
 @property  unsigned long variant
 @property  NSURL *url
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_EXExtensionPoint identifier]
  -[_EXExtensionPoint setPlatform:]
  -[_EXExtensionPoint setUrl:]
  -[_EXExtensionPoint platform]
  -[_EXExtensionPoint variant]
  -[_EXExtensionPoint reset]
  -[_EXExtensionPoint setVariant:]
  -[_EXExtensionPoint .cxx_destruct]
  -[_EXExtensionPoint setIdentifier:]
  -[_EXExtensionPoint copyWithZone:]
  -[_EXExtensionPoint url]
  -[_EXExtensionPoint SDKDictionary]
  -[_EXExtensionPoint setSDKDictionary:]


EXEnumeratorConfig : NSObject <EXEnumeratorConfig>
 @property  NSURL *rootURL
 @property  NSURL *xpcExtensionsCache
 @property  NSURL *xpcExtensionPointsCache
 @property  NSURL *extensionPointsConfigURL
 @property  NSDictionary *legacyExtensionPointAllowList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EXEnumeratorConfig rootURL]
  -[EXEnumeratorConfig .cxx_destruct]
  -[EXEnumeratorConfig init]
  -[EXEnumeratorConfig xpcExtensionsCache]
  -[EXEnumeratorConfig xpcExtensionPointsCache]
  -[EXEnumeratorConfig extensionPointsConfigURL]
  -[EXEnumeratorConfig legacyExtensionPointAllowList]


EXEnumerator : NSEnumerator
  // class methods
  +[EXEnumerator config]
  +[EXEnumerator extensionPointDefinitionEnumeratorWithSDKDictionary:]
  +[EXEnumerator extensionPointDefinitionEnumerator]
  +[EXEnumerator extensionCacheFileURLs]
  +[EXEnumerator extensionPointCacheFileURLs]
  +[EXEnumerator extensionPointDefinitionDirectoryURLs]
  +[EXEnumerator extensionInstallDirectoryURLs]
  +[EXEnumerator extensionEnumerator]
  +[EXEnumerator extensionURLEnumerator]
  +[EXEnumerator _extensionLiveEnumerator]
  +[EXEnumerator _extensionPointLiveEnumerator]


EXExtensionPointEnumerator : NSEnumerator
 @property  <EXEnumeratorConfig> *config
 @property  NSDictionary *extensionPoints
 @property  NSEnumerator *extensionPointsKeyEnumerator
 @property  _EXExtensionPoint *currentExtensionPoint
 @property  BOOL validateExtensionPoints
 @property  NSString *currentIdentifier
 @property  NSDictionary *currentNativeSDKDictionary
 @property  NSDictionary *currentCatalystSDKDictionary

  // class methods
  +[EXExtensionPointEnumerator enumerateExtensionPointsInDirectoryAtURL:block:]
  +[EXExtensionPointEnumerator translateAppexptDictionary:definitionURL:isCatalyst:]

  // instance methods
  -[EXExtensionPointEnumerator config]
  -[EXExtensionPointEnumerator .cxx_destruct]
  -[EXExtensionPointEnumerator nextObject]
  -[EXExtensionPointEnumerator initWithCacheURLs:config:]
  -[EXExtensionPointEnumerator initWithSDKDictionary:config:]
  -[EXExtensionPointEnumerator initWithSDKDictionary:urls:config:]
  -[EXExtensionPointEnumerator translateXPCCacheDictionary:]
  -[EXExtensionPointEnumerator synthesizeNSExtensionKeysInDictionary:identifier:]
  -[EXExtensionPointEnumerator flattenEXExtensionPointConfigurationInDictionary:identifier:]
  -[EXExtensionPointEnumerator validateExtensionPointIdentifier:sdkDictionary:]
  -[EXExtensionPointEnumerator validateExtensionPoints]
  -[EXExtensionPointEnumerator extensionPoints]
  -[EXExtensionPointEnumerator extensionPointsKeyEnumerator]
  -[EXExtensionPointEnumerator currentExtensionPoint]
  -[EXExtensionPointEnumerator currentIdentifier]
  -[EXExtensionPointEnumerator currentNativeSDKDictionary]
  -[EXExtensionPointEnumerator currentCatalystSDKDictionary]


EXOSExtensionEnumerator : NSEnumerator
 @property  NSArray *extensionPaths
 @property  NSEnumerator *extensionPathsEnumerator

  // class methods
  +[EXOSExtensionEnumerator enumerateExtensionsInDirectoryAtURL:block:]

  // instance methods
  -[EXOSExtensionEnumerator .cxx_destruct]
  -[EXOSExtensionEnumerator nextObject]
  -[EXOSExtensionEnumerator extensionPaths]
  -[EXOSExtensionEnumerator initWithCacheURLs:]
  -[EXOSExtensionEnumerator initWithCacheURLs:paths:]
  -[EXOSExtensionEnumerator extensionPathsEnumerator]


_EXDefaults : NSObject
 @property  BOOL implementsNSExtension
 @property  BOOL queryPredicatesEvaluatedOutOfProcess
 @property  BOOL useLSDExtensionKitServiceForDiscovery
 @property  BOOL useLSDExtensionKitServiceForLaunch
 @property  BOOL preferInProcessDiscovery
 @property  BOOL rejectExtensionRequestsWithInsecureInputItems
 @property  BOOL requiresLoadOperatorSecureDecoding
 @property  BOOL appleInternal
 @property  BOOL allowsAppleInternalComponents
 @property  BOOL supportExtensionKitConfigPath
 @property  BOOL hostRequiresEntitlements
 @property  BOOL enforceLegacyExtensionPointAllowList
 @property  BOOL allowSimulatedJetsam
 @property  BOOL allowPrototypeAPI
 @property  BOOL allowPrototypeSPI
 @property  BOOL assertOnDisallowedPrototypeAPIUse
 @property  BOOL assertOnDisallowedPrototypeSPIUse
 @property  BOOL startUIHostingSessionImmediately
 @property  BOOL enforceXPCCacheCodeSigning
 @property  NSSet *errorTypes
 @property  NSSet *plistTypes
 @property  NSSet *plistAndValueTypes
 @property  NSSet *alwaysEnabledExtensionBundleIdentifiers
 @property  NSString *defaultSandboxProfileName
 @property  BOOL forceSandbox
 @property  NSSet *allowedUnsandboxedExtensionPoints

  // class methods
  +[_EXDefaults sharedInstance]

  // instance methods
  -[_EXDefaults appleInternal]
  -[_EXDefaults _init]
  -[_EXDefaults implementsNSExtension]
  -[_EXDefaults queryPredicatesEvaluatedOutOfProcess]
  -[_EXDefaults errorTypes]
  -[_EXDefaults plistTypes]
  -[_EXDefaults plistAndValueTypes]
  -[_EXDefaults useLSDExtensionKitServiceForDiscovery]
  -[_EXDefaults useLSDExtensionKitServiceForLaunch]
  -[_EXDefaults preferInProcessDiscovery]
  -[_EXDefaults rejectExtensionRequestsWithInsecureInputItems]
  -[_EXDefaults requiresLoadOperatorSecureDecoding]
  -[_EXDefaults supportExtensionKitConfigPath]
  -[_EXDefaults allowsAppleInternalComponents]
  -[_EXDefaults hostRequiresEntitlements]
  -[_EXDefaults enforceLegacyExtensionPointAllowList]
  -[_EXDefaults allowSimulatedJetsam]
  -[_EXDefaults allowPrototypeAPI]
  -[_EXDefaults allowPrototypeSPI]
  -[_EXDefaults assertOnDisallowedPrototypeAPIUse]
  -[_EXDefaults assertOnDisallowedPrototypeSPIUse]
  -[_EXDefaults startUIHostingSessionImmediately]
  -[_EXDefaults alwaysEnabledExtensionBundleIdentifiers]
  -[_EXDefaults enforceXPCCacheCodeSigning]
  -[_EXDefaults forceSandbox]
  -[_EXDefaults allowedUnsandboxedExtensionPoints]
  -[_EXDefaults defaultSandboxProfileName]


_EXPersona : NSObject
 @property  NSString *personaUniqueString

  // class methods
  +[_EXPersona personaWithPersonaUniqueString:]
  +[_EXPersona currentPersona]
  +[_EXPersona defaultPersona]

  // instance methods
  -[_EXPersona initWithPersonaUniqueString:]
  -[_EXPersona .cxx_destruct]
  -[_EXPersona personaUniqueString]


_EXActiveQuery : NSObject
 @property  NSMutableSet *internalObservers
 @property  NSMutableSet *internalNewObservers
 @property  _EXDiscoveryController *discoveryController
 @property  NSSet *currentUUIDs
 @property  NSSet *observers
 @property  _EXQuery *query

  // instance methods
  -[_EXActiveQuery query]
  -[_EXActiveQuery addObserver:]
  -[_EXActiveQuery initWithQuery:discoveryController:]
  -[_EXActiveQuery isEqualToActiveQuery:]
  -[_EXActiveQuery .cxx_destruct]
  -[_EXActiveQuery discoveryController]
  -[_EXActiveQuery update]
  -[_EXActiveQuery internalObservers]
  -[_EXActiveQuery internalNewObservers]
  -[_EXActiveQuery currentUUIDs]
  -[_EXActiveQuery removeObserver:]
  -[_EXActiveQuery setCurrentUUIDs:]
  -[_EXActiveQuery isEqual:]
  -[_EXActiveQuery observers]


_EXSceneSessionConnectionRequest : NSObject <NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSXPCListenerEndpoint *hostEndpoint
 @property  _EXSceneSessionParameters *parameters

  // class methods
  +[_EXSceneSessionConnectionRequest supportsSecureCoding]

  // instance methods
  -[_EXSceneSessionConnectionRequest parameters]
  -[_EXSceneSessionConnectionRequest identifier]
  -[_EXSceneSessionConnectionRequest encodeWithCoder:]
  -[_EXSceneSessionConnectionRequest .cxx_destruct]
  -[_EXSceneSessionConnectionRequest setParameters:]
  -[_EXSceneSessionConnectionRequest setIdentifier:]
  -[_EXSceneSessionConnectionRequest init]
  -[_EXSceneSessionConnectionRequest initWithCoder:]
  -[_EXSceneSessionConnectionRequest hostEndpoint]
  -[_EXSceneSessionConnectionRequest setHostEndpoint:]


_EXSceneSessionConnectionResponse : NSObject <NSSecureCoding>
 @property  NSXPCListenerEndpoint *sceneEndpoint

  // class methods
  +[_EXSceneSessionConnectionResponse supportsSecureCoding]

  // instance methods
  -[_EXSceneSessionConnectionResponse encodeWithCoder:]
  -[_EXSceneSessionConnectionResponse .cxx_destruct]
  -[_EXSceneSessionConnectionResponse init]
  -[_EXSceneSessionConnectionResponse initWithCoder:]
  -[_EXSceneSessionConnectionResponse sceneEndpoint]
  -[_EXSceneSessionConnectionResponse setSceneEndpoint:]


EXService_Subsystem : NSObject <PKModularService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EXService_Subsystem sharedInstance]
  +[EXService_Subsystem initForPlugInKit]

  // instance methods
  -[EXService_Subsystem beginUsing:withBundle:]


_EXConnectionHandlerExtension : _EXExtension
 @property  id principalObject
 @property  <_EXConnectionHandler> *connectionHandler

  // instance methods
  -[_EXConnectionHandlerExtension willFinishLaunching]
  -[_EXConnectionHandlerExtension didFinishLaunching]
  -[_EXConnectionHandlerExtension shouldAcceptConnection:]
  -[_EXConnectionHandlerExtension loadDelegateWithClass:]
  -[_EXConnectionHandlerExtension setConnectionHandler:]
  -[_EXConnectionHandlerExtension .cxx_destruct]
  -[_EXConnectionHandlerExtension principalObject]
  -[_EXConnectionHandlerExtension connectionHandler]
  -[_EXConnectionHandlerExtension setPrincipalObject:]


EXXPCUtil : NSObject
  // class methods
  +[EXXPCUtil sharedInstance]
  +[EXXPCUtil addExternalServiceForPid:path:overlay:]
  +[EXXPCUtil checkInWithLaunchd]
  +[EXXPCUtil servicePidFromXPCConnection:]
  +[EXXPCUtil assertIsExtensionProcess]


LSExtensionPointRecord(_EX_LSExtensionPointRecord_)
	// instance methods
	-[LSExtensionPointRecord(_EX_LSExtensionPointRecord_) _EX_initWithIdentifier:platform:parentAppRecord:error:]
	-[LSExtensionPointRecord(_EX_LSExtensionPointRecord_) _EX_parentAppRecord]

LSPropertyList(_EXDictionaryLike)
	// instance methods
	-[LSPropertyList(_EXDictionaryLike) _EX_dictionaryForKey:]

NSExtensionContext(ExtensionKitAdditions)
	// class methods
	+[NSExtensionContext(ExtensionKitAdditions) _allowedItemPayloadClasses]

	// instance methods
	-[NSExtensionContext(ExtensionKitAdditions) _derivedExtensionAuxiliaryHostProtocol]

NSUUID(ExtensionKitAdditions)
	// class methods
	+[NSUUID(ExtensionKitAdditions) _EK_nullUUID]

NSXPCConnection(EXTransaction)
	// instance methods
	-[NSXPCConnection(EXTransaction) _EX_transaction]
	-[NSXPCConnection(EXTransaction) _EX_setTransaction:]
	-[NSXPCConnection(EXTransaction) _EX_extensionProcess]
	-[NSXPCConnection(EXTransaction) _EX_setExtensionProcess:]

(ExtensionKitAdditions)
	// instance methods
	-[(ExtensionKitAdditions) _EX_isDirectory]
	-[(ExtensionKitAdditions) _EX_isApplication]
	-[(ExtensionKitAdditions) _EX_containingApplicationBundleURL]
	-[(ExtensionKitAdditions) _EX_isContainedInDirectory:]

(ExtensionKitAdditions)
	// class methods
	+[(ExtensionKitAdditions) _EX_dictionaryWithSignedURL:error:]

	// instance methods
	-[(ExtensionKitAdditions) _EX_dictionaryForKey:]
	-[(ExtensionKitAdditions) _EX_objectForKey:ofClass:]
	-[(ExtensionKitAdditions) _EX_objectForKeys:ofClass:]
	-[(ExtensionKitAdditions) _EX_dictionaryForKeys:]
	-[(ExtensionKitAdditions) _EX_arrayForKey:]
	-[(ExtensionKitAdditions) _EX_stringForKey:]
	-[(ExtensionKitAdditions) _EX_stringForKeys:]
	-[(ExtensionKitAdditions) _EX_integerForKey:]
	-[(ExtensionKitAdditions) _EX_boolForKey:]
	-[(ExtensionKitAdditions) _EX_boolForKey:defaultValue:]
	-[(ExtensionKitAdditions) _EX_dictionaryByRemovingObjectForKey:]
	-[(ExtensionKitAdditions) _EX_dictionaryBySettingObject:forKey:]
	-[(ExtensionKitAdditions) _EX_dictionaryBySettingValuesForKeysWithDictionary:]

(ExtensionKitAdditions)
	// instance methods
	-[(ExtensionKitAdditions) _EX_objectAtIndex:ofClass:]
	-[(ExtensionKitAdditions) _EX_dictionaryAtIndex:]
	-[(ExtensionKitAdditions) _EX_arrayAtIndex:]
	-[(ExtensionKitAdditions) _EX_stringAtIndex:]
	-[(ExtensionKitAdditions) _EX_boolAtIndex:]
	-[(ExtensionKitAdditions) _EX_boolAtIndex:defaultValue:]

NSError(ExtensionKitAdditions)
	// class methods
	+[NSError(ExtensionKitAdditions) _EX_unimplementedError]
	+[NSError(ExtensionKitAdditions) _EX_parameterError]

NSXPCInterface(EXService)
	// class methods
	+[NSXPCInterface(EXService) _EX_discoveryServiceInterface]
	+[NSXPCInterface(EXService) _EX_launchServiceInterface]
	+[NSXPCInterface(EXService) _EX_combinedServiceInterface]
	+[NSXPCInterface(EXService) _EX_queryResultsInterface]

NSExtension(ExtensionKitAdditions)
	// class methods
	+[NSExtension(ExtensionKitAdditions) extensionInfoForCurrentProcess]
	+[NSExtension(ExtensionKitAdditions) extensionRepresentedBy:error:]
	+[NSExtension(ExtensionKitAdditions) extensionWithIdentity:error:]

	// instance methods
	-[NSExtension(ExtensionKitAdditions) setPreferredLanguages:]
	-[NSExtension(ExtensionKitAdditions) containingBundleIdentifier]
	-[NSExtension(ExtensionKitAdditions) uuid]
	-[NSExtension(ExtensionKitAdditions) preferredLanguages]
	-[NSExtension(ExtensionKitAdditions) _personas]
	-[NSExtension(ExtensionKitAdditions) beginExtensionRequest:completion:]
	-[NSExtension(ExtensionKitAdditions) beginExtensionRequest:error:]
	-[NSExtension(ExtensionKitAdditions) requiresMacCatalystBehavior]
	-[NSExtension(ExtensionKitAdditions) extensionIdentityWithError:]

01 00 0a00 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationExtensionRecord 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleRecord 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSDatabaseContext 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSExtensionPointRecord 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSObserver 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPropertyList 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSSettingsStore 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSEnumerator 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionItem 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOrderedCollectionDifference 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListenerEndpoint 
01 00 0900 /System/Library/PrivateFrameworks/PlugInKit.framework/PlugInKit: PKHost 
01 00 0900 /System/Library/PrivateFrameworks/PlugInKit.framework/PlugInKit: PKLaunchRequest 
01 00 0900 /System/Library/PrivateFrameworks/PlugInKit.framework/PlugInKit: PKService 
01 00 0800 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSLaunchContext 
01 00 0800 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSLaunchRequest 
01 00 0800 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
01 00 0800 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentifier 
01 00 0800 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentity 
01 00 0600 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: _NSExtensionContextVendor 
