|| __DATA.__objc_data _OBJC_CLASS_$_CTAppDataUsage
|| __DATA.__objc_data _OBJC_CLASS_$_CTBinarySMS
|| __DATA.__objc_data _OBJC_CLASS_$_CTCall
|| __DATA.__objc_data _OBJC_CLASS_$_CTCallCenter
|| __DATA.__objc_data _OBJC_CLASS_$_CTCellularData
|| __DATA.__objc_data _OBJC_CLASS_$_CTCellularPlanProvisioning
|| __DATA.__objc_data _OBJC_CLASS_$_CTDataUsage
|| __DATA.__objc_data _OBJC_CLASS_$_CTDataUsagePolicies
|| __DATA.__objc_data _OBJC_CLASS_$_CTDataUsed
|| __DATA.__objc_data _OBJC_CLASS_$_CTDedicatedBearerDescr
|| __DATA.__objc_data _OBJC_CLASS_$_CTDisplayPlan
|| __DATA.__objc_data _OBJC_CLASS_$_CTEmergencyModeResult
|| __DATA.__objc_data _OBJC_CLASS_$_CTGeofenceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CTGeofenceProfile
|| __DATA.__objc_data _OBJC_CLASS_$_CTIPFilterContainer
|| __DATA.__objc_data _OBJC_CLASS_$_CTInstalledPlan
|| __DATA.__objc_data _OBJC_CLASS_$_CTLocalDevice
|| __DATA.__objc_data _OBJC_CLASS_$_CTLocalPlan
|| __DATA.__objc_data _OBJC_CLASS_$_CTMessage
|| __DATA.__objc_data _OBJC_CLASS_$_CTMessagePart
|| __DATA.__objc_data _OBJC_CLASS_$_CTMessageStatus
|| __DATA.__objc_data _OBJC_CLASS_$_CTODAPlan
|| __DATA.__objc_data _OBJC_CLASS_$_CTPNRDataType
|| __DATA.__objc_data _OBJC_CLASS_$_CTPendingPlan
|| __DATA.__objc_data _OBJC_CLASS_$_CTPerAppDataUsage
|| __DATA.__objc_data _OBJC_CLASS_$_CTPhoneNumber
|| __DATA.__objc_data _OBJC_CLASS_$_CTPlanBillingDetails
|| __DATA.__objc_data _OBJC_CLASS_$_CTPlanSignUpDetails
|| __DATA.__objc_data _OBJC_CLASS_$_CTPlanTransferAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_CTRadioAccessTechnology
|| __DATA.__objc_data _OBJC_CLASS_$_CTRemoteBlacklistPlan
|| __DATA.__objc_data _OBJC_CLASS_$_CTRemotePlan
|| __DATA.__objc_data _OBJC_CLASS_$_CTSIMToolkitItem
|| __DATA.__objc_data _OBJC_CLASS_$_CTSimDeactivationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CTSubscriber
|| __DATA.__objc_data _OBJC_CLASS_$_CTSubscriberAlgorithm
|| __DATA.__objc_data _OBJC_CLASS_$_CTSubscriberAlgorithmEAPAKA
|| __DATA.__objc_data _OBJC_CLASS_$_CTSubscriberAlgorithmEAPSIM
|| __DATA.__objc_data _OBJC_CLASS_$_CTSubscriberInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CTSweetgumDataPlanMetricsError
|| __DATA.__objc_data _OBJC_CLASS_$_CTSweetgumDataPlanMetricsItem
|| __DATA.__objc_data _OBJC_CLASS_$_CTSweetgumPlanGroup
|| __DATA.__objc_data _OBJC_CLASS_$_CTSweetgumUsageAccountMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_CTSweetgumUsagePlanItemData
|| __DATA.__objc_data _OBJC_CLASS_$_CTSweetgumUsagePlanItemMessages
|| __DATA.__objc_data _OBJC_CLASS_$_CTSweetgumUsagePlanItemVoice
|| __DATA.__objc_data _OBJC_CLASS_$_CTSweetgumUsagePlanMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_CTXPCError
|| __DATA.__objc_data _OBJC_METACLASS_$_CTAppDataUsage
|| __DATA.__objc_data _OBJC_METACLASS_$_CTBinarySMS
|| __DATA.__objc_data _OBJC_METACLASS_$_CTCall
|| __DATA.__objc_data _OBJC_METACLASS_$_CTCallCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_CTCellularData
|| __DATA.__objc_data _OBJC_METACLASS_$_CTCellularPlanProvisioning
|| __DATA.__objc_data _OBJC_METACLASS_$_CTDataUsage
|| __DATA.__objc_data _OBJC_METACLASS_$_CTDataUsagePolicies
|| __DATA.__objc_data _OBJC_METACLASS_$_CTDataUsed
|| __DATA.__objc_data _OBJC_METACLASS_$_CTDedicatedBearerDescr
|| __DATA.__objc_data _OBJC_METACLASS_$_CTDisplayPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_CTEmergencyModeResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CTGeofenceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CTGeofenceProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_CTIPFilterContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_CTInstalledPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_CTLocalDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_CTLocalPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_CTMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_CTMessagePart
|| __DATA.__objc_data _OBJC_METACLASS_$_CTMessageStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_CTODAPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_CTPNRDataType
|| __DATA.__objc_data _OBJC_METACLASS_$_CTPendingPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_CTPerAppDataUsage
|| __DATA.__objc_data _OBJC_METACLASS_$_CTPhoneNumber
|| __DATA.__objc_data _OBJC_METACLASS_$_CTPlanBillingDetails
|| __DATA.__objc_data _OBJC_METACLASS_$_CTPlanSignUpDetails
|| __DATA.__objc_data _OBJC_METACLASS_$_CTPlanTransferAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_CTRadioAccessTechnology
|| __DATA.__objc_data _OBJC_METACLASS_$_CTRemoteBlacklistPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_CTRemotePlan
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSIMToolkitItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSimDeactivationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSubscriber
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSubscriberAlgorithm
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSubscriberAlgorithmEAPAKA
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSubscriberAlgorithmEAPSIM
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSubscriberInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSweetgumDataPlanMetricsError
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSweetgumDataPlanMetricsItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSweetgumPlanGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSweetgumUsageAccountMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSweetgumUsagePlanItemData
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSweetgumUsagePlanItemMessages
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSweetgumUsagePlanItemVoice
|| __DATA.__objc_data _OBJC_METACLASS_$_CTSweetgumUsagePlanMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_CTXPCError
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._bypassSupportedMessageModesCheck
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._contentType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._contentTypeParams
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._context
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._countryCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._date
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._items
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._messageType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._rawHeaders
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._recipients
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._replaceMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._replyEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._sender
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._serviceCenter
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._smsType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._subject
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessage._uuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessagePart._contentId
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessagePart._contentLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessagePart._contentType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessagePart._contentTypeParams
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessagePart._data
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessageStatus._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessageStatus._messageType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTMessageStatus._result
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTPhoneNumber._countryCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTPhoneNumber._digits
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTPhoneNumber._isShortCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CTPhoneNumber._slot
|| __DATA_CONST.__const _CTCallStateConnected
|| __DATA_CONST.__const _CTCallStateDialing
|| __DATA_CONST.__const _CTCallStateDisconnected
|| __DATA_CONST.__const _CTCallStateIncoming
|| __DATA_CONST.__const _CTCellIdDidChangeNotification
|| __DATA_CONST.__const _CTDataBearerTechnology5G
|| __DATA_CONST.__const _CTDataBearerTechnologyCDMA
|| __DATA_CONST.__const _CTDataBearerTechnologyLTE
|| __DATA_CONST.__const _CTDataBearerTechnologyUMTS
|| __DATA_CONST.__const _CTDataBearerTechnologyUnknown
|| __DATA_CONST.__const _CTErrorDomain
|| __DATA_CONST.__const _CTNrFrequencyRangeMmWave
|| __DATA_CONST.__const _CTNrFrequencyRangeSub6
|| __DATA_CONST.__const _CTNrFrequencyRangeSub6AndMmWave
|| __DATA_CONST.__const _CTNrFrequencyRangeUnknown
|| __DATA_CONST.__const _CTRadioAccessTechnologyCDMA1x
|| __DATA_CONST.__const _CTRadioAccessTechnologyCDMAEVDORev0
|| __DATA_CONST.__const _CTRadioAccessTechnologyCDMAEVDORevA
|| __DATA_CONST.__const _CTRadioAccessTechnologyCDMAEVDORevB
|| __DATA_CONST.__const _CTRadioAccessTechnologyDidChangeNotification
|| __DATA_CONST.__const _CTRadioAccessTechnologyEdge
|| __DATA_CONST.__const _CTRadioAccessTechnologyGPRS
|| __DATA_CONST.__const _CTRadioAccessTechnologyHSDPA
|| __DATA_CONST.__const _CTRadioAccessTechnologyHSUPA
|| __DATA_CONST.__const _CTRadioAccessTechnologyLTE
|| __DATA_CONST.__const _CTRadioAccessTechnologyNR
|| __DATA_CONST.__const _CTRadioAccessTechnologyNRNSA
|| __DATA_CONST.__const _CTRadioAccessTechnologyWCDMA
|| __DATA_CONST.__const _CTRadioAccessTechnologyWCMDA
|| __DATA_CONST.__const _CTRadioAccessTechnologyeHRPD
|| __DATA_CONST.__const _CTServiceCellIdDidChangeNotification
|| __DATA_CONST.__const _CTServiceRadioAccessTechnologyDidChangeNotification
|| __DATA_CONST.__const _CTServiceSignalStrengthDidChangeNotification
|| __DATA_CONST.__const _CTSignalStrengthBarsKey
|| __DATA_CONST.__const _CTSignalStrengthDidChangeNotification
|| __DATA_CONST.__const _CTSubscriberSimAuthenticationAutnKey
|| __DATA_CONST.__const _CTSubscriberSimAuthenticationAutsKey
|| __DATA_CONST.__const _CTSubscriberSimAuthenticationCkKey
|| __DATA_CONST.__const _CTSubscriberSimAuthenticationIkKey
|| __DATA_CONST.__const _CTSubscriberSimAuthenticationKcKey
|| __DATA_CONST.__const _CTSubscriberSimAuthenticationRandKey
|| __DATA_CONST.__const _CTSubscriberSimAuthenticationResKey
|| __DATA_CONST.__const _CTSubscriberSimAuthenticationSresKey
|| __DATA_CONST.__const _CTSubscriberSimAuthenticationTypeEAPAKA
|| __DATA_CONST.__const _CTSubscriberSimAuthenticationTypeEAPSIM
|| __DATA_CONST.__const _CTSubscriberSimAuthenticationTypeKey
|| __DATA_CONST.__const _CTSubscriberTokenRefreshed
|| __DATA_CONST.__const _CTSweetgumErrorDomain
|| __DATA_CONST.__const __ZN14CSIPhoneNumber16kIMEIUssdCommandE
|| __DATA_CONST.__const __ZN14CSIPhoneNumber18kRFExposureCommandE
|| __DATA_CONST.__const _kAPNCapability
|| __DATA_CONST.__const _kAccountInfoKeyAccountDescription
|| __DATA_CONST.__const _kAccountInfoKeyBillingCycleEndTime
|| __DATA_CONST.__const _kAccountInfoKeyBillingCycleStartTime
|| __DATA_CONST.__const _kAccountInfoKeyDataCapacity
|| __DATA_CONST.__const _kAccountInfoKeyDataExpiryTime
|| __DATA_CONST.__const _kAccountInfoKeyDataPlanDescription
|| __DATA_CONST.__const _kAccountInfoKeyDataPlanExpiryType
|| __DATA_CONST.__const _kAccountInfoKeyDataPlanIsAutomaticRenewal
|| __DATA_CONST.__const _kAccountInfoKeyDataPlanIsStacking
|| __DATA_CONST.__const _kAccountInfoKeyDataSubscriptionStatus
|| __DATA_CONST.__const _kAccountInfoKeyDataUsed
|| __DATA_CONST.__const _kAccountInfoKeyIccid
|| __DATA_CONST.__const _kAccountInfoKeyInformationStatus
|| __DATA_CONST.__const _kAccountInfoKeyInformationStatusFailed
|| __DATA_CONST.__const _kAccountInfoKeyInformationStatusNotSupported
|| __DATA_CONST.__const _kAccountInfoKeyInformationStatusSuccess
|| __DATA_CONST.__const _kAccountInfoKeyMOMmsCount
|| __DATA_CONST.__const _kAccountInfoKeyMOSmsCount
|| __DATA_CONST.__const _kAccountInfoKeyMTMmsCount
|| __DATA_CONST.__const _kAccountInfoKeyMTSmsCount
|| __DATA_CONST.__const _kAccountInfoKeyMessagePlanDescription
|| __DATA_CONST.__const _kAccountInfoKeyMessageSubscriptionStatus
|| __DATA_CONST.__const _kAccountInfoKeyUpdateTime
|| __DATA_CONST.__const _kAccountInfoKeyUsageHistory
|| __DATA_CONST.__const _kAccountInfoKeyVoiceCapacity
|| __DATA_CONST.__const _kAccountInfoKeyVoicePeakUsed
|| __DATA_CONST.__const _kAccountInfoKeyVoicePlanDescription
|| __DATA_CONST.__const _kAccountInfoKeyVoiceSubscriptionStatus
|| __DATA_CONST.__const _kActionId
|| __DATA_CONST.__const _kActionType
|| __DATA_CONST.__const _kAgentCapability
|| __DATA_CONST.__const _kAppleSafetyAlert_AreaDesc_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Area_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Category_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Certainty_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Circle_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_CmamLongText_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_CmamText_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Description_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_EffectiveTimestamp_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_EventCode_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_ExpiryTimestamp_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_GeoCode_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Headline_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Info_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Instruction_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Language_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_MessageType_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Parameters_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Polygon_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_ResponseCode_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_SessionID_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Severity_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Status_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_UniqueID_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_Urgency_Key
|| __DATA_CONST.__const _kAppleSafetyAlert_WeaHandlingType_Key
|| __DATA_CONST.__const _kAudioToneRelayFlag
|| __DATA_CONST.__const _kAudioToneStandard
|| __DATA_CONST.__const _kBBCallDisconnectCause
|| __DATA_CONST.__const _kBackwardsCompabilityCallDirection
|| __DATA_CONST.__const _kBackwardsCompabilityCallerName
|| __DATA_CONST.__const _kBackwardsCompabilityPhoneNumber
|| __DATA_CONST.__const _kBackwardsCompabilityStartTime
|| __DATA_CONST.__const _kBackwardsCompabilityUuid
|| __DATA_CONST.__const _kC2KDeviceCapability
|| __DATA_CONST.__const _kCFSIMToolkitDisplayListItemSelected
|| __DATA_CONST.__const _kCFSIMToolkitNextAction
|| __DATA_CONST.__const _kCFSIMToolkitNextActionDisplayList
|| __DATA_CONST.__const _kCFSIMToolkitNextActionDisplayText
|| __DATA_CONST.__const _kCFSIMToolkitNextActionGetInput
|| __DATA_CONST.__const _kCFSIMToolkitNextActionLaunchBrowser
|| __DATA_CONST.__const _kCFSIMToolkitNextActionOther
|| __DATA_CONST.__const _kCFSIMToolkitNextActionPlayTone
|| __DATA_CONST.__const _kCFSIMToolkitNextActionSendSMS
|| __DATA_CONST.__const _kCFSIMToolkitNextActionSendSS
|| __DATA_CONST.__const _kCFSIMToolkitNextActionSendUSSD
|| __DATA_CONST.__const _kCFSIMToolkitNextActionSetUpCall
|| __DATA_CONST.__const _kCTAudioBuiltInMic1Key
|| __DATA_CONST.__const _kCTAudioBuiltInMic2Key
|| __DATA_CONST.__const _kCTAudioBuiltInMic3Key
|| __DATA_CONST.__const _kCTAudioCallDropToneCompleteNotification
|| __DATA_CONST.__const _kCTAudioConnectedPortsKey
|| __DATA_CONST.__const _kCTAudioHeadphonesWiredPort
|| __DATA_CONST.__const _kCTAudioInputsKey
|| __DATA_CONST.__const _kCTAudioNoiseReductionEnabledKey
|| __DATA_CONST.__const _kCTAudioOtherKey
|| __DATA_CONST.__const _kCTAudioOutputsKey
|| __DATA_CONST.__const _kCTAudioReceiverKey
|| __DATA_CONST.__const _kCTAudioSampleRateSwitchCompleteNotification
|| __DATA_CONST.__const _kCTAudioSampleRateSwitchCompleteStatus
|| __DATA_CONST.__const _kCTAudioSpeakerKey
|| __DATA_CONST.__const _kCTAudioTTYModeStatus
|| __DATA_CONST.__const _kCTAudioTTYModeStatusNotification
|| __DATA_CONST.__const _kCTAudioVocoderI2SClockRate
|| __DATA_CONST.__const _kCTAudioVocoderInfoNotification
|| __DATA_CONST.__const _kCTAudioVocoderInfoSupported
|| __DATA_CONST.__const _kCTAudioVocoderSampleRate
|| __DATA_CONST.__const _kCTAudioVocoderType
|| __DATA_CONST.__const _kCTAudioVocoderType4GVNB
|| __DATA_CONST.__const _kCTAudioVocoderType4GVNW
|| __DATA_CONST.__const _kCTAudioVocoderType4GVWB
|| __DATA_CONST.__const _kCTAudioVocoderTypeAMR
|| __DATA_CONST.__const _kCTAudioVocoderTypeAMRWithBWE
|| __DATA_CONST.__const _kCTAudioVocoderTypeEAMR
|| __DATA_CONST.__const _kCTAudioVocoderTypeEFR
|| __DATA_CONST.__const _kCTAudioVocoderTypeEFRWithBWE
|| __DATA_CONST.__const _kCTAudioVocoderTypeEVRC
|| __DATA_CONST.__const _kCTAudioVocoderTypeEVRCB
|| __DATA_CONST.__const _kCTAudioVocoderTypeEVRCBWithBWE
|| __DATA_CONST.__const _kCTAudioVocoderTypeEVS
|| __DATA_CONST.__const _kCTAudioVocoderTypeFR
|| __DATA_CONST.__const _kCTAudioVocoderTypeFRWithBWE
|| __DATA_CONST.__const _kCTAudioVocoderTypeHR
|| __DATA_CONST.__const _kCTAudioVocoderTypeHRWithBWE
|| __DATA_CONST.__const _kCTAudioVocoderTypeQCELP13
|| __DATA_CONST.__const _kCTAudioVocoderTypeWAMR
|| __DATA_CONST.__const _kCTAudioVoiceMuteStatus
|| __DATA_CONST.__const _kCTAudioVoiceMuteStatusNotification
|| __DATA_CONST.__const _kCTAutomaticSMS
|| __DATA_CONST.__const _kCTBBKeepAliveOffloadStartNotification
|| __DATA_CONST.__const _kCTBBKeepAliveOffloadStopNotification
|| __DATA_CONST.__const _kCTBasebandARTDConfig
|| __DATA_CONST.__const _kCTBasebandARTDDisabled
|| __DATA_CONST.__const _kCTBasebandARTDEnabled
|| __DATA_CONST.__const _kCTBasebandARTDUnknown
|| __DATA_CONST.__const _kCTBasebandARTDUnsupported
|| __DATA_CONST.__const _kCTBasebandAccessOverloadClass
|| __DATA_CONST.__const _kCTBasebandDiversityOff
|| __DATA_CONST.__const _kCTBasebandDiversityOn
|| __DATA_CONST.__const _kCTBasebandDiversityUnknown
|| __DATA_CONST.__const _kCTBasebandProtocolRevision
|| __DATA_CONST.__const _kCTBasebandRx1xDiversity
|| __DATA_CONST.__const _kCTBasebandRxAntennaConfig
|| __DATA_CONST.__const _kCTBasebandRxAntennaConfigDefault
|| __DATA_CONST.__const _kCTBasebandRxAntennaConfigPrimary
|| __DATA_CONST.__const _kCTBasebandRxAntennaConfigSecondary
|| __DATA_CONST.__const _kCTBasebandRxDODiversity
|| __DATA_CONST.__const _kCTBasebandRxDiversity
|| __DATA_CONST.__const _kCTBasebandRxDiversityDisabled
|| __DATA_CONST.__const _kCTBasebandRxDiversityEnabled
|| __DATA_CONST.__const _kCTBasebandRxDiversityUnknown
|| __DATA_CONST.__const _kCTBasebandRxWCDMADiversity
|| __DATA_CONST.__const _kCTBasebandSettingsEraseEFS
|| __DATA_CONST.__const _kCTBasebandSettingsEraseEverything
|| __DATA_CONST.__const _kCTBasebandSettingsEraseSFP
|| __DATA_CONST.__const _kCTBasebandTxAntennaConfig
|| __DATA_CONST.__const _kCTBasebandTxAntennaConfig0
|| __DATA_CONST.__const _kCTBasebandTxAntennaConfig1
|| __DATA_CONST.__const _kCTBasebandTxAntennaConfig3
|| __DATA_CONST.__const _kCTBasebandTxAntennaConfig4
|| __DATA_CONST.__const _kCTBasebandTxAntennaConfigUnknown
|| __DATA_CONST.__const _kCTBasebandTxAntennaConfigUnsupported
|| __DATA_CONST.__const _kCTBasebandTxC2KDiversity
|| __DATA_CONST.__const _kCTBasebandTxWCDMADiversity
|| __DATA_CONST.__const _kCTCall
|| __DATA_CONST.__const _kCTCallAlternateStatusChangeNotification
|| __DATA_CONST.__const _kCTCallAnswerAndEndActive
|| __DATA_CONST.__const _kCTCallAnswerAndEndHeld
|| __DATA_CONST.__const _kCTCallAnswerBehavior
|| __DATA_CONST.__const _kCTCallAnswerOnly
|| __DATA_CONST.__const _kCTCallAudioFrequencyLevel
|| __DATA_CONST.__const _kCTCallAudioSourceId
|| __DATA_CONST.__const _kCTCallAudioToneRelayNotification
|| __DATA_CONST.__const _kCTCallAudioToneStandard
|| __DATA_CONST.__const _kCTCallBarredNotification
|| __DATA_CONST.__const _kCTCallBarringSettingAvailableNotification
|| __DATA_CONST.__const _kCTCallBarringSettingReqeustErrorNotification
|| __DATA_CONST.__const _kCTCallBarringSettingSaveErrorNotification
|| __DATA_CONST.__const _kCTCallBarringSettingSavedNotification
|| __DATA_CONST.__const _kCTCallCallerName
|| __DATA_CONST.__const _kCTCallCauseCodeNotification
|| __DATA_CONST.__const _kCTCallControlErrorCode
|| __DATA_CONST.__const _kCTCallControlFailureNotification
|| __DATA_CONST.__const _kCTCallDeflectedNotification
|| __DATA_CONST.__const _kCTCallDialServiceAddress
|| __DATA_CONST.__const _kCTCallDialServiceCallType
|| __DATA_CONST.__const _kCTCallDialServiceProvider
|| __DATA_CONST.__const _kCTCallDialServiceSource
|| __DATA_CONST.__const _kCTCallDirection
|| __DATA_CONST.__const _kCTCallDirectionIncoming
|| __DATA_CONST.__const _kCTCallDirectionOutgoing
|| __DATA_CONST.__const _kCTCallDisconnectAnsweredElsewhere
|| __DATA_CONST.__const _kCTCallDisconnectCallHandedToAnotherDevice
|| __DATA_CONST.__const _kCTCallDisconnectNoError
|| __DATA_CONST.__const _kCTCallDisconnectOtherReason
|| __DATA_CONST.__const _kCTCallDisconnectSecondaryDeviceAlreadyInUse
|| __DATA_CONST.__const _kCTCallDisconnectUserBusy
|| __DATA_CONST.__const _kCTCallDuration
|| __DATA_CONST.__const _kCTCallErrorInvalidArgument
|| __DATA_CONST.__const _kCTCallErrorNoMemory
|| __DATA_CONST.__const _kCTCallErrorOperationNotAllowed
|| __DATA_CONST.__const _kCTCallForwardedNotification
|| __DATA_CONST.__const _kCTCallForwardingActiveNotification
|| __DATA_CONST.__const _kCTCallForwardingActiveUnconditional
|| __DATA_CONST.__const _kCTCallForwardingSettingAvailableNotification
|| __DATA_CONST.__const _kCTCallForwardingSettingReqeustErrorNotification
|| __DATA_CONST.__const _kCTCallForwardingSettingSaveErrorNotification
|| __DATA_CONST.__const _kCTCallForwardingSettingSavedNotification
|| __DATA_CONST.__const _kCTCallHandoverEndedNotification
|| __DATA_CONST.__const _kCTCallHandoverLikelyNotification
|| __DATA_CONST.__const _kCTCallHandoverStartedNotification
|| __DATA_CONST.__const _kCTCallHandoverSuccess
|| __DATA_CONST.__const _kCTCallId
|| __DATA_CONST.__const _kCTCallIdentificationChangeNotification
|| __DATA_CONST.__const _kCTCallIdentificationSuppressionRejectedNotification
|| __DATA_CONST.__const _kCTCallInputFrequencyLevelChangeNotification
|| __DATA_CONST.__const _kCTCallIsTheOnlyCall
|| __DATA_CONST.__const _kCTCallManagementEmergencyWifiAllowed
|| __DATA_CONST.__const _kCTCallManagementEmergencyWifiCallCapable
|| __DATA_CONST.__const _kCTCallManagementEmergencyWifiNoLimit
|| __DATA_CONST.__const _kCTCallManagementExpectedCallSubType
|| __DATA_CONST.__const _kCTCallManagementIsAddCallAllowed
|| __DATA_CONST.__const _kCTCallManagementIsAmbiguousCallList
|| __DATA_CONST.__const _kCTCallManagementIsAmbiguousMultiParty
|| __DATA_CONST.__const _kCTCallManagementIsConferenceSideBarBlocked
|| __DATA_CONST.__const _kCTCallManagementIsEndAndAnswerAllowed
|| __DATA_CONST.__const _kCTCallManagementIsHardPauseSupported
|| __DATA_CONST.__const _kCTCallManagementIsHoldAllowed
|| __DATA_CONST.__const _kCTCallManagementIsMergeable
|| __DATA_CONST.__const _kCTCallManagementIsPhoneServicesActive
|| __DATA_CONST.__const _kCTCallManagementIsSwappable
|| __DATA_CONST.__const _kCTCallManagementMaxMultiPartyCallCount
|| __DATA_CONST.__const _kCTCallManagementMaxSupportedCallCount
|| __DATA_CONST.__const _kCTCallManagementPhoneServicesCSCallingAvailable
|| __DATA_CONST.__const _kCTCallManagementPhoneServicesVoLTECallingAvailable
|| __DATA_CONST.__const _kCTCallManagementStateChangeNotification
|| __DATA_CONST.__const _kCTCallMediaStatusActiveNotification
|| __DATA_CONST.__const _kCTCallMediaStatusInactiveNotification
|| __DATA_CONST.__const _kCTCallOutputFrequencyLevelChangeNotification
|| __DATA_CONST.__const _kCTCallPhoneNumber
|| __DATA_CONST.__const _kCTCallResetAuthenticationKey
|| __DATA_CONST.__const _kCTCallSerialized
|| __DATA_CONST.__const _kCTCallServiceProviderAppleCalling
|| __DATA_CONST.__const _kCTCallServiceProviderFaceTime
|| __DATA_CONST.__const _kCTCallServiceRequestAnswerNotification
|| __DATA_CONST.__const _kCTCallServiceRequestDialNotification
|| __DATA_CONST.__const _kCTCallShouldSetupAudioInterruptions
|| __DATA_CONST.__const _kCTCallSource
|| __DATA_CONST.__const _kCTCallSourceMode
|| __DATA_CONST.__const _kCTCallSourceModeNormal
|| __DATA_CONST.__const _kCTCallSourceModeRelay
|| __DATA_CONST.__const _kCTCallStartTime
|| __DATA_CONST.__const _kCTCallStatus
|| __DATA_CONST.__const _kCTCallStatusBecameAlertingNotification
|| __DATA_CONST.__const _kCTCallStatusChangeNotification
|| __DATA_CONST.__const _kCTCallSubTypeChangeNotification
|| __DATA_CONST.__const _kCTCallSubTypeThing1
|| __DATA_CONST.__const _kCTCallSubTypeThing2
|| __DATA_CONST.__const _kCTCallSubTypeThing3
|| __DATA_CONST.__const _kCTCallSubTypeThing4
|| __DATA_CONST.__const _kCTCallType
|| __DATA_CONST.__const _kCTCallTypeAudioConference
|| __DATA_CONST.__const _kCTCallTypeEmergency
|| __DATA_CONST.__const _kCTCallTypeNormal
|| __DATA_CONST.__const _kCTCallTypeVOIP
|| __DATA_CONST.__const _kCTCallTypeVideoConference
|| __DATA_CONST.__const _kCTCallTypeVoicemail
|| __DATA_CONST.__const _kCTCallWaitingSettingAvailableNotification
|| __DATA_CONST.__const _kCTCallWaitingSettingReqeustErrorNotification
|| __DATA_CONST.__const _kCTCallWaitingSettingSaveErrorNotification
|| __DATA_CONST.__const _kCTCallWaitingSettingSavedNotification
|| __DATA_CONST.__const _kCTCallingLineIdRestrictionSettingAvailableNotification
|| __DATA_CONST.__const _kCTCallingLineIdRestrictionSettingReqeustErrorNotification
|| __DATA_CONST.__const _kCTCallingLineIdRestrictionSettingSaveErrorNotification
|| __DATA_CONST.__const _kCTCallingLineIdRestrictionSettingSavedNotification
|| __DATA_CONST.__const _kCTCallingLinePresentationSettingAvailableNotification
|| __DATA_CONST.__const _kCTCallingLinePresentationSettingReqeustErrorNotification
|| __DATA_CONST.__const _kCTCampOnly
|| __DATA_CONST.__const _kCTCapabilityAgent
|| __DATA_CONST.__const _kCTCapabilityAgent2
|| __DATA_CONST.__const _kCTCapabilityAgent3
|| __DATA_CONST.__const _kCTCapabilityCanChangeSetting
|| __DATA_CONST.__const _kCTCapabilityCanChangeSettingEnableStillProvisioning
|| __DATA_CONST.__const _kCTCapabilityCanSet
|| __DATA_CONST.__const _kCTCapabilityCannotChangeSettingNeedToCallCarrier
|| __DATA_CONST.__const _kCTCapabilityPhoneServices
|| __DATA_CONST.__const _kCTCapabilityStatus
|| __DATA_CONST.__const _kCTCapabilityUpdateNotification
|| __DATA_CONST.__const _kCTCarrierAccountInfoQueryTypeSubscriptionStatus
|| __DATA_CONST.__const _kCTCarrierAccountInfoQueryTypeUsageStatus
|| __DATA_CONST.__const _kCTCarrierBundleAllowsHQVideoOver3G
|| __DATA_CONST.__const _kCTCarrierBundleAllowsVoIPKey
|| __DATA_CONST.__const _kCTCarrierBundleLocationServicesAvailKey
|| __DATA_CONST.__const _kCTCarrierBundleLocationServicesDefaultKey
|| __DATA_CONST.__const _kCTCarrierBundleMapKitAvailGreenTeaKey
|| __DATA_CONST.__const _kCTCarrierBundleMapKitAvailableKey
|| __DATA_CONST.__const _kCTCarrierBundleMapKitUserShiftGreenTeaKey
|| __DATA_CONST.__const _kCTCarrierBundleMapKitUserShiftNonGreenTeaKey
|| __DATA_CONST.__const _kCTCarrierBundleMapsAvailableKey
|| __DATA_CONST.__const _kCTCarrierBundleMapsUserShiftGreenTeaKey
|| __DATA_CONST.__const _kCTCarrierBundleMapsUserShiftNonGreenTeaKey
|| __DATA_CONST.__const _kCTCarrierBundleMapsVisibleGreenTeaKey
|| __DATA_CONST.__const _kCTCarrierBundleMapsVisibleKey
|| __DATA_CONST.__const _kCTCarrierEntitlementKey5GService
|| __DATA_CONST.__const _kCTCarrierEntitlementKeyCustomQoS
|| __DATA_CONST.__const _kCTCarrierEntitlementKeyFaceTime
|| __DATA_CONST.__const _kCTCarrierEntitlementKeyMultiSIM
|| __DATA_CONST.__const _kCTCarrierEntitlementKeyMultiSIMTransfer
|| __DATA_CONST.__const _kCTCarrierEntitlementKeySAWatch
|| __DATA_CONST.__const _kCTCarrierEntitlementKeySAWatchTransfer
|| __DATA_CONST.__const _kCTCarrierEntitlementKeyTethering
|| __DATA_CONST.__const _kCTCarrierEntitlementKeyThumper
|| __DATA_CONST.__const _kCTCarrierEntitlementKeyVoLTE
|| __DATA_CONST.__const _kCTCarrierEntitlementKeyVoWiFi
|| __DATA_CONST.__const _kCTCarrierEntitlementKeyiPadSignup
|| __DATA_CONST.__const _kCTCarrierEntitlementKeyiPhonePlanTransfer
|| __DATA_CONST.__const _kCTCarrierEntitlementResultAllowed
|| __DATA_CONST.__const _kCTCarrierEntitlementResultForbidden
|| __DATA_CONST.__const _kCTCarrierEntitlementResultIncompatible
|| __DATA_CONST.__const _kCTCarrierEntitlementResultProvisioning
|| __DATA_CONST.__const _kCTCarrierEntitlementResultUnknown
|| __DATA_CONST.__const _kCTCarrierEntitlements
|| __DATA_CONST.__const _kCTCarrierEntitlementsAuthTokenAvailable
|| __DATA_CONST.__const _kCTCarrierEntitlementsInfoAvailableNotification
|| __DATA_CONST.__const _kCTCarrierSettingsNewCarrierNotification
|| __DATA_CONST.__const _kCTCarrierSettingsNewOperatorNotification
|| __DATA_CONST.__const _kCTCellMonitorARFCN
|| __DATA_CONST.__const _kCTCellMonitorBWPSupport
|| __DATA_CONST.__const _kCTCellMonitorBandClass
|| __DATA_CONST.__const _kCTCellMonitorBandInfo
|| __DATA_CONST.__const _kCTCellMonitorBandwidth
|| __DATA_CONST.__const _kCTCellMonitorBaseStationId
|| __DATA_CONST.__const _kCTCellMonitorBaseStationLat
|| __DATA_CONST.__const _kCTCellMonitorBaseStationLong
|| __DATA_CONST.__const _kCTCellMonitorCSGIndication
|| __DATA_CONST.__const _kCTCellMonitorCellId
|| __DATA_CONST.__const _kCTCellMonitorCellRadioAccessTechnology
|| __DATA_CONST.__const _kCTCellMonitorCellType
|| __DATA_CONST.__const _kCTCellMonitorCellTypeDetected
|| __DATA_CONST.__const _kCTCellMonitorCellTypeNeighbor
|| __DATA_CONST.__const _kCTCellMonitorCellTypeServing
|| __DATA_CONST.__const _kCTCellMonitorChannelNumber
|| __DATA_CONST.__const _kCTCellMonitorCsgId
|| __DATA_CONST.__const _kCTCellMonitorDayLightSaving
|| __DATA_CONST.__const _kCTCellMonitorDeploymentType
|| __DATA_CONST.__const _kCTCellMonitorDerivedMCC
|| __DATA_CONST.__const _kCTCellMonitorECN0
|| __DATA_CONST.__const _kCTCellMonitorEcio
|| __DATA_CONST.__const _kCTCellMonitorEcioFiltered
|| __DATA_CONST.__const _kCTCellMonitorGSCN
|| __DATA_CONST.__const _kCTCellMonitorIsSA
|| __DATA_CONST.__const _kCTCellMonitorLAC
|| __DATA_CONST.__const _kCTCellMonitorLtmOffset
|| __DATA_CONST.__const _kCTCellMonitorMCC
|| __DATA_CONST.__const _kCTCellMonitorMNC
|| __DATA_CONST.__const _kCTCellMonitorNID
|| __DATA_CONST.__const _kCTCellMonitorNRARFCN
|| __DATA_CONST.__const _kCTCellMonitorNeighborType
|| __DATA_CONST.__const _kCTCellMonitorNgbrPn
|| __DATA_CONST.__const _kCTCellMonitorPCI
|| __DATA_CONST.__const _kCTCellMonitorPID
|| __DATA_CONST.__const _kCTCellMonitorPMax
|| __DATA_CONST.__const _kCTCellMonitorPNOffset
|| __DATA_CONST.__const _kCTCellMonitorPSC
|| __DATA_CONST.__const _kCTCellMonitorRSCP
|| __DATA_CONST.__const _kCTCellMonitorRSRP
|| __DATA_CONST.__const _kCTCellMonitorRSRQ
|| __DATA_CONST.__const _kCTCellMonitorRSSI
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyCDMA1x
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyCDMAEVDO
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyCDMAHybrid
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyGSM
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyLTE
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyNR
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyUMTS
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyUTRAN
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyUTRAN2
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyUnknown
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyUnknownTech4
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyUnknownTech5
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyUnknownTech6
|| __DATA_CONST.__const _kCTCellMonitorRadioAccessTechnologyUnknownTech7
|| __DATA_CONST.__const _kCTCellMonitorRefEcio
|| __DATA_CONST.__const _kCTCellMonitorRefPn
|| __DATA_CONST.__const _kCTCellMonitorRxAGC
|| __DATA_CONST.__const _kCTCellMonitorSCN
|| __DATA_CONST.__const _kCTCellMonitorSCS
|| __DATA_CONST.__const _kCTCellMonitorSID
|| __DATA_CONST.__const _kCTCellMonitorSNR
|| __DATA_CONST.__const _kCTCellMonitorSectorId
|| __DATA_CONST.__const _kCTCellMonitorSectorLat
|| __DATA_CONST.__const _kCTCellMonitorSectorLong
|| __DATA_CONST.__const _kCTCellMonitorTAC
|| __DATA_CONST.__const _kCTCellMonitorThroughput
|| __DATA_CONST.__const _kCTCellMonitorUARFCN
|| __DATA_CONST.__const _kCTCellMonitorUpdateNotification
|| __DATA_CONST.__const _kCTCellMonitorZoneId
|| __DATA_CONST.__const _kCTCellTrackedCI
|| __DATA_CONST.__const _kCTCellTrackedLAC
|| __DATA_CONST.__const _kCTCellTrackedMCC
|| __DATA_CONST.__const _kCTCellTrackedMNC
|| __DATA_CONST.__const _kCTCellularDataPlanActivationStatus
|| __DATA_CONST.__const _kCTCellularDataPlanActivationSuccessKey
|| __DATA_CONST.__const _kCTCellularDataPlanAutorenewEnabledKey
|| __DATA_CONST.__const _kCTCellularDataPlanBucketPlanExpiryDateKey
|| __DATA_CONST.__const _kCTCellularDataPlanBucketPlanSizeKey
|| __DATA_CONST.__const _kCTCellularDataPlanDeviceIdentifierKey
|| __DATA_CONST.__const _kCTCellularDataPlanInternationalKey
|| __DATA_CONST.__const _kCTCellularDataPlanLastUpdatedKey
|| __DATA_CONST.__const _kCTCellularDataPlanMsisdnKey
|| __DATA_CONST.__const _kCTCellularDataPlanNetworkAccessIdentifierKey
|| __DATA_CONST.__const _kCTCellularDataPlanOEMIdentifierKey
|| __DATA_CONST.__const _kCTCellularDataPlanStackingKey
|| __DATA_CONST.__const _kCTCellularDataPlanStatusNotification
|| __DATA_CONST.__const _kCTCellularDataPlanStatusTypeKey
|| __DATA_CONST.__const _kCTCellularDataPlanSubscriberIdentifierKey
|| __DATA_CONST.__const _kCTCellularDataPlanSubscriptionStateKey
|| __DATA_CONST.__const _kCTCellularDataPlanSubscriptionStatus
|| __DATA_CONST.__const _kCTCellularDataPlanTimedPlanPeriodEndDateKey
|| __DATA_CONST.__const _kCTCellularDataPlanTimedPlanUsageCapKey
|| __DATA_CONST.__const _kCTCellularDataPlanTypeKey
|| __DATA_CONST.__const _kCTCellularDataPlanUsageKey
|| __DATA_CONST.__const _kCTCellularDataPlanUsageReportingDelayKey
|| __DATA_CONST.__const _kCTCellularDataPlanUsageStatus
|| __DATA_CONST.__const _kCTCellularDataProvisioningConnectionAccountIdentifier
|| __DATA_CONST.__const _kCTCellularDataSettingsChangeNotification
|| __DATA_CONST.__const _kCTCellularDataUsageDisallowedPolicies
|| __DATA_CONST.__const _kCTCellularDataUsageInfoNotfication
|| __DATA_CONST.__const _kCTCellularDataUsagePolicy
|| __DATA_CONST.__const _kCTCellularDataUsagePolicyAllowWhileInHome
|| __DATA_CONST.__const _kCTCellularDataUsagePolicyAlwaysAllow
|| __DATA_CONST.__const _kCTCellularDataUsagePolicyDeny
|| __DATA_CONST.__const _kCTCellularDataUsageSubscriberKey
|| __DATA_CONST.__const _kCTCellularLongTransmitEnd
|| __DATA_CONST.__const _kCTCellularLongTransmitStart
|| __DATA_CONST.__const _kCTCellularPlanDebugProfileGid1Key
|| __DATA_CONST.__const _kCTCellularPlanDebugProfileGid2Key
|| __DATA_CONST.__const _kCTCellularPlanDebugProfileIccidKey
|| __DATA_CONST.__const _kCTCellularPlanDebugProfileIsActiveKey
|| __DATA_CONST.__const _kCTCellularPlanDebugProfileIsBootstrapKey
|| __DATA_CONST.__const _kCTCellularPlanDebugProfileMccKey
|| __DATA_CONST.__const _kCTCellularPlanDebugProfileMnc1Key
|| __DATA_CONST.__const _kCTCellularPlanDebugSlotCardTypeKey
|| __DATA_CONST.__const _kCTCellularPlanDebugSlotCsnKey
|| __DATA_CONST.__const _kCTCellularPlanDebugSlotIdKey
|| __DATA_CONST.__const _kCTCellularPlanDebugSlotProfileListKey
|| __DATA_CONST.__const _kCTCellularPlanDebugSlotVinylSlotInfoListKey
|| __DATA_CONST.__const _kCTCellularPlanDebugVinylInfoKey
|| __DATA_CONST.__const _kCTCellularPlanSimSubscriptionStatusKey
|| __DATA_CONST.__const _kCTCellularPlanSimSubscriptionStatusNotification
|| __DATA_CONST.__const _kCTCellularShortTransmitEnd
|| __DATA_CONST.__const _kCTCellularShortTransmitStart
|| __DATA_CONST.__const _kCTCellularTransmitStarted
|| __DATA_CONST.__const _kCTCellularTransmitStateConnected
|| __DATA_CONST.__const _kCTCellularTransmitStateIdle
|| __DATA_CONST.__const _kCTCellularTransmitStateNotification
|| __DATA_CONST.__const _kCTCellularTransmitStopped
|| __DATA_CONST.__const _kCTCellularUsageAlertThresholdFactor
|| __DATA_CONST.__const _kCTCellularUsageAlertThresholdFactorGrowthRate
|| __DATA_CONST.__const _kCTCellularUsageBillingCycleEndDate
|| __DATA_CONST.__const _kCTCellularUsageBillingCycleSupported
|| __DATA_CONST.__const _kCTCellularUsageCarrierSpaceSupported
|| __DATA_CONST.__const _kCTCellularUsageDeviceID
|| __DATA_CONST.__const _kCTCellularUsageMetaDataForHomeCountry
|| __DATA_CONST.__const _kCTCellularUsageMetaDataForRoaming
|| __DATA_CONST.__const _kCTCellularUsagePerDayUsageAllowance
|| __DATA_CONST.__const _kCTCellularUsagePerDayUsageThreshold
|| __DATA_CONST.__const _kCTCellularUsagePolicyDataAllowed
|| __DATA_CONST.__const _kCTCellularUsagePreviousBillingCycleDate
|| __DATA_CONST.__const _kCTCellularUsageRemoteDevice
|| __DATA_CONST.__const _kCTCellularUsageRoamingDataUsed
|| __DATA_CONST.__const _kCTCellularUsageSubscriberTag
|| __DATA_CONST.__const _kCTCellularUsageTotalDataUsed
|| __DATA_CONST.__const _kCTCellularUsageWorkspaceName
|| __DATA_CONST.__const _kCTCellularUsageWorkspacePath
|| __DATA_CONST.__const _kCTConnectedLineIdRestrictionSettingAvailableNotification
|| __DATA_CONST.__const _kCTConnectedLineIdRestrictionSettingReqeustErrorNotification
|| __DATA_CONST.__const _kCTConnectedLinePresentationSettingAvailableNotification
|| __DATA_CONST.__const _kCTConnectedLinePresentationSettingReqeustErrorNotification
|| __DATA_CONST.__const _kCTConnectionInvalidatedNotification
|| __DATA_CONST.__const _kCTCopyTxPowerAudioAlert
|| __DATA_CONST.__const _kCTCopyTxPowerAudioMode
|| __DATA_CONST.__const _kCTCopyTxPowerEnhancedMode
|| __DATA_CONST.__const _kCTCopyTxPwrProxMotionAssistMode
|| __DATA_CONST.__const _kCTDTMFDigitsChangedNotification
|| __DATA_CONST.__const _kCTDaemonReadyNotification
|| __DATA_CONST.__const _kCTDataConnectionServiceType3GFaceTimeAuthentication
|| __DATA_CONST.__const _kCTDataConnectionServiceType3GFaceTimeTraffic
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeAppleWirelessDiagnostics
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeBootstrapProvisioning
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeBootstrapRoamingInternetBypass
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeCarrierSpace
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeCellularDataPlanProvisioning
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeCellularDataPlanProvisioning2
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeDataTest
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeEmergency
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeEmergencyLocation
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeEntitlementTraffic
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeIMS
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeInternalDataProbe
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeInternet
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeInternetProbe
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeInternetSlice1
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeInternetSlice2
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeInternetSlice3
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeInternetSlice4
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeInternetSlice5
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeInternetSlice6
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeInternetSlice7
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeInternetSlice8
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeLLWirelessModemTraffic
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeMMS
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeOMADM
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeOTAActivation
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeOTAInternet
|| __DATA_CONST.__const _kCTDataConnectionServiceTypePushEmail
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeThumperIMS
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeUT
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeVVM
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeWirelessModemAuthentication
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeWirelessModemTraffic
|| __DATA_CONST.__const _kCTDataConnectionServiceTypeZeroRated
|| __DATA_CONST.__const _kCTDataFamilyTypeIPv4
|| __DATA_CONST.__const _kCTDataFamilyTypeIPv6
|| __DATA_CONST.__const _kCTDataServiceAvailabilityNotification
|| __DATA_CONST.__const _kCTDeviceId
|| __DATA_CONST.__const _kCTDeviceManagementAPNList
|| __DATA_CONST.__const _kCTDeviceManagementErrorCode
|| __DATA_CONST.__const _kCTDeviceManagementFileTypeCSIMCoverage
|| __DATA_CONST.__const _kCTDeviceManagementFileTypeCSIMProv
|| __DATA_CONST.__const _kCTDeviceManagementFileTypeDeviceConfiguration
|| __DATA_CONST.__const _kCTDeviceManagementFileTypePRL
|| __DATA_CONST.__const _kCTDeviceManagementIMSCredentialsList
|| __DATA_CONST.__const _kCTDeviceManagementStatus
|| __DATA_CONST.__const _kCTDeviceManagementStatusError
|| __DATA_CONST.__const _kCTDeviceManagementStatusErrorNotSubscribed
|| __DATA_CONST.__const _kCTDeviceManagementStatusOK
|| __DATA_CONST.__const _kCTEMBMSUpdateNotification
|| __DATA_CONST.__const _kCTEmergencyCallBackMode
|| __DATA_CONST.__const _kCTEmergencyCallBackModeStatusNotification
|| __DATA_CONST.__const _kCTEmergencyCallContextNotification
|| __DATA_CONST.__const _kCTEmergencyCallStatus
|| __DATA_CONST.__const _kCTEmergencyCallStatusChangeNotification
|| __DATA_CONST.__const _kCTEmergencyCallType
|| __DATA_CONST.__const _kCTEncryptedIdentity
|| __DATA_CONST.__const _kCTEncryptedIdentityWiFiCalling
|| __DATA_CONST.__const _kCTEncryptedIdentityWiFiHotspot
|| __DATA_CONST.__const _kCTEntitlementsDiagnosticsNotification
|| __DATA_CONST.__const _kCTIMSConnectionChangedNotification
|| __DATA_CONST.__const _kCTIMSConnectionType
|| __DATA_CONST.__const _kCTIMSConnectionTypeCellular
|| __DATA_CONST.__const _kCTIMSConnectionTypeWifi
|| __DATA_CONST.__const _kCTIMSIsConnectionUp
|| __DATA_CONST.__const _kCTIMSTransportType
|| __DATA_CONST.__const _kCTIMSTransportTypeCellular
|| __DATA_CONST.__const _kCTIMSTransportTypeWiFi
|| __DATA_CONST.__const _kCTIdentityAnonymousUserName
|| __DATA_CONST.__const _kCTIndicatorRadioTransmitNotification
|| __DATA_CONST.__const _kCTIndicatorVoiceMailSubInstance
|| __DATA_CONST.__const _kCTIndicatorsBeginStateDumpNotification
|| __DATA_CONST.__const _kCTIndicatorsDstUpdateDstIsInEffect
|| __DATA_CONST.__const _kCTIndicatorsDstUpdateNotification
|| __DATA_CONST.__const _kCTIndicatorsEndStateDumpNotification
|| __DATA_CONST.__const _kCTIndicatorsGradedSignalStrength
|| __DATA_CONST.__const _kCTIndicatorsRawSignalStrength
|| __DATA_CONST.__const _kCTIndicatorsSUPLINITNotification
|| __DATA_CONST.__const _kCTIndicatorsSUPLINITPayload
|| __DATA_CONST.__const _kCTIndicatorsSignalStrength
|| __DATA_CONST.__const _kCTIndicatorsSignalStrengthDisplayValue
|| __DATA_CONST.__const _kCTIndicatorsSignalStrengthMaxDisplayValue
|| __DATA_CONST.__const _kCTIndicatorsSignalStrengthNotification
|| __DATA_CONST.__const _kCTIndicatorsStateDumpFolderPrefix
|| __DATA_CONST.__const _kCTIndicatorsStateDumpLogFilter
|| __DATA_CONST.__const _kCTIndicatorsStateDumpReason
|| __DATA_CONST.__const _kCTIndicatorsStateSnapshotFolderPath
|| __DATA_CONST.__const _kCTIndicatorsTimeUpdateAbsoluteTime
|| __DATA_CONST.__const _kCTIndicatorsTimeUpdateNotification
|| __DATA_CONST.__const _kCTIndicatorsTimeUpdateTimeZoneOffset
|| __DATA_CONST.__const _kCTIndicatorsUnconditionalCallForwarding
|| __DATA_CONST.__const _kCTIndicatorsUnconditionalCallForwardingNotification
|| __DATA_CONST.__const _kCTIndicatorsVoiceMailAvailable
|| __DATA_CONST.__const _kCTIndicatorsVoiceMailCount
|| __DATA_CONST.__const _kCTIndicatorsVoiceMailIsMWI
|| __DATA_CONST.__const _kCTIndicatorsVoiceMailIsNetworkOriginated
|| __DATA_CONST.__const _kCTIndicatorsVoiceMailNotification
|| __DATA_CONST.__const _kCTIndicatorsVoiceMailURL
|| __DATA_CONST.__const _kCTLTEWithCDRXStateKey
|| __DATA_CONST.__const _kCTLTEWithCDRXStateOff
|| __DATA_CONST.__const _kCTLTEWithCDRXStateOn
|| __DATA_CONST.__const _kCTLTEWithCDRXStateUnknown
|| __DATA_CONST.__const _kCTLogChannelCommand_EurekaTriggerHWLoggingCommit
|| __DATA_CONST.__const _kCTLogChannelCommand_EurekaTriggerHWLoggingCommitOnEnterLowPower
|| __DATA_CONST.__const _kCTLogChannelCommand_EurekaTriggerHWLoggingCommitOnExitLowPower
|| __DATA_CONST.__const _kCTLogChannelCommand_GetCachedLogs
|| __DATA_CONST.__const _kCTLogChannelCommand_GetTechnology
|| __DATA_CONST.__const _kCTLogChannelCommand_SetCtExtraCodes
|| __DATA_CONST.__const _kCTLogChannelCommand_SetEurekaEventCodes
|| __DATA_CONST.__const _kCTLogChannelCommand_SetEurekaHWLoggingIntervalMS
|| __DATA_CONST.__const _kCTLogChannelCommand_SetEurekaHWLoggingLevel
|| __DATA_CONST.__const _kCTLogChannelCommand_SetEurekaLogCodes
|| __DATA_CONST.__const _kCTLogChannelCommand_SetMaxSendWindowSeconds
|| __DATA_CONST.__const _kCTLogChannelCommand_SetSendTimeoutBehavior
|| __DATA_CONST.__const _kCTLogChannelCommand_SetState
|| __DATA_CONST.__const _kCTLogChannelSendTimeoutBehavior_Close
|| __DATA_CONST.__const _kCTLogChannelSendTimeoutBehavior_Drop
|| __DATA_CONST.__const _kCTLogChannelState_Cached
|| __DATA_CONST.__const _kCTLogChannelState_OnDemand
|| __DATA_CONST.__const _kCTLogChannelState_Stopped
|| __DATA_CONST.__const _kCTLogChannelState_Streaming
|| __DATA_CONST.__const _kCTLogChannelTechnology_Eureka
|| __DATA_CONST.__const _kCTLogChannelTechnology_Eureka_CDMA
|| __DATA_CONST.__const _kCTLogChannelTechnology_Eureka_GSM
|| __DATA_CONST.__const _kCTLogChannelTechnology_Eureka_LTE
|| __DATA_CONST.__const _kCTLogChannelTechnology_Eureka_UTRAN2
|| __DATA_CONST.__const _kCTLogChannelTechnology_Eureka_Unknown
|| __DATA_CONST.__const _kCTLogChannelTechnology_IFX
|| __DATA_CONST.__const _kCTLogsStartProcessingNotification
|| __DATA_CONST.__const _kCTLogsStopProcessingNotification
|| __DATA_CONST.__const _kCTMMSConfigurationChangeNotification
|| __DATA_CONST.__const _kCTMMSConfiguredKey
|| __DATA_CONST.__const _kCTMaxThroughputPercentageLTE
|| __DATA_CONST.__const _kCTMaxThroughputPercentageUTRAN3
|| __DATA_CONST.__const _kCTMaxThroughputPercentageUnknownTech3
|| __DATA_CONST.__const _kCTMaxThroughputPercentageUnknownTech4
|| __DATA_CONST.__const _kCTMaxThroughputPercentageUnknownTech5
|| __DATA_CONST.__const _kCTMaxThroughputPercentageUnknownTech6
|| __DATA_CONST.__const _kCTMaxThroughputPercentageUnknownTech7
|| __DATA_CONST.__const _kCTMaxTransmitPowerPercentage2G
|| __DATA_CONST.__const _kCTMaxTransmitPowerPercentageC2K
|| __DATA_CONST.__const _kCTMaxTransmitPowerPercentageUMTS
|| __DATA_CONST.__const _kCTMaxTransmitPowerPercentageUTRAN2
|| __DATA_CONST.__const _kCTMessageDatabaseFullNotification
|| __DATA_CONST.__const _kCTMessageDatabaseFullPreference
|| __DATA_CONST.__const _kCTMessageDeliveryStatusKey
|| __DATA_CONST.__const _kCTMessageIdKey
|| __DATA_CONST.__const _kCTMessageReceiveDeferredNotification
|| __DATA_CONST.__const _kCTMessageReceivedNotification
|| __DATA_CONST.__const _kCTMessageReplaceReceivedNotification
|| __DATA_CONST.__const _kCTMessageSendBytesKey
|| __DATA_CONST.__const _kCTMessageSendErrorKey
|| __DATA_CONST.__const _kCTMessageSendErrorNotification
|| __DATA_CONST.__const _kCTMessageSendModemErrorKey
|| __DATA_CONST.__const _kCTMessageSendProgressNotification
|| __DATA_CONST.__const _kCTMessageSendTotalBytesKey
|| __DATA_CONST.__const _kCTMessageSentNotification
|| __DATA_CONST.__const _kCTMessageTypeKey
|| __DATA_CONST.__const _kCTMobileEquipmentInfo1xIMSI
|| __DATA_CONST.__const _kCTMobileEquipmentInfoBaseId
|| __DATA_CONST.__const _kCTMobileEquipmentInfoBaseProfile
|| __DATA_CONST.__const _kCTMobileEquipmentInfoBaseVersion
|| __DATA_CONST.__const _kCTMobileEquipmentInfoCSN
|| __DATA_CONST.__const _kCTMobileEquipmentInfoCampedCountry
|| __DATA_CONST.__const _kCTMobileEquipmentInfoCarrierName
|| __DATA_CONST.__const _kCTMobileEquipmentInfoCurrentMobileId
|| __DATA_CONST.__const _kCTMobileEquipmentInfoCurrentSubscriberId
|| __DATA_CONST.__const _kCTMobileEquipmentInfoDisplayCSN
|| __DATA_CONST.__const _kCTMobileEquipmentInfoERIVersion
|| __DATA_CONST.__const _kCTMobileEquipmentInfoEUIMID
|| __DATA_CONST.__const _kCTMobileEquipmentInfoEffectiveICCID
|| __DATA_CONST.__const _kCTMobileEquipmentInfoICCID
|| __DATA_CONST.__const _kCTMobileEquipmentInfoIMEI
|| __DATA_CONST.__const _kCTMobileEquipmentInfoIMSI
|| __DATA_CONST.__const _kCTMobileEquipmentInfoMEID
|| __DATA_CONST.__const _kCTMobileEquipmentInfoMIN
|| __DATA_CONST.__const _kCTMobileEquipmentInfoNAI
|| __DATA_CONST.__const _kCTMobileEquipmentInfoPRIVersion
|| __DATA_CONST.__const _kCTMobileEquipmentInfoPRLVersion
|| __DATA_CONST.__const _kCTMobileEquipmentInfoSlotId
|| __DATA_CONST.__const _kCTModemErrorCode
|| __DATA_CONST.__const _kCTNewCarrierChangeNotification
|| __DATA_CONST.__const _kCTNewOperatorChangeNotification
|| __DATA_CONST.__const _kCTOtaspAkeyExchanged
|| __DATA_CONST.__const _kCTOtaspCommitted
|| __DATA_CONST.__const _kCTOtaspImsiDownloaded
|| __DATA_CONST.__const _kCTOtaspMdnDownloaded
|| __DATA_CONST.__const _kCTOtaspNamDownloaded
|| __DATA_CONST.__const _kCTOtaspOtapaAborted
|| __DATA_CONST.__const _kCTOtaspOtapaStarted
|| __DATA_CONST.__const _kCTOtaspOtapaStopped
|| __DATA_CONST.__const _kCTOtaspPrlDownloaded
|| __DATA_CONST.__const _kCTOtaspSpcRetriesExceeded
|| __DATA_CONST.__const _kCTOtaspSplUnlocked
|| __DATA_CONST.__const _kCTOtaspSsdUpdated
|| __DATA_CONST.__const _kCTOtaspStatus
|| __DATA_CONST.__const _kCTOtaspStatusChangeNotification
|| __DATA_CONST.__const _kCTOtaspUnknown
|| __DATA_CONST.__const _kCTPerAppNetworkDataAccessPolicyChangedNotification
|| __DATA_CONST.__const _kCTPhoneBookAltNumberKey
|| __DATA_CONST.__const _kCTPhoneBookAltTextKey
|| __DATA_CONST.__const _kCTPhoneBookEmailKey
|| __DATA_CONST.__const _kCTPhoneBookErrorNotification
|| __DATA_CONST.__const _kCTPhoneBookFetchNotification
|| __DATA_CONST.__const _kCTPhoneBookGroupKey
|| __DATA_CONST.__const _kCTPhoneBookHiddenKey
|| __DATA_CONST.__const _kCTPhoneBookNameKey
|| __DATA_CONST.__const _kCTPhoneBookNumberKey
|| __DATA_CONST.__const _kCTPhoneBookSelectedNotification
|| __DATA_CONST.__const _kCTPhoneBookSlotKey
|| __DATA_CONST.__const _kCTPhoneBookWriteNotification
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationAttemptCountKey
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationCookieKey
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationImsiKey
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationNumberKey
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationRequest
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationRequestFinishedNotification
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationRequestResultKey
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationResponse
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationResponseNotification
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationResponseStatusHTTPFailed
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationResponseStatusKey
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationResponseStatusSMSFailed
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationResponseStatusSuccess
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationResponseTimeout
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationSignatureKey
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationStateIMSI
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationStateNotification
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationStatePLMN
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationStatePhoneNumber
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationStateRegisteredKey
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationTokenKey
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationTypeKey
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationUDIDKey
|| __DATA_CONST.__const _kCTPhoneNumberRegistrationVersionKey
|| __DATA_CONST.__const _kCTPlmnChangedNotification
|| __DATA_CONST.__const _kCTPostponementInfo
|| __DATA_CONST.__const _kCTPostponementInfoAvailable
|| __DATA_CONST.__const _kCTPostponementInfoBasebandChipID
|| __DATA_CONST.__const _kCTPostponementInfoBasebandFactoryKeyHash
|| __DATA_CONST.__const _kCTPostponementInfoBasebandKeyHash
|| __DATA_CONST.__const _kCTPostponementInfoBasebandSerialNumber
|| __DATA_CONST.__const _kCTPostponementInfoBootstrapVersion
|| __DATA_CONST.__const _kCTPostponementInfoCarrierID
|| __DATA_CONST.__const _kCTPostponementInfoGID1
|| __DATA_CONST.__const _kCTPostponementInfoGID2
|| __DATA_CONST.__const _kCTPostponementInfoICCID
|| __DATA_CONST.__const _kCTPostponementInfoIMEI
|| __DATA_CONST.__const _kCTPostponementInfoIMSI
|| __DATA_CONST.__const _kCTPostponementInfoIMSIOverride
|| __DATA_CONST.__const _kCTPostponementInfoMEID
|| __DATA_CONST.__const _kCTPostponementInfoMultiphaseSetup
|| __DATA_CONST.__const _kCTPostponementInfoPRIVersion
|| __DATA_CONST.__const _kCTPostponementInfoPRLName
|| __DATA_CONST.__const _kCTPostponementInfoServiceProvisioningState
|| __DATA_CONST.__const _kCTPostponementInfoSim1IsBootstrap
|| __DATA_CONST.__const _kCTPostponementInfoSim1IsEmbedded
|| __DATA_CONST.__const _kCTPostponementInfoSim2GID1
|| __DATA_CONST.__const _kCTPostponementInfoSim2GID2
|| __DATA_CONST.__const _kCTPostponementInfoSim2ICCID
|| __DATA_CONST.__const _kCTPostponementInfoSim2IMEI
|| __DATA_CONST.__const _kCTPostponementInfoSim2IMSI
|| __DATA_CONST.__const _kCTPostponementInfoSim2IsBootstrap
|| __DATA_CONST.__const _kCTPostponementInfoSim2IsEmbedded
|| __DATA_CONST.__const _kCTPostponementInfoSim2MEID
|| __DATA_CONST.__const _kCTPostponementInfoSimProvisionedState
|| __DATA_CONST.__const _kCTPostponementInfoTicketVersion
|| __DATA_CONST.__const _kCTPostponementInfoUniqueID
|| __DATA_CONST.__const _kCTPostponementStatus
|| __DATA_CONST.__const _kCTPostponementStatusActivated
|| __DATA_CONST.__const _kCTPostponementStatusChangeNotification
|| __DATA_CONST.__const _kCTPostponementStatusError
|| __DATA_CONST.__const _kCTPostponementStatusErrorDefaultIMEI
|| __DATA_CONST.__const _kCTPostponementStatusErrorMEIDNotProvisioned
|| __DATA_CONST.__const _kCTPostponementStatusErrorReason
|| __DATA_CONST.__const _kCTPostponementStatusErrorSIMNotPresent
|| __DATA_CONST.__const _kCTPostponementStatusErrorUnknown
|| __DATA_CONST.__const _kCTPostponementStatusNotReady
|| __DATA_CONST.__const _kCTPostponementStatusReady
|| __DATA_CONST.__const _kCTPostponementStatusRejected
|| __DATA_CONST.__const _kCTPowerRadioModuleDeadNotification
|| __DATA_CONST.__const _kCTPowerRadioModuleEnterLowPowerNotification
|| __DATA_CONST.__const _kCTPowerRadioModuleEnteredLowPowerNotification
|| __DATA_CONST.__const _kCTPowerRadioModuleExitLowPowerNotification
|| __DATA_CONST.__const _kCTPowerRadioModuleNotReadyErrorNotification
|| __DATA_CONST.__const _kCTPowerRadioModuleOffErrorNotification
|| __DATA_CONST.__const _kCTPowerRadioModuleReadyNotification
|| __DATA_CONST.__const _kCTProjectBuildReason
|| __DATA_CONST.__const _kCTProjectBuildRevision
|| __DATA_CONST.__const _kCTProjectVersion
|| __DATA_CONST.__const _kCTProvisioningSecondaryApplicationIdentifier
|| __DATA_CONST.__const _kCTProvisioningStatus
|| __DATA_CONST.__const _kCTProvisioningStatusInProcess
|| __DATA_CONST.__const _kCTProvisioningStatusNotAllowed
|| __DATA_CONST.__const _kCTProvisioningStatusNotSubscribed
|| __DATA_CONST.__const _kCTProvisioningStatusSubscribed
|| __DATA_CONST.__const _kCTProvisioningURL
|| __DATA_CONST.__const _kCTPullCallIsPossible
|| __DATA_CONST.__const _kCTPullCallIsPossibleChangeNotification
|| __DATA_CONST.__const _kCTQaulityOfServiceFlowType
|| __DATA_CONST.__const _kCTQualityOfServiceCallType
|| __DATA_CONST.__const _kCTQualityOfServiceDestinationIP
|| __DATA_CONST.__const _kCTQualityOfServiceDestinationPort
|| __DATA_CONST.__const _kCTQualityOfServiceDropOperation
|| __DATA_CONST.__const _kCTQualityOfServiceFamily
|| __DATA_CONST.__const _kCTQualityOfServiceFamilyIPv4
|| __DATA_CONST.__const _kCTQualityOfServiceFamilyIPv6
|| __DATA_CONST.__const _kCTQualityOfServiceFlowAudio
|| __DATA_CONST.__const _kCTQualityOfServiceFlowIdentifier
|| __DATA_CONST.__const _kCTQualityOfServiceFlowStatus
|| __DATA_CONST.__const _kCTQualityOfServiceFlowStatusActivated
|| __DATA_CONST.__const _kCTQualityOfServiceFlowStatusChangeNotification
|| __DATA_CONST.__const _kCTQualityOfServiceFlowStatusGone
|| __DATA_CONST.__const _kCTQualityOfServiceFlowStatusSuspended
|| __DATA_CONST.__const _kCTQualityOfServiceFlowStatusUnknown
|| __DATA_CONST.__const _kCTQualityOfServiceFlowVideo
|| __DATA_CONST.__const _kCTQualityOfServiceKeyFrameTimestamp
|| __DATA_CONST.__const _kCTQualityOfServiceOffsetBytes
|| __DATA_CONST.__const _kCTQualityOfServicePayloadType
|| __DATA_CONST.__const _kCTQualityOfServiceSourceIP
|| __DATA_CONST.__const _kCTQualityOfServiceSourcePort
|| __DATA_CONST.__const _kCTQualityOfServiceTimestampValue
|| __DATA_CONST.__const _kCTQualityOfServiceTransactionID
|| __DATA_CONST.__const _kCTQualityOfServiceUniqueTag
|| __DATA_CONST.__const _kCTRadioBasebandOperatingModeCampOnly
|| __DATA_CONST.__const _kCTRadioBasebandOperatingModeChangedNotification
|| __DATA_CONST.__const _kCTRadioBasebandOperatingModeKey
|| __DATA_CONST.__const _kCTRadioBasebandOperatingModeLowPower
|| __DATA_CONST.__const _kCTRadioBasebandOperatingModeNone
|| __DATA_CONST.__const _kCTRadioBasebandOperatingModeOff
|| __DATA_CONST.__const _kCTRadioBasebandOperatingModeOnline
|| __DATA_CONST.__const _kCTRadioBasebandOperatingModeReasonKey
|| __DATA_CONST.__const _kCTRadioBasebandReasonKey
|| __DATA_CONST.__const _kCTRadioBasebandTelephonyReasonKey
|| __DATA_CONST.__const _kCTRadioEnhancedLinkQualityNotification
|| __DATA_CONST.__const _kCTRadioEnhancedLinkQualityNotificationData
|| __DATA_CONST.__const _kCTRadioEnhancedLinkQualityNotificationType
|| __DATA_CONST.__const _kCTRadioEnhancedLinkQualitySupportedMetricsNotification
|| __DATA_CONST.__const _kCTRadioEnhancedLinkQualitySupportsDataStall
|| __DATA_CONST.__const _kCTRadioEnhancedLinkQualitySupportsDataTransferTime
|| __DATA_CONST.__const _kCTRadioEnhancedLinkQualitySupportsHighThroughput
|| __DATA_CONST.__const _kCTRadioEnhancedLinkQualitySupportsLinkPowerCost
|| __DATA_CONST.__const _kCTRadioEnhancedLinkQualitySupportsLinkQualityFingerprint
|| __DATA_CONST.__const _kCTRadioEnhancedLinkQualitySupportsLinkState
|| __DATA_CONST.__const _kCTRadioEnhancedLinkQualitySupportsNRServingCellType
|| __DATA_CONST.__const _kCTRadioEnhancedLinkQualitySupportsTrafficClass
|| __DATA_CONST.__const _kCTRadioEnhancedVoiceLinkQualityKey
|| __DATA_CONST.__const _kCTRadioMaxPower
|| __DATA_CONST.__const _kCTRadioModuleUplinkBandwidthValue
|| __DATA_CONST.__const _kCTRadioModuleUplinkChangedNotification
|| __DATA_CONST.__const _kCTRadioModuleUplinkFrequencyValue
|| __DATA_CONST.__const _kCTRadioRequireUserConfirmationToEnableKey
|| __DATA_CONST.__const _kCTRadioStateChangedNotification
|| __DATA_CONST.__const _kCTRadioStateKey
|| __DATA_CONST.__const _kCTRadioTestPayload
|| __DATA_CONST.__const _kCTRadioTransmitDCHStatus
|| __DATA_CONST.__const _kCTRadioTransmitSpeed
|| __DATA_CONST.__const _kCTRadioTransmitSpeedHigh
|| __DATA_CONST.__const _kCTRadioTransmitSpeedLow
|| __DATA_CONST.__const _kCTRadioTransmitSpeedMedium
|| __DATA_CONST.__const _kCTRadioTransmitSpeedNotification
|| __DATA_CONST.__const _kCTRadioTransmitSpeedUnknown
|| __DATA_CONST.__const _kCTRadioTransmitUTBFStatus
|| __DATA_CONST.__const _kCTRadioUseLoggingProfileKey
|| __DATA_CONST.__const _kCTRadioVoiceLinkQualityKey
|| __DATA_CONST.__const _kCTRadioVoiceLinkQualityNotification
|| __DATA_CONST.__const _kCTRegistrationAbbreviatedOperatorName
|| __DATA_CONST.__const _kCTRegistrationBandActive
|| __DATA_CONST.__const _kCTRegistrationBandSupported
|| __DATA_CONST.__const _kCTRegistrationC2KBaseId
|| __DATA_CONST.__const _kCTRegistrationC2KBaseLat
|| __DATA_CONST.__const _kCTRegistrationC2KBaseLong
|| __DATA_CONST.__const _kCTRegistrationC2KNetworkId
|| __DATA_CONST.__const _kCTRegistrationC2KSystemId
|| __DATA_CONST.__const _kCTRegistrationCauseCode
|| __DATA_CONST.__const _kCTRegistrationCauseCodeNotification
|| __DATA_CONST.__const _kCTRegistrationCellChangedNotification
|| __DATA_CONST.__const _kCTRegistrationCellId
|| __DATA_CONST.__const _kCTRegistrationCellularDataPlanAccountURL
|| __DATA_CONST.__const _kCTRegistrationCellularDataPlanActivateFailedNotification
|| __DATA_CONST.__const _kCTRegistrationCellularDataPlanHideIndicatorNotification
|| __DATA_CONST.__const _kCTRegistrationCellularDataPlanNewAccount
|| __DATA_CONST.__const _kCTRegistrationChangedDueToSimRemoval
|| __DATA_CONST.__const _kCTRegistrationCustomerServiceProfileUpdateNotification
|| __DATA_CONST.__const _kCTRegistrationDataActivateFailedNotification
|| __DATA_CONST.__const _kCTRegistrationDataActivateFailure
|| __DATA_CONST.__const _kCTRegistrationDataActivateFailureString
|| __DATA_CONST.__const _kCTRegistrationDataActivationPreventionNotSupported
|| __DATA_CONST.__const _kCTRegistrationDataActivationPreventionReason
|| __DATA_CONST.__const _kCTRegistrationDataActivationPreventionReasonIntlRoamingOff
|| __DATA_CONST.__const _kCTRegistrationDataActivationPreventionReasonOff
|| __DATA_CONST.__const _kCTRegistrationDataActivationPreventionReasonSilentIntlRoamingOff
|| __DATA_CONST.__const _kCTRegistrationDataActivationWasForMMS
|| __DATA_CONST.__const _kCTRegistrationDataActive
|| __DATA_CONST.__const _kCTRegistrationDataAttachOverride
|| __DATA_CONST.__const _kCTRegistrationDataAttached
|| __DATA_CONST.__const _kCTRegistrationDataConnectionServices
|| __DATA_CONST.__const _kCTRegistrationDataContextID
|| __DATA_CONST.__const _kCTRegistrationDataContextSuspended
|| __DATA_CONST.__const _kCTRegistrationDataFamilyActive
|| __DATA_CONST.__const _kCTRegistrationDataFamilyInactive
|| __DATA_CONST.__const _kCTRegistrationDataHideIndicator
|| __DATA_CONST.__const _kCTRegistrationDataIndicator
|| __DATA_CONST.__const _kCTRegistrationDataIndicator2G
|| __DATA_CONST.__const _kCTRegistrationDataIndicator2_5G
|| __DATA_CONST.__const _kCTRegistrationDataIndicator3G
|| __DATA_CONST.__const _kCTRegistrationDataIndicator3_5G
|| __DATA_CONST.__const _kCTRegistrationDataIndicator3_75G
|| __DATA_CONST.__const _kCTRegistrationDataIndicator4G
|| __DATA_CONST.__const _kCTRegistrationDataIndicator4G_5GE
|| __DATA_CONST.__const _kCTRegistrationDataIndicator4G_LTEA
|| __DATA_CONST.__const _kCTRegistrationDataIndicator4G_LTEPlus
|| __DATA_CONST.__const _kCTRegistrationDataIndicator5G
|| __DATA_CONST.__const _kCTRegistrationDataIndicator5G_Plus
|| __DATA_CONST.__const _kCTRegistrationDataIndicator5G_UC
|| __DATA_CONST.__const _kCTRegistrationDataIndicator5G_Uwb
|| __DATA_CONST.__const _kCTRegistrationDataIndicator6G
|| __DATA_CONST.__const _kCTRegistrationDataIndicator7G
|| __DATA_CONST.__const _kCTRegistrationDataIndicator8G
|| __DATA_CONST.__const _kCTRegistrationDataIndicator9G
|| __DATA_CONST.__const _kCTRegistrationDataIndicatorH_Plus
|| __DATA_CONST.__const _kCTRegistrationDataIndicatorNone
|| __DATA_CONST.__const _kCTRegistrationDataIndicatorOverride
|| __DATA_CONST.__const _kCTRegistrationDataRate2G
|| __DATA_CONST.__const _kCTRegistrationDataRate3G
|| __DATA_CONST.__const _kCTRegistrationDataRate4G
|| __DATA_CONST.__const _kCTRegistrationDataRate5G
|| __DATA_CONST.__const _kCTRegistrationDataRate6G
|| __DATA_CONST.__const _kCTRegistrationDataRate7G
|| __DATA_CONST.__const _kCTRegistrationDataRate8G
|| __DATA_CONST.__const _kCTRegistrationDataRate9G
|| __DATA_CONST.__const _kCTRegistrationDataRateUnknown
|| __DATA_CONST.__const _kCTRegistrationDataStatus
|| __DATA_CONST.__const _kCTRegistrationDataStatusAttached
|| __DATA_CONST.__const _kCTRegistrationDataStatusAttachedAndActive
|| __DATA_CONST.__const _kCTRegistrationDataStatusChangedNotification
|| __DATA_CONST.__const _kCTRegistrationDataStatusInternationalRoaming
|| __DATA_CONST.__const _kCTRegistrationDataStatusUnattached
|| __DATA_CONST.__const _kCTRegistrationDisplayStatus
|| __DATA_CONST.__const _kCTRegistrationDisplayStatusChangedNotification
|| __DATA_CONST.__const _kCTRegistrationIMSContext
|| __DATA_CONST.__const _kCTRegistrationIMSContextCellular
|| __DATA_CONST.__const _kCTRegistrationIMSContextWiFi
|| __DATA_CONST.__const _kCTRegistrationIMSTransportType
|| __DATA_CONST.__const _kCTRegistrationIMSTransportTypeCellular
|| __DATA_CONST.__const _kCTRegistrationIMSTransportTypeWiFi
|| __DATA_CONST.__const _kCTRegistrationIStatus
|| __DATA_CONST.__const _kCTRegistrationIStatus1
|| __DATA_CONST.__const _kCTRegistrationIStatus2
|| __DATA_CONST.__const _kCTRegistrationInHomeCountry
|| __DATA_CONST.__const _kCTRegistrationIsFemtoCell
|| __DATA_CONST.__const _kCTRegistrationIsForcedRegisteredHome
|| __DATA_CONST.__const _kCTRegistrationLac
|| __DATA_CONST.__const _kCTRegistrationMobileCountryCode
|| __DATA_CONST.__const _kCTRegistrationMobileNetworkCode
|| __DATA_CONST.__const _kCTRegistrationNetworkCode
|| __DATA_CONST.__const _kCTRegistrationNetworkList
|| __DATA_CONST.__const _kCTRegistrationNetworkListAvailableNotification
|| __DATA_CONST.__const _kCTRegistrationNetworkListComplete
|| __DATA_CONST.__const _kCTRegistrationNetworkListFailedNotification
|| __DATA_CONST.__const _kCTRegistrationNetworkName
|| __DATA_CONST.__const _kCTRegistrationNetworkSelectionMenu
|| __DATA_CONST.__const _kCTRegistrationNetworkSelectionModeAutomatic
|| __DATA_CONST.__const _kCTRegistrationNetworkSelectionModeDisabled
|| __DATA_CONST.__const _kCTRegistrationNetworkSelectionModeManual
|| __DATA_CONST.__const _kCTRegistrationNetworkSelectionStateChosen
|| __DATA_CONST.__const _kCTRegistrationNetworkSelectionStateIdle
|| __DATA_CONST.__const _kCTRegistrationNetworkSelectionStateJoinedOnManual
|| __DATA_CONST.__const _kCTRegistrationNetworkSelectionStateJoining
|| __DATA_CONST.__const _kCTRegistrationNetworkSelectionStateScanned
|| __DATA_CONST.__const _kCTRegistrationNetworkSelectionStateScanning
|| __DATA_CONST.__const _kCTRegistrationNetworkSelectionStateUnknown
|| __DATA_CONST.__const _kCTRegistrationNewServingNetworkNotification
|| __DATA_CONST.__const _kCTRegistrationOperatorName
|| __DATA_CONST.__const _kCTRegistrationOperatorNameChangedNotification
|| __DATA_CONST.__const _kCTRegistrationRATSelection0
|| __DATA_CONST.__const _kCTRegistrationRATSelection1
|| __DATA_CONST.__const _kCTRegistrationRATSelection10
|| __DATA_CONST.__const _kCTRegistrationRATSelection11
|| __DATA_CONST.__const _kCTRegistrationRATSelection12
|| __DATA_CONST.__const _kCTRegistrationRATSelection13
|| __DATA_CONST.__const _kCTRegistrationRATSelection14
|| __DATA_CONST.__const _kCTRegistrationRATSelection2
|| __DATA_CONST.__const _kCTRegistrationRATSelection3
|| __DATA_CONST.__const _kCTRegistrationRATSelection4
|| __DATA_CONST.__const _kCTRegistrationRATSelection5
|| __DATA_CONST.__const _kCTRegistrationRATSelection6
|| __DATA_CONST.__const _kCTRegistrationRATSelection7
|| __DATA_CONST.__const _kCTRegistrationRATSelection8
|| __DATA_CONST.__const _kCTRegistrationRATSelection9
|| __DATA_CONST.__const _kCTRegistrationRATSelectionUnknown
|| __DATA_CONST.__const _kCTRegistrationRadioAccessTechnology
|| __DATA_CONST.__const _kCTRegistrationRadioAccessTechnologyCDMA1x
|| __DATA_CONST.__const _kCTRegistrationRadioAccessTechnologyCDMAEVDO
|| __DATA_CONST.__const _kCTRegistrationRadioAccessTechnologyCDMAHybrid
|| __DATA_CONST.__const _kCTRegistrationRadioAccessTechnologyGSM
|| __DATA_CONST.__const _kCTRegistrationRadioAccessTechnologyGSMCompact
|| __DATA_CONST.__const _kCTRegistrationRadioAccessTechnologyLTE
|| __DATA_CONST.__const _kCTRegistrationRadioAccessTechnologyNR
|| __DATA_CONST.__const _kCTRegistrationRadioAccessTechnologyUTRAN
|| __DATA_CONST.__const _kCTRegistrationRadioAccessTechnologyUTRAN2
|| __DATA_CONST.__const _kCTRegistrationRadioAccessTechnologyUnknown
|| __DATA_CONST.__const _kCTRegistrationRadioAccessTechnologyeHRPD
|| __DATA_CONST.__const _kCTRegistrationStatus
|| __DATA_CONST.__const _kCTRegistrationStatusChangedNotification
|| __DATA_CONST.__const _kCTRegistrationStatusDenied
|| __DATA_CONST.__const _kCTRegistrationStatusEmergencyOnly
|| __DATA_CONST.__const _kCTRegistrationStatusNotRegistered
|| __DATA_CONST.__const _kCTRegistrationStatusRegisteredHome
|| __DATA_CONST.__const _kCTRegistrationStatusRegisteredRoaming
|| __DATA_CONST.__const _kCTRegistrationStatusSearching
|| __DATA_CONST.__const _kCTRegistrationStatusUnknown
|| __DATA_CONST.__const _kCTRegistrationSuppressRatIndicator
|| __DATA_CONST.__const _kCTReliableNetworkFallbackToCellularChangedNotification
|| __DATA_CONST.__const _kCTReliableNetworkFallbackToCellularFeatureEnabledKey
|| __DATA_CONST.__const _kCTReliableNetworkFallbackToCellularUserPreferenceKey
|| __DATA_CONST.__const _kCTRemoteDevice
|| __DATA_CONST.__const _kCTRestrictedForegroundResumeNotification
|| __DATA_CONST.__const _kCTReturnUnknownError
|| __DATA_CONST.__const _kCTSIMSupportIntegratedCircuitCardIdentity
|| __DATA_CONST.__const _kCTSIMSupportMobileSubscriberIdentity
|| __DATA_CONST.__const _kCTSIMSupportSIMNewInsertionNotification
|| __DATA_CONST.__const _kCTSIMSupportSIMPINEntryAttemptsRemainingCount
|| __DATA_CONST.__const _kCTSIMSupportSIMPINEntryErrorNotification
|| __DATA_CONST.__const _kCTSIMSupportSIMPUKEntryAttemptsRemainingCount
|| __DATA_CONST.__const _kCTSIMSupportSIMPUKEntryErrorNotification
|| __DATA_CONST.__const _kCTSIMSupportSIMStatus
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusChangeNotification
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusCorporateLocked
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusInserted
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusMemoryFailure
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusNetworkLocked
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusNotInserted
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusNotReady
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusOperatorLocked
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusOperatorSubsetLocked
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusPINLocked
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusPUKLocked
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusPermanentlyLocked
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusReady
|| __DATA_CONST.__const _kCTSIMSupportSIMStatusServiceProviderLocked
|| __DATA_CONST.__const _kCTSIMSupportSIMTrayAbsent
|| __DATA_CONST.__const _kCTSIMSupportSIMTrayInsertedNoSIM
|| __DATA_CONST.__const _kCTSIMSupportSIMTrayInsertedWithSIM
|| __DATA_CONST.__const _kCTSIMSupportSIMTrayStatusUnknown
|| __DATA_CONST.__const _kCTSIMToolkitCallSetUpInCallIcon
|| __DATA_CONST.__const _kCTSIMToolkitCallSetUpInCallText
|| __DATA_CONST.__const _kCTSIMToolkitCallSetUpNotification
|| __DATA_CONST.__const _kCTSIMToolkitCallSetUpPhoneNumber
|| __DATA_CONST.__const _kCTSIMToolkitCallSetUpPriority
|| __DATA_CONST.__const _kCTSIMToolkitCallSetUpPriorityHigh
|| __DATA_CONST.__const _kCTSIMToolkitCallSetUpPriorityLow
|| __DATA_CONST.__const _kCTSIMToolkitCallSetUpPriorityMedium
|| __DATA_CONST.__const _kCTSIMToolkitCallSetUpRedial
|| __DATA_CONST.__const _kCTSIMToolkitControlAllowed
|| __DATA_CONST.__const _kCTSIMToolkitControlCallNotification
|| __DATA_CONST.__const _kCTSIMToolkitControlModified
|| __DATA_CONST.__const _kCTSIMToolkitControlRejected
|| __DATA_CONST.__const _kCTSIMToolkitControlResult
|| __DATA_CONST.__const _kCTSIMToolkitControlSSNotification
|| __DATA_CONST.__const _kCTSIMToolkitControlUSSDNotification
|| __DATA_CONST.__const _kCTSIMToolkitDisplayListCount
|| __DATA_CONST.__const _kCTSIMToolkitDisplayListNotification
|| __DATA_CONST.__const _kCTSIMToolkitDisplayListStyle
|| __DATA_CONST.__const _kCTSIMToolkitDisplayListStyleMenu
|| __DATA_CONST.__const _kCTSIMToolkitDisplayListStylePicker
|| __DATA_CONST.__const _kCTSIMToolkitDisplayTextNotification
|| __DATA_CONST.__const _kCTSIMToolkitDisplayTextOrderOutBehavior
|| __DATA_CONST.__const _kCTSIMToolkitDisplayTextOrderOutBehaviorClose
|| __DATA_CONST.__const _kCTSIMToolkitDisplayTextOrderOutBehaviorSendOK
|| __DATA_CONST.__const _kCTSIMToolkitDisplayTextPriority
|| __DATA_CONST.__const _kCTSIMToolkitDisplayTextPriorityHigh
|| __DATA_CONST.__const _kCTSIMToolkitDisplayTextPriorityNormal
|| __DATA_CONST.__const _kCTSIMToolkitDisplayTextTerminalDelay
|| __DATA_CONST.__const _kCTSIMToolkitDisplayTextTerminalDelayDisabled
|| __DATA_CONST.__const _kCTSIMToolkitDisplayTextTerminalDelayEnabled
|| __DATA_CONST.__const _kCTSIMToolkitGetInputDefaultText
|| __DATA_CONST.__const _kCTSIMToolkitGetInputIsEditable
|| __DATA_CONST.__const _kCTSIMToolkitGetInputIsSecret
|| __DATA_CONST.__const _kCTSIMToolkitGetInputMaximumLength
|| __DATA_CONST.__const _kCTSIMToolkitGetInputMinimumLength
|| __DATA_CONST.__const _kCTSIMToolkitGetInputNotification
|| __DATA_CONST.__const _kCTSIMToolkitGetInputType
|| __DATA_CONST.__const _kCTSIMToolkitGetInputTypeBoolean
|| __DATA_CONST.__const _kCTSIMToolkitGetInputTypeDigits
|| __DATA_CONST.__const _kCTSIMToolkitGetInputTypeString
|| __DATA_CONST.__const _kCTSIMToolkitHelpAvailable
|| __DATA_CONST.__const _kCTSIMToolkitIcon
|| __DATA_CONST.__const _kCTSIMToolkitIdleTextNotification
|| __DATA_CONST.__const _kCTSIMToolkitLanguage
|| __DATA_CONST.__const _kCTSIMToolkitLanguageNotification
|| __DATA_CONST.__const _kCTSIMToolkitLocalInformationNotification
|| __DATA_CONST.__const _kCTSIMToolkitMenuItems
|| __DATA_CONST.__const _kCTSIMToolkitNoDisplay
|| __DATA_CONST.__const _kCTSIMToolkitNotificationResponseBack
|| __DATA_CONST.__const _kCTSIMToolkitNotificationResponseBusy
|| __DATA_CONST.__const _kCTSIMToolkitNotificationResponseCancelled
|| __DATA_CONST.__const _kCTSIMToolkitNotificationResponseHelp
|| __DATA_CONST.__const _kCTSIMToolkitNotificationResponseNotSupported
|| __DATA_CONST.__const _kCTSIMToolkitNotificationResponseRefused
|| __DATA_CONST.__const _kCTSIMToolkitNotificationResponseSuccess
|| __DATA_CONST.__const _kCTSIMToolkitNotificationResponseSuccessNoIcon
|| __DATA_CONST.__const _kCTSIMToolkitNotificationResponseTimeout
|| __DATA_CONST.__const _kCTSIMToolkitPlayTone
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneBusy
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneCallDropped
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneCallWaiting
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneCongestion
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneDial
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneDuration
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneError
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneGeneralBeep
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneNegativeAck
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneNotification
|| __DATA_CONST.__const _kCTSIMToolkitPlayTonePositiveAck
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneRadioPathAck
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneRinging
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneSMS
|| __DATA_CONST.__const _kCTSIMToolkitPlayToneUserRing
|| __DATA_CONST.__const _kCTSIMToolkitRequestUserAttentionNotification
|| __DATA_CONST.__const _kCTSIMToolkitSentDTMFNotification
|| __DATA_CONST.__const _kCTSIMToolkitSentSMSMessageNotification
|| __DATA_CONST.__const _kCTSIMToolkitSentSSNotification
|| __DATA_CONST.__const _kCTSIMToolkitSentSSString
|| __DATA_CONST.__const _kCTSIMToolkitSentUSSDNotification
|| __DATA_CONST.__const _kCTSIMToolkitSentUSSDString
|| __DATA_CONST.__const _kCTSIMToolkitSession
|| __DATA_CONST.__const _kCTSIMToolkitSessionCompleteNotification
|| __DATA_CONST.__const _kCTSIMToolkitSimSlot
|| __DATA_CONST.__const _kCTSIMToolkitText
|| __DATA_CONST.__const _kCTSIMToolkitTimeout
|| __DATA_CONST.__const _kCTSMSAppleSafetyAlertData
|| __DATA_CONST.__const _kCTSMSAppleSafetyAlertSupport
|| __DATA_CONST.__const _kCTSMSCellBroadcastAlertConfiguration
|| __DATA_CONST.__const _kCTSMSCellBroadcastAlertType
|| __DATA_CONST.__const _kCTSMSCellBroadcastBundleIdentifier
|| __DATA_CONST.__const _kCTSMSCellBroadcastEmergencyUserAlert
|| __DATA_CONST.__const _kCTSMSCellBroadcastString
|| __DATA_CONST.__const _kCTSMSCellBroadcastStringReceivedNotification
|| __DATA_CONST.__const _kCTSMSCellBroadcastTranslatedSound
|| __DATA_CONST.__const _kCTSMSCellBroadcastTranslatedText
|| __DATA_CONST.__const _kCTSMSCellBroadcastTranslatedTitle
|| __DATA_CONST.__const _kCTSMSClass0AddressString
|| __DATA_CONST.__const _kCTSMSClass0String
|| __DATA_CONST.__const _kCTSMSClass0StringReceivedNotification
|| __DATA_CONST.__const _kCTSMSDatabaseFullNotification
|| __DATA_CONST.__const _kCTSMSMessageReceivedNotification
|| __DATA_CONST.__const _kCTSMSMessageSendErrorNotificiation
|| __DATA_CONST.__const _kCTSMSMessageSentNotification
|| __DATA_CONST.__const _kCTSMSReadyState
|| __DATA_CONST.__const _kCTSMSReadyStateNotification
|| __DATA_CONST.__const _kCTSMSSignificantChangeNotification
|| __DATA_CONST.__const _kCTSMSTestMessageAddress
|| __DATA_CONST.__const _kCTSMSTestMessageBody
|| __DATA_CONST.__const _kCTSMSTestMessageReceivedNotification
|| __DATA_CONST.__const _kCTSPCUnlockSuccessfulNotification
|| __DATA_CONST.__const _kCTServiceProvisioningFailedNotification
|| __DATA_CONST.__const _kCTServiceProvisioningSimSlot
|| __DATA_CONST.__const _kCTServiceProvisioningStartedNotification
|| __DATA_CONST.__const _kCTServiceProvisioningSuccessfulNotification
|| __DATA_CONST.__const _kCTSetTxPowerAudioAlert
|| __DATA_CONST.__const _kCTSetTxPowerAudioMode
|| __DATA_CONST.__const _kCTSetTxPowerEnhancedMode
|| __DATA_CONST.__const _kCTSetTxPwrProxMotionAssistMode
|| __DATA_CONST.__const _kCTSettingCallBarringFacility
|| __DATA_CONST.__const _kCTSettingCallBarringFacilityAllIncoming
|| __DATA_CONST.__const _kCTSettingCallBarringFacilityAllIncomingServices
|| __DATA_CONST.__const _kCTSettingCallBarringFacilityAllOutgoing
|| __DATA_CONST.__const _kCTSettingCallBarringFacilityAllOutgoingServices
|| __DATA_CONST.__const _kCTSettingCallBarringFacilityAllServices
|| __DATA_CONST.__const _kCTSettingCallBarringFacilityIncomingNotOnSim
|| __DATA_CONST.__const _kCTSettingCallBarringFacilityIncomingWhileRoamingOutsideHomeCountry
|| __DATA_CONST.__const _kCTSettingCallBarringFacilityOutgoingInternational
|| __DATA_CONST.__const _kCTSettingCallBarringFacilityOutgoingInternationalExceptHomeCountry
|| __DATA_CONST.__const _kCTSettingCallCapabilitiesChangedNotification
|| __DATA_CONST.__const _kCTSettingCallClass
|| __DATA_CONST.__const _kCTSettingCallClassData
|| __DATA_CONST.__const _kCTSettingCallClassDataCircuitAsync
|| __DATA_CONST.__const _kCTSettingCallClassDataCircuitSync
|| __DATA_CONST.__const _kCTSettingCallClassFax
|| __DATA_CONST.__const _kCTSettingCallClassPADAccess
|| __DATA_CONST.__const _kCTSettingCallClassPacketAccess
|| __DATA_CONST.__const _kCTSettingCallClassShortMessageSerice
|| __DATA_CONST.__const _kCTSettingCallClassVoice
|| __DATA_CONST.__const _kCTSettingCallForwardingNoReplyTime
|| __DATA_CONST.__const _kCTSettingCallForwardingNumber
|| __DATA_CONST.__const _kCTSettingCallForwardingReason
|| __DATA_CONST.__const _kCTSettingCallForwardingReasonAll
|| __DATA_CONST.__const _kCTSettingCallForwardingReasonAllConditional
|| __DATA_CONST.__const _kCTSettingCallForwardingReasonMobileBusy
|| __DATA_CONST.__const _kCTSettingCallForwardingReasonNoReply
|| __DATA_CONST.__const _kCTSettingCallForwardingReasonNotReachable
|| __DATA_CONST.__const _kCTSettingCallForwardingReasonUnconditional
|| __DATA_CONST.__const _kCTSettingCallingLineIdRestriction
|| __DATA_CONST.__const _kCTSettingCallingLineIdRestrictionDisabled
|| __DATA_CONST.__const _kCTSettingCallingLineIdRestrictionEnabled
|| __DATA_CONST.__const _kCTSettingCallingLineIdRestrictionModifiable
|| __DATA_CONST.__const _kCTSettingCallingLineIdRestrictionModification
|| __DATA_CONST.__const _kCTSettingCallingLineIdRestrictionNetworkControlled
|| __DATA_CONST.__const _kCTSettingCallingLineIdRestrictionNotAvailable
|| __DATA_CONST.__const _kCTSettingCallingLineIdRestrictionNotModifiable
|| __DATA_CONST.__const _kCTSettingCallingLineIdRestrictionTemporarilyDisabled
|| __DATA_CONST.__const _kCTSettingCallingLineIdRestrictionTemporarilyEnabled
|| __DATA_CONST.__const _kCTSettingCallingLineIdRestrictionUnknown
|| __DATA_CONST.__const _kCTSettingCallingLinePresentation
|| __DATA_CONST.__const _kCTSettingCallingLinePresentationDisabled
|| __DATA_CONST.__const _kCTSettingCallingLinePresentationEnabled
|| __DATA_CONST.__const _kCTSettingCallingLinePresentationNotAvailable
|| __DATA_CONST.__const _kCTSettingCallingLinePresentationUnknown
|| __DATA_CONST.__const _kCTSettingCallingNamePresentation
|| __DATA_CONST.__const _kCTSettingCallingNamePresentationDisabled
|| __DATA_CONST.__const _kCTSettingCallingNamePresentationEnabled
|| __DATA_CONST.__const _kCTSettingCallingNamePresentationUnknown
|| __DATA_CONST.__const _kCTSettingChangedNotification
|| __DATA_CONST.__const _kCTSettingConnectedLineIdRestriction
|| __DATA_CONST.__const _kCTSettingConnectedLineIdRestrictionAvailable
|| __DATA_CONST.__const _kCTSettingConnectedLineIdRestrictionNotAvailable
|| __DATA_CONST.__const _kCTSettingConnectedLineIdRestrictionUnknown
|| __DATA_CONST.__const _kCTSettingConnectedLinePresentation
|| __DATA_CONST.__const _kCTSettingConnectedLinePresentationDisabled
|| __DATA_CONST.__const _kCTSettingConnectedLinePresentationEnabled
|| __DATA_CONST.__const _kCTSettingConnectedLinePresentationNotAvailable
|| __DATA_CONST.__const _kCTSettingConnectedLinePresentationUnknown
|| __DATA_CONST.__const _kCTSettingEnabled
|| __DATA_CONST.__const _kCTSettingMMIProcedure
|| __DATA_CONST.__const _kCTSettingMMIProcedureActivation
|| __DATA_CONST.__const _kCTSettingMMIProcedureDeactivation
|| __DATA_CONST.__const _kCTSettingMMIProcedureErasure
|| __DATA_CONST.__const _kCTSettingMMIProcedureInterrogation
|| __DATA_CONST.__const _kCTSettingMMIProcedureRegistration
|| __DATA_CONST.__const _kCTSettingMyEffectivePhoneNumber
|| __DATA_CONST.__const _kCTSettingMyPhoneNumber
|| __DATA_CONST.__const _kCTSettingMyPhoneNumberEditable
|| __DATA_CONST.__const _kCTSettingMyPhoneNumberExists
|| __DATA_CONST.__const _kCTSettingNewPassword
|| __DATA_CONST.__const _kCTSettingPIN2ErrorCode
|| __DATA_CONST.__const _kCTSettingPIN2ErrorCodeAsString
|| __DATA_CONST.__const _kCTSettingPINErrorCode
|| __DATA_CONST.__const _kCTSettingPINErrorCodeAsString
|| __DATA_CONST.__const _kCTSettingPassword
|| __DATA_CONST.__const _kCTSettingPhoneNumberAvailableNotification
|| __DATA_CONST.__const _kCTSettingPhoneNumberChangedNotification
|| __DATA_CONST.__const _kCTSettingRequestErrorNotification
|| __DATA_CONST.__const _kCTSettingRequestSuccessNotification
|| __DATA_CONST.__const _kCTSettingSaveErrorNotification
|| __DATA_CONST.__const _kCTSettingSaveSuccessNotification
|| __DATA_CONST.__const _kCTSettingServiceCenterAddress
|| __DATA_CONST.__const _kCTSettingServiceCenterAddressAvailableNotification
|| __DATA_CONST.__const _kCTSettingServiceCenterAddressRequestErrorNotification
|| __DATA_CONST.__const _kCTSettingServiceCenterAddressSaveErrorNotification
|| __DATA_CONST.__const _kCTSettingServiceCenterAddressSavedNotification
|| __DATA_CONST.__const _kCTSettingSupplementaryServiceType
|| __DATA_CONST.__const _kCTSettingType
|| __DATA_CONST.__const _kCTSettingTypeCallBarring
|| __DATA_CONST.__const _kCTSettingTypeCallForwarding
|| __DATA_CONST.__const _kCTSettingTypeCallWaiting
|| __DATA_CONST.__const _kCTSettingTypeCallingLineIdRestriction
|| __DATA_CONST.__const _kCTSettingTypeCallingLinePresentation
|| __DATA_CONST.__const _kCTSettingTypeCallingNamePresentation
|| __DATA_CONST.__const _kCTSettingTypeConnectedLineIdRestriction
|| __DATA_CONST.__const _kCTSettingTypeConnectedLinePresentation
|| __DATA_CONST.__const _kCTSettingTypePIN
|| __DATA_CONST.__const _kCTSettingTypePIN2
|| __DATA_CONST.__const _kCTSettingTypeSIMLock
|| __DATA_CONST.__const _kCTSettingTypeServiceCenterAddress
|| __DATA_CONST.__const _kCTSettingTypeSupplementaryServicePassword
|| __DATA_CONST.__const _kCTSetupAudioInterruptionsChangedNotification
|| __DATA_CONST.__const _kCTSimStatusChangedNotification
|| __DATA_CONST.__const _kCTSimSupportSIMAuthenticationKc
|| __DATA_CONST.__const _kCTSimSupportSIMAuthenticationSres
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationAutnKey
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationAutsKey
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationCkKey
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationIkKey
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationInfoNotification
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationKcKey
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationKsExtNafKey
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationNafIdKey
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationRandKey
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationResKey
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationSlotUUIDKey
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationSresKey
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationTypeEAPAKA
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationTypeEAPSIM
|| __DATA_CONST.__const _kCTSimSupportUICCAuthenticationTypeKey
|| __DATA_CONST.__const _kCTSubscriberSuppressUnlockCancellationKey
|| __DATA_CONST.__const _kCTSubscriberUnlockPromptReasonKey
|| __DATA_CONST.__const _kCTTelephonyCenterDaemonRestartNotification
|| __DATA_CONST.__const _kCTThermalTxBackoff
|| __DATA_CONST.__const _kCTThermalTxDutyCycle
|| __DATA_CONST.__const _kCTTimeAvailabilityNotification
|| __DATA_CONST.__const _kCTTimeUpdateNotification
|| __DATA_CONST.__const _kCTTimezoneUpdateNotification
|| __DATA_CONST.__const _kCTTxPowerAudioAlertConfiguredMode
|| __DATA_CONST.__const _kCTTxPowerAudioModeAuto
|| __DATA_CONST.__const _kCTTxPowerAudioModeConfiguredMode
|| __DATA_CONST.__const _kCTTxPowerAudioModeHandset
|| __DATA_CONST.__const _kCTTxPowerAudioModeOther
|| __DATA_CONST.__const _kCTTxPowerAudioModeSupportedModes
|| __DATA_CONST.__const _kCTTxPowerCommandData
|| __DATA_CONST.__const _kCTTxPowerCommandReply
|| __DATA_CONST.__const _kCTTxPowerCommandString
|| __DATA_CONST.__const _kCTTxPowerEnhancedDetectionAuto
|| __DATA_CONST.__const _kCTTxPowerEnhancedDetectionBody
|| __DATA_CONST.__const _kCTTxPowerEnhancedDetectionConfiguredMode
|| __DATA_CONST.__const _kCTTxPowerEnhancedDetectionHead
|| __DATA_CONST.__const _kCTTxPowerEnhancedDetectionOff
|| __DATA_CONST.__const _kCTTxPowerEnhancedDetectionSupportedModes
|| __DATA_CONST.__const _kCTTxPowerProxMotionAssistConfiguredMode
|| __DATA_CONST.__const _kCTTxPowerProxMotionAssistModeAuto
|| __DATA_CONST.__const _kCTTxPowerProxMotionAssistModeMoving
|| __DATA_CONST.__const _kCTTxPowerProxMotionAssistModeStatic
|| __DATA_CONST.__const _kCTTxPowerProxMotionAssistSupportedMode
|| __DATA_CONST.__const _kCTUSSDSessionBeginNotification
|| __DATA_CONST.__const _kCTUSSDSessionEndNotification
|| __DATA_CONST.__const _kCTUSSDSessionErrorCode
|| __DATA_CONST.__const _kCTUSSDSessionErrorNotification
|| __DATA_CONST.__const _kCTUSSDSessionErrorString
|| __DATA_CONST.__const _kCTUSSDSessionResponseRequested
|| __DATA_CONST.__const _kCTUSSDSessionString
|| __DATA_CONST.__const _kCTUSSDSessionStringIsOutgoing
|| __DATA_CONST.__const _kCTUSSDSessionStringNotification
|| __DATA_CONST.__const _kCTUSSDSessionTerminatedNotification
|| __DATA_CONST.__const _kCTVVMAssertionActiveNotification
|| __DATA_CONST.__const _kCTVVMNumberKey
|| __DATA_CONST.__const _kCTVVMNumberTypeKey
|| __DATA_CONST.__const _kCTVVMPilot
|| __DATA_CONST.__const _kCTVVMRoamingPilot
|| __DATA_CONST.__const _kCTVVMSIM
|| __DATA_CONST.__const _kCTVVMUnknown
|| __DATA_CONST.__const _kCTVoicePrivacyStatus
|| __DATA_CONST.__const _kCTVoicePrivacyStatusChangeNotification
|| __DATA_CONST.__const _kCTVoicemailDatabaseResetNotification
|| __DATA_CONST.__const _kCTVoicemailDatabaseResetReason
|| __DATA_CONST.__const _kCTWebSheetPostData
|| __DATA_CONST.__const _kCTWebSheetURL
|| __DATA_CONST.__const _kCTWiFiDataUsagePolicy
|| __DATA_CONST.__const _kCTWirelessTechnologyCDMA2000
|| __DATA_CONST.__const _kCTWirelessTechnologyLTE
|| __DATA_CONST.__const _kCTWirelessTechnologyNR
|| __DATA_CONST.__const _kCTWirelessTechnologyType
|| __DATA_CONST.__const _kCTWirelessTechnologyUMTS
|| __DATA_CONST.__const _kCTWirelessTechnologyUnknown
|| __DATA_CONST.__const _kCallAudioSource
|| __DATA_CONST.__const _kCallDirectionMobileOriginated
|| __DATA_CONST.__const _kCallDuration
|| __DATA_CONST.__const _kCallForwardingCapability
|| __DATA_CONST.__const _kCallLikelyToFail
|| __DATA_CONST.__const _kCallName
|| __DATA_CONST.__const _kCallSessionStart
|| __DATA_CONST.__const _kCallSimSlot
|| __DATA_CONST.__const _kCallSourceMode
|| __DATA_CONST.__const _kCallStartTime
|| __DATA_CONST.__const _kCallStatus
|| __DATA_CONST.__const _kCallSubType
|| __DATA_CONST.__const _kCallSubTypeTelephony
|| __DATA_CONST.__const _kCallSubTypeVoLTE
|| __DATA_CONST.__const _kCallSubTypeVoNR
|| __DATA_CONST.__const _kCallSubTypeWifi
|| __DATA_CONST.__const _kCallType
|| __DATA_CONST.__const _kCallWaitingCapability
|| __DATA_CONST.__const _kCallerIDCapability
|| __DATA_CONST.__const _kCallerIdAvailability
|| __DATA_CONST.__const _kCarrierPLMNPriorityMCC
|| __DATA_CONST.__const _kCarrierPLMNPriorityMNC
|| __DATA_CONST.__const _kCarrierPLMNPriorityMetered
|| __DATA_CONST.__const _kCarrierPLMNPriorityOthers
|| __DATA_CONST.__const _kCarrierPLMNPriorityPLMN
|| __DATA_CONST.__const _kCarrierPLMNPriorityRatMask
|| __DATA_CONST.__const _kCarrierPLMNPriorityUnlimited
|| __DATA_CONST.__const _kCarrierPLMNPriorityValue
|| __DATA_CONST.__const _kCarrierPhoneNumberSignature
|| __DATA_CONST.__const _kCarrierPhoneNumberSignatureVersion
|| __DATA_CONST.__const _kCellBroadcastCapability
|| __DATA_CONST.__const _kClientNeedsToSetupAudioInterruptions
|| __DATA_CONST.__const _kConferenceCallType
|| __DATA_CONST.__const _kConferenceCallType3Party
|| __DATA_CONST.__const _kConferenceCallType6Party
|| __DATA_CONST.__const _kConferenceCallTypeUnknown
|| __DATA_CONST.__const _kCoreTelephonyXpcServiceName
|| __DATA_CONST.__const _kDialVoicemail
|| __DATA_CONST.__const _kDisconnectCauseCode
|| __DATA_CONST.__const _kDisconnectCauseCodeString
|| __DATA_CONST.__const _kEmergencyModeOnly
|| __DATA_CONST.__const _kISOCountryCode
|| __DATA_CONST.__const _kImagePath
|| __DATA_CONST.__const _kIsEmergencyCall
|| __DATA_CONST.__const _kIsInMultiParty
|| __DATA_CONST.__const _kIsSplitAllowed
|| __DATA_CONST.__const _kIsTTY
|| __DATA_CONST.__const _kIsTextHeldForRTTCall
|| __DATA_CONST.__const _kIsTheOnlyCall
|| __DATA_CONST.__const _kIsThumperCall
|| __DATA_CONST.__const _kKeyCTCellularTransmitState
|| __DATA_CONST.__const _kKeyCTCellularTransmitTrigger
|| __DATA_CONST.__const _kLTEDeviceCapability
|| __DATA_CONST.__const _kLocalEmergencyNumber
|| __DATA_CONST.__const _kLocalEmergencyNumberTest
|| __DATA_CONST.__const _kMarkMTCallWithHighPriority
|| __DATA_CONST.__const _kMobileOriginatedCallEndFlag
|| __DATA_CONST.__const _kOnHold
|| __DATA_CONST.__const _kOriginalPhoneNumber
|| __DATA_CONST.__const _kPSAccountDetails
|| __DATA_CONST.__const _kPSAccountFreeSlots
|| __DATA_CONST.__const _kPSAccountId
|| __DATA_CONST.__const _kPSAccountList
|| __DATA_CONST.__const _kPSAssociatedAccountID
|| __DATA_CONST.__const _kPSDeviceHardware
|| __DATA_CONST.__const _kPSDeviceId
|| __DATA_CONST.__const _kPSDeviceList
|| __DATA_CONST.__const _kPSIsoMcc
|| __DATA_CONST.__const _kPSLabelID
|| __DATA_CONST.__const _kPSMcc
|| __DATA_CONST.__const _kPSMdn
|| __DATA_CONST.__const _kPSOwnAccounts
|| __DATA_CONST.__const _kPSPairedAccounts
|| __DATA_CONST.__const _kPSPrimaryDeviceId
|| __DATA_CONST.__const _kPSStatus
|| __DATA_CONST.__const _kPSThumperCalling
|| __DATA_CONST.__const _kPSUserPreference
|| __DATA_CONST.__const _kPSWifiCallingRoamingCanSet
|| __DATA_CONST.__const _kPSWifiCallingRoamingEnabled
|| __DATA_CONST.__const _kPhoneNumber
|| __DATA_CONST.__const _kPreviousCallStatus
|| __DATA_CONST.__const _kSIMCapability
|| __DATA_CONST.__const _kSIMPhonebookCapability
|| __DATA_CONST.__const _kSetEnabledAssociatedAccountID
|| __DATA_CONST.__const _kSimultaneousCallAndDataCurrentlySupported
|| __DATA_CONST.__const _kSimultaneousCallAndDataSupported
|| __DATA_CONST.__const _kSpamCategory
|| __DATA_CONST.__const _kSpamRisk
|| __DATA_CONST.__const _kSupportsEmergencyFallback
|| __DATA_CONST.__const _kSupportsRTT
|| __DATA_CONST.__const _kSuspendInternetOnBBCall
|| __DATA_CONST.__const _kTextStreamToken
|| __DATA_CONST.__const _kThumperAccountId
|| __DATA_CONST.__const _kUMTSDeviceCapability
|| __DATA_CONST.__const _kUuid
|| __DATA_CONST.__const _kUuidToMergeInto
|| __DATA_CONST.__const _kVMGreetingChangedNotificationName
|| __DATA_CONST.__const _kVMMailboxChangedNotificationName
|| __DATA_CONST.__const _kVMNotificationCommandKey
|| __DATA_CONST.__const _kVMNotificationHostKey
|| __DATA_CONST.__const _kVMNotificationLoginKey
|| __DATA_CONST.__const _kVMNotificationMWIKey
|| __DATA_CONST.__const _kVMNotificationNameKey
|| __DATA_CONST.__const _kVMNotificationPasswordKey
|| __DATA_CONST.__const _kVMNotificationPortKey
|| __DATA_CONST.__const _kVMNotificationStateKey
|| __DATA_CONST.__const _kVMNotificationTimestampKey
|| __DATA_CONST.__const _kVMServerChangedNotificationName
|| __DATA_CONST.__const _kVMStateNotificationName
|| __DATA_CONST.__const _kVMUnrecognizedCommandNotificationName
|| __DATA_CONST.__const _kVerstatEnabled
|| __DATA_CONST.__const _kVerstatLevel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTActivationPolicyState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTAudioCodecInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTBandInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTBundle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTBundleMatchingInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTCallCapabilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTCallForwardingValue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTCarrier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTCellIdInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTCellInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTCellularPlanManagerCameraScanAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTCellularPlanProvisioningOnDeviceActivationRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTCellularPlanProvisioningRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTCellularQoSFlow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTDataConnectionAvailabilityStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTDataConnectionStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTDataSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTDataStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTDataStatusBasic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTDataUsagePoliciesWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTDedicatedBearerRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTDeviceDataUsage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTDeviceIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTDisplayPlanList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTEmergencyMode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTEncryptionStatusInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTEnhancedDataLinkQualityMetric
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTEnhancedLinkQualityMetric
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTIMSRegistrationStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTIMSRegistrationTransportInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTIPFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTIPFilterEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTMessageCenter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTMmsRegistrationFailureInfoType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTMobileEquipmentInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTMobileEquipmentInfoList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTNRStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTNetwork
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTNetworkList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTNetworkSelectionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTPNRContextInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTPNRRequestSentInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTPNRRequestType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTPhoneBookEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTPhoneNumberInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTPlan
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTPlanIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTPlanList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTPlmnInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTPriVersion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTQoS
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTQoSLinkCharacteristics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTRadioFrequencyFrontEndScanData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTRatSelection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTRegistrationDisplayStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTRemoteDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTRemoteDeviceList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTRemotePlanIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTRemotePlanIdentifierList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSIMToolkitItemList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSIMToolkitMenu
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSMSDataType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTServiceDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTServiceDescriptorContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTServiceDisconnectionStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSignalStrengthInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSignalStrengthMeasurements
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSimDeactivationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSimHardwareInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSimLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSimSetupUsage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSubscriberAuthDataHolder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSubscriberAuthRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSubscriberAuthResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSuppServicesNotificationData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSupportedMaxDataRates
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSweetgumAppsInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSweetgumCapabilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSweetgumDataPlanMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSweetgumPlan
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSweetgumPlansInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSweetgumUsageInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTSweetgumUserConsentFlowInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTTelephonyNetworkInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTTetheringStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTVoiceLinkQualityMetric
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTVoicemailInfoType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTXPCContextInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTXPCContexts
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTXPCServiceSubscriptionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CTXPCServiceSubscriptionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CoreTelephonyClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTActivationPolicyState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTAudioCodecInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTBandInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTBundle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTBundleMatchingInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTCallCapabilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTCallForwardingValue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTCarrier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTCellIdInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTCellInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTCellularPlanManagerCameraScanAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTCellularPlanProvisioningOnDeviceActivationRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTCellularPlanProvisioningRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTCellularQoSFlow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTDataConnectionAvailabilityStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTDataConnectionStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTDataSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTDataStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTDataStatusBasic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTDataUsagePoliciesWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTDedicatedBearerRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTDeviceDataUsage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTDeviceIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTDisplayPlanList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTEmergencyMode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTEncryptionStatusInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTEnhancedDataLinkQualityMetric
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTEnhancedLinkQualityMetric
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTIMSRegistrationStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTIMSRegistrationTransportInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTIPFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTIPFilterEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTMessageCenter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTMmsRegistrationFailureInfoType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTMobileEquipmentInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTMobileEquipmentInfoList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTNRStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTNetwork
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTNetworkList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTNetworkSelectionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTPNRContextInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTPNRRequestSentInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTPNRRequestType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTPhoneBookEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTPhoneNumberInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTPlan
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTPlanIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTPlanList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTPlmnInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTPriVersion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTQoS
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTQoSLinkCharacteristics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTRadioFrequencyFrontEndScanData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTRatSelection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTRegistrationDisplayStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTRemoteDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTRemoteDeviceList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTRemotePlanIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTRemotePlanIdentifierList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSIMToolkitItemList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSIMToolkitMenu
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSMSDataType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTServiceDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTServiceDescriptorContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTServiceDisconnectionStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSignalStrengthInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSignalStrengthMeasurements
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSimDeactivationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSimHardwareInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSimLabel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSimSetupUsage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSubscriberAuthDataHolder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSubscriberAuthRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSubscriberAuthResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSuppServicesNotificationData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSupportedMaxDataRates
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSweetgumAppsInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSweetgumCapabilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSweetgumDataPlanMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSweetgumPlan
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSweetgumPlansInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSweetgumUsageInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTSweetgumUserConsentFlowInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTTelephonyNetworkInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTTetheringStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTVoiceLinkQualityMetric
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTVoicemailInfoType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTXPCContextInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTXPCContexts
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTXPCServiceSubscriptionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CTXPCServiceSubscriptionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CoreTelephonyClient
|| __TEXT.__const _kCTLogChannelMaxSendWindowSecondsDefault
|| __TEXT.__text _CTActivationPolicyCarrierLockAsString
|| __TEXT.__text _CTCallAddressBlocked
|| __TEXT.__text _CTCallAnswer
|| __TEXT.__text _CTCallAnswerEndingActive
|| __TEXT.__text _CTCallAnswerEndingActiveWithSourceIdentifier
|| __TEXT.__text _CTCallAnswerEndingHeld
|| __TEXT.__text _CTCallAnswerWithOptions
|| __TEXT.__text _CTCallAnswerWithSourceIdentifier
|| __TEXT.__text _CTCallCopyAddress
|| __TEXT.__text _CTCallCopyCountryCode
|| __TEXT.__text _CTCallCopyISOCountryCode
|| __TEXT.__text _CTCallCopyName
|| __TEXT.__text _CTCallCopyNetworkCode
|| __TEXT.__text _CTCallCopyUUID
|| __TEXT.__text _CTCallCopyUniqueStringID
|| __TEXT.__text _CTCallCreateCallRef
|| __TEXT.__text _CTCallCreateFromSerializedData
|| __TEXT.__text _CTCallDial
|| __TEXT.__text _CTCallDialAny
|| __TEXT.__text _CTCallDialEmergency
|| __TEXT.__text _CTCallDialService
|| __TEXT.__text _CTCallDialVoicemail
|| __TEXT.__text _CTCallDialWithAssist
|| __TEXT.__text _CTCallDialWithID
|| __TEXT.__text _CTCallDialWithIDAndSourceIdentifier
|| __TEXT.__text _CTCallDialWithOptions
|| __TEXT.__text _CTCallDialWithSourceIdentifier
|| __TEXT.__text _CTCallDidDeviceOriginateEnd
|| __TEXT.__text _CTCallDisconnect
|| __TEXT.__text _CTCallDisconnectWithCauseCode
|| __TEXT.__text _CTCallEndVideoConference
|| __TEXT.__text _CTCallGetCallSubType
|| __TEXT.__text _CTCallGetCallType
|| __TEXT.__text _CTCallGetCauseCode
|| __TEXT.__text _CTCallGetCauseCodeString
|| __TEXT.__text _CTCallGetDuration
|| __TEXT.__text _CTCallGetEmergencyStatus
|| __TEXT.__text _CTCallGetMultiPartyCallCountMax
|| __TEXT.__text _CTCallGetStartTime
|| __TEXT.__text _CTCallGetStatus
|| __TEXT.__text _CTCallGetTypeID
|| __TEXT.__text _CTCallHold
|| __TEXT.__text _CTCallIsAlerting
|| __TEXT.__text _CTCallIsCallHandoffPossible
|| __TEXT.__text _CTCallIsConferenced
|| __TEXT.__text _CTCallIsOutgoing
|| __TEXT.__text _CTCallIsToVoicemail
|| __TEXT.__text _CTCallIsWaiting
|| __TEXT.__text _CTCallJoinConference
|| __TEXT.__text _CTCallLeaveConference
|| __TEXT.__text _CTCallListDisconnect
|| __TEXT.__text _CTCallListDisconnectAll
|| __TEXT.__text _CTCallMediaStatusIsActive
|| __TEXT.__text _CTCallPhoneNumberIsMmiOrUssd
|| __TEXT.__text _CTCallPullCallFromOtherDevice
|| __TEXT.__text _CTCallResume
|| __TEXT.__text _CTCallSetCallEndTime
|| __TEXT.__text _CTCallSetCallInfo
|| __TEXT.__text _CTCallSetCallStartTime
|| __TEXT.__text _CTCallSetCallStatus
|| __TEXT.__text _CTCallShouldPlayAudioTone
|| __TEXT.__text _CTCallShouldSetupAudioInterruption
|| __TEXT.__text _CTCallStartVideoConference
|| __TEXT.__text _CTCallSwap
|| __TEXT.__text _CTCallSwitchCallSource
|| __TEXT.__text _CTCallSwitchCallSourceAll
|| __TEXT.__text _CTCellularDataPlanAccountUpdated
|| __TEXT.__text _CTCellularDataPlanActivationFailed
|| __TEXT.__text _CTCellularDataPlanCopyAccountUrlString
|| __TEXT.__text _CTCellularDataPlanCopyDeviceInfo
|| __TEXT.__text _CTCellularDataPlanGetIsEnabled
|| __TEXT.__text _CTCellularDataPlanSetIsEnabled
|| __TEXT.__text _CTCellularDataPlanSetWebsheetVisibility
|| __TEXT.__text _CTCopyCallManagementState
|| __TEXT.__text _CTCopyCurrentCalls
|| __TEXT.__text _CTCopyCurrentCallsWithTypes
|| __TEXT.__text _CTCreateCallInfoForHandoffCall
|| __TEXT.__text _CTDTMFCancelHardPause
|| __TEXT.__text _CTDTMFCopyHardPauseDigits
|| __TEXT.__text _CTDTMFPlayStart
|| __TEXT.__text _CTDTMFPlayStop
|| __TEXT.__text _CTDTMFSendDigitsNow
|| __TEXT.__text _CTDataRateAsString
|| __TEXT.__text _CTEmergencyModeTypeAsString
|| __TEXT.__text _CTEnhancedLQMIndicationTypeAsString
|| __TEXT.__text _CTEsimCapabilityAsString
|| __TEXT.__text _CTGetCurrentCallCount
|| __TEXT.__text _CTGetCurrentCallCountWithTypes
|| __TEXT.__text _CTGetEmergencyWiFiConfig
|| __TEXT.__text _CTGetSignalStrength
|| __TEXT.__text _CTIndicatorsCopyVoicemailStatus
|| __TEXT.__text _CTIndicatorsGetSignalStrength
|| __TEXT.__text _CTNRDisableReasonAsString
|| __TEXT.__text _CTNetworkSelectionModeAsString
|| __TEXT.__text _CTNetworkSelectionStateAsString
|| __TEXT.__text _CTQoSDirectionAsString
|| __TEXT.__text _CTRegistrationAutomaticallySelectNetwork
|| __TEXT.__text _CTRegistrationCellularDataPlanAccountUpdated
|| __TEXT.__text _CTRegistrationCopyAbbreviatedOperatorName
|| __TEXT.__text _CTRegistrationCopyDataStatus
|| __TEXT.__text _CTRegistrationCopyLocalizedOperatorName
|| __TEXT.__text _CTRegistrationCopyManualNetworkSelection
|| __TEXT.__text _CTRegistrationCopyOperatorName
|| __TEXT.__text _CTRegistrationCopySupportedDataRates
|| __TEXT.__text _CTRegistrationGetCDMAInternationalRoaming
|| __TEXT.__text _CTRegistrationGetDataAttached
|| __TEXT.__text _CTRegistrationGetDataContextActive
|| __TEXT.__text _CTRegistrationGetDataIndicator
|| __TEXT.__text _CTRegistrationGetEmergencyCallBackMode
|| __TEXT.__text _CTRegistrationGetNetworkSelectionMode
|| __TEXT.__text _CTRegistrationGetNetworkSelectionState
|| __TEXT.__text _CTRegistrationGetStatus
|| __TEXT.__text _CTRegistrationIsCDMAInternationalRoamingSettingAllowed
|| __TEXT.__text _CTRegistrationIsInE911OverLTEMode
|| __TEXT.__text _CTRegistrationManuallySelectNetwork
|| __TEXT.__text _CTRegistrationNetworkSelectionMenuAvailable
|| __TEXT.__text _CTRegistrationRequestNetworkList
|| __TEXT.__text _CTRegistrationSetCDMAInternationalRoaming
|| __TEXT.__text _CTRegistrationSetDataContextActive
|| __TEXT.__text _CTSIMSupportCopyMobileSubscriberCountryCode
|| __TEXT.__text _CTSIMSupportCopyMobileSubscriberIdentity
|| __TEXT.__text _CTSIMSupportCopyMobileSubscriberNetworkCode
|| __TEXT.__text _CTSIMSupportGetRemainingPINAttempts
|| __TEXT.__text _CTSIMSupportGetRemainingPUKAttempts
|| __TEXT.__text _CTSIMSupportGetSIMStatus
|| __TEXT.__text _CTSIMSupportPINUnlock
|| __TEXT.__text _CTSIMSupportPUKUnlock
|| __TEXT.__text _CTServerConnectionDualSimCapabilityAsString
|| __TEXT.__text _CTSettingCopyDualIPBringUp
|| __TEXT.__text _CTSettingCopyEPDGAddress
|| __TEXT.__text _CTSettingCopyEffectiveSimInfo
|| __TEXT.__text _CTSettingCopyFakePrimaryDNSKey
|| __TEXT.__text _CTSettingCopyFakeSecondaryDNSKey
|| __TEXT.__text _CTSettingCopyMyPhoneNumber
|| __TEXT.__text _CTSettingCopyMyPhoneNumberExtended
|| __TEXT.__text _CTSettingCopyPCSCFAddress
|| __TEXT.__text _CTSettingCopyShowVoLTEStatusIndicator
|| __TEXT.__text _CTSettingCopyVerifyAPN
|| __TEXT.__text _CTSettingCopyVerifyCarrierBundles
|| __TEXT.__text _CTSettingCopyWiFiCallingInCallHandover
|| __TEXT.__text _CTSettingRequest
|| __TEXT.__text _CTSettingSave
|| __TEXT.__text _CTSettingSetDualIPBringUp
|| __TEXT.__text _CTSettingSetEPDGAddress
|| __TEXT.__text _CTSettingSetFakePrimaryDNSKey
|| __TEXT.__text _CTSettingSetFakeSecondaryDNSKey
|| __TEXT.__text _CTSettingSetIMSIOverride
|| __TEXT.__text _CTSettingSetPCSCFAddress
|| __TEXT.__text _CTSettingSetShowVoLTEStatusIndicator
|| __TEXT.__text _CTSettingSetVerifyAPN
|| __TEXT.__text _CTSettingSetVerifyCarrierBundles
|| __TEXT.__text _CTSettingSetWiFiCallingInCallHandover
|| __TEXT.__text _CTSettingsCopyiWlanGatewayAddress
|| __TEXT.__text _CTSimHardwareTypeAsString
|| __TEXT.__text _CTSimLocationAsString
|| __TEXT.__text _CTStartManualOTASP
|| __TEXT.__text _CTStartOTASP
|| __TEXT.__text _CTSubscriptionSlotAsString
|| __TEXT.__text _CTSubscriptionSlotAsUUID
|| __TEXT.__text _CTSweetgumConvertDataUnits
|| __TEXT.__text _CTSweetgumDataUnitsAsString
|| __TEXT.__text _CTSweetgumDeviceTypeAsString
|| __TEXT.__text _CTSweetgumPlanCategoryAsString
|| __TEXT.__text _CTSweetgumPlanPurchaseStatusAsString
|| __TEXT.__text _CTSweetgumPlanStatusAsString
|| __TEXT.__text _CTSweetgumRegistrationStatusAsString
|| __TEXT.__text _CTTelephonyCenterAddObserver
|| __TEXT.__text _CTTelephonyCenterGetDefault
|| __TEXT.__text _CTTelephonyCenterGetRunLoop
|| __TEXT.__text _CTTelephonyCenterRemoveEveryObserver
|| __TEXT.__text _CTTelephonyCenterRemoveObserver
|| __TEXT.__text _CTTelephonyCenterSendBarrier
|| __TEXT.__text _CTTelephonyCenterSetDefaultDispatchQueue
|| __TEXT.__text _CTTelephonyCenterSetDefaultDispatchQueuePermanently
|| __TEXT.__text _CTTelephonyCenterSetDefaultRunloop
|| __TEXT.__text _CTTelephonyCenterSetDefaultRunloopPermanently
|| __TEXT.__text _CTUSSDSessionCancel
|| __TEXT.__text _CTUSSDSessionSendResponse
|| __TEXT.__text _ConvertAccountQueryTypesToMask
|| __TEXT.__text _GetCarrierEntitlementNameById
|| __TEXT.__text _GetCarrierEntitlementResultString
|| __TEXT.__text _HexToString
|| __TEXT.__text _VMCopyDictionaryForNotificationString
|| __TEXT.__text __CFDataCreateFromHexString
|| __TEXT.__text __CFStringCopyMCCMNCFromIMSI
|| __TEXT.__text __CFStringCreateHexFromBinary
|| __TEXT.__text __CFStringGetMobileUser
|| __TEXT.__text __CFStringGetOrCreateCString
|| __TEXT.__text __CFStringGetWirelessUser
|| __TEXT.__text __CFStringHasPrefixCaseInsensitive
|| __TEXT.__text __CTCallCopyCurrentCalls
|| __TEXT.__text __CTCallHistoryStoreCallTimersGetAll
|| __TEXT.__text __CTCallHistoryStoreGetCountOfMissedCallSince
|| __TEXT.__text __CTCallHistoryStoreGetCountOfMissedCallWithTypesSince
|| __TEXT.__text __CTServerConnectionAddIdentifierException
|| __TEXT.__text __CTServerConnectionAddToRunLoop
|| __TEXT.__text __CTServerConnectionAddVictimFreq
|| __TEXT.__text __CTServerConnectionAudioSampleRateSwitchDidComplete
|| __TEXT.__text __CTServerConnectionAutomaticallySelectNetwork
|| __TEXT.__text __CTServerConnectionBlockBBFreqReport
|| __TEXT.__text __CTServerConnectionCanSetCapability
|| __TEXT.__text __CTServerConnectionCanSetCapabilityExtended
|| __TEXT.__text __CTServerConnectionCarrierSettingsCopyValue
|| __TEXT.__text __CTServerConnectionCellMonitorCopyCellInfo
|| __TEXT.__text __CTServerConnectionCellMonitorGetCellCount
|| __TEXT.__text __CTServerConnectionCellMonitorGetCellInfo
|| __TEXT.__text __CTServerConnectionCellMonitorGetUmtsCellCount
|| __TEXT.__text __CTServerConnectionCellMonitorGetUmtsCellInfo
|| __TEXT.__text __CTServerConnectionCellMonitorStart
|| __TEXT.__text __CTServerConnectionCellMonitorStop
|| __TEXT.__text __CTServerConnectionCellularDataPlanAccountUpdated
|| __TEXT.__text __CTServerConnectionCellularDataPlanActivationFailed
|| __TEXT.__text __CTServerConnectionCleanBasebandLogs
|| __TEXT.__text __CTServerConnectionClearVictimFreq
|| __TEXT.__text __CTServerConnectionConfigAndCopyTxController
|| __TEXT.__text __CTServerConnectionConfigMaxRadioPower
|| __TEXT.__text __CTServerConnectionConfigMaxTransmitPower
|| __TEXT.__text __CTServerConnectionConfigureLogging
|| __TEXT.__text __CTServerConnectionCopyAbbreviatedOperatorName
|| __TEXT.__text __CTServerConnectionCopyAudioVocoderInfo
|| __TEXT.__text __CTServerConnectionCopyBandInfo
|| __TEXT.__text __CTServerConnectionCopyBasebandSettings
|| __TEXT.__text __CTServerConnectionCopyBasebandThumbprint
|| __TEXT.__text __CTServerConnectionCopyCallManagementState
|| __TEXT.__text __CTServerConnectionCopyCarrierBundleInfoArray
|| __TEXT.__text __CTServerConnectionCopyCellBroadcastAlertTypes
|| __TEXT.__text __CTServerConnectionCopyCellBroadcastAlertTypesForAllSIMSlots
|| __TEXT.__text __CTServerConnectionCopyCellularTransmitState
|| __TEXT.__text __CTServerConnectionCopyCellularUsagePolicy
|| __TEXT.__text __CTServerConnectionCopyCellularUsageWorkspaceInfo
|| __TEXT.__text __CTServerConnectionCopyCompanionPhoneNumber
|| __TEXT.__text __CTServerConnectionCopyCountryCode
|| __TEXT.__text __CTServerConnectionCopyCurrentMTU
|| __TEXT.__text __CTServerConnectionCopyDataActivityAssertionProcesses
|| __TEXT.__text __CTServerConnectionCopyDataStatus
|| __TEXT.__text __CTServerConnectionCopyDataUsageForSubscriber
|| __TEXT.__text __CTServerConnectionCopyDualSimCapability
|| __TEXT.__text __CTServerConnectionCopyEffectiveSimInfo
|| __TEXT.__text __CTServerConnectionCopyFirmwareBaselineVersion
|| __TEXT.__text __CTServerConnectionCopyFirmwareManifestData
|| __TEXT.__text __CTServerConnectionCopyFirmwareManifestStatus
|| __TEXT.__text __CTServerConnectionCopyFirmwareNonce
|| __TEXT.__text __CTServerConnectionCopyFirmwarePreflightInfo
|| __TEXT.__text __CTServerConnectionCopyFirmwareSecurityInfo
|| __TEXT.__text __CTServerConnectionCopyFirmwareUpdateInfo
|| __TEXT.__text __CTServerConnectionCopyFirmwareVersion
|| __TEXT.__text __CTServerConnectionCopyISOForMCC
|| __TEXT.__text __CTServerConnectionCopyLastKnownCountryCode
|| __TEXT.__text __CTServerConnectionCopyLastKnownMobileSubscriberCountryCode
|| __TEXT.__text __CTServerConnectionCopyListVictimFreq
|| __TEXT.__text __CTServerConnectionCopyLocalizedOperatorName
|| __TEXT.__text __CTServerConnectionCopyManualNetworkSelection
|| __TEXT.__text __CTServerConnectionCopyMobileCountryCode
|| __TEXT.__text __CTServerConnectionCopyMobileEquipmentInfo
|| __TEXT.__text __CTServerConnectionCopyMobileNetworkCode
|| __TEXT.__text __CTServerConnectionCopyMobileSubscriberAndIsoCountryCodes
|| __TEXT.__text __CTServerConnectionCopyMobileSubscriberCountryCode
|| __TEXT.__text __CTServerConnectionCopyMobileSubscriberHomeCountryList
|| __TEXT.__text __CTServerConnectionCopyMobileSubscriberIdentity
|| __TEXT.__text __CTServerConnectionCopyMobileSubscriberNetworkCode
|| __TEXT.__text __CTServerConnectionCopyNetworkCode
|| __TEXT.__text __CTServerConnectionCopyNetworkList
|| __TEXT.__text __CTServerConnectionCopyNextCall
|| __TEXT.__text __CTServerConnectionCopyNumericNetworkCode
|| __TEXT.__text __CTServerConnectionCopyOperatorName
|| __TEXT.__text __CTServerConnectionCopyPacketContextInterfaceName
|| __TEXT.__text __CTServerConnectionCopyPacketContextInterfaceNameByServiceType
|| __TEXT.__text __CTServerConnectionCopyPhoneBookEntry
|| __TEXT.__text __CTServerConnectionCopyPhoneNumber
|| __TEXT.__text __CTServerConnectionCopyPhoneNumberSignature
|| __TEXT.__text __CTServerConnectionCopyPhoneServiceDeviceList
|| __TEXT.__text __CTServerConnectionCopyPostponementStatus
|| __TEXT.__text __CTServerConnectionCopyProviderNameUsingCarrierBundle
|| __TEXT.__text __CTServerConnectionCopyRegistrationInfo
|| __TEXT.__text __CTServerConnectionCopyReliableNetworkFallbackSettings
|| __TEXT.__text __CTServerConnectionCopyRemoteMobileEquipmentInfo
|| __TEXT.__text __CTServerConnectionCopySIMIdentity
|| __TEXT.__text __CTServerConnectionCopyServingPLMN
|| __TEXT.__text __CTServerConnectionCopyStartDateOfCellularDataUsageRecords
|| __TEXT.__text __CTServerConnectionCopySupportedDataRates
|| __TEXT.__text __CTServerConnectionCopySystemCapabilities
|| __TEXT.__text __CTServerConnectionCopyTraceProperty
|| __TEXT.__text __CTServerConnectionCopyUSSDString
|| __TEXT.__text __CTServerConnectionCopyUsageAlertParameters
|| __TEXT.__text __CTServerConnectionCopyVoiceMailInfo
|| __TEXT.__text __CTServerConnectionCreate
|| __TEXT.__text __CTServerConnectionCreateAndLaunchWithIdentifier
|| __TEXT.__text __CTServerConnectionCreateEncryptedIdentity
|| __TEXT.__text __CTServerConnectionCreateOnRunLoop
|| __TEXT.__text __CTServerConnectionCreateOnTargetQueue
|| __TEXT.__text __CTServerConnectionCreateWithIdentifier
|| __TEXT.__text __CTServerConnectionDataActivationPopupAssertionCreate
|| __TEXT.__text __CTServerConnectionDebugResetSim
|| __TEXT.__text __CTServerConnectionDeviceManagementUpdate
|| __TEXT.__text __CTServerConnectionDisablePCMChannel
|| __TEXT.__text __CTServerConnectionDisableRegistration
|| __TEXT.__text __CTServerConnectionDoCSIPropertyOperation
|| __TEXT.__text __CTServerConnectionDoModuleOperation
|| __TEXT.__text __CTServerConnectionDormancySuspendAssertionCreate
|| __TEXT.__text __CTServerConnectionDormancySuspendAssertionCreateWithExpirationCB
|| __TEXT.__text __CTServerConnectionDropIPPackets
|| __TEXT.__text __CTServerConnectionDumpBasebandState
|| __TEXT.__text __CTServerConnectionDumpMemory
|| __TEXT.__text __CTServerConnectionDumpState
|| __TEXT.__text __CTServerConnectionEchoCancelationAndNoiseReduction
|| __TEXT.__text __CTServerConnectionEnableEmergencyCallBackMode
|| __TEXT.__text __CTServerConnectionEnableHAC
|| __TEXT.__text __CTServerConnectionEnableMediaToDownlink
|| __TEXT.__text __CTServerConnectionEnablePCMChannel
|| __TEXT.__text __CTServerConnectionEnableRegistration
|| __TEXT.__text __CTServerConnectionEnableRemoteDiagnostics
|| __TEXT.__text __CTServerConnectionEnableVoicePrivacy
|| __TEXT.__text __CTServerConnectionEntitlementsClearSecondaryIccids
|| __TEXT.__text __CTServerConnectionEntitlementsGetPreferredRoamingNetworks
|| __TEXT.__text __CTServerConnectionEntitlementsGetSIMStatus
|| __TEXT.__text __CTServerConnectionEntitlementsSetPreferredRoamingNetworks
|| __TEXT.__text __CTServerConnectionEntitlementsSetSecondaryIccids
|| __TEXT.__text __CTServerConnectionEntitlementsSignUpSIMService
|| __TEXT.__text __CTServerConnectionEraseAllUserProfiles
|| __TEXT.__text __CTServerConnectionEraseBasebandSettings
|| __TEXT.__text __CTServerConnectionEraseCellularDataUsageRecords
|| __TEXT.__text __CTServerConnectionEraseCellularDataUsageRecordsEx
|| __TEXT.__text __CTServerConnectionEraseCommCentersPreferences
|| __TEXT.__text __CTServerConnectionEraseNetworkSettings
|| __TEXT.__text __CTServerConnectionEvaluateMobileSubscriberIdentity
|| __TEXT.__text __CTServerConnectionExecuteCommand
|| __TEXT.__text __CTServerConnectionFetchNetworkList
|| __TEXT.__text __CTServerConnectionFetchPhonebook
|| __TEXT.__text __CTServerConnectionFetchTimeFromNetwork
|| __TEXT.__text __CTServerConnectionGetAPNConfiguration
|| __TEXT.__text __CTServerConnectionGetActiveWirelessTechnology
|| __TEXT.__text __CTServerConnectionGetAllowedRadioMode
|| __TEXT.__text __CTServerConnectionGetAttachAPNSettings
|| __TEXT.__text __CTServerConnectionGetAudioLoggingEnabled
|| __TEXT.__text __CTServerConnectionGetCDMAInternationalRoaming
|| __TEXT.__text __CTServerConnectionGetCDRXWithLTEState
|| __TEXT.__text __CTServerConnectionGetCapabilityStatus
|| __TEXT.__text __CTServerConnectionGetCapabilityStatusExtended
|| __TEXT.__text __CTServerConnectionGetCarrierEntitlements
|| __TEXT.__text __CTServerConnectionGetCarrierSpaceUpdates
|| __TEXT.__text __CTServerConnectionGetCellBroadcastCustomPrefForAlertType
|| __TEXT.__text __CTServerConnectionGetCellBroadcastOverrideAccessibilityVibrationSetting
|| __TEXT.__text __CTServerConnectionGetCellBroadcastSettingForAlertType
|| __TEXT.__text __CTServerConnectionGetCellID
|| __TEXT.__text __CTServerConnectionGetCellularDataIsDisallowed
|| __TEXT.__text __CTServerConnectionGetCellularDataIsEnabled
|| __TEXT.__text __CTServerConnectionGetCellularDataIsEnabledEx
|| __TEXT.__text __CTServerConnectionGetCellularDataSettings
|| __TEXT.__text __CTServerConnectionGetCellularUsagePolicyEx
|| __TEXT.__text __CTServerConnectionGetCellularUsagePolicyMirroring
|| __TEXT.__text __CTServerConnectionGetCellularUsageWorkspaceInfoEx
|| __TEXT.__text __CTServerConnectionGetCommCenterInitializationState
|| __TEXT.__text __CTServerConnectionGetDTMFType
|| __TEXT.__text __CTServerConnectionGetDataServiceAvailability
|| __TEXT.__text __CTServerConnectionGetDisallowTelephonyFeature
|| __TEXT.__text __CTServerConnectionGetE911OverLTEModeStatus
|| __TEXT.__text __CTServerConnectionGetE911OverWifiModeStatus
|| __TEXT.__text __CTServerConnectionGetEMBMSSAIListInfo
|| __TEXT.__text __CTServerConnectionGetEMBMSSigInfo
|| __TEXT.__text __CTServerConnectionGetEMBMSStatus
|| __TEXT.__text __CTServerConnectionGetEmergencyCallBackMode
|| __TEXT.__text __CTServerConnectionGetEmergencyCallStatus
|| __TEXT.__text __CTServerConnectionGetEnableOnlyHomeNetwork
|| __TEXT.__text __CTServerConnectionGetEnhancedVoiceLinkQualityMetric
|| __TEXT.__text __CTServerConnectionGetHACState
|| __TEXT.__text __CTServerConnectionGetInterfaceFamilies
|| __TEXT.__text __CTServerConnectionGetLocationAreaCode
|| __TEXT.__text __CTServerConnectionGetManagedCellularProfile
|| __TEXT.__text __CTServerConnectionGetMultiPartyCallCountMaximum
|| __TEXT.__text __CTServerConnectionGetNATTKeepAliveOverCell
|| __TEXT.__text __CTServerConnectionGetNetworkSelectionMode
|| __TEXT.__text __CTServerConnectionGetNetworkSelectionState
|| __TEXT.__text __CTServerConnectionGetNumberOfDeletablePlansInstalled
|| __TEXT.__text __CTServerConnectionGetOTAServerOverride
|| __TEXT.__text __CTServerConnectionGetPLMNPriorityInfo
|| __TEXT.__text __CTServerConnectionGetPacketContextActive
|| __TEXT.__text __CTServerConnectionGetPacketContextActiveByServiceType
|| __TEXT.__text __CTServerConnectionGetPacketContextActiveByServiceTypeExtended
|| __TEXT.__text __CTServerConnectionGetPacketContextCount
|| __TEXT.__text __CTServerConnectionGetPacketContextStatistics
|| __TEXT.__text __CTServerConnectionGetPacketDataLoadInfo
|| __TEXT.__text __CTServerConnectionGetPhonebookEntryCount
|| __TEXT.__text __CTServerConnectionGetRATSelection
|| __TEXT.__text __CTServerConnectionGetRadioAccessTechnology
|| __TEXT.__text __CTServerConnectionGetRadioModuleIsDead
|| __TEXT.__text __CTServerConnectionGetRadioState
|| __TEXT.__text __CTServerConnectionGetRegistrationCauseCode
|| __TEXT.__text __CTServerConnectionGetRegistrationStatus
|| __TEXT.__text __CTServerConnectionGetRemainingPINAttemptCount
|| __TEXT.__text __CTServerConnectionGetRemainingPUKAttemptCount
|| __TEXT.__text __CTServerConnectionGetRemoteBundleInfo
|| __TEXT.__text __CTServerConnectionGetRemoteServerURL
|| __TEXT.__text __CTServerConnectionGetResetCellularAccountSettingsIsAllowed
|| __TEXT.__text __CTServerConnectionGetResetState
|| __TEXT.__text __CTServerConnectionGetSIMStatus
|| __TEXT.__text __CTServerConnectionGetSIMSubscriptionStatus
|| __TEXT.__text __CTServerConnectionGetSIMTrayStatus
|| __TEXT.__text __CTServerConnectionGetShowUsageAlert
|| __TEXT.__text __CTServerConnectionGetSignalStrength
|| __TEXT.__text __CTServerConnectionGetSignalStrengthDisplayValue
|| __TEXT.__text __CTServerConnectionGetSupportedEnhancedLinkQualityMetric
|| __TEXT.__text __CTServerConnectionGetTTYMode
|| __TEXT.__text __CTServerConnectionGetTemperature
|| __TEXT.__text __CTServerConnectionGetTestModeFunction
|| __TEXT.__text __CTServerConnectionGetThumperName
|| __TEXT.__text __CTServerConnectionGetTypeID
|| __TEXT.__text __CTServerConnectionGetUIConfiguredApns
|| __TEXT.__text __CTServerConnectionGetUpdatedCarrierBundle
|| __TEXT.__text __CTServerConnectionGetUplinkFreq
|| __TEXT.__text __CTServerConnectionGetVoiceLinkQualityMetric
|| __TEXT.__text __CTServerConnectionGetVoiceMailAvailable
|| __TEXT.__text __CTServerConnectionGetVoiceMute
|| __TEXT.__text __CTServerConnectionGetVoicePrivacy
|| __TEXT.__text __CTServerConnectionGetXpcConnection
|| __TEXT.__text __CTServerConnectionHandleReply
|| __TEXT.__text __CTServerConnectionHideDataIndicator
|| __TEXT.__text __CTServerConnectionHideRatIndicator
|| __TEXT.__text __CTServerConnectionICloudAccountReset
|| __TEXT.__text __CTServerConnectionInjectCellBroadcastMessage
|| __TEXT.__text __CTServerConnectionInjectCellBroadcastMessageWithWac
|| __TEXT.__text __CTServerConnectionInjectOOSGeofence
|| __TEXT.__text __CTServerConnectionInstallCarrierBundle
|| __TEXT.__text __CTServerConnectionIsAnyCallActiveOrHeld
|| __TEXT.__text __CTServerConnectionIsCDMAInternationalRoamingSettingAllowed
|| __TEXT.__text __CTServerConnectionIsDataAttached
|| __TEXT.__text __CTServerConnectionIsDefaultConnection
|| __TEXT.__text __CTServerConnectionIsEmergencyNumber
|| __TEXT.__text __CTServerConnectionIsEmergencyNumberWithWhitelistIncluded
|| __TEXT.__text __CTServerConnectionIsEncryptedIdentitySupported
|| __TEXT.__text __CTServerConnectionIsInHomeCountry
|| __TEXT.__text __CTServerConnectionIsPhoneNumberCredentialValid
|| __TEXT.__text __CTServerConnectionIsPhoneNumberRegistrationSupported
|| __TEXT.__text __CTServerConnectionIsServiceOverPublicInternet
|| __TEXT.__text __CTServerConnectionIsSilenceAssertionBarred
|| __TEXT.__text __CTServerConnectionIsUserIdentityModuleRequired
|| __TEXT.__text __CTServerConnectionIsValidEmergencyNumber
|| __TEXT.__text __CTServerConnectionKeepAliveAssertionCreate
|| __TEXT.__text __CTServerConnectionLoadManagedCellularProfile
|| __TEXT.__text __CTServerConnectionLockPostponementTicket
|| __TEXT.__text __CTServerConnectionModifyAttachAPNSettings
|| __TEXT.__text __CTServerConnectionNetworkMonitorCreateLogChannel
|| __TEXT.__text __CTServerConnectionNetworkSelectionMenuAvailable
|| __TEXT.__text __CTServerConnectionOTAActivationAssertionCreate
|| __TEXT.__text __CTServerConnectionPINUnlock
|| __TEXT.__text __CTServerConnectionPUKUnlock
|| __TEXT.__text __CTServerConnectionPacketContextAssertionCreate
|| __TEXT.__text __CTServerConnectionPerformInternalVinylOperation
|| __TEXT.__text __CTServerConnectionPerformMigration
|| __TEXT.__text __CTServerConnectionPhoneServicesAccountStatusChanged
|| __TEXT.__text __CTServerConnectionPhoneServicesAddDevice
|| __TEXT.__text __CTServerConnectionPhoneServicesDisableDevice
|| __TEXT.__text __CTServerConnectionPhoneServicesEnableDevice
|| __TEXT.__text __CTServerConnectionPhoneServicesGetDeviceInfo
|| __TEXT.__text __CTServerConnectionPhoneServicesGetDeviceList
|| __TEXT.__text __CTServerConnectionPhoneServicesRemoveDevice
|| __TEXT.__text __CTServerConnectionPreferencesCopyValue
|| __TEXT.__text __CTServerConnectionPreferencesSetValue
|| __TEXT.__text __CTServerConnectionProbeSIMConnectivityStatus
|| __TEXT.__text __CTServerConnectionQueryEnhancedLinkQualityMetric
|| __TEXT.__text __CTServerConnectionRegisterBlockForNotification
|| __TEXT.__text __CTServerConnectionRegisterForEvent
|| __TEXT.__text __CTServerConnectionRegisterForNotification
|| __TEXT.__text __CTServerConnectionRegisterSilentHoursCallback
|| __TEXT.__text __CTServerConnectionRegisterSupportedEnhancedLinkQualityMetric
|| __TEXT.__text __CTServerConnectionRegistrationNotificationAssertionCreate
|| __TEXT.__text __CTServerConnectionReleaseQOS
|| __TEXT.__text __CTServerConnectionRemoveVictimFreq
|| __TEXT.__text __CTServerConnectionReprovisionSim
|| __TEXT.__text __CTServerConnectionRequestQOS
|| __TEXT.__text __CTServerConnectionResetCarrierBundle
|| __TEXT.__text __CTServerConnectionResetModem
|| __TEXT.__text __CTServerConnectionResetModemWithCrashLogs
|| __TEXT.__text __CTServerConnectionResetPacketContextSettings
|| __TEXT.__text __CTServerConnectionResetPacketContextStatistics
|| __TEXT.__text __CTServerConnectionResetUIConfiguredApns
|| __TEXT.__text __CTServerConnectionResumePacketContextSettings
|| __TEXT.__text __CTServerConnectionSavePhonebookEntry
|| __TEXT.__text __CTServerConnectionSelectNetwork
|| __TEXT.__text __CTServerConnectionSelectPhonebook
|| __TEXT.__text __CTServerConnectionSendAppleSafetyAlert
|| __TEXT.__text __CTServerConnectionSendAwdQueriableMetric
|| __TEXT.__text __CTServerConnectionSendBarrier
|| __TEXT.__text __CTServerConnectionSendEnhancedLinkQualityTrafficInfo
|| __TEXT.__text __CTServerConnectionSendRemoteRestoreToDefault
|| __TEXT.__text __CTServerConnectionSendUSSDResponse
|| __TEXT.__text __CTServerConnectionSetActiveAudioSystemConfiguration
|| __TEXT.__text __CTServerConnectionSetAudioLoggingEnabled
|| __TEXT.__text __CTServerConnectionSetAudioPath
|| __TEXT.__text __CTServerConnectionSetBandInfo
|| __TEXT.__text __CTServerConnectionSetBasebandSettings
|| __TEXT.__text __CTServerConnectionSetCDMAInternationalRoaming
|| __TEXT.__text __CTServerConnectionSetCampOnlyMode
|| __TEXT.__text __CTServerConnectionSetCapability
|| __TEXT.__text __CTServerConnectionSetCapabilityExtended
|| __TEXT.__text __CTServerConnectionSetCellBroadcastCustomPrefForAlertType
|| __TEXT.__text __CTServerConnectionSetCellBroadcastSettingForAlertType
|| __TEXT.__text __CTServerConnectionSetCellularDataIsDisallowed
|| __TEXT.__text __CTServerConnectionSetCellularDataIsEnabled
|| __TEXT.__text __CTServerConnectionSetCellularDataIsEnabledEx
|| __TEXT.__text __CTServerConnectionSetCellularUsagePolicy
|| __TEXT.__text __CTServerConnectionSetCellularUsagePolicyEx
|| __TEXT.__text __CTServerConnectionSetCellularUsagePolicyOsVersion
|| __TEXT.__text __CTServerConnectionSetChannelMute
|| __TEXT.__text __CTServerConnectionSetCivicInfoBasedOnCurrentLocation
|| __TEXT.__text __CTServerConnectionSetDTMFType
|| __TEXT.__text __CTServerConnectionSetDefaultConnection
|| __TEXT.__text __CTServerConnectionSetDisallowTelephonyFeature
|| __TEXT.__text __CTServerConnectionSetEMBMSActive
|| __TEXT.__text __CTServerConnectionSetEMBMSSAIInterestedInfo
|| __TEXT.__text __CTServerConnectionSetEnableOnlyHomeNetwork
|| __TEXT.__text __CTServerConnectionSetI2SFormat
|| __TEXT.__text __CTServerConnectionSetInternalManagedState
|| __TEXT.__text __CTServerConnectionSetMasterMute
|| __TEXT.__text __CTServerConnectionSetMaxTemperature
|| __TEXT.__text __CTServerConnectionSetMaxTransmitPower
|| __TEXT.__text __CTServerConnectionSetMixState
|| __TEXT.__text __CTServerConnectionSetOTAServerOverride
|| __TEXT.__text __CTServerConnectionSetPacketContextActive
|| __TEXT.__text __CTServerConnectionSetPacketContextActiveByServiceType
|| __TEXT.__text __CTServerConnectionSetPacketNotificationFilter
|| __TEXT.__text __CTServerConnectionSetPacketProtocolActiveByInterface
|| __TEXT.__text __CTServerConnectionSetPacketProtocolActiveByServiceType
|| __TEXT.__text __CTServerConnectionSetPeriodicTemperatureUpdate
|| __TEXT.__text __CTServerConnectionSetPostponementTicket
|| __TEXT.__text __CTServerConnectionSetRATSelection
|| __TEXT.__text __CTServerConnectionSetReliableNetworkFallbackToCellular
|| __TEXT.__text __CTServerConnectionSetShowUsageAlert
|| __TEXT.__text __CTServerConnectionSetSourceGain
|| __TEXT.__text __CTServerConnectionSetTTYMode
|| __TEXT.__text __CTServerConnectionSetTargetQueue
|| __TEXT.__text __CTServerConnectionSetTestModeFunction
|| __TEXT.__text __CTServerConnectionSetTimeCacheValidityPeriod
|| __TEXT.__text __CTServerConnectionSetTraceProperty
|| __TEXT.__text __CTServerConnectionSetUIConfiguredApns
|| __TEXT.__text __CTServerConnectionSetUsageAlertParameters
|| __TEXT.__text __CTServerConnectionSetVibratorState
|| __TEXT.__text __CTServerConnectionSetVoiceMute
|| __TEXT.__text __CTServerConnectionShouldDiscourageDisableLteDataRate
|| __TEXT.__text __CTServerConnectionShouldWarnDisabledLteMayImpactService
|| __TEXT.__text __CTServerConnectionSilenceAssertionCreate
|| __TEXT.__text __CTServerConnectionSimRefresh
|| __TEXT.__text __CTServerConnectionStandaloneDownloadProfile
|| __TEXT.__text __CTServerConnectionStandaloneGetCachedVinylInfo
|| __TEXT.__text __CTServerConnectionStandaloneResetSelectionOverride
|| __TEXT.__text __CTServerConnectionStandaloneSetSelectionOverride
|| __TEXT.__text __CTServerConnectionStandaloneSetSelectionOverrideNonEsim
|| __TEXT.__text __CTServerConnectionStartAudioTone
|| __TEXT.__text __CTServerConnectionStopAudioTone
|| __TEXT.__text __CTServerConnectionSuspendPacketContextSettings
|| __TEXT.__text __CTServerConnectionTetheringAssertionCreate
|| __TEXT.__text __CTServerConnectionUIMAuthenticate
|| __TEXT.__text __CTServerConnectionUnloadManagedCellularProfile
|| __TEXT.__text __CTServerConnectionUnlockPostponementTicket
|| __TEXT.__text __CTServerConnectionUnregisterForAllNotifications
|| __TEXT.__text __CTServerConnectionUnregisterForEvent
|| __TEXT.__text __CTServerConnectionUnregisterForNotification
|| __TEXT.__text __CTServerConnectionUnregisterSilentHoursCallback
|| __TEXT.__text __CTServerConnectionUpdateAccountWithFeatureOrService
|| __TEXT.__text __CTServerConnectionUpdateCarrierPushToken
|| __TEXT.__text __CTServerConnectionUpdateProtocolQualityOfService
|| __TEXT.__text __CTServerConnectionUpdateQualityOfService
|| __TEXT.__text __CTServerConnectionVerifyCarrierEntitlements
|| __TEXT.__text __CTServerEnableFastDormancy
|| __TEXT.__text __CTServerForceFastDormancy
|| __TEXT.__text __CTServerIsFastDormancyEnabled
|| __TEXT.__text __CTServerSetSupportsVoiceCall
|| __TEXT.__text __ConvertBinaryToHex
|| __TEXT.__text __CreateDirectoriesToPath
|| __TEXT.__text __GetMobileUserDirectory
|| __TEXT.__text __GetMobileUserGID
|| __TEXT.__text __GetMobileUserUID
|| __TEXT.__text __GetWirelessUserDirectory
|| __TEXT.__text __GetWirelessUserGID
|| __TEXT.__text __GetWirelessUserUID
|| __TEXT.__text __SynchronizeCommCenterPreferences
|| __TEXT.__text __Z10asCFString24EntitlementAuthTokenType
|| __TEXT.__text __Z10createPLMNRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_
|| __TEXT.__text __Z10createPLMNii
|| __TEXT.__text __Z10createPLMNiib
|| __TEXT.__text __Z11hasBasebandv
|| __TEXT.__text __Z12createCFPLMNRK3MCCRK3MNC
|| __TEXT.__text __Z15TTYTypeAsString7TTYType
|| __TEXT.__text __Z17isEmergencyNumberRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
|| __TEXT.__text __Z18EmCallTypeAsString23CTCallEmergencyCallType
|| __TEXT.__text __Z22CTGetRootVersionStringv
|| __TEXT.__text __Z22callSourceModeAsString16CCCallSourceMode
|| __TEXT.__text __Z8asString20EntitlementTopicType
|| __TEXT.__text __Z8asString24EntitlementAuthTokenType
|| __TEXT.__text __Z8asStringN19NetworkNotification16NotificationTypeE
|| __TEXT.__text __Z8asStringRK10CEPlanType
|| __TEXT.__text __Z8asStringRK11CEAltServer
|| __TEXT.__text __Z8asStringRK14CEPlanProperty
|| __TEXT.__text __Z8asStringRK18CEPlanSupportedRAT
|| __TEXT.__text __Z8asStringRK9CEDetails
|| __TEXT.__text __Z8formPLMNRK3MCCRK3MNC
|| __TEXT.__text __ZN14CSIPhoneNumber13setBaseNumberEPKc
|| __TEXT.__text __ZN14CSIPhoneNumber13setBaseNumberERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN14CSIPhoneNumber13setDtmfStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN14CSIPhoneNumber14setMMIValidityE11MMIValidity
|| __TEXT.__text __ZN14CSIPhoneNumber15setTypeOfNumberE15PhoneNumberType
|| __TEXT.__text __ZN14CSIPhoneNumber16setTypeOfAddressEi
|| __TEXT.__text __ZN14CSIPhoneNumber19setCLIRRequestStateE16CLIRRequestState
|| __TEXT.__text __ZN14CSIPhoneNumber20setEmergencyCategoryEj
|| __TEXT.__text __ZN14CSIPhoneNumber21setIsEmVoiceSupportedEb
|| __TEXT.__text __ZN14CSIPhoneNumber22setIsListedAsEmergencyEb
|| __TEXT.__text __ZN14CSIPhoneNumber23setIsEmSMSTextSupportedEb
|| __TEXT.__text __ZN14CSIPhoneNumber27convertLettersToPhoneNumberEv
|| __TEXT.__text __ZN14CSIPhoneNumberC1EPKc
|| __TEXT.__text __ZN14CSIPhoneNumberC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN14CSIPhoneNumberC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE15PhoneNumberType
|| __TEXT.__text __ZN14CSIPhoneNumberC1EiRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN14CSIPhoneNumberC1Ev
|| __TEXT.__text __ZN14CSIPhoneNumberC2EPKc
|| __TEXT.__text __ZN14CSIPhoneNumberC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN14CSIPhoneNumberC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE15PhoneNumberType
|| __TEXT.__text __ZN14CSIPhoneNumberC2EiRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN14CSIPhoneNumberC2Ev
|| __TEXT.__text __ZN19NetworkNotification14_ConvertToBoolEPK10__CFStringRPKv
|| __TEXT.__text __ZN19NetworkNotification14_ConvertToDateEPK10__CFStringRPKv
|| __TEXT.__text __ZN19NetworkNotification14setValueForKeyEPK10__CFStringS2_NS_24NotificationTrackChangesE
|| __TEXT.__text __ZN19NetworkNotification15_GetTypeForNameEPK10__CFString
|| __TEXT.__text __ZN19NetworkNotification16_ConvertToNumberEPK10__CFStringRPKv
|| __TEXT.__text __ZN19NetworkNotification18notificationStringEv
|| __TEXT.__text __ZN19NetworkNotification18parsedNotificationEv
|| __TEXT.__text __ZN19NetworkNotification21_GetFinalFormForValueEPK10__CFStringS2_RPKv
|| __TEXT.__text __ZN19NetworkNotification24_parseNotificationStringEv
|| __TEXT.__text __ZN19NetworkNotification30_NotificationKeyIsValidForTypeEPK10__CFString
|| __TEXT.__text __ZN19NetworkNotification3urlEv
|| __TEXT.__text __ZN19NetworkNotification4nameEv
|| __TEXT.__text __ZN19NetworkNotification4typeEv
|| __TEXT.__text __ZN19NetworkNotificationC1EPK10__CFString
|| __TEXT.__text __ZN19NetworkNotificationC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN19NetworkNotificationC2EPK10__CFString
|| __TEXT.__text __ZN19NetworkNotificationC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN19NetworkNotificationD1Ev
|| __TEXT.__text __ZN19NetworkNotificationD2Ev
|| __TEXT.__text __ZN3MCC5clearEv
|| __TEXT.__text __ZN3MCCC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN3MCCC1ERKS_
|| __TEXT.__text __ZN3MCCC1Et
|| __TEXT.__text __ZN3MCCC1EtRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN3MCCC1Ev
|| __TEXT.__text __ZN3MCCC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN3MCCC2ERKS_
|| __TEXT.__text __ZN3MCCC2Et
|| __TEXT.__text __ZN3MCCC2EtRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN3MCCC2Ev
|| __TEXT.__text __ZN3MCCaSERKS_
|| __TEXT.__text __ZN3MNCC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN3MNCC1EtRK3MCC
|| __TEXT.__text __ZN3MNCC1EtRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN3MNCC1Ev
|| __TEXT.__text __ZN3MNCC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN3MNCC2EtRK3MCC
|| __TEXT.__text __ZN3MNCC2EtRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN3MNCC2Ev
|| __TEXT.__text __ZN9MCCAndMNCC1ERK3MCCRK3MNC
|| __TEXT.__text __ZN9MCCAndMNCC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN9MCCAndMNCC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_
|| __TEXT.__text __ZN9MCCAndMNCC1Ett
|| __TEXT.__text __ZN9MCCAndMNCC1Ev
|| __TEXT.__text __ZN9MCCAndMNCC2ERK3MCCRK3MNC
|| __TEXT.__text __ZN9MCCAndMNCC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN9MCCAndMNCC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_
|| __TEXT.__text __ZN9MCCAndMNCC2Ett
|| __TEXT.__text __ZN9MCCAndMNCC2Ev
|| __TEXT.__text __ZNK11CEAltServereqERKS_
|| __TEXT.__text __ZNK14CEPlanPropertyeqERKS_
|| __TEXT.__text __ZNK14CSIPhoneNumber12getFormattedEv
|| __TEXT.__text __ZNK14CSIPhoneNumber13getBaseNumberEv
|| __TEXT.__text __ZNK14CSIPhoneNumber13getDtmfStringEv
|| __TEXT.__text __ZNK14CSIPhoneNumber13getFullNumberEv
|| __TEXT.__text __ZNK14CSIPhoneNumber14getMMIValidityEv
|| __TEXT.__text __ZNK14CSIPhoneNumber15getTypeOfNumberEv
|| __TEXT.__text __ZNK14CSIPhoneNumber16getTypeOfAddressEv
|| __TEXT.__text __ZNK14CSIPhoneNumber17hasSameBaseNumberERKS_
|| __TEXT.__text __ZNK14CSIPhoneNumber19getCLIRRequestStateEv
|| __TEXT.__text __ZNK14CSIPhoneNumber19getFullNumberHelperENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZNK14CSIPhoneNumber20getEmergencyCategoryEv
|| __TEXT.__text __ZNK14CSIPhoneNumber21getFullOriginalNumberEv
|| __TEXT.__text __ZNK14CSIPhoneNumber21getIsEmVoiceSupportedEv
|| __TEXT.__text __ZNK14CSIPhoneNumber22getIsListedAsEmergencyEv
|| __TEXT.__text __ZNK14CSIPhoneNumber23getIsEmSMSTextSupportedEv
|| __TEXT.__text __ZNK14CSIPhoneNumber23hasEmergencyCategorySetEv
|| __TEXT.__text __ZNK14CSIPhoneNumber26getBaseNumberNoPauseDigitsEv
|| __TEXT.__text __ZNK14CSIPhoneNumber26getFullNumberNoPauseDigitsEv
|| __TEXT.__text __ZNK14CSIPhoneNumber8getIsMMIEv
|| __TEXT.__text __ZNK14CSIPhoneNumber9getIsUSSDEv
|| __TEXT.__text __ZNK14CSIPhoneNumbereqERKS_
|| __TEXT.__text __ZNK14CSIPhoneNumberneERKS_
|| __TEXT.__text __ZNK19NetworkNotification24copyUnparsedNotificationEv
|| __TEXT.__text __ZNK3MCC11getIntValueEv
|| __TEXT.__text __ZNK3MCC14getStringValueEv
|| __TEXT.__text __ZNK3MCC5validEv
|| __TEXT.__text __ZNK3MCCeqERKS_
|| __TEXT.__text __ZNK3MCCgtERKS_
|| __TEXT.__text __ZNK3MCCltERKS_
|| __TEXT.__text __ZNK3MCCneERKS_
|| __TEXT.__text __ZNK3MNC12isThreeDigitEv
|| __TEXT.__text __ZNK3MNC15getIntegerWidthEv
|| __TEXT.__text __ZNK9CEDetailseqERKS_
|| __TEXT.__text __ZNK9MCCAndMNC14getStringValueEv
|| __TEXT.__text __ZNK9MCCAndMNC6getMccEv
|| __TEXT.__text __ZNK9MCCAndMNC6getMncEv
|| __TEXT.__text __ZNK9MCCAndMNCeqERKS_
|| __TEXT.__text __ZNK9MCCAndMNCltERKS_
|| __TEXT.__text __ZNK9MCCAndMNCneERKS_
|| __TEXT.__text __ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK9MCCAndMNC
|| __TEXT.__text __is3DigitMNCWithIMSI
|| __TEXT.__text __is3DigitMNCWithMCC
|| __TEXT.__text _asString
|| __TEXT.__text _createUuidBytes
|| __TEXT.__text _ctConvertCdmaBandToInteger
|| __TEXT.__text _ctConvertCdmaBandToMask
|| __TEXT.__text _ctConvertGsmBandToInteger
|| __TEXT.__text _ctConvertGsmBandToMask
|| __TEXT.__text _ctConvertLteBandToInteger
|| __TEXT.__text _ctConvertLteBandToMask
|| __TEXT.__text _ctConvertNR5GBandToInteger
|| __TEXT.__text _ctConvertNrBandToMask
|| __TEXT.__text _ctConvertTdsBandToInteger
|| __TEXT.__text _ctConvertTdsBandToMask
|| __TEXT.__text _ctConvertUmtsBandToInteger
|| __TEXT.__text _ctConvertUmtsBandToMask
|| __TEXT.__text _getClientKeyForEntitlementType
|| __TEXT.__text _getEntitlementTypeFromClientKey
|| __TEXT.__text _kCTDataConnectionServiceTypeFromIndex
|| __TEXT.__text _kCTDataConnectionTypeFromString
|| __TEXT.__text _radioStateAsString
__ CommonUtilities: _CUTWeakLinkClass
__ CoreAnalytics: _analytics_send_exploding_event_lazy
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAllocatorAllocate
__ CoreFoundation: _CFAllocatorDeallocate
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateCopy
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayCreateMutableCopy
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetFirstIndexOfValue
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayRemoveAllValues
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFBundleGetTypeID
__ CoreFoundation: _CFCopyHomeDirectoryURLForUser
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetMutableBytePtr
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDataSetLength
__ CoreFoundation: _CFDateCreate
__ CoreFoundation: _CFDateFormatterCreate
__ CoreFoundation: _CFDateFormatterCreateDateFromString
__ CoreFoundation: _CFDateFormatterSetFormat
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryApplyFunction
__ CoreFoundation: _CFDictionaryContainsValue
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryGetValueIfPresent
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFErrorCopyDescription
__ CoreFoundation: _CFErrorGetTypeID
__ CoreFoundation: _CFGetAllocator
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFHash
__ CoreFoundation: _CFMachPortCreateWithPort
__ CoreFoundation: _CFMachPortInvalidate
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberFormatterCreate
__ CoreFoundation: _CFNumberFormatterCreateNumberFromString
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFPropertyListCreateData
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFSetContainsValue
__ CoreFoundation: _CFSetCreate
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringAppendFormat
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCompareWithOptions
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFStringFindWithOptions
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetIntValue
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFURLCopyFileSystemPath
__ CoreFoundation: _CFURLCreateFromFileSystemRepresentation
__ CoreFoundation: _CFURLCreateWithBytes
__ CoreFoundation: _CFURLCreateWithString
__ CoreFoundation: _CFUUIDCreateFromString
__ CoreFoundation: _CFUUIDCreateFromUUIDBytes
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _CFUUIDGetUUIDBytes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: __CFRuntimeCreateInstance
__ CoreFoundation: __CFRuntimeRegisterClass
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSMakeSpecialForwardingCaptureBlock
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAbsoluteTimeIntervalSince1970
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFTypeSetCallBacks
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSProxy
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: _OSSpinLockLock
__ libSystem.B.dylib: _OSSpinLockUnlock
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __Block_signature
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___tolower
__ libSystem.B.dylib: ___toupper
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_error_termination_imminent
__ libSystem.B.dylib: __xpc_type_array
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_data
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_null
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: __xpc_type_uuid
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _chmod
__ libSystem.B.dylib: _chown
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_f
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_once_f
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_context
__ libSystem.B.dylib: _dispatch_set_finalizer_f
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _getpwnam
__ libSystem.B.dylib: _gmtime
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_port_mod_refs
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_release
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_state_remove_handler
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strcasecmp
__ libSystem.B.dylib: _strchr
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strftime
__ libSystem.B.dylib: _strlcat
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strptime
__ libSystem.B.dylib: _strrchr
__ libSystem.B.dylib: _strtok_r
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _syslog
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _timegm
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_array_get_value
__ libSystem.B.dylib: _xpc_bool_create
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_barrier
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply_sync
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_copy_description
__ libSystem.B.dylib: _xpc_data_create
__ libSystem.B.dylib: _xpc_data_get_bytes_ptr
__ libSystem.B.dylib: _xpc_data_get_length
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_count
__ libSystem.B.dylib: _xpc_dictionary_get_data
__ libSystem.B.dylib: _xpc_dictionary_get_remote_connection
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_double_create
__ libSystem.B.dylib: _xpc_equal
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_int64_create
__ libSystem.B.dylib: _xpc_null_create
__ libSystem.B.dylib: _xpc_release
__ libSystem.B.dylib: _xpc_retain
__ libSystem.B.dylib: _xpc_string_create
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: _xpc_uint64_create
__ libSystem.B.dylib: _xpc_uuid_get_bytes
__ libTelephonyUtilDynamic.dylib: __ZN3ctu10UnfairLock13native_handleEv
__ libTelephonyUtilDynamic.dylib: __ZN3ctu11OsLogLoggerC1EPKcS2_
__ libTelephonyUtilDynamic.dylib: __ZN3ctu11OsLogLoggerC1ERKS0_
__ libTelephonyUtilDynamic.dylib: __ZN3ctu11OsLogLoggerD1Ev
__ libTelephonyUtilDynamic.dylib: __ZN3ctu2cf12convert_copyERPK10__CFStringRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjPK13__CFAllocator
__ libTelephonyUtilDynamic.dylib: __ZN3ctu2cf6assignERNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPK10__CFString
__ libTelephonyUtilDynamic.dylib: __ZN3ctu2cf6assignERNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKv
__ libTelephonyUtilDynamic.dylib: __ZN3ctu2cf6assignERbPK11__CFBoolean
__ libTelephonyUtilDynamic.dylib: __ZN3ctu2cf6assignERxPK10__CFNumber
__ libTelephonyUtilDynamic.dylib: __ZN3ctu3hexEPKvm
__ libTelephonyUtilDynamic.dylib: __ZN3ctu3hexERKNSt3__16vectorIhNS0_9allocatorIhEEEE
__ libTelephonyUtilDynamic.dylib: __ZN3ctu9cf_to_xpcEPKv
__ libTelephonyUtilDynamic.dylib: __ZN3ctu9xpc_to_cfEPv
__ libTelephonyUtilDynamic.dylib: __ZN3xpc10auto_reply7deleterEPNS_4dictE
__ libTelephonyUtilDynamic.dylib: __ZN3xpc19dyn_cast_or_defaultERKNS_6objectERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
__ libTelephonyUtilDynamic.dylib: __ZN3xpc19dyn_cast_or_defaultERKNS_6objectEb
__ libTelephonyUtilDynamic.dylib: __ZN3xpc19dyn_cast_or_defaultERKNS_6objectEd
__ libTelephonyUtilDynamic.dylib: __ZN3xpc19dyn_cast_or_defaultERKNS_6objectEi
__ libTelephonyUtilDynamic.dylib: __ZN3xpc19dyn_cast_or_defaultERKNS_6objectEj
__ libTelephonyUtilDynamic.dylib: __ZN3xpc19dyn_cast_or_defaultERKNS_6objectEl
__ libTelephonyUtilDynamic.dylib: __ZN3xpc19dyn_cast_or_defaultERKNS_6objectEx
__ libTelephonyUtilDynamic.dylib: __ZN3xpc19dyn_cast_or_defaultERKNS_6objectEy
__ libTelephonyUtilDynamic.dylib: __ZN3xpc6bridgeERKNS_6objectE
__ libTelephonyUtilDynamic.dylib: __ZNK3xpc6object9to_stringEv
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
__ libc++.1.dylib: __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC1ERS3_b
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERd
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERt
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEb
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__15mutexD1Ev
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__119__shared_weak_countE
__ libc++.1.dylib: __ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTTNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv119__pointer_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__function_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv121__vmi_class_type_infoE
__ libc++.1.dylib: __ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___gxx_personality_v0
__ libcupolicy.dylib: _network_usage_policy_create_client
__ libcupolicy.dylib: _network_usage_policy_destroy_client
__ libcupolicy.dylib: _network_usage_policy_set_changed_handler
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyCppObjectAtomic
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_copyMethodDescriptionList
__ libobjc.A.dylib: _protocol_copyProtocolList
__ libobjc.A.dylib: _protocol_getMethodDescription
CTSweetgumDataPlanMetricsError : NSObject
  // class methods
  +[CTSweetgumDataPlanMetricsError errorDescriptionForCode:]


CTLocalPlan : CTPlan
 @property  CTPlanIdentifier *planID

  // class methods
  +[CTLocalPlan supportsSecureCoding]

  // instance methods
  -[CTLocalPlan encodeWithCoder:]
  -[CTLocalPlan .cxx_destruct]
  -[CTLocalPlan initWithCoder:]
  -[CTLocalPlan initWithPlanID:]
  -[CTLocalPlan planID]
  -[CTLocalPlan setPlanID:]


CTSweetgumUsagePlanItemVoice : NSObject <NSSecureCoding>
 @property  NSString *minutesCapacity
 @property  NSString *minutesUsed

  // class methods
  +[CTSweetgumUsagePlanItemVoice supportsSecureCoding]

  // instance methods
  -[CTSweetgumUsagePlanItemVoice encodeWithCoder:]
  -[CTSweetgumUsagePlanItemVoice .cxx_destruct]
  -[CTSweetgumUsagePlanItemVoice isEqual:]
  -[CTSweetgumUsagePlanItemVoice init]
  -[CTSweetgumUsagePlanItemVoice initWithCoder:]
  -[CTSweetgumUsagePlanItemVoice minutesCapacity]
  -[CTSweetgumUsagePlanItemVoice setMinutesCapacity:]
  -[CTSweetgumUsagePlanItemVoice minutesUsed]
  -[CTSweetgumUsagePlanItemVoice setMinutesUsed:]


CTPriVersion : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *majorVersion
 @property  NSNumber *minorVersion
 @property  NSNumber *releaseVersion

  // class methods
  +[CTPriVersion supportsSecureCoding]

  // instance methods
  -[CTPriVersion setMajorVersion:]
  -[CTPriVersion majorVersion]
  -[CTPriVersion encodeWithCoder:]
  -[CTPriVersion .cxx_destruct]
  -[CTPriVersion minorVersion]
  -[CTPriVersion copyWithZone:]
  -[CTPriVersion initWithCoder:]
  -[CTPriVersion setMinorVersion:]
  -[CTPriVersion releaseVersion]
  -[CTPriVersion setReleaseVersion:]


CoreTelephonyClientDelegateProxy : NSProxy <CoreTelephonyClientDelegateProxyInterface>
 @property  id delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CoreTelephonyClientDelegateProxy methodSignatureForSelector:]
  -[CoreTelephonyClientDelegateProxy setDelegate:]
  -[CoreTelephonyClientDelegateProxy delegate]
  -[CoreTelephonyClientDelegateProxy .cxx_construct]
  -[CoreTelephonyClientDelegateProxy .cxx_destruct]
  -[CoreTelephonyClientDelegateProxy initWithQueue:]
  -[CoreTelephonyClientDelegateProxy forwardInvocation:]


CTTetheringStatus : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *carrierEnabled
 @property  NSNumber *userAuthenticated
 @property  NSNumber *asserted
 @property  NSNumber *activationFailure
 @property  NSNumber *misPdpMaxHosts
 @property  CTDataConnectionAvailabilityStatus *connectionAvailabilityStatus
 @property  CTDataConnectionStatus *connectionStatus
 @property  CTXPCServiceSubscriptionContext *context

  // class methods
  +[CTTetheringStatus supportsSecureCoding]

  // instance methods
  -[CTTetheringStatus userAuthenticated]
  -[CTTetheringStatus connectionStatus]
  -[CTTetheringStatus setActivationFailure:]
  -[CTTetheringStatus encodeWithCoder:]
  -[CTTetheringStatus setAsserted:]
  -[CTTetheringStatus setCarrierEnabled:]
  -[CTTetheringStatus .cxx_destruct]
  -[CTTetheringStatus setConnectionAvailabilityStatus:]
  -[CTTetheringStatus asserted]
  -[CTTetheringStatus setMisPdpMaxHosts:]
  -[CTTetheringStatus activationFailure]
  -[CTTetheringStatus setContext:]
  -[CTTetheringStatus copyWithZone:]
  -[CTTetheringStatus carrierEnabled]
  -[CTTetheringStatus setUserAuthenticated:]
  -[CTTetheringStatus context]
  -[CTTetheringStatus setConnectionStatus:]
  -[CTTetheringStatus connectionAvailabilityStatus]
  -[CTTetheringStatus misPdpMaxHosts]
  -[CTTetheringStatus initWithCoder:]


CTPlanTransferAttributes : NSObject <NSSecureCoding>
 @property  unsigned long transferCapability
 @property  unsigned long transferStatus
 @property  BOOL isSecuredFlow
 @property  NSString *transferEndpoint

  // class methods
  +[CTPlanTransferAttributes supportsSecureCoding]

  // instance methods
  -[CTPlanTransferAttributes encodeWithCoder:]
  -[CTPlanTransferAttributes .cxx_destruct]
  -[CTPlanTransferAttributes isEqual:]
  -[CTPlanTransferAttributes init]
  -[CTPlanTransferAttributes initWithCoder:]
  -[CTPlanTransferAttributes initWithTransferCapability:transferStatus:isSecuredFlow:transferEndpoint:]
  -[CTPlanTransferAttributes transferCapability]
  -[CTPlanTransferAttributes setTransferCapability:]
  -[CTPlanTransferAttributes transferStatus]
  -[CTPlanTransferAttributes setTransferStatus:]
  -[CTPlanTransferAttributes isSecuredFlow]
  -[CTPlanTransferAttributes setIsSecuredFlow:]
  -[CTPlanTransferAttributes transferEndpoint]
  -[CTPlanTransferAttributes setTransferEndpoint:]


CTServiceDisconnectionStatus : NSObject <NSCopying, NSSecureCoding>
 @property  int contextType
 @property  NSString *apnName
 @property  BOOL activationFailure
 @property  NSNumber *connectionMask
 @property  int error
 @property  NSNumber *rawCauseCode
 @property  NSNumber *pdp

  // class methods
  +[CTServiceDisconnectionStatus supportsSecureCoding]

  // instance methods
  -[CTServiceDisconnectionStatus setActivationFailure:]
  -[CTServiceDisconnectionStatus encodeWithCoder:]
  -[CTServiceDisconnectionStatus apnName]
  -[CTServiceDisconnectionStatus error]
  -[CTServiceDisconnectionStatus .cxx_destruct]
  -[CTServiceDisconnectionStatus setError:]
  -[CTServiceDisconnectionStatus activationFailure]
  -[CTServiceDisconnectionStatus pdp]
  -[CTServiceDisconnectionStatus setApnName:]
  -[CTServiceDisconnectionStatus copyWithZone:]
  -[CTServiceDisconnectionStatus contextType]
  -[CTServiceDisconnectionStatus setPdp:]
  -[CTServiceDisconnectionStatus setContextType:]
  -[CTServiceDisconnectionStatus initWithCoder:]
  -[CTServiceDisconnectionStatus connectionMask]
  -[CTServiceDisconnectionStatus setConnectionMask:]
  -[CTServiceDisconnectionStatus rawCauseCode]
  -[CTServiceDisconnectionStatus setRawCauseCode:]


CTSweetgumUsagePlanMetrics : NSObject <NSSecureCoding>
 @property  NSString *planLabel
 @property  long long planCategory
 @property  BOOL currentUsedPlan
 @property  CTSweetgumUsagePlanItemData *dataUsage
 @property  CTSweetgumUsagePlanItemMessages *messages
 @property  CTSweetgumUsagePlanItemVoice *voice
 @property  NSString *remainingBalance
 @property  BOOL throttled
 @property  NSDate *lastUpdatedAt

  // class methods
  +[CTSweetgumUsagePlanMetrics supportsSecureCoding]

  // instance methods
  -[CTSweetgumUsagePlanMetrics setVoice:]
  -[CTSweetgumUsagePlanMetrics encodeWithCoder:]
  -[CTSweetgumUsagePlanMetrics messages]
  -[CTSweetgumUsagePlanMetrics voice]
  -[CTSweetgumUsagePlanMetrics .cxx_destruct]
  -[CTSweetgumUsagePlanMetrics throttled]
  -[CTSweetgumUsagePlanMetrics setThrottled:]
  -[CTSweetgumUsagePlanMetrics dataUsage]
  -[CTSweetgumUsagePlanMetrics isEqual:]
  -[CTSweetgumUsagePlanMetrics init]
  -[CTSweetgumUsagePlanMetrics initWithCoder:]
  -[CTSweetgumUsagePlanMetrics planLabel]
  -[CTSweetgumUsagePlanMetrics setPlanLabel:]
  -[CTSweetgumUsagePlanMetrics planCategory]
  -[CTSweetgumUsagePlanMetrics setPlanCategory:]
  -[CTSweetgumUsagePlanMetrics currentUsedPlan]
  -[CTSweetgumUsagePlanMetrics setCurrentUsedPlan:]
  -[CTSweetgumUsagePlanMetrics setDataUsage:]
  -[CTSweetgumUsagePlanMetrics setMessages:]
  -[CTSweetgumUsagePlanMetrics remainingBalance]
  -[CTSweetgumUsagePlanMetrics setRemainingBalance:]
  -[CTSweetgumUsagePlanMetrics lastUpdatedAt]
  -[CTSweetgumUsagePlanMetrics setLastUpdatedAt:]


CTSupportedMaxDataRates : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *rates

  // class methods
  +[CTSupportedMaxDataRates supportsSecureCoding]

  // instance methods
  -[CTSupportedMaxDataRates encodeWithCoder:]
  -[CTSupportedMaxDataRates .cxx_destruct]
  -[CTSupportedMaxDataRates rates]
  -[CTSupportedMaxDataRates copyWithZone:]
  -[CTSupportedMaxDataRates initWithCoder:]
  -[CTSupportedMaxDataRates initWithRates:]
  -[CTSupportedMaxDataRates setRates:]


CTSweetgumUsageInfo : NSObject <NSSecureCoding>
 @property  NSArray *accountMetrics

  // class methods
  +[CTSweetgumUsageInfo supportsSecureCoding]

  // instance methods
  -[CTSweetgumUsageInfo encodeWithCoder:]
  -[CTSweetgumUsageInfo .cxx_destruct]
  -[CTSweetgumUsageInfo isEqual:]
  -[CTSweetgumUsageInfo init]
  -[CTSweetgumUsageInfo initWithCoder:]
  -[CTSweetgumUsageInfo accountMetrics]
  -[CTSweetgumUsageInfo setAccountMetrics:]


CTDataConnectionAvailabilityStatus : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL available
 @property  int csiError

  // class methods
  +[CTDataConnectionAvailabilityStatus supportsSecureCoding]

  // instance methods
  -[CTDataConnectionAvailabilityStatus available]
  -[CTDataConnectionAvailabilityStatus setAvailable:]
  -[CTDataConnectionAvailabilityStatus encodeWithCoder:]
  -[CTDataConnectionAvailabilityStatus copyWithZone:]
  -[CTDataConnectionAvailabilityStatus initWithCoder:]
  -[CTDataConnectionAvailabilityStatus csiError]
  -[CTDataConnectionAvailabilityStatus setCsiError:]


CTSweetgumPlanGroup : NSObject <NSSecureCoding>
 @property  long long planCategory
 @property  NSArray *plans

  // class methods
  +[CTSweetgumPlanGroup supportsSecureCoding]

  // instance methods
  -[CTSweetgumPlanGroup encodeWithCoder:]
  -[CTSweetgumPlanGroup .cxx_destruct]
  -[CTSweetgumPlanGroup isEqual:]
  -[CTSweetgumPlanGroup init]
  -[CTSweetgumPlanGroup initWithCoder:]
  -[CTSweetgumPlanGroup planCategory]
  -[CTSweetgumPlanGroup setPlanCategory:]
  -[CTSweetgumPlanGroup plans]
  -[CTSweetgumPlanGroup setPlans:]


CTRatSelection : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned char mask
 @property  NSString *selection
 @property  NSString *preferred

  // class methods
  +[CTRatSelection supportsSecureCoding]

  // instance methods
  -[CTRatSelection mask]
  -[CTRatSelection selection]
  -[CTRatSelection setSelection:]
  -[CTRatSelection setPreferred:]
  -[CTRatSelection preferred]
  -[CTRatSelection encodeWithCoder:]
  -[CTRatSelection .cxx_destruct]
  -[CTRatSelection setMask:]
  -[CTRatSelection copyWithZone:]
  -[CTRatSelection initWithCoder:]


CTRegistrationDisplayStatus : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *registrationDisplayStatus
 @property  BOOL isInHomeCountry
 @property  BOOL changedDueToSimRemoval
 @property  BOOL isRegistrationForcedHome

  // class methods
  +[CTRegistrationDisplayStatus supportsSecureCoding]

  // instance methods
  -[CTRegistrationDisplayStatus encodeWithCoder:]
  -[CTRegistrationDisplayStatus setRegistrationDisplayStatus:]
  -[CTRegistrationDisplayStatus isInHomeCountry]
  -[CTRegistrationDisplayStatus .cxx_destruct]
  -[CTRegistrationDisplayStatus setIsRegistrationForcedHome:]
  -[CTRegistrationDisplayStatus setChangedDueToSimRemoval:]
  -[CTRegistrationDisplayStatus copyWithZone:]
  -[CTRegistrationDisplayStatus setIsInHomeCountry:]
  -[CTRegistrationDisplayStatus registrationDisplayStatus]
  -[CTRegistrationDisplayStatus changedDueToSimRemoval]
  -[CTRegistrationDisplayStatus isRegistrationForcedHome]
  -[CTRegistrationDisplayStatus initWithCoder:]


CTSweetgumDataPlanMetricsItem : NSObject <NSSecureCoding>
 @property  NSNumber *capacityBytes

  // class methods
  +[CTSweetgumDataPlanMetricsItem supportsSecureCoding]

  // instance methods
  -[CTSweetgumDataPlanMetricsItem encodeWithCoder:]
  -[CTSweetgumDataPlanMetricsItem .cxx_destruct]
  -[CTSweetgumDataPlanMetricsItem isEqual:]
  -[CTSweetgumDataPlanMetricsItem init]
  -[CTSweetgumDataPlanMetricsItem initWithCoder:]
  -[CTSweetgumDataPlanMetricsItem capacityBytes]
  -[CTSweetgumDataPlanMetricsItem setCapacityBytes:]


CTNetwork : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  NSString *plmn
 @property  NSString *rat

  // class methods
  +[CTNetwork supportsSecureCoding]

  // instance methods
  -[CTNetwork encodeWithCoder:]
  -[CTNetwork .cxx_destruct]
  -[CTNetwork setName:]
  -[CTNetwork copyWithZone:]
  -[CTNetwork setRat:]
  -[CTNetwork name]
  -[CTNetwork initWithCoder:]
  -[CTNetwork plmn]
  -[CTNetwork setPlmn:]
  -[CTNetwork rat]


CTSweetgumUserConsentFlowInfo : NSObject <NSSecureCoding>
 @property  NSString *webURL
 @property  NSString *postData

  // class methods
  +[CTSweetgumUserConsentFlowInfo supportsSecureCoding]

  // instance methods
  -[CTSweetgumUserConsentFlowInfo encodeWithCoder:]
  -[CTSweetgumUserConsentFlowInfo webURL]
  -[CTSweetgumUserConsentFlowInfo .cxx_destruct]
  -[CTSweetgumUserConsentFlowInfo setWebURL:]
  -[CTSweetgumUserConsentFlowInfo isEqual:]
  -[CTSweetgumUserConsentFlowInfo init]
  -[CTSweetgumUserConsentFlowInfo initWithCoder:]
  -[CTSweetgumUserConsentFlowInfo postData]
  -[CTSweetgumUserConsentFlowInfo setPostData:]


CTMessage : NSObject
 @property  NSArray *recipients
 @property  NSDate *date
 @property  NSArray *items
 @property  NSDictionary *rawHeaders
 @property  unsigned int replaceMessage
 @property  unsigned int messageId
 @property  int messageType
 @property  CTPhoneNumber *serviceCenter
 @property  NSString *subject
 @property  NSObject<CTMessageAddress><NSCopying> *sender
 @property  NSString *contentType
 @property  NSString *countryCode
 @property  NSUUID *uniqueIdentifier
 @property  BOOL bypassSupportedMessageModesCheck
 @property  CTXPCServiceSubscriptionContext *context
 @property  BOOL replyEnabled
 @property  int smsType

  // instance methods
  -[CTMessage setSender:]
  -[CTMessage recipients]
  -[CTMessage subject]
  -[CTMessage contentType]
  -[CTMessage messageId]
  -[CTMessage setUniqueIdentifier:]
  -[CTMessage setCountryCode:]
  -[CTMessage setMessageType:]
  -[CTMessage setSubject:]
  -[CTMessage addRecipient:]
  -[CTMessage date]
  -[CTMessage .cxx_destruct]
  -[CTMessage serviceCenter]
  -[CTMessage items]
  -[CTMessage setContext:]
  -[CTMessage uniqueIdentifier]
  -[CTMessage context]
  -[CTMessage sender]
  -[CTMessage messageType]
  -[CTMessage countryCode]
  -[CTMessage setRecipients:]
  -[CTMessage setContentType:]
  -[CTMessage initWithDate:]
  -[CTMessage init]
  -[CTMessage setServiceCenter:]
  -[CTMessage setRawHeaders:]
  -[CTMessage setReplaceMessage:]
  -[CTMessage removeRecipient:]
  -[CTMessage removeRecipientsInArray:]
  -[CTMessage setRecipient:]
  -[CTMessage addPhoneRecipient:]
  -[CTMessage addEmailRecipient:]
  -[CTMessage addText:]
  -[CTMessage addData:withContentType:]
  -[CTMessage addPart:]
  -[CTMessage removePartAtIndex:]
  -[CTMessage contentTypeParameterWithName:]
  -[CTMessage addContentTypeParameterWithName:value:]
  -[CTMessage allContentTypeParameterNames]
  -[CTMessage setReplyEnabled:]
  -[CTMessage setMessageId:]
  -[CTMessage rawHeaders]
  -[CTMessage replaceMessage]
  -[CTMessage bypassSupportedMessageModesCheck]
  -[CTMessage setBypassSupportedMessageModesCheck:]
  -[CTMessage replyEnabled]
  -[CTMessage smsType]
  -[CTMessage setSmsType:]


CTSweetgumUsagePlanItemData : NSObject <NSSecureCoding>
 @property  long long units
 @property  NSString *capacity
 @property  NSString *maxDataBeforeThrottling
 @property  NSString *thisDeviceDataUsed
 @property  NSString *sharedDataUsed
 @property  NSString *sharedPlanIdentifier

  // class methods
  +[CTSweetgumUsagePlanItemData supportsSecureCoding]

  // instance methods
  -[CTSweetgumUsagePlanItemData setCapacity:]
  -[CTSweetgumUsagePlanItemData capacity]
  -[CTSweetgumUsagePlanItemData units]
  -[CTSweetgumUsagePlanItemData encodeWithCoder:]
  -[CTSweetgumUsagePlanItemData .cxx_destruct]
  -[CTSweetgumUsagePlanItemData setUnits:]
  -[CTSweetgumUsagePlanItemData isEqual:]
  -[CTSweetgumUsagePlanItemData init]
  -[CTSweetgumUsagePlanItemData initWithCoder:]
  -[CTSweetgumUsagePlanItemData maxDataBeforeThrottling]
  -[CTSweetgumUsagePlanItemData setMaxDataBeforeThrottling:]
  -[CTSweetgumUsagePlanItemData thisDeviceDataUsed]
  -[CTSweetgumUsagePlanItemData setThisDeviceDataUsed:]
  -[CTSweetgumUsagePlanItemData sharedDataUsed]
  -[CTSweetgumUsagePlanItemData setSharedDataUsed:]
  -[CTSweetgumUsagePlanItemData sharedPlanIdentifier]
  -[CTSweetgumUsagePlanItemData setSharedPlanIdentifier:]


CTPendingPlan : CTPlan
 @property  NSString *smdpURL
 @property  NSString *matchingID

  // class methods
  +[CTPendingPlan supportsSecureCoding]

  // instance methods
  -[CTPendingPlan encodeWithCoder:]
  -[CTPendingPlan .cxx_destruct]
  -[CTPendingPlan isEqual:]
  -[CTPendingPlan initWithCoder:]
  -[CTPendingPlan initWithSmdpURL:matchingID:]
  -[CTPendingPlan smdpURL]
  -[CTPendingPlan matchingID]


CTMessageCenter : NSObject
  // class methods
  +[CTMessageCenter sharedMessageCenter]

  // instance methods
  -[CTMessageCenter sendSMSWithText:serviceCenter:toAddress:withMoreToFollow:withID:]
  -[CTMessageCenter emergencySessionIntentEnd:]
  -[CTMessageCenter send:withMoreToFollow:]
  -[CTMessageCenter simulateDeferredMessage]
  -[CTMessageCenter isMmsEnabled]
  -[CTMessageCenter decodeMessage:]
  -[CTMessageCenter sendSMSWithText:serviceCenter:toAddress:trackingID:]
  -[CTMessageCenter dealloc]
  -[CTMessageCenter sendSMSWithText:serviceCenter:toAddress:]
  -[CTMessageCenter getCharacterCountForSub:count:andMessageSplitThreshold:forSmsText:]
  -[CTMessageCenter isMmsEnabledForSub:]
  -[CTMessageCenter sendSMS:withMoreToFollow:trackingID:]
  -[CTMessageCenter sendMMS:]
  -[CTMessageCenter acknowledgeIncomingMessageWithId:]
  -[CTMessageCenter sendSMSWithText:text:serviceCenter:toAddress:trackingID:]
  -[CTMessageCenter incomingMessageWithId:]
  -[CTMessageCenter sendSMSWithText:text:serviceCenter:toAddress:withID:]
  -[CTMessageCenter emergencySessionIntentStart:]
  -[CTMessageCenter isMmsConfiguredForSub:]
  -[CTMessageCenter isMmsConfigured]
  -[CTMessageCenter sendSMSWithText:text:serviceCenter:toAddress:withMoreToFollow:withID:]
  -[CTMessageCenter sendSMSWithText:serviceCenter:toAddress:withID:]
  -[CTMessageCenter setDeliveryReportsEnabled:]
  -[CTMessageCenter simulateSmsReceived:]
  -[CTMessageCenter sendMMSFromData:messageId:subSlot:]
  -[CTMessageCenter sendMessageAsSmsToShortCodeRecipients:andReplaceData:]
  -[CTMessageCenter isMmsEnabledForSub:enabled:]
  -[CTMessageCenter allIncomingMessages]
  -[CTMessageCenter send:]
  -[CTMessageCenter addMessageOfType:toArray:withIdsFromArray:]
  -[CTMessageCenter sendSMSWithText:text:serviceCenter:toAddress:]
  -[CTMessageCenter incomingMessageCount]
  -[CTMessageCenter getCharacterCount:andMessageSplitThreshold:forSmsText:]
  -[CTMessageCenter encodeMessage:]
  -[CTMessageCenter sendBinarySMS:trackingID:]
  -[CTMessageCenter init]
  -[CTMessageCenter acknowledgeOutgoingMessageWithId:]
  -[CTMessageCenter isDeliveryReportsEnabled:]


CTMmsRegistrationFailureInfoType : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *pdpContextId
 @property  BOOL dataActive
 @property  BOOL isDataAttached
 @property  BOOL activationForMms

  // class methods
  +[CTMmsRegistrationFailureInfoType supportsSecureCoding]

  // instance methods
  -[CTMmsRegistrationFailureInfoType encodeWithCoder:]
  -[CTMmsRegistrationFailureInfoType .cxx_destruct]
  -[CTMmsRegistrationFailureInfoType copyWithZone:]
  -[CTMmsRegistrationFailureInfoType isEqual:]
  -[CTMmsRegistrationFailureInfoType dataActive]
  -[CTMmsRegistrationFailureInfoType init]
  -[CTMmsRegistrationFailureInfoType initWithCoder:]
  -[CTMmsRegistrationFailureInfoType setDataActive:]
  -[CTMmsRegistrationFailureInfoType isEqualToCTMmsRegistrationFailureInfoType:]
  -[CTMmsRegistrationFailureInfoType pdpContextId]
  -[CTMmsRegistrationFailureInfoType setPdpContextId:]
  -[CTMmsRegistrationFailureInfoType isDataAttached]
  -[CTMmsRegistrationFailureInfoType setIsDataAttached:]
  -[CTMmsRegistrationFailureInfoType activationForMms]
  -[CTMmsRegistrationFailureInfoType setActivationForMms:]


CTCellIdInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *cellId
 @property  NSNumber *baseId

  // class methods
  +[CTCellIdInfo supportsSecureCoding]
  +[CTCellIdInfo cellIdInfoFromCellId:baseId:]

  // instance methods
  -[CTCellIdInfo cellId]
  -[CTCellIdInfo encodeWithCoder:]
  -[CTCellIdInfo .cxx_destruct]
  -[CTCellIdInfo copyWithZone:]
  -[CTCellIdInfo baseId]
  -[CTCellIdInfo initWithCoder:]


CTPlanSignUpDetails : NSObject <NSSecureCoding>
 @property  NSString *signUpUrl
 @property  NSString *signUpUrlType

  // class methods
  +[CTPlanSignUpDetails supportsSecureCoding]

  // instance methods
  -[CTPlanSignUpDetails encodeWithCoder:]
  -[CTPlanSignUpDetails .cxx_destruct]
  -[CTPlanSignUpDetails isEqual:]
  -[CTPlanSignUpDetails initWithCoder:]
  -[CTPlanSignUpDetails initWithSignUpUrl:signUpUrlType:]
  -[CTPlanSignUpDetails signUpUrl]
  -[CTPlanSignUpDetails setSignUpUrl:]
  -[CTPlanSignUpDetails signUpUrlType]
  -[CTPlanSignUpDetails setSignUpUrlType:]


CTSimLabel : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *unique_id
 @property  NSString *text
 @property  BOOL didSetup

  // class methods
  +[CTSimLabel supportsSecureCoding]

  // instance methods
  -[CTSimLabel text]
  -[CTSimLabel encodeWithCoder:]
  -[CTSimLabel .cxx_destruct]
  -[CTSimLabel copyWithZone:]
  -[CTSimLabel isEqual:]
  -[CTSimLabel setText:]
  -[CTSimLabel initWithCoder:]
  -[CTSimLabel unique_id]
  -[CTSimLabel initWithId:andText:andDidSetup:]
  -[CTSimLabel setUnique_id:]
  -[CTSimLabel didSetup]
  -[CTSimLabel setDidSetup:]


CTAudioCodecInfo : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long callId
 @property  long long codec
 @property  unsigned long amrMode
 @property  long long evsBandwidth
 @property  long long evsBitrate

  // class methods
  +[CTAudioCodecInfo supportsSecureCoding]

  // instance methods
  -[CTAudioCodecInfo encodeWithCoder:]
  -[CTAudioCodecInfo codec]
  -[CTAudioCodecInfo copyWithZone:]
  -[CTAudioCodecInfo init]
  -[CTAudioCodecInfo initWithCoder:]
  -[CTAudioCodecInfo initWithCallId:codec:amrMode:evsBandwidth:evsBitrate:]
  -[CTAudioCodecInfo callId]
  -[CTAudioCodecInfo setCallId:]
  -[CTAudioCodecInfo setCodec:]
  -[CTAudioCodecInfo amrMode]
  -[CTAudioCodecInfo setAmrMode:]
  -[CTAudioCodecInfo evsBandwidth]
  -[CTAudioCodecInfo setEvsBandwidth:]
  -[CTAudioCodecInfo evsBitrate]
  -[CTAudioCodecInfo setEvsBitrate:]


CTDataConnectionStatus : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *pdp
 @property  NSString *interfaceName
 @property  NSString *apnName
 @property  unsigned int wirelessTechnologyMask
 @property  int state
 @property  int ipFamily
 @property  BOOL suspended
 @property  BOOL publicNetAllowed
 @property  int contextType
 @property  int transportType
 @property  NSArray *qosFlows

  // class methods
  +[CTDataConnectionStatus supportsSecureCoding]

  // instance methods
  -[CTDataConnectionStatus setIpFamily:]
  -[CTDataConnectionStatus setTransportType:]
  -[CTDataConnectionStatus encodeWithCoder:]
  -[CTDataConnectionStatus apnName]
  -[CTDataConnectionStatus state]
  -[CTDataConnectionStatus interfaceName]
  -[CTDataConnectionStatus publicNetAllowed]
  -[CTDataConnectionStatus setInterfaceName:]
  -[CTDataConnectionStatus .cxx_destruct]
  -[CTDataConnectionStatus setPublicNetAllowed:]
  -[CTDataConnectionStatus transportType]
  -[CTDataConnectionStatus pdp]
  -[CTDataConnectionStatus suspended]
  -[CTDataConnectionStatus setApnName:]
  -[CTDataConnectionStatus setWirelessTechnologyMask:]
  -[CTDataConnectionStatus copyWithZone:]
  -[CTDataConnectionStatus contextType]
  -[CTDataConnectionStatus wirelessTechnologyMask]
  -[CTDataConnectionStatus qosFlows]
  -[CTDataConnectionStatus setSuspended:]
  -[CTDataConnectionStatus setPdp:]
  -[CTDataConnectionStatus setContextType:]
  -[CTDataConnectionStatus ipFamily]
  -[CTDataConnectionStatus setQosFlows:]
  -[CTDataConnectionStatus setState:]
  -[CTDataConnectionStatus initWithCoder:]


CTPNRDataType : NSObject <NSCopying, NSSecureCoding>
 @property  long long pnrMechanism
 @property  NSString *svcCenterAddr
 @property  NSString *destAddr

  // class methods
  +[CTPNRDataType supportsSecureCoding]

  // instance methods
  -[CTPNRDataType encodeWithCoder:]
  -[CTPNRDataType .cxx_destruct]
  -[CTPNRDataType copyWithZone:]
  -[CTPNRDataType isEqual:]
  -[CTPNRDataType init]
  -[CTPNRDataType initWithCoder:]
  -[CTPNRDataType isEqualToCTPNRDataType:]
  -[CTPNRDataType pnrMechanism]
  -[CTPNRDataType setPnrMechanism:]
  -[CTPNRDataType svcCenterAddr]
  -[CTPNRDataType setSvcCenterAddr:]
  -[CTPNRDataType destAddr]
  -[CTPNRDataType setDestAddr:]


CTPNRRequestType : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *pushToken
 @property  NSNumber *attemptCount
 @property  NSArray *pnrReqList

  // class methods
  +[CTPNRRequestType supportsSecureCoding]

  // instance methods
  -[CTPNRRequestType pushToken]
  -[CTPNRRequestType setPushToken:]
  -[CTPNRRequestType setAttemptCount:]
  -[CTPNRRequestType attemptCount]
  -[CTPNRRequestType encodeWithCoder:]
  -[CTPNRRequestType .cxx_destruct]
  -[CTPNRRequestType copyWithZone:]
  -[CTPNRRequestType isEqual:]
  -[CTPNRRequestType init]
  -[CTPNRRequestType initWithCoder:]
  -[CTPNRRequestType isEqualToCTPNRRequestType:]
  -[CTPNRRequestType pnrReqList]
  -[CTPNRRequestType setPnrReqList:]


CTPNRRequestSentInfo : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL success
 @property  NSString *token
 @property  NSNumber *timeout

  // class methods
  +[CTPNRRequestSentInfo supportsSecureCoding]

  // instance methods
  -[CTPNRRequestSentInfo success]
  -[CTPNRRequestSentInfo setSuccess:]
  -[CTPNRRequestSentInfo token]
  -[CTPNRRequestSentInfo encodeWithCoder:]
  -[CTPNRRequestSentInfo setTimeout:]
  -[CTPNRRequestSentInfo .cxx_destruct]
  -[CTPNRRequestSentInfo timeout]
  -[CTPNRRequestSentInfo copyWithZone:]
  -[CTPNRRequestSentInfo setToken:]
  -[CTPNRRequestSentInfo isEqual:]
  -[CTPNRRequestSentInfo init]
  -[CTPNRRequestSentInfo initWithCoder:]
  -[CTPNRRequestSentInfo isEqualToCTPNRRequestSentInfo:]


CTPNRContextInfo : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL isReady
 @property  NSString *plmn
 @property  NSString *imsi
 @property  NSString *phoneNumber
 @property  NSString *phoneNumberOnSIM

  // class methods
  +[CTPNRContextInfo supportsSecureCoding]

  // instance methods
  -[CTPNRContextInfo isReady]
  -[CTPNRContextInfo phoneNumber]
  -[CTPNRContextInfo encodeWithCoder:]
  -[CTPNRContextInfo setPhoneNumber:]
  -[CTPNRContextInfo .cxx_destruct]
  -[CTPNRContextInfo copyWithZone:]
  -[CTPNRContextInfo isEqual:]
  -[CTPNRContextInfo init]
  -[CTPNRContextInfo initWithCoder:]
  -[CTPNRContextInfo plmn]
  -[CTPNRContextInfo setPlmn:]
  -[CTPNRContextInfo isEqualToPNRContextInfo:]
  -[CTPNRContextInfo setIsReady:]
  -[CTPNRContextInfo imsi]
  -[CTPNRContextInfo setImsi:]
  -[CTPNRContextInfo phoneNumberOnSIM]
  -[CTPNRContextInfo setPhoneNumberOnSIM:]


CTIPFilterEndpoint : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *addr
 @property  NSNumber *maskLen
 @property  NSNumber *port
 @property  NSNumber *portRange

  // class methods
  +[CTIPFilterEndpoint supportsSecureCoding]

  // instance methods
  -[CTIPFilterEndpoint port]
  -[CTIPFilterEndpoint setPort:]
  -[CTIPFilterEndpoint encodeWithCoder:]
  -[CTIPFilterEndpoint .cxx_destruct]
  -[CTIPFilterEndpoint copyWithZone:]
  -[CTIPFilterEndpoint initWithCoder:]
  -[CTIPFilterEndpoint addr]
  -[CTIPFilterEndpoint setAddr:]
  -[CTIPFilterEndpoint maskLen]
  -[CTIPFilterEndpoint setMaskLen:]
  -[CTIPFilterEndpoint portRange]
  -[CTIPFilterEndpoint setPortRange:]


CTIPFilter : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long filterId
 @property  unsigned long precedence
 @property  BOOL isTcp
 @property  BOOL isUdp
 @property  BOOL isAnyIpProtocol
 @property  BOOL isIpv4
 @property  BOOL isIpv6
 @property  BOOL isAnyIpFamilyProtocol
 @property  unsigned long ipProtocol
 @property  unsigned long ipFamilyProtocol
 @property  CTIPFilterEndpoint *src
 @property  CTIPFilterEndpoint *dst
 @property  NSNumber *tos
 @property  NSNumber *tosMask
 @property  NSNumber *flowLabel

  // class methods
  +[CTIPFilter supportsSecureCoding]

  // instance methods
  -[CTIPFilter encodeWithCoder:]
  -[CTIPFilter .cxx_destruct]
  -[CTIPFilter ipProtocol]
  -[CTIPFilter copyWithZone:]
  -[CTIPFilter initWithCoder:]
  -[CTIPFilter setIpProtocol:]
  -[CTIPFilter isTcp]
  -[CTIPFilter isUdp]
  -[CTIPFilter isAnyIpProtocol]
  -[CTIPFilter isIpv4]
  -[CTIPFilter isIpv6]
  -[CTIPFilter isAnyIpFamilyProtocol]
  -[CTIPFilter filterId]
  -[CTIPFilter setFilterId:]
  -[CTIPFilter precedence]
  -[CTIPFilter setPrecedence:]
  -[CTIPFilter ipFamilyProtocol]
  -[CTIPFilter setIpFamilyProtocol:]
  -[CTIPFilter src]
  -[CTIPFilter setSrc:]
  -[CTIPFilter dst]
  -[CTIPFilter setDst:]
  -[CTIPFilter tos]
  -[CTIPFilter setTos:]
  -[CTIPFilter tosMask]
  -[CTIPFilter setTosMask:]
  -[CTIPFilter flowLabel]
  -[CTIPFilter setFlowLabel:]


CTIPFilterContainer : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *filters

  // class methods
  +[CTIPFilterContainer supportsSecureCoding]

  // instance methods
  -[CTIPFilterContainer setFilters:]
  -[CTIPFilterContainer filters]
  -[CTIPFilterContainer encodeWithCoder:]
  -[CTIPFilterContainer .cxx_destruct]
  -[CTIPFilterContainer copyWithZone:]
  -[CTIPFilterContainer initWithCoder:]


CTQoS : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *qci
 @property  NSNumber *bitRateMax
 @property  NSNumber *bitRateMin
 @property  NSArray *filters
 @property  NSNumber *gbr

  // class methods
  +[CTQoS supportsSecureCoding]

  // instance methods
  -[CTQoS setFilters:]
  -[CTQoS filters]
  -[CTQoS encodeWithCoder:]
  -[CTQoS .cxx_destruct]
  -[CTQoS copyWithZone:]
  -[CTQoS initWithCoder:]
  -[CTQoS gbr]
  -[CTQoS qci]
  -[CTQoS setQci:]
  -[CTQoS bitRateMax]
  -[CTQoS setBitRateMax:]
  -[CTQoS bitRateMin]
  -[CTQoS setBitRateMin:]


CTCellularQoSFlow : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long flowId
 @property  unsigned long bearerId
 @property  NSNumber *queueSetId
 @property  NSNumber *is5G
 @property  CTQoS *txQos
 @property  CTQoS *rxQos

  // class methods
  +[CTCellularQoSFlow supportsSecureCoding]

  // instance methods
  -[CTCellularQoSFlow encodeWithCoder:]
  -[CTCellularQoSFlow .cxx_destruct]
  -[CTCellularQoSFlow copyWithZone:]
  -[CTCellularQoSFlow flowId]
  -[CTCellularQoSFlow setFlowId:]
  -[CTCellularQoSFlow initWithCoder:]
  -[CTCellularQoSFlow bearerId]
  -[CTCellularQoSFlow setBearerId:]
  -[CTCellularQoSFlow queueSetId]
  -[CTCellularQoSFlow setQueueSetId:]
  -[CTCellularQoSFlow is5G]
  -[CTCellularQoSFlow setIs5G:]
  -[CTCellularQoSFlow txQos]
  -[CTCellularQoSFlow setTxQos:]
  -[CTCellularQoSFlow rxQos]
  -[CTCellularQoSFlow setRxQos:]


CTCellularPlanProvisioningOnDeviceActivationRequest : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *eid
 @property  NSString *iccid
 @property  NSString *sourceIccid
 @property  NSString *unusableIccid
 @property  NSString *phoneNumber
 @property  NSString *mcc
 @property  NSString *mnc
 @property  NSString *gid1
 @property  NSString *gid2
 @property  NSString *smdpAddress
 @property  BOOL useDS
 @property  BOOL isESim
 @property  NSString *flowType

  // class methods
  +[CTCellularPlanProvisioningOnDeviceActivationRequest supportsSecureCoding]

  // instance methods
  -[CTCellularPlanProvisioningOnDeviceActivationRequest flowType]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest phoneNumber]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest encodeWithCoder:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest setPhoneNumber:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest .cxx_destruct]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest copyWithZone:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest isEqual:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest init]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest initWithCoder:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest initWithEid:installIccid:sourceIccid:phoneNumber:mcc:mnc:gid1:gid2:smdp:useDS:esim:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest initWithDetails:installIccid:sourceIccid:unusableIccid:phoneNumber:mcc:mnc:gid1:gid2:smdp:useDS:esim:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest initWithDetails:installIccid:sourceIccid:unusableIccid:phoneNumber:mcc:mnc:gid1:gid2:smdp:useDS:esim:flowType:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest eid]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest setEid:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest iccid]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest setIccid:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest sourceIccid]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest setSourceIccid:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest unusableIccid]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest setUnusableIccid:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest mcc]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest setMcc:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest mnc]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest setMnc:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest gid1]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest setGid1:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest gid2]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest setGid2:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest smdpAddress]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest setSmdpAddress:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest useDS]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest setUseDS:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest isESim]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest setIsESim:]
  -[CTCellularPlanProvisioningOnDeviceActivationRequest setFlowType:]


CTMessageStatus : NSObject
 @property  unsigned int messageId
 @property  int messageType
 @property  int result

  // instance methods
  -[CTMessageStatus messageId]
  -[CTMessageStatus result]
  -[CTMessageStatus messageType]
  -[CTMessageStatus initWithMessageId:messageType:result:]


CTSIMToolkitItem : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *text
 @property  BOOL selected

  // class methods
  +[CTSIMToolkitItem supportsSecureCoding]

  // instance methods
  -[CTSIMToolkitItem text]
  -[CTSIMToolkitItem encodeWithCoder:]
  -[CTSIMToolkitItem setSelected:]
  -[CTSIMToolkitItem .cxx_destruct]
  -[CTSIMToolkitItem copyWithZone:]
  -[CTSIMToolkitItem selected]
  -[CTSIMToolkitItem setText:]
  -[CTSIMToolkitItem initWithCoder:]
  -[CTSIMToolkitItem initWithText:selected:]


CTSIMToolkitItemList : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *itemList

  // class methods
  +[CTSIMToolkitItemList supportsSecureCoding]

  // instance methods
  -[CTSIMToolkitItemList encodeWithCoder:]
  -[CTSIMToolkitItemList .cxx_destruct]
  -[CTSIMToolkitItemList copyWithZone:]
  -[CTSIMToolkitItemList initWithCoder:]
  -[CTSIMToolkitItemList itemList]
  -[CTSIMToolkitItemList setItemList:]


CTServiceDescriptor : NSObject <NSCopying, NSSecureCoding>
 @property  long long domain
 @property  NSNumber *instance
 @property  NSString *identifier

  // class methods
  +[CTServiceDescriptor supportsSecureCoding]
  +[CTServiceDescriptor descriptorWithSubscriptionContext:]
  +[CTServiceDescriptor telephonyDescriptorWithInstance:]

  // instance methods
  -[CTServiceDescriptor domain]
  -[CTServiceDescriptor identifier]
  -[CTServiceDescriptor setInstance:]
  -[CTServiceDescriptor instance]
  -[CTServiceDescriptor encodeWithCoder:]
  -[CTServiceDescriptor .cxx_destruct]
  -[CTServiceDescriptor initWithDomain:instance:]
  -[CTServiceDescriptor copyWithZone:]
  -[CTServiceDescriptor setDomain:]
  -[CTServiceDescriptor isEqual:]
  -[CTServiceDescriptor initWithCoder:]


CTServiceDescriptorContainer : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *descriptors

  // class methods
  +[CTServiceDescriptorContainer supportsSecureCoding]

  // instance methods
  -[CTServiceDescriptorContainer descriptors]
  -[CTServiceDescriptorContainer encodeWithCoder:]
  -[CTServiceDescriptorContainer .cxx_destruct]
  -[CTServiceDescriptorContainer initWithDescriptors:]
  -[CTServiceDescriptorContainer setDescriptors:]
  -[CTServiceDescriptorContainer copyWithZone:]
  -[CTServiceDescriptorContainer isEqual:]
  -[CTServiceDescriptorContainer initWithCoder:]


CTEmailAddress : NSObject <NSCopying, CTMessageAddress>
 @property  NSString *address

  // class methods
  +[CTEmailAddress emailAddress:]

  // instance methods
  -[CTEmailAddress .cxx_destruct]
  -[CTEmailAddress address]
  -[CTEmailAddress copyWithZone:]
  -[CTEmailAddress initWithAddress:]
  -[CTEmailAddress canonicalFormat]
  -[CTEmailAddress encodedString]


CTIMSRegistrationStatus : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL isRegisteredForVoice
 @property  BOOL isRegisteredForSMS

  // class methods
  +[CTIMSRegistrationStatus supportsSecureCoding]

  // instance methods
  -[CTIMSRegistrationStatus encodeWithCoder:]
  -[CTIMSRegistrationStatus copyWithZone:]
  -[CTIMSRegistrationStatus initWithCoder:]
  -[CTIMSRegistrationStatus isRegisteredForVoice]
  -[CTIMSRegistrationStatus setIsRegisteredForVoice:]
  -[CTIMSRegistrationStatus isRegisteredForSMS]
  -[CTIMSRegistrationStatus setIsRegisteredForSMS:]


CoreTelephonyClientRemoteAsyncProxy : NSProxy <CTXPCServiceInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CoreTelephonyClientRemoteAsyncProxy methodSignatureForSelector:]
  -[CoreTelephonyClientRemoteAsyncProxy initWithXPCObject:userQueue:errorHandler:]
  -[CoreTelephonyClientRemoteAsyncProxy .cxx_construct]
  -[CoreTelephonyClientRemoteAsyncProxy .cxx_destruct]
  -[CoreTelephonyClientRemoteAsyncProxy forwardInvocation:]


CTCellularPlanProvisioning : NSObject
 @property  BOOL supportsEmbeddedSIM

  // instance methods
  -[CTCellularPlanProvisioning .cxx_destruct]
  -[CTCellularPlanProvisioning init]
  -[CTCellularPlanProvisioning addPlanWith:completionHandler:]
  -[CTCellularPlanProvisioning supportsCellularPlan]
  -[CTCellularPlanProvisioning supportsEmbeddedSIM]


CTCellularPlanManagerCameraScanAction : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *smdpAddress
 @property  NSString *matchingId
 @property  NSString *OID
 @property  NSString *title
 @property  NSString *message

  // class methods
  +[CTCellularPlanManagerCameraScanAction supportsSecureCoding]

  // instance methods
  -[CTCellularPlanManagerCameraScanAction setMessage:]
  -[CTCellularPlanManagerCameraScanAction encodeWithCoder:]
  -[CTCellularPlanManagerCameraScanAction .cxx_destruct]
  -[CTCellularPlanManagerCameraScanAction setOID:]
  -[CTCellularPlanManagerCameraScanAction title]
  -[CTCellularPlanManagerCameraScanAction copyWithZone:]
  -[CTCellularPlanManagerCameraScanAction OID]
  -[CTCellularPlanManagerCameraScanAction message]
  -[CTCellularPlanManagerCameraScanAction setTitle:]
  -[CTCellularPlanManagerCameraScanAction initWithCoder:]
  -[CTCellularPlanManagerCameraScanAction smdpAddress]
  -[CTCellularPlanManagerCameraScanAction setSmdpAddress:]
  -[CTCellularPlanManagerCameraScanAction performWithCompletionHandler:]
  -[CTCellularPlanManagerCameraScanAction matchingId]
  -[CTCellularPlanManagerCameraScanAction setMatchingId:]


CTSimSetupUsage : NSObject <NSSecureCoding>
 @property  BOOL inBuddy
 @property  unsigned long transferablePlans
 @property  unsigned long selectedTransferablePlans
 @property  unsigned long alsPlans
 @property  unsigned long selectedAlsPlans
 @property  unsigned long odaPlans

  // class methods
  +[CTSimSetupUsage supportsSecureCoding]

  // instance methods
  -[CTSimSetupUsage encodeWithCoder:]
  -[CTSimSetupUsage isEqual:]
  -[CTSimSetupUsage initWithCoder:]
  -[CTSimSetupUsage initWithInBuddy:transferablePlans:selectedTransferablePlans:alsPlans:selectedAlsPlans:odaPlans:]
  -[CTSimSetupUsage inBuddy]
  -[CTSimSetupUsage setInBuddy:]
  -[CTSimSetupUsage transferablePlans]
  -[CTSimSetupUsage setTransferablePlans:]
  -[CTSimSetupUsage selectedTransferablePlans]
  -[CTSimSetupUsage setSelectedTransferablePlans:]
  -[CTSimSetupUsage alsPlans]
  -[CTSimSetupUsage setAlsPlans:]
  -[CTSimSetupUsage selectedAlsPlans]
  -[CTSimSetupUsage setSelectedAlsPlans:]
  -[CTSimSetupUsage odaPlans]
  -[CTSimSetupUsage setOdaPlans:]


CTVoiceLinkQualityMetric : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *linkQuality

  // class methods
  +[CTVoiceLinkQualityMetric supportsSecureCoding]

  // instance methods
  -[CTVoiceLinkQualityMetric linkQuality]
  -[CTVoiceLinkQualityMetric encodeWithCoder:]
  -[CTVoiceLinkQualityMetric setLinkQuality:]
  -[CTVoiceLinkQualityMetric .cxx_destruct]
  -[CTVoiceLinkQualityMetric copyWithZone:]
  -[CTVoiceLinkQualityMetric initWithLinkQuality:]
  -[CTVoiceLinkQualityMetric initWithCoder:]


CTEnhancedLinkQualityMetric : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *enhancedLinkQuality

  // class methods
  +[CTEnhancedLinkQualityMetric supportsSecureCoding]

  // instance methods
  -[CTEnhancedLinkQualityMetric encodeWithCoder:]
  -[CTEnhancedLinkQualityMetric enhancedLinkQuality]
  -[CTEnhancedLinkQualityMetric setEnhancedLinkQuality:]
  -[CTEnhancedLinkQualityMetric .cxx_destruct]
  -[CTEnhancedLinkQualityMetric initWithEnhancedLinkQuality:]
  -[CTEnhancedLinkQualityMetric copyWithZone:]
  -[CTEnhancedLinkQualityMetric initWithCoder:]


CTEnhancedDataLinkQualityMetric : CTEnhancedLinkQualityMetric
 @property  long long metricType

  // class methods
  +[CTEnhancedDataLinkQualityMetric supportsSecureCoding]

  // instance methods
  -[CTEnhancedDataLinkQualityMetric encodeWithCoder:]
  -[CTEnhancedDataLinkQualityMetric setMetricType:]
  -[CTEnhancedDataLinkQualityMetric initWithType:enhancedLinkQuality:]
  -[CTEnhancedDataLinkQualityMetric metricType]
  -[CTEnhancedDataLinkQualityMetric copyWithZone:]
  -[CTEnhancedDataLinkQualityMetric initWithCoder:]


CTDataStatus : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL newRadioCoverage
 @property  BOOL newRadioSaCoverage
 @property  BOOL newRadioNsaCoverage
 @property  BOOL newRadioDataBearer
 @property  BOOL newRadioSaDataBearer
 @property  BOOL newRadioNsaDataBearer
 @property  BOOL newRadioMmWaveDataBearer
 @property  BOOL newRadioSub6DataBearer
 @property  BOOL attached
 @property  BOOL dataSim
 @property  int indicator
 @property  int indicatorOverride
 @property  BOOL roamAllowed
 @property  int radioTechnology
 @property  int dataMode
 @property  int dataBearerTechnology
 @property  unsigned int dataBearerSoMask
 @property  BOOL dataPlanSignalingReductionOverride
 @property  BOOL cellularDataPossible
 @property  unsigned int activeContexts
 @property  unsigned int totalActiveContexts
 @property  BOOL inHomeCountry
 @property  int reason

  // class methods
  +[CTDataStatus supportsSecureCoding]

  // instance methods
  -[CTDataStatus attached]
  -[CTDataStatus inHomeCountry]
  -[CTDataStatus setCellularDataPossible:]
  -[CTDataStatus newRadioSaDataBearer]
  -[CTDataStatus setAttached:]
  -[CTDataStatus cellularDataPossible]
  -[CTDataStatus setRoamAllowed:]
  -[CTDataStatus newRadioCoverage]
  -[CTDataStatus encodeWithCoder:]
  -[CTDataStatus setDataBearerTechnology:]
  -[CTDataStatus indicator]
  -[CTDataStatus newRadioSub6DataBearer]
  -[CTDataStatus activeContexts]
  -[CTDataStatus reason]
  -[CTDataStatus dataBearerSoMask]
  -[CTDataStatus totalActiveContexts]
  -[CTDataStatus dataSim]
  -[CTDataStatus setDataPlanSignalingReductionOverride:]
  -[CTDataStatus setIndicator:]
  -[CTDataStatus dataBearerTechnology]
  -[CTDataStatus copyBasic]
  -[CTDataStatus newRadioSaCoverage]
  -[CTDataStatus newRadioMmWaveDataBearer]
  -[CTDataStatus copyWithZone:]
  -[CTDataStatus newRadioNsaDataBearer]
  -[CTDataStatus roamAllowed]
  -[CTDataStatus indicatorOverride]
  -[CTDataStatus setInHomeCountry:]
  -[CTDataStatus setDataMode:]
  -[CTDataStatus setTotalActiveContexts:]
  -[CTDataStatus setDataBearerSoMask:]
  -[CTDataStatus setActiveContexts:]
  -[CTDataStatus newRadioDataBearer]
  -[CTDataStatus setIndicatorOverride:]
  -[CTDataStatus setReason:]
  -[CTDataStatus dataPlanSignalingReductionOverride]
  -[CTDataStatus newRadioNsaCoverage]
  -[CTDataStatus dataMode]
  -[CTDataStatus setRadioTechnology:]
  -[CTDataStatus radioTechnology]
  -[CTDataStatus initWithCoder:]
  -[CTDataStatus setDataSim:]


CTDataStatusBasic : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL attached
 @property  BOOL hasIndicator
 @property  BOOL inHomeCountry
 @property  BOOL roamAllowed
 @property  BOOL cellularDataPossible
 @property  BOOL newRadioCoverage

  // class methods
  +[CTDataStatusBasic supportsSecureCoding]

  // instance methods
  -[CTDataStatusBasic attached]
  -[CTDataStatusBasic inHomeCountry]
  -[CTDataStatusBasic setCellularDataPossible:]
  -[CTDataStatusBasic setAttached:]
  -[CTDataStatusBasic cellularDataPossible]
  -[CTDataStatusBasic setRoamAllowed:]
  -[CTDataStatusBasic newRadioCoverage]
  -[CTDataStatusBasic encodeWithCoder:]
  -[CTDataStatusBasic setNewRadioCoverage:]
  -[CTDataStatusBasic setHasIndicator:]
  -[CTDataStatusBasic copyWithZone:]
  -[CTDataStatusBasic roamAllowed]
  -[CTDataStatusBasic setInHomeCountry:]
  -[CTDataStatusBasic hasIndicator]
  -[CTDataStatusBasic initWithCoder:]


CTMobileEquipmentInfo : NSObject <NSCopying, NSSecureCoding>
 @property  long long slotId
 @property  NSString *currentMobileId
 @property  NSString *currentSubscriberId
 @property  NSString *IMEI
 @property  NSString *ICCID
 @property  NSString *IMSI
 @property  NSString *cdmaIMSI
 @property  NSString *MEID
 @property  NSString *EUIMID
 @property  NSNumber *PRLVersion
 @property  NSNumber *ERIVersion
 @property  NSString *MIN
 @property  NSString *NAI
 @property  NSString *baseVersion
 @property  NSString *baseId
 @property  NSString *baseProfile
 @property  NSString *effectiveICCID
 @property  NSString *CSN
 @property  NSString *displayCSN

  // class methods
  +[CTMobileEquipmentInfo supportsSecureCoding]

  // instance methods
  -[CTMobileEquipmentInfo CSN]
  -[CTMobileEquipmentInfo setERIVersion:]
  -[CTMobileEquipmentInfo setCSN:]
  -[CTMobileEquipmentInfo setNAI:]
  -[CTMobileEquipmentInfo setPRLVersion:]
  -[CTMobileEquipmentInfo encodeWithCoder:]
  -[CTMobileEquipmentInfo ICCID]
  -[CTMobileEquipmentInfo setCdmaIMSI:]
  -[CTMobileEquipmentInfo setCurrentMobileId:]
  -[CTMobileEquipmentInfo setEUIMID:]
  -[CTMobileEquipmentInfo .cxx_destruct]
  -[CTMobileEquipmentInfo baseProfile]
  -[CTMobileEquipmentInfo IMSI]
  -[CTMobileEquipmentInfo displayCSN]
  -[CTMobileEquipmentInfo ERIVersion]
  -[CTMobileEquipmentInfo PRLVersion]
  -[CTMobileEquipmentInfo NAI]
  -[CTMobileEquipmentInfo setBaseId:]
  -[CTMobileEquipmentInfo setBaseProfile:]
  -[CTMobileEquipmentInfo MEID]
  -[CTMobileEquipmentInfo setEffectiveICCID:]
  -[CTMobileEquipmentInfo setICCID:]
  -[CTMobileEquipmentInfo MIN]
  -[CTMobileEquipmentInfo setIMEI:]
  -[CTMobileEquipmentInfo slotId]
  -[CTMobileEquipmentInfo setMEID:]
  -[CTMobileEquipmentInfo copyWithZone:]
  -[CTMobileEquipmentInfo currentSubscriberId]
  -[CTMobileEquipmentInfo IMEI]
  -[CTMobileEquipmentInfo effectiveICCID]
  -[CTMobileEquipmentInfo EUIMID]
  -[CTMobileEquipmentInfo setCurrentSubscriberId:]
  -[CTMobileEquipmentInfo baseVersion]
  -[CTMobileEquipmentInfo setDisplayCSN:]
  -[CTMobileEquipmentInfo baseId]
  -[CTMobileEquipmentInfo setIMSI:]
  -[CTMobileEquipmentInfo cdmaIMSI]
  -[CTMobileEquipmentInfo setMIN:]
  -[CTMobileEquipmentInfo setBaseVersion:]
  -[CTMobileEquipmentInfo currentMobileId]
  -[CTMobileEquipmentInfo initWithCoder:]
  -[CTMobileEquipmentInfo setSlotId:]


CTMobileEquipmentInfoList : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *meInfoList

  // class methods
  +[CTMobileEquipmentInfoList supportsSecureCoding]

  // instance methods
  -[CTMobileEquipmentInfoList encodeWithCoder:]
  -[CTMobileEquipmentInfoList .cxx_destruct]
  -[CTMobileEquipmentInfoList copyWithZone:]
  -[CTMobileEquipmentInfoList setMeInfoList:]
  -[CTMobileEquipmentInfoList meInfoList]
  -[CTMobileEquipmentInfoList initWithCoder:]


CTCellularPlanProvisioningRequest : NSObject <NSSecureCoding>
 @property  NSString *address
 @property  NSString *matchingID
 @property  NSString *OID
 @property  NSString *confirmationCode
 @property  NSString *ICCID
 @property  NSString *EID

  // class methods
  +[CTCellularPlanProvisioningRequest supportsSecureCoding]

  // instance methods
  -[CTCellularPlanProvisioningRequest encodeWithCoder:]
  -[CTCellularPlanProvisioningRequest ICCID]
  -[CTCellularPlanProvisioningRequest setAddress:]
  -[CTCellularPlanProvisioningRequest .cxx_destruct]
  -[CTCellularPlanProvisioningRequest address]
  -[CTCellularPlanProvisioningRequest setOID:]
  -[CTCellularPlanProvisioningRequest setICCID:]
  -[CTCellularPlanProvisioningRequest copyWithZone:]
  -[CTCellularPlanProvisioningRequest OID]
  -[CTCellularPlanProvisioningRequest isEqual:]
  -[CTCellularPlanProvisioningRequest init]
  -[CTCellularPlanProvisioningRequest initWithCoder:]
  -[CTCellularPlanProvisioningRequest matchingID]
  -[CTCellularPlanProvisioningRequest setMatchingID:]
  -[CTCellularPlanProvisioningRequest confirmationCode]
  -[CTCellularPlanProvisioningRequest setConfirmationCode:]
  -[CTCellularPlanProvisioningRequest EID]
  -[CTCellularPlanProvisioningRequest setEID:]


CTCarrier : NSObject
 @property  NSString *carrierName
 @property  NSString *mobileCountryCode
 @property  NSString *mobileNetworkCode
 @property  NSString *isoCountryCode
 @property  BOOL allowsVOIP

  // instance methods
  -[CTCarrier setIsoCountryCode:]
  -[CTCarrier setAllowsVOIP:]
  -[CTCarrier carrierName]
  -[CTCarrier setMobileCountryCode:]
  -[CTCarrier .cxx_destruct]
  -[CTCarrier allowsVOIP]
  -[CTCarrier setMobileNetworkCode:]
  -[CTCarrier mobileNetworkCode]
  -[CTCarrier isoCountryCode]
  -[CTCarrier mobileCountryCode]
  -[CTCarrier isEqual:]
  -[CTCarrier init]
  -[CTCarrier setCarrierName:]


CTTelephonyNetworkInfoDelegatePlus : NSObject <CoreTelephonyClientDataDelegateInternal>
 @property  CTTelephonyNetworkInfo *delegate
 @property  {queue={object=^{dispatch_object_s}}} clientQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CTTelephonyNetworkInfoDelegatePlus dataStatus:dataStatusInfo:]
  -[CTTelephonyNetworkInfoDelegatePlus setClientQueue:]
  -[CTTelephonyNetworkInfoDelegatePlus clientQueue]
  -[CTTelephonyNetworkInfoDelegatePlus setDelegate:]
  -[CTTelephonyNetworkInfoDelegatePlus delegate]
  -[CTTelephonyNetworkInfoDelegatePlus .cxx_construct]
  -[CTTelephonyNetworkInfoDelegatePlus dealloc]
  -[CTTelephonyNetworkInfoDelegatePlus .cxx_destruct]
  -[CTTelephonyNetworkInfoDelegatePlus initWithDelegate:]


CTTelephonyNetworkInfo : NSObject <CoreTelephonyClientDataDelegateInternal, CoreTelephonyClientRegistrationDelegateInternal>
 @property  NSMutableDictionary *serviceSubscriberCellularProviders
 @property  NSMutableDictionary *cachedCurrentRadioAccessTechnology
 @property  NSMutableDictionary *cachedSignalStrength
 @property  NSMutableDictionary *cachedCellIds
 @property  int cachedDataBearerCellularTechnology
 @property  BOOL dataBearerCellularTechnologyInitialized
 @property  unsigned int cachedNrFrequencyRange
 @property  BOOL nrFrequencyRangeInitialized
 @property  CTServiceDescriptorContainer *descriptors
 @property  {queue={object=^{dispatch_object_s}}} clientQueue
 @property  NSString *dataServiceIdentifier
 @property  <CTTelephonyNetworkInfoDelegate> *delegate
 @property  CTCarrier *subscriberCellularProvider
 @property  @? serviceSubscriberCellularProvidersDidUpdateNotifier
 @property  @? subscriberCellularProviderDidUpdateNotifier
 @property  NSDictionary *serviceCurrentRadioAccessTechnology
 @property  NSString *currentRadioAccessTechnology
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CTTelephonyNetworkInfo signalStrengthChanged:info:]
  -[CTTelephonyNetworkInfo carrierBundleChange:]
  -[CTTelephonyNetworkInfo initWithClient:]
  -[CTTelephonyNetworkInfo descriptors]
  -[CTTelephonyNetworkInfo cellChanged:cell:]
  -[CTTelephonyNetworkInfo setClientQueue:]
  -[CTTelephonyNetworkInfo setCachedSignalStrength:]
  -[CTTelephonyNetworkInfo cellId]
  -[CTTelephonyNetworkInfo radioAccessTechnology]
  -[CTTelephonyNetworkInfo cachedCellIds]
  -[CTTelephonyNetworkInfo getFirstCellId]
  -[CTTelephonyNetworkInfo cachedDataBearerCellularTechnology]
  -[CTTelephonyNetworkInfo clientQueue]
  -[CTTelephonyNetworkInfo setDelegate:]
  -[CTTelephonyNetworkInfo queryNrFrequencyRange]
  -[CTTelephonyNetworkInfo setCachedCurrentRadioAccessTechnology:]
  -[CTTelephonyNetworkInfo cachedSignalStrength]
  -[CTTelephonyNetworkInfo setServiceSubscriberCellularProvidersDidUpdateNotifier:]
  -[CTTelephonyNetworkInfo serviceSignalStrength]
  -[CTTelephonyNetworkInfo cachedCurrentRadioAccessTechnology]
  -[CTTelephonyNetworkInfo delegate]
  -[CTTelephonyNetworkInfo setNrFrequencyRangeInitialized:]
  -[CTTelephonyNetworkInfo serviceSubscriberCellularProviders]
  -[CTTelephonyNetworkInfo updateDataBearer:]
  -[CTTelephonyNetworkInfo .cxx_construct]
  -[CTTelephonyNetworkInfo querySignalStrengthForDescriptor:]
  -[CTTelephonyNetworkInfo updateRat:descriptor:]
  -[CTTelephonyNetworkInfo dealloc]
  -[CTTelephonyNetworkInfo updateSignalStrength:descriptor:]
  -[CTTelephonyNetworkInfo queryRat]
  -[CTTelephonyNetworkInfo .cxx_destruct]
  -[CTTelephonyNetworkInfo nrFrequencyRangeInitialized]
  -[CTTelephonyNetworkInfo dataStatusUpdate:dataStatusInfo:]
  -[CTTelephonyNetworkInfo serviceCellId]
  -[CTTelephonyNetworkInfo currentRadioAccessTechnology]
  -[CTTelephonyNetworkInfo dataServiceIdentifier]
  -[CTTelephonyNetworkInfo setCachedNrFrequencyRange:]
  -[CTTelephonyNetworkInfo setSubscriberCellularProviderDidUpdateNotifier:]
  -[CTTelephonyNetworkInfo dataBearerCellularTechnologyInitialized]
  -[CTTelephonyNetworkInfo setDataBearerCellularTechnologyInitialized:]
  -[CTTelephonyNetworkInfo tryInitNrFrequencyRange]
  -[CTTelephonyNetworkInfo queryRatForDescriptor:]
  -[CTTelephonyNetworkInfo getAllowsVOIP:forContext:withError:]
  -[CTTelephonyNetworkInfo updateLegacyRat:]
  -[CTTelephonyNetworkInfo updateNetworkInfoAndShouldNotifyClient:forContext:]
  -[CTTelephonyNetworkInfo serviceCurrentRadioAccessTechnology]
  -[CTTelephonyNetworkInfo subscriberCellularProviderDidUpdateNotifier]
  -[CTTelephonyNetworkInfo regDataModeChanged:dataMode:]
  -[CTTelephonyNetworkInfo tryInitDelegatePlus]
  -[CTTelephonyNetworkInfo getMobileNetworkCode:forContext:withError:]
  -[CTTelephonyNetworkInfo serviceSubscriberCellularProvidersDidUpdateNotifier]
  -[CTTelephonyNetworkInfo postNotificationIfReady:object:]
  -[CTTelephonyNetworkInfo cachedNrFrequencyRange]
  -[CTTelephonyNetworkInfo subscriberCellularProvider]
  -[CTTelephonyNetworkInfo getMobileCountryCode:andIsoCountryCode:forContext:withError:]
  -[CTTelephonyNetworkInfo queryCTSignalStrength]
  -[CTTelephonyNetworkInfo updateNrFrequencyRange:]
  -[CTTelephonyNetworkInfo updateCellId:forDescriptor:]
  -[CTTelephonyNetworkInfo setCachedCellIds:]
  -[CTTelephonyNetworkInfo tryInitDataBearer]
  -[CTTelephonyNetworkInfo currentDataServiceDescriptorChanged:]
  -[CTTelephonyNetworkInfo queryDataBearer]
  -[CTTelephonyNetworkInfo setCachedDataBearerCellularTechnology:]
  -[CTTelephonyNetworkInfo currentNrFrequencyRange]
  -[CTTelephonyNetworkInfo setServiceSubscriberCellularProviderDidUpdateNotifier:]
  -[CTTelephonyNetworkInfo tryInitPrivateFunctionality]
  -[CTTelephonyNetworkInfo currentDataBearerTechnology]
  -[CTTelephonyNetworkInfo signalStrength]
  -[CTTelephonyNetworkInfo getCarrierName:forContext:withError:]
  -[CTTelephonyNetworkInfo init]
  -[CTTelephonyNetworkInfo queryCellIds]
  -[CTTelephonyNetworkInfo setServiceSubscriberCellularProviders:]
  -[CTTelephonyNetworkInfo serviceSubscribersCellularProviderDidUpdateNotifier]


CTXPCError : NSObject
  // class methods
  +[CTXPCError errorForCode:errorString:]


CTPlanIdentifier : NSObject <NSSecureCoding>
 @property  NSString *iccid
 @property  NSString *carrierName
 @property  NSString *phoneNumber
 @property  NSString *countryCode
 @property  NSString *label
 @property  NSString *mcc
 @property  NSString *mnc
 @property  NSString *gid1
 @property  NSString *gid2

  // class methods
  +[CTPlanIdentifier supportsSecureCoding]

  // instance methods
  -[CTPlanIdentifier setCountryCode:]
  -[CTPlanIdentifier phoneNumber]
  -[CTPlanIdentifier encodeWithCoder:]
  -[CTPlanIdentifier setPhoneNumber:]
  -[CTPlanIdentifier carrierName]
  -[CTPlanIdentifier setLabel:]
  -[CTPlanIdentifier .cxx_destruct]
  -[CTPlanIdentifier label]
  -[CTPlanIdentifier countryCode]
  -[CTPlanIdentifier isEqual:]
  -[CTPlanIdentifier setCarrierName:]
  -[CTPlanIdentifier initWithCoder:]
  -[CTPlanIdentifier iccid]
  -[CTPlanIdentifier setIccid:]
  -[CTPlanIdentifier mcc]
  -[CTPlanIdentifier setMcc:]
  -[CTPlanIdentifier mnc]
  -[CTPlanIdentifier setMnc:]
  -[CTPlanIdentifier gid1]
  -[CTPlanIdentifier setGid1:]
  -[CTPlanIdentifier gid2]
  -[CTPlanIdentifier setGid2:]
  -[CTPlanIdentifier initWithIccid:carrierName:phoneNumber:countryCode:label:mcc:mnc:gid1:gid2:]


CTRemotePlanIdentifier : CTPlanIdentifier

CTRemotePlanIdentifierList : NSObject <NSSecureCoding>
 @property  NSArray *planIdentifiers

  // class methods
  +[CTRemotePlanIdentifierList supportsSecureCoding]

  // instance methods
  -[CTRemotePlanIdentifierList encodeWithCoder:]
  -[CTRemotePlanIdentifierList .cxx_destruct]
  -[CTRemotePlanIdentifierList isEqual:]
  -[CTRemotePlanIdentifierList init]
  -[CTRemotePlanIdentifierList initWithCoder:]
  -[CTRemotePlanIdentifierList initWithPlanIdentifiers:]
  -[CTRemotePlanIdentifierList planIdentifiers]
  -[CTRemotePlanIdentifierList setPlanIdentifiers:]


CTEncryptionStatusInfo : NSObject <NSCopying, NSSecureCoding>
 @property  long long status

  // class methods
  +[CTEncryptionStatusInfo supportsSecureCoding]

  // instance methods
  -[CTEncryptionStatusInfo encodeWithCoder:]
  -[CTEncryptionStatusInfo status]
  -[CTEncryptionStatusInfo setStatus:]
  -[CTEncryptionStatusInfo initWithStatus:]
  -[CTEncryptionStatusInfo copyWithZone:]
  -[CTEncryptionStatusInfo isEqual:]
  -[CTEncryptionStatusInfo initWithCoder:]


CTNetworkSelectionInfo : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long selectionState
 @property  unsigned long selectionMode
 @property  CTNetwork *selection

  // class methods
  +[CTNetworkSelectionInfo supportsSecureCoding]

  // instance methods
  -[CTNetworkSelectionInfo selection]
  -[CTNetworkSelectionInfo setSelection:]
  -[CTNetworkSelectionInfo encodeWithCoder:]
  -[CTNetworkSelectionInfo setSelectionState:]
  -[CTNetworkSelectionInfo .cxx_destruct]
  -[CTNetworkSelectionInfo selectionState]
  -[CTNetworkSelectionInfo copyWithZone:]
  -[CTNetworkSelectionInfo initWithCoder:]
  -[CTNetworkSelectionInfo selectionMode]
  -[CTNetworkSelectionInfo setSelectionMode:]


CTRadioFrequencyFrontEndScanData : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long version
 @property  unsigned long hwPrdId
 @property  unsigned long hwSku
 @property  unsigned long hwRev
 @property  unsigned long hwHousing
 @property  BOOL rfcInitPass
 @property  unsigned long rfcHwid
 @property  unsigned long rfcRev
 @property  unsigned long rfcMmwHwid
 @property  unsigned long rfcMmwRev
 @property  BOOL rffeScanPass
 @property  unsigned long numExpectedDevices
 @property  unsigned long numDetectedDevices
 @property  unsigned long numMissingDevices
 @property  NSMutableArray *rffeScanInfo

  // class methods
  +[CTRadioFrequencyFrontEndScanData supportsSecureCoding]

  // instance methods
  -[CTRadioFrequencyFrontEndScanData encodeWithCoder:]
  -[CTRadioFrequencyFrontEndScanData .cxx_destruct]
  -[CTRadioFrequencyFrontEndScanData version]
  -[CTRadioFrequencyFrontEndScanData copyWithZone:]
  -[CTRadioFrequencyFrontEndScanData setVersion:]
  -[CTRadioFrequencyFrontEndScanData init]
  -[CTRadioFrequencyFrontEndScanData initWithCoder:]
  -[CTRadioFrequencyFrontEndScanData hwPrdId]
  -[CTRadioFrequencyFrontEndScanData setHwPrdId:]
  -[CTRadioFrequencyFrontEndScanData hwSku]
  -[CTRadioFrequencyFrontEndScanData setHwSku:]
  -[CTRadioFrequencyFrontEndScanData hwRev]
  -[CTRadioFrequencyFrontEndScanData setHwRev:]
  -[CTRadioFrequencyFrontEndScanData hwHousing]
  -[CTRadioFrequencyFrontEndScanData setHwHousing:]
  -[CTRadioFrequencyFrontEndScanData rfcInitPass]
  -[CTRadioFrequencyFrontEndScanData setRfcInitPass:]
  -[CTRadioFrequencyFrontEndScanData rfcHwid]
  -[CTRadioFrequencyFrontEndScanData setRfcHwid:]
  -[CTRadioFrequencyFrontEndScanData rfcRev]
  -[CTRadioFrequencyFrontEndScanData setRfcRev:]
  -[CTRadioFrequencyFrontEndScanData rfcMmwHwid]
  -[CTRadioFrequencyFrontEndScanData setRfcMmwHwid:]
  -[CTRadioFrequencyFrontEndScanData rfcMmwRev]
  -[CTRadioFrequencyFrontEndScanData setRfcMmwRev:]
  -[CTRadioFrequencyFrontEndScanData rffeScanPass]
  -[CTRadioFrequencyFrontEndScanData setRffeScanPass:]
  -[CTRadioFrequencyFrontEndScanData numExpectedDevices]
  -[CTRadioFrequencyFrontEndScanData setNumExpectedDevices:]
  -[CTRadioFrequencyFrontEndScanData numDetectedDevices]
  -[CTRadioFrequencyFrontEndScanData setNumDetectedDevices:]
  -[CTRadioFrequencyFrontEndScanData numMissingDevices]
  -[CTRadioFrequencyFrontEndScanData setNumMissingDevices:]
  -[CTRadioFrequencyFrontEndScanData rffeScanInfo]
  -[CTRadioFrequencyFrontEndScanData setRffeScanInfo:]


FrameworkCache : NSObject
  // class methods
  +[FrameworkCache getCacheableSelectorForNotification:]
  +[FrameworkCache getCachePolicyForSelector:]

  // instance methods
  -[FrameworkCache handleNotification:]
  -[FrameworkCache handleValue:forSelector:]
  -[FrameworkCache handleDisconnection]
  -[FrameworkCache .cxx_destruct]
  -[FrameworkCache valueForSelector:]
  -[FrameworkCache init]


MuxNotificationSink : NSProxy <CoreTelephonyClientDelegateProxyInterface>
 @property  <MuxNotificationSinkDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MuxNotificationSink methodSignatureForSelector:]
  -[MuxNotificationSink setDelegate:]
  -[MuxNotificationSink delegate]
  -[MuxNotificationSink .cxx_destruct]
  -[MuxNotificationSink forwardInvocation:]
  -[MuxNotificationSink clientDidTriggerFault:]


CoreTelephonyClientMux : NSObject <MuxNotificationSinkDelegate>
 @property  NSXPCConnection *connection
 @property  {queue={object=^{dispatch_object_s}}} xpcQueue
 @property  NSXPCListenerEndpoint *endpoint
 @property  MuxNotificationSink *notificationSink
 @property  NSError *reconnectError

  // instance methods
  -[CoreTelephonyClientMux addDelegate:queue:]
  -[CoreTelephonyClientMux xpcQueue]
  -[CoreTelephonyClientMux setEndpoint:]
  -[CoreTelephonyClientMux removeAssertionForInvalidationNotification:]
  -[CoreTelephonyClientMux _connection]
  -[CoreTelephonyClientMux _ensureConnectionSetup_sync:]
  -[CoreTelephonyClientMux proxyWithQueue:errorHandler:]
  -[CoreTelephonyClientMux _setReconnectError_sync:]
  -[CoreTelephonyClientMux _registerForNotifications_sync:shouldForce:completion:]
  -[CoreTelephonyClientMux endpoint]
  -[CoreTelephonyClientMux .cxx_construct]
  -[CoreTelephonyClientMux dealloc]
  -[CoreTelephonyClientMux .cxx_destruct]
  -[CoreTelephonyClientMux cachedValueForSelector:]
  -[CoreTelephonyClientMux setXpcQueue:]
  -[CoreTelephonyClientMux connection]
  -[CoreTelephonyClientMux createCTAssertionForConnectionType:allocator:proxy:]
  -[CoreTelephonyClientMux removeDelegate:]
  -[CoreTelephonyClientMux _connect_sync]
  -[CoreTelephonyClientMux initWithEndpoint:sink:]
  -[CoreTelephonyClientMux initWithSink:]
  -[CoreTelephonyClientMux setNotificationSink:]
  -[CoreTelephonyClientMux _computeNotificationSet_sync:]
  -[CoreTelephonyClientMux _computeNotificationSetForced_sync]
  -[CoreTelephonyClientMux synchronousProxyWithErrorHandler:]
  -[CoreTelephonyClientMux _sendConnectionInvalidatedNotification:]
  -[CoreTelephonyClientMux setReconnectError:]
  -[CoreTelephonyClientMux cacheValue:forSelector:]
  -[CoreTelephonyClientMux _computeNotificationSetForced_sync:]
  -[CoreTelephonyClientMux sink:handleNotification:]
  -[CoreTelephonyClientMux registerBlockForInvalidationNotification:callbackQueue:callback:]
  -[CoreTelephonyClientMux proxyWithErrorHandler_sync:]
  -[CoreTelephonyClientMux _getAssertionTypeId]
  -[CoreTelephonyClientMux _ensureConnectionSetup_sync]
  -[CoreTelephonyClientMux _computeNotificationSet_sync:completion:]
  -[CoreTelephonyClientMux reconnectError]
  -[CoreTelephonyClientMux init]
  -[CoreTelephonyClientMux _initializeConnection_sync]
  -[CoreTelephonyClientMux notificationSink]
  -[CoreTelephonyClientMux setConnection:]


CTCallCenter : NSObject <CXCallObserverDelegate>
 @property  CXCallObserver *callKitObserver
 @property  NSSet *currentCalls
 @property  @? callEventHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CTCallCenter currentCalls]
  -[CTCallCenter .cxx_construct]
  -[CTCallCenter dealloc]
  -[CTCallCenter .cxx_destruct]
  -[CTCallCenter callObserver:callChanged:]
  -[CTCallCenter initialize]
  -[CTCallCenter initWithQueue:]
  -[CTCallCenter setCurrentCalls:]
  -[CTCallCenter init]
  -[CTCallCenter handleCallStatusChange_sync:]
  -[CTCallCenter callEventHandler]
  -[CTCallCenter setCallEventHandler:]
  -[CTCallCenter getCurrentCallSetFromServer_sync:]
  -[CTCallCenter calculateCallStateChanges_sync:]
  -[CTCallCenter broadcastCallStateChangesIfNeededWithFailureLogMessage:]
  -[CTCallCenter callKitObserver]
  -[CTCallCenter setCallKitObserver:]


CTCall : NSObject
 @property  NSString *callState
 @property  NSString *callID

  // class methods
  +[CTCall callForCTCallRef:]
  +[CTCall callForCXCall:]

  // instance methods
  -[CTCall callState]
  -[CTCall dealloc]
  -[CTCall setCallState:]
  -[CTCall isEqual:]
  -[CTCall callID]
  -[CTCall setCallID:]


CTSignalStrengthInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *bars
 @property  NSNumber *displayBars
 @property  NSNumber *maxDisplayBars

  // class methods
  +[CTSignalStrengthInfo supportsSecureCoding]

  // instance methods
  -[CTSignalStrengthInfo bars]
  -[CTSignalStrengthInfo setBars:]
  -[CTSignalStrengthInfo maxDisplayBars]
  -[CTSignalStrengthInfo setDisplayBars:]
  -[CTSignalStrengthInfo encodeWithCoder:]
  -[CTSignalStrengthInfo .cxx_destruct]
  -[CTSignalStrengthInfo setMaxDisplayBars:]
  -[CTSignalStrengthInfo displayBars]
  -[CTSignalStrengthInfo copyWithZone:]
  -[CTSignalStrengthInfo initWithCoder:]


CTSignalStrengthMeasurements : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *rssi
 @property  NSNumber *rscp
 @property  NSNumber *ecn0
 @property  NSNumber *rsrp
 @property  NSNumber *rsrq
 @property  NSNumber *snr
 @property  NSNumber *ecio
 @property  NSNumber *rxagc

  // class methods
  +[CTSignalStrengthMeasurements supportsSecureCoding]

  // instance methods
  -[CTSignalStrengthMeasurements setSnr:]
  -[CTSignalStrengthMeasurements snr]
  -[CTSignalStrengthMeasurements setRssi:]
  -[CTSignalStrengthMeasurements encodeWithCoder:]
  -[CTSignalStrengthMeasurements rssi]
  -[CTSignalStrengthMeasurements .cxx_destruct]
  -[CTSignalStrengthMeasurements copyWithZone:]
  -[CTSignalStrengthMeasurements initWithCoder:]
  -[CTSignalStrengthMeasurements rscp]
  -[CTSignalStrengthMeasurements setRscp:]
  -[CTSignalStrengthMeasurements ecn0]
  -[CTSignalStrengthMeasurements setEcn0:]
  -[CTSignalStrengthMeasurements rsrp]
  -[CTSignalStrengthMeasurements setRsrp:]
  -[CTSignalStrengthMeasurements rsrq]
  -[CTSignalStrengthMeasurements setRsrq:]
  -[CTSignalStrengthMeasurements ecio]
  -[CTSignalStrengthMeasurements setEcio:]
  -[CTSignalStrengthMeasurements rxagc]
  -[CTSignalStrengthMeasurements setRxagc:]


CTXPCServiceSubscriptionContext : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *labelID
 @property  NSString *label
 @property  NSString *phoneNumber
 @property  NSNumber *userDataPreferred
 @property  NSNumber *userDefaultVoice
 @property  BOOL isSimPresent
 @property  BOOL isSimGood
 @property  long long slotID
 @property  NSUUID *uuid

  // class methods
  +[CTXPCServiceSubscriptionContext supportsSecureCoding]
  +[CTXPCServiceSubscriptionContext contextWithServiceDescriptor:]
  +[CTXPCServiceSubscriptionContext contextWithSlot:]
  +[CTXPCServiceSubscriptionContext contextWithUUID:]

  // instance methods
  -[CTXPCServiceSubscriptionContext userDefaultVoice]
  -[CTXPCServiceSubscriptionContext phoneNumber]
  -[CTXPCServiceSubscriptionContext labelID]
  -[CTXPCServiceSubscriptionContext isSimGood]
  -[CTXPCServiceSubscriptionContext setUserDefaultVoice:]
  -[CTXPCServiceSubscriptionContext encodeWithCoder:]
  -[CTXPCServiceSubscriptionContext setUserDataPreferred:]
  -[CTXPCServiceSubscriptionContext setIsSimPresent:]
  -[CTXPCServiceSubscriptionContext setPhoneNumber:]
  -[CTXPCServiceSubscriptionContext isSimPresent]
  -[CTXPCServiceSubscriptionContext setLabel:]
  -[CTXPCServiceSubscriptionContext userDataPreferred]
  -[CTXPCServiceSubscriptionContext uuid]
  -[CTXPCServiceSubscriptionContext .cxx_destruct]
  -[CTXPCServiceSubscriptionContext setIsSimGood:]
  -[CTXPCServiceSubscriptionContext initWithUUID:]
  -[CTXPCServiceSubscriptionContext slotID]
  -[CTXPCServiceSubscriptionContext copyWithZone:]
  -[CTXPCServiceSubscriptionContext label]
  -[CTXPCServiceSubscriptionContext context]
  -[CTXPCServiceSubscriptionContext setLabelID:]
  -[CTXPCServiceSubscriptionContext redactedDescription]
  -[CTXPCServiceSubscriptionContext initWithUUID:andSlot:]
  -[CTXPCServiceSubscriptionContext initWithSlot:]
  -[CTXPCServiceSubscriptionContext isEqual:]
  -[CTXPCServiceSubscriptionContext initWithCoder:]


CTXPCServiceSubscriptionInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *subscriptions
 @property  NSArray *subscriptionsInUse
 @property  NSArray *subscriptionsValid

  // class methods
  +[CTXPCServiceSubscriptionInfo supportsSecureCoding]

  // instance methods
  -[CTXPCServiceSubscriptionInfo setSubscriptions:]
  -[CTXPCServiceSubscriptionInfo subscriptions]
  -[CTXPCServiceSubscriptionInfo encodeWithCoder:]
  -[CTXPCServiceSubscriptionInfo .cxx_destruct]
  -[CTXPCServiceSubscriptionInfo setSubscriptionsValid:]
  -[CTXPCServiceSubscriptionInfo copyWithZone:]
  -[CTXPCServiceSubscriptionInfo subscriptionsValid]
  -[CTXPCServiceSubscriptionInfo setSubscriptionsInUse:]
  -[CTXPCServiceSubscriptionInfo subscriptionsInUse]
  -[CTXPCServiceSubscriptionInfo redactedDescription]
  -[CTXPCServiceSubscriptionInfo isEqual:]
  -[CTXPCServiceSubscriptionInfo initWithCoder:]


CTXPCContextInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *labelID
 @property  NSString *label
 @property  NSString *phoneNumber
 @property  NSUUID *uuid
 @property  NSString *accountID
 @property  long long slotID

  // class methods
  +[CTXPCContextInfo supportsSecureCoding]
  +[CTXPCContextInfo contextWithUUID:andAccountID:andSlot:]

  // instance methods
  -[CTXPCContextInfo accountID]
  -[CTXPCContextInfo phoneNumber]
  -[CTXPCContextInfo labelID]
  -[CTXPCContextInfo encodeWithCoder:]
  -[CTXPCContextInfo setPhoneNumber:]
  -[CTXPCContextInfo setLabel:]
  -[CTXPCContextInfo uuid]
  -[CTXPCContextInfo .cxx_destruct]
  -[CTXPCContextInfo slotID]
  -[CTXPCContextInfo copyWithZone:]
  -[CTXPCContextInfo label]
  -[CTXPCContextInfo context]
  -[CTXPCContextInfo setLabelID:]
  -[CTXPCContextInfo isEqual:]
  -[CTXPCContextInfo initWithCoder:]
  -[CTXPCContextInfo initWithUUID:andAccountID:andSlot:]


CTXPCContexts : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *subscriptions
 @property  NSUUID *dataPreferred
 @property  NSUUID *voicePreferred

  // class methods
  +[CTXPCContexts supportsSecureCoding]

  // instance methods
  -[CTXPCContexts setSubscriptions:]
  -[CTXPCContexts subscriptions]
  -[CTXPCContexts setDataPreferred:]
  -[CTXPCContexts voicePreferred]
  -[CTXPCContexts encodeWithCoder:]
  -[CTXPCContexts setVoicePreferred:]
  -[CTXPCContexts .cxx_destruct]
  -[CTXPCContexts dataPreferred]
  -[CTXPCContexts copyWithZone:]
  -[CTXPCContexts findForAccount:]
  -[CTXPCContexts findForSlot:]
  -[CTXPCContexts findForUuid:]
  -[CTXPCContexts isEqual:]
  -[CTXPCContexts initWithCoder:]


CoreTelephonyClient : NSObject
 @property  {queue={object=^{dispatch_object_s}}} userQueue
 @property  CoreTelephonyClientMux *mux
 @property  id delegate

  // class methods
  +[CoreTelephonyClient sharedMultiplexer]

  // instance methods
  -[CoreTelephonyClient proxyWithErrorHandler:]
  -[CoreTelephonyClient purchaseAddOnPlan:completion:]
  -[CoreTelephonyClient setDelegate:]
  -[CoreTelephonyClient delegate]
  -[CoreTelephonyClient .cxx_construct]
  -[CoreTelephonyClient dealloc]
  -[CoreTelephonyClient .cxx_destruct]
  -[CoreTelephonyClient cachedValueForSelector:]
  -[CoreTelephonyClient createCTAssertionForConnectionType:allocator:proxy:]
  -[CoreTelephonyClient synchronousProxyWithErrorHandler:]
  -[CoreTelephonyClient initWithQueue:]
  -[CoreTelephonyClient supportsCellular]
  -[CoreTelephonyClient ping:]
  -[CoreTelephonyClient cacheValue:forSelector:]
  -[CoreTelephonyClient getDeviceInfo:]
  -[CoreTelephonyClient getTetheringStatus:]
  -[CoreTelephonyClient init]
  -[CoreTelephonyClient getDescriptorsForDomain:error:]
  -[CoreTelephonyClient getDataStatus:error:]
  -[CoreTelephonyClient private_setPacketContextActiveByServiceType:connectionType:active:]
  -[CoreTelephonyClient private_getConnectionAvailability:connectionType:error:]
  -[CoreTelephonyClient private_getActiveConnections:error:]
  -[CoreTelephonyClient private_getConnectionState:connectionType:error:]
  -[CoreTelephonyClient private_getTrafficDescriptorsInfo:connectionType:error:]
  -[CoreTelephonyClient private_getDataStatus:error:]
  -[CoreTelephonyClient private_getNATTKeepAliveOverCell:error:]
  -[CoreTelephonyClient getCurrentDataServiceDescriptor:]
  -[CoreTelephonyClient setPacketContextActiveByServiceType:connectionType:active:completion:]
  -[CoreTelephonyClient setPacketContextActiveByServiceType:connectionType:active:]
  -[CoreTelephonyClient setInternetActive:completion:]
  -[CoreTelephonyClient setInternetActive:]
  -[CoreTelephonyClient setTetheringActive:completion:]
  -[CoreTelephonyClient setTetheringActive:]
  -[CoreTelephonyClient resetAPNSettings:]
  -[CoreTelephonyClient resetAPNSettings]
  -[CoreTelephonyClient addLowLatencyFilter:pdp:queueSetId:uplink:completion:]
  -[CoreTelephonyClient getLowLatencyFilters:queueSetId:completion:]
  -[CoreTelephonyClient deleteLowLatencyFilter:pdp:queueSetId:uplink:completion:]
  -[CoreTelephonyClient sendDeadPeerDetection:]
  -[CoreTelephonyClient sendDeadPeerDetection]
  -[CoreTelephonyClient setInternationalDataAccessStatus:completion:]
  -[CoreTelephonyClient setInternationalDataAccessStatus:]
  -[CoreTelephonyClient setInternationalDataAccess:status:completion:]
  -[CoreTelephonyClient setInternationalDataAccessSync:status:]
  -[CoreTelephonyClient getInternationalDataAccessStatus:]
  -[CoreTelephonyClient getInternationalDataAccessStatusSync:]
  -[CoreTelephonyClient getInternationalDataAccess:completion:]
  -[CoreTelephonyClient getInternationalDataAccessSync:error:]
  -[CoreTelephonyClient setSupportDynamicDataSimSwitchOnBBCall:completion:]
  -[CoreTelephonyClient setSupportDynamicDataSimSwitch:completion:]
  -[CoreTelephonyClient setSupportDynamicDataSimSwitch:forIccid:completion:]
  -[CoreTelephonyClient setSupportDynamicDataSimSwitchOnBBCall:]
  -[CoreTelephonyClient setSupportDynamicDataSimSwitch:]
  -[CoreTelephonyClient getSupportDynamicDataSimSwitchOnBBCall:]
  -[CoreTelephonyClient getSupportDynamicDataSimSwitch:]
  -[CoreTelephonyClient getSupportDynamicDataSimSwitchOnBBCallSync:]
  -[CoreTelephonyClient getSupportDynamicDataSimSwitchSync:]
  -[CoreTelephonyClient getPacketContextCount:]
  -[CoreTelephonyClient getConnectionAvailability:connectionType:completion:]
  -[CoreTelephonyClient getConnectionAvailability:connectionType:error:]
  -[CoreTelephonyClient getInternetConnectionAvailability:]
  -[CoreTelephonyClient getInternetConnectionAvailabilitySync:]
  -[CoreTelephonyClient getActiveConnections:completion:]
  -[CoreTelephonyClient getActiveConnections:error:]
  -[CoreTelephonyClient getConnectionState:connectionType:completion:]
  -[CoreTelephonyClient getConnectionState:connectionType:error:]
  -[CoreTelephonyClient getTrafficDescriptorsInfo:connectionType:error:]
  -[CoreTelephonyClient getInternetConnectionState:]
  -[CoreTelephonyClient getInternetConnectionStateSync:]
  -[CoreTelephonyClient getDataStatus:completion:]
  -[CoreTelephonyClient getDataStatusBasic:completion:]
  -[CoreTelephonyClient getDataStatusBasic:error:]
  -[CoreTelephonyClient getInternetDataStatus:]
  -[CoreTelephonyClient getInternetDataStatusSync:]
  -[CoreTelephonyClient getInternetDataStatusBasic:]
  -[CoreTelephonyClient getInternetDataStatusBasicSync:]
  -[CoreTelephonyClient getPublicDataBearer:]
  -[CoreTelephonyClient getPublicDataBearerSync:]
  -[CoreTelephonyClient getPublicNrFrequencyRange:]
  -[CoreTelephonyClient getPublicNrFrequencyRangeSync:]
  -[CoreTelephonyClient getNATTKeepAliveOverCell:completion:]
  -[CoreTelephonyClient getNATTKeepAliveOverCell:error:]
  -[CoreTelephonyClient getNATTKeepAliveOverCell:]
  -[CoreTelephonyClient getNATTKeepAliveOverCellForPreferredDataContext:]
  -[CoreTelephonyClient isTetheringEditingSupported:error:]
  -[CoreTelephonyClient isTetheringEditingSupported:completion:]
  -[CoreTelephonyClient getAnbrActivationState:completion:]
  -[CoreTelephonyClient queryAnbrBitrate:bitrate:direction:completion:]
  -[CoreTelephonyClient simulateDataStall:pdp:completion:]
  -[CoreTelephonyClient getCurrentDataSubscriptionContext:]
  -[CoreTelephonyClient getCurrentDataSubscriptionContextSync:]
  -[CoreTelephonyClient getCurrentDataServiceDescriptorSync:]
  -[CoreTelephonyClient getPreferredDataSubscriptionContext:]
  -[CoreTelephonyClient getPreferredDataServiceDescriptor:]
  -[CoreTelephonyClient getPreferredDataSubscriptionContextSync:]
  -[CoreTelephonyClient getPreferredDataServiceDescriptorSync:]
  -[CoreTelephonyClient getTetheringStatus:connectionType:]
  -[CoreTelephonyClient getTetheringStatusSync:]
  -[CoreTelephonyClient getTetheringStatusSync:connectionType:]
  -[CoreTelephonyClient enterLoopBackMode]
  -[CoreTelephonyClient createAssertionForConnectionType:allocator:error:onReAssertError:]
  -[CoreTelephonyClient setWiFiCallingSettingPreferences:key:value:completion:]
  -[CoreTelephonyClient getWiFiCallingSettingPreferences:key:completion:]
  -[CoreTelephonyClient getWiFiCallingSettingPreferences:key:error:]
  -[CoreTelephonyClient setWiFiCallingSettingPreferences:key:value:]
  -[CoreTelephonyClient copyEmergencyMode:]
  -[CoreTelephonyClient copyEmergencyModeWithError:]
  -[CoreTelephonyClient refreshCellMonitor:completion:]
  -[CoreTelephonyClient copyCellInfo:completion:]
  -[CoreTelephonyClient copyCellId:completion:]
  -[CoreTelephonyClient copyPublicCellId:error:]
  -[CoreTelephonyClient copyLocationAreaCode:completion:]
  -[CoreTelephonyClient isEmergencyNumber:number:completion:]
  -[CoreTelephonyClient isEmergencyNumber:number:error:]
  -[CoreTelephonyClient isEmergencyNumberWithWhitelistIncluded:number:completion:]
  -[CoreTelephonyClient isEmergencyNumberWithWhitelistIncluded:number:error:]
  -[CoreTelephonyClient shouldShowUserWarningWhenDialingCallOnContext:completion:]
  -[CoreTelephonyClient shouldShowUserWarningWhenDialingCallOnContext:error:]
  -[CoreTelephonyClient shouldShowBrandedCallingInfo:]
  -[CoreTelephonyClient setShouldShowBrandedCallingInfo:]
  -[CoreTelephonyClient getCallCapabilities:completion:]
  -[CoreTelephonyClient getCallCapabilities:error:]
  -[CoreTelephonyClient getOperatorMultiPartyCallCountMaximum:completion:]
  -[CoreTelephonyClient getOperatorMultiPartyCallCountMaximum:error:]
  -[CoreTelephonyClient getSmsReadyState:completion:]
  -[CoreTelephonyClient getSmsReadyState:error:]
  -[CoreTelephonyClient getSmscAddress:completion:]
  -[CoreTelephonyClient getSmscAddress:error:]
  -[CoreTelephonyClient getEmergencyTextNumbers:completion:]
  -[CoreTelephonyClient getEmergencyTextNumbers:error:]
  -[CoreTelephonyClient dataUsageForLastPeriods:completion:]
  -[CoreTelephonyClient dataUsageForLastPeriodsOnActivePairedDevice:completion:]
  -[CoreTelephonyClient billingCycleEndDatesForLastPeriods:error:]
  -[CoreTelephonyClient userEnteredMonthlyBudget:completion:]
  -[CoreTelephonyClient userEnteredMonthlyBudget:error:]
  -[CoreTelephonyClient setUserEntered:monthlyBudget:completion:]
  -[CoreTelephonyClient setUserEntered:monthlyBudget:error:]
  -[CoreTelephonyClient clearUserEnteredMonthlyBudget:completion:]
  -[CoreTelephonyClient clearUserEnteredMonthlyBudget:error:]
  -[CoreTelephonyClient userEnteredMonthlyRoamingBudget:completion:]
  -[CoreTelephonyClient userEnteredMonthlyRoamingBudget:error:]
  -[CoreTelephonyClient setUserEntered:monthlyRoamingBudget:completion:]
  -[CoreTelephonyClient setUserEntered:monthlyRoamingBudget:error:]
  -[CoreTelephonyClient clearUserEnteredMonthlyRoamingBudget:completion:]
  -[CoreTelephonyClient clearUserEnteredMonthlyRoamingBudget:error:]
  -[CoreTelephonyClient userEnteredBillingEndDayOfMont:completion:]
  -[CoreTelephonyClient userEnteredBillingEndDayOfMont:error:]
  -[CoreTelephonyClient setUserEnteredBillingEnd:dayOfMonth:completion:]
  -[CoreTelephonyClient setUserEnteredBillingEnd:dayOfMonth:error:]
  -[CoreTelephonyClient clearUserEnteredBillingEndDayOfMonth:completion:]
  -[CoreTelephonyClient clearUserEnteredBillingEndDayOfMonth:error:]
  -[CoreTelephonyClient supportsSelector:withContext:error:]
  -[CoreTelephonyClient copyCarrierBundleValue:key:bundleType:completion:]
  -[CoreTelephonyClient copyCarrierBundleValue:key:bundleType:error:]
  -[CoreTelephonyClient copyCarrierBundleValue:keyHierarchy:bundleType:completion:]
  -[CoreTelephonyClient copyCarrierBundleValue:keyHierarchy:bundleType:error:]
  -[CoreTelephonyClient copyCarrierBundleValues:keys:defaultValues:bundleType:withFallbackBundleCheck:completion:]
  -[CoreTelephonyClient copyCarrierBundleValues:keys:defaultValues:bundleType:withFallbackBundleCheck:error:]
  -[CoreTelephonyClient copyCarrierBundleValues:keyHierarchies:defaultValues:bundleType:withFallbackBundleCheck:completion:]
  -[CoreTelephonyClient copyCarrierBundleValues:keyHierarchies:defaultValues:bundleType:withFallbackBundleCheck:error:]
  -[CoreTelephonyClient copyCarrierBundleValueWithDefault:key:bundleType:completion:]
  -[CoreTelephonyClient copyCarrierBundleValueWithDefault:key:bundleType:error:]
  -[CoreTelephonyClient copyCarrierBundleValueWithDefault:keyHierarchy:bundleType:completion:]
  -[CoreTelephonyClient copyCarrierBundleValueWithDefault:keyHierarchy:bundleType:error:]
  -[CoreTelephonyClient copyCarrierBundleValueWithCountryBundleLookup:keyHierarchy:matchingInfo:error:]
  -[CoreTelephonyClient context:getCarrierBundleValue:error:]
  -[CoreTelephonyClient context:getCarrierBundleValue:completion:]
  -[CoreTelephonyClient copyCarrierBundleLocation:completion:]
  -[CoreTelephonyClient copyCarrierBundleLocation:error:]
  -[CoreTelephonyClient copyCarrierBookmarks:completion:]
  -[CoreTelephonyClient copyCarrierBundleVersion:completion:]
  -[CoreTelephonyClient copyCarrierBundleVersion:error:]
  -[CoreTelephonyClient isAttachApnSettingAllowed:completion:]
  -[CoreTelephonyClient isAttachApnSettingAllowed:error:]
  -[CoreTelephonyClient context:modifyAttachApnSettings:]
  -[CoreTelephonyClient context:modifyAttachApnSettings:completion:]
  -[CoreTelephonyClient context:getAttachApnSettings:]
  -[CoreTelephonyClient copyBundleVersion:bundleType:completion:]
  -[CoreTelephonyClient copyBundleVersion:bundleType:error:]
  -[CoreTelephonyClient copyBundleIdentifier:bundleType:completion:]
  -[CoreTelephonyClient copyBundleIdentifier:bundleType:error:]
  -[CoreTelephonyClient restoreToSystemBundles:]
  -[CoreTelephonyClient getCountryBundleLocationForBundleIdentifier:error:]
  -[CoreTelephonyClient getCountryBundleIdentifierForCountryCode:error:]
  -[CoreTelephonyClient getEnglishCarrierNameFor:error:]
  -[CoreTelephonyClient copyBundleLocation:bundleType:completion:]
  -[CoreTelephonyClient copyBundleLocation:bundleType:error:]
  -[CoreTelephonyClient checkForUpdatedBundlesWithAutoInstall:completion:]
  -[CoreTelephonyClient checkRadioBootHealth:]
  -[CoreTelephonyClient getBasebandRadioFrequencyFrontEndScanData:]
  -[CoreTelephonyClient setVoLTEAudioCodec:codecInfo:completion:]
  -[CoreTelephonyClient getSubscriptionInfo:]
  -[CoreTelephonyClient getActiveContexts:]
  -[CoreTelephonyClient getDualSimCapability:]
  -[CoreTelephonyClient getDescriptorsForDomain:completion:]
  -[CoreTelephonyClient copyRegistrationStatus:completion:]
  -[CoreTelephonyClient copyRegistrationDisplayStatus:completion:]
  -[CoreTelephonyClient copyServingPlmn:completion:]
  -[CoreTelephonyClient copyMobileCountryCode:completion:]
  -[CoreTelephonyClient copyLastKnownMobileCountryCode:completion:]
  -[CoreTelephonyClient copyMobileNetworkCode:completion:]
  -[CoreTelephonyClient copyIsInHomeCountry:completion:]
  -[CoreTelephonyClient copyIsDataAttached:completion:]
  -[CoreTelephonyClient copyOperatorName:completion:]
  -[CoreTelephonyClient copyLocalizedOperatorName:completion:]
  -[CoreTelephonyClient copyRadioAccessTechnology:completion:]
  -[CoreTelephonyClient copyWirelessTechnology:completion:]
  -[CoreTelephonyClient copyAbbreviatedOperatorName:completion:]
  -[CoreTelephonyClient getRatSelection:completion:]
  -[CoreTelephonyClient setRatSelection:selection:preferred:completion:]
  -[CoreTelephonyClient copyBandInfo:completion:]
  -[CoreTelephonyClient setBandInfo:bands:completion:]
  -[CoreTelephonyClient getSignalStrengthInfo:completion:]
  -[CoreTelephonyClient getVoiceLinkQualityMetric:completion:]
  -[CoreTelephonyClient getEnhancedVoiceLinkQualityMetric:completion:]
  -[CoreTelephonyClient copyRejectCauseCode:completion:]
  -[CoreTelephonyClient copyRegistrationAgentStatus:completion:]
  -[CoreTelephonyClient getIMSRegistrationStatus:completion:]
  -[CoreTelephonyClient copyRegistrationIMSTransportInfo:completion:]
  -[CoreTelephonyClient setMaxDataRate:rate:completion:]
  -[CoreTelephonyClient getMaxDataRate:completion:]
  -[CoreTelephonyClient getSupportedDataRates:completion:]
  -[CoreTelephonyClient fetchNetworkList:completion:]
  -[CoreTelephonyClient copyNetworkList:completion:]
  -[CoreTelephonyClient automaticallySelectNetwork:completion:]
  -[CoreTelephonyClient selectNetwork:network:completion:]
  -[CoreTelephonyClient copyNetworkSelection:completion:]
  -[CoreTelephonyClient isNetworkSelectionMenuAvailable:completion:]
  -[CoreTelephonyClient copyNetworkSelectionMode:completion:]
  -[CoreTelephonyClient copyNetworkSelectionState:completion:]
  -[CoreTelephonyClient copyNetworkSelectionInfo:completion:]
  -[CoreTelephonyClient isNetworkReselectionNeeded:completion:]
  -[CoreTelephonyClient getSignalStrengthMeasurements:completion:]
  -[CoreTelephonyClient getLocalPolicies:completion:]
  -[CoreTelephonyClient getRemotePolicies:completion:]
  -[CoreTelephonyClient setLocalPolicies:completion:]
  -[CoreTelephonyClient setRemotePolicies:completion:]
  -[CoreTelephonyClient removePoliciesFromLocalDevice:completion:]
  -[CoreTelephonyClient performNetworkAccessFlowIfAllowed:ignoreForeground:completion:]
  -[CoreTelephonyClient getSIMStatus:completion:]
  -[CoreTelephonyClient getSIMTrayStatus:]
  -[CoreTelephonyClient isEmbeddedSIMOnlyConfig:]
  -[CoreTelephonyClient copyMobileEquipmentInfo:]
  -[CoreTelephonyClient copyFirmwareUpdateInfo:completion:]
  -[CoreTelephonyClient copySIMIdentity:completion:]
  -[CoreTelephonyClient copyMobileSubscriberIdentity:completion:]
  -[CoreTelephonyClient context:isProtectedIdentitySupported:completion:]
  -[CoreTelephonyClient context:supportedIdentityProtectionFor:completion:]
  -[CoreTelephonyClient context:getPseudoIdentityFor:completion:]
  -[CoreTelephonyClient createEncryptedIdentity:identity:completion:]
  -[CoreTelephonyClient evaluateMobileSubscriberIdentity:identity:completion:]
  -[CoreTelephonyClient copyMobileSubscriberCountryCode:completion:]
  -[CoreTelephonyClient getMobileSubscriberHomeCountryList:completion:]
  -[CoreTelephonyClient copyLastKnownMobileSubscriberCountryCode:completion:]
  -[CoreTelephonyClient copyMobileSubscriberNetworkCode:completion:]
  -[CoreTelephonyClient copyGid1:completion:]
  -[CoreTelephonyClient copyGid2:completion:]
  -[CoreTelephonyClient fetchSIMLockValue:completion:]
  -[CoreTelephonyClient saveSIMLockValue:enabled:pin:completion:]
  -[CoreTelephonyClient unlockPIN:pin:completion:]
  -[CoreTelephonyClient unlockPUK:puk:newPin:completion:]
  -[CoreTelephonyClient promptForSIMUnlock:completion:]
  -[CoreTelephonyClient changePIN:oldPin:newPin:completion:]
  -[CoreTelephonyClient getRemainingPINAttemptCount:completion:]
  -[CoreTelephonyClient getRemainingPUKAttemptCount:completion:]
  -[CoreTelephonyClient getSimLabel:completion:]
  -[CoreTelephonyClient getShortLabel:completion:]
  -[CoreTelephonyClient getSubscriptionUserFacingName:completion:]
  -[CoreTelephonyClient copyLabel:completion:]
  -[CoreTelephonyClient generateAuthenticationInfoUsingSim:authParams:completion:]
  -[CoreTelephonyClient setLabel:label:completion:]
  -[CoreTelephonyClient setDefaultVoice:completion:]
  -[CoreTelephonyClient setActiveUserDataSelection:completion:]
  -[CoreTelephonyClient SIMUnlockProcedureDidComplete]
  -[CoreTelephonyClient authenticate:request:completion:]
  -[CoreTelephonyClient getUserDefaultVoiceSubscriptionContext:]
  -[CoreTelephonyClient getVoicemailInfo:completion:]
  -[CoreTelephonyClient copyPriVersion:completion:]
  -[CoreTelephonyClient getActivationPolicyState:]
  -[CoreTelephonyClient isFactoryDebugEnabled:]
  -[CoreTelephonyClient setUIConfiguredApns:apns:completion:]
  -[CoreTelephonyClient getUIConfiguredApns:completion:]
  -[CoreTelephonyClient resetUIConfiguredApns:completion:]
  -[CoreTelephonyClient getConfiguredApns:completion:]
  -[CoreTelephonyClient deletePersonalWallet:completion:]
  -[CoreTelephonyClient listPersonalWallets:]
  -[CoreTelephonyClient isPNRSupported:completion:]
  -[CoreTelephonyClient issuePNRRequest:pnrReqType:completion:]
  -[CoreTelephonyClient getPNRContext:completion:]
  -[CoreTelephonyClient context:getPhoneNumberSignatureWithCompletion:]
  -[CoreTelephonyClient getQoSLinkCharacteristics:]
  -[CoreTelephonyClient fetchCallWaitingValue:callClass:completion:]
  -[CoreTelephonyClient saveCallWaitingValue:callClass:enabled:completion:]
  -[CoreTelephonyClient fetchCallForwardingValue:reason:callClass:completion:]
  -[CoreTelephonyClient saveCallForwardingValue:value:completion:]
  -[CoreTelephonyClient isUnconditionalCallForwardingActive:completion:]
  -[CoreTelephonyClient fetchCallBarringValue:facility:callClass:password:completion:]
  -[CoreTelephonyClient saveCallBarringValue:facility:callClass:enabled:password:completion:]
  -[CoreTelephonyClient fetchConnectedLinePresentationValue:completion:]
  -[CoreTelephonyClient fetchCallingLinePresentationValue:completion:]
  -[CoreTelephonyClient fetchConnectedLineIdRestrictionValue:completion:]
  -[CoreTelephonyClient fetchCallingLineIdRestrictionValue:completion:]
  -[CoreTelephonyClient saveCallingLineIdRestrictionValue:restrictionValue:completion:]
  -[CoreTelephonyClient context:canSetCapability:completion:]
  -[CoreTelephonyClient context:getCapability:completion:]
  -[CoreTelephonyClient context:getSystemCapabilities:]
  -[CoreTelephonyClient getPhoneServicesDeviceList:]
  -[CoreTelephonyClient getPhoneServicesDeviceInfo:]
  -[CoreTelephonyClient context:addPhoneServicesDevice:withCompletion:]
  -[CoreTelephonyClient context:removePhoneServicesDevice:withCompletion:]
  -[CoreTelephonyClient context:isMandatoryDisabledVoLTE:]
  -[CoreTelephonyClient selectPhonebook:forPhonebookName:withPassword:completion:]
  -[CoreTelephonyClient savePhonebookEntry:atIndex:withContactName:contactNumber:completion:]
  -[CoreTelephonyClient fetchPhonebook:completion:]
  -[CoreTelephonyClient getPhonebookEntryWithCompletion:atIndex:completion:]
  -[CoreTelephonyClient getPhonebookEntryCountWithCompletion:completion:]
  -[CoreTelephonyClient getPhoneNumberWithCompletion:completion:]
  -[CoreTelephonyClient addPlanWith:appName:appType:completionHandler:]
  -[CoreTelephonyClient addPlanWith:completionHandler:]
  -[CoreTelephonyClient getCameraScanInfoForCardData:completionHandler:]
  -[CoreTelephonyClient getTransferPlanListWithCompletion:]
  -[CoreTelephonyClient getTransferPlansWithCompletion:]
  -[CoreTelephonyClient transferPlan:fromDevice:completionHandler:]
  -[CoreTelephonyClient transferCellularPlan:fromDevice:completionHandler:]
  -[CoreTelephonyClient transferPlans:fromDevice:completionHandler:]
  -[CoreTelephonyClient transferCellularPlans:fromDevice:completionHandler:]
  -[CoreTelephonyClient cancelCellularPlanTransfer:fromDevice:keepCache:completionHandler:]
  -[CoreTelephonyClient convertPhysicalToeSIMWithCompletionHandler:]
  -[CoreTelephonyClient getPlanTransferCredentials:completion:]
  -[CoreTelephonyClient getTransferType:remoteEid:completion:]
  -[CoreTelephonyClient deleteTransferPlansForImei:completion:]
  -[CoreTelephonyClient deleteZone:completion:]
  -[CoreTelephonyClient plansPendingInstallWithCompletion:]
  -[CoreTelephonyClient installPendingPlan:completion:]
  -[CoreTelephonyClient installPendingPlanList:completion:]
  -[CoreTelephonyClient getRemoteDevices:]
  -[CoreTelephonyClient submitSimSetupUsage:completion:]
  -[CoreTelephonyClient getCarrierSetupWithCompletion:]
  -[CoreTelephonyClient websheetInfoForPlan:inBuddy:completion:]
  -[CoreTelephonyClient encryptDataForPlan:data:completion:]
  -[CoreTelephonyClient encryptDataWithCarrierIdentifiers:mnc:gid1:gid2:data:completion:]
  -[CoreTelephonyClient disableRejectedIccid:]
  -[CoreTelephonyClient submitCarrierSetupUserCancelEvent:]
  -[CoreTelephonyClient registerSetUpeSIMLaunchedEvent:]
  -[CoreTelephonyClient setUpeSIMLaunched:]
  -[CoreTelephonyClient bootstrapPlanTransferForEndpoint:usingMessageSession:completion:]
  -[CoreTelephonyClient isAnyPlanOfTransferCapability:availableForThisDeviceWithCompletion:]
  -[CoreTelephonyClient transferRemotePlan:fromDevice:completion:]
  -[CoreTelephonyClient hideTransferPlan:fromDevice:completion:]
  -[CoreTelephonyClient hideTransferCellularPlan:fromDevice:completion:]
  -[CoreTelephonyClient unhideTransferPlan:completion:]
  -[CoreTelephonyClient hiddenTransferPlans:]
  -[CoreTelephonyClient remotePlanSignupInfoFor:userConsent:completion:]
  -[CoreTelephonyClient getRemotePlanManageAccountInfoFor:completion:]
  -[CoreTelephonyClient getProximityTransportSession:remoteDeviceInfo:completion:]
  -[CoreTelephonyClient activateProximityTransfer:completion:]
  -[CoreTelephonyClient invalidateProximityTransfer:force:completion:]
  -[CoreTelephonyClient validateProximityTransfer:pin:completion:]
  -[CoreTelephonyClient resetProximityTransportExtension:]
  -[CoreTelephonyClient getSweetgumCapabilities:completion:]
  -[CoreTelephonyClient getSweetgumUserConsentInfo:completion:]
  -[CoreTelephonyClient setSweetgumUserConsent:userConsent:completion:]
  -[CoreTelephonyClient getSweetgumUsage:completion:]
  -[CoreTelephonyClient refreshSweetgumUsage:completion:]
  -[CoreTelephonyClient getSweetgumPlans:completion:]
  -[CoreTelephonyClient refreshSweetgumPlans:completion:]
  -[CoreTelephonyClient getSweetgumApps:completion:]
  -[CoreTelephonyClient refreshSweetgumApps:completion:]
  -[CoreTelephonyClient refreshSweetgumAll:completion:]
  -[CoreTelephonyClient getSweetgumDataPlanMetrics:completion:]
  -[CoreTelephonyClient purchaseSweetgumPlan:completion:]
  -[CoreTelephonyClient isVinylTestModeEnabledWithCompletion:]
  -[CoreTelephonyClient setVinylTestMode:completion:]
  -[CoreTelephonyClient setEosStatus:assertionState:completion:]
  -[CoreTelephonyClient getEosStatus:]
  -[CoreTelephonyClient setPrefForKey:heirarchy:value:storage:completion:]
  -[CoreTelephonyClient getPrefForKey:heirarchy:storage:completion:]
  -[CoreTelephonyClient terminateProcess:]
  -[CoreTelephonyClient getRadioPersonality:completion:]
  -[CoreTelephonyClient isPrivateNetworkSIM:completion:]
  -[CoreTelephonyClient isPrivateNetworkPreferredOverWifi:completion:]
  -[CoreTelephonyClient supportsEmbeddedSIM]
  -[CoreTelephonyClient getSIMToolkitMenu:menu:]
  -[CoreTelephonyClient selectSIMToolkitMenuItem:index:]
  -[CoreTelephonyClient getSIMToolkitListItems:items:]
  -[CoreTelephonyClient selectSIMToolkitListItem:session:response:index:]
  -[CoreTelephonyClient sendSIMToolkitResponse:session:response:]
  -[CoreTelephonyClient sendSIMToolkitStringResponse:session:response:string:]
  -[CoreTelephonyClient sendSIMToolkitBooleanResponse:session:response:yesNo:]
  -[CoreTelephonyClient sendSIMToolkitUserActivity:]
  -[CoreTelephonyClient sendSIMToolkitDisplayReady:]
  -[CoreTelephonyClient getSIMToolkitUSSDString:ussdString:needRsp:]
  -[CoreTelephonyClient sendSIMToolkitUSSDResponse:response:]
  -[CoreTelephonyClient cancelSIMToolkitUSSDSession:]
  -[CoreTelephonyClient getSIMStatus:error:]
  -[CoreTelephonyClient getSIMTrayStatusOrError:]
  -[CoreTelephonyClient getMobileEquipmentInfo:]
  -[CoreTelephonyClient getMobileEquipmentInfoFor:error:]
  -[CoreTelephonyClient getTypeAllocationCode:error:]
  -[CoreTelephonyClient copySIMIdentity:error:]
  -[CoreTelephonyClient copyMobileSubscriberIdentity:error:]
  -[CoreTelephonyClient context:isProtectedIdentitySupported:error:]
  -[CoreTelephonyClient context:supportedIdentityProtectionFor:error:]
  -[CoreTelephonyClient context:getPseudoIdentityFor:error:]
  -[CoreTelephonyClient context:getEncryptedIdentity:error:]
  -[CoreTelephonyClient context:evaluateMobileSubscriberIdentity:]
  -[CoreTelephonyClient copyMobileSubscriberCountryCode:error:]
  -[CoreTelephonyClient copyMobileSubscriberIsoCountryCode:error:]
  -[CoreTelephonyClient copyMobileSubscriberIsoSubregionCode:MNC:error:]
  -[CoreTelephonyClient getSimHardwareInfo:error:]
  -[CoreTelephonyClient isEsimFor:error:]
  -[CoreTelephonyClient getMobileSubscriberHomeCountryList:error:]
  -[CoreTelephonyClient copyLastKnownMobileSubscriberCountryCode:error:]
  -[CoreTelephonyClient copyMobileSubscriberNetworkCode:error:]
  -[CoreTelephonyClient copyGid1:error:]
  -[CoreTelephonyClient copyGid2:error:]
  -[CoreTelephonyClient shouldAllowSimLockFor:]
  -[CoreTelephonyClient fetchSIMLockValue:error:]
  -[CoreTelephonyClient saveSIMLockValue:enabled:pin:error:]
  -[CoreTelephonyClient unlockPIN:pin:error:]
  -[CoreTelephonyClient unlockPUK:puk:newPin:error:]
  -[CoreTelephonyClient changePIN:oldPin:newPin:error:]
  -[CoreTelephonyClient getRemainingPINAttemptCount:error:]
  -[CoreTelephonyClient getRemainingPUKAttemptCount:error:]
  -[CoreTelephonyClient getSimLabel:error:]
  -[CoreTelephonyClient getShortLabel:error:]
  -[CoreTelephonyClient getSubscriptionUserFacingName:error:]
  -[CoreTelephonyClient copyLabel:error:]
  -[CoreTelephonyClient setLabel:label:error:]
  -[CoreTelephonyClient setDefaultVoice:error:]
  -[CoreTelephonyClient setActiveUserDataSelection:error:]
  -[CoreTelephonyClient getUserAuthToken:error:]
  -[CoreTelephonyClient refreshUserAuthToken:error:]
  -[CoreTelephonyClient getLastKnownSimDeactivationInfoFor:error:]
  -[CoreTelephonyClient copyMobileSubscriberIso3CountryCode:MNC:error:]
  -[CoreTelephonyClient checkEmbeddedSimHealthWithError:]
  -[CoreTelephonyClient isPrivateNetworkSIM:error:]
  -[CoreTelephonyClient updateGeofenceProfile:]
  -[CoreTelephonyClient removeGeofenceProfile]
  -[CoreTelephonyClient getRemoteDevicesOfType:error:]
  -[CoreTelephonyClient getRemoteDevicesForTransferOrError:]
  -[CoreTelephonyClient getRemoteDeviceOfType:withEID:error:]
  -[CoreTelephonyClient getRemoteDeviceForTransferWithEID:error:]
  -[CoreTelephonyClient hasDedicatedBearerSupport]
  -[CoreTelephonyClient addDedicatedBearer:error:]
  -[CoreTelephonyClient removeDedicatedBearer:]
  -[CoreTelephonyClient removeAllDedicatedBearers]
  -[CoreTelephonyClient isDedicatedBearerPresent:error:]
  -[CoreTelephonyClient getListOfPresentDedicatedBearers]
  -[CoreTelephonyClient requestQoSLinkCharacteristics]
  -[CoreTelephonyClient isPNRSupported:outError:]
  -[CoreTelephonyClient getPNRContext:outError:]
  -[CoreTelephonyClient isPhoneNumberCredentialValid:outError:]
  -[CoreTelephonyClient context:getPhoneNumberSignature:]
  -[CoreTelephonyClient context:canSetCapability:allowed:with:]
  -[CoreTelephonyClient context:getCapability:status:with:]
  -[CoreTelephonyClient context:setCapability:enabled:with:completion:]
  -[CoreTelephonyClient context:setCapability:enabled:with:]
  -[CoreTelephonyClient context:getSystemCapabilitiesWithCompletion:]
  -[CoreTelephonyClient getSupports5G:error:]
  -[CoreTelephonyClient context:recheckPhoneServicesAccountStatus:]
  -[CoreTelephonyClient getPhoneServicesDeviceListWithCompletion:]
  -[CoreTelephonyClient getPhoneServicesDeviceInfoWithCompletion:]
  -[CoreTelephonyClient context:addPhoneServicesDevice:]
  -[CoreTelephonyClient context:removePhoneServicesDevice:]
  -[CoreTelephonyClient wifiCallingCTFollowUpComplete:]
  -[CoreTelephonyClient context:mandatoryDisableVoLTE:]
  -[CoreTelephonyClient initWithQueue:multiplexer:]
  -[CoreTelephonyClient getSubscriptionInfoWithError:]
  -[CoreTelephonyClient getReleaseCandidateFlag]
  -[CoreTelephonyClient getAllowDevSignedCarrierBundlesFlag]
  -[CoreTelephonyClient getActiveContextsWithCallback:]
  -[CoreTelephonyClient supportsRequestWithSelector:]
  -[CoreTelephonyClient dispatchBlockToClientAsync:]
  -[CoreTelephonyClient registerBlockForInvalidationNotification:callback:]
  -[CoreTelephonyClient userQueue]
  -[CoreTelephonyClient setUserQueue:]
  -[CoreTelephonyClient mux]
  -[CoreTelephonyClient setMux:]
  -[CoreTelephonyClient copyRegistrationStatus:error:]
  -[CoreTelephonyClient copyRegistrationDisplayStatus:error:]
  -[CoreTelephonyClient copyServingPlmn:error:]
  -[CoreTelephonyClient copyMobileCountryCode:error:]
  -[CoreTelephonyClient copyLastKnownMobileCountryCode:error:]
  -[CoreTelephonyClient copyMobileNetworkCode:error:]
  -[CoreTelephonyClient copyIsInHomeCountry:error:]
  -[CoreTelephonyClient getOperatorName:error:]
  -[CoreTelephonyClient getLocalizedOperatorName:error:]
  -[CoreTelephonyClient getNRDisableStatus:error:]
  -[CoreTelephonyClient getSupports5GStandalone:error:]
  -[CoreTelephonyClient setSupports5GStandalone:enabled:]
  -[CoreTelephonyClient copyRadioAccessTechnology:error:]
  -[CoreTelephonyClient getRatSelectionMask:error:]
  -[CoreTelephonyClient setRatSelectionMask:selection:preferred:]
  -[CoreTelephonyClient getBandInfo:error:]
  -[CoreTelephonyClient setActiveBandInfo:bands:error:]
  -[CoreTelephonyClient getSignalStrengthInfo:error:]
  -[CoreTelephonyClient getRejectCauseCode:error:]
  -[CoreTelephonyClient getIMSRegistrationStatus:error:]
  -[CoreTelephonyClient setMaxDataRate:rate:]
  -[CoreTelephonyClient getMaxDataRate:error:]
  -[CoreTelephonyClient getSupportedDataRates:error:]
  -[CoreTelephonyClient isNetworkSelectionMenuAvailable:error:]
  -[CoreTelephonyClient copyNetworkSelectionInfo:error:]
  -[CoreTelephonyClient getEncryptionStatus:error:]
  -[CoreTelephonyClient getSignalStrengthMeasurements:error:]
  -[CoreTelephonyClient getDataMode:error:]
  -[CoreTelephonyClient getPublicSignalStrength:error:]
  -[CoreTelephonyClient getCurrentRat:error:]
  -[CoreTelephonyClient getLocalPolicies:error:]
  -[CoreTelephonyClient setLocalPolicies:]
  -[CoreTelephonyClient getUIConfiguredApns:error:]
  -[CoreTelephonyClient getConfiguredApns:error:]
  -[CoreTelephonyClient getGSMAUIControlSetting:error:]
  -[CoreTelephonyClient loadGSMASettings:state:]
  -[CoreTelephonyClient deletePersonalWallet:]
  -[CoreTelephonyClient renamePersonalWallet:to:]
  -[CoreTelephonyClient transferPersonalWallet:to:]
  -[CoreTelephonyClient isAnyPlanTransferableFromThisDeviceOrError:]
  -[CoreTelephonyClient bootstrapPlanTransferForEndpoint:]
  -[CoreTelephonyClient bootstrapPlanTransferForEndpoint:usingMessageSession:]
  -[CoreTelephonyClient endPlanTransferForEndPoint:]
  -[CoreTelephonyClient setPrefForKey:heirarchy:value:storage:]
  -[CoreTelephonyClient getPrefForKey:heirarchy:storage:error:]
  -[CoreTelephonyClient terminateProcess]
  -[CoreTelephonyClient getRadioPersonality:error:]
  -[CoreTelephonyClient isVinylTapeSupportedWithError:]
  -[CoreTelephonyClient fetchCallWaitingValue:callClass:]
  -[CoreTelephonyClient fetchCallForwardingValue:reason:callClass:]
  -[CoreTelephonyClient fetchCallBarringValue:facility:callClass:password:]
  -[CoreTelephonyClient fetchConnectedLinePresentationValue:]
  -[CoreTelephonyClient fetchCallingLinePresentationValue:]
  -[CoreTelephonyClient fetchConnectedLineIdRestrictionValue:]
  -[CoreTelephonyClient fetchCallingLineIdRestrictionValue:]
  -[CoreTelephonyClient saveCallWaitingValue:callClass:enabled:]
  -[CoreTelephonyClient saveCallForwardingValue:value:]
  -[CoreTelephonyClient saveCallBarringValue:facility:callClass:enabled:password:]
  -[CoreTelephonyClient saveCallingLineIdRestrictionValue:restrictionValue:]
  -[CoreTelephonyClient setVisualVoicemailState:subscribed:]
  -[CoreTelephonyClient reliableNetworkFallback:error:]
  -[CoreTelephonyClient setReliableNetworkFallback:enable:]
  -[CoreTelephonyClient saveDataMode:error:]
  -[CoreTelephonyClient lowDataMode:error:]
  -[CoreTelephonyClient setSaveDataMode:enable:]
  -[CoreTelephonyClient setLowDataMode:enable:]
  -[CoreTelephonyClient isSmartDataModeSupported:]
  -[CoreTelephonyClient smartDataMode:error:]
  -[CoreTelephonyClient setSmartDataMode:enable:]
  -[CoreTelephonyClient isHighDataModeSupported:error:]
  -[CoreTelephonyClient interfaceCostExpensive:error:]
  -[CoreTelephonyClient setInterfaceCost:expensive:]
  -[CoreTelephonyClient overriddenInterfaceCostInexpensive:]
  -[CoreTelephonyClient setOverriddenInterfaceCostInexpensive:]
  -[CoreTelephonyClient setPrivacyProxyState:enabled:]
  -[CoreTelephonyClient getPrivacyProxyState:error:]
  -[CoreTelephonyClient getPhonebookEntry:atIndex:error:]
  -[CoreTelephonyClient getPhonebookEntryCount:error:]
  -[CoreTelephonyClient getPhoneNumber:error:]
  -[CoreTelephonyClient fetchBasebandTicket:withError:]
  -[CoreTelephonyClient supportsHydraWithError:]
  -[CoreTelephonyClient usingBootstrapDataService:]
  -[CoreTelephonyClient addPlanWith:request:appName:completionHandler:]
  -[CoreTelephonyClient supportsPlanProvisioning:carrierDescriptors:smdpUrl:iccidPrefix:]
  -[CoreTelephonyClient cancelCellularPlanTransfer:fromDevice:completionHandler:]
  -[CoreTelephonyClient updateSecureIntentData:]
  -[CoreTelephonyClient needToLaunchSetUpeSIM:]


CTNRStatus : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL isSADisabled
 @property  unsigned long saDisabledReasonMask
 @property  BOOL isNSADisabled
 @property  unsigned long nsaDisabledReasonMask

  // class methods
  +[CTNRStatus supportsSecureCoding]
  +[CTNRStatus default]

  // instance methods
  -[CTNRStatus encodeWithCoder:]
  -[CTNRStatus copyWithZone:]
  -[CTNRStatus isEqual:]
  -[CTNRStatus initWithCoder:]
  -[CTNRStatus initWithSADisabled:saReasonMask:nsaDisabled:nsaReasonMask:]
  -[CTNRStatus isSADisabled]
  -[CTNRStatus setIsSADisabled:]
  -[CTNRStatus saDisabledReasonMask]
  -[CTNRStatus setSaDisabledReasonMask:]
  -[CTNRStatus isNSADisabled]
  -[CTNRStatus setIsNSADisabled:]
  -[CTNRStatus nsaDisabledReasonMask]
  -[CTNRStatus setNsaDisabledReasonMask:]


CTSIMToolkitMenu : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *title
 @property  NSArray *subTitles

  // class methods
  +[CTSIMToolkitMenu supportsSecureCoding]

  // instance methods
  -[CTSIMToolkitMenu encodeWithCoder:]
  -[CTSIMToolkitMenu .cxx_destruct]
  -[CTSIMToolkitMenu title]
  -[CTSIMToolkitMenu copyWithZone:]
  -[CTSIMToolkitMenu setTitle:]
  -[CTSIMToolkitMenu initWithCoder:]
  -[CTSIMToolkitMenu subTitles]
  -[CTSIMToolkitMenu setSubTitles:]


CTSweetgumPlansInfo : NSObject <NSSecureCoding>
 @property  NSArray *planGroups
 @property  NSString *morePlansURL

  // class methods
  +[CTSweetgumPlansInfo supportsSecureCoding]

  // instance methods
  -[CTSweetgumPlansInfo encodeWithCoder:]
  -[CTSweetgumPlansInfo .cxx_destruct]
  -[CTSweetgumPlansInfo isEqual:]
  -[CTSweetgumPlansInfo init]
  -[CTSweetgumPlansInfo initWithCoder:]
  -[CTSweetgumPlansInfo planGroups]
  -[CTSweetgumPlansInfo setPlanGroups:]
  -[CTSweetgumPlansInfo morePlansURL]
  -[CTSweetgumPlansInfo setMorePlansURL:]


CTNetworkList : NSObject <NSCopying, NSSecureCoding>
 @property  NSMutableArray *networks
 @property  BOOL moreComing

  // class methods
  +[CTNetworkList supportsSecureCoding]

  // instance methods
  -[CTNetworkList encodeWithCoder:]
  -[CTNetworkList .cxx_destruct]
  -[CTNetworkList networks]
  -[CTNetworkList copyWithZone:]
  -[CTNetworkList setNetworks:]
  -[CTNetworkList initWithCoder:]
  -[CTNetworkList moreComing]
  -[CTNetworkList setMoreComing:]


CTSweetgumPlan : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *planId
 @property  NSString *planLabel
 @property  NSString *planValue
 @property  unsigned char planSubscriptionStatus
 @property  BOOL planPurchasable
 @property  NSString *planDetailsURL
 @property  NSString *planTermsURL
 @property  NSString *planPurchaseURL
 @property  long long planType
 @property  long long planStatus

  // class methods
  +[CTSweetgumPlan supportsSecureCoding]

  // instance methods
  -[CTSweetgumPlan encodeWithCoder:]
  -[CTSweetgumPlan .cxx_destruct]
  -[CTSweetgumPlan copyWithZone:]
  -[CTSweetgumPlan isEqual:]
  -[CTSweetgumPlan init]
  -[CTSweetgumPlan initWithCoder:]
  -[CTSweetgumPlan planLabel]
  -[CTSweetgumPlan setPlanLabel:]
  -[CTSweetgumPlan planStatus]
  -[CTSweetgumPlan planPurchasable]
  -[CTSweetgumPlan planId]
  -[CTSweetgumPlan setPlanId:]
  -[CTSweetgumPlan planValue]
  -[CTSweetgumPlan setPlanValue:]
  -[CTSweetgumPlan planDetailsURL]
  -[CTSweetgumPlan setPlanDetailsURL:]
  -[CTSweetgumPlan planTermsURL]
  -[CTSweetgumPlan setPlanTermsURL:]
  -[CTSweetgumPlan planPurchaseURL]
  -[CTSweetgumPlan setPlanPurchaseURL:]
  -[CTSweetgumPlan planType]
  -[CTSweetgumPlan setPlanType:]
  -[CTSweetgumPlan planSubscriptionStatus]
  -[CTSweetgumPlan setPlanSubscriptionStatus:]
  -[CTSweetgumPlan setPlanPurchasable:]


CTRemoteDevice : NSObject <NSSecureCoding>
 @property  CTDeviceIdentifier *deviceID
 @property  NSArray *remoteDisplayPlans
 @property  NSArray *remotePlans
 @property  BOOL isMultiESimEnabled

  // class methods
  +[CTRemoteDevice supportsSecureCoding]

  // instance methods
  -[CTRemoteDevice deviceID]
  -[CTRemoteDevice setDeviceID:]
  -[CTRemoteDevice modelName]
  -[CTRemoteDevice encodeWithCoder:]
  -[CTRemoteDevice .cxx_destruct]
  -[CTRemoteDevice deviceType]
  -[CTRemoteDevice remotePlans]
  -[CTRemoteDevice deviceName]
  -[CTRemoteDevice isEqual:]
  -[CTRemoteDevice init]
  -[CTRemoteDevice initWithCoder:]
  -[CTRemoteDevice EID]
  -[CTRemoteDevice remoteDisplayPlans]
  -[CTRemoteDevice setRemoteDisplayPlans:]
  -[CTRemoteDevice setRemotePlans:]
  -[CTRemoteDevice isMultiESimEnabled]
  -[CTRemoteDevice setIsMultiESimEnabled:]


CTSubscriberAlgorithm : NSObject <NSSecureCoding>
  // class methods
  +[CTSubscriberAlgorithm supportsSecureCoding]

  // instance methods
  -[CTSubscriberAlgorithm encodeWithCoder:]
  -[CTSubscriberAlgorithm initWithCoder:]


CTSubscriberAlgorithmEAPSIM : CTSubscriberAlgorithm
 @property  NSData *rand

  // class methods
  +[CTSubscriberAlgorithmEAPSIM supportsSecureCoding]

  // instance methods
  -[CTSubscriberAlgorithmEAPSIM encodeWithCoder:]
  -[CTSubscriberAlgorithmEAPSIM .cxx_destruct]
  -[CTSubscriberAlgorithmEAPSIM initWithCoder:]
  -[CTSubscriberAlgorithmEAPSIM rand]
  -[CTSubscriberAlgorithmEAPSIM setRand:]


CTSubscriberAlgorithmEAPAKA : CTSubscriberAlgorithm
 @property  NSData *rand
 @property  NSData *autn

  // class methods
  +[CTSubscriberAlgorithmEAPAKA supportsSecureCoding]

  // instance methods
  -[CTSubscriberAlgorithmEAPAKA encodeWithCoder:]
  -[CTSubscriberAlgorithmEAPAKA .cxx_destruct]
  -[CTSubscriberAlgorithmEAPAKA initWithCoder:]
  -[CTSubscriberAlgorithmEAPAKA rand]
  -[CTSubscriberAlgorithmEAPAKA setRand:]
  -[CTSubscriberAlgorithmEAPAKA autn]
  -[CTSubscriberAlgorithmEAPAKA setAutn:]


CTSubscriberAuthRequest : NSObject <NSSecureCoding>
 @property  CTSubscriberAlgorithm *algorithm

  // class methods
  +[CTSubscriberAuthRequest supportsSecureCoding]

  // instance methods
  -[CTSubscriberAuthRequest algorithm]
  -[CTSubscriberAuthRequest encodeWithCoder:]
  -[CTSubscriberAuthRequest .cxx_destruct]
  -[CTSubscriberAuthRequest setAlgorithm:]
  -[CTSubscriberAuthRequest initWithCoder:]


CTSubscriberAuthResult : NSObject <NSSecureCoding>
 @property  NSData *auts
 @property  NSData *res
 @property  NSData *sres
 @property  NSData *kc
 @property  NSData *ck
 @property  NSData *ik

  // class methods
  +[CTSubscriberAuthResult supportsSecureCoding]

  // instance methods
  -[CTSubscriberAuthResult encodeWithCoder:]
  -[CTSubscriberAuthResult .cxx_destruct]
  -[CTSubscriberAuthResult initWithCoder:]
  -[CTSubscriberAuthResult auts]
  -[CTSubscriberAuthResult setAuts:]
  -[CTSubscriberAuthResult res]
  -[CTSubscriberAuthResult setRes:]
  -[CTSubscriberAuthResult sres]
  -[CTSubscriberAuthResult setSres:]
  -[CTSubscriberAuthResult kc]
  -[CTSubscriberAuthResult setKc:]
  -[CTSubscriberAuthResult ck]
  -[CTSubscriberAuthResult setCk:]
  -[CTSubscriberAuthResult ik]
  -[CTSubscriberAuthResult setIk:]


CTCellInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *legacyInfo

  // class methods
  +[CTCellInfo supportsSecureCoding]

  // instance methods
  -[CTCellInfo setLegacyInfo:]
  -[CTCellInfo encodeWithCoder:]
  -[CTCellInfo .cxx_destruct]
  -[CTCellInfo copyWithZone:]
  -[CTCellInfo legacyInfo]
  -[CTCellInfo initWithCoder:]


CTPhoneNumberInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *label
 @property  NSString *number
 @property  NSString *displayPhoneNumber
 @property  BOOL isPresent
 @property  BOOL isEditable
 @property  BOOL isRead

  // class methods
  +[CTPhoneNumberInfo supportsSecureCoding]

  // instance methods
  -[CTPhoneNumberInfo number]
  -[CTPhoneNumberInfo isEditable]
  -[CTPhoneNumberInfo setIsEditable:]
  -[CTPhoneNumberInfo isPresent]
  -[CTPhoneNumberInfo encodeWithCoder:]
  -[CTPhoneNumberInfo setLabel:]
  -[CTPhoneNumberInfo .cxx_destruct]
  -[CTPhoneNumberInfo setNumber:]
  -[CTPhoneNumberInfo copyWithZone:]
  -[CTPhoneNumberInfo label]
  -[CTPhoneNumberInfo isRead]
  -[CTPhoneNumberInfo initWithCoder:]
  -[CTPhoneNumberInfo displayPhoneNumber]
  -[CTPhoneNumberInfo setDisplayPhoneNumber:]
  -[CTPhoneNumberInfo setIsPresent:]
  -[CTPhoneNumberInfo setIsRead:]


CTEmergencyMode : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL enabled
 @property  long long type
 @property  BOOL isEmergencyText
 @property  BOOL isEmergencySetup
 @property  long long state

  // class methods
  +[CTEmergencyMode supportsSecureCoding]
  +[CTEmergencyMode convertFromEmergencyMode:]

  // instance methods
  -[CTEmergencyMode setIsEmergencyText:]
  -[CTEmergencyMode encodeWithCoder:]
  -[CTEmergencyMode type]
  -[CTEmergencyMode isEmergencySetup]
  -[CTEmergencyMode initWithEnabled:type:isEmergencyText:isEmergencySetup:state:]
  -[CTEmergencyMode state]
  -[CTEmergencyMode setEnabled:]
  -[CTEmergencyMode setType:]
  -[CTEmergencyMode setIsEmergencySetup:]
  -[CTEmergencyMode copyWithZone:]
  -[CTEmergencyMode initWithEnabled:type:isEmergencyText:isEmergencySetup:]
  -[CTEmergencyMode enabled]
  -[CTEmergencyMode initWithEnabled:type:isEmergencyText:]
  -[CTEmergencyMode isEqual:]
  -[CTEmergencyMode init]
  -[CTEmergencyMode isEmergencyText]
  -[CTEmergencyMode setState:]
  -[CTEmergencyMode isEqualToCTEmergencyMode:]
  -[CTEmergencyMode initWithCoder:]


CTSweetgumAppsInfo : NSObject <NSSecureCoding>
 @property  NSArray *appsList
 @property  NSString *appsURL

  // class methods
  +[CTSweetgumAppsInfo supportsSecureCoding]

  // instance methods
  -[CTSweetgumAppsInfo encodeWithCoder:]
  -[CTSweetgumAppsInfo .cxx_destruct]
  -[CTSweetgumAppsInfo isEqual:]
  -[CTSweetgumAppsInfo init]
  -[CTSweetgumAppsInfo initWithCoder:]
  -[CTSweetgumAppsInfo appsList]
  -[CTSweetgumAppsInfo setAppsList:]
  -[CTSweetgumAppsInfo appsURL]
  -[CTSweetgumAppsInfo setAppsURL:]


CTMMSEncoder : NSObject
  // class methods
  +[CTMMSEncoder encodeMessage:]
  +[CTMMSEncoder decodeSmsFromData:]
  +[CTMMSEncoder decodeSmsFromData:data:]
  +[CTMMSEncoder encodeSms:]
  +[CTMMSEncoder decodeMessageFromData:]
  +[CTMMSEncoder decodeMessageFromData:data:]


CTActivationPolicyState : NSObject <NSCopying, NSSecureCoding>
 @property  long long carrierLock

  // class methods
  +[CTActivationPolicyState supportsSecureCoding]

  // instance methods
  -[CTActivationPolicyState encodeWithCoder:]
  -[CTActivationPolicyState copyWithZone:]
  -[CTActivationPolicyState initWithCoder:]
  -[CTActivationPolicyState carrierLock]
  -[CTActivationPolicyState setCarrierLock:]


CTDeviceIdentifier : NSObject <NSSecureCoding>
 @property  NSString *deviceName
 @property  NSString *modelName
 @property  unsigned long deviceType
 @property  NSString *EID
 @property  NSString *IMEI
 @property  NSString *idsDeviceId

  // class methods
  +[CTDeviceIdentifier supportsSecureCoding]

  // instance methods
  -[CTDeviceIdentifier setDeviceName:]
  -[CTDeviceIdentifier modelName]
  -[CTDeviceIdentifier setModelName:]
  -[CTDeviceIdentifier encodeWithCoder:]
  -[CTDeviceIdentifier .cxx_destruct]
  -[CTDeviceIdentifier deviceType]
  -[CTDeviceIdentifier setIdsDeviceId:]
  -[CTDeviceIdentifier setIMEI:]
  -[CTDeviceIdentifier idsDeviceId]
  -[CTDeviceIdentifier IMEI]
  -[CTDeviceIdentifier deviceName]
  -[CTDeviceIdentifier setDeviceType:]
  -[CTDeviceIdentifier isEqual:]
  -[CTDeviceIdentifier init]
  -[CTDeviceIdentifier initWithCoder:]
  -[CTDeviceIdentifier EID]
  -[CTDeviceIdentifier setEID:]
  -[CTDeviceIdentifier initWithDeviceType:EID:IMEI:idsDeviceId:]


CTCallCapabilities : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL isWifiCallingAvailable
 @property  BOOL isVoLTECallingAvailable
 @property  BOOL isCSCallingAvailable
 @property  BOOL isEmergencyCallingOnWifiAllowed
 @property  BOOL isEmergencyCallingOnWifiAvailable
 @property  BOOL isCarrierSupportsEmergencyCallOnWifiNoLimit

  // class methods
  +[CTCallCapabilities supportsSecureCoding]

  // instance methods
  -[CTCallCapabilities isCSCallingAvailable]
  -[CTCallCapabilities isEmergencyCallingOnWifiAvailable]
  -[CTCallCapabilities encodeWithCoder:]
  -[CTCallCapabilities setIsVoLTECallingAvailable:]
  -[CTCallCapabilities isWifiCallingAvailable]
  -[CTCallCapabilities setIsCarrierSupportsEmergencyCallOnWifiNoLimit:]
  -[CTCallCapabilities copyWithZone:]
  -[CTCallCapabilities isVoLTECallingAvailable]
  -[CTCallCapabilities setIsEmergencyCallingOnWifiAllowed:]
  -[CTCallCapabilities setIsCSCallingAvailable:]
  -[CTCallCapabilities setIsEmergencyCallingOnWifiAvailable:]
  -[CTCallCapabilities setIsWifiCallingAvailable:]
  -[CTCallCapabilities isEmergencyCallingOnWifiAllowed]
  -[CTCallCapabilities isCarrierSupportsEmergencyCallOnWifiNoLimit]
  -[CTCallCapabilities initWithCoder:]


CTIMSRegistrationTransportInfo : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL isRegistered
 @property  int contextType
 @property  int transportType

  // class methods
  +[CTIMSRegistrationTransportInfo supportsSecureCoding]

  // instance methods
  -[CTIMSRegistrationTransportInfo setTransportType:]
  -[CTIMSRegistrationTransportInfo encodeWithCoder:]
  -[CTIMSRegistrationTransportInfo transportType]
  -[CTIMSRegistrationTransportInfo isRegistered]
  -[CTIMSRegistrationTransportInfo copyWithZone:]
  -[CTIMSRegistrationTransportInfo contextType]
  -[CTIMSRegistrationTransportInfo setContextType:]
  -[CTIMSRegistrationTransportInfo initWithCoder:]
  -[CTIMSRegistrationTransportInfo setIsRegistered:]


CTSweetgumUsagePlanItemMessages : NSObject <NSSecureCoding>
 @property  NSString *capacity
 @property  NSString *used

  // class methods
  +[CTSweetgumUsagePlanItemMessages supportsSecureCoding]

  // instance methods
  -[CTSweetgumUsagePlanItemMessages setCapacity:]
  -[CTSweetgumUsagePlanItemMessages capacity]
  -[CTSweetgumUsagePlanItemMessages encodeWithCoder:]
  -[CTSweetgumUsagePlanItemMessages .cxx_destruct]
  -[CTSweetgumUsagePlanItemMessages used]
  -[CTSweetgumUsagePlanItemMessages isEqual:]
  -[CTSweetgumUsagePlanItemMessages init]
  -[CTSweetgumUsagePlanItemMessages initWithCoder:]
  -[CTSweetgumUsagePlanItemMessages setUsed:]


CTBundle : NSObject <NSCopying, NSSecureCoding>
 @property  long long type

  // class methods
  +[CTBundle supportsSecureCoding]

  // instance methods
  -[CTBundle encodeWithCoder:]
  -[CTBundle type]
  -[CTBundle setType:]
  -[CTBundle copyWithZone:]
  -[CTBundle initWithBundleType:]
  -[CTBundle init]
  -[CTBundle initWithCoder:]


CTPhoneBookEntry : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL isHidden
 @property  NSString *name
 @property  NSString *number
 @property  NSString *altNumber
 @property  NSString *altText
 @property  NSString *email
 @property  NSString *group

  // class methods
  +[CTPhoneBookEntry supportsSecureCoding]

  // instance methods
  -[CTPhoneBookEntry number]
  -[CTPhoneBookEntry encodeWithCoder:]
  -[CTPhoneBookEntry setEmail:]
  -[CTPhoneBookEntry .cxx_destruct]
  -[CTPhoneBookEntry setNumber:]
  -[CTPhoneBookEntry email]
  -[CTPhoneBookEntry setName:]
  -[CTPhoneBookEntry copyWithZone:]
  -[CTPhoneBookEntry isHidden]
  -[CTPhoneBookEntry name]
  -[CTPhoneBookEntry setIsHidden:]
  -[CTPhoneBookEntry group]
  -[CTPhoneBookEntry setGroup:]
  -[CTPhoneBookEntry initWithCoder:]
  -[CTPhoneBookEntry altNumber]
  -[CTPhoneBookEntry setAltNumber:]
  -[CTPhoneBookEntry altText]
  -[CTPhoneBookEntry setAltText:]


CTSweetgumCapabilities : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL supportsServices
 @property  BOOL supportsUsage
 @property  BOOL supportsPlans
 @property  BOOL supportsApplications

  // class methods
  +[CTSweetgumCapabilities supportsSecureCoding]

  // instance methods
  -[CTSweetgumCapabilities encodeWithCoder:]
  -[CTSweetgumCapabilities copyWithZone:]
  -[CTSweetgumCapabilities isEqual:]
  -[CTSweetgumCapabilities initWithCoder:]
  -[CTSweetgumCapabilities supportsServices]
  -[CTSweetgumCapabilities setSupportsServices:]
  -[CTSweetgumCapabilities supportsUsage]
  -[CTSweetgumCapabilities setSupportsUsage:]
  -[CTSweetgumCapabilities supportsPlans]
  -[CTSweetgumCapabilities setSupportsPlans:]
  -[CTSweetgumCapabilities supportsApplications]
  -[CTSweetgumCapabilities setSupportsApplications:]


CTODAPlan : CTPlan
 @property  NSString *mcc
 @property  NSString *mnc
 @property  NSString *gid1
 @property  NSString *gid2
 @property  NSString *setupURL
 @property  NSString *handoffToken

  // class methods
  +[CTODAPlan supportsSecureCoding]

  // instance methods
  -[CTODAPlan encodeWithCoder:]
  -[CTODAPlan .cxx_destruct]
  -[CTODAPlan isEqual:]
  -[CTODAPlan initWithCoder:]
  -[CTODAPlan mcc]
  -[CTODAPlan mnc]
  -[CTODAPlan gid1]
  -[CTODAPlan gid2]
  -[CTODAPlan initWithSetupUrl:mcc:mnc:gid1:gid2:handoffToken:]
  -[CTODAPlan setupURL]
  -[CTODAPlan handoffToken]


CTDataSettings : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL cellularDataEnabled
 @property  BOOL airplaneModeEnabled
 @property  BOOL cellularDataCapable

  // class methods
  +[CTDataSettings supportsSecureCoding]

  // instance methods
  -[CTDataSettings isAirplaneModeEnabled]
  -[CTDataSettings isCellularDataEnabled]
  -[CTDataSettings encodeWithCoder:]
  -[CTDataSettings setCellularDataCapable:]
  -[CTDataSettings setCellularDataEnabled:]
  -[CTDataSettings copyWithZone:]
  -[CTDataSettings setAirplaneModeEnabled:]
  -[CTDataSettings isCellularDataCapable]
  -[CTDataSettings initWithCoder:]


CTSubscriberAuthDataHolder : NSObject <NSSecureCoding>
 @property  NSDictionary *dict

  // class methods
  +[CTSubscriberAuthDataHolder supportsSecureCoding]

  // instance methods
  -[CTSubscriberAuthDataHolder encodeWithCoder:]
  -[CTSubscriberAuthDataHolder dict]
  -[CTSubscriberAuthDataHolder .cxx_destruct]
  -[CTSubscriberAuthDataHolder initWithData:]
  -[CTSubscriberAuthDataHolder isEqual:]
  -[CTSubscriberAuthDataHolder data]
  -[CTSubscriberAuthDataHolder initWithCoder:]
  -[CTSubscriberAuthDataHolder setDict:]


CTRemoteDeviceList : NSObject <NSSecureCoding>
 @property  NSMutableArray *devices

  // class methods
  +[CTRemoteDeviceList supportsSecureCoding]

  // instance methods
  -[CTRemoteDeviceList encodeWithCoder:]
  -[CTRemoteDeviceList devices]
  -[CTRemoteDeviceList .cxx_destruct]
  -[CTRemoteDeviceList setDevices:]
  -[CTRemoteDeviceList isEqual:]
  -[CTRemoteDeviceList initWithCoder:]


CTInstalledPlan : NSObject <NSSecureCoding>
 @property  CTPlanIdentifier *planID
 @property  BOOL isSelected
 @property  CTPlanTransferAttributes *transferAttributes

  // class methods
  +[CTInstalledPlan supportsSecureCoding]

  // instance methods
  -[CTInstalledPlan setIsSelected:]
  -[CTInstalledPlan phoneNumber]
  -[CTInstalledPlan encodeWithCoder:]
  -[CTInstalledPlan carrierName]
  -[CTInstalledPlan .cxx_destruct]
  -[CTInstalledPlan isSelected]
  -[CTInstalledPlan isEqual:]
  -[CTInstalledPlan init]
  -[CTInstalledPlan initWithCoder:]
  -[CTInstalledPlan planID]
  -[CTInstalledPlan setPlanID:]
  -[CTInstalledPlan iccid]
  -[CTInstalledPlan transferAttributes]
  -[CTInstalledPlan setTransferAttributes:]


CTBundleMatchingInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *mcc
 @property  NSString *mnc
 @property  NSString *imsi

  // class methods
  +[CTBundleMatchingInfo supportsSecureCoding]

  // instance methods
  -[CTBundleMatchingInfo encodeWithCoder:]
  -[CTBundleMatchingInfo .cxx_destruct]
  -[CTBundleMatchingInfo copyWithZone:]
  -[CTBundleMatchingInfo initWithCoder:]
  -[CTBundleMatchingInfo imsi]
  -[CTBundleMatchingInfo setImsi:]
  -[CTBundleMatchingInfo mcc]
  -[CTBundleMatchingInfo setMcc:]
  -[CTBundleMatchingInfo mnc]
  -[CTBundleMatchingInfo setMnc:]


CTDedicatedBearerDescr : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *src_ip
 @property  NSArray *src_ports
 @property  NSString *remote_ip
 @property  NSArray *remote_ports
 @property  unsigned long ip_protocol
 @property  NSString *traffic_class
 @property  long long direction

  // class methods
  +[CTDedicatedBearerDescr supportsSecureCoding]

  // instance methods
  -[CTDedicatedBearerDescr setDirection:]
  -[CTDedicatedBearerDescr encodeWithCoder:]
  -[CTDedicatedBearerDescr .cxx_destruct]
  -[CTDedicatedBearerDescr direction]
  -[CTDedicatedBearerDescr copyWithZone:]
  -[CTDedicatedBearerDescr init]
  -[CTDedicatedBearerDescr initWithCoder:]
  -[CTDedicatedBearerDescr src_ip]
  -[CTDedicatedBearerDescr setSrc_ip:]
  -[CTDedicatedBearerDescr src_ports]
  -[CTDedicatedBearerDescr setSrc_ports:]
  -[CTDedicatedBearerDescr remote_ip]
  -[CTDedicatedBearerDescr setRemote_ip:]
  -[CTDedicatedBearerDescr remote_ports]
  -[CTDedicatedBearerDescr setRemote_ports:]
  -[CTDedicatedBearerDescr ip_protocol]
  -[CTDedicatedBearerDescr setIp_protocol:]
  -[CTDedicatedBearerDescr traffic_class]
  -[CTDedicatedBearerDescr setTraffic_class:]


CTDedicatedBearerRequest : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *details
 @property  NSString *src_ip
 @property  NSArray *src_ports
 @property  NSString *remote_ip
 @property  NSArray *remote_ports
 @property  unsigned long ip_protocol
 @property  NSString *traffic_class
 @property  long long direction

  // class methods
  +[CTDedicatedBearerRequest supportsSecureCoding]

  // instance methods
  -[CTDedicatedBearerRequest setDetails:]
  -[CTDedicatedBearerRequest setDirection:]
  -[CTDedicatedBearerRequest encodeWithCoder:]
  -[CTDedicatedBearerRequest details]
  -[CTDedicatedBearerRequest .cxx_destruct]
  -[CTDedicatedBearerRequest direction]
  -[CTDedicatedBearerRequest copyWithZone:]
  -[CTDedicatedBearerRequest init]
  -[CTDedicatedBearerRequest initWithCoder:]
  -[CTDedicatedBearerRequest src_ip]
  -[CTDedicatedBearerRequest setSrc_ip:]
  -[CTDedicatedBearerRequest src_ports]
  -[CTDedicatedBearerRequest setSrc_ports:]
  -[CTDedicatedBearerRequest remote_ip]
  -[CTDedicatedBearerRequest setRemote_ip:]
  -[CTDedicatedBearerRequest remote_ports]
  -[CTDedicatedBearerRequest setRemote_ports:]
  -[CTDedicatedBearerRequest ip_protocol]
  -[CTDedicatedBearerRequest setIp_protocol:]
  -[CTDedicatedBearerRequest traffic_class]
  -[CTDedicatedBearerRequest setTraffic_class:]


CTQoSLinkCharacteristics : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *bitRateMaxUL
 @property  NSNumber *bitRateMaxDL
 @property  NSNumber *bitRateGuaranteedUL
 @property  NSNumber *bitRateGuaranteedDL

  // class methods
  +[CTQoSLinkCharacteristics supportsSecureCoding]

  // instance methods
  -[CTQoSLinkCharacteristics encodeWithCoder:]
  -[CTQoSLinkCharacteristics .cxx_destruct]
  -[CTQoSLinkCharacteristics copyWithZone:]
  -[CTQoSLinkCharacteristics init]
  -[CTQoSLinkCharacteristics initWithCoder:]
  -[CTQoSLinkCharacteristics bitRateMaxUL]
  -[CTQoSLinkCharacteristics setBitRateMaxUL:]
  -[CTQoSLinkCharacteristics bitRateMaxDL]
  -[CTQoSLinkCharacteristics setBitRateMaxDL:]
  -[CTQoSLinkCharacteristics bitRateGuaranteedUL]
  -[CTQoSLinkCharacteristics setBitRateGuaranteedUL:]
  -[CTQoSLinkCharacteristics bitRateGuaranteedDL]
  -[CTQoSLinkCharacteristics setBitRateGuaranteedDL:]


CTSimHardwareInfo : NSObject <NSSecureCoding>
 @property  long long hardwareType
 @property  long long simLocation

  // class methods
  +[CTSimHardwareInfo supportsSecureCoding]

  // instance methods
  -[CTSimHardwareInfo hardwareType]
  -[CTSimHardwareInfo encodeWithCoder:]
  -[CTSimHardwareInfo setHardwareType:]
  -[CTSimHardwareInfo initWithCoder:]
  -[CTSimHardwareInfo initWithHardwareInfo:simLocation:]
  -[CTSimHardwareInfo simLocation]
  -[CTSimHardwareInfo setSimLocation:]


CTSuppServicesNotificationData : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *callForwardingReason
 @property  NSNumber *callClass
 @property  NSNumber *enabled
 @property  NSNumber *active
 @property  NSString *callForwardingNumber
 @property  NSNumber *callForwardingNoReplyTime
 @property  NSNumber *mmiProcedure
 @property  NSNumber *callBarringFacility
 @property  NSNumber *supplementaryServiceType
 @property  NSNumber *callingLineIdRestriction
 @property  NSNumber *callingLineIdRestrictionModification
 @property  NSNumber *connectedLineIdRestriction
 @property  NSNumber *callingNamePresentation
 @property  NSNumber *connectedLinePresentation
 @property  NSNumber *callingLinePresentation

  // class methods
  +[CTSuppServicesNotificationData supportsSecureCoding]

  // instance methods
  -[CTSuppServicesNotificationData active]
  -[CTSuppServicesNotificationData encodeWithCoder:]
  -[CTSuppServicesNotificationData .cxx_destruct]
  -[CTSuppServicesNotificationData setEnabled:]
  -[CTSuppServicesNotificationData setActive:]
  -[CTSuppServicesNotificationData copyWithZone:]
  -[CTSuppServicesNotificationData enabled]
  -[CTSuppServicesNotificationData initWithCoder:]
  -[CTSuppServicesNotificationData callForwardingReason]
  -[CTSuppServicesNotificationData setCallForwardingReason:]
  -[CTSuppServicesNotificationData callClass]
  -[CTSuppServicesNotificationData setCallClass:]
  -[CTSuppServicesNotificationData callForwardingNumber]
  -[CTSuppServicesNotificationData setCallForwardingNumber:]
  -[CTSuppServicesNotificationData callForwardingNoReplyTime]
  -[CTSuppServicesNotificationData setCallForwardingNoReplyTime:]
  -[CTSuppServicesNotificationData mmiProcedure]
  -[CTSuppServicesNotificationData setMmiProcedure:]
  -[CTSuppServicesNotificationData callBarringFacility]
  -[CTSuppServicesNotificationData setCallBarringFacility:]
  -[CTSuppServicesNotificationData supplementaryServiceType]
  -[CTSuppServicesNotificationData setSupplementaryServiceType:]
  -[CTSuppServicesNotificationData callingLineIdRestriction]
  -[CTSuppServicesNotificationData setCallingLineIdRestriction:]
  -[CTSuppServicesNotificationData callingLineIdRestrictionModification]
  -[CTSuppServicesNotificationData setCallingLineIdRestrictionModification:]
  -[CTSuppServicesNotificationData connectedLineIdRestriction]
  -[CTSuppServicesNotificationData setConnectedLineIdRestriction:]
  -[CTSuppServicesNotificationData callingNamePresentation]
  -[CTSuppServicesNotificationData setCallingNamePresentation:]
  -[CTSuppServicesNotificationData connectedLinePresentation]
  -[CTSuppServicesNotificationData setConnectedLinePresentation:]
  -[CTSuppServicesNotificationData callingLinePresentation]
  -[CTSuppServicesNotificationData setCallingLinePresentation:]


CTRemoteBlacklistPlan : CTPlan
 @property  NSString *key
 @property  NSString *blacklistIMEI
 @property  NSString *blacklistEID
 @property  NSString *blacklistICCID
 @property  NSString *uploaderIMEI
 @property  NSString *uploaderEID

  // class methods
  +[CTRemoteBlacklistPlan supportsSecureCoding]

  // instance methods
  -[CTRemoteBlacklistPlan encodeWithCoder:]
  -[CTRemoteBlacklistPlan .cxx_destruct]
  -[CTRemoteBlacklistPlan key]
  -[CTRemoteBlacklistPlan isEqual:]
  -[CTRemoteBlacklistPlan initWithCoder:]
  -[CTRemoteBlacklistPlan initWithkey:blacklistIMEI:blacklistEID:blacklistICCID:uploaderIMEI:uploaderEID:]
  -[CTRemoteBlacklistPlan blacklistIMEI]
  -[CTRemoteBlacklistPlan blacklistEID]
  -[CTRemoteBlacklistPlan blacklistICCID]
  -[CTRemoteBlacklistPlan uploaderIMEI]
  -[CTRemoteBlacklistPlan uploaderEID]


CTPlan : NSObject <NSSecureCoding>
  // class methods
  +[CTPlan supportsSecureCoding]

  // instance methods
  -[CTPlan encodeWithCoder:]
  -[CTPlan isEqual:]
  -[CTPlan initWithCoder:]


CTPlanList : NSObject <NSSecureCoding>
 @property  NSArray *plans

  // class methods
  +[CTPlanList supportsSecureCoding]

  // instance methods
  -[CTPlanList encodeWithCoder:]
  -[CTPlanList .cxx_destruct]
  -[CTPlanList isEqual:]
  -[CTPlanList initWithCoder:]
  -[CTPlanList plans]
  -[CTPlanList initWithPlans:]


CTMessagePart : NSObject
 @property  NSString *contentType
 @property  NSString *contentId
 @property  NSString *contentLocation
 @property  NSData *data

  // instance methods
  -[CTMessagePart contentType]
  -[CTMessagePart setContentId:]
  -[CTMessagePart .cxx_destruct]
  -[CTMessagePart contentId]
  -[CTMessagePart setData:]
  -[CTMessagePart setContentType:]
  -[CTMessagePart data]
  -[CTMessagePart contentTypeParameterWithName:]
  -[CTMessagePart addContentTypeParameterWithName:value:]
  -[CTMessagePart allContentTypeParameterNames]
  -[CTMessagePart initWithData:contentType:]
  -[CTMessagePart contentLocation]
  -[CTMessagePart setContentLocation:]


CTSimDeactivationEvent : NSObject <NSSecureCoding>
 @property  unsigned long sourceType
 @property  NSString *reasonCode
 @property  NSString *networkPlmn
 @property  BOOL isRoaming
 @property  BOOL isNetworkInitiated
 @property  NSString *rat
 @property  long long timeOfEvent

  // class methods
  +[CTSimDeactivationEvent supportsSecureCoding]

  // instance methods
  -[CTSimDeactivationEvent sourceType]
  -[CTSimDeactivationEvent setSourceType:]
  -[CTSimDeactivationEvent encodeWithCoder:]
  -[CTSimDeactivationEvent .cxx_destruct]
  -[CTSimDeactivationEvent setRat:]
  -[CTSimDeactivationEvent reasonCode]
  -[CTSimDeactivationEvent setReasonCode:]
  -[CTSimDeactivationEvent isEqual:]
  -[CTSimDeactivationEvent isRoaming]
  -[CTSimDeactivationEvent initWithCoder:]
  -[CTSimDeactivationEvent rat]
  -[CTSimDeactivationEvent networkPlmn]
  -[CTSimDeactivationEvent setNetworkPlmn:]
  -[CTSimDeactivationEvent setIsRoaming:]
  -[CTSimDeactivationEvent isNetworkInitiated]
  -[CTSimDeactivationEvent setIsNetworkInitiated:]
  -[CTSimDeactivationEvent timeOfEvent]
  -[CTSimDeactivationEvent setTimeOfEvent:]


CTSimDeactivationInfo : NSObject <NSSecureCoding>
 @property  NSString *homePlmn
 @property  NSMutableArray *events

  // class methods
  +[CTSimDeactivationInfo supportsSecureCoding]

  // instance methods
  -[CTSimDeactivationInfo events]
  -[CTSimDeactivationInfo encodeWithCoder:]
  -[CTSimDeactivationInfo .cxx_destruct]
  -[CTSimDeactivationInfo setEvents:]
  -[CTSimDeactivationInfo isEqual:]
  -[CTSimDeactivationInfo initWithCoder:]
  -[CTSimDeactivationInfo homePlmn]
  -[CTSimDeactivationInfo setHomePlmn:]


CTSMSDataType : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *transport
 @property  NSNumber *ctFormat
 @property  BOOL parseSMSC
 @property  BOOL waitForAck
 @property  NSData *hexPdu

  // class methods
  +[CTSMSDataType supportsSecureCoding]

  // instance methods
  -[CTSMSDataType transport]
  -[CTSMSDataType setTransport:]
  -[CTSMSDataType encodeWithCoder:]
  -[CTSMSDataType .cxx_destruct]
  -[CTSMSDataType copyWithZone:]
  -[CTSMSDataType isEqual:]
  -[CTSMSDataType init]
  -[CTSMSDataType initWithCoder:]
  -[CTSMSDataType isEqualToCTSMSDataType:]
  -[CTSMSDataType ctFormat]
  -[CTSMSDataType setCtFormat:]
  -[CTSMSDataType parseSMSC]
  -[CTSMSDataType setParseSMSC:]
  -[CTSMSDataType waitForAck]
  -[CTSMSDataType setWaitForAck:]
  -[CTSMSDataType hexPdu]
  -[CTSMSDataType setHexPdu:]


CTGeofenceInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *longitude
 @property  NSNumber *latitude
 @property  NSNumber *radius
 @property  NSString *geofenceId

  // class methods
  +[CTGeofenceInfo supportsSecureCoding]

  // instance methods
  -[CTGeofenceInfo latitude]
  -[CTGeofenceInfo radius]
  -[CTGeofenceInfo setLatitude:]
  -[CTGeofenceInfo encodeWithCoder:]
  -[CTGeofenceInfo setLongitude:]
  -[CTGeofenceInfo longitude]
  -[CTGeofenceInfo .cxx_destruct]
  -[CTGeofenceInfo copyWithZone:]
  -[CTGeofenceInfo setRadius:]
  -[CTGeofenceInfo init]
  -[CTGeofenceInfo initWithCoder:]
  -[CTGeofenceInfo geofenceId]
  -[CTGeofenceInfo setGeofenceId:]


CTGeofenceProfile : NSObject <NSSecureCoding>
 @property  NSString *dataSetName
 @property  NSString *versionNumber
 @property  NSArray *geofenceList
 @property  BOOL cellularDataPreferred

  // class methods
  +[CTGeofenceProfile supportsSecureCoding]

  // instance methods
  -[CTGeofenceProfile versionNumber]
  -[CTGeofenceProfile encodeWithCoder:]
  -[CTGeofenceProfile .cxx_destruct]
  -[CTGeofenceProfile setVersionNumber:]
  -[CTGeofenceProfile init]
  -[CTGeofenceProfile initWithCoder:]
  -[CTGeofenceProfile dataSetName]
  -[CTGeofenceProfile setDataSetName:]
  -[CTGeofenceProfile geofenceList]
  -[CTGeofenceProfile setGeofenceList:]
  -[CTGeofenceProfile cellularDataPreferred]
  -[CTGeofenceProfile setCellularDataPreferred:]


CTBinarySMS : NSObject
 @property  int portAddressingScheme
 @property  int srcPort
 @property  int dstPort
 @property  NSData *payload
 @property  NSString *destinationAddress
 @property  NSString *smscAddress
 @property  CTXPCServiceSubscriptionContext *context
 @property  int smsType

  // instance methods
  -[CTBinarySMS setPayload:]
  -[CTBinarySMS payload]
  -[CTBinarySMS isValid]
  -[CTBinarySMS .cxx_destruct]
  -[CTBinarySMS destinationAddress]
  -[CTBinarySMS setContext:]
  -[CTBinarySMS setDestinationAddress:]
  -[CTBinarySMS context]
  -[CTBinarySMS init]
  -[CTBinarySMS smsType]
  -[CTBinarySMS setSmsType:]
  -[CTBinarySMS portAddressingScheme]
  -[CTBinarySMS setPortAddressingScheme:]
  -[CTBinarySMS srcPort]
  -[CTBinarySMS setSrcPort:]
  -[CTBinarySMS dstPort]
  -[CTBinarySMS setDstPort:]
  -[CTBinarySMS smscAddress]
  -[CTBinarySMS setSmscAddress:]


CTSweetgumDataPlanMetrics : NSObject <NSSecureCoding>
 @property  NSDate *billingCycleEndDate
 @property  CTSweetgumDataPlanMetricsItem *domestic
 @property  long long regStatus
 @property  NSNumber *domesticCapacity

  // class methods
  +[CTSweetgumDataPlanMetrics supportsSecureCoding]

  // instance methods
  -[CTSweetgumDataPlanMetrics encodeWithCoder:]
  -[CTSweetgumDataPlanMetrics .cxx_destruct]
  -[CTSweetgumDataPlanMetrics isEqual:]
  -[CTSweetgumDataPlanMetrics init]
  -[CTSweetgumDataPlanMetrics initWithCoder:]
  -[CTSweetgumDataPlanMetrics domestic]
  -[CTSweetgumDataPlanMetrics billingCycleEndDate]
  -[CTSweetgumDataPlanMetrics setBillingCycleEndDate:]
  -[CTSweetgumDataPlanMetrics setDomestic:]
  -[CTSweetgumDataPlanMetrics regStatus]
  -[CTSweetgumDataPlanMetrics setRegStatus:]
  -[CTSweetgumDataPlanMetrics domesticCapacity]
  -[CTSweetgumDataPlanMetrics setDomesticCapacity:]


CTPlanBillingDetails : NSObject <NSSecureCoding>
 @property  NSString *planName
 @property  NSNumber *planCost
 @property  NSString *planCurrency
 @property  NSNumber *planDataAmount
 @property  unsigned long planDataMeasureUnit
 @property  unsigned long planType

  // class methods
  +[CTPlanBillingDetails supportsSecureCoding]

  // instance methods
  -[CTPlanBillingDetails encodeWithCoder:]
  -[CTPlanBillingDetails .cxx_destruct]
  -[CTPlanBillingDetails isEqual:]
  -[CTPlanBillingDetails initWithCoder:]
  -[CTPlanBillingDetails planType]
  -[CTPlanBillingDetails initWithName:PlanCost:PlanCurrency:PlanDataAmount:PlanDataMeasureUnit:PlanType:]
  -[CTPlanBillingDetails planName]
  -[CTPlanBillingDetails planCost]
  -[CTPlanBillingDetails planCurrency]
  -[CTPlanBillingDetails planDataAmount]
  -[CTPlanBillingDetails planDataMeasureUnit]


CTVoicemailInfoType : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *url
 @property  BOOL available
 @property  NSNumber *count
 @property  BOOL isNetworkOriginated
 @property  BOOL isVoiceMailMWI

  // class methods
  +[CTVoicemailInfoType supportsSecureCoding]

  // instance methods
  -[CTVoicemailInfoType setCount:]
  -[CTVoicemailInfoType available]
  -[CTVoicemailInfoType setAvailable:]
  -[CTVoicemailInfoType setUrl:]
  -[CTVoicemailInfoType encodeWithCoder:]
  -[CTVoicemailInfoType .cxx_destruct]
  -[CTVoicemailInfoType count]
  -[CTVoicemailInfoType copyWithZone:]
  -[CTVoicemailInfoType url]
  -[CTVoicemailInfoType isEqual:]
  -[CTVoicemailInfoType init]
  -[CTVoicemailInfoType initWithCoder:]
  -[CTVoicemailInfoType initWithParam:available:count:isNetworkOriginated:isVoiceMailMWI:]
  -[CTVoicemailInfoType isEqualToCTVoicemailInfoType:]
  -[CTVoicemailInfoType isNetworkOriginated]
  -[CTVoicemailInfoType setIsNetworkOriginated:]
  -[CTVoicemailInfoType isVoiceMailMWI]
  -[CTVoicemailInfoType setIsVoiceMailMWI:]


CTPhoneNumber : NSObject <NSCopying, CTMessageAddress>
 @property  NSString *digits
 @property  NSString *countryCode
 @property  BOOL isShortCode

  // class methods
  +[CTPhoneNumber phoneNumberWithDigits:countryCode:]
  +[CTPhoneNumber phoneNumberWithDigits:digits:countryCode:]
  +[CTPhoneNumber isValidPhoneNumberChar:]
  +[CTPhoneNumber isValidPhoneNumber:]

  // instance methods
  -[CTPhoneNumber .cxx_destruct]
  -[CTPhoneNumber digits]
  -[CTPhoneNumber copyWithZone:]
  -[CTPhoneNumber countryCode]
  -[CTPhoneNumber canonicalFormat]
  -[CTPhoneNumber encodedString]
  -[CTPhoneNumber numberOfDigitsForShortCodeNumber]
  -[CTPhoneNumber numberOfDigitsForShortCodeNumber:]
  -[CTPhoneNumber initWithDigits:digits:countryCode:]
  -[CTPhoneNumber initWithDigits:countryCode:]
  -[CTPhoneNumber formatForCallingCountry:]
  -[CTPhoneNumber isShortCode]
  -[CTPhoneNumber setIsShortCode:]


CTCallForwardingValue : NSObject <NSCopying, NSSecureCoding>
 @property  int reason
 @property  int clss
 @property  BOOL enabled
 @property  NSString *saveNumber
 @property  NSNumber *noReplyTime

  // class methods
  +[CTCallForwardingValue supportsSecureCoding]

  // instance methods
  -[CTCallForwardingValue encodeWithCoder:]
  -[CTCallForwardingValue .cxx_destruct]
  -[CTCallForwardingValue setEnabled:]
  -[CTCallForwardingValue reason]
  -[CTCallForwardingValue copyWithZone:]
  -[CTCallForwardingValue enabled]
  -[CTCallForwardingValue setReason:]
  -[CTCallForwardingValue initWithCoder:]
  -[CTCallForwardingValue clss]
  -[CTCallForwardingValue setClss:]
  -[CTCallForwardingValue saveNumber]
  -[CTCallForwardingValue setSaveNumber:]
  -[CTCallForwardingValue noReplyTime]
  -[CTCallForwardingValue setNoReplyTime:]


CTPlmnInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *mcc
 @property  NSString *mnc

  // class methods
  +[CTPlmnInfo supportsSecureCoding]

  // instance methods
  -[CTPlmnInfo encodeWithCoder:]
  -[CTPlmnInfo .cxx_destruct]
  -[CTPlmnInfo copyWithZone:]
  -[CTPlmnInfo isEqual:]
  -[CTPlmnInfo initWithCoder:]
  -[CTPlmnInfo mcc]
  -[CTPlmnInfo mnc]
  -[CTPlmnInfo initWithMcc:mnc:]


CTSubscriberInfo : NSObject
  // class methods
  +[CTSubscriberInfo subscriber]
  +[CTSubscriberInfo subscribers]


CTCellularData : NSObject
 @property  @? cellularDataRestrictionDidUpdateNotifier
 @property  unsigned long restrictedState

  // instance methods
  -[CTCellularData .cxx_construct]
  -[CTCellularData dealloc]
  -[CTCellularData .cxx_destruct]
  -[CTCellularData init]
  -[CTCellularData setCellularDataRestrictionStateFromPolicies:]
  -[CTCellularData restrictedState]
  -[CTCellularData cellularDataRestrictionDidUpdateNotifier]
  -[CTCellularData setCellularDataRestrictionDidUpdateNotifier:]


CTSubscriber : NSObject <CoreTelephonyClientSubscriberDelegateInternal>
 @property  CTServiceDescriptor *descriptor
 @property  NSData *carrierToken
 @property  NSString *identifier
 @property  <CTSubscriberDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CTSubscriber setDescriptor:]
  -[CTSubscriber initWithDescriptor:]
  -[CTSubscriber identifier]
  -[CTSubscriber descriptor]
  -[CTSubscriber setDelegate:]
  -[CTSubscriber delegate]
  -[CTSubscriber .cxx_construct]
  -[CTSubscriber .cxx_destruct]
  -[CTSubscriber init]
  -[CTSubscriber authTokenChanged:]
  -[CTSubscriber initWithDescriptor:client:]
  -[CTSubscriber carrierToken]
  -[CTSubscriber refreshCarrierToken]
  -[CTSubscriber authenticate:completion:]
  -[CTSubscriber authenticateWithInfo:handleResult:]
  -[CTSubscriber typeAllocationCode]


CTRemotePlan : CTPlan
 @property  CTRemotePlanIdentifier *planID
 @property  CTPlanTransferAttributes *transferAttributes
 @property  CTPlanSignUpDetails *signUpDetails
 @property  unsigned long addOnPurchaseType
 @property  unsigned long addOnCarrierFlowType

  // class methods
  +[CTRemotePlan supportsSecureCoding]

  // instance methods
  -[CTRemotePlan phoneNumber]
  -[CTRemotePlan encodeWithCoder:]
  -[CTRemotePlan carrierName]
  -[CTRemotePlan .cxx_destruct]
  -[CTRemotePlan label]
  -[CTRemotePlan countryCode]
  -[CTRemotePlan isEqual:]
  -[CTRemotePlan init]
  -[CTRemotePlan initWithCoder:]
  -[CTRemotePlan planID]
  -[CTRemotePlan setPlanID:]
  -[CTRemotePlan iccid]
  -[CTRemotePlan transferAttributes]
  -[CTRemotePlan setTransferAttributes:]
  -[CTRemotePlan signUpDetails]
  -[CTRemotePlan setSignUpDetails:]
  -[CTRemotePlan addOnCarrierFlowType]
  -[CTRemotePlan setAddOnCarrierFlowType:]
  -[CTRemotePlan addOnPurchaseType]
  -[CTRemotePlan setAddOnPurchaseType:]


CTLocalDevice : NSObject <NSSecureCoding>
 @property  CTDeviceIdentifier *deviceID
 @property  NSArray *installedPlans

  // class methods
  +[CTLocalDevice supportsSecureCoding]

  // instance methods
  -[CTLocalDevice deviceID]
  -[CTLocalDevice setDeviceID:]
  -[CTLocalDevice encodeWithCoder:]
  -[CTLocalDevice .cxx_destruct]
  -[CTLocalDevice deviceType]
  -[CTLocalDevice deviceName]
  -[CTLocalDevice isEqual:]
  -[CTLocalDevice init]
  -[CTLocalDevice initWithCoder:]
  -[CTLocalDevice EID]
  -[CTLocalDevice installedPlans]
  -[CTLocalDevice setInstalledPlans:]


CTSweetgumUsageAccountMetrics : NSObject <NSSecureCoding>
 @property  NSString *networkUsageLabel
 @property  long long deviceType
 @property  BOOL localDevice
 @property  NSString *subscriptionStatus
 @property  NSString *planType
 @property  NSDate *billingCycleEndDate
 @property  NSArray *applicablePlans

  // class methods
  +[CTSweetgumUsageAccountMetrics supportsSecureCoding]

  // instance methods
  -[CTSweetgumUsageAccountMetrics setLocalDevice:]
  -[CTSweetgumUsageAccountMetrics encodeWithCoder:]
  -[CTSweetgumUsageAccountMetrics .cxx_destruct]
  -[CTSweetgumUsageAccountMetrics setSubscriptionStatus:]
  -[CTSweetgumUsageAccountMetrics deviceType]
  -[CTSweetgumUsageAccountMetrics localDevice]
  -[CTSweetgumUsageAccountMetrics subscriptionStatus]
  -[CTSweetgumUsageAccountMetrics setDeviceType:]
  -[CTSweetgumUsageAccountMetrics isEqual:]
  -[CTSweetgumUsageAccountMetrics init]
  -[CTSweetgumUsageAccountMetrics initWithCoder:]
  -[CTSweetgumUsageAccountMetrics planType]
  -[CTSweetgumUsageAccountMetrics setPlanType:]
  -[CTSweetgumUsageAccountMetrics billingCycleEndDate]
  -[CTSweetgumUsageAccountMetrics setBillingCycleEndDate:]
  -[CTSweetgumUsageAccountMetrics networkUsageLabel]
  -[CTSweetgumUsageAccountMetrics setNetworkUsageLabel:]
  -[CTSweetgumUsageAccountMetrics applicablePlans]
  -[CTSweetgumUsageAccountMetrics setApplicablePlans:]


CTDataUsagePolicies : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *bundleId
 @property  long long cellular
 @property  long long wifi
 @property  BOOL isManaged
 @property  BOOL isRestricted

  // class methods
  +[CTDataUsagePolicies supportsSecureCoding]

  // instance methods
  -[CTDataUsagePolicies isRestricted]
  -[CTDataUsagePolicies isManaged]
  -[CTDataUsagePolicies encodeWithCoder:]
  -[CTDataUsagePolicies setIsManaged:]
  -[CTDataUsagePolicies setWifi:]
  -[CTDataUsagePolicies .cxx_destruct]
  -[CTDataUsagePolicies wifi]
  -[CTDataUsagePolicies bundleId]
  -[CTDataUsagePolicies copyWithZone:]
  -[CTDataUsagePolicies setBundleId:]
  -[CTDataUsagePolicies cellular]
  -[CTDataUsagePolicies isEqual:]
  -[CTDataUsagePolicies initWithCoder:]
  -[CTDataUsagePolicies init:withCellularPolicy:andWifiPolicy:]
  -[CTDataUsagePolicies init:withCellularPolicy:wifiPolicy:isManaged:andIsRestricted:]
  -[CTDataUsagePolicies setCellular:]
  -[CTDataUsagePolicies setIsRestricted:]


CTDataUsagePoliciesWrapper : NSObject <NSCopying, NSSecureCoding>
 @property  NSSet *policies

  // class methods
  +[CTDataUsagePoliciesWrapper supportsSecureCoding]

  // instance methods
  -[CTDataUsagePoliciesWrapper policies]
  -[CTDataUsagePoliciesWrapper init:]
  -[CTDataUsagePoliciesWrapper encodeWithCoder:]
  -[CTDataUsagePoliciesWrapper setPolicies:]
  -[CTDataUsagePoliciesWrapper .cxx_destruct]
  -[CTDataUsagePoliciesWrapper copyWithZone:]
  -[CTDataUsagePoliciesWrapper isEqual:]
  -[CTDataUsagePoliciesWrapper initWithCoder:]


CTRadioAccessTechnology : NSObject
 @property  NSString *radioAccessTechnology

  // instance methods
  -[CTRadioAccessTechnology radioAccessTechnology]
  -[CTRadioAccessTechnology .cxx_destruct]
  -[CTRadioAccessTechnology init]
  -[CTRadioAccessTechnology initWithCTTelephonyNetworkInfo:]


CTAsciiAddress : NSObject <NSCopying, CTMessageAddress>
 @property  NSString *address

  // class methods
  +[CTAsciiAddress asciiAddressWithString:]

  // instance methods
  -[CTAsciiAddress .cxx_destruct]
  -[CTAsciiAddress address]
  -[CTAsciiAddress copyWithZone:]
  -[CTAsciiAddress initWithAddress:]
  -[CTAsciiAddress canonicalFormat]
  -[CTAsciiAddress encodedString]


CTBandInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSMutableDictionary *fActiveBands
 @property  NSMutableDictionary *fSupportedBands

  // class methods
  +[CTBandInfo supportsSecureCoding]

  // instance methods
  -[CTBandInfo encodeWithCoder:]
  -[CTBandInfo .cxx_destruct]
  -[CTBandInfo copyWithZone:]
  -[CTBandInfo isEqual:]
  -[CTBandInfo init]
  -[CTBandInfo initWithCoder:]
  -[CTBandInfo initWithActiveBands:]
  -[CTBandInfo initWithSupportedBands:]
  -[CTBandInfo initWithSupported:andActiveBands:]
  -[CTBandInfo addActiveBand:forRat:]
  -[CTBandInfo addActiveBands:forRat:]
  -[CTBandInfo addSupportedBand:forRat:]
  -[CTBandInfo addSupportedBands:forRat:]
  -[CTBandInfo activeBands]
  -[CTBandInfo activeBandsForRat:]
  -[CTBandInfo supportedBands]
  -[CTBandInfo supportedBandsForRat:]
  -[CTBandInfo fActiveBands]
  -[CTBandInfo setFActiveBands:]
  -[CTBandInfo fSupportedBands]
  -[CTBandInfo setFSupportedBands:]


CTDataUsage : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long cellularHome
 @property  unsigned long cellularRoaming
 @property  unsigned long wifi

  // class methods
  +[CTDataUsage supportsSecureCoding]

  // instance methods
  -[CTDataUsage encodeWithCoder:]
  -[CTDataUsage setWifi:]
  -[CTDataUsage isEmpty]
  -[CTDataUsage wifi]
  -[CTDataUsage copyWithZone:]
  -[CTDataUsage isEqual:]
  -[CTDataUsage initWithCoder:]
  -[CTDataUsage initWithHome:roaming:wifi:]
  -[CTDataUsage addUsage:]
  -[CTDataUsage cellularHome]
  -[CTDataUsage setCellularHome:]
  -[CTDataUsage cellularRoaming]
  -[CTDataUsage setCellularRoaming:]


CTDataUsed : NSObject <NSCopying, NSSecureCoding>
 @property  CTDataUsage *native
 @property  CTDataUsage *proxied

  // class methods
  +[CTDataUsed supportsSecureCoding]

  // instance methods
  -[CTDataUsed encodeWithCoder:]
  -[CTDataUsed .cxx_destruct]
  -[CTDataUsed native]
  -[CTDataUsed copyWithZone:]
  -[CTDataUsed isEqual:]
  -[CTDataUsed initWithCoder:]
  -[CTDataUsed addUsage:]
  -[CTDataUsed initWithUsage:proxied:]
  -[CTDataUsed addNativeUsage:]
  -[CTDataUsed addProxiedUsage:]
  -[CTDataUsed proxied]


CTAppDataUsage : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *bundleId
 @property  NSString *displayName
 @property  CTDataUsed *used

  // class methods
  +[CTAppDataUsage supportsSecureCoding]

  // instance methods
  -[CTAppDataUsage usage]
  -[CTAppDataUsage encodeWithCoder:]
  -[CTAppDataUsage .cxx_destruct]
  -[CTAppDataUsage bundleId]
  -[CTAppDataUsage copyWithZone:]
  -[CTAppDataUsage displayName]
  -[CTAppDataUsage used]
  -[CTAppDataUsage initWithCoder:]
  -[CTAppDataUsage init:withDisplayName:andUsage:]


CTPerAppDataUsage : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *displayName
 @property  NSArray *used

  // class methods
  +[CTPerAppDataUsage supportsSecureCoding]

  // instance methods
  -[CTPerAppDataUsage encodeWithCoder:]
  -[CTPerAppDataUsage .cxx_destruct]
  -[CTPerAppDataUsage copyWithZone:]
  -[CTPerAppDataUsage displayName]
  -[CTPerAppDataUsage used]
  -[CTPerAppDataUsage initWithCoder:]
  -[CTPerAppDataUsage init:withPeriods:]


CTDeviceDataUsage : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long periods
 @property  NSMutableDictionary *apps
 @property  NSMutableDictionary *uninstalledApps
 @property  NSMutableDictionary *proxiedOnlyApps
 @property  NSMutableDictionary *systemServices
 @property  NSArray *wifiAssist

  // class methods
  +[CTDeviceDataUsage supportsSecureCoding]

  // instance methods
  -[CTDeviceDataUsage setApps:]
  -[CTDeviceDataUsage apps]
  -[CTDeviceDataUsage encodeWithCoder:]
  -[CTDeviceDataUsage .cxx_destruct]
  -[CTDeviceDataUsage copyWithZone:]
  -[CTDeviceDataUsage initWithCoder:]
  -[CTDeviceDataUsage dataUsage:forPeriod:]
  -[CTDeviceDataUsage appDataUsageForPeriod:]
  -[CTDeviceDataUsage uninstalledAppDataUsageForPeriod:]
  -[CTDeviceDataUsage proxiedOnlyAppDataUsageForPeriod:]
  -[CTDeviceDataUsage systemServiceDataUsageForPeriod:]
  -[CTDeviceDataUsage totalDataUsage:forPeriod:]
  -[CTDeviceDataUsage totalDataUsedForPeriod:]
  -[CTDeviceDataUsage totalAppDataUsedForPeriod:]
  -[CTDeviceDataUsage totalUninstalledAppDataUsedForPeriod:]
  -[CTDeviceDataUsage totalProxiedOnlyAppDataUsedForPeriod:]
  -[CTDeviceDataUsage totalSystemServiceDataUsedForPeriod:]
  -[CTDeviceDataUsage totalWifiAssistUsageForPeriod:]
  -[CTDeviceDataUsage periods]
  -[CTDeviceDataUsage setPeriods:]
  -[CTDeviceDataUsage uninstalledApps]
  -[CTDeviceDataUsage setUninstalledApps:]
  -[CTDeviceDataUsage proxiedOnlyApps]
  -[CTDeviceDataUsage setProxiedOnlyApps:]
  -[CTDeviceDataUsage systemServices]
  -[CTDeviceDataUsage setSystemServices:]
  -[CTDeviceDataUsage wifiAssist]
  -[CTDeviceDataUsage setWifiAssist:]


CTEmergencyModeResult : NSObject <NSCopying, NSSecureCoding>
 @property  CTEmergencyMode *mode
 @property  CTXPCServiceSubscriptionContext *context

  // class methods
  +[CTEmergencyModeResult supportsSecureCoding]

  // instance methods
  -[CTEmergencyModeResult encodeWithCoder:]
  -[CTEmergencyModeResult mode]
  -[CTEmergencyModeResult .cxx_destruct]
  -[CTEmergencyModeResult copyWithZone:]
  -[CTEmergencyModeResult context]
  -[CTEmergencyModeResult initWithCoder:]
  -[CTEmergencyModeResult initWithMode:andContext:]


CTDisplayPlan : NSObject <NSSecureCoding>
 @property  CTPlan *plan
 @property  NSString *carrierName
 @property  NSString *phoneNumber
 @property  NSString *label
 @property  long long status
 @property  unsigned long attributes
 @property  BOOL isPhysical

  // class methods
  +[CTDisplayPlan supportsSecureCoding]

  // instance methods
  -[CTDisplayPlan plan]
  -[CTDisplayPlan phoneNumber]
  -[CTDisplayPlan attributes]
  -[CTDisplayPlan encodeWithCoder:]
  -[CTDisplayPlan status]
  -[CTDisplayPlan carrierName]
  -[CTDisplayPlan .cxx_destruct]
  -[CTDisplayPlan label]
  -[CTDisplayPlan isEqual:]
  -[CTDisplayPlan initWithCoder:]
  -[CTDisplayPlan initWithPlan:status:attributes:isPhysical:carrierName:phoneNumber:label:]
  -[CTDisplayPlan isPhysical]


CTDisplayPlanList : NSObject <NSSecureCoding>
 @property  NSArray *plans

  // class methods
  +[CTDisplayPlanList supportsSecureCoding]

  // instance methods
  -[CTDisplayPlanList encodeWithCoder:]
  -[CTDisplayPlanList .cxx_destruct]
  -[CTDisplayPlanList isEqual:]
  -[CTDisplayPlanList initWithCoder:]
  -[CTDisplayPlanList plans]
  -[CTDisplayPlanList initWithDisplayPlans:]


01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
