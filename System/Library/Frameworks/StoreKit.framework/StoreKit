|| __DATA.__data _SKDownloadTimeRemainingUnknown
|| __DATA.__objc_data _OBJC_CLASS_$_SKAccountPageSpecifierProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SKAccountPageViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKAdImpression
|| __DATA.__objc_data _OBJC_CLASS_$_SKArcadeService
|| __DATA.__objc_data _OBJC_CLASS_$_SKArcadeSubscribeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKCloudServiceController
|| __DATA.__objc_data _OBJC_CLASS_$_SKCloudServiceSetupConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SKCloudServiceSetupExtension
|| __DATA.__objc_data _OBJC_CLASS_$_SKCloudServiceSetupReloadContext
|| __DATA.__objc_data _OBJC_CLASS_$_SKCloudServiceSetupViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKComposeReviewViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKDownload
|| __DATA.__objc_data _OBJC_CLASS_$_SKInstallSheetStatusUpdateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKInternalProductStorePromotionController
|| __DATA.__objc_data _OBJC_CLASS_$_SKMutablePayment
|| __DATA.__objc_data _OBJC_CLASS_$_SKOverlay
|| __DATA.__objc_data _OBJC_CLASS_$_SKOverlayAppClipConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SKOverlayAppConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SKOverlayConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SKOverlayTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SKPayment
|| __DATA.__objc_data _OBJC_CLASS_$_SKPaymentAppleIDAuthorizationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKPaymentDiscount
|| __DATA.__objc_data _OBJC_CLASS_$_SKPaymentQueueClient
|| __DATA.__objc_data _OBJC_CLASS_$_SKPaymentTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_SKPaymentTransactionAuthorizationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SKProduct
|| __DATA.__objc_data _OBJC_CLASS_$_SKProductDiscount
|| __DATA.__objc_data _OBJC_CLASS_$_SKProductPageExtension
|| __DATA.__objc_data _OBJC_CLASS_$_SKProductStorePromotionController
|| __DATA.__objc_data _OBJC_CLASS_$_SKProductSubscriptionPeriod
|| __DATA.__objc_data _OBJC_CLASS_$_SKProductsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKProductsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SKPromotedIAPGetInfoInternalRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKPromotedIAPGetOrderRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKPromotedIAPGetVisibilityRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKPromotedIAPSetOrderRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKPromotedIAPSetVisibilityRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKPurchaseIntent
|| __DATA.__objc_data _OBJC_CLASS_$_SKReceiptRefreshRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKRemoteEngagementPresentationWindow
|| __DATA.__objc_data _OBJC_CLASS_$_SKSpecifierWithSubtitleCell
|| __DATA.__objc_data _OBJC_CLASS_$_SKStarRatingAlertController
|| __DATA.__objc_data _OBJC_CLASS_$_SKStoreExtension
|| __DATA.__objc_data _OBJC_CLASS_$_SKStorePageRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKStorePageViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKStoreProductActivityViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKStoreReviewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKStorefront
|| __DATA.__objc_data _OBJC_CLASS_$_SKTermsPageViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKAccountPageSpecifierProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SKAccountPageViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKAdImpression
|| __DATA.__objc_data _OBJC_METACLASS_$_SKArcadeService
|| __DATA.__objc_data _OBJC_METACLASS_$_SKArcadeSubscribeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKCloudServiceController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKCloudServiceSetupConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SKCloudServiceSetupExtension
|| __DATA.__objc_data _OBJC_METACLASS_$_SKCloudServiceSetupReloadContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SKCloudServiceSetupViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKComposeReviewViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKDownload
|| __DATA.__objc_data _OBJC_METACLASS_$_SKInstallSheetStatusUpdateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKInternalProductStorePromotionController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKMutablePayment
|| __DATA.__objc_data _OBJC_METACLASS_$_SKOverlay
|| __DATA.__objc_data _OBJC_METACLASS_$_SKOverlayAppClipConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SKOverlayAppConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SKOverlayConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SKOverlayTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPayment
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPaymentAppleIDAuthorizationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPaymentDiscount
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPaymentQueueClient
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPaymentTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPaymentTransactionAuthorizationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SKProduct
|| __DATA.__objc_data _OBJC_METACLASS_$_SKProductDiscount
|| __DATA.__objc_data _OBJC_METACLASS_$_SKProductPageExtension
|| __DATA.__objc_data _OBJC_METACLASS_$_SKProductStorePromotionController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKProductSubscriptionPeriod
|| __DATA.__objc_data _OBJC_METACLASS_$_SKProductsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKProductsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPromotedIAPGetInfoInternalRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPromotedIAPGetOrderRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPromotedIAPGetVisibilityRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPromotedIAPSetOrderRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPromotedIAPSetVisibilityRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKPurchaseIntent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKReceiptRefreshRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKRemoteEngagementPresentationWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_SKSpecifierWithSubtitleCell
|| __DATA.__objc_data _OBJC_METACLASS_$_SKStarRatingAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKStoreExtension
|| __DATA.__objc_data _OBJC_METACLASS_$_SKStorePageRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKStorePageViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKStoreProductActivityViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKStoreReviewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKStorefront
|| __DATA.__objc_data _OBJC_METACLASS_$_SKTermsPageViewController
|| __DATA_CONST.__const _SKANErrorDomain
|| __DATA_CONST.__const _SKAccountPageAccountURLString
|| __DATA_CONST.__const _SKAccountPageCharityURLString
|| __DATA_CONST.__const _SKAccountPageCustomURLString
|| __DATA_CONST.__const _SKAccountPageEditBillingURLString
|| __DATA_CONST.__const _SKAccountPageGiftURLString
|| __DATA_CONST.__const _SKAccountPageManageSubscriptionsURLString
|| __DATA_CONST.__const _SKAccountPagePaymentsShippingURLString
|| __DATA_CONST.__const _SKAccountPageRedeemURLString
|| __DATA_CONST.__const _SKCloudServiceCapabilitiesDidChangeNotification
|| __DATA_CONST.__const _SKCloudServiceSetupActionSubscribe
|| __DATA_CONST.__const _SKCloudServiceSetupMessageIdentifierAddMusic
|| __DATA_CONST.__const _SKCloudServiceSetupMessageIdentifierConnect
|| __DATA_CONST.__const _SKCloudServiceSetupMessageIdentifierJoin
|| __DATA_CONST.__const _SKCloudServiceSetupMessageIdentifierPlayMusic
|| __DATA_CONST.__const _SKCloudServiceSetupOptionsActionKey
|| __DATA_CONST.__const _SKCloudServiceSetupOptionsAffiliateTokenKey
|| __DATA_CONST.__const _SKCloudServiceSetupOptionsCampaignTokenKey
|| __DATA_CONST.__const _SKCloudServiceSetupOptionsITunesItemIdentifierKey
|| __DATA_CONST.__const _SKCloudServiceSetupOptionsMessageIdentifierKey
|| __DATA_CONST.__const _SKErrorDomain
|| __DATA_CONST.__const _SKPurchaseIntentAction
|| __DATA_CONST.__const _SKReceiptPropertyIsExpired
|| __DATA_CONST.__const _SKReceiptPropertyIsRevoked
|| __DATA_CONST.__const _SKReceiptPropertyIsVolumePurchase
|| __DATA_CONST.__const _SKStoreProductAppleCampaignParsec
|| __DATA_CONST.__const _SKStoreProductParameterAdNetworkAttributionSignature
|| __DATA_CONST.__const _SKStoreProductParameterAdNetworkCampaignIdentifier
|| __DATA_CONST.__const _SKStoreProductParameterAdNetworkIdentifier
|| __DATA_CONST.__const _SKStoreProductParameterAdNetworkNonce
|| __DATA_CONST.__const _SKStoreProductParameterAdNetworkSourceAppStoreIdentifier
|| __DATA_CONST.__const _SKStoreProductParameterAdNetworkTimestamp
|| __DATA_CONST.__const _SKStoreProductParameterAdNetworkVersion
|| __DATA_CONST.__const _SKStoreProductParameterAdvertisingPartnerToken
|| __DATA_CONST.__const _SKStoreProductParameterAffiliateToken
|| __DATA_CONST.__const _SKStoreProductParameterAppleCampaignIdentifier
|| __DATA_CONST.__const _SKStoreProductParameterCampaignIdentifier
|| __DATA_CONST.__const _SKStoreProductParameterCampaignToken
|| __DATA_CONST.__const _SKStoreProductParameterCustomProductPageIdentifier
|| __DATA_CONST.__const _SKStoreProductParameterHighlightedITunesItemIdentifier
|| __DATA_CONST.__const _SKStoreProductParameterITunesItemIdentifier
|| __DATA_CONST.__const _SKStoreProductParameterPopoverSourceRect
|| __DATA_CONST.__const _SKStoreProductParameterProductIdentifier
|| __DATA_CONST.__const _SKStoreProductParameterProviderToken
|| __DATA_CONST.__const _SKStoreProductParameterQToken
|| __DATA_CONST.__const _SKStorefrontCountryCodeDidChangeNotification
|| __DATA_CONST.__const _SKStorefrontIdentifierDidChangeNotification
|| __DATA_CONST.__const _SKUIServiceNavigationOptionBackButtonHidden
|| __DATA_CONST.__const _SKUIServiceNavigationOptionBackButtonTitle
|| __DATA_CONST.__const _SKUIServiceNavigationOptionRightButtonEnabled
|| __DATA_CONST.__const _SKUIServiceNavigationOptionRightButtonStyle
|| __DATA_CONST.__const _SKUIServiceNavigationOptionRightButtonTitle
|| __DATA_CONST.__const _SKUIServiceNavigationOptionTitle
|| __DATA_CONST.__const _SKUIServiceReviewSandboxMode
|| __DATA_CONST.__const __SKCloudServiceSetupOptionsAudioAccessorySerialNumberKey
|| __DATA_CONST.__const __SKCloudServiceSetupOptionsAudioAccessoryUniqueDeviceIdentifierKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKAdNetwork
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKClientBroker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKPaymentQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKServiceBroker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKStarRatingControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKStoreProductViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKAdNetwork
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKClientBroker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKPaymentQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKServiceBroker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKStarRatingControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKStoreProductViewController
|| __TEXT.__text _SKGetRatingStarsImage
|| __TEXT.__text _SKTerminateForInvalidReceipt
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppStoreDaemon: _OBJC_CLASS_$_ASDStoreKitServiceBroker
__ AppStoreFoundation: _ASFStoreKitAdImpressionAdNetworkId
__ AppStoreFoundation: _ASFStoreKitAdImpressionAppAdamId
__ AppStoreFoundation: _ASFStoreKitAdImpressionAttributionSignature
__ AppStoreFoundation: _ASFStoreKitAdImpressionCampaignId
__ AppStoreFoundation: _ASFStoreKitAdImpressionFidelityType
__ AppStoreFoundation: _ASFStoreKitAdImpressionId
__ AppStoreFoundation: _ASFStoreKitAdImpressionSourceAppAdamId
__ AppStoreFoundation: _ASFStoreKitAdImpressionTimestamp
__ AppStoreFoundation: _ASFStoreKitAdImpressionVersion
__ AppStoreFoundation: _ASFStoreKitDefaultQueueIdentifier
__ AppStoreFoundation: _ASFStoreKitEntitlementDeveloperRequestData
__ AppStoreFoundation: _ASFStoreKitEntitlementRequestData
__ AppStoreFoundation: _ASFStoreKitKeyAdditionalBuyParams
__ AppStoreFoundation: _ASFStoreKitKeyAllowBoostrapCellularData
__ AppStoreFoundation: _ASFStoreKitKeyApplicationName
__ AppStoreFoundation: _ASFStoreKitKeyApplicationUsername
__ AppStoreFoundation: _ASFStoreKitKeyAuthorizationResponse
__ AppStoreFoundation: _ASFStoreKitKeyBundleIdentifier
__ AppStoreFoundation: _ASFStoreKitKeyBundleVersion
__ AppStoreFoundation: _ASFStoreKitKeyDescription
__ AppStoreFoundation: _ASFStoreKitKeyDiscountIdentifier
__ AppStoreFoundation: _ASFStoreKitKeyDiscountKeyIdentifier
__ AppStoreFoundation: _ASFStoreKitKeyDiscountNonceString
__ AppStoreFoundation: _ASFStoreKitKeyDiscountSignature
__ AppStoreFoundation: _ASFStoreKitKeyDiscountTimestamp
__ AppStoreFoundation: _ASFStoreKitKeyDiscounts
__ AppStoreFoundation: _ASFStoreKitKeyDownload
__ AppStoreFoundation: _ASFStoreKitKeyDownloadProgress
__ AppStoreFoundation: _ASFStoreKitKeyDownloadState
__ AppStoreFoundation: _ASFStoreKitKeyDownloadStatus
__ AppStoreFoundation: _ASFStoreKitKeyDownloadTimeRemaining
__ AppStoreFoundation: _ASFStoreKitKeyError
__ AppStoreFoundation: _ASFStoreKitKeyExternalVersion
__ AppStoreFoundation: _ASFStoreKitKeyGrandfatherRequestData
__ AppStoreFoundation: _ASFStoreKitKeyHideDialogs
__ AppStoreFoundation: _ASFStoreKitKeyHosted
__ AppStoreFoundation: _ASFStoreKitKeyHostedAssets
__ AppStoreFoundation: _ASFStoreKitKeyHostedContentLength
__ AppStoreFoundation: _ASFStoreKitKeyHostedInstallPath
__ AppStoreFoundation: _ASFStoreKitKeyHostedVersion
__ AppStoreFoundation: _ASFStoreKitKeyIdentifier
__ AppStoreFoundation: _ASFStoreKitKeyIgnoreRestrictions
__ AppStoreFoundation: _ASFStoreKitKeyIsFamilyShareable
__ AppStoreFoundation: _ASFStoreKitKeyIsStoreOriginated
__ AppStoreFoundation: _ASFStoreKitKeyLocaleIdentifier
__ AppStoreFoundation: _ASFStoreKitKeyModeType
__ AppStoreFoundation: _ASFStoreKitKeyOfferName
__ AppStoreFoundation: _ASFStoreKitKeyOriginalPurchaseDate
__ AppStoreFoundation: _ASFStoreKitKeyOriginalTransactionIdentifier
__ AppStoreFoundation: _ASFStoreKitKeyPartnerIdentifier
__ AppStoreFoundation: _ASFStoreKitKeyPartnerTransactionIdentifier
__ AppStoreFoundation: _ASFStoreKitKeyPeriodCount
__ AppStoreFoundation: _ASFStoreKitKeyPrice
__ AppStoreFoundation: _ASFStoreKitKeyProductsRequestBundleIdentifier
__ AppStoreFoundation: _ASFStoreKitKeyPurchaseDate
__ AppStoreFoundation: _ASFStoreKitKeyQuantity
__ AppStoreFoundation: _ASFStoreKitKeyQueueIdentifier
__ AppStoreFoundation: _ASFStoreKitKeyReceipt
__ AppStoreFoundation: _ASFStoreKitKeyReceiptDirectoryPath
__ AppStoreFoundation: _ASFStoreKitKeyRequestData
__ AppStoreFoundation: _ASFStoreKitKeyRequireAuthentication
__ AppStoreFoundation: _ASFStoreKitKeySK2Receipt
__ AppStoreFoundation: _ASFStoreKitKeySandboxToken
__ AppStoreFoundation: _ASFStoreKitKeyServerEnvironment
__ AppStoreFoundation: _ASFStoreKitKeySiWAClientIdentifier
__ AppStoreFoundation: _ASFStoreKitKeySiWAServiceIdentifier
__ AppStoreFoundation: _ASFStoreKitKeySiWATeamIdentifier
__ AppStoreFoundation: _ASFStoreKitKeySimulateAskToBuy
__ AppStoreFoundation: _ASFStoreKitKeyState
__ AppStoreFoundation: _ASFStoreKitKeySubGroupId
__ AppStoreFoundation: _ASFStoreKitKeySubPeriod
__ AppStoreFoundation: _ASFStoreKitKeyTitle
__ AppStoreFoundation: _ASFStoreKitKeyTransactionIdentifier
__ AppStoreFoundation: _ASFStoreKitKeyType
__ AppStoreFoundation: _ASFStoreKitKeyUniqueIdentifier
__ AppStoreFoundation: _ASFStoreKitKeyVendorIdentifier
__ AppStoreOverlays: _OBJC_CLASS_$_ASOOverlayAppClipConfiguration
__ AppStoreOverlays: _OBJC_CLASS_$_ASOOverlayAppConfiguration
__ AppleMediaServices: _OBJC_CLASS_$_AMSLookupItem
__ AppleMediaServices: _OBJC_CLASS_$_AMSURLParser
__ AuthKit: _OBJC_CLASS_$_AKAuthorizationCredential
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDateCreate
__ CoreFoundation: _CFDateGetAbsoluteTime
__ CoreFoundation: _CFDateGetTypeID
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetDistributedCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNullGetTypeID
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetMaximumSizeForEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFUUIDCreateFromUUIDBytes
__ CoreFoundation: _CFUUIDGetTypeID
__ CoreFoundation: _CFUUIDGetUUIDBytes
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFExecutableLinkedOnOrAfter
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAbsoluteTimeIntervalSince1970
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFNull
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDecimalNumber
__ Foundation: _OBJC_CLASS_$_NSDecimalNumberHandler
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionItem
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ ManagedConfiguration: _MCFeatureInAppPurchasesAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ Preferences: _OBJC_CLASS_$_PSSpecifier
__ Preferences: _OBJC_CLASS_$_PSTableCell
__ Preferences: _OBJC_METACLASS_$_PSTableCell
__ Preferences: _PSCellClassKey
__ Preferences: _PSLazyIconAppID
__ Preferences: _PSLazyIconLoading
__ Preferences: _PSTableCellHeightKey
__ Preferences: _PSTableCellSubtitleTextKey
__ Preferences: _PSTitleKey
__ Security: _SecCertificateCopyCommonName
__ Security: _SecCertificateCreateWithData
__ Security: _SecKeyCopyExternalRepresentation
__ Security: _SecPolicyCreateBasicX509
__ Security: _SecPolicyCreateMacAppStoreReceipt
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTrustCopyKey
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustEvaluateAsyncWithError
__ Security: _SecTrustGetTrustResult
__ Security: _SecTrustSetAnchorCertificates
__ Security: _SecTrustSetVerifyDate
__ SoftLinking: __sl_dlopen
__ StoreServices: _OBJC_CLASS_$_SSLogConfig
__ StoreServices: _OBJC_CLASS_$_SSLookupItem
__ StoreServices: _OBJC_CLASS_$_SSURLBag
__ StoreServices: _OBJC_CLASS_$_SSURLBagContext
__ StoreServices: _OBJC_CLASS_$_SSVApplicationCapabilitiesRequest
__ StoreServices: _SSError
__ StoreServices: _SSErrorDomain
__ StoreServices: _SSFileLog
__ StoreServices: _SSXPCCreateMessageDictionary
__ StoreServices: _SSXPCDictionaryCopyCFObjectWithClass
__ StoreServices: _SSXPCDictionarySetObject
__ StoreServices: _SSXPCInAppReviewSandboxToken
__ StoreServices: _kSSPurchaseRequestSucceededNotification
__ UIFoundation: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationRotationFollowingController
__ UIKit: _OBJC_CLASS_$_UIApplicationRotationFollowingWindow
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationBarAppearance
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UINavigationItem
__ UIKit: _OBJC_CLASS_$_UIPreviewPresentationController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIToolbar
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIWebView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_CLASS_$__UIResilientRemoteViewContainerViewController
__ UIKit: _OBJC_METACLASS_$_UIAlertController
__ UIKit: _OBJC_METACLASS_$_UIApplicationRotationFollowingWindow
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIAccessibilityPostNotification
__ UIKit: _UIAccessibilityScreenChangedNotification
__ UIKit: _UIApp
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillTerminateNotification
__ UIKit: _UIBackgroundTaskInvalid
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIKeyboardAnimationCurveUserInfoKey
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardDidChangeFrameNotification
__ UIKit: _UIKeyboardDidHideNotification
__ UIKit: _UIKeyboardDidShowNotification
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardWillChangeFrameNotification
__ UIKit: _UISceneDidDisconnectNotification
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UIWindowLevelStatusBar
__ WebKitLegacy: _OBJC_CLASS_$_WebView
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_dispatch_queue
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_os_log
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_type_array
__ libSystem.B.dylib: __xpc_type_bool
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_data
__ libSystem.B.dylib: __xpc_type_date
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_double
__ libSystem.B.dylib: __xpc_type_int64
__ libSystem.B.dylib: __xpc_type_null
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: __xpc_type_uuid
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_assert_not_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _xpc_array_append_value
__ libSystem.B.dylib: _xpc_array_apply
__ libSystem.B.dylib: _xpc_array_create
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_bool_create
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_connection_create
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_legacy
__ libSystem.B.dylib: _xpc_data_create
__ libSystem.B.dylib: _xpc_data_get_bytes_ptr
__ libSystem.B.dylib: _xpc_data_get_length
__ libSystem.B.dylib: _xpc_date_create
__ libSystem.B.dylib: _xpc_date_get_value
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_array
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_count
__ libSystem.B.dylib: _xpc_dictionary_get_dictionary
__ libSystem.B.dylib: _xpc_dictionary_get_double
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_double
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_double_create
__ libSystem.B.dylib: _xpc_double_get_value
__ libSystem.B.dylib: _xpc_endpoint_create
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_int64_create
__ libSystem.B.dylib: _xpc_int64_get_value
__ libSystem.B.dylib: _xpc_null_create
__ libSystem.B.dylib: _xpc_string_create
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: _xpc_uuid_create
__ libSystem.B.dylib: _xpc_uuid_get_bytes
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_getMethodDescription
__ libswiftCore.dylib: _OBJC_CLASS_$_SwiftNativeNSObject
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$_SwiftNativeNSObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: __swift_stdlib_strtod_clocale
__ libswiftCore.dylib: _swift_allocBox
__ libswiftCore.dylib: _swift_allocError
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_allocateGenericValueMetadata
__ libswiftCore.dylib: _swift_arrayDestroy
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_arrayInitWithTakeBackToFront
__ libswiftCore.dylib: _swift_arrayInitWithTakeFrontToBack
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_checkMetadataState
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deallocPartialClassInstance
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_errorRetain
__ libswiftCore.dylib: _swift_getAssociatedConformanceWitness
__ libswiftCore.dylib: _swift_getAssociatedTypeWitness
__ libswiftCore.dylib: _swift_getEnumCaseMultiPayload
__ libswiftCore.dylib: _swift_getEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getGenericMetadata
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTupleTypeLayout2
__ libswiftCore.dylib: _swift_getTupleTypeMetadata2
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initEnumMetadataMultiPayload
__ libswiftCore.dylib: _swift_initEnumMetadataSinglePayload
__ libswiftCore.dylib: _swift_initStaticObject
__ libswiftCore.dylib: _swift_initStructMetadata
__ libswiftCore.dylib: _swift_isEscapingClosureAtFileLocation
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_bridgeObject
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_makeBoxUnique
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_release_n
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_retain_n
__ libswiftCore.dylib: _swift_slowAlloc
__ libswiftCore.dylib: _swift_slowDealloc
__ libswiftCore.dylib: _swift_stdlib_random
__ libswiftCore.dylib: _swift_storeEnumTagMultiPayload
__ libswiftCore.dylib: _swift_storeEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_unexpectedError
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_updateClassMetadata2
__ libswiftCore.dylib: _swift_willThrow
__ libswiftCoreData.dylib: __swift_FORCE_LOAD_$_swiftCoreData
__ libswiftCoreFoundation.dylib: __swift_FORCE_LOAD_$_swiftCoreFoundation
__ libswiftCoreGraphics.dylib: __swift_FORCE_LOAD_$_swiftCoreGraphics
__ libswiftCoreImage.dylib: __swift_FORCE_LOAD_$_swiftCoreImage
__ libswiftDarwin.dylib: __swift_FORCE_LOAD_$_swiftDarwin
__ libswiftDataDetection.dylib: __swift_FORCE_LOAD_$_swiftDataDetection
__ libswiftDispatch.dylib: __swift_FORCE_LOAD_$_swiftDispatch
__ libswiftFileProvider.dylib: __swift_FORCE_LOAD_$_swiftFileProvider
__ libswiftFoundation.dylib: __swift_FORCE_LOAD_$_swiftFoundation
__ libswiftMetal.dylib: __swift_FORCE_LOAD_$_swiftMetal
__ libswiftObjectiveC.dylib: __swift_FORCE_LOAD_$_swiftObjectiveC
__ libswiftQuartzCore.dylib: __swift_FORCE_LOAD_$_swiftQuartzCore
__ libswiftUIKit.dylib: __swift_FORCE_LOAD_$_swiftUIKit
__ libswift_Concurrency.dylib: _swift_continuation_await
__ libswift_Concurrency.dylib: _swift_continuation_init
__ libswift_Concurrency.dylib: _swift_continuation_resume
__ libswift_Concurrency.dylib: _swift_continuation_throwingResume
__ libswift_Concurrency.dylib: _swift_continuation_throwingResumeWithError
__ libswift_Concurrency.dylib: _swift_defaultActor_deallocate
__ libswift_Concurrency.dylib: _swift_defaultActor_destroy
__ libswift_Concurrency.dylib: _swift_defaultActor_initialize
__ libswift_Concurrency.dylib: _swift_deletedAsyncMethodErrorTu
__ libswift_Concurrency.dylib: _swift_task_alloc
__ libswift_Concurrency.dylib: _swift_task_create
__ libswift_Concurrency.dylib: _swift_task_dealloc
__ libswift_Concurrency.dylib: _swift_task_getCurrentExecutor
__ libswift_Concurrency.dylib: _swift_task_switch
__ libswiftos.dylib: __swift_FORCE_LOAD_$_swiftos
SKClientBroker : NSObject <ASDStoreKitClientProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKClientBroker defaultBroker]

  // instance methods
  -[SKClientBroker .cxx_destruct]
  -[SKClientBroker init]
  -[SKClientBroker registerClient:withIdentifier:]
  -[SKClientBroker askToShowMessageWithReplyBlock:]
  -[SKClientBroker removedEntitlementsForProductIdentifiers:]
  -[SKClientBroker updatedTransactions:]
  -[SKClientBroker removedTransactions:]
  -[SKClientBroker downloadAdded:]
  -[SKClientBroker downloadStatusChanged:]
  -[SKClientBroker downloadRemoved:]
  -[SKClientBroker storefrontChanged:]
  -[SKClientBroker handleEngagementRequest:resultHandler:]
  -[SKClientBroker receivedStatuses:]
  -[SKClientBroker receivedTransactions:]
  -[SKClientBroker handleAuthenticateRequest:resultHandler:]
  -[SKClientBroker handleDialogRequest:resultHandler:]
  -[SKClientBroker unregisterClientWithIdentifier:]
  -[SKClientBroker hasTransactionListener]
  -[SKClientBroker registerSubscriptionStatusListener:]
  -[SKClientBroker unregisterSubscriptionStatusListener:]
  -[SKClientBroker registerStorefrontListener:]
  -[SKClientBroker unregisterStorefrontListener:]
  -[SKClientBroker registerTransactionListener:]
  -[SKClientBroker unregisterTransactionListener:]


SKPromotedIAPGetOrderRequest : SKRequest
 @property  @? completionHandler
 @property  NSString *bundleId

  // instance methods
  -[SKPromotedIAPGetOrderRequest bundleId]
  -[SKPromotedIAPGetOrderRequest .cxx_destruct]
  -[SKPromotedIAPGetOrderRequest _start]
  -[SKPromotedIAPGetOrderRequest initWithCompletionHandler:]
  -[SKPromotedIAPGetOrderRequest setBundleId:]
  -[SKPromotedIAPGetOrderRequest setCompletionHandler:]
  -[SKPromotedIAPGetOrderRequest completionHandler]
  -[SKPromotedIAPGetOrderRequest _handleReply:]
  -[SKPromotedIAPGetOrderRequest initWithBundleId:completionHandler:]


SKProductDiscountInternal : NSObject
  // instance methods
  -[SKProductDiscountInternal .cxx_destruct]


SKProductDiscount : NSObject
 @property  NSDecimalNumber *price
 @property  NSLocale *priceLocale
 @property  NSString *identifier
 @property  SKProductSubscriptionPeriod *subscriptionPeriod
 @property  unsigned long numberOfPeriods
 @property  unsigned long paymentMode
 @property  unsigned long type

  // instance methods
  -[SKProductDiscount _setType:]
  -[SKProductDiscount _setIdentifier:]
  -[SKProductDiscount .cxx_destruct]
  -[SKProductDiscount init]
  -[SKProductDiscount price]
  -[SKProductDiscount paymentMode]
  -[SKProductDiscount identifier]
  -[SKProductDiscount copyXPCEncoding]
  -[SKProductDiscount initWithDictionary:]
  -[SKProductDiscount type]
  -[SKProductDiscount initWithXPCEncoding:]
  -[SKProductDiscount priceLocale]
  -[SKProductDiscount subscriptionPeriod]
  -[SKProductDiscount numberOfPeriods]
  -[SKProductDiscount _setNumberOfPeriods:]
  -[SKProductDiscount _setPaymentMode:]
  -[SKProductDiscount _setPrice:]
  -[SKProductDiscount _setPriceLocale:]
  -[SKProductDiscount _setSubscriptionPeriod:]


SKDownloadInternal : NSObject
  // instance methods
  -[SKDownloadInternal .cxx_destruct]


SKDownload : NSObject
 @property  NSNumber *_downloadID
 @property  long long state
 @property  long long downloadState
 @property  long long contentLength
 @property  long long expectedContentLength
 @property  NSString *contentIdentifier
 @property  NSURL *contentURL
 @property  NSString *contentVersion
 @property  NSError *error
 @property  float progress
 @property  double timeRemaining
 @property  SKPaymentTransaction *transaction

  // instance methods
  -[SKDownload _setError:]
  -[SKDownload contentLength]
  -[SKDownload _setTransaction:]
  -[SKDownload expectedContentLength]
  -[SKDownload transaction]
  -[SKDownload timeRemaining]
  -[SKDownload .cxx_destruct]
  -[SKDownload _setVersion:]
  -[SKDownload progress]
  -[SKDownload init]
  -[SKDownload isEqual:]
  -[SKDownload contentVersion]
  -[SKDownload _setContentIdentifier:]
  -[SKDownload state]
  -[SKDownload contentIdentifier]
  -[SKDownload copyXPCEncoding]
  -[SKDownload _setProgress:]
  -[SKDownload _downloadID]
  -[SKDownload contentURL]
  -[SKDownload downloadState]
  -[SKDownload initWithXPCEncoding:]
  -[SKDownload error]
  -[SKDownload _setContentLength:]
  -[SKDownload _setContentURL:]
  -[SKDownload _setDownloadState:]
  -[SKDownload _setTimeRemaining:]
  -[SKDownload _applyChangeset:]
  -[SKDownload _setDownloadID:]


SKDownloadChangeset : NSObject <NSCopying>
 @property  NSNumber *contentLength
 @property  NSURL *contentURL
 @property  NSNumber *downloadID
 @property  NSNumber *downloadState
 @property  NSError *error
 @property  NSNumber *progress
 @property  NSNumber *timeRemaining

  // class methods
  +[SKDownloadChangeset changesetWithDownloadID:state:]

  // instance methods
  -[SKDownloadChangeset contentLength]
  -[SKDownloadChangeset setDownloadState:]
  -[SKDownloadChangeset setContentLength:]
  -[SKDownloadChangeset timeRemaining]
  -[SKDownloadChangeset .cxx_destruct]
  -[SKDownloadChangeset progress]
  -[SKDownloadChangeset downloadID]
  -[SKDownloadChangeset copyXPCEncoding]
  -[SKDownloadChangeset setContentURL:]
  -[SKDownloadChangeset setProgress:]
  -[SKDownloadChangeset copyWithZone:]
  -[SKDownloadChangeset contentURL]
  -[SKDownloadChangeset downloadState]
  -[SKDownloadChangeset initWithXPCEncoding:]
  -[SKDownloadChangeset setError:]
  -[SKDownloadChangeset error]
  -[SKDownloadChangeset setTimeRemaining:]
  -[SKDownloadChangeset setDownloadID:]


SKPromotedIAPSetVisibilityRequest : SKRequest
 @property  @? completionHandler
 @property  long long visibility
 @property  NSString *productId
 @property  NSString *bundleId

  // instance methods
  -[SKPromotedIAPSetVisibilityRequest productId]
  -[SKPromotedIAPSetVisibilityRequest bundleId]
  -[SKPromotedIAPSetVisibilityRequest setProductId:]
  -[SKPromotedIAPSetVisibilityRequest visibility]
  -[SKPromotedIAPSetVisibilityRequest .cxx_destruct]
  -[SKPromotedIAPSetVisibilityRequest _start]
  -[SKPromotedIAPSetVisibilityRequest setVisibility:]
  -[SKPromotedIAPSetVisibilityRequest setBundleId:]
  -[SKPromotedIAPSetVisibilityRequest setCompletionHandler:]
  -[SKPromotedIAPSetVisibilityRequest completionHandler]
  -[SKPromotedIAPSetVisibilityRequest _handleReply:]
  -[SKPromotedIAPSetVisibilityRequest initWithVisibility:productId:completionHandler:]
  -[SKPromotedIAPSetVisibilityRequest initWithVisibility:productId:bundleId:completionHandler:]


SKStoreExtension : UIViewController <SKStoreExtensionServiceInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKStoreExtension _remoteViewControllerInterface]
  +[SKStoreExtension _exportedInterface]
  +[SKStoreExtension clientInterface]
  +[SKStoreExtension serviceInterface]

  // instance methods
  -[SKStoreExtension dismissViewControllerAnimated:completion:]
  -[SKStoreExtension setRequestedIdentifier:]
  -[SKStoreExtension setupWithParameters:]
  -[SKStoreExtension setTabIdentifier:]
  -[SKStoreExtension shouldOpenURL:sourceApplication:annotation:]
  -[SKStoreExtension presentRequestedViewControllerWithIdentifier:]
  -[SKStoreExtension openURL:sourceApplication:annotation:]


SKCloudServiceSetupReloadContext : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *serializedUserInfo
 @property  NSURL *cloudServiceSetupURL
 @property  NSString *action
 @property  NSArray *queryItems
 @property  NSString *sourceApplicationBundleIdentifier
 @property  NSURL *referrerURL
 @property  NSDictionary *userInfo

  // class methods
  +[SKCloudServiceSetupReloadContext supportsSecureCoding]

  // instance methods
  -[SKCloudServiceSetupReloadContext queryItems]
  -[SKCloudServiceSetupReloadContext setUserInfo:]
  -[SKCloudServiceSetupReloadContext sourceApplicationBundleIdentifier]
  -[SKCloudServiceSetupReloadContext initWithCoder:]
  -[SKCloudServiceSetupReloadContext setSourceApplicationBundleIdentifier:]
  -[SKCloudServiceSetupReloadContext .cxx_destruct]
  -[SKCloudServiceSetupReloadContext setAction:]
  -[SKCloudServiceSetupReloadContext referrerURL]
  -[SKCloudServiceSetupReloadContext action]
  -[SKCloudServiceSetupReloadContext isEqual:]
  -[SKCloudServiceSetupReloadContext setReferrerURL:]
  -[SKCloudServiceSetupReloadContext userInfo]
  -[SKCloudServiceSetupReloadContext setQueryItems:]
  -[SKCloudServiceSetupReloadContext copyWithZone:]
  -[SKCloudServiceSetupReloadContext encodeWithCoder:]
  -[SKCloudServiceSetupReloadContext cloudServiceSetupURL]
  -[SKCloudServiceSetupReloadContext setCloudServiceSetupURL:]
  -[SKCloudServiceSetupReloadContext serializedUserInfo]


SKArcadeSubscribeViewController : UIViewController <SKStoreRemoteViewControllerDelegate>
 @property  SKStoreRemoteViewController *remoteViewController
 @property  NSString *bundleID
 @property  NSNumber *itemID
 @property  NSExtension *extension
 @property  <NSCopying> *extensionRequestIdentifier
 @property  <SKArcadeSubscribeViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKArcadeSubscribeViewController setExtension:]
  -[SKArcadeSubscribeViewController setItemID:]
  -[SKArcadeSubscribeViewController prefersStatusBarHidden]
  -[SKArcadeSubscribeViewController bundleID]
  -[SKArcadeSubscribeViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[SKArcadeSubscribeViewController remoteViewController]
  -[SKArcadeSubscribeViewController .cxx_destruct]
  -[SKArcadeSubscribeViewController itemID]
  -[SKArcadeSubscribeViewController setDelegate:]
  -[SKArcadeSubscribeViewController viewDidAppear:]
  -[SKArcadeSubscribeViewController extension]
  -[SKArcadeSubscribeViewController setRemoteViewController:]
  -[SKArcadeSubscribeViewController setBundleID:]
  -[SKArcadeSubscribeViewController finish]
  -[SKArcadeSubscribeViewController delegate]
  -[SKArcadeSubscribeViewController setExtensionRequestIdentifier:]
  -[SKArcadeSubscribeViewController dealloc]
  -[SKArcadeSubscribeViewController supportedInterfaceOrientations]
  -[SKArcadeSubscribeViewController extensionRequestIdentifier]
  -[SKArcadeSubscribeViewController finishExtension]
  -[SKArcadeSubscribeViewController _loadOcelotUpsellExtension]
  -[SKArcadeSubscribeViewController _setupRemoteChildViewController]
  -[SKArcadeSubscribeViewController storeRemoteViewControllerNeedsTabSelection:]
  -[SKArcadeSubscribeViewController storeRemoteViewController:presentRequestedViewControllerWithIdentifier:]
  -[SKArcadeSubscribeViewController storeRemoteViewControllerDidDismiss]
  -[SKArcadeSubscribeViewController storeRemoteViewControllerTerminatedWithError:]
  -[SKArcadeSubscribeViewController initWithItemID:bundleID:]


SKPayment : NSObject <NSCopying, NSMutableCopying>
 @property  NSString *partnerIdentifier
 @property  NSString *partnerTransactionIdentifier
 @property  NSDictionary *requestParameters
 @property  BOOL isStoreOriginated
 @property  SKPaymentAppleIDAuthorizationRequest *appleIDAuthorizationClientInfo
 @property  NSString *productIdentifier
 @property  NSData *requestData
 @property  long long quantity
 @property  NSString *applicationUsername
 @property  BOOL simulatesAskToBuyInSandbox
 @property  SKPaymentDiscount *paymentDiscount

  // class methods
  +[SKPayment paymentWithProduct:]
  +[SKPayment paymentFromPurchaseIntentWithProduct:]
  +[SKPayment paymentWithProductIdentifier:]

  // instance methods
  -[SKPayment requestData]
  -[SKPayment quantity]
  -[SKPayment requestParameters]
  -[SKPayment .cxx_destruct]
  -[SKPayment init]
  -[SKPayment isEqual:]
  -[SKPayment partnerIdentifier]
  -[SKPayment mutableCopyWithZone:]
  -[SKPayment copyWithZone:]
  -[SKPayment productIdentifier]
  -[SKPayment applicationUsername]
  -[SKPayment simulatesAskToBuyInSandbox]
  -[SKPayment paymentDiscount]
  -[SKPayment isStoreOriginated]
  -[SKPayment partnerTransactionIdentifier]
  -[SKPayment appleIDAuthorizationClientInfo]


SKMutablePayment : SKPayment
 @property  BOOL isStoreOriginated
 @property  NSString *partnerIdentifier
 @property  NSString *partnerTransactionIdentifier
 @property  NSDictionary *requestParameters
 @property  SKPaymentAppleIDAuthorizationRequest *appleIDAuthorizationClientInfo
 @property  NSString *applicationUsername
 @property  SKPaymentDiscount *paymentDiscount
 @property  NSString *productIdentifier
 @property  long long quantity
 @property  NSData *requestData
 @property  BOOL simulatesAskToBuyInSandbox

  // instance methods
  -[SKMutablePayment setRequestParameters:]
  -[SKMutablePayment setProductIdentifier:]
  -[SKMutablePayment setRequestData:]
  -[SKMutablePayment setPartnerIdentifier:]
  -[SKMutablePayment setQuantity:]
  -[SKMutablePayment setAppleIDAuthorizationClientInfo:]
  -[SKMutablePayment setApplicationUsername:]
  -[SKMutablePayment setIsStoreOriginated:]
  -[SKMutablePayment setSimulatesAskToBuyInSandbox:]
  -[SKMutablePayment setPaymentDiscount:]
  -[SKMutablePayment setPartnerTransactionIdentifier:]


SKPaymentInternal : NSObject <NSCopying>
  // instance methods
  -[SKPaymentInternal .cxx_destruct]
  -[SKPaymentInternal init]
  -[SKPaymentInternal copyWithZone:]


SKOverlayTransitionContext : NSObject
 @property  ASOOverlayTransitionContext *backing
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} startFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} endFrame

  // instance methods
  -[SKOverlayTransitionContext .cxx_destruct]
  -[SKOverlayTransitionContext startFrame]
  -[SKOverlayTransitionContext endFrame]
  -[SKOverlayTransitionContext backing]
  -[SKOverlayTransitionContext addAnimationBlock:]
  -[SKOverlayTransitionContext initWithASOOverlayTransitionContext:]
  -[SKOverlayTransitionContext setBacking:]


SKRemoteEngagementPresentationWindow : UIApplicationRotationFollowingWindow
  // instance methods
  -[SKRemoteEngagementPresentationWindow presentViewController:animated:completion:]
  -[SKRemoteEngagementPresentationWindow init]
  -[SKRemoteEngagementPresentationWindow _presentationViewController]
  -[SKRemoteEngagementPresentationWindow isInternalWindow]


SKPaymentQueue : NSObject
 @property  SKPaymentQueueClient *paymentQueueClient
 @property  <SKPaymentQueueDelegate> *delegate
 @property  SKStorefront *storefront
 @property  NSArray *transactionObservers
 @property  NSArray *transactions

  // class methods
  +[SKPaymentQueue canMakePayments]
  +[SKPaymentQueue defaultQueue]

  // instance methods
  -[SKPaymentQueue transactions]
  -[SKPaymentQueue finishTransaction:]
  -[SKPaymentQueue resumeDownloads:]
  -[SKPaymentQueue _applicationWillEnterForegroundNotification:]
  -[SKPaymentQueue .cxx_destruct]
  -[SKPaymentQueue _establishConnectionIfNeeded]
  -[SKPaymentQueue _establishConnection]
  -[SKPaymentQueue setDelegate:]
  -[SKPaymentQueue init]
  -[SKPaymentQueue cancelDownloads:]
  -[SKPaymentQueue pauseDownloads:]
  -[SKPaymentQueue delegate]
  -[SKPaymentQueue addTransactionObserver:]
  -[SKPaymentQueue addPayment:]
  -[SKPaymentQueue initWithPaymentQueueClient:]
  -[SKPaymentQueue dealloc]
  -[SKPaymentQueue _applicationDidBecomeActiveNotification:]
  -[SKPaymentQueue storefront]
  -[SKPaymentQueue askToShowMessageWithReplyBlock:]
  -[SKPaymentQueue removedEntitlementsForProductIdentifiers:]
  -[SKPaymentQueue updatedTransactions:]
  -[SKPaymentQueue removedTransactions:]
  -[SKPaymentQueue downloadAdded:]
  -[SKPaymentQueue downloadStatusChanged:]
  -[SKPaymentQueue downloadRemoved:]
  -[SKPaymentQueue storefrontChanged:]
  -[SKPaymentQueue handleEngagementRequest:resultHandler:]
  -[SKPaymentQueue forceSandboxForBundleIdentifier:untilDate:]
  -[SKPaymentQueue presentCodeRedemptionSheet]
  -[SKPaymentQueue paymentQueueClient]
  -[SKPaymentQueue _initSKPaymentQueue]
  -[SKPaymentQueue _notifyObserversAboutChanges:sendUpdatedDownloads:]
  -[SKPaymentQueue _processTransaction:]
  -[SKPaymentQueue _checkServerQueueForced:]
  -[SKPaymentQueue _checkForMessages]
  -[SKPaymentQueue _sendCommand:forDownloads:]
  -[SKPaymentQueue _removeLocalTransaction:]
  -[SKPaymentQueue restoreCompletedTransactionsWithApplicationUsername:]
  -[SKPaymentQueue _updatedTransactions:restored:]
  -[SKPaymentQueue _presentCodeRedemptionSheet]
  -[SKPaymentQueue _notifyObserversAboutPurchaseIntentsForProducts:]
  -[SKPaymentQueue _notifyObserversRestoreTransactionsFinished]
  -[SKPaymentQueue _notifyObserversRestoreTransactionsFailedWithError:]
  -[SKPaymentQueue _handleConnectionDisconnect]
  -[SKPaymentQueue _handleMessage:connection:]
  -[SKPaymentQueue _setTransactionsWithReply:]
  -[SKPaymentQueue _notifyObserversAboutRemovals:]
  -[SKPaymentQueue _updateDownloadsForMessage:]
  -[SKPaymentQueue _updatePaymentsForMessage:]
  -[SKPaymentQueue _refreshPaymentsWithPolicy:]
  -[SKPaymentQueue _removePaymentsForMessage:]
  -[SKPaymentQueue _completeRestoreWithMessage:]
  -[SKPaymentQueue _sendAppStorePendingPaymentsRequestForMessage:]
  -[SKPaymentQueue _shouldContinueTransactionForMessage:]
  -[SKPaymentQueue _removeNilTransactionObservers]
  -[SKPaymentQueue _processTransactionDict:forTransaction:error:]
  -[SKPaymentQueue _copyRemovalsFromUnmergedIndexSet:]
  -[SKPaymentQueue _finishRefreshPayments]
  -[SKPaymentQueue _copyDownloadIDsForDownloads:]
  -[SKPaymentQueue _processUpdates:trimUnmatched:sendUpdatedDownloads:]
  -[SKPaymentQueue _copyTransactionsFromXPCArray:]
  -[SKPaymentQueue _applyDownloadChangeset:]
  -[SKPaymentQueue _notifyObserversAboutDownloadChanges:]
  -[SKPaymentQueue transactionObservers]
  -[SKPaymentQueue removeTransactionObserver:]
  -[SKPaymentQueue restoreCompletedTransactions]
  -[SKPaymentQueue showPriceConsentIfNeeded]
  -[SKPaymentQueue startDownloads:]
  -[SKPaymentQueue shouldContinueTransaction:withNewStorefront:replyBlock:]
  -[SKPaymentQueue _daemonLaunchedNotification]
  -[SKPaymentQueue _sendAppEnteredForegroundMessage]


SKPaymentQueueInternal : NSObject
  // instance methods
  -[SKPaymentQueueInternal .cxx_destruct]
  -[SKPaymentQueueInternal init]
  -[SKPaymentQueueInternal dealloc]


SKPaymentDelegate : NSObject <NSSecureCoding, ASDStoreKitPaymentProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKPaymentDelegate .cxx_destruct]
  -[SKPaymentDelegate shouldContinueTransactionWithNewStorefront:replyBlock:]
  -[SKPaymentDelegate handleEngagementRequest:replyBlock:]
  -[SKPaymentDelegate initWithQueue:transactionUUID:]


SKRemoteDismissingTransition : NSObject <UIViewControllerAnimatedTransitioning>
 @property  UIViewController<SKRemoteDismissingViewController> *viewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKRemoteDismissingTransition viewController]
  -[SKRemoteDismissingTransition initWithViewController:]
  -[SKRemoteDismissingTransition transitionDuration:]
  -[SKRemoteDismissingTransition .cxx_destruct]
  -[SKRemoteDismissingTransition animateTransition:]
  -[SKRemoteDismissingTransition setViewController:]
  -[SKRemoteDismissingTransition dismissRemoteViewController:]


SKPaymentTransaction : NSObject
 @property  NSString *matchingIdentifier
 @property  NSString *_transactionIdentifier
 @property  NSError *error
 @property  SKPaymentTransaction *originalTransaction
 @property  SKPayment *payment
 @property  NSArray *downloads
 @property  NSDate *transactionDate
 @property  NSString *transactionIdentifier
 @property  NSData *transactionReceipt
 @property  long long transactionState

  // instance methods
  -[SKPaymentTransaction downloads]
  -[SKPaymentTransaction _setError:]
  -[SKPaymentTransaction UUID]
  -[SKPaymentTransaction transactionDate]
  -[SKPaymentTransaction payment]
  -[SKPaymentTransaction .cxx_destruct]
  -[SKPaymentTransaction init]
  -[SKPaymentTransaction transactionIdentifier]
  -[SKPaymentTransaction copyXPCEncoding]
  -[SKPaymentTransaction appleIDAccountDetails]
  -[SKPaymentTransaction _transactionIdentifier]
  -[SKPaymentTransaction initWithXPCEncoding:]
  -[SKPaymentTransaction error]
  -[SKPaymentTransaction transactionState]
  -[SKPaymentTransaction initWithPayment:]
  -[SKPaymentTransaction matchingIdentifier]
  -[SKPaymentTransaction mergeWithServerTransaction:]
  -[SKPaymentTransaction _setTransactionState:]
  -[SKPaymentTransaction canMergeWithTransaction:]
  -[SKPaymentTransaction mergeWithTransaction:]
  -[SKPaymentTransaction initWithServerTransaction:]
  -[SKPaymentTransaction originalTransaction]
  -[SKPaymentTransaction _setDownloads:]
  -[SKPaymentTransaction _setAuthorizationResponse:]
  -[SKPaymentTransaction getPaymentDiscountFromTransactionXPCEncoding:]
  -[SKPaymentTransaction transactionReceipt]
  -[SKPaymentTransaction _setOriginalTransaction:]
  -[SKPaymentTransaction _setTemporaryIdentifier:]
  -[SKPaymentTransaction _setTransactionDate:]
  -[SKPaymentTransaction _setTransactionIdentifier:]
  -[SKPaymentTransaction _setTransactionReceipt:]


SKPaymentTransactionInternal : NSObject
  // instance methods
  -[SKPaymentTransactionInternal .cxx_destruct]
  -[SKPaymentTransactionInternal init]


SKRemoteAccountPageViewController : _UIRemoteViewController <SKUIClientAccountPageViewController>
 @property  SKAccountPageViewController *accountPageViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKRemoteAccountPageViewController exportedInterface]
  +[SKRemoteAccountPageViewController serviceViewControllerInterface]

  // instance methods
  -[SKRemoteAccountPageViewController disconnect]
  -[SKRemoteAccountPageViewController viewServiceDidTerminateWithError:]
  -[SKRemoteAccountPageViewController .cxx_destruct]
  -[SKRemoteAccountPageViewController didFinishLoading]
  -[SKRemoteAccountPageViewController didPrepareWithResult:error:]
  -[SKRemoteAccountPageViewController dismissViewControllerWithResult:error:]
  -[SKRemoteAccountPageViewController financeInterruptionResolved:]
  -[SKRemoteAccountPageViewController overrideCreditCardPresentationWithCompletion:]
  -[SKRemoteAccountPageViewController overrideRedeemCameraPerformAction:withObject:]
  -[SKRemoteAccountPageViewController overrideRedeemCameraWithCompletion:]
  -[SKRemoteAccountPageViewController setBridgedNavigationItemWithOptions:]
  -[SKRemoteAccountPageViewController pushBridgedViewControllerAnimated:options:]
  -[SKRemoteAccountPageViewController popBridgedViewControllersToIndex:]
  -[SKRemoteAccountPageViewController presentBridgedViewController]
  -[SKRemoteAccountPageViewController dismissBridgedViewController]
  -[SKRemoteAccountPageViewController accountPageViewController]
  -[SKRemoteAccountPageViewController setAccountPageViewController:]


SKAdImpression : NSObject
 @property  NSNumber *sourceAppStoreItemIdentifier
 @property  NSNumber *advertisedAppStoreItemIdentifier
 @property  NSString *adNetworkIdentifier
 @property  NSNumber *adCampaignIdentifier
 @property  NSString *adImpressionIdentifier
 @property  NSString *adType
 @property  NSString *adDescription
 @property  NSString *adPurchaserName
 @property  NSNumber *timestamp
 @property  NSString *signature
 @property  NSString *version

  // instance methods
  -[SKAdImpression setSignature:]
  -[SKAdImpression .cxx_destruct]
  -[SKAdImpression setVersion:]
  -[SKAdImpression signature]
  -[SKAdImpression adType]
  -[SKAdImpression version]
  -[SKAdImpression timestamp]
  -[SKAdImpression setTimestamp:]
  -[SKAdImpression setAdType:]
  -[SKAdImpression sourceAppStoreItemIdentifier]
  -[SKAdImpression setSourceAppStoreItemIdentifier:]
  -[SKAdImpression advertisedAppStoreItemIdentifier]
  -[SKAdImpression setAdvertisedAppStoreItemIdentifier:]
  -[SKAdImpression adNetworkIdentifier]
  -[SKAdImpression setAdNetworkIdentifier:]
  -[SKAdImpression adCampaignIdentifier]
  -[SKAdImpression setAdCampaignIdentifier:]
  -[SKAdImpression adImpressionIdentifier]
  -[SKAdImpression setAdImpressionIdentifier:]
  -[SKAdImpression adDescription]
  -[SKAdImpression setAdDescription:]
  -[SKAdImpression adPurchaserName]
  -[SKAdImpression setAdPurchaserName:]


SKRemoteEngagementRemoteViewController : _UIRemoteViewController
 @property  <SKEngagementPresenterProtocol> *delegate

  // class methods
  +[SKRemoteEngagementRemoteViewController exportedInterface]
  +[SKRemoteEngagementRemoteViewController serviceViewControllerInterface]

  // instance methods
  -[SKRemoteEngagementRemoteViewController .cxx_destruct]
  -[SKRemoteEngagementRemoteViewController setDelegate:]
  -[SKRemoteEngagementRemoteViewController delegate]
  -[SKRemoteEngagementRemoteViewController preferredContentSizeDidChange:]
  -[SKRemoteEngagementRemoteViewController engagementTaskDidFinishWithResult:resultData:error:completion:]


SKProductSubscriptionPeriodInternal : NSObject

SKProductSubscriptionPeriod : NSObject
 @property  unsigned long numberOfUnits
 @property  unsigned long unit

  // instance methods
  -[SKProductSubscriptionPeriod unit]
  -[SKProductSubscriptionPeriod .cxx_destruct]
  -[SKProductSubscriptionPeriod init]
  -[SKProductSubscriptionPeriod copyXPCEncoding]
  -[SKProductSubscriptionPeriod initWithXPCEncoding:]
  -[SKProductSubscriptionPeriod initWithISO8601String:]
  -[SKProductSubscriptionPeriod numberOfUnits]
  -[SKProductSubscriptionPeriod _setNumberOfUnits:]
  -[SKProductSubscriptionPeriod _setUnit:]


SKProduct : NSObject
 @property  NSString *_localeIdentifier
 @property  NSString *localizedDescription
 @property  NSString *localizedTitle
 @property  NSDecimalNumber *price
 @property  NSLocale *priceLocale
 @property  NSString *productIdentifier
 @property  BOOL isDownloadable
 @property  BOOL downloadable
 @property  BOOL isFamilyShareable
 @property  NSArray *contentLengths
 @property  NSArray *downloadContentLengths
 @property  NSString *contentVersion
 @property  NSString *downloadContentVersion
 @property  SKProductSubscriptionPeriod *subscriptionPeriod
 @property  SKProductDiscount *introductoryPrice
 @property  NSString *subscriptionGroupIdentifier
 @property  NSArray *discounts

  // class methods
  +[SKProduct productsFromDictionaries:]
  +[SKProduct productsFromXPCEncodingsArray:]

  // instance methods
  -[SKProduct localizedTitle]
  -[SKProduct localizedDescription]
  -[SKProduct .cxx_destruct]
  -[SKProduct init]
  -[SKProduct price]
  -[SKProduct contentVersion]
  -[SKProduct _localeIdentifier]
  -[SKProduct copyXPCEncoding]
  -[SKProduct isDownloadable]
  -[SKProduct initWithDictionary:]
  -[SKProduct downloadable]
  -[SKProduct isFamilyShareable]
  -[SKProduct initWithXPCEncoding:]
  -[SKProduct productIdentifier]
  -[SKProduct _setLocalizedTitle:]
  -[SKProduct priceLocale]
  -[SKProduct subscriptionPeriod]
  -[SKProduct _setPrice:]
  -[SKProduct _setPriceLocale:]
  -[SKProduct _setSubscriptionPeriod:]
  -[SKProduct initMinusLocaleWithDictionary:]
  -[SKProduct _logMissingLocale]
  -[SKProduct downloadContentLengths]
  -[SKProduct downloadContentVersion]
  -[SKProduct _setLocaleIdentifier:]
  -[SKProduct initMinusLocaleWithXPCEncoding:]
  -[SKProduct contentLengths]
  -[SKProduct introductoryPrice]
  -[SKProduct subscriptionGroupIdentifier]
  -[SKProduct discounts]
  -[SKProduct _setContentVersion:]
  -[SKProduct _setDownloadContentLengths:]
  -[SKProduct _setDownloadable:]
  -[SKProduct _setFamilyShareable:]
  -[SKProduct _setIntroductoryPrice:]
  -[SKProduct _setLocalizedDescription:]
  -[SKProduct _setProductIdentifier:]
  -[SKProduct _setSubscriptionGroupIdentifier:]
  -[SKProduct _setDiscounts:]


SKProductInternal : NSObject
  // instance methods
  -[SKProductInternal .cxx_destruct]


SKSpecifierWithSubtitleCell : PSTableCell
  // class methods
  +[SKSpecifierWithSubtitleCell cellStyle]

  // instance methods
  -[SKSpecifierWithSubtitleCell refreshCellContentsWithSpecifier:]


SKProductsRequest : SKRequest
 @property  <SKProductsRequestDelegate> *delegate

  // instance methods
  -[SKProductsRequest .cxx_destruct]
  -[SKProductsRequest _start]
  -[SKProductsRequest init]
  -[SKProductsRequest initWithProductIdentifiers:]
  -[SKProductsRequest _startWithCompletionHandler:]
  -[SKProductsRequest _newResponseForProducts:invalidIdentifiers:]


SKProductsResponse : NSObject
 @property  NSArray *products
 @property  NSArray *invalidProductIdentifiers

  // instance methods
  -[SKProductsResponse .cxx_destruct]
  -[SKProductsResponse init]
  -[SKProductsResponse products]
  -[SKProductsResponse invalidProductIdentifiers]
  -[SKProductsResponse _setInvalidIdentifiers:]
  -[SKProductsResponse _setProducts:]


SKProductsRequestInternal : NSObject
  // instance methods
  -[SKProductsRequestInternal .cxx_destruct]


SKProductsResponseInternal : NSObject
  // instance methods
  -[SKProductsResponseInternal .cxx_destruct]


SKStoreReviewViewController : UIViewController <SKRemoteReviewViewControllerDelegate>
 @property  SKInvocationQueueProxy<SKUIServiceReviewViewController> *serviceProxy
 @property  _UIAsyncInvocation *cancelRequest
 @property  SKRemoteReviewViewController *remoteViewController
 @property  NSString *reviewRequestToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKStoreReviewViewController remoteViewController]
  -[SKStoreReviewViewController .cxx_destruct]
  -[SKStoreReviewViewController viewDidLoad]
  -[SKStoreReviewViewController _addRemoteView]
  -[SKStoreReviewViewController setRemoteViewController:]
  -[SKStoreReviewViewController viewWillDisappear:]
  -[SKStoreReviewViewController serviceProxy]
  -[SKStoreReviewViewController dealloc]
  -[SKStoreReviewViewController cancelRequest]
  -[SKStoreReviewViewController setServiceProxy:]
  -[SKStoreReviewViewController _requestRemoteViewController]
  -[SKStoreReviewViewController reviewRequestToken]
  -[SKStoreReviewViewController _didFinishWithResult:error:]
  -[SKStoreReviewViewController setCancelRequest:]
  -[SKStoreReviewViewController remoteReviewViewControllerTerminatedWithError:]
  -[SKStoreReviewViewController initWithReviewRequestToken:]
  -[SKStoreReviewViewController setReviewRequestToken:]


SKAccountPageViewController : UIViewController <SKUIRedeemViewCameraOverrideDelegate, PSStateRestoration>
 @property  long long type
 @property  SKAccountPageViewController *preWarmedViewController
 @property  SKAccountPageViewController *presentingAccountPageViewController
 @property  AMSUIWebViewController *webViewController
 @property  <SKAccountPageViewControllerDelegate> *delegate
 @property  ACAccount *account
 @property  NSString *referrer
 @property  BOOL showAccountGlyph
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKAccountPageViewController isCommerceUIURL:completion:]

  // instance methods
  -[SKAccountPageViewController setAccount:]
  -[SKAccountPageViewController account]
  -[SKAccountPageViewController _setupNotificationCenter]
  -[SKAccountPageViewController setReferrer:]
  -[SKAccountPageViewController setType:]
  -[SKAccountPageViewController .cxx_destruct]
  -[SKAccountPageViewController didMoveToParentViewController:]
  -[SKAccountPageViewController viewDidLoad]
  -[SKAccountPageViewController _addRemoteView]
  -[SKAccountPageViewController setDelegate:]
  -[SKAccountPageViewController viewDidAppear:]
  -[SKAccountPageViewController _didFinishLoading]
  -[SKAccountPageViewController willMoveToParentViewController:]
  -[SKAccountPageViewController canBeShownFromSuspendedState]
  -[SKAccountPageViewController referrer]
  -[SKAccountPageViewController viewDidLayoutSubviews]
  -[SKAccountPageViewController viewWillAppear:]
  -[SKAccountPageViewController type]
  -[SKAccountPageViewController delegate]
  -[SKAccountPageViewController dealloc]
  -[SKAccountPageViewController loadView]
  -[SKAccountPageViewController loadWithCompletionBlock:]
  -[SKAccountPageViewController _setupNavigationItem]
  -[SKAccountPageViewController _requestRemoteViewController]
  -[SKAccountPageViewController webViewController]
  -[SKAccountPageViewController initWithAccountURL:]
  -[SKAccountPageViewController setShowAccountGlyph:]
  -[SKAccountPageViewController _dismissViewControllerWithResult:error:]
  -[SKAccountPageViewController _didPrepareWithResult:error:]
  -[SKAccountPageViewController _financeInterruptionResolved:]
  -[SKAccountPageViewController _overrideCreditCardPresentationWithCompletion:]
  -[SKAccountPageViewController _overrideRedeemCameraPerformAction:withObject:]
  -[SKAccountPageViewController _overrideRedeemCameraWithCompletion:]
  -[SKAccountPageViewController _setBridgedNavigationItemWithOptions:]
  -[SKAccountPageViewController _pushBridgedViewControllerAnimated:options:]
  -[SKAccountPageViewController _popBridgedViewControllersToIndex:]
  -[SKAccountPageViewController _presentBridgedViewController]
  -[SKAccountPageViewController _dismissBridgedViewController]
  -[SKAccountPageViewController _overrideScheme:]
  -[SKAccountPageViewController _beginURLParsing:]
  -[SKAccountPageViewController _handleLegacyViewWillAppear]
  -[SKAccountPageViewController presentingAccountPageViewController]
  -[SKAccountPageViewController _setupPreWarmedViewController]
  -[SKAccountPageViewController _setupRemoteViewController:]
  -[SKAccountPageViewController showAccountGlyph]
  -[SKAccountPageViewController _sk_applicationDidEnterBackground:]
  -[SKAccountPageViewController _sk_applicationWillEnterForeground:]
  -[SKAccountPageViewController _keyboardDidChangeNotification:]
  -[SKAccountPageViewController _keyboardWillChangeNotification:]
  -[SKAccountPageViewController _popAllBridgedNavigationViewControllers]
  -[SKAccountPageViewController _bridgedRightButtonPressed:]
  -[SKAccountPageViewController preWarmedViewController]
  -[SKAccountPageViewController setPresentingAccountPageViewController:]
  -[SKAccountPageViewController setPreWarmedViewController:]
  -[SKAccountPageViewController _indexForFirstBridgedNavigationViewController]
  -[SKAccountPageViewController _URLForBagKey:]
  -[SKAccountPageViewController _redeemURLFromRedeemConfigURL:]
  -[SKAccountPageViewController _setupLegacyContainer]
  -[SKAccountPageViewController _setupWebViewController]
  -[SKAccountPageViewController redeemCameraViewController:didFinishWithRedeem:]
  -[SKAccountPageViewController overrideRedeemOperationWithCode:cameraRecognized:completion:]
  -[SKAccountPageViewController prepareWithCompletionBlock:]
  -[SKAccountPageViewController setWebViewController:]


SKAccountPageBagProvider : NSObject
  // class methods
  +[SKAccountPageBagProvider sharedBag]


SKPromotedIAPGetVisibilityRequest : SKRequest
 @property  @? completionHandler
 @property  NSString *productId
 @property  NSString *bundleId

  // instance methods
  -[SKPromotedIAPGetVisibilityRequest productId]
  -[SKPromotedIAPGetVisibilityRequest bundleId]
  -[SKPromotedIAPGetVisibilityRequest setProductId:]
  -[SKPromotedIAPGetVisibilityRequest .cxx_destruct]
  -[SKPromotedIAPGetVisibilityRequest _start]
  -[SKPromotedIAPGetVisibilityRequest setBundleId:]
  -[SKPromotedIAPGetVisibilityRequest setCompletionHandler:]
  -[SKPromotedIAPGetVisibilityRequest completionHandler]
  -[SKPromotedIAPGetVisibilityRequest _handleReply:]
  -[SKPromotedIAPGetVisibilityRequest initWithProductId:completionHandler:]
  -[SKPromotedIAPGetVisibilityRequest initWithProductId:bundleId:completionHandler:]


SKOverlayConfiguration : NSObject
 @property  <ASOOverlayConfiguration> *_backing

  // instance methods
  -[SKOverlayConfiguration _backing]
  -[SKOverlayConfiguration .cxx_destruct]
  -[SKOverlayConfiguration _init]
  -[SKOverlayConfiguration initWithBacking:]


SKOverlayAppConfiguration : SKOverlayConfiguration
 @property  ASOOverlayAppConfiguration *_backing
 @property  NSString *appIdentifier
 @property  NSString *campaignToken
 @property  NSString *providerToken
 @property  NSString *customProductPageIdentifier
 @property  NSString *latestReleaseID
 @property  long long position
 @property  BOOL userDismissible

  // instance methods
  -[SKOverlayAppConfiguration appIdentifier]
  -[SKOverlayAppConfiguration setAppIdentifier:]
  -[SKOverlayAppConfiguration _init]
  -[SKOverlayAppConfiguration setPosition:]
  -[SKOverlayAppConfiguration position]
  -[SKOverlayAppConfiguration initWithBacking:]
  -[SKOverlayAppConfiguration initWithAppIdentifier:position:]
  -[SKOverlayAppConfiguration setCampaignToken:]
  -[SKOverlayAppConfiguration campaignToken]
  -[SKOverlayAppConfiguration setProviderToken:]
  -[SKOverlayAppConfiguration providerToken]
  -[SKOverlayAppConfiguration setLatestReleaseID:]
  -[SKOverlayAppConfiguration latestReleaseID]
  -[SKOverlayAppConfiguration setUserDismissible:]
  -[SKOverlayAppConfiguration userDismissible]
  -[SKOverlayAppConfiguration setAdditionalValue:forKey:]
  -[SKOverlayAppConfiguration additionalValueForKey:]
  -[SKOverlayAppConfiguration setCustomProductPageIdentifier:]
  -[SKOverlayAppConfiguration customProductPageIdentifier]


SKOverlayAppClipConfiguration : SKOverlayConfiguration
 @property  ASOOverlayAppClipConfiguration *_backing
 @property  NSString *campaignToken
 @property  NSString *providerToken
 @property  NSString *customProductPageIdentifier
 @property  NSString *latestReleaseID
 @property  long long position

  // instance methods
  -[SKOverlayAppClipConfiguration _init]
  -[SKOverlayAppClipConfiguration setPosition:]
  -[SKOverlayAppClipConfiguration position]
  -[SKOverlayAppClipConfiguration initWithBacking:]
  -[SKOverlayAppClipConfiguration setCampaignToken:]
  -[SKOverlayAppClipConfiguration campaignToken]
  -[SKOverlayAppClipConfiguration setProviderToken:]
  -[SKOverlayAppClipConfiguration providerToken]
  -[SKOverlayAppClipConfiguration setLatestReleaseID:]
  -[SKOverlayAppClipConfiguration latestReleaseID]
  -[SKOverlayAppClipConfiguration setAdditionalValue:forKey:]
  -[SKOverlayAppClipConfiguration additionalValueForKey:]
  -[SKOverlayAppClipConfiguration setCustomProductPageIdentifier:]
  -[SKOverlayAppClipConfiguration customProductPageIdentifier]
  -[SKOverlayAppClipConfiguration initWithPosition:]


SKPrivacyController : NSObject
  // class methods
  +[SKPrivacyController authorizationStatus]
  +[SKPrivacyController requestAuthorization:]
  +[SKPrivacyController _sharedCloudServiceStatusMonitor]
  +[SKPrivacyController _authorizationStatusFromUnderlyingAuthorizationStatus:]


SKRemoteEngagementPresenterViewController : UIViewController <SKEngagementViewServiceProtocol>
 @property  SKRemoteEngagementRemoteViewController *remoteViewController
 @property  NSObject<OS_dispatch_queue> *engagementPresentationQueue
 @property  NSObject<OS_dispatch_semaphore> *remoteViewControllerSemaphore
 @property  <SKEngagementPresenterProtocol> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKRemoteEngagementPresenterViewController remoteViewController]
  -[SKRemoteEngagementPresenterViewController .cxx_destruct]
  -[SKRemoteEngagementPresenterViewController viewDidLoad]
  -[SKRemoteEngagementPresenterViewController _addRemoteView]
  -[SKRemoteEngagementPresenterViewController setDelegate:]
  -[SKRemoteEngagementPresenterViewController init]
  -[SKRemoteEngagementPresenterViewController setRemoteViewController:]
  -[SKRemoteEngagementPresenterViewController delegate]
  -[SKRemoteEngagementPresenterViewController presentEngagementRequestData:clientBundleID:completion:]
  -[SKRemoteEngagementPresenterViewController _loadRemoteViewController]
  -[SKRemoteEngagementPresenterViewController remoteViewControllerSemaphore]
  -[SKRemoteEngagementPresenterViewController engagementPresentationQueue]


SKProductStorePromotionController : NSObject
  // class methods
  +[SKProductStorePromotionController defaultController]

  // instance methods
  -[SKProductStorePromotionController _fetchProductsForPromotionOrder:completionHandler:]
  -[SKProductStorePromotionController fetchStorePromotionVisibilityForProduct:completionHandler:]
  -[SKProductStorePromotionController updateStorePromotionVisibility:forProduct:completionHandler:]
  -[SKProductStorePromotionController fetchStorePromotionOrderWithCompletionHandler:]
  -[SKProductStorePromotionController updateStorePromotionOrder:completionHandler:]
  -[SKProductStorePromotionController _clearPromotionInfo]


SKTermsPageViewController : UIViewController <UINavigationBarDelegate>
 @property  <SKTermsPageViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKTermsPageViewController .cxx_destruct]
  -[SKTermsPageViewController viewDidLoad]
  -[SKTermsPageViewController setDelegate:]
  -[SKTermsPageViewController init]
  -[SKTermsPageViewController _dismissViewController]
  -[SKTermsPageViewController viewDidLayoutSubviews]
  -[SKTermsPageViewController edgesForExtendedLayout]
  -[SKTermsPageViewController delegate]
  -[SKTermsPageViewController loadView]
  -[SKTermsPageViewController positionForBar:]
  -[SKTermsPageViewController _dismissViewControllerAnimated:]
  -[SKTermsPageViewController initWithTerms:]
  -[SKTermsPageViewController _markupTermsWithHTML:]
  -[SKTermsPageViewController _loadSubviews]
  -[SKTermsPageViewController _dismissViewControllerAnimated:withAcceptance:]
  -[SKTermsPageViewController _buttonAccept:]
  -[SKTermsPageViewController _buttonDecline:]


SKCloudServiceSetupRemoteViewController : _UIRemoteViewController <SKCloudServiceSetupExtensionClientInterface>
 @property  <SKCloudServiceSetupRemoteViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKCloudServiceSetupRemoteViewController exportedInterface]
  +[SKCloudServiceSetupRemoteViewController serviceViewControllerInterface]

  // instance methods
  -[SKCloudServiceSetupRemoteViewController .cxx_destruct]
  -[SKCloudServiceSetupRemoteViewController setDelegate:]
  -[SKCloudServiceSetupRemoteViewController delegate]
  -[SKCloudServiceSetupRemoteViewController overrideCreditCardPresentationWithCompletion:]
  -[SKCloudServiceSetupRemoteViewController overrideRedeemCameraPerformAction:withObject:]
  -[SKCloudServiceSetupRemoteViewController didFinishLoadingWithSuccess:error:]
  -[SKCloudServiceSetupRemoteViewController dismissCloudServiceSetupViewControllerAnimated:completion:]
  -[SKCloudServiceSetupRemoteViewController dismissSafariViewControllerAnimated:completion:]
  -[SKCloudServiceSetupRemoteViewController presentSafariViewControllerWithURL:animated:completion:]


SKRequest : NSObject
 @property  SKPaymentQueueClient *paymentQueueClient
 @property  <SKRequestDelegate> *delegate

  // instance methods
  -[SKRequest .cxx_destruct]
  -[SKRequest _start]
  -[SKRequest setPaymentQueueClient:]
  -[SKRequest setDelegate:]
  -[SKRequest init]
  -[SKRequest _shutdownRequest]
  -[SKRequest cancel]
  -[SKRequest _endBackgroundTask]
  -[SKRequest _beginBackgroundTask]
  -[SKRequest delegate]
  -[SKRequest start]
  -[SKRequest paymentQueueClient]
  -[SKRequest _startWithMessage:replyBlock:]


SKRequestInternal : NSObject
  // instance methods
  -[SKRequestInternal .cxx_destruct]
  -[SKRequestInternal init]
  -[SKRequestInternal dealloc]


SKPromotedIAPSetOrderRequest : SKRequest
 @property  @? completionHandler
 @property  NSArray *order
 @property  NSString *bundleId

  // instance methods
  -[SKPromotedIAPSetOrderRequest bundleId]
  -[SKPromotedIAPSetOrderRequest .cxx_destruct]
  -[SKPromotedIAPSetOrderRequest _start]
  -[SKPromotedIAPSetOrderRequest setOrder:]
  -[SKPromotedIAPSetOrderRequest setBundleId:]
  -[SKPromotedIAPSetOrderRequest setCompletionHandler:]
  -[SKPromotedIAPSetOrderRequest completionHandler]
  -[SKPromotedIAPSetOrderRequest order]
  -[SKPromotedIAPSetOrderRequest _handleReply:]
  -[SKPromotedIAPSetOrderRequest initWithOrder:completionHandler:]
  -[SKPromotedIAPSetOrderRequest initWithOrder:bundleId:completionHandler:]


SKArcadeService : NSObject
  // class methods
  +[SKArcadeService registerArcadeAppWithRandomFromLib:randomFromLibLength:resultHandler:]
  +[SKArcadeService arcadeSubscriptionStatusWithNonce:resultHandler:]
  +[SKArcadeService repairArcadeApp]


SKAdNetwork : NSObject
  // class methods
  +[SKAdNetwork updateConversionValue:]
  +[SKAdNetwork startImpression:completionHandler:]
  +[SKAdNetwork endImpression:completionHandler:]
  +[SKAdNetwork registerAppForAdNetworkAttribution]
  +[SKAdNetwork updatePostbackConversionValue:completionHandler:]


SKStoreRemoteViewController : _UIRemoteViewController <SKStoreExtensionClientInterface>
 @property  <SKStoreRemoteViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKStoreRemoteViewController exportedInterface]
  +[SKStoreRemoteViewController serviceViewControllerInterface]

  // instance methods
  -[SKStoreRemoteViewController viewServiceDidTerminateWithError:]
  -[SKStoreRemoteViewController .cxx_destruct]
  -[SKStoreRemoteViewController setDelegate:]
  -[SKStoreRemoteViewController dismissViewControllerAnimated:completion:]
  -[SKStoreRemoteViewController delegate]
  -[SKStoreRemoteViewController setNeedsTabSelection]
  -[SKStoreRemoteViewController presentRequestedViewControllerWithIdentifier:]


SKEntitlementChecker : NSObject
  // class methods
  +[SKEntitlementChecker checkForEntitlement:]


SKReceiptRefreshRequest : SKRequest
 @property  NSDictionary *receiptProperties

  // instance methods
  -[SKReceiptRefreshRequest .cxx_destruct]
  -[SKReceiptRefreshRequest _start]
  -[SKReceiptRefreshRequest _handleReply:]
  -[SKReceiptRefreshRequest _wantsExpired]
  -[SKReceiptRefreshRequest _wantsRevoked]
  -[SKReceiptRefreshRequest _wantsVPP]
  -[SKReceiptRefreshRequest _requestCompletedWithError:]
  -[SKReceiptRefreshRequest initWithReceiptProperties:]
  -[SKReceiptRefreshRequest receiptProperties]


SKHandleInvalidReceiptRequest : SKRequest
  // instance methods
  -[SKHandleInvalidReceiptRequest _start]


SKWeakContainer : NSObject
 @property  UIView *scrollingView
 @property  UIView *trackingView
 @property  BOOL wasOnScreen

  // instance methods
  -[SKWeakContainer .cxx_destruct]
  -[SKWeakContainer trackingView]
  -[SKWeakContainer setTrackingView:]
  -[SKWeakContainer scrollingView]
  -[SKWeakContainer setScrollingView:]
  -[SKWeakContainer wasOnScreen]
  -[SKWeakContainer setWasOnScreen:]


SKScrollDetector : NSObject
 @property  NSMutableArray *subscribedScrollers
 @property  <SKScreenTrackingDelegate> *screenTrakingDelegate

  // instance methods
  -[SKScrollDetector .cxx_destruct]
  -[SKScrollDetector init]
  -[SKScrollDetector initWithDelegate:]
  -[SKScrollDetector dealloc]
  -[SKScrollDetector observeValueForKeyPath:ofObject:change:context:]
  -[SKScrollDetector subscribedScrollers]
  -[SKScrollDetector screenTrakingDelegate]
  -[SKScrollDetector findAndListenForScrollingOfView:]
  -[SKScrollDetector stopListeningForScrollingOfView:]
  -[SKScrollDetector setScreenTrakingDelegate:]
  -[SKScrollDetector setSubscribedScrollers:]


SKWeakReference : NSObject
 @property  id object

  // instance methods
  -[SKWeakReference initWithObject:]
  -[SKWeakReference .cxx_destruct]
  -[SKWeakReference isEqual:]
  -[SKWeakReference object]
  -[SKWeakReference setObject:]


SKPromotedIAPGetInfoInternalRequest : SKRequest
 @property  @? completionHandler
 @property  NSString *bundleId

  // instance methods
  -[SKPromotedIAPGetInfoInternalRequest bundleId]
  -[SKPromotedIAPGetInfoInternalRequest .cxx_destruct]
  -[SKPromotedIAPGetInfoInternalRequest _start]
  -[SKPromotedIAPGetInfoInternalRequest setBundleId:]
  -[SKPromotedIAPGetInfoInternalRequest setCompletionHandler:]
  -[SKPromotedIAPGetInfoInternalRequest completionHandler]
  -[SKPromotedIAPGetInfoInternalRequest _handleReply:]
  -[SKPromotedIAPGetInfoInternalRequest initWithBundleId:completionHandler:]


SKPaymentAppleIDAuthorizationRequest : NSObject <NSCopying>
 @property  NSString *clientIdentifier
 @property  NSString *teamIdentifier
 @property  NSString *serviceIdentifier

  // instance methods
  -[SKPaymentAppleIDAuthorizationRequest setServiceIdentifier:]
  -[SKPaymentAppleIDAuthorizationRequest serviceIdentifier]
  -[SKPaymentAppleIDAuthorizationRequest .cxx_destruct]
  -[SKPaymentAppleIDAuthorizationRequest teamIdentifier]
  -[SKPaymentAppleIDAuthorizationRequest clientIdentifier]
  -[SKPaymentAppleIDAuthorizationRequest initWithClientIdentifier:teamIdentifier:]
  -[SKPaymentAppleIDAuthorizationRequest copyWithZone:]


SKPaymentTransactionAuthorizationResponse : NSObject
 @property  AKAuthorizationCredential *authorizationAppleIDCredential
 @property  NSError *accountSignupError

  // instance methods
  -[SKPaymentTransactionAuthorizationResponse .cxx_destruct]
  -[SKPaymentTransactionAuthorizationResponse accountSignupError]
  -[SKPaymentTransactionAuthorizationResponse authorizationAppleIDCredential]
  -[SKPaymentTransactionAuthorizationResponse initWithAuthorizationCredential:error:]


SKCloudServiceSetupConfiguration : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *applicationIdentifier
 @property  NSString *applicationVersion
 @property  BOOL targetsFinanceApplication
 @property  BOOL forPublicSDK

  // class methods
  +[SKCloudServiceSetupConfiguration supportsSecureCoding]

  // instance methods
  -[SKCloudServiceSetupConfiguration applicationIdentifier]
  -[SKCloudServiceSetupConfiguration applicationVersion]
  -[SKCloudServiceSetupConfiguration setApplicationIdentifier:]
  -[SKCloudServiceSetupConfiguration initWithCoder:]
  -[SKCloudServiceSetupConfiguration .cxx_destruct]
  -[SKCloudServiceSetupConfiguration init]
  -[SKCloudServiceSetupConfiguration isEqual:]
  -[SKCloudServiceSetupConfiguration copyWithZone:]
  -[SKCloudServiceSetupConfiguration encodeWithCoder:]
  -[SKCloudServiceSetupConfiguration setApplicationVersion:]
  -[SKCloudServiceSetupConfiguration targetsFinanceApplication]
  -[SKCloudServiceSetupConfiguration setTargetsFinanceApplication:]
  -[SKCloudServiceSetupConfiguration forPublicSDK]
  -[SKCloudServiceSetupConfiguration setForPublicSDK:]


SKXPCConnection : NSObject
 @property  @? disconnectBlock
 @property  @? messageBlock

  // instance methods
  -[SKXPCConnection disconnectBlock]
  -[SKXPCConnection initWithXPCConnection:]
  -[SKXPCConnection setDisconnectBlock:]
  -[SKXPCConnection initWithServiceName:]
  -[SKXPCConnection .cxx_destruct]
  -[SKXPCConnection _reloadEventHandler]
  -[SKXPCConnection createXPCEndpoint]
  -[SKXPCConnection sendMessage:]
  -[SKXPCConnection init]
  -[SKXPCConnection sendSynchronousMessage:withReply:]
  -[SKXPCConnection setMessageBlock:]
  -[SKXPCConnection messageBlock]
  -[SKXPCConnection sendMessage:withReply:]
  -[SKXPCConnection _initSKXPCConnection]


SKObservableView : UIView
 @property  <SKObservableViewDelegate> *delegate

  // instance methods
  -[SKObservableView .cxx_destruct]
  -[SKObservableView setDelegate:]
  -[SKObservableView setAlpha:]
  -[SKObservableView delegate]
  -[SKObservableView setHidden:]


SKStoreProductViewController : UIViewController <SKScreenTrackingDelegate, UIViewControllerTransitioningDelegate, SKRemoteDismissingViewController, SKObservableViewDelegate>
 @property  NSString *additionalBuyParameters
 @property  NSString *affiliateIdentifier
 @property  NSString *clientIdentifier
 @property  NSString *hostBundleIdentifier
 @property  NSDictionary *scriptContextDictionary
 @property  long long productPageStyle
 @property  NSString *usageContext
 @property  BOOL askToBuy
 @property  BOOL showsStoreButton
 @property  NSString *cancelButtonTitle
 @property  NSString *rightBarButtonTitle
 @property  BOOL showsRightBarButton
 @property  NSString *promptString
 @property  BOOL automaticallyDismisses
 @property  <SKStoreProductViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKStoreProductViewController _defaultIXStoreSheetDictionary]
  +[SKStoreProductViewController _validateURL:withSheetInfo:completionBlock:]
  +[SKStoreProductViewController getCanLoadURL:withURLBag:completionBlock:]
  +[SKStoreProductViewController getCanLoadURL:completionBlock:]

  // instance methods
  -[SKStoreProductViewController preferredStatusBarStyle]
  -[SKStoreProductViewController animationControllerForDismissedController:]
  -[SKStoreProductViewController modalTransitionStyle]
  -[SKStoreProductViewController viewWillLayoutSubviews]
  -[SKStoreProductViewController _willBecomeContentViewControllerOfPopover:]
  -[SKStoreProductViewController .cxx_destruct]
  -[SKStoreProductViewController _addRemoteView]
  -[SKStoreProductViewController setDelegate:]
  -[SKStoreProductViewController viewDidAppear:]
  -[SKStoreProductViewController initWithNibName:bundle:]
  -[SKStoreProductViewController _resetRemoteViewController]
  -[SKStoreProductViewController hostBundleIdentifier]
  -[SKStoreProductViewController shouldAutorotate]
  -[SKStoreProductViewController rightBarButtonTitle]
  -[SKStoreProductViewController setRightBarButtonTitle:]
  -[SKStoreProductViewController willMoveToParentViewController:]
  -[SKStoreProductViewController _didFinish]
  -[SKStoreProductViewController clientIdentifier]
  -[SKStoreProductViewController loadProductWithParameters:completionBlock:]
  -[SKStoreProductViewController dismissViewControllerAnimated:completion:]
  -[SKStoreProductViewController setParentViewController:]
  -[SKStoreProductViewController viewWillDisappear:]
  -[SKStoreProductViewController askToBuy]
  -[SKStoreProductViewController finishImmediately]
  -[SKStoreProductViewController modalPresentationStyle]
  -[SKStoreProductViewController viewWillAppear:]
  -[SKStoreProductViewController delegate]
  -[SKStoreProductViewController dealloc]
  -[SKStoreProductViewController affiliateIdentifier]
  -[SKStoreProductViewController _preferredStatusBarVisibility]
  -[SKStoreProductViewController setHostBundleIdentifier:]
  -[SKStoreProductViewController setAffiliateIdentifier:]
  -[SKStoreProductViewController loadView]
  -[SKStoreProductViewController supportedInterfaceOrientations]
  -[SKStoreProductViewController viewDidDisappear:]
  -[SKStoreProductViewController setClientIdentifier:]
  -[SKStoreProductViewController _isPeeking]
  -[SKStoreProductViewController cancelButtonTitle]
  -[SKStoreProductViewController _requestRemoteViewController]
  -[SKStoreProductViewController loadProductWithURL:completionBlock:]
  -[SKStoreProductViewController dismissRemoteViewControllerWithCompletion:]
  -[SKStoreProductViewController sk_didBecomeOnScreen:]
  -[SKStoreProductViewController sk_didBecomeOffScreen:]
  -[SKStoreProductViewController didChangeAlpha:]
  -[SKStoreProductViewController didChangeHidden]
  -[SKStoreProductViewController setAdditionalBuyParameters:]
  -[SKStoreProductViewController setProductPageStyle:]
  -[SKStoreProductViewController setScriptContextDictionary:]
  -[SKStoreProductViewController setShowsStoreButton:]
  -[SKStoreProductViewController setAskToBuy:]
  -[SKStoreProductViewController setCancelButtonTitle:]
  -[SKStoreProductViewController setShowsRightBarButton:]
  -[SKStoreProductViewController setPromptString:]
  -[SKStoreProductViewController setUsageContext:]
  -[SKStoreProductViewController _viewTapped:]
  -[SKStoreProductViewController _configureForFullScreenPresentationOrThrowException]
  -[SKStoreProductViewController setPresentationStyleIfNeeded]
  -[SKStoreProductViewController setNoClippingIfNeeded]
  -[SKStoreProductViewController _forceOrientationBackToSupportedOrientation]
  -[SKStoreProductViewController _throwUnsupportedPresentationException]
  -[SKStoreProductViewController _setLoadBlock:]
  -[SKStoreProductViewController productPageStyle]
  -[SKStoreProductViewController _fireLoadBlockBeforeFinishing]
  -[SKStoreProductViewController _loadDidFinishWithResult:error:]
  -[SKStoreProductViewController loadProductWithPageDictionary:completionBlock:]
  -[SKStoreProductViewController loadProductWithRequest:completionBlock:]
  -[SKStoreProductViewController _didFinishWithResult:]
  -[SKStoreProductViewController _didFinishDismissal]
  -[SKStoreProductViewController _presentPageWithRequest:animated:]
  -[SKStoreProductViewController additionalBuyParameters]
  -[SKStoreProductViewController scriptContextDictionary]
  -[SKStoreProductViewController usageContext]
  -[SKStoreProductViewController showsStoreButton]
  -[SKStoreProductViewController showsRightBarButton]
  -[SKStoreProductViewController promptString]
  -[SKStoreProductViewController automaticallyDismisses]
  -[SKStoreProductViewController setAutomaticallyDismisses:]


SKEngagementRemoteViewTask : NSObject <SKEngagementPresenterProtocol>
 @property  NSObject<OS_dispatch_group> *dispatchGroup
 @property  NSError *error
 @property  SKRemoteEngagementPresenterViewController *remoteViewController
 @property  NSData *requestData
 @property  NSData *resultData
 @property  NSDictionary *result
 @property  UIViewController *viewController
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  UIWindowScene *scene
 @property  NSString *clientBundleID
 @property  @? completion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKEngagementRemoteViewTask setScene:]
  -[SKEngagementRemoteViewTask requestData]
  -[SKEngagementRemoteViewTask completion]
  -[SKEngagementRemoteViewTask setCompletion:]
  -[SKEngagementRemoteViewTask viewController]
  -[SKEngagementRemoteViewTask remoteViewController]
  -[SKEngagementRemoteViewTask .cxx_destruct]
  -[SKEngagementRemoteViewTask scene]
  -[SKEngagementRemoteViewTask setDispatchGroup:]
  -[SKEngagementRemoteViewTask clientBundleID]
  -[SKEngagementRemoteViewTask _presentViewController:]
  -[SKEngagementRemoteViewTask resultData]
  -[SKEngagementRemoteViewTask result]
  -[SKEngagementRemoteViewTask setRemoteViewController:]
  -[SKEngagementRemoteViewTask presentEngagement]
  -[SKEngagementRemoteViewTask setRequestData:]
  -[SKEngagementRemoteViewTask workQueue]
  -[SKEngagementRemoteViewTask setResult:]
  -[SKEngagementRemoteViewTask dispatchGroup]
  -[SKEngagementRemoteViewTask setViewController:]
  -[SKEngagementRemoteViewTask _unblock]
  -[SKEngagementRemoteViewTask setError:]
  -[SKEngagementRemoteViewTask error]
  -[SKEngagementRemoteViewTask setClientBundleID:]
  -[SKEngagementRemoteViewTask setResultData:]
  -[SKEngagementRemoteViewTask preferredContentSizeDidChange:]
  -[SKEngagementRemoteViewTask engagementTaskDidFinishWithResult:resultData:error:completion:]
  -[SKEngagementRemoteViewTask initWithRequestData:presentingViewController:windowScene:]


SKProductPageExtension : UIViewController <SKProductPageExtensionServiceInterface>
 @property  BOOL showsStoreButton
 @property  NSString *cancelButtonTitle
 @property  NSString *rightBarButtonTitle
 @property  BOOL showsRightBarButton
 @property  NSString *promptString
 @property  BOOL askToBuy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKProductPageExtension _remoteViewControllerInterface]
  +[SKProductPageExtension _exportedInterface]
  +[SKProductPageExtension clientInterface]
  +[SKProductPageExtension serviceInterface]

  // instance methods
  -[SKProductPageExtension cancelButtonPressed:]
  -[SKProductPageExtension .cxx_destruct]
  -[SKProductPageExtension rightBarButtonTitle]
  -[SKProductPageExtension setRightBarButtonTitle:]
  -[SKProductPageExtension setPreview:]
  -[SKProductPageExtension askToBuy]
  -[SKProductPageExtension loadDidFinish]
  -[SKProductPageExtension cancelButtonTitle]
  -[SKProductPageExtension setShowsStoreButton:]
  -[SKProductPageExtension setAskToBuy:]
  -[SKProductPageExtension setCancelButtonTitle:]
  -[SKProductPageExtension setShowsRightBarButton:]
  -[SKProductPageExtension setPromptString:]
  -[SKProductPageExtension setVisibleInClientWindow:]
  -[SKProductPageExtension setUsageContext:]
  -[SKProductPageExtension showsStoreButton]
  -[SKProductPageExtension showsRightBarButton]
  -[SKProductPageExtension promptString]
  -[SKProductPageExtension finishWithResult:completion:]
  -[SKProductPageExtension _createNavigationItem]
  -[SKProductPageExtension setupWithCustomNavigationItem:promptString:askToBuy:]
  -[SKProductPageExtension lookupItemDidLoad:parameters:]
  -[SKProductPageExtension setupWithClientBundleID:bagType:]
  -[SKProductPageExtension clientLookupItemDidLoad:parameters:]
  -[SKProductPageExtension rightBarButtonPressed:]
  -[SKProductPageExtension storeButtonPressed:]
  -[SKProductPageExtension setupWithClientBundleID:]


SKCloudServiceSetupExtension : NSObject
  // class methods
  +[SKCloudServiceSetupExtension clientInterface]
  +[SKCloudServiceSetupExtension serviceInterface]


SKStorefront : NSObject
 @property  NSString *countryCode
 @property  NSString *identifier

  // instance methods
  -[SKStorefront countryCode]
  -[SKStorefront .cxx_destruct]
  -[SKStorefront identifier]
  -[SKStorefront _initWithIdentifier:countryCode:]


SKRemoteProductViewController : _UIRemoteViewController <SKUIClientProductPageViewController>
 @property  SKStoreProductViewController *productViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKRemoteProductViewController exportedInterface]
  +[SKRemoteProductViewController serviceViewControllerInterface]

  // instance methods
  -[SKRemoteProductViewController shouldAutorotateToInterfaceOrientation:]
  -[SKRemoteProductViewController setStatusBarStyle:animated:]
  -[SKRemoteProductViewController viewServiceDidTerminateWithError:]
  -[SKRemoteProductViewController .cxx_destruct]
  -[SKRemoteProductViewController didFinish]
  -[SKRemoteProductViewController setStatusBarHidden:withAnimation:]
  -[SKRemoteProductViewController setProductViewController:]
  -[SKRemoteProductViewController didFinishWithResult:]
  -[SKRemoteProductViewController didFinishDismissal]
  -[SKRemoteProductViewController didReceiveTitle:]
  -[SKRemoteProductViewController loadDidFinishWithResult:error:]
  -[SKRemoteProductViewController presentPageWithRequest:animated:]
  -[SKRemoteProductViewController promptForStarRating]
  -[SKRemoteProductViewController productViewController]


SKInternalProductStorePromotionController : NSObject
  // class methods
  +[SKInternalProductStorePromotionController defaultController]

  // instance methods
  -[SKInternalProductStorePromotionController fetchOverridesForVisibilityAndOrderForApplicationBundleIdentifier:completionHandler:]


SKInvocationQueueProxy : NSObject
 @property  id invocationTarget

  // instance methods
  -[SKInvocationQueueProxy methodSignatureForSelector:]
  -[SKInvocationQueueProxy .cxx_destruct]
  -[SKInvocationQueueProxy initWithProtocol:]
  -[SKInvocationQueueProxy invocationTarget]
  -[SKInvocationQueueProxy forwardInvocation:]
  -[SKInvocationQueueProxy setInvocationTarget:]


SKCloudServiceSetupViewController : UIViewController <SFSafariViewControllerDelegate, SKCloudServiceSetupRemoteViewControllerDelegate>
 @property  SKCloudServiceSetupConfiguration *configuration
 @property  <SKCloudServiceSetupViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKCloudServiceSetupViewController initWithCoder:]
  -[SKCloudServiceSetupViewController configuration]
  -[SKCloudServiceSetupViewController .cxx_destruct]
  -[SKCloudServiceSetupViewController viewDidLoad]
  -[SKCloudServiceSetupViewController loadWithOptions:completionHandler:]
  -[SKCloudServiceSetupViewController setDelegate:]
  -[SKCloudServiceSetupViewController viewDidAppear:]
  -[SKCloudServiceSetupViewController initWithNibName:bundle:]
  -[SKCloudServiceSetupViewController setModalInPresentation:]
  -[SKCloudServiceSetupViewController viewWillDisappear:]
  -[SKCloudServiceSetupViewController viewDidLayoutSubviews]
  -[SKCloudServiceSetupViewController initWithConfiguration:]
  -[SKCloudServiceSetupViewController delegate]
  -[SKCloudServiceSetupViewController isModalInPresentation]
  -[SKCloudServiceSetupViewController dealloc]
  -[SKCloudServiceSetupViewController _requestRemoteViewController]
  -[SKCloudServiceSetupViewController safariViewControllerDidFinish:]
  -[SKCloudServiceSetupViewController safariViewController:didCompleteInitialLoad:]
  -[SKCloudServiceSetupViewController overrideCreditCardPresentationWithCompletion:]
  -[SKCloudServiceSetupViewController overrideRedeemCameraPerformAction:withObject:]
  -[SKCloudServiceSetupViewController cloudServiceSetupRemoteViewController:didFinishLoadingWithSuccess:error:]
  -[SKCloudServiceSetupViewController cloudServiceSetupRemoteViewController:requestsDismissalWithAnimation:completion:]
  -[SKCloudServiceSetupViewController cloudServiceSetupRemoteViewController:requestsDismissingSafariViewControllerAnimated:completion:]
  -[SKCloudServiceSetupViewController cloudServiceSetupRemoteViewController:requestsPresentingSafariViewControllerWithURL:animated:completion:]
  -[SKCloudServiceSetupViewController handleSafariScriptURL:]
  -[SKCloudServiceSetupViewController reloadWithContext:]
  -[SKCloudServiceSetupViewController _dismissCloudServiceSetupViewControllerWithAnimation:completion:]
  -[SKCloudServiceSetupViewController _errorWithCode:errorDescriptionLocalizationKey:]
  -[SKCloudServiceSetupViewController _reportErrorForMissingSystemMusicApplication]
  -[SKCloudServiceSetupViewController _reloadWithActiveCloudServiceSetupReloadContext]
  -[SKCloudServiceSetupViewController _remoteViewControllerExtensionWasInterrupted]
  -[SKCloudServiceSetupViewController _didReceiveRemoteViewController:]


SKServiceProxy : NSObject
  // class methods
  +[SKServiceProxy serviceProxy]
  +[SKServiceProxy inAppServiceInterface]
  +[SKServiceProxy inAppClientInterface]

  // instance methods
  -[SKServiceProxy objectProxyWithErrorHandler:]
  -[SKServiceProxy .cxx_destruct]
  -[SKServiceProxy init]
  -[SKServiceProxy serviceConnection]
  -[SKServiceProxy _serviceConnectionInvalidated]
  -[SKServiceProxy inAppServiceWithErrorHandler:]
  -[SKServiceProxy inAppService]


SKStoreReviewPresentationWindow : UIApplicationRotationFollowingWindow
  // instance methods
  -[SKStoreReviewPresentationWindow presentViewController:animated:completion:]
  -[SKStoreReviewPresentationWindow init]
  -[SKStoreReviewPresentationWindow _presentationViewController]
  -[SKStoreReviewPresentationWindow isInternalWindow]


SKStoreReviewController : NSObject
  // class methods
  +[SKStoreReviewController requestReviewInScene:]
  +[SKStoreReviewController convertInterfaceOrientation:]
  +[SKStoreReviewController requestReviewViaDirectInjectionFlowInScene:requestToken:]
  +[SKStoreReviewController requestReview]


SKStorePageRequest : NSObject
 @property  long long productPageStyle
 @property  NSDictionary *productParameters
 @property  NSURL *productURL

  // instance methods
  -[SKStorePageRequest .cxx_destruct]
  -[SKStorePageRequest setProductURL:]
  -[SKStorePageRequest productURL]
  -[SKStorePageRequest copyXPCEncoding]
  -[SKStorePageRequest initWithXPCEncoding:]
  -[SKStorePageRequest setProductPageStyle:]
  -[SKStorePageRequest productPageStyle]
  -[SKStorePageRequest productParameters]
  -[SKStorePageRequest setProductParameters:]


SKPaymentDiscountInternal : NSObject
  // instance methods
  -[SKPaymentDiscountInternal .cxx_destruct]


SKPaymentDiscount : NSObject
 @property  NSString *identifier
 @property  NSString *keyIdentifier
 @property  NSUUID *nonce
 @property  NSString *signature
 @property  NSNumber *timestamp

  // instance methods
  -[SKPaymentDiscount .cxx_destruct]
  -[SKPaymentDiscount keyIdentifier]
  -[SKPaymentDiscount identifier]
  -[SKPaymentDiscount signature]
  -[SKPaymentDiscount timestamp]
  -[SKPaymentDiscount nonce]
  -[SKPaymentDiscount initWithIdentifier:keyIdentifier:nonce:signature:timestamp:]


SKPaymentQueueClient : NSObject <NSCopying>
 @property  BOOL allowsBootstrapCellularData
 @property  NSString *productsRequestBundleIdentifier
 @property  NSString *bundleIdentifier
 @property  NSString *bundleVersion
 @property  <SKPaymentQueueClientDelegate> *delegate
 @property  long long environmentType
 @property  BOOL hidesConfirmationDialogs
 @property  BOOL ignoresInAppPurchaseRestriction
 @property  NSString *receiptDirectoryPath
 @property  BOOL requiresAuthenticationForPayment
 @property  NSNumber *storeExternalVersion
 @property  NSNumber *storeItemIdentifier
 @property  NSString *vendorIdentifier

  // instance methods
  -[SKPaymentQueueClient bundleVersion]
  -[SKPaymentQueueClient plist]
  -[SKPaymentQueueClient setBundleVersion:]
  -[SKPaymentQueueClient bundleIdentifier]
  -[SKPaymentQueueClient setAllowsBootstrapCellularData:]
  -[SKPaymentQueueClient .cxx_destruct]
  -[SKPaymentQueueClient setReceiptDirectoryPath:]
  -[SKPaymentQueueClient allowsBootstrapCellularData]
  -[SKPaymentQueueClient setBundleIdentifier:]
  -[SKPaymentQueueClient setDelegate:]
  -[SKPaymentQueueClient vendorIdentifier]
  -[SKPaymentQueueClient setVendorIdentifier:]
  -[SKPaymentQueueClient storeItemIdentifier]
  -[SKPaymentQueueClient copyXPCEncoding]
  -[SKPaymentQueueClient delegate]
  -[SKPaymentQueueClient storeExternalVersion]
  -[SKPaymentQueueClient setStoreItemIdentifier:]
  -[SKPaymentQueueClient setStoreExternalVersion:]
  -[SKPaymentQueueClient copyWithZone:]
  -[SKPaymentQueueClient initWithXPCEncoding:]
  -[SKPaymentQueueClient setProductsRequestBundleIdentifier:]
  -[SKPaymentQueueClient hidesConfirmationDialogs]
  -[SKPaymentQueueClient ignoresInAppPurchaseRestriction]
  -[SKPaymentQueueClient requiresAuthenticationForPayment]
  -[SKPaymentQueueClient receiptDirectoryPath]
  -[SKPaymentQueueClient setEnvironmentType:]
  -[SKPaymentQueueClient setHidesConfirmationDialogs:]
  -[SKPaymentQueueClient setIgnoresInAppPurchaseRestriction:]
  -[SKPaymentQueueClient setRequiresAuthenticationForPayment:]
  -[SKPaymentQueueClient productsRequestBundleIdentifier]
  -[SKPaymentQueueClient environmentType]


SKComposeReviewViewController : UIViewController
 @property  <SKComposeReviewDelegate> *delegate

  // instance methods
  -[SKComposeReviewViewController .cxx_destruct]
  -[SKComposeReviewViewController _addRemoteView]
  -[SKComposeReviewViewController setDelegate:]
  -[SKComposeReviewViewController viewDidAppear:]
  -[SKComposeReviewViewController initWithNibName:bundle:]
  -[SKComposeReviewViewController delegate]
  -[SKComposeReviewViewController dealloc]
  -[SKComposeReviewViewController loadView]
  -[SKComposeReviewViewController _requestRemoteViewController]
  -[SKComposeReviewViewController _didPrepareWithResult:error:]
  -[SKComposeReviewViewController _didFinishWithResult:error:]
  -[SKComposeReviewViewController prepareWithCompletionBlock:]
  -[SKComposeReviewViewController initWithCompositionURL:]
  -[SKComposeReviewViewController _tearDownAfterError:]


SKPurchaseIntent : NSObject
  // instance methods
  -[SKPurchaseIntent send:]
  -[SKPurchaseIntent .cxx_destruct]
  -[SKPurchaseIntent initWithBundleId:productIdentifier:appName:productName:]
  -[SKPurchaseIntent initWithBundleId:productIdentifier:]


SKRemoteReviewViewController : _UIRemoteViewController <SKUIClientReviewViewController>
 @property  <SKRemoteReviewViewControllerDelegate> *delegate
 @property  SKStoreReviewViewController *reviewViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKRemoteReviewViewController exportedInterface]
  +[SKRemoteReviewViewController serviceViewControllerInterface]

  // instance methods
  -[SKRemoteReviewViewController viewServiceDidTerminateWithError:]
  -[SKRemoteReviewViewController .cxx_destruct]
  -[SKRemoteReviewViewController setDelegate:]
  -[SKRemoteReviewViewController delegate]
  -[SKRemoteReviewViewController setReviewViewController:]
  -[SKRemoteReviewViewController reviewViewController]
  -[SKRemoteReviewViewController didFinishWithResult:error:]


SKRemoteComposeReviewViewController : _UIRemoteViewController <SKUIClientComposeReviewViewController>
 @property  SKComposeReviewViewController *composeReviewViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKRemoteComposeReviewViewController exportedInterface]
  +[SKRemoteComposeReviewViewController serviceViewControllerInterface]

  // instance methods
  -[SKRemoteComposeReviewViewController shouldAutorotateToInterfaceOrientation:]
  -[SKRemoteComposeReviewViewController viewServiceDidTerminateWithError:]
  -[SKRemoteComposeReviewViewController .cxx_destruct]
  -[SKRemoteComposeReviewViewController initWithNibName:bundle:]
  -[SKRemoteComposeReviewViewController dealloc]
  -[SKRemoteComposeReviewViewController didPrepareWithResult:error:]
  -[SKRemoteComposeReviewViewController promptForStarRating]
  -[SKRemoteComposeReviewViewController setComposeReviewViewController:]
  -[SKRemoteComposeReviewViewController didFinishWithResult:error:]
  -[SKRemoteComposeReviewViewController _keyboardVisibilityDidChangeNotification:]
  -[SKRemoteComposeReviewViewController composeReviewViewController]


SKStarRatingControl : UIControl
 @property  NSString *explanationText
 @property  double starWidth
 @property  float value

  // instance methods
  -[SKStarRatingControl continueTrackingWithTouch:withEvent:]
  -[SKStarRatingControl hitRect]
  -[SKStarRatingControl .cxx_destruct]
  -[SKStarRatingControl sizeToFit]
  -[SKStarRatingControl layoutSubviews]
  -[SKStarRatingControl setValue:]
  -[SKStarRatingControl value]
  -[SKStarRatingControl pointInside:withEvent:]
  -[SKStarRatingControl endTrackingWithTouch:withEvent:]
  -[SKStarRatingControl _alwaysHandleScrollerMouseEvent]
  -[SKStarRatingControl beginTrackingWithTouch:withEvent:]
  -[SKStarRatingControl setExplanationText:]
  -[SKStarRatingControl explanationText]
  -[SKStarRatingControl _foregroundImageClipBounds]
  -[SKStarRatingControl _newExplanationLabel]
  -[SKStarRatingControl _updateValueForPoint:]
  -[SKStarRatingControl starWidth]
  -[SKStarRatingControl initWithBackgroundImage:foregroundImage:]
  -[SKStarRatingControl setHitPadding:]
  -[SKStarRatingControl canHandleSwipes]
  -[SKStarRatingControl setStarWidth:]


SKAccountPageSpecifierProvider : NSObject <AAUISpecifierProvider>
 @property  AIDAAccountManager *accountManager
 @property  PSSpecifier *activelyLoadingSpecifier
 @property  <AAUISpecifierProviderDelegate> *delegate
 @property  NSArray *specifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKAccountPageSpecifierProvider setSpecifiers:]
  -[SKAccountPageSpecifierProvider _appleAccount]
  -[SKAccountPageSpecifierProvider specifiers]
  -[SKAccountPageSpecifierProvider initWithAccountManager:]
  -[SKAccountPageSpecifierProvider setAccountManager:]
  -[SKAccountPageSpecifierProvider setActivelyLoadingSpecifier:]
  -[SKAccountPageSpecifierProvider accountManager]
  -[SKAccountPageSpecifierProvider _isSingleIdentity]
  -[SKAccountPageSpecifierProvider .cxx_destruct]
  -[SKAccountPageSpecifierProvider setDelegate:]
  -[SKAccountPageSpecifierProvider delegate]
  -[SKAccountPageSpecifierProvider _storeAccount]
  -[SKAccountPageSpecifierProvider _accountPageSpecifierWasTapped:]
  -[SKAccountPageSpecifierProvider activelyLoadingSpecifier]


SKStoreProductActivityViewController : UIViewController <UIViewControllerTransitioningDelegate>
 @property  <SKStoreProductActivityViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKStoreProductActivityViewController animationControllerForDismissedController:]
  -[SKStoreProductActivityViewController initWithCoder:]
  -[SKStoreProductActivityViewController .cxx_destruct]
  -[SKStoreProductActivityViewController viewDidLoad]
  -[SKStoreProductActivityViewController _addRemoteView]
  -[SKStoreProductActivityViewController setDelegate:]
  -[SKStoreProductActivityViewController initWithNibName:bundle:]
  -[SKStoreProductActivityViewController init]
  -[SKStoreProductActivityViewController viewWillDisappear:]
  -[SKStoreProductActivityViewController initWithParameters:]
  -[SKStoreProductActivityViewController delegate]
  -[SKStoreProductActivityViewController dealloc]
  -[SKStoreProductActivityViewController _requestRemoteViewController]
  -[SKStoreProductActivityViewController _didFinishWithResult:error:]
  -[SKStoreProductActivityViewController _viewTapped:]


_SKStoreProductActivityAnimationController : NSObject <UIViewControllerAnimatedTransitioning>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SKStoreProductActivityAnimationController transitionDuration:]
  -[_SKStoreProductActivityAnimationController .cxx_destruct]
  -[_SKStoreProductActivityAnimationController animateTransition:]
  -[_SKStoreProductActivityAnimationController endDelayingAnimation]


SKStarRatingAlertController : UIAlertController
 @property  float rating
 @property  @? completion

  // class methods
  +[SKStarRatingAlertController starRatingAlertController]

  // instance methods
  -[SKStarRatingAlertController completion]
  -[SKStarRatingAlertController setCompletion:]
  -[SKStarRatingAlertController .cxx_destruct]
  -[SKStarRatingAlertController rating]
  -[SKStarRatingAlertController initWithNibName:bundle:]
  -[SKStarRatingAlertController setRating:]
  -[SKStarRatingAlertController _updateButtonState]
  -[SKStarRatingAlertController dealloc]
  -[SKStarRatingAlertController _ratingControlChanged:]
  -[SKStarRatingAlertController setupActionsWithBundle:]


SKStorePageViewController : UIViewController <SKStoreProductViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKStorePageViewController productViewControllerDidFinish:]
  -[SKStorePageViewController .cxx_destruct]
  -[SKStorePageViewController _addRemoteView]
  -[SKStorePageViewController initWithNibName:bundle:]
  -[SKStorePageViewController dealloc]
  -[SKStorePageViewController loadView]
  -[SKStorePageViewController supportedInterfaceOrientations]
  -[SKStorePageViewController _requestRemoteViewController]
  -[SKStorePageViewController _didFinishWithResult:error:]
  -[SKStorePageViewController _prepareToLoadWithCompletionBlock:]
  -[SKStorePageViewController _dismissProductPageViewController]
  -[SKStorePageViewController _didLoadWithResult:error:]
  -[SKStorePageViewController loadPageWithURL:completionBlock:]
  -[SKStorePageViewController loadPageWithURLBagKey:completionBlock:]
  -[SKStorePageViewController _showProductPageWithItemIdentifier:]


SKServiceBroker : NSObject
  // class methods
  +[SKServiceBroker defaultBroker]
  +[SKServiceBroker _storeKitServiceInterface]
  +[SKServiceBroker _storeKitClientInterface]
  +[SKServiceBroker _serviceConnectionWithName:]

  // instance methods
  -[SKServiceBroker .cxx_destruct]
  -[SKServiceBroker init]
  -[SKServiceBroker _serviceConnection]
  -[SKServiceBroker _serviceConnectionInvalidated]
  -[SKServiceBroker asdStoreKitServiceWithErrorHandler:]
  -[SKServiceBroker asdStoreKitSynchronousServiceWithErrorHandler:]
  -[SKServiceBroker asdStoreKitService]
  -[SKServiceBroker asdStoreKitSynchronousService]


SKRemoteStorePageViewController : _UIRemoteViewController <SKUIClientStorePageViewController>
 @property  SKStorePageViewController *storePageViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKRemoteStorePageViewController exportedInterface]
  +[SKRemoteStorePageViewController serviceViewControllerInterface]

  // instance methods
  -[SKRemoteStorePageViewController .cxx_destruct]
  -[SKRemoteStorePageViewController didFinishWithResult:error:]
  -[SKRemoteStorePageViewController setStorePageViewController:]
  -[SKRemoteStorePageViewController storePageViewController]
  -[SKRemoteStorePageViewController showProductPageWithItemIdentifier:]


SKRemoteProductActivityViewController : _UIRemoteViewController <SKUIClientProductActivityViewController>
 @property  SKStoreProductActivityViewController *productActivityViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKRemoteProductActivityViewController exportedInterface]
  +[SKRemoteProductActivityViewController serviceViewControllerInterface]

  // instance methods
  -[SKRemoteProductActivityViewController .cxx_destruct]
  -[SKRemoteProductActivityViewController didFinishWithResult:error:]
  -[SKRemoteProductActivityViewController setProductActivityViewController:]
  -[SKRemoteProductActivityViewController productActivityViewController]


SKOverlay : NSObject <ASOOverlay, ASOOverlayDelegate>
 @property  <SKOverlayDelegate> *delegate
 @property  SKOverlayConfiguration *configuration
 @property  <ASOOverlayDelegate> *overlayDelegate
 @property  <ASOOverlayConfiguration> *overlayConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKOverlay dismissOverlayInScene:]
  +[SKOverlay unsupportedPlatformErrorWithAPIName:]

  // instance methods
  -[SKOverlay configuration]
  -[SKOverlay .cxx_destruct]
  -[SKOverlay setDelegate:]
  -[SKOverlay overlayDelegate]
  -[SKOverlay initWithConfiguration:]
  -[SKOverlay delegate]
  -[SKOverlay isReadyToPresentInScene:]
  -[SKOverlay storeOverlay:didFailToLoadWithError:]
  -[SKOverlay storeOverlay:willStartPresentation:]
  -[SKOverlay storeOverlay:didFinishPresentation:]
  -[SKOverlay storeOverlay:willStartDismissal:]
  -[SKOverlay storeOverlay:didFinishDismissal:]
  -[SKOverlay tranformToPublicError:]
  -[SKOverlay overlayConfiguration]
  -[SKOverlay presentInScene:]


SKInstallSheetStatusUpdateRequest : SKRequest
 @property  NSString *bundleId
 @property  @? completionHandler

  // instance methods
  -[SKInstallSheetStatusUpdateRequest bundleId]
  -[SKInstallSheetStatusUpdateRequest .cxx_destruct]
  -[SKInstallSheetStatusUpdateRequest _start]
  -[SKInstallSheetStatusUpdateRequest setCompletionHandler:]
  -[SKInstallSheetStatusUpdateRequest completionHandler]
  -[SKInstallSheetStatusUpdateRequest initWithAppBundleId:isInstallSheetOpen:completionHandler:]


SKCloudServiceController : NSObject
 @property  BOOL _allowsPromptingForPrivacyAcknowledgement

  // class methods
  +[SKCloudServiceController authorizationStatus]
  +[SKCloudServiceController requestAuthorization:]
  +[SKCloudServiceController _publicErrorForPrivateError:]

  // instance methods
  -[SKCloudServiceController requestCapabilitiesWithCompletionHandler:]
  -[SKCloudServiceController .cxx_destruct]
  -[SKCloudServiceController requestUserTokenForDeveloperToken:completionHandler:]
  -[SKCloudServiceController init]
  -[SKCloudServiceController requestStorefrontIdentifierWithCompletionHandler:]
  -[SKCloudServiceController requestStorefrontCountryCodeWithCompletionHandler:]
  -[SKCloudServiceController _allowsPromptingForPrivacyAcknowledgement]
  -[SKCloudServiceController dealloc]
  -[SKCloudServiceController _setAllowsPromptingForPrivacyAcknowledgement:]
  -[SKCloudServiceController _cloudServiceStatusMonitorWithError:]
  -[SKCloudServiceController _handleCapabilitiesDidChangeNotification:]
  -[SKCloudServiceController _handleStorefrontCountryCodeDidChangeNotification:]
  -[SKCloudServiceController _handleStorefrontIdentifierDidChangeNotification:]
  -[SKCloudServiceController requestPersonalizationTokenForClientToken:withCompletionHandler:]


SKDefaultsManager : NSObject
  // class methods
  +[SKDefaultsManager useAppStoreDaemon]


_TtC8StoreKit18StoreKitXPCService : NSObject
  // class methods
  +[_TtC8StoreKit18StoreKitXPCService service]
  +[_TtC8StoreKit18StoreKitXPCService serviceWithErrorHandler:]

  // instance methods
  -[_TtC8StoreKit18StoreKitXPCService .cxx_destruct]
  -[_TtC8StoreKit18StoreKitXPCService init]


_TtC8StoreKit19TransactionReceiver : SwiftNativeNSObject <ASDStoreKitTransactionReceiverProtocol>
  // instance methods
  -[_TtC8StoreKit19TransactionReceiver init]
  -[_TtC8StoreKit19TransactionReceiver receivedTransactions:]


_TtC8StoreKit19RuntimeIssueManager : Swift._SwiftObject

_TtCVV8StoreKit10Storefront11Storefronts18StorefrontListener : SwiftNativeNSObject <SKStorefrontListenerProtocol>
  // instance methods
  -[_TtCVV8StoreKit10Storefront11Storefronts18StorefrontListener init]
  -[_TtCVV8StoreKit10Storefront11Storefronts18StorefrontListener storefrontChanged:]


_TtCV8StoreKit7ProductP33_3C0143BCD22F0BF641CAA00711A4F50515LazyDataStorage : Swift._SwiftObject

_TtC8StoreKit41SKRemoteEngagementContainerViewController : UIViewController
  // instance methods
  -[_TtC8StoreKit41SKRemoteEngagementContainerViewController initWithCoder:]
  -[_TtC8StoreKit41SKRemoteEngagementContainerViewController viewDidLoad]
  -[_TtC8StoreKit41SKRemoteEngagementContainerViewController initWithNibName:bundle:]
  -[_TtC8StoreKit41SKRemoteEngagementContainerViewController init]
  -[_TtC8StoreKit41SKRemoteEngagementContainerViewController didTapView:]


_TtCVVV8StoreKit7Product16SubscriptionInfo6Status14StatusReceiver : SwiftNativeNSObject <ASDStoreKitStatusReceiverProtocol>
  // instance methods
  -[_TtCVVV8StoreKit7Product16SubscriptionInfo6Status14StatusReceiver init]
  -[_TtCVVV8StoreKit7Product16SubscriptionInfo6Status14StatusReceiver receivedStatuses:]


_TtC8StoreKit23StoreKitPaymentDelegate : SwiftNativeNSObject <ASDStoreKitPaymentProtocol>
  // instance methods
  -[_TtC8StoreKit23StoreKitPaymentDelegate init]
  -[_TtC8StoreKit23StoreKitPaymentDelegate shouldContinueTransactionWithNewStorefront:replyBlock:]
  -[_TtC8StoreKit23StoreKitPaymentDelegate handleEngagementRequest:replyBlock:]


UIView(SKExtensions)
	// instance methods
	-[UIView(SKExtensions) _sk_isAtLeast50PercentOnScreen]

(StoreKit)
	// class methods
	+[(StoreKit) bundleVersion]
	+[(StoreKit) requestData]
	+[(StoreKit) storeCohort]
	+[(StoreKit) serialNumber]
	+[(StoreKit) appIdentifier]
	+[(StoreKit) operatingSystemVersion]
	+[(StoreKit) quantity]
	+[(StoreKit) hardwareModel]
	+[(StoreKit) itemIdentifier]
	+[(StoreKit) name]
	+[(StoreKit) offers]
	+[(StoreKit) contentSize]
	+[(StoreKit) bundleIdentifier]
	+[(StoreKit) displayPrice]
	+[(StoreKit) standard]
	+[(StoreKit) purchaseDate]
	+[(StoreKit) currencyCode]
	+[(StoreKit) operatingSystem]
	+[(StoreKit) offerName]
	+[(StoreKit) data]
	+[(StoreKit) vendorIdentifier]
	+[(StoreKit) price]
	+[(StoreKit) deviceGUID]
	+[(StoreKit) transactionIdentifier]
	+[(StoreKit) locale]
	+[(StoreKit) isBeta]
	+[(StoreKit) payments]
	+[(StoreKit) id]
	+[(StoreKit) partnerIdentifier]
	+[(StoreKit) appDSID]
	+[(StoreKit) title]
	+[(StoreKit) kind]
	+[(StoreKit) type]
	+[(StoreKit) offerIdentifier]
	+[(StoreKit) isFamilyShareable]
	+[(StoreKit) attributes]
	+[(StoreKit) isHosted]
	+[(StoreKit) productIdentifiers]
	+[(StoreKit) storefront]
	+[(StoreKit) storeOffers]
	+[(StoreKit) subscriptionPeriod]
	+[(StoreKit) applicationUsername]
	+[(StoreKit) isStoreOriginated]
	+[(StoreKit) partnerTransactionIdentifier]
	+[(StoreKit) transactionReceipt]
	+[(StoreKit) subscriptionGroupIdentifier]
	+[(StoreKit) discounts]
	+[(StoreKit) appVersionIdentifier]
	+[(StoreKit) authedForBuy]
	+[(StoreKit) defaultOffer]
	+[(StoreKit) discountIdentifier]
	+[(StoreKit) discountKeyIdentifier]
	+[(StoreKit) discountNonce]
	+[(StoreKit) discountSignature]
	+[(StoreKit) discountTimestamp]
	+[(StoreKit) generateBuyParams]
	+[(StoreKit) hardwareFamily]
	+[(StoreKit) hostedAssets]
	+[(StoreKit) hostedContent]
	+[(StoreKit) hostedVersion]
	+[(StoreKit) isIOSAppOnMac]
	+[(StoreKit) offerDashName]
	+[(StoreKit) operatingSystemBuildNumber]
	+[(StoreKit) originalPurchaseDate]
	+[(StoreKit) originalTransactionIdentifier]
	+[(StoreKit) productDescription]
	+[(StoreKit) productsArray]
	+[(StoreKit) receiptData]
	+[(StoreKit) simulateAskToBuy]
	+[(StoreKit) subscriptionPeriodCount]
	+[(StoreKit) subscriptionPaymentMode]
	+[(StoreKit) clientAPIVersion]
	+[(StoreKit) grandfatherRequestData]
	+[(StoreKit) hideConfirmation]
	+[(StoreKit) receiptInstallURL]
	+[(StoreKit) requireAuthentication]
	+[(StoreKit) appAccountToken]
	+[(StoreKit) customOptions]
	+[(StoreKit) legacyApplicationUsername]
	+[(StoreKit) legacyIsStoreOriginated]
	+[(StoreKit) legacyOfferName]
	+[(StoreKit) legacyQuantity]
	+[(StoreKit) legacyRequestData]
	+[(StoreKit) legacySimulateAskToBuy]
	+[(StoreKit) legacyDiscountIdentifier]
	+[(StoreKit) legacyDiscountKeyIdentifier]
	+[(StoreKit) legacyDiscountNonce]
	+[(StoreKit) legacyDiscountSignature]
	+[(StoreKit) legacyDiscountTimestamp]

01 00 0500 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1600 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAuthorizationCredential 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLookupItem 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSURLParser 
01 00 1500 /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon: ASDStoreKitServiceBroker 
01 00 0240 /System/Library/PrivateFrameworks/AppStoreOverlays.framework/AppStoreOverlays: ASOOverlayAppClipConfiguration 
01 00 0240 /System/Library/PrivateFrameworks/AppStoreOverlays.framework/AppStoreOverlays: ASOOverlayAppConfiguration 
01 00 1300 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0a00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSDecimalNumber 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSDecimalNumberHandler 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionItem 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1100 /usr/lib/libSystem.B.dylib: OS_dispatch_queue 
01 00 1100 /usr/lib/libSystem.B.dylib: OS_os_log 
01 00 0b00 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSpecifier 
01 00 0b00 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSTableCell 
01 00 0c00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSLogConfig 
01 00 0c00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSLookupItem 
01 00 0c00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSURLBag 
01 00 0c00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSURLBagContext 
01 00 0c00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVApplicationCapabilitiesRequest 
01 00 1800 /usr/lib/swift/libswiftCore.dylib: SwiftNativeNSObject 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationRotationFollowingController 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationRotationFollowingWindow 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1700 /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation: UIFont 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBarAppearance 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationItem 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewPresentationController 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIToolbar 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebView 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0f00 /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy: WebView 
01 00 1800 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
01 00 0e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIResilientRemoteViewContainerViewController 
