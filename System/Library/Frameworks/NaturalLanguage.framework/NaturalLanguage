|| __DATA.__data _kNLPAlgorithmCRF
|| __DATA.__data _kNLPAlgorithmKey
|| __DATA.__data _kNLPAlgorithmMaxEnt
|| __DATA.__data _kNLPAlgorithmRNN
|| __DATA.__data _kNLPAlgorithmTransfer
|| __DATA.__data _kNLPEmbeddingDataKey
|| __DATA.__data _kNLPEmbeddingModelKey
|| __DATA.__data _kNLPEmbeddingTypeCustom
|| __DATA.__data _kNLPEmbeddingTypeDynamic
|| __DATA.__data _kNLPEmbeddingTypeKey
|| __DATA.__data _kNLPEmbeddingTypeStatic
|| __DATA.__data _kNLPEmbeddingURLKey
|| __DATA.__data _kNLPInputFeatureNameKey
|| __DATA.__data _kNLPLabelArrayKey
|| __DATA.__data _kNLPLabelKey
|| __DATA.__data _kNLPLanguageKey
|| __DATA.__data _kNLPOutputFeatureNameKey
|| __DATA.__data _kNLPRevisionKey
|| __DATA.__data _kNLPStringKey
|| __DATA.__data _kNLPTokenArrayKey
|| __DATA.__data _kNLPTokenRangeLengthArrayKey
|| __DATA.__data _kNLPTokenRangeLocationArrayKey
|| __DATA.__data _kNLPUseCRFKey
|| __DATA.__data _kNLPUseMaxEntKey
|| __DATA.__data _kNLPUseNeuralNetworkKey
|| __DATA.__data _kNLPUseRNNKey
|| __DATA.__data _kNLPUseTransferKey
|| __DATA_CONST.__const _NLAssetsHaveChangedNotification
|| __DATA_CONST.__const _NLLanguageAmharic
|| __DATA_CONST.__const _NLLanguageArabic
|| __DATA_CONST.__const _NLLanguageArmenian
|| __DATA_CONST.__const _NLLanguageBengali
|| __DATA_CONST.__const _NLLanguageBulgarian
|| __DATA_CONST.__const _NLLanguageBurmese
|| __DATA_CONST.__const _NLLanguageCatalan
|| __DATA_CONST.__const _NLLanguageCherokee
|| __DATA_CONST.__const _NLLanguageCroatian
|| __DATA_CONST.__const _NLLanguageCzech
|| __DATA_CONST.__const _NLLanguageDanish
|| __DATA_CONST.__const _NLLanguageDutch
|| __DATA_CONST.__const _NLLanguageEnglish
|| __DATA_CONST.__const _NLLanguageFinnish
|| __DATA_CONST.__const _NLLanguageFrench
|| __DATA_CONST.__const _NLLanguageGeorgian
|| __DATA_CONST.__const _NLLanguageGerman
|| __DATA_CONST.__const _NLLanguageGreek
|| __DATA_CONST.__const _NLLanguageGujarati
|| __DATA_CONST.__const _NLLanguageHebrew
|| __DATA_CONST.__const _NLLanguageHindi
|| __DATA_CONST.__const _NLLanguageHungarian
|| __DATA_CONST.__const _NLLanguageIcelandic
|| __DATA_CONST.__const _NLLanguageIndonesian
|| __DATA_CONST.__const _NLLanguageItalian
|| __DATA_CONST.__const _NLLanguageJapanese
|| __DATA_CONST.__const _NLLanguageKannada
|| __DATA_CONST.__const _NLLanguageKhmer
|| __DATA_CONST.__const _NLLanguageKorean
|| __DATA_CONST.__const _NLLanguageLao
|| __DATA_CONST.__const _NLLanguageMalay
|| __DATA_CONST.__const _NLLanguageMalayalam
|| __DATA_CONST.__const _NLLanguageMarathi
|| __DATA_CONST.__const _NLLanguageMongolian
|| __DATA_CONST.__const _NLLanguageNorwegian
|| __DATA_CONST.__const _NLLanguageOriya
|| __DATA_CONST.__const _NLLanguagePersian
|| __DATA_CONST.__const _NLLanguagePolish
|| __DATA_CONST.__const _NLLanguagePortuguese
|| __DATA_CONST.__const _NLLanguagePunjabi
|| __DATA_CONST.__const _NLLanguageRomanian
|| __DATA_CONST.__const _NLLanguageRussian
|| __DATA_CONST.__const _NLLanguageSimplifiedChinese
|| __DATA_CONST.__const _NLLanguageSinhalese
|| __DATA_CONST.__const _NLLanguageSlovak
|| __DATA_CONST.__const _NLLanguageSpanish
|| __DATA_CONST.__const _NLLanguageSwedish
|| __DATA_CONST.__const _NLLanguageTamil
|| __DATA_CONST.__const _NLLanguageTelugu
|| __DATA_CONST.__const _NLLanguageThai
|| __DATA_CONST.__const _NLLanguageTibetan
|| __DATA_CONST.__const _NLLanguageTraditionalChinese
|| __DATA_CONST.__const _NLLanguageTurkish
|| __DATA_CONST.__const _NLLanguageUkrainian
|| __DATA_CONST.__const _NLLanguageUndetermined
|| __DATA_CONST.__const _NLLanguageUrdu
|| __DATA_CONST.__const _NLLanguageVietnamese
|| __DATA_CONST.__const _NLModelAlgorithmCRF
|| __DATA_CONST.__const _NLModelAlgorithmMaxEnt
|| __DATA_CONST.__const _NLModelAlgorithmRNN
|| __DATA_CONST.__const _NLModelAlgorithmTransfer
|| __DATA_CONST.__const _NLModelConfigurationOptionsKeyAlgorithm
|| __DATA_CONST.__const _NLModelConfigurationOptionsKeyEmbeddingData
|| __DATA_CONST.__const _NLModelConfigurationOptionsKeyEmbeddingModel
|| __DATA_CONST.__const _NLModelConfigurationOptionsKeyEmbeddingType
|| __DATA_CONST.__const _NLModelConfigurationOptionsKeyEmbeddingURL
|| __DATA_CONST.__const _NLModelConfigurationOptionsKeyLanguage
|| __DATA_CONST.__const _NLModelConfigurationOptionsKeyRevision
|| __DATA_CONST.__const _NLModelConfigurationOptionsKeyUseBidirectionalNeuralNetwork
|| __DATA_CONST.__const _NLModelConfigurationOptionsKeyUseCRF
|| __DATA_CONST.__const _NLModelConfigurationOptionsKeyUseMaxEnt
|| __DATA_CONST.__const _NLModelConfigurationOptionsKeyUseRNN
|| __DATA_CONST.__const _NLModelConfigurationOptionsKeyUseTransfer
|| __DATA_CONST.__const _NLModelEmbeddingTypeCustom
|| __DATA_CONST.__const _NLModelEmbeddingTypeDynamic
|| __DATA_CONST.__const _NLModelEmbeddingTypeStatic
|| __DATA_CONST.__const _NLModelWritingOptionsKeyAtomicWrite
|| __DATA_CONST.__const _NLModelWritingOptionsKeyInputFeatureName
|| __DATA_CONST.__const _NLModelWritingOptionsKeyOutputFeatureName
|| __DATA_CONST.__const _NLNaturalLanguageErrorDomain
|| __DATA_CONST.__const _NLTagAdjective
|| __DATA_CONST.__const _NLTagAdverb
|| __DATA_CONST.__const _NLTagClassifier
|| __DATA_CONST.__const _NLTagCloseParenthesis
|| __DATA_CONST.__const _NLTagCloseQuote
|| __DATA_CONST.__const _NLTagConjunction
|| __DATA_CONST.__const _NLTagDash
|| __DATA_CONST.__const _NLTagDeterminer
|| __DATA_CONST.__const _NLTagIdiom
|| __DATA_CONST.__const _NLTagInterjection
|| __DATA_CONST.__const _NLTagNoun
|| __DATA_CONST.__const _NLTagNumber
|| __DATA_CONST.__const _NLTagOpenParenthesis
|| __DATA_CONST.__const _NLTagOpenQuote
|| __DATA_CONST.__const _NLTagOrganizationName
|| __DATA_CONST.__const _NLTagOther
|| __DATA_CONST.__const _NLTagOtherPunctuation
|| __DATA_CONST.__const _NLTagOtherWhitespace
|| __DATA_CONST.__const _NLTagOtherWord
|| __DATA_CONST.__const _NLTagParagraphBreak
|| __DATA_CONST.__const _NLTagParticle
|| __DATA_CONST.__const _NLTagPersonalName
|| __DATA_CONST.__const _NLTagPlaceName
|| __DATA_CONST.__const _NLTagPreposition
|| __DATA_CONST.__const _NLTagPronoun
|| __DATA_CONST.__const _NLTagPunctuation
|| __DATA_CONST.__const _NLTagSchemeLanguage
|| __DATA_CONST.__const _NLTagSchemeLemma
|| __DATA_CONST.__const _NLTagSchemeLexicalClass
|| __DATA_CONST.__const _NLTagSchemeNameType
|| __DATA_CONST.__const _NLTagSchemeNameTypeOrLexicalClass
|| __DATA_CONST.__const _NLTagSchemeScript
|| __DATA_CONST.__const _NLTagSchemeSentimentScore
|| __DATA_CONST.__const _NLTagSchemeTokenType
|| __DATA_CONST.__const _NLTagSchemeWordEmbedding
|| __DATA_CONST.__const _NLTagSentenceTerminator
|| __DATA_CONST.__const _NLTagVerb
|| __DATA_CONST.__const _NLTagWhitespace
|| __DATA_CONST.__const _NLTagWord
|| __DATA_CONST.__const _NLTagWordJoiner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLClassifierModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLClassifierModelDataInstance
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLDataInstance
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLDataProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLDataSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLEmbedding
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLGazetteer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLLanguageModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLLanguageRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLLexicon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLLexiconCursor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLLexiconEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLModelConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLModelTrainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLSequenceModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLSequenceModelDataInstance
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLTagger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NLTokenizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLClassifierModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLClassifierModelDataInstance
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLDataInstance
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLDataProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLDataSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLEmbedding
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLGazetteer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLLanguageModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLLanguageRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLLexicon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLLexiconCursor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLLexiconEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLModelConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLModelTrainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLSequenceModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLSequenceModelDataInstance
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLTagger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NLTokenizer
|| __TEXT.__text _NLPClassifierModelCopyData
|| __TEXT.__text _NLPClassifierModelCopyPredictedLabelForText
|| __TEXT.__text _NLPClassifierModelCopyTestResults
|| __TEXT.__text _NLPClassifierModelCreateTrainedModelWithData
|| __TEXT.__text _NLPClassifierModelCreateWithData
|| __TEXT.__text _NLPClassifierModelCreateWithURL
|| __TEXT.__text _NLPClassifierModelGetCurrentRevision
|| __TEXT.__text _NLPClassifierModelGetRevision
|| __TEXT.__text _NLPClassifierModelIsRevisionSupported
|| __TEXT.__text _NLPClassifierModelWriteCoreMLModelToURL
|| __TEXT.__text _NLPClassifierModelWriteCoreMLModelToURLWithOptions
|| __TEXT.__text _NLPClassifierModelWriteToURL
|| __TEXT.__text _NLPEmbeddingModelCopyVectorForString
|| __TEXT.__text _NLPEmbeddingModelCreateWithData
|| __TEXT.__text _NLPEmbeddingModelCreateWithURL
|| __TEXT.__text _NLPEmbeddingModelGetCurrentRevision
|| __TEXT.__text _NLPEmbeddingModelGetRevision
|| __TEXT.__text _NLPEmbeddingModelIsRevisionSupported
|| __TEXT.__text _NLPEmbeddingModelWriteCoreMLModelToURLWithOptions
|| __TEXT.__text _NLPGazetteerModelCopyLabelForString
|| __TEXT.__text _NLPGazetteerModelCreateWithData
|| __TEXT.__text _NLPGazetteerModelCreateWithURL
|| __TEXT.__text _NLPGazetteerModelGetCurrentRevision
|| __TEXT.__text _NLPGazetteerModelGetRevision
|| __TEXT.__text _NLPGazetteerModelIsRevisionSupported
|| __TEXT.__text _NLPGazetteerModelWriteCoreMLModelToURLWithOptions
|| __TEXT.__text _NLPSequenceModelCopyData
|| __TEXT.__text _NLPSequenceModelCopyPredictedLabelsForTokens
|| __TEXT.__text _NLPSequenceModelCopyPredictedTokensAndLabelsForText
|| __TEXT.__text _NLPSequenceModelCopyTestResults
|| __TEXT.__text _NLPSequenceModelCreateTrainedModelWithData
|| __TEXT.__text _NLPSequenceModelCreateWithData
|| __TEXT.__text _NLPSequenceModelCreateWithURL
|| __TEXT.__text _NLPSequenceModelGetCurrentRevision
|| __TEXT.__text _NLPSequenceModelGetRevision
|| __TEXT.__text _NLPSequenceModelIsRevisionSupported
|| __TEXT.__text _NLPSequenceModelWriteCoreMLModelToURL
|| __TEXT.__text _NLPSequenceModelWriteCoreMLModelToURLWithOptions
|| __TEXT.__text _NLPSequenceModelWriteToURL
__ CoreEmoji: _CEMStringContainsEmoji
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFLocaleCreate
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringTokenizerAdvanceToNextToken
__ CoreFoundation: _CFStringTokenizerCreate
__ CoreFoundation: _CFStringTokenizerGetCurrentTokenRange
__ CoreFoundation: _CFStringTokenizerSetString
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreML: _MLModelAuthorKey
__ CoreML: _MLModelCreatorDefinedKey
__ CoreML: _MLModelDescriptionKey
__ CoreML: _MLModelLicenseKey
__ CoreML: _MLModelVersionStringKey
__ CoreML: _OBJC_CLASS_$_MLAppleGazetteer
__ CoreML: _OBJC_CLASS_$_MLAppleGazetteerParameters
__ CoreML: _OBJC_CLASS_$_MLAppleTextClassifier
__ CoreML: _OBJC_CLASS_$_MLAppleTextClassifierParameters
__ CoreML: _OBJC_CLASS_$_MLAppleWordEmbedding
__ CoreML: _OBJC_CLASS_$_MLAppleWordEmbeddingParameters
__ CoreML: _OBJC_CLASS_$_MLAppleWordTagger
__ CoreML: _OBJC_CLASS_$_MLAppleWordTaggerParameters
__ CoreML: _OBJC_CLASS_$_MLDictionaryFeatureProvider
__ CoreML: _OBJC_CLASS_$_MLFeatureValue
__ CoreML: _OBJC_CLASS_$_MLModel
__ CoreML: _OBJC_CLASS_$_MLSequence
__ CoreNLP: _NLEmbeddingCopyVersion
__ CoreNLP: _NLGazetteerCopyAvailableLabels
__ CoreNLP: _NLGazetteerCopyCompressedModel
__ CoreNLP: _NLGazetteerCopyLabel
__ CoreNLP: _NLGazetteerCreate
__ CoreNLP: _NLLanguageIdentifierConsumeString
__ CoreNLP: _NLLanguageIdentifierCreate
__ CoreNLP: _NLLanguageIdentifierGetTopHypotheses
__ CoreNLP: _NLLanguageIdentifierGetTopHypothesis
__ CoreNLP: _NLLanguageIdentifierGetTopLanguage
__ CoreNLP: _NLLanguageIdentifierRelease
__ CoreNLP: _NLLanguageIdentifierReset
__ CoreNLP: _NLLanguageIdentifierSetLanguageConstraints
__ CoreNLP: _NLLanguageIdentifierSetLanguageHints
__ CoreNLP: _NLModelContainerCopyContainerData
__ CoreNLP: _NLModelContainerCopyInfoDictionary
__ CoreNLP: _NLModelContainerCopyModelDataAtIndex
__ CoreNLP: _NLModelContainerCreate
__ CoreNLP: _NLModelContainerCreateWithContainerData
__ CoreNLP: _NLModelContainerGetModelDataCount
__ CoreNLP: _NLModelContainerGetRevision
__ CoreNLP: _NLModelContainerGetSubtype
__ CoreNLP: _NLModelContainerGetType
__ CoreNLP: _NLModelCopyModelData
__ CoreNLP: _NLModelCopyPredictedLabels
__ CoreNLP: _NLModelCreate
__ CoreNLP: _NLModelTrainerCreate
__ CoreNLP: _NLModelTrainerTrainAndCopyModelData
__ CoreNLP: _NLStringEmbeddingCopyModelLocale
__ CoreNLP: _NLStringEmbeddingCopyNeighborsForVectorWithDistances
__ CoreNLP: _NLStringEmbeddingCopyNeighborsWithDistances
__ CoreNLP: _NLStringEmbeddingCopyVersion
__ CoreNLP: _NLStringEmbeddingCopyWordVector
__ CoreNLP: _NLStringEmbeddingCreateWithOptions
__ CoreNLP: _NLStringEmbeddingFillWordVectors
__ CoreNLP: _NLStringEmbeddingGetDimension
__ CoreNLP: _NLStringEmbeddingGetDistance
__ CoreNLP: _NLStringEmbeddingGetVocabularySize
__ CoreNLP: _NLStringEmbeddingSaveCompressedModel
__ CoreNLP: _NLTaggerCopyAvailableTagSchemes
__ CoreNLP: _NLTaggerCopyTagAtIndex
__ CoreNLP: _NLTaggerCopyTagForCurrentToken
__ CoreNLP: _NLTaggerCreate
__ CoreNLP: _NLTaggerEnumerateTokens
__ CoreNLP: _NLTaggerGetTokenAtIndex
__ CoreNLP: _NLTaggerSetGazetteers
__ CoreNLP: _NLTaggerSetLocaleForRange
__ CoreNLP: _NLTaggerSetString
__ CoreNLP: _NLTokenizerCreate
__ CoreNLP: _NLTokenizerGetNextToken
__ CoreNLP: _NLTokenizerGoToTokenAtIndex
__ CoreNLP: _NLTokenizerRelease
__ CoreNLP: _NLTokenizerSetLocale
__ CoreNLP: _NLTokenizerSetString
__ CoreNLP: _kNLGazetteerCompressedModelData
__ CoreNLP: _kNLGazetteerCompressedModelURL
__ CoreNLP: _kNLGazetteerEntities
__ CoreNLP: _kNLGazetteerLocale
__ CoreNLP: _kNLModelSampleDataLabelArrayKey
__ CoreNLP: _kNLModelSampleDataRangeLengthArrayKey
__ CoreNLP: _kNLModelSampleDataRangeLocationArrayKey
__ CoreNLP: _kNLModelSampleDataTextKey
__ CoreNLP: _kNLModelTrainerLanguageKey
__ CoreNLP: _kNLModelTrainerMaxIterationNumberKey
__ CoreNLP: _kNLStringEmbeddingModelData
__ CoreNLP: _kNLStringEmbeddingModelLocale
__ CoreNLP: _kNLStringEmbeddingModelPath
__ CoreNLP: _kNLStringEmbeddingModelType
__ CoreNLP: _kNLStringEmbeddingModelTypeCompressedWordEmbedding
__ CoreNLP: _kNLStringEmbeddingModelTypeContextualWordEmbedding
__ CoreNLP: _kNLStringEmbeddingModelVersion
__ CoreNLP: _kNLStringEmbeddingNumberOfTrees
__ CoreNLP: _kNLStringEmbeddingSubDimension
__ Foundation: _NSClassFromString
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromRange
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnionRange
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ LanguageModeling: _LMLanguageModelConditionalProbability
__ LanguageModeling: _LMLanguageModelCreate
__ LanguageModeling: _LMLanguageModelEnumeratePredictionsWithBlock
__ LanguageModeling: _LMLanguageModelRelease
__ LanguageModeling: _kLMLanguageModelLocaleKey
__ Lexicon: _LXCursorCopyTraversedCharacters
__ Lexicon: _LXCursorCreateByAdvancing
__ Lexicon: _LXCursorEnumerateChildren
__ Lexicon: _LXCursorEnumerateEntries
__ Lexicon: _LXCursorEnumerateEntriesRecursively
__ Lexicon: _LXCursorHasChildren
__ Lexicon: _LXCursorHasEntries
__ Lexicon: _LXCursorPrefixProbability
__ Lexicon: _LXCursorTerminationProbability
__ Lexicon: _LXEntryCopyString
__ Lexicon: _LXEntryGetMetaFlags
__ Lexicon: _LXEntryGetProbability
__ Lexicon: _LXEntryGetTokenID
__ Lexicon: _LXLexiconCopyEntryForTokenID
__ Lexicon: _LXLexiconCreate
__ Lexicon: _LXLexiconCreateRootCursor
__ Lexicon: _kLXLexiconEnableInternalStemSuffixKey
__ Lexicon: _kLXLexiconLocaleKey
__ Montreal: _MLPModelSampleDataFeatureValuesKey
__ Montreal: _MLPModelSampleDataLabelsKey
__ Montreal: _MLPModelTrainerBatchSizeKey
__ Montreal: _MLPModelTrainerCreate
__ Montreal: _MLPModelTrainerEvaluateModel
__ Montreal: _MLPModelTrainerEvaluationBatchSizeKey
__ Montreal: _MLPModelTrainerInputChannelsKey
__ Montreal: _MLPModelTrainerInputHeightKey
__ Montreal: _MLPModelTrainerInputLengthKey
__ Montreal: _MLPModelTrainerLearningRateKey
__ Montreal: _MLPModelTrainerNumberOfEpochsKey
__ Montreal: _MLPModelTrainerNumberOfLabelsKey
__ Montreal: _MLPModelTrainerOverallAccuracyKey
__ Montreal: _MLPModelTrainerTrainModel
__ Montreal: _MRLModelCompile
__ Montreal: _MRLModelCopyQuantizedSerializedData
__ Montreal: _MRLModelCreate
__ Montreal: _MRLModelEvaluate
__ Montreal: _MRLModelGetOutputSize
__ Montreal: _MRLModelInitEpoch
__ Montreal: _MRLModelRecognize
__ Montreal: _MRLModelRelease
__ Montreal: _MRLModelSetMaxSequenceLength
__ Montreal: _MRLModelTrainBatch
__ Montreal: _MRLNeuralNetworkCreate
__ Montreal: _MRLNeuralNetworkGetOutput
__ Montreal: _MRLNeuralNetworkPredict
__ Montreal: _MRLNeuralNetworkSetInput
__ Montreal: _kMRLModelDataKey
__ Montreal: _kMRLModelErrorRateKey
__ Montreal: _kMRLModelFileLocationKey
__ Montreal: _kMRLModelModelConfigKey
__ Montreal: _kMRLNeuralNetworkOptionModelDataKey
__ libCRFSuite.dylib: _maxent_add_training_sample
__ libCRFSuite.dylib: _maxent_classify
__ libCRFSuite.dylib: _maxent_load_with_bytes
__ libCRFSuite.dylib: _maxent_model_create
__ libCRFSuite.dylib: _maxent_model_release
__ libCRFSuite.dylib: _maxent_sample_add_feature_with_value
__ libCRFSuite.dylib: _maxent_sample_create
__ libCRFSuite.dylib: _maxent_sample_get_label
__ libCRFSuite.dylib: _maxent_sample_release
__ libCRFSuite.dylib: _maxent_sample_set_label
__ libCRFSuite.dylib: _maxent_save_to_file
__ libCRFSuite.dylib: _maxent_train
__ libCRFSuite.dylib: _maxent_use_l2_regularizer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fgets
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113random_deviceC1ERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZNSt3__113random_deviceD1Ev
__ libc++.1.dylib: __ZNSt3__113random_deviceclEv
__ libc++.1.dylib: __ZNSt3__14cerrE
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19to_stringEi
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
NLNumberGenerator : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[NLNumberGenerator init]
  -[NLNumberGenerator reset]
  -[NLNumberGenerator numberInRange:]
  -[NLNumberGenerator resetWithSeed:]


NLModelImplML : NLModelImpl
  // instance methods
  -[NLModelImplML .cxx_destruct]
  -[NLModelImplML configuration]
  -[NLModelImplML predictedLabelForString:]
  -[NLModelImplML initWithModelData:configuration:labelMap:vocabularyMap:documentFrequencyMap:customEmbeddingData:trainingInfo:]
  -[NLModelImplML initWithModelTrainer:]
  -[NLModelImplML initWithMLModel:configuration:]
  -[NLModelImplML modelData]
  -[NLModelImplML predictedLabelsForTokens:]


NLGazetteer : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *language
 @property  NSData *data

  // class methods
  +[NLGazetteer gazetteerWithContentsOfURL:error:]
  +[NLGazetteer gazetteerWithData:error:]
  +[NLGazetteer gazetteerWithMLModel:error:]
  +[NLGazetteer writeGazetteerForDictionary:language:toURL:error:]
  +[NLGazetteer writeGazetteerMLModelForDictionary:language:toURL:options:error:]

  // instance methods
  -[NLGazetteer dealloc]
  -[NLGazetteer .cxx_destruct]
  -[NLGazetteer data]
  -[NLGazetteer initWithContentsOfURL:error:]
  -[NLGazetteer modelDescription]
  -[NLGazetteer initWithData:error:]
  -[NLGazetteer labels]
  -[NLGazetteer language]
  -[NLGazetteer initWithMLModel:error:]
  -[NLGazetteer initWithNLModel:error:]
  -[NLGazetteer initWithDictionary:language:error:]
  -[NLGazetteer writeMLModelToURL:options:error:]
  -[NLGazetteer labelForString:]
  -[NLGazetteer _addImplementationToArray:]


NLModelImplG : NLModelImpl
  // instance methods
  -[NLModelImplG .cxx_destruct]
  -[NLModelImplG systemVersion]
  -[NLModelImplG predictedLabelForString:]
  -[NLModelImplG initWithModelData:configuration:labelMap:vocabularyMap:documentFrequencyMap:customEmbeddingData:trainingInfo:]
  -[NLModelImplG initWithModelTrainer:]
  -[NLModelImplG modelData]
  -[NLModelImplG predictedLabelsForTokens:]
  -[NLModelImplG gazetteer]
  -[NLModelImplG initWithGazetteer:]


NLModel : NSObject /usr/lib/libc++.1.dylib
 @property  NLModelConfiguration *configuration

  // class methods
  +[NLModel modelWithContentsOfURL:error:]
  +[NLModel modelWithData:error:]
  +[NLModel modelWithMLModel:error:]

  // instance methods
  -[NLModel dealloc]
  -[NLModel .cxx_destruct]
  -[NLModel data]
  -[NLModel systemVersion]
  -[NLModel initWithContentsOfURL:error:]
  -[NLModel initWithData:error:]
  -[NLModel configuration]
  -[NLModel initWithMLModel:error:]
  -[NLModel predictedLabelForString:]
  -[NLModel predictedLabelsForTokens:]
  -[NLModel gazetteer]
  -[NLModel initWithConfiguration:modelImpl:]
  -[NLModel writeMLModelToURL:options:error:]
  -[NLModel initWithData:mlModel:error:]
  -[NLModel initWithClassifierMLModel:]
  -[NLModel labelMap]
  -[NLModel vocabularyMap]
  -[NLModel documentFrequencyMap]
  -[NLModel labelArray]
  -[NLModel embedding]
  -[NLModel embeddingData]
  -[NLModel sequenceTestResultsWithDataProvider:]
  -[NLModel classifierTestResultsWithDataProvider:]
  -[NLModel testResultsWithDataProvider:]
  -[NLModel writeToURL:atomically:error:]
  -[NLModel writeMLModelToURL:atomically:error:]
  -[NLModel mlModel]
  -[NLModel testResultsWithDataSet:]


NLSequenceModel : NLModel

NLClassifierModel : NLModel

NLModelImpl : NSObject /usr/lib/libc++.1.dylib
 @property  NLModelConfiguration *configuration
 @property  unsigned long systemVersion
 @property  NSDictionary *labelMap
 @property  NSDictionary *vocabularyMap
 @property  NSDictionary *documentFrequencyMap
 @property  NSData *customEmbeddingData
 @property  unsigned long numberOfTrainingInstances
 @property  NSDictionary *trainingInfo
 @property  NLGazetteer *gazetteer
 @property  NLEmbedding *embedding
 @property  NSData *embeddingData

  // instance methods
  -[NLModelImpl systemVersion]
  -[NLModelImpl configuration]
  -[NLModelImpl predictedLabelForString:]
  -[NLModelImpl initWithModelData:configuration:labelMap:vocabularyMap:documentFrequencyMap:customEmbeddingData:trainingInfo:]
  -[NLModelImpl initWithModelTrainer:]
  -[NLModelImpl modelData]
  -[NLModelImpl predictedLabelsForTokens:]
  -[NLModelImpl gazetteer]
  -[NLModelImpl labelMap]
  -[NLModelImpl vocabularyMap]
  -[NLModelImpl documentFrequencyMap]
  -[NLModelImpl trainingInfo]
  -[NLModelImpl customEmbeddingData]
  -[NLModelImpl embedding]
  -[NLModelImpl embeddingData]
  -[NLModelImpl numberOfTrainingInstances]


NLModelImplL : NLModelImpl
  // instance methods
  -[NLModelImplL dealloc]
  -[NLModelImplL .cxx_destruct]
  -[NLModelImplL configuration]
  -[NLModelImplL predictedLabelForString:]
  -[NLModelImplL initWithModelData:configuration:labelMap:vocabularyMap:documentFrequencyMap:customEmbeddingData:trainingInfo:]
  -[NLModelImplL initWithModelTrainer:]
  -[NLModelImplL modelData]
  -[NLModelImplL predictedLabelsForTokens:]
  -[NLModelImplL labelMap]
  -[NLModelImplL vocabularyMap]
  -[NLModelImplL documentFrequencyMap]
  -[NLModelImplL numberOfTrainingInstances]
  -[NLModelImplL initWithOwnedModelObject:configuration:labelMap:vocabularyMap:documentFrequencyMap:numberOfTrainingInstances:]


NLLexiconEntry : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *string
 @property  unsigned long flags
 @property  double probability

  // class methods
  +[NLLexiconEntry entryWithString:tokenID:flags:probability:]

  // instance methods
  -[NLLexiconEntry string]
  -[NLLexiconEntry .cxx_destruct]
  -[NLLexiconEntry flags]
  -[NLLexiconEntry tokenID]
  -[NLLexiconEntry probability]
  -[NLLexiconEntry initWithString:tokenID:flags:probability:]


NLLexiconCompletion : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[NLLexiconCompletion score]
  -[NLLexiconCompletion tokenID]
  -[NLLexiconCompletion initWithTokenID:score:]


NLLexiconCursor : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL hasEntries
 @property  BOOL hasChildren
 @property  double prefixProbability
 @property  double terminationProbability
 @property  NSString *traversedString

  // instance methods
  -[NLLexiconCursor dealloc]
  -[NLLexiconCursor .cxx_destruct]
  -[NLLexiconCursor hasChildren]
  -[NLLexiconCursor enumerateChildrenUsingBlock:]
  -[NLLexiconCursor enumerateEntriesUsingBlock:]
  -[NLLexiconCursor prefixProbability]
  -[NLLexiconCursor hasEntries]
  -[NLLexiconCursor terminationProbability]
  -[NLLexiconCursor initWithLexicon:cursor:]
  -[NLLexiconCursor _enumerateEntriesUsingBlock:]
  -[NLLexiconCursor initWithLexicon:string:]
  -[NLLexiconCursor cursorByAdvancingWithString:]
  -[NLLexiconCursor traversedString]
  -[NLLexiconCursor enumerateCompletionsUsingBlock:]


NLLexicon : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *localization

  // instance methods
  -[NLLexicon dealloc]
  -[NLLexicon .cxx_destruct]
  -[NLLexicon localization]
  -[NLLexicon getProbabilityForTokenID:probability:]
  -[NLLexicon getProbabilityForString:probability:]
  -[NLLexicon lexicon]
  -[NLLexicon _enumerateEntriesForString:usingBlock:]
  -[NLLexicon initWithLocalization:]
  -[NLLexicon entryForTokenID:]
  -[NLLexicon entryForString:]
  -[NLLexicon enumerateCompletionsForPrefix:usingBlock:]


NLTagger : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *tagSchemes
 @property  NSString *string
 @property  NSString *dominantLanguage

  // class methods
  +[NLTagger availableTagSchemesForUnit:language:]
  +[NLTagger availableTagSchemesForLanguage:]
  +[NLTagger registerForAssetNotifications]
  +[NLTagger requestAssetsForLanguage:tagScheme:completionHandler:]

  // instance methods
  -[NLTagger string]
  -[NLTagger dealloc]
  -[NLTagger setString:]
  -[NLTagger .cxx_destruct]
  -[NLTagger dominantLanguage]
  -[NLTagger setOrthography:range:]
  -[NLTagger _tagSchemeForScheme:]
  -[NLTagger enumerateTagsInRange:unit:scheme:options:usingBlock:]
  -[NLTagger tagAtIndex:unit:scheme:tokenRange:]
  -[NLTagger tagsInRange:unit:scheme:options:tokenRanges:]
  -[NLTagger tagSchemes]
  -[NLTagger stringEditedInRange:changeInLength:]
  -[NLTagger sentenceRangeForRange:]
  -[NLTagger tokenRangeAtIndex:unit:]
  -[NLTagger setLanguage:range:]
  -[NLTagger initWithTagSchemes:]
  -[NLTagger _customModelAtIndex:unit:modelDictionary:]
  -[NLTagger _customGazetteerAtIndex:unit:gazetteerDictionary:]
  -[NLTagger _customTagDictionaryForSentence:options:model:gazetteer:]
  -[NLTagger _customTagAtIndex:fromTagDictionary:]
  -[NLTagger _customTagAtIndex:unit:scheme:options:modelDictionary:gazetteerDictionary:]
  -[NLTagger setModels:forTagScheme:]
  -[NLTagger modelsForTagScheme:]
  -[NLTagger setGazetteers:forTagScheme:]
  -[NLTagger gazetteersForTagScheme:]


NLTaggerAssetRequest : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[NLTaggerAssetRequest checkAssetRequests]

  // instance methods
  -[NLTaggerAssetRequest .cxx_destruct]
  -[NLTaggerAssetRequest isFulfilled]
  -[NLTaggerAssetRequest completeWithResult:error:]
  -[NLTaggerAssetRequest initWithLanguage:tagScheme:completionHandler:]
  -[NLTaggerAssetRequest waitForFulfillment]


NLModelImplLC : NLModelImpl
  // instance methods
  -[NLModelImplLC dealloc]
  -[NLModelImplLC .cxx_destruct]
  -[NLModelImplLC configuration]
  -[NLModelImplLC predictedLabelForString:]
  -[NLModelImplLC initWithModelData:configuration:labelMap:vocabularyMap:documentFrequencyMap:customEmbeddingData:trainingInfo:]
  -[NLModelImplLC initWithModelTrainer:]
  -[NLModelImplLC modelData]
  -[NLModelImplLC predictedLabelsForTokens:]
  -[NLModelImplLC labelMap]
  -[NLModelImplLC vocabularyMap]
  -[NLModelImplLC documentFrequencyMap]
  -[NLModelImplLC numberOfTrainingInstances]


NLLanguageModel : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *localization
 @property  NLLexicon *lexicon

  // instance methods
  -[NLLanguageModel dealloc]
  -[NLLanguageModel .cxx_destruct]
  -[NLLanguageModel localization]
  -[NLLanguageModel getConditionalProbabilityForTokenID:context:length:probability:]
  -[NLLanguageModel lexicon]
  -[NLLanguageModel initWithLocalization:]
  -[NLLanguageModel conditionalProbabilityForEntry:context:]
  -[NLLanguageModel conditionalProbabilityForWord:context:]
  -[NLLanguageModel enumeratePredictionsForContext:maxEntriesPerPrediction:usingBlock:]
  -[NLLanguageModel enumeratePredictionsForContext:maxWordsPerPrediction:usingBlock:]


NLPModelTrainingDataProvider : NLDataProvider
  // instance methods
  -[NLPModelTrainingDataProvider .cxx_destruct]
  -[NLPModelTrainingDataProvider numberOfInstances]
  -[NLPModelTrainingDataProvider instanceAtIndex:]
  -[NLPModelTrainingDataProvider initWithConfiguration:numberOfInstances:dataSource:instanceDataProvider:]


NLModelTrainingDataSet : NLDataSet
  // instance methods
  -[NLModelTrainingDataSet .cxx_destruct]
  -[NLModelTrainingDataSet dataProviderOfType:]
  -[NLModelTrainingDataSet initWithConfiguration:numberOfTrainingInstances:numberOfValidationInstances:trainingDataSource:validationDataSource:instanceDataProvider:]


NLPModelTrainingDelegate : NSObject /usr/lib/libc++.1.dylib <NLModelTrainerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NLPModelTrainingDelegate .cxx_destruct]
  -[NLPModelTrainingDelegate modelTrainer:logMessage:]
  -[NLPModelTrainingDelegate modelTrainerShouldStop:]
  -[NLPModelTrainingDelegate initWithLogHandler:]


NLLanguageRecognizer : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *dominantLanguage
 @property  NSDictionary *languageHints
 @property  NSArray *languageConstraints

  // class methods
  +[NLLanguageRecognizer dominantLanguageForString:]

  // instance methods
  -[NLLanguageRecognizer init]
  -[NLLanguageRecognizer dealloc]
  -[NLLanguageRecognizer .cxx_destruct]
  -[NLLanguageRecognizer reset]
  -[NLLanguageRecognizer dominantLanguage]
  -[NLLanguageRecognizer processString:]
  -[NLLanguageRecognizer processString:range:]
  -[NLLanguageRecognizer languageHypothesesWithMaximum:]
  -[NLLanguageRecognizer languageHints]
  -[NLLanguageRecognizer setLanguageHints:]
  -[NLLanguageRecognizer languageConstraints]
  -[NLLanguageRecognizer setLanguageConstraints:]


NLModelImplN : NLModelImpl
  // instance methods
  -[NLModelImplN dealloc]
  -[NLModelImplN .cxx_destruct]
  -[NLModelImplN configuration]
  -[NLModelImplN predictedLabelForString:]
  -[NLModelImplN initWithModelData:configuration:labelMap:vocabularyMap:documentFrequencyMap:customEmbeddingData:trainingInfo:]
  -[NLModelImplN initWithModelTrainer:]
  -[NLModelImplN modelData]
  -[NLModelImplN predictedLabelsForTokens:]
  -[NLModelImplN labelMap]
  -[NLModelImplN numberOfTrainingInstances]
  -[NLModelImplN predictedLabelsDictionaryForString:]


NLModelTrainer : NSObject /usr/lib/libc++.1.dylib
 @property  NLModelConfiguration *configuration
 @property  NLDataSet *dataSet
 @property  NSDictionary *options
 @property  <NLModelTrainerDelegate> *delegate
 @property  NLModel *trainedModel
 @property  NSDictionary *testResults

  // class methods
  +[NLModelTrainer modelTrainerWithConfiguration:dataSet:options:delegate:]

  // instance methods
  -[NLModelTrainer options]
  -[NLModelTrainer delegate]
  -[NLModelTrainer .cxx_destruct]
  -[NLModelTrainer model]
  -[NLModelTrainer setModel:]
  -[NLModelTrainer configuration]
  -[NLModelTrainer logMessage:]
  -[NLModelTrainer shouldStop]
  -[NLModelTrainer dataSet]
  -[NLModelTrainer trainModel]
  -[NLModelTrainer trainedModel]
  -[NLModelTrainer initWithConfiguration:dataSet:options:delegate:]
  -[NLModelTrainer modelImplClass]
  -[NLModelTrainer testResults]
  -[NLModelTrainer trainer:logMessage:]
  -[NLModelTrainer trainerShouldStop:]


NLLogCategory : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *loggingSubsystem
 @property  NSObject<OS_os_log> *internal
 @property  NSString *loggingCategory

  // class methods
  +[NLLogCategory initialize]
  +[NLLogCategory categoryWithName:inSubsystem:]
  +[NLLogCategory categoryWithName:]
  +[NLLogCategory defaultCategory]
  +[NLLogCategory _addCategory:inSubsystem:]
  +[NLLogCategory _getCategory:]

  // instance methods
  -[NLLogCategory .cxx_destruct]
  -[NLLogCategory internal]
  -[NLLogCategory initCategory:inSubsystem:]
  -[NLLogCategory loggingCategory]
  -[NLLogCategory loggingSubsystem]


NLPMLSequenceModel : NLModel <MLCustomModel>
 @property  MLModelDescription *modelDescription

  // instance methods
  -[NLPMLSequenceModel .cxx_destruct]
  -[NLPMLSequenceModel modelDescription]
  -[NLPMLSequenceModel predictionFromFeatures:options:error:]
  -[NLPMLSequenceModel initWithModelDescription:parameterDictionary:error:]


NLPMLClassifierModel : NLModel <MLCustomModel>
 @property  MLModelDescription *modelDescription

  // instance methods
  -[NLPMLClassifierModel .cxx_destruct]
  -[NLPMLClassifierModel modelDescription]
  -[NLPMLClassifierModel predictionFromFeatures:options:error:]
  -[NLPMLClassifierModel initWithModelDescription:parameterDictionary:error:]


NLTokenizer : NSObject /usr/lib/libc++.1.dylib
 @property  long long unit
 @property  NSString *string

  // instance methods
  -[NLTokenizer string]
  -[NLTokenizer dealloc]
  -[NLTokenizer setString:]
  -[NLTokenizer .cxx_destruct]
  -[NLTokenizer unit]
  -[NLTokenizer language]
  -[NLTokenizer setLanguage:]
  -[NLTokenizer tokenRangeAtIndex:]
  -[NLTokenizer initWithUnit:]
  -[NLTokenizer enumerateTokensInRange:usingBlock:]
  -[NLTokenizer tokensForRange:]


NLModelImplM : NLModelImpl
  // instance methods
  -[NLModelImplM dealloc]
  -[NLModelImplM .cxx_destruct]
  -[NLModelImplM configuration]
  -[NLModelImplM predictedLabelForString:]
  -[NLModelImplM initWithModelData:configuration:labelMap:vocabularyMap:documentFrequencyMap:customEmbeddingData:trainingInfo:]
  -[NLModelImplM initWithModelTrainer:]
  -[NLModelImplM modelData]
  -[NLModelImplM predictedLabelsForTokens:]
  -[NLModelImplM labelMap]
  -[NLModelImplM vocabularyMap]
  -[NLModelImplM numberOfTrainingInstances]
  -[NLModelImplM initWithOwnedModelObject:configuration:labelMap:vocabularyMap:numberOfTrainingInstances:]


NLModelConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  long long type
 @property  NSString *language
 @property  unsigned long revision

  // class methods
  +[NLModelConfiguration supportsSecureCoding]
  +[NLModelConfiguration defaultModelConfigurationForType:options:error:]
  +[NLModelConfiguration defaultModelConfigurationForType:]
  +[NLModelConfiguration currentRevisionForType:]
  +[NLModelConfiguration supportedRevisionsForType:]

  // instance methods
  -[NLModelConfiguration isEqual:]
  -[NLModelConfiguration copyWithZone:]
  -[NLModelConfiguration options]
  -[NLModelConfiguration type]
  -[NLModelConfiguration encodeWithCoder:]
  -[NLModelConfiguration initWithCoder:]
  -[NLModelConfiguration .cxx_destruct]
  -[NLModelConfiguration language]
  -[NLModelConfiguration revision]
  -[NLModelConfiguration embeddingData]
  -[NLModelConfiguration initWithModelType:options:error:]
  -[NLModelConfiguration embeddingURL]
  -[NLModelConfiguration embeddingModel]


NLDataInstance : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *string
 @property  NSString *label
 @property  NSArray *tokens
 @property  NSArray *labels

  // instance methods
  -[NLDataInstance string]
  -[NLDataInstance label]
  -[NLDataInstance labels]
  -[NLDataInstance tokens]
  -[NLDataInstance instanceDictionary]
  -[NLDataInstance initWithString:label:]
  -[NLDataInstance initWithLine:tokenizer:]
  -[NLDataInstance formattedLineWithLabelMap:vocabularyMap:]
  -[NLDataInstance locatorsWithIndex:parameters:tagger:tokenizer:]
  -[NLDataInstance subInstanceWithLocator:tokenizer:]


NLSequenceModelDataInstance : NLDataInstance
  // class methods
  +[NLSequenceModelDataInstance readInstancesFromString:tokenizer:]

  // instance methods
  -[NLSequenceModelDataInstance string]
  -[NLSequenceModelDataInstance .cxx_destruct]
  -[NLSequenceModelDataInstance label]
  -[NLSequenceModelDataInstance labels]
  -[NLSequenceModelDataInstance tokens]
  -[NLSequenceModelDataInstance initWithTokens:labels:]
  -[NLSequenceModelDataInstance instanceDictionary]
  -[NLSequenceModelDataInstance initWithLine:tokenizer:]
  -[NLSequenceModelDataInstance formattedLineWithLabelMap:vocabularyMap:]
  -[NLSequenceModelDataInstance locatorsWithIndex:parameters:tagger:tokenizer:]
  -[NLSequenceModelDataInstance subInstanceWithLocator:tokenizer:]


NLClassifierModelDataInstance : NLDataInstance
  // class methods
  +[NLClassifierModelDataInstance readInstancesFromString:tokenizer:]

  // instance methods
  -[NLClassifierModelDataInstance string]
  -[NLClassifierModelDataInstance .cxx_destruct]
  -[NLClassifierModelDataInstance label]
  -[NLClassifierModelDataInstance labels]
  -[NLClassifierModelDataInstance tokens]
  -[NLClassifierModelDataInstance initWithString:label:tokenizer:]
  -[NLClassifierModelDataInstance instanceDictionary]
  -[NLClassifierModelDataInstance initWithString:label:]
  -[NLClassifierModelDataInstance initWithLine:tokenizer:]
  -[NLClassifierModelDataInstance formattedLineWithLabelMap:vocabularyMap:]
  -[NLClassifierModelDataInstance locatorsWithIndex:parameters:tagger:tokenizer:]
  -[NLClassifierModelDataInstance subInstanceWithLocator:tokenizer:]


NLDataInstanceLocator : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long instanceIndex
 @property  {_NSRange=QQ} rangeOfCharacters
 @property  {_NSRange=QQ} rangeOfTokens

  // instance methods
  -[NLDataInstanceLocator initWithInstanceIndex:rangeOfCharacters:rangeOfTokens:]
  -[NLDataInstanceLocator rangeOfTokens]
  -[NLDataInstanceLocator rangeOfCharacters]
  -[NLDataInstanceLocator instanceIndex]


NLDataProvider : NSObject /usr/lib/libc++.1.dylib
 @property  NLModelConfiguration *configuration
 @property  unsigned long numberOfInstances
 @property  NSString *recognizedLanguage

  // instance methods
  -[NLDataProvider dealloc]
  -[NLDataProvider .cxx_destruct]
  -[NLDataProvider configuration]
  -[NLDataProvider tokenizer]
  -[NLDataProvider numberOfTokens]
  -[NLDataProvider numberOfLabels]
  -[NLDataProvider labelMap]
  -[NLDataProvider vocabularyMap]
  -[NLDataProvider documentFrequencyMap]
  -[NLDataProvider numberOfInstances]
  -[NLDataProvider instanceAtIndex:]
  -[NLDataProvider inverseLabelMap]
  -[NLDataProvider initWithConfiguration:dataURL:]
  -[NLDataProvider generateMapsWithModelTrainer:]
  -[NLDataProvider _generateMapsWithModelTrainer:]
  -[NLDataProvider _generateMaps]
  -[NLDataProvider _performLanguageRecognition]
  -[NLDataProvider numberOfVocabularyEntries]
  -[NLDataProvider recognizedLanguage]


NLDataSet : NSObject /usr/lib/libc++.1.dylib
 @property  NLModelConfiguration *configuration
 @property  unsigned long numberOfTrainingInstances
 @property  unsigned long numberOfValidationInstances
 @property  unsigned long numberOfTestInstances

  // class methods
  +[NLDataSet dataSetWithDataSet:constraintParameters:modelTrainer:]

  // instance methods
  -[NLDataSet .cxx_destruct]
  -[NLDataSet configuration]
  -[NLDataSet numberOfLabels]
  -[NLDataSet labelMap]
  -[NLDataSet vocabularyMap]
  -[NLDataSet documentFrequencyMap]
  -[NLDataSet dataProviderOfType:]
  -[NLDataSet numberOfTrainingInstances]
  -[NLDataSet inverseLabelMap]
  -[NLDataSet initWithConfiguration:trainingDataURL:validationDataURL:testDataURL:]
  -[NLDataSet numberOfValidationInstances]
  -[NLDataSet numberOfVocabularyEntries]
  -[NLDataSet initWithConfiguration:trainingDataProvider:validationDataProvider:testDataProvider:]
  -[NLDataSet initWithConfiguration:dataProvider:validationSplit:testingSplit:]
  -[NLDataSet numberOfTestInstances]
  -[NLDataSet trainingInstanceAtIndex:]
  -[NLDataSet validationInstanceAtIndex:]
  -[NLDataSet testInstanceAtIndex:]


NLConstrainedDataProvider : NLDataProvider
  // instance methods
  -[NLConstrainedDataProvider .cxx_destruct]
  -[NLConstrainedDataProvider configuration]
  -[NLConstrainedDataProvider tokenizer]
  -[NLConstrainedDataProvider numberOfLabels]
  -[NLConstrainedDataProvider labelMap]
  -[NLConstrainedDataProvider vocabularyMap]
  -[NLConstrainedDataProvider documentFrequencyMap]
  -[NLConstrainedDataProvider numberOfInstances]
  -[NLConstrainedDataProvider instanceAtIndex:]
  -[NLConstrainedDataProvider inverseLabelMap]
  -[NLConstrainedDataProvider _generateMaps]
  -[NLConstrainedDataProvider numberOfVocabularyEntries]
  -[NLConstrainedDataProvider initWithDataProvider:parameters:modelTrainer:]


NLConcatenatedDataProvider : NLDataProvider
  // instance methods
  -[NLConcatenatedDataProvider .cxx_destruct]
  -[NLConcatenatedDataProvider configuration]
  -[NLConcatenatedDataProvider tokenizer]
  -[NLConcatenatedDataProvider initWithDataProviders:]
  -[NLConcatenatedDataProvider numberOfLabels]
  -[NLConcatenatedDataProvider labelMap]
  -[NLConcatenatedDataProvider vocabularyMap]
  -[NLConcatenatedDataProvider documentFrequencyMap]
  -[NLConcatenatedDataProvider numberOfInstances]
  -[NLConcatenatedDataProvider instanceAtIndex:]
  -[NLConcatenatedDataProvider inverseLabelMap]
  -[NLConcatenatedDataProvider _generateMaps]
  -[NLConcatenatedDataProvider numberOfVocabularyEntries]


NLSplitDataProvider : NLDataProvider
  // instance methods
  -[NLSplitDataProvider .cxx_destruct]
  -[NLSplitDataProvider configuration]
  -[NLSplitDataProvider tokenizer]
  -[NLSplitDataProvider numberOfLabels]
  -[NLSplitDataProvider labelMap]
  -[NLSplitDataProvider vocabularyMap]
  -[NLSplitDataProvider documentFrequencyMap]
  -[NLSplitDataProvider numberOfInstances]
  -[NLSplitDataProvider instanceAtIndex:]
  -[NLSplitDataProvider inverseLabelMap]
  -[NLSplitDataProvider initWithDataProvider:indexes:]
  -[NLSplitDataProvider _generateMaps]
  -[NLSplitDataProvider numberOfVocabularyEntries]


NLDataEnumerator : NSObject /usr/lib/libc++.1.dylib
 @property  NLDataProvider *dataProvider
 @property  unsigned long index

  // instance methods
  -[NLDataEnumerator .cxx_destruct]
  -[NLDataEnumerator index]
  -[NLDataEnumerator shuffle]
  -[NLDataEnumerator dataProvider]
  -[NLDataEnumerator initWithDataProvider:]
  -[NLDataEnumerator rewind]
  -[NLDataEnumerator instanceAtIndex:]
  -[NLDataEnumerator nextInstance]
  -[NLDataEnumerator initWithDataProvider:numberGenerator:]
  -[NLDataEnumerator rewindAndShuffle:]


NLXPCSpellServerClient : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[NLXPCSpellServerClient spellServerClient]
  +[NLXPCSpellServerClient requestAssetsForLanguage:]

  // instance methods
  -[NLXPCSpellServerClient dealloc]
  -[NLXPCSpellServerClient isValid]
  -[NLXPCSpellServerClient .cxx_destruct]
  -[NLXPCSpellServerClient connection]
  -[NLXPCSpellServerClient sendCommand:]
  -[NLXPCSpellServerClient initWithServerName:]
  -[NLXPCSpellServerClient serverName]


NLModelImplX : NLModelImpl
  // instance methods
  -[NLModelImplX dealloc]
  -[NLModelImplX .cxx_destruct]
  -[NLModelImplX systemVersion]
  -[NLModelImplX configuration]
  -[NLModelImplX predictedLabelForString:]
  -[NLModelImplX initWithModelData:configuration:labelMap:vocabularyMap:documentFrequencyMap:customEmbeddingData:trainingInfo:]
  -[NLModelImplX initWithModelTrainer:]
  -[NLModelImplX modelData]
  -[NLModelImplX predictedLabelsForTokens:]
  -[NLModelImplX labelMap]
  -[NLModelImplX trainingInfo]
  -[NLModelImplX customEmbeddingData]
  -[NLModelImplX numberOfTrainingInstances]


NLEmbedding : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long dimension
 @property  unsigned long vocabularySize
 @property  NSString *language
 @property  unsigned long revision

  // class methods
  +[NLEmbedding wordEmbeddingForLanguage:]
  +[NLEmbedding wordEmbeddingForLanguage:revision:]
  +[NLEmbedding contextualWordEmbeddingForLanguage:revision:]
  +[NLEmbedding embeddingWithData:error:]
  +[NLEmbedding _embeddingWithContentsOfURL:error:]
  +[NLEmbedding _embeddingWithData:error:]
  +[NLEmbedding contextualWordEmbeddingForLanguage:]
  +[NLEmbedding currentRevisionForLanguage:]
  +[NLEmbedding _writeEmbeddingForDictionary:language:revision:toURL:orData:error:]
  +[NLEmbedding embeddingDataForDictionary:language:revision:error:]
  +[NLEmbedding modelDescriptionForEmbedding:]
  +[NLEmbedding supportedRevisionsForLanguage:]
  +[NLEmbedding writeEmbeddingForDictionary:language:revision:toURL:error:]
  +[NLEmbedding writeEmbeddingMLModelForDictionary:language:revision:toURL:options:error:]
  +[NLEmbedding embeddingWithContentsOfURL:error:]
  +[NLEmbedding embeddingWithMLModel:error:]

  // instance methods
  -[NLEmbedding dealloc]
  -[NLEmbedding initWithContentsOfURL:error:]
  -[NLEmbedding containsString:]
  -[NLEmbedding initWithLocale:]
  -[NLEmbedding dimension]
  -[NLEmbedding initWithData:error:]
  -[NLEmbedding language]
  -[NLEmbedding revision]
  -[NLEmbedding initWithMLModel:error:]
  -[NLEmbedding neighborsForString:maximumCount:maximumDistance:distanceType:]
  -[NLEmbedding initWithNLModel:error:]
  -[NLEmbedding vectorsForSentences:maxTokens:]
  -[NLEmbedding _createEmbeddingRefWithContentsOfURL:]
  -[NLEmbedding _createEmbeddingRefWithData:]
  -[NLEmbedding initContextualEmbeddingWithLocale:]
  -[NLEmbedding distanceBetweenString:andString:distanceType:]
  -[NLEmbedding enumerateNeighborsForString:maximumCount:maximumDistance:distanceType:usingBlock:]
  -[NLEmbedding enumerateNeighborsForVector:maximumCount:maximumDistance:distanceType:usingBlock:]
  -[NLEmbedding neighborsForVector:maximumCount:maximumDistance:distanceType:]
  -[NLEmbedding vectorForString:]
  -[NLEmbedding vocabularySize]
  -[NLEmbedding _initWithContentsOfURL:error:]
  -[NLEmbedding _initWithData:error:]
  -[NLEmbedding enumerateNeighborsForString:maximumCount:distanceType:usingBlock:]
  -[NLEmbedding neighborsForString:maximumCount:distanceType:]
  -[NLEmbedding enumerateNeighborsForVector:maximumCount:distanceType:usingBlock:]
  -[NLEmbedding neighborsForVector:maximumCount:distanceType:]
  -[NLEmbedding getVector:forString:]


NLModelImplE : NLModelImpl
  // instance methods
  -[NLModelImplE .cxx_destruct]
  -[NLModelImplE systemVersion]
  -[NLModelImplE predictedLabelForString:]
  -[NLModelImplE initWithModelData:configuration:labelMap:vocabularyMap:documentFrequencyMap:customEmbeddingData:trainingInfo:]
  -[NLModelImplE initWithModelTrainer:]
  -[NLModelImplE modelData]
  -[NLModelImplE predictedLabelsForTokens:]
  -[NLModelImplE embedding]
  -[NLModelImplE embeddingData]


01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLAppleGazetteer 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLAppleGazetteerParameters 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLAppleTextClassifier 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLAppleTextClassifierParameters 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLAppleWordEmbedding 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLAppleWordEmbeddingParameters 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLAppleWordTagger 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLAppleWordTaggerParameters 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLDictionaryFeatureProvider 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLFeatureValue 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLModel 
01 00 0300 /System/Library/Frameworks/CoreML.framework/CoreML: MLSequence 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
